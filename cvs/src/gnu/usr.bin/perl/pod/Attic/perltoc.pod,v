head	1.13;
access;
symbols
	OPENBSD_4_6:1.12.0.6
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.2
	OPENBSD_4_5_BASE:1.12
	PERL_5_10_0:1.1.1.11
	OPENBSD_4_4:1.11.0.10
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.8
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.6
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.4
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.2
	OPENBSD_4_0_BASE:1.11
	PERL_5_8_8:1.1.1.10
	OPENBSD_3_9:1.10.0.6
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.4
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	PERL_5_8_6:1.1.1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	PERL_5_8_5:1.1.1.8
	PERL_5_8_3:1.1.1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	PERL_5_8_2:1.1.1.6
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	PERL_5_8_0:1.1.1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	PERL_5_6_1:1.1.1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;


1.13
date	2009.10.12.18.24.48;	author millert;	state dead;
branches;
next	1.12;

1.12
date	2008.09.29.17.36.17;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.28.19.23.11;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2005.01.15.21.30.38;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2004.08.09.18.10.16;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.07.21.33.09;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.03.03.02.46;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.27.22.25.34;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.24.18.35.59;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.07.40;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.52.20;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.59.32;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.13.05;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.13.05;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.41.01;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.10.32;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2001.05.24.18.24.50;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2002.10.27.22.15.07;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.12.03.02.44.26;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2004.04.07.21.13.37;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2004.08.09.17.48.25;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2005.01.15.21.18.05;	author millert;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2006.03.28.18.49.31;	author millert;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2008.09.29.17.18.55;	author millert;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Merge in perl 5.10.1
@
text
@
# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is autogenerated by buildtoc from all the other pods.
# Edit those files and run buildtoc --build-toc to effect changes.

=head1 NAME

perltoc - perl documentation table of contents

=head1 DESCRIPTION

This page provides a brief table of contents for the rest of the Perl
documentation set.  It is meant to be scanned quickly or grepped
through to locate the proper section you're looking for.

=head1 BASIC DOCUMENTATION

=head2 perl - Practical Extraction and Report Language

=over 4

=item SYNOPSIS

=over 4

=item Overview

=item Tutorials

=item Reference Manual

=item Internals and C Language Interface

=item Miscellaneous

=item Language-Specific

=item Platform-Specific

=back

=item DESCRIPTION

=item AVAILABILITY

=item ENVIRONMENT

=item AUTHOR

=item FILES

=item SEE ALSO

=item DIAGNOSTICS

=item BUGS

=item NOTES

=back

=head2 perlintro -- a brief introduction and overview of Perl

=over 4

=item DESCRIPTION

=over 4

=item What is Perl?

=item Running Perl programs

=item Safety net

=item Basic syntax overview

=item Perl variable types

Scalars, Arrays, Hashes

=item Variable scoping

=item Conditional and looping constructs

if, while, for, foreach

=item Builtin operators and functions

Arithmetic, Numeric comparison, String comparison, Boolean logic,
Miscellaneous

=item Files and I/O

=item Regular expressions

Simple matching, Simple substitution, More complex regular expressions,
Parentheses for capturing, Other regexp features

=item Writing subroutines

=item OO Perl

=item Using Perl modules

=back

=item AUTHOR

=back

=head2 perlreftut - Mark's very short tutorial about references

=over 4

=item DESCRIPTION

=item Who Needs Complicated Data Structures?

=item The Solution

=item Syntax

=over 4

=item Making References

=item Using References

=item An Example

=item Arrow Rule

=back

=item Solution

=item The Rest

=item Summary

=item Credits

=over 4

=item Distribution Conditions

=back

=back

=head2 perldsc - Perl Data Structures Cookbook

=over 4

=item DESCRIPTION

arrays of arrays, hashes of arrays, arrays of hashes, hashes of hashes,
more elaborate constructs

=item REFERENCES
X<reference> X<dereference> X<dereferencing> X<pointer>

=item COMMON MISTAKES

=item CAVEAT ON PRECEDENCE
X<dereference, precedence> X<dereferencing, precedence>

=item WHY YOU SHOULD ALWAYS C<use strict>

=item DEBUGGING
X<data structure, debugging> X<complex data structure, debugging>
X<AoA, debugging> X<HoA, debugging> X<AoH, debugging> X<HoH, debugging>
X<array of arrays, debugging> X<hash of arrays, debugging>
X<array of hashes, debugging> X<hash of hashes, debugging>

=item CODE EXAMPLES

=item ARRAYS OF ARRAYS
X<array of arrays> X<AoA>

=over 4

=item Declaration of an ARRAY OF ARRAYS

=item Generation of an ARRAY OF ARRAYS

=item Access and Printing of an ARRAY OF ARRAYS

=back

=item HASHES OF ARRAYS
X<hash of arrays> X<HoA>

=over 4

=item Declaration of a HASH OF ARRAYS

=item Generation of a HASH OF ARRAYS

=item Access and Printing of a HASH OF ARRAYS

=back

=item ARRAYS OF HASHES
X<array of hashes> X<AoH>

=over 4

=item Declaration of an ARRAY OF HASHES

=item Generation of an ARRAY OF HASHES

=item Access and Printing of an ARRAY OF HASHES

=back

=item HASHES OF HASHES
X<hass of hashes> X<HoH>

=over 4

=item Declaration of a HASH OF HASHES

=item Generation of a HASH OF HASHES

=item Access and Printing of a HASH OF HASHES

=back

=item MORE ELABORATE RECORDS
X<record> X<structure> X<struct>

=over 4

=item Declaration of MORE ELABORATE RECORDS

=item Declaration of a HASH OF COMPLEX RECORDS

=item Generation of a HASH OF COMPLEX RECORDS

=back

=item Database Ties

=item SEE ALSO

=item AUTHOR

=back

=head2 perllol - Manipulating Arrays of Arrays in Perl

=over 4

=item DESCRIPTION

=over 4

=item Declaration and Access of Arrays of Arrays

=item Growing Your Own

=item Access and Printing

=item Slices

=back

=item SEE ALSO

=item AUTHOR

=back

=head2 perlrequick - Perl regular expressions quick start

=over 4

=item DESCRIPTION

=item The Guide

=over 4

=item Simple word matching

=item Using character classes

=item Matching this or that

=item Grouping things and hierarchical matching

=item Extracting matches

=item Matching repetitions

=item More matching

=item Search and replace

=item The split operator

=back

=item BUGS

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=over 4

=item Acknowledgments

=back

=back

=head2 perlretut - Perl regular expressions tutorial

=over 4

=item DESCRIPTION

=item Part 1: The basics

=over 4

=item Simple word matching

=item Using character classes

=item Matching this or that

=item Grouping things and hierarchical matching

=item Extracting matches

=item Backreferences

=item Relative backreferences

=item Named backreferences

=item Alternative capture group numbering

=item Position information

=item Non-capturing groupings

=item Matching repetitions

=item Possessive quantifiers

=item Building a regexp

=item Using regular expressions in Perl

=back

=item Part 2: Power tools

=over 4

=item More on characters, strings, and character classes

=item Compiling and saving regular expressions

=item Composing regular expressions at runtime

=item Embedding comments and modifiers in a regular expression

=item Looking ahead and looking behind

=item Using independent subexpressions to prevent backtracking

=item Conditional expressions

=item Defining named patterns

=item Recursive patterns

=item A bit of magic: executing Perl code in a regular expression

=item Backtracking control verbs

=item Pragmas and debugging

=back

=item BUGS

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=over 4

=item Acknowledgments

=back

=back

=head2 perlboot - Beginner's Object-Oriented Tutorial

=over 4

=item DESCRIPTION

=over 4

=item If we could talk to the animals...

=item Introducing the method invocation arrow

=item Invoking a barnyard

=item The extra parameter of method invocation

=item Calling a second method to simplify things

=item Inheriting the windpipes

=item A few notes about @@ISA

=item Overriding the methods

=item Starting the search from a different place

=item The SUPER way of doing things

=item Where we're at so far...

=item A horse is a horse, of course of course -- or is it?

=item Invoking an instance method

=item Accessing the instance data

=item How to build a horse

=item Inheriting the constructor

=item Making a method work with either classes or instances

=item Adding parameters to a method

=item More interesting instances

=item A horse of a different color

=item Summary

=back

=item SEE ALSO

=item COPYRIGHT

=back

=head2 perltoot - Tom's object-oriented tutorial for perl

=over 4

=item DESCRIPTION

=item Creating a Class

=over 4

=item Object Representation

=item Class Interface

=item Constructors and Instance Methods

=item Planning for the Future: Better Constructors

=item Destructors

=item Other Object Methods

=back

=item Class Data

=over 4

=item Accessing Class Data

=item Debugging Methods

=item Class Destructors

=item Documenting the Interface

=back

=item Aggregation

=item Inheritance

=over 4

=item Overridden Methods

=item Multiple Inheritance

=item UNIVERSAL: The Root of All Objects

=item Deeper UNIVERSAL details

=back

=item Alternate Object Representations

=over 4

=item Arrays as Objects

=item Closures as Objects

=back

=item AUTOLOAD: Proxy Methods

=over 4

=item Autoloaded Data Methods

=item Inherited Autoloaded Data Methods

=back

=item Metaclassical Tools

=over 4

=item Class::Struct

=item Data Members as Variables

=back

=item NOTES

=over 4

=item Object Terminology

=back

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=item COPYRIGHT

=over 4

=item Acknowledgments

=back

=back

=head2 perltooc - Tom's OO Tutorial for Class Data in Perl

=over 4

=item DESCRIPTION

=item Class Data in a Can

=item Class Data as Package Variables

=over 4

=item Putting All Your Eggs in One Basket

=item Inheritance Concerns

=item The Eponymous Meta-Object

=item Indirect References to Class Data

=item Monadic Classes

=item Translucent Attributes

=back

=item Class Data as Lexical Variables

=over 4

=item Privacy and Responsibility 

=item File-Scoped Lexicals

=item More Inheritance Concerns

=item Locking the Door and Throwing Away the Key

=item Translucency Revisited

=back

=item NOTES

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=item ACKNOWLEDGEMENTS

=item HISTORY

=back

=head2 perlbot - Bag'o Object Tricks (the BOT)

=over 4

=item DESCRIPTION

=item OO SCALING TIPS

=item INSTANCE VARIABLES

=item SCALAR INSTANCE VARIABLES

=item INSTANCE VARIABLE INHERITANCE

=item OBJECT RELATIONSHIPS

=item OVERRIDING SUPERCLASS METHODS

=item USING RELATIONSHIP WITH SDBM

=item THINKING OF CODE REUSE

=item CLASS CONTEXT AND THE OBJECT

=item INHERITING A CONSTRUCTOR

=item DELEGATION

=item SEE ALSO

=back

=head2 perlstyle - Perl style guide

=over 4

=item DESCRIPTION

=back

=head2 perlcheat - Perl 5 Cheat Sheet

=over 4

=item DESCRIPTION

=over 4

=item The sheet

=back

=item ACKNOWLEDGEMENTS

=item AUTHOR

=item SEE ALSO

=back

=head2 perltrap - Perl traps for the unwary

=over 4

=item DESCRIPTION

=over 4

=item Awk Traps

=item C/C++ Traps

=item Sed Traps

=item Shell Traps

=item Perl Traps

=item Perl4 to Perl5 Traps

Discontinuance, Deprecation, and BugFix traps, Parsing Traps, Numerical
Traps, General data type traps, Context Traps - scalar, list contexts,
Precedence Traps, General Regular Expression Traps using s///, etc,
Subroutine, Signal, Sorting Traps, OS Traps, DBM Traps, Unclassified Traps

=item Discontinuance, Deprecation, and BugFix traps

Symbols starting with "_" no longer forced into main, Double-colon valid
package separator in variable name, 2nd and 3rd args to C<splice()> are now
in scalar context, Can't do C<goto> into a block that is optimized away,
Can't use whitespace as variable name or quote delimiter, C<while/if BLOCK
BLOCK> gone, C<**> binds tighter than unary minus, C<foreach> changed when
iterating over a list, C<split> with no args behavior changed, B<-e>
behavior fixed, C<push> returns number of elements in resulting list, Some
error messages differ, C<split()> honors subroutine args, Bugs removed

=item Parsing Traps

Space between . and = triggers syntax error, Better parsing in perl 5,
Function parsing, String interpolation of C<$#array> differs, Perl guesses
on C<map>, C<grep> followed by C<{> if it starts BLOCK or hash ref

=item Numerical Traps

Formatted output and significant digits, Auto-increment operator over
signed int limit deleted, Assignment of return values from numeric equality
tests doesn't work, Bitwise string ops

=item General data type traps

Negative array subscripts now count from the end of array, Setting
C<$#array> lower now discards array elements, Hashes get defined before
use, Glob assignment from localized variable to variable, Assigning
C<undef> to glob, Changes in unary negation (of strings), Modifying of
constants prohibited, C<defined $var> behavior changed, Variable Suicide

=item Context Traps - scalar, list contexts

Elements of argument lists for formats evaluated in list context,
C<caller()> returns false value in scalar context if no caller present,
Comma operator in scalar context gives scalar context to args, C<sprintf()>
prototyped as C<($;@@)>

=item Precedence Traps

LHS vs. RHS of any assignment operator, Semantic errors introduced due to
precedence, Precedence of assignment operators same as the precedence of
assignment, C<open> requires parentheses around filehandle, C<$:>
precedence over C<$::> gone, Precedence of file test operators documented,
C<keys>, C<each>, C<values> are regular named unary operators

=item General Regular Expression Traps using s///, etc.

C<s'$lhs'$rhs'> interpolates on either side, C<m//g> attaches its state to
the searched string, C<m//o> used within an anonymous sub, C<$+> isn't set
to whole match, Substitution now returns null string if it fails,
C<s`lhs`rhs`> is now a normal substitution, Stricter parsing of variables
in regular expressions, C<m?x?> matches only once, Failed matches don't
reset the match variables

=item Subroutine, Signal, Sorting Traps

Barewords that used to look like strings look like subroutine calls,
Reverse is no longer allowed as the name of a sort subroutine, C<warn()>
won't let you specify a filehandle

=item OS Traps

SysV resets signal handler correctly, SysV C<seek()> appends correctly

=item Interpolation Traps

C<@@> always interpolates an array in double-quotish strings, Double-quoted
strings may no longer end with an unescaped $, Arbitrary expressions are
evaluated inside braces within double quotes, C<$$x> now tries to
dereference $x, Creation of hashes on the fly with C<eval "EXPR"> requires
protection, Bugs in earlier perl versions, Array and hash brackets during
interpolation, Interpolation of C<\$$foo{bar}>, C<qq()> string passed to
C<eval> will not find string terminator

=item DBM Traps

Perl5 must have been linked with same dbm/ndbm as the default for
C<dbmopen()>, DBM exceeding limit on the key/value size will cause perl5 to
exit immediately

=item Unclassified Traps

C<require>/C<do> trap using returned value, C<split> on empty string with
LIMIT specified

=back

=back

=head2 perldebtut - Perl debugging tutorial

=over 4

=item DESCRIPTION

=item use strict

=item Looking at data and -w and v

=item help

=item Stepping through code

=item Placeholder for a, w, t, T

=item REGULAR EXPRESSIONS

=item OUTPUT TIPS

=item CGI

=item GUIs

=item SUMMARY

=item SEE ALSO

=item AUTHOR

=item CONTRIBUTORS

=back

=head2 perlfaq - frequently asked questions about Perl

=over 4

=item DESCRIPTION

=over 4

=item Where to get the perlfaq

=item How to contribute to the perlfaq

=item What will happen if you mail your Perl programming problems to the
authors?

=back

=item CREDITS

=item AUTHOR AND COPYRIGHT

=item Table of Contents

perlfaq  - this document, perlfaq1 - General Questions About Perl, perlfaq2
- Obtaining and Learning about Perl, perlfaq3 - Programming Tools, perlfaq4
- Data Manipulation, perlfaq5 - Files and Formats, perlfaq6 - Regular
Expressions, perlfaq7 - General Perl Language Issues, perlfaq8 - System
Interaction, perlfaq9 - Networking

=item The Questions

=over 4

=item L<perlfaq1>: General Questions About Perl

=item L<perlfaq2>: Obtaining and Learning about Perl

=item L<perlfaq3>: Programming Tools

=item L<perlfaq4>: Data Manipulation

=item L<perlfaq5>: Files and Formats

=item L<perlfaq6>: Regular Expressions

=item L<perlfaq7>: General Perl Language Issues

=item L<perlfaq8>: System Interaction

=item L<perlfaq9>: Networking

=back

=back

=head2 perlfaq1 - General Questions About Perl

=over 4

=item DESCRIPTION

=over 4

=item What is Perl?

=item Who supports Perl?  Who develops it?  Why is it free?

=item Which version of Perl should I use?

=item What are Perl 4, Perl 5, or Perl 6?

=item What was Ponie?

=item What is Perl 6?

=item How stable is Perl?

=item Is Perl difficult to learn?

=item How does Perl compare with other languages like Java, Python, REXX,
Scheme, or Tcl?

=item Can I do [task] in Perl?

=item When shouldn't I program in Perl?

=item What's the difference between "perl" and "Perl"?

=item Is it a Perl program or a Perl script?

=item What is a JAPH?

=item Where can I get a list of Larry Wall witticisms?

=item How can I convince others to use Perl?

http://perltraining.com.au/whyperl.html,
http://www.perl.org/advocacy/whyperl.html

=back

=item REVISION

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq2 - Obtaining and Learning about Perl

=over 4

=item DESCRIPTION

=over 4

=item What machines support perl?  Where do I get it?

=item How can I get a binary version of perl?

=item I don't have a C compiler. How can I build my own Perl interpreter?

=item I copied the perl binary from one machine to another, but scripts
don't work.

=item I grabbed the sources and tried to compile but gdbm/dynamic
loading/malloc/linking/... failed.  How do I make it work?

=item What modules and extensions are available for Perl?  What is CPAN? 
What does CPAN/src/... mean?

=item Is there an ISO or ANSI certified version of Perl?

=item Where can I get information on Perl?

=item What are the Perl newsgroups on Usenet?  Where do I post questions?

=item Where should I post source code?

=item Perl Books

References, Tutorials, Task-Oriented, Special Topics

=item Which magazines have Perl content?

=item What mailing lists are there for Perl?

=item Where are the archives for comp.lang.perl.misc?

=item Where can I buy a commercial version of perl?

=item Where do I send bug reports?

=item What is perl.com? Perl Mongers? pm.org? perl.org? cpan.org?

=back

=item REVISION

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq3 - Programming Tools

=over 4

=item DESCRIPTION

=over 4

=item How do I do (anything)?

=item How can I use Perl interactively?

=item Is there a Perl shell?

=item How do I find which modules are installed on my system?

=item How do I debug my Perl programs?

=item How do I profile my Perl programs?

=item How do I cross-reference my Perl programs?

=item Is there a pretty-printer (formatter) for Perl?

=item Is there a ctags for Perl?

=item Is there an IDE or Windows Perl Editor?

Eclipse, Enginsite, Komodo, Open Perl IDE, OptiPerl, PerlBuilder,
visiPerl+, Visual Perl, Zeus, GNU Emacs, MicroEMACS, XEmacs, Jed, Elvis,
Vile, Vim, Codewright, MultiEdit, SlickEdit, Bash, Ksh, Tcsh, Zsh, Affrus,
Alpha, BBEdit and BBEdit Lite

=item Where can I get Perl macros for vi?

=item Where can I get perl-mode for emacs?

=item How can I use curses with Perl?

=item How can I write a GUI (X, Tk, Gtk, etc.) in Perl?
X<GUI> X<Tk> X<Wx> X<WxWidgets> X<Gtk> X<Gtk2> X<CamelBones> X<Qt>

Tk, Wx, Gtk and Gtk2, Win32::GUI, CamelBones, Qt, Athena

=item How can I make my Perl program run faster?

=item How can I make my Perl program take less memory?

Don't slurp!, Use map and grep selectively, Avoid unnecessary quotes and
stringification, Pass by reference, Tie large variables to disk

=item Is it safe to return a reference to local or lexical data?

=item How can I free an array or hash so my program shrinks?

=item How can I make my CGI script more efficient?

=item How can I hide the source for my Perl program?

=item How can I compile my Perl program into byte code or C?

=item How can I get C<#!perl> to work on [MS-DOS,NT,...]?

=item Can I write useful Perl programs on the command line?

=item Why don't Perl one-liners work on my DOS/Mac/VMS system?

=item Where can I learn about CGI or Web programming in Perl?

=item Where can I learn about object-oriented Perl programming?

=item Where can I learn about linking C with Perl?

=item I've read perlembed, perlguts, etc., but I can't embed perl in my C
program; what am I doing wrong?

=item When I tried to run my script, I got this message. What does it mean?

=item What's MakeMaker?

=back

=item REVISION

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq4 - Data Manipulation

=over 4

=item DESCRIPTION

=item Data: Numbers

=over 4

=item Why am I getting long decimals (eg, 19.9499999999999) instead of the
numbers I should be getting (eg, 19.95)?

=item Why is int() broken?

=item Why isn't my octal data interpreted correctly?

=item Does Perl have a round() function?  What about ceil() and floor()? 
Trig functions?

=item How do I convert between numeric representations/bases/radixes?

How do I convert hexadecimal into decimal, How do I convert from decimal to
hexadecimal, How do I convert from octal to decimal, How do I convert from
decimal to octal, How do I convert from binary to decimal, How do I convert
from decimal to binary

=item Why doesn't & work the way I want it to?

=item How do I multiply matrices?

=item How do I perform an operation on a series of integers?

=item How can I output Roman numerals?

=item Why aren't my random numbers random?

=item How do I get a random number between X and Y?

=back

=item Data: Dates

=over 4

=item How do I find the day or week of the year?

=item How do I find the current century or millennium?

=item How can I compare two dates and find the difference?

=item How can I take a string and turn it into epoch seconds?

=item How can I find the Julian Day?

=item How do I find yesterday's date?

=item Does Perl have a Year 2000 problem? Is Perl Y2K compliant?

=back

=item Data: Strings

=over 4

=item How do I validate input?

=item How do I unescape a string?

=item How do I remove consecutive pairs of characters?

=item How do I expand function calls in a string?

=item How do I find matching/nesting anything?

=item How do I reverse a string?

=item How do I expand tabs in a string?

=item How do I reformat a paragraph?

=item How can I access or change N characters of a string?

=item How do I change the Nth occurrence of something?

=item How can I count the number of occurrences of a substring within a
string?

=item How do I capitalize all the words on one line?

=item How can I split a [character] delimited string except when inside
[character]?

=item How do I strip blank space from the beginning/end of a string?

=item How do I pad a string with blanks or pad a number with zeroes?

=item How do I extract selected columns from a string?

=item How do I find the soundex value of a string?

=item How can I expand variables in text strings?

=item What's wrong with always quoting "$vars"?

=item Why don't my E<lt>E<lt>HERE documents work?

There must be no space after the E<lt>E<lt> part, There (probably) should
be a semicolon at the end, You can't (easily) have any space in front of
the tag

=back

=item Data: Arrays

=over 4

=item What is the difference between a list and an array?

=item What is the difference between $array[1] and @@array[1]?

=item How can I remove duplicate elements from a list or array?

=item How can I tell whether a certain element is contained in a list or
array?

=item How do I compute the difference of two arrays?  How do I compute the
intersection of two arrays?

=item How do I test whether two arrays or hashes are equal?

=item How do I find the first array element for which a condition is true?

=item How do I handle linked lists?

=item How do I handle circular lists?

=item How do I shuffle an array randomly?

=item How do I process/modify each element of an array?

=item How do I select a random element from an array?

=item How do I permute N elements of a list?
X<List::Permuter> X<permute> X<Algorithm::Loops> X<Knuth>
X<The Art of Computer Programming> X<Fischer-Krause>

=item How do I sort an array by (anything)?

=item How do I manipulate arrays of bits?

=item Why does defined() return true on empty arrays and hashes?

=back

=item Data: Hashes (Associative Arrays)

=over 4

=item How do I process an entire hash?

=item What happens if I add or remove keys from a hash while iterating over
it?

=item How do I look up a hash element by value?

=item How can I know how many entries are in a hash?

=item How do I sort a hash (optionally by value instead of key)?

=item How can I always keep my hash sorted?
X<hash tie sort DB_File Tie::IxHash>

=item What's the difference between "delete" and "undef" with hashes?

=item Why don't my tied hashes make the defined/exists distinction?

=item How do I reset an each() operation part-way through?

=item How can I get the unique keys from two hashes?

=item How can I store a multidimensional array in a DBM file?

=item How can I make my hash remember the order I put elements into it?

=item Why does passing a subroutine an undefined element in a hash create
it?

=item How can I make the Perl equivalent of a C structure/C++ class/hash or
array of hashes or arrays?

=item How can I use a reference as a hash key?

=back

=item Data: Misc

=over 4

=item How do I handle binary data correctly?

=item How do I determine whether a scalar is a number/whole/integer/float?

=item How do I keep persistent data across program calls?

=item How do I print out or copy a recursive data structure?

=item How do I define methods for every class/object?

=item How do I verify a credit card checksum?

=item How do I pack arrays of doubles or floats for XS code?

=back

=item REVISION

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq5 - Files and Formats

=over 4

=item DESCRIPTION

=over 4

=item How do I flush/unbuffer an output filehandle?  Why must I do this?
X<flush> X<buffer> X<unbuffer> X<autoflush>

=item How do I count the number of lines in a file?
X<file, counting lines> X<lines> X<line>

=item How can I use Perl's C<-i> option from within a program?
X<-i> X<in-place>

=item How can I copy a file?
X<copy> X<file, copy>

=item How do I make a temporary file name?
X<file, temporary>

=item How can I manipulate fixed-record-length files?
X<fixed-length> X<file, fixed-length records>

=item How can I make a filehandle local to a subroutine?  How do I pass
filehandles between subroutines?  How do I make an array of filehandles?
X<filehandle, local> X<filehandle, passing> X<filehandle, reference>

=item How can I use a filehandle indirectly?
X<filehandle, indirect>

=item How can I set up a footer format to be used with write()?
X<footer>

=item How can I write() into a string?
X<write, into a string>

=item How can I open a filehandle to a string?
X<string>, X<open>, X<IO::Scalar>, X<filehandle>

=item How can I translate tildes (~) in a filename?
X<tilde> X<tilde expansion>

=item How come when I open a file read-write it wipes it out?
X<clobber> X<read-write> X<clobbering> X<truncate> X<truncating>

=item Why do I sometimes get an "Argument list too long" when I use
E<lt>*E<gt>?
X<argument list too long>

=item Is there a leak/bug in glob()?
X<glob>

=item How can I open a file with a leading ">" or trailing blanks?
X<filename, special characters>

=item How can I reliably rename a file?
X<rename> X<mv> X<move> X<file, rename> X<ren>

=item How can I lock a file?
X<lock> X<file, lock> X<flock>

=item Why can't I just open(FH, "E<gt>file.lock")?
X<lock, lockfile race condition>

=item I still don't get locking.  I just want to increment the number in
the file.  How can I do this?
X<counter> X<file, counter>

=item All I want to do is append a small amount of text to the end of a
file.  Do I still have to use locking?
X<append> X<file, append>

=item How do I randomly update a binary file?
X<file, binary patch>

=item How do I get a file's timestamp in perl?
X<timestamp> X<file, timestamp>

=item How do I set a file's timestamp in perl?
X<timestamp> X<file, timestamp>

=item How do I print to more than one file at once?
X<print, to multiple files>

=item How can I read in an entire file all at once?
X<slurp> X<file, slurping>

=item How can I read in a file by paragraphs?
X<file, reading by paragraphs>

=item How can I read a single character from a file?  From the keyboard?
X<getc> X<file, reading one character at a time>

=item How can I tell whether there's a character waiting on a filehandle?

=item How do I do a C<tail -f> in perl?
X<tail> X<IO::Handle> X<File::Tail> X<clearerr>

=item How do I dup() a filehandle in Perl?
X<dup>

=item How do I close a file descriptor by number?
X<file, closing file descriptors> X<POSIX> X<close>

=item Why can't I use "C:\temp\foo" in DOS paths?  Why doesn't
`C:\temp\foo.exe` work?
X<filename, DOS issues>

=item Why doesn't glob("*.*") get all the files?
X<glob>

=item Why does Perl let me delete read-only files?  Why does C<-i> clobber
protected files?  Isn't this a bug in Perl?

=item How do I select a random line from a file?
X<file, selecting a random line>

=item Why do I get weird spaces when I print an array of lines?

=back

=item REVISION

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq6 - Regular Expressions

=over 4

=item DESCRIPTION

=over 4

=item How can I hope to use regular expressions without creating illegible
and unmaintainable code?
X<regex, legibility> X<regexp, legibility>
X<regular expression, legibility> X</x>

Comments Outside the Regex, Comments Inside the Regex, Different Delimiters

=item I'm having trouble matching over more than one line.  What's wrong?
X<regex, multiline> X<regexp, multiline> X<regular expression, multiline>

=item How can I pull out lines between two patterns that are themselves on
different lines?
X<..>

=item I put a regular expression into $/ but it didn't work. What's wrong?
X<$/, regexes in> X<$INPUT_RECORD_SEPARATOR, regexes in>
X<$RS, regexes in>

=item How do I substitute case insensitively on the LHS while preserving
case on the RHS?
X<replace, case preserving> X<substitute, case preserving>
X<substitution, case preserving> X<s, case preserving>

=item How can I make C<\w> match national character sets?
X<\w>

=item How can I match a locale-smart version of C</[a-zA-Z]/>?
X<alpha>

=item How can I quote a variable to use in a regex?
X<regex, escaping> X<regexp, escaping> X<regular expression, escaping>

=item What is C</o> really for?
X</o, regular expressions> X<compile, regular expressions>

=item How do I use a regular expression to strip C style comments from a
file?

=item Can I use Perl regular expressions to match balanced text?
X<regex, matching balanced test> X<regexp, matching balanced test>
X<regular expression, matching balanced test>

=item What does it mean that regexes are greedy?  How can I get around it?
X<greedy> X<greediness>

=item How do I process each word on each line?
X<word>

=item How can I print out a word-frequency or line-frequency summary?

=item How can I do approximate matching?
X<match, approximate> X<matching, approximate>

=item How do I efficiently match many regular expressions at once?
X<regex, efficiency> X<regexp, efficiency>
X<regular expression, efficiency>

=item Why don't word-boundary searches with C<\b> work for me?
X<\b>

=item Why does using $&, $`, or $' slow my program down?
X<$MATCH> X<$&> X<$POSTMATCH> X<$'> X<$PREMATCH> X<$`>

=item What good is C<\G> in a regular expression?
X<\G>

=item Are Perl regexes DFAs or NFAs?  Are they POSIX compliant?
X<DFA> X<NFA> X<POSIX>

=item What's wrong with using grep in a void context?
X<grep>

=item How can I match strings with multibyte characters?
X<regex, and multibyte characters> X<regexp, and multibyte characters>
X<regular expression, and multibyte characters> X<martian> X<encoding,
Martian>

=item How do I match a regular expression that's in a variable?
X<regex, in variable> X<eval> X<regex> X<quotemeta> X<\Q, regex>
X<\E, regex>, X<qr//>

=back

=item REVISION

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq7 - General Perl Language Issues

=over 4

=item DESCRIPTION

=over 4

=item Can I get a BNF/yacc/RE for the Perl language?

=item What are all these $@@%&* punctuation signs, and how do I know when to
use them?

=item Do I always/never have to quote my strings or use semicolons and
commas?

=item How do I skip some return values?

=item How do I temporarily block warnings?

=item What's an extension?

=item Why do Perl operators have different precedence than C operators?

=item How do I declare/create a structure?

=item How do I create a module?

=item How do I adopt or take over a module already on CPAN?

=item How do I create a class?

=item How can I tell if a variable is tainted?

=item What's a closure?

=item What is variable suicide and how can I prevent it?

=item How can I pass/return a {Function, FileHandle, Array, Hash, Method,
Regex}?

Passing Variables and Functions, Passing Filehandles, Passing Regexes,
Passing Methods

=item How do I create a static variable?

=item What's the difference between dynamic and lexical (static) scoping? 
Between local() and my()?

=item How can I access a dynamic variable while a similarly named lexical
is in scope?

=item What's the difference between deep and shallow binding?

=item Why doesn't "my($foo) = E<lt>FILEE<gt>;" work right?

=item How do I redefine a builtin function, operator, or method?

=item What's the difference between calling a function as &foo and foo()?

=item How do I create a switch or case statement?

=item How can I catch accesses to undefined variables, functions, or
methods?

=item Why can't a method included in this same file be found?

=item How can I find out my current package?

=item How can I comment out a large block of perl code?

=item How do I clear a package?

=item How can I use a variable as a variable name?

=item What does "bad interpreter" mean?

=back

=item REVISION

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq8 - System Interaction

=over 4

=item DESCRIPTION

=over 4

=item How do I find out which operating system I'm running under?

=item How come exec() doesn't return?

=item How do I do fancy stuff with the keyboard/screen/mouse?

Keyboard, Screen, Mouse

=item How do I print something out in color?

=item How do I read just one key without waiting for a return key?

=item How do I check whether input is ready on the keyboard?

=item How do I clear the screen?

=item How do I get the screen size?

=item How do I ask the user for a password?

=item How do I read and write the serial port?

lockfiles, open mode, end of line, flushing output, non-blocking input

=item How do I decode encrypted password files?

=item How do I start a process in the background?

STDIN, STDOUT, and STDERR are shared, Signals, Zombies

=item How do I trap control characters/signals?

=item How do I modify the shadow password file on a Unix system?

=item How do I set the time and date?

=item How can I sleep() or alarm() for under a second?
X<Time::HiRes> X<BSD::Itimer> X<sleep> X<select>

=item How can I measure time under a second?
X<Time::HiRes> X<BSD::Itimer> X<sleep> X<select>

=item How can I do an atexit() or setjmp()/longjmp()? (Exception handling)

=item Why doesn't my sockets program work under System V (Solaris)?  What
does the error message "Protocol not supported" mean?

=item How can I call my system's unique C functions from Perl?

=item Where do I get the include files to do ioctl() or syscall()?

=item Why do setuid perl scripts complain about kernel problems?

=item How can I open a pipe both to and from a command?

=item Why can't I get the output of a command with system()?

=item How can I capture STDERR from an external command?

=item Why doesn't open() return an error when a pipe open fails?

=item What's wrong with using backticks in a void context?

=item How can I call backticks without shell processing?

=item Why can't my script read from STDIN after I gave it EOF (^D on Unix,
^Z on MS-DOS)?

=item How can I convert my shell script to perl?

=item Can I use perl to run a telnet or ftp session?

=item How can I write expect in Perl?

=item Is there a way to hide perl's command line from programs such as
"ps"?

=item I {changed directory, modified my environment} in a perl script.	How
come the change disappeared when I exited the script?  How do I get my
changes to be visible?

Unix

=item How do I close a process's filehandle without waiting for it to
complete?

=item How do I fork a daemon process?

=item How do I find out if I'm running interactively or not?

=item How do I timeout a slow event?

=item How do I set CPU limits?
X<BSD::Resource> X<limit> X<CPU>

=item How do I avoid zombies on a Unix system?

=item How do I use an SQL database?

=item How do I make a system() exit on control-C?

=item How do I open a file without blocking?

=item How do I tell the difference between errors from the shell and perl?

=item How do I install a module from CPAN?

=item What's the difference between require and use?

=item How do I keep my own module/library directory?

=item How do I add the directory my program lives in to the module/library
search path?

=item How do I add a directory to my include path (@@INC) at runtime?

the PERLLIB environment variable, the PERL5LIB environment variable, the
perl -Idir command line flag, the use lib pragma:

=item What is socket.ph and where do I get it?

=back

=item REVISION

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq9 - Networking

=over 4

=item DESCRIPTION

=over 4

=item What is the correct form of response from a CGI script?

=item My CGI script runs from the command line but not the browser.  (500
Server Error)

=item How can I get better error messages from a CGI program?

=item How do I remove HTML from a string?

=item How do I extract URLs?

=item How do I download a file from the user's machine?  How do I open a
file on another machine?

=item How do I make an HTML pop-up menu with Perl?

=item How do I fetch an HTML file?

=item How do I automate an HTML form submission?

=item How do I decode or create those %-encodings on the web?

=item How do I redirect to another page?

=item How do I put a password on my web pages?

=item How do I edit my .htpasswd and .htgroup files with Perl?

=item How do I make sure users can't enter values into a form that cause my
CGI script to do bad things?

=item How do I parse a mail header?

=item How do I decode a CGI form?

=item How do I check a valid mail address?

=item How do I decode a MIME/BASE64 string?

=item How do I return the user's mail address?

=item How do I send mail?

=item How do I use MIME to make an attachment to a mail message?

=item How do I read mail?

=item How do I find out my hostname, domainname, or IP address?
X<hostname, domainname, IP address, host, domain, hostfqdn, inet_ntoa,
gethostbyname, Socket, Net::Domain, Sys::Hostname>

=item How do I fetch a news article or the active newsgroups?

=item How do I fetch/put an FTP file?

=item How can I do RPC in Perl?

=back

=item REVISION

=item AUTHOR AND COPYRIGHT

=back

=head2 perlsyn - Perl syntax

=over 4

=item DESCRIPTION

=over 4

=item Declarations
X<declaration> X<undef> X<undefined> X<uninitialized>

=item Comments
X<comment> X<#>

=item Simple Statements
X<statement> X<semicolon> X<expression> X<;>

=item Truth and Falsehood
X<truth> X<falsehood> X<true> X<false> X<!> X<not> X<negation> X<0>

=item Statement Modifiers
X<statement modifier> X<modifier> X<if> X<unless> X<while>
X<until> X<foreach> X<for>

=item Compound Statements
X<statement, compound> X<block> X<bracket, curly> X<curly bracket> X<brace>
X<{> X<}> X<if> X<unless> X<while> X<until> X<foreach> X<for> X<continue>

=item Loop Control
X<loop control> X<loop, control> X<next> X<last> X<redo> X<continue>

=item For Loops
X<for> X<foreach>

=item Foreach Loops
X<for> X<foreach>

=item Basic BLOCKs
X<block>

=item Switch statements
X<switch> X<case> X<given> X<when> X<default>

o, o, o, o, o, o, o

=item Goto
X<goto>

=item PODs: Embedded Documentation
X<POD> X<documentation>

=item Plain Old Comments (Not!)
X<comment> X<line> X<#> X<preprocessor> X<eval>

=back

=back

=head2 perldata - Perl data types

=over 4

=item DESCRIPTION

=over 4

=item Variable names
X<variable, name> X<variable name> X<data type> X<type>

=item Context
X<context> X<scalar context> X<list context>

=item Scalar values
X<scalar> X<number> X<string> X<reference>

=item Scalar value constructors
X<scalar, literal> X<scalar, constant>

=item List value constructors
X<list>

=item Subscripts

=item Slices
X<slice> X<array, slice> X<hash, slice>

=item Typeglobs and Filehandles
X<typeglob> X<filehandle> X<*>

=back

=item SEE ALSO

=back

=head2 perlop - Perl operators and precedence

=over 4

=item DESCRIPTION

=over 4

=item Operator Precedence and Associativity
X<operator, precedence> X<precedence> X<associativity>

=item Terms and List Operators (Leftward)
X<list operator> X<operator, list> X<term>

=item The Arrow Operator
X<arrow> X<dereference> X<< -> >>

=item Auto-increment and Auto-decrement
X<increment> X<auto-increment> X<++> X<decrement> X<auto-decrement> X<-->

=item Exponentiation
X<**> X<exponentiation> X<power>

=item Symbolic Unary Operators
X<unary operator> X<operator, unary>

=item Binding Operators
X<binding> X<operator, binding> X<=~> X<!~>

=item Multiplicative Operators
X<operator, multiplicative>

=item Additive Operators
X<operator, additive>

=item Shift Operators
X<shift operator> X<operator, shift> X<<< << >>>
X<<< >> >>> X<right shift> X<left shift> X<bitwise shift>
X<shl> X<shr> X<shift, right> X<shift, left>

=item Named Unary Operators
X<operator, named unary>

=item Relational Operators
X<relational operator> X<operator, relational>

=item Equality Operators
X<equality> X<equal> X<equals> X<operator, equality>

=item Bitwise And
X<operator, bitwise, and> X<bitwise and> X<&>

=item Bitwise Or and Exclusive Or
X<operator, bitwise, or> X<bitwise or> X<|> X<operator, bitwise, xor>
X<bitwise xor> X<^>

=item C-style Logical And
X<&&> X<logical and> X<operator, logical, and>

=item C-style Logical Or
X<||> X<operator, logical, or>

=item C-style Logical Defined-Or
X<//> X<operator, logical, defined-or>

=item Range Operators
X<operator, range> X<range> X<..> X<...>

=item Conditional Operator
X<operator, conditional> X<operator, ternary> X<ternary> X<?:>

=item Assignment Operators
X<assignment> X<operator, assignment> X<=> X<**=> X<+=> X<*=> X<&=>
X<<< <<= >>> X<&&=> X<-=> X</=> X<|=> X<<< >>= >>> X<||=> X<//=> X<.=>
X<%=> X<^=> X<x=>

=item Comma Operator
X<comma> X<operator, comma> X<,>

=item List Operators (Rightward)
X<operator, list, rightward> X<list operator>

=item Logical Not
X<operator, logical, not> X<not>

=item Logical And
X<operator, logical, and> X<and>

=item Logical or, Defined or, and Exclusive Or
X<operator, logical, or> X<operator, logical, xor>
X<operator, logical, defined or> X<operator, logical, exclusive or>
X<or> X<xor>

=item C Operators Missing From Perl
X<operator, missing from perl> X<&> X<*>
X<typecasting> X<(TYPE)>

unary &, unary *, (TYPE)

=item Quote and Quote-like Operators
X<operator, quote> X<operator, quote-like> X<q> X<qq> X<qx> X<qw> X<m>
X<qr> X<s> X<tr> X<'> X<''> X<"> X<""> X<//> X<`> X<``> X<<< << >>>
X<escape sequence> X<escape>

=item Regexp Quote-Like Operators
X<operator, regexp>

qr/STRING/msixpo X<qr> X</i> X</m> X</o> X</s> X</x> X</p>,
m/PATTERN/msixpogc X<m> X<operator, match> X<regexp, options> X<regexp>
X<regex, options> X<regex> X</m> X</s> X</i> X</x> X</p> X</o> X</g> X</c>,
/PATTERN/msixpogc, ?PATTERN? X<?>, s/PATTERN/REPLACEMENT/msixpogce
X<substitute> X<substitution> X<replace> X<regexp, replace> X<regexp,
substitute> X</m> X</s> X</i> X</x> X</p> X</o> X</g> X</c> X</e>

=item Quote-Like Operators
X<operator, quote-like>

q/STRING/ X<q> X<quote, single> X<'> X<''>, 'STRING', qq/STRING/ X<qq>
X<quote, double> X<"> X<"">, "STRING", qx/STRING/ X<qx> X<`> X<``>
X<backtick>, `STRING`, qw/STRING/ X<qw> X<quote, list> X<quote, words>,
tr/SEARCHLIST/REPLACEMENTLIST/cds X<tr> X<y> X<transliterate> X</c> X</d>
X</s>, y/SEARCHLIST/REPLACEMENTLIST/cds, <<EOF X<here-doc> X<heredoc>
X<here-document> X<<< << >>>, Double Quotes, Single Quotes, Backticks

=item Gory details of parsing quoted constructs
X<quote, gory details>

Finding the end, Interpolation X<interpolation>, C<<<'EOF'>,  C<m''>, the
pattern of C<s'''>, C<''>, C<q//>, C<tr'''>, C<y'''>, the replacement of
C<s'''>, C<tr///>, C<y///>, C<"">, C<``>, C<qq//>, C<qx//>, C<< <file*glob>
>>, C<<<"EOF">, the replacement of C<s///>, C<RE> in C<?RE?>, C</RE/>,
C<m/RE/>, C<s/RE/foo/>,, parsing regular expressions X<regexp, parse>,
Optimization of regular expressions X<regexp, optimization>

=item I/O Operators
X<operator, i/o> X<operator, io> X<io> X<while> X<filehandle>
X<< <> >> X<@@ARGV>

=item Constant Folding
X<constant folding> X<folding>

=item No-ops
X<no-op> X<nop>

=item Bitwise String Operators
X<operator, bitwise, string>

=item Integer Arithmetic
X<integer>

=item Floating-point Arithmetic
X<floating-point> X<floating point> X<float> X<real>

=item Bigger Numbers
X<number, arbitrary precision>

=back

=back

=head2 perlsub - Perl subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Private Variables via my()
X<my> X<variable, lexical> X<lexical> X<lexical variable> X<scope, lexical>
X<lexical scope> X<attributes, my>

=item Persistent Private Variables
X<state> X<state variable> X<static> X<variable, persistent> X<variable,
static> X<closure>

=item Temporary Values via local()
X<local> X<scope, dynamic> X<dynamic scope> X<variable, local>
X<variable, temporary>

=item Lvalue subroutines
X<lvalue> X<subroutine, lvalue>

Lvalue subroutines are EXPERIMENTAL

=item Passing Symbol Table Entries (typeglobs)
X<typeglob> X<*>

=item When to Still Use local()
X<local> X<variable, local>

=item Pass by Reference
X<pass by reference> X<pass-by-reference> X<reference>

=item Prototypes
X<prototype> X<subroutine, prototype>

=item Constant Functions
X<constant>

=item Overriding Built-in Functions
X<built-in> X<override> X<CORE> X<CORE::GLOBAL>

=item Autoloading
X<autoloading> X<AUTOLOAD>

=item Subroutine Attributes
X<attribute> X<subroutine, attribute> X<attrs>

=back

=item SEE ALSO

=back

=head2 perlfunc - Perl builtin functions

=over 4

=item DESCRIPTION

=over 4

=item Perl Functions by Category
X<function>

Functions for SCALARs or strings X<scalar> X<string> X<character>, Regular
expressions and pattern matching X<regular expression> X<regex> X<regexp>,
Numeric functions X<numeric> X<number> X<trigonometric> X<trigonometry>,
Functions for real @@ARRAYs X<array>, Functions for list data X<list>,
Functions for real %HASHes X<hash>, Input and output functions X<I/O>
X<input> X<output> X<dbm>, Functions for fixed length data or records,
Functions for filehandles, files, or directories X<file> X<filehandle>
X<directory> X<pipe> X<link> X<symlink>, Keywords related to the control
flow of your Perl program X<control flow>, Keywords related to switch,
Keywords related to scoping, Miscellaneous functions, Functions for
processes and process groups X<process> X<pid> X<process id>, Keywords
related to perl modules X<module>, Keywords related to classes and
object-orientation X<object> X<class> X<package>, Low-level socket
functions X<socket> X<sock>, System V interprocess communication functions
X<IPC> X<System V> X<semaphore> X<shared memory> X<memory> X<message>,
Fetching user and group info X<user> X<group> X<password> X<uid> X<gid> 
X<passwd> X</etc/passwd>, Fetching network info X<network> X<protocol>
X<host> X<hostname> X<IP> X<address> X<service>, Time-related functions
X<time> X<date>, Functions new in perl5 X<perl5>, Functions obsoleted in
perl5

=item Portability
X<portability> X<Unix> X<portable>

=item Alphabetical Listing of Perl Functions

-I<X> FILEHANDLE
X<-r>X<-w>X<-x>X<-o>X<-R>X<-W>X<-X>X<-O>X<-e>X<-z>X<-s>X<-f>X<-d>X<-l>X<-p>
X<-S>X<-b>X<-c>X<-t>X<-u>X<-g>X<-k>X<-T>X<-B>X<-M>X<-A>X<-C>, -I<X> EXPR,
-I<X> DIRHANDLE, -I<X>, abs VALUE X<abs> X<absolute>, abs, accept
NEWSOCKET,GENERICSOCKET X<accept>, alarm SECONDS X<alarm> X<SIGALRM>
X<timer>, alarm, atan2 Y,X X<atan2> X<arctangent> X<tan> X<tangent>, bind
SOCKET,NAME X<bind>, binmode FILEHANDLE, LAYER X<binmode> X<binary> X<text>
X<DOS> X<Windows>, binmode FILEHANDLE, bless REF,CLASSNAME X<bless>, bless
REF, break, caller EXPR X<caller> X<call stack> X<stack> X<stack trace>,
caller, chdir EXPR X<chdir> X<cd> X<directory, change>, chdir FILEHANDLE,
chdir DIRHANDLE, chdir, chmod LIST X<chmod> X<permission> X<mode>, chomp
VARIABLE X<chomp> X<INPUT_RECORD_SEPARATOR> X<$/> X<newline> X<eol>, chomp(
LIST ), chomp, chop VARIABLE X<chop>, chop( LIST ), chop, chown LIST
X<chown> X<owner> X<user> X<group>, chr NUMBER X<chr> X<character> X<ASCII>
X<Unicode>, chr, chroot FILENAME X<chroot> X<root>, chroot, close
FILEHANDLE X<close>, close, closedir DIRHANDLE X<closedir>, connect
SOCKET,NAME X<connect>, continue BLOCK X<continue>, continue, cos EXPR
X<cos> X<cosine> X<acos> X<arccosine>, cos, crypt PLAINTEXT,SALT X<crypt>
X<digest> X<hash> X<salt> X<plaintext> X<password> X<decrypt>
X<cryptography> X<passwd> X<encrypt>, dbmclose HASH X<dbmclose>, dbmopen
HASH,DBNAME,MASK X<dbmopen> X<dbm> X<ndbm> X<sdbm> X<gdbm>, defined EXPR
X<defined> X<undef> X<undefined>, defined, delete EXPR X<delete>, die LIST
X<die> X<throw> X<exception> X<raise> X<$@@> X<abort>, do BLOCK X<do>
X<block>, do SUBROUTINE(LIST) X<do>, do EXPR X<do>, dump LABEL X<dump>
X<core> X<undump>, dump, each HASH X<each> X<hash, iterator>, eof
FILEHANDLE X<eof> X<end of file> X<end-of-file>, eof (), eof, eval EXPR
X<eval> X<try> X<catch> X<evaluate> X<parse> X<execute> X<error, handling>
X<exception, handling>, eval BLOCK, eval, exec LIST X<exec> X<execute>,
exec PROGRAM LIST, exists EXPR X<exists> X<autovivification>, exit EXPR
X<exit> X<terminate> X<abort>, exit, exp EXPR X<exp> X<exponential>
X<antilog> X<antilogarithm> X<e>, exp, fcntl FILEHANDLE,FUNCTION,SCALAR
X<fcntl>, fileno FILEHANDLE X<fileno>, flock FILEHANDLE,OPERATION X<flock>
X<lock> X<locking>, fork X<fork> X<child> X<parent>, format X<format>,
formline PICTURE,LIST X<formline>, getc FILEHANDLE X<getc> X<getchar>
X<character> X<file, read>, getc, getlogin X<getlogin> X<login>,
getpeername SOCKET X<getpeername> X<peer>, getpgrp PID X<getpgrp> X<group>,
getppid X<getppid> X<parent> X<pid>, getpriority WHICH,WHO X<getpriority>
X<priority> X<nice>, getpwnam NAME X<getpwnam> X<getgrnam> X<gethostbyname>
X<getnetbyname> X<getprotobyname> X<getpwuid> X<getgrgid> X<getservbyname>
X<gethostbyaddr> X<getnetbyaddr> X<getprotobynumber> X<getservbyport>
X<getpwent> X<getgrent> X<gethostent> X<getnetent> X<getprotoent>
X<getservent> X<setpwent> X<setgrent> X<sethostent> X<setnetent>
X<setprotoent> X<setservent> X<endpwent> X<endgrent> X<endhostent>
X<endnetent> X<endprotoent> X<endservent>, getgrnam NAME, gethostbyname
NAME, getnetbyname NAME, getprotobyname NAME, getpwuid UID, getgrgid GID,
getservbyname NAME,PROTO, gethostbyaddr ADDR,ADDRTYPE, getnetbyaddr
ADDR,ADDRTYPE, getprotobynumber NUMBER, getservbyport PORT,PROTO, getpwent,
getgrent, gethostent, getnetent, getprotoent, getservent, setpwent,
setgrent, sethostent STAYOPEN, setnetent STAYOPEN, setprotoent STAYOPEN,
setservent STAYOPEN, endpwent, endgrent, endhostent, endnetent,
endprotoent, endservent, getsockname SOCKET X<getsockname>, getsockopt
SOCKET,LEVEL,OPTNAME X<getsockopt>, glob EXPR X<glob> X<wildcard>
X<filename, expansion> X<expand>, glob, gmtime EXPR X<gmtime> X<UTC>
X<Greenwich>, gmtime, goto LABEL X<goto> X<jump> X<jmp>, goto EXPR, goto
&NAME, grep BLOCK LIST X<grep>, grep EXPR,LIST, hex EXPR X<hex>
X<hexadecimal>, hex, import LIST X<import>, index STR,SUBSTR,POSITION
X<index> X<indexOf> X<InStr>, index STR,SUBSTR, int EXPR X<int> X<integer>
X<truncate> X<trunc> X<floor>, int, ioctl FILEHANDLE,FUNCTION,SCALAR
X<ioctl>, join EXPR,LIST X<join>, keys HASH X<keys> X<key>, kill SIGNAL,
LIST X<kill> X<signal>, last LABEL X<last> X<break>, last, lc EXPR X<lc>
X<lowercase>, lc, lcfirst EXPR X<lcfirst> X<lowercase>, lcfirst, length
EXPR X<length> X<size>, length, link OLDFILE,NEWFILE X<link>, listen
SOCKET,QUEUESIZE X<listen>, local EXPR X<local>, localtime EXPR
X<localtime> X<ctime>, localtime, lock THING X<lock>, log EXPR X<log>
X<logarithm> X<e> X<ln> X<base>, log, lstat EXPR X<lstat>, lstat, m//, map
BLOCK LIST X<map>, map EXPR,LIST, mkdir FILENAME,MASK X<mkdir> X<md>
X<directory, create>, mkdir FILENAME, mkdir, msgctl ID,CMD,ARG X<msgctl>,
msgget KEY,FLAGS X<msgget>, msgrcv ID,VAR,SIZE,TYPE,FLAGS X<msgrcv>, msgsnd
ID,MSG,FLAGS X<msgsnd>, my EXPR X<my>, my TYPE EXPR, my EXPR : ATTRS, my
TYPE EXPR : ATTRS, next LABEL X<next> X<continue>, next, no Module VERSION
LIST X<no>, no Module VERSION, no Module LIST, no Module, no VERSION, oct
EXPR X<oct> X<octal> X<hex> X<hexadecimal> X<binary> X<bin>, oct, open
FILEHANDLE,EXPR X<open> X<pipe> X<file, open> X<fopen>, open
FILEHANDLE,MODE,EXPR, open FILEHANDLE,MODE,EXPR,LIST, open
FILEHANDLE,MODE,REFERENCE, open FILEHANDLE, opendir DIRHANDLE,EXPR
X<opendir>, ord EXPR X<ord> X<encoding>, ord, our EXPR X<our> X<global>,
our TYPE EXPR, our EXPR : ATTRS, our TYPE EXPR : ATTRS, pack TEMPLATE,LIST
X<pack>, package NAMESPACE X<package> X<module> X<namespace>, package, pipe
READHANDLE,WRITEHANDLE X<pipe>, pop ARRAY X<pop> X<stack>, pop, pos SCALAR
X<pos> X<match, position>, pos, print FILEHANDLE LIST X<print>, print LIST,
print, printf FILEHANDLE FORMAT, LIST X<printf>, printf FORMAT, LIST,
prototype FUNCTION X<prototype>, push ARRAY,LIST X<push> X<stack>,
q/STRING/, qq/STRING/, qr/STRING/, qx/STRING/, qw/STRING/, quotemeta EXPR
X<quotemeta> X<metacharacter>, quotemeta, rand EXPR X<rand> X<random>,
rand, read FILEHANDLE,SCALAR,LENGTH,OFFSET X<read> X<file, read>, read
FILEHANDLE,SCALAR,LENGTH, readdir DIRHANDLE X<readdir>, readline EXPR,
readline X<readline> X<gets> X<fgets>, readlink EXPR X<readlink>, readlink,
readpipe EXPR, readpipe X<readpipe>, recv SOCKET,SCALAR,LENGTH,FLAGS
X<recv>, redo LABEL X<redo>, redo, ref EXPR X<ref> X<reference>, ref,
rename OLDNAME,NEWNAME X<rename> X<move> X<mv> X<ren>, require VERSION
X<require>, require EXPR, require, reset EXPR X<reset>, reset, return EXPR
X<return>, return, reverse LIST X<reverse> X<rev> X<invert>, rewinddir
DIRHANDLE X<rewinddir>, rindex STR,SUBSTR,POSITION X<rindex>, rindex
STR,SUBSTR, rmdir FILENAME X<rmdir> X<rd> X<directory, remove>, rmdir,
s///, say FILEHANDLE LIST X<say>, say LIST, say, scalar EXPR X<scalar>
X<context>, seek FILEHANDLE,POSITION,WHENCE X<seek> X<fseek> X<filehandle,
position>, seekdir DIRHANDLE,POS X<seekdir>, select FILEHANDLE X<select>
X<filehandle, default>, select, select RBITS,WBITS,EBITS,TIMEOUT X<select>,
semctl ID,SEMNUM,CMD,ARG X<semctl>, semget KEY,NSEMS,FLAGS X<semget>, semop
KEY,OPSTRING X<semop>, send SOCKET,MSG,FLAGS,TO X<send>, send
SOCKET,MSG,FLAGS, setpgrp PID,PGRP X<setpgrp> X<group>, setpriority
WHICH,WHO,PRIORITY X<setpriority> X<priority> X<nice> X<renice>, setsockopt
SOCKET,LEVEL,OPTNAME,OPTVAL X<setsockopt>, shift ARRAY X<shift>, shift,
shmctl ID,CMD,ARG X<shmctl>, shmget KEY,SIZE,FLAGS X<shmget>, shmread
ID,VAR,POS,SIZE X<shmread> X<shmwrite>, shmwrite ID,STRING,POS,SIZE,
shutdown SOCKET,HOW X<shutdown>, sin EXPR X<sin> X<sine> X<asin>
X<arcsine>, sin, sleep EXPR X<sleep> X<pause>, sleep, socket
SOCKET,DOMAIN,TYPE,PROTOCOL X<socket>, socketpair
SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL X<socketpair>, sort SUBNAME LIST
X<sort> X<qsort> X<quicksort> X<mergesort>, sort BLOCK LIST, sort LIST,
splice ARRAY,OFFSET,LENGTH,LIST X<splice>, splice ARRAY,OFFSET,LENGTH,
splice ARRAY,OFFSET, splice ARRAY, split /PATTERN/,EXPR,LIMIT X<split>,
split /PATTERN/,EXPR, split /PATTERN/, split, sprintf FORMAT, LIST
X<sprintf>, format parameter index, flags, vector flag, (minimum) width,
precision, or maximum width X<precision>, size, order of arguments, sqrt
EXPR X<sqrt> X<root> X<square root>, sqrt, srand EXPR X<srand> X<seed>
X<randseed>, srand, stat FILEHANDLE X<stat> X<file, status> X<ctime>, stat
EXPR, stat DIRHANDLE, stat, state EXPR X<state>, state TYPE EXPR, state
EXPR : ATTRS, state TYPE EXPR : ATTRS, study SCALAR X<study>, study, sub
NAME BLOCK X<sub>, sub NAME (PROTO) BLOCK, sub NAME : ATTRS BLOCK, sub NAME
(PROTO) : ATTRS BLOCK, substr EXPR,OFFSET,LENGTH,REPLACEMENT X<substr>
X<substring> X<mid> X<left> X<right>, substr EXPR,OFFSET,LENGTH, substr
EXPR,OFFSET, symlink OLDFILE,NEWFILE X<symlink> X<link> X<symbolic link>
X<link, symbolic>, syscall NUMBER, LIST X<syscall> X<system call>, sysopen
FILEHANDLE,FILENAME,MODE X<sysopen>, sysopen
FILEHANDLE,FILENAME,MODE,PERMS, sysread FILEHANDLE,SCALAR,LENGTH,OFFSET
X<sysread>, sysread FILEHANDLE,SCALAR,LENGTH, sysseek
FILEHANDLE,POSITION,WHENCE X<sysseek> X<lseek>, system LIST X<system>
X<shell>, system PROGRAM LIST, syswrite FILEHANDLE,SCALAR,LENGTH,OFFSET
X<syswrite>, syswrite FILEHANDLE,SCALAR,LENGTH, syswrite FILEHANDLE,SCALAR,
tell FILEHANDLE X<tell>, tell, telldir DIRHANDLE X<telldir>, tie
VARIABLE,CLASSNAME,LIST X<tie>, tied VARIABLE X<tied>, time X<time>
X<epoch>, times X<times>, tr///, truncate FILEHANDLE,LENGTH X<truncate>,
truncate EXPR,LENGTH, uc EXPR X<uc> X<uppercase> X<toupper>, uc, ucfirst
EXPR X<ucfirst> X<uppercase>, ucfirst, umask EXPR X<umask>, umask, undef
EXPR X<undef> X<undefine>, undef, unlink LIST X<unlink> X<delete> X<remove>
X<rm> X<del>, unlink, unpack TEMPLATE,EXPR X<unpack>, unpack TEMPLATE,
untie VARIABLE X<untie>, unshift ARRAY,LIST X<unshift>, use Module VERSION
LIST X<use> X<module> X<import>, use Module VERSION, use Module LIST, use
Module, use VERSION, utime LIST X<utime>, values HASH X<values>, vec
EXPR,OFFSET,BITS X<vec> X<bit> X<bit vector>, wait X<wait>, waitpid
PID,FLAGS X<waitpid>, wantarray X<wantarray> X<context>, warn LIST X<warn>
X<warning> X<STDERR>, write FILEHANDLE X<write>, write EXPR, write, y///

=back

=back

=head2 perlopentut - tutorial on opening things in Perl

=over 4

=item DESCRIPTION

=item Open E<agrave> la shell

=over 4

=item Simple Opens

=item Indirect Filehandles

=item Pipe Opens

=item The Minus File

=item Mixing Reads and Writes

=item Filters 

=back

=item Open E<agrave> la C

=over 4

=item Permissions E<agrave> la mode

=back

=item Obscure Open Tricks

=over 4

=item Re-Opening Files (dups)

=item Dispelling the Dweomer

=item Paths as Opens

=item Single Argument Open

=item Playing with STDIN and STDOUT

=back

=item Other I/O Issues

=over 4

=item Opening Non-File Files

=item Opening Named Pipes

=item Opening Sockets

=item Binary Files

=item File Locking

=item IO Layers

=back

=item SEE ALSO 

=item AUTHOR and COPYRIGHT

=item HISTORY

=back

=head2 perlpacktut - tutorial on C<pack> and C<unpack>

=over 4

=item DESCRIPTION

=item The Basic Principle

=item Packing Text

=item Packing Numbers

=over 4

=item Integers

=item Unpacking a Stack Frame

=item How to Eat an Egg on a Net

=item Byte-order modifiers

=item Floating point Numbers

=back

=item Exotic Templates

=over 4

=item Bit Strings

=item Uuencoding

=item Doing Sums

=item  Unicode

=item Another Portable Binary Encoding

=back

=item Template Grouping

=item Lengths and Widths

=over 4

=item String Lengths

=item Dynamic Templates

=item Counting Repetitions

=back

=item Packing and Unpacking C Structures

=over 4

=item The Alignment Pit

=item Dealing with Endian-ness

=item Alignment, Take 2

=item Alignment, Take 3

=item Pointers for How to Use Them

=back

=item Pack Recipes

=item Funnies Section

=item Authors

=back

=head2 perlpod - the Plain Old Documentation format

=over 4

=item DESCRIPTION

=over 4

=item Ordinary Paragraph
X<POD, ordinary paragraph>

=item Verbatim Paragraph
X<POD, verbatim paragraph> X<verbatim>

=item Command Paragraph
X<POD, command>

C<=head1 I<Heading Text>> X<=head1> X<=head2> X<=head3> X<=head4> X<head1>
X<head2> X<head3> X<head4>, C<=head2 I<Heading Text>>, C<=head3 I<Heading
Text>>, C<=head4 I<Heading Text>>, C<=over I<indentlevel>> X<=over>
X<=item> X<=back> X<over> X<item> X<back>, C<=item I<stuff...>>, C<=back>,
C<=cut> X<=cut> X<cut>, C<=pod> X<=pod> X<pod>, C<=begin I<formatname>>
X<=begin> X<=end> X<=for> X<begin> X<end> X<for>, C<=end I<formatname>>,
C<=for I<formatname> I<text...>>, C<=encoding I<encodingname>> X<=encoding>
X<encoding>

=item Formatting Codes
X<POD, formatting code> X<formatting code>
X<POD, interior sequence> X<interior sequence>

C<IE<lt>textE<gt>> -- italic text X<I> X<< IZ<><> >> X<POD, formatting
code, italic> X<italic>, C<BE<lt>textE<gt>> -- bold text X<B> X<< BZ<><> >>
X<POD, formatting code, bold> X<bold>, C<CE<lt>codeE<gt>> -- code text X<C>
X<< CZ<><> >> X<POD, formatting code, code> X<code>, C<LE<lt>nameE<gt>> --
a hyperlink X<L> X<< LZ<><> >> X<POD, formatting code, hyperlink>
X<hyperlink>, C<EE<lt>escapeE<gt>> -- a character escape X<E> X<< EZ<><> >>
X<POD, formatting code, escape> X<escape>, C<FE<lt>filenameE<gt>> -- used
for filenames X<F> X<< FZ<><> >> X<POD, formatting code, filename>
X<filename>, C<SE<lt>textE<gt>> -- text contains non-breaking spaces X<S>
X<< SZ<><> >> X<POD, formatting code, non-breaking space>  X<non-breaking
space>, C<XE<lt>topic nameE<gt>> -- an index entry X<X> X<< XZ<><> >>
X<POD, formatting code, index entry> X<index entry>, C<ZE<lt>E<gt>> -- a
null (zero-effect) formatting code X<Z> X<< ZZ<><> >> X<POD, formatting
code, null> X<null>

=item The Intent
X<POD, intent of>

=item Embedding Pods in Perl Modules
X<POD, embedding>

=item Hints for Writing Pod

X<podchecker> X<POD, validating>

=back

=item SEE ALSO

=item AUTHOR

=back

=head2 perlpodspec - Plain Old Documentation: format specification and
notes

=over 4

=item DESCRIPTION

=item Pod Definitions

=item Pod Commands

"=head1", "=head2", "=head3", "=head4", "=pod", "=cut", "=over", "=item",
"=back", "=begin formatname", "=end formatname", "=for formatname text...",
"=encoding encodingname"

=item Pod Formatting Codes

C<IE<lt>textE<gt>> -- italic text, C<BE<lt>textE<gt>> -- bold text,
C<CE<lt>codeE<gt>> -- code text, C<FE<lt>filenameE<gt>> -- style for
filenames, C<XE<lt>topic nameE<gt>> -- an index entry, C<ZE<lt>E<gt>> -- a
null (zero-effect) formatting code, C<LE<lt>nameE<gt>> -- a hyperlink,
C<EE<lt>escapeE<gt>> -- a character escape, C<SE<lt>textE<gt>> -- text
contains non-breaking spaces

=item Notes on Implementing Pod Processors

=item About LE<lt>...E<gt> Codes

First:, Second:, Third:, Fourth:, Fifth:, Sixth:

=item About =over...=back Regions

=item About Data Paragraphs and "=begin/=end" Regions

=item SEE ALSO

=item AUTHOR

=back

=head2 perlrun - how to execute the Perl interpreter

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item #! and quoting on non-Unix systems
X<hashbang> X<#!>

OS/2, MS-DOS, Win95/NT, Macintosh, VMS

=item Location of Perl
X<perl, location of interpreter>

=item Command Switches
X<perl, command switches> X<command switches>

B<-0>[I<octal/hexadecimal>] X<-0> X<$/>, B<-a> X<-a> X<autosplit>, B<-C
[I<number/list>]> X<-C>, B<-c> X<-c>, B<-d> X<-d> X<-dt>, B<-dt>,
B<-d:>I<foo[=bar,baz]> X<-d> X<-dt>, B<-dt:>I<foo[=bar,baz]>,
B<-D>I<letters> X<-D> X<DEBUGGING> X<-DDEBUGGING>, B<-D>I<number>, B<-e>
I<commandline> X<-e>, B<-E> I<commandline> X<-E>, B<-f> X<-f>,
B<-F>I<pattern> X<-F>, B<-h> X<-h>, B<-i>[I<extension>] X<-i> X<in-place>,
B<-I>I<directory> X<-I> X<@@INC>, B<-l>[I<octnum>] X<-l> X<$/> X<$\>,
B<-m>[B<->]I<module> X<-m> X<-M>, B<-M>[B<->]I<module>,
B<-M>[B<->]I<'module ...'>, B<-[mM]>[B<->]I<module=arg[,arg]...>, B<-n>
X<-n>, B<-p> X<-p>, B<-P> X<-P>, B<-s> X<-s>, B<-S> X<-S>, B<-t> X<-t>,
B<-T> X<-T>, B<-u> X<-u>, B<-U> X<-U>, B<-v> X<-v>, B<-V> X<-V>,
B<-V:>I<configvar>, B<-w> X<-w>, B<-W> X<-W>, B<-X> X<-X>, B<-x> X<-x>,
B<-x>I<directory>

=back

=item ENVIRONMENT
X<perl, environment variables>

HOME X<HOME>, LOGDIR X<LOGDIR>, PATH X<PATH>, PERL5LIB X<PERL5LIB>,
PERL5OPT X<PERL5OPT>, PERLIO X<PERLIO>, :bytes X<:bytes>, :crlf X<:crlf>,
:mmap X<:mmap>, :perlio X<:perlio>, :pop X<:pop>, :raw X<:raw>, :stdio
X<:stdio>, :unix X<:unix>, :utf8 X<:utf8>, :win32 X<:win32>, PERLIO_DEBUG
X<PERLIO_DEBUG>, PERLLIB X<PERLLIB>, PERL5DB X<PERL5DB>, PERL5DB_THREADED
X<PERL5DB_THREADED>, PERL5SHELL (specific to the Win32 port) X<PERL5SHELL>,
PERL_ALLOW_NON_IFS_LSP (specific to the Win32 port)
X<PERL_ALLOW_NON_IFS_LSP>, PERL_DEBUG_MSTATS X<PERL_DEBUG_MSTATS>,
PERL_DESTRUCT_LEVEL X<PERL_DESTRUCT_LEVEL>, PERL_DL_NONLAZY
X<PERL_DL_NONLAZY>, PERL_ENCODING X<PERL_ENCODING>, PERL_HASH_SEED
X<PERL_HASH_SEED>, PERL_HASH_SEED_DEBUG X<PERL_HASH_SEED_DEBUG>, PERL_ROOT
(specific to the VMS port) X<PERL_ROOT>, PERL_SIGNALS X<PERL_SIGNALS>,
PERL_UNICODE X<PERL_UNICODE>, SYS$LOGIN (specific to the VMS port)
X<SYS$LOGIN>

=back

=head2 perldiag - various Perl diagnostics

=over 4

=item DESCRIPTION

=item SEE ALSO

=back

=head2 perllexwarn - Perl Lexical Warnings

=over 4

=item DESCRIPTION

=over 4

=item Default Warnings and Optional Warnings

=item What's wrong with B<-w> and C<$^W>

=item Controlling Warnings from the Command Line

B<-w> X<-w>, B<-W> X<-W>, B<-X> X<-X>

=item Backward Compatibility

=item Category Hierarchy
X<warning, categories>

=item Fatal Warnings
X<warning, fatal>

=item Reporting Warnings from a Module
X<warning, reporting> X<warning, registering>

=back

=item SEE ALSO

=item AUTHOR

=back

=head2 perldebug - Perl debugging

=over 4

=item DESCRIPTION

=item The Perl Debugger

=over 4

=item Calling the debugger

perl -d program_name, perl -d -e 0, perl -d:Ptkdb program_name, perl -dt
threaded_program_name

=item Debugger Commands

h X<debugger command, h>, h [command], h h, p expr X<debugger command, p>,
x [maxdepth] expr X<debugger command, x>, V [pkg [vars]] X<debugger
command, V>, X [vars] X<debugger command, X>, y [level [vars]] X<debugger
command, y>, T X<debugger command, T> X<backtrace> X<stack, backtrace>, s
[expr] X<debugger command, s> X<step>, n [expr] X<debugger command, n>, r
X<debugger command, r>, <CR>, c [line|sub] X<debugger command, c>, l
X<debugger command, l>, l min+incr, l min-max, l line, l subname, -
X<debugger command, ->, v [line] X<debugger command, v>, . X<debugger
command, .>, f filename X<debugger command, f>, /pattern/, ?pattern?, L
[abw] X<debugger command, L>, S [[!]regex] X<debugger command, S>, t
X<debugger command, t>, t expr X<debugger command, t>, b X<breakpoint>
X<debugger command, b>, b [line] [condition] X<breakpoint> X<debugger
command, b>, b subname [condition] X<breakpoint> X<debugger command, b>, b
postpone subname [condition] X<breakpoint> X<debugger command, b>, b load
filename X<breakpoint> X<debugger command, b>, b compile subname
X<breakpoint> X<debugger command, b>, B line X<breakpoint> X<debugger
command, B>, B * X<breakpoint> X<debugger command, B>, a [line] command
X<debugger command, a>, A line X<debugger command, A>, A * X<debugger
command, A>, w expr X<debugger command, w>, W expr X<debugger command, W>,
W * X<debugger command, W>, o X<debugger command, o>, o booloption ...
X<debugger command, o>, o anyoption? ... X<debugger command, o>, o
option=value ... X<debugger command, o>, < ? X<< debugger command, < >>, <
[ command ] X<< debugger command, < >>, < * X<< debugger command, < >>, <<
command X<< debugger command, << >>, > ? X<< debugger command, > >>, >
command X<< debugger command, > >>, > * X<< debugger command, > >>, >>
command X<<< debugger command, >> >>>, { ? X<debugger command, {>, { [
command ], { * X<debugger command, {>, {{ command X<debugger command, {{>,
! number X<debugger command, !>, ! -number X<debugger command, !>, !
pattern X<debugger command, !>, !! cmd X<debugger command, !!>, source file
X<debugger command, source>, H -number X<debugger command, H>, q or ^D
X<debugger command, q> X<debugger command, ^D>, R X<debugger command, R>,
|dbcmd X<debugger command, |>, ||dbcmd X<debugger command, ||>, command, m
expr X<debugger command, m>, M X<debugger command, M>, man [manpage]
X<debugger command, man>

=item Configurable Options

C<recallCommand>, C<ShellBang> X<debugger option, recallCommand> X<debugger
option, ShellBang>, C<pager> X<debugger option, pager>, C<tkRunning>
X<debugger option, tkRunning>, C<signalLevel>, C<warnLevel>, C<dieLevel>
X<debugger option, signalLevel> X<debugger option, warnLevel> X<debugger
option, dieLevel>, C<AutoTrace> X<debugger option, AutoTrace>, C<LineInfo>
X<debugger option, LineInfo>, C<inhibit_exit> X<debugger option,
inhibit_exit>, C<PrintRet> X<debugger option, PrintRet>, C<ornaments>
X<debugger option, ornaments>, C<frame> X<debugger option, frame>,
C<maxTraceLen> X<debugger option, maxTraceLen>, C<windowSize> X<debugger
option, windowSize>, C<arrayDepth>, C<hashDepth> X<debugger option,
arrayDepth> X<debugger option, hashDepth>, C<dumpDepth> X<debugger option,
dumpDepth>, C<compactDump>, C<veryCompact> X<debugger option, compactDump>
X<debugger option, veryCompact>, C<globPrint> X<debugger option,
globPrint>, C<DumpDBFiles> X<debugger option, DumpDBFiles>, C<DumpPackages>
X<debugger option, DumpPackages>, C<DumpReused> X<debugger option,
DumpReused>, C<quote>, C<HighBit>, C<undefPrint> X<debugger option, quote>
X<debugger option, HighBit> X<debugger option, undefPrint>, C<UsageOnly>
X<debugger option, UsageOnly>, C<TTY> X<debugger option, TTY>, C<noTTY>
X<debugger option, noTTY>, C<ReadLine> X<debugger option, ReadLine>,
C<NonStop> X<debugger option, NonStop>

=item Debugger input/output

Prompt, Multiline commands, Stack backtrace X<backtrace> X<stack,
backtrace>, Line Listing Format, Frame listing

=item Debugging compile-time statements

=item Debugger Customization

=item Readline Support

=item Editor Support for Debugging

=item The Perl Profiler
X<profile> X<profiling> X<profiler>

=back

=item Debugging regular expressions
X<regular expression, debugging>
X<regex, debugging> X<regexp, debugging>

=item Debugging memory usage
X<memory usage>

=item SEE ALSO

=item BUGS

=back

=head2 perlvar - Perl predefined variables

=over 4

=item DESCRIPTION

=over 4

=item Predefined Names

$ARG, $_ X<$_> X<$ARG>, $a, $b X<$a> X<$b>, $<I<digits>> X<$1> X<$2> X<$3>,
$MATCH, $& X<$&> X<$MATCH>, ${^MATCH} X<${^MATCH}>, $PREMATCH, $` X<$`>
X<$PREMATCH>, ${^PREMATCH} X<${^PREMATCH}>, $POSTMATCH, $' X<$'>
X<$POSTMATCH>, ${^POSTMATCH} X<${^POSTMATCH}>, $LAST_PAREN_MATCH, $+ X<$+>
X<$LAST_PAREN_MATCH>, $LAST_SUBMATCH_RESULT, $^N X<$^N>, @@LAST_MATCH_END,
@@+ X<@@+> X<@@LAST_MATCH_END>, %+ X<%+>, HANDLE->input_line_number(EXPR),
$INPUT_LINE_NUMBER, $NR, $. X<$.> X<$NR> X<$INPUT_LINE_NUMBER> X<line
number>, IO::Handle->input_record_separator(EXPR), $INPUT_RECORD_SEPARATOR,
$RS, $/ X<$/> X<$RS> X<$INPUT_RECORD_SEPARATOR>, HANDLE->autoflush(EXPR),
$OUTPUT_AUTOFLUSH, $| X<$|> X<autoflush> X<flush> X<$OUTPUT_AUTOFLUSH>,
IO::Handle->output_field_separator EXPR, $OUTPUT_FIELD_SEPARATOR, $OFS, $,
X<$,> X<$OFS> X<$OUTPUT_FIELD_SEPARATOR>,
IO::Handle->output_record_separator EXPR, $OUTPUT_RECORD_SEPARATOR, $ORS,
$\ X<$\> X<$ORS> X<$OUTPUT_RECORD_SEPARATOR>, $LIST_SEPARATOR, $" X<$">
X<$LIST_SEPARATOR>, $SUBSCRIPT_SEPARATOR, $SUBSEP, $; X<$;> X<$SUBSEP>
X<SUBSCRIPT_SEPARATOR>, HANDLE->format_page_number(EXPR),
$FORMAT_PAGE_NUMBER, $% X<$%> X<$FORMAT_PAGE_NUMBER>,
HANDLE->format_lines_per_page(EXPR), $FORMAT_LINES_PER_PAGE, $= X<$=>
X<$FORMAT_LINES_PER_PAGE>, HANDLE->format_lines_left(EXPR),
$FORMAT_LINES_LEFT, $- X<$-> X<$FORMAT_LINES_LEFT>, @@LAST_MATCH_START, @@-
X<@@-> X<@@LAST_MATCH_START>, C<$`> is the same as C<substr($var, 0, $-[0])>,
C<$&> is the same as C<substr($var, $-[0], $+[0] - $-[0])>, C<$'> is the
same as C<substr($var, $+[0])>, C<$1> is the same as C<substr($var, $-[1],
$+[1] - $-[1])>, C<$2> is the same as C<substr($var, $-[2], $+[2] -
$-[2])>, C<$3> is the same as C<substr($var, $-[3], $+[3] - $-[3])>, %-
X<%->, HANDLE->format_name(EXPR), $FORMAT_NAME, $~ X<$~> X<$FORMAT_NAME>,
HANDLE->format_top_name(EXPR), $FORMAT_TOP_NAME, $^ X<$^>
X<$FORMAT_TOP_NAME>, IO::Handle->format_line_break_characters EXPR,
$FORMAT_LINE_BREAK_CHARACTERS, $: X<$:> X<FORMAT_LINE_BREAK_CHARACTERS>,
IO::Handle->format_formfeed EXPR, $FORMAT_FORMFEED, $^L X<$^L>
X<$FORMAT_FORMFEED>, $ACCUMULATOR, $^A X<$^A> X<$ACCUMULATOR>,
$CHILD_ERROR, $? X<$?> X<$CHILD_ERROR>, ${^CHILD_ERROR_NATIVE}
X<$^CHILD_ERROR_NATIVE>, ${^ENCODING} X<$^ENCODING>, $OS_ERROR, $ERRNO, $!
X<$!> X<$ERRNO> X<$OS_ERROR>, %OS_ERROR, %ERRNO, %! X<%!>,
$EXTENDED_OS_ERROR, $^E X<$^E> X<$EXTENDED_OS_ERROR>, $EVAL_ERROR, $@@ X<$@@>
X<$EVAL_ERROR>, $PROCESS_ID, $PID, $$ X<$$> X<$PID> X<$PROCESS_ID>,
$REAL_USER_ID, $UID, $< X<< $< >> X<$UID> X<$REAL_USER_ID>,
$EFFECTIVE_USER_ID, $EUID, $> X<< $> >> X<$EUID> X<$EFFECTIVE_USER_ID>,
$REAL_GROUP_ID, $GID, $( X<$(> X<$GID> X<$REAL_GROUP_ID>,
$EFFECTIVE_GROUP_ID, $EGID, $) X<$)> X<$EGID> X<$EFFECTIVE_GROUP_ID>,
$PROGRAM_NAME, $0 X<$0> X<$PROGRAM_NAME>, $[ X<$[>, $] X<$]>, $COMPILING,
$^C X<$^C> X<$COMPILING>, $DEBUGGING, $^D X<$^D> X<$DEBUGGING>,
${^RE_DEBUG_FLAGS}, ${^RE_TRIE_MAXBUF}, $SYSTEM_FD_MAX, $^F X<$^F>
X<$SYSTEM_FD_MAX>, $^H, %^H, $INPLACE_EDIT, $^I X<$^I> X<$INPLACE_EDIT>,
$^M X<$^M>, $OSNAME, $^O X<$^O> X<$OSNAME>, ${^OPEN}, $PERLDB, $^P X<$^P>
X<$PERLDB>, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x100, 0x200,
0x400, $LAST_REGEXP_CODE_RESULT, $^R X<$^R> X<$LAST_REGEXP_CODE_RESULT>,
$EXCEPTIONS_BEING_CAUGHT, $^S X<$^S> X<$EXCEPTIONS_BEING_CAUGHT>,
$BASETIME, $^T X<$^T> X<$BASETIME>, ${^TAINT}, ${^UNICODE}, ${^UTF8CACHE},
${^UTF8LOCALE}, $PERL_VERSION, $^V X<$^V> X<$PERL_VERSION>, $WARNING, $^W
X<$^W> X<$WARNING>, ${^WARNING_BITS}, ${^WIN32_SLOPPY_STAT},
$EXECUTABLE_NAME, $^X X<$^X> X<$EXECUTABLE_NAME>, ARGV X<ARGV>, $ARGV
X<$ARGV>, @@ARGV X<@@ARGV>, ARGVOUT X<ARGVOUT>, @@F X<@@F>, @@INC X<@@INC>, @@ARG,
@@_ X<@@_> X<@@ARG>, %INC X<%INC>, %ENV, $ENV{expr} X<%ENV>, %SIG, $SIG{expr}
X<%SIG>

=item Error Indicators
X<error> X<exception>

=item Technical Note on the Syntax of Variable Names

=back

=item BUGS

=back

=head2 perlre - Perl regular expressions

=over 4

=item DESCRIPTION

=over 4

=item Modifiers

m X</m> X<regex, multiline> X<regexp, multiline> X<regular expression,
multiline>, s X</s> X<regex, single-line> X<regexp, single-line> X<regular
expression, single-line>, i X</i> X<regex, case-insensitive> X<regexp,
case-insensitive> X<regular expression, case-insensitive>, x X</x>, p X</p>
X<regex, preserve> X<regexp, preserve>, g and c X</g> X</c>

=item Regular Expressions

[1], [2], [3], cntrl X<cntrl>, graph X<graph>, print X<print>, punct
X<punct>, xdigit X<xdigit>

=item Extended Patterns

C<(?#text)> X<(?#)>, C<(?pimsx-imsx)> X<(?)>, C<(?:pattern)> X<(?:)>,
C<(?imsx-imsx:pattern)>, C<(?|pattern)> X<(?|)> X<Branch reset>,
Look-Around Assertions X<look-around assertion> X<lookaround assertion>
X<look-around> X<lookaround>, C<(?=pattern)> X<(?=)> X<look-ahead,
positive> X<lookahead, positive>, C<(?!pattern)> X<(?!)> X<look-ahead,
negative> X<lookahead, negative>, C<(?<=pattern)> C<\K> X<(?<=)>
X<look-behind, positive> X<lookbehind, positive> X<\K>, C<(?<!pattern)>
X<(?<!)> X<look-behind, negative> X<lookbehind, negative>,
C<(?'NAME'pattern)>, C<< (?<NAME>pattern) >> X<< (?<NAME>) >> X<(?'NAME')>
X<named capture> X<capture>, C<< \k<NAME> >>, C<< \k'NAME' >>, C<(?{ code
})> X<(?{})> X<regex, code in> X<regexp, code in> X<regular expression,
code in>, C<(??{ code })> X<(??{})> X<regex, postponed> X<regexp,
postponed> X<regular expression, postponed>, C<(?PARNO)> C<(?-PARNO)>
C<(?+PARNO)> C<(?R)> C<(?0)> X<(?PARNO)> X<(?1)> X<(?R)> X<(?0)> X<(?-1)>
X<(?+1)> X<(?-PARNO)> X<(?+PARNO)> X<regex, recursive> X<regexp, recursive>
X<regular expression, recursive> X<regex, relative recursion>, C<(?&NAME)>
X<(?&NAME)>, C<(?(condition)yes-pattern|no-pattern)> X<(?()>,
C<(?(condition)yes-pattern)>, (1) (2) .., (<NAME>) ('NAME'), (?{ CODE }),
(R), (R1) (R2) .., (R&NAME), (DEFINE), C<< (?>pattern) >> X<backtrack>
X<backtracking> X<atomic> X<possessive>

=item Special Backtracking Control Verbs

Verbs that take an argument, C<(*PRUNE)> C<(*PRUNE:NAME)> X<(*PRUNE)>
X<(*PRUNE:NAME)>, C<(*SKIP)> C<(*SKIP:NAME)> X<(*SKIP)>, C<(*MARK:NAME)>
C<(*:NAME)> X<(*MARK)> C<(*MARK:NAME)> C<(*:NAME)>, C<(*THEN)>
C<(*THEN:NAME)>, C<(*COMMIT)> X<(*COMMIT)>, Verbs without an argument,
C<(*FAIL)> C<(*F)> X<(*FAIL)> X<(*F)>, C<(*ACCEPT)> X<(*ACCEPT)>

=item Backtracking
X<backtrack> X<backtracking>

=item Version 8 Regular Expressions
X<regular expression, version 8> X<regex, version 8> X<regexp, version 8>

=item Warning on \1 Instead of $1

=item Repeated Patterns Matching a Zero-length Substring

=item Combining RE Pieces

C<ST>, C<S|T>, C<S{REPEAT_COUNT}>, C<S{min,max}>, C<S{min,max}?>, C<S?>,
C<S*>, C<S+>, C<S??>, C<S*?>, C<S+?>, C<< (?>S) >>, C<(?=S)>, C<(?<=S)>,
C<(?!S)>, C<(?<!S)>, C<(??{ EXPR })>, C<(?PARNO)>,
C<(?(condition)yes-pattern|no-pattern)>

=item Creating Custom RE Engines

=back

=item PCRE/Python Support

C<< (?PE<lt>NAMEE<gt>pattern) >>, C<< (?P=NAME) >>, C<< (?P>NAME) >>

=item BUGS

=item SEE ALSO

=back

=head2 perlrebackslash - Perl Regular Expression Backslash Sequences and
Escapes

=over 4

=item DESCRIPTION

=over 4

=item The backslash

[1]

=item All the sequences and escapes

=item Character Escapes

[1], [2]

=item Modifiers

=item Character classes

=item Referencing

=item Assertions

\A, \z, \Z, \G, \b, \B

=item Misc

\C, \K, \R, \X

=back

=back

=head2 perlrecharclass - Perl Regular Expression Character Classes

=over 4

=item DESCRIPTION

=over 4

=item The dot

=item Backslashed sequences

[1]

=item Bracketed Character Classes

cntrl, graph, print, punct

=item Locale, Unicode and UTF-8

=back

=back

=head2 perlreref - Perl Regular Expressions Reference

=over 4

=item DESCRIPTION

=over 4

=item OPERATORS

=item SYNTAX

=item ESCAPE SEQUENCES

=item CHARACTER CLASSES

=item ANCHORS

=item QUANTIFIERS

=item EXTENDED CONSTRUCTS

=item VARIABLES

=item FUNCTIONS

=item TERMINOLOGY

=back

=item AUTHOR

=item SEE ALSO

=item THANKS

=back

=head2 perlref - Perl references and nested data structures

=over 4

=item NOTE

=item DESCRIPTION

=over 4

=item Making References
X<reference, creation> X<referencing>

1. X<\> X<backslash>, 2. X<array, anonymous> X<[> X<[]> X<square bracket>
X<bracket, square> X<arrayref> X<array reference> X<reference, array>, 3.
X<hash, anonymous> X<{> X<{}> X<curly bracket> X<bracket, curly> X<brace>
X<hashref> X<hash reference> X<reference, hash>, 4. X<subroutine,
anonymous> X<subroutine, reference> X<reference, subroutine> X<scope,
lexical> X<closure> X<lexical> X<lexical scope>, 5. X<constructor> X<new>,
6. X<autovivification>, 7. X<*foo{THING}> X<*>

=item Using References
X<reference, use> X<dereferencing> X<dereference>

=item Symbolic references
X<reference, symbolic> X<reference, soft>
X<symbolic reference> X<soft reference>

=item Not-so-symbolic references

=item Pseudo-hashes: Using an array as a hash
X<pseudo-hash> X<pseudo hash> X<pseudohash>

=item Function Templates
X<scope, lexical> X<closure> X<lexical> X<lexical scope>
X<subroutine, nested> X<sub, nested> X<subroutine, local> X<sub, local>

=back

=item WARNING
X<reference, string context> X<reference, use as hash key>

=item SEE ALSO

=back

=head2 perlform - Perl formats

=over 4

=item DESCRIPTION

=over 4

=item Text Fields
X<format, text field>

=item Numeric Fields
X<#> X<format, numeric field>

=item The Field @@* for Variable Width Multi-Line Text
X<@@*>

=item The Field ^* for Variable Width One-line-at-a-time Text
X<^*>

=item Specifying Values
X<format, specifying values>

=item Using Fill Mode
X<format, fill mode>

=item Suppressing Lines Where All Fields Are Void
X<format, suppressing lines>

=item Repeating Format Lines
X<format, repeating lines>

=item Top of Form Processing
X<format, top of form> X<top> X<header>

=item Format Variables
X<format variables>
X<format, variables>

=back

=item NOTES

=over 4

=item Footers
X<format, footer> X<footer>

=item Accessing Formatting Internals
X<format, internals>

=back

=item WARNINGS

=back

=head2 perlobj - Perl objects

=over 4

=item DESCRIPTION

=over 4

=item An Object is Simply a Reference
X<object> X<bless> X<constructor> X<new>

=item A Class is Simply a Package
X<class> X<package> X<@@ISA> X<inheritance>

=item A Method is Simply a Subroutine
X<method>

=item Method Invocation
X<invocation> X<method> X<arrow> X<< -> >>

=item Indirect Object Syntax
X<indirect object syntax> X<invocation, indirect> X<indirect>

=item Default UNIVERSAL methods
X<UNIVERSAL>

isa(CLASS) X<isa>, can(METHOD) X<can>, VERSION( [NEED] ) X<VERSION>

=item Destructors
X<destructor> X<DESTROY>

=item Summary

=item Two-Phased Garbage Collection
X<garbage collection> X<GC> X<circular reference>
X<reference, circular> X<DESTROY> X<destructor>

=back

=item SEE ALSO

=back

=head2 perltie - how to hide an object class in a simple variable

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Tying Scalars
X<scalar, tying>

TIESCALAR classname, LIST X<TIESCALAR>, FETCH this X<FETCH>, STORE this,
value X<STORE>, UNTIE this X<UNTIE>, DESTROY this X<DESTROY>

=item Tying Arrays
X<array, tying>

TIEARRAY classname, LIST X<TIEARRAY>, FETCH this, index X<FETCH>, STORE
this, index, value X<STORE>, FETCHSIZE this X<FETCHSIZE>, STORESIZE this,
count X<STORESIZE>, EXTEND this, count X<EXTEND>, EXISTS this, key
X<EXISTS>, DELETE this, key X<DELETE>, CLEAR this X<CLEAR>, PUSH this, LIST
 X<PUSH>, POP this X<POP>, SHIFT this X<SHIFT>, UNSHIFT this, LIST 
X<UNSHIFT>, SPLICE this, offset, length, LIST X<SPLICE>, UNTIE this
X<UNTIE>, DESTROY this X<DESTROY>

=item Tying Hashes
X<hash, tying>

USER, HOME, CLOBBER, LIST, TIEHASH classname, LIST X<TIEHASH>, FETCH this,
key X<FETCH>, STORE this, key, value X<STORE>, DELETE this, key X<DELETE>,
CLEAR this X<CLEAR>, EXISTS this, key X<EXISTS>, FIRSTKEY this X<FIRSTKEY>,
NEXTKEY this, lastkey X<NEXTKEY>, SCALAR this X<SCALAR>, UNTIE this
X<UNTIE>, DESTROY this X<DESTROY>

=item Tying FileHandles
X<filehandle, tying>

TIEHANDLE classname, LIST X<TIEHANDLE>, WRITE this, LIST X<WRITE>, PRINT
this, LIST X<PRINT>, PRINTF this, LIST X<PRINTF>, READ this, LIST X<READ>,
READLINE this X<READLINE>, GETC this X<GETC>, CLOSE this X<CLOSE>, UNTIE
this X<UNTIE>, DESTROY this X<DESTROY>

=item UNTIE this
X<UNTIE>

=item The C<untie> Gotcha
X<untie>

=back

=item SEE ALSO

=item BUGS

=item AUTHOR

=back

=head2 perldbmfilter - Perl DBM Filters

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>

=over 4

=item The Filter

=item An Example -- the NULL termination problem.

=item Another Example -- Key is a C int.

=back

=item SEE ALSO

=item AUTHOR

=back

=head2 perlipc - Perl interprocess communication (signals, fifos, pipes,
safe subprocesses, sockets, and semaphores)

=over 4

=item DESCRIPTION

=item Signals

=over 4

=item Handling the SIGHUP Signal in Daemons

=back

=item Named Pipes

=over 4

=item Deferred Signals (Safe Signals)

Long-running opcodes, Interrupting IO, Restartable system calls, Signals as
"faults", Signals triggered by operating system state

=back

=item Using open() for IPC

=over 4

=item Filehandles

=item Background Processes

=item Complete Dissociation of Child from Parent

=item Safe Pipe Opens

=item Bidirectional Communication with Another Process

=item Bidirectional Communication with Yourself

=back

=item Sockets: Client/Server Communication

=over 4

=item Internet Line Terminators

=item Internet TCP Clients and Servers

=item Unix-Domain TCP Clients and Servers

=back

=item TCP Clients with IO::Socket

=over 4

=item A Simple Client

C<Proto>, C<PeerAddr>, C<PeerPort>

=item A Webget Client

=item Interactive Client with IO::Socket

=back

=item TCP Servers with IO::Socket

Proto, LocalPort, Listen, Reuse

=item UDP: Message Passing

=item SysV IPC

=item NOTES

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 perlfork - Perl's fork() emulation

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Behavior of other Perl features in forked pseudo-processes

$$ or $PROCESS_ID, %ENV, chdir() and all other builtins that accept
filenames, wait() and waitpid(), kill(), exec(), exit(), Open handles to
files, directories and network sockets

=item Resource limits

=item Killing the parent process

=item Lifetime of the parent process and pseudo-processes

=item CAVEATS AND LIMITATIONS

BEGIN blocks, Open filehandles, Forking pipe open() not yet implemented,
Global state maintained by XSUBs, Interpreter embedded in larger
application, Thread-safety of extensions

=back

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 perlnumber - semantics of numbers and numeric operations in Perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Storing numbers

=item Numeric operators and numeric conversions

=item Flavors of Perl numeric operations

Arithmetic operators, ++, Arithmetic operators during C<use integer>, Other
mathematical operators, Bitwise operators, Bitwise operators during C<use
integer>, Operators which expect an integer, Operators which expect a
string

=item AUTHOR

=item SEE ALSO

=back

=head2 perlthrtut - Tutorial on threads in Perl

=over 4

=item DESCRIPTION

=item What Is A Thread Anyway?

=item Threaded Program Models

=over 4

=item Boss/Worker

=item Work Crew

=item Pipeline

=back

=item What kind of threads are Perl threads?

=item Thread-Safe Modules

=item Thread Basics

=over 4

=item Basic Thread Support

=item A Note about the Examples

=item Creating Threads

=item Waiting For A Thread To Exit

=item Ignoring A Thread

=item Process and Thread Termination

=back

=item Threads And Data

=over 4

=item Shared And Unshared Data

=item Thread Pitfalls: Races

=back

=item Synchronization and control

=over 4

=item Controlling access: lock()

=item A Thread Pitfall: Deadlocks

=item Queues: Passing Data Around

=item Semaphores: Synchronizing Data Access

=item Basic semaphores

=item Advanced Semaphores

=item Waiting for a Condition

=item Giving up control

=back

=item General Thread Utility Routines

=over 4

=item What Thread Am I In?

=item Thread IDs

=item Are These Threads The Same?

=item What Threads Are Running?

=back

=item A Complete Example

=item Different implementations of threads

=item Performance considerations

=item Process-scope Changes

=item Thread-Safety of System Libraries

=item Conclusion

=item SEE ALSO

=item Bibliography

=over 4

=item Introductory Texts

=item OS-Related References

=item Other References

=back

=item Acknowledgements

=item AUTHOR

=item Copyrights

=back

=head2 perlothrtut - old tutorial on threads in Perl

=over 4

=item DESCRIPTION

=item What Is A Thread Anyway?

=item Threaded Program Models

=over 4

=item Boss/Worker

=item Work Crew

=item Pipeline

=back

=item Native threads

=item What kind of threads are perl threads?

=item Threadsafe Modules

=item Thread Basics

=over 4

=item Basic Thread Support

=item Creating Threads

=item Giving up control

=item Waiting For A Thread To Exit

=item Errors In Threads

=item Ignoring A Thread

=back

=item Threads And Data

=over 4

=item Shared And Unshared Data

=item Thread Pitfall: Races

=item Controlling access: lock()

=item Thread Pitfall: Deadlocks

=item Queues: Passing Data Around

=back

=item Threads And Code

=over 4

=item Semaphores: Synchronizing Data Access

Basic semaphores, Advanced Semaphores

=item Attributes: Restricting Access To Subroutines

=item Subroutine Locks

=item Methods

=item Locking A Subroutine

=back

=item General Thread Utility Routines

=over 4

=item What Thread Am I In?

=item Thread IDs

=item Are These Threads The Same?

=item What Threads Are Running?

=back

=item A Complete Example

=item Conclusion

=item Bibliography

=over 4

=item Introductory Texts

=item OS-Related References

=item Other References

=back

=item Acknowledgements

=item AUTHOR

=item Copyrights

=back

=head2 perlport - Writing portable Perl

=over 4

=item DESCRIPTION

Not all Perl programs have to be portable, Nearly all of Perl already I<is>
portable

=item ISSUES

=over 4

=item Newlines

=item Numbers endianness and Width

=item Files and Filesystems

=item System Interaction

=item Command names versus file pathnames

=item Networking

=item Interprocess Communication (IPC)

=item External Subroutines (XS)

=item Standard Modules

=item Time and Date

=item Character sets and character encoding

=item Internationalisation

=item System Resources

=item Security

=item Style

=back

=item CPAN Testers

=item PLATFORMS

=over 4

=item Unix

=item DOS and Derivatives

=item S<Mac OS>

=item VMS

=item VOS

=item EBCDIC Platforms

=item Acorn RISC OS

=item Other perls

=back

=item FUNCTION IMPLEMENTATIONS

=over 4

=item Alphabetical Listing of Perl Functions

-I<X>, atan2, binmode, chmod, chown, chroot, crypt, dbmclose, dbmopen,
dump, exec, exit, fcntl, flock, fork, getlogin, getpgrp, getppid,
getpriority, getpwnam, getgrnam, getnetbyname, getpwuid, getgrgid,
getnetbyaddr, getprotobynumber, getservbyport, getpwent, getgrent,
gethostbyname, gethostent, getnetent, getprotoent, getservent, sethostent,
setnetent, setprotoent, setservent, endpwent, endgrent, endhostent,
endnetent, endprotoent, endservent, getsockopt SOCKET,LEVEL,OPTNAME, glob,
gmtime, ioctl FILEHANDLE,FUNCTION,SCALAR, kill, link, localtime, lstat,
msgctl, msgget, msgsnd, msgrcv, open, pipe, readlink, rename, select,
semctl, semget, semop, setgrent, setpgrp, setpriority, setpwent,
setsockopt, shmctl, shmget, shmread, shmwrite, sockatmark, socketpair,
stat, symlink, syscall, sysopen, system, times, truncate, umask, utime,
wait, waitpid

=back

=item Supported Platforms

=item SEE ALSO

=item AUTHORS / CONTRIBUTORS

=back

=head2 perllocale - Perl locale handling (internationalization and
localization)

=over 4

=item DESCRIPTION

=item PREPARING TO USE LOCALES

=item USING LOCALES

=over 4

=item The use locale pragma

=item The setlocale function

=item Finding locales

=item LOCALE PROBLEMS

=item Temporarily fixing locale problems

=item Permanently fixing locale problems

=item Permanently fixing your system's locale configuration

=item Fixing system locale configuration

=item The localeconv function

=item I18N::Langinfo

=back

=item LOCALE CATEGORIES

=over 4

=item Category LC_COLLATE: Collation

=item Category LC_CTYPE: Character Types

=item Category LC_NUMERIC: Numeric Formatting

=item Category LC_MONETARY: Formatting of monetary amounts

=item LC_TIME

=item Other categories

=back

=item SECURITY

=item ENVIRONMENT

PERL_BADLANG, LC_ALL, LANGUAGE, LC_CTYPE, LC_COLLATE, LC_MONETARY,
LC_NUMERIC, LC_TIME, LANG

=over 4

=item Examples

=back

=item NOTES

=over 4

=item Backward compatibility

=item I18N:Collate obsolete

=item Sort speed and memory use impacts

=item write() and LC_NUMERIC

=item Freely available locale definitions

=item I18n and l10n

=item An imperfect standard

=back

=item Unicode and UTF-8

=item BUGS

=over 4

=item Broken systems

=back

=item SEE ALSO

=item HISTORY

=back

=head2 perluniintro - Perl Unicode introduction

=over 4

=item DESCRIPTION

=over 4

=item Unicode

=item Perl's Unicode Support

=item Perl's Unicode Model

=item Unicode and EBCDIC

=item Creating Unicode

=item Handling Unicode

=item Legacy Encodings

=item Unicode I/O

=item Displaying Unicode As Text

=item Special Cases

=item Advanced Topics

=item Miscellaneous

=item Questions With Answers

=item Hexadecimal Notation

=item Further Resources

=back

=item UNICODE IN OLDER PERLS

=item SEE ALSO

=item ACKNOWLEDGMENTS

=item AUTHOR, COPYRIGHT, AND LICENSE

=back

=head2 perlunicode - Unicode support in Perl

=over 4

=item DESCRIPTION

=over 4

=item Important Caveats

Input and Output Layers, Regular Expressions, C<use utf8> still needed to
enable UTF-8/UTF-EBCDIC in scripts, BOM-marked scripts and UTF-16 scripts
autodetected, C<use encoding> needed to upgrade non-Latin-1 byte strings

=item Byte and Character Semantics

=item Effects of Character Semantics

=item Unicode Character Properties

General Category, Bidirectional Character Types, Scripts, Extended property
classes, Use of "Is" Prefix, Blocks

=item User-Defined Character Properties

=item User-Defined Case Mappings

=item Character Encodings for Input and Output

=item Unicode Regular Expression Support Level

=item Unicode Encodings

=item Security Implications of Unicode

=item Unicode in Perl on EBCDIC

=item Locales

=item When Unicode Does Not Happen

=item Forcing Unicode in Perl (Or Unforcing Unicode in Perl)

=item Using Unicode in XS

=back

=item BUGS

=over 4

=item Interaction with Locales

=item Interaction with Extensions

=item Speed

=item Porting code from perl-5.6.X

=back

=item SEE ALSO

=back

=head2 perlunifaq - Perl Unicode FAQ

=over 4

=item Q and A

=over 4

=item perlunitut isn't really a Unicode tutorial, is it?

=item What character encodings does Perl support?

=item Which version of perl should I use?

=item What about binary data, like images?

=item When should I decode or encode?

=item What if I don't decode?

=item What if I don't encode?

=item Is there a way to automatically decode or encode?

=item What if I don't know which encoding was used?

=item Can I use Unicode in my Perl sources?

=item Data::Dumper doesn't restore the UTF8 flag; is it broken?

=item Why do regex character classes sometimes match only in the ASCII
range?

=item Why do some characters not uppercase or lowercase correctly?

=item How can I determine if a string is a text string or a binary string?

=item How do I convert from encoding FOO to encoding BAR?

=item What are C<decode_utf8> and C<encode_utf8>?

=item What is a "wide character"?

=back

=item INTERNALS

=over 4

=item What is "the UTF8 flag"?

=item What about the C<use bytes> pragma?

=item What about the C<use encoding> pragma?

=item What is the difference between C<:encoding> and C<:utf8>?

=item What's the difference between C<UTF-8> and C<utf8>?

=item I lost track; what encoding is the internal format really?

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 perlunitut - Perl Unicode Tutorial

=over 4

=item DESCRIPTION

=over 4

=item Definitions

=item Your new toolkit

=item I/O flow (the actual 5 minute tutorial)

=back

=item SUMMARY

=item Q and A (or FAQ)

=item ACKNOWLEDGEMENTS

=item AUTHOR

=item SEE ALSO

=back

=head2 perlebcdic - Considerations for running Perl on EBCDIC platforms

=over 4

=item DESCRIPTION

=item COMMON CHARACTER CODE SETS

=over 4

=item ASCII

=item ISO 8859

=item Latin 1 (ISO 8859-1)

=item EBCDIC

=item 13 variant characters

=item 0037

=item 1047

=item POSIX-BC

=item Unicode code points versus EBCDIC code points

=item Remaining Perl Unicode problems in EBCDIC

=item Unicode and UTF

=item Using Encode

=back

=item SINGLE OCTET TABLES

recipe 0, recipe 1, recipe 2, recipe 3, recipe 4, recipe 5, recipe 6

=item IDENTIFYING CHARACTER CODE SETS

=item CONVERSIONS

=over 4

=item tr///

=item iconv

=item C RTL

=back

=item OPERATOR DIFFERENCES

=item FUNCTION DIFFERENCES

chr(), ord(), pack(), print(), printf(), sort(), sprintf(), unpack()

=item REGULAR EXPRESSION DIFFERENCES

=item SOCKETS

=item SORTING

=over 4

=item Ignore ASCII vs. EBCDIC sort differences.

=item MONO CASE then sort data.

=item Convert, sort data, then re convert.

=item Perform sorting on one type of machine only.

=back

=item TRANSFORMATION FORMATS

=over 4

=item URL decoding and encoding

=item uu encoding and decoding

=item Quoted-Printable encoding and decoding

=item Caesarian ciphers

=back

=item Hashing order and checksums

=item I18N AND L10N

=item MULTI OCTET CHARACTER SETS

=item OS ISSUES

=over 4

=item OS/400

PASE, IFS access

=item OS/390, z/OS

chcp, dataset access, OS/390, z/OS iconv, locales

=item VM/ESA?

=item POSIX-BC?

=back

=item BUGS

=item SEE ALSO

=item REFERENCES

=item HISTORY

=item AUTHOR

=back

=head2 perlsec - Perl security

=over 4

=item DESCRIPTION

=over 4

=item Laundering and Detecting Tainted Data

=item Switches On the "#!" Line

=item Taint mode and @@INC

=item Cleaning Up Your Path

=item Security Bugs

=item Protecting Your Programs

=item Unicode

=item Algorithmic Complexity Attacks

=back

=item SEE ALSO

=back

=head2 perlmod - Perl modules (packages and symbol tables)

=over 4

=item DESCRIPTION

=over 4

=item Packages
X<package> X<namespace> X<variable, global> X<global variable> X<global>

=item Symbol Tables
X<symbol table> X<stash> X<%::> X<%main::> X<typeglob> X<glob> X<alias>

=item BEGIN, UNITCHECK, CHECK, INIT and END
X<BEGIN> X<UNITCHECK> X<CHECK> X<INIT> X<END>

=item Perl Classes
X<class> X<@@ISA>

=item Perl Modules
X<module>

=item Making your module threadsafe
X<threadsafe> X<thread safe>
X<module, threadsafe> X<module, thread safe>
X<CLONE> X<CLONE_SKIP> X<thread> X<threads> X<ithread>

=back

=item SEE ALSO

=back

=head2 perlmodlib - constructing new Perl modules and finding existing ones

=over 4

=item THE PERL MODULE LIBRARY

=over 4

=item Pragmatic Modules

attributes, attrs, autouse, base, bigint, bignum, bigrat, blib, bytes,
charnames, constant, diagnostics, encoding, encoding::warnings, feature,
fields, filetest, if, integer, less, lib, locale, mro, open, ops, overload,
re, sigtrap, sort, strict, subs, threads, threads::shared, utf8, vars,
version, vmsish, warnings, warnings::register

=item Standard Modules

AnyDBM_File, Archive::Extract, Archive::Tar, Archive::Tar::File,
Attribute::Handlers, AutoLoader, AutoSplit, B, B::Concise, B::Debug,
B::Deparse, B::Lint, B::Showlex, B::Terse, B::Xref, Benchmark, CGI,
CGI::Apache, CGI::Carp, CGI::Cookie, CGI::Fast, CGI::Pretty, CGI::Push,
CGI::Switch, CGI::Util, CORE, CPAN, CPAN::API::HOWTO, CPAN::FirstTime,
CPAN::Kwalify, CPAN::Nox, CPAN::Version, CPANPLUS, CPANPLUS::Dist::Base,
CPANPLUS::Dist::Sample, CPANPLUS::Shell::Classic,
CPANPLUS::Shell::Default::Plugins::HOWTO, Carp, Carp::Heavy, Class::ISA,
Class::Struct, Compress::Raw::Zlib, Compress::Zlib, Config, Cwd, DB,
DBM_Filter, DBM_Filter::compress, DBM_Filter::encode, DBM_Filter::int32,
DBM_Filter::null, DBM_Filter::utf8, DB_File, Data::Dumper, Devel::DProf,
Devel::InnerPackage, Devel::Peek, Devel::SelfStubber, Digest, Digest::MD5,
Digest::SHA, Digest::base, Digest::file, DirHandle, Dumpvalue, DynaLoader,
Encode, Encode::Alias, Encode::Byte, Encode::CJKConstants, Encode::CN,
Encode::CN::HZ, Encode::Config, Encode::EBCDIC, Encode::Encoder,
Encode::Encoding, Encode::GSM0338, Encode::Guess, Encode::JP,
Encode::JP::H2Z, Encode::JP::JIS7, Encode::KR, Encode::KR::2022_KR,
Encode::MIME::Header, Encode::MIME::Name, Encode::PerlIO,
Encode::Supported, Encode::Symbol, Encode::TW, Encode::Unicode,
Encode::Unicode::UTF7, English, Env, Errno, Exporter, Exporter::Heavy,
ExtUtils::CBuilder, ExtUtils::CBuilder::Platform::Windows,
ExtUtils::Command, ExtUtils::Command::MM, ExtUtils::Constant,
ExtUtils::Constant::Base, ExtUtils::Constant::Utils,
ExtUtils::Constant::XS, ExtUtils::Embed, ExtUtils::Install,
ExtUtils::Installed, ExtUtils::Liblist, ExtUtils::MM, ExtUtils::MM_AIX,
ExtUtils::MM_Any, ExtUtils::MM_BeOS, ExtUtils::MM_Cygwin, ExtUtils::MM_DOS,
ExtUtils::MM_MacOS, ExtUtils::MM_NW5, ExtUtils::MM_OS2, ExtUtils::MM_QNX,
ExtUtils::MM_UWIN, ExtUtils::MM_Unix, ExtUtils::MM_VMS, ExtUtils::MM_VOS,
ExtUtils::MM_Win32, ExtUtils::MM_Win95, ExtUtils::MY, ExtUtils::MakeMaker,
ExtUtils::MakeMaker::Config, ExtUtils::MakeMaker::FAQ,
ExtUtils::MakeMaker::Tutorial, ExtUtils::MakeMaker::bytes,
ExtUtils::MakeMaker::vmsish, ExtUtils::Manifest, ExtUtils::Mkbootstrap,
ExtUtils::Mksymlists, ExtUtils::Packlist, ExtUtils::ParseXS,
ExtUtils::testlib, Fatal, Fcntl, File::Basename, File::CheckTree,
File::Compare, File::Copy, File::DosGlob, File::Fetch, File::Find,
File::Glob, File::GlobMapper, File::Path, File::Spec, File::Spec::Cygwin,
File::Spec::Epoc, File::Spec::Functions, File::Spec::Mac, File::Spec::OS2,
File::Spec::Unix, File::Spec::VMS, File::Spec::Win32, File::Temp,
File::stat, FileCache, FileHandle, Filter::Simple, Filter::Util::Call,
FindBin, GDBM_File, Getopt::Long, Getopt::Std, Hash::Util,
Hash::Util::FieldHash, I18N::Collate, I18N::LangTags,
I18N::LangTags::Detect, I18N::LangTags::List, I18N::Langinfo, IO,
IO::Compress::Base, IO::Compress::Deflate, IO::Compress::Gzip,
IO::Compress::RawDeflate, IO::Compress::Zip, IO::Dir, IO::File, IO::Handle,
IO::Pipe, IO::Poll, IO::Seekable, IO::Select, IO::Socket, IO::Socket::INET,
IO::Socket::UNIX, IO::Uncompress::AnyInflate,
IO::Uncompress::AnyUncompress, IO::Uncompress::Base,
IO::Uncompress::Gunzip, IO::Uncompress::Inflate,
IO::Uncompress::RawInflate, IO::Uncompress::Unzip, IO::Zlib, IPC::Cmd,
IPC::Open2, IPC::Open3, IPC::SysV, IPC::SysV::Msg, IPC::SysV::Semaphore,
List::Util, Locale::Constants, Locale::Country, Locale::Currency,
Locale::Language, Locale::Maketext, Locale::Maketext::Simple,
Locale::Maketext::TPJ13, Locale::Script, Log::Message,
Log::Message::Config, Log::Message::Handlers, Log::Message::Item,
MIME::Base64, MIME::QuotedPrint, Math::BigFloat, Math::BigInt,
Math::BigInt::Calc, Math::BigInt::CalcEmu, Math::BigInt::FastCalc,
Math::BigRat, Math::Complex, Math::Trig, Memoize, Memoize::AnyDBM_File,
Memoize::Expire, Memoize::ExpireFile, Memoize::ExpireTest,
Memoize::NDBM_File, Memoize::SDBM_File, Memoize::Storable, Module::Build,
Module::Build::API, Module::Build::Authoring, Module::Build::Base,
Module::Build::Compat, Module::Build::ConfigData, Module::Build::Cookbook,
Module::Build::ModuleInfo, Module::Build::Notes, Module::Build::PPMMaker,
Module::Build::Platform::Amiga, Module::Build::Platform::Default,
Module::Build::Platform::EBCDIC, Module::Build::Platform::MPEiX,
Module::Build::Platform::MacOS, Module::Build::Platform::RiscOS,
Module::Build::Platform::Unix, Module::Build::Platform::VMS,
Module::Build::Platform::VOS, Module::Build::Platform::Windows,
Module::Build::Platform::aix, Module::Build::Platform::cygwin,
Module::Build::Platform::darwin, Module::Build::Platform::os2,
Module::Build::YAML, Module::CoreList, Module::Load,
Module::Load::Conditional, Module::Loaded, Module::Pluggable,
Module::Pluggable::Object, NDBM_File, NEXT, Net::Cmd, Net::Config,
Net::Domain, Net::FTP, Net::NNTP, Net::Netrc, Net::POP3, Net::Ping,
Net::SMTP, Net::Time, Net::hostent, Net::libnetFAQ, Net::netent,
Net::protoent, Net::servent, O, ODBM_File, Opcode, POSIX,
Package::Constants, Params::Check, PerlIO, PerlIO::encoding,
PerlIO::scalar, PerlIO::via, PerlIO::via::QuotedPrint, Pod::Checker,
Pod::Escapes, Pod::Find, Pod::Functions, Pod::Html, Pod::InputObjects,
Pod::LaTeX, Pod::Man, Pod::ParseLink, Pod::ParseUtils, Pod::Parser,
Pod::Perldoc::ToChecker, Pod::Perldoc::ToMan, Pod::Perldoc::ToNroff,
Pod::Perldoc::ToPod, Pod::Perldoc::ToRtf, Pod::Perldoc::ToText,
Pod::Perldoc::ToTk, Pod::Perldoc::ToXml, Pod::PlainText, Pod::Plainer,
Pod::Select, Pod::Simple, Pod::Simple::Checker, Pod::Simple::Debug,
Pod::Simple::DumpAsText, Pod::Simple::DumpAsXML, Pod::Simple::HTML,
Pod::Simple::HTMLBatch, Pod::Simple::LinkSection, Pod::Simple::Methody,
Pod::Simple::PullParser, Pod::Simple::PullParserEndToken,
Pod::Simple::PullParserStartToken, Pod::Simple::PullParserTextToken,
Pod::Simple::PullParserToken, Pod::Simple::RTF, Pod::Simple::Search,
Pod::Simple::SimpleTree, Pod::Simple::Subclassing, Pod::Simple::Text,
Pod::Simple::TextContent, Pod::Simple::XMLOutStream, Pod::Text,
Pod::Text::Color, Pod::Text::Overstrike, Pod::Text::Termcap, Pod::Usage,
SDBM_File, Safe, Scalar::Util, Search::Dict, SelectSaver, SelfLoader,
Shell, Socket, Storable, Switch, Symbol, Sys::Hostname, Sys::Syslog,
Sys::Syslog::win32::Win32, Term::ANSIColor, Term::Cap, Term::Complete,
Term::ReadLine, Term::UI, Test, Test::Builder, Test::Builder::Module,
Test::Builder::Tester, Test::Builder::Tester::Color, Test::Harness,
Test::Harness::Assert, Test::Harness::Iterator, Test::Harness::Point,
Test::Harness::Results, Test::Harness::Straps, Test::Harness::TAP,
Test::Harness::Util, Test::More, Test::Simple, Test::Tutorial,
Text::Abbrev, Text::Balanced, Text::ParseWords, Text::Soundex, Text::Tabs,
Text::Wrap, Thread, Thread::Queue, Thread::Semaphore, Tie::Array,
Tie::File, Tie::Handle, Tie::Hash, Tie::Hash::NamedCapture, Tie::Memoize,
Tie::RefHash, Tie::Scalar, Tie::SubstrHash, Time::HiRes, Time::Local,
Time::Piece, Time::Piece::Seconds, Time::gmtime, Time::localtime, Time::tm,
UNIVERSAL, Unicode::Collate, Unicode::Normalize, Unicode::UCD, User::grent,
User::pwent, Win32, Win32API::File, Win32CORE, XS::APItest, XS::Typemap,
XSLoader

=item Extension Modules

=back

=item CPAN

=over 4

=item Africa

South Africa

=item Asia

China, Indonesia, Israel, Japan, Malaysia, Russian Federation, Saudi
Arabia, Singapore, South Korea, Taiwan, Thailand

=item Central America

Costa Rica

=item Europe

Austria, Belgium, Bosnia and Herzegovina, Bulgaria, Croatia, Czech
Republic, Denmark, Estonia, Finland, France, Germany, Greece, Hungary,
Iceland, Ireland, Italy, Latvia, Lithuania, Netherlands, Norway, Poland,
Portugal, Romania, Russia, Slovakia, Slovenia, Spain, Sweden, Switzerland,
Turkey, Ukraine, United Kingdom

=item North America

Canada, Alberta, Manitoba, Nova Scotia, Ontario, Mexico, United States,
Alabama, California, Colorado, Delaware, District of Columbia, Florida,
Indiana, Kentucky, Massachusetts, Michigan, Nevada, New Jersey, New York,
North Carolina, Oklahoma, Oregon, Pennsylvania, Tennessee, Texas, Utah,
Virginia, Washington, Wisconsin

=item Oceania

Australia, New Zealand, United States

=item South America

Argentina, Brazil, Chile

=item RSYNC Mirrors

=back

=item Modules: Creation, Use, and Abuse

=over 4

=item Guidelines for Module Creation

=item Guidelines for Converting Perl 4 Library Scripts into Modules

=item Guidelines for Reusing Application Code

=back

=item NOTE

=back

=head2 perlmodstyle - Perl module style guide

=over 4

=item INTRODUCTION

=item QUICK CHECKLIST

=over 4

=item Before you start

=item The API

=item Stability

=item Documentation

=item Release considerations

=back

=item BEFORE YOU START WRITING A MODULE

=over 4

=item Has it been done before?

=item Do one thing and do it well

=item What's in a name?

=back

=item DESIGNING AND WRITING YOUR MODULE

=over 4

=item To OO or not to OO?

=item Designing your API

Write simple routines to do simple things, Separate functionality from
output, Provide sensible shortcuts and defaults, Naming conventions,
Parameter passing

=item Strictness and warnings

=item Backwards compatibility

=item Error handling and messages

=back

=item DOCUMENTING YOUR MODULE

=over 4

=item POD

=item README, INSTALL, release notes, changelogs

perl Makefile.PL, make, make test, make install, perl Build.PL, perl Build,
perl Build test, perl Build install

=back

=item RELEASE CONSIDERATIONS

=over 4

=item Version numbering

=item Pre-requisites

=item Testing

=item Packaging

=item Licensing

=back

=item COMMON PITFALLS

=over 4

=item Reinventing the wheel

=item Trying to do too much

=item Inappropriate documentation

=back

=item SEE ALSO

L<perlstyle>, L<perlnewmod>, L<perlpod>, L<podchecker>, Packaging Tools,
Testing tools, http://pause.perl.org/, Any good book on software
engineering

=item AUTHOR

=back

=head2 perlmodinstall - Installing CPAN Modules

=over 4

=item DESCRIPTION

=over 4

=item PREAMBLE

B<DECOMPRESS> the file, B<UNPACK> the file into a directory, B<BUILD> the
module (sometimes unnecessary), B<INSTALL> the module

=back

=item PORTABILITY

=item HEY

=item AUTHOR

=item COPYRIGHT

=back

=head2 perlnewmod - preparing a new module for distribution

=over 4

=item DESCRIPTION

=over 4

=item Warning

=item What should I make into a module?

=item Step-by-step: Preparing the ground

Look around, Check it's new, Discuss the need, Choose a name, Check again

=item Step-by-step: Making the module

Start with F<module-starter> or F<h2xs>, Use L<strict|strict> and
L<warnings|warnings>, Use L<Carp|Carp>, Use L<Exporter|Exporter> - wisely!,
Use L<plain old documentation|perlpod>, Write tests, Write the README

=item Step-by-step: Distributing your module

Get a CPAN user ID, C<perl Makefile.PL; make test; make dist>, Upload the
tarball, Announce to the modules list, Announce to clpa, Fix bugs!

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 perlpragma - how to write a user pragma

=over 4

=item DESCRIPTION

=item A basic example

=item Implementation details

=back

=head2 perlutil - utilities packaged with the Perl distribution

=over 4

=item DESCRIPTION

=item LIST OF UTILITIES

=over 4

=item Documentation

L<perldoc|perldoc>, L<pod2man|pod2man> and L<pod2text|pod2text>,
L<pod2html|pod2html> and L<pod2latex|pod2latex>, L<pod2usage|pod2usage>,
L<podselect|podselect>, L<podchecker|podchecker>, L<splain|splain>,
L<roffitall|roffitall>

=item Convertors

L<a2p|a2p>, L<s2p|s2p> and L<psed>, L<find2perl|find2perl>

=item Administration

L<config_data|config_data>, L<libnetcfg|libnetcfg>, L<perlivp>

=item Development

L<perlbug|perlbug>, L<h2ph|h2ph>, L<c2ph|c2ph> and L<pstruct|pstruct>,
L<h2xs|h2xs>, L<enc2xs>, L<xsubpp>, L<dprofpp|dprofpp>, L<prove>,
L<corelist>

=item General tools

L<piconv>, L<ptar>, L<ptardiff>, L<shasum>

=item Installation

L<cpan>, L<cpanp>, L<cpan2dist>, L<instmodsh>

=back

=item SEE ALSO

=back

=head2 perlcompile - Introduction to the Perl Compiler-Translator 

=over 4

=item DESCRIPTION

=over 4

=item Layout

B::Lint, B::Deparse, B::Xref

=back

=item Using The Back Ends

=over 4

=item The Cross Referencing Back End

i, &, s, r

=item The Decompiling Back End

=item The Lint Back End

=back

=item Module List for the Compiler Suite

B, O, B::Concise, B::Debug, B::Deparse, B::Lint, B::Showlex, B::Terse,
B::Xref

=item KNOWN PROBLEMS

=item AUTHOR

=back

=head2 perlfilter - Source Filters

=over 4

=item DESCRIPTION

=item CONCEPTS

=item USING FILTERS

=item WRITING A SOURCE FILTER

=item WRITING A SOURCE FILTER IN C

B<Decryption Filters>

=item CREATING A SOURCE FILTER AS A SEPARATE EXECUTABLE

=item WRITING A SOURCE FILTER IN PERL

=item USING CONTEXT: THE DEBUG FILTER

=item CONCLUSION

=item THINGS TO LOOK OUT FOR

Some Filters Clobber the C<DATA> Handle

=item REQUIREMENTS

=item AUTHOR

=item Copyrights

=back

=head2 perlglossary - Perl Glossary

=over 4

=item DESCRIPTION

=over 4

=item A

accessor methods, actual arguments, address operator, algorithm, alias,
alternatives, anonymous, architecture, argument, ARGV, arithmetical
operator, array, array context, ASCII, assertion, assignment, assignment
operator, associative array, associativity, asynchronous, atom, atomic
operation, attribute, autogeneration, autoincrement, autoload, autosplit,
autovivification, AV, awk

=item B

backreference, backtracking, backward compatibility, bareword, base class,
big-endian, binary, binary operator, bind, bit, bit shift, bit string,
bless, block, BLOCK, block buffering, Boolean, Boolean context, breakpoint,
broadcast, BSD, bucket, buffer, built-in, bundle, byte, bytecode

=item C

C, C preprocessor, call by reference, call by value, callback, canonical,
capturing, character, character class, character property, circumfix
operator, class, class method, client, cloister, closure, cluster, CODE,
code generator, code subpattern, collating sequence, command, command
buffering, command name, command-line arguments, comment, compilation unit,
compile phase, compile time, compiler, composer, concatenation,
conditional, connection, construct, constructor, context, continuation,
core dump, CPAN, cracker, current package, current working directory,
currently selected output channel, CV

=item D

dangling statement, data structure, data type, datagram, DBM, declaration,
decrement, default, defined, delimiter, deprecated modules and features,
dereference, derived class, descriptor, destroy, destructor, device,
directive, directory, directory handle, dispatch, distribution, (to be)
dropped modules, dweomer, dwimmer, dynamic scoping

=item E

eclectic, element, embedding, empty subclass test, en passant,
encapsulation, endian, environment, environment variable, EOF, errno,
error, escape sequence, exception, exception handling, exec, executable
file, execute, execute bit, exit status, export, expression, extension

=item F

false, FAQ, fatal error, field, FIFO, file, file descriptor, file test
operator, fileglob, filehandle, filename, filesystem, filter, flag,
floating point, flush, FMTEYEWTK, fork, formal arguments, format, freely
available, freely redistributable, freeware, function, funny character,
garbage collection

=item G

GID, glob, global, global destruction, glue language, granularity, greedy,
grep, group, GV

=item H

hacker, handler, hard reference, hash, hash table, header file, here
document, hexadecimal, home directory, host, hubris, HV

=item I

identifier, impatience, implementation, import, increment, indexing,
indirect filehandle, indirect object, indirect object slot, indirection,
infix, inheritance, instance, instance variable, integer, interface,
interpolation, interpreter, invocant, invocation, I/O, IO, IP, IPC, is-a,
iteration, iterator, IV

=item J

JAPH

=item K

key, keyword

=item L

label, laziness, left shift, leftmost longest, lexeme, lexer, lexical
analysis, lexical scoping, lexical variable, library, LIFO, line, line
buffering, line number, link, LIST, list, list context, list operator, list
value, literal, little-endian, local, logical operator, lookahead,
lookbehind, loop, loop control statement, loop label, lvaluable, lvalue,
lvalue modifier

=item M

magic, magical increment, magical variables, Makefile, man, manpage,
matching, member data, memory, metacharacter, metasymbol, method,
minimalism, mode, modifier, module, modulus, monger, mortal,
multidimensional array, multiple inheritance

=item N

named pipe, namespace, network address, newline, NFS, null character, null
list, null string, numeric context, NV, nybble

=item O

object, octal, offset, one-liner, open source software, operand, operating
system, operator, operator overloading, options, overloading, overriding,
owner

=item P

package, pad, parameter, parent class, parse tree, parsing, patch, PATH,
pathname, pattern, pattern matching, permission bits, Pern, pipe, pipeline,
platform, pod, pointer, polymorphism, port, portable, porter, POSIX,
postfix, pp, pragma, precedence, prefix, preprocessing, procedure, process,
program generator, progressive matching, property, protocol, prototype,
pseudofunction, pseudohash, pseudoliteral, public domain, pumpkin,
pumpking, PV

=item Q

qualified, quantifier

=item R

readable, reaping, record, recursion, reference, referent, regex, regular
expression, regular expression modifier, regular file, relational operator,
reserved words, return value, RFC, right shift, root, RTFM, run phase, run
time, run-time pattern, RV, rvalue

=item S

scalar, scalar context, scalar literal, scalar value, scalar variable,
scope, scratchpad, script, script kiddie, sed, semaphore, separator,
serialization, server, service, setgid, setuid, shared memory, shebang,
shell, side effects, signal, signal handler, single inheritance, slice,
slurp, socket, soft reference, source filter, stack, standard, standard
error, standard I/O, standard input, standard output, stat structure,
statement, statement modifier, static, static method, static scoping,
static variable, status, STDERR, STDIN, STDIO, STDOUT, stream, string,
string context, stringification, struct, structure, subclass, subpattern,
subroutine, subscript, substitution, substring, superclass, superuser, SV,
switch, switch cluster, switch statement, symbol, symbol table, symbolic
debugger, symbolic link, symbolic reference, synchronous, syntactic sugar,
syntax, syntax tree, syscall

=item T

tainted, TCP, term, terminator, ternary, text, thread, tie, TMTOWTDI,
token, tokener, tokenizing, toolbox approach, transliterate, trigger,
trinary, troff, true, truncating, type, type casting, typed lexical,
typedef, typeglob, typemap

=item U

UDP, UID, umask, unary operator, Unicode, Unix

=item V

value, variable, variable interpolation, variadic, vector, virtual, void
context, v-string

=item W

warning, watch expression, whitespace, word, working directory, wrapper,
WYSIWYG

=item X

XS, XSUB

=item Y

yacc

=item Z

zero width, zombie

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlembed - how to embed perl in your C program

=over 4

=item DESCRIPTION

=over 4

=item PREAMBLE

B<Use C from Perl?>, B<Use a Unix program from Perl?>, B<Use Perl from
Perl?>, B<Use C from C?>, B<Use Perl from C?>

=item ROADMAP

=item Compiling your C program

=item Adding a Perl interpreter to your C program

=item Calling a Perl subroutine from your C program

=item Evaluating a Perl statement from your C program

=item Performing Perl pattern matches and substitutions from your C program

=item Fiddling with the Perl stack from your C program

=item Maintaining a persistent interpreter

=item Execution of END blocks

=item $0 assignments

=item Maintaining multiple interpreter instances

=item Using Perl modules, which themselves use C libraries, from your C
program

=back

=item Embedding Perl under Win32

=item Hiding Perl_

=item MORAL

=item AUTHOR

=item COPYRIGHT

=back

=head2 perldebguts - Guts of Perl debugging 

=over 4

=item DESCRIPTION

=item Debugger Internals

=over 4

=item Writing Your Own Debugger

=back

=item Frame Listing Output Examples

=item Debugging regular expressions

=over 4

=item Compile-time output

C<anchored> I<STRING> C<at> I<POS>, C<floating> I<STRING> C<at>
I<POS1..POS2>, C<matching floating/anchored>, C<minlen>, C<stclass>
I<TYPE>, C<noscan>, C<isall>, C<GPOS>, C<plus>, C<implicit>, C<with eval>,
C<anchored(TYPE)>

=item Types of nodes

=item Run-time output

=back

=item Debugging Perl memory usage

=over 4

=item Using C<$ENV{PERL_DEBUG_MSTATS}>

C<buckets SMALLEST(APPROX)..GREATEST(APPROX)>, Free/Used, C<Total sbrk():
SBRKed/SBRKs:CONTINUOUS>, C<pad: 0>, C<heads: 2192>, C<chain: 0>, C<tail:
6144>

=back

=item SEE ALSO

=back

=head2 perlxstut, perlXStut - Tutorial for writing XSUBs

=over 4

=item DESCRIPTION

=item SPECIAL NOTES

=over 4

=item make

=item Version caveat

=item Dynamic Loading versus Static Loading

=back

=item TUTORIAL

=over 4

=item EXAMPLE 1

=item EXAMPLE 2

=item What has gone on?

=item Writing good test scripts

=item EXAMPLE 3

=item What's new here?

=item Input and Output Parameters

=item The XSUBPP Program

=item The TYPEMAP file

=item Warning about Output Arguments

=item EXAMPLE 4

=item What has happened here?

=item Anatomy of .xs file

=item Getting the fat out of XSUBs

=item More about XSUB arguments

=item The Argument Stack

=item Extending your Extension

=item Documenting your Extension

=item Installing your Extension

=item EXAMPLE 5

=item New Things in this Example

=item EXAMPLE 6

=item New Things in this Example

=item EXAMPLE 7 (Coming Soon)

=item EXAMPLE 8 (Coming Soon)

=item EXAMPLE 9 Passing open files to XSes

=item Troubleshooting these Examples

=back

=item See also

=item Author

=over 4

=item Last Changed

=back

=back

=head2 perlxs - XS language reference manual

=over 4

=item DESCRIPTION

=over 4

=item Introduction

=item On The Road

=item The Anatomy of an XSUB

=item The Argument Stack

=item The RETVAL Variable

=item Returning SVs, AVs and HVs through RETVAL

=item The MODULE Keyword

=item The PACKAGE Keyword

=item The PREFIX Keyword

=item The OUTPUT: Keyword

=item The NO_OUTPUT Keyword

=item The CODE: Keyword

=item The INIT: Keyword

=item The NO_INIT Keyword

=item Initializing Function Parameters

=item Default Parameter Values

=item The PREINIT: Keyword

=item The SCOPE: Keyword

=item The INPUT: Keyword

=item The IN/OUTLIST/IN_OUTLIST/OUT/IN_OUT Keywords

=item The C<length(NAME)> Keyword

=item Variable-length Parameter Lists

=item The C_ARGS: Keyword

=item The PPCODE: Keyword

=item Returning Undef And Empty Lists

=item The REQUIRE: Keyword

=item The CLEANUP: Keyword

=item The POSTCALL: Keyword

=item The BOOT: Keyword

=item The VERSIONCHECK: Keyword

=item The PROTOTYPES: Keyword

=item The PROTOTYPE: Keyword

=item The ALIAS: Keyword

=item The OVERLOAD: Keyword

=item The FALLBACK: Keyword

=item The INTERFACE: Keyword

=item The INTERFACE_MACRO: Keyword

=item The INCLUDE: Keyword

=item The CASE: Keyword

=item The & Unary Operator

=item Inserting POD, Comments and C Preprocessor Directives

=item Using XS With C++

=item Interface Strategy

=item Perl Objects And C Structures

=item The Typemap

=item Safely Storing Static Data in XS

MY_CXT_KEY, typedef my_cxt_t, START_MY_CXT, MY_CXT_INIT, dMY_CXT, MY_CXT,
aMY_CXT/pMY_CXT, MY_CXT_CLONE, MY_CXT_INIT_INTERP(my_perl),
dMY_CXT_INTERP(my_perl)

=item Thread-aware system interfaces

=back

=item EXAMPLES

=item XS VERSION

=item AUTHOR

=back

=head2 perlclib - Internal replacements for standard C library functions

=over 4

=item DESCRIPTION

=over 4

=item Conventions

C<t>, C<p>, C<n>, C<s>

=item File Operations

=item File Input and Output

=item File Positioning

=item Memory Management and String Handling

=item Character Class Tests

=item F<stdlib.h> functions

=item Miscellaneous functions

=back

=item SEE ALSO

=back

=head2 perlguts - Introduction to the Perl API

=over 4

=item DESCRIPTION

=item Variables

=over 4

=item Datatypes

=item What is an "IV"?

=item Working with SVs

=item Offsets

=item What's Really Stored in an SV?

=item Working with AVs

=item Working with HVs

=item Hash API Extensions

=item AVs, HVs and undefined values

=item References

=item Blessed References and Class Objects

=item Creating New Variables

GV_ADDMULTI, GV_ADDWARN

=item Reference Counts and Mortality

=item Stashes and Globs

=item Double-Typed SVs

=item Magic Variables

=item Assigning Magic

=item Magic Virtual Tables

=item Finding Magic

=item Understanding the Magic of Tied Hashes and Arrays

=item Localizing changes

C<SAVEINT(int i)>, C<SAVEIV(IV i)>, C<SAVEI32(I32 i)>, C<SAVELONG(long i)>,
C<SAVESPTR(s)>, C<SAVEPPTR(p)>, C<SAVEFREESV(SV *sv)>, C<SAVEMORTALIZESV(SV
*sv)>, C<SAVEFREEOP(OP *op)>, C<SAVEFREEPV(p)>, C<SAVECLEARSV(SV *sv)>,
C<SAVEDELETE(HV *hv, char *key, I32 length)>,
C<SAVEDESTRUCTOR(DESTRUCTORFUNC_NOCONTEXT_t f, void *p)>,
C<SAVEDESTRUCTOR_X(DESTRUCTORFUNC_t f, void *p)>, C<SAVESTACK_POS()>, C<SV*
save_scalar(GV *gv)>, C<AV* save_ary(GV *gv)>, C<HV* save_hash(GV *gv)>,
C<void save_item(SV *item)>, C<void save_list(SV **sarg, I32 maxsarg)>,
C<SV* save_svref(SV **sptr)>, C<void save_aptr(AV **aptr)>, C<void
save_hptr(HV **hptr)>

=back

=item Subroutines

=over 4

=item XSUBs and the Argument Stack

=item Calling Perl Routines from within C Programs

=item Memory Allocation

=item PerlIO

=item Putting a C value on Perl stack

=item Scratchpads

=item Scratchpads and recursion

=back

=item Compiled code

=over 4

=item Code tree

=item Examining the tree

=item Compile pass 1: check routines

=item Compile pass 1a: constant folding

=item Compile pass 2: context propagation

=item Compile pass 3: peephole optimization

=item Pluggable runops

=back

=item Examining internal data structures with the C<dump> functions

=item How multiple interpreters and concurrency are supported

=over 4

=item Background and PERL_IMPLICIT_CONTEXT

=item So what happened to dTHR?

=item How do I use all this in extensions?

=item Should I do anything special if I call perl from multiple threads?

=item Future Plans and PERL_IMPLICIT_SYS

=back

=item Internal Functions

A, p, d, s, n, r, f, M, o, x, m, X, E, b, others

=over 4

=item Formatted Printing of IVs, UVs, and NVs

=item Pointer-To-Integer and Integer-To-Pointer

=item Exception Handling

=item Source Documentation

=item Backwards compatibility

=back

=item Unicode Support

=over 4

=item What B<is> Unicode, anyway?

=item How can I recognise a UTF-8 string?

=item How does UTF-8 represent Unicode characters?

=item How does Perl store UTF-8 strings?

=item How do I convert a string to UTF-8?

=item Is there anything else I need to know?

=back

=item Custom Operators

=item AUTHORS

=item SEE ALSO

=back

=head2 perlcall - Perl calling conventions from C

=over 4

=item DESCRIPTION

An Error Handler, An Event Driven Program

=item THE CALL_ FUNCTIONS

call_sv, call_pv, call_method, call_argv

=item FLAG VALUES

=over 4

=item  G_VOID

=item  G_SCALAR

=item G_ARRAY

=item G_DISCARD

=item G_NOARGS

=item G_EVAL

=item G_KEEPERR

=item Determining the Context

=back

=item EXAMPLES

=over 4

=item No Parameters, Nothing returned

=item Passing Parameters

=item Returning a Scalar

=item Returning a list of values

=item Returning a list in a scalar context

=item Returning Data from Perl via the parameter list

=item Using G_EVAL

=item Using G_KEEPERR

=item Using call_sv

=item Using call_argv

=item Using call_method

=item Using GIMME_V

=item Using Perl to dispose of temporaries

=item Strategies for storing Callback Context Information

1. Ignore the problem - Allow only 1 callback, 2. Create a sequence of
callbacks - hard wired limit, 3. Use a parameter to map to the Perl
callback

=item Alternate Stack Manipulation

=item Creating and calling an anonymous subroutine in C

=back

=item LIGHTWEIGHT CALLBACKS

=item SEE ALSO

=item AUTHOR

=item DATE

=back

=head2 perlreapi - perl regular expression plugin interface

=over 4

=item DESCRIPTION

=item Callbacks

=over 4

=item comp

C</m> - RXf_PMf_MULTILINE, C</s> - RXf_PMf_SINGLELINE, C</i> -
RXf_PMf_FOLD, C</x> - RXf_PMf_EXTENDED, C</p> - RXf_PMf_KEEPCOPY,
RXf_PMf_LOCALE, RXf_UTF8, RXf_SPLIT, RXf_SKIPWHITE, RXf_START_ONLY,
RXf_WHITE, RXf_NULL

=item exec

=item intuit

=item checkstr

=item free

=item Numbered capture callbacks

=item Named capture callbacks

=item qr_package

=item dupe

=back

=item The REGEXP structure

=over 4

=item C<engine>

=item C<mother_re>

=item C<extflags>

=item C<minlen> C<minlenret>

=item C<gofs>

=item C<substrs>

=item C<nparens>, C<lasparen>, and C<lastcloseparen>

=item C<intflags>

=item C<pprivate>

=item C<swap>

=item C<offs>

=item C<precomp> C<prelen>

=item C<paren_names>

=item C<substrs>

=item C<subbeg> C<sublen> C<saved_copy>

=item C<wrapped> C<wraplen>

=item C<seen_evals>

=item C<refcnt>

=back

=item HISTORY

=item AUTHORS

=item LICENSE

=back

=head2 perlreguts - Description of the Perl regular expression engine.

=over 4

=item DESCRIPTION

=item OVERVIEW

=over 4

=item A quick note on terms

=item What is a regular expression engine?

=item Structure of a Regexp Program

C<regnode_1>, C<regnode_2>, C<regnode_string>, C<regnode_charclass>,
C<regnode_charclass_class>

=back

=item Process Overview

A. Compilation, 1. Parsing for size, 2. Parsing for construction, 3.
Peep-hole optimisation and analysis, B. Execution, 4. Start position and
no-match optimisations, 5. Program execution

=over 4

=item Compilation

anchored fixed strings, floating fixed strings, minimum and maximum length
requirements, start class, Beginning/End of line positions

=item Execution

=back

=item MISCELLANEOUS

=over 4

=item Unicode and Localisation Support

=item Base Structures

C<swap>, C<offsets>, C<regstclass>, C<data>, C<program>

=back

=item SEE ALSO

=item AUTHOR

=item LICENCE

=item REFERENCES

=back

=head2 perlapi - autogenerated documentation for the perl public API

=over 4

=item DESCRIPTION
X<Perl API> X<API> X<api>

=item "Gimme" Values

GIMME X<GIMME>, GIMME_V X<GIMME_V>, G_ARRAY X<G_ARRAY>, G_DISCARD
X<G_DISCARD>, G_EVAL X<G_EVAL>, G_NOARGS X<G_NOARGS>, G_SCALAR X<G_SCALAR>,
G_VOID X<G_VOID>

=item Array Manipulation Functions

AvFILL X<AvFILL>, av_clear X<av_clear>, av_create_and_push
X<av_create_and_push>, av_create_and_unshift_one
X<av_create_and_unshift_one>, av_delete X<av_delete>, av_exists
X<av_exists>, av_extend X<av_extend>, av_fetch X<av_fetch>, av_fill
X<av_fill>, av_len X<av_len>, av_make X<av_make>, av_pop X<av_pop>, av_push
X<av_push>, av_shift X<av_shift>, av_store X<av_store>, av_undef
X<av_undef>, av_unshift X<av_unshift>, get_av X<get_av>, newAV X<newAV>,
sortsv X<sortsv>, sortsv_flags X<sortsv_flags>

=item Callback Functions

call_argv X<call_argv>, call_method X<call_method>, call_pv X<call_pv>,
call_sv X<call_sv>, ENTER X<ENTER>, eval_pv X<eval_pv>, eval_sv X<eval_sv>,
FREETMPS X<FREETMPS>, LEAVE X<LEAVE>, SAVETMPS X<SAVETMPS>

=item Character classes

isALNUM X<isALNUM>, isALPHA X<isALPHA>, isDIGIT X<isDIGIT>, isLOWER
X<isLOWER>, isSPACE X<isSPACE>, isUPPER X<isUPPER>, toLOWER X<toLOWER>,
toUPPER X<toUPPER>

=item Cloning an interpreter

perl_clone X<perl_clone>

=item CV Manipulation Functions

CvSTASH X<CvSTASH>, get_cv X<get_cv>, get_cvn_flags X<get_cvn_flags>

=item Embedding Functions

cv_undef X<cv_undef>, load_module X<load_module>, nothreadhook
X<nothreadhook>, perl_alloc X<perl_alloc>, perl_construct
X<perl_construct>, perl_destruct X<perl_destruct>, perl_free X<perl_free>,
perl_parse X<perl_parse>, perl_run X<perl_run>, require_pv X<require_pv>

=item Functions in file dump.c

pv_display X<pv_display>, pv_escape X<pv_escape>, pv_pretty X<pv_pretty>

=item Functions in file mathoms.c

gv_fetchmethod X<gv_fetchmethod>, pack_cat X<pack_cat>, sv_2pvbyte_nolen
X<sv_2pvbyte_nolen>, sv_2pvutf8_nolen X<sv_2pvutf8_nolen>, sv_2pv_nolen
X<sv_2pv_nolen>, sv_catpvn_mg X<sv_catpvn_mg>, sv_catsv_mg X<sv_catsv_mg>,
sv_force_normal X<sv_force_normal>, sv_iv X<sv_iv>, sv_nolocking
X<sv_nolocking>, sv_nounlocking X<sv_nounlocking>, sv_nv X<sv_nv>, sv_pv
X<sv_pv>, sv_pvbyte X<sv_pvbyte>, sv_pvbyten X<sv_pvbyten>, sv_pvn
X<sv_pvn>, sv_pvutf8 X<sv_pvutf8>, sv_pvutf8n X<sv_pvutf8n>, sv_taint
X<sv_taint>, sv_unref X<sv_unref>, sv_usepvn X<sv_usepvn>, sv_usepvn_mg
X<sv_usepvn_mg>, sv_uv X<sv_uv>, unpack_str X<unpack_str>

=item Functions in file pp_ctl.c

find_runcv X<find_runcv>

=item Functions in file pp_pack.c

packlist X<packlist>, unpackstring X<unpackstring>

=item GV Functions

GvSV X<GvSV>, gv_const_sv X<gv_const_sv>, gv_fetchmeth X<gv_fetchmeth>,
gv_fetchmethod_autoload X<gv_fetchmethod_autoload>, gv_fetchmeth_autoload
X<gv_fetchmeth_autoload>, gv_stashpv X<gv_stashpv>, gv_stashpvn
X<gv_stashpvn>, gv_stashpvs X<gv_stashpvs>, gv_stashsv X<gv_stashsv>

=item Handy Values

Nullav X<Nullav>, Nullch X<Nullch>, Nullcv X<Nullcv>, Nullhv X<Nullhv>,
Nullsv X<Nullsv>

=item Hash Manipulation Functions

get_hv X<get_hv>, HEf_SVKEY X<HEf_SVKEY>, HeHASH X<HeHASH>, HeKEY X<HeKEY>,
HeKLEN X<HeKLEN>, HePV X<HePV>, HeSVKEY X<HeSVKEY>, HeSVKEY_force
X<HeSVKEY_force>, HeSVKEY_set X<HeSVKEY_set>, HeVAL X<HeVAL>, HvNAME
X<HvNAME>, hv_assert X<hv_assert>, hv_clear X<hv_clear>,
hv_clear_placeholders X<hv_clear_placeholders>, hv_delete X<hv_delete>,
hv_delete_ent X<hv_delete_ent>, hv_exists X<hv_exists>, hv_exists_ent
X<hv_exists_ent>, hv_fetch X<hv_fetch>, hv_fetchs X<hv_fetchs>,
hv_fetch_ent X<hv_fetch_ent>, hv_iterinit X<hv_iterinit>, hv_iterkey
X<hv_iterkey>, hv_iterkeysv X<hv_iterkeysv>, hv_iternext X<hv_iternext>,
hv_iternextsv X<hv_iternextsv>, hv_iternext_flags X<hv_iternext_flags>,
hv_iterval X<hv_iterval>, hv_magic X<hv_magic>, hv_scalar X<hv_scalar>,
hv_store X<hv_store>, hv_stores X<hv_stores>, hv_store_ent X<hv_store_ent>,
hv_undef X<hv_undef>, newHV X<newHV>

=item Magical Functions

mg_clear X<mg_clear>, mg_copy X<mg_copy>, mg_find X<mg_find>, mg_free
X<mg_free>, mg_get X<mg_get>, mg_length X<mg_length>, mg_magical
X<mg_magical>, mg_set X<mg_set>, SvGETMAGIC X<SvGETMAGIC>, SvLOCK
X<SvLOCK>, SvSETMAGIC X<SvSETMAGIC>, SvSetMagicSV X<SvSetMagicSV>,
SvSetMagicSV_nosteal X<SvSetMagicSV_nosteal>, SvSetSV X<SvSetSV>,
SvSetSV_nosteal X<SvSetSV_nosteal>, SvSHARE X<SvSHARE>, SvUNLOCK
X<SvUNLOCK>

=item Memory Management

Copy X<Copy>, CopyD X<CopyD>, Move X<Move>, MoveD X<MoveD>, Newx X<Newx>,
Newxc X<Newxc>, Newxz X<Newxz>, Poison X<Poison>, PoisonFree X<PoisonFree>,
PoisonNew X<PoisonNew>, PoisonWith X<PoisonWith>, Renew X<Renew>, Renewc
X<Renewc>, Safefree X<Safefree>, savepv X<savepv>, savepvn X<savepvn>,
savepvs X<savepvs>, savesharedpv X<savesharedpv>, savesharedpvn
X<savesharedpvn>, savesvpv X<savesvpv>, StructCopy X<StructCopy>, Zero
X<Zero>, ZeroD X<ZeroD>

=item Miscellaneous Functions

fbm_compile X<fbm_compile>, fbm_instr X<fbm_instr>, form X<form>, getcwd_sv
X<getcwd_sv>, my_snprintf X<my_snprintf>, my_sprintf X<my_sprintf>,
my_vsnprintf X<my_vsnprintf>, new_version X<new_version>, scan_version
X<scan_version>, strEQ X<strEQ>, strGE X<strGE>, strGT X<strGT>, strLE
X<strLE>, strLT X<strLT>, strNE X<strNE>, strnEQ X<strnEQ>, strnNE
X<strnNE>, sv_destroyable X<sv_destroyable>, sv_nosharing X<sv_nosharing>,
upg_version X<upg_version>, vcmp X<vcmp>, vnormal X<vnormal>, vnumify
X<vnumify>, vstringify X<vstringify>, vverify X<vverify>

=item MRO Functions

mro_get_linear_isa X<mro_get_linear_isa>, mro_method_changed_in
X<mro_method_changed_in>

=item Multicall Functions

dMULTICALL X<dMULTICALL>, MULTICALL X<MULTICALL>, POP_MULTICALL
X<POP_MULTICALL>, PUSH_MULTICALL X<PUSH_MULTICALL>

=item Numeric functions

grok_bin X<grok_bin>, grok_hex X<grok_hex>, grok_number X<grok_number>,
grok_numeric_radix X<grok_numeric_radix>, grok_oct X<grok_oct>,
Perl_signbit X<Perl_signbit>, scan_bin X<scan_bin>, scan_hex X<scan_hex>,
scan_oct X<scan_oct>

=item Optree Manipulation Functions

cv_const_sv X<cv_const_sv>, newCONSTSUB X<newCONSTSUB>, newXS X<newXS>

=item Pad Data Structures

pad_sv X<pad_sv>

=item Per-Interpreter Variables

PL_modglobal X<PL_modglobal>, PL_na X<PL_na>, PL_sv_no X<PL_sv_no>,
PL_sv_undef X<PL_sv_undef>, PL_sv_yes X<PL_sv_yes>

=item REGEXP Functions

SvRX X<SvRX>, SvRXOK X<SvRXOK>

=item Simple Exception Handling Macros

dXCPT X<dXCPT>, XCPT_CATCH X<XCPT_CATCH>, XCPT_RETHROW X<XCPT_RETHROW>,
XCPT_TRY_END X<XCPT_TRY_END>, XCPT_TRY_START X<XCPT_TRY_START>

=item Stack Manipulation Macros

dMARK X<dMARK>, dORIGMARK X<dORIGMARK>, dSP X<dSP>, EXTEND X<EXTEND>, MARK
X<MARK>, mPUSHi X<mPUSHi>, mPUSHn X<mPUSHn>, mPUSHp X<mPUSHp>, mPUSHu
X<mPUSHu>, mXPUSHi X<mXPUSHi>, mXPUSHn X<mXPUSHn>, mXPUSHp X<mXPUSHp>,
mXPUSHu X<mXPUSHu>, ORIGMARK X<ORIGMARK>, POPi X<POPi>, POPl X<POPl>, POPn
X<POPn>, POPp X<POPp>, POPpbytex X<POPpbytex>, POPpx X<POPpx>, POPs
X<POPs>, PUSHi X<PUSHi>, PUSHMARK X<PUSHMARK>, PUSHmortal X<PUSHmortal>,
PUSHn X<PUSHn>, PUSHp X<PUSHp>, PUSHs X<PUSHs>, PUSHu X<PUSHu>, PUTBACK
X<PUTBACK>, SP X<SP>, SPAGAIN X<SPAGAIN>, XPUSHi X<XPUSHi>, XPUSHmortal
X<XPUSHmortal>, XPUSHn X<XPUSHn>, XPUSHp X<XPUSHp>, XPUSHs X<XPUSHs>,
XPUSHu X<XPUSHu>, XSRETURN X<XSRETURN>, XSRETURN_EMPTY X<XSRETURN_EMPTY>,
XSRETURN_IV X<XSRETURN_IV>, XSRETURN_NO X<XSRETURN_NO>, XSRETURN_NV
X<XSRETURN_NV>, XSRETURN_PV X<XSRETURN_PV>, XSRETURN_UNDEF
X<XSRETURN_UNDEF>, XSRETURN_UV X<XSRETURN_UV>, XSRETURN_YES
X<XSRETURN_YES>, XST_mIV X<XST_mIV>, XST_mNO X<XST_mNO>, XST_mNV
X<XST_mNV>, XST_mPV X<XST_mPV>, XST_mUNDEF X<XST_mUNDEF>, XST_mYES
X<XST_mYES>

=item SV Flags

svtype X<svtype>, SVt_IV X<SVt_IV>, SVt_NV X<SVt_NV>, SVt_PV X<SVt_PV>,
SVt_PVAV X<SVt_PVAV>, SVt_PVCV X<SVt_PVCV>, SVt_PVHV X<SVt_PVHV>, SVt_PVMG
X<SVt_PVMG>

=item SV Manipulation Functions

get_sv X<get_sv>, newRV_inc X<newRV_inc>, SvCUR X<SvCUR>, SvCUR_set
X<SvCUR_set>, SvEND X<SvEND>, SvGAMAGIC X<SvGAMAGIC>, SvGROW X<SvGROW>,
SvIOK X<SvIOK>, SvIOKp X<SvIOKp>, SvIOK_notUV X<SvIOK_notUV>, SvIOK_off
X<SvIOK_off>, SvIOK_on X<SvIOK_on>, SvIOK_only X<SvIOK_only>, SvIOK_only_UV
X<SvIOK_only_UV>, SvIOK_UV X<SvIOK_UV>, SvIsCOW X<SvIsCOW>,
SvIsCOW_shared_hash X<SvIsCOW_shared_hash>, SvIV X<SvIV>, SvIVX X<SvIVX>,
SvIVx X<SvIVx>, SvIV_nomg X<SvIV_nomg>, SvIV_set X<SvIV_set>, SvLEN
X<SvLEN>, SvLEN_set X<SvLEN_set>, SvMAGIC_set X<SvMAGIC_set>, SvNIOK
X<SvNIOK>, SvNIOKp X<SvNIOKp>, SvNIOK_off X<SvNIOK_off>, SvNOK X<SvNOK>,
SvNOKp X<SvNOKp>, SvNOK_off X<SvNOK_off>, SvNOK_on X<SvNOK_on>, SvNOK_only
X<SvNOK_only>, SvNV X<SvNV>, SvNVX X<SvNVX>, SvNVx X<SvNVx>, SvNV_set
X<SvNV_set>, SvOK X<SvOK>, SvOOK X<SvOOK>, SvPOK X<SvPOK>, SvPOKp
X<SvPOKp>, SvPOK_off X<SvPOK_off>, SvPOK_on X<SvPOK_on>, SvPOK_only
X<SvPOK_only>, SvPOK_only_UTF8 X<SvPOK_only_UTF8>, SvPV X<SvPV>, SvPVbyte
X<SvPVbyte>, SvPVbytex X<SvPVbytex>, SvPVbytex_force X<SvPVbytex_force>,
SvPVbyte_force X<SvPVbyte_force>, SvPVbyte_nolen X<SvPVbyte_nolen>,
SvPVutf8 X<SvPVutf8>, SvPVutf8x X<SvPVutf8x>, SvPVutf8x_force
X<SvPVutf8x_force>, SvPVutf8_force X<SvPVutf8_force>, SvPVutf8_nolen
X<SvPVutf8_nolen>, SvPVX X<SvPVX>, SvPVx X<SvPVx>, SvPV_force
X<SvPV_force>, SvPV_force_nomg X<SvPV_force_nomg>, SvPV_nolen
X<SvPV_nolen>, SvPV_nomg X<SvPV_nomg>, SvPV_set X<SvPV_set>, SvREFCNT
X<SvREFCNT>, SvREFCNT_dec X<SvREFCNT_dec>, SvREFCNT_inc X<SvREFCNT_inc>,
SvREFCNT_inc_NN X<SvREFCNT_inc_NN>, SvREFCNT_inc_simple
X<SvREFCNT_inc_simple>, SvREFCNT_inc_simple_NN X<SvREFCNT_inc_simple_NN>,
SvREFCNT_inc_simple_void X<SvREFCNT_inc_simple_void>,
SvREFCNT_inc_simple_void_NN X<SvREFCNT_inc_simple_void_NN>,
SvREFCNT_inc_void X<SvREFCNT_inc_void>, SvREFCNT_inc_void_NN
X<SvREFCNT_inc_void_NN>, SvROK X<SvROK>, SvROK_off X<SvROK_off>, SvROK_on
X<SvROK_on>, SvRV X<SvRV>, SvRV_set X<SvRV_set>, SvSTASH X<SvSTASH>,
SvSTASH_set X<SvSTASH_set>, SvTAINT X<SvTAINT>, SvTAINTED X<SvTAINTED>,
SvTAINTED_off X<SvTAINTED_off>, SvTAINTED_on X<SvTAINTED_on>, SvTRUE
X<SvTRUE>, SvTYPE X<SvTYPE>, SvUOK X<SvUOK>, SvUPGRADE X<SvUPGRADE>, SvUTF8
X<SvUTF8>, SvUTF8_off X<SvUTF8_off>, SvUTF8_on X<SvUTF8_on>, SvUV X<SvUV>,
SvUVX X<SvUVX>, SvUVx X<SvUVx>, SvUV_nomg X<SvUV_nomg>, SvUV_set
X<SvUV_set>, SvVOK X<SvVOK>, sv_catpvn_nomg X<sv_catpvn_nomg>,
sv_catsv_nomg X<sv_catsv_nomg>, sv_derived_from X<sv_derived_from>, sv_does
X<sv_does>, sv_report_used X<sv_report_used>, sv_setsv_nomg
X<sv_setsv_nomg>

=item SV-Body Allocation

looks_like_number X<looks_like_number>, newRV_noinc X<newRV_noinc>, newSV
X<newSV>, newSVhek X<newSVhek>, newSViv X<newSViv>, newSVnv X<newSVnv>,
newSVpv X<newSVpv>, newSVpvf X<newSVpvf>, newSVpvn X<newSVpvn>,
newSVpvn_share X<newSVpvn_share>, newSVpvs X<newSVpvs>, newSVpvs_share
X<newSVpvs_share>, newSVrv X<newSVrv>, newSVsv X<newSVsv>, newSVuv
X<newSVuv>, newSV_type X<newSV_type>, sv_2bool X<sv_2bool>, sv_2cv
X<sv_2cv>, sv_2io X<sv_2io>, sv_2iv_flags X<sv_2iv_flags>, sv_2mortal
X<sv_2mortal>, sv_2nv X<sv_2nv>, sv_2pvbyte X<sv_2pvbyte>, sv_2pvutf8
X<sv_2pvutf8>, sv_2pv_flags X<sv_2pv_flags>, sv_2uv_flags X<sv_2uv_flags>,
sv_backoff X<sv_backoff>, sv_bless X<sv_bless>, sv_catpv X<sv_catpv>,
sv_catpvf X<sv_catpvf>, sv_catpvf_mg X<sv_catpvf_mg>, sv_catpvn
X<sv_catpvn>, sv_catpvn_flags X<sv_catpvn_flags>, sv_catpvs X<sv_catpvs>,
sv_catpv_mg X<sv_catpv_mg>, sv_catsv X<sv_catsv>, sv_catsv_flags
X<sv_catsv_flags>, sv_chop X<sv_chop>, sv_clear X<sv_clear>, sv_cmp
X<sv_cmp>, sv_cmp_locale X<sv_cmp_locale>, sv_collxfrm X<sv_collxfrm>,
sv_copypv X<sv_copypv>, sv_dec X<sv_dec>, sv_eq X<sv_eq>,
sv_force_normal_flags X<sv_force_normal_flags>, sv_free X<sv_free>, sv_gets
X<sv_gets>, sv_grow X<sv_grow>, sv_inc X<sv_inc>, sv_insert X<sv_insert>,
sv_isa X<sv_isa>, sv_isobject X<sv_isobject>, sv_len X<sv_len>, sv_len_utf8
X<sv_len_utf8>, sv_magic X<sv_magic>, sv_magicext X<sv_magicext>,
sv_mortalcopy X<sv_mortalcopy>, sv_newmortal X<sv_newmortal>, sv_newref
X<sv_newref>, sv_pos_b2u X<sv_pos_b2u>, sv_pos_u2b X<sv_pos_u2b>,
sv_pvbyten_force X<sv_pvbyten_force>, sv_pvn_force X<sv_pvn_force>,
sv_pvn_force_flags X<sv_pvn_force_flags>, sv_pvutf8n_force
X<sv_pvutf8n_force>, sv_reftype X<sv_reftype>, sv_replace X<sv_replace>,
sv_reset X<sv_reset>, sv_rvweaken X<sv_rvweaken>, sv_setiv X<sv_setiv>,
sv_setiv_mg X<sv_setiv_mg>, sv_setnv X<sv_setnv>, sv_setnv_mg
X<sv_setnv_mg>, sv_setpv X<sv_setpv>, sv_setpvf X<sv_setpvf>, sv_setpvf_mg
X<sv_setpvf_mg>, sv_setpviv X<sv_setpviv>, sv_setpviv_mg X<sv_setpviv_mg>,
sv_setpvn X<sv_setpvn>, sv_setpvn_mg X<sv_setpvn_mg>, sv_setpvs
X<sv_setpvs>, sv_setpv_mg X<sv_setpv_mg>, sv_setref_iv X<sv_setref_iv>,
sv_setref_nv X<sv_setref_nv>, sv_setref_pv X<sv_setref_pv>, sv_setref_pvn
X<sv_setref_pvn>, sv_setref_uv X<sv_setref_uv>, sv_setsv X<sv_setsv>,
sv_setsv_flags X<sv_setsv_flags>, sv_setsv_mg X<sv_setsv_mg>, sv_setuv
X<sv_setuv>, sv_setuv_mg X<sv_setuv_mg>, sv_tainted X<sv_tainted>, sv_true
X<sv_true>, sv_unmagic X<sv_unmagic>, sv_unref_flags X<sv_unref_flags>,
sv_untaint X<sv_untaint>, sv_upgrade X<sv_upgrade>, sv_usepvn_flags
X<sv_usepvn_flags>, sv_utf8_decode X<sv_utf8_decode>, sv_utf8_downgrade
X<sv_utf8_downgrade>, sv_utf8_encode X<sv_utf8_encode>, sv_utf8_upgrade
X<sv_utf8_upgrade>, sv_utf8_upgrade_flags X<sv_utf8_upgrade_flags>,
sv_vcatpvf X<sv_vcatpvf>, sv_vcatpvfn X<sv_vcatpvfn>, sv_vcatpvf_mg
X<sv_vcatpvf_mg>, sv_vsetpvf X<sv_vsetpvf>, sv_vsetpvfn X<sv_vsetpvfn>,
sv_vsetpvf_mg X<sv_vsetpvf_mg>

=item Unicode Support

bytes_from_utf8 X<bytes_from_utf8>, bytes_to_utf8 X<bytes_to_utf8>,
ibcmp_utf8 X<ibcmp_utf8>, is_utf8_char X<is_utf8_char>, is_utf8_string
X<is_utf8_string>, is_utf8_string_loc X<is_utf8_string_loc>,
is_utf8_string_loclen X<is_utf8_string_loclen>, pv_uni_display
X<pv_uni_display>, sv_cat_decode X<sv_cat_decode>, sv_recode_to_utf8
X<sv_recode_to_utf8>, sv_uni_display X<sv_uni_display>, to_utf8_case
X<to_utf8_case>, to_utf8_fold X<to_utf8_fold>, to_utf8_lower
X<to_utf8_lower>, to_utf8_title X<to_utf8_title>, to_utf8_upper
X<to_utf8_upper>, utf8n_to_uvchr X<utf8n_to_uvchr>, utf8n_to_uvuni
X<utf8n_to_uvuni>, utf8_distance X<utf8_distance>, utf8_hop X<utf8_hop>,
utf8_length X<utf8_length>, utf8_to_bytes X<utf8_to_bytes>, utf8_to_uvchr
X<utf8_to_uvchr>, utf8_to_uvuni X<utf8_to_uvuni>, uvchr_to_utf8
X<uvchr_to_utf8>, uvuni_to_utf8_flags X<uvuni_to_utf8_flags>

=item Variables created by C<xsubpp> and C<xsubpp> internal functions

ax X<ax>, CLASS X<CLASS>, dAX X<dAX>, dAXMARK X<dAXMARK>, dITEMS X<dITEMS>,
dUNDERBAR X<dUNDERBAR>, dXSARGS X<dXSARGS>, dXSI32 X<dXSI32>, items
X<items>, ix X<ix>, newXSproto X<newXSproto>, RETVAL X<RETVAL>, ST X<ST>,
THIS X<THIS>, UNDERBAR X<UNDERBAR>, XS X<XS>, XS_VERSION X<XS_VERSION>,
XS_VERSION_BOOTCHECK X<XS_VERSION_BOOTCHECK>

=item Warning and Dieing

croak X<croak>, warn X<warn>

=item AUTHORS

=item SEE ALSO

=back

=head2 perlintern - autogenerated documentation of purely B<internal>
		 Perl functions

=over 4

=item DESCRIPTION
X<internal Perl functions> X<interpreter functions>

=item CV reference counts and CvOUTSIDE

CvWEAKOUTSIDE X<CvWEAKOUTSIDE>

=item Functions in file pad.h

CX_CURPAD_SAVE X<CX_CURPAD_SAVE>, CX_CURPAD_SV X<CX_CURPAD_SV>, PAD_BASE_SV
X<PAD_BASE_SV>, PAD_CLONE_VARS X<PAD_CLONE_VARS>, PAD_COMPNAME_FLAGS
X<PAD_COMPNAME_FLAGS>, PAD_COMPNAME_GEN X<PAD_COMPNAME_GEN>,
PAD_COMPNAME_GEN_set X<PAD_COMPNAME_GEN_set>, PAD_COMPNAME_OURSTASH
X<PAD_COMPNAME_OURSTASH>, PAD_COMPNAME_PV X<PAD_COMPNAME_PV>,
PAD_COMPNAME_TYPE X<PAD_COMPNAME_TYPE>, PAD_DUP X<PAD_DUP>,
PAD_RESTORE_LOCAL X<PAD_RESTORE_LOCAL>, PAD_SAVE_LOCAL X<PAD_SAVE_LOCAL>,
PAD_SAVE_SETNULLPAD X<PAD_SAVE_SETNULLPAD>, PAD_SETSV X<PAD_SETSV>,
PAD_SET_CUR X<PAD_SET_CUR>, PAD_SET_CUR_NOSAVE X<PAD_SET_CUR_NOSAVE>,
PAD_SV X<PAD_SV>, PAD_SVl X<PAD_SVl>, SAVECLEARSV X<SAVECLEARSV>,
SAVECOMPPAD X<SAVECOMPPAD>, SAVEPADSV X<SAVEPADSV>

=item GV Functions

is_gv_magical X<is_gv_magical>, is_gv_magical_sv X<is_gv_magical_sv>

=item Hash Manipulation Functions

refcounted_he_chain_2hv X<refcounted_he_chain_2hv>, refcounted_he_free
X<refcounted_he_free>, refcounted_he_new X<refcounted_he_new>

=item IO Functions

start_glob X<start_glob>

=item Magical Functions

magic_sethint X<magic_sethint>, mg_localize X<mg_localize>

=item MRO Functions

mro_get_linear_isa_c3 X<mro_get_linear_isa_c3>, mro_get_linear_isa_dfs
X<mro_get_linear_isa_dfs>, mro_isa_changed_in X<mro_isa_changed_in>

=item Pad Data Structures

CvPADLIST X<CvPADLIST>, cv_clone X<cv_clone>, cv_dump X<cv_dump>,
do_dump_pad X<do_dump_pad>, intro_my X<intro_my>, pad_add_anon
X<pad_add_anon>, pad_add_name X<pad_add_name>, pad_alloc X<pad_alloc>,
pad_block_start X<pad_block_start>, pad_check_dup X<pad_check_dup>,
pad_findlex X<pad_findlex>, pad_findmy X<pad_findmy>, pad_fixup_inner_anons
X<pad_fixup_inner_anons>, pad_free X<pad_free>, pad_leavemy X<pad_leavemy>,
pad_new X<pad_new>, pad_push X<pad_push>, pad_reset X<pad_reset>, pad_setsv
X<pad_setsv>, pad_swipe X<pad_swipe>, pad_tidy X<pad_tidy>, pad_undef
X<pad_undef>

=item Per-Interpreter Variables

PL_DBsingle X<PL_DBsingle>, PL_DBsub X<PL_DBsub>, PL_DBtrace X<PL_DBtrace>,
PL_dowarn X<PL_dowarn>, PL_last_in_gv X<PL_last_in_gv>, PL_ofs_sv
X<PL_ofs_sv>, PL_rs X<PL_rs>

=item Stack Manipulation Macros

djSP X<djSP>, LVRET X<LVRET>

=item SV Manipulation Functions

sv_add_arena X<sv_add_arena>, sv_clean_all X<sv_clean_all>, sv_clean_objs
X<sv_clean_objs>, sv_free_arenas X<sv_free_arenas>

=item SV-Body Allocation

sv_2num X<sv_2num>

=item Unicode Support

find_uninit_var X<find_uninit_var>, report_uninit X<report_uninit>

=item AUTHORS

=item SEE ALSO

=back

=head2 perliol - C API for Perl's implementation of IO in Layers.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item History and Background

=item Basic Structure

=item Layers vs Disciplines

=item Data Structures

=item Functions and Attributes

=item Per-instance Data

=item Layers in action.

=item Per-instance flag bits

PERLIO_F_EOF, PERLIO_F_CANWRITE,  PERLIO_F_CANREAD, PERLIO_F_ERROR,
PERLIO_F_TRUNCATE, PERLIO_F_APPEND, PERLIO_F_CRLF, PERLIO_F_UTF8,
PERLIO_F_UNBUF, PERLIO_F_WRBUF, PERLIO_F_RDBUF, PERLIO_F_LINEBUF,
PERLIO_F_TEMP, PERLIO_F_OPEN, PERLIO_F_FASTGETS

=item Methods in Detail

fsize, name, size, kind, PERLIO_K_BUFFERED, PERLIO_K_RAW, PERLIO_K_CANCRLF,
PERLIO_K_FASTGETS, PERLIO_K_MULTIARG, Pushed, Popped, Open, Binmode,
Getarg, Fileno, Dup, Read, Write, Seek, Tell, Close, Flush, Fill, Eof,
Error,	Clearerr, Setlinebuf, Get_base, Get_bufsiz, Get_ptr, Get_cnt,
Set_ptrcnt

=item Utilities

=item Implementing PerlIO Layers

C implementations, Perl implementations

=item Core Layers

"unix", "perlio", "stdio", "crlf", "mmap", "pending", "raw", "utf8"

=item Extension Layers

":encoding", ":scalar", ":via"

=back

=item TODO

=back

=head2 perlapio - perl's IO abstraction interface.

=over 4

=item SYNOPSIS

=item DESCRIPTION

1. USE_STDIO, 2. USE_SFIO, 3. USE_PERLIO, B<PerlIO_stdin()>,
B<PerlIO_stdout()>, B<PerlIO_stderr()>, B<PerlIO_open(path, mode)>,
B<PerlIO_fdopen(fd,mode)>, B<PerlIO_reopen(path,mode,f)>,
B<PerlIO_printf(f,fmt,...)>, B<PerlIO_vprintf(f,fmt,a)>,
B<PerlIO_stdoutf(fmt,...)>, B<PerlIO_read(f,buf,count)>,
B<PerlIO_write(f,buf,count)>, B<PerlIO_close(f)>, B<PerlIO_puts(f,s)>,
B<PerlIO_putc(f,c)>, B<PerlIO_ungetc(f,c)>, B<PerlIO_getc(f)>,
B<PerlIO_eof(f)>, B<PerlIO_error(f)>, B<PerlIO_fileno(f)>,
B<PerlIO_clearerr(f)>, B<PerlIO_flush(f)>, B<PerlIO_seek(f,offset,whence)>,
B<PerlIO_tell(f)>, B<PerlIO_getpos(f,p)>, B<PerlIO_setpos(f,p)>,
B<PerlIO_rewind(f)>, B<PerlIO_tmpfile()>, B<PerlIO_setlinebuf(f)>

=over 4

=item Co-existence with stdio

B<PerlIO_importFILE(f,mode)>, B<PerlIO_exportFILE(f,mode)>,
B<PerlIO_releaseFILE(p,f)>, B<PerlIO_findFILE(f)>

=item "Fast gets" Functions

B<PerlIO_fast_gets(f)>, B<PerlIO_has_cntptr(f)>, B<PerlIO_get_cnt(f)>,
B<PerlIO_get_ptr(f)>, B<PerlIO_set_ptrcnt(f,p,c)>, B<PerlIO_canset_cnt(f)>,
B<PerlIO_set_cnt(f,c)>, B<PerlIO_has_base(f)>, B<PerlIO_get_base(f)>,
B<PerlIO_get_bufsiz(f)>

=item Other Functions

PerlIO_apply_layers(f,mode,layers), PerlIO_binmode(f,ptype,imode,layers),
'E<lt>' read, 'E<gt>' write, '+' read/write, PerlIO_debug(fmt,...)

=back

=back

=head2 perlhack - How to hack at the Perl internals

=over 4

=item DESCRIPTION

Does concept match the general goals of Perl?, Where is the
implementation?, Backwards compatibility, Could it be a module instead?, Is
the feature generic enough?, Does it potentially introduce new bugs?, Does
it preclude other desirable features?, Is the implementation robust?, Is
the implementation generic enough to be portable?, Is the implementation
tested?, Is there enough documentation?, Is there another way to do it?,
Does it create too much work?, Patches speak louder than words

=over 4

=item Keeping in sync

rsync'ing the source tree, Using rsync over the LAN, Using pushing over the
NFS, rsync'ing the patches

=item Why rsync the source tree

It's easier to rsync the source tree, It's more reliable

=item Why rsync the patches

It's easier to rsync the patches, It's a good reference, Finding a start
point, Finding how to fix a bug, Finding the source of misbehaviour

=item Working with the source

=item Perlbug administration

=item Submitting patches

L<perlguts>, L<perlxstut> and L<perlxs>, L<perlapi>,
F<Porting/pumpkin.pod>, The perl5-porters FAQ

=item Finding Your Way Around

Core modules, Tests, Documentation, Configure, Interpreter

=item Elements of the interpreter

Startup, Parsing, Optimization, Running, Exception handing

=item Internal Variable Types

=item Op Trees

=item Stacks

Argument stack, Mark stack, Save stack

=item Millions of Macros

=item The .i Targets

=back

=item SOURCE CODE STATIC ANALYSIS

=over 4

=item lint, splint

=item Coverity

=item cpd (cut-and-paste detector)

=item gcc warnings

=item Warnings of other C compilers

=item DEBUGGING

=item Poking at Perl

=item Using a source-level debugger

run [args], break function_name, break source.c:xxx, step, next, continue,
finish, 'enter', print

=item gdb macro support

=item Dumping Perl Data Structures

=item Patching

=item Patching a core module

=item Adding a new function to the core

=item Writing a test

F<t/base/>, F<t/cmd/>, F<t/comp/>, F<t/io/>, F<t/lib/>, F<t/mro/>,
F<t/op/>, F<t/pod/>, F<t/run/>, F<t/uni/>, F<t/win32/>, F<t/x2p>, t/base
t/comp, t/cmd t/run t/io t/op, t/lib ext lib

=item Special Make Test Targets

coretest, test.deparse, test.taintwarn, minitest, test.valgrind
check.valgrind utest.valgrind ucheck.valgrind, test.third check.third
utest.third ucheck.third, test.torture torturetest, utest ucheck test.utf8
check.utf8, minitest.utf16 test.utf16, test_harness, test-notty test_notty

=item Running tests by hand

-v, -torture, -re=PATTERN, -re LIST OF PATTERNS, PERL_CORE=1,
PERL_DESTRUCT_LEVEL=2, PERL, PERL_SKIP_TTY_TEST, PERL_TEST_Net_Ping,
PERL_TEST_NOVREXX, PERL_TEST_NUMCONVERTS

=item Common problems when patching Perl source code

=item Perl environment problems

=item Portability problems

=item Problematic System Interfaces

=item Security problems

=back

=item EXTERNAL TOOLS FOR DEBUGGING PERL

=over 4

=item Rational Software's Purify

=item Purify on Unix

-Accflags=-DPURIFY, -Doptimize='-g', -Uusemymalloc, -Dusemultiplicity

=item Purify on NT

DEFINES, USE_MULTI = define, #PERL_MALLOC = define, CFG = Debug

=item valgrind

=item Compaq's/Digital's/HP's Third Degree

=item PERL_DESTRUCT_LEVEL

=item PERL_MEM_LOG

=item Profiling

=item Gprof Profiling

-a, -b, -e routine, -f routine, -s, -z

=item GCC gcov Profiling

=item Pixie Profiling

-h, -l, -p[rocedures], -h[eavy], -i[nvocations], -l[ines], -testcoverage,
-z[ero]

=item Miscellaneous tricks

=back

=item CONCLUSION

I<The Road goes ever on and on, down from the door where it began.>

=item AUTHOR

=back

=head2 perlbook - Perl book information

=over 4

=item DESCRIPTION

=back

=head2 perlcommunity - a brief overview of the Perl community

=over 4

=item DESCRIPTION

=over 4

=item Where to find the community

=item Mailing lists and Newsgroups

=item IRC

=item Websites

L<http://perl.com/>, L<http://use.perl.org/>, L<http://www.perlmonks.org/>

=item User Groups

=item Workshops

=item Hackathons

=item Conventions

=item Calendar of Perl Events

=back

=item AUTHOR

=back

=head2 perltodo - Perl TO-DO List

=over 4

=item DESCRIPTION

=item Tasks that only need Perl knowledge

=over 4

=item Remove duplication of test setup.

=item merge common code in installperl and installman

=item common test code for timed bail out

=item POD -E<gt> HTML conversion in the core still sucks

=item merge checkpods and podchecker

=item perlmodlib.PL rewrite

=item Parallel testing

=item Make Schwern poorer

=item Improve the coverage of the core tests

=item test B

=item Deparse inlined constants

=item A decent benchmark

=item fix tainting bugs

=item Dual life everything

=item Improving C<threads::shared>

=item POSIX memory footprint

=item embed.pl/makedef.pl

=item use strict; and AutoLoad

=back

=item Tasks that need a little sysadmin-type knowledge

=over 4

=item make HTML install work

=item compressed man pages

=item Add a code coverage target to the Makefile

=item Make Config.pm cope with differences between built and installed perl

=item linker specification files

=item Cross-compile support

=item roffitall

=back

=item Tasks that need a little C knowledge

=over 4

=item Exterminate PL_na!

=item Modernize the order of directories in @@INC

=item -Duse32bit*

=item Make it clear from -v if this is the exact official release

=item Profile Perl - am I hot or not?

=item Allocate OPs from arenas

=item Improve win32/wince.c

=item Use secure CRT functions when building with VC8 on Win32

=item strcat(), strcpy(), strncat(), strncpy(), sprintf(), vsprintf()

=item -D_FORTIFY_SOURCE=2, -fstack-protector

=back

=item Tasks that need a knowledge of XS

=over 4

=item autovivification

=item Unicode in Filenames

=item Unicode in %ENV

=item Unicode and glob()

=item Unicode and lc/uc operators

=item use less 'memory'

=item Re-implement C<:unique> in a way that is actually thread-safe

=item Make tainting consistent

=item readpipe(LIST)

=item Audit the code for destruction ordering assumptions

=item Extend PerlIO and PerlIO::Scalar

=item -C on the #! line

=item Propagate const outwards from Perl_moreswitches()

=item Duplicate logic in S_method_common() and
Perl_gv_fetchmethod_autoload()

=item Organize error messages

=back

=item Tasks that need a knowledge of the interpreter

=over 4

=item state variable initialization in list context

=item Implement $value ~~ 0 .. $range

=item A does() built-in

=item Tied filehandles and write() don't mix

=item Attach/detach debugger from running program

=item Optimize away empty destructors

=item LVALUE functions for lists

=item LVALUE functions in the debugger

=item regexp optimiser optional

=item delete &function

=item C</w> regex modifier

=item optional optimizer

=item You WANT *how* many

=item lexical aliases

=item entersub XS vs Perl

=item Self-ties

=item Optimize away @@_

=item Properly Unicode safe tokeniser and pads.

=item The yada yada yada operators

=item Virtualize operating system access

=item Investigate PADTMP hash pessimisation

=back

=item Big projects

=over 4

=item make ithreads more robust

=item iCOW

=item (?{...}) closures in regexps

=item A re-entrant regexp engine

=item Add class set operations to regexp engine

=back

=back

=head2 perldoc - Look up Perl documentation in Pod format.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

B<-h>, B<-v>, B<-t>, B<-u>, B<-m> I<module>, B<-l>, B<-F>, B<-f>
I<perlfunc>, B<-q> I<perlfaq-search-regexp>, B<-T>, B<-d>
I<destination-filename>, B<-o> I<output-formatname>, B<-M> I<module-name>,
B<-w> I<option:value> or B<-w> I<option>, B<-X>, B<-L> I<language_code>,
B<PageName|ModuleName|ProgramName>, B<-n> I<some-formatter>, B<-r>, B<-i>,
B<-V>

=item SECURITY

=item ENVIRONMENT

=item AUTHOR

=back

=head2 perlhist - the Perl history records

=over 4

=item DESCRIPTION

=item INTRODUCTION

=item THE KEEPERS OF THE PUMPKIN

=over 4

=item PUMPKIN?

=back

=item THE RECORDS

=over 4

=item SELECTED RELEASE SIZES

=item SELECTED PATCH SIZES

=back

=item THE KEEPERS OF THE RECORDS

=back

=head2 perldelta - what is new for perl 5.10.0

=over 4

=item DESCRIPTION

=item Core Enhancements

=over 4

=item The C<feature> pragma

=item New B<-E> command-line switch

=item Defined-or operator

=item Switch and Smart Match operator

=item Regular expressions

Recursive Patterns, Named Capture Buffers, Possessive Quantifiers,
Backtracking control verbs, Relative backreferences, C<\K> escape, Vertical
and horizontal whitespace, and linebreak

=item C<say()>

=item Lexical C<$_>

=item The C<_> prototype

=item UNITCHECK blocks

=item New Pragma, C<mro>

=item readdir() may return a "short filename" on Windows

=item readpipe() is now overridable

=item Default argument for readline()

=item state() variables

=item Stacked filetest operators

=item UNIVERSAL::DOES()

=item Formats

=item Byte-order modifiers for pack() and unpack()

=item C<no VERSION>

=item C<chdir>, C<chmod> and C<chown> on filehandles

=item OS groups

=item Recursive sort subs

=item Exceptions in constant folding

=item Source filters in @@INC

=item New internal variables

C<${^RE_DEBUG_FLAGS}>, C<${^CHILD_ERROR_NATIVE}>, C<${^RE_TRIE_MAXBUF}>,
C<${^WIN32_SLOPPY_STAT}>

=item Miscellaneous

=item UCD 5.0.0

=item MAD

=item kill() on Windows

=back

=item Incompatible Changes

=over 4

=item Packing and UTF-8 strings

=item Byte/character count feature in unpack()

=item The C<$*> and C<$#> variables have been removed

=item substr() lvalues are no longer fixed-length

=item Parsing of C<-f _>

=item C<:unique>

=item Effect of pragmas in eval

=item chdir FOO

=item Handling of .pmc files

=item $^V is now a C<version> object instead of a v-string

=item @@- and @@+ in patterns

=item $AUTOLOAD can now be tainted

=item Tainting and printf

=item undef and signal handlers

=item strictures and dereferencing in defined()

=item C<(?p{})> has been removed

=item Pseudo-hashes have been removed

=item Removal of the bytecode compiler and of perlcc

=item Removal of the JPL

=item Recursive inheritance detected earlier

=back

=item Modules and Pragmata

=over 4

=item Upgrading individual core modules

=item Pragmata Changes

C<feature>, C<mro>, Scoping of the C<sort> pragma, Scoping of C<bignum>,
C<bigint>, C<bigrat>, C<base>, C<strict> and C<warnings>, C<version>,
C<warnings>, C<less>

=item New modules

=item Selected Changes to Core Modules

C<Attribute::Handlers>, C<B::Lint>, C<B>, C<Thread>

=back

=item Utility Changes

perl -d, ptar, ptardiff, shasum, corelist, h2ph and h2xs, perlivp,
find2perl, config_data, cpanp, cpan2dist, pod2html

=item New Documentation

=item Performance Enhancements

=over 4

=item In-place sorting

=item Lexical array access

=item XS-assisted SWASHGET

=item Constant subroutines

=item C<PERL_DONT_CREATE_GVSV>

=item Weak references are cheaper

=item sort() enhancements

=item Memory optimisations

=item UTF-8 cache optimisation

=item Sloppy stat on Windows

=item Regular expressions optimisations

Engine de-recursivised, Single char char-classes treated as literals, Trie
optimisation of literal string alternations, Aho-Corasick start-point
optimisation

=back

=item Installation and Configuration Improvements

=over 4

=item Configuration improvements

C<-Dusesitecustomize>, Relocatable installations, strlcat() and strlcpy(),
C<d_pseudofork> and C<d_printf_format_null>, Configure help

=item Compilation improvements

Parallel build, Borland's compilers support, Static build on Windows,
ppport.h files, C++ compatibility, Support for Microsoft 64-bit compiler,
Visual C++, Win32 builds

=item Installation improvements

Module auxiliary files

=item New Or Improved Platforms

=back

=item Selected Bug Fixes

strictures in regexp-eval blocks, Calling CORE::require(), Subscripts of
slices, C<no warnings 'category'> works correctly with -w, threads
improvements, chr() and negative values, PERL5SHELL and tainting, Using
*FILE{IO}, Overloading and reblessing, Overloading and UTF-8, eval memory
leaks fixed, Random device on Windows, PERLIO_DEBUG, PerlIO::scalar and
read-only scalars, study() and UTF-8, Critical signals, @@INC-hook fix,
C<-t> switch fix, Duping UTF-8 filehandles, Localisation of hash elements

=item New or Changed Diagnostics

Use of uninitialized value, Deprecated use of my() in false conditional,
!=~ should be !~, Newline in left-justified string, Too late for "-T"
option, "%s" variable %s masks earlier declaration,
readdir()/closedir()/etc. attempted on invalid dirhandle, Opening
dirhandle/filehandle %s also as a file/directory, Use of -P is deprecated,
v-string in use/require is non-portable, perl -V

=item Changed Internals

=over 4

=item Reordering of SVt_* constants

=item Elimination of SVt_PVBM

=item New type SVt_BIND

=item Removal of CPP symbols

=item Less space is used by ops

=item New parser

=item Use of C<const>

=item Mathoms

=item C<AvFLAGS> has been removed

=item C<av_*> changes

=item $^H and %^H

=item B:: modules inheritance changed

=item Anonymous hash and array constructors

=back

=item Known Problems

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl5100delta, perldelta - what is new for perl 5.10.0

=over 4

=item DESCRIPTION

=item Core Enhancements

=over 4

=item The C<feature> pragma

=item New B<-E> command-line switch

=item Defined-or operator

=item Switch and Smart Match operator

=item Regular expressions

Recursive Patterns, Named Capture Buffers, Possessive Quantifiers,
Backtracking control verbs, Relative backreferences, C<\K> escape, Vertical
and horizontal whitespace, and linebreak

=item C<say()>

=item Lexical C<$_>

=item The C<_> prototype

=item UNITCHECK blocks

=item New Pragma, C<mro>

=item readdir() may return a "short filename" on Windows

=item readpipe() is now overridable

=item Default argument for readline()

=item state() variables

=item Stacked filetest operators

=item UNIVERSAL::DOES()

=item Formats

=item Byte-order modifiers for pack() and unpack()

=item C<no VERSION>

=item C<chdir>, C<chmod> and C<chown> on filehandles

=item OS groups

=item Recursive sort subs

=item Exceptions in constant folding

=item Source filters in @@INC

=item New internal variables

C<${^RE_DEBUG_FLAGS}>, C<${^CHILD_ERROR_NATIVE}>, C<${^RE_TRIE_MAXBUF}>,
C<${^WIN32_SLOPPY_STAT}>

=item Miscellaneous

=item UCD 5.0.0

=item MAD

=item kill() on Windows

=back

=item Incompatible Changes

=over 4

=item Packing and UTF-8 strings

=item Byte/character count feature in unpack()

=item The C<$*> and C<$#> variables have been removed

=item substr() lvalues are no longer fixed-length

=item Parsing of C<-f _>

=item C<:unique>

=item Effect of pragmas in eval

=item chdir FOO

=item Handling of .pmc files

=item $^V is now a C<version> object instead of a v-string

=item @@- and @@+ in patterns

=item $AUTOLOAD can now be tainted

=item Tainting and printf

=item undef and signal handlers

=item strictures and dereferencing in defined()

=item C<(?p{})> has been removed

=item Pseudo-hashes have been removed

=item Removal of the bytecode compiler and of perlcc

=item Removal of the JPL

=item Recursive inheritance detected earlier

=back

=item Modules and Pragmata

=over 4

=item Upgrading individual core modules

=item Pragmata Changes

C<feature>, C<mro>, Scoping of the C<sort> pragma, Scoping of C<bignum>,
C<bigint>, C<bigrat>, C<base>, C<strict> and C<warnings>, C<version>,
C<warnings>, C<less>

=item New modules

=item Selected Changes to Core Modules

C<Attribute::Handlers>, C<B::Lint>, C<B>, C<Thread>

=back

=item Utility Changes

perl -d, ptar, ptardiff, shasum, corelist, h2ph and h2xs, perlivp,
find2perl, config_data, cpanp, cpan2dist, pod2html

=item New Documentation

=item Performance Enhancements

=over 4

=item In-place sorting

=item Lexical array access

=item XS-assisted SWASHGET

=item Constant subroutines

=item C<PERL_DONT_CREATE_GVSV>

=item Weak references are cheaper

=item sort() enhancements

=item Memory optimisations

=item UTF-8 cache optimisation

=item Sloppy stat on Windows

=item Regular expressions optimisations

Engine de-recursivised, Single char char-classes treated as literals, Trie
optimisation of literal string alternations, Aho-Corasick start-point
optimisation

=back

=item Installation and Configuration Improvements

=over 4

=item Configuration improvements

C<-Dusesitecustomize>, Relocatable installations, strlcat() and strlcpy(),
C<d_pseudofork> and C<d_printf_format_null>, Configure help

=item Compilation improvements

Parallel build, Borland's compilers support, Static build on Windows,
ppport.h files, C++ compatibility, Support for Microsoft 64-bit compiler,
Visual C++, Win32 builds

=item Installation improvements

Module auxiliary files

=item New Or Improved Platforms

=back

=item Selected Bug Fixes

strictures in regexp-eval blocks, Calling CORE::require(), Subscripts of
slices, C<no warnings 'category'> works correctly with -w, threads
improvements, chr() and negative values, PERL5SHELL and tainting, Using
*FILE{IO}, Overloading and reblessing, Overloading and UTF-8, eval memory
leaks fixed, Random device on Windows, PERLIO_DEBUG, PerlIO::scalar and
read-only scalars, study() and UTF-8, Critical signals, @@INC-hook fix,
C<-t> switch fix, Duping UTF-8 filehandles, Localisation of hash elements

=item New or Changed Diagnostics

Use of uninitialized value, Deprecated use of my() in false conditional,
!=~ should be !~, Newline in left-justified string, Too late for "-T"
option, "%s" variable %s masks earlier declaration,
readdir()/closedir()/etc. attempted on invalid dirhandle, Opening
dirhandle/filehandle %s also as a file/directory, Use of -P is deprecated,
v-string in use/require is non-portable, perl -V

=item Changed Internals

=over 4

=item Reordering of SVt_* constants

=item Elimination of SVt_PVBM

=item New type SVt_BIND

=item Removal of CPP symbols

=item Less space is used by ops

=item New parser

=item Use of C<const>

=item Mathoms

=item C<AvFLAGS> has been removed

=item C<av_*> changes

=item $^H and %^H

=item B:: modules inheritance changed

=item Anonymous hash and array constructors

=back

=item Known Problems

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl595delta - what is new for perl v5.9.5

=over 4

=item DESCRIPTION

=item Incompatible Changes

=over 4

=item Tainting and printf

=item undef and signal handlers

=item strictures and array/hash dereferencing in defined()

=item C<(?p{})> has been removed

=item Pseudo-hashes have been removed

=item Removal of the bytecode compiler and of perlcc

=item Removal of the JPL

=item Recursive inheritance detected earlier

=back

=item Core Enhancements

=over 4

=item Regular expressions

Recursive Patterns, Named Capture Buffers, Possessive Quantifiers,
Backtracking control verbs, Relative backreferences, C<\K> escape, Vertical
and horizontal whitespace, and linebreak

=item The C<_> prototype

=item UNITCHECK blocks

=item readpipe() is now overridable

=item default argument for readline()

=item UCD 5.0.0

=item Smart match

=item Implicit loading of C<feature>

=back

=item Modules and Pragmas

=over 4

=item New Pragma, C<mro>

=item bignum, bigint, bigrat

=item Math::BigInt/Math::BigFloat

config(), import(), roundmode common, bpi(), bcos(), bsin(), batan(),
batan2(), bmuladd(), bexp(), bnok(), from_hex(), from_oct(), and
from_bin(), as_oct()

=item New Core Modules

=item Module changes

C<assertions>, C<base>, C<strict> and C<warnings>, C<warnings>, C<less>,
C<Attribute::Handlers>, C<B::Lint>, C<B>, C<Thread>

=back

=item Utility Changes

=over 4

=item C<cpanp>

=item C<cpan2dist>

=item C<pod2html>

=back

=item Documentation

=over 4

=item New manpage, perlunifaq

=back

=item Performance Enhancements

=item Installation and Configuration Improvements

=over 4

=item C++ compatibility

=item Visual C++

=item Static build on Win32

=item win32 builds

=item C<d_pseudofork> and C<d_printf_format_null>

=item Help

=item 64bit systems

=item Ports

=back

=item Selected Bug Fixes

=item New or Changed Diagnostics

=over 4

=item Deprecations

=back

=item Changed Internals

=item Known Problems

=over 4

=item Platform Specific Problems

=back

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl594delta - what is new for perl v5.9.4

=over 4

=item DESCRIPTION

=item Incompatible Changes

=over 4

=item chdir FOO

=item Handling of pmc files

=item @@- and @@+ in patterns

=item $AUTOLOAD can now be tainted

=back

=item Core Enhancements

=over 4

=item state() variables

=item UNIVERSAL::DOES()

=item Exceptions in constant folding

=item Source filters in @@INC

=item MAD

=back

=item Modules and Pragmas

=over 4

=item New Core Modules

=back

=item Utility Changes

=over 4

=item config_data

=back

=item Documentation

=over 4

=item New manpage, perlpragma

=item New manpage, perlreguts

=item New manpage, perlunitut

=back

=item Performance Enhancements

=over 4

=item Memory optimisations

=item UTF-8 cache optimisation

=item Regular expressions

Engine de-recursivised, Single char char-classes treated as literals, Trie
optimisation of literal string alternations, Aho-Corasick start-point
optimisation

=item Sloppy stat on Windows

=back

=item Installation and Configuration Improvements

=over 4

=item Relocatable installations

=item Ports

=item Compilation improvements

=item New probes

=item Windows build improvements

Building XS extensions, Support for 64-bit compiler

=back

=item Selected Bug Fixes

=over 4

=item PERL5SHELL and tainting

=item Using *FILE{IO}

=item Overloading and reblessing

=item Overloading and UTF-8

=item eval memory leaks fixed

=item Random device on Windows

=back

=item New or Changed Diagnostics

State variable %s will be reinitialized

=item Changed Internals

=item Known Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl593delta - what is new for perl v5.9.3

=over 4

=item DESCRIPTION

=item Incompatible Changes

=over 4

=item Parsing of C<-f _>

=item C<mkdir()>

=item Magic goto and eval

=item C<$#> has been removed

=item C<:unique>

=item Scoping of the C<sort> pragma

=back

=item Core Enhancements

=over 4

=item The C<feature> pragma

=item Switch and Smart Match operator

=item C<say()>

=item C<CLONE_SKIP()>

=item C<${^CHILD_ERROR_NATIVE}>

=item Assertions

=item Unicode Character Database 4.1.0

=item C<no VERSION>

=item Recursive sort subs

=item Effect of pragmas in eval

=item New B<-E> command-line switch

=item C<chdir>, C<chmod> and C<chown> on filehandles

=item OS groups

=back

=item Modules and Pragmata

=over 4

=item New Core Modules

=back

=item Utility Changes

=over 4

=item C<ptar>

=item C<ptardiff>

=item C<shasum>

=item C<h2xs> enhancements

=item C<perlivp> enhancements

=back

=item Documentation

=over 4

=item Perl Glossary

=back

=item Performance Enhancements

=over 4

=item XS-assisted SWASHGET

=item Constant subroutines

=item C<PERL_DONT_CREATE_GVSV>

=item Weak references are cheaper

=item sort() enhancements

=back

=item Installation and Configuration Improvements

=over 4

=item Compilation improvements

=item New Or Improved Platforms

=item New probes

=item Module auxiliary files

=back

=item Selected Bug Fixes

=over 4

=item C<defined $$x>

=item Calling CORE::require()

=item Subscripts of slices

=item Remove over-optimisation

=item sprintf() fixes

=item no warnings 'category' works correctly with -w

=item Smaller fixes

=item More Unicode Fixes

=back

=item New or Changed Diagnostics

=over 4

=item Attempt to set length of freed array

=item Non-string passed as bitmask

=item Search pattern not terminated or ternary operator parsed as search
pattern

=item "%s" variable %s masks earlier declaration

=item readdir()/closedir()/etc. attempted on invalid dirhandle

=back

=item Changed Internals

=over 4

=item B:: modules inheritance changed

=back

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl592delta - what is new for perl v5.9.2

=over 4

=item DESCRIPTION

=item Incompatible Changes

=over 4

=item Packing and UTF-8 strings

=item Miscellaneous

=back

=item Core Enhancements

=over 4

=item Malloc wrapping

=item Unicode Character Database 4.0.1

=item suidperl less insecure

=item PERLIO_DEBUG

=item Formats

=item Unicode Character Classes

=item Byte-order modifiers for pack() and unpack()

=item Byte count feature in pack()

=item New variables

=back

=item Modules and Pragmata

=over 4

=item New modules

=item Updated And Improved Modules and Pragmata

B::Concise, Socket, Sys::Syslog, threads

=back

=item Utility Changes

=item Performance Enhancements

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item Known Problems

=item Plans for the next release

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl591delta - what is new for perl v5.9.1

=over 4

=item DESCRIPTION

=item Incompatible Changes

=over 4

=item substr() lvalues are no longer fixed-length

=item The C<:unique> attribute is only meaningful for globals

=back

=item Core Enhancements

=over 4

=item Lexical C<$_>

=item Tied hashes in scalar context

=item Formats

=item Stacked filetest operators

=back

=item Modules and Pragmata

Benchmark, Carp, Exporter, FindBin, List::Util, threads::shared

=item Utility Changes

=item Documentation

=item Performance Enhancements

=item Selected Bug Fixes

=over 4

=item UTF-8 bugs

=item Threading bugs

=item More bugs

=back

=item New or Changed Diagnostics

=item Changed Internals

=over 4

=item Reordering of SVt_* constants

=item Removal of CPP symbols

=item Less space is used by ops

=item New parser

=back

=item Configuration and Building

=item Known Problems

=over 4

=item Platform Specific Problems

=back

=item To-do for perl 5.10.0

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl590delta - what is new for perl v5.9.0

=over 4

=item DESCRIPTION

=item Incompatible Changes

=over 4

=item Hash Randomisation

=item UTF-8 On Filehandles No Longer Activated By Locale

=item Single-number v-strings are no longer v-strings before "=>"

=item (Win32) The -C Switch Has Been Repurposed

=item (Win32) The /d Switch Of cmd.exe

=item The C<$*> variable has been removed

=back

=item Core Enhancements

=over 4

=item Assertions

=item Defined-or operators

=item UTF-8 no longer default under UTF-8 locales

=item Unsafe signals again available

=item Tied Arrays with Negative Array Indices

=item local ${$x}

=item Unicode Character Database 4.0.0

=item Miscellaneous Enhancements

=back

=item Modules and Pragmata

=over 4

=item Updated Modules And Pragmata

base, B::Bytecode, B::Concise, B::Deparse, Benchmark, ByteLoader, bytes,
CGI, charnames, CPAN, Data::Dumper, DB_File, Devel::PPPort, Digest::MD5,
Encode, fields, libnet, Math::BigInt, MIME::Base64, NEXT, Net::Ping,
PerlIO::scalar, podlators, Pod::LaTeX, PodParsers, Pod::Perldoc,
Scalar::Util, Storable, strict, Term::ANSIcolor, Test::Harness, Test::More,
Test::Simple, Text::Balanced, Time::HiRes, threads, threads::shared,
Unicode::Collate, Unicode::Normalize, Win32::GetFolderPath,
Win32::GetOSVersion

=back

=item Utility Changes

=item New Documentation

=item Performance Enhancements

=item Installation and Configuration Improvements

=over 4

=item Platform-specific enhancements

=back

=item Selected Bug Fixes

=over 4

=item Closures, eval and lexicals

=item Generic fixes

=item Platform-specific fixes

=back

=item New or Changed Diagnostics

=over 4

=item Changed "A thread exited while %d threads were running"

=item Removed "Attempt to clear a restricted hash"

=item New "Illegal declaration of anonymous subroutine"

=item Changed "Invalid range "%s" in transliteration operator"

=item New "Missing control char name in \c"

=item New "Newline in left-justified string for %s"

=item New "Possible precedence problem on bitwise %c operator"

=item New "read() on %s filehandle %s"

=item New "Tied variable freed while still in use"

=item New "To%s: illegal mapping '%s'"

=item New "Use of freed value in iteration"

=back

=item Changed Internals

=item New Tests

=item Known Problems

=over 4

=item Tied hashes in scalar context

=item Net::Ping 450_service and 510_ping_udp failures

=item B::C

=back

=item Platform Specific Problems

=over 4

=item EBCDIC Platforms

=item Cygwin 1.5 problems

=item HP-UX: HP cc warnings about sendfile and sendpath

=item IRIX: t/uni/tr_7jis.t falsely failing

=item Mac OS X: no usemymalloc

=item Tru64: No threaded builds with GNU cc (gcc)

=item Win32: sysopen, sysread, syswrite

=back

=item TODO

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl588delta - what is new for perl v5.8.8

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata

=item Utility Changes

=over 4

=item C<h2xs> enhancements

=item C<perlivp> enhancements

=back

=item New Documentation

=item Performance Enhancements

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=over 4

=item no warnings 'category' works correctly with -w

=item Remove over-optimisation

=item sprintf() fixes

=item Debugger and Unicode slowdown

=item Smaller fixes

=back

=item New or Changed Diagnostics

=over 4

=item Attempt to set length of freed array

=item Non-string passed as bitmask

=item Search pattern not terminated or ternary operator parsed as search
pattern

=back

=item Changed Internals

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl587delta - what is new for perl v5.8.7

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=over 4

=item Unicode Character Database 4.1.0

=item suidperl less insecure

=item Optional site customization script

=item C<Config.pm> is now much smaller.

=back

=item Modules and Pragmata

=item Utility Changes

=over 4

=item find2perl enhancements

=back

=item Performance Enhancements

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item Known Problems

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl586delta - what is new for perl v5.8.6

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata

=item Utility Changes

=item Performance Enhancements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item New Tests

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl585delta - what is new for perl v5.8.5

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata

=item Utility Changes

=over 4

=item Perl's debugger

=item h2ph

=back

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item Known Problems

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl584delta - what is new for perl v5.8.4

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=over 4

=item Malloc wrapping

=item Unicode Character Database 4.0.1

=item suidperl less insecure

=item format

=back

=item Modules and Pragmata

=over 4

=item Updated modules

Attribute::Handlers, B, Benchmark, CGI, Carp, Cwd, Exporter, File::Find,
IO, IPC::Open3, Local::Maketext, Math::BigFloat, Math::BigInt,
Math::BigRat, MIME::Base64, ODBM_File, POSIX, Shell, Socket, Storable,
Switch, Sys::Syslog, Term::ANSIColor, Time::HiRes, Unicode::UCD, Win32,
base, open, threads, utf8

=back

=item Performance Enhancements

=item Utility Changes

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item Future Directions

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl583delta - what is new for perl v5.8.3

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata

CGI, Cwd, Digest, Digest::MD5, Encode, File::Spec, FindBin, List::Util,
Math::BigInt, PodParser, Pod::Perldoc, POSIX, Unicode::Collate,
Unicode::Normalize, Test::Harness, threads::shared

=item Utility Changes

=item New Documentation

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item Configuration and Building

=item Platform Specific Problems

=item Known Problems

=item Future Directions

=item Obituary

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl582delta - what is new for perl v5.8.2

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=over 4

=item Hash Randomisation

=item Threading

=back

=item Modules and Pragmata

=over 4

=item Updated Modules And Pragmata

Devel::PPPort, Digest::MD5, I18N::LangTags, libnet, MIME::Base64,
Pod::Perldoc, strict, Tie::Hash, Time::HiRes, Unicode::Collate,
Unicode::Normalize, UNIVERSAL

=back

=item Selected Bug Fixes

=item Changed Internals

=item Platform Specific Problems

=item Future Directions

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl581delta - what is new for perl v5.8.1

=over 4

=item DESCRIPTION

=item Incompatible Changes

=over 4

=item Hash Randomisation

=item UTF-8 On Filehandles No Longer Activated By Locale

=item Single-number v-strings are no longer v-strings before "=>"

=item (Win32) The -C Switch Has Been Repurposed

=item (Win32) The /d Switch Of cmd.exe

=back

=item Core Enhancements

=over 4

=item UTF-8 no longer default under UTF-8 locales

=item Unsafe signals again available

=item Tied Arrays with Negative Array Indices

=item local ${$x}

=item Unicode Character Database 4.0.0

=item Deprecation Warnings

=item Miscellaneous Enhancements

=back

=item Modules and Pragmata

=over 4

=item Updated Modules And Pragmata

base, B::Bytecode, B::Concise, B::Deparse, Benchmark, ByteLoader, bytes,
CGI, charnames, CPAN, Data::Dumper, DB_File, Devel::PPPort, Digest::MD5,
Encode, fields, libnet, Math::BigInt, MIME::Base64, NEXT, Net::Ping,
PerlIO::scalar, podlators, Pod::LaTeX, PodParsers, Pod::Perldoc,
Scalar::Util, Storable, strict, Term::ANSIcolor, Test::Harness, Test::More,
Test::Simple, Text::Balanced, Time::HiRes, threads, threads::shared,
Unicode::Collate, Unicode::Normalize, Win32::GetFolderPath,
Win32::GetOSVersion

=back

=item Utility Changes

=item New Documentation

=item Installation and Configuration Improvements

=over 4

=item Platform-specific enhancements

=back

=item Selected Bug Fixes

=over 4

=item Closures, eval and lexicals

=item Generic fixes

=item Platform-specific fixes

=back

=item New or Changed Diagnostics

=over 4

=item Changed "A thread exited while %d threads were running"

=item Removed "Attempt to clear a restricted hash"

=item New "Illegal declaration of anonymous subroutine"

=item Changed "Invalid range "%s" in transliteration operator"

=item New "Missing control char name in \c"

=item New "Newline in left-justified string for %s"

=item New "Possible precedence problem on bitwise %c operator"

=item New "Pseudo-hashes are deprecated"

=item New "read() on %s filehandle %s"

=item New "5.005 threads are deprecated"

=item New "Tied variable freed while still in use"

=item New "To%s: illegal mapping '%s'"

=item New "Use of freed value in iteration"

=back

=item Changed Internals

=item New Tests

=item Known Problems

=over 4

=item Tied hashes in scalar context

=item Net::Ping 450_service and 510_ping_udp failures

=item B::C

=back

=item Platform Specific Problems

=over 4

=item EBCDIC Platforms

=item Cygwin 1.5 problems

=item HP-UX: HP cc warnings about sendfile and sendpath

=item IRIX: t/uni/tr_7jis.t falsely failing

=item Mac OS X: no usemymalloc

=item Tru64: No threaded builds with GNU cc (gcc)

=item Win32: sysopen, sysread, syswrite

=back

=item Future Directions

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl58delta - what is new for perl v5.8.0

=over 4

=item DESCRIPTION

=item Highlights In 5.8.0

=item Incompatible Changes

=over 4

=item Binary Incompatibility

=item 64-bit platforms and malloc

=item AIX Dynaloading

=item Attributes for C<my> variables now handled at run-time

=item Socket Extension Dynamic in VMS

=item IEEE-format Floating Point Default on OpenVMS Alpha

=item New Unicode Semantics (no more C<use utf8>, almost)

=item New Unicode Properties

=item REF(...) Instead Of SCALAR(...)

=item pack/unpack D/F recycled

=item glob() now returns filenames in alphabetical order

=item Deprecations

=back

=item Core Enhancements

=over 4

=item Unicode Overhaul

=item PerlIO is Now The Default

=item ithreads

=item Restricted Hashes

=item Safe Signals

=item Understanding of Numbers

=item Arrays now always interpolate into double-quoted strings [561]

=item Miscellaneous Changes

=back

=item Modules and Pragmata

=over 4

=item New Modules and Pragmata

=item Updated And Improved Modules and Pragmata

=back

=item Utility Changes

=item New Documentation

=item Performance Enhancements

=item Installation and Configuration Improvements

=over 4

=item Generic Improvements

=item New Or Improved Platforms

=back

=item Selected Bug Fixes

=over 4

=item Platform Specific Changes and Fixes

=back

=item New or Changed Diagnostics

=item Changed Internals

=item Security Vulnerability Closed [561]

=item New Tests

=item Known Problems

=over 4

=item The Compiler Suite Is Still Very Experimental

=item Localising Tied Arrays and Hashes Is Broken

=item Building Extensions Can Fail Because Of Largefiles

=item Modifying $_ Inside for(..)

=item mod_perl 1.26 Doesn't Build With Threaded Perl

=item lib/ftmp-security tests warn 'system possibly insecure'

=item libwww-perl (LWP) fails base/date #51

=item PDL failing some tests

=item Perl_get_sv

=item Self-tying Problems

=item ext/threads/t/libc

=item Failure of Thread (5.005-style) tests

=item Timing problems

=item Tied/Magical Array/Hash Elements Do Not Autovivify

=item Unicode in package/class and subroutine names does not work

=back

=item Platform Specific Problems

=over 4

=item AIX

=item Alpha systems with old gccs fail several tests

=item AmigaOS

=item BeOS

=item Cygwin "unable to remap"

=item Cygwin ndbm tests fail on FAT

=item DJGPP Failures

=item FreeBSD built with ithreads coredumps reading large directories

=item FreeBSD Failing locale Test 117 For ISO 8859-15 Locales

=item IRIX fails ext/List/Util/t/shuffle.t or Digest::MD5

=item HP-UX lib/posix Subtest 9 Fails When LP64-Configured

=item Linux with glibc 2.2.5 fails t/op/int subtest #6 with -Duse64bitint

=item Linux With Sfio Fails op/misc Test 48

=item Mac OS X

=item Mac OS X dyld undefined symbols

=item OS/2 Test Failures

=item op/sprintf tests 91, 129, and 130

=item SCO

=item Solaris 2.5

=item Solaris x86 Fails Tests With -Duse64bitint

=item SUPER-UX (NEC SX)

=item Term::ReadKey not working on Win32

=item UNICOS/mk

=item UTS

=item VOS (Stratus)

=item VMS

=item Win32

=item XML::Parser not working

=item z/OS (OS/390)

=item Unicode Support on EBCDIC Still Spotty

=item Seen In Perl 5.7 But Gone Now

=back

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl573delta - what's new for perl v5.7.3

=over 4

=item DESCRIPTION

=item Changes

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl572delta - what's new for perl v5.7.2

=over 4

=item DESCRIPTION

=item Security Vulnerability Closed

=item Incompatible Changes

=over 4

=item 64-bit platforms and malloc

=item AIX Dynaloading

=item Socket Extension Dynamic in VMS

=item Different Definition of the Unicode Character Classes \p{In...}

=item Deprecations

=back

=item Core Enhancements

=item Modules and Pragmata

=over 4

=item New Modules and Distributions

=item Updated And Improved Modules and Pragmata

=back

=item Utility Changes

=item New Documentation

=item Installation and Configuration Improvements

=over 4

=item New Or Improved Platforms

=item Generic Improvements

=back

=item Selected Bug Fixes

=over 4

=item Platform Specific Changes and Fixes

=back

=item New or Changed Diagnostics

=item Source Code Enhancements

=over 4

=item MAGIC constants

=item Better commented code

=item Regex pre-/post-compilation items matched up

=item gcc -Wall

=back

=item New Tests

=item Known Problems

=over 4

=item AIX

=item Amiga Perl Invoking Mystery

=item lib/ftmp-security tests warn 'system possibly insecure'

=item Cygwin intermittent failures of lib/Memoize/t/expire_file 11 and 12

=item HP-UX lib/io_multihomed Fails When LP64-Configured

=item  HP-UX lib/posix Subtest 9 Fails When LP64-Configured

=item Linux With Sfio Fails op/misc Test 48

=item OS/390

=item op/sprintf tests 129 and 130

=item  Failure of Thread tests

=item UNICOS

=item UTS

=item VMS

=item Win32

=item Localising a Tied Variable Leaks Memory

=item Self-tying of Arrays and Hashes Is Forbidden

=item Variable Attributes are not Currently Usable for Tieing

=item Building Extensions Can Fail Because Of Largefiles

=item The Compiler Suite Is Still Experimental

=item The Long Double Support is Still Experimental

=back

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl571delta - what's new for perl v5.7.1

=over 4

=item DESCRIPTION

=item Security Vulnerability Closed

=item Incompatible Changes

=item Core Enhancements

=over 4

=item AUTOLOAD Is Now Lvaluable

=item PerlIO is Now The Default

=item Signals Are Now Safe

=back

=item Modules and Pragmata

=over 4

=item New Modules

=item Updated And Improved Modules and Pragmata

=back

=item Performance Enhancements

=item Utility Changes

=item New Documentation

=over 4

=item perlclib

=item perliol

=item README.aix

=item README.bs2000

=item README.macos

=item README.mpeix

=item README.solaris

=item README.vos

=item Porting/repository.pod

=back

=item Installation and Configuration Improvements

=over 4

=item New Or Improved Platforms

=item Generic Improvements

d_cmsghdr, d_fcntl_can_lock, d_fsync, d_getitimer, d_getpagsz, d_msghdr_s,
need_va_copy, d_readv, d_recvmsg, d_sendmsg, sig_size, d_sockatmark,
d_strtoq, d_u32align, d_ualarm, d_usleep

=back

=item Selected Bug Fixes

=over 4

=item Platform Specific Changes and Fixes

=back

=item New or Changed Diagnostics

=item Changed Internals

=item New Tests

=item Known Problems

=over 4

=item AIX vac 5.0.0.0 May Produce Buggy Code For Perl

=item lib/ftmp-security tests warn 'system possibly insecure'

=item lib/io_multihomed Fails In LP64-Configured HP-UX

=item Test lib/posix Subtest 9 Fails In LP64-Configured HP-UX

=item lib/b test 19

=item Linux With Sfio Fails op/misc Test 48

=item sigaction test 13 in VMS

=item sprintf tests 129 and 130

=item  Failure of Thread tests

=item Localising a Tied Variable Leaks Memory

=item Self-tying of Arrays and Hashes Is Forbidden

=item Building Extensions Can Fail Because Of Largefiles

=item The Compiler Suite Is Still Experimental

=back

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl570delta - what's new for perl v5.7.0

=over 4

=item DESCRIPTION

=item Security Vulnerability Closed

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata

=over 4

=item New Modules

=item Updated And Improved Modules and Pragmata

=back

=item Utility Changes

=item New Documentation

=item Performance Enhancements

=item Installation and Configuration Improvements

=over 4

=item Generic Improvements

=back

=item Selected Bug Fixes

=over 4

=item Platform Specific Changes and Fixes

=back

=item New or Changed Diagnostics

=item Changed Internals

=item Known Problems

=over 4

=item Unicode Support Still Far From Perfect

=item EBCDIC Still A Lost Platform

=item Building Extensions Can Fail Because Of Largefiles

=item ftmp-security tests warn 'system possibly insecure'

=item Test lib/posix Subtest 9 Fails In LP64-Configured HP-UX

=item Long Doubles Still Don't Work In Solaris

=item Linux With Sfio Fails op/misc Test 48

=item Storable tests fail in some platforms

=item Threads Are Still Experimental

=item The Compiler Suite Is Still Experimental

=back

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl561delta - what's new for perl v5.6.x

=over 4

=item DESCRIPTION

=item Summary of changes between 5.6.0 and 5.6.1

=over 4

=item Security Issues

=item Core bug fixes

C<UNIVERSAL::isa()>, Memory leaks, Numeric conversions, qw(a\\b), caller(),
Bugs in regular expressions, "slurp" mode, Autovivification of symbolic
references to special variables, Lexical warnings, Spurious warnings and
errors, glob(), Tainting, sort(), #line directives, Subroutine prototypes,
map(), Debugger, PERL5OPT, chop(), Unicode support, 64-bit support,
Compiler, Lvalue subroutines, IO::Socket, File::Find, xsubpp, C<no
Module;>, Tests

=item Core features

=item Configuration issues

=item Documentation

=item Bundled modules

B::Concise, File::Temp, Pod::LaTeX, Pod::Text::Overstrike, CGI, CPAN,
Class::Struct, DB_File, Devel::Peek, File::Find, Getopt::Long, IO::Poll,
IPC::Open3, Math::BigFloat, Math::Complex, Net::Ping, Opcode, Pod::Parser,
Pod::Text, SDBM_File, Sys::Syslog, Tie::RefHash, Tie::SubstrHash

=item Platform-specific improvements

NCR MP-RAS, NonStop-UX

=back

=item Core Enhancements

=over 4

=item Interpreter cloning, threads, and concurrency

=item Lexically scoped warning categories

=item Unicode and UTF-8 support

=item Support for interpolating named characters

=item "our" declarations

=item Support for strings represented as a vector of ordinals

=item Improved Perl version numbering system

=item New syntax for declaring subroutine attributes

=item File and directory handles can be autovivified

=item open() with more than two arguments

=item 64-bit support

=item Large file support

=item Long doubles

=item "more bits"

=item Enhanced support for sort() subroutines

=item C<sort $coderef @@foo> allowed

=item File globbing implemented internally

=item Support for CHECK blocks

=item POSIX character class syntax [: :] supported

=item Better pseudo-random number generator

=item Improved C<qw//> operator

=item Better worst-case behavior of hashes

=item pack() format 'Z' supported

=item pack() format modifier '!' supported

=item pack() and unpack() support counted strings

=item Comments in pack() templates

=item Weak references

=item Binary numbers supported

=item Lvalue subroutines

=item Some arrows may be omitted in calls through references

=item Boolean assignment operators are legal lvalues

=item exists() is supported on subroutine names

=item exists() and delete() are supported on array elements

=item Pseudo-hashes work better

=item Automatic flushing of output buffers

=item Better diagnostics on meaningless filehandle operations

=item Where possible, buffered data discarded from duped input filehandle

=item eof() has the same old magic as <>

=item binmode() can be used to set :crlf and :raw modes

=item C<-T> filetest recognizes UTF-8 encoded files as "text"

=item system(), backticks and pipe open now reflect exec() failure

=item Improved diagnostics

=item Diagnostics follow STDERR

=item More consistent close-on-exec behavior

=item syswrite() ease-of-use

=item Better syntax checks on parenthesized unary operators

=item Bit operators support full native integer width

=item Improved security features

=item More functional bareword prototype (*)

=item C<require> and C<do> may be overridden

=item $^X variables may now have names longer than one character

=item New variable $^C reflects C<-c> switch

=item New variable $^V contains Perl version as a string

=item Optional Y2K warnings

=item Arrays now always interpolate into double-quoted strings

=item @@- and @@+ provide starting/ending offsets of regex submatches

=back

=item Modules and Pragmata

=over 4

=item Modules

attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters

=item Pragmata

=back

=item Utility Changes

=over 4

=item dprofpp

=item find2perl

=item h2xs

=item perlcc

=item perldoc

=item The Perl Debugger

=back

=item Improved Documentation

perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod

=item Performance enhancements

=over 4

=item Simple sort() using { $a <=> $b } and the like are optimized

=item Optimized assignments to lexical variables

=item Faster subroutine calls

=item delete(), each(), values() and hash iteration are faster

=back

=item Installation and Configuration Improvements

=over 4

=item -Dusethreads means something different

=item New Configure flags

=item Threadedness and 64-bitness now more daring

=item Long Doubles

=item -Dusemorebits

=item -Duselargefiles

=item installusrbinperl

=item SOCKS support

=item C<-A> flag

=item Enhanced Installation Directories

=item gcc automatically tried if 'cc' does not seem to be working

=back

=item Platform specific changes

=over 4

=item Supported platforms

=item DOS

=item OS390 (OpenEdition MVS)

=item VMS

=item Win32

=back

=item Significant bug fixes

=over 4

=item <HANDLE> on empty files

=item C<eval '...'> improvements

=item All compilation errors are true errors

=item Implicitly closed filehandles are safer

=item Behavior of list slices is more consistent

=item C<(\$)> prototype and C<$foo{a}>

=item C<goto &sub> and AUTOLOAD

=item C<-bareword> allowed under C<use integer>

=item Failures in DESTROY()

=item Locale bugs fixed

=item Memory leaks

=item Spurious subroutine stubs after failed subroutine calls

=item Taint failures under C<-U>

=item END blocks and the C<-c> switch

=item Potential to leak DATA filehandles

=back

=item New or Changed Diagnostics

"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible unintended interpolation of %s in string,
Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME : ATTRS"
instead, Premature end of script headers, Repeat count in pack overflows,
Repeat count in unpack overflows, realloc() of freed memory ignored,
Reference is already weak, setpgrp can't take arguments, Strange *+?{} on
zero-length expression, switching effective %s is not implemented, This
Perl can't reset CRTL environ elements (%s), This Perl can't set CRTL
environ elements (%s=%s), Too late to run %s block, Unknown open() mode
'%s', Unknown process %x sent message to prime_env_iter: %s, Unrecognized
escape \\%c passed through, Unterminated attribute parameter in attribute
list, Unterminated attribute list, Unterminated attribute parameter in
subroutine attribute list, Unterminated subroutine attribute list, Value of
CLI symbol "%s" too long, Version number must be a constant number

=item New tests

=item Incompatible Changes

=over 4

=item Perl Source Incompatibilities

CHECK is a new keyword, Treatment of list slices of undef has changed,
Format of $English::PERL_VERSION is different, Literals of the form
C<1.2.3> parse differently, Possibly changed pseudo-random number
generator, Hashing function for hash keys has changed, C<undef> fails on
read only values, Close-on-exec bit may be set on pipe and socket handles,
Writing C<"$$1"> to mean C<"${$}1"> is unsupported, delete(), each(),
values() and C<\(%h)>, vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
Text of some diagnostic output has changed, C<%@@> has been removed,
Parenthesized not() behaves like a list operator, Semantics of bareword
prototype C<(*)> have changed, Semantics of bit operators may have changed
on 64-bit platforms, More builtins taint their results

=item C Source Incompatibilities

C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>

=item Compatible C Source API Changes

C<PATCHLEVEL> is now C<PERL_VERSION>

=item Binary Incompatibilities

=back

=item Known Problems

=over 4

=item Localizing a tied hash element may leak memory

=item Known test failures

=item EBCDIC platforms not fully supported

=item UNICOS/mk CC failures during Configure run

=item Arrow operator and arrays

=item Experimental features

Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression code constructs:

=back

=item Obsolete Diagnostics

Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, In string, @@%s now must be written as
\@@%s, Probable precedence problem on %s, regexp too big, Use of "$$<digit>"
to mean "${$}<digit>" is deprecated

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl56delta - what's new for perl v5.6.0

=over 4

=item DESCRIPTION

=item Core Enhancements

=over 4

=item Interpreter cloning, threads, and concurrency

=item Lexically scoped warning categories

=item Unicode and UTF-8 support

=item Support for interpolating named characters

=item "our" declarations

=item Support for strings represented as a vector of ordinals

=item Improved Perl version numbering system

=item New syntax for declaring subroutine attributes

=item File and directory handles can be autovivified

=item open() with more than two arguments

=item 64-bit support

=item Large file support

=item Long doubles

=item "more bits"

=item Enhanced support for sort() subroutines

=item C<sort $coderef @@foo> allowed

=item File globbing implemented internally

=item Support for CHECK blocks

=item POSIX character class syntax [: :] supported

=item Better pseudo-random number generator

=item Improved C<qw//> operator

=item Better worst-case behavior of hashes

=item pack() format 'Z' supported

=item pack() format modifier '!' supported

=item pack() and unpack() support counted strings

=item Comments in pack() templates

=item Weak references

=item Binary numbers supported

=item Lvalue subroutines

=item Some arrows may be omitted in calls through references

=item Boolean assignment operators are legal lvalues

=item exists() is supported on subroutine names

=item exists() and delete() are supported on array elements

=item Pseudo-hashes work better

=item Automatic flushing of output buffers

=item Better diagnostics on meaningless filehandle operations

=item Where possible, buffered data discarded from duped input filehandle

=item eof() has the same old magic as <>

=item binmode() can be used to set :crlf and :raw modes

=item C<-T> filetest recognizes UTF-8 encoded files as "text"

=item system(), backticks and pipe open now reflect exec() failure

=item Improved diagnostics

=item Diagnostics follow STDERR

=item More consistent close-on-exec behavior

=item syswrite() ease-of-use

=item Better syntax checks on parenthesized unary operators

=item Bit operators support full native integer width

=item Improved security features

=item More functional bareword prototype (*)

=item C<require> and C<do> may be overridden

=item $^X variables may now have names longer than one character

=item New variable $^C reflects C<-c> switch

=item New variable $^V contains Perl version as a string

=item Optional Y2K warnings

=item Arrays now always interpolate into double-quoted strings

=item @@- and @@+ provide starting/ending offsets of regex matches

=back

=item Modules and Pragmata

=over 4

=item Modules

attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters

=item Pragmata

=back

=item Utility Changes

=over 4

=item dprofpp

=item find2perl

=item h2xs

=item perlcc

=item perldoc

=item The Perl Debugger

=back

=item Improved Documentation

perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod

=item Performance enhancements

=over 4

=item Simple sort() using { $a <=> $b } and the like are optimized

=item Optimized assignments to lexical variables

=item Faster subroutine calls

=item delete(), each(), values() and hash iteration are faster

=back

=item Installation and Configuration Improvements

=over 4

=item -Dusethreads means something different

=item New Configure flags

=item Threadedness and 64-bitness now more daring

=item Long Doubles

=item -Dusemorebits

=item -Duselargefiles

=item installusrbinperl

=item SOCKS support

=item C<-A> flag

=item Enhanced Installation Directories

=back

=item Platform specific changes

=over 4

=item Supported platforms

=item DOS

=item OS390 (OpenEdition MVS)

=item VMS

=item Win32

=back

=item Significant bug fixes

=over 4

=item <HANDLE> on empty files

=item C<eval '...'> improvements

=item All compilation errors are true errors

=item Implicitly closed filehandles are safer

=item Behavior of list slices is more consistent

=item C<(\$)> prototype and C<$foo{a}>

=item C<goto &sub> and AUTOLOAD

=item C<-bareword> allowed under C<use integer>

=item Failures in DESTROY()

=item Locale bugs fixed

=item Memory leaks

=item Spurious subroutine stubs after failed subroutine calls

=item Taint failures under C<-U>

=item END blocks and the C<-c> switch

=item Potential to leak DATA filehandles

=back

=item New or Changed Diagnostics

"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible unintended interpolation of %s in string,
Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME : ATTRS"
instead, Premature end of script headers, Repeat count in pack overflows,
Repeat count in unpack overflows, realloc() of freed memory ignored,
Reference is already weak, setpgrp can't take arguments, Strange *+?{} on
zero-length expression, switching effective %s is not implemented, This
Perl can't reset CRTL environ elements (%s), This Perl can't set CRTL
environ elements (%s=%s), Too late to run %s block, Unknown open() mode
'%s', Unknown process %x sent message to prime_env_iter: %s, Unrecognized
escape \\%c passed through, Unterminated attribute parameter in attribute
list, Unterminated attribute list, Unterminated attribute parameter in
subroutine attribute list, Unterminated subroutine attribute list, Value of
CLI symbol "%s" too long, Version number must be a constant number

=item New tests

=item Incompatible Changes

=over 4

=item Perl Source Incompatibilities

CHECK is a new keyword, Treatment of list slices of undef has changed,
Format of $English::PERL_VERSION is different, Literals of the form
C<1.2.3> parse differently, Possibly changed pseudo-random number
generator, Hashing function for hash keys has changed, C<undef> fails on
read only values, Close-on-exec bit may be set on pipe and socket handles,
Writing C<"$$1"> to mean C<"${$}1"> is unsupported, delete(), each(),
values() and C<\(%h)>, vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
Text of some diagnostic output has changed, C<%@@> has been removed,
Parenthesized not() behaves like a list operator, Semantics of bareword
prototype C<(*)> have changed, Semantics of bit operators may have changed
on 64-bit platforms, More builtins taint their results

=item C Source Incompatibilities

C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>

=item Compatible C Source API Changes

C<PATCHLEVEL> is now C<PERL_VERSION>

=item Binary Incompatibilities

=back

=item Known Problems

=over 4

=item Thread test failures

=item EBCDIC platforms not supported

=item In 64-bit HP-UX the lib/io_multihomed test may hang

=item NEXTSTEP 3.3 POSIX test failure

=item Tru64 (aka Digital UNIX, aka DEC OSF/1) lib/sdbm test failure with
gcc

=item UNICOS/mk CC failures during Configure run

=item Arrow operator and arrays

=item Experimental features

Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression code constructs:

=back

=item Obsolete Diagnostics

Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, In string, @@%s now must be written as
\@@%s, Probable precedence problem on %s, regexp too big, Use of "$$<digit>"
to mean "${$}<digit>" is deprecated

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl5005delta - what's new for perl5.005

=over 4

=item DESCRIPTION

=item About the new versioning system

=item Incompatible Changes

=over 4

=item WARNING:	This version is not binary compatible with Perl 5.004.

=item Default installation structure has changed

=item Perl Source Compatibility

=item C Source Compatibility

=item Binary Compatibility

=item Security fixes may affect compatibility

=item Relaxed new mandatory warnings introduced in 5.004

=item Licensing

=back

=item Core Changes

=over 4

=item Threads

=item Compiler

=item Regular Expressions

Many new and improved optimizations, Many bug fixes, New regular expression
constructs, New operator for precompiled regular expressions, Other
improvements, Incompatible changes

=item	Improved malloc()

=item Quicksort is internally implemented

=item Reliable signals

=item Reliable stack pointers

=item More generous treatment of carriage returns

=item Memory leaks

=item Better support for multiple interpreters

=item Behavior of local() on array and hash elements is now well-defined

=item C<%!> is transparently tied to the L<Errno> module

=item Pseudo-hashes are supported

=item C<EXPR foreach EXPR> is supported

=item Keywords can be globally overridden

=item C<$^E> is meaningful on Win32

=item C<foreach (1..1000000)> optimized

=item C<Foo::> can be used as implicitly quoted package name

=item C<exists $Foo::{Bar::}> tests existence of a package

=item Better locale support

=item Experimental support for 64-bit platforms

=item prototype() returns useful results on builtins

=item Extended support for exception handling

=item Re-blessing in DESTROY() supported for chaining DESTROY() methods

=item All C<printf> format conversions are handled internally

=item New C<INIT> keyword

=item New C<lock> keyword

=item New C<qr//> operator

=item C<our> is now a reserved word

=item Tied arrays are now fully supported

=item Tied handles support is better

=item 4th argument to substr

=item Negative LENGTH argument to splice

=item Magic lvalues are now more magical

=item <> now reads in records

=back

=item Supported Platforms

=over 4

=item New Platforms

=item Changes in existing support

=back

=item Modules and Pragmata

=over 4

=item New Modules

B, Data::Dumper, Dumpvalue, Errno, File::Spec, ExtUtils::Installed,
ExtUtils::Packlist, Fatal, IPC::SysV, Test, Tie::Array, Tie::Handle,
Thread, attrs, fields, re

=item Changes in existing modules

Benchmark, Carp, CGI, Fcntl, Math::Complex, Math::Trig, POSIX, DB_File,
MakeMaker, CPAN, Cwd

=back

=item Utility Changes

=item Documentation Changes

=item New Diagnostics

Ambiguous call resolved as CORE::%s(), qualify as such or use &, Bad index
while coercing array into hash, Bareword "%s" refers to nonexistent
package, Can't call method "%s" on an undefined value, Can't check
filesystem of script "%s" for nosuid, Can't coerce array into hash, Can't
goto subroutine from an eval-string, Can't localize pseudo-hash element,
Can't use %%! because Errno.pm is not available, Cannot find an opnumber
for "%s", Character class syntax [. .] is reserved for future extensions,
Character class syntax [: :] is reserved for future extensions, Character
class syntax [= =] is reserved for future extensions, %s: Eval-group in
insecure regular expression, %s: Eval-group not allowed, use re 'eval', %s:
Eval-group not allowed at run time, Explicit blessing to '' (assuming
package main), Illegal hex digit ignored, No such array field, No such
field "%s" in variable %s of type %s, Out of memory during ridiculously
large request, Range iterator outside integer range, Recursive inheritance
detected while looking for method '%s' %s, Reference found where even-sized
list expected, Undefined value assigned to typeglob, Use of reserved word
"%s" is deprecated, perl: warning: Setting locale failed

=item Obsolete Diagnostics

Can't mktemp(), Can't write to temp file for B<-e>: %s, Cannot open
temporary file, regexp too big

=item Configuration Changes

=item BUGS

=item SEE ALSO

=item HISTORY

=back

=head2 perl5004delta - what's new for perl5.004

=over 4

=item DESCRIPTION

=item Supported Environments

=item Core Changes

=over 4

=item List assignment to %ENV works

=item Change to "Can't locate Foo.pm in @@INC" error

=item Compilation option: Binary compatibility with 5.003

=item $PERL5OPT environment variable

=item Limitations on B<-M>, B<-m>, and B<-T> options

=item More precise warnings

=item Deprecated: Inherited C<AUTOLOAD> for non-methods

=item Previously deprecated %OVERLOAD is no longer usable

=item Subroutine arguments created only when they're modified

=item Group vector changeable with C<$)>

=item Fixed parsing of $$<digit>, &$<digit>, etc.

=item Fixed localization of $<digit>, $&, etc.

=item No resetting of $. on implicit close

=item C<wantarray> may return undef

=item C<eval EXPR> determines value of EXPR in scalar context

=item Changes to tainting checks

No glob() or <*>, No spawning if tainted $CDPATH, $ENV, $BASH_ENV, No
spawning if tainted $TERM doesn't look like a terminal name

=item New Opcode module and revised Safe module

=item Embedding improvements

=item Internal change: FileHandle class based on IO::* classes

=item Internal change: PerlIO abstraction interface

=item New and changed syntax

$coderef->(PARAMS)

=item New and changed builtin constants

__PACKAGE__

=item New and changed builtin variables

$^E, $^H, $^M

=item New and changed builtin functions

delete on slices, flock, printf and sprintf, keys as an lvalue, my() in
Control Structures, pack() and unpack(), sysseek(), use VERSION, use Module
VERSION LIST, prototype(FUNCTION), srand, $_ as Default, C<m//gc> does not
reset search position on failure, C<m//x> ignores whitespace before ?*+{},
nested C<sub{}> closures work now, formats work right on changing lexicals

=item New builtin methods

isa(CLASS), can(METHOD), VERSION( [NEED] )

=item TIEHANDLE now supported

TIEHANDLE classname, LIST, PRINT this, LIST, PRINTF this, LIST, READ this
LIST, READLINE this, GETC this, DESTROY this

=item Malloc enhancements

-DPERL_EMERGENCY_SBRK, -DPACK_MALLOC, -DTWO_POT_OPTIMIZE

=item Miscellaneous efficiency enhancements

=back

=item Support for More Operating Systems

=over 4

=item Win32

=item Plan 9

=item QNX

=item AmigaOS

=back

=item Pragmata

use autouse MODULE => qw(sub1 sub2 sub3), use blib, use blib 'dir', use
constant NAME => VALUE, use locale, use ops, use vmsish

=item Modules

=over 4

=item Required Updates

=item Installation directories

=item Module information summary

=item Fcntl

=item IO

=item Math::Complex

=item Math::Trig

=item DB_File

=item Net::Ping

=item Object-oriented overrides for builtin operators

=back

=item Utility Changes

=over 4

=item pod2html

Sends converted HTML to standard output

=item xsubpp

C<void> XSUBs now default to returning nothing

=back

=item C Language API Changes

C<gv_fetchmethod> and C<perl_call_sv>, C<perl_eval_pv>, Extended API for
manipulating hashes

=item Documentation Changes

L<perldelta>, L<perlfaq>, L<perllocale>, L<perltoot>, L<perlapio>,
L<perlmodlib>, L<perldebug>, L<perlsec>

=item New Diagnostics

"my" variable %s masks earlier declaration in same scope, %s argument is
not a HASH element or slice, Allocation too large: %lx, Allocation too
large, Applying %s to %s will act on scalar(%s), Attempt to free
nonexistent shared string, Attempt to use reference as lvalue in substr,
Bareword "%s" refers to nonexistent package, Can't redefine active sort
subroutine %s, Can't use bareword ("%s") as %s ref while "strict refs" in
use, Cannot resolve method `%s' overloading `%s' in package `%s', Constant
subroutine %s redefined, Constant subroutine %s undefined, Copy method did
not return a reference, Died, Exiting pseudo-block via %s, Identifier too
long, Illegal character %s (carriage return), Illegal switch in PERL5OPT:
%s, Integer overflow in hex number, Integer overflow in octal number,
internal error: glob failed, Invalid conversion in %s: "%s", Invalid type
in pack: '%s', Invalid type in unpack: '%s', Name "%s::%s" used only once:
possible typo, Null picture in formline, Offset outside string, Out of
memory!, Out of memory during request for %s, panic: frexp, Possible
attempt to put comments in qw() list, Possible attempt to separate words
with commas, Scalar value @@%s{%s} better written as $%s{%s}, Stub found
while resolving method `%s' overloading `%s' in %s, Too late for "B<-T>"
option, untie attempted while %d inner references still exist, Unrecognized
character %s, Unsupported function fork, Use of "$$<digit>" to mean
"${$}<digit>" is deprecated, Value of %s can be "0"; test with defined(),
Variable "%s" may be unavailable, Variable "%s" will not stay shared,
Warning: something's wrong, Ill-formed logical name |%s| in prime_env_iter,
Got an error from DosAllocMem, Malformed PERLLIB_PREFIX, PERL_SH_DIR too
long, Process terminated by SIG%s

=item BUGS

=item SEE ALSO

=item HISTORY

=back

=head2 perlartistic - the Perl Artistic License

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item The "Artistic License"

=over 4

=item Preamble

=item Definitions

"Package", "Standard Version", "Copyright Holder", "You", "Reasonable
copying fee", "Freely Available"

=item Conditions

a), b), c), d), a), b), c), d)

=back

=back

=head2 perlgpl - the GNU General Public License, version 2

=over 4

=item SYNOPSIS

=back

=over 4

=item DESCRIPTION

=item GNU GENERAL PUBLIC LICENSE

=back

=head2 perlaix, README.aix - Perl version 5 on IBM Unix (AIX) systems

=over 4

=item DESCRIPTION

=over 4

=item Compiling Perl 5 on AIX

=item OS level

=item Building Dynamic Extensions on AIX

=item The IBM ANSI C Compiler

=item The usenm option

=item Using GNU's gcc for building perl

=item Using Large Files with Perl

=item Threaded Perl

=item 64-bit Perl

=item AIX 4.2 and extensions using C++ with statics

=back

=item AUTHOR

=item DATE

=back

=head2 perlamiga - Perl under Amiga OS

=over 4

=item NOTE

=item SYNOPSIS

=back

=over 4

=item DESCRIPTION

=over 4

=item Prerequisites for Compiling Perl on AmigaOS

B<Unix emulation for AmigaOS: ixemul.library>, B<Version of Amiga OS>

=item Starting Perl programs under AmigaOS

=item Shortcomings of Perl under AmigaOS

=back

=item INSTALLATION

=item Accessing documentation

=over 4

=item Manpages for Perl on AmigaOS

=item Perl HTML Documentation on AmigaOS

=item Perl GNU Info Files on AmigaOS

=item Perl LaTeX Documentation on AmigaOS

=back

=item BUILDING PERL ON AMIGAOS

=over 4

=item Build Prerequisites for Perl on AmigaOS

=item Getting the Perl Source for AmigaOS

=item Making Perl on AmigaOS

=item Testing Perl on AmigaOS

=item Installing the built Perl on AmigaOS

=back

=item PERL 5.8.0 BROKEN IN AMIGAOS

=item AUTHORS

=item SEE ALSO

=back

=head2 perlapollo, README.apollo - Perl version 5 on Apollo DomainOS

=over 4

=item DESCRIPTION

=item AUTHOR

=back

=head2 perlbeos, README.beos - Perl version 5.8+ on BeOS

=over 4

=item DESCRIPTION

=item BUILD AND INSTALL

=over 4

=item Requirements

=item Configure

=item Build

=item Install

=back

=item KNOWN PROBLEMS

=item CONTACT

=back

=head2 perlbs2000, README.BS2000 - building and installing Perl for BS2000.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item gzip on BS2000

=item bison on BS2000

=item Unpacking Perl Distribution on BS2000

=item Compiling Perl on BS2000

=item Testing Perl on BS2000

=item Installing Perl on BS2000

=item Using Perl in the Posix-Shell of BS2000

=item Using Perl in "native" BS2000

=item Floating point anomalies on BS2000

=item Using PerlIO and different encodings on ASCII and EBCDIC partitions

=back

=item AUTHORS

=item SEE ALSO

=over 4

=item Mailing list

=back

=item HISTORY

=back

=head2 perlce - Perl for WinCE

=over 4

=item Building Perl for WinCE

=over 4

=item DESCRIPTION

=item General explanations on cross-compiling WinCE

=item BUILD

Microsoft Embedded Visual Tools, Microsoft Visual C++, Rainer Keuchel's
celib-sources, Rainer Keuchel's console-sources, go to C<./win32>
subdirectory, edit file C<./win32/ce-helpers/compile.bat>, run	 
compile.bat, run    compile.bat dist

=back

=item Using Perl on WinCE

=over 4

=item DESCRIPTION

=item LIMITATIONS

=item ENVIRONMENT

PERL5LIB, PATH, TMP, UNIXROOTPATH, ROWS/COLS, HOME, CONSOLEFONTSIZE

=item REGISTRY

=item XS

=item BUGS

=item INSTALLATION

=back

=item ACKNOWLEDGEMENTS

=item History of WinCE port

=item AUTHORS

Rainer Keuchel <coyxc@@rainer-keuchel.de>, Vadim Konovalov

=back

=head2 perlcygwin, README.cygwin - Perl for Cygwin

=over 4

=item SYNOPSIS

=item PREREQUISITES FOR COMPILING PERL ON CYGWIN

=over 4

=item Cygwin = GNU+Cygnus+Windows (Don't leave UNIX without it)

=item Cygwin Configuration

C<PATH>, I<nroff>, Permissions

=back

=item CONFIGURE PERL ON CYGWIN

=over 4

=item Stripping Perl Binaries on Cygwin

=item Optional Libraries for Perl on Cygwin

C<-lcrypt>, C<-lgdbm_compat> (C<use GDBM_File>), C<-ldb> (C<use DB_File>),
C<cygserver> (C<use IPC::SysV>), C<-lutil>

=item Configure-time Options for Perl on Cygwin

C<-Uusedl>, C<-Uusemymalloc>, C<-Uuseperlio>, C<-Dusemultiplicity>,
C<-Duse64bitint>, C<-Duselongdouble>, C<-Dusethreads>, C<-Duselargefiles>,
C<-Dmksymlinks>

=item Suspicious Warnings on Cygwin

Win9x and C<d_eofnblk>, Compiler/Preprocessor defines

=back

=item MAKE ON CYGWIN

=item TEST ON CYGWIN

=over 4

=item File Permissions on Cygwin

=item NDBM_File and ODBM_File do not work on FAT filesystems

=item C<fork()> failures in io_* tests

=back

=item Specific features of the Cygwin port

=over 4

=item Script Portability on Cygwin

Pathnames, Text/Binary, PerlIO, F<.exe>, Cygwin vs. Windows process ids,
Cygwin vs. Windows errors, C<chown()>, Miscellaneous

=item Prebuilt methods:

C<Cwd::cwd>, C<Cygwin::pid_to_winpid>, C<Cygwin::winpid_to_pid>,
C<Cygwin::win_to_posix_path>, C<Cygwin::posix_to_win_path>,
C<Cygwin::mount_table()>, C<Cygwin::mount_flags>, C<Cygwin::is_binmount>

=back

=item INSTALL PERL ON CYGWIN

=item MANIFEST ON CYGWIN

Documentation, Build, Configure, Make, Install, Tests, Compiled Perl
Source, Compiled Module Source, Perl Modules/Scripts, Perl Module Tests

=item BUGS ON CYGWIN

=item AUTHORS

=item HISTORY

=back

=head2 perldgux - Perl under DG/UX.

=over 4

=item SYNOPSIS

=back

=over 4

=item DESCRIPTION

=item BUILDING PERL ON DG/UX

=over 4

=item Non-threaded Perl on DG/UX

=item Threaded Perl on DG/UX

=item Testing Perl on DG/UX

=item Installing the built perl on DG/UX

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 perldos - Perl under DOS, W31, W95.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Prerequisites for Compiling Perl on DOS

DJGPP, Pthreads

=item Shortcomings of Perl under DOS

=item Building Perl on DOS

=item Testing Perl on DOS

=item Installation of Perl on DOS

=back

=item BUILDING AND INSTALLING MODULES ON DOS

=over 4

=item Building Prerequisites for Perl on DOS

=item Unpacking CPAN Modules on DOS

=item Building Non-XS Modules on DOS

=item Building XS Modules on DOS

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 perlepoc, README.epoc - Perl for EPOC

=over 4

=item SYNOPSIS

=item INTRODUCTION

=item INSTALLING PERL ON EPOC

=item STARTING PERL ON EPOC

=over 4

=item Editors on Epoc

=item Features of Perl on Epoc

=item Restrictions of Perl on Epoc

=item Compiling Perl 5 on the EPOC cross compiling environment

=back

=item SUPPORT STATUS OF PERL ON EPOC

=item AUTHOR

=item LAST UPDATE

=back

=head2 perlfreebsd, README.freebsd - Perl version 5 on FreeBSD systems

=over 4

=item DESCRIPTION

=over 4

=item FreeBSD core dumps from readdir_r with ithreads

=item $^X doesn't always contain a full path in FreeBSD

=item Perl will no longer be part of "base FreeBSD"

=back

=item AUTHOR

=back

=head2 perlhpux, README.hpux - Perl version 5 on Hewlett-Packard Unix
(HP-UX) systems

=over 4

=item DESCRIPTION

=over 4

=item Using perl as shipped with HP-UX

=item Using perl from HP's porting centre

=item Compiling Perl 5 on HP-UX

=item PA-RISC

=item Portability Between PA-RISC Versions

=item PA-RISC 1.0

=item PA-RISC 1.1

=item PA-RISC 2.0

=item Itanium Processor Family (IPF) and HP-UX

=item Itanium, Itanium 2 & Madison 6

=item Building Dynamic Extensions on HP-UX

=item The HP ANSI C Compiler

=item The GNU C Compiler

=item Using Large Files with Perl on HP-UX

=item Threaded Perl on HP-UX

=item 64-bit Perl on HP-UX

=item Oracle on HP-UX

=item GDBM and Threads on HP-UX

=item NFS filesystems and utime(2) on HP-UX

=item perl -P and // and HP-UX

=item HP-UX Kernel Parameters (maxdsiz) for Compiling Perl

=back

=item nss_delete core dump from op/pwent or op/grent

=item Miscellaneous

=item AUTHOR

=item DATE

=back

=head2 perlhurd, README.hurd - Perl version 5 on Hurd

=over 4

=item DESCRIPTION

=over 4

=item Known Problems with Perl on Hurd 

=back

=item AUTHOR

=back

=head2 perlirix, README.irix - Perl version 5 on Irix systems

=over 4

=item DESCRIPTION

=over 4

=item Building 32-bit Perl in Irix

=item Building 64-bit Perl in Irix

=item About Compiler Versions of Irix

=item Linker Problems in Irix

=item Malloc in Irix

=item Building with threads in Irix

=item Irix 5.3

=back

=item AUTHOR

=back

=head2 perllinux, README.linux - Perl version 5 on Linux systems

=over 4

=item DESCRIPTION

=over 4

=item Experimental Support for Sun Studio Compilers for Linux OS

=back

=item AUTHOR

=back

=head2 perlmachten, README.machten - Perl version 5 on Power MachTen
systems

=over 4

=item DESCRIPTION

=over 4

=item Perl version 5.8.x and greater not supported

=item Compiling Perl 5.6.x on MachTen

=item Failures during C<make test> on MachTen

op/lexassign.t, pragma/warnings.t

=item Building external modules on MachTen

=back

=item AUTHOR

=item DATE

=back

=head2 perlmacos, README.macos - Perl under Mac OS (Classic)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item DATE

=back

=head2 perlmacosx, README.macosx - Perl under Mac OS X

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Installation Prefix

=item SDK support

=item Universal Binary support

=item 64-bit PPC support

=item libperl and Prebinding

=item Updating Apple's Perl

=item Known problems

=item MacPerl

=item Carbon

=item Cocoa

=back

=item Starting From Scratch

=item AUTHOR

=item DATE

=back

=head2 perlmint, README.mint - Perl version 5 on Atari MiNT

=over 4

=item DESCRIPTION

=item Known problems with Perl on MiNT

=item AUTHOR

=back

=head2 perlmpeix, README.mpeix - Perl/iX for HP e3000 MPE

=over 4

=item SYNOPSIS

=item NOTE

=item Binary distribution from HP

=item What's New in Perl for MPE/iX

=item Welcome to Perl/iX

=item System Requirements for Perl/iX

=item How to Obtain Perl/iX

=item Perl/iX Distribution Contents Highlights

README, INSTALL, LIBSHP3K, PERL, .cpan/, lib/, man/,
public_html/feedback.cgi, src/perl-5.6.0-mpe

=item How to Compile Perl/iX

 4,  6

=item Getting Started with Perl/iX

=item MPE/iX Implementation Considerations

=item Known Perl/iX Bugs Under Investigation

=item Perl/iX To-Do List

=item Perl/iX Change History

=item AUTHOR

=back

=head2 perlnetware - Perl for NetWare

=over 4

=item DESCRIPTION

=item BUILD

=over 4

=item Tools & SDK

=item Setup

SetNWBld.bat, Buildtype.bat

=item Make

=item Interpreter

=item Extensions

=back

=item INSTALL

=item BUILD NEW EXTENSIONS

=item ACKNOWLEDGEMENTS

=item AUTHORS

=item DATE

=back

=head2 perlopenbsd, README.openbsd - Perl version 5 on OpenBSD systems

=over 4

=item DESCRIPTION

=over 4

=item OpenBSD core dumps from getprotobyname_r and getservbyname_r with
ithreads

=back

=item AUTHOR

=back

=head2 perlos2 - Perl under OS/2, DOS, Win0.3*, Win0.95 and WinNT.

=over 4

=item SYNOPSIS

=back

=over 4

=item DESCRIPTION

=over 4

=item Target

=item Other OSes

=item Prerequisites

EMX, RSX, HPFS, pdksh

=item Starting Perl programs under OS/2 (and DOS and...)

=item Starting OS/2 (and DOS) programs under Perl

=back

=item Frequently asked questions

=over 4

=item "It does not work"

=item I cannot run external programs

=item I cannot embed perl into my program, or use F<perl.dll> from my
program. 

Is your program EMX-compiled with C<-Zmt -Zcrtdll>?, Did you use
L<ExtUtils::Embed>?

=item C<``> and pipe-C<open> do not work under DOS.

=item Cannot start C<find.exe "pattern" file>

=back

=item INSTALLATION

=over 4

=item Automatic binary installation

C<PERL_BADLANG>, C<PERL_BADFREE>, F<Config.pm>

=item Manual binary installation

Perl VIO and PM executables (dynamically linked), Perl_ VIO executable
(statically linked), Executables for Perl utilities, Main Perl library,
Additional Perl modules, Tools to compile Perl modules, Manpages for Perl
and utilities, Manpages for Perl modules, Source for Perl documentation,
Perl manual in F<.INF> format, Pdksh

=item B<Warning>

=back

=item Accessing documentation

=over 4

=item OS/2 F<.INF> file

=item Plain text

=item Manpages

=item HTML

=item GNU C<info> files

=item F<PDF> files

=item C<LaTeX> docs

=back

=item BUILD

=over 4

=item The short story

=item Prerequisites

=item Getting perl source

=item Application of the patches

=item Hand-editing

=item Making

=item Testing

A lot of C<bad free>, Process terminated by SIGTERM/SIGINT, F<op/fs.t>,
F<op/stat.t>

=item Installing the built perl

=item C<a.out>-style build

=back

=item Building a binary distribution

=item Building custom F<.EXE> files

=over 4

=item Making executables with a custom collection of statically loaded
extensions

=item Making executables with a custom search-paths

=back

=item Build FAQ

=over 4

=item Some C</> became C<\> in pdksh.

=item C<'errno'> - unresolved external

=item Problems with tr or sed

=item Some problem (forget which ;-)

=item Library ... not found

=item Segfault in make

=item op/sprintf test failure

=back

=item Specific (mis)features of OS/2 port

=over 4

=item C<setpriority>, C<getpriority>

=item C<system()>

=item C<extproc> on the first line

=item Additional modules:

=item Prebuilt methods:

C<File::Copy::syscopy>, C<DynaLoader::mod2fname>,  C<Cwd::current_drive()>,
 C<Cwd::sys_chdir(name)>,  C<Cwd::change_drive(name)>, 
C<Cwd::sys_is_absolute(name)>,	C<Cwd::sys_is_rooted(name)>, 
C<Cwd::sys_is_relative(name)>,	C<Cwd::sys_cwd(name)>, 
C<Cwd::sys_abspath(name, dir)>,  C<Cwd::extLibpath([type])>, 
C<Cwd::extLibpath_set( path [, type ] )>,
C<OS2::Error(do_harderror,do_exception)>, C<OS2::Errors2Drive(drive)>,
OS2::SysInfo(), OS2::BootDrive(), C<OS2::MorphPM(serve)>,
C<OS2::UnMorphPM(serve)>, C<OS2::Serve_Messages(force)>,
C<OS2::Process_Messages(force [, cnt])>, C<OS2::_control87(new,mask)>,
OS2::get_control87(), C<OS2::set_control87_em(new=MCW_EM,mask=MCW_EM)>,
C<OS2::DLLname([how [, \&xsub]])>

=item Prebuilt variables:

$OS2::emx_rev, $OS2::emx_env, $OS2::os_ver, $OS2::is_aout, $OS2::can_fork,
$OS2::nsyserror

=item Misfeatures

=item Modifications

C<popen>, C<tmpnam>, C<tmpfile>, C<ctermid>, C<stat>, C<mkdir>, C<rmdir>,
C<flock>

=item Identifying DLLs

=item Centralized management of resources

C<HAB>, C<HMQ>, Treating errors reported by OS/2 API,
C<CheckOSError(expr)>, C<CheckWinError(expr)>, C<SaveWinError(expr)>,
C<SaveCroakWinError(expr,die,name1,name2)>, C<WinError_2_Perl_rc>,
C<FillWinError>, C<FillOSError(rc)>, Loading DLLs and ordinals in DLLs

=back

=item Perl flavors

=over 4

=item F<perl.exe>

=item F<perl_.exe>

=item F<perl__.exe>

=item F<perl___.exe>

=item Why strange names?

=item Why dynamic linking?

=item Why chimera build?

=back

=item ENVIRONMENT

=over 4

=item C<PERLLIB_PREFIX>

=item C<PERL_BADLANG>

=item C<PERL_BADFREE>

=item C<PERL_SH_DIR>

=item C<USE_PERL_FLOCK>

=item C<TMP> or C<TEMP>

=back

=item Evolution

=over 4

=item Text-mode filehandles

=item Priorities

=item DLL name mangling: pre 5.6.2

=item DLL name mangling: 5.6.2 and beyond

Global DLLs, specific DLLs, C<BEGINLIBPATH> and C<ENDLIBPATH>, F<.> from
C<LIBPATH>

=item DLL forwarder generation

=item Threading

=item Calls to external programs

=item Memory allocation

=item Threads

C<COND_WAIT>, F<os2.c>

=back

=item BUGS

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 perlos390, README.os390 - building and installing Perl for OS/390
and z/OS

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Tools

=item Unpacking Perl distribution on OS/390

=item Setup and utilities for Perl on OS/390

=item Configure Perl on OS/390

=item Build, Test, Install Perl on OS/390

=item Build Anomalies with Perl on OS/390

=item Testing Anomalies with Perl on OS/390

=item Installation Anomalies with Perl on OS/390

=item Usage Hints for Perl on OS/390

=item Floating Point Anomalies with Perl on OS/390

=item Modules and Extensions for Perl on OS/390

=back

=item AUTHORS

=item SEE ALSO

=over 4

=item Mailing list for Perl on OS/390

=back

=item HISTORY

=back

=head2 perlos400, README.os400 - Perl version 5 on OS/400

=over 4

=item DESCRIPTION

=over 4

=item Compiling Perl for OS/400 PASE

=item Installing Perl in OS/400 PASE

=item Using Perl in OS/400 PASE

=item Known Problems

=item Perl on ILE

=back

=item AUTHORS

=back

=head2 perlplan9 - Plan 9-specific documentation for Perl

=over 4

=item DESCRIPTION

=over 4

=item Invoking Perl

=item What's in Plan 9 Perl

=item What's not in Plan 9 Perl

=item Perl5 Functions not currently supported in Plan 9 Perl

=item Signals in Plan 9 Perl

=back

=item COMPILING AND INSTALLING PERL ON PLAN 9

=over 4

=item Installing Perl Documentation on Plan 9

=back

=item BUGS

=item Revision date

=item AUTHOR

=back

=head2 perlqnx, README.qnx - Perl version 5 on QNX

=over 4

=item DESCRIPTION

=over 4

=item Required Software for Compiling Perl on QNX4

/bin/sh, ar, nm, cpp, make

=item Outstanding Issues with Perl on QNX4

=item QNX auxiliary files

qnx/ar, qnx/cpp

=item Outstanding issues with perl under QNX6

=back

=item AUTHOR

=back

=head2 perlriscos, README.riscos - Perl version 5 for RISC OS

=over 4

=item DESCRIPTION

=item BUILD

=item AUTHOR

=back

=head2 perlsolaris, README.solaris - Perl version 5 on Solaris systems

=over 4

=item DESCRIPTION

=over 4

=item Solaris Version Numbers.

=back

=item RESOURCES

Solaris FAQ, Precompiled Binaries, Solaris Documentation

=item SETTING UP

=over 4

=item File Extraction Problems on Solaris.

=item Compiler and Related Tools on Solaris.

=item Environment for Compiling perl on Solaris

=back

=item RUN CONFIGURE.

=over 4

=item 64-bit perl on Solaris.

=item Threads in perl on Solaris.

=item Malloc Issues with perl on Solaris.

=back

=item MAKE PROBLEMS.

Dynamic Loading Problems With GNU as and GNU ld, ld.so.1: ./perl: fatal:
relocation error:, dlopen: stub interception failed, #error "No
DATAMODEL_NATIVE specified", sh: ar: not found

=item MAKE TEST

=over 4

=item op/stat.t test 4 in Solaris

=item nss_delete core dump from op/pwent or op/grent

=back

=item PREBUILT BINARIES OF PERL FOR SOLARIS.

=item RUNTIME ISSUES FOR PERL ON SOLARIS.

=over 4

=item Limits on Numbers of Open Files on Solaris.

=back

=item SOLARIS-SPECIFIC MODULES.

=item SOLARIS-SPECIFIC PROBLEMS WITH MODULES.

=over 4

=item Proc::ProcessTable on Solaris

=item BSD::Resource on Solaris

=item Net::SSLeay on Solaris

=back

=item SunOS 4.x

=item AUTHOR

=back

=head2 perlsymbian, README.symbian - Perl version 5 on Symbian OS

=over 4

=item DESCRIPTION

=over 4

=item Compiling Perl on Symbian

=item Compilation problems

=item PerlApp

=item sisify.pl

=item Using Perl in Symbian

=back

=item TO DO

=item WARNING

=item NOTE

=item AUTHOR

=item COPYRIGHT

=item LICENSE

=item HISTORY

=back

=head2 perltru64, README.tru64 - Perl version 5 on Tru64 (formerly known as
Digital UNIX formerly known as DEC OSF/1) systems

=over 4

=item DESCRIPTION

=over 4

=item Compiling Perl 5 on Tru64

=item Using Large Files with Perl on Tru64

=item Threaded Perl on Tru64

=item Long Doubles on Tru64

=item DB_File tests failing on Tru64

=item 64-bit Perl on Tru64

=item Warnings about floating-point overflow when compiling Perl on Tru64

=back

=item Testing Perl on Tru64

=item ext/ODBM_File/odbm Test Failing With Static Builds

=item Perl Fails Because Of Unresolved Symbol sockatmark

=item AUTHOR

=back

=head2 perluts - Perl under UTS

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUILDING PERL ON UTS

=item Installing the built perl on UTS

=item AUTHOR

=back

=head2 perlvmesa, README.vmesa - building and installing Perl for VM/ESA.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Unpacking Perl Distribution on VM/ESA

=item Setup Perl and utilities on VM/ESA

=item Configure Perl on VM/ESA

=item Testing Anomalies of Perl on VM/ESA

=item Usage Hints for Perl on VM/ESA

=back

=item AUTHORS

=item SEE ALSO

=over 4

=item Mailing list for Perl on VM/ESA

=back

=back

=head2 perlvms - VMS-specific documentation for Perl

=over 4

=item DESCRIPTION

=item Installation

=item Organization of Perl Images

=over 4

=item Core Images

=item Perl Extensions

=item Installing static extensions

=item Installing dynamic extensions

=back

=item File specifications

=over 4

=item Syntax

=item Filename Case

=item Symbolic Links

=item Wildcard expansion

=item Pipes

=back

=item PERL5LIB and PERLLIB

=item The Perl Forked Debugger

=item PERL_VMS_EXCEPTION_DEBUG

=item Command line

=over 4

=item I/O redirection and backgrounding

=item Command line switches

-i, -S, -u

=back

=item Perl functions

File tests, backticks, binmode FILEHANDLE, crypt PLAINTEXT, USER, die,
dump, exec LIST, fork, getpwent, getpwnam, getpwuid, gmtime, kill, qx//,
select (system call), stat EXPR, system LIST, time, times, unlink LIST,
utime LIST, waitpid PID,FLAGS

=item Perl variables

%ENV, CRTL_ENV, CLISYM_[LOCAL], Any other string, $!, $^E, $?, $|

=item Standard modules with VMS-specific differences

=over 4

=item SDBM_File

=back

=item Revision date

=item AUTHOR

=back

=head2 perlvos, README.vos - Perl for Stratus VOS

=over 4

=item SYNOPSIS

=item BUILDING PERL FOR VOS

=item INSTALLING PERL IN VOS

=item USING PERL IN VOS

=over 4

=item Restrictions of Perl on VOS

=item Handling of underflow and overflow

=back

=item TEST STATUS

=item SUPPORT STATUS

=item AUTHOR

=item LAST UPDATE

=back

=head2 perlwin32 - Perl under Windows

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Setting Up Perl on Win32

Make, Command Shell, Borland C++, Microsoft Visual C++, Microsoft Visual
C++ 2008 Express Edition Beta 2, Microsoft Visual C++ 2005 Express Edition,
Microsoft Visual C++ Toolkit 2003, Microsoft Platform SDK 64-bit Compiler,
MinGW release 3 with gcc, MinGW release 1 with gcc

=item Building

=item Testing Perl on Win32

=item Installation of Perl on Win32

=item Usage Hints for Perl on Win32

Environment Variables, File Globbing, Using perl from the command line,
Building Extensions, Command-line Wildcard Expansion, Win32 Specific
Extensions, Notes on 64-bit Windows

=item Running Perl Scripts

=item Miscellaneous Things

=back

=item BUGS AND CAVEATS

=item ACKNOWLEDGEMENTS

=item AUTHORS

Gary Ng E<lt>71564.1743@@CompuServe.COME<gt>, Gurusamy Sarathy
E<lt>gsar@@activestate.comE<gt>, Nick Ing-Simmons
E<lt>nick@@ing-simmons.netE<gt>, Jan Dubois E<lt>jand@@activestate.comE<gt>,
Steve Hay E<lt>steve.hay@@uk.radan.comE<gt>

=item SEE ALSO

=item HISTORY

=back

=head1 PRAGMA DOCUMENTATION

=head2 attrs - set/get attributes of a subroutine (deprecated)

=over 4

=item SYNOPSIS

=item DESCRIPTION

method, locked

=back

=head2 re - Perl pragma to alter regular expression behaviour

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item 'taint' mode

=item 'eval' mode

=item 'debug' mode

=item 'Debug' mode

Compile related options, COMPILE, PARSE, OPTIMISE, TRIEC, DUMP, Execute
related options, EXECUTE, MATCH, TRIEE, INTUIT, Extra debugging options,
EXTRA, BUFFERS, TRIEM, STATE, STACK, OPTIMISEM, OFFSETS, OFFSETSDBG, Other
useful flags, ALL, All, MORE, More

=item Exportable Functions

is_regexp($ref), regexp_pattern($ref), regmust($ref), regname($name,$all),
regnames($all), regnames_count()

=back

=item SEE ALSO

=back

=head2 threadshared::shared, threads::shared - Perl extension for sharing
data structures between threads

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=item EXPORT

=item FUNCTIONS

share VARIABLE, is_shared VARIABLE, lock VARIABLE, cond_wait VARIABLE,
cond_wait CONDVAR, LOCKVAR, cond_timedwait VARIABLE, ABS_TIMEOUT,
cond_timedwait CONDVAR, ABS_TIMEOUT, LOCKVAR, cond_signal VARIABLE,
cond_broadcast VARIABLE

=item OBJECTS

=item NOTES

=item BUGS AND LIMITATIONS

=item SEE ALSO

=item AUTHOR

=back

=head2 threads - Perl interpreter-based threads

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

$thr = threads->create(FUNCTION, ARGS), $thr->join(), $thr->detach(),
threads->detach(), threads->self(), $thr->tid(), threads->tid(), "$thr",
threads->object($tid), threads->yield(), threads->list(),
threads->list(threads::all), threads->list(threads::running),
threads->list(threads::joinable), $thr1->equal($thr2), async BLOCK;,
$thr->error(), $thr->_handle(), threads->_handle()

=item EXITING A THREAD

threads->exit(), threads->exit(status), die(), exit(status), use threads
'exit' => 'threads_only', threads->create({'exit' => 'thread_only'}, ...),
$thr->set_thread_exit_only(boolean), threads->set_thread_exit_only(boolean)

=item THREAD STATE

$thr->is_running(), $thr->is_joinable(), $thr->is_detached(),
threads->is_detached()

=item THREAD CONTEXT

=over 4

=item Explicit context

=item Implicit context

=item $thr->wantarray()

=item threads->wantarray()

=back

=item THREAD STACK SIZE

threads->get_stack_size();, $size = $thr->get_stack_size();, $old_size =
threads->set_stack_size($new_size);, use threads ('stack_size' => VALUE);,
$ENV{'PERL5_ITHREADS_STACK_SIZE'}, threads->create({'stack_size' => VALUE},
FUNCTION, ARGS), $thr2 = $thr1->create(FUNCTION, ARGS)

=item THREAD SIGNALLING

$thr->kill('SIG...');

=item WARNINGS

Perl exited with active threads:, Thread creation failed: pthread_create
returned #, Thread # terminated abnormally: .., Using minimum thread stack
size of #, Thread creation failed: pthread_attr_setstacksize(I<SIZE>)
returned 22

=item ERRORS

This Perl not built to support threads, Cannot change stack size of an
existing thread, Cannot signal threads without safe signals, Unrecognized
signal name: ..

=item BUGS AND LIMITATIONS

Thread-safe modules, Using non-thread-safe modules, Current working
directory, Environment variables, Parent-child threads, Creating threads
inside special blocks, Unsafe signals, Perl has been built with
C<PERL_OLD_SIGNALS> (see C<perl -V>), The environment variable
C<PERL_SIGNALS> is set to C<unsafe> (see L<perlrun/"PERL_SIGNALS">), The
module L<Perl::Unsafe::Signals> is used, Returning closures from threads,
Returning objects from threads, Perl Bugs and the CPAN Version of
L<threads>

=item REQUIREMENTS

=item SEE ALSO

=item AUTHOR

=item ACKNOWLEDGEMENTS

=back

=head2 attributes - get/set subroutine or variable attributes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Built-in Attributes

locked, method, lvalue

=item Available Subroutines

get, reftype

=item Package-specific Attribute Handling

FETCH_I<type>_ATTRIBUTES, MODIFY_I<type>_ATTRIBUTES

=item Syntax of Attribute Lists

=back

=item EXPORTS

=over 4

=item Default exports

=item Available exports

=item Export tags defined

=back

=item EXAMPLES

=item SEE ALSO

=back

=head2 autouse - postpone load of modules until a function is used

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item WARNING

=item AUTHOR

=item SEE ALSO

=back

=head2 base - Establish an ISA relationship with base classes at compile
time

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item DIAGNOSTICS

Base class package "%s" is empty, Class 'Foo' tried to inherit from itself

=item HISTORY

=item CAVEATS

=item SEE ALSO

=back

=head2 bigint - Transparent BigInteger support for Perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item use integer vs. use bigint

=item Options

a or accuracy, p or precision, t or trace, hex, oct, l, lib, try or only, v
or version

=item Math Library

=item Internal Format

=item Sign

=item Methods

inf(), NaN(), e, PI, bexp(), bpi(), upgrade(), in_effect()

=item MATH LIBRARY

=item Caveat

=back

=item CAVAETS

in_effect(), hex()/oct()

=item MODULES USED

=item EXAMPLES

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 bignum - Transparent BigNumber support for Perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Options

a or accuracy, p or precision, t or trace, l or lib, hex, oct, v or version

=item Methods

=item Caveats

inf(), NaN(), e, PI(), bexp(), bpi(), upgrade(), in_effect()

=item Math Library

=item INTERNAL FORMAT

=item SIGN

=back

=item CAVAETS

in_effect(), hex()/oct()

=item MODULES USED

=item EXAMPLES

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 bigrat - Transparent BigNumber/BigRational support for Perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Modules Used

=item Math Library

=item Sign

=item Methods

inf(), NaN(), e, PI, bexp(), bpi(), upgrade(), in_effect()

=item MATH LIBRARY

=item Cavaet

=item Options

a or accuracy, p or precision, t or trace, l or lib, hex, oct, v or version

=back

=item CAVAETS

in_effect(), hex()/oct()

=item EXAMPLES

	perl -Mbigrat -le 'print sqrt(33)'
	perl -Mbigrat -le 'print 2*255'
	perl -Mbigrat -le 'print 4.5+2*255'
	perl -Mbigrat -le 'print 3/7 + 5/7 + 8/3'	
	perl -Mbigrat -le 'print 12->is_odd()';
	perl -Mbignum=l,GMP -le 'print 7 ** 7777'

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 blib - Use MakeMaker's uninstalled version of a package

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item AUTHOR

=back

=head2 bytes - Perl pragma to force byte semantics rather than character
semantics

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item LIMITATIONS

=item SEE ALSO

=back

=head2 charnames - define character names for C<\N{named}> string literal
escapes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item ALIASES

=item CUSTOM ALIASES

=over 4

=item Anonymous hashes

=item Alias file

=item Alias shortcut

=back

=item charnames::viacode(code)

=item charnames::vianame(name)

=item CUSTOM TRANSLATORS

=item ILLEGAL CHARACTERS

=item BUGS

=back

=head2 constant - Perl pragma to declare constants

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=over 4

=item List constants

=item Defining multiple constants at once

=item Magic constants

=back

=item TECHNICAL NOTES

=item CAVEATS

=item BUGS

=item AUTHORS

=item COPYRIGHT

=back

=head2 diagnostics, splain - produce verbose warning diagnostics

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The C<diagnostics> Pragma

=item The I<splain> Program

=back

=item EXAMPLES

=item INTERNALS

=item BUGS

=item AUTHOR

=back

=head2 encoding - allows you to write your script in non-ascii or non-utf8

=over 4

=item SYNOPSIS

=item ABSTRACT

=over 4

=item Literal Conversions

=item PerlIO layers for C<STD(IN|OUT)>

=item Implicit upgrading for byte strings

=item Side effects

=item Side effects

=item Side effects

=back

=item FEATURES THAT REQUIRE 5.8.1

"NON-EUC" doublebyte encodings, tr//, DATA pseudo-filehandle

=item USAGE

use encoding [I<ENCNAME>] ;, use encoding I<ENCNAME> [ STDIN =E<gt>
I<ENCNAME_IN> ...] ;, use encoding I<ENCNAME> Filter=E<gt>1;, no encoding;

=item The Filter Option

=over 4

=item Filter-related changes at Encode version 1.87

=back

=item CAVEATS

=over 4

=item NOT SCOPED

=item DO NOT MIX MULTIPLE ENCODINGS

=item tr/// with ranges

Legend of characters above

=back

=item EXAMPLE - Greekperl

=item KNOWN PROBLEMS

literals in regex that are longer than 127 bytes, EBCDIC, format, Thread
safety

=over 4

=item The Logic of :locale

=back

=item HISTORY

=item SEE ALSO

=back

=head2 encoding::warnings - Warn on implicit encoding conversions

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overview of the problem

=item Detecting the problem

=item Solving the problem

Upgrade both sides to unicode-strings, Downgrade both sides to
byte-strings, Specify the encoding for implicit byte-string upgrading,
PerlIO layers for B<STDIN> and B<STDOUT>, Literal conversions, Implicit
upgrading for byte-strings

=back

=item CAVEATS

=back

=over 4

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 feature - Perl pragma to enable new syntactic features

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Lexical effect

=item C<no feature>

=item The 'switch' feature

=item The 'say' feature

=item the 'state' feature

=back

=item FEATURE BUNDLES

=item IMPLICIT LOADING

=back

=head2 fields - compile-time class fields

=over 4

=item SYNOPSIS

=item DESCRIPTION

new, phash

=item SEE ALSO

=back

=head2 filetest - Perl pragma to control the filetest permission operators

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Consider this carefully

=item The "access" sub-pragma

=item Limitation with regard to C<_>

=back

=back

=head2 if - C<use> a Perl module if a condition holds

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item AUTHOR

=back

=head2 integer - Perl pragma to use integer arithmetic instead of floating
point

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 less - perl pragma to request less of something

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FOR MODULE AUTHORS

=over 4

=item C<< BOOLEAN = less->of( FEATURE ) >>

=item C<< FEATURES = less->of() >>

=back

=item CAVEATS

This probably does nothing, This works only on 5.10+

=back

=head2 lib - manipulate @@INC at compile time

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Adding directories to @@INC

=item Deleting directories from @@INC

=item Restoring original @@INC

=back

=item CAVEATS

=item NOTES

=item SEE ALSO

=item AUTHOR

=back

=head2 locale - Perl pragma to use and avoid POSIX locales for built-in
operations

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 mro - Method Resolution Order

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OVERVIEW

=item The C3 MRO

=over 4

=item What is C3?

=item How does C3 work

=back

=item Functions

=over 4

=item mro::get_linear_isa($classname[, $type])

=item mro::set_mro($classname, $type)

=item mro::get_mro($classname)

=item mro::get_isarev($classname)

=item mro::is_universal($classname)

=item mro::invalidate_all_method_caches()

=item mro::method_changed_in($classname)

=item mro::get_pkg_gen($classname)

=item next::method

=item next::can

=item maybe::next::method

=back

=item SEE ALSO

=over 4

=item The original Dylan paper

L<http://www.webcom.com/haahr/dylan/linearization-oopsla96.html>

=item The prototype Perl 6 Object Model uses C3

L<http://svn.openfoundry.org/pugs/perl5/Perl6-MetaModel/>

=item Parrot now uses C3

L<http://aspn.activestate.com/ASPN/Mail/Message/perl6-internals/2746631>,
L<http://use.perl.org/~autrijus/journal/25768>

=item Python 2.3 MRO related links

L<http://www.python.org/2.3/mro.html>,
L<http://www.python.org/2.2.2/descrintro.html#mro>

=item C3 for TinyCLOS

L<http://www.call-with-current-continuation.org/eggs/c3.html>

=item Class::C3

L<Class::C3>

=back

=item AUTHOR

=back

=head2 open - perl pragma to set default PerlIO layers for input and output

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NONPERLIO FUNCTIONALITY

=item IMPLEMENTATION DETAILS

=item SEE ALSO

=back

=head2 ops - Perl pragma to restrict unsafe operations when compiling

=over 4

=item SYNOPSIS	

=item DESCRIPTION

=item SEE ALSO

=back

=head2 overload - Package for overloading Perl operations

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Declaration of overloaded functions

=item Calling Conventions for Binary Operations

FALSE, TRUE, C<undef>

=item Calling Conventions for Unary Operations

=item Calling Conventions for Mutators

C<++> and C<-->, C<x=> and other assignment versions

=item Overloadable Operations

I<Arithmetic operations>, I<Comparison operations>, I<Bit operations>,
I<Increment and decrement>, I<Transcendental functions>, I<Boolean, string
and numeric conversion>, I<Iteration>, I<Dereferencing>, I<Special>

=item Inheritance and overloading

Strings as values of C<use overload> directive, Overloading of an operation
is inherited by derived classes

=back

=item SPECIAL SYMBOLS FOR C<use overload>

=over 4

=item Last Resort

=item Fallback

C<undef>, TRUE, defined, but FALSE

=item Smart Match

=item Copy Constructor

B<Example>

=back

=item MAGIC AUTOGENERATION

I<Assignment forms of arithmetic operations>, I<Conversion operations>,
I<Increment and decrement>, C<abs($a)>, I<Unary minus>, I<Negation>,
I<Concatenation>, I<Comparison operations>, I<Iterator>, I<Dereferencing>,
I<Copy operator>

=item Minimal set of overloaded operations

=item Losing overloading

=item Run-time Overloading

=item Public functions

overload::StrVal(arg), overload::Overloaded(arg), overload::Method(obj,op)

=item Overloading constants

integer, float, binary, q, qr

=item IMPLEMENTATION

=item Metaphor clash

=item Cookbook

=over 4

=item Two-face scalars

=item Two-face references

=item Symbolic calculator

=item I<Really> symbolic calculator

=back

=item AUTHOR

=item DIAGNOSTICS

Odd number of arguments for overload::constant, `%s' is not an overloadable
type, `%s' is not a code reference

=item BUGS

=back

=head2 sigtrap - Perl pragma to enable simple signal handling

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

=over 4

=item SIGNAL HANDLERS

B<stack-trace>, B<die>, B<handler> I<your-handler>

=item SIGNAL LISTS

B<normal-signals>, B<error-signals>, B<old-interface-signals>

=item OTHER

B<untrapped>, B<any>, I<signal>, I<number>

=back

=item EXAMPLES

=back

=head2 sort - perl pragma to control sort() behaviour

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEATS

=back

=head2 strict - Perl pragma to restrict unsafe constructs

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<strict refs>, C<strict vars>, C<strict subs>

=item HISTORY

=back

=head2 subs - Perl pragma to predeclare sub names

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 threadshared, threads::shared - Perl extension for sharing data
structures between threads

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=item EXPORT

=item FUNCTIONS

share VARIABLE, is_shared VARIABLE, lock VARIABLE, cond_wait VARIABLE,
cond_wait CONDVAR, LOCKVAR, cond_timedwait VARIABLE, ABS_TIMEOUT,
cond_timedwait CONDVAR, ABS_TIMEOUT, LOCKVAR, cond_signal VARIABLE,
cond_broadcast VARIABLE

=item OBJECTS

=item NOTES

=item BUGS AND LIMITATIONS

=item SEE ALSO

=item AUTHOR

=back

=head2 utf8 - Perl pragma to enable/disable UTF-8 (or UTF-EBCDIC) in source
code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Utility functions

$num_octets = utf8::upgrade($string), $success = utf8::downgrade($string[,
FAIL_OK]), utf8::encode($string), $success = utf8::decode($string), $flag =
utf8::is_utf8(STRING), $flag = utf8::valid(STRING)

=back

=item BUGS

=item SEE ALSO

=back

=head2 vars - Perl pragma to predeclare global variable names (obsolete)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 version - Perl extension for Version Objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item BEST PRACTICES

Be consistent, Be careful

=item Using modules that use version.pm

Numeric versions always work, Extended version work sometimes

=item What IS a version

Numeric Versions, Extended Versions

=item Numeric Versions

=item Extended Versions

=item Numeric Alpha Versions

=item Object Methods

New Operator, qv(), Normal Form, Numification, Stringification, Comparison
operators, Logical Operators

=item Quoting

=item What about v-strings?

=item Types of Versions Objects

Ordinary versions, Alpha Versions

=item Replacement UNIVERSAL::VERSION

=back

=item SUBCLASSING

=item EXPORT

=item AUTHOR

=item SEE ALSO

=back

=head2 vmsish - Perl pragma to control VMS-specific language features

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<vmsish status>, C<vmsish exit>, C<vmsish time>, C<vmsish hushed>

=back

=head2 warnings - Perl pragma to control optional warnings

=over 4

=item SYNOPSIS

=item DESCRIPTION

use warnings::register, warnings::enabled(), warnings::enabled($category),
warnings::enabled($object), warnings::warn($message),
warnings::warn($category, $message), warnings::warn($object, $message),
warnings::warnif($message), warnings::warnif($category, $message),
warnings::warnif($object, $message)

=back

=head2 warnings::register - warnings import function

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head1 MODULE DOCUMENTATION

=head2 AnyDBM_File - provide framework for multiple DBMs

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item DBM Comparisons

[0], [1], [2], [3]

=back

=item SEE ALSO

=back

=head2 Archive::Extract - A generic archive extracting mechanism

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item METHODS

=over 4

=item $ae = Archive::Extract->new(archive => '/path/to/archive',[type =>
TYPE])

tar, tgz, gz, Z, zip, bz2, tbz

=back

=back

=over 4

=item $ae->extract( [to => '/output/path'] )

$ae->extract_path, $ae->files

=back

=over 4

=item ACCESSORS

=over 4

=item $ae->error([BOOL])

=item $ae->extract_path

=item $ae->files

=item $ae->archive

=item $ae->type

=item $ae->types

=back

=back

=over 4

=item $ae->is_tgz

=item $ae->is_tar

=item $ae->is_gz

=item $ae->is_Z

=item $ae->is_zip

=back

=over 4

=item $ae->bin_tar

=item $ae->bin_gzip

=item $ae->bin_unzip

=back

=over 4

=item HOW IT WORKS

=item CAVEATS

=over 4

=item File Extensions

=item Supporting Very Large Files

=item Bunzip2 support of arbitrary extensions.

=back

=item GLOBAL VARIABLES

=over 4

=item $Archive::Extract::DEBUG

=item $Archive::Extract::WARN

=item $Archive::Extract::PREFER_BIN

=back

=item TODO

Mime magic support

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Archive::Tar - module for manipulations of tar archives

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Object Methods

=over 4

=item Archive::Tar->new( [$file, $compressed] )

=back

=back

=over 4

=item $tar->read ( $filename|$handle, $compressed, {opt => 'val'} )

limit, extract

=back

=over 4

=item $tar->contains_file( $filename )

=back

=over 4

=item $tar->extract( [@@filenames] )

=back

=over 4

=item $tar->extract_file( $file, [$extract_path] )

=back

=over 4

=item $tar->list_files( [\@@properties] )

=back

=over 4

=item $tar->get_files( [@@filenames] )

=back

=over 4

=item $tar->get_content( $file )

=back

=over 4

=item $tar->replace_content( $file, $content )

=back

=over 4

=item $tar->rename( $file, $new_name )

=back

=over 4

=item $tar->remove (@@filenamelist)

=back

=over 4

=item $tar->clear

=back

=over 4

=item $tar->write ( [$file, $compressed, $prefix] )

=back

=over 4

=item $tar->add_files( @@filenamelist )

=back

=over 4

=item $tar->add_data ( $filename, $data, [$opthashref] )

FILE, HARDLINK, SYMLINK, CHARDEV, BLOCKDEV, DIR, FIFO, SOCKET

=back

=over 4

=item $tar->error( [$BOOL] )

=back

=over 4

=item $tar->setcwd( $cwd );

=back

=over 4

=item $bool = $tar->has_io_string

=back

=over 4

=item $bool = $tar->has_perlio

=back

=over 4

=item Class Methods

=over 4

=item Archive::Tar->create_archive($file, $compression, @@filelist)

=back

=back

=over 4

=item Archive::Tar->list_archive ($file, $compressed, [\@@properties])

=back

=over 4

=item Archive::Tar->extract_archive ($file, $gzip)

=back

=over 4

=item Archive::Tar->can_handle_compressed_files

=back

=over 4

=item GLOBAL VARIABLES

=over 4

=item $Archive::Tar::FOLLOW_SYMLINK

=item $Archive::Tar::CHOWN

=item $Archive::Tar::CHMOD

=item $Archive::Tar::DO_NOT_USE_PREFIX

=item $Archive::Tar::DEBUG

=item $Archive::Tar::WARN

=item $Archive::Tar::error

=item $Archive::Tar::INSECURE_EXTRACT_MODE

=item $Archive::Tar::HAS_PERLIO

=item $Archive::Tar::HAS_IO_STRING

=back

=item FAQ

What's the minimum perl version required to run Archive::Tar?, Isn't
Archive::Tar slow?, Isn't Archive::Tar heavier on memory than /bin/tar?,
Can't you lazy-load data instead?, How much memory will an X kb tar file
need?, What do you do with unsupported filetypes in an archive?, I'm using
WinZip, or some other non-POSIX client, and files are not being extracted
properly!, How do I extract only files that have property X from an
archive?, How do I access .tar.Z files?, How do I handle Unicode strings?

=item TODO

Check if passed in handles are open for read/write, Allow archives to be
passed in as string, Facilitate processing an opened filehandle of a
compressed archive

=item SEE ALSO

The GNU tar specification, The PAX format specication, A comparison of GNU
and POSIX tar standards;
C<http://www.delorie.com/gnu/docs/tar/tar_114.html>, GNU tar intends to
switch to POSIX compatibility, A Comparison between various tar
implementations

=item AUTHOR

=item ACKNOWLEDGEMENTS

=item COPYRIGHT

=back

=head2 Archive::Tar::File - a subclass for in-memory extracted file from
Archive::Tar

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Accessors

name, mode, uid, gid, size, mtime, chksum, type, linkname, magic, version,
uname, gname, devmajor, devminor, prefix, raw

=back

=item Methods

=over 4

=item new( file => $path )

=item new( data => $path, $data, $opt )

=item new( chunk => $chunk )

=back

=back

=over 4

=item full_path

=back

=over 4

=item validate

=back

=over 4

=item has_content

=back

=over 4

=item get_content

=back

=over 4

=item get_content_by_ref

=back

=over 4

=item replace_content( $content )

=back

=over 4

=item rename( $new_name )

=back

=over 4

=item Convenience methods

is_file, is_dir, is_hardlink, is_symlink, is_chardev, is_blockdev, is_fifo,
is_socket, is_longlink, is_label, is_unknown

=back

=head2 Attribute::Handlers - Simpler definition of attribute handlers

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

[0], [1], [2], [3], [4], [5], [6], [7]

=over 4

=item Typed lexicals

=item Type-specific attribute handlers

=item Non-interpretive attribute handlers

=item Phase-specific attribute handlers

=item Attributes as C<tie> interfaces

=back

=item EXAMPLES

=item DIAGNOSTICS

C<Bad attribute type: ATTR(%s)>, C<Attribute handler %s doesn't handle %s
attributes>, C<Declaration of %s attribute in package %s may clash with
future reserved word>, C<Can't have two ATTR specifiers on one subroutine>,
C<Can't autotie a %s>, C<Internal error: %s symbol went missing>, C<Won't
be able to apply END handler>

=item AUTHOR

=item BUGS

=item COPYRIGHT

=back

=head2 AutoLoader - load subroutines only on demand

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Subroutine Stubs

=item Using B<AutoLoader>'s AUTOLOAD Subroutine

=item Overriding B<AutoLoader>'s AUTOLOAD Subroutine

=item Package Lexicals

=item Not Using AutoLoader

=item B<AutoLoader> vs. B<SelfLoader>

=back

=item CAVEATS

=item SEE ALSO

=back

=head2 AutoSplit - split a package for autoloading

=over 4

=item SYNOPSIS

=item DESCRIPTION

$keep, $check, $modtime

=over 4

=item Multiple packages

=back

=item DIAGNOSTICS

=back

=head2 B - The Perl Compiler

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OVERVIEW

=item Utility Functions

=over 4

=item Functions Returning C<B::SV>, C<B::AV>, C<B::HV>, and C<B::CV>
objects

sv_undef, sv_yes, sv_no, svref_2object(SVREF), amagic_generation, init_av,
check_av, unitcheck_av, begin_av, end_av, comppadlist, regex_padav, main_cv

=item Functions for Examining the Symbol Table

walksymtable(SYMREF, METHOD, RECURSE, PREFIX)

=item Functions Returning C<B::OP> objects or for walking op trees

main_root, main_start, walkoptree(OP, METHOD), walkoptree_debug(DEBUG)

=item Miscellaneous Utility Functions

ppname(OPNUM), hash(STR), cast_I32(I), minus_c, cstring(STR),
perlstring(STR), class(OBJ), threadsv_names

=item Exported utility variabiles

@@optype, @@specialsv_name

=back

=item OVERVIEW OF CLASSES

=over 4

=item SV-RELATED CLASSES

=item B::SV Methods

REFCNT, FLAGS, object_2svref

=item B::IV Methods

IV, IVX, UVX, int_value, needs64bits, packiv

=item B::NV Methods

NV, NVX

=item B::RV Methods

RV

=item B::PV Methods

PV, RV, PVX

=item B::PVMG Methods

MAGIC, SvSTASH

=item B::MAGIC Methods

MOREMAGIC, precomp, PRIVATE, TYPE, FLAGS, OBJ, PTR, REGEX

=item B::PVLV Methods

TARGOFF, TARGLEN, TYPE, TARG

=item B::BM Methods

USEFUL, PREVIOUS, RARE, TABLE

=item B::GV Methods

is_empty, NAME, SAFENAME, STASH, SV, IO, FORM, AV, HV, EGV, CV, CVGEN,
LINE, FILE, FILEGV, GvREFCNT, FLAGS

=item B::IO Methods

LINES, PAGE, PAGE_LEN, LINES_LEFT, TOP_NAME, TOP_GV, FMT_NAME, FMT_GV,
BOTTOM_NAME, BOTTOM_GV, SUBPROCESS, IoTYPE, IoFLAGS, IsSTD

=item B::AV Methods

FILL, MAX, ARRAY, ARRAYelt, OFF, AvFLAGS

=item B::CV Methods

STASH, START, ROOT, GV, FILE, DEPTH, PADLIST, OUTSIDE, OUTSIDE_SEQ, XSUB,
XSUBANY, CvFLAGS, const_sv

=item B::HV Methods

FILL, MAX, KEYS, RITER, NAME, ARRAY, PMROOT

=item OP-RELATED CLASSES

=item B::OP Methods

next, sibling, name, ppaddr, desc, targ, type, opt, flags, private, spare

=item B::UNOP METHOD

first

=item B::BINOP METHOD

last

=item B::LOGOP METHOD

other

=item B::LISTOP METHOD

children

=item B::PMOP Methods

pmreplroot, pmreplstart, pmnext, pmregexp, pmflags, extflags, precomp,
pmoffset

=item B::SVOP METHOD

sv, gv

=item B::PADOP METHOD

padix

=item B::PVOP METHOD

pv

=item B::LOOP Methods

redoop, nextop, lastop

=item B::COP Methods

label, stash, stashpv, file, cop_seq, arybase, line, warnings, io, hints,
hints_hash

=back

=item AUTHOR

=back

=head2 B::Concise - Walk Perl syntax tree, printing concise info about ops

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLE

=item OPTIONS

=over 4

=item Options for Opcode Ordering

B<-basic>, B<-exec>, B<-tree>

=item Options for Line-Style

B<-concise>, B<-terse>, B<-linenoise>, B<-debug>, B<-env>

=item Options for tree-specific formatting

B<-compact>, B<-loose>, B<-vt>, B<-ascii>

=item Options controlling sequence numbering

B<-base>I<n>, B<-bigendian>, B<-littleendian>

=item Other options

B<-src>, B<-stash="somepackage">, B<-main>, B<-nomain>, B<-nobanner>,
B<-banner>, B<-banneris> => subref

=item Option Stickiness

=back

=item ABBREVIATIONS

=over 4

=item OP class abbreviations

=item OP flags abbreviations

=back

=item FORMATTING SPECIFICATIONS

=over 4

=item Special Patterns

B<(x(>I<exec_text>B<;>I<basic_text>B<)x)>, B<(*(>I<text>B<)*)>,
B<(*(>I<text1>B<;>I<text2>B<)*)>, B<(?(>I<text1>B<#>I<var>I<Text2>B<)?)>,
B<~>

=item # Variables

B<#>I<var>, B<#>I<var>I<N>, B<#>I<Var>, B<#addr>, B<#arg>, B<#class>,
B<#classsym>, B<#coplabel>, B<#exname>, B<#extarg>, B<#firstaddr>,
B<#flags>, B<#flagval>, B<#hints>, B<#hintsval>, B<#hyphseq>, B<#label>,
B<#lastaddr>, B<#name>, B<#NAME>, B<#next>, B<#nextaddr>, B<#noise>,
B<#private>, B<#privval>, B<#seq>, B<#seqnum>, B<#opt>, B<#sibaddr>,
B<#svaddr>, B<#svclass>, B<#svval>, B<#targ>, B<#targarg>, B<#targarglife>,
B<#typenum>

=back

=item One-Liner Command tips

perl -MO=Concise,bar foo.pl, perl -MDigest::MD5=md5 -MO=Concise,md5 -e1,
perl -MPOSIX -MO=Concise,_POSIX_ARG_MAX -e1, perl -MPOSIX -MO=Concise,a -e
'print _POSIX_SAVED_IDS', perl -MPOSIX -MO=Concise,a -e 'sub
a{_POSIX_SAVED_IDS}', perl -MB::Concise -e
'B::Concise::compile("-exec","-src", \%B::Concise::)->()'

=item Using B::Concise outside of the O framework

=over 4

=item Example: Altering Concise Renderings

=item set_style()

=item set_style_standard($name)

=item add_style()

=item add_callback()

=item Running B::Concise::compile()

=item B::Concise::reset_sequence()

=item Errors

=back

=item AUTHOR

=back

=head2 B::Debug - Walk Perl syntax tree, printing debug info about ops

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 B::Deparse - Perl compiler backend to produce perl code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

B<-d>, B<-f>I<FILE>, B<-l>, B<-p>, B<-P>, B<-q>, B<-s>I<LETTERS>, B<C>,
B<i>I<NUMBER>, B<T>, B<v>I<STRING>B<.>, B<-x>I<LEVEL>

=item USING B::Deparse AS A MODULE

=over 4

=item Synopsis

=item Description

=item new

=item ambient_pragmas

strict, $[, bytes, utf8, integer, re, warnings, hint_bits, warning_bits,
%^H

=item coderef2text

=back

=item BUGS

=item AUTHOR

=back

=head2 B::Lint - Perl lint

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS AND LINT CHECKS

B<magic-diamond>, B<context>, B<implicit-read> and B<implicit-write>,
B<bare-subs>, B<dollar-underscore>, B<private-names>, B<undefined-subs>,
B<regexp-variables>, B<all>, B<none>

=item NON LINT-CHECK OPTIONS

B<-u Package>

=item EXTENDING LINT

=item TODO

while(<FH>) stomps $_, strict oo, unchecked system calls, more tests,
validate against older perls

=item BUGS

=item AUTHOR

=back

=head2 B::O, O - Generic interface to Perl Compiler backends

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONVENTIONS

=item IMPLEMENTATION

=item BUGS

=item AUTHOR

=back

=head2 B::Showlex - Show lexical variables used in functions or files

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=over 4

=item OPTIONS

=back

=item SEE ALSO

=item TODO

=item AUTHOR

=back

=head2 B::Terse - Walk Perl syntax tree, printing terse info about ops

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 B::Xref - Generates cross reference reports for Perl programs

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

C<-oFILENAME>, C<-r>, C<-d>, C<-D[tO]>

=item BUGS

=item AUTHOR

=back

=head2 Benchmark - benchmark running times of Perl code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods

new, debug, iters

=item Standard Exports

timeit(COUNT, CODE), timethis ( COUNT, CODE, [ TITLE, [ STYLE ]] ),
timethese ( COUNT, CODEHASHREF, [ STYLE ] ), timediff ( T1, T2 ), timestr (
TIMEDIFF, [ STYLE, [ FORMAT ] ] )

=item Optional Exports

clearcache ( COUNT ), clearallcache ( ), cmpthese ( COUNT, CODEHASHREF, [
STYLE ] ), cmpthese ( RESULTSHASHREF, [ STYLE ] ), countit(TIME, CODE),
disablecache ( ), enablecache ( ), timesum ( T1, T2 )

=item :hireswallclock

=back

=item NOTES

=item EXAMPLES

=item INHERITANCE

=item CAVEATS

=item SEE ALSO

=item AUTHORS

=item MODIFICATION HISTORY

=back

=head2 CGI - Simple Common Gateway Interface Class

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=over 4

=item PROGRAMMING STYLE

=item CALLING CGI.PM ROUTINES

=item CREATING A NEW QUERY OBJECT (OBJECT-ORIENTED STYLE):

=item CREATING A NEW QUERY OBJECT FROM AN INPUT FILE

=item FETCHING A LIST OF KEYWORDS FROM THE QUERY:

=item FETCHING THE NAMES OF ALL THE PARAMETERS PASSED TO YOUR SCRIPT:

=item FETCHING THE VALUE OR VALUES OF A SINGLE NAMED PARAMETER:

=item SETTING THE VALUE(S) OF A NAMED PARAMETER:

=item APPENDING ADDITIONAL VALUES TO A NAMED PARAMETER:

=item IMPORTING ALL PARAMETERS INTO A NAMESPACE:

=item DELETING A PARAMETER COMPLETELY:

=item DELETING ALL PARAMETERS:

=item HANDLING NON-URLENCODED ARGUMENTS

=item DIRECT ACCESS TO THE PARAMETER LIST:

=item FETCHING THE PARAMETER LIST AS A HASH:

=item SAVING THE STATE OF THE SCRIPT TO A FILE:

=item RETRIEVING CGI ERRORS

=item USING THE FUNCTION-ORIENTED INTERFACE

B<:cgi>, B<:form>, B<:html2>, B<:html3>, B<:html4>, B<:netscape>, B<:html>,
B<:standard>, B<:all>

=item PRAGMAS

-any, -compile, -nosticky, -tabindex, -no_undef_params, -no_xhtml, -nph,
-newstyle_urls, -oldstyle_urls, -autoload, -no_debug, -debug,
-private_tempfiles

=item SPECIAL FORMS FOR IMPORTING HTML-TAG FUNCTIONS

1. start_table() (generates a <table> tag), 2. end_table() (generates a
</table> tag), 3. start_ul() (generates a <ul> tag), 4. end_ul() (generates
a </ul> tag)

=back

=item GENERATING DYNAMIC DOCUMENTS

=over 4

=item CREATING A STANDARD HTTP HEADER:

=item GENERATING A REDIRECTION HEADER

=item CREATING THE HTML DOCUMENT HEADER

B<Parameters:>, 4, 5, 6..

=item ENDING THE HTML DOCUMENT:

=item CREATING A SELF-REFERENCING URL THAT PRESERVES STATE INFORMATION:

=item OBTAINING THE SCRIPT'S URL

B<-absolute>, B<-relative>, B<-full>, B<-path> (B<-path_info>), B<-query>
(B<-query_string>), B<-base>, B<-rewrite>

=item MIXING POST AND URL PARAMETERS

=back

=item CREATING STANDARD HTML ELEMENTS:

=over 4

=item PROVIDING ARGUMENTS TO HTML SHORTCUTS

=item THE DISTRIBUTIVE PROPERTY OF HTML SHORTCUTS

=item HTML SHORTCUTS AND LIST INTERPOLATION

=item NON-STANDARD HTML SHORTCUTS

=item AUTOESCAPING HTML

$escaped_string = escapeHTML("unescaped string");, $charset =
charset([$charset]);, $flag = autoEscape([$flag]);

=item PRETTY-PRINTING HTML

=back

=item CREATING FILL-OUT FORMS:

=over 4

=item CREATING AN ISINDEX TAG

=item STARTING AND ENDING A FORM

B<application/x-www-form-urlencoded>, B<multipart/form-data>

=item FORM ELEMENTS

B<-name>, B<-value>, B<-values>, B<-tabindex>, B<-id>, B<-override>,
B<-onChange>, B<-onFocus>, B<-onBlur>, B<-onMouseOver>, B<-onMouseOut>,
B<-onSelect>

=item CREATING A TEXT FIELD

B<Parameters>

=item CREATING A BIG TEXT FIELD

=item CREATING A PASSWORD FIELD

=item CREATING A FILE UPLOAD FIELD

B<Parameters>

=item CREATING A POPUP MENU

=item CREATING AN OPTION GROUP

=item CREATING A SCROLLING LIST

B<Parameters:>

=item CREATING A GROUP OF RELATED CHECKBOXES

B<Parameters:>

=item CREATING A STANDALONE CHECKBOX

B<Parameters:>

=item CREATING A RADIO BUTTON GROUP

B<Parameters:>

=item CREATING A SUBMIT BUTTON 

B<Parameters:>

=item CREATING A RESET BUTTON

=item CREATING A DEFAULT BUTTON

=item CREATING A HIDDEN FIELD

B<Parameters:>

=item CREATING A CLICKABLE IMAGE BUTTON

B<Parameters:>, 3. The third option (-align, optional) is an alignment
type, and may be TOP, BOTTOM or MIDDLE

=item CREATING A JAVASCRIPT ACTION BUTTON

=back

=item HTTP COOKIES

1. an expiration time, 2. a domain, 3. a path, 4. a "secure" flag,
B<-name>, B<-value>, B<-path>, B<-domain>, B<-expires>, B<-secure>

=item WORKING WITH FRAMES

1. Create a <Frameset> document, 2. Specify the destination for the
document in the HTTP header, 3. Specify the destination for the document in
the <form> tag

=item SUPPORT FOR JAVASCRIPT

B<onLoad>, B<onUnload>, B<onSubmit>, B<onClick>, B<onChange>, B<onFocus>,
B<onBlur>, B<onSelect>, B<onMouseOver>, B<onMouseOut>

=item LIMITED SUPPORT FOR CASCADING STYLE SHEETS

=item DEBUGGING

=over 4

=item DUMPING OUT ALL THE NAME/VALUE PAIRS

=back

=item FETCHING ENVIRONMENT VARIABLES

B<Accept()>, B<raw_cookie()>, B<user_agent()>, B<path_info()>,
B<path_translated()>, B<remote_host()>, B<script_name()> Return the script
name as a partial URL, for self-refering scripts, B<referer()>, B<auth_type
()>, B<server_name ()>, B<virtual_host ()>, B<server_port ()>,
B<virtual_port ()>, B<server_software ()>, B<remote_user ()>, B<user_name
()>, B<request_method()>, B<content_type()>, B<http()>, B<https()>

=item USING NPH SCRIPTS

In the B<use> statement, By calling the B<nph()> method:, By using B<-nph>
parameters

=item Server Push

multipart_init(), multipart_start(), multipart_end(), multipart_final()

=item Avoiding Denial of Service Attacks

B<$CGI::POST_MAX>, B<$CGI::DISABLE_UPLOADS>, B<1. On a script-by-script
basis>, B<2. Globally for all scripts>

=item COMPATIBILITY WITH CGI-LIB.PL

=item AUTHOR INFORMATION

=item CREDITS

Matt Heffron (heffron@@falstaff.css.beckman.com), James Taylor
(james.taylor@@srs.gov), Scott Anguish <sanguish@@digifix.com>, Mike Jewell
(mlj3u@@virginia.edu), Timothy Shimmin (tes@@kbs.citri.edu.au), Joergen Haegg
(jh@@axis.se), Laurent Delfosse (delfosse@@delfosse.com), Richard Resnick
(applepi1@@aol.com), Craig Bishop (csb@@barwonwater.vic.gov.au), Tony Curtis
(tc@@vcpc.univie.ac.at), Tim Bunce (Tim.Bunce@@ig.co.uk), Tom Christiansen
(tchrist@@convex.com), Andreas Koenig (k@@franz.ww.TU-Berlin.DE), Tim
MacKenzie (Tim.MacKenzie@@fulcrum.com.au), Kevin B. Hendricks
(kbhend@@dogwood.tyler.wm.edu), Stephen Dahmen (joyfire@@inxpress.net), Ed
Jordan (ed@@fidalgo.net), David Alan Pisoni (david@@cnation.com), Doug
MacEachern (dougm@@opengroup.org), Robin Houston (robin@@oneworld.org),
...and many many more..

=item A COMPLETE EXAMPLE OF A SIMPLE FORM-BASED SCRIPT

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Apache - Backward compatibility module for CGI.pm

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Carp, B<CGI::Carp> - CGI routines for writing to the HTTPD (or
other) error log

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item REDIRECTING ERROR MESSAGES

=item MAKING PERL ERRORS APPEAR IN THE BROWSER WINDOW

=over 4

=item Changing the default message

=back

=item DOING MORE THAN PRINTING A MESSAGE IN THE EVENT OF PERL ERRORS

=item MAKING WARNINGS APPEAR AS HTML COMMENTS

=item OVERRIDING THE NAME OF THE PROGRAM

=item AUTHORS

=item SEE ALSO

=back

=head2 CGI::Cookie - Interface to Netscape Cookies

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USING CGI::Cookie

B<1. expiration date>, B<2. domain>, B<3. path>, B<4. secure flag>, B<4.
httponly flag>

=over 4

=item Creating New Cookies

=item Sending the Cookie to the Browser

=item Recovering Previous Cookies

=item Manipulating Cookies

B<name()>, B<value()>, B<domain()>, B<path()>, B<expires()>

=back

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Fast - CGI Interface for Fast CGI

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OTHER PIECES OF THE PUZZLE

=item WRITING FASTCGI PERL SCRIPTS

=item INSTALLING FASTCGI SCRIPTS

=item USING FASTCGI SCRIPTS AS CGI SCRIPTS

=item EXTERNAL FASTCGI SERVER INVOCATION

FCGI_SOCKET_PATH, FCGI_LISTEN_QUEUE

=item CAVEATS

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Pretty - module to produce nicely formatted HTML code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Tags that won't be formatted

=item Customizing the Indenting

=back

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 CGI::Push - Simple Interface to Server Push

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USING CGI::Push

-next_page, -last_page, -type, -delay, -cookie, -target, -expires, -nph

=over 4

=item Heterogeneous Pages

=item Changing the Page Delay on the Fly

=back

=item INSTALLING CGI::Push SCRIPTS

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Switch - Backward compatibility module for defunct CGI::Switch

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Util - Internal utilities used by CGI module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR INFORMATION

=item SEE ALSO

=back

=head2 CORE - Pseudo-namespace for Perl's core routines

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OVERRIDING CORE FUNCTIONS

=item AUTHOR

=item SEE ALSO

=back

=head2 CPAN - query, download and build perl modules from CPAN sites

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item CPAN::shell([$prompt, $command]) Starting Interactive Mode

Searching for authors, bundles, distribution files and modules, C<get>,
C<make>, C<test>, C<install>, C<clean> modules or distributions, C<readme>,
C<perldoc>, C<look> module or distribution, C<ls> author, C<ls>
globbing_expression, C<failed>, Persistence between sessions, The C<force>
and the C<fforce> pragma, Lockfile, Signals

=item CPAN::Shell

=item autobundle

=item hosts

=item mkmyconfig

=item recent ***EXPERIMENTAL COMMAND***

=item recompile

=item report Bundle|Distribution|Module

=item smoke ***EXPERIMENTAL COMMAND***

=item upgrade [Module|/Regex/]...

=item The four C<CPAN::*> Classes: Author, Bundle, Module, Distribution

=item Integrating local directories

=back

=item CONFIGURATION

completion support, displaying some help: o conf help, displaying current
values: o conf [KEY], changing of scalar values: o conf KEY VALUE, changing
of list values: o conf KEY SHIFT|UNSHIFT|PUSH|POP|SPLICE|LIST, reverting to
saved: o conf defaults, saving the config: o conf commit

=over 4

=item Config Variables

C<o conf E<lt>scalar optionE<gt>>, C<o conf E<lt>scalar optionE<gt>
E<lt>valueE<gt>>, C<o conf E<lt>list optionE<gt>>, C<o conf E<lt>list
optionE<gt> [shift|pop]>, C<o conf E<lt>list optionE<gt>
[unshift|push|splice] E<lt>listE<gt>>, interactive editing: o conf init
[MATCH|LIST]

=item CPAN::anycwd($path): Note on config variable getcwd

cwd, getcwd, fastcwd, backtickcwd

=item Note on the format of the urllist parameter

=item The urllist parameter has CD-ROM support

=item Maintaining the urllist parameter

=item The C<requires> and C<build_requires> dependency declarations

=item Configuration for individual distributions (I<Distroprefs>)

=item Filenames

=item Fallback Data::Dumper and Storable

=item Blueprint

=item Language Specs

comment [scalar], cpanconfig [hash], depends [hash] *** EXPERIMENTAL
FEATURE ***, disabled [boolean], goto [string], install [hash], make
[hash], match [hash], patches [array], pl [hash], test [hash]

=item Processing Instructions

args [array], commandline, eexpect [hash], env [hash], expect [array]

=item Schema verification with C<Kwalify>

=item Example Distroprefs Files

=back

=item PROGRAMMER'S INTERFACE

expand($type,@@things), expandany(@@things), Programming Examples

=over 4

=item Methods in the other Classes

CPAN::Author::as_glimpse(), CPAN::Author::as_string(),
CPAN::Author::email(), CPAN::Author::fullname(), CPAN::Author::name(),
CPAN::Bundle::as_glimpse(), CPAN::Bundle::as_string(),
CPAN::Bundle::clean(), CPAN::Bundle::contains(),
CPAN::Bundle::force($method,@@args), CPAN::Bundle::get(),
CPAN::Bundle::inst_file(), CPAN::Bundle::inst_version(),
CPAN::Bundle::uptodate(), CPAN::Bundle::install(), CPAN::Bundle::make(),
CPAN::Bundle::readme(), CPAN::Bundle::test(),
CPAN::Distribution::as_glimpse(), CPAN::Distribution::as_string(),
CPAN::Distribution::author, CPAN::Distribution::pretty_id(),
CPAN::Distribution::base_id(), CPAN::Distribution::clean(),
CPAN::Distribution::containsmods(), CPAN::Distribution::cvs_import(),
CPAN::Distribution::dir(), CPAN::Distribution::force($method,@@args),
CPAN::Distribution::get(), CPAN::Distribution::install(),
CPAN::Distribution::install_tested(), CPAN::Distribution::isa_perl(),
CPAN::Distribution::is_tested(), CPAN::Distribution::look(),
CPAN::Distribution::make(), CPAN::Distribution::perldoc(),
CPAN::Distribution::prefs(), CPAN::Distribution::prereq_pm(),
CPAN::Distribution::readme(), CPAN::Distribution::reports(),
CPAN::Distribution::read_yaml(), CPAN::Distribution::test(),
CPAN::Distribution::uptodate(), CPAN::Index::force_reload(),
CPAN::Index::reload(), CPAN::InfoObj::dump(), CPAN::Module::as_glimpse(),
CPAN::Module::as_string(), CPAN::Module::clean(),
CPAN::Module::cpan_file(), CPAN::Module::cpan_version(),
CPAN::Module::cvs_import(), CPAN::Module::description(),
CPAN::Module::distribution(), CPAN::Module::dslip_status(),
CPAN::Module::force($method,@@args), CPAN::Module::get(),
CPAN::Module::inst_file(), CPAN::Module::available_file(),
CPAN::Module::inst_version(), CPAN::Module::available_version(),
CPAN::Module::install(), CPAN::Module::look(), CPAN::Module::make(),
CPAN::Module::manpage_headline(), CPAN::Module::perldoc(),
CPAN::Module::readme(), CPAN::Module::reports(), CPAN::Module::test(),
CPAN::Module::uptodate(), CPAN::Module::userid()

=item Cache Manager

=item Bundles

=back

=item PREREQUISITES

=item UTILITIES

=over 4

=item Finding packages and VERSION

=item Debugging

o debug package.., o debug -package.., o debug all, o debug number

=item Floppy, Zip, Offline Mode

=item Basic Utilities for Programmers

has_inst($module), has_usable($module), instance($module)

=back

=item SECURITY

=over 4

=item Cryptographically signed modules

=back

=item EXPORT

=item ENVIRONMENT

=item POPULATE AN INSTALLATION WITH LOTS OF MODULES

=item WORKING WITH CPAN.pm BEHIND FIREWALLS

=over 4

=item Three basic types of firewalls

http firewall, ftp firewall, One way visibility, SOCKS, IP Masquerade

=item Configuring lynx or ncftp for going through a firewall

=back

=item FAQ

1), 2), 3), 4), 5), 6), 7), 8), 9), 10), 11), 12), 13), 14), 15), 16)

=item COMPATIBILITY

=over 4

=item OLD PERL VERSIONS

=item CPANPLUS

=back

=item SECURITY ADVICE

=item BUGS

=item AUTHOR

=item LICENSE

=item TRANSLATIONS

=item SEE ALSO

=back

=head2 CPAN::API::HOWTO - a recipe book for programming with CPAN.pm

=over 4

=item RECIPES

=over 4

=item What distribution contains a particular module?

=item What modules does a particular distribution contain?

=back

=item SEE ALSO

=item LICENSE

=item AUTHOR

=back

=head2 CPAN::FirstTime - Utility for CPAN::Config file Initialization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

auto_commit, build_cache, build_dir, build_dir_reuse,
build_requires_install_policy, cache_metadata, check_sigs, colorize_output,
colorize_print, colorize_warn, colorize_debug, commandnumber_in_prompt,
ftp_passive, getcwd, histfile, histsize, inactivity_timeout, index_expire,
inhibit_startup_message, keep_source_where, load_module_verbosity,
makepl_arg, make_arg, make_install_arg, make_install_make_command,
mbuildpl_arg, mbuild_arg, mbuild_install_arg, mbuild_install_build_command,
pager, prefer_installer, prefs_dir, prerequisites_policy,
randomize_urllist, scan_cache, shell, show_unparsable_versions,
show_upload_date, show_zero_versions, tar_verbosity, term_is_latin,
term_ornaments, test_report, use_sqlite, yaml_load_code, yaml_module

=over 4

=item LICENSE

=back

=head2 CPAN::Kwalify - Interface between CPAN.pm and Kwalify.pm

=over 4

=item SYNOPSIS

=item DESCRIPTION

_validate($schema_name, $data, $file, $doc), yaml($schema_name)

=item AUTHOR

=item LICENSE

=back

=head2 CPAN::Version - utility functions to compare CPAN versions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item LICENSE

=back

=head2 CPANPLUS - API & CLI access to the CPAN mirrors

=over 4

=item SYNOPSIS

=item GUIDE TO DOCUMENTATION

=over 4

=item GENERAL USAGE

=item API REFERENCE

=back

=back

=over 4

=item COMMANDLINE TOOLS

=over 4

=item STARTING AN INTERACTIVE SHELL

=item BUILDING PACKAGES

=item $bool = install( Module::Name | /A/AU/AUTHOR/Module-Name-1.tgz )

=item $where = fetch( Module::Name | /A/AU/AUTHOR/Module-Name-1.tgz )

=item $where = get( Module::Name | /A/AU/AUTHOR/Module-Name-1.tgz )

=item shell()

=back

=item FAQ

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=item CONTACT INFORMATION

Bug reporting: I<bug-cpanplus@@rt.cpan.org>, Questions & suggestions:
I<cpanplus-devel@@lists.sourceforge.net>

=back

=head2 CPANPLUS::Backend

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item ENVIRONMENT

=item METHODS

=over 4

=item $cb = CPANPLUS::Backend->new( [CONFIGURE_OBJ] )

Provide a valid C<CPANPLUS::Configure> object, No arguments

=back

=back

=over 4

=item $href = $cb->module_tree( [@@modules_names_list] )

=back

=over 4

=item $href = $cb->author_tree( [@@author_names_list] )

=back

=over 4

=item $conf = $cb->configure_object;

=back

=over 4

=item $su = $cb->selfupdate_object;

=back

=over 4

=item @@mods = $cb->search( type => TYPE, allow => AREF, [data => AREF,
verbose => BOOL] )

=back

=over 4

=item $backend_rv = $cb->fetch( modules => \@@mods )

=item $backend_rv = $cb->extract( modules => \@@mods )

=item $backend_rv = $cb->install( modules => \@@mods )

=item $backend_rv = $cb->readme( modules => \@@mods )

=item $backend_rv = $cb->files( modules => \@@mods )

=item $backend_rv = $cb->distributions( modules => \@@mods )

=back

=over 4

=item $mod_obj = $cb->parse_module( module =>
$modname|$distname|$modobj|URI )

Text::Bastardize, Text-Bastardize, Text-Bastardize-1.06,
AYRNIEU/Text-Bastardize, AYRNIEU/Text-Bastardize-1.06,
AYRNIEU/Text-Bastardize-1.06.tar.gz,
http://example.com/Text-Bastardize-1.06.tar.gz,
file:///tmp/Text-Bastardize-1.06.tar.gz

=back

=over 4

=item $bool = $cb->reload_indices( [update_source => BOOL, verbose => BOOL]
);

=back

=over 4

=item $bool = $cb->flush(CACHE_NAME)

C<methods>, C<hosts>, C<modules>, C<lib>, C<load>, C<all>

=back

=over 4

=item @@mods = $cb->installed()

=back

=over 4

=item $bool = $cb->local_mirror([path => '/dir/to/save/to', index_files =>
BOOL, force => BOOL, verbose => BOOL] )

path, index_files, force, verbose

=back

=over 4

=item $file = $cb->autobundle([path => OUTPUT_PATH, force => BOOL, verbose
=> BOOL])

=back

=over 4

=item CUSTOM MODULE SOURCES

=over 4

=item %files = $cb->list_custom_sources

=back

=back

=over 4

=item $local_index = $cb->add_custom_source( uri => URI, [verbose => BOOL]
);

=back

=over 4

=item $local_index = $cb->remove_custom_source( uri => URI, [verbose =>
BOOL] );

=back

=over 4

=item $bool = $cb->update_custom_source( [remote => URI] );

=back

=over 4

=item $file = $cb->write_custom_source_index( path =>
/path/to/package/root, [to => /path/to/index/file, verbose => BOOL] );

=back

=over 4

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 CPANPLUS::Backend::RV

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item new( ok => BOOL, args => DATA, rv => DATA, [function => $method_name]
)

ok, args, rv, function

=back

=back

=over 4

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 CPANPLUS::Config

=over 4

=item DESCRIPTION

=item CONFIGURATION

=back

=over 4

=item Section 'conf'

hosts

=back

base

buildflags

cpantest

cpantest_mx

debug

dist_type

email

extractdir

fetchdir

flush

force

lib

makeflags

makemakerflags

md5

no_update

passive

prefer_bin

prefer_makefile

prereqs

shell

show_startup_tip

signature

skiptest

storable

timeout

verbose

write_install_log

editor

make

pager

shell

sudo

perlwrapper

=over 4

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 CPANPLUS::Configure

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item $Configure = CPANPLUS::Configure->new( load_configs => BOOL )

=back

=back

=over 4

=item $bool = $Configure->init( [rescan => BOOL])

=back

=over 4

=item can_save( [$config_location] )

=back

=over 4

=item $file = $conf->save( [$package_name] )

=back

=over 4

=item options( type => TYPE )

=back

=over 4

=item ACCESSORS

=over 4

=item get_SOMETHING( ITEM, [ITEM, ITEM, ... ] );

=item set_SOMETHING( ITEM => VAL, [ITEM => VAL, ITEM => VAL, ... ] );

=item add_SOMETHING( ITEM => VAL, [ITEM => VAL, ITEM => VAL, ... ] );

set|get_conf, set|get_program, _set|_get_build, _set|_get_source,
_set|_get_mirror, _set|_get_fetch

=back

=back

=over 4

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 CPANPLUS::Dist

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item ACCESSORS

parent(), status()

=item STATUS ACCESSORS

created(), installed(), uninstalled(), dist()

=back

=over 4

=item $dist = CPANPLUS::Dist->new( module => MODOBJ, [format => DIST_TYPE]
);

=back

=over 4

=item @@dists = CPANPLUS::Dist->dist_types;

=back

=over 4

=item prereq_satisfied( modobj => $modobj, version => $version_spec )

=back

=over 4

=item _resolve_prereqs

=back

=head2 CPANPLUS::Dist::Base - Base class for custom distribution classes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FLOW

=item METHODS

=back

=over 4

=item $bool = $Class->format_available

=back

=over 4

=item $bool = $dist->init

=back

=over 4

=item $bool = $dist->prepare

=back

=over 4

=item $bool = $dist->create

=back

=over 4

=item $bool = $dist->install

=back

=over 4

=item $bool = $dist->uninstall

=back

=head2 CPANPLUS::Dist::Build

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item ACCESSORS

parent(), status()

=item STATUS ACCESSORS

build_pl (), build (), test (), prepared (), distdir (), created (),
installed (), uninstalled (), _create_args (), _install_args (), _mb_object
()

=back

=over 4

=item METHODS

=over 4

=item $bool = CPANPLUS::Dist::Build->format_available();

=back

=back

=over 4

=item $bool = $dist->init();

=back

=over 4

=item $bool = $dist->prepare([perl => '/path/to/perl', buildflags =>
'EXTRA=FLAGS', force => BOOL, verbose => BOOL])

=back

=over 4

=item $dist->create([perl => '/path/to/perl', buildflags => 'EXTRA=FLAGS',
prereq_target => TARGET, force => BOOL, verbose => BOOL, skiptest => BOOL])

=back

=over 4

=item $dist->install([verbose => BOOL, perl => /path/to/perl])

=back

=over 4

=item KNOWN ISSUES

Module::Build can not be upgraded using its own API (#13169), Module::Build
does not provide access to install history (#9793)

=item AUTHOR

=item COPYRIGHT

=back

=head2 CPANPLUS::Dist::MM

=over 4

=item SYNOPSIS

=item ACCESSORS

parent(), status()

=item STATUS ACCESSORS 

makefile (), make (), test (), prepared (), distdir (), created (),
installed (), uninstalled (), _create_args (), _install_args ()

=back

=over 4

=item METHODS

=over 4

=item $bool = $dist->format_available();

=back

=back

=over 4

=item $href = $dist->_find_prereqs( file => '/path/to/Makefile', [verbose
=> BOOL])

=back

=over 4

=item $bool = $dist->create([perl => '/path/to/perl', make =>
'/path/to/make', makeflags => 'EXTRA=FLAGS', prereq_target => TARGET,
skiptest => BOOL, force => BOOL, verbose => BOOL])

=back

=over 4

=item $bool = $dist->install([make => '/path/to/make',	makemakerflags =>
'EXTRA=FLAGS', force => BOOL, verbose => BOOL])

=back

=over 4

=item $bool = $dist->write_makefile_pl([force => BOOL, verbose => BOOL])

=back

=head2 CPANPLUS::Dist::Sample -- Sample code to create your own Dist::*
plugin

=over 4

=item Description.

=back

=head2 CPANPLUS::Error

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item cp_msg("message string" [,VERBOSE])

=item msg()

=item cp_error("error string" [,VERBOSE])

=item error()

=back

=item CLASS METHODS

=over 4

=item CPANPLUS::Error->stack()

=item CPANPLUS::Error->stack_as_string([TRACE])

=item CPANPLUS::Error->flush()

=back

=back

=over 4

=item GLOBAL VARIABLES

$ERROR_FH, $MSG_FH

=back

=head2 CPANPLUS::FAQ

=over 4

=item DESCRIPTION

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 CPANPLUS::Hacking

=over 4

=item DESCRIPTION

=item OBTAINING CPANPLUS

=item INSTALLING CPANPLUS

=item CONFIGURING CPANPLUS

=item RUNNING CPANPLUS FROM DEVELOPMENT ENVIRONMENT

=item RUNNING CPANPLUS TESTS

=item FINDING BUGS

Problem description, Program demonstrating the bug, [OPTIONAL] A patch to
the test suite to test for the bug, [OPTIONAL] A patch to the code + tests
+ documentation

=item SUPPLYING PATCHES

In C<diff -u> or C<diff -c> format, From the root of the snapshot,
Including patches for code + tests + docs, Sent per mail to
cpanplus-devel@@lists.sourceforge.net, With subject containing C<[PATCH]> +
description of the patch

=back

=head2 CPANPLUS::Internals

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item ACCESSORS

_conf, _id, _lib, _perl5lib

=back

=over 4

=item METHODS

=over 4

=item $internals = CPANPLUS::Internals->_init( _conf => CONFIG_OBJ )

=back

=back

=over 4

=item $bool = $internals->_flush( list => \@@caches )

=back

=over 4

=item $bool = $internals->_register_callback( name => CALLBACK_NAME, code
=> CODEREF );

install_prerequisite, send_test_report, munge_test_report,
edit_test_report, proceed_on_test_failure, munge_dist_metafile

=back

=over 4

=item $bool = $internals->_add_to_includepath( directories => \@@dirs )

=back

=over 4

=item $id = CPANPLUS::Internals->_last_id

=item $id = CPANPLUS::Internals->_store_id( $internals )

=item $obj = CPANPLUS::Internals->_retrieve_id( $ID )

=item CPANPLUS::Internals->_remove_id( $ID )

=item @@objs = CPANPLUS::Internals->_return_all_objects

=back

=head2 CPANPLUS::Internals::Extract

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item $dir = _extract( module => $modobj, [perl => '/path/to/perl',
extractdir => '/path/to/extract/to', prefer_bin => BOOL, verbose => BOOL,
force => BOOL] )

module, extractdir, prefer_bin, perl, verbose, force

=back

=back

=head2 CPANPLUS::Internals::Fetch

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=back

=over 4

=item $path = _fetch( module => $modobj, [fetchdir => '/path/to/save/to',
fetch_from => 'scheme://path/to/fetch/from', verbose => BOOL, force =>
BOOL, prefer_bin => BOOL] )

=back

=over 4

=item _add_fail_host( host => $host_hashref )

=item _host_ok( host => $host_hashref )

=back

=head2 CPANPLUS::Internals::Report

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item $bool = $cb->_have_query_report_modules

=item $bool = $cb->_have_send_report_modules

=back

=back

=over 4

=item @@list = $cb->_query_report( module => $modobj, [all_versions => BOOL,
verbose => BOOL] )

=back

=over 4

=item $bool = $cb->_send_report( module => $modobj, buffer => $make_output,
failed => BOOL, [save => BOOL, address => $email_to, dontcc => BOOL,
verbose => BOOL, force => BOOL]);

module, buffer, failed, save, address, dontcc, verbose, force

=back

=head2 CPANPLUS::Internals::Search

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item _search_module_tree( type => TYPE, allow => \@@regexex, [data =>
\@@previous_results ] )

type, allow, data

=back

=back

=over 4

=item _search_author_tree( type => TYPE, allow => \@@regexex, [data =>
\@@previous_results ] )

type, allow, data

=back

=over 4

=item _all_installed()

=back

=head2 CPANPLUS::Internals::Source

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=back

=over 4

=item $cb->_check_trees( [update_source => BOOL, path => PATH, verbose =>
BOOL] )

update_source, path, verbose

=back

=over 4

=item $cb->__check_uptodate( file => $file, name => $name, [update_source
=> BOOL, verbose => BOOL] )

file, name, update_source, verbose

=back

=over 4

=item $cb->_update_source( name => $name, [path => $path, verbose => BOOL]
)

name, path, verbose

=back

=over 4

=item $cb->_build_trees( uptodate => BOOL, [use_stored => BOOL, path =>
$path, verbose => BOOL] )

uptodate, path, verbose, use_stored

=back

=over 4

=item $cb->__retrieve_source(name => $name, [path => $path, uptodate =>
BOOL, verbose => BOOL])

name, uptodate, path, verbose

=back

=over 4

=item $cb->_save_source([verbose => BOOL, path => $path])

path, verbose

=back

=over 4

=item $cb->__create_author_tree([path => $path, uptodate => BOOL, verbose
=> BOOL])

uptodate, path, verbose

=back

=over 4

=item $cb->_create_mod_tree([path => $path, uptodate => BOOL, verbose =>
BOOL])

uptodate, path, verbose

=back

=over 4

=item $cb->__create_dslip_tree([path => $path, uptodate => BOOL, verbose =>
BOOL])

uptodate, path, verbose

=back

=over 4

=item $cb->_dslip_defs ()

=back

=over 4

=item $file = $cb->_add_custom_module_source( uri => URI, [verbose => BOOL]
); 

=back

=over 4

=item $index = $cb->__custom_module_source_index_file( uri => $uri );

=back

=over 4

=item $file = $cb->_remove_custom_module_source( uri => URI, [verbose =>
BOOL] ); 

=back

=over 4

=item %files = $cb->__list_custom_module_sources

=back

=over 4

=item $bool = $cb->__update_custom_module_sources( [verbose => BOOL] );

=back

=over 4

=item $ok = $cb->__update_custom_module_source 

=back

=over 4

=item $bool = $cb->__write_custom_module_index( path => /path/to/packages,
[to => /path/to/index/file, verbose => BOOL] )

=back

=over 4

=item $bool = $cb->__create_custom_module_entries( [verbose => BOOL] ) 

=back

=head2 CPANPLUS::Internals::Utils

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item $cb->_mkdir( dir => '/some/dir' )

=back

=back

=over 4

=item $cb->_chdir( dir => '/some/dir' )

=back

=over 4

=item $cb->_rmdir( dir => '/some/dir' );

=back

=over 4

=item $cb->_perl_version ( perl => 'some/perl/binary' );

=back

=over 4

=item $cb->_version_to_number( version => $version );

=back

=over 4

=item $cb->_whoami

=back

=over 4

=item _get_file_contents( file => $file );

=back

=over 4

=item $cb->_mode_plus_w( file => '/path/to/file' );

=back

=over 4

=item $uri = $cb->_host_to_uri( scheme => SCHEME, host => HOST, path =>
PATH );

=back

=over 4

=item $cb->_vcmp( VERSION, VERSION );

=back

=over 4

=item $cb->_home_dir

=back

=over 4

=item $path = $cb->_safe_path( path => $path );

=back

=over 4

=item ($pkg, $version, $ext) = $cb->_split_package_string( package =>
PACKAGE_STRING );

=back

=head2 CPANPLUS::Module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item CLASS METHODS

=over 4

=item accessors ()

=back

=back

=over 4

=item ACCESSORS

name, module, version, path, comment, package, description, dslip

=back

status, author, parent

=over 4

=item STATUS ACCESSORS

installer_type, dist_cpan, dist, prereqs, signature, extract, fetch,
readme, uninstall, created, installed, checksums, checksum_ok,
checksum_value

=item METHODS

=over 4

=item $self = CPANPLUS::Module::new( OPTIONS )

=back

=back

=over 4

=item $mod->package_name

=item $mod->package_version

=item $mod->package_extension

=item $mod->package_is_perl_core

=item $mod->module_is_supplied_with_perl_core( [version => $]] )

=item $mod->is_bundle

=item $mod->is_third_party

=item $mod->third_party_information

=back

=over 4

=item $clone = $self->clone

=back

=over 4

=item $where = $self->fetch

=back

=over 4

=item $path = $self->extract

=back

=over 4

=item $type = $self->get_installer_type([prefer_makefile => BOOL])

=back

=over 4

=item $dist = $self->dist([target => 'prepare|create', format =>
DISTRIBUTION_TYPE, args => {key => val}]);

=back

=over 4

=item $bool = $mod->prepare( )

Convenience method around C<install()> that prepares a module 
without actually building it. This is equivalent to invoking C<install>
with C<target> set to C<prepare>

=back

=over 4

=item $bool = $mod->create( )

=back

=over 4

=item $bool = $mod->test( )

=back

=over 4

=item $bool = $self->install([ target => 'prepare|create|install', format
=> FORMAT_TYPE, extractdir => DIRECTORY, fetchdir => DIRECTORY, prefer_bin
=> BOOL, force => BOOL, verbose => BOOL, ..... ]);

=back

=over 4

=item $text = $self->readme

=back

=over 4

=item $version = $self->installed_version()

=item $where = $self->installed_file()

=item $bool = $self->is_uptodate([version => VERSION_NUMBER])

=back

=over 4

=item $href = $self->details()

=back

=over 4

=item @@list = $self->contains()

=back

=over 4

=item @@list_of_hrefs = $self->fetch_report()

=back

=over 4

=item $bool = $self->uninstall([type => [all|man|prog])

=back

=over 4

=item @@modobj = $self->distributions()

=back

=over 4

=item @@list = $self->files ()

=back

=over 4

=item @@list = $self->directory_tree ()

=back

=over 4

=item @@list = $self->packlist ()

=back

=over 4

=item @@list = $self->validate ()

=back

=over 4

=item $bool = $self->add_to_includepath;

=item $path = $self->best_path_to_module_build();

=back

=over 4

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 CPANPLUS::Module::Author

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item ACCESSORS

author, cpanid, email, parent

=back

=over 4

=item METHODS

=over 4

=item $auth = CPANPLUS::Module::Author->new( author => AUTHOR_NAME, cpanid
=> CPAN_ID, _id => INTERNALS_ID [, email => AUTHOR_EMAIL] )

=back

=back

=over 4

=item @@mod_objs = $auth->modules()

=back

=over 4

=item @@dists = $auth->distributions()

=back

=over 4

=item CLASS METHODS

=over 4

=item accessors ()

=back

=back

=head2 CPANPLUS::Module::Author::Fake

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item new( _id => DIGIT )

=back

=back

=head2 CPANPLUS::Module::Checksums

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item $mod->checksums

=back

=back

=head2 CPANPLUS::Module::Fake

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item new( module => $mod, path => $path, package => $pkg, [_id => DIGIT] )

=back

=back

=head2 CPANPLUS::inc

=over 4

=item DESCRIPTION

=back

=head2 CPANPLUS::inc - runtime inclusion of privately bundled modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

Put a coderef at the beginning of C<@@INC>, Add the full path to the
C<CPANPLUS/inc> directory to C<$ENV{PERL5LIB>

=item METHODS

=over 4

=item CPANPLUS::inc->inc_path()

=item CPANPLUS::inc->my_path()

=item CPANPLUS::inc->installer_path()

=back

=back

=over 4

=item CPANPLUS::inc->original_perl5lib

=item CPANPLUS::inc->original_perl5opt

=item CPANPLUS::inc->original_inc

=item CPANPLUS::inc->limited_perl5opt(@@modules);

=back

=over 4

=item CPANPLUS::inc->interesting_modules()

=back

=over 4

=item INTERESTING MODULES

Loop over your @@INC, Check the version on every suitable module found in
@@INC

=back

=over 4

=item DEBUG

=item CAVEATS

On multiple C<use lib> calls, our coderef may not be the first in @@INC,
Non-directories in @@INC

=back

=head2 CPANPLUSelfupdate, CPANPLUS::Selfupdate

=over 4

=item SYNOPSIS

=back

=over 4

=item METHODS

=over 4

=item $self = CPANPLUS::Selfupdate->new( $backend_object );

=back

=back

=over 4

=item %list = $self->list_modules_to_update( update =>
"core|dependencies|enabled_features|features|all", [latest => BOOL] )

List which modules C<selfupdate> would upgrade. You can update either 
the core (CPANPLUS itself), the core dependencies, all features you have
currently turned on, or all features available, or everything.

=back

=over 4

=item @@features = $self->list_features

=back

=over 4

=item @@features = $self->list_enabled_features

=back

=over 4

=item @@mods = $self->modules_for_feature( FEATURE [,AS_HASH] )

=back

=over 4

=item @@mods = $self->list_core_dependencies( [AS_HASH] )

=back

=over 4

=item @@mods = $self->list_core_modules( [AS_HASH] )

=back

=over 4

=item CPANPLUS::Selfupdate::Module

=back

=over 4

=item $version = $mod->version_required

=back

=over 4

=item $bool = $mod->is_installed_version_sufficient

=back

=over 4

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 CPANPLUShell, CPANPLUS::Shell

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 CPANPLUShell::Classic, CPANPLUS::Shell::Classic - CPAN.pm emulation
for CPANPLUS

=over 4

=item DESCRIPTION

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=over 4

=item SEE ALSO

=back

=head2 CPANPLUShell::Default, CPANPLUS::Shell::Default

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 CPANPLUShell::Default::Plugins::CustomSource,
CPANPLUS::Shell::Default::Plugins::CustomSource 

=over 4

=item SYNOPSIS

    ### elaborate help text
    CPAN Terminal> /? cs

=item DESCRIPTION

=back

=head2 CPANPLUShell::Default::Plugins::HOWTO,
CPANPLUS::Shell::Default::Plugins::HOWTO -- documentation on how to write
your own plugins

=over 4

=item SYNOPSIS

=item HOWTO

=over 4

=item Registering Plugin Modules

=item Registering Plugin Commands

=item Registering Plugin Help

=item Arguments to Plugin Commands

Classname -- The name of your plugin class, Shell     -- The
CPANPLUS::Shell::Default object, Backend   -- The CPANPLUS::Backend object,
Command   -- The command issued by the user, Input     -- The input string
from the user, Options	 -- A hashref of options provided by the user

=back

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 CPANPLUShell::Default::Plugins::Remote,
CPANPLUS::Shell::Default::Plugins::Remote

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 CPANPLUShell::Default::Plugins::Source,
CPANPLUS::Shell::Default::Plugins::Source 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 CPANox, CPAN::Nox - Wrapper around CPAN.pm without using any XS
module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item LICENSE

=item  SEE ALSO

=back

=head2 Carp, carp    - warn of errors (from perspective of caller)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Forcing a Stack Trace

=back

=item GLOBAL VARIABLES

=over 4

=item $Carp::MaxEvalLen

=item $Carp::MaxArgLen

=item $Carp::MaxArgNums

=item $Carp::Verbose

=item %Carp::Internal

=item %Carp::CarpInternal

=item $Carp::CarpLevel

=back

=item BUGS

=back

=head2 Carp::Heavy - heavy machinery, no user serviceable parts inside

=head2 Class::ISA -- report the search path for a class's ISA tree

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

the function Class::ISA::super_path($CLASS), the function
Class::ISA::self_and_super_path($CLASS), the function
Class::ISA::self_and_super_versions($CLASS)

=item CAUTIONARY NOTES

=item COPYRIGHT

=item AUTHOR

=back

=head2 Class::Struct - declare struct-like datatypes as Perl classes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The C<struct()> function

=item Class Creation at Compile Time

=item Element Types and Accessor Methods

Scalar (C<'$'> or C<'*$'>), Array (C<'@@'> or C<'*@@'>), Hash (C<'%'> or
C<'*%'>), Class (C<'Class_Name'> or C<'*Class_Name'>)

=item Initializing with C<new>

=back

=item EXAMPLES

Example 1, Example 2, Example 3

=item Author and Modification History

=back

=head2 Compress::Raw::Zlib - Low-Level Interface to zlib compression
library

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Compress::Raw::Zlib::Deflate

=over 4

=item B<($d, $status) = new Compress::Raw::Zlib::Deflate( [OPT] ) >

B<-Level>, B<-Method>, B<-WindowBits>, B<-MemLevel>, B<-Strategy>,
B<-Dictionary>, B<-Bufsize>, B<-AppendOutput>, B<-CRC32>, B<-ADLER32>

=item B<$status = $d-E<gt>deflate($input, $output)>

=item B<$status = $d-E<gt>flush($output [, $flush_type]) >

=item B<$status = $d-E<gt>deflateParams([OPT])>

B<-Level>, B<-Strategy>, B<-BufSize>

=item B<$status = $d-E<gt>deflateTune($good_length, $max_lazy,
$nice_length, $max_chain)>

=item B<$d-E<gt>dict_adler()>

=item B<$d-E<gt>crc32()>

=item B<$d-E<gt>adler32()>

=item B<$d-E<gt>msg()>

=item B<$d-E<gt>total_in()>

=item B<$d-E<gt>total_out()>

=item B<$d-E<gt>get_Strategy()>

=item B<$d-E<gt>get_Level()>

=item B<$d-E<gt>get_BufSize()>

=item Example

=back

=item Compress::Raw::Zlib::Inflate

=over 4

=item B< ($i, $status) = new Compress::Raw::Zlib::Inflate( [OPT] ) >

B<-WindowBits>, B<-Bufsize>, B<-Dictionary>, B<-AppendOutput>, B<-CRC32>,
B<-ADLER32>, B<-ConsumeInput>

=item B< $status = $i-E<gt>inflate($input, $output [,$eof]) >

=item B<$status = $i-E<gt>inflateSync($input)>

=item B<$i-E<gt>dict_adler()>

=item B<$i-E<gt>crc32()>

=item B<$i-E<gt>adler32()>

=item B<$i-E<gt>msg()>

=item B<$i-E<gt>total_in()>

=item B<$i-E<gt>total_out()>

=item B<$d-E<gt>get_BufSize()>

=item Example

=back

=item CHECKSUM FUNCTIONS

=item ACCESSING ZIP FILES

=item CONSTANTS

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 Compress::Raw::Zlib::Compress::Raw::Zlib, Compress::Raw::Zlib -
Low-Level Interface to zlib compression library

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Compress::Raw::Zlib::Deflate

=over 4

=item B<($d, $status) = new Compress::Raw::Zlib::Deflate( [OPT] ) >

B<-Level>, B<-Method>, B<-WindowBits>, B<-MemLevel>, B<-Strategy>,
B<-Dictionary>, B<-Bufsize>, B<-AppendOutput>, B<-CRC32>, B<-ADLER32>

=item B<$status = $d-E<gt>deflate($input, $output)>

=item B<$status = $d-E<gt>flush($output [, $flush_type]) >

=item B<$status = $d-E<gt>deflateParams([OPT])>

B<-Level>, B<-Strategy>, B<-BufSize>

=item B<$status = $d-E<gt>deflateTune($good_length, $max_lazy,
$nice_length, $max_chain)>

=item B<$d-E<gt>dict_adler()>

=item B<$d-E<gt>crc32()>

=item B<$d-E<gt>adler32()>

=item B<$d-E<gt>msg()>

=item B<$d-E<gt>total_in()>

=item B<$d-E<gt>total_out()>

=item B<$d-E<gt>get_Strategy()>

=item B<$d-E<gt>get_Level()>

=item B<$d-E<gt>get_BufSize()>

=item Example

=back

=item Compress::Raw::Zlib::Inflate

=over 4

=item B< ($i, $status) = new Compress::Raw::Zlib::Inflate( [OPT] ) >

B<-WindowBits>, B<-Bufsize>, B<-Dictionary>, B<-AppendOutput>, B<-CRC32>,
B<-ADLER32>, B<-ConsumeInput>

=item B< $status = $i-E<gt>inflate($input, $output [,$eof]) >

=item B<$status = $i-E<gt>inflateSync($input)>

=item B<$i-E<gt>dict_adler()>

=item B<$i-E<gt>crc32()>

=item B<$i-E<gt>adler32()>

=item B<$i-E<gt>msg()>

=item B<$i-E<gt>total_in()>

=item B<$i-E<gt>total_out()>

=item B<$d-E<gt>get_BufSize()>

=item Example

=back

=item CHECKSUM FUNCTIONS

=item ACCESSING ZIP FILES

=item CONSTANTS

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 Compress::Zlib - Interface to zlib compression library

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Notes for users of Compress::Zlib version 1

=back

=item GZIP INTERFACE

B<$gz = gzopen($filename, $mode)>, B<$gz = gzopen($filehandle, $mode)>,
B<$bytesread = $gz-E<gt>gzread($buffer [, $size]) ;>, B<$bytesread =
$gz-E<gt>gzreadline($line) ;>, B<$byteswritten = $gz-E<gt>gzwrite($buffer)
;>, B<$status = $gz-E<gt>gzflush($flush_type) ;>, B<$offset =
$gz-E<gt>gztell() ;>, B<$status = $gz-E<gt>gzseek($offset, $whence) ;>,
B<$gz-E<gt>gzclose>, B<$gz-E<gt>gzsetparams($level, $strategy>, B<$level>,
B<$strategy>, B<$gz-E<gt>gzerror>, B<$gzerrno>

=over 4

=item Examples

=item Compress::Zlib::memGzip

=item Compress::Zlib::memGunzip

=back

=item COMPRESS/UNCOMPRESS

B<$dest = compress($source [, $level] ) ;>, B<$dest = uncompress($source)
;>

=item Deflate Interface

=over 4

=item B<($d, $status) = deflateInit( [OPT] )>

B<-Level>, B<-Method>, B<-WindowBits>, B<-MemLevel>, B<-Strategy>,
B<-Dictionary>, B<-Bufsize>

=item B<($out, $status) = $d-E<gt>deflate($buffer)>

=item B<($out, $status) = $d-E<gt>flush([flush_type])>

=item B<$status = $d-E<gt>deflateParams([OPT])>

B<-Level>, B<-Strategy>

=item B<$d-E<gt>dict_adler()>

=item B<$d-E<gt>msg()>

=item B<$d-E<gt>total_in()>

=item B<$d-E<gt>total_out()>

=item Example

=back

=item Inflate Interface

=over 4

=item B<($i, $status) = inflateInit()>

B<-WindowBits>, B<-Bufsize>, B<-Dictionary>

=item B<($out, $status) = $i-E<gt>inflate($buffer)>

=item B<$status = $i-E<gt>inflateSync($buffer)>

=item B<$i-E<gt>dict_adler()>

=item B<$i-E<gt>msg()>

=item B<$i-E<gt>total_in()>

=item B<$i-E<gt>total_out()>

=item Example

=back

=item CHECKSUM FUNCTIONS

=item CONSTANTS

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 Compress::Zlib::Compress::Zlib, Compress::Zlib - Interface to zlib
compression library

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Notes for users of Compress::Zlib version 1

=back

=item GZIP INTERFACE

B<$gz = gzopen($filename, $mode)>, B<$gz = gzopen($filehandle, $mode)>,
B<$bytesread = $gz-E<gt>gzread($buffer [, $size]) ;>, B<$bytesread =
$gz-E<gt>gzreadline($line) ;>, B<$byteswritten = $gz-E<gt>gzwrite($buffer)
;>, B<$status = $gz-E<gt>gzflush($flush_type) ;>, B<$offset =
$gz-E<gt>gztell() ;>, B<$status = $gz-E<gt>gzseek($offset, $whence) ;>,
B<$gz-E<gt>gzclose>, B<$gz-E<gt>gzsetparams($level, $strategy>, B<$level>,
B<$strategy>, B<$gz-E<gt>gzerror>, B<$gzerrno>

=over 4

=item Examples

=item Compress::Zlib::memGzip

=item Compress::Zlib::memGunzip

=back

=item COMPRESS/UNCOMPRESS

B<$dest = compress($source [, $level] ) ;>, B<$dest = uncompress($source)
;>

=item Deflate Interface

=over 4

=item B<($d, $status) = deflateInit( [OPT] )>

B<-Level>, B<-Method>, B<-WindowBits>, B<-MemLevel>, B<-Strategy>,
B<-Dictionary>, B<-Bufsize>

=item B<($out, $status) = $d-E<gt>deflate($buffer)>

=item B<($out, $status) = $d-E<gt>flush([flush_type])>

=item B<$status = $d-E<gt>deflateParams([OPT])>

B<-Level>, B<-Strategy>

=item B<$d-E<gt>dict_adler()>

=item B<$d-E<gt>msg()>

=item B<$d-E<gt>total_in()>

=item B<$d-E<gt>total_out()>

=item Example

=back

=item Inflate Interface

=over 4

=item B<($i, $status) = inflateInit()>

B<-WindowBits>, B<-Bufsize>, B<-Dictionary>

=item B<($out, $status) = $i-E<gt>inflate($buffer)>

=item B<$status = $i-E<gt>inflateSync($buffer)>

=item B<$i-E<gt>dict_adler()>

=item B<$i-E<gt>msg()>

=item B<$i-E<gt>total_in()>

=item B<$i-E<gt>total_out()>

=item Example

=back

=item CHECKSUM FUNCTIONS

=item CONSTANTS

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 Config - access Perl configuration information

=over 4

=item SYNOPSIS

=item DESCRIPTION

myconfig(), config_sh(), config_re($regex), config_vars(@@names)

=item EXAMPLE

=item WARNING

=item GLOSSARY

=over 4

=item _

C<_a>, C<_exe>, C<_o>

=item a

C<afs>, C<afsroot>, C<alignbytes>, C<ansi2knr>, C<aphostname>,
C<api_revision>, C<api_subversion>, C<api_version>, C<api_versionstring>,
C<ar>, C<archlib>, C<archlibexp>, C<archname>, C<archname64>, C<archobjs>,
C<asctime_r_proto>, C<awk>

=item b

C<baserev>, C<bash>, C<bin>, C<binexp>, C<bison>, C<byacc>, C<byteorder>

=item c

C<c>, C<castflags>, C<cat>, C<cc>, C<cccdlflags>, C<ccdlflags>, C<ccflags>,
C<ccflags_uselargefiles>, C<ccname>, C<ccsymbols>, C<ccversion>, C<cf_by>,
C<cf_email>, C<cf_time>, C<chgrp>, C<chmod>, C<chown>, C<clocktype>,
C<comm>, C<compress>, C<contains>, C<cp>, C<cpio>, C<cpp>, C<cpp_stuff>,
C<cppccsymbols>, C<cppflags>, C<cpplast>, C<cppminus>, C<cpprun>,
C<cppstdin>, C<cppsymbols>, C<crypt_r_proto>, C<cryptlib>, C<csh>,
C<ctermid_r_proto>, C<ctime_r_proto>

=item d

C<d__fwalk>, C<d_access>, C<d_accessx>, C<d_aintl>, C<d_alarm>,
C<d_archlib>, C<d_asctime_r>, C<d_atolf>, C<d_atoll>,
C<d_attribute_format>, C<d_attribute_malloc>, C<d_attribute_nonnull>,
C<d_attribute_noreturn>, C<d_attribute_pure>, C<d_attribute_unused>,
C<d_attribute_warn_unused_result>, C<d_bcmp>, C<d_bcopy>, C<d_bsd>,
C<d_bsdgetpgrp>, C<d_bsdsetpgrp>, C<d_builtin_choose_expr>,
C<d_builtin_expect>, C<d_bzero>, C<d_c99_variadic_macros>, C<d_casti32>,
C<d_castneg>, C<d_charvspr>, C<d_chown>, C<d_chroot>, C<d_chsize>,
C<d_class>, C<d_clearenv>, C<d_closedir>, C<d_cmsghdr_s>, C<d_const>,
C<d_copysignl>, C<d_cplusplus>, C<d_crypt>, C<d_crypt_r>, C<d_csh>,
C<d_ctermid>, C<d_ctermid_r>, C<d_ctime_r>, C<d_cuserid>, C<d_dbl_dig>,
C<d_dbminitproto>, C<d_difftime>, C<d_dir_dd_fd>, C<d_dirfd>,
C<d_dirnamlen>, C<d_dlerror>, C<d_dlopen>, C<d_dlsymun>, C<d_dosuid>,
C<d_drand48_r>, C<d_drand48proto>, C<d_dup2>, C<d_eaccess>, C<d_endgrent>,
C<d_endgrent_r>, C<d_endhent>, C<d_endhostent_r>, C<d_endnent>,
C<d_endnetent_r>, C<d_endpent>, C<d_endprotoent_r>, C<d_endpwent>,
C<d_endpwent_r>, C<d_endsent>, C<d_endservent_r>, C<d_eofnblk>,
C<d_eunice>, C<d_faststdio>, C<d_fchdir>, C<d_fchmod>, C<d_fchown>,
C<d_fcntl>, C<d_fcntl_can_lock>, C<d_fd_macros>, C<d_fd_set>,
C<d_fds_bits>, C<d_fgetpos>, C<d_finite>, C<d_finitel>, C<d_flexfnam>,
C<d_flock>, C<d_flockproto>, C<d_fork>, C<d_fp_class>, C<d_fpathconf>,
C<d_fpclass>, C<d_fpclassify>, C<d_fpclassl>, C<d_fpos64_t>, C<d_frexpl>,
C<d_fs_data_s>, C<d_fseeko>, C<d_fsetpos>, C<d_fstatfs>, C<d_fstatvfs>,
C<d_fsync>, C<d_ftello>, C<d_ftime>, C<d_futimes>, C<d_Gconvert>,
C<d_getcwd>, C<d_getespwnam>, C<d_getfsstat>, C<d_getgrent>,
C<d_getgrent_r>, C<d_getgrgid_r>, C<d_getgrnam_r>, C<d_getgrps>,
C<d_gethbyaddr>, C<d_gethbyname>, C<d_gethent>, C<d_gethname>,
C<d_gethostbyaddr_r>, C<d_gethostbyname_r>, C<d_gethostent_r>,
C<d_gethostprotos>, C<d_getitimer>, C<d_getlogin>, C<d_getlogin_r>,
C<d_getmnt>, C<d_getmntent>, C<d_getnbyaddr>, C<d_getnbyname>,
C<d_getnent>, C<d_getnetbyaddr_r>, C<d_getnetbyname_r>, C<d_getnetent_r>,
C<d_getnetprotos>, C<d_getpagsz>, C<d_getpbyname>, C<d_getpbynumber>,
C<d_getpent>, C<d_getpgid>, C<d_getpgrp>, C<d_getpgrp2>, C<d_getppid>,
C<d_getprior>, C<d_getprotobyname_r>, C<d_getprotobynumber_r>,
C<d_getprotoent_r>, C<d_getprotoprotos>, C<d_getprpwnam>, C<d_getpwent>,
C<d_getpwent_r>, C<d_getpwnam_r>, C<d_getpwuid_r>, C<d_getsbyname>,
C<d_getsbyport>, C<d_getsent>, C<d_getservbyname_r>, C<d_getservbyport_r>,
C<d_getservent_r>, C<d_getservprotos>, C<d_getspnam>, C<d_getspnam_r>,
C<d_gettimeod>, C<d_gmtime_r>, C<d_gnulibc>, C<d_grpasswd>, C<d_hasmntopt>,
C<d_htonl>, C<d_ilogbl>, C<d_inc_version_list>, C<d_index>, C<d_inetaton>,
C<d_int64_t>, C<d_isascii>, C<d_isfinite>, C<d_isinf>, C<d_isnan>,
C<d_isnanl>, C<d_killpg>, C<d_lchown>, C<d_ldbl_dig>,
C<d_libm_lib_version>, C<d_link>, C<d_localtime_r>,
C<d_localtime_r_needs_tzset>, C<d_locconv>, C<d_lockf>, C<d_longdbl>,
C<d_longlong>, C<d_lseekproto>, C<d_lstat>, C<d_madvise>,
C<d_malloc_good_size>, C<d_malloc_size>, C<d_mblen>, C<d_mbstowcs>,
C<d_mbtowc>, C<d_memchr>, C<d_memcmp>, C<d_memcpy>, C<d_memmove>,
C<d_memset>, C<d_mkdir>, C<d_mkdtemp>, C<d_mkfifo>, C<d_mkstemp>,
C<d_mkstemps>, C<d_mktime>, C<d_mmap>, C<d_modfl>, C<d_modfl_pow32_bug>,
C<d_modflproto>, C<d_mprotect>, C<d_msg>, C<d_msg_ctrunc>,
C<d_msg_dontroute>, C<d_msg_oob>, C<d_msg_peek>, C<d_msg_proxy>,
C<d_msgctl>, C<d_msgget>, C<d_msghdr_s>, C<d_msgrcv>, C<d_msgsnd>,
C<d_msync>, C<d_munmap>, C<d_mymalloc>, C<d_nice>, C<d_nl_langinfo>,
C<d_nv_preserves_uv>, C<d_nv_zero_is_allbits_zero>, C<d_off64_t>,
C<d_old_pthread_create_joinable>, C<d_oldpthreads>, C<d_oldsock>,
C<d_open3>, C<d_pathconf>, C<d_pause>, C<d_perl_otherlibdirs>,
C<d_phostname>, C<d_pipe>, C<d_poll>, C<d_portable>, C<d_PRId64>,
C<d_PRIeldbl>, C<d_PRIEUldbl>, C<d_PRIfldbl>, C<d_PRIFUldbl>,
C<d_PRIgldbl>, C<d_PRIGUldbl>, C<d_PRIi64>, C<d_printf_format_null>,
C<d_PRIo64>, C<d_PRIu64>, C<d_PRIx64>, C<d_PRIXU64>, C<d_procselfexe>,
C<d_pseudofork>, C<d_pthread_atfork>, C<d_pthread_attr_setscope>,
C<d_pthread_yield>, C<d_pwage>, C<d_pwchange>, C<d_pwclass>,
C<d_pwcomment>, C<d_pwexpire>, C<d_pwgecos>, C<d_pwpasswd>, C<d_pwquota>,
C<d_qgcvt>, C<d_quad>, C<d_random_r>, C<d_readdir>, C<d_readdir64_r>,
C<d_readdir_r>, C<d_readlink>, C<d_readv>, C<d_recvmsg>, C<d_rename>,
C<d_rewinddir>, C<d_rmdir>, C<d_safebcpy>, C<d_safemcpy>, C<d_sanemcmp>,
C<d_sbrkproto>, C<d_scalbnl>, C<d_sched_yield>, C<d_scm_rights>,
C<d_SCNfldbl>, C<d_seekdir>, C<d_select>, C<d_sem>, C<d_semctl>,
C<d_semctl_semid_ds>, C<d_semctl_semun>, C<d_semget>, C<d_semop>,
C<d_sendmsg>, C<d_setegid>, C<d_seteuid>, C<d_setgrent>, C<d_setgrent_r>,
C<d_setgrps>, C<d_sethent>, C<d_sethostent_r>, C<d_setitimer>,
C<d_setlinebuf>, C<d_setlocale>, C<d_setlocale_r>, C<d_setnent>,
C<d_setnetent_r>, C<d_setpent>, C<d_setpgid>, C<d_setpgrp>, C<d_setpgrp2>,
C<d_setprior>, C<d_setproctitle>, C<d_setprotoent_r>, C<d_setpwent>,
C<d_setpwent_r>, C<d_setregid>, C<d_setresgid>, C<d_setresuid>,
C<d_setreuid>, C<d_setrgid>, C<d_setruid>, C<d_setsent>, C<d_setservent_r>,
C<d_setsid>, C<d_setvbuf>, C<d_sfio>, C<d_shm>, C<d_shmat>,
C<d_shmatprototype>, C<d_shmctl>, C<d_shmdt>, C<d_shmget>, C<d_sigaction>,
C<d_signbit>, C<d_sigprocmask>, C<d_sigsetjmp>, C<d_sitearch>,
C<d_snprintf>, C<d_sockatmark>, C<d_sockatmarkproto>, C<d_socket>,
C<d_socklen_t>, C<d_sockpair>, C<d_socks5_init>,
C<d_sprintf_returns_strlen>, C<d_sqrtl>, C<d_srand48_r>, C<d_srandom_r>,
C<d_sresgproto>, C<d_sresuproto>, C<d_statblks>, C<d_statfs_f_flags>,
C<d_statfs_s>, C<d_statvfs>, C<d_stdio_cnt_lval>, C<d_stdio_ptr_lval>,
C<d_stdio_ptr_lval_nochange_cnt>, C<d_stdio_ptr_lval_sets_cnt>,
C<d_stdio_stream_array>, C<d_stdiobase>, C<d_stdstdio>, C<d_strchr>,
C<d_strcoll>, C<d_strctcpy>, C<d_strerrm>, C<d_strerror>, C<d_strerror_r>,
C<d_strftime>, C<d_strlcat>, C<d_strlcpy>, C<d_strtod>, C<d_strtol>,
C<d_strtold>, C<d_strtoll>, C<d_strtoq>, C<d_strtoul>, C<d_strtoull>,
C<d_strtouq>, C<d_strxfrm>, C<d_suidsafe>, C<d_symlink>, C<d_syscall>,
C<d_syscallproto>, C<d_sysconf>, C<d_sysernlst>, C<d_syserrlst>,
C<d_system>, C<d_tcgetpgrp>, C<d_tcsetpgrp>, C<d_telldir>,
C<d_telldirproto>, C<d_time>, C<d_times>, C<d_tm_tm_gmtoff>,
C<d_tm_tm_zone>, C<d_tmpnam_r>, C<d_truncate>, C<d_ttyname_r>, C<d_tzname>,
C<d_u32align>, C<d_ualarm>, C<d_umask>, C<d_uname>, C<d_union_semun>,
C<d_unordered>, C<d_unsetenv>, C<d_usleep>, C<d_usleepproto>, C<d_ustat>,
C<d_vendorarch>, C<d_vendorbin>, C<d_vendorlib>, C<d_vendorscript>,
C<d_vfork>, C<d_void_closedir>, C<d_voidsig>, C<d_voidtty>, C<d_volatile>,
C<d_vprintf>, C<d_vsnprintf>, C<d_wait4>, C<d_waitpid>, C<d_wcstombs>,
C<d_wctomb>, C<d_writev>, C<d_xenix>, C<date>, C<db_hashtype>,
C<db_prefixtype>, C<db_version_major>, C<db_version_minor>,
C<db_version_patch>, C<defvoidused>, C<direntrytype>, C<dlext>, C<dlsrc>,
C<doublesize>, C<drand01>, C<drand48_r_proto>, C<dynamic_ext>

=item e

C<eagain>, C<ebcdic>, C<echo>, C<egrep>, C<emacs>, C<endgrent_r_proto>,
C<endhostent_r_proto>, C<endnetent_r_proto>, C<endprotoent_r_proto>,
C<endpwent_r_proto>, C<endservent_r_proto>, C<eunicefix>, C<exe_ext>,
C<expr>, C<extensions>, C<extras>

=item f

C<fflushall>, C<fflushNULL>, C<find>, C<firstmakefile>, C<flex>,
C<fpossize>, C<fpostype>, C<freetype>, C<from>, C<full_ar>, C<full_csh>,
C<full_sed>

=item g

C<gccansipedantic>, C<gccosandvers>, C<gccversion>, C<getgrent_r_proto>,
C<getgrgid_r_proto>, C<getgrnam_r_proto>, C<gethostbyaddr_r_proto>,
C<gethostbyname_r_proto>, C<gethostent_r_proto>, C<getlogin_r_proto>,
C<getnetbyaddr_r_proto>, C<getnetbyname_r_proto>, C<getnetent_r_proto>,
C<getprotobyname_r_proto>, C<getprotobynumber_r_proto>,
C<getprotoent_r_proto>, C<getpwent_r_proto>, C<getpwnam_r_proto>,
C<getpwuid_r_proto>, C<getservbyname_r_proto>, C<getservbyport_r_proto>,
C<getservent_r_proto>, C<getspnam_r_proto>, C<gidformat>, C<gidsign>,
C<gidsize>, C<gidtype>, C<glibpth>, C<gmake>, C<gmtime_r_proto>,
C<gnulibc_version>, C<grep>, C<groupcat>, C<groupstype>, C<gzip>

=item h

C<h_fcntl>, C<h_sysfile>, C<hint>, C<hostcat>, C<html1dir>, C<html1direxp>,
C<html3dir>, C<html3direxp>

=item i

C<i16size>, C<i16type>, C<i32size>, C<i32type>, C<i64size>, C<i64type>,
C<i8size>, C<i8type>, C<i_arpainet>, C<i_bsdioctl>, C<i_crypt>, C<i_db>,
C<i_dbm>, C<i_dirent>, C<i_dld>, C<i_dlfcn>, C<i_fcntl>, C<i_float>,
C<i_fp>, C<i_fp_class>, C<i_gdbm>, C<i_grp>, C<i_ieeefp>, C<i_inttypes>,
C<i_langinfo>, C<i_libutil>, C<i_limits>, C<i_locale>, C<i_machcthr>,
C<i_malloc>, C<i_math>, C<i_memory>, C<i_mntent>, C<i_ndbm>, C<i_netdb>,
C<i_neterrno>, C<i_netinettcp>, C<i_niin>, C<i_poll>, C<i_prot>,
C<i_pthread>, C<i_pwd>, C<i_rpcsvcdbm>, C<i_sfio>, C<i_sgtty>, C<i_shadow>,
C<i_socks>, C<i_stdarg>, C<i_stddef>, C<i_stdlib>, C<i_string>,
C<i_sunmath>, C<i_sysaccess>, C<i_sysdir>, C<i_sysfile>, C<i_sysfilio>,
C<i_sysin>, C<i_sysioctl>, C<i_syslog>, C<i_sysmman>, C<i_sysmode>,
C<i_sysmount>, C<i_sysndir>, C<i_sysparam>, C<i_sysresrc>, C<i_syssecrt>,
C<i_sysselct>, C<i_syssockio>, C<i_sysstat>, C<i_sysstatfs>,
C<i_sysstatvfs>, C<i_systime>, C<i_systimek>, C<i_systimes>, C<i_systypes>,
C<i_sysuio>, C<i_sysun>, C<i_sysutsname>, C<i_sysvfs>, C<i_syswait>,
C<i_termio>, C<i_termios>, C<i_time>, C<i_unistd>, C<i_ustat>, C<i_utime>,
C<i_values>, C<i_varargs>, C<i_varhdr>, C<i_vfork>,
C<ignore_versioned_solibs>, C<inc_version_list>, C<inc_version_list_init>,
C<incpath>, C<inews>, C<initialinstalllocation>, C<installarchlib>,
C<installbin>, C<installhtml1dir>, C<installhtml3dir>, C<installman1dir>,
C<installman3dir>, C<installprefix>, C<installprefixexp>,
C<installprivlib>, C<installscript>, C<installsitearch>, C<installsitebin>,
C<installsitehtml1dir>, C<installsitehtml3dir>, C<installsitelib>,
C<installsiteman1dir>, C<installsiteman3dir>, C<installsitescript>,
C<installstyle>, C<installusrbinperl>, C<installvendorarch>,
C<installvendorbin>, C<installvendorhtml1dir>, C<installvendorhtml3dir>,
C<installvendorlib>, C<installvendorman1dir>, C<installvendorman3dir>,
C<installvendorscript>, C<intsize>, C<issymlink>, C<ivdformat>, C<ivsize>,
C<ivtype>

=item k

C<known_extensions>, C<ksh>

=item l

C<ld>, C<lddlflags>, C<ldflags>, C<ldflags_uselargefiles>, C<ldlibpthname>,
C<less>, C<lib_ext>, C<libc>, C<libperl>, C<libpth>, C<libs>, C<libsdirs>,
C<libsfiles>, C<libsfound>, C<libspath>, C<libswanted>,
C<libswanted_uselargefiles>, C<line>, C<lint>, C<lkflags>, C<ln>, C<lns>,
C<localtime_r_proto>, C<locincpth>, C<loclibpth>, C<longdblsize>,
C<longlongsize>, C<longsize>, C<lp>, C<lpr>, C<ls>, C<lseeksize>,
C<lseektype>

=item m

C<mad>, C<madlyh>, C<madlyobj>, C<madlysrc>, C<mail>, C<mailx>, C<make>,
C<make_set_make>, C<mallocobj>, C<mallocsrc>, C<malloctype>, C<man1dir>,
C<man1direxp>, C<man1ext>, C<man3dir>, C<man3direxp>, C<man3ext>

=item M

C<Mcc>, C<mips_type>, C<mistrustnm>, C<mkdir>, C<mmaptype>, C<modetype>,
C<more>, C<multiarch>, C<mv>, C<myarchname>, C<mydomain>, C<myhostname>,
C<myuname>

=item n

C<n>, C<need_va_copy>, C<netdb_hlen_type>, C<netdb_host_type>,
C<netdb_name_type>, C<netdb_net_type>, C<nm>, C<nm_opt>, C<nm_so_opt>,
C<nonxs_ext>, C<nroff>, C<nv_preserves_uv_bits>, C<nveformat>,
C<nvEUformat>, C<nvfformat>, C<nvFUformat>, C<nvgformat>, C<nvGUformat>,
C<nvsize>, C<nvtype>

=item o

C<o_nonblock>, C<obj_ext>, C<old_pthread_create_joinable>, C<optimize>,
C<orderlib>, C<osname>, C<osvers>, C<otherlibdirs>

=item p

C<package>, C<pager>, C<passcat>, C<patchlevel>, C<path_sep>, C<perl>,
C<perl5>

=item P

C<PERL_API_REVISION>, C<PERL_API_SUBVERSION>, C<PERL_API_VERSION>,
C<PERL_CONFIG_SH>, C<PERL_PATCHLEVEL>, C<perl_patchlevel>,
C<PERL_REVISION>, C<PERL_SUBVERSION>, C<PERL_VERSION>, C<perladmin>,
C<perllibs>, C<perlpath>, C<pg>, C<phostname>, C<pidtype>, C<plibpth>,
C<pmake>, C<pr>, C<prefix>, C<prefixexp>, C<privlib>, C<privlibexp>,
C<procselfexe>, C<prototype>, C<ptrsize>

=item q

C<quadkind>, C<quadtype>

=item r

C<randbits>, C<randfunc>, C<random_r_proto>, C<randseedtype>, C<ranlib>,
C<rd_nodata>, C<readdir64_r_proto>, C<readdir_r_proto>, C<revision>, C<rm>,
C<rm_try>, C<rmail>, C<run>, C<runnm>

=item s

C<sched_yield>, C<scriptdir>, C<scriptdirexp>, C<sed>, C<seedfunc>,
C<selectminbits>, C<selecttype>, C<sendmail>, C<setgrent_r_proto>,
C<sethostent_r_proto>, C<setlocale_r_proto>, C<setnetent_r_proto>,
C<setprotoent_r_proto>, C<setpwent_r_proto>, C<setservent_r_proto>, C<sh>,
C<shar>, C<sharpbang>, C<shmattype>, C<shortsize>, C<shrpenv>, C<shsharp>,
C<sig_count>, C<sig_name>, C<sig_name_init>, C<sig_num>, C<sig_num_init>,
C<sig_size>, C<signal_t>, C<sitearch>, C<sitearchexp>, C<sitebin>,
C<sitebinexp>, C<sitehtml1dir>, C<sitehtml1direxp>, C<sitehtml3dir>,
C<sitehtml3direxp>, C<sitelib>, C<sitelib_stem>, C<sitelibexp>,
C<siteman1dir>, C<siteman1direxp>, C<siteman3dir>, C<siteman3direxp>,
C<siteprefix>, C<siteprefixexp>, C<sitescript>, C<sitescriptexp>,
C<sizesize>, C<sizetype>, C<sleep>, C<smail>, C<so>, C<sockethdr>,
C<socketlib>, C<socksizetype>, C<sort>, C<spackage>, C<spitshell>,
C<sPRId64>, C<sPRIeldbl>, C<sPRIEUldbl>, C<sPRIfldbl>, C<sPRIFUldbl>,
C<sPRIgldbl>, C<sPRIGUldbl>, C<sPRIi64>, C<sPRIo64>, C<sPRIu64>,
C<sPRIx64>, C<sPRIXU64>, C<srand48_r_proto>, C<srandom_r_proto>, C<src>,
C<sSCNfldbl>, C<ssizetype>, C<startperl>, C<startsh>, C<static_ext>,
C<stdchar>, C<stdio_base>, C<stdio_bufsiz>, C<stdio_cnt>, C<stdio_filbuf>,
C<stdio_ptr>, C<stdio_stream_array>, C<strerror_r_proto>, C<strings>,
C<submit>, C<subversion>, C<sysman>

=item t

C<tail>, C<tar>, C<targetarch>, C<tbl>, C<tee>, C<test>, C<timeincl>,
C<timetype>, C<tmpnam_r_proto>, C<to>, C<touch>, C<tr>, C<trnl>, C<troff>,
C<ttyname_r_proto>

=item u

C<u16size>, C<u16type>, C<u32size>, C<u32type>, C<u64size>, C<u64type>,
C<u8size>, C<u8type>, C<uidformat>, C<uidsign>, C<uidsize>, C<uidtype>,
C<uname>, C<uniq>, C<uquadtype>, C<use5005threads>, C<use64bitall>,
C<use64bitint>, C<usecrosscompile>, C<usedl>, C<usefaststdio>,
C<useithreads>, C<uselargefiles>, C<uselongdouble>, C<usemallocwrap>,
C<usemorebits>, C<usemultiplicity>, C<usemymalloc>, C<usenm>, C<useopcode>,
C<useperlio>, C<useposix>, C<usereentrant>, C<userelocatableinc>,
C<usesfio>, C<useshrplib>, C<usesitecustomize>, C<usesocks>, C<usethreads>,
C<usevendorprefix>, C<usevfork>, C<usrinc>, C<uuname>, C<uvoformat>,
C<uvsize>, C<uvtype>, C<uvuformat>, C<uvxformat>, C<uvXUformat>

=item v

C<vendorarch>, C<vendorarchexp>, C<vendorbin>, C<vendorbinexp>,
C<vendorhtml1dir>, C<vendorhtml1direxp>, C<vendorhtml3dir>,
C<vendorhtml3direxp>, C<vendorlib>, C<vendorlib_stem>, C<vendorlibexp>,
C<vendorman1dir>, C<vendorman1direxp>, C<vendorman3dir>,
C<vendorman3direxp>, C<vendorprefix>, C<vendorprefixexp>, C<vendorscript>,
C<vendorscriptexp>, C<version>, C<version_patchlevel_string>,
C<versiononly>, C<vi>, C<voidflags>

=item x

C<xlibpth>

=item y

C<yacc>, C<yaccflags>

=item z

C<zcat>, C<zip>

=back

=item NOTE

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

dynamic, nonxs, static

=item AUTHOR

=back

=head2 Cwd - get pathname of current working directory

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item getcwd and friends

getcwd, cwd, fastcwd, fastgetcwd, getdcwd

=item abs_path and friends

abs_path, realpath, fast_abs_path

=item $ENV{PWD}

=back

=item NOTES

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 DB - programmatic interface to the Perl debugging API

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Global Variables

 $DB::sub,  %DB::sub,  $DB::single,  $DB::signal,  $DB::trace,	@@DB::args, 
@@DB::dbline,  %DB::dbline,  $DB::package,  $DB::filename,  $DB::subname, 
$DB::lineno

=item API Methods

CLIENT->register(), CLIENT->evalcode(STRING), CLIENT->skippkg('D::hide'),
CLIENT->run(), CLIENT->step(), CLIENT->next(), CLIENT->done()

=item Client Callback Methods

CLIENT->init(), CLIENT->prestop([STRING]), CLIENT->stop(), CLIENT->idle(),
CLIENT->poststop([STRING]), CLIENT->evalcode(STRING), CLIENT->cleanup(),
CLIENT->output(LIST)

=back

=item BUGS

=item AUTHOR

=back

=head2 DBM_Filter -- Filter DBM keys/values 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item What is a DBM Filter?

=over 4

=item So what's new?

=back

=item METHODS

=over 4

=item $db->Filter_Push()

=item $db->Filter_Key_Push()

=item $db->Filter_Value_Push()

Filter_Push, Filter_Key_Push, Filter_Value_Push

=item $db->Filter_Pop()

=item $db->Filtered()

=back

=item Writing a Filter

=over 4

=item Immediate Filters

=item Canned Filters

"name", params

=back

=item Filters Included

utf8, encode, compress, int32, null

=item NOTES

=over 4

=item Maintain Round Trip Integrity

=item Don't mix filtered & non-filtered data in the same database file. 

=back

=item EXAMPLE

=item SEE ALSO

=item AUTHOR

=back

=head2 DBM_Filter::compress - filter for DBM_Filter

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=back

=head2 DBM_Filter::encode - filter for DBM_Filter

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=back

=head2 DBM_Filter::int32 - filter for DBM_Filter

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=back

=head2 DBM_Filter::null - filter for DBM_Filter

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=back

=head2 DBM_Filter::utf8 - filter for DBM_Filter

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=back

=head2 DB_File - Perl5 access to Berkeley DB version 1.x

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<DB_HASH>, B<DB_BTREE>, B<DB_RECNO>

=over 4

=item Using DB_File with Berkeley DB version 2 or greater

=item Interface to Berkeley DB

=item Opening a Berkeley DB Database File

=item Default Parameters

=item In Memory Databases

=back

=item DB_HASH

=over 4

=item A Simple Example

=back

=item DB_BTREE

=over 4

=item Changing the BTREE sort order

=item Handling Duplicate Keys 

=item The get_dup() Method

=item The find_dup() Method

=item The del_dup() Method

=item Matching Partial Keys 

=back

=item DB_RECNO

=over 4

=item The 'bval' Option

=item A Simple Example

=item Extra RECNO Methods

B<$X-E<gt>push(list) ;>, B<$value = $X-E<gt>pop ;>, B<$X-E<gt>shift>,
B<$X-E<gt>unshift(list) ;>, B<$X-E<gt>length>, B<$X-E<gt>splice(offset,
length, elements);>

=item Another Example

=back

=item THE API INTERFACE

B<$status = $X-E<gt>get($key, $value [, $flags]) ;>, B<$status =
$X-E<gt>put($key, $value [, $flags]) ;>, B<$status = $X-E<gt>del($key [,
$flags]) ;>, B<$status = $X-E<gt>fd ;>, B<$status = $X-E<gt>seq($key,
$value, $flags) ;>, B<$status = $X-E<gt>sync([$flags]) ;>

=item DBM FILTERS

B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>

=over 4

=item The Filter

=item An Example -- the NULL termination problem.

=item Another Example -- Key is a C int.

=back

=item HINTS AND TIPS 

=over 4

=item Locking: The Trouble with fd

=item Safe ways to lock a database

B<Tie::DB_Lock>, B<Tie::DB_LockFile>, B<DB_File::Lock>

=item Sharing Databases With C Applications

=item The untie() Gotcha

=back

=item COMMON QUESTIONS

=over 4

=item Why is there Perl source in my database?

=item How do I store complex data structures with DB_File?

=item What does "Invalid Argument" mean?

=item What does "Bareword 'DB_File' not allowed" mean? 

=back

=item REFERENCES

=item HISTORY

=item BUGS

=item AVAILABILITY

=item COPYRIGHT

=item SEE ALSO

=item AUTHOR

=back

=head2 Data::Dumper - stringified perl data structures, suitable for both
printing and C<eval>

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods

I<PACKAGE>->new(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Dump  I<or> 
I<PACKAGE>->Dump(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Seen(I<[HASHREF]>),
I<$OBJ>->Values(I<[ARRAYREF]>), I<$OBJ>->Names(I<[ARRAYREF]>),
I<$OBJ>->Reset

=item Functions

Dumper(I<LIST>)

=item Configuration Variables or Methods

=item Exports

Dumper

=back

=item EXAMPLES

=item BUGS

=over 4

=item NOTE

=back

=item AUTHOR

=item VERSION

=item SEE ALSO

=back

=head2 Devel::DProf - a Perl code profiler

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item PROFILE FORMAT

=item AUTOLOAD

=item ENVIRONMENT

=item BUGS

=item SEE ALSO

=back

=head2 Devel::InnerPackage - find all the inner packages of a package

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item list_packages <package name>

=back

=back

=over 4

=item AUTHOR

=item COPYING

=item BUGS

=back

=head2 Devel::PPPort - Perl/Pollution/Portability

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Why use ppport.h?

=item How to use ppport.h

=item Running ppport.h

=back

=item FUNCTIONS

=over 4

=item WriteFile

=back

=item COMPATIBILITY

=over 4

=item Provided Perl compatibility API

=item Perl API not supported by ppport.h

perl 5.9.5, perl 5.9.4, perl 5.9.3, perl 5.9.2, perl 5.9.1, perl 5.9.0,
perl 5.8.3, perl 5.8.1, perl 5.8.0, perl 5.7.3, perl 5.7.2, perl 5.7.1,
perl 5.6.1, perl 5.6.0, perl 5.005_03, perl 5.005, perl 5.004_05, perl
5.004

=back

=item BUGS

=item AUTHORS

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Devel::Peek - A data debugging tool for the XS programmer

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Runtime debugging

=item Memory footprint debugging

=back

=item EXAMPLES

=over 4

=item A simple scalar string

=item A simple scalar number

=item A simple scalar with an extra reference

=item A reference to a simple scalar

=item A reference to an array

=item A reference to a hash

=item Dumping a large array or hash

=item A reference to an SV which holds a C pointer

=item A reference to a subroutine

=back

=item EXPORTS

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 Devel::SelfStubber - generate stubs for a SelfLoading module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 Digest - Modules that calculate message digests

=over 4

=item SYNOPSIS

=item DESCRIPTION

I<binary>, I<hex>, I<base64>

=item OO INTERFACE

$ctx = Digest->XXX($arg,...), $ctx = Digest->new(XXX => $arg,...), $ctx =
Digest::XXX->new($arg,...), $other_ctx = $ctx->clone, $ctx->reset,
$ctx->add( $data ), $ctx->add( $chunk1, $chunk2, ... ), $ctx->addfile(
$io_handle ), $ctx->add_bits( $data, $nbits ), $ctx->add_bits( $bitstring
), $ctx->digest, $ctx->hexdigest, $ctx->b64digest

=item Digest speed

=item SEE ALSO

=item AUTHOR

=back

=head2 Digest::MD5 - Perl interface to the MD5 Algorithm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

md5($data,...), md5_hex($data,...), md5_base64($data,...)

=item METHODS

$md5 = Digest::MD5->new, $md5->reset, $md5->clone, $md5->add($data,...),
$md5->addfile($io_handle), $md5->add_bits($data, $nbits),
$md5->add_bits($bitstring), $md5->digest, $md5->hexdigest, $md5->b64digest

=item EXAMPLES

=item SEE ALSO

=item COPYRIGHT

=item AUTHORS

=back

=head2 Digest::SHA - Perl extension for SHA-1/224/256/384/512

=over 4

=item SYNOPSIS

=item SYNOPSIS (HMAC-SHA)

=item ABSTRACT

=item DESCRIPTION

=item NIST STATEMENT ON SHA-1

=item PADDING OF BASE64 DIGESTS

=item EXPORT

=item EXPORTABLE FUNCTIONS

B<sha1($data, ...)>, B<sha224($data, ...)>, B<sha256($data, ...)>,
B<sha384($data, ...)>, B<sha512($data, ...)>, B<sha1_hex($data, ...)>,
B<sha224_hex($data, ...)>, B<sha256_hex($data, ...)>, B<sha384_hex($data,
...)>, B<sha512_hex($data, ...)>, B<sha1_base64($data, ...)>,
B<sha224_base64($data, ...)>, B<sha256_base64($data, ...)>,
B<sha384_base64($data, ...)>, B<sha512_base64($data, ...)>, B<new($alg)>,
B<reset($alg)>, B<hashsize>, B<algorithm>, B<clone>, B<add($data, ...)>,
B<add_bits($data, $nbits)>, B<add_bits($bits)>, B<addfile(*FILE)>,
B<addfile($filename [, $mode])>, B<dump($filename)>, B<load($filename)>,
B<digest>, B<hexdigest>, B<b64digest>, B<hmac_sha1($data, $key)>,
B<hmac_sha224($data, $key)>, B<hmac_sha256($data, $key)>,
B<hmac_sha384($data, $key)>, B<hmac_sha512($data, $key)>,
B<hmac_sha1_hex($data, $key)>, B<hmac_sha224_hex($data, $key)>,
B<hmac_sha256_hex($data, $key)>, B<hmac_sha384_hex($data, $key)>,
B<hmac_sha512_hex($data, $key)>, B<hmac_sha1_base64($data, $key)>,
B<hmac_sha224_base64($data, $key)>, B<hmac_sha256_base64($data, $key)>,
B<hmac_sha384_base64($data, $key)>, B<hmac_sha512_base64($data, $key)>

=item SEE ALSO

=item AUTHOR

=item ACKNOWLEDGMENTS

=item COPYRIGHT AND LICENSE

=back

=head2 Digest::base - Digest base class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Digest::file - Calculate digests of files

=over 4

=item SYNOPSIS

=item DESCRIPTION

digest_file( $file, $algorithm, [$arg,...] ), digest_file_hex( $file,
$algorithm, [$arg,...] ), digest_file_base64( $file, $algorithm, [$arg,...]
)

=item SEE ALSO

=back

=head2 DirHandle - supply object methods for directory handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=back

=head2 Dumpvalue - provides screen dump of Perl data.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Creation

C<arrayDepth>, C<hashDepth>, C<compactDump>, C<veryCompact>, C<globPrint>,
C<dumpDBFiles>, C<dumpPackages>, C<dumpReused>, C<tick>, C<quoteHighBit>,
C<printUndef>, C<usageOnly>, unctrl, subdump, bareStringify, quoteHighBit,
stopDbSignal

=item Methods

dumpValue, dumpValues, stringify, dumpvars, set_quote, set_unctrl,
compactDump, veryCompact, set, get

=back

=back

=head2 DynaLoader - Dynamically load C libraries into Perl code

=over 4

=item SYNOPSIS

=item DESCRIPTION

@@dl_library_path, @@dl_resolve_using, @@dl_require_symbols, @@dl_librefs,
@@dl_modules, @@dl_shared_objects, dl_error(), $dl_debug, dl_findfile(),
dl_expandspec(), dl_load_file(), dl_unload_file(), dl_load_flags(),
dl_find_symbol(), dl_find_symbol_anywhere(), dl_undef_symbols(),
dl_install_xsub(), bootstrap()

=item AUTHOR

=back

=head2 DynaLoader::XSLoader, XSLoader - Dynamically load C libraries into
Perl code

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Migration from C<DynaLoader>

=item Backward compatible boilerplate

=back

=item Order of initialization: early load()

=over 4

=item The most hairy case

=back

=item DIAGNOSTICS

C<Can't find '%s' symbol in %s>, C<Can't load '%s' for module %s: %s>,
C<Undefined symbols present after loading %s: %s>,
C<XSLoader::load('Your::Module', $Your::Module::VERSION)>

=item LIMITATIONS

=item BUGS

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 Encode - character encodings

=over 4

=item SYNOPSIS

=over 4

=item Table of Contents

=back

=item DESCRIPTION

=over 4

=item TERMINOLOGY

=back

=item PERL ENCODING API

$octets  = encode(ENCODING, $string [, CHECK]), $string = decode(ENCODING,
$octets [, CHECK]), [$obj =] find_encoding(ENCODING), [$length =]
from_to($octets, FROM_ENC, TO_ENC [, CHECK]), $octets =
encode_utf8($string);, $string = decode_utf8($octets [, CHECK]);

=over 4

=item Listing available encodings

=item Defining Aliases

=item Finding IANA Character Set Registry names

=back

=item Encoding via PerlIO

=item Handling Malformed Data

B<NOTE:> Not all encoding support this feature, I<CHECK> =
Encode::FB_DEFAULT ( == 0), I<CHECK> = Encode::FB_CROAK ( == 1), I<CHECK> =
Encode::FB_QUIET, I<CHECK> = Encode::FB_WARN, perlqq mode (I<CHECK> =
Encode::FB_PERLQQ), HTML charref mode (I<CHECK> = Encode::FB_HTMLCREF), XML
charref mode (I<CHECK> = Encode::FB_XMLCREF), The bitmask,
Encode::LEAVE_SRC

=item Defining Encodings

=item The UTF8 flag

Goal #1:, Goal #2:, Goal #3:, Goal #4:

=over 4

=item Messing with Perl's Internals

is_utf8(STRING [, CHECK]), _utf8_on(STRING), _utf8_off(STRING)

=back

=item UTF-8 vs. utf8 vs. UTF8

=item SEE ALSO

=item MAINTAINER

=item COPYRIGHT

=back

=head2 Encode::Alias - alias definitions to encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

As a simple string, As a qr// compiled regular expression, e.g.:, As a code
reference, e.g.:

=over 4

=item Alias overloading

=back

=item SEE ALSO

=back

=head2 Encode::Byte - Single Byte Encodings

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Encode::CJKConstants -- Internally used by Encode::??::ISO_2022_*

=head2 Encode::CN - China-based Chinese Encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item BUGS

=item SEE ALSO

=back

=head2 Encode::CN::HZ -- internally used by Encode::CN

=head2 Encode::Config -- internally used by Encode

=head2 Encode::EBCDIC - EBCDIC Encodings

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Encode::Encoding - Encode Implementation Base Class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods you should implement

-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check]),
-E<gt>cat_decode($destination, $octets, $offset, $terminator [,$check])

=item Other methods defined in Encode::Encodings

-E<gt>name, -E<gt>mime_name, -E<gt>renew, -E<gt>renewed, -E<gt>perlio_ok(),
-E<gt>needs_lines()

=item Example: Encode::ROT13

=back

=item Why the heck Encode API is different?

=over 4

=item Compiled Encodings

=back

=item SEE ALSO

Scheme 1, Scheme 2, Other Schemes

=back

=head2 Encode::GSM0338 -- ESTI GSM 03.38 Encoding

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item BUGS

=item SEE ALSO

=back

=head2 Encode::Guess -- Guesses encoding from data

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

Encode::Guess->set_suspects, Encode::Guess->add_suspects,
Encode::decode("Guess" ...), Encode::Guess->guess($data),
guess_encoding($data, [, I<list of suspects>])

=item CAVEATS

=item TO DO

=item SEE ALSO

=back

=head2 Encode::JP - Japanese Encodings

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item Note on ISO-2022-JP(-1)?

=item BUGS

=item SEE ALSO

=back

=head2 Encode::JP::H2Z -- internally used by Encode::JP::2022_JP*

=head2 Encode::JP::JIS7 -- internally used by Encode::JP

=head2 Encode::KR - Korean Encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=back

=head2 Encode::KR::2022_KR -- internally used by Encode::KR

=head2 Encode::MIME::Header -- MIME 'B' and 'Q' header encoding

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=back

=head2 Encode::MIME::Name, Encode::MIME::NAME -- internally used by Encode

=over 4

=item SEE ALSO

=back

=head2 Encode::PerlIO -- a detailed document on Encode and PerlIO

=over 4

=item Overview

=item How does it work?

=item Line Buffering

=over 4

=item How can I tell whether my encoding fully supports PerlIO ?

=back

=item SEE ALSO

=back

=head2 Encode::Supported -- Encodings supported by Encode

=over 4

=item DESCRIPTION

=over 4

=item Encoding Names

=back

=item Supported Encodings

=over 4

=item Built-in Encodings

=item Encode::Unicode -- other Unicode encodings

=item Encode::Byte -- Extended ASCII

ISO-8859 and corresponding vendor mappings, KOI8 - De Facto Standard for
the Cyrillic world

=item gsm0338 - Hentai Latin 1

gsm0338 support before 2.19

=item CJK: Chinese, Japanese, Korean (Multibyte)

Encode::CN -- Continental China, Encode::JP -- Japan, Encode::KR -- Korea,
Encode::TW -- Taiwan, Encode::HanExtra -- More Chinese via CPAN,
Encode::JIS2K -- JIS X 0213 encodings via CPAN

=item Miscellaneous encodings

Encode::EBCDIC, Encode::Symbols, Encode::MIME::Header, Encode::Guess

=back

=item Unsupported encodings

  ISO-2022-JP-2 [RFC1554], ISO-2022-CN [RFC1922], Various HP-UX encodings,
Cyrillic encoding ISO-IR-111, ISO-8859-8-1 [Hebrew], ISIRI 3342, Iran
System, ISIRI 2900 [Farsi], Thai encoding TCVN, Vietnamese encodings VPS,
Various Mac encodings, (Mac) Indic encodings

=item Encoding vs. Charset -- terminology

=item Encoding Classification (by Anton Tagunov and Dan Kogai)

=over 4

=item Microsoft-related naming mess

KS_C_5601-1987, GB2312, Big5, Shift_JIS

=back

=item Glossary

character repertoire, coded character set (CCS), character encoding scheme
(CES), charset (in MIME context), EUC, ISO-2022, UCS, UCS-2, Unicode, UTF,
UTF-16

=item See Also

=item References

ECMA, ECMA-035 (eq C<ISO-2022>), IANA, Assigned Charset Names by IANA, ISO,
RFC, UC, Unicode Glossary

=over 4

=item Other Notable Sites

czyborra.com, CJK.inf, Jungshik Shin's Hangul FAQ, debian.org:
"Introduction to i18n"

=item Offline sources

C<CJKV Information Processing> by Ken Lunde

=back

=back

=head2 Encode::Symbol - Symbol Encodings

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Encode::TW - Taiwan-based Chinese Encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item BUGS

=item SEE ALSO

=back

=head2 Encode::Unicode -- Various Unicode Transformation Formats

=over 4

=item SYNOPSIS

=item ABSTRACT

L<http://www.unicode.org/glossary/> says:, Quick Reference

=item Size, Endianness, and BOM

=over 4

=item by size

=item by endianness

BOM as integer when fetched in network byte order

=back

=item Surrogate Pairs

=item Error Checking

=item SEE ALSO

=back

=head2 Encode::Unicode::UTF7 -- UTF-7 encoding

=over 4

=item SYNOPSIS

=item ABSTRACT

=item In Practice

=item SEE ALSO

=back

=head2 Encode::lib::Encode::Alias, Encode::Alias - alias definitions to
encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

As a simple string, As a qr// compiled regular expression, e.g.:, As a code
reference, e.g.:

=over 4

=item Alias overloading

=back

=item SEE ALSO

=back

=head2 Encode::lib::Encode::CJKConstants, Encode::CJKConstants.pm --
Internally used by Encode::??::ISO_2022_*

=head2 Encode::lib::Encode::CN::HZ, Encode::CN::HZ -- internally used by
Encode::CN

=head2 Encode::lib::Encode::Config, Encode::Config -- internally used by
Encode

=head2 Encode::lib::Encode::Encoding, Encode::Encoding - Encode
Implementation Base Class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods you should implement

-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check]),
-E<gt>cat_decode($destination, $octets, $offset, $terminator [,$check])

=item Other methods defined in Encode::Encodings

-E<gt>name, -E<gt>mime_name, -E<gt>renew, -E<gt>renewed, -E<gt>perlio_ok(),
-E<gt>needs_lines()

=item Example: Encode::ROT13

=back

=item Why the heck Encode API is different?

=over 4

=item Compiled Encodings

=back

=item SEE ALSO

Scheme 1, Scheme 2, Other Schemes

=back

=head2 Encode::lib::Encode::GSM0338, Encode::GSM0338 -- ESTI GSM 03.38
Encoding

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item BUGS

=item SEE ALSO

=back

=head2 Encode::lib::Encode::Guess, Encode::Guess -- Guesses encoding from
data

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

Encode::Guess->set_suspects, Encode::Guess->add_suspects,
Encode::decode("Guess" ...), Encode::Guess->guess($data),
guess_encoding($data, [, I<list of suspects>])

=item CAVEATS

=item TO DO

=item SEE ALSO

=back

=head2 Encode::lib::Encode::JP::H2Z, Encode::JP::H2Z -- internally used by
Encode::JP::2022_JP*

=head2 Encode::lib::Encode::JP::JIS7, Encode::JP::JIS7 -- internally used
by Encode::JP

=head2 Encode::lib::Encode::KR::2022_KR, Encode::KR::2022_KR -- internally
used by Encode::KR

=head2 Encode::lib::Encode::MIME::Header, Encode::MIME::Header -- MIME 'B'
and 'Q' header encoding

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=back

=head2 Encode::lib::Encode::MIME::Name, Encode::MIME::NAME -- internally
used by Encode

=over 4

=item SEE ALSO

=back

=head2 Encode::lib::Encode::PerlIO, Encode::PerlIO -- a detailed document
on Encode and PerlIO

=over 4

=item Overview

=item How does it work?

=item Line Buffering

=over 4

=item How can I tell whether my encoding fully supports PerlIO ?

=back

=item SEE ALSO

=back

=head2 Encode::lib::Encode::Supported, Encode::Supported -- Encodings
supported by Encode

=over 4

=item DESCRIPTION

=over 4

=item Encoding Names

=back

=item Supported Encodings

=over 4

=item Built-in Encodings

=item Encode::Unicode -- other Unicode encodings

=item Encode::Byte -- Extended ASCII

ISO-8859 and corresponding vendor mappings, KOI8 - De Facto Standard for
the Cyrillic world

=item gsm0338 - Hentai Latin 1

gsm0338 support before 2.19

=item CJK: Chinese, Japanese, Korean (Multibyte)

Encode::CN -- Continental China, Encode::JP -- Japan, Encode::KR -- Korea,
Encode::TW -- Taiwan, Encode::HanExtra -- More Chinese via CPAN,
Encode::JIS2K -- JIS X 0213 encodings via CPAN

=item Miscellaneous encodings

Encode::EBCDIC, Encode::Symbols, Encode::MIME::Header, Encode::Guess

=back

=item Unsupported encodings

  ISO-2022-JP-2 [RFC1554], ISO-2022-CN [RFC1922], Various HP-UX encodings,
Cyrillic encoding ISO-IR-111, ISO-8859-8-1 [Hebrew], ISIRI 3342, Iran
System, ISIRI 2900 [Farsi], Thai encoding TCVN, Vietnamese encodings VPS,
Various Mac encodings, (Mac) Indic encodings

=item Encoding vs. Charset -- terminology

=item Encoding Classification (by Anton Tagunov and Dan Kogai)

=over 4

=item Microsoft-related naming mess

KS_C_5601-1987, GB2312, Big5, Shift_JIS

=back

=item Glossary

character repertoire, coded character set (CCS), character encoding scheme
(CES), charset (in MIME context), EUC, ISO-2022, UCS, UCS-2, Unicode, UTF,
UTF-16

=item See Also

=item References

ECMA, ECMA-035 (eq C<ISO-2022>), IANA, Assigned Charset Names by IANA, ISO,
RFC, UC, Unicode Glossary

=over 4

=item Other Notable Sites

czyborra.com, CJK.inf, Jungshik Shin's Hangul FAQ, debian.org:
"Introduction to i18n"

=item Offline sources

C<CJKV Information Processing> by Ken Lunde

=back

=back

=head2 Encode::lib::Encode::Unicode::UTF7, Encode::Unicode::UTF7 -- UTF-7
encoding

=over 4

=item SYNOPSIS

=item ABSTRACT

=item In Practice

=item SEE ALSO

=back

=head2 Encode::lib::Encoder, Encode::Encoder -- Object Oriented Encoder

=over 4

=item SYNOPSIS

=item ABSTRACT

=item Description

=over 4

=item Predefined Methods

$e = Encode::Encoder-E<gt>new([$data, $encoding]);, encoder(),
$e-E<gt>data([$data]), $e-E<gt>encoding([$encoding]),
$e-E<gt>bytes([$encoding])

=item Example: base64 transcoder

=item Operator Overloading

=back

=item SEE ALSO

=back

=head2 Encodencoding, encoding - allows you to write your script in
non-ascii or non-utf8

=over 4

=item SYNOPSIS

=item ABSTRACT

=over 4

=item Literal Conversions

=item PerlIO layers for C<STD(IN|OUT)>

=item Implicit upgrading for byte strings

=item Side effects

=item Side effects

=item Side effects

=back

=item FEATURES THAT REQUIRE 5.8.1

"NON-EUC" doublebyte encodings, tr//, DATA pseudo-filehandle

=item USAGE

use encoding [I<ENCNAME>] ;, use encoding I<ENCNAME> [ STDIN =E<gt>
I<ENCNAME_IN> ...] ;, use encoding I<ENCNAME> Filter=E<gt>1;, no encoding;

=item The Filter Option

=over 4

=item Filter-related changes at Encode version 1.87

=back

=item CAVEATS

=over 4

=item NOT SCOPED

=item DO NOT MIX MULTIPLE ENCODINGS

=item tr/// with ranges

Legend of characters above

=back

=item EXAMPLE - Greekperl

=item KNOWN PROBLEMS

literals in regex that are longer than 127 bytes, EBCDIC, format, Thread
safety

=over 4

=item The Logic of :locale

=back

=item HISTORY

=item SEE ALSO

=back

=head2 Encoder, Encode::Encoder -- Object Oriented Encoder

=over 4

=item SYNOPSIS

=item ABSTRACT

=item Description

=over 4

=item Predefined Methods

$e = Encode::Encoder-E<gt>new([$data, $encoding]);, encoder(),
$e-E<gt>data([$data]), $e-E<gt>encoding([$encoding]),
$e-E<gt>bytes([$encoding])

=item Example: base64 transcoder

=item Operator Overloading

=back

=item SEE ALSO

=back

=head2 English - use nice English (or awk) names for ugly punctuation
variables

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item PERFORMANCE

=back

=head2 Env - perl module that imports environment variables as scalars or
arrays

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item LIMITATIONS

=item AUTHOR

=back

=head2 Errno - System errno constants

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEATS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Exporter - Implements default import method for modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item How to Export

=item Selecting What To Export

=item How to Import

C<use ModuleName;>, C<use ModuleName ();>, C<use ModuleName qw(...);>

=back

=item Advanced features

=over 4

=item Specialised Import Lists

=item Exporting without using Exporter's import method

=item Exporting without inheriting from Exporter

=item Module Version Checking

=item Managing Unknown Symbols

=item Tag Handling Utility Functions

=item Generating combined tags

=item C<AUTOLOAD>ed Constants

=back

=item Good Practices

=over 4

=item Declaring C<@@EXPORT_OK> and Friends

=item Playing Safe

=item What not to Export

=back

=item SEE ALSO

=item LICENSE

=back

=head2 Exporter::Heavy - Exporter guts

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::CBuilder - Compile and link C code for Perl modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new, have_compiler, compile, C<object_file>, C<include_dirs>,
C<extra_compiler_flags>, link, lib_file, module_name, extra_linker_flags,
link_executable, exe_file, object_file, lib_file, exe_file, prelink,
need_prelink, extra_link_args_after_prelink

=item TO DO

=item HISTORY

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 ExtUtils::CBuilder::Platform::Windows - Builder class for Windows
platforms

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::Command - utilities to replace common UNIX commands in
Makefiles etc.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item FUNCTIONS

=back

=back

cat

eqtime

rm_rf

rm_f

touch

mv

cp

chmod

mkpath

test_f

test_d

dos2unix

=over 4

=item SEE ALSO

=item AUTHOR

=back

=head2 ExtUtils::Command::MM - Commands for the MM's to use in Makefiles

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<test_harness>

=back

B<pod2man>

B<warn_if_old_packlist>

B<perllocal_install>

B<uninstall>

=head2 ExtUtils::Constant - generate XS code to import C header constants

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

IV, UV, NV, PV, PVN, SV, YES, NO, UNDEF

=item FUNCTIONS

=back

constant_types

XS_constant PACKAGE, TYPES, SUBNAME, C_SUBNAME

autoload PACKAGE, VERSION, AUTOLOADER

WriteMakefileSnippet

WriteConstants ATTRIBUTE =E<gt> VALUE [, ...], NAME, DEFAULT_TYPE,
BREAKOUT_AT, NAMES, C_FH, C_FILE, XS_FH, XS_FILE, SUBNAME, C_SUBNAME

=over 4

=item AUTHOR

=back

=head2 ExtUtils::Constant::Base - base class for ExtUtils::Constant objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=back

header

memEQ_clause args_hashref

dump_names arg_hashref, ITEM..

assign arg_hashref, VALUE..

return_clause arg_hashref, ITEM

switch_clause arg_hashref, NAMELEN, ITEMHASH, ITEM..

params WHAT

dogfood arg_hashref, ITEM..

normalise_items args, default_type, seen_types, seen_items, ITEM..

C_constant arg_hashref, ITEM.., name, type, value, macro, default, pre,
post, def_pre, def_post, utf8, weight

=over 4

=item BUGS

=item AUTHOR

=back

=head2 ExtUtils::Constant::Utils - helper functions for ExtUtils::Constant

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

C_stringify NAME

=back

perl_stringify NAME

=over 4

=item AUTHOR

=back

=head2 ExtUtils::Constant::XS, ExtUtils::Constant::Base - base class for
ExtUtils::Constant objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item AUTHOR

=back

=head2 ExtUtils::Embed - Utilities for embedding Perl in C/C++ applications

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item @@EXPORT

=item FUNCTIONS

xsinit(), Examples, ldopts(), Examples, perl_inc(), ccflags(), ccdlflags(),
ccopts(), xsi_header(), xsi_protos(@@modules), xsi_body(@@modules)

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=back

=head2 ExtUtils::Install - install files from here to there

=over 4

=item SYNOPSIS

=item DESCRIPTION

_chmod($$;$), _warnonce(@@), _choke(@@)

=back

_move_file_at_boot( $file, $target, $moan  )

_unlink_or_rename( $file, $tryhard, $installing )

=over 4

=item Functions

B<install>

=back

_get_install_skip

_have_write_access

_can_write_dir(C<$dir>)

_mkpath($dir,$show,$mode,$verbose,$fake)

_copy($from,$to,$verbose,$fake)

_chdir($from)

_do_cleanup

install_rooted_file( $file ), install_rooted_dir( $dir )

forceunlink( $file, $tryhard )

directory_not_empty( $dir )

B<install_default> I<DISCOURAGED>

B<uninstall>

inc_uninstall($filepath,$libdir,$verbose,$nonono,$ignore)

run_filter($cmd,$src,$dest)

B<pm_to_blib>

_autosplit

_invokant

=over 4

=item ENVIRONMENT

B<PERL_INSTALL_ROOT>, B<EU_INSTALL_IGNORE_SKIP>,
B<EU_INSTALL_SITE_SKIPFILE>

=item AUTHOR

=item LICENSE

=back

=head2 ExtUtils::Installed - Inventory management of installed modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=item FUNCTIONS

new(), modules(), files(), directories(), directory_tree(), validate(),
packlist(), version()

=item EXAMPLE

=item AUTHOR

=back

=head2 ExtUtils::Liblist - determine libraries to use and how to use them

=over 4

=item SYNOPSIS

=item DESCRIPTION

For static extensions, For dynamic extensions at build/link time, For
dynamic extensions at load time

=over 4

=item EXTRALIBS

=item LDLOADLIBS and LD_RUN_PATH

=item BSLOADLIBS

=back

=item PORTABILITY

=over 4

=item VMS implementation

=item Win32 implementation

=back

=item SEE ALSO

=back

=head2 ExtUtils::MM - OS adjusted ExtUtils::MakeMaker subclass

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MM_AIX - AIX specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

=back

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_Any - Platform-agnostic MM methods

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Cross-platform helper methods

=back

=back

=over 4

=item Targets

=back

=over 4

=item Init methods

=back

=over 4

=item Tools

=back

=over 4

=item File::Spec wrappers

=back

=over 4

=item Misc

=back

=over 4

=item AUTHOR

=back

=head2 ExtUtils::MM_BeOS - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

os_flavor

init_linker

=head2 ExtUtils::MM_Cygwin - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

os_flavor

=back

cflags

replace_manpage_separator

init_linker

=head2 ExtUtils::MM_DOS - DOS specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

os_flavor

=back

=back

B<replace_manpage_separator>

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_MacOS - once produced Makefiles for MacOS Classic

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MM_NW5 - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

os_flavor

init_platform, platform_constants

const_cccmd

static_lib

dynamic_lib

=head2 ExtUtils::MM_OS2 - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

init_dist

=back

init_linker

os_flavor

=head2 ExtUtils::MM_QNX - QNX specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

=back

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_UWIN - U/WIN specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

os_flavor

=back

=back

B<replace_manpage_separator>

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=back

=over 4

=item Methods

os_flavor

=back

c_o (o)

cflags (o)

const_cccmd (o)

const_config (o)

const_loadlibs (o)

constants (o)

depend (o)

init_DEST

init_dist

dist (o)

dist_basics (o)

dist_ci (o)

dist_core (o)

B<dist_target>

B<tardist_target>

B<zipdist_target>

B<tarfile_target>

zipfile_target

uutardist_target

shdist_target

dlsyms (o)

dynamic_bs (o)

dynamic_lib (o)

exescan

extliblist

find_perl

fixin

force (o)

guess_name

has_link_code

init_dirscan

init_MANPODS

init_MAN1PODS

init_MAN3PODS

init_PM

init_DIRFILESEP

init_main

init_others

init_linker

init_lib2arch

init_PERL

init_platform, platform_constants

init_PERM

init_xs

install (o)

installbin (o)

linkext (o)

lsdir

macro (o)

makeaperl (o)

makefile (o)

maybe_command

needs_linking (o)

parse_abstract

parse_version

pasthru (o)

perl_script

perldepend (o)

perm_rw (o)

perm_rwx (o)

pm_to_blib

post_constants (o)

post_initialize (o)

postamble (o)

ppd

prefixify

processPL (o)

quote_paren

replace_manpage_separator

cd

oneliner

quote_literal

escape_newlines

max_exec_len

static (o)

static_lib (o)

staticmake (o)

subdir_x (o)

subdirs (o)

test (o)

test_via_harness (override)

test_via_script (override)

tools_other (o)

tool_xsubpp (o)

all_target

top_targets (o)

writedoc

xs_c (o)

xs_cpp (o)

xs_o (o)

=over 4

=item SEE ALSO

=back

=head2 ExtUtils::MM_VMS - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods always loaded

wraplist

=back

=back

=over 4

=item Methods

guess_name (override)

=back

find_perl (override)

maybe_command (override)

pasthru (override)

pm_to_blib (override)

perl_script (override)

replace_manpage_separator

init_DEST

init_DIRFILESEP

init_main (override)

init_others (override)

init_platform (override)

platform_constants

init_VERSION (override)

constants (override)

special_targets

cflags (override)

const_cccmd (override)

tools_other (override)

init_dist (override)

c_o (override)

xs_c (override)

xs_o (override)

dlsyms (override)

dynamic_lib (override)

static_lib (override)

extra_clean_files

zipfile_target, tarfile_target, shdist_target

install (override)

perldepend (override)

makeaperl (override)

maketext_filter (override)

prefixify (override)

cd

oneliner

B<echo>

quote_literal

escape_newlines

max_exec_len

init_linker

eliminate_macros

fixpath

os_flavor

=over 4

=item AUTHOR

=back

=head2 ExtUtils::MM_VOS - VOS specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

=back

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_Win32 - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item Overridden methods

B<dlsyms>

=back

replace_manpage_separator

B<maybe_command>

B<init_DIRFILESEP>

B<init_others>

init_platform, platform_constants

special_targets

static_lib

dynamic_lib

extra_clean_files

init_linker

perl_script

xs_o

pasthru

oneliner

cd

max_exec_len

os_flavor

cflags

=head2 ExtUtils::MM_Win95 - method to customize MakeMaker for Win9X

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

xs_c

=back

=back

xs_cpp

xs_o

max_exec_len

os_flavor

=over 4

=item AUTHOR

=back

=head2 ExtUtils::MY - ExtUtils::MakeMaker subclass for customization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MakeMaker - Create a module Makefile

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item How To Write A Makefile.PL

=item Default Makefile Behaviour

=item make test

=item make testdb

=item make install

=item INSTALL_BASE

=item PREFIX and LIB attribute

=item AFS users

=item Static Linking of a new Perl Binary

=item Determination of Perl Library and Installation Locations

=item Which architecture dependent directory?

=item Using Attributes and Parameters

ABSTRACT, ABSTRACT_FROM, AUTHOR, BINARY_LOCATION, C, CCFLAGS, CONFIG,
CONFIGURE, DEFINE, DESTDIR, DIR, DISTNAME, DISTVNAME, DL_FUNCS, DL_VARS,
EXCLUDE_EXT, EXE_FILES, FIRST_MAKEFILE, FULLPERL, FULLPERLRUN,
FULLPERLRUNINST, FUNCLIST, H, IMPORTS, INC, INCLUDE_EXT, INSTALLARCHLIB,
INSTALLBIN, INSTALLDIRS, INSTALLMAN1DIR, INSTALLMAN3DIR, INSTALLPRIVLIB,
INSTALLSCRIPT, INSTALLSITEARCH, INSTALLSITEBIN, INSTALLSITELIB,
INSTALLSITEMAN1DIR, INSTALLSITEMAN3DIR, INSTALLSITESCRIPT,
INSTALLVENDORARCH, INSTALLVENDORBIN, INSTALLVENDORLIB,
INSTALLVENDORMAN1DIR, INSTALLVENDORMAN3DIR, INSTALLVENDORSCRIPT,
INST_ARCHLIB, INST_BIN, INST_LIB, INST_MAN1DIR, INST_MAN3DIR, INST_SCRIPT,
LD, LDDLFLAGS, LDFROM, LIB, LIBPERL_A, LIBS, LICENSE, LINKTYPE, MAKE,
MAKEAPERL, MAKEFILE_OLD, MAN1PODS, MAN3PODS, MAP_TARGET, MYEXTLIB, NAME,
NEEDS_LINKING, NOECHO, NORECURS, NO_META, NO_VC, OBJECT, OPTIMIZE, PERL,
PERL_CORE, PERLMAINCC, PERL_ARCHLIB, PERL_LIB, PERL_MALLOC_OK, PERLPREFIX,
PERLRUN, PERLRUNINST, PERL_SRC, PERM_RW, PERM_RWX, PL_FILES, PM, PMLIBDIRS,
PM_FILTER, POLLUTE, PPM_INSTALL_EXEC, PPM_INSTALL_SCRIPT, PREFIX,
PREREQ_FATAL, PREREQ_PM, PREREQ_PRINT, PRINT_PREREQ, SITEPREFIX, SIGN,
SKIP, TYPEMAPS, VENDORPREFIX, VERBINST, VERSION, VERSION_FROM, VERSION_SYM,
XS, XSOPT, XSPROTOARG, XS_VERSION

=item Additional lowercase attributes

clean, depend, dist, dynamic_lib, linkext, macro, postamble, realclean,
test, tool_autosplit

=item Overriding MakeMaker Methods

=item The End Of Cargo Cult Programming

C<< MAN3PODS => ' ' >>

=item Hintsfile support

=item Distribution Support

   make distcheck,    make skipcheck,	 make distclean,    make manifest, 
  make distdir,   make disttest,    make tardist,    make dist,    make
uutardist,    make shdist,    make zipdist,    make ci

=item Module Meta-Data

=item Disabling an extension

=item Other Handy Functions

prompt

=back

=item ENVIRONMENT

PERL_MM_OPT, PERL_MM_USE_DEFAULT, PERL_CORE

=item SEE ALSO

=item AUTHORS

=item LICENSE

=back

=head2 ExtUtils::MakeMaker::Config - Wrapper around Config.pm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MakeMaker::FAQ - Frequently Asked Questions About
MakeMaker

=over 4

=item DESCRIPTION

=over 4

=item Module Installation

How do I install a module into my home directory?, How do I get MakeMaker
and Module::Build to install to the same place?, How do I keep from
installing man pages?, How do I use a module without installing it?, PREFIX
vs INSTALL_BASE from Module::Build::Cookbook

=item Philosophy and History

Why not just use <insert other build config tool here>?, What is
Module::Build and how does it relate to MakeMaker?, pure perl.	no make, no
shell commands, easier to customize, cleaner internals, less cruft

=item Module Writing

How do I keep my $VERSION up to date without resetting it manually?, What's
this F<META.yml> thing and how did it get in my F<MANIFEST>?!, How do I
delete everything not in my F<MANIFEST>?

=item XS

How to I prevent "object version X.XX does not match bootstrap parameter
Y.YY" errors?, How do I make two or more XS files coexist in the same
directory?

=back

=item PATCHING

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MakeMaker::Tutorial - Writing a module with MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The Mantra

=item The Layout

Makefile.PL, MANIFEST, lib/, t/, Changes, README, INSTALL, MANIFEST.SKIP,
bin/

=back

=item SEE ALSO

=back

=head2 ExtUtils::MakeMaker::bytes - Version-agnostic bytes.pm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MakeMaker::vmsish - Platform-agnostic vmsish.pm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::Manifest - utilities to write and check a MANIFEST file

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Functions

mkmanifest

=back

=back

manifind

manicheck

filecheck

fullcheck

skipcheck

maniread

manicopy

maniadd

=over 4

=item MANIFEST

=item MANIFEST.SKIP

#!include_default, #!include /Path/to/another/manifest.skip

=item EXPORT_OK

=item GLOBAL VARIABLES

=back

=over 4

=item DIAGNOSTICS

C<Not in MANIFEST:> I<file>, C<Skipping> I<file>, C<No such file:> I<file>,
C<MANIFEST:> I<$!>, C<Added to MANIFEST:> I<file>

=item ENVIRONMENT

B<PERL_MM_MANIFEST_DEBUG>

=item SEE ALSO

=item AUTHOR

=back

=head2 ExtUtils::Miniperl, writemain - write the C code for perlmain.c

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=back

=head2 ExtUtils::Mkbootstrap - make a bootstrap file for use by DynaLoader

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::Mksymlists - write linker options files for dynamic
extension

=over 4

=item SYNOPSIS

=item DESCRIPTION

DLBASE, DL_FUNCS, DL_VARS, FILE, FUNCLIST, IMPORTS, NAME

=item AUTHOR

=item REVISION

mkfh()

=back

__find_relocations

=head2 ExtUtils::Packlist - manage .packlist files

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=item FUNCTIONS

new(), read(), write(), validate(), packlist_file()

=item EXAMPLE

=item AUTHOR

=back

=head2 ExtUtils::ParseXS - converts Perl XS code into C code

=over 4

=item SYNOPSIS

=item EXPORT

=item FUNCTIONS

process_xs(), B<C++>, B<hiertype>, B<except>, B<typemap>, B<prototypes>,
B<versioncheck>, B<linenumbers>, B<optimize>, B<inout>, B<argtypes>, B<s>,
errors()

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 ExtUtils::testlib - add blib/* directories to @@INC

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 Fatal - replace functions with equivalents which succeed or die

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item AUTHOR

=back

=head2 Fcntl - load the C Fcntl.h defines

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item EXPORTED SYMBOLS

=back

=head2 File::Basename - Parse file paths into directory, filename and
suffix.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

C<fileparse> X<fileparse>

C<basename> X<basename> X<filename>

C<dirname> X<dirname>

C<fileparse_set_fstype> X<filesystem>

=over 4

=item SEE ALSO

=back

=head2 File::CheckTree - run many filetest checks on a tree

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item HISTORY

=back

=head2 File::Compare - Compare files or filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item RETURN

=item AUTHOR

=back

=head2 File::Copy - Copy files or filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

copy X<copy> X<cp>, move X<move> X<mv> X<rename>, syscopy X<syscopy>,
rmscopy($from,$to[,$date_flag]) X<rmscopy>

=item RETURN

=item NOTES

=item AUTHOR

=back

=head2 File::DosGlob - DOS like globbing and then some

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item EXPORTS (by request only)

=item BUGS

=item AUTHOR

=item HISTORY

=item SEE ALSO

=back

=head2 File::Fetch - A generic file fetching mechanism

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item ACCESSORS

$ff->uri, $ff->scheme, $ff->host, $ff->vol, $ff->share, $ff->path,
$ff->file

=back

$ff->output_file

=over 4

=item METHODS

=over 4

=item $ff = File::Fetch->new( uri => 'http://some.where.com/dir/file.txt'
);

=back

=back

=over 4

=item $ff->fetch( [to => /my/output/dir/] )

=back

=over 4

=item $ff->error([BOOL])

=back

=over 4

=item HOW IT WORKS

=item GLOBAL VARIABLES

=over 4

=item $File::Fetch::FROM_EMAIL

=item $File::Fetch::USER_AGENT

=item $File::Fetch::FTP_PASSIVE

=item $File::Fetch::TIMEOUT

=item $File::Fetch::WARN

=item $File::Fetch::DEBUG

=item $File::Fetch::BLACKLIST

=item $File::Fetch::METHOD_FAIL

=back

=item MAPPING

=item FREQUENTLY ASKED QUESTIONS

=over 4

=item So how do I use a proxy with File::Fetch?

=item I used 'lynx' to fetch a file, but its contents is all wrong!

=item Files I'm trying to fetch have reserved characters or non-ASCII
characters in them. What do I do?

=back

=item TODO

Implement $PREFER_BIN

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 File::Find - Traverse a directory tree.

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<find>, B<finddepth>

=over 4

=item %options

C<wanted>, C<bydepth>, C<preprocess>, C<postprocess>, C<follow>,
C<follow_fast>, C<follow_skip>, C<dangling_symlinks>, C<no_chdir>,
C<untaint>, C<untaint_pattern>, C<untaint_skip>

=item The wanted function

C<$File::Find::dir> is the current directory name,, C<$_> is the current
filename within that directory, C<$File::Find::name> is the complete
pathname to the file

=back

=item WARNINGS

=item CAVEAT

$dont_use_nlink, symlinks

=item NOTES

=item BUGS AND CAVEATS

=item HISTORY

=back

=head2 File::Glob - Perl extension for BSD glob routine

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item META CHARACTERS

=item POSIX FLAGS

C<GLOB_ERR>, C<GLOB_LIMIT>, C<GLOB_MARK>, C<GLOB_NOCASE>, C<GLOB_NOCHECK>,
C<GLOB_NOSORT>, C<GLOB_BRACE>, C<GLOB_NOMAGIC>, C<GLOB_QUOTE>,
C<GLOB_TILDE>, C<GLOB_CSH>, C<GLOB_ALPHASORT>

=back

=item DIAGNOSTICS

C<GLOB_NOSPACE>, C<GLOB_ABEND>

=item NOTES

=item SEE ALSO

=item AUTHOR

=back

=head2 File::GlobMapper - Extend File Glob to Allow Input and Output Files

=over 4

=item SYNOPSIS

=item DESCRIPTION

This code is a work in progress, There are known bugs, The interface
defined here is tentative, There are portability issues, Do not use in
production code, Consider yourself warned!

=over 4

=item Behind The Scenes

=item Limitations

=item Input File Glob

B<~>, B<~user>, B<.>, B<*>, B<?>, B<\>,  B<[]>,  B<{,}>,  B<()>

=item Output File Glob

"*", #1

=item Returned Data

=back

=item EXAMPLES

=over 4

=item A Rename script

=item A few example globmaps

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 File::Path - Create or remove directory trees

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item FUNCTIONS

mode, verbose, error, verbose, safe, keep_root, result, error

=item TRADITIONAL INTERFACE

=item ERROR HANDLING

=item NOTES

=back

=item DIAGNOSTICS

mkdir [path]: [errmsg] (SEVERE), No root path(s) specified, No such file or
directory, cannot fetch initial working directory: [errmsg], cannot stat
initial working directory: [errmsg], cannot chdir to [dir]: [errmsg],
directory [dir] changed before chdir, expected dev=[n] inode=[n], actual
dev=[n] ino=[n], aborting. (FATAL), cannot make directory [dir]
read+writeable: [errmsg], cannot read [dir]: [errmsg], cannot reset chmod
[dir]: [errmsg], cannot chdir to [parent-dir] from [child-dir]: [errmsg],
aborting. (FATAL), cannot stat prior working directory [dir]: [errmsg],
aborting. (FATAL), previous directory [parent-dir] changed before entering
[child-dir], expected dev=[n] inode=[n], actual dev=[n] ino=[n], aborting.
(FATAL), cannot make directory [dir] writeable: [errmsg], cannot remove
directory [dir]: [errmsg], cannot restore permissions of [dir] to [0nnn]:
[errmsg], cannot make file [file] writeable: [errmsg], cannot unlink file
[file]: [errmsg], cannot restore permissions of [file] to [0nnn]: [errmsg]

=item SEE ALSO

=item BUGS

=item ACKNOWLEDGEMENTS

=item AUTHORS

=item COPYRIGHT

=item LICENSE

=back

=head2 File::Spec - portably perform operations on file names

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

canonpath X<canonpath>, catdir X<catdir>, catfile X<catfile>, curdir
X<curdir>, devnull X<devnull>, rootdir X<rootdir>, tmpdir X<tmpdir>, updir
X<updir>, no_upwards, case_tolerant, file_name_is_absolute, path X<path>,
join X<join, path>, splitpath X<splitpath> X<split, path>, splitdir
X<splitdir> X<split, dir>, catpath(), abs2rel X<abs2rel> X<absolute, path>
X<relative, path>, rel2abs() X<rel2abs> X<absolute, path> X<relative, path>

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 File::Spec::Cygwin - methods for Cygwin file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

canonpath

file_name_is_absolute

tmpdir (override)

case_tolerant

=over 4

=item COPYRIGHT

=back

=head2 File::Spec::Epoc - methods for Epoc file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

canonpath()

=over 4

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::Functions - portably perform operations on file names

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Exports

=back

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::Mac - File::Spec for Mac OS (Classic)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

canonpath

=back

catdir()

catfile

curdir

devnull

rootdir

tmpdir

updir

file_name_is_absolute

path

splitpath

splitdir

catpath

abs2rel

rel2abs

=over 4

=item AUTHORS

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::OS2 - methods for OS/2 file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

tmpdir, splitpath

=item COPYRIGHT

=back

=head2 File::Spec::Unix - File::Spec for Unix, base for other File::Spec
modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

canonpath()

=back

catdir()

catfile

curdir

devnull

rootdir

tmpdir

updir

no_upwards

case_tolerant

file_name_is_absolute

path

join

splitpath

splitdir

catpath()

abs2rel

rel2abs()

=over 4

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::VMS - methods for VMS file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

canonpath (override)

=back

catdir (override)

catfile (override)

curdir (override)

devnull (override)

rootdir (override)

tmpdir (override)

updir (override)

case_tolerant (override)

path (override)

file_name_is_absolute (override)

splitpath (override)

splitdir (override)

catpath (override)

abs2rel (override)

rel2abs (override)

=over 4

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::Win32 - methods for Win32 file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

devnull

=back

tmpdir

case_tolerant

file_name_is_absolute

catfile

canonpath

splitpath

splitdir

catpath

=over 4

=item Note For File::Spec::Win32 Maintainers

=back

=over 4

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Temp - return name and handle of a temporary file safely

=over 4

=item PORTABILITY

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item OBJECT-ORIENTED INTERFACE

B<new>

=back

B<filename>

B<unlink_on_destroy>

B<DESTROY>

=over 4

=item FUNCTIONS

B<tempfile>

=back

B<tempdir>

=over 4

=item MKTEMP FUNCTIONS

B<mkstemp>

=back

B<mkstemps>

B<mkdtemp>

B<mktemp>

=over 4

=item POSIX FUNCTIONS

B<tmpnam>

=back

B<tmpfile>

=over 4

=item ADDITIONAL FUNCTIONS

B<tempnam>

=back

=over 4

=item UTILITY FUNCTIONS

B<unlink0>

=back

B<cmpstat>

B<unlink1>

B<cleanup>

=over 4

=item PACKAGE VARIABLES

B<safe_level>, STANDARD, MEDIUM, HIGH

=back

TopSystemUID

B<$KEEP_ALL>, B<$DEBUG>

=over 4

=item WARNING

=over 4

=item Temporary files and NFS

=item Forking

=item BINMODE

=back

=item HISTORY

=item SEE ALSO

=item AUTHOR

=back

=head2 File::stat - by-name interface to Perl's built-in stat() functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item NOTE

=item AUTHOR

=back

=head2 FileCache - keep more files open than the system permits

=over 4

=item SYNOPSIS

=item DESCRIPTION

cacheout EXPR, cacheout MODE, EXPR

=item CAVEATS

=item BUGS

=back

=head2 FileHandle - supply object methods for filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

$fh->print, $fh->printf, $fh->getline, $fh->getlines

=item SEE ALSO

=back

=head2 Filter::Simple - Simplified source filtering

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The Problem

=item A Solution

=item Disabling or changing <no> behaviour

=item All-in-one interface

=item Filtering only specific components of source code

C<"code">, C<"code_no_comments">, C<"executable">,
C<"executable_no_comments">, C<"quotelike">, C<"string">, C<"regex">,
C<"all">

=item Filtering only the code parts of source code

Most source code ceases to be grammatically correct when it is broken up
into the pieces between string literals and regexes. So the C<'code'>
and C<'code_no_comments'> component filter behave slightly differently
from the other partial filters described in the previous section.

=item Using Filter::Simple with an explicit C<import> subroutine

=item Using Filter::Simple and Exporter together

=item How it works

=back

=item AUTHOR

=item COPYRIGHT

=back

=head2 Filter::Util::Call - Perl Source Filter Utility Module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item B<use Filter::Util::Call>

=item B<import()>

=item B<filter() and anonymous sub>

B<$_>, B<$status>, B<filter_read> and B<filter_read_exact>, B<filter_del>

=back

=item EXAMPLES

=over 4

=item Example 1: A simple filter.

=item Example 2: Using the context

=item Example 3: Using the context within the filter

=item Example 4: Using filter_del

=back

=item Filter::Simple

=item AUTHOR

=item DATE

=back

=head2 FindBin - Locate directory of original perl script

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXPORTABLE VARIABLES

=item KNOWN ISSUES

=item KNOWN BUGS

=item AUTHORS

=item COPYRIGHT

=back

=head2 GDBM_File - Perl5 access to the gdbm library.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AVAILABILITY

=item BUGS

=item SEE ALSO

=back

=head2 Getopt::Long - Extended processing of command line options

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Command Line Options, an Introduction

=item Getting Started with Getopt::Long

=over 4

=item Simple options

=item A little bit less simple options

=item Mixing command line option with other arguments

=item Options with values

=item Options with multiple values

=item Options with hash values

=item User-defined subroutines to handle options

=item Options with multiple names

=item Case and abbreviations

=item Summary of Option Specifications

!, +, s, i, o, f, : I<type> [ I<desttype> ], : I<number> [ I<desttype> ], :
+ [ I<desttype> ]

=back

=item Advanced Possibilities

=over 4

=item Object oriented interface

=item Thread Safety

=item Documentation and help texts

=item Parsing options from an arbitrary array

=item Parsing options from an arbitrary string

=item Storing options values in a hash

=item Bundling

=item The lonesome dash

=item Argument callback

=back

=item Configuring Getopt::Long

default, posix_default, auto_abbrev, getopt_compat, gnu_compat, gnu_getopt,
require_order, permute, bundling (default: disabled), bundling_override
(default: disabled), ignore_case  (default: enabled), ignore_case_always
(default: disabled), auto_version (default:disabled), auto_help
(default:disabled), pass_through (default: disabled), prefix,
prefix_pattern, long_prefix_pattern, debug (default: disabled)

=item Exportable Methods

VersionMessage, C<-message>, C<-msg>, C<-exitval>, C<-output>, HelpMessage

=item Return values and Errors

=item Legacy

=over 4

=item Default destinations

=item Alternative option starters

=item Configuration variables

=back

=item Tips and Techniques

=over 4

=item Pushing multiple values in a hash option

=back

=item Trouble Shooting

=over 4

=item GetOptions does not return a false result when an option is not
supplied

=item GetOptions does not split the command line correctly

=item Undefined subroutine &main::GetOptions called

=item How do I put a "-?" option into a Getopt::Long?

=back

=item AUTHOR

=item COPYRIGHT AND DISCLAIMER

=back

=head2 Getopt::Std, getopt, getopts - Process single-character switches
with switch clustering

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item C<--help> and C<--version>

=back

=head2 Hash::Util - A selection of general-utility hash subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Restricted hashes

B<lock_keys>, B<unlock_keys>

=back

=back

B<lock_keys_plus>

B<lock_value>, B<unlock_value>

B<lock_hash>, B<unlock_hash>

B<lock_hash_recurse>, B<unlock_hash_recurse>

B<hash_unlocked>

B<legal_keys>, B<hidden_keys>, B<all_keys>, B<hash_seed>

B<hv_store>

=over 4

=item Operating on references to hashes.

lock_ref_keys, unlock_ref_keys, lock_ref_keys_plus, lock_ref_value,
unlock_ref_value, lock_hashref, unlock_hashref, lock_hashref_recurse,
unlock_hashref_recurse, hash_ref_unlocked, legal_ref_keys, hidden_ref_keys

=back

=over 4

=item CAVEATS

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 Hash::Util::FieldHash - Support for Inside-Out Classes

=over 4

=item SYNOPSIS

=item FUNCTIONS

id, id_2obj, register, idhash, idhashes, fieldhash, fieldhashes

=item DESCRIPTION

=over 4

=item The Inside-out Technique

=item Problems of Inside-out

=item Solutions

=item More Problems

=item The Generic Object

=item How to use Field Hashes

=item Garbage-Collected Hashes

=back

=item EXAMPLES

C<init()>, C<first()>, C<last()>, C<name()>, C<Name_hash>, C<Name_id>,
C<Name_idhash>, C<Name_id_reg>, C<Name_idhash_reg>, C<Name_fieldhash>

=over 4

=item Example 1

=item Example 2

=back

=item GUTS

=over 4

=item The C<PERL_MAGIC_uvar> interface for hashes

=item Weakrefs call uvar magic

=item How field hashes work

=item Internal function Hash::Util::FieldHash::_fieldhash

=back

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Hash::Util::FieldHash::lib::Hash::Util::FieldHash,
Hash::Util::FieldHash - Support for Inside-Out Classes

=over 4

=item SYNOPSIS

=item FUNCTIONS

id, id_2obj, register, idhash, idhashes, fieldhash, fieldhashes

=item DESCRIPTION

=over 4

=item The Inside-out Technique

=item Problems of Inside-out

=item Solutions

=item More Problems

=item The Generic Object

=item How to use Field Hashes

=item Garbage-Collected Hashes

=back

=item EXAMPLES

C<init()>, C<first()>, C<last()>, C<name()>, C<Name_hash>, C<Name_id>,
C<Name_idhash>, C<Name_id_reg>, C<Name_idhash_reg>, C<Name_fieldhash>

=over 4

=item Example 1

=item Example 2

=back

=item GUTS

=over 4

=item The C<PERL_MAGIC_uvar> interface for hashes

=item Weakrefs call uvar magic

=item How field hashes work

=item Internal function Hash::Util::FieldHash::_fieldhash

=back

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Hash::Utilib::Hash::Util, Hash::Util - A selection of
general-utility hash subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Restricted hashes

B<lock_keys>, B<unlock_keys>

=back

=back

B<lock_keys_plus>

B<lock_value>, B<unlock_value>

B<lock_hash>, B<unlock_hash>

B<lock_hash_recurse>, B<unlock_hash_recurse>

B<hash_unlocked>

B<legal_keys>, B<hidden_keys>, B<all_keys>, B<hash_seed>

B<hv_store>

=over 4

=item Operating on references to hashes.

lock_ref_keys, unlock_ref_keys, lock_ref_keys_plus, lock_ref_value,
unlock_ref_value, lock_hashref, unlock_hashref, lock_hashref_recurse,
unlock_hashref_recurse, hash_ref_unlocked, legal_ref_keys, hidden_ref_keys

=back

=over 4

=item CAVEATS

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 I18N::Collate - compare 8-bit scalar data according to the current
locale

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 I18N::LangTags - functions for dealing with RFC3066-style language
tags

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

the function is_language_tag($lang1)

the function extract_language_tags($whatever)

the function same_language_tag($lang1, $lang2)

the function similarity_language_tag($lang1, $lang2)

the function is_dialect_of($lang1, $lang2)

the function super_languages($lang1)

the function locale2language_tag($locale_identifier)

the function encode_language_tag($lang1)

the function alternate_language_tags($lang1)

the function @@langs = panic_languages(@@accept_languages)

the function implicate_supers( ...languages... ), the function
implicate_supers_strictly( ...languages... )

=over 4

=item ABOUT LOWERCASING

=item ABOUT UNICODE PLAINTEXT LANGUAGE TAGS

=item SEE ALSO

=item COPYRIGHT

=item AUTHOR

=back

=head2 I18N::LangTags::Detect - detect the user's language preferences

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=item ENVIRONMENT

=item SEE ALSO

=item COPYRIGHT

=item AUTHOR

=back

=head2 I18N::LangTags::List -- tags and names for human languages

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item ABOUT LANGUAGE TAGS

=item LIST OF LANGUAGES

{ab} : Abkhazian, {ace} : Achinese, {ach} : Acoli, {ada} : Adangme, {ady} :
Adyghe, {aa} : Afar, {afh} : Afrihili, {af} : Afrikaans, [{afa} :
Afro-Asiatic (Other)], {ak} : Akan, {akk} : Akkadian, {sq} : Albanian,
{ale} : Aleut, [{alg} : Algonquian languages], [{tut} : Altaic (Other)],
{am} : Amharic, {i-ami} : Ami, [{apa} : Apache languages], {ar} : Arabic,
{arc} : Aramaic, {arp} : Arapaho, {arn} : Araucanian, {arw} : Arawak, {hy}
: Armenian, {an} : Aragonese, [{art} : Artificial (Other)], {ast} :
Asturian, {as} : Assamese, [{ath} : Athapascan languages], [{aus} :
Australian languages], [{map} : Austronesian (Other)], {av} : Avaric, {ae}
: Avestan, {awa} : Awadhi, {ay} : Aymara, {az} : Azerbaijani, {ban} :
Balinese, [{bat} : Baltic (Other)], {bal} : Baluchi, {bm} : Bambara, [{bai}
: Bamileke languages], {bad} : Banda, [{bnt} : Bantu (Other)], {bas} :
Basa, {ba} : Bashkir, {eu} : Basque, {btk} : Batak (Indonesia), {bej} :
Beja, {be} : Belarusian, {bem} : Bemba, {bn} : Bengali, [{ber} : Berber
(Other)], {bho} : Bhojpuri, {bh} : Bihari, {bik} : Bikol, {bin} : Bini,
{bi} : Bislama, {bs} : Bosnian, {bra} : Braj, {br} : Breton, {bug} :
Buginese, {bg} : Bulgarian, {i-bnn} : Bunun, {bua} : Buriat, {my} :
Burmese, {cad} : Caddo, {car} : Carib, {ca} : Catalan, [{cau} : Caucasian
(Other)], {ceb} : Cebuano, [{cel} : Celtic (Other)], [{cai} : Central
American Indian (Other)], {chg} : Chagatai, [{cmc} : Chamic languages],
{ch} : Chamorro, {ce} : Chechen, {chr} : Cherokee, {chy} : Cheyenne, {chb}
: Chibcha, {ny} : Chichewa, {zh} : Chinese, {chn} : Chinook Jargon, {chp} :
Chipewyan, {cho} : Choctaw, {cu} : Church Slavic, {chk} : Chuukese, {cv} :
Chuvash, {cop} : Coptic, {kw} : Cornish, {co} : Corsican, {cr} : Cree,
{mus} : Creek, [{cpe} : English-based Creoles and pidgins (Other)], [{cpf}
: French-based Creoles and pidgins (Other)], [{cpp} : Portuguese-based
Creoles and pidgins (Other)], [{crp} : Creoles and pidgins (Other)], {hr} :
Croatian, [{cus} : Cushitic (Other)], {cs} : Czech, {dak} : Dakota, {da} :
Danish, {dar} : Dargwa, {day} : Dayak, {i-default} : Default (Fallthru)
Language, {del} : Delaware, {din} : Dinka, {dv} : Divehi, {doi} : Dogri,
{dgr} : Dogrib, [{dra} : Dravidian (Other)], {dua} : Duala, {nl} : Dutch,
{dum} : Middle Dutch (ca.1050-1350), {dyu} : Dyula, {dz} : Dzongkha, {efi}
: Efik, {egy} : Ancient Egyptian, {eka} : Ekajuk, {elx} : Elamite, {en} :
English, {enm} : Old English (1100-1500), {ang} : Old English
(ca.450-1100), {i-enochian} : Enochian (Artificial), {myv} : Erzya, {eo} :
Esperanto, {et} : Estonian, {ee} : Ewe, {ewo} : Ewondo, {fan} : Fang, {fat}
: Fanti, {fo} : Faroese, {fj} : Fijian, {fi} : Finnish, [{fiu} :
Finno-Ugrian (Other)], {fon} : Fon, {fr} : French, {frm} : Middle French
(ca.1400-1600), {fro} : Old French (842-ca.1400), {fy} : Frisian, {fur} :
Friulian, {ff} : Fulah, {gaa} : Ga, {gd} : Scots Gaelic, {gl} : Gallegan,
{lg} : Ganda, {gay} : Gayo, {gba} : Gbaya, {gez} : Geez, {ka} : Georgian,
{de} : German, {gmh} : Middle High German (ca.1050-1500), {goh} : Old High
German (ca.750-1050), [{gem} : Germanic (Other)], {gil} : Gilbertese, {gon}
: Gondi, {gor} : Gorontalo, {got} : Gothic, {grb} : Grebo, {grc} : Ancient
Greek, {el} : Modern Greek, {gn} : Guarani, {gu} : Gujarati, {gwi} :
Gwich'in, {hai} : Haida, {ht} : Haitian, {ha} : Hausa, {haw} : Hawaiian,
{he} : Hebrew, {hz} : Herero, {hil} : Hiligaynon, {him} : Himachali, {hi} :
Hindi, {ho} : Hiri Motu, {hit} : Hittite, {hmn} : Hmong, {hu} : Hungarian,
{hup} : Hupa, {iba} : Iban, {is} : Icelandic, {io} : Ido, {ig} : Igbo,
{ijo} : Ijo, {ilo} : Iloko, [{inc} : Indic (Other)], [{ine} : Indo-European
(Other)], {id} : Indonesian, {inh} : Ingush, {ia} : Interlingua
(International Auxiliary Language Association), {ie} : Interlingue, {iu} :
Inuktitut, {ik} : Inupiaq, [{ira} : Iranian (Other)], {ga} : Irish, {mga} :
Middle Irish (900-1200), {sga} : Old Irish (to 900), [{iro} : Iroquoian
languages], {it} : Italian, {ja} : Japanese, {jv} : Javanese, {jrb} :
Judeo-Arabic, {jpr} : Judeo-Persian, {kbd} : Kabardian, {kab} : Kabyle,
{kac} : Kachin, {kl} : Kalaallisut, {xal} : Kalmyk, {kam} : Kamba, {kn} :
Kannada, {kr} : Kanuri, {krc} : Karachay-Balkar, {kaa} : Kara-Kalpak, {kar}
: Karen, {ks} : Kashmiri, {csb} : Kashubian, {kaw} : Kawi, {kk} : Kazakh,
{kha} : Khasi, {km} : Khmer, [{khi} : Khoisan (Other)], {kho} : Khotanese,
{ki} : Kikuyu, {kmb} : Kimbundu, {rw} : Kinyarwanda, {ky} : Kirghiz,
{i-klingon} : Klingon, {kv} : Komi, {kg} : Kongo, {kok} : Konkani, {ko} :
Korean, {kos} : Kosraean, {kpe} : Kpelle, {kro} : Kru, {kj} : Kuanyama,
{kum} : Kumyk, {ku} : Kurdish, {kru} : Kurukh, {kut} : Kutenai, {lad} :
Ladino, {lah} : Lahnda, {lam} : Lamba, {lo} : Lao, {la} : Latin, {lv} :
Latvian, {lb} : Letzeburgesch, {lez} : Lezghian, {li} : Limburgish, {ln} :
Lingala, {lt} : Lithuanian, {nds} : Low German, {art-lojban} : Lojban
(Artificial), {loz} : Lozi, {lu} : Luba-Katanga, {lua} : Luba-Lulua, {lui}
: Luiseno, {lun} : Lunda, {luo} : Luo (Kenya and Tanzania), {lus} : Lushai,
{mk} : Macedonian, {mad} : Madurese, {mag} : Magahi, {mai} : Maithili,
{mak} : Makasar, {mg} : Malagasy, {ms} : Malay, {ml} : Malayalam, {mt} :
Maltese, {mnc} : Manchu, {mdr} : Mandar, {man} : Mandingo, {mni} :
Manipuri, [{mno} : Manobo languages], {gv} : Manx, {mi} : Maori, {mr} :
Marathi, {chm} : Mari, {mh} : Marshall, {mwr} : Marwari, {mas} : Masai,
[{myn} : Mayan languages], {men} : Mende, {mic} : Micmac, {min} :
Minangkabau, {i-mingo} : Mingo, [{mis} : Miscellaneous languages], {moh} :
Mohawk, {mdf} : Moksha, {mo} : Moldavian, [{mkh} : Mon-Khmer (Other)],
{lol} : Mongo, {mn} : Mongolian, {mos} : Mossi, [{mul} : Multiple
languages], [{mun} : Munda languages], {nah} : Nahuatl, {nap} : Neapolitan,
{na} : Nauru, {nv} : Navajo, {nd} : North Ndebele, {nr} : South Ndebele,
{ng} : Ndonga, {ne} : Nepali, {new} : Newari, {nia} : Nias, [{nic} :
Niger-Kordofanian (Other)], [{ssa} : Nilo-Saharan (Other)], {niu} : Niuean,
{nog} : Nogai, {non} : Old Norse, [{nai} : North American Indian], {no} :
Norwegian, {nb} : Norwegian Bokmal, {nn} : Norwegian Nynorsk, [{nub} :
Nubian languages], {nym} : Nyamwezi, {nyn} : Nyankole, {nyo} : Nyoro, {nzi}
: Nzima, {oc} : Occitan (post 1500), {oj} : Ojibwa, {or} : Oriya, {om} :
Oromo, {osa} : Osage, {os} : Ossetian; Ossetic, [{oto} : Otomian
languages], {pal} : Pahlavi, {i-pwn} : Paiwan, {pau} : Palauan, {pi} :
Pali, {pam} : Pampanga, {pag} : Pangasinan, {pa} : Panjabi, {pap} :
Papiamento, [{paa} : Papuan (Other)], {fa} : Persian, {peo} : Old Persian
(ca.600-400 B.C.), [{phi} : Philippine (Other)], {phn} : Phoenician, {pon}
: Pohnpeian, {pl} : Polish, {pt} : Portuguese, [{pra} : Prakrit languages],
{pro} : Old Provencal (to 1500), {ps} : Pushto, {qu} : Quechua, {rm} :
Raeto-Romance, {raj} : Rajasthani, {rap} : Rapanui, {rar} : Rarotongan,
[{qaa - qtz} : Reserved for local use.], [{roa} : Romance (Other)], {ro} :
Romanian, {rom} : Romany, {rn} : Rundi, {ru} : Russian, [{sal} : Salishan
languages], {sam} : Samaritan Aramaic, {se} : Northern Sami, {sma} :
Southern Sami, {smn} : Inari Sami, {smj} : Lule Sami, {sms} : Skolt Sami,
[{smi} : Sami languages (Other)], {sm} : Samoan, {sad} : Sandawe, {sg} :
Sango, {sa} : Sanskrit, {sat} : Santali, {sc} : Sardinian, {sas} : Sasak,
{sco} : Scots, {sel} : Selkup, [{sem} : Semitic (Other)], {sr} : Serbian,
{srr} : Serer, {shn} : Shan, {sn} : Shona, {sid} : Sidamo, {sgn-...} : Sign
Languages, {bla} : Siksika, {sd} : Sindhi, {si} : Sinhalese, [{sit} :
Sino-Tibetan (Other)], [{sio} : Siouan languages], {den} : Slave
(Athapascan), [{sla} : Slavic (Other)], {sk} : Slovak, {sl} : Slovenian,
{sog} : Sogdian, {so} : Somali, {son} : Songhai, {snk} : Soninke, {wen} :
Sorbian languages, {nso} : Northern Sotho, {st} : Southern Sotho, [{sai} :
South American Indian (Other)], {es} : Spanish, {suk} : Sukuma, {sux} :
Sumerian, {su} : Sundanese, {sus} : Susu, {sw} : Swahili, {ss} : Swati,
{sv} : Swedish, {syr} : Syriac, {tl} : Tagalog, {ty} : Tahitian, [{tai} :
Tai (Other)], {tg} : Tajik, {tmh} : Tamashek, {ta} : Tamil, {i-tao} : Tao,
{tt} : Tatar, {i-tay} : Tayal, {te} : Telugu, {ter} : Tereno, {tet} :
Tetum, {th} : Thai, {bo} : Tibetan, {tig} : Tigre, {ti} : Tigrinya, {tem} :
Timne, {tiv} : Tiv, {tli} : Tlingit, {tpi} : Tok Pisin, {tkl} : Tokelau,
{tog} : Tonga (Nyasa), {to} : Tonga (Tonga Islands), {tsi} : Tsimshian,
{ts} : Tsonga, {i-tsu} : Tsou, {tn} : Tswana, {tum} : Tumbuka, [{tup} :
Tupi languages], {tr} : Turkish, {ota} : Ottoman Turkish (1500-1928), {crh}
: Crimean Turkish, {tk} : Turkmen, {tvl} : Tuvalu, {tyv} : Tuvinian, {tw} :
Twi, {udm} : Udmurt, {uga} : Ugaritic, {ug} : Uighur, {uk} : Ukrainian,
{umb} : Umbundu, {und} : Undetermined, {ur} : Urdu, {uz} : Uzbek, {vai} :
Vai, {ve} : Venda, {vi} : Vietnamese, {vo} : Volapuk, {vot} : Votic, [{wak}
: Wakashan languages], {wa} : Walloon, {wal} : Walamo, {war} : Waray, {was}
: Washo, {cy} : Welsh, {wo} : Wolof, {x-...} : Unregistered (Semi-Private
Use), {xh} : Xhosa, {sah} : Yakut, {yao} : Yao, {yap} : Yapese, {ii} :
Sichuan Yi, {yi} : Yiddish, {yo} : Yoruba, [{ypk} : Yupik languages], {znd}
: Zande, [{zap} : Zapotec], {zen} : Zenaga, {za} : Zhuang, {zu} : Zulu,
{zun} : Zuni

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMER

=item AUTHOR

=back

=head2 I18N::Langinfo - query locale information

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item EXPORT

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 IO - load various IO modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item DEPRECATED

=back

=head2 IO::Compress::Base - Base Class for IO::Compress modules 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Compress::Deflate - Write RFC 1950 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item deflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Merge => 0|1 >>, -Level, -Strategy, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Compress::Gzip - Write RFC 1952 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item gzip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Merge => 0|1 >>, -Level, -Strategy, C<< Minimal => 0|1 >>,
C<< Comment => $comment >>, C<< Name => $string >>, C<< Time => $number >>,
C<< TextFlag => 0|1 >>, C<< HeaderCRC => 0|1 >>, C<< OS_Code => $value >>,
C<< ExtraField => $data >>, C<< ExtraFlags => $value >>, C<< Strict => 0|1
>>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Compress::RawDeflate - Write RFC 1951 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item rawdeflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Merge => 0|1 >>, -Level, -Strategy, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Compress::Zip - Write zip files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item zip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Name => $string >>, C<< Time => $number >>, C<< ExtAttr =>
$attr >>, C<< exTime => [$atime, $mtime, $ctime] >>, C<< Comment =>
$comment >>, C<< ZipComment => $comment >>, C<< Method => $method >>, C<<
Stream => 0|1 >>, C<< Zip64 => 0|1 >>, C<< TextFlag => 0|1 >>, C<<
ExtraFieldLocal => $data >> =item C<< ExtraFieldCentral => $data >>, C<<
Minimal => 1|0 >>, C<< BlockSize100K => number >>, C<< WorkFactor => number
>>, -Level, -Strategy, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy, :zip_method

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Dir - supply object methods for directory handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, 'IO::Dir', DIRNAME [, OPTIONS ]

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::File - supply object methods for filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile

=item METHODS

open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS ), binmode(
[LAYER] )

=item NOTE

=item SEE ALSO

=item HISTORY

=back

=head2 IO::Handle - supply object methods for I/O handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new (), new_from_fd ( FD, MODE )

=item METHODS

$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint

=item NOTE

=item SEE ALSO

=item BUGS

=item HISTORY

=back

=head2 IO::Pipe - supply object methods for pipes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [READER, WRITER] )

=item METHODS

reader ([ARGS]), writer ([ARGS]), handles ()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Poll - Object interface to system poll call

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Seekable - supply seek based methods for I/O objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

$io->getpos, $io->setpos, $io->seek ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=2 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell

=item SEE ALSO

=item HISTORY

=back

=head2 IO::Select - OO interface to the select system call

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ HANDLES ] )

=item METHODS

add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, EXCEPTION [, TIMEOUT ] )

=item EXAMPLE

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Socket - Object interface to socket communications

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), atmark, connected,
protocol, sockdomain, sockopt(OPT [, VAL]), socktype, timeout([VAL])

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Socket::INET - Object interface for AF_INET domain sockets

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=over 4

=item METHODS

sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Socket::UNIX - Object interface for AF_UNIX domain sockets

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

hostpath(), peerpath()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Uncompress::AnyInflate - Uncompress zlib-based (zip, gzip)
file/buffer

=over 4

=item SYNOPSIS

=item DESCRIPTION

RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip

=item Functional Interface

=over 4

=item anyinflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< RawInflate => 0|1
>>, C<< ParseExtra => 0|1 >> If the gzip FEXTRA header field is present and
this option is set, it will force the module to check that it conforms to
the sub-field structure as defined in RFC 1952

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::AnyUncompress - Uncompress gzip, zip, bzip2 or lzop
file/buffer

=over 4

=item SYNOPSIS

=item DESCRIPTION

RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip, bzip2, lzop, lzf

=item Functional Interface

=over 4

=item anyuncompress $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< RawInflate => 0|1
>>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::Base - Base Class for IO::Uncompress modules 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::Gunzip - Read RFC 1952 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item gunzip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< ParseExtra => 0|1
>> If the gzip FEXTRA header field is present and this option is set, it
will force the module to check that it conforms to the sub-field structure
as defined in RFC 1952

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

Name, Comment

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::Inflate - Read RFC 1950 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item inflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::RawInflate - Read RFC 1951 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item rawinflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::Unzip - Read zip files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item unzip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Zlib - IO:: style interface to L<Compress::Zlib>

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item OBJECT METHODS

open ( FILENAME, MODE ), opened, close, getc, getline, getlines, print (
ARGS... ), read ( BUF, NBYTES, [OFFSET] ), eof, seek ( OFFSET, WHENCE ),
tell, setpos ( POS ), getpos ( POS )

=item USING THE EXTERNAL GZIP

=item CLASS METHODS

has_Compress_Zlib, gzip_external, gzip_used, gzip_read_open,
gzip_write_open

=item DIAGNOSTICS

IO::Zlib::getlines: must be called in list context,
IO::Zlib::gzopen_external: mode '...' is illegal, IO::Zlib::import: '...'
is illegal, IO::Zlib::import: ':gzip_external' requires an argument,
IO::Zlib::import: 'gzip_read_open' requires an argument, IO::Zlib::import:
'gzip_read' '...' is illegal, IO::Zlib::import: 'gzip_write_open' requires
an argument, IO::Zlib::import: 'gzip_write_open' '...' is illegal,
IO::Zlib::import: no Compress::Zlib and no external gzip, IO::Zlib::open:
needs a filename, IO::Zlib::READ: NBYTES must be specified,
IO::Zlib::WRITE: too long LENGTH, IO::Zlib::WRITE: OFFSET is not supported

=item SEE ALSO

=item HISTORY

=item COPYRIGHT

=back

=head2 IO::lib::IO::Dir, IO::Dir - supply object methods for directory
handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, 'IO::Dir', DIRNAME [, OPTIONS ]

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::File, IO::File - supply object methods for filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile

=item METHODS

open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS ), binmode(
[LAYER] )

=item NOTE

=item SEE ALSO

=item HISTORY

=back

=head2 IO::lib::IO::Handle, IO::Handle - supply object methods for I/O
handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new (), new_from_fd ( FD, MODE )

=item METHODS

$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint

=item NOTE

=item SEE ALSO

=item BUGS

=item HISTORY

=back

=head2 IO::lib::IO::Pipe, IO::Pipe - supply object methods for pipes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [READER, WRITER] )

=item METHODS

reader ([ARGS]), writer ([ARGS]), handles ()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Poll, IO::Poll - Object interface to system poll call

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Seekable, IO::Seekable - supply seek based methods for
I/O objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

$io->getpos, $io->setpos, $io->seek ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=2 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell

=item SEE ALSO

=item HISTORY

=back

=head2 IO::lib::IO::Select, IO::Select - OO interface to the select system
call

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ HANDLES ] )

=item METHODS

add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, EXCEPTION [, TIMEOUT ] )

=item EXAMPLE

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Socket, IO::Socket - Object interface to socket
communications

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), atmark, connected,
protocol, sockdomain, sockopt(OPT [, VAL]), socktype, timeout([VAL])

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Socket::INET, IO::Socket::INET - Object interface for
AF_INET domain sockets

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=over 4

=item METHODS

sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Socket::UNIX, IO::Socket::UNIX - Object interface for
AF_UNIX domain sockets

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

hostpath(), peerpath()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO_Compress_Base::lib::File::GlobMapper, File::GlobMapper - Extend
File Glob to Allow Input and Output Files

=over 4

=item SYNOPSIS

=item DESCRIPTION

This code is a work in progress, There are known bugs, The interface
defined here is tentative, There are portability issues, Do not use in
production code, Consider yourself warned!

=over 4

=item Behind The Scenes

=item Limitations

=item Input File Glob

B<~>, B<~user>, B<.>, B<*>, B<?>, B<\>,  B<[]>,  B<{,}>,  B<()>

=item Output File Glob

"*", #1

=item Returned Data

=back

=item EXAMPLES

=over 4

=item A Rename script

=item A few example globmaps

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Base::lib::IO::Compress::Base, IO::Compress::Base - Base
Class for IO::Compress modules 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Base::lib::IO::Uncompress::AnyUncompress,
IO::Uncompress::AnyUncompress - Uncompress gzip, zip, bzip2 or lzop
file/buffer

=over 4

=item SYNOPSIS

=item DESCRIPTION

RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip, bzip2, lzop, lzf

=item Functional Interface

=over 4

=item anyuncompress $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< RawInflate => 0|1
>>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Base::lib::IO::Uncompress::Base, IO::Uncompress::Base -
Base Class for IO::Uncompress modules 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Compress::Deflate, IO::Compress::Deflate -
Write RFC 1950 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item deflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Merge => 0|1 >>, -Level, -Strategy, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Compress::Gzip, IO::Compress::Gzip - Write RFC
1952 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item gzip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Merge => 0|1 >>, -Level, -Strategy, C<< Minimal => 0|1 >>,
C<< Comment => $comment >>, C<< Name => $string >>, C<< Time => $number >>,
C<< TextFlag => 0|1 >>, C<< HeaderCRC => 0|1 >>, C<< OS_Code => $value >>,
C<< ExtraField => $data >>, C<< ExtraFlags => $value >>, C<< Strict => 0|1
>>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Compress::RawDeflate, IO::Compress::RawDeflate
- Write RFC 1951 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item rawdeflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Merge => 0|1 >>, -Level, -Strategy, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Compress::Zip, IO::Compress::Zip - Write zip
files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item zip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Name => $string >>, C<< Time => $number >>, C<< ExtAttr =>
$attr >>, C<< exTime => [$atime, $mtime, $ctime] >>, C<< Comment =>
$comment >>, C<< ZipComment => $comment >>, C<< Method => $method >>, C<<
Stream => 0|1 >>, C<< Zip64 => 0|1 >>, C<< TextFlag => 0|1 >>, C<<
ExtraFieldLocal => $data >> =item C<< ExtraFieldCentral => $data >>, C<<
Minimal => 1|0 >>, C<< BlockSize100K => number >>, C<< WorkFactor => number
>>, -Level, -Strategy, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy, :zip_method

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Uncompress::AnyInflate,
IO::Uncompress::AnyInflate - Uncompress zlib-based (zip, gzip) file/buffer

=over 4

=item SYNOPSIS

=item DESCRIPTION

RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip

=item Functional Interface

=over 4

=item anyinflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< RawInflate => 0|1
>>, C<< ParseExtra => 0|1 >> If the gzip FEXTRA header field is present and
this option is set, it will force the module to check that it conforms to
the sub-field structure as defined in RFC 1952

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Uncompress::Gunzip, IO::Uncompress::Gunzip -
Read RFC 1952 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item gunzip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< ParseExtra => 0|1
>> If the gzip FEXTRA header field is present and this option is set, it
will force the module to check that it conforms to the sub-field structure
as defined in RFC 1952

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

Name, Comment

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Uncompress::Inflate, IO::Uncompress::Inflate -
Read RFC 1950 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item inflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Uncompress::RawInflate,
IO::Uncompress::RawInflate - Read RFC 1951 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item rawinflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Uncompress::Unzip, IO::Uncompress::Unzip -
Read zip files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item unzip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IPC::Msg - SysV Msg IPC object class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::Open2, open2 - open a process for both reading and writing

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item WARNING 

=item SEE ALSO

=back

=head2 IPC::Open3, open3 - open a process for reading, writing, and error
handling

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item See Also

L<IPC::Open2>, L<IPC::Run>

=item WARNING

=back

=head2 IPC::Semaphore - SysV Semaphore IPC object class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::SysV - SysV IPC constants

=over 4

=item SYNOPSIS

=item DESCRIPTION

ftok( PATH, ID )

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 IPC::SysV::Msg, IPC::Msg - SysV Msg IPC object class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::SysV::Semaphore, IPC::Semaphore - SysV Semaphore IPC object
class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPCmd, IPC::Cmd - finding and running system commands made easy

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CLASS METHODS 

=over 4

=item $bool = IPC::Cmd->can_use_ipc_run( [VERBOSE] )

=back

=back

=over 4

=item $bool = IPC::Cmd->can_use_ipc_open3( [VERBOSE] )

=back

=over 4

=item $bool = IPC::Cmd->can_capture_buffer

=back

=over 4

=item FUNCTIONS

=over 4

=item $path = can_run( PROGRAM );

=back

=back

=over 4

=item $ok | ($ok, $err, $full_buf, $stdout_buff, $stderr_buff) = run(
command => COMMAND, [verbose => BOOL, buffer => \$SCALAR] );

command, verbose, buffer, success, errorcode, full_buffer, out_buffer,
error_buffer

=back

=over 4

=item HOW IT WORKS

=item Global Variables

=over 4

=item $IPC::Cmd::VERBOSE

=item $IPC::Cmd::USE_IPC_RUN

=item $IPC::Cmd::USE_IPC_OPEN3

=item $IPC::Cmd::WARN

=back

=item Caveats

Whitespace, IO Redirect

=item See Also

=item ACKNOWLEDGEMENTS

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 List::Util - A selection of general-utility list subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

first BLOCK LIST, max LIST, maxstr LIST, min LIST, minstr LIST, reduce
BLOCK LIST, shuffle LIST, sum LIST

=item KNOWN BUGS

=item SUGGESTED ADDITIONS

=item SEE ALSO

=item COPYRIGHT

=back

=head2 List::Utilib::List::Util, List::Util - A selection of
general-utility list subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

first BLOCK LIST, max LIST, maxstr LIST, min LIST, minstr LIST, reduce
BLOCK LIST, shuffle LIST, sum LIST

=item KNOWN BUGS

=item SUGGESTED ADDITIONS

=item SEE ALSO

=item COPYRIGHT

=back

=head2 List::Utilib::Scalar::Util, Scalar::Util - A selection of
general-utility scalar subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

blessed EXPR, dualvar NUM, STRING, isvstring EXPR, isweak EXPR,
looks_like_number EXPR, openhandle FH, refaddr EXPR, reftype EXPR,
set_prototype CODEREF, PROTOTYPE, tainted EXPR, weaken REF

=item KNOWN BUGS

=item SEE ALSO

=item COPYRIGHT

=item BLATANT PLUG

=back

=head2 Locale::Constants - constants for Locale codes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Language, Locale::Country, Locale::Script, Locale::Currency

=item AUTHOR

=item COPYRIGHT

=back

=head2 Locale::Country - ISO codes for country identification (ISO 3166)

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<alpha-2>, B<alpha-3>, B<numeric>

=item CONVERSION ROUTINES

code2country( CODE, [ CODESET ] ), country2code( STRING, [ CODESET ] ),
country_code2code( CODE, CODESET, CODESET )

=item QUERY ROUTINES

C<all_country_codes( [ CODESET ] )>, C<all_country_names( [ CODESET ] )>

=item SEMI-PRIVATE ROUTINES

=over 4

=item alias_code

=item rename_country

=back

=item EXAMPLES

=item DOMAIN NAMES

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Language, Locale::Script, Locale::Currency, Locale::SubCountry, ISO
3166-1, http://www.iso.org/iso/en/prods-services/iso3166ma/index.html,
http://www.egt.ie/standards/iso3166/iso3166-1-en.html,
http://www.cia.gov/cia/publications/factbook/docs/app-d-1.html

=item AUTHOR

=item COPYRIGHT

=back

=head2 Locale::Currency - ISO three letter codes for currency
identification (ISO 4217)

=over 4

=item SYNOPSIS

=item DESCRIPTION

XTS, XXX

=item CONVERSION ROUTINES

code2currency(), currency2code()

=item QUERY ROUTINES

C<all_currency_codes()>, C<all_currency_names()>

=item EXAMPLES

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Country, Locale::Script, ISO 4217:1995,
http://www.bsi-global.com/iso4217currency

=item AUTHOR

=item COPYRIGHT

=back

=head2 Locale::Language - ISO two letter codes for language identification
(ISO 639)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONVERSION ROUTINES

code2language(), language2code()

=item QUERY ROUTINES

C<all_language_codes()>, C<all_language_names()>

=item EXAMPLES

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Country, Locale::Script, Locale::Currency, ISO 639:1988 (E/F),
http://lcweb.loc.gov/standards/iso639-2/langhome.html

=item AUTHOR

=item COPYRIGHT

=back

=head2 Locale::Maketext - framework for localization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item QUICK OVERVIEW

=item METHODS

=over 4

=item Construction Methods

=item The "maketext" Method

$lh->fail_with I<or> $lh->fail_with(I<PARAM>), $lh->failure_handler_auto

=item Utility Methods

$language->quant($number, $singular), $language->quant($number, $singular,
$plural), $language->quant($number, $singular, $plural, $negative),
$language->numf($number), $language->sprintf($format, @@items),
$language->language_tag(), $language->encoding()

=item Language Handle Attributes and Internals

=back

=item LANGUAGE CLASS HIERARCHIES

=item ENTRIES IN EACH LEXICON

=item BRACKET NOTATION

=item AUTO LEXICONS

=item CONTROLLING LOOKUP FAILURE

=item HOW TO USE MAKETEXT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMER

=item AUTHOR

=back

=head2 Locale::Maketext::Simple - Simple interface to
Locale::Maketext::Lexicon

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

=over 4

=item Class

=item Path

=item Style

=item Export

=item Subclass

=item Decode

=item Encoding

=back

=back

=over 4

=item ACKNOWLEDGMENTS

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=over 4

=item The "MIT" License

=back

=back

=head2 Locale::Maketext::TPJ13 -- article about software localization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Localization and Perl: gettext breaks, Maketext fixes

=over 4

=item A Localization Horror Story: It Could Happen To You

=item The Linguistic View

=item Breaking gettext

=item Replacing gettext

=item Buzzwords: Abstraction and Encapsulation

=item Buzzword: Isomorphism

=item Buzzword: Inheritance

=item Buzzword: Concision

=item The Devil in the Details

=item The Proof in the Pudding: Localizing Web Sites

=item References

=back

=back

=head2 Locale::Script - ISO codes for script identification (ISO 15924)

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<alpha-2>, B<alpha-3>, B<numeric>

=over 4

=item SPECIAL CODES

=back

=item CONVERSION ROUTINES

code2script( CODE, [ CODESET ] ), script2code( STRING, [ CODESET ] ),
script_code2code( CODE, CODESET, CODESET )

=item QUERY ROUTINES

C<all_script_codes ( [ CODESET ] )>, C<all_script_names ( [ CODESET ] )>

=item EXAMPLES

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Language, Locale::Currency, Locale::Country, ISO 15924,
http://www.evertype.com/standards/iso15924/

=item AUTHOR

=item COPYRIGHT

=back

=head2 Log::Message - A generic message storing mechanism;

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Hierarchy

Log::Message, Log::Message::Item, Log::Message::Handlers,
Log::Message::Config

=item Options

config, private, verbose, tag, level, remove, chrono

=back

=over 4

=item Methods

=over 4

=item new

=back

=back

=over 4

=item store

message, tag, level, extra

=back

=over 4

=item retrieve

tag, level, message, amount, chrono, remove

=back

=over 4

=item first

=back

=over 4

=item last

=back

=over 4

=item flush

=back

=over 4

=item SEE ALSO

=item AUTHOR

=item Acknowledgements

=item COPYRIGHT

=back

=head2 Log::Message::Config - Configuration options for Log::Message

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=item Acknowledgements

=item COPYRIGHT

=back

=head2 Log::Message::Handlers - Message handlers for Log::Message

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Default Handlers

=over 4

=item log

=back

=back

=over 4

=item carp

=back

=over 4

=item croak

=back

=over 4

=item cluck

=back

=over 4

=item confess

=back

=over 4

=item die

=back

=over 4

=item warn

=back

=over 4

=item trace

=back

=over 4

=item Custom Handlers

=item SEE ALSO

=item AUTHOR

=item Acknowledgements

=item COPYRIGHT

=back

=head2 Log::Message::Item  - Message objects for Log::Message

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Methods and Accessors

=over 4

=item remove

=item id

=item when

=item message

=item level

=item tag

=item shortmess

=item longmess

=item parent

=back

=item SEE ALSO

=item AUTHOR

=item Acknowledgements

=item COPYRIGHT

=back

=head2 Log::Message::Simple

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item msg("message string" [,VERBOSE])

=item debug("message string" [,VERBOSE])

=item error("error string" [,VERBOSE])

=back

=back

=over 4

=item carp();

=item croak();

=item confess();

=item cluck();

=back

=over 4

=item CLASS METHODS

=over 4

=item Log::Message::Simple->stack()

=item Log::Message::Simple->stack_as_string([TRACE])

=item Log::Message::Simple->flush()

=back

=back

=over 4

=item GLOBAL VARIABLES

$ERROR_FH, $MSG_FH, $DEBUG_FH, $STACKTRACE_ON_ERROR

=back

=head2 MIME::Base64 - Encoding and decoding of base64 strings

=over 4

=item SYNOPSIS

=item DESCRIPTION

encode_base64($str), encode_base64($str, $eol);, decode_base64($str)

=item DIAGNOSTICS

Premature end of base64 data, Premature padding of base64 data, Wide
character in subroutine entry

=item EXAMPLES

=item COPYRIGHT

=item SEE ALSO

=back

=head2 MIME::Base64::QuotedPrint, MIME::QuotedPrint - Encoding and decoding
of quoted-printable strings

=over 4

=item SYNOPSIS

=item DESCRIPTION

encode_qp($str), encode_qp($str, $eol), encode_qp($str, $eol, $binmode),
decode_qp($str);

=item COPYRIGHT

=item SEE ALSO

=back

=head2 MIME::QuotedPrint - Encoding and decoding of quoted-printable
strings

=over 4

=item SYNOPSIS

=item DESCRIPTION

encode_qp($str), encode_qp($str, $eol), encode_qp($str, $eol, $binmode),
decode_qp($str);

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Math::BigFloat - Arbitrary size floating point math package

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Canonical notation

=item Output

=item C<mantissa()>, C<exponent()> and C<parts()>

=item Accuracy vs. Precision

=item Rounding

ffround ( +$scale ), ffround ( -$scale ), ffround ( 0 ), fround  ( +$scale
), fround  ( -$scale ) and fround ( 0 )

=back

=item METHODS

=over 4

=item accuracy

=item precision()

=item bexp()

=item bnok()

=item bpi()

=item bcos()

=item bsin()

=item batan2()

=item batan()

=item bmuladd()

=back

=item Autocreating constants

=over 4

=item Math library

=item Using Math::BigInt::Lite

=back

=item EXPORTS

=item BUGS

=item CAVEATS

stringify, bstr(), bdiv, brsft, Modifying and =, bpow, precision() vs.
accuracy()

=item SEE ALSO

=item LICENSE

=item AUTHORS

=back

=head2 Math::BigInt - Arbitrary size integer/float math package

=over 4

=item SYNOPSIS

=item DESCRIPTION

Input, Output

=item METHODS

=over 4

=item config()

=item accuracy()

=item precision()

=item brsft()

=item new()

=item from_oct()

=item from_hex()

=item from_bin()

=item bnan()

=item bzero()

=item binf()

=item bone()

=item is_one()/is_zero()/is_nan()/is_inf()

=item is_pos()/is_neg()/is_positive()/is_negative()

	$x->is_pos();			# true if > 0
	$x->is_neg();			# true if < 0

=item is_odd()/is_even()/is_int()

=item bcmp()

=item bacmp()

=item sign()

=item digit()

=item bneg()

=item babs()

=item bnorm()

=item bnot()

=item binc()

=item bdec()

=item badd()

=item bsub()

=item bmul()

=item bmuladd()

=item bdiv()

=item bmod()

=item bmodinv()

=item bmodpow()

=item bpow()

=item blog()

=item bexp()

=item bnok()

=item bpi()

=item bcos()

=item bsin()

=item batan2()

=item batan()

=item blsft()

=item brsft()

=item band()

=item bior()

=item bxor()

=item bnot()

=item bsqrt()

=item broot()

=item bfac()

=item round()

=item bround()

=item bfround()

=item bfloor()

=item bceil()

=item bgcd()

=item blcm()

=item exponent()

=item mantissa()

=item parts()

=item copy()

=item as_int()/as_number()

=item bsstr()

=item as_hex()

=item as_bin()

=item as_oct()

=item numify()

=item modify()

=item upgrade()/downgrade()

=item div_scale()

=item round_mode()

=back

=item ACCURACY and PRECISION

=over 4

=item Precision P

=item Accuracy A

=item Fallback F

=item Rounding mode R

'trunc', 'even', 'odd', '+inf', '-inf', 'zero', 'common', Precision,
Accuracy (significant digits), Setting/Accessing, Creating numbers, Usage,
Precedence, Overriding globals, Local settings, Rounding, Default values,
Remarks

=back

=item Infinity and Not a Number

oct()/hex(), log(-inf), exp(), cos(), sin(), atan2()

=item INTERNALS

=over 4

=item MATH LIBRARY

=item SIGN

=item mantissa(), exponent() and parts()

=back

=item EXAMPLES

  use Math::BigInt;

=item Autocreating constants

=item PERFORMANCE

=over 4

=item Alternative math libraries

=item SUBCLASSING

=back

=item Subclassing Math::BigInt

=item UPGRADING

=over 4

=item Auto-upgrade

bsqrt(), div(), blog(), bexp()

=back

=item EXPORTS

=item CAVEATS

bstr(), bsstr() and 'cmp', int(), length, bdiv, infinity handling,
Modifying and =, bpow, Overloading -$x, Mixing different object types,
bsqrt(), brsft()

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 Math::BigInt::Calc - Pure Perl module to support Math::BigInt

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item STORAGE

=item METHODS

=item WRAP YOUR OWN

=item LICENSE

This program is free software; you may redistribute it and/or modify it
under
the same terms as Perl itself. 

=item AUTHORS

=item SEE ALSO

=back

=head2 Math::BigInt::CalcEmu - Emulate low-level math with BigInt code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item __emu_bxor

=item __emu_band

=item __emu_bior

=back

=item LICENSE

This program is free software; you may redistribute it and/or modify it
under
the same terms as Perl itself. 

=item AUTHORS

=item SEE ALSO

=back

=head2 Math::BigInt::FastCalc - Math::BigInt::Calc with some XS for more
speed

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item STORAGE

=item METHODS

=item LICENSE

This program is free software; you may redistribute it and/or modify it
under
the same terms as Perl itself. 

=item AUTHORS

=item SEE ALSO

=back

=head2 Math::BigRat - Arbitrary big rational numbers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item MATH LIBRARY

=back

=item METHODS

=over 4

=item new()

=item numerator()

=item denominator()

	$d = $x->denominator();

=item parts()

=item numify()

=item as_int()/as_number()

=item as_hex()

=item as_bin()

=item as_oct()

=item from_hex()/from_bin()/from_oct()

=item length()

=item digit()

=item bnorm()

=item bfac()

=item bround()/round()/bfround()

=item bmod()

=item bneg()

=item is_one()

=item is_zero()

=item is_pos()/is_positive()

=item is_neg()/is_negative()

=item is_int()

=item is_odd()

=item is_even()

=item bceil()

=item bfloor()

	$x->bfloor();

=item bsqrt()

	$x->bsqrt();

=item broot()

	$x->broot($n);

=item badd()/bmul()/bsub()/bdiv()/bdec()/binc()

=item copy()

=item bstr()/bsstr()

=item bacmp()/bcmp()

=item blsft()/brsft()

=item bpow()

=item bexp()

=item bnok()

=item config()

=back

=item BUGS

inf handling (partial), NaN handling (partial), rounding (not implemented
except for bceil/bfloor), $x ** $y where $y is not an integer, bmod(),
blog(), bmodinv() and bmodpow() (partial)

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 Math::Complex - complex numbers and associated mathematical
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPERATIONS

=item CREATION

=item DISPLAYING

=over 4

=item CHANGED IN PERL 5.6

=back

=item USAGE

=over 4

=item PI

=back

=item ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO

=item ERRORS DUE TO INDIGESTIBLE ARGUMENTS

=item BUGS

=item AUTHORS

=back

=head2 Math::Trig - trigonometric functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item TRIGONOMETRIC FUNCTIONS

B<tan>

=over 4

=item ERRORS DUE TO DIVISION BY ZERO

=item SIMPLE (REAL) ARGUMENTS, COMPLEX RESULTS

=back

=item PLANE ANGLE CONVERSIONS

deg2rad, grad2rad, rad2deg, grad2deg, deg2grad, rad2grad, rad2rad, deg2deg,
grad2grad

=item RADIAL COORDINATE CONVERSIONS

=over 4

=item COORDINATE SYSTEMS

=item 3-D ANGLE CONVERSIONS

cartesian_to_cylindrical, cartesian_to_spherical, cylindrical_to_cartesian,
cylindrical_to_spherical, spherical_to_cartesian, spherical_to_cylindrical

=back

=item GREAT CIRCLE DISTANCES AND DIRECTIONS

=over 4

=item great_circle_distance

=item great_circle_direction

=item great_circle_bearing

=item great_circle_destination

=item great_circle_midpoint

=item great_circle_waypoint

=back

=item EXAMPLES

=over 4

=item CAVEAT FOR GREAT CIRCLE FORMULAS

=back

=item BUGS

=item AUTHORS

=back

=head2 Memoize - Make functions faster by trading space for time

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item DETAILS

=item OPTIONS

=over 4

=item INSTALL

=item NORMALIZER

=item C<SCALAR_CACHE>, C<LIST_CACHE>

C<MEMORY>, C<HASH>, C<TIE>, C<FAULT>, C<MERGE>

=back

=item OTHER FACILITIES

=over 4

=item C<unmemoize>

=item C<flush_cache>

=back

=item CAVEATS

=item PERSISTENT CACHE SUPPORT

=item EXPIRATION SUPPORT

=item BUGS

=item MAILING LIST

=item AUTHOR

=item COPYRIGHT AND LICENSE

=item THANK YOU

=back

=head2 Memoize::AnyDBM_File - glue to provide EXISTS for AnyDBM_File for
Storable use

=over 4

=item DESCRIPTION

=back

=head2 Memoize::Expire - Plug-in module for automatic expiration of
memoized values

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item INTERFACE

 TIEHASH,  EXISTS,  STORE

=item ALTERNATIVES

=item CAVEATS

=item AUTHOR

=item SEE ALSO

=back

=head2 Memoize::ExpireFile - test for Memoize expiration semantics

=over 4

=item DESCRIPTION

=back

=head2 Memoize::ExpireTest - test for Memoize expiration semantics

=over 4

=item DESCRIPTION

=back

=head2 Memoize::NDBM_File - glue to provide EXISTS for NDBM_File for
Storable use

=over 4

=item DESCRIPTION

=back

=head2 Memoize::SDBM_File - glue to provide EXISTS for SDBM_File for
Storable use

=over 4

=item DESCRIPTION

=back

=head2 Memoize::Storable - store Memoized data in Storable database

=over 4

=item DESCRIPTION

=back

=head2 Module::Build - Build and install Perl modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item GUIDE TO DOCUMENTATION

General Usage (L<Module::Build>), Authoring Reference
(L<Module::Build::Authoring>), API Reference (L<Module::Build::API>),
Cookbook (L<Module::Build::Cookbook>)

=item ACTIONS

build, clean, code, config_data, diff, dist, distcheck, distclean, distdir,
distmeta, distsign, disttest, docs, fakeinstall, help, html, install,
manifest, manpages, pardist, ppd, ppmdist, prereq_report, pure_install,
realclean, retest, skipcheck, test, testall, testcover, testdb, testpod,
testpodcoverage, versioninstall

=item OPTIONS

=over 4

=item Command Line Options

quiet, use_rcfile, verbose, allow_mb_mismatch

=item Default Options File (F<.modulebuildrc>)

=back

=item INSTALL PATHS

lib, arch, script, bin, bindoc, libdoc, binhtml, libhtml, installdirs,
install_path, install_base, destdir, prefix

=item MOTIVATIONS

+, +

=item TO DO

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Module::Build::API - API Reference for Module Authors

=over 4

=item DESCRIPTION

=over 4

=item CONSTRUCTORS

current(), new(), add_to_cleanup, auto_features, autosplit, build_class,
build_requires, create_packlist, c_source, conflicts, create_makefile_pl,
create_readme, dist_abstract, dist_author, dist_name, dist_version,
dist_version_from, dynamic_config, extra_compiler_flags,
extra_linker_flags, get_options, type, store, default, include_dirs,
install_path, installdirs, license, apache, artistic, artistic_2, bsd, gpl,
lgpl, mit, mozilla, open_source, perl, restrictive, unrestricted, meta_add,
meta_merge, module_name, PL_files, pm_files, pod_files, recommends,
recursive_test_files, requires, script_files, sign, test_files, xs_files,
new_from_context(%args), resume(), subclass()

=item METHODS

add_build_element($type), add_to_cleanup(@@files), args(),
autosplit_file($from, $to), base_dir(), build_requires(),
check_installed_status($module, $version), check_installed_version($module,
$version), compare_versions($v1, $op, $v2), config($key), config($key,
$value), config() [deprecated], config_data($name), config_data($name =>
$value), conflicts(), contains_pod($file), copy_if_modified(%parameters),
create_build_script(), current_action(), depends_on(@@actions),
dir_contains($first_dir, $second_dir), dispatch($action, %args),
dist_dir(), dist_name(), dist_version(), do_system($cmd, @@args),
feature($name), feature($name => $value), have_c_compiler(),
install_base_relpaths(), install_base_relpaths($type),
install_base_relpaths($type => $path), install_destination($type),
install_path(), install_path($type), install_path($type => $path),
install_types(), invoked_action(), notes(), notes($key), notes($key =>
$value), orig_dir(), os_type(), is_vmsish(), is_windowsish(), is_unixish(),
prefix_relpaths(), prefix_relpaths($installdirs),
prefix_relpaths($installdirs, $type), prefix_relpaths($installdirs, $type
=> $path), prepare_metadata(), prereq_failures(), prereq_report(),
prompt($message, $default), recommends(), requires(), rscan_dir($dir,
$pattern), runtime_params(), runtime_params($key), script_files(),
up_to_date($source_file, $derived_file), up_to_date(\@@source_files,
\@@derived_files), y_n($message, $default)

=item Autogenerated Accessors

PL_files(), allow_mb_mismatch(), autosplit(), base_dir(), bindoc_dirs(),
blib(), build_bat(), build_class(), build_elements(), build_requires(),
build_script(), c_source(), config_dir(), configure_requires(),
conflicts(), create_makefile_pl(), create_packlist(), create_readme(),
debugger(), destdir(), get_options(), html_css(), include_dirs(),
install_base(), install_sets(), installdirs(), libdoc_dirs(), license(),
magic_number(), mb_version(), meta_add(), meta_merge(), metafile(),
module_name(), orig_dir(), original_prefix(), perl(), pm_files(),
pod_files(), pollute(), prefix(), prereq_action_types(), quiet(),
recommends(), recurse_into(), recursive_test_files(), requires(),
scripts(), use_rcfile(), verbose(), xs_files()

=back

=item MODULE METADATA

keywords, resources

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Module::Build::Authoring - Authoring Module::Build modules

=over 4

=item DESCRIPTION

=item STRUCTURE

=item SUBCLASSING

=item PREREQUISITES

=over 4

=item Types of prerequisites

configure_requires, build_requires, requires, recommends, conflicts

=item Format of prerequisites

=item XS Extensions

=back

=item SAVING CONFIGURATION INFORMATION

=item STARTING MODULE DEVELOPMENT

=item AUTOMATION

=item MIGRATION

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Base - Default methods for Module::Build

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Module::Build::Compat - Compatibility with ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

create_makefile_pl($style, $build), small, passthrough, traditional,
run_build_pl(args => \@@ARGV), args, script, write_makefile(), makefile

=item SCENARIOS

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Module::Build::ConfigData - Configuration for Module::Build

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

config($name), feature($name), set_config($name, $value),
set_feature($name, $value), config_names(), feature_names(),
auto_feature_names(), write()

=item AUTHOR

=back

=head2 Module::Build::Cookbook - Examples of Module::Build Usage

=over 4

=item DESCRIPTION

=item BASIC RECIPES

=over 4

=item Installing modules that use Module::Build

=item Modifying Config.pm values

=item Installing modules using the programmatic interface

=item Installing to a temporary directory

=item Installing to a non-standard directory

=item Installing in the same location as ExtUtils::MakeMaker

=item Running a single test file

=back

=item ADVANCED RECIPES

=over 4

=item Making a CPAN.pm-compatible distribution

=item Changing the order of the build process

=item Adding new file types to the build process

=item Adding new elements to the install process

=back

=item EXAMPLES ON CPAN

=over 4

=item SVN-Notify-Mirror

1. Using C<auto_features>, I check to see whether two optional modules are
available - SVN::Notify::Config and Net::SSH;, 2. If the S::N::Config
module is loaded, I automatically generate testfiles for it during Build
(using the C<PL_files> property), 3. If the C<ssh_feature> is available, I
ask if the user wishes to perform the ssh tests (since it requires a little
preliminary setup);, 4. Only if the user has C<ssh_feature> and answers yes
to the testing, do I generate a test file

=item Modifying an action

=back

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Module::Build::ModuleInfo, ModuleInfo - Gather package and POD
information from a perl module files

=over 4

=item DESCRIPTION

new_from_file($filename, collect_pod => 1), new_from_module($module,
collect_pod => 1, inc => \@@dirs), name(), version($package), filename(),
packages_inside(), pod_inside(), contains_pod(), pod($section),
find_module_by_name($module, \@@dirs), find_module_dir_by_name($module,
\@@dirs)

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Module::Build::Notes, $notes_name - Configuration for $module_name

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

config(\$name), feature(\$name), set_config(\$name, \$value),
set_feature(\$name, \$value), config_names(), feature_names(),
auto_feature_names(), write()

=item AUTHOR

=back

=head2 Module::Build::PPMMaker - Perl Package Manager file creation

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Module::Build::Platform::Amiga - Builder class for Amiga platforms

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Platform::Default - Stub class for unknown platforms

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Platform::EBCDIC - Builder class for EBCDIC platforms

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Platform::MPEiX - Builder class for MPEiX platforms

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Platform::MacOS - Builder class for MacOS platforms

=over 4

=item DESCRIPTION

=over 4

=item Overriden Methods

new(), make_executable(), dispatch(), ACTION_realclean()

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Platform::RiscOS - Builder class for RiscOS platforms

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Platform::Unix - Builder class for Unix platforms

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Platform::VMS - Builder class for VMS platforms

=over 4

=item DESCRIPTION

=over 4

=item Overridden Methods

_set_defaults

=back

=back

cull_args

manpage_separator

prefixify

_quote_args

have_forkpipe

_backticks

do_system

_infer_xs_spec

rscan_dir

dist_dir

man3page_name

expand_test_dir

_detildefy

find_perl_interpreter

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Platform::VOS - Builder class for VOS platforms

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Platform::Windows - Builder class for Windows
platforms

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Platform::aix - Builder class for AIX platform

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Platform::cygwin - Builder class for Cygwin platform

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Platform::darwin - Builder class for Mac OS X
platform

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::Platform::os2 - Builder class for OS/2 platform

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Module::Build::YAML - Provides just enough YAML support so that
Module::Build works even if YAML.pm is not installed

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item COPYRIGHT

=back

=head2 Module::CoreList - what modules shipped with versions of perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEATS

=item HISTORY

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Module::Load - runtime require of both modules and files

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Rules

=item Caveats

=item ACKNOWLEDGEMENTS

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Module::Load::Conditional - Looking up module information / loading
at runtime

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Methods

=item $href = check_install( module => NAME [, version => VERSION, verbose
=> BOOL ] );

module, version, verbose, file, version, uptodate

=back

=over 4

=item $bool = can_load( modules => { NAME => VERSION [,NAME => VERSION] },
[verbose => BOOL, nocache => BOOL] )

modules, verbose, nocache

=back

=over 4

=item @@list = requires( MODULE );

=back

=over 4

=item Global Variables

=over 4

=item $Module::Load::Conditional::VERBOSE

=item $Module::Load::Conditional::FIND_VERSION

=item $Module::Load::Conditional::CHECK_INC_HASH

=item $Module::Load::Conditional::CACHE

=item $Module::Load::Conditional::ERROR

=back

=item See Also

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Module::Loaded - mark modules as loaded or unloaded

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item $bool = mark_as_loaded( PACKAGE );

=back

=back

=over 4

=item $bool = mark_as_unloaded( PACKAGE );

=back

=over 4

=item $loc = is_loaded( PACKAGE );

=back

=over 4

=item AUTHOR

=item COPYRIGHT

=back

=head2 Module::Pluggable - automatically give your module the ability to
have plugins

=over 4

=item SYNOPSIS

=item EXAMPLE

=item DESCRIPTION

=item ADVANCED USAGE

=item INNER PACKAGES

=item OPTIONS

=over 4

=item sub_name

=item search_path

=item search_dirs 

=item instantiate

=item require

=item inner

=item only

=item except

=item package

=item file_regex

=back

=item METHODs

=over 4

=item search_path

=back

=item FUTURE PLANS

=item AUTHOR

=item COPYING

=item BUGS

=item SEE ALSO

=back

=head2 Module::Pluggable::Object - automatically give your module the
ability to have plugins

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item COPYING

=item BUGS

=item SEE ALSO

=back

=head2 NDBM_File - Tied access to ndbm files

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>

=item DIAGNOSTICS

=over 4

=item C<ndbm store returned -1, errno 22, key "..." at ...>

=back

=item BUGS AND WARNINGS

=back

=head2 NEXT - Provide a pseudo-class NEXT (et al) that allows method
redispatch

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Enforcing redispatch

=item Avoiding repetitions

=item Invoking all versions of a method with a single call

=item Using C<EVERY> methods

=back

=item AUTHOR

=item BUGS AND IRRITATIONS

=item COPYRIGHT

=back

=head2 Net::Cmd - Network Command class (as used by FTP, SMTP etc)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USER METHODS

debug ( VALUE ), message (), code (), ok (), status (), datasend ( DATA ),
dataend ()

=item CLASS METHODS

debug_print ( DIR, TEXT ), debug_text ( TEXT ), command ( CMD [, ARGS, ...
]), unsupported (), response (), parse_response ( TEXT ), getline (),
ungetline ( TEXT ), rawdatasend ( DATA ), read_until_dot (), tied_fh ()

=item EXPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Net::Config - Local configuration data for libnet

=over 4

=item SYNOPSYS

=item DESCRIPTION

=item METHODS

requires_firewall HOST

=item NetConfig VALUES

nntp_hosts, snpp_hosts, pop3_hosts, smtp_hosts, ph_hosts, daytime_hosts,
time_hosts, inet_domain, ftp_firewall, ftp_firewall_type, ftp_ext_passive,
ftp_int_passive, local_netmask, test_hosts, test_exists

=back

=head2 Net::Domain - Attempt to evaluate the current host's internet name
and domain

=over 4

=item SYNOPSIS

=item DESCRIPTION

hostfqdn (), domainname (), hostname (), hostdomain ()

=item AUTHOR

=item COPYRIGHT

=back

=head2 Net::FTP - FTP Client class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OVERVIEW

=item CONSTRUCTOR

new ([ HOST ] [, OPTIONS ])

=item METHODS

login ([LOGIN [,PASSWORD [, ACCOUNT] ] ]), authorize ( [AUTH [, RESP]]),
site (ARGS), ascii, binary, rename ( OLDNAME, NEWNAME ), delete ( FILENAME
), cwd ( [ DIR ] ), cdup (), pwd (), restart ( WHERE ), rmdir ( DIR [,
RECURSE ]), mkdir ( DIR [, RECURSE ]), alloc ( SIZE [, RECORD_SIZE] ), ls (
[ DIR ] ), dir ( [ DIR ] ), get ( REMOTE_FILE [, LOCAL_FILE [, WHERE]] ),
put ( LOCAL_FILE [, REMOTE_FILE ] ), put_unique ( LOCAL_FILE [, REMOTE_FILE
] ), append ( LOCAL_FILE [, REMOTE_FILE ] ), unique_name (), mdtm ( FILE ),
size ( FILE ), supported ( CMD ), hash ( [FILEHANDLE_GLOB_REF],[
BYTES_PER_HASH_MARK] ), feature ( NAME ), nlst ( [ DIR ] ), list ( [ DIR ]
), retr ( FILE ), stor ( FILE ), stou ( FILE ), appe ( FILE ), port ( [
PORT ] ), pasv (), pasv_xfer ( SRC_FILE, DEST_SERVER [, DEST_FILE ] ),
pasv_xfer_unique ( SRC_FILE, DEST_SERVER [, DEST_FILE ] ), pasv_wait (
NON_PASV_SERVER ), abort (), quit ()

=over 4

=item Methods for the adventurous

quot (CMD [,ARGS])

=back

=item THE dataconn CLASS

read ( BUFFER, SIZE [, TIMEOUT ] ), write ( BUFFER, SIZE [, TIMEOUT ] ),
bytes_read (), abort (), close ()

=item UNIMPLEMENTED

B<SMNT>, B<HELP>, B<MODE>, B<SYST>, B<STAT>, B<STRU>, B<REIN>

=item REPORTING BUGS

=item AUTHOR

=item SEE ALSO

=item USE EXAMPLES

http://www.csh.rit.edu/~adam/Progs/

=item CREDITS

=item COPYRIGHT

=back

=head2 Net::NNTP - NNTP Client class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ HOST ] [, OPTIONS ])

=item METHODS

article ( [ MSGID|MSGNUM ], [FH] ), body ( [ MSGID|MSGNUM ], [FH] ), head (
[ MSGID|MSGNUM ], [FH] ), articlefh ( [ MSGID|MSGNUM ] ), bodyfh ( [
MSGID|MSGNUM ] ), headfh ( [ MSGID|MSGNUM ] ), nntpstat ( [ MSGID|MSGNUM ]
), group ( [ GROUP ] ), ihave ( MSGID [, MESSAGE ]), last (), date (),
postok (), authinfo ( USER, PASS ), list (), newgroups ( SINCE [,
DISTRIBUTIONS ]), newnews ( SINCE [, GROUPS [, DISTRIBUTIONS ]]), next (),
post ( [ MESSAGE ] ), postfh (), slave (), quit ()

=over 4

=item Extension methods

newsgroups ( [ PATTERN ] ), distributions (), subscriptions (),
overview_fmt (), active_times (), active ( [ PATTERN ] ), xgtitle ( PATTERN
), xhdr ( HEADER, MESSAGE-SPEC ), xover ( MESSAGE-SPEC ), xpath (
MESSAGE-ID ), xpat ( HEADER, PATTERN, MESSAGE-SPEC), xrover, listgroup ( [
GROUP ] ), reader

=back

=item UNSUPPORTED

=item DEFINITIONS

MESSAGE-SPEC, PATTERN, Examples, C<[^]-]>, C<*bdc>, C<[0-9a-zA-Z]>, C<a??d>

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 Net::POP3 - Post Office Protocol 3 Client class (RFC1939)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ HOST ] [, OPTIONS ] 0

=item METHODS

auth ( USERNAME, PASSWORD ), user ( USER ), pass ( PASS ), login ( [ USER
[, PASS ]] ), apop ( [ USER [, PASS ]] ), banner (), capa (),  capabilities
(), top ( MSGNUM [, NUMLINES ] ), list ( [ MSGNUM ] ), get ( MSGNUM [, FH ]
), getfh ( MSGNUM ), last (), popstat (), ping ( USER ), uidl ( [ MSGNUM ]
), delete ( MSGNUM ), reset (), quit ()

=item NOTES

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 Net::Ping - check a remote host for reachability

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Functions

Net::Ping->new([$proto [, $def_timeout [, $bytes [, $device [, $tos
]]]]]);, $p->ping($host [, $timeout]);, $p->source_verify( { 0 | 1 } );,
$p->service_check( { 0 | 1 } );, $p->tcp_service_check( { 0 | 1 } );,
$p->hires( { 0 | 1 } );, $p->bind($local_addr);, $p->open($host);, $p->ack(
[ $host ] );, $p->nack( $failed_ack_host );, $p->close();,
$p->port_number([$port_number]), pingecho($host [, $timeout]);

=back

=item NOTES

=item INSTALL

=item BUGS

=item AUTHORS

=item COPYRIGHT

=back

=head2 Net::SMTP - Simple Mail Transfer Protocol Client

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=item CONSTRUCTOR

new ( [ HOST ] [, OPTIONS ] )

=item METHODS

banner (), domain (), hello ( DOMAIN ), host (), etrn ( DOMAIN ), auth (
USERNAME, PASSWORD ), mail ( ADDRESS [, OPTIONS] ), send ( ADDRESS ),
send_or_mail ( ADDRESS ), send_and_mail ( ADDRESS ), reset (), recipient (
ADDRESS [, ADDRESS, [...]] [, OPTIONS ] ), to ( ADDRESS [, ADDRESS [...]]
), cc ( ADDRESS [, ADDRESS [...]] ), bcc ( ADDRESS [, ADDRESS [...]] ),
data ( [ DATA ] ), expand ( ADDRESS ), verify ( ADDRESS ), help ( [
$subject ] ), quit ()

=item ADDRESSES

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 Net::Time - time and daytime network client interface

=over 4

=item SYNOPSIS

=item DESCRIPTION

inet_time ( [HOST [, PROTOCOL [, TIMEOUT]]]), inet_daytime ( [HOST [,
PROTOCOL [, TIMEOUT]]])

=item AUTHOR

=item COPYRIGHT

=back

=head2 Net::hostent - by-name interface to Perl's built-in gethost*()
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=item NOTE

=item AUTHOR

=back

=head2 Net::libnetFAQ, libnetFAQ - libnet Frequently Asked Questions

=over 4

=item DESCRIPTION

=over 4

=item Where to get this document

=item How to contribute to this document

=back

=item Author and Copyright Information

=over 4

=item Disclaimer

=back

=item Obtaining and installing libnet

=over 4

=item What is libnet ?

=item Which version of perl do I need ?

=item What other modules do I need ?

=item What machines support libnet ?

=item Where can I get the latest libnet release

=back

=item Using Net::FTP

=over 4

=item How do I download files from an FTP server ?

=item How do I transfer files in binary mode ?

=item How can I get the size of a file on a remote FTP server ?

=item How can I get the modification time of a file on a remote FTP server
?

=item How can I change the permissions of a file on a remote server ?

=item Can I do a reget operation like the ftp command ?

=item How do I get a directory listing from an FTP server ?

=item Changing directory to "" does not fail ?

=item I am behind a SOCKS firewall, but the Firewall option does not work ?

=item I am behind an FTP proxy firewall, but cannot access machines outside
?

=item My ftp proxy firewall does not listen on port 21

=item Is it possible to change the file permissions of a file on an FTP
server ?

=item I have seen scripts call a method message, but cannot find it
documented ?

=item Why does Net::FTP not implement mput and mget methods

=back

=item Using Net::SMTP

=over 4

=item Why can't the part of an Email address after the @@ be used as the
hostname ?

=item Why does Net::SMTP not do DNS MX lookups ?

=item The verify method always returns true ?

=back

=item Debugging scripts

=over 4

=item How can I debug my scripts that use Net::* modules ?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 Net::netent - by-name interface to Perl's built-in getnet*()
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=item NOTE

=item AUTHOR

=back

=head2 Net::protoent - by-name interface to Perl's built-in getproto*()
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item AUTHOR

=back

=head2 Net::servent - by-name interface to Perl's built-in getserv*()
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=item NOTE

=item AUTHOR

=back

=head2 Netrc, Net::Netrc - OO interface to users netrc file

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item THE .netrc FILE

machine name, default, login name, password string, account string, macdef
name

=item CONSTRUCTOR

lookup ( MACHINE [, LOGIN ])

=item METHODS

login (), password (), account (), lpa ()

=item AUTHOR

=item SEE ALSO

=item COPYRIGHT

=back

=head2 O - Generic interface to Perl Compiler backends

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONVENTIONS

=item IMPLEMENTATION

=item BUGS

=item AUTHOR

=back

=head2 ODBM_File - Tied access to odbm files

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>

=item DIAGNOSTICS

=over 4

=item C<odbm store returned -1, errno 22, key "..." at ...>

=back

=item BUGS AND WARNINGS

=back

=head2 Object::Accessor

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item $object = Object::Accessor->new( [ARGS] );

=back

=back

=over 4

=item $bool = $object->mk_accessors( @@ACCESSORS | \%ACCESSOR_MAP );

=back

=over 4

=item @@list = $self->ls_accessors;

=back

=over 4

=item $ref = $self->ls_allow(KEY)

=back

=over 4

=item $clone = $self->mk_clone;

=back

=over 4

=item $bool = $self->mk_flush;

=back

=over 4

=item $bool = $self->mk_verify;

=back

=over 4

=item $bool = $self->register_callback( sub { ... } );

=back

=over 4

=item $bool = $self->can( METHOD_NAME )

=back

=over 4

=item $val = $self->___get( METHOD_NAME );

=back

=over 4

=item $bool = $self->___set( METHOD_NAME => VALUE );

=back

=over 4

=item LVALUE ACCESSORS

=over 4

=item CAVEATS

Allow handlers, Callbacks

=back

=back

=over 4

=item GLOBAL VARIABLES

=over 4

=item $Object::Accessor::FATAL

=item $Object::Accessor::DEBUG

=back

=item TODO

=over 4

=item Create read-only accessors

=back

=item CAVEATS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Opcode - Disable named opcodes when compiling perl code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item WARNING

=item Operator Names and Operator Lists

an operator name (opname), an operator tag name (optag), a negated opname
or optag, an operator set (opset)

=item Opcode Functions

opcodes, opset (OP, ...), opset_to_ops (OPSET), opset_to_hex (OPSET),
full_opset, empty_opset, invert_opset (OPSET), verify_opset (OPSET, ...),
define_optag (OPTAG, OPSET), opmask_add (OPSET), opmask, opdesc (OP, ...),
opdump (PAT)

=item Manipulating Opsets

=item TO DO (maybe)

=back

=over 4

=item Predefined Opcode Tags

:base_core, :base_mem, :base_loop, :base_io, :base_orig, :base_math,
:base_thread, :default, :filesys_read, :sys_db, :browse, :filesys_open,
:filesys_write, :subprocess, :ownprocess, :others, :load,
:still_to_be_decided, :dangerous

=item SEE ALSO

=item AUTHORS

=back

=head2 Opcode::Safe, Safe - Compile and execute code in restricted
compartments

=over 4

=item SYNOPSIS

=item DESCRIPTION

a new namespace, an operator mask

=item WARNING

=over 4

=item RECENT CHANGES

=item Methods in class Safe

permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)

=item Some Safety Issues

Memory, CPU, Snooping, Signals, State Changes

=item AUTHOR

=back

=back

=head2 Opcode::ops, ops - Perl pragma to restrict unsafe operations when
compiling

=over 4

=item SYNOPSIS	

=item DESCRIPTION

=item SEE ALSO

=back

=head2 POSIX - Perl interface to IEEE Std 1003.1

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item CAVEATS

=item FUNCTIONS

_exit, abort, abs, access, acos, alarm, asctime, asin, assert, atan, atan2,
atexit, atof, atoi, atol, bsearch, calloc, ceil, chdir, chmod, chown,
clearerr, clock, close, closedir, cos, cosh, creat, ctermid, ctime,
cuserid, difftime, div, dup, dup2, errno, execl, execle, execlp, execv,
execve, execvp, exit, exp, fabs, fclose, fcntl, fdopen, feof, ferror,
fflush, fgetc, fgetpos, fgets, fileno, floor, fmod, fopen, fork, fpathconf,
fprintf, fputc, fputs, fread, free, freopen, frexp, fscanf, fseek, fsetpos,
fstat, fsync, ftell, fwrite, getc, getchar, getcwd, getegid, getenv,
geteuid, getgid, getgrgid, getgrnam, getgroups, getlogin, getpgrp, getpid,
getppid, getpwnam, getpwuid, gets, getuid, gmtime, isalnum, isalpha,
isatty, iscntrl, isdigit, isgraph, islower, isprint, ispunct, isspace,
isupper, isxdigit, kill, labs, ldexp, ldiv, link, localeconv, localtime,
log, log10, longjmp, lseek, malloc, mblen, mbstowcs, mbtowc, memchr,
memcmp, memcpy, memmove, memset, mkdir, mkfifo, mktime, modf, nice,
offsetof, open, opendir, pathconf, pause, perror, pipe, pow, printf, putc,
putchar, puts, qsort, raise, rand, read, readdir, realloc, remove, rename,
rewind, rewinddir, rmdir, scanf, setgid, setjmp, setlocale, setpgid,
setsid, setuid, sigaction, siglongjmp, sigpending, sigprocmask, sigsetjmp,
sigsuspend, sin, sinh, sleep, sprintf, sqrt, srand, sscanf, stat, strcat,
strchr, strcmp, strcoll, strcpy, strcspn, strerror, strftime, strlen,
strncat, strncmp, strncpy, strpbrk, strrchr, strspn, strstr, strtod,
strtok, strtol, strtoul, strxfrm, sysconf, system, tan, tanh, tcdrain,
tcflow, tcflush, tcgetpgrp, tcsendbreak, tcsetpgrp, time, times, tmpfile,
tmpnam, tolower, toupper, ttyname, tzname, tzset, umask, uname, ungetc,
unlink, utime, vfprintf, vprintf, vsprintf, wait, waitpid, wcstombs,
wctomb, write

=item CLASSES

=over 4

=item POSIX::SigAction

new, handler, mask, flags, safe

=item POSIX::SigRt

%SIGRT, SIGRTMIN, SIGRTMAX

=item POSIX::SigSet

new, addset, delset, emptyset, fillset, ismember

=item POSIX::Termios

new, getattr, getcc, getcflag, getiflag, getispeed, getlflag, getoflag,
getospeed, setattr, setcc, setcflag, setiflag, setispeed, setlflag,
setoflag, setospeed, Baud rate values, Terminal interface values, c_cc
field values, c_cflag field values, c_iflag field values, c_lflag field
values, c_oflag field values

=back

=item PATHNAME CONSTANTS

Constants

=item POSIX CONSTANTS

Constants

=item SYSTEM CONFIGURATION

Constants

=item ERRNO

Constants

=item FCNTL

Constants

=item FLOAT

Constants

=item LIMITS

Constants

=item LOCALE

Constants

=item MATH

Constants

=item SIGNAL

Constants

=item STAT

Constants, Macros

=item STDLIB

Constants

=item STDIO

Constants

=item TIME

Constants

=item UNISTD

Constants

=item WAIT

Constants, WNOHANG, WUNTRACED, Macros, WIFEXITED, WEXITSTATUS, WIFSIGNALED,
WTERMSIG, WIFSTOPPED, WSTOPSIG

=back

=head2 Package::Constants - List all constants declared in a package

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CLASS METHODS

=over 4

=item @@const = Package::Constants->list( PACKAGE_NAME );

=back

=back

=over 4

=item GLOBAL VARIABLES

=over 4

=item $Package::Constants::DEBUG

=back

=back

=over 4

=item AUTHOR

=item COPYRIGHT

=back

=head2 Params::Check - A generic input parsing/checking mechanism.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Template

default, required, strict_type, defined, no_override, store, allow

=item Functions

=over 4

=item check( \%tmpl, \%args, [$verbose] );

Template, Arguments, Verbose

=back

=back

=over 4

=item allow( $test_me, \@@criteria );

string, regexp, subroutine, array ref

=back

=over 4

=item last_error()

=back

=over 4

=item Global Variables

=over 4

=item $Params::Check::VERBOSE

=item $Params::Check::STRICT_TYPE

=item $Params::Check::ALLOW_UNKNOWN

=item $Params::Check::STRIP_LEADING_DASHES

=item $Params::Check::NO_DUPLICATES

=item $Params::Check::PRESERVE_CASE

=item $Params::Check::ONLY_ALLOW_DEFINED

=item $Params::Check::SANITY_CHECK_TEMPLATE

=item $Params::Check::WARNINGS_FATAL

=item $Params::Check::CALLER_DEPTH

=back

=item AUTHOR

=item Acknowledgements

=item COPYRIGHT

=back

=head2 PerlIO - On demand loader for PerlIO layers and root of PerlIO::*
name space

=over 4

=item SYNOPSIS

=item DESCRIPTION

:unix, :stdio, :perlio, :crlf, :mmap, :utf8, :bytes, :raw, :pop, :win32

=over 4

=item Custom Layers

:encoding, :via

=item Alternatives to raw

=item Defaults and how to override them

=item Querying the layers of filehandles

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 PerlIO::encoding - encoding layer

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=back

=head2 PerlIO::scalar - in-memory IO, scalar IO

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item IMPLEMENTATION NOTE

=back

=head2 PerlIO::via - Helper class for PerlIO layers implemented in perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXPECTED METHODS

$class->PUSHED([$mode[,$fh]]), $obj->POPPED([$fh]),
$obj->UTF8($bellowFlag,[$fh]), $obj->OPEN($path,$mode[,$fh]),
$obj->BINMODE([,$fh]), $obj->FDOPEN($fd[,$fh]),
$obj->SYSOPEN($path,$imode,$perm,[,$fh]), $obj->FILENO($fh),
$obj->READ($buffer,$len,$fh), $obj->WRITE($buffer,$fh), $obj->FILL($fh),
$obj->CLOSE($fh), $obj->SEEK($posn,$whence,$fh), $obj->TELL($fh),
$obj->UNREAD($buffer,$fh), $obj->FLUSH($fh), $obj->SETLINEBUF($fh),
$obj->CLEARERR($fh), $obj->ERROR($fh), $obj->EOF($fh)

=item EXAMPLES

=over 4

=item Example - a Hexadecimal Handle

=back

=back

=head2 PerlIO::via::QuotedPrint - PerlIO layer for quoted-printable strings

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item REQUIRED MODULES

=item SEE ALSO

=item ACKNOWLEDGEMENTS

=item COPYRIGHT

=back

=head2 Pod::Checker, podchecker() - check pod documents for syntax errors

=over 4

=item SYNOPSIS

=item OPTIONS/ARGUMENTS

=over 4

=item podchecker()

B<-warnings> =E<gt> I<val>

=back

=item DESCRIPTION

=item DIAGNOSTICS

=over 4

=item Errors

empty =headn, =over on line I<N> without closing =back, =item without
previous =over, =back without previous =over, No argument for =begin, =end
without =begin, Nested =begin's, =for without formatter specification,
unresolved internal link I<NAME>, Unknown command "I<CMD>", Unknown
interior-sequence "I<SEQ>", nested commands
I<CMD>E<lt>...I<CMD>E<lt>...E<gt>...E<gt>, garbled entity I<STRING>, Entity
number out of range, malformed link LE<lt>E<gt>, nonempty ZE<lt>E<gt>,
empty XE<lt>E<gt>, Spurious text after =pod / =cut, Spurious character(s)
after =back

=item Warnings

multiple occurrence of link target I<name>, line containing nothing but
whitespace in paragraph, file does not start with =head, previous =item has
no contents, preceding non-item paragraph(s), =item type mismatch (I<one>
vs. I<two>), I<N> unescaped C<E<lt>E<gt>> in paragraph, Unknown entity, No
items in =over, No argument for =item, empty section in previous paragraph,
Verbatim paragraph in NAME section, =headI<n> without preceding higher
level

=item Hyperlinks

ignoring leading/trailing whitespace in link, (section) in '$page'
deprecated, alternative text/node '%s' contains non-escaped | or /

=back

=item RETURN VALUE

=item EXAMPLES

=item INTERFACE

=back

C<Pod::Checker-E<gt>new( %options )>

C<$checker-E<gt>poderror( @@args )>, C<$checker-E<gt>poderror( {%opts},
@@args )>

C<$checker-E<gt>num_errors()>

C<$checker-E<gt>num_warnings()>

C<$checker-E<gt>name()>

C<$checker-E<gt>node()>

C<$checker-E<gt>idx()>

C<$checker-E<gt>hyperlink()>

=over 4

=item AUTHOR

=back

=head2 Pod::Escapes -- for resolving Pod EE<lt>...E<gt> sequences

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item GOODIES

e2char($e_content), e2charnum($e_content), $Name2character{I<name>},
$Name2character_number{I<name>}, $Latin1Code_to_fallback{I<integer>},
$Latin1Char_to_fallback{I<character>}, $Code2USASCII{I<integer>}

=item CAVEATS

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Find - find POD documents in directory trees

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item C<pod_find( { %opts } , @@directories )>

C<-verbose =E<gt> 1>, C<-perl =E<gt> 1>, C<-script =E<gt> 1>, C<-inc =E<gt>
1>

=back

=over 4

=item C<simplify_name( $str )>

=back

=over 4

=item C<pod_where( { %opts }, $pod )>

C<-inc =E<gt> 1>, C<-dirs =E<gt> [ $dir1, $dir2, ... ]>, C<-verbose =E<gt>
1>

=back

=over 4

=item C<contains_pod( $file , $verbose )>

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 Pod::Html - module to convert pod files to HTML

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item pod2html

backlink, cachedir, css, flush, header, help, hiddendirs, htmldir,
htmlroot, index, infile, libpods, netscape, outfile, podpath, podroot,
quiet, recurse, title, verbose

=item htmlify

=item anchorify

=back

=item ENVIRONMENT

=item AUTHOR

=item SEE ALSO

=item COPYRIGHT

=back

=head2 Pod::InputObjects - objects representing POD input paragraphs,
commands, etc.

=over 4

=item SYNOPSIS

=item REQUIRES

=item EXPORTS

=item DESCRIPTION

package B<Pod::InputSource>, package B<Pod::Paragraph>, package
B<Pod::InteriorSequence>, package B<Pod::ParseTree>

=back

=over 4

=item B<Pod::InputSource>

=back

=over 4

=item B<new()>

=back

=over 4

=item B<name()>

=back

=over 4

=item B<handle()>

=back

=over 4

=item B<was_cutting()>

=back

=over 4

=item B<Pod::Paragraph>

=back

=over 4

=item Pod::Paragraph-E<gt>B<new()>

=back

=over 4

=item $pod_para-E<gt>B<cmd_name()>

=back

=over 4

=item $pod_para-E<gt>B<text()>

=back

=over 4

=item $pod_para-E<gt>B<raw_text()>

=back

=over 4

=item $pod_para-E<gt>B<cmd_prefix()>

=back

=over 4

=item $pod_para-E<gt>B<cmd_separator()>

=back

=over 4

=item $pod_para-E<gt>B<parse_tree()>

=back

=over 4

=item $pod_para-E<gt>B<file_line()>

=back

=over 4

=item B<Pod::InteriorSequence>

=back

=over 4

=item Pod::InteriorSequence-E<gt>B<new()>

=back

=over 4

=item $pod_seq-E<gt>B<cmd_name()>

=back

=over 4

=item $pod_seq-E<gt>B<prepend()>

=back

=over 4

=item $pod_seq-E<gt>B<append()>

=back

=over 4

=item $pod_seq-E<gt>B<nested()>

=back

=over 4

=item $pod_seq-E<gt>B<raw_text()>

=back

=over 4

=item $pod_seq-E<gt>B<left_delimiter()>

=back

=over 4

=item $pod_seq-E<gt>B<right_delimiter()>

=back

=over 4

=item $pod_seq-E<gt>B<parse_tree()>

=back

=over 4

=item $pod_seq-E<gt>B<file_line()>

=back

=over 4

=item Pod::InteriorSequence::B<DESTROY()>

=back

=over 4

=item B<Pod::ParseTree>

=back

=over 4

=item Pod::ParseTree-E<gt>B<new()>

=back

=over 4

=item $ptree-E<gt>B<top()>

=back

=over 4

=item $ptree-E<gt>B<children()>

=back

=over 4

=item $ptree-E<gt>B<prepend()>

=back

=over 4

=item $ptree-E<gt>B<append()>

=back

=over 4

=item $ptree-E<gt>B<raw_text()>

=back

=over 4

=item Pod::ParseTree::B<DESTROY()>

=back

=over 4

=item SEE ALSO

=item AUTHOR

=back

=head2 Pod::LaTeX - Convert Pod data to formatted Latex

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item OBJECT METHODS

C<initialize>

=back

=over 4

=item Data Accessors

B<AddPreamble>

=back

B<AddPostamble>

B<Head1Level>

B<Label>

B<LevelNoNum>

B<MakeIndex>

B<ReplaceNAMEwithSection>

B<StartWithNewPage>

B<TableOfContents>

B<UniqueLabels>

B<UserPreamble>

B<UserPostamble>

B<Lists>

=over 4

=item Subclassed methods

=back

B<begin_pod>

B<end_pod>

B<command>

B<verbatim>

B<textblock>

B<interior_sequence>

=over 4

=item List Methods

B<begin_list>

=back

B<end_list>

B<add_item>

=over 4

=item Methods for headings

B<head>

=back

=over 4

=item Internal methods

B<_output>

=back

B<_replace_special_chars>

B<_replace_special_chars_late>

B<_create_label>

B<_create_index>

B<_clean_latex_commands>

B<_split_delimited>

=over 4

=item NOTES

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=item REVISION

=back

=head2 Pod::Man - Convert POD data to formatted *roff input

=over 4

=item SYNOPSIS

=item DESCRIPTION

center, date, fixed, fixedbold, fixeditalic, fixedbolditalic, name, quotes,
release, section

=item DIAGNOSTICS

roff font should be 1 or 2 chars, not "%s", Invalid quote specification
"%s"

=item BUGS

=item CAVEATS

=item AUTHOR

=item COPYRIGHT AND LICENSE

=item SEE ALSO

=back

=head2 Pod::ParseLink - Parse an LE<lt>E<gt> formatting code in POD text

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Pod::ParseUtils - helpers for POD parsing and conversion

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item Pod::List

Pod::List-E<gt>new()

=back

$list-E<gt>file()

$list-E<gt>start()

$list-E<gt>indent()

$list-E<gt>type()

$list-E<gt>rx()

$list-E<gt>item()

$list-E<gt>parent()

$list-E<gt>tag()

=over 4

=item Pod::Hyperlink

Pod::Hyperlink-E<gt>new()

=back

$link-E<gt>parse($string)

$link-E<gt>markup($string)

$link-E<gt>text()

$link-E<gt>warning()

$link-E<gt>file(), $link-E<gt>line()

$link-E<gt>page()

$link-E<gt>node()

$link-E<gt>alttext()

$link-E<gt>type()

$link-E<gt>link()

=over 4

=item Pod::Cache

Pod::Cache-E<gt>new()

=back

$cache-E<gt>item()

$cache-E<gt>find_page($name)

=over 4

=item Pod::Cache::Item

Pod::Cache::Item-E<gt>new()

=back

$cacheitem-E<gt>page()

$cacheitem-E<gt>description()

$cacheitem-E<gt>path()

$cacheitem-E<gt>file()

$cacheitem-E<gt>nodes()

$cacheitem-E<gt>find_node($name)

$cacheitem-E<gt>idx()

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 Pod::Parser - base class for creating POD filters and translators

=over 4

=item SYNOPSIS

=item REQUIRES

=item EXPORTS

=item DESCRIPTION

=item QUICK OVERVIEW

=item PARSING OPTIONS

B<-want_nonPODs> (default: unset), B<-process_cut_cmd> (default: unset),
B<-warnings> (default: unset)

=back

=over 4

=item RECOMMENDED SUBROUTINE/METHOD OVERRIDES

=back

=over 4

=item B<command()>

C<$cmd>, C<$text>, C<$line_num>, C<$pod_para>

=back

=over 4

=item B<verbatim()>

C<$text>, C<$line_num>, C<$pod_para>

=back

=over 4

=item B<textblock()>

C<$text>, C<$line_num>, C<$pod_para>

=back

=over 4

=item B<interior_sequence()>

=back

=over 4

=item OPTIONAL SUBROUTINE/METHOD OVERRIDES

=back

=over 4

=item B<new()>

=back

=over 4

=item B<initialize()>

=back

=over 4

=item B<begin_pod()>

=back

=over 4

=item B<begin_input()>

=back

=over 4

=item B<end_input()>

=back

=over 4

=item B<end_pod()>

=back

=over 4

=item B<preprocess_line()>

=back

=over 4

=item B<preprocess_paragraph()>

=back

=over 4

=item METHODS FOR PARSING AND PROCESSING

=back

=over 4

=item B<parse_text()>

B<-expand_seq> =E<gt> I<code-ref>|I<method-name>, B<-expand_text> =E<gt>
I<code-ref>|I<method-name>, B<-expand_ptree> =E<gt>
I<code-ref>|I<method-name>

=back

=over 4

=item B<interpolate()>

=back

=over 4

=item B<parse_paragraph()>

=back

=over 4

=item B<parse_from_filehandle()>

=back

=over 4

=item B<parse_from_file()>

=back

=over 4

=item ACCESSOR METHODS

=back

=over 4

=item B<errorsub()>

=back

=over 4

=item B<cutting()>

=back

=over 4

=item B<parseopts()>

=back

=over 4

=item B<output_file()>

=back

=over 4

=item B<output_handle()>

=back

=over 4

=item B<input_file()>

=back

=over 4

=item B<input_handle()>

=back

=over 4

=item B<input_streams()>

=back

=over 4

=item B<top_stream()>

=back

=over 4

=item PRIVATE METHODS AND DATA

=back

=over 4

=item B<_push_input_stream()>

=back

=over 4

=item B<_pop_input_stream()>

=back

=over 4

=item TREE-BASED PARSING

=item CAVEATS

=item SEE ALSO

=item AUTHOR

=back

=head2 Pod::Perldoc::ToChecker - let Perldoc check Pod for errors

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToMan - let Perldoc render Pod as man pages

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEAT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToNroff - let Perldoc convert Pod to nroff

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEAT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToPod - let Perldoc render Pod as ... Pod!

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToRtf - let Perldoc render Pod as RTF

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToText - let Perldoc render Pod as plaintext

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEAT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToTk - let Perldoc use Tk::Pod to render Pod

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=back

=head2 Pod::Perldoc::ToXml - let Perldoc render Pod as XML

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::PlainText - Convert POD data to formatted ASCII text

=over 4

=item SYNOPSIS

=item DESCRIPTION

alt, indent, loose, sentence, width

=item DIAGNOSTICS

Bizarre space in item, Can't open %s for reading: %s, Unknown escape: %s,
Unknown sequence: %s, Unmatched =back

=item RESTRICTIONS

=item NOTES

=item SEE ALSO

=item AUTHOR

=back

=head2 Pod::Plainer - Perl extension for converting Pod to old style Pod.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item EXPORT

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 Pod::Select, podselect() - extract selected sections of POD from
input

=over 4

=item SYNOPSIS

=item REQUIRES

=item EXPORTS

=item DESCRIPTION

=item SECTION SPECIFICATIONS

=item RANGE SPECIFICATIONS

=back

=over 4

=item OBJECT METHODS

=back

=over 4

=item B<curr_headings()>

=back

=over 4

=item B<select()>

=back

=over 4

=item B<add_selection()>

=back

=over 4

=item B<clear_selections()>

=back

=over 4

=item B<match_section()>

=back

=over 4

=item B<is_selected()>

=back

=over 4

=item EXPORTED FUNCTIONS

=back

=over 4

=item B<podselect()>

B<-output>, B<-sections>, B<-ranges>

=back

=over 4

=item PRIVATE METHODS AND DATA

=back

=over 4

=item B<_compile_section_spec()>

=back

=over 4

=item $self->{_SECTION_HEADINGS}

=back

=over 4

=item $self->{_SELECTED_SECTIONS}

=back

=over 4

=item SEE ALSO

=item AUTHOR

=back

=head2 Pod::Simple - framework for parsing Pod

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item MAIN METHODS

C<< $parser = I<SomeClass>->new(); >>, C<< $parser->output_fh( *OUT ); >>,
C<< $parser->output_string( \$somestring ); >>, C<< $parser->parse_file(
I<$some_filename> ); >>, C<< $parser->parse_file( *INPUT_FH ); >>, C<<
$parser->parse_string_document( I<$all_content> ); >>, C<<
$parser->parse_lines( I<...@@lines...>, undef ); >>, C<<
$parser->content_seen >>, C<< I<SomeClass>->filter( I<$filename> ); >>, C<<
I<SomeClass>->filter( I<*INPUT_FH> ); >>, C<< I<SomeClass>->filter(
I<\$document_content> ); >>

=item SECONDARY METHODS

C<< $parser->no_whining( I<SOMEVALUE> ) >>, C<< $parser->no_errata_section(
I<SOMEVALUE> ) >>, C<< $parser->complain_stderr( I<SOMEVALUE> ) >>, C<<
$parser->source_filename >>, C<< $parser->doc_has_started >>, C<<
$parser->source_dead >>

=item CAVEATS

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::Checker -- check the Pod syntax of a document

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::Debug -- put Pod::Simple into trace/debug mode

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEATS

=item GUTS

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::DumpAsText -- dump Pod-parsing events as text

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::DumpAsXML -- turn Pod into XML

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::HTML - convert Pod to HTML

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CALLING FROM THE COMMAND LINE

=item CALLING FROM PERL

=item METHODS

=item SUBCLASSING

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::HTMLBatch - convert several Pod files to several HTML
files

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item FROM THE COMMAND LINE

=back

=item MAIN METHODS

$batchconv = Pod::Simple::HTMLBatch->new;, $batchconv->batch_convert(
I<indirs>, I<outdir> );, $batchconv->batch_convert( undef    , ...);,
$batchconv->batch_convert( q{@@INC}, ...);, $batchconv->batch_convert(
\@@dirs , ...);, $batchconv->batch_convert( "somedir" , ...);,
$batchconv->batch_convert( 'somedir:someother:also' , ...);,
$batchconv->batch_convert( ... , undef );, $batchconv->batch_convert( ... ,
'somedir' );

=over 4

=item ACCESSOR METHODS

$batchconv->verbose( I<nonnegative_integer> );, $batchconv->index(
I<true-or-false> );, $batchconv->contents_file( I<filename> );,
$batchconv->contents_page_start( I<HTML_string> );,
$batchconv->contents_page_end( I<HTML_string> );, $batchconv->add_css( $url
);, $batchconv->add_javascript( $url );, $batchconv->css_flurry(
I<true-or-false> );, $batchconv->javascript_flurry( I<true-or-false> );,
$batchconv->no_contents_links( I<true-or-false> );,
$batchconv->html_render_class( I<classname> );

=back

=item NOTES ON CUSTOMIZATION

=item ASK ME!

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::LinkSection -- represent "section" attributes of L
codes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::Methody -- turn Pod::Simple events into method calls

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHOD CALLING

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::PullParser -- a pull-parser interface to parsing Pod

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

my $token = $parser->get_token, $parser->unget_token( $token ),
$parser->unget_token( $token1, $token2, ... ), $parser->set_source(
$filename ), $parser->set_source( $filehandle_object ),
$parser->set_source( \$document_source ), $parser->set_source(
\@@document_lines ), $parser->parse_file(...),
$parser->parse_string_document(...), $parser->filter(...),
$parser->parse_from_file(...), my $title_string = $parser->get_title, my
$title_string = $parser->get_short_title, $author_name	 =
$parser->get_author, $description_name = $parser->get_description,
$version_block = $parser->get_version

=item NOTE

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::PullParserEndToken -- end-tokens from
Pod::Simple::PullParser

=over 4

=item SYNOPSIS

=item DESCRIPTION

$token->tagname, $token->tagname(I<somestring>), $token->tag(...),
$token->is_tag(I<somestring>) or $token->is_tagname(I<somestring>)

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::PullParserStartToken -- start-tokens from
Pod::Simple::PullParser

=over 4

=item SYNOPSIS

=item DESCRIPTION

$token->tagname, $token->tagname(I<somestring>), $token->tag(...),
$token->is_tag(I<somestring>) or $token->is_tagname(I<somestring>),
$token->attr(I<attrname>), $token->attr(I<attrname>, I<newvalue>),
$token->attr_hash

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::PullParserTextToken -- text-tokens from
Pod::Simple::PullParser

=over 4

=item SYNOPSIS

=item DESCRIPTION

$token->text, $token->text(I<somestring>), $token->text_r()

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::PullParserToken -- tokens from Pod::Simple::PullParser

=over 4

=item SYNOPSIS

=item DESCRIPTION

$token->type, $token->is_start, $token->is_text, $token->is_end,
$token->dump

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::RTF -- format Pod as RTF

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FORMAT CONTROL ATTRIBUTES

$parser->head1_halfpoint_size( I<halfpoint_integer> );,
$parser->head2_halfpoint_size( I<halfpoint_integer> );,
$parser->head3_halfpoint_size( I<halfpoint_integer> );,
$parser->head4_halfpoint_size( I<halfpoint_integer> );,
$parser->codeblock_halfpoint_size( I<halfpoint_integer> );,
$parser->header_halfpoint_size( I<halfpoint_integer> );,
$parser->normal_halfpoint_size( I<halfpoint_integer> );,
$parser->no_proofing_exemptions( I<true_or_false> );, $parser->doc_lang(
I<microsoft_decimal_language_code> )

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::Search - find POD documents in directory trees

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

=item ACCESSORS

$search->inc( I<true-or-false> );, $search->verbose( I<nonnegative-number>
);, $search->limit_glob( I<some-glob-string> );, $search->callback(
I<\&some_routine> );, $search->laborious( I<true-or-false> );,
$search->shadows( I<true-or-false> );, $search->limit_re( I<some-regxp> );,
$search->dir_prefix( I<some-string-value> );, $search->progress(
I<some-progress-object> );, $name2path = $self->name2path;, $path2name =
$self->path2name;

=item MAIN SEARCH METHODS

=over 4

=item C<< $search->survey( @@directories ) >>

C<name2path>, C<path2name>

=item C<< $search->simplify_name( $str ) >>

=item C<< $search->find( $pod ) >>

=item C<< $search->find( $pod, @@search_dirs ) >>

=item C<< $self->contains_pod( $file ) >>

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 Pod::Simple::Subclassing -- write a formatter as a Pod::Simple
subclass

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Events

C<< $parser->_handle_element_start( I<element_name>, I<attr_hashref> ) >>,
C<< $parser->_handle_element_end( I<element_name>  ) >>, C<<
$parser->_handle_text(	I<text_string>	) >>, events with an element_name
of Document, events with an element_name of Para, events with an
element_name of B, C, F, or I, events with an element_name of S, events
with an element_name of X, events with an element_name of L, events with an
element_name of E or Z, events with an element_name of Verbatim, events
with an element_name of head1 .. head4, events with an element_name of
over-bullet, events with an element_name of over-number, events with an
element_name of over-text, events with an element_name of over-block,
events with an element_name of item-bullet, events with an element_name of
item-number, events with an element_name of item-text, events with an
element_name of for, events with an element_name of Data

=item More Pod::Simple Methods

C<< $parser->accept_targets( I<SOMEVALUE> ) >>, C<<
$parser->accept_targets_as_text(  I<SOMEVALUE>	) >>, C<<
$parser->accept_codes( I<Codename>, I<Codename>...  ) >>, C<<
$parser->accept_directive_as_data( I<directive_name> ) >>, C<<
$parser->accept_directive_as_verbatim( I<directive_name> ) >>, C<<
$parser->accept_directive_as_processed( I<directive_name> ) >>, C<<
$parser->nbsp_for_S( I<BOOLEAN> ); >>, C<< $parser->version_report() >>,
C<< $parser->pod_para_count() >>, C<< $parser->line_count() >>, C<<
$parser->nix_X_codes(  I<SOMEVALUE>  ) >>, C<< $parser->merge_text( 
I<SOMEVALUE>  ) >>, C<< $parser->code_handler(	I<CODE_REF>  ) >>, C<<
$parser->cut_handler(  I<CODE_REF>  ) >>, C<< $parser->whine(
I<linenumber>, I<complaint string> ) >>, C<< $parser->scream(
I<linenumber>, I<complaint string> ) >>, C<< $parser->source_dead(1) >>,
C<< $parser->hide_line_numbers( I<SOMEVALUE> ) >>, C<< $parser->no_whining(
I<SOMEVALUE> ) >>, C<< $parser->no_errata_section( I<SOMEVALUE> ) >>, C<<
$parser->complain_stderr( I<SOMEVALUE> ) >>, C<< $parser->bare_output(
I<SOMEVALUE> ) >>, C<< $parser->preserve_whitespace( I<SOMEVALUE> ) >>

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::Text -- format Pod as plaintext

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::TextContent -- get the text content of Pod

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple::XMLOutStream -- turn Pod into XML

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item ABOUT EXTENDING POD

=item ASK ME!

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::SimpleTree, Pod::Simple::SimpleTree -- parse Pod into a simple
parse tree 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=item Tree Contents

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Text - Convert POD data to formatted ASCII text

=over 4

=item SYNOPSIS

=item DESCRIPTION

alt, code, indent, loose, margin, quotes, sentence, width

=item DIAGNOSTICS

Bizarre space in item, Item called without tag, Can't open %s for reading:
%s, Invalid quote specification "%s"

=item NOTES

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Pod::Text::Color - Convert POD data to formatted color ASCII text

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Pod::Text::Overstrike - Convert POD data to formatted overstrike
text

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Pod::Text::Termcap - Convert POD data to ASCII text with format
escapes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Pod::Usage, pod2usage() - print a usage message from embedded pod
documentation

=over 4

=item SYNOPSIS

=item ARGUMENTS

C<-message>, C<-msg>, C<-exitval>, C<-verbose>, C<-sections>, C<-output>,
C<-input>, C<-pathlist>, C<-noperldoc>

=item DESCRIPTION

=item EXAMPLES

=over 4

=item Recommended Use

=back

=item CAVEATS

=item AUTHOR

=item ACKNOWLEDGMENTS

=back

=head2 SDBM_File - Tied access to sdbm files

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>

=item DIAGNOSTICS

=over 4

=item C<sdbm store returned -1, errno 22, key "..." at ...>

=back

=item BUGS AND WARNINGS

=back

=head2 Safe - Compile and execute code in restricted compartments

=over 4

=item SYNOPSIS

=item DESCRIPTION

a new namespace, an operator mask

=item WARNING

=over 4

=item RECENT CHANGES

=item Methods in class Safe

permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)

=item Some Safety Issues

Memory, CPU, Snooping, Signals, State Changes

=item AUTHOR

=back

=back

=head2 Scalar::Util - A selection of general-utility scalar subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

blessed EXPR, dualvar NUM, STRING, isvstring EXPR, isweak EXPR,
looks_like_number EXPR, openhandle FH, refaddr EXPR, reftype EXPR,
set_prototype CODEREF, PROTOTYPE, tainted EXPR, weaken REF

=item KNOWN BUGS

=item SEE ALSO

=item COPYRIGHT

=item BLATANT PLUG

=back

=head2 Search::Dict, look - search for key in dictionary file

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 SelectSaver - save and restore selected file handle

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 SelfLoader - load functions only on demand

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The __DATA__ token

=item SelfLoader autoloading

=item Autoloading and package lexicals

=item SelfLoader and AutoLoader

=item __DATA__, __END__, and the FOOBAR::DATA filehandle.

=item Classes and inherited methods.

=back

=item Multiple packages and fully qualified subroutine names

=back

B<_make_cmd>

=head2 Shell - run shell commands transparently within perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Caveats

=item Escaping Magic Characters

=item Configuration

=back

=item BUGS

=item AUTHOR

=back

=head2 Socket, sockaddr_in, sockaddr_un, inet_aton, inet_ntoa - load the C
socket.h defines and structure manipulators 

=over 4

=item SYNOPSIS

=item DESCRIPTION

inet_aton HOSTNAME, inet_ntoa IP_ADDRESS, INADDR_ANY, INADDR_BROADCAST,
INADDR_LOOPBACK, INADDR_NONE, sockaddr_family SOCKADDR, sockaddr_in PORT,
ADDRESS, sockaddr_in SOCKADDR_IN, pack_sockaddr_in PORT, IP_ADDRESS,
unpack_sockaddr_in SOCKADDR_IN, sockaddr_un PATHNAME, sockaddr_un
SOCKADDR_UN, pack_sockaddr_un PATH, unpack_sockaddr_un SOCKADDR_UN

=back

=head2 Storable - persistence for Perl data structures

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item MEMORY STORE

=item ADVISORY LOCKING

=item SPEED

=item CANONICAL REPRESENTATION

=item CODE REFERENCES

=item FORWARD COMPATIBILITY

utf8 data, restricted hashes, files from future versions of Storable

=item ERROR REPORTING

=item WIZARDS ONLY

=over 4

=item Hooks

C<STORABLE_freeze> I<obj>, I<cloning>, C<STORABLE_thaw> I<obj>, I<cloning>,
I<serialized>, .., C<STORABLE_attach> I<class>, I<cloning>, I<serialized>

=item Predicates

C<Storable::last_op_in_netorder>, C<Storable::is_storing>,
C<Storable::is_retrieving>

=item Recursion

=item Deep Cloning

=back

=item Storable magic

$info = Storable::file_magic( $filename ), C<version>, C<version_nv>,
C<major>, C<minor>, C<hdrsize>, C<netorder>, C<byteorder>, C<intsize>,
C<longsize>, C<ptrsize>, C<nvsize>, C<file>, $info = Storable::read_magic(
$buffer ), $info = Storable::read_magic( $buffer, $must_be_file )

=item EXAMPLES

=item WARNING

=item BUGS

=over 4

=item 64 bit data in perl 5.6.0 and 5.6.1

=back

=item CREDITS

=item AUTHOR

=item SEE ALSO

=back

=head2 Switch - A switch statement for Perl

=over 4

=item VERSION

=item SYNOPSIS

=item BACKGROUND

=item DESCRIPTION

=over 4

=item Allowing fall-through

=item Automating fall-through

=item Alternative syntax

=item Higher-order Operations

=back

=item DEPENDENCIES

=item AUTHOR

=item BUGS

=item LIMITATIONS

=item COPYRIGHT

=back

=head2 Symbol - manipulate Perl symbols and their names

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=back

=head2 Sys::Hostname - Try every conceivable way to get hostname

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 Syslog, Sys::Syslog - Perl interface to the UNIX syslog(3) calls

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=item EXPORTS

=item FUNCTIONS

B<openlog($ident, $logopt, $facility)>, B<syslog($priority, $message)>,
B<syslog($priority, $format, @@args)>, B<Note>,
B<setlogmask($mask_priority)>, B<setlogsock($sock_type)>,
B<setlogsock($sock_type, $stream_location)> (added in Perl 5.004_02),
B<Note>, B<closelog()>

=item THE RULES OF SYS::SYSLOG

=item EXAMPLES

=item CONSTANTS

=over 4

=item Facilities

=item Levels

=back

=item DIAGNOSTICS

C<Invalid argument passed to setlogsock>, C<eventlog passed to setlogsock,
but no Win32 API available>, C<no connection to syslog available>, C<stream
passed to setlogsock, but %s is not writable>, C<stream passed to
setlogsock, but could not find any device>, C<tcp passed to setlogsock, but
tcp service unavailable>, C<syslog: expecting argument %s>, C<syslog:
invalid level/facility: %s>, C<syslog: too many levels given: %s>,
C<syslog: too many facilities given: %s>, C<syslog: level must be given>,
C<udp passed to setlogsock, but udp service unavailable>, C<unix passed to
setlogsock, but path not available>

=item SEE ALSO

=over 4

=item Manual Pages

=item RFCs

=item Articles

=item Event Log

=back

=item AUTHORS & ACKNOWLEDGEMENTS

=item BUGS

=item SUPPORT

AnnoCPAN: Annotated CPAN documentation, CPAN Ratings, RT: CPAN's request
tracker, Search CPAN, Kobes' CPAN Search, Perl Documentation

=item COPYRIGHT

=item LICENSE

=back

=head2 Syslog::Syslog, Sys::Syslog - Perl interface to the UNIX syslog(3)
calls

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=item EXPORTS

=item FUNCTIONS

B<openlog($ident, $logopt, $facility)>, B<syslog($priority, $message)>,
B<syslog($priority, $format, @@args)>, B<Note>,
B<setlogmask($mask_priority)>, B<setlogsock($sock_type)>,
B<setlogsock($sock_type, $stream_location)> (added in Perl 5.004_02),
B<Note>, B<closelog()>

=item THE RULES OF SYS::SYSLOG

=item EXAMPLES

=item CONSTANTS

=over 4

=item Facilities

=item Levels

=back

=item DIAGNOSTICS

C<Invalid argument passed to setlogsock>, C<eventlog passed to setlogsock,
but no Win32 API available>, C<no connection to syslog available>, C<stream
passed to setlogsock, but %s is not writable>, C<stream passed to
setlogsock, but could not find any device>, C<tcp passed to setlogsock, but
tcp service unavailable>, C<syslog: expecting argument %s>, C<syslog:
invalid level/facility: %s>, C<syslog: too many levels given: %s>,
C<syslog: too many facilities given: %s>, C<syslog: level must be given>,
C<udp passed to setlogsock, but udp service unavailable>, C<unix passed to
setlogsock, but path not available>

=item SEE ALSO

=over 4

=item Manual Pages

=item RFCs

=item Articles

=item Event Log

=back

=item AUTHORS & ACKNOWLEDGEMENTS

=item BUGS

=item SUPPORT

AnnoCPAN: Annotated CPAN documentation, CPAN Ratings, RT: CPAN's request
tracker, Search CPAN, Kobes' CPAN Search, Perl Documentation

=item COPYRIGHT

=item LICENSE

=back

=head2 Syslog::win32::Win32, Sys::Syslog::Win32 - Win32 support for
Sys::Syslog

=over 4

=item DESCRIPTION

=item SEE ALSO

=item AUTHORS

=item LICENSE

=back

=head2 Term::ANSIColor - Color screen output using ANSI escape sequences

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item DIAGNOSTICS

Bad escape sequence %s, Bareword "%s" not allowed while "strict subs" in
use, Invalid attribute name %s, Name "%s" used only once: possible typo, No
comma allowed after filehandle, No name for escape sequence %s

=item ENVIRONMENT

ANSI_COLORS_DISABLED

=item RESTRICTIONS

=item NOTES

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT AND LICENSE

=back

=head2 Term::Cap - Perl termcap interface

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item METHODS

=back

=back

B<Tgetent>, OSPEED, TERM

B<Tpad>, B<$string>, B<$cnt>, B<$FH>

B<Tputs>, B<$cap>, B<$cnt>, B<$FH>

B<Tgoto>, B<$cap>, B<$col>, B<$row>, B<$FH>

B<Trequire>

=over 4

=item EXAMPLES

=item COPYRIGHT AND LICENSE

=item AUTHOR

=item SEE ALSO

=back

=head2 Term::Complete - Perl word completion module

=over 4

=item SYNOPSIS

=item DESCRIPTION

E<lt>tabE<gt>, ^D, ^U, E<lt>delE<gt>, E<lt>bsE<gt>

=item DIAGNOSTICS

=item BUGS

=item AUTHOR

=back

=head2 Term::ReadLine - Perl interface to various C<readline> packages.
If no real package is found, substitutes stubs instead of basic functions.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Minimal set of supported functions

C<ReadLine>, C<new>, C<readline>, C<addhistory>, C<IN>, C<OUT>, C<MinLine>,
C<findConsole>, Attribs, C<Features>

=item Additional supported functions

C<tkRunning>, C<ornaments>, C<newTTY>

=item EXPORTS

=item ENVIRONMENT

=item CAVEATS

=back

=head2 Term::UI - Term::ReadLine UI made easy

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item HOW IT WORKS

=item METHODS

=over 4

=item $reply = $term->get_reply( prompt => 'question?', [choices => \@@list,
default => $list[0], multi => BOOL, print_me => "extra text to print &
record", allow => $ref] );

=back

=back

=over 4

=item $bool = $term->ask_yn( prompt => "your question", [default =>
(y|1,n|0), print_me => "extra text to print & record"] )

=back

=over 4

=item ($opts, $munged) = $term->parse_options( STRING );

=back

=over 4

=item $str = $term->history_as_string

=back

=over 4

=item GLOBAL VARIABLES

=over 4

=item $Term::UI::VERBOSE

=item $Term::UI::AUTOREPLY

=item $Term::UI::INVALID

=item $Term::UI::History::HISTORY_FH

=back

=item EXAMPLES

=over 4

=item Basic get_reply sample

=item get_reply with choices

=item get_reply with choices and default

=item get_reply using print_me & multi

=item get_reply & allow

=item an elaborate ask_yn sample

=back

=item See Also

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Term::UI::History

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item history("message string" [,VERBOSE])

=back

=back

=over 4

=item GLOBAL VARIABLES

$HISTORY_FH

=item See Also

=item AUTHOR

=item COPYRIGHT

=back

=head2 Test - provides a simple framework for writing test scripts

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item QUICK START GUIDE

=over 4

=item Functions

C<plan(...)>, C<tests =E<gt> I<number>>, C<todo =E<gt> [I<1,5,14>]>,
C<onfail =E<gt> sub { ... }>, C<onfail =E<gt> \&some_sub>

=back

=back

B<_to_value>

C<ok(...)>

C<skip(I<skip_if_true>, I<args...>)>

=over 4

=item TEST TYPES

NORMAL TESTS, SKIPPED TESTS, TODO TESTS

=item ONFAIL

=item BUGS and CAVEATS

=item ENVIRONMENT

=item NOTE

=item SEE ALSO

=item AUTHOR

=back

=head2 Test::Builder - Backend for building test libraries

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Construction

B<new>

=back

=back

B<create>

B<reset>

=over 4

=item Setting up tests

B<exported_to>

=back

B<plan>

B<expected_tests>

B<no_plan>

B<has_plan>

B<skip_all>

=over 4

=item Running tests

B<ok>

=back

B<is_eq>, B<is_num>

B<isnt_eq>, B<isnt_num>

B<like>, B<unlike>

B<cmp_ok>

=over 4

=item Other Testing Methods

B<BAIL_OUT>

=back

B<skip>

B<todo_skip>

B<skip_rest>

=over 4

=item Test building utility methods

B<maybe_regex>

=back

B<_try>

B<is_fh>

=over 4

=item Test style

B<level>

=back

B<use_numbers>

B<no_diag>, B<no_ending>, B<no_header>

=over 4

=item Output

B<diag>

=back

B<_print>

B<_print_diag>

B<output>, B<failure_output>, B<todo_output>

carp, croak

=over 4

=item Test Status and Info

B<current_test>

=back

B<summary>

B<details>

B<todo>

B<caller>

B<_sanity_check>

B<_whoa>

B<_my_exit>

=over 4

=item EXIT CODES

=item THREADS

=item EXAMPLES

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 Test::Builder::Module - Base class for test modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Importing

=back

=back

=over 4

=item Builder

=back

=head2 Test::Builder::Tester - test testsuites that have been built with
Test::Builder

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item Functions

test_out, test_err

=back

test_fail

test_diag

test_test, title (synonym 'name', 'label'), skip_out, skip_err

line_num

color

=over 4

=item BUGS

=item AUTHOR

=item NOTES

=item SEE ALSO

=back

=head2 Test::Builder::Tester::Color - turn on colour in
Test::Builder::Tester

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item AUTHOR

=item BUGS

=item SEE ALSO

=back

=head2 Test::Harness - Run Perl standard test scripts with statistics

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Taint mode

=item Configuration variables.

C<$Test::Harness::Verbose>, C<$Test::Harness::switches>,
C<$Test::Harness::Timer>

=item Failure

B<Failed Test>, B<Stat>, B<Wstat>, B<Total>, B<Fail>, B<List of Failed>

=back

=item FUNCTIONS

=over 4

=item runtests( @@test_files )

=back

=back

=over 4

=item execute_tests( tests => \@@test_files, out => \*FH )

=back

=over 4

=item EXPORT

=item DIAGNOSTICS

C<All tests successful.\nFiles=%d,  Tests=%d, %s>, C<FAILED tests
%s\n\tFailed %d/%d tests, %.2f%% okay.>, C<Test returned status %d (wstat
%d)>, C<Failed 1 test, %.2f%% okay. %s>, C<Failed %d/%d tests, %.2f%% okay.
%s>, C<FAILED--Further testing stopped: %s>

=item ENVIRONMENT VARIABLES THAT TEST::HARNESS SETS

C<HARNESS_ACTIVE>, C<HARNESS_VERSION>

=item ENVIRONMENT VARIABLES THAT AFFECT TEST::HARNESS

C<HARNESS_COLUMNS>, C<HARNESS_COMPILE_TEST>, C<HARNESS_DEBUG>,
C<HARNESS_FILELEAK_IN_DIR>, C<HARNESS_NOTTY>, C<HARNESS_PERL>,
C<HARNESS_PERL_SWITCHES>, C<HARNESS_TIMER>, C<HARNESS_VERBOSE>,
C<HARNESS_STRAP_CLASS>

=item EXAMPLE

=item SEE ALSO

=item TODO

=item BUGS

=item SUPPORT

AnnoCPAN: Annotated CPAN documentation, CPAN Ratings, RT: CPAN's request
tracker, Search CPAN

=item SOURCE CODE

=item AUTHORS

=item COPYRIGHT

=back

=head2 Test::Harness::Assert - simple assert

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item C<assert()>

=back

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 Test::Harness::Iterator - Internal Test::Harness Iterator

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item new()

=item next()

=back

=back

=head2 Test::Harness::Point - object for tracking a single test point

=over 4

=item SYNOPSIS

=item CONSTRUCTION

=over 4

=item new()

=back

=back

=over 4

=item from_test_line( $line )

=back

=over 4

=item ACCESSORS

ok, number

=back

=head2 Test::Harness::Results - object for tracking results from a single
test file

=over 4

=item SYNOPSIS

=item CONSTRUCTION

=over 4

=item new()

=back

=back

=over 4

=item ACCESSORS

wait, exit

=back

=head2 Test::Harness::Straps - detailed analysis of test results

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTION

=over 4

=item new()

=back

=back

=over 4

=item ANALYSIS

=over 4

=item $strap->analyze( $name, \@@output_lines )

=back

=back

=over 4

=item $strap->analyze_file( $test_file )

=back

=over 4

=item Parsing

=back

=over 4

=item EXAMPLES

=item AUTHOR

=item SEE ALSO

=back

=head2 Test::Harness::TAP - Documentation for the TAP format

=over 4

=item SYNOPSIS

=item TODO

=item THE TAP FORMAT

=item HARNESS BEHAVIOR

=item TESTS LINES AND THE PLAN

=over 4

=item The plan

=item The test line

C<ok> or C<not ok>, Test number, Description, Directive, ok/not ok
(required), Test number (recommended), Description (recommended), Directive
(only when necessary)

=back

=item DIRECTIVES

=over 4

=item TODO tests

=item Skipping tests

=back

=item OTHER LINES

=over 4

=item Bail out!

=item Diagnostics

=item Anything else

=back

=item EXAMPLES

=over 4

=item Common with explanation

=item Unknown amount and failures

=item Giving up

=item Skipping a few

=item Skipping everything

=item Got spare tuits?

=item Creative liberties

=back

=item Non-Perl TAP

=over 4

=item C/C++

Specify a test plan, Run tests, Skip tests in certain situations, Have TODO
tests, Produce TAP compatible diagnostics

=item Python

=item JavaScript

=item PHP

phpt, PHPUnit, SimpleTest, Apache-Test

=back

=item AUTHORS

=item ACKNOWLEDGEMENTS

=item COPYRIGHT

=back

=head2 Test::Harness::Util - Utility functions for Test::Harness::*

=over 4

=item SYNOPSIS

=item PUBLIC FUNCTIONS

=over 4

=item all_in( {parm => value, parm => value} )

start, recurse

=back

=back

=over 4

=item shuffle( @@list )

=back

=over 4

=item blibdir()

=back

=head2 Test::More - yet another framework for writing test scripts

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item I love it when a plan comes together

=back

=back

=over 4

=item Test names

=item I'm ok, you're not ok.

B<ok>

=back

B<is>, B<isnt>

B<like>

B<unlike>

B<cmp_ok>

B<can_ok>

B<isa_ok>

B<pass>, B<fail>

=over 4

=item Module tests

B<use_ok>

=back

B<require_ok>

=over 4

=item Complex data structures

B<is_deeply>

=back

=over 4

=item Diagnostics

B<diag>

=back

=over 4

=item Conditional tests

B<SKIP: BLOCK>

=back

B<TODO: BLOCK>, B<todo_skip>

When do I use SKIP vs. TODO?

=over 4

=item Test control

B<BAIL_OUT>

=back

=over 4

=item Discouraged comparison functions

B<eq_array>

=back

B<eq_hash>

B<eq_set>

=over 4

=item Extending and Embedding Test::More

B<builder>

=back

=over 4

=item EXIT CODES

=item CAVEATS and NOTES

Backwards compatibility, Overloaded objects, Threads, Test::Harness upgrade

=item HISTORY

=item SEE ALSO

=item AUTHORS

=item BUGS

=item COPYRIGHT

=back

=head2 Test::Simple - Basic utilities for writing tests.

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<ok>

=back

=over 4

=item EXAMPLE

=item CAVEATS

=item NOTES

=item HISTORY

=item SEE ALSO

L<Test::More>, L<Test>, L<Test::Unit>, L<Test::Inline>, L<SelfTest>,
L<Test::Harness>

=item AUTHORS

=item COPYRIGHT

=back

=head2 Test::Tutorial - A tutorial about writing really basic tests

=over 4

=item DESCRIPTION

=over 4

=item Nuts and bolts of testing.

=item Where to start?

=item Names

=item Test the manual

=item Sometimes the tests are wrong

=item Testing lots of values

=item Informative names

=item Skipping tests

=item Todo tests

=item Testing with taint mode.

=back

=item FOOTNOTES

=item AUTHORS

=item COPYRIGHT

=back

=head2 Text::Abbrev, abbrev - create an abbreviation table from a list

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLE

=back

=head2 Text::Balanced - Extract delimited text sequences from strings.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item General behaviour in list contexts

[0], [1], [2]

=item General behaviour in scalar and void contexts

=item A note about prefixes

=item C<extract_delimited>

=item C<extract_bracketed>

=item C<extract_variable>

[0], [1], [2]

=item C<extract_tagged>

C<reject =E<gt> $listref>, C<ignore =E<gt> $listref>, C<fail =E<gt> $str>,
[0], [1], [2], [3], [4], [5]

=item C<gen_extract_tagged>

=item C<extract_quotelike>

[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10]

=item C<extract_quotelike> and "here documents"

[0], [1], [2], [3], [4], [5], [6], [7..10]

=item C<extract_codeblock>

=item C<extract_multiple>

=item C<gen_delimited_pat>

=item C<delimited_pat>

=back

=item DIAGNOSTICS

 C<Did not find a suitable bracket: "%s">,  C<Did not find prefix: /%s/>, 
C<Did not find opening bracket after prefix: "%s">,  C<No quotelike
operator found after prefix: "%s">,  C<Unmatched closing bracket: "%c">, 
C<Unmatched opening bracket(s): "%s">, C<Unmatched embedded quote (%s)>,
C<Did not find closing delimiter to match '%s'>,  C<Mismatched closing
bracket: expected "%c" but found "%s">,  C<No block delimiter found after
quotelike "%s">, C<Did not find leading dereferencer>, C<Bad identifier
after dereferencer>, C<Did not find expected opening bracket at %s>,
C<Improperly nested codeblock at %s>,  C<Missing second block for quotelike
"%s">, C<No match found for opening bracket>, C<Did not find opening tag:
/%s/>, C<Unable to construct closing tag to match: /%s/>, C<Found invalid
nested tag: %s>, C<Found unbalanced nested tag: %s>, C<Did not find closing
tag>

=item AUTHOR

=item BUGS AND IRRITATIONS

=item COPYRIGHT

=back

=head2 Text::ParseWords - parse text into an array of tokens or array of
arrays

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=item AUTHORS

=back

=head2 Text::Soundex - Implementation of the soundex algorithm.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=item LIMITATIONS

=item MAINTAINER

=item HISTORY

=back

=head2 Text::Tabs -- expand and unexpand tabs per the unix expand(1) and
unexpand(1)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLE

=item LICENSE

=back

=head2 Text::Wrap - line wrapping to form simple paragraphs

=over 4

=item SYNOPSIS 

=item DESCRIPTION

=item OVERRIDES

=item EXAMPLES

=item LICENSE

=back

=head2 Thread - Manipulate threads in Perl (for old code only)

=over 4

=item DEPRECATED

=item HISTORY

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

$thread = Thread->new(\&start_sub), $thread = Thread->new(\&start_sub,
LIST), lock VARIABLE, async BLOCK;, Thread->self, Thread->list, cond_wait
VARIABLE, cond_signal VARIABLE, cond_broadcast VARIABLE, yield

=item METHODS

join, detach, equal, tid, done

=item DEFUNCT

lock(\&sub), eval, flags

=item SEE ALSO

=back

=head2 Thread::Queue - thread-safe queues

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS AND METHODS

new, enqueue LIST, dequeue, dequeue_nb, pending

=item SEE ALSO

=back

=head2 Thread::Semaphore - thread-safe semaphores

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS AND METHODS

new, new NUMBER, down, down NUMBER, up, up NUMBER

=back

=head2 Tie::Array - base class for tied arrays

=over 4

=item SYNOPSIS

=item DESCRIPTION

TIEARRAY classname, LIST, STORE this, index, value, FETCH this, index,
FETCHSIZE this, STORESIZE this, count, EXTEND this, count, EXISTS this,
key, DELETE this, key, CLEAR this, DESTROY this, PUSH this, LIST, POP this,
SHIFT this, UNSHIFT this, LIST, SPLICE this, offset, length, LIST

=item CAVEATS

=item AUTHOR

=back

=head2 Tie::File - Access the lines of a disk file via a Perl array

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item C<recsep>

=item C<autochomp>

=item C<mode>

=item C<memory>

=item C<dw_size>

=item Option Format

=back

=item Public Methods

=over 4

=item C<flock>

=item C<autochomp>

=item C<defer>, C<flush>, C<discard>, and C<autodefer>

=item C<offset>

=back

=item Tying to an already-opened filehandle

=item Deferred Writing

=over 4

=item Autodeferring

=back

=item CONCURRENT ACCESS TO FILES

=item CAVEATS

=item SUBCLASSING

=item WHAT ABOUT C<DB_File>?

=item AUTHOR

=item LICENSE

=item WARRANTY

=item THANKS

=item TODO

=back

=head2 Tie::Handle - base class definitions for tied handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

TIEHANDLE classname, LIST, WRITE this, scalar, length, offset, PRINT this,
LIST, PRINTF this, format, LIST, READ this, scalar, length, offset,
READLINE this, GETC this, CLOSE this, OPEN this, filename, BINMODE this,
EOF this, TELL this, SEEK this, offset, whence, DESTROY this

=item MORE INFORMATION

=item COMPATIBILITY

=back

=head2 Tie::Hash, Tie::StdHash, Tie::ExtraHash - base class definitions for
tied hashes

=over 4

=item SYNOPSIS

=item DESCRIPTION

TIEHASH classname, LIST, STORE this, key, value, FETCH this, key, FIRSTKEY
this, NEXTKEY this, lastkey, EXISTS this, key, DELETE this, key, CLEAR
this, SCALAR this

=item Inheriting from B<Tie::StdHash>

=item Inheriting from B<Tie::ExtraHash>

=item C<SCALAR>, C<UNTIE> and C<DESTROY>

=item MORE INFORMATION

=back

=head2 Tie::Hash::NamedCapture - Named regexp capture buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Tie::Memoize - add data to hash when needed

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Inheriting from B<Tie::Memoize>

=item EXAMPLE

=item BUGS

=item AUTHOR

=back

=head2 Tie::RefHash - use references as hash keys

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLE

=item THREAD SUPPORT

=item STORABLE SUPPORT

=item RELIC SUPPORT

=item MAINTAINER

=item AUTHOR

=item SEE ALSO

=back

=head2 Tie::Scalar, Tie::StdScalar - base class definitions for tied
scalars

=over 4

=item SYNOPSIS

=item DESCRIPTION

TIESCALAR classname, LIST, FETCH this, STORE this, value, DESTROY this

=item MORE INFORMATION

=back

=head2 Tie::SubstrHash - Fixed-table-size, fixed-key-length hashing

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEATS

=back

=head2 Time::HiRes - High resolution alarm, sleep, gettimeofday, interval
timers

=over 4

=item SYNOPSIS

=item DESCRIPTION

gettimeofday (), usleep ( $useconds ), nanosleep ( $nanoseconds ), ualarm (
$useconds [, $interval_useconds ] ), tv_interval, time (), sleep (
$floating_seconds ), alarm ( $floating_seconds [,
$interval_floating_seconds ] ), setitimer ( $which, $floating_seconds [,
$interval_floating_seconds ] ), getitimer ( $which ), clock_gettime (
$which ), clock_getres ( $which ), clock_nanosleep ( $which, $nanoseconds,
$flags = 0), clock(), stat, stat FH, stat EXPR

=item EXAMPLES

=item C API

=item DIAGNOSTICS

=over 4

=item useconds or interval more than ...

=item negative time not invented yet

=item internal error: useconds < 0 (unsigned ... signed ...)

=back

=item CAVEATS

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT AND LICENSE

=back

=head2 Time::Local - efficiently compute time from local and GMT time

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item C<timelocal()> and C<timegm()>

=item C<timelocal_nocheck()> and C<timegm_nocheck()>

=item Year Value Interpretation

=item Limits of time_t

=item Ambiguous Local Times (DST)

=item Non-Existent Local Times (DST)

=item Negative Epoch Values

=back

=item IMPLEMENTATION

=item BUGS

=item SUPPORT

=item COPYRIGHT

=item AUTHOR

=back

=head2 Time::Piece - Object Oriented time objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=over 4

=item Local Locales

=item Date Calculations

=item Date Comparisons

=item Date Parsing

=item YYYY-MM-DDThh:mm:ss

=item Week Number

=item Global Overriding

=back

=item AUTHOR

=item License

=item SEE ALSO

=item BUGS

=back

=head2 Time::Piece::Seconds, Time::Seconds - a simple API to convert
seconds to other date values

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=item AUTHOR

=item LICENSE

=item Bugs

=back

=head2 Time::Seconds - a simple API to convert seconds to other date values

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=item AUTHOR

=item LICENSE

=item Bugs

=back

=head2 Time::gmtime - by-name interface to Perl's built-in gmtime()
function

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item AUTHOR

=back

=head2 Time::localtime - by-name interface to Perl's built-in localtime()
function

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item AUTHOR

=back

=head2 Time::tm - internal object used by Time::gmtime and Time::localtime

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 UNIVERSAL - base class for ALL classes (blessed references)

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<< $obj->isa( TYPE ) >>, C<< CLASS->isa( TYPE ) >>, C<< eval { VAL->isa(
TYPE ) } >>, C<TYPE>, C<$obj>, C<CLASS>, C<VAL>, C<< $obj->DOES( ROLE ) >>,
C<< CLASS->DOES( ROLE ) >>, C<< $obj->can( METHOD ) >>, C<< CLASS->can(
METHOD ) >>, C<< eval { VAL->can( METHOD ) } >>, C<VERSION ( [ REQUIRE ] )>

=item EXPORTS

=back

=head2 Unicode::Collate - Unicode Collation Algorithm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Constructor and Tailoring

UCA_Version, alternate, backwards, entry, hangul_terminator, ignoreChar,
ignoreName, katakana_before_hiragana, level, normalization, overrideCJK,
overrideHangul, preprocess, rearrange, table, undefChar, undefName,
upper_before_lower, variable

=item Methods for Collation

C<@@sorted = $Collator-E<gt>sort(@@not_sorted)>, C<$result =
$Collator-E<gt>cmp($a, $b)>, C<$result = $Collator-E<gt>eq($a, $b)>,
C<$result = $Collator-E<gt>ne($a, $b)>, C<$result = $Collator-E<gt>lt($a,
$b)>, C<$result = $Collator-E<gt>le($a, $b)>, C<$result =
$Collator-E<gt>gt($a, $b)>, C<$result = $Collator-E<gt>ge($a, $b)>,
C<$sortKey = $Collator-E<gt>getSortKey($string)>, C<$sortKeyForm =
$Collator-E<gt>viewSortKey($string)>

=item Methods for Searching

C<$position = $Collator-E<gt>index($string, $substring[, $position])>,
C<($position, $length) = $Collator-E<gt>index($string, $substring[,
$position])>, C<$match_ref = $Collator-E<gt>match($string, $substring)>,
C<($match)   = $Collator-E<gt>match($string, $substring)>, C<@@match =
$Collator-E<gt>gmatch($string, $substring)>, C<$count =
$Collator-E<gt>subst($string, $substring, $replacement)>, C<$count =
$Collator-E<gt>gsubst($string, $substring, $replacement)>

=item Other Methods

C<%old_tailoring = $Collator-E<gt>change(%new_tailoring)>, C<$version =
$Collator-E<gt>version()>, C<UCA_Version()>, C<Base_Unicode_Version()>

=back

=item EXPORT

=item INSTALL

=item CAVEATS

Normalization, Conformance Test

=item AUTHOR, COPYRIGHT AND LICENSE

=item SEE ALSO

Unicode Collation Algorithm - UTS #10, The Default Unicode Collation
Element Table (DUCET), The conformance test for the UCA, Hangul Syllable
Type, Unicode Normalization Forms - UAX #15

=back

=head2 Unicode::Normalize - Unicode Normalization Forms

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Normalization Forms

C<$NFD_string = NFD($string)>, C<$NFC_string = NFC($string)>,
C<$NFKD_string = NFKD($string)>, C<$NFKC_string = NFKC($string)>,
C<$FCD_string = FCD($string)>, C<$FCC_string = FCC($string)>,
C<$normalized_string = normalize($form_name, $string)>

=item Decomposition and Composition

C<$decomposed_string = decompose($string [, $useCompatMapping])>,
C<$reordered_string = reorder($string)>, C<$composed_string =
compose($string)>

=item Quick Check

C<$result = checkNFD($string)>, C<$result = checkNFC($string)>, C<$result =
checkNFKD($string)>, C<$result = checkNFKC($string)>, C<$result =
checkFCD($string)>, C<$result = checkFCC($string)>, C<$result =
check($form_name, $string)>

=item Character Data

C<$canonical_decomposition = getCanon($code_point)>,
C<$compatibility_decomposition = getCompat($code_point)>,
C<$code_point_composite = getComposite($code_point_here,
$code_point_next)>, C<$combining_class = getCombinClass($code_point)>,
C<$may_be_composed_with_prev_char = isComp2nd($code_point)>,
C<$is_exclusion = isExclusion($code_point)>, C<$is_singleton =
isSingleton($code_point)>, C<$is_non_starter_decomposition =
isNonStDecomp($code_point)>, C<$is_Full_Composition_Exclusion =
isComp_Ex($code_point)>, C<$NFD_is_NO = isNFD_NO($code_point)>,
C<$NFC_is_NO = isNFC_NO($code_point)>, C<$NFC_is_MAYBE =
isNFC_MAYBE($code_point)>, C<$NFKD_is_NO = isNFKD_NO($code_point)>,
C<$NFKC_is_NO = isNFKC_NO($code_point)>, C<$NFKC_is_MAYBE =
isNFKC_MAYBE($code_point)>

=back

=item EXPORT

=item CAVEATS

Perl's version vs. Unicode version, Correction of decomposition mapping,
Revised definition of canonical composition

=item AUTHOR

=item SEE ALSO

http://www.unicode.org/reports/tr15/,
http://www.unicode.org/Public/UNIDATA/CompositionExclusions.txt,
http://www.unicode.org/Public/UNIDATA/DerivedNormalizationProps.txt,
http://www.unicode.org/Public/UNIDATA/NormalizationCorrections.txt,
http://www.unicode.org/review/pr-29.html, http://www.unicode.org/notes/tn5/

=back

=head2 Unicode::UCD - Unicode character database

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item charinfo

=back

=over 4

=item charblock

=back

=over 4

=item charscript

=back

=over 4

=item charblocks

=back

=over 4

=item charscripts

=back

=over 4

=item Blocks versus Scripts

=item Matching Scripts and Blocks

=item Code Point Arguments

=item charinrange

=back

=over 4

=item general_categories

=back

=over 4

=item bidi_types

=back

=over 4

=item compexcl

=back

=over 4

=item casefold

=back

=over 4

=item casespec

=back

=over 4

=item namedseq()

=back

=over 4

=item Unicode::UCD::UnicodeVersion

=back

=over 4

=item Implementation Note

=back

=over 4

=item BUGS

=item AUTHOR

=back

=head2 User::grent - by-name interface to Perl's built-in getgr*()
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item AUTHOR

=back

=head2 User::pwent - by-name interface to Perl's built-in getpw*()
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item System Specifics

=back

=item NOTE

=item AUTHOR

=item HISTORY

March 18th, 2000

=back

=head2 Win32 - Interfaces to some Win32 API Functions

=over 4

=item DESCRIPTION

=over 4

=item Alphabetical Listing of Win32 Functions

Win32::AbortSystemShutdown(MACHINE), Win32::BuildNumber(),
Win32::CopyFile(FROM, TO, OVERWRITE), Win32::CreateDirectory(DIRECTORY),
Win32::CreateFile(FILE), Win32::DomainName(),
Win32::ExpandEnvironmentStrings(STRING), Win32::FormatMessage(ERRORCODE),
Win32::FsType(), Win32::FreeLibrary(HANDLE),
Win32::GetANSIPathName(FILENAME), Win32::GetArchName(),
Win32::GetChipName(), Win32::GetCwd(), Win32::GetCurrentThreadId(),
Win32::GetFileVersion(FILENAME), Win32::GetFolderPath(FOLDER [, CREATE]),
Win32::GetFullPathName(FILENAME), Win32::GetLastError(),
Win32::GetLongPathName(PATHNAME), Win32::GetNextAvailDrive(),
Win32::GetOSVersion(), Win32::GetOSName(),
Win32::GetShortPathName(PATHNAME), Win32::GetProcAddress(INSTANCE,
PROCNAME), Win32::GetTickCount(), Win32::GuidGen(), Win32::IsAdminUser(),
Win32::IsWinNT(), Win32::IsWin95(), Win32::LoadLibrary(LIBNAME),
Win32::LoginName(), Win32::LookupAccountName(SYSTEM, ACCOUNT, DOMAIN, SID,
SIDTYPE), Win32::LookupAccountSID(SYSTEM, SID, ACCOUNT, DOMAIN, SIDTYPE),
Win32::MsgBox(MESSAGE [, FLAGS [, TITLE]]), Win32::NodeName(),
Win32::OutputDebugString(STRING), Win32::RegisterServer(LIBRARYNAME),
Win32::SetChildShowWindow(SHOWWINDOW), Win32::SetCwd(NEWDIRECTORY),
Win32::SetLastError(ERROR), Win32::Sleep(TIME), Win32::Spawn(COMMAND, ARGS,
PID), Win32::UnregisterServer(LIBRARYNAME)

=back

=back

=head2 Win32API::File - Low-level access to Win32 system API calls for
files/dirs.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Object Oriented/Tied Handle Interface

=item Exports

C<":Func">, attrLetsToBits, C<$uBits= attrLetsToBits( $sAttributeLetters
)>, C<"a">, C<"c">, C<"h">, C<"o">, C<"r">, C<"s">, C<"t">, createFile,
C<$hObject= createFile( $sPath )>, C<$hObject= createFile( $sPath,
$rvhvOptions )>, C<$hObject= createFile( $sPath, $svAccess )>, C<$hObject=
createFile( $sPath, $svAccess, $rvhvOptions )>, C<$hObject= createFile(
$sPath, $svAccess, $svShare )>, C<$hObject= createFile( $sPath, $svAccess,
$svShare, $rvhvOptions )>, C<"q">, C<"r">, C<"w">, C<"k">, C<"t">, C<"n">,
C<"c">, C<"e">, C<"kc">, C<"ke">, C<"tc">, C<"te">, C<"nc">, C<"ne">, Flags
=> $uFlags, Attributes => $sAttributes, Security => $pSecurityAttributes,
Model => $hModelFile, Access => $sAccess, Access => $uAccess, Create =>
$sCreate, Create => $uCreate, Share => $sShare, Share => $uShare,
getLogicalDrives, C<@@roots= getLogicalDrives()>, CloseHandle,
C<CloseHandle( $hObject )>, CopyFile, C<CopyFile( $sOldFileName,
$sNewFileName, $bFailIfExists )>, CreateFile, C<$hObject= CreateFile(
$sPath, $uAccess, $uShare, $pSecAttr, $uCreate, $uFlags, $hModel )>,
C<"//./PhysicalDrive0">, C<"//./C:">, C<"//./A:">, C<"//./PIPE/PipeName">,
DefineDosDevice, C<DefineDosDevice( $uFlags, $sDosDeviceName, $sTargetPath
)>, C<DDD_RAW_TARGET_PATH>, C<DDD_REMOVE_DEFINITION>,
C<DDD_EXACT_MATCH_ON_REMOVE>, DeleteFile, C<DeleteFile( $sFileName )>,
DeviceIoControl, C<DeviceIoControl( $hDevice, $uIoControlCode, $pInBuf,
$lInBuf, $opOutBuf, $lOutBuf, $olRetBytes, $pOverlapped )>, FdGetOsFHandle,
C<$hNativeHandle= FdGetOsFHandle( $ivFd )>, fileConstant, C<$value=
fileConstant( $sConstantName )>, fileLastError, C<$svError=
fileLastError();>, C<fileLastError( $uError );>, GetDriveType,
C<$uDriveType= GetDriveType( $sRootPath )>, C<DRIVE_UNKNOWN>,
C<DRIVE_NO_ROOT_DIR>, C<DRIVE_REMOVABLE>, C<DRIVE_FIXED>, C<DRIVE_REMOTE>,
C<DRIVE_CDROM>, C<DRIVE_RAMDISK>, GetFileAttributes, C<$uAttrs =
GetFileAttributes( $sPath )>, C<FILE_ATTRIBUTE_ARCHIVE>,
C<FILE_ATTRIBUTE_COMPRESSED>, C<FILE_ATTRIBUTE_DEVICE>,
C<FILE_ATTRIBUTE_DIRECTORY>, C<FILE_ATTRIBUTE_ENCRYPTED>,
C<FILE_ATTRIBUTE_HIDDEN>, C<FILE_ATTRIBUTE_NORMAL>,
C<FILE_ATTRIBUTE_NOT_CONTENT_INDEXED>, C<FILE_ATTRIBUTE_OFFLINE>,
C<FILE_ATTRIBUTE_READONLY>, C<FILE_ATTRIBUTE_REPARSE_POINT>,
C<FILE_ATTRIBUTE_SPARSE_FILE>, C<FILE_ATTRIBUTE_SYSTEM>,
C<FILE_ATTRIBUTE_TEMPORARY>, GetFileType, C<$uFileType= GetFileType( $hFile
)>, C<FILE_TYPE_UNKNOWN>, C<FILE_TYPE_DISK>, C<FILE_TYPE_CHAR>,
C<FILE_TYPE_PIPE>, getFileSize, C<$size= getFileSize( $hFile )>,
GetFileSize, C<$iSizeLow= GetFileSize($win32Handle, $iSizeHigh)>,
GetOverlappedResult, C<$bRetval= GetOverlappedResult( $win32Handle,
$pOverlapped,  $numBytesTransferred, $bWait )>, GetLogicalDrives,
C<$uDriveBits= GetLogicalDrives()>, GetLogicalDriveStrings, C<$olOutLength=
GetLogicalDriveStrings( $lBufSize, $osBuffer )>, GetHandleInformation,
C<GetHandleInformation( $hObject, $ouFlags )>, GetOsFHandle,
C<$hNativeHandle= GetOsFHandle( FILE )>, GetVolumeInformation,
C<GetVolumeInformation( $sRootPath, $osVolName, $lVolName, $ouSerialNum,
$ouMaxNameLen, $ouFsFlags, $osFsType, $lFsType )>, C<FS_CASE_IS_PRESERVED>,
C<FS_CASE_SENSITIVE>, C<FS_UNICODE_STORED_ON_DISK>, C<FS_PERSISTENT_ACLS>,
C<FS_FILE_COMPRESSION>, C<FS_VOL_IS_COMPRESSED>, IsRecognizedPartition,
C<IsRecognizedPartition( $ivPartitionType )>, IsContainerPartition,
C<IsContainerPartition( $ivPartitionType )>, MoveFile, C<MoveFile(
$sOldName, $sNewName )>, MoveFileEx, C<MoveFileEx( $sOldName, $sNewName,
$uFlags )>, C<MOVEFILE_REPLACE_EXISTING>, C<MOVEFILE_COPY_ALLOWED>,
C<MOVEFILE_DELAY_UNTIL_REBOOT>, C<MOVEFILE_WRITE_THROUGH>, OsFHandleOpen,
C<OsFHandleOpen( FILE, $hNativeHandle, $sMode )>, OsFHandleOpenFd, C<$ivFD=
OsFHandleOpenFd( $hNativeHandle, $uMode )>, QueryDosDevice, C<$olTargetLen=
QueryDosDevice( $sDosDeviceName, $osTargetPath, $lTargetBuf )>, ReadFile,
C<ReadFile( $hFile, $opBuffer, $lBytes, $olBytesRead, $pOverlapped )>,
SetErrorMode, C<$uOldMode= SetErrorMode( $uNewMode )>,
C<SEM_FAILCRITICALERRORS>, C<SEM_NOALIGNMENTFAULTEXCEPT>,
C<SEM_NOGPFAULTERRORBOX>, C<SEM_NOOPENFILEERRORBOX>, setFilePointer,
C<$uNewPos = setFilePointer( $hFile, $ivOffset, $uFromWhere )>,
SetFilePointer, C<$uNewPos = SetFilePointer( $hFile, $ivOffset,
$ioivOffsetHigh, $uFromWhere )>, SetHandleInformation,
C<SetHandleInformation( $hObject, $uMask, $uFlags )>, WriteFile,
C<WriteFile( $hFile, $pBuffer, $lBytes, $ouBytesWritten, $pOverlapped )>,
C<":FuncA">, C<":FuncW">, CopyFileW, C<CopyFileW( $swOldFileName,
$swNewFileName, $bFailIfExists )>, CreateFileW, C<$hObject= CreateFileW(
$swPath, $uAccess, $uShare, $pSecAttr, $uCreate, $uFlags, $hModel )>,
DefineDosDeviceW, C<DefineDosDeviceW( $uFlags, $swDosDeviceName,
$swTargetPath )>, DeleteFileW, C<DeleteFileW( $swFileName )>,
GetDriveTypeW, C<$uDriveType= GetDriveTypeW( $swRootPath )>,
GetFileAttributesW, C<$uAttrs= GetFileAttributesW( $swPath )>,
GetLogicalDriveStringsW, C<$olwOutLength= GetLogicalDriveStringsW(
$lwBufSize, $oswBuffer )>, GetVolumeInformationW, C<GetVolumeInformationW(
$swRootPath, $oswVolName, $lwVolName, $ouSerialNum, $ouMaxNameLen,
$ouFsFlags, $oswFsType, $lwFsType )>, MoveFileW, C<MoveFileW( $swOldName,
$swNewName )>, MoveFileExW, C<MoveFileExW( $swOldName, $swNewName, $uFlags
)>, QueryDosDeviceW, C<$olwTargetLen= QueryDosDeviceW( $swDeviceName,
$oswTargetPath, $lwTargetBuf )>, C<":Misc">, C<":DDD_">, C<":DRIVE_">,
C<":FILE_">, C<":FILE_ATTRIBUTE_">, C<":FILE_FLAG_">, C<":FILE_SHARE_">,
C<":FILE_TYPE_">, C<":FS_">, C<":HANDLE_FLAG_">, HANDLE_FLAG_INHERIT,
HANDLE_FLAG_PROTECT_FROM_CLOSE, C<":IOCTL_STORAGE_">,
C<IOCTL_STORAGE_CHECK_VERIFY>, C<IOCTL_STORAGE_MEDIA_REMOVAL>,
C<IOCTL_STORAGE_EJECT_MEDIA>, C<IOCTL_STORAGE_LOAD_MEDIA>,
C<IOCTL_STORAGE_RESERVE>, C<IOCTL_STORAGE_RELEASE>,
C<IOCTL_STORAGE_FIND_NEW_DEVICES>, C<IOCTL_STORAGE_GET_MEDIA_TYPES>,
C<$ucCylsLow[$i]>, C<$ivcCylsHigh[$i]>, C<$uMediaType[$i]>,
C<$uTracksPerCyl[$i]>, C<$uSectsPerTrack[$i]>, C<$uBytesPerSect[$i]>,
C<":IOCTL_DISK_">, C<IOCTL_DISK_GET_DRIVE_GEOMETRY>, C<$ucCylsLow>,
C<$ivcCylsHigh>, C<$uMediaType>, C<$uTracksPerCyl>, C<$uSectsPerTrack>,
C<$uBytesPerSect>, C<IOCTL_DISK_GET_PARTITION_INFO>, C<$uStartLow> and
C<$ivStartHigh>, C<$ucHiddenSects>, C<$uPartitionSeqNumber>,
C<$uPartitionType>, C<$bActive>, C<$bRecognized>, C<$bToRewrite>,
C<IOCTL_DISK_SET_PARTITION_INFO>, C<IOCTL_DISK_GET_DRIVE_LAYOUT>,
C<$cPartitions>, C<$uDiskSignature>, C<IOCTL_DISK_GET_MEDIA_TYPES>,
C<IOCTL_DISK_SET_DRIVE_LAYOUT>, C<IOCTL_DISK_VERIFY>, C<$uStartOffsetLow>
and C<$ivStartOffsetHigh>, C<$uLength>, C<IOCTL_DISK_FORMAT_TRACKS>,
C<IOCTL_DISK_REASSIGN_BLOCKS>, C<IOCTL_DISK_PERFORMANCE>,
C<IOCTL_DISK_IS_WRITABLE>, C<IOCTL_DISK_LOGGING>, DISK_LOGGING_START,
DISK_LOGGING_STOP, DISK_LOGGING_DUMP, DISK_LOGGING_BINNING,
C<IOCTL_DISK_FORMAT_TRACKS_EX>, C<IOCTL_DISK_HISTOGRAM_STRUCTURE>,
C<IOCTL_DISK_HISTOGRAM_DATA>, C<IOCTL_DISK_HISTOGRAM_RESET>,
C<IOCTL_DISK_REQUEST_STRUCTURE>, C<IOCTL_DISK_REQUEST_DATA>, C<":FSCTL_">,
C<FSCTL_SET_REPARSE_POINT>, C<FSCTL_GET_REPARSE_POINT>,
C<FSCTL_DELETE_REPARSE_POINT>, C<":GENERIC_">, C<":MEDIA_TYPE">,
C<Unknown>, C<F5_1Pt2_512>, C<F3_1Pt44_512>, C<F3_2Pt88_512>,
C<F3_20Pt8_512>, C<F3_720_512>, C<F5_360_512>, C<F5_320_512>,
C<F5_320_1024>, C<F5_180_512>, C<F5_160_512>, C<RemovableMedia>,
C<FixedMedia>, C<F3_120M_512>, C<":MOVEFILE_">, C<":SECURITY_">,
C<":SEM_">, C<":PARTITION_">, C<":ALL">

=back

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 Win32CORE - Win32 CORE function stubs

=over 4

=item DESCRIPTION

=item HISTORY

=back

=head2 XSLoader - Dynamically load C libraries into Perl code

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Migration from C<DynaLoader>

=item Backward compatible boilerplate

=back

=item Order of initialization: early load()

=over 4

=item The most hairy case

=back

=item DIAGNOSTICS

C<Can't find '%s' symbol in %s>, C<Can't load '%s' for module %s: %s>,
C<Undefined symbols present after loading %s: %s>,
C<XSLoader::load('Your::Module', $Your::Module::VERSION)>

=item LIMITATIONS

=item BUGS

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head1 AUXILIARY DOCUMENTATION

Here should be listed all the extra programs' documentation, but they
don't all have manual pages yet:

=over 4

=item a2p

=item c2ph

=item dprofpp

=item h2ph

=item h2xs

=item perlbug

=item perldoc

=item pl2pm

=item pod2html

=item pod2man

=item s2p

=item splain

=item xsubpp

=back

=head1 AUTHOR

Larry Wall <F<larry@@wall.org>>, with the help of oodles
of other folks.

@


1.12
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@@


1.11
log
@merge in perl 5.8.8
@
text
@d74 2
d340 12
d354 2
d370 2
a373 2
=item Non-capturing groupings

d380 4
d386 2
d514 2
d833 1
a833 2
=head2 perlfaq - frequently asked questions about Perl ($Date: 2005/12/30
15:04:07 $)
d846 1
a846 1
authors
d850 1
a850 1
=item Credits
d852 1
a852 9
=item Author and Copyright Information

=over 4

=item Bundled Distributions

=item Disclaimer

=back
d888 1
a888 2
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.10 $, $Date:
2003/07/09 15:47:28 $)
d902 1
a902 1
=item What are perl4, perl5, or perl6?
d904 1
a904 1
=item What is Ponie?
d906 1
a906 1
=item What is perl6?
d927 4
a930 2
=item How can I convince my sysadmin/supervisor/employees to use version
5/5.6.1/Perl instead of some other language?
d934 2
d940 1
a940 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.10 $,
$Date: 2005/01/15 21:30:38 $)
d975 1
a975 3
=item Perl in Magazines

=item Perl on the Net: FTP and WWW Access
d979 1
a979 1
=item Archives of comp.lang.perl.misc
d989 2
d995 1
a995 2
=head2 perlfaq3 - Programming Tools ($Revision: 1.10 $, $Date: 2003/08/24
05:26:59 $)
d1034 4
a1037 1
=item How can I use X or Tk with Perl?
a1055 2
=item How can I compile Perl into Java?

d1077 2
d1083 1
a1083 2
=head2 perlfaq4 - Data Manipulation ($Revision: 1.10 $, $Date: 2003/10/02
04:44:33 $)
d1140 1
a1140 1
=item Does Perl have a Year 2000 problem?  Is Perl Y2K compliant?
d1227 2
d1254 1
d1298 2
d1304 1
a1304 2
=head2 perlfaq5 - Files and Formats ($Revision: 1.10 $, $Date: 2003/01/26
17:45:46 $)
a1314 4
=item How do I change one line in a file/delete a line in a file/insert a
line in the middle of a file/append to the beginning of a file?
X<file, editing>

d1343 2
a1344 2
=item How can I output my numbers with commas added?
X<number, commify>
d1403 1
a1403 1
X<tail>
d1409 1
a1409 1
X<file, closing file descriptors>
d1428 2
d1434 1
a1434 2
=head2 perlfaq6 - Regular Expressions ($Revision: 1.10 $, $Date: 2003/01/03
20:05:28 $)
d1475 1
a1475 1
X</o>
d1516 2
a1517 1
X<regular expression, and multibyte characters>
d1519 3
a1521 1
=item How do I match a pattern that is supplied by the user?
d1525 2
d1531 1
a1531 2
=head2 perlfaq7 - General Perl Language Issues ($Revision: 1.10 $, $Date:
2003/07/24 02:17:21 $)
d1559 2
d1610 2
d1616 1
a1616 2
=head2 perlfaq8 - System Interaction ($Revision: 1.10 $, $Date: 2003/01/26
17:44:04 $)
d1661 1
d1664 1
d1717 1
d1740 3
d1747 2
d1753 1
a1753 2
=head2 perlfaq9 - Networking ($Revision: 1.10 $, $Date: 2003/01/31 17:36:57
$)
d1775 1
a1775 1
=item How do I make a pop-up menu in HTML?
d1820 2
d1863 7
a1869 2
=item Basic BLOCKs and Switch Statements
X<switch> X<block> X<case>
d1929 1
a1929 1
=item Operator Precedence and Associativity 
d1983 3
d1994 1
a1994 1
X<<< <<= >>> X<&&=> X<-=> X</=> X<|=> X<<< >>= >>> X<||=> X<.=>
d2009 2
a2010 3
=item Logical or and Exclusive Or
X<operator, logical, or> X<operator, logical, xor> X<operator, logical,
err>
d2012 1
a2012 1
X<or> X<xor> X<err>
d2021 1
a2021 1
X<operator, quote> X<operator, quote-like> X<q> X<qq> X<qx> X<qw> X<m> 
d2028 16
a2043 11
?PATTERN? X<?>, m/PATTERN/cgimosx X<m> X<operator, match>  X<regexp,
options> X<regexp> X<regex, options> X<regex>  X</c> X</i> X</m> X</o>
X</s> X</x>, /PATTERN/cgimosx, q/STRING/ X<q> X<quote, double> X<'> X<''>,
C<'STRING'>, qq/STRING/ X<qq> X<quote, double> X<"> X<"">, "STRING",
qr/STRING/imosx X<qr> X</i> X</m> X</o> X</s> X</x>, qx/STRING/ X<qx> X<`>
X<``> X<backtick>, `STRING`, qw/STRING/ X<qw> X<quote, list> X<quote,
words>, s/PATTERN/REPLACEMENT/egimosx X<substitute> X<substitution>
X<replace> X<regexp, replace> X<regexp, substitute> X</e> X</g> X</i> X</m>
X</o> X</s> X</x>, tr/SEARCHLIST/REPLACEMENTLIST/cds X<tr> X<y>
X<transliterate> X</c> X</d> X</s>, y/SEARCHLIST/REPLACEMENTLIST/cds, <<EOF
X<here-doc> X<heredoc> X<here-document> X<<< << >>>
d2048 6
a2053 6
Finding the end, Removal of backslashes before delimiters, Interpolation
X<interpolation>, C<<<'EOF'>, C<m''>, C<s'''>, C<tr///>, C<y///>, C<''>,
C<q//>, C<"">, C<``>, C<qq//>, C<qx//>, C<< <file*glob> >>, C<?RE?>,
C</RE/>, C<m/RE/>, C<s/RE/foo/>,, Interpolation of regular expressions
X<regexp, interpolation>, Optimization of regular expressions X<regexp,
optimization>
d2096 2
a2097 1
X<static> X<variable, persistent> X<variable, static> X<closure>
d2157 12
a2168 11
flow of your Perl program X<control flow>, Keywords related to scoping,
Miscellaneous functions, Functions for processes and process groups
X<process> X<pid> X<process id>, Keywords related to perl modules
X<module>, Keywords related to classes and object-orientedness X<object>
X<class> X<package>, Low-level socket functions X<socket> X<sock>, System V
interprocess communication functions X<IPC> X<System V> X<semaphore>
X<shared memory> X<memory> X<message>, Fetching user and group info X<user>
X<group> X<password> X<uid> X<gid>  X<passwd> X</etc/passwd>, Fetching
network info X<network> X<protocol> X<host> X<hostname> X<IP> X<address>
X<service>, Time-related functions X<time> X<date>, Functions new in perl5
X<perl5>, Functions obsoleted in perl5
d2178 15
a2192 14
-I<X>, abs VALUE X<abs> X<absolute>, abs, accept NEWSOCKET,GENERICSOCKET
X<accept>, alarm SECONDS X<alarm> X<SIGALRM> X<timer>, alarm, atan2 Y,X
X<atan2> X<arctangent> X<tan> X<tangent>, bind SOCKET,NAME X<bind>, binmode
FILEHANDLE, LAYER X<binmode> X<binary> X<text> X<DOS> X<Windows>, binmode
FILEHANDLE, bless REF,CLASSNAME X<bless>, bless REF, caller EXPR X<caller>
X<call stack> X<stack> X<stack trace>, caller, chdir EXPR X<chdir> X<cd>,
chdir FILEHANDLE, chdir DIRHANDLE, chdir, chmod LIST X<chmod> X<permission>
X<mode>, chomp VARIABLE X<chomp> X<INPUT_RECORD_SEPARATOR> X<$/> X<newline>
X<eol>, chomp( LIST ), chomp, chop VARIABLE X<chop>, chop( LIST ), chop,
chown LIST X<chown> X<owner> X<user> X<group>, chr NUMBER X<chr>
X<character> X<ASCII> X<Unicode>, chr, chroot FILENAME X<chroot> X<root>,
chroot, close FILEHANDLE X<close>, close, closedir DIRHANDLE X<closedir>,
connect SOCKET,NAME X<connect>, continue BLOCK X<continue>, cos EXPR X<cos>
X<cosine> X<acos> X<arccosine>, cos, crypt PLAINTEXT,SALT X<crypt>
d2194 1
a2194 1
X<cryptography> X<passwd>, dbmclose HASH X<dbmclose>, dbmopen
d2201 9
a2209 8
X<eval> X<try> X<catch> X<evaluate> X<parse> X<execute>, eval BLOCK, eval,
exec LIST X<exec> X<execute>, exec PROGRAM LIST, exists EXPR X<exists>
X<autovivification>, exit EXPR X<exit> X<terminate> X<abort>, exit, exp
EXPR X<exp> X<exponential> X<antilog> X<antilogarithm> X<e>, exp, fcntl
FILEHANDLE,FUNCTION,SCALAR X<fcntl>, fileno FILEHANDLE X<fileno>, flock
FILEHANDLE,OPERATION X<flock> X<lock> X<locking>, fork X<fork> X<child>
X<parent>, format X<format>, formline PICTURE,LIST X<formline>, getc
FILEHANDLE X<getc> X<getchar>, getc, getlogin X<getlogin> X<login>,
d2232 17
a2248 16
X<truncate> X<trunc>, int, ioctl FILEHANDLE,FUNCTION,SCALAR X<ioctl>, join
EXPR,LIST X<join>, keys HASH X<keys> X<key>, kill SIGNAL, LIST X<kill>
X<signal>, last LABEL X<last> X<break>, last, lc EXPR X<lc> X<lowercase>,
lc, lcfirst EXPR X<lcfirst> X<lowercase>, lcfirst, length EXPR X<length>
X<size>, length, link OLDFILE,NEWFILE X<link>, listen SOCKET,QUEUESIZE
X<listen>, local EXPR X<local>, localtime EXPR X<localtime>, localtime,
lock THING X<lock>, log EXPR X<log> X<logarithm> X<e> X<ln> X<base>, log,
lstat EXPR X<lstat>, lstat, m//, map BLOCK LIST X<map>, map EXPR,LIST,
mkdir FILENAME,MASK X<mkdir> X<md> X<directory, create>, mkdir FILENAME,
msgctl ID,CMD,ARG X<msgctl>, msgget KEY,FLAGS X<msgget>, msgrcv
ID,VAR,SIZE,TYPE,FLAGS X<msgrcv>, msgsnd ID,MSG,FLAGS X<msgsnd>, my EXPR
X<my>, my TYPE EXPR, my EXPR : ATTRS, my TYPE EXPR : ATTRS, next LABEL
X<next> X<continue>, next, no Module VERSION LIST X<no>, no Module VERSION,
no Module LIST, no Module, oct EXPR X<oct> X<octal> X<hex> X<hexadecimal>
X<binary> X<bin>, oct, open FILEHANDLE,EXPR X<open> X<pipe> X<file, open>
X<fopen>, open FILEHANDLE,MODE,EXPR, open FILEHANDLE,MODE,EXPR,LIST, open
d2251 1
a2251 1
our EXPR TYPE, our EXPR : ATTRS, our TYPE EXPR : ATTRS, pack TEMPLATE,LIST
d2256 1
a2256 1
prototype FUNCTION X<prototype>, push ARRAY,LIST X<push>, X<stack>,
d2259 15
a2273 14
rand, read FILEHANDLE,SCALAR,LENGTH,OFFSET X<read>, read
FILEHANDLE,SCALAR,LENGTH, readdir DIRHANDLE X<readdir>, readline EXPR
X<readline> X<gets> X<fgets>, readlink EXPR X<readlink>, readlink, readpipe
EXPR X<readpipe>, recv SOCKET,SCALAR,LENGTH,FLAGS X<recv>, redo LABEL
X<redo>, redo, ref EXPR X<ref> X<reference>, ref, rename OLDNAME,NEWNAME
X<rename> X<move> X<mv> X<ren>, require VERSION X<require>, require EXPR,
require, reset EXPR X<reset>, reset, return EXPR X<return>, return, reverse
LIST X<reverse> X<rev> X<invert>, rewinddir DIRHANDLE X<rewinddir>, rindex
STR,SUBSTR,POSITION X<rindex>, rindex STR,SUBSTR, rmdir FILENAME X<rmdir>
X<rd> X<directory, remove>, rmdir, s///, scalar EXPR X<scalar> X<context>,
seek FILEHANDLE,POSITION,WHENCE X<seek> X<fseek> X<filehandle, position>,
seekdir DIRHANDLE,POS X<seekdir>, select FILEHANDLE X<select> X<filehandle,
default>, select, select RBITS,WBITS,EBITS,TIMEOUT X<select>, semctl
ID,SEMNUM,CMD,ARG X<semctl>, semget KEY,NSEMS,FLAGS X<semget>, semop
d2291 8
a2298 7
X<randseed>, srand, stat FILEHANDLE X<stat> X<file, status>, stat EXPR,
stat, study SCALAR X<study>, study, sub NAME BLOCK X<sub>, sub NAME (PROTO)
BLOCK, sub NAME : ATTRS BLOCK, sub NAME (PROTO) : ATTRS BLOCK, substr
EXPR,OFFSET,LENGTH,REPLACEMENT X<substr> X<substring> X<mid> X<left>
X<right>, substr EXPR,OFFSET,LENGTH, substr EXPR,OFFSET, symlink
OLDFILE,NEWFILE X<symlink> X<link> X<symbolic link> X<link, symbolic>,
syscall NUMBER, LIST X<syscall> X<system call>, sysopen
d2311 7
a2317 7
X<rm>, unlink, unpack TEMPLATE,EXPR X<unpack>, untie VARIABLE X<untie>,
unshift ARRAY,LIST X<unshift>, use Module VERSION LIST X<use> X<module>
X<import>, use Module VERSION, use Module LIST, use Module, use VERSION,
utime LIST X<utime>, values HASH X<values>, vec EXPR,OFFSET,BITS X<vec>
X<bit> X<bit vector>, wait X<wait>, waitpid PID,FLAGS X<waitpid>, wantarray
X<wantarray> X<context>, warn LIST X<warn> X<warning> X<STDERR>, write
FILEHANDLE X<write>, write EXPR, write, y///
d2417 2
d2459 2
d2605 9
a2613 8
I<commandline> X<-e>, B<-f> X<-f>, B<-F>I<pattern> X<-F>, B<-h> X<-h>,
B<-i>[I<extension>] X<-i> X<in-place>, B<-I>I<directory> X<-I> X<@@INC>,
B<-l>[I<octnum>] X<-l> X<$/> X<$\>, B<-m>[B<->]I<module> X<-m> X<-M>,
B<-M>[B<->]I<module>, B<-M>[B<->]I<'module ...'>,
B<-[mM]>[B<->]I<module=arg[,arg]...>, B<-n> X<-n>, B<-p> X<-p>, B<-P>
X<-P>, B<-s> X<-s>, B<-S> X<-S>, B<-t> X<-t>, B<-T> X<-T>, B<-u> X<-u>,
B<-U> X<-U>, B<-v> X<-v>, B<-V> X<-V>, B<-V:>I<configvar>, B<-w> X<-w>,
B<-W> X<-W>, B<-X> X<-X>, B<-x> X<-x>, B<-x> I<directory>
d2643 2
a2675 2
=item TODO

d2692 5
d2798 12
a2809 6
$ARG, $_, $a, $b, $<I<digits>>, $MATCH, $&, $PREMATCH, $`, $POSTMATCH, $',
$LAST_PAREN_MATCH, $+, $^N, @@LAST_MATCH_END, @@+, $*,
HANDLE->input_line_number(EXPR), $INPUT_LINE_NUMBER, $NR, $,
IO::Handle->input_record_separator(EXPR), $INPUT_RECORD_SEPARATOR, $RS, $/,
HANDLE->autoflush(EXPR), $OUTPUT_AUTOFLUSH, $|,
IO::Handle->output_field_separator EXPR, $OUTPUT_FIELD_SEPARATOR, $OFS, $,,
d2811 42
a2852 24
$\, $LIST_SEPARATOR, $", $SUBSCRIPT_SEPARATOR, $SUBSEP, $;, $#,
HANDLE->format_page_number(EXPR), $FORMAT_PAGE_NUMBER, $%,
HANDLE->format_lines_per_page(EXPR), $FORMAT_LINES_PER_PAGE, $=,
HANDLE->format_lines_left(EXPR), $FORMAT_LINES_LEFT, $-, @@LAST_MATCH_START,
@@-, C<$`> is the same as C<substr($var, 0, $-[0])>, C<$&> is the same as
C<substr($var, $-[0], $+[0] - $-[0])>, C<$'> is the same as C<substr($var,
$+[0])>, C<$1> is the same as C<substr($var, $-[1], $+[1] - $-[1])>, C<$2>
is the same as C<substr($var, $-[2], $+[2] - $-[2])>, C<$3> is the same as
C<substr($var, $-[3], $+[3] - $-[3])>, HANDLE->format_name(EXPR),
$FORMAT_NAME, $~, HANDLE->format_top_name(EXPR), $FORMAT_TOP_NAME, $^,
IO::Handle->format_line_break_characters EXPR,
$FORMAT_LINE_BREAK_CHARACTERS, $:, IO::Handle->format_formfeed EXPR,
$FORMAT_FORMFEED, $^L, $ACCUMULATOR, $^A, $CHILD_ERROR, $?, ${^ENCODING},
$OS_ERROR, $ERRNO, $!, %!, $EXTENDED_OS_ERROR, $^E, $EVAL_ERROR, $@@,
$PROCESS_ID, $PID, $$, $REAL_USER_ID, $UID, $<, $EFFECTIVE_USER_ID, $EUID,
$>, $REAL_GROUP_ID, $GID, $(, $EFFECTIVE_GROUP_ID, $EGID, $),
$PROGRAM_NAME, $0, $[, $], $COMPILING, $^C, $DEBUGGING, $^D,
$SYSTEM_FD_MAX, $^F, $^H, %^H, $INPLACE_EDIT, $^I, $^M, $OSNAME, $^O,
${^OPEN}, $PERLDB, $^P, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
0x100, 0x200, 0x400, $LAST_REGEXP_CODE_RESULT, $^R,
$EXCEPTIONS_BEING_CAUGHT, $^S, $BASETIME, $^T, ${^TAINT}, ${^UNICODE},
${^UTF8LOCALE}, $PERL_VERSION, $^V, $WARNING, $^W, ${^WARNING_BITS},
$EXECUTABLE_NAME, $^X, ARGV, $ARGV, @@ARGV, ARGVOUT, @@F, @@INC, @@_, %INC,
%ENV, $ENV{expr}, %SIG, $SIG{expr}
d2855 1
d2871 3
a2873 4
i X</i> X<regex, case-insensitive> X<regexp, case-insensitive> X<regular
expression, case-insensitive>, m X</m> X<regex, multiline> X<regexp,
multiline> X<regular expression, multiline>, s X</s> X<regex, single-line>
X<regexp, single-line> X<regular expression, single-line>, x X</x>
d2875 5
a2879 1
=over 4
d2888 28
a2915 12
C<(?#text)> X<(?#)>, C<(?imsx-imsx)> X<(?)>, C<(?:pattern)> X<(?:)>,
C<(?imsx-imsx:pattern)>, C<(?=pattern)> X<(?=)> X<look-ahead, positive>
X<lookahead, positive>, C<(?!pattern)> X<(?!)> X<look-ahead, negative>
X<lookahead, negative>, C<(?<=pattern)> X<(?<=)> X<look-behind, positive>
X<lookbehind, positive>, C<(?<!pattern)> X<(?<!)> X<look-behind, negative>
X<lookbehind, negative>, C<(?{ code })> X<(?{})> X<regex, code in>
X<regexp, code in> X<regular expression, code in>, C<(??{ code })>
X<(??{})> X<regex, postponed> X<regexp, postponed> X<regular expression,
postponed> X<regex, recursive> X<regexp, recursive> X<regular expression,
recursive>, C<< (?>pattern) >> X<backtrack> X<backtracking>,
C<(?(condition)yes-pattern|no-pattern)> X<(?()>,
C<(?(condition)yes-pattern)>
d2923 1
a2923 1
=item Warning on \1 vs $1
d2925 1
a2925 1
=item Repeated patterns matching zero-length substring
d2927 1
a2927 1
=item Combining pieces together
d2931 1
a2931 1
C<(?!S)>, C<(?<!S)>, C<(??{ EXPR })>,
d2934 1
a2934 1
=item Creating custom RE engines
d2938 4
d2948 61
a3070 3
2. X<${}> X<@@{}> X<%{}>, 3. X<autovivification> X<< -> >> X<arrow>, 4.
X<encapsulation>

d3301 1
a3301 1
Long running opcodes, Interrupting IO, Restartable system calls, Signals as
d3431 1
a3431 1
=head2 perlthrtut - tutorial on threads in Perl
a3436 2
=item Status

d3469 2
d3499 1
a3499 1
=item cond_wait() and cond_signal()
d3531 2
d3744 2
a3745 2
-I<X>, atan2 Y,X, atan2, binmode, chmod, chown, chroot, crypt, dbmclose,
dbmopen, dump, exec, exit, fcntl, flock, fork, getlogin, getpgrp, getppid,
d3828 6
d3938 1
a3938 1
=item Scripts
d3940 2
a3941 1
=item Blocks
d3945 2
d3985 97
d4254 2
a4255 2
=item BEGIN, CHECK, INIT and END
X<BEGIN> X<CHECK> X<INIT> X<END>
d4284 5
a4288 5
assertions::compat, attributes, attrs, autouse, base, bigint, bignum,
bigrat, blib, bytes, charnames, constant, diagnostics, encoding, fields,
filetest, if, integer, less, lib, locale, open, ops, overload, re, sigtrap,
sort, strict, subs, threads, threads::shared, utf8, vars, vmsish, warnings,
warnings::register
d4292 18
a4309 14
AnyDBM_File, Archive::Tar, Archive::Tar::File, Attribute::Handlers,
AutoLoader, AutoSplit, B, B::Asmdata, B::Assembler, B::Bblock, B::Bytecode,
B::C, B::CC, B::Concise, B::Debug, B::Deparse, B::Disassembler, B::Lint,
B::Showlex, B::Stackobj, B::Stash, B::Terse, B::Xref, Benchmark,
ByteLoader, CGI, CGI::Apache, CGI::Carp, CGI::Cookie, CGI::Fast,
CGI::Pretty, CGI::Push, CGI::Switch, CGI::Util, CPAN, CPAN::FirstTime,
CPAN::Nox, Carp, Carp::Heavy, Class::ISA, Class::Struct, Compress::Zlib,
Config, Cwd, DB, DB_File, Data::Dumper, Devel::DProf, Devel::PPPort,
Devel::Peek, Devel::SelfStubber, Digest, Digest::MD5, Digest::base,
DirHandle, Dumpvalue, DynaLoader, Encode, Encode::Alias, Encode::Byte,
Encode::CJKConstants, Encode::CN, Encode::CN::HZ, Encode::Config,
Encode::EBCDIC, Encode::Encoder, Encode::Encoding, Encode::Guess,
Encode::JP, Encode::JP::H2Z, Encode::JP::JIS7, Encode::KR,
Encode::KR::2022_KR, Encode::MIME::Header, Encode::PerlIO,
d4314 7
a4320 6
ExtUtils::Embed, ExtUtils::Install, ExtUtils::Installed, ExtUtils::Liblist,
ExtUtils::MM, ExtUtils::MM_AIX, ExtUtils::MM_Any, ExtUtils::MM_BeOS,
ExtUtils::MM_Cygwin, ExtUtils::MM_DOS, ExtUtils::MM_MacOS,
ExtUtils::MM_NW5, ExtUtils::MM_OS2, ExtUtils::MM_QNX, ExtUtils::MM_UWIN,
ExtUtils::MM_Unix, ExtUtils::MM_VMS, ExtUtils::MM_VOS, ExtUtils::MM_Win32,
ExtUtils::MM_Win95, ExtUtils::MY, ExtUtils::MakeMaker,
d4326 10
a4335 7
File::Compare, File::Copy, File::DosGlob, File::Find, File::Glob,
File::Path, File::Spec, File::Spec::Cygwin, File::Spec::Epoc,
File::Spec::Functions, File::Spec::Mac, File::Spec::OS2, File::Spec::Unix,
File::Spec::VMS, File::Spec::Win32, File::Temp, File::stat, FileCache,
FileHandle, Filter::Simple, Filter::Util::Call, FindBin, GDBM_File,
Getopt::Long, Getopt::Std, Hash::Util, I18N::Collate, I18N::LangTags,
I18N::LangTags::List, I18N::Langinfo, IO, IO::Dir, IO::File, IO::Handle,
d4337 33
a4369 14
IO::Socket::UNIX, IO::Zlib, IPC::Open2, IPC::Open3, IPC::SysV,
IPC::SysV::Msg, IPC::SysV::Semaphore, List::Util, Locale::Constants,
Locale::Country, Locale::Currency, Locale::Language, Locale::Maketext,
Locale::Maketext::TPJ13, Locale::Script, MIME::Base64,
MIME::Base64::QuotedPrint, Math::BigFloat, Math::BigInt,
Math::BigInt::Calc, Math::BigInt::FastCalc, Math::BigRat, Math::Complex,
Math::Trig, Memoize, Memoize::AnyDBM_File, Memoize::Expire,
Memoize::ExpireFile, Memoize::ExpireTest, Memoize::NDBM_File,
Memoize::SDBM_File, Memoize::Storable, NDBM_File, NEXT, Net::Cmd,
Net::Config, Net::Domain, Net::FTP, Net::NNTP, Net::Netrc, Net::POP3,
Net::Ping, Net::SMTP, Net::Time, Net::hostent, Net::libnetFAQ, Net::netent,
Net::protoent, Net::servent, O, ODBM_File, Opcode, POSIX, PerlIO,
PerlIO::encoding, PerlIO::scalar, PerlIO::via, PerlIO::via::QuotedPrint,
Pod::Checker, Pod::Find, Pod::Functions, Pod::Html, Pod::InputObjects,
d4374 14
a4387 5
Pod::Select, Pod::Text, Pod::Text::Color, Pod::Text::Overstrike,
Pod::Text::Termcap, Pod::Usage, SDBM_File, Safe, Scalar::Util,
Search::Dict, SelectSaver, SelfLoader, Shell, Socket, Storable, Switch,
Symbol, Sys::Hostname, Sys::Syslog, Term::ANSIColor, Term::Cap,
Term::Complete, Term::ReadLine, Test, Test::Builder, Test::Harness,
d4389 2
a4390 1
Test::Harness::Straps, Test::More, Test::Simple, Test::Tutorial,
d4392 7
a4398 6
Text::Wrap, Thread, Thread::Queue, Thread::Semaphore, Thread::Signal,
Thread::Specific, Tie::Array, Tie::File, Tie::Handle, Tie::Hash,
Tie::Memoize, Tie::RefHash, Tie::Scalar, Tie::SubstrHash, Time::HiRes,
Time::Local, Time::gmtime, Time::localtime, Time::tm, UNIVERSAL,
Unicode::Collate, Unicode::Normalize, Unicode::UCD, User::grent,
User::pwent, Win32, XS::APItest, XS::Typemap, XSLoader
d4630 12
d4648 2
d4652 1
a4652 1
=item DOCUMENTATION
d4659 1
a4659 1
=item CONVERTORS
d4661 1
a4661 1
L<a2p|a2p>, L<s2p|s2p>, L<find2perl|find2perl>
d4665 1
a4665 1
L<libnetcfg|libnetcfg>
d4670 4
a4673 1
L<h2xs|h2xs>, L<dprofpp|dprofpp>, L<perlcc|perlcc>
d4675 5
a4679 1
=item SEE ALSO
d4683 2
d4697 1
a4697 1
B::Bytecode, B::C, B::CC, B::Lint, B::Deparse, B::Xref
a4712 6
=item The Simple C Back End

=item The Bytecode Back End

=item The Optimized C Back End

d4717 2
a4718 3
B, O, B::Asmdata, B::Assembler, B::Bblock, B::Bytecode, B::C, B::CC,
B::Concise, B::Debug, B::Deparse, B::Disassembler, B::Lint, B::Showlex,
B::Stackobj, B::Stash, B::Terse, B::Xref
d4801 4
a4804 3
decrement, default, defined, delimiter, dereference, derived class,
descriptor, destroy, destructor, device, directive, directory, directory
handle, dispatch, distribution, dweomer, dwimmer, dynamic scoping
d4981 2
d5241 5
a5245 1
MY_CXT_KEY, typedef my_cxt_t, START_MY_CXT, MY_CXT_INIT, dMY_CXT, MY_CXT
d5416 1
a5416 1
A, p, d, s, n, r, f, M, o, x, m, X, E, b
d5424 2
d5534 2
d5544 1
a5544 1
=head2 perlapi - autogenerated documentation for the perl public API
a5548 1
X<Perl API> X<API> X<api>
d5550 1
a5550 1
=item "Gimme" Values
d5552 1
a5552 3
GIMME X<GIMME>, GIMME_V X<GIMME_V>, G_ARRAY X<G_ARRAY>, G_DISCARD
X<G_DISCARD>, G_EVAL X<G_EVAL>, G_NOARGS X<G_NOARGS>, G_SCALAR X<G_SCALAR>,
G_VOID X<G_VOID>
d5554 1
a5554 1
=item Array Manipulation Functions
d5556 4
a5559 6
AvFILL X<AvFILL>, av_clear X<av_clear>, av_delete X<av_delete>, av_exists
X<av_exists>, av_extend X<av_extend>, av_fetch X<av_fetch>, av_fill
X<av_fill>, av_len X<av_len>, av_make X<av_make>, av_pop X<av_pop>, av_push
X<av_push>, av_shift X<av_shift>, av_store X<av_store>, av_undef
X<av_undef>, av_unshift X<av_unshift>, get_av X<get_av>, newAV X<newAV>,
sortsv X<sortsv>
d5561 1
a5561 1
=item Callback Functions
d5563 1
a5563 3
call_argv X<call_argv>, call_method X<call_method>, call_pv X<call_pv>,
call_sv X<call_sv>, ENTER X<ENTER>, eval_pv X<eval_pv>, eval_sv X<eval_sv>,
FREETMPS X<FREETMPS>, LEAVE X<LEAVE>, SAVETMPS X<SAVETMPS>
d5565 1
a5565 1
=item Character classes
d5567 1
a5567 3
isALNUM X<isALNUM>, isALPHA X<isALPHA>, isDIGIT X<isDIGIT>, isLOWER
X<isLOWER>, isSPACE X<isSPACE>, isUPPER X<isUPPER>, toLOWER X<toLOWER>,
toUPPER X<toUPPER>
d5569 1
a5569 1
=item Cloning an interpreter
d5571 1
a5571 1
perl_clone X<perl_clone>
d5573 1
a5573 1
=item CV Manipulation Functions
d5575 1
a5575 1
CvSTASH X<CvSTASH>, get_cv X<get_cv>
d5577 1
a5577 1
=item Embedding Functions
d5579 1
a5579 4
cv_undef X<cv_undef>, load_module X<load_module>, nothreadhook
X<nothreadhook>, perl_alloc X<perl_alloc>, perl_construct
X<perl_construct>, perl_destruct X<perl_destruct>, perl_free X<perl_free>,
perl_parse X<perl_parse>, perl_run X<perl_run>, require_pv X<require_pv>
d5581 1
a5581 1
=item Functions in file pp_pack.c
d5583 1
a5583 2
packlist X<packlist>, pack_cat X<pack_cat>, unpackstring X<unpackstring>,
unpack_str X<unpack_str>
d5585 1
a5585 1
=item Global Variables
d5587 1
a5587 2
PL_modglobal X<PL_modglobal>, PL_na X<PL_na>, PL_sv_no X<PL_sv_no>,
PL_sv_undef X<PL_sv_undef>, PL_sv_yes X<PL_sv_yes>
d5589 1
a5589 1
=item GV Functions
d5591 1
a5591 4
GvSV X<GvSV>, gv_fetchmeth X<gv_fetchmeth>, gv_fetchmethod
X<gv_fetchmethod>, gv_fetchmethod_autoload X<gv_fetchmethod_autoload>,
gv_fetchmeth_autoload X<gv_fetchmeth_autoload>, gv_stashpv X<gv_stashpv>,
gv_stashpvn X<gv_stashpvn>, gv_stashsv X<gv_stashsv>
d5593 1
a5593 1
=item Handy Values
d5595 1
a5595 2
Nullav X<Nullav>, Nullch X<Nullch>, Nullcv X<Nullcv>, Nullhv X<Nullhv>,
Nullsv X<Nullsv>
d5597 1
a5597 1
=item Hash Manipulation Functions
d5599 1
a5599 12
get_hv X<get_hv>, HEf_SVKEY X<HEf_SVKEY>, HeHASH X<HeHASH>, HeKEY X<HeKEY>,
HeKLEN X<HeKLEN>, HePV X<HePV>, HeSVKEY X<HeSVKEY>, HeSVKEY_force
X<HeSVKEY_force>, HeSVKEY_set X<HeSVKEY_set>, HeVAL X<HeVAL>, HvNAME
X<HvNAME>, hv_clear X<hv_clear>, hv_clear_placeholders
X<hv_clear_placeholders>, hv_delete X<hv_delete>, hv_delete_ent
X<hv_delete_ent>, hv_exists X<hv_exists>, hv_exists_ent X<hv_exists_ent>,
hv_fetch X<hv_fetch>, hv_fetch_ent X<hv_fetch_ent>, hv_iterinit
X<hv_iterinit>, hv_iterkey X<hv_iterkey>, hv_iterkeysv X<hv_iterkeysv>,
hv_iternext X<hv_iternext>, hv_iternextsv X<hv_iternextsv>,
hv_iternext_flags X<hv_iternext_flags>, hv_iterval X<hv_iterval>, hv_magic
X<hv_magic>, hv_scalar X<hv_scalar>, hv_store X<hv_store>, hv_store_ent
X<hv_store_ent>, hv_undef X<hv_undef>, newHV X<newHV>
d5601 192
a5792 1
=item Magical Functions
d5805 2
a5806 1
Newxc X<Newxc>, Newxz X<Newxz>, Poison X<Poison>, Renew X<Renew>, Renewc
d5808 3
a5810 2
savesharedpv X<savesharedpv>, savesvpv X<savesvpv>, StructCopy
X<StructCopy>, Zero X<Zero>, ZeroD X<ZeroD>
d5815 3
a5817 1
X<getcwd_sv>, strEQ X<strEQ>, strGE X<strGE>, strGT X<strGT>, strLE
d5819 13
a5831 2
X<strnNE>, sv_nolocking X<sv_nolocking>, sv_nosharing X<sv_nosharing>,
sv_nounlocking X<sv_nounlocking>
d5836 3
a5838 2
grok_numeric_radix X<grok_numeric_radix>, grok_oct X<grok_oct>, scan_bin
X<scan_bin>, scan_hex X<scan_hex>, scan_oct X<scan_oct>
d5848 14
d5889 5
a5893 9
get_sv X<get_sv>, looks_like_number X<looks_like_number>, newRV_inc
X<newRV_inc>, newRV_noinc X<newRV_noinc>, NEWSV X<NEWSV>, newSV X<newSV>,
newSVhek X<newSVhek>, newSViv X<newSViv>, newSVnv X<newSVnv>, newSVpv
X<newSVpv>, newSVpvf X<newSVpvf>, newSVpvn X<newSVpvn>, newSVpvn_share
X<newSVpvn_share>, newSVrv X<newSVrv>, newSVsv X<newSVsv>, newSVuv
X<newSVuv>, SvCUR X<SvCUR>, SvCUR_set X<SvCUR_set>, SvEND X<SvEND>, SvGROW
X<SvGROW>, SvIOK X<SvIOK>, SvIOKp X<SvIOKp>, SvIOK_notUV X<SvIOK_notUV>,
SvIOK_off X<SvIOK_off>, SvIOK_on X<SvIOK_on>, SvIOK_only X<SvIOK_only>,
SvIOK_only_UV X<SvIOK_only_UV>, SvIOK_UV X<SvIOK_UV>, SvIsCOW X<SvIsCOW>,
d5895 54
a5948 39
SvIVx X<SvIVx>, SvIV_set X<SvIV_set>, SvLEN X<SvLEN>, SvLEN_set
X<SvLEN_set>, SvMAGIC_set X<SvMAGIC_set>, SvNIOK X<SvNIOK>, SvNIOKp
X<SvNIOKp>, SvNIOK_off X<SvNIOK_off>, SvNOK X<SvNOK>, SvNOKp X<SvNOKp>,
SvNOK_off X<SvNOK_off>, SvNOK_on X<SvNOK_on>, SvNOK_only X<SvNOK_only>,
SvNV X<SvNV>, SvNVX X<SvNVX>, SvNVx X<SvNVx>, SvNV_set X<SvNV_set>, SvOK
X<SvOK>, SvOOK X<SvOOK>, SvPOK X<SvPOK>, SvPOKp X<SvPOKp>, SvPOK_off
X<SvPOK_off>, SvPOK_on X<SvPOK_on>, SvPOK_only X<SvPOK_only>,
SvPOK_only_UTF8 X<SvPOK_only_UTF8>, SvPV X<SvPV>, SvPVbyte X<SvPVbyte>,
SvPVbytex X<SvPVbytex>, SvPVbytex_force X<SvPVbytex_force>, SvPVbyte_force
X<SvPVbyte_force>, SvPVbyte_nolen X<SvPVbyte_nolen>, SvPVutf8 X<SvPVutf8>,
SvPVutf8x X<SvPVutf8x>, SvPVutf8x_force X<SvPVutf8x_force>, SvPVutf8_force
X<SvPVutf8_force>, SvPVutf8_nolen X<SvPVutf8_nolen>, SvPVX X<SvPVX>, SvPVx
X<SvPVx>, SvPV_force X<SvPV_force>, SvPV_force_nomg X<SvPV_force_nomg>,
SvPV_nolen X<SvPV_nolen>, SvPV_set X<SvPV_set>, SvREFCNT X<SvREFCNT>,
SvREFCNT_dec X<SvREFCNT_dec>, SvREFCNT_inc X<SvREFCNT_inc>, SvROK X<SvROK>,
SvROK_off X<SvROK_off>, SvROK_on X<SvROK_on>, SvRV X<SvRV>, SvRV_set
X<SvRV_set>, SvSTASH X<SvSTASH>, SvSTASH_set X<SvSTASH_set>, SvTAINT
X<SvTAINT>, SvTAINTED X<SvTAINTED>, SvTAINTED_off X<SvTAINTED_off>,
SvTAINTED_on X<SvTAINTED_on>, SvTRUE X<SvTRUE>, SvTYPE X<SvTYPE>, SvUOK
X<SvUOK>, SvUPGRADE X<SvUPGRADE>, SvUTF8 X<SvUTF8>, SvUTF8_off
X<SvUTF8_off>, SvUTF8_on X<SvUTF8_on>, SvUV X<SvUV>, SvUVX X<SvUVX>, SvUVx
X<SvUVx>, SvUV_set X<SvUV_set>, sv_2bool X<sv_2bool>, sv_2cv X<sv_2cv>,
sv_2io X<sv_2io>, sv_2iv X<sv_2iv>, sv_2mortal X<sv_2mortal>, sv_2nv
X<sv_2nv>, sv_2pvbyte X<sv_2pvbyte>, sv_2pvbyte_nolen X<sv_2pvbyte_nolen>,
sv_2pvutf8 X<sv_2pvutf8>, sv_2pvutf8_nolen X<sv_2pvutf8_nolen>,
sv_2pv_flags X<sv_2pv_flags>, sv_2pv_nolen X<sv_2pv_nolen>, sv_2uv
X<sv_2uv>, sv_backoff X<sv_backoff>, sv_bless X<sv_bless>, sv_catpv
X<sv_catpv>, sv_catpvf X<sv_catpvf>, sv_catpvf_mg X<sv_catpvf_mg>,
sv_catpvn X<sv_catpvn>, sv_catpvn_flags X<sv_catpvn_flags>, sv_catpvn_mg
X<sv_catpvn_mg>, sv_catpvn_nomg X<sv_catpvn_nomg>, sv_catpv_mg
X<sv_catpv_mg>, sv_catsv X<sv_catsv>, sv_catsv_flags X<sv_catsv_flags>,
sv_catsv_mg X<sv_catsv_mg>, sv_catsv_nomg X<sv_catsv_nomg>, sv_chop
X<sv_chop>, sv_clear X<sv_clear>, sv_cmp X<sv_cmp>, sv_cmp_locale
X<sv_cmp_locale>, sv_collxfrm X<sv_collxfrm>, sv_copypv X<sv_copypv>,
sv_dec X<sv_dec>, sv_derived_from X<sv_derived_from>, sv_eq X<sv_eq>,
sv_force_normal X<sv_force_normal>, sv_force_normal_flags
X<sv_force_normal_flags>, sv_free X<sv_free>, sv_gets X<sv_gets>, sv_grow
X<sv_grow>, sv_inc X<sv_inc>, sv_insert X<sv_insert>, sv_isa X<sv_isa>,
sv_isobject X<sv_isobject>, sv_iv X<sv_iv>, sv_len X<sv_len>, sv_len_utf8
d5951 3
a5953 5
X<sv_newref>, sv_nv X<sv_nv>, sv_pos_b2u X<sv_pos_b2u>, sv_pos_u2b
X<sv_pos_u2b>, sv_pv X<sv_pv>, sv_pvbyte X<sv_pvbyte>, sv_pvbyten
X<sv_pvbyten>, sv_pvbyten_force X<sv_pvbyten_force>, sv_pvn X<sv_pvn>,
sv_pvn_force X<sv_pvn_force>, sv_pvn_force_flags X<sv_pvn_force_flags>,
sv_pvutf8 X<sv_pvutf8>, sv_pvutf8n X<sv_pvutf8n>, sv_pvutf8n_force
d5955 6
a5960 6
sv_report_used X<sv_report_used>, sv_reset X<sv_reset>, sv_rvweaken
X<sv_rvweaken>, sv_setiv X<sv_setiv>, sv_setiv_mg X<sv_setiv_mg>, sv_setnv
X<sv_setnv>, sv_setnv_mg X<sv_setnv_mg>, sv_setpv X<sv_setpv>, sv_setpvf
X<sv_setpvf>, sv_setpvf_mg X<sv_setpvf_mg>, sv_setpviv X<sv_setpviv>,
sv_setpviv_mg X<sv_setpviv_mg>, sv_setpvn X<sv_setpvn>, sv_setpvn_mg
X<sv_setpvn_mg>, sv_setpv_mg X<sv_setpv_mg>, sv_setref_iv X<sv_setref_iv>,
d5963 10
a5972 12
sv_setsv_flags X<sv_setsv_flags>, sv_setsv_mg X<sv_setsv_mg>, sv_setsv_nomg
X<sv_setsv_nomg>, sv_setuv X<sv_setuv>, sv_setuv_mg X<sv_setuv_mg>,
sv_taint X<sv_taint>, sv_tainted X<sv_tainted>, sv_true X<sv_true>,
sv_unmagic X<sv_unmagic>, sv_unref X<sv_unref>, sv_unref_flags
X<sv_unref_flags>, sv_untaint X<sv_untaint>, sv_upgrade X<sv_upgrade>,
sv_usepvn X<sv_usepvn>, sv_usepvn_mg X<sv_usepvn_mg>, sv_utf8_decode
X<sv_utf8_decode>, sv_utf8_downgrade X<sv_utf8_downgrade>, sv_utf8_encode
X<sv_utf8_encode>, sv_utf8_upgrade X<sv_utf8_upgrade>,
sv_utf8_upgrade_flags X<sv_utf8_upgrade_flags>, sv_uv X<sv_uv>, sv_vcatpvf
X<sv_vcatpvf>, sv_vcatpvfn X<sv_vcatpvfn>, sv_vcatpvf_mg X<sv_vcatpvf_mg>,
sv_vsetpvf X<sv_vsetpvf>, sv_vsetpvfn X<sv_vsetpvfn>, sv_vsetpvf_mg
X<sv_vsetpvf_mg>
d5993 4
a5996 3
dXSARGS X<dXSARGS>, dXSI32 X<dXSI32>, items X<items>, ix X<ix>, newXSproto
X<newXSproto>, RETVAL X<RETVAL>, ST X<ST>, THIS X<THIS>, XS X<XS>,
XS_VERSION X<XS_VERSION>, XS_VERSION_BOOTCHECK X<XS_VERSION_BOOTCHECK>
d6034 5
a6038 1
=item Functions in file pp_ctl.c
d6040 2
a6041 1
find_runcv X<find_runcv>
d6043 1
a6043 1
=item Global Variables
d6045 1
a6045 3
PL_DBsingle X<PL_DBsingle>, PL_DBsub X<PL_DBsub>, PL_DBtrace X<PL_DBtrace>,
PL_dowarn X<PL_dowarn>, PL_last_in_gv X<PL_last_in_gv>, PL_ofs_sv
X<PL_ofs_sv>, PL_rs X<PL_rs>
d6047 1
a6047 1
=item GV Functions
d6049 1
a6049 1
is_gv_magical X<is_gv_magical>
d6051 1
a6051 1
=item IO Functions
d6053 2
a6054 1
start_glob X<start_glob>
d6068 6
d6080 10
a6089 3
report_uninit X<report_uninit>, sv_add_arena X<sv_add_arena>, sv_clean_all
X<sv_clean_all>, sv_clean_objs X<sv_clean_objs>, sv_free_arenas
X<sv_free_arenas>
d6258 18
d6295 3
a6297 3
F<t/base/>, F<t/cmd/>, F<t/comp/>, F<t/io/>, F<t/lib/>, F<t/op/>,
F<t/pod/>, F<t/run/>, F<t/uni/>, F<t/win32/>, F<t/x2p>, t/base t/comp,
t/cmd t/run t/io t/op, t/lib ext lib
d6309 12
a6320 1
PERL_DESTRUCT_LEVEL=2, PERL, PERL_SKIP_TTY_TEST
d6344 2
d6361 2
a6366 2
=back

d6379 1
a6379 1
=head2 perltodo - Perl TO-DO List
d6385 13
a6397 1
=item The roadmap to 5.10
d6399 3
a6401 1
=over 4
d6403 1
a6403 1
=item Needed for a 5.9.4 release
d6405 1
a6405 1
=item Needed for a 5.9.5 release
d6407 1
a6407 1
Implement L</_ prototype character>, Implement L</state variables>
d6409 1
a6409 1
=item Needed for a 5.9.6 release
d6413 6
d6423 4
d6429 5
a6433 1
=item POD -> HTML conversion in the core still sucks
d6443 2
d6455 4
a6464 2
=item Relocatable perl

d6471 3
a6473 1
=item Make Config.pm cope with differences between build and installed perl
d6475 1
a6475 1
=item make parallel builds work
d6477 1
a6477 1
=item linker specification files
d6485 6
d6493 1
a6493 1
=item Tidy up global variables
d6495 1
a6495 1
=item Ordering of "global" variables.
d6497 1
a6497 1
=item bincompat functions
d6499 1
a6499 1
=item am I hot or not?
d6501 1
a6501 1
=item emulate the per-thread memory pool on Unix
d6503 1
a6503 1
=item reduce duplication in sv_setsv_flags
a6510 10
=item IPv6

=item shrink C<GV>s, C<CV>s

=item merge Perl_sv_2[inpu]v

=item UTF8 caching code

=item Implicit Latin 1 => Unicode translation

d6517 4
d6529 13
d6548 7
a6554 1
=item lexical pragmas
d6558 1
a6558 1
=item Constant folding
d6564 1
a6564 5
=item _ prototype character

=item state variables

=item @@INC source filter to Filter::Simple
d6566 1
a6566 1
=item regexp optimiser optional
d6568 1
a6568 1
=item UNITCHECK
d6578 1
a6578 1
=item Self ties
d6582 7
a6588 1
=item What hooks would assertions need?
d6604 2
d6623 1
a6623 1
B<-w> I<option:value> or B<-w> I<option>, B<-X>,
d6665 1
a6665 1
=head2 perldelta - what is new for perl v5.8.8
a6670 2
=item Incompatible Changes

d6673 1
a6673 1
=item Modules and Pragmata
d6675 1
a6675 1
=item Utility Changes
d6677 1
a6677 1
=item New Documentation
d6679 1
a6679 1
=item Performance Enhancements
d6681 1
a6681 1
=item Installation and Configuration Improvements
d6683 1
a6683 1
=item Selected Bug Fixes
d6685 3
a6687 1
=item New or Changed Diagnostics
d6689 1
a6689 1
=item Changed Internals
d6691 1
a6691 1
=item New Tests
d6693 1
a6693 1
=item Known Problems
d6695 1
a6695 1
=item Platform Specific Problems
d6697 1
a6697 1
=item Reporting Bugs
d6699 1
a6699 1
=item SEE ALSO
d6701 1
a6701 1
=back
d6703 1
a6703 1
=head2 perl588delta, perldelta - what is new for perl v5.8.8
d6705 1
a6705 1
=over 4
d6707 1
a6707 1
=item DESCRIPTION
d6709 1
a6709 1
=item Incompatible Changes
d6711 1
a6711 1
=item Core Enhancements
d6713 1
a6713 1
=item Modules and Pragmata
d6715 1
a6715 1
=item Utility Changes
d6717 1
a6717 1
=item New Documentation
d6719 1
a6719 1
=item Performance Enhancements
d6721 1
a6721 1
=item Installation and Configuration Improvements
d6723 1
a6723 1
=item Selected Bug Fixes
d6725 1
a6725 1
=item New or Changed Diagnostics
d6727 1
a6727 1
=item Changed Internals
d6729 2
a6730 1
=item New Tests
d6732 1
a6732 1
=item Known Problems
d6734 1
a6734 1
=item Platform Specific Problems
d6736 1
a6736 1
=item Reporting Bugs
d6738 1
a6738 1
=item SEE ALSO
d6742 1
a6742 1
=head2 perl587delta, perldelta - what is new for perl v5.8.7
d6746 1
a6746 1
=item DESCRIPTION
d6748 1
a6748 1
=item Incompatible Changes
d6750 1
a6750 1
=item Core Enhancements
d6752 1
a6752 1
=over 4
d6754 1
a6754 1
=item Unicode Character Database 4.1.0
d6756 1
a6756 1
=item suidperl less insecure
d6758 1
a6758 1
=item Optional site customization script
d6760 1
a6760 1
=item C<Config.pm> is now much smaller.
d6762 1
a6762 1
=back
d6764 1
a6764 1
=item Modules and Pragmata
d6766 1
a6766 1
=item Utility Changes
d6768 1
a6768 1
=over 4
d6770 1
a6770 1
=item find2perl enhancements
d6772 1
a6772 1
=back
d6774 1
a6774 1
=item Performance Enhancements
d6776 1
a6776 1
=item Installation and Configuration Improvements
d6778 1
a6778 1
=item Selected Bug Fixes
d6780 1
a6780 1
=item New or Changed Diagnostics
d6782 1
a6782 1
=item Changed Internals
d6784 1
a6784 1
=item Known Problems
d6786 1
a6786 1
=item Platform Specific Problems
d6788 1
a6788 1
=item Reporting Bugs
d6790 1
a6790 1
=item SEE ALSO
d6792 1
a6792 1
=back
d6794 1
a6794 1
=head2 perl586delta - what is new for perl v5.8.6
d6796 3
a6798 1
=over 4
d6800 1
a6800 1
=item DESCRIPTION
d6802 1
a6802 1
=item Incompatible Changes
d6804 1
a6804 1
=item Core Enhancements
d6806 1
a6806 1
=item Modules and Pragmata
d6810 2
a6811 1
=item Performance Enhancements
d6813 1
a6813 1
=item Selected Bug Fixes
d6815 1
a6815 1
=item New or Changed Diagnostics
d6817 1
a6817 5
=item Changed Internals

=item New Tests

=item Reporting Bugs
d6819 1
a6819 1
=item SEE ALSO
d6821 1
a6821 1
=back
d6823 1
a6823 1
=head2 perl585delta - what is new for perl v5.8.5
d6825 1
a6825 1
=over 4
d6827 1
a6827 1
=item DESCRIPTION
d6829 1
a6829 1
=item Incompatible Changes
d6831 1
a6831 1
=item Core Enhancements
d6833 1
a6833 1
=item Modules and Pragmata
d6835 1
a6835 1
=item Utility Changes
d6837 1
a6837 1
=over 4
d6839 1
a6839 1
=item Perl's debugger
d6841 3
a6843 1
=item h2ph
d6849 3
a6851 1
=item Selected Bug Fixes
d6853 2
a6854 1
=item New or Changed Diagnostics
d6856 1
a6856 1
=item Changed Internals
d6858 3
a6860 1
=item Known Problems
d6862 1
a6862 1
=item Platform Specific Problems
d6864 1
a6864 1
=item Reporting Bugs
d6866 1
a6866 1
=item SEE ALSO
d6870 1
a6870 1
=head2 perl584delta - what is new for perl v5.8.4
d6872 7
a6878 1
=over 4
d6880 1
a6880 1
=item DESCRIPTION
d6882 6
a6887 1
=item Incompatible Changes
d6889 1
a6889 1
=item Core Enhancements
d6893 1
a6893 3
=item Malloc wrapping

=item Unicode Character Database 4.0.1
d6895 1
a6895 1
=item suidperl less insecure
d6897 1
a6897 1
=item format
d6899 1
a6899 1
=back
d6901 1
a6901 1
=item Modules and Pragmata
d6903 1
a6903 1
=over 4
d6905 1
a6905 1
=item Updated modules
d6907 1
a6907 5
Attribute::Handlers, B, Benchmark, CGI, Carp, Cwd, Exporter, File::Find,
IO, IPC::Open3, Local::Maketext, Math::BigFloat, Math::BigInt,
Math::BigRat, MIME::Base64, ODBM_File, POSIX, Shell, Socket, Storable,
Switch, Sys::Syslog, Term::ANSIColor, Time::HiRes, Unicode::UCD, Win32,
base, open, threads, utf8
d6909 1
a6909 1
=back
d6911 1
a6911 1
=item Performance Enhancements
d6913 1
a6913 1
=item Utility Changes
d6915 1
a6915 1
=item Installation and Configuration Improvements
d6917 1
a6917 1
=item Selected Bug Fixes
d6919 1
a6919 1
=item New or Changed Diagnostics
d6921 1
a6921 3
=item Changed Internals

=item Future Directions
d6931 1
a6931 1
=head2 perl583delta - what is new for perl v5.8.3
a6936 2
=item Incompatible Changes

d6939 1
a6939 5
=item Modules and Pragmata

CGI, Cwd, Digest, Digest::MD5, Encode, File::Spec, FindBin, List::Util,
Math::BigInt, PodParser, Pod::Perldoc, POSIX, Unicode::Collate,
Unicode::Normalize, Test::Harness, threads::shared
d6941 1
a6941 1
=item Utility Changes
d6943 1
a6943 1
=item New Documentation
d6945 1
a6945 1
=item Installation and Configuration Improvements
d6947 1
a6947 1
=item Selected Bug Fixes
d6949 1
a6949 7
=item New or Changed Diagnostics

=item Changed Internals

=item Configuration and Building

=item Platform Specific Problems
d6951 3
a6953 1
=item Known Problems
d6955 1
a6955 1
=item Future Directions
d6957 1
a6957 1
=item Obituary
d6959 1
a6959 1
=item Reporting Bugs
d6961 1
a6961 1
=item SEE ALSO
d6963 1
a6963 1
=back
d6965 1
a6965 1
=head2 perl582delta - what is new for perl v5.8.2
d6967 1
a6967 1
=over 4
d6969 1
a6969 1
=item DESCRIPTION
d6971 1
a6971 1
=item Incompatible Changes
d6973 1
a6973 1
=item Core Enhancements
d6975 1
a6975 1
=over 4
d6977 1
a6977 1
=item Hash Randomisation
d6979 1
a6979 1
=item Threading
d6981 1
a6981 1
=back
d6983 1
a6983 1
=item Modules and Pragmata
d6985 1
a6985 1
=over 4
d6987 1
a6987 1
=item Updated Modules And Pragmata
d6989 1
a6989 3
Devel::PPPort, Digest::MD5, I18N::LangTags, libnet, MIME::Base64,
Pod::Perldoc, strict, Tie::Hash, Time::HiRes, Unicode::Collate,
Unicode::Normalize, UNIVERSAL
d6991 1
a6991 1
=back
d6993 1
a6993 1
=item Selected Bug Fixes
d6995 2
a6996 1
=item Changed Internals
d6998 1
a6998 1
=item Platform Specific Problems
d7000 1
a7000 1
=item Future Directions
d7002 1
a7002 1
=item Reporting Bugs
d7004 1
a7004 1
=item SEE ALSO
d7008 1
a7008 1
=head2 perl581delta - what is new for perl v5.8.1
d7012 5
a7016 1
=item DESCRIPTION
d7018 1
a7018 1
=item Incompatible Changes
d7020 1
a7020 1
=over 4
d7022 1
a7022 1
=item Hash Randomisation
d7024 1
a7024 1
=item UTF-8 On Filehandles No Longer Activated By Locale
d7026 1
a7026 1
=item Single-number v-strings are no longer v-strings before "=>"
d7028 1
a7028 1
=item (Win32) The -C Switch Has Been Repurposed
d7030 1
a7030 1
=item (Win32) The /d Switch Of cmd.exe
d7032 1
a7032 1
=back
d7034 1
a7034 1
=item Core Enhancements
d7036 1
a7036 1
=over 4
d7038 1
a7038 1
=item UTF-8 no longer default under UTF-8 locales
d7040 1
a7040 1
=item Unsafe signals again available
d7042 1
a7042 1
=item Tied Arrays with Negative Array Indices
d7044 1
a7044 1
=item local ${$x}
d7046 1
a7046 1
=item Unicode Character Database 4.0.0
d7048 1
a7048 1
=item Deprecation Warnings
d7050 1
a7050 1
=item Miscellaneous Enhancements
d7058 11
a7068 1
=item Updated Modules And Pragmata
d7070 1
a7070 8
base, B::Bytecode, B::Concise, B::Deparse, Benchmark, ByteLoader, bytes,
CGI, charnames, CPAN, Data::Dumper, DB_File, Devel::PPPort, Digest::MD5,
Encode, fields, libnet, Math::BigInt, MIME::Base64, NEXT, Net::Ping,
PerlIO::scalar, podlators, Pod::LaTeX, PodParsers, Pod::Perldoc,
Scalar::Util, Storable, strict, Term::ANSIcolor, Test::Harness, Test::More,
Test::Simple, Text::Balanced, Time::HiRes, threads, threads::shared,
Unicode::Collate, Unicode::Normalize, Win32::GetFolderPath,
Win32::GetOSVersion
d7076 3
d7081 1
a7081 1
=item Installation and Configuration Improvements
d7085 3
a7087 1
=item Platform-specific enhancements
d7089 1
a7089 1
=back
d7091 1
a7091 1
=item Selected Bug Fixes
d7093 1
a7093 1
=over 4
d7095 1
a7095 1
=item Closures, eval and lexicals
d7097 1
a7097 1
=item Generic fixes
d7099 1
a7099 1
=item Platform-specific fixes
d7101 1
a7101 1
=back
d7103 1
a7103 1
=item New or Changed Diagnostics
d7105 1
a7105 1
=over 4
d7107 3
a7109 1
=item Changed "A thread exited while %d threads were running"
d7111 1
a7111 1
=item Removed "Attempt to clear a restricted hash"
d7113 1
a7113 1
=item New "Illegal declaration of anonymous subroutine"
d7115 1
a7115 1
=item Changed "Invalid range "%s" in transliteration operator"
d7117 1
a7117 1
=item New "Missing control char name in \c"
d7119 2
a7120 1
=item New "Newline in left-justified string for %s"
d7122 1
a7122 1
=item New "Possible precedence problem on bitwise %c operator"
d7124 3
a7126 1
=item New "Pseudo-hashes are deprecated"
d7128 1
a7128 1
=item New "read() on %s filehandle %s"
d7130 1
a7130 1
=item New "5.005 threads are deprecated"
d7132 1
a7132 1
=item New "Tied variable freed while still in use"
d7134 1
a7134 1
=item New "To%s: illegal mapping '%s'"
d7136 1
a7136 1
=item New "Use of freed value in iteration"
d7138 7
a7144 1
=back
d7146 1
a7146 1
=item Changed Internals
d7148 6
a7153 1
=item New Tests
d7155 1
a7155 1
=item Known Problems
d7159 1
a7159 1
=item Tied hashes in scalar context
d7161 1
a7161 1
=item Net::Ping 450_service and 510_ping_udp failures
d7163 1
a7163 1
=item B::C
d7165 1
a7165 1
=back
d7167 1
a7167 1
=item Platform Specific Problems
d7169 1
a7169 1
=over 4
d7171 1
a7171 1
=item EBCDIC Platforms
d7173 1
a7173 1
=item Cygwin 1.5 problems
d7175 1
a7175 1
=item HP-UX: HP cc warnings about sendfile and sendpath
d7177 1
a7177 1
=item IRIX: t/uni/tr_7jis.t falsely failing
d7179 1
a7179 1
=item Mac OS X: no usemymalloc
d7181 1
a7181 1
=item Tru64: No threaded builds with GNU cc (gcc)
d7183 1
a7183 1
=item Win32: sysopen, sysread, syswrite
d7187 3
a7189 1
=item Future Directions
d7197 1
a7197 1
=head2 perl58delta - what is new for perl v5.8.0
a7202 2
=item Highlights In 5.8.0

d7207 17
a7223 1
=item Binary Incompatibility
d7225 1
a7225 1
=item 64-bit platforms and malloc
d7227 1
a7227 1
=item AIX Dynaloading
d7229 1
a7229 1
=item Attributes for C<my> variables now handled at run-time
d7231 3
a7233 1
=item Socket Extension Dynamic in VMS
d7235 1
a7235 1
=item IEEE-format Floating Point Default on OpenVMS Alpha
d7237 1
a7237 1
=item New Unicode Semantics (no more C<use utf8>, almost)
d7239 1
a7239 1
=item New Unicode Properties
d7241 1
a7241 1
=item REF(...) Instead Of SCALAR(...)
d7243 1
a7243 1
=item pack/unpack D/F recycled
d7245 1
a7245 1
=item glob() now returns filenames in alphabetical order
d7247 1
a7247 1
=item Deprecations
d7251 1
a7251 1
=item Core Enhancements
d7255 1
a7255 3
=item Unicode Overhaul

=item PerlIO is Now The Default
d7257 1
a7257 1
=item ithreads
d7259 1
a7259 1
=item Restricted Hashes
d7261 3
a7263 1
=item Safe Signals
d7265 1
a7265 1
=item Understanding of Numbers
d7267 1
a7267 1
=item Arrays now always interpolate into double-quoted strings [561]
d7269 2
a7270 1
=item Miscellaneous Changes
d7274 1
a7274 1
=item Modules and Pragmata
d7278 3
a7280 1
=item New Modules and Pragmata
d7282 1
a7282 1
=item Updated And Improved Modules and Pragmata
d7286 5
a7290 1
=item Utility Changes
d7292 1
a7292 1
=item New Documentation
d7300 13
a7312 1
=item Generic Improvements
d7314 1
a7314 1
=item New Or Improved Platforms
d7320 2
d7324 1
a7324 1
=item Platform Specific Changes and Fixes
d7328 9
a7336 1
=item New or Changed Diagnostics
d7338 1
a7338 1
=item Changed Internals
d7340 1
a7340 1
=item Security Vulnerability Closed [561]
d7342 1
a7342 1
=item New Tests
d7344 1
a7344 1
=item Known Problems
d7348 1
a7348 1
=item The Compiler Suite Is Still Very Experimental
d7350 1
a7350 1
=item Localising Tied Arrays and Hashes Is Broken
d7352 1
a7352 1
=item Building Extensions Can Fail Because Of Largefiles
d7354 1
a7354 1
=item Modifying $_ Inside for(..)
d7356 1
a7356 1
=item mod_perl 1.26 Doesn't Build With Threaded Perl
d7358 1
a7358 1
=item lib/ftmp-security tests warn 'system possibly insecure'
d7360 1
a7360 1
=item libwww-perl (LWP) fails base/date #51
d7362 1
a7362 1
=item PDL failing some tests
d7364 1
a7364 1
=item Perl_get_sv
d7366 1
a7366 1
=item Self-tying Problems
d7368 1
a7368 1
=item ext/threads/t/libc
d7370 1
a7370 1
=item Failure of Thread (5.005-style) tests
d7372 1
a7372 1
=item Timing problems
d7374 1
a7374 1
=item Tied/Magical Array/Hash Elements Do Not Autovivify
d7376 1
a7376 1
=item Unicode in package/class and subroutine names does not work
d7380 1
a7380 1
=item Platform Specific Problems
d7384 5
a7388 1
=item AIX
d7390 1
a7390 1
=item Alpha systems with old gccs fail several tests
d7392 1
a7392 1
=item AmigaOS
d7394 1
a7394 1
=item BeOS
d7396 1
a7396 1
=item Cygwin "unable to remap"
d7398 1
a7398 1
=item Cygwin ndbm tests fail on FAT
d7400 1
a7400 1
=item DJGPP Failures
d7402 1
a7402 1
=item FreeBSD built with ithreads coredumps reading large directories
d7404 1
a7404 1
=item FreeBSD Failing locale Test 117 For ISO 8859-15 Locales
d7406 1
a7406 1
=item IRIX fails ext/List/Util/t/shuffle.t or Digest::MD5
d7408 1
a7408 1
=item HP-UX lib/posix Subtest 9 Fails When LP64-Configured
d7410 1
a7410 1
=item Linux with glibc 2.2.5 fails t/op/int subtest #6 with -Duse64bitint
d7412 1
a7412 1
=item Linux With Sfio Fails op/misc Test 48
d7414 1
a7414 1
=item Mac OS X
d7416 1
a7416 1
=item Mac OS X dyld undefined symbols
d7418 3
a7420 1
=item OS/2 Test Failures
d7422 1
a7422 1
=item op/sprintf tests 91, 129, and 130
d7424 1
a7424 1
=item SCO
d7426 1
a7426 1
=item Solaris 2.5
d7428 1
a7428 1
=item Solaris x86 Fails Tests With -Duse64bitint
d7430 1
a7430 1
=item SUPER-UX (NEC SX)
d7432 1
a7432 1
=item Term::ReadKey not working on Win32
d7434 1
a7434 1
=item UNICOS/mk
d7436 1
a7436 1
=item UTS
d7438 1
a7438 1
=item VOS (Stratus)
d7440 1
a7440 1
=item VMS
d7442 1
a7442 1
=item Win32
d7444 1
a7444 1
=item XML::Parser not working
d7446 1
a7446 1
=item z/OS (OS/390)
d7448 1
a7448 1
=item Unicode Support on EBCDIC Still Spotty
d7450 1
a7450 1
=item Seen In Perl 5.7 But Gone Now
d7452 1
a7452 1
=back
d7454 1
a7454 1
=item Reporting Bugs
d7456 1
a7456 1
=item SEE ALSO
d7458 1
a7458 1
=item HISTORY
d7462 1
a7462 1
=head2 perl573delta - what's new for perl v5.7.3
d7464 1
a7464 1
=over 4
d7466 1
a7466 1
=item DESCRIPTION
d7468 1
a7468 1
=item Changes
a7473 2
=item HISTORY

d7476 1
a7476 1
=head2 perl572delta - what's new for perl v5.7.2
a7481 2
=item Security Vulnerability Closed

d7486 3
a7488 1
=item 64-bit platforms and malloc
d7490 1
a7490 1
=item AIX Dynaloading
d7492 1
a7492 1
=item Socket Extension Dynamic in VMS
d7494 1
a7494 1
=item Different Definition of the Unicode Character Classes \p{In...}
d7496 1
a7496 1
=item Deprecations
d7502 7
a7508 1
=item Modules and Pragmata
d7510 1
a7510 1
=over 4
d7512 1
a7512 1
=item New Modules and Distributions
d7514 1
a7514 1
=item Updated And Improved Modules and Pragmata
d7516 1
a7516 1
=back
d7518 1
a7518 1
=item Utility Changes
d7520 1
a7520 1
=item New Documentation
d7522 1
a7522 1
=item Installation and Configuration Improvements
d7524 1
a7524 1
=over 4
d7526 1
a7526 1
=item New Or Improved Platforms
d7528 1
a7528 1
=item Generic Improvements
d7532 1
a7532 1
=item Selected Bug Fixes
d7536 1
a7536 1
=item Platform Specific Changes and Fixes
d7540 1
a7540 1
=item New or Changed Diagnostics
d7542 1
a7542 1
=item Source Code Enhancements
d7544 1
a7544 1
=over 4
d7546 1
a7546 1
=item MAGIC constants
d7548 1
a7548 1
=item Better commented code
d7550 1
a7550 1
=item Regex pre-/post-compilation items matched up
d7552 1
a7552 1
=item gcc -Wall
d7556 1
a7556 3
=item New Tests

=item Known Problems
d7560 1
a7560 1
=item AIX
d7562 1
a7562 1
=item Amiga Perl Invoking Mystery
d7564 1
a7564 1
=item lib/ftmp-security tests warn 'system possibly insecure'
d7566 1
a7566 1
=item Cygwin intermittent failures of lib/Memoize/t/expire_file 11 and 12
d7568 1
a7568 1
=item HP-UX lib/io_multihomed Fails When LP64-Configured
d7570 1
a7570 1
=item  HP-UX lib/posix Subtest 9 Fails When LP64-Configured
d7572 1
a7572 1
=item Linux With Sfio Fails op/misc Test 48
d7574 1
a7574 1
=item OS/390
d7576 1
a7576 1
=item op/sprintf tests 129 and 130
d7578 1
a7578 1
=item  Failure of Thread tests
d7580 1
a7580 1
=item UNICOS
d7582 1
a7582 1
=item UTS
d7584 1
a7584 1
=item VMS
d7586 1
a7586 1
=item Win32
d7588 1
a7588 1
=item Localising a Tied Variable Leaks Memory
d7590 1
a7590 1
=item Self-tying of Arrays and Hashes Is Forbidden
d7592 1
a7592 1
=item Variable Attributes are not Currently Usable for Tieing
d7594 1
a7594 1
=item Building Extensions Can Fail Because Of Largefiles
d7596 1
a7596 1
=item The Compiler Suite Is Still Experimental
d7598 1
a7598 1
=item The Long Double Support is Still Experimental
d7600 1
a7600 1
=back
d7602 1
a7602 1
=item Reporting Bugs
d7604 1
a7604 1
=item SEE ALSO
d7606 1
a7606 1
=item HISTORY
d7608 1
a7608 1
=back
d7610 1
a7610 1
=head2 perl571delta - what's new for perl v5.7.1
d7612 1
a7612 1
=over 4
d7614 1
a7614 1
=item DESCRIPTION
d7616 1
a7616 1
=item Security Vulnerability Closed
d7618 1
a7618 1
=item Incompatible Changes
d7620 1
a7620 1
=item Core Enhancements
d7622 1
a7622 1
=over 4
d7624 2
a7625 1
=item AUTOLOAD Is Now Lvaluable
d7627 1
a7627 1
=item PerlIO is Now The Default
d7629 1
a7629 1
=item Signals Are Now Safe
d7633 1
a7633 1
=item Modules and Pragmata
d7637 1
a7637 1
=item New Modules
d7639 1
a7639 1
=item Updated And Improved Modules and Pragmata
d7641 1
a7641 1
=back
d7643 1
a7643 1
=item Performance Enhancements
d7645 1
a7645 1
=item Utility Changes
d7647 1
a7647 1
=item New Documentation
d7651 1
a7651 1
=item perlclib
d7653 1
a7653 1
=item perliol
d7655 1
a7655 1
=item README.aix
d7657 1
a7657 1
=item README.bs2000
d7659 1
a7659 9
=item README.macos

=item README.mpeix

=item README.solaris

=item README.vos

=item Porting/repository.pod
d7663 1
a7663 1
=item Installation and Configuration Improvements
d7667 1
a7667 1
=item New Or Improved Platforms
d7669 1
a7669 1
=item Generic Improvements
d7671 1
a7671 3
d_cmsghdr, d_fcntl_can_lock, d_fsync, d_getitimer, d_getpagsz, d_msghdr_s,
need_va_copy, d_readv, d_recvmsg, d_sendmsg, sig_size, d_sockatmark,
d_strtoq, d_u32align, d_ualarm, d_usleep
d7673 1
a7673 1
=back
d7675 1
a7675 1
=item Selected Bug Fixes
d7677 1
a7677 1
=over 4
d7679 1
a7679 1
=item Platform Specific Changes and Fixes
d7681 1
a7681 1
=back
d7683 1
a7683 1
=item New or Changed Diagnostics
d7685 1
a7685 1
=item Changed Internals
d7687 1
a7687 3
=item New Tests

=item Known Problems
d7691 1
a7691 1
=item AIX vac 5.0.0.0 May Produce Buggy Code For Perl
d7693 1
a7693 1
=item lib/ftmp-security tests warn 'system possibly insecure'
d7695 1
a7695 1
=item lib/io_multihomed Fails In LP64-Configured HP-UX
d7697 1
a7697 1
=item Test lib/posix Subtest 9 Fails In LP64-Configured HP-UX
d7699 1
a7699 1
=item lib/b test 19
d7701 1
a7701 1
=item Linux With Sfio Fails op/misc Test 48
d7703 1
a7703 1
=item sigaction test 13 in VMS
d7705 1
a7705 1
=item sprintf tests 129 and 130
d7707 1
a7707 1
=item  Failure of Thread tests
d7709 1
a7709 1
=item Localising a Tied Variable Leaks Memory
d7711 1
a7711 5
=item Self-tying of Arrays and Hashes Is Forbidden

=item Building Extensions Can Fail Because Of Largefiles

=item The Compiler Suite Is Still Experimental
d7713 1
a7713 1
=back
a7718 2
=item HISTORY

d7721 1
a7721 1
=head2 perl570delta - what's new for perl v5.7.0
d7727 7
a7733 1
=item Security Vulnerability Closed
d7735 1
a7735 1
=item Incompatible Changes
d7739 3
a7741 1
=item Modules and Pragmata
d7743 1
a7743 1
=over 4
d7745 1
a7745 1
=item New Modules
d7747 1
a7747 1
=item Updated And Improved Modules and Pragmata
d7751 4
d7757 1
a7757 1
=item New Documentation
d7761 1
a7761 1
=item Installation and Configuration Improvements
d7765 1
a7765 5
=item Generic Improvements

=back

=item Selected Bug Fixes
d7767 1
a7767 1
=over 4
d7769 1
a7769 1
=item Platform Specific Changes and Fixes
a7776 2
=item Known Problems

d7779 1
a7779 1
=item Unicode Support Still Far From Perfect
d7781 1
a7781 1
=item EBCDIC Still A Lost Platform
d7783 1
a7783 1
=item Building Extensions Can Fail Because Of Largefiles
d7785 1
a7785 1
=item ftmp-security tests warn 'system possibly insecure'
d7787 1
a7787 1
=item Test lib/posix Subtest 9 Fails In LP64-Configured HP-UX
d7789 1
a7789 1
=item Long Doubles Still Don't Work In Solaris
d7791 1
a7791 1
=item Linux With Sfio Fails op/misc Test 48
d7793 1
a7793 1
=item Storable tests fail in some platforms
d7795 1
a7795 1
=item Threads Are Still Experimental
d7797 1
a7797 1
=item The Compiler Suite Is Still Experimental
d7799 1
a7799 1
=back
a7804 2
=item HISTORY

d7807 1
a7807 1
=head2 perl561delta - what's new for perl v5.6.x
d7813 1
a7813 1
=item Summary of changes between 5.6.0 and 5.6.1
d7817 1
a7817 1
=item Security Issues
d7819 1
a7819 1
=item Core bug fixes
d7821 1
a7821 7
C<UNIVERSAL::isa()>, Memory leaks, Numeric conversions, qw(a\\b), caller(),
Bugs in regular expressions, "slurp" mode, Autovivification of symbolic
references to special variables, Lexical warnings, Spurious warnings and
errors, glob(), Tainting, sort(), #line directives, Subroutine prototypes,
map(), Debugger, PERL5OPT, chop(), Unicode support, 64-bit support,
Compiler, Lvalue subroutines, IO::Socket, File::Find, xsubpp, C<no
Module;>, Tests
d7823 1
a7823 1
=item Core features
d7825 1
a7825 3
=item Configuration issues

=item Documentation
d7827 1
a7827 10
=item Bundled modules

B::Concise, File::Temp, Pod::LaTeX, Pod::Text::Overstrike, CGI, CPAN,
Class::Struct, DB_File, Devel::Peek, File::Find, Getopt::Long, IO::Poll,
IPC::Open3, Math::BigFloat, Math::Complex, Net::Ping, Opcode, Pod::Parser,
Pod::Text, SDBM_File, Sys::Syslog, Tie::RefHash, Tie::SubstrHash

=item Platform-specific improvements

NCR MP-RAS, NonStop-UX
d7835 1
a7835 1
=item Interpreter cloning, threads, and concurrency
d7837 1
a7837 1
=item Lexically scoped warning categories
d7839 1
a7839 1
=item Unicode and UTF-8 support
d7841 1
a7841 1
=item Support for interpolating named characters
d7843 1
a7843 1
=item "our" declarations
d7845 1
a7845 1
=item Support for strings represented as a vector of ordinals
d7847 1
a7847 1
=item Improved Perl version numbering system
d7849 1
a7849 1
=item New syntax for declaring subroutine attributes
d7851 1
a7851 1
=item File and directory handles can be autovivified
d7853 1
a7853 1
=item open() with more than two arguments
d7855 1
a7855 1
=item 64-bit support
d7857 1
a7857 1
=item Large file support
d7859 8
a7866 1
=item Long doubles
d7868 1
a7868 1
=item "more bits"
d7870 1
a7870 1
=item Enhanced support for sort() subroutines
d7872 1
a7872 1
=item C<sort $coderef @@foo> allowed
d7874 1
a7874 1
=item File globbing implemented internally
d7876 1
a7876 1
=item Support for CHECK blocks
d7878 1
a7878 1
=item POSIX character class syntax [: :] supported
d7880 1
a7880 1
=item Better pseudo-random number generator
d7882 1
a7882 1
=item Improved C<qw//> operator
d7884 1
a7884 1
=item Better worst-case behavior of hashes
d7886 1
a7886 1
=item pack() format 'Z' supported
d7888 1
a7888 1
=item pack() format modifier '!' supported
d7890 1
a7890 1
=item pack() and unpack() support counted strings
d7892 1
a7892 1
=item Comments in pack() templates
d7894 1
a7894 1
=item Weak references
d7896 1
a7896 1
=item Binary numbers supported
d7898 1
a7898 1
=item Lvalue subroutines
d7900 1
a7900 1
=item Some arrows may be omitted in calls through references
d7902 1
a7902 1
=item Boolean assignment operators are legal lvalues
d7904 1
a7904 1
=item exists() is supported on subroutine names
d7906 1
a7906 1
=item exists() and delete() are supported on array elements
d7908 1
a7908 1
=item Pseudo-hashes work better
d7910 1
a7910 1
=item Automatic flushing of output buffers
d7912 1
a7912 1
=item Better diagnostics on meaningless filehandle operations
d7914 1
a7914 1
=item Where possible, buffered data discarded from duped input filehandle
d7916 1
a7916 1
=item eof() has the same old magic as <>
d7918 1
a7918 1
=item binmode() can be used to set :crlf and :raw modes
d7920 1
a7920 1
=item C<-T> filetest recognizes UTF-8 encoded files as "text"
d7922 1
a7922 1
=item system(), backticks and pipe open now reflect exec() failure
d7924 1
a7924 1
=item Improved diagnostics
d7926 1
a7926 1
=item Diagnostics follow STDERR
d7928 1
a7928 1
=item More consistent close-on-exec behavior
d7930 1
a7930 1
=item syswrite() ease-of-use
d7932 1
a7932 1
=item Better syntax checks on parenthesized unary operators
d7934 1
a7934 1
=item Bit operators support full native integer width
d7936 1
a7936 1
=item Improved security features
d7938 1
a7938 1
=item More functional bareword prototype (*)
d7940 1
a7940 1
=item C<require> and C<do> may be overridden
d7942 1
a7942 1
=item $^X variables may now have names longer than one character
d7944 1
a7944 1
=item New variable $^C reflects C<-c> switch
d7946 1
a7946 1
=item New variable $^V contains Perl version as a string
d7948 1
a7948 1
=item Optional Y2K warnings
d7950 1
a7950 1
=item Arrays now always interpolate into double-quoted strings
d7952 1
a7952 1
=item @@- and @@+ provide starting/ending offsets of regex submatches
d7954 1
a7954 1
=back
d7956 1
a7956 1
=item Modules and Pragmata
d7958 1
a7958 1
=over 4
d7960 1
a7960 1
=item Modules
d7962 1
a7962 8
attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters
d7964 1
a7964 1
=item Pragmata
d7968 1
a7968 1
=item Utility Changes
d7972 5
a7976 1
=item dprofpp
d7978 1
a7978 1
=item find2perl
d7980 1
a7980 1
=item h2xs
d7982 1
a7982 1
=item perlcc
d7984 1
a7984 1
=item perldoc
d7986 1
a7986 1
=item The Perl Debugger
d7990 3
a7992 1
=item Improved Documentation
d7994 1
a7994 4
perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod
d7996 1
a7996 1
=item Performance enhancements
d8000 3
a8002 1
=item Simple sort() using { $a <=> $b } and the like are optimized
d8004 1
a8004 1
=item Optimized assignments to lexical variables
d8006 1
a8006 1
=item Faster subroutine calls
d8008 1
a8008 1
=item delete(), each(), values() and hash iteration are faster
d8012 1
a8012 1
=item Installation and Configuration Improvements
d8016 1
a8016 1
=item -Dusethreads means something different
d8018 1
a8018 1
=item New Configure flags
d8020 2
a8021 1
=item Threadedness and 64-bitness now more daring
d8023 1
a8023 1
=item Long Doubles
d8025 1
a8025 1
=item -Dusemorebits
d8027 1
a8027 1
=item -Duselargefiles
d8029 1
a8029 1
=item installusrbinperl
d8031 1
a8031 7
=item SOCKS support

=item C<-A> flag

=item Enhanced Installation Directories

=item gcc automatically tried if 'cc' does not seem to be working
d8035 1
a8035 1
=item Platform specific changes
d8039 1
a8039 1
=item Supported platforms
d8041 1
a8041 1
=item DOS
d8043 1
a8043 1
=item OS390 (OpenEdition MVS)
d8045 1
a8045 1
=item VMS
d8047 1
a8047 1
=item Win32
d8049 1
a8049 1
=back
d8051 1
a8051 1
=item Significant bug fixes
d8053 1
a8053 1
=over 4
d8055 1
a8055 1
=item <HANDLE> on empty files
d8057 1
a8057 1
=item C<eval '...'> improvements
d8059 1
a8059 1
=item All compilation errors are true errors
d8061 1
a8061 1
=item Implicitly closed filehandles are safer
d8063 1
a8063 1
=item Behavior of list slices is more consistent
d8065 1
a8065 1
=item C<(\$)> prototype and C<$foo{a}>
d8067 1
a8067 1
=item C<goto &sub> and AUTOLOAD
d8069 1
a8069 1
=item C<-bareword> allowed under C<use integer>
d8071 1
a8071 1
=item Failures in DESTROY()
d8073 1
a8073 1
=item Locale bugs fixed
d8075 1
a8075 1
=item Memory leaks
d8077 1
a8077 1
=item Spurious subroutine stubs after failed subroutine calls
d8079 1
a8079 1
=item Taint failures under C<-U>
d8081 1
a8081 1
=item END blocks and the C<-c> switch
d8083 1
a8083 1
=item Potential to leak DATA filehandles
d8087 1
a8087 1
=item New or Changed Diagnostics
d8089 1
a8089 50
"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible unintended interpolation of %s in string,
Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME : ATTRS"
instead, Premature end of script headers, Repeat count in pack overflows,
Repeat count in unpack overflows, realloc() of freed memory ignored,
Reference is already weak, setpgrp can't take arguments, Strange *+?{} on
zero-length expression, switching effective %s is not implemented, This
Perl can't reset CRTL environ elements (%s), This Perl can't set CRTL
environ elements (%s=%s), Too late to run %s block, Unknown open() mode
'%s', Unknown process %x sent message to prime_env_iter: %s, Unrecognized
escape \\%c passed through, Unterminated attribute parameter in attribute
list, Unterminated attribute list, Unterminated attribute parameter in
subroutine attribute list, Unterminated subroutine attribute list, Value of
CLI symbol "%s" too long, Version number must be a constant number
d8091 1
a8091 1
=item New tests
d8095 5
a8099 1
=over 4
d8101 1
a8101 1
=item Perl Source Incompatibilities
d8103 1
a8103 11
CHECK is a new keyword, Treatment of list slices of undef has changed,
Format of $English::PERL_VERSION is different, Literals of the form
C<1.2.3> parse differently, Possibly changed pseudo-random number
generator, Hashing function for hash keys has changed, C<undef> fails on
read only values, Close-on-exec bit may be set on pipe and socket handles,
Writing C<"$$1"> to mean C<"${$}1"> is unsupported, delete(), each(),
values() and C<\(%h)>, vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
Text of some diagnostic output has changed, C<%@@> has been removed,
Parenthesized not() behaves like a list operator, Semantics of bareword
prototype C<(*)> have changed, Semantics of bit operators may have changed
on 64-bit platforms, More builtins taint their results
d8105 1
a8105 1
=item C Source Incompatibilities
d8107 1
a8107 1
C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>
d8109 1
a8109 1
=item Compatible C Source API Changes
d8111 1
a8111 1
C<PATCHLEVEL> is now C<PERL_VERSION>
d8113 1
a8113 1
=item Binary Incompatibilities
d8117 1
a8117 1
=item Known Problems
d8121 3
a8123 1
=item Localizing a tied hash element may leak memory
d8125 1
a8125 1
=item Known test failures
d8127 1
a8127 1
=item EBCDIC platforms not fully supported
d8129 1
a8129 1
=item UNICOS/mk CC failures during Configure run
d8131 1
a8131 1
=item Arrow operator and arrays
d8133 1
a8133 1
=item Experimental features
d8135 1
a8135 3
Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression code constructs:
d8139 1
a8139 1
=item Obsolete Diagnostics
d8141 9
a8149 4
Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, In string, @@%s now must be written as
\@@%s, Probable precedence problem on %s, regexp too big, Use of "$$<digit>"
to mean "${$}<digit>" is deprecated
a8154 2
=item HISTORY

d8157 1
a8157 1
=head2 perl56delta - what's new for perl v5.6.0
d8163 2
d8169 1
a8169 1
=item Interpreter cloning, threads, and concurrency
d8171 1
a8171 1
=item Lexically scoped warning categories
d8173 1
a8173 1
=item Unicode and UTF-8 support
d8175 1
a8175 1
=item Support for interpolating named characters
d8177 1
a8177 1
=item "our" declarations
d8179 1
a8179 1
=item Support for strings represented as a vector of ordinals
d8181 1
a8181 1
=item Improved Perl version numbering system
d8183 1
a8183 1
=item New syntax for declaring subroutine attributes
d8185 5
a8189 1
=item File and directory handles can be autovivified
d8191 1
a8191 1
=item open() with more than two arguments
d8193 1
a8193 1
=item 64-bit support
d8195 1
a8195 1
=item Large file support
d8197 1
a8197 1
=item Long doubles
d8199 1
a8199 1
=item "more bits"
d8201 1
a8201 1
=item Enhanced support for sort() subroutines
d8203 1
a8203 1
=item C<sort $coderef @@foo> allowed
d8205 1
a8205 1
=item File globbing implemented internally
d8207 1
a8207 1
=item Support for CHECK blocks
d8209 1
a8209 1
=item POSIX character class syntax [: :] supported
d8211 1
a8211 1
=item Better pseudo-random number generator
d8213 1
a8213 1
=item Improved C<qw//> operator
d8215 1
a8215 1
=item Better worst-case behavior of hashes
d8217 1
a8217 1
=item pack() format 'Z' supported
d8219 1
a8219 1
=item pack() format modifier '!' supported
d8221 1
a8221 1
=item pack() and unpack() support counted strings
d8223 1
a8223 1
=item Comments in pack() templates
d8225 1
a8225 1
=item Weak references
d8227 3
a8229 1
=item Binary numbers supported
d8231 1
a8231 1
=item Lvalue subroutines
d8233 1
a8233 1
=item Some arrows may be omitted in calls through references
d8235 1
a8235 1
=item Boolean assignment operators are legal lvalues
d8237 1
a8237 1
=item exists() is supported on subroutine names
d8239 1
a8239 1
=item exists() and delete() are supported on array elements
d8241 1
a8241 1
=item Pseudo-hashes work better
d8243 1
a8243 1
=item Automatic flushing of output buffers
d8245 1
a8245 1
=item Better diagnostics on meaningless filehandle operations
d8247 1
a8247 1
=item Where possible, buffered data discarded from duped input filehandle
d8249 1
a8249 1
=item eof() has the same old magic as <>
d8251 1
a8251 1
=item binmode() can be used to set :crlf and :raw modes
d8253 1
a8253 1
=item C<-T> filetest recognizes UTF-8 encoded files as "text"
d8255 1
a8255 1
=item system(), backticks and pipe open now reflect exec() failure
d8257 1
a8257 1
=item Improved diagnostics
d8259 1
a8259 1
=item Diagnostics follow STDERR
d8261 1
a8261 1
=item More consistent close-on-exec behavior
d8263 1
a8263 1
=item syswrite() ease-of-use
d8265 1
a8265 1
=item Better syntax checks on parenthesized unary operators
d8267 1
a8267 1
=item Bit operators support full native integer width
d8269 1
a8269 1
=item Improved security features
d8271 1
a8271 1
=item More functional bareword prototype (*)
d8273 1
a8273 1
=item C<require> and C<do> may be overridden
d8275 1
a8275 1
=item $^X variables may now have names longer than one character
d8277 1
a8277 1
=item New variable $^C reflects C<-c> switch
d8279 1
a8279 1
=item New variable $^V contains Perl version as a string
d8281 1
a8281 1
=item Optional Y2K warnings
d8283 3
a8285 1
=item Arrays now always interpolate into double-quoted strings
d8287 1
a8287 1
=item @@- and @@+ provide starting/ending offsets of regex matches
d8289 1
a8289 1
=back
d8291 1
a8291 1
=item Modules and Pragmata
d8293 1
a8293 1
=over 4
d8295 1
a8295 1
=item Modules
d8297 1
a8297 8
attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters
d8299 1
a8299 1
=item Pragmata
d8303 1
a8303 1
=item Utility Changes
d8307 5
a8311 1
=item dprofpp
d8313 1
a8313 1
=item find2perl
d8315 1
a8315 1
=item h2xs
d8317 1
a8317 1
=item perlcc
d8319 1
a8319 1
=item perldoc
d8321 1
a8321 1
=item The Perl Debugger
d8325 3
a8327 1
=item Improved Documentation
d8329 1
a8329 4
perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod
d8331 1
a8331 1
=item Performance enhancements
d8333 1
a8333 1
=over 4
d8335 1
a8335 1
=item Simple sort() using { $a <=> $b } and the like are optimized
d8337 1
a8337 1
=item Optimized assignments to lexical variables
d8339 1
a8339 1
=item Faster subroutine calls
d8341 1
a8341 1
=item delete(), each(), values() and hash iteration are faster
d8345 1
a8345 1
=item Installation and Configuration Improvements
d8349 1
a8349 1
=item -Dusethreads means something different
d8351 8
a8358 1
=item New Configure flags
d8360 1
a8360 1
=item Threadedness and 64-bitness now more daring
d8362 1
a8362 1
=item Long Doubles
d8364 1
a8364 1
=item -Dusemorebits
d8366 1
a8366 1
=item -Duselargefiles
d8368 1
a8368 1
=item installusrbinperl
d8370 1
a8370 5
=item SOCKS support

=item C<-A> flag

=item Enhanced Installation Directories
d8374 1
a8374 1
=item Platform specific changes
d8378 1
a8378 1
=item Supported platforms
d8380 1
a8380 1
=item DOS
d8382 1
a8382 5
=item OS390 (OpenEdition MVS)

=item VMS

=item Win32
d8386 1
a8386 1
=item Significant bug fixes
d8390 1
a8390 1
=item <HANDLE> on empty files
d8392 1
a8392 1
=item C<eval '...'> improvements
d8394 1
a8394 1
=item All compilation errors are true errors
d8396 1
a8396 1
=item Implicitly closed filehandles are safer
d8398 1
a8398 1
=item Behavior of list slices is more consistent
d8400 1
a8400 1
=item C<(\$)> prototype and C<$foo{a}>
d8402 1
a8402 1
=item C<goto &sub> and AUTOLOAD
d8404 1
a8404 1
=item C<-bareword> allowed under C<use integer>
d8406 1
a8406 1
=item Failures in DESTROY()
d8408 1
a8408 1
=item Locale bugs fixed
d8410 1
a8410 1
=item Memory leaks
d8412 1
a8412 1
=item Spurious subroutine stubs after failed subroutine calls
d8414 1
a8414 5
=item Taint failures under C<-U>

=item END blocks and the C<-c> switch

=item Potential to leak DATA filehandles
d8418 1
a8418 1
=item New or Changed Diagnostics
d8420 1
a8420 50
"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible unintended interpolation of %s in string,
Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME : ATTRS"
instead, Premature end of script headers, Repeat count in pack overflows,
Repeat count in unpack overflows, realloc() of freed memory ignored,
Reference is already weak, setpgrp can't take arguments, Strange *+?{} on
zero-length expression, switching effective %s is not implemented, This
Perl can't reset CRTL environ elements (%s), This Perl can't set CRTL
environ elements (%s=%s), Too late to run %s block, Unknown open() mode
'%s', Unknown process %x sent message to prime_env_iter: %s, Unrecognized
escape \\%c passed through, Unterminated attribute parameter in attribute
list, Unterminated attribute list, Unterminated attribute parameter in
subroutine attribute list, Unterminated subroutine attribute list, Value of
CLI symbol "%s" too long, Version number must be a constant number
d8422 1
a8422 3
=item New tests

=item Incompatible Changes
d8426 1
a8426 1
=item Perl Source Incompatibilities
d8428 1
a8428 11
CHECK is a new keyword, Treatment of list slices of undef has changed,
Format of $English::PERL_VERSION is different, Literals of the form
C<1.2.3> parse differently, Possibly changed pseudo-random number
generator, Hashing function for hash keys has changed, C<undef> fails on
read only values, Close-on-exec bit may be set on pipe and socket handles,
Writing C<"$$1"> to mean C<"${$}1"> is unsupported, delete(), each(),
values() and C<\(%h)>, vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
Text of some diagnostic output has changed, C<%@@> has been removed,
Parenthesized not() behaves like a list operator, Semantics of bareword
prototype C<(*)> have changed, Semantics of bit operators may have changed
on 64-bit platforms, More builtins taint their results
d8430 1
a8430 9
=item C Source Incompatibilities

C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>

=item Compatible C Source API Changes

C<PATCHLEVEL> is now C<PERL_VERSION>

=item Binary Incompatibilities
d8434 1
a8434 1
=item Known Problems
d8438 1
a8438 1
=item Thread test failures
d8440 1
a8440 1
=item EBCDIC platforms not supported
d8442 1
a8442 1
=item In 64-bit HP-UX the lib/io_multihomed test may hang
d8444 1
a8444 1
=item NEXTSTEP 3.3 POSIX test failure
d8446 1
a8446 2
=item Tru64 (aka Digital UNIX, aka DEC OSF/1) lib/sdbm test failure with
gcc
d8448 1
a8448 1
=item UNICOS/mk CC failures during Configure run
d8450 1
a8450 7
=item Arrow operator and arrays

=item Experimental features

Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression code constructs:
d8454 1
a8454 6
=item Obsolete Diagnostics

Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, In string, @@%s now must be written as
\@@%s, Probable precedence problem on %s, regexp too big, Use of "$$<digit>"
to mean "${$}<digit>" is deprecated
a8459 2
=item HISTORY

d8462 1
a8462 1
=head2 perl5005delta - what's new for perl5.005
d8468 1
a8468 1
=item About the new versioning system
d8474 9
a8482 1
=item WARNING:	This version is not binary compatible with Perl 5.004.
d8484 1
a8484 1
=item Default installation structure has changed
d8486 1
a8486 1
=item Perl Source Compatibility
d8488 1
a8488 1
=item C Source Compatibility
d8490 1
a8490 1
=item Binary Compatibility
d8492 1
a8492 1
=item Security fixes may affect compatibility
d8494 1
a8494 1
=item Relaxed new mandatory warnings introduced in 5.004
d8496 1
a8496 1
=item Licensing
d8500 1
a8500 1
=item Core Changes
d8504 1
a8504 1
=item Threads
d8506 1
a8506 1
=item Compiler
d8508 1
a8508 1
=item Regular Expressions
d8510 1
a8510 3
Many new and improved optimizations, Many bug fixes, New regular expression
constructs, New operator for precompiled regular expressions, Other
improvements, Incompatible changes
d8512 1
a8512 1
=item	Improved malloc()
d8514 1
a8514 1
=item Quicksort is internally implemented
d8516 1
a8516 1
=item Reliable signals
d8518 1
a8518 1
=item Reliable stack pointers
d8520 1
a8520 1
=item More generous treatment of carriage returns
d8522 1
a8522 1
=item Memory leaks
d8524 1
a8524 1
=item Better support for multiple interpreters
d8526 1
a8526 1
=item Behavior of local() on array and hash elements is now well-defined
d8528 1
a8528 1
=item C<%!> is transparently tied to the L<Errno> module
d8530 1
a8530 1
=item Pseudo-hashes are supported
d8532 1
a8532 1
=item C<EXPR foreach EXPR> is supported
d8534 1
a8534 1
=item Keywords can be globally overridden
d8536 1
a8536 1
=item C<$^E> is meaningful on Win32
d8538 1
a8538 1
=item C<foreach (1..1000000)> optimized
d8540 1
a8540 1
=item C<Foo::> can be used as implicitly quoted package name
d8542 1
a8542 1
=item C<exists $Foo::{Bar::}> tests existence of a package
d8544 1
a8544 1
=item Better locale support
d8546 1
a8546 1
=item Experimental support for 64-bit platforms
d8548 1
a8548 1
=item prototype() returns useful results on builtins
d8550 1
a8550 1
=item Extended support for exception handling
d8552 1
a8552 1
=item Re-blessing in DESTROY() supported for chaining DESTROY() methods
d8554 1
a8554 1
=item All C<printf> format conversions are handled internally
d8556 1
a8556 1
=item New C<INIT> keyword
d8558 1
a8558 1
=item New C<lock> keyword
d8560 1
a8560 1
=item New C<qr//> operator
d8562 1
a8562 1
=item C<our> is now a reserved word
d8564 1
a8564 1
=item Tied arrays are now fully supported
d8566 1
a8566 1
=item Tied handles support is better
d8568 1
a8568 1
=item 4th argument to substr
d8570 1
a8570 1
=item Negative LENGTH argument to splice
d8572 1
a8572 1
=item Magic lvalues are now more magical
d8574 1
a8574 1
=item <> now reads in records
d8576 1
a8576 1
=back
d8578 1
a8578 1
=item Supported Platforms
d8580 1
a8580 1
=over 4
d8582 1
a8582 1
=item New Platforms
d8584 1
a8584 1
=item Changes in existing support
d8586 1
a8586 1
=back
d8588 1
a8588 1
=item Modules and Pragmata
d8590 1
a8590 1
=over 4
d8592 1
a8592 1
=item New Modules
d8594 1
a8594 3
B, Data::Dumper, Dumpvalue, Errno, File::Spec, ExtUtils::Installed,
ExtUtils::Packlist, Fatal, IPC::SysV, Test, Tie::Array, Tie::Handle,
Thread, attrs, fields, re
d8596 1
a8596 1
=item Changes in existing modules
d8598 7
a8604 2
Benchmark, Carp, CGI, Fcntl, Math::Complex, Math::Trig, POSIX, DB_File,
MakeMaker, CPAN, Cwd
d8606 1
a8606 1
=back
d8608 1
a8608 1
=item Utility Changes
d8610 1
a8610 1
=item Documentation Changes
d8612 1
a8612 1
=item New Diagnostics
d8614 1
a8614 17
Ambiguous call resolved as CORE::%s(), qualify as such or use &, Bad index
while coercing array into hash, Bareword "%s" refers to nonexistent
package, Can't call method "%s" on an undefined value, Can't check
filesystem of script "%s" for nosuid, Can't coerce array into hash, Can't
goto subroutine from an eval-string, Can't localize pseudo-hash element,
Can't use %%! because Errno.pm is not available, Cannot find an opnumber
for "%s", Character class syntax [. .] is reserved for future extensions,
Character class syntax [: :] is reserved for future extensions, Character
class syntax [= =] is reserved for future extensions, %s: Eval-group in
insecure regular expression, %s: Eval-group not allowed, use re 'eval', %s:
Eval-group not allowed at run time, Explicit blessing to '' (assuming
package main), Illegal hex digit ignored, No such array field, No such
field "%s" in variable %s of type %s, Out of memory during ridiculously
large request, Range iterator outside integer range, Recursive inheritance
detected while looking for method '%s' %s, Reference found where even-sized
list expected, Undefined value assigned to typeglob, Use of reserved word
"%s" is deprecated, perl: warning: Setting locale failed
d8616 1
a8616 1
=item Obsolete Diagnostics
d8618 1
a8618 2
Can't mktemp(), Can't write to temp file for B<-e>: %s, Cannot open
temporary file, regexp too big
d8620 1
a8620 1
=item Configuration Changes
d8622 1
a8622 1
=item BUGS
d8624 1
a8624 1
=item SEE ALSO
d8626 1
a8626 1
=item HISTORY
d8628 1
a8628 1
=back
d8630 1
a8630 1
=head2 perl5004delta - what's new for perl5.004
d8632 1
a8632 1
=over 4
d8634 1
a8634 1
=item DESCRIPTION
d8636 1
a8636 1
=item Supported Environments
d8638 1
a8638 1
=item Core Changes
d8640 1
a8640 1
=over 4
d8642 1
a8642 1
=item List assignment to %ENV works
d8644 1
a8644 1
=item Change to "Can't locate Foo.pm in @@INC" error
d8646 1
a8646 1
=item Compilation option: Binary compatibility with 5.003
d8648 1
a8648 1
=item $PERL5OPT environment variable
d8650 1
a8650 1
=item Limitations on B<-M>, B<-m>, and B<-T> options
d8652 1
a8652 1
=item More precise warnings
d8654 1
a8654 1
=item Deprecated: Inherited C<AUTOLOAD> for non-methods
d8656 1
a8656 1
=item Previously deprecated %OVERLOAD is no longer usable
d8658 1
a8658 1
=item Subroutine arguments created only when they're modified
d8660 1
a8660 1
=item Group vector changeable with C<$)>
d8662 1
a8662 1
=item Fixed parsing of $$<digit>, &$<digit>, etc.
d8664 1
a8664 1
=item Fixed localization of $<digit>, $&, etc.
d8666 1
a8666 1
=item No resetting of $. on implicit close
d8668 1
a8668 1
=item C<wantarray> may return undef
d8670 1
a8670 1
=item C<eval EXPR> determines value of EXPR in scalar context
d8672 1
a8672 1
=item Changes to tainting checks
d8674 1
a8674 2
No glob() or <*>, No spawning if tainted $CDPATH, $ENV, $BASH_ENV, No
spawning if tainted $TERM doesn't look like a terminal name
d8676 1
a8676 1
=item New Opcode module and revised Safe module
d8678 1
a8678 1
=item Embedding improvements
d8680 1
a8680 1
=item Internal change: FileHandle class based on IO::* classes
d8682 1
a8682 1
=item Internal change: PerlIO abstraction interface
d8684 1
a8684 1
=item New and changed syntax
d8686 1
a8686 1
$coderef->(PARAMS)
d8688 1
a8688 1
=item New and changed builtin constants
d8690 1
a8690 1
__PACKAGE__
d8692 1
a8692 1
=item New and changed builtin variables
d8694 1
a8694 1
$^E, $^H, $^M
d8696 1
a8696 1
=item New and changed builtin functions
d8698 1
a8698 5
delete on slices, flock, printf and sprintf, keys as an lvalue, my() in
Control Structures, pack() and unpack(), sysseek(), use VERSION, use Module
VERSION LIST, prototype(FUNCTION), srand, $_ as Default, C<m//gc> does not
reset search position on failure, C<m//x> ignores whitespace before ?*+{},
nested C<sub{}> closures work now, formats work right on changing lexicals
d8700 1
a8700 1
=item New builtin methods
d8702 1
a8702 1
isa(CLASS), can(METHOD), VERSION( [NEED] )
d8704 1
a8704 1
=item TIEHANDLE now supported
d8706 1
a8706 2
TIEHANDLE classname, LIST, PRINT this, LIST, PRINTF this, LIST, READ this
LIST, READLINE this, GETC this, DESTROY this
d8708 1
a8708 1
=item Malloc enhancements
d8710 1
a8710 1
-DPERL_EMERGENCY_SBRK, -DPACK_MALLOC, -DTWO_POT_OPTIMIZE
d8712 1
a8712 1
=item Miscellaneous efficiency enhancements
d8716 3
a8718 1
=item Support for More Operating Systems
d8722 1
a8722 1
=item Win32
d8724 1
a8724 5
=item Plan 9

=item QNX

=item AmigaOS
d8728 1
a8728 1
=item Pragmata
d8730 1
a8730 2
use autouse MODULE => qw(sub1 sub2 sub3), use blib, use blib 'dir', use
constant NAME => VALUE, use locale, use ops, use vmsish
d8732 1
a8732 1
=item Modules
d8736 1
a8736 1
=item Required Updates
d8738 1
a8738 1
=item Installation directories
d8740 1
a8740 1
=item Module information summary
d8742 1
a8742 1
=item Fcntl
d8744 1
a8744 1
=item IO
d8746 1
a8746 1
=item Math::Complex
d8748 1
a8748 1
=item Math::Trig
d8750 1
a8750 1
=item DB_File
d8752 1
a8752 1
=item Net::Ping
d8754 1
a8754 1
=item Object-oriented overrides for builtin operators
d8756 1
a8756 1
=back
d8758 1
a8758 1
=item Utility Changes
d8760 1
a8760 1
=over 4
d8762 1
a8762 1
=item pod2html
d8764 1
a8764 1
Sends converted HTML to standard output
d8766 1
a8766 1
=item xsubpp
d8768 1
a8768 1
C<void> XSUBs now default to returning nothing
d8770 1
a8770 1
=back
d8772 1
a8772 1
=item C Language API Changes
d8774 1
a8774 2
C<gv_fetchmethod> and C<perl_call_sv>, C<perl_eval_pv>, Extended API for
manipulating hashes
d8776 1
a8776 1
=item Documentation Changes
d8778 1
a8778 2
L<perldelta>, L<perlfaq>, L<perllocale>, L<perltoot>, L<perlapio>,
L<perlmodlib>, L<perldebug>, L<perlsec>
d8780 1
a8780 1
=item New Diagnostics
d8782 1
a8782 25
"my" variable %s masks earlier declaration in same scope, %s argument is
not a HASH element or slice, Allocation too large: %lx, Allocation too
large, Applying %s to %s will act on scalar(%s), Attempt to free
nonexistent shared string, Attempt to use reference as lvalue in substr,
Bareword "%s" refers to nonexistent package, Can't redefine active sort
subroutine %s, Can't use bareword ("%s") as %s ref while "strict refs" in
use, Cannot resolve method `%s' overloading `%s' in package `%s', Constant
subroutine %s redefined, Constant subroutine %s undefined, Copy method did
not return a reference, Died, Exiting pseudo-block via %s, Identifier too
long, Illegal character %s (carriage return), Illegal switch in PERL5OPT:
%s, Integer overflow in hex number, Integer overflow in octal number,
internal error: glob failed, Invalid conversion in %s: "%s", Invalid type
in pack: '%s', Invalid type in unpack: '%s', Name "%s::%s" used only once:
possible typo, Null picture in formline, Offset outside string, Out of
memory!, Out of memory during request for %s, panic: frexp, Possible
attempt to put comments in qw() list, Possible attempt to separate words
with commas, Scalar value @@%s{%s} better written as $%s{%s}, Stub found
while resolving method `%s' overloading `%s' in %s, Too late for "B<-T>"
option, untie attempted while %d inner references still exist, Unrecognized
character %s, Unsupported function fork, Use of "$$<digit>" to mean
"${$}<digit>" is deprecated, Value of %s can be "0"; test with defined(),
Variable "%s" may be unavailable, Variable "%s" will not stay shared,
Warning: something's wrong, Ill-formed logical name |%s| in prime_env_iter,
Got an error from DosAllocMem, Malformed PERLLIB_PREFIX, PERL_SH_DIR too
long, Process terminated by SIG%s
d8784 1
a8784 1
=item BUGS
d8786 1
a8786 1
=item SEE ALSO
d8788 1
a8788 1
=item HISTORY
d8790 1
a8790 1
=back
d8792 1
a8792 1
=head2 perlartistic - the Perl Artistic License
d8794 1
a8794 1
=over 4
d8796 1
a8796 1
=item SYNOPSIS
d8798 1
a8798 1
=item DESCRIPTION
d8800 1
a8800 1
=item The "Artistic License"
d8802 1
a8802 1
=over 4
d8804 1
a8804 1
=item Preamble
d8806 1
a8806 1
=item Definitions
d8808 5
a8812 2
"Package", "Standard Version", "Copyright Holder", "You", "Reasonable
copying fee", "Freely Available"
d8814 1
a8814 1
=item Conditions
d8816 1
a8816 1
a), b), c), d), a), b), c), d)
d8818 1
a8818 1
=back
d8822 1
a8822 1
=head2 perlgpl - the GNU General Public License, version 2
d8826 5
a8830 1
=item SYNOPSIS
d8832 1
a8832 1
=back
d8836 3
a8838 1
=item DESCRIPTION
d8840 1
a8840 1
=item GNU GENERAL PUBLIC LICENSE
d8844 1
a8844 1
=head2 perlaix, README.aix - Perl version 5 on IBM Unix (AIX) systems
d8848 3
a8850 1
=item DESCRIPTION
d8852 1
a8852 1
=over 4
d8854 1
a8854 1
=item Compiling Perl 5 on AIX
d8856 1
a8856 1
=item OS level
d8858 1
a8858 1
=item Building Dynamic Extensions on AIX
d8860 1
a8860 1
=item The IBM ANSI C Compiler
d8862 1
a8862 1
=item The usenm option
d8864 1
a8864 1
=item Using GNU's gcc for building perl
d8866 1
a8866 1
=item Using Large Files with Perl
d8868 1
a8868 1
=item Threaded Perl
d8870 1
a8870 1
=item 64-bit Perl
d8872 1
a8872 1
=item AIX 4.2 and extensions using C++ with statics
d8874 1
a8874 1
=back
d8876 1
a8876 1
=item AUTHOR
d8878 1
a8878 1
=item DATE
d8882 1
a8882 1
=head2 perlamiga - Perl under Amiga OS
d8886 3
a8888 1
=item NOTE
d8890 3
a8892 1
=item SYNOPSIS
d8896 1
a8896 3
=over 4

=item DESCRIPTION
d8900 1
a8900 1
=item Prerequisites for Compiling Perl on AmigaOS
d8902 1
a8902 1
B<Unix emulation for AmigaOS: ixemul.library>, B<Version of Amiga OS>
d8904 1
a8904 1
=item Starting Perl programs under AmigaOS
d8906 1
a8906 1
=item Shortcomings of Perl under AmigaOS
d8908 1
a8908 1
=back
d8910 1
a8910 1
=item INSTALLATION
d8912 1
a8912 1
=item Accessing documentation
d8914 1
a8914 1
=over 4
d8916 1
a8916 1
=item Manpages for Perl on AmigaOS
d8918 1
a8918 1
=item Perl HTML Documentation on AmigaOS
d8920 1
a8920 1
=item Perl GNU Info Files on AmigaOS
d8922 1
a8922 1
=item Perl LaTeX Documentation on AmigaOS
d8924 1
a8924 1
=back
d8926 1
a8926 1
=item BUILDING PERL ON AMIGAOS
d8928 1
a8928 1
=over 4
d8930 1
a8930 1
=item Build Prerequisites for Perl on AmigaOS
d8932 1
a8932 1
=item Getting the Perl Source for AmigaOS
d8934 1
a8934 1
=item Making Perl on AmigaOS
d8936 1
a8936 1
=item Testing Perl on AmigaOS
d8938 1
a8938 1
=item Installing the built Perl on AmigaOS
d8942 1
a8942 1
=item PERL 5.8.0 BROKEN IN AMIGAOS
d8944 1
a8944 1
=item AUTHORS
d8946 1
a8946 1
=item SEE ALSO
d8950 1
a8950 1
=head2 perlapollo, README.apollo - Perl version 5 on Apollo DomainOS
d8956 3
a8958 1
=item AUTHOR
d8960 1
a8960 1
=back
d8962 1
a8962 1
=head2 perlbeos, README.beos - Perl version 5.8+ on BeOS
d8966 5
a8970 1
=item DESCRIPTION
d8972 1
a8972 1
=item BUILD AND INSTALL
d8974 1
a8974 1
=over 4
d8976 1
a8976 1
=item Requirements
d8978 1
a8978 1
=item Configure
d8980 1
a8980 1
=item Build
d8982 1
a8982 1
=item Install
d8986 3
a8988 1
=item KNOWN PROBLEMS
d8990 1
a8990 1
=item CONTACT
d8994 1
a8994 1
=head2 perlbs2000, README.BS2000 - building and installing Perl for BS2000.
d8996 1
a8996 1
=over 4
d8998 1
a8998 3
=item SYNOPSIS

=item DESCRIPTION
d9002 1
a9002 1
=item gzip on BS2000
d9004 1
a9004 1
=item bison on BS2000
d9006 1
a9006 1
=item Unpacking Perl Distribution on BS2000
d9008 1
a9008 1
=item Compiling Perl on BS2000
d9010 1
a9010 1
=item Testing Perl on BS2000
d9012 1
a9012 1
=item Installing Perl on BS2000
d9014 1
a9014 1
=item Using Perl in the Posix-Shell of BS2000
d9016 1
a9016 1
=item Using Perl in "native" BS2000
d9018 1
a9018 1
=item Floating point anomalies on BS2000
d9020 1
a9020 1
=item Using PerlIO and different encodings on ASCII and EBCDIC partitions
d9024 1
a9024 1
=item AUTHORS
a9027 6
=over 4

=item Mailing list

=back

d9032 1
a9032 1
=head2 perlce - Perl for WinCE
d9038 1
a9038 1
=item BUILD
d9042 1
a9042 1
=item Tools & SDK
d9044 1
a9044 2
Microsoft Embedded Visual Tools, Microsoft Visual C++, Rainer Keuchel's
celib-sources, Rainer Keuchel's console-sources
d9046 7
a9052 1
=item Make
d9054 1
a9054 2
go to ./wince subdirectory, edit file compile.bat, run	  compile.bat, run 
  compile.bat dist
d9056 1
a9056 1
=back
d9058 1
a9058 1
=item ACKNOWLEDGEMENTS
d9060 1
a9060 1
=item AUTHORS
d9062 4
a9065 1
=back
d9067 1
a9067 1
=head2 perlcygwin, README.cygwin - Perl for Cygwin
d9069 1
a9069 1
=over 4
d9071 1
a9071 1
=item SYNOPSIS
d9073 1
a9073 1
=item PREREQUISITES FOR COMPILING PERL ON CYGWIN
d9077 1
a9077 1
=item Cygwin = GNU+Cygnus+Windows (Don't leave UNIX without it)
d9079 1
a9079 1
=item Cygwin Configuration
d9081 1
a9081 1
C<PATH>, I<nroff>, Permissions
d9083 1
a9083 1
=back
d9085 1
a9085 1
=item CONFIGURE PERL ON CYGWIN
d9087 1
a9087 1
=over 4
d9089 1
a9089 1
=item Stripping Perl Binaries on Cygwin
d9091 1
a9091 1
=item Optional Libraries for Perl on Cygwin
d9093 1
a9093 2
C<-lcrypt>, C<-lgdbm> (C<use GDBM_File>), C<-ldb> (C<use DB_File>),
C<-lcygipc> (C<use IPC::SysV>), C<-lutil>
d9095 1
a9095 1
=item Configure-time Options for Perl on Cygwin
d9097 1
a9097 3
C<-Uusedl>, C<-Uusemymalloc>, C<-Uuseperlio>, C<-Dusemultiplicity>,
C<-Duse64bitint>, C<-Duselongdouble>, C<-Dusethreads>, C<-Duselargefiles>,
C<-Dmksymlinks>
d9099 1
a9099 1
=item Suspicious Warnings on Cygwin
d9101 1
a9101 1
I<dlsym()>, Win9x and C<d_eofnblk>, Compiler/Preprocessor defines
d9103 1
a9103 1
=back
d9105 1
a9105 1
=item MAKE ON CYGWIN
d9107 1
a9107 1
=over 4
d9109 1
a9109 1
=item Errors on Cygwin
d9111 1
a9111 1
=item ld2 on Cygwin
d9113 1
a9113 1
=back
d9115 1
a9115 1
=item TEST ON CYGWIN
d9117 1
a9117 1
=over 4
d9119 1
a9119 1
=item File Permissions on Cygwin
d9121 1
a9121 1
=item NDBM_File and ODBM_File do not work on FAT filesystems
d9123 1
a9123 1
=item C<fork()> failures in io_* tests
d9125 1
a9125 1
=back
d9127 1
a9127 1
=item Specific features of the Cygwin port
d9129 1
a9129 1
=over 4
d9131 1
a9131 1
=item Script Portability on Cygwin
d9133 1
a9133 2
Pathnames, Text/Binary, PerlIO, F<.exe>, cygwin vs. windows process ids,
C<chown()>, Miscellaneous
d9135 1
a9135 1
=item Prebuilt methods:
d9137 1
a9137 1
C<Cwd::cwd>, C<Cygwin::pid_to_winpid>, C<Cygwin::winpid_to_pid>
d9139 1
a9139 1
=back
d9141 1
a9141 1
=item INSTALL PERL ON CYGWIN
d9143 1
a9143 1
=item MANIFEST ON CYGWIN
d9145 1
a9145 2
Documentation, Build, Configure, Make, Install, Tests, Compiled Perl
Source, Compiled Module Source, Perl Modules/Scripts
d9147 1
a9147 1
=item BUGS ON CYGWIN
d9149 1
a9149 1
=item AUTHORS
d9151 1
a9151 1
=item HISTORY
d9153 1
a9153 1
=back
d9155 1
a9155 1
=head2 perldgux - Perl under DG/UX.
d9157 1
a9157 1
=over 4
d9159 1
a9159 1
=item SYNOPSIS
d9161 1
a9161 1
=back
d9163 1
a9163 1
=over 4
d9165 1
a9165 1
=item DESCRIPTION
d9167 1
a9167 1
=item BUILDING PERL ON DG/UX
d9169 1
a9169 1
=over 4
d9171 1
a9171 1
=item Non-threaded Perl on DG/UX
d9173 1
a9173 1
=item Threaded Perl on DG/UX
d9175 1
a9175 1
=item Testing Perl on DG/UX
d9177 1
a9177 1
=item Installing the built perl on DG/UX
d9179 1
a9179 1
=back
d9181 1
a9181 1
=item AUTHOR
d9183 1
a9183 1
=item SEE ALSO
d9185 1
a9185 1
=back
d9187 1
a9187 1
=head2 perldos - Perl under DOS, W31, W95.
d9189 1
a9189 1
=over 4
d9191 1
a9191 3
=item SYNOPSIS

=item DESCRIPTION
d9195 1
a9195 1
=item Prerequisites for Compiling Perl on DOS
d9197 8
a9204 1
DJGPP, Pthreads
d9206 1
a9206 7
=item Shortcomings of Perl under DOS

=item Building Perl on DOS

=item Testing Perl on DOS

=item Installation of Perl on DOS
d9210 1
a9210 1
=item BUILDING AND INSTALLING MODULES ON DOS
d9214 1
a9214 1
=item Building Prerequisites for Perl on DOS
d9216 1
a9216 1
=item Unpacking CPAN Modules on DOS
d9218 1
a9218 1
=item Building Non-XS Modules on DOS
d9220 1
a9220 1
=item Building XS Modules on DOS
d9222 1
a9222 1
=back
d9224 1
a9224 3
=item AUTHOR

=item SEE ALSO
d9228 1
a9228 1
=head2 perlepoc, README.epoc - Perl for EPOC
d9230 4
a9233 1
=over 4
d9235 1
a9235 7
=item SYNOPSIS

=item INTRODUCTION

=item INSTALLING PERL ON EPOC

=item STARTING PERL ON EPOC
d9239 1
a9239 1
=item Editors on Epoc
d9241 1
a9241 1
=item Features of Perl on Epoc
d9243 1
a9243 1
=item Restrictions of Perl on Epoc
d9245 1
a9245 1
=item Compiling Perl 5 on the EPOC cross compiling environment
d9249 1
a9249 1
=item SUPPORT STATUS OF PERL ON EPOC
d9251 1
a9251 1
=item AUTHOR
d9253 1
a9253 1
=item LAST UPDATE
d9255 1
a9255 1
=back
d9257 1
a9257 1
=head2 perlfreebsd, README.freebsd - Perl version 5 on FreeBSD systems
d9259 1
a9259 1
=over 4
d9261 1
a9261 1
=item DESCRIPTION
d9263 1
a9263 1
=over 4
d9265 1
a9265 1
=item FreeBSD core dumps from readdir_r with ithreads
d9267 1
a9267 1
=item $^X doesn't always contain a full path in FreeBSD
d9269 1
a9269 1
=item Perl will no longer be part of "base FreeBSD"
d9271 1
a9271 1
=back
d9273 1
a9273 1
=item AUTHOR
d9277 1
a9277 2
=head2 perlhpux, README.hpux - Perl version 5 on Hewlett-Packard Unix
(HP-UX) systems
d9281 1
a9281 1
=item DESCRIPTION
d9283 1
a9283 1
=over 4
d9285 1
a9285 1
=item Using perl as shipped with HP-UX
d9287 1
a9287 1
=item Using perl from HP's porting centre
d9289 1
a9289 1
=item Compiling Perl 5 on HP-UX
d9291 1
a9291 1
=item PA-RISC
d9293 1
a9293 1
=item Portability Between PA-RISC Versions
d9295 1
a9295 1
=item PA-RISC 1.0
d9297 1
a9297 1
=item PA-RISC 1.1
d9299 1
a9299 1
=item PA-RISC 2.0
d9301 1
a9301 1
=item Itanium Processor Family and HP-UX
d9303 1
a9303 1
=item Itanium & Itanium 2
d9305 1
a9305 1
=item Building Dynamic Extensions on HP-UX
d9307 1
a9307 1
=item The HP ANSI C Compiler
d9309 1
a9309 1
=item The GNU C Compiler
d9311 1
a9311 1
=item Using Large Files with Perl on HP-UX
d9313 1
a9313 1
=item Threaded Perl on HP-UX
d9315 1
a9315 1
=item 64-bit Perl on HP-UX
d9317 1
a9317 1
=item Oracle on HP-UX
d9319 1
a9319 1
=item GDBM and Threads on HP-UX
d9321 1
a9321 1
=item NFS filesystems and utime(2) on HP-UX
d9323 1
a9323 1
=item perl -P and // and HP-UX
d9325 1
a9325 1
=item HP-UX Kernel Parameters (maxdsiz) for Compiling Perl
d9329 1
a9329 1
=item nss_delete core dump from op/pwent or op/grent
d9331 50
a9380 1
=item AUTHOR
d9382 1
a9382 1
=item DATE
d9384 1
a9384 3
=back

=head2 perlhurd, README.hurd - Perl version 5 on Hurd
d9388 1
a9388 1
=item DESCRIPTION
d9390 11
a9400 1
=over 4
d9402 1
a9402 1
=item Known Problems with Perl on Hurd 
d9404 1
a9404 1
=back
d9406 1
a9406 1
=item AUTHOR
d9408 1
a9408 1
=back
d9410 1
a9410 1
=head2 perlirix, README.irix - Perl version 5 on Irix systems
d9412 1
a9412 1
=over 4
d9414 1
a9414 1
=item DESCRIPTION
d9418 1
a9418 1
=item Building 32-bit Perl in Irix
d9420 1
a9420 1
=item Building 64-bit Perl in Irix
d9422 1
a9422 1
=item About Compiler Versions of Irix
d9424 1
a9424 1
=item Linker Problems in Irix
d9426 1
a9426 1
=item Malloc in Irix
d9428 1
a9428 1
=item Building with threads in Irix
d9430 3
a9432 1
=item Irix 5.3
d9436 1
a9436 1
=item AUTHOR
d9438 4
a9441 1
=back
d9443 1
a9443 1
=head2 perllinux, README.linux - Perl version 5 on Linux systems
d9445 1
a9445 1
=over 4
d9447 1
a9447 5
=item DESCRIPTION

=over 4

=item Experimental Support for Sun Studio Compilers for Linux OS
d9451 1
a9451 6
=item AUTHOR

=back

=head2 perlmachten, README.machten - Perl version 5 on Power MachTen
systems
d9457 2
d9461 3
a9463 1
=item Perl version 5.8.x and greater not supported
d9465 1
a9465 1
=item Compiling Perl 5.6.x on MachTen
d9467 1
a9467 1
=item Failures during C<make test> on MachTen
d9469 1
a9469 1
op/lexassign.t, pragma/warnings.t
d9471 1
a9471 1
=item Building external modules on MachTen
d9473 1
a9473 1
=back
d9475 1
a9475 1
=item AUTHOR
d9477 1
a9477 1
=item DATE
d9479 1
a9479 1
=back
d9481 1
a9481 1
=head2 perlmacos, README.macos - Perl under Mac OS (Classic)
d9483 1
a9483 1
=over 4
d9485 1
a9485 1
=item SYNOPSIS
d9487 1
a9487 1
=item DESCRIPTION
d9489 1
a9489 1
=item AUTHOR
d9491 1
a9491 1
=item DATE
d9493 1
a9493 1
=back
d9495 1
a9495 1
=head2 perlmacosx, README.macosx - Perl under Mac OS X
d9497 1
a9497 1
=over 4
d9499 1
a9499 1
=item SYNOPSIS
d9501 1
a9501 1
=item DESCRIPTION
d9503 1
a9503 1
=over 4
d9505 1
a9505 1
=item Installation Prefix
d9507 1
a9507 1
=item libperl and Prebinding
d9509 1
a9509 1
=item Updating Apple-supplied Perl
d9511 1
a9511 1
=item 64-bit Perl
d9513 1
a9513 1
=item Intel processor support
d9515 1
a9515 1
=item  Universal binaries
d9517 1
a9517 1
=item Known problems
d9519 1
a9519 1
=item MacPerl
d9521 1
a9521 1
=item Carbon
d9523 1
a9523 1
=item Cocoa
d9525 1
a9525 1
=back
d9527 1
a9527 1
=item Starting From Scratch
d9529 1
a9529 1
=item AUTHOR
d9531 1
a9531 1
=item DATE
d9533 1
a9533 1
=back
d9535 1
a9535 1
=head2 perlmint, README.mint - Perl version 5 on Atari MiNT
d9537 1
a9537 1
=over 4
d9539 1
a9539 1
=item DESCRIPTION
d9541 1
a9541 1
=item Known problems with Perl on MiNT
d9543 1
a9543 1
=item AUTHOR
d9545 1
a9545 1
=back
d9547 1
a9547 1
=head2 perlmpeix, README.mpeix - Perl/iX for HP e3000 MPE
d9549 1
a9549 1
=over 4
d9551 1
a9551 1
=item SYNOPSIS
d9553 1
a9553 1
=item NOTE
d9555 1
a9555 1
=item Binary distribution from HP
d9557 1
a9557 1
=item What's New in Perl for MPE/iX
d9559 1
a9559 1
=item Welcome to Perl/iX
d9561 1
a9561 1
=item System Requirements for Perl/iX
d9563 1
a9563 1
=item How to Obtain Perl/iX
d9565 1
a9565 1
=item Perl/iX Distribution Contents Highlights
d9567 1
a9567 2
README, INSTALL, LIBSHP3K, PERL, .cpan/, lib/, man/,
public_html/feedback.cgi, src/perl-5.6.0-mpe
d9569 1
a9569 1
=item How to Compile Perl/iX
d9571 1
a9571 1
 4,  6
d9573 1
a9573 1
=item Getting Started with Perl/iX
d9575 1
a9575 1
=item MPE/iX Implementation Considerations
d9577 1
a9577 1
=item Known Perl/iX Bugs Under Investigation
d9579 1
a9579 1
=item Perl/iX To-Do List
d9581 8
a9588 1
=item Perl/iX Change History
d9590 1
a9590 1
=item AUTHOR
d9594 1
a9594 1
=head2 perlnetware - Perl for NetWare
d9598 1
a9598 1
=item DESCRIPTION
d9600 1
a9600 1
=item BUILD
d9602 1
a9602 1
=over 4
d9604 1
a9604 1
=item Tools & SDK
d9606 1
a9606 1
=item Setup
d9608 1
a9608 1
SetNWBld.bat, Buildtype.bat
d9610 1
a9610 1
=item Make
d9612 1
a9612 1
=item Interpreter
d9614 4
a9617 1
=item Extensions
d9619 1
a9619 1
=back
d9621 1
a9621 1
=item INSTALL
d9623 1
a9623 1
=item BUILD NEW EXTENSIONS
d9625 1
a9625 1
=item ACKNOWLEDGEMENTS
d9627 1
a9627 1
=item AUTHORS
d9629 1
a9629 1
=item DATE
d9633 1
a9633 1
=head2 perlopenbsd, README.openbsd - Perl version 5 on OpenBSD systems
d9637 3
a9639 1
=item DESCRIPTION
d9641 1
a9641 1
=over 4
d9643 1
a9643 2
=item OpenBSD core dumps from getprotobyname_r and getservbyname_r with
ithreads
d9645 1
a9645 1
=back
d9647 1
a9647 1
=item AUTHOR
d9649 1
a9649 1
=back
d9651 1
a9651 1
=head2 perlos2 - Perl under OS/2, DOS, Win0.3*, Win0.95 and WinNT.
d9653 1
a9653 1
=over 4
d9655 1
a9655 1
=item SYNOPSIS
d9659 1
a9659 3
=over 4

=item DESCRIPTION
d9663 1
a9663 1
=item Target
d9665 1
a9665 1
=item Other OSes
d9667 1
a9667 1
=item Prerequisites
d9669 1
a9669 1
EMX, RSX, HPFS, pdksh
d9671 1
a9671 3
=item Starting Perl programs under OS/2 (and DOS and...)

=item Starting OS/2 (and DOS) programs under Perl
d9675 1
a9675 1
=item Frequently asked questions
d9679 3
a9681 1
=item "It does not work"
d9683 1
a9683 1
=item I cannot run external programs
d9685 1
a9685 2
=item I cannot embed perl into my program, or use F<perl.dll> from my
program. 
d9687 1
a9687 2
Is your program EMX-compiled with C<-Zmt -Zcrtdll>?, Did you use
L<ExtUtils::Embed>?
d9689 1
a9689 1
=item C<``> and pipe-C<open> do not work under DOS.
d9691 1
a9691 1
=item Cannot start C<find.exe "pattern" file>
d9693 1
a9693 1
=back
d9695 1
a9695 1
=item INSTALLATION
d9697 1
a9697 1
=over 4
d9699 1
a9699 1
=item Automatic binary installation
d9701 1
a9701 1
C<PERL_BADLANG>, C<PERL_BADFREE>, F<Config.pm>
d9703 1
a9703 1
=item Manual binary installation
d9705 1
a9705 5
Perl VIO and PM executables (dynamically linked), Perl_ VIO executable
(statically linked), Executables for Perl utilities, Main Perl library,
Additional Perl modules, Tools to compile Perl modules, Manpages for Perl
and utilities, Manpages for Perl modules, Source for Perl documentation,
Perl manual in F<.INF> format, Pdksh
d9707 1
a9707 1
=item B<Warning>
d9711 56
a9766 1
=item Accessing documentation
d9770 1
a9770 1
=item OS/2 F<.INF> file
d9772 11
a9782 1
=item Plain text
d9784 1
a9784 1
=item Manpages
d9786 1
a9786 1
=item HTML
d9788 1
a9788 1
=item GNU C<info> files
d9790 1
a9790 1
=item F<PDF> files
d9792 1
a9792 1
=item C<LaTeX> docs
d9796 1
a9796 1
=item BUILD
d9800 1
a9800 1
=item The short story
d9802 1
a9802 1
=item Prerequisites
d9804 1
a9804 1
=item Getting perl source
d9806 1
a9806 1
=item Application of the patches
d9808 2
a9809 1
=item Hand-editing
d9811 1
a9811 1
=item Making
d9813 1
a9813 1
=item Testing
d9815 1
a9815 2
A lot of C<bad free>, Process terminated by SIGTERM/SIGINT, F<op/fs.t>,
F<op/stat.t>
d9817 3
a9819 3
=item Installing the built perl

=item C<a.out>-style build
d9823 1
a9823 1
=item Building a binary distribution
d9825 4
a9828 1
=item Building custom F<.EXE> files
d9830 1
a9830 1
=over 4
d9832 1
a9832 2
=item Making executables with a custom collection of statically loaded
extensions
d9834 1
a9834 1
=item Making executables with a custom search-paths
d9838 1
a9838 1
=item Build FAQ
d9842 1
a9842 1
=item Some C</> became C<\> in pdksh.
d9844 1
a9844 1
=item C<'errno'> - unresolved external
d9846 1
a9846 1
=item Problems with tr or sed
d9848 1
a9848 1
=item Some problem (forget which ;-)
d9850 1
a9850 1
=item Library ... not found
d9852 1
a9852 1
=item Segfault in make
d9854 1
a9854 1
=item op/sprintf test failure
d9856 1
a9856 1
=back
d9858 1
a9858 1
=item Specific (mis)features of OS/2 port
d9860 1
a9860 1
=over 4
d9862 1
a9862 1
=item C<setpriority>, C<getpriority>
d9864 1
a9864 1
=item C<system()>
d9866 1
a9866 1
=item C<extproc> on the first line
d9868 1
a9868 1
=item Additional modules:
d9870 1
a9870 1
=item Prebuilt methods:
d9872 1
a9872 12
C<File::Copy::syscopy>, C<DynaLoader::mod2fname>,  C<Cwd::current_drive()>,
 C<Cwd::sys_chdir(name)>,  C<Cwd::change_drive(name)>, 
C<Cwd::sys_is_absolute(name)>,	C<Cwd::sys_is_rooted(name)>, 
C<Cwd::sys_is_relative(name)>,	C<Cwd::sys_cwd(name)>, 
C<Cwd::sys_abspath(name, dir)>,  C<Cwd::extLibpath([type])>, 
C<Cwd::extLibpath_set( path [, type ] )>,
C<OS2::Error(do_harderror,do_exception)>, C<OS2::Errors2Drive(drive)>,
OS2::SysInfo(), OS2::BootDrive(), C<OS2::MorphPM(serve)>,
C<OS2::UnMorphPM(serve)>, C<OS2::Serve_Messages(force)>,
C<OS2::Process_Messages(force [, cnt])>, C<OS2::_control87(new,mask)>,
OS2::get_control87(), C<OS2::set_control87_em(new=MCW_EM,mask=MCW_EM)>,
C<OS2::DLLname([how [, \&xsub]])>
d9874 1
a9874 1
=item Prebuilt variables:
d9876 1
a9876 2
$OS2::emx_rev, $OS2::emx_env, $OS2::os_ver, $OS2::is_aout, $OS2::can_fork,
$OS2::nsyserror
d9878 3
a9880 1
=item Misfeatures
d9882 1
a9882 1
=item Modifications
d9884 1
a9884 2
C<popen>, C<tmpnam>, C<tmpfile>, C<ctermid>, C<stat>, C<mkdir>, C<rmdir>,
C<flock>
d9886 1
a9886 1
=item Identifying DLLs
d9888 1
a9888 1
=item Centralized management of resources
d9890 1
a9890 4
C<HAB>, C<HMQ>, Treating errors reported by OS/2 API,
C<CheckOSError(expr)>, C<CheckWinError(expr)>, C<SaveWinError(expr)>,
C<SaveCroakWinError(expr,die,name1,name2)>, C<WinError_2_Perl_rc>,
C<FillWinError>, C<FillOSError(rc)>, Loading DLLs and ordinals in DLLs
d9892 1
a9892 1
=back
d9894 1
a9894 1
=item Perl flavors
d9896 1
a9896 1
=over 4
d9898 1
a9898 1
=item F<perl.exe>
d9900 1
a9900 1
=item F<perl_.exe>
d9902 1
a9902 1
=item F<perl__.exe>
d9904 1
a9904 1
=item F<perl___.exe>
d9906 1
a9906 1
=item Why strange names?
d9908 1
a9908 1
=item Why dynamic linking?
d9910 1
a9910 1
=item Why chimera build?
d9912 1
a9912 1
=back
d9914 1
a9914 1
=item ENVIRONMENT
d9916 1
a9916 1
=over 4
d9918 1
a9918 1
=item C<PERLLIB_PREFIX>
d9920 1
a9920 1
=item C<PERL_BADLANG>
d9922 1
a9922 1
=item C<PERL_BADFREE>
d9924 1
a9924 1
=item C<PERL_SH_DIR>
d9926 1
a9926 1
=item C<USE_PERL_FLOCK>
d9928 1
a9928 1
=item C<TMP> or C<TEMP>
d9930 1
a9930 1
=back
d9932 1
a9932 1
=item Evolution
d9934 1
a9934 1
=over 4
d9936 1
a9936 1
=item Text-mode filehandles
d9938 1
a9938 1
=item Priorities
d9940 1
a9940 1
=item DLL name mangling: pre 5.6.2
d9942 1
a9942 1
=item DLL name mangling: 5.6.2 and beyond
d9944 1
a9944 14
Global DLLs, specific DLLs, C<BEGINLIBPATH> and C<ENDLIBPATH>, F<.> from
C<LIBPATH>

=item DLL forwarder generation

=item Threading

=item Calls to external programs

=item Memory allocation

=item Threads

C<COND_WAIT>, F<os2.c>
d9948 1
a9948 3
=item BUGS

=back
d9952 1
a9952 1
=item AUTHOR
d9954 1
a9954 1
=item SEE ALSO
d9958 1
a9958 2
=head2 perlos390, README.os390 - building and installing Perl for OS/390
and z/OS
d9962 1
a9962 1
=item SYNOPSIS
d9964 3
a9966 1
=item DESCRIPTION
d9968 1
a9968 1
=over 4
d9970 2
a9971 1
=item Tools
d9973 1
a9973 1
=item Unpacking Perl distribution on OS/390
d9975 1
a9975 1
=item Setup and utilities for Perl on OS/390
d9977 1
a9977 1
=item Configure Perl on OS/390
d9979 1
a9979 1
=item Build, Test, Install Perl on OS/390
d9981 17
a9997 1
=item Build Anomalies with Perl on OS/390
d9999 1
a9999 1
=item Testing Anomalies with Perl on OS/390
d10001 2
a10002 1
=item Installation Anomalies with Perl on OS/390
d10004 1
a10004 1
=item Usage Hints for Perl on OS/390
d10006 1
a10006 7
=item Floating Point Anomalies with Perl on OS/390

=item Modules and Extensions for Perl on OS/390

=back

=item AUTHORS
a10009 6
=over 4

=item Mailing list for Perl on OS/390

=back

d10014 1
a10014 1
=head2 perlos400, README.os400 - Perl version 5 on OS/400
d10020 1
a10020 1
=over 4
d10022 1
a10022 1
=item Compiling Perl for OS/400 PASE
d10024 1
a10024 1
=item Installing Perl in OS/400 PASE
d10026 1
a10026 1
=item Using Perl in OS/400 PASE
d10028 1
a10028 1
=item Known Problems
d10030 1
a10030 1
=item Perl on ILE
d10032 1
a10032 1
=back
d10034 1
a10034 1
=item AUTHORS
d10036 1
a10036 1
=back
d10038 1
a10038 1
=head2 perlplan9 - Plan 9-specific documentation for Perl
d10040 1
a10040 1
=over 4
d10042 1
a10042 1
=item DESCRIPTION
d10044 1
a10044 1
=over 4
d10046 1
a10046 1
=item Invoking Perl
d10048 1
a10048 1
=item What's in Plan 9 Perl
d10050 1
a10050 1
=item What's not in Plan 9 Perl
d10052 1
a10052 1
=item Perl5 Functions not currently supported in Plan 9 Perl
d10054 1
a10054 1
=item Signals in Plan 9 Perl
d10056 1
a10056 1
=back
d10058 2
a10059 1
=item COMPILING AND INSTALLING PERL ON PLAN 9
d10061 1
a10061 1
=over 4
d10063 1
a10063 1
=item Installing Perl Documentation on Plan 9
d10065 1
a10065 1
=back
d10067 1
a10067 1
=item BUGS
d10069 1
a10069 1
=item Revision date
d10071 1
a10071 1
=item AUTHOR
d10073 1
a10073 1
=back
d10075 1
a10075 1
=head2 perlqnx, README.qnx - Perl version 5 on QNX
d10077 1
a10077 1
=over 4
d10079 1
a10079 1
=item DESCRIPTION
d10081 1
a10081 1
=over 4
d10083 5
a10087 1
=item Required Software for Compiling Perl on QNX4
d10089 1
a10089 1
/bin/sh, ar, nm, cpp, make
d10091 1
a10091 1
=item Outstanding Issues with Perl on QNX4
d10093 1
a10093 1
=item QNX auxiliary files
d10095 2
a10096 1
qnx/ar, qnx/cpp
d10098 1
a10098 1
=item Outstanding issues with perl under QNX6
d10100 1
a10100 1
=back
d10102 1
a10102 1
=item AUTHOR
d10106 1
a10106 1
=head2 perlsolaris, README.solaris - Perl version 5 on Solaris systems
d10110 3
a10112 1
=item DESCRIPTION
d10114 1
a10114 1
=over 4
d10116 1
a10116 1
=item Solaris Version Numbers.
d10120 1
a10120 1
=item RESOURCES
d10122 2
a10123 1
Solaris FAQ, Precompiled Binaries, Solaris Documentation
d10125 1
a10125 1
=item SETTING UP
d10129 1
a10129 1
=item File Extraction Problems on Solaris.
d10131 1
a10131 1
=item Compiler and Related Tools on Solaris.
d10133 1
a10133 1
=item Environment for Compiling perl on Solaris
d10135 1
a10135 1
=back
d10137 3
a10139 1
=item RUN CONFIGURE.
d10141 1
a10141 1
=over 4
d10143 1
a10143 1
=item 64-bit perl on Solaris.
d10145 1
a10145 1
=item Threads in perl on Solaris.
d10147 1
a10147 1
=item Malloc Issues with perl on Solaris.
d10151 1
a10151 8
=item MAKE PROBLEMS.

Dynamic Loading Problems With GNU as and GNU ld, ld.so.1: ./perl: fatal:
relocation error:, dlopen: stub interception failed, #error "No
DATAMODEL_NATIVE specified", sh: ar: not found, warning: dead part of
constant expression is nonconstant

=item MAKE TEST
d10155 1
a10155 1
=item op/stat.t test 4 in Solaris
d10157 1
a10157 1
=item nss_delete core dump from op/pwent or op/grent
d10159 1
a10159 1
=back
d10161 1
a10161 7
=item PREBUILT BINARIES OF PERL FOR SOLARIS.

=item RUNTIME ISSUES FOR PERL ON SOLARIS.

=over 4

=item Limits on Numbers of Open Files on Solaris.
d10165 1
a10165 1
=item SOLARIS-SPECIFIC MODULES.
d10167 2
a10168 1
=item SOLARIS-SPECIFIC PROBLEMS WITH MODULES.
d10170 1
a10170 1
=over 4
d10172 2
a10173 1
=item Proc::ProcessTable on Solaris
d10175 1
a10175 1
=item BSD::Resource on Solaris
d10177 25
a10201 1
=item Net::SSLeay on Solaris
d10203 1
a10203 1
=back
d10205 1
a10205 1
=item SunOS 4.x
d10207 1
a10207 1
=item AUTHOR
d10211 1
a10211 2
=head2 perltru64, README.tru64 - Perl version 5 on Tru64 (formerly known as
Digital UNIX formerly known as DEC OSF/1) systems
d10215 2
d10219 2
d10223 1
a10223 1
=item Compiling Perl 5 on Tru64
d10225 1
a10225 1
=item Using Large Files with Perl on Tru64
d10227 2
a10228 1
=item Threaded Perl on Tru64
d10230 1
a10230 1
=item Long Doubles on Tru64
d10232 1
a10232 1
=item DB_File tests failing on Tru64
d10234 1
a10234 3
=item 64-bit Perl on Tru64

=item Warnings about floating-point overflow when compiling Perl on Tru64
d10238 1
a10238 1
=item Testing Perl on Tru64
d10240 1
a10240 1
=item ext/ODBM_File/odbm Test Failing With Static Builds
d10242 1
a10242 3
=item Perl Fails Because Of Unresolved Symbol sockatmark

=item AUTHOR
a10245 2
=head2 perluts - Perl under UTS

a10247 2
=item SYNOPSIS

d10250 1
a10250 5
=item BUILDING PERL ON UTS

=item Installing the built perl on UTS

=item AUTHOR
d10254 1
a10254 1
=head2 perlvmesa, README.vmesa - building and installing Perl for VM/ESA.
a10257 2
=item SYNOPSIS

d10262 1
a10262 1
=item Unpacking Perl Distribution on VM/ESA
d10264 1
a10264 1
=item Setup Perl and utilities on VM/ESA
d10266 1
a10266 1
=item Configure Perl on VM/ESA
d10268 1
a10268 1
=item Testing Anomalies of Perl on VM/ESA
d10270 1
a10270 1
=item Usage Hints for Perl on VM/ESA
d10272 1
a10272 1
=back
d10274 1
a10274 1
=item AUTHORS
d10276 1
a10276 1
=item SEE ALSO
d10278 1
a10278 1
=over 4
d10280 1
a10280 1
=item Mailing list for Perl on VM/ESA
d10284 4
d10290 1
a10290 1
=head2 perlvms - VMS-specific documentation for Perl
d10294 1
a10294 1
=item DESCRIPTION
d10296 1
a10296 1
=item Installation
d10298 1
a10298 1
=item Organization of Perl Images
d10302 1
a10302 1
=item Core Images
d10304 1
a10304 1
=item Perl Extensions
d10306 1
a10306 1
=item Installing static extensions
d10308 1
a10308 1
=item Installing dynamic extensions
d10310 1
a10310 1
=back
d10312 1
a10312 9
=item File specifications

=over 4

=item Syntax

=item Wildcard expansion

=item Pipes
d10316 1
a10316 1
=item PERL5LIB and PERLLIB
d10318 1
a10318 1
=item Command line
d10322 3
a10324 1
=item I/O redirection and backgrounding
d10326 1
a10326 1
=item Command line switches
d10328 1
a10328 1
-i, -S, -u
d10332 1
a10332 1
=item Perl functions
d10334 1
a10334 4
File tests, backticks, binmode FILEHANDLE, crypt PLAINTEXT, USER, dump,
exec LIST, fork, getpwent, getpwnam, getpwuid, gmtime, kill, qx//, select
(system call), stat EXPR, system LIST, time, times, unlink LIST, utime
LIST, waitpid PID,FLAGS
d10336 1
a10336 1
=item Perl variables
d10338 1
a10338 1
%ENV, CRTL_ENV, CLISYM_[LOCAL], Any other string, $!, $^E, $?, $|
d10340 1
a10340 1
=item Standard modules with VMS-specific differences
d10342 1
a10342 1
=over 4
d10344 1
a10344 1
=item SDBM_File
d10348 3
a10350 1
=item Revision date
d10352 1
a10352 1
=item AUTHOR
d10356 1
a10356 1
=head2 perlvos, README.vos - Perl for Stratus VOS
d10360 1
a10360 1
=item SYNOPSIS
d10362 1
a10362 5
=over 4

=item Multiple methods to build perl for VOS

=item Stratus POSIX Support
d10366 1
a10366 1
=item INSTALLING PERL IN VOS
d10370 1
a10370 1
=item Compiling Perl 5 on VOS
d10372 1
a10372 1
=item Installing Perl 5 on VOS
d10374 1
a10374 1
=back
d10376 1
a10376 1
=item USING PERL IN VOS
d10378 1
a10378 1
=over 4
d10380 1
a10380 1
=item Unimplemented Features of Perl on VOS
d10382 1
a10382 3
=item Restrictions of Perl on VOS

=item Handling of underflow and overflow
d10386 1
a10386 1
=item TEST STATUS
d10388 1
a10388 5
=item SUPPORT STATUS

=item AUTHOR

=item LAST UPDATE
d10392 1
a10392 1
=head2 perlwin32 - Perl under Windows
d10402 1
a10402 1
=item Setting Up Perl on Win32
d10404 1
a10404 3
Make, Command Shell, Borland C++, Microsoft Visual C++, Microsoft Visual
C++ Toolkit 2003, Microsoft Platform SDK 64-bit Compiler, MinGW release 3
with gcc, MinGW release 1 with gcc
d10406 1
a10406 1
=item Building
d10408 1
a10408 1
=item Testing Perl on Win32
d10410 1
a10410 1
=item Installation of Perl on Win32
d10412 1
a10412 1
=item Usage Hints for Perl on Win32
d10414 1
a10414 3
Environment Variables, File Globbing, Using perl from the command line,
Building Extensions, Command-line Wildcard Expansion, Win32 Specific
Extensions, Notes on 64-bit Windows
d10416 1
a10416 1
=item Running Perl Scripts
d10418 3
a10420 1
=item Miscellaneous Things
d10424 1
a10424 1
=item BUGS AND CAVEATS
d10426 1
a10426 1
=item ACKNOWLEDGEMENTS
d10428 1
a10428 1
=item AUTHORS
d10430 1
a10430 4
Gary Ng E<lt>71564.1743@@CompuServe.COME<gt>, Gurusamy Sarathy
E<lt>gsar@@activestate.comE<gt>, Nick Ing-Simmons
E<lt>nick@@ing-simmons.netE<gt>, Jan Dubois E<lt>jand@@activestate.comE<gt>,
Steve Hay E<lt>steve.hay@@uk.radan.comE<gt>
d10432 1
a10432 1
=item SEE ALSO
d10438 3
a10440 1
=head1 PRAGMA DOCUMENTATION
d10442 1
a10442 1
=head2 attrs - set/get attributes of a subroutine (deprecated)
d10446 3
a10448 1
=item SYNOPSIS
d10450 1
a10450 1
=item DESCRIPTION
d10452 4
a10455 1
method, locked
d10459 1
a10459 1
=head2 re - Perl pragma to alter regular expression behaviour
a10462 2
=item SYNOPSIS

d10465 1
a10465 1
=back
d10467 1
a10467 2
=head2 threadshared::shared, threads::shared - Perl extension for sharing
data structures between threads
d10469 1
a10469 1
=over 4
d10471 1
a10471 1
=item SYNOPSIS
d10473 1
a10473 1
=item DESCRIPTION
d10475 1
a10475 1
=item EXPORT
d10477 1
a10477 1
=item FUNCTIONS
d10479 1
a10479 3
share VARIABLE, lock VARIABLE, cond_wait VARIABLE, cond_wait CONDVAR,
LOCKVAR, cond_timedwait VARIABLE, ABS_TIMEOUT, cond_timedwait CONDVAR,
ABS_TIMEOUT, LOCKVAR, cond_signal VARIABLE, cond_broadcast VARIABLE
d10481 1
a10481 1
=item NOTES
d10483 1
a10483 1
=item BUGS
d10485 1
a10485 1
=item AUTHOR
d10487 1
a10487 1
=item SEE ALSO
d10491 1
a10491 2
=head2 threads - Perl extension allowing use of interpreter based threads
from perl
d10497 1
a10497 1
=item DESCRIPTION
d10499 1
a10499 3
$thread = threads->create(function, LIST), $thread->join, $thread->detach,
threads->self, $thread->tid, threads->object( tid ), threads->yield();,
threads->list();, async BLOCK;
d10501 1
a10501 1
=item WARNINGS
d10503 1
a10503 1
A thread exited while %d other threads were still running
d10505 1
a10505 10
=item TODO

=item BUGS

Parent-Child threads, tid is I32, Returning objects, Creating threads
inside BEGIN blocks, PERL_OLD_SIGNALS are not threadsafe, will not be

=item AUTHOR and COPYRIGHT

=item SEE ALSO
d10509 1
a10509 1
=head2 attributes - get/set subroutine or variable attributes
d10513 1
a10513 1
=item SYNOPSIS
d10515 1
a10515 1
=item DESCRIPTION
d10517 2
a10518 1
=over 4
d10520 1
a10520 1
=item Built-in Attributes
d10522 3
a10524 1
locked, method, lvalue
d10526 1
a10526 1
=item Available Subroutines
d10528 1
a10528 1
get, reftype
d10530 1
a10530 1
=item Package-specific Attribute Handling
d10532 1
a10532 1
FETCH_I<type>_ATTRIBUTES, MODIFY_I<type>_ATTRIBUTES
d10534 1
a10534 5
=item Syntax of Attribute Lists

=back

=item EXPORTS
d10538 1
a10538 1
=item Default exports
d10540 1
a10540 1
=item Available exports
d10542 1
a10542 1
=item Export tags defined
d10546 1
a10546 7
=item EXAMPLES

=item SEE ALSO

=back

=head2 autouse - postpone load of modules until a function is used
d10550 1
a10550 1
=item SYNOPSIS
d10552 2
a10553 1
=item DESCRIPTION
d10555 1
a10555 1
=item WARNING
d10557 3
a10559 3
=item AUTHOR

=item SEE ALSO
d10563 1
a10563 1
=head2 base - Establish IS-A relationship with base classes at compile time
d10565 1
a10565 1
=over 4
d10567 2
a10568 1
=item SYNOPSIS
d10570 1
a10570 1
=item DESCRIPTION
d10572 1
a10572 3
=item DIAGNOSTICS

Base class package "%s" is empty
a10575 4
=item CAVEATS

=item SEE ALSO

d10578 1
a10578 1
=head2 bigint - Transparent BigInteger support for Perl
d10584 1
a10584 1
=item DESCRIPTION
d10588 1
a10588 1
=item Options
d10590 1
a10590 1
a or accuracy, p or precision, t or trace, l or lib, v or version
d10592 1
a10592 1
=item Math Library
d10594 1
a10594 1
=item Internal Format
d10596 1
a10596 1
=item Sign
d10598 1
a10598 1
=item Methods
d10600 1
a10600 1
=item Caveat
d10604 1
a10604 5
=item MODULES USED

=item EXAMPLES

=item LICENSE
a10607 2
=item AUTHORS

d10610 1
a10610 1
=head2 bignum - Transparent BigNumber support for Perl
d10620 7
a10626 1
=item Options
d10628 1
a10628 1
a or accuracy, p or precision, t or trace, l or lib, v or version
d10630 1
a10630 1
=item Methods
d10632 1
a10632 1
=item Caveat
d10634 1
a10634 1
inf(), NaN(), upgrade()
d10636 1
a10636 1
=item MATH LIBRARY
d10638 1
a10638 1
=item INTERNAL FORMAT
d10640 1
a10640 1
=item SIGN
d10642 1
a10642 1
=back
d10644 1
a10644 1
=item MODULES USED
d10646 1
a10646 1
=item EXAMPLES
d10648 1
a10648 1
=item LICENSE
a10651 2
=item AUTHORS

d10654 1
a10654 1
=head2 bigrat - Transparent BigNumber/BigRational support for Perl
d10660 1
a10660 1
=item DESCRIPTION
d10662 1
a10662 1
=over 4
d10664 1
a10664 1
=item Modules Used
d10666 1
a10666 1
=item Math Library
d10668 1
a10668 1
=item Sign
d10670 1
a10670 1
=item Methods
d10672 1
a10672 1
=item Cavaet
d10674 1
a10674 3
=item Options

a or accuracy, p or precision, t or trace, l or lib, v or version
d10678 1
a10678 1
=item EXAMPLES
d10680 1
a10680 5
	perl -Mbigrat -le 'print sqrt(33)'
	perl -Mbigrat -le 'print 2*255'
	perl -Mbigrat -le 'print 4.5+2*255'
	perl -Mbigrat -le 'print 3/7 + 5/7 + 8/3'	
	perl -Mbigrat -le 'print 12->is_odd()';
d10682 1
a10682 1
=item LICENSE
d10684 1
a10684 1
=item SEE ALSO
d10686 1
a10686 1
=item AUTHORS
d10688 1
a10688 1
=back
d10690 1
a10690 1
=head2 blib - Use MakeMaker's uninstalled version of a package
d10694 3
a10696 1
=item SYNOPSIS
d10698 1
a10698 1
=item DESCRIPTION
d10700 1
a10700 1
=item BUGS
d10706 2
a10707 2
=head2 bytes - Perl pragma to force byte semantics rather than character
semantics
a10710 2
=item SYNOPSIS

d10713 1
a10713 1
=item LIMITATIONS
d10715 1
a10715 1
=item SEE ALSO
d10717 1
a10717 1
=back
d10719 1
a10719 2
=head2 charnames - define character names for C<\N{named}> string literal
escapes
d10721 1
a10721 1
=over 4
d10723 1
a10723 1
=item SYNOPSIS
d10725 1
a10725 1
=item DESCRIPTION
d10727 1
a10727 1
=item CUSTOM TRANSLATORS
d10729 1
a10729 1
=item CUSTOM ALIASES
d10731 1
a10731 1
=over 4
d10733 1
a10733 1
=item Anonymous hashes
d10735 1
a10735 1
=item Alias file
d10737 1
a10737 1
=item Alias shortcut
d10739 1
a10739 1
=back
d10741 1
a10741 1
=item charnames::viacode(code)
d10743 1
a10743 1
=item charnames::vianame(name)
d10745 1
a10745 1
=item ALIASES
d10747 1
a10747 1
=item ILLEGAL CHARACTERS
d10749 1
a10749 1
=item BUGS
d10751 1
a10751 1
=back
d10753 1
a10753 1
=head2 constant - Perl pragma to declare constants
d10755 1
a10755 15
=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=over 4

=item List constants

=item Defining multiple constants at once

=item Magic constants
d10759 1
a10759 1
=item TECHNICAL NOTES
d10761 1
a10761 1
=item BUGS
d10765 1
a10765 1
=item COPYRIGHT
d10769 1
a10769 1
=head2 diagnostics, splain - produce verbose warning diagnostics
a10772 2
=item SYNOPSIS

d10777 1
a10777 3
=item The C<diagnostics> Pragma

=item The I<splain> Program
d10781 1
a10781 1
=item EXAMPLES
d10783 1
a10783 1
=item INTERNALS
d10785 1
a10785 1
=item BUGS
d10787 1
a10787 1
=item AUTHOR
d10789 1
a10789 1
=back
d10791 1
a10791 1
=head2 encoding - allows you to write your script in non-ascii or non-utf8
d10793 1
a10793 1
=over 4
d10795 1
a10795 1
=item SYNOPSIS
d10797 1
a10797 1
=item ABSTRACT
d10799 1
a10799 1
=over 4
d10801 1
a10801 1
=item Literal Conversions
d10803 1
a10803 1
=item PerlIO layers for C<STD(IN|OUT)>
d10805 1
a10805 1
=item Implicit upgrading for byte strings
d10809 1
a10809 1
=item FEATURES THAT REQUIRE 5.8.1
d10811 1
a10811 1
"NON-EUC" doublebyte encodings, tr//, DATA pseudo-filehandle
d10813 1
a10813 1
=item USAGE
d10815 1
a10815 2
use encoding [I<ENCNAME>] ;, use encoding I<ENCNAME> [ STDIN =E<gt>
I<ENCNAME_IN> ...] ;, use encoding I<ENCNAME> Filter=E<gt>1;, no encoding;
d10817 1
a10817 1
=item The Filter Option
d10821 1
a10821 1
=item Filter-related changes at Encode version 1.87
d10825 1
a10825 1
=item CAVEATS
d10827 1
a10827 1
=over 4
d10829 2
a10830 1
=item NOT SCOPED
d10832 1
a10832 1
=item DO NOT MIX MULTIPLE ENCODINGS
d10834 1
a10834 1
=item tr/// with ranges
d10836 1
a10836 1
Legend of characters above
d10838 1
a10838 1
=back
d10840 1
a10840 1
=item EXAMPLE - Greekperl
d10842 1
a10842 1
=item KNOWN PROBLEMS
d10844 1
a10844 1
literals in regex that are longer than 127 bytes, EBCDIC, format
d10846 1
a10846 3
=over 4

=item The Logic of :locale
d10850 1
a10850 1
=item HISTORY
d10852 1
a10852 1
=item SEE ALSO
d10856 1
a10856 1
=head2 fields - compile-time class fields
d10864 1
a10864 1
new, phash
d10866 1
a10866 1
=item SEE ALSO
d10870 1
a10870 1
=head2 filetest - Perl pragma to control the filetest permission operators
d10880 9
a10888 1
=item subpragma access
d10890 1
a10890 1
=back
d10892 1
a10892 1
=back
d10894 1
a10894 1
=head2 if - C<use> a Perl module if a condition holds
d10896 1
a10896 1
=over 4
d10898 1
a10898 1
=item SYNOPSIS
d10900 1
a10900 1
=item DESCRIPTION
d10902 1
a10902 1
=item BUGS
d10906 2
d10910 1
a10910 2
=head2 integer - Perl pragma to use integer arithmetic instead of floating
point
d10914 3
a10916 1
=item SYNOPSIS
d10918 1
a10918 1
=item DESCRIPTION
d10922 1
a10922 1
=head2 less - perl pragma to request less of something from the compiler
d10928 3
a10930 1
=item DESCRIPTION
d10932 1
a10932 1
=back
d10934 1
a10934 1
=head2 lib - manipulate @@INC at compile time
d10936 1
a10936 1
=over 4
d10938 1
a10938 1
=item SYNOPSIS
d10940 1
a10940 1
=item DESCRIPTION
d10942 2
a10943 1
=over 4
d10945 1
a10945 1
=item Adding directories to @@INC
d10947 1
a10947 1
=item Deleting directories from @@INC
d10949 1
a10949 1
=item Restoring original @@INC
d10951 1
a10951 1
=back
d10953 1
a10953 1
=item CAVEATS
d10955 1
a10955 1
=item NOTES
d10957 1
a10957 1
=item SEE ALSO
d10963 1
a10963 2
=head2 locale - Perl pragma to use and avoid POSIX locales for built-in
operations
a10966 2
=item SYNOPSIS

d10969 1
a10969 1
=back
d10971 1
a10971 1
=head2 open - perl pragma to set default PerlIO layers for input and output
d10973 1
a10973 1
=over 4
d10975 1
a10975 1
=item SYNOPSIS
d10977 1
a10977 1
=item DESCRIPTION
d10979 1
a10979 1
=item NONPERLIO FUNCTIONALITY
d10981 1
a10981 1
=item IMPLEMENTATION DETAILS
d10983 1
a10983 1
=item SEE ALSO
d10987 1
a10987 1
=head2 ops - Perl pragma to restrict unsafe operations when compiling
d10989 1
a10989 1
=over 4
d10991 1
a10991 1
=item SYNOPSIS	
d10993 1
a10993 1
=item DESCRIPTION
d10995 1
a10995 1
=item SEE ALSO
d10999 1
a10999 1
=head2 overload - Package for overloading Perl operations
a11002 2
=item SYNOPSIS

d11007 2
a11008 1
=item Declaration of overloaded functions
d11010 1
a11010 1
=item Calling Conventions for Binary Operations
d11012 1
a11012 1
FALSE, TRUE, C<undef>
d11014 1
a11014 1
=item Calling Conventions for Unary Operations
d11016 1
a11016 1
=item Calling Conventions for Mutators
d11018 1
a11018 1
C<++> and C<-->, C<x=> and other assignment versions
d11020 1
a11020 1
=item Overloadable Operations
d11022 1
a11022 3
I<Arithmetic operations>, I<Comparison operations>, I<Bit operations>,
I<Increment and decrement>, I<Transcendental functions>, I<Boolean, string
and numeric conversion>, I<Iteration>, I<Dereferencing>, I<Special>
d11024 1
a11024 1
=item Inheritance and overloading
d11026 1
a11026 2
Strings as values of C<use overload> directive, Overloading of an operation
is inherited by derived classes
d11028 1
a11028 1
=back
d11030 1
a11030 1
=item SPECIAL SYMBOLS FOR C<use overload>
d11032 1
a11032 1
=over 4
d11034 1
a11034 1
=item Last Resort
d11036 1
a11036 1
=item Fallback
d11038 1
a11038 1
C<undef>, TRUE, defined, but FALSE
d11040 1
a11040 3
=item Copy Constructor

B<Example>
d11044 1
a11044 1
=item MAGIC AUTOGENERATION
d11046 1
a11046 4
I<Assignment forms of arithmetic operations>, I<Conversion operations>,
I<Increment and decrement>, C<abs($a)>, I<Unary minus>, I<Negation>,
I<Concatenation>, I<Comparison operations>, I<Iterator>, I<Dereferencing>,
I<Copy operator>
d11048 1
a11048 1
=item Losing overloading
d11050 1
a11050 1
=item Run-time Overloading
d11052 2
a11053 1
=item Public functions
d11055 2
a11056 1
overload::StrVal(arg), overload::Overloaded(arg), overload::Method(obj,op)
d11058 1
a11058 1
=item Overloading constants
d11060 1
a11060 1
integer, float, binary, q, qr
d11062 1
a11062 1
=item IMPLEMENTATION
d11064 1
a11064 1
=item Metaphor clash
d11066 1
a11066 1
=item Cookbook
d11068 1
a11068 1
=over 4
d11070 1
a11070 1
=item Two-face scalars
d11072 1
a11072 1
=item Two-face references
d11074 5
a11078 1
=item Symbolic calculator
d11080 1
a11080 1
=item I<Really> symbolic calculator
d11084 11
a11094 1
=item AUTHOR
d11096 1
a11096 1
=item DIAGNOSTICS
d11098 1
a11098 2
Odd number of arguments for overload::constant, `%s' is not an overloadable
type, `%s' is not a code reference
d11100 1
a11100 1
=item BUGS
d11104 1
a11104 1
=head2 sigtrap - Perl pragma to enable simple signal handling
d11108 1
a11108 1
=item SYNOPSIS
d11110 1
a11110 1
=item DESCRIPTION
d11112 1
a11112 1
=item OPTIONS
d11114 1
a11114 1
=over 4
d11116 1
a11116 1
=item SIGNAL HANDLERS
d11118 1
a11118 1
B<stack-trace>, B<die>, B<handler> I<your-handler>
d11120 1
a11120 1
=item SIGNAL LISTS
d11122 2
a11123 1
B<normal-signals>, B<error-signals>, B<old-interface-signals>
d11125 1
a11125 1
=item OTHER
d11127 1
a11127 1
B<untrapped>, B<any>, I<signal>, I<number>
d11131 1
a11131 1
=item EXAMPLES
d11133 1
a11133 3
=back

=head2 sort - perl pragma to control sort() behaviour
d11137 2
a11138 1
=item SYNOPSIS
d11140 1
a11140 3
=item DESCRIPTION

=item CAVEATS
d11144 1
a11144 1
=head2 strict - Perl pragma to restrict unsafe constructs
d11148 7
a11154 1
=item SYNOPSIS
d11156 1
a11156 1
=item DESCRIPTION
d11158 1
a11158 1
C<strict refs>, C<strict vars>, C<strict subs>
d11160 1
a11160 1
=item HISTORY
d11164 1
a11164 1
=head2 subs - Perl pragma to predeclare sub names
d11168 1
a11168 1
=item SYNOPSIS
d11170 1
a11170 1
=item DESCRIPTION
d11172 1
a11172 1
=back
d11174 1
a11174 2
=head2 threadshared, threads::shared - Perl extension for sharing data
structures between threads
d11176 1
a11176 1
=over 4
d11178 12
a11189 1
=item SYNOPSIS
d11191 1
a11191 1
=item DESCRIPTION
d11193 2
a11194 1
=item EXPORT
d11196 1
a11196 1
=item FUNCTIONS
d11198 1
a11198 3
share VARIABLE, lock VARIABLE, cond_wait VARIABLE, cond_wait CONDVAR,
LOCKVAR, cond_timedwait VARIABLE, ABS_TIMEOUT, cond_timedwait CONDVAR,
ABS_TIMEOUT, LOCKVAR, cond_signal VARIABLE, cond_broadcast VARIABLE
d11200 2
a11201 1
=item NOTES
d11203 1
a11203 1
=item BUGS
d11205 1
a11205 1
=item AUTHOR
d11207 4
a11210 1
=item SEE ALSO
d11214 1
a11214 2
=head2 utf8 - Perl pragma to enable/disable UTF-8 (or UTF-EBCDIC) in source
code
d11218 1
a11218 1
=item SYNOPSIS
d11220 1
a11220 1
=item DESCRIPTION
d11222 1
a11222 1
=over 4
d11224 1
a11224 1
=item Utility functions
d11226 1
a11226 3
$num_octets = utf8::upgrade($string), $success = utf8::downgrade($string[,
FAIL_OK]), utf8::encode($string), utf8::decode($string), $flag =
utf8::is_utf8(STRING), $flag = utf8::valid(STRING)
d11228 1
a11228 1
=back
d11230 1
a11230 3
=item BUGS

=item SEE ALSO
d11234 1
a11234 1
=head2 vars - Perl pragma to predeclare global variable names (obsolete)
d11238 1
a11238 1
=item SYNOPSIS
d11240 1
a11240 1
=item DESCRIPTION
d11242 1
a11242 1
=back
d11244 1
a11244 1
=head2 vmsish - Perl pragma to control VMS-specific language features
d11246 1
a11246 1
=over 4
d11248 1
a11248 5
=item SYNOPSIS

=item DESCRIPTION

C<vmsish status>, C<vmsish exit>, C<vmsish time>, C<vmsish hushed>
d11252 1
a11252 1
=head2 warnings - Perl pragma to control optional warnings
d11256 1
a11256 1
=item SYNOPSIS
d11258 1
a11258 1
=item DESCRIPTION
d11260 1
a11260 5
use warnings::register, warnings::enabled(), warnings::enabled($category),
warnings::enabled($object), warnings::warn($message),
warnings::warn($category, $message), warnings::warn($object, $message),
warnings::warnif($message), warnings::warnif($category, $message),
warnings::warnif($object, $message)
d11262 1
a11262 1
=back
d11264 2
a11265 1
=head2 warnings::register - warnings import function
d11267 1
a11267 1
=over 4
d11269 1
a11269 1
=item SYNOPSIS
d11271 1
a11271 1
=item DESCRIPTION
d11273 1
a11273 1
=back
d11275 1
a11275 1
=head1 MODULE DOCUMENTATION
d11277 1
a11277 1
=head2 AnyDBM_File - provide framework for multiple DBMs
d11279 1
a11279 1
=over 4
d11281 1
a11281 1
=item SYNOPSIS
d11283 1
a11283 1
=item DESCRIPTION
d11287 1
a11287 5
=item DBM Comparisons

[0], [1], [2], [3]

=back
d11293 2
a11294 1
=head2 Attribute::Handlers - Simpler definition of attribute handlers
a11297 2
=item VERSION

a11301 2
[0], [1], [2], [3], [4], [5]

d11304 1
a11304 1
=item Typed lexicals
d11306 1
a11306 1
=item Type-specific attribute handlers
d11308 13
a11320 1
=item Non-interpretive attribute handlers
d11322 1
a11322 1
=item Phase-specific attribute handlers
d11324 1
a11324 1
=item Attributes as C<tie> interfaces
d11328 1
a11328 1
=item EXAMPLES
d11330 1
a11330 1
=item DIAGNOSTICS
d11332 1
a11332 5
C<Bad attribute type: ATTR(%s)>, C<Attribute handler %s doesn't handle %s
attributes>, C<Declaration of %s attribute in package %s may clash with
future reserved word>, C<Can't have two ATTR specifiers on one subroutine>,
C<Can't autotie a %s>, C<Internal error: %s symbol went missing>, C<Won't
be able to apply END handler>
d11334 1
a11334 1
=item AUTHOR
d11336 1
a11336 1
=item BUGS
d11338 1
a11338 1
=item COPYRIGHT
d11342 1
a11342 1
=head2 AutoLoader - load subroutines only on demand
a11345 2
=item SYNOPSIS

d11350 3
a11352 1
=item Subroutine Stubs
d11354 1
a11354 1
=item Using B<AutoLoader>'s AUTOLOAD Subroutine
d11356 1
a11356 1
=item Overriding B<AutoLoader>'s AUTOLOAD Subroutine
d11358 1
a11358 1
=item Package Lexicals
d11360 1
a11360 1
=item Not Using AutoLoader
d11362 1
a11362 1
=item B<AutoLoader> vs. B<SelfLoader>
d11366 7
a11372 1
=item CAVEATS
d11374 1
a11374 1
=item SEE ALSO
d11376 1
a11376 1
=back
d11378 1
a11378 1
=head2 AutoSplit - split a package for autoloading
d11380 1
a11380 1
=over 4
d11382 1
a11382 1
=item SYNOPSIS
d11384 1
a11384 1
=item DESCRIPTION
d11386 1
a11386 1
$keep, $check, $modtime
d11390 1
a11390 1
=item Multiple packages
d11394 5
a11398 1
=item DIAGNOSTICS
d11402 1
a11402 1
=head2 B - The Perl Compiler
a11405 2
=item SYNOPSIS

a11407 4
=item OVERVIEW

=item Utility Functions

d11410 1
a11410 2
=item Functions Returning C<B::SV>, C<B::AV>, C<B::HV>, and C<B::CV>
objects
d11412 1
a11412 2
sv_undef, sv_yes, sv_no, svref_2object(SVREF), amagic_generation, init_av,
check_av, begin_av, end_av, comppadlist, regex_padav, main_cv
d11414 1
a11414 1
=item Functions for Examining the Symbol Table
d11416 1
a11416 1
walksymtable(SYMREF, METHOD, RECURSE, PREFIX)
d11418 1
a11418 1
=item Functions Returning C<B::OP> objects or for walking op trees
d11420 1
a11420 1
main_root, main_start, walkoptree(OP, METHOD), walkoptree_debug(DEBUG)
d11422 1
a11422 1
=item Miscellaneous Utility Functions
d11424 1
a11424 2
ppname(OPNUM), hash(STR), cast_I32(I), minus_c, cstring(STR),
perlstring(STR), class(OBJ), threadsv_names
d11428 1
a11428 1
=item OVERVIEW OF CLASSES
d11432 3
a11434 1
=item SV-RELATED CLASSES
d11436 1
a11436 1
=item B::SV Methods
d11438 1
a11438 1
REFCNT, FLAGS, object_2svref
d11440 1
a11440 1
=item B::IV Methods
d11442 1
a11442 1
IV, IVX, UVX, int_value, needs64bits, packiv
d11444 1
a11444 1
=item B::NV Methods
d11446 1
a11446 1
NV, NVX
d11448 1
a11448 1
=item B::RV Methods
d11450 1
a11450 1
RV
d11452 1
a11452 1
=item B::PV Methods
d11454 1
a11454 1
PV, RV, PVX
d11456 1
a11456 1
=item B::PVMG Methods
d11458 1
a11458 1
MAGIC, SvSTASH
d11460 1
a11460 1
=item B::MAGIC Methods
d11462 1
a11462 1
MOREMAGIC, precomp, PRIVATE, TYPE, FLAGS, OBJ, PTR, REGEX
d11464 1
a11464 1
=item B::PVLV Methods
d11466 1
a11466 1
TARGOFF, TARGLEN, TYPE, TARG
d11468 1
a11468 1
=item B::BM Methods
d11470 1
a11470 1
USEFUL, PREVIOUS, RARE, TABLE
d11472 1
a11472 1
=item B::GV Methods
d11474 1
a11474 2
is_empty, NAME, SAFENAME, STASH, SV, IO, FORM, AV, HV, EGV, CV, CVGEN,
LINE, FILE, FILEGV, GvREFCNT, FLAGS
d11476 1
a11476 1
=item B::IO Methods
d11478 1
a11478 2
LINES, PAGE, PAGE_LEN, LINES_LEFT, TOP_NAME, TOP_GV, FMT_NAME, FMT_GV,
BOTTOM_NAME, BOTTOM_GV, SUBPROCESS, IoTYPE, IoFLAGS, IsSTD
d11480 1
a11480 1
=item B::AV Methods
d11482 3
a11484 1
FILL, MAX, OFF, ARRAY, ARRAYelt, AvFLAGS
d11486 1
a11486 1
=item B::CV Methods
d11488 1
a11488 2
STASH, START, ROOT, GV, FILE, DEPTH, PADLIST, OUTSIDE, OUTSIDE_SEQ, XSUB,
XSUBANY, CvFLAGS, const_sv
d11490 1
a11490 1
=item B::HV Methods
d11492 1
a11492 1
FILL, MAX, KEYS, RITER, NAME, PMROOT, ARRAY
d11494 1
a11494 1
=item OP-RELATED CLASSES
d11496 1
a11496 1
=item B::OP Methods
d11498 1
a11498 2
next, sibling, name, ppaddr, desc, targ, type, opt, static, flags, private,
spare
d11500 1
a11500 1
=item B::UNOP METHOD
d11502 1
a11502 1
first
d11504 1
a11504 1
=item B::BINOP METHOD
d11506 1
a11506 1
last
d11508 1
a11508 1
=item B::LOGOP METHOD
d11510 1
a11510 1
other
d11512 1
a11512 1
=item B::LISTOP METHOD
d11514 1
a11514 1
children
d11516 1
a11516 1
=item B::PMOP Methods
d11518 1
a11518 2
pmreplroot, pmreplstart, pmnext, pmregexp, pmflags, pmdynflags,
pmpermflags, precomp, pmoffset
d11520 1
a11520 1
=item B::SVOP METHOD
d11522 1
a11522 1
sv, gv
d11524 1
a11524 1
=item B::PADOP METHOD
d11526 1
a11526 1
padix
d11528 1
a11528 1
=item B::PVOP METHOD
d11530 1
a11530 1
pv
d11532 1
a11532 1
=item B::LOOP Methods
d11534 1
a11534 1
redoop, nextop, lastop
d11536 1
a11536 1
=item B::COP Methods
d11538 1
a11538 1
label, stash, stashpv, file, cop_seq, arybase, line, warnings, io
d11540 1
a11540 1
=back
d11542 1
a11542 1
=item AUTHOR
d11546 3
a11548 2
=head2 B::Asmdata - Autogenerated data about Perl ops, used to generate
bytecode
d11550 1
a11550 1
=over 4
d11552 1
a11552 1
=item SYNOPSIS
d11554 1
a11554 1
=item DESCRIPTION
d11556 1
a11556 1
%insn_data, @@insn_name, @@optype, @@specialsv_name
d11558 1
a11558 1
=item AUTHOR
d11562 2
a11563 1
=head2 B::Assembler - Assemble Perl bytecode
d11567 3
a11569 1
=item SYNOPSIS
d11571 1
a11571 1
=item DESCRIPTION
d11573 1
a11573 1
=item AUTHORS
d11575 1
a11575 1
=back
d11577 1
a11577 1
=head2 B::Bblock - Walk basic blocks
d11579 1
a11579 1
=over 4
d11581 1
a11581 1
=item SYNOPSIS
d11583 1
a11583 1
=item DESCRIPTION
d11585 1
a11585 1
=over 4
d11587 1
a11587 1
=item Functions
d11589 1
a11589 1
B<find_leaders>
d11591 1
a11591 1
=back
d11597 1
a11597 1
=head2 B::Bytecode - Perl compiler's bytecode backend
d11605 1
a11605 1
=item EXAMPLE
d11607 1
a11607 1
=item OPTIONS
d11609 1
a11609 7
B<-b>, B<-H>, B<-k>, B<-o>I<outfile>, B<-s>

=item KNOWN BUGS

=item NOTICE

=item AUTHORS
d11613 1
a11613 1
=head2 B::C - Perl compiler's C backend
d11621 3
a11623 1
=item OPTIONS
d11625 1
a11625 4
B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-D>, B<-Do>, B<-Dc>, B<-DA>,
B<-DC>, B<-DM>, B<-f>, B<-fcog>, B<-fsave-data>, B<-fppaddr>, B<-fwarn-sv>,
B<-fuse-script-name>, B<-fsave-sig-hash>, B<-On>, B<-O0>, B<-O1>, B<-O2>,
B<-llimit>
d11627 1
a11627 1
=item EXAMPLES
d11629 1
a11629 1
=item BUGS
d11631 1
a11631 1
=item AUTHOR
d11635 3
a11637 1
=head2 B::CC - Perl compiler's optimized C translation backend
d11641 3
a11643 1
=item SYNOPSIS
d11645 1
a11645 1
=item DESCRIPTION
d11647 1
a11647 1
=item OPTIONS
d11649 1
a11649 3
B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-mModulename>, B<-D>, B<-Dr>,
B<-DO>, B<-Ds>, B<-Dp>, B<-Dq>, B<-Dl>, B<-Dt>, B<-f>,
B<-ffreetmps-each-bblock>, B<-ffreetmps-each-loop>, B<-fomit-taint>, B<-On>
d11651 1
a11651 1
=item EXAMPLES
d11653 1
a11653 1
=item BUGS
d11655 1
a11655 1
=item DIFFERENCES
d11659 1
a11659 1
=item Loops
d11661 1
a11661 1
=item Context of ".."
d11663 1
a11663 1
=item Arithmetic
d11665 1
a11665 1
=item Deprecated features
d11669 1
a11669 5
=item AUTHOR

=back

=head2 B::Concise - Walk Perl syntax tree, printing concise info about ops
d11673 1
a11673 1
=item SYNOPSIS
d11675 1
a11675 1
=item DESCRIPTION
d11677 1
a11677 1
=item EXAMPLE
d11679 1
a11679 1
=item OPTIONS
d11681 1
a11681 1
=over 4
d11683 1
a11683 1
=item Options for Opcode Ordering
d11685 1
a11685 1
B<-basic>, B<-exec>, B<-tree>
d11687 1
a11687 1
=item Options for Line-Style
d11689 1
a11689 1
B<-concise>, B<-terse>, B<-linenoise>, B<-debug>, B<-env>
d11691 1
a11691 1
=item Options for tree-specific formatting
d11693 1
a11693 1
B<-compact>, B<-loose>, B<-vt>, B<-ascii>
d11695 1
a11695 1
=item Options controlling sequence numbering
d11697 1
a11697 1
B<-base>I<n>, B<-bigendian>, B<-littleendian>
d11699 1
a11699 5
=item Other options

B<-main>, B<-nomain>, B<-nobanner>, B<-banner>, B<-banneris> => subref

=item Option Stickiness
d11703 1
a11703 1
=item ABBREVIATIONS
d11705 4
a11708 1
=over 4
d11710 1
a11710 1
=item OP class abbreviations
d11712 1
a11712 1
=item OP flags abbreviations
d11714 1
a11714 3
=back

=item FORMATTING SPECIFICATIONS
d11718 1
a11718 1
=item Special Patterns
d11720 1
a11720 3
B<(x(>I<exec_text>B<;>I<basic_text>B<)x)>, B<(*(>I<text>B<)*)>,
B<(*(>I<text1>B<;>I<text2>B<)*)>, B<(?(>I<text1>B<#>I<var>I<Text2>B<)?)>,
B<~>
d11722 1
a11722 1
=item # Variables
d11724 1
a11724 6
B<#>I<var>, B<#>I<var>I<N>, B<#>I<Var>, B<#addr>, B<#arg>, B<#class>,
B<#classsym>, B<#coplabel>, B<#exname>, B<#extarg>, B<#firstaddr>,
B<#flags>, B<#flagval>, B<#hyphseq>, B<#label>, B<#lastaddr>, B<#name>,
B<#NAME>, B<#next>, B<#nextaddr>, B<#noise>, B<#private>, B<#privval>,
B<#seq>, B<#seqnum>, B<#opt>, B<#static>, B<#sibaddr>, B<#svaddr>,
B<#svclass>, B<#svval>, B<#targ>, B<#targarg>, B<#targarglife>, B<#typenum>
d11728 1
a11728 1
=item Using B::Concise outside of the O framework
d11732 3
a11734 1
=item Example: Altering Concise Renderings
d11736 1
a11736 1
=item set_style()
d11738 1
a11738 1
=item set_style_standard($name)
d11740 1
a11740 1
=item add_style()
d11742 1
a11742 1
=item add_callback()
d11744 1
a11744 1
=item Running B::Concise::compile()
d11746 1
a11746 1
=item B::Concise::reset_sequence()
d11748 1
a11748 1
=item Errors
d11750 1
a11750 1
=back
d11754 2
d11758 1
a11758 1
=head2 B::Debug - Walk Perl syntax tree, printing debug info about ops
d11766 3
a11768 1
=item AUTHOR
d11770 4
a11773 1
=back
d11775 1
a11775 1
=head2 B::Deparse - Perl compiler backend to produce perl code
d11777 1
a11777 1
=over 4
d11779 1
a11779 1
=item SYNOPSIS
d11781 1
a11781 1
=item DESCRIPTION
d11783 3
a11785 1
=item OPTIONS
d11787 1
a11787 2
B<-d>, B<-f>I<FILE>, B<-l>, B<-p>, B<-P>, B<-q>, B<-s>I<LETTERS>, B<C>,
B<i>I<NUMBER>, B<T>, B<v>I<STRING>B<.>, B<-x>I<LEVEL>
d11789 1
a11789 1
=item USING B::Deparse AS A MODULE
d11791 1
a11791 1
=over 4
d11793 1
a11793 1
=item Synopsis
d11795 1
a11795 1
=item Description
d11797 1
a11797 1
=item new
d11799 4
a11802 1
=item ambient_pragmas
d11804 1
a11804 1
strict, $[, bytes, utf8, integer, re, warnings, hint_bits, warning_bits
d11806 1
a11806 1
=item coderef2text
d11810 1
a11810 1
=item BUGS
d11812 1
a11812 5
=item AUTHOR

=back

=head2 B::Disassembler - Disassemble Perl bytecode
d11820 1
a11820 1
=item AUTHOR
d11824 1
a11824 1
=head2 B::Lint - Perl lint
d11832 1
a11832 9
=item OPTIONS AND LINT CHECKS

B<context>, B<implicit-read> and B<implicit-write>, B<bare-subs>,
B<dollar-underscore>, B<private-names>, B<undefined-subs>,
B<regexp-variables>, B<all>, B<none>

=item NON LINT-CHECK OPTIONS

B<-u Package>
d11834 1
a11834 1
=item BUGS
d11836 1
a11836 1
=item AUTHOR
d11838 1
a11838 1
=back
d11840 1
a11840 1
=head2 B::O, O - Generic interface to Perl Compiler backends
d11842 4
a11845 1
=over 4
d11847 1
a11847 1
=item SYNOPSIS
d11849 2
a11850 1
=item DESCRIPTION
d11852 1
a11852 1
=item CONVENTIONS
d11854 1
a11854 5
=item IMPLEMENTATION

=item BUGS

=item AUTHOR
d11858 2
a11859 1
=head2 B::Showlex - Show lexical variables used in functions or files
d11863 2
d11869 8
a11876 1
=item EXAMPLES
d11878 1
a11878 1
=over 4
d11880 1
a11880 1
=item OPTIONS
d11882 1
a11882 1
=back
a11885 2
=item TODO

d11890 1
a11890 1
=head2 B::Stackobj - Helper module for CC backend
d11894 2
d11900 12
a11911 1
=item AUTHOR
d11913 1
a11913 1
=back
d11915 2
a11916 1
=head2 B::Stash - show what stashes are loaded
d11918 1
a11918 1
=head2 B::Terse - Walk Perl syntax tree, printing terse info about ops
d11922 3
a11924 1
=item SYNOPSIS
d11926 1
a11926 1
=item DESCRIPTION
d11928 1
a11928 1
=item AUTHOR
d11932 6
a11937 1
=head2 B::Xref - Generates cross reference reports for Perl programs
d11939 1
a11939 1
=over 4
d11941 1
a11941 1
=item SYNOPSIS
d11943 1
a11943 1
=item DESCRIPTION
d11945 21
a11965 1
=item OPTIONS
d11967 1
a11967 1
C<-oFILENAME>, C<-r>, C<-d>, C<-D[tO]>
d11969 1
a11969 1
=item BUGS
d11973 2
d11977 1
a11977 1
=head2 Bblock, B::Bblock - Walk basic blocks
d11987 1
a11987 1
=item Functions
d11989 1
a11989 1
B<find_leaders>
d11991 1
a11991 1
=back
d11993 1
a11993 1
=item AUTHOR
d11995 1
a11995 1
=back
d11997 1
a11997 1
=head2 Benchmark - benchmark running times of Perl code
d11999 1
a11999 1
=over 4
d12001 1
a12001 1
=item SYNOPSIS
d12003 1
a12003 1
=item DESCRIPTION
d12007 1
a12007 1
=item Methods
d12009 1
a12009 1
new, debug, iters
d12011 1
a12011 1
=item Standard Exports
d12013 1
a12013 15
timeit(COUNT, CODE), timethis ( COUNT, CODE, [ TITLE, [ STYLE ]] ),
timethese ( COUNT, CODEHASHREF, [ STYLE ] ), timediff ( T1, T2 ), timestr (
TIMEDIFF, [ STYLE, [ FORMAT ] ] )

=item Optional Exports

clearcache ( COUNT ), clearallcache ( ), cmpthese ( COUNT, CODEHASHREF, [
STYLE ] ), cmpthese ( RESULTSHASHREF, [ STYLE ] ), countit(TIME, CODE),
disablecache ( ), enablecache ( ), timesum ( T1, T2 )

=item :hireswallclock

=back

=item NOTES
a12016 4
=item INHERITANCE

=item CAVEATS

a12018 4
=item AUTHORS

=item MODIFICATION HISTORY

d12021 1
a12021 1
=head2 ByteLoader - load byte compiled perl code
d12029 2
d12037 2
a12038 1
=head2 Bytecode, B::Bytecode - Perl compiler's bytecode backend
d12046 1
a12046 1
=item EXAMPLE
d12048 1
a12048 1
=item OPTIONS
d12050 1
a12050 1
B<-b>, B<-H>, B<-k>, B<-o>I<outfile>, B<-s>
d12052 1
a12052 1
=item KNOWN BUGS
d12054 1
a12054 3
=item NOTICE

=item AUTHORS
d12058 1
a12058 1
=head2 CGI - Simple Common Gateway Interface Class
a12063 2
=item ABSTRACT

d12068 1
a12068 1
=item PROGRAMMING STYLE
d12070 1
a12070 1
=item CALLING CGI.PM ROUTINES
d12072 2
a12073 1
=item CREATING A NEW QUERY OBJECT (OBJECT-ORIENTED STYLE):
d12075 1
a12075 1
=item CREATING A NEW QUERY OBJECT FROM AN INPUT FILE
d12077 1
a12077 1
=item FETCHING A LIST OF KEYWORDS FROM THE QUERY:
d12079 1
a12079 1
=item FETCHING THE NAMES OF ALL THE PARAMETERS PASSED TO YOUR SCRIPT:
d12081 1
a12081 1
=item FETCHING THE VALUE OR VALUES OF A SINGLE NAMED PARAMETER:
d12083 1
a12083 1
=item SETTING THE VALUE(S) OF A NAMED PARAMETER:
d12085 1
a12085 1
=item APPENDING ADDITIONAL VALUES TO A NAMED PARAMETER:
d12087 1
a12087 1
=item IMPORTING ALL PARAMETERS INTO A NAMESPACE:
d12089 1
a12089 1
=item DELETING A PARAMETER COMPLETELY:
d12091 1
a12091 1
=item DELETING ALL PARAMETERS:
d12093 1
a12093 1
=item HANDLING NON-URLENCODED ARGUMENTS
d12095 1
a12095 1
=item DIRECT ACCESS TO THE PARAMETER LIST:
d12097 1
a12097 1
=item FETCHING THE PARAMETER LIST AS A HASH:
d12099 1
a12099 1
=item SAVING THE STATE OF THE SCRIPT TO A FILE:
d12101 1
a12101 1
=item RETRIEVING CGI ERRORS
d12103 1
a12103 1
=item USING THE FUNCTION-ORIENTED INTERFACE
d12105 1
a12105 2
B<:cgi>, B<:form>, B<:html2>, B<:html3>, B<:html4>, B<:netscape>, B<:html>,
B<:standard>, B<:all>
d12107 1
a12107 1
=item PRAGMAS
d12109 1
a12109 3
-any, -compile, -nosticky, -tabindex, -no_undef_params, -no_xhtml, -nph,
-newstyle_urls, -oldstyle_urls, -autoload, -no_debug, -debug,
-private_tempfiles
d12111 1
a12111 1
=item SPECIAL FORMS FOR IMPORTING HTML-TAG FUNCTIONS
d12113 1
a12113 7
1. start_table() (generates a <table> tag), 2. end_table() (generates a
</table> tag), 3. start_ul() (generates a <ul> tag), 4. end_ul() (generates
a </ul> tag)

=back

=item GENERATING DYNAMIC DOCUMENTS
d12117 1
a12117 1
=item CREATING A STANDARD HTTP HEADER:
d12119 1
a12119 1
=item GENERATING A REDIRECTION HEADER
d12121 1
a12121 1
=item CREATING THE HTML DOCUMENT HEADER
d12123 1
a12123 1
B<Parameters:>, 4, 5, 6..
d12125 1
a12125 1
=item ENDING THE HTML DOCUMENT:
d12127 1
a12127 1
=item CREATING A SELF-REFERENCING URL THAT PRESERVES STATE INFORMATION:
d12129 1
a12129 1
=item OBTAINING THE SCRIPT'S URL
d12131 1
a12131 2
B<-absolute>, B<-relative>, B<-full>, B<-path> (B<-path_info>), B<-query>
(B<-query_string>), B<-base>, B<-rewrite>
d12133 1
a12133 1
=item MIXING POST AND URL PARAMETERS
d12135 1
a12135 1
=back
d12137 1
a12137 1
=item CREATING STANDARD HTML ELEMENTS:
d12139 1
a12139 1
=over 4
d12141 1
a12141 1
=item PROVIDING ARGUMENTS TO HTML SHORTCUTS
d12143 1
a12143 1
=item THE DISTRIBUTIVE PROPERTY OF HTML SHORTCUTS
d12145 1
a12145 1
=item HTML SHORTCUTS AND LIST INTERPOLATION
d12147 1
a12147 1
=item NON-STANDARD HTML SHORTCUTS
d12149 1
a12149 1
=item AUTOESCAPING HTML
d12151 1
a12151 2
$escaped_string = escapeHTML("unescaped string");, $charset =
charset([$charset]);, $flag = autoEscape([$flag]);
d12153 1
a12153 1
=item PRETTY-PRINTING HTML
d12155 1
a12155 1
=back
d12157 1
a12157 1
=item CREATING FILL-OUT FORMS:
d12161 3
a12163 1
=item CREATING AN ISINDEX TAG
d12165 1
a12165 1
=item STARTING AND ENDING A FORM
d12167 1
a12167 1
B<application/x-www-form-urlencoded>, B<multipart/form-data>
d12169 1
a12169 1
=item FORM ELEMENTS
d12171 1
a12171 3
B<-name>, B<-value>, B<-values>, B<-tabindex>, B<-id>, B<-override>,
B<-onChange>, B<-onFocus>, B<-onBlur>, B<-onMouseOver>, B<-onMouseOut>,
B<-onSelect>
d12173 1
a12173 1
=item CREATING A TEXT FIELD
d12175 1
a12175 1
B<Parameters>
d12177 1
a12177 1
=item CREATING A BIG TEXT FIELD
d12179 1
a12179 1
=item CREATING A PASSWORD FIELD
d12181 1
a12181 1
=item CREATING A FILE UPLOAD FIELD
d12183 1
a12183 1
B<Parameters>
d12185 1
a12185 1
=item CREATING A POPUP MENU
d12187 6
a12192 1
=item CREATING AN OPTION GROUP
d12194 1
a12194 1
=item CREATING A SCROLLING LIST
d12196 1
a12196 1
B<Parameters:>
d12198 1
a12198 1
=item CREATING A GROUP OF RELATED CHECKBOXES
d12200 1
a12200 1
B<Parameters:>
d12202 1
a12202 1
=item CREATING A STANDALONE CHECKBOX
d12204 1
a12204 1
B<Parameters:>
d12206 1
a12206 1
=item CREATING A RADIO BUTTON GROUP
d12208 1
a12208 1
B<Parameters:>
d12210 1
a12210 1
=item CREATING A SUBMIT BUTTON 
d12212 1
a12212 1
B<Parameters:>
d12214 1
a12214 1
=item CREATING A RESET BUTTON
d12216 2
a12217 1
=item CREATING A DEFAULT BUTTON
d12219 1
a12219 1
=item CREATING A HIDDEN FIELD
d12221 1
a12221 1
B<Parameters:>
d12223 1
a12223 1
=item CREATING A CLICKABLE IMAGE BUTTON
d12225 1
a12225 2
B<Parameters:>, 3. The third option (-align, optional) is an alignment
type, and may be TOP, BOTTOM or MIDDLE
d12227 1
a12227 1
=item CREATING A JAVASCRIPT ACTION BUTTON
d12231 2
a12232 1
=item HTTP COOKIES
d12234 1
a12234 2
1. an expiration time, 2. a domain, 3. a path, 4. a "secure" flag,
B<-name>, B<-value>, B<-path>, B<-domain>, B<-expires>, B<-secure>
d12236 1
a12236 1
=item WORKING WITH FRAMES
d12238 1
a12238 3
1. Create a <Frameset> document, 2. Specify the destination for the
document in the HTTP header, 3. Specify the destination for the document in
the <form> tag
d12240 1
a12240 1
=item SUPPORT FOR JAVASCRIPT
d12242 1
a12242 2
B<onLoad>, B<onUnload>, B<onSubmit>, B<onClick>, B<onChange>, B<onFocus>,
B<onBlur>, B<onSelect>, B<onMouseOver>, B<onMouseOut>
d12244 1
a12244 1
=item LIMITED SUPPORT FOR CASCADING STYLE SHEETS
d12246 1
a12246 1
=item DEBUGGING
d12248 1
a12248 1
=over 4
d12250 1
a12250 1
=item DUMPING OUT ALL THE NAME/VALUE PAIRS
d12254 7
a12260 1
=item FETCHING ENVIRONMENT VARIABLES
d12262 1
a12262 6
B<Accept()>, B<raw_cookie()>, B<user_agent()>, B<path_info()>,
B<path_translated()>, B<remote_host()>, B<script_name()> Return the script
name as a partial URL, for self-refering scripts, B<referer()>, B<auth_type
()>, B<server_name ()>, B<virtual_host ()>, B<server_port ()>,
B<virtual_port ()>, B<server_software ()>, B<remote_user ()>, B<user_name
()>, B<request_method()>, B<content_type()>, B<http()>, B<https()>
d12264 1
a12264 1
=item USING NPH SCRIPTS
d12266 1
a12266 2
In the B<use> statement, By calling the B<nph()> method:, By using B<-nph>
parameters
d12268 1
a12268 1
=item Server Push
d12270 1
a12270 1
multipart_init(), multipart_start(), multipart_end(), multipart_final()
d12272 1
a12272 1
=item Avoiding Denial of Service Attacks
d12274 1
a12274 2
B<$CGI::POST_MAX>, B<$CGI::DISABLE_UPLOADS>, B<1. On a script-by-script
basis>, B<2. Globally for all scripts>
d12276 1
a12276 1
=item COMPATIBILITY WITH CGI-LIB.PL
d12278 1
a12278 1
=item AUTHOR INFORMATION
d12280 1
a12280 1
=item CREDITS
d12282 5
a12286 12
Matt Heffron (heffron@@falstaff.css.beckman.com), James Taylor
(james.taylor@@srs.gov), Scott Anguish <sanguish@@digifix.com>, Mike Jewell
(mlj3u@@virginia.edu), Timothy Shimmin (tes@@kbs.citri.edu.au), Joergen Haegg
(jh@@axis.se), Laurent Delfosse (delfosse@@delfosse.com), Richard Resnick
(applepi1@@aol.com), Craig Bishop (csb@@barwonwater.vic.gov.au), Tony Curtis
(tc@@vcpc.univie.ac.at), Tim Bunce (Tim.Bunce@@ig.co.uk), Tom Christiansen
(tchrist@@convex.com), Andreas Koenig (k@@franz.ww.TU-Berlin.DE), Tim
MacKenzie (Tim.MacKenzie@@fulcrum.com.au), Kevin B. Hendricks
(kbhend@@dogwood.tyler.wm.edu), Stephen Dahmen (joyfire@@inxpress.net), Ed
Jordan (ed@@fidalgo.net), David Alan Pisoni (david@@cnation.com), Doug
MacEachern (dougm@@opengroup.org), Robin Houston (robin@@oneworld.org),
...and many many more..
d12288 1
a12288 1
=item A COMPLETE EXAMPLE OF A SIMPLE FORM-BASED SCRIPT
d12292 3
a12294 1
=item SEE ALSO
d12298 1
a12298 1
=head2 CGI::Apache - Backward compatibility module for CGI.pm
d12304 9
a12312 1
=item ABSTRACT
d12314 1
a12314 1
=item DESCRIPTION
d12316 1
a12316 1
=item AUTHOR INFORMATION
d12320 1
a12320 1
=item SEE ALSO
d12324 1
a12324 2
=head2 CGI::Carp, B<CGI::Carp> - CGI routines for writing to the HTTPD (or
other) error log
d12330 7
a12336 1
=item DESCRIPTION
d12338 1
a12338 1
=item REDIRECTING ERROR MESSAGES
d12340 1
a12340 1
=item MAKING PERL ERRORS APPEAR IN THE BROWSER WINDOW
d12342 1
a12342 1
=over 4
d12344 1
a12344 1
=item Changing the default message
d12348 8
a12355 1
=item MAKING WARNINGS APPEAR AS HTML COMMENTS
d12357 1
a12357 1
=item OVERRIDING THE NAME OF THE PROGRAM
d12359 1
a12359 1
=item AUTHORS
d12361 1
a12361 1
=item SEE ALSO
d12365 1
a12365 1
=head2 CGI::Cookie - Interface to Netscape Cookies
d12369 1
a12369 1
=item SYNOPSIS
d12371 1
a12371 1
=item DESCRIPTION
d12373 1
a12373 1
=item USING CGI::Cookie
d12375 1
a12375 1
B<1. expiration date>, B<2. domain>, B<3. path>, B<4. secure flag>
d12377 1
a12377 1
=over 4
d12379 1
a12379 1
=item Creating New Cookies
d12381 1
a12381 1
=item Sending the Cookie to the Browser
d12383 2
a12384 1
=item Recovering Previous Cookies
d12386 1
a12386 1
=item Manipulating Cookies
d12388 1
a12388 1
B<name()>, B<value()>, B<domain()>, B<path()>, B<expires()>
d12392 1
a12392 3
=item AUTHOR INFORMATION

=item BUGS
d12398 1
a12398 1
=head2 CGI::Fast - CGI Interface for Fast CGI
d12402 2
d12408 1
a12408 1
=item OTHER PIECES OF THE PUZZLE
d12410 1
a12410 1
=item WRITING FASTCGI PERL SCRIPTS
d12412 1
a12412 1
=item INSTALLING FASTCGI SCRIPTS
d12414 1
a12414 1
=item USING FASTCGI SCRIPTS AS CGI SCRIPTS
d12416 4
a12419 1
=item EXTERNAL FASTCGI SERVER INVOCATION
d12421 1
a12421 1
FCGI_SOCKET_PATH, FCGI_LISTEN_QUEUE
d12425 1
a12425 1
=item AUTHOR INFORMATION
d12427 1
a12427 1
=item BUGS
d12431 4
d12437 1
a12437 1
=head2 CGI::Pretty - module to produce nicely formatted HTML code
d12447 7
a12453 1
=item Tags that won't be formatted
d12455 1
a12455 1
=item Customizing the Indenting
d12459 1
a12459 3
=item BUGS

=item AUTHOR
d12461 1
a12461 1
=item SEE ALSO
d12465 1
a12465 1
=head2 CGI::Push - Simple Interface to Server Push
d12473 5
a12477 1
=item USING CGI::Push
d12479 1
a12479 1
-next_page, -last_page, -type, -delay, -cookie, -target, -expires, -nph
d12483 1
a12483 1
=item Heterogeneous Pages
d12485 1
a12485 1
=item Changing the Page Delay on the Fly
d12487 1
a12487 1
=back
d12489 1
a12489 1
=item INSTALLING CGI::Push SCRIPTS
d12491 1
a12491 1
=item AUTHOR INFORMATION
d12493 1
a12493 1
=item BUGS
d12495 1
a12495 1
=item SEE ALSO
d12499 1
a12499 1
=head2 CGI::Switch - Backward compatibility module for defunct CGI::Switch
a12504 2
=item ABSTRACT

a12506 2
=item AUTHOR INFORMATION

d12509 1
a12509 1
=item SEE ALSO
d12513 2
a12514 1
=head2 CGI::Util - Internal utilities used by CGI module
a12521 4
=item AUTHOR INFORMATION

=item SEE ALSO

d12524 1
a12524 1
=head2 CPAN - query, download and build perl modules from CPAN sites
d12530 1
a12530 1
=item STATUS
d12532 1
a12532 1
=item DESCRIPTION
d12536 7
a12542 1
=item Interactive Mode
d12544 1
a12544 3
Searching for authors, bundles, distribution files and modules, make, test,
install, clean	modules or distributions, get, readme, perldoc, look module
or distribution, ls author, ls globbing_expresion, Signals
d12546 1
a12546 1
=item CPAN::Shell
d12548 1
a12548 1
=item autobundle
d12550 1
a12550 1
=item recompile
d12552 1
a12552 1
=item The four C<CPAN::*> Classes: Author, Bundle, Module, Distribution
d12554 1
a12554 1
=item Programmer's interface
d12556 1
a12556 1
expand($type,@@things), expandany(@@things), Programming Examples
d12558 1
a12558 1
=item Methods in the other Classes
d12560 1
a12560 27
CPAN::Author::as_glimpse(), CPAN::Author::as_string(),
CPAN::Author::email(), CPAN::Author::fullname(), CPAN::Author::name(),
CPAN::Bundle::as_glimpse(), CPAN::Bundle::as_string(),
CPAN::Bundle::clean(), CPAN::Bundle::contains(),
CPAN::Bundle::force($method,@@args), CPAN::Bundle::get(),
CPAN::Bundle::inst_file(), CPAN::Bundle::inst_version(),
CPAN::Bundle::uptodate(), CPAN::Bundle::install(), CPAN::Bundle::make(),
CPAN::Bundle::readme(), CPAN::Bundle::test(),
CPAN::Distribution::as_glimpse(), CPAN::Distribution::as_string(),
CPAN::Distribution::clean(), CPAN::Distribution::containsmods(),
CPAN::Distribution::cvs_import(), CPAN::Distribution::dir(),
CPAN::Distribution::force($method,@@args), CPAN::Distribution::get(),
CPAN::Distribution::install(), CPAN::Distribution::isa_perl(),
CPAN::Distribution::look(), CPAN::Distribution::make(),
CPAN::Distribution::prereq_pm(), CPAN::Distribution::readme(),
CPAN::Distribution::perldoc(), CPAN::Distribution::test(),
CPAN::Distribution::uptodate(), CPAN::Index::force_reload(),
CPAN::Index::reload(), CPAN::InfoObj::dump(), CPAN::Module::as_glimpse(),
CPAN::Module::as_string(), CPAN::Module::clean(),
CPAN::Module::cpan_file(), CPAN::Module::cpan_version(),
CPAN::Module::cvs_import(), CPAN::Module::description(),
CPAN::Module::force($method,@@args), CPAN::Module::get(),
CPAN::Module::inst_file(), CPAN::Module::inst_version(),
CPAN::Module::install(), CPAN::Module::look(), CPAN::Module::make(),
CPAN::Module::manpage_headline(), CPAN::Module::readme(),
CPAN::Module::perldoc(), CPAN::Module::test(), CPAN::Module::uptodate(),
CPAN::Module::userid()
d12562 1
a12562 1
=item Cache Manager
d12564 1
a12564 1
=item Bundles
d12566 1
a12566 1
=item Prerequisites
d12568 1
a12568 1
=item Finding packages and VERSION
d12570 1
a12570 1
=item Debugging
d12572 1
a12572 1
=item Floppy, Zip, Offline Mode
d12576 2
a12577 6
=item CONFIGURATION

C<o conf E<lt>scalar optionE<gt>>, C<o conf E<lt>scalar optionE<gt>
E<lt>valueE<gt>>, C<o conf E<lt>list optionE<gt>>, C<o conf E<lt>list
optionE<gt> [shift|pop]>, C<o conf E<lt>list optionE<gt>
[unshift|push|splice] E<lt>listE<gt>>
d12581 1
a12581 1
=item Note on urllist parameter's format
d12583 1
a12583 1
=item urllist parameter has CD-ROM support
d12587 1
a12587 1
=item SECURITY
d12591 1
a12591 1
=item Cryptographically signed modules
d12593 1
a12593 1
=back
d12595 1
a12595 1
=item EXPORT
d12597 1
a12597 1
=item POPULATE AN INSTALLATION WITH LOTS OF MODULES
d12599 1
a12599 1
=item WORKING WITH CPAN.pm BEHIND FIREWALLS
d12601 1
a12601 1
=over 4
d12603 1
a12603 1
=item Three basic types of firewalls
d12605 1
a12605 1
http firewall, ftp firewall, One way visibility, SOCKS, IP Masquerade
d12607 1
a12607 1
=item Configuring lynx or ncftp for going through a firewall
d12609 1
a12609 1
=back
d12611 1
a12611 1
=item FAQ
d12613 1
a12613 1
1), 2), 3), 4), 5), 6), 7), 8), 9), 10), 11)
d12615 1
a12615 1
=item BUGS
d12617 1
a12617 1
=item AUTHOR
d12619 1
a12619 1
=item TRANSLATIONS
d12621 1
a12621 1
=item SEE ALSO
d12623 1
a12623 1
=back
d12625 1
a12625 1
=head2 CPAN::FirstTime - Utility for CPAN::Config file Initialization
d12627 1
a12627 1
=over 4
d12629 1
a12629 1
=item SYNOPSIS
d12631 1
a12631 1
=item DESCRIPTION
d12635 1
a12635 1
=head2 CPAN::Version - utility functions to compare CPAN versions
d12639 1
a12639 1
=item SYNOPSIS
d12641 1
a12641 1
=item DESCRIPTION
d12643 1
a12643 1
=back
d12645 1
a12645 2
=head2 CPANox, CPAN::Nox - Wrapper around CPAN.pm without using any XS
module
d12647 1
a12647 1
=over 4
d12649 2
a12650 1
=item SYNOPSIS
d12652 14
a12665 1
=item DESCRIPTION
d12667 1
a12667 1
=item  SEE ALSO
d12671 1
a12671 1
=head2 Carp, carp    - warn of errors (from perspective of caller)
d12679 10
d12691 5
a12695 1
=item Forcing a Stack Trace
d12699 1
a12699 1
=back
d12703 3
a12705 1
=item GLOBAL VARIABLES
d12709 11
a12719 1
=item $Carp::CarpLevel
d12721 1
a12721 1
=item $Carp::MaxEvalLen
d12723 3
a12725 1
=item $Carp::MaxArgLen
d12727 1
a12727 1
=item $Carp::MaxArgNums
d12729 2
a12730 1
=item $Carp::Verbose
d12734 1
a12734 1
=back
d12738 11
a12748 1
=item BUGS
d12752 24
a12775 1
=head2 Carp::Heavy - heavy machinery, no user serviceable parts inside
d12777 1
a12777 1
=head2 Class::ISA -- report the search path for a class's ISA tree
d12781 5
a12785 1
=item SYNOPSIS
d12787 1
a12787 1
=item DESCRIPTION
d12789 1
a12789 1
=item FUNCTIONS
d12791 1
a12791 3
the function Class::ISA::super_path($CLASS), the function
Class::ISA::self_and_super_path($CLASS), the function
Class::ISA::self_and_super_versions($CLASS)
d12793 1
a12793 1
=item CAUTIONARY NOTES
d12795 2
a12796 1
=item COPYRIGHT
d12798 1
a12798 1
=item AUTHOR
d12802 1
a12802 1
=head2 Class::Struct - declare struct-like datatypes as Perl classes
d12810 2
d12814 3
a12816 1
=item The C<struct()> function
d12818 1
a12818 1
=item Class Creation at Compile Time
d12820 1
a12820 1
=item Element Types and Accessor Methods
d12822 1
a12822 2
Scalar (C<'$'> or C<'*$'>), Array (C<'@@'> or C<'*@@'>), Hash (C<'%'> or
C<'*%'>), Class (C<'Class_Name'> or C<'*Class_Name'>)
d12824 1
a12824 1
=item Initializing with C<new>
d12830 9
a12838 1
Example 1, Example 2, Example 3
d12840 1
a12840 1
=item Author and Modification History
d12844 1
a12844 1
=head2 Config - access Perl configuration information
d12852 1
a12852 1
myconfig(), config_sh(), config_re($regex), config_vars(@@names)
d12854 1
a12854 1
=item EXAMPLE
d12856 1
a12856 1
=item WARNING
d12858 1
a12858 1
=item GLOSSARY
d12862 10
a12871 1
=item _
d12873 1
a12873 1
C<_a>, C<_exe>, C<_o>
d12875 1
a12875 1
=item a
d12877 1
a12877 4
C<afs>, C<afsroot>, C<alignbytes>, C<ansi2knr>, C<aphostname>,
C<api_revision>, C<api_subversion>, C<api_version>, C<api_versionstring>,
C<ar>, C<archlib>, C<archlibexp>, C<archname64>, C<archname>, C<archobjs>,
C<asctime_r_proto>, C<awk>
d12879 1
a12879 1
=item b
d12881 1
a12881 1
C<baserev>, C<bash>, C<bin>, C<binexp>, C<bison>, C<byacc>, C<byteorder>
d12883 4
a12886 1
=item c
d12888 1
a12888 7
C<c>, C<castflags>, C<cat>, C<cc>, C<cccdlflags>, C<ccdlflags>, C<ccflags>,
C<ccflags_uselargefiles>, C<ccname>, C<ccsymbols>, C<ccversion>, C<cf_by>,
C<cf_email>, C<cf_time>, C<charsize>, C<chgrp>, C<chmod>, C<chown>,
C<clocktype>, C<comm>, C<compress>, C<contains>, C<cp>, C<cpio>, C<cpp>,
C<cpp_stuff>, C<cppccsymbols>, C<cppflags>, C<cpplast>, C<cppminus>,
C<cpprun>, C<cppstdin>, C<cppsymbols>, C<crypt_r_proto>, C<cryptlib>,
C<csh>, C<ctermid_r_proto>, C<ctime_r_proto>
d12890 1
a12890 1
=item d
d12892 1
a12892 98
C<d__fwalk>, C<d_access>, C<d_accessx>, C<d_aintl>, C<d_alarm>,
C<d_archlib>, C<d_asctime_r>, C<d_atolf>, C<d_atoll>,
C<d_attribute_format>, C<d_attribute_malloc>, C<d_attribute_nonnull>,
C<d_attribute_noreturn>, C<d_attribute_pure>, C<d_attribute_unused>,
C<d_attribute_warn_unused_result>, C<d_bcmp>, C<d_bcopy>, C<d_bsd>,
C<d_bsdgetpgrp>, C<d_bsdsetpgrp>, C<d_bzero>, C<d_casti32>, C<d_castneg>,
C<d_charvspr>, C<d_chown>, C<d_chroot>, C<d_chsize>, C<d_class>,
C<d_clearenv>, C<d_closedir>, C<d_cmsghdr_s>, C<d_const>, C<d_copysignl>,
C<d_crypt>, C<d_crypt_r>, C<d_csh>, C<d_ctermid_r>, C<d_ctime_r>,
C<d_cuserid>, C<d_dbl_dig>, C<d_dbminitproto>, C<d_difftime>, C<d_dirfd>,
C<d_dirnamlen>, C<d_dlerror>, C<d_dlopen>, C<d_dlsymun>, C<d_dosuid>,
C<d_drand48_r>, C<d_drand48proto>, C<d_dup2>, C<d_eaccess>, C<d_endgrent>,
C<d_endgrent_r>, C<d_endhent>, C<d_endhostent_r>, C<d_endnent>,
C<d_endnetent_r>, C<d_endpent>, C<d_endprotoent_r>, C<d_endpwent>,
C<d_endpwent_r>, C<d_endsent>, C<d_endservent_r>, C<d_eofnblk>,
C<d_eunice>, C<d_faststdio>, C<d_fchdir>, C<d_fchmod>, C<d_fchown>,
C<d_fcntl>, C<d_fcntl_can_lock>, C<d_fd_macros>, C<d_fd_set>,
C<d_fds_bits>, C<d_fgetpos>, C<d_finite>, C<d_finitel>, C<d_flexfnam>,
C<d_flock>, C<d_flockproto>, C<d_fork>, C<d_fp_class>, C<d_fpathconf>,
C<d_fpclass>, C<d_fpclassify>, C<d_fpclassl>, C<d_fpos64_t>, C<d_frexpl>,
C<d_fs_data_s>, C<d_fseeko>, C<d_fsetpos>, C<d_fstatfs>, C<d_fstatvfs>,
C<d_fsync>, C<d_ftello>, C<d_ftime>, C<d_futimes>, C<d_Gconvert>,
C<d_getcwd>, C<d_getespwnam>, C<d_getfsstat>, C<d_getgrent>,
C<d_getgrent_r>, C<d_getgrgid_r>, C<d_getgrnam_r>, C<d_getgrps>,
C<d_gethbyaddr>, C<d_gethbyname>, C<d_gethent>, C<d_gethname>,
C<d_gethostbyaddr_r>, C<d_gethostbyname_r>, C<d_gethostent_r>,
C<d_gethostprotos>, C<d_getitimer>, C<d_getlogin>, C<d_getlogin_r>,
C<d_getmnt>, C<d_getmntent>, C<d_getnbyaddr>, C<d_getnbyname>,
C<d_getnent>, C<d_getnetbyaddr_r>, C<d_getnetbyname_r>, C<d_getnetent_r>,
C<d_getnetprotos>, C<d_getpagsz>, C<d_getpbyname>, C<d_getpbynumber>,
C<d_getpent>, C<d_getpgid>, C<d_getpgrp2>, C<d_getpgrp>, C<d_getppid>,
C<d_getprior>, C<d_getprotobyname_r>, C<d_getprotobynumber_r>,
C<d_getprotoent_r>, C<d_getprotoprotos>, C<d_getprpwnam>, C<d_getpwent>,
C<d_getpwent_r>, C<d_getpwnam_r>, C<d_getpwuid_r>, C<d_getsbyname>,
C<d_getsbyport>, C<d_getsent>, C<d_getservbyname_r>, C<d_getservbyport_r>,
C<d_getservent_r>, C<d_getservprotos>, C<d_getspnam>, C<d_getspnam_r>,
C<d_gettimeod>, C<d_gmtime_r>, C<d_gnulibc>, C<d_grpasswd>, C<d_hasmntopt>,
C<d_htonl>, C<d_ilogbl>, C<d_index>, C<d_inetaton>, C<d_int64_t>,
C<d_isascii>, C<d_isfinite>, C<d_isinf>, C<d_isnan>, C<d_isnanl>,
C<d_killpg>, C<d_lchown>, C<d_ldbl_dig>, C<d_link>, C<d_localtime_r>,
C<d_locconv>, C<d_lockf>, C<d_longdbl>, C<d_longlong>, C<d_lseekproto>,
C<d_lstat>, C<d_madvise>, C<d_malloc_size>, C<d_malloc_good_size>,
C<d_mblen>, C<d_mbstowcs>, C<d_mbtowc>, C<d_memchr>, C<d_memcmp>,
C<d_memcpy>, C<d_memmove>, C<d_memset>, C<d_mkdir>, C<d_mkdtemp>,
C<d_mkfifo>, C<d_mkstemp>, C<d_mkstemps>, C<d_mktime>, C<d_mmap>,
C<d_modfl>, C<d_modfl_pow32_bug>, C<d_modflproto>, C<d_mprotect>, C<d_msg>,
C<d_msg_ctrunc>, C<d_msg_dontroute>, C<d_msg_oob>, C<d_msg_peek>,
C<d_msg_proxy>, C<d_msgctl>, C<d_msgget>, C<d_msghdr_s>, C<d_msgrcv>,
C<d_msgsnd>, C<d_msync>, C<d_munmap>, C<d_mymalloc>, C<d_nanosleep>,
C<d_nice>, C<d_nl_langinfo>, C<d_nv_preserves_uv>,
C<d_nv_zero_is_allbits_zero>, C<d_off64_t>,
C<d_old_pthread_create_joinable>, C<d_oldpthreads>, C<d_oldsock>,
C<d_open3>, C<d_pathconf>, C<d_pause>, C<d_perl_otherlibdirs>,
C<d_phostname>, C<d_pipe>, C<d_poll>, C<d_portable>, C<d_PRId64>,
C<d_PRIeldbl>, C<d_PRIEUldbl>, C<d_PRIfldbl>, C<d_PRIFUldbl>,
C<d_PRIgldbl>, C<d_PRIGUldbl>, C<d_PRIi64>, C<d_PRIo64>, C<d_PRIu64>,
C<d_PRIx64>, C<d_PRIXU64>, C<d_procselfexe>, C<d_pthread_atfork>,
C<d_pthread_attr_setscope>, C<d_pthread_yield>, C<d_pwage>, C<d_pwchange>,
C<d_pwclass>, C<d_pwcomment>, C<d_pwexpire>, C<d_pwgecos>, C<d_pwpasswd>,
C<d_pwquota>, C<d_qgcvt>, C<d_quad>, C<d_random_r>, C<d_readdir64_r>,
C<d_readdir>, C<d_readdir_r>, C<d_readlink>, C<d_readv>, C<d_recvmsg>,
C<d_rename>, C<d_rewinddir>, C<d_rmdir>, C<d_safebcpy>, C<d_safemcpy>,
C<d_sanemcmp>, C<d_sbrkproto>, C<d_scalbnl>, C<d_sched_yield>,
C<d_scm_rights>, C<d_SCNfldbl>, C<d_seekdir>, C<d_select>, C<d_sem>,
C<d_semctl>, C<d_semctl_semid_ds>, C<d_semctl_semun>, C<d_semget>,
C<d_semop>, C<d_sendmsg>, C<d_setegid>, C<d_seteuid>, C<d_setgrent>,
C<d_setgrent_r>, C<d_setgrps>, C<d_sethent>, C<d_sethostent_r>,
C<d_setitimer>, C<d_setlinebuf>, C<d_setlocale>, C<d_setlocale_r>,
C<d_setnent>, C<d_setnetent_r>, C<d_setpent>, C<d_setpgid>, C<d_setpgrp2>,
C<d_setpgrp>, C<d_setprior>, C<d_setproctitle>, C<d_setprotoent_r>,
C<d_setpwent>, C<d_setpwent_r>, C<d_setregid>, C<d_setresgid>,
C<d_setresuid>, C<d_setreuid>, C<d_setrgid>, C<d_setruid>, C<d_setsent>,
C<d_setservent_r>, C<d_setsid>, C<d_setvbuf>, C<d_sfio>, C<d_shm>,
C<d_shmat>, C<d_shmatprototype>, C<d_shmctl>, C<d_shmdt>, C<d_shmget>,
C<d_sigaction>, C<d_sigprocmask>, C<d_sigsetjmp>, C<d_sockatmark>,
C<d_sockatmarkproto>, C<d_socket>, C<d_socklen_t>, C<d_sockpair>,
C<d_socks5_init>, C<d_sprintf_returns_strlen>, C<d_sqrtl>, C<d_srand48_r>,
C<d_srandom_r>, C<d_sresgproto>, C<d_sresuproto>, C<d_statblks>,
C<d_statfs_f_flags>, C<d_statfs_s>, C<d_statvfs>, C<d_stdio_cnt_lval>,
C<d_stdio_ptr_lval>, C<d_stdio_ptr_lval_nochange_cnt>,
C<d_stdio_ptr_lval_sets_cnt>, C<d_stdio_stream_array>, C<d_stdiobase>,
C<d_stdstdio>, C<d_strchr>, C<d_strcoll>, C<d_strctcpy>, C<d_strerrm>,
C<d_strerror>, C<d_strerror_r>, C<d_strftime>, C<d_strlcat>, C<d_strlcpy>,
C<d_strtod>, C<d_strtol>, C<d_strtold>, C<d_strtoll>, C<d_strtoq>,
C<d_strtoul>, C<d_strtoull>, C<d_strtouq>, C<d_strxfrm>, C<d_suidsafe>,
C<d_symlink>, C<d_syscall>, C<d_syscallproto>, C<d_sysconf>,
C<d_sysernlst>, C<d_syserrlst>, C<d_system>, C<d_tcgetpgrp>,
C<d_tcsetpgrp>, C<d_telldir>, C<d_telldirproto>, C<d_time>, C<d_times>,
C<d_tm_tm_gmtoff>, C<d_tm_tm_zone>, C<d_tmpnam_r>, C<d_truncate>,
C<d_ttyname_r>, C<d_tzname>, C<d_u32align>, C<d_ualarm>, C<d_umask>,
C<d_uname>, C<d_union_semun>, C<d_unordered>, C<d_unsetenv>, C<d_usleep>,
C<d_usleepproto>, C<d_ustat>, C<d_vendorarch>, C<d_vendorbin>,
C<d_vendorlib>, C<d_vendorscript>, C<d_vfork>, C<d_void_closedir>,
C<d_voidsig>, C<d_voidtty>, C<d_volatile>, C<d_vprintf>, C<d_wait4>,
C<d_waitpid>, C<d_wcstombs>, C<d_wctomb>, C<d_writev>, C<d_xenix>, C<date>,
C<db_hashtype>, C<db_prefixtype>, C<db_version_major>, C<db_version_minor>,
C<db_version_patch>, C<defvoidused>, C<direntrytype>, C<dlext>, C<dlsrc>,
C<doublesize>, C<drand01>, C<drand48_r_proto>, C<dynamic_ext>
d12894 1
a12894 1
=item e
d12896 1
a12896 4
C<eagain>, C<ebcdic>, C<echo>, C<egrep>, C<emacs>, C<endgrent_r_proto>,
C<endhostent_r_proto>, C<endnetent_r_proto>, C<endprotoent_r_proto>,
C<endpwent_r_proto>, C<endservent_r_proto>, C<eunicefix>, C<exe_ext>,
C<expr>, C<extensions>, C<extras>
d12898 1
a12898 1
=item f
d12900 2
a12901 3
C<fflushall>, C<fflushNULL>, C<find>, C<firstmakefile>, C<flex>,
C<fpossize>, C<fpostype>, C<freetype>, C<from>, C<full_ar>, C<full_csh>,
C<full_sed>
d12903 1
a12903 1
=item g
d12905 1
a12905 10
C<gccansipedantic>, C<gccosandvers>, C<gccversion>, C<getgrent_r_proto>,
C<getgrgid_r_proto>, C<getgrnam_r_proto>, C<gethostbyaddr_r_proto>,
C<gethostbyname_r_proto>, C<gethostent_r_proto>, C<getlogin_r_proto>,
C<getnetbyaddr_r_proto>, C<getnetbyname_r_proto>, C<getnetent_r_proto>,
C<getprotobyname_r_proto>, C<getprotobynumber_r_proto>,
C<getprotoent_r_proto>, C<getpwent_r_proto>, C<getpwnam_r_proto>,
C<getpwuid_r_proto>, C<getservbyname_r_proto>, C<getservbyport_r_proto>,
C<getservent_r_proto>, C<getspnam_r_proto>, C<gidformat>, C<gidsign>,
C<gidsize>, C<gidtype>, C<glibpth>, C<gmake>, C<gmtime_r_proto>,
C<gnulibc_version>, C<grep>, C<groupcat>, C<groupstype>, C<gzip>
d12907 1
a12907 1
=item h
d12909 1
a12909 2
C<h_fcntl>, C<h_sysfile>, C<hint>, C<hostcat>, C<html1dir>, C<html1direxp>,
C<html3dir>, C<html3direxp>
d12911 1
a12911 1
=item i
d12913 9148
a22060 28
C<i16size>, C<i16type>, C<i32size>, C<i32type>, C<i64size>, C<i64type>,
C<i8size>, C<i8type>, C<i_arpainet>, C<i_bsdioctl>, C<i_crypt>, C<i_db>,
C<i_dbm>, C<i_dirent>, C<i_dld>, C<i_dlfcn>, C<i_fcntl>, C<i_float>,
C<i_fp>, C<i_fp_class>, C<i_gdbm>, C<i_grp>, C<i_ieeefp>, C<i_inttypes>,
C<i_langinfo>, C<i_libutil>, C<i_limits>, C<i_locale>, C<i_machcthr>,
C<i_malloc>, C<i_math>, C<i_memory>, C<i_mntent>, C<i_ndbm>, C<i_netdb>,
C<i_neterrno>, C<i_netinettcp>, C<i_niin>, C<i_poll>, C<i_prot>,
C<i_pthread>, C<i_pwd>, C<i_rpcsvcdbm>, C<i_sfio>, C<i_sgtty>, C<i_shadow>,
C<i_socks>, C<i_stdarg>, C<i_stddef>, C<i_stdlib>, C<i_string>,
C<i_sunmath>, C<i_sysaccess>, C<i_sysdir>, C<i_sysfile>, C<i_sysfilio>,
C<i_sysin>, C<i_sysioctl>, C<i_syslog>, C<i_sysmman>, C<i_sysmode>,
C<i_sysmount>, C<i_sysndir>, C<i_sysparam>, C<i_sysresrc>, C<i_syssecrt>,
C<i_sysselct>, C<i_syssockio>, C<i_sysstat>, C<i_sysstatfs>,
C<i_sysstatvfs>, C<i_systime>, C<i_systimek>, C<i_systimes>, C<i_systypes>,
C<i_sysuio>, C<i_sysun>, C<i_sysutsname>, C<i_sysvfs>, C<i_syswait>,
C<i_termio>, C<i_termios>, C<i_time>, C<i_unistd>, C<i_ustat>, C<i_utime>,
C<i_values>, C<i_varargs>, C<i_varhdr>, C<i_vfork>,
C<ignore_versioned_solibs>, C<inc_version_list>, C<inc_version_list_init>,
C<incpath>, C<inews>, C<installarchlib>, C<installbin>, C<installhtml1dir>,
C<installhtml3dir>, C<installman1dir>, C<installman3dir>, C<installprefix>,
C<installprefixexp>, C<installprivlib>, C<installscript>,
C<installsitearch>, C<installsitebin>, C<installsitehtml1dir>,
C<installsitehtml3dir>, C<installsitelib>, C<installsiteman1dir>,
C<installsiteman3dir>, C<installsitescript>, C<installstyle>,
C<installusrbinperl>, C<installvendorarch>, C<installvendorbin>,
C<installvendorhtml1dir>, C<installvendorhtml3dir>, C<installvendorlib>,
C<installvendorman1dir>, C<installvendorman3dir>, C<installvendorscript>,
C<intsize>, C<issymlink>, C<ivdformat>, C<ivsize>, C<ivtype>
d22062 1
a22062 1
=item k
d22064 1
a22064 1
C<known_extensions>, C<ksh>
d22066 1
a22066 1
=item l
d22068 1
a22068 7
C<ld>, C<lddlflags>, C<ldflags>, C<ldflags_uselargefiles>, C<ldlibpthname>,
C<less>, C<lib_ext>, C<libc>, C<libperl>, C<libpth>, C<libs>, C<libsdirs>,
C<libsfiles>, C<libsfound>, C<libspath>, C<libswanted>,
C<libswanted_uselargefiles>, C<line>, C<lint>, C<lkflags>, C<ln>, C<lns>,
C<localtime_r_proto>, C<locincpth>, C<loclibpth>, C<longdblsize>,
C<longlongsize>, C<longsize>, C<lp>, C<lpr>, C<ls>, C<lseeksize>,
C<lseektype>
d22070 1
a22070 1
=item m
d22072 1
a22072 3
C<mail>, C<mailx>, C<make>, C<make_set_make>, C<mallocobj>, C<mallocsrc>,
C<malloctype>, C<man1dir>, C<man1direxp>, C<man1ext>, C<man3dir>,
C<man3direxp>, C<man3ext>
d22074 1
a22074 1
=item M
d22076 1
a22076 3
C<Mcc>, C<mips_type>, C<mistrustnm>, C<mkdir>, C<mmaptype>, C<modetype>,
C<more>, C<multiarch>, C<mv>, C<myarchname>, C<mydomain>, C<myhostname>,
C<myuname>
d22078 1
a22078 1
=item n
d22080 1
a22080 5
C<n>, C<need_va_copy>, C<netdb_hlen_type>, C<netdb_host_type>,
C<netdb_name_type>, C<netdb_net_type>, C<nm>, C<nm_opt>, C<nm_so_opt>,
C<nonxs_ext>, C<nroff>, C<nv_preserves_uv_bits>, C<nveformat>,
C<nvEUformat>, C<nvfformat>, C<nvFUformat>, C<nvgformat>, C<nvGUformat>,
C<nvsize>, C<nvtype>
d22082 1
a22082 1
=item o
d22084 1
a22084 2
C<o_nonblock>, C<obj_ext>, C<old_pthread_create_joinable>, C<optimize>,
C<orderlib>, C<osname>, C<osvers>, C<otherlibdirs>
d22086 1
a22086 1
=item p
d22088 1
a22088 2
C<package>, C<pager>, C<passcat>, C<patchlevel>, C<path_sep>, C<perl5>,
C<perl>, C<perl_patchlevel>
d22090 1
a22090 1
=item P
d22092 1
a22092 4
C<PERL_REVISION>, C<PERL_SUBVERSION>, C<PERL_VERSION>, C<perladmin>,
C<perllibs>, C<perlpath>, C<pg>, C<phostname>, C<pidtype>, C<plibpth>,
C<pmake>, C<pr>, C<prefix>, C<prefixexp>, C<privlib>, C<privlibexp>,
C<procselfexe>, C<prototype>, C<ptrsize>
d22094 1
a22094 1
=item q
d22096 1
a22096 1
C<quadkind>, C<quadtype>
d22098 1
a22098 1
=item r
d22100 1
a22100 3
C<randbits>, C<randfunc>, C<random_r_proto>, C<randseedtype>, C<ranlib>,
C<rd_nodata>, C<readdir64_r_proto>, C<readdir_r_proto>, C<revision>, C<rm>,
C<rmail>, C<run>, C<runnm>
d22102 1
a22102 1
=item s
d22104 127
a22230 20
C<sched_yield>, C<scriptdir>, C<scriptdirexp>, C<sed>, C<seedfunc>,
C<selectminbits>, C<selecttype>, C<sendmail>, C<setgrent_r_proto>,
C<sethostent_r_proto>, C<setlocale_r_proto>, C<setnetent_r_proto>,
C<setprotoent_r_proto>, C<setpwent_r_proto>, C<setservent_r_proto>, C<sh>,
C<shar>, C<sharpbang>, C<shmattype>, C<shortsize>, C<shrpenv>, C<shsharp>,
C<sig_count>, C<sig_name>, C<sig_name_init>, C<sig_num>, C<sig_num_init>,
C<sig_size>, C<signal_t>, C<sitearch>, C<sitearchexp>, C<sitebin>,
C<sitebinexp>, C<sitehtml1dir>, C<sitehtml1direxp>, C<sitehtml3dir>,
C<sitehtml3direxp>, C<sitelib>, C<sitelib_stem>, C<sitelibexp>,
C<siteman1dir>, C<siteman1direxp>, C<siteman3dir>, C<siteman3direxp>,
C<siteprefix>, C<siteprefixexp>, C<sitescript>, C<sitescriptexp>,
C<sizesize>, C<sizetype>, C<sleep>, C<smail>, C<so>, C<sockethdr>,
C<socketlib>, C<socksizetype>, C<sort>, C<spackage>, C<spitshell>,
C<sPRId64>, C<sPRIeldbl>, C<sPRIEUldbl>, C<sPRIfldbl>, C<sPRIFUldbl>,
C<sPRIgldbl>, C<sPRIGUldbl>, C<sPRIi64>, C<sPRIo64>, C<sPRIu64>,
C<sPRIx64>, C<sPRIXU64>, C<srand48_r_proto>, C<srandom_r_proto>, C<src>,
C<sSCNfldbl>, C<ssizetype>, C<startperl>, C<startsh>, C<static_ext>,
C<stdchar>, C<stdio_base>, C<stdio_bufsiz>, C<stdio_cnt>, C<stdio_filbuf>,
C<stdio_ptr>, C<stdio_stream_array>, C<strerror_r_proto>, C<strings>,
C<submit>, C<subversion>, C<sysman>
d22232 1
a22232 1
=item t
d22234 1
a22234 3
C<tail>, C<tar>, C<targetarch>, C<tbl>, C<tee>, C<test>, C<timeincl>,
C<timetype>, C<tmpnam_r_proto>, C<to>, C<touch>, C<tr>, C<trnl>, C<troff>,
C<ttyname_r_proto>
d22236 1
a22236 1
=item u
d22238 1
a22238 10
C<u16size>, C<u16type>, C<u32size>, C<u32type>, C<u64size>, C<u64type>,
C<u8size>, C<u8type>, C<uidformat>, C<uidsign>, C<uidsize>, C<uidtype>,
C<uname>, C<uniq>, C<uquadtype>, C<use5005threads>, C<use64bitall>,
C<use64bitint>, C<usecrosscompile>, C<usedl>, C<usefaststdio>,
C<useithreads>, C<uselargefiles>, C<uselongdouble>, C<usemallocwrap>,
C<usemorebits>, C<usemultiplicity>, C<usemymalloc>, C<usenm>, C<useopcode>,
C<useperlio>, C<useposix>, C<usereentrant>, C<usesfio>, C<useshrplib>,
C<usesocks>, C<usethreads>, C<usevendorprefix>, C<usevfork>, C<usrinc>,
C<uuname>, C<uvoformat>, C<uvsize>, C<uvtype>, C<uvuformat>, C<uvxformat>,
C<uvXUformat>
d22240 1
a22240 1
=item v
d22242 1
a22242 7
C<vendorarch>, C<vendorarchexp>, C<vendorbin>, C<vendorbinexp>,
C<vendorhtml1dir>, C<vendorhtml1direxp>, C<vendorhtml3dir>,
C<vendorhtml3direxp>, C<vendorlib>, C<vendorlib_stem>, C<vendorlibexp>,
C<vendorman1dir>, C<vendorman1direxp>, C<vendorman3dir>,
C<vendorman3direxp>, C<vendorprefix>, C<vendorprefixexp>, C<vendorscript>,
C<vendorscriptexp>, C<version>, C<version_patchlevel_string>,
C<versiononly>, C<vi>, C<voidflags>
d22244 1
a22244 1
=item x
d22246 1
a22246 1
C<xlibpth>
d22248 1
a22248 1
=item y
d22250 1
a22250 1
C<yacc>, C<yaccflags>
d22252 1
a22252 1
=item z
d22254 1
a22254 1
C<zcat>, C<zip>
d22256 1
a22256 1
=back
d22258 1
a22258 1
=item NOTE
d22262 1
a22262 1
=head2 Cwd - get pathname of current working directory
d22270 1
a22270 1
=over 4
d22272 1
a22272 1
=item getcwd and friends
d22274 1
a22274 1
getcwd, cwd, fastcwd, fastgetcwd, getdcwd
d22276 1
a22276 1
=item abs_path and friends
d22278 1
a22278 1
abs_path, realpath, fast_abs_path
d22280 1
a22280 1
=item $ENV{PWD}
d22282 1
a22282 3
=back

=item NOTES
d22286 1
a22286 1
=item COPYRIGHT
d22288 1
a22288 1
=item SEE ALSO
d22292 1
a22292 3
=head2 DB - programmatic interface to the Perl debugging API (draft,
subject to
change)
d22300 2
d22304 1
a22304 10
=item Global Variables

 $DB::sub,  %DB::sub,  $DB::single,  $DB::signal,  $DB::trace,	@@DB::args, 
@@DB::dbline,  %DB::dbline,  $DB::package,  $DB::filename,  $DB::subname, 
$DB::lineno

=item API Methods

CLIENT->register(), CLIENT->evalcode(STRING), CLIENT->skippkg('D::hide'),
CLIENT->run(), CLIENT->step(), CLIENT->next(), CLIENT->done()
d22306 3
a22308 1
=item Client Callback Methods
d22310 1
a22310 3
CLIENT->init(), CLIENT->prestop([STRING]), CLIENT->stop(), CLIENT->idle(),
CLIENT->poststop([STRING]), CLIENT->evalcode(STRING), CLIENT->cleanup(),
CLIENT->output(LIST)
d22312 1
a22312 1
=back
d22314 1
a22314 1
=item BUGS
d22316 1
a22316 1
=item AUTHOR
d22320 1
a22320 1
=head2 DBM_Filter -- Filter DBM keys/values 
d22324 1
a22324 1
=item SYNOPSIS
d22326 1
a22326 1
=item DESCRIPTION
d22328 1
a22328 1
=item What is a DBM Filter?
d22330 2
a22331 1
=over 4
d22333 1
a22333 1
=item So what's new?
d22337 1
a22337 1
=item METHODS
d22341 1
a22341 3
=item $db->Filter_Push()

=item $db->Filter_Key_Push()
d22343 1
a22343 1
=item $db->Filter_Value_Push()
d22345 1
a22345 1
Filter_Push, Filter_Key_Push, Filter_Value_Push
d22347 1
a22347 1
=item $db->Filter_Pop()
d22349 1
a22349 1
=item $db->Filtered()
d22351 1
a22351 1
=back
d22353 1
a22353 1
=item Writing a Filter
d22355 1
a22355 1
=over 4
d22357 1
a22357 1
=item Immediate Filters
d22359 1
a22359 1
=item Canned Filters
d22361 1
a22361 1
"name", params
d22363 1
a22363 1
=back
d22365 1
a22365 1
=item Filters Included
d22367 1
a22367 1
utf8, encode, compress, int32, null
d22369 1
a22369 1
=item NOTES
d22371 1
a22371 1
=over 4
d22373 1
a22373 1
=item Maintain Round Trip Integrity
d22375 1
a22375 1
=item Don't mix filtered & non-filtered data in the same database file. 
d22377 1
a22377 1
=back
d22379 1
a22379 1
=item EXAMPLE
d22385 4
d22391 1
a22391 1
=head2 DB_File - Perl5 access to Berkeley DB version 1.x
d22399 1
a22399 1
B<DB_HASH>, B<DB_BTREE>, B<DB_RECNO>
d22403 5
a22407 1
=item Using DB_File with Berkeley DB version 2 or greater
d22409 1
a22409 1
=item Interface to Berkeley DB
d22411 1
a22411 1
=item Opening a Berkeley DB Database File
d22413 1
a22413 1
=item Default Parameters
d22415 1
a22415 1
=item In Memory Databases
d22419 1
a22419 1
=item DB_HASH
d22423 14
a22436 1
=item A Simple Example
d22440 1
a22440 1
=item DB_BTREE
d22444 5
a22448 1
=item Changing the BTREE sort order
d22450 1
a22450 1
=item Handling Duplicate Keys 
d22452 1
a22452 1
=item The get_dup() Method
d22454 1
a22454 1
=item The find_dup() Method
d22456 1
a22456 1
=item The del_dup() Method
d22458 1
a22458 1
=item Matching Partial Keys 
d22460 1
a22460 1
=back
d22462 1
a22462 1
=item DB_RECNO
d22464 1
a22464 1
=over 4
d22466 1
a22466 1
=item The 'bval' Option
d22468 1
a22468 1
=item A Simple Example
d22470 1
a22470 1
=item Extra RECNO Methods
d22472 1
a22472 3
B<$X-E<gt>push(list) ;>, B<$value = $X-E<gt>pop ;>, B<$X-E<gt>shift>,
B<$X-E<gt>unshift(list) ;>, B<$X-E<gt>length>, B<$X-E<gt>splice(offset,
length, elements);>
d22474 1
a22474 1
=item Another Example
d22478 1
a22478 1
=item THE API INTERFACE
d22480 1
a22480 4
B<$status = $X-E<gt>get($key, $value [, $flags]) ;>, B<$status =
$X-E<gt>put($key, $value [, $flags]) ;>, B<$status = $X-E<gt>del($key [,
$flags]) ;>, B<$status = $X-E<gt>fd ;>, B<$status = $X-E<gt>seq($key,
$value, $flags) ;>, B<$status = $X-E<gt>sync([$flags]) ;>
d22482 1
a22482 1
=item DBM FILTERS
d22484 1
a22484 2
B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>
d22486 1
a22486 1
=over 4
d22488 1
a22488 1
=item The Filter
d22490 1
a22490 3
=item An Example -- the NULL termination problem.

=item Another Example -- Key is a C int.
d22494 1
a22494 1
=item HINTS AND TIPS 
d22498 1
a22498 1
=item Locking: The Trouble with fd
d22500 1
a22500 1
=item Safe ways to lock a database
d22502 1
a22502 1
B<Tie::DB_Lock>, B<Tie::DB_LockFile>, B<DB_File::Lock>
d22504 1
a22504 5
=item Sharing Databases With C Applications

=item The untie() Gotcha

=back
d22506 1
a22506 1
=item COMMON QUESTIONS
d22508 3
a22510 1
=over 4
d22512 1
a22512 1
=item Why is there Perl source in my database?
d22514 1
a22514 1
=item How do I store complex data structures with DB_File?
d22516 1
a22516 1
=item What does "Invalid Argument" mean?
d22518 1
a22518 1
=item What does "Bareword 'DB_File' not allowed" mean? 
d22522 1
a22522 1
=item REFERENCES
d22524 1
a22524 1
=item HISTORY
d22526 1
a22526 1
=item BUGS
d22528 1
a22528 1
=item AVAILABILITY
d22530 1
a22530 1
=item COPYRIGHT
d22532 2
a22533 1
=item SEE ALSO
d22535 1
a22535 1
=item AUTHOR
d22539 1
a22539 2
=head2 Data::Dumper - stringified perl data structures, suitable for both
printing and C<eval>
d22543 3
a22545 1
=item SYNOPSIS
d22547 1
a22547 1
=item DESCRIPTION
d22549 1
a22549 1
=over 4
d22551 1
a22551 1
=item Methods
d22553 1
a22553 4
I<PACKAGE>->new(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Dump  I<or> 
I<PACKAGE>->Dump(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Seen(I<[HASHREF]>),
I<$OBJ>->Values(I<[ARRAYREF]>), I<$OBJ>->Names(I<[ARRAYREF]>),
I<$OBJ>->Reset
d22555 1
a22555 1
=item Functions
d22557 1
a22557 1
Dumper(I<LIST>)
d22559 1
a22559 1
=item Configuration Variables or Methods
d22561 1
a22561 1
=item Exports
d22563 1
a22563 1
Dumper
d22565 1
a22565 1
=back
d22567 1
a22567 1
=item EXAMPLES
d22569 1
a22569 1
=item BUGS
d22571 1
a22571 1
=over 4
d22573 1
a22573 1
=item NOTE
d22577 8
d22587 1
a22587 1
=item VERSION
d22589 1
a22589 1
=item SEE ALSO
d22593 1
a22593 1
=head2 Devel::DProf - a Perl code profiler
d22601 25
a22625 1
=item PROFILE FORMAT
d22627 1
a22627 1
=item AUTOLOAD
d22629 1
a22629 1
=item ENVIRONMENT
d22631 8
a22638 1
=item BUGS
d22640 1
a22640 1
=item SEE ALSO
d22644 1
a22644 1
=head2 Devel::PPPort - Perl/Pollution/Portability
d22648 1
a22648 3
=item SYNOPSIS

=item DESCRIPTION
d22650 1
a22650 1
=over 4
d22652 1
a22652 1
=item Why use ppport.h?
d22654 1
a22654 3
You should use F<ppport.h> in modern code so that your code will work
with the widest range of Perl interpreters possible, without significant
additional work.
d22656 1
a22656 1
=item How to use ppport.h
d22658 1
a22658 1
=item Running ppport.h
d22660 1
a22660 1
=back
d22662 1
a22662 1
=item FUNCTIONS
d22664 1
a22664 1
=over 4
d22666 1
a22666 1
=item WriteFile
d22668 1
a22668 1
=back
d22670 1
a22670 1
=item COMPATIBILITY
d22672 1
a22672 1
=over 4
d22674 1
a22674 1
=item Provided Perl compatibility API
d22676 1
a22676 1
=item Perl API not supported by ppport.h
d22678 1
a22678 3
perl 5.9.2, perl 5.9.1, perl 5.9.0, perl 5.8.3, perl 5.8.1, perl 5.8.0,
perl 5.7.3, perl 5.7.2, perl 5.7.1, perl 5.6.1, perl 5.6.0, perl 5.005_03,
perl 5.005, perl 5.004_05, perl 5.004_04, perl 5.004
d22682 1
a22682 1
=item BUGS
d22684 1
a22684 1
=item AUTHORS
d22686 1
a22686 1
=item COPYRIGHT
d22690 6
d22698 1
a22698 1
=head2 Devel::Peek - A data debugging tool for the XS programmer
d22706 4
a22709 1
=over 4
d22711 1
a22711 1
=item Runtime debugging
d22713 1
a22713 1
=item Memory footprint debugging
d22717 1
a22717 1
=item EXAMPLES
d22721 1
a22721 1
=item A simple scalar string
d22723 1
a22723 1
=item A simple scalar number
d22725 1
a22725 1
=item A simple scalar with an extra reference
d22727 1
a22727 1
=item A reference to a simple scalar
d22729 1
a22729 1
=item A reference to an array
d22731 2
a22732 1
=item A reference to a hash
d22734 1
a22734 1
=item Dumping a large array or hash
d22736 1
a22736 1
=item A reference to an SV which holds a C pointer
d22738 1
a22738 1
=item A reference to a subroutine
d22742 7
a22748 1
=item EXPORTS
d22750 1
a22750 1
=item BUGS
d22752 1
a22752 1
=item AUTHOR
d22754 1
a22754 1
=item SEE ALSO
d22756 4
a22759 1
=back
d22761 1
a22761 1
=head2 Devel::SelfStubber - generate stubs for a SelfLoading module
d22763 1
a22763 1
=over 4
d22765 1
a22765 1
=item SYNOPSIS
d22767 1
a22767 1
=item DESCRIPTION
d22771 1
a22771 2
=head2 Devel::Size - Perl extension for finding the memory usage of Perl
variables
d22779 7
a22785 1
=item FUNCTIONS
d22787 1
a22787 1
=over 4
d22789 1
a22789 1
=item size($ref)
d22791 1
a22791 1
=item total_size($ref)
d22795 1
a22795 1
=item EXPORT
d22797 1
a22797 1
=item UNDERSTANDING MEMORY ALLOCATION
d22799 1
a22799 1
=over 4
d22801 1
a22801 1
=item The C library
d22803 1
a22803 1
=item Perl
d22805 2
a22806 1
=back
d22808 1
a22808 1
=item DANGERS
d22810 1
a22810 1
=item Messages: texts originating from this module.
d22812 1
a22812 1
=over 4
d22814 1
a22814 1
=item Errors
d22816 1
a22816 1
=item warnings
d22818 1
a22818 1
=back
d22820 1
a22820 1
=item BUGS
d22822 1
a22822 1
=item AUTHOR
d22824 3
a22826 1
=item COPYRIGHT
d22830 2
d22834 1
a22834 1
=head2 Digest - Modules that calculate message digests
d22842 1
a22842 1
I<binary>, I<hex>, I<base64>
d22844 1
a22844 1
=item OO INTERFACE
d22846 1
a22846 5
$ctx = Digest->XXX($arg,...), $ctx = Digest->new(XXX => $arg,...), $ctx =
Digest::XXX->new($arg,...), $other_ctx = $ctx->clone, $ctx->reset,
$ctx->add( $data, ... ), $ctx->addfile( $io_handle ), $ctx->add_bits(
$data, $nbits ), $ctx->add_bits( $bitstring ), $ctx->digest,
$ctx->hexdigest, $ctx->b64digest
d22848 3
a22850 1
=item Digest speed
d22852 1
a22852 1
=item SEE ALSO
d22856 2
d22860 1
a22860 1
=head2 Digest::MD5 - Perl interface to the MD5 Algorithm
d22868 1
a22868 1
=item FUNCTIONS
d22870 1
a22870 1
md5($data,...), md5_hex($data,...), md5_base64($data,...)
d22874 2
a22875 3
$md5 = Digest::MD5->new, $md5->reset, $md5->clone, $md5->add($data,...),
$md5->addfile($io_handle), $md5->add_bits($data, $nbits),
$md5->add_bits($bitstring), $md5->digest, $md5->hexdigest, $md5->b64digest
d22877 1
a22877 1
=item EXAMPLES
d22879 1
a22879 1
=item SEE ALSO
a22882 2
=item AUTHORS

d22885 1
a22885 1
=head2 Digest::base - Digest base class
d22893 1
a22893 1
=item SEE ALSO
d22895 1
a22895 3
=back

=head2 Digest::file - Calculate digests of files
d22899 1
a22899 1
=item SYNOPSIS
d22901 2
a22902 1
=item DESCRIPTION
d22904 1
a22904 3
digest_file( $file, $algorithm, [$arg,...] ), digest_file_hex( $file,
$algorithm, [$arg,...] ), digest_file_base64( $file, $algorithm, [$arg,...]
)
d22908 4
d22914 1
a22914 1
=head2 DirHandle - supply object methods for directory handles
d22922 13
a22934 1
=item NOTES
d22938 2
a22939 1
=head2 Dumpvalue - provides screen dump of Perl data.
d22947 4
d22953 5
a22957 1
=item Creation
d22959 1
a22959 4
C<arrayDepth>, C<hashDepth>, C<compactDump>, C<veryCompact>, C<globPrint>,
C<dumpDBFiles>, C<dumpPackages>, C<dumpReused>, C<tick>, C<quoteHighBit>,
C<printUndef>, C<usageOnly>, unctrl, subdump, bareStringify, quoteHighBit,
stopDbSignal
d22961 1
a22961 1
=item Methods
d22963 2
a22964 2
dumpValue, dumpValues, stringify, dumpvars, set_quote, set_unctrl,
compactDump, veryCompact, set, get
d22966 1
a22966 1
=back
d22970 1
a22970 1
=head2 DynaLoader - Dynamically load C libraries into Perl code
d22974 3
a22976 1
=item SYNOPSIS
d22978 1
a22978 1
=item DESCRIPTION
d22980 6
a22985 5
@@dl_library_path, @@dl_resolve_using, @@dl_require_symbols, @@dl_librefs,
@@dl_modules, @@dl_shared_objects, dl_error(), $dl_debug, dl_findfile(),
dl_expandspec(), dl_load_file(), dl_unload_file(), dl_load_flags(),
dl_find_symbol(), dl_find_symbol_anywhere(), dl_undef_symbols(),
dl_install_xsub(), bootstrap()
d22987 1
a22987 1
=item AUTHOR
d22991 1
a22991 2
=head2 DynaLoader::XSLoader, XSLoader - Dynamically load C libraries into
Perl code
d22995 1
a22995 1
=item VERSION
d22997 1
a22997 1
=item SYNOPSIS
d22999 1
a22999 1
=item DESCRIPTION
d23001 1
a23001 1
=over 4
d23003 1
a23003 1
=item Migration from C<DynaLoader>
d23005 1
a23005 1
=item Backward compatible boilerplate
d23007 1
a23007 1
=back
d23009 1
a23009 1
=item Order of initialization: early load()
d23011 1
a23011 1
=over 4
d23013 1
a23013 1
=item The most hairy case
d23015 1
a23015 1
=back
d23017 1
a23017 1
=item DIAGNOSTICS
d23019 1
a23019 3
Can't find '%s' symbol in %s, Can't load '%s' for module %s: %s, Undefined
symbols present after loading %s: %s, XSLoader::load('Your::Module',
$Your::Module::VERSION)
d23021 1
a23021 1
=item LIMITATIONS
d23023 1
a23023 1
=item BUGS
d23025 1
a23025 1
=item SEE ALSO
d23027 1
a23027 1
=item AUTHORS
d23029 1
a23029 1
=item COPYRIGHT
d23033 5
a23037 1
=head2 Encode - character encodings
d23039 1
a23039 1
=over 4
d23041 1
a23041 1
=item SYNOPSIS
d23043 1
a23043 1
=over 4
d23045 1
a23045 1
=item Table of Contents
d23049 2
a23050 1
=item DESCRIPTION
d23054 1
a23054 1
=item TERMINOLOGY
d23056 1
a23056 1
=back
d23058 1
a23058 1
=item PERL ENCODING API
d23060 1
a23060 4
$octets  = encode(ENCODING, $string [, CHECK]), $string = decode(ENCODING,
$octets [, CHECK]), [$length =] from_to($octets, FROM_ENC, TO_ENC [,
CHECK]), $octets = encode_utf8($string);, $string = decode_utf8($octets [,
CHECK]);
d23064 1
a23064 5
=item Listing available encodings

=item Defining Aliases

=back
d23066 3
a23068 1
=item Encoding via PerlIO
d23070 1
a23070 1
=item Handling Malformed Data
d23072 1
a23072 5
B<NOTE:> Not all encoding support this feature, I<CHECK> =
Encode::FB_DEFAULT ( == 0), I<CHECK> = Encode::FB_CROAK ( == 1), I<CHECK> =
Encode::FB_QUIET, I<CHECK> = Encode::FB_WARN, perlqq mode (I<CHECK> =
Encode::FB_PERLQQ), HTML charref mode (I<CHECK> = Encode::FB_HTMLCREF), XML
charref mode (I<CHECK> = Encode::FB_XMLCREF), The bitmask
d23074 2
a23075 1
=over 4
d23077 1
a23077 1
=item coderef for CHECK
d23081 1
a23081 5
=item Defining Encodings

=item The UTF-8 flag

Goal #1:, Goal #2:, Goal #3:, Goal #4:
d23085 1
a23085 3
=item Messing with Perl's Internals

is_utf8(STRING [, CHECK]), _utf8_on(STRING), _utf8_off(STRING)
d23087 1
a23087 1
=back
d23089 1
a23089 1
=item UTF-8 vs. utf8
d23091 4
a23094 1
=item SEE ALSO
d23096 1
a23096 1
=item MAINTAINER
d23100 1
a23100 1
=head2 Encode::Alias - alias definitions to encodings
d23104 1
a23104 3
=item SYNOPSIS

=item DESCRIPTION
d23106 1
a23106 2
As a simple string, As a qr// compiled regular expression, e.g.:, As a code
reference, e.g.:
d23108 1
a23108 1
=over 4
d23110 1
a23110 1
=item Alias overloading
d23112 1
a23112 1
=back
d23114 1
a23114 1
=item SEE ALSO
d23116 1
a23116 1
=back
d23118 1
a23118 1
=head2 Encode::Byte - Single Byte Encodings
d23120 1
a23120 1
=over 4
d23122 1
a23122 1
=item SYNOPSIS
d23124 1
a23124 1
=item ABSTRACT
d23126 1
a23126 1
=item DESCRIPTION
d23128 1
a23128 1
=item SEE ALSO
d23130 1
a23130 1
=back
d23132 1
a23132 1
=head2 Encode::CJKConstants -- Internally used by Encode::??::ISO_2022_*
d23134 1
a23134 1
=head2 Encode::CN - China-based Chinese Encodings
d23136 1
a23136 1
=over 4
d23138 1
a23138 1
=item SYNOPSIS
d23140 1
a23140 1
=item DESCRIPTION
d23142 1
a23142 1
=item NOTES
d23144 1
a23144 1
=item BUGS
d23148 3
a23150 1
=back
d23152 1
a23152 1
=head2 Encode::CN::HZ -- internally used by Encode::CN
d23154 1
a23154 1
=head2 Encode::Config -- internally used by Encode
d23156 1
a23156 1
=head2 Encode::EBCDIC - EBCDIC Encodings
a23161 2
=item ABSTRACT

d23166 6
d23174 1
a23174 1
=head2 Encode::Encoding - Encode Implementation Base Class
d23182 2
d23186 5
a23190 1
=item Methods you should implement
d23192 1
a23192 2
-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check]),
-E<gt>cat_decode($destination, $octets, $offset, $terminator [,$check])
d23194 1
a23194 1
=item Other methods defined in Encode::Encodings
d23196 2
a23197 2
-E<gt>name, -E<gt>renew, -E<gt>renewed, -E<gt>perlio_ok(),
-E<gt>needs_lines()
d23199 1
a23199 1
=item Example: Encode::ROT13
d23203 1
a23203 1
=item Why the heck Encode API is different?
d23207 3
a23209 1
=item Compiled Encodings
d23211 1
a23211 1
=back
d23213 6
a23218 1
=item SEE ALSO
d23220 1
a23220 1
Scheme 1, Scheme 2, Other Schemes
d23224 1
a23224 1
=head2 Encode::Guess -- Guesses encoding from data
d23228 7
a23234 1
=item SYNOPSIS
d23236 1
a23236 1
=item ABSTRACT
d23238 1
a23238 1
=item DESCRIPTION
d23240 1
a23240 3
Encode::Guess->set_suspects, Encode::Guess->add_suspects,
Encode::decode("Guess" ...), Encode::Guess->guess($data),
guess_encoding($data, [, I<list of suspects>])
d23242 1
a23242 1
=item CAVEATS
d23244 1
a23244 1
=item TO DO
d23246 1
a23246 1
=item SEE ALSO
d23248 1
a23248 1
=back
d23250 1
a23250 1
=head2 Encode::JP - Japanese Encodings
d23252 1
a23252 1
=over 4
d23254 1
a23254 1
=item SYNOPSIS
d23256 1
a23256 1
=item ABSTRACT
d23258 1
a23258 1
=item DESCRIPTION
d23260 1
a23260 1
=item Note on ISO-2022-JP(-1)?
d23262 1
a23262 1
=item BUGS
d23264 1
a23264 1
=item SEE ALSO
d23268 1
a23268 1
=head2 Encode::JP::H2Z -- internally used by Encode::JP::2022_JP*
d23270 1
a23270 1
=head2 Encode::JP::JIS7 -- internally used by Encode::JP
d23272 1
a23272 1
=head2 Encode::KR - Korean Encodings
d23274 1
a23274 1
=over 4
d23276 1
a23276 1
=item SYNOPSIS
d23278 1
a23278 1
=item DESCRIPTION
d23280 1
a23280 3
=item BUGS

=item SEE ALSO
d23284 1
a23284 3
=head2 Encode::KR::2022_KR -- internally used by Encode::KR

=head2 Encode::MIME::Header -- MIME 'B' and 'Q' header encoding
a23289 2
=item ABSTRACT

d23292 1
a23292 3
=item BUGS

=item SEE ALSO
d23294 1
a23294 1
=back
d23296 1
a23296 3
=head2 Encode::PerlIO -- a detailed document on Encode and PerlIO

=over 4
d23298 3
a23300 1
=item Overview
d23302 1
a23302 1
=item How does it work?
d23304 1
a23304 1
=item Line Buffering
d23306 2
a23307 1
=over 4
d23309 1
a23309 1
=item How can I tell whether my encoding fully supports PerlIO ?
d23313 1
a23313 1
=item SEE ALSO
d23315 1
a23315 1
=back
d23317 1
a23317 1
=head2 Encode::Supported -- Encodings supported by Encode
d23319 1
a23319 1
=over 4
d23321 1
a23321 1
=item DESCRIPTION
d23323 3
a23325 1
=over 4
d23327 1
a23327 1
=item Encoding Names
d23331 1
a23331 1
=item Supported Encodings
d23335 1
a23335 1
=item Built-in Encodings
d23337 1
a23337 1
=item Encode::Unicode -- other Unicode encodings
d23339 1
a23339 1
=item Encode::Byte -- Extended ASCII
d23341 1
a23341 2
ISO-8859 and corresponding vendor mappings, KOI8 - De Facto Standard for
the Cyrillic world, gsm0338 - Hentai Latin 1
d23343 1
a23343 1
=item CJK: Chinese, Japanese, Korean (Multibyte)
d23345 1
a23345 3
Encode::CN -- Continental China, Encode::JP -- Japan, Encode::KR -- Korea,
Encode::TW -- Taiwan, Encode::HanExtra -- More Chinese via CPAN,
Encode::JIS2K -- JIS X 0213 encodings via CPAN
d23347 1
a23347 1
=item Miscellaneous encodings
d23349 1
a23349 1
Encode::EBCDIC, Encode::Symbols, Encode::MIME::Header, Encode::Guess
d23351 1
a23351 1
=back
d23353 1
a23353 1
=item Unsupported encodings
d23355 1
a23355 4
  ISO-2022-JP-2 [RFC1554], ISO-2022-CN [RFC1922], Various HP-UX encodings,
Cyrillic encoding ISO-IR-111, ISO-8859-8-1 [Hebrew], ISIRI 3342, Iran
System, ISIRI 2900 [Farsi], Thai encoding TCVN, Vietnamese encodings VPS,
Various Mac encodings, (Mac) Indic encodings
d23357 1
a23357 1
=item Encoding vs. Charset -- terminology
d23359 1
a23359 1
=item Encoding Classification (by Anton Tagunov and Dan Kogai)
d23361 1
a23361 1
=over 4
d23363 1
a23363 1
=item Microsoft-related naming mess
d23365 1
a23365 1
KS_C_5601-1987, GB2312, Big5, Shift_JIS
d23367 1
a23367 1
=back
d23369 1
a23369 1
=item Glossary
d23371 1
a23371 3
character repertoire, coded character set (CCS), character encoding scheme
(CES), charset (in MIME context), EUC, ISO-2022, UCS, UCS-2, Unicode, UTF,
UTF-16
d23373 1
a23373 1
=item See Also
d23375 1
a23375 1
=item References
d23377 1
a23377 2
ECMA, ECMA-035 (eq C<ISO-2022>), IANA, Assigned Charset Names by IANA, ISO,
RFC, UC, Unicode Glossary
d23379 1
a23379 1
=over 4
d23381 1
a23381 1
=item Other Notable Sites
d23383 1
a23383 2
czyborra.com, CJK.inf, Jungshik Shin's Hangul FAQ, debian.org:
"Introduction to i18n"
d23385 1
a23385 3
=item Offline sources

C<CJKV Information Processing> by Ken Lunde
d23389 1
a23389 3
=back

=head2 Encode::Symbol - Symbol Encodings
a23394 2
=item ABSTRACT

d23397 1
a23397 1
=item SEE ALSO
d23399 1
a23399 1
=back
d23401 1
a23401 3
=head2 Encode::TW - Taiwan-based Chinese Encodings

=over 4
d23403 3
a23405 1
=item SYNOPSIS
d23407 1
a23407 1
=item DESCRIPTION
d23409 1
a23409 1
=item NOTES
d23411 2
a23412 1
=item BUGS
d23414 1
a23414 1
=item SEE ALSO
d23418 1
a23418 1
=head2 Encode::Unicode -- Various Unicode Transformation Formats
d23422 9
a23430 1
=item SYNOPSIS
d23432 1
a23432 1
=item ABSTRACT
d23434 1
a23434 1
L<http://www.unicode.org/glossary/> says:, Quick Reference
d23436 1
a23436 1
=item Size, Endianness, and BOM
d23440 1
a23440 3
=item by size

=item by endianness
d23442 1
a23442 1
BOM as integer when fetched in network byte order
d23444 1
a23444 1
=back
d23446 1
a23446 1
=item Surrogate Pairs
d23448 1
a23448 1
=item Error Checking
d23450 1
a23450 1
=item SEE ALSO
d23452 1
a23452 1
=back
d23454 1
a23454 1
=head2 Encode::Unicode::UTF7 -- UTF-7 encoding
d23456 1
a23456 1
=over 4
d23458 1
a23458 1
=item SYNOPSIS
d23460 1
a23460 1
=item ABSTRACT
d23462 1
a23462 1
=item In Practice
d23464 1
a23464 1
=item SEE ALSO
d23466 1
a23466 1
=back
d23468 1
a23468 2
=head2 Encode::lib::Encode::Alias, Encode::Alias - alias definitions to
encodings
d23470 1
a23470 1
=over 4
d23472 1
a23472 1
=item SYNOPSIS
d23474 1
a23474 1
=item DESCRIPTION
d23476 1
a23476 2
As a simple string, As a qr// compiled regular expression, e.g.:, As a code
reference, e.g.:
d23478 1
a23478 1
=over 4
d23480 1
a23480 1
=item Alias overloading
d23482 1
a23482 1
=back
d23486 1
a23486 1
=back
d23488 1
a23488 2
=head2 Encode::lib::Encode::CJKConstants, Encode::CJKConstants.pm --
Internally used by Encode::??::ISO_2022_*
d23490 1
a23490 2
=head2 Encode::lib::Encode::CN::HZ, Encode::CN::HZ -- internally used by
Encode::CN
d23492 1
a23492 2
=head2 Encode::lib::Encode::Config, Encode::Config -- internally used by
Encode
d23494 1
a23494 2
=head2 Encode::lib::Encode::Encoding, Encode::Encoding - Encode
Implementation Base Class
d23502 2
d23506 5
a23510 1
=item Methods you should implement
d23512 1
a23512 2
-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check]),
-E<gt>cat_decode($destination, $octets, $offset, $terminator [,$check])
d23514 1
a23514 1
=item Other methods defined in Encode::Encodings
d23516 2
a23517 2
-E<gt>name, -E<gt>renew, -E<gt>renewed, -E<gt>perlio_ok(),
-E<gt>needs_lines()
d23519 1
a23519 1
=item Example: Encode::ROT13
d23523 1
a23523 1
=item Why the heck Encode API is different?
d23527 3
a23529 1
=item Compiled Encodings
d23531 1
a23531 1
=back
d23533 3
a23535 1
=item SEE ALSO
d23537 1
a23537 1
Scheme 1, Scheme 2, Other Schemes
d23541 1
a23541 2
=head2 Encode::lib::Encode::Guess, Encode::Guess -- Guesses encoding from
data
d23545 1
a23545 1
=item SYNOPSIS
d23547 1
a23547 1
=item ABSTRACT
d23549 1
a23549 1
=item DESCRIPTION
d23551 1
a23551 3
Encode::Guess->set_suspects, Encode::Guess->add_suspects,
Encode::decode("Guess" ...), Encode::Guess->guess($data),
guess_encoding($data, [, I<list of suspects>])
d23553 1
a23553 1
=item CAVEATS
d23555 1
a23555 1
=item TO DO
d23557 1
a23557 1
=item SEE ALSO
d23559 1
a23559 1
=back
d23561 1
a23561 2
=head2 Encode::lib::Encode::JP::H2Z, Encode::JP::H2Z -- internally used by
Encode::JP::2022_JP*
d23563 1
a23563 2
=head2 Encode::lib::Encode::JP::JIS7, Encode::JP::JIS7 -- internally used
by Encode::JP
d23565 1
a23565 2
=head2 Encode::lib::Encode::KR::2022_KR, Encode::KR::2022_KR -- internally
used by Encode::KR
d23567 1
a23567 2
=head2 Encode::lib::Encode::MIME::Header, Encode::MIME::Header -- MIME 'B'
and 'Q' header encoding
d23569 1
a23569 1
=over 4
d23571 1
a23571 1
=item SYNOPSIS
d23573 1
a23573 1
=item ABSTRACT
d23575 1
a23575 1
=item DESCRIPTION
d23577 1
a23577 1
=item BUGS
d23579 1
a23579 1
=item SEE ALSO
d23583 1
a23583 2
=head2 Encode::lib::Encode::PerlIO, Encode::PerlIO -- a detailed document
on Encode and PerlIO
d23585 1
a23585 1
=over 4
d23587 1
a23587 1
=item Overview
d23589 1
a23589 1
=item How does it work?
d23591 1
a23591 1
=item Line Buffering
d23593 1
a23593 1
=over 4
d23595 1
a23595 1
=item How can I tell whether my encoding fully supports PerlIO ?
d23599 1
a23599 1
=item SEE ALSO
d23601 1
a23601 1
=back
d23603 1
a23603 4
=head2 Encode::lib::Encode::Supported, Encode::Supported -- Encodings
supported by Encode

=over 4
d23607 1
a23607 1
=over 4
d23609 1
a23609 1
=item Encoding Names
d23611 1
a23611 1
=back
d23613 3
a23615 1
=item Supported Encodings
d23617 1
a23617 1
=over 4
d23619 1
a23619 1
=item Built-in Encodings
d23621 2
a23622 1
=item Encode::Unicode -- other Unicode encodings
d23624 1
a23624 1
=item Encode::Byte -- Extended ASCII
d23626 9
a23634 2
ISO-8859 and corresponding vendor mappings, KOI8 - De Facto Standard for
the Cyrillic world, gsm0338 - Hentai Latin 1
d23636 1
a23636 1
=item CJK: Chinese, Japanese, Korean (Multibyte)
d23638 1
a23638 3
Encode::CN -- Continental China, Encode::JP -- Japan, Encode::KR -- Korea,
Encode::TW -- Taiwan, Encode::HanExtra -- More Chinese via CPAN,
Encode::JIS2K -- JIS X 0213 encodings via CPAN
d23640 1
a23640 1
=item Miscellaneous encodings
d23642 1
a23642 1
Encode::EBCDIC, Encode::Symbols, Encode::MIME::Header, Encode::Guess
d23644 2
a23645 1
=back
d23647 1
a23647 1
=item Unsupported encodings
d23649 1
a23649 4
  ISO-2022-JP-2 [RFC1554], ISO-2022-CN [RFC1922], Various HP-UX encodings,
Cyrillic encoding ISO-IR-111, ISO-8859-8-1 [Hebrew], ISIRI 3342, Iran
System, ISIRI 2900 [Farsi], Thai encoding TCVN, Vietnamese encodings VPS,
Various Mac encodings, (Mac) Indic encodings
d23651 1
a23651 1
=item Encoding vs. Charset -- terminology
d23653 2
a23654 1
=item Encoding Classification (by Anton Tagunov and Dan Kogai)
d23656 1
a23656 1
=over 4
d23658 1
a23658 1
=item Microsoft-related naming mess
d23660 1
a23660 1
KS_C_5601-1987, GB2312, Big5, Shift_JIS
d23664 1
a23664 1
=item Glossary
d23666 1
a23666 3
character repertoire, coded character set (CCS), character encoding scheme
(CES), charset (in MIME context), EUC, ISO-2022, UCS, UCS-2, Unicode, UTF,
UTF-16
d23668 1
a23668 1
=item See Also
d23670 1
a23670 1
=item References
d23672 1
a23672 2
ECMA, ECMA-035 (eq C<ISO-2022>), IANA, Assigned Charset Names by IANA, ISO,
RFC, UC, Unicode Glossary
d23674 1
a23674 1
=over 4
d23676 1
a23676 1
=item Other Notable Sites
d23678 2
a23679 2
czyborra.com, CJK.inf, Jungshik Shin's Hangul FAQ, debian.org:
"Introduction to i18n"
d23681 1
a23681 1
=item Offline sources
d23683 1
a23683 1
C<CJKV Information Processing> by Ken Lunde
d23685 1
a23685 1
=back
d23689 2
a23690 2
=head2 Encode::lib::Encode::Unicode::UTF7, Encode::Unicode::UTF7 -- UTF-7
encoding
d23696 12
a23707 1
=item ABSTRACT
d23709 1
a23709 1
=item In Practice
d23713 4
d23719 1
a23719 1
=head2 Encode::lib::Encoder, Encode::Encoder -- Object Oriented Encoder
d23725 1
a23725 1
=item ABSTRACT
d23727 1
a23727 1
=item Description
d23729 1
a23729 1
=over 4
d23731 1
a23731 1
=item Predefined Methods
d23733 1
a23733 3
$e = Encode::Encoder-E<gt>new([$data, $encoding]);, encoder(),
$e-E<gt>data([$data]), $e-E<gt>encoding([$encoding]),
$e-E<gt>bytes([$encoding])
d23735 1
a23735 1
=item Example: base64 transcoder
d23737 1
a23737 1
=item Operator Overloading
d23739 1
a23739 3
=back

=item SEE ALSO
d23743 1
a23743 2
=head2 Encodencoding, encoding - allows you to write your script in
non-ascii or non-utf8
d23749 3
a23751 1
=item ABSTRACT
d23753 2
a23754 1
=over 4
d23756 1
a23756 1
=item Literal Conversions
d23758 1
a23758 1
=item PerlIO layers for C<STD(IN|OUT)>
d23760 1
a23760 1
=item Implicit upgrading for byte strings
d23764 2
a23765 1
=item FEATURES THAT REQUIRE 5.8.1
d23767 1
a23767 1
"NON-EUC" doublebyte encodings, tr//, DATA pseudo-filehandle
d23769 1
a23769 1
=item USAGE
d23771 1
a23771 2
use encoding [I<ENCNAME>] ;, use encoding I<ENCNAME> [ STDIN =E<gt>
I<ENCNAME_IN> ...] ;, use encoding I<ENCNAME> Filter=E<gt>1;, no encoding;
d23773 3
a23775 1
=item The Filter Option
d23777 1
a23777 1
=over 4
d23779 1
a23779 1
=item Filter-related changes at Encode version 1.87
d23783 2
a23784 1
=item CAVEATS
d23788 1
a23788 1
=item NOT SCOPED
d23790 1
a23790 1
=item DO NOT MIX MULTIPLE ENCODINGS
d23792 1
a23792 1
=item tr/// with ranges
d23794 1
a23794 1
Legend of characters above
d23796 1
a23796 1
=back
d23798 3
a23800 1
=item EXAMPLE - Greekperl
d23802 1
a23802 1
=item KNOWN PROBLEMS
d23804 1
a23804 1
literals in regex that are longer than 127 bytes, EBCDIC, format
d23806 1
a23806 3
=over 4

=item The Logic of :locale
d23810 2
a23811 7
=item HISTORY

=item SEE ALSO

=back

=head2 Encoder, Encode::Encoder -- Object Oriented Encoder
d23817 1
a23817 1
=item ABSTRACT
d23819 1
a23819 3
=item Description

=over 4
d23821 1
a23821 1
=item Predefined Methods
d23823 1
a23823 3
$e = Encode::Encoder-E<gt>new([$data, $encoding]);, encoder(),
$e-E<gt>data([$data]), $e-E<gt>encoding([$encoding]),
$e-E<gt>bytes([$encoding])
d23825 2
a23826 1
=item Example: base64 transcoder
d23828 1
a23828 1
=item Operator Overloading
d23830 1
a23830 1
=back
d23832 1
a23832 1
=item SEE ALSO
d23836 2
a23837 2
=head2 English - use nice English (or awk) names for ugly punctuation
variables
d23845 1
a23845 1
=item PERFORMANCE
d23847 1
a23847 1
=back
d23849 1
a23849 2
=head2 Env - perl module that imports environment variables as scalars or
arrays
d23851 1
a23851 1
=over 4
d23853 2
a23854 1
=item SYNOPSIS
d23856 1
a23856 1
=item DESCRIPTION
d23858 1
a23858 1
=item LIMITATIONS
d23862 2
d23866 2
a23867 1
=head2 Errno - System errno constants
d23875 9
a23883 1
=item CAVEATS
d23891 2
a23892 1
=head2 Exporter - Implements default import method for modules
d23900 4
d23906 1
a23906 1
=item How to Export
d23908 1
a23908 1
=item Selecting What To Export
d23910 1
a23910 1
=item How to Import
d23912 1
a23912 1
C<use ModuleName;>, C<use ModuleName ();>, C<use ModuleName qw(...);>
d23914 1
a23914 1
=back
d23916 1
a23916 1
=item Advanced features
d23918 1
a23918 1
=over 4
d23920 1
a23920 1
=item Specialised Import Lists
d23922 1
a23922 1
=item Exporting without using Exporter's import method
d23924 1
a23924 1
=item Exporting without inheriting from Exporter
d23926 1
a23926 1
=item Module Version Checking
d23928 1
a23928 1
=item Managing Unknown Symbols
d23930 1
a23930 1
=item Tag Handling Utility Functions
d23932 1
a23932 1
=item Generating combined tags
d23934 1
a23934 1
=item C<AUTOLOAD>ed Constants
d23936 1
a23936 1
=back
d23940 2
a23941 1
=head2 Exporter::Heavy - Exporter guts
d23949 8
d23959 3
a23961 2
=head2 ExtUtils::Command - utilities to replace common UNIX commands in
Makefiles etc.
d23969 5
a23973 1
=back
d23975 1
a23975 1
cat
d23977 3
a23979 1
eqtime
d23981 1
a23981 1
rm_rf
d23983 1
a23983 1
rm_f
d23985 2
a23986 1
touch
d23988 1
a23988 1
mv
d23990 1
a23990 1
cp
d23992 1
a23992 1
chmod
d23994 1
a23994 1
mkpath
d23996 1
a23996 1
test_f
d23998 1
a23998 1
dos2unix
d24000 1
a24000 1
=over 4
d24002 4
a24005 1
=item SEE ALSO 
d24007 1
a24007 1
=item AUTHOR
d24011 1
a24011 1
=head2 ExtUtils::Command::MM - Commands for the MM's to use in Makefiles
d24015 5
a24019 1
=item SYNOPSIS
d24021 1
a24021 1
=item DESCRIPTION
d24023 1
a24023 1
B<test_harness>
d24025 1
a24025 1
=back
d24027 1
a24027 1
B<pod2man>
d24029 1
a24029 1
B<warn_if_old_packlist>
d24031 1
a24031 1
B<perllocal_install>
d24033 1
a24033 1
B<uninstall>
d24035 1
a24035 1
=head2 ExtUtils::Constant - generate XS code to import C header constants
d24037 1
a24037 1
=over 4
d24039 1
a24039 1
=item SYNOPSIS
d24041 1
a24041 1
=item DESCRIPTION
d24043 1
a24043 1
=item USAGE
d24045 1
a24045 1
IV, UV, NV, PV, PVN, SV, YES, NO, UNDEF
d24047 1
a24047 1
=item FUNCTIONS
d24051 1
a24051 1
constant_types
d24053 1
a24053 1
XS_constant PACKAGE, TYPES, SUBNAME, C_SUBNAME
d24055 1
a24055 1
autoload PACKAGE, VERSION, AUTOLOADER
d24057 1
a24057 1
WriteMakefileSnippet
d24059 1
a24059 2
WriteConstants ATTRIBUTE =E<gt> VALUE [, ...], NAME, DEFAULT_TYPE,
BREAKOUT_AT, NAMES, C_FILE, XS_FILE, SUBNAME, C_SUBNAME
d24061 1
a24061 1
=over 4
d24063 1
a24063 1
=item AUTHOR
d24067 2
a24068 1
=head2 ExtUtils::Constant::Base - base class for ExtUtils::Constant objects
d24076 7
a24082 1
=item USAGE
d24086 2
a24087 1
header
d24089 1
a24089 1
memEQ_clause args_hashref
d24091 1
a24091 1
dump_names arg_hashref, ITEM..
d24093 1
a24093 1
assign arg_hashref, VALUE..
d24095 1
a24095 1
return_clause arg_hashref, ITEM
d24097 1
a24097 1
switch_clause arg_hashref, NAMELEN, ITEMHASH, ITEM..
d24099 1
a24099 1
params WHAT
d24101 3
a24103 1
dogfood arg_hashref, ITEM..
d24105 1
a24105 2
C_constant arg_hashref, ITEM.., name, type, value, macro, default, pre,
post, def_pre, def_post, utf8, weight
d24107 1
a24107 1
=over 4
d24109 1
a24109 1
=item BUGS
d24111 1
a24111 1
=item AUTHOR
d24115 1
a24115 1
=head2 ExtUtils::Constant::Utils - helper functions for ExtUtils::Constant
d24119 3
a24121 1
=item SYNOPSIS
d24123 1
a24123 1
=item DESCRIPTION
d24125 2
a24126 1
=item USAGE
d24128 1
a24128 1
C_stringify NAME
d24132 1
a24132 1
perl_stringify NAME
d24136 7
a24142 1
=item AUTHOR
d24144 1
a24144 1
=back
d24146 1
a24146 2
=head2 ExtUtils::Constant::XS, ExtUtils::Constant::Base - base class for
ExtUtils::Constant objects
d24148 1
a24148 1
=over 4
d24150 1
a24150 1
=item SYNOPSIS
d24152 1
a24152 1
=item DESCRIPTION
d24154 1
a24154 1
=item BUGS
d24156 1
a24156 1
=item AUTHOR
d24158 1
a24158 1
=back
d24160 1
a24160 1
=head2 ExtUtils::Embed - Utilities for embedding Perl in C/C++ applications
d24162 1
a24162 1
=over 4
d24164 1
a24164 1
=item SYNOPSIS
d24166 1
a24166 1
=item DESCRIPTION
d24168 1
a24168 1
=item @@EXPORT
d24170 1
a24170 1
=item FUNCTIONS
d24172 1
a24172 2
xsinit(), Examples, ldopts(), Examples, perl_inc(), ccflags(), ccdlflags(),
ccopts(), xsi_header(), xsi_protos(@@modules), xsi_body(@@modules)
d24180 4
d24186 2
a24187 1
=head2 ExtUtils::Install - install files from here to there
d24195 2
d24199 1
a24199 1
=item Functions
d24201 3
a24203 1
B<install>
d24205 1
a24205 1
=back
d24207 1
a24207 1
=back
d24209 1
a24209 1
B<install_default> I<DISCOURAGED>
d24211 1
a24211 1
B<uninstall>
d24213 1
a24213 1
B<pm_to_blib>
d24215 1
a24215 1
_autosplit
d24219 3
a24221 1
=item ENVIRONMENT
d24223 1
a24223 1
B<PERL_INSTALL_ROOT>
d24225 6
a24230 1
=item AUTHOR
d24232 1
a24232 1
=item LICENSE
d24236 1
a24236 1
=head2 ExtUtils::Installed - Inventory management of installed modules
d24240 15
a24254 1
=item SYNOPSIS
d24256 1
a24256 1
=item DESCRIPTION
d24258 1
a24258 1
=item USAGE
d24260 1
a24260 1
=item FUNCTIONS
d24262 1
a24262 2
new(), modules(), files(), directories(), directory_tree(), validate(),
packlist(), version()
d24264 1
a24264 1
=item EXAMPLE
d24266 1
a24266 1
=item AUTHOR
d24268 1
a24268 1
=back
d24270 1
a24270 1
=head2 ExtUtils::Liblist - determine libraries to use and how to use them
d24272 1
a24272 1
=over 4
d24274 1
a24274 1
=item SYNOPSIS
d24276 1
a24276 1
=item DESCRIPTION
d24278 1
a24278 2
For static extensions, For dynamic extensions at build/link time, For
dynamic extensions at load time
d24280 1
a24280 1
=over 4
d24282 1
a24282 1
=item EXTRALIBS
d24284 1
a24284 1
=item LDLOADLIBS and LD_RUN_PATH
d24286 1
a24286 1
=item BSLOADLIBS
d24290 2
a24291 1
=item PORTABILITY
d24295 3
a24297 1
=item VMS implementation
d24299 1
a24299 1
=item Win32 implementation
d24301 1
a24301 1
=back
d24303 1
a24303 1
=item SEE ALSO
d24305 3
a24307 1
=back
d24309 1
a24309 1
=head2 ExtUtils::MM - OS adjusted ExtUtils::MakeMaker subclass
d24311 1
a24311 1
=over 4
d24313 1
a24313 1
=item SYNOPSIS
d24315 1
a24315 1
=item DESCRIPTION
d24319 1
a24319 1
=head2 ExtUtils::MM_AIX - AIX specific subclass of ExtUtils::MM_Unix
d24323 3
a24325 1
=item SYNOPSIS
d24327 1
a24327 1
=item DESCRIPTION
d24329 2
a24330 1
=over 4
d24332 1
a24332 1
=item Overridden methods
d24336 1
a24336 1
=back
d24340 5
a24344 1
=item AUTHOR
d24346 1
a24346 1
=item SEE ALSO
d24348 1
a24348 1
=back
d24350 1
a24350 1
=head2 ExtUtils::MM_Any - Platform-agnostic MM methods
d24352 1
a24352 1
=over 4
d24354 1
a24354 1
=item SYNOPSIS
d24356 1
a24356 1
=item DESCRIPTION
d24358 1
a24358 1
=item METHODS
d24360 1
a24360 1
=over 4
d24362 1
a24362 1
=item Cross-platform helper methods
d24364 1
a24364 1
=back
d24366 1
a24366 1
=back
d24368 1
a24368 1
=over 4
d24370 1
a24370 1
=item Targets
d24374 5
a24378 1
=over 4
d24380 1
a24380 1
=item Init methods
d24382 1
a24382 1
=back
d24384 1
a24384 1
=over 4
d24386 1
a24386 1
=item Tools
d24390 3
d24395 3
a24397 1
=item File::Spec wrappers
d24399 1
a24399 1
=back
d24403 7
a24409 1
=item Misc
d24411 1
a24411 1
=back
d24413 1
a24413 1
=over 4
d24415 1
a24415 1
=item AUTHOR
d24419 1
a24419 2
=head2 ExtUtils::MM_BeOS - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d24423 14
a24436 1
=item SYNOPSIS
d24438 1
a24438 1
=item DESCRIPTION
d24442 1
a24442 1
os_flavor
d24444 1
a24444 1
init_linker
d24446 1
a24446 2
=head2 ExtUtils::MM_Cygwin - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d24448 1
a24448 1
=over 4
d24450 1
a24450 1
=item SYNOPSIS
d24452 1
a24452 1
=item DESCRIPTION
d24454 1
a24454 1
os_flavor
d24456 1
a24456 1
=back
d24458 1
a24458 1
cflags
d24460 1
a24460 1
replace_manpage_separator
d24462 1
a24462 1
init_linker
d24464 1
a24464 1
=head2 ExtUtils::MM_DOS - DOS specific subclass of ExtUtils::MM_Unix
d24466 1
a24466 1
=over 4
d24468 1
a24468 1
=item SYNOPSIS
d24470 1
a24470 1
=item DESCRIPTION
d24472 1
a24472 1
=over 4
d24474 1
a24474 1
=item Overridden methods
d24476 1
a24476 1
os_flavor
d24480 3
a24482 1
=back
d24484 1
a24484 1
B<replace_manpage_separator>
d24486 1
a24486 1
=over 4
d24490 3
a24492 1
=item SEE ALSO
d24496 2
a24497 1
=head2 ExtUtils::MM_MacOS - once produced Makefiles for MacOS Classic
d24505 1
a24505 1
=back
d24507 1
a24507 2
=head2 ExtUtils::MM_NW5 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d24511 1
a24511 3
=item SYNOPSIS

=item DESCRIPTION
d24513 3
a24515 1
=back
d24517 1
a24517 1
os_flavor
d24519 1
a24519 1
init_platform, platform_constants
d24521 2
a24522 1
const_cccmd
d24524 1
a24524 1
static_lib
d24526 1
a24526 1
dynamic_lib
d24528 1
a24528 2
=head2 ExtUtils::MM_OS2 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d24532 3
a24534 1
=item SYNOPSIS
d24536 1
a24536 1
=item DESCRIPTION
d24538 6
a24543 1
=item METHODS
d24545 1
a24545 1
init_dist
d24549 1
a24549 3
init_linker

os_flavor
d24551 1
a24551 1
=head2 ExtUtils::MM_QNX - QNX specific subclass of ExtUtils::MM_Unix
d24553 1
a24553 1
=over 4
d24555 1
a24555 1
=item SYNOPSIS
d24557 1
a24557 1
=item DESCRIPTION
d24559 1
a24559 1
=over 4
d24561 1
a24561 1
=item Overridden methods
d24563 1
a24563 1
=back
d24565 1
a24565 1
=back
d24567 1
a24567 1
=over 4
d24569 1
a24569 1
=item AUTHOR
d24571 1
a24571 1
=item SEE ALSO
d24573 1
a24573 1
=back
d24575 1
a24575 1
=head2 ExtUtils::MM_UWIN - U/WIN specific subclass of ExtUtils::MM_Unix
d24577 1
a24577 1
=over 4
d24579 1
a24579 1
=item SYNOPSIS
d24581 1
a24581 1
=item DESCRIPTION
d24583 1
a24583 1
=over 4
d24585 1
a24585 1
=item Overridden methods
d24587 1
a24587 1
os_flavor
d24591 3
a24593 1
=back
d24595 1
a24595 1
B<replace_manpage_separator>
d24597 1
a24597 1
=over 4
d24601 3
a24603 1
=item SEE ALSO
d24607 2
a24608 1
=head2 ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker
d24616 1
a24616 3
=item METHODS

=back
d24620 1
a24620 1
=item Methods
d24622 3
a24624 1
os_flavor
d24626 1
a24626 1
=back
d24628 1
a24628 1
c_o (o)
d24630 2
a24631 1
cflags (o)
d24633 1
a24633 1
const_cccmd (o)
d24635 1
a24635 1
const_config (o)
d24637 1
a24637 1
const_loadlibs (o)
d24639 1
a24639 1
constants (o)
d24641 1
a24641 1
depend (o)
d24643 1
a24643 1
init_DEST
d24645 1
a24645 1
init_dist
d24647 6
a24652 1
dist (o)
d24654 1
a24654 1
dist_basics (o)
d24656 1
a24656 1
dist_ci (o)
d24658 1
a24658 1
dist_core (o)
d24660 1
a24660 1
B<dist_target>
d24662 1
a24662 1
B<tardist_target>
d24664 1
a24664 1
B<zipdist_target>
d24666 1
a24666 1
B<tarfile_target>
d24668 1
a24668 1
zipfile_target
d24670 1
a24670 1
uutardist_target
d24672 1
a24672 1
shdist_target
d24674 1
a24674 1
dlsyms (o)
d24676 1
a24676 1
dynamic_bs (o)
d24678 1
a24678 1
dynamic_lib (o)
d24680 1
a24680 1
exescan
d24682 1
a24682 1
extliblist
d24684 1
a24684 1
find_perl
d24686 1
a24686 1
fixin
d24688 1
a24688 1
force (o)
d24690 1
a24690 1
guess_name
d24692 1
a24692 1
has_link_code
d24694 1
a24694 1
init_dirscan
d24696 1
a24696 1
init_DIRFILESEP
d24698 1
a24698 1
init_main
d24700 1
a24700 1
init_others
d24702 1
a24702 1
init_linker
d24704 1
a24704 1
init_lib2arch
d24706 1
a24706 1
init_PERL
d24708 1
a24708 1
init_platform, platform_constants
d24710 1
a24710 1
init_PERM
d24712 1
a24712 1
init_xs
d24714 1
a24714 1
install (o)
d24716 1
a24716 1
installbin (o)
d24718 2
a24719 1
linkext (o)
d24721 1
a24721 1
lsdir
d24723 1
a24723 1
macro (o)
d24725 1
a24725 3
makeaperl (o)

makefile (o)
d24727 1
a24727 1
maybe_command
d24729 1
a24729 1
needs_linking (o)
d24731 1
a24731 1
nicetext
d24733 3
a24735 3
parse_abstract

parse_version
d24737 1
a24737 1
pasthru (o)
d24739 1
a24739 1
perl_script
d24741 2
a24742 1
perldepend (o)
d24744 1
a24744 1
perm_rw (o)
d24746 1
a24746 1
perm_rwx (o)
d24748 1
a24748 1
pm_to_blib
d24750 1
a24750 1
post_constants (o)
d24752 1
a24752 3
post_initialize (o)

postamble (o)
d24754 1
a24754 1
ppd
d24756 1
a24756 1
prefixify
d24758 3
a24760 1
processPL (o)
d24762 1
a24762 1
quote_paren
d24764 1
a24764 1
replace_manpage_separator
d24766 1
a24766 1
cd
d24768 1
a24768 5
oneliner

quote_literal

escape_newlines
d24770 1
a24770 3
max_exec_len

static (o)
d24772 1
a24772 1
static_lib (o)
d24774 1
a24774 1
staticmake (o)
d24776 1
a24776 1
subdir_x (o)
d24778 1
a24778 1
subdirs (o)
d24780 1
a24780 1
test (o)
d24782 1
a24782 1
test_via_harness (override)
d24784 1
a24784 1
test_via_script (override)
d24786 1
a24786 1
tools_other (o)
d24788 1
a24788 1
tool_xsubpp (o)
d24790 1
a24790 1
all_target
d24792 1
a24792 1
top_targets (o)
d24794 1
a24794 1
writedoc
d24796 1
a24796 1
xs_c (o)
d24798 1
a24798 1
xs_cpp (o)
d24800 1
a24800 1
xs_o (o)
d24802 1
a24802 1
=over 4
d24804 1
a24804 1
=item SEE ALSO
d24808 1
a24808 2
=head2 ExtUtils::MM_VMS - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d24810 1
a24810 1
=over 4
d24812 1
a24812 1
=item SYNOPSIS
d24814 1
a24814 1
=item DESCRIPTION
d24816 1
a24816 1
=over 4
d24818 1
a24818 1
=item Methods always loaded
d24820 1
a24820 1
wraplist
d24824 2
a24825 1
=back
d24829 1
a24829 1
=item Methods
d24831 1
a24831 1
guess_name (override)
d24833 1
a24833 1
=back
d24835 1
a24835 1
find_perl (override)
d24837 1
a24837 1
maybe_command (override)
d24839 3
a24841 1
pasthru (override)
d24843 1
a24843 1
pm_to_blib (override)
d24845 1
a24845 1
perl_script (override)
d24847 2
a24848 1
replace_manpage_separator
d24850 1
a24850 1
init_DEST
d24852 1
a24852 1
init_DIRFILESEP
d24854 1
a24854 1
init_main (override)
d24856 1
a24856 1
init_others (override)
d24858 1
a24858 1
init_platform (override)
d24860 1
a24860 1
platform_constants
d24862 1
a24862 1
init_VERSION (override)
d24864 3
a24866 1
constants (override)
d24868 1
a24868 1
special_targets
d24870 1
a24870 1
cflags (override)
d24872 1
a24872 1
const_cccmd (override)
d24874 1
a24874 1
tools_other (override)
d24876 1
a24876 1
init_dist (override)
d24878 1
a24878 1
c_o (override)
d24880 1
a24880 1
xs_c (override)
d24882 1
a24882 1
xs_o (override)
d24884 1
a24884 1
dlsyms (override)
d24886 1
a24886 1
dynamic_lib (override)
d24888 1
a24888 1
static_lib (override)
d24890 1
a24890 1
extra_clean_files
d24892 1
a24892 1
zipfile_target, tarfile_target, shdist_target
d24894 1
a24894 1
install (override)
d24896 1
a24896 1
perldepend (override)
d24898 1
a24898 1
makeaperl (override)
d24900 1
a24900 1
nicetext (override)
d24902 1
a24902 1
prefixify (override)
d24904 1
a24904 1
cd
d24906 1
a24906 1
oneliner
d24908 1
a24908 1
B<echo>
d24910 1
a24910 1
quote_literal
d24912 1
a24912 1
escape_newlines
d24914 1
a24914 1
max_exec_len
d24916 1
a24916 1
init_linker
d24918 1
a24918 1
eliminate_macros
d24920 1
a24920 1
fixpath
d24922 1
a24922 1
os_flavor
d24924 1
a24924 1
=over 4
d24926 1
a24926 1
=item AUTHOR
d24930 2
a24931 1
=head2 ExtUtils::MM_VOS - VOS specific subclass of ExtUtils::MM_Unix
d24939 2
d24943 1
a24943 1
=item Overridden methods
d24945 3
a24947 1
=back
d24949 1
a24949 1
=back
d24951 1
a24951 1
=over 4
d24953 2
a24954 1
=item AUTHOR
d24956 1
a24956 1
=item SEE ALSO
d24960 1
a24960 2
=head2 ExtUtils::MM_Win32 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d24964 1
a24964 3
=item SYNOPSIS

=item DESCRIPTION
d24966 1
a24966 1
=back
d24968 1
a24968 1
=over 4
d24970 3
a24972 1
=item Overridden methods
d24974 1
a24974 1
B<dlsyms>
d24978 1
a24978 1
replace_manpage_separator
d24980 1
a24980 1
B<maybe_command>
d24982 1
a24982 1
B<init_DIRFILESEP>
d24984 1
a24984 1
B<init_others>
d24986 1
a24986 1
init_platform, platform_constants
d24988 1
a24988 1
special_targets
d24990 1
a24990 1
static_lib
d24992 1
a24992 1
dynamic_lib
d24994 1
a24994 1
extra_clean_files
d24996 1
a24996 1
init_linker
d24998 1
a24998 1
perl_script
d25000 1
a25000 1
xs_o
d25002 1
a25002 1
pasthru
d25004 1
a25004 1
oneliner
d25006 1
a25006 1
cd
d25008 1
a25008 1
max_exec_len
d25010 1
a25010 1
os_flavor
d25012 1
a25012 1
=head2 ExtUtils::MM_Win95 - method to customize MakeMaker for Win9X
d25014 1
a25014 1
=over 4
d25016 1
a25016 1
=item SYNOPSIS
d25018 1
a25018 1
=item DESCRIPTION
d25020 1
a25020 1
=over 4
d25022 1
a25022 1
=item Overriden methods
d25024 1
a25024 1
xs_c
d25026 1
a25026 1
=back
d25028 1
a25028 1
=back
d25030 1
a25030 1
xs_cpp
d25032 1
a25032 1
xs_o
d25034 1
a25034 1
max_exec_len
d25036 1
a25036 1
os_flavor
d25040 3
a25042 1
=item AUTHOR
d25044 1
a25044 1
=back
d25046 3
a25048 1
=head2 ExtUtils::MY - ExtUtils::MakeMaker subclass for customization
d25050 1
a25050 1
=over 4
d25052 1
a25052 1
=item SYNOPSIS
d25054 1
a25054 1
=item DESCRIPTION
d25058 1
a25058 1
=head2 ExtUtils::MakeMaker - Create a module Makefile
d25066 1
a25066 1
=over 4
d25068 1
a25068 1
=item How To Write A Makefile.PL
d25070 1
a25070 1
=item Default Makefile Behaviour
d25072 2
a25073 1
=item make test
d25075 1
a25075 1
=item make testdb
d25077 1
a25077 1
=item make install
d25079 1
a25079 1
=item PREFIX and LIB attribute
d25081 1
a25081 1
=item AFS users
d25083 1
a25083 1
=item Static Linking of a new Perl Binary
d25085 1
a25085 1
=item Determination of Perl Library and Installation Locations
d25087 1
a25087 1
=item Which architecture dependent directory?
d25089 1
a25089 1
=item Using Attributes and Parameters
d25091 1
a25091 18
ABSTRACT, ABSTRACT_FROM, AUTHOR, BINARY_LOCATION, C, CCFLAGS, CONFIG,
CONFIGURE, DEFINE, DESTDIR, DIR, DISTNAME, DISTVNAME, DL_FUNCS, DL_VARS,
EXCLUDE_EXT, EXE_FILES, FIRST_MAKEFILE, FULLPERL, FULLPERLRUN,
FULLPERLRUNINST, FUNCLIST, H, IMPORTS, INC, INCLUDE_EXT, INSTALLARCHLIB,
INSTALLBIN, INSTALLDIRS, INSTALLMAN1DIR, INSTALLMAN3DIR, INSTALLPRIVLIB,
INSTALLSCRIPT, INSTALLSITEARCH, INSTALLSITEBIN, INSTALLSITELIB,
INSTALLSITEMAN1DIR, INSTALLSITEMAN3DIR, INSTALLVENDORARCH,
INSTALLVENDORBIN, INSTALLVENDORLIB, INSTALLVENDORMAN1DIR,
INSTALLVENDORMAN3DIR, INST_ARCHLIB, INST_BIN, INST_LIB, INST_MAN1DIR,
INST_MAN3DIR, INST_SCRIPT, LD, LDDLFLAGS, LDFROM, LIB, LIBPERL_A, LIBS,
LINKTYPE, MAKEAPERL, MAKEFILE_OLD, MAN1PODS, MAN3PODS, MAP_TARGET,
MYEXTLIB, NAME, NEEDS_LINKING, NOECHO, NORECURS, NO_META, NO_VC, OBJECT,
OPTIMIZE, PERL, PERL_CORE, PERLMAINCC, PERL_ARCHLIB, PERL_LIB,
PERL_MALLOC_OK, PERLPREFIX, PERLRUN, PERLRUNINST, PERL_SRC, PERM_RW,
PERM_RWX, PL_FILES, PM, PMLIBDIRS, PM_FILTER, POLLUTE, PPM_INSTALL_EXEC,
PPM_INSTALL_SCRIPT, PREFIX, PREREQ_FATAL, PREREQ_PM, PREREQ_PRINT,
PRINT_PREREQ, SITEPREFIX, SIGN, SKIP, TYPEMAPS, VENDORPREFIX, VERBINST,
VERSION, VERSION_FROM, VERSION_SYM, XS, XSOPT, XSPROTOARG, XS_VERSION
d25093 1
a25093 1
=item Additional lowercase attributes
d25095 1
a25095 2
clean, depend, dist, dynamic_lib, linkext, macro, postamble, realclean,
test, tool_autosplit
d25097 1
a25097 1
=item Overriding MakeMaker Methods
d25099 4
a25102 1
=item The End Of Cargo Cult Programming
d25104 1
a25104 1
C<< MAN3PODS => ' ' >>
d25106 1
a25106 1
=item Hintsfile support
d25108 1
a25108 1
=item Distribution Support
d25110 1
a25110 3
   make distcheck,    make skipcheck,	 make distclean,    make manifest, 
  make distdir,   make disttest,    make tardist,    make dist,    make
uutardist,    make shdist,    make zipdist,    make ci
d25112 1
a25112 1
=item Module Meta-Data
d25114 1
a25114 1
=item Disabling an extension
d25116 1
a25116 1
=item Other Handy Functions
d25118 1
a25118 1
prompt
d25120 1
a25120 5
=back

=item ENVIRONMENT

PERL_MM_OPT, PERL_MM_USE_DEFAULT, PERL_CORE
d25126 1
a25126 1
=item LICENSE
d25130 1
a25130 1
=head2 ExtUtils::MakeMaker::Config - Wrapper around Config.pm
d25138 1
a25138 1
=back
d25140 3
a25142 2
=head2 ExtUtils::MakeMaker::FAQ - Frequently Asked Questions About
MakeMaker
d25144 1
a25144 1
=over 4
d25146 1
a25146 1
=item DESCRIPTION
d25148 1
a25148 1
=over 4
d25150 1
a25150 1
=item Module Installation
d25152 2
a25153 2
How do I keep from installing man pages?, How do I use a module without
installing it?
d25155 1
a25155 1
=item Philosophy and History
d25157 1
a25157 3
Why not just use <insert other build config tool here>?, What is
Module::Build and how does it relate to MakeMaker?, pure perl.	no make, no
shell commands, easier to customize, cleaner internals, less cruft
d25159 1
a25159 1
=item Module Writing
d25161 1
a25161 2
How do I keep my $VERSION up to date without resetting it manually?, What's
this F<META.yml> thing and how did it get in my F<MANIFEST>?!
d25163 4
a25166 5
=item XS

How to I prevent "object version X.XX does not match bootstrap parameter
Y.YY" errors?, How do I make two or more XS files coexist in the same
directory?
d25168 1
a25168 3
=back

=item PATCHING
d25172 1
a25172 1
=item SEE ALSO
d25176 1
a25176 1
=head2 ExtUtils::MakeMaker::Tutorial - Writing a module with MakeMaker
d25184 2
d25188 5
a25192 1
=item The Mantra
d25194 1
a25194 1
=item The Layout
d25196 1
a25196 2
Makefile.PL, MANIFEST, lib/, t/, Changes, README, INSTALL, MANIFEST.SKIP,
bin/
d25200 3
a25202 1
=item SEE ALSO
d25206 3
a25208 1
=head2 ExtUtils::MakeMaker::bytes - Version-agnostic bytes.pm
d25212 1
a25212 1
=item SYNOPSIS
d25214 1
a25214 1
=item DESCRIPTION
a25217 2
=head2 ExtUtils::MakeMaker::vmsish - Platform-agnostic vmsish.pm

d25220 2
a25221 1
=item SYNOPSIS
d25223 2
a25224 1
=item DESCRIPTION
a25227 2
=head2 ExtUtils::Manifest - utilities to write and check a MANIFEST file

d25230 1
a25230 1
=item SYNOPSIS
d25232 1
a25232 1
=item DESCRIPTION
d25236 5
a25240 1
=item Functions
d25242 1
a25242 1
mkmanifest
d25246 1
a25246 1
=back
d25248 1
a25248 1
manifind
d25250 1
a25250 1
manicheck
d25252 1
a25252 1
filecheck
d25254 1
a25254 1
fullcheck
d25256 1
a25256 1
skipcheck
d25258 1
a25258 1
maniread
d25260 1
a25260 1
manicopy
d25262 1
a25262 1
maniadd
d25266 8
a25273 1
=item MANIFEST
d25275 1
a25275 1
=item MANIFEST.SKIP
d25277 1
a25277 1
=item EXPORT_OK
d25279 1
a25279 1
=item GLOBAL VARIABLES
d25283 3
d25288 3
a25290 1
=item DIAGNOSTICS
d25292 2
a25293 2
C<Not in MANIFEST:> I<file>, C<Skipping> I<file>, C<No such file:> I<file>,
C<MANIFEST:> I<$!>, C<Added to MANIFEST:> I<file>
d25295 1
a25295 1
=item ENVIRONMENT
d25297 1
a25297 1
B<PERL_MM_MANIFEST_DEBUG>
d25301 1
a25301 1
=item AUTHOR
d25305 2
a25306 1
=head2 ExtUtils::Miniperl, writemain - write the C code for perlmain.c
d25314 3
a25316 1
=item SEE ALSO
d25318 1
a25318 1
=back
d25320 1
a25320 1
=head2 ExtUtils::Mkbootstrap - make a bootstrap file for use by DynaLoader
d25322 1
a25322 1
=over 4
d25324 1
a25324 3
=item SYNOPSIS

=item DESCRIPTION
d25328 1
a25328 2
=head2 ExtUtils::Mksymlists - write linker options files for dynamic
extension
d25336 5
a25340 1
DLBASE, DL_FUNCS, DL_VARS, FILE, FUNCLIST, IMPORTS, NAME
d25344 1
a25344 1
=item REVISION
d25348 1
a25348 1
=head2 ExtUtils::Packlist - manage .packlist files
d25356 1
a25356 1
=item USAGE
d25358 1
a25358 1
=item FUNCTIONS
d25360 2
a25361 1
new(), read(), write(), validate(), packlist_file()
d25363 1
a25363 1
=item EXAMPLE
d25365 1
a25365 1
=item AUTHOR
d25367 1
a25367 3
=back

=head2 ExtUtils::testlib - add blib/* directories to @@INC
d25371 1
a25371 1
=item SYNOPSIS
d25373 1
a25373 1
=item DESCRIPTION
d25377 3
a25379 1
=head2 Fatal - replace functions with equivalents which succeed or die
d25381 1
a25381 1
=over 4
d25383 1
a25383 1
=item SYNOPSIS
d25385 4
a25388 1
=item DESCRIPTION
d25392 2
d25396 2
a25397 1
=head2 Fcntl - load the C Fcntl.h defines
d25405 20
a25424 1
=item NOTE
d25426 1
a25426 1
=item EXPORTED SYMBOLS
d25430 2
a25431 2
=head2 File::Basename - Parse file paths into directory, filename and
suffix.
d25439 1
a25439 1
=back
d25441 1
a25441 1
C<fileparse>
d25443 1
a25443 1
C<basename>
d25445 1
a25445 1
C<dirname>
d25447 1
a25447 1
C<fileparse_set_fstype>
d25449 1
a25449 1
=over 4
d25453 7
d25462 1
a25462 1
=head2 File::CheckTree, validate - run many filetest checks on a tree
d25470 18
a25487 1
=item AUTHOR
d25489 1
a25489 1
=item HISTORY
d25493 7
a25499 1
=head2 File::Compare - Compare files or filehandles
d25501 1
a25501 1
=over 4
d25503 1
a25503 1
=item SYNOPSIS
d25505 1
a25505 1
=item DESCRIPTION
d25507 1
a25507 1
=item RETURN
d25513 2
a25514 1
=head2 File::Copy - Copy files or filehandles
d25518 2
d25524 2
d25528 3
a25530 1
=item Special behaviour if C<syscopy> is defined (OS/2, VMS and Win32)
d25532 1
a25532 1
rmscopy($from,$to[,$date_flag])
d25534 1
a25534 1
=back
d25536 1
a25536 1
=item RETURN
d25538 1
a25538 1
=item NOTES
d25540 1
a25540 1
=item AUTHOR
d25544 1
a25544 1
=head2 File::DosGlob - DOS like globbing and then some
d25548 1
a25548 1
=item SYNOPSIS
d25550 1
a25550 1
=item DESCRIPTION
d25552 1
a25552 3
=item NOTES

=item EXPORTS (by request only)
d25554 1
a25554 1
=item BUGS
d25556 1
a25556 1
=item AUTHOR
d25558 1
a25558 1
=item HISTORY
d25560 1
a25560 1
=item SEE ALSO
d25564 1
a25564 1
=head2 File::Find - Traverse a directory tree.
d25572 1
a25572 1
B<find>, B<finddepth>
d25576 3
a25578 1
=item %options
d25580 1
a25580 3
C<wanted>, C<bydepth>, C<preprocess>, C<postprocess>, C<follow>,
C<follow_fast>, C<follow_skip>, C<dangling_symlinks>, C<no_chdir>,
C<untaint>, C<untaint_pattern>, C<untaint_skip>
d25582 1
a25582 1
=item The wanted function
d25584 1
a25584 3
C<$File::Find::dir> is the current directory name,, C<$_> is the current
filename within that directory, C<$File::Find::name> is the complete
pathname to the file
d25586 1
a25586 1
=back
d25588 1
a25588 1
=item WARNINGS
d25590 1
a25590 1
=item CAVEAT
d25592 1
a25592 1
$dont_use_nlink, symlinks
d25594 1
a25594 1
=item NOTES
d25596 1
a25596 1
=item BUGS AND CAVEATS
d25598 1
a25598 1
=item HISTORY
d25602 1
a25602 1
=head2 File::Glob - Perl extension for BSD glob routine
d25610 2
d25614 3
a25616 1
=item META CHARACTERS
d25618 1
a25618 1
=item POSIX FLAGS
d25620 2
a25621 3
C<GLOB_ERR>, C<GLOB_LIMIT>, C<GLOB_MARK>, C<GLOB_NOCASE>, C<GLOB_NOCHECK>,
C<GLOB_NOSORT>, C<GLOB_BRACE>, C<GLOB_NOMAGIC>, C<GLOB_QUOTE>,
C<GLOB_TILDE>, C<GLOB_CSH>, C<GLOB_ALPHASORT>
d25623 1
a25623 1
=back
d25625 1
a25625 1
=item DIAGNOSTICS
d25627 1
a25627 1
C<GLOB_NOSPACE>, C<GLOB_ABEND>
d25629 1
a25629 1
=item NOTES
d25633 3
d25638 2
d25642 1
a25642 1
=head2 File::Path - create or remove directory trees
d25650 6
a25655 1
=item DIAGNOSTICS
d25657 1
a25657 1
=item AUTHORS
d25661 3
a25663 1
=head2 File::Spec - portably perform operations on file names
d25667 1
a25667 1
=item SYNOPSIS
d25669 1
a25669 1
=item DESCRIPTION
d25671 1
a25671 1
=item METHODS
d25673 1
a25673 3
canonpath, catdir, catfile, curdir, devnull, rootdir, tmpdir, updir,
no_upwards, case_tolerant, file_name_is_absolute, path, join, splitpath,
splitdir, catpath(), abs2rel, rel2abs()
d25675 1
a25675 3
=item SEE ALSO

=item AUTHOR
d25677 1
a25677 1
=item COPYRIGHT
a25680 2
=head2 File::Spec::Cygwin - methods for Cygwin file specs

d25683 1
a25683 1
=item SYNOPSIS
d25685 1
a25685 1
=item DESCRIPTION
d25689 1
a25689 1
canonpath
d25691 1
a25691 1
file_name_is_absolute
d25693 1
a25693 1
tmpdir (override)
d25697 1
a25697 1
=item COPYRIGHT
a25700 2
=head2 File::Spec::Epoc - methods for Epoc file specs

d25703 1
a25703 3
=item SYNOPSIS

=item DESCRIPTION
d25707 1
a25707 1
canonpath()
d25709 1
a25709 1
=over 4
d25713 2
a25716 2
=item SEE ALSO

d25719 1
a25719 1
=head2 File::Spec::Functions - portably perform operations on file names
d25727 1
a25727 1
=over 4
d25729 1
a25729 1
=item Exports
d25731 1
a25731 1
=back
a25734 2
=item SEE ALSO

d25737 1
a25737 1
=head2 File::Spec::Mac - File::Spec for Mac OS (Classic)
d25745 5
a25749 1
=item METHODS
d25751 1
a25751 1
canonpath
d25755 3
a25757 1
catdir()
d25759 1
a25759 1
catfile
d25761 1
a25761 1
curdir
d25763 1
a25763 1
devnull
d25765 1
a25765 1
rootdir
d25767 1
a25767 1
tmpdir
d25769 1
a25769 1
updir
d25771 1
a25771 1
file_name_is_absolute
d25773 1
a25773 1
path
d25775 1
a25775 1
splitpath
d25777 1
a25777 1
splitdir
d25779 1
a25779 1
catpath
d25781 1
a25781 1
abs2rel
d25783 1
a25783 1
rel2abs
d25787 3
a25789 1
=item AUTHORS
d25791 1
a25791 1
=item COPYRIGHT
d25793 1
a25793 1
=item SEE ALSO
d25797 1
a25797 1
=head2 File::Spec::OS2 - methods for OS/2 file specs
d25799 1
a25799 1
=over 4
d25801 1
a25801 1
=item SYNOPSIS
d25803 1
a25803 1
=item DESCRIPTION
d25805 1
a25805 1
tmpdir, splitpath
d25811 1
a25811 2
=head2 File::Spec::Unix - File::Spec for Unix, base for other File::Spec
modules
d25819 1
a25819 1
=item METHODS
d25821 1
a25821 1
canonpath()
d25823 1
a25823 1
=back
d25825 1
a25825 1
catdir()
d25827 1
a25827 1
catfile
d25829 1
a25829 1
curdir
d25831 1
a25831 1
devnull
d25833 1
a25833 1
rootdir
d25835 1
a25835 1
tmpdir
d25837 1
a25837 1
updir
d25839 1
a25839 1
no_upwards
d25841 1
a25841 1
case_tolerant
d25843 1
a25843 1
file_name_is_absolute
d25845 1
a25845 1
path
d25847 1
a25847 1
join
d25849 1
a25849 1
splitpath
d25851 1
a25851 5
splitdir

catpath()

abs2rel
d25853 1
a25853 1
rel2abs()
d25857 1
a25857 1
=item COPYRIGHT
d25859 1
a25859 1
=item SEE ALSO
d25861 1
a25861 3
=back

=head2 File::Spec::VMS - methods for VMS file specs
d25865 1
a25865 1
=item SYNOPSIS
d25867 1
a25867 1
=item DESCRIPTION
d25869 1
a25869 1
canonpath (override)
d25873 1
a25873 1
catdir (override)
d25875 1
a25875 1
catfile (override)
d25877 1
a25877 1
curdir (override)
d25879 1
a25879 1
devnull (override)
d25881 1
a25881 1
rootdir (override)
d25883 1
a25883 1
tmpdir (override)
d25885 1
a25885 1
updir (override)
d25887 1
a25887 1
case_tolerant (override)
d25889 1
a25889 1
path (override)
d25891 1
a25891 1
file_name_is_absolute (override)
d25893 1
a25893 1
splitpath (override)
d25895 1
a25895 1
splitdir (override)
d25897 1
a25897 1
catpath (override)
d25899 1
a25899 1
abs2rel (override)
d25901 1
a25901 1
rel2abs (override)
d25905 1
a25905 1
=item COPYRIGHT
d25907 1
a25907 1
=item SEE ALSO
d25911 1
a25911 1
=head2 File::Spec::Win32 - methods for Win32 file specs
d25919 1
a25919 1
devnull
d25921 1
a25921 17
=back

tmpdir

catfile

canonpath

splitpath

splitdir

catpath

=over 4

=item Note For File::Spec::Win32 Maintainers
d25923 2
a25924 1
=back
d25926 1
a25926 1
=over 4
d25934 2
a25935 1
=head2 File::Temp - return name and handle of a temporary file safely
a25938 2
=item PORTABILITY

d25943 2
a25944 1
=back
d25946 1
a25946 1
=over 4
d25948 1
a25948 1
=item OBJECT-ORIENTED INTERFACE
d25950 1
a25950 1
B<new>
d25952 2
a25953 1
=back
d25955 1
a25955 1
B<filename>
d25957 1
a25957 1
B<unlink_on_destroy>
d25959 1
a25959 1
B<DESTROY>
d25961 2
a25962 1
=over 4
d25964 1
a25964 1
=item FUNCTIONS
d25966 1
a25966 1
B<tempfile>
d25970 1
a25970 1
B<tempdir>
d25974 1
a25974 1
=item MKTEMP FUNCTIONS
d25976 1
a25976 1
B<mkstemp>
d25978 1
a25978 1
=back
d25980 1
a25980 1
B<mkstemps>
d25982 1
a25982 1
B<mkdtemp>
d25984 1
a25984 1
B<mktemp>
d25986 1
a25986 1
=over 4
d25988 1
a25988 1
=item POSIX FUNCTIONS
d25990 2
a25991 1
B<tmpnam>
d25995 1
a25995 1
B<tmpfile>
d25999 1
a25999 1
=item ADDITIONAL FUNCTIONS
d26001 1
a26001 7
B<tempnam>

=back

=over 4

=item UTILITY FUNCTIONS
d26003 1
a26003 1
B<unlink0>
d26005 1
a26005 1
=back
d26007 1
a26007 1
B<cmpstat>
d26009 1
a26009 1
B<unlink1>
d26011 1
a26011 1
B<cleanup>
d26013 1
a26013 1
=over 4
d26015 1
a26015 1
=item PACKAGE VARIABLES
d26017 1
a26017 1
B<safe_level>, STANDARD, MEDIUM, HIGH
d26021 1
a26021 3
TopSystemUID

B<$KEEP_ALL>, B<$DEBUG>
d26025 1
a26025 1
=item WARNING
d26027 1
a26027 1
=over 4
d26029 1
a26029 1
=item Temporary files and NFS
d26031 1
a26031 1
=item Forking
d26033 1
a26033 1
=item BINMODE
d26035 1
a26035 1
=back
d26037 2
a26038 1
=item HISTORY
d26042 3
a26044 1
=item AUTHOR
d26048 1
a26048 1
=head2 File::stat - by-name interface to Perl's built-in stat() functions
d26056 1
a26056 1
=item BUGS
d26058 1
a26058 1
=item NOTE
d26060 1
a26060 1
=item AUTHOR
d26062 1
a26062 1
=back
d26064 1
a26064 1
=head2 FileCache - keep more files open than the system permits
d26066 1
a26066 1
=over 4
d26068 1
a26068 1
=item SYNOPSIS
d26070 1
a26070 1
=item DESCRIPTION
d26072 1
a26072 1
cacheout EXPR, cacheout MODE, EXPR
d26074 1
a26074 1
=item CAVEATS
d26076 1
a26076 1
=item BUGS
d26078 1
a26078 1
=back
d26080 1
a26080 1
=head2 FileHandle - supply object methods for filehandles
d26082 1
a26082 1
=over 4
d26084 1
a26084 1
=item SYNOPSIS
d26086 1
a26086 1
=item DESCRIPTION
d26088 1
a26088 1
$fh->print, $fh->printf, $fh->getline, $fh->getlines
d26090 2
a26091 1
=item SEE ALSO
d26093 1
a26093 1
=back
d26095 1
a26095 1
=head2 Filter::Simple - Simplified source filtering
d26097 1
a26097 1
=over 4
d26099 1
a26099 1
=item SYNOPSIS
d26101 1
a26101 1
=item DESCRIPTION
d26103 1
a26103 1
=over 4
d26105 1
a26105 1
=item The Problem
d26107 1
a26107 1
=item A Solution
d26109 1
a26109 1
=item Disabling or changing <no> behaviour
d26111 1
a26111 1
=item All-in-one interface
d26113 1
a26113 1
=item Filtering only specific components of source code
d26115 1
a26115 3
C<"code">, C<"code_no_comments">, C<"executable">,
C<"executable_no_comments">, C<"quotelike">, C<"string">, C<"regex">,
C<"all">
d26117 1
a26117 1
=item Filtering only the code parts of source code
d26119 1
a26119 4
Most source code ceases to be grammatically correct when it is broken up
into the pieces between string literals and regexes. So the C<'code'>
and C<'code_no_comments'> component filter behave slightly differently
from the other partial filters described in the previous section.
d26121 1
a26121 1
=item Using Filter::Simple with an explicit C<import> subroutine
d26123 1
a26123 1
=item Using Filter::Simple and Exporter together
d26125 1
a26125 1
=item How it works
d26127 1
a26127 1
=back
d26129 1
a26129 1
=item AUTHOR
d26131 1
a26131 1
=item COPYRIGHT
d26133 1
a26133 1
=back
d26135 1
a26135 1
=head2 Filter::Util::Call - Perl Source Filter Utility Module
d26137 1
a26137 1
=over 4
d26139 1
a26139 1
=item SYNOPSIS
d26141 1
a26141 1
=item DESCRIPTION
d26143 1
a26143 1
=over 4
d26145 1
a26145 1
=item B<use Filter::Util::Call>
d26147 1
a26147 1
=item B<import()>
d26149 1
a26149 1
=item B<filter() and anonymous sub>
d26151 1
a26151 1
B<$_>, B<$status>, B<filter_read> and B<filter_read_exact>, B<filter_del>
d26153 1
a26153 1
=back
d26155 1
a26155 1
=item EXAMPLES
d26157 1
a26157 1
=over 4
d26159 1
a26159 1
=item Example 1: A simple filter.
d26161 1
a26161 1
=item Example 2: Using the context
d26163 1
a26163 1
=item Example 3: Using the context within the filter
d26165 1
a26165 1
=item Example 4: Using filter_del
d26167 1
a26167 1
=back
d26169 1
a26169 1
=item Filter::Simple
d26171 1
a26171 1
=item AUTHOR
d26173 1
a26173 1
=item DATE
d26175 1
a26175 1
=back
d26177 1
a26177 1
=head2 FindBin - Locate directory of original perl script
d26179 1
a26179 1
=over 4
d26181 1
a26181 1
=item SYNOPSIS
d26183 1
a26183 1
=item DESCRIPTION
d26185 1
a26185 1
=item EXPORTABLE VARIABLES
d26187 1
a26187 1
=item KNOWN ISSUES
d26189 1
a26189 1
=item KNOWN BUGS
d26191 1
a26191 1
=item AUTHORS
d26193 1
a26193 1
=item COPYRIGHT
d26195 1
a26195 3
=back

=head2 GDBM_File - Perl5 access to the gdbm library.
d26197 1
a26197 1
=over 4
d26199 1
a26199 1
=item SYNOPSIS
d26201 1
a26201 1
=item DESCRIPTION
d26203 1
a26203 1
=item AVAILABILITY
d26205 1
a26205 1
=item BUGS
d26207 1
a26207 1
=item SEE ALSO
d26211 1
a26211 1
=head2 Getopt::Long - Extended processing of command line options
d26215 14
a26228 1
=item SYNOPSIS
d26230 1
a26230 1
=item DESCRIPTION
d26232 1
a26232 1
=item Command Line Options, an Introduction
d26234 1
a26234 1
=item Getting Started with Getopt::Long
d26238 1
a26238 1
=item Simple options
d26240 1
a26240 1
=item A little bit less simple options
d26242 1
a26242 1
=item Mixing command line option with other arguments
d26244 1
a26244 1
=item Options with values
d26246 1
a26246 1
=item Options with multiple values
d26248 1
a26248 1
=item Options with hash values
d26250 1
a26250 1
=item User-defined subroutines to handle options
d26252 1
a26252 1
=item Options with multiple names
d26254 1
a26254 1
=item Case and abbreviations
d26256 1
a26256 1
=item Summary of Option Specifications
d26258 1
a26258 2
!, +, s, i, o, f, : I<type> [ I<desttype> ], : I<number> [ I<desttype> ], :
+ [ I<desttype> ]
d26262 3
a26264 1
=item Advanced Possibilities
d26268 5
a26272 1
=item Object oriented interface
d26274 1
a26274 1
=item Thread Safety
d26276 1
a26276 1
=item Documentation and help texts
d26278 3
a26280 1
=item Storing option values in a hash
d26282 1
a26282 1
=item Bundling
d26284 1
a26284 1
=item The lonesome dash
d26286 1
a26286 1
=item Argument callback
d26290 3
a26292 1
=item Configuring Getopt::Long
d26294 1
a26294 6
default, posix_default, auto_abbrev, getopt_compat, gnu_compat, gnu_getopt,
require_order, permute, bundling (default: disabled), bundling_override
(default: disabled), ignore_case  (default: enabled), ignore_case_always
(default: disabled), auto_version (default:disabled), auto_help
(default:disabled), pass_through (default: disabled), prefix,
prefix_pattern, long_prefix_pattern, debug (default: disabled)
d26296 1
a26296 1
=item Exportable Methods
d26298 1
a26298 1
VersionMessage, C<-message>, C<-msg>, C<-exitval>, C<-output>, HelpMessage
d26300 1
a26300 1
=item Return values and Errors
d26302 1
a26302 1
=item Legacy
d26304 1
a26304 1
=over 4
d26306 3
a26308 1
=item Default destinations
d26310 1
a26310 1
=item Alternative option starters
d26312 1
a26312 1
=item Configuration variables
d26316 1
a26316 1
=item Trouble Shooting
d26320 1
a26320 2
=item GetOptions does not return a false result when an option is not
supplied
d26322 1
a26322 1
=item GetOptions does not split the command line correctly
d26324 1
a26324 1
=item Undefined subroutine &main::GetOptions called
d26326 1
a26326 1
=item How do I put a "-?" option into a Getopt::Long?
d26328 1
a26328 1
=back
d26330 1
a26330 1
=item AUTHOR
d26332 1
a26332 1
=item COPYRIGHT AND DISCLAIMER
d26336 1
a26336 2
=head2 Getopt::Std, getopt, getopts - Process single-character switches
with switch clustering
d26338 3
a26340 1
=over 4
d26342 1
a26342 1
=item SYNOPSIS
d26344 1
a26344 3
=item DESCRIPTION

=item C<--help> and C<--version>
d26348 2
a26349 1
=head2 Hash::Util - A selection of general-utility hash subroutines
d26357 1
a26357 1
=over 4
d26359 1
a26359 1
=item Restricted hashes
d26361 1
a26361 1
lock_keys, unlock_keys
d26363 3
a26365 1
=back
d26367 1
a26367 1
=back
d26369 1
a26369 1
lock_value, unlock_value
d26371 1
a26371 1
B<lock_hash>, B<unlock_hash>
d26373 1
a26373 1
B<hash_seed>
d26377 3
a26379 1
=item CAVEATS
d26381 1
a26381 1
=item AUTHOR
d26383 1
a26383 1
=item SEE ALSO
d26387 1
a26387 2
=head2 I18N::Collate - compare 8-bit scalar data according to the current
locale
d26391 5
a26395 1
=item SYNOPSIS
d26397 1
a26397 1
=item DESCRIPTION
d26399 1
a26399 1
=back
d26401 1
a26401 2
=head2 I18N::LangTags - functions for dealing with RFC3066-style language
tags
d26403 1
a26403 1
=over 4
d26405 1
a26405 1
=item SYNOPSIS
d26407 1
a26407 1
=item DESCRIPTION
d26409 1
a26409 1
=back
d26411 1
a26411 1
the function is_language_tag($lang1)
d26413 1
a26413 1
the function extract_language_tags($whatever)
d26415 1
a26415 1
the function same_language_tag($lang1, $lang2)
d26417 1
a26417 1
the function similarity_language_tag($lang1, $lang2)
d26419 1
a26419 1
the function is_dialect_of($lang1, $lang2)
d26421 1
a26421 1
the function super_languages($lang1)
d26423 1
a26423 1
the function locale2language_tag($locale_identifier)
d26425 1
a26425 1
the function encode_language_tag($lang1)
d26427 1
a26427 1
the function alternate_language_tags($lang1)
d26429 1
a26429 1
the function @@langs = panic_languages(@@accept_languages)
d26431 1
a26431 2
the function implicate_supers( ...languages... ), the function
implicate_supers_strictly( ...languages... )
d26433 1
a26433 1
=over 4
d26435 1
a26435 1
=item ABOUT LOWERCASING
d26437 1
a26437 1
=item ABOUT UNICODE PLAINTEXT LANGUAGE TAGS
d26439 1
a26439 1
=item SEE ALSO
d26441 1
a26441 1
=item COPYRIGHT
d26443 1
a26443 1
=item AUTHOR
d26445 1
a26445 1
=back
d26447 1
a26447 1
=head2 I18N::LangTags::Detect - detect the user's language preferences
d26449 1
a26449 1
=over 4
d26451 1
a26451 1
=item SYNOPSIS
d26453 1
a26453 1
=item DESCRIPTION
d26455 1
a26455 1
=item FUNCTIONS
d26457 1
a26457 1
=item ENVIRONMENT
d26459 1
a26459 1
=item SEE ALSO
d26461 1
a26461 1
=item COPYRIGHT
d26463 1
a26463 1
=item AUTHOR
d26465 1
a26465 1
=back
d26467 1
a26467 1
=head2 I18N::LangTags::List -- tags and names for human languages
d26469 1
a26469 1
=over 4
d26471 1
a26471 1
=item SYNOPSIS
d26473 1
a26473 1
=item DESCRIPTION
d26475 1
a26475 1
=item ABOUT LANGUAGE TAGS
d26477 3
a26479 1
=item LIST OF LANGUAGES
d26481 1
a26481 127
{ab} : Abkhazian, {ace} : Achinese, {ach} : Acoli, {ada} : Adangme, {ady} :
Adyghe, {aa} : Afar, {afh} : Afrihili, {af} : Afrikaans, [{afa} :
Afro-Asiatic (Other)], {ak} : Akan, {akk} : Akkadian, {sq} : Albanian,
{ale} : Aleut, [{alg} : Algonquian languages], [{tut} : Altaic (Other)],
{am} : Amharic, {i-ami} : Ami, [{apa} : Apache languages], {ar} : Arabic,
{arc} : Aramaic, {arp} : Arapaho, {arn} : Araucanian, {arw} : Arawak, {hy}
: Armenian, {an} : Aragonese, [{art} : Artificial (Other)], {ast} :
Asturian, {as} : Assamese, [{ath} : Athapascan languages], [{aus} :
Australian languages], [{map} : Austronesian (Other)], {av} : Avaric, {ae}
: Avestan, {awa} : Awadhi, {ay} : Aymara, {az} : Azerbaijani, {ban} :
Balinese, [{bat} : Baltic (Other)], {bal} : Baluchi, {bm} : Bambara, [{bai}
: Bamileke languages], {bad} : Banda, [{bnt} : Bantu (Other)], {bas} :
Basa, {ba} : Bashkir, {eu} : Basque, {btk} : Batak (Indonesia), {bej} :
Beja, {be} : Belarusian, {bem} : Bemba, {bn} : Bengali, [{ber} : Berber
(Other)], {bho} : Bhojpuri, {bh} : Bihari, {bik} : Bikol, {bin} : Bini,
{bi} : Bislama, {bs} : Bosnian, {bra} : Braj, {br} : Breton, {bug} :
Buginese, {bg} : Bulgarian, {i-bnn} : Bunun, {bua} : Buriat, {my} :
Burmese, {cad} : Caddo, {car} : Carib, {ca} : Catalan, [{cau} : Caucasian
(Other)], {ceb} : Cebuano, [{cel} : Celtic (Other)], [{cai} : Central
American Indian (Other)], {chg} : Chagatai, [{cmc} : Chamic languages],
{ch} : Chamorro, {ce} : Chechen, {chr} : Cherokee, {chy} : Cheyenne, {chb}
: Chibcha, {ny} : Chichewa, {zh} : Chinese, {chn} : Chinook Jargon, {chp} :
Chipewyan, {cho} : Choctaw, {cu} : Church Slavic, {chk} : Chuukese, {cv} :
Chuvash, {cop} : Coptic, {kw} : Cornish, {co} : Corsican, {cr} : Cree,
{mus} : Creek, [{cpe} : English-based Creoles and pidgins (Other)], [{cpf}
: French-based Creoles and pidgins (Other)], [{cpp} : Portuguese-based
Creoles and pidgins (Other)], [{crp} : Creoles and pidgins (Other)], {hr} :
Croatian, [{cus} : Cushitic (Other)], {cs} : Czech, {dak} : Dakota, {da} :
Danish, {dar} : Dargwa, {day} : Dayak, {i-default} : Default (Fallthru)
Language, {del} : Delaware, {din} : Dinka, {dv} : Divehi, {doi} : Dogri,
{dgr} : Dogrib, [{dra} : Dravidian (Other)], {dua} : Duala, {nl} : Dutch,
{dum} : Middle Dutch (ca.1050-1350), {dyu} : Dyula, {dz} : Dzongkha, {efi}
: Efik, {egy} : Ancient Egyptian, {eka} : Ekajuk, {elx} : Elamite, {en} :
English, {enm} : Old English (1100-1500), {ang} : Old English
(ca.450-1100), {i-enochian} : Enochian (Artificial), {myv} : Erzya, {eo} :
Esperanto, {et} : Estonian, {ee} : Ewe, {ewo} : Ewondo, {fan} : Fang, {fat}
: Fanti, {fo} : Faroese, {fj} : Fijian, {fi} : Finnish, [{fiu} :
Finno-Ugrian (Other)], {fon} : Fon, {fr} : French, {frm} : Middle French
(ca.1400-1600), {fro} : Old French (842-ca.1400), {fy} : Frisian, {fur} :
Friulian, {ff} : Fulah, {gaa} : Ga, {gd} : Scots Gaelic, {gl} : Gallegan,
{lg} : Ganda, {gay} : Gayo, {gba} : Gbaya, {gez} : Geez, {ka} : Georgian,
{de} : German, {gmh} : Middle High German (ca.1050-1500), {goh} : Old High
German (ca.750-1050), [{gem} : Germanic (Other)], {gil} : Gilbertese, {gon}
: Gondi, {gor} : Gorontalo, {got} : Gothic, {grb} : Grebo, {grc} : Ancient
Greek, {el} : Modern Greek, {gn} : Guarani, {gu} : Gujarati, {gwi} :
Gwich'in, {hai} : Haida, {ht} : Haitian, {ha} : Hausa, {haw} : Hawaiian,
{he} : Hebrew, {hz} : Herero, {hil} : Hiligaynon, {him} : Himachali, {hi} :
Hindi, {ho} : Hiri Motu, {hit} : Hittite, {hmn} : Hmong, {hu} : Hungarian,
{hup} : Hupa, {iba} : Iban, {is} : Icelandic, {io} : Ido, {ig} : Igbo,
{ijo} : Ijo, {ilo} : Iloko, [{inc} : Indic (Other)], [{ine} : Indo-European
(Other)], {id} : Indonesian, {inh} : Ingush, {ia} : Interlingua
(International Auxiliary Language Association), {ie} : Interlingue, {iu} :
Inuktitut, {ik} : Inupiaq, [{ira} : Iranian (Other)], {ga} : Irish, {mga} :
Middle Irish (900-1200), {sga} : Old Irish (to 900), [{iro} : Iroquoian
languages], {it} : Italian, {ja} : Japanese, {jv} : Javanese, {jrb} :
Judeo-Arabic, {jpr} : Judeo-Persian, {kbd} : Kabardian, {kab} : Kabyle,
{kac} : Kachin, {kl} : Kalaallisut, {xal} : Kalmyk, {kam} : Kamba, {kn} :
Kannada, {kr} : Kanuri, {krc} : Karachay-Balkar, {kaa} : Kara-Kalpak, {kar}
: Karen, {ks} : Kashmiri, {csb} : Kashubian, {kaw} : Kawi, {kk} : Kazakh,
{kha} : Khasi, {km} : Khmer, [{khi} : Khoisan (Other)], {kho} : Khotanese,
{ki} : Kikuyu, {kmb} : Kimbundu, {rw} : Kinyarwanda, {ky} : Kirghiz,
{i-klingon} : Klingon, {kv} : Komi, {kg} : Kongo, {kok} : Konkani, {ko} :
Korean, {kos} : Kosraean, {kpe} : Kpelle, {kro} : Kru, {kj} : Kuanyama,
{kum} : Kumyk, {ku} : Kurdish, {kru} : Kurukh, {kut} : Kutenai, {lad} :
Ladino, {lah} : Lahnda, {lam} : Lamba, {lo} : Lao, {la} : Latin, {lv} :
Latvian, {lb} : Letzeburgesch, {lez} : Lezghian, {li} : Limburgish, {ln} :
Lingala, {lt} : Lithuanian, {nds} : Low German, {art-lojban} : Lojban
(Artificial), {loz} : Lozi, {lu} : Luba-Katanga, {lua} : Luba-Lulua, {lui}
: Luiseno, {lun} : Lunda, {luo} : Luo (Kenya and Tanzania), {lus} : Lushai,
{mk} : Macedonian, {mad} : Madurese, {mag} : Magahi, {mai} : Maithili,
{mak} : Makasar, {mg} : Malagasy, {ms} : Malay, {ml} : Malayalam, {mt} :
Maltese, {mnc} : Manchu, {mdr} : Mandar, {man} : Mandingo, {mni} :
Manipuri, [{mno} : Manobo languages], {gv} : Manx, {mi} : Maori, {mr} :
Marathi, {chm} : Mari, {mh} : Marshall, {mwr} : Marwari, {mas} : Masai,
[{myn} : Mayan languages], {men} : Mende, {mic} : Micmac, {min} :
Minangkabau, {i-mingo} : Mingo, [{mis} : Miscellaneous languages], {moh} :
Mohawk, {mdf} : Moksha, {mo} : Moldavian, [{mkh} : Mon-Khmer (Other)],
{lol} : Mongo, {mn} : Mongolian, {mos} : Mossi, [{mul} : Multiple
languages], [{mun} : Munda languages], {nah} : Nahuatl, {nap} : Neapolitan,
{na} : Nauru, {nv} : Navajo, {nd} : North Ndebele, {nr} : South Ndebele,
{ng} : Ndonga, {ne} : Nepali, {new} : Newari, {nia} : Nias, [{nic} :
Niger-Kordofanian (Other)], [{ssa} : Nilo-Saharan (Other)], {niu} : Niuean,
{nog} : Nogai, {non} : Old Norse, [{nai} : North American Indian], {no} :
Norwegian, {nb} : Norwegian Bokmal, {nn} : Norwegian Nynorsk, [{nub} :
Nubian languages], {nym} : Nyamwezi, {nyn} : Nyankole, {nyo} : Nyoro, {nzi}
: Nzima, {oc} : Occitan (post 1500), {oj} : Ojibwa, {or} : Oriya, {om} :
Oromo, {osa} : Osage, {os} : Ossetian; Ossetic, [{oto} : Otomian
languages], {pal} : Pahlavi, {i-pwn} : Paiwan, {pau} : Palauan, {pi} :
Pali, {pam} : Pampanga, {pag} : Pangasinan, {pa} : Panjabi, {pap} :
Papiamento, [{paa} : Papuan (Other)], {fa} : Persian, {peo} : Old Persian
(ca.600-400 B.C.), [{phi} : Philippine (Other)], {phn} : Phoenician, {pon}
: Pohnpeian, {pl} : Polish, {pt} : Portuguese, [{pra} : Prakrit languages],
{pro} : Old Provencal (to 1500), {ps} : Pushto, {qu} : Quechua, {rm} :
Raeto-Romance, {raj} : Rajasthani, {rap} : Rapanui, {rar} : Rarotongan,
[{qaa - qtz} : Reserved for local use.], [{roa} : Romance (Other)], {ro} :
Romanian, {rom} : Romany, {rn} : Rundi, {ru} : Russian, [{sal} : Salishan
languages], {sam} : Samaritan Aramaic, {se} : Northern Sami, {sma} :
Southern Sami, {smn} : Inari Sami, {smj} : Lule Sami, {sms} : Skolt Sami,
[{smi} : Sami languages (Other)], {sm} : Samoan, {sad} : Sandawe, {sg} :
Sango, {sa} : Sanskrit, {sat} : Santali, {sc} : Sardinian, {sas} : Sasak,
{sco} : Scots, {sel} : Selkup, [{sem} : Semitic (Other)], {sr} : Serbian,
{srr} : Serer, {shn} : Shan, {sn} : Shona, {sid} : Sidamo, {sgn-...} : Sign
Languages, {bla} : Siksika, {sd} : Sindhi, {si} : Sinhalese, [{sit} :
Sino-Tibetan (Other)], [{sio} : Siouan languages], {den} : Slave
(Athapascan), [{sla} : Slavic (Other)], {sk} : Slovak, {sl} : Slovenian,
{sog} : Sogdian, {so} : Somali, {son} : Songhai, {snk} : Soninke, {wen} :
Sorbian languages, {nso} : Northern Sotho, {st} : Southern Sotho, [{sai} :
South American Indian (Other)], {es} : Spanish, {suk} : Sukuma, {sux} :
Sumerian, {su} : Sundanese, {sus} : Susu, {sw} : Swahili, {ss} : Swati,
{sv} : Swedish, {syr} : Syriac, {tl} : Tagalog, {ty} : Tahitian, [{tai} :
Tai (Other)], {tg} : Tajik, {tmh} : Tamashek, {ta} : Tamil, {i-tao} : Tao,
{tt} : Tatar, {i-tay} : Tayal, {te} : Telugu, {ter} : Tereno, {tet} :
Tetum, {th} : Thai, {bo} : Tibetan, {tig} : Tigre, {ti} : Tigrinya, {tem} :
Timne, {tiv} : Tiv, {tli} : Tlingit, {tpi} : Tok Pisin, {tkl} : Tokelau,
{tog} : Tonga (Nyasa), {to} : Tonga (Tonga Islands), {tsi} : Tsimshian,
{ts} : Tsonga, {i-tsu} : Tsou, {tn} : Tswana, {tum} : Tumbuka, [{tup} :
Tupi languages], {tr} : Turkish, {ota} : Ottoman Turkish (1500-1928), {crh}
: Crimean Turkish, {tk} : Turkmen, {tvl} : Tuvalu, {tyv} : Tuvinian, {tw} :
Twi, {udm} : Udmurt, {uga} : Ugaritic, {ug} : Uighur, {uk} : Ukrainian,
{umb} : Umbundu, {und} : Undetermined, {ur} : Urdu, {uz} : Uzbek, {vai} :
Vai, {ve} : Venda, {vi} : Vietnamese, {vo} : Volapuk, {vot} : Votic, [{wak}
: Wakashan languages], {wa} : Walloon, {wal} : Walamo, {war} : Waray, {was}
: Washo, {cy} : Welsh, {wo} : Wolof, {x-...} : Unregistered (Semi-Private
Use), {xh} : Xhosa, {sah} : Yakut, {yao} : Yao, {yap} : Yapese, {ii} :
Sichuan Yi, {yi} : Yiddish, {yo} : Yoruba, [{ypk} : Yupik languages], {znd}
: Zande, [{zap} : Zapotec], {zen} : Zenaga, {za} : Zhuang, {zu} : Zulu,
{zun} : Zuni
d26485 1
a26485 3
=item COPYRIGHT AND DISCLAIMER

=item AUTHOR
d26489 2
a26490 1
=head2 I18N::Langinfo - query locale information
d26498 14
d26514 1
a26514 1
=item EXPORT
d26518 3
a26520 1
=item SEE ALSO
d26522 1
a26522 1
=item AUTHOR
d26524 1
a26524 1
=item COPYRIGHT AND LICENSE
d26528 1
a26528 1
=head2 IO - load various IO modules
d26536 27
a26562 1
=item DEPRECATED
d26566 1
a26566 1
=head2 IO::Dir - supply object methods for directory handles
d26570 15
a26584 1
=item SYNOPSIS
d26586 1
a26586 1
=item DESCRIPTION
d26588 1
a26588 2
new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, 'IO::Dir', DIRNAME [, OPTIONS ]
d26590 1
a26590 1
=item SEE ALSO
d26592 1
a26592 1
=item AUTHOR
d26594 1
a26594 1
=item COPYRIGHT
d26598 1
a26598 1
=head2 IO::File - supply object methods for filehandles
d26606 1
a26606 1
=item CONSTRUCTOR
d26608 1
a26608 1
new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile
d26610 1
a26610 1
=item METHODS
d26612 1
a26612 2
open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS ), binmode(
[LAYER] )
d26614 1
a26614 1
=item NOTE
d26616 1
a26616 1
=item SEE ALSO
d26618 1
a26618 1
=item HISTORY
d26622 1
a26622 1
=head2 IO::Handle - supply object methods for I/O handles
d26626 11
a26636 1
=item SYNOPSIS
d26638 1
a26638 1
=item DESCRIPTION
d26640 1
a26640 1
=item CONSTRUCTOR
d26642 1
a26642 1
new (), new_from_fd ( FD, MODE )
d26644 1
a26644 1
=item METHODS
d26646 1
a26646 4
$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint
d26648 1
a26648 1
=item NOTE
d26650 2
a26651 1
=item SEE ALSO
d26653 1
a26653 1
=item BUGS
d26655 1
a26655 1
=item HISTORY
d26659 2
a26660 1
=head2 IO::Pipe - supply object methods for pipes
d26668 3
a26670 1
=item CONSTRUCTOR
d26672 1
a26672 1
new ( [READER, WRITER] )
d26674 1
a26674 1
=item METHODS
d26676 1
a26676 1
reader ([ARGS]), writer ([ARGS]), handles ()
d26680 5
a26684 1
=item AUTHOR
d26686 1
a26686 1
=item COPYRIGHT
d26690 1
a26690 1
=head2 IO::Poll - Object interface to system poll call
d26694 8
a26701 1
=item SYNOPSIS
d26705 8
a26712 1
=item METHODS
d26714 1
a26714 2
mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )
d26716 1
a26716 1
=item SEE ALSO
d26718 1
a26718 1
=item AUTHOR
d26720 1
a26720 1
=item COPYRIGHT
d26724 1
a26724 1
=head2 IO::Seekable - supply seek based methods for I/O objects
d26732 40
a26771 3
$io->getpos, $io->setpos, $io->seek ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=2 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell
d26775 3
a26777 1
=item HISTORY
d26779 1
a26779 1
=back
d26781 1
a26781 1
=head2 IO::Select - OO interface to the select system call
d26785 1
a26785 1
=item SYNOPSIS
d26787 10
a26796 1
=item DESCRIPTION
d26798 1
a26798 1
=item CONSTRUCTOR
d26800 36
a26835 1
new ( [ HANDLES ] )
d26837 1
a26837 1
=item METHODS
d26839 1
a26839 3
add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, EXCEPTION [, TIMEOUT ] )
d26841 1
a26841 1
=item EXAMPLE
d26847 2
d26851 1
a26851 1
=head2 IO::Socket - Object interface to socket communications
d26855 1
a26855 1
=item SYNOPSIS
d26857 1
a26857 1
=item DESCRIPTION
d26859 1
a26859 1
=item CONSTRUCTOR
d26861 1
a26861 1
new ( [ARGS] )
d26863 1
a26863 1
=item METHODS
d26865 1
a26865 2
accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), atmark, connected,
protocol, sockdomain, sockopt(OPT [, VAL]), socktype, timeout([VAL])
d26867 1
a26867 1
=item SEE ALSO
d26869 1
a26869 1
=item AUTHOR
d26871 1
a26871 1
=item COPYRIGHT
d26875 1
a26875 1
=head2 IO::Socket::INET - Object interface for AF_INET domain sockets
d26877 1
a26877 1
=over 4
d26879 1
a26879 1
=item SYNOPSIS
d26881 1
a26881 1
=item DESCRIPTION
d26883 1
a26883 1
=item CONSTRUCTOR
d26885 1
a26885 1
new ( [ARGS] )
d26887 1
a26887 1
=over 4
d26889 1
a26889 1
=item METHODS
d26891 1
a26891 2
sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()
d26893 1
a26893 1
=back
d26895 1
a26895 1
=item SEE ALSO
d26901 2
d26905 1
a26905 1
=head2 IO::Socket::UNIX - Object interface for AF_UNIX domain sockets
a26912 4
=item CONSTRUCTOR

new ( [ARGS] )

d26915 2
a26916 1
hostpath(), peerpath()
d26918 1
a26918 1
=item SEE ALSO
d26924 2
d26928 1
a26928 2
=head2 IO::lib::IO::Dir, IO::Dir - supply object methods for directory
handles
d26936 1
a26936 2
new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, 'IO::Dir', DIRNAME [, OPTIONS ]
d26938 3
a26940 1
=item SEE ALSO
a26943 2
=item COPYRIGHT

d26946 1
a26946 1
=head2 IO::lib::IO::File, IO::File - supply object methods for filehandles
d26950 3
a26952 1
=item SYNOPSIS
d26954 1
a26954 1
=item DESCRIPTION
d26956 1
a26956 1
=item CONSTRUCTOR
d26958 1
a26958 1
new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile
d26960 1
a26960 1
=item METHODS
d26962 1
a26962 2
open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS ), binmode(
[LAYER] )
d26964 1
a26964 1
=item NOTE
d26966 1
a26966 1
=item SEE ALSO
d26968 1
a26968 1
=item HISTORY
d26972 1
a26972 2
=head2 IO::lib::IO::Handle, IO::Handle - supply object methods for I/O
handles
d26976 1
a26976 1
=item SYNOPSIS
d26978 1
a26978 1
=item DESCRIPTION
d26980 1
a26980 1
=item CONSTRUCTOR
d26982 1
a26982 1
new (), new_from_fd ( FD, MODE )
d26984 1
a26984 1
=item METHODS
d26986 1
a26986 4
$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint
d26988 1
a26988 1
=item NOTE
d26990 1
a26990 1
=item SEE ALSO
d26992 7
a26998 1
=item BUGS
d27000 1
a27000 1
=item HISTORY
d27004 1
a27004 1
=head2 IO::lib::IO::Pipe, IO::Pipe - supply object methods for pipes
d27006 1
a27006 1
=over 4
d27008 1
a27008 1
=item SYNOPSIS
d27010 1
a27010 1
=item DESCRIPTION
d27012 2
a27013 1
=item CONSTRUCTOR
d27015 1
a27015 1
new ( [READER, WRITER] )
d27017 1
a27017 3
=item METHODS

reader ([ARGS]), writer ([ARGS]), handles ()
d27019 5
a27023 1
=item SEE ALSO
d27029 2
d27033 1
a27033 1
=head2 IO::lib::IO::Poll, IO::Poll - Object interface to system poll call
d27043 3
a27045 4
mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )

=item SEE ALSO
a27048 2
=item COPYRIGHT

d27051 1
a27051 2
=head2 IO::lib::IO::Seekable, IO::Seekable - supply seek based methods for
I/O objects
d27059 3
a27061 3
$io->getpos, $io->setpos, $io->seek ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=2 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell
a27064 2
=item HISTORY

d27067 1
a27067 2
=head2 IO::lib::IO::Select, IO::Select - OO interface to the select system
call
d27071 1
a27071 1
=item SYNOPSIS
d27073 1
a27073 1
=item DESCRIPTION
d27075 1
a27075 1
=item CONSTRUCTOR
d27077 1
a27077 1
new ( [ HANDLES ] )
d27079 1
a27079 1
=item METHODS
d27081 1
a27081 3
add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, EXCEPTION [, TIMEOUT ] )
d27083 1
a27083 1
=item EXAMPLE
d27087 1
a27087 1
=item COPYRIGHT
d27091 1
a27091 2
=head2 IO::lib::IO::Socket, IO::Socket - Object interface to socket
communications
d27095 1
a27095 1
=item SYNOPSIS
d27097 1
a27097 1
=item DESCRIPTION
d27099 1
a27099 1
=item CONSTRUCTOR
d27101 1
a27101 1
new ( [ARGS] )
d27103 1
a27103 1
=item METHODS
d27105 1
a27105 2
accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), atmark, connected,
protocol, sockdomain, sockopt(OPT [, VAL]), socktype, timeout([VAL])
d27107 1
a27107 1
=item SEE ALSO
d27111 1
a27111 1
=item COPYRIGHT
d27115 1
a27115 2
=head2 IO::lib::IO::Socket::INET, IO::Socket::INET - Object interface for
AF_INET domain sockets
d27119 1
a27119 1
=item SYNOPSIS
d27121 1
a27121 1
=item DESCRIPTION
d27123 1
a27123 1
=item CONSTRUCTOR
d27125 1
a27125 1
new ( [ARGS] )
d27127 1
a27127 1
=over 4
d27129 1
a27129 1
=item METHODS
d27131 1
a27131 2
sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()
d27135 5
a27139 1
=item SEE ALSO
d27143 1
a27143 1
=item COPYRIGHT
d27147 1
a27147 2
=head2 IO::lib::IO::Socket::UNIX, IO::Socket::UNIX - Object interface for
AF_UNIX domain sockets
d27151 5
a27155 1
=item SYNOPSIS
d27157 1
a27157 1
=item DESCRIPTION
d27159 1
a27159 1
=item CONSTRUCTOR
d27161 1
a27161 1
new ( [ARGS] )
d27163 1
a27163 1
=item METHODS
d27165 1
a27165 1
hostpath(), peerpath()
d27167 1
a27167 1
=item SEE ALSO
d27169 1
a27169 1
=item AUTHOR
d27171 1
a27171 1
=item COPYRIGHT
d27175 3
a27177 1
=head2 IPC::Msg - SysV Msg IPC object class
d27179 1
a27179 1
=over 4
d27181 1
a27181 1
=item SYNOPSIS
d27183 1
a27183 1
=item DESCRIPTION
d27185 1
a27185 1
=item METHODS
d27187 1
a27187 3
new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat
d27189 1
a27189 1
=item SEE ALSO
d27191 1
a27191 1
=item AUTHOR
d27193 1
a27193 1
=item COPYRIGHT
d27195 1
a27195 1
=back
d27197 1
a27197 1
=head2 IPC::Open2, open2 - open a process for both reading and writing
d27199 1
a27199 1
=over 4
d27201 1
a27201 1
=item SYNOPSIS
d27203 1
a27203 1
=item DESCRIPTION
d27205 1
a27205 1
=item WARNING 
d27211 1
a27211 2
=head2 IPC::Open3, open3 - open a process for reading, writing, and error
handling
d27215 1
a27215 1
=item SYNOPSIS
d27217 1
a27217 1
=item DESCRIPTION
d27219 1
a27219 1
=item WARNING
d27223 2
a27224 1
=head2 IPC::Semaphore - SysV Semaphore IPC object class
a27227 2
=item SYNOPSIS

d27230 1
a27230 6
=item METHODS

new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat
a27233 4
=item AUTHOR

=item COPYRIGHT

d27236 1
a27236 1
=head2 IPC::SysV - SysV IPC constants
a27239 2
=item SYNOPSIS

d27242 1
a27242 1
ftok( PATH, ID )
a27245 4
=item AUTHORS

=item COPYRIGHT

d27248 1
a27248 1
=head2 IPC::SysV::Msg, IPC::Msg - SysV Msg IPC object class
a27251 2
=item SYNOPSIS

d27254 1
a27254 5
=item METHODS

new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat
a27257 4
=item AUTHOR

=item COPYRIGHT

d27260 2
a27261 2
=head2 IPC::SysV::Semaphore, IPC::Semaphore - SysV Semaphore IPC object
class
a27264 2
=item SYNOPSIS

d27267 1
a27267 6
=item METHODS

new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat
a27270 4
=item AUTHOR

=item COPYRIGHT

d27273 1
a27273 1
=head2 List::Util - A selection of general-utility list subroutines
a27276 2
=item SYNOPSIS

d27279 1
a27279 2
first BLOCK LIST, max LIST, maxstr LIST, min LIST, minstr LIST, reduce
BLOCK LIST, shuffle LIST, sum LIST
d27281 1
a27281 5
=item KNOWN BUGS

=item SUGGESTED ADDITIONS

=item COPYRIGHT
d27285 2
a27286 2
=head2 List::Utilib::List::Util, List::Util - A selection of
general-utility list subroutines
d27294 1
a27294 6
first BLOCK LIST, max LIST, maxstr LIST, min LIST, minstr LIST, reduce
BLOCK LIST, shuffle LIST, sum LIST

=item KNOWN BUGS

=item SUGGESTED ADDITIONS
d27300 1
a27300 2
=head2 List::Utilib::Scalar::Util, Scalar::Util - A selection of
general-utility scalar subroutines
d27308 3
a27310 3
blessed EXPR, dualvar NUM, STRING, isvstring EXPR, isweak EXPR,
looks_like_number EXPR, openhandle FH, refaddr EXPR, reftype EXPR,
set_prototype CODEREF, PROTOTYPE, tainted EXPR, weaken REF
d27312 1
a27312 1
=item KNOWN BUGS
d27316 1
a27316 1
=item BLATANT PLUG
d27320 1
a27320 1
=head2 Locale::Constants - constants for Locale codes
d27328 3
a27330 1
=item KNOWN BUGS AND LIMITATIONS
d27332 1
a27332 1
=item SEE ALSO
d27334 1
a27334 1
Locale::Language, Locale::Country, Locale::Script, Locale::Currency
d27342 2
a27343 1
=head2 Locale::Country - ISO codes for country identification (ISO 3166)
d27351 1
a27351 6
B<alpha-2>, B<alpha-3>, B<numeric>

=item CONVERSION ROUTINES

code2country( CODE, [ CODESET ] ), country2code( STRING, [ CODESET ] ),
country_code2code( CODE, CODESET, CODESET )
d27353 2
a27354 1
=item QUERY ROUTINES
d27356 1
a27356 1
C<all_country_codes( [ CODESET ] )>, C<all_country_names( [ CODESET ] )>
d27358 1
a27358 1
=item SEMI-PRIVATE ROUTINES
d27362 2
a27363 1
=item alias_code
d27365 1
a27365 1
=item rename_country
d27369 1
a27369 5
=item EXAMPLES

=item DOMAIN NAMES

=item KNOWN BUGS AND LIMITATIONS
d27371 1
a27371 10
=item SEE ALSO

Locale::Language, Locale::Script, Locale::Currency, Locale::SubCountry, ISO
3166-1, http://www.iso.org/iso/en/prods-services/iso3166ma/index.html,
http://www.egt.ie/standards/iso3166/iso3166-1-en.html,
http://www.cia.gov/cia/publications/factbook/docs/app-d-1.html

=item AUTHOR

=item COPYRIGHT
a27374 3
=head2 Locale::Currency - ISO three letter codes for currency
identification (ISO 4217)

d27377 1
a27377 1
=item SYNOPSIS
d27379 1
a27379 1
=item DESCRIPTION
d27381 1
a27381 1
XTS, XXX
d27383 1
a27383 1
=item CONVERSION ROUTINES
d27385 1
a27385 1
code2currency(), currency2code()
d27387 1
a27387 1
=item QUERY ROUTINES
d27389 1
a27389 1
C<all_currency_codes()>, C<all_currency_names()>
d27391 1
a27391 1
=item EXAMPLES
d27393 1
a27393 3
=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO
d27395 1
a27395 2
Locale::Country, Locale::Script, ISO 4217:1995,
http://www.bsi-global.com/iso4217currency
d27403 1
a27403 2
=head2 Locale::Language - ISO two letter codes for language identification
(ISO 639)
d27411 9
a27419 1
=item CONVERSION ROUTINES
d27421 1
a27421 1
code2language(), language2code()
d27423 1
a27423 1
=item QUERY ROUTINES
d27425 1
a27425 1
C<all_language_codes()>, C<all_language_names()>
d27427 1
a27427 1
=item EXAMPLES
d27429 1
a27429 1
=item KNOWN BUGS AND LIMITATIONS
d27431 1
a27431 1
=item SEE ALSO
d27433 1
a27433 2
Locale::Country, Locale::Script, Locale::Currency, ISO 639:1988 (E/F),
http://lcweb.loc.gov/standards/iso639-2/langhome.html
d27441 2
a27442 1
=head2 Locale::Maketext - framework for localization
d27448 2
d27452 3
a27454 1
=item QUICK OVERVIEW
d27456 1
a27456 1
=item METHODS
d27460 9
a27468 1
=item Construction Methods
d27470 1
a27470 1
=item The "maketext" Method
d27472 1
a27472 1
$lh->fail_with I<or> $lh->fail_with(I<PARAM>), $lh->failure_handler_auto
d27474 1
a27474 1
=item Utility Methods
d27476 1
a27476 4
$language->quant($number, $singular), $language->quant($number, $singular,
$plural), $language->quant($number, $singular, $plural, $negative),
$language->numf($number), $language->sprintf($format, @@items),
$language->language_tag(), $language->encoding()
d27478 1
a27478 1
=item Language Handle Attributes and Internals
d27482 1
a27482 1
=item LANGUAGE CLASS HIERARCHIES
d27484 1
a27484 1
=item ENTRIES IN EACH LEXICON
d27486 1
a27486 1
=item BRACKET NOTATION
d27488 1
a27488 1
=item AUTO LEXICONS
d27490 1
a27490 1
=item CONTROLLING LOOKUP FAILURE
d27492 1
a27492 1
=item HOW TO USE MAKETEXT
d27494 1
a27494 1
=item SEE ALSO
d27496 1
a27496 1
=item COPYRIGHT AND DISCLAIMER
d27498 1
a27498 1
=item AUTHOR
d27502 2
a27503 1
=head2 Locale::Maketext::TPJ13 -- article about software localization
d27511 1
a27511 1
=item Localization and Perl: gettext breaks, Maketext fixes
d27513 1
a27513 1
=over 4
d27515 1
a27515 1
=item A Localization Horror Story: It Could Happen To You
d27517 1
a27517 1
=item The Linguistic View
d27519 1
a27519 1
=item Breaking gettext
d27521 1
a27521 1
=item Replacing gettext
d27523 1
a27523 1
=item Buzzwords: Abstraction and Encapsulation
d27525 1
a27525 1
=item Buzzword: Isomorphism
d27527 1
a27527 1
=item Buzzword: Inheritance
d27529 1
a27529 1
=item Buzzword: Concision
d27531 1
a27531 1
=item The Devil in the Details
d27533 1
a27533 1
=item The Proof in the Pudding: Localizing Web Sites
d27535 1
a27535 1
=item References
d27539 2
d27543 2
a27544 1
=head2 Locale::Script - ISO codes for script identification (ISO 15924)
a27551 2
B<alpha-2>, B<alpha-3>, B<numeric>

d27554 1
a27554 1
=item SPECIAL CODES
d27556 1
a27556 1
=back
d27558 1
a27558 1
=item CONVERSION ROUTINES
d27560 1
a27560 2
code2script( CODE, [ CODESET ] ), script2code( STRING, [ CODESET ] ),
script_code2code( CODE, CODESET, CODESET )
d27562 1
a27562 1
=item QUERY ROUTINES
d27564 1
a27564 1
C<all_script_codes ( [ CODESET ] )>, C<all_script_names ( [ CODESET ] )>
d27566 1
a27566 10
=item EXAMPLES

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Language, Locale::Currency, Locale::Country, ISO 15924,
http://www.evertype.com/standards/iso15924/

=item AUTHOR
d27572 1
a27572 1
=head2 MIME::Base64 - Encoding and decoding of base64 strings
d27580 6
a27585 1
encode_base64($str), encode_base64($str, $eol);, decode_base64($str)
d27587 3
a27589 1
=item DIAGNOSTICS
d27591 1
a27591 2
Premature end of base64 data, Premature padding of base64 data, Wide
character in subroutine entry
d27593 1
a27593 1
=item EXAMPLES
a27596 2
=item SEE ALSO

d27599 1
a27599 2
=head2 MIME::Base64::QuotedPrint, MIME::QuotedPrint - Encoding and decoding
of quoted-printable strings
d27603 1
a27603 1
=item SYNOPSIS
d27607 3
a27609 2
encode_qp($str), encode_qp($str, $eol), encode_qp($str, $eol, $binmode),
decode_qp($str);
d27611 1
a27611 1
=item COPYRIGHT
d27613 3
a27615 1
=item SEE ALSO
d27619 2
a27620 2
=head2 MIME::QuotedPrint - Encoding and decoding of quoted-printable
strings
d27628 3
a27630 2
encode_qp($str), encode_qp($str, $eol), encode_qp($str, $eol, $binmode),
decode_qp($str);
a27633 2
=item SEE ALSO

d27636 1
a27636 1
=head2 Math::BigFloat - Arbitrary size floating point math package
d27644 1
a27644 1
=over 4
d27646 1
a27646 1
=item Canonical notation
d27648 1
a27648 1
=item Output
d27650 1
a27650 1
=item C<mantissa()>, C<exponent()> and C<parts()>
d27652 13
a27664 10
=item Accuracy vs. Precision

=item Rounding

ffround ( +$scale ), ffround ( -$scale ), ffround ( 0 ), fround  ( +$scale
), fround  ( -$scale ) and fround ( 0 )

=back

=item METHODS
d27668 1
a27668 1
=item accuracy
d27670 1
a27670 1
=item precision()
d27674 1
a27674 1
=item Autocreating constants
d27676 2
a27677 1
=over 4
d27679 1
a27679 1
=item Math library
d27681 1
a27681 1
=item Using Math::BigInt::Lite
d27683 1
a27683 1
=back
d27685 1
a27685 1
=item BUGS
d27687 1
a27687 1
=item CAVEATS
d27689 1
a27689 1
stringify, bstr(), bdiv, Modifying and =, bpow, precision() vs. accuracy()
d27691 1
a27691 1
=item SEE ALSO
d27693 1
a27693 1
=item LICENSE
d27695 1
a27695 1
=item AUTHORS
d27699 1
a27699 1
=head2 Math::BigInt - Arbitrary size integer/float math package
d27707 3
a27709 1
Input, Output
d27713 8
d27723 13
a27735 1
=item config
d27737 1
a27737 1
=item accuracy
d27739 1
a27739 1
=item precision
d27741 1
a27741 1
=item brsft
d27743 1
a27743 1
=item new
d27745 1
a27745 1
=item bnan
d27747 1
a27747 1
=item bzero
d27749 1
a27749 1
=item binf
d27751 1
a27751 1
=item bone
d27753 1
a27753 1
=item is_one()/is_zero()/is_nan()/is_inf()
d27755 1
a27755 1
=item is_pos()/is_neg()
d27757 1
a27757 2
	$x->is_pos();			# true if > 0
	$x->is_neg();			# true if < 0
d27759 1
a27759 1
=item is_odd()/is_even()/is_int()
d27761 5
a27765 1
=item bcmp
d27767 1
a27767 1
=item bacmp
d27769 1
a27769 1
=item sign
d27771 1
a27771 1
=item digit
d27773 1
a27773 1
=item bneg
d27775 1
a27775 1
=item babs
d27777 1
a27777 1
=item bnorm
d27779 1
a27779 1
=item bnot
d27781 1
a27781 1
=item binc
d27783 1
a27783 1
=item bdec
d27785 1
a27785 1
=item badd
d27787 1
a27787 1
=item bsub
d27789 6
a27794 1
=item bmul
d27796 1
a27796 1
=item bdiv
d27798 1
a27798 1
=item bmod
d27800 1
a27800 1
=item bmodinv
d27802 1
a27802 1
=item bmodpow
d27804 1
a27804 1
=item bpow
d27806 1
a27806 1
=item blsft
d27808 1
a27808 1
=item brsft
d27810 1
a27810 1
=item band
d27812 1
a27812 1
=item bior
d27814 1
a27814 1
=item bxor
d27816 1
a27816 1
=item bnot
d27818 1
a27818 1
=item bsqrt
d27820 1
a27820 1
=item bfac
d27822 1
a27822 1
=item round
d27824 1
a27824 1
=item bround
d27826 7
a27832 1
=item bfround
d27834 1
a27834 1
=item bfloor
d27836 1
a27836 1
=item bceil
d27838 1
a27838 1
=item bgcd
d27840 1
a27840 1
=item blcm
d27842 1
a27842 1
=item exponent
d27844 1
a27844 1
=item mantissa
d27846 1
a27846 1
=item parts
d27848 1
a27848 1
=item copy
d27850 1
a27850 1
=item as_int
d27852 2
a27853 1
=item bsstr
d27855 1
a27855 1
=item as_hex
d27857 1
a27857 1
=item as_bin
d27861 2
a27862 1
=item ACCURACY and PRECISION
d27866 1
a27866 1
=item Precision P
d27868 1
a27868 1
=item Accuracy A
d27870 1
a27870 1
=item Fallback F
d27872 1
a27872 1
=item Rounding mode R
d27874 1
a27874 4
'trunc', 'even', 'odd', '+inf', '-inf', 'zero', Precision, Accuracy
(significant digits), Setting/Accessing, Creating numbers, Usage,
Precedence, Overriding globals, Local settings, Rounding, Default values,
Remarks
d27878 1
a27878 1
=item Infinity and Not a Number
d27880 1
a27880 1
oct()/hex(), log(-inf), exp(), cos(), sin(), atan2()
d27882 1
a27882 1
=item INTERNALS
d27886 7
a27892 1
=item MATH LIBRARY
d27894 1
a27894 1
=item SIGN
d27896 1
a27896 1
=item mantissa(), exponent() and parts()
d27900 1
a27900 1
=item EXAMPLES
d27902 1
a27902 1
  use Math::BigInt;
d27904 1
a27904 1
=item Autocreating constants
d27906 1
a27906 1
=item PERFORMANCE
d27908 1
a27908 1
=over 4
d27910 1
a27910 1
=item Alternative math libraries
d27912 1
a27912 1
=item SUBCLASSING
d27916 7
a27922 1
=item Subclassing Math::BigInt
d27924 1
a27924 1
=item UPGRADING
d27926 2
a27927 1
=over 4
d27929 1
a27929 1
=item Auto-upgrade
d27931 1
a27931 1
bsqrt(), div(), blog()
d27933 1
a27933 1
=back
d27935 1
a27935 1
=item BUGS
d27937 1
a27937 2
broot() does not work, Out of Memory!, Fails to load Calc on Perl prior
5.6.0
d27939 2
a27940 1
=item CAVEATS
d27942 1
a27942 3
bstr(), bsstr() and 'cmp', int(), length, bdiv, infinity handling,
Modifying and =, bpow, Overloading -$x, Mixing different object types,
bsqrt(), brsft()
d27944 2
a27945 1
=item LICENSE
d27947 2
a27948 1
=item SEE ALSO
d27950 1
a27950 1
=item AUTHORS
d27954 1
a27954 1
=head2 Math::BigInt::Calc - Pure Perl module to support Math::BigInt
d27958 2
a27959 1
=item SYNOPSIS
d27961 1
a27961 1
=item DESCRIPTION
d27963 1
a27963 1
=item STORAGE
d27965 1
a27965 1
=item METHODS
d27967 1
a27967 1
=item WRAP YOUR OWN
d27969 1
a27969 1
=item LICENSE
d27971 1
a27971 3
This program is free software; you may redistribute it and/or modify it
under
the same terms as Perl itself. 
d27973 1
a27973 1
=item AUTHORS
d27975 1
a27975 1
=item SEE ALSO
d27979 2
a27980 1
=head2 Math::BigInt::CalcEmu - Emulate low-level math with BigInt code
d27988 1
a27988 1
=item METHODS
d27990 1
a27990 1
=over 4
d27992 1
a27992 1
=item __emu_bxor
d27994 1
a27994 1
=item __emu_band
d27996 2
a27997 1
=item __emu_bior
d27999 1
a27999 1
=back
d28001 1
a28001 1
=item LICENSE
d28003 1
a28003 3
This program is free software; you may redistribute it and/or modify it
under
the same terms as Perl itself. 
d28005 1
a28005 1
=item AUTHORS
d28007 1
a28007 1
=item SEE ALSO
d28011 2
a28012 1
=head2 Math::BigRat - Arbitrary big rational numbers
d28020 3
a28022 1
=over 4
d28024 1
a28024 1
=item MATH LIBRARY
d28028 1
a28028 1
=item METHODS
d28032 1
a28032 1
=item new()
d28034 1
a28034 1
=item numerator()
d28036 1
a28036 1
=item denominator()
d28038 2
a28039 1
	$d = $x->denominator();
d28041 1
a28041 1
=item parts()
d28043 1
a28043 1
=item as_int()
d28045 1
a28045 1
=item as_hex()
d28047 1
a28047 1
=item as_bin()
d28049 1
a28049 1
=item bfac()
d28051 1
a28051 1
=item blog()
d28053 1
a28053 1
=item bround()/round()/bfround()
d28055 1
a28055 1
=item bmod()
d28057 1
a28057 1
=item is_one()
d28059 1
a28059 1
=item is_zero()
d28061 1
a28061 1
=item is_pos()
d28063 1
a28063 1
=item is_neg()
d28065 1
a28065 1
=item is_int()
d28067 1
a28067 1
=item is_odd()
d28069 1
a28069 1
=item is_even()
d28071 1
a28071 1
=item bceil()
d28073 1
a28073 1
=item bfloor()
d28075 1
a28075 1
	$x->bfloor();
d28077 1
a28077 1
=item bsqrt()
d28079 1
a28079 1
	$x->bsqrt();
d28081 1
a28081 1
=item config
d28083 1
a28083 1
=back
d28085 1
a28085 1
=item BUGS
d28087 1
a28087 3
inf handling (partial), NaN handling (partial), rounding (not implemented
except for bceil/bfloor), $x ** $y where $y is not an integer, bmod(),
blog(), bmodinv() and bmodpow() (partial)
d28089 1
a28089 1
=item LICENSE
d28091 1
a28091 1
=item SEE ALSO
d28093 1
a28093 1
=item AUTHORS
d28097 1
a28097 2
=head2 Math::Complex - complex numbers and associated mathematical
functions
d28105 5
a28109 1
=item OPERATIONS
d28111 1
a28111 1
=item CREATION
d28113 1
a28113 1
=item DISPLAYING
d28117 1
a28117 1
=item CHANGED IN PERL 5.6
d28121 1
a28121 1
=item USAGE
d28123 1
a28123 1
=item ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO
d28125 1
a28125 1
=item ERRORS DUE TO INDIGESTIBLE ARGUMENTS
d28127 1
a28127 1
=item BUGS
d28129 1
a28129 1
=item AUTHORS
d28133 1
a28133 1
=head2 Math::Trig - trigonometric functions
d28135 1
a28135 1
=over 4
d28137 1
a28137 1
=item SYNOPSIS
d28139 1
a28139 1
=item DESCRIPTION
d28141 1
a28141 1
=item TRIGONOMETRIC FUNCTIONS
d28143 1
a28143 1
B<tan>
d28147 1
a28147 1
=item ERRORS DUE TO DIVISION BY ZERO
d28149 1
a28149 1
=item SIMPLE (REAL) ARGUMENTS, COMPLEX RESULTS
d28151 1
a28151 1
=back
d28153 1
a28153 1
=item PLANE ANGLE CONVERSIONS
d28155 1
a28155 1
=item RADIAL COORDINATE CONVERSIONS
d28159 1
a28159 6
=item COORDINATE SYSTEMS

=item 3-D ANGLE CONVERSIONS

cartesian_to_cylindrical, cartesian_to_spherical, cylindrical_to_cartesian,
cylindrical_to_spherical, spherical_to_cartesian, spherical_to_cylindrical
a28162 4
=item GREAT CIRCLE DISTANCES AND DIRECTIONS

=item EXAMPLES

d28165 1
a28165 1
=item CAVEAT FOR GREAT CIRCLE FORMULAS
d28169 1
a28169 1
=item BUGS
d28171 1
a28171 1
=item AUTHORS
d28175 3
a28177 1
=head2 Memoize - Make functions faster by trading space for time
d28181 1
a28181 1
=item SYNOPSIS
d28183 1
a28183 1
=item DESCRIPTION
d28185 1
a28185 1
=item DETAILS
d28187 1
a28187 1
=item OPTIONS
d28191 1
a28191 1
=item INSTALL
d28193 1
a28193 1
=item NORMALIZER
d28195 1
a28195 1
=item C<SCALAR_CACHE>, C<LIST_CACHE>
d28197 1
a28197 1
C<MEMORY>, C<HASH>, C<TIE>, C<FAULT>, C<MERGE>
d28201 1
a28201 1
=item OTHER FACILITIES
d28205 1
a28205 3
=item C<unmemoize>

=item C<flush_cache>
a28210 8
=item PERSISTENT CACHE SUPPORT

=item EXPIRATION SUPPORT

=item BUGS

=item MAILING LIST

d28213 1
a28213 3
=item COPYRIGHT AND LICENSE

=item THANK YOU
d28217 1
a28217 2
=head2 Memoize::AnyDBM_File - glue to provide EXISTS for AnyDBM_File for
Storable use
d28221 2
d28225 1
a28225 1
=back
d28227 1
a28227 2
=head2 Memoize::Expire - Plug-in module for automatic expiration of
memoized values
d28229 1
a28229 1
=over 4
d28231 2
a28232 1
=item SYNOPSIS
d28234 1
a28234 1
=item DESCRIPTION
d28236 4
a28239 1
=item INTERFACE
d28241 1
a28241 1
 TIEHASH,  EXISTS,  STORE
d28243 1
a28243 1
=item ALTERNATIVES
d28245 1
a28245 1
=item CAVEATS
d28247 1
a28247 1
=item AUTHOR
d28249 1
a28249 1
=item SEE ALSO
d28251 4
a28254 1
=back
d28256 1
a28256 1
=head2 Memoize::ExpireFile - test for Memoize expiration semantics
d28258 1
a28258 3
=over 4

=item DESCRIPTION
d28262 2
a28263 1
=head2 Memoize::ExpireTest - test for Memoize expiration semantics
d28267 2
d28271 1
a28271 1
=back
d28273 1
a28273 2
=head2 Memoize::NDBM_File - glue to provide EXISTS for NDBM_File for
Storable use
d28277 8
a28284 1
=item DESCRIPTION
d28286 1
a28286 1
=back
d28288 1
a28288 2
=head2 Memoize::SDBM_File - glue to provide EXISTS for SDBM_File for
Storable use
d28290 1
a28290 1
=over 4
d28292 1
a28292 1
=item DESCRIPTION
d28296 2
a28297 1
=head2 Memoize::Storable - store Memoized data in Storable database
d28301 2
d28305 2
d28309 1
a28309 1
=head2 NDBM_File - Tied access to ndbm files
d28317 1
a28317 1
C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>
d28319 1
a28319 1
=item DIAGNOSTICS
d28321 1
a28321 1
=over 4
d28323 26
a28348 1
=item C<ndbm store returned -1, errno 22, key "..." at ...>
d28350 1
a28350 1
=back
d28352 1
a28352 1
=item BUGS AND WARNINGS
d28354 1
a28354 1
=back
d28356 1
a28356 2
=head2 NEXT - Provide a pseudo-class NEXT (et al) that allows method
redispatch
d28358 1
a28358 1
=over 4
d28360 1
a28360 1
=item SYNOPSIS
d28362 1
a28362 1
=item DESCRIPTION
d28364 1
a28364 1
=over 4
d28366 1
a28366 1
=item Enforcing redispatch
d28368 5
a28372 5
=item Avoiding repetitions

=item Invoking all versions of a method with a single call

=item Using C<EVERY> methods
d28376 1
a28376 1
=item AUTHOR
d28378 1
a28378 1
=item BUGS AND IRRITATIONS
d28380 1
a28380 1
=item COPYRIGHT
d28382 1
a28382 1
=back
d28384 1
a28384 1
=head2 Net::Cmd - Network Command class (as used by FTP, SMTP etc)
d28386 1
a28386 1
=over 4
d28388 1
a28388 1
=item SYNOPSIS
d28390 1
a28390 1
=item DESCRIPTION
d28392 1
a28392 1
=item USER METHODS
d28394 1
a28394 2
debug ( VALUE ), message (), code (), ok (), status (), datasend ( DATA ),
dataend ()
d28396 1
a28396 1
=item CLASS METHODS
d28398 1
a28398 3
debug_print ( DIR, TEXT ), debug_text ( TEXT ), command ( CMD [, ARGS, ...
]), unsupported (), response (), parse_response ( TEXT ), getline (),
ungetline ( TEXT ), rawdatasend ( DATA ), read_until_dot (), tied_fh ()
d28400 1
a28400 1
=item EXPORTS
d28402 1
a28402 1
=item AUTHOR
d28404 1
a28404 1
=item COPYRIGHT
d28406 1
a28406 1
=back
d28408 1
a28408 1
=head2 Net::Config - Local configuration data for libnet
d28410 1
a28410 1
=over 4
d28412 1
a28412 1
=item SYNOPSYS
d28414 1
a28414 1
=item DESCRIPTION
d28416 1
a28416 1
=item METHODS
d28418 1
a28418 1
requires_firewall HOST
d28420 1
a28420 1
=item NetConfig VALUES
d28422 1
a28422 3
nntp_hosts, snpp_hosts, pop3_hosts, smtp_hosts, ph_hosts, daytime_hosts,
time_hosts, inet_domain, ftp_firewall, ftp_firewall_type, ftp_ext_passive,
ftp_int_pasive, local_netmask, test_hosts, test_exists
d28424 1
a28424 1
=back
d28426 1
a28426 2
=head2 Net::Domain - Attempt to evaluate the current host's internet name
and domain
d28428 1
a28428 1
=over 4
d28430 1
a28430 1
=item SYNOPSIS
d28432 1
a28432 1
=item DESCRIPTION
d28434 1
a28434 1
hostfqdn (), hostname (), hostdomain ()
d28436 1
a28436 1
=item AUTHOR
d28438 2
a28439 1
=item COPYRIGHT
d28443 1
a28443 1
=head2 Net::FTP - FTP Client class
d28451 1
a28451 1
=item OVERVIEW
d28453 1
a28453 1
=item CONSTRUCTOR
d28455 1
a28455 1
new ([ HOST ] [, OPTIONS ])
d28457 1
a28457 1
=item METHODS
d28459 1
a28459 13
login ([LOGIN [,PASSWORD [, ACCOUNT] ] ]), authorize ( [AUTH [, RESP]]),
site (ARGS), ascii, binary, rename ( OLDNAME, NEWNAME ), delete ( FILENAME
), cwd ( [ DIR ] ), cdup (), pwd (), restart ( WHERE ), rmdir ( DIR [,
RECURSE ]), mkdir ( DIR [, RECURSE ]), alloc ( SIZE [, RECORD_SIZE] ), ls (
[ DIR ] ), dir ( [ DIR ] ), get ( REMOTE_FILE [, LOCAL_FILE [, WHERE]] ),
put ( LOCAL_FILE [, REMOTE_FILE ] ), put_unique ( LOCAL_FILE [, REMOTE_FILE
] ), append ( LOCAL_FILE [, REMOTE_FILE ] ), unique_name (), mdtm ( FILE ),
size ( FILE ), supported ( CMD ), hash ( [FILEHANDLE_GLOB_REF],[
BYTES_PER_HASH_MARK] ), nlst ( [ DIR ] ), list ( [ DIR ] ), retr ( FILE ),
stor ( FILE ), stou ( FILE ), appe ( FILE ), port ( [ PORT ] ), pasv (),
pasv_xfer ( SRC_FILE, DEST_SERVER [, DEST_FILE ] ), pasv_xfer_unique (
SRC_FILE, DEST_SERVER [, DEST_FILE ] ), pasv_wait ( NON_PASV_SERVER ),
abort (), quit ()
d28463 3
a28465 1
=item Methods for the adventurous
d28467 1
a28467 1
quot (CMD [,ARGS])
d28471 1
a28471 1
=item THE dataconn CLASS
d28473 1
a28473 8
read ( BUFFER, SIZE [, TIMEOUT ] ), write ( BUFFER, SIZE [, TIMEOUT ] ),
bytes_read (), abort (), close ()

=item UNIMPLEMENTED

B<SMNT>, B<HELP>, B<MODE>, B<SYST>, B<STAT>, B<STRU>, B<REIN>

=item REPORTING BUGS
a28476 8
=item SEE ALSO

=item USE EXAMPLES

http://www.csh.rit.edu/~adam/Progs/

=item CREDITS

d28481 1
a28481 1
=head2 Net::NNTP - NNTP Client class
d28489 1
a28489 1
=item CONSTRUCTOR
d28491 1
a28491 1
new ( [ HOST ] [, OPTIONS ])
d28493 1
a28493 9
=item METHODS

article ( [ MSGID|MSGNUM ], [FH] ), body ( [ MSGID|MSGNUM ], [FH] ), head (
[ MSGID|MSGNUM ], [FH] ), articlefh ( [ MSGID|MSGNUM ] ), bodyfh ( [
MSGID|MSGNUM ] ), headfh ( [ MSGID|MSGNUM ] ), nntpstat ( [ MSGID|MSGNUM ]
), group ( [ GROUP ] ), ihave ( MSGID [, MESSAGE ]), last (), date (),
postok (), authinfo ( USER, PASS ), list (), newgroups ( SINCE [,
DISTRIBUTIONS ]), newnews ( SINCE [, GROUPS [, DISTRIBUTIONS ]]), next (),
post ( [ MESSAGE ] ), postfh (), slave (), quit ()
d28497 1
a28497 1
=item Extension methods
d28499 1
a28499 5
newsgroups ( [ PATTERN ] ), distributions (), subscriptions (),
overview_fmt (), active_times (), active ( [ PATTERN ] ), xgtitle ( PATTERN
), xhdr ( HEADER, MESSAGE-SPEC ), xover ( MESSAGE-SPEC ), xpath (
MESSAGE-ID ), xpat ( HEADER, PATTERN, MESSAGE-SPEC), xrover, listgroup ( [
GROUP ] ), reader
d28503 1
a28503 1
=item UNSUPPORTED
d28505 1
a28505 5
=item DEFINITIONS

MESSAGE-SPEC, PATTERN, Examples, C<[^]-]>, C<*bdc>, C<[0-9a-zA-Z]>, C<a??d>

=item SEE ALSO
d28507 1
a28507 1
=item AUTHOR
d28509 1
a28509 1
=item COPYRIGHT
a28512 2
=head2 Net::POP3 - Post Office Protocol 3 Client class (RFC1939)

d28515 1
a28515 3
=item SYNOPSIS

=item DESCRIPTION
d28517 1
a28517 1
=item CONSTRUCTOR
d28519 1
a28519 1
new ( [ HOST ] [, OPTIONS ] 0
d28521 1
a28521 9
=item METHODS

auth ( USERNAME, PASSWORD ), user ( USER ), pass ( PASS ), login ( [ USER
[, PASS ]] ), apop ( [ USER [, PASS ]] ), banner (), capa (),  capabilities
(), top ( MSGNUM [, NUMLINES ] ), list ( [ MSGNUM ] ), get ( MSGNUM [, FH ]
), getfh ( MSGNUM ), last (), popstat (), ping ( USER ), uidl ( [ MSGNUM ]
), delete ( MSGNUM ), reset (), quit ()

=item NOTES
d28523 1
a28523 1
=item SEE ALSO
d28525 1
a28525 1
=item AUTHOR
d28527 1
a28527 1
=item COPYRIGHT
d28529 1
a28529 1
=back
d28531 1
a28531 1
=head2 Net::Ping - check a remote host for reachability
d28533 1
a28533 1
=over 4
d28535 1
a28535 1
=item SYNOPSIS
d28537 1
a28537 1
=item DESCRIPTION
d28539 1
a28539 1
=over 4
d28541 1
a28541 1
=item Functions
d28543 1
a28543 6
Net::Ping->new([$proto [, $def_timeout [, $bytes [, $device [, $tos
]]]]]);, $p->ping($host [, $timeout]);, $p->source_verify( { 0 | 1 } );,
$p->service_check( { 0 | 1 } );, $p->tcp_service_check( { 0 | 1 } );,
$p->hires( { 0 | 1 } );, $p->bind($local_addr);, $p->open($host);, $p->ack(
[ $host ] );, $p->nack( $failed_ack_host );, $p->close();, pingecho($host
[, $timeout]);
d28547 1
a28547 1
=item NOTES
d28549 1
a28549 5
=item INSTALL

=item BUGS

=item AUTHORS
d28555 2
a28556 1
=head2 Net::SMTP - Simple Mail Transfer Protocol Client
d28564 3
a28566 1
=item EXAMPLES
d28568 1
a28568 1
=item CONSTRUCTOR
d28570 1
a28570 1
new ( [ HOST ] [, OPTIONS ] )
d28572 1
a28572 1
=item METHODS
d28574 1
a28574 7
banner (), domain (), hello ( DOMAIN ), host (), etrn ( DOMAIN ), auth (
USERNAME, PASSWORD ), mail ( ADDRESS [, OPTIONS] ), send ( ADDRESS ),
send_or_mail ( ADDRESS ), send_and_mail ( ADDRESS ), reset (), recipient (
ADDRESS [, ADDRESS, [...]] [, OPTIONS ] ), to ( ADDRESS [, ADDRESS [...]]
), cc ( ADDRESS [, ADDRESS [...]] ), bcc ( ADDRESS [, ADDRESS [...]] ),
data ( [ DATA ] ), expand ( ADDRESS ), verify ( ADDRESS ), help ( [
$subject ] ), quit ()
d28576 1
a28576 1
=item ADDRESSES
d28578 1
a28578 1
=item SEE ALSO
d28582 1
a28582 1
=item COPYRIGHT
d28586 1
a28586 1
=head2 Net::Time - time and daytime network client interface
d28594 1
a28594 6
inet_time ( [HOST [, PROTOCOL [, TIMEOUT]]]), inet_daytime ( [HOST [,
PROTOCOL [, TIMEOUT]]])

=item AUTHOR

=item COPYRIGHT
d28598 1
a28598 2
=head2 Net::hostent - by-name interface to Perl's built-in gethost*()
functions
d28606 1
a28606 5
=item EXAMPLES

=item NOTE

=item AUTHOR
d28610 1
a28610 1
=head2 Net::libnetFAQ, libnetFAQ - libnet Frequently Asked Questions
d28614 2
d28618 13
d28633 1
a28633 1
=item Where to get this document
d28635 1
a28635 1
=item How to contribute to this document
d28639 1
a28639 1
=item Author and Copyright Information
d28643 1
a28643 1
=item Disclaimer
d28645 1
a28645 1
=back
d28647 1
a28647 1
=item Obtaining and installing libnet
d28649 1
a28649 1
=over 4
d28651 1
a28651 1
=item What is libnet ?
d28653 1
a28653 1
=item Which version of perl do I need ?
d28655 1
a28655 1
=item What other modules do I need ?
d28657 1
a28657 1
=item What machines support libnet ?
d28659 1
a28659 1
=item Where can I get the latest libnet release
d28661 1
a28661 1
=back
d28663 1
a28663 1
=item Using Net::FTP
d28667 5
a28671 1
=item How do I download files from an FTP server ?
d28673 1
a28673 1
=item How do I transfer files in binary mode ?
d28675 1
a28675 1
=item How can I get the size of a file on a remote FTP server ?
d28677 1
a28677 2
=item How can I get the modification time of a file on a remote FTP server
?
d28679 1
a28679 1
=item How can I change the permissions of a file on a remote server ?
d28681 9
a28689 1
=item Can I do a reget operation like the ftp command ?
d28691 1
a28691 1
=item How do I get a directory listing from an FTP server ?
d28693 7
a28699 1
=item Changing directory to "" does not fail ?
d28701 1
a28701 1
=item I am behind a SOCKS firewall, but the Firewall option does not work ?
d28703 2
a28704 2
=item I am behind an FTP proxy firewall, but cannot access machines outside
?
d28706 1
a28706 1
=item My ftp proxy firewall does not listen on port 21
d28708 1
a28708 2
=item Is it possible to change the file permissions of a file on an FTP
server ?
d28710 1
a28710 2
=item I have seen scripts call a method message, but cannot find it
documented ?
d28712 1
a28712 1
=item Why does Net::FTP not implement mput and mget methods
d28716 4
a28719 1
=item Using Net::SMTP
d28721 1
a28721 1
=over 4
d28723 1
a28723 2
=item Why can't the part of an Email address after the @@ be used as the
hostname ?
d28725 1
a28725 1
=item Why does Net::SMTP not do DNS MX lookups ?
d28727 1
a28727 1
=item The verify method always returns true ?
d28729 1
a28729 1
=back
d28731 1
a28731 1
=item Debugging scripts
d28735 1
a28735 1
=item How can I debug my scripts that use Net::* modules ?
d28739 1
a28739 6
=item AUTHOR AND COPYRIGHT

=back

=head2 Net::netent - by-name interface to Perl's built-in getnet*()
functions
d28747 9
a28755 1
=item EXAMPLES
d28757 1
a28757 1
=item NOTE
d28763 1
a28763 2
=head2 Net::protoent - by-name interface to Perl's built-in getproto*()
functions
d28771 5
a28775 1
=item NOTE
d28777 2
a28778 1
=item AUTHOR
d28782 5
a28786 2
=head2 Net::servent - by-name interface to Perl's built-in getserv*()
functions
d28790 8
a28797 1
=item SYNOPSIS
d28799 1
a28799 1
=item DESCRIPTION
d28801 1
a28801 1
=item EXAMPLES
d28803 1
a28803 1
=item NOTE
d28807 2
d28811 1
a28811 1
=head2 Netrc, Net::Netrc - OO interface to users netrc file
d28819 5
a28823 1
=item THE .netrc FILE
d28825 3
a28827 2
machine name, default, login name, password string, account string, macdef
name
d28829 1
a28829 1
=item CONSTRUCTOR
d28831 1
a28831 1
lookup ( MACHINE [, LOGIN ])
d28833 1
a28833 1
=item METHODS
d28835 1
a28835 1
login (), password (), account (), lpa ()
d28845 2
a28846 1
=head2 O - Generic interface to Perl Compiler backends
d28852 4
d28858 2
a28859 1
=item CONVENTIONS
d28861 1
a28861 1
=item IMPLEMENTATION
d28863 1
a28863 1
=item BUGS
d28865 1
a28865 1
=item AUTHOR
d28869 1
a28869 1
=head2 ODBM_File - Tied access to odbm files
d28871 1
a28871 1
=over 4
d28873 1
a28873 1
=item SYNOPSIS
d28875 1
a28875 1
=item DESCRIPTION
d28877 1
a28877 1
C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>
d28879 1
a28879 1
=item DIAGNOSTICS
d28883 1
a28883 1
=item C<odbm store returned -1, errno 22, key "..." at ...>
d28887 3
a28889 1
=item BUGS AND WARNINGS
a28892 2
=head2 Opcode - Disable named opcodes when compiling perl code

d28895 1
a28895 1
=item SYNOPSIS
d28897 1
a28897 1
=item DESCRIPTION
d28899 1
a28899 1
=item NOTE
d28901 1
a28901 1
=item WARNING
d28903 1
a28903 1
=item Operator Names and Operator Lists
d28905 1
a28905 2
an operator name (opname), an operator tag name (optag), a negated opname
or optag, an operator set (opset)
d28907 1
a28907 1
=item Opcode Functions
d28909 1
a28909 4
opcodes, opset (OP, ...), opset_to_ops (OPSET), opset_to_hex (OPSET),
full_opset, empty_opset, invert_opset (OPSET), verify_opset (OPSET, ...),
define_optag (OPTAG, OPSET), opmask_add (OPSET), opmask, opdesc (OP, ...),
opdump (PAT)
d28911 1
a28911 1
=item Manipulating Opsets
d28913 1
a28913 1
=item TO DO (maybe)
d28919 1
a28919 1
=item Predefined Opcode Tags
d28921 1
a28921 4
:base_core, :base_mem, :base_loop, :base_io, :base_orig, :base_math,
:base_thread, :default, :filesys_read, :sys_db, :browse, :filesys_open,
:filesys_write, :subprocess, :ownprocess, :others, :still_to_be_decided,
:dangerous
d28923 1
a28923 1
=item SEE ALSO
d28925 1
a28925 1
=item AUTHORS
d28929 1
a28929 2
=head2 Opcode::Safe, Safe - Compile and execute code in restricted
compartments
d28931 1
a28931 1
=over 4
d28933 1
a28933 1
=item SYNOPSIS
d28935 1
a28935 1
=item DESCRIPTION
d28937 1
a28937 1
a new namespace, an operator mask
d28939 1
a28939 1
=item WARNING
d28943 1
a28943 1
=item RECENT CHANGES
d28945 1
a28945 1
=item Methods in class Safe
d28947 1
a28947 4
permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)
d28949 1
a28949 1
=item Some Safety Issues
d28951 1
a28951 1
Memory, CPU, Snooping, Signals, State Changes
d28953 1
a28953 1
=item AUTHOR
d28955 1
a28955 1
=back
d28959 1
a28959 2
=head2 Opcode::ops, ops - Perl pragma to restrict unsafe operations when
compiling
d28961 1
a28961 1
=over 4
d28963 1
a28963 1
=item SYNOPSIS	
d28965 1
a28965 1
=item DESCRIPTION
d28967 1
a28967 1
=item SEE ALSO
d28971 1
a28971 1
=head2 POSIX - Perl interface to IEEE Std 1003.1
d28973 1
a28973 1
=over 4
d28975 1
a28975 1
=item SYNOPSIS
d28977 1
a28977 1
=item DESCRIPTION
d28979 1
a28979 1
=item NOTE
d28981 1
a28981 1
=item CAVEATS 
d28983 1
a28983 1
=item FUNCTIONS
d28985 1
a28985 26
_exit, abort, abs, access, acos, alarm, asctime, asin, assert, atan, atan2,
atexit, atof, atoi, atol, bsearch, calloc, ceil, chdir, chmod, chown,
clearerr, clock, close, closedir, cos, cosh, creat, ctermid, ctime,
cuserid, difftime, div, dup, dup2, errno, execl, execle, execlp, execv,
execve, execvp, exit, exp, fabs, fclose, fcntl, fdopen, feof, ferror,
fflush, fgetc, fgetpos, fgets, fileno, floor, fmod, fopen, fork, fpathconf,
fprintf, fputc, fputs, fread, free, freopen, frexp, fscanf, fseek, fsetpos,
fstat, fsync, ftell, fwrite, getc, getchar, getcwd, getegid, getenv,
geteuid, getgid, getgrgid, getgrnam, getgroups, getlogin, getpgrp, getpid,
getppid, getpwnam, getpwuid, gets, getuid, gmtime, isalnum, isalpha,
isatty, iscntrl, isdigit, isgraph, islower, isprint, ispunct, isspace,
isupper, isxdigit, kill, labs, ldexp, ldiv, link, localeconv, localtime,
log, log10, longjmp, lseek, malloc, mblen, mbstowcs, mbtowc, memchr,
memcmp, memcpy, memmove, memset, mkdir, mkfifo, mktime, modf, nice,
offsetof, open, opendir, pathconf, pause, perror, pipe, pow, printf, putc,
putchar, puts, qsort, raise, rand, read, readdir, realloc, remove, rename,
rewind, rewinddir, rmdir, scanf, setgid, setjmp, setlocale, setpgid,
setsid, setuid, sigaction, siglongjmp, sigpending, sigprocmask, sigsetjmp,
sigsuspend, sin, sinh, sleep, sprintf, sqrt, srand, sscanf, stat, strcat,
strchr, strcmp, strcoll, strcpy, strcspn, strerror, strftime, strlen,
strncat, strncmp, strncpy, strpbrk, strrchr, strspn, strstr, strtod,
strtok, strtol, strtoul, strxfrm, sysconf, system, tan, tanh, tcdrain,
tcflow, tcflush, tcgetpgrp, tcsendbreak, tcsetpgrp, time, times, tmpfile,
tmpnam, tolower, toupper, ttyname, tzname, tzset, umask, uname, ungetc,
unlink, utime, vfprintf, vprintf, vsprintf, wait, waitpid, wcstombs,
wctomb, write
d28987 1
a28987 1
=item CLASSES
d28991 3
a28993 1
=item POSIX::SigAction
d28995 1
a28995 1
new, handler, mask, flags, safe
d28997 1
a28997 1
=item POSIX::SigSet
d28999 1
a28999 1
new, addset, delset, emptyset, fillset, ismember
d29001 1
a29001 1
=item POSIX::Termios
d29003 1
a29003 5
new, getattr, getcc, getcflag, getiflag, getispeed, getlflag, getoflag,
getospeed, setattr, setcc, setcflag, setiflag, setispeed, setlflag,
setoflag, setospeed, Baud rate values, Terminal interface values, c_cc
field values, c_cflag field values, c_iflag field values, c_lflag field
values, c_oflag field values
d29007 3
a29009 1
=item PATHNAME CONSTANTS
d29011 1
a29011 1
Constants
d29013 1
a29013 1
=item POSIX CONSTANTS
d29015 1
a29015 1
Constants
d29017 1
a29017 1
=item SYSTEM CONFIGURATION
d29019 1
a29019 1
Constants
d29021 1
a29021 1
=item ERRNO
d29023 1
a29023 1
Constants
d29025 1
a29025 1
=item FCNTL
d29027 1
a29027 1
Constants
d29029 1
a29029 1
=item FLOAT
d29031 1
a29031 1
Constants
d29033 1
a29033 1
=item LIMITS
d29035 1
a29035 1
Constants
d29037 1
a29037 1
=item LOCALE
d29039 1
a29039 1
Constants
d29041 1
a29041 1
=item MATH
d29043 1
a29043 1
Constants
d29045 1
a29045 1
=item SIGNAL
d29047 1
a29047 1
Constants
d29049 1
a29049 1
=item STAT
d29051 1
a29051 1
Constants, Macros
d29053 1
a29053 1
=item STDLIB
d29055 1
a29055 1
Constants
d29057 1
a29057 1
=item STDIO
d29059 1
a29059 1
Constants
d29061 1
a29061 1
=item TIME
d29063 1
a29063 1
Constants
d29065 1
a29065 1
=item UNISTD
d29067 1
a29067 1
Constants
d29069 1
a29069 1
=item WAIT
d29071 1
a29071 2
Constants, WNOHANG, WUNTRACED, Macros, WIFEXITED, WEXITSTATUS, WIFSIGNALED,
WTERMSIG, WIFSTOPPED, WSTOPSIG
d29075 1
a29075 2
=head2 PerlIO - On demand loader for PerlIO layers and root of PerlIO::*
name space
d29083 1
a29083 1
:unix, :stdio, :perlio, :crlf, :mmap, :utf8, :bytes, :raw, :pop, :win32
d29087 1
a29087 1
=item Custom Layers
d29089 1
a29089 13
:encoding, :via

=item Alternatives to raw

=item Defaults and how to override them

=item Querying the layers of filehandles

=back

=item AUTHOR

=item SEE ALSO
a29092 2
=head2 PerlIO::encoding - encoding layer

d29095 1
a29095 1
=item SYNOPSIS
d29097 1
a29097 3
=item DESCRIPTION

=item SEE ALSO
d29101 1
a29101 1
=head2 PerlIO::scalar - in-memory IO, scalar IO
d29103 1
a29103 1
=over 4
d29105 1
a29105 1
=item SYNOPSIS
d29107 1
a29107 1
=item DESCRIPTION
d29109 1
a29109 1
=item IMPLEMENTATION NOTE
d29111 1
a29111 1
=back
d29113 1
a29113 1
=head2 PerlIO::via - Helper class for PerlIO layers implemented in perl
d29115 1
a29115 1
=over 4
d29117 1
a29117 1
=item SYNOPSIS
d29119 1
a29119 1
=item DESCRIPTION
d29121 1
a29121 1
=item EXPECTED METHODS
d29123 1
a29123 10
$class->PUSHED([$mode[,$fh]]), $obj->POPPED([$fh]),
$obj->UTF8($bellowFlag,[$fh]), $obj->OPEN($path,$mode[,$fh]),
$obj->BINMODE([,$fh]), $obj->FDOPEN($fd[,$fh]),
$obj->SYSOPEN($path,$imode,$perm,[,$fh]), $obj->FILENO($fh),
$obj->READ($buffer,$len,$fh), $obj->WRITE($buffer,$fh), $obj->FILL($fh),
$obj->CLOSE($fh), $obj->SEEK($posn,$whence,$fh), $obj->TELL($fh),
$obj->UNREAD($buffer,$fh), $obj->FLUSH($fh), $obj->SETLINEBUF($fh),
$obj->CLEARERR($fh), $obj->ERROR($fh), $obj->EOF($fh)

=item EXAMPLES
d29127 1
a29127 1
=item Example - a Hexadecimal Handle
d29131 1
a29131 1
=back
d29133 1
a29133 1
=head2 PerlIO::via::QuotedPrint - PerlIO layer for quoted-printable strings
d29135 1
a29135 1
=over 4
d29137 1
a29137 1
=item SYNOPSIS
d29139 1
a29139 1
=item DESCRIPTION
d29141 1
a29141 1
=item REQUIRED MODULES
d29143 1
a29143 1
=item SEE ALSO
d29145 1
a29145 1
=item ACKNOWLEDGEMENTS
d29147 1
a29147 1
=item COPYRIGHT
d29151 3
a29153 1
=head2 Pod::Checker, podchecker() - check pod documents for syntax errors
d29157 3
a29159 1
=item SYNOPSIS
d29161 1
a29161 1
=item OPTIONS/ARGUMENTS
d29165 1
a29165 1
=item podchecker()
d29167 1
a29167 1
B<-warnings> =E<gt> I<val>
d29171 1
a29171 1
=item DESCRIPTION
d29173 1
a29173 1
=item DIAGNOSTICS
d29175 1
a29175 1
=over 4
d29177 1
a29177 1
=item Errors
d29179 1
a29179 9
empty =headn, =over on line I<N> without closing =back, =item without
previous =over, =back without previous =over, No argument for =begin, =end
without =begin, Nested =begin's, =for without formatter specification,
unresolved internal link I<NAME>, Unknown command "I<CMD>", Unknown
interior-sequence "I<SEQ>", nested commands
I<CMD>E<lt>...I<CMD>E<lt>...E<gt>...E<gt>, garbled entity I<STRING>, Entity
number out of range, malformed link LE<lt>E<gt>, nonempty ZE<lt>E<gt>,
empty XE<lt>E<gt>, Spurious text after =pod / =cut, Spurious character(s)
after =back
d29181 1
a29181 1
=item Warnings
d29183 1
a29183 7
multiple occurrence of link target I<name>, line containing nothing but
whitespace in paragraph, file does not start with =head, previous =item has
no contents, preceding non-item paragraph(s), =item type mismatch (I<one>
vs. I<two>), I<N> unescaped C<E<lt>E<gt>> in paragraph, Unknown entity, No
items in =over, No argument for =item, empty section in previous paragraph,
Verbatim paragraph in NAME section, =headI<n> without preceding higher
level
d29185 1
a29185 1
=item Hyperlinks
d29187 1
a29187 2
ignoring leading/trailing whitespace in link, (section) in '$page'
deprecated, alternative text/node '%s' contains non-escaped | or /
d29189 1
a29189 1
=back
d29191 1
a29191 1
=item RETURN VALUE
d29193 1
a29193 3
=item EXAMPLES

=item INTERFACE
d29197 1
a29197 1
C<Pod::Checker-E<gt>new( %options )>
d29199 1
a29199 2
C<$checker-E<gt>poderror( @@args )>, C<$checker-E<gt>poderror( {%opts},
@@args )>
d29201 1
a29201 1
C<$checker-E<gt>num_errors()>
d29203 1
a29203 1
C<$checker-E<gt>num_warnings()>
d29205 2
a29206 1
C<$checker-E<gt>name()>
d29208 1
a29208 1
C<$checker-E<gt>node()>
d29210 2
a29211 1
C<$checker-E<gt>idx()>
d29213 1
a29213 1
C<$checker-E<gt>hyperlink()>
d29215 1
a29215 1
=over 4
d29219 4
d29225 1
a29225 1
=head2 Pod::Find - find POD documents in directory trees
d29233 1
a29233 1
=back
d29235 1
a29235 1
=over 4
d29237 1
a29237 1
=item C<pod_find( { %opts } , @@directories )>
d29239 1
a29239 2
C<-verbose =E<gt> 1>, C<-perl =E<gt> 1>, C<-script =E<gt> 1>, C<-inc =E<gt>
1>
d29241 1
a29241 1
=back
d29245 3
a29247 1
=item C<simplify_name( $str )>
d29253 1
a29253 1
=item C<pod_where( { %opts }, $pod )>
d29255 1
a29255 2
C<-inc =E<gt> 1>, C<-dirs =E<gt> [ $dir1, $dir2, ... ]>, C<-verbose =E<gt>
1>
d29259 1
a29259 1
=over 4
d29261 1
a29261 1
=item C<contains_pod( $file , $verbose )>
d29263 1
a29263 1
=back
d29265 1
a29265 1
=over 4
d29267 1
a29267 1
=item AUTHOR
d29269 1
a29269 1
=item SEE ALSO
d29271 1
a29271 1
=back
d29273 1
a29273 1
=head2 Pod::Html - module to convert pod files to HTML
d29277 5
a29281 1
=item SYNOPSIS
d29283 1
a29283 1
=item DESCRIPTION
d29285 1
a29285 1
=item ARGUMENTS
d29287 1
a29287 3
backlink, cachedir, css, flush, header, help, hiddendirs, htmldir,
htmlroot, index, infile, libpods, netscape, outfile, podpath, podroot,
quiet, recurse, title, verbose
d29289 1
a29289 1
=item EXAMPLE
d29291 1
a29291 1
=item ENVIRONMENT
d29293 1
a29293 1
=item AUTHOR
d29295 1
a29295 1
=item SEE ALSO
d29297 1
a29297 1
=item COPYRIGHT
d29299 1
a29299 1
=back
d29301 1
a29301 2
=head2 Pod::InputObjects - objects representing POD input paragraphs,
commands, etc.
d29305 1
a29305 1
=item SYNOPSIS
d29307 1
a29307 1
=item REQUIRES
d29309 1
a29309 1
=item EXPORTS
d29311 1
a29311 1
=item DESCRIPTION
d29313 1
a29313 2
package B<Pod::InputSource>, package B<Pod::Paragraph>, package
B<Pod::InteriorSequence>, package B<Pod::ParseTree>
d29315 1
a29315 1
=back
d29317 1
a29317 1
=over 4
d29319 1
a29319 1
=item B<Pod::InputSource>
d29323 3
a29325 1
=over 4
d29327 1
a29327 1
=item B<new()>
d29329 1
a29329 1
=back
d29331 1
a29331 1
=over 4
d29333 1
a29333 1
=item B<name()>
d29335 1
a29335 1
=back
d29339 3
a29341 1
=item B<handle()>
d29345 2
d29349 1
a29349 1
=item B<was_cutting()>
d29351 1
a29351 1
=back
d29353 1
a29353 1
=over 4
d29355 1
a29355 1
=item B<Pod::Paragraph>
d29357 1
a29357 1
=back
d29359 1
a29359 1
=over 4
d29361 2
a29362 1
=item Pod::Paragraph-E<gt>B<new()>
d29368 1
a29368 1
=item $pod_para-E<gt>B<cmd_name()>
d29374 3
a29376 1
=item $pod_para-E<gt>B<text()>
d29382 3
a29384 1
=item $pod_para-E<gt>B<raw_text()>
d29390 3
a29392 1
=item $pod_para-E<gt>B<cmd_prefix()>
d29398 1
a29398 1
=item $pod_para-E<gt>B<cmd_separator()>
d29404 1
a29404 1
=item $pod_para-E<gt>B<parse_tree()>
d29410 1
a29410 1
=item $pod_para-E<gt>B<file_line()>
d29416 1
a29416 1
=item B<Pod::InteriorSequence>
d29422 1
a29422 1
=item Pod::InteriorSequence-E<gt>B<new()>
d29428 1
a29428 1
=item $pod_seq-E<gt>B<cmd_name()>
d29434 1
a29434 1
=item $pod_seq-E<gt>B<prepend()>
d29440 1
a29440 1
=item $pod_seq-E<gt>B<append()>
d29446 1
a29446 1
=item $pod_seq-E<gt>B<nested()>
d29452 1
a29452 1
=item $pod_seq-E<gt>B<raw_text()>
d29458 1
a29458 1
=item $pod_seq-E<gt>B<left_delimiter()>
d29464 5
a29468 1
=item $pod_seq-E<gt>B<right_delimiter()>
d29474 1
a29474 1
=item $pod_seq-E<gt>B<parse_tree()>
d29480 1
a29480 1
=item $pod_seq-E<gt>B<file_line()>
d29486 1
a29486 1
=item Pod::InteriorSequence::B<DESTROY()>
d29492 1
a29492 1
=item B<Pod::ParseTree>
d29498 1
a29498 1
=item Pod::ParseTree-E<gt>B<new()>
d29504 1
a29504 1
=item $ptree-E<gt>B<top()>
d29510 1
a29510 1
=item $ptree-E<gt>B<children()>
d29516 1
a29516 1
=item $ptree-E<gt>B<prepend()>
d29522 1
a29522 1
=item $ptree-E<gt>B<append()>
d29528 1
a29528 1
=item $ptree-E<gt>B<raw_text()>
d29534 1
a29534 1
=item Pod::ParseTree::B<DESTROY()>
d29540 1
a29540 3
=item SEE ALSO

=item AUTHOR
a29543 2
=head2 Pod::LaTeX - Convert Pod data to formatted Latex

d29546 1
a29546 3
=item SYNOPSIS

=item DESCRIPTION
d29552 1
a29552 3
=item OBJECT METHODS

C<initialize>
d29558 1
a29558 3
=item Data Accessors

B<AddPreamble>
d29562 1
a29562 1
B<AddPostamble>
d29564 1
a29564 1
B<Head1Level>
d29566 1
a29566 1
B<Label>
d29568 1
a29568 1
B<LevelNoNum>
d29570 1
a29570 1
B<MakeIndex>
d29572 1
a29572 1
B<ReplaceNAMEwithSection>
d29574 1
a29574 1
B<StartWithNewPage>
d29576 1
a29576 1
B<TableOfContents>
d29578 1
a29578 1
B<UniqueLabels>
d29580 1
a29580 1
B<UserPreamble>
d29582 1
a29582 7
B<UserPostamble>

B<Lists>

=over 4

=item Subclassed methods
d29586 1
a29586 1
B<begin_pod>
d29588 1
a29588 1
B<end_pod>
d29590 1
a29590 1
B<command>
d29592 1
a29592 1
B<verbatim>
d29594 1
a29594 1
B<textblock>
d29596 1
a29596 1
B<interior_sequence>
d29598 1
a29598 5
=over 4

=item List Methods

B<begin_list>
d29602 1
a29602 3
B<end_list>

B<add_item>
d29606 1
a29606 1
=item Methods for headings
d29608 1
a29608 1
B<head>
d29610 1
a29610 1
=back
d29612 1
a29612 1
=over 4
d29614 1
a29614 1
=item Internal methods
d29616 1
a29616 1
B<_output>
d29620 1
a29620 1
B<_replace_special_chars>
d29622 1
a29622 1
B<_replace_special_chars_late>
d29624 1
a29624 1
B<_create_label>
d29626 1
a29626 1
B<_create_index>
d29628 1
a29628 7
B<_clean_latex_commands>

B<_split_delimited>

=over 4

=item NOTES
d29632 1
a29632 1
=item AUTHORS
d29634 1
a29634 3
=item COPYRIGHT

=item REVISION
d29638 1
a29638 1
=head2 Pod::Man - Convert POD data to formatted *roff input
d29646 1
a29646 2
center, date, fixed, fixedbold, fixeditalic, fixedbolditalic, name, quotes,
release, section
d29648 1
a29648 12
=item DIAGNOSTICS

roff font should be 1 or 2 chars, not "%s", Invalid link %s, Invalid quote
specification "%s", %s:%d: Unknown command paragraph "%s", %s:%d: Unknown
escape EE<lt>%sE<gt>, %s:%d: Unknown formatting code %s, %s:%d: Unmatched
=back

=item BUGS

=item CAVEATS

=item SEE ALSO
a29651 2
=item COPYRIGHT AND LICENSE

d29654 1
a29654 1
=head2 Pod::ParseLink - Parse an LE<lt>E<gt> formatting code in POD text
d29664 2
a29667 2
=item COPYRIGHT AND LICENSE

d29670 1
a29670 1
=head2 Pod::ParseUtils - helpers for POD parsing and conversion
d29678 1
a29678 1
=back
d29680 1
a29680 1
=over 4
d29682 1
a29682 1
=item Pod::List
d29684 1
a29684 1
Pod::List-E<gt>new()
d29688 1
a29688 1
$list-E<gt>file()
d29690 1
a29690 1
$list-E<gt>start()
d29692 1
a29692 1
$list-E<gt>indent()
d29694 1
a29694 1
$list-E<gt>type()
d29696 1
a29696 1
$list-E<gt>rx()
d29698 1
a29698 1
$list-E<gt>item()
d29700 1
a29700 1
$list-E<gt>parent()
d29702 1
a29702 1
$list-E<gt>tag()
d29706 1
a29706 1
=item Pod::Hyperlink
d29708 1
a29708 1
Pod::Hyperlink-E<gt>new()
d29710 1
a29710 1
=back
d29712 1
a29712 1
$link-E<gt>parse($string)
d29714 1
a29714 1
$link-E<gt>markup($string)
d29716 1
a29716 1
$link-E<gt>text()
d29718 1
a29718 1
$link-E<gt>warning()
d29720 1
a29720 1
$link-E<gt>file(), $link-E<gt>line()
d29722 1
a29722 1
$link-E<gt>page()
d29724 1
a29724 1
$link-E<gt>node()
d29726 1
a29726 1
$link-E<gt>alttext()
d29728 1
a29728 1
$link-E<gt>type()
d29730 2
a29731 1
$link-E<gt>link()
d29733 1
a29733 1
=over 4
d29735 1
a29735 11
=item Pod::Cache

Pod::Cache-E<gt>new()

=back

$cache-E<gt>item()

$cache-E<gt>find_page($name)

=over 4
d29737 1
a29737 1
=item Pod::Cache::Item
d29739 1
a29739 1
Pod::Cache::Item-E<gt>new()
d29743 1
a29743 1
$cacheitem-E<gt>page()
d29745 1
a29745 1
$cacheitem-E<gt>description()
d29747 1
a29747 1
$cacheitem-E<gt>path()
d29749 1
a29749 1
$cacheitem-E<gt>file()
d29751 1
a29751 1
$cacheitem-E<gt>nodes()
d29753 1
a29753 1
$cacheitem-E<gt>find_node($name)
d29755 1
a29755 3
$cacheitem-E<gt>idx()

=over 4
d29763 2
a29764 1
=head2 Pod::Parser - base class for creating POD filters and translators
d29776 1
a29776 1
=item QUICK OVERVIEW
d29778 1
a29778 4
=item PARSING OPTIONS

B<-want_nonPODs> (default: unset), B<-process_cut_cmd> (default: unset),
B<-warnings> (default: unset)
d29784 1
a29784 1
=item RECOMMENDED SUBROUTINE/METHOD OVERRIDES
d29790 1
a29790 3
=item B<command()>

C<$cmd>, C<$text>, C<$line_num>, C<$pod_para>
d29796 1
a29796 3
=item B<verbatim()>

C<$text>, C<$line_num>, C<$pod_para>
d29802 1
a29802 3
=item B<textblock()>

C<$text>, C<$line_num>, C<$pod_para>
d29808 1
a29808 1
=item B<interior_sequence()>
d29814 1
a29814 1
=item OPTIONAL SUBROUTINE/METHOD OVERRIDES
d29820 1
a29820 1
=item B<new()>
d29826 1
a29826 1
=item B<initialize()>
d29832 3
a29834 1
=item B<begin_pod()>
d29840 1
a29840 1
=item B<begin_input()>
d29846 1
a29846 1
=item B<end_input()>
d29852 1
a29852 1
=item B<end_pod()>
d29858 1
a29858 1
=item B<preprocess_line()>
d29864 3
a29866 1
=item B<preprocess_paragraph()>
d29870 2
d29874 5
a29878 1
=item METHODS FOR PARSING AND PROCESSING
d29880 8
a29887 1
=back
d29889 1
a29889 1
=over 4
d29891 4
a29894 1
=item B<parse_text()>
d29896 1
a29896 3
B<-expand_seq> =E<gt> I<code-ref>|I<method-name>, B<-expand_text> =E<gt>
I<code-ref>|I<method-name>, B<-expand_ptree> =E<gt>
I<code-ref>|I<method-name>
d29898 1
a29898 1
=back
d29900 1
a29900 1
=over 4
d29902 1
a29902 1
=item B<interpolate()>
d29906 2
d29910 3
a29912 1
=item B<parse_paragraph()>
d29914 1
a29914 1
=back
d29916 1
a29916 1
=over 4
d29918 1
a29918 1
=item B<parse_from_filehandle()>
d29922 2
d29926 1
a29926 1
=item B<parse_from_file()>
d29928 1
a29928 1
=back
d29930 1
a29930 1
=over 4
d29932 1
a29932 1
=item ACCESSOR METHODS
d29934 1
a29934 1
=back
d29936 1
a29936 1
=over 4
d29938 1
a29938 1
=item B<errorsub()>
d29942 2
d29946 3
a29948 1
=item B<cutting()>
d29950 1
a29950 1
=back
d29952 1
a29952 1
=over 4
d29954 1
a29954 1
=item B<parseopts()>
d29958 2
d29962 3
a29964 1
=item B<output_file()>
d29966 1
a29966 1
=back
d29968 1
a29968 1
=over 4
d29970 1
a29970 1
=item B<output_handle()>
d29974 2
d29978 5
a29982 1
=item B<input_file()>
d29984 1
a29984 1
=back
d29986 1
a29986 1
=over 4
d29988 1
a29988 1
=item B<input_handle()>
d29990 1
a29990 1
=back
d29992 1
a29992 1
=over 4
d29994 1
a29994 1
=item B<input_streams()>
d29998 3
d30003 1
a30003 1
=item B<top_stream()>
d30005 1
a30005 1
=back
d30009 1
a30009 1
=item PRIVATE METHODS AND DATA
d30013 1
a30013 3
=over 4

=item B<_push_input_stream()>
d30015 7
a30021 1
=back
d30025 10
a30034 1
=item B<_pop_input_stream()>
d30038 1
a30038 1
=over 4
d30040 1
a30040 1
=item TREE-BASED PARSING
d30044 2
d30050 2
a30051 1
=head2 Pod::Perldoc::ToChecker - let Perldoc check Pod for errors
d30067 1
a30067 1
=head2 Pod::Perldoc::ToMan - let Perldoc render Pod as man pages
d30075 1
a30075 1
=item CAVEAT
d30085 1
a30085 1
=head2 Pod::Perldoc::ToNroff - let Perldoc convert Pod to nroff
d30093 14
a30106 1
=item CAVEAT
d30116 2
a30117 1
=head2 Pod::Perldoc::ToPod - let Perldoc render Pod as ... Pod!
d30125 3
d30136 2
a30137 1
=head2 Pod::Perldoc::ToRtf - let Perldoc render Pod as RTF
d30145 5
d30158 2
a30159 1
=head2 Pod::Perldoc::ToText - let Perldoc render Pod as plaintext
d30167 1
a30167 1
=item CAVEAT
d30177 1
a30177 1
=head2 Pod::Perldoc::ToTk - let Perldoc use Tk::Pod to render Pod
d30185 3
d30190 2
d30196 1
a30196 1
=head2 Pod::Perldoc::ToXml - let Perldoc render Pod as XML
d30204 12
d30224 1
a30224 1
=head2 Pod::PlainText - Convert POD data to formatted ASCII text
d30232 1
a30232 1
alt, indent, loose, sentence, width
d30234 1
a30234 1
=item DIAGNOSTICS
d30236 7
a30242 2
Bizarre space in item, Can't open %s for reading: %s, Unknown escape: %s,
Unknown sequence: %s, Unmatched =back
d30244 1
a30244 1
=item RESTRICTIONS
d30246 1
a30246 7
=item NOTES

=item SEE ALSO

=item AUTHOR

=back
d30248 1
a30248 1
=head2 Pod::Plainer - Perl extension for converting Pod to old style Pod.
d30250 1
a30250 1
=over 4
d30252 1
a30252 1
=item SYNOPSIS
d30254 1
a30254 1
=item DESCRIPTION
d30256 1
a30256 1
=over 4
d30258 1
a30258 1
=item EXPORT
d30268 2
a30269 2
=head2 Pod::Select, podselect() - extract selected sections of POD from
input
a30274 4
=item REQUIRES

=item EXPORTS

d30277 1
a30277 1
=item SECTION SPECIFICATIONS
d30279 13
a30291 1
=item RANGE SPECIFICATIONS
d30293 1
a30293 1
=back
d30295 17
a30311 1
=over 4
d30313 1
a30313 1
=item OBJECT METHODS
d30315 1
a30315 1
=back
d30317 1
a30317 3
=over 4

=item B<curr_headings()>
d30321 1
a30321 5
=over 4

=item B<select()>

=back
d30325 1
a30325 1
=item B<add_selection()>
d30327 1
a30327 1
=back
d30329 1
a30329 1
=over 4
d30331 1
a30331 1
=item B<clear_selections()>
d30333 1
a30333 5
=back

=over 4

=item B<match_section()>
d30337 1
a30337 5
=over 4

=item B<is_selected()>

=back
d30341 1
a30341 1
=item EXPORTED FUNCTIONS
d30343 1
a30343 1
=back
d30345 1
a30345 1
=over 4
d30347 1
a30347 1
=item B<podselect()>
d30349 1
a30349 1
B<-output>, B<-sections>, B<-ranges>
d30353 2
d30357 1
a30357 1
=item PRIVATE METHODS AND DATA
d30359 1
a30359 1
=back
d30361 1
a30361 1
=over 4
d30363 1
a30363 1
=item B<_compile_section_spec()>
d30365 1
a30365 1
=back
d30367 1
a30367 1
=over 4
d30369 1
a30369 1
=item $self->{_SECTION_HEADINGS}
d30373 3
d30378 3
a30380 1
=item $self->{_SELECTED_SECTIONS}
d30382 1
a30382 1
=back
d30384 1
a30384 1
=over 4
d30388 2
d30407 1
a30407 5
%s, Invalid quote specification "%s", %s:%d: Unknown command paragraph: %s,
%s:%d: Unknown escape: %s, %s:%d: Unknown formatting code: %s, %s:%d:
Unmatched =back

=item RESTRICTIONS
d30484 1
a30484 1
C<-message>, C<-msg>, C<-exitval>, C<-verbose>, C<-section>, C<-output>,
d30501 1
a30501 1
=item ACKNOWLEDGEMENTS
d30574 2
d30630 2
d30719 5
d30821 4
a30824 2
B<setlogsock($sock_type, $stream_location)> (added in 5.004_02),
B<closelog()>
d30840 9
a30848 8
Invalid argument passed to setlogsock, no connection to syslog available,
stream passed to setlogsock, but %s is not writable, stream passed to
setlogsock, but could not find any device, tcp passed to setlogsock, but
tcp service unavailable, syslog: expecting argument %s, syslog: invalid
level/facility: %s, syslog: too many levels given: %s, syslog: too many
facilities given: %s, syslog: level must be given, udp passed to
setlogsock, but udp service unavailable, unix passed to setlogsock, but
path not available
d30852 13
a30864 1
=item AUTHOR
d30871 3
a30873 1
tracker, Search CPAN
d30897 4
a30900 2
B<setlogsock($sock_type, $stream_location)> (added in 5.004_02),
B<closelog()>
d30916 9
a30924 8
Invalid argument passed to setlogsock, no connection to syslog available,
stream passed to setlogsock, but %s is not writable, stream passed to
setlogsock, but could not find any device, tcp passed to setlogsock, but
tcp service unavailable, syslog: expecting argument %s, syslog: invalid
level/facility: %s, syslog: too many levels given: %s, syslog: too many
facilities given: %s, syslog: level must be given, udp passed to
setlogsock, but udp service unavailable, unix passed to setlogsock, but
path not available
d30928 13
a30940 1
=item AUTHOR
d30947 18
a30964 1
tracker, Search CPAN
d31082 117
d31300 3
a31302 1
B<maybe_regex>
d31304 1
a31304 1
B<cmp_ok>
d31308 2
d31318 12
d31354 2
d31429 1
a31429 1
=item Methods
d31503 1
a31503 2
B<Failed Test>, B<Stat>, B<Wstat>, B<Total>, B<Fail>, B<Failed>, B<List of
Failed>
d31505 5
a31509 1
=item Functions
d31511 1
a31511 1
B<runtests>
d31517 1
a31517 1
B<_all_ok>
d31519 1
a31519 1
B<_globdir>
d31521 1
a31521 5
B<_run_all_tests>

B<_mk_leader>

B<_leader_width>
d31541 3
a31543 2
C<HARNESS_FILELEAK_IN_DIR>, C<HARNESS_IGNORE_EXITCODE>, C<HARNESS_NOTTY>,
C<HARNESS_PERL>, C<HARNESS_PERL_SWITCHES>, C<HARNESS_VERBOSE>
d31553 7
d31620 1
a31620 51
=item new()

=back

=back

=over 4

=item from_test_line( $line )

=back

=over 4

=item ACCESSORS

ok, number

=back

=head2 Test::Harness::Straps - detailed analysis of test results

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTION

=over 4

=item new()

=back

=back

=over 4

=item $strap->_init

=back

=over 4

=item ANALYSIS

=over 4

=item $strap->analyze( $name, \@@output_lines )
d31628 1
a31628 1
=item $strap->analyze_fh( $name, $test_filehandle )
d31634 3
a31636 1
=item $strap->analyze_file( $test_file )
d31640 3
d31645 1
a31645 1
=item $strap->_command_line( $file )
d31647 1
a31647 1
=back
d31651 1
a31651 1
=item $strap->_command()
a31654 4
=over 4

=item $strap->_switches( $file )

d31659 3
a31661 1
=item $strap->_cleaned_switches( @@switches_from_user )
d31665 2
d31669 3
a31671 1
=item $strap->_INC2PERL5LIB
d31673 1
a31673 1
=back
d31677 1
a31677 1
=item $strap->_filtered_INC()
a31680 4
=over 4

=item $strap->_restore_PERL5LIB()

d31685 1
a31685 1
=item Parsing
d31689 1
a31689 1
=item C<_is_diagnostic>
d31697 1
a31697 1
=item C<_is_header>
d31703 1
a31703 7
=item C<_is_bail_out>

=back

=over 4

=item C<_reset_file_state>
a31708 2
=item Results

d31785 19
d31812 30
d32098 2
d32141 1
a32141 2
=head2 Text::Soundex - Implementation of the Soundex Algorithm as Described
by Knuth
d32153 3
a32155 1
=item AUTHOR
d32168 1
a32168 1
=item BUGS
d32184 1
a32184 1
=item EXAMPLE
d32190 1
a32190 1
=head2 Thread - manipulate threads in Perl (for old code only)
d32194 3
a32196 1
=item CAVEAT
d32205 2
a32206 2
LIST), lock VARIABLE, async BLOCK;, Thread->self, cond_wait VARIABLE,
cond_signal VARIABLE, cond_broadcast VARIABLE, yield
d32210 1
a32210 1
join, eval, detach, equal, tid, flags, done
d32212 3
a32214 1
=item LIMITATIONS
a32249 25
=head2 Thread::Signal - Start a thread which runs signal handlers reliably
(for old code)

=over 4

=item CAVEAT

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=back

=head2 Thread::Specific - thread-specific keys

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

d32337 1
a32337 2
=head2 Tie::Handle, Tie::StdHandle  - base class definitions for tied
handles
d32379 12
d32419 8
a32428 2
=item VERSION

d32474 2
a32475 2
$which ), clock_getres ( $which ), clock_nanosleep ( $which, $seconds,
$flags = 0), clock()
d32485 2
d32511 2
d32515 8
d32537 73
d32612 4
d32668 4
a32671 3
C<< $obj->isa( TYPE ) >>, C<< CLASS->isa( TYPE ) >>, C<isa( VAL, TYPE )>,
C<TYPE>, C<$obj>, C<CLASS>, C<VAL>, C<< $obj->can( METHOD ) >>, C<<
CLASS->can( METHOD ) >>, C<can( VAL, METHOD )>, C<VERSION ( [ REQUIRE ] )>
d32758 3
a32760 3
C<$decomposed_string = decompose($string)>, C<$decomposed_string =
decompose($string, $useCompatMapping)>, C<$reordered_string  =
reorder($string)>, C<$composed_string	= compose($string)>
d32771 13
a32783 7
C<$canonical_decomposed = getCanon($codepoint)>,
C<$compatibility_decomposed = getCompat($codepoint)>,
C<$codepoint_composite = getComposite($codepoint_here, $codepoint_next)>,
C<$combining_class = getCombinClass($codepoint)>, C<$is_exclusion =
isExclusion($codepoint)>, C<$is_singleton = isSingleton($codepoint)>,
C<$is_non_starter_decomposition = isNonStDecomp($codepoint)>,
C<$may_be_composed_with_prev_char = isComp2nd($codepoint)>
d32799 1
d32860 12
d32954 182
d33164 3
a33166 3
Can't find '%s' symbol in %s, Can't load '%s' for module %s: %s, Undefined
symbols present after loading %s: %s, XSLoader::load('Your::Module',
$Your::Module::VERSION)
@


1.10
log
@sync in-tree perl with 5.8.6
@
text
@d160 1
d165 1
d170 4
d178 1
d191 1
d204 1
d217 1
d230 1
d687 8
a694 3
Discontinuance, Deprecation, BugFix, Discontinuance, Discontinuance,
Discontinuance, BugFix, Discontinuance, Discontinuance, BugFix,
Discontinuance, Deprecation, Discontinuance, Discontinuance
d698 3
a700 1
Parsing, Parsing, Parsing, Parsing, Parsing
d704 3
a706 1
Numerical, Numerical, Numerical, Bitwise string ops
d710 5
a714 2
(Arrays), (Arrays), (Hashes), (Globs), (Globs), (Scalar String),
(Constants), (Scalars), (Variable Suicide)
d718 4
a721 1
(list context), (scalar context), (scalar context), (list, builtin)
d725 5
a729 2
Precedence, Precedence, Precedence, Precedence, Precedence, Precedence,
Precedence
d733 6
a738 3
Regular Expression, Regular Expression, Regular Expression, Regular
Expression, Regular Expression, Regular Expression, Regular Expression,
Regular Expression, Regular Expression
d742 3
a744 1
(Signals), (Sort Subroutine), warn() won't let you specify a filehandle
d748 1
a748 1
(SysV), (SysV)
d752 7
a758 2
Interpolation, Interpolation, Interpolation, Interpolation, Interpolation,
Interpolation, Interpolation, Interpolation, Interpolation
d762 3
a764 1
DBM, DBM
d809 2
a810 2
=head2 perlfaq - frequently asked questions about Perl ($Date: 2003/01/31
17:37:17 $)
d873 1
a873 1
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.9 $, $Date:
d888 1
a888 1
=item What are perl4 and perl5?
d922 2
a923 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.9 $,
$Date: 2004/08/09 18:10:16 $)
d931 1
a931 1
=item What machines support Perl?  Where do I get it?
d933 1
a933 1
=item How can I get a binary version of Perl?
d935 1
a935 1
=item I don't have a C compiler on my system.  How can I compile perl?
d937 1
a937 1
=item I copied the Perl binary from one machine to another, but scripts
d966 1
a966 1
=item Where can I buy a commercial version of Perl?
d978 1
a978 1
=head2 perlfaq3 - Programming Tools ($Revision: 1.9 $, $Date: 2003/08/24
d1007 4
a1010 3
Komodo, The Object System, Open Perl IDE, PerlBuilder, visiPerl+, OptiPerl,
GNU Emacs, MicroEMACS, XEmacs, Jed, Elvis, Vile, Vim, Codewright,
MultiEdit, SlickEdit, Bash, Ksh, Tcsh, Zsh, BBEdit and BBEdit Lite, Alpha
a1019 2
=item How can I generate simple menus without using CGI or Tk?

d1049 1
a1049 1
=item Where can I learn about linking C with Perl? [h2xs, xsubpp]
d1051 2
a1052 2
=item I've read perlembed, perlguts, etc., but I can't embed perl in
my C program; what am I doing wrong?
d1064 1
a1064 1
=head2 perlfaq4 - Data Manipulation ($Revision: 1.9 $, $Date: 2003/10/02
a1187 2
a), b), c), d), e)

d1281 1
a1281 1
=head2 perlfaq5 - Files and Formats ($Revision: 1.9 $, $Date: 2003/01/26
d1291 1
d1295 1
d1298 1
d1301 4
d1307 1
d1310 1
d1314 1
d1317 1
d1320 1
d1323 1
d1326 1
d1329 1
d1332 1
d1336 1
d1339 1
d1342 1
d1345 1
d1348 1
d1351 1
d1355 1
d1359 1
d1362 1
d1365 1
d1368 1
d1371 1
d1374 1
d1377 1
d1380 1
d1385 1
d1388 1
d1391 1
d1395 1
d1398 1
d1404 1
d1414 1
a1414 1
=head2 perlfaq6 - Regular Expressions ($Revision: 1.9 $, $Date: 2003/01/03
d1425 2
d1431 1
d1435 1
d1438 2
d1443 2
d1447 1
d1450 1
d1453 1
d1456 1
d1462 2
d1466 1
d1469 1
d1474 1
d1477 2
d1481 1
d1484 1
d1487 1
d1490 1
d1493 1
d1496 2
d1507 1
a1507 1
=head2 perlfaq7 - General Perl Language Issues ($Revision: 1.9 $, $Date:
d1589 1
a1589 1
=head2 perlfaq8 - System Interaction ($Revision: 1.9 $, $Date: 2003/01/26
d1698 2
d1719 1
a1719 1
=head2 perlfaq9 - Networking ($Revision: 1.9 $, $Date: 2003/01/31 17:36:57
d1775 3
a1777 1
=item How do I find out my hostname/domainname/IP address?
d1800 1
d1803 1
d1806 1
d1809 1
d1812 2
d1816 2
d1820 1
d1823 1
d1826 1
d1829 1
d1832 1
d1835 1
d1838 1
d1853 1
d1856 1
d1859 1
d1862 1
d1865 1
d1870 1
d1873 1
d1889 2
a1890 1
=item Operator Precedence and Associativity
d1893 1
d1896 1
d1899 1
d1902 1
d1905 1
d1908 1
d1911 1
d1914 1
d1917 3
d1922 1
d1925 1
d1928 1
d1931 1
d1934 2
d1938 1
d1941 1
d1944 1
d1947 1
d1950 3
d1955 1
d1958 1
d1961 1
d1964 1
d1967 4
d1973 2
d1979 3
d1984 1
d1986 11
a1996 4
?PATTERN?, m/PATTERN/cgimosx, /PATTERN/cgimosx, q/STRING/, C<'STRING'>,
qq/STRING/, "STRING", qr/STRING/imosx, qx/STRING/, `STRING`, qw/STRING/,
s/PATTERN/REPLACEMENT/egimosx, tr/SEARCHLIST/REPLACEMENTLIST/cds,
y/SEARCHLIST/REPLACEMENTLIST/cds, <<EOF
d1999 1
d2001 6
a2006 5
Finding the end, Removal of backslashes before delimiters, Interpolation,
C<<<'EOF'>, C<m''>, C<s'''>, C<tr///>, C<y///>, C<''>, C<q//>, C<"">,
C<``>, C<qq//>, C<qx//>, C<< <file*glob> >>, C<?RE?>, C</RE/>, C<m/RE/>,
C<s/RE/foo/>,, Interpolation of regular expressions, Optimization of
regular expressions
d2009 2
d2013 1
d2016 1
d2019 1
d2022 1
d2025 1
d2028 1
d2045 2
d2049 1
d2052 2
d2056 1
d2061 1
d2064 1
d2067 1
d2070 1
d2073 1
d2076 1
d2079 1
d2082 1
d2099 1
d2101 19
a2119 11
Functions for SCALARs or strings, Regular expressions and pattern matching,
Numeric functions, Functions for real @@ARRAYs, Functions for list data,
Functions for real %HASHes, Input and output functions, Functions for fixed
length data or records, Functions for filehandles, files, or directories,
Keywords related to the control flow of your perl program, Keywords related
to scoping, Miscellaneous functions, Functions for processes and process
groups, Keywords related to perl modules, Keywords related to classes and
object-orientedness, Low-level socket functions, System V interprocess
communication functions, Fetching user and group info, Fetching network
info, Time-related functions, Functions new in perl5, Functions obsoleted
in perl5
d2122 1
d2126 138
a2263 76
-I<X> FILEHANDLE, -I<X> EXPR, -I<X>, abs VALUE, abs, accept
NEWSOCKET,GENERICSOCKET, alarm SECONDS, alarm, atan2 Y,X, bind SOCKET,NAME,
binmode FILEHANDLE, LAYER, binmode FILEHANDLE, bless REF,CLASSNAME, bless
REF, caller EXPR, caller, chdir EXPR, chmod LIST, chomp VARIABLE, chomp(
LIST ), chomp, chop VARIABLE, chop( LIST ), chop, chown LIST, chr NUMBER,
chr, chroot FILENAME, chroot, close FILEHANDLE, close, closedir DIRHANDLE,
connect SOCKET,NAME, continue BLOCK, cos EXPR, cos, crypt PLAINTEXT,SALT,
dbmclose HASH, dbmopen HASH,DBNAME,MASK, defined EXPR, defined, delete
EXPR, die LIST, do BLOCK, do SUBROUTINE(LIST), do EXPR, dump LABEL, dump,
each HASH, eof FILEHANDLE, eof (), eof, eval EXPR, eval BLOCK, exec LIST,
exec PROGRAM LIST, exists EXPR, exit EXPR, exp EXPR, exp, fcntl
FILEHANDLE,FUNCTION,SCALAR, fileno FILEHANDLE, flock FILEHANDLE,OPERATION,
fork, format, formline PICTURE,LIST, getc FILEHANDLE, getc, getlogin,
getpeername SOCKET, getpgrp PID, getppid, getpriority WHICH,WHO, getpwnam
NAME, getgrnam NAME, gethostbyname NAME, getnetbyname NAME, getprotobyname
NAME, getpwuid UID, getgrgid GID, getservbyname NAME,PROTO, gethostbyaddr
ADDR,ADDRTYPE, getnetbyaddr ADDR,ADDRTYPE, getprotobynumber NUMBER,
getservbyport PORT,PROTO, getpwent, getgrent, gethostent, getnetent,
getprotoent, getservent, setpwent, setgrent, sethostent STAYOPEN, setnetent
STAYOPEN, setprotoent STAYOPEN, setservent STAYOPEN, endpwent, endgrent,
endhostent, endnetent, endprotoent, endservent, getsockname SOCKET,
getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob, gmtime EXPR, goto LABEL,
goto EXPR, goto &NAME, grep BLOCK LIST, grep EXPR,LIST, hex EXPR, hex,
import, index STR,SUBSTR,POSITION, index STR,SUBSTR, int EXPR, int, ioctl
FILEHANDLE,FUNCTION,SCALAR, join EXPR,LIST, keys HASH, kill SIGNAL, LIST,
last LABEL, last, lc EXPR, lc, lcfirst EXPR, lcfirst, length EXPR, length,
link OLDFILE,NEWFILE, listen SOCKET,QUEUESIZE, local EXPR, localtime EXPR,
lock THING, log EXPR, log, lstat EXPR, lstat, m//, map BLOCK LIST, map
EXPR,LIST, mkdir FILENAME,MASK, mkdir FILENAME, msgctl ID,CMD,ARG, msgget
KEY,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, msgsnd ID,MSG,FLAGS, my EXPR, my
TYPE EXPR, my EXPR : ATTRS, my TYPE EXPR : ATTRS, next LABEL, next, no
Module VERSION LIST, no Module VERSION, no Module LIST, no Module, oct
EXPR, oct, open FILEHANDLE,EXPR, open FILEHANDLE,MODE,EXPR, open
FILEHANDLE,MODE,EXPR,LIST, open FILEHANDLE,MODE,REFERENCE, open FILEHANDLE,
opendir DIRHANDLE,EXPR, ord EXPR, ord, our EXPR, our EXPR TYPE, our EXPR :
ATTRS, our TYPE EXPR : ATTRS, pack TEMPLATE,LIST, package NAMESPACE,
package, pipe READHANDLE,WRITEHANDLE, pop ARRAY, pop, pos SCALAR, pos,
print FILEHANDLE LIST, print LIST, print, printf FILEHANDLE FORMAT, LIST,
printf FORMAT, LIST, prototype FUNCTION, push ARRAY,LIST, q/STRING/,
qq/STRING/, qr/STRING/, qx/STRING/, qw/STRING/, quotemeta EXPR, quotemeta,
rand EXPR, rand, read FILEHANDLE,SCALAR,LENGTH,OFFSET, read
FILEHANDLE,SCALAR,LENGTH, readdir DIRHANDLE, readline EXPR, readlink EXPR,
readlink, readpipe EXPR, recv SOCKET,SCALAR,LENGTH,FLAGS, redo LABEL, redo,
ref EXPR, ref, rename OLDNAME,NEWNAME, require VERSION, require EXPR,
require, reset EXPR, reset, return EXPR, return, reverse LIST, rewinddir
DIRHANDLE, rindex STR,SUBSTR,POSITION, rindex STR,SUBSTR, rmdir FILENAME,
rmdir, s///, scalar EXPR, seek FILEHANDLE,POSITION,WHENCE, seekdir
DIRHANDLE,POS, select FILEHANDLE, select, select RBITS,WBITS,EBITS,TIMEOUT,
semctl ID,SEMNUM,CMD,ARG, semget KEY,NSEMS,FLAGS, semop KEY,OPSTRING, send
SOCKET,MSG,FLAGS,TO, send SOCKET,MSG,FLAGS, setpgrp PID,PGRP, setpriority
WHICH,WHO,PRIORITY, setsockopt SOCKET,LEVEL,OPTNAME,OPTVAL, shift ARRAY,
shift, shmctl ID,CMD,ARG, shmget KEY,SIZE,FLAGS, shmread ID,VAR,POS,SIZE,
shmwrite ID,STRING,POS,SIZE, shutdown SOCKET,HOW, sin EXPR, sin, sleep
EXPR, sleep, socket SOCKET,DOMAIN,TYPE,PROTOCOL, socketpair
SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, sort SUBNAME LIST, sort BLOCK LIST,
sort LIST, splice ARRAY,OFFSET,LENGTH,LIST, splice ARRAY,OFFSET,LENGTH,
splice ARRAY,OFFSET, splice ARRAY, split /PATTERN/,EXPR,LIMIT, split
/PATTERN/,EXPR, split /PATTERN/, split, sprintf FORMAT, LIST, format
parameter index, flags, vector flag, (minimum) width, precision, or maximum
width, size, order of arguments, sqrt EXPR, sqrt, srand EXPR, srand, stat
FILEHANDLE, stat EXPR, stat, study SCALAR, study, sub NAME BLOCK, sub NAME
(PROTO) BLOCK, sub NAME : ATTRS BLOCK, sub NAME (PROTO) : ATTRS BLOCK,
substr EXPR,OFFSET,LENGTH,REPLACEMENT, substr EXPR,OFFSET,LENGTH, substr
EXPR,OFFSET, symlink OLDFILE,NEWFILE, syscall NUMBER, LIST, sysopen
FILEHANDLE,FILENAME,MODE, sysopen FILEHANDLE,FILENAME,MODE,PERMS, sysread
FILEHANDLE,SCALAR,LENGTH,OFFSET, sysread FILEHANDLE,SCALAR,LENGTH, sysseek
FILEHANDLE,POSITION,WHENCE, system LIST, system PROGRAM LIST, syswrite
FILEHANDLE,SCALAR,LENGTH,OFFSET, syswrite FILEHANDLE,SCALAR,LENGTH,
syswrite FILEHANDLE,SCALAR, tell FILEHANDLE, tell, telldir DIRHANDLE, tie
VARIABLE,CLASSNAME,LIST, tied VARIABLE, time, times, tr///, truncate
FILEHANDLE,LENGTH, truncate EXPR,LENGTH, uc EXPR, uc, ucfirst EXPR,
ucfirst, umask EXPR, umask, undef EXPR, undef, unlink LIST, unlink, unpack
TEMPLATE,EXPR, untie VARIABLE, unshift ARRAY,LIST, use Module VERSION LIST,
use Module VERSION, use Module LIST, use Module, use VERSION, utime LIST,
values HASH, vec EXPR,OFFSET,BITS, wait, waitpid PID,FLAGS, wantarray, warn
LIST, write FILEHANDLE, write EXPR, write, y///
d2428 1
d2431 1
d2434 1
d2436 8
a2443 5
C<=head1 I<Heading Text>>, C<=head2 I<Heading Text>>, C<=head3 I<Heading
Text>>, C<=head4 I<Heading Text>>, C<=over I<indentlevel>>, C<=item
I<stuff...>>, C<=back>, C<=cut>, C<=pod>, C<=begin I<formatname>>, C<=end
I<formatname>>, C<=for I<formatname> I<text...>>, C<=encoding
I<encodingname>>
d2446 2
d2449 14
a2462 6
C<IE<lt>textE<gt>> -- italic text, C<BE<lt>textE<gt>> -- bold text,
C<CE<lt>codeE<gt>> -- code text, C<LE<lt>nameE<gt>> -- a hyperlink,
C<EE<lt>escapeE<gt>> -- a character escape, C<FE<lt>filenameE<gt>> -- used
for filenames, C<SE<lt>textE<gt>> -- text contains non-breaking spaces,
C<XE<lt>topic nameE<gt>> -- an index entry, C<ZE<lt>E<gt>> -- a null
(zero-effect) formatting code
d2465 1
d2468 1
d2472 2
d2533 1
d2538 1
d2541 1
d2543 7
a2549 4
B<-0>[I<octal/hexadecimal>], B<-a>, B<-C [I<number/list>]>, B<-c>, B<-d>,
B<-d:>I<foo[=bar,baz]>, B<-D>I<letters>, B<-D>I<number>, B<-e>
I<commandline>, B<-F>I<pattern>, B<-h>, B<-i>[I<extension>],
B<-I>I<directory>, B<-l>[I<octnum>], B<-m>[B<->]I<module>,
d2551 4
a2554 3
B<-[mM]>[B<->]I<module=arg[,arg]...>, B<-n>, B<-p>, B<-P>, B<-s>, B<-S>,
B<-t>, B<-T>, B<-u>, B<-U>, B<-v>, B<-V>, B<-V:>I<configvar>, B<-w>, B<-W>,
B<-X>, B<-x>, B<-x> I<directory>
d2559 1
d2561 14
a2574 7
HOME, LOGDIR, PATH, PERL5LIB, PERL5OPT, PERLIO, :bytes, :crlf, :mmap,
:perlio, :pop, :raw, :stdio, :unix, :utf8, :win32, PERLIO_DEBUG, PERLLIB,
PERL5DB, PERL5SHELL (specific to the Win32 port), PERL_ALLOW_NON_IFS_LSP
(specific to the Win32 port), PERL_DEBUG_MSTATS, PERL_DESTRUCT_LEVEL,
PERL_DL_NONLAZY, PERL_ENCODING, PERL_HASH_SEED, PERL_HASH_SEED_DEBUG,
PERL_ROOT (specific to the VMS port), PERL_SIGNALS, PERL_UNICODE, SYS$LOGIN
(specific to the VMS port)
d2600 1
a2600 1
B<-w>, B<-W>, B<-X>
d2605 1
d2608 1
d2611 1
d2635 34
a2668 11
h, h [command], h h, p expr, x [maxdepth] expr, V [pkg [vars]], X [vars], y
[level [vars]], T, s [expr], n [expr], r, <CR>, c [line|sub], l, l
min+incr, l min-max, l line, l subname, -, v [line], f filename, /pattern/,
?pattern?, L [abw], S [[!]regex], t, t expr, b, b [line] [condition], b
subname [condition], b postpone subname [condition], b load filename, b
compile subname, B line, B *, a [line] command, A line, A *, w expr, W
expr, W *, o, o booloption .., o anyoption? .., o option=value .., < ?, < [
command ], < *, << command, > ?, > command, > *, >> command, { ?, { [
command ], { *, {{ command, ! number, ! -number, ! pattern, !! cmd, source
file, H -number, q or ^D, R, |dbcmd, ||dbcmd, command, m expr, M, man
[manpage]
d2672 20
a2691 7
C<recallCommand>, C<ShellBang>, C<pager>, C<tkRunning>, C<signalLevel>,
C<warnLevel>, C<dieLevel>, C<AutoTrace>, C<LineInfo>, C<inhibit_exit>,
C<PrintRet>, C<ornaments>, C<frame>, C<maxTraceLen>, C<windowSize>,
C<arrayDepth>, C<hashDepth>, C<dumpDepth>, C<compactDump>, C<veryCompact>,
C<globPrint>, C<DumpDBFiles>, C<DumpPackages>, C<DumpReused>, C<quote>,
C<HighBit>, C<undefPrint>, C<UsageOnly>, C<TTY>, C<noTTY>, C<ReadLine>,
C<NonStop>
d2695 2
a2696 2
Prompt, Multiline commands, Stack backtrace, Line Listing Format, Frame
listing
d2707 1
d2712 2
d2716 1
d2749 1
a2749 1
C<substr $var, $-[3], $+[3] - $-[3])>, HANDLE->format_name(EXPR),
d2762 3
a2764 3
$PERL_VERSION, $^V, $WARNING, $^W, ${^WARNING_BITS}, $EXECUTABLE_NAME, $^X,
ARGV, $ARGV, @@ARGV, ARGVOUT, @@F, @@INC, @@_, %INC, %ENV, $ENV{expr}, %SIG,
$SIG{expr}
d2782 4
a2785 1
i, m, s, x
d2791 2
a2792 1
[1], [2], [3], cntrl, graph, print, punct, xdigit
d2796 12
a2807 4
C<(?#text)>, C<(?imsx-imsx)>, C<(?:pattern)>, C<(?imsx-imsx:pattern)>,
C<(?=pattern)>, C<(?!pattern)>, C<(?<=pattern)>, C<(?<!pattern)>, C<(?{
code })>, C<(??{ code })>, C<< (?>pattern) >>,
C<(?(condition)yes-pattern|no-pattern)>, C<(?(condition)yes-pattern)>
d2810 1
d2813 1
d2885 9
d2896 4
d2902 2
d2908 1
d2911 2
d2917 1
d2932 1
d2935 1
d2938 1
d2941 1
d2944 1
d2947 1
d2950 1
d2953 1
d2956 1
d2959 2
d2969 1
d2972 1
d2989 1
d2992 1
d2995 1
d2998 1
d3001 1
d3004 1
d3006 1
a3006 1
isa(CLASS), can(METHOD), VERSION( [NEED] )
d3009 1
d3014 2
d3034 1
d3036 2
a3037 2
TIESCALAR classname, LIST, FETCH this, STORE this, value, UNTIE this,
DESTROY this
d3040 1
d3042 7
a3048 5
TIEARRAY classname, LIST, FETCH this, index, STORE this, index, value,
FETCHSIZE this, STORESIZE this, count, EXTEND this, count, EXISTS this,
key, DELETE this, key, CLEAR this, PUSH this, LIST, POP this, SHIFT this,
UNSHIFT this, LIST, SPLICE this, offset, length, LIST, UNTIE this, DESTROY
this
d3051 1
d3053 5
a3057 3
USER, HOME, CLOBBER, LIST, TIEHASH classname, LIST, FETCH this, key, STORE
this, key, value, DELETE this, key, CLEAR this, EXISTS this, key, FIRSTKEY
this, NEXTKEY this, lastkey, SCALAR this, UNTIE this, DESTROY this
d3060 1
d3062 4
a3065 3
TIEHANDLE classname, LIST, WRITE this, LIST, PRINT this, LIST, PRINTF this,
LIST, READ this, LIST, READLINE this, GETC this, CLOSE this, UNTIE this,
DESTROY this
d3068 1
d3071 1
a3543 3
Mailing list: cpan-testers@@perl.org, Testing results:
http://testers.cpan.org/

d3572 13
a3584 25
-I<X> FILEHANDLE, -I<X> EXPR, -I<X>, binmode FILEHANDLE, chmod LIST, chown
LIST, chroot FILENAME, chroot, crypt PLAINTEXT,SALT, dbmclose HASH, dbmopen
HASH,DBNAME,MODE, dump LABEL, exec LIST, exit EXPR, exit, fcntl
FILEHANDLE,FUNCTION,SCALAR, flock FILEHANDLE,OPERATION, fork, getlogin,
getpgrp PID, getppid, getpriority WHICH,WHO, getpwnam NAME, getgrnam NAME,
getnetbyname NAME, getpwuid UID, getgrgid GID, getnetbyaddr ADDR,ADDRTYPE,
getprotobynumber NUMBER, getservbyport PORT,PROTO, getpwent, getgrent,
gethostbyname, gethostent, getnetent, getprotoent, getservent, sethostent
STAYOPEN, setnetent STAYOPEN, setprotoent STAYOPEN, setservent STAYOPEN,
endpwent, endgrent, endhostent, endnetent, endprotoent, endservent,
getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob, ioctl
FILEHANDLE,FUNCTION,SCALAR, kill SIGNAL, LIST, link OLDFILE,NEWFILE, lstat
FILEHANDLE, lstat EXPR, lstat, msgctl ID,CMD,ARG, msgget KEY,FLAGS, msgsnd
ID,MSG,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, open FILEHANDLE,EXPR, open
FILEHANDLE, pipe READHANDLE,WRITEHANDLE, readlink EXPR, readlink, select
RBITS,WBITS,EBITS,TIMEOUT, semctl ID,SEMNUM,CMD,ARG, semget
KEY,NSEMS,FLAGS, semop KEY,OPSTRING, setgrent, setpgrp PID,PGRP,
setpriority WHICH,WHO,PRIORITY, setpwent, setsockopt
SOCKET,LEVEL,OPTNAME,OPTVAL, shmctl ID,CMD,ARG, shmget KEY,SIZE,FLAGS,
shmread ID,VAR,POS,SIZE, shmwrite ID,STRING,POS,SIZE, sockatmark SOCKET,
socketpair SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, stat FILEHANDLE, stat
EXPR, stat, symlink OLDFILE,NEWFILE, syscall LIST, sysopen
FILEHANDLE,FILENAME,MODE,PERMS, system LIST, times, truncate
FILEHANDLE,LENGTH, truncate EXPR,LENGTH, umask EXPR, umask, utime LIST,
wait, waitpid PID,FLAGS
a3587 9
=item CHANGES

v1.48, 02 February 2001, v1.47, 22 March 2000, v1.46, 12 February 2000,
v1.45, 20 December 1999, v1.44, 19 July 1999, v1.43, 24 May 1999, v1.42, 22
May 1999, v1.41, 19 May 1999, v1.40, 11 April 1999, v1.39, 11 February
1999, v1.38, 31 December 1998, v1.37, 19 December 1998, v1.36, 9 September
1998, v1.35, 13 August 1998, v1.33, 06 August 1998, v1.32, 05 August 1998,
v1.30, 03 August 1998, v1.23, 10 July 1998

d3971 1
d3974 1
d3977 1
d3980 1
d3983 1
d3986 3
d4006 5
a4010 4
attributes, attrs, autouse, base, bigint, bignum, bigrat, blib, bytes,
charnames, constant, diagnostics, encoding, fields, filetest, if, integer,
less, lib, locale, open, ops, overload, re, sigtrap, sort, strict, subs,
threads, threads::shared, utf8, vars, vmsish, warnings, warnings::register
d4014 13
a4026 12
AnyDBM_File, Attribute::Handlers, AutoLoader, AutoSplit, B, B::Asmdata,
B::Assembler, B::Bblock, B::Bytecode, B::C, B::CC, B::Concise, B::Debug,
B::Deparse, B::Disassembler, B::Lint, B::Showlex, B::Stackobj, B::Stash,
B::Terse, B::Xref, Benchmark, ByteLoader, CGI, CGI::Apache, CGI::Carp,
CGI::Cookie, CGI::Fast, CGI::Pretty, CGI::Push, CGI::Switch, CGI::Util,
CPAN, CPAN::FirstTime, CPAN::Nox, Carp, Carp::Heavy, Class::ISA,
Class::Struct, Config, Cwd, DB, DB_File, Data::Dumper, Devel::DProf,
Devel::PPPort, Devel::Peek, Devel::SelfStubber, Digest, Digest::MD5,
Digest::base, DirHandle, Dumpvalue, DynaLoader, Encode, Encode::Alias,
Encode::Byte, Encode::CJKConstants, Encode::CN, Encode::CN::HZ,
Encode::Config, Encode::EBCDIC, Encode::Encoder, Encode::Encoding,
Encode::Guess, Encode::JP, Encode::JP::H2Z, Encode::JP::JIS7, Encode::KR,
d4030 1
d4033 4
a4036 3
ExtUtils::MM, ExtUtils::MM_Any, ExtUtils::MM_BeOS, ExtUtils::MM_Cygwin,
ExtUtils::MM_DOS, ExtUtils::MM_MacOS, ExtUtils::MM_NW5, ExtUtils::MM_OS2,
ExtUtils::MM_UWIN, ExtUtils::MM_Unix, ExtUtils::MM_VMS, ExtUtils::MM_Win32,
d4038 7
a4044 6
ExtUtils::MakeMaker::FAQ, ExtUtils::MakeMaker::Tutorial,
ExtUtils::MakeMaker::bytes, ExtUtils::MakeMaker::vmsish,
ExtUtils::Manifest, ExtUtils::Mkbootstrap, ExtUtils::Mksymlists,
ExtUtils::Packlist, ExtUtils::testlib, Fatal, Fcntl, File::Basename,
File::CheckTree, File::Compare, File::Copy, File::DosGlob, File::Find,
File::Glob, File::Path, File::Spec, File::Spec::Cygwin, File::Spec::Epoc,
d4051 3
a4053 3
IO::Socket::UNIX, IPC::Open2, IPC::Open3, IPC::SysV, IPC::SysV::Msg,
IPC::SysV::Semaphore, List::Util, Locale::Constants, Locale::Country,
Locale::Currency, Locale::Language, Locale::Maketext,
d4056 10
a4065 10
Math::BigInt::Calc, Math::BigRat, Math::Complex, Math::Trig, Memoize,
Memoize::AnyDBM_File, Memoize::Expire, Memoize::ExpireFile,
Memoize::ExpireTest, Memoize::NDBM_File, Memoize::SDBM_File,
Memoize::Storable, NDBM_File, NEXT, Net::Cmd, Net::Config, Net::Domain,
Net::FTP, Net::NNTP, Net::Netrc, Net::POP3, Net::Ping, Net::SMTP,
Net::Time, Net::hostent, Net::libnetFAQ, Net::netent, Net::protoent,
Net::servent, O, ODBM_File, Opcode, POSIX, PerlIO, PerlIO::encoding,
PerlIO::scalar, PerlIO::via, PerlIO::via::QuotedPrint, Pod::Checker,
Pod::Find, Pod::Functions, Pod::Html, Pod::InputObjects, Pod::LaTeX,
Pod::Man, Pod::ParseLink, Pod::ParseUtils, Pod::Parser,
d4074 9
a4082 9
Test::Harness::Assert, Test::Harness::Iterator, Test::Harness::Straps,
Test::More, Test::Simple, Test::Tutorial, Text::Abbrev, Text::Balanced,
Text::ParseWords, Text::Soundex, Text::Tabs, Text::Wrap, Thread,
Thread::Queue, Thread::Semaphore, Thread::Signal, Thread::Specific,
Tie::Array, Tie::File, Tie::Handle, Tie::Hash, Tie::Memoize, Tie::RefHash,
Tie::Scalar, Tie::SubstrHash, Time::HiRes, Time::Local, Time::gmtime,
Time::localtime, Time::tm, UNIVERSAL, Unicode::Collate, Unicode::Normalize,
Unicode::UCD, User::grent, User::pwent, Win32, XS::APItest, XS::Typemap,
XSLoader
d4430 187
a4709 10
=item Example of using B<-DL> switch

C<717>, C<002>, C<054>, C<602>, C<702>, C<704>

=item B<-DL> details

C<!!!>, C<!!>, C<!>

=item Limitations of B<-DL> statistics

d5087 2
a5150 2
=item KNOWN PROBLEMS

d5206 1
d5210 3
a5212 1
GIMME, GIMME_V, G_ARRAY, G_DISCARD, G_EVAL, G_NOARGS, G_SCALAR, G_VOID
d5216 6
a5221 3
AvFILL, av_clear, av_delete, av_exists, av_extend, av_fetch, av_fill,
av_len, av_make, av_pop, av_push, av_shift, av_store, av_undef, av_unshift,
get_av, newAV, sortsv
d5225 3
a5227 2
call_argv, call_method, call_pv, call_sv, ENTER, eval_pv, eval_sv,
FREETMPS, LEAVE, SAVETMPS
d5231 3
a5233 1
isALNUM, isALPHA, isDIGIT, isLOWER, isSPACE, isUPPER, toLOWER, toUPPER
d5237 1
a5237 1
perl_clone
d5241 1
a5241 1
CvSTASH, get_cv
d5245 4
a5248 2
cv_undef, load_module, nothreadhook, perl_alloc, perl_construct,
perl_destruct, perl_free, perl_parse, perl_run, require_pv
d5252 2
a5253 1
packlist, pack_cat, unpackstring, unpack_str
d5257 2
a5258 1
PL_modglobal, PL_na, PL_sv_no, PL_sv_undef, PL_sv_yes
d5262 4
a5265 2
GvSV, gv_fetchmeth, gv_fetchmethod, gv_fetchmethod_autoload,
gv_fetchmeth_autoload, gv_stashpv, gv_stashsv
d5269 2
a5270 1
Nullav, Nullch, Nullcv, Nullhv, Nullsv
d5274 12
a5285 6
get_hv, HEf_SVKEY, HeHASH, HeKEY, HeKLEN, HePV, HeSVKEY, HeSVKEY_force,
HeSVKEY_set, HeVAL, HvNAME, hv_clear, hv_clear_placeholders, hv_delete,
hv_delete_ent, hv_exists, hv_exists_ent, hv_fetch, hv_fetch_ent,
hv_iterinit, hv_iterkey, hv_iterkeysv, hv_iternext, hv_iternextsv,
hv_iternext_flags, hv_iterval, hv_magic, hv_scalar, hv_store, hv_store_ent,
hv_undef, newHV
d5289 7
a5295 3
mg_clear, mg_copy, mg_find, mg_free, mg_get, mg_length, mg_magical, mg_set,
SvGETMAGIC, SvLOCK, SvSETMAGIC, SvSetMagicSV, SvSetMagicSV_nosteal,
SvSetSV, SvSetSV_nosteal, SvSHARE, SvUNLOCK
d5299 5
a5303 2
Copy, CopyD, Move, MoveD, New, Newc, Newz, Poison, Renew, Renewc, Safefree,
savepv, savepvn, savesharedpv, StructCopy, Zero, ZeroD
d5307 5
a5311 2
fbm_compile, fbm_instr, form, getcwd_sv, strEQ, strGE, strGT, strLE, strLT,
strNE, strnEQ, strnNE, sv_nolocking, sv_nosharing, sv_nounlocking
d5315 3
a5317 2
grok_bin, grok_hex, grok_number, grok_numeric_radix, grok_oct, scan_bin,
scan_hex, scan_oct
d5321 1
a5321 1
cv_const_sv, newCONSTSUB, newXS
d5325 1
a5325 1
pad_sv
d5329 16
a5344 7
dMARK, dORIGMARK, dSP, EXTEND, MARK, mPUSHi, mPUSHn, mPUSHp, mPUSHu,
mXPUSHi, mXPUSHn, mXPUSHp, mXPUSHu, ORIGMARK, POPi, POPl, POPn, POPp,
POPpbytex, POPpx, POPs, PUSHi, PUSHMARK, PUSHmortal, PUSHn, PUSHp, PUSHs,
PUSHu, PUTBACK, SP, SPAGAIN, XPUSHi, XPUSHmortal, XPUSHn, XPUSHp, XPUSHs,
XPUSHu, XSRETURN, XSRETURN_EMPTY, XSRETURN_IV, XSRETURN_NO, XSRETURN_NV,
XSRETURN_PV, XSRETURN_UNDEF, XSRETURN_UV, XSRETURN_YES, XST_mIV, XST_mNO,
XST_mNV, XST_mPV, XST_mUNDEF, XST_mYES
d5348 3
a5350 1
svtype, SVt_IV, SVt_NV, SVt_PV, SVt_PVAV, SVt_PVCV, SVt_PVHV, SVt_PVMG
d5354 77
a5430 34
get_sv, looks_like_number, newRV_inc, newRV_noinc, NEWSV, newSV, newSViv,
newSVnv, newSVpv, newSVpvf, newSVpvn, newSVpvn_share, newSVrv, newSVsv,
newSVuv, SvCUR, SvCUR_set, SvEND, SvGROW, SvIOK, SvIOKp, SvIOK_notUV,
SvIOK_off, SvIOK_on, SvIOK_only, SvIOK_only_UV, SvIOK_UV, SvIsCOW,
SvIsCOW_shared_hash, SvIV, SvIVx, SvIVX, SvLEN, SvNIOK, SvNIOKp,
SvNIOK_off, SvNOK, SvNOKp, SvNOK_off, SvNOK_on, SvNOK_only, SvNV, SvNVx,
SvNVX, SvOK, SvOOK, SvPOK, SvPOKp, SvPOK_off, SvPOK_on, SvPOK_only,
SvPOK_only_UTF8, SvPV, SvPVbyte, SvPVbytex, SvPVbytex_force,
SvPVbyte_force, SvPVbyte_nolen, SvPVutf8, SvPVutf8x, SvPVutf8x_force,
SvPVutf8_force, SvPVutf8_nolen, SvPVx, SvPVX, SvPV_force, SvPV_force_nomg,
SvPV_nolen, SvREFCNT, SvREFCNT_dec, SvREFCNT_inc, SvROK, SvROK_off,
SvROK_on, SvRV, SvSTASH, SvTAINT, SvTAINTED, SvTAINTED_off, SvTAINTED_on,
SvTRUE, SvTYPE, SvUOK, SvUPGRADE, SvUTF8, SvUTF8_off, SvUTF8_on, SvUV,
SvUVx, SvUVX, sv_2bool, sv_2cv, sv_2io, sv_2iv, sv_2mortal, sv_2nv,
sv_2pvbyte, sv_2pvbyte_nolen, sv_2pvutf8, sv_2pvutf8_nolen, sv_2pv_flags,
sv_2pv_nolen, sv_2uv, sv_backoff, sv_bless, sv_catpv, sv_catpvf,
sv_catpvf_mg, sv_catpvn, sv_catpvn_flags, sv_catpvn_mg, sv_catpvn_nomg,
sv_catpv_mg, sv_catsv, sv_catsv_flags, sv_catsv_mg, sv_catsv_nomg, sv_chop,
sv_clear, sv_cmp, sv_cmp_locale, sv_collxfrm, sv_copypv, sv_dec,
sv_derived_from, sv_eq, sv_force_normal, sv_force_normal_flags, sv_free,
sv_gets, sv_grow, sv_inc, sv_insert, sv_isa, sv_isobject, sv_iv, sv_len,
sv_len_utf8, sv_magic, sv_magicext, sv_mortalcopy, sv_newmortal, sv_newref,
sv_nv, sv_pos_b2u, sv_pos_u2b, sv_pv, sv_pvbyte, sv_pvbyten,
sv_pvbyten_force, sv_pvn, sv_pvn_force, sv_pvn_force_flags, sv_pvutf8,
sv_pvutf8n, sv_pvutf8n_force, sv_reftype, sv_replace, sv_report_used,
sv_reset, sv_rvweaken, sv_setiv, sv_setiv_mg, sv_setnv, sv_setnv_mg,
sv_setpv, sv_setpvf, sv_setpvf_mg, sv_setpviv, sv_setpviv_mg, sv_setpvn,
sv_setpvn_mg, sv_setpv_mg, sv_setref_iv, sv_setref_nv, sv_setref_pv,
sv_setref_pvn, sv_setref_uv, sv_setsv, sv_setsv_flags, sv_setsv_mg,
sv_setsv_nomg, sv_setuv, sv_setuv_mg, sv_taint, sv_tainted, sv_true,
sv_unmagic, sv_unref, sv_unref_flags, sv_untaint, sv_upgrade, sv_usepvn,
sv_usepvn_mg, sv_utf8_decode, sv_utf8_downgrade, sv_utf8_encode,
sv_utf8_upgrade, sv_utf8_upgrade_flags, sv_uv, sv_vcatpvf, sv_vcatpvfn,
sv_vcatpvf_mg, sv_vsetpvf, sv_vsetpvfn, sv_vsetpvf_mg
d5434 13
a5446 6
bytes_from_utf8, bytes_to_utf8, ibcmp_utf8, is_utf8_char, is_utf8_string,
is_utf8_string_loc, pv_uni_display, sv_cat_decode, sv_recode_to_utf8,
sv_uni_display, to_utf8_case, to_utf8_fold, to_utf8_lower, to_utf8_title,
to_utf8_upper, utf8n_to_uvchr, utf8n_to_uvuni, utf8_distance, utf8_hop,
utf8_length, utf8_to_bytes, utf8_to_uvchr, utf8_to_uvuni, uvchr_to_utf8,
uvuni_to_utf8_flags
d5450 4
a5453 2
ax, CLASS, dAX, dITEMS, dXSARGS, dXSI32, items, ix, newXSproto, RETVAL, ST,
THIS, XS, XS_VERSION, XS_VERSION_BOOTCHECK
d5457 1
a5457 1
croak, warn
d5471 1
d5475 1
a5475 1
CvWEAKOUTSIDE
d5479 11
a5489 5
CX_CURPAD_SAVE, CX_CURPAD_SV, PAD_BASE_SV, PAD_CLONE_VARS,
PAD_COMPNAME_FLAGS, PAD_COMPNAME_GEN, PAD_COMPNAME_OURSTASH,
PAD_COMPNAME_PV, PAD_COMPNAME_TYPE, PAD_DUP, PAD_RESTORE_LOCAL,
PAD_SAVE_LOCAL, PAD_SAVE_SETNULLPAD, PAD_SETSV, PAD_SET_CUR,
PAD_SET_CUR_NOSAVE, PAD_SV, PAD_SVl, SAVECLEARSV, SAVECOMPPAD, SAVEPADSV
d5493 1
a5493 1
find_runcv
d5497 3
a5499 2
PL_DBsingle, PL_DBsub, PL_DBtrace, PL_dowarn, PL_last_in_gv, PL_ofs_sv,
PL_rs
d5503 1
a5503 1
is_gv_magical
d5507 1
a5507 1
start_glob
d5511 9
a5519 4
CvPADLIST, cv_clone, cv_dump, do_dump_pad, intro_my, pad_add_anon,
pad_add_name, pad_alloc, pad_block_start, pad_check_dup, pad_findlex,
pad_findmy, pad_fixup_inner_anons, pad_free, pad_leavemy, pad_new,
pad_push, pad_reset, pad_setsv, pad_swipe, pad_tidy, pad_undef
d5523 1
a5523 1
djSP, LVRET
d5527 3
a5529 1
report_uninit, sv_add_arena, sv_clean_all, sv_clean_objs, sv_free_arenas
d5684 1
a5684 1
Startup, Parsing, Optimization, Running
d5726 1
a5726 1
check.utf8, minitest.utf16 test.utf16, test_harness
d5730 2
a5731 1
PERL_CORE=1, PERL_DESTRUCT_LEVEL=2, PERL, PERL_SKIP_TTY_TEST
d5794 1
a5794 1
=item assertions
d5796 1
a5796 3
=item iCOW

=item (?{...}) closures in regexps
d5798 1
a5798 3
=item A re-entrant regexp engine

=item pragmata
d5800 1
a5800 1
=over 4
d5802 1
a5802 1
=item lexical pragmas
d5804 1
a5804 1
=item use less 'memory'
d5808 1
a5808 1
=item prototypes and functions
d5812 3
a5814 1
=item _ prototype character
d5816 1
a5816 1
=item inlining autoloaded constants
d5818 1
a5818 1
=item Finish off lvalue functions
d5820 1
a5820 1
=back
d5822 1
a5822 1
=item Unicode and UTF8
d5824 1
a5824 1
=over 4
d5826 1
a5826 1
=item Implicit Latin 1 => Unicode translation
d5828 1
a5828 1
=item UTF8 caching code
d5830 1
a5830 1
=item Unicode in Filenames
d5832 1
a5832 1
=item Unicode in %ENV
d5836 1
a5836 1
=item Regexps
d5840 11
a5850 1
=item regexp optimiser optional
d5852 1
a5852 1
=item common suffices/prefices in regexps (trie optimization)
d5856 1
a5856 1
=item POD
d5860 1
a5860 1
=item POD -> HTML conversion still sucks
d5862 3
a5864 1
=back
d5866 1
a5866 1
=item Misc medium sized projects
d5868 1
a5868 1
=over 4
d5870 1
a5870 1
=item UNITCHECK
d5872 1
a5872 1
=item optional optimizer
d5874 1
a5874 1
=item You WANT *how* many
d5876 1
a5876 1
=item lexical aliases
d5878 1
a5878 1
=item no 6
d5882 1
a5882 1
=item entersub XS vs Perl
d5884 1
a5884 1
=item @@INC source filter to Filter::Simple
d5886 1
a5886 1
=item bincompat functions
d5888 1
a5888 1
=item Use fchown/fchmod internally
d5890 1
a5890 1
=back
d5892 1
a5892 1
=item Tests
d5894 1
a5894 1
=over 4
d5896 1
a5896 1
=item Make Schwern poorer
d5898 1
a5898 1
=item test B
d5900 1
a5900 1
=item Improve tests for Config.pm
d5902 1
a5902 1
=item common test code for timed bailout
d5906 1
a5906 1
=item Installation
d5910 5
a5914 1
=item compressed man pages
d5916 1
a5916 1
=item Make Config.pm cope with differences between build and installed perl
d5918 1
a5918 1
=item Relocatable perl
d5920 1
a5920 1
=item make HTML install work
d5922 1
a5922 1
=item put patchlevel in -v
d5924 1
a5924 1
=back
d5926 1
a5926 1
=item Incremental things
d5928 1
a5928 1
=over 4
d5930 1
a5930 1
=item autovivification
d5932 1
a5932 1
=item fix tainting bugs
d5934 1
a5934 1
=item Make tainting consistent
d5936 1
a5936 1
=item Dual life everything
d5938 1
a5938 1
=back
d5940 1
a5940 1
=item Vague things
d5942 1
a5942 1
=over 4
d5944 1
a5944 1
=item threads
d5946 1
a5946 1
=item POSIX memory footprint
d5948 1
a5948 1
=item Optimize away @@_
d5950 1
a5950 1
=item switch ops
d5952 1
a5952 1
=item Attach/detach debugger from running program
d5954 1
a5954 1
=item A decent benchmark
d5956 1
a5956 1
=item readpipe(LIST)
d6017 1
a6017 1
=head2 perldelta - what is new for perl v5.8.5
d6055 1
a6055 1
=head2 perl586delta, perldelta - what is new for perl v5.8.5
d6093 1
a6093 1
=head2 perl585delta - what is new for perl v5.8.5
d6103 12
d6121 1
a6121 1
=item Perl's debugger
d6123 1
a6123 1
=item h2ph
d6125 1
a6125 1
=back
d6145 1
a6145 1
=head2 perl584delta - what is new for perl v5.8.4
a6154 12
=over 4

=item Malloc wrapping

=item Unicode Character Database 4.0.1

=item suidperl less insecure

=item format

=back

d6157 1
a6157 11
=over 4

=item Updated modules

Attribute::Handlers, B, Benchmark, CGI, Carp, Cwd, Exporter, File::Find,
IO, IPC::Open3, Local::Maketext, Math::BigFloat, Math::BigInt,
Math::BigRat, MIME::Base64, ODBM_File, POSIX, Shell, Socket, Storable,
Switch, Sys::Syslog, Term::ANSIColor, Time::HiRes, Unicode::UCD, Win32,
base, open, threads, utf8

=back
a6160 4
=item Utility Changes

=item Installation and Configuration Improvements

d6167 1
a6167 3
=item Future Directions

=item Platform Specific Problems
d6175 1
a6175 1
=head2 perl583delta - what is new for perl v5.8.3
d6187 5
a6191 3
CGI, Cwd, Digest, Digest::MD5, Encode, File::Spec, FindBin, List::Util,
Math::BigInt, PodParser, Pod::Perldoc, POSIX, Unicode::Collate,
Unicode::Normalize, Test::Harness, threads::shared
d6193 1
a6193 1
=item Utility Changes
d6195 1
a6195 1
=item New Documentation
d6205 1
a6205 1
=item Configuration and Building
a6208 6
=item Known Problems

=item Future Directions

=item Obituary

d6215 103
a6317 1
=head2 perl582delta - what is new for perl v5.8.2
d7245 2
d7629 2
d8424 1
a8424 1
=head2 perlbeos, README.beos - Perl version 5 on BeOS
d8430 2
d8434 1
a8434 1
=item General Issues with Perl on BeOS
d8436 1
a8436 1
=item BeOS Release-specific Notes
d8438 1
a8438 1
R4 x86, R4 PPC
d8440 1
a8440 1
=item Contact Information
d8442 3
a8444 1
=item Update 2002-05-30
d8446 1
a8446 1
=back
d8585 6
d8593 6
a8598 1
Pathnames, Text/Binary, PerlIO, F<.exe>, C<chown()>, Miscellaneous
d8850 16
d8921 7
a8927 1
=item Updating Panther
d9036 17
d9509 2
a9510 1
DATAMODEL_NATIVE specified", sh: ar: not found
a9549 2
=item LAST MODIFIED

d9798 2
a9799 1
E<lt>nick@@ing-simmons.netE<gt>
d9879 2
a9880 2
Parent-Child threads, Returning objects, Creating threads inside BEGIN
blocks, PERL_OLD_SIGNALS are not threadsafe, will not be
d9978 1
a9978 1
=item OPTIONS
d9982 1
a9982 1
=item MATH LIBRARY
d9984 1
a9984 1
=item INTERNAL FORMAT
d9986 1
a9986 1
=item SIGN
d9988 1
a9988 1
=item METHODS
d9990 1
a9990 1
=item CAVEAT
d10016 1
a10016 1
=item OPTIONS
d10020 1
a10020 1
=item METHODS
d10022 1
a10022 1
=item CAVEAT
d10056 5
a10060 1
=item MODULES USED
d10062 1
a10062 1
=item MATH LIBRARY
d10064 1
a10064 1
=item SIGN
d10066 1
a10066 1
=item METHODS
d10068 1
a10068 1
=item CAVEAT
d10407 1
a10407 1
=head2 overload - Package for overloading perl operations
d11474 2
d11491 1
a11491 1
-any, -compile, -nosticky, -no_undef_params, -no_xhtml, -nph,
d11522 1
a11522 1
(B<-query_string>), B<-base>
d11559 6
d11629 5
d11906 2
a11907 2
install, clean	modules or distributions, get, readme, look module or
distribution, ls author, Signals
d11938 9
a11946 9
CPAN::Distribution::test(), CPAN::Distribution::uptodate(),
CPAN::Index::force_reload(), CPAN::Index::reload(), CPAN::InfoObj::dump(),
CPAN::Module::as_glimpse(), CPAN::Module::as_string(),
CPAN::Module::clean(), CPAN::Module::cpan_file(),
CPAN::Module::cpan_version(), CPAN::Module::cvs_import(),
CPAN::Module::description(), CPAN::Module::force($method,@@args),
CPAN::Module::get(), CPAN::Module::inst_file(),
CPAN::Module::inst_version(), CPAN::Module::install(),
CPAN::Module::look(), CPAN::Module::make(),
d11948 2
a11949 1
CPAN::Module::test(), CPAN::Module::uptodate(), CPAN::Module::userid()
d11982 6
d12006 1
a12006 1
1), 2), 3), 4), 5), 6), 7), 8), 9), 10)
d12028 10
d12194 22
a12215 19
C<d_archlib>, C<d_asctime_r>, C<d_atolf>, C<d_atoll>, C<d_attribut>,
C<d_bcmp>, C<d_bcopy>, C<d_bsd>, C<d_bsdgetpgrp>, C<d_bsdsetpgrp>,
C<d_bzero>, C<d_casti32>, C<d_castneg>, C<d_charvspr>, C<d_chown>,
C<d_chroot>, C<d_chsize>, C<d_class>, C<d_closedir>, C<d_cmsghdr_s>,
C<d_const>, C<d_copysignl>, C<d_crypt>, C<d_crypt_r>, C<d_csh>,
C<d_ctermid_r>, C<d_ctime_r>, C<d_cuserid>, C<d_dbl_dig>,
C<d_dbminitproto>, C<d_difftime>, C<d_dirfd>, C<d_dirnamlen>, C<d_dlerror>,
C<d_dlopen>, C<d_dlsymun>, C<d_dosuid>, C<d_drand48_r>, C<d_drand48proto>,
C<d_dup2>, C<d_eaccess>, C<d_endgrent>, C<d_endgrent_r>, C<d_endhent>,
C<d_endhostent_r>, C<d_endnent>, C<d_endnetent_r>, C<d_endpent>,
C<d_endprotoent_r>, C<d_endpwent>, C<d_endpwent_r>, C<d_endsent>,
C<d_endservent_r>, C<d_eofnblk>, C<d_eunice>, C<d_faststdio>, C<d_fchdir>,
C<d_fchmod>, C<d_fchown>, C<d_fcntl>, C<d_fcntl_can_lock>, C<d_fd_macros>,
C<d_fd_set>, C<d_fds_bits>, C<d_fgetpos>, C<d_finite>, C<d_finitel>,
C<d_flexfnam>, C<d_flock>, C<d_flockproto>, C<d_fork>, C<d_fp_class>,
C<d_fpathconf>, C<d_fpclass>, C<d_fpclassify>, C<d_fpclassl>,
C<d_fpos64_t>, C<d_frexpl>, C<d_fs_data_s>, C<d_fseeko>, C<d_fsetpos>,
C<d_fstatfs>, C<d_fstatvfs>, C<d_fsync>, C<d_ftello>, C<d_ftime>,
C<d_Gconvert>, C<d_getcwd>, C<d_getespwnam>, C<d_getfsstat>, C<d_getgrent>,
d12234 36
a12269 34
C<d_lstat>, C<d_madvise>, C<d_mblen>, C<d_mbstowcs>, C<d_mbtowc>,
C<d_memchr>, C<d_memcmp>, C<d_memcpy>, C<d_memmove>, C<d_memset>,
C<d_mkdir>, C<d_mkdtemp>, C<d_mkfifo>, C<d_mkstemp>, C<d_mkstemps>,
C<d_mktime>, C<d_mmap>, C<d_modfl>, C<d_modfl_pow32_bug>, C<d_modflproto>,
C<d_mprotect>, C<d_msg>, C<d_msg_ctrunc>, C<d_msg_dontroute>, C<d_msg_oob>,
C<d_msg_peek>, C<d_msg_proxy>, C<d_msgctl>, C<d_msgget>, C<d_msghdr_s>,
C<d_msgrcv>, C<d_msgsnd>, C<d_msync>, C<d_munmap>, C<d_mymalloc>,
C<d_nanosleep>, C<d_nice>, C<d_nl_langinfo>, C<d_nv_preserves_uv>,
C<d_off64_t>, C<d_old_pthread_create_joinable>, C<d_oldpthreads>,
C<d_oldsock>, C<d_open3>, C<d_pathconf>, C<d_pause>,
C<d_perl_otherlibdirs>, C<d_phostname>, C<d_pipe>, C<d_poll>,
C<d_portable>, C<d_PRId64>, C<d_PRIeldbl>, C<d_PRIEUldbl>, C<d_PRIfldbl>,
C<d_PRIFUldbl>, C<d_PRIgldbl>, C<d_PRIGUldbl>, C<d_PRIi64>, C<d_PRIo64>,
C<d_PRIu64>, C<d_PRIx64>, C<d_PRIXU64>, C<d_procselfexe>,
C<d_pthread_atfork>, C<d_pthread_attr_setscope>, C<d_pthread_yield>,
C<d_pwage>, C<d_pwchange>, C<d_pwclass>, C<d_pwcomment>, C<d_pwexpire>,
C<d_pwgecos>, C<d_pwpasswd>, C<d_pwquota>, C<d_qgcvt>, C<d_quad>,
C<d_random_r>, C<d_readdir64_r>, C<d_readdir>, C<d_readdir_r>,
C<d_readlink>, C<d_readv>, C<d_recvmsg>, C<d_rename>, C<d_rewinddir>,
C<d_rmdir>, C<d_safebcpy>, C<d_safemcpy>, C<d_sanemcmp>, C<d_sbrkproto>,
C<d_scalbnl>, C<d_sched_yield>, C<d_scm_rights>, C<d_SCNfldbl>,
C<d_seekdir>, C<d_select>, C<d_sem>, C<d_semctl>, C<d_semctl_semid_ds>,
C<d_semctl_semun>, C<d_semget>, C<d_semop>, C<d_sendmsg>, C<d_setegid>,
C<d_seteuid>, C<d_setgrent>, C<d_setgrent_r>, C<d_setgrps>, C<d_sethent>,
C<d_sethostent_r>, C<d_setitimer>, C<d_setlinebuf>, C<d_setlocale>,
C<d_setlocale_r>, C<d_setnent>, C<d_setnetent_r>, C<d_setpent>,
C<d_setpgid>, C<d_setpgrp2>, C<d_setpgrp>, C<d_setprior>,
C<d_setproctitle>, C<d_setprotoent_r>, C<d_setpwent>, C<d_setpwent_r>,
C<d_setregid>, C<d_setresgid>, C<d_setresuid>, C<d_setreuid>, C<d_setrgid>,
C<d_setruid>, C<d_setsent>, C<d_setservent_r>, C<d_setsid>, C<d_setvbuf>,
C<d_sfio>, C<d_shm>, C<d_shmat>, C<d_shmatprototype>, C<d_shmctl>,
C<d_shmdt>, C<d_shmget>, C<d_sigaction>, C<d_sigprocmask>, C<d_sigsetjmp>,
C<d_sockatmark>, C<d_sockatmarkproto>, C<d_socket>, C<d_socklen_t>,
C<d_sockpair>, C<d_socks5_init>, C<d_sqrtl>, C<d_srand48_r>,
d12275 16
a12290 16
C<d_strerror>, C<d_strerror_r>, C<d_strftime>, C<d_strtod>, C<d_strtol>,
C<d_strtold>, C<d_strtoll>, C<d_strtoq>, C<d_strtoul>, C<d_strtoull>,
C<d_strtouq>, C<d_strxfrm>, C<d_suidsafe>, C<d_symlink>, C<d_syscall>,
C<d_syscallproto>, C<d_sysconf>, C<d_sysernlst>, C<d_syserrlst>,
C<d_system>, C<d_tcgetpgrp>, C<d_tcsetpgrp>, C<d_telldir>,
C<d_telldirproto>, C<d_time>, C<d_times>, C<d_tm_tm_gmtoff>,
C<d_tm_tm_zone>, C<d_tmpnam_r>, C<d_truncate>, C<d_ttyname_r>, C<d_tzname>,
C<d_u32align>, C<d_ualarm>, C<d_umask>, C<d_uname>, C<d_union_semun>,
C<d_unordered>, C<d_usleep>, C<d_usleepproto>, C<d_ustat>, C<d_vendorarch>,
C<d_vendorbin>, C<d_vendorlib>, C<d_vendorscript>, C<d_vfork>,
C<d_void_closedir>, C<d_voidsig>, C<d_voidtty>, C<d_volatile>,
C<d_vprintf>, C<d_wait4>, C<d_waitpid>, C<d_wcstombs>, C<d_wctomb>,
C<d_writev>, C<d_xenix>, C<date>, C<db_hashtype>, C<db_prefixtype>,
C<db_version_major>, C<db_version_minor>, C<db_version_patch>,
C<defvoidused>, C<direntrytype>, C<dlext>, C<dlsrc>, C<doublesize>,
C<drand01>, C<drand48_r_proto>, C<dynamic_ext>
d12450 5
a12454 5
C<useithreads>, C<uselargefiles>, C<uselongdouble>, C<usemorebits>,
C<usemultiplicity>, C<usemymalloc>, C<usenm>, C<useopcode>, C<useperlio>,
C<useposix>, C<usereentrant>, C<usesfio>, C<useshrplib>, C<usesocks>,
C<usethreads>, C<usevendorprefix>, C<usevfork>, C<usrinc>, C<uuname>,
C<uvoformat>, C<uvsize>, C<uvtype>, C<uvuformat>, C<uvxformat>,
d12511 2
d12940 53
d13051 13
a13063 1
=item SYNPOSIS
d13067 4
d13136 2
d13158 6
d13166 1
a13166 1
=item AUTHOR
d13168 7
a13174 1
=back
d13215 5
a13219 5
I<CHECK> = Encode::FB_DEFAULT ( == 0), I<CHECK> = Encode::FB_CROAK ( == 1),
I<CHECK> = Encode::FB_QUIET, I<CHECK> = Encode::FB_WARN, perlqq mode
(I<CHECK> = Encode::FB_PERLQQ), HTML charref mode (I<CHECK> =
Encode::FB_HTMLCREF), XML charref mode (I<CHECK> = Encode::FB_XMLCREF), The
bitmask
d13223 1
a13223 1
=item Unimplemented fallback schemes
d13241 2
d13337 2
a13338 1
-E<gt>name, -E<gt>renew, -E<gt>perlio_ok(), -E<gt>needs_lines()
d13592 2
d13661 2
a13662 1
-E<gt>name, -E<gt>renew, -E<gt>perlio_ok(), -E<gt>needs_lines()
d14087 1
a14087 1
eqtime src dst
d14089 1
a14089 1
rm_rf files...
d14091 1
a14091 1
rm_f files...
d14093 1
a14093 1
touch files ..
d14095 1
a14095 1
mv source... destination
d14097 1
a14097 1
cp source... destination
d14099 1
a14099 1
chmod mode files..
d14101 1
a14101 1
mkpath directory..
d14103 3
a14105 1
test_f file
a14108 2
=item BUGS

d14151 28
a14178 1
C_stringify NAME
d14180 1
a14180 1
perl_stringify NAME
d14182 1
a14182 1
constant_types
d14184 1
a14184 1
memEQ_clause NAME, CHECKED_AT, INDENT
d14186 1
a14186 1
assign INDENT, TYPE, PRE, POST, VALUE..
d14188 1
a14188 1
return_clause
d14190 1
a14190 1
switch_clause INDENT, NAMELEN, ITEMHASH, ITEM..
d14194 24
a14217 1
dump_names
d14219 1
a14219 1
dogfood
d14221 1
a14221 2
C_constant, name, type, value, macro, default, pre, post, def_pre =item
def_post, utf8
d14223 1
a14223 1
XS_constant PACKAGE, TYPES, SUBNAME, C_SUBNAME
d14225 1
a14225 1
autoload PACKAGE, VERSION, AUTOLOADER
d14227 1
a14227 1
WriteMakefileSnippet
d14229 2
a14230 2
WriteConstants ATTRIBUTE =E<gt> VALUE [, ...], NAME, DEFAULT_TYPE,
BREAKOUT_AT, NAMES, C_FILE, XS_FILE, SUBNAME, C_SUBNAME
d14234 6
d14371 1
a14371 1
=head2 ExtUtils::MM_Any - Platform-agnostic MM methods
d14379 1
a14379 1
=item Inherently Cross-Platform Methods
d14381 1
a14381 1
installvars
d14385 1
a14385 1
os_flavor_is
d14389 1
a14389 1
=item File::Spec wrappers
d14391 1
a14391 1
catfile
d14395 2
d14399 3
a14401 1
=item Thought To Be Cross-Platform Methods
d14403 1
a14403 1
B<split_command>
d14405 1
a14405 1
=back
d14407 1
a14407 1
B<echo>
d14409 1
a14409 1
init_VERSION
d14411 1
a14411 1
wraplist
d14413 1
a14413 1
manifypods
d14415 1
a14415 1
manifypods_target
d14417 1
a14417 1
makemakerdflt_target
d14419 1
a14419 1
special_targets
d14421 1
a14421 1
POD2MAN_macro
d14423 1
a14423 1
test_via_harness
d14425 1
a14425 1
test_via_script
d14427 1
a14427 1
libscan
d14429 1
a14429 1
tool_autosplit
d14431 1
a14431 1
all_target
d14433 1
a14433 1
metafile_target
d14435 1
a14435 1
metafile_addtomanifest_target
d14439 1
a14439 5
=item Abstract methods

oneliner, B<quote_literal>, B<escape_newlines>, max_exec_len,
B<init_others>, init_DIRFILESEP, init_linker, init_platform,
platform_constants
a14442 2
os_flavor

d14460 1
a14460 1
os_flavor (o)
d14473 1
a14473 1
os_flavor (o)
d14477 1
a14477 1
cflags (o)
d14479 1
a14479 1
replace_manpage_separator (o)
d14511 1
a14511 2
=head2 ExtUtils::MM_MacOS - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d14521 2
a14522 1
maybe_command
d14524 1
a14524 1
guess_name
d14526 1
a14526 1
macify
d14528 1
a14528 1
patternify
d14530 1
a14530 1
init_main
d14532 1
a14532 1
init_others
d14536 1
a14536 1
init_dirscan
d14538 1
a14538 1
init_VERSION (o)
d14540 1
a14540 1
special_targets (o)
d14542 2
a14543 1
static (o)
d14545 1
a14545 1
dlsyms (o)
d14547 1
a14547 1
dynamic (o)
d14549 1
a14549 1
clean (o)
d14551 1
a14551 1
clean_subdirs_target
d14553 1
a14553 1
realclean (o)
d14555 1
a14555 1
realclean_subdirs_target
d14557 1
a14557 3
rulez (o)

processPL (o)
d14561 1
a14561 2
=head2 ExtUtils::MM_NW5 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d14569 1
a14569 1
=back
d14571 1
a14571 1
os_flavor
d14573 1
a14573 1
init_platform (o), platform_constants
d14575 1
a14575 8
const_cccmd (o)

static_lib (o)

dynamic_lib (o)

=head2 ExtUtils::MM_OS2 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d14579 1
a14579 1
=item SYNOPSIS
d14581 1
a14581 5
=item DESCRIPTION

=item METHODS

init_dist (o)
a14584 4
init_linker

os_flavor

d14629 1
a14629 1
os_flavor (o)
a14636 4
clean (o)

clean_subdirs_target

a14646 2
dir_target (o)

a14672 4
distdir

dist_test

a14674 2
dynamic (o)

a14684 6
find_tests

=over 4

=item Methods to actually produce chunks of text for the Makefile

a14686 2
=back

a14700 4
init_INST

init_INSTALL

d14707 1
a14707 1
init_platform (o), platform_constants (o)
d14763 1
a14763 3
realclean (o)

realclean_subdirs_target
d14765 1
a14765 1
replace_manpage_separator
d14767 1
a14767 1
oneliner (o)
d14844 4
a14873 2
tool_sxubpp (override)

a14887 2
dynamic_bs (override)

d14890 1
a14890 7
processPL (override)

installbin (override)

subdir_x (override)

clean (override)
d14892 1
a14892 7
clean_subdirs_target

realclean (override)

zipfile_target (o), tarfile_target (o), shdist_target (o)

dist_test (override)
a14897 6
makefile (override)

find_tests (override)

test (override)

d14904 1
a14904 1
oneliner (o)
d14906 3
a14908 1
B<echo> (o)
d14916 1
a14916 1
init_linker (o)
d14924 30
a14976 2
B<find_tests>

d14981 1
a14981 1
init_platform (o), platform_constants (o)
d14983 1
a14983 1
special_targets (o)
d14985 1
a14985 1
static_lib (o)
d14987 1
a14987 1
dynamic_lib (o)
d14989 1
a14989 1
clean
d14995 3
a14997 1
xs_o (o)
d14999 1
a14999 1
pasthru (o)
d15001 1
a15001 1
oneliner (o)
d15019 1
a15019 1
dist_test
a15024 4
subdir_x

xs_c

d15029 1
a15029 3
clean_subdirs_target

realclean_subdirs_target
d15097 2
a15098 2
PRINT_PREREQ, SITEPREFIX, SKIP, TYPEMAPS, VENDORPREFIX, VERBINST, VERSION,
VERSION_FROM, VERSION_SYM, XS, XSOPT, XSPROTOARG, XS_VERSION
d15109 1
a15109 1
C<<MAN3PODS => ' '>>
d15131 1
a15131 1
PERL_MM_OPT, PERL_MM_USE_DEFAULT
d15141 1
a15141 2
=head2 ExtUtils::MakeMaker::FAQ - Frequently Asked Questions About
MakeMaker
d15145 2
d15149 15
a15163 1
=over 4
d15167 1
a15167 1
Why not just use <insert other build config tool here>?, What's
d15215 1
a15215 1
=head2 ExtUtils::MakeMaker::bytes - Version agnostic bytes.pm
d15225 1
a15225 1
=head2 ExtUtils::MakeMaker::vmsish - Platform agnostic vmsish.pm
d15393 2
a15394 1
=head2 File::Basename, fileparse - split a pathname into pieces
d15402 3
a15404 1
fileparse_set_fstype, fileparse
d15406 7
a15412 1
=item EXAMPLES
d15414 1
a15414 1
C<basename>, C<dirname>
d15540 6
d15550 2
d15558 2
d15596 2
d15616 6
a15629 2
=item AUTHORS

d15636 4
d15658 2
d15710 2
d15726 2
d15781 2
a15794 10
eliminate_macros

=back

fixpath

=over 4

=item Methods always loaded

d15799 1
a15799 1
catdir
d15801 1
a15801 1
catfile
d15831 2
d15869 2
d15889 1
a15889 1
=item OO INTERFACE
d15897 2
d15955 2
d15967 2
d15977 4
d16057 2
a16058 1
C<"code">, C<"executable">, C<"quotelike">, C<"string">, C<"regex">,
d16065 2
a16066 3
component filter behaves slightly differently from the other partial
filters
described in the previous section.
d16209 1
a16209 1
=item Storing options in a hash
d16226 1
a16226 1
prefix_pattern, debug (default: disabled)
d16608 4
a16611 1
open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS )
d16849 4
a16852 1
open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS )
d17533 2
a17534 1
Premature end of base64 data, Premature padding of base64 data
d17605 7
a17611 1
=item EXAMPLES
d17613 1
a17613 1
  # not ready yet
d17629 1
a17629 1
stringify, bstr(), bdiv, Modifying and =, bpow
d17639 1
a17639 1
=head2 Math::BigInt - Arbitrary size integer math package
d17675 2
a17676 2
	$x->is_pos();			# true if >= 0
	$x->is_neg();			# true if <  0
d17783 4
d17882 10
d17904 1
a17904 1
=head2 Math::BigRat - arbitrarily big rational numbers
d17932 5
a17936 1
=item as_number()
d17950 1
a17950 1
=item is_positive()
d17952 1
a17952 1
=item is_negative()
d18001 1
a18001 1
=item STRINGIFICATION
d20373 2
a20374 2
C<-message>, C<-msg>, C<-exitval>, C<-verbose>, C<-output>, C<-input>,
C<-pathlist>
d20589 1
a20589 1
I<serialized>, ..
d20684 1
a20684 2
=head2 Syslog, Sys::Syslog, openlog, closelog, setlogmask, syslog - Perl
interface to the UNIX syslog(3) calls
d20688 2
d20694 9
a20702 3
openlog $ident, $logopt, $facility, syslog $priority, $format, @@args,
setlogmask $mask_priority, setlogsock $sock_type [$stream_location] (added
in 5.004_02), closelog
d20706 21
d20731 9
d20742 2
a20743 2
=head2 Syslog::Syslog, Sys::Syslog, openlog, closelog, setlogmask, syslog -
Perl interface to the UNIX syslog(3) calls
d20747 2
d20753 9
a20761 3
openlog $ident, $logopt, $facility, syslog $priority, $format, @@args,
setlogmask $mask_priority, setlogsock $sock_type [$stream_location] (added
in 5.004_02), closelog
d20765 21
d20790 9
d20978 4
d21018 1
a21018 1
B<BAILOUT>
d21036 1
a21036 1
B<no_header>, B<no_ending>
d21048 2
d21076 2
d21090 84
a21189 6
=item The test script output

B<'1..M'>, B<'ok', 'not ok'.  Ok?>, B<test numbers>, B<test names>,
B<Skipping tests>, B<Todo tests>, B<Bail out!>, B<Comments>, B<Anything
else>

d21194 2
a21195 1
B<$Test::Harness::Verbose>, B<$Test::Harness::switches>
d21231 5
a21235 1
=item ENVIRONMENT
d21237 3
a21239 4
C<HARNESS_ACTIVE>, C<HARNESS_COLUMNS>, C<HARNESS_COMPILE_TEST>,
C<HARNESS_DEBUG>, C<HARNESS_FILELEAK_IN_DIR>, C<HARNESS_IGNORE_EXITCODE>,
C<HARNESS_NOTTY>, C<HARNESS_OK_SLOW>, C<HARNESS_PERL>,
C<HARNESS_PERL_SWITCHES>, C<HARNESS_VERBOSE>
a21244 4
=item AUTHORS

=item LICENSE

d21299 30
d21337 1
a21337 1
=item Construction
d21341 1
a21341 1
=item C<new>
d21349 1
a21349 1
=item C<_init>
d21355 1
a21355 1
=item Analysis
d21359 1
a21359 1
=item C<analyze>
d21367 1
a21367 1
=item C<analyze_fh>
d21373 1
a21373 1
=item C<analyze_file>
d21379 1
a21379 1
=item C<_command_line( $file )>
d21385 1
a21385 1
=item C<_command>
d21391 1
a21391 1
=item C<_switches>
d21397 1
a21397 1
=item C<_cleaned_switches>
d21403 1
a21403 1
=item C<_INC2PERL5LIB>
d21409 1
a21409 1
=item C<_filtered_INC>
d21415 1
a21415 1
=item C<_restore_PERL5LIB>
d21425 1
a21425 1
=item C<_is_comment>
d21439 1
a21439 1
=item C<_is_test>
d21445 1
a21445 1
=item C<_is_bail_out>
d21451 7
a21457 1
=item C<_reset_file_state>
d21461 2
d21465 9
a21473 1
=item Results
d21477 7
a21483 1
=item C<_detailize>
d21487 8
d21497 2
d21501 8
d21511 21
a21531 1
=item AUTHOR
d21533 1
a21533 1
=item SEE ALSO
d21579 1
a21579 1
=item Diagnostics
d21581 1
a21581 1
B<diag>
d21585 2
d21589 1
a21589 1
=item Module tests
d21591 1
a21591 1
B<use_ok>
d21595 7
a21601 1
B<require_ok>
d21617 1
a21617 1
=item Comparison functions
d21619 1
a21619 1
B<is_deeply>
d21623 4
d21629 2
d21645 1
a21645 1
=item NOTES
d21647 1
a21647 1
=item BUGS and CAVEATS
d21649 1
a21649 2
Making your own ok(), The eq_* family has some caveats, Test::Harness
upgrades
d21657 2
d21862 1
a21862 1
=item AUTHOR
d21878 1
a21878 1
=item AUTHOR
d22165 7
a22171 5
gettimeofday (), usleep ( $useconds ), ualarm ( $useconds [,
$interval_useconds ] ), tv_interval, time (), sleep ( $floating_seconds ),
alarm ( $floating_seconds [, $interval_floating_seconds ] ), setitimer (
$which, $floating_seconds [, $interval_floating_seconds ] ), getitimer (
$which )
d22189 2
d22295 4
a22298 4
UCA_Version, backwards, entry, hangul_terminator, ignoreName, ignoreChar,
level, normalization, overrideCJK, overrideHangul, preprocess, rearrange,
table, undefName, undefChar, katakana_before_hiragana, upper_before_lower,
variable, alternate
d22325 2
d22329 1
a22329 1
=item CAVEAT
d22331 1
a22331 1
=item Conformance Test
d22333 1
a22333 1
=back
d22335 1
a22335 1
=item AUTHOR
d22341 1
a22341 1
Type, Unicode Normalization Forms - UAX #15, L<Unicode::Normalize>
d22385 2
d22389 4
a22392 1
=back
d22400 2
a22401 1
http://www.unicode.org/notes/tn5/
d22477 6
d22545 2
d22567 6
d22575 7
a22581 1
=item AUTHOR
@


1.9
log
@merge 5.8.5 into HEAD
remove now-unused files
crank libperl shared library major number
update Makefile.bsd-wrapper
tweak openbsd hints file for arm and m68k
@
text
@d832 1
a832 1
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.8 $, $Date:
d881 2
a882 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.8 $,
$Date: 2004/04/07 21:33:09 $)
d937 1
a937 1
=head2 perlfaq3 - Programming Tools ($Revision: 1.8 $, $Date: 2003/08/24
d1024 1
a1024 1
=head2 perlfaq4 - Data Manipulation ($Revision: 1.8 $, $Date: 2003/10/02
d1243 1
a1243 1
=head2 perlfaq5 - Files and Formats ($Revision: 1.8 $, $Date: 2003/01/26
d1339 1
a1339 1
=head2 perlfaq6 - Regular Expressions ($Revision: 1.8 $, $Date: 2003/01/03
d1406 1
a1406 1
=head2 perlfaq7 - General Perl Language Issues ($Revision: 1.8 $, $Date:
d1488 1
a1488 1
=head2 perlfaq8 - System Interaction ($Revision: 1.8 $, $Date: 2003/01/26
d1616 1
a1616 1
=head2 perlfaq9 - Networking ($Revision: 1.8 $, $Date: 2003/01/31 17:36:57
d1837 2
d2257 1
a2257 1
B<-t>, B<-T>, B<-u>, B<-U>, B<-v>, B<-V>, B<-V:>I<name>, B<-w>, B<-W>,
d2266 5
a2270 4
PERL5DB, PERL5SHELL (specific to the Win32 port), PERL_DEBUG_MSTATS,
PERL_DESTRUCT_LEVEL, PERL_DL_NONLAZY, PERL_ENCODING, PERL_HASH_SEED,
PERL_HASH_SEED_DEBUG, PERL_ROOT (specific to the VMS port), PERL_SIGNALS,
PERL_UNICODE, SYS$LOGIN (specific to the VMS port)
d3895 3
a3897 3
Start with F<h2xs>, Use L<strict|strict> and L<warnings|warnings>, Use
L<Carp|Carp>, Use L<Exporter|Exporter> - wisely!, Use L<plain old
documentation|perlpod>, Write tests, Write the README
d4694 2
a4695 2
Copy, Move, New, Newc, Newz, Poison, Renew, Renewc, Safefree, savepv,
savepvn, savesharedpv, StructCopy, Zero
d4740 1
a4740 1
SvPVutf8_force, SvPVutf8_nolen, SvPVX, SvPVx, SvPV_force, SvPV_force_nomg,
d4747 18
a4764 17
sv_catpvf_mg, sv_catpvn, sv_catpvn_flags, sv_catpvn_mg, sv_catpv_mg,
sv_catsv, sv_catsv_flags, sv_catsv_mg, sv_chop, sv_clear, sv_cmp,
sv_cmp_locale, sv_collxfrm, sv_copypv, sv_dec, sv_derived_from, sv_eq,
sv_force_normal, sv_force_normal_flags, sv_free, sv_gets, sv_grow, sv_inc,
sv_insert, sv_isa, sv_isobject, sv_iv, sv_len, sv_len_utf8, sv_magic,
sv_magicext, sv_mortalcopy, sv_newmortal, sv_newref, sv_nv, sv_pos_b2u,
sv_pos_u2b, sv_pv, sv_pvbyte, sv_pvbyten, sv_pvbyten_force, sv_pvn,
sv_pvn_force, sv_pvn_force_flags, sv_pvutf8, sv_pvutf8n, sv_pvutf8n_force,
sv_reftype, sv_replace, sv_report_used, sv_reset, sv_rvweaken, sv_setiv,
sv_setiv_mg, sv_setnv, sv_setnv_mg, sv_setpv, sv_setpvf, sv_setpvf_mg,
sv_setpviv, sv_setpviv_mg, sv_setpvn, sv_setpvn_mg, sv_setpv_mg,
sv_setref_iv, sv_setref_nv, sv_setref_pv, sv_setref_pvn, sv_setref_uv,
sv_setsv, sv_setsv_flags, sv_setsv_mg, sv_setuv, sv_setuv_mg, sv_taint,
sv_tainted, sv_true, sv_unmagic, sv_unref, sv_unref_flags, sv_untaint,
sv_upgrade, sv_usepvn, sv_usepvn_mg, sv_utf8_decode, sv_utf8_downgrade,
sv_utf8_encode, sv_utf8_upgrade, sv_utf8_upgrade_flags, sv_uv, sv_vcatpvfn,
sv_vsetpvfn
d5036 1
a5036 1
check.utf8, test_harness
d5103 1
a5103 1
=item To do during 5.6.x
d5105 1
a5105 1
=over 4
d5107 1
a5107 1
=item Support for I/O disciplines
d5109 1
a5109 1
=item Autoload bytes.pm
d5111 1
a5111 1
=item Make "\u{XXXX}" et al work
d5113 1
a5113 1
=item Create a char *sv_pvprintify(sv, STRLEN *lenp, UV flags)
d5115 1
a5115 1
=item Overloadable regex assertions
d5117 1
a5117 1
=item Unicode
d5119 1
a5119 1
=item Work out exit/die semantics for threads
d5121 1
a5121 1
=item Better support for nonpreemptive threading systems like GNU pth
d5123 1
a5123 1
=item Typed lexicals for compiler
d5125 1
a5125 1
=item Compiler workarounds for Win32
d5127 1
a5127 1
=item AUTOLOADing in the compiler
d5129 1
a5129 1
=item Fixing comppadlist when compiling
d5131 1
a5131 1
=item Cleaning up exported namespace
d5133 1
a5133 1
=item Complete signal handling
d5135 1
a5135 1
=item Out-of-source builds
d5137 1
a5137 1
=item POSIX realtime support
d5139 1
a5139 1
=item UNIX98 support
d5141 1
a5141 1
=item IPv6 Support
d5143 1
a5143 1
=item Long double conversion
d5145 1
a5145 1
=item Locales
d5147 1
a5147 1
=item Arithmetic on non-Arabic numerals
d5149 1
a5149 1
=item POSIX Unicode character classes
d5151 1
a5151 1
=item Factoring out common suffices/prefices in regexps (trie optimization)
d5153 1
a5153 1
=item Security audit shipped utilities
d5155 1
a5155 1
=item Sort out the uid-setting mess
d5157 1
a5157 1
=item Custom opcodes
d5159 1
a5159 3
=item DLL Versioning

=item Introduce @@( and @@)
d5161 1
a5161 19
=item Floating point handling

=item IV/UV preservation

=item Replace pod2html with something using Pod::Parser

=item Automate module testing on CPAN

=item sendmsg and recvmsg

=item Rewrite perlre documentation

=item Convert example code to IO::Handle filehandles

=item Document Win32 choices

=item Check new modules

=item Make roffitall find pods and libs itself
d5165 1
a5165 1
=item To do at some point
d5169 1
a5169 17
=item Remove regular expression recursion

=item Memory leaks after failed eval

=item bitfields in pack

=item Cross compilation

=item Perl preprocessor / macros

=item Perl lexer in Perl

=item Using POSIX calls internally

=item -i rename file when changed

=item All ARGV input should act like E<lt>E<gt>
d5171 1
a5171 1
=item Support for rerunning debugger
d5173 1
a5173 1
=item Test Suite for the Debugger
d5175 1
a5175 1
=item my sub foo { }
d5177 1
a5177 1
=item One-pass global destruction
d5179 1
a5179 1
=item Rewrite regexp parser
d5181 1
a5181 1
=item Cache recently used regexps
d5183 1
a5183 1
=item Cross-compilation support
d5185 1
a5185 47
=item Bit-shifting bitvectors

=item debugger pragma

=item use less pragma

=item switch structures

=item Cache eval tree

=item rcatmaybe

=item Shrink opcode tables

=item Optimize away @@_

=item Prototypes versus indirect objects

=item Install HTML

=item Prototype method calls

=item Return context prototype declarations

=item magic_setisa

=item Garbage collection

=item IO tutorial

=item Rewrite perldoc

=item Install .3p manpages

=item Unicode tutorial

=item Update POSIX.pm for 1003.1-2

=item Retargetable installation

=item POSIX emulation on non-POSIX systems

=item Rename Win32 headers

=item Finish off lvalue functions

=item Update sprintf documentation
a5188 11
=item Make v-strings overloaded objects

=item Allow restricted hash assignment

=item Should overload be inheritable?

=item Taint rethink

=item Perform correctly when XSUBs call subroutines that exit via
goto(LABEL) and friends

d5191 1
a5191 1
=item Vague ideas
d5195 1
a5195 9
=item ref() in list context

=item Make tr/// return histogram of characters in list context

=item Compile to real threaded code

=item Structured types

=item Modifiable $1 et al.
d5197 1
a5197 1
=item Procedural interfaces for IO::*, etc.
d5199 1
a5199 1
=item RPC modules
d5201 1
a5201 9
=item Attach/detach debugger from running program

=item GUI::Native

=item foreach(reverse ...)

=item Constant function cache

=item Approximate regular expression matching
d5205 1
a5205 1
=item Ongoing
d5209 1
a5209 3
=item Update guts documentation

=item Add more tests
d5211 1
a5211 1
=item Update auxiliary tools
d5213 1
a5213 1
=item Create debugging macros
d5215 1
a5215 1
=item truncate to the people
d5217 1
a5217 1
=item Unicode in Filenames
d5221 1
a5221 3
=item Unicode in %ENV

=item Recently done things
d5225 1
a5225 51
=item Alternative RE syntax module

=item Safe signal handling

=item Tie Modules

=item gettimeofday

=item setitimer and getimiter

=item Testing __DIE__ hook

=item CPP equivalent in Perl

=item Explicit switch statements

=item autocroak

=item UTF/EBCDIC

=item UTF Regexes

=item perlcc to produce executable

=item END blocks saved in compiled output

=item Secure temporary file module

=item Integrate Time::HiRes

=item Turn Cwd into XS

=item Mmap for input

=item Byte to/from UTF-8 and UTF-8 to/from local conversion

=item Add sockatmark support

=item Mailing list archives

=item Bug tracking

=item Integrate MacPerl

=item Web "nerve center" for Perl

=item Regular expression tutorial

=item Debugging Tutorial

=item Integrate new modules
d5227 1
a5227 1
=item Integrate profiler
d5229 1
a5229 1
=item Y2K error detection
d5231 1
a5231 7
=item Regular expression debugger

=item POD checker

=item "Dynamic" lexicals

=item Cache precompiled modules
d5235 1
a5235 1
=item Deprecated Wishes
d5239 1
a5239 1
=item Loop control on do{}
d5241 1
a5241 1
=item Lexically scoped typeglobs
d5243 1
a5243 1
=item format BOTTOM
d5245 1
a5245 1
=item report HANDLE
d5247 1
a5247 25
=item Generalised want()/caller())

=item Named prototypes

=item Built-in globbing

=item Regression tests for suidperl

=item Cached hash values

=item Add compression modules

=item Reorganise documentation into tutorials/references

=item Remove distinction between functions and operators

=item Make XS easier to use

=item Make embedding easier to use

=item man for perl

=item my $Package::variable

=item "or" tests defined, not truth
d5249 1
a5249 1
=item "class"-based lexicals
d5251 1
a5251 9
=item byteperl

=item Lazy evaluation / tail recursion removal

=item Make "use utf8" the default

=item Unicode collation and normalization

=item pack/unpack tutorial
d5312 1
a5312 1
=head2 perldelta, perl584delta - what is new for perl v5.8.4
d5322 17
a5338 1
=over 4
d5340 1
a5340 1
=item Malloc wrapping
d5342 1
a5342 1
=item Unicode Character Database 4.0.1
d5344 1
a5344 1
=item suidperl less insecure
d5346 1
a5346 1
=item format
d5350 1
a5350 1
=item Modules and Pragmata
d5354 1
a5354 1
=item Updated modules
d5356 1
a5356 5
Attribute::Handlers, B, Benchmark, CGI, Carp, Cwd, Exporter, File::Find,
IO, IPC::Open3, Local::Maketext, Math::BigFloat, Math::BigInt,
Math::BigRat, MIME::Base64, ODBM_File, POSIX, Shell, Socket, Storable,
Switch, Sys::Syslog, Term::ANSIColor, Time::HiRes, Unicode::UCD, Win32,
base, open, threads, utf8
d5358 1
a5358 1
=back
d5360 1
a5360 1
=item Performance Enhancements
d5364 4
d5376 3
a5378 1
=item Future Directions
d5388 1
a5388 1
=head2 perl585delta, perldelta - what is new for perl v5.8.5
a5409 4
=item New Documentation

=item Performance Enhancements

a5417 2
=item New Tests

d7956 2
d7964 2
a7967 4
=item Portability Between PA-RISC Versions

=item Itanium Processor Family and HP-UX

d8924 3
a8926 2
Make, Command Shell, Borland C++, Microsoft Visual C++, Microsoft Platform
SDK 64-bit Compiler, MinGW release 3 with gcc, MinGW release 1 with gcc
d8942 1
a8942 1
Miscellaneous Things
d9414 6
d10043 2
a10044 1
next, sibling, name, ppaddr, desc, targ, type, seq, flags, private
d10253 1
a10253 1
B<-main>, B<-banner>
d10259 10
d10271 4
d10277 5
a10281 1
B<#>I<var>, B<#>I<var>I<N>, B<~>, B<#addr>, B<#arg>, B<#class>,
d10285 2
a10286 10
B<#seq>, B<#seqnum>, B<#sibaddr>, B<#svaddr>, B<#svclass>, B<#svval>,
B<#targ>, B<#targarg>, B<#targarglife>, B<#typenum>

=item ABBREVIATIONS

=over 4

=item OP flags abbreviations

=item OP class abbreviations
d10427 12
d11186 24
d11950 16
d11970 17
a11986 1
=item ppport.h
d11988 1
a11988 1
=item AUTHOR
d12961 6
d14567 1
a14567 1
=item AUTHORS
d16497 2
a16498 1
encode_qp($str), encode_qp($str, $eol), decode_qp($str);
d16515 2
a16516 1
encode_qp($str), encode_qp($str, $eol), decode_qp($str);
@


1.8
log
@merge local changes into perl-5.8.3
@
text
@d832 1
a832 1
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.7 $, $Date:
d881 2
a882 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.7 $,
$Date: 2003/12/03 03:02:46 $)
d937 1
a937 1
=head2 perlfaq3 - Programming Tools ($Revision: 1.7 $, $Date: 2003/08/24
d1024 1
a1024 1
=head2 perlfaq4 - Data Manipulation ($Revision: 1.7 $, $Date: 2003/10/02
d1243 1
a1243 1
=head2 perlfaq5 - Files and Formats ($Revision: 1.7 $, $Date: 2003/01/26
d1339 1
a1339 1
=head2 perlfaq6 - Regular Expressions ($Revision: 1.7 $, $Date: 2003/01/03
d1406 1
a1406 1
=head2 perlfaq7 - General Perl Language Issues ($Revision: 1.7 $, $Date:
d1488 1
a1488 1
=head2 perlfaq8 - System Interaction ($Revision: 1.7 $, $Date: 2003/01/26
d1616 1
a1616 1
=head2 perlfaq9 - Networking ($Revision: 1.7 $, $Date: 2003/01/31 17:36:57
d2256 1
a2256 1
B<-X>, B<-x> I<directory>
d2548 18
d3361 2
a3362 2
enable UTF-8/UTF-EBCDIC in scripts, C<use encoding> needed to upgrade
non-Latin-1 byte strings
d4242 2
d4633 1
a4633 1
get_av, newAV, Nullav, sortsv
d4650 1
a4650 1
CvSTASH, get_cv, Nullcv
d4672 1
a4672 1
HEf_SVKEY, Nullch, Nullsv
d4676 6
a4681 5
get_hv, HeHASH, HeKEY, HeKLEN, HePV, HeSVKEY, HeSVKEY_force, HeSVKEY_set,
HeVAL, HvNAME, hv_clear, hv_clear_placeholders, hv_delete, hv_delete_ent,
hv_exists, hv_exists_ent, hv_fetch, hv_fetch_ent, hv_iterinit, hv_iterkey,
hv_iterkeysv, hv_iternext, hv_iternextsv, hv_iternext_flags, hv_iterval,
hv_magic, hv_scalar, hv_store, hv_store_ent, hv_undef, newHV, Nullhv
d4687 1
a4687 1
SvSetSV, SvSetSV_nosteal, SvSHARE
d4691 2
a4692 2
Copy, Move, New, Newc, NEWSV, Newz, Poison, Renew, Renewc, Safefree,
savepv, savepvn, savesharedpv, StructCopy, Zero
d4714 7
a4720 6
dMARK, dORIGMARK, dSP, EXTEND, MARK, ORIGMARK, POPi, POPl, POPn, POPp,
POPpbytex, POPpx, POPs, PUSHi, PUSHMARK, PUSHn, PUSHp, PUSHs, PUSHu,
PUTBACK, SP, SPAGAIN, XPUSHi, XPUSHn, XPUSHp, XPUSHs, XPUSHu, XSRETURN,
XSRETURN_IV, XSRETURN_NO, XSRETURN_NV, XSRETURN_PV, XSRETURN_UNDEF,
XSRETURN_UV, XSRETURN_YES, XST_mIV, XST_mNO, XST_mNV, XST_mPV, XST_mUNDEF,
XST_mYES
d4728 4
a4731 4
get_sv, looks_like_number, newRV_inc, newRV_noinc, newSV, newSViv, newSVnv,
newSVpv, newSVpvf, newSVpvn, newSVpvn_share, newSVrv, newSVsv, newSVuv,
SvCUR, SvCUR_set, SvEND, SvGROW, SvIOK, SvIOKp, SvIOK_notUV, SvIOK_off,
SvIOK_on, SvIOK_only, SvIOK_only_UV, SvIOK_UV, SvIsCOW,
d4733 2
a4734 2
SvNIOK_off, SvNOK, SvNOKp, SvNOK_off, SvNOK_on, SvNOK_only, SvNV, SvNVX,
SvNVx, SvOK, SvOOK, SvPOK, SvPOKp, SvPOK_off, SvPOK_on, SvPOK_only,
d4737 1
a4737 1
SvPVutf8_force, SvPVutf8_nolen, SvPVx, SvPVX, SvPV_force, SvPV_force_nomg,
d4740 2
a4741 2
SvTRUE, SvTYPE, SvUNLOCK, SvUOK, SvUPGRADE, SvUTF8, SvUTF8_off, SvUTF8_on,
SvUV, SvUVX, SvUVx, sv_2bool, sv_2cv, sv_2io, sv_2iv, sv_2mortal, sv_2nv,
d4774 1
a4774 1
THIS, XS, XSRETURN_EMPTY, XS_VERSION, XS_VERSION_BOOTCHECK
d4975 2
d5509 1
a5509 1
=head2 perldelta - what is new for perl v5.8.3
d5519 12
d5533 45
a5577 3
CGI, Cwd, Digest, Digest::MD5, Encode, File::Spec, FindBin, List::Util,
Math::BigInt, PodParser, Pod::Perldoc, POSIX, Unicode::Collate,
Unicode::Normalize, Test::Harness, threads::shared
d5581 8
d5591 2
d5601 3
a5603 1
=item Configuration and Building
d5607 53
a5659 1
=item Known Problems
d5663 1
a5663 1
=item Obituary
d5671 1
a5671 1
=head2 perl583delta, perldelta - what is new for perl v5.8.3
d8147 1
a8147 1
=item Itanium
d8238 3
a8240 1
=item Compiling Perl 5 on MachTen
d9110 1
a9110 1
SDK 64-bit Compiler, MinGW32 with gcc, MinGW release 1
d9132 2
d9219 1
a9219 2
blocks, PERL_OLD_SIGNALS are not threadsafe, will not be, Detached threads
on Windows
d9295 4
d10410 25
a10434 3
B<-basic>, B<-exec>, B<-tree>, B<-compact>, B<-loose>, B<-vt>, B<-ascii>,
B<-main>, B<-base>I<n>, B<-bigendian>, B<-littleendian>, B<-concise>,
B<-terse>, B<-linenoise>, B<-debug>, B<-env>
d10459 20
d11345 1
a11345 1
=head2 Carp::Heavy, Carp heavy machinery - no user serviceable parts inside
d11649 2
a11650 2
C<pm_apiversion>, C<pmake>, C<pr>, C<prefix>, C<prefixexp>, C<privlib>,
C<privlibexp>, C<procselfexe>, C<prototype>, C<ptrsize>
d11716 1
a11716 1
C<xlibpth>, C<xs_apiversion>
d11744 1
a11744 1
getcwd, cwd, fastcwd, fastgetcwd
d11756 2
d11799 68
d12266 4
a12269 4
@@dl_modules, dl_error(), $dl_debug, dl_findfile(), dl_expandspec(),
dl_load_file(), dl_unload_file(), dl_load_flags(), dl_find_symbol(),
dl_find_symbol_anywhere(), dl_undef_symbols(), dl_install_xsub(),
bootstrap()
d14602 2
a15064 2
=item NOTES

d15400 3
d15417 20
d16919 1
a16919 1
=head2 Math::BigRat - arbitrarily big rationals
d16977 4
d16988 2
a16989 1
except for bceil/bfloor), $x ** $y where $y is not an integer
d17336 1
a17336 1
new (HOST [,OPTIONS])
d17343 10
a17352 10
RECURSE ]), mkdir ( DIR [, RECURSE ]), ls ( [ DIR ] ), alloc ( SIZE [,
RECORD_SIZE] ), dir ( [ DIR ] ), get ( REMOTE_FILE [, LOCAL_FILE [, WHERE]]
), put ( LOCAL_FILE [, REMOTE_FILE ] ), put_unique ( LOCAL_FILE [,
REMOTE_FILE ] ), append ( LOCAL_FILE [, REMOTE_FILE ] ), unique_name (),
mdtm ( FILE ), size ( FILE ), supported ( CMD ), hash (
[FILEHANDLE_GLOB_REF],[ BYTES_PER_HASH_MARK] ), nlst ( [ DIR ] ), list ( [
DIR ] ), retr ( FILE ), stor ( FILE ), stou ( FILE ), appe ( FILE ), port (
[ PORT ] ), pasv (), pasv_xfer ( SRC_FILE, DEST_SERVER [, DEST_FILE ] ),
pasv_xfer_unique ( SRC_FILE, DEST_SERVER [, DEST_FILE ] ), pasv_wait (
NON_PASV_SERVER ), abort (), quit ()
d17445 1
a17445 1
new ( [ HOST, ] [ OPTIONS ] )
d17449 5
a17453 4
user ( USER ), pass ( PASS ), login ( [ USER [, PASS ]] ), apop ( [ USER [,
PASS ]] ), top ( MSGNUM [, NUMLINES ] ), list ( [ MSGNUM ] ), get ( MSGNUM
[, FH ] ), getfh ( MSGNUM ), last (), popstat (), ping ( USER ), uidl ( [
MSGNUM ] ), delete ( MSGNUM ), reset (), quit ()
d17510 1
a17510 1
new Net::SMTP [ HOST, ] [ OPTIONS ]
d17514 7
a17520 7
banner (), domain (), hello ( DOMAIN ), etrn ( DOMAIN ), auth ( USERNAME,
PASSWORD ), mail ( ADDRESS [, OPTIONS] ), send ( ADDRESS ), send_or_mail (
ADDRESS ), send_and_mail ( ADDRESS ), reset (), recipient ( ADDRESS [,
ADDRESS [ ...]] [, OPTIONS ] ), to ( ADDRESS [, ADDRESS [...]] ), cc (
ADDRESS [, ADDRESS [...]] ), bcc ( ADDRESS [, ADDRESS [...]] ), data ( [
DATA ] ), expand ( ADDRESS ), verify ( ADDRESS ), help ( [ $subject ] ),
quit ()
d19538 5
a19542 1
=item OBJECT ORIENTED SYNTAX
d19546 2
d19665 1
a19665 1
=item LIMITATION
d19886 2
d20946 10
a21264 33

=back

=head2 Win32 - Interfaces to some Win32 API Functions

=over 4

=item DESCRIPTION

=over 4

=item Alphabetical Listing of Win32 Functions

Win32::AbortSystemShutdown(MACHINE), Win32::BuildNumber(),
Win32::CopyFile(FROM, TO, OVERWRITE), Win32::DomainName(),
Win32::ExpandEnvironmentStrings(STRING), Win32::FormatMessage(ERRORCODE),
Win32::FsType(), Win32::FreeLibrary(HANDLE), Win32::GetArchName(),
Win32::GetChipName(), Win32::GetCwd(), Win32::GetFolderPath(FOLDER [,
CREATE]), Win32::GetFullPathName(FILENAME), Win32::GetLastError(),
Win32::GetLongPathName(PATHNAME), Win32::GetNextAvailDrive(),
Win32::GetOSVersion(), Win32::GetOSName(),
Win32::GetShortPathName(PATHNAME), Win32::GetProcAddress(INSTANCE,
PROCNAME), Win32::GetTickCount(), Win32::InitiateSystemShutdown,
Win32::IsWinNT(), Win32::IsWin95(), Win32::LoadLibrary(LIBNAME),
Win32::LoginName(), Win32::LookupAccountName(SYSTEM, ACCOUNT, DOMAIN, SID,
SIDTYPE), Win32::LookupAccountSID(SYSTEM, SID, ACCOUNT, DOMAIN, SIDTYPE),
Win32::MsgBox(MESSAGE [, FLAGS [, TITLE]]), Win32::NodeName(),
Win32::RegisterServer(LIBRARYNAME), Win32::SetChildShowWindow(SHOWWINDOW),
Win32::SetCwd(NEWDIRECTORY), Win32::SetLastError(ERROR),
Win32::Sleep(TIME), Win32::Spawn(COMMAND, ARGS, PID),
Win32::UnregisterServer(LIBRARYNAME)

=back
@


1.7
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d832 1
a832 1
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.12 $, $Date:
d881 2
a882 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.20 $,
$Date: 2003/01/26 17:50:56 $)
d937 1
a937 1
=head2 perlfaq3 - Programming Tools ($Revision: 1.35 $, $Date: 2003/08/24
d1024 1
a1024 1
=head2 perlfaq4 - Data Manipulation ($Revision: 1.52 $, $Date: 2003/10/02
d1243 1
a1243 1
=head2 perlfaq5 - Files and Formats ($Revision: 1.28 $, $Date: 2003/01/26
d1339 1
a1339 1
=head2 perlfaq6 - Regular Expressions ($Revision: 1.20 $, $Date: 2003/01/03
d1406 1
a1406 1
=head2 perlfaq7 - General Perl Language Issues ($Revision: 1.15 $, $Date:
d1488 1
a1488 1
=head2 perlfaq8 - System Interaction ($Revision: 1.17 $, $Date: 2003/01/26
d1616 1
a1616 1
=head2 perlfaq9 - Networking ($Revision: 1.15 $, $Date: 2003/01/31 17:36:57
d2265 3
a2267 3
PERL_DESTRUCT_LEVEL, PERL_ENCODING, PERL_HASH_SEED, PERL_HASH_SEED_DEBUG,
PERL_ROOT (specific to the VMS port), PERL_SIGNALS, PERL_UNICODE, SYS$LOGIN
(specific to the VMS port)
d2627 1
a2627 1
this, NEXTKEY this, lastkey, UNTIE this, DESTROY this
d3141 15
a3155 16
-I<X> FILEHANDLE, -I<X> EXPR, -I<X>, alarm SECONDS, alarm, binmode
FILEHANDLE, chmod LIST, chown LIST, chroot FILENAME, chroot, crypt
PLAINTEXT,SALT, dbmclose HASH, dbmopen HASH,DBNAME,MODE, dump LABEL, exec
LIST, exit EXPR, exit, fcntl FILEHANDLE,FUNCTION,SCALAR, flock
FILEHANDLE,OPERATION, fork, getlogin, getpgrp PID, getppid, getpriority
WHICH,WHO, getpwnam NAME, getgrnam NAME, getnetbyname NAME, getpwuid UID,
getgrgid GID, getnetbyaddr ADDR,ADDRTYPE, getprotobynumber NUMBER,
getservbyport PORT,PROTO, getpwent, getgrent, gethostbyname, gethostent,
getnetent, getprotoent, getservent, sethostent STAYOPEN, setnetent
STAYOPEN, setprotoent STAYOPEN, setservent STAYOPEN, endpwent, endgrent,
endhostent, endnetent, endprotoent, endservent, getsockopt
SOCKET,LEVEL,OPTNAME, glob EXPR, glob, ioctl FILEHANDLE,FUNCTION,SCALAR,
kill SIGNAL, LIST, link OLDFILE,NEWFILE, lstat FILEHANDLE, lstat EXPR,
lstat, msgctl ID,CMD,ARG, msgget KEY,FLAGS, msgsnd ID,MSG,FLAGS, msgrcv
ID,VAR,SIZE,TYPE,FLAGS, open FILEHANDLE,EXPR, open FILEHANDLE, pipe
READHANDLE,WRITEHANDLE, readlink EXPR, readlink, select
d3343 2
a3344 1
enable UTF-8/UTF-EBCDIC in scripts
d3534 2
d3564 1
a3564 1
=item Package Constructors and Destructors
d3603 4
a3606 4
DirHandle, Dumpvalue, DynaLoader, Encode, Encode::Alias, Encode::Byte,
Encode::CJKConstants, Encode::CN, Encode::CN::HZ, Encode::Config,
Encode::EBCDIC, Encode::Encoder, Encode::Encoding, Encode::Guess,
Encode::JP, Encode::JP::H2Z, Encode::JP::JIS7, Encode::KR,
d3633 10
a3642 10
Math::BigInt::Calc, Math::BigInt::Scalar, Math::BigRat, Math::Complex,
Math::Trig, Memoize, Memoize::AnyDBM_File, Memoize::Expire,
Memoize::ExpireFile, Memoize::ExpireTest, Memoize::NDBM_File,
Memoize::SDBM_File, Memoize::Storable, NDBM_File, NEXT, Net::Cmd,
Net::Config, Net::Domain, Net::FTP, Net::NNTP, Net::Netrc, Net::POP3,
Net::Ping, Net::SMTP, Net::Time, Net::hostent, Net::libnetFAQ, Net::netent,
Net::protoent, Net::servent, O, ODBM_File, Opcode, POSIX, PerlIO,
PerlIO::encoding, PerlIO::scalar, PerlIO::via, PerlIO::via::QuotedPrint,
Pod::Checker, Pod::Find, Pod::Functions, Pod::Html, Pod::InputObjects,
Pod::LaTeX, Pod::Man, Pod::ParseLink, Pod::ParseUtils, Pod::Parser,
d4475 1
a4475 1
A, p, d, s, n, r, f, M, o, j, x
d4657 2
a4658 2
HeVAL, HvNAME, hv_clear, hv_delete, hv_delete_ent, hv_exists,
hv_exists_ent, hv_fetch, hv_fetch_ent, hv_iterinit, hv_iterkey,
d4660 1
a4660 1
hv_magic, hv_store, hv_store_ent, hv_undef, newHV, Nullhv
d5485 1
a5485 1
=head2 perldelta - what is new for perl v5.8.2
d5497 4
d5505 43
a5547 1
=item Performance Enhancements
d5557 3
a5559 1
=item New Tests
d5563 44
d5609 2
d5617 1
a5617 1
=head2 perl581delta, perldelta - what is new for perl v5.8.1
d5776 1
a5776 1
=head2 perl58delta, perldelta - what is new for perl v5.8.0
d7744 28
d7886 44
d8211 5
a8215 1
=item Name
d8217 1
a8217 1
=item Description
d8219 1
a8219 1
=item Build
d8237 1
a8237 1
=item Install
d8239 1
a8239 1
=item Build new extensions
d8241 1
a8241 1
=item Acknowledgements
d8243 1
a8243 1
=item Authors
d8245 1
a8245 1
=item Date
d8364 13
d8953 47
d9037 3
a9039 2
share VARIABLE, lock VARIABLE, cond_wait VARIABLE, cond_signal VARIABLE,
cond_broadcast VARIABLE
d9073 2
a9074 1
blocks, PERL_OLD_SIGNALS are not threadsafe, will not be
d9142 1
a9142 1
=head2 base - Establish IS-A relationship with base class at compile time
d9368 1
a9368 2
=head2 diagnostics - Perl compiler pragma to force verbose warning
diagnostics
d9408 2
d9765 3
a9767 2
share VARIABLE, lock VARIABLE, cond_wait VARIABLE, cond_signal VARIABLE,
cond_broadcast VARIABLE
d10752 2
a10753 2
B<server_software ()>, B<remote_user ()>, B<user_name ()>,
B<request_method()>, B<content_type()>, B<http()>, B<https()>
d11892 1
a11892 1
=head2 Digest:: - Modules that calculate message digests
d11906 2
a11907 1
$ctx->add($data,...), $ctx->addfile($io_handle), $ctx->digest,
d11910 2
d11933 2
a11934 1
$md5->addfile($io_handle), $md5->digest, $md5->hexdigest, $md5->b64digest
d11946 12
d12758 2
d12905 2
a13232 2
signature_target

a13234 2
signature_addtomanifest_target

d13936 2
a13937 2
PRINT_PREREQ, SITEPREFIX, SIGN, SKIP, TYPEMAPS, VENDORPREFIX, VERBINST,
VERSION, VERSION_FROM, VERSION_SYM, XS, XSOPT, XSPROTOARG, XS_VERSION
d15050 2
a15051 2
=head2 Getopt::Std, getopt - Process single-character switches with switch
clustering
d16418 1
a16418 1
=item is_positive()/is_negative()
d16420 2
a16421 2
	$x->is_positive();		# true if >= 0
	$x->is_negative();		# true if <  0
d16431 1
a16431 1
=item bcmp
d16499 1
a16499 1
=item as_number
d16575 3
a16577 3
stringify, bstr(), bsstr() and 'cmp', int(), length, bdiv, infinity
handling, Modifying and =, bpow, Overloading -$x, Mixing different object
types, bsqrt(), brsft()
d16613 1
a16613 2
=head2 Math::BigInt::Scalar - Pure Perl module to test Math::BigInt with
scalars
d16621 2
d16629 1
a16629 1
=item AUTHOR
d17726 1
a17726 1
unix, stdio, perlio, crlf, utf8, bytes, raw, pop
d17809 2
d17959 3
a17961 3
backlink, cachedir, css, flush, header, help, htmldir, htmlroot, index,
infile, libpods, netscape, outfile, podpath, podroot, quiet, recurse,
title, verbose
d19720 7
a19726 1
=head2 Test::Harness - run perl standard test scripts with statistics
d19746 1
a19746 1
B<$Test::Harness::verbose>, B<$Test::Harness::switches>
d19785 3
a19787 2
C<HARNESS_FILELEAK_IN_DIR>, C<HARNESS_IGNORE_EXITCODE>, C<HARNESS_NOTTY>,
C<HARNESS_OK_SLOW>, C<HARNESS_PERL_SWITCHES>, C<HARNESS_VERBOSE>
d19801 4
d19815 2
d19819 1
a19819 3
=item Functions

B<assert>
d19841 8
d19901 12
d19919 6
d20527 2
a20528 1
this, NEXTKEY this, lastkey, EXISTS this, key, DELETE this, key, CLEAR this
d20534 1
a20534 1
=item C<UNTIE> and C<DESTROY>
d20824 1
a20824 1
http://www.unicode.org/unicode/reports/tr15/,
@


1.6
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d2 4
d110 1
a110 2
=head2 perlfaq - frequently asked questions about Perl ($Date: 2002/03/11
21:32:23 $)
d116 6
d124 5
a128 1
=item perlfaq: Structural overview of the FAQ.
d130 1
a130 1
=item L<perlfaq1>: General Questions About Perl
d132 1
a132 1
=item L<perlfaq2>: Obtaining and Learning about Perl
d134 1
a134 1
=item L<perlfaq3>: Programming Tools
d136 1
a136 1
=item L<perlfaq4>: Data Manipulation
d138 1
a138 1
=item L<perlfaq5>: Files and Formats
d140 1
a140 1
=item L<perlfaq6>: Regular Expressions
d142 1
a142 1
=item L<perlfaq7>: General Perl Language Issues
d144 1
a144 1
=item L<perlfaq8>: System Interaction
d146 1
a146 1
=item L<perlfaq9>: Networking
d150 1
a150 1
=item About the perlfaq documents
d154 8
a161 1
=item Where to get the perlfaq
d163 1
a163 1
=item How to contribute to the perlfaq
d165 1
a165 2
=item What will happen if you mail your Perl programming problems to the
authors
d167 1
a167 1
=back
d169 1
a169 1
=item Credits
d171 1
a171 1
=item Author and Copyright Information
d175 3
a177 1
=item Bundled Distributions
d179 1
a179 1
=item Disclaimer
d183 7
a189 1
=item Changes
d191 1
a191 3
1/November/2000, 23/May/99, 13/April/99, 7/January/99, 22/June/98,
24/April/97, 23/April/97, 25/March/97, 18/March/97, 17/March/97 Version,
Initial Release: 11/March/97
d195 1
a195 1
=head2 perlbook - Perl book information
d199 5
a203 1
=item DESCRIPTION
d207 1
a207 1
=head2 perlsyn - Perl syntax
d211 1
a211 1
=item DESCRIPTION
d213 1
a213 1
=over 4
d215 1
a215 1
=item Declarations
d217 1
a217 1
=item Simple statements
d219 1
a219 1
=item Compound statements
d221 1
a221 1
=item Loop Control
d223 1
a223 1
=item For Loops
d225 1
a225 1
=item Foreach Loops
d227 1
a227 1
=item Basic BLOCKs and Switch Statements
d229 1
a229 1
=item Goto
d231 1
a231 1
=item PODs: Embedded Documentation
d233 1
a233 1
=item Plain Old Comments (Not!)
d235 1
a235 1
=back
d239 1
a239 1
=head2 perldata - Perl data types
d247 1
a247 1
=item Variable names
d249 1
a249 1
=item Context
d251 1
a251 5
=item Scalar values

=item Scalar value constructors

=item List value constructors
a254 2
=item Typeglobs and Filehandles

d259 2
d263 1
a263 1
=head2 perlop - Perl operators and precedence
d267 1
a267 1
=item SYNOPSIS
d269 1
a269 1
=item DESCRIPTION
d273 1
a273 1
=item Terms and List Operators (Leftward)
d275 1
a275 1
=item The Arrow Operator
d277 1
a277 1
=item Auto-increment and Auto-decrement
d279 1
a279 1
=item Exponentiation
d281 1
a281 1
=item Symbolic Unary Operators
d283 1
a283 1
=item Binding Operators
d285 1
a285 1
=item Multiplicative Operators
d287 1
a287 1
=item Additive Operators
d289 1
a289 1
=item Shift Operators
d291 1
a291 1
=item Named Unary Operators
d293 1
a293 1
=item Relational Operators
d295 1
a295 1
=item Equality Operators
d297 1
a297 1
=item Bitwise And
d299 1
a299 1
=item Bitwise Or and Exclusive Or
d301 1
a301 1
=item C-style Logical And
d303 1
a303 1
=item C-style Logical Or
d305 1
a305 1
=item Range Operators
d307 1
a307 1
=item Conditional Operator
d309 1
a309 1
=item Assignment Operators
d311 1
a311 1
=item Comma Operator
d313 1
a313 1
=item List Operators (Rightward)
d315 1
a315 1
=item Logical Not
d317 1
a317 1
=item Logical And
d319 1
a319 1
=item Logical or and Exclusive Or
d321 1
a321 1
=item C Operators Missing From Perl
d323 1
a323 1
unary &, unary *, (TYPE)
d325 1
a325 1
=item Quote and Quote-like Operators
d327 1
a327 1
=item Regexp Quote-Like Operators
d329 1
a329 4
?PATTERN?, m/PATTERN/cgimosx, /PATTERN/cgimosx, q/STRING/, C<'STRING'>,
qq/STRING/, "STRING", qr/STRING/imosx, qx/STRING/, `STRING`, qw/STRING/,
s/PATTERN/REPLACEMENT/egimosx, tr/SEARCHLIST/REPLACEMENTLIST/cds,
y/SEARCHLIST/REPLACEMENTLIST/cds, <<EOF
d331 1
a331 1
=item Gory details of parsing quoted constructs
d333 1
a333 5
Finding the end, Removal of backslashes before delimiters, Interpolation,
C<<<'EOF'>, C<m''>, C<s'''>, C<tr///>, C<y///>, C<''>, C<q//>, C<"">,
C<``>, C<qq//>, C<qx//>, C<< <file*glob> >>, C<?RE?>, C</RE/>, C<m/RE/>,
C<s/RE/foo/>,, Interpolation of regular expressions, Optimization of
regular expressions
d335 1
a335 1
=item I/O Operators
d337 1
a337 1
=item Constant Folding
d339 1
a339 1
=item Bitwise String Operators
d341 1
a341 1
=item Integer Arithmetic
d343 1
a343 1
=item Floating-point Arithmetic
d345 1
a345 1
=item Bigger Numbers
d347 1
a347 1
=back
d349 1
a349 1
=back
d351 1
a351 1
=head2 perlsub - Perl subroutines
d353 1
a353 1
=over 4
d355 1
a355 1
=item SYNOPSIS
d357 1
a357 1
=item DESCRIPTION
d359 1
a359 1
=over 4
d361 1
a361 1
=item Private Variables via my()
d363 1
a363 1
=item Persistent Private Variables
d365 1
a365 1
=item Temporary Values via local()
d367 1
a367 1
=item Lvalue subroutines
d369 1
a369 1
Lvalue subroutines are EXPERIMENTAL
d371 1
a371 1
=item Passing Symbol Table Entries (typeglobs)
d373 1
a373 1
=item When to Still Use local()
d375 1
a375 1
=item Pass by Reference
d377 1
a377 1
=item Prototypes
d379 1
a379 1
=item Constant Functions
d381 1
a381 1
=item Overriding Built-in Functions
d383 1
a383 1
=item Autoloading
d385 1
a385 1
=item Subroutine Attributes
d387 1
a387 1
=back
d389 1
a389 1
=item SEE ALSO
d391 1
a391 1
=back
d393 1
a393 1
=head2 perlfunc - Perl builtin functions
d395 1
a395 1
=over 4
d397 1
a397 1
=item DESCRIPTION
d399 1
a399 1
=over 4
d401 1
a401 1
=item Perl Functions by Category
d403 1
a403 11
Functions for SCALARs or strings, Regular expressions and pattern matching,
Numeric functions, Functions for real @@ARRAYs, Functions for list data,
Functions for real %HASHes, Input and output functions, Functions for fixed
length data or records, Functions for filehandles, files, or directories,
Keywords related to the control flow of your perl program, Keywords related
to scoping, Miscellaneous functions, Functions for processes and process
groups, Keywords related to perl modules, Keywords related to classes and
object-orientedness, Low-level socket functions, System V interprocess
communication functions, Fetching user and group info, Fetching network
info, Time-related functions, Functions new in perl5, Functions obsoleted
in perl5
d405 1
a405 1
=item Portability
d407 1
a407 1
=item Alphabetical Listing of Perl Functions
d409 1
a409 76
I<-X> FILEHANDLE, I<-X> EXPR, I<-X>, abs VALUE, abs, accept
NEWSOCKET,GENERICSOCKET, alarm SECONDS, alarm, atan2 Y,X, bind SOCKET,NAME,
binmode FILEHANDLE, LAYER, binmode FILEHANDLE, bless REF,CLASSNAME, bless
REF, caller EXPR, caller, chdir EXPR, chmod LIST, chomp VARIABLE, chomp(
LIST ), chomp, chop VARIABLE, chop( LIST ), chop, chown LIST, chr NUMBER,
chr, chroot FILENAME, chroot, close FILEHANDLE, close, closedir DIRHANDLE,
connect SOCKET,NAME, continue BLOCK, cos EXPR, cos, crypt PLAINTEXT,SALT,
dbmclose HASH, dbmopen HASH,DBNAME,MASK, defined EXPR, defined, delete
EXPR, die LIST, do BLOCK, do SUBROUTINE(LIST), do EXPR, dump LABEL, dump,
each HASH, eof FILEHANDLE, eof (), eof, eval EXPR, eval BLOCK, exec LIST,
exec PROGRAM LIST, exists EXPR, exit EXPR, exp EXPR, exp, fcntl
FILEHANDLE,FUNCTION,SCALAR, fileno FILEHANDLE, flock FILEHANDLE,OPERATION,
fork, format, formline PICTURE,LIST, getc FILEHANDLE, getc, getlogin,
getpeername SOCKET, getpgrp PID, getppid, getpriority WHICH,WHO, getpwnam
NAME, getgrnam NAME, gethostbyname NAME, getnetbyname NAME, getprotobyname
NAME, getpwuid UID, getgrgid GID, getservbyname NAME,PROTO, gethostbyaddr
ADDR,ADDRTYPE, getnetbyaddr ADDR,ADDRTYPE, getprotobynumber NUMBER,
getservbyport PORT,PROTO, getpwent, getgrent, gethostent, getnetent,
getprotoent, getservent, setpwent, setgrent, sethostent STAYOPEN, setnetent
STAYOPEN, setprotoent STAYOPEN, setservent STAYOPEN, endpwent, endgrent,
endhostent, endnetent, endprotoent, endservent, getsockname SOCKET,
getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob, gmtime EXPR, goto LABEL,
goto EXPR, goto &NAME, grep BLOCK LIST, grep EXPR,LIST, hex EXPR, hex,
import, index STR,SUBSTR,POSITION, index STR,SUBSTR, int EXPR, int, ioctl
FILEHANDLE,FUNCTION,SCALAR, join EXPR,LIST, keys HASH, kill SIGNAL, LIST,
last LABEL, last, lc EXPR, lc, lcfirst EXPR, lcfirst, length EXPR, length,
link OLDFILE,NEWFILE, listen SOCKET,QUEUESIZE, local EXPR, localtime EXPR,
lock THING, log EXPR, log, lstat EXPR, lstat, m//, map BLOCK LIST, map
EXPR,LIST, mkdir FILENAME,MASK, mkdir FILENAME, msgctl ID,CMD,ARG, msgget
KEY,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, msgsnd ID,MSG,FLAGS, my EXPR, my
TYPE EXPR, my EXPR : ATTRS, my TYPE EXPR : ATTRS, next LABEL, next, no
Module VERSION LIST, no Module VERSION, no Module LIST, no Module, oct
EXPR, oct, open FILEHANDLE,EXPR, open FILEHANDLE,MODE,EXPR, open
FILEHANDLE,MODE,EXPR,LIST, open FILEHANDLE,MODE,REFERENCE, open FILEHANDLE,
opendir DIRHANDLE,EXPR, ord EXPR, ord, our EXPR, our EXPR TYPE, our EXPR :
ATTRS, our TYPE EXPR : ATTRS, pack TEMPLATE,LIST, package NAMESPACE,
package, pipe READHANDLE,WRITEHANDLE, pop ARRAY, pop, pos SCALAR, pos,
print FILEHANDLE LIST, print LIST, print, printf FILEHANDLE FORMAT, LIST,
printf FORMAT, LIST, prototype FUNCTION, push ARRAY,LIST, q/STRING/,
qq/STRING/, qr/STRING/, qx/STRING/, qw/STRING/, quotemeta EXPR, quotemeta,
rand EXPR, rand, read FILEHANDLE,SCALAR,LENGTH,OFFSET, read
FILEHANDLE,SCALAR,LENGTH, readdir DIRHANDLE, readline EXPR, readlink EXPR,
readlink, readpipe EXPR, recv SOCKET,SCALAR,LENGTH,FLAGS, redo LABEL, redo,
ref EXPR, ref, rename OLDNAME,NEWNAME, require VERSION, require EXPR,
require, reset EXPR, reset, return EXPR, return, reverse LIST, rewinddir
DIRHANDLE, rindex STR,SUBSTR,POSITION, rindex STR,SUBSTR, rmdir FILENAME,
rmdir, s///, scalar EXPR, seek FILEHANDLE,POSITION,WHENCE, seekdir
DIRHANDLE,POS, select FILEHANDLE, select, select RBITS,WBITS,EBITS,TIMEOUT,
semctl ID,SEMNUM,CMD,ARG, semget KEY,NSEMS,FLAGS, semop KEY,OPSTRING, send
SOCKET,MSG,FLAGS,TO, send SOCKET,MSG,FLAGS, setpgrp PID,PGRP, setpriority
WHICH,WHO,PRIORITY, setsockopt SOCKET,LEVEL,OPTNAME,OPTVAL, shift ARRAY,
shift, shmctl ID,CMD,ARG, shmget KEY,SIZE,FLAGS, shmread ID,VAR,POS,SIZE,
shmwrite ID,STRING,POS,SIZE, shutdown SOCKET,HOW, sin EXPR, sin, sleep
EXPR, sleep, socket SOCKET,DOMAIN,TYPE,PROTOCOL, socketpair
SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, sort SUBNAME LIST, sort BLOCK LIST,
sort LIST, splice ARRAY,OFFSET,LENGTH,LIST, splice ARRAY,OFFSET,LENGTH,
splice ARRAY,OFFSET, splice ARRAY, split /PATTERN/,EXPR,LIMIT, split
/PATTERN/,EXPR, split /PATTERN/, split, sprintf FORMAT, LIST, format
parameter index, flags, vector flag, (minimum) width, precision, or maximum
width, size, order of arguments, sqrt EXPR, sqrt, srand EXPR, srand, stat
FILEHANDLE, stat EXPR, stat, study SCALAR, study, sub NAME BLOCK, sub NAME
(PROTO) BLOCK, sub NAME : ATTRS BLOCK, sub NAME (PROTO) : ATTRS BLOCK,
substr EXPR,OFFSET,LENGTH,REPLACEMENT, substr EXPR,OFFSET,LENGTH, substr
EXPR,OFFSET, symlink OLDFILE,NEWFILE, syscall LIST, sysopen
FILEHANDLE,FILENAME,MODE, sysopen FILEHANDLE,FILENAME,MODE,PERMS, sysread
FILEHANDLE,SCALAR,LENGTH,OFFSET, sysread FILEHANDLE,SCALAR,LENGTH, sysseek
FILEHANDLE,POSITION,WHENCE, system LIST, system PROGRAM LIST, syswrite
FILEHANDLE,SCALAR,LENGTH,OFFSET, syswrite FILEHANDLE,SCALAR,LENGTH,
syswrite FILEHANDLE,SCALAR, tell FILEHANDLE, tell, telldir DIRHANDLE, tie
VARIABLE,CLASSNAME,LIST, tied VARIABLE, time, times, tr///, truncate
FILEHANDLE,LENGTH, truncate EXPR,LENGTH, uc EXPR, uc, ucfirst EXPR,
ucfirst, umask EXPR, umask, undef EXPR, undef, unlink LIST, unlink, unpack
TEMPLATE,EXPR, untie VARIABLE, unshift ARRAY,LIST, use Module VERSION LIST,
use Module VERSION, use Module LIST, use Module, use VERSION, utime LIST,
values HASH, vec EXPR,OFFSET,BITS, wait, waitpid PID,FLAGS, wantarray, warn
LIST, write FILEHANDLE, write EXPR, write, y///
d411 1
a411 1
=back
d413 1
a413 1
=back
d415 1
a415 1
=head2 perlreftut - Mark's very short tutorial about references
d417 1
a417 1
=over 4
d419 1
a419 1
=item DESCRIPTION
d421 1
a421 1
=item Who Needs Complicated Data Structures?
d423 1
a423 1
=item The Solution
d425 1
a425 1
=item Syntax
d427 1
a427 1
=over 4
d429 1
a429 1
=item Making References
d431 1
a431 1
=item Using References
d433 1
a433 1
=back
d435 1
a435 1
=item An Example
d437 1
a437 1
=item Arrow Rule
d439 1
a439 1
=item Solution
d441 1
a441 1
=item The Rest
d443 1
a443 1
=item Summary
d445 1
a445 1
=item Credits
d447 1
a447 1
=over 4
d449 1
a449 1
=item Distribution Conditions
d451 1
a451 1
=back
d455 1
a455 1
=head2 perldsc - Perl Data Structures Cookbook
d459 1
a459 1
=item DESCRIPTION
d461 1
a461 2
arrays of arrays, hashes of arrays, arrays of hashes, hashes of hashes,
more elaborate constructs
d463 1
a463 1
=item REFERENCES
d465 1
a465 1
=item COMMON MISTAKES
d467 1
a467 1
=item CAVEAT ON PRECEDENCE
d469 1
a469 1
=item WHY YOU SHOULD ALWAYS C<use strict>
d471 1
a471 5
=item DEBUGGING

=item CODE EXAMPLES

=item ARRAYS OF ARRAYS
d475 1
a475 1
=item Declaration of an ARRAY OF ARRAYS
d477 1
a477 1
=item Generation of an ARRAY OF ARRAYS
d479 1
a479 1
=item Access and Printing of an ARRAY OF ARRAYS
d483 1
a483 1
=item HASHES OF ARRAYS
d487 1
a487 1
=item Declaration of a HASH OF ARRAYS
d489 1
a489 3
=item Generation of a HASH OF ARRAYS

=item Access and Printing of a HASH OF ARRAYS
d493 1
a493 1
=item ARRAYS OF HASHES
d497 1
a497 1
=item Declaration of an ARRAY OF HASHES
d499 1
a499 3
=item Generation of an ARRAY OF HASHES

=item Access and Printing of an ARRAY OF HASHES
d503 1
a503 1
=item HASHES OF HASHES
d507 1
a507 1
=item Declaration of a HASH OF HASHES
d509 1
a509 3
=item Generation of a HASH OF HASHES

=item Access and Printing of a HASH OF HASHES
d513 1
a513 1
=item MORE ELABORATE RECORDS
d517 3
a519 1
=item Declaration of MORE ELABORATE RECORDS
d521 1
a521 1
=item Declaration of a HASH OF COMPLEX RECORDS
d523 1
a523 1
=item Generation of a HASH OF COMPLEX RECORDS
d525 1
a525 1
=back
d527 1
a527 1
=item Database Ties
d529 1
a529 1
=item SEE ALSO
d531 1
a531 1
=item AUTHOR
d535 1
a535 1
=head2 perlrequick - Perl regular expressions quick start
d541 3
a543 1
=item The Guide
d547 11
a557 1
=item Simple word matching
d559 1
a559 1
=item Using character classes
d561 1
a561 1
=item Matching this or that
d563 1
a563 1
=item Grouping things and hierarchical matching
d565 1
a565 1
=item Extracting matches
d567 1
a567 1
=item Matching repetitions
d569 1
a569 1
=item More matching
d571 1
a571 1
=item Search and replace
d573 1
a573 1
=item The split operator
d577 1
a577 1
=item BUGS
d583 1
a583 1
=over 4
d585 1
a585 1
=item Acknowledgments
d589 1
a589 3
=back

=head2 perlpod - the Plain Old Documentation format
d595 1
a595 1
=over 4
d597 1
a597 1
=item Ordinary Paragraph
d599 1
a599 1
=item Verbatim Paragraph
d601 1
a601 1
=item Command Paragraph
d603 1
a603 4
C<=head1 I<Heading Text>>, C<=head2 I<Heading Text>>, C<=head3 I<Heading
Text>>, C<=head4 I<Heading Text>>, C<=over I<indentlevel>>, C<=item
I<stuff...>>, C<=back>, C<=cut>, C<=pod>, C<=begin I<formatname>>, C<=end
I<formatname>>, C<=for I<formatname> I<text...>>
d605 1
a605 1
=item Formatting Codes
d607 1
a607 6
C<IE<lt>textE<gt>> -- italic text, C<BE<lt>textE<gt>> -- bold text,
C<CE<lt>codeE<gt>> -- code text, C<LE<lt>nameE<gt>> -- a hyperlink,
C<EE<lt>escapeE<gt>> -- a character escape, C<FE<lt>filenameE<gt>> -- used
for filenames, C<SE<lt>textE<gt>> -- text contains non-breaking spaces,
C<XE<lt>topic nameE<gt>> -- an index entry, C<ZE<lt>E<gt>> -- a null
(zero-effect) formatting code
d609 1
a609 1
=item The Intent
d611 1
a611 1
=item Embedding Pods in Perl Modules
d613 1
a613 1
=item Hints for Writing Pod
d615 1
a615 1
=back
a618 2
=item AUTHOR

d621 1
a621 2
=head2 perlpodspec - Plain Old Documentation: format specification and
notes
d627 1
a627 1
=item Pod Definitions
d629 1
a629 1
=item Pod Commands
d631 1
a631 2
"=head1", "=head2", "=head3", "=head4", "=pod", "=cut", "=over", "=item",
"=back", "=begin formatname", "=end formatname", "=for formatname text..."
d633 1
a633 1
=item Pod Formatting Codes
d635 1
a635 6
C<IE<lt>textE<gt>> -- italic text, C<BE<lt>textE<gt>> -- bold text,
C<CE<lt>codeE<gt>> -- code text, C<FE<lt>filenameE<gt>> -- style for
filenames, C<XE<lt>topic nameE<gt>> -- an index entry, C<ZE<lt>E<gt>> -- a
null (zero-effect) formatting code, C<LE<lt>nameE<gt>> -- a hyperlink,
C<EE<lt>escapeE<gt>> -- a character escape, C<SE<lt>textE<gt>> -- text
contains non-breaking spaces
d637 1
a637 1
=item Notes on Implementing Pod Processors
d639 1
a639 1
=item About LE<lt>...E<gt> Codes
d641 1
a641 1
First:, Second:, Third:, Fourth:, Fifth:, Sixth:
d643 1
a643 3
=item About =over...=back Regions

=item About Data Paragraphs and "=begin/=end" Regions
a646 10
=item AUTHOR

=back

=head2 perlstyle - Perl style guide

=over 4

=item DESCRIPTION

d659 1
a659 1
=item C Traps
d706 1
a706 1
Regular Expression
d734 1
a734 1
=head2 perlrun - how to execute the Perl interpreter
a737 2
=item SYNOPSIS

d740 1
a740 1
=over 4
d742 1
a742 1
=item #! and quoting on non-Unix systems
d744 1
a744 1
OS/2, MS-DOS, Win95/NT, Macintosh, VMS
d746 1
a746 1
=item Location of Perl
d748 1
a748 1
=item Command Switches
d750 1
a750 7
B<-0>[I<digits>], B<-a>, B<-C>, B<-c>, B<-d>, B<-d:>I<foo[=bar,baz]>,
B<-D>I<letters>, B<-D>I<number>, B<-e> I<commandline>, B<-F>I<pattern>,
B<-h>, B<-i>[I<extension>], B<-I>I<directory>, B<-l>[I<octnum>],
B<-m>[B<->]I<module>, B<-M>[B<->]I<module>, B<-M>[B<->]I<'module ...'>,
B<-[mM]>[B<->]I<module=arg[,arg]...>, B<-n>, B<-p>, B<-P>, B<-s>, B<-S>,
B<-t>, B<-T>, B<-u>, B<-U>, B<-v>, B<-V>, B<-V:>I<name>, B<-w>, B<-W>,
B<-X>, B<-x> I<directory>
d752 1
a752 1
=back
d754 1
a754 1
=item ENVIRONMENT
d756 1
a756 5
HOME, LOGDIR, PATH, PERL5LIB, PERL5OPT, PERLIO, :bytes, :crlf, :mmap,
:perlio, :raw, :stdio, :unix, :utf8, :win32, PERLIO_DEBUG, PERLLIB,
PERL5DB, PERL5SHELL (specific to the Win32 port), PERL_DEBUG_MSTATS,
PERL_DESTRUCT_LEVEL, PERL_ENCODING, PERL_ROOT (specific to the VMS port),
SYS$LOGIN (specific to the VMS port)
d758 1
a758 1
=back
d760 1
a760 1
=head2 perldiag - various Perl diagnostics
d762 1
a762 1
=over 4
d764 1
a764 1
=item DESCRIPTION
d768 2
a769 1
=head2 perllexwarn - Perl Lexical Warnings
d777 3
a779 1
=item Default Warnings and Optional Warnings
d781 2
a782 1
=item What's wrong with B<-w> and C<$^W>
d784 1
a784 1
=item Controlling Warnings from the Command Line
d786 1
a786 1
B<-w>, B<-W>, B<-X>
d788 1
a788 1
=item Backward Compatibility
d790 1
a790 1
=item Category Hierarchy
d792 1
a792 1
=item Fatal Warnings
d794 1
a794 1
=item Reporting Warnings from a Module
d798 1
a798 5
=item TODO

=item SEE ALSO

=item AUTHOR
d800 5
a804 1
=back
d806 1
a806 1
=head2 perldebtut - Perl debugging tutorial
d810 1
a810 1
=item DESCRIPTION
d812 1
a812 1
=item use strict
d814 1
a814 1
=item Looking at data and -w and v
d816 1
a816 1
=item help
d818 1
a818 1
=item Stepping through code
d820 1
a820 1
=item Placeholder for a, w, t, T
d822 1
a822 1
=item REGULAR EXPRESSIONS
d824 1
a824 1
=item OUTPUT TIPS
d826 1
a826 1
=item CGI
d828 1
a828 9
=item GUIs

=item SUMMARY

=item SEE ALSO

=item AUTHOR

=item CONTRIBUTORS
d832 2
a833 1
=head2 perldebug - Perl debugging
d839 3
a841 1
=item The Perl Debugger
d843 1
a843 1
=over 4
d845 1
a845 1
=item Debugger Commands
d847 1
a847 10
h, h [command], h h, p expr, x [maxdepth] expr, V [pkg [vars]], X [vars], y
[level [vars]], T, s [expr], n [expr], r, <CR>, c [line|sub], l, l
min+incr, l min-max, l line, l subname, -, v [line], f filename, /pattern/,
?pattern?, L [abw], S [[!]regex], t, t expr, b, b [line] [condition], b
subname [condition], b postpone subname [condition], b load filename, b
compile subname, B line, B *, a [line] command, A line, A *, w expr, W
expr, W *, o, o booloption .., o anyoption? .., o option=value .., < ?, < [
command ], << command, > ?, > command, >> command, { ?, { [ command ], {{
command, ! number, ! -number, ! pattern, !! cmd, source file, H -number, q
or ^D, R, |dbcmd, ||dbcmd, command, m expr, M, man [manpage]
d849 1
a849 1
=item Configurable Options
d851 1
a851 7
C<recallCommand>, C<ShellBang>, C<pager>, C<tkRunning>, C<signalLevel>,
C<warnLevel>, C<dieLevel>, C<AutoTrace>, C<LineInfo>, C<inhibit_exit>,
C<PrintRet>, C<ornaments>, C<frame>, C<maxTraceLen>, C<windowSize>,
C<arrayDepth>, C<hashDepth>, C<dumpDepth>, C<compactDump>, C<veryCompact>,
C<globPrint>, C<DumpDBFiles>, C<DumpPackages>, C<DumpReused>, C<quote>,
C<HighBit>, C<undefPrint>, C<UsageOnly>, C<TTY>, C<noTTY>, C<ReadLine>,
C<NonStop>
d853 1
a853 1
=item Debugger input/output
d855 1
a855 2
Prompt, Multiline commands, Stack backtrace, Line Listing Format, Frame
listing
d857 2
a858 1
=item Debugging compile-time statements
d860 1
a860 1
=item Debugger Customization
d862 1
a862 1
=item Readline Support
d864 1
a864 1
=item Editor Support for Debugging
d866 1
a866 1
=item The Perl Profiler
d868 1
a868 1
=back
d870 1
a870 1
=item Debugging regular expressions
d872 2
a873 1
=item Debugging memory usage
d875 1
a875 1
=item SEE ALSO
d877 1
a877 1
=item BUGS
d881 2
a882 1
=head2 perlvar - Perl predefined variables
d890 1
a890 1
=item Predefined Names
d892 1
a892 31
$ARG, $_, $a, $b, $<I<digits>>, $MATCH, $&, $PREMATCH, $`, $POSTMATCH, $',
$LAST_PAREN_MATCH, $+, $^N, @@LAST_MATCH_END, @@+, $MULTILINE_MATCHING, $*,
HANDLE->input_line_number(EXPR), $INPUT_LINE_NUMBER, $NR, $,
IO::Handle->input_record_separator(EXPR), $INPUT_RECORD_SEPARATOR, $RS, $/,
HANDLE->autoflush(EXPR), $OUTPUT_AUTOFLUSH, $|,
IO::Handle->output_field_separator EXPR, $OUTPUT_FIELD_SEPARATOR, $OFS, $,,
IO::Handle->output_record_separator EXPR, $OUTPUT_RECORD_SEPARATOR, $ORS,
$\, $LIST_SEPARATOR, $", $SUBSCRIPT_SEPARATOR, $SUBSEP, $;, $OFMT, $#,
HANDLE->format_page_number(EXPR), $FORMAT_PAGE_NUMBER, $%,
HANDLE->format_lines_per_page(EXPR), $FORMAT_LINES_PER_PAGE, $=,
HANDLE->format_lines_left(EXPR), $FORMAT_LINES_LEFT, $-, @@LAST_MATCH_START,
@@-, C<$`> is the same as C<substr($var, 0, $-[0])>, C<$&> is the same as
C<substr($var, $-[0], $+[0] - $-[0])>, C<$'> is the same as C<substr($var,
$+[0])>, C<$1> is the same as C<substr($var, $-[1], $+[1] - $-[1])>, C<$2>
is the same as C<substr($var, $-[2], $+[2] - $-[2])>, C<$3> is the same as
C<substr $var, $-[3], $+[3] - $-[3])>, HANDLE->format_name(EXPR),
$FORMAT_NAME, $~, HANDLE->format_top_name(EXPR), $FORMAT_TOP_NAME, $^,
IO::Handle->format_line_break_characters EXPR,
$FORMAT_LINE_BREAK_CHARACTERS, $:, IO::Handle->format_formfeed EXPR,
$FORMAT_FORMFEED, $^L, $ACCUMULATOR, $^A, $CHILD_ERROR, $?, ${^ENCODING},
$OS_ERROR, $ERRNO, $!, %!, $EXTENDED_OS_ERROR, $^E, $EVAL_ERROR, $@@,
$PROCESS_ID, $PID, $$, $REAL_USER_ID, $UID, $<, $EFFECTIVE_USER_ID, $EUID,
$>, $REAL_GROUP_ID, $GID, $(, $EFFECTIVE_GROUP_ID, $EGID, $),
$PROGRAM_NAME, $0, $[, $], $COMPILING, $^C, $DEBUGGING, $^D,
$SYSTEM_FD_MAX, $^F, $^H, %^H, $INPLACE_EDIT, $^I, $^M, $OSNAME, $^O,
${^OPEN}, $PERLDB, $^P, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
0x100, 0x200, $LAST_REGEXP_CODE_RESULT, $^R, $EXCEPTIONS_BEING_CAUGHT, $^S,
$BASETIME, $^T, ${^TAINT}, $PERL_VERSION, $^V, $WARNING, $^W,
${^WARNING_BITS}, ${^WIDE_SYSTEM_CALLS}, $EXECUTABLE_NAME, $^X, ARGV,
$ARGV, @@ARGV, ARGVOUT, @@F, @@INC, @@_, %INC, %ENV, $ENV{expr}, %SIG,
$SIG{expr}
d894 1
a894 1
=item Error Indicators
d896 2
a897 1
=item Technical Note on the Syntax of Variable Names
d899 2
a900 1
=back
d902 2
a903 1
=item BUGS
d905 1
a905 1
=back
d907 1
a907 1
=head2 perllol - Manipulating Arrays of Arrays in Perl
d909 1
a909 1
=over 4
d911 1
a911 1
=item DESCRIPTION
d913 1
a913 1
=over 4
d915 1
a915 1
=item Declaration and Access of Arrays of Arrays
d917 9
a925 1
=item Growing Your Own
d927 1
a927 1
=item Access and Printing
d929 1
a929 1
=item Slices
d933 1
a933 3
=item SEE ALSO

=item AUTHOR
d937 2
a938 1
=head2 perlopentut - tutorial on opening things in Perl
d944 15
a958 1
=item Open E<agrave> la shell
d960 1
a960 1
=over 4
d962 1
a962 1
=item Simple Opens
d964 1
a964 1
=item Pipe Opens
d966 3
a968 1
=item The Minus File
d970 1
a970 1
=item Mixing Reads and Writes
d972 1
a972 1
=item Filters 
d974 1
a974 1
=back
d976 1
a976 1
=item Open E<agrave> la C
d978 1
a978 1
=over 4
d980 1
a980 1
=item Permissions E<agrave> la mode
d982 1
a982 1
=back
d984 2
a985 1
=item Obscure Open Tricks
d987 1
a987 1
=over 4
d989 1
a989 1
=item Re-Opening Files (dups)
d991 1
a991 1
=item Dispelling the Dweomer
d993 1
a993 1
=item Paths as Opens
d995 1
a995 1
=item Single Argument Open
d997 1
a997 1
=item Playing with STDIN and STDOUT
d999 1
a999 1
=back
d1001 1
a1001 1
=item Other I/O Issues
d1003 1
a1003 1
=over 4
d1005 1
a1005 1
=item Opening Non-File Files
d1007 1
a1007 1
=item Binary Files
d1009 1
a1009 1
=item File Locking
d1011 2
a1012 1
=item IO Layers
d1014 1
a1014 1
=back
d1016 1
a1016 1
=item SEE ALSO 
d1018 1
a1018 1
=item AUTHOR and COPYRIGHT
d1020 1
a1020 1
=item HISTORY
d1024 2
a1025 1
=head2 perlpacktut - tutorial on C<pack> and C<unpack>
d1031 1
a1031 5
=item The Basic Principle

=item Packing Text

=item Packing Numbers
d1035 2
a1036 1
=item Integers
d1038 1
a1038 1
=item Unpacking a Stack Frame
d1040 1
a1040 1
=item How to Eat an Egg on a Net
d1042 2
a1043 1
=item Floating point Numbers
d1045 1
a1045 1
=back
d1047 4
a1050 1
=item Exotic Templates
d1052 1
a1052 1
=over 4
d1054 1
a1054 1
=item Bit Strings
d1056 1
a1056 1
=item Uuencoding
d1058 1
a1058 1
=item Doing Sums
d1060 1
a1060 1
=item  Unicode
d1062 1
a1062 1
=item Another Portable Binary Encoding
d1066 1
a1066 1
=item Lengths and Widths
d1070 11
a1080 1
=item String Lengths
d1082 1
a1082 1
=item Dynamic Templates
d1086 1
a1086 1
=item Packing and Unpacking C Structures
d1090 1
a1090 1
=item The Alignment Pit
d1092 1
a1092 1
=item Alignment, Take 2
d1094 1
a1094 1
=item Alignment, Take 3
d1096 1
a1096 1
=item Pointers for How to Use Them
d1098 1
a1098 1
=back
d1100 1
a1100 1
=item Pack Recipes
d1102 1
a1102 1
=item Funnies Section
d1104 1
a1104 1
=item Authors
d1106 1
a1106 1
=back
d1108 1
a1108 1
=head2 perlretut - Perl regular expressions tutorial
d1110 2
a1111 1
=over 4
d1113 1
a1113 1
=item DESCRIPTION
d1115 2
a1116 1
=item Part 1: The basics
d1118 1
a1118 1
=over 4
d1120 1
a1120 1
=item Simple word matching
d1122 1
a1122 1
=item Using character classes
d1124 1
a1124 1
=item Matching this or that
d1126 1
a1126 1
=item Grouping things and hierarchical matching
d1128 1
a1128 1
=item Extracting matches
d1130 1
a1130 1
=item Matching repetitions
d1132 3
a1134 3
=item Building a regexp

=item Using regular expressions in Perl
d1138 1
a1138 1
=item Part 2: Power tools
d1142 3
a1144 1
=item More on characters, strings, and character classes
d1146 1
a1146 1
=item Compiling and saving regular expressions
d1148 1
a1148 1
=item Embedding comments and modifiers in a regular expression
d1150 2
a1151 1
=item Non-capturing groupings
d1153 2
a1154 1
=item Looking ahead and looking behind
d1156 1
a1156 1
=item Using independent subexpressions to prevent backtracking
d1158 1
a1158 1
=item Conditional expressions
d1160 1
a1160 1
=item A bit of magic: executing Perl code in a regular expression
d1162 1
a1162 1
=item Pragmas and debugging
d1164 1
a1164 1
=back
d1166 1
a1166 1
=item BUGS
d1168 1
a1168 1
=item SEE ALSO
d1170 1
a1170 1
=item AUTHOR AND COPYRIGHT
d1172 1
a1172 1
=over 4
d1174 1
a1174 1
=item Acknowledgments
d1176 1
a1176 1
=back
d1180 1
a1180 1
=head2 perlre - Perl regular expressions
d1184 1
a1184 1
=item DESCRIPTION
d1186 2
a1187 1
i, m, s, x
d1189 1
a1189 1
=over 4
d1191 1
a1191 1
=item Regular Expressions
d1193 1
a1193 1
[1], [2], [3], cntrl, graph, print, punct, xdigit
d1195 1
a1195 1
=item Extended Patterns
d1197 1
a1197 4
C<(?#text)>, C<(?imsx-imsx)>, C<(?:pattern)>, C<(?imsx-imsx:pattern)>,
C<(?=pattern)>, C<(?!pattern)>, C<(?<=pattern)>, C<(?<!pattern)>, C<(?{
code })>, C<(??{ code })>, C<< (?>pattern) >>,
C<(?(condition)yes-pattern|no-pattern)>, C<(?(condition)yes-pattern)>
d1199 1
a1199 1
=item Backtracking
d1201 1
a1201 1
=item Version 8 Regular Expressions
d1203 1
a1203 1
=item Warning on \1 vs $1
d1205 1
a1205 1
=item Repeated patterns matching zero-length substring
d1207 1
a1207 1
=item Combining pieces together
d1209 2
a1210 4
C<ST>, C<S|T>, C<S{REPEAT_COUNT}>, C<S{min,max}>, C<S{min,max}?>, C<S?>,
C<S*>, C<S+>, C<S??>, C<S*?>, C<S+?>, C<< (?>S) >>, C<(?=S)>, C<(?<=S)>,
C<(?!S)>, C<(?<!S)>, C<(??{ EXPR })>,
C<(?(condition)yes-pattern|no-pattern)>
d1212 2
a1213 1
=item Creating custom RE engines
d1215 1
a1215 5
=back

=item BUGS

=item SEE ALSO
d1219 1
a1219 1
=head2 perlref - Perl references and nested data structures
d1223 1
a1223 1
=item NOTE
d1225 1
a1225 1
=item DESCRIPTION
d1227 1
a1227 1
=over 4
d1229 1
a1229 1
=item Making References
d1231 1
a1231 1
=item Using References
d1233 1
a1233 1
=item Symbolic references
d1235 1
a1235 5
=item Not-so-symbolic references

=item Pseudo-hashes: Using an array as a hash

=item Function Templates
d1239 1
a1239 3
=item WARNING

=item SEE ALSO
d1243 2
a1244 1
=head2 perlform - Perl formats
d1252 8
a1259 1
=item Format Variables
d1261 1
a1261 1
=back
d1263 1
a1263 1
=item NOTES
d1265 2
a1266 1
=over 4
d1268 1
a1268 1
=item Footers
d1270 1
a1270 1
=item Accessing Formatting Internals
d1272 1
a1272 1
=back
d1274 1
a1274 1
=item WARNINGS
d1276 1
a1276 1
=back
d1278 1
a1278 1
=head2 perlboot - Beginner's Object-Oriented Tutorial
d1280 2
a1281 1
=over 4
d1283 1
a1283 1
=item DESCRIPTION
d1285 1
a1285 1
=over 4
d1287 1
a1287 1
=item If we could talk to the animals...
d1289 1
a1289 1
=item Introducing the method invocation arrow
d1291 1
a1291 1
=item Invoking a barnyard
d1293 2
a1294 1
=item The extra parameter of method invocation
d1296 2
a1297 1
=item Calling a second method to simplify things
d1299 1
a1299 1
=item Inheriting the windpipes
d1301 1
a1301 1
=item A few notes about @@ISA
d1303 1
a1303 1
=item Overriding the methods
d1305 1
a1305 1
=item Starting the search from a different place
d1307 1
a1307 1
=item The SUPER way of doing things
d1309 1
a1309 1
=item Where we're at so far...
d1311 1
a1311 1
=item A horse is a horse, of course of course -- or is it?
d1313 1
a1313 1
=item Invoking an instance method
d1315 1
a1315 1
=item Accessing the instance data
d1317 1
a1317 1
=item How to build a horse
d1319 1
a1319 1
=item Inheriting the constructor
d1321 2
a1322 1
=item Making a method work with either classes or instances
d1324 1
a1324 1
=item Adding parameters to a method
d1326 2
a1327 1
=item More interesting instances
d1329 1
a1329 1
=item A horse of a different color
d1331 1
a1331 1
=item Summary
d1335 1
a1335 3
=item SEE ALSO

=item COPYRIGHT
d1339 2
a1340 1
=head2 perltoot - Tom's object-oriented tutorial for perl
d1346 1
a1346 1
=item Creating a Class
d1348 2
a1349 1
=over 4
d1351 1
a1351 1
=item Object Representation
d1353 1
a1353 1
=item Class Interface
d1355 2
a1356 1
=item Constructors and Instance Methods
d1358 1
a1358 1
=item Planning for the Future: Better Constructors
d1360 2
a1361 1
=item Destructors
d1363 1
a1363 1
=item Other Object Methods
d1365 1
a1365 1
=back
d1367 1
a1367 1
=item Class Data
d1369 1
a1369 1
=over 4
d1371 2
a1372 1
=item Accessing Class Data
d1374 1
a1374 1
=item Debugging Methods
d1376 1
a1376 1
=item Class Destructors
d1378 1
a1378 1
=item Documenting the Interface
d1380 1
a1380 1
=back
d1382 1
a1382 1
=item Aggregation
d1384 1
a1384 1
=item Inheritance
d1386 1
a1386 1
=over 4
d1388 1
a1388 1
=item Overridden Methods
d1390 1
a1390 1
=item Multiple Inheritance
d1392 1
a1392 1
=item UNIVERSAL: The Root of All Objects
d1394 1
a1394 1
=back
d1396 1
a1396 1
=item Alternate Object Representations
d1398 1
a1398 1
=over 4
d1400 1
a1400 1
=item Arrays as Objects
d1402 1
a1402 1
=item Closures as Objects
d1406 6
a1411 1
=item AUTOLOAD: Proxy Methods
d1415 4
a1418 1
=item Autoloaded Data Methods
d1420 2
a1421 1
=item Inherited Autoloaded Data Methods
d1423 1
a1423 1
=back
d1425 1
a1425 1
=item Metaclassical Tools
d1427 1
a1427 1
=over 4
d1429 1
a1429 1
=item Class::Struct
d1431 1
a1431 1
=item Data Members as Variables
d1433 1
a1433 1
=back
d1435 1
a1435 1
=item NOTES
d1437 1
a1437 1
=over 4
d1439 1
a1439 1
=item Object Terminology
d1441 1
a1441 1
=back
d1443 2
a1444 1
=item SEE ALSO
d1446 2
a1447 1
=item AUTHOR AND COPYRIGHT
d1449 1
a1449 1
=item COPYRIGHT
d1451 2
a1452 1
=over 4
d1454 2
a1455 1
=item Acknowledgments
d1457 1
a1457 1
=back
d1459 1
a1459 1
=back
d1461 1
a1461 1
=head2 perltooc - Tom's OO Tutorial for Class Data in Perl
d1463 1
a1463 1
=over 4
d1465 1
a1465 1
=item DESCRIPTION
d1467 2
a1468 1
=item Class Data in a Can
d1470 1
a1470 1
=item Class Data as Package Variables
d1472 1
a1472 1
=over 4
d1474 1
a1474 1
=item Putting All Your Eggs in One Basket
d1476 1
a1476 1
=item Inheritance Concerns
d1478 1
a1478 1
=item The Eponymous Meta-Object
d1480 1
a1480 1
=item Indirect References to Class Data
d1482 1
a1482 1
=item Monadic Classes
d1484 1
a1484 1
=item Translucent Attributes
d1488 2
a1489 1
=item Class Data as Lexical Variables
d1493 1
a1493 1
=item Privacy and Responsibility 
d1495 1
a1495 1
=item File-Scoped Lexicals
d1497 1
a1497 1
=item More Inheritance Concerns
d1499 1
a1499 1
=item Locking the Door and Throwing Away the Key
d1501 1
a1501 1
=item Translucency Revisited
d1503 1
a1503 1
=back
d1505 1
a1505 1
=item NOTES
d1507 1
a1507 1
=item SEE ALSO
d1509 1
a1509 1
=item AUTHOR AND COPYRIGHT
d1511 1
a1511 1
=item ACKNOWLEDGEMENTS
d1513 1
a1513 1
=item HISTORY
d1515 1
a1515 1
=back
d1517 1
a1517 1
=head2 perlobj - Perl objects
d1519 1
a1519 1
=over 4
d1521 1
a1521 1
=item DESCRIPTION
d1523 1
a1523 1
=over 4
d1525 1
a1525 1
=item An Object is Simply a Reference
d1527 1
a1527 1
=item A Class is Simply a Package
d1529 1
a1529 1
=item A Method is Simply a Subroutine
d1531 1
a1531 1
=item Method Invocation
d1533 1
a1533 1
=item Indirect Object Syntax
d1535 1
a1535 1
=item Default UNIVERSAL methods
d1537 1
a1537 1
isa(CLASS), can(METHOD), VERSION( [NEED] )
d1539 2
a1540 1
=item Destructors
d1542 1
a1542 1
=item Summary
d1544 1
a1544 1
=item Two-Phased Garbage Collection
d1546 1
a1546 1
=back
d1548 1
a1548 1
=item SEE ALSO
d1550 1
a1550 1
=back
d1552 1
a1552 1
=head2 perlbot - Bag'o Object Tricks (the BOT)
d1554 1
a1554 1
=over 4
d1556 1
a1556 1
=item DESCRIPTION
d1558 1
a1558 1
=item OO SCALING TIPS
d1560 2
a1561 1
=item INSTANCE VARIABLES
d1563 1
a1563 1
=item SCALAR INSTANCE VARIABLES
d1565 1
a1565 1
=item INSTANCE VARIABLE INHERITANCE
d1567 1
a1567 1
=item OBJECT RELATIONSHIPS
d1569 2
a1570 1
=item OVERRIDING SUPERCLASS METHODS
d1572 3
a1574 1
=item USING RELATIONSHIP WITH SDBM
d1576 1
a1576 1
=item THINKING OF CODE REUSE
d1578 2
a1579 1
=item CLASS CONTEXT AND THE OBJECT
d1581 1
a1581 1
=item INHERITING A CONSTRUCTOR
d1583 1
a1583 1
=item DELEGATION
d1585 1
a1585 1
=back
d1587 1
a1587 1
=head2 perltie - how to hide an object class in a simple variable
d1589 1
a1589 1
=over 4
d1591 1
a1591 1
=item SYNOPSIS
d1593 1
a1593 1
=item DESCRIPTION
d1595 1
a1595 1
=over 4
d1597 1
a1597 1
=item Tying Scalars
d1599 1
a1599 2
TIESCALAR classname, LIST, FETCH this, STORE this, value, UNTIE this,
DESTROY this
d1601 1
a1601 1
=item Tying Arrays
d1603 2
a1604 5
TIEARRAY classname, LIST, FETCH this, index, STORE this, index, value,
FETCHSIZE this, STORESIZE this, count, EXTEND this, count, EXISTS this,
key, DELETE this, key, CLEAR this, PUSH this, LIST, POP this, SHIFT this,
UNSHIFT this, LIST, SPLICE this, offset, length, LIST, UNTIE this, DESTROY
this
d1606 1
a1606 1
=item Tying Hashes
d1608 1
a1608 3
USER, HOME, CLOBBER, LIST, TIEHASH classname, LIST, FETCH this, key, STORE
this, key, value, DELETE this, key, CLEAR this, EXISTS this, key, FIRSTKEY
this, NEXTKEY this, lastkey, UNTIE this, DESTROY this
d1610 1
a1610 1
=item Tying FileHandles
d1612 1
a1612 3
TIEHANDLE classname, LIST, WRITE this, LIST, PRINT this, LIST, PRINTF this,
LIST, READ this, LIST, READLINE this, GETC this, CLOSE this, UNTIE this,
DESTROY this
d1614 1
a1614 1
=item UNTIE this
d1616 2
a1617 1
=item The C<untie> Gotcha
d1619 1
a1619 1
=back
d1621 1
a1621 1
=item SEE ALSO
d1623 1
a1623 1
=item BUGS
d1625 1
a1625 1
=item AUTHOR
d1627 2
a1628 1
=back
d1630 1
a1630 2
=head2 perlipc - Perl interprocess communication (signals, fifos, pipes,
safe subprocesses, sockets, and semaphores)
d1632 1
a1632 1
=over 4
d1634 1
a1634 1
=item DESCRIPTION
d1636 2
a1637 1
=item Signals
d1639 1
a1639 1
=over 4
d1641 1
a1641 1
=item Handling the SIGHUP Signal in Daemons
d1643 1
a1643 1
=back
d1645 1
a1645 1
=item Named Pipes
d1647 1
a1647 1
=over 4
d1649 1
a1649 1
=item Deferred Signals
d1651 1
a1651 2
Long running opcodes, Interrupting IO, Signals as "faults", Signals
triggered by operating system state
d1653 2
a1654 1
=back
d1656 1
a1656 1
=item Using open() for IPC
d1658 1
a1658 1
=over 4
d1660 1
a1660 1
=item Filehandles
d1662 1
a1662 1
=item Background Processes
d1664 1
a1664 1
=item Complete Dissociation of Child from Parent
d1666 1
a1666 1
=item Safe Pipe Opens
d1668 1
a1668 1
=item Bidirectional Communication with Another Process
d1670 1
a1670 1
=item Bidirectional Communication with Yourself
d1672 1
a1672 1
=back
d1674 1
a1674 1
=item Sockets: Client/Server Communication
d1676 1
a1676 1
=over 4
d1678 1
a1678 1
=item Internet Line Terminators
d1680 1
a1680 1
=item Internet TCP Clients and Servers
d1682 1
a1682 1
=item Unix-Domain TCP Clients and Servers
d1686 5
a1690 1
=item TCP Clients with IO::Socket
d1694 3
a1696 1
=item A Simple Client
d1698 1
a1698 1
C<Proto>, C<PeerAddr>, C<PeerPort>
d1700 1
a1700 1
=item A Webget Client
d1702 1
a1702 1
=item Interactive Client with IO::Socket
d1704 1
a1704 1
=back
d1706 1
a1706 1
=item TCP Servers with IO::Socket
d1708 1
a1708 1
Proto, LocalPort, Listen, Reuse
d1710 1
a1710 1
=item UDP: Message Passing
d1712 1
a1712 1
=item SysV IPC
d1714 1
a1714 1
=item NOTES
d1716 1
a1716 1
=item BUGS
d1718 1
a1718 1
=item AUTHOR
d1720 1
a1720 1
=item SEE ALSO
d1724 1
a1724 1
=head2 perlfork - Perl's fork() emulation
a1727 2
=item SYNOPSIS

d1732 3
a1734 1
=item Behavior of other Perl features in forked pseudo-processes
d1736 1
a1736 3
$$ or $PROCESS_ID, %ENV, chdir() and all other builtins that accept
filenames, wait() and waitpid(), kill(), exec(), exit(), Open handles to
files, directories and network sockets
d1738 1
a1738 1
=item Resource limits
d1740 1
a1740 1
=item Killing the parent process
d1742 1
a1742 1
=item Lifetime of the parent process and pseudo-processes
d1744 1
a1744 1
=item CAVEATS AND LIMITATIONS
d1746 1
a1746 3
BEGIN blocks, Open filehandles, Forking pipe open() not yet implemented,
Global state maintained by XSUBs, Interpreter embedded in larger
application, Thread-safety of extensions
a1749 4
=item BUGS

=item AUTHOR

d1754 1
a1754 1
=head2 perlnumber - semantics of numbers and numeric operations in Perl
a1757 2
=item SYNOPSIS

d1760 1
a1760 1
=item Storing numbers
d1762 1
a1762 1
=item Numeric operators and numeric conversions
d1764 118
a1881 1
=item Flavors of Perl numeric operations
d1883 1
a1883 4
Arithmetic operators, ++, Arithmetic operators during C<use integer>, Other
mathematical operators, Bitwise operators, Bitwise operators during C<use
integer>, Operators which expect an integer, Operators which expect a
string
d1885 1
a1885 1
=item AUTHOR
d1891 1
a1891 1
=head2 perlthrtut - tutorial on threads in Perl
d1897 104
a2000 1
=item Status
d2002 1
a2002 1
=item What Is A Thread Anyway?
d2004 1
a2004 1
=item Threaded Program Models
d2008 7
a2014 1
=item Boss/Worker
d2016 1
a2016 1
=item Work Crew
d2018 1
a2018 1
=item Pipeline
d2022 3
a2024 1
=item Native threads
d2026 1
a2026 1
=item What kind of threads are Perl threads?
d2028 1
a2028 1
=item Thread-Safe Modules
d2030 1
a2030 1
=item Thread Basics
d2034 1
a2034 1
=item Basic Thread Support
d2036 1
a2036 1
=item A Note about the Examples
d2038 1
a2038 1
=item Creating Threads
d2040 1
a2040 1
=item Giving up control
d2042 1
a2042 3
=item Waiting For A Thread To Exit

=item Ignoring A Thread
d2046 1
a2046 1
=item Threads And Data
d2050 17
a2066 1
=item Shared And Unshared Data
d2068 1
a2068 1
=item Thread Pitfalls: Races
d2072 1
a2072 1
=item Synchronization and control
d2076 5
a2080 1
=item Controlling access: lock()
d2082 1
a2082 1
=item A Thread Pitfall: Deadlocks
d2084 1
a2084 1
=item Queues: Passing Data Around
d2086 1
a2086 1
=item Semaphores: Synchronizing Data Access
d2088 1
a2088 1
=item Basic semaphores
d2090 1
a2090 1
=item Advanced Semaphores
d2092 1
a2092 1
=item cond_wait() and cond_signal()
d2096 1
a2096 1
=item General Thread Utility Routines
d2100 3
a2102 1
=item What Thread Am I In?
d2104 1
a2104 1
=item Thread IDs
d2106 1
a2106 1
=item Are These Threads The Same?
d2108 1
a2108 1
=item What Threads Are Running?
d2112 5
a2116 1
=item A Complete Example
d2118 1
a2118 1
=item Performance considerations
d2120 1
a2120 1
=item Process-scope Changes
d2122 1
a2122 1
=item Thread-Safety of System Libraries
d2124 1
a2124 1
=item Conclusion
d2126 1
a2126 1
=item Bibliography
d2130 3
a2132 1
=item Introductory Texts
d2134 1
a2134 1
=item OS-Related References
d2136 1
a2136 1
=item Other References
d2140 1
a2140 1
=item Acknowledgements
d2142 1
a2142 1
=item AUTHOR
d2144 1
a2144 1
=item Copyrights
d2148 1
a2148 1
=head2 perlothrtut - old tutorial on threads in Perl
a2153 4
=item What Is A Thread Anyway?

=item Threaded Program Models

d2156 1
a2156 1
=item Boss/Worker
d2158 1
a2158 1
=item Work Crew
d2160 1
a2160 1
=item Pipeline
d2162 5
a2166 1
=back
d2168 1
a2168 1
=item Native threads
d2170 6
a2175 1
=item What kind of threads are perl threads?
d2177 1
a2177 1
=item Threadsafe Modules
d2179 1
a2179 1
=item Thread Basics
d2181 1
a2181 1
=over 4
d2183 1
a2183 1
=item Basic Thread Support
d2185 1
a2185 1
=item Creating Threads
d2187 1
a2187 7
=item Giving up control

=item Waiting For A Thread To Exit

=item Errors In Threads

=item Ignoring A Thread
d2191 2
a2192 1
=item Threads And Data
d2196 1
a2196 1
=item Shared And Unshared Data
d2198 1
a2198 1
=item Thread Pitfall: Races
d2200 1
a2200 1
=item Controlling access: lock()
d2202 3
a2204 1
=item Thread Pitfall: Deadlocks
d2206 1
a2206 1
=item Queues: Passing Data Around
d2208 6
a2213 1
=back
d2215 1
a2215 1
=item Threads And Code
d2217 1
a2217 1
=over 4
d2219 1
a2219 1
=item Semaphores: Synchronizing Data Access
d2221 1
a2221 1
Basic semaphores, Advanced Semaphores
d2223 1
a2223 1
=item Attributes: Restricting Access To Subroutines
d2225 1
a2225 1
=item Subroutine Locks
d2227 1
a2227 3
=item Methods

=item Locking A Subroutine
d2231 1
a2231 1
=item General Thread Utility Routines
d2235 1
a2235 1
=item What Thread Am I In?
d2237 1
a2237 1
=item Thread IDs
d2239 1
a2239 1
=item Are These Threads The Same?
d2241 1
a2241 1
=item What Threads Are Running?
d2243 1
a2243 1
=back
d2245 1
a2245 1
=item A Complete Example
d2247 1
a2247 1
=item Conclusion
d2249 8
a2256 1
=item Bibliography
d2258 1
a2258 1
=over 4
d2260 1
a2260 1
=item Introductory Texts
d2262 6
a2267 3
=item OS-Related References

=item Other References
d2271 1
a2271 1
=item Acknowledgements
d2273 1
a2273 1
=item AUTHOR
d2275 1
a2275 1
=item Copyrights
d2279 1
a2279 1
=head2 perlport - Writing portable Perl
a2284 5
Not all Perl programs have to be portable, Nearly all of Perl already I<is>
portable

=item ISSUES

d2287 1
a2287 1
=item Newlines
d2289 1
a2289 1
=item Numbers endianness and Width
d2291 1
a2291 1
=item Files and Filesystems
d2293 1
a2293 1
=item System Interaction
d2295 1
a2295 1
=item Command names versus file pathnames
d2297 1
a2297 1
=item Interprocess Communication (IPC)
d2299 1
a2299 1
=item External Subroutines (XS)
d2301 1
a2301 1
=item Standard Modules
d2303 1
a2303 1
=item Time and Date
d2305 1
a2305 1
=item Character sets and character encoding
d2307 1
a2307 1
=item Internationalisation
d2309 1
a2309 1
=item System Resources
d2311 1
a2311 1
=item Security
d2313 1
a2313 1
=item Style
d2315 1
a2315 1
=back
d2317 1
a2317 1
=item CPAN Testers
d2319 1
a2319 4
Mailing list: cpan-testers@@perl.org, Testing results:
http://testers.cpan.org/

=item PLATFORMS
d2323 1
a2323 1
=item Unix
d2325 11
a2335 1
=item DOS and Derivatives
d2337 1
a2337 1
=item S<Mac OS>
d2339 7
a2345 1
=item VMS
d2347 1
a2347 1
=item VOS
d2349 2
a2350 1
=item EBCDIC Platforms
d2352 1
a2352 1
=item Acorn RISC OS
d2354 1
a2354 1
=item Other perls
d2356 1
a2356 5
=back

=item FUNCTION IMPLEMENTATIONS

=over 4
d2358 1
a2358 1
=item Alphabetical Listing of Perl Functions
d2360 1
a2360 25
-I<X> FILEHANDLE, -I<X> EXPR, -I<X>, alarm SECONDS, alarm, binmode
FILEHANDLE, chmod LIST, chown LIST, chroot FILENAME, chroot, crypt
PLAINTEXT,SALT, dbmclose HASH, dbmopen HASH,DBNAME,MODE, dump LABEL, exec
LIST, exit EXPR, exit, fcntl FILEHANDLE,FUNCTION,SCALAR, flock
FILEHANDLE,OPERATION, fork, getlogin, getpgrp PID, getppid, getpriority
WHICH,WHO, getpwnam NAME, getgrnam NAME, getnetbyname NAME, getpwuid UID,
getgrgid GID, getnetbyaddr ADDR,ADDRTYPE, getprotobynumber NUMBER,
getservbyport PORT,PROTO, getpwent, getgrent, gethostent, getnetent,
getprotoent, getservent, sethostent STAYOPEN, setnetent STAYOPEN,
setprotoent STAYOPEN, setservent STAYOPEN, endpwent, endgrent, endhostent,
endnetent, endprotoent, endservent, getsockopt SOCKET,LEVEL,OPTNAME, glob
EXPR, glob, ioctl FILEHANDLE,FUNCTION,SCALAR, kill SIGNAL, LIST, link
OLDFILE,NEWFILE, lstat FILEHANDLE, lstat EXPR, lstat, msgctl ID,CMD,ARG,
msgget KEY,FLAGS, msgsnd ID,MSG,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, open
FILEHANDLE,EXPR, open FILEHANDLE, pipe READHANDLE,WRITEHANDLE, readlink
EXPR, readlink, select RBITS,WBITS,EBITS,TIMEOUT, semctl ID,SEMNUM,CMD,ARG,
semget KEY,NSEMS,FLAGS, semop KEY,OPSTRING, setgrent, setpgrp PID,PGRP,
setpriority WHICH,WHO,PRIORITY, setpwent, setsockopt
SOCKET,LEVEL,OPTNAME,OPTVAL, shmctl ID,CMD,ARG, shmget KEY,SIZE,FLAGS,
shmread ID,VAR,POS,SIZE, shmwrite ID,STRING,POS,SIZE, sockatmark SOCKET,
socketpair SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, stat FILEHANDLE, stat
EXPR, stat, symlink OLDFILE,NEWFILE, syscall LIST, sysopen
FILEHANDLE,FILENAME,MODE,PERMS, system LIST, times, truncate
FILEHANDLE,LENGTH, truncate EXPR,LENGTH, umask EXPR, umask, utime LIST,
wait, waitpid PID,FLAGS
d2364 1
a2364 1
=item CHANGES
d2366 1
a2366 8
v1.48, 02 February 2001, v1.47, 22 March 2000, v1.46, 12 February 2000,
v1.45, 20 December 1999, v1.44, 19 July 1999, v1.43, 24 May 1999, v1.42, 22
May 1999, v1.41, 19 May 1999, v1.40, 11 April 1999, v1.39, 11 February
1999, v1.38, 31 December 1998, v1.37, 19 December 1998, v1.36, 9 September
1998, v1.35, 13 August 1998, v1.33, 06 August 1998, v1.32, 05 August 1998,
v1.30, 03 August 1998, v1.23, 10 July 1998

=item Supported Platforms
d2370 1
a2370 1
=item AUTHORS / CONTRIBUTORS
d2374 1
a2374 2
=head2 perllocale - Perl locale handling (internationalization and
localization)
d2380 35
a2414 1
=item PREPARING TO USE LOCALES
d2416 1
a2416 1
=item USING LOCALES
d2418 1
a2418 1
=over 4
d2420 1
a2420 1
=item The use locale pragma
d2422 1
a2422 1
=item The setlocale function
d2424 1
a2424 1
=item Finding locales
d2426 1
a2426 1
=item LOCALE PROBLEMS
d2428 1
a2428 1
=item Temporarily fixing locale problems
d2430 1
a2430 1
=item Permanently fixing locale problems
d2432 1
a2432 1
=item Permanently fixing your system's locale configuration
d2434 1
a2434 1
=item Fixing system locale configuration
d2436 1
a2436 1
=item The localeconv function
d2438 1
a2438 1
=item I18N::Langinfo
d2440 1
a2440 1
=back
d2442 4
a2445 1
=item LOCALE CATEGORIES
d2447 1
a2447 1
=over 4
d2449 1
a2449 1
=item Category LC_COLLATE: Collation
d2451 1
a2451 1
=item Category LC_CTYPE: Character Types
d2453 1
a2453 1
=item Category LC_NUMERIC: Numeric Formatting
d2455 1
a2455 1
=item Category LC_MONETARY: Formatting of monetary amounts
d2457 4
a2460 1
=item LC_TIME
d2462 1
a2462 1
=item Other categories
d2466 1
a2466 1
=item SECURITY
d2468 1
a2468 1
=item ENVIRONMENT
d2470 1
a2470 2
PERL_BADLANG, LC_ALL, LANGUAGE, LC_CTYPE, LC_COLLATE, LC_MONETARY,
LC_NUMERIC, LC_TIME, LANG
d2472 1
a2472 1
=item NOTES
d2476 1
a2476 1
=item Backward compatibility
d2478 1
a2478 1
=item I18N:Collate obsolete
d2480 1
a2480 1
=item Sort speed and memory use impacts
d2482 1
a2482 1
=item write() and LC_NUMERIC
d2484 1
a2484 1
=item Freely available locale definitions
d2486 1
a2486 1
=item I18n and l10n
d2488 1
a2488 1
=item An imperfect standard
d2490 1
a2490 1
=back
d2492 1
a2492 1
=item Unicode and UTF-8
d2494 1
a2494 1
=item BUGS
d2496 1
a2496 1
=over 4
d2498 1
a2498 1
=item Broken systems
d2502 2
d2506 1
a2506 1
=item HISTORY
d2510 1
a2510 1
=head2 perluniintro - Perl Unicode introduction
d2514 2
d2520 1
a2520 1
=item Unicode
d2522 1
a2522 1
=item Perl's Unicode Support
d2524 1
a2524 1
=item Perl's Unicode Model
d2526 1
a2526 1
=item Unicode and EBCDIC
d2528 1
a2528 1
=item Creating Unicode
d2530 1
a2530 1
=item Handling Unicode
d2532 1
a2532 1
=item Legacy Encodings
d2534 1
a2534 1
=item Unicode I/O
d2536 1
a2536 1
=item Displaying Unicode As Text
d2538 1
a2538 1
=item Special Cases
d2540 1
a2540 1
=item Advanced Topics
d2542 1
a2542 1
=item Miscellaneous
d2544 1
a2544 1
=item Questions With Answers
d2546 1
a2546 1
=item Hexadecimal Notation
d2548 1
a2548 1
=item Further Resources
d2552 5
a2556 1
=item UNICODE IN OLDER PERLS
d2558 1
a2558 1
=item SEE ALSO
d2560 1
a2560 1
=item ACKNOWLEDGMENTS
d2562 1
a2562 1
=item AUTHOR, COPYRIGHT, AND LICENSE
d2566 1
a2566 1
=head2 perlunicode - Unicode support in Perl
d2574 1
a2574 1
=item Important Caveats
d2576 1
a2576 2
Input and Output Layers, Regular Expressions, C<use utf8> still needed to
enable UTF-8/UTF-EBCDIC in scripts
d2578 1
a2578 1
=item Byte and Character Semantics
d2580 1
a2580 1
=item Effects of Character Semantics
d2582 1
a2582 1
=item Scripts
d2584 1
a2584 1
=item Blocks
d2586 1
a2586 1
=item User-Defined Character Properties
d2588 1
a2588 1
=item Character Encodings for Input and Output
d2590 1
a2590 1
=item Unicode Regular Expression Support Level
d2592 1
a2592 1
=item Unicode Encodings
d2594 1
a2594 1
=item Security Implications of Unicode
d2596 1
a2596 5
=item Unicode in Perl on EBCDIC

=item Locales

=item Using Unicode in XS
d2600 1
a2600 1
=item BUGS
d2604 1
a2604 1
=item Interaction with Locales
d2606 1
a2606 11
=item Interaction with Extensions

=item Speed

=back

=item SEE ALSO

=back

=head2 perlebcdic - Considerations for running Perl on EBCDIC platforms
d2610 1
a2610 1
=item DESCRIPTION
d2612 2
a2613 1
=item COMMON CHARACTER CODE SETS
d2615 1
a2615 1
=over 4
d2617 5
a2621 1
=item ASCII
d2623 1
a2623 1
=item ISO 8859
d2625 3
a2627 1
=item Latin 1 (ISO 8859-1)
d2629 1
a2629 3
=item EBCDIC

=item 13 variant characters
d2631 3
a2633 1
=item 0037
d2635 1
a2635 1
=item 1047
d2637 1
a2637 1
=item POSIX-BC
d2639 1
a2639 1
=item Unicode code points versus EBCDIC code points
d2641 1
a2641 1
=item Remaining Perl Unicode problems in EBCDIC
d2643 1
a2643 1
=item Unicode and UTF
d2645 1
a2645 1
=item Using Encode
d2649 3
a2651 1
=item SINGLE OCTET TABLES
d2653 1
a2653 1
recipe 0, recipe 1, recipe 2, recipe 3, recipe 4, recipe 5, recipe 6
d2655 1
a2655 1
=item IDENTIFYING CHARACTER CODE SETS
d2657 2
a2658 1
=item CONVERSIONS
d2662 1
a2662 1
=item tr///
d2664 1
a2664 1
=item iconv
d2666 1
a2666 1
=item C RTL
d2670 1
a2670 1
=item OPERATOR DIFFERENCES
d2672 1
a2672 1
=item FUNCTION DIFFERENCES
d2674 1
a2674 1
chr(), ord(), pack(), print(), printf(), sort(), sprintf(), unpack()
d2676 2
a2677 5
=item REGULAR EXPRESSION DIFFERENCES

=item SOCKETS

=item SORTING
d2681 1
a2681 1
=item Ignore ASCII vs. EBCDIC sort differences.
d2683 1
a2683 1
=item MONO CASE then sort data.
d2685 1
a2685 1
=item Convert, sort data, then re convert.
d2687 1
a2687 1
=item Perform sorting on one type of machine only.
d2691 1
a2691 1
=item TRANSFORMATION FORMATS
d2695 1
a2695 5
=item URL decoding and encoding

=item uu encoding and decoding

=item Quoted-Printable encoding and decoding
d2697 2
a2698 1
=item Caesarian ciphers
d2702 1
a2702 7
=item Hashing order and checksums

=item I18N AND L10N

=item MULTI OCTET CHARACTER SETS

=item OS ISSUES
d2706 1
a2706 1
=item OS/400 
d2708 1
a2708 1
IFS access
d2710 1
a2710 1
=item OS/390, z/OS
d2712 1
a2712 1
chcp, dataset access, OS/390, z/OS iconv, locales
d2714 1
a2714 1
=item VM/ESA?
d2716 1
a2716 1
=item POSIX-BC?
d2720 1
a2720 1
=item BUGS
d2722 1
a2722 1
=item SEE ALSO
d2724 1
a2724 1
=item REFERENCES
d2726 1
a2726 1
=item HISTORY
d2728 1
a2728 1
=item AUTHOR
d2732 1
a2732 1
=head2 perlsec - Perl security
d2736 7
a2742 1
=item DESCRIPTION
d2744 1
a2744 1
=over 4
d2746 1
a2746 1
=item Laundering and Detecting Tainted Data
d2748 1
a2748 1
=item Switches On the "#!" Line
d2750 1
a2750 1
=item Cleaning Up Your Path
d2752 1
a2752 1
=item Security Bugs
d2754 1
a2754 1
=item Protecting Your Programs
d2756 1
a2756 1
=item Unicode
d2758 1
a2758 1
=back
d2764 1
a2764 1
=head2 perlmod - Perl modules (packages and symbol tables)
d2768 2
d2774 5
a2778 1
=item Packages
d2780 1
a2780 1
=item Symbol Tables
d2782 1
a2782 1
=item Package Constructors and Destructors
d2784 1
a2784 1
=item Perl Classes
d2786 1
a2786 1
=item Perl Modules
d2788 3
a2790 1
=item Making your module threadsafe
d2794 4
d2802 1
a2802 1
=head2 perlmodinstall - Installing CPAN Modules
d2806 2
d2810 1
a2810 1
=over 4
d2812 1
a2812 1
=item PREAMBLE
d2814 1
a2814 2
B<DECOMPRESS> the file, B<UNPACK> the file into a directory, B<BUILD> the
module (sometimes unnecessary), B<INSTALL> the module
d2816 4
a2819 5
=back

=item PORTABILITY

=item HEY
d2823 1
a2823 1
=item COPYRIGHT
d2827 1
a2827 1
=head2 perlmodlib - constructing new Perl modules and finding existing ones
d2833 1
a2833 1
=item THE PERL MODULE LIBRARY
d2835 1
a2835 1
=over 4
d2837 1
a2837 1
=item Pragmatic Modules
d2839 1
a2839 4
attributes, attrs, autouse, base, bigint, bignum, bigrat, blib, bytes,
charnames, constant, diagnostics, encoding, fields, filetest, if, integer,
less, locale, open, ops, overload, re, sigtrap, sort, strict, subs,
threads, utf8, vars, vmsish, warnings, warnings::register
d2841 1
a2841 1
=item Standard Modules
d2843 1
a2843 46
AnyDBM_File, Attribute::Handlers, AutoLoader, AutoSplit, B, B::Asmdata,
B::Assembler, B::Bblock, B::Bytecode, B::C, B::CC, B::Concise, B::Debug,
B::Deparse, B::Disassembler, B::Lint, B::Showlex, B::Stackobj, B::Stash,
B::Terse, B::Xref, Benchmark, ByteLoader, CGI, CGI::Apache, CGI::Carp,
CGI::Cookie, CGI::Fast, CGI::Pretty, CGI::Push, CGI::Switch, CGI::Util,
CPAN, CPAN::FirstTime, CPAN::Nox, Carp, Carp::Heavy, Class::ISA,
Class::Struct, Config, Cwd, DB, DB_File, Devel::SelfStubber, Digest,
DirHandle, Dumpvalue, Encode, English, Env, Errno, Exporter,
Exporter::Heavy, ExtUtils::Command, ExtUtils::Command::MM,
ExtUtils::Constant, ExtUtils::Embed, ExtUtils::Install,
ExtUtils::Installed, ExtUtils::Liblist, ExtUtils::MM, ExtUtils::MM_Any,
ExtUtils::MM_BeOS, ExtUtils::MM_Cygwin, ExtUtils::MM_DOS,
ExtUtils::MM_MacOS, ExtUtils::MM_NW5, ExtUtils::MM_OS2, ExtUtils::MM_UWIN,
ExtUtils::MM_Unix, ExtUtils::MM_VMS, ExtUtils::MM_Win32,
ExtUtils::MM_Win95, ExtUtils::MY, ExtUtils::MakeMaker, ExtUtils::Manifest,
ExtUtils::Mkbootstrap, ExtUtils::Mksymlists, ExtUtils::Packlist,
ExtUtils::testlib, Fatal, Fcntl, File::Basename, File::CheckTree,
File::Compare, File::Copy, File::DosGlob, File::Find, File::Path,
File::Spec, File::Spec::Cygwin, File::Spec::Epoc, File::Spec::Functions,
File::Spec::Mac, File::Spec::OS2, File::Spec::Unix, File::Spec::VMS,
File::Spec::Win32, File::Temp, File::stat, FileCache, FileHandle,
Filter::Simple, FindBin, Getopt::Long, Getopt::Std, Hash::Util,
I18N::Collate, I18N::LangTags, I18N::LangTags::List, IO, IPC::Open2,
IPC::Open3, Locale::Constants, Locale::Country, Locale::Currency,
Locale::Language, Locale::Maketext, Locale::Maketext::TPJ13,
Locale::Script, Math::BigFloat, Math::BigInt, Math::BigInt::Calc,
Math::BigRat, Math::Complex, Math::Trig, Memoize, Memoize::AnyDBM_File,
Memoize::Expire, Memoize::ExpireFile, Memoize::ExpireTest,
Memoize::NDBM_File, Memoize::SDBM_File, Memoize::Storable, NDBM_File, NEXT,
Net::Cmd, Net::Config, Net::Domain, Net::FTP, Net::NNTP, Net::Netrc,
Net::POP3, Net::Ping, Net::SMTP, Net::Time, Net::hostent, Net::libnetFAQ,
Net::netent, Net::protoent, Net::servent, O, ODBM_File, Opcode, POSIX,
PerlIO, PerlIO::via::QuotedPrint, Pod::Checker, Pod::Find, Pod::Functions,
Pod::Html, Pod::InputObjects, Pod::LaTeX, Pod::Man, Pod::ParseLink,
Pod::ParseUtils, Pod::Parser, Pod::Plainer, Pod::Select, Pod::Text,
Pod::Text::Color, Pod::Text::Overstrike, Pod::Text::Termcap, Pod::Usage,
SDBM_File, Safe, Search::Dict, SelectSaver, SelfLoader, Shell, Socket,
Storable, Switch, Symbol, Term::ANSIColor, Term::Cap, Term::Complete,
Term::ReadLine, Test, Test::Builder, Test::Harness, Test::Harness::Assert,
Test::Harness::Iterator, Test::Harness::Straps, Test::More, Test::Simple,
Test::Tutorial, Text::Abbrev, Text::Balanced, Text::ParseWords,
Text::Soundex, Text::Tabs, Text::Wrap, Thread, Thread::Queue,
Thread::Semaphore, Tie::Array, Tie::File, Tie::Handle, Tie::Hash,
Tie::Memoize, Tie::RefHash, Tie::Scalar, Tie::SubstrHash, Time::Local,
Time::gmtime, Time::localtime, Time::tm, UNIVERSAL, Unicode::Collate,
Unicode::UCD, User::grent, User::pwent, Win32
d2845 1
a2845 1
=item Extension Modules
d2849 1
a2849 1
=item CPAN
d2851 1
a2851 1
=over 4
d2853 1
a2853 1
=item Africa
d2855 1
a2855 1
South Africa
d2857 1
a2857 1
=item Asia
d2859 1
a2859 2
China, India, Indonesia, Israel, Japan, Korea, Philippines, Russian
Federation, Saudi Arabia, Singapore, South Korea, Taiwan, Thailand
d2861 1
a2861 1
=item Central America
d2863 1
a2863 1
Costa Rica
d2865 1
a2865 1
=item Europe
d2867 1
a2867 5
Austria, Belgium, Bulgaria, Croatia, Czech Republic, Denmark, Estonia,
Finland, France, Germany, Greece, Hungary, Iceland, Ireland, Italy, Latvia,
Lithuania, Netherlands, Norway, Poland, Portugal, Romania, Russia,
Slovakia, Slovenia, Spain, Sweden, Switzerland, Turkey, Ukraine, United
Kingdom
d2869 1
a2869 1
=item North America
d2871 1
a2871 1
Alberta, Manitoba, Nova Scotia, Ontario, Quebec, Mexico
d2873 1
a2873 1
=item United States
d2875 1
a2875 14
Alabama, California, Colorado, Delaware, District of Columbia, Florida,
Illinois, Indiana, Kentucky, Massachusetts, Michigan, New Jersey, New York,
North Carolina, Ohio, Oklahoma, Oregon, Pennsylvania, Tennessee, Texas,
Utah, Virginia, ashington, Wisconsin

=item Oceania

Australia, New Zealand

=item South America

Argentina, Brazil, Chile

=item RSYNC Mirrors
d2879 1
a2879 1
=item Modules: Creation, Use, and Abuse
d2883 1
a2883 1
=item Guidelines for Module Creation
d2885 1
a2885 1
=item Guidelines for Converting Perl 4 Library Scripts into Modules
d2887 1
a2887 1
=item Guidelines for Reusing Application Code
d2889 1
a2889 1
=back
d2891 1
a2891 1
=item NOTE
d2893 1
a2893 1
=back
d2895 1
a2895 1
=head2 perlmodstyle - Perl module style guide
d2897 1
a2897 1
=over 4
d2899 1
a2899 1
=item INTRODUCTION
d2901 1
a2901 1
=item QUICK CHECKLIST
d2905 1
a2905 1
=item Before you start
d2907 1
a2907 1
=item The API
d2909 1
a2909 1
=item Stability
d2911 1
a2911 3
=item Documentation

=item Release considerations
d2915 1
a2915 1
=item BEFORE YOU START WRITING A MODULE
d2917 1
a2917 1
=over 4
d2919 1
a2919 1
=item Has it been done before?
d2921 1
a2921 1
=item Do one thing and do it well
d2923 1
a2923 1
=item What's in a name?
d2925 1
a2925 1
=back
d2927 1
a2927 1
=item DESIGNING AND WRITING YOUR MODULE
d2931 3
a2933 1
=item To OO or not to OO?
d2935 1
a2935 1
=item Designing your API
d2937 1
a2937 3
Write simple routines to do simple things, Separate functionality from
output, Provide sensible shortcuts and defaults, Naming conventions,
Parameter passing
d2939 1
a2939 1
=item Strictness and warnings
d2941 1
a2941 1
=item Backwards compatibility
d2943 1
a2943 1
=item Error handling and messages
d2947 1
a2947 1
=item DOCUMENTING YOUR MODULE
d2951 1
a2951 1
=item POD
d2953 1
a2953 1
=item README, INSTALL, release notes, changelogs
d2955 1
a2955 1
=back
d2957 1
a2957 1
=item RELEASE CONSIDERATIONS
d2959 1
a2959 1
=over 4
d2961 1
a2961 1
=item Version numbering
d2963 1
a2963 1
=item Pre-requisites
d2965 1
a2965 1
=item Testing
d2967 1
a2967 1
=item Packaging
d2969 1
a2969 1
=item Licensing
d2971 1
a2971 1
=back
d2973 1
a2973 1
=item COMMON PITFALLS
d2977 1
a2977 1
=item Reinventing the wheel
d2979 1
a2979 1
=item Trying to do too much
d2981 1
a2981 1
=item Inappropriate documentation
d2983 1
a2983 1
=back
d2985 1
a2985 1
=item SEE ALSO
d2987 1
a2987 4
L<perlstyle>, L<perlnewmod>, L<perlpod>, L<podchecker>, Testing tools,
http://pause.perl.org/, Any good book on software engineering

=item AUTHOR
d2991 1
a2991 1
=head2 perlnewmod - preparing a new module for distribution
d2995 3
a2997 1
=item DESCRIPTION
d2999 1
a2999 1
=over 4
d3001 1
a3001 1
=item Warning
d3003 1
a3003 1
=item What should I make into a module?
d3005 1
a3005 1
=item Step-by-step: Preparing the ground
d3007 1
a3007 1
Look around, Check it's new, Discuss the need, Choose a name, Check again
d3009 1
a3009 1
=item Step-by-step: Making the module
d3011 1
a3011 3
Start with F<h2xs>, Use L<strict|strict> and L<warnings|warnings>, Use
L<Carp|Carp>, Use L<Exporter|Exporter> - wisely!, Use L<plain old
documentation|perlpod>, Write tests, Write the README
d3013 1
a3013 1
=item Step-by-step: Distributing your module
d3015 1
a3015 2
Get a CPAN user ID, C<perl Makefile.PL; make test; make dist>, Upload the
tarball, Announce to the modules list, Announce to clpa, Fix bugs!
d3017 1
a3017 1
=back
d3019 1
a3019 1
=item AUTHOR
d3021 1
a3021 1
=item SEE ALSO
d3025 1
a3025 2
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.8 $, $Date:
2002/04/07 18:46:13 $)
d3029 1
a3029 1
=item DESCRIPTION
d3031 1
a3031 1
=over 4
d3033 1
a3033 1
=item What is Perl?
d3035 1
a3035 1
=item Who supports Perl?  Who develops it?  Why is it free?
d3037 1
a3037 1
=item Which version of Perl should I use?
d3039 1
a3039 1
=item What are perl4 and perl5?
d3041 1
a3041 1
=item What is perl6?
d3043 1
a3043 1
=item How stable is Perl?
d3045 1
a3045 1
=item Is Perl difficult to learn?
d3047 1
a3047 2
=item How does Perl compare with other languages like Java, Python, REXX,
Scheme, or Tcl?
d3049 1
a3049 1
=item Can I do [task] in Perl?
d3051 1
a3051 1
=item When shouldn't I program in Perl?
d3053 1
a3053 1
=item What's the difference between "perl" and "Perl"?
d3055 1
a3055 1
=item Is it a Perl program or a Perl script?
d3057 1
a3057 1
=item What is a JAPH?
d3059 1
a3059 4
=item Where can I get a list of Larry Wall witticisms?

=item How can I convince my sysadmin/supervisor/employees to use version
5/5.6.1/Perl instead of some other language?
d3063 1
a3063 6
=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.13 $,
$Date: 2002/04/26 16:56:35 $)
d3069 2
a3070 1
=over 4
d3072 1
a3072 1
=item What machines support Perl?  Where do I get it?
d3074 1
a3074 1
=item How can I get a binary version of Perl?
d3076 1
a3076 1
=item I don't have a C compiler on my system.  How can I compile perl?
d3078 1
a3078 2
=item I copied the Perl binary from one machine to another, but scripts
don't work.
d3080 1
a3080 2
=item I grabbed the sources and tried to compile but gdbm/dynamic
loading/malloc/linking/... failed.  How do I make it work?
d3082 1
a3082 2
=item What modules and extensions are available for Perl?  What is CPAN? 
What does CPAN/src/... mean?
d3084 1
a3084 3
=item Is there an ISO or ANSI certified version of Perl?

=item Where can I get information on Perl?
d3086 1
a3086 1
=item What are the Perl newsgroups on Usenet?  Where do I post questions?
d3088 1
a3088 1
=item Where should I post source code?
d3090 1
a3090 1
=item Perl Books
d3092 1
a3092 1
References, Tutorials, Task-Oriented, Special Topics
d3094 1
a3094 1
=item Perl in Magazines
d3096 1
a3096 1
=item Perl on the Net: FTP and WWW Access
d3098 1
a3098 1
=item What mailing lists are there for Perl?
d3100 1
a3100 1
=item Archives of comp.lang.perl.misc
d3102 1
a3102 1
=item Where can I buy a commercial version of Perl?
d3104 1
a3104 3
=item Where do I send bug reports?

=item What is perl.com? Perl Mongers? pm.org? perl.org? cpan.org?
d3108 1
a3108 1
=item AUTHOR AND COPYRIGHT
d3110 2
a3111 1
=back
d3113 1
a3113 2
=head2 perlfaq3 - Programming Tools ($Revision: 1.22 $, $Date: 2002/05/06
13:11:13 $)
d3117 3
a3119 1
=item DESCRIPTION
d3121 1
a3121 1
=over 4
d3123 1
a3123 1
=item How do I do (anything)?
d3125 1
a3125 1
=item How can I use Perl interactively?
d3127 1
a3127 1
=item Is there a Perl shell?
d3129 1
a3129 1
=item How do I debug my Perl programs?
d3131 1
a3131 1
=item How do I profile my Perl programs?
d3133 1
a3133 1
=item How do I cross-reference my Perl programs?
d3135 1
a3135 1
=item Is there a pretty-printer (formatter) for Perl?
d3137 1
a3137 1
=item Is there a ctags for Perl?
d3139 1
a3139 1
=item Is there an IDE or Windows Perl Editor?
d3141 26
a3166 3
Komodo, The Object System, Open Perl IDE, PerlBuilder, visiPerl+, OptiPerl,
CodeMagicCD, GNU Emacs, MicroEMACS, XEmacs, Elvis, Vile, Vim, Codewright,
MultiEdit, SlickEdit, Bash, Ksh, Tcsh, Zsh, BBEdit and BBEdit Lite, Alpha
d3168 1
a3168 1
=item Where can I get Perl macros for vi?
d3170 1
a3170 1
=item Where can I get perl-mode for emacs?
d3172 6
a3177 1
=item How can I use curses with Perl?
d3179 1
a3179 1
=item How can I use X or Tk with Perl?
d3181 1
a3181 1
=item How can I generate simple menus without using CGI or Tk?
d3183 1
a3183 1
=item How can I make my Perl program run faster?
d3185 1
a3185 1
=item How can I make my Perl program take less memory?
d3187 2
a3188 2
Don't slurp!, Use map and grep selectively, Avoid unnecessary quotes and
stringification, Pass by reference, Tie large variables to disk
d3190 1
a3190 1
=item Is it unsafe to return a pointer to local data?
d3192 1
a3192 1
=item How can I free an array or hash so my program shrinks?
d3194 1
a3194 1
=item How can I make my CGI script more efficient?
d3196 1
a3196 1
=item How can I hide the source for my Perl program?
d3198 1
a3198 1
=item How can I compile my Perl program into byte code or C?
d3200 1
a3200 1
=item How can I compile Perl into Java?
d3202 1
a3202 1
=item How can I get C<#!perl> to work on [MS-DOS,NT,...]?
d3204 1
a3204 1
=item Can I write useful Perl programs on the command line?
d3206 1
a3206 1
=item Why don't Perl one-liners work on my DOS/Mac/VMS system?
d3208 1
a3208 1
=item Where can I learn about CGI or Web programming in Perl?
d3210 1
a3210 1
=item Where can I learn about object-oriented Perl programming?
d3212 1
a3212 1
=item Where can I learn about linking C with Perl? [h2xs, xsubpp]
d3214 1
a3214 2
=item I've read perlembed, perlguts, etc., but I can't embed perl in
my C program; what am I doing wrong?
d3216 1
a3216 1
=item When I tried to run my script, I got this message. What does it mean?
d3218 1
a3218 1
=item What's MakeMaker?
d3222 3
a3224 1
=item AUTHOR AND COPYRIGHT
d3226 1
a3226 1
=back
d3228 1
a3228 2
=head2 perlfaq4 - Data Manipulation ($Revision: 1.25 $, $Date: 2002/05/30
07:04:25 $)
d3230 1
a3230 1
=over 4
d3232 1
a3232 1
=item DESCRIPTION
d3234 1
a3234 1
=item Data: Numbers
d3236 1
a3236 1
=over 4
d3238 1
a3238 2
=item Why am I getting long decimals (eg, 19.9499999999999) instead of the
numbers I should be getting (eg, 19.95)?
d3240 1
a3240 1
=item Why isn't my octal data interpreted correctly?
d3242 1
a3242 2
=item Does Perl have a round() function?  What about ceil() and floor()? 
Trig functions?
d3244 2
a3245 1
=item How do I convert between numeric representations?
d3247 1
a3247 4
How do I convert hexadecimal into decimal, How do I convert from decimal to
hexadecimal, How do I convert from octal to decimal, How do I convert from
decimal to octal, How do I convert from binary to decimal, How do I convert
from decimal to binary
d3249 1
a3249 1
=item Why doesn't & work the way I want it to?
d3251 1
a3251 1
=item How do I multiply matrices?
d3253 1
a3253 1
=item How do I perform an operation on a series of integers?
d3255 1
a3255 1
=item How can I output Roman numerals?
d3257 1
a3257 1
=item Why aren't my random numbers random?
d3259 1
a3259 1
=item How do I get a random number between X and Y?
d3261 1
a3261 1
=back
d3263 1
a3263 1
=item Data: Dates
d3265 1
a3265 1
=over 4
d3267 1
a3267 1
=item How do I find the week-of-the-year/day-of-the-year?
d3269 1
a3269 1
=item How do I find the current century or millennium?
d3271 1
a3271 1
=item How can I compare two dates and find the difference?
d3273 1
a3273 1
=item How can I take a string and turn it into epoch seconds?
d3275 1
a3275 1
=item How can I find the Julian Day?
d3277 1
a3277 1
=item How do I find yesterday's date?
d3279 1
a3279 1
=item Does Perl have a Year 2000 problem?  Is Perl Y2K compliant?
d3283 1
a3283 1
=item Data: Strings
d3287 3
a3289 1
=item How do I validate input?
d3291 1
a3291 1
=item How do I unescape a string?
d3293 1
a3293 1
=item How do I remove consecutive pairs of characters?
d3295 1
a3295 1
=item How do I expand function calls in a string?
d3297 1
a3297 1
=item How do I find matching/nesting anything?
d3299 1
a3299 1
=item How do I reverse a string?
d3301 1
a3301 1
=item How do I expand tabs in a string?
d3303 1
a3303 1
=item How do I reformat a paragraph?
d3305 1
a3305 1
=item How can I access/change the first N letters of a string?
d3307 1
a3307 1
=item How do I change the Nth occurrence of something?
d3309 1
a3309 2
=item How can I count the number of occurrences of a substring within a
string?
d3311 1
a3311 1
=item How do I capitalize all the words on one line?
d3313 1
a3313 2
=item How can I split a [character] delimited string except when inside
[character]? (Comma-separated files)
d3315 1
a3315 1
=item How do I strip blank space from the beginning/end of a string?
d3317 1
a3317 1
=item How do I pad a string with blanks or pad a number with zeroes?
d3319 1
a3319 1
=item How do I extract selected columns from a string?
d3321 1
a3321 1
=item How do I find the soundex value of a string?
d3323 1
a3323 1
=item How can I expand variables in text strings?
d3325 1
a3325 1
=item What's wrong with always quoting "$vars"?
d3327 1
a3327 1
=item Why don't my <<HERE documents work?
d3329 1
a3329 3
1. There must be no space after the << part, 2. There (probably) should be
a semicolon at the end, 3. You can't (easily) have any space in front of
the tag
d3333 1
a3333 1
=item Data: Arrays
d3337 3
a3339 1
=item What is the difference between a list and an array?
d3341 1
a3341 1
=item What is the difference between $array[1] and @@array[1]?
d3343 2
a3344 1
=item How can I remove duplicate elements from a list or array?
d3346 1
a3346 1
a), b), c), d), e)
d3348 1
a3348 2
=item How can I tell whether a certain element is contained in a list or
array?
d3350 1
a3350 2
=item How do I compute the difference of two arrays?  How do I compute the
intersection of two arrays?
d3352 1
a3352 1
=item How do I test whether two arrays or hashes are equal?
d3354 1
a3354 1
=item How do I find the first array element for which a condition is true?
d3356 1
a3356 1
=item How do I handle linked lists?
d3358 1
a3358 1
=item How do I handle circular lists?
d3360 1
a3360 1
=item How do I shuffle an array randomly?
d3362 1
a3362 1
=item How do I process/modify each element of an array?
d3364 1
a3364 1
=item How do I select a random element from an array?
d3366 1
a3366 1
=item How do I permute N elements of a list?
d3368 1
a3368 1
=item How do I sort an array by (anything)?
d3370 1
a3370 1
=item How do I manipulate arrays of bits?
d3372 1
a3372 1
=item Why does defined() return true on empty arrays and hashes?
d3376 1
a3376 1
=item Data: Hashes (Associative Arrays)
d3380 1
a3380 1
=item How do I process an entire hash?
d3382 1
a3382 2
=item What happens if I add or remove keys from a hash while iterating over
it?
d3384 1
a3384 1
=item How do I look up a hash element by value?
d3386 1
a3386 1
=item How can I know how many entries are in a hash?
d3388 1
a3388 1
=item How do I sort a hash (optionally by value instead of key)?
d3390 1
a3390 1
=item How can I always keep my hash sorted?
d3392 1
a3392 1
=item What's the difference between "delete" and "undef" with hashes?
d3394 1
a3394 1
=item Why don't my tied hashes make the defined/exists distinction?
d3396 1
a3396 1
=item How do I reset an each() operation part-way through?
d3398 1
a3398 1
=item How can I get the unique keys from two hashes?
d3400 1
a3400 1
=item How can I store a multidimensional array in a DBM file?
d3402 1
a3402 1
=item How can I make my hash remember the order I put elements into it?
d3404 1
a3404 2
=item Why does passing a subroutine an undefined element in a hash create
it?
d3406 1
a3406 2
=item How can I make the Perl equivalent of a C structure/C++ class/hash or
array of hashes or arrays?
d3408 1
a3408 1
=item How can I use a reference as a hash key?
d3410 1
a3410 1
=back
d3412 1
a3412 1
=item Data: Misc
d3414 1
a3414 1
=over 4
d3416 1
a3416 1
=item How do I handle binary data correctly?
d3418 1
a3418 1
=item How do I determine whether a scalar is a number/whole/integer/float?
d3420 1
a3420 1
=item How do I keep persistent data across program calls?
d3422 1
a3422 1
=item How do I print out or copy a recursive data structure?
d3424 1
a3424 1
=item How do I define methods for every class/object?
d3426 1
a3426 1
=item How do I verify a credit card checksum?
d3428 1
a3428 1
=item How do I pack arrays of doubles or floats for XS code?
d3430 1
a3430 1
=back
d3432 1
a3432 1
=item AUTHOR AND COPYRIGHT
d3434 1
a3434 1
=back
d3436 1
a3436 2
=head2 perlfaq5 - Files and Formats ($Revision: 1.18 $, $Date: 2002/05/30
07:04:25 $)
d3440 1
a3440 1
=item DESCRIPTION
d3442 1
a3442 1
=over 4
d3444 1
a3444 1
=item How do I flush/unbuffer an output filehandle?  Why must I do this?
d3446 1
a3446 2
=item How do I change one line in a file/delete a line in a file/insert a
line in the middle of a file/append to the beginning of a file?
d3448 1
a3448 1
=item How do I count the number of lines in a file?
d3450 1
a3450 1
=item How do I make a temporary file name?
d3452 1
a3452 1
=item How can I manipulate fixed-record-length files?
d3454 1
a3454 2
=item How can I make a filehandle local to a subroutine?  How do I pass
filehandles between subroutines?  How do I make an array of filehandles?
d3456 1
a3456 1
=item How can I use a filehandle indirectly?
d3458 1
a3458 1
=item How can I set up a footer format to be used with write()?
d3460 1
a3460 1
=item How can I write() into a string?
d3462 1
a3462 1
=item How can I output my numbers with commas added?
d3464 1
a3464 1
=item How can I translate tildes (~) in a filename?
d3466 1
a3466 1
=item How come when I open a file read-write it wipes it out?
d3468 1
a3468 1
=item Why do I sometimes get an "Argument list too long" when I use <*>?
d3470 1
a3470 1
=item Is there a leak/bug in glob()?
d3472 1
a3472 1
=item How can I open a file with a leading ">" or trailing blanks?
d3474 1
a3474 1
=item How can I reliably rename a file?
d3476 1
a3476 1
=item How can I lock a file?
d3478 1
a3478 1
=item Why can't I just open(FH, ">file.lock")?
d3480 1
a3480 2
=item I still don't get locking.  I just want to increment the number in
the file.  How can I do this?
d3482 1
a3482 2
=item All I want to do is append a small amount of text to the end of a
file.  Do I still have to use locking?
d3484 1
a3484 1
=item How do I randomly update a binary file?
d3486 1
a3486 1
=item How do I get a file's timestamp in perl?
d3488 1
a3488 1
=item How do I set a file's timestamp in perl?
d3490 1
a3490 1
=item How do I print to more than one file at once?
d3492 1
a3492 1
=item How can I read in an entire file all at once?
d3494 1
a3494 1
=item How can I read in a file by paragraphs?
d3496 1
a3496 1
=item How can I read a single character from a file?  From the keyboard?
d3498 1
a3498 1
=item How can I tell whether there's a character waiting on a filehandle?
d3500 1
a3500 1
=item How do I do a C<tail -f> in perl?
d3502 1
a3502 1
=item How do I dup() a filehandle in Perl?
d3504 1
a3504 1
=item How do I close a file descriptor by number?
d3506 1
a3506 2
=item Why can't I use "C:\temp\foo" in DOS paths?  Why doesn't
`C:\temp\foo.exe` work?
d3508 1
a3508 1
=item Why doesn't glob("*.*") get all the files?
d3510 1
a3510 2
=item Why does Perl let me delete read-only files?  Why does C<-i> clobber
protected files?  Isn't this a bug in Perl?
d3512 1
a3512 1
=item How do I select a random line from a file?
d3514 1
a3514 1
=item Why do I get weird spaces when I print an array of lines?
d3516 1
a3516 1
=back
d3518 1
a3518 1
=item AUTHOR AND COPYRIGHT
d3522 1
a3522 2
=head2 perlfaq6 - Regular Expressions ($Revision: 1.12 $, $Date: 2002/06/01
22:31:09 $)
d3530 1
a3530 2
=item How can I hope to use regular expressions without creating illegible
and unmaintainable code?
d3532 1
a3532 1
Comments Outside the Regex, Comments Inside the Regex, Different Delimiters
d3534 1
a3534 1
=item I'm having trouble matching over more than one line.  What's wrong?
d3536 1
a3536 2
=item How can I pull out lines between two patterns that are themselves on
different lines?
d3538 1
a3538 1
=item I put a regular expression into $/ but it didn't work. What's wrong?
d3540 1
a3540 2
=item How do I substitute case insensitively on the LHS while preserving
case on the RHS?
d3542 1
a3542 1
=item How can I make C<\w> match national character sets?
d3544 1
a3544 1
=item How can I match a locale-smart version of C</[a-zA-Z]/>?
d3546 1
a3546 1
=item How can I quote a variable to use in a regex?
d3548 1
a3548 1
=item What is C</o> really for?
d3550 1
a3550 2
=item How do I use a regular expression to strip C style comments from a
file?
d3552 1
a3552 1
=item Can I use Perl regular expressions to match balanced text?
d3554 1
a3554 1
=item What does it mean that regexes are greedy?  How can I get around it?
d3556 1
a3556 1
=item How do I process each word on each line?
d3558 1
a3558 1
=item How can I print out a word-frequency or line-frequency summary?
d3560 1
a3560 1
=item How can I do approximate matching?
d3562 1
a3562 1
=item How do I efficiently match many regular expressions at once?
d3564 1
a3564 1
=item Why don't word-boundary searches with C<\b> work for me?
d3566 1
a3566 1
=item Why does using $&, $`, or $' slow my program down?
d3568 1
a3568 9
=item What good is C<\G> in a regular expression?

=item Are Perl regexes DFAs or NFAs?  Are they POSIX compliant?

=item What's wrong with using grep or map in a void context?

=item How can I match strings with multibyte characters?

=item How do I match a pattern that is supplied by the user?
d3572 1
a3572 1
=item AUTHOR AND COPYRIGHT
d3576 1
a3576 2
=head2 perlfaq7 - General Perl Language Issues ($Revision: 1.8 $, $Date:
2002/03/26 15:48:32 $)
d3580 1
a3580 1
=item DESCRIPTION
d3584 1
a3584 1
=item Can I get a BNF/yacc/RE for the Perl language?
d3586 4
a3589 2
=item What are all these $@@%&* punctuation signs, and how do I know when to
use them?
d3591 1
a3591 2
=item Do I always/never have to quote my strings or use semicolons and
commas?
d3593 65
a3657 1
=item How do I skip some return values?
d3659 1
a3659 1
=item How do I temporarily block warnings?
d3661 1
a3661 1
=item What's an extension?
d3663 1
a3663 1
=item Why do Perl operators have different precedence than C operators?
d3665 1
a3665 1
=item How do I declare/create a structure?
d3667 1
a3667 1
=item How do I create a module?
d3669 1
a3669 1
=item How do I create a class?
d3671 1
a3671 1
=item How can I tell if a variable is tainted?
d3673 2
a3674 1
=item What's a closure?
d3676 1
a3676 1
=item What is variable suicide and how can I prevent it?
d3678 1
a3678 2
=item How can I pass/return a {Function, FileHandle, Array, Hash, Method,
Regex}?
d3680 1
a3680 2
Passing Variables and Functions, Passing Filehandles, Passing Regexes,
Passing Methods
d3682 5
a3686 1
=item How do I create a static variable?
d3688 1
a3688 2
=item What's the difference between dynamic and lexical (static) scoping? 
Between local() and my()?
d3690 5
a3694 2
=item How can I access a dynamic variable while a similarly named lexical
is in scope?
d3696 1
a3696 1
=item What's the difference between deep and shallow binding?
d3698 1
a3698 1
=item Why doesn't "my($foo) = <FILE>;" work right?
d3700 1
a3700 1
=item How do I redefine a builtin function, operator, or method?
d3702 1
a3702 1
=item What's the difference between calling a function as &foo and foo()?
d3704 1
a3704 1
=item How do I create a switch or case statement?
d3706 1
a3706 1
=item How can I catch accesses to undefined variables/functions/methods?
d3708 1
a3708 1
=item Why can't a method included in this same file be found?
d3710 1
a3710 1
=item How can I find out my current package?
d3712 1
a3712 1
=item How can I comment out a large block of perl code?
d3714 1
a3714 1
=item How do I clear a package?
d3716 1
a3716 1
=item How can I use a variable as a variable name?
d3720 1
a3720 1
=item AUTHOR AND COPYRIGHT
d3724 1
a3724 2
=head2 perlfaq8 - System Interaction ($Revision: 1.8 $, $Date: 2002/05/16
12:41:42 $)
d3728 3
a3730 1
=item DESCRIPTION
d3734 3
a3736 1
=item How do I find out which operating system I'm running under?
d3738 1
a3738 1
=item How come exec() doesn't return?
d3740 1
a3740 1
=item How do I do fancy stuff with the keyboard/screen/mouse?
d3742 1
a3742 1
Keyboard, Screen, Mouse
d3744 1
a3744 1
=item How do I print something out in color?
d3746 1
a3746 1
=item How do I read just one key without waiting for a return key?
d3748 1
a3748 1
=item How do I check whether input is ready on the keyboard?
d3750 1
a3750 1
=item How do I clear the screen?
d3752 1
a3752 1
=item How do I get the screen size?
d3754 1
a3754 1
=item How do I ask the user for a password?
d3756 1
a3756 1
=item How do I read and write the serial port?
d3758 1
a3758 1
lockfiles, open mode, end of line, flushing output, non-blocking input
d3760 1
a3760 1
=item How do I decode encrypted password files?
d3762 1
a3762 1
=item How do I start a process in the background?
d3764 1
a3764 1
STDIN, STDOUT, and STDERR are shared, Signals, Zombies
d3766 3
a3768 1
=item How do I trap control characters/signals?
d3770 1
a3770 1
=item How do I modify the shadow password file on a Unix system?
d3772 1
a3772 1
=item How do I set the time and date?
d3774 1
a3774 1
=item How can I sleep() or alarm() for under a second?
d3776 1
a3776 1
=item How can I measure time under a second?
d3778 1
a3778 1
=item How can I do an atexit() or setjmp()/longjmp()? (Exception handling)
d3780 1
a3780 2
=item Why doesn't my sockets program work under System V (Solaris)?  What
does the error message "Protocol not supported" mean?
d3782 1
a3782 1
=item How can I call my system's unique C functions from Perl?
d3784 1
a3784 1
=item Where do I get the include files to do ioctl() or syscall()?
d3786 2
a3787 1
=item Why do setuid perl scripts complain about kernel problems?
d3789 1
a3789 1
=item How can I open a pipe both to and from a command?
d3791 1
a3791 1
=item Why can't I get the output of a command with system()?
d3793 1
a3793 1
=item How can I capture STDERR from an external command?
d3795 1
a3795 1
=item Why doesn't open() return an error when a pipe open fails?
d3797 1
a3797 1
=item What's wrong with using backticks in a void context?
d3799 1
a3799 1
=item How can I call backticks without shell processing?
d3801 1
a3801 2
=item Why can't my script read from STDIN after I gave it EOF (^D on Unix,
^Z on MS-DOS)?
d3803 1
a3803 1
=item How can I convert my shell script to perl?
d3805 1
a3805 1
=item Can I use perl to run a telnet or ftp session?
d3807 1
a3807 1
=item How can I write expect in Perl?
d3809 1
a3809 2
=item Is there a way to hide perl's command line from programs such as
"ps"?
d3811 1
a3811 3
=item I {changed directory, modified my environment} in a perl script.	How
come the change disappeared when I exited the script?  How do I get my
changes to be visible?
d3813 1
a3813 1
Unix
d3815 1
a3815 2
=item How do I close a process's filehandle without waiting for it to
complete?
d3817 1
a3817 1
=item How do I fork a daemon process?
d3819 1
a3819 1
=item How do I find out if I'm running interactively or not?
d3821 3
a3823 1
=item How do I timeout a slow event?
d3825 1
a3825 1
=item How do I set CPU limits?
d3827 1
a3827 1
=item How do I avoid zombies on a Unix system?
d3829 1
a3829 1
=item How do I use an SQL database?
d3831 1
a3831 1
=item How do I make a system() exit on control-C?
d3833 1
a3833 1
=item How do I open a file without blocking?
d3835 1
a3835 1
=item How do I install a module from CPAN?
d3837 1
a3837 1
=item What's the difference between require and use?
d3839 2
a3840 1
=item How do I keep my own module/library directory?
d3842 1
a3842 2
=item How do I add the directory my program lives in to the module/library
search path?
d3844 1
a3844 1
=item How do I add a directory to my include path at runtime?
d3846 1
a3846 1
=item What is socket.ph and where do I get it?
d3848 1
a3848 1
=back
d3850 1
a3850 1
=item AUTHOR AND COPYRIGHT
d3854 1
a3854 2
=head2 perlfaq9 - Networking ($Revision: 1.9 $, $Date: 2002/04/07 18:46:13
$)
d3862 1
a3862 1
=item What is the correct form of response from a CGI script?
d3864 1
a3864 2
=item My CGI script runs from the command line but not the browser.  (500
Server Error)
d3866 1
a3866 1
=item How can I get better error messages from a CGI program?
d3868 1
a3868 1
=item How do I remove HTML from a string?
d3870 1
a3870 1
=item How do I extract URLs?
d3872 3
a3874 2
=item How do I download a file from the user's machine?  How do I open a
file on another machine?
d3876 1
a3876 1
=item How do I make a pop-up menu in HTML?
d3878 2
a3879 1
=item How do I fetch an HTML file?
d3881 1
a3881 1
=item How do I automate an HTML form submission?
d3883 1
a3883 1
=item How do I decode or create those %-encodings on the web?
d3885 1
a3885 1
=item How do I redirect to another page?
d3887 1
a3887 1
=item How do I put a password on my web pages?
d3889 1
a3889 1
=item How do I edit my .htpasswd and .htgroup files with Perl?
d3891 1
a3891 2
=item How do I make sure users can't enter values into a form that cause my
CGI script to do bad things?
d3893 1
a3893 1
=item How do I parse a mail header?
d3895 1
a3895 1
=item How do I decode a CGI form?
d3897 1
a3897 1
=item How do I check a valid mail address?
d3899 4
a3902 1
=item How do I decode a MIME/BASE64 string?
d3904 1
a3904 1
=item How do I return the user's mail address?
d3906 1
a3906 1
=item How do I send mail?
d3908 1
a3908 1
=item How do I use MIME to make an attachment to a mail message?
d3910 1
a3910 1
=item How do I read mail?
d3912 1
a3912 1
=item How do I find out my hostname/domainname/IP address?
d3914 2
a3915 1
=item How do I fetch a news article or the active newsgroups?
d3917 1
a3917 3
=item How do I fetch/put an FTP file?

=item How can I do RPC in Perl?
a3920 2
=item AUTHOR AND COPYRIGHT

d3969 36
d4045 2
d4278 2
d4372 2
d4491 1
a4491 1
=item How can I recognise a UTF8 string?
d4493 1
a4493 1
=item How does UTF8 represent Unicode characters?
d4495 1
a4495 1
=item How does Perl store UTF8 strings?
d4497 1
a4497 1
=item How do I convert a string to UTF8?
a4596 93
=head2 perlutil - utilities packaged with the Perl distribution

=over 4

=item DESCRIPTION

=over 4

=item DOCUMENTATION

L<perldoc|perldoc>, L<pod2man|pod2man> and L<pod2text|pod2text>,
L<pod2html|pod2html> and L<pod2latex|pod2latex>, L<pod2usage|pod2usage>,
L<podselect|podselect>, L<podchecker|podchecker>, L<splain|splain>,
L<roffitall|roffitall>

=item CONVERTORS

L<a2p|a2p>, L<s2p|s2p>, L<find2perl|find2perl>

=item Administration

L<libnetcfg|libnetcfg>

=item Development

L<perlbug|perlbug>, L<h2ph|h2ph>, L<c2ph|c2ph> and L<pstruct|pstruct>,
L<h2xs|h2xs>, L<dprofpp|dprofpp>, L<perlcc|perlcc>

=item SEE ALSO

=back

=back

=head2 perlfilter - Source Filters

=over 4

=item DESCRIPTION

=item CONCEPTS

=item USING FILTERS

=item WRITING A SOURCE FILTER

=item WRITING A SOURCE FILTER IN C

B<Decryption Filters>

=item CREATING A SOURCE FILTER AS A SEPARATE EXECUTABLE

=item WRITING A SOURCE FILTER IN PERL

=item USING CONTEXT: THE DEBUG FILTER

=item CONCLUSION

=item REQUIREMENTS

=item AUTHOR

=item Copyrights

=back

=head2 perldbmfilter - Perl DBM Filters

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>

=over 4

=item The Filter

=item An Example -- the NULL termination problem.

=item Another Example -- Key is a C int.

=back

=item SEE ALSO

=item AUTHOR

=back

d4632 2
a4633 2
load_module, nothreadhook, perl_alloc, perl_construct, perl_destruct,
perl_free, perl_parse, perl_run, require_pv
d4637 1
a4637 1
pack_cat, unpack_str
d4674 1
a4674 1
strNE, strnEQ, strnNE
d4685 4
d4695 2
a4696 1
XSRETURN_YES, XST_mIV, XST_mNO, XST_mNV, XST_mPV, XST_mUNDEF, XST_mYES
d4706 31
a4736 31
new_vstring, SvCUR, SvCUR_set, SvEND, SvGROW, SvIOK, SvIOKp, SvIOK_notUV,
SvIOK_off, SvIOK_on, SvIOK_only, SvIOK_only_UV, SvIOK_UV, SvIV, SvIVx,
SvIVX, SvLEN, SvNIOK, SvNIOKp, SvNIOK_off, SvNOK, SvNOKp, SvNOK_off,
SvNOK_on, SvNOK_only, SvNV, SvNVX, SvNVx, SvOK, SvOOK, SvPOK, SvPOKp,
SvPOK_off, SvPOK_on, SvPOK_only, SvPOK_only_UTF8, SvPV, SvPVbyte,
SvPVbytex, SvPVbytex_force, SvPVbyte_force, SvPVbyte_nolen, SvPVutf8,
SvPVutf8x, SvPVutf8x_force, SvPVutf8_force, SvPVutf8_nolen, SvPVx, SvPVX,
SvPV_force, SvPV_force_nomg, SvPV_nolen, SvREFCNT, SvREFCNT_dec,
SvREFCNT_inc, SvROK, SvROK_off, SvROK_on, SvRV, SvSTASH, SvTAINT,
SvTAINTED, SvTAINTED_off, SvTAINTED_on, SvTRUE, SvTYPE, SvUNLOCK, SvUOK,
SvUPGRADE, SvUTF8, SvUTF8_off, SvUTF8_on, SvUV, SvUVX, SvUVx, sv_2bool,
sv_2cv, sv_2io, sv_2iv, sv_2mortal, sv_2nv, sv_2pvbyte, sv_2pvbyte_nolen,
sv_2pvutf8, sv_2pvutf8_nolen, sv_2pv_flags, sv_2pv_nolen, sv_2uv,
sv_backoff, sv_bless, sv_catpv, sv_catpvf, sv_catpvf_mg, sv_catpvn,
sv_catpvn_flags, sv_catpvn_mg, sv_catpv_mg, sv_catsv, sv_catsv_flags,
sv_catsv_mg, sv_chop, sv_clear, sv_cmp, sv_cmp_locale, sv_collxfrm,
sv_copypv, sv_dec, sv_derived_from, sv_eq, sv_force_normal,
sv_force_normal_flags, sv_free, sv_gets, sv_grow, sv_inc, sv_insert,
sv_isa, sv_isobject, sv_iv, sv_len, sv_len_utf8, sv_magic, sv_magicext,
sv_mortalcopy, sv_newmortal, sv_newref, sv_nolocking, sv_nosharing,
sv_nounlocking, sv_nv, sv_pos_b2u, sv_pos_u2b, sv_pv, sv_pvbyte,
sv_pvbyten, sv_pvbyten_force, sv_pvn, sv_pvn_force, sv_pvn_force_flags,
sv_pvutf8, sv_pvutf8n, sv_pvutf8n_force, sv_reftype, sv_replace,
sv_report_used, sv_reset, sv_rvweaken, sv_setiv, sv_setiv_mg, sv_setnv,
sv_setnv_mg, sv_setpv, sv_setpvf, sv_setpvf_mg, sv_setpvn, sv_setpvn_mg,
sv_setpv_mg, sv_setref_iv, sv_setref_nv, sv_setref_pv, sv_setref_pvn,
sv_setref_uv, sv_setsv, sv_setsv_flags, sv_setsv_mg, sv_setuv, sv_setuv_mg,
sv_taint, sv_tainted, sv_true, sv_unmagic, sv_unref, sv_unref_flags,
sv_untaint, sv_upgrade, sv_usepvn, sv_usepvn_mg, sv_utf8_decode,
sv_utf8_downgrade, sv_utf8_encode, sv_utf8_upgrade, sv_utf8_upgrade_flags,
sv_uv, sv_vcatpvfn, sv_vsetpvfn
d4741 5
a4745 4
pv_uni_display, sv_recode_to_utf8, sv_uni_display, to_utf8_case,
to_utf8_fold, to_utf8_lower, to_utf8_title, to_utf8_upper, utf8n_to_uvchr,
utf8n_to_uvuni, utf8_distance, utf8_hop, utf8_length, utf8_to_bytes,
utf8_to_uvchr, utf8_to_uvuni, uvchr_to_utf8, uvuni_to_utf8_flags
d4769 16
d4800 4
a4803 1
CvPADLIST
d4831 2
d4858 6
d4921 146
d5249 3
d5302 2
d5342 1
a5342 1
=item Byte to/from UTF8 and UTF8 to/from local conversion
d5428 26
a5453 1
=head2 perlhack - How to hack at the Perl internals
d5459 25
a5483 7
Does concept match the general goals of Perl?, Where is the
implementation?, Backwards compatibility, Could it be a module instead?, Is
the feature generic enough?, Does it potentially introduce new bugs?, Does
it preclude other desirable features?, Is the implementation robust?, Is
the implementation generic enough to be portable?, Is the implementation
tested?, Is there enough documentation?, Is there another way to do it?,
Does it create too much work?, Patches speak louder than words
d5487 37
a5523 1
=item Keeping in sync
d5525 1
a5525 2
rsync'ing the source tree, Using rsync over the LAN, Using pushing over the
NFS, rsync'ing the patches
d5527 1
a5527 1
=item Why rsync the source tree
d5529 1
a5529 1
It's easier to rsync the source tree, It's more reliable
d5531 1
a5531 1
=item Why rsync the patches
d5533 1
a5533 2
It's easier to rsync the patches, It's a good reference, Finding a start
point, Finding how to fix a bug, Finding the source of misbehaviour
d5535 1
a5535 1
=item Perlbug remote interface
d5537 1
a5537 2
1 http://bugs.perl.org, 2 bugdb@@perl.org, 3
commands_and_bugdids@@bugs.perl.org, notes, patches, tests
d5539 1
a5539 1
=item Submitting patches
d5541 1
a5541 2
L<perlguts>, L<perlxstut> and L<perlxs>, L<perlapi>,
F<Porting/pumpkin.pod>, The perl5-porters FAQ
d5543 1
a5543 1
=item Finding Your Way Around
d5545 1
a5545 1
Core modules, Tests, Documentation, Configure, Interpreter
d5547 1
a5547 1
=item Elements of the interpreter
d5549 1
a5549 1
Startup, Parsing, Optimization, Running
d5551 1
a5551 1
=item Internal Variable Types
d5553 1
a5553 1
=item Op Trees
d5555 1
a5555 1
=item Stacks
d5557 1
a5557 1
Argument stack, Mark stack, Save stack
d5559 1
a5559 1
=item Millions of Macros
d5561 1
a5561 1
=item Poking at Perl
d5563 1
a5563 1
=item Using a source-level debugger
d5565 1
a5565 2
run [args], break function_name, break source.c:xxx, step, next, continue,
finish, 'enter', print
d5567 1
a5567 1
=item Dumping Perl Data Structures
d5569 8
a5576 1
=item Patching
d5578 1
a5578 1
=item Patching a core module
d5580 1
a5580 1
=item Adding a new function to the core
d5582 1
a5582 1
=item Writing a test
d5584 1
a5584 2
F<t/base/>, F<t/cmd/>, F<t/comp/>, F<t/io/>, F<t/lib/>, F<t/op/>,
F<t/pod/>, F<t/run/>, t/base t/comp, t/cmd t/run t/io t/op, t/lib ext lib
d5586 1
a5586 1
=item Special Make Test Targets
d5588 1
a5588 2
coretest, test.deparse, minitest, test.third check.third utest.third
ucheck.third, test.torture torturetest, utest ucheck test.utf8 check.utf8
d5592 1
a5592 1
=item EXTERNAL TOOLS FOR DEBUGGING PERL
d5596 7
a5602 1
=item Rational Software's Purify
d5604 1
a5604 1
=item Purify on Unix
d5606 1
a5606 1
-Accflags=-DPURIFY, -Doptimize='-g', -Uusemymalloc, -Dusemultiplicity
d5608 1
a5608 1
=item Purify on NT
d5610 1
a5610 1
DEFINES, USE_MULTI = define, #PERL_MALLOC = define, CFG = Debug
d5612 1
a5612 1
=item Compaq's/Digital's/HP's Third Degree
d5614 1
a5614 1
=item PERL_DESTRUCT_LEVEL
d5616 1
a5616 1
=item Profiling
d5618 1
a5618 1
=item Gprof Profiling
d5620 1
a5620 1
-a, -b, -e routine, -f routine, -s, -z
d5622 1
a5622 1
=item GCC gcov Profiling
d5624 1
a5624 1
=item Pixie Profiling
d5626 1
a5626 2
-h, -l, -p[rocedures], -h[eavy], -i[nvocations], -l[ines], -testcoverage,
-z[ero]
d5628 1
a5628 1
=item Miscellaneous tricks
d5630 1
a5630 1
=item CONCLUSION
d5632 1
a5632 1
I<The Road goes ever on and on, down from the door where it began.>
d5636 1
a5636 1
=item AUTHOR
d5638 1
a5638 1
=back
d5640 1
a5640 1
=head2 perlhist - the Perl history records
d5644 5
a5648 1
=item DESCRIPTION
d5650 1
a5650 1
=item INTRODUCTION
d5652 1
a5652 1
=item THE KEEPERS OF THE PUMPKIN
d5656 3
a5658 1
=item PUMPKIN?
d5660 1
a5660 1
=back
d5662 1
a5662 1
=item THE RECORDS
d5664 1
a5664 1
=over 4
d5666 1
a5666 1
=item SELECTED RELEASE SIZES
d5668 1
a5668 1
=item SELECTED PATCH SIZES
d5672 5
a5676 1
=item THE KEEPERS OF THE RECORDS
d5680 1
a5680 1
=head2 perldelta - what is new for perl v5.8.0
d5856 2
d5894 16
d7425 43
d7484 2
a7503 10
=head2 perlapollo, README.apollo - Perl version 5 on Apollo DomainOS

=over 4

=item DESCRIPTION

=item AUTHOR

=back

d7570 10
d7630 2
a7647 22
=over 4

=item Name

=item Description

=item Build

=over 4

=item Tools & SDK

=item Make

=back

=item Acknowledgements

=item Author

=back

d7693 1
a7693 1
=item Warnings on Cygwin
d7705 3
a7707 1
=item NDBM_File does not work on FAT filesystems
d7711 1
a7711 1
Pathnames, Text/Binary, F<.exe>, chown(), Miscellaneous
a7761 44
=head2 perldos - Perl under DOS, W31, W95.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Prerequisites for Compiling Perl on DOS

DJGPP, Pthreads

=item Shortcomings of Perl under DOS

=item Building Perl on DOS

=item Testing Perl on DOS

=item Installation of Perl on DOS

=back

=item BUILDING AND INSTALLING MODULES ON DOS

=over 4

=item Building Prerequisites for Perl on DOS

=item Unpacking CPAN Modules on DOS

=item Building Non-XS Modules on DOS

=item Building XS Modules on DOS

=back

=item AUTHOR

=item SEE ALSO

=back

d7825 2
d7911 2
d7958 34
d8390 1
a8390 1
=head2 perlqnx, README.qnx - Perl version 5 on QNX
d8398 1
a8398 1
=item Required Software for Compiling Perl on QNX4
d8400 1
a8400 1
/bin/sh, ar, nm, cpp, make
d8402 1
a8402 1
=item Outstanding Issues with Perl on QNX4
d8404 1
a8404 3
=item QNX auxiliary files

qnx/ar, qnx/cpp
d8406 1
a8406 1
=item Outstanding issues with perl under QNX6
d8410 1
a8410 1
=item AUTHOR
d8450 26
d8500 1
a8500 1
=item Environment for Compiling Perl on Solaris
d8508 1
a8508 1
=item 64-bit Issues with Perl on Solaris.
d8510 1
a8510 1
=item Threads in Perl on Solaris.
d8512 1
a8512 1
=item Malloc Issues with Perl on Solaris.
d8556 2
d8581 2
a8767 47
=head2 perlwin32 - Perl under Windows

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Setting Up Perl on Win32

Make, Command Shell, Borland C++, Microsoft Visual C++, Microsoft Platform
SDK 64-bit Compiler, Mingw32 with GCC

=item Building

=item Testing Perl on Win32

=item Installation of Perl on Win32

=item Usage Hints for Perl on Win32

Environment Variables, File Globbing, Using perl from the command line,
Building Extensions, Command-line Wildcard Expansion, Win32 Specific
Extensions, Notes on 64-bit Windows

=item Running Perl Scripts

Miscellaneous Things

=back

=item BUGS AND CAVEATS

=item AUTHORS

Gary Ng E<lt>71564.1743@@CompuServe.COME<gt>, Gurusamy Sarathy
E<lt>gsar@@activestate.comE<gt>, Nick Ing-Simmons
E<lt>nick@@ing-simmons.netE<gt>

=item SEE ALSO

=item HISTORY

=back

a8891 12
=head2 attrs - set/get attributes of a subroutine (deprecated)

=over 4

=item SYNOPSIS

=item DESCRIPTION

method, locked

=back

d8918 2
d8924 1
a8924 1
=head2 bigint - Transparent big integer support for Perl
d8946 2
d8976 6
a8987 2
=item METHODS

d9020 2
d9063 2
d9080 12
d9169 12
d9184 9
a9192 1
I<ENCNAME_IN> ...] ;, no encoding;
d9202 1
a9202 1
=back
d9204 1
a9204 1
=item Non-ASCII Identifiers and Filter option
d9206 1
a9206 1
use encoding I<ENCNAME> Filter=E<gt>1;
d9212 4
a9450 10
=head2 re - Perl pragma to alter regular expression behaviour

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

d9503 2
a9516 30
=head2 threads - Perl extension allowing use of interpreter based threads
from perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

$thread = threads->create(function, LIST), $thread->join, $thread->detach,
threads->self, $thread->tid, threads->object( tid ), threads->yield();,
threads->list();, async BLOCK;

=item WARNINGS

A thread exited while %d other threads were still running

=item TODO

=item BUGS

Parent-Child threads, Returning objects, Creating threads inside BEGIN
blocks, PERL_OLD_SIGNALS are not threadsafe, will not be

=item AUTHOR and COPYRIGHT

=item SEE ALSO

=back

d9556 3
a9558 3
$num_octets = utf8::upgrade($string);, utf8::downgrade($string[, FAIL_OK]),
utf8::encode($string), $flag = utf8::decode($string), $flag =
utf8::valid(STRING)
d9740 27
d9773 1
a9773 1
=item B::SV METHODS
d9775 1
a9775 1
REFCNT, FLAGS
d9777 1
a9777 1
=item B::IV METHODS
d9781 1
a9781 1
=item B::NV METHODS
d9785 1
a9785 1
=item B::RV METHODS
d9789 1
a9789 1
=item B::PV METHODS
d9793 1
a9793 1
=item B::PVMG METHODS
d9797 1
a9797 1
=item B::MAGIC METHODS
d9801 1
a9801 1
=item B::PVLV METHODS
d9805 1
a9805 1
=item B::BM METHODS
d9809 1
a9809 1
=item B::GV METHODS
d9814 1
a9814 1
=item B::IO METHODS
d9819 1
a9819 1
=item B::AV METHODS
d9821 1
a9821 1
FILL, MAX, OFF, ARRAY, AvFLAGS
d9823 1
a9823 1
=item B::CV METHODS
d9825 2
a9826 2
STASH, START, ROOT, GV, FILE, DEPTH, PADLIST, OUTSIDE, XSUB, XSUBANY,
CvFLAGS, const_sv
d9828 1
a9828 1
=item B::HV METHODS
d9834 1
a9834 1
=item B::OP METHODS
d9854 1
a9854 1
=item B::PMOP METHODS
d9857 1
a9857 1
pmpermflags, precomp, pmoffet
d9871 1
a9871 1
=item B::LOOP METHODS
d9875 1
a9875 1
=item B::COP METHODS
d9877 1
a9877 1
label, stash, file, cop_seq, arybase, line
a9880 8
=item FUNCTIONS EXPORTED BY C<B>

main_cv, init_av, begin_av, end_av, main_root, main_start, comppadlist,
regex_padav, sv_undef, sv_yes, sv_no, amagic_generation, walkoptree(OP,
METHOD), walkoptree_debug(DEBUG), walksymtable(SYMREF, METHOD, RECURSE,
PREFIX), svref_2object(SV), ppname(OPNUM), hash(STR), cast_I32(I), minus_c,
cstring(STR), perlstring(STR), class(OBJ), threadsv_names

d9940 2
d9944 1
a9944 3
B<-ofilename>, B<-afilename>, B<-->, B<-f>, B<-fcompress-nullops>,
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-On>, B<-D>, B<-Do>,
B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-upackage>
d9946 1
a9946 1
=item EXAMPLES
d9948 1
a9948 1
=item BUGS
d10078 1
a10078 1
B<-l>, B<-p>, B<-P>, B<-q>, B<-f>I<FILE>, B<-s>I<LETTERS>, B<C>,
d10127 3
a10129 2
B<context>, B<implicit-read> and B<implicit-write>, B<dollar-underscore>,
B<private-names>, B<undefined-subs>, B<regexp-variables>, B<all>, B<none>
d10257 1
a10257 1
clearcache ( COUNT ), clearallcache ( ), cmpthese ( COUT, CODEHASHREF, [
d10261 2
d10303 2
d10307 1
a10307 3
B<-ofilename>, B<-afilename>, B<-->, B<-f>, B<-fcompress-nullops>,
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-On>, B<-D>, B<-Do>,
B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-upackage>
d10309 1
a10309 1
=item EXAMPLES
d10311 1
a10311 1
=item BUGS
d10450 2
d10482 2
a10483 1
B<Parameters:>
d10513 3
a10515 2
B<path_translated()>, B<remote_host()>, B<script_name()>, B<referer()>,
B<auth_type ()>, B<server_name ()>, B<virtual_host ()>, B<server_port ()>,
d10599 1
a10599 1
=item CHANGE LOG
d10763 2
d10981 1
a10981 1
myconfig(), config_sh(), config_vars(@@names)
d11018 48
a11065 47
C<d__fwalk>, C<d_access>, C<d_accessx>, C<d_alarm>, C<d_archlib>,
C<d_asctime_r>, C<d_atolf>, C<d_atoll>, C<d_attribut>, C<d_bcmp>,
C<d_bcopy>, C<d_bsd>, C<d_bsdgetpgrp>, C<d_bsdsetpgrp>, C<d_bzero>,
C<d_casti32>, C<d_castneg>, C<d_charvspr>, C<d_chown>, C<d_chroot>,
C<d_chsize>, C<d_class>, C<d_closedir>, C<d_cmsghdr_s>, C<d_const>,
C<d_crypt>, C<d_crypt_r>, C<d_csh>, C<d_ctermid_r>, C<d_ctime_r>,
C<d_cuserid>, C<d_dbl_dig>, C<d_dbminitproto>, C<d_difftime>, C<d_dirfd>,
C<d_dirnamlen>, C<d_dlerror>, C<d_dlopen>, C<d_dlsymun>, C<d_dosuid>,
C<d_drand48_r>, C<d_drand48proto>, C<d_dup2>, C<d_eaccess>, C<d_endgrent>,
C<d_endgrent_r>, C<d_endhent>, C<d_endhostent_r>, C<d_endnent>,
C<d_endnetent_r>, C<d_endpent>, C<d_endprotoent_r>, C<d_endpwent>,
C<d_endpwent_r>, C<d_endsent>, C<d_endservent_r>, C<d_eofnblk>,
C<d_eunice>, C<d_fchdir>, C<d_fchmod>, C<d_fchown>, C<d_fcntl>,
C<d_fcntl_can_lock>, C<d_fd_macros>, C<d_fd_set>, C<d_fds_bits>,
C<d_fgetpos>, C<d_finite>, C<d_finitel>, C<d_flexfnam>, C<d_flock>,
C<d_flockproto>, C<d_fork>, C<d_fp_class>, C<d_fpathconf>, C<d_fpclass>,
C<d_fpclassify>, C<d_fpclassl>, C<d_fpos64_t>, C<d_frexpl>, C<d_fs_data_s>,
C<d_fseeko>, C<d_fsetpos>, C<d_fstatfs>, C<d_fstatvfs>, C<d_fsync>,
C<d_ftello>, C<d_ftime>, C<d_Gconvert>, C<d_getcwd>, C<d_getespwnam>,
C<d_getfsstat>, C<d_getgrent>, C<d_getgrent_r>, C<d_getgrgid_r>,
C<d_getgrnam_r>, C<d_getgrps>, C<d_gethbyaddr>, C<d_gethbyname>,
C<d_gethent>, C<d_gethname>, C<d_gethostbyaddr_r>, C<d_gethostbyname_r>,
C<d_gethostent_r>, C<d_gethostprotos>, C<d_getitimer>, C<d_getlogin>,
C<d_getlogin_r>, C<d_getmnt>, C<d_getmntent>, C<d_getnbyaddr>,
C<d_getnbyname>, C<d_getnent>, C<d_getnetbyaddr_r>, C<d_getnetbyname_r>,
C<d_getnetent_r>, C<d_getnetprotos>, C<d_getpagsz>, C<d_getpbyname>,
C<d_getpbynumber>, C<d_getpent>, C<d_getpgid>, C<d_getpgrp2>, C<d_getpgrp>,
C<d_getppid>, C<d_getprior>, C<d_getprotobyname_r>,
C<d_getprotobynumber_r>, C<d_getprotoent_r>, C<d_getprotoprotos>,
C<d_getprpwnam>, C<d_getpwent>, C<d_getpwent_r>, C<d_getpwnam_r>,
C<d_getpwuid_r>, C<d_getsbyname>, C<d_getsbyport>, C<d_getsent>,
C<d_getservbyname_r>, C<d_getservbyport_r>, C<d_getservent_r>,
C<d_getservprotos>, C<d_getspnam>, C<d_getspnam_r>, C<d_gettimeod>,
C<d_gmtime_r>, C<d_gnulibc>, C<d_grpasswd>, C<d_hasmntopt>, C<d_htonl>,
C<d_index>, C<d_inetaton>, C<d_int64_t>, C<d_isascii>, C<d_isfinite>,
C<d_isinf>, C<d_isnan>, C<d_isnanl>, C<d_killpg>, C<d_lchown>,
C<d_ldbl_dig>, C<d_link>, C<d_localtime_r>, C<d_locconv>, C<d_lockf>,
C<d_longdbl>, C<d_longlong>, C<d_lseekproto>, C<d_lstat>, C<d_madvise>,
C<d_mblen>, C<d_mbstowcs>, C<d_mbtowc>, C<d_memchr>, C<d_memcmp>,
C<d_memcpy>, C<d_memmove>, C<d_memset>, C<d_mkdir>, C<d_mkdtemp>,
C<d_mkfifo>, C<d_mkstemp>, C<d_mkstemps>, C<d_mktime>, C<d_mmap>,
C<d_modfl>, C<d_modfl_pow32_bug>, C<d_mprotect>, C<d_msg>, C<d_msg_ctrunc>,
C<d_msg_dontroute>, C<d_msg_oob>, C<d_msg_peek>, C<d_msg_proxy>,
C<d_msgctl>, C<d_msgget>, C<d_msghdr_s>, C<d_msgrcv>, C<d_msgsnd>,
C<d_msync>, C<d_munmap>, C<d_mymalloc>, C<d_nice>, C<d_nl_langinfo>,
C<d_nv_preserves_uv>, C<d_off64_t>, C<d_old_pthread_create_joinable>,
C<d_oldpthreads>, C<d_oldsock>, C<d_open3>, C<d_pathconf>, C<d_pause>,
d11070 23
a11092 22
C<d_pthread_atfork>, C<d_pthread_yield>, C<d_pwage>, C<d_pwchange>,
C<d_pwclass>, C<d_pwcomment>, C<d_pwexpire>, C<d_pwgecos>, C<d_pwpasswd>,
C<d_pwquota>, C<d_qgcvt>, C<d_quad>, C<d_random_r>, C<d_readdir64_r>,
C<d_readdir>, C<d_readdir_r>, C<d_readlink>, C<d_readv>, C<d_recvmsg>,
C<d_rename>, C<d_rewinddir>, C<d_rmdir>, C<d_safebcpy>, C<d_safemcpy>,
C<d_sanemcmp>, C<d_sbrkproto>, C<d_sched_yield>, C<d_scm_rights>,
C<d_SCNfldbl>, C<d_seekdir>, C<d_select>, C<d_sem>, C<d_semctl>,
C<d_semctl_semid_ds>, C<d_semctl_semun>, C<d_semget>, C<d_semop>,
C<d_sendmsg>, C<d_setegid>, C<d_seteuid>, C<d_setgrent>, C<d_setgrent_r>,
C<d_setgrps>, C<d_sethent>, C<d_sethostent_r>, C<d_setitimer>,
C<d_setlinebuf>, C<d_setlocale>, C<d_setlocale_r>, C<d_setnent>,
C<d_setnetent_r>, C<d_setpent>, C<d_setpgid>, C<d_setpgrp2>, C<d_setpgrp>,
C<d_setprior>, C<d_setproctitle>, C<d_setprotoent_r>, C<d_setpwent>,
C<d_setpwent_r>, C<d_setregid>, C<d_setresgid>, C<d_setresuid>,
C<d_setreuid>, C<d_setrgid>, C<d_setruid>, C<d_setsent>, C<d_setservent_r>,
C<d_setsid>, C<d_setvbuf>, C<d_sfio>, C<d_shm>, C<d_shmat>,
C<d_shmatprototype>, C<d_shmctl>, C<d_shmdt>, C<d_shmget>, C<d_sigaction>,
C<d_sigprocmask>, C<d_sigsetjmp>, C<d_sockatmark>, C<d_sockatmarkproto>,
C<d_socket>, C<d_socklen_t>, C<d_sockpair>, C<d_socks5_init>, C<d_sqrtl>,
C<d_srand48_r>, C<d_srandom_r>, C<d_sresgproto>, C<d_sresuproto>,
C<d_statblks>, C<d_statfs_f_flags>, C<d_statfs_s>, C<d_statvfs>,
C<d_stdio_cnt_lval>, C<d_stdio_ptr_lval>, C<d_stdio_ptr_lval_nochange_cnt>,
d11104 7
a11110 6
C<d_vendorbin>, C<d_vendorlib>, C<d_vfork>, C<d_void_closedir>,
C<d_voidsig>, C<d_voidtty>, C<d_volatile>, C<d_vprintf>, C<d_wait4>,
C<d_waitpid>, C<d_wcstombs>, C<d_wctomb>, C<d_writev>, C<d_xenix>, C<date>,
C<db_hashtype>, C<db_prefixtype>, C<db_version_major>, C<db_version_minor>,
C<db_version_patch>, C<defvoidused>, C<direntrytype>, C<dlext>, C<dlsrc>,
C<doublesize>, C<drand01>, C<drand48_r_proto>, C<dynamic_ext>
d11127 10
a11136 10
C<gccosandvers>, C<gccversion>, C<getgrent_r_proto>, C<getgrgid_r_proto>,
C<getgrnam_r_proto>, C<gethostbyaddr_r_proto>, C<gethostbyname_r_proto>,
C<gethostent_r_proto>, C<getlogin_r_proto>, C<getnetbyaddr_r_proto>,
C<getnetbyname_r_proto>, C<getnetent_r_proto>, C<getprotobyname_r_proto>,
C<getprotobynumber_r_proto>, C<getprotoent_r_proto>, C<getpwent_r_proto>,
C<getpwnam_r_proto>, C<getpwuid_r_proto>, C<getservbyname_r_proto>,
C<getservbyport_r_proto>, C<getservent_r_proto>, C<getspnam_r_proto>,
C<gidformat>, C<gidsign>, C<gidsize>, C<gidtype>, C<glibpth>, C<gmake>,
C<gmtime_r_proto>, C<gnulibc_version>, C<grep>, C<groupcat>, C<groupstype>,
C<gzip>
d11140 2
a11141 1
C<h_fcntl>, C<h_sysfile>, C<hint>, C<hostcat>
d11163 10
a11172 6
C<incpath>, C<inews>, C<installarchlib>, C<installbin>, C<installman1dir>,
C<installman3dir>, C<installprefix>, C<installprefixexp>,
C<installprivlib>, C<installscript>, C<installsitearch>, C<installsitebin>,
C<installsitelib>, C<installstyle>, C<installusrbinperl>,
C<installvendorarch>, C<installvendorbin>, C<installvendorlib>, C<intsize>,
C<issymlink>, C<ivdformat>, C<ivsize>, C<ivtype>
d11196 3
a11198 2
C<Mcc>, C<mips_type>, C<mkdir>, C<mmaptype>, C<modetype>, C<more>,
C<multiarch>, C<mv>, C<myarchname>, C<mydomain>, C<myhostname>, C<myuname>
d11244 13
a11256 10
C<sitebinexp>, C<sitelib>, C<sitelib_stem>, C<sitelibexp>, C<siteprefix>,
C<siteprefixexp>, C<sizesize>, C<sizetype>, C<sleep>, C<smail>, C<so>,
C<sockethdr>, C<socketlib>, C<socksizetype>, C<sort>, C<spackage>,
C<spitshell>, C<sPRId64>, C<sPRIeldbl>, C<sPRIEUldbl>, C<sPRIfldbl>,
C<sPRIFUldbl>, C<sPRIgldbl>, C<sPRIGUldbl>, C<sPRIi64>, C<sPRIo64>,
C<sPRIu64>, C<sPRIx64>, C<sPRIXU64>, C<srand48_r_proto>,
C<srandom_r_proto>, C<src>, C<sSCNfldbl>, C<ssizetype>, C<startperl>,
C<startsh>, C<static_ext>, C<stdchar>, C<stdio_base>, C<stdio_bufsiz>,
C<stdio_cnt>, C<stdio_filbuf>, C<stdio_ptr>, C<stdio_stream_array>,
C<strerror_r_proto>, C<strings>, C<submit>, C<subversion>, C<sysman>
d11269 7
a11275 6
C<use64bitint>, C<usecrosscompile>, C<usedl>, C<useithreads>,
C<uselargefiles>, C<uselongdouble>, C<usemorebits>, C<usemultiplicity>,
C<usemymalloc>, C<usenm>, C<useopcode>, C<useperlio>, C<useposix>,
C<usereentrant>, C<usesfio>, C<useshrplib>, C<usesocks>, C<usethreads>,
C<usevendorprefix>, C<usevfork>, C<usrinc>, C<uuname>, C<uvoformat>,
C<uvsize>, C<uvtype>, C<uvuformat>, C<uvxformat>, C<uvXUformat>
d11280 5
a11284 2
C<vendorlib>, C<vendorlib_stem>, C<vendorlibexp>, C<vendorprefix>,
C<vendorprefixexp>, C<version>, C<version_patchlevel_string>,
a11529 16
$Data::Dumper::Indent  I<or>  I<$OBJ>->Indent(I<[NEWVAL]>),
$Data::Dumper::Purity  I<or>  I<$OBJ>->Purity(I<[NEWVAL]>),
$Data::Dumper::Pad  I<or>  I<$OBJ>->Pad(I<[NEWVAL]>),
$Data::Dumper::Varname	I<or>  I<$OBJ>->Varname(I<[NEWVAL]>),
$Data::Dumper::Useqq  I<or>  I<$OBJ>->Useqq(I<[NEWVAL]>),
$Data::Dumper::Terse  I<or>  I<$OBJ>->Terse(I<[NEWVAL]>),
$Data::Dumper::Freezer	I<or>  $I<OBJ>->Freezer(I<[NEWVAL]>),
$Data::Dumper::Toaster	I<or>  $I<OBJ>->Toaster(I<[NEWVAL]>),
$Data::Dumper::Deepcopy  I<or>	$I<OBJ>->Deepcopy(I<[NEWVAL]>),
$Data::Dumper::Quotekeys  I<or>  $I<OBJ>->Quotekeys(I<[NEWVAL]>),
$Data::Dumper::Bless  I<or>  $I<OBJ>->Bless(I<[NEWVAL]>),
$Data::Dumper::Maxdepth  I<or>	$I<OBJ>->Maxdepth(I<[NEWVAL]>),
$Data::Dumper::Useperl	I<or>  $I<OBJ>->Useperl(I<[NEWVAL]>),
$Data::Dumper::Sortkeys  I<or>	$I<OBJ>->Sortkeys(I<[NEWVAL]>),
$Data::Dumper::Deparse	I<or>  $I<OBJ>->Deparse(I<[NEWVAL]>)

d11540 6
d11574 1
a11574 1
=head2 Devel::PPPort, Perl/Pollution/Portability
d11669 3
a11671 2
Digest::XXX->new($arg,...), $ctx->reset, $ctx->add($data,...),
$ctx->addfile($io_handle), $ctx->digest, $ctx->hexdigest, $ctx->b64digest
d11693 1
a11693 1
$md5 = Digest::MD5->new, $md5->reset, $md5->add($data,...),
d11754 1
a11754 1
dl_load_file(), dl_unload_file(), dl_loadflags(), dl_find_symbol(),
d11771 18
d11899 1
a11899 1
=head2	 Encode::CJKConstants -- Internally used by Encode::??::ISO_2022_*
d11947 2
a11948 1
-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check])
d11952 1
a11952 1
-E<gt>name, -E<gt>new_sequence, -E<gt>perlio_ok(), -E<gt>needs_lines()
d12056 1
a12056 1
=item BUGS
a12059 2
=item Workaround

d12210 14
d12246 1
a12246 1
=head2 Encode::lib::Encode::CJKConstants,   Encode::CJKConstants.pm --
d12268 2
a12269 1
-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check])
d12273 1
a12273 1
-E<gt>name, -E<gt>new_sequence, -E<gt>perlio_ok(), -E<gt>needs_lines()
d12351 1
a12351 1
=item BUGS
a12354 2
=item Workaround

d12448 15
a12468 15
  use Encode::Encoder;
  # Encode::encode("ISO-8859-1", $data); 
  Encode::Encoder->new($data)->iso_8859_1; # OOP way
  # shortcut
  use Encode::Encoder qw(encoder);
  encoder($data)->iso_8859_1;
  # you can stack them!
  encoder($data)->iso_8859_1->base64;  # provided base64() is defined
  # you can use it as a decoder as well
  encoder($base64)->bytes('base64')->latin1;
  # stringified
  print encoder($data)->utf8->latin1;  # prints the string in latin1
  # numified
  encoder("\x{abcd}\x{ef}g")->utf8 == 6; # true. bytes::length($data)

d12500 12
d12515 9
a12523 1
I<ENCNAME_IN> ...] ;, no encoding;
d12533 1
a12533 1
=back
d12535 1
a12535 1
=item Non-ASCII Identifiers and Filter option
d12537 1
a12537 1
use encoding I<ENCNAME> Filter=E<gt>1;
d12543 4
a12556 15
  use Encode::Encoder;
  # Encode::encode("ISO-8859-1", $data); 
  Encode::Encoder->new($data)->iso_8859_1; # OOP way
  # shortcut
  use Encode::Encoder qw(encoder);
  encoder($data)->iso_8859_1;
  # you can stack them!
  encoder($data)->iso_8859_1->base64;  # provided base64() is defined
  # you can use it as a decoder as well
  encoder($base64)->bytes('base64')->latin1;
  # stringified
  print encoder($data)->utf8->latin1;  # prints the string in latin1
  # numified
  encoder("\x{abcd}\x{ef}g")->utf8 == 6; # true. bytes::length($data)

d12728 8
d12815 29
a12843 1
=over 4
d12845 1
a12845 1
=item SYNOPSIS
d12847 1
a12847 1
=item DESCRIPTION
d12917 1
a12917 1
=head2 ExtUtils::MM_Any - Platform agnostic MM methods
d12927 6
d12935 1
a12935 1
=item File::Spec wrappers  B<DEPRECATED>
d12937 1
a12937 1
canonpath
d12941 6
d12949 21
a12969 1
catdir
d12971 1
a12971 1
catfile
d12973 1
a12973 1
curdir
d12975 1
a12975 1
file_name_is_absolute
d12977 1
a12977 1
path
d12979 1
a12979 1
rootdir
d12981 1
a12981 1
updir
d12985 1
a12985 1
=item Thought To Be Cross-Platform Methods
d12987 3
a12989 1
test_via_harness
d12993 1
a12993 1
test_via_script
d13012 3
a13014 1
perl_archive
d13025 1
a13025 1
canonpath, cflags, manifypods, perl_archive
d13029 6
d13047 1
a13047 1
B<replace_manpage_separator>
d13053 2
d13086 2
d13090 1
a13090 1
libscan (o)
d13092 1
a13092 1
constants (o)
d13102 2
d13106 2
d13112 2
d13125 5
a13129 1
constants (o)
d13146 2
d13150 3
a13152 1
perl_archive_after
d13166 1
a13166 1
B<replace_manpage_separator>
d13172 2
d13196 1
a13196 1
=item SelfLoaded methods
d13198 1
a13198 1
c_o (o)
d13202 2
d13208 2
d13222 4
d13234 15
a13248 1
dist_dir
d13284 2
d13294 2
d13300 2
d13304 2
a13309 2
libscan (o)

a13319 2
manifypods (o)

a13321 2
maybe_command_in_dirs

d13358 2
d13362 8
a13385 2
tool_autosplit (o)

d13390 2
a13401 6
perl_archive

perl_archive_after

export_list

a13438 2
maybe_command_in_dirs (override)

d13443 4
d13451 6
d13459 2
a13464 4
pm_to_blib (override)

tool_autosplit (override)

a13466 2
xsubpp_version (override)

d13469 1
a13469 1
dist (override)
a13476 2
top_targets (override)

a13484 2
manifypods (override)

d13493 2
d13497 1
a13497 1
dist_core (override)
d13517 18
d13546 9
a13554 1
constants (o)
d13556 1
a13556 1
static_lib (o)
d13558 1
a13558 1
dynamic_bs (o)
d13560 1
a13560 1
dynamic_lib (o)
d13562 1
a13562 1
perl_script
d13564 1
a13564 1
pm_to_blib
d13566 1
a13566 1
tool_autosplit (override)
d13568 1
a13568 1
tools_other (o)
d13570 1
a13570 1
xs_o (o)
d13572 1
a13572 1
top_targets (o)
d13574 1
a13574 1
manifypods (o)
d13576 1
a13576 1
dist_ci (o)
d13578 1
a13578 1
dist_core (o)
d13582 6
d13596 28
d13636 1
a13636 1
=head2 ExtUtils::MakeMaker - create an extension Makefile
d13669 11
a13679 10
CONFIGURE, DEFINE, DIR, DISTNAME, DL_FUNCS, DL_VARS, EXCLUDE_EXT,
EXE_FILES, FIRST_MAKEFILE, FULLPERL, FULLPERLRUN, FULLPERLRUNINST,
FUNCLIST, H, IMPORTS, INC, INCLUDE_EXT, INSTALLARCHLIB, INSTALLBIN,
INSTALLDIRS, INSTALLMAN1DIR, INSTALLMAN3DIR, INSTALLPRIVLIB, INSTALLSCRIPT,
INSTALLSITEARCH, INSTALLSITEBIN, INSTALLSITELIB, INSTALLSITEMAN1DIR,
INSTALLSITEMAN3DIR, INSTALLVENDORARCH, INSTALLVENDORBIN, INSTALLVENDORLIB,
INSTALLVENDORMAN1DIR, INSTALLVENDORMAN3DIR, INST_ARCHLIB, INST_BIN,
INST_LIB, INST_MAN1DIR, INST_MAN3DIR, INST_SCRIPT, LDDLFLAGS, LDFROM, LIB,
LIBPERL_A, LIBS, LINKTYPE, MAKEAPERL, MAKEFILE, MAN1PODS, MAN3PODS,
MAP_TARGET, MYEXTLIB, NAME, NEEDS_LINKING, NOECHO, NORECURS, NO_VC, OBJECT,
d13681 2
a13682 2
PERL_MALLOC_OK, PERLRUN, PERLRUNINST, PERL_SRC, PERM_RW, PERM_RWX,
PL_FILES, PM, PMLIBDIRS, PM_FILTER, POLLUTE, PPM_INSTALL_EXEC,
d13684 2
a13685 2
PRINT_PREREQ, SITEPREFIX, SKIP, TYPEMAPS, VENDORPREFIX, VERBINST, VERSION,
VERSION_FROM, XS, XSOPT, XSPROTOARG, XS_VERSION
d13689 2
a13690 2
clean, depend, dist, dynamic_lib, linkext, macro, realclean, test,
tool_autosplit
d13706 2
d13710 111
d13823 7
a13829 1
=item ENVIRONMENT
d13831 1
a13831 1
PERL_MM_OPT, PERL_MM_USE_DEFAULT
d13833 1
a13833 1
=item SEE ALSO
d13835 1
a13835 1
=item AUTHORS
d13837 1
a13837 1
=back
d13839 1
a13839 1
=head2 ExtUtils::Manifest - utilities to write and check a MANIFEST file
d13843 1
a13843 3
=item SYNOPSIS

=item DESCRIPTION
d13851 4
d14123 2
d14159 6
d14173 1
a14173 1
canonpath()
d14177 2
a14252 8
canonpath

splitpath

splitdir

catpath

d14261 2
d14428 12
d14488 4
d14550 2
d14755 2
a14756 1
(default: disabled), pass_through (default: disabled), prefix,
d14759 4
a14780 2
=item Warning: Ignoring '!' modifier for short option

d14786 2
d14807 2
d14833 2
d14837 2
d14913 46
a14958 44
{ab} : Abkhazian, {ace} : Achinese, {ach} : Acoli, {ada} : Adangme, {aa} :
Afar, {afh} : Afrihili, {af} : Afrikaans, [{afa} : Afro-Asiatic (Other)],
{aka} : Akan, {akk} : Akkadian, {sq} : Albanian, {ale} : Aleut, [{alg} :
Algonquian languages], [{tut} : Altaic (Other)], {am} : Amharic, {i-ami} :
Ami, [{apa} : Apache languages], {ar} : Arabic, {arc} : Aramaic, {arp} :
Arapaho, {arn} : Araucanian, {arw} : Arawak, {hy} : Armenian, [{art} :
Artificial (Other)], {as} : Assamese, [{ath} : Athapascan languages],
[{aus} : Australian languages], [{map} : Austronesian (Other)], {ava} :
Avaric, {ae} : Avestan, {awa} : Awadhi, {ay} : Aymara, {az} : Azerbaijani,
{ban} : Balinese, [{bat} : Baltic (Other)], {bal} : Baluchi, {bam} :
Bambara, [{bai} : Bamileke languages], {bad} : Banda, [{bnt} : Bantu
(Other)], {bas} : Basa, {ba} : Bashkir, {eu} : Basque, {btk} : Batak
(Indonesia), {bej} : Beja, {be} : Belarusian, {bem} : Bemba, {bn} :
Bengali, [{ber} : Berber (Other)], {bho} : Bhojpuri, {bh} : Bihari, {bik} :
Bikol, {bin} : Bini, {bi} : Bislama, {bs} : Bosnian, {bra} : Braj, {br} :
Breton, {bug} : Buginese, {bg} : Bulgarian, {i-bnn} : Bunun, {bua} :
Buriat, {my} : Burmese, {cad} : Caddo, {car} : Carib, {ca} : Catalan,
[{cau} : Caucasian (Other)], {ceb} : Cebuano, [{cel} : Celtic (Other)],
[{cai} : Central American Indian (Other)], {chg} : Chagatai, [{cmc} :
Chamic languages], {ch} : Chamorro, {ce} : Chechen, {chr} : Cherokee, {chy}
: Cheyenne, {chb} : Chibcha, {ny} : Chichewa, {zh} : Chinese, {chn} :
Chinook Jargon, {chp} : Chipewyan, {cho} : Choctaw, {cu} : Church Slavic,
{chk} : Chuukese, {cv} : Chuvash, {cop} : Coptic, {kw} : Cornish, {co} :
Corsican, {cre} : Cree, {mus} : Creek, [{cpe} : English-based Creoles and
pidgins (Other)], [{cpf} : French-based Creoles and pidgins (Other)],
[{cpp} : Portuguese-based Creoles and pidgins (Other)], [{crp} : Creoles
and pidgins (Other)], {hr} : Croatian, [{cus} : Cushitic (Other)], {cs} :
Czech, {dak} : Dakota, {da} : Danish, {day} : Dayak, {i-default} : Default
(Fallthru) Language, {del} : Delaware, {din} : Dinka, {div} : Divehi, {doi}
: Dogri, {dgr} : Dogrib, [{dra} : Dravidian (Other)], {dua} : Duala, {nl} :
Dutch, {dum} : Middle Dutch (ca.1050-1350), {dyu} : Dyula, {dz} : Dzongkha,
{efi} : Efik, {egy} : Ancient Egyptian, {eka} : Ekajuk, {elx} : Elamite,
{en} : English, {enm} : Old English (1100-1500), {ang} : Old English
(ca.450-1100), {eo} : Esperanto, {et} : Estonian, {ewe} : Ewe, {ewo} :
Ewondo, {fan} : Fang, {fat} : Fanti, {fo} : Faroese, {fj} : Fijian, {fi} :
Finnish, [{fiu} : Finno-Ugrian (Other)], {fon} : Fon, {fr} : French, {frm}
: Middle French (ca.1400-1600), {fro} : Old French (842-ca.1400), {fy} :
Frisian, {fur} : Friulian, {ful} : Fulah, {gaa} : Ga, {gd} : Scots Gaelic,
{gl} : Gallegan, {lug} : Ganda, {gay} : Gayo, {gba} : Gbaya, {gez} : Geez,
{ka} : Georgian, {de} : German, {gmh} : Middle High German (ca.1050-1500),
{goh} : Old High German (ca.750-1050), [{gem} : Germanic (Other)], {gil} :
Gilbertese, {gon} : Gondi, {gor} : Gorontalo, {got} : Gothic, {grb} :
Grebo, {grc} : Ancient Greek, {el} : Modern Greek, {gn} : Guarani, {gu} :
Gujarati, {gwi} : Gwich'in, {hai} : Haida, {ha} : Hausa, {haw} : Hawaiian,
d14961 33
a14993 30
{hup} : Hupa, {iba} : Iban, {is} : Icelandic, {ibo} : Igbo, {ijo} : Ijo,
{ilo} : Iloko, [{inc} : Indic (Other)], [{ine} : Indo-European (Other)],
{id} : Indonesian, {ia} : Interlingua (International Auxiliary Language
Association), {ie} : Interlingue, {iu} : Inuktitut, {ik} : Inupiaq, [{ira}
: Iranian (Other)], {ga} : Irish, {mga} : Middle Irish (900-1200), {sga} :
Old Irish (to 900), [{iro} : Iroquoian languages], {it} : Italian, {ja} :
Japanese, {jw} : Javanese, {jrb} : Judeo-Arabic, {jpr} : Judeo-Persian,
{kab} : Kabyle, {kac} : Kachin, {kl} : Kalaallisut, {kam} : Kamba, {kn} :
Kannada, {kau} : Kanuri, {kaa} : Kara-Kalpak, {kar} : Karen, {ks} :
Kashmiri, {kaw} : Kawi, {kk} : Kazakh, {kha} : Khasi, {km} : Khmer, [{khi}
: Khoisan (Other)], {kho} : Khotanese, {ki} : Kikuyu, {kmb} : Kimbundu,
{rw} : Kinyarwanda, {ky} : Kirghiz, {i-klingon} : Klingon, {kv} : Komi,
{kon} : Kongo, {kok} : Konkani, {ko} : Korean, {kos} : Kosraean, {kpe} :
Kpelle, {kro} : Kru, {kj} : Kuanyama, {kum} : Kumyk, {ku} : Kurdish, {kru}
: Kurukh, {kut} : Kutenai, {lad} : Ladino, {lah} : Lahnda, {lam} : Lamba,
{lo} : Lao, {la} : Latin, {lv} : Latvian, {lb} : Letzeburgesch, {lez} :
Lezghian, {ln} : Lingala, {lt} : Lithuanian, {nds} : Low German, {loz} :
Lozi, {lub} : Luba-Katanga, {lua} : Luba-Lulua, {lui} : Luiseno, {lun} :
Lunda, {luo} : Luo (Kenya and Tanzania), {lus} : Lushai, {mk} : Macedonian,
{mad} : Madurese, {mag} : Magahi, {mai} : Maithili, {mak} : Makasar, {mg} :
Malagasy, {ms} : Malay, {ml} : Malayalam, {mt} : Maltese, {mnc} : Manchu,
{mdr} : Mandar, {man} : Mandingo, {mni} : Manipuri, [{mno} : Manobo
languages], {gv} : Manx, {mi} : Maori, {mr} : Marathi, {chm} : Mari, {mh} :
Marshall, {mwr} : Marwari, {mas} : Masai, [{myn} : Mayan languages], {men}
: Mende, {mic} : Micmac, {min} : Minangkabau, {i-mingo} : Mingo, [{mis} :
Miscellaneous languages], {moh} : Mohawk, {mo} : Moldavian, [{mkh} :
Mon-Khmer (Other)], {lol} : Mongo, {mn} : Mongolian, {mos} : Mossi, [{mul}
: Multiple languages], [{mun} : Munda languages], {nah} : Nahuatl, {na} :
Nauru, {nv} : Navajo, {nd} : North Ndebele, {nr} : South Ndebele, {ng} :
Ndonga, {ne} : Nepali, {new} : Newari, {nia} : Nias, [{nic} :
d14995 5
a14999 5
{non} : Old Norse, [{nai} : North American Indian], {se} : Northern Sami,
{no} : Norwegian, {nb} : Norwegian Bokmal, {nn} : Norwegian Nynorsk, [{nub}
: Nubian languages], {nym} : Nyamwezi, {nyn} : Nyankole, {nyo} : Nyoro,
{nzi} : Nzima, {oc} : Occitan (post 1500), {oji} : Ojibwa, {or} : Oriya,
{om} : Oromo, {osa} : Osage, {os} : Ossetian; Ossetic, [{oto} : Otomian
d15009 31
a15039 28
languages], {sam} : Samaritan Aramaic, [{smi} : Sami languages (Other)],
{sm} : Samoan, {sad} : Sandawe, {sg} : Sango, {sa} : Sanskrit, {sat} :
Santali, {sc} : Sardinian, {sas} : Sasak, {sco} : Scots, {sel} : Selkup,
[{sem} : Semitic (Other)], {sr} : Serbian, {srr} : Serer, {shn} : Shan,
{sn} : Shona, {sid} : Sidamo, {sgn-...} : Sign Languages, {bla} : Siksika,
{sd} : Sindhi, {si} : Sinhalese, [{sit} : Sino-Tibetan (Other)], [{sio} :
Siouan languages], {den} : Slave (Athapascan), [{sla} : Slavic (Other)],
{sk} : Slovak, {sl} : Slovenian, {sog} : Sogdian, {so} : Somali, {son} :
Songhai, {snk} : Soninke, {wen} : Sorbian languages, {nso} : Northern
Sotho, {st} : Southern Sotho, [{sai} : South American Indian (Other)], {es}
: Spanish, {suk} : Sukuma, {sux} : Sumerian, {su} : Sundanese, {sus} :
Susu, {sw} : Swahili, {ss} : Swati, {sv} : Swedish, {syr} : Syriac, {tl} :
Tagalog, {ty} : Tahitian, [{tai} : Tai (Other)], {tg} : Tajik, {tmh} :
Tamashek, {ta} : Tamil, {i-tao} : Tao, {tt} : Tatar, {i-tay} : Tayal, {te}
: Telugu, {ter} : Tereno, {tet} : Tetum, {th} : Thai, {bo} : Tibetan, {tig}
: Tigre, {ti} : Tigrinya, {tem} : Timne, {tiv} : Tiv, {tli} : Tlingit,
{tpi} : Tok Pisin, {tkl} : Tokelau, {tog} : Tonga (Nyasa), {to} : Tonga
(Tonga Islands), {tsi} : Tsimshian, {ts} : Tsonga, {i-tsu} : Tsou, {tn} :
Tswana, {tum} : Tumbuka, {tr} : Turkish, {ota} : Ottoman Turkish
(1500-1928), {tk} : Turkmen, {tvl} : Tuvalu, {tyv} : Tuvinian, {tw} : Twi,
{uga} : Ugaritic, {ug} : Uighur, {uk} : Ukrainian, {umb} : Umbundu, {und} :
Undetermined, {ur} : Urdu, {uz} : Uzbek, {vai} : Vai, {ven} : Venda, {vi} :
Vietnamese, {vo} : Volapuk, {vot} : Votic, [{wak} : Wakashan languages],
{wal} : Walamo, {war} : Waray, {was} : Washo, {cy} : Welsh, {wo} : Wolof,
{x-...} : Unregistered (Semi-Private Use), {xh} : Xhosa, {sah} : Yakut,
{yao} : Yao, {yap} : Yapese, {yi} : Yiddish, {yo} : Yoruba, [{ypk} : Yupik
languages], {znd} : Zande, [{zap} : Zapotec], {zen} : Zenaga, {za} :
Zhuang, {zu} : Zulu, {zun} : Zuni
d15079 2
d15092 1
a15092 1
rewind (), close (), tie %hash, IO::Dir, DIRNAME [, OPTIONS ]
d15116 1
a15116 1
open( FILENAME [,MODE [,PERMS]] )
d15232 1
a15232 1
count (), bits(), select ( READ, WRITE, ERROR [, TIMEOUT ] )
d15330 1
a15330 1
rewind (), close (), tie %hash, IO::Dir, DIRNAME [, OPTIONS ]
d15354 1
a15354 1
open( FILENAME [,MODE [,PERMS]] )
d15473 1
a15473 1
count (), bits(), select ( READ, WRITE, ERROR [, TIMEOUT ] )
d15748 3
a15750 2
blessed EXPR, dualvar NUM, STRING, isweak EXPR, openhandle FH, reftype
EXPR, tainted EXPR, weaken REF
d15894 1
a15894 1
=head2 Locale::Maketext -- framework for localization
d16031 1
a16031 1
encode_base64($str, [$eol]), decode_base64($str)
d16041 2
d16054 1
a16054 1
encode_qp($str), decode_qp($str);
d16058 2
d16071 1
a16071 1
encode_qp($str), decode_qp($str);
d16075 2
d16120 1
a16120 1
=item CAVEAT
d16124 2
d16140 1
a16140 1
Canonical notation, Input, Output
d16150 2
d16318 2
a16319 1
Out of Memory!, Fails to load Calc on Perl prior 5.6.0
d16343 3
a16345 1
=item EXPORT
d16361 21
d16418 24
d16446 3
d16689 2
a16690 1
=head2 NEXT - Provide a pseudo-class NEXT that allows method redispatch
d16704 4
d16735 1
a16735 1
ungetline ( TEXT ), read_until_dot (), tied_fh ()
d16799 12
a16810 12
site (ARGS), type (TYPE [, ARGS]), ascii ([ARGS]) binary([ARGS])
ebcdic([ARGS]) byte([ARGS]), rename ( OLDNAME, NEWNAME ), delete ( FILENAME
), cwd ( [ DIR ] ), cdup (), pwd (), restart ( WHERE ), rmdir ( DIR ),
mkdir ( DIR [, RECURSE ]), ls ( [ DIR ] ), dir ( [ DIR ] ), get (
REMOTE_FILE [, LOCAL_FILE [, WHERE]] ), put ( LOCAL_FILE [, REMOTE_FILE ]
), put_unique ( LOCAL_FILE [, REMOTE_FILE ] ), append ( LOCAL_FILE [,
REMOTE_FILE ] ), unique_name (), mdtm ( FILE ), size ( FILE ), supported (
CMD ), hash ( [FILEHANDLE_GLOB_REF],[ BYTES_PER_HASH_MARK] ), nlst ( [ DIR
] ), list ( [ DIR ] ), retr ( FILE ), stor ( FILE ), stou ( FILE ), appe (
FILE ), port ( [ PORT ] ), pasv (), pasv_xfer ( SRC_FILE, DEST_SERVER [,
DEST_FILE ] ), pasv_xfer_unique ( SRC_FILE, DEST_SERVER [, DEST_FILE ] ),
pasv_wait ( NON_PASV_SERVER ), abort (), quit ()
d16827 1
a16827 1
B<ALLO>, B<SMNT>, B<HELP>, B<MODE>, B<SYST>, B<STAT>, B<STRU>, B<REIN>
d16837 1
a16837 1
http://www.csh.rit.edu/~adam/Progs/autoftp-2.0.tar.gz
a16900 2
=item EXAMPLES

d16934 6
a16939 4
Net::Ping->new([$proto [, $def_timeout [, $bytes]]]);, $p->ping($host [,
$timeout]);, $p->source_verify( { 0 | 1 } );, $p->hires( { 0 | 1 } );,
$p->bind($local_addr);, $p->open($host);, $p->close();, pingecho($host [,
$timeout]);
a16942 2
=item WARNING

d16947 2
d17355 11
a17365 11
fstat, ftell, fwrite, getc, getchar, getcwd, getegid, getenv, geteuid,
getgid, getgrgid, getgrnam, getgroups, getlogin, getpgrp, getpid, getppid,
getpwnam, getpwuid, gets, getuid, gmtime, isalnum, isalpha, isatty,
iscntrl, isdigit, isgraph, islower, isprint, ispunct, isspace, isupper,
isxdigit, kill, labs, ldexp, ldiv, link, localeconv, localtime, log, log10,
longjmp, lseek, malloc, mblen, mbstowcs, mbtowc, memchr, memcmp, memcpy,
memmove, memset, mkdir, mkfifo, mktime, modf, nice, offsetof, open,
opendir, pathconf, pause, perror, pipe, pow, printf, putc, putchar, puts,
qsort, raise, rand, read, readdir, realloc, remove, rename, rewind,
rewinddir, rmdir, scanf, setgid, setjmp, setlocale, setpgid, setsid,
setuid, sigaction, siglongjmp, sigpending, sigprocmask, sigsetjmp,
d17381 1
a17381 1
new
d17477 4
d17485 2
d17507 1
a17507 1
=head2 PerlIO::scalar - support module for in-memory IO.
d17515 2
d17530 7
a17536 7
$obj->OPEN($path,$mode[,$fh]), $obj->BINMODE([,$fh]),
$obj->FDOPEN($fd[,$fh]), $obj->SYSOPEN($path,$imode,$perm,[,$fh]),
$obj->FILENO($fh), $obj->READ($buffer,$len,$fh), $obj->WRITE($buffer,$fh),
$obj->FILL($fh), $obj->CLOSE($fh), $obj->SEEK($posn,$whence,$fh),
$obj->TELL($fh), $obj->UNREAD($buffer,$fh), $obj->FLUSH($fh),
$obj->SETLINEBUF($fh), $obj->CLEARERR($fh), $obj->ERROR($fh),
$obj->EOF($fh)
d17558 2
d17605 2
a17606 1
Verbatim paragraph in NAME section
d17630 2
d18365 141
a18505 1
=back
d18507 1
a18507 1
=over 4
d18509 1
a18509 1
=item B<parse_from_file()>
d18513 2
d18517 3
a18519 1
=item ACCESSOR METHODS
d18521 1
a18521 1
=back
d18523 1
a18523 1
=over 4
d18525 1
a18525 1
=item B<errorsub()>
d18529 2
d18533 3
a18535 1
=item B<cutting()>
d18537 1
a18537 1
=back
d18539 1
a18539 1
=over 4
d18541 1
a18541 1
=item B<parseopts()>
d18545 2
d18549 1
a18549 1
=item B<output_file()>
d18551 1
a18551 1
=back
d18553 1
a18553 1
=over 4
d18555 1
a18555 1
=item B<output_handle()>
d18557 1
a18557 1
=back
d18559 1
a18559 1
=over 4
d18561 1
a18561 1
=item B<input_file()>
d18563 1
a18563 1
=back
d18567 1
a18567 1
=item B<input_handle()>
d18569 1
a18569 1
=back
d18571 1
a18571 1
=over 4
d18573 1
a18573 1
=item B<input_streams()>
d18577 2
d18581 3
a18583 1
=item B<top_stream()>
d18585 1
a18585 1
=back
d18587 1
a18587 1
=over 4
d18589 1
a18589 1
=item PRIVATE METHODS AND DATA
d18593 2
d18597 1
a18597 1
=item B<_push_input_stream()>
d18599 1
a18599 1
=back
d18601 1
a18601 1
=over 4
d18603 1
a18603 1
=item B<_pop_input_stream()>
d18605 2
a18606 1
=back
d18608 1
a18608 1
=over 4
d18610 1
a18610 1
=item TREE-BASED PARSING
d18753 1
a18753 1
alt, code, indent, loose, quotes, sentence, width
a18859 77
=head2 Pod::t::basic, basic.pod - Test of various basic POD features in
translators.

=over 4

=item HEADINGS

=item This C<is> a "level 1" heading

=over 4

=item ``Level'' "2 I<heading>

=back

=item This C<is> a "level 1" heading

=over 4

=item ``Level'' 2 I<heading>

=back

=item LINKS

=item OVER AND ITEMS

This  is a test, a, b, a, b, c, d, "foo", B<bar>, C<baz>, Some longer item
text

=item FORMATTING CODES

E<amp>, E<apos>, E<lt>, E<gt>, E<quot>, E<sol>

=item VERBATIM

=item CONCLUSION

=back

=head2 Pod::t::htmlescp, Escape Sequences Test

=over 4

=item DESCRIPTION

=back

=head2 Pod::t::htmlview, Test HTML Rendering

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS =E<gt> OTHER STUFF

=over 4

=item new()

foo, bar, baz, C<Black> Cat, Sat S<I<on> the>, MatE<lt>!E<gt>, 1 Cat, 2
Sat, 3 Mat

=item old()

=back

=item TESTING FOR AND BEGIN

=item TESTING URLs hyperlinking

=item SEE ALSO

=back

d18923 3
a18925 2
blessed EXPR, dualvar NUM, STRING, isweak EXPR, openhandle FH, reftype
EXPR, tainted EXPR, weaken REF
d19034 2
d19128 2
d19272 2
a19273 2
=head2 Term::ReadLine - Perl interface to various C<readline> packages. If
no real package is found, substitutes stubs instead of basic functions.
d19283 2
a19284 2
C<ReadLine>, C<new>, C<readline>, C<addhistory>, C<IN>, $C<OUT>,
C<MinLine>, C<findConsole>, Attribs, C<Features>
d19306 2
d19312 2
a19313 1
B<plan>
d19321 3
a19323 1
B<ok>
d19375 2
d19439 3
a19441 1
B<details>  I<UNIMPLEMENTED>, B<todo>
d19525 1
a19525 1
C<HARNESS_PERL_SWITCHES>, C<HARNESS_VERBOSE>
d19533 2
d19585 20
d19607 1
a19607 1
=item Construction
d19609 1
a19609 1
B<new>
d19613 4
d19619 5
a19623 1
B<_init>
d19627 5
a19631 1
=item Analysis
d19633 1
a19633 1
B<analyze>
d19637 1
a19637 1
B<analyze_fh>
d19639 1
a19639 1
B<analyze_file>
d19641 1
a19641 1
B<_switches>
d19643 1
a19643 1
B<_INC2PERL5LIB>
d19645 1
a19645 1
B<_filtered_INC>
d19647 1
a19647 1
B<_restore_PERL5LIB>
d19653 3
a19655 1
B<_is_comment>
d19659 19
a19677 1
B<_is_header>
d19679 1
a19679 1
B<_is_test>
d19681 1
a19681 1
B<_is_bail_out>
d19683 1
a19683 1
B<_reset_file_state>
d19689 5
a19693 1
B<_detailize>
d19923 4
d20171 2
d20185 2
d20321 3
a20323 2
alarm ( $floating_seconds [, $interval_floating_seconds ] ), setitimer,
getitimer ( $which )
d20329 10
d20343 1
a20343 3
=item REVISION

=item COPYRIGHT
d20359 4
d20415 5
a20419 2
$obj->isa( TYPE ), CLASS->isa( TYPE ), isa( VAL, TYPE ), $obj->can( METHOD
), CLASS->can( METHOD ), can( VAL, METHOD ), VERSION ( [ REQUIRE ] )
d20435 4
a20438 3
alternate, backwards, entry, ignoreName, ignoreChar, level, normalization,
overrideCJK, overrideHangul, preprocess, rearrange, table, undefName,
undefChar, katakana_before_hiragana, upper_before_lower
d20448 11
a20458 3
$Collator-E<gt>viewSortKey($string)>, C<$position =
$Collator-E<gt>index($string, $substring)>, C<($position, $length) =
$Collator-E<gt>index($string, $substring)>
d20462 2
a20463 1
UCA_Version, Base_Unicode_Version
a20466 2
=item TODO

d20469 1
a20469 1
=item BUGS
d20477 3
a20479 4
http://www.unicode.org/unicode/reports/tr10/,
http://www.unicode.org/unicode/reports/tr10/allkeys.txt,
http://www.unicode.org/unicode/reports/tr15/,
http://www.unicode.org/unicode/reports/tr18, L<Unicode::Normalize>
d20497 1
d20510 1
d20520 1
a20520 1
C<$is_non_startar_decomposition = isNonStDecomp($codepoint)>,
d20532 2
a20533 1
http://www.unicode.org/Public/UNIDATA/DerivedNormalizationProps.txt
d20681 4
a20684 3
Win32::GetChipName(), Win32::GetCwd(), Win32::GetFullPathName(FILENAME),
Win32::GetLastError(), Win32::GetLongPathName(PATHNAME),
Win32::GetNextAvailDrive(), Win32::GetOSVersion(), Win32::GetOSName(),
d20708 18
d20739 1
a20739 1
=item s2p
d20741 1
a20741 1
=item find2perl
d20745 5
a20749 1
=item c2ph
d20751 1
a20751 1
=item h2xs
d20753 1
a20753 1
=item xsubpp
d20757 5
a20761 1
=item wrapsuid
@


1.5
log
@merge in perl 5.6.1 with our local changes
@
text
@d20 18
d58 50
a107 2
=head2 perlfaq - frequently asked questions about Perl ($Date: 1999/05/23
20:38:02 $)
d127 1
a127 1
=item L<perlfaq6>: Regexps
d307 1
a307 1
y/SEARCHLIST/REPLACEMENTLIST/cds
d351 2
d403 3
a405 3
binmode FILEHANDLE, DISCIPLINE, binmode FILEHANDLE, bless REF,CLASSNAME,
bless REF, caller EXPR, caller, chdir EXPR, chmod LIST, chomp VARIABLE,
chomp LIST, chomp, chop VARIABLE, chop LIST, chop, chown LIST, chr NUMBER,
d428 22
a449 20
lock, log EXPR, log, lstat FILEHANDLE, lstat EXPR, lstat, m//, map BLOCK
LIST, map EXPR,LIST, mkdir FILENAME,MASK, mkdir FILENAME, msgctl
ID,CMD,ARG, msgget KEY,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, msgsnd
ID,MSG,FLAGS, my EXPR, my EXPR : ATTRIBUTES, next LABEL, next, no Module
LIST, oct EXPR, oct, open FILEHANDLE,MODE,LIST, open FILEHANDLE,EXPR, open
FILEHANDLE, opendir DIRHANDLE,EXPR, ord EXPR, ord, our EXPR, pack
TEMPLATE,LIST, package NAMESPACE, package, pipe READHANDLE,WRITEHANDLE, pop
ARRAY, pop, pos SCALAR, pos, print FILEHANDLE LIST, print LIST, print,
printf FILEHANDLE FORMAT, LIST, printf FORMAT, LIST, prototype FUNCTION,
push ARRAY,LIST, q/STRING/, qq/STRING/, qr/STRING/, qx/STRING/, qw/STRING/,
quotemeta EXPR, quotemeta, rand EXPR, rand, read
FILEHANDLE,SCALAR,LENGTH,OFFSET, read FILEHANDLE,SCALAR,LENGTH, readdir
DIRHANDLE, readline EXPR, readlink EXPR, readlink, readpipe EXPR, recv
SOCKET,SCALAR,LENGTH,FLAGS, redo LABEL, redo, ref EXPR, ref, rename
OLDNAME,NEWNAME, require VERSION, require EXPR, require, reset EXPR, reset,
return EXPR, return, reverse LIST, rewinddir DIRHANDLE, rindex
STR,SUBSTR,POSITION, rindex STR,SUBSTR, rmdir FILENAME, rmdir, s///, scalar
EXPR, seek FILEHANDLE,POSITION,WHENCE, seekdir DIRHANDLE,POS, select
FILEHANDLE, select, select RBITS,WBITS,EBITS,TIMEOUT, semctl
ID,SEMNUM,CMD,ARG, semget KEY,NSEMS,FLAGS, semop KEY,OPSTRING, send
d458 6
a463 4
/PATTERN/,EXPR, split /PATTERN/, split, sprintf FORMAT, LIST, sqrt EXPR,
sqrt, srand EXPR, srand, stat FILEHANDLE, stat EXPR, stat, study SCALAR,
study, sub BLOCK, sub NAME, sub NAME BLOCK, substr
EXPR,OFFSET,LENGTH,REPLACEMENT, substr EXPR,OFFSET,LENGTH, substr
d547 1
a547 1
=item Declaration of a ARRAY OF ARRAYS
d549 1
a549 1
=item Generation of a ARRAY OF ARRAYS
d551 1
a551 1
=item Access and Printing of a ARRAY OF ARRAYS
d571 1
a571 1
=item Declaration of a ARRAY OF HASHES
d573 1
a573 1
=item Generation of a ARRAY OF HASHES
d575 1
a575 1
=item Access and Printing of a ARRAY OF HASHES
d655 1
a655 1
=head2 perlpod - plain old documentation
d663 2
d669 13
a681 1
=item Ordinary Block of Text
d687 7
a693 1
=item Common Pod Pitfalls
d697 33
d777 1
a777 1
Parsing, Parsing, Parsing, Parsing
d852 2
a853 2
B<-T>, B<-u>, B<-U>, B<-v>, B<-V>, B<-V:>I<name>, B<-w>, B<-W>, B<-X>,
B<-x> I<directory>
d859 5
a863 3
HOME, LOGDIR, PATH, PERL5LIB, PERL5OPT, PERLLIB, PERL5DB, PERL5SHELL
(specific to the Win32 port), PERL_DEBUG_MSTATS, PERL_DESTRUCT_LEVEL,
PERL_ROOT (specific to the VMS port), SYS$LOGIN (specific to the VMS port)
d917 1
a917 1
=item Looking at data and -w and w
d955 10
a964 9
h [command], p expr, x expr, V [pkg [vars]], X [vars], T, s [expr], n
[expr], r, <CR>, c [line|sub], l, l min+incr, l min-max, l line, l subname,
-, w [line], f filename, /pattern/, ?pattern?, L, S [[!]regex], t, t expr,
b [line] [condition], b subname [condition], b postpone subname
[condition], b load filename, b compile subname, d [line], D, a [line]
command, a [line], A, W expr, W, O booloption .., O anyoption? .., O
option=value .., < ?, < [ command ], << command, > ?, > command, >>
command, { ?, { [ command ], {{ command, ! number, ! -number, ! pattern, !!
cmd, H -number, q or ^D, R, |dbcmd, ||dbcmd, command, m expr, man [manpage]
d970 5
a974 4
C<PrintRet>, C<ornaments>, C<frame>, C<maxTraceLen>, C<arrayDepth>,
C<hashDepth>, C<compactDump>, C<veryCompact>, C<globPrint>, C<DumpDBFiles>,
C<DumpPackages>, C<DumpReused>, C<quote>, C<HighBit>, C<undefPrint>,
C<UsageOnly>, C<TTY>, C<noTTY>, C<ReadLine>, C<NonStop>
d1013 26
a1038 25
$ARG, $_, $<I<digits>>, $MATCH, $&, $PREMATCH, $`, $POSTMATCH, $',
$LAST_PAREN_MATCH, $+, @@LAST_MATCH_END, @@+, $MULTILINE_MATCHING, $*,
input_line_number HANDLE EXPR, $INPUT_LINE_NUMBER, $NR, $,
input_record_separator HANDLE EXPR, $INPUT_RECORD_SEPARATOR, $RS, $/,
autoflush HANDLE EXPR, $OUTPUT_AUTOFLUSH, $|, output_field_separator HANDLE
EXPR, $OUTPUT_FIELD_SEPARATOR, $OFS, $,, output_record_separator HANDLE
EXPR, $OUTPUT_RECORD_SEPARATOR, $ORS, $\, $LIST_SEPARATOR, $",
$SUBSCRIPT_SEPARATOR, $SUBSEP, $;, $OFMT, $#, format_page_number HANDLE
EXPR, $FORMAT_PAGE_NUMBER, $%, format_lines_per_page HANDLE EXPR,
$FORMAT_LINES_PER_PAGE, $=, format_lines_left HANDLE EXPR,
$FORMAT_LINES_LEFT, $-, @@LAST_MATCH_START, @@-, C<$`> is the same as
C<substr($var, 0, $-[0])>, C<$&> is the same as C<substr($var, $-[0], $+[0]
- $-[0])>, C<$'> is the same as C<substr($var, $+[0])>, C<$1> is the same
as C<substr($var, $-[1], $+[1] - $-[1])>, C<$2> is the same as
C<substr($var, $-[2], $+[2] - $-[2])>, C<$3> is the same as C<substr $var,
$-[3], $+[3] - $-[3])>, format_name HANDLE EXPR, $FORMAT_NAME, $~,
format_top_name HANDLE EXPR, $FORMAT_TOP_NAME, $^,
format_line_break_characters HANDLE EXPR, $FORMAT_LINE_BREAK_CHARACTERS,
$:, format_formfeed HANDLE EXPR, $FORMAT_FORMFEED, $^L, $ACCUMULATOR, $^A,
$CHILD_ERROR, $?, $OS_ERROR, $ERRNO, $!, $EXTENDED_OS_ERROR, $^E,
$EVAL_ERROR, $@@, $PROCESS_ID, $PID, $$, $REAL_USER_ID, $UID, $<,
$EFFECTIVE_USER_ID, $EUID, $>, $REAL_GROUP_ID, $GID, $(,
$EFFECTIVE_GROUP_ID, $EGID, $), $PROGRAM_NAME, $0, $[, $], $COMPILING, $^C,
$DEBUGGING, $^D, $SYSTEM_FD_MAX, $^F, $^H, %^H, $INPLACE_EDIT, $^I, $^M,
$OSNAME, $^O, $PERLDB, $^P, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
d1040 4
a1043 3
$BASETIME, $^T, $PERL_VERSION, $^V, $WARNING, $^W, ${^WARNING_BITS},
${^WIDE_SYSTEM_CALLS}, $EXECUTABLE_NAME, $^X, $ARGV, @@ARGV, @@INC, @@_, %INC,
%ENV, $ENV{expr}, %SIG, $SIG{expr}
d1135 2
d1147 72
d1297 1
a1297 1
cntrl, graph, print, punct, xdigit
d1549 1
a1549 1
=head2 perltootc - Tom's OO Tutorial for Class Data in Perl
d1619 1
a1619 1
=item WARNING
d1725 6
d1735 4
a1738 1
=item WARNING
d1804 1
a1804 1
=head2 perlfork - Perl's fork() emulation (EXPERIMENTAL, subject to change)
d1856 2
a1857 2
Arithmetic operators except, C<no integer>, Arithmetic operators except,
C<use integer>, Bitwise operators, C<no integer>, Bitwise operators, C<use
d1873 120
d2124 2
d2182 14
a2195 14
LIST, fcntl FILEHANDLE,FUNCTION,SCALAR, flock FILEHANDLE,OPERATION, fork,
getlogin, getpgrp PID, getppid, getpriority WHICH,WHO, getpwnam NAME,
getgrnam NAME, getnetbyname NAME, getpwuid UID, getgrgid GID, getnetbyaddr
ADDR,ADDRTYPE, getprotobynumber NUMBER, getservbyport PORT,PROTO, getpwent,
getgrent, gethostent, getnetent, getprotoent, getservent, setpwent,
setgrent, sethostent STAYOPEN, setnetent STAYOPEN, setprotoent STAYOPEN,
setservent STAYOPEN, endpwent, endgrent, endhostent, endnetent,
endprotoent, endservent, getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob,
ioctl FILEHANDLE,FUNCTION,SCALAR, kill SIGNAL, LIST, link OLDFILE,NEWFILE,
lstat FILEHANDLE, lstat EXPR, lstat, msgctl ID,CMD,ARG, msgget KEY,FLAGS,
msgsnd ID,MSG,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, open FILEHANDLE,EXPR,
open FILEHANDLE, pipe READHANDLE,WRITEHANDLE, readlink EXPR, readlink,
select RBITS,WBITS,EBITS,TIMEOUT, semctl ID,SEMNUM,CMD,ARG, semget
KEY,NSEMS,FLAGS, semop KEY,OPSTRING, setgrent, setpgrp PID,PGRP,
d2198 3
a2200 3
shmread ID,VAR,POS,SIZE, shmwrite ID,STRING,POS,SIZE, socketpair
SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, stat FILEHANDLE, stat EXPR, stat,
symlink OLDFILE,NEWFILE, syscall LIST, sysopen
a2221 2
=item VERSION

d2255 2
d2304 2
d2320 1
a2320 2
=head2 perlunicode - Unicode support in Perl (EXPERIMENTAL, subject to
change)
d2328 15
a2342 1
=item Important Caveat
d2344 1
a2344 2
Input and Output Disciplines, Regular Expressions, C<use utf8> still needed
to enable a few features
d2346 1
a2346 1
=item Byte and Character semantics
d2348 1
a2348 1
=item Effects of character semantics
d2350 7
a2356 1
=item Character encodings for input and output
d2360 1
a2360 1
=item CAVEATS
d2364 4
d2370 1
a2370 1
=head2 perlebcdic - Considerations for running Perl on EBCDIC platforms
a2375 2
=item COMMON CHARACTER CODE SETS

d2378 1
a2378 1
=item ASCII
d2380 2
a2381 1
=item ISO 8859
d2383 1
a2383 1
=item Latin 1 (ISO 8859-1)
d2385 1
a2385 1
=item EBCDIC
d2387 1
a2387 1
=item 13 variant characters
d2389 1
a2389 1
=item 0037
d2391 57
a2447 1
=item 1047
d2451 8
d2463 1
a2463 1
recipe 0, recipe 1, recipe 2, recipe 3, recipe 4
d2503 1
a2503 1
=item TRANFORMATION FORMATS
d2513 1
a2513 1
=item Caesarian cyphers
d2531 1
a2531 1
=item OS/390 
d2533 1
a2533 1
chcp, dataset access, OS/390 iconv, locales
d2547 2
d2571 2
d2597 2
d2605 25
d2642 4
a2645 4
attributes, attrs, autouse, base, blib, bytes, charnames, constant,
diagnostics, fields, filetest, integer, less, lib, locale, open, ops,
overload, re, sigtrap, strict, subs, utf8, vars, warnings,
warnings::register
d2649 46
a2694 30
AnyDBM_File, AutoLoader, AutoSplit, B, B::Asmdata, B::Assembler, B::Bblock,
B::Bytecode, B::C, B::CC, B::Concise, B::Debug, B::Deparse,
B::Disassembler, B::Lint, B::Showlex, B::Stackobj, B::Stash, B::Terse,
B::Xref, Benchmark, ByteLoader, CGI, CGI::Apache, CGI::Carp, CGI::Cookie,
CGI::Fast, CGI::Pretty, CGI::Push, CGI::Switch, CGI::Util, CPAN,
CPAN::FirstTime, CPAN::Nox, Carp, Carp::Heavy, Class::Struct, Cwd, DB,
DB_File, Devel::SelfStubber, DirHandle, Dumpvalue, English, Env, Exporter,
Exporter::Heavy, ExtUtils::Command, ExtUtils::Embed, ExtUtils::Install,
ExtUtils::Installed, ExtUtils::Liblist, ExtUtils::MM_Cygwin,
ExtUtils::MM_OS2, ExtUtils::MM_Unix, ExtUtils::MM_VMS, ExtUtils::MM_Win32,
ExtUtils::MakeMaker, ExtUtils::Manifest, ExtUtils::Mkbootstrap,
ExtUtils::Mksymlists, ExtUtils::Packlist, ExtUtils::testlib, Fatal, Fcntl,
File::Basename, File::CheckTree, File::Compare, File::Copy, File::DosGlob,
File::Find, File::Path, File::Spec, File::Spec::Epoc,
File::Spec::Functions, File::Spec::Mac, File::Spec::OS2, File::Spec::Unix,
File::Spec::VMS, File::Spec::Win32, File::Temp, File::stat, FileCache,
FileHandle, FindBin, GDBM_File, Getopt::Long, Getopt::Std, I18N::Collate,
IO, IPC::Open2, IPC::Open3, Math::BigFloat, Math::BigInt, Math::Complex,
Math::Trig, Net::Ping, Net::hostent, Net::netent, Net::protoent,
Net::servent, O, Opcode, POSIX, Pod::Checker, Pod::Find, Pod::Html,
Pod::InputObjects, Pod::LaTeX, Pod::Man, Pod::ParseUtils, Pod::Parser,
Pod::Plainer, Pod::Select, Pod::Text, Pod::Text::Color,
Pod::Text::Overstrike, Pod::Text::Termcap, Pod::Usage, SDBM_File, Safe,
Search::Dict, SelectSaver, SelfLoader, Shell, Socket, Symbol,
Term::ANSIColor, Term::Cap, Term::Complete, Term::ReadLine, Test,
Test::Harness, Text::Abbrev, Text::ParseWords, Text::Soundex, Text::Tabs,
Text::Wrap, Thread, Thread::Queue, Thread::Semaphore, Thread::Signal,
Thread::Specific, Tie::Array, Tie::Handle, Tie::Hash, Tie::RefHash,
Tie::Scalar, Tie::SubstrHash, Time::Local, Time::gmtime, Time::localtime,
Time::tm, UNIVERSAL, User::grent, User::pwent, Win32
d2706 2
d2710 3
d2715 2
d2719 6
d2727 9
d2738 2
d2742 4
a2753 2
Adding a Copyright Notice

d2764 65
a2828 1
=head2 perlmodinstall - Installing CPAN Modules
d2832 13
a2844 1
=item DESCRIPTION
d2848 3
a2850 1
=item PREAMBLE
d2852 1
a2852 2
B<DECOMPRESS> the file, B<UNPACK> the file into a directory, B<BUILD> the
module (sometimes unnecessary), B<INSTALL> the module
d2856 1
a2856 1
=item PORTABILITY
d2858 2
a2859 1
=item HEY
a2862 2
=item COPYRIGHT

d2900 2
a2901 2
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.23 $, $Date:
1999/05/23 16:08:30 $)
d2939 1
a2939 1
5/5.005/Perl instead of some other language?
d2947 2
a2948 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.32 $,
$Date: 1999/10/14 18:46:09 $)
d2995 1
a2995 1
=item What is perl.com? Perl Mongers? pm.org? perl.org?
d3003 2
a3004 2
=head2 perlfaq3 - Programming Tools ($Revision: 1.38 $, $Date: 1999/05/23
16:08:30 $)
d3030 2
a3031 2
CodeMagicCD, Komodo, The Object System, PerlBuilder, Perl code magic,
visiPerl+, GNU Emacs, MicroEMACS, XEmacs, Elvis, Vile, Vim, Codewright,
a3043 2
=item What is undump?

d3048 3
d3078 1
a3078 2
=item When I tried to run my script, I got this message. What does it
mean?
d3088 2
a3089 2
=head2 perlfaq4 - Data Manipulation ($Revision: 1.49 $, $Date: 1999/05/23
20:37:49 $)
d3107 6
a3112 1
=item How do I convert bits into ints?
d3124 2
d3212 2
a3213 1
=item How can I tell whether a list or array contains a certain element?
d3305 2
a3306 2
=head2 perlfaq5 - Files and Formats ($Revision: 1.38 $, $Date: 1999/05/23
16:08:30 $)
d3355 3
d3380 1
a3380 1
=item Why can't I use "C:\temp\foo" in DOS paths?  What doesn't
d3398 2
a3399 1
=head2 perlfaq6 - Regexes ($Revision: 1.27 $, $Date: 1999/05/23 16:08:30 $)
d3465 2
a3466 2
=head2 perlfaq7 - Perl Language Issues ($Revision: 1.28 $, $Date:
1999/05/23 20:36:18 $)
d3544 2
a3545 2
=head2 perlfaq8 - System Interaction ($Revision: 1.39 $, $Date: 1999/05/23
18:37:57 $)
d3672 1
a3672 1
=head2 perlfaq9 - Networking ($Revision: 1.26 $, $Date: 1999/05/23 16:08:30
d3681 2
d3774 4
d3779 2
a3780 4
B::Debug, B::Deparse, B::Disassembler, B::Lint, B::Showlex, B::Stackobj,
B::Stash, B::Terse, B::Xref

=back
d3817 2
d3967 1
a3967 1
=item EXAMPLE 9 (Coming Soon)
d4031 2
d4045 1
a4045 1
=item The POST_CALL: Keyword
d4057 2
d4079 4
d4157 2
d4226 2
d4280 2
d4393 4
d4473 6
d4481 1
a4481 48
bytes_from_utf8, bytes_to_utf8, call_argv, call_method, call_pv, call_sv,
CLASS, Copy, croak, CvSTASH, dMARK, dORIGMARK, dSP, dXSARGS, dXSI32, ENTER,
eval_pv, eval_sv, EXTEND, fbm_compile, fbm_instr, FREETMPS, get_av, get_cv,
get_hv, get_sv, GIMME, GIMME_V, GvSV, gv_fetchmeth, gv_fetchmethod,
gv_fetchmethod_autoload, gv_stashpv, gv_stashsv, G_ARRAY, G_DISCARD,
G_EVAL, G_NOARGS, G_SCALAR, G_VOID, HEf_SVKEY, HeHASH, HeKEY, HeKLEN, HePV,
HeSVKEY, HeSVKEY_force, HeSVKEY_set, HeVAL, HvNAME, hv_clear, hv_delete,
hv_delete_ent, hv_exists, hv_exists_ent, hv_fetch, hv_fetch_ent,
hv_iterinit, hv_iterkey, hv_iterkeysv, hv_iternext, hv_iternextsv,
hv_iterval, hv_magic, hv_store, hv_store_ent, hv_undef, isALNUM, isALPHA,
isDIGIT, isLOWER, isSPACE, isUPPER, is_utf8_char, is_utf8_string, items,
ix, LEAVE, looks_like_number, MARK, mg_clear, mg_copy, mg_find, mg_free,
mg_get, mg_length, mg_magical, mg_set, Move, New, newAV, Newc, newCONSTSUB,
newHV, newRV_inc, newRV_noinc, NEWSV, newSViv, newSVnv, newSVpv, newSVpvf,
newSVpvn, newSVrv, newSVsv, newSVuv, newXS, newXSproto, Newz, Nullav,
Nullch, Nullcv, Nullhv, Nullsv, ORIGMARK, perl_alloc, perl_construct,
perl_destruct, perl_free, perl_parse, perl_run, PL_modglobal, PL_na,
PL_sv_no, PL_sv_undef, PL_sv_yes, POPi, POPl, POPn, POPp, POPs, PUSHi,
PUSHMARK, PUSHn, PUSHp, PUSHs, PUSHu, PUTBACK, Renew, Renewc, require_pv,
RETVAL, Safefree, savepv, savepvn, SAVETMPS, SP, SPAGAIN, ST, strEQ, strGE,
strGT, strLE, strLT, strNE, strnEQ, strnNE, StructCopy, SvCUR, SvCUR_set,
SvEND, SvGETMAGIC, SvGROW, SvIOK, SvIOKp, SvIOK_notUV, SvIOK_off, SvIOK_on,
SvIOK_only, SvIOK_only_UV, SvIOK_UV, SvIV, SvIVX, SvLEN, SvNIOK, SvNIOKp,
SvNIOK_off, SvNOK, SvNOKp, SvNOK_off, SvNOK_on, SvNOK_only, SvNV, SvNVX,
SvOK, SvOOK, SvPOK, SvPOKp, SvPOK_off, SvPOK_on, SvPOK_only,
SvPOK_only_UTF8, SvPV, SvPVX, SvPV_force, SvPV_nolen, SvREFCNT,
SvREFCNT_dec, SvREFCNT_inc, SvROK, SvROK_off, SvROK_on, SvRV, SvSETMAGIC,
SvSetSV, SvSetSV_nosteal, SvSTASH, SvTAINT, SvTAINTED, SvTAINTED_off,
SvTAINTED_on, SvTRUE, svtype, SvTYPE, SVt_IV, SVt_NV, SVt_PV, SVt_PVAV,
SVt_PVCV, SVt_PVHV, SVt_PVMG, SvUPGRADE, SvUTF8, SvUTF8_off, SvUTF8_on,
SvUV, SvUVX, sv_2mortal, sv_bless, sv_catpv, sv_catpvf, sv_catpvf_mg,
sv_catpvn, sv_catpvn_mg, sv_catpv_mg, sv_catsv, sv_catsv_mg, sv_chop,
sv_clear, sv_cmp, sv_cmp_locale, sv_dec, sv_derived_from, sv_eq, sv_free,
sv_gets, sv_grow, sv_inc, sv_insert, sv_isa, sv_isobject, sv_len,
sv_len_utf8, sv_magic, sv_mortalcopy, sv_newmortal, sv_pvn_force,
sv_pvutf8n_force, sv_reftype, sv_replace, sv_rvweaken, sv_setiv,
sv_setiv_mg, sv_setnv, sv_setnv_mg, sv_setpv, sv_setpvf, sv_setpvf_mg,
sv_setpviv, sv_setpviv_mg, sv_setpvn, sv_setpvn_mg, sv_setpv_mg,
sv_setref_iv, sv_setref_nv, sv_setref_pv, sv_setref_pvn, sv_setsv,
sv_setsv_mg, sv_setuv, sv_setuv_mg, sv_true, sv_unmagic, sv_unref,
sv_upgrade, sv_usepvn, sv_usepvn_mg, sv_utf8_downgrade, sv_utf8_encode,
sv_utf8_upgrade, sv_vcatpvfn, sv_vsetpvfn, THIS, toLOWER, toUPPER,
utf8_distance, utf8_hop, utf8_length, utf8_to_bytes, utf8_to_uv,
utf8_to_uv_simple, uv_to_utf8, warn, XPUSHi, XPUSHn, XPUSHp, XPUSHs,
XPUSHu, XS, XSRETURN, XSRETURN_EMPTY, XSRETURN_IV, XSRETURN_NO,
XSRETURN_NV, XSRETURN_PV, XSRETURN_UNDEF, XSRETURN_YES, XST_mIV, XST_mNO,
XST_mNV, XST_mPV, XST_mUNDEF, XST_mYES, XS_VERSION, XS_VERSION_BOOTCHECK,
Zero
d4483 16
a4498 1
=item AUTHORS
d4500 1
a4500 1
=item SEE ALSO
d4502 2
a4503 1
=back
d4505 1
a4505 2
=head2 perlintern - autogenerated documentation of purely B<internal> 
		 Perl functions
d4507 1
a4507 1
=over 4
d4509 1
a4509 1
=item DESCRIPTION
d4511 1
a4511 2
is_gv_magical, LVRET, PL_DBsingle, PL_DBsub, PL_DBtrace, PL_dowarn,
PL_last_in_gv, PL_ofs_sv, PL_rs
d4513 1
a4513 1
=item AUTHORS
d4515 2
a4516 1
=item SEE ALSO
d4518 1
a4518 1
=back
d4520 82
a4601 1
=head2 perlapio - perl's IO abstraction interface.
d4603 1
a4603 1
=over 4
d4605 5
a4609 1
=item SYNOPSIS
d4611 1
a4611 1
=item DESCRIPTION
d4613 2
a4614 10
B<PerlIO *>, B<PerlIO_stdin()>, B<PerlIO_stdout()>, B<PerlIO_stderr()>,
B<PerlIO_open(path, mode)>, B<PerlIO_fdopen(fd,mode)>,
B<PerlIO_printf(f,fmt,...)>, B<PerlIO_vprintf(f,fmt,a)>,
B<PerlIO_stdoutf(fmt,...)>, B<PerlIO_read(f,buf,count)>,
B<PerlIO_write(f,buf,count)>, B<PerlIO_close(f)>, B<PerlIO_puts(f,s)>,
B<PerlIO_putc(f,c)>, B<PerlIO_ungetc(f,c)>, B<PerlIO_getc(f)>,
B<PerlIO_eof(f)>, B<PerlIO_error(f)>, B<PerlIO_fileno(f)>,
B<PerlIO_clearerr(f)>, B<PerlIO_flush(f)>, B<PerlIO_tell(f)>,
B<PerlIO_seek(f,o,w)>, B<PerlIO_getpos(f,p)>, B<PerlIO_setpos(f,p)>,
B<PerlIO_rewind(f)>, B<PerlIO_tmpfile()>
d4616 1
a4616 1
=over 4
d4618 1
a4618 1
=item Co-existence with stdio
d4620 1
a4620 6
B<PerlIO_importFILE(f,flags)>, B<PerlIO_exportFILE(f,flags)>,
B<PerlIO_findFILE(f)>, B<PerlIO_releaseFILE(p,f)>, B<PerlIO_setlinebuf(f)>,
B<PerlIO_has_cntptr(f)>, B<PerlIO_get_ptr(f)>, B<PerlIO_get_cnt(f)>,
B<PerlIO_canset_cnt(f)>, B<PerlIO_fast_gets(f)>,
B<PerlIO_set_ptrcnt(f,p,c)>, B<PerlIO_set_cnt(f,c)>, B<PerlIO_has_base(f)>,
B<PerlIO_get_base(f)>, B<PerlIO_get_bufsiz(f)>
d4622 1
a4622 1
=back
d4626 2
a4627 1
=head2 perltodo - Perl TO-DO List
d4633 4
a4636 1
=item Infrastructure
d4638 7
a4644 1
=over 4
d4646 1
a4646 1
=item Mailing list archives
d4648 1
a4648 1
=item Bug tracking system
d4650 1
a4650 1
=item Regression Tests
d4652 1
a4652 2
Coverage, Regression, __DIE__, suidperl, The 25% slowdown from perl4 to
perl5
d4654 1
a4654 1
=back
d4656 1
a4656 1
=item Configure
d4658 1
a4658 1
=over 4
d4660 1
a4660 1
=item Install HTML
d4664 1
a4664 1
=item Perl Language
d4668 1
a4668 1
=item 64-bit Perl
d4670 1
a4670 1
=item Prototypes
d4672 1
a4672 1
Named prototypes, Indirect objects, Method calls, Context, Scoped subs
d4674 1
a4674 1
=back
d4676 1
a4676 1
=item Perl Internals
d4678 1
a4678 1
=over 4
d4680 1
a4680 1
=item magic_setisa
d4682 1
a4682 1
=item Garbage Collection
d4684 1
a4684 1
=item Reliable signals
d4686 1
a4686 2
Alternate runops() for signal despatch, Figure out how to die() in delayed
sighandler, Add tests for Thread::Signal, Automatic tests against CPAN
d4688 4
a4691 1
=item Interpolated regex performance bugs
d4693 1
a4693 1
=item Memory leaks from failed eval/regcomp
d4695 5
a4699 1
=item Make XS easier to use
d4701 1
a4701 1
=item Make embedded Perl easier to use
d4703 1
a4703 1
=item Namespace cleanup
d4705 1
a4705 1
=item MULTIPLICITY
d4707 1
a4707 1
=item MacPerl
d4711 1
a4711 1
=item Documentation
d4713 1
a4713 1
=over 4
d4715 1
a4715 1
=item A clear division into tutorial and reference
d4717 1
a4717 1
=item Remove the artificial distinction between operators and functions
d4719 1
a4719 1
=item More tutorials
d4721 1
a4721 1
Regular expressions, I/O, pack/unpack, Debugging
d4723 11
a4733 1
=item Include a search tool
d4735 1
a4735 1
=item Include a locate tool
d4737 1
a4737 1
=item Separate function manpages by default
d4739 2
a4740 1
=item Users can't find the manpages
d4742 1
a4742 1
=item Install ALL Documentation
d4744 4
a4747 1
=item Outstanding issues to be documented
d4749 1
a4749 1
=item Adapt www.linuxhq.com for Perl
d4751 2
a4752 1
=item Replace man with a perl program
d4754 1
a4754 1
=item Unicode tutorial
d4758 1
a4758 1
=item Modules
d4762 1
a4762 1
=item Update the POSIX extension to conform with the POSIX 1003.1 Edition 2
d4764 1
a4764 1
=item Module versions
d4766 1
a4766 1
=item New modules
d4768 1
a4768 1
=item Profiler
d4770 1
a4770 1
=item Tie Modules
d4772 1
a4772 1
VecArray, SubstrArray, VirtualArray, ShiftSplice
d4774 1
a4774 1
=item Procedural options
d4776 1
a4776 1
=item RPC
d4778 1
a4778 1
=item y2k localtime/gmtime
d4780 1
a4780 1
=item Export File::Find variables
d4782 1
a4782 1
=item Ioctl
d4784 1
a4784 1
=item Debugger attach/detach
d4786 1
a4786 1
=item Regular Expression debugger
d4788 1
a4788 1
=item Alternative RE Syntax
d4790 1
a4790 1
=item Bundled modules
d4792 1
a4792 1
=item Expect
d4794 1
a4794 1
=item GUI::Native
d4796 1
a4796 1
=item Update semibroken auxiliary tools; h2ph, a2p, etc.
d4798 29
a4826 1
=item pod2html
d4828 1
a4828 1
=item Podchecker
d4830 1
a4830 1
=back
d4832 1
a4832 1
=item Tom's Wishes
d4834 1
a4834 1
=over 4
d4836 1
a4836 1
=item Webperl
d4838 1
a4838 1
=item Mobile agents
d4840 1
a4840 1
=item POSIX on non-POSIX
d4842 1
a4842 1
=item Portable installations
d4846 1
a4846 1
=item Win32 Stuff
d4850 7
a4856 1
=item Rename new headers to be consistent with the rest
d4858 1
a4858 1
=item Sort out the spawnvp() mess
d4860 1
a4860 1
=item Work out DLL versioning
d4862 1
a4862 1
=item Style-check
d4864 5
a4868 1
=back
d4870 1
a4870 1
=item Would be nice to have
d4872 1
a4872 5
C<pack "(stuff)*">, Contiguous bitfields in pack/unpack, lexperl, Bundled
perl preprocessor, Use posix calls internally where possible, format
BOTTOM, -i rename file only when successfully changed, All ARGV input
should act like <>, report HANDLE [formats], support in perlmain to rerun
debugger, lvalue functions
d4874 1
a4874 1
=item Possible pragmas
d4876 1
a4876 1
=over 4
d4878 1
a4878 1
=item 'less'
d4880 1
a4880 1
=back
d4882 1
a4882 1
=item Optimizations
d4884 1
a4884 1
=over 4
d4886 1
a4886 1
=item constant function cache
d4888 1
a4888 1
=item foreach(reverse...)
d4896 23
a4918 1
=item Cache hash value
d4920 1
a4920 1
=item Optimize away @@_ where possible
d4922 1
a4922 1
=item Optimize sort by { $a <=> $b }
d4924 15
a4938 1
=item Rewrite regexp parser for better integrated optimization
d4942 17
a4958 1
=item Vague possibilities
d4960 1
a4960 3
ref function in list context, make tr/// return histogram in list context?,
Loop control on do{} et al, Explicit switch statements, compile to real
threaded code, structured types, Modifiable $1 et al
d4962 11
a4972 1
=item To Do Or Not To Do
d4976 3
a4978 1
=item Making my() work on "package" variables
d4980 1
a4980 1
=item "or" testing defined not truth
d4982 1
a4982 1
=item "dynamic" lexicals
d4984 3
a4986 1
=item "class"-based, rather than package-based "lexicals"
d4990 1
a4990 1
=item Threading
d4994 49
a5042 1
=item Modules
d5044 1
a5044 1
=item Testing
d5046 1
a5046 1
=item $AUTOLOAD
d5048 1
a5048 1
=item exit/die
d5050 1
a5050 1
=item External threads
d5052 1
a5052 1
=item Thread::Pool
d5054 1
a5054 1
=item thread-safety
d5056 1
a5056 1
=item Per-thread GVs
d5060 1
a5060 1
=item Compiler
d5064 1
a5064 1
=item Optimization
d5066 1
a5066 1
=item Byteperl
d5068 1
a5068 1
=item Precompiled modules
d5070 1
a5070 1
=item Executables
d5072 7
a5078 1
=item Typed lexicals
d5080 1
a5080 1
=item Win32
d5082 1
a5082 1
=item END blocks
d5084 1
a5084 1
=item _AUTOLOAD
d5086 1
a5086 1
=item comppadlist
d5088 1
a5088 1
=item Cached compilation
d5090 1
a5090 1
=back
d5092 1
a5092 1
=item Recently Finished Tasks
d5094 1
a5094 1
=over 4
d5096 1
a5096 1
=item Figure a way out of $^(capital letter)
d5098 1
a5098 1
=item Filenames
d5100 1
a5100 1
=item Foreign lines
d5102 1
a5102 1
=item Namespace cleanup
d5104 1
a5104 1
=item ISA.pm
d5106 1
a5106 1
=item gettimeofday
d5108 1
a5108 1
=item autocroak?
d5124 3
a5126 3
the implementation generic enough to be portable?, Is there enough
documentation?, Is there another way to do it?, Does it create too much
work?, Patches speak louder than words
d5137 1
a5137 1
It's easier, It's more recent, It's more reliable
d5141 7
a5147 2
It's easier, It's a good reference, Finding a start point, Finding how to
fix a bug, Finding the source of misbehaviour
d5156 1
a5156 1
Core modules, Documentation, Configure, Interpreter
d5183 14
d5213 19
d5272 1
a5272 1
=head2 perldelta - what's new for perl v5.6
d5278 3
a5280 1
=item Summary of changes between 5.6.0 and 5.6.1
d5284 1
a5284 1
=item Security Issues
d5286 1
a5286 1
=item Core bug fixes
d5288 1
a5288 7
C<UNIVERSAL::isa()>, Memory leaks, Numeric conversions, qw(a\\b), caller(),
Bugs in regular expressions, "slurp" mode, Autovivification of symbolic
references to special variables, Lexical warnings, Spurious warnings and
errors, glob(), Tainting, sort(), #line directives, Subroutine prototypes,
map(), Debugger, Locales, PERL5OPT, chop(), Unicode support, 64-bit
support, Compiler, Lvalue subroutines, IO::Socket, File::Find, xsubpp, C<no
Module;>, Tests
d5290 1
a5290 1
=item Core features
d5292 1
a5292 1
=item Configuration issues
d5294 1
a5294 1
=item Documentation
d5296 1
a5296 1
=item Bundled modules
d5298 1
a5298 4
B::Concise, File::Temp, Pod::LaTeX, Pod::Text::Overstrike, CGI, CPAN,
Class::Struct, DB_File, Devel::Peek, File::Find, Getopt::Long, IO::Poll,
IPC::Open3, Math::BigFloat, Math::Complex, Net::Ping, Opcode, Pod::Parser,
Pod::Text, SDBM_File, Sys::Syslog, Tie::RefHash, Tie::SubstrHash
d5300 1
a5300 1
=item Platform-specific improvements
d5302 1
a5302 1
NCR MP-RAS, NonStop-UX
d5304 1
a5304 1
=item Interpreter cloning, threads, and concurrency
d5306 1
a5306 1
=item Lexically scoped warning categories
d5308 1
a5308 1
=item Unicode and UTF-8 support
d5310 1
a5310 1
=item Support for interpolating named characters
d5312 1
a5312 1
=item "our" declarations
d5314 1
a5314 1
=item Support for strings represented as a vector of ordinals
d5316 1
a5316 1
=item Improved Perl version numbering system
d5318 1
a5318 1
=item New syntax for declaring subroutine attributes
d5320 1
a5320 1
=item File and directory handles can be autovivified
d5322 1
a5322 1
=item open() with more than two arguments
d5324 1
a5324 1
=item 64-bit support
d5326 1
a5326 1
=item Large file support
d5328 1
a5328 1
=item Long doubles
d5330 1
a5330 1
=item "more bits"
d5332 1
a5332 1
=item Enhanced support for sort() subroutines
d5334 1
a5334 1
=item C<sort $coderef @@foo> allowed
d5336 1
a5336 1
=item File globbing implemented internally
d5338 1
a5338 1
=item Support for CHECK blocks
d5340 1
a5340 1
=item POSIX character class syntax [: :] supported
d5342 1
a5342 1
=item Better pseudo-random number generator
d5344 1
a5344 1
=item Improved C<qw//> operator
d5346 1
a5346 1
=item Better worst-case behavior of hashes
d5348 1
a5348 1
=item pack() format 'Z' supported
d5350 1
a5350 1
=item pack() format modifier '!' supported
d5352 1
a5352 1
=item pack() and unpack() support counted strings
d5354 1
a5354 1
=item Comments in pack() templates
d5356 1
a5356 1
=item Weak references
d5358 1
a5358 1
=item Binary numbers supported
d5360 1
a5360 1
=item Lvalue subroutines
d5362 1
a5362 1
=item Some arrows may be omitted in calls through references
d5364 1
a5364 1
=item Boolean assignment operators are legal lvalues
d5366 1
a5366 1
=item exists() is supported on subroutine names
d5368 1
a5368 1
=item exists() and delete() are supported on array elements
d5370 1
a5370 1
=item Pseudo-hashes work better
d5372 1
a5372 1
=item Automatic flushing of output buffers
d5374 1
a5374 1
=item Better diagnostics on meaningless filehandle operations
d5376 1
a5376 1
=item Where possible, buffered data discarded from duped input filehandle
d5378 1
a5378 1
=item eof() has the same old magic as <>
d5380 1
a5380 1
=item binmode() can be used to set :crlf and :raw modes
d5382 1
a5382 1
=item C<-T> filetest recognizes UTF-8 encoded files as "text"
d5384 1
a5384 1
=item system(), backticks and pipe open now reflect exec() failure
d5386 1
a5386 1
=item Improved diagnostics
d5388 1
a5388 1
=item Diagnostics follow STDERR
d5390 1
a5390 1
=item More consistent close-on-exec behavior
d5392 1
a5392 1
=item syswrite() ease-of-use
d5394 1
a5394 1
=item Better syntax checks on parenthesized unary operators
d5396 1
a5396 1
=item Bit operators support full native integer width
d5398 1
a5398 1
=item Improved security features
d5400 1
a5400 1
=item More functional bareword prototype (*)
d5402 1
a5402 1
=item C<require> and C<do> may be overridden
d5404 1
a5404 1
=item $^X variables may now have names longer than one character
d5406 1
a5406 1
=item New variable $^C reflects C<-c> switch
d5408 1
a5408 1
=item New variable $^V contains Perl version as a string
d5410 1
a5410 1
=item Optional Y2K warnings
d5412 1
a5412 1
=item Arrays now always interpolate into double-quoted strings
d5414 1
a5414 1
=back
d5416 1
a5416 1
=item Modules and Pragmata
d5418 1
a5418 1
=over 4
d5420 1
a5420 1
=item Modules
d5422 1
a5422 8
attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters
d5424 1
a5424 1
=item Pragmata
d5426 1
a5426 1
=back
d5428 1
a5428 1
=item Utility Changes
d5430 1
a5430 1
=over 4
d5432 1
a5432 1
=item dprofpp
d5434 1
a5434 1
=item find2perl
d5436 1
a5436 1
=item h2xs
d5438 1
a5438 1
=item perlcc
d5440 1
a5440 1
=item perldoc
d5442 1
a5442 1
=item The Perl Debugger
d5444 1
a5444 1
=back
d5446 1
a5446 1
=item Improved Documentation
d5448 1
a5448 4
perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod
d5450 1
a5450 1
=item Performance enhancements
d5452 1
a5452 1
=over 4
d5454 1
a5454 1
=item Simple sort() using { $a <=> $b } and the like are optimized
d5456 1
a5456 1
=item Optimized assignments to lexical variables
d5458 1
a5458 1
=item Faster subroutine calls
d5460 1
a5460 1
=item delete(), each(), values() and hash iteration are faster
d5462 1
a5462 1
=back
d5464 1
a5464 1
=item Installation and Configuration Improvements
d5466 1
a5466 1
=over 4
d5468 1
a5468 1
=item -Dusethreads means something different
d5470 1
a5470 1
=item New Configure flags
d5472 1
a5472 1
=item Threadedness and 64-bitness now more daring
d5474 1
a5474 1
=item Long Doubles
d5476 1
a5476 1
=item -Dusemorebits
d5478 1
a5478 1
=item -Duselargefiles
d5480 1
a5480 1
=item installusrbinperl
d5482 1
a5482 1
=item SOCKS support
d5484 1
a5484 1
=item C<-A> flag
d5486 1
a5486 1
=item Enhanced Installation Directories
d5488 1
a5488 1
=item gcc automatically tried if 'cc' does not seem to be working
d5490 1
a5490 1
=back
d5492 1
a5492 1
=item Platform specific changes
d5496 1
a5496 1
=item Supported platforms
d5498 1
a5498 1
=item DOS
d5500 1
a5500 1
=item OS390 (OpenEdition MVS)
d5502 1
a5502 1
=item VMS
d5504 1
a5504 1
=item Win32
d5508 3
a5510 1
=item Significant bug fixes
d5514 9
a5522 1
=item <HANDLE> on empty files
d5524 1
a5524 1
=item C<eval '...'> improvements
d5526 1
a5526 1
=item All compilation errors are true errors
d5528 1
a5528 1
=item Implicitly closed filehandles are safer
d5530 1
a5530 1
=item Behavior of list slices is more consistent
d5532 1
a5532 1
=item C<(\$)> prototype and C<$foo{a}>
d5534 1
a5534 1
=item C<goto &sub> and AUTOLOAD
d5536 1
a5536 1
=item C<-bareword> allowed under C<use integer>
d5538 1
a5538 1
=item Failures in DESTROY()
d5540 1
a5540 1
=item Locale bugs fixed
d5542 1
a5542 1
=item Memory leaks
d5544 1
a5544 1
=item Spurious subroutine stubs after failed subroutine calls
d5546 1
a5546 1
=item Taint failures under C<-U>
d5548 1
a5548 1
=item END blocks and the C<-c> switch
d5550 1
a5550 1
=item Potential to leak DATA filehandles
d5552 1
a5552 1
=back
d5554 1
a5554 1
=item New or Changed Diagnostics
d5556 1
a5556 50
"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible unintended interpolation of %s in string,
Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME : ATTRS"
instead, Premature end of script headers, Repeat count in pack overflows,
Repeat count in unpack overflows, realloc() of freed memory ignored,
Reference is already weak, setpgrp can't take arguments, Strange *+?{} on
zero-length expression, switching effective %s is not implemented, This
Perl can't reset CRTL environ elements (%s), This Perl can't set CRTL
environ elements (%s=%s), Too late to run %s block, Unknown open() mode
'%s', Unknown process %x sent message to prime_env_iter: %s, Unrecognized
escape \\%c passed through, Unterminated attribute parameter in attribute
list, Unterminated attribute list, Unterminated attribute parameter in
subroutine attribute list, Unterminated subroutine attribute list, Value of
CLI symbol "%s" too long, Version number must be a constant number
d5558 1
a5558 1
=item New tests
d5560 1
a5560 1
=item Incompatible Changes
d5564 1
a5564 1
=item Perl Source Incompatibilities
d5566 1
a5566 11
CHECK is a new keyword, Treatment of list slices of undef has changed,
Format of $English::PERL_VERSION is different, Literals of the form
C<1.2.3> parse differently, Possibly changed pseudo-random number
generator, Hashing function for hash keys has changed, C<undef> fails on
read only values, Close-on-exec bit may be set on pipe and socket handles,
Writing C<"$$1"> to mean C<"${$}1"> is unsupported, delete(), each(),
values() and C<\(%h)>, vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
Text of some diagnostic output has changed, C<%@@> has been removed,
Parenthesized not() behaves like a list operator, Semantics of bareword
prototype C<(*)> have changed, Semantics of bit operators may have changed
on 64-bit platforms, More builtins taint their results
d5568 1
a5568 1
=item C Source Incompatibilities
d5570 1
a5570 1
C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>
d5572 1
a5572 1
=item Compatible C Source API Changes
d5574 1
a5574 1
C<PATCHLEVEL> is now C<PERL_VERSION>
d5576 1
a5576 1
=item Binary Incompatibilities
d5578 1
a5578 1
=back
d5580 1
a5580 1
=item Known Problems
d5582 1
a5582 1
=over 4
d5584 1
a5584 1
=item Localizing a tied hash element may leak memory
d5586 1
a5586 1
=item Known test failures
d5588 1
a5588 2
64-bit builds, Failure of Thread tests, NEXTSTEP 3.3 POSIX test failure,
Tru64 (aka Digital UNIX, aka DEC OSF/1) lib/sdbm test failure with gcc
d5590 1
a5590 1
=item EBCDIC platforms not fully supported
d5592 1
a5592 1
=item UNICOS/mk CC failures during Configure run
d5594 1
a5594 1
=item Arrow operator and arrays
d5596 1
a5596 1
=item Experimental features
d5598 1
a5598 3
Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression code constructs:
d5600 1
a5600 1
=back
d5602 1
a5602 1
=item Obsolete Diagnostics
d5604 1
a5604 4
Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, In string, @@%s now must be written as
\@@%s, Probable precedence problem on %s, regexp too big, Use of "$$<digit>"
to mean "${$}<digit>" is deprecated
d5614 1
a5614 1
=head2 perl5005delta, perldelta - what's new for perl5.005
d5620 1
a5620 1
=item About the new versioning system
d5624 2
d5628 1
a5628 1
=item WARNING:	This version is not binary compatible with Perl 5.004.
d5630 1
a5630 1
=item Default installation structure has changed
d5632 1
a5632 1
=item Perl Source Compatibility
d5634 1
a5634 1
=item C Source Compatibility
d5636 1
a5636 1
=item Binary Compatibility
d5638 1
a5638 1
=item Security fixes may affect compatibility
d5640 1
a5640 1
=item Relaxed new mandatory warnings introduced in 5.004
d5642 1
a5642 1
=item Licensing
d5646 5
a5650 1
=item Core Changes
d5654 13
a5666 1
=item Threads
d5668 1
a5668 1
=item Compiler
d5670 1
a5670 1
=item Regular Expressions
d5672 1
a5672 3
Many new and improved optimizations, Many bug fixes, New regular expression
constructs, New operator for precompiled regular expressions, Other
improvements, Incompatible changes
d5674 1
a5674 1
=item	Improved malloc()
d5676 1
a5676 1
=item Quicksort is internally implemented
d5678 1
a5678 1
=item Reliable signals
d5680 1
a5680 1
=item Reliable stack pointers
d5682 3
a5684 1
=item More generous treatment of carriage returns
d5686 1
a5686 1
=item Memory leaks
d5688 1
a5688 1
=item Better support for multiple interpreters
d5690 1
a5690 1
=item Behavior of local() on array and hash elements is now well-defined
d5692 1
a5692 1
=item C<%!> is transparently tied to the L<Errno> module
d5694 1
a5694 1
=item Pseudo-hashes are supported
d5696 1
a5696 1
=item C<EXPR foreach EXPR> is supported
d5698 1
a5698 1
=item Keywords can be globally overridden
d5700 1
a5700 1
=item C<$^E> is meaningful on Win32
d5702 1
a5702 1
=item C<foreach (1..1000000)> optimized
d5704 1
a5704 1
=item C<Foo::> can be used as implicitly quoted package name
d5706 1
a5706 1
=item C<exists $Foo::{Bar::}> tests existence of a package
d5708 1
a5708 1
=item Better locale support
d5710 1
a5710 1
=item Experimental support for 64-bit platforms
d5712 1
a5712 1
=item prototype() returns useful results on builtins
d5714 1
a5714 1
=item Extended support for exception handling
d5716 1
a5716 1
=item Re-blessing in DESTROY() supported for chaining DESTROY() methods
d5718 1
a5718 1
=item All C<printf> format conversions are handled internally
d5720 1
a5720 1
=item New C<INIT> keyword
d5722 1
a5722 1
=item New C<lock> keyword
d5724 1
a5724 1
=item New C<qr//> operator
d5726 1
a5726 1
=item C<our> is now a reserved word
d5728 1
a5728 1
=item Tied arrays are now fully supported
d5730 1
a5730 1
=item Tied handles support is better
d5732 1
a5732 1
=item 4th argument to substr
d5734 1
a5734 1
=item Negative LENGTH argument to splice
d5736 1
a5736 1
=item Magic lvalues are now more magical
d5738 1
a5738 1
=item <> now reads in records
d5742 1
a5742 1
=item Supported Platforms
d5746 3
a5748 1
=item New Platforms
d5750 1
a5750 1
=item Changes in existing support
d5752 1
a5752 1
=back
d5760 11
a5770 3
B, Data::Dumper, Dumpvalue, Errno, File::Spec, ExtUtils::Installed,
ExtUtils::Packlist, Fatal, IPC::SysV, Test, Tie::Array, Tie::Handle,
Thread, attrs, fields, re
d5772 1
a5772 1
=item Changes in existing modules
d5774 1
a5774 2
Benchmark, Carp, CGI, Fcntl, Math::Complex, Math::Trig, POSIX, DB_File,
MakeMaker, CPAN, Cwd
d5778 7
a5784 1
=item Utility Changes
d5786 1
a5786 1
=item Documentation Changes
d5788 1
a5788 1
=item New Diagnostics
d5790 19
a5808 17
Ambiguous call resolved as CORE::%s(), qualify as such or use &, Bad index
while coercing array into hash, Bareword "%s" refers to nonexistent
package, Can't call method "%s" on an undefined value, Can't check
filesystem of script "%s" for nosuid, Can't coerce array into hash, Can't
goto subroutine from an eval-string, Can't localize pseudo-hash element,
Can't use %%! because Errno.pm is not available, Cannot find an opnumber
for "%s", Character class syntax [. .] is reserved for future extensions,
Character class syntax [: :] is reserved for future extensions, Character
class syntax [= =] is reserved for future extensions, %s: Eval-group in
insecure regular expression, %s: Eval-group not allowed, use re 'eval', %s:
Eval-group not allowed at run time, Explicit blessing to '' (assuming
package main), Illegal hex digit ignored, No such array field, No such
field "%s" in variable %s of type %s, Out of memory during ridiculously
large request, Range iterator outside integer range, Recursive inheritance
detected while looking for method '%s' %s, Reference found where even-sized
list expected, Undefined value assigned to typeglob, Use of reserved word
"%s" is deprecated, perl: warning: Setting locale failed
d5810 1
a5810 1
=item Obsolete Diagnostics
d5812 1
a5812 2
Can't mktemp(), Can't write to temp file for B<-e>: %s, Cannot open
temporary file, regexp too big
d5814 1
a5814 1
=item Configuration Changes
d5816 1
a5816 1
=item BUGS
d5824 1
a5824 1
=head2 perl5004delta, perldelta - what's new for perl5.004
d5830 34
a5863 1
=item Supported Environments
d5865 1
a5865 1
=item Core Changes
d5869 87
a5955 1
=item List assignment to %ENV works
d5957 1
a5957 1
=item Change to "Can't locate Foo.pm in @@INC" error
d5959 1
a5959 1
=item Compilation option: Binary compatibility with 5.003
d5961 1
a5961 1
=item $PERL5OPT environment variable
d5963 1
a5963 1
=item Limitations on B<-M>, B<-m>, and B<-T> options
d5965 1
a5965 1
=item More precise warnings
d5967 1
a5967 1
=item Deprecated: Inherited C<AUTOLOAD> for non-methods
d5969 1
a5969 1
=item Previously deprecated %OVERLOAD is no longer usable
d5971 1
a5971 1
=item Subroutine arguments created only when they're modified
d5973 1
a5973 1
=item Group vector changeable with C<$)>
d5975 1
a5975 1
=item Fixed parsing of $$<digit>, &$<digit>, etc.
d5977 1
a5977 1
=item Fixed localization of $<digit>, $&, etc.
d5979 1
a5979 1
=item No resetting of $. on implicit close
d5981 1
a5981 1
=item C<wantarray> may return undef
d5983 1
a5983 1
=item C<eval EXPR> determines value of EXPR in scalar context
d5985 1
a5985 1
=item Changes to tainting checks
d5987 8
a5994 2
No glob() or <*>, No spawning if tainted $CDPATH, $ENV, $BASH_ENV, No
spawning if tainted $TERM doesn't look like a terminal name
d5996 1
a5996 1
=item New Opcode module and revised Safe module
d5998 1
a5998 1
=item Embedding improvements
d6000 1
a6000 1
=item Internal change: FileHandle class based on IO::* classes
d6002 1
a6002 1
=item Internal change: PerlIO abstraction interface
d6004 1
a6004 1
=item New and changed syntax
d6006 1
a6006 1
$coderef->(PARAMS)
d6008 1
a6008 1
=item New and changed builtin constants
d6010 1
a6010 1
__PACKAGE__
d6012 1
a6012 1
=item New and changed builtin variables
d6014 1
a6014 1
$^E, $^H, $^M
d6016 1
a6016 1
=item New and changed builtin functions
d6018 1
a6018 5
delete on slices, flock, printf and sprintf, keys as an lvalue, my() in
Control Structures, pack() and unpack(), sysseek(), use VERSION, use Module
VERSION LIST, prototype(FUNCTION), srand, $_ as Default, C<m//gc> does not
reset search position on failure, C<m//x> ignores whitespace before ?*+{},
nested C<sub{}> closures work now, formats work right on changing lexicals
d6020 4
a6023 1
=item New builtin methods
d6025 1
a6025 1
isa(CLASS), can(METHOD), VERSION( [NEED] )
d6027 1
a6027 1
=item TIEHANDLE now supported
d6029 1
a6029 2
TIEHANDLE classname, LIST, PRINT this, LIST, PRINTF this, LIST, READ this
LIST, READLINE this, GETC this, DESTROY this
d6031 1
a6031 1
=item Malloc enhancements
d6033 1
a6033 1
-DPERL_EMERGENCY_SBRK, -DPACK_MALLOC, -DTWO_POT_OPTIMIZE
d6035 1
a6035 1
=item Miscellaneous efficiency enhancements
d6039 5104
a11142 1
=item Support for More Operating Systems
d11146 1
a11146 1
=item Win32
d11148 1
a11148 1
=item Plan 9
d11150 1
a11150 1
=item QNX
d11152 1
a11152 1
=item AmigaOS
d11154 1
a11154 1
=back
d11156 1
a11156 1
=item Pragmata
d11158 1
a11158 2
use autouse MODULE => qw(sub1 sub2 sub3), use blib, use blib 'dir', use
constant NAME => VALUE, use locale, use ops, use vmsish
d11160 1
a11160 1
=item Modules
d11162 1
a11162 1
=over 4
d11164 1
a11164 1
=item Required Updates
d11166 1
a11166 1
=item Installation directories
d11168 1
a11168 1
=item Module information summary
d11170 1
a11170 1
=item Fcntl
d11172 1
a11172 1
=item IO
d11174 1
a11174 1
=item Math::Complex
d11176 1
a11176 1
=item Math::Trig
d11178 1
a11178 1
=item DB_File
d11180 1
a11180 1
=item Net::Ping
d11182 1
a11182 1
=item Object-oriented overrides for builtin operators
d11186 1
a11186 1
=item Utility Changes
d11190 1
a11190 1
=item pod2html
d11192 1
a11192 5
Sends converted HTML to standard output

=item xsubpp

C<void> XSUBs now default to returning nothing
d11196 1
a11196 1
=item C Language API Changes
d11198 1
a11198 2
C<gv_fetchmethod> and C<perl_call_sv>, C<perl_eval_pv>, Extended API for
manipulating hashes
d11200 1
a11200 1
=item Documentation Changes
d11202 1
a11202 2
L<perldelta>, L<perlfaq>, L<perllocale>, L<perltoot>, L<perlapio>,
L<perlmodlib>, L<perldebug>, L<perlsec>
d11204 1
a11204 1
=item New Diagnostics
d11206 1
a11206 25
"my" variable %s masks earlier declaration in same scope, %s argument is
not a HASH element or slice, Allocation too large: %lx, Allocation too
large, Applying %s to %s will act on scalar(%s), Attempt to free
nonexistent shared string, Attempt to use reference as lvalue in substr,
Bareword "%s" refers to nonexistent package, Can't redefine active sort
subroutine %s, Can't use bareword ("%s") as %s ref while "strict refs" in
use, Cannot resolve method `%s' overloading `%s' in package `%s', Constant
subroutine %s redefined, Constant subroutine %s undefined, Copy method did
not return a reference, Died, Exiting pseudo-block via %s, Identifier too
long, Illegal character %s (carriage return), Illegal switch in PERL5OPT:
%s, Integer overflow in hex number, Integer overflow in octal number,
internal error: glob failed, Invalid conversion in %s: "%s", Invalid type
in pack: '%s', Invalid type in unpack: '%s', Name "%s::%s" used only once:
possible typo, Null picture in formline, Offset outside string, Out of
memory!, Out of memory during request for %s, panic: frexp, Possible
attempt to put comments in qw() list, Possible attempt to separate words
with commas, Scalar value @@%s{%s} better written as $%s{%s}, Stub found
while resolving method `%s' overloading `%s' in %s, Too late for "B<-T>"
option, untie attempted while %d inner references still exist, Unrecognized
character %s, Unsupported function fork, Use of "$$<digit>" to mean
"${$}<digit>" is deprecated, Value of %s can be "0"; test with defined(),
Variable "%s" may be unavailable, Variable "%s" will not stay shared,
Warning: something's wrong, Ill-formed logical name |%s| in prime_env_iter,
Got an error from DosAllocMem, Malformed PERLLIB_PREFIX, PERL_SH_DIR too
long, Process terminated by SIG%s
d11208 3
a11210 1
=item BUGS
d11214 1
a11214 1
=item HISTORY
d11218 1
a11218 1
=head2 perlaix, README.aix - Perl version 5 on IBM Unix (AIX) systems
d11222 2
d11226 1
a11226 1
=over 4
d11228 1
a11228 1
=item Compiling Perl 5 on AIX
d11230 1
a11230 1
=item OS level
d11232 2
a11233 1
=item Building Dynamic Extensions on AIX
d11235 1
a11235 1
=item The IBM ANSI C Compiler
d11237 1
a11237 1
=item Using GNU's gcc for building perl
d11239 1
a11239 1
=item Using Large Files with Perl
d11241 1
a11241 1
=item Threaded Perl
d11243 1
a11243 1
=item 64-bit Perl
d11245 1
a11245 1
=item GDBM and Threads
d11247 1
a11247 1
=item NFS filesystems and utime(2)
d11249 1
a11249 1
=back
d11251 1
a11251 1
=item AUTHOR
d11253 1
a11253 1
=item DATE
d11257 1
a11257 1
=head2 perlamiga - Perl under Amiga OS
a11262 4
=back

=over 4

d11267 1
a11267 1
=item Prerequisites
d11269 4
a11272 1
B<Unix emulation for AmigaOS: ixemul.library>, B<Version of Amiga OS>
d11274 1
a11274 1
=item Starting Perl programs under AmigaOS
d11276 2
a11277 1
=item Shortcomings of Perl under AmigaOS
d11281 1
a11281 1
=item INSTALLATION
d11283 1
a11283 1
=item Accessing documentation
d11287 1
a11287 1
=item Manpages
d11289 1
a11289 1
=item B<HTML>
d11291 5
a11295 1
=item B<GNU> C<info> files
d11297 1
a11297 1
=item C<LaTeX> docs
d11301 2
a11302 1
=item BUILD
d11306 1
a11306 1
=item Prerequisites
d11308 1
a11308 1
=item Getting the perl source
d11310 1
a11310 1
=item Making
d11312 1
a11312 1
sh Configure -Dprefix=/ade -Dloclibpth=/ade/lib
d11314 1
a11314 1
=item Testing
d11316 1
a11316 1
=item Installing the built perl
d11318 1
a11318 1
=back
d11320 1
a11320 1
=item AUTHORS
d11322 1
a11322 1
=item SEE ALSO
d11326 1
a11326 1
=head2 perlbs2000, README.BS2000 - building and installing Perl for BS2000.
d11330 5
a11334 1
=item SYNOPSIS
d11336 4
a11339 1
=item DESCRIPTION
d11343 1
a11343 1
=item gzip
d11345 1
a11345 1
=item bison
d11347 1
a11347 1
=item Unpacking
d11349 1
a11349 1
=item Compiling
d11351 1
a11351 3
=item Testing

=item Install
d11353 5
a11357 1
=item Using Perl in the Posix-Shell
d11359 1
a11359 1
=item Using Perl in "native" BS2000
d11361 1
a11361 1
=item Floating point anomalies
d11365 3
a11367 1
=item AUTHORS
d11369 1
a11369 1
=item SEE ALSO
d11373 3
a11375 1
=item Mailing list
d11379 3
a11381 1
=item HISTORY
d11385 1
a11385 1
=head2 perlcygwin, README.cygwin - Perl for Cygwin
d11391 4
a11394 1
=item PREREQUISITES
d11398 1
a11398 1
=item Cygwin = GNU+Cygnus+Windows (Don't leave UNIX without it)
d11400 1
a11400 1
=item Cygwin Configuration
d11402 1
a11402 1
C<PATH>, I<nroff>, Permissions
d11406 1
a11406 1
=item CONFIGURE
d11410 13
a11422 1
=item Strip Binaries
d11424 1
a11424 1
=item Optional Libraries
d11426 1
a11426 2
C<-lcrypt>, C<-lgdbm> (C<use GDBM_File>), C<-ldb> (C<use DB_File>),
C<-lcygipc> (C<use IPC::SysV>)
d11428 1
a11428 1
=item Configure-time Options
d11430 1
a11430 2
C<-Uusedl>, C<-Uusemymalloc>, C<-Dusemultiplicity>, C<-Duseperlio>,
C<-Duse64bitint>, C<-Duselongdouble>, C<-Dusethreads>, C<-Duselargefiles>
d11432 1
a11432 1
=item Suspicious Warnings
d11434 1
a11434 1
I<dlsym()>, Win9x and C<d_eofnblk>, Compiler/Preprocessor defines
d11438 5
a11442 1
=item MAKE
d11446 5
a11450 1
=item Warnings
d11452 1
a11452 1
=item ld2
d11456 1
a11456 1
=item TEST
d11460 3
a11462 1
=item File Permissions
d11464 1
a11464 1
=item Hard Links
d11466 1
a11466 1
=item Filetime Granularity
d11468 1
a11468 1
=item Tainting Checks
d11470 1
a11470 1
=item /etc/group
d11472 1
a11472 1
=item Script Portability
d11474 1
a11474 1
Pathnames, Text/Binary, F<.exe>, chown(), Miscellaneous
d11478 1
a11478 1
=item INSTALL
d11480 1
a11480 1
=item MANIFEST
d11482 1
a11482 2
Documentation, Build, Configure, Make, Install, Tests, Compiled Perl
Source, Compiled Module Source, Perl Modules/Scripts
d11484 1
a11484 1
=item BUGS
d11486 1
a11486 1
=item AUTHORS
d11488 1
a11488 1
=item HISTORY
d11492 1
a11492 1
=head2 perldos - Perl under DOS, W31, W95.
d11498 2
d11502 14
d11518 1
a11518 1
=item Prerequisites
d11520 1
a11520 1
DJGPP, Pthreads
d11522 1
a11522 1
=item Shortcomings of Perl under DOS
d11524 1
a11524 1
=item Building
d11526 1
a11526 1
=item Testing
d11528 1
a11528 1
=item Installation
d11532 1
a11532 3
=item BUILDING AND INSTALLING MODULES

=over 4
d11534 1
a11534 1
=item Prerequisites
d11536 1
a11536 1
=item Unpacking CPAN Modules
d11538 1
a11538 1
=item Building Non-XS Modules
d11540 1
a11540 1
=item Building XS Modules
d11542 1
a11542 1
=back
d11544 1
a11544 1
=item AUTHOR
d11550 3
a11552 1
=head2 perlepoc, README.epoc - Perl for EPOC
d11558 3
a11560 1
=item INTRODUCTION
d11562 1
a11562 1
=item INSTALLING PERL ON EPOC
d11564 1
a11564 1
=item STARTING PERL ON EPOC
d11566 1
a11566 1
=item STOPPING PERL ON EPOC
d11568 1
a11568 1
=item USING PERL ON EPOC
d11572 1
a11572 1
=item I/O Redirection
d11574 1
a11574 1
=item PATH Names
d11576 1
a11576 1
=item Editors
d11578 1
a11578 1
=item Features
d11580 1
a11580 1
=item Restrictions
d11582 1
a11582 1
=item Compiling Perl 5 on the EPOC cross compiling environment
d11586 1
a11586 5
=item SUPPORT STATUS

=item AUTHOR

=item LAST UPDATE
d11590 1
a11590 2
=head2 perlhpux, README.hpux - Perl version 5 on Hewlett-Packard Unix
(HP-UX) systems
d11598 7
a11604 1
=item Compiling Perl 5 on HP-UX
d11606 1
a11606 1
=item PA-RISC
d11608 1
a11608 1
=item PA-RISC 1.0
d11610 1
a11610 1
=item PA-RISC 1.1
d11612 2
a11613 1
=item PA-RISC 2.0
d11615 1
a11615 1
=item Portability Between PA-RISC Versions
d11617 3
a11619 1
=item Building Dynamic Extensions on HP-UX
d11621 1
a11621 1
=item The HP ANSI C Compiler
d11623 1
a11623 1
=item Using Large Files with Perl
d11625 1
a11625 1
=item Threaded Perl
d11627 1
a11627 1
=item 64-bit Perl
d11629 4
a11632 1
=item GDBM and Threads
d11634 1
a11634 1
=item NFS filesystems and utime(2)
d11636 1
a11636 1
=item perl -P and //
d11638 1
a11638 1
=back
d11640 1
a11640 1
=item AUTHOR
d11642 1
a11642 1
=item DATE
d11646 7
a11652 2
=head2 perlmachten, README.machten - Perl version 5 on Power MachTen
systems
d11654 1
a11654 1
=over 4
d11656 2
a11657 1
=item DESCRIPTION
d11661 4
a11664 1
=item Compiling Perl 5 on MachTen
d11666 1
a11666 1
=item Failures during C<make test>
d11668 1
a11668 1
op/lexassign.t, pragma/warnings.t
d11670 1
a11670 1
=item Building external modules
d11674 9
a11682 1
=item AUTHOR
d11684 1
a11684 1
=item DATE
d11688 1
a11688 1
=head2 perlmacos, README.macos - Perl under Mac OS (Classic)
d11696 3
a11698 1
=item AUTHOR
d11700 1
a11700 1
=item DATE
d11704 1
a11704 3
=head2 perlmpeix, README.mpeix - Perl/iX for HP e3000 MPE

=head1 SYNOPSIS
d11708 1
a11708 1
=item What's New
d11710 1
a11710 1
=item System Requirements
d11712 1
a11712 1
=item How to Obtain Perl/iX
d11714 1
a11714 1
=item Distribution Contents Highlights
d11716 1
a11716 1
README, public_html/feedback.cgi,  4,  6
d11718 1
a11718 1
=item Getting Started with Perl/iX
d11720 1
a11720 1
=item MPE/iX Implementation Considerations
d11722 1
a11722 1
=item Change History
d11726 1
a11726 3
=head2 perlos2 - Perl under OS/2, DOS, Win0.3*, Win0.95 and WinNT.

=over 4
d11728 1
a11728 1
=item SYNOPSIS
d11732 3
d11737 2
d11741 3
d11746 1
a11746 1
=item Target
d11748 1
a11748 1
=item Other OSes
d11750 1
a11750 1
=item Prerequisites
d11752 1
a11752 1
EMX, RSX, HPFS, pdksh
d11754 2
a11755 1
=item Starting Perl programs under OS/2 (and DOS and...)
d11757 2
a11758 1
=item Starting OS/2 (and DOS) programs under Perl
d11760 2
a11761 1
=back
d11763 2
a11764 1
=item Frequently asked questions
d11768 5
a11772 1
=item "It does not work"
d11774 1
a11774 1
=item I cannot run external programs
d11776 1
a11776 2
=item I cannot embed perl into my program, or use F<perl.dll> from my
program. 
d11778 1
a11778 2
Is your program EMX-compiled with C<-Zmt -Zcrtdll>?, Did you use
L<ExtUtils::Embed>?
d11780 1
a11780 1
=item C<``> and pipe-C<open> do not work under DOS.
d11782 1
a11782 1
=item Cannot start C<find.exe "pattern" file>
d11786 1
a11786 1
=item INSTALLATION
d11790 1
a11790 1
=item Automatic binary installation
d11792 1
a11792 1
C<PERL_BADLANG>, C<PERL_BADFREE>, F<Config.pm>
d11794 1
a11794 7
=item Manual binary installation

Perl VIO and PM executables (dynamically linked), Perl_ VIO executable
(statically linked), Executables for Perl utilities, Main Perl library,
Additional Perl modules, Tools to compile Perl modules, Manpages for Perl
and utilities, Manpages for Perl modules, Source for Perl documentation,
Perl manual in F<.INF> format, Pdksh
d11796 1
a11796 1
=item B<Warning>
d11800 2
a11801 1
=item Accessing documentation
d11805 1
a11805 1
=item OS/2 F<.INF> file
d11807 1
a11807 1
=item Plain text
d11809 1
a11809 1
=item Manpages
d11811 3
a11813 1
=item HTML
d11815 1
a11815 1
=item GNU C<info> files
d11817 1
a11817 1
=item F<.PDF> files
d11819 1
a11819 1
=item C<LaTeX> docs
d11823 11
a11833 1
=item BUILD
d11837 5
a11841 1
=item The short story
d11843 1
a11843 1
=item Prerequisites
d11845 1
a11845 1
=item Getting perl source
d11847 1
a11847 1
=item Application of the patches
d11849 2
a11850 1
=item Hand-editing
d11852 1
a11852 1
=item Making
d11854 1
a11854 1
=item Testing
d11856 1
a11856 2
A lot of C<bad free>, Process terminated by SIGTERM/SIGINT, F<op/fs.t>,
F<op/stat.t>
d11858 1
a11858 1
=item Installing the built perl
d11860 1
a11860 1
=item C<a.out>-style build
d11862 1
a11862 1
=back
d11864 1
a11864 1
=item Build FAQ
d11866 1
a11866 1
=over 4
d11868 1
a11868 1
=item Some C</> became C<\> in pdksh.
d11870 1
a11870 1
=item C<'errno'> - unresolved external
d11872 2
a11873 1
=item Problems with tr or sed
d11875 1
a11875 1
=item Some problem (forget which ;-)
d11877 1
a11877 1
=item Library ... not found
d11879 1
a11879 1
=item Segfault in make
d11881 1
a11881 1
=item op/sprintf test failure
d11885 1
a11885 1
=item Specific (mis)features of OS/2 port
d11889 5
a11893 1
=item C<setpriority>, C<getpriority>
d11895 2
a11896 1
=item C<system()>
d11898 1
a11898 1
=item C<extproc> on the first line
d11900 3
a11902 1
=item Additional modules:
d11904 1
a11904 1
=item Prebuilt methods:
d11906 1
a11906 11
C<File::Copy::syscopy>, C<DynaLoader::mod2fname>,  C<Cwd::current_drive()>,
 C<Cwd::sys_chdir(name)>,  C<Cwd::change_drive(name)>, 
C<Cwd::sys_is_absolute(name)>,	C<Cwd::sys_is_rooted(name)>, 
C<Cwd::sys_is_relative(name)>,	C<Cwd::sys_cwd(name)>, 
C<Cwd::sys_abspath(name, dir)>,  C<Cwd::extLibpath([type])>, 
C<Cwd::extLibpath_set( path [, type ] )>,
C<OS2::Error(do_harderror,do_exception)>, C<OS2::Errors2Drive(drive)>,
OS2::SysInfo(), OS2::BootDrive(), C<OS2::MorphPM(serve)>,
C<OS2::UnMorphPM(serve)>, C<OS2::Serve_Messages(force)>,
C<OS2::Process_Messages(force [, cnt])>, C<OS2::_control87(new,mask)>,
OS2::get_control87(), C<OS2::set_control87_em(new=MCW_EM,mask=MCW_EM)>
d11908 1
a11908 1
=item Prebuilt variables:
d11910 1
a11910 1
$OS2::emx_rev, $OS2::emx_env, $OS2::os_ver
d11912 4
a11915 1
=item Misfeatures
d11917 1
a11917 1
=item Modifications
d11919 1
a11919 2
C<popen>, C<tmpnam>, C<tmpfile>, C<ctermid>, C<stat>, C<mkdir>, C<rmdir>,
C<flock>
d11921 1
a11921 1
=item Identifying DLLs
d11923 1
a11923 1
=item Centralized management of resources
d11925 1
a11925 1
C<HAB>, C<HMQ>
d11929 12
a11940 1
=item Perl flavors
d11944 8
a11951 1
=item F<perl.exe>
d11953 1
a11953 1
=item F<perl_.exe>
d11955 1
a11955 1
=item F<perl__.exe>
d11957 1
a11957 1
=item F<perl___.exe>
d11959 1
a11959 1
=item Why strange names?
d11961 1
a11961 1
=item Why dynamic linking?
d11963 14
a11976 1
=item Why chimera build?
d11978 1
a11978 1
=back
d11980 1
a11980 1
=item ENVIRONMENT
d11984 1
a11984 1
=item C<PERLLIB_PREFIX>
d11986 3
a11988 1
=item C<PERL_BADLANG>
d11990 1
a11990 1
=item C<PERL_BADFREE>
d11992 1
a11992 1
=item C<PERL_SH_DIR>
d11994 1
a11994 1
=item C<USE_PERL_FLOCK>
d11996 1
a11996 1
=item C<TMP> or C<TEMP>
d12000 2
a12001 1
=item Evolution
d12005 3
a12007 1
=item Priorities
d12009 1
a12009 1
=item DLL name mangling
d12011 2
a12012 1
=item Threading
d12014 1
a12014 1
=item Calls to external programs
d12016 1
a12016 1
=item Memory allocation
d12018 1
a12018 1
=item Threads
d12020 1
a12020 1
C<COND_WAIT>, F<os2.c>
d12024 3
a12026 1
=back
d12028 1
a12028 1
=over 4
d12030 1
a12030 1
=item AUTHOR
d12036 1
a12036 1
=head2 perlos390, README.os390 - building and installing Perl for OS/390.
d12042 14
a12055 1
=item DESCRIPTION
d12057 1
a12057 1
=over 4
d12059 1
a12059 1
=item Unpacking
d12061 1
a12061 1
=item Setup and utilities
d12063 1
a12063 1
=item Configure
d12065 3
a12067 1
=item Build, test, install
d12069 1
a12069 1
=item build anomalies
d12071 1
a12071 1
=item testing anomalies
d12073 1
a12073 1
=item installation anomalies
d12075 1
a12075 5
=item Usage Hints

=item Floating point anomalies

=item Modules and Extensions
d12079 2
a12080 3
=item AUTHORS

=item SEE ALSO
d12084 1
a12084 1
=item Mailing list
d12086 1
a12086 1
=back
d12088 1
a12088 1
=item HISTORY
d12092 2
a12093 1
=head2 perlsolaris, README.solaris - Perl version 5 on Solaris systems
d12097 2
d12101 1
a12101 1
=over 4
d12103 1
a12103 1
=item Solaris Version Numbers.
d12107 1
a12107 1
=item RESOURCES
d12109 1
a12109 1
Solaris FAQ, Precompiled Binaries, Solaris Documentation
d12111 1
a12111 1
=item SETTING UP
d12113 1
a12113 1
=over 4
d12115 1
a12115 1
=item File Extraction Problems.
d12117 1
a12117 1
=item Compiler and Related Tools.
d12119 1
a12119 1
=item Environment
d12123 1
a12123 1
=item RUN CONFIGURE.
d12127 1
a12127 1
=item 64-bit Issues.
d12129 1
a12129 1
=item Threads.
d12131 1
a12131 1
=item Malloc Issues.
d12133 1
a12133 1
=back
d12135 1
a12135 1
=item MAKE PROBLEMS.
d12137 1
a12137 7
Dynamic Loading Problems With GNU as and GNU ld, ld.so.1: ./perl: fatal:
relocation error:, dlopen: stub interception failed, #error "No
DATAMODEL_NATIVE specified", sh: ar: not found

=item MAKE TEST

=over 4
d12139 1
a12139 1
=item op/stat.t test 4
d12143 1
a12143 3
=item PREBUILT BINARIES.

=item RUNTIME ISSUES.
d12147 1
a12147 1
=item Limits on Numbers of Open Files.
d12149 1
a12149 1
=back
d12151 1
a12151 1
=item SOLARIS-SPECIFIC MODULES.
d12153 1
a12153 1
=item SOLARIS-SPECIFIC PROBLEMS WITH MODULES.
d12155 1
a12155 1
=over 4
d12157 1
a12157 1
=item Proc::ProcessTable
d12159 1
a12159 1
=item BSD::Resource
d12161 1
a12161 1
=item Net::SSLeay
d12165 5
a12169 1
=item AUTHOR
d12171 1
a12171 1
=item LAST MODIFIED
d12175 2
a12176 1
=head2 perlvmesa, README.vmesa - building and installing Perl for VM/ESA.
d12184 1
a12184 1
=over 4
d12186 1
a12186 1
=item Unpacking
d12188 1
a12188 1
=item Setup and utilities
d12190 1
a12190 1
=item Configure
d12192 1
a12192 6
Don't turn on the compiler optimization flag "-O".  There's a bug in the
compiler (APAR PQ18812) that generates some bad code the optimizer is on,
As VM/ESA doesn't fully support the fork() API programs relying on this
call will not work. I've replaced fork()/exec() with spawn() and the
standalone exec() with spawn(). This has a side effect when opening unnamed
pipes in a shell script: there is no child process generated under
d12194 1
a12194 1
=item testing anomalies
d12196 1
a12196 1
=item Usage Hints
d12198 1
a12198 3
When using perl on VM/ESA please keep in mind that the EBCDIC and ASCII
character sets are different.  Perl builtin functions that may behave
differently under EBCDIC are mentioned in the perlport.pod document.
d12200 1
a12200 1
=back
d12202 1
a12202 1
=item AUTHORS
d12204 1
a12204 1
=item SEE ALSO
d12208 3
a12210 1
=item Mailing list
d12212 1
a12212 1
=back
d12216 1
a12216 1
=head2 perlvms - VMS-specific documentation for Perl
d12220 2
d12224 3
a12226 1
=item Installation
d12228 1
a12228 1
=item Organization of Perl Images
d12232 3
a12234 1
=item Core Images
d12236 1
a12236 1
=item Perl Extensions
d12238 1
a12238 1
=item Installing static extensions
d12240 1
a12240 1
=item Installing dynamic extensions
d12244 11
a12254 1
=item File specifications
d12256 1
a12256 1
=over 4
d12258 1
a12258 1
=item Syntax
d12260 1
a12260 1
=item Wildcard expansion
d12262 1
a12262 1
=item Pipes
d12264 2
a12265 1
=back
d12267 1
a12267 1
=item PERL5LIB and PERLLIB
d12269 1
a12269 1
=item Command line
d12271 1
a12271 1
=over 4
d12273 2
a12274 1
=item I/O redirection and backgrounding
d12276 1
a12276 1
=item Command line switches
d12278 1
a12278 1
-i, -S, -u
d12282 1
a12282 1
=item Perl functions
d12284 1
a12284 4
File tests, backticks, binmode FILEHANDLE, crypt PLAINTEXT, USER, dump,
exec LIST, fork, getpwent, getpwnam, getpwuid, gmtime, kill, qx//, select
(system call), stat EXPR, system LIST, time, times, unlink LIST, utime
LIST, waitpid PID,FLAGS
d12286 1
a12286 1
=item Perl variables
d12288 1
a12288 1
%ENV, CRTL_ENV, CLISYM_[LOCAL], Any other string, $!, $^E, $?, $^S, $|
d12290 1
a12290 1
=item Standard modules with VMS-specific differences
d12292 1
a12292 1
=over 4
d12294 2
a12295 1
=item SDBM_File
d12297 1
a12297 1
=back
d12299 1
a12299 1
=item Revision date
d12305 1
a12305 1
=head2 perlvos, README.vos - Perl for Stratus VOS
d12311 1
a12311 3
=over 4

=item Stratus POSIX Support
d12315 1
a12315 1
=item INSTALLING PERL IN VOS
d12319 1
a12319 1
=item Compiling Perl 5 on VOS
d12321 1
a12321 1
=item Installing Perl 5 on VOS
d12323 1
a12323 1
=back
d12325 1
a12325 1
=item USING PERL IN VOS
d12327 2
a12328 1
=over 4
d12330 1
a12330 7
=item Unimplemented Features

=item Restrictions

=back

=item SUPPORT STATUS
a12333 2
=item LAST UPDATE

d12336 1
a12336 1
=head2 perlwin32 - Perl under Win32
d12344 3
d12349 3
a12351 1
=item Setting Up
d12353 1
a12353 1
Make, Command Shell, Borland C++, Microsoft Visual C++, Mingw32 with GCC
d12355 1
a12355 1
=item Building
d12357 1
a12357 1
=item Testing
d12359 1
a12359 1
=item Installation
d12361 1
a12361 1
=item Usage Hints
d12363 1
a12363 3
Environment Variables, File Globbing, Using perl from the command line,
Building Extensions, Command-line Wildcard Expansion, Win32 Specific
Extensions, Running Perl Scripts, Miscellaneous Things
a12366 8
=item BUGS AND CAVEATS

=item AUTHORS

Gary Ng E<lt>71564.1743@@CompuServe.COME<gt>, Gurusamy Sarathy
E<lt>gsar@@activestate.comE<gt>, Nick Ing-Simmons
E<lt>nick@@ni-s.u-net.comE<gt>

a12368 2
=item HISTORY

d12371 1
a12371 3
=head1 PRAGMA DOCUMENTATION

=head2 attrs - set/get attributes of a subroutine (deprecated)
a12378 2
method, locked

d12381 1
a12381 1
=head2 re - Perl pragma to alter regular expression behaviour
d12389 8
d12399 1
a12399 1
=head2 attributes - get/set subroutine or variable attributes
d12401 1
a12401 1
=over 4
d12403 1
a12403 1
=item SYNOPSIS
d12405 1
a12405 1
=item DESCRIPTION
d12407 1
a12407 1
=over 4
d12409 1
a12409 1
=item Built-in Attributes
d12411 1
a12411 1
locked, method, lvalue
d12413 1
a12413 1
=item Available Subroutines
d12415 1
a12415 3
get, reftype

=item Package-specific Attribute Handling
d12417 1
a12417 1
FETCH_I<type>_ATTRIBUTES, MODIFY_I<type>_ATTRIBUTES
d12419 1
a12419 1
=item Syntax of Attribute Lists
d12423 1
a12423 1
=item EXPORTS
d12427 1
a12427 1
=item Default exports
d12429 1
a12429 1
=item Available exports
d12431 2
a12432 1
=item Export tags defined
d12434 1
a12434 1
=back
d12436 1
a12436 1
=item EXAMPLES
d12438 1
a12438 1
=item SEE ALSO
d12442 4
a12445 1
=head2 attrs - set/get attributes of a subroutine (deprecated)
d12453 1
a12453 1
method, locked
d12457 1
a12457 1
=head2 autouse - postpone load of modules until a function is used
d12465 11
a12475 1
=item WARNING
d12483 2
a12484 1
=head2 base - Establish IS-A relationship with base class at compile time
d12492 3
a12494 1
=item HISTORY
d12496 1
a12496 1
=item SEE ALSO
d12498 1
a12498 1
=back
d12500 1
a12500 1
=head2 blib - Use MakeMaker's uninstalled version of a package
d12502 1
a12502 1
=over 4
d12504 1
a12504 1
=item SYNOPSIS
d12506 1
a12506 1
=item DESCRIPTION
d12508 1
a12508 1
=item BUGS
d12510 1
a12510 1
=item AUTHOR
d12512 1
a12512 1
=back
d12514 1
a12514 2
=head2 bytes - Perl pragma to force byte semantics rather than character
semantics
d12516 1
a12516 1
=over 4
d12518 1
a12518 1
=item SYNOPSIS
d12520 1
a12520 1
=item DESCRIPTION
d12522 1
a12522 1
=item SEE ALSO
d12524 1
a12524 1
=back
d12526 2
a12527 2
=head2 charnames - define character names for C<\N{named}> string literal
escape.
d12535 3
a12537 1
=item CUSTOM TRANSLATORS
d12539 1
a12539 1
=item BUGS
d12541 1
a12541 1
=back
d12543 2
a12544 1
=head2 constant - Perl pragma to declare constants
d12552 1
a12552 1
=item NOTES
d12554 1
a12554 1
=item TECHNICAL NOTE
d12556 1
a12556 7
=item BUGS

=item AUTHOR

=item COPYRIGHT

=back
d12558 1
a12558 2
=head2 diagnostics - Perl compiler pragma to force verbose warning
diagnostics
d12568 1
a12568 1
=item The C<diagnostics> Pragma
d12570 1
a12570 1
=item The I<splain> Program
d12574 1
a12574 1
=item EXAMPLES
d12576 1
a12576 1
=item INTERNALS
d12578 1
a12578 1
=item BUGS
d12580 1
a12580 1
=item AUTHOR
d12584 1
a12584 1
=head2 fields - compile-time class fields
d12592 1
a12592 3
new, phash

=item SEE ALSO
a12595 2
=head2 filetest - Perl pragma to control the filetest permission operators

d12598 1
a12598 1
=item SYNOPSIS
d12600 1
a12600 5
=item DESCRIPTION

=over 4

=item subpragma access
d12604 1
a12604 1
=back
d12606 1
a12606 2
=head2 integer - Perl pragma to use integer arithmetic instead of floating
point
d12608 1
a12608 1
=over 4
d12610 1
a12610 1
=item SYNOPSIS
d12612 1
a12612 1
=item DESCRIPTION
d12614 1
a12614 1
=back
d12616 1
a12616 1
=head2 less - perl pragma to request less of something from the compiler
d12618 1
a12618 1
=over 4
d12620 1
a12620 1
=item SYNOPSIS
d12622 1
a12622 1
=item DESCRIPTION
d12624 1
a12624 1
=back
d12626 1
a12626 1
=head2 lib - manipulate @@INC at compile time
d12628 1
a12628 1
=over 4
d12630 1
a12630 1
=item SYNOPSIS
d12632 1
a12632 1
=item DESCRIPTION
d12634 1
a12634 1
=over 4
d12636 1
a12636 1
=item Adding directories to @@INC
d12638 1
a12638 1
=item Deleting directories from @@INC
d12640 1
a12640 1
=item Restoring original @@INC
d12642 1
a12642 1
=back
d12644 1
a12644 5
=item SEE ALSO

=item AUTHOR

=back
d12646 1
a12646 2
=head2 locale - Perl pragma to use and avoid POSIX locales for built-in
operations
d12650 1
a12650 1
=item SYNOPSIS
d12652 1
a12652 1
=item DESCRIPTION
d12656 1
a12656 1
=head2 open - perl pragma to set default disciplines for input and output
d12658 1
a12658 1
=over 4
d12660 1
a12660 1
=item SYNOPSIS
d12662 1
a12662 1
=item DESCRIPTION
d12664 1
a12664 1
=item UNIMPLEMENTED FUNCTIONALITY
d12666 1
a12666 1
=item SEE ALSO
d12668 1
a12668 1
=back
d12670 1
a12670 1
=head2 ops - Perl pragma to restrict unsafe operations when compiling
d12672 1
a12672 1
=over 4
d12674 1
a12674 1
=item SYNOPSIS	
d12676 1
a12676 1
=item DESCRIPTION
d12678 1
a12678 1
=item SEE ALSO
d12680 1
a12680 1
=back
d12682 1
a12682 1
=head2 overload - Package for overloading perl operations
d12684 1
a12684 1
=over 4
d12686 1
a12686 1
=item SYNOPSIS
d12688 1
a12688 1
=item DESCRIPTION
d12690 1
a12690 1
=over 4
d12692 1
a12692 1
=item Declaration of overloaded functions
d12694 1
a12694 1
=item Calling Conventions for Binary Operations
d12696 1
a12696 1
FALSE, TRUE, C<undef>
d12698 1
a12698 1
=item Calling Conventions for Unary Operations
d12700 1
a12700 1
=item Calling Conventions for Mutators
d12702 1
a12702 1
C<++> and C<-->, C<x=> and other assignment versions
d12704 1
a12704 1
=item Overloadable Operations
d12706 1
a12706 3
I<Arithmetic operations>, I<Comparison operations>, I<Bit operations>,
I<Increment and decrement>, I<Transcendental functions>, I<Boolean, string
and numeric conversion>, I<Iteration>, I<Dereferencing>, I<Special>
d12708 1
a12708 1
=item Inheritance and overloading
d12710 1
a12710 2
Strings as values of C<use overload> directive, Overloading of an operation
is inherited by derived classes
d12712 1
a12712 1
=back
d12714 1
a12714 1
=item SPECIAL SYMBOLS FOR C<use overload>
d12716 1
a12716 1
=over 4
d12718 1
a12718 1
=item Last Resort
d12720 1
a12720 1
=item Fallback
d12722 1
a12722 1
C<undef>, TRUE, defined, but FALSE
d12724 1
a12724 1
=item Copy Constructor
d12726 1
a12726 1
B<Example>
d12728 1
a12728 1
=back
d12730 1
a12730 1
=item MAGIC AUTOGENERATION
d12732 1
a12732 4
I<Assignment forms of arithmetic operations>, I<Conversion operations>,
I<Increment and decrement>, C<abs($a)>, I<Unary minus>, I<Negation>,
I<Concatenation>, I<Comparison operations>, I<Iterator>, I<Dereferencing>,
I<Copy operator>
d12734 1
a12734 1
=item Losing overloading
d12736 1
a12736 1
=item Run-time Overloading
d12738 1
a12738 1
=item Public functions
d12740 1
a12740 1
overload::StrVal(arg), overload::Overloaded(arg), overload::Method(obj,op)
d12742 1
a12742 1
=item Overloading constants
d12744 1
a12744 1
integer, float, binary, q, qr
d12746 1
a12746 1
=item IMPLEMENTATION
d12748 1
a12748 1
=item Metaphor clash
d12750 1
a12750 1
=item Cookbook
d12752 1
a12752 1
=over 4
d12754 1
a12754 1
=item Two-face scalars
d12756 1
a12756 1
=item Two-face references
d12758 1
a12758 1
=item Symbolic calculator
d12760 1
a12760 1
=item I<Really> symbolic calculator
d12762 1
a12762 1
=back
d12764 1
a12764 1
=item AUTHOR
d12766 1
a12766 1
=item DIAGNOSTICS
d12768 1
a12768 2
Odd number of arguments for overload::constant, `%s' is not an overloadable
type, `%s' is not a code reference
d12770 1
a12770 1
=item BUGS
d12772 1
a12772 1
=back
d12774 1
a12774 1
=head2 re - Perl pragma to alter regular expression behaviour
d12778 1
a12778 3
=item SYNOPSIS

=item DESCRIPTION
d12782 2
a12783 1
=head2 sigtrap - Perl pragma to enable simple signal handling
a12790 2
=item OPTIONS

d12793 1
a12793 1
=item SIGNAL HANDLERS
d12795 1
a12795 1
B<stack-trace>, B<die>, B<handler> I<your-handler>
d12797 1
a12797 1
=item SIGNAL LISTS
d12799 1
a12799 1
B<normal-signals>, B<error-signals>, B<old-interface-signals>
d12801 1
a12801 1
=item OTHER
d12803 1
a12803 1
B<untrapped>, B<any>, I<signal>, I<number>
d12805 1
a12805 3
=back

=item EXAMPLES
d12809 1
a12809 1
=head2 strict - Perl pragma to restrict unsafe constructs
d12811 1
a12811 1
=over 4
d12813 1
a12813 1
=item SYNOPSIS
d12815 1
a12815 1
=item DESCRIPTION
d12817 1
a12817 1
C<strict refs>, C<strict vars>, C<strict subs>
d12819 1
a12819 1
=back
d12821 1
a12821 1
=head2 subs - Perl pragma to predeclare sub names
d12823 1
a12823 1
=over 4
d12825 1
a12825 1
=item SYNOPSIS
d12827 1
a12827 1
=item DESCRIPTION
d12829 1
a12829 1
=back
d12831 1
a12831 1
=head2 utf8 - Perl pragma to enable/disable UTF-8 in source code
d12833 1
a12833 1
=over 4
d12835 1
a12835 1
=item SYNOPSIS
d12837 1
a12837 1
=item DESCRIPTION
d12839 1
a12839 1
=item SEE ALSO
d12841 1
a12841 1
=back
d12843 1
a12843 1
=head2 vars - Perl pragma to predeclare global variable names (obsolete)
d12845 1
a12845 1
=over 4
d12847 1
a12847 1
=item SYNOPSIS
d12849 1
a12849 1
=item DESCRIPTION
d12851 1
a12851 1
=back
d12853 1
a12853 1
=head2 warnings - Perl pragma to control optional warnings
d12855 1
a12855 1
=over 4
d12857 1
a12857 1
=item SYNOPSIS
d12859 1
a12859 1
=item DESCRIPTION
d12861 1
a12861 5
use warnings::register, warnings::enabled(), warnings::enabled($category),
warnings::enabled($object), warnings::warn($message),
warnings::warn($category, $message), warnings::warn($object, $message),
warnings::warnif($message), warnings::warnif($category, $message),
warnings::warnif($object, $message)
d12863 1
a12863 1
=back
d12865 1
a12865 1
=head2 warnings::register - warnings import function
d12867 1
a12867 1
=head1 MODULE DOCUMENTATION
d12869 1
a12869 1
=head2 AnyDBM_File - provide framework for multiple DBMs
d12871 1
a12871 1
=over 4
d12873 1
a12873 1
=item SYNOPSIS
d12875 1
a12875 1
=item DESCRIPTION
d12877 1
a12877 1
=over 4
d12879 1
a12879 1
=item DBM Comparisons
d12881 1
a12881 1
[0], [1], [2], [3]
d12883 1
a12883 1
=back
d12885 1
a12885 1
=item SEE ALSO
d12887 1
a12887 1
=back
d12889 2
a12890 1
=head2 AutoLoader - load subroutines only on demand
d12898 1
a12898 1
=over 4
d12900 1
a12900 1
=item Subroutine Stubs
d12902 1
a12902 1
=item Using B<AutoLoader>'s AUTOLOAD Subroutine
d12904 1
a12904 1
=item Overriding B<AutoLoader>'s AUTOLOAD Subroutine
d12906 1
a12906 1
=item Package Lexicals
d12908 1
a12908 1
=item Not Using AutoLoader
d12910 1
a12910 1
=item B<AutoLoader> vs. B<SelfLoader>
d12912 1
a12912 1
=back
d12914 1
a12914 1
=item CAVEATS
d12916 1
a12916 1
=item SEE ALSO
d12918 1
a12918 1
=back
d12920 1
a12920 1
=head2 AutoSplit - split a package for autoloading
d12922 1
a12922 1
=over 4
d12924 1
a12924 1
=item SYNOPSIS
d12926 1
a12926 1
=item DESCRIPTION
d12928 1
a12928 1
$keep, $check, $modtime
d12932 1
a12932 1
=item Multiple packages
d12934 1
a12934 3
=back

=item DIAGNOSTICS
d12938 1
a12938 1
=head2 B - The Perl Compiler
d12946 3
a12948 1
=item OVERVIEW OF CLASSES
d12952 1
a12952 1
=item SV-RELATED CLASSES
d12954 1
a12954 1
=item B::SV METHODS
d12956 1
a12956 1
REFCNT, FLAGS
d12958 1
a12958 1
=item B::IV METHODS
d12960 1
a12960 1
IV, IVX, UVX, int_value, needs64bits, packiv
d12962 1
a12962 1
=item B::NV METHODS
d12964 1
a12964 1
NV, NVX
d12966 1
a12966 1
=item B::RV METHODS
d12968 1
a12968 1
RV
d12970 1
a12970 1
=item B::PV METHODS
d12972 1
a12972 1
PV, PVX
d12974 1
a12974 1
=item B::PVMG METHODS
d12976 1
a12976 1
MAGIC, SvSTASH
d12978 1
a12978 1
=item B::MAGIC METHODS
d12980 17
a12996 1
MOREMAGIC, PRIVATE, TYPE, FLAGS, OBJ, PTR
d12998 1
a12998 1
=item B::PVLV METHODS
d13000 2
a13001 1
TARGOFF, TARGLEN, TYPE, TARG
d13003 1
a13003 1
=item B::BM METHODS
d13005 1
a13005 1
USEFUL, PREVIOUS, RARE, TABLE
d13007 1
a13007 1
=item B::GV METHODS
d13009 1
a13009 2
is_empty, NAME, SAFENAME, STASH, SV, IO, FORM, AV, HV, EGV, CV, CVGEN,
LINE, FILE, FILEGV, GvREFCNT, FLAGS
d13011 1
a13011 1
=item B::IO METHODS
d13013 3
a13015 2
LINES, PAGE, PAGE_LEN, LINES_LEFT, TOP_NAME, TOP_GV, FMT_NAME, FMT_GV,
BOTTOM_NAME, BOTTOM_GV, SUBPROCESS, IoTYPE, IoFLAGS
d13017 1
a13017 1
=item B::AV METHODS
d13019 1
a13019 1
FILL, MAX, OFF, ARRAY, AvFLAGS
d13021 1
a13021 4
=item B::CV METHODS

STASH, START, ROOT, GV, FILE, DEPTH, PADLIST, OUTSIDE, XSUB, XSUBANY,
CvFLAGS
d13023 1
a13023 1
=item B::HV METHODS
d13025 1
a13025 1
FILL, MAX, KEYS, RITER, NAME, PMROOT, ARRAY
d13027 1
a13027 1
=item OP-RELATED CLASSES
d13029 1
a13029 1
=item B::OP METHODS
d13031 1
a13031 25
next, sibling, name, ppaddr, desc, targ, type, seq, flags, private

=item B::UNOP METHOD

first

=item B::BINOP METHOD

last

=item B::LOGOP METHOD

other

=item B::LISTOP METHOD

children

=item B::PMOP METHODS

pmreplroot, pmreplstart, pmnext, pmregexp, pmflags, pmpermflags, precomp

=item B::SVOP METHOD

sv, gv
d13033 1
a13033 1
=item B::PADOP METHOD
d13035 1
a13035 1
padix
d13037 1
a13037 1
=item B::PVOP METHOD
d13039 1
a13039 1
pv
d13041 1
a13041 1
=item B::LOOP METHODS
d13043 1
a13043 1
redoop, nextop, lastop
d13045 1
a13045 1
=item B::COP METHODS
d13047 2
a13048 1
label, stash, file, cop_seq, arybase, line
d13050 1
a13050 1
=back
d13052 1
a13052 1
=item FUNCTIONS EXPORTED BY C<B>
d13054 1
a13054 4
main_cv, init_av, main_root, main_start, comppadlist, sv_undef, sv_yes,
sv_no, amagic_generation, walkoptree(OP, METHOD), walkoptree_debug(DEBUG),
walksymtable(SYMREF, METHOD, RECURSE), svref_2object(SV), ppname(OPNUM),
hash(STR), cast_I32(I), minus_c, cstring(STR), class(OBJ), threadsv_names
d13060 1
a13060 2
=head2 B::Asmdata - Autogenerated data about Perl ops, used to generate
bytecode
d13068 1
a13068 1
=item AUTHOR
d13072 1
a13072 1
=head2 B::Assembler - Assemble Perl bytecode
a13079 2
=item AUTHORS

d13082 2
a13083 1
=head2 B::Bblock - Walk basic blocks
d13091 2
d13095 2
d13099 1
a13099 1
=head2 B::Bytecode - Perl compiler's bytecode backend
d13107 1
a13107 1
=item OPTIONS
d13109 1
a13109 4
B<-ofilename>, B<-afilename>, B<-->, B<-f>, B<-fcompress-nullops>,
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-On>, B<-D>, B<-Do>,
B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-upackage>    Stores package in the
output.    =back
d13111 1
a13111 1
=item EXAMPLES
d13113 1
a13113 1
=item BUGS
d13115 1
a13115 1
=item AUTHORS
d13119 1
a13119 1
=head2 B::C - Perl compiler's C backend
d13127 3
a13129 1
=item OPTIONS
d13131 1
a13131 2
B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-D>, B<-Do>, B<-Dc>, B<-DA>,
B<-DC>, B<-DM>, B<-f>, B<-fcog>, B<-fno-cog>, B<-On>, B<-llimit>
d13133 1
a13133 1
=item EXAMPLES
d13135 1
a13135 1
=item BUGS
d13141 1
a13141 1
=head2 B::CC - Perl compiler's optimized C translation backend
d13149 1
a13149 1
=item OPTIONS
d13151 1
a13151 3
B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-mModulename>, B<-D>, B<-Dr>,
B<-DO>, B<-Ds>, B<-Dp>, B<-Dq>, B<-Dl>, B<-Dt>, B<-f>,
B<-ffreetmps-each-bblock>, B<-ffreetmps-each-loop>, B<-fomit-taint>, B<-On>
d13153 1
a13153 1
=item EXAMPLES
d13155 1
a13155 3
=item BUGS

=item DIFFERENCES
d13159 1
a13159 1
=item Loops
d13161 1
a13161 1
=item Context of ".."
d13163 1
a13163 1
=item Arithmetic
d13165 1
a13165 1
=item Deprecated features
d13167 1
a13167 3
=back

=item AUTHOR
d13171 1
a13171 1
=head2 B::Concise - Walk Perl syntax tree, printing concise info about ops
d13179 1
a13179 1
=item OPTIONS
d13181 1
a13181 3
B<-basic>, B<-exec>, B<-tree>, B<-compact>, B<-loose>, B<-vt>, B<-ascii>,
B<-main>, B<-base>I<n>, B<-bigendian>, B<-littleendian>, B<-concise>,
B<-terse>, B<-linenoise>, B<-debug>, B<-env>
d13183 1
a13183 1
=item FORMATTING SPECIFICATIONS
d13185 1
a13185 10
B<(x(>I<exec_text>B<;>I<basic_text>B<)x)>, B<(*(>I<text>B<)*)>,
B<(*(>I<text1>B<;>I<text2>B<)*)>, B<(?(>I<text1>B<#>I<var>I<Text2>B<)?)>,
B<#>I<var>, B<#>I<var>I<N>, B<~>, B<#addr>, B<#arg>, B<#class>,
B<#classym>, B<#coplabel>, B<#exname>, B<#extarg>, B<#firstaddr>,
B<#flags>, B<#flagval>, B<#hyphenseq>, B<#label>, B<#lastaddr>, B<#name>,
B<#NAME>, B<#next>, B<#nextaddr>, B<#noise>, B<#private>, B<#privval>,
B<#seq>, B<#seqnum>, B<#sibaddr>, B<#svaddr>, B<#svclass>, B<#svval>,
B<#targ>, B<#targarg>, B<#targarglife>, B<#typenum>

=item ABBREVIATIONS
d13189 1
a13189 1
=item OP flags abbreviations
d13191 1
a13191 1
=item OP class abbreviations
d13193 1
a13193 1
=back
d13199 1
a13199 1
=head2 B::Debug - Walk Perl syntax tree, printing debug info about ops
d13207 1
a13207 1
=item AUTHOR
d13209 1
a13209 1
=back
d13211 1
a13211 1
=head2 B::Deparse - Perl compiler backend to produce perl code
d13213 1
a13213 1
=over 4
d13215 1
a13215 1
=item SYNOPSIS
d13217 1
a13217 1
=item DESCRIPTION
d13219 1
a13219 1
=item OPTIONS
d13221 1
a13221 2
B<-l>, B<-p>, B<-q>, B<-u>I<PACKAGE>, B<-s>I<LETTERS>, B<C>, B<i>I<NUMBER>,
B<T>, B<v>I<STRING>B<.>, B<-x>I<LEVEL>
d13223 1
a13223 1
=item USING B::Deparse AS A MODULE
d13227 1
a13227 1
=item Synopsis
d13229 1
a13229 1
=item Description
d13231 1
a13231 1
=item new
d13233 1
a13233 3
=item coderef2text

=back
d13239 4
d13245 1
a13245 1
=head2 B::Disassembler - Disassemble Perl bytecode
d13253 1
a13253 1
=item AUTHOR
d13255 1
a13255 1
=back
d13257 1
a13257 1
=head2 B::Lint - Perl lint
d13259 3
a13261 1
=over 4
d13263 1
a13263 1
=item SYNOPSIS
d13265 3
a13267 1
=item DESCRIPTION
d13269 1
a13269 1
=item OPTIONS AND LINT CHECKS
d13271 1
a13271 2
B<context>, B<implicit-read> and B<implicit-write>, B<dollar-underscore>,
B<private-names>, B<undefined-subs>, B<regexp-variables>, B<all>, B<none>
d13273 1
a13273 1
=item NON LINT-CHECK OPTIONS
d13275 1
a13275 1
B<-u Package>
d13277 1
a13277 1
=item BUGS
d13279 1
a13279 1
=item AUTHOR
d13283 1
a13283 1
=head2 B::O, O - Generic interface to Perl Compiler backends
d13291 7
a13297 1
=item CONVENTIONS
d13299 1
a13299 1
=item IMPLEMENTATION
d13305 1
a13305 1
=head2 B::Showlex - Show lexical variables used in functions or files
d13313 1
a13313 1
=item AUTHOR
d13317 1
a13317 1
=head2 B::Stackobj - Helper module for CC backend
d13325 9
a13333 1
=item AUTHOR
d13337 1
a13337 3
=head2 B::Stash - show what stashes are loaded

=head2 B::Terse - Walk Perl syntax tree, printing terse info about ops
a13344 2
=item AUTHOR

d13347 1
a13347 1
=head2 B::Xref - Generates cross reference reports for Perl programs
d13355 1
a13355 1
=item OPTIONS
d13357 1
a13357 1
C<-oFILENAME>, C<-r>, C<-D[tO]>
d13359 1
a13359 1
=item BUGS
d13361 1
a13361 1
=item AUTHOR
d13365 1
a13365 1
=head2 Bblock, B::Bblock - Walk basic blocks
d13373 7
a13379 1
=item AUTHOR
d13383 1
a13383 1
=head2 Benchmark - benchmark running times of Perl code
d13391 19
a13409 1
=over 4
d13411 1
a13411 1
=item Methods
d13413 1
a13413 1
new, debug, iters
d13415 1
a13415 1
=item Standard Exports
d13417 1
a13417 3
timeit(COUNT, CODE), timethis ( COUNT, CODE, [ TITLE, [ STYLE ]] ),
timethese ( COUNT, CODEHASHREF, [ STYLE ] ), timediff ( T1, T2 ), timestr (
TIMEDIFF, [ STYLE, [ FORMAT ] ] )
d13419 1
a13419 1
=item Optional Exports
d13421 1
a13421 3
clearcache ( COUNT ), clearallcache ( ), cmpthese ( COUT, CODEHASHREF, [
STYLE ] ), cmpthese ( RESULTSHASHREF ), countit(TIME, CODE), disablecache (
), enablecache ( ), timesum ( T1, T2 )
d13423 1
a13423 1
=back
d13425 1
a13425 1
=item NOTES
d13427 1
a13427 1
=item EXAMPLES
d13429 1
a13429 1
=item INHERITANCE
d13431 1
a13431 1
=item CAVEATS
d13433 1
a13433 1
=item SEE ALSO
d13435 1
a13435 1
=item AUTHORS
d13437 1
a13437 1
=item MODIFICATION HISTORY
d13439 1
a13439 1
=back
d13441 1
a13441 1
=head2 ByteLoader - load byte compiled perl code
a13448 4
=item AUTHOR

=item SEE ALSO

d13451 2
a13452 1
=head2 Bytecode, B::Bytecode - Perl compiler's bytecode backend
d13460 3
a13462 1
=item OPTIONS
d13464 1
a13464 4
B<-ofilename>, B<-afilename>, B<-->, B<-f>, B<-fcompress-nullops>,
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-On>, B<-D>, B<-Do>,
B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-upackage>    Stores package in the
output.    =back
d13466 1
a13466 1
=item EXAMPLES
d13468 1
a13468 1
=item BUGS
d13470 1
a13470 1
=item AUTHORS
d13472 1
a13472 1
=back
d13474 1
a13474 1
=head2 CGI - Simple Common Gateway Interface Class
d13476 1
a13476 1
=over 4
d13478 1
a13478 1
=item SYNOPSIS
d13480 1
a13480 1
=item ABSTRACT
d13482 1
a13482 1
=item DESCRIPTION
d13484 1
a13484 1
=over 4
d13486 1
a13486 1
=item PROGRAMMING STYLE
d13488 1
a13488 1
=item CALLING CGI.PM ROUTINES
d13490 1
a13490 1
=item CREATING A NEW QUERY OBJECT (OBJECT-ORIENTED STYLE):
d13492 1
a13492 1
=item CREATING A NEW QUERY OBJECT FROM AN INPUT FILE
d13494 1
a13494 1
=item FETCHING A LIST OF KEYWORDS FROM THE QUERY:
d13496 1
a13496 1
=item FETCHING THE NAMES OF ALL THE PARAMETERS PASSED TO YOUR SCRIPT:
d13498 1
a13498 1
=item FETCHING THE VALUE OR VALUES OF A SINGLE NAMED PARAMETER:
d13500 1
a13500 1
=item SETTING THE VALUE(S) OF A NAMED PARAMETER:
d13502 1
a13502 1
=item APPENDING ADDITIONAL VALUES TO A NAMED PARAMETER:
d13504 1
a13504 1
=item IMPORTING ALL PARAMETERS INTO A NAMESPACE:
d13506 1
a13506 1
=item DELETING A PARAMETER COMPLETELY:
d13508 1
a13508 1
=item DELETING ALL PARAMETERS:
d13510 1
a13510 1
=item DIRECT ACCESS TO THE PARAMETER LIST:
d13512 1
a13512 1
=item FETCHING THE PARAMETER LIST AS A HASH:
d13514 1
a13514 1
=item SAVING THE STATE OF THE SCRIPT TO A FILE:
d13516 1
a13516 1
=item RETRIEVING CGI ERRORS
d13518 1
a13518 1
=item USING THE FUNCTION-ORIENTED INTERFACE
d13520 1
a13520 2
B<:cgi>, B<:form>, B<:html2>, B<:html3>, B<:netscape>, B<:html>,
B<:standard>, B<:all>
d13522 1
a13522 1
=item PRAGMAS
d13524 1
a13524 2
-any, -compile, -nosticky, -no_xhtml, -nph, -newstyle_urls, -oldstyle_urls,
-autoload, -no_debug, -debug, -private_tempfiles
d13526 1
a13526 1
=item SPECIAL FORMS FOR IMPORTING HTML-TAG FUNCTIONS
d13528 1
a13528 3
1. start_table() (generates a <TABLE> tag), 2. end_table() (generates a
</TABLE> tag), 3. start_ul() (generates a <UL> tag), 4. end_ul() (generates
a </UL> tag)
d13530 1
a13530 1
=back
d13532 1
a13532 1
=item GENERATING DYNAMIC DOCUMENTS
d13534 1
a13534 1
=over 4
d13536 1
a13536 1
=item CREATING A STANDARD HTTP HEADER:
d13538 1
a13538 1
=item GENERATING A REDIRECTION HEADER
d13540 1
a13540 1
=item CREATING THE HTML DOCUMENT HEADER
d13542 1
a13542 1
B<Parameters:>, 4, 5, 6..
d13544 1
a13544 1
=item ENDING THE HTML DOCUMENT:
d13546 1
a13546 1
=item CREATING A SELF-REFERENCING URL THAT PRESERVES STATE INFORMATION:
d13548 1
a13548 1
=item OBTAINING THE SCRIPT'S URL
d13550 1
a13550 2
B<-absolute>, B<-relative>, B<-full>, B<-path> (B<-path_info>), B<-query>
(B<-query_string>), B<-base>
d13552 1
a13552 1
=item MIXING POST AND URL PARAMETERS
d13554 1
a13554 1
=back
d13556 1
a13556 1
=item CREATING STANDARD HTML ELEMENTS:
d13560 1
a13560 1
=item PROVIDING ARGUMENTS TO HTML SHORTCUTS
d13562 1
a13562 1
=item THE DISTRIBUTIVE PROPERTY OF HTML SHORTCUTS
d13564 1
a13564 1
=item HTML SHORTCUTS AND LIST INTERPOLATION
d13566 1
a13566 1
=item NON-STANDARD HTML SHORTCUTS
d13568 1
a13568 1
=item AUTOESCAPING HTML
d13570 1
a13570 2
$escaped_string = escapeHTML("unescaped string");, $charset =
charset([$charset]);, $flag = autoEscape([$flag]);
d13572 1
a13572 1
=item PRETTY-PRINTING HTML
d13576 1
a13576 1
=item CREATING FILL-OUT FORMS:
d13578 1
a13578 1
=over 4
d13580 1
a13580 1
=item CREATING AN ISINDEX TAG
d13582 1
a13582 1
=item STARTING AND ENDING A FORM
d13584 1
a13584 1
B<application/x-www-form-urlencoded>, B<multipart/form-data>
d13586 1
a13586 1
=item CREATING A TEXT FIELD
d13588 1
a13588 1
B<Parameters>
d13590 1
a13590 1
=item CREATING A BIG TEXT FIELD
d13592 1
a13592 1
=item CREATING A PASSWORD FIELD
d13594 1
a13594 1
=item CREATING A FILE UPLOAD FIELD
d13596 1
a13596 1
B<Parameters>
d13598 1
a13598 1
=item CREATING A POPUP MENU
d13600 1
a13600 1
=item CREATING A SCROLLING LIST
d13602 1
a13602 1
B<Parameters:>
d13604 1
a13604 1
=item CREATING A GROUP OF RELATED CHECKBOXES
d13606 1
a13606 1
B<Parameters:>
d13608 1
a13608 1
=item CREATING A STANDALONE CHECKBOX
d13610 1
a13610 1
B<Parameters:>
d13612 1
a13612 1
=item CREATING A RADIO BUTTON GROUP
d13614 1
a13614 1
B<Parameters:>
d13616 1
a13616 1
=item CREATING A SUBMIT BUTTON 
d13618 1
a13618 1
B<Parameters:>
d13620 1
a13620 1
=item CREATING A RESET BUTTON
d13622 1
a13622 1
=item CREATING A DEFAULT BUTTON
d13624 1
a13624 1
=item CREATING A HIDDEN FIELD
d13626 1
a13626 1
B<Parameters:>
d13628 1
a13628 1
=item CREATING A CLICKABLE IMAGE BUTTON
d13630 1
a13630 1
B<Parameters:>
d13632 1
a13632 1
=item CREATING A JAVASCRIPT ACTION BUTTON
d13634 1
a13634 1
=back
d13636 1
a13636 1
=item HTTP COOKIES
d13638 1
a13638 2
1. an expiration time, 2. a domain, 3. a path, 4. a "secure" flag,
B<-name>, B<-value>, B<-path>, B<-domain>, B<-expires>, B<-secure>
d13640 1
a13640 1
=item WORKING WITH FRAMES
d13642 1
a13642 3
1. Create a <Frameset> document, 2. Specify the destination for the
document in the HTTP header, 3. Specify the destination for the document in
the <FORM> tag
d13644 1
a13644 1
=item LIMITED SUPPORT FOR CASCADING STYLE SHEETS
d13646 1
a13646 1
=item DEBUGGING
d13648 1
a13648 1
=over 4
d13650 1
a13650 1
=item DUMPING OUT ALL THE NAME/VALUE PAIRS
d13654 3
a13656 1
=item FETCHING ENVIRONMENT VARIABLES
d13658 1
a13658 5
B<Accept()>, B<raw_cookie()>, B<user_agent()>, B<path_info()>,
B<path_translated()>, B<remote_host()>, B<script_name()>, B<referer()>,
B<auth_type ()>, B<server_name ()>, B<virtual_host ()>, B<server_port ()>,
B<server_software ()>, B<remote_user ()>, B<user_name ()>,
B<request_method()>, B<content_type()>, B<http()>, B<https()>
d13660 1
a13660 1
=item USING NPH SCRIPTS
d13662 1
a13662 2
In the B<use> statement, By calling the B<nph()> method:, By using B<-nph>
parameters
d13664 1
a13664 1
=item Server Push
d13666 1
a13666 1
multipart_init(), multipart_start(), multipart_end(), multipart_final()
d13668 1
a13668 1
=item Avoiding Denial of Service Attacks
d13670 1
a13670 2
B<$CGI::POST_MAX>, B<$CGI::DISABLE_UPLOADS>, B<1. On a script-by-script
basis>, B<2. Globally for all scripts>
d13672 1
a13672 1
=item COMPATIBILITY WITH CGI-LIB.PL
d13674 1
a13674 1
=item AUTHOR INFORMATION
d13676 1
a13676 1
=item CREDITS
d13678 1
a13678 12
Matt Heffron (heffron@@falstaff.css.beckman.com), James Taylor
(james.taylor@@srs.gov), Scott Anguish <sanguish@@digifix.com>, Mike Jewell
(mlj3u@@virginia.edu), Timothy Shimmin (tes@@kbs.citri.edu.au), Joergen Haegg
(jh@@axis.se), Laurent Delfosse (delfosse@@delfosse.com), Richard Resnick
(applepi1@@aol.com), Craig Bishop (csb@@barwonwater.vic.gov.au), Tony Curtis
(tc@@vcpc.univie.ac.at), Tim Bunce (Tim.Bunce@@ig.co.uk), Tom Christiansen
(tchrist@@convex.com), Andreas Koenig (k@@franz.ww.TU-Berlin.DE), Tim
MacKenzie (Tim.MacKenzie@@fulcrum.com.au), Kevin B. Hendricks
(kbhend@@dogwood.tyler.wm.edu), Stephen Dahmen (joyfire@@inxpress.net), Ed
Jordan (ed@@fidalgo.net), David Alan Pisoni (david@@cnation.com), Doug
MacEachern (dougm@@opengroup.org), Robin Houston (robin@@oneworld.org),
...and many many more..
d13680 1
a13680 1
=item A COMPLETE EXAMPLE OF A SIMPLE FORM-BASED SCRIPT
d13682 1
a13682 1
=item BUGS
d13686 2
d13690 1
a13690 1
=head2 CGI::Apache - Backward compatibility module for CGI.pm
a13695 2
=item ABSTRACT

d13698 1
a13698 1
=item AUTHOR INFORMATION
d13700 1
a13700 1
=item BUGS
d13702 1
a13702 1
=item SEE ALSO
d13706 1
a13706 2
=head2 CGI::Carp, B<CGI::Carp> - CGI routines for writing to the HTTPD (or
other) error log
d13714 3
a13716 1
=item REDIRECTING ERROR MESSAGES
d13718 1
a13718 1
=item MAKING PERL ERRORS APPEAR IN THE BROWSER WINDOW
d13720 1
a13720 1
=over 4
d13722 1
a13722 1
=item Changing the default message
d13724 1
a13724 1
=back
d13726 1
a13726 1
=item MAKING WARNINGS APPEAR AS HTML COMMENTS
d13728 1
a13728 1
=item CHANGE LOG
d13730 1
a13730 1
=item AUTHORS
d13736 1
a13736 1
=head2 CGI::Cookie - Interface to Netscape Cookies
d13744 9
a13752 1
=item USING CGI::Cookie
d13754 1
a13754 1
B<1. expiration date>, B<2. domain>, B<3. path>, B<4. secure flag>
d13756 2
a13757 1
=over 4
d13759 1
a13759 1
=item Creating New Cookies
d13761 5
a13765 1
=item Sending the Cookie to the Browser
d13767 1
a13767 1
=item Recovering Previous Cookies
d13769 1
a13769 1
=item Manipulating Cookies
d13771 1
a13771 1
B<name()>, B<value()>, B<domain()>, B<path()>, B<expires()>
d13775 1
a13775 1
=item AUTHOR INFORMATION
d13777 1
a13777 3
=item BUGS

=item SEE ALSO
d13781 1
a13781 1
=head2 CGI::Fast - CGI Interface for Fast CGI
d13789 1
a13789 3
=item OTHER PIECES OF THE PUZZLE

=item WRITING FASTCGI PERL SCRIPTS
d13791 1
a13791 5
=item INSTALLING FASTCGI SCRIPTS

=item USING FASTCGI SCRIPTS AS CGI SCRIPTS

=item CAVEATS
d13793 1
a13793 1
=item AUTHOR INFORMATION
d13795 1
a13795 1
=item BUGS
d13797 1
a13797 1
=item SEE ALSO
d13801 1
a13801 1
=head2 CGI::Pretty - module to produce nicely formatted HTML code
d13805 1
a13805 3
=item SYNOPSIS

=item DESCRIPTION
d13807 1
a13807 1
=over 4
d13809 1
a13809 1
=item Tags that won't be formatted
d13811 1
a13811 1
=item Customizing the Indenting
d13815 1
a13815 1
=item BUGS
d13819 1
a13819 1
=item SEE ALSO
d13823 1
a13823 1
=head2 CGI::Push - Simple Interface to Server Push
d13831 1
a13831 1
=item USING CGI::Push
d13833 1
a13833 1
-next_page, -last_page, -type, -delay, -cookie, -target, -expires, -nph
d13835 1
a13835 1
=over 4
d13837 1
a13837 1
=item Heterogeneous Pages
d13839 1
a13839 1
=item Changing the Page Delay on the Fly
d13843 1
a13843 11
=item INSTALLING CGI::Push SCRIPTS

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Switch - Backward compatibility module for defunct CGI::Switch
a13848 2
=item ABSTRACT

d13851 1
a13851 1
=item AUTHOR INFORMATION
d13859 1
a13859 1
=head2 CGI::Util - Internal utilities used by CGI module
d13867 1
a13867 1
=item AUTHOR INFORMATION
d13869 1
a13869 1
=item SEE ALSO
d13871 1
a13871 1
=back
d13873 1
a13873 1
=head2 CPAN - query, download and build perl modules from CPAN sites
d13875 1
a13875 1
=over 4
d13877 1
a13877 1
=item SYNOPSIS
d13879 1
a13879 1
=item DESCRIPTION
d13881 1
a13881 1
=over 4
d13883 1
a13883 1
=item Interactive Mode
d13885 1
a13885 3
Searching for authors, bundles, distribution files and modules, make, test,
install, clean	modules or distributions, get, readme, look module or
distribution, ls author, Signals
d13887 1
a13887 1
=item CPAN::Shell
d13889 1
a13889 1
=item autobundle
d13891 1
a13891 1
=item recompile
d13893 2
a13894 1
=item The four C<CPAN::*> Classes: Author, Bundle, Module, Distribution
d13896 1
a13896 1
=item Programmer's interface
d13898 1
a13898 1
expand($type,@@things), expandany(@@things), Programming Examples
d13900 1
a13900 1
=item Methods in the other Classes
d13902 1
a13902 26
CPAN::Author::as_glimpse(), CPAN::Author::as_string(),
CPAN::Author::email(), CPAN::Author::fullname(), CPAN::Author::name(),
CPAN::Bundle::as_glimpse(), CPAN::Bundle::as_string(),
CPAN::Bundle::clean(), CPAN::Bundle::contains(),
CPAN::Bundle::force($method,@@args), CPAN::Bundle::get(),
CPAN::Bundle::inst_file(), CPAN::Bundle::inst_version(),
CPAN::Bundle::uptodate(), CPAN::Bundle::install(), CPAN::Bundle::make(),
CPAN::Bundle::readme(), CPAN::Bundle::test(),
CPAN::Distribution::as_glimpse(), CPAN::Distribution::as_string(),
CPAN::Distribution::clean(), CPAN::Distribution::containsmods(),
CPAN::Distribution::cvs_import(), CPAN::Distribution::dir(),
CPAN::Distribution::force($method,@@args), CPAN::Distribution::get(),
CPAN::Distribution::install(), CPAN::Distribution::isa_perl(),
CPAN::Distribution::look(), CPAN::Distribution::make(),
CPAN::Distribution::prereq_pm(), CPAN::Distribution::readme(),
CPAN::Distribution::test(), CPAN::Distribution::uptodate(),
CPAN::Index::force_reload(), CPAN::Index::reload(), CPAN::InfoObj::dump(),
CPAN::Module::as_glimpse(), CPAN::Module::as_string(),
CPAN::Module::clean(), CPAN::Module::cpan_file(),
CPAN::Module::cpan_version(), CPAN::Module::cvs_import(),
CPAN::Module::description(), CPAN::Module::force($method,@@args),
CPAN::Module::get(), CPAN::Module::inst_file(),
CPAN::Module::inst_version(), CPAN::Module::install(),
CPAN::Module::look(), CPAN::Module::make(),
CPAN::Module::manpage_headline(), CPAN::Module::readme(),
CPAN::Module::test(), CPAN::Module::uptodate(), CPAN::Module::userid()
d13904 1
a13904 1
=item Cache Manager
d13906 1
a13906 1
=item Bundles
d13908 1
a13908 1
=item Prerequisites
d13910 1
a13910 1
=item Finding packages and VERSION
d13912 1
a13912 1
=item Debugging
d13914 1
a13914 1
=item Floppy, Zip, Offline Mode
d13918 1
a13918 1
=item CONFIGURATION
d13920 5
a13924 4
C<o conf E<lt>scalar optionE<gt>>, C<o conf E<lt>scalar optionE<gt>
E<lt>valueE<gt>>, C<o conf E<lt>list optionE<gt>>, C<o conf E<lt>list
optionE<gt> [shift|pop]>, C<o conf E<lt>list optionE<gt>
[unshift|push|splice] E<lt>listE<gt>>
d13926 1
a13926 1
=over 4
d13928 1
a13928 1
=item Note on urllist parameter's format
d13930 1
a13930 1
=item urllist parameter has CD-ROM support
d13932 1
a13932 1
=back
d13934 1
a13934 1
=item SECURITY
d13936 1
a13936 1
=item EXPORT
d13938 1
a13938 1
=item POPULATE AN INSTALLATION WITH LOTS OF MODULES
d13940 1
a13940 1
=item WORKING WITH CPAN.pm BEHIND FIREWALLS
d13944 4
a13947 1
=item Three basic types of firewalls
d13949 1
a13949 1
http firewall, ftp firewall, One way visibility, SOCKS, IP Masquerade
d13951 1
a13951 1
=item Configuring lynx or ncftp for going through a firewall
a13954 6
=item FAQ

1), 2), 3), 4), 5), 6), 7), 8), 9), 10)

=item BUGS

d13957 1
a13957 3
=item TRANSLATIONS

=item SEE ALSO
d13961 2
a13962 1
=head2 CPAN::FirstTime - Utility for CPAN::Config file Initialization
d13972 1
a13972 2
=head2 CPANox, CPAN::Nox - Wrapper around CPAN.pm without using any XS
module
d13980 5
a13984 1
=item  SEE ALSO
d13988 1
a13988 3
=head2 Carp, carp    - warn of errors (from perspective of caller)

=over 4
d13990 1
a13990 1
=item SYNOPSIS
d13992 1
a13992 1
=item DESCRIPTION
d13996 1
a13996 1
=item Forcing a Stack Trace
d13998 1
a13998 3
=back

=item BUGS
d14002 2
a14003 1
=head2 Carp::Heavy - Carp guts
d14007 1
a14007 1
=item SYNOPIS
d14013 2
a14014 1
=head2 Class::Struct - declare struct-like datatypes as Perl classes
d14022 15
a14036 1
=over 4
d14038 1
a14038 1
=item The C<struct()> function
d14040 1
a14040 1
=item Class Creation at Compile Time
d14042 1
a14042 1
=item Element Types and Accessor Methods
d14044 1
a14044 2
Scalar (C<'$'> or C<'*$'>), Array (C<'@@'> or C<'*@@'>), Hash (C<'%'> or
C<'*%'>), Class (C<'Class_Name'> or C<'*Class_Name'>)
d14046 1
a14046 1
=item Initializing with C<new>
d14048 1
a14048 1
=back
d14050 1
a14050 1
=item EXAMPLES
d14052 1
a14052 1
Example 1, Example 2, Example 3
d14054 1
a14054 1
=item Author and Modification History
d14058 1
a14058 1
=head2 Config - access Perl configuration information
d14066 127
a14192 1
myconfig(), config_sh(), config_vars(@@names)
d14194 1
a14194 1
=item EXAMPLE
d14196 1
a14196 1
=item WARNING
d14198 1
a14198 1
=item GLOSSARY
d14202 5
a14206 1
=item _
d14208 1
a14208 1
C<_a>, C<_exe>, C<_o>
d14210 1
a14210 1
=item a
d14212 1
a14212 3
C<afs>, C<alignbytes>, C<ansi2knr>, C<aphostname>, C<api_revision>,
C<api_subversion>, C<api_version>, C<api_versionstring>, C<ar>, C<archlib>,
C<archlibexp>, C<archname64>, C<archname>, C<archobjs>, C<awk>
d14214 1
a14214 1
=item b
d14216 1
a14216 2
C<baserev>, C<bash>, C<bin>, C<bincompat5005>, C<binexp>, C<bison>,
C<byacc>, C<byteorder>
d14218 1
a14218 1
=item c
d14220 1
a14220 4
C<c>, C<castflags>, C<cat>, C<cc>, C<cccdlflags>, C<ccdlflags>, C<ccflags>,
C<ccflags_uselargefiles>, C<ccname>, C<ccsymbols>, C<ccversion>, C<cf_by>,
C<cf_email>, C<cf_time>, C<charsize>, C<chgrp>, C<chmod>, C<chown>,
C<clocktype>, C<comm>, C<compress>
d14222 1
a14222 1
=item C
d14224 1
a14224 3
C<CONFIGDOTSH>, C<contains>, C<cp>, C<cpio>, C<cpp>, C<cpp_stuff>,
C<cppccsymbols>, C<cppflags>, C<cpplast>, C<cppminus>, C<cpprun>,
C<cppstdin>, C<cppsymbols>, C<crosscompile>, C<cryptlib>, C<csh>
d14226 1
a14226 1
=item d
d14228 1
a14228 69
C<d__fwalk>, C<d_access>, C<d_accessx>, C<d_alarm>, C<d_archlib>,
C<d_atolf>, C<d_atoll>, C<d_attribut>, C<d_bcmp>, C<d_bcopy>,
C<d_bincompat5005>, C<d_bsd>, C<d_bsdgetpgrp>, C<d_bsdsetpgrp>, C<d_bzero>,
C<d_casti32>, C<d_castneg>, C<d_charvspr>, C<d_chown>, C<d_chroot>,
C<d_chsize>, C<d_closedir>, C<d_const>, C<d_crypt>, C<d_csh>, C<d_cuserid>,
C<d_dbl_dig>, C<d_difftime>, C<d_dirnamlen>, C<d_dlerror>, C<d_dlopen>,
C<d_dlsymun>, C<d_dosuid>, C<d_drand48proto>, C<d_dup2>, C<d_eaccess>,
C<d_endgrent>, C<d_endhent>, C<d_endnent>, C<d_endpent>, C<d_endpwent>,
C<d_endsent>, C<d_eofnblk>, C<d_eunice>, C<d_fchmod>, C<d_fchown>,
C<d_fcntl>, C<d_fcntl_can_lock>, C<d_fd_macros>, C<d_fd_set>,
C<d_fds_bits>, C<d_fgetpos>, C<d_flexfnam>, C<d_flock>, C<d_fork>,
C<d_fpathconf>, C<d_fpos64_t>, C<d_frexpl>, C<d_fs_data_s>, C<d_fseeko>,
C<d_fsetpos>, C<d_fstatfs>, C<d_fstatvfs>, C<d_fsync>, C<d_ftello>,
C<d_ftime>, C<d_Gconvert>, C<d_getcwd>, C<d_getespwnam>, C<d_getfsstat>,
C<d_getgrent>, C<d_getgrps>, C<d_gethbyaddr>, C<d_gethbyname>,
C<d_gethent>, C<d_gethname>, C<d_gethostprotos>, C<d_getlogin>,
C<d_getmnt>, C<d_getmntent>, C<d_getnbyaddr>, C<d_getnbyname>,
C<d_getnent>, C<d_getnetprotos>, C<d_getpagsz>, C<d_getpbyname>,
C<d_getpbynumber>, C<d_getpent>, C<d_getpgid>, C<d_getpgrp2>, C<d_getpgrp>,
C<d_getppid>, C<d_getprior>, C<d_getprotoprotos>, C<d_getprpwnam>,
C<d_getpwent>, C<d_getsbyname>, C<d_getsbyport>, C<d_getsent>,
C<d_getservprotos>, C<d_getspnam>, C<d_gettimeod>, C<d_gnulibc>,
C<d_grpasswd>, C<d_hasmntopt>, C<d_htonl>, C<d_iconv>, C<d_index>,
C<d_inetaton>, C<d_int64_t>, C<d_isascii>, C<d_isnan>, C<d_isnanl>,
C<d_killpg>, C<d_lchown>, C<d_ldbl_dig>, C<d_link>, C<d_locconv>,
C<d_lockf>, C<d_longdbl>, C<d_longlong>, C<d_lseekproto>, C<d_lstat>,
C<d_madvise>, C<d_mblen>, C<d_mbstowcs>, C<d_mbtowc>, C<d_memchr>,
C<d_memcmp>, C<d_memcpy>, C<d_memmove>, C<d_memset>, C<d_mkdir>,
C<d_mkdtemp>, C<d_mkfifo>, C<d_mkstemp>, C<d_mkstemps>, C<d_mktime>,
C<d_mmap>, C<d_modfl>, C<d_mprotect>, C<d_msg>, C<d_msg_ctrunc>,
C<d_msg_dontroute>, C<d_msg_oob>, C<d_msg_peek>, C<d_msg_proxy>,
C<d_msgctl>, C<d_msgget>, C<d_msgrcv>, C<d_msgsnd>, C<d_msync>,
C<d_munmap>, C<d_mymalloc>, C<d_nice>, C<d_nv_preserves_uv>,
C<d_nv_preserves_uv_bits>, C<d_off64_t>, C<d_old_pthread_create_joinable>,
C<d_oldpthreads>, C<d_oldsock>, C<d_open3>, C<d_pathconf>, C<d_pause>,
C<d_perl_otherlibdirs>, C<d_phostname>, C<d_pipe>, C<d_poll>,
C<d_portable>, C<d_PRId64>, C<d_PRIeldbl>, C<d_PRIEUldbl>, C<d_PRIfldbl>,
C<d_PRIFUldbl>, C<d_PRIgldbl>, C<d_PRIGUldbl>, C<d_PRIi64>, C<d_PRIo64>,
C<d_PRIu64>, C<d_PRIx64>, C<d_PRIXU64>, C<d_pthread_yield>, C<d_pwage>,
C<d_pwchange>, C<d_pwclass>, C<d_pwcomment>, C<d_pwexpire>, C<d_pwgecos>,
C<d_pwpasswd>, C<d_pwquota>, C<d_qgcvt>, C<d_quad>, C<d_readdir>,
C<d_readlink>, C<d_rename>, C<d_rewinddir>, C<d_rmdir>, C<d_safebcpy>,
C<d_safemcpy>, C<d_sanemcmp>, C<d_sbrkproto>, C<d_sched_yield>,
C<d_scm_rights>, C<d_SCNfldbl>, C<d_seekdir>, C<d_select>, C<d_sem>,
C<d_semctl>, C<d_semctl_semid_ds>, C<d_semctl_semun>, C<d_semget>,
C<d_semop>, C<d_setegid>, C<d_seteuid>, C<d_setgrent>, C<d_setgrps>,
C<d_sethent>, C<d_setlinebuf>, C<d_setlocale>, C<d_setnent>, C<d_setpent>,
C<d_setpgid>, C<d_setpgrp2>, C<d_setpgrp>, C<d_setprior>,
C<d_setproctitle>, C<d_setpwent>, C<d_setregid>, C<d_setresgid>,
C<d_setresuid>, C<d_setreuid>, C<d_setrgid>, C<d_setruid>, C<d_setsent>,
C<d_setsid>, C<d_setvbuf>, C<d_sfio>, C<d_shm>, C<d_shmat>,
C<d_shmatprototype>, C<d_shmctl>, C<d_shmdt>, C<d_shmget>, C<d_sigaction>,
C<d_sigprocmask>, C<d_sigsetjmp>, C<d_socket>, C<d_socklen_t>,
C<d_sockpair>, C<d_socks5_init>, C<d_sqrtl>, C<d_statblks>,
C<d_statfs_f_flags>, C<d_statfs_s>, C<d_statvfs>, C<d_stdio_cnt_lval>,
C<d_stdio_ptr_lval>, C<d_stdio_ptr_lval_nochange_cnt>,
C<d_stdio_ptr_lval_sets_cnt>, C<d_stdio_stream_array>, C<d_stdiobase>,
C<d_stdstdio>, C<d_strchr>, C<d_strcoll>, C<d_strctcpy>, C<d_strerrm>,
C<d_strerror>, C<d_strtod>, C<d_strtol>, C<d_strtold>, C<d_strtoll>,
C<d_strtoq>, C<d_strtoul>, C<d_strtoull>, C<d_strtouq>, C<d_strxfrm>,
C<d_suidsafe>, C<d_symlink>, C<d_syscall>, C<d_sysconf>, C<d_sysernlst>,
C<d_syserrlst>, C<d_system>, C<d_tcgetpgrp>, C<d_tcsetpgrp>, C<d_telldir>,
C<d_telldirproto>, C<d_time>, C<d_times>, C<d_truncate>, C<d_tzname>,
C<d_umask>, C<d_uname>, C<d_union_semun>, C<d_ustat>, C<d_vendorarch>,
C<d_vendorbin>, C<d_vendorlib>, C<d_vfork>, C<d_void_closedir>,
C<d_voidsig>, C<d_voidtty>, C<d_volatile>, C<d_vprintf>, C<d_wait4>,
C<d_waitpid>, C<d_wcstombs>, C<d_wctomb>, C<d_xenix>, C<date>,
C<db_hashtype>, C<db_prefixtype>, C<defvoidused>, C<direntrytype>,
C<dlext>, C<dlsrc>, C<doublesize>, C<drand01>, C<dynamic_ext>
d14230 1
a14230 1
=item e
d14232 1
a14232 2
C<eagain>, C<ebcdic>, C<echo>, C<egrep>, C<emacs>, C<eunicefix>,
C<exe_ext>, C<expr>, C<extensions>
d14234 1
a14234 1
=item f
d14236 1
a14236 2
C<fflushall>, C<fflushNULL>, C<find>, C<firstmakefile>, C<flex>,
C<fpossize>, C<fpostype>, C<freetype>, C<full_ar>, C<full_csh>, C<full_sed>
d14238 2
a14239 1
=item g
d14241 1
a14241 2
C<gccosandvers>, C<gccversion>, C<gidformat>, C<gidsign>, C<gidsize>,
C<gidtype>, C<glibpth>, C<grep>, C<groupcat>, C<groupstype>, C<gzip>
d14243 1
a14243 1
=item h
d14245 1
a14245 1
C<h_fcntl>, C<h_sysfile>, C<hint>, C<hostcat>
d14247 1
a14247 1
=item i
d14249 1
a14249 24
C<i16size>, C<i16type>, C<i32size>, C<i32type>, C<i64size>, C<i64type>,
C<i8size>, C<i8type>, C<i_arpainet>, C<i_bsdioctl>, C<i_db>, C<i_dbm>,
C<i_dirent>, C<i_dld>, C<i_dlfcn>, C<i_fcntl>, C<i_float>, C<i_gdbm>,
C<i_grp>, C<i_iconv>, C<i_ieeefp>, C<i_inttypes>, C<i_libutil>,
C<i_limits>, C<i_locale>, C<i_machcthr>, C<i_malloc>, C<i_math>,
C<i_memory>, C<i_mntent>, C<i_ndbm>, C<i_netdb>, C<i_neterrno>,
C<i_netinettcp>, C<i_niin>, C<i_poll>, C<i_prot>, C<i_pthread>, C<i_pwd>,
C<i_rpcsvcdbm>, C<i_sfio>, C<i_sgtty>, C<i_shadow>, C<i_socks>,
C<i_stdarg>, C<i_stddef>, C<i_stdlib>, C<i_string>, C<i_sunmath>,
C<i_sysaccess>, C<i_sysdir>, C<i_sysfile>, C<i_sysfilio>, C<i_sysin>,
C<i_sysioctl>, C<i_syslog>, C<i_sysmman>, C<i_sysmode>, C<i_sysmount>,
C<i_sysndir>, C<i_sysparam>, C<i_sysresrc>, C<i_syssecrt>, C<i_sysselct>,
C<i_syssockio>, C<i_sysstat>, C<i_sysstatfs>, C<i_sysstatvfs>,
C<i_systime>, C<i_systimek>, C<i_systimes>, C<i_systypes>, C<i_sysuio>,
C<i_sysun>, C<i_sysutsname>, C<i_sysvfs>, C<i_syswait>, C<i_termio>,
C<i_termios>, C<i_time>, C<i_unistd>, C<i_ustat>, C<i_utime>, C<i_values>,
C<i_varargs>, C<i_varhdr>, C<i_vfork>, C<ignore_versioned_solibs>,
C<inc_version_list>, C<inc_version_list_init>, C<incpath>, C<inews>,
C<installarchlib>, C<installbin>, C<installman1dir>, C<installman3dir>,
C<installprefix>, C<installprefixexp>, C<installprivlib>, C<installscript>,
C<installsitearch>, C<installsitebin>, C<installsitelib>, C<installstyle>,
C<installusrbinperl>, C<installvendorarch>, C<installvendorbin>,
C<installvendorlib>, C<intsize>, C<issymlink>, C<ivdformat>, C<ivsize>,
C<ivtype>
d14251 1
a14251 1
=item k
d14253 1
a14253 1
C<known_extensions>, C<ksh>
d14255 1
a14255 1
=item l
d14257 1
a14257 6
C<ld>, C<lddlflags>, C<ldflags>, C<ldflags_uselargefiles>, C<ldlibpthname>,
C<less>, C<lib_ext>, C<libc>, C<libperl>, C<libpth>, C<libs>, C<libsdirs>,
C<libsfiles>, C<libsfound>, C<libspath>, C<libswanted>,
C<libswanted_uselargefiles>, C<line>, C<lint>, C<lkflags>, C<ln>, C<lns>,
C<locincpth>, C<loclibpth>, C<longdblsize>, C<longlongsize>, C<longsize>,
C<lp>, C<lpr>, C<ls>, C<lseeksize>, C<lseektype>
d14259 1
a14259 1
=item m
d14261 1
a14261 3
C<mail>, C<mailx>, C<make>, C<make_set_make>, C<mallocobj>, C<mallocsrc>,
C<malloctype>, C<man1dir>, C<man1direxp>, C<man1ext>, C<man3dir>,
C<man3direxp>, C<man3ext>
d14263 1
a14263 1
=item M
d14265 1
a14265 2
C<Mcc>, C<mips_type>, C<mkdir>, C<mmaptype>, C<modetype>, C<more>,
C<multiarch>, C<mv>, C<myarchname>, C<mydomain>, C<myhostname>, C<myuname>
d14267 1
a14267 1
=item n
d14269 1
a14269 4
C<n>, C<need_va_copy>, C<netdb_hlen_type>, C<netdb_host_type>,
C<netdb_name_type>, C<netdb_net_type>, C<nm>, C<nm_opt>, C<nm_so_opt>,
C<nonxs_ext>, C<nroff>, C<nveformat>, C<nvEUformat>, C<nvfformat>,
C<nvFUformat>, C<nvgformat>, C<nvGUformat>, C<nvsize>, C<nvtype>
d14271 1
a14271 1
=item o
d14273 1
a14273 2
C<o_nonblock>, C<obj_ext>, C<old_pthread_create_joinable>, C<optimize>,
C<orderlib>, C<osname>, C<osvers>, C<otherlibdirs>
d14275 1
a14275 1
=item p
d14277 1
a14277 2
C<package>, C<pager>, C<passcat>, C<patchlevel>, C<path_sep>, C<perl5>,
C<perl>
d14279 1
a14279 1
=item P
d14281 1
a14281 4
C<PERL_REVISION>, C<PERL_SUBVERSION>, C<PERL_VERSION>, C<perladmin>,
C<perllibs>, C<perlpath>, C<pg>, C<phostname>, C<pidtype>, C<plibpth>,
C<pm_apiversion>, C<pmake>, C<pr>, C<prefix>, C<prefixexp>, C<privlib>,
C<privlibexp>, C<prototype>, C<ptrsize>
d14283 1
a14283 1
=item q
d14285 4
a14288 1
C<quadkind>, C<quadtype>
d14290 1
a14290 1
=item r
d14292 1
a14292 2
C<randbits>, C<randfunc>, C<randseedtype>, C<ranlib>, C<rd_nodata>,
C<revision>, C<rm>, C<rmail>, C<runnm>
d14294 1
a14294 1
=item s
d14296 1
a14296 14
C<sched_yield>, C<scriptdir>, C<scriptdirexp>, C<sed>, C<seedfunc>,
C<selectminbits>, C<selecttype>, C<sendmail>, C<sh>, C<shar>, C<sharpbang>,
C<shmattype>, C<shortsize>, C<shrpenv>, C<shsharp>, C<sig_count>,
C<sig_name>, C<sig_name_init>, C<sig_num>, C<sig_num_init>, C<sig_size>,
C<signal_t>, C<sitearch>, C<sitearchexp>, C<sitebin>, C<sitebinexp>,
C<sitelib>, C<sitelib_stem>, C<sitelibexp>, C<siteprefix>,
C<siteprefixexp>, C<sizesize>, C<sizetype>, C<sleep>, C<smail>, C<so>,
C<sockethdr>, C<socketlib>, C<socksizetype>, C<sort>, C<spackage>,
C<spitshell>, C<sPRId64>, C<sPRIeldbl>, C<sPRIEUldbl>, C<sPRIfldbl>,
C<sPRIFUldbl>, C<sPRIgldbl>, C<sPRIGUldbl>, C<sPRIi64>, C<sPRIo64>,
C<sPRIu64>, C<sPRIx64>, C<sPRIXU64>, C<src>, C<sSCNfldbl>, C<ssizetype>,
C<startperl>, C<startsh>, C<static_ext>, C<stdchar>, C<stdio_base>,
C<stdio_bufsiz>, C<stdio_cnt>, C<stdio_filbuf>, C<stdio_ptr>,
C<stdio_stream_array>, C<strings>, C<submit>, C<subversion>, C<sysman>
d14298 1
a14298 1
=item t
d14300 1
a14300 2
C<tail>, C<tar>, C<tbl>, C<tee>, C<test>, C<timeincl>, C<timetype>,
C<touch>, C<tr>, C<trnl>, C<troff>
d14302 1
a14302 1
=item u
d14304 1
a14304 9
C<u16size>, C<u16type>, C<u32size>, C<u32type>, C<u64size>, C<u64type>,
C<u8size>, C<u8type>, C<uidformat>, C<uidsign>, C<uidsize>, C<uidtype>,
C<uname>, C<uniq>, C<uquadtype>, C<use5005threads>, C<use64bitall>,
C<use64bitint>, C<usedl>, C<useithreads>, C<uselargefiles>,
C<uselongdouble>, C<usemorebits>, C<usemultiplicity>, C<usemymalloc>,
C<usenm>, C<useopcode>, C<useperlio>, C<useposix>, C<usesfio>,
C<useshrplib>, C<usesocks>, C<usethreads>, C<usevendorprefix>, C<usevfork>,
C<usrinc>, C<uuname>, C<uvoformat>, C<uvsize>, C<uvtype>, C<uvuformat>,
C<uvxformat>, C<uvXUformat>
d14306 1
a14306 1
=item v
d14308 1
a14308 3
C<vendorarch>, C<vendorarchexp>, C<vendorbin>, C<vendorbinexp>,
C<vendorlib>, C<vendorlib_stem>, C<vendorlibexp>, C<vendorprefix>,
C<vendorprefixexp>, C<version>, C<versiononly>, C<vi>, C<voidflags>
d14310 1
a14310 1
=item x
d14312 1
a14312 1
C<xlibpth>, C<xs_apiversion>
d14314 1
a14314 1
=item z
d14316 1
a14316 1
C<zcat>, C<zip>
d14318 1
a14318 1
=back
d14320 1
a14320 1
=item NOTE
d14324 1
a14324 1
=head2 Cwd - get pathname of current working directory
d14332 1
a14332 1
=back
d14334 2
a14335 3
=head2 DB - programmatic interface to the Perl debugging API (draft,
subject to
change)
d14337 1
a14337 1
=over 4
d14339 1
a14339 1
=item SYNOPSIS
d14341 1
a14341 1
=item DESCRIPTION
d14343 1
a14343 1
=over 4
d14345 1
a14345 1
=item Global Variables
d14347 1
a14347 3
 $DB::sub,  %DB::sub,  $DB::single,  $DB::signal,  $DB::trace,	@@DB::args, 
@@DB::dbline,  %DB::dbline,  $DB::package,  $DB::filename,  $DB::subname, 
$DB::lineno
d14349 1
a14349 1
=item API Methods
d14351 1
a14351 2
CLIENT->register(), CLIENT->evalcode(STRING), CLIENT->skippkg('D::hide'),
CLIENT->run(), CLIENT->step(), CLIENT->next(), CLIENT->done()
d14353 3
a14355 1
=item Client Callback Methods
d14357 1
a14357 3
CLIENT->init(), CLIENT->prestop([STRING]), CLIENT->stop(), CLIENT->idle(),
CLIENT->poststop([STRING]), CLIENT->evalcode(STRING), CLIENT->cleanup(),
CLIENT->output(LIST)
d14359 1
a14359 5
=back

=item BUGS

=item AUTHOR
d14363 1
a14363 1
=head2 DB_File - Perl5 access to Berkeley DB version 1.x
d14371 1
a14371 1
B<DB_HASH>, B<DB_BTREE>, B<DB_RECNO>
d14373 1
a14373 1
=over 4
d14375 1
a14375 1
=item Using DB_File with Berkeley DB version 2 or 3
d14377 3
a14379 1
=item Interface to Berkeley DB
d14381 1
a14381 1
=item Opening a Berkeley DB Database File
d14383 1
a14383 1
=item Default Parameters
d14385 1
a14385 1
=item In Memory Databases
d14389 1
a14389 1
=item DB_HASH
d14393 1
a14393 1
=item A Simple Example
d14395 1
a14395 1
=back
d14397 1
a14397 1
=item DB_BTREE
d14399 1
a14399 1
=over 4
d14401 1
a14401 1
=item Changing the BTREE sort order
d14403 2
a14404 1
=item Handling Duplicate Keys 
d14406 1
a14406 1
=item The get_dup() Method
d14408 1
a14408 1
=item The find_dup() Method
d14410 1
a14410 3
=item The del_dup() Method

=item Matching Partial Keys 
d14414 1
a14414 1
=item DB_RECNO
d14418 1
a14418 1
=item The 'bval' Option
d14420 1
a14420 17
=item A Simple Example

=item Extra RECNO Methods

B<$X-E<gt>push(list) ;>, B<$value = $X-E<gt>pop ;>, B<$X-E<gt>shift>,
B<$X-E<gt>unshift(list) ;>, B<$X-E<gt>length>

=item Another Example

=back

=item THE API INTERFACE

B<$status = $X-E<gt>get($key, $value [, $flags]) ;>, B<$status =
$X-E<gt>put($key, $value [, $flags]) ;>, B<$status = $X-E<gt>del($key [,
$flags]) ;>, B<$status = $X-E<gt>fd ;>, B<$status = $X-E<gt>seq($key,
$value, $flags) ;>, B<$status = $X-E<gt>sync([$flags]) ;>
d14422 1
a14422 1
=item DBM FILTERS
d14424 1
a14424 2
B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>
d14428 1
a14428 1
=item The Filter
d14430 2
a14431 1
=item An Example -- the NULL termination problem.
d14433 1
a14433 1
=item Another Example -- Key is a C int.
d14435 1
a14435 1
=back
d14437 1
a14437 1
=item HINTS AND TIPS 
d14439 1
a14439 1
=over 4
d14441 1
a14441 1
=item Locking: The Trouble with fd
d14443 1
a14443 1
=item Safe ways to lock a database
d14445 1
a14445 1
B<Tie::DB_Lock>, B<Tie::DB_LockFile>, B<DB_File::Lock>
d14447 1
a14447 1
=item Sharing Databases With C Applications
d14449 1
a14449 1
=item The untie() Gotcha
d14451 1
a14451 1
=back
d14453 1
a14453 1
=item COMMON QUESTIONS
d14455 1
a14455 1
=over 4
d14457 1
a14457 1
=item Why is there Perl source in my database?
d14459 1
a14459 1
=item How do I store complex data structures with DB_File?
d14461 1
a14461 1
=item What does "Invalid Argument" mean?
d14463 1
a14463 1
=item What does "Bareword 'DB_File' not allowed" mean? 
d14467 2
a14468 1
=item REFERENCES
d14470 1
a14470 1
=item HISTORY
d14472 1
a14472 1
=item BUGS
d14474 1
a14474 1
=item AVAILABILITY
d14476 2
a14477 1
=item COPYRIGHT
d14483 2
d14487 1
a14487 2
=head2 Data::Dumper - stringified perl data structures, suitable for both
printing and C<eval>
d14495 5
a14499 1
=over 4
d14501 1
a14501 1
=item Methods
d14503 1
a14503 4
I<PACKAGE>->new(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Dump  I<or> 
I<PACKAGE>->Dump(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Seen(I<[HASHREF]>),
I<$OBJ>->Values(I<[ARRAYREF]>), I<$OBJ>->Names(I<[ARRAYREF]>),
I<$OBJ>->Reset
d14505 1
a14505 1
=item Functions
d14507 1
a14507 1
Dumper(I<LIST>)
d14509 2
a14510 1
=item Configuration Variables or Methods
d14512 1
a14512 12
$Data::Dumper::Indent  I<or>  I<$OBJ>->Indent(I<[NEWVAL]>),
$Data::Dumper::Purity  I<or>  I<$OBJ>->Purity(I<[NEWVAL]>),
$Data::Dumper::Pad  I<or>  I<$OBJ>->Pad(I<[NEWVAL]>),
$Data::Dumper::Varname	I<or>  I<$OBJ>->Varname(I<[NEWVAL]>),
$Data::Dumper::Useqq  I<or>  I<$OBJ>->Useqq(I<[NEWVAL]>),
$Data::Dumper::Terse  I<or>  I<$OBJ>->Terse(I<[NEWVAL]>),
$Data::Dumper::Freezer	I<or>  $I<OBJ>->Freezer(I<[NEWVAL]>),
$Data::Dumper::Toaster	I<or>  $I<OBJ>->Toaster(I<[NEWVAL]>),
$Data::Dumper::Deepcopy  I<or>	$I<OBJ>->Deepcopy(I<[NEWVAL]>),
$Data::Dumper::Quotekeys  I<or>  $I<OBJ>->Quotekeys(I<[NEWVAL]>),
$Data::Dumper::Bless  I<or>  $I<OBJ>->Bless(I<[NEWVAL]>),
$Data::Dumper::Maxdepth  I<or>	$I<OBJ>->Maxdepth(I<[NEWVAL]>)
d14514 1
a14514 1
=item Exports
d14516 1
a14516 1
Dumper
d14518 1
a14518 1
=back
d14520 1
a14520 1
=item EXAMPLES
d14522 1
a14522 1
=item BUGS
d14524 4
a14527 1
=item AUTHOR
d14529 1
a14529 1
=item VERSION
d14533 4
d14539 1
a14539 1
=head2 Devel::DProf - a Perl code profiler
d14547 1
a14547 1
=item PROFILE FORMAT
d14549 1
a14549 1
=item AUTOLOAD
d14551 1
a14551 1
=item ENVIRONMENT
d14553 1
a14553 1
=item BUGS
d14557 4
d14563 1
a14563 1
=head2 Devel::Peek - A data debugging tool for the XS programmer
d14571 8
a14578 1
=over 4
d14580 1
a14580 1
=item Memory footprint debugging
d14584 2
a14585 1
=item EXAMPLES
d14589 9
a14597 1
=item A simple scalar string
d14599 1
a14599 1
=item A simple scalar number
d14601 1
a14601 1
=item A simple scalar with an extra reference
d14603 2
a14604 1
=item A reference to a simple scalar
d14606 1
a14606 1
=item A reference to an array
d14608 1
a14608 1
=item A reference to a hash
d14610 1
a14610 1
=item Dumping a large array or hash
d14612 1
a14612 1
=item A reference to an SV which holds a C pointer
d14614 1
a14614 1
=item A reference to a subroutine
d14616 1
a14616 1
=back
d14618 3
a14620 1
=item EXPORTS
d14622 1
a14622 1
=item BUGS
d14626 1
a14626 1
=item SEE ALSO
d14630 2
a14631 1
=head2 Devel::SelfStubber - generate stubs for a SelfLoading module
d14639 5
a14643 1
=back
d14645 2
a14646 1
=head2 DirHandle - supply object methods for directory handles
d14648 1
a14648 1
=over 4
d14650 1
a14650 1
=item SYNOPSIS
d14652 1
a14652 1
=item DESCRIPTION
d14656 2
a14657 1
=head2 Dumpvalue - provides screen dump of Perl data.
d14665 4
d14671 4
a14674 1
=item Creation
d14676 1
a14676 4
C<arrayDepth>, C<hashDepth>, C<compactDump>, C<veryCompact>, C<globPrint>,
C<DumpDBFiles>, C<DumpPackages>, C<DumpReused>, C<tick>, C<HighBit>,
C<printUndef>, C<UsageOnly>, unctrl, subdump, bareStringify, quoteHighBit,
stopDbSignal
d14678 1
a14678 1
=item Methods
d14680 1
a14680 2
dumpValue, dumpValues, dumpvars, set_quote, set_unctrl, compactDump,
veryCompact, set, get
d14682 1
a14682 1
=back
d14686 2
a14687 1
=head2 DynaLoader - Dynamically load C libraries into Perl code
d14695 9
a14703 5
@@dl_library_path, @@dl_resolve_using, @@dl_require_symbols, @@dl_librefs,
@@dl_modules, dl_error(), $dl_debug, dl_findfile(), dl_expandspec(),
dl_load_file(), dl_unload_file(), dl_loadflags(), dl_find_symbol(),
dl_find_symbol_anywhere(), dl_undef_symbols(), dl_install_xsub(),
bootstrap()
d14707 2
d14711 1
a14711 2
=head2 DynaLoader::XSLoader, XSLoader - Dynamically load C libraries into
Perl code
d14719 8
d14729 2
d14733 1
a14733 2
=head2 English - use nice English (or awk) names for ugly punctuation
variables
d14741 3
a14743 1
=item BUGS
d14747 2
a14748 2
=head2 Env - perl module that imports environment variables as scalars or
arrays
d14756 1
a14756 3
=item LIMITATIONS

=item AUTHOR
d14760 1
a14760 1
=head2 Errno - System errno constants
d14768 8
a14775 1
=item CAVEATS
d14783 1
a14783 1
=head2 Exporter - Implements default import method for modules
d14791 1
a14791 1
=over 4
d14793 1
a14793 1
=item How to Export
d14795 1
a14795 1
=item Selecting What To Export
d14797 1
a14797 1
=item Specialised Import Lists
d14799 1
a14799 1
=item Exporting without using Export's import method
d14801 1
a14801 1
=item Module Version Checking
d14803 1
a14803 1
=item Managing Unknown Symbols
d14805 1
a14805 1
=item Tag Handling Utility Functions
d14807 1
a14807 1
=back
d14809 1
a14809 1
=back
d14811 3
a14813 1
=head2 Exporter::Heavy - Exporter guts
d14815 1
a14815 1
=over 4
d14817 1
a14817 1
=item SYNOPIS
d14819 1
a14819 1
=item DESCRIPTION
d14823 2
a14824 2
=head2 ExtUtils::Command - utilities to replace common UNIX commands in
Makefiles etc.
d14832 1
a14832 1
=back
d14834 4
a14837 1
cat
d14839 1
a14839 1
eqtime src dst
d14841 1
a14841 1
rm_f files...
d14843 1
a14843 1
rm_f files...
d14845 1
a14845 1
touch files ..
d14847 1
a14847 1
mv source... destination
d14849 1
a14849 1
cp source... destination
d14851 1
a14851 1
chmod mode files..
d14853 1
a14853 1
mkpath directory..
d14855 2
a14856 1
test_f file
d14858 1
a14858 3
=over 4

=item BUGS
d14860 1
a14860 1
=item SEE ALSO 
d14862 1
a14862 1
=item AUTHOR
d14866 2
a14867 1
=head2 ExtUtils::Embed - Utilities for embedding Perl in C/C++ applications
d14875 2
a14876 1
=item @@EXPORT
d14878 1
a14878 1
=item FUNCTIONS
d14880 1
a14880 2
xsinit(), Examples, ldopts(), Examples, perl_inc(), ccflags(), ccdlflags(),
ccopts(), xsi_header(), xsi_protos(@@modules), xsi_body(@@modules)
d14882 1
a14882 5
=item EXAMPLES

=item SEE ALSO

=item AUTHOR
d14886 2
a14887 1
=head2 ExtUtils::Install - install files from here to there
d14895 9
d14906 1
a14906 1
=head2 ExtUtils::Installed - Inventory management of installed modules
d14914 1
a14914 1
=item USAGE
d14916 1
a14916 4
=item FUNCTIONS

new(), modules(), files(), directories(), directory_tree(), validate(),
packlist(), version()
d14918 1
a14918 1
=item EXAMPLE
d14922 2
d14926 1
a14926 1
=head2 ExtUtils::Liblist - determine libraries to use and how to use them
d14934 1
a14934 3
For static extensions, For dynamic extensions, For dynamic extensions

=over 4
d14936 1
a14936 1
=item EXTRALIBS
d14938 2
a14939 1
=item LDLOADLIBS and LD_RUN_PATH
d14941 1
a14941 1
=item BSLOADLIBS
d14943 1
a14943 1
=back
d14945 1
a14945 1
=item PORTABILITY
d14949 1
a14949 1
=item VMS implementation
d14951 1
a14951 1
=item Win32 implementation
d14955 6
d14963 9
d14974 2
a14975 2
=head2 ExtUtils::MM_Cygwin - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d14983 9
a14991 1
canonpath, cflags, manifypods, perl_archive
d14993 1
a14993 1
=back
d14995 1
a14995 1
perl_archive_after
d14997 1
a14997 2
=head2 ExtUtils::MM_OS2 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d14999 2
a15000 1
=over 4
d15002 1
a15002 1
=item SYNOPSIS
d15004 1
a15004 1
=item DESCRIPTION
d15008 2
a15009 1
=head2 ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker
d15017 3
a15019 1
=item METHODS
d15021 1
a15021 1
=over 4
d15023 1
a15023 1
=item Preloaded methods
d15025 1
a15025 1
canonpath
d15027 1
a15027 1
=back
d15029 1
a15029 1
=back
d15031 2
a15032 1
catdir
d15034 1
a15034 1
catfile
d15036 1
a15036 1
curdir
d15038 1
a15038 1
rootdir
d15040 1
a15040 1
updir
d15044 1
a15044 1
=item SelfLoaded methods
d15046 1
a15046 1
c_o (o)
d15048 1
a15048 1
=back
d15050 1
a15050 1
cflags (o)
d15052 1
a15052 1
clean (o)
d15054 1
a15054 1
const_cccmd (o)
d15056 1
a15056 1
const_config (o)
d15058 1
a15058 1
const_loadlibs (o)
d15060 1
a15060 1
constants (o)
d15062 4
a15065 1
depend (o)
d15067 1
a15067 1
dir_target (o)
d15069 1
a15069 1
dist (o)
d15071 1
a15071 1
dist_basics (o)
d15073 1
a15073 1
dist_ci (o)
d15075 1
a15075 1
dist_core (o)
d15077 1
a15077 1
dist_dir (o)
d15079 1
a15079 1
dist_test (o)
d15081 1
a15081 1
dlsyms (o)
d15083 1
a15083 1
dynamic (o)
d15085 1
a15085 1
dynamic_bs (o)
d15087 1
a15087 1
dynamic_lib (o)
d15089 1
a15089 5
exescan

extliblist

file_name_is_absolute
d15091 1
a15091 1
find_perl
d15095 1
a15095 1
=item Methods to actually produce chunks of text for the Makefile
d15097 1
a15097 1
fixin
d15099 1
a15099 1
=back
d15101 1
a15101 1
force (o)
d15103 1
a15103 1
guess_name
d15105 1
a15105 1
has_link_code
d15107 1
a15107 1
htmlifypods (o)
d15109 1
a15109 1
init_dirscan
d15111 1
a15111 1
init_main
d15113 1
a15113 1
init_others
d15115 1
a15115 1
install (o)
d15117 1
a15117 1
installbin (o)
d15119 1
a15119 1
libscan (o)
d15121 1
a15121 1
linkext (o)
d15123 1
a15123 1
lsdir
d15125 1
a15125 1
macro (o)
d15127 1
a15127 1
makeaperl (o)
d15129 1
a15129 1
makefile (o)
d15131 1
a15131 1
manifypods (o)
d15133 1
a15133 1
maybe_command
d15135 1
a15135 1
maybe_command_in_dirs
d15137 1
a15137 1
needs_linking (o)
d15139 1
a15139 1
nicetext
d15141 1
a15141 1
parse_version
d15143 1
a15143 3
parse_abstract

pasthru (o)
d15145 1
a15145 1
path
d15147 2
a15148 1
perl_script
d15150 1
a15150 1
perldepend (o)
d15152 1
a15152 1
ppd
d15154 1
a15154 1
perm_rw (o)
d15156 1
a15156 1
perm_rwx (o)
d15158 1
a15158 1
pm_to_blib
d15160 2
a15161 1
post_constants (o)
d15163 1
a15163 1
post_initialize (o)
d15165 1
a15165 1
postamble (o)
d15167 1
a15167 3
prefixify

processPL (o)
d15169 1
a15169 1
realclean (o)
d15171 1
a15171 1
replace_manpage_separator
d15173 1
a15173 1
static (o)
d15175 1
a15175 1
static_lib (o)
d15177 1
a15177 1
staticmake (o)
d15179 1
a15179 1
subdir_x (o)
d15181 1
a15181 1
subdirs (o)
d15183 1
a15183 1
test (o)
d15185 1
a15185 1
test_via_harness (o)
d15187 1
a15187 1
test_via_script (o)
d15189 2
a15190 1
tool_autosplit (o)
d15192 1
a15192 1
tools_other (o)
d15194 1
a15194 1
tool_xsubpp (o)
d15196 1
a15196 1
top_targets (o)
d15198 1
a15198 1
writedoc
d15200 1
a15200 1
xs_c (o)
d15202 1
a15202 1
xs_cpp (o)
d15204 2
a15205 1
xs_o (o)
d15207 1
a15207 1
perl_archive
d15209 1
a15209 1
perl_archive_after
d15211 1
a15211 1
export_list
d15213 1
a15213 1
=over 4
d15215 1
a15215 1
=item SEE ALSO
d15219 1
a15219 2
=head2 ExtUtils::MM_VMS - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d15229 1
a15229 5
=item Methods always loaded

wraplist

=back
d15231 1
a15231 1
=back
d15233 1
a15233 1
rootdir (override)
d15235 1
a15235 1
=over 4
d15237 1
a15237 1
=item SelfLoaded methods
d15239 2
a15240 1
guess_name (override)
d15244 1
a15244 1
find_perl (override)
d15246 1
a15246 1
path (override)
d15248 1
a15248 1
maybe_command (override)
d15250 1
a15250 1
maybe_command_in_dirs (override)
d15252 1
a15252 1
perl_script (override)
d15254 1
a15254 1
file_name_is_absolute (override)
d15256 1
a15256 1
replace_manpage_separator
d15258 1
a15258 1
init_others (override)
d15260 1
a15260 1
constants (override)
d15262 1
a15262 1
cflags (override)
d15264 1
a15264 1
const_cccmd (override)
d15266 1
a15266 1
pm_to_blib (override)
d15268 1
a15268 1
tool_autosplit (override)
d15270 1
a15270 1
tool_sxubpp (override)
d15272 1
a15272 1
xsubpp_version (override)
d15274 1
a15274 1
tools_other (override)
d15276 1
a15276 1
dist (override)
d15278 1
a15278 1
c_o (override)
d15280 1
a15280 1
xs_c (override)
d15282 1
a15282 1
xs_o (override)
d15284 1
a15284 1
top_targets (override)
d15286 1
a15286 1
dlsyms (override)
d15288 1
a15288 1
dynamic_lib (override)
d15290 1
a15290 1
dynamic_bs (override)
d15292 1
a15292 1
static_lib (override)
d15294 1
a15294 1
manifypods (override)
d15296 1
a15296 1
processPL (override)
d15298 1
a15298 1
installbin (override)
d15300 1
a15300 1
subdir_x (override)
d15302 1
a15302 1
clean (override)
d15304 2
a15305 1
realclean (override)
d15307 1
a15307 1
dist_basics (override)
d15309 1
a15309 1
dist_core (override)
d15311 1
a15311 1
dist_dir (override)
d15313 1
a15313 1
dist_test (override)
d15315 1
a15315 1
install (override)
d15317 1
a15317 1
perldepend (override)
d15319 1
a15319 1
makefile (override)
d15321 1
a15321 1
test (override)
d15323 1
a15323 1
test_via_harness (override)
d15325 1
a15325 1
test_via_script (override)
d15327 1
a15327 1
makeaperl (override)
d15329 1
a15329 1
nicetext (override)
d15331 1
a15331 2
=head2 ExtUtils::MM_Win32 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d15333 1
a15333 1
=over 4
d15335 1
a15335 1
=item SYNOPSIS
d15337 1
a15337 1
=item DESCRIPTION
d15339 1
a15339 1
=back
d15341 1
a15341 1
catfile
d15343 1
a15343 1
constants (o)
d15345 1
a15345 1
static_lib (o)
d15347 1
a15347 1
dynamic_bs (o)
d15349 1
a15349 1
dynamic_lib (o)
d15351 1
a15351 1
canonpath
d15353 1
a15353 1
perl_script
d15355 1
a15355 1
pm_to_blib
d15357 1
a15357 1
test_via_harness (o)
d15359 1
a15359 1
tool_autosplit (override)
d15361 1
a15361 1
tools_other (o)
d15363 1
a15363 1
xs_o (o)
d15365 1
a15365 1
top_targets (o)
d15367 1
a15367 1
htmlifypods (o)
d15369 1
a15369 1
manifypods (o)
d15371 1
a15371 1
dist_ci (o)
d15373 1
a15373 1
dist_core (o)
d15375 1
a15375 1
pasthru (o)
d15377 1
a15377 1
=head2 ExtUtils::MakeMaker - create an extension Makefile
d15379 1
a15379 1
=over 4
d15381 1
a15381 1
=item SYNOPSIS
d15383 1
a15383 1
=item DESCRIPTION
d15385 1
a15385 1
=over 4
d15387 1
a15387 1
=item How To Write A Makefile.PL
d15389 1
a15389 1
=item Default Makefile Behaviour
d15391 1
a15391 1
=item make test
d15393 1
a15393 1
=item make testdb
d15395 1
a15395 1
=item make install
d15397 1
a15397 1
=item PREFIX and LIB attribute
d15399 1
a15399 1
=item AFS users
d15401 1
a15401 1
=item Static Linking of a new Perl Binary
d15403 1
a15403 1
=item Determination of Perl Library and Installation Locations
d15405 4
a15408 1
=item Which architecture dependent directory?
d15410 1
a15410 1
=item Using Attributes and Parameters
d15412 1
a15412 15
ABSTRACT, ABSTRACT_FROM, AUTHOR, BINARY_LOCATION, C, CAPI, CCFLAGS, CONFIG,
CONFIGURE, DEFINE, DIR, DISTNAME, DL_FUNCS, DL_VARS, EXCLUDE_EXT,
EXE_FILES, FIRST_MAKEFILE, FULLPERL, FUNCLIST, H, HTMLLIBPODS,
HTMLSCRIPTPODS, IMPORTS, INC, INCLUDE_EXT, INSTALLARCHLIB, INSTALLBIN,
INSTALLDIRS, INSTALLHTMLPRIVLIBDIR, INSTALLHTMLSCRIPTDIR,
INSTALLHTMLSITELIBDIR, INSTALLMAN1DIR, INSTALLMAN3DIR, INSTALLPRIVLIB,
INSTALLSCRIPT, INSTALLSITEARCH, INSTALLSITELIB, INST_ARCHLIB, INST_BIN,
INST_EXE, INST_HTMLLIBDIR, INST_HTMLSCRIPTDIR, INST_LIB, INST_MAN1DIR,
INST_MAN3DIR, INST_SCRIPT, LDFROM, LIB, LIBPERL_A, LIBS, LINKTYPE,
MAKEAPERL, MAKEFILE, MAN1PODS, MAN3PODS, MAP_TARGET, MYEXTLIB, NAME,
NEEDS_LINKING, NOECHO, NORECURS, NO_VC, OBJECT, OPTIMIZE, PERL, PERLMAINCC,
PERL_ARCHLIB, PERL_LIB, PERL_MALLOC_OK, PERL_SRC, PERM_RW, PERM_RWX,
PL_FILES, PM, PMLIBDIRS, PM_FILTER, POLLUTE, PPM_INSTALL_EXEC,
PPM_INSTALL_SCRIPT, PREFIX, PREREQ_PM, SKIP, TYPEMAPS, VERSION,
VERSION_FROM, XS, XSOPT, XSPROTOARG, XS_VERSION
d15414 1
a15414 1
=item Additional lowercase attributes
d15416 1
a15416 2
clean, depend, dist, dynamic_lib, linkext, macro, realclean, test,
tool_autosplit
d15418 1
a15418 1
=item Overriding MakeMaker Methods
d15420 1
a15420 1
=item Hintsfile support
d15422 1
a15422 1
=item Distribution Support
d15424 1
a15424 3
   make distcheck,    make skipcheck,	 make distclean,    make manifest, 
  make distdir,    make tardist,    make dist,	  make uutardist,    make
shdist,    make zipdist,    make ci
d15426 1
a15426 1
=item Disabling an extension
d15428 1
a15428 1
=back
d15430 1
a15430 1
=item ENVIRONMENT
d15432 1
a15432 1
PERL_MM_OPT
d15434 1
a15434 1
=item SEE ALSO
d15436 1
a15436 1
=item AUTHORS
d15440 3
a15442 1
=head2 ExtUtils::Manifest - utilities to write and check a MANIFEST file
d15446 3
a15448 1
=item SYNOPSIS
d15450 1
a15450 1
=item DESCRIPTION
d15452 1
a15452 1
=item MANIFEST.SKIP
d15454 1
a15454 1
=item EXPORT_OK
d15456 1
a15456 1
=item GLOBAL VARIABLES
d15458 3
a15460 1
=item DIAGNOSTICS
d15462 1
a15462 2
C<Not in MANIFEST:> I<file>, C<No such file:> I<file>, C<MANIFEST:> I<$!>,
C<Added to MANIFEST:> I<file>
d15466 1
a15466 1
=item AUTHOR
d15470 1
a15470 1
=head2 ExtUtils::Miniperl, writemain - write the C code for perlmain.c
d15478 1
a15478 1
=item SEE ALSO
d15480 1
a15480 1
=back
d15482 1
a15482 1
=head2 ExtUtils::Mkbootstrap - make a bootstrap file for use by DynaLoader
d15484 3
a15486 1
=over 4
d15488 1
a15488 1
=item SYNOPSIS
d15490 1
a15490 1
=item DESCRIPTION
d15494 1
a15494 2
=head2 ExtUtils::Mksymlists - write linker options files for dynamic
extension
d15502 1
a15502 3
DLBASE, DL_FUNCS, DL_VARS, FILE, FUNCLIST, IMPORTS, NAME

=item AUTHOR
d15504 1
a15504 1
=item REVISION
d15508 1
a15508 1
=head2 ExtUtils::Packlist - manage .packlist files
d15512 5
a15516 1
=item SYNOPSIS
d15518 1
a15518 1
=item DESCRIPTION
d15520 1
a15520 1
=item USAGE
d15522 1
a15522 1
=item FUNCTIONS
d15524 1
a15524 1
new(), read(), write(), validate(), packlist_file()
d15526 1
a15526 1
=item EXAMPLE
d15528 1
a15528 1
=item AUTHOR
d15532 1
a15532 1
=head2 ExtUtils::testlib - add blib/* directories to @@INC
d15534 1
a15534 1
=over 4
d15536 1
a15536 1
=item SYNOPSIS
d15538 1
a15538 1
=item DESCRIPTION
d15542 2
a15543 1
=head2 Fatal - replace functions with equivalents which succeed or die
d15551 1
a15551 1
=item AUTHOR
d15553 1
a15553 1
=back
d15555 1
a15555 1
=head2 Fcntl - load the C Fcntl.h defines
d15559 7
a15565 1
=item SYNOPSIS
d15567 1
a15567 1
=item DESCRIPTION
d15569 1
a15569 1
=item NOTE
d15571 1
a15571 1
=item EXPORTED SYMBOLS
d15575 1
a15575 1
=head2 File::Basename, fileparse - split a pathname into pieces
d15583 5
a15587 1
fileparse_set_fstype, fileparse
d15589 1
a15589 1
=item EXAMPLES
d15591 1
a15591 1
C<basename>, C<dirname>
d15595 3
a15597 1
=head2 File::CheckTree, validate - run many filetest checks on a tree
d15601 3
a15603 1
=item SYNOPSIS
d15605 2
a15606 1
=item DESCRIPTION
d15610 3
a15612 1
=head2 File::Compare - Compare files or filehandles
d15616 1
a15616 1
=item SYNOPSIS
d15618 1
a15618 1
=item DESCRIPTION
d15620 1
a15620 1
=item RETURN
d15622 1
a15622 1
=item AUTHOR
d15626 1
a15626 1
=head2 File::Copy - Copy files or filehandles
d15634 4
d15640 5
a15644 1
=item Special behaviour if C<syscopy> is defined (OS/2, VMS and Win32)
d15646 1
a15646 1
rmscopy($from,$to[,$date_flag])
d15650 1
a15650 1
=item RETURN
d15652 1
a15652 1
=item AUTHOR
d15654 1
a15654 1
=back
d15656 1
a15656 1
=head2 File::DosGlob - DOS like globbing and then some
d15658 1
a15658 1
=over 4
d15660 1
a15660 1
=item SYNOPSIS
d15662 1
a15662 1
=item DESCRIPTION
d15664 1
a15664 1
=item EXPORTS (by request only)
d15668 2
d15672 1
a15672 1
=item HISTORY
d15674 1
a15674 1
=item SEE ALSO
d15678 2
a15679 1
=head2 File::Find, find - traverse a file tree
a15682 2
=item SYNOPSIS

a15684 6
C<wanted>, C<bydepth>, C<preprocess>, C<postprocess>, C<follow>,
C<follow_fast>, C<follow_skip>, C<no_chdir>, C<untaint>,
C<untaint_pattern>, C<untaint_skip>

=item CAVEAT

d15687 2
a15688 1
=head2 File::Glob - Perl extension for BSD glob routine
d15696 1
a15696 3
C<GLOB_ERR>, C<GLOB_MARK>, C<GLOB_NOCASE>, C<GLOB_NOCHECK>, C<GLOB_NOSORT>,
C<GLOB_BRACE>, C<GLOB_NOMAGIC>, C<GLOB_QUOTE>, C<GLOB_TILDE>, C<GLOB_CSH>,
C<GLOB_ALPHASORT>
d15698 1
a15698 1
=item DIAGNOSTICS
d15700 1
a15700 1
C<GLOB_NOSPACE>, C<GLOB_ABEND>
d15702 1
a15702 1
=item NOTES
d15706 2
d15710 1
a15710 1
=head2 File::Path - create or remove directory trees
a15713 2
=item SYNOPSIS

a15715 2
=item AUTHORS

d15718 1
a15718 1
=head2 File::Spec - portably perform operations on file names
a15721 2
=item SYNOPSIS

a15723 4
=item SEE ALSO

=item AUTHORS

d15726 2
a15727 1
=head2 File::Spec::Epoc - methods for Epoc file specs
a15730 2
=item SYNOPSIS

a15732 2
devnull

d15735 2
a15736 1
tmpdir
d15738 1
a15738 1
path
d15740 1
a15740 1
canonpath
d15742 1
a15742 7
splitpath

splitdir

catpath

abs2rel
d15744 1
a15744 1
rel2abs
d15748 1
a15748 1
=item SEE ALSO
d15752 1
a15752 1
=head2 File::Spec::Functions - portably perform operations on file names
d15760 4
d15766 1
a15766 1
=item Exports
d15770 1
a15770 1
=item SEE ALSO
d15774 1
a15774 1
=head2 File::Spec::Mac - File::Spec for MacOS
d15782 3
a15784 1
=item METHODS
d15786 1
a15786 1
canonpath
d15790 1
a15790 1
catdir
d15792 1
a15792 1
catfile
d15794 1
a15794 27
curdir

devnull

rootdir

tmpdir

updir

file_name_is_absolute

path

splitpath

splitdir

catpath

abs2rel

rel2abs

=over 4

=item SEE ALSO
d15798 1
a15798 1
=head2 File::Spec::OS2 - methods for OS/2 file specs
d15806 1
a15806 1
=back
d15808 2
a15809 1
=head2 File::Spec::Unix - methods used by File::Spec
d15811 1
a15811 1
=over 4
d15813 3
a15815 1
=item SYNOPSIS
d15817 1
a15817 1
=item DESCRIPTION
d15819 1
a15819 1
=item METHODS
d15821 1
a15821 1
canonpath
d15825 1
a15825 1
catdir
d15827 1
a15827 1
catfile
d15829 1
a15829 1
curdir
d15831 1
a15831 1
devnull
d15833 1
a15833 1
rootdir
d15835 1
a15835 1
tmpdir
d15837 1
a15837 1
updir
d15839 3
a15841 1
no_upwards
d15843 1
a15843 1
case_tolerant
d15845 2
a15846 1
file_name_is_absolute
d15848 1
a15848 1
path
d15850 1
a15850 1
join
d15852 1
a15852 3
splitpath

splitdir
d15854 1
a15854 1
catpath
d15856 1
a15856 1
abs2rel
d15858 1
a15858 5
rel2abs

=over 4

=item SEE ALSO
d15862 1
a15862 1
=head2 File::Spec::VMS - methods for VMS file specs
d15870 5
a15874 1
eliminate_macros
d15876 1
a15876 1
=back
d15878 13
a15890 1
fixpath
d15894 1
a15894 1
=item Methods always loaded
d15896 1
a15896 1
canonpath (override)
d15900 4
a15903 1
catdir
d15905 1
a15905 1
catfile
d15907 1
a15907 1
curdir (override)
d15909 1
a15909 1
devnull (override)
d15911 1
a15911 1
rootdir (override)
d15913 1
a15913 1
tmpdir (override)
d15915 1
a15915 1
updir (override)
d15917 1
a15917 1
case_tolerant (override)
d15919 1
a15919 1
path (override)
d15921 1
a15921 1
file_name_is_absolute (override)
d15923 1
a15923 1
splitpath (override)
d15925 1
a15925 1
splitdir (override)
d15927 1
a15927 1
catpath (override)
d15929 1
a15929 1
abs2rel (override)
d15931 1
a15931 1
rel2abs (override)
d15933 1
a15933 1
=over 4
d15935 1
a15935 1
=item SEE ALSO
d15937 1
a15937 1
=back
d15939 7
a15945 1
=head2 File::Spec::Win32 - methods for Win32 file specs
d15949 1
a15949 3
=item SYNOPSIS

=item DESCRIPTION
d15951 5
a15955 1
devnull
d15959 1
a15959 3
tmpdir

catfile
d15961 1
a15961 1
canonpath
d15963 1
a15963 1
splitpath
d15965 1
a15965 1
splitdir
d15967 1
a15967 1
catpath
d15969 1
a15969 3
=over 4

=item SEE ALSO
d15973 1
a15973 1
=head2 File::Temp - return name and handle of a temporary file safely
a15976 2
=item PORTABILITY

d15981 1
a15981 1
=back
d15983 1
a15983 1
=over 4
d15985 1
a15985 1
=item FUNCTIONS
d15987 1
a15987 1
B<tempfile>
d15989 4
a15992 1
=back
d15994 1
a15994 1
B<tempdir>
d15996 1
a15996 15
=over 4

=item MKTEMP FUNCTIONS

B<mkstemp>

=back

B<mkstemps>

B<mkdtemp>

B<mktemp>

=over 4
d15998 1
a15998 1
=item POSIX FUNCTIONS
d16000 1
a16000 1
B<tmpnam>
d16004 1
a16004 1
B<tmpfile>
d16008 1
a16008 1
=item ADDITIONAL FUNCTIONS
d16010 1
a16010 3
B<tempnam>

=back
d16014 1
a16014 1
=item UTILITY FUNCTIONS
d16016 4
a16019 1
B<unlink0>
d16023 5
a16027 1
=over 4
d16029 1
a16029 1
=item PACKAGE VARIABLES
d16031 1
a16031 1
B<safe_level>, STANDARD, MEDIUM, HIGH
d16035 1
a16035 1
TopSystemUID
d16039 7
a16045 1
=item WARNING
d16047 1
a16047 1
=over 4
d16049 1
a16049 1
=item Temporary files and NFS
d16051 7
a16057 1
=back
d16059 1
a16059 1
=item HISTORY
d16065 2
d16069 1
a16069 1
=head2 File::stat - by-name interface to Perl's built-in stat() functions
d16077 2
a16078 1
=item NOTE
d16082 2
d16086 2
a16087 1
=head2 FileCache - keep more files open than the system permits
d16095 5
a16099 1
=item BUGS
d16103 1
a16103 1
=head2 FileHandle - supply object methods for filehandles
d16107 1
a16107 1
=item SYNOPSIS
d16109 1
a16109 1
=item DESCRIPTION
d16111 1
a16111 1
$fh->print, $fh->printf, $fh->getline, $fh->getlines
d16113 1
a16113 1
=item SEE ALSO
d16117 1
a16117 1
=head2 FindBin - Locate directory of original perl script
d16121 1
a16121 11
=item SYNOPSIS

=item DESCRIPTION

=item EXPORTABLE VARIABLES

=item KNOWN BUGS

=item AUTHORS

=item COPYRIGHT
d16125 1
a16125 1
=head2 GDBM_File - Perl5 access to the gdbm library.
d16129 1
a16129 1
=item SYNOPSIS
d16131 1
a16131 1
=item DESCRIPTION
d16133 1
a16133 1
=item AVAILABILITY
d16135 1
a16135 1
=item BUGS
d16137 1
a16137 1
=item SEE ALSO
d16141 1
a16141 1
=head2 Getopt::Long - Extended processing of command line options
d16145 1
a16145 5
=item SYNOPSIS

=item DESCRIPTION

=item Command Line Options, an Introduction
d16147 1
a16147 1
=item Getting Started with Getopt::Long
d16149 1
a16149 1
=over 4
d16151 2
a16152 1
=item Simple options
d16154 1
a16154 1
=item A little bit less simple options
d16156 1
a16156 1
=item Mixing command line option with other arguments
d16158 1
a16158 1
=item Options with values
d16160 1
a16160 1
=item Options with multiple values
d16162 1
a16162 1
=item Options with hash values
d16164 2
a16165 1
=item User-defined subroutines to handle options
d16167 1
a16167 1
=item Options with multiple names
d16169 2
a16170 1
=item Case and abbreviations
d16172 2
a16173 1
=item Summary of Option Specifications
d16175 1
a16175 1
!, +, s, i, f, : I<type> [ I<desttype> ]
d16179 1
a16179 1
=item Advanced Possibilities
d16183 4
a16186 1
=item Object oriented interface
d16188 1
a16188 1
=item Documentation and help texts
d16190 1
a16190 1
=item Storing options in a hash
d16192 1
a16192 1
=item Bundling
d16194 1
a16194 1
=item The lonesome dash
d16196 1
a16196 1
=item Argument call-back
d16200 3
a16202 1
=item Configuring Getopt::Long
d16204 2
a16205 5
default, posix_default, auto_abbrev, getopt_compat, gnu_compat, gnu_getopt,
require_order, permute, bundling (default: disabled), bundling_override
(default: disabled), ignore_case  (default: enabled), ignore_case_always
(default: disabled), pass_through (default: disabled), prefix,
prefix_pattern, debug (default: disabled)
d16207 1
a16207 1
=item Return values and Errors
d16209 1
a16209 1
=item Legacy
d16211 1
a16211 1
=over 4
d16213 1
a16213 1
=item Default destinations
d16215 1
a16215 1
=item Alternative option starters
d16217 1
a16217 1
=item Configuration variables
d16221 2
a16222 1
=item Trouble Shooting
d16226 1
a16226 1
=item Warning: Ignoring '!' modifier for short option
d16228 1
a16228 2
=item GetOptions does not return a false result when an option is not
supplied
d16230 1
a16230 1
=back
a16233 2
=item COPYRIGHT AND DISCLAIMER

d16236 2
a16237 2
=head2 Getopt::Std, getopt - Process single-character switches with switch
clustering
d16245 6
d16253 1
a16253 2
=head2 I18N::Collate - compare 8-bit scalar data according to the current
locale
d16261 10
a16270 1
=back
d16272 1
a16272 1
=head2 IO - load various IO modules
d16274 1
a16274 1
=over 4
d16276 1
a16276 1
=item SYNOPSIS
d16278 1
a16278 1
=item DESCRIPTION
d16282 1
a16282 1
=head2 IO::Dir - supply object methods for directory handles
d16290 3
a16292 2
new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, IO::Dir, DIRNAME [, OPTIONS ]
d16294 1
a16294 1
=item SEE ALSO
a16297 2
=item COPYRIGHT

d16300 1
a16300 1
=head2 IO::File - supply object methods for filehandles
d16308 1
a16308 1
=item CONSTRUCTOR
d16310 1
a16310 1
new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile
d16312 1
a16312 1
=item METHODS
d16314 1
a16314 1
open( FILENAME [,MODE [,PERMS]] )
d16316 1
a16316 1
=item SEE ALSO
d16318 1
a16318 1
=item HISTORY
d16322 1
a16322 1
=head2 IO::Handle - supply object methods for I/O handles
d16330 1
a16330 1
=item CONSTRUCTOR
d16332 1
a16332 1
new (), new_from_fd ( FD, MODE )
d16334 1
a16334 1
=item METHODS
d16336 2
a16337 4
$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint
d16339 1
a16339 1
=item NOTE
d16341 4
a16344 1
=item SEE ALSO
d16346 1
a16346 1
=item BUGS
d16348 1
a16348 1
=item HISTORY
a16351 2
=head2 IO::Pipe - supply object methods for pipes

d16354 1
a16354 1
=item SYNOPSIS
d16356 4
a16359 1
=item DESCRIPTION
d16361 1
a16361 1
=item CONSTRUCTOR
d16363 1
a16363 1
new ( [READER, WRITER] )
d16365 1
a16365 1
=item METHODS
d16367 2
a16368 1
reader ([ARGS]), writer ([ARGS]), handles ()
d16370 1
a16370 1
=item SEE ALSO
d16372 1
a16372 1
=item AUTHOR
d16374 1
a16374 1
=item COPYRIGHT
d16376 1
a16376 1
=back
d16378 1
a16378 1
=head2 IO::Poll - Object interface to system poll call
d16382 3
a16384 1
=item SYNOPSIS
d16386 4
a16389 1
=item DESCRIPTION
d16391 1
a16391 1
=item METHODS
d16393 1
a16393 4
mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )

=item SEE ALSO
d16397 1
a16397 1
=item COPYRIGHT
d16401 2
a16402 1
=head2 IO::Seekable - supply seek based methods for I/O objects
d16406 1
a16406 1
=item SYNOPSIS
d16410 1
a16410 5
$io->getpos, $io->setpos, $io->setpos ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=1 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell

=item HISTORY
d16414 1
a16414 1
=head2 IO::Select - OO interface to the select system call
d16422 1
a16422 1
=item CONSTRUCTOR
d16424 1
a16424 1
new ( [ HANDLES ] )
d16426 1
a16426 1
=item METHODS
d16428 26
a16453 3
add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, ERROR [, TIMEOUT ] )
d16455 1
a16455 1
=item EXAMPLE
d16457 1
a16457 1
=item AUTHOR
d16459 1
a16459 1
=item COPYRIGHT
d16461 1
a16461 1
=back
d16463 1
a16463 1
=head2 IO::Socket - Object interface to socket communications
d16465 1
a16465 1
=over 4
d16467 1
a16467 1
=item SYNOPSIS
d16469 5
a16473 1
=item DESCRIPTION
d16475 1
a16475 1
=item CONSTRUCTOR
d16477 1
a16477 1
new ( [ARGS] )
d16479 1
a16479 1
=item METHODS
d16481 1
a16481 2
accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), timeout([VAL]),
sockopt(OPT [, VAL]), sockdomain, socktype, protocol, connected
d16483 1
a16483 1
=item SEE ALSO
d16485 1
a16485 1
=item AUTHOR
d16487 1
a16487 1
=item COPYRIGHT
d16489 1
a16489 1
=back
d16491 1
a16491 1
=head2 IO::Socket::INET - Object interface for AF_INET domain sockets
d16493 1
a16493 1
=over 4
d16495 1
a16495 1
=item SYNOPSIS
d16497 1
a16497 1
=item DESCRIPTION
d16499 1
a16499 1
=item CONSTRUCTOR
d16501 1
a16501 1
new ( [ARGS] )
d16503 1
a16503 1
=over 4
d16505 1
a16505 1
=item METHODS
d16507 1
a16507 2
sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()
d16509 1
a16509 1
=back
d16511 1
a16511 1
=item SEE ALSO
d16513 1
a16513 1
=item AUTHOR
d16515 1
a16515 1
=item COPYRIGHT
d16517 1
a16517 1
=back
d16519 1
a16519 1
=head2 IO::Socket::UNIX - Object interface for AF_UNIX domain sockets
d16521 1
a16521 1
=over 4
d16523 1
a16523 1
=item SYNOPSIS
d16525 1
a16525 1
=item DESCRIPTION
d16527 1
a16527 1
=item CONSTRUCTOR
d16529 1
a16529 1
new ( [ARGS] )
d16531 1
a16531 1
=item METHODS
d16533 1
a16533 1
hostpath(), peerpath()
d16535 1
a16535 1
=item SEE ALSO
d16537 1
a16537 1
=item AUTHOR
d16539 2
a16540 1
=item COPYRIGHT
d16544 2
a16545 2
=head2 IO::lib::IO::Dir, IO::Dir - supply object methods for directory
handles
d16553 7
a16559 2
new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, IO::Dir, DIRNAME [, OPTIONS ]
d16561 1
a16561 1
=item SEE ALSO
d16565 1
a16565 1
=item COPYRIGHT
d16569 1
a16569 1
=head2 IO::lib::IO::File, IO::File - supply object methods for filehandles
d16577 1
a16577 1
=item CONSTRUCTOR
d16579 1
a16579 1
new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile
d16581 1
a16581 1
=item METHODS
d16583 1
a16583 1
open( FILENAME [,MODE [,PERMS]] )
d16585 1
a16585 1
=item SEE ALSO
d16587 1
a16587 1
=item HISTORY
d16591 1
a16591 2
=head2 IO::lib::IO::Handle, IO::Handle - supply object methods for I/O
handles
d16599 1
a16599 1
=item CONSTRUCTOR
d16601 8
a16608 1
new (), new_from_fd ( FD, MODE )
d16610 1
a16610 1
=item METHODS
d16612 1
a16612 4
$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint
d16614 1
a16614 1
=item NOTE
d16616 1
a16616 5
=item SEE ALSO

=item BUGS

=item HISTORY
d16620 1
a16620 1
=head2 IO::lib::IO::Pipe, IO::Pipe - supply object methods for pipes
d16628 1
a16628 1
=item CONSTRUCTOR
d16630 1
a16630 1
new ( [READER, WRITER] )
d16632 1
a16632 1
=item METHODS
d16634 1
a16634 1
reader ([ARGS]), writer ([ARGS]), handles ()
d16636 1
a16636 1
=item SEE ALSO
d16638 1
a16638 1
=item AUTHOR
d16640 1
a16640 1
=item COPYRIGHT
d16642 1
a16642 1
=back
d16644 1
a16644 1
=head2 IO::lib::IO::Poll, IO::Poll - Object interface to system poll call
d16646 1
a16646 1
=over 4
d16648 1
a16648 1
=item SYNOPSIS
d16652 1
a16652 1
=item METHODS
d16654 1
a16654 2
mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )
d16656 1
a16656 1
=item SEE ALSO
d16658 9
a16666 1
=item AUTHOR
d16668 1
a16668 1
=item COPYRIGHT
d16670 6
a16675 1
=back
d16677 1
a16677 2
=head2 IO::lib::IO::Seekable, IO::Seekable - supply seek based methods for
I/O objects
d16679 2
a16680 1
=over 4
d16682 1
a16682 1
=item SYNOPSIS
d16684 1
a16684 1
=item DESCRIPTION
d16686 1
a16686 3
$io->getpos, $io->setpos, $io->setpos ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=1 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell
d16688 1
a16688 1
=item HISTORY
d16692 1
a16692 2
=head2 IO::lib::IO::Select, IO::Select - OO interface to the select system
call
d16694 2
a16695 1
=over 4
d16697 1
a16697 1
=item SYNOPSIS
d16699 1
a16699 3
=item DESCRIPTION

=item CONSTRUCTOR
d16701 1
a16701 1
new ( [ HANDLES ] )
d16703 1
a16703 1
=item METHODS
d16705 1
a16705 3
add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, ERROR [, TIMEOUT ] )
d16707 1
a16707 1
=item EXAMPLE
a16710 2
=item COPYRIGHT

d16713 1
a16713 2
=head2 IO::lib::IO::Socket, IO::Socket - Object interface to socket
communications
d16721 1
a16721 1
=item CONSTRUCTOR
d16723 1
a16723 1
new ( [ARGS] )
d16725 1
a16725 1
=item METHODS
d16727 2
a16728 2
accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), timeout([VAL]),
sockopt(OPT [, VAL]), sockdomain, socktype, protocol, connected
d16730 1
a16730 1
=item SEE ALSO
d16732 1
a16732 1
=item AUTHOR
d16734 1
a16734 1
=item COPYRIGHT
a16737 3
=head2 IO::lib::IO::Socket::INET, IO::Socket::INET - Object interface for
AF_INET domain sockets

d16740 1
a16740 1
=item SYNOPSIS
d16742 2
a16743 1
=item DESCRIPTION
d16745 1
a16745 3
=item CONSTRUCTOR

new ( [ARGS] )
d16749 1
a16749 4
=item METHODS

sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()
d16753 1
a16753 1
=item SEE ALSO
d16757 1
a16757 1
=item COPYRIGHT
d16761 1
a16761 2
=head2 IO::lib::IO::Socket::UNIX, IO::Socket::UNIX - Object interface for
AF_UNIX domain sockets
d16769 5
a16773 1
=item CONSTRUCTOR
d16775 1
a16775 1
new ( [ARGS] )
d16777 1
a16777 1
=item METHODS
d16779 1
a16779 1
hostpath(), peerpath()
a16782 2
=item AUTHOR

d16787 2
a16788 1
=head2 IPC::Msg - SysV Msg IPC object class
d16794 4
d16800 2
a16801 1
=item METHODS
d16803 1
a16803 3
new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat
d16805 1
a16805 1
=item SEE ALSO
d16807 1
a16807 3
=item AUTHOR

=item COPYRIGHT
a16810 2
=head2 IPC::Open2, open2 - open a process for both reading and writing

d16813 1
a16813 1
=item SYNOPSIS
d16815 1
a16815 1
=item DESCRIPTION
d16817 1
a16817 1
=item WARNING 
d16819 1
a16819 1
=item SEE ALSO
d16823 1
a16823 2
=head2 IPC::Open3, open3 - open a process for reading, writing, and error
handling
d16825 1
a16825 1
=over 4
d16827 1
a16827 1
=item SYNOPSIS
d16829 1
a16829 1
=item DESCRIPTION
d16831 1
a16831 1
=item WARNING
a16834 2
=head2 IPC::Semaphore - SysV Semaphore IPC object class

d16837 1
a16837 1
=item SYNOPSIS
d16839 1
a16839 1
=item DESCRIPTION
d16841 1
a16841 1
=item METHODS
d16843 1
a16843 4
new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat
d16845 1
a16845 1
=item SEE ALSO
d16847 1
a16847 1
=item AUTHOR
d16849 1
a16849 1
=item COPYRIGHT
d16853 1
a16853 1
=head2 IPC::SysV - SysV IPC constants
d16855 1
a16855 1
=over 4
d16857 1
a16857 1
=item SYNOPSIS
d16859 1
a16859 1
=item DESCRIPTION
d16861 1
a16861 1
ftok( PATH, ID )
d16863 1
a16863 1
=item SEE ALSO
d16865 1
a16865 1
=item AUTHORS
d16867 1
a16867 1
=item COPYRIGHT
a16870 2
=head2 IPC::SysV::Msg, IPC::Msg - SysV Msg IPC object class

d16873 1
a16873 1
=item SYNOPSIS
d16875 1
a16875 1
=item DESCRIPTION
d16877 1
a16877 1
=item METHODS
d16879 1
a16879 3
new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat
d16881 1
a16881 1
=item SEE ALSO
d16883 1
a16883 1
=item AUTHOR
d16885 1
a16885 1
=item COPYRIGHT
a16888 3
=head2 IPC::SysV::Semaphore, IPC::Semaphore - SysV Semaphore IPC object
class

d16891 1
a16891 1
=item SYNOPSIS
d16893 1
a16893 1
=item DESCRIPTION
d16895 1
a16895 1
=item METHODS
d16897 1
a16897 4
new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat
d16899 1
a16899 1
=item SEE ALSO
d16901 1
a16901 1
=item AUTHOR
d16903 1
a16903 1
=item COPYRIGHT
a16906 2
=head2 Math::BigFloat - Arbitrary length float math package

d16909 1
a16909 1
=item SYNOPSIS
d16911 1
a16911 1
=item DESCRIPTION
d16913 1
a16913 2
number format, Error returns 'NaN', Division is computed to, Rounding is
performed
d16915 1
a16915 3
=item BUGS

=item AUTHOR
a16918 2
=head2 Math::BigInt - Arbitrary size integer math package

d16921 1
a16921 1
=item SYNOPSIS
d16923 1
a16923 1
=item DESCRIPTION
d16925 1
a16925 1
Canonical notation, Input, Output
d16927 1
a16927 1
=item EXAMPLES
d16929 1
a16929 1
=item Autocreating constants
d16931 1
a16931 1
=item BUGS
d16933 1
a16933 1
=item AUTHOR
a16936 3
=head2 Math::Complex - complex numbers and associated mathematical
functions

d16939 1
a16939 1
=item SYNOPSIS
d16941 1
a16941 1
=item DESCRIPTION
d16943 1
a16943 1
=item OPERATIONS
d16945 1
a16945 1
=item CREATION
d16947 1
a16947 1
=item STRINGIFICATION
d16951 1
a16951 1
=item CHANGED IN PERL 5.6
d16955 1
a16955 1
=item USAGE
d16957 1
a16957 1
=item ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO
d16959 1
a16959 1
=item ERRORS DUE TO INDIGESTIBLE ARGUMENTS
d16961 1
a16961 1
=item BUGS
d16963 1
a16963 1
=item AUTHORS
d16967 1
a16967 1
=head2 Math::Trig - trigonometric functions
d16969 1
a16969 1
=over 4
d16971 1
a16971 1
=item SYNOPSIS
d16973 1
a16973 1
=item DESCRIPTION
d16975 1
a16975 1
=item TRIGONOMETRIC FUNCTIONS
d16977 1
a16977 1
B<tan>
d16981 1
a16981 3
=item ERRORS DUE TO DIVISION BY ZERO

=item SIMPLE (REAL) ARGUMENTS, COMPLEX RESULTS
a16984 4
=item PLANE ANGLE CONVERSIONS

=item RADIAL COORDINATE CONVERSIONS

d16987 1
a16987 6
=item COORDINATE SYSTEMS

=item 3-D ANGLE CONVERSIONS

cartesian_to_cylindrical, cartesian_to_spherical, cylindrical_to_cartesian,
cylindrical_to_spherical, spherical_to_cartesian, spherical_to_cylindrical
d16991 3
a16993 1
=item GREAT CIRCLE DISTANCES
d16995 1
a16995 1
=item EXAMPLES
d16997 1
a16997 1
=item BUGS
d16999 1
a16999 1
=item AUTHORS
a17002 2
=head2 NDBM_File - Tied access to ndbm files

d17005 1
a17005 1
=item SYNOPSIS
d17007 1
a17007 3
C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>

=item DIAGNOSTICS
d17011 1
a17011 1
=item C<ndbm store returned -1, errno 22, key "..." at ...>
d17013 1
a17013 3
=back

=item BUGS AND WARNINGS
d17017 1
a17017 1
=head2 Net::Ping - check a remote host for reachability
d17025 2
d17029 1
a17029 1
=item Functions
d17031 1
a17031 2
Net::Ping->new([$proto [, $def_timeout [, $bytes]]]);, $p->ping($host [,
$timeout]);, $p->close();, pingecho($host [, $timeout]);
d17035 3
a17037 1
=item WARNING
d17039 1
a17039 1
=item NOTES
d17043 1
a17043 2
=head2 Net::hostent - by-name interface to Perl's built-in gethost*()
functions
d17045 1
a17045 1
=over 4
d17047 1
a17047 1
=item SYNOPSIS
d17049 1
a17049 1
=item DESCRIPTION
d17051 1
a17051 1
=item EXAMPLES
d17053 1
a17053 1
=item NOTE
d17055 1
a17055 1
=item AUTHOR
d17057 1
a17057 1
=back
d17059 1
a17059 2
=head2 Net::netent - by-name interface to Perl's built-in getnet*()
functions
d17061 1
a17061 1
=over 4
d17063 1
a17063 1
=item SYNOPSIS
d17065 1
a17065 1
=item DESCRIPTION
d17067 1
a17067 1
=item EXAMPLES
d17069 1
a17069 1
=item NOTE
d17071 1
a17071 1
=item AUTHOR
d17073 1
a17073 1
=back
d17075 1
a17075 2
=head2 Net::protoent - by-name interface to Perl's built-in getproto*()
functions
d17077 1
a17077 1
=over 4
d17079 1
a17079 1
=item SYNOPSIS
d17081 1
a17081 1
=item DESCRIPTION
d17083 1
a17083 1
=item NOTE
d17085 1
a17085 1
=item AUTHOR
d17087 1
a17087 1
=back
d17089 1
a17089 2
=head2 Net::servent - by-name interface to Perl's built-in getserv*()
functions
d17091 1
a17091 1
=over 4
d17093 1
a17093 1
=item SYNOPSIS
d17095 1
a17095 1
=item DESCRIPTION
d17097 1
a17097 1
=item EXAMPLES
d17099 1
a17099 1
=item NOTE
d17101 1
a17101 1
=item AUTHOR
a17104 2
=head2 O - Generic interface to Perl Compiler backends

d17107 1
a17107 1
=item SYNOPSIS
d17109 1
a17109 1
=item DESCRIPTION
d17111 1
a17111 1
=item CONVENTIONS
d17113 1
a17113 1
=item IMPLEMENTATION
d17115 1
a17115 1
=item AUTHOR
d17117 1
a17117 1
=back
d17119 1
a17119 1
=head2 ODBM_File - Tied access to odbm files
d17121 1
a17121 1
=over 4
d17123 1
a17123 1
=item SYNOPSIS
d17125 1
a17125 1
C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>
d17127 1
a17127 1
=item DIAGNOSTICS
d17129 1
a17129 1
=over 4
d17131 1
a17131 1
=item C<odbm store returned -1, errno 22, key "..." at ...>
d17133 1
a17133 1
=back
d17135 1
a17135 1
=item BUGS AND WARNINGS
d17139 1
a17139 1
=head2 Opcode - Disable named opcodes when compiling perl code
d17147 2
a17148 1
=item NOTE
d17150 1
a17150 1
=item WARNING
d17152 4
a17155 1
=item Operator Names and Operator Lists
d17157 1
a17157 2
an operator name (opname), an operator tag name (optag), a negated opname
or optag, an operator set (opset)
d17159 1
a17159 1
=item Opcode Functions
d17161 1
a17161 4
opcodes, opset (OP, ...), opset_to_ops (OPSET), opset_to_hex (OPSET),
full_opset, empty_opset, invert_opset (OPSET), verify_opset (OPSET, ...),
define_optag (OPTAG, OPSET), opmask_add (OPSET), opmask, opdesc (OP, ...),
opdump (PAT)
d17163 1
a17163 1
=item Manipulating Opsets
d17165 1
a17165 1
=item TO DO (maybe)
d17169 2
d17173 1
a17173 1
=item Predefined Opcode Tags
d17175 1
a17175 4
:base_core, :base_mem, :base_loop, :base_io, :base_orig, :base_math,
:base_thread, :default, :filesys_read, :sys_db, :browse, :filesys_open,
:filesys_write, :subprocess, :ownprocess, :others, :still_to_be_decided,
:dangerous
d17179 3
a17181 1
=item AUTHORS
d17185 1
a17185 2
=head2 Opcode::Safe, Safe - Compile and execute code in restricted
compartments
d17193 15
a17207 1
a new namespace, an operator mask
d17209 1
a17209 1
=item WARNING
d17211 1
a17211 1
=over 4
d17213 1
a17213 1
=item RECENT CHANGES
d17215 1
a17215 1
=item Methods in class Safe
d17217 1
a17217 4
permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)
d17219 1
a17219 1
=item Some Safety Issues
d17221 1
a17221 1
Memory, CPU, Snooping, Signals, State Changes
d17223 1
a17223 1
=item AUTHOR
d17227 1
a17227 1
=back
d17229 1
a17229 2
=head2 Opcode::ops, ops - Perl pragma to restrict unsafe operations when
compiling
d17231 1
a17231 1
=over 4
d17233 1
a17233 1
=item SYNOPSIS	
d17235 1
a17235 1
=item DESCRIPTION
d17237 1
a17237 1
=item SEE ALSO
d17239 1
a17239 1
=back
d17241 1
a17241 1
=head2 POSIX - Perl interface to IEEE Std 1003.1
d17243 1
a17243 1
=over 4
d17245 1
a17245 1
=item SYNOPSIS
d17247 1
a17247 1
=item DESCRIPTION
d17249 1
a17249 1
=item NOTE
d17251 1
a17251 1
=item CAVEATS 
d17253 1
a17253 1
=item FUNCTIONS
d17255 1
a17255 26
_exit, abort, abs, access, acos, alarm, asctime, asin, assert, atan, atan2,
atexit, atof, atoi, atol, bsearch, calloc, ceil, chdir, chmod, chown,
clearerr, clock, close, closedir, cos, cosh, creat, ctermid, ctime,
cuserid, difftime, div, dup, dup2, errno, execl, execle, execlp, execv,
execve, execvp, exit, exp, fabs, fclose, fcntl, fdopen, feof, ferror,
fflush, fgetc, fgetpos, fgets, fileno, floor, fmod, fopen, fork, fpathconf,
fprintf, fputc, fputs, fread, free, freopen, frexp, fscanf, fseek, fsetpos,
fstat, ftell, fwrite, getc, getchar, getcwd, getegid, getenv, geteuid,
getgid, getgrgid, getgrnam, getgroups, getlogin, getpgrp, getpid, getppid,
getpwnam, getpwuid, gets, getuid, gmtime, isalnum, isalpha, isatty,
iscntrl, isdigit, isgraph, islower, isprint, ispunct, isspace, isupper,
isxdigit, kill, labs, ldexp, ldiv, link, localeconv, localtime, log, log10,
longjmp, lseek, malloc, mblen, mbstowcs, mbtowc, memchr, memcmp, memcpy,
memmove, memset, mkdir, mkfifo, mktime, modf, nice, offsetof, open,
opendir, pathconf, pause, perror, pipe, pow, printf, putc, putchar, puts,
qsort, raise, rand, read, readdir, realloc, remove, rename, rewind,
rewinddir, rmdir, scanf, setgid, setjmp, setlocale, setpgid, setsid,
setuid, sigaction, siglongjmp, sigpending, sigprocmask, sigsetjmp,
sigsuspend, sin, sinh, sleep, sprintf, sqrt, srand, sscanf, stat, strcat,
strchr, strcmp, strcoll, strcpy, strcspn, strerror, strftime, strlen,
strncat, strncmp, strncpy, strpbrk, strrchr, strspn, strstr, strtod,
strtok, strtol, strtoul, strxfrm, sysconf, system, tan, tanh, tcdrain,
tcflow, tcflush, tcgetpgrp, tcsendbreak, tcsetpgrp, time, times, tmpfile,
tmpnam, tolower, toupper, ttyname, tzname, tzset, umask, uname, ungetc,
unlink, utime, vfprintf, vprintf, vsprintf, wait, waitpid, wcstombs,
wctomb, write
d17257 1
a17257 1
=item CLASSES
d17261 5
a17265 1
=item POSIX::SigAction
d17267 1
a17267 1
new
d17269 1
a17269 1
=item POSIX::SigSet
d17271 1
a17271 1
new, addset, delset, emptyset, fillset, ismember
d17273 1
a17273 1
=item POSIX::Termios
d17275 1
a17275 5
new, getattr, getcc, getcflag, getiflag, getispeed, getlflag, getoflag,
getospeed, setattr, setcc, setcflag, setiflag, setispeed, setlflag,
setoflag, setospeed, Baud rate values, Terminal interface values, c_cc
field values, c_cflag field values, c_iflag field values, c_lflag field
values, c_oflag field values
d17277 1
a17277 1
=back
d17279 1
a17279 1
=item PATHNAME CONSTANTS
d17281 1
a17281 1
Constants
d17283 1
a17283 1
=item POSIX CONSTANTS
d17285 1
a17285 1
Constants
d17287 1
a17287 1
=item SYSTEM CONFIGURATION
d17289 1
a17289 1
Constants
d17291 1
a17291 1
=item ERRNO
d17293 1
a17293 1
Constants
d17295 1
a17295 1
=item FCNTL
d17297 1
a17297 1
Constants
d17299 1
a17299 1
=item FLOAT
d17301 1
a17301 1
Constants
d17303 1
a17303 1
=item LIMITS
d17305 2
a17306 1
Constants
d17308 1
a17308 1
=item LOCALE
d17310 1
a17310 1
Constants
d17312 1
a17312 1
=item MATH
d17314 1
a17314 1
Constants
d17316 1
a17316 1
=item SIGNAL
d17318 1
a17318 1
Constants
d17320 1
a17320 1
=item STAT
d17322 1
a17322 1
Constants, Macros
d17324 1
a17324 1
=item STDLIB
d17326 1
a17326 1
Constants
d17328 1
a17328 1
=item STDIO
d17330 1
a17330 1
Constants
d17332 1
a17332 1
=item TIME
d17334 1
a17334 1
Constants
d17336 1
a17336 1
=item UNISTD
d17338 1
a17338 1
Constants
d17340 1
a17340 1
=item WAIT
d17342 1
a17342 1
Constants, Macros
a17345 2
=head2 Pod::Checker, podchecker() - check pod documents for syntax errors

d17348 1
a17348 1
=item SYNOPSIS
d17350 1
a17350 1
=item OPTIONS/ARGUMENTS
d17354 1
a17354 1
=item podchecker()
d17356 1
a17356 1
B<-warnings> =E<gt> I<val>
d17358 1
a17358 1
=back
d17360 1
a17360 1
=item DESCRIPTION
d17362 1
a17362 1
=item DIAGNOSTICS
d17366 3
a17368 1
=item Errors
d17370 1
a17370 9
empty =headn, =over on line I<N> without closing =back, =item without
previous =over, =back without previous =over, No argument for =begin, =end
without =begin, Nested =begin's, =for without formatter specification,
unresolved internal link I<NAME>, Unknown command "I<CMD>", Unknown
interior-sequence "I<SEQ>", nested commands
I<CMD>E<lt>...I<CMD>E<lt>...E<gt>...E<gt>, garbled entity I<STRING>, Entity
number out of range, malformed link LE<lt>E<gt>, nonempty ZE<lt>E<gt>,
empty XE<lt>E<gt>, Spurious text after =pod / =cut, Spurious character(s)
after =back
d17372 1
a17372 1
=item Warnings
d17374 1
a17374 6
multiple occurence of link target I<name>, line containing nothing but
whitespace in paragraph, file does not start with =head, previous =item has
no contents, preceding non-item paragraph(s), =item type mismatch (I<one>
vs. I<two>), I<N> unescaped C<E<lt>E<gt>> in paragraph, Unknown entity, No
items in =over, No argument for =item, empty section in previous paragraph,
Verbatim paragraph in NAME section
d17376 1
a17376 1
=item Hyperlinks
d17378 1
a17378 2
ignoring leading/trailing whitespace in link, (section) in '$page'
deprecated, alternative text/node '%s' contains non-escaped | or /
d17382 1
a17382 1
=item RETURN VALUE
d17384 1
a17384 3
=item EXAMPLES

=item INTERFACE
d17388 1
a17388 1
C<Pod::Checker-E<gt>new( %options )>
d17390 1
a17390 2
C<$checker-E<gt>poderror( @@args )>, C<$checker-E<gt>poderror( {%opts},
@@args )>
d17392 1
a17392 1
C<$checker-E<gt>num_errors()>
d17394 1
a17394 1
C<$checker-E<gt>name()>
d17396 1
a17396 1
C<$checker-E<gt>node()>
d17398 1
a17398 3
C<$checker-E<gt>idx()>

C<$checker-E<gt>hyperlink()>
d17402 1
a17402 1
=item AUTHOR
a17405 2
=head2 Pod::Find - find POD documents in directory trees

d17408 1
a17408 1
=item SYNOPSIS
d17410 3
a17412 1
=item DESCRIPTION
d17418 5
a17422 1
=item C<pod_find( { %opts } , @@directories )>
d17424 1
a17424 2
C<-verbose =E<gt> 1>, C<-perl =E<gt> 1>, C<-script =E<gt> 1>, C<-inc =E<gt>
1>
d17430 1
a17430 1
=item C<simplify_name( $str )>
d17436 1
a17436 4
=item C<pod_where( { %opts }, $pod )>

C<-inc =E<gt> 1>, C<-dirs =E<gt> [ $dir1, $dir2, ... ]>, C<-verbose =E<gt>
1>
d17442 1
a17442 1
=item C<contains_pod( $file , $verbose )>
d17448 1
a17448 3
=item AUTHOR

=item SEE ALSO
d17452 1
a17452 1
=head2 Pod::Html - module to convert pod files to HTML
d17454 1
a17454 1
=over 4
d17456 1
a17456 1
=item SYNOPSIS
d17458 1
a17458 1
=item DESCRIPTION
d17460 1
a17460 1
=item ARGUMENTS
d17462 1
a17462 3
backlink, css, flush, header, help, htmldir, htmlroot, index, infile,
libpods, netscape, outfile, podpath, podroot, quiet, recurse, title,
verbose
d17464 1
a17464 1
=item EXAMPLE
d17466 1
a17466 1
=item ENVIRONMENT
d17468 1
a17468 1
=item AUTHOR
d17470 1
a17470 1
=item SEE ALSO
d17472 1
a17472 1
=item COPYRIGHT
a17475 3
=head2 Pod::InputObjects - objects representing POD input paragraphs,
commands, etc.

d17478 1
a17478 1
=item SYNOPSIS
d17480 1
a17480 1
=item REQUIRES
d17482 1
a17482 1
=item EXPORTS
d17484 1
a17484 4
=item DESCRIPTION

package B<Pod::InputSource>, package B<Pod::Paragraph>, package
B<Pod::InteriorSequence>, package B<Pod::ParseTree>
d17490 1
a17490 1
=item B<Pod::InputSource>
d17496 1
a17496 1
=item B<new()>
d17502 1
a17502 1
=item B<name()>
d17508 1
a17508 1
=item B<handle()>
d17514 1
a17514 1
=item B<was_cutting()>
d17520 5
a17524 1
=item B<Pod::Paragraph>
d17528 2
d17532 1
a17532 1
=item Pod::Paragraph-E<gt>B<new()>
d17534 1
a17534 1
=back
d17538 1
a17538 1
=item $pod_para-E<gt>B<cmd_name()>
d17542 1
a17542 1
=over 4
d17544 1
a17544 1
=item $pod_para-E<gt>B<text()>
d17548 3
d17553 1
a17553 3
=item $pod_para-E<gt>B<raw_text()>

=back
d17555 1
a17555 1
=over 4
d17557 1
a17557 1
=item $pod_para-E<gt>B<cmd_prefix()>
d17559 1
a17559 1
=back
d17561 1
a17561 1
=over 4
d17563 1
a17563 1
=item $pod_para-E<gt>B<cmd_separator()>
d17569 1
a17569 1
=item $pod_para-E<gt>B<parse_tree()>
d17575 1
a17575 1
=item $pod_para-E<gt>B<file_line()>
d17581 1
a17581 1
=item B<Pod::InteriorSequence>
d17587 1
a17587 1
=item Pod::InteriorSequence-E<gt>B<new()>
d17593 1
a17593 1
=item $pod_seq-E<gt>B<cmd_name()>
d17599 1
a17599 1
=item $pod_seq-E<gt>B<prepend()>
d17605 1
a17605 1
=item $pod_seq-E<gt>B<append()>
d17611 1
a17611 1
=item $pod_seq-E<gt>B<nested()>
d17617 3
a17619 1
=item $pod_seq-E<gt>B<raw_text()>
d17625 1
a17625 1
=item $pod_seq-E<gt>B<left_delimiter()>
d17631 1
a17631 1
=item $pod_seq-E<gt>B<right_delimiter()>
d17637 1
a17637 1
=item $pod_seq-E<gt>B<parse_tree()>
d17643 1
a17643 1
=item $pod_seq-E<gt>B<file_line()>
d17649 3
a17651 1
=item Pod::InteriorSequence::B<DESTROY()>
d17655 2
d17659 1
a17659 1
=item B<Pod::ParseTree>
d17661 1
a17661 1
=back
d17663 1
a17663 1
=over 4
d17665 1
a17665 1
=item Pod::ParseTree-E<gt>B<new()>
d17667 4
a17670 1
=back
d17672 1
a17672 1
=over 4
d17674 1
a17674 1
=item $ptree-E<gt>B<top()>
d17676 1
a17676 1
=back
d17678 1
a17678 1
=over 4
d17680 1
a17680 1
=item $ptree-E<gt>B<children()>
d17684 2
d17688 1
a17688 1
=item $ptree-E<gt>B<prepend()>
d17690 1
a17690 1
=back
d17692 1
a17692 1
=over 4
d17694 1
a17694 1
=item $ptree-E<gt>B<append()>
d17696 1
a17696 1
=back
d17698 1
a17698 1
=over 4
d17700 1
a17700 1
=item $ptree-E<gt>B<raw_text()>
d17702 2
a17703 1
=back
d17707 1
a17707 1
=item Pod::ParseTree::B<DESTROY()>
d17709 1
a17709 1
=back
d17711 1
a17711 1
=over 4
d17717 2
d17721 2
a17722 1
=head2 Pod::LaTeX - Convert Pod data to formatted Latex
d17730 1
a17730 1
=back
d17732 1
a17732 1
=over 4
d17734 1
a17734 1
=item OBJECT METHODS
d17736 1
a17736 1
C<initialize>
d17740 3
d17745 3
a17747 1
=item Data Accessors
d17749 2
a17750 1
B<AddPreamble>
d17752 1
a17752 1
=back
d17754 1
a17754 1
B<AddPostamble>
d17756 1
a17756 1
B<Head1Level>
d17758 1
a17758 1
B<Label>
d17760 1
a17760 1
B<LevelNoNum>
d17762 1
a17762 1
B<MakeIndex>
d17764 1
a17764 1
B<ReplaceNAMEwithSection>
d17766 1
a17766 1
B<StartWithNewPage>
d17768 1
a17768 1
B<TableOfContents>
d17770 2
a17771 1
B<UniqueLabels>
d17773 1
a17773 1
B<UserPreamble>
d17775 1
a17775 1
B<UserPostamble>
d17777 1
a17777 1
B<Lists>
d17781 1
a17781 1
=item Subclassed methods
d17785 5
a17789 1
B<begin_pod>
d17791 1
a17791 1
B<end_pod>
d17793 1
a17793 1
B<command>
d17795 1
a17795 1
B<verbatim>
d17797 2
a17798 1
B<textblock>
d17800 1
a17800 1
B<interior_sequence>
d17802 1
a17802 1
=over 4
d17804 1
a17804 1
=item List Methods
d17806 1
a17806 1
B<begin_list>
d17810 1
a17810 3
B<end_list>

B<add_item>
d17814 1
a17814 1
=item Methods for headings
d17816 1
a17816 1
B<head>
d17818 1
a17818 1
=back
d17822 3
a17824 1
=item Internal methods
d17826 1
a17826 1
B<_output>
d17828 1
a17828 1
=back
d17830 1
a17830 1
B<_replace_special_chars>
d17832 2
a17833 1
B<_create_label>
d17835 1
a17835 1
B<_create_index>
d17837 1
a17837 1
B<_clean_latex_commands>
d17839 1
a17839 1
=over 4
d17841 1
a17841 1
=item NOTES
a17844 6
=item AUTHORS

=item COPYRIGHT

=item REVISION

d17847 1
a17847 1
=head2 Pod::Man - Convert POD data to formatted *roff input
d17855 1
a17855 2
center, date, fixed, fixedbold, fixeditalic, fixedbolditalic, quotes,
release, section
d17859 1
a17859 4
roff font should be 1 or 2 chars, not "%s", Invalid link %s, Invalid quote
specification "%s", %s:%d: Unknown command paragraph "%s", Unknown escape
EE<lt>%sE<gt>, Unknown sequence %s, %s: Unknown command paragraph "%s" on
line %d, Unmatched =back
d17861 1
a17861 1
=item BUGS
d17863 1
a17863 1
=item SEE ALSO
d17865 1
a17865 1
=item AUTHOR
d17869 1
a17869 1
=head2 Pod::ParseUtils - helpers for POD parsing and conversion
d17877 3
a17879 1
=back
d17883 1
a17883 1
=item Pod::List
d17885 1
a17885 1
Pod::List-E<gt>new()
d17887 4
a17890 1
=back
d17892 1
a17892 1
$list-E<gt>file()
d17894 1
a17894 1
$list-E<gt>start()
d17896 1
a17896 1
$list-E<gt>indent()
d17898 1
a17898 1
$list-E<gt>type()
d17900 1
a17900 3
$list-E<gt>rx()

$list-E<gt>item()
d17902 1
a17902 3
$list-E<gt>parent()

$list-E<gt>tag()
d17906 1
a17906 1
=item Pod::Hyperlink
d17908 1
a17908 1
Pod::Hyperlink-E<gt>new()
d17910 2
a17911 1
=back
d17913 1
a17913 1
$link-E<gt>parse($string)
d17915 1
a17915 1
$link-E<gt>markup($string)
d17917 1
a17917 1
$link-E<gt>text()
d17919 1
a17919 1
$link-E<gt>warning()
d17921 1
a17921 1
$link-E<gt>file(), $link-E<gt>line()
d17923 1
a17923 1
$link-E<gt>page()
d17925 1
a17925 1
$link-E<gt>node()
d17927 1
a17927 1
$link-E<gt>alttext()
d17929 1
a17929 1
$link-E<gt>type()
d17931 1
a17931 1
$link-E<gt>link()
d17935 1
a17935 1
=item Pod::Cache
d17937 1
a17937 1
Pod::Cache-E<gt>new()
d17941 1
a17941 3
$cache-E<gt>item()

$cache-E<gt>find_page($name)
d17945 1
a17945 1
=item Pod::Cache::Item
d17947 1
a17947 1
Pod::Cache::Item-E<gt>new()
d17949 1
a17949 5
=back

$cacheitem-E<gt>page()

$cacheitem-E<gt>description()
d17951 1
a17951 1
$cacheitem-E<gt>path()
d17953 1
a17953 1
$cacheitem-E<gt>file()
d17955 1
a17955 1
$cacheitem-E<gt>nodes()
d17957 1
a17957 1
$cacheitem-E<gt>find_node($name)
d17959 1
a17959 1
$cacheitem-E<gt>idx()
d17961 1
a17961 1
=over 4
d17963 1
a17963 1
=item AUTHOR
d17965 1
a17965 1
=item SEE ALSO
d17969 1
a17969 1
=head2 Pod::Parser - base class for creating POD filters and translators
a17974 4
=item REQUIRES

=item EXPORTS

d17977 1
a17977 1
=item QUICK OVERVIEW
d17979 1
a17979 4
=item PARSING OPTIONS

B<-want_nonPODs> (default: unset), B<-process_cut_cmd> (default: unset),
B<-warnings> (default: unset)
d17983 1
a17983 1
=over 4
d17985 1
a17985 1
=item RECOMMENDED SUBROUTINE/METHOD OVERRIDES
d17987 2
a17988 1
=back
d17992 3
a17994 1
=item B<command()>
d17996 5
a18000 1
C<$cmd>, C<$text>, C<$line_num>, C<$pod_para>
d18004 2
d18008 1
a18008 1
=item B<verbatim()>
d18010 1
a18010 1
C<$text>, C<$line_num>, C<$pod_para>
d18012 1
a18012 1
=back
d18014 1
a18014 1
=over 4
d18016 1
a18016 1
=item B<textblock()>
d18018 1
a18018 1
C<$text>, C<$line_num>, C<$pod_para>
d18020 1
a18020 1
=back
d18022 1
a18022 1
=over 4
d18024 1
a18024 1
=item B<interior_sequence()>
d18026 1
a18026 1
=back
d18030 6
a18035 1
=item OPTIONAL SUBROUTINE/METHOD OVERRIDES
d18037 2
a18038 1
=back
d18040 1
a18040 1
=over 4
d18042 1
a18042 1
=item B<new()>
d18046 3
a18048 1
=over 4
d18050 1
a18050 1
=item B<initialize()>
d18052 1
a18052 1
=back
d18056 1
a18056 1
=item B<begin_pod()>
d18060 3
a18062 1
=over 4
d18064 1
a18064 1
=item B<begin_input()>
d18068 2
d18072 5
a18076 1
=item B<end_input()>
d18078 1
a18078 1
=back
d18082 1
a18082 1
=item B<end_pod()>
d18084 1
a18084 1
=back
d18086 1
a18086 1
=over 4
d18088 1
a18088 1
=item B<preprocess_line()>
d18092 1
a18092 1
=over 4
d18094 1
a18094 1
=item B<preprocess_paragraph()>
d18096 1
a18096 1
=back
d18098 1
a18098 1
=over 4
d18100 1
a18100 1
=item METHODS FOR PARSING AND PROCESSING
d18104 2
d18108 1
a18108 1
=item B<parse_text()>
d18110 1
a18110 3
B<-expand_seq> =E<gt> I<code-ref>|I<method-name>, B<-expand_text> =E<gt>
I<code-ref>|I<method-name>, B<-expand_ptree> =E<gt>
I<code-ref>|I<method-name>
d18114 2
d18118 1
a18118 1
=item B<interpolate()>
d18120 1
a18120 1
=back
d18122 1
a18122 1
=over 4
d18124 1
a18124 1
=item B<parse_paragraph()>
d18126 2
a18127 1
=back
d18131 1
a18131 1
=item B<parse_from_filehandle()>
d18133 1
a18133 1
=back
d18135 3
a18137 1
=over 4
d18139 1
a18139 1
=item B<parse_from_file()>
d18141 1
a18141 1
=back
d18143 1
a18143 1
=over 4
d18145 1
a18145 1
=item ACCESSOR METHODS
d18147 2
a18148 1
=back
d18152 1
a18152 1
=item B<errorsub()>
d18154 1
a18154 1
=back
d18156 3
a18158 1
=over 4
d18160 1
a18160 1
=item B<cutting()>
d18162 1
a18162 1
=back
d18164 1
a18164 1
=over 4
d18166 1
a18166 1
=item B<parseopts()>
d18168 1
a18168 1
=back
d18172 3
a18174 1
=item B<output_file()>
d18176 1
a18176 1
=back
d18178 3
a18180 1
=over 4
d18182 1
a18182 1
=item B<output_handle()>
d18184 1
a18184 1
=back
d18186 1
a18186 1
=over 4
d18188 1
a18188 1
=item B<input_file()>
d18190 1
a18190 1
=back
d18192 1
a18192 1
=over 4
d18194 1
a18194 1
=item B<input_handle()>
d18198 2
d18202 1
a18202 1
=item B<input_streams()>
d18204 1
a18204 1
=back
d18208 1
a18208 1
=item B<top_stream()>
d18212 1
a18212 1
=over 4
d18214 1
a18214 1
=item PRIVATE METHODS AND DATA
d18216 1
a18216 1
=back
d18218 1
a18218 1
=over 4
d18220 1
a18220 1
=item B<_push_input_stream()>
d18222 1
a18222 1
=back
d18226 1
a18226 1
=item B<_pop_input_stream()>
d18228 1
a18228 1
=back
d18230 1
a18230 3
=over 4

=item TREE-BASED PARSING
a18233 2
=item AUTHOR

d18236 1
a18236 1
=head2 Pod::Plainer - Perl extension for converting Pod to old style Pod.
d18244 1
a18244 1
=over 4
d18246 1
a18246 1
=item EXPORT
d18248 1
a18248 1
=back
a18251 2
=item SEE ALSO

d18254 2
a18255 2
=head2 Pod::Select, podselect() - extract selected sections of POD from
input
d18261 1
a18261 1
=item REQUIRES
d18263 1
a18263 1
=item EXPORTS
d18265 2
a18266 1
=item DESCRIPTION
d18268 1
a18268 1
=item SECTION SPECIFICATIONS
d18270 1
a18270 1
=item RANGE SPECIFICATIONS
d18272 1
a18272 1
=back
d18274 1
a18274 1
=over 4
d18276 1
a18276 1
=item OBJECT METHODS
d18280 2
d18284 1
a18284 1
=item B<curr_headings()>
d18286 1
a18286 1
=back
d18290 3
a18292 1
=item B<select()>
d18296 1
a18296 1
=over 4
d18298 1
a18298 1
=item B<add_selection()>
d18300 1
a18300 1
=back
d18304 1
a18304 1
=item B<clear_selections()>
d18306 1
a18306 1
=back
d18308 1
a18308 1
=over 4
d18310 1
a18310 1
=item B<match_section()>
d18312 1
a18312 1
=back
d18314 1
a18314 1
=over 4
d18316 1
a18316 1
=item B<is_selected()>
d18320 2
d18324 1
a18324 1
=item EXPORTED FUNCTIONS
d18326 1
a18326 1
=back
d18330 3
a18332 1
=item B<podselect()>
d18334 1
a18334 1
B<-output>, B<-sections>, B<-ranges>
d18340 3
a18342 1
=item PRIVATE METHODS AND DATA
d18346 3
a18348 1
=over 4
d18350 1
a18350 1
=item B<_compile_section_spec()>
d18352 1
a18352 1
=back
d18356 3
a18358 1
=item $self->{_SECTION_HEADINGS}
d18362 3
a18364 1
=over 4
d18366 1
a18366 1
=item $self->{_SELECTED_SECTIONS}
d18368 1
a18368 1
=back
d18370 1
a18370 1
=over 4
d18372 1
a18372 1
=item SEE ALSO
d18374 1
a18374 1
=item AUTHOR
d18376 1
a18376 1
=back
d18378 1
a18378 1
=head2 Pod::Text - Convert POD data to formatted ASCII text
d18382 1
a18382 1
=item SYNOPSIS
d18384 1
a18384 1
=item DESCRIPTION
d18386 1
a18386 1
alt, indent, loose, quotes, sentence, width
d18388 1
a18388 1
=item DIAGNOSTICS
d18390 1
a18390 3
Bizarre space in item, Can't open %s for reading: %s, Invalid quote
specification "%s", %s:%d: Unknown command paragraph "%s", Unknown escape:
%s, Unknown sequence: %s, Unmatched =back
d18392 1
a18392 1
=item RESTRICTIONS
d18394 1
a18394 1
=item NOTES
d18396 1
a18396 1
=item SEE ALSO
d18398 1
a18398 1
=item AUTHOR
d18400 1
a18400 1
=back
d18402 1
a18402 1
=head2 Pod::Text::Color - Convert POD data to formatted color ASCII text
d18406 5
a18410 1
=item SYNOPSIS
d18412 1
a18412 1
=item DESCRIPTION
d18414 1
a18414 1
=item BUGS
d18416 1
a18416 1
=item SEE ALSO
d18418 1
a18418 1
=item AUTHOR
d18420 1
a18420 1
=back
d18422 1
a18422 2
=head2 Pod::Text::Overstrike - Convert POD data to formatted overstrike
text
d18426 1
a18426 1
=item SYNOPSIS
d18428 1
a18428 1
=item DESCRIPTION
d18430 1
a18430 1
=item BUGS
d18432 1
a18432 1
=item SEE ALSO
d18434 1
a18434 1
=item AUTHOR
d18438 1
a18438 2
=head2 Pod::Text::Termcap, Pod::Text::Color - Convert POD data to ASCII
text with format escapes
d18446 1
a18446 1
=item SEE ALSO
d18448 1
a18448 1
=item AUTHOR
d18450 3
a18452 4
=back

=head2 Pod::Usage, pod2usage() - print a usage message from embedded pod
documentation
d18454 1
a18454 1
=over 4
d18456 1
a18456 1
=item SYNOPSIS
d18458 1
a18458 1
=item ARGUMENTS
d18460 1
a18460 2
C<-message>, C<-msg>, C<-exitval>, C<-verbose>, C<-output>, C<-input>,
C<-pathlist>
d18462 2
a18463 1
=item DESCRIPTION
d18465 1
a18465 1
=item EXAMPLES
d18467 1
a18467 1
=over 4
d18469 1
a18469 1
=item Recommended Use
d18473 1
a18473 1
=item CAVEATS
d18475 1
a18475 1
=item AUTHOR
d18477 1
a18477 1
=item ACKNOWLEDGEMENTS
d18479 1
a18479 1
=back
d18481 1
a18481 1
=head2 SDBM_File - Tied access to sdbm files
d18485 8
a18492 1
=item SYNOPSIS
d18494 1
a18494 1
=item DESCRIPTION
d18496 3
a18498 1
C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>
d18500 1
a18500 1
=item DIAGNOSTICS
d18502 1
a18502 1
=over 4
d18504 1
a18504 1
=item C<sdbm store returned -1, errno 22, key "..." at ...>
d18506 1
a18506 1
=back
d18508 1
a18508 1
=item BUGS AND WARNINGS
d18512 1
a18512 1
=head2 Safe - Compile and execute code in restricted compartments
a18519 4
a new namespace, an operator mask

=item WARNING

d18522 1
a18522 1
=item RECENT CHANGES
d18524 1
a18524 1
=item Methods in class Safe
d18526 1
a18526 4
permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)
d18528 1
a18528 1
=item Some Safety Issues
d18530 1
a18530 1
Memory, CPU, Snooping, Signals, State Changes
d18534 1
a18534 1
=back
d18538 1
a18538 1
=head2 Search::Dict, look - search for key in dictionary file
d18548 1
a18548 1
=head2 SelectSaver - save and restore selected file handle
d18556 8
d18566 1
a18566 1
=head2 SelfLoader - load functions only on demand
d18570 3
a18572 1
=item SYNOPSIS
d18574 1
a18574 1
=item DESCRIPTION
d18576 1
a18576 1
=over 4
d18578 1
a18578 1
=item The __DATA__ token
d18580 1
a18580 1
=item SelfLoader autoloading
d18582 1
a18582 1
=item Autoloading and package lexicals
d18584 1
a18584 1
=item SelfLoader and AutoLoader
d18586 1
a18586 1
=item __DATA__, __END__, and the FOOBAR::DATA filehandle.
d18588 1
a18588 1
=item Classes and inherited methods.
d18590 1
a18590 1
=back
d18592 1
a18592 1
=item Multiple packages and fully qualified subroutine names
d18596 1
a18596 1
=head2 Shell - run shell commands transparently within perl
d18598 1
a18598 1
=over 4
d18600 1
a18600 1
=item SYNOPSIS
d18602 1
a18602 1
=item DESCRIPTION
d18606 3
a18608 1
=item OBJECT ORIENTED SYNTAX
d18612 4
d18618 2
d18622 1
a18622 2
=head2 Socket, sockaddr_in, sockaddr_un, inet_aton, inet_ntoa - load the C
socket.h defines and structure manipulators 
d18630 3
a18632 5
inet_aton HOSTNAME, inet_ntoa IP_ADDRESS, INADDR_ANY, INADDR_BROADCAST,
INADDR_LOOPBACK, INADDR_NONE, sockaddr_in PORT, ADDRESS, sockaddr_in
SOCKADDR_IN, pack_sockaddr_in PORT, IP_ADDRESS, unpack_sockaddr_in
SOCKADDR_IN, sockaddr_un PATHNAME, sockaddr_un SOCKADDR_UN,
pack_sockaddr_un PATH, unpack_sockaddr_un SOCKADDR_UN
d18636 1
a18636 1
=head2 Symbol - manipulate Perl symbols and their names
d18640 3
a18642 1
=item SYNOPSIS
d18644 1
a18644 1
=item DESCRIPTION
d18648 1
a18648 1
=head2 Sys::Hostname - Try every conceivable way to get hostname
d18650 1
a18650 1
=over 4
d18652 1
a18652 1
=item SYNOPSIS
d18654 1
a18654 1
=item DESCRIPTION
d18656 1
a18656 1
=item AUTHOR
d18658 1
a18658 1
=back
d18660 1
a18660 2
=head2 Syslog, Sys::Syslog, openlog, closelog, setlogmask, syslog - Perl
interface to the UNIX syslog(3) calls
d18664 1
a18664 1
=item SYNOPSIS
d18666 1
a18666 1
=item DESCRIPTION
d18668 1
a18668 3
openlog $ident, $logopt, $facility, syslog $priority, $format, @@args,
setlogmask $mask_priority, setlogsock $sock_type (added in 5.004_02),
closelog
d18670 1
a18670 1
=item EXAMPLES
d18672 1
a18672 1
=item SEE ALSO
d18674 1
a18674 1
=item AUTHOR
d18678 1
a18678 2
=head2 Syslog::Syslog, Sys::Syslog, openlog, closelog, setlogmask, syslog -
Perl interface to the UNIX syslog(3) calls
d18682 5
a18686 1
=item SYNOPSIS
d18688 1
a18688 1
=item DESCRIPTION
d18690 1
a18690 3
openlog $ident, $logopt, $facility, syslog $priority, $format, @@args,
setlogmask $mask_priority, setlogsock $sock_type (added in 5.004_02),
closelog
d18692 1
a18692 1
=item EXAMPLES
d18694 1
a18694 1
=item SEE ALSO
d18696 1
a18696 1
=item AUTHOR
d18700 5
a18704 1
=head2 Term::ANSIColor - Color screen output using ANSI escape sequences
d18708 7
a18714 1
=item SYNOPSIS
d18716 1
a18716 1
=item DESCRIPTION
d18718 1
a18718 1
=item DIAGNOSTICS
d18720 2
a18721 3
Invalid attribute name %s, Name "%s" used only once: possible typo, No
comma allowed after filehandle, Bareword "%s" not allowed while "strict
subs" in use
d18723 1
a18723 1
=item RESTRICTIONS
d18725 1
a18725 1
=item NOTES
d18729 2
d18733 1
a18733 1
=head2 Term::Cap - Perl termcap interface
d18741 1
a18741 1
=item EXAMPLES
d18745 3
a18747 1
=head2 Term::Complete - Perl word completion module
d18749 1
a18749 1
=over 4
d18751 1
a18751 1
=item SYNOPSIS
d18753 1
a18753 1
=item DESCRIPTION
d18755 1
a18755 1
E<lt>tabE<gt>, ^D, ^U, E<lt>delE<gt>, E<lt>bsE<gt>
d18757 2
a18758 1
=item DIAGNOSTICS
d18760 1
a18760 1
=item BUGS
d18762 1
a18762 1
=item AUTHOR
d18766 5
a18770 2
=head2 Term::ReadLine - Perl interface to various C<readline> packages. If
no real package is found, substitutes stubs instead of basic functions.
d18774 5
a18778 1
=item SYNOPSIS
d18780 1
a18780 1
=item DESCRIPTION
d18782 1
a18782 1
=item Minimal set of supported functions
d18784 1
a18784 2
C<ReadLine>, C<new>, C<readline>, C<addhistory>, C<IN>, $C<OUT>,
C<MinLine>, C<findConsole>, Attribs, C<Features>
d18786 1
a18786 1
=item Additional supported functions
d18788 1
a18788 1
C<tkRunning>, C<ornaments>, C<newTTY>
d18790 1
a18790 1
=item EXPORTS
d18792 1
a18792 1
=item ENVIRONMENT
d18796 1
a18796 1
=head2	 Test - provides a simple framework for writing test scripts
d18798 1
a18798 1
=over 4
d18800 1
a18800 1
=item SYNOPSIS
d18802 1
a18802 1
=item DESCRIPTION
d18804 1
a18804 1
=item TEST TYPES
d18806 1
a18806 1
NORMAL TESTS, SKIPPED TESTS, TODO TESTS
d18808 1
a18808 3
=item RETURN VALUE

=item ONFAIL
d18810 1
a18810 1
=item SEE ALSO
d18812 1
a18812 1
=item AUTHOR
d18816 1
a18816 1
=head2 Test::Harness - run perl standard test scripts with statistics
d18826 16
a18841 1
=item The test script output
d18843 1
a18843 1
=back
d18845 1
a18845 1
=item EXPORT
d18847 1
a18847 1
=item DIAGNOSTICS
d18849 1
a18849 4
C<All tests successful.\nFiles=%d,  Tests=%d, %s>, C<FAILED tests
%s\n\tFailed %d/%d tests, %.2f%% okay.>, C<Test returned status %d (wstat
%d)>, C<Failed 1 test, %.2f%% okay. %s>, C<Failed %d/%d tests, %.2f%% okay.
%s>
d18851 1
a18851 1
=item ENVIRONMENT
d18853 1
a18853 1
=item SEE ALSO
d18855 1
a18855 1
=item AUTHORS
d18857 1
a18857 1
=item BUGS
d18861 1
a18861 1
=head2 Text::Abbrev, abbrev - create an abbreviation table from a list
d18863 13
a18875 1
=over 4
d18877 1
a18877 1
=item SYNOPSIS
d18879 1
a18879 1
=item DESCRIPTION
d18881 1
a18881 1
=item EXAMPLE
d18940 2
d18948 1
a18948 2
=head2 Thread - manipulate threads in Perl (EXPERIMENTAL, subject to
change)
d18960 3
a18962 3
new \&start_sub, new \&start_sub, LIST, lock VARIABLE, async BLOCK;,
Thread->self, Thread->list, cond_wait VARIABLE, cond_signal VARIABLE,
cond_broadcast VARIABLE, yield
d18966 1
a18966 1
join, eval, detach, equal, tid
d19005 1
d19009 2
d19048 64
d19132 2
a19133 1
=head2 Tie::Hash, Tie::StdHash - base class definitions for tied hashes
d19144 5
a19148 1
=item CAVEATS
d19154 18
d19217 28
d19309 196
a19504 2
isa ( TYPE ), can ( METHOD ), VERSION ( [ REQUIRE ] ), UNIVERSAL::isa (
VAL, TYPE ), UNIVERSAL::can ( VAL, METHOD )
d19564 1
a19564 1
Win32::GetNextAvailDrive(), Win32::GetOSVersion(),
d19571 4
a19574 3
Win32::RegisterServer(LIBRARYNAME), Win32::SetCwd(NEWDIRECTORY),
Win32::SetLastError(ERROR), Win32::Sleep(TIME), Win32::Spawn(COMMAND, ARGS,
PID), Win32::UnregisterServer(LIBRARYNAME)
@


1.4
log
@perl-5.6.0 + local changes
@
text
@d16 1
a16 1
=over
a21 10
modularity and reusability using innumerable modules, embeddable and
extensible, roll-your-own magic variables (including multiple simultaneous
DBM implementations), subroutines can now be overridden, autoloaded, and
prototyped, arbitrarily nested data structures and anonymous functions,
object-oriented programming, compilability into C code or Perl bytecode,
support for light-weight processes (threads), support for
internationalization, localization, and Unicode, lexical scoping, regular
expression enhancements, enhanced debugger and interactive Perl
environment, with integrated editor support, POSIX 1003.1 compliant library

d43 1
a43 1
=over
d47 15
a61 216
perlfaq: Structural overview of the FAQ, L<perlfaq1>: General Questions
About Perl, What is Perl?, Who supports Perl?  Who develops it?  Why is it
free?, Which version of Perl should I use?, What are perl4 and perl5?, What
is perl6?, How stable is Perl?, Is Perl difficult to learn?, How does Perl
compare with other languages like Java, Python, REXX, Scheme, or Tcl?, Can
I do [task] in Perl?, When shouldn't I program in Perl?, What's the
difference between "perl" and "Perl"?, Is it a Perl program or a Perl
script?, What is a JAPH?, Where can I get a list of Larry Wall witticisms?,
How can I convince my sysadmin/supervisor/employees to use version
(5/5.005/Perl instead of some other language)?, L<perlfaq2>: Obtaining and
Learning about Perl, What machines support Perl?  Where do I get it?, How
can I get a binary version of Perl?, I don't have a C compiler on my
system.  How can I compile perl?, I copied the Perl binary from one machine
to another, but scripts don't work, I grabbed the sources and tried to
compile but gdbm/dynamic loading/malloc/linking/... failed.  How do I make
it work?, What modules and extensions are available for Perl?  What is
CPAN?  What does CPAN/src/... mean?, Is there an ISO or ANSI certified
version of Perl?, Where can I get information on Perl?, What are the Perl
newsgroups on USENET?  Where do I post questions?, Where should I post
source code?, Perl Books, Perl in Magazines, Perl on the Net: FTP and WWW
Access, What mailing lists are there for perl?, Archives of
comp.lang.perl.misc, Where can I buy a commercial version of Perl?, Where
do I send bug reports?, What is perl.com?, L<perlfaq3>: Programming Tools,
How do I do (anything)?, How can I use Perl interactively?, Is there a Perl
shell?, How do I debug my Perl programs?, How do I profile my Perl
programs?, How do I cross-reference my Perl programs?, Is there a
pretty-printer (formatter) for Perl?, Is there a ctags for Perl?, Is there
an IDE or Windows Perl Editor?, Where can I get Perl macros for vi?, Where
can I get perl-mode for emacs?, How can I use curses with Perl?, How can I
use X or Tk with Perl?, How can I generate simple menus without using CGI
or Tk?, What is undump?, How can I make my Perl program run faster?, How
can I make my Perl program take less memory?, Is it unsafe to return a
pointer to local data?, How can I free an array or hash so my program
shrinks?, How can I make my CGI script more efficient?, How can I hide the
source for my Perl program?, How can I compile my Perl program into byte
code or C?, How can I compile Perl into Java?, How can I get C<#!perl> to
work on [MS-DOS,NT,...]?, Can I write useful perl programs on the command
line?, Why don't perl one-liners work on my DOS/Mac/VMS system?, Where can
I learn about CGI or Web programming in Perl?, Where can I learn about
object-oriented Perl programming?, Where can I learn about linking C with
Perl? [h2xs, xsubpp], I've read perlembed, perlguts, etc., but I can't
embed perl inmy C program, what am I doing wrong?, When I tried to run my
script, I got this message. What does itmean?, What's MakeMaker?,
L<perlfaq4>: Data Manipulation, Why am I getting long decimals (eg,
19.9499999999999) instead of the numbers I should be getting (eg, 19.95)?,
Why isn't my octal data interpreted correctly?, Does Perl have a round()
function?  What about ceil() and floor()?  Trig functions?, How do I
convert bits into ints?, Why doesn't & work the way I want it to?, How do I
multiply matrices?, How do I perform an operation on a series of integers?,
How can I output Roman numerals?, Why aren't my random numbers random?, How
do I find the week-of-the-year/day-of-the-year?, How do I find the current
century or millennium?, How can I compare two dates and find the
difference?, How can I take a string and turn it into epoch seconds?, How
can I find the Julian Day?, How do I find yesterday's date?, Does Perl have
a year 2000 problem?  Is Perl Y2K compliant?, How do I validate input?, How
do I unescape a string?, How do I remove consecutive pairs of characters?,
How do I expand function calls in a string?, How do I find matching/nesting
anything?, How do I reverse a string?, How do I expand tabs in a string?,
How do I reformat a paragraph?, How can I access/change the first N letters
of a string?, How do I change the Nth occurrence of something?, How can I
count the number of occurrences of a substring within a string?, How do I
capitalize all the words on one line?, How can I split a [character]
delimited string except when inside[character]? (Comma-separated files),
How do I strip blank space from the beginning/end of a string?, How do I
pad a string with blanks or pad a number with zeroes?, How do I extract
selected columns from a string?, How do I find the soundex value of a
string?, How can I expand variables in text strings?, What's wrong with
always quoting "$vars"?, Why don't my <<HERE documents work?, What is the
difference between a list and an array?, What is the difference between
$array[1] and @@array[1]?, How can I remove duplicate elements from a list
or array?, How can I tell whether a list or array contains a certain
element?, How do I compute the difference of two arrays?  How do I compute
the intersection of two arrays?, How do I test whether two arrays or hashes
are equal?, How do I find the first array element for which a condition is
true?, How do I handle linked lists?, How do I handle circular lists?, How
do I shuffle an array randomly?, How do I process/modify each element of an
array?, How do I select a random element from an array?, How do I permute N
elements of a list?, How do I sort an array by (anything)?, How do I
manipulate arrays of bits?, Why does defined() return true on empty arrays
and hashes?, How do I process an entire hash?, What happens if I add or
remove keys from a hash while iterating over it?, How do I look up a hash
element by value?, How can I know how many entries are in a hash?, How do I
sort a hash (optionally by value instead of key)?, How can I always keep my
hash sorted?, What's the difference between "delete" and "undef" with
hashes?, Why don't my tied hashes make the defined/exists distinction?, How
do I reset an each() operation part-way through?, How can I get the unique
keys from two hashes?, How can I store a multidimensional array in a DBM
file?, How can I make my hash remember the order I put elements into it?,
Why does passing a subroutine an undefined element in a hash create it?,
How can I make the Perl equivalent of a C structure/C++ class/hash or array
of hashes or arrays?, How can I use a reference as a hash key?, How do I
handle binary data correctly?, How do I determine whether a scalar is a
number/whole/integer/float?, How do I keep persistent data across program
calls?, How do I print out or copy a recursive data structure?, How do I
define methods for every class/object?, How do I verify a credit card
checksum?, How do I pack arrays of doubles or floats for XS code?,
L<perlfaq5>: Files and Formats, How do I flush/unbuffer an output
filehandle?  Why must I do this?, How do I change one line in a file/delete
a line in a file/insert a line in the middle of a file/append to the
beginning of a file?, How do I count the number of lines in a file?, How do
I make a temporary file name?, How can I manipulate fixed-record-length
files?, How can I make a filehandle local to a subroutine?  How do I pass
filehandles between subroutines?  How do I make an array of filehandles?,
How can I use a filehandle indirectly?, How can I set up a footer format to
be used with write()?, How can I write() into a string?, How can I output
my numbers with commas added?, How can I translate tildes (~) in a
filename?, How come when I open a file read-write it wipes it out?, Why do
I sometimes get an "Argument list too long" when I use <*>?, Is there a
leak/bug in glob()?, How can I open a file with a leading ">" or trailing
blanks?, How can I reliably rename a file?, How can I lock a file?, Why
can't I just open(FH, ">file.lock")?, I still don't get locking.  I just
want to increment the number in the file.  How can I do this?, How do I
randomly update a binary file?, How do I get a file's timestamp in perl?,
How do I set a file's timestamp in perl?, How do I print to more than one
file at once?, How can I read in an entire file all at once?, How can I
read in a file by paragraphs?, How can I read a single character from a
file?  From the keyboard?, How can I tell whether there's a character
waiting on a filehandle?, How do I do a C<tail -f> in perl?, How do I dup()
a filehandle in Perl?, How do I close a file descriptor by number?, Why
can't I use "C:\temp\foo" in DOS paths?  What doesn't `C:\temp\foo.exe`
work?, Why doesn't glob("*.*") get all the files?, Why does Perl let me
delete read-only files?  Why does C<-i> clobber protected files?  Isn't
this a bug in Perl?, How do I select a random line from a file?, Why do I
get weird spaces when I print an array of lines?, L<perlfaq6>: Regexps, How
can I hope to use regular expressions without creating illegible and
unmaintainable code?, I'm having trouble matching over more than one line. 
What's wrong?, How can I pull out lines between two patterns that are
themselves on different lines?, I put a regular expression into $/ but it
didn't work. What's wrong?, How do I substitute case insensitively on the
LHS, but preserving case on the RHS?, How can I make C<\w> match national
character sets?, How can I match a locale-smart version of C</[a-zA-Z]/>?,
How can I quote a variable to use in a regex?, What is C</o> really for?,
How do I use a regular expression to strip C style comments from a file?,
Can I use Perl regular expressions to match balanced text?, What does it
mean that regexes are greedy?  How can I get around it?, How do I process
each word on each line?, How can I print out a word-frequency or
line-frequency summary?, How can I do approximate matching?, How do I
efficiently match many regular expressions at once?, Why don't
word-boundary searches with C<\b> work for me?, Why does using $&, $`, or
$' slow my program down?, What good is C<\G> in a regular expression?, Are
Perl regexes DFAs or NFAs?  Are they POSIX compliant?, What's wrong with
using grep or map in a void context?, How can I match strings with
multibyte characters?, How do I match a pattern that is supplied by the
user?, L<perlfaq7>: General Perl Language Issues, Can I get a BNF/yacc/RE
for the Perl language?, What are all these $@@%&* punctuation signs, and how
do I know when to use them?, Do I always/never have to quote my strings or
use semicolons and commas?, How do I skip some return values?, How do I
temporarily block warnings?, What's an extension?, Why do Perl operators
have different precedence than C operators?, How do I declare/create a
structure?, How do I create a module?, How do I create a class?, How can I
tell if a variable is tainted?, What's a closure?, What is variable suicide
and how can I prevent it?, How can I pass/return a {Function, FileHandle,
Array, Hash, Method, Regex}?, How do I create a static variable?, What's
the difference between dynamic and lexical (static) scoping?  Between
local() and my()?, How can I access a dynamic variable while a similarly
named lexical is in scope?, What's the difference between deep and shallow
binding?, Why doesn't "my($foo) = <FILE>;" work right?, How do I redefine a
builtin function, operator, or method?, What's the difference between
calling a function as &foo and foo()?, How do I create a switch or case
statement?, How can I catch accesses to undefined
variables/functions/methods?, Why can't a method included in this same file
be found?, How can I find out my current package?, How can I comment out a
large block of perl code?, How do I clear a package?, How can I use a
variable as a variable name?, L<perlfaq8>: System Interaction, How do I
find out which operating system I'm running under?, How come exec() doesn't
return?, How do I do fancy stuff with the keyboard/screen/mouse?, How do I
print something out in color?, How do I read just one key without waiting
for a return key?, How do I check whether input is ready on the keyboard?,
How do I clear the screen?, How do I get the screen size?, How do I ask the
user for a password?, How do I read and write the serial port?, How do I
decode encrypted password files?, How do I start a process in the
background?, How do I trap control characters/signals?, How do I modify the
shadow password file on a Unix system?, How do I set the time and date?,
How can I sleep() or alarm() for under a second?, How can I measure time
under a second?, How can I do an atexit() or setjmp()/longjmp()? (Exception
handling), Why doesn't my sockets program work under System V (Solaris)?
What does the error message "Protocol not supported" mean?, How can I call
my system's unique C functions from Perl?, Where do I get the include files
to do ioctl() or syscall()?, Why do setuid perl scripts complain about
kernel problems?, How can I open a pipe both to and from a command?, Why
can't I get the output of a command with system()?, How can I capture
STDERR from an external command?, Why doesn't open() return an error when a
pipe open fails?, What's wrong with using backticks in a void context?, How
can I call backticks without shell processing?, Why can't my script read
from STDIN after I gave it EOF (^D on Unix, ^Z on MS-DOS)?, How can I
convert my shell script to perl?, Can I use perl to run a telnet or ftp
session?, How can I write expect in Perl?, Is there a way to hide perl's
command line from programs such as "ps"?, I {changed directory, modified my
environment} in a perl script.	How come the change disappeared when I
exited the script?  How do I get my changes to be visible?, How do I close
a process's filehandle without waiting for it to complete?, How do I fork a
daemon process?, How do I make my program run with sh and csh?, How do I
find out if I'm running interactively or not?, How do I timeout a slow
event?, How do I set CPU limits?, How do I avoid zombies on a Unix system?,
How do I use an SQL database?, How do I make a system() exit on control-C?,
How do I open a file without blocking?, How do I install a module from
CPAN?, What's the difference between require and use?, How do I keep my own
module/library directory?, How do I add the directory my program lives in
to the module/library search path?, How do I add a directory to my include
path at runtime?, What is socket.ph and where do I get it?, L<perlfaq9>:
Networking, My CGI script runs from the command line but not the browser.  
(500 Server Error), How can I get better error messages from a CGI
program?, How do I remove HTML from a string?, How do I extract URLs?, How
do I download a file from the user's machine?  How do I open a file on
another machine?, How do I make a pop-up menu in HTML?, How do I fetch an
HTML file?, How do I automate an HTML form submission?, How do I decode or
create those %-encodings on the web?, How do I redirect to another page?,
How do I put a password on my web pages?, How do I edit my .htpasswd and
.htgroup files with Perl?, How do I make sure users can't enter values into
a form that cause my CGI script to do bad things?, How do I parse a mail
header?, How do I decode a CGI form?, How do I check a valid mail address?,
How do I decode a MIME/BASE64 string?, How do I return the user's mail
address?, How do I send mail?, How do I read mail?, How do I find out my
hostname/domainname/IP address?, How do I fetch a news article or the
active newsgroups?, How do I fetch/put an FTP file?, How can I do RPC in
Perl?
d63 1
a63 1
=over
d65 1
a65 1
=item Where to get this document
d67 11
a77 1
=item How to contribute to this document
d88 1
a88 1
=over
d98 3
a100 2
23/May/99, 13/April/99, 7/January/99, 22/June/98, 24/April/97, 23/April/97,
25/March/97, 18/March/97, 17/March/97 Version, Initial Release: 11/March/97
d104 1
a104 2
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.23 $, $Date:
1999/05/23 16:08:30 $)
d106 1
a106 1
=over
d110 1
a110 1
=over
d112 1
a112 1
=item What is Perl?
d114 1
a114 1
=item Who supports Perl?  Who develops it?  Why is it free?
d116 1
a116 1
=item Which version of Perl should I use?
d118 1
a118 1
=item What are perl4 and perl5?
d120 1
a120 1
=item What is perl6?
d122 1
a122 1
=item How stable is Perl?
d124 1
a124 1
=item Is Perl difficult to learn?
d126 1
a126 2
=item How does Perl compare with other languages like Java, Python, REXX,
Scheme, or Tcl?
d128 1
a128 1
=item Can I do [task] in Perl?
d130 1
a130 1
=item When shouldn't I program in Perl?
d132 1
a132 1
=item What's the difference between "perl" and "Perl"?
d134 1
a134 1
=item Is it a Perl program or a Perl script?
d136 1
a136 1
=item What is a JAPH?
d138 1
a138 4
=item Where can I get a list of Larry Wall witticisms?

=item How can I convince my sysadmin/supervisor/employees to use version
(5/5.005/Perl instead of some other language)?
a141 2
=item AUTHOR AND COPYRIGHT

d144 1
a144 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.32 $,
$Date: 1999/10/14 18:46:09 $)
d146 1
a146 1
=over
d150 1
a150 1
=over
d152 1
a152 1
=item What machines support Perl?  Where do I get it?
d154 1
a154 1
=item How can I get a binary version of Perl?
d156 1
a156 1
=item I don't have a C compiler on my system.  How can I compile perl?
d158 1
a158 2
=item I copied the Perl binary from one machine to another, but scripts
don't work.
d160 1
a160 2
=item I grabbed the sources and tried to compile but gdbm/dynamic
loading/malloc/linking/... failed.  How do I make it work?
d162 1
a162 2
=item What modules and extensions are available for Perl?  What is CPAN? 
What does CPAN/src/... mean?
d164 1
a164 1
=item Is there an ISO or ANSI certified version of Perl?
d166 1
a166 1
=item Where can I get information on Perl?
d168 1
a168 1
=item What are the Perl newsgroups on Usenet?  Where do I post questions?
d170 1
a170 1
=item Where should I post source code?
d172 1
a172 1
=item Perl Books
d174 1
a174 1
References, Tutorials, Task-Oriented, Special Topics
d176 1
a176 1
=item Perl in Magazines
d178 1
a178 1
=item Perl on the Net: FTP and WWW Access
d180 1
a180 1
=item What mailing lists are there for Perl?
d182 1
a182 1
=item Archives of comp.lang.perl.misc
d184 1
a184 1
=item Where can I buy a commercial version of Perl?
d186 1
a186 1
=item Where do I send bug reports?
d188 1
a188 1
=item What is perl.com? Perl Mongers? pm.org? perl.org?
d190 1
a190 1
=back
d192 1
a192 1
=item AUTHOR AND COPYRIGHT
d194 1
a194 1
=back
d196 1
a196 2
=head2 perlfaq3 - Programming Tools ($Revision: 1.38 $, $Date: 1999/05/23
16:08:30 $)
d198 1
a198 1
=over
d200 1
a200 1
=item DESCRIPTION
d202 1
a202 1
=over
d204 1
a204 1
=item How do I do (anything)?
d206 1
a206 1
=item How can I use Perl interactively?
d208 1
a208 1
=item Is there a Perl shell?
d210 1
a210 1
=item How do I debug my Perl programs?
d212 1
a212 1
=item How do I profile my Perl programs?
d214 1
a214 1
=item How do I cross-reference my Perl programs?
d216 1
a216 1
=item Is there a pretty-printer (formatter) for Perl?
d218 1
a218 1
=item Is there a ctags for Perl?
d220 1
a220 1
=item Is there an IDE or Windows Perl Editor?
d222 1
a222 1
=item Where can I get Perl macros for vi?
d224 1
a224 1
=item Where can I get perl-mode for emacs?
d226 1
a226 1
=item How can I use curses with Perl?
d228 1
a228 1
=item How can I use X or Tk with Perl?
d230 1
a230 1
=item How can I generate simple menus without using CGI or Tk?
d232 1
a232 1
=item What is undump?
d234 1
a234 1
=item How can I make my Perl program run faster?
d236 1
a236 1
=item How can I make my Perl program take less memory?
d238 4
a241 1
=item Is it unsafe to return a pointer to local data?
d243 1
a243 1
=item How can I free an array or hash so my program shrinks?
d245 5
a249 1
=item How can I make my CGI script more efficient?
d251 1
a251 1
=item How can I hide the source for my Perl program?
d253 1
a253 1
=item How can I compile my Perl program into byte code or C?
d255 1
a255 1
=item How can I compile Perl into Java?
d257 1
a257 1
=item How can I get C<#!perl> to work on [MS-DOS,NT,...]?
d259 1
a259 1
=item Can I write useful Perl programs on the command line?
d261 1
a261 1
=item Why don't Perl one-liners work on my DOS/Mac/VMS system?
d263 1
a263 13
=item Where can I learn about CGI or Web programming in Perl?

=item Where can I learn about object-oriented Perl programming?

=item Where can I learn about linking C with Perl? [h2xs, xsubpp]

=item I've read perlembed, perlguts, etc., but I can't embed perl in
my C program, what am I doing wrong?

=item When I tried to run my script, I got this message. What does it
mean?

=item What's MakeMaker?
d267 1
a267 1
=item AUTHOR AND COPYRIGHT
d269 1
a269 1
=back
d271 1
a271 4
=head2 perlfaq4 - Data Manipulation ($Revision: 1.49 $, $Date: 1999/05/23
20:37:49 $)

=over
d275 1
a275 1
=item Data: Numbers
d277 1
a277 1
=over
d279 1
a279 2
=item Why am I getting long decimals (eg, 19.9499999999999) instead of the
numbers I should be getting (eg, 19.95)?
d281 1
a281 1
=item Why isn't my octal data interpreted correctly?
d283 1
a283 2
=item Does Perl have a round() function?  What about ceil() and floor()? 
Trig functions?
d285 1
a285 1
=item How do I convert bits into ints?
d287 1
a287 1
=item Why doesn't & work the way I want it to?
d289 1
a289 1
=item How do I multiply matrices?
d291 1
a291 1
=item How do I perform an operation on a series of integers?
d293 1
a293 1
=item How can I output Roman numerals?
d295 1
a295 1
=item Why aren't my random numbers random?
d297 1
a297 1
=back
d299 1
a299 1
=item Data: Dates
d301 1
a301 1
=over
d303 1
a303 13
=item How do I find the week-of-the-year/day-of-the-year?

=item How do I find the current century or millennium?

=item How can I compare two dates and find the difference?

=item How can I take a string and turn it into epoch seconds?

=item How can I find the Julian Day?

=item How do I find yesterday's date?

=item Does Perl have a Year 2000 problem?  Is Perl Y2K compliant?
d307 1
a307 1
=item Data: Strings
d309 1
a309 1
=over
d311 1
a311 1
=item How do I validate input?
d313 1
a313 1
=item How do I unescape a string?
d315 1
a315 1
=item How do I remove consecutive pairs of characters?
d317 11
a327 1
=item How do I expand function calls in a string?
d329 1
a329 1
=item How do I find matching/nesting anything?
d331 1
a331 1
=item How do I reverse a string?
d333 2595
a2927 1
=item How do I expand tabs in a string?
d2929 2
a2930 1
=item How do I reformat a paragraph?
d2932 1
a2932 1
=item How can I access/change the first N letters of a string?
d2934 1
a2934 1
=item How do I change the Nth occurrence of something?
d2936 1
a2936 2
=item How can I count the number of occurrences of a substring within a
string?
d2938 1
a2938 1
=item How do I capitalize all the words on one line?
d2940 1
a2940 2
=item How can I split a [character] delimited string except when inside
[character]? (Comma-separated files)
d2942 1
a2942 1
=item How do I strip blank space from the beginning/end of a string?
d2944 1
a2944 1
=item How do I pad a string with blanks or pad a number with zeroes?
d2946 1
a2946 1
=item How do I extract selected columns from a string?
d2948 1
a2948 1
=item How do I find the soundex value of a string?
d2950 1
a2950 1
=item How can I expand variables in text strings?
d2952 1
a2952 1
=item What's wrong with always quoting "$vars"?
d2954 1
a2954 1
=item Why don't my <<HERE documents work?
d2956 1
a2956 3
1. There must be no space after the << part, 2. There (probably) should be
a semicolon at the end, 3. You can't (easily) have any space in front of
the tag
d2960 87
a3046 1
=item Data: Arrays
d3048 1
a3048 1
=over
d3050 2
a3051 1
=item What is the difference between a list and an array?
d3053 1
a3053 1
=item What is the difference between $array[1] and @@array[1]?
d3055 1
a3055 1
=item How can I remove duplicate elements from a list or array?
d3057 1
a3057 5
a) If @@in is sorted, and you want @@out to be sorted:(this assumes all true
values in the array), b) If you don't know whether @@in is sorted:, c) Like
(b), but @@in contains only small integers:, d) A way to do (b) without any
loops or greps:, e) Like (d), but @@in contains only small positive
integers:
d3059 1
a3059 1
=item How can I tell whether a list or array contains a certain element?
d3061 1
a3061 2
=item How do I compute the difference of two arrays?  How do I compute the
intersection of two arrays?
d3063 1
a3063 1
=item How do I test whether two arrays or hashes are equal?
d3065 1
a3065 1
=item How do I find the first array element for which a condition is true?
d3067 1
a3067 1
=item How do I handle linked lists?
d3069 1
a3069 1
=item How do I handle circular lists?
d3071 1
a3071 1
=item How do I shuffle an array randomly?
d3073 1
a3073 1
=item How do I process/modify each element of an array?
d3075 2
a3076 1
=item How do I select a random element from an array?
d3078 1
a3078 1
=item How do I permute N elements of a list?
d3080 1
a3080 1
=item How do I sort an array by (anything)?
d3082 1
a3082 1
=item How do I manipulate arrays of bits?
d3084 1
a3084 1
=item Why does defined() return true on empty arrays and hashes?
d3088 47
a3134 1
=item Data: Hashes (Associative Arrays)
d3136 1
a3136 1
=over
d3138 1
a3138 1
=item How do I process an entire hash?
d3140 1
a3140 2
=item What happens if I add or remove keys from a hash while iterating over
it?
d3142 1
a3142 1
=item How do I look up a hash element by value?
d3144 1
a3144 1
=item How can I know how many entries are in a hash?
d3146 1
a3146 1
=item How do I sort a hash (optionally by value instead of key)?
d3148 1
a3148 1
=item How can I always keep my hash sorted?
d3150 1
a3150 1
=item What's the difference between "delete" and "undef" with hashes?
d3152 1
a3152 1
=item Why don't my tied hashes make the defined/exists distinction?
d3154 1
a3154 1
=item How do I reset an each() operation part-way through?
d3156 1
a3156 1
=item How can I get the unique keys from two hashes?
d3158 1
a3158 1
=item How can I store a multidimensional array in a DBM file?
d3160 1
a3160 1
=item How can I make my hash remember the order I put elements into it?
d3162 1
a3162 2
=item Why does passing a subroutine an undefined element in a hash create
it?
d3164 1
a3164 2
=item How can I make the Perl equivalent of a C structure/C++ class/hash or
array of hashes or arrays?
d3166 1
a3166 1
=item How can I use a reference as a hash key?
d3170 3
a3172 1
=item Data: Misc
d3174 1
a3174 1
=over
d3176 1
a3176 1
=item How do I handle binary data correctly?
d3178 1
a3178 1
=item How do I determine whether a scalar is a number/whole/integer/float?
d3180 1
a3180 1
=item How do I keep persistent data across program calls?
d3182 1
a3182 1
=item How do I print out or copy a recursive data structure?
d3184 1
a3184 1
=item How do I define methods for every class/object?
d3186 1
a3186 1
=item How do I verify a credit card checksum?
d3188 3
a3190 1
=item How do I pack arrays of doubles or floats for XS code?
d3194 3
a3196 1
=item AUTHOR AND COPYRIGHT
d3200 1
a3200 2
=head2 perlfaq5 - Files and Formats ($Revision: 1.38 $, $Date: 1999/05/23
16:08:30 $)
d3202 1
a3202 1
=over
d3206 1
a3206 1
=over
d3208 1
a3208 1
=item How do I flush/unbuffer an output filehandle?  Why must I do this?
d3210 2
a3211 2
=item How do I change one line in a file/delete a line in a file/insert a
line in the middle of a file/append to the beginning of a file?
d3213 1
a3213 1
=item How do I count the number of lines in a file?
d3215 1
a3215 1
=item How do I make a temporary file name?
d3217 1
a3217 1
=item How can I manipulate fixed-record-length files?
d3219 1
a3219 2
=item How can I make a filehandle local to a subroutine?  How do I pass
filehandles between subroutines?  How do I make an array of filehandles?
d3221 1
a3221 1
=item How can I use a filehandle indirectly?
d3223 1
a3223 1
=item How can I set up a footer format to be used with write()?
d3225 1
a3225 1
=item How can I write() into a string?
d3227 1
a3227 1
=item How can I output my numbers with commas added?
d3229 1
a3229 1
=item How can I translate tildes (~) in a filename?
d3231 2
a3232 1
=item How come when I open a file read-write it wipes it out?
d3234 1
a3234 1
=item Why do I sometimes get an "Argument list too long" when I use <*>?
d3236 1
a3236 1
=item Is there a leak/bug in glob()?
d3238 1
a3238 1
=item How can I open a file with a leading ">" or trailing blanks?
d3240 1
a3240 1
=item How can I reliably rename a file?
d3242 1
a3242 1
=item How can I lock a file?
d3244 1
a3244 1
=item Why can't I just open(FH, ">file.lock")?
d3246 1
a3246 2
=item I still don't get locking.  I just want to increment the number in
the file.  How can I do this?
d3248 1
a3248 1
=item How do I randomly update a binary file?
d3250 1
a3250 1
=item How do I get a file's timestamp in perl?
d3252 1
a3252 1
=item How do I set a file's timestamp in perl?
d3254 1
a3254 1
=item How do I print to more than one file at once?
d3256 1
a3256 1
=item How can I read in an entire file all at once?
d3258 1
a3258 1
=item How can I read in a file by paragraphs?
d3260 1
a3260 1
=item How can I read a single character from a file?  From the keyboard?
d3262 1
a3262 1
=item How can I tell whether there's a character waiting on a filehandle?
d3264 1
a3264 1
=item How do I do a C<tail -f> in perl?
d3266 1
a3266 1
=item How do I dup() a filehandle in Perl?
d3268 4
a3271 1
=item How do I close a file descriptor by number?
d3273 1
a3273 2
=item Why can't I use "C:\temp\foo" in DOS paths?  What doesn't
`C:\temp\foo.exe` work?
d3275 1
a3275 1
=item Why doesn't glob("*.*") get all the files?
d3277 1
a3277 2
=item Why does Perl let me delete read-only files?  Why does C<-i> clobber
protected files?  Isn't this a bug in Perl?
d3279 1
a3279 1
=item How do I select a random line from a file?
d3281 1
a3281 1
=item Why do I get weird spaces when I print an array of lines?
d3283 1
a3283 1
=back
d3285 3
a3287 1
=item AUTHOR AND COPYRIGHT
d3289 1
a3289 1
=back
d3291 1
a3291 1
=head2 perlfaq6 - Regexes ($Revision: 1.27 $, $Date: 1999/05/23 16:08:30 $)
d3293 1
a3293 1
=over
d3295 1
a3295 1
=item DESCRIPTION
d3297 1
a3297 1
=over
d3299 1
a3299 2
=item How can I hope to use regular expressions without creating illegible
and unmaintainable code?
d3301 1
a3301 1
Comments Outside the Regex, Comments Inside the Regex, Different Delimiters
d3303 1
a3303 1
=item I'm having trouble matching over more than one line.  What's wrong?
d3305 1
a3305 2
=item How can I pull out lines between two patterns that are themselves on
different lines?
d3307 1
a3307 1
=item I put a regular expression into $/ but it didn't work. What's wrong?
d3309 1
a3309 2
=item How do I substitute case insensitively on the LHS, but preserving
case on the RHS?
d3311 1
a3311 1
=item How can I make C<\w> match national character sets?
d3313 1
a3313 1
=item How can I match a locale-smart version of C</[a-zA-Z]/>?
d3315 1
a3315 1
=item How can I quote a variable to use in a regex?
d3317 1
a3317 1
=item What is C</o> really for?
d3319 1
a3319 2
=item How do I use a regular expression to strip C style comments from a
file?
d3321 1
a3321 1
=item Can I use Perl regular expressions to match balanced text?
d3323 1
a3323 1
=item What does it mean that regexes are greedy?  How can I get around it?
d3325 1
a3325 1
=item  How do I process each word on each line?
d3327 1
a3327 1
=item How can I print out a word-frequency or line-frequency summary?
d3329 1
a3329 1
=item How can I do approximate matching?
d3331 1
a3331 1
=item How do I efficiently match many regular expressions at once?
d3333 1
a3333 1
=item Why don't word-boundary searches with C<\b> work for me?
d3335 1
a3335 1
=item Why does using $&, $`, or $' slow my program down?
d3337 1
a3337 1
=item What good is C<\G> in a regular expression?
d3339 1
a3339 1
=item Are Perl regexes DFAs or NFAs?  Are they POSIX compliant?
d3341 1
a3341 1
=item What's wrong with using grep or map in a void context?
d3343 1
a3343 1
=item How can I match strings with multibyte characters?
d3345 1
a3345 1
=item How do I match a pattern that is supplied by the user?
d3347 1
a3347 1
=back
d3349 1
a3349 1
=item AUTHOR AND COPYRIGHT
d3351 1
a3351 1
=back
d3353 1
a3353 2
=head2 perlfaq7 - Perl Language Issues ($Revision: 1.28 $, $Date:
1999/05/23 20:36:18 $)
d3355 1
a3355 1
=over
d3357 1
a3357 1
=item DESCRIPTION
d3359 1
a3359 1
=over
d3361 1
a3361 1
=item Can I get a BNF/yacc/RE for the Perl language?
d3363 1
a3363 2
=item What are all these $@@%&* punctuation signs, and how do I know when to
use them?
d3365 1
a3365 2
=item Do I always/never have to quote my strings or use semicolons and
commas?
d3367 1
a3367 1
=item How do I skip some return values?
d3369 1
a3369 1
=item How do I temporarily block warnings?
d3371 1
a3371 1
=item What's an extension?
d3373 1
a3373 1
=item Why do Perl operators have different precedence than C operators?
d3375 1
a3375 1
=item How do I declare/create a structure?
d3377 1
a3377 1
=item How do I create a module?
d3379 1
a3379 1
=item How do I create a class?
d3381 1
a3381 1
=item How can I tell if a variable is tainted?
d3383 1
a3383 1
=item What's a closure?
d3385 1
a3385 1
=item What is variable suicide and how can I prevent it?
d3387 1
a3387 2
=item How can I pass/return a {Function, FileHandle, Array, Hash, Method,
Regex}?
d3389 1
a3389 2
Passing Variables and Functions, Passing Filehandles, Passing Regexes,
Passing Methods
d3391 1
a3391 1
=item How do I create a static variable?
d3393 1
a3393 2
=item What's the difference between dynamic and lexical (static) scoping? 
Between local() and my()?
d3395 1
a3395 2
=item How can I access a dynamic variable while a similarly named lexical
is in scope?
d3397 1
a3397 1
=item What's the difference between deep and shallow binding?
d3399 1
a3399 5
=item Why doesn't "my($foo) = <FILE>;" work right?

=item How do I redefine a builtin function, operator, or method?

=item What's the difference between calling a function as &foo and foo()?
d3401 1
a3401 1
=item How do I create a switch or case statement?
d3403 1
a3403 1
=item How can I catch accesses to undefined variables/functions/methods?
d3405 1
a3405 1
=item Why can't a method included in this same file be found?
d3407 1
a3407 1
=item How can I find out my current package?
d3409 1
a3409 1
=item How can I comment out a large block of perl code?
d3411 1
a3411 1
=item How do I clear a package?
d3413 1
a3413 1
=item How can I use a variable as a variable name?
d3415 1
a3415 1
=back
d3417 1
a3417 1
=item AUTHOR AND COPYRIGHT
d3419 1
a3419 1
=back
d3421 1
a3421 2
=head2 perlfaq8 - System Interaction ($Revision: 1.39 $, $Date: 1999/05/23
18:37:57 $)
d3423 1
a3423 1
=over
d3425 1
a3425 1
=item DESCRIPTION
d3427 1
a3427 1
=over
d3429 1
a3429 1
=item How do I find out which operating system I'm running under?
d3431 1
a3431 1
=item How come exec() doesn't return?
d3433 1
a3433 1
=item How do I do fancy stuff with the keyboard/screen/mouse?
d3435 1
a3435 1
Keyboard, Screen, Mouse
d3437 1
a3437 1
=item How do I print something out in color?
d3439 1
a3439 1
=item How do I read just one key without waiting for a return key?
d3441 1
a3441 1
=item How do I check whether input is ready on the keyboard?
d3443 1
a3443 1
=item How do I clear the screen?
d3445 1
a3445 1
=item How do I get the screen size?
d3447 1
a3447 1
=item How do I ask the user for a password?
d3449 1
a3449 1
=item How do I read and write the serial port?
d3451 1
a3451 1
lockfiles, open mode, end of line, flushing output, non-blocking input
d3453 1
a3453 1
=item How do I decode encrypted password files?
d3455 1
a3455 1
=item How do I start a process in the background?
d3457 1
a3457 1
STDIN, STDOUT, and STDERR are shared, Signals, Zombies
d3459 1
a3459 1
=item How do I trap control characters/signals?
d3461 1
a3461 1
=item How do I modify the shadow password file on a Unix system?
d3463 1
a3463 1
=item How do I set the time and date?
d3465 1
a3465 1
=item How can I sleep() or alarm() for under a second?
d3467 1
a3467 1
=item How can I measure time under a second?
d3469 1
a3469 1
=item How can I do an atexit() or setjmp()/longjmp()? (Exception handling)
d3471 1
a3471 2
=item Why doesn't my sockets program work under System V (Solaris)? What
does the error message "Protocol not supported" mean?
d3473 1
a3473 1
=item How can I call my system's unique C functions from Perl?
d3475 1
a3475 1
=item Where do I get the include files to do ioctl() or syscall()?
d3477 1
a3477 1
=item Why do setuid perl scripts complain about kernel problems?
d3479 1
a3479 1
=item How can I open a pipe both to and from a command?
d3481 1
a3481 1
=item Why can't I get the output of a command with system()?
d3483 1
a3483 1
=item How can I capture STDERR from an external command?
d3485 1
a3485 1
=item Why doesn't open() return an error when a pipe open fails?
d3487 1
a3487 1
=item What's wrong with using backticks in a void context?
d3489 1
a3489 1
=item How can I call backticks without shell processing?
d3491 1
a3491 2
=item Why can't my script read from STDIN after I gave it EOF (^D on Unix,
^Z on MS-DOS)?
d3493 1
a3493 1
=item How can I convert my shell script to perl?
d3495 1
a3495 1
=item Can I use perl to run a telnet or ftp session?
d3497 1
a3497 1
=item How can I write expect in Perl?
d3499 1
a3499 2
=item Is there a way to hide perl's command line from programs such as
"ps"?
d3501 1
a3501 3
=item I {changed directory, modified my environment} in a perl script.	How
come the change disappeared when I exited the script?  How do I get my
changes to be visible?
d3503 1
a3503 1
Unix
d3505 1
a3505 2
=item How do I close a process's filehandle without waiting for it to
complete?
d3507 1
a3507 1
=item How do I fork a daemon process?
d3509 1
a3509 1
=item How do I make my program run with sh and csh?
d3511 1
a3511 1
=item How do I find out if I'm running interactively or not?
d3513 1
a3513 1
=item How do I timeout a slow event?
d3515 1
a3515 1
=item How do I set CPU limits?
d3517 1
a3517 1
=item How do I avoid zombies on a Unix system?
d3519 1
a3519 1
=item How do I use an SQL database?
d3521 1
a3521 1
=item How do I make a system() exit on control-C?
d3523 1
a3523 1
=item How do I open a file without blocking?
d3525 1
a3525 1
=item How do I install a module from CPAN?
d3527 1
a3527 1
=item What's the difference between require and use?
d3529 1
a3529 1
=item How do I keep my own module/library directory?
d3531 1
a3531 2
=item How do I add the directory my program lives in to the module/library
search path?
d3533 1
a3533 1
=item How do I add a directory to my include path at runtime?
d3535 1
a3535 1
=item What is socket.ph and where do I get it?
d3537 1
a3537 1
=back
d3539 1
a3539 1
=item AUTHOR AND COPYRIGHT
d3541 1
a3541 1
=back
d3543 1
a3543 2
=head2 perlfaq9 - Networking ($Revision: 1.26 $, $Date: 1999/05/23 16:08:30
$)
d3545 1
a3545 1
=over
d3547 1
a3547 1
=item DESCRIPTION
d3549 1
a3549 1
=over
d3551 1
a3551 2
=item My CGI script runs from the command line but not the browser.   (500
Server Error)
d3553 1
a3553 1
=item How can I get better error messages from a CGI program?
d3555 1
a3555 1
=item How do I remove HTML from a string?
d3557 1
a3557 1
=item How do I extract URLs?
d3559 1
a3559 2
=item How do I download a file from the user's machine?  How do I open a
file on another machine?
d3561 1
a3561 1
=item How do I make a pop-up menu in HTML?
d3563 1
a3563 1
=item How do I fetch an HTML file?
d3565 1
a3565 1
=item How do I automate an HTML form submission?
d3567 1
a3567 1
=item How do I decode or create those %-encodings on the web?
d3569 1
a3569 1
=item How do I redirect to another page?
d3571 1
a3571 1
=item How do I put a password on my web pages?
d3573 1
a3573 1
=item How do I edit my .htpasswd and .htgroup files with Perl?
d3575 1
a3575 2
=item How do I make sure users can't enter values into a form that cause my
CGI script to do bad things?
d3577 10
a3586 1
=item How do I parse a mail header?
d3588 1
a3588 1
=item How do I decode a CGI form?
d3590 1
a3590 1
=item How do I check a valid mail address?
d3592 1
a3592 1
=item How do I decode a MIME/BASE64 string?
d3594 1
a3594 1
=item How do I return the user's mail address?
d3596 1
a3596 1
=item How do I send mail?
d3598 1
a3598 1
=item How do I read mail?
d3600 1
a3600 1
=item How do I find out my hostname/domainname/IP address?
d3602 1
a3602 1
=item How do I fetch a news article or the active newsgroups?
d3604 1
a3604 1
=item How do I fetch/put an FTP file?
d3606 1
a3606 1
=item How can I do RPC in Perl?
d3610 5
a3614 1
=item AUTHOR AND COPYRIGHT
d3616 1
a3616 1
=back
d3618 1
a3618 1
=head2 perldelta - what's new for perl v5.6.0
d3620 1
a3620 1
=over
d3622 1
a3622 1
=item DESCRIPTION
d3624 1
a3624 1
=item Core Enhancements
d3626 1
a3626 1
=over
d3628 1
a3628 1
=item Interpreter cloning, threads, and concurrency
d3630 1
a3630 1
=item Lexically scoped warning categories
d3632 1
a3632 1
=item Unicode and UTF-8 support
d3634 1
a3634 1
=item Support for interpolating named characters
d3636 1
a3636 1
=item "our" declarations
d3638 1
a3638 1
=item Support for strings represented as a vector of ordinals
d3640 1
a3640 1
=item Improved Perl version numbering system
d3642 1
a3642 1
=item New syntax for declaring subroutine attributes
d3644 1
a3644 1
=item File and directory handles can be autovivified
d3646 1
a3646 1
=item open() with more than two arguments
d3648 1
a3648 1
=item 64-bit support
d3650 1
a3650 1
=item Large file support
d3652 1
a3652 1
=item Long doubles
d3654 1
a3654 1
=item "more bits"
d3656 1
a3656 1
=item Enhanced support for sort() subroutines
d3658 1
a3658 1
=item C<sort $coderef @@foo> allowed
d3660 1
a3660 1
=item File globbing implemented internally
d3662 1
a3662 1
Support for CHECK blocks
d3664 1
a3664 1
=item POSIX character class syntax [: :] supported
d3666 1
a3666 1
Better pseudo-random number generator
d3668 1
a3668 1
=item Improved C<qw//> operator
d3670 1
a3670 1
Better worst-case behavior of hashes
d3672 1
a3672 1
=item pack() format 'Z' supported
d3674 1
a3674 1
=item pack() format modifier '!' supported
d3676 1
a3676 1
=item pack() and unpack() support counted strings
d3678 1
a3678 1
=item Comments in pack() templates
d3680 1
a3680 1
=item Weak references
d3682 1
a3682 1
=item Binary numbers supported
d3684 1
a3684 1
=item Lvalue subroutines
d3686 1
a3686 1
=item Some arrows may be omitted in calls through references
d3688 1
a3688 1
=item Boolean assignment operators are legal lvalues
d3690 1
a3690 1
=item exists() is supported on subroutine names
d3692 1
a3692 1
=item exists() and delete() are supported on array elements
d3694 1
a3694 1
=item Pseudo-hashes work better
d3696 1
a3696 1
=item Automatic flushing of output buffers
d3698 1
a3698 1
=item Better diagnostics on meaningless filehandle operations
d3700 1
a3700 1
=item Where possible, buffered data discarded from duped input filehandle
d3702 1
a3702 1
=item eof() has the same old magic as <>
d3704 1
a3704 1
=item binmode() can be used to set :crlf and :raw modes
d3706 1
a3706 1
=item C<-T> filetest recognizes UTF-8 encoded files as "text"
d3708 1
a3708 1
=item system(), backticks and pipe open now reflect exec() failure
d3710 1
a3710 1
=item Improved diagnostics
d3712 1
a3712 1
=item Diagnostics follow STDERR
d3714 1
a3714 1
More consistent close-on-exec behavior
d3716 1
a3716 1
=item syswrite() ease-of-use
d3718 1
a3718 1
=item Better syntax checks on parenthesized unary operators
d3720 1
a3720 1
=item Bit operators support full native integer width
d3722 1
a3722 1
=item Improved security features
d3724 1
a3724 1
More functional bareword prototype (*)
d3726 1
a3726 1
=item C<require> and C<do> may be overridden
d3728 1
a3728 1
=item $^X variables may now have names longer than one character
d3730 1
a3730 1
=item New variable $^C reflects C<-c> switch
d3732 1
a3732 1
=item New variable $^V contains Perl version as a string
d3734 1
a3734 1
=item Optional Y2K warnings
d3736 1
a3736 1
=back
d3738 1
a3738 1
=item Modules and Pragmata
d3740 1
a3740 1
=over
d3742 1
a3742 1
=item Modules
d3744 1
a3744 8
attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters
d3746 1
a3746 1
=item Pragmata
d3748 1
a3748 1
=back
d3750 1
a3750 1
=item Utility Changes
d3752 3
a3754 1
=over
d3756 1
a3756 1
=item dprofpp
d3758 1
a3758 1
=item find2perl
d3760 1
a3760 1
=item h2xs
d3762 1
a3762 1
=item perlcc
d3764 1
a3764 1
=item perldoc
d3766 1
a3766 1
=item The Perl Debugger
d3770 3
a3772 1
=item Improved Documentation
d3774 1
a3774 4
perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod
d3776 1
a3776 1
=item Performance enhancements
d3778 1
a3778 1
=over
d3780 4
a3783 1
=item Simple sort() using { $a <=> $b } and the like are optimized
d3785 1
a3785 1
=item Optimized assignments to lexical variables
d3787 1
a3787 1
=item Faster subroutine calls
d3789 1
a3789 1
delete(), each(), values() and hash iteration are faster
d3791 2
a3792 1
=back
d3794 1
a3794 1
=item Installation and Configuration Improvements
d3796 1
a3796 1
=over
d3798 1
a3798 1
=item -Dusethreads means something different
d3800 1
a3800 1
=item New Configure flags
d3802 1
a3802 1
=item Threadedness and 64-bitness now more daring
d3804 1
a3804 1
=item Long Doubles
d3806 1
a3806 1
=item -Dusemorebits
d3808 1
a3808 1
=item -Duselargefiles
d3810 1
a3810 1
=item installusrbinperl
d3812 1
a3812 1
=item SOCKS support
d3814 1
a3814 1
=item C<-A> flag
d3816 1
a3816 1
=item Enhanced Installation Directories
d3818 1
a3818 1
=back
d3820 1
a3820 1
=item Platform specific changes
d3822 1
a3822 1
=over
d3824 1
a3824 1
=item Supported platforms
d3826 1
a3826 1
=item DOS
d3828 1
a3828 1
=item OS390 (OpenEdition MVS)
d3830 1
a3830 1
=item VMS
d3832 1
a3832 1
=item Win32
d3834 1
a3834 1
=back
d3836 1
a3836 1
=item Significant bug fixes
d3838 1
a3838 1
=over
d3840 2
a3841 1
=item <HANDLE> on empty files
d3843 1
a3843 1
=item C<eval '...'> improvements
d3845 1
a3845 1
=item All compilation errors are true errors
d3847 1
a3847 1
=item Implicitly closed filehandles are safer
d3849 1
a3849 1
=item Behavior of list slices is more consistent
d3851 1
a3851 1
=item C<(\$)> prototype and C<$foo{a}>
d3853 1
a3853 1
=item C<goto &sub> and AUTOLOAD
d3855 1
a3855 1
=item C<-bareword> allowed under C<use integer>
d3857 1
a3857 1
=item Failures in DESTROY()
d3859 1
a3859 1
=item Locale bugs fixed
d3861 1
a3861 1
=item Memory leaks
d3863 1
a3863 1
=item Spurious subroutine stubs after failed subroutine calls
d3865 50
a3914 1
=item Taint failures under C<-U>
d3916 1
a3916 1
=item END blocks and the C<-c> switch
d3918 1
a3918 1
=item Potential to leak DATA filehandles
d3922 2
a3923 1
=item New or Changed Diagnostics
d3925 1
a3925 50
"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible Y2K bug: %s, pragma "attrs" is deprecated, use
"sub NAME : ATTRS" instead, Premature end of script headers, Repeat count
in pack overflows, Repeat count in unpack overflows, realloc() of freed
memory ignored, Reference is already weak, setpgrp can't take arguments,
Strange *+?{} on zero-length expression, switching effective %s is not
implemented, This Perl can't reset CRTL environ elements (%s), This Perl
can't set CRTL environ elements (%s=%s), Too late to run %s block, Unknown
open() mode '%s', Unknown process %x sent message to prime_env_iter: %s,
Unrecognized escape \\%c passed through, Unterminated attribute parameter
in attribute list, Unterminated attribute list, Unterminated attribute
parameter in subroutine attribute list, Unterminated subroutine attribute
list, Value of CLI symbol "%s" too long, Version number must be a constant
number
d3927 1
a3927 1
=item New tests
d3929 2
a3930 1
=item Incompatible Changes
d3932 1
a3932 1
=over
d3934 1
a3934 1
=item Perl Source Incompatibilities
d3936 1
a3936 1
CHECK is a new keyword, Treatment of list slices of undef has changed
d3938 1
a3938 1
=item Format of $English::PERL_VERSION is different
d3940 1
a3940 8
Literals of the form C<1.2.3> parse differently, Possibly changed
pseudo-random number generator, Hashing function for hash keys has changed,
C<undef> fails on read only values, Close-on-exec bit may be set on pipe
and socket handles, Writing C<"$$1"> to mean C<"${$}1"> is unsupported,
delete(), values() and C<\(%h)> operate on aliases to values, not copies,
vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS, Text of some diagnostic
output has changed, C<%@@> has been removed, Parenthesized not() behaves
like a list operator, Semantics of bareword prototype C<(*)> have changed
d3942 1
a3942 1
=item Semantics of bit operators may have changed on 64-bit platforms
d3944 1
a3944 1
=item More builtins taint their results
d3946 10
a3955 1
=item C Source Incompatibilities
d3957 1
a3957 1
C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>
d3959 1
a3959 1
=item Compatible C Source API Changes
d3961 6
a3966 1
C<PATCHLEVEL> is now C<PERL_VERSION>
d3968 1
a3968 1
=item Binary Incompatibilities
d3972 3
a3974 1
=item Known Problems
d3976 1
a3976 1
=over
d3978 1
a3978 1
=item Thread test failures
d3980 1
a3980 1
=item EBCDIC platforms not supported
d3982 1
a3982 1
=item In 64-bit HP-UX the lib/io_multihomed test may hang
d3984 1
a3984 1
=item NEXTSTEP 3.3 POSIX test failure
d3986 1
a3986 2
=item Tru64 (aka Digital UNIX, aka DEC OSF/1) lib/sdbm test failure with
gcc
d3988 2
a3989 1
=item UNICOS/mk CC failures during Configure run
d3991 1
a3991 1
=item Arrow operator and arrays
d3993 1
a3993 1
=item Windows 2000
d3995 1
a3995 1
=item Experimental features
d3997 1
a3997 4
Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression constructs C<(?{ code })>
and C<(??{ code })>
d4001 1
a4001 1
=item Obsolete Diagnostics
d4003 1
a4003 3
Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, Probable precedence problem on %s,
regexp too big, Use of "$$<digit>" to mean "${$}<digit>" is deprecated
d4005 1
a4005 1
=item Reporting Bugs
d4007 1
a4007 1
=item SEE ALSO
d4009 1
a4009 1
=item HISTORY
d4013 1
a4013 1
=head2 perldata - Perl data types
d4015 1
a4015 1
=over
d4017 1
a4017 1
=item DESCRIPTION
d4019 1
a4019 1
=over
d4021 1
a4021 1
=item Variable names
d4023 2
a4024 1
=item Context
d4026 1
a4026 1
=item Scalar values
d4028 1
a4028 1
=item Scalar value constructors
d4030 1
a4030 1
=item List value constructors
d4032 1
a4032 1
=item Slices
d4034 1
a4034 1
=item Typeglobs and Filehandles
d4036 1
a4036 1
=back
d4038 1
a4038 1
=item SEE ALSO
d4042 1
a4042 1
=head2 perlsyn - Perl syntax
d4044 1
a4044 1
=over
d4046 1
a4046 1
=item DESCRIPTION
d4048 1
a4048 1
=over
d4050 1
a4050 1
=item Declarations
d4052 1
a4052 1
=item Simple statements
d4054 1
a4054 1
=item Compound statements
d4056 1
a4056 1
=item Loop Control
d4058 1
a4058 1
=item For Loops
d4060 1
a4060 1
=item Foreach Loops
d4062 1
a4062 1
=item Basic BLOCKs and Switch Statements
d4064 1
a4064 1
=item Goto
d4066 1
a4066 1
=item PODs: Embedded Documentation
d4068 1
a4068 1
=item Plain Old Comments (Not!)
d4070 1
a4070 1
=back
d4074 1
a4074 1
=head2 perlop - Perl operators and precedence
d4076 1
a4076 1
=over
d4078 1
a4078 1
=item SYNOPSIS
d4080 1
a4080 1
=item DESCRIPTION
d4082 1
a4082 1
=over
d4084 1
a4084 1
=item Terms and List Operators (Leftward)
d4086 1
a4086 1
=item The Arrow Operator
d4088 1
a4088 1
=item Auto-increment and Auto-decrement
d4090 1
a4090 1
=item Exponentiation
d4092 1
a4092 1
=item Symbolic Unary Operators
d4094 1
a4094 1
=item Binding Operators
d4096 1
a4096 1
=item Multiplicative Operators
d4098 1
a4098 1
=item Additive Operators
d4100 1
a4100 1
=item Shift Operators
d4102 1
a4102 1
=item Named Unary Operators
d4104 1
a4104 1
=item Relational Operators
d4106 1
a4106 1
=item Equality Operators
d4108 1
a4108 1
=item Bitwise And
d4110 1
a4110 1
=item Bitwise Or and Exclusive Or
d4112 1
a4112 1
=item C-style Logical And
d4114 1
a4114 1
=item C-style Logical Or
d4116 1
a4116 1
=item Range Operators
d4118 1
a4118 1
=item Conditional Operator
d4120 1
a4120 1
=item Assignment Operators
d4122 1
a4122 1
=item Comma Operator
d4124 1
a4124 1
=item List Operators (Rightward)
d4126 1
a4126 1
=item Logical Not
d4128 1
a4128 1
=item Logical And
d4130 1
a4130 1
=item Logical or and Exclusive Or
d4132 1
a4132 1
=item C Operators Missing From Perl
d4134 1
a4134 1
unary &, unary *, (TYPE)
d4136 1
a4136 1
=item Quote and Quote-like Operators
d4138 1
a4138 1
=item Regexp Quote-Like Operators
d4140 1
a4140 4
?PATTERN?, m/PATTERN/cgimosx, /PATTERN/cgimosx, q/STRING/, C<'STRING'>,
qq/STRING/, "STRING", qr/STRING/imosx, qx/STRING/, `STRING`, qw/STRING/,
s/PATTERN/REPLACEMENT/egimosx, tr/SEARCHLIST/REPLACEMENTLIST/cdsUC,
y/SEARCHLIST/REPLACEMENTLIST/cdsUC
d4142 1
a4142 1
=item Gory details of parsing quoted constructs
d4144 1
a4144 5
Finding the end, Removal of backslashes before delimiters, Interpolation,
C<<<'EOF'>, C<m''>, C<s'''>, C<tr///>, C<y///>, C<''>, C<q//>, C<"">,
C<``>, C<qq//>, C<qx//>, C<< <file*glob> >>, C<?RE?>, C</RE/>, C<m/RE/>,
C<s/RE/foo/>,, Interpolation of regular expressions, Optimization of
regular expressions
d4146 1
a4146 1
=item I/O Operators
d4148 1
a4148 1
=item Constant Folding
d4150 5
a4154 1
=item Bitwise String Operators
d4156 1
a4156 1
=item Integer Arithmetic
d4158 1
a4158 1
=item Floating-point Arithmetic
d4160 1
a4160 1
=item Bigger Numbers
d4164 1
a4164 1
=back
d4166 1
a4166 1
=head2 perlre - Perl regular expressions
d4168 1
a4168 1
=over
d4170 1
a4170 1
=item DESCRIPTION
d4172 1
a4172 1
i, m, s, x
d4174 1
a4174 1
=over
d4176 1
a4176 1
=item Regular Expressions
d4178 1
a4178 1
cntrl, graph, print, punct, xdigit
d4180 1
a4180 1
=item Extended Patterns
d4182 1
a4182 4
C<(?#text)>, C<(?imsx-imsx)>, C<(?:pattern)>, C<(?imsx-imsx:pattern)>,
C<(?=pattern)>, C<(?!pattern)>, C<(?<=pattern)>, C<(?<!pattern)>, C<(?{
code })>, C<(??{ code })>, C<< (?>pattern) >>,
C<(?(condition)yes-pattern|no-pattern)>, C<(?(condition)yes-pattern)>
d4184 1
a4184 1
=item Backtracking
d4186 1
a4186 1
=item Version 8 Regular Expressions
d4188 1
a4188 1
=item Warning on \1 vs $1
d4190 3
a4192 1
=item Repeated patterns matching zero-length substring
d4194 1
a4194 1
=item Combining pieces together
d4196 1
a4196 4
C<ST>, C<S|T>, C<S{REPEAT_COUNT}>, C<S{min,max}>, C<S{min,max}?>, C<S?>,
C<S*>, C<S+>, C<S??>, C<S*?>, C<S+?>, C<< (?>S) >>, C<(?=S)>, C<(?<=S)>,
C<(?!S)>, C<(?<!S)>, C<(??{ EXPR })>,
C<(?(condition)yes-pattern|no-pattern)>
d4198 1
a4198 1
=item Creating custom RE engines
d4200 1
a4200 1
=back
d4202 1
a4202 1
=item BUGS
d4204 1
a4204 1
=item SEE ALSO
d4208 1
a4208 1
=head2 perlrun - how to execute the Perl interpreter
d4210 1
a4210 1
=over
d4212 1
a4212 1
=item SYNOPSIS
d4214 1
a4214 1
=item DESCRIPTION
d4216 1
a4216 1
=over
d4218 1
a4218 1
=item #! and quoting on non-Unix systems
d4220 1
a4220 1
OS/2, MS-DOS, Win95/NT, Macintosh, VMS
d4222 1
a4222 1
=item Location of Perl
d4224 1
a4224 1
=item Command Switches
d4226 1
a4226 7
B<-0>[I<digits>], B<-a>, B<-C>, B<-c>, B<-d>, B<-d:>I<foo>,
B<-D>I<letters>, B<-D>I<number>, B<-e> I<commandline>, B<-F>I<pattern>,
B<-h>, B<-i>[I<extension>], B<-I>I<directory>, B<-l>[I<octnum>],
B<-m>[B<->]I<module>, B<-M>[B<->]I<module>, B<-M>[B<->]I<'module ...'>,
B<-[mM]>[B<->]I<module=arg[,arg]...>, B<-n>, B<-p>, B<-P>, B<-s>, B<-S>,
B<-T>, B<-u>, B<-U>, B<-v>, B<-V>, B<-V:>I<name>, B<-w>, B<-W>, B<-X>,
B<-x> I<directory>
d4230 1
a4230 1
=item ENVIRONMENT
d4232 1
a4232 2
HOME, LOGDIR, PATH, PERL5LIB, PERL5OPT, PERLLIB, PERL5DB, PERL5SHELL
(specific to the Win32 port), PERL_DEBUG_MSTATS, PERL_DESTRUCT_LEVEL
d4234 1
a4234 1
=back
d4236 1
a4236 1
=head2 perlfunc - Perl builtin functions
d4238 1
a4238 1
=over
d4240 1
a4240 1
=item DESCRIPTION
d4242 1
a4242 1
=over
d4244 1
a4244 1
=item Perl Functions by Category
d4246 1
a4246 11
Functions for SCALARs or strings, Regular expressions and pattern matching,
Numeric functions, Functions for real @@ARRAYs, Functions for list data,
Functions for real %HASHes, Input and output functions, Functions for fixed
length data or records, Functions for filehandles, files, or directories,
Keywords related to the control flow of your perl program, Keywords related
to scoping, Miscellaneous functions, Functions for processes and process
groups, Keywords related to perl modules, Keywords related to classes and
object-orientedness, Low-level socket functions, System V interprocess
communication functions, Fetching user and group info, Fetching network
info, Time-related functions, Functions new in perl5, Functions obsoleted
in perl5
d4248 1
a4248 1
=item Portability
d4250 1
a4250 1
=item Alphabetical Listing of Perl Functions
d4252 1
a4252 72
I<-X> FILEHANDLE, I<-X> EXPR, I<-X>, abs VALUE, abs, accept
NEWSOCKET,GENERICSOCKET, alarm SECONDS, alarm, atan2 Y,X, bind SOCKET,NAME,
binmode FILEHANDLE, DISCIPLINE, binmode FILEHANDLE, bless REF,CLASSNAME,
bless REF, caller EXPR, caller, chdir EXPR, chmod LIST, chomp VARIABLE,
chomp LIST, chomp, chop VARIABLE, chop LIST, chop, chown LIST, chr NUMBER,
chr, chroot FILENAME, chroot, close FILEHANDLE, close, closedir DIRHANDLE,
connect SOCKET,NAME, continue BLOCK, cos EXPR, crypt PLAINTEXT,SALT,
dbmclose HASH, dbmopen HASH,DBNAME,MASK, defined EXPR, defined, delete
EXPR, die LIST, do BLOCK, do SUBROUTINE(LIST), do EXPR, dump LABEL, dump,
each HASH, eof FILEHANDLE, eof (), eof, eval EXPR, eval BLOCK, exec LIST,
exec PROGRAM LIST, exists EXPR, exit EXPR, exp EXPR, exp, fcntl
FILEHANDLE,FUNCTION,SCALAR, fileno FILEHANDLE, flock FILEHANDLE,OPERATION,
fork, format, formline PICTURE,LIST, getc FILEHANDLE, getc, getlogin,
getpeername SOCKET, getpgrp PID, getppid, getpriority WHICH,WHO, getpwnam
NAME, getgrnam NAME, gethostbyname NAME, getnetbyname NAME, getprotobyname
NAME, getpwuid UID, getgrgid GID, getservbyname NAME,PROTO, gethostbyaddr
ADDR,ADDRTYPE, getnetbyaddr ADDR,ADDRTYPE, getprotobynumber NUMBER,
getservbyport PORT,PROTO, getpwent, getgrent, gethostent, getnetent,
getprotoent, getservent, setpwent, setgrent, sethostent STAYOPEN, setnetent
STAYOPEN, setprotoent STAYOPEN, setservent STAYOPEN, endpwent, endgrent,
endhostent, endnetent, endprotoent, endservent, getsockname SOCKET,
getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob, gmtime EXPR, goto LABEL,
goto EXPR, goto &NAME, grep BLOCK LIST, grep EXPR,LIST, hex EXPR, hex,
import, index STR,SUBSTR,POSITION, index STR,SUBSTR, int EXPR, int, ioctl
FILEHANDLE,FUNCTION,SCALAR, join EXPR,LIST, keys HASH, kill SIGNAL, LIST,
last LABEL, last, lc EXPR, lc, lcfirst EXPR, lcfirst, length EXPR, length,
link OLDFILE,NEWFILE, listen SOCKET,QUEUESIZE, local EXPR, localtime EXPR,
lock, log EXPR, log, lstat FILEHANDLE, lstat EXPR, lstat, m//, map BLOCK
LIST, map EXPR,LIST, mkdir FILENAME,MASK, mkdir FILENAME, msgctl
ID,CMD,ARG, msgget KEY,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, msgsnd
ID,MSG,FLAGS, my EXPR, my EXPR : ATTRIBUTES, next LABEL, next, no Module
LIST, oct EXPR, oct, open FILEHANDLE,MODE,LIST, open FILEHANDLE,EXPR, open
FILEHANDLE, opendir DIRHANDLE,EXPR, ord EXPR, ord, our EXPR, pack
TEMPLATE,LIST, package, package NAMESPACE, pipe READHANDLE,WRITEHANDLE, pop
ARRAY, pop, pos SCALAR, pos, print FILEHANDLE LIST, print LIST, print,
printf FILEHANDLE FORMAT, LIST, printf FORMAT, LIST, prototype FUNCTION,
push ARRAY,LIST, q/STRING/, qq/STRING/, qr/STRING/, qx/STRING/, qw/STRING/,
quotemeta EXPR, quotemeta, rand EXPR, rand, read
FILEHANDLE,SCALAR,LENGTH,OFFSET, read FILEHANDLE,SCALAR,LENGTH, readdir
DIRHANDLE, readline EXPR, readlink EXPR, readlink, readpipe EXPR, recv
SOCKET,SCALAR,LENGTH,FLAGS, redo LABEL, redo, ref EXPR, ref, rename
OLDNAME,NEWNAME, require VERSION, require EXPR, require, reset EXPR, reset,
return EXPR, return, reverse LIST, rewinddir DIRHANDLE, rindex
STR,SUBSTR,POSITION, rindex STR,SUBSTR, rmdir FILENAME, rmdir, s///, scalar
EXPR, seek FILEHANDLE,POSITION,WHENCE, seekdir DIRHANDLE,POS, select
FILEHANDLE, select, select RBITS,WBITS,EBITS,TIMEOUT, semctl
ID,SEMNUM,CMD,ARG, semget KEY,NSEMS,FLAGS, semop KEY,OPSTRING, send
SOCKET,MSG,FLAGS,TO, send SOCKET,MSG,FLAGS, setpgrp PID,PGRP, setpriority
WHICH,WHO,PRIORITY, setsockopt SOCKET,LEVEL,OPTNAME,OPTVAL, shift ARRAY,
shift, shmctl ID,CMD,ARG, shmget KEY,SIZE,FLAGS, shmread ID,VAR,POS,SIZE,
shmwrite ID,STRING,POS,SIZE, shutdown SOCKET,HOW, sin EXPR, sin, sleep
EXPR, sleep, socket SOCKET,DOMAIN,TYPE,PROTOCOL, socketpair
SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, sort SUBNAME LIST, sort BLOCK LIST,
sort LIST, splice ARRAY,OFFSET,LENGTH,LIST, splice ARRAY,OFFSET,LENGTH,
splice ARRAY,OFFSET, splice ARRAY, split /PATTERN/,EXPR,LIMIT, split
/PATTERN/,EXPR, split /PATTERN/, split, sprintf FORMAT, LIST, sqrt EXPR,
sqrt, srand EXPR, srand, stat FILEHANDLE, stat EXPR, stat, study SCALAR,
study, sub BLOCK, sub NAME, sub NAME BLOCK, substr
EXPR,OFFSET,LENGTH,REPLACEMENT, substr EXPR,OFFSET,LENGTH, substr
EXPR,OFFSET, symlink OLDFILE,NEWFILE, syscall LIST, sysopen
FILEHANDLE,FILENAME,MODE, sysopen FILEHANDLE,FILENAME,MODE,PERMS, sysread
FILEHANDLE,SCALAR,LENGTH,OFFSET, sysread FILEHANDLE,SCALAR,LENGTH, sysseek
FILEHANDLE,POSITION,WHENCE, system LIST, system PROGRAM LIST, syswrite
FILEHANDLE,SCALAR,LENGTH,OFFSET, syswrite FILEHANDLE,SCALAR,LENGTH,
syswrite FILEHANDLE,SCALAR, tell FILEHANDLE, tell, telldir DIRHANDLE, tie
VARIABLE,CLASSNAME,LIST, tied VARIABLE, time, times, tr///, truncate
FILEHANDLE,LENGTH, truncate EXPR,LENGTH, uc EXPR, uc, ucfirst EXPR,
ucfirst, umask EXPR, umask, undef EXPR, undef, unlink LIST, unlink, unpack
TEMPLATE,EXPR, untie VARIABLE, unshift ARRAY,LIST, use Module VERSION LIST,
use Module VERSION, use Module LIST, use Module, use VERSION, utime LIST,
values HASH, vec EXPR,OFFSET,BITS, wait, waitpid PID,FLAGS, wantarray, warn
LIST, write FILEHANDLE, write EXPR, write, y///
d4256 1
a4256 1
=back
d4258 1
a4258 1
=head2 perlvar - Perl predefined variables
d4260 1
a4260 1
=over
d4262 1
a4262 1
=item DESCRIPTION
d4264 1
a4264 1
=over
d4266 1
a4266 1
=item Predefined Names
d4268 1
a4268 28
$ARG, $_, $<I<digits>>, $MATCH, $&, $PREMATCH, $`, $POSTMATCH, $',
$LAST_PAREN_MATCH, $+, @@+, $MULTILINE_MATCHING, $*, input_line_number
HANDLE EXPR, $INPUT_LINE_NUMBER, $NR, $, input_record_separator HANDLE
EXPR, $INPUT_RECORD_SEPARATOR, $RS, $/, autoflush HANDLE EXPR,
$OUTPUT_AUTOFLUSH, $|, output_field_separator HANDLE EXPR,
$OUTPUT_FIELD_SEPARATOR, $OFS, $,, output_record_separator HANDLE EXPR,
$OUTPUT_RECORD_SEPARATOR, $ORS, $\, $LIST_SEPARATOR, $",
$SUBSCRIPT_SEPARATOR, $SUBSEP, $;, $OFMT, $#, format_page_number HANDLE
EXPR, $FORMAT_PAGE_NUMBER, $%, format_lines_per_page HANDLE EXPR,
$FORMAT_LINES_PER_PAGE, $=, format_lines_left HANDLE EXPR,
$FORMAT_LINES_LEFT, $-, @@-, C<$`> is the same as C<substr($var, 0, $-[0]>),
C<$&> is the same as C<substr($var, $-[0], $+[0] - $-[0]>), C<$'> is the
same as C<substr($var, $+[0]>), C<$1> is the same as C<substr($var, $-[1],
$+[1] - $-[1])>, C<$2> is the same as C<substr($var, $-[2], $+[2] -
$-[2])>, C<$3> is the same as C<substr $var, $-[3], $+[3] - $-[3]>),
format_name HANDLE EXPR, $FORMAT_NAME, $~, format_top_name HANDLE EXPR,
$FORMAT_TOP_NAME, $^, format_line_break_characters HANDLE EXPR,
$FORMAT_LINE_BREAK_CHARACTERS, $:, format_formfeed HANDLE EXPR,
$FORMAT_FORMFEED, $^L, $ACCUMULATOR, $^A, $CHILD_ERROR, $?, $OS_ERROR,
$ERRNO, $!, $EXTENDED_OS_ERROR, $^E, $EVAL_ERROR, $@@, $PROCESS_ID, $PID,
$$, $REAL_USER_ID, $UID, $<, $EFFECTIVE_USER_ID, $EUID, $>, $REAL_GROUP_ID,
$GID, $(, $EFFECTIVE_GROUP_ID, $EGID, $), $PROGRAM_NAME, $0, $[, $],
$COMPILING, $^C, $DEBUGGING, $^D, $SYSTEM_FD_MAX, $^F, $^H, %^H,
$INPLACE_EDIT, $^I, $^M, $OSNAME, $^O, $PERLDB, $^P, 0x01, 0x02, 0x04,
0x08, 0x10, 0x20, 0x40, 0x80, 0x100, 0x200, $LAST_REGEXP_CODE_RESULT, $^R,
$EXCEPTIONS_BEING_CAUGHT, $^S, $BASETIME, $^T, $PERL_VERSION, $^V,
$WARNING, $^W, ${^WARNING_BITS}, ${^WIDE_SYSTEM_CALLS}, $EXECUTABLE_NAME,
$^X, $ARGV, @@ARGV, @@INC, @@_, %INC, %ENV, $ENV{expr}, %SIG, $SIG{expr}
d4270 1
a4270 1
=item Error Indicators
d4272 1
a4272 1
=item Technical Note on the Syntax of Variable Names
a4275 2
=item BUGS

d4278 1
a4278 3
=head2 perlsub - Perl subroutines

=over
d4280 1
a4280 1
=item SYNOPSIS
d4284 7
a4290 5
=over

=item Private Variables via my()

=item Persistent Private Variables
d4292 1
a4292 1
=item Temporary Values via local()
d4294 1
a4294 1
=item Lvalue subroutines
d4296 2
a4297 1
=item Passing Symbol Table Entries (typeglobs)
d4299 1
a4299 1
=item When to Still Use local()
d4301 1
a4301 3
1. You need to give a global variable a temporary value, especially $_, 2.
You need to create a local file or directory handle or a local function, 3.
You want to temporarily change just one element of an array or hash
d4303 1
a4303 1
=item Pass by Reference
d4305 2
a4306 1
=item Prototypes
d4308 1
a4308 1
=item Constant Functions
d4310 2
a4311 1
=item Overriding Built-in Functions
d4313 1
a4313 1
=item Autoloading
d4315 1
a4315 1
=item Subroutine Attributes
d4317 1
a4317 1
=back
d4319 1
a4319 1
=item SEE ALSO
d4321 1
a4321 1
=back
d4323 1
a4323 1
=head2 perlmod - Perl modules (packages and symbol tables)
d4325 1
a4325 1
=over
d4327 1
a4327 1
=item DESCRIPTION
d4329 1
a4329 1
=over
d4331 1
a4331 1
=item Packages
d4333 1
a4333 1
=item Symbol Tables
d4335 2
a4336 1
=item Package Constructors and Destructors
d4338 1
a4338 1
=item Perl Classes
d4340 1
a4340 1
=item Perl Modules
d4344 3
a4346 1
=item SEE ALSO
d4348 1
a4348 1
=back
d4350 1
a4350 1
=head2 perlmodlib - constructing new Perl modules and finding existing ones
d4352 1
a4352 1
=over
d4354 1
a4354 1
=item DESCRIPTION
d4356 1
a4356 1
=item THE PERL MODULE LIBRARY
d4358 1
a4358 1
=over
d4360 1
a4360 1
=item Pragmatic Modules
d4362 1
a4362 3
attributes, attrs, autouse, base, blib, caller, charnames, constant,
diagnostics, fields, filetest, integer, less, lib, locale, ops, overload,
re, sigtrap, strict, subs, utf8, vars, warnings
d4364 1
a4364 1
=item Standard Modules
d4366 1
a4366 30
AnyDBM_File, AutoLoader, AutoSplit, B, B::Asmdata, B::Assembler, B::Bblock,
B::Bytecode, B::C, B::CC, B::Debug, B::Deparse, B::Disassembler, B::Lint,
B::Showlex, B::Stackobj, B::Terse, B::Xref, Benchmark, ByteLoader, CGI,
CGI::Apache, CGI::Carp, CGI::Cookie, CGI::Fast, CGI::Pretty, CGI::Push,
CGI::Switch, CPAN, CPAN::FirstTime, CPAN::Nox, Carp, Carp::Heavy,
Class::Struct, Config, Cwd, DB, DB_File, Data::Dumper, Devel::DProf,
Devel::Peek, Devel::SelfStubber, DirHandle, Dumpvalue, DynaLoader, English,
Env, Errno, Exporter, Exporter::Heavy, ExtUtils::Command, ExtUtils::Embed,
ExtUtils::Install, ExtUtils::Installed, ExtUtils::Liblist,
ExtUtils::MM_Cygwin, ExtUtils::MM_OS2, ExtUtils::MM_Unix, ExtUtils::MM_VMS,
ExtUtils::MM_Win32, ExtUtils::MakeMaker, ExtUtils::Manifest,
ExtUtils::Mkbootstrap, ExtUtils::Mksymlists, ExtUtils::Packlist,
ExtUtils::testlib, Fatal, Fcntl, File::Basename, File::CheckTree,
File::Compare, File::Copy, File::DosGlob, File::Find, File::Glob,
File::Path, File::Spec, File::Spec::Functions, File::Spec::Mac,
File::Spec::OS2, File::Spec::Unix, File::Spec::VMS, File::Spec::Win32,
File::stat, FileCache, FileHandle, FindBin, GDBM_File, Getopt::Long,
Getopt::Std, I18N::Collate, IO, IO::Dir, IO::File, IO::Handle, IO::Pipe,
IO::Poll, IO::Seekable, IO::Select, IO::Socket, IO::Socket::INET,
IO::Socket::UNIX, IPC::Msg, IPC::Open2, IPC::Open3, IPC::Semaphore,
IPC::SysV, Math::BigFloat, Math::BigInt, Math::Complex, Math::Trig,
Net::Ping, Net::hostent, Net::netent, Net::protoent, Net::servent, O,
Opcode, POSIX, Pod::Checker, Pod::Html, Pod::InputObjects, Pod::Man,
Pod::Parser, Pod::Select, Pod::Text, Pod::Text::Color, Pod::Usage,
SDBM_File, Safe, Search::Dict, SelectSaver, SelfLoader, Shell, Socket,
Symbol, Sys::Hostname, Sys::Syslog, Term::Cap, Term::Complete,
Term::ReadLine, Test, Test::Harness, Text::Abbrev, Text::ParseWords,
Text::Soundex, Text::Wrap, Tie::Array, Tie::Handle, Tie::Hash,
Tie::RefHash, Tie::Scalar, Tie::SubstrHash, Time::Local, Time::gmtime,
Time::localtime, Time::tm, UNIVERSAL, User::grent, User::pwent
d4368 1
a4368 1
=item Extension Modules
d4370 1
a4370 1
=back
d4372 1
a4372 1
=item CPAN
d4374 1
a4374 14
Language Extensions and Documentation Tools, Development Support, Operating
System Interfaces, Networking, Device Control (modems) and InterProcess
Communication, Data Types and Data Type Utilities, Database Interfaces,
User Interfaces, Interfaces to / Emulations of Other Programming Languages,
File Names, File Systems and File Locking (see also File Handles), String
Processing, Language Text Processing, Parsing, and Searching, Option,
Argument, Parameter, and Configuration File Processing,
Internationalization and Locale, Authentication, Security, and Encryption,
World Wide Web, HTML, HTTP, CGI, MIME, Server and Daemon Utilities,
Archiving and Compression, Images, Pixmap and Bitmap Manipulation, Drawing,
and Graphing, Mail and Usenet News, Control Flow Utilities (callbacks and
exceptions etc), File Handle and Input/Output Stream Utilities,
Miscellaneous Modules, Africa, Asia, Australasia, Central America, Europe,
North America, South America
d4376 1
a4376 1
=item Modules: Creation, Use, and Abuse
d4378 1
a4378 1
=over
d4380 1
a4380 1
=item Guidelines for Module Creation
d4382 1
a4382 11
Do similar modules already exist in some form?, Try to design the new
module to be easy to extend and reuse, Some simple style guidelines, Select
what to export, Select a name for the module, Have you got it right?,
README and other Additional Files, A description of the
module/package/extension etc, A copyright notice - see below, Prerequisites
- what else you may need to have, How to build it - possible changes to
Makefile.PL etc, How to install it, Recent changes in this release,
especially incompatibilities, Changes / enhancements you plan to make in
the future, Adding a Copyright Notice, Give the module a
version/issue/release number, How to release and distribute a module, Take
care when changing a released module
d4384 1
a4384 1
=item Guidelines for Converting Perl 4 Library Scripts into Modules
d4386 1
a4386 4
There is no requirement to convert anything, Consider the implications,
Make the most of the opportunity, The pl2pm utility will get you started,
Adds the standard Module prologue lines, Converts package specifiers from '
to ::, Converts die(...) to croak(...), Several other minor changes
d4388 1
a4388 1
=item Guidelines for Reusing Application Code
d4390 1
a4390 5
Complete applications rarely belong in the Perl Module Library, Many
applications contain some Perl code that could be reused, Break-out the
reusable code into one or more separate module files, Take the opportunity
to reconsider and redesign the interfaces, In some cases the 'application'
can then be reduced to a small
d4394 1
a4394 1
=item NOTE
d4398 1
a4398 1
=head2 perlmodinstall - Installing CPAN Modules
d4400 1
a4400 1
=over
d4404 1
a4404 3
=over

=item PREAMBLE
d4406 1
a4406 2
B<DECOMPRESS> the file, B<UNPACK> the file into a directory, B<BUILD> the
module (sometimes unnecessary), B<INSTALL> the module
d4408 1
a4408 1
=back
d4410 1
a4410 1
=item HEY
d4412 7
a4418 1
=item AUTHOR
d4420 1
a4420 1
=item COPYRIGHT
d4422 1
a4422 1
=back
d4424 1
a4424 1
=head2 perlfork - Perl's fork() emulation
d4426 1
a4426 1
=over
d4428 4
a4431 1
=item SYNOPSIS
d4433 1
a4433 1
=item DESCRIPTION
d4435 1
a4435 1
=over
d4437 1
a4437 1
=item Behavior of other Perl features in forked pseudo-processes
d4439 1
a4439 3
$$ or $PROCESS_ID, %ENV, chdir() and all other builtins that accept
filenames, wait() and waitpid(), kill(), exec(), exit(), Open handles to
files, directories and network sockets
d4441 1
a4441 1
=item Resource limits
d4443 1
a4443 1
=item Killing the parent process
d4445 1
a4445 1
=item Lifetime of the parent process and pseudo-processes
d4447 1
a4447 1
=item CAVEATS AND LIMITATIONS
d4449 1
a4449 3
BEGIN blocks, Open filehandles, Forking pipe open() not yet implemented,
Global state maintained by XSUBs, Interpreter embedded in larger
application, Thread-safety of extensions
d4451 1
a4451 1
=back
d4453 1
a4453 1
=item BUGS
d4455 1
a4455 1
=item AUTHOR
d4457 1
a4457 1
=item SEE ALSO
d4459 1
a4459 1
=back
d4461 1
a4461 1
=head2 perlform - Perl formats
d4463 1
a4463 1
=over
d4465 1
a4465 1
=item DESCRIPTION
d4467 1
a4467 1
=over
d4469 1
a4469 1
=item Format Variables
d4471 1
a4471 1
=back
d4473 1
a4473 1
=item NOTES
d4475 1
a4475 1
=over
d4477 1
a4477 1
=item Footers
d4479 1
a4479 1
=item Accessing Formatting Internals
d4481 1
a4481 1
=back
d4483 1
a4483 1
=item WARNINGS
d4485 1
a4485 1
=back
d4487 1
a4487 2
=head2 perllocale - Perl locale handling (internationalization and
localization)
d4489 1
a4489 1
=over
d4491 1
a4491 1
=item DESCRIPTION
d4493 1
a4493 1
=item PREPARING TO USE LOCALES
d4495 1
a4495 1
=item USING LOCALES
d4497 1
a4497 1
=over
d4499 1
a4499 1
=item The use locale pragma
d4501 1
a4501 1
=item The setlocale function
d4503 1
a4503 1
=item Finding locales
d4505 1
a4505 1
=item LOCALE PROBLEMS
d4507 1
a4507 1
=item Temporarily fixing locale problems
d4509 1
a4509 1
=item Permanently fixing locale problems
d4511 1
a4511 1
=item Permanently fixing your system's locale configuration
d4513 1
a4513 1
=item Fixing system locale configuration
d4515 1
a4515 1
=item The localeconv function
d4517 1
a4517 1
=back
d4519 1
a4519 1
=item LOCALE CATEGORIES
d4521 1
a4521 1
=over
d4523 1
a4523 1
=item Category LC_COLLATE: Collation
d4525 1
a4525 1
=item Category LC_CTYPE: Character Types
d4527 1
a4527 1
=item Category LC_NUMERIC: Numeric Formatting
d4529 1
a4529 1
=item Category LC_MONETARY: Formatting of monetary amounts
d4531 1
a4531 1
=item LC_TIME
d4533 1
a4533 1
=item Other categories
d4535 1
a4535 1
=back
d4537 1
a4537 1
=item SECURITY
d4539 1
a4539 9
B<Comparison operators> (C<lt>, C<le>, C<ge>, C<gt> and C<cmp>):,
B<Case-mapping interpolation> (with C<\l>, C<\L>, C<\u> or C<\U>),
B<Matching operator> (C<m//>):, B<Substitution operator> (C<s///>):,
B<Output formatting functions> (printf() and write()):, B<Case-mapping
functions> (lc(), lcfirst(), uc(), ucfirst()):, B<POSIX locale-dependent
functions> (localeconv(), strcoll(),strftime(), strxfrm()):, B<POSIX
character class tests> (isalnum(), isalpha(), isdigit(),isgraph(),
islower(), isprint(), ispunct(), isspace(), isupper(),
isxdigit()):
d4541 1
a4541 1
=item ENVIRONMENT
d4543 1
a4543 2
PERL_BADLANG, LC_ALL, LANGUAGE, LC_CTYPE, LC_COLLATE, LC_MONETARY,
LC_NUMERIC, LC_TIME, LANG
d4545 1
a4545 1
=item NOTES
d4547 1
a4547 1
=over
d4549 1
a4549 1
=item Backward compatibility
d4551 1
a4551 1
=item I18N:Collate obsolete
d4553 1
a4553 1
=item Sort speed and memory use impacts
d4555 8
a4562 1
=item write() and LC_NUMERIC
d4564 1
a4564 1
=item Freely available locale definitions
d4566 1
a4566 1
=item I18n and l10n
d4568 1
a4568 1
=item An imperfect standard
d4570 1
a4570 1
=back
d4572 1
a4572 1
=item BUGS
d4574 1
a4574 1
=over
d4576 1
a4576 1
=item Broken systems
d4578 1
a4578 1
=back
d4580 1
a4580 1
=item SEE ALSO
d4582 1
a4582 1
=item HISTORY
d4586 1
a4586 1
=head2 perlref - Perl references and nested data structures
d4588 4
a4591 1
=over
d4593 1
a4593 1
=item NOTE
d4595 1
a4595 1
=item DESCRIPTION
d4597 1
a4597 1
=over
d4599 1
a4599 1
=item Making References
d4601 1
a4601 1
=item Using References
d4603 1
a4603 1
=item Symbolic references
d4605 1
a4605 1
=item Not-so-symbolic references
d4607 1
a4607 1
=item Pseudo-hashes: Using an array as a hash
d4609 1
a4609 1
=item Function Templates
d4611 1
a4611 1
=back
d4613 1
a4613 1
=item WARNING
d4615 1
a4615 1
=item SEE ALSO
d4617 1
a4617 1
=back
d4619 1
a4619 1
=head2 perlreftut - Mark's very short tutorial about references
d4621 1
a4621 1
=over
d4623 1
a4623 1
=item DESCRIPTION
d4625 1
a4625 1
=item Who Needs Complicated Data Structures?
d4627 1
a4627 1
=item The Solution
d4629 1
a4629 1
=item Syntax
d4631 1
a4631 1
=over
d4633 1
a4633 1
=item Making References
d4635 1
a4635 1
=item Using References
d4637 1
a4637 1
=back
d4639 1
a4639 1
=item An Example
d4641 1
a4641 1
=item Arrow Rule
d4643 1
a4643 1
=item Solution
d4645 1
a4645 1
=item The Rest
d4647 1
a4647 1
=item Summary
d4649 1
a4649 1
=item Credits
d4651 1
a4651 1
=over
d4653 1
a4653 1
=item Distribution Conditions
d4655 1
a4655 1
=back
d4657 1
a4657 1
=back
d4659 1
a4659 1
=head2 perldsc - Perl Data Structures Cookbook
d4661 1
a4661 1
=over
d4663 1
a4663 1
=item DESCRIPTION
d4665 1
a4665 2
arrays of arrays, hashes of arrays, arrays of hashes, hashes of hashes,
more elaborate constructs
d4667 1
a4667 1
=item REFERENCES
d4669 1
a4669 1
=item COMMON MISTAKES
d4671 1
a4671 1
=item CAVEAT ON PRECEDENCE
d4673 1
a4673 1
=item WHY YOU SHOULD ALWAYS C<use strict>
d4675 1
a4675 1
=item DEBUGGING
d4677 1
a4677 1
=item CODE EXAMPLES
d4679 1
a4679 1
=item ARRAYS OF ARRAYS
d4681 1
a4681 1
=over
d4683 1
a4683 1
=item Declaration of a ARRAY OF ARRAYS
d4685 1
a4685 1
=item Generation of a ARRAY OF ARRAYS
d4687 1
a4687 1
=item Access and Printing of a ARRAY OF ARRAYS
d4689 50
a4738 1
=back
d4740 1
a4740 1
=item HASHES OF ARRAYS
d4742 1
a4742 1
=over
d4744 1
a4744 1
=item Declaration of a HASH OF ARRAYS
d4746 1
a4746 1
=item Generation of a HASH OF ARRAYS
d4748 11
a4758 1
=item Access and Printing of a HASH OF ARRAYS
d4760 1
a4760 1
=back
d4762 1
a4762 1
=item ARRAYS OF HASHES
d4764 1
a4764 1
=over
d4766 1
a4766 1
=item Declaration of a ARRAY OF HASHES
d4768 1
a4768 3
=item Generation of a ARRAY OF HASHES

=item Access and Printing of a ARRAY OF HASHES
d4772 1
a4772 1
=item HASHES OF HASHES
d4774 1
a4774 1
=over
d4776 1
a4776 1
=item Declaration of a HASH OF HASHES
d4778 1
a4778 1
=item Generation of a HASH OF HASHES
d4780 2
a4781 1
=item Access and Printing of a HASH OF HASHES
d4783 1
a4783 1
=back
d4785 1
a4785 1
=item MORE ELABORATE RECORDS
d4787 1
a4787 1
=over
d4789 1
a4789 1
=item Declaration of MORE ELABORATE RECORDS
d4791 3
a4793 3
=item Declaration of a HASH OF COMPLEX RECORDS

=item Generation of a HASH OF COMPLEX RECORDS
d4797 1
a4797 1
=item Database Ties
d4799 4
a4802 1
=item SEE ALSO
d4804 1
a4804 17
=item AUTHOR

=back

=head2 perllol - Manipulating Arrays of Arrays in Perl

=over

=item DESCRIPTION

=item Declaration and Access of Arrays of Arrays

=item Growing Your Own

=item Access and Printing

=item Slices
d4808 1
a4808 1
=item AUTHOR
d4812 1
a4812 1
=head2 perlboot - Beginner's Object-Oriented Tutorial
d4814 1
a4814 1
=over
d4818 1
a4818 1
=over
d4820 1
a4820 3
=item If we could talk to the animals...

=item Introducing the method invocation arrow
d4822 1
a4822 1
=item Invoking a barnyard
d4824 1
a4824 1
=item The extra parameter of method invocation
d4826 1
a4826 1
=item Calling a second method to simplify things
d4828 1
a4828 1
=item Inheriting the windpipes
d4830 1
a4830 1
=item A few notes about @@ISA
d4832 1
a4832 1
=item Overriding the methods
d4834 1
a4834 1
=item Starting the search from a different place
d4836 1
a4836 1
=item The SUPER way of doing things
d4838 1
a4838 1
=item Where we're at so far...
d4840 1
a4840 1
=item A horse is a horse, of course of course -- or is it?
d4842 1
a4842 1
=item Invoking an instance method
d4844 1
a4844 1
=item Accessing the instance data
d4846 1
a4846 1
=item How to build a horse
d4848 1
a4848 1
=item Inheriting the constructor
d4850 1
a4850 1
=item Making a method work with either classes or instances
d4852 3
a4854 1
=item Adding parameters to a method
d4856 1
a4856 1
=item More interesting instances
d4858 1
a4858 1
=item A horse of a different color
d4860 1
a4860 1
=item Summary
d4862 1
a4862 1
=back
d4864 1
a4864 1
=item SEE ALSO
d4866 1
a4866 1
=item COPYRIGHT
d4868 1
a4868 1
=back
d4870 1
a4870 1
=head2 perltoot - Tom's object-oriented tutorial for perl
d4872 1
a4872 1
=over
d4874 1
a4874 1
=item DESCRIPTION
d4876 1
a4876 1
=item Creating a Class
d4878 1
a4878 1
=over
d4880 1
a4880 1
=item Object Representation
d4882 1
a4882 1
=item Class Interface
d4884 1
a4884 1
=item Constructors and Instance Methods
d4886 1
a4886 1
=item Planning for the Future: Better Constructors
d4888 1
a4888 1
=item Destructors
d4890 1
a4890 1
=item Other Object Methods
d4892 1
a4892 1
=back
d4894 1
a4894 1
=item Class Data
d4896 1
a4896 1
=over
d4898 1
a4898 1
=item Accessing Class Data
d4900 1
a4900 1
=item Debugging Methods
d4902 1
a4902 1
=item Class Destructors
d4904 1
a4904 1
=item Documenting the Interface
d4906 1
a4906 1
=back
d4908 1
a4908 1
=item Aggregation
d4910 1
a4910 1
=item Inheritance
d4912 1
a4912 1
=over
d4914 1
a4914 1
=item Overridden Methods
d4916 1
a4916 1
=item Multiple Inheritance
d4918 1
a4918 1
=item UNIVERSAL: The Root of All Objects
d4922 1
a4922 1
=item Alternate Object Representations
d4924 1
a4924 1
=over
d4926 1
a4926 1
=item Arrays as Objects
d4928 1
a4928 1
=item Closures as Objects
d4932 1
a4932 1
=item AUTOLOAD: Proxy Methods
d4934 1
a4934 1
=over
d4936 1
a4936 1
=item Autoloaded Data Methods
d4938 3
a4940 1
=item Inherited Autoloaded Data Methods
d4942 1
a4942 1
=back
d4944 2
a4945 1
=item Metaclassical Tools
d4947 1
a4947 1
=over
d4949 1
a4949 1
=item Class::Struct
d4951 1
a4951 1
=item Data Members as Variables
d4953 1
a4953 1
=item NOTES
d4955 17
a4971 1
=item Object Terminology
d4973 1
a4973 1
=back
d4975 2
a4976 1
=item SEE ALSO
d4978 1
a4978 1
=item AUTHOR AND COPYRIGHT
d4980 1
a4980 1
=item COPYRIGHT
d4982 1
a4982 1
=over
d4984 1
a4984 3
=item Acknowledgments

=back
d4988 1
a4988 1
=head2 perltootc - Tom's OO Tutorial for Class Data in Perl
d4990 1
a4990 1
=over
d4994 1
a4994 1
=item Class Data as Package Variables
d4996 1
a4996 1
=over
d4998 1
a4998 1
=item Putting All Your Eggs in One Basket
d5000 1
a5000 1
=item Inheritance Concerns
d5002 1
a5002 1
=item The Eponymous Meta-Object
d5004 1
a5004 1
=item Indirect References to Class Data
d5006 1
a5006 1
=item Monadic Classes
d5008 1
a5008 1
=item Translucent Attributes
d5010 1
a5010 1
=back
d5012 1
a5012 1
=item Class Data as Lexical Variables
d5014 1
a5014 1
=over
d5016 1
a5016 1
=item Privacy and Responsibility 
d5018 1
a5018 1
=item File-Scoped Lexicals
d5020 1
a5020 1
=item More Inheritance Concerns
d5022 1
a5022 1
=item Locking the Door and Throwing Away the Key
d5024 1
a5024 1
=item Translucency Revisited
d5026 1
a5026 1
=back
d5028 1
a5028 1
=item NOTES
d5030 1
a5030 1
=item SEE ALSO
d5032 2
a5033 1
=item AUTHOR AND COPYRIGHT
d5035 1
a5035 1
=item ACKNOWLEDGEMENTS
d5037 1
a5037 1
=item HISTORY
d5039 1
a5039 1
=back
d5041 1
a5041 1
=head2 perlobj - Perl objects
d5043 1
a5043 1
=over
d5045 1
a5045 1
=item DESCRIPTION
d5047 1
a5047 1
=over
d5049 1
a5049 1
=item An Object is Simply a Reference
d5051 1
a5051 1
=item A Class is Simply a Package
d5053 1
a5053 1
=item A Method is Simply a Subroutine
d5055 1
a5055 1
=item Method Invocation
d5057 5
a5061 1
=item WARNING
d5063 1
a5063 1
=item Default UNIVERSAL methods
d5067 1
a5067 1
=item Destructors
d5069 2
a5070 1
=item Summary
d5072 1
a5072 1
=item Two-Phased Garbage Collection
d5074 1
a5074 1
=back
d5076 1
a5076 1
=item SEE ALSO
d5080 1
a5080 1
=head2 perltie - how to hide an object class in a simple variable
d5082 1
a5082 1
=over
d5084 1
a5084 20
=item SYNOPSIS

=item DESCRIPTION

=over

=item Tying Scalars

TIESCALAR classname, LIST, FETCH this, STORE this, value, DESTROY this

=item Tying Arrays

TIEARRAY classname, LIST, FETCH this, index, STORE this, index, value,
DESTROY this

=item Tying Hashes

USER, HOME, CLOBBER, LIST, TIEHASH classname, LIST, FETCH this, key, STORE
this, key, value, DELETE this, key, CLEAR this, EXISTS this, key, FIRSTKEY
this, NEXTKEY this, lastkey, DESTROY this
d5086 1
a5086 1
=item Tying FileHandles
d5088 1
a5088 2
TIEHANDLE classname, LIST, WRITE this, LIST, PRINT this, LIST, PRINTF this,
LIST, READ this, LIST, READLINE this, GETC this, CLOSE this, DESTROY this
d5090 1
a5090 1
=item The C<untie> Gotcha
d5094 1
a5094 1
=item SEE ALSO
d5096 2
a5097 1
=item BUGS
d5099 1
a5099 1
=item AUTHOR
d5101 1
a5101 9
=back

=head2 perlbot - Bag'o Object Tricks (the BOT)

=over

=item DESCRIPTION

=item OO SCALING TIPS
d5103 1
a5103 1
=item INSTANCE VARIABLES
d5105 1
a5105 1
=item SCALAR INSTANCE VARIABLES
d5107 1
a5107 1
=item INSTANCE VARIABLE INHERITANCE
d5109 1
a5109 1
=item OBJECT RELATIONSHIPS
d5111 1
a5111 1
=item OVERRIDING SUPERCLASS METHODS
d5113 1
a5113 1
=item USING RELATIONSHIP WITH SDBM
d5115 1
a5115 1
=item THINKING OF CODE REUSE
d5117 1
a5117 1
=item CLASS CONTEXT AND THE OBJECT
d5119 1
a5119 1
=item INHERITING A CONSTRUCTOR
d5121 1
a5121 1
=item DELEGATION
d5125 1
a5125 4
=head2 perlipc - Perl interprocess communication (signals, fifos, pipes,
safe subprocesses, sockets, and semaphores)

=over
d5127 1
a5127 1
=item DESCRIPTION
d5129 1
a5129 1
=item Signals
d5131 1
a5131 1
=item Named Pipes
d5133 1
a5133 1
=over
d5135 1
a5135 1
=item WARNING
d5139 37
a5175 1
=item Using open() for IPC
d5177 1
a5177 1
=over
d5179 1
a5179 1
=item Filehandles
d5181 1
a5181 9
=item Background Processes

=item Complete Dissociation of Child from Parent

=item Safe Pipe Opens

=item Bidirectional Communication with Another Process

=item Bidirectional Communication with Yourself
d5185 1
a5185 1
=item Sockets: Client/Server Communication
d5187 1
a5187 1
=over
d5189 1
a5189 9
=item Internet Line Terminators

=item Internet TCP Clients and Servers

=item Unix-Domain TCP Clients and Servers

=back

=item TCP Clients with IO::Socket
d5191 1
a5191 1
=over
d5193 1
a5193 1
=item A Simple Client
d5195 1
a5195 1
C<Proto>, C<PeerAddr>, C<PeerPort>
d5197 1
a5197 1
=item A Webget Client
d5199 1
a5199 1
=item Interactive Client with IO::Socket
d5201 1
a5201 1
=back
d5203 1
a5203 1
=item TCP Servers with IO::Socket
d5205 1
a5205 1
Proto, LocalPort, Listen, Reuse
d5207 1
a5207 1
=item UDP: Message Passing
d5209 1
a5209 1
=item SysV IPC
d5211 1
a5211 1
=item NOTES
d5213 1
a5213 1
=item BUGS
d5217 1
a5217 1
=item SEE ALSO
d5221 1
a5221 1
=head2 perldbmfilter - Perl DBM Filters
d5223 1
a5223 1
=over
d5227 1
a5227 1
=item DESCRIPTION
d5229 1
a5229 2
B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>
d5231 1
a5231 3
=over

=item The Filter
d5233 1
a5233 1
=item An Example -- the NULL termination problem.
d5235 1
a5235 1
=item Another Example -- Key is a C int.
d5237 1
a5237 1
=back
d5239 1
a5239 1
=item SEE ALSO
d5241 1
a5241 1
=item AUTHOR
d5245 1
a5245 1
=head2 perldebug - Perl debugging
d5247 1
a5247 1
=over
d5249 1
a5249 1
=item DESCRIPTION
d5251 1
a5251 1
=item The Perl Debugger
d5253 1
a5253 1
=over
d5255 1
a5255 1
=item Debugger Commands
d5257 1
a5257 9
h [command], p expr, x expr, V [pkg [vars]], X [vars], T, s [expr], n
[expr], r, <CR>, c [line|sub], l, l min+incr, l min-max, l line, l subname,
-, w [line], f filename, /pattern/, ?pattern?, L, S [[!]regex], t, t expr,
b [line] [condition], b subname [condition], b postpone subname
[condition], b load filename, b compile subname, d [line], D, a [line]
command, a [line], A, W expr, W, O booloption .., O anyoption? .., O
option=value .., < ?, < [ command ], << command, > ?, > command, >>
command, { ?, { [ command ], {{ command, ! number, ! -number, ! pattern, !!
cmd, H -number, q or ^D, R, |dbcmd, ||dbcmd, command, m expr, man [manpage]
d5259 1
a5259 1
=item Configurable Options
d5261 1
a5261 6
C<recallCommand>, C<ShellBang>, C<pager>, C<tkRunning>, C<signalLevel>,
C<warnLevel>, C<dieLevel>, C<AutoTrace>, C<LineInfo>, C<inhibit_exit>,
C<PrintRet>, C<ornaments>, C<frame>, C<maxTraceLen>, C<arrayDepth>,
C<hashDepth>, C<compactDump>, C<veryCompact>, C<globPrint>, C<DumpDBFiles>,
C<DumpPackages>, C<DumpReused>, C<quote>, C<HighBit>, C<undefPrint>,
C<UsageOnly>, C<TTY>, C<noTTY>, C<ReadLine>, C<NonStop>
d5263 1
a5263 1
=item Debugger input/output
d5265 1
a5265 2
Prompt, Multiline commands, Stack backtrace, Line Listing Format, Frame
listing
d5267 1
a5267 1
=item Debugging compile-time statements
d5269 1
a5269 1
=item Debugger Customization
d5271 1
a5271 1
=item Readline Support
d5273 1
a5273 1
=item Editor Support for Debugging
d5275 1
a5275 1
=item The Perl Profiler
d5279 1
a5279 3
=item Debugging regular expressions

=item Debugging memory usage
a5282 2
=item BUGS

d5285 1
a5285 1
=head2 perlnumber - semantics of numbers and numeric operations in Perl
d5287 1
a5287 1
=over
d5293 1
a5293 10
=item Storing numbers

=item Numeric operators and numeric conversions

=item Flavors of Perl numeric operations

Arithmetic operators except, C<no integer>, Arithmetic operators except,
C<use integer>, Bitwise operators, C<no integer>, Bitwise operators, C<use
integer>, Operators which expect an integer, Operators which expect a
string
d5295 1
a5295 1
=item AUTHOR
d5297 1
a5297 1
=item SEE ALSO
d5299 1
a5299 1
=back
d5301 1
a5301 1
=head2 perldebguts - Guts of Perl debugging 
d5303 1
a5303 1
=over
d5305 1
a5305 1
=item DESCRIPTION
d5307 1
a5307 1
=item Debugger Internals
d5309 1
a5309 1
=over
d5311 1
a5311 1
=item Writing Your Own Debugger
d5315 1
a5315 1
=item Frame Listing Output Examples
d5317 1
a5317 1
=item Debugging regular expressions
d5319 1
a5319 1
=over
d5321 1
a5321 1
=item Compile-time output
d5323 1
a5323 4
C<anchored> I<STRING> C<at> I<POS>, C<floating> I<STRING> C<at>
I<POS1..POS2>, C<matching floating/anchored>, C<minlen>, C<stclass>
I<TYPE>, C<noscan>, C<isall>, C<GPOS>, C<plus>, C<implicit>, C<with eval>,
C<anchored(TYPE)>
d5325 1
a5325 3
=item Types of nodes

=item Run-time output
d5329 1
a5329 3
=item Debugging Perl memory usage

=over
d5331 1
a5331 1
=item Using C<$ENV{PERL_DEBUG_MSTATS}>
d5333 1
a5333 3
C<buckets SMALLEST(APPROX)..GREATEST(APPROX)>, Free/Used, C<Total sbrk():
SBRKed/SBRKs:CONTINUOUS>, C<pad: 0>, C<heads: 2192>, C<chain: 0>, C<tail:
6144>
d5335 1
a5335 1
=item Example of using B<-DL> switch
d5337 1
a5337 1
C<717>, C<002>, C<054>, C<602>, C<702>, C<704>
d5339 1
a5339 1
=item B<-DL> details
d5341 1
a5341 1
C<!!!>, C<!!>, C<!>
d5343 1
a5343 1
=item Limitations of B<-DL> statistics
d5347 1
a5347 3
=item SEE ALSO

=back
d5349 1
a5349 1
=head2 perldiag - various Perl diagnostics
d5351 1
a5351 1
=over
d5353 1
a5353 1
=item DESCRIPTION
d5355 2
a5356 1
=back
d5358 1
a5358 1
=head2 perlsec - Perl security
d5360 2
a5361 1
=over
d5363 1
a5363 1
=item DESCRIPTION
d5365 1
a5365 1
=over
d5367 1
a5367 1
=item Laundering and Detecting Tainted Data
d5369 1
a5369 1
=item Switches On the "#!" Line
d5371 1
a5371 1
=item Cleaning Up Your Path
d5373 1
a5373 1
=item Security Bugs
d5375 1
a5375 1
=item Protecting Your Programs
d5379 1
a5379 1
=item SEE ALSO
d5381 1
a5381 1
=back
d5383 1
a5383 1
=head2 perltrap - Perl traps for the unwary
d5385 1
a5385 1
=over
d5387 1
a5387 1
=item DESCRIPTION
d5389 1
a5389 1
=over
d5391 1
a5391 1
=item Awk Traps
d5393 1
a5393 1
=item C Traps
d5395 1
a5395 1
=item Sed Traps
d5397 1
a5397 1
=item Shell Traps
d5399 1
a5399 1
=item Perl Traps
d5401 1
a5401 1
=item Perl4 to Perl5 Traps
d5403 2
a5404 4
Discontinuance, Deprecation, and BugFix traps, Parsing Traps, Numerical
Traps, General data type traps, Context Traps - scalar, list contexts,
Precedence Traps, General Regular Expression Traps using s///, etc,
Subroutine, Signal, Sorting Traps, OS Traps, DBM Traps, Unclassified Traps
d5406 1
a5406 1
=item Discontinuance, Deprecation, and BugFix traps
d5408 1
a5408 3
Discontinuance, Deprecation, BugFix, Discontinuance, Discontinuance,
Discontinuance, BugFix, Discontinuance, Discontinuance, BugFix,
Discontinuance, Deprecation, Discontinuance
d5410 1
a5410 1
=item Parsing Traps
d5412 1
a5412 1
Parsing, Parsing, Parsing, Parsing
d5414 1
a5414 1
=item Numerical Traps
d5416 1
a5416 1
Numerical, Numerical, Numerical, Bitwise string ops
d5418 1
a5418 1
=item General data type traps
d5420 1
a5420 2
(Arrays), (Arrays), (Hashes), (Globs), (Globs), (Scalar String),
(Constants), (Scalars), (Variable Suicide)
d5422 1
a5422 1
=item Context Traps - scalar, list contexts
d5424 1
a5424 1
(list context), (scalar context), (scalar context), (list, builtin)
d5426 1
a5426 1
=item Precedence Traps
d5428 1
a5428 2
Precedence, Precedence, Precedence, Precedence, Precedence, Precedence,
Precedence
d5430 1
a5430 1
=item General Regular Expression Traps using s///, etc.
d5432 1
a5432 3
Regular Expression, Regular Expression, Regular Expression, Regular
Expression, Regular Expression, Regular Expression, Regular Expression,
Regular Expression
d5434 1
a5434 1
=item Subroutine, Signal, Sorting Traps
d5436 1
a5436 1
(Signals), (Sort Subroutine), warn() won't let you specify a filehandle
d5438 1
a5438 1
=item OS Traps
d5440 1
a5440 1
(SysV), (SysV)
d5442 1
a5442 1
=item Interpolation Traps
d5444 1
a5444 2
Interpolation, Interpolation, Interpolation, Interpolation, Interpolation,
Interpolation, Interpolation, Interpolation, Interpolation
d5446 1
a5446 1
=item DBM Traps
d5448 1
a5448 1
DBM, DBM
d5450 1
a5450 1
=item Unclassified Traps
d5452 1
a5452 2
C<require>/C<do> trap using returned value, C<split> on empty string with
LIMIT specified
d5454 1
a5454 1
=back
d5458 1
a5458 1
=head2 perlport - Writing portable Perl
d5460 1
a5460 1
=over
d5462 1
a5462 1
=item DESCRIPTION
d5464 1
a5464 2
Not all Perl programs have to be portable, Nearly all of Perl already I<is>
portable
d5466 1
a5466 1
=item ISSUES
d5468 1
a5468 1
=over
d5470 1
a5470 1
=item Newlines
d5472 1
a5472 1
=item Numbers endianness and Width
d5474 1
a5474 1
=item Files and Filesystems
d5476 1
a5476 1
=item System Interaction
d5478 1
a5478 1
=item Interprocess Communication (IPC)
d5480 1
a5480 1
=item External Subroutines (XS)
d5482 1
a5482 1
=item Standard Modules
d5484 1
a5484 1
=item Time and Date
d5486 1
a5486 1
=item Character sets and character encoding
d5488 1
a5488 1
=item Internationalisation
d5490 1
a5490 1
=item System Resources
d5492 1
a5492 1
=item Security
d5494 1
a5494 1
=item Style
d5498 2
a5499 1
=item CPAN Testers
d5501 1
a5501 2
Mailing list: cpan-testers@@perl.org, Testing results:
http://testers.cpan.org/
d5503 1
a5503 1
=item PLATFORMS
d5505 1
a5505 1
=over
d5507 1
a5507 1
=item Unix
d5509 1
a5509 1
=item DOS and Derivatives
d5511 1
a5511 1
Build instructions for OS/2, L<perlos2>
d5513 1
a5513 1
=item S<Mac OS>
d5515 1
a5515 1
=item VMS
d5517 1
a5517 1
=item VOS
d5519 1
a5519 1
=item EBCDIC Platforms
d5521 1
a5521 1
=item Acorn RISC OS
d5523 1
a5523 1
=item Other perls
d5525 1
a5525 1
=back
d5527 1
a5527 1
=item FUNCTION IMPLEMENTATIONS
d5529 1
a5529 1
=over
d5531 1
a5531 1
=item Alphabetical Listing of Perl Functions
d5533 1
a5533 25
-I<X> FILEHANDLE, -I<X> EXPR, -I<X>, alarm SECONDS, alarm, binmode
FILEHANDLE, chmod LIST, chown LIST, chroot FILENAME, chroot, crypt
PLAINTEXT,SALT, dbmclose HASH, dbmopen HASH,DBNAME,MODE, dump LABEL, exec
LIST, fcntl FILEHANDLE,FUNCTION,SCALAR, flock FILEHANDLE,OPERATION, fork,
getlogin, getpgrp PID, getppid, getpriority WHICH,WHO, getpwnam NAME,
getgrnam NAME, getnetbyname NAME, getpwuid UID, getgrgid GID, getnetbyaddr
ADDR,ADDRTYPE, getprotobynumber NUMBER, getservbyport PORT,PROTO, getpwent,
getgrent, gethostent, getnetent, getprotoent, getservent, setpwent,
setgrent, sethostent STAYOPEN, setnetent STAYOPEN, setprotoent STAYOPEN,
setservent STAYOPEN, endpwent, endgrent, endhostent, endnetent,
endprotoent, endservent, getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob,
ioctl FILEHANDLE,FUNCTION,SCALAR, kill SIGNAL, LIST, link OLDFILE,NEWFILE,
lstat FILEHANDLE, lstat EXPR, lstat, msgctl ID,CMD,ARG, msgget KEY,FLAGS,
msgsnd ID,MSG,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, open FILEHANDLE,EXPR,
open FILEHANDLE, pipe READHANDLE,WRITEHANDLE, readlink EXPR, readlink,
select RBITS,WBITS,EBITS,TIMEOUT, semctl ID,SEMNUM,CMD,ARG, semget
KEY,NSEMS,FLAGS, semop KEY,OPSTRING, setgrent, setpgrp PID,PGRP,
setpriority WHICH,WHO,PRIORITY, setpwent, setsockopt
SOCKET,LEVEL,OPTNAME,OPTVAL, shmctl ID,CMD,ARG, shmget KEY,SIZE,FLAGS,
shmread ID,VAR,POS,SIZE, shmwrite ID,STRING,POS,SIZE, socketpair
SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, stat FILEHANDLE, stat EXPR, stat,
symlink OLDFILE,NEWFILE, syscall LIST, sysopen
FILEHANDLE,FILENAME,MODE,PERMS, system LIST, times, truncate
FILEHANDLE,LENGTH, truncate EXPR,LENGTH, umask EXPR, umask, utime LIST,
wait, waitpid PID,FLAGS
d5537 1
a5537 1
=item CHANGES
d5539 1
a5539 14
v1.47, 22 March 2000, v1.46, 12 February 2000, v1.45, 20 December 1999,
v1.44, 19 July 1999, v1.43, 24 May 1999, v1.42, 22 May 1999, v1.41, 19 May
1999, v1.40, 11 April 1999, v1.39, 11 February 1999, v1.38, 31 December
1998, v1.37, 19 December 1998, v1.36, 9 September 1998, v1.35, 13 August
1998, v1.33, 06 August 1998, v1.32, 05 August 1998, v1.30, 03 August 1998,
v1.23, 10 July 1998

=item Supported Platforms

=item SEE ALSO

=item AUTHORS / CONTRIBUTORS

=item VERSION
d5543 2
a5544 1
=head2 perlstyle - Perl style guide
d5546 1
a5546 1
=over
d5550 1
a5550 1
=back
d5552 1
a5552 1
=head2 perlpod - plain old documentation
d5554 1
a5554 1
=over
d5556 1
a5556 1
=item DESCRIPTION
d5558 1
a5558 1
=over
d5560 1
a5560 1
=item Verbatim Paragraph
d5562 1
a5562 1
=item Command Paragraph
d5564 1
a5564 1
=item Ordinary Block of Text
d5566 1
a5566 1
=item The Intent
d5568 1
a5568 1
=item Embedding Pods in Perl Modules
d5570 1
a5570 1
=item Common Pod Pitfalls
d5572 1
a5572 1
=back
d5574 1
a5574 1
=item SEE ALSO
d5578 2
d5582 1
a5582 1
=head2 perlbook - Perl book information
d5584 1
a5584 1
=over
d5586 1
a5586 1
=item DESCRIPTION
d5588 1
a5588 1
=back
d5590 1
a5590 1
=head2 perlembed - how to embed perl in your C program
d5592 1
a5592 1
=over
d5594 1
a5594 1
=item DESCRIPTION
d5596 1
a5596 1
=over
d5598 1
a5598 1
=item PREAMBLE
d5600 1
a5600 2
B<Use C from Perl?>, B<Use a Unix program from Perl?>, B<Use Perl from
Perl?>, B<Use C from C?>, B<Use Perl from C?>
d5602 1
a5602 1
=item ROADMAP
d5604 1
a5604 1
=item Compiling your C program
d5606 1
a5606 1
=item Adding a Perl interpreter to your C program
d5608 1
a5608 1
=item Calling a Perl subroutine from your C program
d5610 1
a5610 1
=item Evaluating a Perl statement from your C program
d5612 1
a5612 1
=item Performing Perl pattern matches and substitutions from your C program
d5614 1
a5614 1
=item Fiddling with the Perl stack from your C program
d5616 1
a5616 1
=item Maintaining a persistent interpreter
d5618 1
a5618 1
=item Maintaining multiple interpreter instances
d5620 1
a5620 2
=item Using Perl modules, which themselves use C libraries, from your C
program
d5622 1
a5622 1
=back
d5624 1
a5624 1
=item Embedding Perl under Win32
d5626 1
a5626 1
=item MORAL
d5628 1
a5628 1
=item AUTHOR
d5630 1
a5630 1
=item COPYRIGHT
d5634 1
a5634 1
=head2 perlapio - perl's IO abstraction interface.
d5636 1
a5636 1
=over
d5638 1
a5638 1
=item SYNOPSIS
d5640 1
a5640 1
=item DESCRIPTION
d5642 2
a5643 10
B<PerlIO *>, B<PerlIO_stdin()>, B<PerlIO_stdout()>, B<PerlIO_stderr()>,
B<PerlIO_open(path, mode)>, B<PerlIO_fdopen(fd,mode)>,
B<PerlIO_printf(f,fmt,...)>, B<PerlIO_vprintf(f,fmt,a)>,
B<PerlIO_stdoutf(fmt,...)>, B<PerlIO_read(f,buf,count)>,
B<PerlIO_write(f,buf,count)>, B<PerlIO_close(f)>, B<PerlIO_puts(f,s)>,
B<PerlIO_putc(f,c)>, B<PerlIO_ungetc(f,c)>, B<PerlIO_getc(f)>,
B<PerlIO_eof(f)>, B<PerlIO_error(f)>, B<PerlIO_fileno(f)>,
B<PerlIO_clearerr(f)>, B<PerlIO_flush(f)>, B<PerlIO_tell(f)>,
B<PerlIO_seek(f,o,w)>, B<PerlIO_getpos(f,p)>, B<PerlIO_setpos(f,p)>,
B<PerlIO_rewind(f)>, B<PerlIO_tmpfile()>
d5645 2
a5646 1
=over
d5648 1
a5648 1
=item Co-existence with stdio
d5650 1
a5650 6
B<PerlIO_importFILE(f,flags)>, B<PerlIO_exportFILE(f,flags)>,
B<PerlIO_findFILE(f)>, B<PerlIO_releaseFILE(p,f)>, B<PerlIO_setlinebuf(f)>,
B<PerlIO_has_cntptr(f)>, B<PerlIO_get_ptr(f)>, B<PerlIO_get_cnt(f)>,
B<PerlIO_canset_cnt(f)>, B<PerlIO_fast_gets(f)>,
B<PerlIO_set_ptrcnt(f,p,c)>, B<PerlIO_set_cnt(f,c)>, B<PerlIO_has_base(f)>,
B<PerlIO_get_base(f)>, B<PerlIO_get_bufsiz(f)>
d5654 3
a5656 1
=back
d5658 1
a5658 1
=head2 perlxs - XS language reference manual
d5660 1
a5660 1
=over
d5662 1
a5662 1
=item DESCRIPTION
d5664 5
a5668 1
=over
d5670 1
a5670 1
=item Introduction
d5672 1
a5672 1
=item On The Road
d5674 1
a5674 1
=item The Anatomy of an XSUB
d5676 1
a5676 1
=item The Argument Stack
d5678 1
a5678 1
=item The RETVAL Variable
d5680 1
a5680 1
=item The MODULE Keyword
d5682 1
a5682 1
=item The PACKAGE Keyword
d5684 1
a5684 1
=item The PREFIX Keyword
d5686 1
a5686 1
=item The OUTPUT: Keyword
d5688 1
a5688 1
=item The CODE: Keyword
d5690 1
a5690 1
=item The INIT: Keyword
d5692 1
a5692 1
=item The NO_INIT Keyword
d5694 1
a5694 1
=item Initializing Function Parameters
d5696 1
a5696 1
=item Default Parameter Values
d5698 1
a5698 1
=item The PREINIT: Keyword
d5700 1
a5700 1
=item The SCOPE: Keyword
d5702 1
a5702 1
=item The INPUT: Keyword
d5704 1
a5704 1
=item Variable-length Parameter Lists
d5706 1
a5706 1
=item The C_ARGS: Keyword
d5708 1
a5708 1
=item The PPCODE: Keyword
d5710 1
a5710 1
=item Returning Undef And Empty Lists
d5712 2
a5713 1
=item The REQUIRE: Keyword
d5715 1
a5715 1
=item The CLEANUP: Keyword
d5717 1
a5717 1
=item The BOOT: Keyword
d5719 1
a5719 1
=item The VERSIONCHECK: Keyword
d5721 1
a5721 1
=item The PROTOTYPES: Keyword
d5723 1
a5723 1
=item The PROTOTYPE: Keyword
d5725 1
a5725 1
=item The ALIAS: Keyword
d5727 1
a5727 1
=item The INTERFACE: Keyword
d5729 1
a5729 1
=item The INTERFACE_MACRO: Keyword
d5731 1
a5731 1
=item The INCLUDE: Keyword
d5733 1
a5733 1
=item The CASE: Keyword
d5735 1
a5735 1
=item The & Unary Operator
d5737 1
a5737 1
=item Inserting Comments and C Preprocessor Directives
d5739 1
a5739 1
=item Using XS With C++
d5741 1
a5741 1
=item Interface Strategy
d5743 1
a5743 1
=item Perl Objects And C Structures
d5745 1
a5745 1
=item The Typemap
d5747 1
a5747 1
=back
d5749 1
a5749 1
=item EXAMPLES
d5751 1
a5751 1
=item XS VERSION
d5753 1
a5753 1
=item AUTHOR
d5755 11
a5765 1
=back
d5767 1
a5767 1
=head2 perlxstut, perlXStut - Tutorial for writing XSUBs
d5769 1
a5769 1
=over
d5771 1
a5771 1
=item DESCRIPTION
d5773 1
a5773 1
=item SPECIAL NOTES
d5775 2
a5776 1
=over
d5778 1
a5778 1
=item make
d5780 1
a5780 1
=item Version caveat
d5782 1
a5782 1
=item Dynamic Loading versus Static Loading
d5786 1
a5786 1
=item TUTORIAL
d5788 1
a5788 1
=over
d5790 1
a5790 1
=item EXAMPLE 1
d5792 1
a5792 1
=item EXAMPLE 2
d5794 1
a5794 1
=item What has gone on?
d5796 1
a5796 1
=item Writing good test scripts
d5798 1
a5798 1
=item EXAMPLE 3
d5800 1
a5800 1
=item What's new here?
d5802 1
a5802 1
=item Input and Output Parameters
d5804 1
a5804 1
=item The XSUBPP Program
d5806 1
a5806 1
=item The TYPEMAP file
d5808 1
a5808 1
=item Warning about Output Arguments
d5810 1
a5810 1
=item EXAMPLE 4
d5812 1
a5812 1
=item What has happened here?
d5814 1
a5814 1
=item Anatomy of .xs file
d5816 1
a5816 1
=item Getting the fat out of XSUBs
d5818 1
a5818 1
=item More about XSUB arguments
d5820 1
a5820 1
=item The Argument Stack
d5822 1
a5822 1
=item Extending your Extension
d5824 1
a5824 1
=item Documenting your Extension
d5826 1
a5826 1
=item Installing your Extension
d5828 1
a5828 1
=item EXAMPLE 5
d5830 1
a5830 1
=item New Things in this Example
d5832 1
a5832 1
=item EXAMPLE 6 (Coming Soon)
d5834 1
a5834 1
=item EXAMPLE 7 (Coming Soon)
d5836 1
a5836 1
=item EXAMPLE 8 (Coming Soon)
d5838 1
a5838 1
=item EXAMPLE 9 (Coming Soon)
d5840 1
a5840 1
=item Troubleshooting these Examples
d5844 1
a5844 1
=item See also
d5846 1
a5846 1
=item Author
d5848 1
a5848 1
=over
d5850 1
a5850 1
=item Last Changed
d5854 1
a5854 1
=back
d5856 1
a5856 1
=head2 perlguts - Introduction to the Perl API
d5858 1
a5858 1
=over
d5862 5
a5866 1
=item Variables
d5868 1
a5868 1
=over
d5870 1
a5870 1
=item Datatypes
d5872 1
a5872 1
=item What is an "IV"?
d5874 1
a5874 1
=item Working with SVs
d5876 1
a5876 1
=item What's Really Stored in an SV?
d5878 1
a5878 1
=item Working with AVs
d5880 1
a5880 1
=item Working with HVs
d5882 1
a5882 1
=item Hash API Extensions
d5884 1
a5884 1
=item References
d5886 1
a5886 1
=item Blessed References and Class Objects
d5888 1
a5888 1
=item Creating New Variables
d5890 1
a5890 1
=item Reference Counts and Mortality
d5892 1
a5892 1
=item Stashes and Globs
d5894 1
a5894 1
=item Double-Typed SVs
d5896 1
a5896 1
=item Magic Variables
d5898 1
a5898 1
=item Assigning Magic
d5900 1
a5900 1
=item Magic Virtual Tables
d5902 1
a5902 1
=item Finding Magic
d5904 1
a5904 1
=item Understanding the Magic of Tied Hashes and Arrays
d5906 1
a5906 1
=item Localizing changes
d5908 1
a5908 9
C<SAVEINT(int i)>, C<SAVEIV(IV i)>, C<SAVEI32(I32 i)>, C<SAVELONG(long i)>,
C<SAVESPTR(s)>, C<SAVEPPTR(p)>, C<SAVEFREESV(SV *sv)>, C<SAVEFREEOP(OP
*op)>, C<SAVEFREEPV(p)>, C<SAVECLEARSV(SV *sv)>, C<SAVEDELETE(HV *hv, char
*key, I32 length)>, C<SAVEDESTRUCTOR(DESTRUCTORFUNC_NOCONTEXT_t f, void
*p)>, C<SAVEDESTRUCTOR_X(DESTRUCTORFUNC_t f, void *p)>, C<SAVESTACK_POS()>,
C<SV* save_scalar(GV *gv)>, C<AV* save_ary(GV *gv)>, C<HV* save_hash(GV
*gv)>, C<void save_item(SV *item)>, C<void save_list(SV **sarg, I32
maxsarg)>, C<SV* save_svref(SV **sptr)>, C<void save_aptr(AV **aptr)>,
C<void save_hptr(HV **hptr)>
d5912 9
a5920 1
=item Subroutines
d5922 1
a5922 1
=over
d5924 1
a5924 1
=item XSUBs and the Argument Stack
d5926 1
a5926 1
=item Calling Perl Routines from within C Programs
d5928 1
a5928 1
=item Memory Allocation
d5930 1
a5930 1
=item PerlIO
d5932 1
a5932 1
=item Putting a C value on Perl stack
d5934 1
a5934 1
=item Scratchpads
d5936 1
a5936 1
=item Scratchpads and recursion
d5940 7
a5946 1
=item Compiled code
d5948 1
a5948 1
=over
d5950 1
a5950 1
=item Code tree
d5952 1
a5952 1
=item Examining the tree
d5954 1
a5954 1
=item Compile pass 1: check routines
d5956 1
a5956 1
=item Compile pass 1a: constant folding
d5958 1
a5958 1
=item Compile pass 2: context propagation
d5960 1
a5960 1
=item Compile pass 3: peephole optimization
d5964 3
a5966 1
=item How multiple interpreters and concurrency are supported
d5968 1
a5968 1
=over
d5970 1
a5970 1
=item Background and PERL_IMPLICIT_CONTEXT
d5972 1
a5972 1
=item How do I use all this in extensions?
d5974 1
a5974 1
=item Future Plans and PERL_IMPLICIT_SYS
d5978 1
a5978 1
=item AUTHORS
d5980 1
a5980 1
=item SEE ALSO
d5984 3
a5986 1
=head2 perlcall - Perl calling conventions from C
d5988 1
a5988 1
=over
d5992 3
a5994 1
An Error Handler, An Event Driven Program
d5996 1
a5996 1
=item THE CALL_ FUNCTIONS
d5998 1
a5998 1
call_sv, call_pv, call_method, call_argv
d6000 6
a6005 1
=item FLAG VALUES
d6007 1
a6007 1
=over
d6009 1
a6009 1
=item  G_VOID
d6011 3
a6013 1
=item  G_SCALAR
d6015 1
a6015 1
=item G_ARRAY
d6017 1
a6017 1
=item G_DISCARD
d6019 1
a6019 1
=item G_NOARGS
d6021 1
a6021 1
=item G_EVAL
d6023 1
a6023 1
=item G_KEEPERR
d6025 1
a6025 1
=item Determining the Context
d6029 7
a6035 1
=item KNOWN PROBLEMS
d6037 1
a6037 1
=item EXAMPLES
d6039 1
a6039 1
=over
d6041 1
a6041 1
=item No Parameters, Nothing returned
d6043 1
a6043 1
=item Passing Parameters
d6045 1
a6045 1
=item Returning a Scalar
d6047 1
a6047 1
=item Returning a list of values
d6049 1
a6049 1
=item Returning a list in a scalar context
d6051 1
a6051 1
=item Returning Data from Perl via the parameter list
d6053 1
a6053 1
=item Using G_EVAL
d6055 1
a6055 1
=item Using G_KEEPERR
d6057 1
a6057 1
=item Using call_sv
d6059 1
a6059 1
=item Using call_argv
d6061 1
a6061 1
=item Using call_method
d6063 1
a6063 1
=item Using GIMME_V
d6065 1
a6065 1
=item Using Perl to dispose of temporaries
d6067 1
a6067 1
=item Strategies for storing Callback Context Information
d6069 1
a6069 3
1. Ignore the problem - Allow only 1 callback, 2. Create a sequence of
callbacks - hard wired limit, 3. Use a parameter to map to the Perl
callback
d6071 1
a6071 1
=item Alternate Stack Manipulation
d6073 1
a6073 1
=item Creating and calling an anonymous subroutine in C
d6077 1
a6077 1
=item SEE ALSO
d6079 4
a6082 1
=item AUTHOR
d6084 1
a6084 1
=item DATE
d6086 1
a6086 1
=back
d6088 1
a6088 1
=head2 perlcompile - Introduction to the Perl Compiler-Translator 
d6090 1
a6090 1
=over
d6092 1
a6092 1
=item DESCRIPTION
d6094 1
a6094 1
=over
d6096 1
a6096 1
=item Layout
d6098 1
a6098 1
B::Bytecode, B::C, B::CC, B::Lint, B::Deparse, B::Xref
d6102 1
a6102 1
=item Using The Back Ends
d6104 1
a6104 1
=over
d6106 1
a6106 1
=item The Cross Referencing Back End
d6108 1
a6108 1
i, &, s, r
d6110 1
a6110 1
=item The Decompiling Back End
d6112 1
a6112 1
=item The Lint Back End
d6114 1
a6114 1
=item The Simple C Back End
d6116 1
a6116 1
=item The Bytecode Back End
d6118 1
a6118 1
=item The Optimized C Back End
d6120 1
a6120 3
B, O, B::Asmdata, B::Assembler, B::Bblock, B::Bytecode, B::C, B::CC,
B::Debug, B::Deparse, B::Disassembler, B::Lint, B::Showlex, B::Stackobj,
B::Stash, B::Terse, B::Xref
d6124 1
a6124 1
=item KNOWN PROBLEMS
d6126 1
a6126 1
=item AUTHOR
d6128 1
a6128 1
=back
d6130 1
a6130 1
=head2 perlapi - autogenerated documentation for the perl public API
d6132 1
a6132 1
=over
d6134 1
a6134 1
=item DESCRIPTION
d6136 1
a6136 43
AvFILL, av_clear, av_extend, av_fetch, av_len, av_make, av_pop, av_push,
av_shift, av_store, av_undef, av_unshift, call_argv, call_method, call_pv,
call_sv, CLASS, Copy, croak, CvSTASH, dMARK, dORIGMARK, dSP, dXSARGS,
dXSI32, ENTER, eval_pv, eval_sv, EXTEND, fbm_compile, fbm_instr, FREETMPS,
get_av, get_cv, get_hv, get_sv, GIMME, GIMME_V, GvSV, gv_fetchmeth,
gv_fetchmethod, gv_fetchmethod_autoload, gv_stashpv, gv_stashsv, G_ARRAY,
G_DISCARD, G_EVAL, G_NOARGS, G_SCALAR, G_VOID, HEf_SVKEY, HeHASH, HeKEY,
HeKLEN, HePV, HeSVKEY, HeSVKEY_force, HeSVKEY_set, HeVAL, HvNAME, hv_clear,
hv_delete, hv_delete_ent, hv_exists, hv_exists_ent, hv_fetch, hv_fetch_ent,
hv_iterinit, hv_iterkey, hv_iterkeysv, hv_iternext, hv_iternextsv,
hv_iterval, hv_magic, hv_store, hv_store_ent, hv_undef, isALNUM, isALPHA,
isDIGIT, isLOWER, isSPACE, isUPPER, items, ix, LEAVE, looks_like_number,
MARK, mg_clear, mg_copy, mg_find, mg_free, mg_get, mg_length, mg_magical,
mg_set, Move, New, newAV, Newc, newCONSTSUB, newHV, newRV_inc, newRV_noinc,
NEWSV, newSViv, newSVnv, newSVpv, newSVpvf, newSVpvn, newSVrv, newSVsv,
newSVuv, newXS, newXSproto, Newz, Nullav, Nullch, Nullcv, Nullhv, Nullsv,
ORIGMARK, perl_alloc, perl_construct, perl_destruct, perl_free, perl_parse,
perl_run, PL_DBsingle, PL_DBsub, PL_DBtrace, PL_dowarn, PL_modglobal,
PL_na, PL_sv_no, PL_sv_undef, PL_sv_yes, POPi, POPl, POPn, POPp, POPs,
PUSHi, PUSHMARK, PUSHn, PUSHp, PUSHs, PUSHu, PUTBACK, Renew, Renewc,
require_pv, RETVAL, Safefree, savepv, savepvn, SAVETMPS, SP, SPAGAIN, ST,
strEQ, strGE, strGT, strLE, strLT, strNE, strnEQ, strnNE, StructCopy,
SvCUR, SvCUR_set, SvEND, SvGETMAGIC, SvGROW, SvIOK, SvIOKp, SvIOK_off,
SvIOK_on, SvIOK_only, SvIV, SvIVX, SvLEN, SvNIOK, SvNIOKp, SvNIOK_off,
SvNOK, SvNOKp, SvNOK_off, SvNOK_on, SvNOK_only, SvNV, SvNVX, SvOK, SvOOK,
SvPOK, SvPOKp, SvPOK_off, SvPOK_on, SvPOK_only, SvPV, SvPVX, SvPV_force,
SvPV_nolen, SvREFCNT, SvREFCNT_dec, SvREFCNT_inc, SvROK, SvROK_off,
SvROK_on, SvRV, SvSETMAGIC, SvSetSV, SvSetSV_nosteal, SvSTASH, SvTAINT,
SvTAINTED, SvTAINTED_off, SvTAINTED_on, SvTRUE, SvTYPE, svtype, SVt_IV,
SVt_NV, SVt_PV, SVt_PVAV, SVt_PVCV, SVt_PVHV, SVt_PVMG, SvUPGRADE, SvUV,
SvUVX, sv_2mortal, sv_bless, sv_catpv, sv_catpvf, sv_catpvf_mg, sv_catpvn,
sv_catpvn_mg, sv_catpv_mg, sv_catsv, sv_catsv_mg, sv_chop, sv_cmp, sv_dec,
sv_derived_from, sv_eq, sv_grow, sv_inc, sv_insert, sv_isa, sv_isobject,
sv_len, sv_magic, sv_mortalcopy, sv_newmortal, sv_setiv, sv_setiv_mg,
sv_setnv, sv_setnv_mg, sv_setpv, sv_setpvf, sv_setpvf_mg, sv_setpviv,
sv_setpviv_mg, sv_setpvn, sv_setpvn_mg, sv_setpv_mg, sv_setref_iv,
sv_setref_nv, sv_setref_pv, sv_setref_pvn, sv_setsv, sv_setsv_mg, sv_setuv,
sv_setuv_mg, sv_unref, sv_upgrade, sv_usepvn, sv_usepvn_mg, sv_vcatpvfn,
sv_vsetpvfn, THIS, toLOWER, toUPPER, warn, XPUSHi, XPUSHn, XPUSHp, XPUSHs,
XPUSHu, XS, XSRETURN, XSRETURN_EMPTY, XSRETURN_IV, XSRETURN_NO,
XSRETURN_NV, XSRETURN_PV, XSRETURN_UNDEF, XSRETURN_YES, XST_mIV, XST_mNO,
XST_mNV, XST_mPV, XST_mUNDEF, XST_mYES, XS_VERSION, XS_VERSION_BOOTCHECK,
Zero
d6138 1
a6138 1
=item AUTHORS
d6140 1
a6140 1
=item SEE ALSO
d6142 1
a6142 1
=back
d6144 1
a6144 2
=head2 perlintern - autogenerated documentation of purely B<internal> 
		 Perl functions
d6146 1
a6146 1
=over
d6150 1
a6150 5
=item AUTHORS

=item SEE ALSO

=back
d6152 1
a6152 1
=head2 perlhist - the Perl history records
d6154 1
a6154 1
=over
d6156 1
a6156 1
=item DESCRIPTION
d6158 1
a6158 1
=item INTRODUCTION
d6160 1
a6160 1
=item THE KEEPERS OF THE PUMPKIN
d6162 1
a6162 1
=over
d6164 3
a6166 1
=item PUMPKIN?
d6170 1
a6170 1
=item THE RECORDS
d6172 1
a6172 1
=over
d6174 3
a6176 1
=item SELECTED RELEASE SIZES
d6178 1
a6178 1
=item SELECTED PATCH SIZES
d6180 1
a6180 3
=back

=item THE KEEPERS OF THE RECORDS
d6188 1
a6188 1
=over
d6200 1
a6200 1
=over
d6210 1
a6210 1
=over
d6216 1
a6216 1
=over
d6236 1
a6236 1
=over
d6254 1
a6254 1
=over
d6266 1
a6266 1
=over
d6282 1
a6282 1
=over
d6296 1
a6296 1
=over
d6311 1
a6311 1
=over
d6324 1
a6324 1
=over
d6338 1
a6338 1
=over
d6359 1
a6359 1
=over
d6365 1
a6365 1
=over
d6385 1
a6385 1
=over
d6399 1
a6399 1
=over
d6405 1
a6405 1
=over
d6413 2
a6414 2
=head2 integer - Perl pragma to compute arithmetic in integer instead of
double
d6416 1
a6416 1
=over
d6426 1
a6426 1
=over
d6436 1
a6436 1
=over
d6442 1
a6442 1
=over
d6461 1
a6461 1
=over
d6471 1
a6471 1
=over
d6485 1
a6485 1
=over
d6497 1
a6497 1
=over
d6503 1
a6503 1
=over
d6532 1
a6532 1
=over
d6536 1
a6536 1
=item Fallback 
d6571 1
a6571 1
=over
d6587 3
d6596 1
a6596 1
=over
d6606 1
a6606 1
=over
d6614 1
a6614 1
=over
d6636 1
a6636 1
=over
d6648 1
a6648 1
=over
d6658 1
a6658 1
=over
d6670 1
a6670 1
=over
d6680 1
a6680 1
=over
d6686 5
a6690 2
use warnings::register, warnings::enabled([$category]),
warnings::warn([$category,] $message)
d6694 2
d6700 1
a6700 1
=over
d6706 1
a6706 1
=over
d6720 1
a6720 1
=over
d6726 1
a6726 1
=over
d6736 2
d6750 1
a6750 1
=over
d6758 1
a6758 1
=over
d6770 1
a6770 1
=over
d6778 1
a6778 1
=over
d6788 1
a6788 1
IV, IVX, needs64bits, packiv
d6800 1
a6800 1
PV
d6820 2
a6821 2
is_empty, NAME, STASH, SV, IO, FORM, AV, HV, EGV, CV, CVGEN, LINE, FILE,
FILEGV, GvREFCNT, FLAGS
d6903 1
a6903 1
=over
d6915 1
a6915 1
=over
d6921 1
a6921 1
=item AUTHOR
d6927 1
a6927 1
=over
d6939 1
a6939 1
=over
d6948 3
a6950 2
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-fstrip-syntax-tree>,
B<-On>, B<-D>, B<-Do>, B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-m>
d6956 1
a6956 1
=item AUTHOR
d6962 1
a6962 1
=over
d6983 1
a6983 1
=over
d7001 1
a7001 1
=over
d7017 39
d7058 1
a7058 1
=over
d7070 1
a7070 1
=over
d7079 1
a7079 1
B<T>, B<v>I<STRING>B<.>
d7083 1
a7083 1
=over
d7103 1
a7103 1
=over
d7115 1
a7115 1
=over
d7138 1
a7138 1
=over
d7154 1
a7154 1
=over
d7166 1
a7166 1
=over
d7176 2
d7180 1
a7180 1
=over
d7192 1
a7192 1
=over
d7210 1
a7210 1
=over
d7222 1
a7222 1
=over
d7228 1
a7228 1
=over
d7266 1
a7266 1
=over
d7280 1
a7280 1
=over
d7289 3
a7291 2
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-fstrip-syntax-tree>,
B<-On>, B<-D>, B<-Do>, B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-m>
d7297 1
a7297 1
=item AUTHOR
d7303 1
a7303 1
=over
d7311 1
a7311 1
=over
a7316 4
1. Use another name for the argument, if one is available.  Forexample,
-value is an alias for -values, 2. Change the capitalization, e.g. -Values,
3. Put quotes around the argument name, e.g. '-values'

d7352 2
a7353 2
-any, -compile, -nph, -newstyle_urls, -autoload, -no_debug,
-private_tempfiles
d7365 1
a7365 1
=over
d7382 1
a7382 1
(B<-query_string>)
d7390 1
a7390 1
=over
d7400 5
d7411 1
a7411 1
=over
d7463 1
a7463 3
B<Parameters:>, 3.The third option (-align, optional) is an alignment type,
and may be
TOP, BOTTOM or MIDDLE
d7484 1
a7484 1
=over
d7493 3
a7495 4
B<path_translated()>, B<remote_host()>, B<script_name()>Return the script
name as a partial URL, for self-refering
scripts, B<referer()>, B<auth_type ()>, B<server_name ()>, B<virtual_host
()>, B<server_software ()>, B<remote_user ()>, B<user_name ()>,
d7501 1
a7501 1
parameters in the B<header()> and B<redirect()>  statements:
d7505 1
a7505 1
multipart_init(), multipart_start(), multipart_end()
d7541 1
a7541 1
=over
d7560 1
a7560 1
=over
d7570 1
a7570 1
=over
d7576 2
d7588 1
a7588 1
=over
d7598 1
a7598 1
=over
d7622 1
a7622 1
=over
d7648 1
a7648 1
=over
d7654 1
a7654 1
=over
d7672 1
a7672 1
=over
d7680 1
a7680 1
-next_page, -last_page, -type, -delay, -cookie, -target, -expires
d7682 1
a7682 1
=over
d7702 1
a7702 1
=over
d7718 14
d7734 1
a7734 1
=over
d7740 1
a7740 1
=over
d7746 1
a7746 1
distribution, Signals
d7756 1
a7756 1
=item ProgrammerE<39>s interface
d7758 1
a7758 1
expand($type,@@things), Programming Examples
d7760 28
a7787 1
=item Methods in the four Classes
d7810 1
a7810 1
=over
d7826 4
d7832 8
d7844 2
d7852 1
a7852 1
=over
d7863 1
a7863 1
=over
d7875 1
a7875 1
=over
d7881 1
a7881 1
=over
d7893 1
a7893 1
=over
d7903 1
a7903 1
=over
d7909 1
a7909 1
=over
d7913 2
d7934 1
a7934 1
=over
d7948 1
a7948 1
=over
d7968 3
a7970 2
C<ccsymbols>, C<cf_by>, C<cf_email>, C<cf_time>, C<charsize>, C<chgrp>,
C<chmod>, C<chown>, C<clocktype>, C<comm>, C<compress>
d7980 5
a7984 5
C<d_access>, C<d_accessx>, C<d_alarm>, C<d_archlib>, C<d_atolf>,
C<d_atoll>, C<d_attribut>, C<d_bcmp>, C<d_bcopy>, C<d_bincompat5005>,
C<d_bsd>, C<d_bsdgetpgrp>, C<d_bsdsetpgrp>, C<d_bzero>, C<d_casti32>,
C<d_castneg>, C<d_charvspr>, C<d_chown>, C<d_chroot>, C<d_chsize>,
C<d_closedir>, C<d_const>, C<d_crypt>, C<d_csh>, C<d_cuserid>,
d7988 10
a7997 9
C<d_endsent>, C<d_endspent>, C<d_eofnblk>, C<d_eunice>, C<d_fchmod>,
C<d_fchown>, C<d_fcntl>, C<d_fd_macros>, C<d_fd_set>, C<d_fds_bits>,
C<d_fgetpos>, C<d_flexfnam>, C<d_flock>, C<d_fork>, C<d_fpathconf>,
C<d_fpos64_t>, C<d_fs_data_s>, C<d_fseeko>, C<d_fsetpos>, C<d_fstatfs>,
C<d_fstatvfs>, C<d_ftello>, C<d_ftime>, C<d_Gconvert>, C<d_getcwd>,
C<d_getfsstat>, C<d_getgrent>, C<d_getgrps>, C<d_gethbyaddr>,
C<d_gethbyname>, C<d_gethent>, C<d_gethname>, C<d_gethostprotos>,
C<d_getlogin>, C<d_getmnt>, C<d_getmntent>, C<d_getnbyaddr>,
C<d_getnbyname>, C<d_getnent>, C<d_getnetprotos>, C<d_getpbyname>,
d7999 25
a8023 23
C<d_getppid>, C<d_getprior>, C<d_getprotoprotos>, C<d_getpwent>,
C<d_getsbyname>, C<d_getsbyport>, C<d_getsent>, C<d_getservprotos>,
C<d_getspent>, C<d_getspnam>, C<d_gettimeod>, C<d_gnulibc>, C<d_grpasswd>,
C<d_hasmntopt>, C<d_htonl>, C<d_iconv>, C<d_index>, C<d_inetaton>,
C<d_int64_t>, C<d_isascii>, C<d_killpg>, C<d_lchown>, C<d_ldbl_dig>,
C<d_link>, C<d_locconv>, C<d_lockf>, C<d_longdbl>, C<d_longlong>,
C<d_lseekproto>, C<d_lstat>, C<d_madvise>, C<d_mblen>, C<d_mbstowcs>,
C<d_mbtowc>, C<d_memchr>, C<d_memcmp>, C<d_memcpy>, C<d_memmove>,
C<d_memset>, C<d_mkdir>, C<d_mkdtemp>, C<d_mkfifo>, C<d_mkstemp>,
C<d_mkstemps>, C<d_mktime>, C<d_mmap>, C<d_mprotect>, C<d_msg>,
C<d_msg_ctrunc>, C<d_msg_dontroute>, C<d_msg_oob>, C<d_msg_peek>,
C<d_msg_proxy>, C<d_msgctl>, C<d_msgget>, C<d_msgrcv>, C<d_msgsnd>,
C<d_msync>, C<d_munmap>, C<d_mymalloc>, C<d_nice>, C<d_nv_preserves_uv>,
C<d_off64_t>, C<d_old_pthread_create_joinable>, C<d_oldpthreads>,
C<d_oldsock>, C<d_open3>, C<d_pathconf>, C<d_pause>, C<d_phostname>,
C<d_pipe>, C<d_poll>, C<d_portable>, C<d_PRId64>, C<d_PRIeldbl>,
C<d_PRIEldbl>, C<d_PRIfldbl>, C<d_PRIFldbl>, C<d_PRIgldbl>, C<d_PRIGldbl>,
C<d_PRIi64>, C<d_PRIo64>, C<d_PRIu64>, C<d_PRIx64>, C<d_PRIX64>,
C<d_pthread_yield>, C<d_pwage>, C<d_pwchange>, C<d_pwclass>,
C<d_pwcomment>, C<d_pwexpire>, C<d_pwgecos>, C<d_pwpasswd>, C<d_pwquota>,
C<d_qgcvt>, C<d_quad>, C<d_readdir>, C<d_readlink>, C<d_rename>,
C<d_rewinddir>, C<d_rmdir>, C<d_safebcpy>, C<d_safemcpy>, C<d_sanemcmp>,
C<d_sched_yield>, C<d_scm_rights>, C<d_seekdir>, C<d_select>, C<d_sem>,
d8027 7
a8033 6
C<d_setpgid>, C<d_setpgrp2>, C<d_setpgrp>, C<d_setprior>, C<d_setpwent>,
C<d_setregid>, C<d_setresgid>, C<d_setresuid>, C<d_setreuid>, C<d_setrgid>,
C<d_setruid>, C<d_setsent>, C<d_setsid>, C<d_setspent>, C<d_setvbuf>,
C<d_sfio>, C<d_shm>, C<d_shmat>, C<d_shmatprototype>, C<d_shmctl>,
C<d_shmdt>, C<d_shmget>, C<d_sigaction>, C<d_sigsetjmp>, C<d_socket>,
C<d_socklen_t>, C<d_sockpair>, C<d_sqrtl>, C<d_statblks>,
d8035 2
a8036 1
C<d_stdio_ptr_lval>, C<d_stdio_stream_array>, C<d_stdiobase>,
d8039 3
a8041 3
C<d_strtoul>, C<d_strtoull>, C<d_strtouq>, C<d_strxfrm>, C<d_suidsafe>,
C<d_symlink>, C<d_syscall>, C<d_sysconf>, C<d_sysernlst>, C<d_syserrlst>,
C<d_system>, C<d_tcgetpgrp>, C<d_tcsetpgrp>, C<d_telldir>,
d8062 2
a8063 2
C<gccversion>, C<gidformat>, C<gidsign>, C<gidsize>, C<gidtype>,
C<glibpth>, C<grep>, C<groupcat>, C<groupstype>, C<gzip>
d8067 1
a8067 1
C<h_fcntl>, C<h_sysfile>, C<hint>, C<hostcat>, C<huge>
d8074 21
a8094 20
C<i_grp>, C<i_iconv>, C<i_ieeefp>, C<i_inttypes>, C<i_limits>, C<i_locale>,
C<i_machcthr>, C<i_malloc>, C<i_math>, C<i_memory>, C<i_mntent>, C<i_ndbm>,
C<i_netdb>, C<i_neterrno>, C<i_netinettcp>, C<i_niin>, C<i_poll>,
C<i_pthread>, C<i_pwd>, C<i_rpcsvcdbm>, C<i_sfio>, C<i_sgtty>, C<i_shadow>,
C<i_socks>, C<i_stdarg>, C<i_stddef>, C<i_stdlib>, C<i_string>,
C<i_sunmath>, C<i_sysaccess>, C<i_sysdir>, C<i_sysfile>, C<i_sysfilio>,
C<i_sysin>, C<i_sysioctl>, C<i_syslog>, C<i_sysmman>, C<i_sysmode>,
C<i_sysmount>, C<i_sysndir>, C<i_sysparam>, C<i_sysresrc>, C<i_syssecrt>,
C<i_sysselct>, C<i_syssockio>, C<i_sysstat>, C<i_sysstatfs>,
C<i_sysstatvfs>, C<i_systime>, C<i_systimek>, C<i_systimes>, C<i_systypes>,
C<i_sysuio>, C<i_sysun>, C<i_sysutsname>, C<i_sysvfs>, C<i_syswait>,
C<i_termio>, C<i_termios>, C<i_time>, C<i_unistd>, C<i_ustat>, C<i_utime>,
C<i_values>, C<i_varargs>, C<i_varhdr>, C<i_vfork>,
C<ignore_versioned_solibs>, C<inc_version_list>, C<inc_version_list_init>,
C<incpath>, C<inews>, C<installarchlib>, C<installbin>, C<installman1dir>,
C<installman3dir>, C<installprefix>, C<installprefixexp>,
C<installprivlib>, C<installscript>, C<installsitearch>, C<installsitebin>,
C<installsitelib>, C<installstyle>, C<installusrbinperl>,
C<installvendorarch>, C<installvendorbin>, C<installvendorlib>, C<intsize>,
C<ivdformat>, C<ivsize>, C<ivtype>
d8102 6
a8107 6
C<large>, C<ld>, C<lddlflags>, C<ldflags>, C<ldlibpthname>, C<less>,
C<lib_ext>, C<libc>, C<libperl>, C<libpth>, C<libs>, C<libsdirs>,
C<libsfiles>, C<libsfound>, C<libspath>, C<libswanted>, C<line>, C<lint>,
C<lkflags>, C<ln>, C<lns>, C<locincpth>, C<loclibpth>, C<longdblsize>,
C<longlongsize>, C<longsize>, C<lp>, C<lpr>, C<ls>, C<lseeksize>,
C<lseektype>
d8117 2
a8118 3
C<Mcc>, C<medium>, C<mips_type>, C<mkdir>, C<mmaptype>, C<models>,
C<modetype>, C<more>, C<multiarch>, C<mv>, C<myarchname>, C<mydomain>,
C<myhostname>, C<myuname>
d8122 4
a8125 3
C<n>, C<netdb_hlen_type>, C<netdb_host_type>, C<netdb_name_type>,
C<netdb_net_type>, C<nm>, C<nm_opt>, C<nm_so_opt>, C<nonxs_ext>, C<nroff>,
C<nvsize>, C<nvtype>
d8130 1
a8130 1
C<orderlib>, C<osname>, C<osvers>
d8140 3
a8142 3
C<perlpath>, C<pg>, C<phostname>, C<pidtype>, C<plibpth>, C<pm_apiversion>,
C<pmake>, C<pr>, C<prefix>, C<prefixexp>, C<privlib>, C<privlibexp>,
C<prototype>, C<ptrsize>
d8158 4
a8161 4
C<sig_name>, C<sig_name_init>, C<sig_num>, C<sig_num_init>, C<signal_t>,
C<sitearch>, C<sitearchexp>, C<sitebin>, C<sitebinexp>, C<sitelib>,
C<sitelib_stem>, C<sitelibexp>, C<siteprefix>, C<siteprefixexp>,
C<sizesize>, C<sizetype>, C<sleep>, C<smail>, C<small>, C<so>,
d8163 3
a8165 3
C<spitshell>, C<split>, C<sPRId64>, C<sPRIeldbl>, C<sPRIEldbl>,
C<sPRIfldbl>, C<sPRIFldbl>, C<sPRIgldbl>, C<sPRIGldbl>, C<sPRIi64>,
C<sPRIo64>, C<sPRIu64>, C<sPRIx64>, C<sPRIX64>, C<src>, C<ssizetype>,
d8185 1
a8185 1
C<uvxformat>
d8191 1
a8191 1
C<vendorprefixexp>, C<version>, C<vi>, C<voidflags>
d8207 1
a8207 1
=head2 Cwd, getcwd - get pathname of current working directory
d8209 1
a8209 1
=over
d8221 1
a8221 1
=over
d8227 1
a8227 1
=over
d8256 1
a8256 1
=over
d8264 1
a8264 1
=over
d8280 1
a8280 1
=over
d8288 1
a8288 1
=over
d8306 1
a8306 1
=over
d8333 1
a8333 1
=over
d8345 1
a8345 1
=over
d8361 1
a8361 1
=over
d8392 1
a8392 1
=over
d8398 1
a8398 1
=over
d8446 1
a8446 1
=over
d8466 1
a8466 1
=over
d8472 6
d8480 1
a8480 1
=over
d8514 1
a8514 1
=over
d8524 1
a8524 1
=over
d8534 1
a8534 1
=over
d8540 1
a8540 1
=over
d8560 1
a8560 1
=over
d8579 1
a8579 1
=over
d8592 1
a8592 1
=over
d8605 1
a8605 1
=over
d8619 1
a8619 1
=over
d8635 1
a8635 1
=over
d8641 1
a8641 1
=over
d8663 1
a8663 1
=over
d8674 1
a8674 1
=over
d8702 1
a8702 1
=over
d8714 1
a8714 1
=over
d8737 1
a8737 1
=over
d8747 1
a8747 1
=over
d8768 1
a8768 1
=over
d8776 1
a8776 1
=over
d8788 1
a8788 1
=over
d8803 1
a8803 1
=over
d8813 2
d8818 1
a8818 1
=over
d8828 1
a8828 1
=over
d8836 1
a8836 1
=over
d8856 1
a8856 1
=over
d8908 1
a8908 1
=over
d9024 2
d9028 1
a9028 1
=over
d9037 1
a9037 1
=over
d9043 1
a9043 1
=over
d9055 1
a9055 1
=over
d9152 1
a9152 1
=over
d9198 1
a9198 1
=over
d9204 1
a9204 1
=over
d9228 1
a9228 1
AUTHOR, ABSTRACT, ABSTRACT_FROM, BINARY_LOCATION, C, CAPI, CCFLAGS, CONFIG,
d9235 8
a9242 8
INST_EXE, INST_LIB, INST_HTMLLIBDIR, INST_HTMLSCRIPTDIR, INST_MAN1DIR,
INST_MAN3DIR, INST_SCRIPT, PERL_MALLOC_OK, LDFROM, LIB, LIBPERL_A, LIBS,
LINKTYPE, MAKEAPERL, MAKEFILE, MAN1PODS, MAN3PODS, MAP_TARGET, MYEXTLIB,
NAME, NEEDS_LINKING, NOECHO, NORECURS, NO_VC, OBJECT, OPTIMIZE, PERL,
PERLMAINCC, PERL_ARCHLIB, PERL_LIB, PERL_SRC, PERM_RW, PERM_RWX, PL_FILES,
PM, PMLIBDIRS, POLLUTE, PPM_INSTALL_EXEC, PPM_INSTALL_SCRIPT, PREFIX,
PREREQ_PM, SKIP, TYPEMAPS, VERSION, VERSION_FROM, XS, XSOPT, XSPROTOARG,
XS_VERSION
d9275 1
a9275 1
=over
d9300 1
a9300 1
=over
d9312 1
a9312 1
=over
d9323 1
a9323 1
=over
d9339 1
a9339 1
=over
d9359 1
a9359 1
=over
d9369 1
a9369 1
=over
d9381 1
a9381 1
=over
d9395 1
a9395 1
=over
d9411 1
a9411 1
=over
d9421 1
a9421 1
=over
d9435 1
a9435 1
=over
d9441 1
a9441 1
=over
d9457 1
a9457 1
=over
d9477 1
a9477 1
=over
d9483 3
a9485 2
C<wanted>, C<bydepth>, C<follow>, C<follow_fast>, C<follow_skip>,
C<no_chdir>, C<untaint>, C<untaint_pattern>, C<untaint_skip>
d9493 1
a9493 1
=over
d9500 2
a9501 1
C<GLOB_BRACE>, C<GLOB_NOMAGIC>, C<GLOB_QUOTE>, C<GLOB_TILDE>, C<GLOB_CSH>
d9515 1
a9515 1
=over
d9527 1
a9527 1
=over
d9539 34
d9575 1
a9575 1
=over
d9581 1
a9581 1
=over
d9593 1
a9593 1
=over
d9633 1
a9633 1
=over
d9641 1
a9641 1
=over
d9651 1
a9651 1
=over
d9683 93
a9775 1
path
d9777 1
a9777 1
join
d9785 1
a9785 5
abs2rel

rel2abs

=over
d9791 3
a9793 1
=head2 File::Spec::VMS - methods for VMS file specs
d9795 1
a9795 1
=over
a9800 2
eliminate_macros

d9803 1
a9803 3
fixpath

=over
d9805 1
a9805 1
=item Methods always loaded
d9807 1
a9807 1
canonpath (override)
d9811 1
a9811 1
catdir
d9813 1
a9813 1
catfile
d9815 1
a9815 1
curdir (override)
d9817 1
a9817 1
devnull (override)
d9819 1
a9819 1
rootdir (override)
d9821 1
a9821 1
tmpdir (override)
d9823 1
a9823 1
updir (override)
d9825 1
a9825 1
case_tolerant (override)
d9827 1
a9827 1
path (override)
d9829 1
a9829 1
file_name_is_absolute (override)
d9831 1
a9831 1
splitpath (override)
d9833 1
a9833 1
splitdir (override)
d9835 1
a9835 3
catpath (override)

abs2rel (override)
d9837 1
a9837 1
rel2abs (override)
d9839 1
a9839 1
=over
d9841 1
a9841 1
=item SEE ALSO
d9845 1
a9845 1
=head2 File::Spec::Win32 - methods for Win32 file specs
d9847 1
a9847 1
=over
d9849 1
a9849 1
=item SYNOPSIS
d9851 1
a9851 1
=item DESCRIPTION
d9853 1
a9853 1
devnull
d9855 1
a9855 1
=back
d9857 1
a9857 1
tmpdir
d9859 1
a9859 1
catfile
d9861 1
a9861 1
canonpath
d9863 1
a9863 1
splitpath
d9865 1
a9865 1
splitdir
d9867 1
a9867 1
catpath
d9869 1
a9869 1
abs2rel
d9871 1
a9871 1
rel2abs
d9873 1
a9873 1
=over
d9877 2
d9883 1
a9883 1
=over
d9897 1
a9897 1
=over
d9909 1
a9909 1
=over
d9923 1
a9923 1
=over
d9941 1
a9941 1
=over
d9957 1
a9957 1
=over
d9967 1
a9967 1
=over
d9995 3
a9997 1
=over
d10013 5
a10017 4
default, auto_abbrev, getopt_compat, require_order, permute, bundling
(default: reset), bundling_override (default: reset), ignore_case 
(default: set), ignore_case_always (default: reset), pass_through (default:
reset), prefix, prefix_pattern, debug (default: reset)
d10023 1
a10023 1
=over
d10033 11
d10053 1
a10053 1
=over
d10064 1
a10064 1
=over
d10074 1
a10074 1
=over
d10084 1
a10084 1
=over
d10103 1
a10103 1
=over
d10125 1
a10125 1
=over
d10154 1
a10154 1
=over
d10178 1
a10178 1
=over
d10199 1
a10199 1
=over
d10205 3
a10207 1
=item SEE ALSO
d10215 1
a10215 1
=over
d10241 1
a10241 1
=over
d10266 1
a10266 1
=over
d10276 1
a10276 1
=over
d10295 1
a10295 1
=over
d10320 1
a10320 1
=over
d10339 1
a10339 1
=over
d10362 1
a10362 1
=over
d10391 1
a10391 1
=over
d10415 1
a10415 1
=over
d10437 1
a10437 1
=over
d10443 3
a10445 1
=item SEE ALSO
d10454 1
a10454 1
=over
d10481 1
a10481 1
=over
d10507 1
a10507 1
=over
d10517 1
a10517 1
=over
d10537 1
a10537 1
=over
d10561 1
a10561 1
=over
d10583 1
a10583 1
=over
d10598 1
a10598 1
=over
d10610 1
a10610 1
=over
d10633 1
a10633 1
=over
d10651 1
a10651 1
=over
d10674 1
a10674 1
=over
d10697 1
a10697 1
=over
d10714 1
a10714 1
=over
d10732 33
d10767 1
a10767 1
=over
d10777 1
a10777 1
=over
d10789 1
a10789 1
=over
d10812 1
a10812 1
=over
d10816 11
a10826 1
=item DESCRIPTION
d10832 1
a10832 1
=over
d10838 1
a10838 1
=over
d10856 1
a10856 1
=over
d10873 1
a10873 1
=over
d10890 1
a10890 1
=over
d10905 1
a10905 1
=over
d10921 1
a10921 1
=over
d10937 1
a10937 1
=over
d10941 11
a10951 1
=item DESCRIPTION
d10957 1
a10957 1
=over
d10985 1
a10985 1
=over
d11003 1
a11003 1
=over
d11013 1
a11013 1
=over
d11037 1
a11037 1
=over
d11049 1
a11049 1
=over
d11081 6
a11086 6
strncat, strncmp, strncpy, stroul, strpbrk, strrchr, strspn, strstr,
strtod, strtok, strtol, strtoul, strxfrm, sysconf, system, tan, tanh,
tcdrain, tcflow, tcflush, tcgetpgrp, tcsendbreak, tcsetpgrp, time, times,
tmpfile, tmpnam, tolower, toupper, ttyname, tzname, tzset, umask, uname,
ungetc, unlink, utime, vfprintf, vprintf, vsprintf, wait, waitpid,
wcstombs, wctomb, write
d11090 1
a11090 1
=over
a11173 2
=item CREATION

d11178 1
a11178 1
=over
d11184 1
a11184 1
=over
d11196 1
a11196 1
=over
d11213 10
a11222 6
whitespace in paragraph, file does not start with =head, No numeric
argument for =over, previous =item has no contents, preceding non-item
paragraph(s), =item type mismatch (I<one> vs. I<two>), I<N> unescaped
C<E<lt>E<gt>> in paragraph, Unknown entity, No items in =over, No argument
for =item, empty section in previous paragraph, Verbatim paragraph in NAME
section, Hyperlinks
d11234 2
d11249 1
a11249 1
=over
d11257 1
a11257 1
=over
d11263 31
a11293 1
=item OPTIONS
d11295 1
a11295 1
B<-verbose>, B<-perl>, B<-script>, B<-inc>
d11305 1
a11305 1
=over
d11332 1
a11332 1
=over
d11342 2
a11343 2
B<Pod::InputSource>, B<Pod::Paragraph>, B<Pod::InteriorSequence>,
B<Pod::ParseTree>
d11347 1
a11347 1
=over
d11353 1
a11353 1
=over
d11359 1
a11359 1
=over
d11365 1
a11365 1
=over
d11371 1
a11371 1
=over
d11377 1
a11377 1
=over
d11383 1
a11383 1
=over
d11385 1
a11385 1
=item B<new()>
d11389 1
a11389 1
=over
d11391 1
a11391 1
=item B<cmd_name()>
d11395 1
a11395 1
=over
d11397 1
a11397 1
=item B<text()>
d11401 1
a11401 1
=over
d11403 1
a11403 1
=item B<raw_text()>
d11407 1
a11407 1
=over
d11409 1
a11409 1
=item B<cmd_prefix()>
d11413 1
a11413 1
=over
d11415 1
a11415 1
=item B<cmd_separator()>
d11419 1
a11419 1
=over
d11421 1
a11421 1
=item B<parse_tree()>
d11425 1
a11425 1
=over
d11427 1
a11427 1
=item B<file_line()>
d11431 1
a11431 1
=over
d11437 1
a11437 1
=over
d11439 1
a11439 1
=item B<new()>
d11443 1
a11443 1
=over
d11445 1
a11445 1
=item B<cmd_name()>
d11449 1
a11449 1
=over
d11451 1
a11451 1
=item B<prepend()>
d11455 1
a11455 1
=over
d11457 1
a11457 1
=item B<append()>
d11461 1
a11461 1
=over
d11463 1
a11463 1
=item B<nested()>
d11467 1
a11467 1
=over
d11469 1
a11469 1
=item B<raw_text()>
d11473 1
a11473 1
=over
d11475 1
a11475 1
=item B<left_delimiter()>
d11479 1
a11479 1
=over
d11481 1
a11481 1
=item B<right_delimiter()>
d11485 1
a11485 1
=over
d11487 1
a11487 1
=item B<parse_tree()>
d11491 1
a11491 1
=over
d11493 1
a11493 1
=item B<file_line()>
d11497 1
a11497 1
=over
d11499 1
a11499 1
=item B<DESTROY()>
d11503 1
a11503 1
=over
d11509 1
a11509 1
=over
d11511 1
a11511 1
=item B<new()>
d11515 1
a11515 1
=over
d11517 1
a11517 1
=item B<top()>
d11521 1
a11521 1
=over
d11523 1
a11523 1
=item B<children()>
d11527 1
a11527 1
=over
d11529 1
a11529 1
=item B<prepend()>
d11533 1
a11533 1
=over
d11535 1
a11535 1
=item B<append()>
d11539 1
a11539 1
=over
d11541 1
a11541 1
=item B<raw_text()>
d11545 1
a11545 1
=over
d11547 1
a11547 1
=item B<DESTROY()>
d11551 1
a11551 1
=over
d11559 118
d11679 1
a11679 1
=over
d11685 2
a11686 2
center, date, fixed, fixedbold, fixeditalic, fixedbolditalic, release,
section
d11690 4
a11693 2
roff font should be 1 or 2 chars, not `%s', Invalid link %s, Unknown escape
EE<lt>%sE<gt>, Unknown sequence %s, Unmatched =back
d11705 1
a11705 1
=over
d11713 1
a11713 1
=over
d11717 1
a11717 1
new()
d11721 1
a11721 1
file()
d11723 1
a11723 1
start()
d11725 1
a11725 1
indent()
d11727 1
a11727 1
type()
d11729 1
a11729 1
rx()
d11731 1
a11731 1
item()
d11733 1
a11733 1
parent()
d11735 1
a11735 1
tag()
d11737 1
a11737 1
=over
d11741 1
a11741 1
new()
d11745 1
a11745 1
parse($string)
d11747 1
a11747 1
markup($string)
d11749 1
a11749 1
text()
d11751 1
a11751 1
warning()
d11753 1
a11753 1
line(), file()
d11755 1
a11755 1
page()
d11757 1
a11757 1
node()
d11759 1
a11759 1
alttext()
d11761 1
a11761 1
type()
d11763 1
a11763 1
link()
d11765 1
a11765 1
=over
d11769 1
a11769 1
new()
d11773 1
a11773 1
item()
d11775 1
a11775 1
find_page($name)
d11777 1
a11777 1
=over
d11781 1
a11781 1
new()
d11785 1
a11785 1
page()
d11787 1
a11787 1
description()
d11789 1
a11789 1
path()
d11791 1
a11791 1
file()
d11793 1
a11793 1
nodes()
d11795 1
a11795 1
find_node($name)
d11797 1
a11797 1
idx()
d11799 1
a11799 1
=over
d11809 1
a11809 1
=over
d11828 1
a11828 1
=over
d11834 1
a11834 1
=over
d11842 1
a11842 1
=over
d11850 1
a11850 1
=over
d11858 1
a11858 1
=over
d11864 1
a11864 1
=over
d11870 1
a11870 1
=over
d11876 1
a11876 1
=over
d11882 1
a11882 1
=over
d11888 1
a11888 1
=over
d11894 1
a11894 1
=over
d11900 1
a11900 1
=over
d11906 1
a11906 1
=over
d11912 1
a11912 1
=over
d11918 1
a11918 1
=over
d11924 1
a11924 1
=over
d11934 1
a11934 1
=over
d11940 1
a11940 1
=over
d11946 1
a11946 1
=over
d11952 1
a11952 1
=over
d11958 1
a11958 1
=over
d11964 1
a11964 1
=over
d11970 1
a11970 1
=over
d11976 1
a11976 1
=over
d11982 1
a11982 1
=over
d11988 1
a11988 1
=over
d11994 1
a11994 1
=over
d12000 1
a12000 1
=over
d12006 1
a12006 1
=over
d12012 1
a12012 1
=over
d12018 1
a12018 1
=over
d12024 1
a12024 1
=over
d12030 1
a12030 1
=over
d12036 1
a12036 1
=over
d12048 1
a12048 1
=over
d12054 1
a12054 1
=over
d12069 1
a12069 1
=over
d12085 1
a12085 1
=over
d12091 1
a12091 1
=over
d12097 1
a12097 1
=over
d12103 1
a12103 1
=over
d12109 1
a12109 1
=over
d12115 1
a12115 1
=over
d12121 1
a12121 1
=over
d12127 1
a12127 1
=over
d12133 1
a12133 1
=over
d12141 1
a12141 1
=over
d12147 1
a12147 1
=over
d12153 1
a12153 1
=over
d12159 1
a12159 1
=over
d12165 1
a12165 1
=over
d12175 1
a12175 1
=over
d12181 1
a12181 1
alt, indent, loose, sentence, width
d12185 3
a12187 2
Bizarre space in item, Can't open %s for reading: %s, Unknown escape: %s,
Unknown sequence: %s, Unmatched =back
d12201 18
a12218 1
=over
d12235 1
a12235 1
=over
d12250 1
a12250 1
=over
d12263 1
a12263 1
=over
d12279 1
a12279 1
=over
d12285 12
d12301 1
a12301 1
=over
d12311 1
a12311 1
=over
d12334 1
a12334 1
=over
d12344 1
a12344 1
=over
d12354 1
a12354 1
=over
d12360 1
a12360 1
=over
d12382 1
a12382 1
=over
d12388 6
d12401 1
a12401 1
=over
d12417 1
a12417 1
=over
d12427 1
a12427 1
=over
d12440 1
a12440 1
=over
d12461 1
a12461 1
=over
d12481 1
a12481 1
=over
d12489 3
a12491 3
Invalid attribute name %s, Identifier %s used only once: possible typo, No
comma allowed after filehandle, Bareword %s not allowed while "strict subs"
in use
d12495 2
d12503 1
a12503 1
=over
d12515 1
a12515 1
=over
d12534 1
a12534 1
=over
d12557 1
a12557 1
=over
d12579 1
a12579 1
=over
d12585 1
a12585 1
=over
d12612 1
a12612 1
=over
d12625 1
a12625 1
=over
a12632 6
0a simple word, 1multiple spaces are skipped because of our $delim, 2use of
quotes to include a space in a word, 3use of a backslash to include a space
in a word, 4use of a backslash to remove the special meaning of a
double-quote, 5another simple word (note the lack of effect of the
backslashed double-quote)

d12640 1
a12640 1
=over
d12657 1
a12657 1
=over
d12671 1
a12671 1
=over
d12686 3
a12688 1
=over
d12712 1
a12712 1
=over
d12728 1
a12728 1
=over
d12742 1
a12742 1
=over
d12754 1
a12754 1
=over
d12764 1
a12764 1
=over
d12766 1
a12766 1
=item SYNOPSIS	
d12768 1
a12768 1
=item DESCRIPTION	
d12777 1
a12777 1
=item AUTHOR 
d12784 1
a12784 1
=over
d12797 2
d12803 1
a12803 1
=over
d12820 1
a12820 1
=over
d12839 1
a12839 1
=over
d12853 1
a12853 1
=over
d12865 1
a12865 1
=over
d12880 1
a12880 1
=over
d12895 1
a12895 1
=over
d12909 1
a12909 1
=over
d12921 1
a12921 1
=over
d12935 1
a12935 1
=over
d12950 1
a12950 1
=over
d12956 1
a12956 1
=over
d12972 31
d13005 1
a13005 1
=over
d13020 1
a13020 1
=over
@


1.3
log
@perl5.005_03 (stock)
@
text
@d16 2
d22 11
a32 6
Many usability enhancements, Simplified grammar, Lexical scoping,
Arbitrarily nested data structures, Modularity and reusability,
Object-oriented programming, Embeddable and Extensible, POSIX compliant,
Package constructors and destructors, Multiple simultaneous DBM
implementations, Subroutine definitions may now be autoloaded, Regular
expression enhancements, Innumerable Unbundled Modules, Compilability
d48 6
a53 2
=head2 perlfaq - frequently asked questions about Perl ($Date: 1998/07/20
23:12:17 $)
d58 215
a272 4
About Perl, L<perlfaq2>: Obtaining and Learning about Perl, L<perlfaq3>:
Programming Tools, L<perlfaq4>: Data Manipulation, L<perlfaq5>: Files and
Formats, L<perlfaq6>: Regexps, L<perlfaq7>: General Perl Language Issues,
L<perlfaq8>: System Interaction, L<perlfaq9>: Networking
d299 2
a300 2
24/April/97, 23/April/97, 25/March/97, 18/March/97, 17/March/97 Version,
Initial Release: 11/March/97
d302 6
a307 2
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.14 $, $Date:
1998/06/14 22:15:25 $)
d321 2
d343 1
a343 1
(5/5.004/Perl instead of some other language)?
d349 6
a354 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.24 $,
$Date: 1998/07/20 23:40:28 $)
d372 1
a372 1
=item What modules and extensions are available for Perl?  What is CPAN?
d379 1
a379 1
=item What are the Perl newsgroups on USENET?  Where do I post questions?
d385 1
a385 3
References, Tutorials           
*Learning Perl [2nd edition]
by Randal L. Schwartz and Tom Christiansen, Task-Oriented, Special Topics
d391 1
a391 3
=item What mailing lists are there for perl?

MacPerl, Perl5-Porters, NTPerl, Perl-Packrats
d399 3
a401 1
=item What is perl.com?  perl.org?  The Perl Institute?
d403 1
a403 1
=item How do I learn about object-oriented Perl programming?
d407 2
a408 1
=item AUTHOR AND COPYRIGHT
d410 1
a410 2
=head2 perlfaq3 - Programming Tools ($Revision: 1.28 $, $Date: 1998/07/16
22:08:49 $)
d432 2
d460 2
d464 1
a464 1
=item Can I write useful perl programs on the command line?
d466 1
a466 1
=item Why don't perl one-liners work on my DOS/Mac/VMS system?
d486 6
a491 2
=head2 perlfaq4 - Data Manipulation ($Revision: 1.25 $, $Date: 1998/07/16
22:49:55 $)
d504 1
a504 1
=item Does perl have a round function?	What about ceil() and floor()?
d509 2
d527 2
d535 3
a537 1
=item Does Perl have a year 2000 problem?  Is Perl Y2K compliant?
d575 2
d597 2
d601 1
a601 1
=item How can I extract just the unique elements of an array?
d614 2
d693 2
d699 6
a704 2
=head2 perlfaq5 - Files and Formats ($Revision: 1.24 $, $Date: 1998/07/05
15:07:20 $)
d740 1
a740 1
=item How can I open a file with a leading "E<gt>" or trailing blanks?
d746 1
a746 1
=item What can't I just open(FH, ">file.lock")?
d759 2
d765 1
a765 1
=item How can I tell if there's a character waiting on a filehandle?
d783 2
d789 5
a793 1
=head2 perlfaq6 - Regexps ($Revision: 1.22 $, $Date: 1998/07/16 14:01:07 $)
d802 1
a802 2
Comments Outside the Regexp, Comments Inside the Regexp, Different
Delimiters
d818 1
a818 1
=item How can I quote a variable to use in a regexp?
d827 1
a827 1
=item What does it mean that regexps are greedy?  How can I get around it?
d843 1
a843 1
=item Are Perl regexps DFAs or NFAs?  Are they POSIX compliant?
d849 2
d855 6
a860 2
=head2 perlfaq7 - Perl Language Issues ($Revision: 1.21 $, $Date:
1998/06/22 15:20:07 $)
d868 1
a868 1
=item What are all these $@@%* punctuation signs, and how do I know when to
d895 1
a895 1
Regexp}?
d897 1
a897 1
Passing Variables and Functions, Passing Filehandles, Passing Regexps,
d902 1
a902 1
=item What's the difference between dynamic and lexical (static) scoping?
d926 4
d934 6
a939 2
=head2 perlfaq8 - System Interaction ($Revision: 1.25 $, $Date: 1998/07/05
15:07:20 $)
d1047 1
a1047 1
=item How do I install a CPAN module?
d1058 2
d1064 3
a1066 1
=head2 perlfaq9 - Networking ($Revision: 1.20 $, $Date: 1998/06/22 18:31:09
d1069 2
d1130 5
a1134 1
=head2 perldelta - what's new for perl5.005
d1138 132
a1269 1
=item About the new versioning system
d1271 1
a1271 1
=item Incompatible Changes
d1275 13
a1287 1
=item WARNING:  This version is not binary compatible with Perl 5.004.
d1289 1
a1289 1
=item Default installation structure has changed
d1291 4
a1294 1
=item Perl Source Compatibility
d1296 1
a1296 1
=item C Source Compatibility
d1298 1
a1298 3
Core sources now require ANSI C compiler, All Perl global variables must
now be referenced with an explicit prefix, Enabling threads has source
compatibility issues
d1300 1
a1300 1
=item Binary Compatibility
d1302 1
a1302 1
=item Security fixes may affect compatibility
d1304 1
a1304 1
=item Relaxed new mandatory warnings introduced in 5.004
d1306 1
a1306 1
=item Licensing
d1310 1
a1310 1
=item Core Changes
d1314 1
a1314 1
=item Threads
d1316 1
a1316 1
=item Compiler
d1318 1
a1318 1
=item Regular Expressions
d1320 1
a1320 3
Many new and improved optimizations, Many bug fixes, New regular expression
constructs, New operator for precompiled regular expressions, Other
improvements, Incompatible changes
d1322 1
a1322 1
=item   Improved malloc()
d1324 1
a1324 1
=item Quicksort is internally implemented
d1326 1
a1326 1
=item Reliable signals
d1328 1
a1328 1
=item Reliable stack pointers
d1330 1
a1330 1
=item More generous treatment of carriage returns
d1332 1
a1332 1
=item Memory leaks
d1334 1
a1334 1
=item Better support for multiple interpreters
d1336 1
a1336 1
=item Behavior of local() on array and hash elements is now well-defined
d1338 1
a1338 1
=item C<%!> is transparently tied to the L<Errno> module
d1340 1
a1340 1
=item Pseudo-hashes are supported
d1342 1
a1342 1
=item C<EXPR foreach EXPR> is supported
d1344 1
a1344 1
=item Keywords can be globally overridden
d1346 1
a1346 1
=item C<$^E> is meaningful on Win32
d1348 1
a1348 1
=item C<foreach (1..1000000)> optimized
d1350 1
a1350 1
=item C<Foo::> can be used as implicitly quoted package name
d1352 1
a1352 1
=item C<exists $Foo::{Bar::}> tests existence of a package
d1354 1
a1354 1
=item Better locale support
d1356 1
a1356 1
=item Experimental support for 64-bit platforms
d1358 1
a1358 1
=item prototype() returns useful results on builtins
d1360 1
a1360 1
=item Extended support for exception handling
d1362 1
a1362 1
=item Re-blessing in DESTROY() supported for chaining DESTROY() methods
d1364 1
a1364 1
=item All C<printf> format conversions are handled internally
d1366 1
a1366 1
=item New C<INIT> keyword
d1368 1
a1368 1
=item New C<lock> keyword
d1370 1
a1370 1
=item New C<qr//> operator
d1372 1
a1372 1
=item C<our> is now a reserved word
d1374 1
a1374 1
=item Tied arrays are now fully supported
d1376 1
a1376 1
=item Tied handles support is better
d1378 1
a1378 1
=item 4th argument to substr
d1380 1
a1380 1
=item Negative LENGTH argument to splice
d1382 1
a1382 1
=item Magic lvalues are now more magical
d1384 1
a1384 1
=item E<lt>E<gt> now reads in records
d1388 56
a1443 1
=item Supported Platforms
d1447 5
a1451 1
=item New Platforms
d1453 22
a1474 1
=item Changes in existing support
d1478 1
a1478 1
=item Modules and Pragmata
d1482 1
a1482 1
=item New Modules
d1484 1
a1484 3
B, Data::Dumper, Errno, File::Spec, ExtUtils::Installed,
ExtUtils::Packlist, Fatal, IPC::SysV, Test, Tie::Array, Tie::Handle,
Thread, attrs, fields, re
d1486 1
a1486 1
=item Changes in existing modules
d1488 1
a1488 1
CGI, POSIX, DB_File, MakeMaker, CPAN, Cwd, Benchmark
d1490 6
a1495 1
=back
d1497 1
a1497 1
=item Utility Changes
d1499 1
a1499 1
=item Documentation Changes
d1501 4
a1504 1
=item New Diagnostics
d1506 1
a1506 17
Ambiguous call resolved as CORE::%s(), qualify as such or use &, Bad index
while coercing array into hash, Bareword "%s" refers to nonexistent
package, Can't call method "%s" on an undefined value, Can't coerce array
into hash, Can't goto subroutine from an eval-string, Can't localize
pseudo-hash element, Can't use %%! because Errno.pm is not available,
Cannot find an opnumber for "%s", Character class syntax [. .] is reserved
for future extensions, Character class syntax [: :] is reserved for future
extensions, Character class syntax [= =] is reserved for future extensions,
%s: Eval-group in insecure regular expression, %s: Eval-group not allowed,
use re 'eval', %s: Eval-group not allowed at run time, Explicit blessing to
'' (assuming package main), Illegal hex digit ignored, No such array field,
No such field "%s" in variable %s of type %s, Out of memory during
ridiculously large request, Range iterator outside integer range, Recursive
inheritance detected while looking for method '%s' in package '%s',
Reference found where even-sized list expected, Undefined value assigned to
typeglob, Use of reserved word "%s" is deprecated, perl: warning: Setting
locale failed
d1510 3
a1512 2
Can't mktemp(), Can't write to temp file for B<-e>: %s, Cannot open
temporary file
d1514 1
a1514 1
=item BUGS
d1520 2
d1524 2
d1540 2
d1546 4
d1552 2
d1580 2
d1584 2
d1650 2
a1651 2
s/PATTERN/REPLACEMENT/egimosx, tr/SEARCHLIST/REPLACEMENTLIST/cds,
y/SEARCHLIST/REPLACEMENTLIST/cds
d1657 1
a1657 1
C<``>, C<qq//>, C<qx//>, C<<file*globE<gt>>, C<?RE?>, C</RE/>, C<m/RE/>,
d1675 2
d1679 2
d1689 8
a1696 4
C<(?#text)>, C<(?:pattern)>, C<(?imsx-imsx:pattern)>, C<(?=pattern)>,
C<(?!pattern)>, C<(?E<lt>=pattern)>, C<(?<!pattern)>, C<(?{ code })>,
C<(?E<gt>pattern)>, C<(?(condition)yes-pattern|no-pattern)>,
C<(?(condition)yes-pattern)>, C<(?imsx-imsx)>
d1702 1
a1702 1
=item WARNING on \1 vs $1
d1706 7
d1715 4
d1725 2
d1735 1
a1735 1
OS/2, MS-DOS, Win95/NT, Macintosh
d1739 1
a1739 1
=item Switches
d1741 3
a1743 3
B<-0>[I<digits>], B<-a>, B<-c>, B<-d>, B<-d:>I<foo>, B<-D>I<letters>,
B<-D>I<number>, B<-e> I<commandline>, B<-F>I<pattern>, B<-h>,
B<-i>[I<extension>], B<-I>I<directory>, B<-l>[I<octnum>],
d1746 2
a1747 1
B<-T>, B<-u>, B<-U>, B<-v>, B<-V>, B<-V:>I<name>, B<-w>, B<-x> I<directory>
d1754 3
a1756 1
(specific to WIN32 port), PERL_DEBUG_MSTATS, PERL_DESTRUCT_LEVEL
d1760 2
d1780 2
d1786 41
a1826 39
binmode FILEHANDLE, bless REF,CLASSNAME, bless REF, caller EXPR, caller,
chdir EXPR, chmod LIST, chomp VARIABLE, chomp LIST, chomp, chop VARIABLE,
chop LIST, chop, chown LIST, chr NUMBER, chr, chroot FILENAME, chroot,
close FILEHANDLE, close, closedir DIRHANDLE, connect SOCKET,NAME, continue
BLOCK, cos EXPR, crypt PLAINTEXT,SALT, dbmclose HASH, dbmopen
HASH,DBNAME,MODE, defined EXPR, defined, delete EXPR, die LIST, do BLOCK,
do SUBROUTINE(LIST), do EXPR, dump LABEL, each HASH, eof FILEHANDLE, eof
(), eof, eval EXPR, eval BLOCK, exec LIST, exec PROGRAM LIST, exists EXPR,
exit EXPR, exp EXPR, exp, fcntl FILEHANDLE,FUNCTION,SCALAR, fileno
FILEHANDLE, flock FILEHANDLE,OPERATION, fork, format, formline
PICTURE,LIST, getc FILEHANDLE, getc, getlogin, getpeername SOCKET, getpgrp
PID, getppid, getpriority WHICH,WHO, getpwnam NAME, getgrnam NAME,
gethostbyname NAME, getnetbyname NAME, getprotobyname NAME, getpwuid UID,
getgrgid GID, getservbyname NAME,PROTO, gethostbyaddr ADDR,ADDRTYPE,
getnetbyaddr ADDR,ADDRTYPE, getprotobynumber NUMBER, getservbyport
PORT,PROTO, getpwent, getgrent, gethostent, getnetent, getprotoent,
getservent, setpwent, setgrent, sethostent STAYOPEN, setnetent STAYOPEN,
setprotoent STAYOPEN, setservent STAYOPEN, endpwent, endgrent, endhostent,
endnetent, endprotoent, endservent, getsockname SOCKET, getsockopt
SOCKET,LEVEL,OPTNAME, glob EXPR, glob, gmtime EXPR, goto LABEL, goto EXPR,
goto &NAME, grep BLOCK LIST, grep EXPR,LIST, hex EXPR, hex, import, index
STR,SUBSTR,POSITION, index STR,SUBSTR, int EXPR, int, ioctl
FILEHANDLE,FUNCTION,SCALAR, join EXPR,LIST, keys HASH, kill LIST, last
LABEL, last, lc EXPR, lc, lcfirst EXPR, lcfirst, length EXPR, length, link
OLDFILE,NEWFILE, listen SOCKET,QUEUESIZE, local EXPR, localtime EXPR, log
EXPR, log, lstat FILEHANDLE, lstat EXPR, lstat, m//, map BLOCK LIST, map
EXPR,LIST, mkdir FILENAME,MODE, msgctl ID,CMD,ARG, msgget KEY,FLAGS, msgsnd
ID,MSG,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, my EXPR, next LABEL, next, no
Module LIST, oct EXPR, oct, open FILEHANDLE,EXPR, open FILEHANDLE, opendir
DIRHANDLE,EXPR, ord EXPR, ord, pack TEMPLATE,LIST, package, package
NAMESPACE, pipe READHANDLE,WRITEHANDLE, pop ARRAY, pop, pos SCALAR, pos,
print FILEHANDLE LIST, print LIST, print, printf FILEHANDLE FORMAT, LIST,
printf FORMAT, LIST, prototype FUNCTION, push ARRAY,LIST, q/STRING/,
qq/STRING/, qr/STRING/, qx/STRING/, qw/STRING/, quotemeta EXPR, quotemeta,
rand EXPR, rand, read FILEHANDLE,SCALAR,LENGTH,OFFSET, read
FILEHANDLE,SCALAR,LENGTH, readdir DIRHANDLE, readline EXPR, readlink EXPR,
readlink, readpipe EXPR, recv SOCKET,SCALAR,LEN,FLAGS, redo LABEL, redo,
ref EXPR, ref, rename OLDNAME,NEWNAME, require EXPR, require, reset EXPR,
reset, return EXPR, return, reverse LIST, rewinddir DIRHANDLE, rindex
d1838 11
a1848 10
splice ARRAY,OFFSET, split /PATTERN/,EXPR,LIMIT, split /PATTERN/,EXPR,
split /PATTERN/, split, sprintf FORMAT, LIST, sqrt EXPR, sqrt, srand EXPR,
srand, stat FILEHANDLE, stat EXPR, stat, study SCALAR, study, sub BLOCK,
sub NAME, sub NAME BLOCK, substr EXPR,OFFSET,LEN,REPLACEMENT, substr
EXPR,OFFSET,LEN, substr EXPR,OFFSET, symlink OLDFILE,NEWFILE, syscall LIST,
sysopen FILEHANDLE,FILENAME,MODE, sysopen FILEHANDLE,FILENAME,MODE,PERMS,
sysread FILEHANDLE,SCALAR,LENGTH,OFFSET, sysread FILEHANDLE,SCALAR,LENGTH,
sysseek FILEHANDLE,POSITION,WHENCE, system LIST, system PROGRAM LIST,
syswrite FILEHANDLE,SCALAR,LENGTH,OFFSET, syswrite
FILEHANDLE,SCALAR,LENGTH, tell FILEHANDLE, tell, telldir DIRHANDLE, tie
d1852 6
a1857 4
TEMPLATE,EXPR, untie VARIABLE, unshift ARRAY,LIST, use Module LIST, use
Module, use Module VERSION LIST, use VERSION, utime LIST, values HASH, vec
EXPR,OFFSET,BITS, wait, waitpid PID,FLAGS, wantarray, warn LIST, write
FILEHANDLE, write EXPR, write, y///
d1863 2
d1871 28
a1898 21
$ARG, $_, $E<lt>I<digits>E<gt>, $MATCH, $&, $PREMATCH, $`, $POSTMATCH, $',
$LAST_PAREN_MATCH, $+, $MULTILINE_MATCHING, $*, input_line_number HANDLE
EXPR, $INPUT_LINE_NUMBER, $NR, $, input_record_separator HANDLE EXPR,
$INPUT_RECORD_SEPARATOR, $RS, $/, autoflush HANDLE EXPR, $OUTPUT_AUTOFLUSH,
$|, output_field_separator HANDLE EXPR, $OUTPUT_FIELD_SEPARATOR, $OFS, $,,
output_record_separator HANDLE EXPR, $OUTPUT_RECORD_SEPARATOR, $ORS, $\,
$LIST_SEPARATOR, $", $SUBSCRIPT_SEPARATOR, $SUBSEP, $;, $OFMT, $#,
format_page_number HANDLE EXPR, $FORMAT_PAGE_NUMBER, $%,
format_lines_per_page HANDLE EXPR, $FORMAT_LINES_PER_PAGE, $=,
format_lines_left HANDLE EXPR, $FORMAT_LINES_LEFT, $-, format_name HANDLE
EXPR, $FORMAT_NAME, $~, format_top_name HANDLE EXPR, $FORMAT_TOP_NAME, $^,
format_line_break_characters HANDLE EXPR, $FORMAT_LINE_BREAK_CHARACTERS,
$:, format_formfeed HANDLE EXPR, $FORMAT_FORMFEED, $^L, $ACCUMULATOR, $^A,
$CHILD_ERROR, $?, $OS_ERROR, $ERRNO, $!, $EXTENDED_OS_ERROR, $^E,
$EVAL_ERROR, $@@, $PROCESS_ID, $PID, $$, $REAL_USER_ID, $UID, $<,
$EFFECTIVE_USER_ID, $EUID, $>, $REAL_GROUP_ID, $GID, $(,
$EFFECTIVE_GROUP_ID, $EGID, $), $PROGRAM_NAME, $0, $[, $PERL_VERSION, $],
$DEBUGGING, $^D, $SYSTEM_FD_MAX, $^F, $^H, $INPLACE_EDIT, $^I, $^M,
$OSNAME, $^O, $PERLDB, $^P, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, $^R, $^S,
$BASETIME, $^T, $WARNING, $^W, $EXECUTABLE_NAME, $^X, $ARGV, @@ARGV, @@INC,
@@_, %INC, %ENV  $ENV{expr}, %SIG  $SIG{expr}
d1902 6
d1912 2
d1920 1
a1920 1
=item Private Variables via C<my()>
d1926 2
d1932 3
a1934 3
1. You need to give a global variable a temporary value, especially C<$_>,
2. You need to create a local file or directory handle or a local function,
3. You want to temporarily change just one element of an array or hash
d1942 1
a1942 1
=item Overriding Builtin Functions
d1946 2
d1952 2
d1956 2
d1976 2
d1980 2
d1990 3
a1992 2
use autouse MODULE => qw(sub1 sub2 sub3), blib, diagnostics, integer, less,
lib, locale, ops, overload, re, sigtrap, strict, subs, vmsish, vars
d1996 28
a2023 16
AnyDBM_File, AutoLoader, AutoSplit, Benchmark, CPAN, CPAN::FirstTime,
CPAN::Nox, Carp, Class::Struct, Config, Cwd, DB_File, Devel::SelfStubber,
DirHandle, DynaLoader, English, Env, Exporter, ExtUtils::Embed,
ExtUtils::Install, ExtUtils::Liblist, ExtUtils::MM_OS2, ExtUtils::MM_Unix,
ExtUtils::MM_VMS, ExtUtils::MakeMaker, ExtUtils::Manifest,
ExtUtils::Mkbootstrap, ExtUtils::Mksymlists, ExtUtils::testlib, Fatal,
Fcntl, File::Basename, File::CheckTree, File::Compare, File::Copy,
File::Find, File::Path, File::stat, FileCache, FileHandle, FindBin,
GDBM_File, Getopt::Long, Getopt::Std, I18N::Collate, IO, IO::File,
IO::Handle, IO::Pipe, IO::Seekable, IO::Select, IO::Socket, IPC::Open2,
IPC::Open3, Math::BigFloat, Math::BigInt, Math::Complex, Math::Trig,
NDBM_File, Net::Ping, Net::hostent, Net::netent, Net::protoent,
Net::servent, Opcode, Pod::Text, POSIX, SDBM_File, Safe, Search::Dict,
SelectSaver, SelfLoader, Shell, Socket, Symbol, Sys::Hostname, Sys::Syslog,
Term::Cap, Term::Complete, Term::ReadLine, Test::Harness, Text::Abbrev,
Text::ParseWords, Text::Soundex, Text::Tabs, Text::Wrap, Tie::Hash,
d2045 2
a2046 2
Miscellaneous Modules, Africa, Asia, Australasia, Europe, North America,
South America
d2085 2
d2089 2
d2108 1
a2108 1
=head2 perlform - Perl formats
d2110 1
a2110 1
=item DESCRIPTION
d2114 1
a2114 1
=item Format Variables
d2116 1
a2116 3
=back

=item NOTES
d2120 1
a2120 1
=item Footers
d2122 3
a2124 1
=item Accessing Formatting Internals
d2126 1
a2126 1
=back
d2128 1
a2128 1
=item WARNINGS
d2130 1
a2130 2
=head2 perllocale - Perl locale handling (internationalization and
localization)
d2132 1
a2132 1
=item DESCRIPTION
d2134 3
a2136 1
=item PREPARING TO USE LOCALES
d2138 1
a2138 1
=item USING LOCALES
d2140 46
a2185 1
=over
d2199 1
a2199 1
=item Permanently fixing your locale configuration
d2201 1
a2201 1
=item Permanently fixing system locale configuration
d2230 5
a2234 6
B<In-memory formatting function> (sprintf()):, B<Output formatting
functions> (printf() and write()):, B<Case-mapping functions> (lc(),
lcfirst(), uc(), ucfirst()):, B<POSIX locale-dependent functions>
(localeconv(), strcoll(),strftime(), strxfrm()):, B<POSIX character class
tests> (isalnum(), isalpha(), isdigit(),isgraph(), islower(), isprint(),
ispunct(), isspace(), isupper(),
d2239 2
a2240 2
PERL_BADLANG, LC_ALL, LC_CTYPE, LC_COLLATE, LC_MONETARY, LC_NUMERIC,
LC_TIME, LANG
d2274 2
d2278 4
d2304 42
d2348 2
d2367 1
a2367 1
=item LISTS OF LISTS
d2371 1
a2371 1
=item Declaration of a LIST OF LISTS
d2373 1
a2373 1
=item Generation of a LIST OF LISTS
d2375 1
a2375 1
=item Access and Printing of a LIST OF LISTS
d2379 1
a2379 1
=item HASHES OF LISTS
d2383 1
a2383 1
=item Declaration of a HASH OF LISTS
d2385 1
a2385 1
=item Generation of a HASH OF LISTS
d2387 1
a2387 1
=item Access and Printing of a HASH OF LISTS
d2391 1
a2391 1
=item LISTS OF HASHES
d2395 1
a2395 1
=item Declaration of a LIST OF HASHES
d2397 1
a2397 1
=item Generation of a LIST OF HASHES
d2399 1
a2399 1
=item Access and Printing of a LIST OF HASHES
d2433 5
a2437 1
=head2 perllol, perlLoL - Manipulating Lists of Lists in Perl
d2441 1
a2441 1
=item Declaration and Access of Lists of Lists
d2453 60
d2515 2
d2611 54
d2667 2
d2681 2
a2688 2
=item WARNING

d2697 2
d2701 2
d2739 2
d2743 2
d2769 2
d2774 2
d2848 29
d2879 2
d2890 3
a2892 3
[expr], E<lt>CRE<gt>, c [line|sub], l, l min+incr, l min-max, l line, l
subname, -, w [line], f filename, /pattern/, ?pattern?, L, S [[!]pattern],
t, t expr, b [line] [condition], b subname [condition], b postpone subname
d2894 7
a2900 1
command, A, W [expr], W, O [opt[=val]] [opt"val"] [opt?]..,
d2906 1
a2906 4
C<UsageOnly>, C<TTY>, C<noTTY>, C<ReadLine>, C<NonStop>, E<lt> [ command ],
E<lt>E<lt> command, E<gt> command, E<gt>E<gt> command, { [ command ], {{
command, ! number, ! -number, ! pattern, !! cmd, H -number, q or ^D, R,
|dbcmd, ||dbcmd, command, m expr, m package
d2910 2
a2911 1
Prompt, Multiline commands, Stack backtrace, Listing, Frame listing
d2923 3
a2925 1
=item Debugger support in perl
d2927 1
a2927 1
=item Debugger Internals
d2929 1
a2929 1
=item Other resources
d2935 1
a2935 1
=item Debugging Perl memory usage
d2939 20
a2958 1
=item Using C<$ENV{PERL_DEBUG_MSTATS}>
d2960 1
a2960 3
C<buckets SMALLEST(APPROX)..GREATEST(APPROX)>, Free/Used, C<Total sbrk():
SBRKed/SBRKs:CONTINUOUS>, C<pad: 0>, C<heads: 2192>, C<chain: 0>, C<tail:
6144>
d2962 1
a2962 1
=item Example of using B<-DL> switch
d2964 1
a2964 1
C<717>, C<002>, C<054>, C<602>, C<702>, C<704>
d2966 1
a2966 1
=item B<-DL> details
d2968 1
a2968 1
C<!!!>, C<!!>, C<!>
d2970 1
a2970 1
=item Limitations of B<-DL> statistic
d2974 2
d2993 1
a2993 1
=head2 perldiag - various Perl diagnostics
d2995 1
a2995 1
=item DESCRIPTION
d2997 1
a2997 1
=head2 perlsec - Perl security
d2999 33
a3031 1
=item DESCRIPTION
d3049 2
d3053 2
d3080 1
a3080 1
Discontinuance, Discontinuance, Deprecation, Discontinuance
d3088 1
a3088 1
Numerical, Numerical, Numerical
d3134 2
d3138 2
d3142 1
a3142 1
Not all Perl programs have to be portable, The vast majority of Perl B<is>
d3151 3
a3153 1
=item File Paths
d3165 4
d3177 1
a3177 1
=item CPAN TESTERS
d3180 1
a3180 1
C<http://www.connect.net/gbarr/cpan-test/>
d3190 1
a3190 6
The djgpp environment for DOS, C<http://www.delorie.com/djgpp/>, The EMX
environment for DOS, OS/2, etc.
C<emx@@iaehv.nl>,C<http://www.leo.org/pub/comp/os/os2/leo/gnu/emx+gcc/index.html>,
C<ftp://hobbes.nmsu.edu/pub/os2/dev/emx>.  Build instructions
for Win32, L<perlwin32>, The ActiveState Pages,
C<http://www.activestate.com/>
d3192 1
a3192 4
=item MacPerl

The MacPerl Pages, C<http://www.ptf.com/macperl/>, The MacPerl mailing
list, C<mac-perl-request@@iis.ee.ethz.ch>
d3196 1
a3196 2
L<perlvms.pod>, vmsperl list, C<vmsperl-request@@newman.upenn.edu>, vmsperl
on the web, C<http://www.sidhe.org/vmsperl/index.html>
d3200 1
a3200 1
perl-mvs list, AS/400 Perl information at C<http://as400.rochester.ibm.com>
a3203 3
Atari, Guido Flohr's page C<http://stud.uni-sb.de/~gufl0000/>, HP 300
MPE/iX  C<http://www.cccd.edu/~markb/perlix.html>, Novell Netware

d3212 25
a3236 23
-I<X> FILEHANDLE, -I<X> EXPR, -I<X>, binmode FILEHANDLE, chmod LIST, chown
LIST, chroot FILENAME, chroot, crypt PLAINTEXT,SALT, dbmclose HASH, dbmopen
HASH,DBNAME,MODE, dump LABEL, exec LIST, fcntl FILEHANDLE,FUNCTION,SCALAR,
flock FILEHANDLE,OPERATION, fork, getlogin, getpgrp PID, getppid,
getpriority WHICH,WHO, getpwnam NAME, getgrnam NAME, getnetbyname NAME,
getpwuid UID, getgrgid GID, getnetbyaddr ADDR,ADDRTYPE, getprotobynumber
NUMBER, getservbyport PORT,PROTO, getpwent, getgrent, gethostent,
getnetent, getprotoent, getservent, setpwent, setgrent, sethostent
STAYOPEN, setnetent STAYOPEN, setprotoent STAYOPEN, setservent STAYOPEN,
endpwent, endgrent, endhostent, endnetent, endprotoent, endservent,
getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob, ioctl
FILEHANDLE,FUNCTION,SCALAR, kill LIST, link OLDFILE,NEWFILE, lstat
FILEHANDLE, lstat EXPR, lstat, msgctl ID,CMD,ARG, msgget KEY,FLAGS, msgsnd
ID,MSG,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, open FILEHANDLE,EXPR, open
FILEHANDLE, pipe READHANDLE,WRITEHANDLE, readlink EXPR, readlink, select
RBITS,WBITS,EBITS,TIMEOUT, semctl ID,SEMNUM,CMD,ARG, semget
KEY,NSEMS,FLAGS, semop KEY,OPSTRING, setpgrp PID,PGRP, setpriority
WHICH,WHO,PRIORITY, setsockopt SOCKET,LEVEL,OPTNAME,OPTVAL, shmctl
ID,CMD,ARG, shmget KEY,SIZE,FLAGS, shmread ID,VAR,POS,SIZE, shmwrite
ID,STRING,POS,SIZE, socketpair SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, stat
FILEHANDLE, stat EXPR, stat, symlink OLDFILE,NEWFILE, syscall LIST, system
LIST, times, truncate FILEHANDLE,LENGTH, truncate EXPR,LENGTH, umask EXPR,
umask, utime LIST, wait, waitpid PID,FLAGS
d3240 13
d3257 2
d3261 2
d3265 2
d3269 2
d3293 2
d3297 2
d3301 2
d3305 2
d3347 2
d3351 2
d3381 2
d3385 2
d3475 5
a3479 1
=head2 perlxstut, perlXStut - Tutorial for XSUBs
d3483 2
d3487 9
a3495 1
=item VERSION CAVEAT
d3497 1
a3497 1
=item DYNAMIC VERSUS STATIC
d3503 1
a3503 1
=item WHAT HAS GONE ON?
d3505 1
a3505 1
=item WRITING GOOD TEST SCRIPTS
d3509 1
a3509 1
=item WHAT'S NEW HERE?
d3511 1
a3511 1
=item INPUT AND OUTPUT PARAMETERS
d3513 1
a3513 1
=item THE XSUBPP COMPILER
d3515 1
a3515 1
=item THE TYPEMAP FILE
d3517 1
a3517 1
=item WARNING
d3521 17
a3537 1
=item WHAT HAS HAPPENED HERE?
d3539 1
a3539 1
=item SPECIFYING ARGUMENTS TO XSUBPP
d3541 1
a3541 1
=item THE ARGUMENT STACK
d3543 1
a3543 1
=item EXTENDING YOUR EXTENSION
d3545 1
a3545 1
=item DOCUMENTING YOUR EXTENSION
d3547 1
a3547 1
=item INSTALLING YOUR EXTENSION
d3549 5
a3553 1
=item SEE ALSO
d3557 2
d3563 5
a3567 1
=head2 perlguts - Perl's Internal Functions
d3616 6
a3621 5
*key, I32 length)>, C<SAVEDESTRUCTOR(f,p)>, C<SAVESTACK_POS()>, C<SV*
save_scalar(GV *gv)>, C<AV* save_ary(GV *gv)>, C<HV* save_hash(GV *gv)>,
C<void save_item(SV *item)>, C<void save_list(SV **sarg, I32 maxsarg)>,
C<SV* save_svref(SV **sptr)>, C<void save_aptr(AV **aptr)>, C<void
save_hptr(HV **hptr)>
d3663 7
a3669 1
=item API LISTING
d3671 3
a3673 47
av_clear, av_extend, av_fetch, AvFILL, av_len, av_make, av_pop, av_push,
av_shift, av_store, av_undef, av_unshift, CLASS, Copy, croak, CvSTASH,
PL_DBsingle, PL_DBsub, PL_DBtrace, dMARK, dORIGMARK, PL_dowarn, dSP,
dXSARGS, dXSI32, do_binmode, ENTER, EXTEND, fbm_compile, fbm_instr,
FREETMPS, G_ARRAY, G_DISCARD, G_EVAL, GIMME, GIMME_V, G_NOARGS, G_SCALAR,
gv_fetchmeth, gv_fetchmethod, gv_fetchmethod_autoload, G_VOID, gv_stashpv,
gv_stashsv, GvSV, HEf_SVKEY, HeHASH, HeKEY, HeKLEN, HePV, HeSVKEY,
HeSVKEY_force, HeSVKEY_set, HeVAL, hv_clear, hv_delayfree_ent, hv_delete,
hv_delete_ent, hv_exists, hv_exists_ent, hv_fetch, hv_fetch_ent,
hv_free_ent, hv_iterinit, hv_iterkey, hv_iterkeysv, hv_iternext,
hv_iternextsv, hv_iterval, hv_magic, HvNAME, hv_store, hv_store_ent,
hv_undef, isALNUM, isALPHA, isDIGIT, isLOWER, isSPACE, isUPPER, items, ix,
LEAVE, looks_like_number, MARK, mg_clear, mg_copy, mg_find, mg_free,
mg_get, mg_len, mg_magical, mg_set, Move, PL_na, New, newAV, Newc,
newCONSTSUB, newHV, newRV_inc, newRV_noinc, NEWSV, newSViv, newSVnv,
newSVpv, newSVpvf, newSVpvn, newSVrv, newSVsv, newXS, newXSproto, Newz,
Nullav, Nullch, Nullcv, Nullhv, Nullsv, ORIGMARK, perl_alloc,
perl_call_argv, perl_call_method, perl_call_pv, perl_call_sv,
perl_construct, perl_destruct, perl_eval_sv, perl_eval_pv, perl_free,
perl_get_av, perl_get_cv, perl_get_hv, perl_get_sv, perl_parse,
perl_require_pv, perl_run, POPi, POPl, POPp, POPn, POPs, PUSHMARK, PUSHi,
PUSHn, PUSHp, PUSHs, PUSHu, PUTBACK, Renew, Renewc, RETVAL, safefree,
safemalloc, saferealloc, savepv, savepvn, SAVETMPS, SP, SPAGAIN, ST, strEQ,
strGE, strGT, strLE, strLT, strNE, strnEQ, strnNE, sv_2mortal, sv_bless,
sv_catpv, sv_catpv_mg, sv_catpvn, sv_catpvn_mg, sv_catpvf, sv_catpvf_mg,
sv_catsv, sv_catsv_mg, sv_chop, sv_cmp, SvCUR, SvCUR_set, sv_dec,
sv_derived_from, sv_derived_from, SvEND, sv_eq, SvGETMAGIC, SvGROW,
sv_grow, sv_inc, sv_insert, SvIOK, SvIOK_off, SvIOK_on, SvIOK_only, SvIOKp,
sv_isa, sv_isobject, SvIV, SvIVX, SvLEN, sv_len, sv_magic, sv_mortalcopy,
sv_newmortal, SvNIOK, SvNIOK_off, SvNIOKp, PL_sv_no, SvNOK, SvNOK_off,
SvNOK_on, SvNOK_only, SvNOKp, SvNV, SvNVX, SvOK, SvOOK, SvPOK, SvPOK_off,
SvPOK_on, SvPOK_only, SvPOKp, SvPV, SvPV_force, SvPVX, SvREFCNT,
SvREFCNT_dec, SvREFCNT_inc, SvROK, SvROK_off, SvROK_on, SvRV, SvSETMAGIC,
sv_setiv, sv_setiv_mg, sv_setnv, sv_setnv_mg, sv_setpv, sv_setpv_mg,
sv_setpviv, sv_setpviv_mg, sv_setpvn, sv_setpvn_mg, sv_setpvf,
sv_setpvf_mg, sv_setref_iv, sv_setref_nv, sv_setref_pv, sv_setref_pvn,
SvSetSV, SvSetSV_nosteal, sv_setsv, sv_setsv_mg, sv_setuv, sv_setuv_mg,
SvSTASH, SvTAINT, SvTAINTED, SvTAINTED_off, SvTAINTED_on, SVt_IV, SVt_PV,
SVt_PVAV, SVt_PVCV, SVt_PVHV, SVt_PVMG, SVt_NV, SvTRUE, SvTYPE, svtype,
PL_sv_undef, sv_unref, SvUPGRADE, sv_upgrade, sv_usepvn, sv_usepvn_mg,
sv_vcatpvfn(sv, pat, patlen, args, svargs, svmax, used_locale),
sv_vsetpvfn(sv, pat, patlen, args, svargs, svmax, used_locale), SvUV,
SvUVX, PL_sv_yes, THIS, toLOWER, toUPPER, warn, XPUSHi, XPUSHn, XPUSHp,
XPUSHs, XPUSHu, XS, XSRETURN, XSRETURN_EMPTY, XSRETURN_IV, XSRETURN_NO,
XSRETURN_NV, XSRETURN_PV, XSRETURN_UNDEF, XSRETURN_YES, XST_mIV, XST_mNV,
XST_mNO, XST_mPV, XST_mUNDEF, XST_mYES, XS_VERSION, XS_VERSION_BOOTCHECK,
Zero
d3677 4
d3683 2
d3689 1
a3689 1
=item THE PERL_CALL FUNCTIONS
d3691 1
a3691 1
B<perl_call_sv>, B<perl_call_pv>, B<perl_call_method>, B<perl_call_argv>
d3737 1
a3737 1
=item Using perl_call_sv
d3739 1
a3739 1
=item Using perl_call_argv
d3741 1
a3741 1
=item Using perl_call_method
d3765 1
a3765 1
=head2 perlhist - the Perl history records
d3767 1
a3767 1
=item DESCRIPTION
d3769 1
a3769 1
=item INTRODUCTION
d3771 1
a3771 1
=item THE KEEPERS OF THE PUMPKIN
d3775 3
a3777 1
=item PUMPKIN?
d3781 1
a3781 1
=item THE RECORDS
d3785 1
a3785 1
=item SELECTED RELEASE SIZES
d3787 1
a3787 1
=item SELECTED PATCH SIZES
d3789 1
a3789 1
=back
d3791 1
a3791 1
=item THE KEEPERS OF THE RECORDS
d3793 1
a3793 1
=head1 PRAGMA DOCUMENTATION
d3795 1
a3795 1
=head2 attrs - set/get attributes of a subroutine
d3797 1
a3797 1
=item SYNOPSIS
d3799 3
a3801 1
=item DESCRIPTION
d3803 1
a3803 1
method, locked
d3805 1
a3805 1
=head2 re - Perl pragma to alter regular expression behaviour
d3807 1
a3807 1
=item SYNOPSIS
d3809 1
a3809 1
=item DESCRIPTION
d3811 1
a3811 1
=head2 autouse - postpone load of modules until a function is used
d3813 1
a3813 1
=item SYNOPSIS
d3817 43
a3859 1
=item WARNING
d3861 1
a3861 1
=item AUTHOR
d3865 4
a3868 1
=head2 base - Establish IS-A relationship with base class at compile time
d3870 1
a3870 1
=item SYNOPSIS
d3874 2
d3878 3
a3880 1
=head2 blib - Use MakeMaker's uninstalled version of a package
d3882 1
a3882 1
=item SYNOPSIS
d3886 9
a3894 1
=item BUGS
d3896 1
a3896 1
=item AUTHOR
d3898 1
a3898 1
=head2 constant - Perl pragma to declare constants
d3900 1
a3900 1
=item SYNOPSIS
d3902 1
a3902 1
=item DESCRIPTION
d3904 1
a3904 1
=item NOTES
d3906 1
a3906 1
=item TECHNICAL NOTE
d3908 1
a3908 1
=item BUGS
d3910 1
a3910 1
=item AUTHOR
d3912 1
a3912 1
=item COPYRIGHT
d3914 1
a3914 2
=head2 diagnostics - Perl compiler pragma to force verbose warning
diagnostics
d3920 1
a3920 1
=over
d3922 1
a3922 1
=item The C<diagnostics> Pragma
d3924 1
a3924 1
=item The I<splain> Program
d3926 1
a3926 1
=back
d3928 1
a3928 1
=item EXAMPLES
d3930 1
a3930 1
=item INTERNALS
d3932 1
a3932 1
=item BUGS
d3934 1
a3934 1
=item AUTHOR
d3936 1
a3936 1
=head2 fields - compile-time class fields
d3942 1
a3942 1
=item SEE ALSO
d3944 1
a3944 2
=head2 integer - Perl pragma to compute arithmetic in integer instead of
double
d3946 1
a3946 1
=item SYNOPSIS
d3948 1
a3948 1
=item DESCRIPTION
d3950 1
a3950 1
=head2 less - perl pragma to request less of something from the compiler
d3952 1
a3952 1
=item SYNOPSIS
d3954 1
a3954 1
=item DESCRIPTION
d3956 1
a3956 1
=head2 lib - manipulate @@INC at compile time
d3958 1
a3958 1
=item SYNOPSIS
d3960 1
a3960 1
=item DESCRIPTION
d3964 1
a3964 1
=item ADDING DIRECTORIES TO @@INC
d3966 1
a3966 1
=item DELETING DIRECTORIES FROM @@INC
d3968 1
a3968 1
=item RESTORING ORIGINAL @@INC
d3972 2
d3976 3
a3978 1
=item AUTHOR
d3980 1
a3980 2
=head2 locale - Perl pragma to use and avoid POSIX locales for built-in
operations
d3986 1
a3986 1
=head2 overload - Package for overloading perl operations
d3988 1
a3988 1
=item SYNOPSIS
d3990 1
a3990 3
=item CAVEAT SCRIPTOR

=item DESCRIPTION
d3994 1
a3994 1
=item Declaration of overloaded functions
d3996 1
a3996 1
=item Calling Conventions for Binary Operations
d3998 1
a3998 1
FALSE, TRUE, C<undef>
d4000 1
a4000 1
=item Calling Conventions for Unary Operations
d4002 1
a4002 10
=item Overloadable Operations

I<Arithmetic operations>, I<Comparison operations>, I<Bit operations>,
I<Increment and decrement>, I<Transcendental functions>, I<Boolean, string
and numeric conversion>, I<Special>

=item Inheritance and overloading

Strings as values of C<use overload> directive, Overloading of an operation
is inherited by derived classes
d4006 1
a4006 1
=item SPECIAL SYMBOLS FOR C<use overload>
d4010 3
a4012 1
=item Last Resort
d4014 1
a4014 1
=item Fallback 
d4016 1
a4016 1
C<undef>, TRUE, defined, but FALSE
d4018 1
a4018 1
=item Copy Constructor
d4020 1
a4020 1
B<Example>
d4022 1
a4022 1
=back
d4024 1
a4024 1
=item MAGIC AUTOGENERATION
d4026 1
a4026 3
I<Assignment forms of arithmetic operations>, I<Conversion operations>,
I<Increment and decrement>, C<abs($a)>, I<Unary minus>, I<Negation>,
I<Concatenation>, I<Comparison operations>, I<Copy operator>
d4028 1
a4028 1
=item WARNING
d4030 1
a4030 1
=item Run-time Overloading
d4032 1
a4032 1
=item Public functions
d4034 2
a4035 1
overload::StrVal(arg), overload::Overloaded(arg), overload::Method(obj,op)
d4037 1
a4037 1
=item Overloading constants
d4039 1
a4039 1
integer, float, binary, q, qr
d4041 1
a4041 1
=item IMPLEMENTATION
d4043 1
a4043 1
=item AUTHOR
d4045 1
a4045 1
=item DIAGNOSTICS
d4047 2
a4048 1
=item BUGS
d4050 1
a4050 1
=head2 sigtrap - Perl pragma to enable simple signal handling
d4056 7
a4062 1
=item OPTIONS
d4066 3
a4068 1
=item SIGNAL HANDLERS
d4070 1
a4070 1
B<stack-trace>, B<die>, B<handler> I<your-handler>
d4072 1
a4072 1
=item SIGNAL LISTS
d4074 1
a4074 1
B<normal-signals>, B<error-signals>, B<old-interface-signals>
d4076 1
a4076 1
=item OTHER
d4078 1
a4078 1
B<untrapped>, B<any>, I<signal>, I<number>
d4082 2
a4083 1
=item EXAMPLES
d4085 1
a4085 1
=head2 strict - Perl pragma to restrict unsafe constructs
d4091 5
a4095 1
C<strict refs>, C<strict vars>, C<strict subs>
d4097 1
a4097 1
=head2 subs - Perl pragma to predeclare sub names
d4099 1
a4099 1
=item SYNOPSIS
d4101 1
a4101 1
=item DESCRIPTION
d4103 1
a4103 1
=head2 vars - Perl pragma to predeclare global variable names
d4105 1
a4105 1
=item SYNOPSIS
d4107 1
a4107 1
=item DESCRIPTION
d4109 1
a4109 1
=head1 MODULE DOCUMENTATION
d4111 1
a4111 1
=head2 AnyDBM_File - provide framework for multiple DBMs
d4117 1
a4117 1
=over
d4119 1
a4119 3
=item DBM Comparisons

[0], [1], [2], [3]
d4123 1
a4123 1
=item SEE ALSO
d4125 1
a4125 1
=head2 AutoLoader - load subroutines only on demand
d4133 5
a4137 1
=item Subroutine Stubs
d4139 2
a4140 1
=item Using B<AutoLoader>'s AUTOLOAD Subroutine
d4142 1
a4142 1
=item Overriding B<AutoLoader>'s AUTOLOAD Subroutine
d4144 1
a4144 1
=item Package Lexicals
d4146 1
a4146 1
=item B<AutoLoader> vs. B<SelfLoader>
d4150 1
a4150 1
=item CAVEATS
d4152 1
a4152 3
=item SEE ALSO

=head2 AutoSplit - split a package for autoloading
d4158 3
a4160 1
$keep, $check, $modtime
d4164 1
a4164 1
=item Multiple packages
d4166 1
a4166 1
=back
d4168 1
a4168 1
=item DIAGNOSTICS
d4170 1
a4170 1
=head2 B - The Perl Compiler
d4172 1
a4172 1
=item SYNOPSIS
d4174 1
a4174 1
=item DESCRIPTION
d4176 1
a4176 1
=item OVERVIEW OF CLASSES
d4178 1
a4178 1
=over
d4180 1
a4180 1
=item SV-RELATED CLASSES
d4182 1
a4182 1
=item B::SV METHODS
d4184 2
a4185 1
REFCNT, FLAGS
d4187 1
a4187 1
=item B::IV METHODS
d4189 1
a4189 1
IV, IVX, needs64bits, packiv
d4191 1
a4191 1
=item B::NV METHODS
d4193 1
a4193 1
NV, NVX
d4195 1
a4195 1
=item B::RV METHODS
d4197 1
a4197 1
RV
d4199 1
a4199 1
=item B::PV METHODS
d4201 1
a4201 1
PV
d4203 1
a4203 1
=item B::PVMG METHODS
d4205 1
a4205 1
MAGIC, SvSTASH
d4207 1
a4207 1
=item B::MAGIC METHODS
d4209 1
a4209 1
MOREMAGIC, PRIVATE, TYPE, FLAGS, OBJ, PTR
d4211 1
a4211 1
=item B::PVLV METHODS
d4213 1
a4213 1
TARGOFF, TARGLEN, TYPE, TARG
d4215 1
a4215 1
=item B::BM METHODS
d4217 1
a4217 1
USEFUL, PREVIOUS, RARE, TABLE
d4219 1
a4219 1
=item B::GV METHODS
d4221 1
a4221 2
NAME, STASH, SV, IO, FORM, AV, HV, EGV, CV, CVGEN, LINE, FILEGV, GvREFCNT,
FLAGS
d4223 1
a4223 1
=item B::IO METHODS
d4225 1
a4225 2
LINES, PAGE, PAGE_LEN, LINES_LEFT, TOP_NAME, TOP_GV, FMT_NAME, FMT_GV,
BOTTOM_NAME, BOTTOM_GV, SUBPROCESS, IoTYPE, IoFLAGS
d4227 1
a4227 1
=item B::AV METHODS
d4229 1
a4229 1
FILL, MAX, OFF, ARRAY, AvFLAGS
d4231 1
a4231 1
=item B::CV METHODS
d4233 1
a4233 1
STASH, START, ROOT, GV, FILEGV, DEPTH, PADLIST, OUTSIDE, XSUB, XSUBANY
d4235 1
a4235 1
=item B::HV METHODS
d4237 1
a4237 1
FILL, MAX, KEYS, RITER, NAME, PMROOT, ARRAY
d4239 1
a4239 1
=item OP-RELATED CLASSES
d4241 1
a4241 1
=item B::OP METHODS
d4243 1
a4243 1
next, sibling, ppaddr, desc, targ, type, seq, flags, private
d4245 3
a4247 1
=item B::UNOP METHOD
d4249 1
a4249 1
first
d4251 2
a4252 1
=item B::BINOP METHOD
d4254 1
a4254 1
last
d4256 1
a4256 1
=item B::LOGOP METHOD
d4258 1
a4258 1
other
d4260 1
a4260 1
=item B::CONDOP METHODS
d4262 1
a4262 1
true, false
d4264 1
a4264 1
=item B::LISTOP METHOD
d4266 1
a4266 1
children
d4268 1
a4268 1
=item B::PMOP METHODS
d4270 1
a4270 1
pmreplroot, pmreplstart, pmnext, pmregexp, pmflags, pmpermflags, precomp
d4272 1
a4272 1
=item B::SVOP METHOD
d4274 4
a4277 1
sv
d4279 1
a4279 1
=item B::GVOP METHOD
d4281 1
a4281 1
gv
d4283 1
a4283 1
=item B::PVOP METHOD
d4285 1
a4285 1
pv
d4287 1
a4287 1
=item B::LOOP METHODS
d4289 1
a4289 1
redoop, nextop, lastop
d4291 1
a4291 1
=item B::COP METHODS
d4293 1
a4293 1
label, stash, filegv, cop_seq, arybase, line
d4295 1
a4295 1
=back
d4297 1
a4297 1
=item FUNCTIONS EXPORTED BY C<B>
d4299 1
a4299 4
main_cv, main_root, main_start, comppadlist, sv_undef, sv_yes, sv_no,
walkoptree(OP, METHOD), walkoptree_debug(DEBUG), walksymtable(SYMREF,
METHOD, RECURSE), svref_2object(SV), ppname(OPNUM), hash(STR), cast_I32(I),
minus_c, cstring(STR), class(OBJ), threadsv_names, byteload_fh(FILEHANDLE)
d4301 1
a4301 1
=item AUTHOR
d4303 1
a4303 2
=head2 B::Asmdata - Autogenerated data about Perl ops, used to generate
bytecode
d4305 1
a4305 1
=item SYNOPSIS
d4307 1
a4307 1
=item DESCRIPTION
d4311 1
a4311 1
=head2 B::Assembler - Assemble Perl bytecode
d4313 1
a4313 1
=item SYNOPSIS
d4315 1
a4315 1
=item DESCRIPTION
d4317 1
a4317 1
=item AUTHOR
d4319 1
a4319 1
=head2 B::Bblock - Walk basic blocks
d4325 3
a4327 1
=item AUTHOR
d4329 1
a4329 1
=head2 B::Bytecode - Perl compiler's bytecode backend
d4337 1
a4337 3
B<-ofilename>, B<-->, B<-f>, B<-fcompress-nullops>,
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-fstrip-syntax-tree>,
B<-On>, B<-D>, B<-Do>, B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-m>
d4339 1
a4339 1
=item BUGS
d4341 1
a4341 1
=item AUTHOR
d4343 1
a4343 1
=head2 B::C - Perl compiler's C backend
d4345 1
a4345 1
=item SYNOPSIS
d4347 1
a4347 1
=item DESCRIPTION
d4349 1
a4349 1
=item OPTIONS
d4351 1
a4351 2
B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-D>, B<-Do>, B<-Dc>, B<-DA>,
B<-DC>, B<-DM>, B<-f>, B<-fcog>, B<-fno-cog>, B<-On>
d4355 1
a4355 1
=item BUGS
d4357 1
a4357 1
=item AUTHOR
d4359 1
a4359 1
=head2 B::CC - Perl compiler's optimized C translation backend
d4365 7
a4371 1
=item OPTIONS
d4373 1
a4373 3
B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-mModulename>, B<-D>, B<-Dr>,
B<-DO>, B<-Ds>, B<-Dp>, B<-Dq>, B<-Dl>, B<-Dt>, B<-f>,
B<-ffreetmps-each-bblock>, B<-ffreetmps-each-loop>, B<-fomit-taint>, B<-On>
d4375 1
a4375 1
=item EXAMPLES
d4377 1
a4377 1
=item BUGS
d4379 1
a4379 1
=item DIFFERENCES
d4383 1
a4383 1
=item Loops
d4385 1
a4385 1
=item Context of ".."
d4387 1
a4387 3
=item Arithmetic

=item Deprecated features
d4391 1
a4391 1
=item AUTHOR
d4393 1
a4393 1
=head2 B::Debug - Walk Perl syntax tree, printing debug info about ops
d4399 3
a4401 1
=item AUTHOR
d4403 1
a4403 1
=head2 B::Deparse - Perl compiler backend to produce perl code
d4409 2
a4410 1
=item OPTIONS
d4412 1
a4412 1
B<-p>, B<-u>I<PACKAGE>, B<-l>, B<-s>I<LETTERS>, B<C>
d4414 1
a4414 1
=item BUGS
d4416 1
a4416 1
=item AUTHOR
d4418 1
a4418 1
=head2 B::Disassembler - Disassemble Perl bytecode
d4424 1
a4424 1
=item AUTHOR
d4426 1
a4426 1
=head2 B::Lint - Perl lint
d4428 1
a4428 1
=item SYNOPSIS
d4430 1
a4430 1
=item DESCRIPTION
d4432 1
a4432 1
=item OPTIONS AND LINT CHECKS
d4434 1
a4434 2
B<context>, B<implicit-read> and B<implicit-write>, B<dollar-underscore>,
B<private-names>, B<undefined-subs>, B<regexp-variables>, B<all>, B<none>
d4436 1
a4436 1
=item NON LINT-CHECK OPTIONS
d4438 1
a4438 7
B<-u Package>

=item BUGS

=item AUTHOR

=head2 B::O, O - Generic interface to Perl Compiler backends
d4444 1
a4444 1
=item CONVENTIONS
d4446 1
a4446 1
=item IMPLEMENTATION
d4448 1
a4448 1
=item AUTHOR
d4450 1
a4450 1
=head2 B::Showlex - Show lexical variables used in functions or files
d4452 1
a4452 1
=item SYNOPSIS
d4454 1
a4454 1
=item DESCRIPTION
d4456 1
a4456 1
=item AUTHOR
d4458 1
a4458 1
=head2 B::Stackobj - Helper module for CC backend
d4460 1
a4460 1
=item SYNOPSIS
d4462 1
a4462 1
=item DESCRIPTION
d4464 1
a4464 1
=item AUTHOR
d4466 1
a4466 1
=head2 B::Terse - Walk Perl syntax tree, printing terse info about ops
d4472 1
a4472 1
=item AUTHOR
d4474 1
a4474 1
=head2 B::Xref - Generates cross reference reports for Perl programs
d4476 1
a4476 1
=item SYNOPSIS
d4478 1
a4478 1
=item DESCRIPTION
d4480 1
a4480 1
=item OPTIONS
d4482 1
a4482 1
C<-oFILENAME>, C<-r>, C<-D[tO]>
d4484 1
a4484 1
=item BUGS
d4486 1
a4486 3
=item AUTHOR

=head2 Benchmark - benchmark running times of code
d4492 2
d4496 5
a4500 1
=item Methods
d4502 1
a4502 1
new, debug
d4504 1
a4504 1
=item Standard Exports
d4506 1
a4506 3
timeit(COUNT, CODE), timethis ( COUNT, CODE, [ TITLE, [ STYLE ]] ),
timethese ( COUNT, CODEHASHREF, [ STYLE ] ), timediff ( T1, T2 ), timestr (
TIMEDIFF, [ STYLE, [ FORMAT ] ] )
d4508 1
a4508 1
=item Optional Exports
d4510 1
a4510 1
clearcache ( COUNT ), clearallcache ( ), disablecache ( ), enablecache ( )
d4512 1
a4512 1
=back
d4514 1
a4514 1
=item NOTES
d4516 1
a4516 1
=item INHERITANCE
d4518 1
a4518 1
=item CAVEATS
d4520 1
a4520 1
=item AUTHORS
d4522 1
a4522 1
=item MODIFICATION HISTORY
d4524 1
a4524 1
=head2 CGI - Simple Common Gateway Interface Class
d4526 1
a4526 1
=item SYNOPSIS
d4528 1
a4528 1
=item ABSTRACT
d4530 1
a4530 1
=item DESCRIPTION
d4532 1
a4532 1
=over
d4534 1
a4534 1
=item PROGRAMMING STYLE
d4536 2
a4537 1
=item CALLING CGI.PM ROUTINES
d4539 1
a4539 3
1. Use another name for the argument, if one is available.  Forexample,
-value is an alias for -values, 2. Change the capitalization, e.g. -Values,
3. Put quotes around the argument name, e.g. '-values'
d4541 2
a4542 1
=item CREATING A NEW QUERY OBJECT (OBJECT-ORIENTED STYLE):
d4544 1
a4544 1
=item CREATING A NEW QUERY OBJECT FROM AN INPUT FILE
d4546 1
a4546 1
=item FETCHING A LIST OF KEYWORDS FROM THE QUERY:
d4548 1
a4548 1
=item FETCHING THE NAMES OF ALL THE PARAMETERS PASSED TO YOUR SCRIPT:
d4550 2
a4551 1
=item FETCHING THE VALUE OR VALUES OF A SINGLE NAMED PARAMETER:
d4553 1
a4553 1
=item SETTING THE VALUE(S) OF A NAMED PARAMETER:
d4555 1
a4555 1
=item APPENDING ADDITIONAL VALUES TO A NAMED PARAMETER:
d4557 1
a4557 1
=item IMPORTING ALL PARAMETERS INTO A NAMESPACE:
d4559 1
a4559 1
=item DELETING A PARAMETER COMPLETELY:
d4561 1
a4561 1
=item DELETING ALL PARAMETERS:
d4563 1
a4563 1
=item DIRECT ACCESS TO THE PARAMETER LIST:
d4565 1
a4565 1
=item SAVING THE STATE OF THE SCRIPT TO A FILE:
d4567 1
a4567 1
=item USING THE FUNCTION-ORIENTED INTERFACE
d4569 1
a4569 2
B<:cgi>, B<:form>, B<:html2>, B<:html3>, B<:netscape>, B<:html>,
B<:standard>, B<:all>
d4571 1
a4571 1
=item PRAGMAS
d4573 1
a4573 1
-any, -compile, -nph, -autoload, -no_debug, -private_tempfiles
d4575 1
a4575 1
=back
d4577 1
a4577 1
=item GENERATING DYNAMIC DOCUMENTS
d4579 1
a4579 1
=over
d4581 1
a4581 1
=item CREATING A STANDARD HTTP HEADER:
d4583 1
a4583 1
=item GENERATING A REDIRECTION HEADER
d4585 1
a4585 1
=item CREATING THE HTML DOCUMENT HEADER
d4587 1
a4587 1
B<Parameters:>, 4, 5, 6..
d4589 1
a4589 1
=item ENDING THE HTML DOCUMENT:
d4591 1
a4591 1
=item CREATING A SELF-REFERENCING URL THAT PRESERVES STATE INFORMATION:
d4593 1
a4593 1
=item OBTAINING THE SCRIPT'S URL
d4595 1
a4595 2
B<-absolute>, B<-relative>, B<-full>, B<-path> (B<-path_info>), B<-query>
(B<-query_string>)
d4597 1
a4597 1
=back
d4599 1
a4599 1
=item CREATING STANDARD HTML ELEMENTS:
d4601 1
a4601 1
=over
d4603 1
a4603 1
=item PROVIDING ARGUMENTS TO HTML SHORTCUTS
d4605 1
a4605 1
=item THE DISTRIBUTIVE PROPERTY OF HTML SHORTCUTS
d4607 4
a4610 1
=item HTML SHORTCUTS AND LIST INTERPOLATION
d4612 1
a4612 1
=item NON-STANDARD HTML SHORTCUTS
d4616 2
a4617 1
=item CREATING FILL-OUT FORMS:
d4621 1
a4621 1
=item CREATING AN ISINDEX TAG
d4623 1
a4623 1
=item STARTING AND ENDING A FORM
d4625 1
a4625 1
B<application/x-www-form-urlencoded>, B<multipart/form-data>
d4627 1
a4627 1
=item CREATING A TEXT FIELD
d4629 1
a4629 1
B<Parameters>
d4631 1
a4631 1
=item CREATING A BIG TEXT FIELD
d4633 1
a4633 1
=item CREATING A PASSWORD FIELD
d4635 1
a4635 1
=item CREATING A FILE UPLOAD FIELD
d4637 1
a4637 1
B<Parameters>
d4639 1
a4639 1
=item CREATING A POPUP MENU
d4641 1
a4641 1
=item CREATING A SCROLLING LIST
d4643 1
a4643 1
B<Parameters:>
d4645 1
a4645 1
=item CREATING A GROUP OF RELATED CHECKBOXES
d4647 1
a4647 1
B<Parameters:>
d4649 1
a4649 1
=item CREATING A STANDALONE CHECKBOX
d4651 1
a4651 1
B<Parameters:>
d4653 1
a4653 1
=item CREATING A RADIO BUTTON GROUP
d4655 1
a4655 1
B<Parameters:>
d4657 1
a4657 1
=item CREATING A SUBMIT BUTTON 
d4659 1
a4659 1
B<Parameters:>
d4661 1
a4661 1
=item CREATING A RESET BUTTON
d4663 3
a4665 1
=item CREATING A DEFAULT BUTTON
d4667 1
a4667 1
=item CREATING A HIDDEN FIELD
d4669 1
a4669 1
B<Parameters:>
d4671 1
a4671 7
=item CREATING A CLICKABLE IMAGE BUTTON

B<Parameters:>, 3.The third option (-align, optional) is an alignment type,
and may be
TOP, BOTTOM or MIDDLE

=item CREATING A JAVASCRIPT ACTION BUTTON
d4675 1
a4675 14
=item NETSCAPE COOKIES

1. an expiration time, 2. a domain, 3. a path, 4. a "secure" flag,
B<-name>, B<-value>, B<-path>, B<-domain>, B<-expires>, B<-secure>

=item WORKING WITH NETSCAPE FRAMES

1. Create a <Frameset> document, 2. Specify the destination for the
document in the HTTP header, 3. Specify the destination for the document in
the <FORM> tag

=item LIMITED SUPPORT FOR CASCADING STYLE SHEETS

=item DEBUGGING
d4679 1
a4679 1
=item DUMPING OUT ALL THE NAME/VALUE PAIRS
d4681 1
a4681 1
=back
d4683 1
a4683 1
=item FETCHING ENVIRONMENT VARIABLES
d4685 2
a4686 6
B<accept()>, B<raw_cookie()>, B<user_agent()>, B<path_info()>,
B<path_translated()>, B<remote_host()>, B<script_name()>Return the script
name as a partial URL, for self-refering
scripts, B<referer()>, B<auth_type ()>, B<server_name ()>, B<virtual_host
()>, B<server_software ()>, B<remote_user ()>, B<user_name ()>,
B<request_method()>
d4688 1
a4688 1
=item USING NPH SCRIPTS
d4690 1
a4690 2
In the B<use> statement, By calling the B<nph()> method:, By using B<-nph>
parameters in the B<header()> and B<redirect()>  statements:
d4692 1
a4692 1
=item Server Push
d4694 1
a4694 2
multipart_init()     
multipart_init(-boundary=>$boundary);, multipart_start(), multipart_end()
d4696 1
a4696 1
=item Avoiding Denial of Service Attacks
d4698 1
a4698 2
B<$CGI::POST_MAX>, B<$CGI::DISABLE_UPLOADS>, B<1. On a script-by-script
basis>, B<2. Globally for all scripts>
d4700 1
a4700 1
=item COMPATIBILITY WITH CGI-LIB.PL
d4702 1
a4702 1
=item AUTHOR INFORMATION
d4704 1
a4704 1
=item CREDITS
d4706 3
a4708 12
Matt Heffron (heffron@@falstaff.css.beckman.com), James Taylor
(james.taylor@@srs.gov), Scott Anguish <sanguish@@digifix.com>, Mike Jewell
(mlj3u@@virginia.edu), Timothy Shimmin (tes@@kbs.citri.edu.au), Joergen Haegg
(jh@@axis.se), Laurent Delfosse (delfosse@@csgrad1.cs.wvu.edu), Richard
Resnick (applepi1@@aol.com), Craig Bishop (csb@@barwonwater.vic.gov.au), Tony
Curtis (tc@@vcpc.univie.ac.at), Tim Bunce (Tim.Bunce@@ig.co.uk), Tom
Christiansen (tchrist@@convex.com), Andreas Koenig
(k@@franz.ww.TU-Berlin.DE), Tim MacKenzie (Tim.MacKenzie@@fulcrum.com.au),
Kevin B. Hendricks (kbhend@@dogwood.tyler.wm.edu), Stephen Dahmen
(joyfire@@inxpress.net), Ed Jordan (ed@@fidalgo.net), David Alan Pisoni
(david@@cnation.com), Doug MacEachern (dougm@@opengroup.org), Robin Houston
(robin@@oneworld.org), ...and many many more..
d4710 1
a4710 1
=item A COMPLETE EXAMPLE OF A SIMPLE FORM-BASED SCRIPT
d4714 1
a4714 1
=item SEE ALSO
d4716 1
a4716 1
=head2 CGI::Apache - Make things work with CGI.pm against Perl-Apache API
d4718 1
a4718 1
=item SYNOPSIS
d4720 1
a4720 1
=item DESCRIPTION
d4722 1
a4722 1
=item NOTE 1
d4724 1
a4724 1
=item NOTE 2
d4726 1
a4726 1
=item SEE ALSO
d4730 5
a4734 2
=head2 CGI::Carp, B<CGI::Carp> - CGI routines for writing to the HTTPD (or
other) error log
d4740 1
a4740 7
=item REDIRECTING ERROR MESSAGES

=item MAKING PERL ERRORS APPEAR IN THE BROWSER WINDOW

=over

=item Changing the default message
d4744 1
a4744 1
=item CHANGE LOG
d4746 1
a4746 5
=item AUTHORS

=item SEE ALSO

=head2 CGI::Cookie - Interface to Netscape Cookies
d4752 4
a4755 1
=item USING CGI::Cookie
d4757 1
a4757 1
B<1. expiration date>, B<2. domain>, B<3. path>, B<4. secure flag>
d4761 1
a4761 3
=item Creating New Cookies

=item Sending the Cookie to the Browser
d4763 1
a4763 1
=item Recovering Previous Cookies
d4765 1
a4765 1
=item Manipulating Cookies
d4767 1
a4767 1
B<name()>, B<value()>, B<domain()>, B<path()>, B<expires()>
d4771 3
a4773 1
=item AUTHOR INFORMATION
d4775 1
a4775 1
=item BUGS
d4777 1
a4777 1
=item SEE ALSO
d4779 1
a4779 1
=head2 CGI::Fast - CGI Interface for Fast CGI
d4785 1
a4785 1
=item OTHER PIECES OF THE PUZZLE
d4787 1
a4787 1
=item WRITING FASTCGI PERL SCRIPTS
d4789 1
a4789 1
=item INSTALLING FASTCGI SCRIPTS
d4791 1
a4791 11
=item USING FASTCGI SCRIPTS AS CGI SCRIPTS

=item CAVEATS

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=head2 CGI::Push - Simple Interface to Server Push
d4797 4
a4800 1
=item USING CGI::Push
d4802 1
a4802 1
-next_page, -last_page, -type, -delay, -cookie, -target, -expires
d4804 1
a4804 1
=over
d4806 1
a4806 1
=item Heterogeneous Pages
d4808 1
a4808 1
=item Changing the Page Delay on the Fly
d4812 1
a4812 1
=item INSTALLING CGI::Push SCRIPTS
d4814 1
a4814 10
=item CAVEATS

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=head2 CGI::Switch - Try more than one constructors and return the first
object available
d4820 3
a4822 1
=item SEE ALSO
d4826 1
a4826 1
=head2 CPAN - query, download and build perl modules from CPAN sites
d4828 1
a4828 3
=item SYNOPSIS

=item DESCRIPTION
d4832 1
a4832 1
=item Interactive Mode
d4834 1
a4834 3
Searching for authors, bundles, distribution files and modules, make, test,
install, clean	modules or distributions, readme, look module or
distribution, Signals
d4836 1
a4836 1
=item CPAN::Shell
d4838 1
a4838 1
=item autobundle
d4840 1
a4840 1
=item recompile
d4842 1
a4842 1
=item The four C<CPAN::*> Classes: Author, Bundle, Module, Distribution
d4844 1
a4844 1
=item ProgrammerE<39>s interface
d4846 1
a4846 1
expand($type,@@things), Programming Examples
d4848 1
a4848 1
=item Methods in the four
d4850 1
a4850 1
=item Cache Manager
d4852 1
a4852 1
=item Bundles
d4854 1
a4854 1
=item Prerequisites
d4856 1
a4856 1
=item Finding packages and VERSION
d4858 1
a4858 1
=item Debugging
d4860 1
a4860 1
=item Floppy, Zip, and all that Jazz
d4864 1
a4864 6
=item CONFIGURATION

o conf E<lt>scalar optionE<gt>, o conf E<lt>scalar optionE<gt>
E<lt>valueE<gt>, o conf E<lt>list optionE<gt>, o conf E<lt>list optionE<gt>
[shift|pop], o conf E<lt>list optionE<gt> [unshift|push|splice]
E<lt>listE<gt>
d4868 1
a4868 1
=item CD-ROM support
d4870 1
a4870 1
=back
d4872 1
a4872 1
=item SECURITY
d4874 1
a4874 1
=item EXPORT
d4880 3
a4882 1
=item SEE ALSO
d4884 1
a4884 1
=head2 CPAN::FirstTime - Utility for CPAN::Config file Initialization
d4890 1
a4890 2
=head2 CPANox, CPAN::Nox - Wrapper around CPAN.pm without using any XS
module
d4892 1
a4892 1
=item SYNOPSIS
d4894 1
a4894 1
=item DESCRIPTION
d4896 1
a4896 3
=item  SEE ALSO

=head2 Carp, carp    - warn of errors (from perspective of caller)
d4904 1
a4904 1
=item Forcing a Stack Trace
d4906 1
a4906 1
=back
d4908 1
a4908 1
=head2 Class::Struct - declare struct-like datatypes as Perl classes
d4910 3
a4912 1
=item SYNOPSIS
d4914 1
a4914 1
=item DESCRIPTION
d4916 3
a4918 1
=over
d4920 1
a4920 1
=item The C<struct()> function
d4922 1
a4922 1
=item Element Types and Accessor Methods
d4924 1
a4924 2
Scalar (C<'$'> or C<'*$'>), Array (C<'@@'> or C<'*@@'>), Hash (C<'%'> or
C<'*%'>), Class (C<'Class_Name'> or C<'*Class_Name'>)
d4926 1
a4926 1
=back
d4928 1
a4928 1
=item EXAMPLES
d4930 1
a4930 1
Example 1, Example 2
d4932 1
a4932 1
=item Author and Modification History
d4934 1
a4934 1
=head2 Cwd, getcwd - get pathname of current working directory
d4936 1
a4936 1
=item SYNOPSIS
d4938 1
a4938 1
=item DESCRIPTION
d4940 1
a4940 1
=head2 DB_File - Perl5 access to Berkeley DB version 1.x
d4946 3
a4948 1
B<DB_HASH>, B<DB_BTREE>, B<DB_RECNO>
d4950 1
a4950 1
=over
d4952 1
a4952 1
=item Using DB_File with Berkeley DB version 2
d4954 1
a4954 1
=item Interface to Berkeley DB
d4956 1
a4956 1
=item Opening a Berkeley DB Database File
d4958 1
a4958 1
=item Default Parameters
d4960 1
a4960 1
=item In Memory Databases
d4962 3
a4964 1
=back
d4966 1
a4966 1
=item DB_HASH
d4968 1
a4968 1
=over
d4970 1
a4970 1
=item A Simple Example
d4974 1
a4974 1
=item DB_BTREE
d4978 1
a4978 1
=item Changing the BTREE sort order
d4980 1
a4980 1
=item Handling Duplicate Keys 
d4982 1
a4982 1
=item The get_dup() Method
d4984 1
a4984 1
=item Matching Partial Keys 
d4986 1
a4986 1
=back
d4988 1
a4988 1
=item DB_RECNO
d4990 3
a4992 1
=over
d4994 1
a4994 1
=item The 'bval' Option
d4996 1
a4996 1
=item A Simple Example
d4998 1
a4998 1
=item Extra Methods
d5000 1
a5000 2
B<$X-E<gt>push(list) ;>, B<$value = $X-E<gt>pop ;>, B<$X-E<gt>shift>,
B<$X-E<gt>unshift(list) ;>, B<$X-E<gt>length>
d5002 1
a5002 1
=item Another Example
d5004 1
a5004 1
=back
d5006 1
a5006 1
=item THE API INTERFACE
d5008 1
a5008 4
B<$status = $X-E<gt>get($key, $value [, $flags]) ;>, B<$status =
$X-E<gt>put($key, $value [, $flags]) ;>, B<$status = $X-E<gt>del($key [,
$flags]) ;>, B<$status = $X-E<gt>fd ;>, B<$status = $X-E<gt>seq($key,
$value, $flags) ;>, B<$status = $X-E<gt>sync([$flags]) ;>
d5010 1
a5010 1
=item HINTS AND TIPS 
d5012 1
a5012 1
=over
d5014 1
a5014 1
=item Locking Databases
d5016 1
a5016 1
=item Sharing Databases With C Applications
d5018 1
a5018 1
=item The untie() Gotcha
d5020 1
a5020 1
=back
d5022 1
a5022 1
=item COMMON QUESTIONS
d5024 2
a5025 1
=over
d5027 1
a5027 1
=item Why is there Perl source in my database?
d5029 2
a5030 1
=item How do I store complex data structures with DB_File?
d5032 1
a5032 1
=item What does "Invalid Argument" mean?
d5034 3
a5036 1
=item What does "Bareword 'DB_File' not allowed" mean? 
d5040 3
a5042 1
=item HISTORY
d5044 1
a5044 1
=item BUGS
d5046 1
a5046 1
=item AVAILABILITY
d5048 1
a5048 1
=item COPYRIGHT
d5050 1
a5050 1
=item SEE ALSO
d5052 1
a5052 1
=item AUTHOR
d5054 1
a5054 2
=head2 Data::Dumper - stringified perl data structures, suitable for both
printing and C<eval>
d5056 1
a5056 1
=item SYNOPSIS
d5058 2
a5059 1
=item DESCRIPTION
d5061 1
a5061 1
=over
d5063 1
a5063 1
=item Methods
d5065 1
a5065 5
I<PACKAGE>->new(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Dump  I<or>
I<PACKAGE>->Dump(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Dumpxs	I<or>
I<PACKAGE>->Dumpxs(I<ARRAYREF [>, I<ARRAYREF]>),
I<$OBJ>->Seen(I<[HASHREF]>), I<$OBJ>->Values(I<[ARRAYREF]>),
I<$OBJ>->Names(I<[ARRAYREF]>), I<$OBJ>->Reset
d5067 1
a5067 1
=item Functions
d5069 1
a5069 1
Dumper(I<LIST>), DumperX(I<LIST>)
d5071 1
a5071 1
=item Configuration Variables or Methods
d5073 1
a5073 11
$Data::Dumper::Indent  I<or>  I<$OBJ>->Indent(I<[NEWVAL]>),
$Data::Dumper::Purity  I<or>  I<$OBJ>->Purity(I<[NEWVAL]>),
$Data::Dumper::Pad  I<or>  I<$OBJ>->Pad(I<[NEWVAL]>),
$Data::Dumper::Varname	I<or>  I<$OBJ>->Varname(I<[NEWVAL]>),
$Data::Dumper::Useqq  I<or>  I<$OBJ>->Useqq(I<[NEWVAL]>),
$Data::Dumper::Terse  I<or>  I<$OBJ>->Terse(I<[NEWVAL]>),
$Data::Dumper::Freezer	I<or>  $I<OBJ>->Freezer(I<[NEWVAL]>),
$Data::Dumper::Toaster	I<or>  $I<OBJ>->Toaster(I<[NEWVAL]>),
$Data::Dumper::Deepcopy  I<or>	$I<OBJ>->Deepcopy(I<[NEWVAL]>),
$Data::Dumper::Quotekeys  I<or>  $I<OBJ>->Quotekeys(I<[NEWVAL]>),
$Data::Dumper::Bless  I<or>  $I<OBJ>->Bless(I<[NEWVAL]>)
d5075 1
a5075 1
=item Exports
d5077 1
a5077 1
Dumper
d5081 3
a5083 1
=item EXAMPLES
d5085 1
a5085 1
=item BUGS
d5087 1
a5087 1
=item AUTHOR
d5089 1
a5089 1
=item VERSION
d5091 1
a5091 1
=item SEE ALSO
d5093 1
a5093 1
=head2 Devel::SelfStubber - generate stubs for a SelfLoading module
d5095 1
a5095 1
=item SYNOPSIS
d5097 1
a5097 1
=item DESCRIPTION
d5099 1
a5099 1
=head2 DirHandle - supply object methods for directory handles
d5101 1
a5101 1
=item SYNOPSIS
d5103 1
a5103 1
=item DESCRIPTION
d5105 1
a5105 2
=head2 English - use nice English (or awk) names for ugly punctuation
variables
d5107 1
a5107 1
=item SYNOPSIS
d5109 1
a5109 1
=item DESCRIPTION
d5111 1
a5111 1
=head2 Env - perl module that imports environment variables
d5113 1
a5113 1
=item SYNOPSIS
d5115 1
a5115 1
=item DESCRIPTION
d5117 1
a5117 1
=item AUTHOR
d5119 1
a5119 1
=head2 Exporter - Implements default import method for modules
d5121 1
a5121 1
=item SYNOPSIS
d5123 1
a5123 1
=item DESCRIPTION
d5125 1
a5125 1
=over
d5127 1
a5127 1
=item Selecting What To Export
d5129 1
a5129 1
=item Specialised Import Lists
d5131 1
a5131 1
=item Exporting without using Export's import method
d5133 1
a5133 1
=item Module Version Checking
d5135 3
a5137 1
=item Managing Unknown Symbols
d5139 1
a5139 1
=item Tag Handling Utility Functions
d5143 1
a5143 2
=head2 ExtUtils::Command - utilities to replace common UNIX commands in
Makefiles etc.
d5145 2
a5146 1
=item SYNOPSIS
d5148 1
a5148 1
=item DESCRIPTION
d5150 3
a5152 3
cat, eqtime src dst, rm_f files..., rm_f files..., touch files .., mv
source... destination, cp source... destination, chmod mode files.., mkpath
directory.., test_f file
d5154 1
a5154 1
=item BUGS
d5156 1
a5156 1
=item SEE ALSO 
d5158 1
a5158 1
=item AUTHOR
d5160 1
a5160 1
=head2 ExtUtils::Embed - Utilities for embedding Perl in C/C++ applications
d5162 1
a5162 1
=item SYNOPSIS
d5164 1
a5164 1
=item DESCRIPTION
d5166 6
a5171 1
=item @@EXPORT
d5173 1
a5173 1
=item FUNCTIONS
d5175 2
a5176 2
xsinit(), Examples, ldopts(), Examples, perl_inc(), ccflags(), ccdlflags(),
ccopts(), xsi_header(), xsi_protos(@@modules), xsi_body(@@modules)
d5178 1
a5178 1
=item EXAMPLES
d5180 1
a5180 1
=item SEE ALSO
d5182 1
a5182 1
=item AUTHOR
d5184 2
a5185 1
=head2 ExtUtils::Install - install files from here to there
d5187 1
a5187 1
=item SYNOPSIS
d5189 1
a5189 1
=item DESCRIPTION
d5191 3131
a8321 1
=head2 ExtUtils::Installed - Inventory management of installed modules
d8327 13
a8339 1
=item USAGE
d8341 1
a8341 1
=item FUNCTIONS
d8343 1
a8343 2
new(), modules(), files(), directories(), directory_tree(), validate(),
packlist(), version()
d8345 1
a8345 1
=item EXAMPLE
d8349 61
a8409 1
=head2 ExtUtils::Liblist - determine libraries to use and how to use them
d8415 27
a8441 1
For static extensions, For dynamic extensions, For dynamic extensions
d8445 1
a8445 1
=item EXTRALIBS
d8447 1
a8447 1
=item LDLOADLIBS and LD_RUN_PATH
d8449 1
a8449 1
=item BSLOADLIBS
d8453 42
a8494 1
=item PORTABILITY
d8498 9
a8506 1
=item VMS implementation
d8508 5
a8512 1
=item Win32 implementation
d8516 11
a8526 1
=item SEE ALSO
d8528 1
a8528 2
=head2 ExtUtils::MM_OS2 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d8530 1
a8530 1
=item SYNOPSIS
d8532 1
a8532 1
=item DESCRIPTION
d8534 1
a8534 1
=head2 ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker
d8536 1
a8536 1
=item SYNOPSIS
d8538 1
a8538 1
=item DESCRIPTION
d8540 1
a8540 1
=item METHODS
d8542 1
a8542 1
=over
d8544 1
a8544 1
=item Preloaded methods
d8546 1
a8546 1
canonpath, catdir, catfile, curdir, rootdir, updir
d8548 1
a8548 1
=item SelfLoaded methods
d8550 1
a8550 5
c_o (o), cflags (o), clean (o), const_cccmd (o), const_config (o),
const_loadlibs (o), constants (o), depend (o), dir_target (o), dist (o),
dist_basics (o), dist_ci (o), dist_core (o), dist_dir (o), dist_test (o),
dlsyms (o), dynamic (o), dynamic_bs (o), dynamic_lib (o), exescan,
extliblist, file_name_is_absolute, find_perl
d8552 1
a8552 1
=item Methods to actually produce chunks of text for the Makefile
d8554 1
a8554 11
fixin, force (o), guess_name, has_link_code, init_dirscan, init_main,
init_others, install (o), installbin (o), libscan (o), linkext (o), lsdir,
macro (o), makeaperl (o), makefile (o), manifypods (o), maybe_command,
maybe_command_in_dirs, needs_linking (o), nicetext, parse_version,
parse_abstract, pasthru (o), path, perl_script, perldepend (o), ppd,
perm_rw (o), perm_rwx (o), pm_to_blib, post_constants (o), post_initialize
(o), postamble (o), prefixify, processPL (o), realclean (o),
replace_manpage_separator, static (o), static_lib (o), staticmake (o),
subdir_x (o), subdirs (o), test (o), test_via_harness (o), test_via_script
(o), tool_autosplit (o), tools_other (o), tool_xsubpp (o), top_targets (o),
writedoc, xs_c (o), xs_o (o), perl_archive, export_list
d8556 1
a8556 1
=back
d8558 1
a8558 1
=item SEE ALSO
d8560 1
a8560 2
=head2 ExtUtils::MM_VMS - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d8562 1
a8562 1
=item SYNOPSIS
d8564 1
a8564 1
=item DESCRIPTION
d8566 1
a8566 1
=over
d8568 1
a8568 1
=item Methods always loaded
d8570 1
a8570 2
eliminate_macros, fixpath, catdir, catfile, wraplist, curdir (override),
rootdir (override), updir (override)
d8572 1
a8572 1
=item SelfLoaded methods
d8574 1
a8574 15
guess_name (override), find_perl (override), path (override), maybe_command
(override), maybe_command_in_dirs (override), perl_script (override),
file_name_is_absolute (override), replace_manpage_separator, init_others
(override), constants (override), cflags (override), const_cccmd
(override), pm_to_blib (override), tool_autosplit (override), tool_sxubpp
(override), xsubpp_version (override), tools_other (override), dist
(override), c_o (override), xs_c (override), xs_o (override), top_targets
(override), dlsyms (override), dynamic_lib (override), dynamic_bs
(override), static_lib (override), manifypods (override), processPL
(override), installbin (override), subdir_x (override), clean (override),
realclean (override), dist_basics (override), dist_core (override),
dist_dir (override), dist_test (override), install (override), perldepend
(override), makefile (override), test (override), test_via_harness
(override), test_via_script (override), makeaperl (override), nicetext
(override)
d8576 1
a8576 1
=back
d8578 1
a8578 2
=head2 ExtUtils::MM_Win32 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d8580 1
a8580 1
=item SYNOPSIS
d8582 1
a8582 1
=item DESCRIPTION
d8584 1
a8584 4
catfile, constants (o), static_lib (o), dynamic_bs (o), dynamic_lib (o),
canonpath, perl_script, pm_to_blib, test_via_harness (o), tool_autosplit
(override), tools_other (o), xs_o (o), top_targets (o), manifypods (o),
dist_ci (o), dist_core (o), pasthru (o)
d8586 1
a8586 1
=head2 ExtUtils::MakeMaker - create an extension Makefile
d8590 1
a8590 1
=item DESCRIPTION
d8594 5
a8598 1
=item How To Write A Makefile.PL
d8600 1
a8600 1
=item Default Makefile Behaviour
d8602 1
a8602 1
=item make test
d8604 1
a8604 1
=item make testdb
d8606 1
a8606 1
=item make install
d8608 19
a8626 1
=item PREFIX and LIB attribute
d8628 1
a8628 1
=item AFS users
d8630 1
a8630 1
=item Static Linking of a new Perl Binary
d8632 1
a8632 1
=item Determination of Perl Library and Installation Locations
d8634 1
a8634 1
=item Which architecture dependent directory?
d8636 1
a8636 1
=item Using Attributes and Parameters
d8638 2
a8639 11
C, CCFLAGS, CONFIG, CONFIGURE, DEFINE, DIR, DISTNAME, DL_FUNCS, DL_VARS,
EXCLUDE_EXT, EXE_FILES, NO_VC, FIRST_MAKEFILE, FULLPERL, H, IMPORTS, INC,
INCLUDE_EXT, INSTALLARCHLIB, INSTALLBIN, INSTALLDIRS, INSTALLMAN1DIR,
INSTALLMAN3DIR, INSTALLPRIVLIB, INSTALLSCRIPT, INSTALLSITELIB,
INSTALLSITEARCH, INST_ARCHLIB, INST_BIN, INST_EXE, INST_LIB, INST_MAN1DIR,
INST_MAN3DIR, INST_SCRIPT, LDFROM, LIBPERL_A, LIB, LIBS, LINKTYPE,
MAKEAPERL, MAKEFILE, MAN1PODS, MAN3PODS, MAP_TARGET, MYEXTLIB, NAME,
NEEDS_LINKING, NOECHO, NORECURS, OBJECT, OPTIMIZE, PERL, PERLMAINCC,
PERL_ARCHLIB, PERL_LIB, PERL_SRC, PERM_RW, PERM_RWX, PL_FILES, PM,
PMLIBDIRS, PREFIX, PREREQ_PM, SKIP, TYPEMAPS, VERSION, VERSION_FROM, XS,
XSOPT, XSPROTOARG, XS_VERSION
d8641 1
a8641 1
=item Additional lowercase attributes
d8643 1
a8643 2
clean, depend, dist, dynamic_lib, installpm, linkext, macro, realclean,
tool_autosplit
d8645 1
a8645 1
=item Overriding MakeMaker Methods
d8647 1
a8647 1
=item Hintsfile support
d8649 1
a8649 1
=item Distribution Support
d8651 1
a8651 3
make distcheck,    make skipcheck,    make distclean,	 make manifest,
make distdir,	 make tardist,	  make dist,	make uutardist,    make
shdist,    make zipdist,    make ci
d8653 1
a8653 1
=item Disabling an extension
d8657 1
a8657 3
=item SEE ALSO

=item AUTHORS
d8659 1
a8659 1
=head2 ExtUtils::Manifest - utilities to write and check a MANIFEST file
d8665 1
a8665 1
=item MANIFEST.SKIP
d8667 1
a8667 1
=item EXPORT_OK
d8669 1
a8669 1
=item GLOBAL VARIABLES
d8671 1
a8671 1
=item DIAGNOSTICS
d8673 1
a8673 2
C<Not in MANIFEST:> I<file>, C<No such file:> I<file>, C<MANIFEST:> I<$!>,
C<Added to MANIFEST:> I<file>
d8675 1
a8675 1
=item SEE ALSO
d8677 1
a8677 3
=item AUTHOR

=head2 ExtUtils::Mkbootstrap - make a bootstrap file for use by DynaLoader
d8683 1
a8683 2
=head2 ExtUtils::Mksymlists - write linker options files for dynamic
extension
d8685 3
a8687 1
=item SYNOPSIS
d8689 1
a8689 1
=item DESCRIPTION
d8691 1
a8691 1
NAME, DL_FUNCS, DL_VARS, FILE, FUNCLIST, DLBASE
d8695 1
a8695 1
=item REVISION
d8697 1
a8697 1
=head2 ExtUtils::Packlist - manage .packlist files
d8699 1
a8699 1
=item SYNOPSIS
d8701 2
a8702 1
=item DESCRIPTION
d8704 1
a8704 1
=item USAGE
d8706 1
a8706 1
=item FUNCTIONS
d8708 1
a8708 1
new(), read(), write(), validate(), packlist_file()
d8710 1
a8710 1
=item EXAMPLE
d8712 1
a8712 1
=item AUTHOR
d8714 2
a8715 1
=head2 ExtUtils::testlib - add blib/* directories to @@INC
d8717 1
a8717 1
=item SYNOPSIS
d8719 1
a8719 1
=item DESCRIPTION
d8721 1
a8721 1
=head2 Fatal - replace functions with equivalents which succeed or die
d8723 1
a8723 1
=item SYNOPSIS
d8725 1
a8725 1
=item DESCRIPTION
d8727 1
a8727 1
=item AUTHOR
d8729 1
a8729 1
=head2 Fcntl - load the C Fcntl.h defines
d8731 1
a8731 1
=item SYNOPSIS
d8733 1
a8733 1
=item DESCRIPTION
d8735 1
a8735 1
=item NOTE
d8737 1
a8737 1
=item EXPORTED SYMBOLS
d8739 1
a8739 1
=head2 File::Basename, fileparse - split a pathname into pieces
d8741 1
a8741 1
=item SYNOPSIS
d8743 1
a8743 1
=item DESCRIPTION
d8745 1
a8745 1
fileparse_set_fstype, fileparse
d8747 1
a8747 1
=item EXAMPLES
d8749 1
a8749 1
C<basename>, C<dirname>
d8751 1
a8751 1
=head2 File::CheckTree, validate - run many filetest checks on a tree
d8753 1
a8753 1
=item SYNOPSIS
d8755 1
a8755 1
=item DESCRIPTION
d8757 1
a8757 1
=head2 File::Compare - Compare files or filehandles
d8759 1
a8759 1
=item SYNOPSIS
d8761 1
a8761 1
=item DESCRIPTION
d8763 1
a8763 1
=item RETURN
d8765 1
a8765 1
=item AUTHOR
d8767 1
a8767 1
=head2 File::Copy - Copy files or filehandles
d8769 1
a8769 1
=item SYNOPSIS
d8771 1
a8771 1
=item DESCRIPTION
d8775 1
a8775 3
=item Special behavior if C<syscopy> is defined (VMS and OS/2)

rmscopy($from,$to[,$date_flag])
d8779 1
a8779 1
=item RETURN
d8781 1
a8781 1
=item AUTHOR
d8783 1
a8783 1
=head2 File::DosGlob - DOS like globbing and then some
d8785 1
a8785 1
=item SYNOPSIS
d8787 1
a8787 1
=item DESCRIPTION
d8789 1
a8789 1
=item EXPORTS (by request only)
d8791 1
a8791 1
=item BUGS
d8793 1
a8793 1
=item AUTHOR
d8795 1
a8795 1
=item HISTORY
d8797 1
a8797 1
=item SEE ALSO
d8799 1
a8799 1
=head2 File::Find, find - traverse a file tree
d8801 1
a8801 1
=item SYNOPSIS
d8803 1
a8803 1
=item DESCRIPTION
d8805 1
a8805 1
=item BUGS
d8807 1
a8807 1
=head2 File::Path - create or remove a series of directories
d8809 1
a8809 1
=item SYNOPSIS
d8811 1
a8811 1
=item DESCRIPTION
d8813 1
a8813 1
=item AUTHORS
d8815 1
a8815 1
=item REVISION
d8817 1
a8817 1
=head2 File::Spec - portably perform operations on file names
d8819 1
a8819 1
=item SYNOPSIS
d8821 1
a8821 1
=item DESCRIPTION
d8823 1
a8823 1
=item SEE ALSO
d8825 1
a8825 1
=item AUTHORS
d8827 1
a8827 1
=head2 File::Spec::Mac - File::Spec for MacOS
d8829 1
a8829 1
=item SYNOPSIS
d8831 1
a8831 1
=item DESCRIPTION
d8833 1
a8833 1
=item METHODS
d8835 1
a8835 2
canonpath, catdir, catfile, curdir, rootdir, updir, file_name_is_absolute,
path
d8837 1
a8837 1
=item SEE ALSO
d8839 1
a8839 1
=head2 File::Spec::OS2 - methods for OS/2 file specs
d8841 1
a8841 1
=item SYNOPSIS
d8843 1
a8843 1
=item DESCRIPTION
d8845 1
a8845 1
=head2 File::Spec::Unix - methods used by File::Spec
d8847 1
a8847 1
=item SYNOPSIS
d8849 1
a8849 1
=item DESCRIPTION
d8851 1
a8851 1
=item METHODS
d8853 1
a8853 2
canonpath, catdir, catfile, curdir, rootdir, updir, no_upwards,
file_name_is_absolute, path, join, nativename
d8855 1
a8855 1
=item SEE ALSO
d8857 1
a8857 1
=head2 File::Spec::VMS - methods for VMS file specs
d8859 1
a8859 1
=item SYNOPSIS
d8861 1
a8861 1
=item DESCRIPTION
d8865 1
a8865 4
=item Methods always loaded

catdir, catfile, curdir (override), rootdir (override), updir (override),
path (override), file_name_is_absolute (override)
d8869 1
a8869 1
=head2 File::Spec::Win32 - methods for Win32 file specs
d8871 1
a8871 1
=item SYNOPSIS
d8873 1
a8873 1
=item DESCRIPTION
d8875 1
a8875 1
catfile, canonpath
d8877 1
a8877 1
=head2 File::stat - by-name interface to Perl's built-in stat() functions
d8879 1
a8879 1
=item SYNOPSIS
d8881 1
a8881 1
=item DESCRIPTION
d8883 1
a8883 1
=item NOTE
d8885 1
a8885 1
=item AUTHOR
d8887 1
a8887 1
=head2 FileCache - keep more files open than the system permits
d8889 1
a8889 1
=item SYNOPSIS
d8891 1
a8891 1
=item DESCRIPTION
d8893 1
a8893 1
=item BUGS
d8895 1
a8895 1
=head2 FileHandle - supply object methods for filehandles
d8897 1
a8897 1
=item SYNOPSIS
d8899 1
a8899 1
=item DESCRIPTION
d8901 1
a8901 1
$fh->print, $fh->printf, $fh->getline, $fh->getlines
d8903 1
a8903 1
=item SEE ALSO
d8905 1
a8905 1
=head2 FindBin - Locate directory of original perl script
d8907 1
a8907 1
=item SYNOPSIS
d8909 1
a8909 1
=item DESCRIPTION
d8911 1
a8911 1
=item EXPORTABLE VARIABLES
d8913 1
a8913 1
=item KNOWN BUGS
d8915 1
a8915 1
=item AUTHORS
d8917 1
a8917 1
=item COPYRIGHT
d8919 1
a8919 1
=item REVISION
d8921 1
a8921 1
=head2 GDBM_File - Perl5 access to the gdbm library.
d8923 1
a8923 1
=item SYNOPSIS
d8925 1
a8925 1
=item DESCRIPTION
d8927 1
a8927 1
=item AVAILABILITY
d8929 1
a8929 1
=item BUGS
d8931 1
a8931 1
=item SEE ALSO
d8933 1
a8933 2
=head2 Getopt::Long, GetOptions - extended processing of command line
options
d8939 2
a8940 1
!, +, :s, :i, :f
d8942 1
a8942 1
=over
d8944 2
a8945 1
=item Linkage specification
d8947 1
a8947 1
=item Aliases and abbreviations
d8949 1
a8949 1
=item Non-option call-back routine
d8951 1
a8951 3
=item Option starters

=item Return values and Errors
d8955 1
a8955 1
=item COMPATIBILITY
d8957 1
a8957 1
=item EXAMPLES
d8959 1
a8959 1
=item CONFIGURATION OPTIONS
d8961 1
a8961 4
default, auto_abbrev, getopt_compat, require_order, permute, bundling
(default: reset), bundling_override (default: reset), ignore_case
(default: set), ignore_case_always (default: reset), pass_through (default:
reset), prefix, prefix_pattern, debug (default: reset)
d8963 1
a8963 1
=item OTHER USEFUL VARIABLES
d8965 1
a8965 1
$Getopt::Long::VERSION, $Getopt::Long::error
d8967 1
a8967 1
=item AUTHOR
d8969 1
a8969 1
=item COPYRIGHT AND DISCLAIMER
d8971 1
a8971 2
=head2 Getopt::Std, getopt - Process single-character switches with switch
clustering
d8973 1
a8973 1
=item SYNOPSIS
d8975 1
a8975 1
=item DESCRIPTION
d8977 1
a8977 2
=head2 I18N::Collate - compare 8-bit scalar data according to the current
locale
d8979 1
a8979 1
=item SYNOPSIS
d8981 1
a8981 1
=item DESCRIPTION
d8983 1
a8983 1
=head2 IO - load various IO modules
d8985 1
a8985 1
=item SYNOPSIS
d8987 1
a8987 1
=item DESCRIPTION
d8989 1
a8989 1
=head2 IO::lib::IO::File, IO::File - supply object methods for filehandles
d8991 1
a8991 1
=item SYNOPSIS
d8993 1
a8993 1
=item DESCRIPTION
d8995 1
a8995 1
=item CONSTRUCTOR
d8997 1
a8997 1
new ([ ARGS ] ), new_tmpfile
d8999 1
a8999 1
=item METHODS
d9001 1
a9001 1
open( FILENAME [,MODE [,PERMS]] )
d9003 1
a9003 1
=item SEE ALSO
d9005 1
a9005 1
=item HISTORY
d9007 1
a9007 2
=head2 IO::lib::IO::Handle, IO::Handle - supply object methods for I/O
handles
d9009 1
a9009 1
=item SYNOPSIS
d9011 1
a9011 1
=item DESCRIPTION
d9013 1
a9013 1
=item CONSTRUCTOR
d9015 1
a9015 1
new (), new_from_fd ( FD, MODE )
d9017 1
a9017 1
=item METHODS
d9019 1
a9019 3
$fh->fdopen ( FD, MODE ), $fh->opened, $fh->getline, $fh->getlines,
$fh->ungetc ( ORD ), $fh->write ( BUF, LEN [, OFFSET }\] ), $fh->flush,
$fh->error, $fh->clearerr, $fh->untaint
d9021 1
a9021 1
=item NOTE
d9023 1
a9023 1
=item SEE ALSO
d9025 1
a9025 1
=item BUGS
d9027 1
a9027 1
=item HISTORY
d9029 1
a9029 1
=head2 IO::lib::IO::Pipe, IO::pipe - supply object methods for pipes
d9031 1
a9031 1
=item SYNOPSIS
d9033 1
a9033 1
=item DESCRIPTION
d9035 1
a9035 1
=item CONSTRCUTOR
d9037 1
a9037 1
new ( [READER, WRITER] )
d9039 1
a9039 1
=item METHODS
d9041 1
a9041 1
reader ([ARGS]), writer ([ARGS]), handles ()
d9043 1
a9043 1
=item SEE ALSO
d9045 1
a9045 1
=item AUTHOR
d9047 1
a9047 1
=item COPYRIGHT
d9049 1
a9049 2
=head2 IO::lib::IO::Seekable, IO::Seekable - supply seek based methods for
I/O objects
d9051 1
a9051 1
=item SYNOPSIS
d9053 1
a9053 1
=item DESCRIPTION
d9057 3
a9059 1
=item HISTORY
d9061 1
a9061 2
=head2 IO::lib::IO::Select, IO::Select - OO interface to the select system
call
d9065 4
d9071 1
a9071 1
=item CONSTRUCTOR
d9073 1
a9073 1
new ( [ HANDLES ] )
d9075 2
a9076 1
=item METHODS
d9078 1
a9078 3
add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_error ( [ TIMEOUT ] ), count
(), bits(), bits(), select ( READ, WRITE, ERROR [, TIMEOUT ] )
d9080 1
a9080 1
=item EXAMPLE
d9082 1
a9082 1
=item AUTHOR
d9084 1
a9084 1
=item COPYRIGHT
d9086 1
a9086 2
=head2 IO::lib::IO::Socket, IO::Socket - Object interface to socket
communications
d9088 1
a9088 1
=item SYNOPSIS
d9090 1
a9090 1
=item DESCRIPTION
d9092 1
a9092 1
=item CONSTRUCTOR
d9094 1
a9094 1
new ( [ARGS] )
d9096 1
a9096 1
=item METHODS
d9098 1
a9098 2
accept([PKG]), timeout([VAL]), sockopt(OPT [, VAL]), sockdomain, socktype,
protocol
d9100 1
a9100 1
=item SUB-CLASSES
d9104 1
a9104 1
=item IO::Socket::INET
d9106 1
a9106 1
=item METHODS
d9108 1
a9108 2
sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()
d9110 1
a9110 3
=item IO::Socket::UNIX

=item METHODS
d9112 1
a9112 1
hostpath(), peerpath()
d9116 1
a9116 1
=item SEE ALSO
d9118 1
a9118 1
=item AUTHOR
d9120 1
a9120 1
=item COPYRIGHT
d9122 1
a9122 1
=head2 IPC::Open2, open2 - open a process for both reading and writing
d9124 1
a9124 1
=item SYNOPSIS
d9126 1
a9126 1
=item DESCRIPTION
d9128 1
a9128 1
=item WARNING 
d9130 1
a9130 1
=item SEE ALSO
d9132 1
a9132 2
=head2 IPC::Open3, open3 - open a process for reading, writing, and error
handling
d9134 1
a9134 1
=item SYNOPSIS
d9136 1
a9136 1
=item DESCRIPTION
d9138 1
a9138 1
=item WARNING
d9140 1
a9140 1
=head2 IPC::SysV - SysV IPC constants
d9142 1
a9142 1
=item SYNOPSIS
d9144 1
a9144 1
=item DESCRIPTION
d9146 1
a9146 1
ftok( PATH, ID )
d9148 1
a9148 1
=item SEE ALSO
d9150 1
a9150 1
=item AUTHORS
d9152 1
a9152 1
=item COPYRIGHT
d9154 1
a9154 1
=head2 IPC::SysV::Msg, IPC::Msg - SysV Msg IPC object class
d9156 1
a9156 1
=item SYNOPSIS
d9158 1
a9158 1
=item DESCRIPTION
d9160 1
a9160 1
=item METHODS
d9162 1
a9162 3
new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat
d9164 1
a9164 1
=item SEE ALSO
d9166 1
a9166 1
=item AUTHOR
d9168 1
a9168 1
=item COPYRIGHT
d9170 1
a9170 2
=head2 IPC::SysV::Semaphore, IPC::Semaphore - SysV Semaphore IPC object
class
d9172 1
a9172 1
=item SYNOPSIS
d9174 1
a9174 1
=item DESCRIPTION
d9176 1
a9176 1
=item METHODS
d9178 1
a9178 4
new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat
d9180 3
a9182 1
=item SEE ALSO
d9184 1
a9184 1
=item AUTHOR
d9186 1
a9186 1
=item COPYRIGHT
d9188 1
a9188 1
=head2 Math::BigFloat - Arbitrary length float math package
d9190 1
a9190 1
=item SYNOPSIS
d9192 1
a9192 1
=item DESCRIPTION
d9194 1
a9194 1
number format, Error returns 'NaN', Division is computed to
d9196 1
a9196 1
=item BUGS
d9198 1
a9198 1
=item AUTHOR
d9200 1
a9200 1
=head2 Math::BigInt - Arbitrary size integer math package
d9202 1
a9202 1
=item SYNOPSIS
d9204 1
a9204 1
=item DESCRIPTION
d9206 1
a9206 1
Canonical notation, Input, Output
d9208 1
a9208 1
=item EXAMPLES
d9210 1
a9210 1
=item Autocreating constants
d9212 1
a9212 1
=item BUGS
d9214 1
a9214 1
=item AUTHOR
d9216 1
a9216 2
=head2 Math::Complex - complex numbers and associated mathematical
functions
d9218 1
a9218 1
=item SYNOPSIS
d9220 1
a9220 1
=item DESCRIPTION
d9222 1
a9222 1
=item OPERATIONS
d9224 1
a9224 1
=item CREATION
d9226 1
a9226 1
=item STRINGIFICATION
d9228 1
a9228 1
=item USAGE
d9230 1
a9230 1
=item ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO
d9232 1
a9232 3
=item ERRORS DUE TO INDIGESTIBLE ARGUMENTS

=item BUGS
d9234 1
a9234 1
=item AUTHORS
d9236 1
a9236 1
=head2 Math::Trig - trigonometric functions
d9238 1
a9238 1
=item SYNOPSIS
d9240 1
a9240 1
=item DESCRIPTION
d9242 1
a9242 1
=item TRIGONOMETRIC FUNCTIONS
d9244 1
a9244 1
B<tan>
d9248 1
a9248 1
=item ERRORS DUE TO DIVISION BY ZERO
d9250 1
a9250 1
=item SIMPLE (REAL) ARGUMENTS, COMPLEX RESULTS
d9252 1
a9252 1
=back
d9254 1
a9254 1
=item PLANE ANGLE CONVERSIONS
d9256 1
a9256 1
=item RADIAL COORDINATE CONVERSIONS
d9260 3
a9262 1
=item COORDINATE SYSTEMS
d9264 1
a9264 1
=item 3-D ANGLE CONVERSIONS
d9266 1
a9266 2
cartesian_to_cylindrical, cartesian_to_spherical, cylindrical_to_cartesian,
cylindrical_to_spherical, spherical_to_cartesian, spherical_to_cylindrical
d9270 1
a9270 1
=item GREAT CIRCLE DISTANCES
d9272 1
a9272 1
=item EXAMPLES
d9274 1
a9274 1
=item BUGS
d9276 1
a9276 1
=item AUTHORS
d9278 1
a9278 1
=head2 NDBM_File - Tied access to ndbm files
d9280 1
a9280 1
=item SYNOPSIS
d9282 1
a9282 1
=item DESCRIPTION
d9284 1
a9284 1
=head2 Net::Ping - check a remote host for reachability
d9286 1
a9286 1
=item SYNOPSIS
d9288 1
a9288 1
=item DESCRIPTION
d9290 1
a9290 1
=over
d9292 1
a9292 1
=item Functions
d9294 1
a9294 2
Net::Ping->new([$proto [, $def_timeout [, $bytes]]]);, $p->ping($host [,
$timeout]);, $p->close();, pingecho($host [, $timeout]);
d9298 1
a9298 1
=item WARNING
d9300 1
a9300 4
=item NOTES

=head2 Net::hostent - by-name interface to Perl's built-in gethost*()
functions
d9306 3
a9308 1
=item EXAMPLES
d9310 1
a9310 1
=item NOTE
d9314 1
a9314 2
=head2 Net::netent - by-name interface to Perl's built-in getnet*()
functions
d9316 1
a9316 1
=item SYNOPSIS
d9318 2
a9319 1
=item DESCRIPTION
d9321 1
a9321 1
=item EXAMPLES
d9323 1
a9323 1
=item NOTE
d9325 1
a9325 1
=item AUTHOR
d9327 1
a9327 4
=head2 Net::protoent - by-name interface to Perl's built-in getproto*()
functions

=item SYNOPSIS
d9331 1
a9331 1
=item NOTE
d9333 1
a9333 1
=item AUTHOR
d9335 1
a9335 2
=head2 Net::servent - by-name interface to Perl's built-in getserv*()
functions
d9337 1
a9337 1
=item SYNOPSIS
d9339 1
a9339 1
=item DESCRIPTION
d9341 1
a9341 1
=item EXAMPLES
d9343 1
a9343 1
=item NOTE
d9345 1
a9345 1
=item AUTHOR
d9347 1
a9347 1
=head2 ODBM_File - Tied access to odbm files
d9349 1
a9349 1
=item SYNOPSIS
d9351 1
a9351 1
=item DESCRIPTION
d9353 1
a9353 1
=head2 Opcode - Disable named opcodes when compiling perl code
d9355 1
a9355 1
=item SYNOPSIS
d9357 1
a9357 1
=item DESCRIPTION
d9359 1
a9359 1
=item NOTE
d9361 1
a9361 1
=item WARNING
d9363 1
a9363 1
=item Operator Names and Operator Lists
d9365 1
a9365 2
an operator name (opname), an operator tag name (optag), a negated opname
or optag, an operator set (opset)
d9367 1
a9367 1
=item Opcode Functions
d9369 1
a9369 4
opcodes, opset (OP, ...), opset_to_ops (OPSET), opset_to_hex (OPSET),
full_opset, empty_opset, invert_opset (OPSET), verify_opset (OPSET, ...),
define_optag (OPTAG, OPSET), opmask_add (OPSET), opmask, opdesc (OP, ...),
opdump (PAT)
d9371 1
a9371 1
=item Manipulating Opsets
d9373 1
a9373 1
=item TO DO (maybe)
d9375 1
a9375 1
=item Predefined Opcode Tags
d9377 1
a9377 4
:base_core, :base_mem, :base_loop, :base_io, :base_orig, :base_math,
:base_thread, :default, :filesys_read, :sys_db, :browse, :filesys_open,
:filesys_write, :subprocess, :ownprocess, :others, :still_to_be_decided,
:dangerous
d9379 1
a9379 1
=item SEE ALSO
d9381 1
a9381 1
=item AUTHORS
d9383 1
a9383 2
=head2 Opcode::Safe, Safe - Compile and execute code in restricted
compartments
d9385 1
a9385 1
=item SYNOPSIS
d9387 1
a9387 1
=item DESCRIPTION
d9389 1
a9389 1
a new namespace, an operator mask
d9391 1
a9391 1
=item WARNING
d9395 1
a9395 3
=item RECENT CHANGES

=item Methods in class Safe
d9397 1
a9397 4
permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)
d9399 1
a9399 3
=item Some Safety Issues

Memory, CPU, Snooping, Signals, State Changes
d9401 1
a9401 1
=item AUTHOR
d9405 1
a9405 2
=head2 Opcode::ops, ops - Perl pragma to restrict unsafe operations when
compiling
d9407 1
a9407 1
=item SYNOPSIS  
d9409 1
a9409 1
=item DESCRIPTION
d9411 1
a9411 1
=item SEE ALSO
d9413 1
a9413 1
=head2 POSIX - Perl interface to IEEE Std 1003.1
d9415 1
a9415 1
=item SYNOPSIS
d9417 1
a9417 1
=item DESCRIPTION
d9419 1
a9419 1
=item NOTE
d9421 1
a9421 1
=item CAVEATS 
d9423 1
a9423 28
=item FUNCTIONS

_exit, abort, abs, access, acos, alarm, asctime, asin, assert, atan, atan2,
atexit, atof, atoi, atol, bsearch, calloc, ceil, chdir, chmod, chown,
clearerr, clock, close, closedir, cos, cosh, creat, ctermid, ctime,
cuserid, difftime, div, dup, dup2, errno, execl, execle, execlp, execv,
execve, execvp, exit, exp, fabs, fclose, fcntl, fdopen, feof, ferror,
fflush, fgetc, fgetpos, fgets, fileno, floor, fmod, fopen, fork, fpathconf,
fprintf, fputc, fputs, fread, free, freopen, frexp, fscanf, fseek, fsetpos,
fstat, ftell, fwrite, getc, getchar, getcwd, getegid, getenv, geteuid,
getgid, getgrgid, getgrnam, getgroups, getlogin, getpgrp, getpid, getppid,
getpwnam, getpwuid, gets, getuid, gmtime, isalnum, isalpha, isatty,
iscntrl, isdigit, isgraph, islower, isprint, ispunct, isspace, isupper,
isxdigit, kill, labs, ldexp, ldiv, link, localeconv, localtime, log, log10,
longjmp, lseek, malloc, mblen, mbstowcs, mbtowc, memchr, memcmp, memcpy,
memmove, memset, mkdir, mkfifo, mktime, modf, nice, offsetof, open,
opendir, pathconf, pause, perror, pipe, pow, printf, putc, putchar, puts,
qsort, raise, rand, read, readdir, realloc, remove, rename, rewind,
rewinddir, rmdir, scanf, setgid, setjmp, setlocale, setpgid, setsid,
setuid, sigaction, siglongjmp, sigpending, sigprocmask, sigsetjmp,
sigsuspend, sin, sinh, sleep, sprintf, sqrt, srand, sscanf, stat, strcat,
strchr, strcmp, strcoll, strcpy, strcspn, strerror, strftime, strlen,
strncat, strncmp, strncpy, stroul, strpbrk, strrchr, strspn, strstr,
strtod, strtok, strtol, strtoul, strxfrm, sysconf, system, tan, tanh,
tcdrain, tcflow, tcflush, tcgetpgrp, tcsendbreak, tcsetpgrp, time, times,
tmpfile, tmpnam, tolower, toupper, ttyname, tzname, tzset, umask, uname,
ungetc, unlink, utime, vfprintf, vprintf, vsprintf, wait, waitpid,
wcstombs, wctomb, write
d9425 1
a9425 1
=item CLASSES
d9429 1
a9429 1
=item POSIX::SigAction
d9431 1
a9431 1
new
d9433 1
a9433 1
=item POSIX::SigSet
d9435 1
a9435 1
new, addset, delset, emptyset, fillset, ismember
d9437 2
a9438 1
=item POSIX::Termios
d9440 1
a9440 5
new, getattr, getcc, getcflag, getiflag, getispeed, getlflag, getoflag,
getospeed, setattr, setcc, setcflag, setiflag, setispeed, setlflag,
setoflag, setospeed, Baud rate values, Terminal interface values, c_cc
field values, c_cflag field values, c_iflag field values, c_lflag field
values, c_oflag field values
d9442 1
a9442 1
=back
d9444 1
a9444 1
=item PATHNAME CONSTANTS
d9446 1
a9446 1
Constants
d9448 1
a9448 1
=item POSIX CONSTANTS
d9450 1
a9450 1
Constants
d9452 1
a9452 1
=item SYSTEM CONFIGURATION
d9454 1
a9454 1
Constants
d9456 1
a9456 1
=item ERRNO
d9458 1
a9458 1
Constants
d9460 1
a9460 1
=item FCNTL
d9462 1
a9462 1
Constants
d9464 1
a9464 1
=item FLOAT
d9466 2
a9467 1
Constants
d9469 1
a9469 1
=item LIMITS
d9471 1
a9471 1
Constants
d9473 1
a9473 1
=item LOCALE
d9475 1
a9475 1
Constants
d9477 1
a9477 1
=item MATH
d9479 1
a9479 1
Constants
d9481 2
a9482 1
=item SIGNAL
d9484 1
a9484 1
Constants
d9486 1
a9486 1
=item STAT
d9488 1
a9488 1
Constants, Macros
d9490 2
a9491 1
=item STDLIB
d9493 1
a9493 1
Constants
d9495 1
a9495 1
=item STDIO
d9497 1
a9497 1
Constants
d9499 1
a9499 1
=item TIME
d9501 1
a9501 1
Constants
d9503 1
a9503 1
=item UNISTD
d9505 1
a9505 1
Constants
d9507 1
a9507 1
=item WAIT
d9509 1
a9509 1
Constants, Macros
d9511 1
a9511 1
=item CREATION
d9513 1
a9513 1
=head2 Pod::Html - module to convert pod files to HTML
d9519 3
a9521 1
=item ARGUMENTS
d9523 1
a9523 2
help, htmlroot, infile, outfile, podroot, podpath, libpods, netscape,
nonetscape, index, noindex, recurse, norecurse, title, verbose
d9525 1
a9525 1
=item EXAMPLE
d9527 1
a9527 1
=item AUTHOR
d9529 1
a9529 1
=item BUGS
d9531 1
a9531 1
=item SEE ALSO
d9533 1
a9533 1
=item COPYRIGHT
d9535 1
a9535 1
=head2 Pod::Text - convert POD data to formatted ASCII text
d9537 1
a9537 1
=item SYNOPSIS
d9539 4
a9542 1
=item DESCRIPTION
d9544 1
a9544 1
=item AUTHOR
d9546 1
a9546 1
=item TODO
d9548 1
a9548 1
=head2 SDBM_File - Tied access to sdbm files
d9550 1
a9550 1
=item SYNOPSIS
d9552 1
a9552 1
=item DESCRIPTION
d9556 2
d9562 2
d9566 2
d9572 2
d9576 2
d9600 2
d9604 2
d9612 2
d9617 2
d9629 2
d9633 2
d9639 2
d9643 2
d9651 2
d9656 2
d9668 20
a9687 1
=item DEPENDENCIES
d9693 22
d9717 2
d9725 2
d9729 2
d9743 2
d9748 2
d9767 5
a9771 1
=head2   Test - provides a simple framework for writing test scripts
d9781 2
d9789 2
d9793 2
d9822 2
d9826 2
d9834 2
d9839 2
d9855 2
d9860 2
d9872 2
d9877 2
d9887 2
d9891 2
d9899 3
a9901 1
=item BUGS
d9903 2
a9904 1
=item AUTHOR
d9906 1
a9906 1
=head2 Thread - multithreading
d9916 1
a9916 1
cond_broadcast VARIABLE
d9920 1
a9920 1
join, eval, tid
d9926 2
d9930 2
d9942 2
d9946 2
d9956 2
d9960 2
d9968 2
d9972 2
d9976 4
d9982 3
a9984 1
=item SYNOPSIS  
d9986 1
a9986 1
=item DESCRIPTION       
d9989 3
a9991 3
FETCHSIZE this, STORESIZE this, count, EXTEND this, count, CLEAR this,
DESTROY this, PUSH this, LIST, POP this, SHIFT this, UNSHIFT this, LIST,
SPLICE this, offset, length, LIST
d9997 6
a10002 1
=head2 Tie::Handle - base class definitions for tied handles
d10010 2
a10011 1
READLINE this, GETC this, DESTROY this
d10015 2
d10019 2
d10032 2
d10036 2
d10050 2
d10055 2
d10065 2
d10069 2
d10077 2
d10081 2
d10087 6
d10096 2
d10106 2
d10111 2
d10121 2
d10125 2
d10133 2
d10137 2
d10146 2
d10151 2
d10161 2
d10166 2
d10172 6
d10182 18
d10205 2
d10224 2
@


1.2
log
@perl 5.004_04
@
text
@d41 2
a42 2
=head2 perlfaq - frequently asked questions about Perl ($Date: 1997/04/24
22:46:06 $)
d69 1
a69 3
=item Noncommercial Reproduction

=item Commercial Reproduction
d80 2
a81 2
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.12 $, $Date:
1997/04/24 22:43:34 $)
d121 2
a122 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.16 $,
$Date: 1997/04/23 18:04:09 $)
d140 1
a140 1
=item What modules and extensions are available for Perl?  What is CPAN? 
d153 4
a166 2
=item Perl Training

d179 2
a180 2
=head2 perlfaq3 - Programming Tools ($Revision: 1.22 $, $Date: 1997/04/24
22:43:42 $)
a211 2
=item Can I dynamically load C routines into Perl?

d228 1
a228 1
=item How can I get '#!perl' to work on [MS-DOS,NT,...]?
d252 2
a253 2
=head2 perlfaq4 - Data Manipulation ($Revision: 1.19 $, $Date: 1997/04/24
22:43:57 $)
d287 1
a287 1
=item How can I compare two date strings?
d293 1
a293 1
=item Does Perl have a year 2000 problem?
d355 5
a359 4
a) If @@in is sorted, and you want @@out to be sorted:, b) If you don't know
whether @@in is sorted:, c) Like (b), but @@in contains only small integers:,
d) A way to do (b) without any loops or greps:, e) Like (d), but @@in
contains only small positive integers:
d361 1
a361 1
=item How can I tell whether an array contains a certain element?
d447 2
a448 2
=head2 perlfaq5 - Files and Formats ($Revision: 1.22 $, $Date: 1997/04/24
22:44:02 $)
d454 1
a454 1
=item How do I flush/unbuffer a filehandle?  Why must I do this?
d468 2
d478 1
a478 1
=item How come when I open the file read-write it wipes it out?
a508 4
=item How do I open a file without blocking?

=item How do I create a file only if it doesn't exist?

d529 1
a529 1
=head2 perlfaq6 - Regexps ($Revision: 1.17 $, $Date: 1997/04/24 22:44:10 $)
d551 1
a551 1
=item How can I make C<\w> match accented characters?
d590 2
a591 2
=head2 perlfaq7 - Perl Language Issues ($Revision: 1.18 $, $Date:
1997/04/24 22:44:14 $)
d633 1
a633 1
=item What's the difference between dynamic and lexical (static) scoping? 
d641 1
a641 1
=item Why doesn't "local($foo) = <FILE>;" work right?
d661 2
a662 2
=head2 perlfaq8 - System Interaction ($Revision: 1.21 $, $Date: 1997/04/24
22:44:19 $)
d676 10
d696 1
a696 1
STDIN, STDOUT and STDERR are shared, Signals, Zombies
d747 1
a747 1
Unix, VMS
d772 2
a782 2
=item How do I get one key from the terminal at a time, under POSIX?

d785 1
a785 1
=head2 perlfaq9 - Networking ($Revision: 1.17 $, $Date: 1997/04/24 22:44:29
d792 4
a795 2
=item My CGI script runs from the command line but not the browser.  Can
you help me fix it?
d808 3
a810 1
=item how do I decode or create those %-encodings on the web?
d821 1
a821 1
=item How do I parse an email header?
d825 1
a825 1
=item How do I check a valid email address?
d829 3
a831 1
=item How do I return the user's email address?
d833 1
a833 1
=item How do I send/read mail?
d847 1
a847 1
=head2 perldelta - what's new for perl5.004
d851 1
a851 1
=item Supported Environments
d853 1
a853 1
=item Core Changes
d857 1
a857 1
=item List assignment to %ENV works
d859 1
a859 1
=item "Can't locate Foo.pm in @@INC" error now lists @@INC
d861 1
a861 1
=item Compilation option: Binary compatibility with 5.003
d863 1
a863 1
=item $PERL5OPT environment variable
d865 3
a867 1
=item Limitations on B<-M>, B<-m>, and B<-T> options
d869 1
a869 1
=item More precise warnings
d871 1
a871 1
=item Deprecated: Inherited C<AUTOLOAD> for non-methods
d873 1
a873 1
=item Previously deprecated %OVERLOAD is no longer usable
d875 1
a875 1
=item Subroutine arguments created only when they're modified
d877 1
a877 1
=item Group vector changeable with C<$)>
d879 1
a879 1
=item Fixed parsing of $$<digit>, &$<digit>, etc.
d881 1
a881 1
=item No resetting of $. on implicit close
d883 1
a883 1
=item C<wantarray> may return undef
d885 1
a885 1
=item Changes to tainting checks
d887 1
a887 4
No glob() or <*>, No spawning if tainted $CDPATH, $ENV, $BASH_ENV, No
spawning if tainted $TERM doesn't look like a terminal name

=item New Opcode module and revised Safe module
d889 3
a891 1
=item Embedding improvements
d893 1
a893 1
=item Internal change: FileHandle class based on IO::* classes
d895 1
a895 1
=item Internal change: PerlIO abstraction interface
d897 1
a897 1
=item New and changed syntax
d899 1
a899 1
$coderef->(PARAMS)
d901 1
a901 1
=item New and changed builtin constants
d903 1
a903 1
__PACKAGE__
d905 1
a905 1
=item New and changed builtin variables
d907 1
a907 1
$^E, $^H, $^M
d909 1
a909 1
=item New and changed builtin functions
d911 1
a911 5
delete on slices, flock, printf and sprintf, keys as an lvalue, my() in
Control Structures, pack() and unpack(), sysseek(), use VERSION, use Module
VERSION LIST, prototype(FUNCTION), srand, $_ as Default, C<m//gc> does not
reset search position on failure, C<m//x> ignores whitespace before ?*+{},
nested C<sub{}> closures work now, formats work right on changing lexicals
d913 1
a913 1
=item New builtin methods
d915 1
a915 3
isa(CLASS), can(METHOD), VERSION( [NEED] )

=item TIEHANDLE now supported
d917 1
a917 2
TIEHANDLE classname, LIST, PRINT this, LIST, PRINTF this, LIST, READ this
LIST, READLINE this, GETC this, DESTROY this
d919 1
a919 1
=item Malloc enhancements
d921 1
a921 1
-DDEBUGGING_MSTATS, -DPERL_EMERGENCY_SBRK, -DPACK_MALLOC, -DTWO_POT_OPTIMIZE
d923 1
a923 1
=item Miscellaneous efficiency enhancements
d925 1
a925 1
=back
d927 1
a927 1
=item Support for More Operating Systems
d929 1
a929 1
=over
d931 1
a931 1
=item Win32
d933 1
a933 1
=item Plan 9
d935 1
a935 1
=item QNX
d937 1
a937 1
=item AmigaOS
d939 1
a939 1
=back
d941 1
a941 1
=item Pragmata
d943 1
a943 2
use autouse MODULE => qw(sub1 sub2 sub3), use blib, use blib 'dir', use
constant NAME => VALUE, use locale, use ops, use vmsish
d945 1
a945 1
=item Modules
d947 1
a947 1
=over
d949 1
a949 1
=item Required Updates
d951 1
a951 1
=item Installation directories
d953 1
a953 1
=item Module information summary
d955 1
a955 1
=item Fcntl
d957 1
a957 1
=item IO
d959 1
a959 1
=item Math::Complex
d961 1
a961 1
=item Math::Trig
d963 1
a963 1
=item DB_File
d965 1
a965 3
=item Net::Ping

=item Object-oriented overrides for builtin operators
d969 1
a969 1
=item Utility Changes
d973 1
a973 1
=item pod2html
d975 3
a977 1
Sends converted HTML to standard output
d979 1
a979 1
=item xsubpp
d981 1
a981 1
C<void> XSUBs now default to returning nothing
d985 1
a985 1
=item C Language API Changes
d987 1
a987 2
C<gv_fetchmethod> and C<perl_call_sv>, C<perl_eval_pv>, Extended API for
manipulating hashes
d989 1
a989 1
=item Documentation Changes
d991 17
a1007 2
L<perldelta>, L<perlfaq>, L<perllocale>, L<perltoot>, L<perlapio>,
L<perlmodlib>, L<perldebug>, L<perlsec>
d1009 1
a1009 1
=item New Diagnostics
d1011 2
a1012 25
"my" variable %s masks earlier declaration in same scope, %s argument is
not a HASH element or slice, Allocation too large: %lx, Allocation too
large, Applying %s to %s will act on scalar(%s), Attempt to free
nonexistent shared string, Attempt to use reference as lvalue in substr,
Can't redefine active sort subroutine %s, Can't use bareword ("%s") as %s
ref while "strict refs" in use, Cannot resolve method `%s' overloading `%s'
in package `%s', Constant subroutine %s redefined, Constant subroutine %s
undefined, Copy method did not return a reference, Died, Exiting
pseudo-block via %s, Identifier too long, Illegal character %s (carriage
return), Illegal switch in PERL5OPT: %s, Integer overflow in hex number,
Integer overflow in octal number, internal error: glob failed, Invalid
conversion in %s: "%s", Invalid type in pack: '%s', Invalid type in unpack:
'%s', Name "%s::%s" used only once: possible typo, Null picture in
formline, Offset outside string, Out of memory!, Out of memory during
request for %s, panic: frexp, Possible attempt to put comments in qw()
list, Possible attempt to separate words with commas, Scalar value @@%s{%s}
better written as $%s{%s}, Stub found while resolving method `%s'
overloading `%s' in package `%s', Too late for "B<-T>" option, untie
attempted while %d inner references still exist, Unrecognized character %s,
Unsupported function fork, Use of "$$<digit>" to mean "${$}<digit>" is
deprecated, Value of %s can be "0"; test with defined(), Variable "%s" may
be unavailable, Variable "%s" will not stay shared, Warning: something's
wrong, Ill-formed logical name |%s| in prime_env_iter, Got an error from
DosAllocMem, Malformed PERLLIB_PREFIX, PERL_SH_DIR too long, Process
terminated by SIG%s
d1108 1
a1108 1
=item Range Operator
d1132 2
a1133 2
?PATTERN?, m/PATTERN/gimosx, /PATTERN/gimosx, q/STRING/, C<'STRING'>,
qq/STRING/, "STRING", qx/STRING/, `STRING`, qw/STRING/,
d1137 8
d1149 2
d1155 2
d1169 4
a1172 1
(?#text), (?:regexp), (?=regexp), (?!regexp), (?imsx)
d1180 4
d1200 2
d1204 2
a1205 2
B<-0>[I<digits>], B<-a>, B<-c>, B<-d>, B<-d:>I<foo>, B<-D>I<number>,
B<-D>I<list>, B<-e> I<commandline>, B<-F>I<pattern>, B<-h>,
a1221 2
 I<THERE IS NO GENERAL RULE FOR CONVERTING A LIST INTO A SCALAR!>

d1240 1
a1240 1
-I<X> FILEHANDLE, -I<X> EXPR, -I<X>, abs VALUE, abs, accept
d1245 38
a1282 37
close FILEHANDLE, closedir DIRHANDLE, connect SOCKET,NAME, continue BLOCK,
cos EXPR, crypt PLAINTEXT,SALT, dbmclose HASH, dbmopen HASH,DBNAME,MODE,
defined EXPR, defined, delete EXPR, die LIST, do BLOCK, do
SUBROUTINE(LIST), do EXPR, dump LABEL, each HASH, eof FILEHANDLE, eof (),
eof, eval EXPR, eval BLOCK, exec LIST, exists EXPR, exit EXPR, exp EXPR,
exp, fcntl FILEHANDLE,FUNCTION,SCALAR, fileno FILEHANDLE, flock
FILEHANDLE,OPERATION, fork, format, formline PICTURE,LIST, getc FILEHANDLE,
getc, getlogin, getpeername SOCKET, getpgrp PID, getppid, getpriority
WHICH,WHO, getpwnam NAME, getgrnam NAME, gethostbyname NAME, getnetbyname
NAME, getprotobyname NAME, getpwuid UID, getgrgid GID, getservbyname
NAME,PROTO, gethostbyaddr ADDR,ADDRTYPE, getnetbyaddr ADDR,ADDRTYPE,
getprotobynumber NUMBER, getservbyport PORT,PROTO, getpwent, getgrent,
gethostent, getnetent, getprotoent, getservent, setpwent, setgrent,
sethostent STAYOPEN, setnetent STAYOPEN, setprotoent STAYOPEN, setservent
STAYOPEN, endpwent, endgrent, endhostent, endnetent, endprotoent,
endservent, getsockname SOCKET, getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR,
glob, gmtime EXPR, goto LABEL, goto EXPR, goto &NAME, grep BLOCK LIST, grep
EXPR,LIST, hex EXPR, hex, import, index STR,SUBSTR,POSITION, index
STR,SUBSTR, int EXPR, int, ioctl FILEHANDLE,FUNCTION,SCALAR, join
EXPR,LIST, keys HASH, kill LIST, last LABEL, last, lc EXPR, lc, lcfirst
EXPR, lcfirst, length EXPR, length, link OLDFILE,NEWFILE, listen
SOCKET,QUEUESIZE, local EXPR, localtime EXPR, log EXPR, log, lstat
FILEHANDLE, lstat EXPR, lstat, m//, map BLOCK LIST, map EXPR,LIST, mkdir
FILENAME,MODE, msgctl ID,CMD,ARG, msgget KEY,FLAGS, msgsnd ID,MSG,FLAGS,
msgrcv ID,VAR,SIZE,TYPE,FLAGS, my EXPR, next LABEL, next, no Module LIST,
oct EXPR, oct, open FILEHANDLE,EXPR, open FILEHANDLE, opendir
DIRHANDLE,EXPR, ord EXPR, ord, pack TEMPLATE,LIST, package NAMESPACE, pipe
READHANDLE,WRITEHANDLE, pop ARRAY, pop, pos SCALAR, pos, print FILEHANDLE
LIST, print LIST, print, printf FILEHANDLE FORMAT, LIST, printf FORMAT,
LIST, prototype FUNCTION, push ARRAY,LIST, q/STRING/, qq/STRING/,
qx/STRING/, qw/STRING/, quotemeta EXPR, quotemeta, rand EXPR, rand, read
FILEHANDLE,SCALAR,LENGTH,OFFSET, read FILEHANDLE,SCALAR,LENGTH, readdir
DIRHANDLE, readlink EXPR, readlink, recv SOCKET,SCALAR,LEN,FLAGS, redo
LABEL, redo, ref EXPR, ref, rename OLDNAME,NEWNAME, require EXPR, require,
reset EXPR, reset, return EXPR, return, reverse LIST, rewinddir DIRHANDLE,
rindex STR,SUBSTR,POSITION, rindex STR,SUBSTR, rmdir FILENAME, rmdir, s///,
scalar EXPR, seek FILEHANDLE,POSITION,WHENCE, seekdir DIRHANDLE,POS, select
d1295 14
a1308 13
sub NAME, sub NAME BLOCK, substr EXPR,OFFSET,LEN, substr EXPR,OFFSET,
symlink OLDFILE,NEWFILE, syscall LIST, sysopen FILEHANDLE,FILENAME,MODE,
sysopen FILEHANDLE,FILENAME,MODE,PERMS, sysread
FILEHANDLE,SCALAR,LENGTH,OFFSET, sysread FILEHANDLE,SCALAR,LENGTH, sysseek
FILEHANDLE,POSITION,WHENCE, system LIST, syswrite
FILEHANDLE,SCALAR,LENGTH,OFFSET, syswrite FILEHANDLE,SCALAR,LENGTH, tell
FILEHANDLE, tell, telldir DIRHANDLE, tie VARIABLE,CLASSNAME,LIST, tied
VARIABLE, time, times, tr///, truncate FILEHANDLE,LENGTH, truncate
EXPR,LENGTH, uc EXPR, uc, ucfirst EXPR, ucfirst, umask EXPR, umask, undef
EXPR, undef, unlink LIST, unlink, unpack TEMPLATE,EXPR, untie VARIABLE,
unshift ARRAY,LIST, use Module LIST, use Module, use Module VERSION LIST,
use VERSION, utime LIST, values HASH, vec EXPR,OFFSET,BITS, wait, waitpid
PID,FLAGS, wantarray, warn LIST, write FILEHANDLE, write EXPR, write, y///
d1320 1
a1320 1
$ARG, $_, $E<lt>I<digit>E<gt>, $MATCH, $&, $PREMATCH, $`, $POSTMATCH, $',
d1337 6
a1342 3
$DEBUGGING, $^D, $SYSTEM_FD_MAX, $^F, $^H, $INPLACE_EDIT, $^I, $OSNAME,
$^O, $PERLDB, $^P, $BASETIME, $^T, $WARNING, $^W, $EXECUTABLE_NAME, $^X,
$ARGV, @@ARGV, @@INC, %INC, $ENV{expr}, $SIG{expr}, $^M
d1354 3
a1356 1
=item Private Variables via my()
d1362 6
d1413 1
a1413 1
lib, locale, ops, overload, sigtrap, strict, subs, vmsish, vars
d1422 10
a1431 10
ExtUtils::Mkbootstrap, ExtUtils::Mksymlists, ExtUtils::testlib, Fcntl,
File::Basename, File::CheckTree, File::Compare, File::Copy, File::Find,
File::Path, File::stat, FileCache, FileHandle, FindBin, GDBM_File,
Getopt::Long, Getopt::Std, I18N::Collate, IO, IO::File, IO::Handle,
IO::Pipe, IO::Seekable, IO::Select, IO::Socket, IPC::Open2, IPC::Open3,
Math::BigFloat, Math::BigInt, Math::Complex, Math::Trig, NDBM_File,
Net::Ping, Net::hostent, Net::netent, Net::protoent, Net::servent, Opcode,
Pod::Text, POSIX, SDBM_File, Safe, Search::Dict, SelectSaver, SelfLoader,
Shell, Socket, Symbol, Sys::Hostname, Sys::Syslog, Term::Cap,
Term::Complete, Term::ReadLine, Test::Harness, Text::Abbrev,
d1485 1
a1485 1
applications contain some perl code which could be reused, Break-out the
d1494 19
d1550 12
d1587 1
a1587 1
B<Case-mapping interpolation> (with C<\l>, C<\L>, C<\u> or <\U>),
d1640 4
d1648 4
d1845 2
d1910 2
a1911 2
TIEHANDLE classname, LIST, PRINT this, LIST, PRINTF this, LIST, READ this
LIST, READLINE this, GETC this, DESTROY this
d1958 6
d1978 2
d1986 2
d2039 10
a2048 10
command, A, O [opt[=val]] [opt"val"] [opt?].., C<recallCommand>,
C<ShellBang>, C<pager>, C<tkRunning>, C<signalLevel>, C<warnLevel>,
C<dieLevel>, C<AutoTrace>, C<LineInfo>, C<inhibit_exit>, C<PrintRet>,
C<ornaments>, C<frame>, C<maxTraceLen>, C<arrayDepth>, C<hashDepth>,
C<compactDump>, C<veryCompact>, C<globPrint>, C<DumpDBFiles>,
C<DumpPackages>, C<quote>, C<HighBit>, C<undefPrint>, C<UsageOnly>, C<TTY>,
C<noTTY>, C<ReadLine>, C<NonStop>, E<lt> [ command ], E<lt>E<lt> command,
E<gt> command, E<gt>E<gt> command, { [ command ], {{ command, ! number, !
-number, ! pattern, !! cmd, H -number, q or ^D, R, |dbcmd, ||dbcmd, =
[alias value], command, m expr, m package
d2070 24
d2096 16
a2111 1
=item BUGS
d2135 2
d2168 1
a2168 1
Parsing, Parsing, Parsing
d2176 2
a2177 2
(Arrays), (Arrays), (Hashes), (Globs), (Scalar String), (Constants),
(Scalars), (Variable Suicide)
d2192 1
a2192 1
Regular Expression, Regular Expression
d2213 108
a2320 1
Unclassified
d2324 4
d2336 10
d2350 2
d2412 2
a2413 2
B<PerlIO_write(f,buf,count)>, B<PerlIO_close(f)>, B<PerlIO_puts(s,f)>,
B<PerlIO_putc(c,f)>, B<PerlIO_ungetc(c,f)>, B<PerlIO_getc(f)>,
d2474 2
d2494 4
d2618 11
d2671 1
a2671 1
AvFILL, av_clear, av_extend, av_fetch, av_len, av_make, av_pop, av_push,
d2673 18
a2690 16
DBsingle, DBsub, DBtrace, dMARK, dORIGMARK, dowarn, dSP, dXSARGS, dXSI32,
dXSI32, ENTER, EXTEND, FREETMPS, G_ARRAY, G_DISCARD, G_EVAL, GIMME,
GIMME_V, G_NOARGS, G_SCALAR, G_VOID, gv_fetchmeth, gv_fetchmethod,
gv_fetchmethod_autoload, gv_stashpv, gv_stashsv, GvSV, HEf_SVKEY, HeHASH,
HeKEY, HeKLEN, HePV, HeSVKEY, HeSVKEY_force, HeSVKEY_set, HeVAL, hv_clear,
hv_delayfree_ent, hv_delete, hv_delete_ent, hv_exists, hv_exists_ent,
hv_fetch, hv_fetch_ent, hv_free_ent, hv_iterinit, hv_iterkey, hv_iterkeysv,
hv_iternext, hv_iternextsv, hv_iterval, hv_magic, HvNAME, hv_store,
hv_store_ent, hv_undef, isALNUM, isALPHA, isDIGIT, isLOWER, isSPACE,
isUPPER, items, ix, LEAVE, MARK, mg_clear, mg_copy, mg_find, mg_free,
mg_get, mg_len, mg_magical, mg_set, Move, na, New, Newc, Newz, newAV,
newHV, newRV_inc, newRV_noinc, newSV, newSViv, newSVnv, newSVpv, newSVrv,
newSVsv, newXS, newXSproto, Nullav, Nullch, Nullcv, Nullhv, Nullsv,
ORIGMARK, perl_alloc, perl_call_argv, perl_call_method, perl_call_pv,
perl_call_sv, perl_construct, perl_destruct, perl_eval_sv, perl_eval_pv,
perl_free, perl_get_av, perl_get_cv, perl_get_hv, perl_get_sv, perl_parse,
d2692 23
a2714 16
PUSHn, PUSHp, PUSHs, PUTBACK, Renew, Renewc, RETVAL, safefree, safemalloc,
saferealloc, savepv, savepvn, SAVETMPS, SP, SPAGAIN, ST, strEQ, strGE,
strGT, strLE, strLT, strNE, strnEQ, strnNE, sv_2mortal, sv_bless, sv_catpv,
sv_catpvn, sv_catpvf, sv_catsv, sv_cmp, sv_cmp, SvCUR, SvCUR_set, sv_dec,
sv_dec, SvEND, sv_eq, SvGROW, sv_grow, sv_inc, SvIOK, SvIOK_off, SvIOK_on,
SvIOK_only, SvIOK_only, SvIOKp, sv_isa, SvIV, sv_isobject, SvIVX, SvLEN,
sv_len, sv_len, sv_magic, sv_mortalcopy, SvOK, sv_newmortal, sv_no, SvNIOK,
SvNIOK_off, SvNIOKp, SvNOK, SvNOK_off, SvNOK_on, SvNOK_only, SvNOK_only,
SvNOKp, SvNV, SvNVX, SvPOK, SvPOK_off, SvPOK_on, SvPOK_only, SvPOK_only,
SvPOKp, SvPV, SvPVX, SvREFCNT, SvREFCNT_dec, SvREFCNT_inc, SvROK,
SvROK_off, SvROK_on, SvRV, sv_setiv, sv_setnv, sv_setpv, sv_setpvn,
sv_setpvf, sv_setref_iv, sv_setref_nv, sv_setref_pv, sv_setref_pvn,
sv_setsv, SvSTASH, SVt_IV, SVt_PV, SVt_PVAV, SVt_PVCV, SVt_PVHV, SVt_PVMG,
SVt_NV, SvTRUE, SvTYPE, svtype, SvUPGRADE, sv_upgrade, sv_undef, sv_unref,
sv_usepvn, sv_yes, THIS, toLOWER, toUPPER, warn, XPUSHi, XPUSHn, XPUSHp,
XPUSHs, XS, XSRETURN, XSRETURN_EMPTY, XSRETURN_IV, XSRETURN_NO,
d2719 1
a2719 3
=item EDITOR

=item DATE
d2803 26
d2831 14
d2853 7
a2859 1
=item BUGS
d2861 1
a2861 1
=item AUTHOR
d2914 8
a2961 8
=head2 ops - Perl pragma to restrict unsafe operations when compiling

=item SYNOPSIS	

=item DESCRIPTION

=item SEE ALSO

d3023 4
d3129 7
a3135 1
=item CAVEATS
d3139 1
a3139 1
=head2 Benchmark - benchmark running times of code
d3145 2
d3149 1
a3149 1
=item Methods
d3151 1
a3151 1
new, debug
d3153 1
a3153 1
=item Standard Exports
d3155 1
a3155 3
timeit(COUNT, CODE), timethis ( COUNT, CODE, [ TITLE, [ STYLE ]] ),
timethese ( COUNT, CODEHASHREF, [ STYLE ] ), timediff ( T1, T2 ), timestr (
TIMEDIFF, [ STYLE, [ FORMAT ]] )
d3157 1
a3157 1
=item Optional Exports
d3159 1
a3159 1
clearcache ( COUNT ), clearallcache ( ), disablecache ( ), enablecache ( )
d3161 1
a3161 1
=back
d3163 1
a3163 1
=item NOTES
d3165 1
a3165 1
=item INHERITANCE
d3167 1
a3167 1
=item CAVEATS
d3169 1
a3169 1
=item AUTHORS
d3171 1
a3171 1
=item MODIFICATION HISTORY
d3173 1
a3173 1
=head2 Bundle::CPAN - A bundle to play with all the other modules on CPAN
d3175 1
a3175 1
=item SYNOPSIS
d3177 1
a3177 1
=item CONTENTS
d3179 1
a3179 1
=item DESCRIPTION
d3181 1
a3181 1
=item AUTHOR
d3183 1
a3183 1
=head2 CGI - Simple Common Gateway Interface Class
d3185 1
a3185 1
=item SYNOPSIS
d3187 1
a3187 1
=item ABSTRACT
d3189 109
a3297 1
=item INSTALLATION
d3301 45
d3348 164
a3511 1
=item CREATING A NEW QUERY OBJECT:
d3531 5
a3535 1
=item SAVING THE STATE OF THE FORM TO A FILE:
d3537 8
a3544 1
=item CREATING A SELF-REFERENCING URL THAT PRESERVES STATE INFORMATION:
d3546 1
a3546 1
=item COMPATIBILITY WITH CGI-LIB.PL
d3548 1
a3548 1
=item CALLING CGI FUNCTIONS THAT TAKE MULTIPLE ARGUMENTS
d3550 1
a3550 1
=item CREATING THE HTTP HEADER:
d3552 1
a3552 1
=item GENERATING A REDIRECTION INSTRUCTION
d3554 1
a3554 1
=item CREATING THE HTML HEADER:
d3560 21
d3583 1
a3583 1
=item CREATING FORMS
d3675 1
a3675 1
=item CREATING HTML ELEMENTS
d3677 2
a3678 1
=over
d3680 1
a3680 1
=item PROVIDING ARGUMENTS TO HTML SHORTCUTS
d3682 2
a3683 1
=item Generating new HTML tags
d3685 1
a3685 1
=back
d3687 2
a3688 1
=item IMPORTING CGI METHOD CALLS INTO YOUR NAME SPACE
d3690 1
a3690 8
B<cgi>, B<form>, B<html2>, B<html3>, B<netscape>, B<shortcuts>,
B<standard>, B<all>

=item USING NPH SCRIPTS

In the B<use> statementSimply add ":nph" to the list of symbols to be
imported into your script:, By calling the B<nph()> method:, By using
B<-nph> parameters in the B<header()> and B<redirect()>  statements:
d3706 2
a3707 1
(david@@cnation.com), ...and many many more..
d3740 6
d3752 30
d3812 9
a3820 1
-last_page, -type, -delay, -cookie, -target, -expires
d3855 1
a3855 1
distribution
d3863 1
a3863 1
=item The 4 Classes: Authors, Bundles, Modules, Distributions
d3869 2
d3877 2
d3892 6
d3923 1
a3923 1
=head2 Carp, carp - warn of errors (from perspective of caller)
d3929 6
a3957 14
=head2 Config - access Perl configuration information

=item SYNOPSIS

=item DESCRIPTION

myconfig(), config_sh(), config_vars(@@names)

=item EXAMPLE

=item WARNING

=item NOTE

d3964 1
a3964 1
=head2 DB_File - Perl5 access to Berkeley DB
d3974 2
d4064 2
d4070 2
a4071 1
=head2 Devel::SelfStubber - generate stubs for a SelfLoading module
d4077 45
a4121 1
=head2 DirHandle - supply object methods for directory handles
d4127 1
a4127 1
=head2 DynaLoader - Dynamically load C libraries into Perl code
a4132 8
@@dl_library_path, @@dl_resolve_using, @@dl_require_symbols, @@dl_librefs,
@@dl_modules, dl_error(), $dl_debug, dl_findfile(), dl_expandspec(),
dl_load_file(), dl_loadflags(), dl_find_symbol(),
dl_find_symbol_anywhere(), dl_undef_symbols(), dl_install_xsub(),
bootstrap()

=item AUTHOR

d4160 2
d4212 17
d4290 8
a4297 7
force (o), guess_name, has_link_code, init_dirscan, init_main, init_others,
install (o), installbin (o), libscan (o), linkext (o), lsdir, macro (o),
makeaperl (o), makefile (o), manifypods (o), maybe_command,
maybe_command_in_dirs, needs_linking (o), nicetext, parse_version, pasthru
(o), path, perl_script, perldepend (o), pm_to_blib, post_constants (o),
post_initialize (o), postamble (o), prefixify, processPL (o), realclean
(o), replace_manpage_separator, static (o), static_lib (o), staticmake (o),
d4382 2
a4383 2
C, CONFIG, CONFIGURE, DEFINE, DIR, DISTNAME, DL_FUNCS, DL_VARS,
EXCLUDE_EXT, EXE_FILES, NO_VC, FIRST_MAKEFILE, FULLPERL, H, INC,
d4390 3
a4392 3
PERL_ARCHLIB, PERL_LIB, PERL_SRC, PL_FILES, PM, PMLIBDIRS, PREFIX,
PREREQ_PM, SKIP, TYPEMAPS, VERSION, VERSION_FROM, XS, XSOPT, XSPROTOARG,
XS_VERSION
d4405 2
a4406 2
   make distcheck,    make skipcheck,	 make distclean,    make manifest, 
  make distdir,    make tardist,    make dist,	  make uutardist,    make
d4409 2
a4437 8
=head2 ExtUtils::Miniperl, writemain - write the C code for perlmain.c

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

d4457 16
d4479 8
d4553 60
a4612 1
=item AUTHOR
d4614 2
a4615 1
=item HISTORY
d4619 1
a4619 1
=head2 File::Find, find - traverse a file tree
d4625 10
a4634 1
=head2 File::Path - create or remove a series of directories
d4640 1
a4640 3
=item AUTHORS

=item REVISION
d4705 1
a4705 1
E<lt>noneE<gt>, !, =s, :s, =i, :i, =f, :f
d4717 1
a4717 1
=item Return value
d4728 1
a4728 1
(default: reset), bundling_override (default: reset), ignore_case 
d4730 1
a4730 1
reset), debug (default: reset)
d4736 4
d4760 1
a4760 1
=head2 IO::File - supply object methods for filehandles
d4778 2
a4779 1
=head2 IO::Handle - supply object methods for I/O handles
d4803 1
a4803 1
=head2 IO::Pipe, IO::pipe - supply object methods for pipes
d4823 2
a4824 1
=head2 IO::Seekable - supply seek based methods for I/O objects
d4834 2
a4835 1
=head2 IO::Select - OO interface to the select system call
d4857 2
a4858 1
=head2 IO::Socket - Object interface to socket communications
d4898 1
a4898 1
=head2 IO::lib::IO::File, IO::File - supply object methods for filehandles
d4904 1
a4904 7
=item CONSTRUCTOR

new ([ ARGS ] ), new_tmpfile

=item METHODS

open( FILENAME [,MODE [,PERMS]] )
d4908 2
a4909 4
=item HISTORY

=head2 IO::lib::IO::Handle, IO::Handle - supply object methods for I/O
handles
d4915 1
a4915 17
=item CONSTRUCTOR

new (), new_from_fd ( FD, MODE )

=item METHODS

$fh->fdopen ( FD, MODE ), $fh->opened, $fh->getline, $fh->getlines,
$fh->ungetc ( ORD ), $fh->write ( BUF, LEN [, OFFSET }\] ), $fh->flush,
$fh->error, $fh->clearerr, $fh->untaint

=item NOTE

=item SEE ALSO

=item BUGS

=item HISTORY
d4917 1
a4917 1
=head2 IO::lib::IO::Pipe, IO::pipe - supply object methods for pipes
d4923 1
a4923 7
=item CONSTRCUTOR

new ( [READER, WRITER] )

=item METHODS

reader ([ARGS]), writer ([ARGS]), handles ()
d4927 1
a4927 1
=item AUTHOR
d4931 1
a4931 13
=head2 IO::lib::IO::Seekable, IO::Seekable - supply seek based methods for
I/O objects

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item HISTORY

=head2 IO::lib::IO::Select, IO::Select - OO interface to the select system
call
a4936 4
=item CONSTRUCTOR

new ( [ HANDLES ] )

d4939 3
a4941 3
add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_error ( [ TIMEOUT ] ), count
(), bits(), bits(), select ( READ, WRITE, ERROR [, TIMEOUT ] )
d4943 1
a4943 1
=item EXAMPLE
d4949 2
a4950 2
=head2 IO::lib::IO::Socket, IO::Socket - Object interface to socket
communications
a4955 22
=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

accept([PKG]), timeout([VAL]), sockopt(OPT [, VAL]), sockdomain, socktype,
protocol

=item SUB-CLASSES

=over

=item IO::Socket::INET

=item METHODS

sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()

=item IO::Socket::UNIX

d4958 4
a4961 3
hostpath(), peerpath()

=back
a4968 19
=head2 IPC::Open2, open2 - open a process for both reading and writing

=item SYNOPSIS

=item DESCRIPTION

=item WARNING 

=item SEE ALSO

=head2 IPC::Open3, open3 - open a process for reading, writing, and error
handling

=item SYNOPSIS

=item DESCRIPTION

=item WARNING

d4991 2
d5012 3
a5014 1
=item ERRORS DUE TO DIVISION BY ZERO
d5028 2
d5038 18
a5055 1
=item ANGLE CONVERSIONS
d5171 3
a5173 2
:default, :filesys_read, :sys_db, :browse, :filesys_open, :filesys_write,
:subprocess, :ownprocess, :others, :still_to_be_decided, :dangerous
d5212 1
a5212 1
=item SYNOPSIS	
d5345 1
a5345 1
=head2 Pod::Html, Pod::HTML - module to convert pod files to HTML
a5381 29
=head2 Safe - Compile and execute code in restricted compartments

=item SYNOPSIS

=item DESCRIPTION

a new namespace, an operator mask

=item WARNING

=over

=item RECENT CHANGES

=item Methods in class Safe

permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)

=item Some Safety Issues

Memory, CPU, Snooping, Signals, State Changes

=item AUTHOR

=back

d5461 2
a5462 1
setlogmask $mask_priority, closelog
d5508 2
d5514 16
d5551 2
d5567 2
a5568 1
=head2 Text::ParseWords - parse text into an array of tokens
d5574 8
d5620 81
d5789 2
a5790 2
isa ( TYPE ), can ( METHOD ), VERSION ( [ REQUIRE ] ), isa ( VAL, TYPE ),
can ( VAL, METHOD )
@


1.1
log
@Initial revision
@
text
@d9 1
a9 1
documentation set.  It is meant to be be quickly scanned or grepped
a13 3



a17 1

a19 1

d22 4
a25 4
Object-oriented programming, Embeddable and Extensible, POSIX
compliant, Package constructors and destructors, Multiple simultaneous
DBM implementations, Subroutine definitions may now be autoloaded,
Regular expression enhancements
a28 3

HOME, LOGDIR, PATH, PERL5LIB, PERL5DB, PERLLIB

a30 1

a32 1

a34 1

a36 1

a38 1

d41 2
a42 5




=head2 perldata - Perl data types
d46 5
d54 1
a54 1
=item Variable names
d56 1
d58 2
a59 1
=item Context
d61 1
d63 1
a63 1
=item Scalar values
d65 1
d67 1
a67 7
=item Scalar value constructors


=item List value constructors


=item Typeglobs and FileHandles
d69 1
d71 1
d73 1
d77 1
d79 2
d82 2
a83 2

=head2 perlsyn - Perl syntax
a86 1

d89 1
a89 2
=item Declarations

d91 1
a91 1
=item Simple statements
d93 1
d95 1
a95 1
=item Compound statements
d97 1
d99 1
a99 1
=item Loop Control
d101 2
d104 1
a104 1
=item For Loops
d106 1
d108 1
a108 1
=item Foreach Loops
d110 1
d112 1
a112 1
=item Basic BLOCKs and Switch Statements
d114 1
d116 2
a117 1
=item Goto
d119 1
d121 1
a121 1
=item PODs: Embedded Documentation
d123 2
d126 1
d128 1
d130 1
a130 1
=back
d132 1
d134 1
d136 2
d139 2
a140 1
=head2 perlop - Perl operators and precedence
d142 2
a143 1
=item SYNOPSIS
d145 1
d147 1
a147 1
=item DESCRIPTION
d149 1
d151 1
a151 1
=over
d153 1
a153 1
=item Terms and List Operators (Leftward)
d155 1
d157 1
a157 1
=item The Arrow Operator
d159 1
d161 1
a161 1
=item Autoincrement and Autodecrement
d163 1
d165 1
a165 1
=item Exponentiation
d167 1
d169 1
a169 1
=item Symbolic Unary Operators
d171 1
d173 1
a173 1
=item Binding Operators
d175 1
d177 1
a177 1
=item Multiplicative Operators
d179 2
d182 1
a182 1
=item Additive Operators
d184 1
d186 1
a186 1
=item Shift Operators
d188 1
d190 1
a190 1
=item Named Unary Operators
d192 1
d194 1
a194 1
=item Relational Operators
d196 1
d198 1
a198 1
=item Equality Operators
d200 1
d202 1
a202 1
=item Bitwise And
d204 1
d206 1
a206 1
=item Bitwise Or and Exclusive Or
d208 1
d210 1
a210 1
=item C-style Logical And
d212 1
d214 1
a214 1
=item C-style Logical Or
d216 1
d218 1
a218 1
=item Range Operator
d220 1
d222 1
a222 1
=item Conditional Operator
d224 1
d226 1
a226 1
=item Assignment Operators
d228 1
d230 1
a230 1
=item Comma Operator
d232 1
d234 1
a234 1
=item List Operators (Rightward)
d236 1
d238 1
a238 1
=item Logical Not
d240 1
d242 2
a243 1
=item Logical And
d245 2
d248 1
a248 1
=item Logical or and Exclusive Or
d250 1
d252 1
a252 1
=item C Operators Missing From Perl
d254 2
d257 1
a257 1
unary &, unary *, (TYPE)
d259 1
a259 1
=item Quote and Quotelike Operators
d261 1
d263 2
a264 1
=item Regexp Quotelike Operators
d266 1
d268 2
a269 4
?PATTERN?, m/PATTERN/gimosx, /PATTERN/gimosx, q/STRING/, C<'STRING'>,
qq/STRING/, "STRING", qx/STRING/, `STRING`, qw/STRING/,
s/PATTERN/REPLACEMENT/egimosx, tr/SEARCHLIST/REPLACEMENTLIST/cds,
y/SEARCHLIST/REPLACEMENTLIST/cds
d271 1
a271 1
=item I/O Operators
d273 1
d275 1
a275 1
=item Constant Folding
d277 1
d279 1
a279 1
=item Integer arithmetic
d281 1
d283 1
d285 1
d287 1
a287 1
=back
d289 1
d291 1
d293 1
d295 1
a295 1
=head2 perlre - Perl regular expressions
d297 1
a297 1
=item DESCRIPTION
d299 1
d303 1
a303 2
=item Regular Expressions

d305 1
a305 1
(?#text), (?:regexp), (?=regexp), (?!regexp), (?imsx)
d307 1
a307 1
=item Backtracking
d309 1
d311 1
a311 1
=item Version 8 Regular Expressions
d313 1
d315 1
a315 1
=item WARNING on \1 vs $1
d317 1
d319 1
d321 1
d323 2
a324 1
=back
d326 1
d328 2
d331 1
d333 1
a333 1
=head2 perlrun - how to execute the Perl interpreter
d335 1
a335 1
=item SYNOPSIS
d337 1
d339 1
a339 1
=item DESCRIPTION
d341 1
d343 3
a345 1
=over
d347 1
a347 1
=item Switches
d349 1
d351 1
a351 5
B<-0>I<digits>, B<-a>, B<-c>, B<-d>, B<-d:foo>, B<-D>I<number>,
B<-D>I<list>, B<-e> I<commandline>, B<-F>I<regexp>, B<-i>I<extension>,
B<-I>I<directory>, B<-l>I<octnum>, B<-m>I<module>, B<-M>I<module>,
B<-n>, B<-p>, B<-P>, B<-s>, B<-S>, B<-T>, B<-u>, B<-U>, B<-v>, B<-V>,
B<-V:name>, B<-w>, B<-x> I<directory>
d353 1
d355 1
d357 4
a360 1
=back
d362 1
d364 2
d367 1
d369 1
a369 1
=head2 perlfunc - Perl builtin functions
d371 1
a371 1
=item DESCRIPTION
d373 1
d375 1
d377 1
d379 1
a379 1
=over
d381 1
a381 1
=item Perl Functions by Category
d383 1
d385 1
a385 11
Functions for SCALARs or strings, Regular expressions and pattern
matching, Numeric functions, Functions for real @@ARRAYs, Functions for
list data, Functions for real %HASHes, Input and output functions,
Functions for fixed length data or records, Functions for filehandles,
files, or directories, Keywords related to the control flow of your
perl program, Keywords related to scoping, Miscellaneous functions,
Functions for processes and process groups, Keywords related to perl
modules, Keywords related to classes and object-orientedness, Low-level
socket functions, System V interprocess communication functions,
Fetching user and group info, Fetching network info, Time-related
functions
d387 1
a387 1
=item Alphabetical Listing of Perl Functions
d389 1
d391 1
a391 16
-X FILEHANDLE, -X EXPR, -X, abs VALUE, accept NEWSOCKET,GENERICSOCKET,
alarm SECONDS, atan2 Y,X, bind SOCKET,NAME, binmode FILEHANDLE, bless
REF,CLASSNAME, bless REF, caller EXPR, caller, chdir EXPR, chmod LIST,
chomp VARIABLE, chomp LIST, chomp, chop VARIABLE, chop LIST, chop,
chown LIST, chr NUMBER, chroot FILENAME, close FILEHANDLE, closedir
DIRHANDLE, connect SOCKET,NAME, continue BLOCK, cos EXPR, crypt
PLAINTEXT,SALT, dbmclose ASSOC_ARRAY, dbmopen ASSOC,DBNAME,MODE,
defined EXPR, delete EXPR, die LIST, do BLOCK, do SUBROUTINE(LIST), do
EXPR, dump LABEL, each ASSOC_ARRAY, eof FILEHANDLE, eof (), eof, eval
EXPR, eval BLOCK, exec LIST, exists EXPR, exit EXPR, exp EXPR, fcntl
FILEHANDLE,FUNCTION,SCALAR, fileno FILEHANDLE, flock
FILEHANDLE,OPERATION, fork, format, formline PICTURE, LIST, getc
FILEHANDLE, getc, getlogin, getpeername SOCKET, getpgrp PID, getppid,
getpriority WHICH,WHO, getpwnam NAME, getgrnam NAME, gethostbyname
NAME, getnetbyname NAME, getprotobyname NAME, getpwuid UID, getgrgid
GID, getservb
d393 1
d395 2
d398 1
a398 1
=back
d400 1
d402 1
d404 1
d406 1
a406 1
=head2 perlvar - Perl predefined variables
d408 1
a408 1
=item DESCRIPTION
d410 1
d412 1
a412 1
=over
d414 1
a414 1
=item Predefined Names
d416 1
d418 2
a419 17
$ARG, $_, $<I<digit>>, $MATCH, $&, $PREMATCH, $`, $POSTMATCH, $',
$LAST_PAREN_MATCH, $+, $MULTILINE_MATCHING, $*, input_line_number
HANDLE EXPR, $INPUT_LINE_NUMBER, $NR, $, input_record_separator HANDLE
EXPR, $INPUT_RECORD_SEPARATOR, $RS, $/, autoflush HANDLE EXPR,
$OUTPUT_AUTOFLUSH, $|, output_field_separator HANDLE EXPR,
$OUTPUT_FIELD_SEPARATOR, $OFS, $,, output_record_separator HANDLE EXPR,
$OUTPUT_RECORD_SEPARATOR, $ORS, $\, $LIST_SEPARATOR, $",
$SUBSCRIPT_SEPARATOR, $SUBSEP, $;, $OFMT, $#, format_page_number HANDLE
EXPR, $FORMAT_PAGE_NUMBER, $%, format_lines_per_page HANDLE EXPR,
$FORMAT_LINES_PER_PAGE, $=, format_lines_left HANDLE EXPR,
$FORMAT_LINES_LEFT, $-, format_name HANDLE EXPR, $FORMAT_NAME, $~,
format_top_name HANDLE EXPR, $FORMAT_TOP_NAME, $^,
format_line_break_characters HANDLE EXPR,
$FORMAT_LINE_BREAK_CHARACTERS, $:, format_formfeed HANDLE EXPR,
$FORMAT_FORMFEED, $^L, $ACCUMULATOR, $^A, $CHILD_ERROR, $?, $OS_ERROR,
$ERRNO, $!, $EVAL_ERROR, $@@, $PROCESS_ID, $PID, $$, $REAL_USER_ID,
$UID, $<,
d421 2
d424 1
d428 1
d430 1
d432 1
d434 1
a434 1
=head2 perlsub - Perl subroutines
d436 1
a436 1
=item SYNOPSIS
d438 1
d440 1
a440 1
=item DESCRIPTION
d442 1
d444 1
a444 1
=over
d446 1
a446 1
=item Private Variables via my()
d448 2
d451 1
a451 1
=item Temporary Values via local()
d453 1
d455 1
a455 1
=item Passing Symbol Table Entries (typeglobs)
d457 2
d460 1
a460 1
=item Pass by Reference
d462 1
d464 1
a464 1
=item Prototypes
d466 2
d469 1
a469 1
=item Overriding Builtin Functions
d471 1
d473 1
a473 1
=item Autoloading
d475 1
d477 1
d479 1
d481 1
a481 1
=back
d483 1
a483 1
=item SEE ALSO
d485 1
d487 1
d489 1
d491 2
d494 1
a494 1
=head2 perlmod - Perl modules (packages)
d496 1
a496 1
=item DESCRIPTION
d498 1
d500 1
a500 1
=over
d502 1
a502 1
=item Packages
d504 1
d506 1
a506 1
=item Symbol Tables
d508 1
d510 1
a510 1
=item Package Constructors and Destructors
d512 1
d514 1
a514 1
=item Perl Classes
d516 1
d518 2
a519 1
=item Perl Modules
d521 1
d523 2
d526 1
d530 1
a530 1
=item NOTE
d532 1
d534 1
a534 1
=item THE PERL MODULE LIBRARY
d536 1
d538 2
a539 1
=over
d541 2
a542 1
=item Pragmatic Modules
d544 1
d546 2
a547 1
diagnostics, integer, less, overload, sigtrap, strict, subs
d549 1
a549 1
=item Standard Modules
d551 2
d554 1
a554 7
AnyDBM_File, AutoLoader, AutoSplit, Benchmark, Carp, Config, Cwd,
DB_File, Devel::SelfStubber, DynaLoader, English, Env, Exporter,
ExtUtils::Liblist, ExtUtils::MakeMaker, ExtUtils::Manifest,
ExtUtils::Mkbootstrap, ExtUtils::Miniperl, Fcntl, File::Basename,
File::CheckTree, File::Find, FileHandle, File::Path, Getopt::Long,
Getopt::Std, I18N::Collate, IPC::Open2, IPC::Open3, Net::Ping, POSIX,
SelfLoader, Safe, Socket, Test::Harness, Text::Abbrev
d556 1
a556 1
=item Extension Modules
d558 1
d560 1
d562 2
d565 1
a565 1
=back
d567 1
a567 1
=item CPAN
d569 1
d571 1
a571 13
Language Extensions and Documentation Tools, Development Support,
Operating System Interfaces, Networking, Device Control (modems) and
InterProcess Communication, Data Types and Data Type Utilities,
Database Interfaces, User Interfaces, Interfaces to / Emulations of
Other Programming Languages, File Names, File Systems and File Locking
(see also File Handles), String Processing, Language Text Processing,
Parsing and Searching, Option, Argument, Parameter and Configuration
File Processing, Internationalization and Locale, Authentication,
Security and Encryption, World Wide Web, HTML, HTTP, CGI, MIME, Server
and Daemon Utilities, Archiving and Compression, Images, Pixmap and
Bitmap Manipulation, Drawing and Graphing, Mail and Usenet News,
Control Flow Utilities (callbacks and exceptions etc), File Handle and
Input/Output Stream Utilities, Miscellaneous Modules
d573 1
a573 1
=item Modules: Creation, Use and Abuse
d575 1
d577 1
a577 1
=over
d579 1
a579 1
=item Guidelines for Module Creation
d581 1
d583 1
a583 11
Do similar modules already exist in some form?, Try to design the new
module to be easy to extend and reuse, Some simple style guidelines,
Select what to export, Select a name for the module, Have you got it
right?, README and other Additional Files, A description of the
module/package/extension etc, A copyright notice - see below,
Prerequisites - what else you may need to have, How to build it -
possible changes to Makefile.PL etc, How to install it, Recent changes
in this release, especially incompatibilities, Changes / enhancements
you plan to make in the future, Adding a Copyright Notice, Give the
module a version/issue/release number, How to release and distribute a
module, Take care when changing a released module
d585 1
a585 1
=item Guidelines for Converting Perl 4 Library Scripts into Modules
d587 1
d589 1
a589 5
There is no requirement to convert anything, Consider the implications,
Make the most of the opportunity, The pl2pm utility will get you
started, Adds the standard Module prologue lines, Converts package
specifiers from ' to ::, Converts die(...) to croak(...), Several other
minor changes
d591 1
a591 1
=item Guidelines for Reusing Application Code
d593 2
d596 1
a596 5
Complete applications rarely belong in the Perl Module Library, Many
applications contain some perl code which could be reused, Break-out
the reusable code into one or more separate module files, Take the
opportunity to reconsider and redesign the interfaces, In some cases
the 'application' can then be reduced to a small
d598 1
d600 1
d602 2
a603 1
=back
d605 2
d608 1
d610 1
d612 1
a612 1
=head2 perlref - Perl references and nested data structures
d614 1
a614 1
=item DESCRIPTION
d616 1
d618 1
a618 1
=over
d620 1
a620 1
=item Symbolic references
d622 1
d624 1
a624 1
=item Not-so-symbolic references
d626 1
d628 2
d631 2
d634 1
a634 1
=back
d636 2
a637 1
=item WARNING
d639 2
d642 1
a642 1
=item SEE ALSO
d644 1
d646 1
d648 1
d650 1
d652 1
a652 1
=head2 perldsc - Perl Data Structures Cookbook
d654 1
a654 1
=item DESCRIPTION
d656 1
d658 1
a658 3
arrays of arrays, hashes of arrays, arrays of hashes, hashes of hashes,
more elaborate constructs, recursive and self-referential data
structures, objects
d660 1
a660 1
=item REFERENCES
d662 1
d664 2
a665 1
=item COMMON MISTAKES
d667 1
d669 1
a669 1
=item CAVEAT ON PRECEDENCE
d671 1
d673 1
a673 1
=item WHY YOU SHOULD ALWAYS C<use strict>
d675 1
d677 1
a677 1
=item DEBUGGING
d679 1
d681 1
a681 1
=item CODE EXAMPLES
d683 1
d685 1
a685 1
=item LISTS OF LISTS
d687 1
d689 1
a689 1
=over
d691 1
a691 1
=item Declaration of a LIST OF LISTS
d693 1
d695 1
a695 1
=item Generation of a LIST OF LISTS
d697 1
d699 1
a699 1
=item Access and Printing of a LIST OF LISTS
d701 1
d703 2
d706 1
d708 1
a708 1
=back
d710 1
a710 1
=item HASHES OF LISTS
d712 1
d714 1
a714 1
=over
d716 1
a716 1
=item Declaration of a HASH OF LISTS
d718 1
d720 1
a720 1
=item Generation of a HASH OF LISTS
d722 1
d724 2
a725 1
=item Access and Printing of a HASH OF LISTS
d727 1
d729 1
d731 1
d733 2
a734 1
=back
d736 3
a738 1
=item LISTS OF HASHES
d740 1
d742 2
a743 1
=over
d745 1
a745 1
=item Declaration of a LIST OF HASHES
d747 1
d749 1
a749 1
=item Generation of a LIST OF HASHES
d751 1
d753 1
a753 1
=item Access and Printing of a LIST OF HASHES
d755 1
d757 1
d759 1
d761 1
a761 1
=back
d763 1
a763 1
=item HASHES OF HASHES
d765 1
d767 2
a768 1
=over
d770 1
a770 1
=item Declaration of a HASH OF HASHES
d772 1
d774 1
a774 1
=item Generation of a HASH OF HASHES
d776 1
d778 2
a779 1
=item Access and Printing of a HASH OF HASHES
d781 1
d783 1
d785 2
d788 1
a788 1
=back
d790 1
a790 1
=item MORE ELABORATE RECORDS
d792 2
d795 1
a795 1
=over
d797 1
a797 1
=item Declaration of MORE ELABORATE RECORDS
d799 1
d801 1
a801 1
=item Declaration of a HASH OF COMPLEX RECORDS
d803 1
d805 1
a805 1
=item Generation of a HASH OF COMPLEX RECORDS
d807 2
d810 1
d812 1
d814 1
a814 1
=back
d816 1
a816 1
=item Database Ties
d818 1
d820 1
a820 1
=item SEE ALSO
d822 1
d824 1
a824 1
=item AUTHOR
d826 1
d828 1
d830 1
d832 1
d834 1
a834 1
=head2 perllol, perlLoL - Manipulating Lists of Lists in Perl
d838 1
d840 1
a840 2
=item Declaration and Access of Lists of Lists

d842 1
a842 1
=item Growing Your Own
d844 1
d846 1
a846 1
=item Access and Printing
d848 1
d850 1
a850 1
=item Slices
d852 1
d854 1
a854 1
=item SEE ALSO
d856 1
d858 1
a858 1
=item AUTHOR
d860 1
d862 1
d864 1
d866 1
d868 1
a868 1
=head2 perlobj - Perl objects
d870 1
a870 1
=item DESCRIPTION
d872 2
d875 1
a875 1
=over
d877 1
a877 1
=item An Object is Simply a Reference
d879 1
d881 1
a881 1
=item A Class is Simply a Package
d883 1
d885 1
a885 1
=item A Method is Simply a Subroutine
d887 1
d889 1
a889 1
=item Method Invocation
d891 1
d893 1
a893 1
=item Destructors
d895 1
d897 5
a901 1
=item WARNING
d903 1
d905 1
a905 1
=item Summary
d907 1
d909 2
a910 1
=item Two-Phased Garbage Collection
d912 1
d914 1
d916 1
d920 1
a920 1
=item SEE ALSO
d922 1
d924 1
d926 1
d928 1
d930 1
a930 1
=head2 perltie - how to hide an object class in a simple variable
d932 1
a932 1
=item SYNOPSIS
d934 1
d936 2
a937 1
=item DESCRIPTION
d939 1
d943 1
a943 1
=item Tying Scalars
d945 1
d947 1
a947 1
TIESCALAR classname, LIST, FETCH this, STORE this, value, DESTROY this
d949 1
a949 1
=item Tying Arrays
d951 1
d953 1
a953 2
TIEARRAY classname, LIST, FETCH this, index, STORE this, index, value,
DESTROY this
d955 1
a955 1
=item Tying Hashes
d957 1
d959 1
a959 3
USER, HOME, CLOBBER, LIST, TIEHASH classname, LIST, FETCH this, key,
STORE this, key, value, DELETE this, key, CLEAR this, EXISTS this, key,
FIRSTKEY this, NEXTKEY this, lastkey, DESTROY this
d961 1
a961 1
=item Tying FileHandles
d963 1
d965 1
d967 3
d971 1
a971 1
=back
d973 1
a973 1
=item SEE ALSO
d975 1
d977 1
a977 1
=item BUGS
d979 1
d981 2
a982 1
=item AUTHOR
d984 32
d1017 1
d1019 1
d1021 1
d1023 1
a1023 1
=head2 perlbot - Bag'o Object Tricks (the BOT)
d1027 1
d1029 1
a1029 1
=item OO SCALING TIPS
d1031 1
d1033 1
a1033 1
=item INSTANCE VARIABLES
d1035 1
d1037 1
a1037 1
=item SCALAR INSTANCE VARIABLES
d1039 1
d1041 1
a1041 1
=item INSTANCE VARIABLE INHERITANCE
d1043 1
d1045 1
a1045 1
=item OBJECT RELATIONSHIPS
d1047 1
d1049 1
a1049 1
=item OVERRIDING SUPERCLASS METHODS
d1051 1
d1053 1
a1053 1
=item USING RELATIONSHIP WITH SDBM
d1055 1
d1057 1
a1057 1
=item THINKING OF CODE REUSE
d1059 1
d1061 1
a1061 1
=item CLASS CONTEXT AND THE OBJECT
d1063 1
d1065 1
a1065 1
=item INHERITING A CONSTRUCTOR
d1067 1
d1069 1
a1069 1
=item DELEGATION
d1071 1
d1073 1
d1075 1
d1077 1
d1079 1
a1079 1
=head2 perldebug - Perl debugging
d1081 1
a1081 1
=item DESCRIPTION
d1083 1
d1085 1
a1085 1
=over
d1087 1
a1087 1
=item Debugging
d1089 1
d1091 1
a1091 5
h, T, s, n, f, c, c line, <CR>, l min+incr, l min-max, l line, l, -, w
line, l subname, /pattern/, ?pattern?, L, S, t, b line [ condition ], b
subname [ condition ], d line, D, a line command, A, < command, >
command, V package [symbols], X [symbols], ! number, ! -number, H
-number, q or ^D, command, p expr
d1093 1
a1093 1
=item Customization
d1095 1
d1097 1
a1097 1
=item Other resources
d1099 1
d1101 1
d1103 1
d1105 1
a1105 1
=back
d1107 1
a1107 1
=item BUGS
d1109 1
d1111 1
d1113 1
d1115 1
d1117 1
a1117 1
=head2 perldiag - various Perl diagnostics
d1119 1
a1119 1
=item DESCRIPTION
d1121 1
d1123 1
d1125 1
d1127 1
d1129 1
a1129 1
=head2 perlform - Perl formats
d1131 1
a1131 1
=item DESCRIPTION
d1133 1
d1135 4
a1138 1
=over
d1140 1
a1140 1
=item Format Variables
d1142 1
d1144 1
d1146 1
d1150 3
a1152 1
=item NOTES
d1154 1
d1158 1
a1158 1
=item Footers
d1160 1
d1162 1
a1162 1
=item Accessing Formatting Internals
d1164 1
d1166 1
d1168 1
d1172 1
a1172 1
=item WARNING
d1174 1
d1176 1
d1178 1
d1180 1
d1182 1
a1182 2
=head2 perlipc - Perl interprocess communication (signals, fifos,
pipes, safe subprocceses, sockets, and semaphores)
d1184 1
a1184 1
=item DESCRIPTION
d1186 6
d1193 1
a1193 1
=item Signals
d1195 1
d1197 2
a1198 1
=item Named Pipes
d1200 1
d1202 1
a1202 1
=item Using open() for IPC
d1204 1
d1208 1
a1208 4
=item Safe Pipe Opens


=item Bidirectional Communication
d1210 11
d1222 1
d1224 67
d1294 1
a1294 1
=item Sockets: Client/Server Communication
d1296 1
d1300 1
a1300 1
=item Internet TCP Clients and Servers
d1302 20
d1323 1
a1323 1
=item Unix-Domain TCP Clients and Servers
d1325 1
d1327 1
a1327 1
=item UDP: Message Passing
d1329 1
d1331 1
d1333 1
d1335 1
a1335 1
=back
d1337 1
a1337 1
=item SysV IPC
d1339 1
d1341 1
a1341 1
=item WARNING
d1343 1
d1345 1
a1345 1
=item NOTES
d1347 1
d1349 1
a1349 5
=item BUGS


=item AUTHOR

d1353 1
d1355 1
d1357 1
d1359 1
d1361 1
a1361 1
=head2 perlsec - Perl security
d1363 1
a1363 1
=item DESCRIPTION
d1365 1
d1367 1
d1369 1
d1371 1
d1373 1
a1373 1
=head2 perltrap - Perl traps for the unwary
d1377 1
d1381 1
a1381 1
=item Awk Traps
d1383 2
d1386 1
a1386 1
=item C Traps
d1388 18
d1407 1
a1407 1
=item Sed Traps
d1409 1
d1411 1
a1411 1
=item Shell Traps
d1413 14
d1428 1
a1428 1
=item Perl Traps
d1430 1
d1432 1
a1432 1
=item Perl4 Traps
d1434 11
d1446 1
d1448 4
d1453 1
a1453 1
=back
d1455 5
d1461 1
d1463 1
d1465 1
a1465 1
=head2 perlstyle - Perl style guide
d1469 1
d1471 1
d1473 1
d1475 1
d1477 1
a1477 1
=head2 perlxs - XS language reference manual
d1479 1
a1479 1
=item DESCRIPTION
d1481 1
d1483 1
a1483 1
=over
d1485 1
a1485 1
=item Introduction
d1487 2
d1490 1
a1490 1
=item On The Road
d1492 1
d1494 1
a1494 1
=item The Anatomy of an XSUB
d1496 1
d1498 1
a1498 1
=item The Argument Stack
d1500 1
d1502 1
a1502 1
=item The RETVAL Variable
d1504 1
d1506 1
a1506 1
=item The MODULE Keyword
d1508 1
d1510 1
a1510 1
=item The PACKAGE Keyword
d1512 1
d1514 1
a1514 1
=item The PREFIX Keyword
d1516 1
d1518 1
a1518 1
=item The OUTPUT: Keyword
d1520 1
d1522 1
a1522 1
=item The CODE: Keyword
d1524 1
d1526 10
a1535 1
=item The INIT: Keyword
d1537 1
d1539 2
a1540 1
=item The NO_INIT Keyword
d1542 1
d1544 1
a1544 1
=item Initializing Function Parameters
d1546 1
d1548 1
a1548 1
=item Default Parameter Values
d1550 1
d1552 1
a1552 1
=item The PREINIT: Keyword
d1554 1
d1556 1
a1556 1
=item The INPUT: Keyword
d1558 1
d1560 1
a1560 1
=item Variable-length Parameter Lists
d1562 1
d1564 1
a1564 1
=item The PPCODE: Keyword
d1566 1
d1568 1
a1568 1
=item Returning Undef And Empty Lists
d1570 1
d1572 1
a1572 1
=item The REQUIRE: Keyword
d1574 1
d1576 1
a1576 1
=item The CLEANUP: Keyword
d1578 1
d1580 1
a1580 1
=item The BOOT: Keyword
d1582 1
d1584 1
a1584 1
=item The VERSIONCHECK: Keyword
d1586 1
d1588 1
a1588 1
=item The PROTOTYPES: Keyword
d1590 1
d1592 1
a1592 1
=item The PROTOTYPE: Keyword
d1594 2
d1597 1
a1597 1
=item The ALIAS: Keyword
d1599 1
d1601 1
a1601 1
=item The INCLUDE: Keyword
d1603 646
d2252 103
d2356 5
a2360 1
=item The & Unary Operator
d2362 1
d2364 1
a2364 1
=item Inserting Comments and C Preprocessor Directives
d2366 1
d2368 1
a2368 1
=item Using XS With C++
d2370 1
d2372 1
a2372 1
=item Interface Strategy
d2374 1
d2376 1
a2376 1
=item Perl Objects And C Structures
d2378 1
d2380 1
a2380 1
=item The Typemap
d2382 1
d2384 1
d2386 1
d2390 9
a2398 1
=item EXAMPLES
d2400 1
d2402 1
a2402 1
=item XS VERSION
d2404 1
d2406 1
a2406 1
=item AUTHOR
d2408 1
d2410 38
d2449 1
d2451 1
d2453 1
a2453 1
=head2 perlxstut, perlXStut - Tutorial for XSUB's
d2457 31
d2491 11
a2501 1
=item VERSION CAVEAT
d2503 1
d2505 1
a2505 1
=item DYNAMIC VERSUS STATIC
d2507 1
d2509 1
a2509 1
=item EXAMPLE 1
d2511 1
d2513 1
a2513 1
=item EXAMPLE 2
d2515 1
d2517 1
a2517 1
=item WHAT HAS GONE ON?
d2519 3
d2523 1
a2523 1
=item EXAMPLE 3
d2525 1
d2527 1
a2527 1
=item WHAT'S NEW HERE?
d2529 1
d2531 1
a2531 1
=item INPUT AND OUTPUT PARAMETERS
d2533 1
d2535 1
a2535 1
=item THE XSUBPP COMPILER
d2537 1
d2539 1
a2539 1
=item THE TYPEMAP FILE
d2541 1
d2545 17
d2563 1
a2563 1
=item SPECIFYING ARGUMENTS TO XSUBPP
d2565 1
d2567 1
a2567 1
=item THE ARGUMENT STACK
d2569 1
d2571 1
a2571 1
=item EXTENDING YOUR EXTENSION
d2573 1
d2575 1
a2575 1
=item DOCUMENTING YOUR EXTENSION
d2577 2
d2580 1
a2580 1
=item INSTALLING YOUR EXTENSION
d2582 1
d2584 1
a2584 1
=item SEE ALSO
d2586 1
d2588 1
a2588 1
=item Author
d2590 1
d2592 1
a2592 1
=item Last Changed
d2594 1
d2596 1
d2598 1
d2600 2
a2601 1
=back
d2603 1
d2605 1
d2607 1
d2609 1
a2609 1
=head2 perlguts - Perl's Internal Functions
d2613 1
d2615 1
a2615 1
=item Datatypes
d2617 1
d2621 3
a2623 1
=item What is an "IV"?
d2625 1
d2627 1
a2627 1
=item Working with SV's
d2629 1
d2631 1
a2631 1
=item What's Really Stored in an SV?
d2633 2
d2636 1
a2636 1
=item Working with AV's
d2638 1
d2640 1
a2640 1
=item Working with HV's
d2642 1
d2644 1
a2644 1
=item References
d2646 1
d2648 1
a2648 1
=item Blessed References and Class Objects
d2650 1
d2652 1
d2654 1
d2656 1
a2656 1
=back
d2658 1
a2658 1
=item Creating New Variables
d2660 1
d2662 1
a2662 1
=item XSUB's and the Argument Stack
d2664 1
d2666 1
a2666 1
=item Mortality
d2668 3
d2672 1
a2672 1
=item Stashes
d2674 2
d2677 1
a2677 1
=item Magic
d2679 1
d2683 1
a2683 1
=item Assigning Magic
d2685 1
d2687 1
a2687 5
=item Magic Virtual Tables


=item Finding Magic

d2689 1
d2691 1
d2695 1
a2695 1
=item Double-Typed SV's
d2697 3
d2701 1
a2701 1
=item Calling Perl Routines from within C Programs
d2703 1
d2705 1
a2705 1
=item Memory Allocation
d2707 1
d2709 1
a2709 19
=item API LISTING


AvFILL, av_clear, av_extend, av_fetch, av_len, av_make, av_pop,
av_push, av_shift, av_store, av_undef, av_unshift, CLASS, Copy, croak,
CvSTASH, DBsingle, DBsub, dMARK, dORIGMARK, dSP, dXSARGS, ENTER,
EXTEND, FREETMPS, G_ARRAY, G_DISCARD, G_EVAL, GIMME, G_NOARGS,
G_SCALAR, gv_stashpv, gv_stashsv, GvSV, he_free, hv_clear, hv_delete,
hv_exists, hv_fetch, hv_iterinit, hv_iterkey, hv_iternext,
hv_iternextsv, hv_iterval, hv_magic, HvNAME, hv_store, hv_undef,
isALNUM, isALPHA, isDIGIT, isLOWER, isSPACE, isUPPER, items, LEAVE,
MARK, mg_clear, mg_copy, mg_find, mg_free, mg_get, mg_len, mg_magical,
mg_set, Move, na, New, Newc, Newz, newAV, newHV, newRV, newSV, newSViv,
newSVnv, newSVpv, newSVrv, newSVsv, newXS, newXSproto, Nullav, Nullch,
Nullcv, Nullhv, Nullsv, ORIGMARK, perl_alloc, perl_call_argv,
perl_call_method, perl_call_pv, perl_call_sv, perl_construct,
perl_destruct, perl_eval_sv, perl_free, perl_get_av, perl_get_cv,
perl_get_hv, perl_get_sv, perl_parse, perl_require_pv, perl_run, POPi,
POPl, POPp, POPn, POPs,
d2713 1
d2715 1
a2715 1
=item DATE
d2717 1
d2719 1
d2721 1
d2723 1
d2725 1
a2725 1
=head2 perlcall - Perl calling conventions from C
d2727 1
a2727 1
=item DESCRIPTION
d2729 1
d2731 1
a2731 1
An Error Handler, An Event Driven Program
d2733 1
a2733 1
=item THE PERL_CALL FUNCTIONS
d2735 1
d2737 1
a2737 2
B<perl_call_sv>, B<perl_call_pv>, B<perl_call_method>,
B<perl_call_argv>
d2739 1
a2739 1
=item FLAG VALUES
d2741 1
d2743 1
a2743 1
=over
d2745 1
a2745 1
=item  G_SCALAR
d2747 1
d2749 1
a2749 1
=item G_ARRAY
d2751 1
d2753 1
a2753 1
=item G_DISCARD
d2755 1
d2757 1
a2757 1
=item G_NOARGS
d2759 1
d2761 1
a2761 1
=item G_EVAL
d2763 1
d2765 1
a2765 1
=item G_KEEPERR
d2767 1
d2769 1
a2769 1
=item Determining the Context
d2771 1
d2773 1
d2775 1
d2779 1
a2779 1
=item KNOWN PROBLEMS
d2781 1
d2783 1
a2783 1
=item EXAMPLES
d2785 1
d2789 1
a2789 1
=item No Parameters, Nothing returned
d2791 1
d2793 1
a2793 1
=item Passing Parameters
d2795 1
d2797 1
a2797 1
=item Returning a Scalar
d2799 1
d2801 1
a2801 1
=item Returning a list of values
d2803 1
d2805 1
a2805 1
=item Returning a list in a scalar context
d2807 1
d2809 1
a2809 1
=item Returning Data from Perl via the parameter list
d2811 1
d2813 1
a2813 1
=item Using G_EVAL
d2815 1
d2817 1
a2817 1
=item Using G_KEEPERR
d2819 1
d2821 1
a2821 1
=item Using perl_call_sv
d2823 1
d2825 1
a2825 1
=item Using perl_call_argv
d2827 1
d2829 3
a2831 1
=item Using perl_call_method
d2833 1
d2835 1
a2835 1
=item Using GIMME
d2837 1
d2839 1
a2839 1
=item Using Perl to dispose of temporaries
d2841 1
d2843 1
a2843 1
=item Strategies for storing Callback Context Information
d2845 1
d2847 1
a2847 3
1. Ignore the problem - Allow only 1 callback, 2. Create a sequence of
callbacks - hard wired limit, 3. Use a parameter to map to the Perl
callback
d2849 1
a2849 1
=item Alternate Stack Manipulation
d2851 1
d2853 1
d2855 1
d2857 1
a2857 1
=back
d2859 1
a2859 1
=item SEE ALSO
d2861 1
d2863 1
a2863 1
=item AUTHOR
d2865 1
d2867 1
a2867 1
=item DATE
d2869 1
d2871 1
d2873 1
d2875 1
d2877 1
a2877 1
=head2 perlembed - how to embed perl in your C program
d2879 1
a2879 1
=item DESCRIPTION
d2881 1
d2883 1
a2883 1
=over
d2885 1
a2885 1
=item PREAMBLE
d2887 1
d2889 1
a2889 2
B<Use C from Perl?>, B<Use a UNIX program from Perl?>, B<Use Perl from
Perl?>, B<Use C from C?>, B<Use Perl from C?>
d2891 1
a2891 1
=item ROADMAP
d2893 1
d2895 1
a2895 1
=item Compiling your C program
d2897 1
d2899 1
a2899 1
=item Adding a Perl interpreter to your C program
d2901 1
d2903 1
a2903 1
=item Calling a Perl subroutine from your C program
d2905 1
d2907 1
a2907 1
=item Evaluating a Perl statement from your C program
d2909 1
d2911 1
a2911 2
=item Performing Perl pattern matches and substitutions from your C
program
d2913 1
d2915 1
d2917 1
d2919 1
a2919 1
=back
d2921 1
a2921 1
=item MORAL
d2923 1
d2925 1
a2925 1
=item AUTHOR
d2927 1
d2929 1
d2931 1
d2933 1
d2935 1
a2935 1
=head2 perlpod - plain old documentation
d2937 1
a2937 1
=item DESCRIPTION
d2939 1
d2941 1
a2941 1
=item Embedding Pods in Perl Modules
d2943 1
d2945 1
a2945 1
=item SEE ALSO
d2947 1
d2949 1
a2949 1
=item AUTHOR
d2951 1
d2953 1
d2955 1
d2957 1
d2959 1
a2959 1
=head2 perlbook - Perl book information
d2961 1
a2961 1
=item DESCRIPTION
d2963 1
d2965 3
d2969 1
d2971 1
d2973 1
a2973 1
=head1 PRAGMA DOCUMENTATION
d2975 2
d2978 1
d2980 3
d2984 1
a2984 2
=head2 diagnostics - Perl compiler pragma to force verbose warning
diagnostics
d2986 1
a2986 1
=item SYNOPSIS
d2988 1
d2990 1
a2990 2
=item DESCRIPTION

d2992 1
a2992 1
=over
d2994 1
a2994 1
=item The C<diagnostics> Pragma
d2996 6
d3003 1
a3003 1
=item The I<splain> Program
d3005 1
d3007 1
d3009 1
d3013 1
a3013 2
=item EXAMPLES

d3015 2
a3016 1
=item INTERNALS
d3018 1
d3020 3
a3022 1
=item BUGS
d3024 1
d3026 1
a3026 1
=item AUTHOR
d3028 11
d3040 1
d3042 1
d3044 1
d3046 1
a3046 2
=head2 integer - Perl pragma to compute arithmetic in integer instead
of double
a3049 1

d3052 1
d3054 1
d3056 1
d3058 1
d3060 2
a3061 2
=head2 less - perl pragma to request less of something from the
compiler
d3065 1
d3067 1
a3067 1
=item DESCRIPTION
d3069 1
d3071 1
d3073 1
d3075 1
d3077 1
a3077 1
=head2 lib - manipulate @@INC at compile time
a3080 1

d3083 1
d3085 1
a3085 1
=over
d3087 1
a3087 1
=item ADDING DIRECTORIES TO @@INC
d3089 1
d3091 1
a3091 1
=item DELETING DIRECTORIES FROM @@INC
d3093 1
d3095 1
a3095 1
=item RESTORING ORIGINAL @@INC
d3097 1
d3099 1
d3101 1
d3103 1
a3103 1
=back
d3105 1
a3105 1
=item SEE ALSO
d3107 1
d3109 1
a3109 1
=item AUTHOR
d3111 1
d3113 1
d3115 1
d3117 1
d3119 2
a3120 1
=head2 overload - Package for overloading perl operations
d3124 5
d3130 1
a3130 1
=item CAVEAT SCRIPTOR
d3132 1
d3136 1
d3138 1
a3138 1
=over
d3140 3
a3142 1
=item Declaration of overloaded functions
d3144 1
d3146 1
a3146 1
=item Calling Conventions for Binary Operations
d3148 1
d3150 1
a3150 1
FALSE, TRUE, C<undef>
d3152 1
a3152 1
=item Calling Conventions for Unary Operations
d3154 1
d3156 1
a3156 1
=item Overloadable Operations
d3158 1
d3160 1
a3160 3
I<Arithmetic operations>, I<Comparison operations>, I<Bit operations>,
I<Increment and decrement>, I<Transcendental functions>, I<Boolean,
string and numeric conversion>, I<Special>
d3162 1
d3164 1
d3168 1
a3168 1
=item SPECIAL SYMBOLS FOR C<use overload>
d3170 4
d3175 1
a3175 1
=over
d3177 1
a3177 1
=item  Last Resort
d3179 1
d3181 1
a3181 1
=item Fallback
d3183 1
d3185 1
a3185 1
C<undef>, TRUE, defined, but FALSE
d3187 1
a3187 1
=item Copy Constructor
d3189 1
d3191 2
a3192 1
B<Example>
d3194 1
d3196 1
d3198 1
a3198 1
=back
d3200 1
a3200 1
=item MAGIC AUTOGENERATION
d3202 1
d3204 1
a3204 3
I<Assignment forms of arithmetic operations>, I<Conversion operations>,
I<Increment and decrement>, C<abs($a)>, I<Unary minus>,
I<Concatenation>, I<Comparison operations>, I<Copy operator>
d3206 1
a3206 1
=item WARNING
d3208 1
d3210 1
a3210 1
=item Run-time Overloading
d3212 1
d3214 1
a3214 1
=item Public functions
d3216 1
d3218 2
a3219 2
overload::StrVal(arg), overload::Overloaded(arg),
overload::Method(obj,op)
d3221 1
a3221 1
=item IMPLEMENTATION
d3223 1
d3225 1
a3225 1
=item AUTHOR
d3227 1
d3229 1
a3229 1
=item DIAGNOSTICS
d3231 1
d3233 1
a3233 1
=item BUGS
d3235 1
d3237 1
d3239 1
d3241 1
d3243 1
a3243 2
=head2 sigtrap - Perl pragma to enable stack backtrace on unexpected
signals
a3246 1

d3249 1
d3251 1
d3253 1
d3255 1
d3257 1
a3257 1
=head2 strict - Perl pragma to restrict unsafe constructs
d3259 1
a3259 1
=item SYNOPSIS
d3261 1
d3263 1
a3263 1
=item DESCRIPTION
d3265 1
d3267 1
a3267 1
C<strict refs>, C<strict vars>, C<strict subs>
d3269 1
d3271 1
d3273 1
d3275 1
a3275 1
=head2 subs - Perl pragma to predeclare sub names
d3277 1
a3277 1
=item SYNOPSIS
d3279 1
d3281 1
a3281 1
=item DESCRIPTION
d3283 1
d3285 1
d3287 1
d3289 1
d3291 1
a3291 1
=head2 vars - Perl pragma to predeclare global variable names
d3293 1
a3293 1
=item SYNOPSIS
d3295 1
d3297 1
a3297 1
=item DESCRIPTION
d3299 1
d3301 2
d3304 1
d3306 1
d3308 1
a3308 1
=head1 MODULE DOCUMENTATION
d3310 4
d3315 1
d3317 1
d3319 1
a3319 1
=head2 AnyDBM_File - provide framework for multiple DBMs
d3321 1
a3321 1
=item SYNOPSIS
d3323 1
d3325 1
a3325 1
=item DESCRIPTION
d3327 1
d3331 5
a3335 1
=item DBM Comparisons
d3337 1
d3339 1
a3339 1
[0], [1], [2], [3]
d3341 1
d3343 1
d3345 1
a3345 1
=back
d3349 1
d3351 1
d3353 1
d3355 1
d3357 1
a3357 1
=head2 AutoLoader - load functions only on demand
d3361 1
d3363 1
a3363 1
=item DESCRIPTION
d3365 1
d3367 1
d3369 5
d3375 1
d3377 2
a3378 1
=head2 AutoSplit - split a package for autoloading
a3381 1

d3384 1
d3386 1
d3388 1
d3390 1
d3392 1
a3392 1
=head2 Benchmark - benchmark running times of code
a3395 1

d3398 1
d3400 1
a3400 1
=over
d3402 1
a3402 1
=item Methods
d3404 1
d3406 1
a3406 1
new, debug
d3408 1
a3408 1
=item Standard Exports
d3410 1
d3412 2
a3413 1
timeit(COUNT, CODE), timethis, timethese, timediff, timestr
d3415 1
a3415 1
=item Optional Exports
d3417 1
d3419 3
d3423 1
d3425 1
a3425 1
=back
d3427 1
a3427 1
=item NOTES
d3429 1
d3431 1
a3431 1
=item INHERITANCE
d3433 1
d3435 1
a3435 1
=item CAVEATS
d3437 1
d3439 2
a3440 1
=item AUTHORS
d3442 1
d3444 1
a3444 1
=item MODIFICATION HISTORY
d3446 1
d3448 1
d3450 1
d3452 1
d3454 1
a3454 1
=head2 Carp, carp - warn of errors (from perspective of caller)
a3457 1

d3460 1
d3462 1
d3464 1
d3466 1
d3468 1
a3468 1
=head2 Cwd, getcwd - get pathname of current working directory
d3470 1
a3470 1
=item SYNOPSIS
d3472 1
d3474 1
a3474 1
=item DESCRIPTION
d3476 1
d3478 1
d3480 1
d3482 1
d3484 2
a3485 1
=head2 DB_File - Perl5 access to Berkeley DB
d3489 5
d3497 5
d3503 1
a3503 1
DB_HASH, DB_BTREE, DB_RECNO
d3505 1
a3505 1
=over
d3507 5
a3511 1
=item How does DB_File interface to Berkeley DB?
d3513 1
d3515 10
a3524 1
=item Differences with Berkeley DB
d3526 1
d3528 1
a3528 1
=item RECNO
d3530 2
d3533 1
a3533 1
=item In Memory Databases
d3535 1
d3537 1
a3537 1
=item Using the Berkeley DB Interface Directly
d3539 1
d3541 2
a3542 1
get, put, del, fd, seq, sync
d3544 1
d3546 15
d3564 2
a3565 1
=item EXAMPLES
d3567 1
d3569 1
a3569 1
=over
d3571 4
a3574 1
=item Using HASH
d3576 1
d3578 1
a3578 1
=item Using BTREE
d3580 1
d3582 1
a3582 1
=item Using RECNO
d3584 1
d3586 1
a3586 1
=item Locking Databases
d3588 1
d3590 1
d3592 1
d3594 1
a3594 1
=back
d3596 1
a3596 1
=item HISTORY
d3598 1
d3600 1
a3600 1
=item WARNINGS
d3602 1
d3604 1
a3604 1
=item BUGS
d3606 11
d3618 1
a3618 1
=item AVAILABILITY
d3620 2
d3623 1
a3623 1
=item SEE ALSO
d3625 1
d3627 1
a3627 1
=item AUTHOR
d3629 3
d3633 1
d3635 1
d3637 1
d3639 1
a3639 1
=head2 Devel::SelfStubber - generate stubs for a SelfLoading module
d3643 5
d3649 1
a3649 1
=item DESCRIPTION
d3651 1
d3653 2
d3656 1
d3658 1
d3660 1
a3660 1
=head2 DirHandle - supply object methods for directory handles
a3663 1

d3666 1
d3668 1
d3670 1
d3672 1
d3674 2
a3675 1
=head2 DynaLoader - Dynamically load C libraries into Perl code
a3678 1

d3681 1
a3681 4

@@dl_library_path, @@dl_resolve_using, @@dl_require_symbols, dl_error(),
$dl_debug, dl_findfile(), dl_expandspec(), dl_load_file(),
dl_find_symbol(), dl_undef_symbols(), dl_install_xsub(), boostrap()
d3685 1
d3687 1
d3689 1
d3691 1
d3693 1
a3693 2
=head2 English - use nice English (or awk) names for ugly punctuation
variables
a3696 1

d3699 1
d3701 1
d3703 1
a3703 3


=head2 Env - perl module that imports environment variables
a3706 1

d3709 1
d3711 1
a3711 1
=item AUTHOR
d3713 1
d3715 1
d3717 1
d3719 1
d3721 1
a3721 1
=head2 Exporter - Implements default import method for modules
d3725 1
d3727 1
a3727 1
=item DESCRIPTION
d3729 1
d3731 1
a3731 1
=over
d3733 1
a3733 1
=item Selecting What To Export
d3735 1
d3737 1
a3737 1
=item Specialised Import Lists
d3739 1
d3741 1
a3741 1
=item Module Version Checking
d3743 1
d3745 1
a3745 1
=item Managing Unknown Symbols
d3747 1
d3749 1
a3749 1
=item Tag Handling Utility Functions
d3751 1
d3753 1
d3755 1
d3757 1
a3757 1
=back
d3759 1
d3761 1
d3763 1
d3765 1
a3765 1
=head2 ExtUtils::Install - install files from here to there
d3769 1
d3771 1
a3771 1
=item DESCRIPTION
d3773 1
d3775 1
d3777 1
d3779 1
d3781 1
a3781 2
=head2 ExtUtils::Liblist - determine libraries to use and how to use
them
d3785 1
d3787 1
a3787 1
=item DESCRIPTION
d3789 1
d3791 1
a3791 1
For static extensions, For dynamic extensions, For dynamic extensions
d3793 1
a3793 1
=over
d3795 1
a3795 1
=item EXTRALIBS
d3797 1
d3799 1
a3799 1
=item LDLOADLIBS and LD_RUN_PATH
d3801 1
d3803 1
a3803 1
=item BSLOADLIBS
d3805 1
d3807 1
d3809 1
d3811 1
a3811 1
=back
d3813 1
a3813 1
=item PORTABILITY
d3815 1
d3817 1
a3817 1
=item SEE ALSO
d3819 1
d3821 1
d3823 1
d3825 1
d3827 1
a3827 2
=head2 ExtUtils::MM_OS2 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d3831 1
d3833 1
d3835 1
d3837 2
a3838 2

=head2 ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker
a3841 1

d3844 1
d3846 1
a3846 1
=item METHODS
d3848 1
d3850 1
a3850 1
=over
d3852 1
a3852 1
=item Preloaded methods
d3854 1
d3856 1
a3856 3
catdir, catfile, nicetext, libscan, exescan, lsdir, path,
replace_manpage_separator, file_name_is_absolute, prefixify,
maybe_command_in_dirs, maybe_command, perl_script
d3858 1
a3858 1
=item SelfLoaded methods
d3860 1
d3862 1
a3862 1
guess_name, init_main, init_dirscan, init_others, find_perl
d3864 1
a3864 1
=item Methods to actually produce chunks of text for the Makefile
d3866 4
d3871 1
a3871 9
post_initialize, const_config, constants, const_loadlibs, const_cccmd,
tool_autosplit, tool_xsubpp, tools_other, dist, macro, depend,
post_constants, pasthru, c_o, xs_c, xs_o, top_targets, linkext, dlsyms,
dynamic, dynamic_bs, dynamic_lib, static, static_lib, installpm,
installpm_x, manifypods, processPL, installbin, subdirs, subdir_x,
clean, realclean, dist_basics, dist_core, dist_dir, dist_test, dist_ci,
install, force, perldepend, makefile, staticmake, test,
test_via_harness, test_via_script, postamble, makeaperl, extliblist,
dir_target, needs_linking, has_link_code, writedoc
d3873 1
d3875 2
d3878 1
a3878 1
=back
d3880 1
a3880 1
=item SEE ALSO
d3882 2
d3885 1
d3887 1
d3889 1
d3891 1
a3891 2
=head2 ExtUtils::MM_VMS - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d3895 5
d3901 1
d3903 1
d3905 1
d3907 1
a3907 1
=head2 ExtUtils::MakeMaker - create an extension Makefile
d3909 1
a3909 1
=item SYNOPSIS
d3911 1
d3913 1
a3913 1
=item DESCRIPTION
d3915 1
d3917 1
a3917 1
=over
d3919 1
a3919 1
=item Hintsfile support
d3921 1
d3923 1
a3923 1
=item What's new in version 5 of MakeMaker
d3925 3
d3929 1
a3929 1
=item Incompatibilities between MakeMaker 5.00 and 4.23
d3931 1
d3933 1
a3933 1
=item Default Makefile Behaviour
d3935 1
d3937 1
a3937 1
=item make test
d3939 1
d3941 1
a3941 1
=item make install
d3943 1
d3945 1
a3945 1
=item PREFIX attribute
d3947 1
d3949 1
a3949 1
=item AFS users
d3951 1
d3953 1
a3953 1
=item Static Linking of a new Perl Binary
d3955 1
d3957 1
a3957 1
=item Determination of Perl Library and Installation Locations
d3959 1
d3961 1
a3961 1
=item Useful Default Makefile Macros
d3963 1
d3965 1
a3965 1
=item Using Attributes and Parameters
d3967 1
d3969 1
a3969 10
C, CONFIG, CONFIGURE, DEFINE, DIR, DISTNAME, DL_FUNCS, DL_VARS,
EXE_FILES, FIRST_MAKEFILE, FULLPERL, H, INC, INSTALLARCHLIB,
INSTALLBIN, INSTALLDIRS, INSTALLMAN1DIR, INSTALLMAN3DIR,
INSTALLPRIVLIB, INSTALLSITELIB, INSTALLSITEARCH, INST_ARCHLIB,
INST_EXE, INST_LIB, INST_MAN1DIR, INST_MAN3DIR, LDFROM, LIBPERL_A,
LIBS, LINKTYPE, MAKEAPERL, MAKEFILE, MAN1PODS, MAN3PODS, MAP_TARGET,
MYEXTLIB, NAME, NEEDS_LINKING, NOECHO, NORECURS, OBJECT, PERL,
PERLMAINCC, PERL_ARCHLIB, PERL_LIB, PERL_SRC, PL_FILES, PM, PMLIBDIRS,
PREFIX, PREREQ, SKIP, TYPEMAPS, VERSION, VERSION_FROM, XS, XSOPT,
XSPROTOARG, XS_VERSION
d3971 1
a3971 1
=item Additional lowercase attributes
d3973 1
d3975 1
a3975 2
clean, depend, dist, dynamic_lib, installpm, linkext, macro, realclean,
tool_autosplit
d3977 1
a3977 1
=item Overriding MakeMaker Methods
d3979 3
d3983 1
a3983 1
=item Distribution Support
d3985 1
d3987 1
a3987 3
   make distcheck,    make skipcheck,    make distclean,    make
   manifest,    make distdir,    make tardist,    make dist,    make
   uutardist,    make shdist,    make ci
d3989 1
d3991 1
d3993 1
a3993 1
=back
d3995 1
a3995 1
=item AUTHORS
d3997 1
d3999 1
a3999 1
=item MODIFICATION HISTORY
d4001 2
d4004 1
a4004 1
=item TODO
d4006 1
d4008 1
d4010 1
d4012 2
d4015 1
a4015 2
=head2 ExtUtils::Manifest - utilities to write and check a MANIFEST
file
d4017 1
a4017 1
=item SYNOPSIS
d4019 1
d4021 1
a4021 1
=item DESCRIPTION
d4023 1
d4025 1
a4025 1
=item MANIFEST.SKIP
d4027 1
d4029 1
a4029 1
=item EXPORT_OK
d4031 1
d4033 1
a4033 1
=item GLOBAL VARIABLES
d4035 1
d4037 1
a4037 1
=item DIAGNOSTICS
d4039 1
d4041 1
a4041 2
C<Not in MANIFEST:> I<file>, C<No such file:> I<file>, C<MANIFEST:>
I<$!>, C<Added to MANIFEST:> I<file>
d4045 1
d4047 2
a4048 1
=item AUTHOR
d4050 1
d4052 1
d4054 1
d4056 1
d4058 1
a4058 2
=head2 ExtUtils::Mkbootstrap - make a bootstrap file for use by
DynaLoader
d4060 3
a4062 1
=item SYNOPSIS
d4064 1
d4066 1
a4066 1
=item DESCRIPTION
d4068 1
d4070 1
d4072 1
d4074 1
d4076 1
a4076 2
=head2 ExtUtils::Mksymlists - write linker options files for dynamic
extension
d4078 1
a4078 1
=item SYNOPSIS
d4080 1
d4082 1
a4082 1
=item DESCRIPTION
d4084 1
d4086 1
a4086 1
NAME, DL_FUNCS, DL_VARS, FILE, FUNCLIST, DLBASE
d4090 1
d4092 2
a4093 1
=item REVISION
d4095 1
d4097 1
d4099 1
d4101 1
d4103 2
a4104 1
=head2 Fcntl - load the C Fcntl.h defines
d4108 1
d4110 1
a4110 1
=item DESCRIPTION
d4112 1
d4114 1
a4114 1
=item NOTE
d4116 3
d4120 1
d4122 1
d4124 1
d4126 2
a4127 1
=head2 File::Basename, Basename - parse file specifications
a4130 1

d4133 1
d4135 1
a4135 1
fileparse_set_fstype, fileparse
d4137 1
a4137 1
=item EXAMPLES
d4139 2
d4142 1
a4142 1
C<basename>, C<dirname>
d4144 1
d4146 1
d4148 1
d4150 2
a4151 1
=head2 File::CheckTree, validate - run many filetest checks on a tree
d4153 1
a4153 1
=item SYNOPSIS
d4155 1
d4157 1
a4157 1
=item DESCRIPTION
d4159 1
d4161 1
d4163 1
d4165 1
d4167 1
a4167 1
=head2 File::Find, find - traverse a file tree
a4170 1

d4173 1
d4175 1
d4177 2
a4178 3


=head2 File::Path - create or remove a series of directories
a4181 1

d4184 1
d4186 1
a4186 1
=item AUTHORS
d4188 1
d4190 1
a4190 1
=item REVISION
d4192 1
d4194 1
d4196 1
d4198 1
a4198 2

=head2 FileCache - keep more files open than the system permits
d4202 1
d4204 1
a4204 1
=item DESCRIPTION
d4206 1
d4210 1
d4212 2
a4213 4



=head2 FileHandle - supply object methods for filehandles
d4217 1
d4219 1
a4219 1
=item DESCRIPTION
d4221 1
d4223 1
a4223 1
  $fh->print, $fh->printf, $fh->getline, $fh->getlines
d4225 1
a4225 1
=item SEE ALSO
d4227 1
d4231 1
d4233 1
d4235 1
d4237 1
d4239 1
a4239 3
=head2 GDBM_File - Perl5 access to the gdbm library.

=item SYNOPSIS
d4241 1
d4243 1
a4243 1
=item DESCRIPTION
d4245 1
d4247 1
a4247 1
=item AVAILABILITY
d4249 1
d4253 1
d4255 1
a4255 2
=item SEE ALSO

d4257 1
d4259 1
d4261 1
a4261 3

=head2 Getopt::Long, GetOptions - extended processing of command line
options
a4264 1

a4266 3

<none>, !, =s, :s, =i, :i, =f, :f

d4269 1
a4269 1
=item Linkage specification
d4271 2
d4274 1
a4274 1
=item Aliases and abbreviations
d4276 1
d4278 1
a4278 1
=item Non-option call-back routine
d4280 2
d4283 1
a4283 1
=item Option starters
d4285 1
d4287 1
a4287 1
=item Return value
d4289 1
d4291 1
d4293 2
d4296 1
a4296 3
=back

=item COMPATIBILITY
d4298 1
d4302 1
d4304 1
a4304 1
=item CONFIGURATION VARIABLES
d4306 2
d4309 1
a4309 3
$Getopt::Long::autoabbrev, $Getopt::Long::getopt_compat,
$Getopt::Long::order, $Getopt::Long::ignorecase,
$Getopt::Long::VERSION, $Getopt::Long::error, $Getopt::Long::debug
d4311 1
d4313 1
d4315 1
d4317 2
a4318 2
=head2 Getopt::Std, getopt - Process single-character switches with
switch clustering
a4321 1

d4324 1
d4326 1
d4328 1
d4330 1
a4330 3

=head2 I18N::Collate - compare 8-bit scalar data according to the
current locale
a4333 1

d4336 1
a4336 5




=head2 IPC::Open2, open2 - open a process for both reading and writing
a4339 1

d4342 1
d4346 1
d4348 2
a4349 1
=item SEE ALSO
d4351 1
d4353 4
d4358 1
d4360 1
d4362 1
a4362 2
=head2 IPC::Open3, open3 - open a process for reading, writing, and
error handling
d4364 3
a4366 4
=item SYNOPSIS


=item DESCRIPTION
d4368 1
d4370 1
d4372 2
a4373 3


=head2 Net::Ping, pingecho - check a host for upness
d4377 1
d4379 1
a4379 1
=item DESCRIPTION
d4381 1
d4385 3
a4387 1
=item Parameters
d4389 4
d4394 1
a4394 1
hostname, timeout
d4396 1
d4398 1
d4402 2
a4403 2
=item WARNING

d4405 1
d4407 1
d4409 1
a4414 1

a4416 1

d4419 1
a4419 3

=item CAVEATS

d4423 26
a4448 16

_exit, abort, abs, access, acos, alarm, asctime, asin, assert, atan,
atan2, atexit, atof, atoi, atol, bsearch, calloc, ceil, chdir, chmod,
chown, clearerr, clock, close, closedir, cos, cosh, creat, ctermid,
ctime, cuserid, difftime, div, dup, dup2, errno, execl, execle, execlp,
execv, execve, execvp, exit, exp, fabs, fclose, fcntl, fdopen, feof,
ferror, fflush, fgetc, fgetpos, fgets, fileno, floor, fmod, fopen,
fork, fpathconf, fprintf, fputc, fputs, fread, free, freopen, frexp,
fscanf, fseek, fsetpos, fstat, ftell, fwrite, getc, getchar, getcwd,
getegid, getenv, geteuid, getgid, getgrgid, getgrnam, getgroups,
getlogin, getpgrp, getpid, getppid, getpwnam, getpwuid, gets, getuid,
gmtime, isalnum, isalpha, isatty, iscntrl, isdigit, isgraph, islower,
isprint, ispunct, isspace, isupper, isxdigit, kill, labs, ldexp, ldiv,
link, localeconv, localtime, log, log10, longjmp, lseek, malloc, mblen,
mbstowcs, mbtowc, memchr, memcmp, memcpy, memmove, memset, mkdir,
mkfifo, mktime, modf, nice, offsetof, open, opendir, pat
a4451 1

a4455 1

a4459 1

a4463 1

a4469 2


a4473 1

a4477 1

a4481 1

a4485 1

a4489 1

a4493 1

a4497 1

a4501 1

a4505 1

a4509 1

a4513 1

a4517 1

a4521 1

a4525 1

a4529 1

a4533 1

d4538 14
d4553 1
d4555 1
d4557 1
a4562 1

a4564 1

a4566 1

d4569 1
d4571 1
d4573 1
d4575 1
d4577 1
a4577 1
=head2 Safe - Safe extension module for Perl
d4581 1
d4583 1
a4583 1
a new namespace, an operator mask
d4587 1
a4587 2
=item Operator masks

d4591 4
d4596 1
a4596 5
NAMESPACE, MASK, root (NAMESPACE), mask (MASK), trap (OP, ...), untrap
(OP, ...), share (VARNAME, ...), varglob (VARNAME), reval (STRING), rdo
(FILENAME)

=item Subroutines in package Safe
d4598 1
a4598 3

ops_to_mask (OP, ...), mask_to_ops (MASK), opcode (OP, ...), opname
(OP, ...), fullmask, emptymask, MAXO, op_mask
a4601 3



a4603 3



a4607 1

a4609 4




a4613 1

a4615 4




a4619 1

a4621 1

a4625 1

a4627 1

a4629 1

a4631 1

a4633 1

a4635 3



d4640 1
d4642 1
d4644 1
d4646 1
d4648 2
a4649 2
=head2 Socket, sockaddr_in, sockaddr_un, inet_aton, inet_ntoa - load
the C socket.h defines and structure manipulators
a4652 1

d4655 5
a4659 9

inet_aton HOSTNAME, inet_ntoa IP_ADDRESS, INADDR_ANY, INADDR_LOOPBACK,
INADDR_NONE, sockaddr_in PORT, ADDRESS, sockaddr_in SOCKADDR_IN,
pack_sockaddr_in PORT, IP_ADDRESS, unpack_sockaddr_in SOCKADDR_IN,
sockaddr_un PATHNAME, sockaddr_un SOCKADDR_UN, pack_sockaddr_un PATH,
unpack_sockaddr_un SOCKADDR_UN



a4664 1

a4666 4




a4670 1

a4672 1

d4675 2
a4676 6




=head2 Syslog, Sys::Syslog, openlog, closelog, setlogmask, syslog -
Perl interface to the UNIX syslog(3) calls
a4679 1

d4682 2
a4683 3

openlog $ident, $logopt, $facility, syslog $priority, $mask, $format,
@@args, setlogmask $mask_priority, closelog
a4686 1

a4688 1

a4690 1

a4692 4




a4696 1

a4698 1

a4700 4




a4704 1

d4707 1
a4707 2

<tab>Attempts word completion.  Cannot be changed, ^D, ^U, <del>, <bs>
a4710 1

a4712 1

d4715 2
a4716 7




=head2 Term::ReadLine - Perl interface to various C<readline> packages.
If no real package is found, substitutes stubs instead of basic
functions.
a4719 1

a4721 1

d4724 2
d4727 1
a4727 2
C<ReadLine>, C<new>, C<readline>, C<addhistory>, C<IN>, $C<OUT>,
C<MinLine>, C<findConsole>, C<Features>
d4731 1
a4731 3



a4736 1

a4738 1

a4742 3



a4746 1

a4748 1

d4750 3
a4752 3
%s\n\tFailed %d/%d tests, %.2f%% okay.>, C<Test returned status %d
(wstat %d)>, C<Failed 1 test, %.2f%% okay. %s>, C<Failed %d/%d tests,
%.2f%% okay. %s>
a4755 1

a4757 1

a4759 4




a4763 1

a4765 1

d4768 1
d4770 1
d4772 1
d4774 1
d4776 2
a4777 2
=head2 Text::Soundex - Implementation of the Soundex Algorithm as
Described by Knuth
a4780 1

a4782 1

a4784 1

a4786 1

d4789 2
d4792 1
d4794 1
d4796 1
d4798 1
a4798 1
=head2 Text::Tabs -- expand and unexpand tabs
d4800 1
a4800 1
=item SYNOPSIS
d4802 1
d4806 3
d4812 5
d4818 2
d4821 1
d4823 1
d4825 1
a4825 1
=head2 Text::Wrap -- wrap text into a paragraph
a4828 1

d4831 1
d4835 1
d4837 8
d4846 1
d4848 1
d4850 1
a4850 1
=head2 Tie::Hash, Tie::StdHash - base class definitions for tied hashes
a4853 1

d4856 1
d4858 1
a4858 3
TIEHASH classname, LIST, STORE this, key, value, FETCH this, key,
FIRSTKEY this, NEXTKEY this, lastkey, EXISTS this, key, DELETE this,
key, CLEAR this
d4860 1
a4860 1
=item CAVEATS
d4862 1
d4864 2
a4865 1
=item MORE INFORMATION
d4867 1
d4869 1
d4871 1
d4873 1
d4875 2
a4876 2
=head2 Tie::Scalar, Tie::StdScalar - base class definitions for tied
scalars
a4879 1

d4882 1
d4884 1
a4884 1
TIESCALAR classname, LIST, FETCH this, STORE this, value, DESTROY this
d4886 1
a4886 1
=item MORE INFORMATION
d4888 1
d4890 1
d4892 1
d4894 1
a4894 2

=head2 Tie::SubstrHash - Fixed-table-size, fixed-key-length hashing
a4897 1

d4900 2
d4903 2
a4904 1
=item CAVEATS
d4906 1
d4908 1
d4910 1
d4912 1
d4914 2
a4915 1
=head2 Time::Local - efficiently compute tome from local and GMT time
a4918 1

d4921 1
d4923 1
a4923 1

d4927 2
a4928 2
Here should be listed all the extra program's docs, but they don't all
have man pages yet:
a4947 1

d4950 2
a4951 3
Larry Wall E<lt><F<lwall@@sems.com>E<gt>, with the help of oodles of
other folks.

@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d9 1
a9 1
documentation set.  It is meant to be scanned quickly or grepped
d14 3
d21 1
d24 1
d27 4
a30 4
Object-oriented programming, Embeddable and Extensible, POSIX compliant,
Package constructors and destructors, Multiple simultaneous DBM
implementations, Subroutine definitions may now be autoloaded, Regular
expression enhancements, Innumerable Unbundled Modules, Compilability
d34 3
d39 1
d42 1
d45 1
d48 1
d51 1
d54 5
a58 2
=head2 perlfaq - frequently asked questions about Perl ($Date: 1998/07/20
23:12:17 $)
a61 5
perlfaq: Structural overview of the FAQ, L<perlfaq1>: General Questions
About Perl, L<perlfaq2>: Obtaining and Learning about Perl, L<perlfaq3>:
Programming Tools, L<perlfaq4>: Data Manipulation, L<perlfaq5>: Files and
Formats, L<perlfaq6>: Regexps, L<perlfaq7>: General Perl Language Issues,
L<perlfaq8>: System Interaction, L<perlfaq9>: Networking
d65 1
a65 1
=item Where to get this document
a66 1
=item How to contribute to this document
d68 1
a68 2
=item What will happen if you mail your Perl programming problems to the
authors
a69 1
=back
d71 1
a71 1
=item Credits
a72 1
=item Author and Copyright Information
d74 1
a74 1
=over
a75 1
=item Bundled Distributions
d77 1
a77 1
=item Disclaimer
a78 1
=back
d80 1
a80 1
=item Changes
a81 2
24/April/97, 23/April/97, 25/March/97, 18/March/97, 17/March/97 Version,
Initial Release: 11/March/97
a82 2
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.14 $, $Date:
1998/06/14 22:15:25 $)
a83 1
=item DESCRIPTION
d85 1
a85 1
=over
a86 1
=item What is Perl?
a87 1
=item Who supports Perl?  Who develops it?  Why is it free?
a88 1
=item Which version of Perl should I use?
d90 1
a90 1
=item What are perl4 and perl5?
d92 1
a92 1
=item How stable is Perl?
a93 1
=item Is Perl difficult to learn?
d95 1
a95 2
=item How does Perl compare with other languages like Java, Python, REXX,
Scheme, or Tcl?
d97 1
a97 1
=item Can I do [task] in Perl?
a98 1
=item When shouldn't I program in Perl?
d100 1
a100 1
=item What's the difference between "perl" and "Perl"?
a101 1
=item Is it a Perl program or a Perl script?
d103 1
a103 1
=item What is a JAPH?
a104 1
=item Where can I get a list of Larry Wall witticisms?
d106 1
a106 2
=item How can I convince my sysadmin/supervisor/employees to use version
(5/5.004/Perl instead of some other language)?
a107 1
=back
d109 1
a109 1
=item AUTHOR AND COPYRIGHT
a110 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.24 $,
$Date: 1998/07/20 23:40:28 $)
d112 1
a112 1
=item DESCRIPTION
a113 1
=over
d115 1
a115 1
=item What machines support Perl?  Where do I get it?
a116 1
=item How can I get a binary version of Perl?
d118 1
a118 1
=item I don't have a C compiler on my system.  How can I compile perl?
a119 2
=item I copied the Perl binary from one machine to another, but scripts
don't work.
d121 1
a121 2
=item I grabbed the sources and tried to compile but gdbm/dynamic
loading/malloc/linking/... failed.  How do I make it work?
a122 2
=item What modules and extensions are available for Perl?  What is CPAN?
What does CPAN/src/... mean?
a123 1
=item Is there an ISO or ANSI certified version of Perl?
a124 1
=item Where can I get information on Perl?
d126 1
a126 1
=item What are the Perl newsgroups on USENET?  Where do I post questions?
a127 1
=item Where should I post source code?
a128 1
=item Perl Books
a129 3
References, Tutorials           
*Learning Perl [2nd edition]
by Randal L. Schwartz and Tom Christiansen, Task-Oriented, Special Topics
d131 1
a131 1
=item Perl in Magazines
d133 1
a133 1
=item Perl on the Net: FTP and WWW Access
a134 1
=item What mailing lists are there for perl?
d136 1
a136 1
MacPerl, Perl5-Porters, NTPerl, Perl-Packrats
a137 1
=item Archives of comp.lang.perl.misc
d139 1
a139 1
=item Where can I buy a commercial version of Perl?
d141 1
a141 1
=item Where do I send bug reports?
a142 1
=item What is perl.com?  perl.org?  The Perl Institute?
d144 1
a144 1
=item How do I learn about object-oriented Perl programming?
a145 1
=back
d147 1
a147 1
=item AUTHOR AND COPYRIGHT
a148 2
=head2 perlfaq3 - Programming Tools ($Revision: 1.28 $, $Date: 1998/07/16
22:08:49 $)
d150 1
a150 1
=item DESCRIPTION
a151 1
=over
d153 1
a153 1
=item How do I do (anything)?
a154 1
=item How can I use Perl interactively?
d156 1
a156 1
=item Is there a Perl shell?
a157 1
=item How do I debug my Perl programs?
d159 1
a159 1
=item How do I profile my Perl programs?
a160 1
=item How do I cross-reference my Perl programs?
d162 1
a162 1
=item Is there a pretty-printer (formatter) for Perl?
a163 1
=item Is there a ctags for Perl?
d165 1
a165 1
=item Where can I get Perl macros for vi?
a166 1
=item Where can I get perl-mode for emacs?
d168 1
a168 1
=item How can I use curses with Perl?
a169 1
=item How can I use X or Tk with Perl?
d171 1
a171 1
=item How can I generate simple menus without using CGI or Tk?
a172 1
=item What is undump?
d174 1
a174 1
=item How can I make my Perl program run faster?
a175 1
=item How can I make my Perl program take less memory?
d177 1
a177 1
=item Is it unsafe to return a pointer to local data?
a178 1
=item How can I free an array or hash so my program shrinks?
d180 1
a180 1
=item How can I make my CGI script more efficient?
a181 1
=item How can I hide the source for my Perl program?
d183 1
a183 1
=item How can I compile my Perl program into byte code or C?
a184 1
=item How can I get C<#!perl> to work on [MS-DOS,NT,...]?
d186 1
a186 1
=item Can I write useful perl programs on the command line?
a187 1
=item Why don't perl one-liners work on my DOS/Mac/VMS system?
d189 1
a189 1
=item Where can I learn about CGI or Web programming in Perl?
a190 1
=item Where can I learn about object-oriented Perl programming?
d192 1
a192 1
=item Where can I learn about linking C with Perl? [h2xs, xsubpp]
a193 2
=item I've read perlembed, perlguts, etc., but I can't embed perl in
my C program, what am I doing wrong?
d195 1
a195 2
=item When I tried to run my script, I got this message. What does it
mean?
a196 1
=item What's MakeMaker?
d198 1
a198 1
=back
a199 1
=item AUTHOR AND COPYRIGHT
d201 1
a201 2
=head2 perlfaq4 - Data Manipulation ($Revision: 1.25 $, $Date: 1998/07/16
22:49:55 $)
a202 1
=item DESCRIPTION
d204 1
a204 1
=item Data: Numbers
a205 1
=over
d207 1
a207 2
=item Why am I getting long decimals (eg, 19.9499999999999) instead of the
numbers I should be getting (eg, 19.95)?
a208 1
=item Why isn't my octal data interpreted correctly?
d210 1
a210 2
=item Does perl have a round function?	What about ceil() and floor()?
Trig functions?
a211 1
=item How do I convert bits into ints?
d213 1
a213 1
=item How do I multiply matrices?
a214 1
=item How do I perform an operation on a series of integers?
d216 1
a216 1
=item How can I output Roman numerals?
d218 1
a218 1
=item Why aren't my random numbers random?
a219 1
=back
d221 1
a221 1
=item Data: Dates
a222 1
=over
d224 4
a227 1
=item How do I find the week-of-the-year/day-of-the-year?
d229 1
a229 1
=item How can I compare two dates and find the difference?
a230 1
=item How can I take a string and turn it into epoch seconds?
d232 1
a232 1
=item How can I find the Julian Day?
a233 1
=item Does Perl have a year 2000 problem?  Is Perl Y2K compliant?
d235 1
a235 1
=back
a236 1
=item Data: Strings
a237 1
=over
a238 1
=item How do I validate input?
d240 1
a240 1
=item How do I unescape a string?
a241 1
=item How do I remove consecutive pairs of characters?
a242 1
=item How do I expand function calls in a string?
a243 1
=item How do I find matching/nesting anything?
d245 1
a245 1
=item How do I reverse a string?
d247 1
a247 1
=item How do I expand tabs in a string?
a248 1
=item How do I reformat a paragraph?
d250 1
a250 1
=item How can I access/change the first N letters of a string?
d252 1
a252 1
=item How do I change the Nth occurrence of something?
a253 2
=item How can I count the number of occurrences of a substring within a
string?
d255 1
a255 1
=item How do I capitalize all the words on one line?
d257 1
a257 2
=item How can I split a [character] delimited string except when inside
[character]? (Comma-separated files)
a258 1
=item How do I strip blank space from the beginning/end of a string?
d260 1
a260 1
=item How do I extract selected columns from a string?
a261 1
=item How do I find the soundex value of a string?
d263 1
a263 1
=item How can I expand variables in text strings?
a264 1
=item What's wrong with always quoting "$vars"?
a265 1
=item Why don't my <<HERE documents work?
a266 3
1. There must be no space after the << part, 2. There (probably) should be
a semicolon at the end, 3. You can't (easily) have any space in front of
the tag
a269 1
=item Data: Arrays
a270 1
=over
a271 1
=item What is the difference between $array[1] and @@array[1]?
d273 4
a276 1
=item How can I extract just the unique elements of an array?
d278 1
a278 5
a) If @@in is sorted, and you want @@out to be sorted:(this assumes all true
values in the array), b) If you don't know whether @@in is sorted:, c) Like
(b), but @@in contains only small integers:, d) A way to do (b) without any
loops or greps:, e) Like (d), but @@in contains only small positive
integers:
a279 1
=item How can I tell whether a list or array contains a certain element?
d281 1
a281 2
=item How do I compute the difference of two arrays?  How do I compute the
intersection of two arrays?
d283 1
a283 1
=item How do I find the first array element for which a condition is true?
a284 1
=item How do I handle linked lists?
d286 5
a290 1
=item How do I handle circular lists?
a291 1
=item How do I shuffle an array randomly?
a292 1
=item How do I process/modify each element of an array?
d294 1
a294 1
=item How do I select a random element from an array?
a295 1
=item How do I permute N elements of a list?
a296 1
=item How do I sort an array by (anything)?
a297 1
=item How do I manipulate arrays of bits?
d299 1
a299 1
=item Why does defined() return true on empty arrays and hashes?
d301 1
a301 1
=back
a302 1
=item Data: Hashes (Associative Arrays)
a303 1
=over
a304 1
=item How do I process an entire hash?
d306 1
a306 2
=item What happens if I add or remove keys from a hash while iterating over
it?
d308 1
a308 1
=item How do I look up a hash element by value?
a309 1
=item How can I know how many entries are in a hash?
d311 11
a321 1
=item How do I sort a hash (optionally by value instead of key)?
d323 1
a323 1
=item How can I always keep my hash sorted?
a324 1
=item What's the difference between "delete" and "undef" with hashes?
d326 16
a341 1
=item Why don't my tied hashes make the defined/exists distinction?
a342 1
=item How do I reset an each() operation part-way through?
a343 1
=item How can I get the unique keys from two hashes?
d345 1
a345 1
=item How can I store a multidimensional array in a DBM file?
a346 1
=item How can I make my hash remember the order I put elements into it?
a347 2
=item Why does passing a subroutine an undefined element in a hash create
it?
a348 2
=item How can I make the Perl equivalent of a C structure/C++ class/hash or
array of hashes or arrays?
d350 1
a350 1
=item How can I use a reference as a hash key?
d352 1
a352 1
=back
a353 1
=item Data: Misc
d357 1
a357 1
=item How do I handle binary data correctly?
a358 1
=item How do I determine whether a scalar is a number/whole/integer/float?
d360 17
a376 1
=item How do I keep persistent data across program calls?
a377 1
=item How do I print out or copy a recursive data structure?
a378 3
=item How do I define methods for every class/object?

=item How do I verify a credit card checksum?
a381 1
=item AUTHOR AND COPYRIGHT
a382 2
=head2 perlfaq5 - Files and Formats ($Revision: 1.24 $, $Date: 1998/07/05
15:07:20 $)
a383 1
=item DESCRIPTION
d385 1
a385 1
=over
d387 1
a387 1
=item How do I flush/unbuffer an output filehandle?  Why must I do this?
a388 2
=item How do I change one line in a file/delete a line in a file/insert a
line in the middle of a file/append to the beginning of a file?
d390 1
a390 1
=item How do I count the number of lines in a file?
a391 1
=item How do I make a temporary file name?
d393 1
a393 1
=item How can I manipulate fixed-record-length files?
d395 1
a395 2
=item How can I make a filehandle local to a subroutine?  How do I pass
filehandles between subroutines?  How do I make an array of filehandles?
a396 1
=item How can I use a filehandle indirectly?
d398 1
a398 1
=item How can I set up a footer format to be used with write()?
a399 1
=item How can I write() into a string?
d401 1
a401 1
=item How can I output my numbers with commas added?
a402 1
=item How can I translate tildes (~) in a filename?
d404 1
a404 1
=item How come when I open a file read-write it wipes it out?
a405 1
=item Why do I sometimes get an "Argument list too long" when I use <*>?
d407 1
a407 1
=item Is there a leak/bug in glob()?
a408 1
=item How can I open a file with a leading "E<gt>" or trailing blanks?
d410 1
a410 1
=item How can I reliably rename a file?
a411 1
=item How can I lock a file?
d413 1
a413 1
=item What can't I just open(FH, ">file.lock")?
a414 2
=item I still don't get locking.  I just want to increment the number in
the file.  How can I do this?
a415 1
=item How do I randomly update a binary file?
a416 1
=item How do I get a file's timestamp in perl?
d418 1
a418 1
=item How do I set a file's timestamp in perl?
d420 1
a420 1
=item How do I print to more than one file at once?
a421 1
=item How can I read in a file by paragraphs?
a422 1
=item How can I read a single character from a file?  From the keyboard?
a423 1
=item How can I tell if there's a character waiting on a filehandle?
a424 1
=item How do I do a C<tail -f> in perl?
d426 1
a426 1
=item How do I dup() a filehandle in Perl?
d428 1
a428 1
=item How do I close a file descriptor by number?
a429 2
=item Why can't I use "C:\temp\foo" in DOS paths?  What doesn't
`C:\temp\foo.exe` work?
d431 1
a431 1
=item Why doesn't glob("*.*") get all the files?
d433 1
a433 2
=item Why does Perl let me delete read-only files?  Why does C<-i> clobber
protected files?  Isn't this a bug in Perl?
a434 1
=item How do I select a random line from a file?
d436 1
a436 1
=back
a437 1
=item AUTHOR AND COPYRIGHT
d439 1
a439 1
=head2 perlfaq6 - Regexps ($Revision: 1.22 $, $Date: 1998/07/16 14:01:07 $)
a440 1
=item DESCRIPTION
d442 1
a442 1
=over
a443 2
=item How can I hope to use regular expressions without creating illegible
and unmaintainable code?
d445 1
a445 2
Comments Outside the Regexp, Comments Inside the Regexp, Different
Delimiters
a446 1
=item I'm having trouble matching over more than one line.  What's wrong?
a447 2
=item How can I pull out lines between two patterns that are themselves on
different lines?
a448 1
=item I put a regular expression into $/ but it didn't work. What's wrong?
d450 1
a450 2
=item How do I substitute case insensitively on the LHS, but preserving
case on the RHS?
d452 1
a452 1
=item How can I make C<\w> match national character sets?
a453 1
=item How can I match a locale-smart version of C</[a-zA-Z]/>?
d455 1
a455 1
=item How can I quote a variable to use in a regexp?
a456 1
=item What is C</o> really for?
d458 1
a458 2
=item How do I use a regular expression to strip C style comments from a
file?
d460 1
a460 1
=item Can I use Perl regular expressions to match balanced text?
a461 1
=item What does it mean that regexps are greedy?  How can I get around it?
d463 1
a463 1
=item  How do I process each word on each line?
d465 1
a465 1
=item How can I print out a word-frequency or line-frequency summary?
a466 1
=item How can I do approximate matching?
d468 7
a474 1
=item How do I efficiently match many regular expressions at once?
d476 1
a476 1
=item Why don't word-boundary searches with C<\b> work for me?
a477 1
=item Why does using $&, $`, or $' slow my program down?
a478 1
=item What good is C<\G> in a regular expression?
a479 1
=item Are Perl regexps DFAs or NFAs?  Are they POSIX compliant?
d481 1
a481 1
=item What's wrong with using grep or map in a void context?
d483 1
a483 1
=item How can I match strings with multibyte characters?
a484 1
=back
d486 13
a498 1
=item AUTHOR AND COPYRIGHT
d500 1
a500 2
=head2 perlfaq7 - Perl Language Issues ($Revision: 1.21 $, $Date:
1998/06/22 15:20:07 $)
a501 1
=item DESCRIPTION
d505 1
a505 1
=item Can I get a BNF/yacc/RE for the Perl language?
a506 2
=item What are all these $@@%* punctuation signs, and how do I know when to
use them?
d508 11
a518 2
=item Do I always/never have to quote my strings or use semicolons and
commas?
d520 1
a520 1
=item How do I skip some return values?
a521 1
=item How do I temporarily block warnings?
d523 5
a527 1
=item What's an extension?
d529 1
a529 1
=item Why do Perl operators have different precedence than C operators?
a530 1
=item How do I declare/create a structure?
d532 5
a536 1
=item How do I create a module?
a537 1
=item How do I create a class?
a538 1
=item How can I tell if a variable is tainted?
d540 1
a540 1
=item What's a closure?
a541 1
=item What is variable suicide and how can I prevent it?
a542 2
=item How can I pass/return a {Function, FileHandle, Array, Hash, Method,
Regexp}?
a543 2
Passing Variables and Functions, Passing Filehandles, Passing Regexps,
Passing Methods
d545 1
a545 1
=item How do I create a static variable?
d547 1
a547 2
=item What's the difference between dynamic and lexical (static) scoping?
Between local() and my()?
a548 2
=item How can I access a dynamic variable while a similarly named lexical
is in scope?
d550 1
a550 1
=item What's the difference between deep and shallow binding?
d552 1
a552 1
=item Why doesn't "my($foo) = <FILE>;" work right?
a553 1
=item How do I redefine a builtin function, operator, or method?
d555 1
a555 1
=item What's the difference between calling a function as &foo and foo()?
a556 1
=item How do I create a switch or case statement?
a557 1
=item How can I catch accesses to undefined variables/functions/methods?
a558 1
=item Why can't a method included in this same file be found?
d560 1
a560 1
=item How can I find out my current package?
d562 1
a562 1
=item How can I comment out a large block of perl code?
a563 1
=back
d565 1
a565 1
=item AUTHOR AND COPYRIGHT
a566 2
=head2 perlfaq8 - System Interaction ($Revision: 1.25 $, $Date: 1998/07/05
15:07:20 $)
a567 1
=item DESCRIPTION
a568 1
=over
a569 1
=item How do I find out which operating system I'm running under?
d571 1
a571 1
=item How come exec() doesn't return?
d573 1
a573 1
=item How do I do fancy stuff with the keyboard/screen/mouse?
a574 1
Keyboard, Screen, Mouse
d576 3
a578 1
=item How do I print something out in color?
d580 1
a580 1
=item How do I read just one key without waiting for a return key?
a581 1
=item How do I check whether input is ready on the keyboard?
d583 1
a583 1
=item How do I clear the screen?
a584 1
=item How do I get the screen size?
d586 1
a586 1
=item How do I ask the user for a password?
a587 1
=item How do I read and write the serial port?
d589 1
a589 1
lockfiles, open mode, end of line, flushing output, non-blocking input
a590 1
=item How do I decode encrypted password files?
d592 1
a592 1
=item How do I start a process in the background?
a593 1
STDIN, STDOUT, and STDERR are shared, Signals, Zombies
d595 1
a595 1
=item How do I trap control characters/signals?
a596 1
=item How do I modify the shadow password file on a Unix system?
d598 1
a598 1
=item How do I set the time and date?
a599 1
=item How can I sleep() or alarm() for under a second?
d601 1
a601 1
=item How can I measure time under a second?
d603 1
a603 1
=item How can I do an atexit() or setjmp()/longjmp()? (Exception handling)
a604 2
=item Why doesn't my sockets program work under System V (Solaris)? What
does the error message "Protocol not supported" mean?
d606 1
a606 1
=item How can I call my system's unique C functions from Perl?
a607 1
=item Where do I get the include files to do ioctl() or syscall()?
d609 1
a609 1
=item Why do setuid perl scripts complain about kernel problems?
a610 1
=item How can I open a pipe both to and from a command?
a611 1
=item Why can't I get the output of a command with system()?
a612 1
=item How can I capture STDERR from an external command?
d614 1
a614 1
=item Why doesn't open() return an error when a pipe open fails?
d616 1
a616 1
=item What's wrong with using backticks in a void context?
a617 1
=item How can I call backticks without shell processing?
d619 1
a619 2
=item Why can't my script read from STDIN after I gave it EOF (^D on Unix,
^Z on MS-DOS)?
d621 1
a621 1
=item How can I convert my shell script to perl?
a622 1
=item Can I use perl to run a telnet or ftp session?
d624 1
a624 1
=item How can I write expect in Perl?
a625 2
=item Is there a way to hide perl's command line from programs such as
"ps"?
d627 1
a627 3
=item I {changed directory, modified my environment} in a perl script.	How
come the change disappeared when I exited the script?  How do I get my
changes to be visible?
a628 1
Unix
a629 2
=item How do I close a process's filehandle without waiting for it to
complete?
a630 1
=item How do I fork a daemon process?
d632 1
a632 1
=item How do I make my program run with sh and csh?
d634 1
a634 1
=item How do I find out if I'm running interactively or not?
a635 1
=item How do I timeout a slow event?
d637 1
a637 1
=item How do I set CPU limits?
d639 1
a639 1
=item How do I avoid zombies on a Unix system?
a640 1
=item How do I use an SQL database?
d642 1
a642 1
=item How do I make a system() exit on control-C?
a643 1
=item How do I open a file without blocking?
d645 1
a645 1
=item How do I install a CPAN module?
a646 1
=item What's the difference between require and use?
a647 1
=item How do I keep my own module/library directory?
a648 4
=item How do I add the directory my program lives in to the module/library
search path?

=item How do I add a directory to my include path at runtime?
d652 1
a652 1
=item AUTHOR AND COPYRIGHT
a653 4
=head2 perlfaq9 - Networking ($Revision: 1.20 $, $Date: 1998/06/22 18:31:09
$)

=item DESCRIPTION
d657 1
a657 2
=item My CGI script runs from the command line but not the browser.   (500
Server Error)
a658 1
=item How can I get better error messages from a CGI program?
d660 1
a660 1
=item How do I remove HTML from a string?
a661 1
=item How do I extract URLs?
d663 1
a663 2
=item How do I download a file from the user's machine?  How do I open a
file on another machine?
a664 1
=item How do I make a pop-up menu in HTML?
a665 1
=item How do I fetch an HTML file?
a666 1
=item How do I automate an HTML form submission?
d668 1
a668 1
=item How do I decode or create those %-encodings on the web?
d670 1
a670 1
=item How do I redirect to another page?
a671 1
=item How do I put a password on my web pages?
d673 1
a673 1
=item How do I edit my .htpasswd and .htgroup files with Perl?
d675 1
a675 2
=item How do I make sure users can't enter values into a form that cause my
CGI script to do bad things?
a676 1
=item How do I parse a mail header?
d678 1
a678 1
=item How do I decode a CGI form?
a679 1
=item How do I check a valid mail address?
d681 1
a681 1
=item How do I decode a MIME/BASE64 string?
a682 1
=item How do I return the user's mail address?
a683 1
=item How do I send mail?
a684 1
=item How do I read mail?
d686 1
a686 1
=item How do I find out my hostname/domainname/IP address?
d688 1
a688 1
=item How do I fetch a news article or the active newsgroups?
a689 1
=item How do I fetch/put an FTP file?
d691 1
a691 1
=item How can I do RPC in Perl?
a692 1
=back
d694 1
a694 1
=item AUTHOR AND COPYRIGHT
a695 1
=head2 perldelta - what's new for perl5.005
a696 1
=item DESCRIPTION
a697 1
=item About the new versioning system
a698 1
=item Incompatible Changes
d700 1
a700 1
=over
d702 1
a702 1
=item WARNING:  This version is not binary compatible with Perl 5.004.
a703 1
=item Default installation structure has changed
d705 1
a705 1
=item Perl Source Compatibility
a706 1
=item C Source Compatibility
d708 1
a708 3
Core sources now require ANSI C compiler, All Perl global variables must
now be referenced with an explicit prefix, Enabling threads has source
compatibility issues
a709 1
=item Binary Compatibility
d711 1
a711 1
=item Security fixes may affect compatibility
a712 1
=item Relaxed new mandatory warnings introduced in 5.004
d714 1
a714 1
=item Licensing
a715 1
=back
d717 1
a717 1
=item Core Changes
a718 1
=over
d720 1
a720 1
=item Threads
a721 1
=item Compiler
a722 1
=item Regular Expressions
a723 3
Many new and improved optimizations, Many bug fixes, New regular expression
constructs, New operator for precompiled regular expressions, Other
improvements, Incompatible changes
a724 1
=item   Improved malloc()
d726 1
a726 1
=item Quicksort is internally implemented
d728 1
a728 1
=item Reliable signals
a729 1
=item Reliable stack pointers
d731 1
a731 1
=item More generous treatment of carriage returns
d733 1
a733 1
=item Memory leaks
a734 1
=item Better support for multiple interpreters
d736 1
a736 1
=item Behavior of local() on array and hash elements is now well-defined
a737 1
=item C<%!> is transparently tied to the L<Errno> module
d739 1
a739 1
=item Pseudo-hashes are supported
a740 1
=item C<EXPR foreach EXPR> is supported
d742 1
a742 1
=item Keywords can be globally overridden
a743 1
=item C<$^E> is meaningful on Win32
d745 1
a745 1
=item C<foreach (1..1000000)> optimized
a746 1
=item C<Foo::> can be used as implicitly quoted package name
d748 1
a748 1
=item C<exists $Foo::{Bar::}> tests existence of a package
a749 1
=item Better locale support
d751 1
a751 1
=item Experimental support for 64-bit platforms
a752 1
=item prototype() returns useful results on builtins
d754 1
a754 1
=item Extended support for exception handling
a755 1
=item Re-blessing in DESTROY() supported for chaining DESTROY() methods
a756 1
=item All C<printf> format conversions are handled internally
a757 1
=item New C<INIT> keyword
d759 1
a759 1
=item New C<lock> keyword
d761 1
a761 1
=item New C<qr//> operator
a762 1
=item C<our> is now a reserved word
a763 1
=item Tied arrays are now fully supported
a764 1
=item Tied handles support is better
a765 1
=item 4th argument to substr
d767 1
a767 1
=item Negative LENGTH argument to splice
d769 1
a769 1
=item Magic lvalues are now more magical
a770 1
=item E<lt>E<gt> now reads in records
d772 1
a772 1
=back
a773 1
=item Supported Platforms
d777 1
a777 1
=item New Platforms
a778 1
=item Changes in existing support
d780 1
a780 1
=back
d782 1
a782 1
=item Modules and Pragmata
a783 1
=over
d785 2
a786 1
=item New Modules
d788 1
a788 3
B, Data::Dumper, Errno, File::Spec, ExtUtils::Installed,
ExtUtils::Packlist, Fatal, IPC::SysV, Test, Tie::Array, Tie::Handle,
Thread, attrs, fields, re
a789 1
=item Changes in existing modules
d791 3
a793 1
CGI, POSIX, DB_File, MakeMaker, CPAN, Cwd, Benchmark
d795 1
a795 1
=back
a796 1
=item Utility Changes
a797 1
=item Documentation Changes
a798 1
=item New Diagnostics
d800 1
a800 17
Ambiguous call resolved as CORE::%s(), qualify as such or use &, Bad index
while coercing array into hash, Bareword "%s" refers to nonexistent
package, Can't call method "%s" on an undefined value, Can't coerce array
into hash, Can't goto subroutine from an eval-string, Can't localize
pseudo-hash element, Can't use %%! because Errno.pm is not available,
Cannot find an opnumber for "%s", Character class syntax [. .] is reserved
for future extensions, Character class syntax [: :] is reserved for future
extensions, Character class syntax [= =] is reserved for future extensions,
%s: Eval-group in insecure regular expression, %s: Eval-group not allowed,
use re 'eval', %s: Eval-group not allowed at run time, Explicit blessing to
'' (assuming package main), Illegal hex digit ignored, No such array field,
No such field "%s" in variable %s of type %s, Out of memory during
ridiculously large request, Range iterator outside integer range, Recursive
inheritance detected while looking for method '%s' in package '%s',
Reference found where even-sized list expected, Undefined value assigned to
typeglob, Use of reserved word "%s" is deprecated, perl: warning: Setting
locale failed
d802 1
a802 1
=item Obsolete Diagnostics
a803 2
Can't mktemp(), Can't write to temp file for B<-e>: %s, Cannot open
temporary file
a806 1503
=item SEE ALSO

=item HISTORY

=head2 perldata - Perl data types

=item DESCRIPTION

=over

=item Variable names

=item Context

=item Scalar values

=item Scalar value constructors

=item List value constructors

=item Typeglobs and Filehandles

=back

=head2 perlsyn - Perl syntax

=item DESCRIPTION

=over

=item Declarations

=item Simple statements

=item Compound statements

=item Loop Control

=item For Loops

=item Foreach Loops

=item Basic BLOCKs and Switch Statements

=item Goto

=item PODs: Embedded Documentation

=item Plain Old Comments (Not!)

=back

=head2 perlop - Perl operators and precedence

=item SYNOPSIS

=item DESCRIPTION

=over

=item Terms and List Operators (Leftward)

=item The Arrow Operator

=item Auto-increment and Auto-decrement

=item Exponentiation

=item Symbolic Unary Operators

=item Binding Operators

=item Multiplicative Operators

=item Additive Operators

=item Shift Operators

=item Named Unary Operators

=item Relational Operators

=item Equality Operators

=item Bitwise And

=item Bitwise Or and Exclusive Or

=item C-style Logical And

=item C-style Logical Or

=item Range Operators

=item Conditional Operator

=item Assignment Operators

=item Comma Operator

=item List Operators (Rightward)

=item Logical Not

=item Logical And

=item Logical or and Exclusive Or

=item C Operators Missing From Perl

unary &, unary *, (TYPE)

=item Quote and Quote-like Operators

=item Regexp Quote-Like Operators

?PATTERN?, m/PATTERN/cgimosx, /PATTERN/cgimosx, q/STRING/, C<'STRING'>,
qq/STRING/, "STRING", qr/STRING/imosx, qx/STRING/, `STRING`, qw/STRING/,
s/PATTERN/REPLACEMENT/egimosx, tr/SEARCHLIST/REPLACEMENTLIST/cds,
y/SEARCHLIST/REPLACEMENTLIST/cds

=item Gory details of parsing quoted constructs

Finding the end, Removal of backslashes before delimiters, Interpolation,
C<<<'EOF'>, C<m''>, C<s'''>, C<tr///>, C<y///>, C<''>, C<q//>, C<"">,
C<``>, C<qq//>, C<qx//>, C<<file*globE<gt>>, C<?RE?>, C</RE/>, C<m/RE/>,
C<s/RE/foo/>,, Interpolation of regular expressions, Optimization of
regular expressions

=item I/O Operators

=item Constant Folding

=item Bitwise String Operators

=item Integer Arithmetic

=item Floating-point Arithmetic

=item Bigger Numbers

=back

=head2 perlre - Perl regular expressions

=item DESCRIPTION

i, m, s, x

=over

=item Regular Expressions

C<(?#text)>, C<(?:pattern)>, C<(?imsx-imsx:pattern)>, C<(?=pattern)>,
C<(?!pattern)>, C<(?E<lt>=pattern)>, C<(?<!pattern)>, C<(?{ code })>,
C<(?E<gt>pattern)>, C<(?(condition)yes-pattern|no-pattern)>,
C<(?(condition)yes-pattern)>, C<(?imsx-imsx)>

=item Backtracking

=item Version 8 Regular Expressions

=item WARNING on \1 vs $1

=item Repeated patterns matching zero-length substring

=item Creating custom RE engines

=item SEE ALSO

=back

=head2 perlrun - how to execute the Perl interpreter

=item SYNOPSIS

=item DESCRIPTION

=over

=item #! and quoting on non-Unix systems

OS/2, MS-DOS, Win95/NT, Macintosh

=item Location of Perl

=item Switches

B<-0>[I<digits>], B<-a>, B<-c>, B<-d>, B<-d:>I<foo>, B<-D>I<letters>,
B<-D>I<number>, B<-e> I<commandline>, B<-F>I<pattern>, B<-h>,
B<-i>[I<extension>], B<-I>I<directory>, B<-l>[I<octnum>],
B<-m>[B<->]I<module>, B<-M>[B<->]I<module>, B<-M>[B<->]I<'module ...'>,
B<-[mM]>[B<->]I<module=arg[,arg]...>, B<-n>, B<-p>, B<-P>, B<-s>, B<-S>,
B<-T>, B<-u>, B<-U>, B<-v>, B<-V>, B<-V:>I<name>, B<-w>, B<-x> I<directory>

=back

=item ENVIRONMENT

HOME, LOGDIR, PATH, PERL5LIB, PERL5OPT, PERLLIB, PERL5DB, PERL5SHELL
(specific to WIN32 port), PERL_DEBUG_MSTATS, PERL_DESTRUCT_LEVEL

=head2 perlfunc - Perl builtin functions

=item DESCRIPTION

=over

=item Perl Functions by Category

Functions for SCALARs or strings, Regular expressions and pattern matching,
Numeric functions, Functions for real @@ARRAYs, Functions for list data,
Functions for real %HASHes, Input and output functions, Functions for fixed
length data or records, Functions for filehandles, files, or directories,
Keywords related to the control flow of your perl program, Keywords related
to scoping, Miscellaneous functions, Functions for processes and process
groups, Keywords related to perl modules, Keywords related to classes and
object-orientedness, Low-level socket functions, System V interprocess
communication functions, Fetching user and group info, Fetching network
info, Time-related functions, Functions new in perl5, Functions obsoleted
in perl5

=item Alphabetical Listing of Perl Functions

I<-X> FILEHANDLE, I<-X> EXPR, I<-X>, abs VALUE, abs, accept
NEWSOCKET,GENERICSOCKET, alarm SECONDS, alarm, atan2 Y,X, bind SOCKET,NAME,
binmode FILEHANDLE, bless REF,CLASSNAME, bless REF, caller EXPR, caller,
chdir EXPR, chmod LIST, chomp VARIABLE, chomp LIST, chomp, chop VARIABLE,
chop LIST, chop, chown LIST, chr NUMBER, chr, chroot FILENAME, chroot,
close FILEHANDLE, close, closedir DIRHANDLE, connect SOCKET,NAME, continue
BLOCK, cos EXPR, crypt PLAINTEXT,SALT, dbmclose HASH, dbmopen
HASH,DBNAME,MODE, defined EXPR, defined, delete EXPR, die LIST, do BLOCK,
do SUBROUTINE(LIST), do EXPR, dump LABEL, each HASH, eof FILEHANDLE, eof
(), eof, eval EXPR, eval BLOCK, exec LIST, exec PROGRAM LIST, exists EXPR,
exit EXPR, exp EXPR, exp, fcntl FILEHANDLE,FUNCTION,SCALAR, fileno
FILEHANDLE, flock FILEHANDLE,OPERATION, fork, format, formline
PICTURE,LIST, getc FILEHANDLE, getc, getlogin, getpeername SOCKET, getpgrp
PID, getppid, getpriority WHICH,WHO, getpwnam NAME, getgrnam NAME,
gethostbyname NAME, getnetbyname NAME, getprotobyname NAME, getpwuid UID,
getgrgid GID, getservbyname NAME,PROTO, gethostbyaddr ADDR,ADDRTYPE,
getnetbyaddr ADDR,ADDRTYPE, getprotobynumber NUMBER, getservbyport
PORT,PROTO, getpwent, getgrent, gethostent, getnetent, getprotoent,
getservent, setpwent, setgrent, sethostent STAYOPEN, setnetent STAYOPEN,
setprotoent STAYOPEN, setservent STAYOPEN, endpwent, endgrent, endhostent,
endnetent, endprotoent, endservent, getsockname SOCKET, getsockopt
SOCKET,LEVEL,OPTNAME, glob EXPR, glob, gmtime EXPR, goto LABEL, goto EXPR,
goto &NAME, grep BLOCK LIST, grep EXPR,LIST, hex EXPR, hex, import, index
STR,SUBSTR,POSITION, index STR,SUBSTR, int EXPR, int, ioctl
FILEHANDLE,FUNCTION,SCALAR, join EXPR,LIST, keys HASH, kill LIST, last
LABEL, last, lc EXPR, lc, lcfirst EXPR, lcfirst, length EXPR, length, link
OLDFILE,NEWFILE, listen SOCKET,QUEUESIZE, local EXPR, localtime EXPR, log
EXPR, log, lstat FILEHANDLE, lstat EXPR, lstat, m//, map BLOCK LIST, map
EXPR,LIST, mkdir FILENAME,MODE, msgctl ID,CMD,ARG, msgget KEY,FLAGS, msgsnd
ID,MSG,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, my EXPR, next LABEL, next, no
Module LIST, oct EXPR, oct, open FILEHANDLE,EXPR, open FILEHANDLE, opendir
DIRHANDLE,EXPR, ord EXPR, ord, pack TEMPLATE,LIST, package, package
NAMESPACE, pipe READHANDLE,WRITEHANDLE, pop ARRAY, pop, pos SCALAR, pos,
print FILEHANDLE LIST, print LIST, print, printf FILEHANDLE FORMAT, LIST,
printf FORMAT, LIST, prototype FUNCTION, push ARRAY,LIST, q/STRING/,
qq/STRING/, qr/STRING/, qx/STRING/, qw/STRING/, quotemeta EXPR, quotemeta,
rand EXPR, rand, read FILEHANDLE,SCALAR,LENGTH,OFFSET, read
FILEHANDLE,SCALAR,LENGTH, readdir DIRHANDLE, readline EXPR, readlink EXPR,
readlink, readpipe EXPR, recv SOCKET,SCALAR,LEN,FLAGS, redo LABEL, redo,
ref EXPR, ref, rename OLDNAME,NEWNAME, require EXPR, require, reset EXPR,
reset, return EXPR, return, reverse LIST, rewinddir DIRHANDLE, rindex
STR,SUBSTR,POSITION, rindex STR,SUBSTR, rmdir FILENAME, rmdir, s///, scalar
EXPR, seek FILEHANDLE,POSITION,WHENCE, seekdir DIRHANDLE,POS, select
FILEHANDLE, select, select RBITS,WBITS,EBITS,TIMEOUT, semctl
ID,SEMNUM,CMD,ARG, semget KEY,NSEMS,FLAGS, semop KEY,OPSTRING, send
SOCKET,MSG,FLAGS,TO, send SOCKET,MSG,FLAGS, setpgrp PID,PGRP, setpriority
WHICH,WHO,PRIORITY, setsockopt SOCKET,LEVEL,OPTNAME,OPTVAL, shift ARRAY,
shift, shmctl ID,CMD,ARG, shmget KEY,SIZE,FLAGS, shmread ID,VAR,POS,SIZE,
shmwrite ID,STRING,POS,SIZE, shutdown SOCKET,HOW, sin EXPR, sin, sleep
EXPR, sleep, socket SOCKET,DOMAIN,TYPE,PROTOCOL, socketpair
SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, sort SUBNAME LIST, sort BLOCK LIST,
sort LIST, splice ARRAY,OFFSET,LENGTH,LIST, splice ARRAY,OFFSET,LENGTH,
splice ARRAY,OFFSET, split /PATTERN/,EXPR,LIMIT, split /PATTERN/,EXPR,
split /PATTERN/, split, sprintf FORMAT, LIST, sqrt EXPR, sqrt, srand EXPR,
srand, stat FILEHANDLE, stat EXPR, stat, study SCALAR, study, sub BLOCK,
sub NAME, sub NAME BLOCK, substr EXPR,OFFSET,LEN,REPLACEMENT, substr
EXPR,OFFSET,LEN, substr EXPR,OFFSET, symlink OLDFILE,NEWFILE, syscall LIST,
sysopen FILEHANDLE,FILENAME,MODE, sysopen FILEHANDLE,FILENAME,MODE,PERMS,
sysread FILEHANDLE,SCALAR,LENGTH,OFFSET, sysread FILEHANDLE,SCALAR,LENGTH,
sysseek FILEHANDLE,POSITION,WHENCE, system LIST, system PROGRAM LIST,
syswrite FILEHANDLE,SCALAR,LENGTH,OFFSET, syswrite
FILEHANDLE,SCALAR,LENGTH, tell FILEHANDLE, tell, telldir DIRHANDLE, tie
VARIABLE,CLASSNAME,LIST, tied VARIABLE, time, times, tr///, truncate
FILEHANDLE,LENGTH, truncate EXPR,LENGTH, uc EXPR, uc, ucfirst EXPR,
ucfirst, umask EXPR, umask, undef EXPR, undef, unlink LIST, unlink, unpack
TEMPLATE,EXPR, untie VARIABLE, unshift ARRAY,LIST, use Module LIST, use
Module, use Module VERSION LIST, use VERSION, utime LIST, values HASH, vec
EXPR,OFFSET,BITS, wait, waitpid PID,FLAGS, wantarray, warn LIST, write
FILEHANDLE, write EXPR, write, y///

=back

=head2 perlvar - Perl predefined variables

=item DESCRIPTION

=over

=item Predefined Names

$ARG, $_, $E<lt>I<digits>E<gt>, $MATCH, $&, $PREMATCH, $`, $POSTMATCH, $',
$LAST_PAREN_MATCH, $+, $MULTILINE_MATCHING, $*, input_line_number HANDLE
EXPR, $INPUT_LINE_NUMBER, $NR, $, input_record_separator HANDLE EXPR,
$INPUT_RECORD_SEPARATOR, $RS, $/, autoflush HANDLE EXPR, $OUTPUT_AUTOFLUSH,
$|, output_field_separator HANDLE EXPR, $OUTPUT_FIELD_SEPARATOR, $OFS, $,,
output_record_separator HANDLE EXPR, $OUTPUT_RECORD_SEPARATOR, $ORS, $\,
$LIST_SEPARATOR, $", $SUBSCRIPT_SEPARATOR, $SUBSEP, $;, $OFMT, $#,
format_page_number HANDLE EXPR, $FORMAT_PAGE_NUMBER, $%,
format_lines_per_page HANDLE EXPR, $FORMAT_LINES_PER_PAGE, $=,
format_lines_left HANDLE EXPR, $FORMAT_LINES_LEFT, $-, format_name HANDLE
EXPR, $FORMAT_NAME, $~, format_top_name HANDLE EXPR, $FORMAT_TOP_NAME, $^,
format_line_break_characters HANDLE EXPR, $FORMAT_LINE_BREAK_CHARACTERS,
$:, format_formfeed HANDLE EXPR, $FORMAT_FORMFEED, $^L, $ACCUMULATOR, $^A,
$CHILD_ERROR, $?, $OS_ERROR, $ERRNO, $!, $EXTENDED_OS_ERROR, $^E,
$EVAL_ERROR, $@@, $PROCESS_ID, $PID, $$, $REAL_USER_ID, $UID, $<,
$EFFECTIVE_USER_ID, $EUID, $>, $REAL_GROUP_ID, $GID, $(,
$EFFECTIVE_GROUP_ID, $EGID, $), $PROGRAM_NAME, $0, $[, $PERL_VERSION, $],
$DEBUGGING, $^D, $SYSTEM_FD_MAX, $^F, $^H, $INPLACE_EDIT, $^I, $^M,
$OSNAME, $^O, $PERLDB, $^P, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, $^R, $^S,
$BASETIME, $^T, $WARNING, $^W, $EXECUTABLE_NAME, $^X, $ARGV, @@ARGV, @@INC,
@@_, %INC, %ENV  $ENV{expr}, %SIG  $SIG{expr}

=item Error Indicators

=back

=head2 perlsub - Perl subroutines

=item SYNOPSIS

=item DESCRIPTION

=over

=item Private Variables via C<my()>

=item Persistent Private Variables

=item Temporary Values via local()

=item Passing Symbol Table Entries (typeglobs)

=item When to Still Use local()

1. You need to give a global variable a temporary value, especially C<$_>,
2. You need to create a local file or directory handle or a local function,
3. You want to temporarily change just one element of an array or hash

=item Pass by Reference

=item Prototypes

=item Constant Functions

=item Overriding Builtin Functions

=item Autoloading

=back

=item SEE ALSO

=head2 perlmod - Perl modules (packages and symbol tables)

=item DESCRIPTION

=over

=item Packages

=item Symbol Tables

=item Package Constructors and Destructors

=item Perl Classes

=item Perl Modules

=back

=item SEE ALSO

=head2 perlmodlib - constructing new Perl modules and finding existing ones

=item DESCRIPTION

=item THE PERL MODULE LIBRARY

=over

=item Pragmatic Modules

use autouse MODULE => qw(sub1 sub2 sub3), blib, diagnostics, integer, less,
lib, locale, ops, overload, re, sigtrap, strict, subs, vmsish, vars

=item Standard Modules

AnyDBM_File, AutoLoader, AutoSplit, Benchmark, CPAN, CPAN::FirstTime,
CPAN::Nox, Carp, Class::Struct, Config, Cwd, DB_File, Devel::SelfStubber,
DirHandle, DynaLoader, English, Env, Exporter, ExtUtils::Embed,
ExtUtils::Install, ExtUtils::Liblist, ExtUtils::MM_OS2, ExtUtils::MM_Unix,
ExtUtils::MM_VMS, ExtUtils::MakeMaker, ExtUtils::Manifest,
ExtUtils::Mkbootstrap, ExtUtils::Mksymlists, ExtUtils::testlib, Fatal,
Fcntl, File::Basename, File::CheckTree, File::Compare, File::Copy,
File::Find, File::Path, File::stat, FileCache, FileHandle, FindBin,
GDBM_File, Getopt::Long, Getopt::Std, I18N::Collate, IO, IO::File,
IO::Handle, IO::Pipe, IO::Seekable, IO::Select, IO::Socket, IPC::Open2,
IPC::Open3, Math::BigFloat, Math::BigInt, Math::Complex, Math::Trig,
NDBM_File, Net::Ping, Net::hostent, Net::netent, Net::protoent,
Net::servent, Opcode, Pod::Text, POSIX, SDBM_File, Safe, Search::Dict,
SelectSaver, SelfLoader, Shell, Socket, Symbol, Sys::Hostname, Sys::Syslog,
Term::Cap, Term::Complete, Term::ReadLine, Test::Harness, Text::Abbrev,
Text::ParseWords, Text::Soundex, Text::Tabs, Text::Wrap, Tie::Hash,
Tie::RefHash, Tie::Scalar, Tie::SubstrHash, Time::Local, Time::gmtime,
Time::localtime, Time::tm, UNIVERSAL, User::grent, User::pwent

=item Extension Modules

=back

=item CPAN

Language Extensions and Documentation Tools, Development Support, Operating
System Interfaces, Networking, Device Control (modems) and InterProcess
Communication, Data Types and Data Type Utilities, Database Interfaces,
User Interfaces, Interfaces to / Emulations of Other Programming Languages,
File Names, File Systems and File Locking (see also File Handles), String
Processing, Language Text Processing, Parsing, and Searching, Option,
Argument, Parameter, and Configuration File Processing,
Internationalization and Locale, Authentication, Security, and Encryption,
World Wide Web, HTML, HTTP, CGI, MIME, Server and Daemon Utilities,
Archiving and Compression, Images, Pixmap and Bitmap Manipulation, Drawing,
and Graphing, Mail and Usenet News, Control Flow Utilities (callbacks and
exceptions etc), File Handle and Input/Output Stream Utilities,
Miscellaneous Modules, Africa, Asia, Australasia, Europe, North America,
South America

=item Modules: Creation, Use, and Abuse

=over

=item Guidelines for Module Creation

Do similar modules already exist in some form?, Try to design the new
module to be easy to extend and reuse, Some simple style guidelines, Select
what to export, Select a name for the module, Have you got it right?,
README and other Additional Files, A description of the
module/package/extension etc, A copyright notice - see below, Prerequisites
- what else you may need to have, How to build it - possible changes to
Makefile.PL etc, How to install it, Recent changes in this release,
especially incompatibilities, Changes / enhancements you plan to make in
the future, Adding a Copyright Notice, Give the module a
version/issue/release number, How to release and distribute a module, Take
care when changing a released module

=item Guidelines for Converting Perl 4 Library Scripts into Modules

There is no requirement to convert anything, Consider the implications,
Make the most of the opportunity, The pl2pm utility will get you started,
Adds the standard Module prologue lines, Converts package specifiers from '
to ::, Converts die(...) to croak(...), Several other minor changes

=item Guidelines for Reusing Application Code

Complete applications rarely belong in the Perl Module Library, Many
applications contain some Perl code that could be reused, Break-out the
reusable code into one or more separate module files, Take the opportunity
to reconsider and redesign the interfaces, In some cases the 'application'
can then be reduced to a small

=back

=item NOTE

=head2 perlmodinstall - Installing CPAN Modules

=item DESCRIPTION

=over

=item PREAMBLE

B<DECOMPRESS> the file, B<UNPACK> the file into a directory, B<BUILD> the
module (sometimes unnecessary), B<INSTALL> the module

=back

=item HEY

=item AUTHOR

=item COPYRIGHT

=head2 perlform - Perl formats

=item DESCRIPTION

=over

=item Format Variables

=back

=item NOTES

=over

=item Footers

=item Accessing Formatting Internals

=back

=item WARNINGS

=head2 perllocale - Perl locale handling (internationalization and
localization)

=item DESCRIPTION

=item PREPARING TO USE LOCALES

=item USING LOCALES

=over

=item The use locale pragma

=item The setlocale function

=item Finding locales

=item LOCALE PROBLEMS

=item Temporarily fixing locale problems

=item Permanently fixing locale problems

=item Permanently fixing your locale configuration

=item Permanently fixing system locale configuration

=item The localeconv function

=back

=item LOCALE CATEGORIES

=over

=item Category LC_COLLATE: Collation

=item Category LC_CTYPE: Character Types

=item Category LC_NUMERIC: Numeric Formatting

=item Category LC_MONETARY: Formatting of monetary amounts

=item LC_TIME

=item Other categories

=back

=item SECURITY

B<Comparison operators> (C<lt>, C<le>, C<ge>, C<gt> and C<cmp>):,
B<Case-mapping interpolation> (with C<\l>, C<\L>, C<\u> or C<\U>),
B<Matching operator> (C<m//>):, B<Substitution operator> (C<s///>):,
B<In-memory formatting function> (sprintf()):, B<Output formatting
functions> (printf() and write()):, B<Case-mapping functions> (lc(),
lcfirst(), uc(), ucfirst()):, B<POSIX locale-dependent functions>
(localeconv(), strcoll(),strftime(), strxfrm()):, B<POSIX character class
tests> (isalnum(), isalpha(), isdigit(),isgraph(), islower(), isprint(),
ispunct(), isspace(), isupper(),
isxdigit()):

=item ENVIRONMENT

PERL_BADLANG, LC_ALL, LC_CTYPE, LC_COLLATE, LC_MONETARY, LC_NUMERIC,
LC_TIME, LANG

=item NOTES

=over

=item Backward compatibility

=item I18N:Collate obsolete

=item Sort speed and memory use impacts

=item write() and LC_NUMERIC

=item Freely available locale definitions

=item I18n and l10n

=item An imperfect standard

=back

=item BUGS

=over

=item Broken systems

=back

=item SEE ALSO

=item HISTORY

=head2 perlref - Perl references and nested data structures

=item DESCRIPTION

=over

=item Making References

=item Using References

=item Symbolic references

=item Not-so-symbolic references

=item Pseudo-hashes: Using an array as a hash

=item Function Templates

=back

=item WARNING

=item SEE ALSO

=head2 perldsc - Perl Data Structures Cookbook

=item DESCRIPTION

arrays of arrays, hashes of arrays, arrays of hashes, hashes of hashes,
more elaborate constructs

=item REFERENCES

=item COMMON MISTAKES

=item CAVEAT ON PRECEDENCE

=item WHY YOU SHOULD ALWAYS C<use strict>

=item DEBUGGING

=item CODE EXAMPLES

=item LISTS OF LISTS

=over

=item Declaration of a LIST OF LISTS

=item Generation of a LIST OF LISTS

=item Access and Printing of a LIST OF LISTS

=back

=item HASHES OF LISTS

=over

=item Declaration of a HASH OF LISTS

=item Generation of a HASH OF LISTS

=item Access and Printing of a HASH OF LISTS

=back

=item LISTS OF HASHES

=over

=item Declaration of a LIST OF HASHES

=item Generation of a LIST OF HASHES

=item Access and Printing of a LIST OF HASHES

=back

=item HASHES OF HASHES

=over

=item Declaration of a HASH OF HASHES

=item Generation of a HASH OF HASHES

=item Access and Printing of a HASH OF HASHES

=back

=item MORE ELABORATE RECORDS

=over

=item Declaration of MORE ELABORATE RECORDS

=item Declaration of a HASH OF COMPLEX RECORDS

=item Generation of a HASH OF COMPLEX RECORDS

=back

=item Database Ties

=item SEE ALSO

=item AUTHOR

=head2 perllol, perlLoL - Manipulating Lists of Lists in Perl

=item DESCRIPTION

=item Declaration and Access of Lists of Lists

=item Growing Your Own

=item Access and Printing

=item Slices

=item SEE ALSO

=item AUTHOR

=head2 perltoot - Tom's object-oriented tutorial for perl

=item DESCRIPTION

=item Creating a Class

=over

=item Object Representation

=item Class Interface

=item Constructors and Instance Methods

=item Planning for the Future: Better Constructors

=item Destructors

=item Other Object Methods

=back

=item Class Data

=over

=item Accessing Class Data

=item Debugging Methods

=item Class Destructors

=item Documenting the Interface

=back

=item Aggregation

=item Inheritance

=over

=item Overridden Methods

=item Multiple Inheritance

=item UNIVERSAL: The Root of All Objects

=back

=item Alternate Object Representations

=over

=item Arrays as Objects

=item Closures as Objects

=back

=item AUTOLOAD: Proxy Methods

=over

=item Autoloaded Data Methods

=item Inherited Autoloaded Data Methods

=back

=item Metaclassical Tools

=over

=item Class::Struct

=item Data Members as Variables

=item NOTES

=item Object Terminology

=back

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=item COPYRIGHT

=over

=item Acknowledgments

=back

=head2 perlobj - Perl objects

=item DESCRIPTION

=over

=item An Object is Simply a Reference

=item A Class is Simply a Package

=item A Method is Simply a Subroutine

=item Method Invocation

=item Default UNIVERSAL methods

isa(CLASS), can(METHOD), VERSION( [NEED] )

=item Destructors

=item WARNING

=item Summary

=item Two-Phased Garbage Collection

=back

=item SEE ALSO

=head2 perltie - how to hide an object class in a simple variable

=item SYNOPSIS

=item DESCRIPTION

=over

=item Tying Scalars

TIESCALAR classname, LIST, FETCH this, STORE this, value, DESTROY this

=item Tying Arrays

TIEARRAY classname, LIST, FETCH this, index, STORE this, index, value,
DESTROY this

=item Tying Hashes

USER, HOME, CLOBBER, LIST, TIEHASH classname, LIST, FETCH this, key, STORE
this, key, value, DELETE this, key, CLEAR this, EXISTS this, key, FIRSTKEY
this, NEXTKEY this, lastkey, DESTROY this

=item Tying FileHandles

TIEHANDLE classname, LIST, WRITE this, LIST, PRINT this, LIST, PRINTF this,
LIST, READ this, LIST, READLINE this, GETC this, CLOSE this, DESTROY this

=item The C<untie> Gotcha

=back

=item SEE ALSO

=item BUGS

=item AUTHOR

=head2 perlbot - Bag'o Object Tricks (the BOT)

=item DESCRIPTION

=item OO SCALING TIPS

=item INSTANCE VARIABLES

=item SCALAR INSTANCE VARIABLES

=item INSTANCE VARIABLE INHERITANCE

=item OBJECT RELATIONSHIPS

=item OVERRIDING SUPERCLASS METHODS

=item USING RELATIONSHIP WITH SDBM

=item THINKING OF CODE REUSE

=item CLASS CONTEXT AND THE OBJECT

=item INHERITING A CONSTRUCTOR

=item DELEGATION

=head2 perlipc - Perl interprocess communication (signals, fifos, pipes,
safe subprocesses, sockets, and semaphores)

=item DESCRIPTION

=item Signals

=item Named Pipes

=over

=item WARNING

=back

=item Using open() for IPC

=over

=item Filehandles

=item Background Processes

=item Complete Dissociation of Child from Parent

=item Safe Pipe Opens

=item Bidirectional Communication with Another Process

=item Bidirectional Communication with Yourself

=back

=item Sockets: Client/Server Communication

=over

=item Internet Line Terminators

=item Internet TCP Clients and Servers

=item Unix-Domain TCP Clients and Servers

=back

=item TCP Clients with IO::Socket

=over

=item A Simple Client

C<Proto>, C<PeerAddr>, C<PeerPort>

=item A Webget Client

=item Interactive Client with IO::Socket

=back

=item TCP Servers with IO::Socket

Proto, LocalPort, Listen, Reuse

=item UDP: Message Passing

=item SysV IPC

=item NOTES

=item BUGS

=item AUTHOR

=item SEE ALSO

=head2 perldebug - Perl debugging

=item DESCRIPTION

=item The Perl Debugger

=over

=item Debugger Commands

h [command], p expr, x expr, V [pkg [vars]], X [vars], T, s [expr], n
[expr], E<lt>CRE<gt>, c [line|sub], l, l min+incr, l min-max, l line, l
subname, -, w [line], f filename, /pattern/, ?pattern?, L, S [[!]pattern],
t, t expr, b [line] [condition], b subname [condition], b postpone subname
[condition], b load filename, b compile subname, d [line], D, a [line]
command, A, W [expr], W, O [opt[=val]] [opt"val"] [opt?]..,
C<recallCommand>, C<ShellBang>, C<pager>, C<tkRunning>, C<signalLevel>,
C<warnLevel>, C<dieLevel>, C<AutoTrace>, C<LineInfo>, C<inhibit_exit>,
C<PrintRet>, C<ornaments>, C<frame>, C<maxTraceLen>, C<arrayDepth>,
C<hashDepth>, C<compactDump>, C<veryCompact>, C<globPrint>, C<DumpDBFiles>,
C<DumpPackages>, C<DumpReused>, C<quote>, C<HighBit>, C<undefPrint>,
C<UsageOnly>, C<TTY>, C<noTTY>, C<ReadLine>, C<NonStop>, E<lt> [ command ],
E<lt>E<lt> command, E<gt> command, E<gt>E<gt> command, { [ command ], {{
command, ! number, ! -number, ! pattern, !! cmd, H -number, q or ^D, R,
|dbcmd, ||dbcmd, command, m expr, m package

=item Debugger input/output

Prompt, Multiline commands, Stack backtrace, Listing, Frame listing

=item Debugging compile-time statements

=item Debugger Customization

=item Readline Support

=item Editor Support for Debugging

=item The Perl Profiler

=item Debugger support in perl

=item Debugger Internals

=item Other resources

=item BUGS

=back

=item Debugging Perl memory usage

=over

=item Using C<$ENV{PERL_DEBUG_MSTATS}>

C<buckets SMALLEST(APPROX)..GREATEST(APPROX)>, Free/Used, C<Total sbrk():
SBRKed/SBRKs:CONTINUOUS>, C<pad: 0>, C<heads: 2192>, C<chain: 0>, C<tail:
6144>

=item Example of using B<-DL> switch

C<717>, C<002>, C<054>, C<602>, C<702>, C<704>

=item B<-DL> details

C<!!!>, C<!!>, C<!>

=item Limitations of B<-DL> statistic

=back

=item Debugging regular expressions

=over

=item Compile-time output

C<anchored> I<STRING> C<at> I<POS>, C<floating> I<STRING> C<at>
I<POS1..POS2>, C<matching floating/anchored>, C<minlen>, C<stclass>
I<TYPE>, C<noscan>, C<isall>, C<GPOS>, C<plus>, C<implicit>, C<with eval>,
C<anchored(TYPE)>

=item Types of nodes

=item Run-time output

=back

=head2 perldiag - various Perl diagnostics

=item DESCRIPTION

=head2 perlsec - Perl security

=item DESCRIPTION

=over

=item Laundering and Detecting Tainted Data

=item Switches On the "#!" Line

=item Cleaning Up Your Path

=item Security Bugs

=item Protecting Your Programs

=back

=item SEE ALSO

=head2 perltrap - Perl traps for the unwary

=item DESCRIPTION

=over

=item Awk Traps

=item C Traps

=item Sed Traps

=item Shell Traps

=item Perl Traps

=item Perl4 to Perl5 Traps

Discontinuance, Deprecation, and BugFix traps, Parsing Traps, Numerical
Traps, General data type traps, Context Traps - scalar, list contexts,
Precedence Traps, General Regular Expression Traps using s///, etc,
Subroutine, Signal, Sorting Traps, OS Traps, DBM Traps, Unclassified Traps

=item Discontinuance, Deprecation, and BugFix traps

Discontinuance, Deprecation, BugFix, Discontinuance, Discontinuance,
Discontinuance, BugFix, Discontinuance, Discontinuance, BugFix,
Discontinuance, Discontinuance, Deprecation, Discontinuance

=item Parsing Traps

Parsing, Parsing, Parsing, Parsing

=item Numerical Traps

Numerical, Numerical, Numerical

=item General data type traps

(Arrays), (Arrays), (Hashes), (Globs), (Globs), (Scalar String),
(Constants), (Scalars), (Variable Suicide)

=item Context Traps - scalar, list contexts

(list context), (scalar context), (scalar context), (list, builtin)

=item Precedence Traps

Precedence, Precedence, Precedence, Precedence, Precedence, Precedence,
Precedence

=item General Regular Expression Traps using s///, etc.

Regular Expression, Regular Expression, Regular Expression, Regular
Expression, Regular Expression, Regular Expression, Regular Expression,
Regular Expression

=item Subroutine, Signal, Sorting Traps

(Signals), (Sort Subroutine), warn() won't let you specify a filehandle

=item OS Traps

(SysV), (SysV)

=item Interpolation Traps

Interpolation, Interpolation, Interpolation, Interpolation, Interpolation,
Interpolation, Interpolation, Interpolation, Interpolation

=item DBM Traps

DBM, DBM

=item Unclassified Traps

C<require>/C<do> trap using returned value, C<split> on empty string with
LIMIT specified

=back

=head2 perlport - Writing portable Perl

=item DESCRIPTION

Not all Perl programs have to be portable, The vast majority of Perl B<is>
portable

=item ISSUES

=over

=item Newlines

=item File Paths

=item System Interaction

=item Interprocess Communication (IPC)

=item External Subroutines (XS)

=item Standard Modules

=item Time and Date

=item System Resources

=item Security

=item Style

=back

=item CPAN TESTERS

Mailing list: cpan-testers@@perl.org, Testing results:
C<http://www.connect.net/gbarr/cpan-test/>

=item PLATFORMS

=over

=item Unix

=item DOS and Derivatives

The djgpp environment for DOS, C<http://www.delorie.com/djgpp/>, The EMX
environment for DOS, OS/2, etc.
C<emx@@iaehv.nl>,C<http://www.leo.org/pub/comp/os/os2/leo/gnu/emx+gcc/index.html>,
C<ftp://hobbes.nmsu.edu/pub/os2/dev/emx>.  Build instructions
for Win32, L<perlwin32>, The ActiveState Pages,
C<http://www.activestate.com/>

=item MacPerl

The MacPerl Pages, C<http://www.ptf.com/macperl/>, The MacPerl mailing
list, C<mac-perl-request@@iis.ee.ethz.ch>

=item VMS

L<perlvms.pod>, vmsperl list, C<vmsperl-request@@newman.upenn.edu>, vmsperl
on the web, C<http://www.sidhe.org/vmsperl/index.html>

=item EBCDIC Platforms

perl-mvs list, AS/400 Perl information at C<http://as400.rochester.ibm.com>

=item Other perls

Atari, Guido Flohr's page C<http://stud.uni-sb.de/~gufl0000/>, HP 300
MPE/iX  C<http://www.cccd.edu/~markb/perlix.html>, Novell Netware

=back

=item FUNCTION IMPLEMENTATIONS

=over

=item Alphabetical Listing of Perl Functions

-I<X> FILEHANDLE, -I<X> EXPR, -I<X>, binmode FILEHANDLE, chmod LIST, chown
LIST, chroot FILENAME, chroot, crypt PLAINTEXT,SALT, dbmclose HASH, dbmopen
HASH,DBNAME,MODE, dump LABEL, exec LIST, fcntl FILEHANDLE,FUNCTION,SCALAR,
flock FILEHANDLE,OPERATION, fork, getlogin, getpgrp PID, getppid,
getpriority WHICH,WHO, getpwnam NAME, getgrnam NAME, getnetbyname NAME,
getpwuid UID, getgrgid GID, getnetbyaddr ADDR,ADDRTYPE, getprotobynumber
NUMBER, getservbyport PORT,PROTO, getpwent, getgrent, gethostent,
getnetent, getprotoent, getservent, setpwent, setgrent, sethostent
STAYOPEN, setnetent STAYOPEN, setprotoent STAYOPEN, setservent STAYOPEN,
endpwent, endgrent, endhostent, endnetent, endprotoent, endservent,
getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob, ioctl
FILEHANDLE,FUNCTION,SCALAR, kill LIST, link OLDFILE,NEWFILE, lstat
FILEHANDLE, lstat EXPR, lstat, msgctl ID,CMD,ARG, msgget KEY,FLAGS, msgsnd
ID,MSG,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, open FILEHANDLE,EXPR, open
FILEHANDLE, pipe READHANDLE,WRITEHANDLE, readlink EXPR, readlink, select
RBITS,WBITS,EBITS,TIMEOUT, semctl ID,SEMNUM,CMD,ARG, semget
KEY,NSEMS,FLAGS, semop KEY,OPSTRING, setpgrp PID,PGRP, setpriority
WHICH,WHO,PRIORITY, setsockopt SOCKET,LEVEL,OPTNAME,OPTVAL, shmctl
ID,CMD,ARG, shmget KEY,SIZE,FLAGS, shmread ID,VAR,POS,SIZE, shmwrite
ID,STRING,POS,SIZE, socketpair SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, stat
FILEHANDLE, stat EXPR, stat, symlink OLDFILE,NEWFILE, syscall LIST, system
LIST, times, truncate FILEHANDLE,LENGTH, truncate EXPR,LENGTH, umask EXPR,
umask, utime LIST, wait, waitpid PID,FLAGS

=back

=item AUTHORS / CONTRIBUTORS

=item VERSION

=head2 perlstyle - Perl style guide

=item DESCRIPTION

=head2 perlpod - plain old documentation

=item DESCRIPTION

=over

=item Verbatim Paragraph

=item Command Paragraph

=item Ordinary Block of Text

=item The Intent

=item Embedding Pods in Perl Modules

=item Common Pod Pitfalls

=back

=item SEE ALSO

=item AUTHOR

=head2 perlbook - Perl book information

=item DESCRIPTION

=head2 perlembed - how to embed perl in your C program

=item DESCRIPTION

=over

=item PREAMBLE

B<Use C from Perl?>, B<Use a Unix program from Perl?>, B<Use Perl from
Perl?>, B<Use C from C?>, B<Use Perl from C?>

=item ROADMAP

=item Compiling your C program

=item Adding a Perl interpreter to your C program

=item Calling a Perl subroutine from your C program

=item Evaluating a Perl statement from your C program

=item Performing Perl pattern matches and substitutions from your C program

=item Fiddling with the Perl stack from your C program

=item Maintaining a persistent interpreter

=item Maintaining multiple interpreter instances

=item Using Perl modules, which themselves use C libraries, from your C
program

=back

=item Embedding Perl under Win32

=item MORAL

=item AUTHOR

=item COPYRIGHT

=head2 perlapio - perl's IO abstraction interface.

=item SYNOPSIS

=item DESCRIPTION

B<PerlIO *>, B<PerlIO_stdin()>, B<PerlIO_stdout()>, B<PerlIO_stderr()>,
B<PerlIO_open(path, mode)>, B<PerlIO_fdopen(fd,mode)>,
B<PerlIO_printf(f,fmt,...)>, B<PerlIO_vprintf(f,fmt,a)>,
B<PerlIO_stdoutf(fmt,...)>, B<PerlIO_read(f,buf,count)>,
B<PerlIO_write(f,buf,count)>, B<PerlIO_close(f)>, B<PerlIO_puts(f,s)>,
B<PerlIO_putc(f,c)>, B<PerlIO_ungetc(f,c)>, B<PerlIO_getc(f)>,
B<PerlIO_eof(f)>, B<PerlIO_error(f)>, B<PerlIO_fileno(f)>,
B<PerlIO_clearerr(f)>, B<PerlIO_flush(f)>, B<PerlIO_tell(f)>,
B<PerlIO_seek(f,o,w)>, B<PerlIO_getpos(f,p)>, B<PerlIO_setpos(f,p)>,
B<PerlIO_rewind(f)>, B<PerlIO_tmpfile()>

=over

=item Co-existence with stdio

B<PerlIO_importFILE(f,flags)>, B<PerlIO_exportFILE(f,flags)>,
B<PerlIO_findFILE(f)>, B<PerlIO_releaseFILE(p,f)>, B<PerlIO_setlinebuf(f)>,
B<PerlIO_has_cntptr(f)>, B<PerlIO_get_ptr(f)>, B<PerlIO_get_cnt(f)>,
B<PerlIO_canset_cnt(f)>, B<PerlIO_fast_gets(f)>,
B<PerlIO_set_ptrcnt(f,p,c)>, B<PerlIO_set_cnt(f,c)>, B<PerlIO_has_base(f)>,
B<PerlIO_get_base(f)>, B<PerlIO_get_bufsiz(f)>

=back

=head2 perlxs - XS language reference manual

=item DESCRIPTION

=over

=item Introduction

=item On The Road

=item The Anatomy of an XSUB

=item The Argument Stack

=item The RETVAL Variable

=item The MODULE Keyword

=item The PACKAGE Keyword

=item The PREFIX Keyword

=item The OUTPUT: Keyword

=item The CODE: Keyword

=item The INIT: Keyword

=item The NO_INIT Keyword

=item Initializing Function Parameters

=item Default Parameter Values

=item The PREINIT: Keyword

=item The SCOPE: Keyword

=item The INPUT: Keyword

=item Variable-length Parameter Lists

=item The C_ARGS: Keyword

=item The PPCODE: Keyword

=item Returning Undef And Empty Lists

=item The REQUIRE: Keyword

=item The CLEANUP: Keyword

=item The BOOT: Keyword

=item The VERSIONCHECK: Keyword

=item The PROTOTYPES: Keyword

=item The PROTOTYPE: Keyword

=item The ALIAS: Keyword

=item The INTERFACE: Keyword

=item The INTERFACE_MACRO: Keyword

=item The INCLUDE: Keyword

=item The CASE: Keyword

=item The & Unary Operator

=item Inserting Comments and C Preprocessor Directives

=item Using XS With C++

=item Interface Strategy

=item Perl Objects And C Structures

=item The Typemap

=back

=item EXAMPLES

=item XS VERSION
a809 1
=head2 perlxstut, perlXStut - Tutorial for XSUBs
a810 1
=item DESCRIPTION
a811 1
=over
a812 1
=item VERSION CAVEAT
d814 1
a814 45
=item DYNAMIC VERSUS STATIC

=item EXAMPLE 1

=item EXAMPLE 2

=item WHAT HAS GONE ON?

=item WRITING GOOD TEST SCRIPTS

=item EXAMPLE 3

=item WHAT'S NEW HERE?

=item INPUT AND OUTPUT PARAMETERS

=item THE XSUBPP COMPILER

=item THE TYPEMAP FILE

=item WARNING

=item EXAMPLE 4

=item WHAT HAS HAPPENED HERE?

=item SPECIFYING ARGUMENTS TO XSUBPP

=item THE ARGUMENT STACK

=item EXTENDING YOUR EXTENSION

=item DOCUMENTING YOUR EXTENSION

=item INSTALLING YOUR EXTENSION

=item SEE ALSO

=item Author

=item Last Changed

=back

=head2 perlguts - Perl's Internal Functions
a817 1
=item Variables
d819 1
a819 1
=over
a820 1
=item Datatypes
d822 1
a822 1
=item What is an "IV"?
a823 1
=item Working with SVs
d825 1
a825 1
=item What's Really Stored in an SV?
a826 1
=item Working with AVs
d828 1
a828 1
=item Working with HVs
a829 1
=item Hash API Extensions
d831 1
a831 1
=item References
a832 1
=item Blessed References and Class Objects
d834 1
a834 1
=item Creating New Variables
a835 1
=item Reference Counts and Mortality
d837 1
a837 54
=item Stashes and Globs

=item Double-Typed SVs

=item Magic Variables

=item Assigning Magic

=item Magic Virtual Tables

=item Finding Magic

=item Understanding the Magic of Tied Hashes and Arrays

=item Localizing changes

C<SAVEINT(int i)>, C<SAVEIV(IV i)>, C<SAVEI32(I32 i)>, C<SAVELONG(long i)>,
C<SAVESPTR(s)>, C<SAVEPPTR(p)>, C<SAVEFREESV(SV *sv)>, C<SAVEFREEOP(OP
*op)>, C<SAVEFREEPV(p)>, C<SAVECLEARSV(SV *sv)>, C<SAVEDELETE(HV *hv, char
*key, I32 length)>, C<SAVEDESTRUCTOR(f,p)>, C<SAVESTACK_POS()>, C<SV*
save_scalar(GV *gv)>, C<AV* save_ary(GV *gv)>, C<HV* save_hash(GV *gv)>,
C<void save_item(SV *item)>, C<void save_list(SV **sarg, I32 maxsarg)>,
C<SV* save_svref(SV **sptr)>, C<void save_aptr(AV **aptr)>, C<void
save_hptr(HV **hptr)>

=back

=item Subroutines

=over

=item XSUBs and the Argument Stack

=item Calling Perl Routines from within C Programs

=item Memory Allocation

=item PerlIO

=item Putting a C value on Perl stack

=item Scratchpads

=item Scratchpads and recursion

=back

=item Compiled code

=over

=item Code tree

=item Examining the tree
a838 195
=item Compile pass 1: check routines

=item Compile pass 1a: constant folding

=item Compile pass 2: context propagation

=item Compile pass 3: peephole optimization

=back

=item API LISTING

av_clear, av_extend, av_fetch, AvFILL, av_len, av_make, av_pop, av_push,
av_shift, av_store, av_undef, av_unshift, CLASS, Copy, croak, CvSTASH,
PL_DBsingle, PL_DBsub, PL_DBtrace, dMARK, dORIGMARK, PL_dowarn, dSP,
dXSARGS, dXSI32, do_binmode, ENTER, EXTEND, fbm_compile, fbm_instr,
FREETMPS, G_ARRAY, G_DISCARD, G_EVAL, GIMME, GIMME_V, G_NOARGS, G_SCALAR,
gv_fetchmeth, gv_fetchmethod, gv_fetchmethod_autoload, G_VOID, gv_stashpv,
gv_stashsv, GvSV, HEf_SVKEY, HeHASH, HeKEY, HeKLEN, HePV, HeSVKEY,
HeSVKEY_force, HeSVKEY_set, HeVAL, hv_clear, hv_delayfree_ent, hv_delete,
hv_delete_ent, hv_exists, hv_exists_ent, hv_fetch, hv_fetch_ent,
hv_free_ent, hv_iterinit, hv_iterkey, hv_iterkeysv, hv_iternext,
hv_iternextsv, hv_iterval, hv_magic, HvNAME, hv_store, hv_store_ent,
hv_undef, isALNUM, isALPHA, isDIGIT, isLOWER, isSPACE, isUPPER, items, ix,
LEAVE, looks_like_number, MARK, mg_clear, mg_copy, mg_find, mg_free,
mg_get, mg_len, mg_magical, mg_set, Move, PL_na, New, newAV, Newc,
newCONSTSUB, newHV, newRV_inc, newRV_noinc, NEWSV, newSViv, newSVnv,
newSVpv, newSVpvf, newSVpvn, newSVrv, newSVsv, newXS, newXSproto, Newz,
Nullav, Nullch, Nullcv, Nullhv, Nullsv, ORIGMARK, perl_alloc,
perl_call_argv, perl_call_method, perl_call_pv, perl_call_sv,
perl_construct, perl_destruct, perl_eval_sv, perl_eval_pv, perl_free,
perl_get_av, perl_get_cv, perl_get_hv, perl_get_sv, perl_parse,
perl_require_pv, perl_run, POPi, POPl, POPp, POPn, POPs, PUSHMARK, PUSHi,
PUSHn, PUSHp, PUSHs, PUSHu, PUTBACK, Renew, Renewc, RETVAL, safefree,
safemalloc, saferealloc, savepv, savepvn, SAVETMPS, SP, SPAGAIN, ST, strEQ,
strGE, strGT, strLE, strLT, strNE, strnEQ, strnNE, sv_2mortal, sv_bless,
sv_catpv, sv_catpv_mg, sv_catpvn, sv_catpvn_mg, sv_catpvf, sv_catpvf_mg,
sv_catsv, sv_catsv_mg, sv_chop, sv_cmp, SvCUR, SvCUR_set, sv_dec,
sv_derived_from, sv_derived_from, SvEND, sv_eq, SvGETMAGIC, SvGROW,
sv_grow, sv_inc, sv_insert, SvIOK, SvIOK_off, SvIOK_on, SvIOK_only, SvIOKp,
sv_isa, sv_isobject, SvIV, SvIVX, SvLEN, sv_len, sv_magic, sv_mortalcopy,
sv_newmortal, SvNIOK, SvNIOK_off, SvNIOKp, PL_sv_no, SvNOK, SvNOK_off,
SvNOK_on, SvNOK_only, SvNOKp, SvNV, SvNVX, SvOK, SvOOK, SvPOK, SvPOK_off,
SvPOK_on, SvPOK_only, SvPOKp, SvPV, SvPV_force, SvPVX, SvREFCNT,
SvREFCNT_dec, SvREFCNT_inc, SvROK, SvROK_off, SvROK_on, SvRV, SvSETMAGIC,
sv_setiv, sv_setiv_mg, sv_setnv, sv_setnv_mg, sv_setpv, sv_setpv_mg,
sv_setpviv, sv_setpviv_mg, sv_setpvn, sv_setpvn_mg, sv_setpvf,
sv_setpvf_mg, sv_setref_iv, sv_setref_nv, sv_setref_pv, sv_setref_pvn,
SvSetSV, SvSetSV_nosteal, sv_setsv, sv_setsv_mg, sv_setuv, sv_setuv_mg,
SvSTASH, SvTAINT, SvTAINTED, SvTAINTED_off, SvTAINTED_on, SVt_IV, SVt_PV,
SVt_PVAV, SVt_PVCV, SVt_PVHV, SVt_PVMG, SVt_NV, SvTRUE, SvTYPE, svtype,
PL_sv_undef, sv_unref, SvUPGRADE, sv_upgrade, sv_usepvn, sv_usepvn_mg,
sv_vcatpvfn(sv, pat, patlen, args, svargs, svmax, used_locale),
sv_vsetpvfn(sv, pat, patlen, args, svargs, svmax, used_locale), SvUV,
SvUVX, PL_sv_yes, THIS, toLOWER, toUPPER, warn, XPUSHi, XPUSHn, XPUSHp,
XPUSHs, XPUSHu, XS, XSRETURN, XSRETURN_EMPTY, XSRETURN_IV, XSRETURN_NO,
XSRETURN_NV, XSRETURN_PV, XSRETURN_UNDEF, XSRETURN_YES, XST_mIV, XST_mNV,
XST_mNO, XST_mPV, XST_mUNDEF, XST_mYES, XS_VERSION, XS_VERSION_BOOTCHECK,
Zero

=item AUTHORS

=head2 perlcall - Perl calling conventions from C

=item DESCRIPTION

An Error Handler, An Event Driven Program

=item THE PERL_CALL FUNCTIONS

B<perl_call_sv>, B<perl_call_pv>, B<perl_call_method>, B<perl_call_argv>

=item FLAG VALUES

=over

=item  G_VOID

=item  G_SCALAR

=item G_ARRAY

=item G_DISCARD

=item G_NOARGS

=item G_EVAL

=item G_KEEPERR

=item Determining the Context

=back

=item KNOWN PROBLEMS

=item EXAMPLES

=over

=item No Parameters, Nothing returned

=item Passing Parameters

=item Returning a Scalar

=item Returning a list of values

=item Returning a list in a scalar context

=item Returning Data from Perl via the parameter list

=item Using G_EVAL

=item Using G_KEEPERR

=item Using perl_call_sv

=item Using perl_call_argv

=item Using perl_call_method

=item Using GIMME_V

=item Using Perl to dispose of temporaries

=item Strategies for storing Callback Context Information

1. Ignore the problem - Allow only 1 callback, 2. Create a sequence of
callbacks - hard wired limit, 3. Use a parameter to map to the Perl
callback

=item Alternate Stack Manipulation

=item Creating and calling an anonymous subroutine in C

=back

=item SEE ALSO

=item AUTHOR

=item DATE

=head2 perlhist - the Perl history records

=item DESCRIPTION

=item INTRODUCTION

=item THE KEEPERS OF THE PUMPKIN

=over

=item PUMPKIN?

=back

=item THE RECORDS

=over

=item SELECTED RELEASE SIZES

=item SELECTED PATCH SIZES

=back

=item THE KEEPERS OF THE RECORDS

=head1 PRAGMA DOCUMENTATION

=head2 attrs - set/get attributes of a subroutine

=item SYNOPSIS

=item DESCRIPTION

method, locked

=head2 re - Perl pragma to alter regular expression behaviour

=item SYNOPSIS

=item DESCRIPTION

=head2 autouse - postpone load of modules until a function is used

=item SYNOPSIS

=item DESCRIPTION

=item WARNING

=item AUTHOR
d840 1
a840 1
=item SEE ALSO
a841 1
=head2 base - Establish IS-A relationship with base class at compile time
d843 1
a843 1
=item SYNOPSIS
a844 1
=item DESCRIPTION
d846 1
a846 1
=item SEE ALSO
a847 1
=head2 blib - Use MakeMaker's uninstalled version of a package
d849 1
a849 1
=item SYNOPSIS
a850 1
=item DESCRIPTION
a851 1
=item BUGS
a852 1
=item AUTHOR
a853 1
=head2 constant - Perl pragma to declare constants
d855 1
a855 1
=item SYNOPSIS
a858 1
=item NOTES
d860 1
a860 1
=item TECHNICAL NOTE
d862 1
a862 1
=item BUGS
a863 1
=item AUTHOR
d865 5
a869 1
=item COPYRIGHT
d871 1
a871 2
=head2 diagnostics - Perl compiler pragma to force verbose warning
diagnostics
a872 1
=item SYNOPSIS
d874 1
a874 1
=item DESCRIPTION
a875 1
=over
a876 1
=item The C<diagnostics> Pragma
a877 1
=item The I<splain> Program
d881 1
a881 1
=item EXAMPLES
a882 1
=item INTERNALS
a883 1
=item BUGS
a884 1
=item AUTHOR
a885 1
=head2 fields - compile-time class fields
d887 1
a887 1
=item SYNOPSIS
a890 1
=item SEE ALSO
a891 2
=head2 integer - Perl pragma to compute arithmetic in integer instead of
double
d893 3
a895 1
=item SYNOPSIS
a898 1
=head2 less - perl pragma to request less of something from the compiler
d900 1
a900 1
=item SYNOPSIS
d902 1
a902 1
=item DESCRIPTION
a903 1
=head2 lib - manipulate @@INC at compile time
a904 1
=item SYNOPSIS
a905 1
=item DESCRIPTION
d907 1
a907 1
=over
d909 1
a909 1
=item ADDING DIRECTORIES TO @@INC
a910 1
=item DELETING DIRECTORIES FROM @@INC
d912 1
a912 1
=item RESTORING ORIGINAL @@INC
d914 1
a914 1
=back
a915 1
=item SEE ALSO
d917 1
a917 1
=item AUTHOR
a918 2
=head2 locale - Perl pragma to use and avoid POSIX locales for built-in
operations
a919 1
=item SYNOPSIS
a920 1
=item DESCRIPTION
d922 1
a922 1
=head2 overload - Package for overloading perl operations
d924 1
a924 1
=item SYNOPSIS
a925 1
=item CAVEAT SCRIPTOR
a926 1
=item DESCRIPTION
a927 1
=over
a928 1
=item Declaration of overloaded functions
d930 2
a931 1
=item Calling Conventions for Binary Operations
d933 1
a933 1
FALSE, TRUE, C<undef>
a934 1
=item Calling Conventions for Unary Operations
d936 1
a936 1
=item Overloadable Operations
a937 3
I<Arithmetic operations>, I<Comparison operations>, I<Bit operations>,
I<Increment and decrement>, I<Transcendental functions>, I<Boolean, string
and numeric conversion>, I<Special>
d939 1
a939 1
=item Inheritance and overloading
a940 2
Strings as values of C<use overload> directive, Overloading of an operation
is inherited by derived classes
d942 1
a942 1
=back
a943 1
=item SPECIAL SYMBOLS FOR C<use overload>
d947 2
a948 1
=item Last Resort
d950 1
a950 1
=item Fallback 
a951 1
C<undef>, TRUE, defined, but FALSE
a952 1
=item Copy Constructor
a953 1
B<Example>
d957 2
a958 1
=item MAGIC AUTOGENERATION
d960 1
a960 3
I<Assignment forms of arithmetic operations>, I<Conversion operations>,
I<Increment and decrement>, C<abs($a)>, I<Unary minus>, I<Negation>,
I<Concatenation>, I<Comparison operations>, I<Copy operator>
d962 1
a962 1
=item WARNING
a963 1
=item Run-time Overloading
d965 1
a965 1
=item Public functions
a966 1
overload::StrVal(arg), overload::Overloaded(arg), overload::Method(obj,op)
d968 1
a968 1
=item Overloading constants
a969 1
integer, float, binary, q, qr
a970 1
=item IMPLEMENTATION
a971 1
=item AUTHOR
d973 1
a973 1
=item DIAGNOSTICS
d975 1
a975 1
=item BUGS
a976 1
=head2 sigtrap - Perl pragma to enable simple signal handling
d978 1
a978 1
=item SYNOPSIS
a979 1
=item DESCRIPTION
d981 1
a981 1
=item OPTIONS
a982 1
=over
d984 1
a984 1
=item SIGNAL HANDLERS
a985 1
B<stack-trace>, B<die>, B<handler> I<your-handler>
d987 1
a987 1
=item SIGNAL LISTS
a988 1
B<normal-signals>, B<error-signals>, B<old-interface-signals>
d990 1
a990 1
=item OTHER
a991 1
B<untrapped>, B<any>, I<signal>, I<number>
a992 1
=back
a993 1
=item EXAMPLES
a994 1
=head2 strict - Perl pragma to restrict unsafe constructs
d996 1
a996 1
=item SYNOPSIS
a999 1
C<strict refs>, C<strict vars>, C<strict subs>
a1000 1
=head2 subs - Perl pragma to predeclare sub names
a1001 1
=item SYNOPSIS
a1002 1
=item DESCRIPTION
d1004 1
a1004 3
=head2 vars - Perl pragma to predeclare global variable names

=item SYNOPSIS
a1007 1
=head1 MODULE DOCUMENTATION
d1009 1
a1009 1
=head2 AnyDBM_File - provide framework for multiple DBMs
d1011 1
a1011 1
=item SYNOPSIS
a1012 1
=item DESCRIPTION
d1014 1
a1014 1
=over
a1015 1
=item DBM Comparisons
d1017 1
a1017 1
[0], [1], [2], [3]
a1018 1
=back
d1020 1
a1020 1
=item SEE ALSO
a1021 1
=head2 AutoLoader - load subroutines only on demand
d1023 1
a1023 5
=item SYNOPSIS

=item DESCRIPTION

=over
a1024 1
=item Subroutine Stubs
d1026 1
a1026 1
=item Using B<AutoLoader>'s AUTOLOAD Subroutine
a1027 1
=item Overriding B<AutoLoader>'s AUTOLOAD Subroutine
a1028 1
=item Package Lexicals
a1029 1
=item B<AutoLoader> vs. B<SelfLoader>
a1032 1
=item CAVEATS
a1033 1
=item SEE ALSO
a1034 1
=head2 AutoSplit - split a package for autoloading
d1036 1
a1036 1
=item SYNOPSIS
a1039 1
$keep, $check, $modtime
a1040 1
=over
a1041 1
=item Multiple packages
a1042 1
=back
d1044 1
a1044 1
=item DIAGNOSTICS
d1046 1
a1046 1
=head2 B - The Perl Compiler
a1047 1
=item SYNOPSIS
d1049 1
a1049 1
=item DESCRIPTION
d1051 1
a1051 1
=item OVERVIEW OF CLASSES
a1052 1
=over
d1054 1
a1054 1
=item SV-RELATED CLASSES
a1055 1
=item B::SV METHODS
d1057 1
a1057 1
REFCNT, FLAGS
a1058 1
=item B::IV METHODS
d1060 1
a1060 1
IV, IVX, needs64bits, packiv
a1061 1
=item B::NV METHODS
d1063 1
a1063 1
NV, NVX
a1064 1
=item B::RV METHODS
d1066 1
a1066 1
RV
a1067 1
=item B::PV METHODS
d1069 1
a1069 1
PV
a1070 1
=item B::PVMG METHODS
d1072 1
a1072 1
MAGIC, SvSTASH
a1073 1
=item B::MAGIC METHODS
d1075 1
a1075 1
MOREMAGIC, PRIVATE, TYPE, FLAGS, OBJ, PTR
a1076 1
=item B::PVLV METHODS
d1078 1
a1078 1
TARGOFF, TARGLEN, TYPE, TARG
a1079 1
=item B::BM METHODS
d1081 1
a1081 1
USEFUL, PREVIOUS, RARE, TABLE
a1082 1
=item B::GV METHODS
d1084 1
a1084 2
NAME, STASH, SV, IO, FORM, AV, HV, EGV, CV, CVGEN, LINE, FILEGV, GvREFCNT,
FLAGS
a1085 1
=item B::IO METHODS
d1087 1
a1087 2
LINES, PAGE, PAGE_LEN, LINES_LEFT, TOP_NAME, TOP_GV, FMT_NAME, FMT_GV,
BOTTOM_NAME, BOTTOM_GV, SUBPROCESS, IoTYPE, IoFLAGS
a1088 1
=item B::AV METHODS
d1090 1
a1090 1
FILL, MAX, OFF, ARRAY, AvFLAGS
a1091 1
=item B::CV METHODS
d1093 1
a1093 1
STASH, START, ROOT, GV, FILEGV, DEPTH, PADLIST, OUTSIDE, XSUB, XSUBANY
a1094 1
=item B::HV METHODS
d1096 1
a1096 1
FILL, MAX, KEYS, RITER, NAME, PMROOT, ARRAY
a1097 1
=item OP-RELATED CLASSES
d1099 1
a1099 1
=item B::OP METHODS
a1100 1
next, sibling, ppaddr, desc, targ, type, seq, flags, private
d1102 1
a1102 1
=item B::UNOP METHOD
a1103 1
first
d1105 1
a1105 1
=item B::BINOP METHOD
a1106 1
last
d1108 1
a1108 1
=item B::LOGOP METHOD
a1109 1
other
d1111 1
a1111 1
=item B::CONDOP METHODS
a1112 1
true, false
d1114 1
a1114 1
=item B::LISTOP METHOD
a1115 1
children
d1117 1
a1117 1
=item B::PMOP METHODS
a1118 1
pmreplroot, pmreplstart, pmnext, pmregexp, pmflags, pmpermflags, precomp
d1120 1
a1120 1
=item B::SVOP METHOD
a1121 1
sv
d1123 1
a1123 1
=item B::GVOP METHOD
a1124 1
gv
d1126 1
a1126 1
=item B::PVOP METHOD
a1127 1
pv
d1129 1
a1129 1
=item B::LOOP METHODS
a1130 1
redoop, nextop, lastop
d1132 1
a1132 1
=item B::COP METHODS
a1133 1
label, stash, filegv, cop_seq, arybase, line
d1135 1
a1135 1
=back
a1136 1
=item FUNCTIONS EXPORTED BY C<B>
d1138 1
a1138 4
main_cv, main_root, main_start, comppadlist, sv_undef, sv_yes, sv_no,
walkoptree(OP, METHOD), walkoptree_debug(DEBUG), walksymtable(SYMREF,
METHOD, RECURSE), svref_2object(SV), ppname(OPNUM), hash(STR), cast_I32(I),
minus_c, cstring(STR), class(OBJ), threadsv_names, byteload_fh(FILEHANDLE)
a1139 1
=item AUTHOR
d1141 1
a1141 2
=head2 B::Asmdata - Autogenerated data about Perl ops, used to generate
bytecode
a1142 1
=item SYNOPSIS
d1144 1
a1144 1
=item DESCRIPTION
a1145 1
=item AUTHOR
d1147 1
a1147 1
=head2 B::Assembler - Assemble Perl bytecode
a1148 1
=item SYNOPSIS
d1150 1
a1150 1
=item DESCRIPTION
a1151 1
=item AUTHOR
a1152 1
=head2 B::Bblock - Walk basic blocks
a1153 1
=item SYNOPSIS
d1155 1
a1155 1
=item DESCRIPTION
d1157 1
a1157 1
=item AUTHOR
a1158 1
=head2 B::Bytecode - Perl compiler's bytecode backend
d1160 1
a1160 1
=item SYNOPSIS
a1161 1
=item DESCRIPTION
d1163 1
a1163 1
=item OPTIONS
a1164 3
B<-ofilename>, B<-->, B<-f>, B<-fcompress-nullops>,
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-fstrip-syntax-tree>,
B<-On>, B<-D>, B<-Do>, B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-m>
a1165 1
=item BUGS
a1166 1
=item AUTHOR
a1167 1
=head2 B::C - Perl compiler's C backend
d1169 1
a1169 1
=item SYNOPSIS
a1172 1
=item OPTIONS
d1174 3
a1176 2
B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-D>, B<-Do>, B<-Dc>, B<-DA>,
B<-DC>, B<-DM>, B<-f>, B<-fcog>, B<-fno-cog>, B<-On>
a1177 1
=item EXAMPLES
d1179 1
a1179 1
=item BUGS
a1180 1
=item AUTHOR
d1182 1
a1182 1
=head2 B::CC - Perl compiler's optimized C translation backend
a1183 1
=item SYNOPSIS
d1185 1
a1185 1
=item DESCRIPTION
a1186 1
=item OPTIONS
d1188 1
a1188 3
B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-mModulename>, B<-D>, B<-Dr>,
B<-DO>, B<-Ds>, B<-Dp>, B<-Dq>, B<-Dl>, B<-Dt>, B<-f>,
B<-ffreetmps-each-bblock>, B<-ffreetmps-each-loop>, B<-fomit-taint>, B<-On>
a1189 1
=item EXAMPLES
d1191 1
a1191 1
=item BUGS
a1192 1
=item DIFFERENCES
d1194 1
a1194 1
=over
a1195 1
=item Loops
d1197 1
a1197 1
=item Context of ".."
a1198 1
=item Arithmetic
d1200 1
a1200 1
=item Deprecated features
a1201 1
=back
d1203 1
a1203 1
=item AUTHOR
a1204 1
=head2 B::Debug - Walk Perl syntax tree, printing debug info about ops
d1206 1
a1206 1
=item SYNOPSIS
a1207 1
=item DESCRIPTION
d1209 1
a1209 1
=item AUTHOR
a1210 1
=head2 B::Deparse - Perl compiler backend to produce perl code
d1212 1
a1212 1
=item SYNOPSIS
a1213 1
=item DESCRIPTION
d1215 1
a1215 1
=item OPTIONS
a1216 1
B<-p>, B<-u>I<PACKAGE>, B<-l>, B<-s>I<LETTERS>, B<C>
d1218 1
a1218 1
=item BUGS
a1219 1
=item AUTHOR
d1221 1
a1221 1
=head2 B::Disassembler - Disassemble Perl bytecode
a1222 1
=item SYNOPSIS
d1224 1
a1224 1
=item DESCRIPTION
a1225 1
=item AUTHOR
d1227 1
a1227 1
=head2 B::Lint - Perl lint
a1228 1
=item SYNOPSIS
d1230 1
a1230 1
=item DESCRIPTION
a1231 1
=item OPTIONS AND LINT CHECKS
a1232 2
B<context>, B<implicit-read> and B<implicit-write>, B<dollar-underscore>,
B<private-names>, B<undefined-subs>, B<regexp-variables>, B<all>, B<none>
a1233 1
=item NON LINT-CHECK OPTIONS
d1235 1
a1235 1
B<-u Package>
a1236 1
=item BUGS
a1237 1
=item AUTHOR
a1238 1
=head2 B::O, O - Generic interface to Perl Compiler backends
d1240 1
a1240 1
=item SYNOPSIS
a1243 1
=item CONVENTIONS
d1245 4
a1248 1
=item IMPLEMENTATION
d1250 1
a1250 1
=item AUTHOR
a1251 1
=head2 B::Showlex - Show lexical variables used in functions or files
d1253 1
a1253 1
=item SYNOPSIS
a1254 1
=item DESCRIPTION
d1256 1
a1256 1
=item AUTHOR
a1257 1
=head2 B::Stackobj - Helper module for CC backend
d1259 1
a1259 1
=item SYNOPSIS
a1260 1
=item DESCRIPTION
d1262 1
a1262 1
=item AUTHOR
a1263 1
=head2 B::Terse - Walk Perl syntax tree, printing terse info about ops
d1265 1
a1265 1
=item SYNOPSIS
a1266 1
=item DESCRIPTION
d1268 1
a1268 1
=item AUTHOR
a1269 1
=head2 B::Xref - Generates cross reference reports for Perl programs
a1270 1
=item SYNOPSIS
a1271 1
=item DESCRIPTION
d1273 1
a1273 1
=item OPTIONS
d1275 1
a1275 1
C<-oFILENAME>, C<-r>, C<-D[tO]>
a1276 1
=item BUGS
d1278 1
a1278 1
=item AUTHOR
a1279 1
=head2 Benchmark - benchmark running times of code
d1281 1
a1281 1
=item SYNOPSIS
a1282 1
=item DESCRIPTION
d1284 1
a1284 1
=over
a1285 1
=item Methods
d1287 1
a1287 1
new, debug
a1288 1
=item Standard Exports
d1290 1
a1290 3
timeit(COUNT, CODE), timethis ( COUNT, CODE, [ TITLE, [ STYLE ]] ),
timethese ( COUNT, CODEHASHREF, [ STYLE ] ), timediff ( T1, T2 ), timestr (
TIMEDIFF, [ STYLE, [ FORMAT ] ] )
d1292 1
a1292 1
=item Optional Exports
a1293 1
clearcache ( COUNT ), clearallcache ( ), disablecache ( ), enablecache ( )
d1295 1
a1295 1
=back
a1296 1
=item NOTES
d1298 1
a1298 1
=item INHERITANCE
a1299 1
=item CAVEATS
a1300 1
=item AUTHORS
a1301 1
=item MODIFICATION HISTORY
d1303 1
a1303 1
=head2 CGI - Simple Common Gateway Interface Class
d1305 1
a1305 1
=item SYNOPSIS
a1306 1
=item ABSTRACT
d1308 1
a1308 1
=item DESCRIPTION
a1309 1
=over
d1311 1
a1311 1
=item PROGRAMMING STYLE
a1312 1
=item CALLING CGI.PM ROUTINES
d1314 1
a1314 3
1. Use another name for the argument, if one is available.  Forexample,
-value is an alias for -values, 2. Change the capitalization, e.g. -Values,
3. Put quotes around the argument name, e.g. '-values'
a1315 1
=item CREATING A NEW QUERY OBJECT (OBJECT-ORIENTED STYLE):
d1317 16
a1332 1
=item CREATING A NEW QUERY OBJECT FROM AN INPUT FILE
d1334 1
a1334 1
=item FETCHING A LIST OF KEYWORDS FROM THE QUERY:
a1335 1
=item FETCHING THE NAMES OF ALL THE PARAMETERS PASSED TO YOUR SCRIPT:
d1337 1
a1337 1
=item FETCHING THE VALUE OR VALUES OF A SINGLE NAMED PARAMETER:
a1338 1
=item SETTING THE VALUE(S) OF A NAMED PARAMETER:
a1339 1
=item APPENDING ADDITIONAL VALUES TO A NAMED PARAMETER:
a1340 1
=item IMPORTING ALL PARAMETERS INTO A NAMESPACE:
a1341 1
=item DELETING A PARAMETER COMPLETELY:
d1343 1
a1343 1
=item DELETING ALL PARAMETERS:
d1345 1
a1345 1
=item DIRECT ACCESS TO THE PARAMETER LIST:
a1346 1
=item SAVING THE STATE OF THE SCRIPT TO A FILE:
d1348 1
a1348 1
=item USING THE FUNCTION-ORIENTED INTERFACE
d1350 1
a1350 2
B<:cgi>, B<:form>, B<:html2>, B<:html3>, B<:netscape>, B<:html>,
B<:standard>, B<:all>
a1351 1
=item PRAGMAS
d1353 2
a1354 1
-any, -compile, -nph, -autoload, -no_debug, -private_tempfiles
d1356 1
a1356 1
=back
a1357 1
=item GENERATING DYNAMIC DOCUMENTS
d1361 2
a1362 1
=item CREATING A STANDARD HTTP HEADER:
d1364 1
a1364 1
=item GENERATING A REDIRECTION HEADER
a1365 1
=item CREATING THE HTML DOCUMENT HEADER
d1367 1
a1367 1
B<Parameters:>, 4, 5, 6..
a1368 1
=item ENDING THE HTML DOCUMENT:
d1370 1
a1370 1
=item CREATING A SELF-REFERENCING URL THAT PRESERVES STATE INFORMATION:
a1371 1
=item OBTAINING THE SCRIPT'S URL
d1373 1
a1373 2
B<-absolute>, B<-relative>, B<-full>, B<-path> (B<-path_info>), B<-query>
(B<-query_string>)
a1374 1
=back
d1376 1
a1376 1
=item CREATING STANDARD HTML ELEMENTS:
a1377 1
=over
d1379 1
a1379 1
=item PROVIDING ARGUMENTS TO HTML SHORTCUTS
a1380 1
=item THE DISTRIBUTIVE PROPERTY OF HTML SHORTCUTS
a1381 1
=item HTML SHORTCUTS AND LIST INTERPOLATION
a1382 1
=item NON-STANDARD HTML SHORTCUTS
d1386 1
a1386 1
=item CREATING FILL-OUT FORMS:
a1387 1
=over
d1389 1
a1389 1
=item CREATING AN ISINDEX TAG
a1390 1
=item STARTING AND ENDING A FORM
d1392 1
a1392 1
B<application/x-www-form-urlencoded>, B<multipart/form-data>
d1394 1
a1394 1
=item CREATING A TEXT FIELD
a1395 1
B<Parameters>
d1397 1
a1397 1
=item CREATING A BIG TEXT FIELD
a1398 1
=item CREATING A PASSWORD FIELD
d1400 1
a1400 1
=item CREATING A FILE UPLOAD FIELD
a1401 1
B<Parameters>
d1403 1
a1403 1
=item CREATING A POPUP MENU
a1404 1
=item CREATING A SCROLLING LIST
d1406 1
a1406 1
B<Parameters:>
a1407 1
=item CREATING A GROUP OF RELATED CHECKBOXES
d1409 1
a1409 1
B<Parameters:>
a1410 1
=item CREATING A STANDALONE CHECKBOX
d1412 1
a1412 1
B<Parameters:>
a1413 1
=item CREATING A RADIO BUTTON GROUP
d1415 1
a1415 1
B<Parameters:>
a1416 1
=item CREATING A SUBMIT BUTTON 
d1418 1
a1418 1
B<Parameters:>
a1419 1
=item CREATING A RESET BUTTON
d1421 1
a1421 1
=item CREATING A DEFAULT BUTTON
a1422 1
=item CREATING A HIDDEN FIELD
d1424 1
a1424 1
B<Parameters:>
a1425 1
=item CREATING A CLICKABLE IMAGE BUTTON
d1427 1
a1427 3
B<Parameters:>, 3.The third option (-align, optional) is an alignment type,
and may be
TOP, BOTTOM or MIDDLE
a1428 1
=item CREATING A JAVASCRIPT ACTION BUTTON
d1430 1
a1430 1
=back
a1431 1
=item NETSCAPE COOKIES
d1433 1
a1433 2
1. an expiration time, 2. a domain, 3. a path, 4. a "secure" flag,
B<-name>, B<-value>, B<-path>, B<-domain>, B<-expires>, B<-secure>
a1434 1
=item WORKING WITH NETSCAPE FRAMES
d1436 3
a1438 3
1. Create a <Frameset> document, 2. Specify the destination for the
document in the HTTP header, 3. Specify the destination for the document in
the <FORM> tag
d1440 1
a1440 1
=item LIMITED SUPPORT FOR CASCADING STYLE SHEETS
a1441 1
=item DEBUGGING
a1442 1
=over
a1443 1
=item DUMPING OUT ALL THE NAME/VALUE PAIRS
d1447 2
a1448 1
=item FETCHING ENVIRONMENT VARIABLES
d1450 1
a1450 6
B<accept()>, B<raw_cookie()>, B<user_agent()>, B<path_info()>,
B<path_translated()>, B<remote_host()>, B<script_name()>Return the script
name as a partial URL, for self-refering
scripts, B<referer()>, B<auth_type ()>, B<server_name ()>, B<virtual_host
()>, B<server_software ()>, B<remote_user ()>, B<user_name ()>,
B<request_method()>
a1451 1
=item USING NPH SCRIPTS
d1453 1
a1453 2
In the B<use> statement, By calling the B<nph()> method:, By using B<-nph>
parameters in the B<header()> and B<redirect()>  statements:
a1454 1
=item Server Push
a1455 2
multipart_init()     
multipart_init(-boundary=>$boundary);, multipart_start(), multipart_end()
a1456 1
=item Avoiding Denial of Service Attacks
a1457 2
B<$CGI::POST_MAX>, B<$CGI::DISABLE_UPLOADS>, B<1. On a script-by-script
basis>, B<2. Globally for all scripts>
d1459 1
a1459 1
=item COMPATIBILITY WITH CGI-LIB.PL
d1461 1
a1461 1
=item AUTHOR INFORMATION
a1462 1
=item CREDITS
d1464 1
a1464 12
Matt Heffron (heffron@@falstaff.css.beckman.com), James Taylor
(james.taylor@@srs.gov), Scott Anguish <sanguish@@digifix.com>, Mike Jewell
(mlj3u@@virginia.edu), Timothy Shimmin (tes@@kbs.citri.edu.au), Joergen Haegg
(jh@@axis.se), Laurent Delfosse (delfosse@@csgrad1.cs.wvu.edu), Richard
Resnick (applepi1@@aol.com), Craig Bishop (csb@@barwonwater.vic.gov.au), Tony
Curtis (tc@@vcpc.univie.ac.at), Tim Bunce (Tim.Bunce@@ig.co.uk), Tom
Christiansen (tchrist@@convex.com), Andreas Koenig
(k@@franz.ww.TU-Berlin.DE), Tim MacKenzie (Tim.MacKenzie@@fulcrum.com.au),
Kevin B. Hendricks (kbhend@@dogwood.tyler.wm.edu), Stephen Dahmen
(joyfire@@inxpress.net), Ed Jordan (ed@@fidalgo.net), David Alan Pisoni
(david@@cnation.com), Doug MacEachern (dougm@@opengroup.org), Robin Houston
(robin@@oneworld.org), ...and many many more..
d1466 1
a1466 1
=item A COMPLETE EXAMPLE OF A SIMPLE FORM-BASED SCRIPT
a1467 1
=item BUGS
d1469 2
a1470 1
=item SEE ALSO
d1472 1
a1472 1
=head2 CGI::Apache - Make things work with CGI.pm against Perl-Apache API
a1473 1
=item SYNOPSIS
d1475 1
a1475 1
=item DESCRIPTION
a1476 1
=item NOTE 1
d1478 1
a1478 1
=item NOTE 2
a1479 1
=item SEE ALSO
d1481 1
a1481 1
=item AUTHOR
a1482 2
=head2 CGI::Carp, B<CGI::Carp> - CGI routines for writing to the HTTPD (or
other) error log
d1484 1
a1484 1
=item SYNOPSIS
a1485 1
=item DESCRIPTION
d1487 2
a1488 1
=item REDIRECTING ERROR MESSAGES
a1489 1
=item MAKING PERL ERRORS APPEAR IN THE BROWSER WINDOW
a1490 1
=over
a1491 1
=item Changing the default message
d1495 1
a1495 1
=item CHANGE LOG
a1496 1
=item AUTHORS
d1498 1
a1498 1
=item SEE ALSO
a1499 1
=head2 CGI::Cookie - Interface to Netscape Cookies
a1500 1
=item SYNOPSIS
a1501 1
=item DESCRIPTION
a1502 1
=item USING CGI::Cookie
d1504 1
a1504 1
B<1. expiration date>, B<2. domain>, B<3. path>, B<4. secure flag>
d1506 1
a1506 1
=over
a1507 1
=item Creating New Cookies
d1509 1
a1509 1
=item Sending the Cookie to the Browser
a1510 1
=item Recovering Previous Cookies
d1512 1
a1512 1
=item Manipulating Cookies
a1513 1
B<name()>, B<value()>, B<domain()>, B<path()>, B<expires()>
d1515 1
a1515 1
=back
a1516 1
=item AUTHOR INFORMATION
a1517 1
=item BUGS
a1518 1
=item SEE ALSO
a1519 1
=head2 CGI::Fast - CGI Interface for Fast CGI
d1521 1
a1521 1
=item SYNOPSIS
a1524 1
=item OTHER PIECES OF THE PUZZLE
a1525 1
=item WRITING FASTCGI PERL SCRIPTS
a1526 1
=item INSTALLING FASTCGI SCRIPTS
a1527 1
=item USING FASTCGI SCRIPTS AS CGI SCRIPTS
d1529 1
a1529 1
=item CAVEATS
a1530 1
=item AUTHOR INFORMATION
a1531 1
=item BUGS
a1532 1
=item SEE ALSO
d1534 2
a1535 1
=head2 CGI::Push - Simple Interface to Server Push
d1539 1
a1541 1
=item USING CGI::Push
d1543 6
a1548 1
-next_page, -last_page, -type, -delay, -cookie, -target, -expires
a1549 1
=over
a1550 1
=item Heterogeneous Pages
a1551 1
=item Changing the Page Delay on the Fly
d1555 2
a1556 1
=item INSTALLING CGI::Push SCRIPTS
d1558 1
a1558 1
=item CAVEATS
a1559 1
=item AUTHOR INFORMATION
a1562 1
=item SEE ALSO
d1564 1
a1564 2
=head2 CGI::Switch - Try more than one constructors and return the first
object available
a1565 1
=item SYNOPSIS
a1566 1
=item DESCRIPTION
a1567 1
=item SEE ALSO
a1568 1
=item AUTHOR
d1570 2
a1571 1
=head2 CPAN - query, download and build perl modules from CPAN sites
d1575 1
a1577 1
=over
a1578 1
=item Interactive Mode
a1579 3
Searching for authors, bundles, distribution files and modules, make, test,
install, clean	modules or distributions, readme, look module or
distribution, Signals
a1580 1
=item CPAN::Shell
d1582 4
a1585 1
=item autobundle
a1586 1
=item recompile
d1588 1
a1588 1
=item The four C<CPAN::*> Classes: Author, Bundle, Module, Distribution
a1589 1
=item ProgrammerE<39>s interface
a1590 1
expand($type,@@things), Programming Examples
a1591 1
=item Methods in the four
a1592 1
=item Cache Manager
d1594 1
a1594 1
=item Bundles
d1596 1
a1596 1
=item Prerequisites
a1597 1
=item Finding packages and VERSION
d1599 1
a1599 1
=item Debugging
a1600 1
=item Floppy, Zip, and all that Jazz
d1602 1
a1602 1
=back
d1604 1
a1604 1
=item CONFIGURATION
a1605 4
o conf E<lt>scalar optionE<gt>, o conf E<lt>scalar optionE<gt>
E<lt>valueE<gt>, o conf E<lt>list optionE<gt>, o conf E<lt>list optionE<gt>
[shift|pop], o conf E<lt>list optionE<gt> [unshift|push|splice]
E<lt>listE<gt>
d1607 1
a1607 1
=over
a1608 1
=item CD-ROM support
d1610 1
a1610 1
=back
a1611 1
=item SECURITY
a1612 1
=item EXPORT
a1613 1
=item BUGS
d1615 1
a1615 1
=item AUTHOR
a1618 1
=head2 CPAN::FirstTime - Utility for CPAN::Config file Initialization
d1620 1
a1620 3
=item SYNOPSIS

=item DESCRIPTION
a1621 2
=head2 CPANox, CPAN::Nox - Wrapper around CPAN.pm without using any XS
module
a1622 1
=item SYNOPSIS
a1623 1
=item DESCRIPTION
a1624 1
=item  SEE ALSO
d1626 1
a1626 1
=head2 Carp, carp    - warn of errors (from perspective of caller)
a1629 1
=item DESCRIPTION
d1631 1
a1631 1
=over
a1632 1
=item Forcing a Stack Trace
d1634 1
a1634 1
=back
a1635 1
=head2 Class::Struct - declare struct-like datatypes as Perl classes
d1637 1
a1637 1
=item SYNOPSIS
d1639 1
a1639 1
=item DESCRIPTION
a1640 1
=over
d1642 1
a1642 1
=item The C<struct()> function
a1643 1
=item Element Types and Accessor Methods
d1645 1
a1645 2
Scalar (C<'$'> or C<'*$'>), Array (C<'@@'> or C<'*@@'>), Hash (C<'%'> or
C<'*%'>), Class (C<'Class_Name'> or C<'*Class_Name'>)
d1647 1
a1647 1
=back
a1648 1
=item EXAMPLES
d1650 1
a1650 1
Example 1, Example 2
a1651 1
=item Author and Modification History
d1653 3
a1655 1
=head2 Cwd, getcwd - get pathname of current working directory
a1656 1
=item SYNOPSIS
a1657 1
=item DESCRIPTION
d1659 1
a1659 1
=head2 DB_File - Perl5 access to Berkeley DB version 1.x
d1661 1
a1661 1
=item SYNOPSIS
a1662 1
=item DESCRIPTION
d1664 1
a1664 1
B<DB_HASH>, B<DB_BTREE>, B<DB_RECNO>
d1666 1
a1666 1
=over
a1667 1
=item Using DB_File with Berkeley DB version 2
d1669 1
a1669 1
=item Interface to Berkeley DB
a1670 1
=item Opening a Berkeley DB Database File
d1672 1
a1672 1
=item Default Parameters
d1674 1
a1674 1
=item In Memory Databases
a1675 1
=back
d1677 1
a1677 1
=item DB_HASH
a1678 1
=over
a1679 1
=item A Simple Example
d1683 1
a1683 1
=item DB_BTREE
a1684 1
=over
d1686 3
a1688 1
=item Changing the BTREE sort order
d1690 1
a1690 1
=item Handling Duplicate Keys 
a1691 1
=item The get_dup() Method
d1693 1
a1693 1
=item Matching Partial Keys 
a1694 1
=back
d1696 1
a1696 1
=item DB_RECNO
a1697 1
=over
d1699 2
a1700 1
=item The 'bval' Option
d1702 1
a1702 1
=item A Simple Example
a1703 1
=item Extra Methods
d1705 1
a1705 2
B<$X-E<gt>push(list) ;>, B<$value = $X-E<gt>pop ;>, B<$X-E<gt>shift>,
B<$X-E<gt>unshift(list) ;>, B<$X-E<gt>length>
a1706 1
=item Another Example
d1708 1
a1708 1
=back
a1709 1
=item THE API INTERFACE
d1711 1
a1711 4
B<$status = $X-E<gt>get($key, $value [, $flags]) ;>, B<$status =
$X-E<gt>put($key, $value [, $flags]) ;>, B<$status = $X-E<gt>del($key [,
$flags]) ;>, B<$status = $X-E<gt>fd ;>, B<$status = $X-E<gt>seq($key,
$value, $flags) ;>, B<$status = $X-E<gt>sync([$flags]) ;>
a1712 1
=item HINTS AND TIPS 
a1713 1
=over
a1714 1
=item Locking Databases
a1715 1
=item Sharing Databases With C Applications
d1717 2
a1718 1
=item The untie() Gotcha
d1720 1
a1720 1
=back
a1721 1
=item COMMON QUESTIONS
d1723 1
a1723 1
=over
a1724 1
=item Why is there Perl source in my database?
a1725 1
=item How do I store complex data structures with DB_File?
a1726 1
=item What does "Invalid Argument" mean?
a1727 1
=item What does "Bareword 'DB_File' not allowed" mean? 
d1729 1
a1729 1
=back
d1731 1
a1731 1
=item HISTORY
a1732 1
=item BUGS
d1734 1
a1734 1
=item AVAILABILITY
a1735 1
=item COPYRIGHT
d1737 1
a1737 1
=item SEE ALSO
a1738 1
=item AUTHOR
a1739 2
=head2 Data::Dumper - stringified perl data structures, suitable for both
printing and C<eval>
a1740 1
=item SYNOPSIS
d1742 1
a1742 1
=item DESCRIPTION
d1744 1
a1744 3
=over

=item Methods
a1745 23
I<PACKAGE>->new(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Dump  I<or>
I<PACKAGE>->Dump(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Dumpxs	I<or>
I<PACKAGE>->Dumpxs(I<ARRAYREF [>, I<ARRAYREF]>),
I<$OBJ>->Seen(I<[HASHREF]>), I<$OBJ>->Values(I<[ARRAYREF]>),
I<$OBJ>->Names(I<[ARRAYREF]>), I<$OBJ>->Reset

=item Functions

Dumper(I<LIST>), DumperX(I<LIST>)

=item Configuration Variables or Methods

$Data::Dumper::Indent  I<or>  I<$OBJ>->Indent(I<[NEWVAL]>),
$Data::Dumper::Purity  I<or>  I<$OBJ>->Purity(I<[NEWVAL]>),
$Data::Dumper::Pad  I<or>  I<$OBJ>->Pad(I<[NEWVAL]>),
$Data::Dumper::Varname	I<or>  I<$OBJ>->Varname(I<[NEWVAL]>),
$Data::Dumper::Useqq  I<or>  I<$OBJ>->Useqq(I<[NEWVAL]>),
$Data::Dumper::Terse  I<or>  I<$OBJ>->Terse(I<[NEWVAL]>),
$Data::Dumper::Freezer	I<or>  $I<OBJ>->Freezer(I<[NEWVAL]>),
$Data::Dumper::Toaster	I<or>  $I<OBJ>->Toaster(I<[NEWVAL]>),
$Data::Dumper::Deepcopy  I<or>	$I<OBJ>->Deepcopy(I<[NEWVAL]>),
$Data::Dumper::Quotekeys  I<or>  $I<OBJ>->Quotekeys(I<[NEWVAL]>),
$Data::Dumper::Bless  I<or>  $I<OBJ>->Bless(I<[NEWVAL]>)
d1747 1
a1747 1
=item Exports
a1748 1
Dumper
a1749 1
=back
a1750 1
=item EXAMPLES
a1751 1
=item BUGS
d1753 1
a1753 1
=item AUTHOR
d1755 1
a1755 1
=item VERSION
a1756 1
=item SEE ALSO
d1758 1
a1758 1
=head2 Devel::SelfStubber - generate stubs for a SelfLoading module
a1759 1
=item SYNOPSIS
a1760 1
=item DESCRIPTION
a1761 1
=head2 DirHandle - supply object methods for directory handles
a1762 1
=item SYNOPSIS
d1764 1
a1764 1
=item DESCRIPTION
a1765 2
=head2 English - use nice English (or awk) names for ugly punctuation
variables
a1766 1
=item SYNOPSIS
a1767 1
=item DESCRIPTION
d1769 1
a1769 1
=head2 Env - perl module that imports environment variables
d1773 1
a1775 1
=item AUTHOR
d1777 3
a1779 1
=head2 Exporter - Implements default import method for modules
a1780 1
=item SYNOPSIS
d1782 1
a1782 1
=item DESCRIPTION
a1783 1
=over
a1784 1
=item Selecting What To Export
d1786 1
a1786 1
=item Specialised Import Lists
d1788 1
a1788 1
=item Exporting without using Export's import method
a1789 1
=item Module Version Checking
a1790 1
=item Managing Unknown Symbols
a1791 1
=item Tag Handling Utility Functions
a1792 1
=back
d1794 1
a1794 2
=head2 ExtUtils::Command - utilities to replace common UNIX commands in
Makefiles etc.
d1798 1
a1800 3
cat, eqtime src dst, rm_f files..., rm_f files..., touch files .., mv
source... destination, cp source... destination, chmod mode files.., mkpath
directory.., test_f file
a1801 1
=item BUGS
a1802 1
=item SEE ALSO 
a1803 1
=item AUTHOR
d1805 1
a1805 1
=head2 ExtUtils::Embed - Utilities for embedding Perl in C/C++ applications
d1809 1
a1811 1
=item @@EXPORT
a1812 1
=item FUNCTIONS
a1813 2
xsinit(), Examples, ldopts(), Examples, perl_inc(), ccflags(), ccdlflags(),
ccopts(), xsi_header(), xsi_protos(@@modules), xsi_body(@@modules)
a1814 1
=item EXAMPLES
d1816 1
a1816 1
=item SEE ALSO
d1818 1
a1818 3
=item AUTHOR

=head2 ExtUtils::Install - install files from here to there
a1819 1
=item SYNOPSIS
a1822 1
=head2 ExtUtils::Installed - Inventory management of installed modules
d1824 1
a1824 1
=item SYNOPSIS
d1826 1
a1826 1
=item DESCRIPTION
a1827 1
=item USAGE
d1829 1
a1829 1
=item FUNCTIONS
d1831 1
a1831 2
new(), modules(), files(), directories(), directory_tree(), validate(),
packlist(), version()
a1832 1
=item EXAMPLE
d1834 1
a1834 1
=item AUTHOR
d1836 1
a1836 1
=head2 ExtUtils::Liblist - determine libraries to use and how to use them
a1837 1
=item SYNOPSIS
a1838 1
=item DESCRIPTION
a1839 1
For static extensions, For dynamic extensions, For dynamic extensions
d1841 1
a1841 1
=over
d1843 1
a1843 1
=item EXTRALIBS
a1844 1
=item LDLOADLIBS and LD_RUN_PATH
d1846 1
a1846 1
=item BSLOADLIBS
a1847 1
=back
d1849 1
a1849 1
=item PORTABILITY
a1850 1
=over
d1852 1
a1852 1
=item VMS implementation
a1853 1
=item Win32 implementation
d1855 1
a1855 1
=back
a1856 1
=item SEE ALSO
a1857 2
=head2 ExtUtils::MM_OS2 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
a1858 1
=item SYNOPSIS
a1859 1
=item DESCRIPTION
d1861 1
a1861 1
=head2 ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker
d1865 1
a1867 1
=item METHODS
a1868 1
=over
a1869 1
=item Preloaded methods
a1870 1
canonpath, catdir, catfile, curdir, rootdir, updir
d1872 1
a1872 1
=item SelfLoaded methods
d1874 1
a1874 5
c_o (o), cflags (o), clean (o), const_cccmd (o), const_config (o),
const_loadlibs (o), constants (o), depend (o), dir_target (o), dist (o),
dist_basics (o), dist_ci (o), dist_core (o), dist_dir (o), dist_test (o),
dlsyms (o), dynamic (o), dynamic_bs (o), dynamic_lib (o), exescan,
extliblist, file_name_is_absolute, find_perl
a1875 1
=item Methods to actually produce chunks of text for the Makefile
d1877 1
a1877 11
fixin, force (o), guess_name, has_link_code, init_dirscan, init_main,
init_others, install (o), installbin (o), libscan (o), linkext (o), lsdir,
macro (o), makeaperl (o), makefile (o), manifypods (o), maybe_command,
maybe_command_in_dirs, needs_linking (o), nicetext, parse_version,
parse_abstract, pasthru (o), path, perl_script, perldepend (o), ppd,
perm_rw (o), perm_rwx (o), pm_to_blib, post_constants (o), post_initialize
(o), postamble (o), prefixify, processPL (o), realclean (o),
replace_manpage_separator, static (o), static_lib (o), staticmake (o),
subdir_x (o), subdirs (o), test (o), test_via_harness (o), test_via_script
(o), tool_autosplit (o), tools_other (o), tool_xsubpp (o), top_targets (o),
writedoc, xs_c (o), xs_o (o), perl_archive, export_list
a1878 1
=back
a1879 1
=item SEE ALSO
a1880 2
=head2 ExtUtils::MM_VMS - methods to override UN*X behaviour in
ExtUtils::MakeMaker
a1881 1
=item SYNOPSIS
d1883 1
a1883 1
=item DESCRIPTION
d1885 1
a1885 1
=over
a1886 1
=item Methods always loaded
d1888 1
a1888 2
eliminate_macros, fixpath, catdir, catfile, wraplist, curdir (override),
rootdir (override), updir (override)
a1889 1
=item SelfLoaded methods
d1891 1
a1891 15
guess_name (override), find_perl (override), path (override), maybe_command
(override), maybe_command_in_dirs (override), perl_script (override),
file_name_is_absolute (override), replace_manpage_separator, init_others
(override), constants (override), cflags (override), const_cccmd
(override), pm_to_blib (override), tool_autosplit (override), tool_sxubpp
(override), xsubpp_version (override), tools_other (override), dist
(override), c_o (override), xs_c (override), xs_o (override), top_targets
(override), dlsyms (override), dynamic_lib (override), dynamic_bs
(override), static_lib (override), manifypods (override), processPL
(override), installbin (override), subdir_x (override), clean (override),
realclean (override), dist_basics (override), dist_core (override),
dist_dir (override), dist_test (override), install (override), perldepend
(override), makefile (override), test (override), test_via_harness
(override), test_via_script (override), makeaperl (override), nicetext
(override)
d1893 1
a1893 1
=back
d1895 1
a1895 2
=head2 ExtUtils::MM_Win32 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
a1896 1
=item SYNOPSIS
d1898 1
a1898 1
=item DESCRIPTION
a1899 4
catfile, constants (o), static_lib (o), dynamic_bs (o), dynamic_lib (o),
canonpath, perl_script, pm_to_blib, test_via_harness (o), tool_autosplit
(override), tools_other (o), xs_o (o), top_targets (o), manifypods (o),
dist_ci (o), dist_core (o), pasthru (o)
d1901 1
a1901 1
=head2 ExtUtils::MakeMaker - create an extension Makefile
a1902 1
=item SYNOPSIS
d1904 1
a1904 1
=item DESCRIPTION
a1905 1
=over
d1907 1
a1907 1
=item How To Write A Makefile.PL
a1908 1
=item Default Makefile Behaviour
d1910 1
a1910 1
=item make test
a1911 1
=item make testdb
a1912 1
=item make install
d1914 1
a1914 1
=item PREFIX and LIB attribute
d1916 1
a1916 1
=item AFS users
a1917 1
=item Static Linking of a new Perl Binary
d1919 1
a1919 1
=item Determination of Perl Library and Installation Locations
d1921 1
a1921 1
=item Which architecture dependent directory?
a1922 1
=item Using Attributes and Parameters
d1924 1
a1924 11
C, CCFLAGS, CONFIG, CONFIGURE, DEFINE, DIR, DISTNAME, DL_FUNCS, DL_VARS,
EXCLUDE_EXT, EXE_FILES, NO_VC, FIRST_MAKEFILE, FULLPERL, H, IMPORTS, INC,
INCLUDE_EXT, INSTALLARCHLIB, INSTALLBIN, INSTALLDIRS, INSTALLMAN1DIR,
INSTALLMAN3DIR, INSTALLPRIVLIB, INSTALLSCRIPT, INSTALLSITELIB,
INSTALLSITEARCH, INST_ARCHLIB, INST_BIN, INST_EXE, INST_LIB, INST_MAN1DIR,
INST_MAN3DIR, INST_SCRIPT, LDFROM, LIBPERL_A, LIB, LIBS, LINKTYPE,
MAKEAPERL, MAKEFILE, MAN1PODS, MAN3PODS, MAP_TARGET, MYEXTLIB, NAME,
NEEDS_LINKING, NOECHO, NORECURS, OBJECT, OPTIMIZE, PERL, PERLMAINCC,
PERL_ARCHLIB, PERL_LIB, PERL_SRC, PERM_RW, PERM_RWX, PL_FILES, PM,
PMLIBDIRS, PREFIX, PREREQ_PM, SKIP, TYPEMAPS, VERSION, VERSION_FROM, XS,
XSOPT, XSPROTOARG, XS_VERSION
a1925 1
=item Additional lowercase attributes
d1927 1
a1927 2
clean, depend, dist, dynamic_lib, installpm, linkext, macro, realclean,
tool_autosplit
a1928 1
=item Overriding MakeMaker Methods
d1930 1
a1930 1
=item Hintsfile support
a1931 1
=item Distribution Support
a1932 3
make distcheck,    make skipcheck,    make distclean,	 make manifest,
make distdir,	 make tardist,	  make dist,	make uutardist,    make
shdist,    make zipdist,    make ci
a1933 1
=item Disabling an extension
d1937 1
a1937 3
=item SEE ALSO

=item AUTHORS
a1938 1
=head2 ExtUtils::Manifest - utilities to write and check a MANIFEST file
d1940 1
a1940 1
=item SYNOPSIS
a1941 1
=item DESCRIPTION
d1943 1
a1943 1
=item MANIFEST.SKIP
a1944 1
=item EXPORT_OK
d1946 1
a1946 3
=item GLOBAL VARIABLES

=item DIAGNOSTICS
a1947 2
C<Not in MANIFEST:> I<file>, C<No such file:> I<file>, C<MANIFEST:> I<$!>,
C<Added to MANIFEST:> I<file>
d1951 1
a1953 1
=head2 ExtUtils::Mkbootstrap - make a bootstrap file for use by DynaLoader
a1954 1
=item SYNOPSIS
a1955 1
=item DESCRIPTION
d1957 2
a1958 2
=head2 ExtUtils::Mksymlists - write linker options files for dynamic
extension
d1962 1
a1964 1
NAME, DL_FUNCS, DL_VARS, FILE, FUNCLIST, DLBASE
a1965 1
=item AUTHOR
a1966 1
=item REVISION
d1968 2
a1969 1
=head2 ExtUtils::Packlist - manage .packlist files
d1973 1
a1975 3
=item USAGE

=item FUNCTIONS
a1976 1
new(), read(), write(), validate(), packlist_file()
a1977 1
=item EXAMPLE
a1978 1
=item AUTHOR
d1980 1
a1980 1
=head2 ExtUtils::testlib - add blib/* directories to @@INC
d1984 1
a1986 3
=head2 Fatal - replace functions with equivalents which succeed or die

=item SYNOPSIS
d1988 3
a1990 1
=item DESCRIPTION
a1993 1
=head2 Fcntl - load the C Fcntl.h defines
a1994 1
=item SYNOPSIS
a1995 1
=item DESCRIPTION
a1996 1
=item NOTE
d1998 2
a1999 1
=item EXPORTED SYMBOLS
d2001 1
a2001 1
=head2 File::Basename, fileparse - split a pathname into pieces
a2002 1
=item SYNOPSIS
a2005 1
fileparse_set_fstype, fileparse
a2006 1
=item EXAMPLES
a2007 1
C<basename>, C<dirname>
d2009 2
a2010 1
=head2 File::CheckTree, validate - run many filetest checks on a tree
d2014 1
a2016 1
=head2 File::Compare - Compare files or filehandles
d2018 2
a2019 1
=item SYNOPSIS
a2020 1
=item DESCRIPTION
a2021 1
=item RETURN
a2022 1
=item AUTHOR
d2024 1
a2024 1
=head2 File::Copy - Copy files or filehandles
d2028 1
d2031 1
d2034 4
a2037 1
=item Special behavior if C<syscopy> is defined (VMS and OS/2)
a2038 1
rmscopy($from,$to[,$date_flag])
d2040 2
a2041 1
=back
d2043 1
a2043 1
=item RETURN
a2044 1
=item AUTHOR
d2046 1
a2046 1
=head2 File::DosGlob - DOS like globbing and then some
a2047 1
=item SYNOPSIS
a2048 1
=item DESCRIPTION
a2049 1
=item EXPORTS (by request only)
d2051 1
a2051 1
=item BUGS
a2052 1
=item AUTHOR
a2053 1
=item HISTORY
a2054 1
=item SEE ALSO
d2056 1
a2056 1
=head2 File::Find, find - traverse a file tree
d2060 1
a2062 1
=item BUGS
d2064 5
a2068 1
=head2 File::Path - create or remove a series of directories
d2072 1
a2074 1
=item AUTHORS
d2076 5
a2080 1
=item REVISION
a2081 1
=head2 File::Spec - portably perform operations on file names
d2083 1
a2083 1
=item SYNOPSIS
a2084 1
=item DESCRIPTION
d2086 1
a2086 1
=item SEE ALSO
a2087 1
=item AUTHORS
a2088 1
=head2 File::Spec::Mac - File::Spec for MacOS
a2089 1
=item SYNOPSIS
d2091 1
a2091 1
=item DESCRIPTION
d2093 1
a2093 1
=item METHODS
a2094 2
canonpath, catdir, catfile, curdir, rootdir, updir, file_name_is_absolute,
path
a2097 1
=head2 File::Spec::OS2 - methods for OS/2 file specs
d2099 5
a2103 1
=item SYNOPSIS
d2107 5
a2111 1
=head2 File::Spec::Unix - methods used by File::Spec
d2115 1
d2118 1
a2120 2
canonpath, catdir, catfile, curdir, rootdir, updir, no_upwards,
file_name_is_absolute, path, join, nativename
d2122 1
a2122 1
=item SEE ALSO
d2124 1
a2124 1
=head2 File::Spec::VMS - methods for VMS file specs
a2125 1
=item SYNOPSIS
d2127 3
a2129 1
=item DESCRIPTION
d2131 1
a2131 1
=over
a2132 1
=item Methods always loaded
d2134 1
a2134 2
catdir, catfile, curdir (override), rootdir (override), updir (override),
path (override), file_name_is_absolute (override)
d2136 1
a2136 1
=back
a2137 1
=head2 File::Spec::Win32 - methods for Win32 file specs
d2139 9
a2147 1
=item SYNOPSIS
a2148 1
=item DESCRIPTION
a2149 1
catfile, canonpath
d2151 1
a2151 1
=head2 File::stat - by-name interface to Perl's built-in stat() functions
d2153 1
a2153 1
=item SYNOPSIS
a2154 1
=item DESCRIPTION
a2155 1
=item NOTE
a2156 1
=item AUTHOR
a2157 1
=head2 FileCache - keep more files open than the system permits
d2159 2
a2160 1
=item SYNOPSIS
a2163 3
=item BUGS

=head2 FileHandle - supply object methods for filehandles
a2164 1
=item SYNOPSIS
a2165 1
=item DESCRIPTION
a2166 1
$fh->print, $fh->printf, $fh->getline, $fh->getlines
d2168 1
a2168 1
=item SEE ALSO
d2170 1
a2170 1
=head2 FindBin - Locate directory of original perl script
a2171 1
=item SYNOPSIS
a2174 1
=item EXPORTABLE VARIABLES
d2176 1
a2176 1
=item KNOWN BUGS
d2178 1
a2178 1
=item AUTHORS
a2179 1
=item COPYRIGHT
d2181 1
a2181 1
=item REVISION
a2182 1
=head2 GDBM_File - Perl5 access to the gdbm library.
d2184 1
a2184 1
=item SYNOPSIS
a2185 1
=item DESCRIPTION
d2187 1
a2187 1
=item AVAILABILITY
a2188 1
=item BUGS
d2190 1
a2190 1
=item SEE ALSO
a2191 2
=head2 Getopt::Long, GetOptions - extended processing of command line
options
d2193 1
a2193 1
=item SYNOPSIS
a2194 1
=item DESCRIPTION
d2196 1
a2196 1
!, +, :s, :i, :f
a2197 1
=over
d2199 1
a2199 1
=item Linkage specification
a2200 1
=item Aliases and abbreviations
d2202 1
a2202 1
=item Non-option call-back routine
a2203 1
=item Option starters
d2205 1
a2205 1
=item Return values and Errors
a2206 1
=back
d2208 1
a2208 1
=item COMPATIBILITY
a2209 1
=item EXAMPLES
d2211 1
a2211 1
=item CONFIGURATION OPTIONS
a2212 4
default, auto_abbrev, getopt_compat, require_order, permute, bundling
(default: reset), bundling_override (default: reset), ignore_case
(default: set), ignore_case_always (default: reset), pass_through (default:
reset), prefix, prefix_pattern, debug (default: reset)
d2214 10
a2223 1
=item OTHER USEFUL VARIABLES
d2225 1
a2225 1
$Getopt::Long::VERSION, $Getopt::Long::error
a2226 1
=item AUTHOR
d2228 2
a2229 1
=item COPYRIGHT AND DISCLAIMER
d2231 1
a2231 2
=head2 Getopt::Std, getopt - Process single-character switches with switch
clustering
a2232 1
=item SYNOPSIS
d2234 1
a2234 1
=item DESCRIPTION
a2235 2
=head2 I18N::Collate - compare 8-bit scalar data according to the current
locale
d2237 3
a2239 1
=item SYNOPSIS
a2240 1
=item DESCRIPTION
a2241 1
=head2 IO - load various IO modules
d2243 1
a2243 1
=item SYNOPSIS
d2245 1
a2245 1
=item DESCRIPTION
a2246 1
=head2 IO::lib::IO::File, IO::File - supply object methods for filehandles
d2248 1
a2248 1
=item SYNOPSIS
a2249 1
=item DESCRIPTION
d2251 1
a2251 1
=item CONSTRUCTOR
a2252 3
new ([ ARGS ] ), new_tmpfile

=item METHODS
a2253 1
open( FILENAME [,MODE [,PERMS]] )
a2254 1
=item SEE ALSO
a2255 1
=item HISTORY
d2257 2
a2258 2
=head2 IO::lib::IO::Handle, IO::Handle - supply object methods for I/O
handles
d2262 1
a2264 1
=item CONSTRUCTOR
d2266 1
a2266 1
new (), new_from_fd ( FD, MODE )
a2267 1
=item METHODS
d2269 1
a2269 3
$fh->fdopen ( FD, MODE ), $fh->opened, $fh->getline, $fh->getlines,
$fh->ungetc ( ORD ), $fh->write ( BUF, LEN [, OFFSET }\] ), $fh->flush,
$fh->error, $fh->clearerr, $fh->untaint
a2270 1
=item NOTE
d2272 1
a2272 1
=item SEE ALSO
a2273 1
=item BUGS
d2275 1
a2275 1
=item HISTORY
a2276 1
=head2 IO::lib::IO::Pipe, IO::pipe - supply object methods for pipes
d2278 2
a2279 1
=item SYNOPSIS
d2281 1
a2281 1
=item DESCRIPTION
a2282 1
=item CONSTRCUTOR
d2284 1
a2284 1
new ( [READER, WRITER] )
a2285 1
=item METHODS
a2286 1
reader ([ARGS]), writer ([ARGS]), handles ()
a2287 1
=item SEE ALSO
a2288 1
=item AUTHOR
d2290 2
a2291 1
=item COPYRIGHT
d2293 1
a2293 2
=head2 IO::lib::IO::Seekable, IO::Seekable - supply seek based methods for
I/O objects
a2294 1
=item SYNOPSIS
a2297 1
=item SEE ALSO
a2298 1
=item HISTORY
a2299 2
=head2 IO::lib::IO::Select, IO::Select - OO interface to the select system
call
a2300 1
=item SYNOPSIS
d2302 2
a2303 1
=item DESCRIPTION
d2305 1
a2305 1
=item CONSTRUCTOR
a2306 1
new ( [ HANDLES ] )
d2308 1
a2308 1
=item METHODS
a2309 3
add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_error ( [ TIMEOUT ] ), count
(), bits(), bits(), select ( READ, WRITE, ERROR [, TIMEOUT ] )
d2311 1
a2311 1
=item EXAMPLE
a2314 1
=item COPYRIGHT
d2316 1
a2316 2
=head2 IO::lib::IO::Socket, IO::Socket - Object interface to socket
communications
a2317 1
=item SYNOPSIS
a2318 1
=item DESCRIPTION
a2319 1
=item CONSTRUCTOR
a2320 1
new ( [ARGS] )
d2322 1
a2322 1
=item METHODS
d2324 1
a2324 2
accept([PKG]), timeout([VAL]), sockopt(OPT [, VAL]), sockdomain, socktype,
protocol
a2325 1
=item SUB-CLASSES
d2327 1
a2327 1
=over
a2328 1
=item IO::Socket::INET
d2330 1
a2330 1
=item METHODS
a2331 2
sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()
a2332 1
=item IO::Socket::UNIX
a2333 1
=item METHODS
a2334 1
hostpath(), peerpath()
d2336 1
a2336 1
=back
d2338 1
a2338 1
=item SEE ALSO
a2339 1
=item AUTHOR
d2341 1
a2341 1
=item COPYRIGHT
a2342 1
=head2 IPC::Open2, open2 - open a process for both reading and writing
d2344 1
a2344 1
=item SYNOPSIS
d2346 1
a2346 1
=item DESCRIPTION
a2347 1
=item WARNING 
d2349 1
a2349 4
=item SEE ALSO

=head2 IPC::Open3, open3 - open a process for reading, writing, and error
handling
a2350 1
=item SYNOPSIS
a2351 1
=item DESCRIPTION
a2352 1
=item WARNING
d2354 1
a2354 1
=head2 IPC::SysV - SysV IPC constants
d2358 1
a2360 1
ftok( PATH, ID )
a2361 1
=item SEE ALSO
a2362 1
=item AUTHORS
a2363 1
=item COPYRIGHT
d2365 1
a2365 1
=head2 IPC::SysV::Msg, IPC::Msg - SysV Msg IPC object class
d2369 1
a2371 5
=item METHODS

new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat
a2372 1
=item SEE ALSO
a2373 1
=item AUTHOR
a2374 1
=item COPYRIGHT
d2376 1
a2376 2
=head2 IPC::SysV::Semaphore, IPC::Semaphore - SysV Semaphore IPC object
class
d2380 1
a2382 6
=item METHODS

new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat
d2384 1
a2384 1
=item SEE ALSO
a2385 1
=item AUTHOR
d2387 1
a2387 1
=item COPYRIGHT
a2388 1
=head2 Math::BigFloat - Arbitrary length float math package
a2389 1
=item SYNOPSIS
a2390 1
=item DESCRIPTION
a2391 1
number format, Error returns 'NaN', Division is computed to
d2393 1
a2393 1
=item BUGS
d2395 1
a2395 1
=item AUTHOR
a2396 1
=head2 Math::BigInt - Arbitrary size integer math package
d2398 1
a2398 1
=item SYNOPSIS
a2399 1
=item DESCRIPTION
d2401 1
a2401 1
Canonical notation, Input, Output
a2402 1
=item EXAMPLES
a2403 1
=item Autocreating constants
a2404 1
=item BUGS
a2405 1
=item AUTHOR
d2407 1
a2407 2
=head2 Math::Complex - complex numbers and associated mathematical
functions
d2411 1
a2413 1
=item OPERATIONS
d2415 3
a2417 1
=item CREATION
a2418 1
=item STRINGIFICATION
d2420 1
a2420 1
=item USAGE
a2421 1
=item ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO
a2422 1
=item ERRORS DUE TO INDIGESTIBLE ARGUMENTS
a2423 1
=item BUGS
a2424 1
=item AUTHORS
d2426 1
a2426 1
=head2 Math::Trig - trigonometric functions
d2430 1
a2432 1
=item TRIGONOMETRIC FUNCTIONS
d2434 1
a2434 1
B<tan>
a2435 1
=over
d2437 1
a2437 1
=item ERRORS DUE TO DIVISION BY ZERO
a2438 1
=item SIMPLE (REAL) ARGUMENTS, COMPLEX RESULTS
d2440 1
a2440 1
=back
a2441 1
=item PLANE ANGLE CONVERSIONS
a2442 1
=item RADIAL COORDINATE CONVERSIONS
a2443 1
=over
a2444 1
=item COORDINATE SYSTEMS
d2446 2
a2447 1
=item 3-D ANGLE CONVERSIONS
d2449 1
a2449 2
cartesian_to_cylindrical, cartesian_to_spherical, cylindrical_to_cartesian,
cylindrical_to_spherical, spherical_to_cartesian, spherical_to_cylindrical
a2450 1
=back
d2452 1
a2452 1
=item GREAT CIRCLE DISTANCES
a2453 1
=item EXAMPLES
d2455 1
a2455 1
=item BUGS
d2457 1
a2457 1
=item AUTHORS
d2459 1
a2459 1
=head2 NDBM_File - Tied access to ndbm files
a2460 1
=item SYNOPSIS
d2462 1
a2462 1
=item DESCRIPTION
a2463 1
=head2 Net::Ping - check a remote host for reachability
d2465 1
a2465 1
=item SYNOPSIS
a2466 1
=item DESCRIPTION
d2468 1
a2468 1
=over
a2469 1
=item Functions
d2471 1
a2471 2
Net::Ping->new([$proto [, $def_timeout [, $bytes]]]);, $p->ping($host [,
$timeout]);, $p->close();, pingecho($host [, $timeout]);
a2472 1
=back
a2473 1
=item WARNING
a2474 1
=item NOTES
d2476 1
a2476 2
=head2 Net::hostent - by-name interface to Perl's built-in gethost*()
functions
d2478 1
a2478 1
=item SYNOPSIS
a2479 1
=item DESCRIPTION
a2482 3
=item NOTE

=item AUTHOR
d2484 1
a2484 2
=head2 Net::netent - by-name interface to Perl's built-in getnet*()
functions
a2485 1
=item SYNOPSIS
d2487 3
a2489 1
=item DESCRIPTION
a2490 1
=item EXAMPLES
a2491 1
=item NOTE
a2492 1
=item AUTHOR
d2494 2
a2495 2
=head2 Net::protoent - by-name interface to Perl's built-in getproto*()
functions
d2499 1
a2501 1
=item NOTE
a2502 1
=item AUTHOR
d2504 4
a2507 2
=head2 Net::servent - by-name interface to Perl's built-in getserv*()
functions
d2511 1
a2513 1
=item EXAMPLES
a2514 1
=item NOTE
a2515 1
=item AUTHOR
d2517 2
a2518 1
=head2 ODBM_File - Tied access to odbm files
d2522 1
a2524 1
=head2 Opcode - Disable named opcodes when compiling perl code
d2526 2
a2527 1
=item SYNOPSIS
d2529 1
a2529 1
=item DESCRIPTION
a2530 1
=item NOTE
a2531 1
=item WARNING
a2532 1
=item Operator Names and Operator Lists
a2533 2
an operator name (opname), an operator tag name (optag), a negated opname
or optag, an operator set (opset)
d2535 2
a2536 1
=item Opcode Functions
d2538 1
a2538 4
opcodes, opset (OP, ...), opset_to_ops (OPSET), opset_to_hex (OPSET),
full_opset, empty_opset, invert_opset (OPSET), verify_opset (OPSET, ...),
define_optag (OPTAG, OPSET), opmask_add (OPSET), opmask, opdesc (OP, ...),
opdump (PAT)
a2539 1
=item Manipulating Opsets
d2541 1
a2541 1
=item TO DO (maybe)
a2542 1
=item Predefined Opcode Tags
a2543 4
:base_core, :base_mem, :base_loop, :base_io, :base_orig, :base_math,
:base_thread, :default, :filesys_read, :sys_db, :browse, :filesys_open,
:filesys_write, :subprocess, :ownprocess, :others, :still_to_be_decided,
:dangerous
a2544 1
=item SEE ALSO
a2545 1
=item AUTHORS
d2547 1
a2547 2
=head2 Opcode::Safe, Safe - Compile and execute code in restricted
compartments
d2551 1
a2553 3
a new namespace, an operator mask

=item WARNING
d2557 1
a2557 3
=item RECENT CHANGES

=item Methods in class Safe
a2558 4
permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)
d2560 1
a2560 1
=item Some Safety Issues
a2561 1
Memory, CPU, Snooping, Signals, State Changes
a2562 1
=item AUTHOR
d2566 2
a2567 2
=head2 Opcode::ops, ops - Perl pragma to restrict unsafe operations when
compiling
a2568 1
=item SYNOPSIS  
a2569 1
=item DESCRIPTION
a2570 1
=item SEE ALSO
d2576 1
d2579 1
d2582 3
a2584 1
=item CAVEATS 
d2588 16
a2603 26
_exit, abort, abs, access, acos, alarm, asctime, asin, assert, atan, atan2,
atexit, atof, atoi, atol, bsearch, calloc, ceil, chdir, chmod, chown,
clearerr, clock, close, closedir, cos, cosh, creat, ctermid, ctime,
cuserid, difftime, div, dup, dup2, errno, execl, execle, execlp, execv,
execve, execvp, exit, exp, fabs, fclose, fcntl, fdopen, feof, ferror,
fflush, fgetc, fgetpos, fgets, fileno, floor, fmod, fopen, fork, fpathconf,
fprintf, fputc, fputs, fread, free, freopen, frexp, fscanf, fseek, fsetpos,
fstat, ftell, fwrite, getc, getchar, getcwd, getegid, getenv, geteuid,
getgid, getgrgid, getgrnam, getgroups, getlogin, getpgrp, getpid, getppid,
getpwnam, getpwuid, gets, getuid, gmtime, isalnum, isalpha, isatty,
iscntrl, isdigit, isgraph, islower, isprint, ispunct, isspace, isupper,
isxdigit, kill, labs, ldexp, ldiv, link, localeconv, localtime, log, log10,
longjmp, lseek, malloc, mblen, mbstowcs, mbtowc, memchr, memcmp, memcpy,
memmove, memset, mkdir, mkfifo, mktime, modf, nice, offsetof, open,
opendir, pathconf, pause, perror, pipe, pow, printf, putc, putchar, puts,
qsort, raise, rand, read, readdir, realloc, remove, rename, rewind,
rewinddir, rmdir, scanf, setgid, setjmp, setlocale, setpgid, setsid,
setuid, sigaction, siglongjmp, sigpending, sigprocmask, sigsetjmp,
sigsuspend, sin, sinh, sleep, sprintf, sqrt, srand, sscanf, stat, strcat,
strchr, strcmp, strcoll, strcpy, strcspn, strerror, strftime, strlen,
strncat, strncmp, strncpy, stroul, strpbrk, strrchr, strspn, strstr,
strtod, strtok, strtol, strtoul, strxfrm, sysconf, system, tan, tanh,
tcdrain, tcflow, tcflush, tcgetpgrp, tcsendbreak, tcsetpgrp, time, times,
tmpfile, tmpnam, tolower, toupper, ttyname, tzname, tzset, umask, uname,
ungetc, unlink, utime, vfprintf, vprintf, vsprintf, wait, waitpid,
wcstombs, wctomb, write
d2607 1
d2612 1
d2617 1
d2622 1
d2629 2
d2635 1
d2640 1
d2645 1
d2650 1
d2655 1
d2660 1
d2665 1
d2670 1
d2675 1
d2680 1
d2685 1
d2690 1
d2695 1
d2700 1
d2705 1
d2710 1
d2715 5
a2719 1
=head2 Pod::Html - module to convert pod files to HTML
d2723 1
a2725 1
=item ARGUMENTS
d2727 1
a2727 2
help, htmlroot, infile, outfile, podroot, podpath, libpods, netscape,
nonetscape, index, noindex, recurse, norecurse, title, verbose
a2728 1
=item EXAMPLE
d2730 1
a2730 1
=item AUTHOR
a2731 1
=item BUGS
a2732 1
=item SEE ALSO
a2733 1
=item COPYRIGHT
a2734 1
=head2 Pod::Text - convert POD data to formatted ASCII text
d2736 1
a2736 1
=item SYNOPSIS
d2740 21
a2762 1
=item TODO
a2763 1
=head2 SDBM_File - Tied access to sdbm files
a2764 1
=item SYNOPSIS
d2766 4
a2769 1
=item DESCRIPTION
d2775 1
d2778 4
d2786 1
d2789 4
d2797 1
d2800 1
d2805 1
d2808 1
d2811 1
d2814 1
d2817 1
d2820 3
d2827 6
a2832 1
=head2 Shell - run shell commands transparently within perl
d2836 1
a2838 1
=item AUTHOR
d2840 5
a2844 2
=head2 Socket, sockaddr_in, sockaddr_un, inet_aton, inet_ntoa - load the C
socket.h defines and structure manipulators 
a2845 1
=item SYNOPSIS
a2846 1
=item DESCRIPTION
a2847 5
inet_aton HOSTNAME, inet_ntoa IP_ADDRESS, INADDR_ANY, INADDR_BROADCAST,
INADDR_LOOPBACK, INADDR_NONE, sockaddr_in PORT, ADDRESS, sockaddr_in
SOCKADDR_IN, pack_sockaddr_in PORT, IP_ADDRESS, unpack_sockaddr_in
SOCKADDR_IN, sockaddr_un PATHNAME, sockaddr_un SOCKADDR_UN,
pack_sockaddr_un PATH, unpack_sockaddr_un SOCKADDR_UN
d2853 1
d2856 4
d2864 1
d2867 1
d2870 6
a2875 2
=head2 Syslog, Sys::Syslog, openlog, closelog, setlogmask, syslog - Perl
interface to the UNIX syslog(3) calls
d2879 1
d2882 3
a2884 3
openlog $ident, $logopt, $facility, syslog $priority, $format, @@args,
setlogmask $mask_priority, setlogsock $sock_type (added in 5.004_02),
closelog
d2888 1
d2891 1
d2894 1
d2897 4
d2905 1
d2908 1
d2911 4
d2919 1
d2922 2
a2923 1
E<lt>tabE<gt>, ^D, ^U, E<lt>delE<gt>, E<lt>bsE<gt>
d2927 1
d2930 1
a2932 2
=head2 Term::ReadLine - Perl interface to various C<readline> packages. If
no real package is found, substitutes stubs instead of basic functions.
a2933 1
=item SYNOPSIS
a2934 1
=item DESCRIPTION
a2935 1
=item Minimal set of supported functions
d2937 3
a2939 2
C<ReadLine>, C<new>, C<readline>, C<addhistory>, C<IN>, $C<OUT>,
C<MinLine>, C<findConsole>, Attribs, C<Features>
d2941 1
a2941 1
=item Additional supported functions
a2942 1
C<tkRunning>, C<ornaments>, C<newTTY>
d2944 1
a2944 1
=item EXPORTS
a2945 1
=item ENVIRONMENT
d2947 1
a2947 1
=head2   Test - provides a simple framework for writing test scripts
a2948 1
=item SYNOPSIS
d2950 2
a2951 1
=item DESCRIPTION
d2953 1
a2953 1
=item TEST TYPES
a2954 1
NORMAL TESTS, SKIPPED TESTS, TODO TESTS
a2955 1
=item ONFAIL
a2956 1
=item SEE ALSO
a2957 1
=item AUTHOR
d2963 1
d2966 1
d2971 3
d2978 1
d2981 1
d2983 3
a2985 3
%s\n\tFailed %d/%d tests, %.2f%% okay.>, C<Test returned status %d (wstat
%d)>, C<Failed 1 test, %.2f%% okay. %s>, C<Failed %d/%d tests, %.2f%% okay.
%s>
d2987 1
a2987 1
=item ENVIRONMENT
a2988 1
=item SEE ALSO
d2992 1
a2994 1
=head2 Text::Abbrev, abbrev - create an abbreviation table from a list
a2995 1
=item SYNOPSIS
a2996 1
=item DESCRIPTION
a2997 1
=item EXAMPLE
d2999 1
a2999 2
=head2 Text::ParseWords - parse text into an array of tokens or array of
arrays
d3003 1
a3005 7
=item EXAMPLES

0a simple word, 1multiple spaces are skipped because of our $delim, 2use of
quotes to include a space in a word, 3use of a backslash to include a space
in a word, 4use of a backslash to remove the special meaning of a
double-quote, 5another simple word (note the lack of effect of the
backslashed double-quote)
d3007 1
a3007 4
=item AUTHORS

=head2 Text::Soundex - Implementation of the Soundex Algorithm as Described
by Knuth
a3008 3
=item SYNOPSIS

=item DESCRIPTION
a3009 1
=item EXAMPLES
a3010 1
=item LIMITATIONS
a3011 1
=item AUTHOR
d3013 2
a3014 2
=head2 Text::Tabs -- expand and unexpand tabs per the unix expand(1) and
unexpand(1)
d3018 1
a3020 3
=item BUGS

=item AUTHOR
d3022 1
a3022 1
=head2 Text::Wrap - line wrapping to form simple paragraphs
a3023 1
=item SYNOPSIS 
d3025 1
a3025 3
=item DESCRIPTION

=item EXAMPLE
a3026 1
=item BUGS
a3029 13
=head2 Thread - multithreading

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

new \&start_sub, new \&start_sub, LIST, lock VARIABLE, async BLOCK;,
Thread->self, Thread->list, cond_wait VARIABLE, cond_signal VARIABLE,
cond_broadcast VARIABLE

=item METHODS
a3030 1
join, eval, tid
a3031 1
=item LIMITATIONS
a3032 1
=item SEE ALSO
d3034 1
a3034 1
=head2 Thread::Queue - thread-safe queues
a3037 11
=item DESCRIPTION

=item FUNCTIONS AND METHODS

new, enqueue LIST, dequeue, dequeue_nb, pending

=item SEE ALSO

=head2 Thread::Semaphore - thread-safe semaphores

=item SYNOPSIS
a3040 1
=item FUNCTIONS AND METHODS
d3042 1
a3042 1
new, new NUMBER, down, down NUMBER, up, up NUMBER
a3043 1
=head2 Thread::Signal - Start a thread which runs signal handlers reliably
a3044 1
=item SYNOPSIS
a3045 1
=item DESCRIPTION
a3046 1
=item BUGS
d3048 1
a3048 1
=head2 Thread::Specific - thread-specific keys
a3051 1
=head2 Tie::Array - base class for tied arrays
d3053 1
a3053 1
=item SYNOPSIS  
a3054 1
=item DESCRIPTION       
d3056 1
a3056 8
TIEARRAY classname, LIST, STORE this, index, value, FETCH this, index,
FETCHSIZE this, STORESIZE this, count, EXTEND this, count, CLEAR this,
DESTROY this, PUSH this, LIST, POP this, SHIFT this, UNSHIFT this, LIST,
SPLICE this, offset, length, LIST

=item CAVEATS

=item AUTHOR 
a3057 1
=head2 Tie::Handle - base class definitions for tied handles
a3058 3
=item SYNOPSIS

=item DESCRIPTION
a3059 3
TIEHANDLE classname, LIST, WRITE this, scalar, length, offset, PRINT this,
LIST, PRINTF this, format, LIST, READ this, scalar, length, offset,
READLINE this, GETC this, DESTROY this
a3060 1
=item MORE INFORMATION
d3066 1
d3069 4
a3072 2
TIEHASH classname, LIST, STORE this, key, value, FETCH this, key, FIRSTKEY
this, NEXTKEY this, lastkey, EXISTS this, key, DELETE this, key, CLEAR this
d3076 1
a3078 7
=head2 Tie::RefHash - use references as hash keys

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLE
a3079 1
=item AUTHOR
a3080 1
=item VERSION
a3081 1
=item SEE ALSO
d3088 1
d3091 1
a3095 1
=head2 Tie::SubstrHash - Fixed-table-size, fixed-key-length hashing
a3096 1
=item SYNOPSIS
a3097 1
=item DESCRIPTION
a3098 1
=item CAVEATS
d3100 1
a3100 1
=head2 Time::Local - efficiently compute time from local and GMT time
a3103 6
=item DESCRIPTION

=head2 Time::gmtime - by-name interface to Perl's built-in gmtime()
function

=item SYNOPSIS
a3106 1
=item NOTE
d3108 1
a3108 10
=item AUTHOR

=head2 Time::localtime - by-name interface to Perl's built-in localtime()
function

=item SYNOPSIS

=item DESCRIPTION

=item NOTE
a3109 3
=item AUTHOR

=head2 Time::tm - internal object used by Time::gmtime and Time::localtime
a3110 1
=item SYNOPSIS
a3111 1
=item DESCRIPTION
a3112 1
=item AUTHOR
d3114 1
a3114 1
=head2 UNIVERSAL - base class for ALL classes (blessed references)
a3117 9
=item DESCRIPTION

isa ( TYPE ), can ( METHOD ), VERSION ( [ REQUIRE ] ), UNIVERSAL::isa (
VAL, TYPE ), UNIVERSAL::can ( VAL, METHOD )

=head2 User::grent - by-name interface to Perl's built-in getgr*()
functions

=item SYNOPSIS
a3120 10
=item NOTE

=item AUTHOR

=head2 User::pwent - by-name interface to Perl's built-in getpw*()
functions

=item SYNOPSIS

=item DESCRIPTION
a3121 1
=item NOTE
a3122 1
=item AUTHOR
d3126 2
a3127 2
Here should be listed all the extra programs' documentation, but they
don't all have manual pages yet:
d3147 1
d3150 3
a3152 2
Larry Wall <F<larry@@wall.org>>, with the help of oodles
of other folks.
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@a15 2
=over

d20 6
a25 11
modularity and reusability using innumerable modules, embeddable and
extensible, roll-your-own magic variables (including multiple simultaneous
DBM implementations), subroutines can now be overridden, autoloaded, and
prototyped, arbitrarily nested data structures and anonymous functions,
object-oriented programming, compilability into C code or Perl bytecode,
support for light-weight processes (threads), support for
internationalization, localization, and Unicode, lexical scoping, regular
expression enhancements, enhanced debugger and interactive Perl
environment, with integrated editor support, POSIX 1003.1 compliant library

=item AVAILABILITY
d41 2
a42 6
=back

=head2 perlfaq - frequently asked questions about Perl ($Date: 1999/05/23
20:38:02 $)

=over
d47 4
a50 215
About Perl, What is Perl?, Who supports Perl?  Who develops it?  Why is it
free?, Which version of Perl should I use?, What are perl4 and perl5?, What
is perl6?, How stable is Perl?, Is Perl difficult to learn?, How does Perl
compare with other languages like Java, Python, REXX, Scheme, or Tcl?, Can
I do [task] in Perl?, When shouldn't I program in Perl?, What's the
difference between "perl" and "Perl"?, Is it a Perl program or a Perl
script?, What is a JAPH?, Where can I get a list of Larry Wall witticisms?,
How can I convince my sysadmin/supervisor/employees to use version
(5/5.005/Perl instead of some other language)?, L<perlfaq2>: Obtaining and
Learning about Perl, What machines support Perl?  Where do I get it?, How
can I get a binary version of Perl?, I don't have a C compiler on my
system.  How can I compile perl?, I copied the Perl binary from one machine
to another, but scripts don't work, I grabbed the sources and tried to
compile but gdbm/dynamic loading/malloc/linking/... failed.  How do I make
it work?, What modules and extensions are available for Perl?  What is
CPAN?  What does CPAN/src/... mean?, Is there an ISO or ANSI certified
version of Perl?, Where can I get information on Perl?, What are the Perl
newsgroups on USENET?  Where do I post questions?, Where should I post
source code?, Perl Books, Perl in Magazines, Perl on the Net: FTP and WWW
Access, What mailing lists are there for perl?, Archives of
comp.lang.perl.misc, Where can I buy a commercial version of Perl?, Where
do I send bug reports?, What is perl.com?, L<perlfaq3>: Programming Tools,
How do I do (anything)?, How can I use Perl interactively?, Is there a Perl
shell?, How do I debug my Perl programs?, How do I profile my Perl
programs?, How do I cross-reference my Perl programs?, Is there a
pretty-printer (formatter) for Perl?, Is there a ctags for Perl?, Is there
an IDE or Windows Perl Editor?, Where can I get Perl macros for vi?, Where
can I get perl-mode for emacs?, How can I use curses with Perl?, How can I
use X or Tk with Perl?, How can I generate simple menus without using CGI
or Tk?, What is undump?, How can I make my Perl program run faster?, How
can I make my Perl program take less memory?, Is it unsafe to return a
pointer to local data?, How can I free an array or hash so my program
shrinks?, How can I make my CGI script more efficient?, How can I hide the
source for my Perl program?, How can I compile my Perl program into byte
code or C?, How can I compile Perl into Java?, How can I get C<#!perl> to
work on [MS-DOS,NT,...]?, Can I write useful perl programs on the command
line?, Why don't perl one-liners work on my DOS/Mac/VMS system?, Where can
I learn about CGI or Web programming in Perl?, Where can I learn about
object-oriented Perl programming?, Where can I learn about linking C with
Perl? [h2xs, xsubpp], I've read perlembed, perlguts, etc., but I can't
embed perl inmy C program, what am I doing wrong?, When I tried to run my
script, I got this message. What does itmean?, What's MakeMaker?,
L<perlfaq4>: Data Manipulation, Why am I getting long decimals (eg,
19.9499999999999) instead of the numbers I should be getting (eg, 19.95)?,
Why isn't my octal data interpreted correctly?, Does Perl have a round()
function?  What about ceil() and floor()?  Trig functions?, How do I
convert bits into ints?, Why doesn't & work the way I want it to?, How do I
multiply matrices?, How do I perform an operation on a series of integers?,
How can I output Roman numerals?, Why aren't my random numbers random?, How
do I find the week-of-the-year/day-of-the-year?, How do I find the current
century or millennium?, How can I compare two dates and find the
difference?, How can I take a string and turn it into epoch seconds?, How
can I find the Julian Day?, How do I find yesterday's date?, Does Perl have
a year 2000 problem?  Is Perl Y2K compliant?, How do I validate input?, How
do I unescape a string?, How do I remove consecutive pairs of characters?,
How do I expand function calls in a string?, How do I find matching/nesting
anything?, How do I reverse a string?, How do I expand tabs in a string?,
How do I reformat a paragraph?, How can I access/change the first N letters
of a string?, How do I change the Nth occurrence of something?, How can I
count the number of occurrences of a substring within a string?, How do I
capitalize all the words on one line?, How can I split a [character]
delimited string except when inside[character]? (Comma-separated files),
How do I strip blank space from the beginning/end of a string?, How do I
pad a string with blanks or pad a number with zeroes?, How do I extract
selected columns from a string?, How do I find the soundex value of a
string?, How can I expand variables in text strings?, What's wrong with
always quoting "$vars"?, Why don't my <<HERE documents work?, What is the
difference between a list and an array?, What is the difference between
$array[1] and @@array[1]?, How can I remove duplicate elements from a list
or array?, How can I tell whether a list or array contains a certain
element?, How do I compute the difference of two arrays?  How do I compute
the intersection of two arrays?, How do I test whether two arrays or hashes
are equal?, How do I find the first array element for which a condition is
true?, How do I handle linked lists?, How do I handle circular lists?, How
do I shuffle an array randomly?, How do I process/modify each element of an
array?, How do I select a random element from an array?, How do I permute N
elements of a list?, How do I sort an array by (anything)?, How do I
manipulate arrays of bits?, Why does defined() return true on empty arrays
and hashes?, How do I process an entire hash?, What happens if I add or
remove keys from a hash while iterating over it?, How do I look up a hash
element by value?, How can I know how many entries are in a hash?, How do I
sort a hash (optionally by value instead of key)?, How can I always keep my
hash sorted?, What's the difference between "delete" and "undef" with
hashes?, Why don't my tied hashes make the defined/exists distinction?, How
do I reset an each() operation part-way through?, How can I get the unique
keys from two hashes?, How can I store a multidimensional array in a DBM
file?, How can I make my hash remember the order I put elements into it?,
Why does passing a subroutine an undefined element in a hash create it?,
How can I make the Perl equivalent of a C structure/C++ class/hash or array
of hashes or arrays?, How can I use a reference as a hash key?, How do I
handle binary data correctly?, How do I determine whether a scalar is a
number/whole/integer/float?, How do I keep persistent data across program
calls?, How do I print out or copy a recursive data structure?, How do I
define methods for every class/object?, How do I verify a credit card
checksum?, How do I pack arrays of doubles or floats for XS code?,
L<perlfaq5>: Files and Formats, How do I flush/unbuffer an output
filehandle?  Why must I do this?, How do I change one line in a file/delete
a line in a file/insert a line in the middle of a file/append to the
beginning of a file?, How do I count the number of lines in a file?, How do
I make a temporary file name?, How can I manipulate fixed-record-length
files?, How can I make a filehandle local to a subroutine?  How do I pass
filehandles between subroutines?  How do I make an array of filehandles?,
How can I use a filehandle indirectly?, How can I set up a footer format to
be used with write()?, How can I write() into a string?, How can I output
my numbers with commas added?, How can I translate tildes (~) in a
filename?, How come when I open a file read-write it wipes it out?, Why do
I sometimes get an "Argument list too long" when I use <*>?, Is there a
leak/bug in glob()?, How can I open a file with a leading ">" or trailing
blanks?, How can I reliably rename a file?, How can I lock a file?, Why
can't I just open(FH, ">file.lock")?, I still don't get locking.  I just
want to increment the number in the file.  How can I do this?, How do I
randomly update a binary file?, How do I get a file's timestamp in perl?,
How do I set a file's timestamp in perl?, How do I print to more than one
file at once?, How can I read in an entire file all at once?, How can I
read in a file by paragraphs?, How can I read a single character from a
file?  From the keyboard?, How can I tell whether there's a character
waiting on a filehandle?, How do I do a C<tail -f> in perl?, How do I dup()
a filehandle in Perl?, How do I close a file descriptor by number?, Why
can't I use "C:\temp\foo" in DOS paths?  What doesn't `C:\temp\foo.exe`
work?, Why doesn't glob("*.*") get all the files?, Why does Perl let me
delete read-only files?  Why does C<-i> clobber protected files?  Isn't
this a bug in Perl?, How do I select a random line from a file?, Why do I
get weird spaces when I print an array of lines?, L<perlfaq6>: Regexps, How
can I hope to use regular expressions without creating illegible and
unmaintainable code?, I'm having trouble matching over more than one line. 
What's wrong?, How can I pull out lines between two patterns that are
themselves on different lines?, I put a regular expression into $/ but it
didn't work. What's wrong?, How do I substitute case insensitively on the
LHS, but preserving case on the RHS?, How can I make C<\w> match national
character sets?, How can I match a locale-smart version of C</[a-zA-Z]/>?,
How can I quote a variable to use in a regex?, What is C</o> really for?,
How do I use a regular expression to strip C style comments from a file?,
Can I use Perl regular expressions to match balanced text?, What does it
mean that regexes are greedy?  How can I get around it?, How do I process
each word on each line?, How can I print out a word-frequency or
line-frequency summary?, How can I do approximate matching?, How do I
efficiently match many regular expressions at once?, Why don't
word-boundary searches with C<\b> work for me?, Why does using $&, $`, or
$' slow my program down?, What good is C<\G> in a regular expression?, Are
Perl regexes DFAs or NFAs?  Are they POSIX compliant?, What's wrong with
using grep or map in a void context?, How can I match strings with
multibyte characters?, How do I match a pattern that is supplied by the
user?, L<perlfaq7>: General Perl Language Issues, Can I get a BNF/yacc/RE
for the Perl language?, What are all these $@@%&* punctuation signs, and how
do I know when to use them?, Do I always/never have to quote my strings or
use semicolons and commas?, How do I skip some return values?, How do I
temporarily block warnings?, What's an extension?, Why do Perl operators
have different precedence than C operators?, How do I declare/create a
structure?, How do I create a module?, How do I create a class?, How can I
tell if a variable is tainted?, What's a closure?, What is variable suicide
and how can I prevent it?, How can I pass/return a {Function, FileHandle,
Array, Hash, Method, Regex}?, How do I create a static variable?, What's
the difference between dynamic and lexical (static) scoping?  Between
local() and my()?, How can I access a dynamic variable while a similarly
named lexical is in scope?, What's the difference between deep and shallow
binding?, Why doesn't "my($foo) = <FILE>;" work right?, How do I redefine a
builtin function, operator, or method?, What's the difference between
calling a function as &foo and foo()?, How do I create a switch or case
statement?, How can I catch accesses to undefined
variables/functions/methods?, Why can't a method included in this same file
be found?, How can I find out my current package?, How can I comment out a
large block of perl code?, How do I clear a package?, How can I use a
variable as a variable name?, L<perlfaq8>: System Interaction, How do I
find out which operating system I'm running under?, How come exec() doesn't
return?, How do I do fancy stuff with the keyboard/screen/mouse?, How do I
print something out in color?, How do I read just one key without waiting
for a return key?, How do I check whether input is ready on the keyboard?,
How do I clear the screen?, How do I get the screen size?, How do I ask the
user for a password?, How do I read and write the serial port?, How do I
decode encrypted password files?, How do I start a process in the
background?, How do I trap control characters/signals?, How do I modify the
shadow password file on a Unix system?, How do I set the time and date?,
How can I sleep() or alarm() for under a second?, How can I measure time
under a second?, How can I do an atexit() or setjmp()/longjmp()? (Exception
handling), Why doesn't my sockets program work under System V (Solaris)?
What does the error message "Protocol not supported" mean?, How can I call
my system's unique C functions from Perl?, Where do I get the include files
to do ioctl() or syscall()?, Why do setuid perl scripts complain about
kernel problems?, How can I open a pipe both to and from a command?, Why
can't I get the output of a command with system()?, How can I capture
STDERR from an external command?, Why doesn't open() return an error when a
pipe open fails?, What's wrong with using backticks in a void context?, How
can I call backticks without shell processing?, Why can't my script read
from STDIN after I gave it EOF (^D on Unix, ^Z on MS-DOS)?, How can I
convert my shell script to perl?, Can I use perl to run a telnet or ftp
session?, How can I write expect in Perl?, Is there a way to hide perl's
command line from programs such as "ps"?, I {changed directory, modified my
environment} in a perl script.	How come the change disappeared when I
exited the script?  How do I get my changes to be visible?, How do I close
a process's filehandle without waiting for it to complete?, How do I fork a
daemon process?, How do I make my program run with sh and csh?, How do I
find out if I'm running interactively or not?, How do I timeout a slow
event?, How do I set CPU limits?, How do I avoid zombies on a Unix system?,
How do I use an SQL database?, How do I make a system() exit on control-C?,
How do I open a file without blocking?, How do I install a module from
CPAN?, What's the difference between require and use?, How do I keep my own
module/library directory?, How do I add the directory my program lives in
to the module/library search path?, How do I add a directory to my include
path at runtime?, What is socket.ph and where do I get it?, L<perlfaq9>:
Networking, My CGI script runs from the command line but not the browser.  
(500 Server Error), How can I get better error messages from a CGI
program?, How do I remove HTML from a string?, How do I extract URLs?, How
do I download a file from the user's machine?  How do I open a file on
another machine?, How do I make a pop-up menu in HTML?, How do I fetch an
HTML file?, How do I automate an HTML form submission?, How do I decode or
create those %-encodings on the web?, How do I redirect to another page?,
How do I put a password on my web pages?, How do I edit my .htpasswd and
.htgroup files with Perl?, How do I make sure users can't enter values into
a form that cause my CGI script to do bad things?, How do I parse a mail
header?, How do I decode a CGI form?, How do I check a valid mail address?,
How do I decode a MIME/BASE64 string?, How do I return the user's mail
address?, How do I send mail?, How do I read mail?, How do I find out my
hostname/domainname/IP address?, How do I fetch a news article or the
active newsgroups?, How do I fetch/put an FTP file?, How can I do RPC in
Perl?
d77 2
a78 2
23/May/99, 13/April/99, 7/January/99, 22/June/98, 24/April/97, 23/April/97,
25/March/97, 18/March/97, 17/March/97 Version, Initial Release: 11/March/97
d80 2
a81 6
=back

=head2 perlfaq1 - General Questions About Perl ($Revision: 1.23 $, $Date:
1999/05/23 16:08:30 $)

=over
a94 2
=item What is perl6?

d115 1
a115 1
(5/5.005/Perl instead of some other language)?
d121 2
a122 6
=back

=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.32 $,
$Date: 1999/10/14 18:46:09 $)

=over
d140 1
a140 1
=item What modules and extensions are available for Perl?  What is CPAN? 
d147 1
a147 1
=item What are the Perl newsgroups on Usenet?  Where do I post questions?
d153 3
a155 1
References, Tutorials, Task-Oriented, Special Topics
d161 3
a163 1
=item What mailing lists are there for Perl?
d171 3
a173 1
=item What is perl.com? Perl Mongers? pm.org? perl.org?
d179 2
a180 6
=back

=head2 perlfaq3 - Programming Tools ($Revision: 1.38 $, $Date: 1999/05/23
16:08:30 $)

=over
a201 2
=item Is there an IDE or Windows Perl Editor?

a227 2
=item How can I compile Perl into Java?

d230 1
a230 1
=item Can I write useful Perl programs on the command line?
d232 1
a232 1
=item Why don't Perl one-liners work on my DOS/Mac/VMS system?
d252 2
a253 6
=back

=head2 perlfaq4 - Data Manipulation ($Revision: 1.49 $, $Date: 1999/05/23
20:37:49 $)

=over
d266 1
a266 1
=item Does Perl have a round() function?  What about ceil() and floor()? 
a270 2
=item Why doesn't & work the way I want it to?

a286 2
=item How do I find the current century or millennium?

d293 1
a293 3
=item How do I find yesterday's date?

=item Does Perl have a Year 2000 problem?  Is Perl Y2K compliant?
a330 2
=item How do I pad a string with blanks or pad a number with zeroes?

a350 2
=item What is the difference between a list and an array?

d353 1
a353 1
=item How can I remove duplicate elements from a list or array?
a365 2
=item How do I test whether two arrays or hashes are equal?

a442 2
=item How do I pack arrays of doubles or floats for XS code?

d447 2
a448 6
=back

=head2 perlfaq5 - Files and Formats ($Revision: 1.38 $, $Date: 1999/05/23
16:08:30 $)

=over
d484 1
a484 1
=item How can I open a file with a leading ">" or trailing blanks?
d490 1
a490 1
=item Why can't I just open(FH, ">file.lock")?
a502 2
=item How can I read in an entire file all at once?

d507 1
a507 1
=item How can I tell whether there's a character waiting on a filehandle?
a524 2
=item Why do I get weird spaces when I print an array of lines?

d529 1
a529 5
=back

=head2 perlfaq6 - Regexes ($Revision: 1.27 $, $Date: 1999/05/23 16:08:30 $)

=over
d538 2
a539 1
Comments Outside the Regex, Comments Inside the Regex, Different Delimiters
d555 1
a555 1
=item How can I quote a variable to use in a regex?
d564 1
a564 1
=item What does it mean that regexes are greedy?  How can I get around it?
d580 1
a580 1
=item Are Perl regexes DFAs or NFAs?  Are they POSIX compliant?
a585 2
=item How do I match a pattern that is supplied by the user?

d590 2
a591 6
=back

=head2 perlfaq7 - Perl Language Issues ($Revision: 1.28 $, $Date:
1999/05/23 20:36:18 $)

=over
d599 1
a599 1
=item What are all these $@@%&* punctuation signs, and how do I know when to
d626 1
a626 1
Regex}?
d628 1
a628 1
Passing Variables and Functions, Passing Filehandles, Passing Regexes,
d633 1
a633 1
=item What's the difference between dynamic and lexical (static) scoping? 
a656 4
=item How do I clear a package?

=item How can I use a variable as a variable name?

d661 2
a662 6
=back

=head2 perlfaq8 - System Interaction ($Revision: 1.39 $, $Date: 1999/05/23
18:37:57 $)

=over
d770 1
a770 1
=item How do I install a module from CPAN?
a780 2
=item What is socket.ph and where do I get it?

d785 1
a785 3
=back

=head2 perlfaq9 - Networking ($Revision: 1.26 $, $Date: 1999/05/23 16:08:30
a787 2
=over

d847 1
a847 1
=back
d849 1
a849 1
=head2 perldelta - what's new for perl v5.6.0
d851 1
a851 1
=over
d853 1
a853 3
=item DESCRIPTION

=item Core Enhancements
d857 1
a857 57
=item Interpreter cloning, threads, and concurrency

=item Lexically scoped warning categories

=item Unicode and UTF-8 support

=item Support for interpolating named characters

=item "our" declarations

=item Support for strings represented as a vector of ordinals

=item Improved Perl version numbering system

=item New syntax for declaring subroutine attributes

=item File and directory handles can be autovivified

=item open() with more than two arguments

=item 64-bit support

=item Large file support

=item Long doubles

=item "more bits"

=item Enhanced support for sort() subroutines

=item C<sort $coderef @@foo> allowed

=item File globbing implemented internally

Support for CHECK blocks

=item POSIX character class syntax [: :] supported

Better pseudo-random number generator

=item Improved C<qw//> operator

Better worst-case behavior of hashes

=item pack() format 'Z' supported

=item pack() format modifier '!' supported

=item pack() and unpack() support counted strings

=item Comments in pack() templates

=item Weak references

=item Binary numbers supported

=item Lvalue subroutines
d859 1
a859 1
=item Some arrows may be omitted in calls through references
d861 1
a861 1
=item Boolean assignment operators are legal lvalues
d863 1
a863 1
=item exists() is supported on subroutine names
d865 3
a867 1
=item exists() and delete() are supported on array elements
d869 1
a869 1
=item Pseudo-hashes work better
d871 1
a871 1
=item Automatic flushing of output buffers
d873 1
a873 1
=item Better diagnostics on meaningless filehandle operations
d875 1
a875 35
=item Where possible, buffered data discarded from duped input filehandle

=item eof() has the same old magic as <>

=item binmode() can be used to set :crlf and :raw modes

=item C<-T> filetest recognizes UTF-8 encoded files as "text"

=item system(), backticks and pipe open now reflect exec() failure

=item Improved diagnostics

=item Diagnostics follow STDERR

More consistent close-on-exec behavior

=item syswrite() ease-of-use

=item Better syntax checks on parenthesized unary operators

=item Bit operators support full native integer width

=item Improved security features

More functional bareword prototype (*)

=item C<require> and C<do> may be overridden

=item $^X variables may now have names longer than one character

=item New variable $^C reflects C<-c> switch

=item New variable $^V contains Perl version as a string

=item Optional Y2K warnings
d879 1
a879 1
=item Modules and Pragmata
d883 1
a883 1
=item Modules
d885 1
a885 8
attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters
d887 1
a887 11
=item Pragmata

=back

=item Utility Changes

=over

=item dprofpp

=item find2perl
d889 3
a891 1
=item h2xs
d893 1
a893 1
=item perlcc
d895 1
a895 1
=item perldoc
d897 1
a897 1
=item The Perl Debugger
d899 1
a899 1
=back
d901 1
a901 1
=item Improved Documentation
d903 1
a903 4
perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod
d905 1
a905 1
=item Performance enhancements
d907 1
a907 3
=over

=item Simple sort() using { $a <=> $b } and the like are optimized
d909 1
a909 1
=item Optimized assignments to lexical variables
d911 1
a911 1
=item Faster subroutine calls
d913 1
a913 1
delete(), each(), values() and hash iteration are faster
d915 1
a915 1
=back
d917 1
a917 1
=item Installation and Configuration Improvements
d919 1
a919 1
=over
d921 1
a921 1
=item -Dusethreads means something different
d923 1
a923 1
=item New Configure flags
d925 1
a925 1
=item Threadedness and 64-bitness now more daring
d927 1
a927 1
=item Long Doubles
d929 1
a929 1
=item -Dusemorebits
d931 1
a931 1
=item -Duselargefiles
d933 1
a933 1
=item installusrbinperl
d935 1
a935 1
=item SOCKS support
d937 1
a937 1
=item C<-A> flag
d939 1
a939 1
=item Enhanced Installation Directories
d941 1
a941 1
=back
d943 1
a943 1
=item Platform specific changes
d945 1
a945 1
=over
d947 1
a947 1
=item Supported platforms
d949 1
a949 1
=item DOS
d951 1
a951 1
=item OS390 (OpenEdition MVS)
d953 1
a953 1
=item VMS
d955 1
a955 1
=item Win32
d959 1
a959 1
=item Significant bug fixes
d963 1
a963 17
=item <HANDLE> on empty files

=item C<eval '...'> improvements

=item All compilation errors are true errors

=item Implicitly closed filehandles are safer

=item Behavior of list slices is more consistent

=item C<(\$)> prototype and C<$foo{a}>

=item C<goto &sub> and AUTOLOAD

=item C<-bareword> allowed under C<use integer>

=item Failures in DESTROY()
d965 1
a965 11
=item Locale bugs fixed

=item Memory leaks

=item Spurious subroutine stubs after failed subroutine calls

=item Taint failures under C<-U>

=item END blocks and the C<-c> switch

=item Potential to leak DATA filehandles
d969 1
a969 56
=item New or Changed Diagnostics

"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible Y2K bug: %s, pragma "attrs" is deprecated, use
"sub NAME : ATTRS" instead, Premature end of script headers, Repeat count
in pack overflows, Repeat count in unpack overflows, realloc() of freed
memory ignored, Reference is already weak, setpgrp can't take arguments,
Strange *+?{} on zero-length expression, switching effective %s is not
implemented, This Perl can't reset CRTL environ elements (%s), This Perl
can't set CRTL environ elements (%s=%s), Too late to run %s block, Unknown
open() mode '%s', Unknown process %x sent message to prime_env_iter: %s,
Unrecognized escape \\%c passed through, Unterminated attribute parameter
in attribute list, Unterminated attribute list, Unterminated attribute
parameter in subroutine attribute list, Unterminated subroutine attribute
list, Value of CLI symbol "%s" too long, Version number must be a constant
number

=item New tests

=item Incompatible Changes
d973 1
a973 20
=item Perl Source Incompatibilities

CHECK is a new keyword, Treatment of list slices of undef has changed

=item Format of $English::PERL_VERSION is different

Literals of the form C<1.2.3> parse differently, Possibly changed
pseudo-random number generator, Hashing function for hash keys has changed,
C<undef> fails on read only values, Close-on-exec bit may be set on pipe
and socket handles, Writing C<"$$1"> to mean C<"${$}1"> is unsupported,
delete(), values() and C<\(%h)> operate on aliases to values, not copies,
vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS, Text of some diagnostic
output has changed, C<%@@> has been removed, Parenthesized not() behaves
like a list operator, Semantics of bareword prototype C<(*)> have changed

=item Semantics of bit operators may have changed on 64-bit platforms

=item More builtins taint their results

=item C Source Incompatibilities
d975 3
a977 1
C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>
d979 1
a979 1
=item Compatible C Source API Changes
d981 1
a981 3
C<PATCHLEVEL> is now C<PERL_VERSION>

=item Binary Incompatibilities
d985 1
a985 11
=item Known Problems

=over

=item Thread test failures

=item EBCDIC platforms not supported

=item In 64-bit HP-UX the lib/io_multihomed test may hang

=item NEXTSTEP 3.3 POSIX test failure
d987 1
a987 2
=item Tru64 (aka Digital UNIX, aka DEC OSF/1) lib/sdbm test failure with
gcc
d989 1
a989 1
=item UNICOS/mk CC failures during Configure run
d991 17
a1007 12
=item Arrow operator and arrays

=item Windows 2000

=item Experimental features

Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression constructs C<(?{ code })>
and C<(??{ code })>

=back
d1011 2
a1012 3
Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, Probable precedence problem on %s,
regexp too big, Use of "$$<digit>" to mean "${$}<digit>" is deprecated
d1014 1
a1014 1
=item Reporting Bugs
a1019 2
=back

a1021 2
=over

a1035 2
=item Slices

a1039 4
=item SEE ALSO

=back

a1041 2
=over

a1067 2
=back

a1069 2
=over

d1134 2
a1135 2
s/PATTERN/REPLACEMENT/egimosx, tr/SEARCHLIST/REPLACEMENTLIST/cdsUC,
y/SEARCHLIST/REPLACEMENTLIST/cdsUC
d1141 1
a1141 1
C<``>, C<qq//>, C<qx//>, C<< <file*glob> >>, C<?RE?>, C</RE/>, C<m/RE/>,
a1158 2
=back

a1160 2
=over

d1169 4
a1172 8
cntrl, graph, print, punct, xdigit

=item Extended Patterns

C<(?#text)>, C<(?imsx-imsx)>, C<(?:pattern)>, C<(?imsx-imsx:pattern)>,
C<(?=pattern)>, C<(?!pattern)>, C<(?<=pattern)>, C<(?<!pattern)>, C<(?{
code })>, C<(??{ code })>, C<< (?>pattern) >>,
C<(?(condition)yes-pattern|no-pattern)>, C<(?(condition)yes-pattern)>
d1178 1
a1178 1
=item Warning on \1 vs $1
a1181 7
=item Combining pieces together

C<ST>, C<S|T>, C<S{REPEAT_COUNT}>, C<S{min,max}>, C<S{min,max}?>, C<S?>,
C<S*>, C<S+>, C<S??>, C<S*?>, C<S+?>, C<< (?>S) >>, C<(?=S)>, C<(?<=S)>,
C<(?!S)>, C<(?<!S)>, C<(??{ EXPR })>,
C<(?(condition)yes-pattern|no-pattern)>

a1183 4
=back

=item BUGS

a1189 2
=over

d1198 1
a1198 1
OS/2, MS-DOS, Win95/NT, Macintosh, VMS
d1202 1
a1202 1
=item Command Switches
d1204 3
a1206 3
B<-0>[I<digits>], B<-a>, B<-C>, B<-c>, B<-d>, B<-d:>I<foo>,
B<-D>I<letters>, B<-D>I<number>, B<-e> I<commandline>, B<-F>I<pattern>,
B<-h>, B<-i>[I<extension>], B<-I>I<directory>, B<-l>[I<octnum>],
d1209 1
a1209 2
B<-T>, B<-u>, B<-U>, B<-v>, B<-V>, B<-V:>I<name>, B<-w>, B<-W>, B<-X>,
B<-x> I<directory>
d1216 1
a1216 3
(specific to the Win32 port), PERL_DEBUG_MSTATS, PERL_DESTRUCT_LEVEL

=back
a1219 2
=over

a1237 2
=item Portability

d1242 39
a1280 41
binmode FILEHANDLE, DISCIPLINE, binmode FILEHANDLE, bless REF,CLASSNAME,
bless REF, caller EXPR, caller, chdir EXPR, chmod LIST, chomp VARIABLE,
chomp LIST, chomp, chop VARIABLE, chop LIST, chop, chown LIST, chr NUMBER,
chr, chroot FILENAME, chroot, close FILEHANDLE, close, closedir DIRHANDLE,
connect SOCKET,NAME, continue BLOCK, cos EXPR, crypt PLAINTEXT,SALT,
dbmclose HASH, dbmopen HASH,DBNAME,MASK, defined EXPR, defined, delete
EXPR, die LIST, do BLOCK, do SUBROUTINE(LIST), do EXPR, dump LABEL, dump,
each HASH, eof FILEHANDLE, eof (), eof, eval EXPR, eval BLOCK, exec LIST,
exec PROGRAM LIST, exists EXPR, exit EXPR, exp EXPR, exp, fcntl
FILEHANDLE,FUNCTION,SCALAR, fileno FILEHANDLE, flock FILEHANDLE,OPERATION,
fork, format, formline PICTURE,LIST, getc FILEHANDLE, getc, getlogin,
getpeername SOCKET, getpgrp PID, getppid, getpriority WHICH,WHO, getpwnam
NAME, getgrnam NAME, gethostbyname NAME, getnetbyname NAME, getprotobyname
NAME, getpwuid UID, getgrgid GID, getservbyname NAME,PROTO, gethostbyaddr
ADDR,ADDRTYPE, getnetbyaddr ADDR,ADDRTYPE, getprotobynumber NUMBER,
getservbyport PORT,PROTO, getpwent, getgrent, gethostent, getnetent,
getprotoent, getservent, setpwent, setgrent, sethostent STAYOPEN, setnetent
STAYOPEN, setprotoent STAYOPEN, setservent STAYOPEN, endpwent, endgrent,
endhostent, endnetent, endprotoent, endservent, getsockname SOCKET,
getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob, gmtime EXPR, goto LABEL,
goto EXPR, goto &NAME, grep BLOCK LIST, grep EXPR,LIST, hex EXPR, hex,
import, index STR,SUBSTR,POSITION, index STR,SUBSTR, int EXPR, int, ioctl
FILEHANDLE,FUNCTION,SCALAR, join EXPR,LIST, keys HASH, kill SIGNAL, LIST,
last LABEL, last, lc EXPR, lc, lcfirst EXPR, lcfirst, length EXPR, length,
link OLDFILE,NEWFILE, listen SOCKET,QUEUESIZE, local EXPR, localtime EXPR,
lock, log EXPR, log, lstat FILEHANDLE, lstat EXPR, lstat, m//, map BLOCK
LIST, map EXPR,LIST, mkdir FILENAME,MASK, mkdir FILENAME, msgctl
ID,CMD,ARG, msgget KEY,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, msgsnd
ID,MSG,FLAGS, my EXPR, my EXPR : ATTRIBUTES, next LABEL, next, no Module
LIST, oct EXPR, oct, open FILEHANDLE,MODE,LIST, open FILEHANDLE,EXPR, open
FILEHANDLE, opendir DIRHANDLE,EXPR, ord EXPR, ord, our EXPR, pack
TEMPLATE,LIST, package, package NAMESPACE, pipe READHANDLE,WRITEHANDLE, pop
ARRAY, pop, pos SCALAR, pos, print FILEHANDLE LIST, print LIST, print,
printf FILEHANDLE FORMAT, LIST, printf FORMAT, LIST, prototype FUNCTION,
push ARRAY,LIST, q/STRING/, qq/STRING/, qr/STRING/, qx/STRING/, qw/STRING/,
quotemeta EXPR, quotemeta, rand EXPR, rand, read
FILEHANDLE,SCALAR,LENGTH,OFFSET, read FILEHANDLE,SCALAR,LENGTH, readdir
DIRHANDLE, readline EXPR, readlink EXPR, readlink, readpipe EXPR, recv
SOCKET,SCALAR,LENGTH,FLAGS, redo LABEL, redo, ref EXPR, ref, rename
OLDNAME,NEWNAME, require VERSION, require EXPR, require, reset EXPR, reset,
return EXPR, return, reverse LIST, rewinddir DIRHANDLE, rindex
d1292 10
a1301 11
splice ARRAY,OFFSET, splice ARRAY, split /PATTERN/,EXPR,LIMIT, split
/PATTERN/,EXPR, split /PATTERN/, split, sprintf FORMAT, LIST, sqrt EXPR,
sqrt, srand EXPR, srand, stat FILEHANDLE, stat EXPR, stat, study SCALAR,
study, sub BLOCK, sub NAME, sub NAME BLOCK, substr
EXPR,OFFSET,LENGTH,REPLACEMENT, substr EXPR,OFFSET,LENGTH, substr
EXPR,OFFSET, symlink OLDFILE,NEWFILE, syscall LIST, sysopen
FILEHANDLE,FILENAME,MODE, sysopen FILEHANDLE,FILENAME,MODE,PERMS, sysread
FILEHANDLE,SCALAR,LENGTH,OFFSET, sysread FILEHANDLE,SCALAR,LENGTH, sysseek
FILEHANDLE,POSITION,WHENCE, system LIST, system PROGRAM LIST, syswrite
FILEHANDLE,SCALAR,LENGTH,OFFSET, syswrite FILEHANDLE,SCALAR,LENGTH,
syswrite FILEHANDLE,SCALAR, tell FILEHANDLE, tell, telldir DIRHANDLE, tie
d1305 4
a1308 6
TEMPLATE,EXPR, untie VARIABLE, unshift ARRAY,LIST, use Module VERSION LIST,
use Module VERSION, use Module LIST, use Module, use VERSION, utime LIST,
values HASH, vec EXPR,OFFSET,BITS, wait, waitpid PID,FLAGS, wantarray, warn
LIST, write FILEHANDLE, write EXPR, write, y///

=back
a1313 2
=over

d1320 21
a1340 28
$ARG, $_, $<I<digits>>, $MATCH, $&, $PREMATCH, $`, $POSTMATCH, $',
$LAST_PAREN_MATCH, $+, @@+, $MULTILINE_MATCHING, $*, input_line_number
HANDLE EXPR, $INPUT_LINE_NUMBER, $NR, $, input_record_separator HANDLE
EXPR, $INPUT_RECORD_SEPARATOR, $RS, $/, autoflush HANDLE EXPR,
$OUTPUT_AUTOFLUSH, $|, output_field_separator HANDLE EXPR,
$OUTPUT_FIELD_SEPARATOR, $OFS, $,, output_record_separator HANDLE EXPR,
$OUTPUT_RECORD_SEPARATOR, $ORS, $\, $LIST_SEPARATOR, $",
$SUBSCRIPT_SEPARATOR, $SUBSEP, $;, $OFMT, $#, format_page_number HANDLE
EXPR, $FORMAT_PAGE_NUMBER, $%, format_lines_per_page HANDLE EXPR,
$FORMAT_LINES_PER_PAGE, $=, format_lines_left HANDLE EXPR,
$FORMAT_LINES_LEFT, $-, @@-, C<$`> is the same as C<substr($var, 0, $-[0]>),
C<$&> is the same as C<substr($var, $-[0], $+[0] - $-[0]>), C<$'> is the
same as C<substr($var, $+[0]>), C<$1> is the same as C<substr($var, $-[1],
$+[1] - $-[1])>, C<$2> is the same as C<substr($var, $-[2], $+[2] -
$-[2])>, C<$3> is the same as C<substr $var, $-[3], $+[3] - $-[3]>),
format_name HANDLE EXPR, $FORMAT_NAME, $~, format_top_name HANDLE EXPR,
$FORMAT_TOP_NAME, $^, format_line_break_characters HANDLE EXPR,
$FORMAT_LINE_BREAK_CHARACTERS, $:, format_formfeed HANDLE EXPR,
$FORMAT_FORMFEED, $^L, $ACCUMULATOR, $^A, $CHILD_ERROR, $?, $OS_ERROR,
$ERRNO, $!, $EXTENDED_OS_ERROR, $^E, $EVAL_ERROR, $@@, $PROCESS_ID, $PID,
$$, $REAL_USER_ID, $UID, $<, $EFFECTIVE_USER_ID, $EUID, $>, $REAL_GROUP_ID,
$GID, $(, $EFFECTIVE_GROUP_ID, $EGID, $), $PROGRAM_NAME, $0, $[, $],
$COMPILING, $^C, $DEBUGGING, $^D, $SYSTEM_FD_MAX, $^F, $^H, %^H,
$INPLACE_EDIT, $^I, $^M, $OSNAME, $^O, $PERLDB, $^P, 0x01, 0x02, 0x04,
0x08, 0x10, 0x20, 0x40, 0x80, 0x100, 0x200, $LAST_REGEXP_CODE_RESULT, $^R,
$EXCEPTIONS_BEING_CAUGHT, $^S, $BASETIME, $^T, $PERL_VERSION, $^V,
$WARNING, $^W, ${^WARNING_BITS}, ${^WIDE_SYSTEM_CALLS}, $EXECUTABLE_NAME,
$^X, $ARGV, @@ARGV, @@INC, @@_, %INC, %ENV, $ENV{expr}, %SIG, $SIG{expr}
a1343 6
=item Technical Note on the Syntax of Variable Names

=back

=item BUGS

a1347 2
=over

d1354 1
a1354 1
=item Private Variables via my()
a1359 2
=item Lvalue subroutines

d1364 3
a1366 3
1. You need to give a global variable a temporary value, especially $_, 2.
You need to create a local file or directory handle or a local function, 3.
You want to temporarily change just one element of an array or hash
d1374 1
a1374 1
=item Overriding Built-in Functions
a1377 2
=item Subroutine Attributes

a1381 2
=back

a1383 2
=over

a1401 2
=back

a1403 2
=over

d1412 2
a1413 3
attributes, attrs, autouse, base, blib, caller, charnames, constant,
diagnostics, fields, filetest, integer, less, lib, locale, ops, overload,
re, sigtrap, strict, subs, utf8, vars, warnings
d1417 16
a1432 28
AnyDBM_File, AutoLoader, AutoSplit, B, B::Asmdata, B::Assembler, B::Bblock,
B::Bytecode, B::C, B::CC, B::Debug, B::Deparse, B::Disassembler, B::Lint,
B::Showlex, B::Stackobj, B::Terse, B::Xref, Benchmark, ByteLoader, CGI,
CGI::Apache, CGI::Carp, CGI::Cookie, CGI::Fast, CGI::Pretty, CGI::Push,
CGI::Switch, CPAN, CPAN::FirstTime, CPAN::Nox, Carp, Carp::Heavy,
Class::Struct, Config, Cwd, DB, DB_File, Data::Dumper, Devel::DProf,
Devel::Peek, Devel::SelfStubber, DirHandle, Dumpvalue, DynaLoader, English,
Env, Errno, Exporter, Exporter::Heavy, ExtUtils::Command, ExtUtils::Embed,
ExtUtils::Install, ExtUtils::Installed, ExtUtils::Liblist,
ExtUtils::MM_Cygwin, ExtUtils::MM_OS2, ExtUtils::MM_Unix, ExtUtils::MM_VMS,
ExtUtils::MM_Win32, ExtUtils::MakeMaker, ExtUtils::Manifest,
ExtUtils::Mkbootstrap, ExtUtils::Mksymlists, ExtUtils::Packlist,
ExtUtils::testlib, Fatal, Fcntl, File::Basename, File::CheckTree,
File::Compare, File::Copy, File::DosGlob, File::Find, File::Glob,
File::Path, File::Spec, File::Spec::Functions, File::Spec::Mac,
File::Spec::OS2, File::Spec::Unix, File::Spec::VMS, File::Spec::Win32,
File::stat, FileCache, FileHandle, FindBin, GDBM_File, Getopt::Long,
Getopt::Std, I18N::Collate, IO, IO::Dir, IO::File, IO::Handle, IO::Pipe,
IO::Poll, IO::Seekable, IO::Select, IO::Socket, IO::Socket::INET,
IO::Socket::UNIX, IPC::Msg, IPC::Open2, IPC::Open3, IPC::Semaphore,
IPC::SysV, Math::BigFloat, Math::BigInt, Math::Complex, Math::Trig,
Net::Ping, Net::hostent, Net::netent, Net::protoent, Net::servent, O,
Opcode, POSIX, Pod::Checker, Pod::Html, Pod::InputObjects, Pod::Man,
Pod::Parser, Pod::Select, Pod::Text, Pod::Text::Color, Pod::Usage,
SDBM_File, Safe, Search::Dict, SelectSaver, SelfLoader, Shell, Socket,
Symbol, Sys::Hostname, Sys::Syslog, Term::Cap, Term::Complete,
Term::ReadLine, Test, Test::Harness, Text::Abbrev, Text::ParseWords,
Text::Soundex, Text::Wrap, Tie::Array, Tie::Handle, Tie::Hash,
d1454 2
a1455 2
Miscellaneous Modules, Africa, Asia, Australasia, Central America, Europe,
North America, South America
a1493 2
=back

a1495 2
=over

d1513 1
a1513 1
=back
d1515 1
a1515 1
=head2 perlfork - Perl's fork() emulation
d1519 3
a1521 1
=item SYNOPSIS
d1523 1
a1523 1
=item DESCRIPTION
d1527 1
a1527 1
=item Behavior of other Perl features in forked pseudo-processes
d1529 1
a1529 3
$$ or $PROCESS_ID, %ENV, chdir() and all other builtins that accept
filenames, wait() and waitpid(), kill(), exec(), exit(), Open handles to
files, directories and network sockets
d1531 1
a1531 1
=item Resource limits
d1533 1
a1533 1
=item Killing the parent process
d1535 2
a1536 1
=item Lifetime of the parent process and pseudo-processes
d1538 1
a1538 1
=item CAVEATS AND LIMITATIONS
d1540 1
a1540 3
BEGIN blocks, Open filehandles, Forking pipe open() not yet implemented,
Global state maintained by XSUBs, Interpreter embedded in larger
application, Thread-safety of extensions
d1542 1
a1542 1
=back
d1544 1
a1544 1
=item BUGS
d1546 1
a1546 46
=item AUTHOR

=item SEE ALSO

=back

=head2 perlform - Perl formats

=over

=item DESCRIPTION

=over

=item Format Variables

=back

=item NOTES

=over

=item Footers

=item Accessing Formatting Internals

=back

=item WARNINGS

=back

=head2 perllocale - Perl locale handling (internationalization and
localization)

=over

=item DESCRIPTION

=item PREPARING TO USE LOCALES

=item USING LOCALES

=over

=item The use locale pragma
d1558 1
a1558 1
=item Permanently fixing your system's locale configuration
d1560 1
a1560 1
=item Fixing system locale configuration
d1589 6
a1594 5
B<Output formatting functions> (printf() and write()):, B<Case-mapping
functions> (lc(), lcfirst(), uc(), ucfirst()):, B<POSIX locale-dependent
functions> (localeconv(), strcoll(),strftime(), strxfrm()):, B<POSIX
character class tests> (isalnum(), isalpha(), isdigit(),isgraph(),
islower(), isprint(), ispunct(), isspace(), isupper(),
d1599 2
a1600 2
PERL_BADLANG, LC_ALL, LANGUAGE, LC_CTYPE, LC_COLLATE, LC_MONETARY,
LC_NUMERIC, LC_TIME, LANG
a1633 2
=back

a1635 4
=over

=item NOTE

a1657 42
=back

=head2 perlreftut - Mark's very short tutorial about references

=over

=item DESCRIPTION

=item Who Needs Complicated Data Structures?

=item The Solution

=item Syntax

=over

=item Making References

=item Using References

=back

=item An Example

=item Arrow Rule

=item Solution

=item The Rest

=item Summary

=item Credits

=over

=item Distribution Conditions

=back

=back

a1659 2
=over

d1677 1
a1677 1
=item ARRAYS OF ARRAYS
d1681 1
a1681 1
=item Declaration of a ARRAY OF ARRAYS
d1683 1
a1683 1
=item Generation of a ARRAY OF ARRAYS
d1685 1
a1685 1
=item Access and Printing of a ARRAY OF ARRAYS
d1689 1
a1689 1
=item HASHES OF ARRAYS
d1693 1
a1693 1
=item Declaration of a HASH OF ARRAYS
d1695 1
a1695 1
=item Generation of a HASH OF ARRAYS
d1697 1
a1697 1
=item Access and Printing of a HASH OF ARRAYS
d1701 1
a1701 1
=item ARRAYS OF HASHES
d1705 1
a1705 1
=item Declaration of a ARRAY OF HASHES
d1707 1
a1707 1
=item Generation of a ARRAY OF HASHES
d1709 1
a1709 1
=item Access and Printing of a ARRAY OF HASHES
d1743 1
a1743 5
=back

=head2 perllol - Manipulating Arrays of Arrays in Perl

=over
d1747 1
a1747 1
=item Declaration and Access of Arrays of Arrays
a1758 60
=back

=head2 perlboot - Beginner's Object-Oriented Tutorial

=over

=item DESCRIPTION

=over

=item If we could talk to the animals...

=item Introducing the method invocation arrow

=item Invoking a barnyard

=item The extra parameter of method invocation

=item Calling a second method to simplify things

=item Inheriting the windpipes

=item A few notes about @@ISA

=item Overriding the methods

=item Starting the search from a different place

=item The SUPER way of doing things

=item Where we're at so far...

=item A horse is a horse, of course of course -- or is it?

=item Invoking an instance method

=item Accessing the instance data

=item How to build a horse

=item Inheriting the constructor

=item Making a method work with either classes or instances

=item Adding parameters to a method

=item More interesting instances

=item A horse of a different color

=item Summary

=back

=item SEE ALSO

=item COPYRIGHT

=back

a1760 2
=over

a1854 54
=back

=head2 perltootc - Tom's OO Tutorial for Class Data in Perl

=over

=item DESCRIPTION

=item Class Data as Package Variables

=over

=item Putting All Your Eggs in One Basket

=item Inheritance Concerns

=item The Eponymous Meta-Object

=item Indirect References to Class Data

=item Monadic Classes

=item Translucent Attributes

=back

=item Class Data as Lexical Variables

=over

=item Privacy and Responsibility 

=item File-Scoped Lexicals

=item More Inheritance Concerns

=item Locking the Door and Throwing Away the Key

=item Translucency Revisited

=back

=item NOTES

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=item ACKNOWLEDGEMENTS

=item HISTORY

=back

a1856 2
=over

a1868 2
=item WARNING

d1875 2
a1884 2
=back

a1886 2
=over

a1922 2
=back

a1924 2
=over

a1948 2
=back

a1951 2
=over

a2023 29
=back

=head2 perldbmfilter - Perl DBM Filters

=over

=item SYNOPSIS

=item DESCRIPTION

B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>

=over

=item The Filter

=item An Example -- the NULL termination problem.

=item Another Example -- Key is a C int.

=back

=item SEE ALSO

=item AUTHOR

=back

a2025 2
=over

d2035 3
a2037 3
[expr], r, <CR>, c [line|sub], l, l min+incr, l min-max, l line, l subname,
-, w [line], f filename, /pattern/, ?pattern?, L, S [[!]regex], t, t expr,
b [line] [condition], b subname [condition], b postpone subname
d2039 1
a2039 7
command, a [line], A, W expr, W, O booloption .., O anyoption? .., O
option=value .., < ?, < [ command ], << command, > ?, > command, >>
command, { ?, { [ command ], {{ command, ! number, ! -number, ! pattern, !!
cmd, H -number, q or ^D, R, |dbcmd, ||dbcmd, command, m expr, man [manpage]

=item Configurable Options

d2045 4
a2048 1
C<UsageOnly>, C<TTY>, C<noTTY>, C<ReadLine>, C<NonStop>
d2052 1
a2052 2
Prompt, Multiline commands, Stack backtrace, Line Listing Format, Frame
listing
d2064 1
a2064 1
=back
d2066 1
a2066 3
=item Debugging regular expressions

=item Debugging memory usage
d2068 1
a2068 1
=item SEE ALSO
d2074 1
a2074 1
=head2 perlnumber - semantics of numbers and numeric operations in Perl
d2078 1
a2078 1
=item SYNOPSIS
d2080 3
a2082 1
=item DESCRIPTION
d2084 1
a2084 1
=item Storing numbers
d2086 1
a2086 1
=item Numeric operators and numeric conversions
d2088 1
a2088 1
=item Flavors of Perl numeric operations
d2090 1
a2090 20
Arithmetic operators except, C<no integer>, Arithmetic operators except,
C<use integer>, Bitwise operators, C<no integer>, Bitwise operators, C<use
integer>, Operators which expect an integer, Operators which expect a
string

=item AUTHOR

=item SEE ALSO

=back

=head2 perldebguts - Guts of Perl debugging 

=over

=item DESCRIPTION

=item Debugger Internals

=over
d2092 1
a2092 1
=item Writing Your Own Debugger
a2095 2
=item Frame Listing Output Examples

d2113 7
a2119 39
=item Debugging Perl memory usage

=over

=item Using C<$ENV{PERL_DEBUG_MSTATS}>

C<buckets SMALLEST(APPROX)..GREATEST(APPROX)>, Free/Used, C<Total sbrk():
SBRKed/SBRKs:CONTINUOUS>, C<pad: 0>, C<heads: 2192>, C<chain: 0>, C<tail:
6144>

=item Example of using B<-DL> switch

C<717>, C<002>, C<054>, C<602>, C<702>, C<704>

=item B<-DL> details

C<!!!>, C<!!>, C<!>

=item Limitations of B<-DL> statistics

=back

=item SEE ALSO

=back

=head2 perldiag - various Perl diagnostics

=over

=item DESCRIPTION

=back

=head2 perlsec - Perl security

=over

=item DESCRIPTION
a2136 2
=back

a2138 2
=over

d2164 1
a2164 1
Discontinuance, Deprecation, Discontinuance
d2172 1
a2172 1
Numerical, Numerical, Numerical, Bitwise string ops
a2217 2
=back

a2219 2
=over

d2222 1
a2222 1
Not all Perl programs have to be portable, Nearly all of Perl already I<is>
d2231 1
a2231 3
=item Numbers endianness and Width

=item Files and Filesystems
a2242 4
=item Character sets and character encoding

=item Internationalisation

d2251 1
a2251 1
=item CPAN Testers
d2254 1
a2254 1
http://testers.cpan.org/
d2264 6
a2269 1
Build instructions for OS/2, L<perlos2>
d2271 4
a2274 1
=item S<Mac OS>
d2278 2
a2279 1
=item VOS
d2283 1
a2283 1
=item Acorn RISC OS
d2287 3
d2298 23
a2320 25
-I<X> FILEHANDLE, -I<X> EXPR, -I<X>, alarm SECONDS, alarm, binmode
FILEHANDLE, chmod LIST, chown LIST, chroot FILENAME, chroot, crypt
PLAINTEXT,SALT, dbmclose HASH, dbmopen HASH,DBNAME,MODE, dump LABEL, exec
LIST, fcntl FILEHANDLE,FUNCTION,SCALAR, flock FILEHANDLE,OPERATION, fork,
getlogin, getpgrp PID, getppid, getpriority WHICH,WHO, getpwnam NAME,
getgrnam NAME, getnetbyname NAME, getpwuid UID, getgrgid GID, getnetbyaddr
ADDR,ADDRTYPE, getprotobynumber NUMBER, getservbyport PORT,PROTO, getpwent,
getgrent, gethostent, getnetent, getprotoent, getservent, setpwent,
setgrent, sethostent STAYOPEN, setnetent STAYOPEN, setprotoent STAYOPEN,
setservent STAYOPEN, endpwent, endgrent, endhostent, endnetent,
endprotoent, endservent, getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob,
ioctl FILEHANDLE,FUNCTION,SCALAR, kill SIGNAL, LIST, link OLDFILE,NEWFILE,
lstat FILEHANDLE, lstat EXPR, lstat, msgctl ID,CMD,ARG, msgget KEY,FLAGS,
msgsnd ID,MSG,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, open FILEHANDLE,EXPR,
open FILEHANDLE, pipe READHANDLE,WRITEHANDLE, readlink EXPR, readlink,
select RBITS,WBITS,EBITS,TIMEOUT, semctl ID,SEMNUM,CMD,ARG, semget
KEY,NSEMS,FLAGS, semop KEY,OPSTRING, setgrent, setpgrp PID,PGRP,
setpriority WHICH,WHO,PRIORITY, setpwent, setsockopt
SOCKET,LEVEL,OPTNAME,OPTVAL, shmctl ID,CMD,ARG, shmget KEY,SIZE,FLAGS,
shmread ID,VAR,POS,SIZE, shmwrite ID,STRING,POS,SIZE, socketpair
SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, stat FILEHANDLE, stat EXPR, stat,
symlink OLDFILE,NEWFILE, syscall LIST, sysopen
FILEHANDLE,FILENAME,MODE,PERMS, system LIST, times, truncate
FILEHANDLE,LENGTH, truncate EXPR,LENGTH, umask EXPR, umask, utime LIST,
wait, waitpid PID,FLAGS
a2323 13
=item CHANGES

v1.47, 22 March 2000, v1.46, 12 February 2000, v1.45, 20 December 1999,
v1.44, 19 July 1999, v1.43, 24 May 1999, v1.42, 22 May 1999, v1.41, 19 May
1999, v1.40, 11 April 1999, v1.39, 11 February 1999, v1.38, 31 December
1998, v1.37, 19 December 1998, v1.36, 9 September 1998, v1.35, 13 August
1998, v1.33, 06 August 1998, v1.32, 05 August 1998, v1.30, 03 August 1998,
v1.23, 10 July 1998

=item Supported Platforms

=item SEE ALSO

a2327 2
=back

a2329 2
=over

a2331 2
=back

a2333 2
=over

a2355 2
=back

a2357 2
=over

a2359 2
=back

a2361 2
=over

a2401 2
=back

a2403 2
=over

a2431 2
=back

a2433 2
=over

d2522 1
a2522 5
=back

=head2 perlxstut, perlXStut - Tutorial for writing XSUBs

=over
a2525 2
=item SPECIAL NOTES

d2528 1
a2528 9
=item make

=item Version caveat

=item Dynamic Loading versus Static Loading

=back

=item TUTORIAL
d2530 1
a2530 1
=over
d2536 1
a2536 1
=item What has gone on?
d2538 1
a2538 1
=item Writing good test scripts
d2542 1
a2542 1
=item What's new here?
d2544 1
a2544 1
=item Input and Output Parameters
d2546 1
a2546 1
=item The XSUBPP Program
d2548 1
a2548 1
=item The TYPEMAP file
d2550 1
a2550 1
=item Warning about Output Arguments
d2554 1
a2554 3
=item What has happened here?

=item Anatomy of .xs file
d2556 1
a2556 1
=item Getting the fat out of XSUBs
d2558 1
a2558 1
=item More about XSUB arguments
d2560 1
a2560 1
=item The Argument Stack
d2562 1
a2562 1
=item Extending your Extension
d2564 1
a2564 1
=item Documenting your Extension
d2566 1
a2566 19
=item Installing your Extension

=item EXAMPLE 5

=item New Things in this Example

=item EXAMPLE 6 (Coming Soon)

=item EXAMPLE 7 (Coming Soon)

=item EXAMPLE 8 (Coming Soon)

=item EXAMPLE 9 (Coming Soon)

=item Troubleshooting these Examples

=back

=item See also
a2569 2
=over

d2574 1
a2574 5
=back

=head2 perlguts - Introduction to the Perl API

=over
d2623 5
a2627 6
*key, I32 length)>, C<SAVEDESTRUCTOR(DESTRUCTORFUNC_NOCONTEXT_t f, void
*p)>, C<SAVEDESTRUCTOR_X(DESTRUCTORFUNC_t f, void *p)>, C<SAVESTACK_POS()>,
C<SV* save_scalar(GV *gv)>, C<AV* save_ary(GV *gv)>, C<HV* save_hash(GV
*gv)>, C<void save_item(SV *item)>, C<void save_list(SV **sarg, I32
maxsarg)>, C<SV* save_svref(SV **sptr)>, C<void save_aptr(AV **aptr)>,
C<void save_hptr(HV **hptr)>
d2669 1
a2669 1
=item How multiple interpreters and concurrency are supported
d2671 47
a2717 9
=over

=item Background and PERL_IMPLICIT_CONTEXT

=item How do I use all this in extensions?

=item Future Plans and PERL_IMPLICIT_SYS

=back
a2720 4
=item SEE ALSO

=back

a2722 2
=over

d2727 1
a2727 1
=item THE CALL_ FUNCTIONS
d2729 1
a2729 1
call_sv, call_pv, call_method, call_argv
d2775 1
a2775 1
=item Using call_sv
d2777 1
a2777 1
=item Using call_argv
d2779 1
a2779 1
=item Using call_method
d2803 1
a2803 1
=back
d2805 1
a2805 1
=head2 perlcompile - Introduction to the Perl Compiler-Translator 
d2807 1
a2807 1
=over
d2809 1
a2809 1
=item DESCRIPTION
d2813 1
a2813 3
=item Layout

B::Bytecode, B::C, B::CC, B::Lint, B::Deparse, B::Xref
d2817 1
a2817 1
=item Using The Back Ends
d2821 1
a2821 1
=item The Cross Referencing Back End
d2823 1
a2823 1
i, &, s, r
d2825 1
a2825 1
=item The Decompiling Back End
d2827 1
a2827 1
=item The Lint Back End
d2829 1
a2829 1
=item The Simple C Back End
d2831 1
a2831 1
=item The Bytecode Back End
d2833 1
a2833 1
=item The Optimized C Back End
d2835 1
a2835 3
B, O, B::Asmdata, B::Assembler, B::Bblock, B::Bytecode, B::C, B::CC,
B::Debug, B::Deparse, B::Disassembler, B::Lint, B::Showlex, B::Stackobj,
B::Stash, B::Terse, B::Xref
d2837 1
a2837 1
=back
d2839 1
a2839 1
=item KNOWN PROBLEMS
d2841 1
a2841 1
=item AUTHOR
d2843 1
a2843 1
=back
d2845 1
a2845 1
=head2 perlapi - autogenerated documentation for the perl public API
d2847 1
a2847 1
=over
d2851 1
a2851 43
AvFILL, av_clear, av_extend, av_fetch, av_len, av_make, av_pop, av_push,
av_shift, av_store, av_undef, av_unshift, call_argv, call_method, call_pv,
call_sv, CLASS, Copy, croak, CvSTASH, dMARK, dORIGMARK, dSP, dXSARGS,
dXSI32, ENTER, eval_pv, eval_sv, EXTEND, fbm_compile, fbm_instr, FREETMPS,
get_av, get_cv, get_hv, get_sv, GIMME, GIMME_V, GvSV, gv_fetchmeth,
gv_fetchmethod, gv_fetchmethod_autoload, gv_stashpv, gv_stashsv, G_ARRAY,
G_DISCARD, G_EVAL, G_NOARGS, G_SCALAR, G_VOID, HEf_SVKEY, HeHASH, HeKEY,
HeKLEN, HePV, HeSVKEY, HeSVKEY_force, HeSVKEY_set, HeVAL, HvNAME, hv_clear,
hv_delete, hv_delete_ent, hv_exists, hv_exists_ent, hv_fetch, hv_fetch_ent,
hv_iterinit, hv_iterkey, hv_iterkeysv, hv_iternext, hv_iternextsv,
hv_iterval, hv_magic, hv_store, hv_store_ent, hv_undef, isALNUM, isALPHA,
isDIGIT, isLOWER, isSPACE, isUPPER, items, ix, LEAVE, looks_like_number,
MARK, mg_clear, mg_copy, mg_find, mg_free, mg_get, mg_length, mg_magical,
mg_set, Move, New, newAV, Newc, newCONSTSUB, newHV, newRV_inc, newRV_noinc,
NEWSV, newSViv, newSVnv, newSVpv, newSVpvf, newSVpvn, newSVrv, newSVsv,
newSVuv, newXS, newXSproto, Newz, Nullav, Nullch, Nullcv, Nullhv, Nullsv,
ORIGMARK, perl_alloc, perl_construct, perl_destruct, perl_free, perl_parse,
perl_run, PL_DBsingle, PL_DBsub, PL_DBtrace, PL_dowarn, PL_modglobal,
PL_na, PL_sv_no, PL_sv_undef, PL_sv_yes, POPi, POPl, POPn, POPp, POPs,
PUSHi, PUSHMARK, PUSHn, PUSHp, PUSHs, PUSHu, PUTBACK, Renew, Renewc,
require_pv, RETVAL, Safefree, savepv, savepvn, SAVETMPS, SP, SPAGAIN, ST,
strEQ, strGE, strGT, strLE, strLT, strNE, strnEQ, strnNE, StructCopy,
SvCUR, SvCUR_set, SvEND, SvGETMAGIC, SvGROW, SvIOK, SvIOKp, SvIOK_off,
SvIOK_on, SvIOK_only, SvIV, SvIVX, SvLEN, SvNIOK, SvNIOKp, SvNIOK_off,
SvNOK, SvNOKp, SvNOK_off, SvNOK_on, SvNOK_only, SvNV, SvNVX, SvOK, SvOOK,
SvPOK, SvPOKp, SvPOK_off, SvPOK_on, SvPOK_only, SvPV, SvPVX, SvPV_force,
SvPV_nolen, SvREFCNT, SvREFCNT_dec, SvREFCNT_inc, SvROK, SvROK_off,
SvROK_on, SvRV, SvSETMAGIC, SvSetSV, SvSetSV_nosteal, SvSTASH, SvTAINT,
SvTAINTED, SvTAINTED_off, SvTAINTED_on, SvTRUE, SvTYPE, svtype, SVt_IV,
SVt_NV, SVt_PV, SVt_PVAV, SVt_PVCV, SVt_PVHV, SVt_PVMG, SvUPGRADE, SvUV,
SvUVX, sv_2mortal, sv_bless, sv_catpv, sv_catpvf, sv_catpvf_mg, sv_catpvn,
sv_catpvn_mg, sv_catpv_mg, sv_catsv, sv_catsv_mg, sv_chop, sv_cmp, sv_dec,
sv_derived_from, sv_eq, sv_grow, sv_inc, sv_insert, sv_isa, sv_isobject,
sv_len, sv_magic, sv_mortalcopy, sv_newmortal, sv_setiv, sv_setiv_mg,
sv_setnv, sv_setnv_mg, sv_setpv, sv_setpvf, sv_setpvf_mg, sv_setpviv,
sv_setpviv_mg, sv_setpvn, sv_setpvn_mg, sv_setpv_mg, sv_setref_iv,
sv_setref_nv, sv_setref_pv, sv_setref_pvn, sv_setsv, sv_setsv_mg, sv_setuv,
sv_setuv_mg, sv_unref, sv_upgrade, sv_usepvn, sv_usepvn_mg, sv_vcatpvfn,
sv_vsetpvfn, THIS, toLOWER, toUPPER, warn, XPUSHi, XPUSHn, XPUSHp, XPUSHs,
XPUSHu, XS, XSRETURN, XSRETURN_EMPTY, XSRETURN_IV, XSRETURN_NO,
XSRETURN_NV, XSRETURN_PV, XSRETURN_UNDEF, XSRETURN_YES, XST_mIV, XST_mNO,
XST_mNV, XST_mPV, XST_mUNDEF, XST_mYES, XS_VERSION, XS_VERSION_BOOTCHECK,
Zero
d2853 1
a2853 1
=item AUTHORS
d2857 7
a2863 1
=back
d2865 1
a2865 2
=head2 perlintern - autogenerated documentation of purely B<internal> 
		 Perl functions
d2867 1
a2867 1
=over
d2871 3
a2873 1
=item AUTHORS
d2875 1
a2875 1
=item SEE ALSO
d2877 1
a2877 1
=back
d2879 1
a2879 1
=head2 perlhist - the Perl history records
d2881 1
a2881 1
=over
d2883 1
a2883 1
=item DESCRIPTION
d2885 1
a2885 1
=item INTRODUCTION
d2887 1
a2887 1
=item THE KEEPERS OF THE PUMPKIN
d2889 1
a2889 1
=over
d2891 2
a2892 1
=item PUMPKIN?
d2894 1
a2894 1
=back
d2896 1
a2896 1
=item THE RECORDS
d2900 1
a2900 1
=item SELECTED RELEASE SIZES
d2902 1
a2902 1
=item SELECTED PATCH SIZES
d2906 1
a2906 1
=item THE KEEPERS OF THE RECORDS
d2908 1
a2908 1
=back
d2910 1
a2910 1
=head1 PRAGMA DOCUMENTATION
d2912 1
a2912 1
=head2 attrs - set/get attributes of a subroutine (deprecated)
d2914 1
a2914 1
=over
d2920 4
a2923 1
method, locked
d2925 1
a2925 1
=back
d2927 1
a2927 1
=head2 re - Perl pragma to alter regular expression behaviour
d2929 1
a2929 1
=over
d2935 1
a2935 5
=back

=head2 attributes - get/set subroutine or variable attributes

=over
d2943 1
a2943 1
=item Built-in Attributes
d2945 1
a2945 1
locked, method, lvalue
d2947 1
a2947 1
=item Available Subroutines
d2949 1
a2949 1
get, reftype
d2951 1
a2951 1
=item Package-specific Attribute Handling
d2953 1
a2953 1
FETCH_I<type>_ATTRIBUTES, MODIFY_I<type>_ATTRIBUTES
d2955 2
a2956 1
=item Syntax of Attribute Lists
d2958 1
a2958 1
=back
d2960 1
a2960 1
=item EXPORTS
d2962 1
a2962 1
=over
d2964 1
a2964 1
=item Default exports
d2966 1
a2966 1
=item Available exports
d2968 1
a2968 1
=item Export tags defined
d2970 1
a2970 1
=back
d2972 1
a2972 1
=item EXAMPLES
d2974 1
a2974 1
=item SEE ALSO
d2976 1
a2976 1
=back
d2978 1
a2978 1
=head2 attrs - set/get attributes of a subroutine (deprecated)
d2980 1
a2980 1
=over
d2982 3
a2984 1
=item SYNOPSIS
d2986 1
a2986 1
=item DESCRIPTION
d2988 2
a2989 1
method, locked
d2993 1
a2993 1
=head2 autouse - postpone load of modules until a function is used
d2997 1
a2997 1
=item SYNOPSIS
d2999 1
a2999 1
=item DESCRIPTION
d3001 1
a3001 1
=item WARNING
d3003 1
a3003 1
=item AUTHOR
d3005 1
a3005 1
=item SEE ALSO
d3009 1
a3009 1
=head2 base - Establish IS-A relationship with base class at compile time
d3011 3
a3013 1
=over
d3015 1
a3015 1
=item SYNOPSIS
d3017 1
a3017 1
=item DESCRIPTION
d3019 1
a3019 1
=item HISTORY
d3021 1
a3021 1
=item SEE ALSO
d3023 1
a3023 1
=back
d3025 1
a3025 1
=head2 blib - Use MakeMaker's uninstalled version of a package
d3027 1
a3027 1
=over
d3029 1
a3029 1
=item SYNOPSIS
d3031 1
a3031 1
=item DESCRIPTION
d3035 1
a3035 8
=item AUTHOR

=back

=head2 bytes - Perl pragma to force byte semantics rather than character
semantics

=over
d3041 1
a3041 1
=item SEE ALSO
d3043 1
a3043 1
=back
d3045 1
a3045 2
=head2 charnames - define character names for C<\N{named}> string literal
escape.
d3047 1
a3047 1
=over
d3049 1
a3049 1
=item SYNOPSIS
d3051 1
a3051 1
=item DESCRIPTION
d3053 1
a3053 1
=item CUSTOM TRANSLATORS
d3055 1
a3055 1
=item BUGS
d3059 1
a3059 1
=head2 constant - Perl pragma to declare constants
d3061 1
a3061 1
=over
d3067 3
a3069 1
=item NOTES
d3071 1
a3071 1
=item TECHNICAL NOTE
d3073 1
a3073 1
=item BUGS
d3075 1
a3075 1
=item AUTHOR
d3077 1
a3077 1
=item COPYRIGHT
d3079 1
a3079 1
=back
d3081 1
a3081 2
=head2 diagnostics - Perl compiler pragma to force verbose warning
diagnostics
d3083 1
a3083 1
=over
d3091 1
a3091 1
=item The C<diagnostics> Pragma
d3093 1
a3093 1
=item The I<splain> Program
d3097 1
a3097 1
=item EXAMPLES
d3099 1
a3099 11
=item INTERNALS

=item BUGS

=item AUTHOR

=back

=head2 fields - compile-time class fields

=over
d3105 1
a3105 1
new, phash
d3107 1
a3107 1
=item SEE ALSO
d3109 1
a3109 1
=back
d3111 1
a3111 1
=head2 filetest - Perl pragma to control the filetest permission operators
d3113 1
a3113 1
=over
d3115 1
a3115 7
=item SYNOPSIS

=item DESCRIPTION

=over

=item subpragma access
d3119 1
a3119 1
=back
d3121 1
a3121 2
=head2 integer - Perl pragma to compute arithmetic in integer instead of
double
d3123 1
a3123 1
=over
d3129 1
a3129 3
=back

=head2 less - perl pragma to request less of something from the compiler
d3133 1
a3133 3
=item SYNOPSIS

=item DESCRIPTION
d3137 1
a3137 1
=head2 lib - manipulate @@INC at compile time
d3139 1
a3139 1
=over
d3145 2
d3149 1
a3149 1
=item Adding directories to @@INC
d3151 1
a3151 1
=item Deleting directories from @@INC
d3153 1
a3153 1
=item Restoring original @@INC
d3155 1
a3155 1
=back
d3157 1
a3157 1
=item SEE ALSO
d3159 1
a3159 1
=item AUTHOR
d3161 1
a3161 1
=back
d3163 1
a3163 2
=head2 locale - Perl pragma to use and avoid POSIX locales for built-in
operations
d3165 1
a3165 1
=over
d3167 1
a3167 1
=item SYNOPSIS
d3169 1
a3169 1
=item DESCRIPTION
d3171 1
a3171 1
=back
d3173 1
a3173 1
=head2 open - perl pragma to set default disciplines for input and output
d3175 1
a3175 1
=over
d3177 1
a3177 1
=item SYNOPSIS
d3179 1
a3179 1
=item DESCRIPTION
d3181 1
a3181 1
=item UNIMPLEMENTED FUNCTIONALITY
d3183 1
a3183 1
=item SEE ALSO
d3185 1
a3185 1
=back
d3187 1
a3187 1
=head2 ops - Perl pragma to restrict unsafe operations when compiling
d3189 2
a3190 1
=over
d3192 1
a3192 1
=item SYNOPSIS	
d3194 2
a3195 1
=item DESCRIPTION
d3197 1
a3197 1
=item SEE ALSO
d3199 1
a3199 1
=back
d3201 1
a3201 1
=head2 overload - Package for overloading perl operations
d3203 1
a3203 1
=over
d3205 1
a3205 1
=item SYNOPSIS
d3207 1
a3207 1
=item DESCRIPTION
d3209 1
a3209 1
=over
d3211 1
a3211 1
=item Declaration of overloaded functions
d3213 1
a3213 1
=item Calling Conventions for Binary Operations
d3215 1
a3215 1
FALSE, TRUE, C<undef>
d3217 1
a3217 1
=item Calling Conventions for Unary Operations
d3219 1
a3219 1
=item Calling Conventions for Mutators
d3221 1
a3221 1
C<++> and C<-->, C<x=> and other assignment versions
d3223 1
a3223 1
=item Overloadable Operations
d3225 1
a3225 3
I<Arithmetic operations>, I<Comparison operations>, I<Bit operations>,
I<Increment and decrement>, I<Transcendental functions>, I<Boolean, string
and numeric conversion>, I<Iteration>, I<Dereferencing>, I<Special>
d3227 1
a3227 1
=item Inheritance and overloading
d3229 1
a3229 2
Strings as values of C<use overload> directive, Overloading of an operation
is inherited by derived classes
d3231 1
a3231 1
=back
d3233 1
a3233 1
=item SPECIAL SYMBOLS FOR C<use overload>
d3235 1
a3235 1
=over
d3237 1
a3237 1
=item Last Resort
d3239 1
a3239 1
=item Fallback 
d3241 1
a3241 1
C<undef>, TRUE, defined, but FALSE
d3243 1
a3243 1
=item Copy Constructor
d3245 1
a3245 1
B<Example>
d3247 1
a3247 1
=back
d3249 1
a3249 1
=item MAGIC AUTOGENERATION
d3251 1
a3251 4
I<Assignment forms of arithmetic operations>, I<Conversion operations>,
I<Increment and decrement>, C<abs($a)>, I<Unary minus>, I<Negation>,
I<Concatenation>, I<Comparison operations>, I<Iterator>, I<Dereferencing>,
I<Copy operator>
d3253 1
a3253 1
=item Losing overloading
d3255 1
a3255 3
=item Run-time Overloading

=item Public functions
d3257 1
a3257 1
overload::StrVal(arg), overload::Overloaded(arg), overload::Method(obj,op)
d3259 1
a3259 1
=item Overloading constants
d3261 1
a3261 1
integer, float, binary, q, qr
d3263 4
a3266 1
=item IMPLEMENTATION
d3268 1
a3268 1
=item Metaphor clash
d3270 2
a3271 1
=item Cookbook
d3273 1
a3273 1
=over
d3275 1
a3275 1
=item Two-face scalars
d3277 1
a3277 1
=item Two-face references
d3279 1
a3279 1
=item Symbolic calculator
d3281 1
a3281 1
=item I<Really> symbolic calculator
d3283 1
a3283 1
=back
d3287 1
a3287 1
=item DIAGNOSTICS
d3289 1
a3289 1
=item BUGS
d3291 1
a3291 1
=back
d3293 1
a3293 1
=head2 re - Perl pragma to alter regular expression behaviour
d3295 1
a3295 1
=over
d3301 1
a3301 1
=back
d3303 7
a3309 1
=head2 sigtrap - Perl pragma to enable simple signal handling
d3311 1
a3311 1
=over
d3319 4
a3322 1
=over
d3324 1
a3324 1
=item SIGNAL HANDLERS
d3326 1
a3326 1
B<stack-trace>, B<die>, B<handler> I<your-handler>
d3328 1
a3328 1
=item SIGNAL LISTS
d3330 1
a3330 1
B<normal-signals>, B<error-signals>, B<old-interface-signals>
d3332 1
a3332 1
=item OTHER
d3334 1
a3334 1
B<untrapped>, B<any>, I<signal>, I<number>
d3336 3
a3338 1
=back
d3342 1
a3342 1
=back
d3344 1
a3344 1
=head2 strict - Perl pragma to restrict unsafe constructs
d3348 3
a3350 1
=item SYNOPSIS
d3352 1
a3352 1
=item DESCRIPTION
d3354 1
a3354 1
C<strict refs>, C<strict vars>, C<strict subs>
d3358 1
a3358 1
=head2 subs - Perl pragma to predeclare sub names
d3360 1
a3360 1
=over
d3366 1
a3366 1
=back
d3368 1
a3368 3
=head2 utf8 - Perl pragma to enable/disable UTF-8 in source code

=over
d3374 3
a3376 1
=item SEE ALSO
d3378 1
a3378 1
=back
d3380 1
a3380 1
=head2 vars - Perl pragma to predeclare global variable names (obsolete)
d3382 1
a3382 1
=over
d3388 1
a3388 1
=back
d3390 1
a3390 3
=head2 warnings - Perl pragma to control optional warnings

=over
d3396 6
a3401 2
use warnings::register, warnings::enabled([$category]),
warnings::warn([$category,] $message)
d3403 1
a3403 1
=back
d3405 1
a3405 1
=head1 MODULE DOCUMENTATION
d3407 1
a3407 1
=head2 AnyDBM_File - provide framework for multiple DBMs
d3409 1
a3409 1
=over
d3415 1
a3415 1
=over
d3417 1
a3417 1
=item DBM Comparisons
d3419 1
a3419 1
[0], [1], [2], [3]
d3421 1
a3421 1
=back
d3423 1
a3423 1
=item SEE ALSO
d3425 1
a3425 1
=back
d3427 1
a3427 1
=head2 AutoLoader - load subroutines only on demand
d3429 1
a3429 1
=over
d3435 3
a3437 1
=over
d3439 1
a3439 1
=item Subroutine Stubs
d3441 1
a3441 1
=item Using B<AutoLoader>'s AUTOLOAD Subroutine
d3443 1
a3443 1
=item Overriding B<AutoLoader>'s AUTOLOAD Subroutine
d3445 1
a3445 1
=item Package Lexicals
d3447 1
a3447 1
=item B<AutoLoader> vs. B<SelfLoader>
d3449 1
a3449 1
=back
d3451 1
a3451 1
=item CAVEATS
d3453 1
a3453 1
=item SEE ALSO
d3455 1
a3455 1
=back
d3457 1
a3457 1
=head2 AutoSplit - split a package for autoloading
d3459 1
a3459 1
=over
d3465 11
a3475 1
$keep, $check, $modtime
d3477 1
a3477 1
=over
d3479 1
a3479 1
=item Multiple packages
d3483 5
a3487 1
=item DIAGNOSTICS
d3489 1
a3489 1
=back
d3491 1
a3491 1
=head2 B - The Perl Compiler
d3493 1
a3493 1
=over
d3497 2
a3500 2
=item OVERVIEW OF CLASSES

d3503 1
a3503 1
=item SV-RELATED CLASSES
d3505 1
a3505 1
=item B::SV METHODS
d3507 3
a3509 1
REFCNT, FLAGS
d3511 1
a3511 1
=item B::IV METHODS
d3513 1
a3513 1
IV, IVX, needs64bits, packiv
d3515 1
a3515 1
=item B::NV METHODS
d3517 1
a3517 1
NV, NVX
d3519 1
a3519 1
=item B::RV METHODS
d3521 1
a3521 1
RV
d3523 1
a3523 1
=item B::PV METHODS
d3525 1
a3525 1
PV
d3527 1
a3527 1
=item B::PVMG METHODS
d3529 1
a3529 1
MAGIC, SvSTASH
d3531 1
a3531 1
=item B::MAGIC METHODS
d3533 1
a3533 1
MOREMAGIC, PRIVATE, TYPE, FLAGS, OBJ, PTR
d3535 1
a3535 1
=item B::PVLV METHODS
d3537 2
a3538 1
TARGOFF, TARGLEN, TYPE, TARG
d3540 1
a3540 1
=item B::BM METHODS
d3542 1
a3542 1
USEFUL, PREVIOUS, RARE, TABLE
d3544 1
a3544 1
=item B::GV METHODS
d3546 1
a3546 2
is_empty, NAME, STASH, SV, IO, FORM, AV, HV, EGV, CV, CVGEN, LINE, FILE,
FILEGV, GvREFCNT, FLAGS
d3548 1
a3548 1
=item B::IO METHODS
d3550 1
a3550 2
LINES, PAGE, PAGE_LEN, LINES_LEFT, TOP_NAME, TOP_GV, FMT_NAME, FMT_GV,
BOTTOM_NAME, BOTTOM_GV, SUBPROCESS, IoTYPE, IoFLAGS
d3552 1
a3552 1
=item B::AV METHODS
d3554 1
a3554 1
FILL, MAX, OFF, ARRAY, AvFLAGS
d3556 1
a3556 1
=item B::CV METHODS
d3558 1
a3558 2
STASH, START, ROOT, GV, FILE, DEPTH, PADLIST, OUTSIDE, XSUB, XSUBANY,
CvFLAGS
d3560 1
a3560 1
=item B::HV METHODS
d3562 1
a3562 1
FILL, MAX, KEYS, RITER, NAME, PMROOT, ARRAY
d3564 2
a3565 1
=item OP-RELATED CLASSES
d3567 1
a3567 1
=item B::OP METHODS
d3569 1
a3569 1
next, sibling, name, ppaddr, desc, targ, type, seq, flags, private
d3571 1
a3571 1
=item B::UNOP METHOD
d3573 1
a3573 1
first
d3575 1
a3575 1
=item B::BINOP METHOD
d3577 1
a3577 1
last
d3579 1
a3579 1
=item B::LOGOP METHOD
d3581 1
a3581 1
other
d3583 1
a3583 1
=item B::LISTOP METHOD
d3585 1
a3585 1
children
d3587 1
a3587 1
=item B::PMOP METHODS
d3589 1
a3589 1
pmreplroot, pmreplstart, pmnext, pmregexp, pmflags, pmpermflags, precomp
d3591 1
a3591 1
=item B::SVOP METHOD
d3593 1
a3593 1
sv, gv
d3595 1
a3595 1
=item B::PADOP METHOD
d3597 1
a3597 1
padix
d3599 1
a3599 1
=item B::PVOP METHOD
d3601 1
a3601 1
pv
d3603 1
a3603 1
=item B::LOOP METHODS
d3605 1
a3605 1
redoop, nextop, lastop
d3607 1
a3607 1
=item B::COP METHODS
d3609 1
a3609 1
label, stash, file, cop_seq, arybase, line
d3611 1
a3611 1
=back
d3613 1
a3613 1
=item FUNCTIONS EXPORTED BY C<B>
d3615 1
a3615 4
main_cv, init_av, main_root, main_start, comppadlist, sv_undef, sv_yes,
sv_no, amagic_generation, walkoptree(OP, METHOD), walkoptree_debug(DEBUG),
walksymtable(SYMREF, METHOD, RECURSE), svref_2object(SV), ppname(OPNUM),
hash(STR), cast_I32(I), minus_c, cstring(STR), class(OBJ), threadsv_names
d3617 1
a3617 1
=item AUTHOR
d3619 1
a3619 1
=back
d3621 1
a3621 2
=head2 B::Asmdata - Autogenerated data about Perl ops, used to generate
bytecode
d3623 1
a3623 1
=over
d3625 1
a3625 1
=item SYNOPSIS
d3627 1
a3627 1
=item DESCRIPTION
d3629 1
a3629 1
=item AUTHOR
d3631 1
a3631 1
=back
d3633 1
a3633 1
=head2 B::Assembler - Assemble Perl bytecode
d3635 1
a3635 1
=over
d3637 3
a3639 1
=item SYNOPSIS
d3641 1
a3641 3
=item DESCRIPTION

=item AUTHOR
d3645 1
a3645 1
=head2 B::Bblock - Walk basic blocks
d3647 2
a3648 1
=over
d3650 1
a3650 1
=item SYNOPSIS
d3652 3
a3654 1
=item DESCRIPTION
d3656 1
a3656 1
=item AUTHOR
d3658 1
a3658 3
=back

=head2 B::Bytecode - Perl compiler's bytecode backend
d3662 1
a3662 1
=item SYNOPSIS
d3664 1
a3664 1
=item DESCRIPTION
d3666 1
a3666 1
=item OPTIONS
d3668 6
a3673 3
B<-ofilename>, B<-afilename>, B<-->, B<-f>, B<-fcompress-nullops>,
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-fstrip-syntax-tree>,
B<-On>, B<-D>, B<-Do>, B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-m>
d3675 1
a3675 1
=item EXAMPLES
d3677 2
a3678 1
=item BUGS
d3680 1
a3680 1
=item AUTHOR
d3682 2
a3683 1
=back
d3685 1
a3685 1
=head2 B::C - Perl compiler's C backend
d3687 2
a3688 1
=over
d3690 1
a3690 1
=item SYNOPSIS
d3692 1
a3692 1
=item DESCRIPTION
d3694 1
a3694 1
=item OPTIONS
d3696 12
a3707 2
B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-D>, B<-Do>, B<-Dc>, B<-DA>,
B<-DC>, B<-DM>, B<-f>, B<-fcog>, B<-fno-cog>, B<-On>, B<-llimit>
d3709 1
a3709 1
=item EXAMPLES
d3713 1
a3713 5
=item AUTHOR

=back

=head2 B::CC - Perl compiler's optimized C translation backend
d3715 1
a3715 1
=over
d3721 3
a3723 1
=item OPTIONS
d3725 1
a3725 3
B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-mModulename>, B<-D>, B<-Dr>,
B<-DO>, B<-Ds>, B<-Dp>, B<-Dq>, B<-Dl>, B<-Dt>, B<-f>,
B<-ffreetmps-each-bblock>, B<-ffreetmps-each-loop>, B<-fomit-taint>, B<-On>
d3727 1
a3727 1
=item EXAMPLES
d3729 2
a3730 1
=item BUGS
d3732 1
a3732 1
=item DIFFERENCES
d3734 1
a3734 1
=over
d3736 1
a3736 1
=item Loops
d3738 1
a3738 1
=item Context of ".."
d3740 1
a3740 1
=item Arithmetic
d3742 1
a3742 1
=item Deprecated features
d3746 1
a3746 1
=item AUTHOR
d3748 1
a3748 1
=back
d3750 1
a3750 1
=head2 B::Debug - Walk Perl syntax tree, printing debug info about ops
d3752 1
a3752 1
=over
d3758 9
a3766 1
=item AUTHOR
d3768 1
a3768 1
=back
d3770 1
a3770 1
=head2 B::Deparse - Perl compiler backend to produce perl code
d3772 1
a3772 1
=over
d3774 1
a3774 1
=item SYNOPSIS
d3776 1
a3776 1
=item DESCRIPTION
d3778 1
a3778 1
=item OPTIONS
d3780 1
a3780 2
B<-l>, B<-p>, B<-q>, B<-u>I<PACKAGE>, B<-s>I<LETTERS>, B<C>, B<i>I<NUMBER>,
B<T>, B<v>I<STRING>B<.>
d3782 1
a3782 1
=item USING B::Deparse AS A MODULE
d3784 1
a3784 1
=over
d3786 1
a3786 1
=item Synopsis
d3788 1
a3788 1
=item Description
d3790 1
a3790 1
=item new
d3792 1
a3792 1
=item coderef2text
d3794 1
a3794 1
=back
d3796 1
a3796 1
=item BUGS
d3798 1
a3798 1
=item AUTHOR
d3800 1
a3800 1
=back
d3802 1
a3802 1
=head2 B::Disassembler - Disassemble Perl bytecode
d3804 1
a3804 1
=over
d3810 1
a3810 1
=item AUTHOR
d3812 1
a3812 3
=back

=head2 B::Lint - Perl lint
d3816 1
a3816 1
=item SYNOPSIS
d3818 1
a3818 1
=item DESCRIPTION
d3820 1
a3820 1
=item OPTIONS AND LINT CHECKS
d3822 1
a3822 2
B<context>, B<implicit-read> and B<implicit-write>, B<dollar-underscore>,
B<private-names>, B<undefined-subs>, B<regexp-variables>, B<all>, B<none>
d3824 1
a3824 1
=item NON LINT-CHECK OPTIONS
d3826 1
a3826 1
B<-u Package>
d3830 1
a3830 3
=item AUTHOR

=back
d3832 2
a3833 3
=head2 B::O, O - Generic interface to Perl Compiler backends

=over
d3839 1
a3839 1
=item CONVENTIONS
d3841 1
a3841 1
=item IMPLEMENTATION
d3843 1
a3843 1
=item AUTHOR
d3845 1
a3845 1
=back
d3847 1
a3847 1
=head2 B::Showlex - Show lexical variables used in functions or files
d3851 1
a3851 1
=item SYNOPSIS
d3853 3
a3855 1
=item DESCRIPTION
d3857 1
a3857 1
=item AUTHOR
d3859 1
a3859 1
=back
d3861 1
a3861 1
=head2 B::Stackobj - Helper module for CC backend
d3863 1
a3863 1
=over
d3865 1
a3865 1
=item SYNOPSIS
d3867 1
a3867 1
=item DESCRIPTION
d3869 1
a3869 1
=item AUTHOR
d3871 1
a3871 1
=back
d3873 1
a3873 1
=head2 B::Terse - Walk Perl syntax tree, printing terse info about ops
d3875 1
a3875 1
=over
d3877 1
a3877 1
=item SYNOPSIS
d3879 1
a3879 1
=item DESCRIPTION
d3881 1
a3881 1
=item AUTHOR
d3885 6
a3890 1
=head2 B::Xref - Generates cross reference reports for Perl programs
d3894 1
a3894 1
=item SYNOPSIS
d3896 1
a3896 1
=item DESCRIPTION
d3898 1
a3898 1
=item OPTIONS
d3900 1
a3900 1
C<-oFILENAME>, C<-r>, C<-D[tO]>
d3906 1
a3906 1
=back
d3908 1
a3908 3
=head2 Bblock, B::Bblock - Walk basic blocks

=over
d3914 4
a3917 1
=item AUTHOR
d3919 1
a3919 1
=back
d3921 1
a3921 1
=head2 Benchmark - benchmark running times of Perl code
d3923 1
a3923 1
=over
d3931 1
a3931 1
=item Methods
d3933 1
a3933 1
new, debug, iters
d3935 1
a3935 1
=item Standard Exports
d3937 1
a3937 3
timeit(COUNT, CODE), timethis ( COUNT, CODE, [ TITLE, [ STYLE ]] ),
timethese ( COUNT, CODEHASHREF, [ STYLE ] ), timediff ( T1, T2 ), timestr (
TIMEDIFF, [ STYLE, [ FORMAT ] ] )
d3939 1
a3939 1
=item Optional Exports
d3941 1
a3941 3
clearcache ( COUNT ), clearallcache ( ), cmpthese ( COUT, CODEHASHREF, [
STYLE ] ), cmpthese ( RESULTSHASHREF ), countit(TIME, CODE), disablecache (
), enablecache ( ), timesum ( T1, T2 )
d3943 1
a3943 1
=back
d3945 1
a3945 1
=item NOTES
d3947 2
a3948 1
=item EXAMPLES
d3950 1
a3950 1
=item INHERITANCE
d3952 1
a3952 1
=item CAVEATS
d3954 1
a3954 1
=item SEE ALSO
d3956 1
a3956 1
=item AUTHORS
d3958 1
a3958 1
=item MODIFICATION HISTORY
d3960 1
a3960 1
=back
d3962 1
a3962 1
=head2 ByteLoader - load byte compiled perl code
d3964 1
a3964 1
=over
d3970 1
a3970 1
=item AUTHOR
d3972 1
a3972 1
=item SEE ALSO
d3974 1
a3974 1
=back
d3976 1
a3976 1
=head2 Bytecode, B::Bytecode - Perl compiler's bytecode backend
d3978 1
a3978 1
=over
d3980 1
a3980 1
=item SYNOPSIS
d3982 1
a3982 1
=item DESCRIPTION
d3984 1
a3984 1
=item OPTIONS
d3986 1
a3986 3
B<-ofilename>, B<-afilename>, B<-->, B<-f>, B<-fcompress-nullops>,
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-fstrip-syntax-tree>,
B<-On>, B<-D>, B<-Do>, B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-m>
d3988 1
a3988 1
=item EXAMPLES
d3990 1
a3990 3
=item BUGS

=item AUTHOR
d3994 1
a3994 1
=head2 CGI - Simple Common Gateway Interface Class
d3998 1
a3998 1
=item SYNOPSIS
d4000 1
a4000 1
=item ABSTRACT
d4002 1
a4002 1
=item DESCRIPTION
d4004 1
a4004 1
=over
d4006 1
a4006 1
=item PROGRAMMING STYLE
d4008 1
a4008 1
=item CALLING CGI.PM ROUTINES
d4010 1
a4010 3
1. Use another name for the argument, if one is available.  Forexample,
-value is an alias for -values, 2. Change the capitalization, e.g. -Values,
3. Put quotes around the argument name, e.g. '-values'
d4012 1
a4012 1
=item CREATING A NEW QUERY OBJECT (OBJECT-ORIENTED STYLE):
d4014 1
a4014 1
=item CREATING A NEW QUERY OBJECT FROM AN INPUT FILE
d4016 1
a4016 1
=item FETCHING A LIST OF KEYWORDS FROM THE QUERY:
d4018 2
a4019 1
=item FETCHING THE NAMES OF ALL THE PARAMETERS PASSED TO YOUR SCRIPT:
d4021 1
a4021 1
=item FETCHING THE VALUE OR VALUES OF A SINGLE NAMED PARAMETER:
d4023 1
a4023 1
=item SETTING THE VALUE(S) OF A NAMED PARAMETER:
d4025 1
a4025 1
=item APPENDING ADDITIONAL VALUES TO A NAMED PARAMETER:
d4027 4
a4030 1
=item IMPORTING ALL PARAMETERS INTO A NAMESPACE:
d4032 1
a4032 1
=item DELETING A PARAMETER COMPLETELY:
d4034 1
a4034 1
=item DELETING ALL PARAMETERS:
d4036 1
a4036 1
=item DIRECT ACCESS TO THE PARAMETER LIST:
d4038 1
a4038 1
=item FETCHING THE PARAMETER LIST AS A HASH:
d4040 1
a4040 1
=item SAVING THE STATE OF THE SCRIPT TO A FILE:
d4042 1
a4042 1
=item RETRIEVING CGI ERRORS
d4044 1
a4044 1
=item USING THE FUNCTION-ORIENTED INTERFACE
d4046 1
a4046 2
B<:cgi>, B<:form>, B<:html2>, B<:html3>, B<:netscape>, B<:html>,
B<:standard>, B<:all>
d4048 1
a4048 1
=item PRAGMAS
d4050 1
a4050 2
-any, -compile, -nph, -newstyle_urls, -autoload, -no_debug,
-private_tempfiles
d4052 1
a4052 1
=item SPECIAL FORMS FOR IMPORTING HTML-TAG FUNCTIONS
d4054 1
a4054 3
1. start_table() (generates a <TABLE> tag), 2. end_table() (generates a
</TABLE> tag), 3. start_ul() (generates a <UL> tag), 4. end_ul() (generates
a </UL> tag)
d4058 1
a4058 1
=item GENERATING DYNAMIC DOCUMENTS
d4060 1
a4060 1
=over
d4062 1
a4062 1
=item CREATING A STANDARD HTTP HEADER:
d4064 1
a4064 1
=item GENERATING A REDIRECTION HEADER
d4066 1
a4066 1
=item CREATING THE HTML DOCUMENT HEADER
d4068 1
a4068 1
B<Parameters:>, 4, 5, 6..
d4070 2
a4071 1
=item ENDING THE HTML DOCUMENT:
d4073 1
a4073 1
=item CREATING A SELF-REFERENCING URL THAT PRESERVES STATE INFORMATION:
d4075 1
a4075 1
=item OBTAINING THE SCRIPT'S URL
d4077 1
a4077 2
B<-absolute>, B<-relative>, B<-full>, B<-path> (B<-path_info>), B<-query>
(B<-query_string>)
d4079 1
a4079 1
=item MIXING POST AND URL PARAMETERS
d4081 5
a4085 1
=back
d4087 1
a4087 1
=item CREATING STANDARD HTML ELEMENTS:
d4089 1
a4089 1
=over
d4091 1
a4091 1
=item PROVIDING ARGUMENTS TO HTML SHORTCUTS
d4093 11
a4103 1
=item THE DISTRIBUTIVE PROPERTY OF HTML SHORTCUTS
d4105 1
a4105 1
=item HTML SHORTCUTS AND LIST INTERPOLATION
d4107 1
a4107 3
=item NON-STANDARD HTML SHORTCUTS

=item PRETTY-PRINTING HTML
d4111 1
a4111 1
=item CREATING FILL-OUT FORMS:
d4113 1
a4113 1
=over
d4115 1
a4115 1
=item CREATING AN ISINDEX TAG
d4117 1
a4117 1
=item STARTING AND ENDING A FORM
d4119 1
a4119 1
B<application/x-www-form-urlencoded>, B<multipart/form-data>
d4121 1
a4121 1
=item CREATING A TEXT FIELD
d4123 1
a4123 1
B<Parameters>
d4125 1
a4125 1
=item CREATING A BIG TEXT FIELD
d4127 1
a4127 1
=item CREATING A PASSWORD FIELD
d4129 1
a4129 1
=item CREATING A FILE UPLOAD FIELD
d4131 1
a4131 1
B<Parameters>
d4133 2
a4134 1
=item CREATING A POPUP MENU
d4136 1
a4136 1
=item CREATING A SCROLLING LIST
d4138 1
a4138 1
B<Parameters:>
d4140 1
a4140 1
=item CREATING A GROUP OF RELATED CHECKBOXES
d4142 1
a4142 1
B<Parameters:>
d4144 1
a4144 1
=item CREATING A STANDALONE CHECKBOX
d4146 1
a4146 1
B<Parameters:>
d4148 1
a4148 1
=item CREATING A RADIO BUTTON GROUP
d4150 1
a4150 1
B<Parameters:>
d4152 1
a4152 1
=item CREATING A SUBMIT BUTTON 
d4154 1
a4154 1
B<Parameters:>
d4156 1
a4156 1
=item CREATING A RESET BUTTON
d4158 1
a4158 1
=item CREATING A DEFAULT BUTTON
d4160 1
a4160 1
=item CREATING A HIDDEN FIELD
d4162 1
a4162 1
B<Parameters:>
d4164 1
a4164 1
=item CREATING A CLICKABLE IMAGE BUTTON
d4166 1
a4166 3
B<Parameters:>, 3.The third option (-align, optional) is an alignment type,
and may be
TOP, BOTTOM or MIDDLE
d4168 1
a4168 1
=item CREATING A JAVASCRIPT ACTION BUTTON
d4170 2
a4171 1
=back
d4173 1
a4173 1
=item HTTP COOKIES
d4175 1
a4175 2
1. an expiration time, 2. a domain, 3. a path, 4. a "secure" flag,
B<-name>, B<-value>, B<-path>, B<-domain>, B<-expires>, B<-secure>
d4177 3
a4179 1
=item WORKING WITH FRAMES
d4181 1
a4181 3
1. Create a <Frameset> document, 2. Specify the destination for the
document in the HTTP header, 3. Specify the destination for the document in
the <FORM> tag
d4183 1
a4183 1
=item LIMITED SUPPORT FOR CASCADING STYLE SHEETS
d4185 1
a4185 1
=item DEBUGGING
d4187 1
a4187 1
=over
d4189 1
a4189 1
=item DUMPING OUT ALL THE NAME/VALUE PAIRS
d4191 1
a4191 1
=back
d4193 1
a4193 1
=item FETCHING ENVIRONMENT VARIABLES
d4195 1
a4195 6
B<Accept()>, B<raw_cookie()>, B<user_agent()>, B<path_info()>,
B<path_translated()>, B<remote_host()>, B<script_name()>Return the script
name as a partial URL, for self-refering
scripts, B<referer()>, B<auth_type ()>, B<server_name ()>, B<virtual_host
()>, B<server_software ()>, B<remote_user ()>, B<user_name ()>,
B<request_method()>, B<content_type()>, B<http()>, B<https()>
d4197 2
a4198 1
=item USING NPH SCRIPTS
d4200 1
a4200 2
In the B<use> statement, By calling the B<nph()> method:, By using B<-nph>
parameters in the B<header()> and B<redirect()>  statements:
d4202 1
a4202 1
=item Server Push
d4204 1
a4204 1
multipart_init(), multipart_start(), multipart_end()
d4206 1
a4206 1
=item Avoiding Denial of Service Attacks
d4208 1
a4208 2
B<$CGI::POST_MAX>, B<$CGI::DISABLE_UPLOADS>, B<1. On a script-by-script
basis>, B<2. Globally for all scripts>
d4210 1
a4210 1
=item COMPATIBILITY WITH CGI-LIB.PL
d4212 1
a4212 1
=item AUTHOR INFORMATION
d4214 1
a4214 3050
=item CREDITS

Matt Heffron (heffron@@falstaff.css.beckman.com), James Taylor
(james.taylor@@srs.gov), Scott Anguish <sanguish@@digifix.com>, Mike Jewell
(mlj3u@@virginia.edu), Timothy Shimmin (tes@@kbs.citri.edu.au), Joergen Haegg
(jh@@axis.se), Laurent Delfosse (delfosse@@delfosse.com), Richard Resnick
(applepi1@@aol.com), Craig Bishop (csb@@barwonwater.vic.gov.au), Tony Curtis
(tc@@vcpc.univie.ac.at), Tim Bunce (Tim.Bunce@@ig.co.uk), Tom Christiansen
(tchrist@@convex.com), Andreas Koenig (k@@franz.ww.TU-Berlin.DE), Tim
MacKenzie (Tim.MacKenzie@@fulcrum.com.au), Kevin B. Hendricks
(kbhend@@dogwood.tyler.wm.edu), Stephen Dahmen (joyfire@@inxpress.net), Ed
Jordan (ed@@fidalgo.net), David Alan Pisoni (david@@cnation.com), Doug
MacEachern (dougm@@opengroup.org), Robin Houston (robin@@oneworld.org),
...and many many more..

=item A COMPLETE EXAMPLE OF A SIMPLE FORM-BASED SCRIPT

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Apache - Backward compatibility module for CGI.pm

=over

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Carp, B<CGI::Carp> - CGI routines for writing to the HTTPD (or
other) error log

=over

=item SYNOPSIS

=item DESCRIPTION

=item REDIRECTING ERROR MESSAGES

=item MAKING PERL ERRORS APPEAR IN THE BROWSER WINDOW

=over

=item Changing the default message

=back

=item CHANGE LOG

=item AUTHORS

=item SEE ALSO

=back

=head2 CGI::Cookie - Interface to Netscape Cookies

=over

=item SYNOPSIS

=item DESCRIPTION

=item USING CGI::Cookie

B<1. expiration date>, B<2. domain>, B<3. path>, B<4. secure flag>

=over

=item Creating New Cookies

=item Sending the Cookie to the Browser

=item Recovering Previous Cookies

=item Manipulating Cookies

B<name()>, B<value()>, B<domain()>, B<path()>, B<expires()>

=back

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Fast - CGI Interface for Fast CGI

=over

=item SYNOPSIS

=item DESCRIPTION

=item OTHER PIECES OF THE PUZZLE

=item WRITING FASTCGI PERL SCRIPTS

=item INSTALLING FASTCGI SCRIPTS

=item USING FASTCGI SCRIPTS AS CGI SCRIPTS

=item CAVEATS

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Pretty - module to produce nicely formatted HTML code

=over

=item SYNOPSIS

=item DESCRIPTION

=over

=item Tags that won't be formatted

=item Customizing the Indenting

=back

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 CGI::Push - Simple Interface to Server Push

=over

=item SYNOPSIS

=item DESCRIPTION

=item USING CGI::Push

-next_page, -last_page, -type, -delay, -cookie, -target, -expires

=over

=item Heterogeneous Pages

=item Changing the Page Delay on the Fly

=back

=item INSTALLING CGI::Push SCRIPTS

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Switch - Backward compatibility module for defunct CGI::Switch

=over

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CPAN - query, download and build perl modules from CPAN sites

=over

=item SYNOPSIS

=item DESCRIPTION

=over

=item Interactive Mode

Searching for authors, bundles, distribution files and modules, make, test,
install, clean	modules or distributions, get, readme, look module or
distribution, Signals

=item CPAN::Shell

=item autobundle

=item recompile

=item The four C<CPAN::*> Classes: Author, Bundle, Module, Distribution

=item ProgrammerE<39>s interface

expand($type,@@things), Programming Examples

=item Methods in the four Classes

=item Cache Manager

=item Bundles

=item Prerequisites

=item Finding packages and VERSION

=item Debugging

=item Floppy, Zip, Offline Mode

=back

=item CONFIGURATION

C<o conf E<lt>scalar optionE<gt>>, C<o conf E<lt>scalar optionE<gt>
E<lt>valueE<gt>>, C<o conf E<lt>list optionE<gt>>, C<o conf E<lt>list
optionE<gt> [shift|pop]>, C<o conf E<lt>list optionE<gt>
[unshift|push|splice] E<lt>listE<gt>>

=over

=item Note on urllist parameter's format

=item urllist parameter has CD-ROM support

=back

=item SECURITY

=item EXPORT

=item POPULATE AN INSTALLATION WITH LOTS OF MODULES

=item WORKING WITH CPAN.pm BEHIND FIREWALLS

http firewall, ftp firewall, One way visibility, SOCKS, IP Masquerade

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 CPAN::FirstTime - Utility for CPAN::Config file Initialization

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 CPANox, CPAN::Nox - Wrapper around CPAN.pm without using any XS
module

=over

=item SYNOPSIS

=item DESCRIPTION

=item  SEE ALSO

=back

=head2 Carp, carp    - warn of errors (from perspective of caller)

=over

=item SYNOPSIS

=item DESCRIPTION

=over

=item Forcing a Stack Trace

=back

=item BUGS

=back

=head2 Carp::Heavy - Carp guts

=over

=item SYNOPIS

=item DESCRIPTION

=back

=head2 Class::Struct - declare struct-like datatypes as Perl classes

=over

=item SYNOPSIS

=item DESCRIPTION

=over

=item The C<struct()> function

=item Element Types and Accessor Methods

Scalar (C<'$'> or C<'*$'>), Array (C<'@@'> or C<'*@@'>), Hash (C<'%'> or
C<'*%'>), Class (C<'Class_Name'> or C<'*Class_Name'>)

=item Initializing with C<new>

=back

=item EXAMPLES

Example 1, Example 2, Example 3

=item Author and Modification History

=back

=head2 Config - access Perl configuration information

=over

=item SYNOPSIS

=item DESCRIPTION

myconfig(), config_sh(), config_vars(@@names)

=item EXAMPLE

=item WARNING

=item GLOSSARY

=over

=item _

C<_a>, C<_exe>, C<_o>

=item a

C<afs>, C<alignbytes>, C<ansi2knr>, C<aphostname>, C<api_revision>,
C<api_subversion>, C<api_version>, C<api_versionstring>, C<ar>, C<archlib>,
C<archlibexp>, C<archname64>, C<archname>, C<archobjs>, C<awk>

=item b

C<baserev>, C<bash>, C<bin>, C<bincompat5005>, C<binexp>, C<bison>,
C<byacc>, C<byteorder>

=item c

C<c>, C<castflags>, C<cat>, C<cc>, C<cccdlflags>, C<ccdlflags>, C<ccflags>,
C<ccsymbols>, C<cf_by>, C<cf_email>, C<cf_time>, C<charsize>, C<chgrp>,
C<chmod>, C<chown>, C<clocktype>, C<comm>, C<compress>

=item C

C<CONFIGDOTSH>, C<contains>, C<cp>, C<cpio>, C<cpp>, C<cpp_stuff>,
C<cppccsymbols>, C<cppflags>, C<cpplast>, C<cppminus>, C<cpprun>,
C<cppstdin>, C<cppsymbols>, C<crosscompile>, C<cryptlib>, C<csh>

=item d

C<d_access>, C<d_accessx>, C<d_alarm>, C<d_archlib>, C<d_atolf>,
C<d_atoll>, C<d_attribut>, C<d_bcmp>, C<d_bcopy>, C<d_bincompat5005>,
C<d_bsd>, C<d_bsdgetpgrp>, C<d_bsdsetpgrp>, C<d_bzero>, C<d_casti32>,
C<d_castneg>, C<d_charvspr>, C<d_chown>, C<d_chroot>, C<d_chsize>,
C<d_closedir>, C<d_const>, C<d_crypt>, C<d_csh>, C<d_cuserid>,
C<d_dbl_dig>, C<d_difftime>, C<d_dirnamlen>, C<d_dlerror>, C<d_dlopen>,
C<d_dlsymun>, C<d_dosuid>, C<d_drand48proto>, C<d_dup2>, C<d_eaccess>,
C<d_endgrent>, C<d_endhent>, C<d_endnent>, C<d_endpent>, C<d_endpwent>,
C<d_endsent>, C<d_endspent>, C<d_eofnblk>, C<d_eunice>, C<d_fchmod>,
C<d_fchown>, C<d_fcntl>, C<d_fd_macros>, C<d_fd_set>, C<d_fds_bits>,
C<d_fgetpos>, C<d_flexfnam>, C<d_flock>, C<d_fork>, C<d_fpathconf>,
C<d_fpos64_t>, C<d_fs_data_s>, C<d_fseeko>, C<d_fsetpos>, C<d_fstatfs>,
C<d_fstatvfs>, C<d_ftello>, C<d_ftime>, C<d_Gconvert>, C<d_getcwd>,
C<d_getfsstat>, C<d_getgrent>, C<d_getgrps>, C<d_gethbyaddr>,
C<d_gethbyname>, C<d_gethent>, C<d_gethname>, C<d_gethostprotos>,
C<d_getlogin>, C<d_getmnt>, C<d_getmntent>, C<d_getnbyaddr>,
C<d_getnbyname>, C<d_getnent>, C<d_getnetprotos>, C<d_getpbyname>,
C<d_getpbynumber>, C<d_getpent>, C<d_getpgid>, C<d_getpgrp2>, C<d_getpgrp>,
C<d_getppid>, C<d_getprior>, C<d_getprotoprotos>, C<d_getpwent>,
C<d_getsbyname>, C<d_getsbyport>, C<d_getsent>, C<d_getservprotos>,
C<d_getspent>, C<d_getspnam>, C<d_gettimeod>, C<d_gnulibc>, C<d_grpasswd>,
C<d_hasmntopt>, C<d_htonl>, C<d_iconv>, C<d_index>, C<d_inetaton>,
C<d_int64_t>, C<d_isascii>, C<d_killpg>, C<d_lchown>, C<d_ldbl_dig>,
C<d_link>, C<d_locconv>, C<d_lockf>, C<d_longdbl>, C<d_longlong>,
C<d_lseekproto>, C<d_lstat>, C<d_madvise>, C<d_mblen>, C<d_mbstowcs>,
C<d_mbtowc>, C<d_memchr>, C<d_memcmp>, C<d_memcpy>, C<d_memmove>,
C<d_memset>, C<d_mkdir>, C<d_mkdtemp>, C<d_mkfifo>, C<d_mkstemp>,
C<d_mkstemps>, C<d_mktime>, C<d_mmap>, C<d_mprotect>, C<d_msg>,
C<d_msg_ctrunc>, C<d_msg_dontroute>, C<d_msg_oob>, C<d_msg_peek>,
C<d_msg_proxy>, C<d_msgctl>, C<d_msgget>, C<d_msgrcv>, C<d_msgsnd>,
C<d_msync>, C<d_munmap>, C<d_mymalloc>, C<d_nice>, C<d_nv_preserves_uv>,
C<d_off64_t>, C<d_old_pthread_create_joinable>, C<d_oldpthreads>,
C<d_oldsock>, C<d_open3>, C<d_pathconf>, C<d_pause>, C<d_phostname>,
C<d_pipe>, C<d_poll>, C<d_portable>, C<d_PRId64>, C<d_PRIeldbl>,
C<d_PRIEldbl>, C<d_PRIfldbl>, C<d_PRIFldbl>, C<d_PRIgldbl>, C<d_PRIGldbl>,
C<d_PRIi64>, C<d_PRIo64>, C<d_PRIu64>, C<d_PRIx64>, C<d_PRIX64>,
C<d_pthread_yield>, C<d_pwage>, C<d_pwchange>, C<d_pwclass>,
C<d_pwcomment>, C<d_pwexpire>, C<d_pwgecos>, C<d_pwpasswd>, C<d_pwquota>,
C<d_qgcvt>, C<d_quad>, C<d_readdir>, C<d_readlink>, C<d_rename>,
C<d_rewinddir>, C<d_rmdir>, C<d_safebcpy>, C<d_safemcpy>, C<d_sanemcmp>,
C<d_sched_yield>, C<d_scm_rights>, C<d_seekdir>, C<d_select>, C<d_sem>,
C<d_semctl>, C<d_semctl_semid_ds>, C<d_semctl_semun>, C<d_semget>,
C<d_semop>, C<d_setegid>, C<d_seteuid>, C<d_setgrent>, C<d_setgrps>,
C<d_sethent>, C<d_setlinebuf>, C<d_setlocale>, C<d_setnent>, C<d_setpent>,
C<d_setpgid>, C<d_setpgrp2>, C<d_setpgrp>, C<d_setprior>, C<d_setpwent>,
C<d_setregid>, C<d_setresgid>, C<d_setresuid>, C<d_setreuid>, C<d_setrgid>,
C<d_setruid>, C<d_setsent>, C<d_setsid>, C<d_setspent>, C<d_setvbuf>,
C<d_sfio>, C<d_shm>, C<d_shmat>, C<d_shmatprototype>, C<d_shmctl>,
C<d_shmdt>, C<d_shmget>, C<d_sigaction>, C<d_sigsetjmp>, C<d_socket>,
C<d_socklen_t>, C<d_sockpair>, C<d_sqrtl>, C<d_statblks>,
C<d_statfs_f_flags>, C<d_statfs_s>, C<d_statvfs>, C<d_stdio_cnt_lval>,
C<d_stdio_ptr_lval>, C<d_stdio_stream_array>, C<d_stdiobase>,
C<d_stdstdio>, C<d_strchr>, C<d_strcoll>, C<d_strctcpy>, C<d_strerrm>,
C<d_strerror>, C<d_strtod>, C<d_strtol>, C<d_strtold>, C<d_strtoll>,
C<d_strtoul>, C<d_strtoull>, C<d_strtouq>, C<d_strxfrm>, C<d_suidsafe>,
C<d_symlink>, C<d_syscall>, C<d_sysconf>, C<d_sysernlst>, C<d_syserrlst>,
C<d_system>, C<d_tcgetpgrp>, C<d_tcsetpgrp>, C<d_telldir>,
C<d_telldirproto>, C<d_time>, C<d_times>, C<d_truncate>, C<d_tzname>,
C<d_umask>, C<d_uname>, C<d_union_semun>, C<d_ustat>, C<d_vendorarch>,
C<d_vendorbin>, C<d_vendorlib>, C<d_vfork>, C<d_void_closedir>,
C<d_voidsig>, C<d_voidtty>, C<d_volatile>, C<d_vprintf>, C<d_wait4>,
C<d_waitpid>, C<d_wcstombs>, C<d_wctomb>, C<d_xenix>, C<date>,
C<db_hashtype>, C<db_prefixtype>, C<defvoidused>, C<direntrytype>,
C<dlext>, C<dlsrc>, C<doublesize>, C<drand01>, C<dynamic_ext>

=item e

C<eagain>, C<ebcdic>, C<echo>, C<egrep>, C<emacs>, C<eunicefix>,
C<exe_ext>, C<expr>, C<extensions>

=item f

C<fflushall>, C<fflushNULL>, C<find>, C<firstmakefile>, C<flex>,
C<fpossize>, C<fpostype>, C<freetype>, C<full_ar>, C<full_csh>, C<full_sed>

=item g

C<gccversion>, C<gidformat>, C<gidsign>, C<gidsize>, C<gidtype>,
C<glibpth>, C<grep>, C<groupcat>, C<groupstype>, C<gzip>

=item h

C<h_fcntl>, C<h_sysfile>, C<hint>, C<hostcat>, C<huge>

=item i

C<i16size>, C<i16type>, C<i32size>, C<i32type>, C<i64size>, C<i64type>,
C<i8size>, C<i8type>, C<i_arpainet>, C<i_bsdioctl>, C<i_db>, C<i_dbm>,
C<i_dirent>, C<i_dld>, C<i_dlfcn>, C<i_fcntl>, C<i_float>, C<i_gdbm>,
C<i_grp>, C<i_iconv>, C<i_ieeefp>, C<i_inttypes>, C<i_limits>, C<i_locale>,
C<i_machcthr>, C<i_malloc>, C<i_math>, C<i_memory>, C<i_mntent>, C<i_ndbm>,
C<i_netdb>, C<i_neterrno>, C<i_netinettcp>, C<i_niin>, C<i_poll>,
C<i_pthread>, C<i_pwd>, C<i_rpcsvcdbm>, C<i_sfio>, C<i_sgtty>, C<i_shadow>,
C<i_socks>, C<i_stdarg>, C<i_stddef>, C<i_stdlib>, C<i_string>,
C<i_sunmath>, C<i_sysaccess>, C<i_sysdir>, C<i_sysfile>, C<i_sysfilio>,
C<i_sysin>, C<i_sysioctl>, C<i_syslog>, C<i_sysmman>, C<i_sysmode>,
C<i_sysmount>, C<i_sysndir>, C<i_sysparam>, C<i_sysresrc>, C<i_syssecrt>,
C<i_sysselct>, C<i_syssockio>, C<i_sysstat>, C<i_sysstatfs>,
C<i_sysstatvfs>, C<i_systime>, C<i_systimek>, C<i_systimes>, C<i_systypes>,
C<i_sysuio>, C<i_sysun>, C<i_sysutsname>, C<i_sysvfs>, C<i_syswait>,
C<i_termio>, C<i_termios>, C<i_time>, C<i_unistd>, C<i_ustat>, C<i_utime>,
C<i_values>, C<i_varargs>, C<i_varhdr>, C<i_vfork>,
C<ignore_versioned_solibs>, C<inc_version_list>, C<inc_version_list_init>,
C<incpath>, C<inews>, C<installarchlib>, C<installbin>, C<installman1dir>,
C<installman3dir>, C<installprefix>, C<installprefixexp>,
C<installprivlib>, C<installscript>, C<installsitearch>, C<installsitebin>,
C<installsitelib>, C<installstyle>, C<installusrbinperl>,
C<installvendorarch>, C<installvendorbin>, C<installvendorlib>, C<intsize>,
C<ivdformat>, C<ivsize>, C<ivtype>

=item k

C<known_extensions>, C<ksh>

=item l

C<large>, C<ld>, C<lddlflags>, C<ldflags>, C<ldlibpthname>, C<less>,
C<lib_ext>, C<libc>, C<libperl>, C<libpth>, C<libs>, C<libsdirs>,
C<libsfiles>, C<libsfound>, C<libspath>, C<libswanted>, C<line>, C<lint>,
C<lkflags>, C<ln>, C<lns>, C<locincpth>, C<loclibpth>, C<longdblsize>,
C<longlongsize>, C<longsize>, C<lp>, C<lpr>, C<ls>, C<lseeksize>,
C<lseektype>

=item m

C<mail>, C<mailx>, C<make>, C<make_set_make>, C<mallocobj>, C<mallocsrc>,
C<malloctype>, C<man1dir>, C<man1direxp>, C<man1ext>, C<man3dir>,
C<man3direxp>, C<man3ext>

=item M

C<Mcc>, C<medium>, C<mips_type>, C<mkdir>, C<mmaptype>, C<models>,
C<modetype>, C<more>, C<multiarch>, C<mv>, C<myarchname>, C<mydomain>,
C<myhostname>, C<myuname>

=item n

C<n>, C<netdb_hlen_type>, C<netdb_host_type>, C<netdb_name_type>,
C<netdb_net_type>, C<nm>, C<nm_opt>, C<nm_so_opt>, C<nonxs_ext>, C<nroff>,
C<nvsize>, C<nvtype>

=item o

C<o_nonblock>, C<obj_ext>, C<old_pthread_create_joinable>, C<optimize>,
C<orderlib>, C<osname>, C<osvers>

=item p

C<package>, C<pager>, C<passcat>, C<patchlevel>, C<path_sep>, C<perl5>,
C<perl>

=item P

C<PERL_REVISION>, C<PERL_SUBVERSION>, C<PERL_VERSION>, C<perladmin>,
C<perlpath>, C<pg>, C<phostname>, C<pidtype>, C<plibpth>, C<pm_apiversion>,
C<pmake>, C<pr>, C<prefix>, C<prefixexp>, C<privlib>, C<privlibexp>,
C<prototype>, C<ptrsize>

=item q

C<quadkind>, C<quadtype>

=item r

C<randbits>, C<randfunc>, C<randseedtype>, C<ranlib>, C<rd_nodata>,
C<revision>, C<rm>, C<rmail>, C<runnm>

=item s

C<sched_yield>, C<scriptdir>, C<scriptdirexp>, C<sed>, C<seedfunc>,
C<selectminbits>, C<selecttype>, C<sendmail>, C<sh>, C<shar>, C<sharpbang>,
C<shmattype>, C<shortsize>, C<shrpenv>, C<shsharp>, C<sig_count>,
C<sig_name>, C<sig_name_init>, C<sig_num>, C<sig_num_init>, C<signal_t>,
C<sitearch>, C<sitearchexp>, C<sitebin>, C<sitebinexp>, C<sitelib>,
C<sitelib_stem>, C<sitelibexp>, C<siteprefix>, C<siteprefixexp>,
C<sizesize>, C<sizetype>, C<sleep>, C<smail>, C<small>, C<so>,
C<sockethdr>, C<socketlib>, C<socksizetype>, C<sort>, C<spackage>,
C<spitshell>, C<split>, C<sPRId64>, C<sPRIeldbl>, C<sPRIEldbl>,
C<sPRIfldbl>, C<sPRIFldbl>, C<sPRIgldbl>, C<sPRIGldbl>, C<sPRIi64>,
C<sPRIo64>, C<sPRIu64>, C<sPRIx64>, C<sPRIX64>, C<src>, C<ssizetype>,
C<startperl>, C<startsh>, C<static_ext>, C<stdchar>, C<stdio_base>,
C<stdio_bufsiz>, C<stdio_cnt>, C<stdio_filbuf>, C<stdio_ptr>,
C<stdio_stream_array>, C<strings>, C<submit>, C<subversion>, C<sysman>

=item t

C<tail>, C<tar>, C<tbl>, C<tee>, C<test>, C<timeincl>, C<timetype>,
C<touch>, C<tr>, C<trnl>, C<troff>

=item u

C<u16size>, C<u16type>, C<u32size>, C<u32type>, C<u64size>, C<u64type>,
C<u8size>, C<u8type>, C<uidformat>, C<uidsign>, C<uidsize>, C<uidtype>,
C<uname>, C<uniq>, C<uquadtype>, C<use5005threads>, C<use64bitall>,
C<use64bitint>, C<usedl>, C<useithreads>, C<uselargefiles>,
C<uselongdouble>, C<usemorebits>, C<usemultiplicity>, C<usemymalloc>,
C<usenm>, C<useopcode>, C<useperlio>, C<useposix>, C<usesfio>,
C<useshrplib>, C<usesocks>, C<usethreads>, C<usevendorprefix>, C<usevfork>,
C<usrinc>, C<uuname>, C<uvoformat>, C<uvsize>, C<uvtype>, C<uvuformat>,
C<uvxformat>

=item v

C<vendorarch>, C<vendorarchexp>, C<vendorbin>, C<vendorbinexp>,
C<vendorlib>, C<vendorlib_stem>, C<vendorlibexp>, C<vendorprefix>,
C<vendorprefixexp>, C<version>, C<vi>, C<voidflags>

=item x

C<xlibpth>, C<xs_apiversion>

=item z

C<zcat>, C<zip>

=back

=item NOTE

=back

=head2 Cwd, getcwd - get pathname of current working directory

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 DB - programmatic interface to the Perl debugging API (draft,
subject to
change)

=over

=item SYNOPSIS

=item DESCRIPTION

=over

=item Global Variables

 $DB::sub,  %DB::sub,  $DB::single,  $DB::signal,  $DB::trace,	@@DB::args, 
@@DB::dbline,  %DB::dbline,  $DB::package,  $DB::filename,  $DB::subname, 
$DB::lineno

=item API Methods

CLIENT->register(), CLIENT->evalcode(STRING), CLIENT->skippkg('D::hide'),
CLIENT->run(), CLIENT->step(), CLIENT->next(), CLIENT->done()

=item Client Callback Methods

CLIENT->init(), CLIENT->prestop([STRING]), CLIENT->stop(), CLIENT->idle(),
CLIENT->poststop([STRING]), CLIENT->evalcode(STRING), CLIENT->cleanup(),
CLIENT->output(LIST)

=back

=item BUGS

=item AUTHOR

=back

=head2 DB_File - Perl5 access to Berkeley DB version 1.x

=over

=item SYNOPSIS

=item DESCRIPTION

B<DB_HASH>, B<DB_BTREE>, B<DB_RECNO>

=over

=item Using DB_File with Berkeley DB version 2 or 3

=item Interface to Berkeley DB

=item Opening a Berkeley DB Database File

=item Default Parameters

=item In Memory Databases

=back

=item DB_HASH

=over

=item A Simple Example

=back

=item DB_BTREE

=over

=item Changing the BTREE sort order

=item Handling Duplicate Keys 

=item The get_dup() Method

=item The find_dup() Method

=item The del_dup() Method

=item Matching Partial Keys 

=back

=item DB_RECNO

=over

=item The 'bval' Option

=item A Simple Example

=item Extra RECNO Methods

B<$X-E<gt>push(list) ;>, B<$value = $X-E<gt>pop ;>, B<$X-E<gt>shift>,
B<$X-E<gt>unshift(list) ;>, B<$X-E<gt>length>

=item Another Example

=back

=item THE API INTERFACE

B<$status = $X-E<gt>get($key, $value [, $flags]) ;>, B<$status =
$X-E<gt>put($key, $value [, $flags]) ;>, B<$status = $X-E<gt>del($key [,
$flags]) ;>, B<$status = $X-E<gt>fd ;>, B<$status = $X-E<gt>seq($key,
$value, $flags) ;>, B<$status = $X-E<gt>sync([$flags]) ;>

=item DBM FILTERS

B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>

=over

=item The Filter

=item An Example -- the NULL termination problem.

=item Another Example -- Key is a C int.

=back

=item HINTS AND TIPS 

=over

=item Locking: The Trouble with fd

=item Safe ways to lock a database

B<Tie::DB_Lock>, B<Tie::DB_LockFile>, B<DB_File::Lock>

=item Sharing Databases With C Applications

=item The untie() Gotcha

=back

=item COMMON QUESTIONS

=over

=item Why is there Perl source in my database?

=item How do I store complex data structures with DB_File?

=item What does "Invalid Argument" mean?

=item What does "Bareword 'DB_File' not allowed" mean? 

=back

=item REFERENCES

=item HISTORY

=item BUGS

=item AVAILABILITY

=item COPYRIGHT

=item SEE ALSO

=item AUTHOR

=back

=head2 Data::Dumper - stringified perl data structures, suitable for both
printing and C<eval>

=over

=item SYNOPSIS

=item DESCRIPTION

=over

=item Methods

I<PACKAGE>->new(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Dump  I<or> 
I<PACKAGE>->Dump(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Seen(I<[HASHREF]>),
I<$OBJ>->Values(I<[ARRAYREF]>), I<$OBJ>->Names(I<[ARRAYREF]>),
I<$OBJ>->Reset

=item Functions

Dumper(I<LIST>)

=item Configuration Variables or Methods

$Data::Dumper::Indent  I<or>  I<$OBJ>->Indent(I<[NEWVAL]>),
$Data::Dumper::Purity  I<or>  I<$OBJ>->Purity(I<[NEWVAL]>),
$Data::Dumper::Pad  I<or>  I<$OBJ>->Pad(I<[NEWVAL]>),
$Data::Dumper::Varname	I<or>  I<$OBJ>->Varname(I<[NEWVAL]>),
$Data::Dumper::Useqq  I<or>  I<$OBJ>->Useqq(I<[NEWVAL]>),
$Data::Dumper::Terse  I<or>  I<$OBJ>->Terse(I<[NEWVAL]>),
$Data::Dumper::Freezer	I<or>  $I<OBJ>->Freezer(I<[NEWVAL]>),
$Data::Dumper::Toaster	I<or>  $I<OBJ>->Toaster(I<[NEWVAL]>),
$Data::Dumper::Deepcopy  I<or>	$I<OBJ>->Deepcopy(I<[NEWVAL]>),
$Data::Dumper::Quotekeys  I<or>  $I<OBJ>->Quotekeys(I<[NEWVAL]>),
$Data::Dumper::Bless  I<or>  $I<OBJ>->Bless(I<[NEWVAL]>),
$Data::Dumper::Maxdepth  I<or>	$I<OBJ>->Maxdepth(I<[NEWVAL]>)

=item Exports

Dumper

=back

=item EXAMPLES

=item BUGS

=item AUTHOR

=item VERSION

=item SEE ALSO

=back

=head2 Devel::DProf - a Perl code profiler

=over

=item SYNOPSIS

=item DESCRIPTION

=item PROFILE FORMAT

=item AUTOLOAD

=item ENVIRONMENT

=item BUGS

=item SEE ALSO

=back

=head2 Devel::Peek - A data debugging tool for the XS programmer

=over

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=over

=item A simple scalar string

=item A simple scalar number

=item A simple scalar with an extra reference

=item A reference to a simple scalar

=item A reference to an array

=item A reference to a hash

=item Dumping a large array or hash

=item A reference to an SV which holds a C pointer

=item A reference to a subroutine

=back

=item EXPORTS

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 Devel::SelfStubber - generate stubs for a SelfLoading module

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 DirHandle - supply object methods for directory handles

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 Dumpvalue - provides screen dump of Perl data.

=over

=item SYNOPSIS

=item DESCRIPTION

=over

=item Creation

C<arrayDepth>, C<hashDepth>, C<compactDump>, C<veryCompact>, C<globPrint>,
C<DumpDBFiles>, C<DumpPackages>, C<DumpReused>, C<tick>, C<HighBit>,
C<printUndef>, C<UsageOnly>, unctrl, subdump, bareStringify, quoteHighBit,
stopDbSignal

=item Methods

dumpValue, dumpValues, dumpvars, set_quote, set_unctrl, compactDump,
veryCompact, set, get

=back

=back

=head2 DynaLoader - Dynamically load C libraries into Perl code

=over

=item SYNOPSIS

=item DESCRIPTION

@@dl_library_path, @@dl_resolve_using, @@dl_require_symbols, @@dl_librefs,
@@dl_modules, dl_error(), $dl_debug, dl_findfile(), dl_expandspec(),
dl_load_file(), dl_unload_file(), dl_loadflags(), dl_find_symbol(),
dl_find_symbol_anywhere(), dl_undef_symbols(), dl_install_xsub(),
bootstrap()

=item AUTHOR

=back

=head2 DynaLoader::XSLoader, XSLoader - Dynamically load C libraries into
Perl code

=over

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 English - use nice English (or awk) names for ugly punctuation
variables

=over

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=back

=head2 Env - perl module that imports environment variables as scalars or
arrays

=over

=item SYNOPSIS

=item DESCRIPTION

=item LIMITATIONS

=item AUTHOR

=back

=head2 Errno - System errno constants

=over

=item SYNOPSIS

=item DESCRIPTION

=item CAVEATS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Exporter - Implements default import method for modules

=over

=item SYNOPSIS

=item DESCRIPTION

=over

=item How to Export

=item Selecting What To Export

=item Specialised Import Lists

=item Exporting without using Export's import method

=item Module Version Checking

=item Managing Unknown Symbols

=item Tag Handling Utility Functions

=back

=back

=head2 Exporter::Heavy - Exporter guts

=over

=item SYNOPIS

=item DESCRIPTION

=back

=head2 ExtUtils::Command - utilities to replace common UNIX commands in
Makefiles etc.

=over

=item SYNOPSIS

=item DESCRIPTION

=back

cat

eqtime src dst

rm_f files...

rm_f files...

touch files ..

mv source... destination

cp source... destination

chmod mode files..

mkpath directory..

test_f file

=over

=item BUGS

=item SEE ALSO 

=item AUTHOR

=back

=head2 ExtUtils::Embed - Utilities for embedding Perl in C/C++ applications

=over

=item SYNOPSIS

=item DESCRIPTION

=item @@EXPORT

=item FUNCTIONS

xsinit(), Examples, ldopts(), Examples, perl_inc(), ccflags(), ccdlflags(),
ccopts(), xsi_header(), xsi_protos(@@modules), xsi_body(@@modules)

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=back

=head2 ExtUtils::Install - install files from here to there

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::Installed - Inventory management of installed modules

=over

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=item FUNCTIONS

new(), modules(), files(), directories(), directory_tree(), validate(),
packlist(), version()

=item EXAMPLE

=item AUTHOR

=back

=head2 ExtUtils::Liblist - determine libraries to use and how to use them

=over

=item SYNOPSIS

=item DESCRIPTION

For static extensions, For dynamic extensions, For dynamic extensions

=over

=item EXTRALIBS

=item LDLOADLIBS and LD_RUN_PATH

=item BSLOADLIBS

=back

=item PORTABILITY

=over

=item VMS implementation

=item Win32 implementation

=back

=item SEE ALSO

=back

=head2 ExtUtils::MM_Cygwin - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over

=item SYNOPSIS

=item DESCRIPTION

canonpath, cflags, manifypods, perl_archive

=back

=head2 ExtUtils::MM_OS2 - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker

=over

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over

=item Preloaded methods

canonpath

=back

=back

catdir

catfile

curdir

rootdir

updir

=over

=item SelfLoaded methods

c_o (o)

=back

cflags (o)

clean (o)

const_cccmd (o)

const_config (o)

const_loadlibs (o)

constants (o)

depend (o)

dir_target (o)

dist (o)

dist_basics (o)

dist_ci (o)

dist_core (o)

dist_dir (o)

dist_test (o)

dlsyms (o)

dynamic (o)

dynamic_bs (o)

dynamic_lib (o)

exescan

extliblist

file_name_is_absolute

find_perl

=over

=item Methods to actually produce chunks of text for the Makefile

fixin

=back

force (o)

guess_name

has_link_code

htmlifypods (o)

init_dirscan

init_main

init_others

install (o)

installbin (o)

libscan (o)

linkext (o)

lsdir

macro (o)

makeaperl (o)

makefile (o)

manifypods (o)

maybe_command

maybe_command_in_dirs

needs_linking (o)

nicetext

parse_version

parse_abstract

pasthru (o)

path

perl_script

perldepend (o)

ppd

perm_rw (o)

perm_rwx (o)

pm_to_blib

post_constants (o)

post_initialize (o)

postamble (o)

prefixify

processPL (o)

realclean (o)

replace_manpage_separator

static (o)

static_lib (o)

staticmake (o)

subdir_x (o)

subdirs (o)

test (o)

test_via_harness (o)

test_via_script (o)

tool_autosplit (o)

tools_other (o)

tool_xsubpp (o)

top_targets (o)

writedoc

xs_c (o)

xs_cpp (o)

xs_o (o)

perl_archive

export_list

=over

=item SEE ALSO

=back

=head2 ExtUtils::MM_VMS - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over

=item SYNOPSIS

=item DESCRIPTION

=over

=item Methods always loaded

wraplist

=back

=back

rootdir (override)

=over

=item SelfLoaded methods

guess_name (override)

=back

find_perl (override)

path (override)

maybe_command (override)

maybe_command_in_dirs (override)

perl_script (override)

file_name_is_absolute (override)

replace_manpage_separator

init_others (override)

constants (override)

cflags (override)

const_cccmd (override)

pm_to_blib (override)

tool_autosplit (override)

tool_sxubpp (override)

xsubpp_version (override)

tools_other (override)

dist (override)

c_o (override)

xs_c (override)

xs_o (override)

top_targets (override)

dlsyms (override)

dynamic_lib (override)

dynamic_bs (override)

static_lib (override)

manifypods (override)

processPL (override)

installbin (override)

subdir_x (override)

clean (override)

realclean (override)

dist_basics (override)

dist_core (override)

dist_dir (override)

dist_test (override)

install (override)

perldepend (override)

makefile (override)

test (override)

test_via_harness (override)

test_via_script (override)

makeaperl (override)

nicetext (override)

=head2 ExtUtils::MM_Win32 - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over

=item SYNOPSIS

=item DESCRIPTION

=back

catfile

constants (o)

static_lib (o)

dynamic_bs (o)

dynamic_lib (o)

canonpath

perl_script

pm_to_blib

test_via_harness (o)

tool_autosplit (override)

tools_other (o)

xs_o (o)

top_targets (o)

htmlifypods (o)

manifypods (o)

dist_ci (o)

dist_core (o)

pasthru (o)

=head2 ExtUtils::MakeMaker - create an extension Makefile

=over

=item SYNOPSIS

=item DESCRIPTION

=over

=item How To Write A Makefile.PL

=item Default Makefile Behaviour

=item make test

=item make testdb

=item make install

=item PREFIX and LIB attribute

=item AFS users

=item Static Linking of a new Perl Binary

=item Determination of Perl Library and Installation Locations

=item Which architecture dependent directory?

=item Using Attributes and Parameters

AUTHOR, ABSTRACT, ABSTRACT_FROM, BINARY_LOCATION, C, CAPI, CCFLAGS, CONFIG,
CONFIGURE, DEFINE, DIR, DISTNAME, DL_FUNCS, DL_VARS, EXCLUDE_EXT,
EXE_FILES, FIRST_MAKEFILE, FULLPERL, FUNCLIST, H, HTMLLIBPODS,
HTMLSCRIPTPODS, IMPORTS, INC, INCLUDE_EXT, INSTALLARCHLIB, INSTALLBIN,
INSTALLDIRS, INSTALLHTMLPRIVLIBDIR, INSTALLHTMLSCRIPTDIR,
INSTALLHTMLSITELIBDIR, INSTALLMAN1DIR, INSTALLMAN3DIR, INSTALLPRIVLIB,
INSTALLSCRIPT, INSTALLSITEARCH, INSTALLSITELIB, INST_ARCHLIB, INST_BIN,
INST_EXE, INST_LIB, INST_HTMLLIBDIR, INST_HTMLSCRIPTDIR, INST_MAN1DIR,
INST_MAN3DIR, INST_SCRIPT, PERL_MALLOC_OK, LDFROM, LIB, LIBPERL_A, LIBS,
LINKTYPE, MAKEAPERL, MAKEFILE, MAN1PODS, MAN3PODS, MAP_TARGET, MYEXTLIB,
NAME, NEEDS_LINKING, NOECHO, NORECURS, NO_VC, OBJECT, OPTIMIZE, PERL,
PERLMAINCC, PERL_ARCHLIB, PERL_LIB, PERL_SRC, PERM_RW, PERM_RWX, PL_FILES,
PM, PMLIBDIRS, POLLUTE, PPM_INSTALL_EXEC, PPM_INSTALL_SCRIPT, PREFIX,
PREREQ_PM, SKIP, TYPEMAPS, VERSION, VERSION_FROM, XS, XSOPT, XSPROTOARG,
XS_VERSION

=item Additional lowercase attributes

clean, depend, dist, dynamic_lib, linkext, macro, realclean, test,
tool_autosplit

=item Overriding MakeMaker Methods

=item Hintsfile support

=item Distribution Support

   make distcheck,    make skipcheck,	 make distclean,    make manifest, 
  make distdir,    make tardist,    make dist,	  make uutardist,    make
shdist,    make zipdist,    make ci

=item Disabling an extension

=back

=item ENVIRONMENT

PERL_MM_OPT

=item SEE ALSO

=item AUTHORS

=back

=head2 ExtUtils::Manifest - utilities to write and check a MANIFEST file

=over

=item SYNOPSIS

=item DESCRIPTION

=item MANIFEST.SKIP

=item EXPORT_OK

=item GLOBAL VARIABLES

=item DIAGNOSTICS

C<Not in MANIFEST:> I<file>, C<No such file:> I<file>, C<MANIFEST:> I<$!>,
C<Added to MANIFEST:> I<file>

=item SEE ALSO

=item AUTHOR

=back

=head2 ExtUtils::Miniperl, writemain - write the C code for perlmain.c

=over

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=back

=head2 ExtUtils::Mkbootstrap - make a bootstrap file for use by DynaLoader

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::Mksymlists - write linker options files for dynamic
extension

=over

=item SYNOPSIS

=item DESCRIPTION

DLBASE, DL_FUNCS, DL_VARS, FILE, FUNCLIST, IMPORTS, NAME

=item AUTHOR

=item REVISION

=back

=head2 ExtUtils::Packlist - manage .packlist files

=over

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=item FUNCTIONS

new(), read(), write(), validate(), packlist_file()

=item EXAMPLE

=item AUTHOR

=back

=head2 ExtUtils::testlib - add blib/* directories to @@INC

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 Fatal - replace functions with equivalents which succeed or die

=over

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 Fcntl - load the C Fcntl.h defines

=over

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item EXPORTED SYMBOLS

=back

=head2 File::Basename, fileparse - split a pathname into pieces

=over

=item SYNOPSIS

=item DESCRIPTION

fileparse_set_fstype, fileparse

=item EXAMPLES

C<basename>, C<dirname>

=back

=head2 File::CheckTree, validate - run many filetest checks on a tree

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 File::Compare - Compare files or filehandles

=over

=item SYNOPSIS

=item DESCRIPTION

=item RETURN

=item AUTHOR

=back

=head2 File::Copy - Copy files or filehandles

=over

=item SYNOPSIS

=item DESCRIPTION

=over

=item Special behaviour if C<syscopy> is defined (OS/2, VMS and Win32)

rmscopy($from,$to[,$date_flag])

=back

=item RETURN

=item AUTHOR

=back

=head2 File::DosGlob - DOS like globbing and then some

=over

=item SYNOPSIS

=item DESCRIPTION

=item EXPORTS (by request only)

=item BUGS

=item AUTHOR

=item HISTORY

=item SEE ALSO

=back

=head2 File::Find, find - traverse a file tree

=over

=item SYNOPSIS

=item DESCRIPTION

C<wanted>, C<bydepth>, C<follow>, C<follow_fast>, C<follow_skip>,
C<no_chdir>, C<untaint>, C<untaint_pattern>, C<untaint_skip>

=item CAVEAT

=back

=head2 File::Glob - Perl extension for BSD glob routine

=over

=item SYNOPSIS

=item DESCRIPTION

C<GLOB_ERR>, C<GLOB_MARK>, C<GLOB_NOCASE>, C<GLOB_NOCHECK>, C<GLOB_NOSORT>,
C<GLOB_BRACE>, C<GLOB_NOMAGIC>, C<GLOB_QUOTE>, C<GLOB_TILDE>, C<GLOB_CSH>

=item DIAGNOSTICS

C<GLOB_NOSPACE>, C<GLOB_ABEND>

=item NOTES

=item AUTHOR

=back

=head2 File::Path - create or remove directory trees

=over

=item SYNOPSIS

=item DESCRIPTION

=item AUTHORS

=back

=head2 File::Spec - portably perform operations on file names

=over

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHORS

=back

=head2 File::Spec::Functions - portably perform operations on file names

=over

=item SYNOPSIS

=item DESCRIPTION

=over

=item Exports

=back

=item SEE ALSO

=back

=head2 File::Spec::Mac - File::Spec for MacOS

=over

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

canonpath

=back

catdir

catfile

curdir

devnull

rootdir

tmpdir

updir

file_name_is_absolute

path

splitpath

splitdir

catpath

abs2rel

rel2abs

=over

=item SEE ALSO

=back

=head2 File::Spec::OS2 - methods for OS/2 file specs

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 File::Spec::Unix - methods used by File::Spec

=over

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

canonpath

=back

catdir

catfile

curdir

devnull

rootdir

tmpdir

updir

no_upwards

case_tolerant

file_name_is_absolute

path

join

splitpath

splitdir

catpath

abs2rel

rel2abs

=over

=item SEE ALSO

=back

=head2 File::Spec::VMS - methods for VMS file specs

=over

=item SYNOPSIS

=item DESCRIPTION

eliminate_macros

=back

fixpath

=over

=item Methods always loaded

canonpath (override)

=back

catdir

catfile

curdir (override)

devnull (override)

rootdir (override)

tmpdir (override)

updir (override)

case_tolerant (override)

path (override)

file_name_is_absolute (override)

splitpath (override)

splitdir (override)

catpath (override)

abs2rel (override)

rel2abs (override)

=over

=item SEE ALSO

=back

=head2 File::Spec::Win32 - methods for Win32 file specs

=over

=item SYNOPSIS

=item DESCRIPTION

devnull

=back

tmpdir

catfile

canonpath

splitpath

splitdir

catpath

abs2rel

rel2abs

=over

=item SEE ALSO

=back

=head2 File::stat - by-name interface to Perl's built-in stat() functions

=over

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item AUTHOR

=back

=head2 FileCache - keep more files open than the system permits

=over

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=back

=head2 FileHandle - supply object methods for filehandles

=over

=item SYNOPSIS

=item DESCRIPTION

$fh->print, $fh->printf, $fh->getline, $fh->getlines

=item SEE ALSO

=back

=head2 FindBin - Locate directory of original perl script

=over

=item SYNOPSIS

=item DESCRIPTION

=item EXPORTABLE VARIABLES

=item KNOWN BUGS

=item AUTHORS

=item COPYRIGHT

=back

=head2 GDBM_File - Perl5 access to the gdbm library.

=over

=item SYNOPSIS

=item DESCRIPTION

=item AVAILABILITY

=item BUGS

=item SEE ALSO

=back

=head2 Getopt::Long - Extended processing of command line options

=over

=item SYNOPSIS

=item DESCRIPTION

=item Command Line Options, an Introduction

=item Getting Started with Getopt::Long

=over

=item Simple options

=item A little bit less simple options

=item Mixing command line option with other arguments

=item Options with values

=item Options with multiple values

=item Options with hash values

=item User-defined subroutines to handle options

=item Options with multiple names

=item Case and abbreviations

=item Summary of Option Specifications

!, +, s, i, f, : I<type> [ I<desttype> ]

=back

=item Advanced Possibilities

=over

=item Documentation and help texts

=item Storing options in a hash

=item Bundling

=item The lonesome dash

=item Argument call-back

=back

=item Configuring Getopt::Long

default, auto_abbrev, getopt_compat, require_order, permute, bundling
(default: reset), bundling_override (default: reset), ignore_case 
(default: set), ignore_case_always (default: reset), pass_through (default:
reset), prefix, prefix_pattern, debug (default: reset)

=item Return values and Errors

=item Legacy

=over

=item Default destinations

=item Alternative option starters

=item Configuration variables

=back

=item AUTHOR

=item COPYRIGHT AND DISCLAIMER

=back

=head2 Getopt::Std, getopt - Process single-character switches with switch
clustering

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 I18N::Collate - compare 8-bit scalar data according to the current
locale

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 IO - load various IO modules

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 IO::Dir - supply object methods for directory handles

=over

=item SYNOPSIS

=item DESCRIPTION

new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, IO::Dir, DIRNAME [, OPTIONS ]

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::File - supply object methods for filehandles

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile

=item METHODS

open( FILENAME [,MODE [,PERMS]] )

=item SEE ALSO

=item HISTORY

=back

=head2 IO::Handle - supply object methods for I/O handles

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new (), new_from_fd ( FD, MODE )

=item METHODS

$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint

=item NOTE

=item SEE ALSO

=item BUGS

=item HISTORY

=back

=head2 IO::Pipe - supply object methods for pipes

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [READER, WRITER] )

=item METHODS

reader ([ARGS]), writer ([ARGS]), handles ()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Poll - Object interface to system poll call

=over

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Seekable - supply seek based methods for I/O objects

=over

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item HISTORY

=back

=head2 IO::Select - OO interface to the select system call

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ HANDLES ] )

=item METHODS

add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, ERROR [, TIMEOUT ] )

=item EXAMPLE

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Socket - Object interface to socket communications

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), timeout([VAL]),
sockopt(OPT [, VAL]), sockdomain, socktype, protocol, connected

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Socket::INET - Object interface for AF_INET domain sockets

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=over

=item METHODS

sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Socket::UNIX - Object interface for AF_UNIX domain sockets

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

hostpath(), peerpath()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Dir, IO::Dir - supply object methods for directory
handles

=over

=item SYNOPSIS

=item DESCRIPTION

new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, IO::Dir, DIRNAME [, OPTIONS ]

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::File, IO::File - supply object methods for filehandles

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile

=item METHODS

open( FILENAME [,MODE [,PERMS]] )

=item SEE ALSO

=item HISTORY

=back

=head2 IO::lib::IO::Handle, IO::Handle - supply object methods for I/O
handles

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new (), new_from_fd ( FD, MODE )

=item METHODS

$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint

=item NOTE

=item SEE ALSO

=item BUGS

=item HISTORY

=back

=head2 IO::lib::IO::Pipe, IO::Pipe - supply object methods for pipes

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [READER, WRITER] )

=item METHODS

reader ([ARGS]), writer ([ARGS]), handles ()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Poll, IO::Poll - Object interface to system poll call

=over

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Seekable, IO::Seekable - supply seek based methods for
I/O objects

=over

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item HISTORY

=back

=head2 IO::lib::IO::Select, IO::Select - OO interface to the select system
call

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ HANDLES ] )

=item METHODS

add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, ERROR [, TIMEOUT ] )

=item EXAMPLE

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Socket, IO::Socket - Object interface to socket
communications

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), timeout([VAL]),
sockopt(OPT [, VAL]), sockdomain, socktype, protocol, connected

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Socket::INET, IO::Socket::INET - Object interface for
AF_INET domain sockets

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=over

=item METHODS

sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Socket::UNIX, IO::Socket::UNIX - Object interface for
AF_UNIX domain sockets

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

hostpath(), peerpath()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::Msg - SysV Msg IPC object class

=over

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::Open2, open2 - open a process for both reading and writing

=over

=item SYNOPSIS

=item DESCRIPTION

=item WARNING 

=item SEE ALSO

=back

=head2 IPC::Open3, open3 - open a process for reading, writing, and error
handling

=over

=item SYNOPSIS

=item DESCRIPTION

=item WARNING

=back

=head2 IPC::Semaphore - SysV Semaphore IPC object class

=over

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::SysV - SysV IPC constants

=over

=item SYNOPSIS

=item DESCRIPTION

ftok( PATH, ID )

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 IPC::SysV::Msg, IPC::Msg - SysV Msg IPC object class

=over

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::SysV::Semaphore, IPC::Semaphore - SysV Semaphore IPC object
class

=over

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 Math::BigFloat - Arbitrary length float math package

=over

=item SYNOPSIS

=item DESCRIPTION

number format, Error returns 'NaN', Division is computed to, Rounding is
performed

=item BUGS

=item AUTHOR

=back

=head2 Math::BigInt - Arbitrary size integer math package

=over

=item SYNOPSIS

=item DESCRIPTION

Canonical notation, Input, Output

=item EXAMPLES

=item Autocreating constants

=item BUGS

=item AUTHOR

=back

=head2 Math::Trig - trigonometric functions

=over

=item SYNOPSIS

=item DESCRIPTION

=item TRIGONOMETRIC FUNCTIONS

B<tan>

=over

=item ERRORS DUE TO DIVISION BY ZERO

=item SIMPLE (REAL) ARGUMENTS, COMPLEX RESULTS

=back

=item PLANE ANGLE CONVERSIONS

=item RADIAL COORDINATE CONVERSIONS

=over

=item COORDINATE SYSTEMS

=item 3-D ANGLE CONVERSIONS

cartesian_to_cylindrical, cartesian_to_spherical, cylindrical_to_cartesian,
cylindrical_to_spherical, spherical_to_cartesian, spherical_to_cylindrical

=back

=item GREAT CIRCLE DISTANCES

=item EXAMPLES

=item BUGS

=item AUTHORS

=back

=head2 NDBM_File - Tied access to ndbm files

=over

=item SYNOPSIS
d4218 1
a4218 1
=back
d4220 1
a4220 1
=head2 Net::Ping - check a remote host for reachability
d4222 2
a4223 1
=over
d4225 1
a4225 31
=item SYNOPSIS

=item DESCRIPTION

=over

=item Functions

Net::Ping->new([$proto [, $def_timeout [, $bytes]]]);, $p->ping($host [,
$timeout]);, $p->close();, pingecho($host [, $timeout]);

=back

=item WARNING

=item NOTES

=back

=head2 Net::hostent - by-name interface to Perl's built-in gethost*()
functions

=over

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLES

=item NOTE
d4229 1
a4229 6
=back

=head2 Net::netent - by-name interface to Perl's built-in getnet*()
functions

=over
d4235 1
a4235 10
=item EXAMPLES

=item NOTE

=item AUTHOR

=back

=head2 Net::protoent - by-name interface to Perl's built-in getproto*()
functions
d4239 1
a4239 1
=item SYNOPSIS
d4241 1
a4241 1
=item DESCRIPTION
d4243 1
a4243 3
=item NOTE

=item AUTHOR
d4247 1
a4247 2
=head2 Net::servent - by-name interface to Perl's built-in getserv*()
functions
d4251 1
a4251 1
=item SYNOPSIS
d4253 1
a4253 63
=item DESCRIPTION

=item EXAMPLES

=item NOTE

=item AUTHOR

=back

=head2 O - Generic interface to Perl Compiler backends

=over

=item SYNOPSIS

=item DESCRIPTION

=item CONVENTIONS

=item IMPLEMENTATION

=item AUTHOR

=back

=head2 ODBM_File - Tied access to odbm files

=over

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 Opcode - Disable named opcodes when compiling perl code

=over

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item WARNING

=item Operator Names and Operator Lists

an operator name (opname), an operator tag name (optag), a negated opname
or optag, an operator set (opset)

=item Opcode Functions

opcodes, opset (OP, ...), opset_to_ops (OPSET), opset_to_hex (OPSET),
full_opset, empty_opset, invert_opset (OPSET), verify_opset (OPSET, ...),
define_optag (OPTAG, OPSET), opmask_add (OPSET), opmask, opdesc (OP, ...),
opdump (PAT)

=item Manipulating Opsets

=item TO DO (maybe)
a4256 9
=over

=item Predefined Opcode Tags

:base_core, :base_mem, :base_loop, :base_io, :base_orig, :base_math,
:base_thread, :default, :filesys_read, :sys_db, :browse, :filesys_open,
:filesys_write, :subprocess, :ownprocess, :others, :still_to_be_decided,
:dangerous

d4259 2
a4260 8
=item AUTHORS

=back

=head2 Opcode::Safe, Safe - Compile and execute code in restricted
compartments

=over
d4266 1
a4266 41
a new namespace, an operator mask

=item WARNING

=over

=item RECENT CHANGES

=item Methods in class Safe

permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)

=item Some Safety Issues

Memory, CPU, Snooping, Signals, State Changes

=item AUTHOR

=back

=back

=head2 Opcode::ops, ops - Perl pragma to restrict unsafe operations when
compiling

=over

=item SYNOPSIS	

=item DESCRIPTION

=item SEE ALSO

=back

=head2 POSIX - Perl interface to IEEE Std 1003.1

=over
d4270 1
a4270 58
=item DESCRIPTION

=item NOTE

=item CAVEATS 

=item FUNCTIONS

_exit, abort, abs, access, acos, alarm, asctime, asin, assert, atan, atan2,
atexit, atof, atoi, atol, bsearch, calloc, ceil, chdir, chmod, chown,
clearerr, clock, close, closedir, cos, cosh, creat, ctermid, ctime,
cuserid, difftime, div, dup, dup2, errno, execl, execle, execlp, execv,
execve, execvp, exit, exp, fabs, fclose, fcntl, fdopen, feof, ferror,
fflush, fgetc, fgetpos, fgets, fileno, floor, fmod, fopen, fork, fpathconf,
fprintf, fputc, fputs, fread, free, freopen, frexp, fscanf, fseek, fsetpos,
fstat, ftell, fwrite, getc, getchar, getcwd, getegid, getenv, geteuid,
getgid, getgrgid, getgrnam, getgroups, getlogin, getpgrp, getpid, getppid,
getpwnam, getpwuid, gets, getuid, gmtime, isalnum, isalpha, isatty,
iscntrl, isdigit, isgraph, islower, isprint, ispunct, isspace, isupper,
isxdigit, kill, labs, ldexp, ldiv, link, localeconv, localtime, log, log10,
longjmp, lseek, malloc, mblen, mbstowcs, mbtowc, memchr, memcmp, memcpy,
memmove, memset, mkdir, mkfifo, mktime, modf, nice, offsetof, open,
opendir, pathconf, pause, perror, pipe, pow, printf, putc, putchar, puts,
qsort, raise, rand, read, readdir, realloc, remove, rename, rewind,
rewinddir, rmdir, scanf, setgid, setjmp, setlocale, setpgid, setsid,
setuid, sigaction, siglongjmp, sigpending, sigprocmask, sigsetjmp,
sigsuspend, sin, sinh, sleep, sprintf, sqrt, srand, sscanf, stat, strcat,
strchr, strcmp, strcoll, strcpy, strcspn, strerror, strftime, strlen,
strncat, strncmp, strncpy, stroul, strpbrk, strrchr, strspn, strstr,
strtod, strtok, strtol, strtoul, strxfrm, sysconf, system, tan, tanh,
tcdrain, tcflow, tcflush, tcgetpgrp, tcsendbreak, tcsetpgrp, time, times,
tmpfile, tmpnam, tolower, toupper, ttyname, tzname, tzset, umask, uname,
ungetc, unlink, utime, vfprintf, vprintf, vsprintf, wait, waitpid,
wcstombs, wctomb, write

=item CLASSES

=over

=item POSIX::SigAction

new

=item POSIX::SigSet

new, addset, delset, emptyset, fillset, ismember

=item POSIX::Termios

new, getattr, getcc, getcflag, getiflag, getispeed, getlflag, getoflag,
getospeed, setattr, setcc, setcflag, setiflag, setispeed, setlflag,
setoflag, setospeed, Baud rate values, Terminal interface values, c_cc
field values, c_cflag field values, c_iflag field values, c_lflag field
values, c_oflag field values

=back

=item PATHNAME CONSTANTS
d4272 1
a4272 1
Constants
d4274 1
a4274 1
=item POSIX CONSTANTS
d4276 1
a4276 1
Constants
d4278 1
a4278 1
=item SYSTEM CONFIGURATION
d4280 1
a4280 1
Constants
d4282 5
a4286 1
=item ERRNO
d4288 1
a4288 1
Constants
d4290 11
a4300 1
=item FCNTL
d4302 1
a4302 1
Constants
d4304 1
a4304 1
=item FLOAT
d4306 2
a4307 1
Constants
d4309 1
a4309 1
=item LIMITS
d4311 1
a4311 1
Constants
d4313 1
a4313 1
=item LOCALE
d4315 1
a4315 1
Constants
d4317 2
a4318 1
=item MATH
d4320 1
a4320 1
Constants
d4322 15
a4336 1
=item SIGNAL
d4338 1
a4338 1
Constants
d4340 2
a4341 1
=item STAT
d4343 1
a4343 1
Constants, Macros
d4345 1
a4345 1
=item STDLIB
d4347 4
a4350 1
Constants
d4352 1
a4352 1
=item STDIO
d4354 1
a4354 1
Constants
d4356 1
a4356 1
=item TIME
d4358 1
a4358 1
Constants
d4360 1
a4360 1
=item UNISTD
d4362 1
a4362 1
Constants
d4364 1
a4364 1
=item WAIT
d4366 1
a4366 1
Constants, Macros
d4368 1
a4368 1
=item CREATION
d4370 1
a4370 1
=back
d4372 1
a4372 1
=head2 Pod::Checker, podchecker() - check pod documents for syntax errors
d4374 1
a4374 1
=over
d4376 1
a4376 1
=item SYNOPSIS
d4378 1
a4378 1
=item OPTIONS/ARGUMENTS
d4380 1
a4380 1
=over
d4382 11
a4392 1
=item podchecker()
d4394 1
a4394 1
B<-warnings> =E<gt> I<val>
d4396 2
a4397 1
=back
d4399 1
a4399 1
=item DESCRIPTION
d4401 1
a4401 1
=item DIAGNOSTICS
d4403 1
a4403 1
=over
d4405 3
a4407 1
=item Errors
d4409 1
a4409 19
empty =headn, =over on line I<N> without closing =back, =item without
previous =over, =back without previous =over, No argument for =begin, =end
without =begin, Nested =begin's, =for without formatter specification,
unresolved internal link I<NAME>, Unknown command "I<CMD>", Unknown
interior-sequence "I<SEQ>", nested commands
I<CMD>E<lt>...I<CMD>E<lt>...E<gt>...E<gt>, garbled entity I<STRING>, Entity
number out of range, malformed link LE<lt>E<gt>, nonempty ZE<lt>E<gt>,
empty XE<lt>E<gt>, Spurious text after =pod / =cut, Spurious character(s)
after =back

=item Warnings

multiple occurence of link target I<name>, line containing nothing but
whitespace in paragraph, file does not start with =head, No numeric
argument for =over, previous =item has no contents, preceding non-item
paragraph(s), =item type mismatch (I<one> vs. I<two>), I<N> unescaped
C<E<lt>E<gt>> in paragraph, Unknown entity, No items in =over, No argument
for =item, empty section in previous paragraph, Verbatim paragraph in NAME
section, Hyperlinks
d4413 1
a4413 1
=item RETURN VALUE
d4415 1
a4415 1
=item EXAMPLES
d4417 1
a4417 1
=item INTERFACE
d4419 1
a4419 1
=back
d4421 1
a4421 2
C<$checker-E<gt>poderror( @@args )>, C<$checker-E<gt>poderror( {%opts},
@@args )>
d4423 1
a4423 1
C<$checker-E<gt>num_errors()>
d4425 1
a4425 1
C<$checker-E<gt>name()>
d4427 1
a4427 1
C<$checker-E<gt>node()>
d4429 1
a4429 1
C<$checker-E<gt>idx()>
d4431 2
a4432 1
C<$checker-E<gt>hyperlink()>
d4434 1
a4434 1
=over
d4438 3
a4440 1
=back
d4442 1
a4442 1
=head2 Pod::Find - find POD documents in directory trees
d4444 2
a4445 1
=over
d4451 1
a4451 3
=item OPTIONS

B<-verbose>, B<-perl>, B<-script>, B<-inc>
d4455 1
a4455 1
=item SEE ALSO
d4457 1
a4457 5
=back

=head2 Pod::Html - module to convert pod files to HTML

=over
d4463 3
a4465 1
=item ARGUMENTS
d4467 1
a4467 3
backlink, css, flush, header, help, htmldir, htmlroot, index, infile,
libpods, netscape, outfile, podpath, podroot, quiet, recurse, title,
verbose
d4471 1
a4471 1
=item ENVIRONMENT
d4473 1
a4473 1
=item AUTHOR
d4475 1
a4475 1
=item SEE ALSO
d4477 1
a4477 1
=item COPYRIGHT
d4479 1
a4479 1
=back
d4481 1
a4481 2
=head2 Pod::InputObjects - objects representing POD input paragraphs,
commands, etc.
d4483 1
a4483 1
=over
d4485 1
a4485 1
=item SYNOPSIS
d4487 1
a4487 1
=item REQUIRES
d4489 1
a4489 1
=item EXPORTS
d4493 1
a4493 2
B<Pod::InputSource>, B<Pod::Paragraph>, B<Pod::InteriorSequence>,
B<Pod::ParseTree>
d4495 1
a4495 1
=back
d4497 1
a4497 1
=over
d4499 1
a4499 1
=item B<Pod::InputSource>
d4501 1
a4501 1
=back
d4503 1
a4503 1
=over
d4505 1
a4505 1
=item B<new()>
d4507 1
a4507 1
=back
d4509 1
a4509 1
=over
d4511 1
a4511 1
=item B<name()>
d4513 1
a4513 1
=back
d4515 1
a4515 1
=over
d4517 1
a4517 1
=item B<handle()>
d4519 1
a4519 1
=back
d4521 1
a4521 1
=over
d4523 1
a4523 1
=item B<was_cutting()>
d4525 1
a4525 1
=back
d4527 1
a4527 1
=over
d4529 1
a4529 1
=item B<Pod::Paragraph>
d4531 1
a4531 1
=back
d4533 1
a4533 1
=over
d4535 1
a4535 1
=item B<new()>
d4539 1
a4539 1
=over
d4541 1
a4541 1
=item B<cmd_name()>
d4543 1
a4543 1
=back
d4545 1
a4545 1
=over
d4547 1
a4547 1
=item B<text()>
d4549 1
a4549 1
=back
d4551 1
a4551 1
=over
d4553 1
a4553 1
=item B<raw_text()>
d4555 1
a4555 1
=back
d4557 1
a4557 1
=over
d4559 1
a4559 1
=item B<cmd_prefix()>
d4561 1
a4561 1
=back
d4563 1
a4563 1
=over
d4565 1
a4565 1
=item B<cmd_separator()>
d4567 1
a4567 1
=back
d4569 1
a4569 1
=over
d4571 1
a4571 1
=item B<parse_tree()>
d4573 1
a4573 1
=back
d4575 1
a4575 1
=over
d4577 1
a4577 1
=item B<file_line()>
d4579 1
a4579 1
=back
d4581 1
a4581 1
=over
d4583 1
a4583 1
=item B<Pod::InteriorSequence>
d4585 1
a4585 1
=back
d4587 1
a4587 1
=over
d4589 1
a4589 1
=item B<new()>
d4591 1
a4591 1
=back
d4593 1
a4593 1
=over
d4595 2
a4596 1
=item B<cmd_name()>
d4598 1
a4598 1
=back
d4600 1
a4600 1
=over
d4602 1
a4602 1
=item B<prepend()>
d4604 1
a4604 1
=back
d4606 1
a4606 1
=over
d4608 1
a4608 1
=item B<append()>
d4610 1
a4610 1
=back
d4612 1
a4612 1
=over
d4614 2
a4615 1
=item B<nested()>
d4617 1
a4617 1
=back
d4619 1
a4619 1
=over
d4621 1
a4621 1
=item B<raw_text()>
d4623 1
a4623 1
=back
d4627 4
a4630 1
=item B<left_delimiter()>
d4634 1
a4634 1
=over
d4636 1
a4636 1
=item B<right_delimiter()>
d4638 1
a4638 1
=back
d4640 1
a4640 1
=over
d4642 1
a4642 1
=item B<parse_tree()>
d4644 1
a4644 1
=back
d4646 1
a4646 1
=over
d4648 1
a4648 1
=item B<file_line()>
d4650 1
a4650 1
=back
d4652 1
a4652 1
=over
d4654 1
a4654 1
=item B<DESTROY()>
d4656 1
a4656 1
=back
d4658 1
a4658 1
=over
d4660 1
a4660 1
=item B<Pod::ParseTree>
d4662 1
a4662 1
=back
d4664 1
a4664 1
=over
d4666 1
a4666 1
=item B<new()>
d4668 1
a4668 1
=back
d4670 1
a4670 1
=over
d4672 1
a4672 1
=item B<top()>
d4674 1
a4674 1
=back
d4676 1
a4676 1
=over
d4678 1
a4678 1
=item B<children()>
d4680 1
a4680 1
=back
d4682 1
a4682 1
=over
d4684 1
a4684 1
=item B<prepend()>
d4686 1
a4686 1
=back
d4688 1
a4688 1
=over
d4690 1
a4690 1
=item B<append()>
d4692 1
a4692 1
=back
d4694 1
a4694 1
=over
d4696 1
a4696 1
=item B<raw_text()>
d4698 2
a4699 1
=back
d4701 1
a4701 1
=over
d4703 1
a4703 1
=item B<DESTROY()>
d4705 1
a4705 1
=back
d4709 1
a4709 1
=item SEE ALSO
d4711 1
a4711 1
=item AUTHOR
d4713 1
a4713 1
=back
d4715 1
a4715 1
=head2 Pod::Man - Convert POD data to formatted *roff input
d4717 1
a4717 1
=over
d4719 1
a4719 1
=item SYNOPSIS
d4721 1
a4721 1
=item DESCRIPTION
d4723 1
a4723 2
center, date, fixed, fixedbold, fixeditalic, fixedbolditalic, release,
section
d4725 1
a4725 1
=item DIAGNOSTICS
d4727 4
a4730 2
roff font should be 1 or 2 chars, not `%s', Invalid link %s, Unknown escape
EE<lt>%sE<gt>, Unknown sequence %s, Unmatched =back
d4732 1
a4732 1
=item BUGS
d4734 1
a4734 1
=item SEE ALSO
d4738 1
a4738 1
=back
d4740 2
a4741 3
=head2 Pod::ParseUtils - helpers for POD parsing and conversion

=over
d4747 2
a4748 1
=back
d4750 1
a4750 1
=over
d4752 1
a4752 1
=item Pod::List
d4754 1
a4754 1
new()
d4756 1
a4756 1
=back
d4758 1
a4758 1
file()
d4760 1
a4760 1
start()
d4762 1
a4762 1
indent()
d4764 1
a4764 1
type()
d4766 1
a4766 1
rx()
d4768 1
a4768 1
item()
d4770 1
a4770 1
parent()
d4772 1
a4772 1
tag()
d4774 1
a4774 1
=over
d4776 1
a4776 1
=item Pod::Hyperlink
d4778 2
a4779 1
new()
d4781 1
a4781 1
=back
d4783 1
a4783 1
parse($string)
d4785 1
a4785 1
markup($string)
d4787 1
a4787 1
text()
d4789 1
a4789 1
warning()
d4791 3
a4793 1
line(), file()
d4795 1
a4795 1
page()
d4797 1
a4797 1
node()
d4799 1
a4799 1
alttext()
d4801 1
a4801 1
type()
d4803 1
a4803 1
link()
d4805 1
a4805 1
=over
d4807 1
a4807 1
=item Pod::Cache
d4809 1
a4809 1
new()
d4811 1
a4811 1
=back
d4813 1
a4813 1
item()
d4815 1
a4815 1
find_page($name)
d4817 1
a4817 1
=over
d4819 1
a4819 1
=item Pod::Cache::Item
d4821 1
a4821 1
new()
d4823 2
a4824 1
=back
d4826 1
a4826 1
page()
d4828 1
a4828 1
description()
d4830 1
a4830 1
path()
d4832 1
a4832 1
file()
d4834 2
a4835 1
nodes()
d4837 1
a4837 1
find_node($name)
d4839 1
a4839 1
idx()
d4841 1
a4841 1
=over
d4843 1
a4843 1
=item AUTHOR
d4845 1
a4845 1
=item SEE ALSO
d4847 3
a4849 1
=back
d4851 1
a4851 1
=head2 Pod::Parser - base class for creating POD filters and translators
d4853 1
a4853 1
=over
d4855 1
a4855 1
=item SYNOPSIS
d4857 2
a4858 1
=item REQUIRES
d4860 1
a4860 1
=item EXPORTS
d4864 3
a4866 1
=item QUICK OVERVIEW
d4868 1
a4868 1
=item PARSING OPTIONS
d4870 2
a4871 2
B<-want_nonPODs> (default: unset), B<-process_cut_cmd> (default: unset),
B<-warnings> (default: unset)
d4873 1
a4873 1
=back
d4877 3
a4879 1
=item RECOMMENDED SUBROUTINE/METHOD OVERRIDES
d4881 2
a4882 1
=back
d4884 1
a4884 1
=over
d4886 1
a4886 1
=item B<command()>
d4888 1
a4888 1
C<$cmd>, C<$text>, C<$line_num>, C<$pod_para>
d4892 1
a4892 1
=over
d4894 1
a4894 1
=item B<verbatim()>
d4896 1
a4896 1
C<$text>, C<$line_num>, C<$pod_para>
d4898 1
a4898 1
=back
d4900 1
a4900 1
=over
d4902 1
a4902 1
=item B<textblock()>
d4904 1
a4904 1
C<$text>, C<$line_num>, C<$pod_para>
d4906 1
a4906 1
=back
d4908 2
a4909 1
=over
d4911 1
a4911 1
=item B<interior_sequence()>
d4913 1
a4913 1
=back
d4915 1
a4915 1
=over
d4917 1
a4917 1
=item OPTIONAL SUBROUTINE/METHOD OVERRIDES
d4919 1
a4919 1
=back
d4921 1
a4921 1
=over
d4923 1
a4923 1
=item B<new()>
d4925 1
a4925 1
=back
d4927 1
a4927 1
=over
d4929 1
a4929 1
=item B<initialize()>
d4931 1
a4931 1
=back
d4933 1
a4933 1
=over
d4935 1
a4935 1
=item B<begin_pod()>
d4937 1
a4937 1
=back
d4939 3
a4941 1
=over
d4943 1
a4943 1
=item B<begin_input()>
d4945 1
a4945 1
=back
d4947 1
a4947 1
=over
d4949 2
a4950 1
=item B<end_input()>
d4952 1
a4952 1
=back
d4954 1
a4954 1
=over
d4956 1
a4956 1
=item B<end_pod()>
d4958 4
a4961 1
=back
d4963 1
a4963 1
=over
d4965 1
a4965 1
=item B<preprocess_line()>
d4967 1
a4967 1
=back
d4969 1
a4969 1
=over
d4971 1
a4971 1
=item B<preprocess_paragraph()>
d4973 1
a4973 1
=back
d4975 1
a4975 1
=over
d4977 1
a4977 1
=item METHODS FOR PARSING AND PROCESSING
d4979 1
a4979 1
=back
d4981 1
a4981 1
=over
d4983 1
a4983 1
=item B<parse_text()>
d4985 1
a4985 3
B<-expand_seq> =E<gt> I<code-ref>|I<method-name>, B<-expand_text> =E<gt>
I<code-ref>|I<method-name>, B<-expand_ptree> =E<gt>
I<code-ref>|I<method-name>
d4987 1
a4987 1
=back
d4989 1
a4989 1
=over
d4991 1
a4991 1
=item B<interpolate()>
d4993 1
a4993 1
=back
d4995 1
a4995 1
=over
d4997 2
a4998 1
=item B<parse_paragraph()>
d5000 1
a5000 1
=back
d5002 1
a5002 1
=over
d5004 1
a5004 1
=item B<parse_from_filehandle()>
d5006 1
a5006 1
=back
d5008 1
a5008 1
=over
d5010 1
a5010 1
=item B<parse_from_file()>
d5012 1
a5012 1
=back
d5014 1
a5014 1
=over
d5016 1
a5016 1
=item ACCESSOR METHODS
d5018 1
a5018 1
=back
d5020 1
a5020 1
=over
d5022 1
a5022 1
=item B<errorsub()>
d5024 1
a5024 3
=back

=over
d5026 1
a5026 1
=item B<cutting()>
d5028 1
a5028 1
=back
d5032 3
a5034 1
=item B<parseopts()>
d5038 1
a5038 1
=over
d5040 1
a5040 3
=item B<output_file()>

=back
d5044 1
a5044 1
=item B<output_handle()>
d5046 1
a5046 1
=back
d5048 2
a5049 1
=over
d5051 1
a5051 1
=item B<input_file()>
d5053 1
a5053 1
=back
d5055 1
a5055 1
=over
d5057 1
a5057 1
=item B<input_handle()>
d5059 1
a5059 1
=back
d5061 1
a5061 1
=over
d5063 1
a5063 1
=item B<input_streams()>
d5065 1
a5065 1
=back
d5067 1
a5067 1
=over
d5069 1
a5069 1
=item B<top_stream()>
d5071 1
a5071 1
=back
d5075 4
a5078 1
=item PRIVATE METHODS AND DATA
d5082 1
a5082 1
=over
d5084 1
a5084 1
=item B<_push_input_stream()>
d5086 2
a5087 1
=back
d5089 1
a5089 1
=over
d5091 1
a5091 1
=item B<_pop_input_stream()>
d5093 1
a5093 1
=back
d5095 1
a5095 5
=over

=item TREE-BASED PARSING

=item SEE ALSO
d5099 2
a5100 5
=back

=head2 Pod::Plainer - Perl extension for converting Pod to old style Pod.

=over
d5106 1
a5106 1
=over
d5108 1
a5108 3
=item EXPORT

=back
d5112 2
a5113 1
=item SEE ALSO
d5115 1
a5115 1
=back
d5117 1
a5117 2
=head2 Pod::Select, podselect() - extract selected sections of POD from
input
d5119 1
a5119 1
=over
d5121 1
a5121 1
=item SYNOPSIS
d5123 2
a5124 1
=item REQUIRES
d5126 1
a5126 1
=item EXPORTS
d5130 1
a5130 1
=item SECTION SPECIFICATIONS
d5132 1
a5132 1
=item RANGE SPECIFICATIONS
d5134 1
a5134 1
=back
d5136 1
a5136 1
=over
d5138 1
a5138 1
=item OBJECT METHODS
d5140 1
a5140 1
=back
d5142 1
a5142 1
=over
d5144 1
a5144 1
=item B<curr_headings()>
d5146 1
a5146 1
=back
d5148 1
a5148 1
=over
d5150 1
a5150 1
=item B<select()>
d5152 1
a5152 1
=back
d5154 2
a5155 1
=over
d5157 1
a5157 1
=item B<add_selection()>
d5159 4
a5162 1
=back
d5164 1
a5164 1
=over
d5166 1
a5166 1
=item B<clear_selections()>
d5168 1
a5168 1
=back
d5170 4
a5173 1
=over
d5175 1
a5175 1
=item B<match_section()>
d5177 1
a5177 1
=back
d5179 2
a5180 1
=over
d5182 1
a5182 1
=item B<is_selected()>
d5184 1
a5184 1
=back
d5186 1
a5186 1
=over
d5188 1
a5188 1
=item EXPORTED FUNCTIONS
d5190 1
a5190 1
=back
d5192 1
a5192 1
=over
d5194 1
a5194 1
=item B<podselect()>
d5196 4
a5199 1
B<-output>, B<-sections>, B<-ranges>
d5201 1
a5201 1
=back
d5203 1
a5203 1
=over
d5205 1
a5205 1
=item PRIVATE METHODS AND DATA
d5209 2
a5210 1
=over
d5212 1
a5212 1
=item B<_compile_section_spec()>
d5214 1
a5214 1
=back
d5216 1
a5216 1
=over
d5218 1
a5218 1
=item $self->{_SECTION_HEADINGS}
d5220 1
a5220 1
=back
d5222 1
a5222 1
=over
d5224 1
a5224 1
=item $self->{_SELECTED_SECTIONS}
d5226 1
a5226 1
=back
d5228 1
a5228 1
=over
d5230 26
a5255 1
=item SEE ALSO
d5257 1
a5257 5
=item AUTHOR

=back

=head2 Pod::Text - Convert POD data to formatted ASCII text
d5261 1
a5261 1
=item SYNOPSIS
d5263 1
a5263 1
=item DESCRIPTION
d5265 1
a5265 1
alt, indent, loose, sentence, width
d5267 1
a5267 1
=item DIAGNOSTICS
d5269 1
a5269 2
Bizarre space in item, Can't open %s for reading: %s, Unknown escape: %s,
Unknown sequence: %s, Unmatched =back
d5271 5
a5275 1
=item RESTRICTIONS
d5277 1
a5277 1
=item NOTES
d5279 1
a5279 1
=item SEE ALSO
d5281 1
a5281 1
=item AUTHOR
d5283 1
a5283 1
=back
d5285 1
a5285 1
=head2 Pod::Text::Color - Convert POD data to formatted color ASCII text
d5287 1
a5287 1
=over
d5289 1
a5289 1
=item SYNOPSIS
d5291 1
a5291 1
=item DESCRIPTION
d5293 1
a5293 1
=item BUGS
d5295 1
a5295 1
=item SEE ALSO
d5297 1
a5297 1
=item AUTHOR
d5299 1
a5299 1
=back
d5301 1
a5301 2
=head2 Pod::Text::Termcap, Pod::Text::Color - Convert POD data to ASCII
text with format escapes
d5303 1
a5303 1
=over
d5305 1
a5305 1
=item SYNOPSIS
d5307 1
a5307 1
=item DESCRIPTION
d5309 1
a5309 1
=item SEE ALSO
d5311 1
a5311 1
=item AUTHOR
d5313 1
a5313 1
=back
d5315 1
a5315 2
=head2 Pod::Usage, pod2usage() - print a usage message from embedded pod
documentation
d5317 1
a5317 1
=over
d5319 1
a5319 1
=item SYNOPSIS
d5321 1
a5321 1
=item ARGUMENTS
d5323 1
a5323 2
C<-message>, C<-msg>, C<-exitval>, C<-verbose>, C<-output>, C<-input>,
C<-pathlist>
d5325 1
a5325 1
=item DESCRIPTION
d5327 1
a5327 1
=item EXAMPLES
d5329 1
a5329 1
=over
d5331 1
a5331 1
=item Recommended Use
d5333 1
a5333 1
=back
d5335 1
a5335 1
=item CAVEATS
d5337 1
a5337 1
=item AUTHOR
d5339 1
a5339 1
=item ACKNOWLEDGEMENTS
d5341 1
a5341 1
=back
d5343 1
a5343 1
=head2 SDBM_File - Tied access to sdbm files
d5345 1
a5345 1
=over
d5351 1
a5351 1
=back
d5353 2
a5354 1
=head2 Safe - Compile and execute code in restricted compartments
d5356 1
a5356 1
=over
d5358 1
a5358 1
=item SYNOPSIS
d5360 1
a5360 1
=item DESCRIPTION
d5362 1
a5362 1
a new namespace, an operator mask
d5364 1
a5364 1
=item WARNING
d5366 1
a5366 1
=over
d5368 1
a5368 1
=item RECENT CHANGES
d5370 1
a5370 1
=item Methods in class Safe
d5372 1
a5372 4
permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)
d5374 1
a5374 1
=item Some Safety Issues
d5376 1
a5376 1
Memory, CPU, Snooping, Signals, State Changes
d5378 1
a5378 1
=item AUTHOR
d5380 1
a5380 3
=back

=back
a5383 2
=over

a5387 2
=back

a5389 2
=over

a5393 2
=back

a5395 2
=over

a5417 2
=back

a5419 2
=over

a5425 2
=back

a5428 2
=over

a5438 2
=back

a5440 2
=over

a5444 2
=back

a5446 2
=over

a5452 2
=back

a5455 2
=over

d5466 1
a5466 20
=item SEE ALSO

=item AUTHOR

=back

=head2 Syslog::Syslog, Sys::Syslog, openlog, closelog, setlogmask, syslog -
Perl interface to the UNIX syslog(3) calls

=over

=item SYNOPSIS

=item DESCRIPTION

openlog $ident, $logopt, $facility, syslog $priority, $format, @@args,
setlogmask $mask_priority, setlogsock $sock_type (added in 5.004_02),
closelog

=item EXAMPLES
a5471 22
=back

=head2 Term::ANSIColor - Color screen output using ANSI escape sequences

=over

=item SYNOPSIS

=item DESCRIPTION

=item DIAGNOSTICS

Invalid attribute name %s, Identifier %s used only once: possible typo, No
comma allowed after filehandle, Bareword %s not allowed while "strict subs"
in use

=item RESTRICTIONS

=item AUTHORS

=back

a5473 2
=over

a5479 2
=back

a5481 2
=over

a5493 2
=back

a5496 2
=over

d5514 1
a5514 5
=back

=head2	 Test - provides a simple framework for writing test scripts

=over
a5523 2
=item RETURN VALUE

a5529 2
=back

a5531 2
=over

a5558 2
=back

a5560 2
=over

a5566 2
=back

a5569 2
=over

a5583 2
=back

a5586 2
=over

a5596 2
=back

a5599 2
=over

a5607 2
=back

a5609 2
=over

d5616 2
d5620 1
a5620 6
=back

=head2 Thread - manipulate threads in Perl (EXPERIMENTAL, subject to
change)

=over
d5630 1
a5630 1
cond_broadcast VARIABLE, yield
d5634 1
a5634 1
join, eval, detach, equal, tid
a5639 2
=back

a5641 2
=over

a5651 2
=back

a5653 2
=over

a5661 2
=back

a5663 2
=over

a5669 2
=back

a5671 2
=over

a5673 4
=item DESCRIPTION

=back

d5676 1
a5676 3
=over

=item SYNOPSIS	
d5678 1
a5678 1
=item DESCRIPTION	
d5681 3
a5683 3
FETCHSIZE this, STORESIZE this, count, EXTEND this, count, EXISTS this,
key, DELETE this, key, CLEAR this, DESTROY this, PUSH this, LIST, POP this,
SHIFT this, UNSHIFT this, LIST, SPLICE this, offset, length, LIST
d5689 1
a5689 6
=back

=head2 Tie::Handle, Tie::StdHandle  - base class definitions for tied
handles

=over
d5697 1
a5697 2
READLINE this, GETC this, CLOSE this, OPEN this, filename, BINMODE this,
EOF this, TELL this, SEEK this, offset, whence, DESTROY this
a5700 2
=back

a5702 2
=over

a5713 2
=back

a5715 2
=over

a5727 2
=back

a5730 2
=over

a5738 2
=back

a5740 2
=over

a5746 2
=back

a5748 2
=over

a5752 6
=item IMPLEMENTATION

=item BUGS

=back

a5755 2
=over

a5763 2
=back

a5766 2
=over

a5774 2
=back

a5776 2
=over

a5782 2
=back

a5784 2
=over

a5791 2
=back

a5794 2
=over

a5802 2
=back

a5805 2
=over

a5809 6
=over

=item System Specifics

=back

a5813 18
=item HISTORY

March 18th, 2000

=back

=head2 XSLoader - Dynamically load C libraries into Perl code

=over

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

a5818 2
=over

a5835 2

=back
@


1.1.1.4
log
@stock perl 5.6.1
@
text
@d16 1
a16 1
=over 4
d22 10
d53 1
a53 1
=over 4
d57 216
a272 15
=over 4

=item perlfaq: Structural overview of the FAQ.

=item L<perlfaq1>: General Questions About Perl

=item L<perlfaq2>: Obtaining and Learning about Perl

=item L<perlfaq3>: Programming Tools

=item L<perlfaq4>: Data Manipulation

=item L<perlfaq5>: Files and Formats

=item L<perlfaq6>: Regexps
d274 1
a274 1
=item L<perlfaq7>: General Perl Language Issues
d276 1
a276 1
=item L<perlfaq8>: System Interaction
d278 1
a278 11
=item L<perlfaq9>: Networking

=back

=item About the perlfaq documents

=over 4

=item Where to get the perlfaq

=item How to contribute to the perlfaq
d289 1
a289 1
=over 4
d299 2
a300 3
1/November/2000, 23/May/99, 13/April/99, 7/January/99, 22/June/98,
24/April/97, 23/April/97, 25/March/97, 18/March/97, 17/March/97 Version,
Initial Release: 11/March/97
d304 2
a305 1
=head2 perlbook - Perl book information
d307 1
a307 1
=over 4
d311 3
a313 1
=back
d315 1
a315 1
=head2 perlsyn - Perl syntax
d317 1
a317 1
=over 4
d319 1
a319 1
=item DESCRIPTION
d321 1
a321 1
=over 4
d323 1
a323 1
=item Declarations
d325 1
a325 1
=item Simple statements
d327 2
a328 1
=item Compound statements
d330 1
a330 1
=item Loop Control
d332 1
a332 1
=item For Loops
d334 1
a334 1
=item Foreach Loops
d336 1
a336 1
=item Basic BLOCKs and Switch Statements
d338 1
a338 1
=item Goto
d340 1
a340 1
=item PODs: Embedded Documentation
d342 2
a343 1
=item Plain Old Comments (Not!)
d347 2
d351 2
a352 1
=head2 perldata - Perl data types
d354 1
a354 1
=over 4
d358 28
a385 1
=over 4
d387 1
a387 1
=item Variable names
d389 1
a389 1
=item Context
d391 1
a391 1
=item Scalar values
d393 1
a393 1
=item Scalar value constructors
d395 1
a395 1
=item List value constructors
d397 1
a397 1
=item Slices
d399 1
a399 1
=item Typeglobs and Filehandles
d403 1
a403 1
=item SEE ALSO
d407 6
a412 1
=head2 perlop - Perl operators and precedence
d414 1
a414 1
=over 4
d416 1
a416 1
=item SYNOPSIS
d418 1
a418 1
=item DESCRIPTION
d420 1
a420 1
=over 4
d422 1
a422 1
=item Terms and List Operators (Leftward)
d424 1
a424 1
=item The Arrow Operator
d426 1
a426 1
=item Auto-increment and Auto-decrement
d428 1
a428 1
=item Exponentiation
d430 1
a430 1
=item Symbolic Unary Operators
d432 1
a432 1
=item Binding Operators
d434 1
a434 1
=item Multiplicative Operators
d436 1
a436 1
=item Additive Operators
d438 1
a438 1
=item Shift Operators
d440 1
a440 1
=item Named Unary Operators
d442 1
a442 1
=item Relational Operators
d444 1
a444 1
=item Equality Operators
d446 1
a446 1
=item Bitwise And
d448 1
a448 1
=item Bitwise Or and Exclusive Or
d450 1
a450 1
=item C-style Logical And
d452 1
a452 1
=item C-style Logical Or
d454 1
a454 1
=item Range Operators
d456 1
a456 1
=item Conditional Operator
d458 1
a458 1
=item Assignment Operators
d460 1
a460 1
=item Comma Operator
d462 1
a462 1
=item List Operators (Rightward)
d464 1
a464 1
=item Logical Not
d466 1
a466 1
=item Logical And
d468 1
a468 1
=item Logical or and Exclusive Or
d470 1
a470 1
=item C Operators Missing From Perl
d472 1
a472 1
unary &, unary *, (TYPE)
d474 2
a475 1
=item Quote and Quote-like Operators
d477 2
a478 1
=item Regexp Quote-Like Operators
d480 1
a480 4
?PATTERN?, m/PATTERN/cgimosx, /PATTERN/cgimosx, q/STRING/, C<'STRING'>,
qq/STRING/, "STRING", qr/STRING/imosx, qx/STRING/, `STRING`, qw/STRING/,
s/PATTERN/REPLACEMENT/egimosx, tr/SEARCHLIST/REPLACEMENTLIST/cds,
y/SEARCHLIST/REPLACEMENTLIST/cds
d482 1
a482 1
=item Gory details of parsing quoted constructs
d484 1
a484 5
Finding the end, Removal of backslashes before delimiters, Interpolation,
C<<<'EOF'>, C<m''>, C<s'''>, C<tr///>, C<y///>, C<''>, C<q//>, C<"">,
C<``>, C<qq//>, C<qx//>, C<< <file*glob> >>, C<?RE?>, C</RE/>, C<m/RE/>,
C<s/RE/foo/>,, Interpolation of regular expressions, Optimization of
regular expressions
d486 1
a486 1
=item I/O Operators
d488 2
a489 1
=item Constant Folding
d491 1
a491 1
=item Bitwise String Operators
d493 1
a493 1
=item Integer Arithmetic
d495 1
a495 1
=item Floating-point Arithmetic
d497 1
a497 1
=item Bigger Numbers
d499 2
a500 1
=back
d502 1
a502 1
=back
d504 2
a505 1
=head2 perlsub - Perl subroutines
d507 1
a507 1
=over 4
d509 1
a509 1
=item SYNOPSIS
d511 1
a511 1
=item DESCRIPTION
d513 1
a513 1
=over 4
d515 1
a515 1
=item Private Variables via my()
d517 1
a517 1
=item Persistent Private Variables
d519 1
a519 1
=item Temporary Values via local()
d521 1
a521 1
=item Lvalue subroutines
d523 1
a523 1
=item Passing Symbol Table Entries (typeglobs)
d525 1
a525 1
=item When to Still Use local()
d527 1
a527 1
=item Pass by Reference
d529 1
a529 1
=item Prototypes
d531 1
a531 1
=item Constant Functions
d533 1
a533 1
=item Overriding Built-in Functions
d535 1
a535 1
=item Autoloading
d537 1
a537 1
=item Subroutine Attributes
d541 7
a547 1
=item SEE ALSO
d549 1
a549 1
=back
d551 1
a551 1
=head2 perlfunc - Perl builtin functions
d553 1
a553 1
=over 4
d555 1
a555 1
=item DESCRIPTION
d557 1
a557 1
=over 4
d559 1
a559 1
=item Perl Functions by Category
d561 1
a561 11
Functions for SCALARs or strings, Regular expressions and pattern matching,
Numeric functions, Functions for real @@ARRAYs, Functions for list data,
Functions for real %HASHes, Input and output functions, Functions for fixed
length data or records, Functions for filehandles, files, or directories,
Keywords related to the control flow of your perl program, Keywords related
to scoping, Miscellaneous functions, Functions for processes and process
groups, Keywords related to perl modules, Keywords related to classes and
object-orientedness, Low-level socket functions, System V interprocess
communication functions, Fetching user and group info, Fetching network
info, Time-related functions, Functions new in perl5, Functions obsoleted
in perl5
d563 1
a563 1
=item Portability
d565 2
a566 2264
=item Alphabetical Listing of Perl Functions

I<-X> FILEHANDLE, I<-X> EXPR, I<-X>, abs VALUE, abs, accept
NEWSOCKET,GENERICSOCKET, alarm SECONDS, alarm, atan2 Y,X, bind SOCKET,NAME,
binmode FILEHANDLE, DISCIPLINE, binmode FILEHANDLE, bless REF,CLASSNAME,
bless REF, caller EXPR, caller, chdir EXPR, chmod LIST, chomp VARIABLE,
chomp LIST, chomp, chop VARIABLE, chop LIST, chop, chown LIST, chr NUMBER,
chr, chroot FILENAME, chroot, close FILEHANDLE, close, closedir DIRHANDLE,
connect SOCKET,NAME, continue BLOCK, cos EXPR, cos, crypt PLAINTEXT,SALT,
dbmclose HASH, dbmopen HASH,DBNAME,MASK, defined EXPR, defined, delete
EXPR, die LIST, do BLOCK, do SUBROUTINE(LIST), do EXPR, dump LABEL, dump,
each HASH, eof FILEHANDLE, eof (), eof, eval EXPR, eval BLOCK, exec LIST,
exec PROGRAM LIST, exists EXPR, exit EXPR, exp EXPR, exp, fcntl
FILEHANDLE,FUNCTION,SCALAR, fileno FILEHANDLE, flock FILEHANDLE,OPERATION,
fork, format, formline PICTURE,LIST, getc FILEHANDLE, getc, getlogin,
getpeername SOCKET, getpgrp PID, getppid, getpriority WHICH,WHO, getpwnam
NAME, getgrnam NAME, gethostbyname NAME, getnetbyname NAME, getprotobyname
NAME, getpwuid UID, getgrgid GID, getservbyname NAME,PROTO, gethostbyaddr
ADDR,ADDRTYPE, getnetbyaddr ADDR,ADDRTYPE, getprotobynumber NUMBER,
getservbyport PORT,PROTO, getpwent, getgrent, gethostent, getnetent,
getprotoent, getservent, setpwent, setgrent, sethostent STAYOPEN, setnetent
STAYOPEN, setprotoent STAYOPEN, setservent STAYOPEN, endpwent, endgrent,
endhostent, endnetent, endprotoent, endservent, getsockname SOCKET,
getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob, gmtime EXPR, goto LABEL,
goto EXPR, goto &NAME, grep BLOCK LIST, grep EXPR,LIST, hex EXPR, hex,
import, index STR,SUBSTR,POSITION, index STR,SUBSTR, int EXPR, int, ioctl
FILEHANDLE,FUNCTION,SCALAR, join EXPR,LIST, keys HASH, kill SIGNAL, LIST,
last LABEL, last, lc EXPR, lc, lcfirst EXPR, lcfirst, length EXPR, length,
link OLDFILE,NEWFILE, listen SOCKET,QUEUESIZE, local EXPR, localtime EXPR,
lock, log EXPR, log, lstat FILEHANDLE, lstat EXPR, lstat, m//, map BLOCK
LIST, map EXPR,LIST, mkdir FILENAME,MASK, mkdir FILENAME, msgctl
ID,CMD,ARG, msgget KEY,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, msgsnd
ID,MSG,FLAGS, my EXPR, my EXPR : ATTRIBUTES, next LABEL, next, no Module
LIST, oct EXPR, oct, open FILEHANDLE,MODE,LIST, open FILEHANDLE,EXPR, open
FILEHANDLE, opendir DIRHANDLE,EXPR, ord EXPR, ord, our EXPR, pack
TEMPLATE,LIST, package NAMESPACE, package, pipe READHANDLE,WRITEHANDLE, pop
ARRAY, pop, pos SCALAR, pos, print FILEHANDLE LIST, print LIST, print,
printf FILEHANDLE FORMAT, LIST, printf FORMAT, LIST, prototype FUNCTION,
push ARRAY,LIST, q/STRING/, qq/STRING/, qr/STRING/, qx/STRING/, qw/STRING/,
quotemeta EXPR, quotemeta, rand EXPR, rand, read
FILEHANDLE,SCALAR,LENGTH,OFFSET, read FILEHANDLE,SCALAR,LENGTH, readdir
DIRHANDLE, readline EXPR, readlink EXPR, readlink, readpipe EXPR, recv
SOCKET,SCALAR,LENGTH,FLAGS, redo LABEL, redo, ref EXPR, ref, rename
OLDNAME,NEWNAME, require VERSION, require EXPR, require, reset EXPR, reset,
return EXPR, return, reverse LIST, rewinddir DIRHANDLE, rindex
STR,SUBSTR,POSITION, rindex STR,SUBSTR, rmdir FILENAME, rmdir, s///, scalar
EXPR, seek FILEHANDLE,POSITION,WHENCE, seekdir DIRHANDLE,POS, select
FILEHANDLE, select, select RBITS,WBITS,EBITS,TIMEOUT, semctl
ID,SEMNUM,CMD,ARG, semget KEY,NSEMS,FLAGS, semop KEY,OPSTRING, send
SOCKET,MSG,FLAGS,TO, send SOCKET,MSG,FLAGS, setpgrp PID,PGRP, setpriority
WHICH,WHO,PRIORITY, setsockopt SOCKET,LEVEL,OPTNAME,OPTVAL, shift ARRAY,
shift, shmctl ID,CMD,ARG, shmget KEY,SIZE,FLAGS, shmread ID,VAR,POS,SIZE,
shmwrite ID,STRING,POS,SIZE, shutdown SOCKET,HOW, sin EXPR, sin, sleep
EXPR, sleep, socket SOCKET,DOMAIN,TYPE,PROTOCOL, socketpair
SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, sort SUBNAME LIST, sort BLOCK LIST,
sort LIST, splice ARRAY,OFFSET,LENGTH,LIST, splice ARRAY,OFFSET,LENGTH,
splice ARRAY,OFFSET, splice ARRAY, split /PATTERN/,EXPR,LIMIT, split
/PATTERN/,EXPR, split /PATTERN/, split, sprintf FORMAT, LIST, sqrt EXPR,
sqrt, srand EXPR, srand, stat FILEHANDLE, stat EXPR, stat, study SCALAR,
study, sub BLOCK, sub NAME, sub NAME BLOCK, substr
EXPR,OFFSET,LENGTH,REPLACEMENT, substr EXPR,OFFSET,LENGTH, substr
EXPR,OFFSET, symlink OLDFILE,NEWFILE, syscall LIST, sysopen
FILEHANDLE,FILENAME,MODE, sysopen FILEHANDLE,FILENAME,MODE,PERMS, sysread
FILEHANDLE,SCALAR,LENGTH,OFFSET, sysread FILEHANDLE,SCALAR,LENGTH, sysseek
FILEHANDLE,POSITION,WHENCE, system LIST, system PROGRAM LIST, syswrite
FILEHANDLE,SCALAR,LENGTH,OFFSET, syswrite FILEHANDLE,SCALAR,LENGTH,
syswrite FILEHANDLE,SCALAR, tell FILEHANDLE, tell, telldir DIRHANDLE, tie
VARIABLE,CLASSNAME,LIST, tied VARIABLE, time, times, tr///, truncate
FILEHANDLE,LENGTH, truncate EXPR,LENGTH, uc EXPR, uc, ucfirst EXPR,
ucfirst, umask EXPR, umask, undef EXPR, undef, unlink LIST, unlink, unpack
TEMPLATE,EXPR, untie VARIABLE, unshift ARRAY,LIST, use Module VERSION LIST,
use Module VERSION, use Module LIST, use Module, use VERSION, utime LIST,
values HASH, vec EXPR,OFFSET,BITS, wait, waitpid PID,FLAGS, wantarray, warn
LIST, write FILEHANDLE, write EXPR, write, y///

=back

=back

=head2 perlreftut - Mark's very short tutorial about references

=over 4

=item DESCRIPTION

=item Who Needs Complicated Data Structures?

=item The Solution

=item Syntax

=over 4

=item Making References

=item Using References

=back

=item An Example

=item Arrow Rule

=item Solution

=item The Rest

=item Summary

=item Credits

=over 4

=item Distribution Conditions

=back

=back

=head2 perldsc - Perl Data Structures Cookbook

=over 4

=item DESCRIPTION

arrays of arrays, hashes of arrays, arrays of hashes, hashes of hashes,
more elaborate constructs

=item REFERENCES

=item COMMON MISTAKES

=item CAVEAT ON PRECEDENCE

=item WHY YOU SHOULD ALWAYS C<use strict>

=item DEBUGGING

=item CODE EXAMPLES

=item ARRAYS OF ARRAYS

=over 4

=item Declaration of a ARRAY OF ARRAYS

=item Generation of a ARRAY OF ARRAYS

=item Access and Printing of a ARRAY OF ARRAYS

=back

=item HASHES OF ARRAYS

=over 4

=item Declaration of a HASH OF ARRAYS

=item Generation of a HASH OF ARRAYS

=item Access and Printing of a HASH OF ARRAYS

=back

=item ARRAYS OF HASHES

=over 4

=item Declaration of a ARRAY OF HASHES

=item Generation of a ARRAY OF HASHES

=item Access and Printing of a ARRAY OF HASHES

=back

=item HASHES OF HASHES

=over 4

=item Declaration of a HASH OF HASHES

=item Generation of a HASH OF HASHES

=item Access and Printing of a HASH OF HASHES

=back

=item MORE ELABORATE RECORDS

=over 4

=item Declaration of MORE ELABORATE RECORDS

=item Declaration of a HASH OF COMPLEX RECORDS

=item Generation of a HASH OF COMPLEX RECORDS

=back

=item Database Ties

=item SEE ALSO

=item AUTHOR

=back

=head2 perlrequick - Perl regular expressions quick start

=over 4

=item DESCRIPTION

=item The Guide

=over 4

=item Simple word matching

=item Using character classes

=item Matching this or that

=item Grouping things and hierarchical matching

=item Extracting matches

=item Matching repetitions

=item More matching

=item Search and replace

=item The split operator

=back

=item BUGS

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=over 4

=item Acknowledgments

=back

=back

=head2 perlpod - plain old documentation

=over 4

=item DESCRIPTION

=over 4

=item Verbatim Paragraph

=item Command Paragraph

=item Ordinary Block of Text

=item The Intent

=item Embedding Pods in Perl Modules

=item Common Pod Pitfalls

=back

=item SEE ALSO

=item AUTHOR

=back

=head2 perlstyle - Perl style guide

=over 4

=item DESCRIPTION

=back

=head2 perltrap - Perl traps for the unwary

=over 4

=item DESCRIPTION

=over 4

=item Awk Traps

=item C Traps

=item Sed Traps

=item Shell Traps

=item Perl Traps

=item Perl4 to Perl5 Traps

Discontinuance, Deprecation, and BugFix traps, Parsing Traps, Numerical
Traps, General data type traps, Context Traps - scalar, list contexts,
Precedence Traps, General Regular Expression Traps using s///, etc,
Subroutine, Signal, Sorting Traps, OS Traps, DBM Traps, Unclassified Traps

=item Discontinuance, Deprecation, and BugFix traps

Discontinuance, Deprecation, BugFix, Discontinuance, Discontinuance,
Discontinuance, BugFix, Discontinuance, Discontinuance, BugFix,
Discontinuance, Deprecation, Discontinuance, Discontinuance

=item Parsing Traps

Parsing, Parsing, Parsing, Parsing

=item Numerical Traps

Numerical, Numerical, Numerical, Bitwise string ops

=item General data type traps

(Arrays), (Arrays), (Hashes), (Globs), (Globs), (Scalar String),
(Constants), (Scalars), (Variable Suicide)

=item Context Traps - scalar, list contexts

(list context), (scalar context), (scalar context), (list, builtin)

=item Precedence Traps

Precedence, Precedence, Precedence, Precedence, Precedence, Precedence,
Precedence

=item General Regular Expression Traps using s///, etc.

Regular Expression, Regular Expression, Regular Expression, Regular
Expression, Regular Expression, Regular Expression, Regular Expression,
Regular Expression

=item Subroutine, Signal, Sorting Traps

(Signals), (Sort Subroutine), warn() won't let you specify a filehandle

=item OS Traps

(SysV), (SysV)

=item Interpolation Traps

Interpolation, Interpolation, Interpolation, Interpolation, Interpolation,
Interpolation, Interpolation, Interpolation, Interpolation

=item DBM Traps

DBM, DBM

=item Unclassified Traps

C<require>/C<do> trap using returned value, C<split> on empty string with
LIMIT specified

=back

=back

=head2 perlrun - how to execute the Perl interpreter

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item #! and quoting on non-Unix systems

OS/2, MS-DOS, Win95/NT, Macintosh, VMS

=item Location of Perl

=item Command Switches

B<-0>[I<digits>], B<-a>, B<-C>, B<-c>, B<-d>, B<-d:>I<foo[=bar,baz]>,
B<-D>I<letters>, B<-D>I<number>, B<-e> I<commandline>, B<-F>I<pattern>,
B<-h>, B<-i>[I<extension>], B<-I>I<directory>, B<-l>[I<octnum>],
B<-m>[B<->]I<module>, B<-M>[B<->]I<module>, B<-M>[B<->]I<'module ...'>,
B<-[mM]>[B<->]I<module=arg[,arg]...>, B<-n>, B<-p>, B<-P>, B<-s>, B<-S>,
B<-T>, B<-u>, B<-U>, B<-v>, B<-V>, B<-V:>I<name>, B<-w>, B<-W>, B<-X>,
B<-x> I<directory>

=back

=item ENVIRONMENT

HOME, LOGDIR, PATH, PERL5LIB, PERL5OPT, PERLLIB, PERL5DB, PERL5SHELL
(specific to the Win32 port), PERL_DEBUG_MSTATS, PERL_DESTRUCT_LEVEL,
PERL_ROOT (specific to the VMS port), SYS$LOGIN (specific to the VMS port)

=back

=head2 perldiag - various Perl diagnostics

=over 4

=item DESCRIPTION

=back

=head2 perllexwarn - Perl Lexical Warnings

=over 4

=item DESCRIPTION

=over 4

=item Default Warnings and Optional Warnings

=item What's wrong with B<-w> and C<$^W>

=item Controlling Warnings from the Command Line

B<-w>, B<-W>, B<-X>

=item Backward Compatibility

=item Category Hierarchy

=item Fatal Warnings

=item Reporting Warnings from a Module

=back

=item TODO

=item SEE ALSO

=item AUTHOR

=back

=head2 perldebtut - Perl debugging tutorial

=over 4

=item DESCRIPTION

=item use strict

=item Looking at data and -w and w

=item help

=item Stepping through code

=item Placeholder for a, w, t, T

=item REGULAR EXPRESSIONS

=item OUTPUT TIPS

=item CGI

=item GUIs

=item SUMMARY

=item SEE ALSO

=item AUTHOR

=item CONTRIBUTORS

=back

=head2 perldebug - Perl debugging

=over 4

=item DESCRIPTION

=item The Perl Debugger

=over 4

=item Debugger Commands

h [command], p expr, x expr, V [pkg [vars]], X [vars], T, s [expr], n
[expr], r, <CR>, c [line|sub], l, l min+incr, l min-max, l line, l subname,
-, w [line], f filename, /pattern/, ?pattern?, L, S [[!]regex], t, t expr,
b [line] [condition], b subname [condition], b postpone subname
[condition], b load filename, b compile subname, d [line], D, a [line]
command, a [line], A, W expr, W, O booloption .., O anyoption? .., O
option=value .., < ?, < [ command ], << command, > ?, > command, >>
command, { ?, { [ command ], {{ command, ! number, ! -number, ! pattern, !!
cmd, H -number, q or ^D, R, |dbcmd, ||dbcmd, command, m expr, man [manpage]

=item Configurable Options

C<recallCommand>, C<ShellBang>, C<pager>, C<tkRunning>, C<signalLevel>,
C<warnLevel>, C<dieLevel>, C<AutoTrace>, C<LineInfo>, C<inhibit_exit>,
C<PrintRet>, C<ornaments>, C<frame>, C<maxTraceLen>, C<arrayDepth>,
C<hashDepth>, C<compactDump>, C<veryCompact>, C<globPrint>, C<DumpDBFiles>,
C<DumpPackages>, C<DumpReused>, C<quote>, C<HighBit>, C<undefPrint>,
C<UsageOnly>, C<TTY>, C<noTTY>, C<ReadLine>, C<NonStop>

=item Debugger input/output

Prompt, Multiline commands, Stack backtrace, Line Listing Format, Frame
listing

=item Debugging compile-time statements

=item Debugger Customization

=item Readline Support

=item Editor Support for Debugging

=item The Perl Profiler

=back

=item Debugging regular expressions

=item Debugging memory usage

=item SEE ALSO

=item BUGS

=back

=head2 perlvar - Perl predefined variables

=over 4

=item DESCRIPTION

=over 4

=item Predefined Names

$ARG, $_, $<I<digits>>, $MATCH, $&, $PREMATCH, $`, $POSTMATCH, $',
$LAST_PAREN_MATCH, $+, @@LAST_MATCH_END, @@+, $MULTILINE_MATCHING, $*,
input_line_number HANDLE EXPR, $INPUT_LINE_NUMBER, $NR, $,
input_record_separator HANDLE EXPR, $INPUT_RECORD_SEPARATOR, $RS, $/,
autoflush HANDLE EXPR, $OUTPUT_AUTOFLUSH, $|, output_field_separator HANDLE
EXPR, $OUTPUT_FIELD_SEPARATOR, $OFS, $,, output_record_separator HANDLE
EXPR, $OUTPUT_RECORD_SEPARATOR, $ORS, $\, $LIST_SEPARATOR, $",
$SUBSCRIPT_SEPARATOR, $SUBSEP, $;, $OFMT, $#, format_page_number HANDLE
EXPR, $FORMAT_PAGE_NUMBER, $%, format_lines_per_page HANDLE EXPR,
$FORMAT_LINES_PER_PAGE, $=, format_lines_left HANDLE EXPR,
$FORMAT_LINES_LEFT, $-, @@LAST_MATCH_START, @@-, C<$`> is the same as
C<substr($var, 0, $-[0])>, C<$&> is the same as C<substr($var, $-[0], $+[0]
- $-[0])>, C<$'> is the same as C<substr($var, $+[0])>, C<$1> is the same
as C<substr($var, $-[1], $+[1] - $-[1])>, C<$2> is the same as
C<substr($var, $-[2], $+[2] - $-[2])>, C<$3> is the same as C<substr $var,
$-[3], $+[3] - $-[3])>, format_name HANDLE EXPR, $FORMAT_NAME, $~,
format_top_name HANDLE EXPR, $FORMAT_TOP_NAME, $^,
format_line_break_characters HANDLE EXPR, $FORMAT_LINE_BREAK_CHARACTERS,
$:, format_formfeed HANDLE EXPR, $FORMAT_FORMFEED, $^L, $ACCUMULATOR, $^A,
$CHILD_ERROR, $?, $OS_ERROR, $ERRNO, $!, $EXTENDED_OS_ERROR, $^E,
$EVAL_ERROR, $@@, $PROCESS_ID, $PID, $$, $REAL_USER_ID, $UID, $<,
$EFFECTIVE_USER_ID, $EUID, $>, $REAL_GROUP_ID, $GID, $(,
$EFFECTIVE_GROUP_ID, $EGID, $), $PROGRAM_NAME, $0, $[, $], $COMPILING, $^C,
$DEBUGGING, $^D, $SYSTEM_FD_MAX, $^F, $^H, %^H, $INPLACE_EDIT, $^I, $^M,
$OSNAME, $^O, $PERLDB, $^P, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
0x100, 0x200, $LAST_REGEXP_CODE_RESULT, $^R, $EXCEPTIONS_BEING_CAUGHT, $^S,
$BASETIME, $^T, $PERL_VERSION, $^V, $WARNING, $^W, ${^WARNING_BITS},
${^WIDE_SYSTEM_CALLS}, $EXECUTABLE_NAME, $^X, $ARGV, @@ARGV, @@INC, @@_, %INC,
%ENV, $ENV{expr}, %SIG, $SIG{expr}

=item Error Indicators

=item Technical Note on the Syntax of Variable Names

=back

=item BUGS

=back

=head2 perllol - Manipulating Arrays of Arrays in Perl

=over 4

=item DESCRIPTION

=over 4

=item Declaration and Access of Arrays of Arrays

=item Growing Your Own

=item Access and Printing

=item Slices

=back

=item SEE ALSO

=item AUTHOR

=back

=head2 perlopentut - tutorial on opening things in Perl

=over 4

=item DESCRIPTION

=item Open E<agrave> la shell

=over 4

=item Simple Opens

=item Pipe Opens

=item The Minus File

=item Mixing Reads and Writes

=item Filters 

=back

=item Open E<agrave> la C

=over 4

=item Permissions E<agrave> la mode

=back

=item Obscure Open Tricks

=over 4

=item Re-Opening Files (dups)

=item Dispelling the Dweomer

=item Paths as Opens

=item Single Argument Open

=item Playing with STDIN and STDOUT

=back

=item Other I/O Issues

=over 4

=item Opening Non-File Files

=item Binary Files

=item File Locking

=back

=item SEE ALSO 

=item AUTHOR and COPYRIGHT

=item HISTORY

=back

=head2 perlretut - Perl regular expressions tutorial

=over 4

=item DESCRIPTION

=item Part 1: The basics

=over 4

=item Simple word matching

=item Using character classes

=item Matching this or that

=item Grouping things and hierarchical matching

=item Extracting matches

=item Matching repetitions

=item Building a regexp

=item Using regular expressions in Perl

=back

=item Part 2: Power tools

=over 4

=item More on characters, strings, and character classes

=item Compiling and saving regular expressions

=item Embedding comments and modifiers in a regular expression

=item Non-capturing groupings

=item Looking ahead and looking behind

=item Using independent subexpressions to prevent backtracking

=item Conditional expressions

=item A bit of magic: executing Perl code in a regular expression

=item Pragmas and debugging

=back

=item BUGS

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=over 4

=item Acknowledgments

=back

=back

=head2 perlre - Perl regular expressions

=over 4

=item DESCRIPTION

i, m, s, x

=over 4

=item Regular Expressions

cntrl, graph, print, punct, xdigit

=item Extended Patterns

C<(?#text)>, C<(?imsx-imsx)>, C<(?:pattern)>, C<(?imsx-imsx:pattern)>,
C<(?=pattern)>, C<(?!pattern)>, C<(?<=pattern)>, C<(?<!pattern)>, C<(?{
code })>, C<(??{ code })>, C<< (?>pattern) >>,
C<(?(condition)yes-pattern|no-pattern)>, C<(?(condition)yes-pattern)>

=item Backtracking

=item Version 8 Regular Expressions

=item Warning on \1 vs $1

=item Repeated patterns matching zero-length substring

=item Combining pieces together

C<ST>, C<S|T>, C<S{REPEAT_COUNT}>, C<S{min,max}>, C<S{min,max}?>, C<S?>,
C<S*>, C<S+>, C<S??>, C<S*?>, C<S+?>, C<< (?>S) >>, C<(?=S)>, C<(?<=S)>,
C<(?!S)>, C<(?<!S)>, C<(??{ EXPR })>,
C<(?(condition)yes-pattern|no-pattern)>

=item Creating custom RE engines

=back

=item BUGS

=item SEE ALSO

=back

=head2 perlref - Perl references and nested data structures

=over 4

=item NOTE

=item DESCRIPTION

=over 4

=item Making References

=item Using References

=item Symbolic references

=item Not-so-symbolic references

=item Pseudo-hashes: Using an array as a hash

=item Function Templates

=back

=item WARNING

=item SEE ALSO

=back

=head2 perlform - Perl formats

=over 4

=item DESCRIPTION

=over 4

=item Format Variables

=back

=item NOTES

=over 4

=item Footers

=item Accessing Formatting Internals

=back

=item WARNINGS

=back

=head2 perlboot - Beginner's Object-Oriented Tutorial

=over 4

=item DESCRIPTION

=over 4

=item If we could talk to the animals...

=item Introducing the method invocation arrow

=item Invoking a barnyard

=item The extra parameter of method invocation

=item Calling a second method to simplify things

=item Inheriting the windpipes

=item A few notes about @@ISA

=item Overriding the methods

=item Starting the search from a different place

=item The SUPER way of doing things

=item Where we're at so far...

=item A horse is a horse, of course of course -- or is it?

=item Invoking an instance method

=item Accessing the instance data

=item How to build a horse

=item Inheriting the constructor

=item Making a method work with either classes or instances

=item Adding parameters to a method

=item More interesting instances

=item A horse of a different color

=item Summary

=back

=item SEE ALSO

=item COPYRIGHT

=back

=head2 perltoot - Tom's object-oriented tutorial for perl

=over 4

=item DESCRIPTION

=item Creating a Class

=over 4

=item Object Representation

=item Class Interface

=item Constructors and Instance Methods

=item Planning for the Future: Better Constructors

=item Destructors

=item Other Object Methods

=back

=item Class Data

=over 4

=item Accessing Class Data

=item Debugging Methods

=item Class Destructors

=item Documenting the Interface

=back

=item Aggregation

=item Inheritance

=over 4

=item Overridden Methods

=item Multiple Inheritance

=item UNIVERSAL: The Root of All Objects

=back

=item Alternate Object Representations

=over 4

=item Arrays as Objects

=item Closures as Objects

=back

=item AUTOLOAD: Proxy Methods

=over 4

=item Autoloaded Data Methods

=item Inherited Autoloaded Data Methods

=back

=item Metaclassical Tools

=over 4

=item Class::Struct

=item Data Members as Variables

=back

=item NOTES

=over 4

=item Object Terminology

=back

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=item COPYRIGHT

=over 4

=item Acknowledgments

=back

=back

=head2 perltootc - Tom's OO Tutorial for Class Data in Perl

=over 4

=item DESCRIPTION

=item Class Data in a Can

=item Class Data as Package Variables

=over 4

=item Putting All Your Eggs in One Basket

=item Inheritance Concerns

=item The Eponymous Meta-Object

=item Indirect References to Class Data

=item Monadic Classes

=item Translucent Attributes

=back

=item Class Data as Lexical Variables

=over 4

=item Privacy and Responsibility 

=item File-Scoped Lexicals

=item More Inheritance Concerns

=item Locking the Door and Throwing Away the Key

=item Translucency Revisited

=back

=item NOTES

=item SEE ALSO

=item AUTHOR AND COPYRIGHT

=item ACKNOWLEDGEMENTS

=item HISTORY

=back

=head2 perlobj - Perl objects

=over 4

=item DESCRIPTION

=over 4

=item An Object is Simply a Reference

=item A Class is Simply a Package

=item A Method is Simply a Subroutine

=item Method Invocation

=item WARNING

=item Default UNIVERSAL methods

isa(CLASS), can(METHOD), VERSION( [NEED] )

=item Destructors

=item Summary

=item Two-Phased Garbage Collection

=back

=item SEE ALSO

=back

=head2 perlbot - Bag'o Object Tricks (the BOT)

=over 4

=item DESCRIPTION

=item OO SCALING TIPS

=item INSTANCE VARIABLES

=item SCALAR INSTANCE VARIABLES

=item INSTANCE VARIABLE INHERITANCE

=item OBJECT RELATIONSHIPS

=item OVERRIDING SUPERCLASS METHODS

=item USING RELATIONSHIP WITH SDBM

=item THINKING OF CODE REUSE

=item CLASS CONTEXT AND THE OBJECT

=item INHERITING A CONSTRUCTOR

=item DELEGATION

=back

=head2 perltie - how to hide an object class in a simple variable

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Tying Scalars

TIESCALAR classname, LIST, FETCH this, STORE this, value, UNTIE this,
DESTROY this

=item Tying Arrays

TIEARRAY classname, LIST, FETCH this, index, STORE this, index, value,
FETCHSIZE this, STORESIZE this, count, EXTEND this, count, EXISTS this,
key, DELETE this, key, CLEAR this, PUSH this, LIST, POP this, SHIFT this,
UNSHIFT this, LIST, SPLICE this, offset, length, LIST, UNTIE this, DESTROY
this

=item Tying Hashes

USER, HOME, CLOBBER, LIST, TIEHASH classname, LIST, FETCH this, key, STORE
this, key, value, DELETE this, key, CLEAR this, EXISTS this, key, FIRSTKEY
this, NEXTKEY this, lastkey, UNTIE this, DESTROY this

=item Tying FileHandles

TIEHANDLE classname, LIST, WRITE this, LIST, PRINT this, LIST, PRINTF this,
LIST, READ this, LIST, READLINE this, GETC this, CLOSE this, UNTIE this,
DESTROY this

=item UNTIE this

=item The C<untie> Gotcha

=back

=item SEE ALSO

=item BUGS

=item AUTHOR

=back

=head2 perlipc - Perl interprocess communication (signals, fifos, pipes,
safe subprocesses, sockets, and semaphores)

=over 4

=item DESCRIPTION

=item Signals

=item Named Pipes

=over 4

=item WARNING

=back

=item Using open() for IPC

=over 4

=item Filehandles

=item Background Processes

=item Complete Dissociation of Child from Parent

=item Safe Pipe Opens

=item Bidirectional Communication with Another Process

=item Bidirectional Communication with Yourself

=back

=item Sockets: Client/Server Communication

=over 4

=item Internet Line Terminators

=item Internet TCP Clients and Servers

=item Unix-Domain TCP Clients and Servers

=back

=item TCP Clients with IO::Socket

=over 4

=item A Simple Client

C<Proto>, C<PeerAddr>, C<PeerPort>

=item A Webget Client

=item Interactive Client with IO::Socket

=back

=item TCP Servers with IO::Socket

Proto, LocalPort, Listen, Reuse

=item UDP: Message Passing

=item SysV IPC

=item NOTES

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 perlfork - Perl's fork() emulation (EXPERIMENTAL, subject to change)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Behavior of other Perl features in forked pseudo-processes

$$ or $PROCESS_ID, %ENV, chdir() and all other builtins that accept
filenames, wait() and waitpid(), kill(), exec(), exit(), Open handles to
files, directories and network sockets

=item Resource limits

=item Killing the parent process

=item Lifetime of the parent process and pseudo-processes

=item CAVEATS AND LIMITATIONS

BEGIN blocks, Open filehandles, Forking pipe open() not yet implemented,
Global state maintained by XSUBs, Interpreter embedded in larger
application, Thread-safety of extensions

=back

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 perlnumber - semantics of numbers and numeric operations in Perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Storing numbers

=item Numeric operators and numeric conversions

=item Flavors of Perl numeric operations

Arithmetic operators except, C<no integer>, Arithmetic operators except,
C<use integer>, Bitwise operators, C<no integer>, Bitwise operators, C<use
integer>, Operators which expect an integer, Operators which expect a
string

=item AUTHOR

=item SEE ALSO

=back

=head2 perlthrtut - tutorial on threads in Perl

=over 4

=item DESCRIPTION

=item What Is A Thread Anyway?

=item Threaded Program Models

=over 4

=item Boss/Worker

=item Work Crew

=item Pipeline

=back

=item Native threads

=item What kind of threads are perl threads?

=item Threadsafe Modules

=item Thread Basics

=over 4

=item Basic Thread Support

=item Creating Threads

=item Giving up control

=item Waiting For A Thread To Exit

=item Errors In Threads

=item Ignoring A Thread

=back

=item Threads And Data

=over 4

=item Shared And Unshared Data

=item Thread Pitfall: Races

=item Controlling access: lock()

=item Thread Pitfall: Deadlocks

=item Queues: Passing Data Around

=back

=item Threads And Code

=over 4

=item Semaphores: Synchronizing Data Access

Basic semaphores, Advanced Semaphores

=item Attributes: Restricting Access To Subroutines

=item Subroutine Locks

=item Methods

=item Locking A Subroutine

=back

=item General Thread Utility Routines

=over 4

=item What Thread Am I In?

=item Thread IDs

=item Are These Threads The Same?

=item What Threads Are Running?

=back

=item A Complete Example

=item Conclusion

=item Bibliography

=over 4

=item Introductory Texts

=item OS-Related References

=item Other References

=back

=item Acknowledgements

=item AUTHOR

=item Copyrights

=back

=head2 perlport - Writing portable Perl

=over 4

=item DESCRIPTION

Not all Perl programs have to be portable, Nearly all of Perl already I<is>
portable

=item ISSUES

=over 4

=item Newlines

=item Numbers endianness and Width

=item Files and Filesystems

=item System Interaction

=item Interprocess Communication (IPC)

=item External Subroutines (XS)

=item Standard Modules

=item Time and Date

=item Character sets and character encoding

=item Internationalisation

=item System Resources

=item Security

=item Style

=back

=item CPAN Testers

Mailing list: cpan-testers@@perl.org, Testing results:
http://testers.cpan.org/

=item PLATFORMS

=over 4

=item Unix

=item DOS and Derivatives

=item S<Mac OS>

=item VMS

=item VOS

=item EBCDIC Platforms

=item Acorn RISC OS

=item Other perls

=back

=item FUNCTION IMPLEMENTATIONS

=over 4

=item Alphabetical Listing of Perl Functions

-I<X> FILEHANDLE, -I<X> EXPR, -I<X>, alarm SECONDS, alarm, binmode
FILEHANDLE, chmod LIST, chown LIST, chroot FILENAME, chroot, crypt
PLAINTEXT,SALT, dbmclose HASH, dbmopen HASH,DBNAME,MODE, dump LABEL, exec
LIST, fcntl FILEHANDLE,FUNCTION,SCALAR, flock FILEHANDLE,OPERATION, fork,
getlogin, getpgrp PID, getppid, getpriority WHICH,WHO, getpwnam NAME,
getgrnam NAME, getnetbyname NAME, getpwuid UID, getgrgid GID, getnetbyaddr
ADDR,ADDRTYPE, getprotobynumber NUMBER, getservbyport PORT,PROTO, getpwent,
getgrent, gethostent, getnetent, getprotoent, getservent, setpwent,
setgrent, sethostent STAYOPEN, setnetent STAYOPEN, setprotoent STAYOPEN,
setservent STAYOPEN, endpwent, endgrent, endhostent, endnetent,
endprotoent, endservent, getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob,
ioctl FILEHANDLE,FUNCTION,SCALAR, kill SIGNAL, LIST, link OLDFILE,NEWFILE,
lstat FILEHANDLE, lstat EXPR, lstat, msgctl ID,CMD,ARG, msgget KEY,FLAGS,
msgsnd ID,MSG,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, open FILEHANDLE,EXPR,
open FILEHANDLE, pipe READHANDLE,WRITEHANDLE, readlink EXPR, readlink,
select RBITS,WBITS,EBITS,TIMEOUT, semctl ID,SEMNUM,CMD,ARG, semget
KEY,NSEMS,FLAGS, semop KEY,OPSTRING, setgrent, setpgrp PID,PGRP,
setpriority WHICH,WHO,PRIORITY, setpwent, setsockopt
SOCKET,LEVEL,OPTNAME,OPTVAL, shmctl ID,CMD,ARG, shmget KEY,SIZE,FLAGS,
shmread ID,VAR,POS,SIZE, shmwrite ID,STRING,POS,SIZE, socketpair
SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, stat FILEHANDLE, stat EXPR, stat,
symlink OLDFILE,NEWFILE, syscall LIST, sysopen
FILEHANDLE,FILENAME,MODE,PERMS, system LIST, times, truncate
FILEHANDLE,LENGTH, truncate EXPR,LENGTH, umask EXPR, umask, utime LIST,
wait, waitpid PID,FLAGS

=back

=item CHANGES

v1.48, 02 February 2001, v1.47, 22 March 2000, v1.46, 12 February 2000,
v1.45, 20 December 1999, v1.44, 19 July 1999, v1.43, 24 May 1999, v1.42, 22
May 1999, v1.41, 19 May 1999, v1.40, 11 April 1999, v1.39, 11 February
1999, v1.38, 31 December 1998, v1.37, 19 December 1998, v1.36, 9 September
1998, v1.35, 13 August 1998, v1.33, 06 August 1998, v1.32, 05 August 1998,
v1.30, 03 August 1998, v1.23, 10 July 1998

=item Supported Platforms

=item SEE ALSO

=item AUTHORS / CONTRIBUTORS

=item VERSION

=back

=head2 perllocale - Perl locale handling (internationalization and
localization)

=over 4

=item DESCRIPTION

=item PREPARING TO USE LOCALES

=item USING LOCALES

=over 4

=item The use locale pragma

=item The setlocale function

=item Finding locales

=item LOCALE PROBLEMS

=item Temporarily fixing locale problems

=item Permanently fixing locale problems

=item Permanently fixing your system's locale configuration

=item Fixing system locale configuration

=item The localeconv function

=back

=item LOCALE CATEGORIES

=over 4

=item Category LC_COLLATE: Collation

=item Category LC_CTYPE: Character Types

=item Category LC_NUMERIC: Numeric Formatting

=item Category LC_MONETARY: Formatting of monetary amounts

=item LC_TIME

=item Other categories

=back

=item SECURITY

=item ENVIRONMENT

PERL_BADLANG, LC_ALL, LANGUAGE, LC_CTYPE, LC_COLLATE, LC_MONETARY,
LC_NUMERIC, LC_TIME, LANG

=item NOTES

=over 4

=item Backward compatibility

=item I18N:Collate obsolete

=item Sort speed and memory use impacts

=item write() and LC_NUMERIC

=item Freely available locale definitions

=item I18n and l10n

=item An imperfect standard

=back

=item BUGS

=over 4

=item Broken systems

=back

=item SEE ALSO

=item HISTORY

=back

=head2 perlunicode - Unicode support in Perl (EXPERIMENTAL, subject to
change)

=over 4

=item DESCRIPTION

=over 4

=item Important Caveat

Input and Output Disciplines, Regular Expressions, C<use utf8> still needed
to enable a few features

=item Byte and Character semantics

=item Effects of character semantics

=item Character encodings for input and output

=back

=item CAVEATS

=item SEE ALSO

=back

=head2 perlebcdic - Considerations for running Perl on EBCDIC platforms

=over 4

=item DESCRIPTION

=item COMMON CHARACTER CODE SETS

=over 4

=item ASCII

=item ISO 8859

=item Latin 1 (ISO 8859-1)

=item EBCDIC

=item 13 variant characters

=item 0037

=item 1047

=item POSIX-BC

=back

=item SINGLE OCTET TABLES

recipe 0, recipe 1, recipe 2, recipe 3, recipe 4

=item IDENTIFYING CHARACTER CODE SETS

=item CONVERSIONS

=over 4

=item tr///

=item iconv

=item C RTL

=back

=item OPERATOR DIFFERENCES

=item FUNCTION DIFFERENCES

chr(), ord(), pack(), print(), printf(), sort(), sprintf(), unpack()

=item REGULAR EXPRESSION DIFFERENCES

=item SOCKETS

=item SORTING

=over 4

=item Ignore ASCII vs. EBCDIC sort differences.

=item MONO CASE then sort data.

=item Convert, sort data, then re convert.

=item Perform sorting on one type of machine only.

=back

=item TRANFORMATION FORMATS

=over 4

=item URL decoding and encoding

=item uu encoding and decoding

=item Quoted-Printable encoding and decoding

=item Caesarian cyphers

=back

=item Hashing order and checksums

=item I18N AND L10N

=item MULTI OCTET CHARACTER SETS

=item OS ISSUES

=over 4

=item OS/400 

IFS access

=item OS/390 

chcp, dataset access, OS/390 iconv, locales

=item VM/ESA?

=item POSIX-BC?

=back

=item BUGS

=item SEE ALSO

=item REFERENCES

=item AUTHOR

=back

=head2 perlsec - Perl security

=over 4

=item DESCRIPTION

=over 4

=item Laundering and Detecting Tainted Data

=item Switches On the "#!" Line

=item Cleaning Up Your Path

=item Security Bugs

=item Protecting Your Programs

=back

=item SEE ALSO

=back

=head2 perlmod - Perl modules (packages and symbol tables)

=over 4

=item DESCRIPTION

=over 4

=item Packages

=item Symbol Tables

=item Package Constructors and Destructors

=item Perl Classes

=item Perl Modules

=back

=item SEE ALSO

=back

=head2 perlmodlib - constructing new Perl modules and finding existing ones

=over 4

=item DESCRIPTION

=item THE PERL MODULE LIBRARY

=over 4

=item Pragmatic Modules

attributes, attrs, autouse, base, blib, bytes, charnames, constant,
diagnostics, fields, filetest, integer, less, lib, locale, open, ops,
overload, re, sigtrap, strict, subs, utf8, vars, warnings,
warnings::register

=item Standard Modules

AnyDBM_File, AutoLoader, AutoSplit, B, B::Asmdata, B::Assembler, B::Bblock,
B::Bytecode, B::C, B::CC, B::Concise, B::Debug, B::Deparse,
B::Disassembler, B::Lint, B::Showlex, B::Stackobj, B::Stash, B::Terse,
B::Xref, Benchmark, ByteLoader, CGI, CGI::Apache, CGI::Carp, CGI::Cookie,
CGI::Fast, CGI::Pretty, CGI::Push, CGI::Switch, CGI::Util, CPAN,
CPAN::FirstTime, CPAN::Nox, Carp, Carp::Heavy, Class::Struct, Cwd, DB,
DB_File, Devel::SelfStubber, DirHandle, Dumpvalue, English, Env, Exporter,
Exporter::Heavy, ExtUtils::Command, ExtUtils::Embed, ExtUtils::Install,
ExtUtils::Installed, ExtUtils::Liblist, ExtUtils::MM_Cygwin,
ExtUtils::MM_OS2, ExtUtils::MM_Unix, ExtUtils::MM_VMS, ExtUtils::MM_Win32,
ExtUtils::MakeMaker, ExtUtils::Manifest, ExtUtils::Mkbootstrap,
ExtUtils::Mksymlists, ExtUtils::Packlist, ExtUtils::testlib, Fatal, Fcntl,
File::Basename, File::CheckTree, File::Compare, File::Copy, File::DosGlob,
File::Find, File::Path, File::Spec, File::Spec::Epoc,
File::Spec::Functions, File::Spec::Mac, File::Spec::OS2, File::Spec::Unix,
File::Spec::VMS, File::Spec::Win32, File::Temp, File::stat, FileCache,
FileHandle, FindBin, GDBM_File, Getopt::Long, Getopt::Std, I18N::Collate,
IO, IPC::Open2, IPC::Open3, Math::BigFloat, Math::BigInt, Math::Complex,
Math::Trig, Net::Ping, Net::hostent, Net::netent, Net::protoent,
Net::servent, O, Opcode, POSIX, Pod::Checker, Pod::Find, Pod::Html,
Pod::InputObjects, Pod::LaTeX, Pod::Man, Pod::ParseUtils, Pod::Parser,
Pod::Plainer, Pod::Select, Pod::Text, Pod::Text::Color,
Pod::Text::Overstrike, Pod::Text::Termcap, Pod::Usage, SDBM_File, Safe,
Search::Dict, SelectSaver, SelfLoader, Shell, Socket, Symbol,
Term::ANSIColor, Term::Cap, Term::Complete, Term::ReadLine, Test,
Test::Harness, Text::Abbrev, Text::ParseWords, Text::Soundex, Text::Tabs,
Text::Wrap, Thread, Thread::Queue, Thread::Semaphore, Thread::Signal,
Thread::Specific, Tie::Array, Tie::Handle, Tie::Hash, Tie::RefHash,
Tie::Scalar, Tie::SubstrHash, Time::Local, Time::gmtime, Time::localtime,
Time::tm, UNIVERSAL, User::grent, User::pwent, Win32

=item Extension Modules

=back

=item CPAN

=over 4

=item Africa

=item Asia

=item Central America

=item Europe

=item North America

=item Oceania

=item South America

=back

=item Modules: Creation, Use, and Abuse

=over 4

=item Guidelines for Module Creation

Adding a Copyright Notice

=item Guidelines for Converting Perl 4 Library Scripts into Modules

=item Guidelines for Reusing Application Code

=back

=item NOTE

=back

=head2 perlmodinstall - Installing CPAN Modules

=over 4

=item DESCRIPTION

=over 4

=item PREAMBLE

B<DECOMPRESS> the file, B<UNPACK> the file into a directory, B<BUILD> the
module (sometimes unnecessary), B<INSTALL> the module

=back

=item PORTABILITY

=item HEY

=item AUTHOR

=item COPYRIGHT

=back

=head2 perlnewmod - preparing a new module for distribution

=over 4

=item DESCRIPTION

=over 4

=item Warning

=item What should I make into a module?

=item Step-by-step: Preparing the ground

Look around, Check it's new, Discuss the need, Choose a name, Check again

=item Step-by-step: Making the module

Start with F<h2xs>, Use L<strict|strict> and L<warnings|warnings>, Use
L<Carp|Carp>, Use L<Exporter|Exporter> - wisely!, Use L<plain old
documentation|perlpod>, Write tests, Write the README

=item Step-by-step: Distributing your module

Get a CPAN user ID, C<perl Makefile.PL; make test; make dist>, Upload the
tarball, Announce to the modules list, Announce to clpa, Fix bugs!

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 perlfaq1 - General Questions About Perl ($Revision: 1.23 $, $Date:
1999/05/23 16:08:30 $)

=over 4

=item DESCRIPTION

=over 4

=item What is Perl?

=item Who supports Perl?  Who develops it?  Why is it free?

=item Which version of Perl should I use?

=item What are perl4 and perl5?

=item What is perl6?

=item How stable is Perl?

=item Is Perl difficult to learn?

=item How does Perl compare with other languages like Java, Python, REXX,
Scheme, or Tcl?

=item Can I do [task] in Perl?

=item When shouldn't I program in Perl?

=item What's the difference between "perl" and "Perl"?

=item Is it a Perl program or a Perl script?

=item What is a JAPH?

=item Where can I get a list of Larry Wall witticisms?

=item How can I convince my sysadmin/supervisor/employees to use version
5/5.005/Perl instead of some other language?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.32 $,
$Date: 1999/10/14 18:46:09 $)

=over 4

=item DESCRIPTION

=over 4

=item What machines support Perl?  Where do I get it?

=item How can I get a binary version of Perl?

=item I don't have a C compiler on my system.  How can I compile perl?

=item I copied the Perl binary from one machine to another, but scripts
don't work.

=item I grabbed the sources and tried to compile but gdbm/dynamic
loading/malloc/linking/... failed.  How do I make it work?

=item What modules and extensions are available for Perl?  What is CPAN? 
What does CPAN/src/... mean?

=item Is there an ISO or ANSI certified version of Perl?

=item Where can I get information on Perl?

=item What are the Perl newsgroups on Usenet?  Where do I post questions?

=item Where should I post source code?

=item Perl Books

References, Tutorials, Task-Oriented, Special Topics

=item Perl in Magazines

=item Perl on the Net: FTP and WWW Access

=item What mailing lists are there for Perl?

=item Archives of comp.lang.perl.misc

=item Where can I buy a commercial version of Perl?

=item Where do I send bug reports?

=item What is perl.com? Perl Mongers? pm.org? perl.org?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq3 - Programming Tools ($Revision: 1.38 $, $Date: 1999/05/23
16:08:30 $)

=over 4

=item DESCRIPTION

=over 4

=item How do I do (anything)?

=item How can I use Perl interactively?

=item Is there a Perl shell?

=item How do I debug my Perl programs?

=item How do I profile my Perl programs?

=item How do I cross-reference my Perl programs?

=item Is there a pretty-printer (formatter) for Perl?

=item Is there a ctags for Perl?

=item Is there an IDE or Windows Perl Editor?

CodeMagicCD, Komodo, The Object System, PerlBuilder, Perl code magic,
visiPerl+, GNU Emacs, MicroEMACS, XEmacs, Elvis, Vile, Vim, Codewright,
MultiEdit, SlickEdit, Bash, Ksh, Tcsh, Zsh, BBEdit and BBEdit Lite, Alpha

=item Where can I get Perl macros for vi?

=item Where can I get perl-mode for emacs?

=item How can I use curses with Perl?

=item How can I use X or Tk with Perl?

=item How can I generate simple menus without using CGI or Tk?

=item What is undump?

=item How can I make my Perl program run faster?

=item How can I make my Perl program take less memory?

=item Is it unsafe to return a pointer to local data?

=item How can I free an array or hash so my program shrinks?

=item How can I make my CGI script more efficient?

=item How can I hide the source for my Perl program?

=item How can I compile my Perl program into byte code or C?

=item How can I compile Perl into Java?

=item How can I get C<#!perl> to work on [MS-DOS,NT,...]?

=item Can I write useful Perl programs on the command line?

=item Why don't Perl one-liners work on my DOS/Mac/VMS system?

=item Where can I learn about CGI or Web programming in Perl?

=item Where can I learn about object-oriented Perl programming?

=item Where can I learn about linking C with Perl? [h2xs, xsubpp]

=item I've read perlembed, perlguts, etc., but I can't embed perl in
my C program; what am I doing wrong?

=item When I tried to run my script, I got this message. What does it
mean?

=item What's MakeMaker?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq4 - Data Manipulation ($Revision: 1.49 $, $Date: 1999/05/23
20:37:49 $)

=over 4

=item DESCRIPTION

=item Data: Numbers

=over 4

=item Why am I getting long decimals (eg, 19.9499999999999) instead of the
numbers I should be getting (eg, 19.95)?

=item Why isn't my octal data interpreted correctly?

=item Does Perl have a round() function?  What about ceil() and floor()? 
Trig functions?

=item How do I convert bits into ints?

=item Why doesn't & work the way I want it to?

=item How do I multiply matrices?

=item How do I perform an operation on a series of integers?

=item How can I output Roman numerals?

=item Why aren't my random numbers random?

=back

=item Data: Dates

=over 4

=item How do I find the week-of-the-year/day-of-the-year?

=item How do I find the current century or millennium?

=item How can I compare two dates and find the difference?

=item How can I take a string and turn it into epoch seconds?

=item How can I find the Julian Day?

=item How do I find yesterday's date?

=item Does Perl have a Year 2000 problem?  Is Perl Y2K compliant?

=back

=item Data: Strings

=over 4

=item How do I validate input?

=item How do I unescape a string?

=item How do I remove consecutive pairs of characters?

=item How do I expand function calls in a string?

=item How do I find matching/nesting anything?

=item How do I reverse a string?

=item How do I expand tabs in a string?

=item How do I reformat a paragraph?

=item How can I access/change the first N letters of a string?

=item How do I change the Nth occurrence of something?

=item How can I count the number of occurrences of a substring within a
string?
d570 2
a571 272
=item How can I split a [character] delimited string except when inside
[character]? (Comma-separated files)

=item How do I strip blank space from the beginning/end of a string?

=item How do I pad a string with blanks or pad a number with zeroes?

=item How do I extract selected columns from a string?

=item How do I find the soundex value of a string?

=item How can I expand variables in text strings?

=item What's wrong with always quoting "$vars"?

=item Why don't my <<HERE documents work?

1. There must be no space after the << part, 2. There (probably) should be
a semicolon at the end, 3. You can't (easily) have any space in front of
the tag

=back

=item Data: Arrays

=over 4

=item What is the difference between a list and an array?

=item What is the difference between $array[1] and @@array[1]?

=item How can I remove duplicate elements from a list or array?

a), b), c), d), e)

=item How can I tell whether a list or array contains a certain element?

=item How do I compute the difference of two arrays?  How do I compute the
intersection of two arrays?

=item How do I test whether two arrays or hashes are equal?

=item How do I find the first array element for which a condition is true?

=item How do I handle linked lists?

=item How do I handle circular lists?

=item How do I shuffle an array randomly?

=item How do I process/modify each element of an array?

=item How do I select a random element from an array?

=item How do I permute N elements of a list?

=item How do I sort an array by (anything)?

=item How do I manipulate arrays of bits?

=item Why does defined() return true on empty arrays and hashes?

=back

=item Data: Hashes (Associative Arrays)

=over 4

=item How do I process an entire hash?

=item What happens if I add or remove keys from a hash while iterating over
it?

=item How do I look up a hash element by value?

=item How can I know how many entries are in a hash?

=item How do I sort a hash (optionally by value instead of key)?

=item How can I always keep my hash sorted?

=item What's the difference between "delete" and "undef" with hashes?

=item Why don't my tied hashes make the defined/exists distinction?

=item How do I reset an each() operation part-way through?

=item How can I get the unique keys from two hashes?

=item How can I store a multidimensional array in a DBM file?

=item How can I make my hash remember the order I put elements into it?

=item Why does passing a subroutine an undefined element in a hash create
it?

=item How can I make the Perl equivalent of a C structure/C++ class/hash or
array of hashes or arrays?

=item How can I use a reference as a hash key?

=back

=item Data: Misc

=over 4

=item How do I handle binary data correctly?

=item How do I determine whether a scalar is a number/whole/integer/float?

=item How do I keep persistent data across program calls?

=item How do I print out or copy a recursive data structure?

=item How do I define methods for every class/object?

=item How do I verify a credit card checksum?

=item How do I pack arrays of doubles or floats for XS code?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq5 - Files and Formats ($Revision: 1.38 $, $Date: 1999/05/23
16:08:30 $)

=over 4

=item DESCRIPTION

=over 4

=item How do I flush/unbuffer an output filehandle?  Why must I do this?

=item How do I change one line in a file/delete a line in a file/insert a
line in the middle of a file/append to the beginning of a file?

=item How do I count the number of lines in a file?

=item How do I make a temporary file name?

=item How can I manipulate fixed-record-length files?

=item How can I make a filehandle local to a subroutine?  How do I pass
filehandles between subroutines?  How do I make an array of filehandles?

=item How can I use a filehandle indirectly?

=item How can I set up a footer format to be used with write()?

=item How can I write() into a string?

=item How can I output my numbers with commas added?

=item How can I translate tildes (~) in a filename?

=item How come when I open a file read-write it wipes it out?

=item Why do I sometimes get an "Argument list too long" when I use <*>?

=item Is there a leak/bug in glob()?

=item How can I open a file with a leading ">" or trailing blanks?

=item How can I reliably rename a file?

=item How can I lock a file?

=item Why can't I just open(FH, ">file.lock")?

=item I still don't get locking.  I just want to increment the number in
the file.  How can I do this?

=item How do I randomly update a binary file?

=item How do I get a file's timestamp in perl?

=item How do I set a file's timestamp in perl?

=item How do I print to more than one file at once?

=item How can I read in an entire file all at once?

=item How can I read in a file by paragraphs?

=item How can I read a single character from a file?  From the keyboard?

=item How can I tell whether there's a character waiting on a filehandle?

=item How do I do a C<tail -f> in perl?

=item How do I dup() a filehandle in Perl?

=item How do I close a file descriptor by number?

=item Why can't I use "C:\temp\foo" in DOS paths?  What doesn't
`C:\temp\foo.exe` work?

=item Why doesn't glob("*.*") get all the files?

=item Why does Perl let me delete read-only files?  Why does C<-i> clobber
protected files?  Isn't this a bug in Perl?

=item How do I select a random line from a file?

=item Why do I get weird spaces when I print an array of lines?

=back

=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq6 - Regexes ($Revision: 1.27 $, $Date: 1999/05/23 16:08:30 $)

=over 4

=item DESCRIPTION

=over 4

=item How can I hope to use regular expressions without creating illegible
and unmaintainable code?

Comments Outside the Regex, Comments Inside the Regex, Different Delimiters

=item I'm having trouble matching over more than one line.  What's wrong?

=item How can I pull out lines between two patterns that are themselves on
different lines?

=item I put a regular expression into $/ but it didn't work. What's wrong?

=item How do I substitute case insensitively on the LHS while preserving
case on the RHS?

=item How can I make C<\w> match national character sets?

=item How can I match a locale-smart version of C</[a-zA-Z]/>?

=item How can I quote a variable to use in a regex?

=item What is C</o> really for?

=item How do I use a regular expression to strip C style comments from a
file?

=item Can I use Perl regular expressions to match balanced text?

=item What does it mean that regexes are greedy?  How can I get around it?

=item How do I process each word on each line?

=item How can I print out a word-frequency or line-frequency summary?

=item How can I do approximate matching?

=item How do I efficiently match many regular expressions at once?

=item Why don't word-boundary searches with C<\b> work for me?

=item Why does using $&, $`, or $' slow my program down?

=item What good is C<\G> in a regular expression?

=item Are Perl regexes DFAs or NFAs?  Are they POSIX compliant?

=item What's wrong with using grep or map in a void context?
d573 1
a573 1
=item How can I match strings with multibyte characters?
d575 1
a575 1
=item How do I match a pattern that is supplied by the user?
d577 1
a577 1
=back
d579 1
a579 1
=item AUTHOR AND COPYRIGHT
d581 1
a581 1
=back
d583 1
a583 2
=head2 perlfaq7 - Perl Language Issues ($Revision: 1.28 $, $Date:
1999/05/23 20:36:18 $)
d585 1
a585 1
=over 4
d587 3
a589 67
=item DESCRIPTION

=over 4

=item Can I get a BNF/yacc/RE for the Perl language?

=item What are all these $@@%&* punctuation signs, and how do I know when to
use them?

=item Do I always/never have to quote my strings or use semicolons and
commas?

=item How do I skip some return values?

=item How do I temporarily block warnings?

=item What's an extension?

=item Why do Perl operators have different precedence than C operators?

=item How do I declare/create a structure?

=item How do I create a module?

=item How do I create a class?

=item How can I tell if a variable is tainted?

=item What's a closure?

=item What is variable suicide and how can I prevent it?

=item How can I pass/return a {Function, FileHandle, Array, Hash, Method,
Regex}?

Passing Variables and Functions, Passing Filehandles, Passing Regexes,
Passing Methods

=item How do I create a static variable?

=item What's the difference between dynamic and lexical (static) scoping? 
Between local() and my()?

=item How can I access a dynamic variable while a similarly named lexical
is in scope?

=item What's the difference between deep and shallow binding?

=item Why doesn't "my($foo) = <FILE>;" work right?

=item How do I redefine a builtin function, operator, or method?

=item What's the difference between calling a function as &foo and foo()?

=item How do I create a switch or case statement?

=item How can I catch accesses to undefined variables/functions/methods?

=item Why can't a method included in this same file be found?

=item How can I find out my current package?

=item How can I comment out a large block of perl code?

=item How do I clear a package?

=item How can I use a variable as a variable name?
d593 1
a593 1
=item AUTHOR AND COPYRIGHT
d595 1
a595 1
=back
d597 1
a597 2
=head2 perlfaq8 - System Interaction ($Revision: 1.39 $, $Date: 1999/05/23
18:37:57 $)
d599 1
a599 1
=over 4
d601 1
a601 1
=item DESCRIPTION
d603 5
a607 1
=over 4
d609 1
a609 1
=item How do I find out which operating system I'm running under?
d611 2
a612 1
=item How come exec() doesn't return?
d614 1
a614 1
=item How do I do fancy stuff with the keyboard/screen/mouse?
d616 1
a616 1
Keyboard, Screen, Mouse
d618 1
a618 1
=item How do I print something out in color?
d620 1
a620 1
=item How do I read just one key without waiting for a return key?
d622 1
a622 1
=item How do I check whether input is ready on the keyboard?
d624 1
a624 1
=item How do I clear the screen?
d626 1
a626 1
=item How do I get the screen size?
d628 1
a628 1
=item How do I ask the user for a password?
d630 1
a630 1
=item How do I read and write the serial port?
d632 1
a632 1
lockfiles, open mode, end of line, flushing output, non-blocking input
d634 1
a634 88
=item How do I decode encrypted password files?

=item How do I start a process in the background?

STDIN, STDOUT, and STDERR are shared, Signals, Zombies

=item How do I trap control characters/signals?

=item How do I modify the shadow password file on a Unix system?

=item How do I set the time and date?

=item How can I sleep() or alarm() for under a second?

=item How can I measure time under a second?

=item How can I do an atexit() or setjmp()/longjmp()? (Exception handling)

=item Why doesn't my sockets program work under System V (Solaris)?  What
does the error message "Protocol not supported" mean?

=item How can I call my system's unique C functions from Perl?

=item Where do I get the include files to do ioctl() or syscall()?

=item Why do setuid perl scripts complain about kernel problems?

=item How can I open a pipe both to and from a command?

=item Why can't I get the output of a command with system()?

=item How can I capture STDERR from an external command?

=item Why doesn't open() return an error when a pipe open fails?

=item What's wrong with using backticks in a void context?

=item How can I call backticks without shell processing?

=item Why can't my script read from STDIN after I gave it EOF (^D on Unix,
^Z on MS-DOS)?

=item How can I convert my shell script to perl?

=item Can I use perl to run a telnet or ftp session?

=item How can I write expect in Perl?

=item Is there a way to hide perl's command line from programs such as
"ps"?

=item I {changed directory, modified my environment} in a perl script.	How
come the change disappeared when I exited the script?  How do I get my
changes to be visible?

Unix

=item How do I close a process's filehandle without waiting for it to
complete?

=item How do I fork a daemon process?

=item How do I find out if I'm running interactively or not?

=item How do I timeout a slow event?

=item How do I set CPU limits?

=item How do I avoid zombies on a Unix system?

=item How do I use an SQL database?

=item How do I make a system() exit on control-C?

=item How do I open a file without blocking?

=item How do I install a module from CPAN?

=item What's the difference between require and use?

=item How do I keep my own module/library directory?

=item How do I add the directory my program lives in to the module/library
search path?

=item How do I add a directory to my include path at runtime?

=item What is socket.ph and where do I get it?
d638 1
a638 51
=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq9 - Networking ($Revision: 1.26 $, $Date: 1999/05/23 16:08:30
$)

=over 4

=item DESCRIPTION

=over 4

=item My CGI script runs from the command line but not the browser.  (500
Server Error)

=item How can I get better error messages from a CGI program?

=item How do I remove HTML from a string?

=item How do I extract URLs?

=item How do I download a file from the user's machine?  How do I open a
file on another machine?

=item How do I make a pop-up menu in HTML?

=item How do I fetch an HTML file?

=item How do I automate an HTML form submission?

=item How do I decode or create those %-encodings on the web?

=item How do I redirect to another page?

=item How do I put a password on my web pages?

=item How do I edit my .htpasswd and .htgroup files with Perl?

=item How do I make sure users can't enter values into a form that cause my
CGI script to do bad things?

=item How do I parse a mail header?

=item How do I decode a CGI form?

=item How do I check a valid mail address?

=item How do I decode a MIME/BASE64 string?

=item How do I return the user's mail address?
d640 1
a640 1
=item How do I send mail?
d642 1
a642 1
=item How do I use MIME to make an attachment to a mail message?
d644 2
a645 1
=item How do I read mail?
d647 1
a647 1
=item How do I find out my hostname/domainname/IP address?
d649 1
a649 1
=item How do I fetch a news article or the active newsgroups?
d651 1
a651 1
=item How do I fetch/put an FTP file?
d653 1
a653 1
=item How can I do RPC in Perl?
d655 1
a655 1
=back
d657 1
a657 1
=item AUTHOR AND COPYRIGHT
d659 1
a659 1
=back
d661 1
a661 1
=head2 perlcompile - Introduction to the Perl Compiler-Translator 
d663 1
a663 1
=over 4
d665 1
a665 1
=item DESCRIPTION
d667 2
a668 1
=over 4
d670 2
a671 1
=item Layout
d673 1
a673 1
B::Bytecode, B::C, B::CC, B::Lint, B::Deparse, B::Xref
d677 3
a679 1
=item Using The Back Ends
d681 1
a681 1
=over 4
d683 1
a683 1
=item The Cross Referencing Back End
d685 1
a685 1
i, &, s, r
d687 1
a687 1
=item The Decompiling Back End
d689 1
a689 1
=item The Lint Back End
d691 1
a691 1
=item The Simple C Back End
d693 1
a693 1
=item The Bytecode Back End
d695 1
a695 1
=item The Optimized C Back End
d697 1
a697 3
B, O, B::Asmdata, B::Assembler, B::Bblock, B::Bytecode, B::C, B::CC,
B::Debug, B::Deparse, B::Disassembler, B::Lint, B::Showlex, B::Stackobj,
B::Stash, B::Terse, B::Xref
d701 2
a702 1
=item KNOWN PROBLEMS
d704 1
a704 1
=item AUTHOR
d706 1
a706 1
=back
d708 1
a708 1
=head2 perlembed - how to embed perl in your C program
d710 1
a710 1
=over 4
d712 2
a713 1
=item DESCRIPTION
d715 1
a715 1
=over 4
d717 1
a717 1
=item PREAMBLE
d719 1
a719 2
B<Use C from Perl?>, B<Use a Unix program from Perl?>, B<Use Perl from
Perl?>, B<Use C from C?>, B<Use Perl from C?>
d721 2
a722 1
=item ROADMAP
d724 1
a724 1
=item Compiling your C program
d726 1
a726 1
=item Adding a Perl interpreter to your C program
d728 1
a728 1
=item Calling a Perl subroutine from your C program
d730 1
a730 1
=item Evaluating a Perl statement from your C program
d732 1
a732 1
=item Performing Perl pattern matches and substitutions from your C program
d734 1
a734 1
=item Fiddling with the Perl stack from your C program
d736 1
a736 1
=item Maintaining a persistent interpreter
d738 1
a738 1
=item Maintaining multiple interpreter instances
d740 1
a740 2
=item Using Perl modules, which themselves use C libraries, from your C
program
d742 1
a742 1
=back
d744 1
a744 1
=item Embedding Perl under Win32
d746 1
a746 1
=item MORAL
d748 2
a749 1
=item AUTHOR
d751 1
a751 1
=item COPYRIGHT
d753 1
a753 1
=back
d755 1
a755 1
=head2 perldebguts - Guts of Perl debugging 
d757 1
a757 1
=over 4
d759 1
a759 1
=item DESCRIPTION
d761 1
a761 1
=item Debugger Internals
d763 1
a763 1
=over 4
d765 1
a765 1
=item Writing Your Own Debugger
d767 1
a767 1
=back
d769 1
a769 1
=item Frame Listing Output Examples
d771 1
a771 1
=item Debugging regular expressions
d773 2
a774 1
=over 4
d776 1
a776 1
=item Compile-time output
d778 2
a779 4
C<anchored> I<STRING> C<at> I<POS>, C<floating> I<STRING> C<at>
I<POS1..POS2>, C<matching floating/anchored>, C<minlen>, C<stclass>
I<TYPE>, C<noscan>, C<isall>, C<GPOS>, C<plus>, C<implicit>, C<with eval>,
C<anchored(TYPE)>
d781 1
a781 1
=item Types of nodes
d783 1
a783 1
=item Run-time output
d787 1
a787 1
=item Debugging Perl memory usage
d789 1
a789 1
=over 4
d791 1
a791 1
=item Using C<$ENV{PERL_DEBUG_MSTATS}>
d793 1
a793 3
C<buckets SMALLEST(APPROX)..GREATEST(APPROX)>, Free/Used, C<Total sbrk():
SBRKed/SBRKs:CONTINUOUS>, C<pad: 0>, C<heads: 2192>, C<chain: 0>, C<tail:
6144>
d795 1
a795 1
=item Example of using B<-DL> switch
d797 1
a797 1
C<717>, C<002>, C<054>, C<602>, C<702>, C<704>
d799 2
a800 1
=item B<-DL> details
d802 1
a802 1
C<!!!>, C<!!>, C<!>
d804 1
a804 1
=item Limitations of B<-DL> statistics
d806 2
a807 1
=back
d809 1
a809 1
=item SEE ALSO
d811 2
a812 1
=back
d814 1
a814 1
=head2 perlxstut, perlXStut - Tutorial for writing XSUBs
d816 1
a816 1
=over 4
d818 1
a818 1
=item DESCRIPTION
d820 1
a820 1
=item SPECIAL NOTES
d822 2
a823 1
=over 4
d825 1
a825 1
=item make
d827 1
a827 1
=item Version caveat
d829 1
a829 1
=item Dynamic Loading versus Static Loading
d831 1
a831 1
=back
d833 1
a833 1
=item TUTORIAL
d835 1
a835 1
=over 4
d837 1
a837 1
=item EXAMPLE 1
d839 1
a839 1
=item EXAMPLE 2
d841 1
a841 1
=item What has gone on?
d843 1
a843 1
=item Writing good test scripts
d845 1
a845 1
=item EXAMPLE 3
d847 1
a847 1
=item What's new here?
d849 1
a849 1
=item Input and Output Parameters
d851 1
a851 1
=item The XSUBPP Program
d853 1
a853 1
=item The TYPEMAP file
d855 1
a855 1
=item Warning about Output Arguments
d857 2
a858 1
=item EXAMPLE 4
d860 1
a860 1
=item What has happened here?
d862 1
a862 1
=item Anatomy of .xs file
d864 1
a864 1
=item Getting the fat out of XSUBs
d866 1
a866 1
=item More about XSUB arguments
d868 2
a869 1
=item The Argument Stack
d871 2
a872 1
=item Extending your Extension
d874 1
a874 1
=item Documenting your Extension
d876 1
a876 1
=item Installing your Extension
d878 1
a878 1
=item EXAMPLE 5
d880 1
a880 1
=item New Things in this Example
d882 1
a882 1
=item EXAMPLE 6
d884 1
a884 1
=item New Things in this Example
d886 1
a886 1
=item EXAMPLE 7 (Coming Soon)
d888 1
a888 1
=item EXAMPLE 8 (Coming Soon)
d890 1
a890 1
=item EXAMPLE 9 (Coming Soon)
d892 1
a892 1
=item Troubleshooting these Examples
d894 2
a895 1
=back
d897 2
a898 1
=item See also
d900 1
a900 1
=item Author
d902 2
a903 1
=over 4
d905 2
a906 1
=item Last Changed
d908 1
a908 1
=back
d910 1
a910 1
=back
d912 1
a912 1
=head2 perlxs - XS language reference manual
d914 1
a914 3
=over 4

=item DESCRIPTION
d916 1
a916 1
=over 4
d918 1
a918 1
=item Introduction
d920 1
a920 1
=item On The Road
d922 1
a922 1
=item The Anatomy of an XSUB
d924 1
a924 1
=item The Argument Stack
d926 1
a926 1
=item The RETVAL Variable
d928 1
a928 1
=item The MODULE Keyword
d930 1
a930 1
=item The PACKAGE Keyword
d932 1
a932 1
=item The PREFIX Keyword
d934 1
a934 1
=item The OUTPUT: Keyword
d936 2
a937 1
=item The NO_OUTPUT Keyword
d939 1
a939 1
=item The CODE: Keyword
d941 1
a941 1
=item The INIT: Keyword
d943 1
a943 1
=item The NO_INIT Keyword
d945 1
a945 1
=item Initializing Function Parameters
d947 1
a947 1
=item Default Parameter Values
d949 1
a949 1
=item The PREINIT: Keyword
d951 1
a951 1
=item The SCOPE: Keyword
d953 1
a953 1
=item The INPUT: Keyword
d955 1
a955 1
=item The IN/OUTLIST/IN_OUTLIST/OUT/IN_OUT Keywords
d957 1
a957 1
=item Variable-length Parameter Lists
d959 1
a959 1
=item The C_ARGS: Keyword
d961 1
a961 1
=item The PPCODE: Keyword
d963 1
a963 1
=item Returning Undef And Empty Lists
d965 1
a965 1
=item The REQUIRE: Keyword
d967 1
a967 1
=item The CLEANUP: Keyword
d969 1
a969 1
=item The POST_CALL: Keyword
d971 1
a971 1
=item The BOOT: Keyword
d973 1
a973 1
=item The VERSIONCHECK: Keyword
d975 1
a975 1
=item The PROTOTYPES: Keyword
d977 1
a977 1
=item The PROTOTYPE: Keyword
d979 1
a979 1
=item The ALIAS: Keyword
d981 1
a981 1
=item The INTERFACE: Keyword
d983 1
a983 1
=item The INTERFACE_MACRO: Keyword
d985 1
a985 1
=item The INCLUDE: Keyword
d987 2
a988 1
=item The CASE: Keyword
d990 1
a990 1
=item The & Unary Operator
d992 1
a992 1
=item Inserting POD, Comments and C Preprocessor Directives
d994 1
a994 1
=item Using XS With C++
d996 1
a996 1
=item Interface Strategy
d998 1
a998 1
=item Perl Objects And C Structures
d1000 1
a1000 1
=item The Typemap
d1002 1
a1002 1
=back
d1004 1
a1004 1
=item EXAMPLES
d1006 1
a1006 1
=item XS VERSION
d1008 2
a1009 1
=item AUTHOR
d1011 1
a1011 1
=back
d1013 1
a1013 1
=head2 perlclib - Internal replacements for standard C library functions
d1015 1
a1015 1
=over 4
d1017 2
a1018 1
=item DESCRIPTION
d1020 3
a1022 1
=over 4
d1024 1
a1024 1
=item Conventions
d1026 2
a1027 1
C<t>, C<p>, C<n>, C<s>
d1029 1
a1029 1
=item File Operations
d1031 1
a1031 1
=item File Input and Output
d1033 1
a1033 1
=item File Positioning
d1035 1
a1035 1
=item Memory Management and String Handling
d1037 1
a1037 1
=item Character Class Tests
d1039 1
a1039 1
=item F<stdlib.h> functions
d1041 1
a1041 1
=item Miscellaneous functions
d1043 1
a1043 1
=back
d1045 1
a1045 1
=item SEE ALSO
d1047 1
a1047 1
=back
d1049 1
a1049 1
=head2 perlguts - Introduction to the Perl API
d1051 1
a1051 1
=over 4
d1053 2
a1054 1
=item DESCRIPTION
d1056 1
a1056 1
=item Variables
d1058 1
a1058 1
=over 4
d1060 1
a1060 1
=item Datatypes
d1062 1
a1062 1
=item What is an "IV"?
d1064 1
a1064 1
=item Working with SVs
d1066 2
a1067 1
=item Offsets
d1069 1
a1069 1
=item What's Really Stored in an SV?
d1071 1
a1071 1
=item Working with AVs
d1073 1
a1073 1
=item Working with HVs
d1075 2
a1076 1
=item Hash API Extensions
d1078 1
a1078 1
=item References
d1080 1
a1080 1
=item Blessed References and Class Objects
d1082 1
a1082 1
=item Creating New Variables
d1084 2
a1085 1
=item Reference Counts and Mortality
d1087 1
a1087 1
=item Stashes and Globs
d1089 1
a1089 1
=item Double-Typed SVs
d1091 1
a1091 1
=item Magic Variables
d1093 1
a1093 1
=item Assigning Magic
d1095 1
a1095 1
=item Magic Virtual Tables
d1097 1
a1097 1
=item Finding Magic
d1099 1
a1099 1
=item Understanding the Magic of Tied Hashes and Arrays
d1101 2
a1102 1
=item Localizing changes
d1104 1
a1104 10
C<SAVEINT(int i)>, C<SAVEIV(IV i)>, C<SAVEI32(I32 i)>, C<SAVELONG(long i)>,
C<SAVESPTR(s)>, C<SAVEPPTR(p)>, C<SAVEFREESV(SV *sv)>, C<SAVEMORTALIZESV(SV
*sv)>, C<SAVEFREEOP(OP *op)>, C<SAVEFREEPV(p)>, C<SAVECLEARSV(SV *sv)>,
C<SAVEDELETE(HV *hv, char *key, I32 length)>,
C<SAVEDESTRUCTOR(DESTRUCTORFUNC_NOCONTEXT_t f, void *p)>,
C<SAVEDESTRUCTOR_X(DESTRUCTORFUNC_t f, void *p)>, C<SAVESTACK_POS()>, C<SV*
save_scalar(GV *gv)>, C<AV* save_ary(GV *gv)>, C<HV* save_hash(GV *gv)>,
C<void save_item(SV *item)>, C<void save_list(SV **sarg, I32 maxsarg)>,
C<SV* save_svref(SV **sptr)>, C<void save_aptr(AV **aptr)>, C<void
save_hptr(HV **hptr)>
d1106 1
a1106 1
=back
d1108 1
a1108 1
=item Subroutines
d1110 1
a1110 1
=over 4
d1112 1
a1112 1
=item XSUBs and the Argument Stack
d1114 1
a1114 1
=item Calling Perl Routines from within C Programs
d1116 1
a1116 1
=item Memory Allocation
d1118 1
a1118 1
=item PerlIO
d1120 1
a1120 1
=item Putting a C value on Perl stack
d1122 1
a1122 1
=item Scratchpads
d1124 1
a1124 1
=item Scratchpads and recursion
d1128 1
a1128 1
=item Compiled code
d1130 1
a1130 1
=over 4
d1132 1
a1132 1
=item Code tree
d1134 1
a1134 1
=item Examining the tree
d1136 1
a1136 1
=item Compile pass 1: check routines
d1138 1
a1138 1
=item Compile pass 1a: constant folding
d1140 1
a1140 1
=item Compile pass 2: context propagation
d1142 1
a1142 1
=item Compile pass 3: peephole optimization
d1144 1
a1144 1
=back
d1146 1
a1146 1
=item Examining internal data structures with the C<dump> functions
d1148 1
a1148 1
=item How multiple interpreters and concurrency are supported
d1150 1
a1150 1
=over 4
d1152 1
a1152 1
=item Background and PERL_IMPLICIT_CONTEXT
d1154 1
a1154 1
=item So what happened to dTHR?
d1156 1
a1156 1
=item How do I use all this in extensions?
d1158 1
a1158 1
=item Should I do anything special if I call perl from multiple threads?
d1160 1
a1160 1
=item Future Plans and PERL_IMPLICIT_SYS
d1162 1
a1162 1
=back
d1164 1
a1164 1
=item Internal Functions
d1166 1
a1166 1
A, p, d, s, n, r, f, M, o, j, x
d1168 1
a1168 1
=over 4
d1170 1
a1170 1
=item Formatted Printing of IVs, UVs, and NVs
d1172 1
a1172 1
=item Pointer-To-Integer and Integer-To-Pointer
d1174 1
a1174 1
=item Source Documentation
d1176 1
a1176 1
=back
d1178 1
a1178 1
=item Unicode Support
d1180 1
a1180 1
=over 4
d1182 1
a1182 1
=item What B<is> Unicode, anyway?
d1184 1
a1184 1
=item How can I recognise a UTF8 string?
d1186 1
a1186 1
=item How does UTF8 represent Unicode characters?
d1188 1
a1188 1
=item How does Perl store UTF8 strings?
d1190 1
a1190 1
=item How do I convert a string to UTF8?
d1192 1
a1192 1
=item Is there anything else I need to know?
d1194 1
a1194 1
=back
d1196 1
a1196 1
=item AUTHORS
d1198 1
a1198 1
=item SEE ALSO
d1200 1
a1200 1
=back
d1202 1
a1202 1
=head2 perlcall - Perl calling conventions from C
d1204 1
a1204 1
=over 4
d1206 1
a1206 1
=item DESCRIPTION
d1208 1
a1208 1
An Error Handler, An Event Driven Program
d1210 1
a1210 1
=item THE CALL_ FUNCTIONS
d1212 1
a1212 1
call_sv, call_pv, call_method, call_argv
d1214 1
a1214 1
=item FLAG VALUES
d1216 1
a1216 1
=over 4
d1218 1
a1218 1
=item  G_VOID
d1220 1
a1220 1
=item  G_SCALAR
d1222 1
a1222 1
=item G_ARRAY
d1224 1
a1224 5
=item G_DISCARD

=item G_NOARGS

=item G_EVAL
d1226 1
a1226 1
=item G_KEEPERR
d1228 1
a1228 1
=item Determining the Context
d1230 1
a1230 1
=back
d1232 1
a1232 1
=item KNOWN PROBLEMS
d1234 1
a1234 1
=item EXAMPLES
d1236 1
a1236 1
=over 4
d1238 1
a1238 1
=item No Parameters, Nothing returned
d1240 1
a1240 1
=item Passing Parameters
d1242 1
a1242 1
=item Returning a Scalar
d1244 1
a1244 1
=item Returning a list of values
d1246 1
a1246 1
=item Returning a list in a scalar context
d1248 1
a1248 1
=item Returning Data from Perl via the parameter list
d1250 1
a1250 1
=item Using G_EVAL
d1252 1
a1252 1
=item Using G_KEEPERR
d1254 1
a1254 1
=item Using call_sv
d1256 1
a1256 1
=item Using call_argv
d1258 8
a1265 1
=item Using call_method
d1267 1
a1267 1
=item Using GIMME_V
d1269 1
a1269 1
=item Using Perl to dispose of temporaries
d1271 1
a1271 1
=item Strategies for storing Callback Context Information
d1273 1
a1273 3
1. Ignore the problem - Allow only 1 callback, 2. Create a sequence of
callbacks - hard wired limit, 3. Use a parameter to map to the Perl
callback
d1275 1
a1275 1
=item Alternate Stack Manipulation
d1277 1
a1277 1
=item Creating and calling an anonymous subroutine in C
d1279 1
a1279 1
=back
d1281 1
a1281 1
=item SEE ALSO
d1283 1
a1283 1
=item AUTHOR
d1285 1
a1285 1
=item DATE
d1289 6
a1294 1
=head2 perlutil - utilities packaged with the Perl distribution
d1296 1
a1296 1
=over 4
d1298 1
a1298 1
=item DESCRIPTION
d1300 1
a1300 1
=over 4
d1302 1
a1302 1
=item DOCUMENTATION
d1304 1
a1304 4
L<perldoc|perldoc>, L<pod2man|pod2man> and L<pod2text|pod2text>,
L<pod2html|pod2html> and L<pod2latex|pod2latex>, L<pod2usage|pod2usage>,
L<podselect|podselect>, L<podchecker|podchecker>, L<splain|splain>,
L<roffitall|roffitall>
d1306 1
a1306 1
=item CONVERTORS
d1308 1
a1308 1
L<a2p|a2p>, L<s2p|s2p>, L<find2perl|find2perl>
d1310 1
a1310 1
=item Development
d1312 1
a1312 2
L<perlbug|perlbug>, L<h2ph|h2ph>, L<c2ph|c2ph> and L<pstruct|pstruct>,
L<h2xs|h2xs>, L<dprofpp|dprofpp>, L<perlcc|perlcc>
d1314 1
a1314 1
=item SEE ALSO
d1316 1
a1316 1
=back
d1318 1
a1318 1
=back
d1320 1
a1320 1
=head2 perlfilter - Source Filters
d1322 1
a1322 1
=over 4
d1324 1
a1324 1
=item DESCRIPTION
d1326 1
a1326 1
=item CONCEPTS
d1328 1
a1328 1
=item USING FILTERS
d1330 1
a1330 1
=item WRITING A SOURCE FILTER
d1332 1
a1332 1
=item WRITING A SOURCE FILTER IN C
d1334 1
a1334 1
B<Decryption Filters>
d1336 1
a1336 1
=item CREATING A SOURCE FILTER AS A SEPARATE EXECUTABLE
d1338 1
a1338 1
=item WRITING A SOURCE FILTER IN PERL
d1340 1
a1340 1
=item USING CONTEXT: THE DEBUG FILTER
d1342 1
a1342 1
=item CONCLUSION
d1344 1
a1344 1
=item REQUIREMENTS
d1346 1
a1346 1
=item AUTHOR
d1348 1
a1348 1
=item Copyrights
d1352 1
a1352 1
=head2 perldbmfilter - Perl DBM Filters
d1354 1
a1354 1
=over 4
d1356 1
a1356 1
=item SYNOPSIS
d1358 1
a1358 1
=item DESCRIPTION
d1360 1
a1360 2
B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>
d1362 1
a1362 1
=over 4
d1364 1
a1364 1
=item The Filter
d1366 1
a1366 1
=item An Example -- the NULL termination problem.
d1368 1
a1368 1
=item Another Example -- Key is a C int.
d1370 1
a1370 1
=back
d1372 1
a1372 1
=item SEE ALSO
d1374 1
a1374 1
=item AUTHOR
d1376 1
a1376 1
=back
d1378 1
a1378 1
=head2 perlapi - autogenerated documentation for the perl public API
d1380 1
a1380 1
=over 4
d1382 1
a1382 1
=item DESCRIPTION
d1384 1
a1384 54
AvFILL, av_clear, av_delete, av_exists, av_extend, av_fetch, av_fill,
av_len, av_make, av_pop, av_push, av_shift, av_store, av_undef, av_unshift,
bytes_from_utf8, bytes_to_utf8, call_argv, call_method, call_pv, call_sv,
CLASS, Copy, croak, CvSTASH, dMARK, dORIGMARK, dSP, dXSARGS, dXSI32, ENTER,
eval_pv, eval_sv, EXTEND, fbm_compile, fbm_instr, FREETMPS, get_av, get_cv,
get_hv, get_sv, GIMME, GIMME_V, GvSV, gv_fetchmeth, gv_fetchmethod,
gv_fetchmethod_autoload, gv_stashpv, gv_stashsv, G_ARRAY, G_DISCARD,
G_EVAL, G_NOARGS, G_SCALAR, G_VOID, HEf_SVKEY, HeHASH, HeKEY, HeKLEN, HePV,
HeSVKEY, HeSVKEY_force, HeSVKEY_set, HeVAL, HvNAME, hv_clear, hv_delete,
hv_delete_ent, hv_exists, hv_exists_ent, hv_fetch, hv_fetch_ent,
hv_iterinit, hv_iterkey, hv_iterkeysv, hv_iternext, hv_iternextsv,
hv_iterval, hv_magic, hv_store, hv_store_ent, hv_undef, isALNUM, isALPHA,
isDIGIT, isLOWER, isSPACE, isUPPER, is_utf8_char, is_utf8_string, items,
ix, LEAVE, looks_like_number, MARK, mg_clear, mg_copy, mg_find, mg_free,
mg_get, mg_length, mg_magical, mg_set, Move, New, newAV, Newc, newCONSTSUB,
newHV, newRV_inc, newRV_noinc, NEWSV, newSViv, newSVnv, newSVpv, newSVpvf,
newSVpvn, newSVrv, newSVsv, newSVuv, newXS, newXSproto, Newz, Nullav,
Nullch, Nullcv, Nullhv, Nullsv, ORIGMARK, perl_alloc, perl_construct,
perl_destruct, perl_free, perl_parse, perl_run, PL_modglobal, PL_na,
PL_sv_no, PL_sv_undef, PL_sv_yes, POPi, POPl, POPn, POPp, POPs, PUSHi,
PUSHMARK, PUSHn, PUSHp, PUSHs, PUSHu, PUTBACK, Renew, Renewc, require_pv,
RETVAL, Safefree, savepv, savepvn, SAVETMPS, SP, SPAGAIN, ST, strEQ, strGE,
strGT, strLE, strLT, strNE, strnEQ, strnNE, StructCopy, SvCUR, SvCUR_set,
SvEND, SvGETMAGIC, SvGROW, SvIOK, SvIOKp, SvIOK_notUV, SvIOK_off, SvIOK_on,
SvIOK_only, SvIOK_only_UV, SvIOK_UV, SvIV, SvIVX, SvLEN, SvNIOK, SvNIOKp,
SvNIOK_off, SvNOK, SvNOKp, SvNOK_off, SvNOK_on, SvNOK_only, SvNV, SvNVX,
SvOK, SvOOK, SvPOK, SvPOKp, SvPOK_off, SvPOK_on, SvPOK_only,
SvPOK_only_UTF8, SvPV, SvPVX, SvPV_force, SvPV_nolen, SvREFCNT,
SvREFCNT_dec, SvREFCNT_inc, SvROK, SvROK_off, SvROK_on, SvRV, SvSETMAGIC,
SvSetSV, SvSetSV_nosteal, SvSTASH, SvTAINT, SvTAINTED, SvTAINTED_off,
SvTAINTED_on, SvTRUE, svtype, SvTYPE, SVt_IV, SVt_NV, SVt_PV, SVt_PVAV,
SVt_PVCV, SVt_PVHV, SVt_PVMG, SvUPGRADE, SvUTF8, SvUTF8_off, SvUTF8_on,
SvUV, SvUVX, sv_2mortal, sv_bless, sv_catpv, sv_catpvf, sv_catpvf_mg,
sv_catpvn, sv_catpvn_mg, sv_catpv_mg, sv_catsv, sv_catsv_mg, sv_chop,
sv_clear, sv_cmp, sv_cmp_locale, sv_dec, sv_derived_from, sv_eq, sv_free,
sv_gets, sv_grow, sv_inc, sv_insert, sv_isa, sv_isobject, sv_len,
sv_len_utf8, sv_magic, sv_mortalcopy, sv_newmortal, sv_pvn_force,
sv_pvutf8n_force, sv_reftype, sv_replace, sv_rvweaken, sv_setiv,
sv_setiv_mg, sv_setnv, sv_setnv_mg, sv_setpv, sv_setpvf, sv_setpvf_mg,
sv_setpviv, sv_setpviv_mg, sv_setpvn, sv_setpvn_mg, sv_setpv_mg,
sv_setref_iv, sv_setref_nv, sv_setref_pv, sv_setref_pvn, sv_setsv,
sv_setsv_mg, sv_setuv, sv_setuv_mg, sv_true, sv_unmagic, sv_unref,
sv_upgrade, sv_usepvn, sv_usepvn_mg, sv_utf8_downgrade, sv_utf8_encode,
sv_utf8_upgrade, sv_vcatpvfn, sv_vsetpvfn, THIS, toLOWER, toUPPER,
utf8_distance, utf8_hop, utf8_length, utf8_to_bytes, utf8_to_uv,
utf8_to_uv_simple, uv_to_utf8, warn, XPUSHi, XPUSHn, XPUSHp, XPUSHs,
XPUSHu, XS, XSRETURN, XSRETURN_EMPTY, XSRETURN_IV, XSRETURN_NO,
XSRETURN_NV, XSRETURN_PV, XSRETURN_UNDEF, XSRETURN_YES, XST_mIV, XST_mNO,
XST_mNV, XST_mPV, XST_mUNDEF, XST_mYES, XS_VERSION, XS_VERSION_BOOTCHECK,
Zero

=item AUTHORS

=item SEE ALSO
d1388 1
a1388 2
=head2 perlintern - autogenerated documentation of purely B<internal> 
		 Perl functions
d1390 50
a1439 1
=over 4
d1441 1
a1441 1
=item DESCRIPTION
d1443 1
a1443 2
is_gv_magical, LVRET, PL_DBsingle, PL_DBsub, PL_DBtrace, PL_dowarn,
PL_last_in_gv, PL_ofs_sv, PL_rs
d1445 1
a1445 1
=item AUTHORS
d1447 1
a1447 1
=item SEE ALSO
d1449 1
a1449 1
=back
d1451 1
a1451 1
=head2 perlapio - perl's IO abstraction interface.
d1453 8
a1460 1
=over 4
d1462 1
a1462 1
=item SYNOPSIS
d1464 1
a1464 1
=item DESCRIPTION
d1466 1
a1466 10
B<PerlIO *>, B<PerlIO_stdin()>, B<PerlIO_stdout()>, B<PerlIO_stderr()>,
B<PerlIO_open(path, mode)>, B<PerlIO_fdopen(fd,mode)>,
B<PerlIO_printf(f,fmt,...)>, B<PerlIO_vprintf(f,fmt,a)>,
B<PerlIO_stdoutf(fmt,...)>, B<PerlIO_read(f,buf,count)>,
B<PerlIO_write(f,buf,count)>, B<PerlIO_close(f)>, B<PerlIO_puts(f,s)>,
B<PerlIO_putc(f,c)>, B<PerlIO_ungetc(f,c)>, B<PerlIO_getc(f)>,
B<PerlIO_eof(f)>, B<PerlIO_error(f)>, B<PerlIO_fileno(f)>,
B<PerlIO_clearerr(f)>, B<PerlIO_flush(f)>, B<PerlIO_tell(f)>,
B<PerlIO_seek(f,o,w)>, B<PerlIO_getpos(f,p)>, B<PerlIO_setpos(f,p)>,
B<PerlIO_rewind(f)>, B<PerlIO_tmpfile()>
d1468 1
a1468 1
=over 4
d1470 1
a1470 1
=item Co-existence with stdio
d1472 1
a1472 6
B<PerlIO_importFILE(f,flags)>, B<PerlIO_exportFILE(f,flags)>,
B<PerlIO_findFILE(f)>, B<PerlIO_releaseFILE(p,f)>, B<PerlIO_setlinebuf(f)>,
B<PerlIO_has_cntptr(f)>, B<PerlIO_get_ptr(f)>, B<PerlIO_get_cnt(f)>,
B<PerlIO_canset_cnt(f)>, B<PerlIO_fast_gets(f)>,
B<PerlIO_set_ptrcnt(f,p,c)>, B<PerlIO_set_cnt(f,c)>, B<PerlIO_has_base(f)>,
B<PerlIO_get_base(f)>, B<PerlIO_get_bufsiz(f)>
d1474 1
a1474 1
=back
d1478 1
a1478 3
=head2 perltodo - Perl TO-DO List

=over 4
d1480 1
a1480 1
=item DESCRIPTION
d1482 1
a1482 1
=item Infrastructure
d1484 1
a1484 1
=over 4
d1486 1
a1486 1
=item Mailing list archives
d1488 1
a1488 1
=item Bug tracking system
d1490 2
a1491 1
=item Regression Tests
d1493 1
a1493 2
Coverage, Regression, __DIE__, suidperl, The 25% slowdown from perl4 to
perl5
d1495 1
a1495 1
=back
d1497 1
a1497 1
=item Configure
d1499 1
a1499 1
=over 4
d1501 4
a1504 1
=item Install HTML
d1508 1
a1508 1
=item Perl Language
d1510 3
a1512 1
=over 4
d1514 1
a1514 1
=item 64-bit Perl
d1516 1
a1516 1
=item Prototypes
d1518 1
a1518 1
Named prototypes, Indirect objects, Method calls, Context, Scoped subs
d1522 1
a1522 1
=item Perl Internals
d1524 1
a1524 1
=over 4
d1526 1
a1526 1
=item magic_setisa
d1528 1
a1528 1
=item Garbage Collection
d1530 1
a1530 1
=item Reliable signals
d1532 1
a1532 2
Alternate runops() for signal despatch, Figure out how to die() in delayed
sighandler, Add tests for Thread::Signal, Automatic tests against CPAN
d1534 1
a1534 1
=item Interpolated regex performance bugs
d1536 1
a1536 1
=item Memory leaks from failed eval/regcomp
d1538 1
a1538 1
=item Make XS easier to use
d1540 1
a1540 1
=item Make embedded Perl easier to use
d1542 1
a1542 1
=item Namespace cleanup
d1544 1
a1544 1
=item MULTIPLICITY
d1546 1
a1546 1
=item MacPerl
d1550 1
a1550 1
=item Documentation
d1552 1
a1552 1
=over 4
d1554 1
a1554 1
=item A clear division into tutorial and reference
d1556 1
a1556 1
=item Remove the artificial distinction between operators and functions
d1558 1
a1558 1
=item More tutorials
d1560 1
a1560 1
Regular expressions, I/O, pack/unpack, Debugging
d1562 1
a1562 1
=item Include a search tool
d1564 1
a1564 1
=item Include a locate tool
d1566 1
a1566 1
=item Separate function manpages by default
d1568 1
a1568 1
=item Users can't find the manpages
d1570 1
a1570 1
=item Install ALL Documentation
d1572 1
a1572 1
=item Outstanding issues to be documented
d1574 1
a1574 1
=item Adapt www.linuxhq.com for Perl
d1576 1
a1576 1
=item Replace man with a perl program
d1578 1
a1578 1
=item Unicode tutorial
d1582 1
a1582 1
=item Modules
d1584 1
a1584 1
=over 4
d1586 1
a1586 1
=item Update the POSIX extension to conform with the POSIX 1003.1 Edition 2
d1588 1
a1588 1
=item Module versions
d1590 1
a1590 1
=item New modules
d1592 1
a1592 1
=item Profiler
d1594 1
a1594 1
=item Tie Modules
d1596 1
a1596 1
VecArray, SubstrArray, VirtualArray, ShiftSplice
d1598 1
a1598 1
=item Procedural options
d1600 1
a1600 1
=item RPC
d1602 1
a1602 1
=item y2k localtime/gmtime
d1604 1
a1604 1
=item Export File::Find variables
d1606 1
a1606 1
=item Ioctl
d1608 1
a1608 1
=item Debugger attach/detach
d1610 1
a1610 1
=item Regular Expression debugger
d1612 1
a1612 1
=item Alternative RE Syntax
d1614 1
a1614 1
=item Bundled modules
d1616 1
a1616 1
=item Expect
d1618 1
a1618 1
=item GUI::Native
d1620 1
a1620 1
=item Update semibroken auxiliary tools; h2ph, a2p, etc.
d1622 1
a1622 1
=item pod2html
d1624 1
a1624 1
=item Podchecker
d1626 1
a1626 1
=back
d1628 1
a1628 1
=item Tom's Wishes
d1630 1
a1630 1
=over 4
d1632 1
a1632 1
=item Webperl
d1634 1
a1634 1
=item Mobile agents
d1636 1
a1636 1
=item POSIX on non-POSIX
d1638 1
a1638 1
=item Portable installations
d1640 1
a1640 1
=back
d1642 1
a1642 1
=item Win32 Stuff
d1644 1
a1644 1
=over 4
d1646 1
a1646 1
=item Rename new headers to be consistent with the rest
d1648 4
a1651 1
=item Sort out the spawnvp() mess
d1653 1
a1653 1
=item Work out DLL versioning
d1655 5
a1659 1
=item Style-check
d1661 1
a1661 1
=back
d1663 1
a1663 1
=item Would be nice to have
d1665 1
a1665 5
C<pack "(stuff)*">, Contiguous bitfields in pack/unpack, lexperl, Bundled
perl preprocessor, Use posix calls internally where possible, format
BOTTOM, -i rename file only when successfully changed, All ARGV input
should act like <>, report HANDLE [formats], support in perlmain to rerun
debugger, lvalue functions
d1667 1
a1667 1
=item Possible pragmas
d1669 1
a1669 1
=over 4
d1671 1
a1671 1
=item 'less'
d1675 1
a1675 1
=item Optimizations
d1677 1
a1677 1
=over 4
d1679 1
a1679 1
=item constant function cache
d1681 1
a1681 1
=item foreach(reverse...)
d1683 1
a1683 1
=item Cache eval tree
d1685 1
a1685 1
=item rcatmaybe
d1687 1
a1687 1
=item Shrink opcode tables
d1689 1
a1689 1
=item Cache hash value
d1691 1
a1691 1
=item Optimize away @@_ where possible
d1693 4
a1696 1
=item Optimize sort by { $a <=> $b }
d1698 1
a1698 1
=item Rewrite regexp parser for better integrated optimization
d1700 1
a1700 1
=back
d1702 1
a1702 1
=item Vague possibilities
d1704 1
a1704 3
ref function in list context, make tr/// return histogram in list context?,
Loop control on do{} et al, Explicit switch statements, compile to real
threaded code, structured types, Modifiable $1 et al
d1706 1
a1706 1
=item To Do Or Not To Do
d1708 4
a1711 1
=over 4
d1713 1
a1713 1
=item Making my() work on "package" variables
d1715 1
a1715 1
=item "or" testing defined not truth
d1717 1
a1717 1
=item "dynamic" lexicals
d1719 1
a1719 1
=item "class"-based, rather than package-based "lexicals"
d1723 1
a1723 1
=item Threading
d1725 1
a1725 1
=over 4
d1727 1
a1727 1
=item Modules
d1729 1
a1729 1
=item Testing
d1731 1
a1731 1
=item $AUTOLOAD
d1733 1
a1733 1
=item exit/die
d1735 1
a1735 1
=item External threads
d1737 1
a1737 1
=item Thread::Pool
d1739 1
a1739 1
=item thread-safety
d1741 7
a1747 1
=item Per-thread GVs
d1751 1
a1751 1
=item Compiler
d1753 2
a1754 1
=over 4
d1756 1
a1756 1
=item Optimization
d1758 1
a1758 1
=item Byteperl
d1760 1
a1760 1
=item Precompiled modules
d1762 1
a1762 1
=item Executables
d1764 1
a1764 1
=item Typed lexicals
d1766 1
a1766 1
=item Win32
d1768 11
a1778 1
=item END blocks
d1780 1
a1780 1
=item _AUTOLOAD
d1782 1
a1782 1
=item comppadlist
d1784 72
a1855 1
=item Cached compilation
d1859 1
a1859 1
=item Recently Finished Tasks
d1861 1
a1861 1
=over 4
d1863 1
a1863 1
=item Figure a way out of $^(capital letter)
d1865 1
a1865 1
=item Filenames
d1867 1
a1867 1
=item Foreign lines
d1869 1
a1869 1
=item Namespace cleanup
d1871 28
a1898 1
=item ISA.pm
d1900 1
a1900 1
=item gettimeofday
d1902 1
a1902 1
=item autocroak?
d1906 2
d1910 3
a1912 1
=head2 perlhack - How to hack at the Perl internals
d1914 1
a1914 1
=over 4
d1918 5
a1922 7
Does concept match the general goals of Perl?, Where is the
implementation?, Backwards compatibility, Could it be a module instead?, Is
the feature generic enough?, Does it potentially introduce new bugs?, Does
it preclude other desirable features?, Is the implementation robust?, Is
the implementation generic enough to be portable?, Is there enough
documentation?, Is there another way to do it?, Does it create too much
work?, Patches speak louder than words
d1924 1
a1924 1
=over 4
d1926 1
a1926 1
=item Keeping in sync
d1928 1
a1928 2
rsync'ing the source tree, Using rsync over the LAN, Using pushing over the
NFS, rsync'ing the patches
d1930 1
a1930 1
=item Why rsync the source tree
d1932 3
a1934 1
It's easier, It's more recent, It's more reliable
d1936 1
a1936 1
=item Why rsync the patches
d1938 1
a1938 2
It's easier, It's a good reference, Finding a start point, Finding how to
fix a bug, Finding the source of misbehaviour
d1940 1
a1940 1
=item Submitting patches
d1942 1
a1942 2
L<perlguts>, L<perlxstut> and L<perlxs>, L<perlapi>,
F<Porting/pumpkin.pod>, The perl5-porters FAQ
d1944 1
a1944 1
=item Finding Your Way Around
d1946 1
a1946 1
Core modules, Documentation, Configure, Interpreter
d1948 1
a1948 1
=item Elements of the interpreter
d1950 1
a1950 1
Startup, Parsing, Optimization, Running
d1952 1
a1952 1
=item Internal Variable Types
d1954 1
a1954 1
=item Op Trees
d1956 1
a1956 1
=item Stacks
d1958 1
a1958 1
Argument stack, Mark stack, Save stack
d1960 1
a1960 1
=item Millions of Macros
d1962 1
a1962 1
=item Poking at Perl
d1964 1
a1964 1
=item Using a source-level debugger
d1966 1
a1966 2
run [args], break function_name, break source.c:xxx, step, next, continue,
finish, 'enter', print
d1968 1
a1968 1
=item Dumping Perl Data Structures
d1970 1
a1970 1
=item Patching
d1974 3
a1976 1
=item EXTERNAL TOOLS FOR DEBUGGING PERL
d1978 1
a1978 1
=over 4
d1980 1
a1980 1
=item Rational Software's Purify
d1982 1
a1982 1
=item Purify on Unix
d1984 1
a1984 1
-Accflags=-DPURIFY, -Doptimize='-g', -Uusemymalloc, -Dusemultiplicity
d1986 1
a1986 1
=item Purify on NT
d1988 1
a1988 1
DEFINES, USE_MULTI = define, #PERL_MALLOC = define, CFG = Debug
d1990 3
a1992 1
=item CONCLUSION
d1994 1
a1994 1
I<The Road goes ever on and on, down from the door where it began.>
d1996 30
a2025 1
=back
d2027 1
a2027 1
=item AUTHOR
d2031 1
a2031 1
=head2 perlhist - the Perl history records
d2033 14
a2046 1
=over 4
d2048 1
a2048 1
=item DESCRIPTION
d2050 1
a2050 1
=item INTRODUCTION
d2052 1
a2052 1
=item THE KEEPERS OF THE PUMPKIN
d2054 11
a2064 1
=over 4
d2066 1
a2066 1
=item PUMPKIN?
d2068 4
a2071 1
=back
d2073 1
a2073 1
=item THE RECORDS
d2075 5
a2079 1
=over 4
d2081 1
a2081 1
=item SELECTED RELEASE SIZES
d2083 1
a2083 1
=item SELECTED PATCH SIZES
d2087 3
a2089 1
=item THE KEEPERS OF THE RECORDS
d2091 1
a2091 1
=back
d2093 1
a2093 1
=head2 perldelta - what's new for perl v5.6
d2095 1
a2095 1
=over 4
d2097 2
a2098 1
=item DESCRIPTION
d2100 1
a2100 1
=item Summary of changes between 5.6.0 and 5.6.1
d2102 1
a2102 1
=over 4
d2104 1
a2104 1
=item Security Issues
d2106 1
a2106 1
=item Core bug fixes
d2108 1
a2108 7
C<UNIVERSAL::isa()>, Memory leaks, Numeric conversions, qw(a\\b), caller(),
Bugs in regular expressions, "slurp" mode, Autovivification of symbolic
references to special variables, Lexical warnings, Spurious warnings and
errors, glob(), Tainting, sort(), #line directives, Subroutine prototypes,
map(), Debugger, Locales, PERL5OPT, chop(), Unicode support, 64-bit
support, Compiler, Lvalue subroutines, IO::Socket, File::Find, xsubpp, C<no
Module;>, Tests
d2110 1
a2110 1
=item Core features
d2112 1
a2112 1
=item Configuration issues
d2114 1
a2114 1
=item Documentation
d2116 1
a2116 1
=item Bundled modules
d2118 1
a2118 4
B::Concise, File::Temp, Pod::LaTeX, Pod::Text::Overstrike, CGI, CPAN,
Class::Struct, DB_File, Devel::Peek, File::Find, Getopt::Long, IO::Poll,
IPC::Open3, Math::BigFloat, Math::Complex, Net::Ping, Opcode, Pod::Parser,
Pod::Text, SDBM_File, Sys::Syslog, Tie::RefHash, Tie::SubstrHash
d2120 1
a2120 1
=item Platform-specific improvements
d2122 3
a2124 1
NCR MP-RAS, NonStop-UX
d2126 1
a2126 1
=item Interpreter cloning, threads, and concurrency
d2128 1
a2128 1
=item Lexically scoped warning categories
d2130 1
a2130 1
=item Unicode and UTF-8 support
d2132 1
a2132 1
=item Support for interpolating named characters
d2134 3
a2136 1
=item "our" declarations
d2138 1
a2138 1
=item Support for strings represented as a vector of ordinals
d2140 1
a2140 1
=item Improved Perl version numbering system
d2142 1
a2142 1
=item New syntax for declaring subroutine attributes
d2144 1
a2144 1
=item File and directory handles can be autovivified
d2146 1
a2146 1
=item open() with more than two arguments
d2148 1
a2148 1
=item 64-bit support
d2150 1
a2150 1
=item Large file support
d2152 1
a2152 1
=item Long doubles
d2154 1
a2154 1
=item "more bits"
d2156 1
a2156 1
=item Enhanced support for sort() subroutines
d2158 1
a2158 1
=item C<sort $coderef @@foo> allowed
d2160 1
a2160 1
=item File globbing implemented internally
d2162 1
a2162 1
=item Support for CHECK blocks
d2164 1
a2164 1
=item POSIX character class syntax [: :] supported
d2166 1
a2166 1
=item Better pseudo-random number generator
d2168 1
a2168 1
=item Improved C<qw//> operator
d2170 1
a2170 1
=item Better worst-case behavior of hashes
d2172 1
a2172 1
=item pack() format 'Z' supported
d2174 2
a2175 1
=item pack() format modifier '!' supported
d2177 1
a2177 1
=item pack() and unpack() support counted strings
d2179 1
a2179 1
=item Comments in pack() templates
d2181 1
a2181 1
=item Weak references
d2183 1
a2183 1
=item Binary numbers supported
d2185 1
a2185 1
=item Lvalue subroutines
d2187 1
a2187 1
=item Some arrows may be omitted in calls through references
d2189 1
a2189 1
=item Boolean assignment operators are legal lvalues
d2191 1
a2191 1
=item exists() is supported on subroutine names
d2193 1
a2193 1
=item exists() and delete() are supported on array elements
d2195 1
a2195 1
=item Pseudo-hashes work better
d2197 1
a2197 1
=item Automatic flushing of output buffers
d2199 1
a2199 1
=item Better diagnostics on meaningless filehandle operations
d2201 1
a2201 1
=item Where possible, buffered data discarded from duped input filehandle
d2203 1
a2203 1
=item eof() has the same old magic as <>
d2205 1
a2205 1
=item binmode() can be used to set :crlf and :raw modes
d2207 1
a2207 1
=item C<-T> filetest recognizes UTF-8 encoded files as "text"
d2209 1
a2209 1
=item system(), backticks and pipe open now reflect exec() failure
d2211 1
a2211 1
=item Improved diagnostics
d2213 1
a2213 1
=item Diagnostics follow STDERR
d2215 1
a2215 1
=item More consistent close-on-exec behavior
d2217 1
a2217 1
=item syswrite() ease-of-use
d2219 1
a2219 1
=item Better syntax checks on parenthesized unary operators
d2221 1
a2221 1
=item Bit operators support full native integer width
d2223 1
a2223 1
=item Improved security features
d2225 1
a2225 1
=item More functional bareword prototype (*)
d2227 9
a2235 1
=item C<require> and C<do> may be overridden
d2237 1
a2237 1
=item $^X variables may now have names longer than one character
d2239 2
a2240 1
=item New variable $^C reflects C<-c> switch
d2242 1
a2242 1
=item New variable $^V contains Perl version as a string
d2244 1
a2244 1
=item Optional Y2K warnings
d2246 1
a2246 1
=item Arrays now always interpolate into double-quoted strings
d2248 1
a2248 1
=back
d2250 1
a2250 1
=item Modules and Pragmata
d2252 1
a2252 1
=over 4
d2254 1
a2254 1
=item Modules
d2256 1
a2256 8
attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters
d2258 1
a2258 1
=item Pragmata
d2262 3
a2264 1
=item Utility Changes
d2266 1
a2266 1
=over 4
d2268 1
a2268 1
=item dprofpp
d2270 1
a2270 1
=item find2perl
d2272 1
a2272 1
=item h2xs
d2274 1
a2274 1
=item perlcc
d2276 1
a2276 1
=item perldoc
d2278 1
a2278 1
=item The Perl Debugger
d2280 1
a2280 1
=back
d2282 1
a2282 1
=item Improved Documentation
d2284 1
a2284 4
perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod
d2286 1
a2286 1
=item Performance enhancements
d2288 1
a2288 1
=over 4
d2290 1
a2290 1
=item Simple sort() using { $a <=> $b } and the like are optimized
d2292 1
a2292 1
=item Optimized assignments to lexical variables
d2294 1
a2294 1
=item Faster subroutine calls
d2296 1
a2296 1
=item delete(), each(), values() and hash iteration are faster
d2300 1
a2300 1
=item Installation and Configuration Improvements
d2302 1
a2302 1
=over 4
d2304 1
a2304 1
=item -Dusethreads means something different
d2306 1
a2306 1
=item New Configure flags
d2308 1
a2308 1
=item Threadedness and 64-bitness now more daring
d2310 1
a2310 1
=item Long Doubles
d2312 1
a2312 1
=item -Dusemorebits
d2314 1
a2314 1
=item -Duselargefiles
d2316 1
a2316 1
=item installusrbinperl
d2318 1
a2318 1
=item SOCKS support
d2320 1
a2320 1
=item C<-A> flag
d2322 1
a2322 1
=item Enhanced Installation Directories
d2324 1
a2324 1
=item gcc automatically tried if 'cc' does not seem to be working
d2326 1
a2326 1
=back
d2328 1
a2328 1
=item Platform specific changes
d2330 1
a2330 1
=over 4
d2332 1
a2332 1
=item Supported platforms
d2334 1
a2334 1
=item DOS
d2336 1
a2336 1
=item OS390 (OpenEdition MVS)
d2338 1
a2338 1
=item VMS
d2340 1
a2340 1
=item Win32
d2344 1
a2344 1
=item Significant bug fixes
d2346 1
a2346 1
=over 4
d2348 1
a2348 1
=item <HANDLE> on empty files
d2350 1
a2350 1
=item C<eval '...'> improvements
d2352 2
a2353 1
=item All compilation errors are true errors
d2355 1
a2355 1
=item Implicitly closed filehandles are safer
d2357 1
a2357 1
=item Behavior of list slices is more consistent
d2359 1
a2359 1
=item C<(\$)> prototype and C<$foo{a}>
d2361 1
a2361 1
=item C<goto &sub> and AUTOLOAD
d2363 1
a2363 1
=item C<-bareword> allowed under C<use integer>
d2365 1
a2365 1
=item Failures in DESTROY()
d2367 1
a2367 1
=item Locale bugs fixed
d2369 1
a2369 1
=item Memory leaks
d2371 1
a2371 1
=item Spurious subroutine stubs after failed subroutine calls
d2373 1
a2373 1
=item Taint failures under C<-U>
d2375 1
a2375 3
=item END blocks and the C<-c> switch

=item Potential to leak DATA filehandles
d2379 1
a2379 52
=item New or Changed Diagnostics

"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible unintended interpolation of %s in string,
Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME : ATTRS"
instead, Premature end of script headers, Repeat count in pack overflows,
Repeat count in unpack overflows, realloc() of freed memory ignored,
Reference is already weak, setpgrp can't take arguments, Strange *+?{} on
zero-length expression, switching effective %s is not implemented, This
Perl can't reset CRTL environ elements (%s), This Perl can't set CRTL
environ elements (%s=%s), Too late to run %s block, Unknown open() mode
'%s', Unknown process %x sent message to prime_env_iter: %s, Unrecognized
escape \\%c passed through, Unterminated attribute parameter in attribute
list, Unterminated attribute list, Unterminated attribute parameter in
subroutine attribute list, Unterminated subroutine attribute list, Value of
CLI symbol "%s" too long, Version number must be a constant number
d2381 1
a2381 1
=item New tests
d2383 1
a2383 1
=item Incompatible Changes
d2385 1
a2385 1
=over 4
d2387 1
a2387 1
=item Perl Source Incompatibilities
d2389 1
a2389 11
CHECK is a new keyword, Treatment of list slices of undef has changed,
Format of $English::PERL_VERSION is different, Literals of the form
C<1.2.3> parse differently, Possibly changed pseudo-random number
generator, Hashing function for hash keys has changed, C<undef> fails on
read only values, Close-on-exec bit may be set on pipe and socket handles,
Writing C<"$$1"> to mean C<"${$}1"> is unsupported, delete(), each(),
values() and C<\(%h)>, vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
Text of some diagnostic output has changed, C<%@@> has been removed,
Parenthesized not() behaves like a list operator, Semantics of bareword
prototype C<(*)> have changed, Semantics of bit operators may have changed
on 64-bit platforms, More builtins taint their results
d2391 1
a2391 1
=item C Source Incompatibilities
d2393 1
a2393 1
C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>
d2395 1
a2395 1
=item Compatible C Source API Changes
d2397 1
a2397 1
C<PATCHLEVEL> is now C<PERL_VERSION>
d2399 1
a2399 1
=item Binary Incompatibilities
d2403 11
a2413 1
=item Known Problems
d2415 1
a2415 1
=over 4
d2417 1
a2417 1
=item Localizing a tied hash element may leak memory
d2419 1
a2419 1
=item Known test failures
d2421 1
a2421 2
64-bit builds, Failure of Thread tests, NEXTSTEP 3.3 POSIX test failure,
Tru64 (aka Digital UNIX, aka DEC OSF/1) lib/sdbm test failure with gcc
d2423 1
a2423 1
=item EBCDIC platforms not fully supported
d2425 1
a2425 1
=item UNICOS/mk CC failures during Configure run
d2427 1
a2427 1
=item Arrow operator and arrays
d2429 1
a2429 1
=item Experimental features
d2431 1
a2431 3
Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression code constructs:
d2435 9
a2443 1
=item Obsolete Diagnostics
d2445 1
a2445 4
Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, In string, @@%s now must be written as
\@@%s, Probable precedence problem on %s, regexp too big, Use of "$$<digit>"
to mean "${$}<digit>" is deprecated
d2447 1
a2447 1
=item Reporting Bugs
d2451 1
a2451 1
=item HISTORY
d2455 1
a2455 1
=head2 perl5005delta, perldelta - what's new for perl5.005
d2457 1
a2457 1
=over 4
d2461 3
a2463 1
=item About the new versioning system
d2465 1
a2465 1
=item Incompatible Changes
d2467 1
a2467 1
=over 4
d2469 1
a2469 1
=item WARNING:	This version is not binary compatible with Perl 5.004.
d2471 1
a2471 1
=item Default installation structure has changed
d2473 1
a2473 1
=item Perl Source Compatibility
d2475 1
a2475 1
=item C Source Compatibility
d2477 1
a2477 1
=item Binary Compatibility
d2479 1
a2479 1
=item Security fixes may affect compatibility
d2481 1
a2481 1
=item Relaxed new mandatory warnings introduced in 5.004
d2483 1
a2483 1
=item Licensing
d2485 1
a2485 1
=back
d2487 1
a2487 1
=item Core Changes
d2489 1
a2489 1
=over 4
d2491 1
a2491 1
=item Threads
d2493 1
a2493 1
=item Compiler
d2495 1
a2495 1
=item Regular Expressions
d2497 1
a2497 3
Many new and improved optimizations, Many bug fixes, New regular expression
constructs, New operator for precompiled regular expressions, Other
improvements, Incompatible changes
d2499 1
a2499 1
=item	Improved malloc()
d2501 1
a2501 1
=item Quicksort is internally implemented
d2503 1
a2503 1
=item Reliable signals
d2505 1
a2505 1
=item Reliable stack pointers
d2507 1
a2507 1
=item More generous treatment of carriage returns
d2509 1
a2509 1
=item Memory leaks
d2511 1
a2511 1
=item Better support for multiple interpreters
d2513 1
a2513 1
=item Behavior of local() on array and hash elements is now well-defined
d2515 1
a2515 1
=item C<%!> is transparently tied to the L<Errno> module
d2517 1
a2517 1
=item Pseudo-hashes are supported
d2519 1
a2519 1
=item C<EXPR foreach EXPR> is supported
d2521 1
a2521 1
=item Keywords can be globally overridden
d2523 1
a2523 1
=item C<$^E> is meaningful on Win32
d2525 1
a2525 1
=item C<foreach (1..1000000)> optimized
d2527 1
a2527 1
=item C<Foo::> can be used as implicitly quoted package name
d2529 1
a2529 1
=item C<exists $Foo::{Bar::}> tests existence of a package
d2531 1
a2531 1
=item Better locale support
d2533 1
a2533 1
=item Experimental support for 64-bit platforms
d2535 1
a2535 1
=item prototype() returns useful results on builtins
d2537 1
a2537 1
=item Extended support for exception handling
d2539 1
a2539 1
=item Re-blessing in DESTROY() supported for chaining DESTROY() methods
d2541 1
a2541 1
=item All C<printf> format conversions are handled internally
d2543 1
a2543 1
=item New C<INIT> keyword
d2545 1
a2545 1
=item New C<lock> keyword
d2547 1
a2547 1
=item New C<qr//> operator
d2549 1
a2549 1
=item C<our> is now a reserved word
d2551 1
a2551 1
=item Tied arrays are now fully supported
d2553 1
a2553 1
=item Tied handles support is better
d2555 1
a2555 1
=item 4th argument to substr
d2557 1
a2557 1
=item Negative LENGTH argument to splice
d2559 1
a2559 1
=item Magic lvalues are now more magical
d2561 1
a2561 1
=item <> now reads in records
d2565 1
a2565 1
=item Supported Platforms
d2567 1
a2567 1
=over 4
d2569 1
a2569 1
=item New Platforms
d2571 1
a2571 1
=item Changes in existing support
d2575 3
a2577 1
=item Modules and Pragmata
d2579 1
a2579 1
=over 4
d2581 1
a2581 1
=item New Modules
d2583 1
a2583 3
B, Data::Dumper, Dumpvalue, Errno, File::Spec, ExtUtils::Installed,
ExtUtils::Packlist, Fatal, IPC::SysV, Test, Tie::Array, Tie::Handle,
Thread, attrs, fields, re
d2585 1
a2585 1
=item Changes in existing modules
d2587 1
a2587 2
Benchmark, Carp, CGI, Fcntl, Math::Complex, Math::Trig, POSIX, DB_File,
MakeMaker, CPAN, Cwd
d2589 1
a2589 1
=back
d2591 1
a2591 1
=item Utility Changes
d2593 1
a2593 1
=item Documentation Changes
d2595 1
a2595 1
=item New Diagnostics
d2597 1
a2597 17
Ambiguous call resolved as CORE::%s(), qualify as such or use &, Bad index
while coercing array into hash, Bareword "%s" refers to nonexistent
package, Can't call method "%s" on an undefined value, Can't check
filesystem of script "%s" for nosuid, Can't coerce array into hash, Can't
goto subroutine from an eval-string, Can't localize pseudo-hash element,
Can't use %%! because Errno.pm is not available, Cannot find an opnumber
for "%s", Character class syntax [. .] is reserved for future extensions,
Character class syntax [: :] is reserved for future extensions, Character
class syntax [= =] is reserved for future extensions, %s: Eval-group in
insecure regular expression, %s: Eval-group not allowed, use re 'eval', %s:
Eval-group not allowed at run time, Explicit blessing to '' (assuming
package main), Illegal hex digit ignored, No such array field, No such
field "%s" in variable %s of type %s, Out of memory during ridiculously
large request, Range iterator outside integer range, Recursive inheritance
detected while looking for method '%s' %s, Reference found where even-sized
list expected, Undefined value assigned to typeglob, Use of reserved word
"%s" is deprecated, perl: warning: Setting locale failed
d2599 1
a2599 1
=item Obsolete Diagnostics
d2601 1
a2601 2
Can't mktemp(), Can't write to temp file for B<-e>: %s, Cannot open
temporary file, regexp too big
d2603 1
a2603 1
=item Configuration Changes
d2605 1
a2605 1
=item BUGS
d2607 1
a2607 1
=item SEE ALSO
d2609 1
a2609 1
=item HISTORY
d2613 1
a2613 1
=head2 perl5004delta, perldelta - what's new for perl5.004
d2615 1
a2615 1
=over 4
d2619 1
a2619 1
=item Supported Environments
d2621 1
a2621 1
=item Core Changes
d2623 1
a2623 1
=over 4
d2625 1
a2625 1
=item List assignment to %ENV works
d2627 1
a2627 1
=item Change to "Can't locate Foo.pm in @@INC" error
d2629 1
a2629 1
=item Compilation option: Binary compatibility with 5.003
d2631 1
a2631 1
=item $PERL5OPT environment variable
d2633 1
a2633 1
=item Limitations on B<-M>, B<-m>, and B<-T> options
d2635 1
a2635 1
=item More precise warnings
d2637 1
a2637 1
=item Deprecated: Inherited C<AUTOLOAD> for non-methods
d2639 1
a2639 1
=item Previously deprecated %OVERLOAD is no longer usable
d2641 1
a2641 1
=item Subroutine arguments created only when they're modified
d2643 1
a2643 1
=item Group vector changeable with C<$)>
d2645 1
a2645 1
=item Fixed parsing of $$<digit>, &$<digit>, etc.
d2647 1
a2647 1
=item Fixed localization of $<digit>, $&, etc.
d2649 1
a2649 1
=item No resetting of $. on implicit close
d2651 1
a2651 1
=item C<wantarray> may return undef
d2653 1
a2653 1
=item C<eval EXPR> determines value of EXPR in scalar context
d2655 1
a2655 1
=item Changes to tainting checks
d2657 1
a2657 2
No glob() or <*>, No spawning if tainted $CDPATH, $ENV, $BASH_ENV, No
spawning if tainted $TERM doesn't look like a terminal name
d2659 1
a2659 1
=item New Opcode module and revised Safe module
d2661 1
a2661 1
=item Embedding improvements
d2663 1
a2663 1
=item Internal change: FileHandle class based on IO::* classes
d2665 1
a2665 1
=item Internal change: PerlIO abstraction interface
d2667 1
a2667 1
=item New and changed syntax
d2669 1
a2669 1
$coderef->(PARAMS)
d2671 1
a2671 1
=item New and changed builtin constants
d2673 1
a2673 1
__PACKAGE__
d2675 1
a2675 1
=item New and changed builtin variables
d2677 1
a2677 1
$^E, $^H, $^M
d2679 1
a2679 1
=item New and changed builtin functions
d2681 1
a2681 5
delete on slices, flock, printf and sprintf, keys as an lvalue, my() in
Control Structures, pack() and unpack(), sysseek(), use VERSION, use Module
VERSION LIST, prototype(FUNCTION), srand, $_ as Default, C<m//gc> does not
reset search position on failure, C<m//x> ignores whitespace before ?*+{},
nested C<sub{}> closures work now, formats work right on changing lexicals
d2683 1
a2683 1
=item New builtin methods
d2687 1
a2687 1
=item TIEHANDLE now supported
d2689 1
a2689 2
TIEHANDLE classname, LIST, PRINT this, LIST, PRINTF this, LIST, READ this
LIST, READLINE this, GETC this, DESTROY this
d2691 1
a2691 1
=item Malloc enhancements
d2693 1
a2693 1
-DPERL_EMERGENCY_SBRK, -DPACK_MALLOC, -DTWO_POT_OPTIMIZE
d2695 1
a2695 1
=item Miscellaneous efficiency enhancements
d2699 29
a2727 1
=item Support for More Operating Systems
d2729 1
a2729 1
=over 4
d2731 1
a2731 1
=item Win32
d2733 1
a2733 1
=item Plan 9
d2735 1
a2735 1
=item QNX
d2737 1
a2737 1
=item AmigaOS
d2741 1
a2741 1
=item Pragmata
d2743 1
a2743 2
use autouse MODULE => qw(sub1 sub2 sub3), use blib, use blib 'dir', use
constant NAME => VALUE, use locale, use ops, use vmsish
d2745 1
a2745 1
=item Modules
d2747 1
a2747 1
=over 4
d2749 1
a2749 1
=item Required Updates
d2751 1
a2751 1
=item Installation directories
d2753 1
a2753 1
=item Module information summary
d2755 1
a2755 1
=item Fcntl
d2757 1
a2757 1
=item IO
d2759 1
a2759 1
=item Math::Complex
d2761 1
a2761 1
=item Math::Trig
d2763 1
a2763 1
=item DB_File
d2765 1
a2765 1
=item Net::Ping
d2767 1
a2767 1
=item Object-oriented overrides for builtin operators
d2771 4
a2774 1
=item Utility Changes
d2776 1
a2776 1
=over 4
d2778 1
a2778 1
=item pod2html
d2780 1
a2780 1
Sends converted HTML to standard output
d2782 1
a2782 1
=item xsubpp
d2784 1
a2784 1
C<void> XSUBs now default to returning nothing
d2788 9
a2796 37
=item C Language API Changes

C<gv_fetchmethod> and C<perl_call_sv>, C<perl_eval_pv>, Extended API for
manipulating hashes

=item Documentation Changes

L<perldelta>, L<perlfaq>, L<perllocale>, L<perltoot>, L<perlapio>,
L<perlmodlib>, L<perldebug>, L<perlsec>

=item New Diagnostics

"my" variable %s masks earlier declaration in same scope, %s argument is
not a HASH element or slice, Allocation too large: %lx, Allocation too
large, Applying %s to %s will act on scalar(%s), Attempt to free
nonexistent shared string, Attempt to use reference as lvalue in substr,
Bareword "%s" refers to nonexistent package, Can't redefine active sort
subroutine %s, Can't use bareword ("%s") as %s ref while "strict refs" in
use, Cannot resolve method `%s' overloading `%s' in package `%s', Constant
subroutine %s redefined, Constant subroutine %s undefined, Copy method did
not return a reference, Died, Exiting pseudo-block via %s, Identifier too
long, Illegal character %s (carriage return), Illegal switch in PERL5OPT:
%s, Integer overflow in hex number, Integer overflow in octal number,
internal error: glob failed, Invalid conversion in %s: "%s", Invalid type
in pack: '%s', Invalid type in unpack: '%s', Name "%s::%s" used only once:
possible typo, Null picture in formline, Offset outside string, Out of
memory!, Out of memory during request for %s, panic: frexp, Possible
attempt to put comments in qw() list, Possible attempt to separate words
with commas, Scalar value @@%s{%s} better written as $%s{%s}, Stub found
while resolving method `%s' overloading `%s' in %s, Too late for "B<-T>"
option, untie attempted while %d inner references still exist, Unrecognized
character %s, Unsupported function fork, Use of "$$<digit>" to mean
"${$}<digit>" is deprecated, Value of %s can be "0"; test with defined(),
Variable "%s" may be unavailable, Variable "%s" will not stay shared,
Warning: something's wrong, Ill-formed logical name |%s| in prime_env_iter,
Got an error from DosAllocMem, Malformed PERLLIB_PREFIX, PERL_SH_DIR too
long, Process terminated by SIG%s
d2798 1
a2798 1
=item BUGS
d2800 1
a2800 1
=item SEE ALSO
d2802 1
a2802 1
=item HISTORY
d2806 3
a2808 1
=head2 perlaix, README.aix - Perl version 5 on IBM Unix (AIX) systems
d2810 7
a2816 1
=over 4
d2818 1
a2818 1
=item DESCRIPTION
d2820 1
a2820 1
=over 4
d2822 1
a2822 1
=item Compiling Perl 5 on AIX
d2824 1
a2824 1
=item OS level
d2826 1
a2826 1
=item Building Dynamic Extensions on AIX
d2828 1
a2828 1
=item The IBM ANSI C Compiler
d2830 1
a2830 1
=item Using GNU's gcc for building perl
d2832 1
a2832 1
=item Using Large Files with Perl
d2834 1
a2834 1
=item Threaded Perl
d2836 1
a2836 1
=item 64-bit Perl
d2838 1
a2838 1
=item GDBM and Threads
d2840 1
a2840 1
=item NFS filesystems and utime(2)
d2842 1
a2842 1
=back
d2846 1
a2846 1
=item DATE
d2850 1
a2850 1
=head2 perlamiga - Perl under Amiga OS
d2852 1
a2852 1
=over 4
d2856 4
a2859 1
=back
d2861 1
a2861 1
=over 4
d2863 1
a2863 1
=item DESCRIPTION
d2865 1
a2865 1
=over 4
d2867 1
a2867 1
=item Prerequisites
d2869 1
a2869 1
B<Unix emulation for AmigaOS: ixemul.library>, B<Version of Amiga OS>
d2871 1
a2871 1
=item Starting Perl programs under AmigaOS
d2873 1
a2873 1
=item Shortcomings of Perl under AmigaOS
d2877 1
a2877 1
=item INSTALLATION
d2879 1
a2879 1
=item Accessing documentation
d2881 1
a2881 1
=over 4
d2883 1
a2883 1
=item Manpages
d2885 1
a2885 1
=item B<HTML>
d2887 1
a2887 1
=item B<GNU> C<info> files
d2889 9
a2897 1
=item C<LaTeX> docs
d2899 1
a2899 1
=back
d2901 6
a2906 1
=item BUILD
d2908 1
a2908 1
=over 4
d2910 2
a2911 1
=item Prerequisites
d2913 1
a2913 1
=item Getting the perl source
d2915 1
a2915 1
=item Making
d2917 1
a2917 1
sh Configure -Dprefix=/ade -Dloclibpth=/ade/lib
d2919 1
a2919 1
=item Testing
d2921 1
a2921 1
=item Installing the built perl
d2925 3
a2927 1
=item AUTHORS
d2931 2
d2935 1
a2935 1
=head2 perlbs2000, README.BS2000 - building and installing Perl for BS2000.
d2937 1
a2937 1
=over 4
d2943 10
a2952 1
=over 4
d2954 1
a2954 1
=item gzip
d2956 1
a2956 1
=item bison
d2958 1
a2958 1
=item Unpacking
d2960 1
a2960 1
=item Compiling
d2962 1
a2962 1
=item Testing
d2964 1
a2964 1
=item Install
d2966 1
a2966 1
=item Using Perl in the Posix-Shell
d2968 1
a2968 1
=item Using Perl in "native" BS2000
d2970 1
a2970 1
=item Floating point anomalies
d2974 3
a2976 1
=item AUTHORS
d2978 1
a2978 1
=item SEE ALSO
d2980 1
a2980 1
=over 4
d2982 4
a2985 1
=item Mailing list
d2987 1
a2987 1
=back
d2989 1
a2989 1
=item HISTORY
d2993 3
a2995 1
=head2 perlcygwin, README.cygwin - Perl for Cygwin
d2997 1
a2997 1
=over 4
d2999 3
a3001 1
=item SYNOPSIS
d3003 1
a3003 1
=item PREREQUISITES
d3005 1
a3005 1
=over 4
d3007 1
a3007 1
=item Cygwin = GNU+Cygnus+Windows (Don't leave UNIX without it)
d3009 1
a3009 1
=item Cygwin Configuration
d3011 1
a3011 1
C<PATH>, I<nroff>, Permissions
d3015 3
a3017 1
=item CONFIGURE
d3019 1
a3019 1
=over 4
d3021 1
a3021 1
=item Strip Binaries
d3023 1
a3023 1
=item Optional Libraries
d3025 1
a3025 2
C<-lcrypt>, C<-lgdbm> (C<use GDBM_File>), C<-ldb> (C<use DB_File>),
C<-lcygipc> (C<use IPC::SysV>)
d3027 1
a3027 1
=item Configure-time Options
d3029 1
a3029 2
C<-Uusedl>, C<-Uusemymalloc>, C<-Dusemultiplicity>, C<-Duseperlio>,
C<-Duse64bitint>, C<-Duselongdouble>, C<-Dusethreads>, C<-Duselargefiles>
d3031 1
a3031 1
=item Suspicious Warnings
d3033 1
a3033 1
I<dlsym()>, Win9x and C<d_eofnblk>, Compiler/Preprocessor defines
d3035 1
a3035 1
=back
d3037 1
a3037 1
=item MAKE
d3039 1
a3039 1
=over 4
d3041 1
a3041 1
=item Warnings
d3043 1
a3043 1
=item ld2
d3047 1
a3047 1
=item TEST
d3049 1
a3049 1
=over 4
d3051 1
a3051 1
=item File Permissions
d3053 1
a3053 1
=item Hard Links
d3055 1
a3055 1
=item Filetime Granularity
d3057 1
a3057 1
=item Tainting Checks
d3059 1
a3059 1
=item /etc/group
d3061 1
a3061 1
=item Script Portability
d3063 1
a3063 1
Pathnames, Text/Binary, F<.exe>, chown(), Miscellaneous
d3065 1
a3065 1
=back
d3067 1
a3067 1
=item INSTALL
d3069 1
a3069 1
=item MANIFEST
d3071 4
a3074 2
Documentation, Build, Configure, Make, Install, Tests, Compiled Perl
Source, Compiled Module Source, Perl Modules/Scripts
d3076 1
a3076 1
=item BUGS
d3078 3
a3080 1
=item AUTHORS
d3082 1
a3082 1
=item HISTORY
d3084 1
a3084 1
=back
d3086 1
a3086 1
=head2 perldos - Perl under DOS, W31, W95.
d3088 1
a3088 1
=over 4
d3090 1
a3090 1
=item SYNOPSIS
d3092 2
a3093 1
=item DESCRIPTION
d3095 1
a3095 1
=over 4
d3097 1
a3097 1
=item Prerequisites
d3099 1
a3099 1
DJGPP, Pthreads
d3101 2
a3102 1
=item Shortcomings of Perl under DOS
d3104 1
a3104 1
=item Building
d3106 3
a3108 1
=item Testing
d3110 1
a3110 1
=item Installation
d3112 1
a3112 1
=back
d3114 1
a3114 1
=item BUILDING AND INSTALLING MODULES
d3116 1
a3116 1
=over 4
d3118 1
a3118 1
=item Prerequisites
d3120 2
a3121 1
=item Unpacking CPAN Modules
d3123 1
a3123 1
=item Building Non-XS Modules
d3125 1
a3125 1
=item Building XS Modules
d3127 1
a3127 1
=back
d3129 2
a3130 1
=item AUTHOR
d3132 1
a3132 1
=item SEE ALSO
d3136 1
a3136 1
=head2 perlepoc, README.epoc - Perl for EPOC
d3138 1
a3138 1
=over 4
d3140 1
a3140 1
=item SYNOPSIS
d3142 2
a3143 1
=item INTRODUCTION
d3145 1
a3145 1
=item INSTALLING PERL ON EPOC
d3147 1
a3147 1
=item STARTING PERL ON EPOC
d3149 1
a3149 1
=item STOPPING PERL ON EPOC
d3151 1
a3151 1
=item USING PERL ON EPOC
d3153 1
a3153 1
=over 4
d3155 1
a3155 1
=item I/O Redirection
d3157 1
a3157 1
=item PATH Names
d3159 1
a3159 1
=item Editors
d3161 1
a3161 1
=item Features
d3163 1
a3163 1
=item Restrictions
d3165 1
a3165 1
=item Compiling Perl 5 on the EPOC cross compiling environment
d3167 1
a3167 1
=back
d3169 1
a3169 1
=item SUPPORT STATUS
d3171 1
a3171 1
=item AUTHOR
d3173 1
a3173 1
=item LAST UPDATE
d3177 1
a3177 2
=head2 perlhpux, README.hpux - Perl version 5 on Hewlett-Packard Unix
(HP-UX) systems
d3179 2
a3180 1
=over 4
d3182 1
a3182 1
=item DESCRIPTION
d3184 1
a3184 1
=over 4
d3186 1
a3186 1
=item Compiling Perl 5 on HP-UX
d3188 1
a3188 1
=item PA-RISC
d3190 1
a3190 1
=item PA-RISC 1.0
d3192 1
a3192 1
=item PA-RISC 1.1
d3194 1
a3194 1
=item PA-RISC 2.0
d3196 1
a3196 1
=item Portability Between PA-RISC Versions
d3198 1
a3198 1
=item Building Dynamic Extensions on HP-UX
d3200 1
a3200 1
=item The HP ANSI C Compiler
d3202 1
a3202 1
=item Using Large Files with Perl
d3204 1
a3204 1
=item Threaded Perl
d3206 1
a3206 1
=item 64-bit Perl
d3208 1
a3208 1
=item GDBM and Threads
d3210 1
a3210 1
=item NFS filesystems and utime(2)
d3212 25
a3236 1
=item perl -P and //
d3240 14
a3253 1
=item AUTHOR
d3255 1
a3255 1
=item DATE
d3259 1
a3259 2
=head2 perlmachten, README.machten - Perl version 5 on Power MachTen
systems
d3261 1
a3261 1
=over 4
d3265 1
a3265 1
=over 4
d3267 1
a3267 1
=item Compiling Perl 5 on MachTen
d3269 1
a3269 1
=item Failures during C<make test>
d3271 1
a3271 1
op/lexassign.t, pragma/warnings.t
d3273 1
a3273 1
=item Building external modules
d3275 1
a3275 1
=back
d3277 1
a3277 1
=item AUTHOR
d3279 1
a3279 1
=item DATE
d3281 1
a3281 1
=back
d3283 1
a3283 1
=head2 perlmacos, README.macos - Perl under Mac OS (Classic)
d3285 1
a3285 1
=over 4
d3287 1
a3287 1
=item SYNOPSIS
d3289 1
a3289 1
=item DESCRIPTION
a3292 2
=item DATE

d3295 1
a3295 1
=head2 perlmpeix, README.mpeix - Perl/iX for HP e3000 MPE
d3297 1
a3297 1
=head1 SYNOPSIS
d3299 1
a3299 1
=over 4
d3301 1
a3301 1
=item What's New
d3303 1
a3303 1
=item System Requirements
d3305 1
a3305 1
=item How to Obtain Perl/iX
d3307 1
a3307 1
=item Distribution Contents Highlights
d3309 1
a3309 1
README, public_html/feedback.cgi,  4,  6
d3311 1
a3311 1
=item Getting Started with Perl/iX
d3313 2
a3314 1
=item MPE/iX Implementation Considerations
d3316 1
a3316 1
=item Change History
d3318 1
a3318 1
=back
d3320 1
a3320 1
=head2 perlos2 - Perl under OS/2, DOS, Win0.3*, Win0.95 and WinNT.
d3322 1
a3322 1
=over 4
d3324 1
a3324 1
=item SYNOPSIS
d3326 1
a3326 1
=back
d3328 1
a3328 1
=over 4
d3330 1
a3330 1
=item DESCRIPTION
d3332 1
a3332 1
=over 4
d3334 2
a3335 1
=item Target
d3337 1
a3337 1
=item Other OSes
d3339 1
a3339 1
=item Prerequisites
d3341 1
a3341 1
EMX, RSX, HPFS, pdksh
d3343 1
a3343 1
=item Starting Perl programs under OS/2 (and DOS and...)
d3345 1
a3345 1
=item Starting OS/2 (and DOS) programs under Perl
d3349 1
a3349 1
=item Frequently asked questions
d3351 1
a3351 1
=over 4
d3353 1
a3353 1
=item "It does not work"
d3355 1
a3355 1
=item I cannot run external programs
d3357 10
a3366 2
=item I cannot embed perl into my program, or use F<perl.dll> from my
program. 
d3368 1
a3368 2
Is your program EMX-compiled with C<-Zmt -Zcrtdll>?, Did you use
L<ExtUtils::Embed>?
d3370 1
a3370 1
=item C<``> and pipe-C<open> do not work under DOS.
d3372 6
a3377 1
=item Cannot start C<find.exe "pattern" file>
d3381 1
a3381 1
=item INSTALLATION
d3383 1
a3383 1
=over 4
d3385 1
a3385 1
=item Automatic binary installation
d3387 1
a3387 1
C<PERL_BADLANG>, C<PERL_BADFREE>, F<Config.pm>
d3389 1
a3389 1
=item Manual binary installation
d3391 1
a3391 5
Perl VIO and PM executables (dynamically linked), Perl_ VIO executable
(statically linked), Executables for Perl utilities, Main Perl library,
Additional Perl modules, Tools to compile Perl modules, Manpages for Perl
and utilities, Manpages for Perl modules, Source for Perl documentation,
Perl manual in F<.INF> format, Pdksh
d3393 1
a3393 1
=item B<Warning>
d3395 1
a3395 1
=back
d3397 1
a3397 1
=item Accessing documentation
d3399 1
a3399 1
=over 4
d3401 1
a3401 1
=item OS/2 F<.INF> file
d3403 1
a3403 1
=item Plain text
d3405 1
a3405 1
=item Manpages
d3407 1
a3407 1
=item HTML
d3409 1
a3409 1
=item GNU C<info> files
d3411 1
a3411 1
=item F<.PDF> files
d3413 1
a3413 1
=item C<LaTeX> docs
d3415 1
a3415 1
=back
d3417 1
a3417 1
=item BUILD
d3419 1
a3419 1
=over 4
d3421 1
a3421 1
=item The short story
d3423 1
a3423 1
=item Prerequisites
d3425 1
a3425 1
=item Getting perl source
d3427 1
a3427 1
=item Application of the patches
d3429 1
a3429 1
=item Hand-editing
d3431 1
a3431 1
=item Making
d3433 1
a3433 1
=item Testing
d3435 1
a3435 2
A lot of C<bad free>, Process terminated by SIGTERM/SIGINT, F<op/fs.t>,
F<op/stat.t>
d3437 1
a3437 1
=item Installing the built perl
d3439 1
a3439 1
=item C<a.out>-style build
d3441 1
a3441 1
=back
d3443 1
a3443 1
=item Build FAQ
d3445 1
a3445 1
=over 4
d3447 1
a3447 1
=item Some C</> became C<\> in pdksh.
d3449 1
a3449 1
=item C<'errno'> - unresolved external
d3451 1
a3451 1
=item Problems with tr or sed
d3453 1
a3453 1
=item Some problem (forget which ;-)
d3455 1
a3455 1
=item Library ... not found
d3457 1
a3457 1
=item Segfault in make
d3459 1
a3459 1
=item op/sprintf test failure
d3461 1
a3461 1
=back
d3463 1
a3463 1
=item Specific (mis)features of OS/2 port
d3465 1
a3465 1
=over 4
d3467 1
a3467 1
=item C<setpriority>, C<getpriority>
d3469 1
a3469 1
=item C<system()>
d3471 1
a3471 1
=item C<extproc> on the first line
d3473 1
a3473 1
=item Additional modules:
d3475 1
a3475 1
=item Prebuilt methods:
d3477 1
a3477 11
C<File::Copy::syscopy>, C<DynaLoader::mod2fname>,  C<Cwd::current_drive()>,
 C<Cwd::sys_chdir(name)>,  C<Cwd::change_drive(name)>, 
C<Cwd::sys_is_absolute(name)>,	C<Cwd::sys_is_rooted(name)>, 
C<Cwd::sys_is_relative(name)>,	C<Cwd::sys_cwd(name)>, 
C<Cwd::sys_abspath(name, dir)>,  C<Cwd::extLibpath([type])>, 
C<Cwd::extLibpath_set( path [, type ] )>,
C<OS2::Error(do_harderror,do_exception)>, C<OS2::Errors2Drive(drive)>,
OS2::SysInfo(), OS2::BootDrive(), C<OS2::MorphPM(serve)>,
C<OS2::UnMorphPM(serve)>, C<OS2::Serve_Messages(force)>,
C<OS2::Process_Messages(force [, cnt])>, C<OS2::_control87(new,mask)>,
OS2::get_control87(), C<OS2::set_control87_em(new=MCW_EM,mask=MCW_EM)>
d3479 1
a3479 1
=item Prebuilt variables:
d3481 1
a3481 1
$OS2::emx_rev, $OS2::emx_env, $OS2::os_ver
d3483 1
a3483 1
=item Misfeatures
d3485 1
a3485 1
=item Modifications
d3487 1
a3487 2
C<popen>, C<tmpnam>, C<tmpfile>, C<ctermid>, C<stat>, C<mkdir>, C<rmdir>,
C<flock>
d3489 1
a3489 1
=item Identifying DLLs
d3491 1
a3491 3
=item Centralized management of resources

C<HAB>, C<HMQ>
d3495 1
a3495 1
=item Perl flavors
d3497 1
a3497 1
=over 4
d3499 1
a3499 1
=item F<perl.exe>
d3501 1
a3501 1
=item F<perl_.exe>
d3503 1
a3503 1
=item F<perl__.exe>
d3505 1
a3505 1
=item F<perl___.exe>
d3507 1
a3507 1
=item Why strange names?
d3509 1
a3509 1
=item Why dynamic linking?
d3511 1
a3511 1
=item Why chimera build?
d3513 1
a3513 1
=back
d3515 1
a3515 1
=item ENVIRONMENT
d3517 1
a3517 1
=over 4
d3519 1
a3519 1
=item C<PERLLIB_PREFIX>
d3521 1
a3521 1
=item C<PERL_BADLANG>
d3523 1
a3523 1
=item C<PERL_BADFREE>
d3525 1
a3525 1
=item C<PERL_SH_DIR>
d3527 1
a3527 1
=item C<USE_PERL_FLOCK>
d3529 1
a3529 1
=item C<TMP> or C<TEMP>
d3531 1
a3531 1
=back
d3533 1
a3533 1
=item Evolution
d3535 1
a3535 1
=over 4
d3537 1
a3537 1
=item Priorities
d3539 1
a3539 1
=item DLL name mangling
d3541 1
a3541 1
=item Threading
d3543 1
a3543 1
=item Calls to external programs
d3545 1
a3545 1
=item Memory allocation
d3547 1
a3547 1
=item Threads
d3549 1
a3549 1
C<COND_WAIT>, F<os2.c>
d3553 1
a3553 1
=back
d3555 1
a3555 1
=over 4
d3557 1
a3557 1
=item AUTHOR
d3559 1
a3559 1
=item SEE ALSO
d3563 1
a3563 1
=head2 perlos390, README.os390 - building and installing Perl for OS/390.
d3565 1
a3565 1
=over 4
d3567 1
a3567 1
=item SYNOPSIS
d3571 1
a3571 1
=over 4
d3573 1
a3573 1
=item Unpacking
d3575 1
a3575 1
=item Setup and utilities
d3577 1
a3577 1
=item Configure
d3579 1
a3579 1
=item Build, test, install
d3581 1
a3581 1
=item build anomalies
d3583 1
a3583 1
=item testing anomalies
d3585 1
a3585 1
=item installation anomalies
d3587 1
a3587 1
=item Usage Hints
d3589 1
a3589 1
=item Floating point anomalies
d3591 1
a3591 1
=item Modules and Extensions
d3593 1
a3593 1
=back
d3595 1
a3595 1
=item AUTHORS
d3597 1
a3597 1
=item SEE ALSO
d3599 1
a3599 1
=over 4
d3601 1
a3601 1
=item Mailing list
d3603 1
a3603 1
=back
d3605 1
a3605 1
=item HISTORY
d3607 1
a3607 1
=back
d3609 1
a3609 1
=head2 perlsolaris, README.solaris - Perl version 5 on Solaris systems
d3611 1
a3611 1
=over 4
d3613 9
a3621 1
=item DESCRIPTION
d3623 1
a3623 1
=over 4
d3625 1
a3625 1
=item Solaris Version Numbers.
d3627 1
a3627 1
=back
d3629 1
a3629 1
=item RESOURCES
d3631 1
a3631 1
Solaris FAQ, Precompiled Binaries, Solaris Documentation
d3633 1
a3633 1
=item SETTING UP
d3635 1
a3635 1
=over 4
d3637 1
a3637 1
=item File Extraction Problems.
d3639 1
a3639 1
=item Compiler and Related Tools.
d3641 1
a3641 1
=item Environment
d3645 7
a3651 1
=item RUN CONFIGURE.
d3653 1
a3653 1
=over 4
d3655 1
a3655 1
=item 64-bit Issues.
d3657 1
a3657 1
=item Threads.
d3659 1
a3659 1
=item Malloc Issues.
d3663 1
a3663 1
=item MAKE PROBLEMS.
d3665 1
a3665 3
Dynamic Loading Problems With GNU as and GNU ld, ld.so.1: ./perl: fatal:
relocation error:, dlopen: stub interception failed, #error "No
DATAMODEL_NATIVE specified", sh: ar: not found
d3667 1
a3667 1
=item MAKE TEST
d3669 1
a3669 1
=over 4
d3671 1
a3671 1
=item op/stat.t test 4
d3675 1
a3675 1
=item PREBUILT BINARIES.
d3677 1
a3677 5
=item RUNTIME ISSUES.

=over 4

=item Limits on Numbers of Open Files.
d3681 1
a3681 1
=item SOLARIS-SPECIFIC MODULES.
d3683 1
a3683 1
=item SOLARIS-SPECIFIC PROBLEMS WITH MODULES.
d3685 1
a3685 1
=over 4
d3687 1
a3687 1
=item Proc::ProcessTable
d3689 1
a3689 1
=item BSD::Resource
d3691 1
a3691 1
=item Net::SSLeay
d3693 1
a3693 1
=back
d3695 1
a3695 1
=item AUTHOR
d3697 1
a3697 1
=item LAST MODIFIED
d3699 1
a3699 1
=back
d3701 1
a3701 1
=head2 perlvmesa, README.vmesa - building and installing Perl for VM/ESA.
d3703 1
a3703 1
=over 4
d3705 1
a3705 1
=item SYNOPSIS
d3707 1
a3707 1
=item DESCRIPTION
d3709 1
a3709 1
=over 4
d3711 1
a3711 1
=item Unpacking
d3713 1
a3713 1
=item Setup and utilities
d3715 1
a3715 1
=item Configure
d3717 1
a3717 6
Don't turn on the compiler optimization flag "-O".  There's a bug in the
compiler (APAR PQ18812) that generates some bad code the optimizer is on,
As VM/ESA doesn't fully support the fork() API programs relying on this
call will not work. I've replaced fork()/exec() with spawn() and the
standalone exec() with spawn(). This has a side effect when opening unnamed
pipes in a shell script: there is no child process generated under
d3719 1
a3719 1
=item testing anomalies
d3721 1
a3721 1
=item Usage Hints
d3723 1
a3723 3
When using perl on VM/ESA please keep in mind that the EBCDIC and ASCII
character sets are different.  Perl builtin functions that may behave
differently under EBCDIC are mentioned in the perlport.pod document.
d3725 1
a3725 1
=back
d3727 1
a3727 1
=item AUTHORS
d3729 1
a3729 1
=item SEE ALSO
d3731 1
a3731 1
=over 4
d3733 1
a3733 1
=item Mailing list
d3735 1
a3735 1
=back
d3737 1
a3737 1
=back
d3739 1
a3739 1
=head2 perlvms - VMS-specific documentation for Perl
d3741 1
a3741 1
=over 4
d3743 1
a3743 1
=item DESCRIPTION
d3745 1
a3745 5
=item Installation

=item Organization of Perl Images

=over 4
d3747 1
a3747 1
=item Core Images
d3749 3
a3751 1
=item Perl Extensions
d3753 1
a3753 1
=item Installing static extensions
d3755 1
a3755 1
=item Installing dynamic extensions
d3759 1
a3759 1
=item File specifications
d3761 1
a3761 1
=over 4
d3763 1
a3763 5
=item Syntax

=item Wildcard expansion

=item Pipes
d3767 1
a3767 1
=item PERL5LIB and PERLLIB
d3769 1
a3769 1
=item Command line
d3771 1
a3771 1
=over 4
d3773 1
a3773 1
=item I/O redirection and backgrounding
d3775 1
a3775 1
=item Command line switches
d3777 1
a3777 1
-i, -S, -u
d3781 1
a3781 1
=item Perl functions
d3783 1
a3783 4
File tests, backticks, binmode FILEHANDLE, crypt PLAINTEXT, USER, dump,
exec LIST, fork, getpwent, getpwnam, getpwuid, gmtime, kill, qx//, select
(system call), stat EXPR, system LIST, time, times, unlink LIST, utime
LIST, waitpid PID,FLAGS
d3785 1
a3785 1
=item Perl variables
d3787 1
a3787 1
%ENV, CRTL_ENV, CLISYM_[LOCAL], Any other string, $!, $^E, $?, $^S, $|
d3789 1
a3789 1
=item Standard modules with VMS-specific differences
d3791 1
a3791 1
=over 4
d3793 1
a3793 1
=item SDBM_File
d3795 1
a3795 1
=back
d3797 1
a3797 1
=item Revision date
d3799 3
a3801 1
=item AUTHOR
d3805 1
a3805 1
=head2 perlvos, README.vos - Perl for Stratus VOS
d3807 1
a3807 1
=over 4
d3809 1
a3809 1
=item SYNOPSIS
d3811 1
a3811 1
=over 4
d3813 1
a3813 1
=item Stratus POSIX Support
d3815 1
a3815 1
=back
d3817 43
a3859 1
=item INSTALLING PERL IN VOS
d3861 1
a3861 1
=over 4
d3863 1
a3863 3
=item Compiling Perl 5 on VOS

=item Installing Perl 5 on VOS
d3867 2
a3868 1
=item USING PERL IN VOS
d3870 1
a3870 1
=over 4
d3872 1
a3872 1
=item Unimplemented Features
d3874 1
a3874 1
=item Restrictions
d3876 1
a3876 7
=back

=item SUPPORT STATUS

=item AUTHOR

=item LAST UPDATE
d3880 1
a3880 1
=head2 perlwin32 - Perl under Win32
d3882 1
a3882 1
=over 4
d3884 1
a3884 1
=item SYNOPSIS
d3886 1
a3886 1
=item DESCRIPTION
d3888 1
a3888 1
=over 4
d3890 1
a3890 1
=item Setting Up
d3892 1
a3892 1
Make, Command Shell, Borland C++, Microsoft Visual C++, Mingw32 with GCC
d3894 1
a3894 1
=item Building
d3896 1
a3896 1
=item Testing
d3898 1
a3898 1
=item Installation
d3900 1
a3900 1
=item Usage Hints
d3902 1
a3902 3
Environment Variables, File Globbing, Using perl from the command line,
Building Extensions, Command-line Wildcard Expansion, Win32 Specific
Extensions, Running Perl Scripts, Miscellaneous Things
d3906 1
a3906 11
=item BUGS AND CAVEATS

=item AUTHORS

Gary Ng E<lt>71564.1743@@CompuServe.COME<gt>, Gurusamy Sarathy
E<lt>gsar@@activestate.comE<gt>, Nick Ing-Simmons
E<lt>nick@@ni-s.u-net.comE<gt>

=item SEE ALSO

=item HISTORY
d3914 1
a3914 1
=over 4
d3926 1
a3926 1
=over 4
d3936 1
a3936 1
=over 4
d3942 1
a3942 1
=over 4
d3962 1
a3962 1
=over 4
d3980 1
a3980 1
=over 4
d3992 1
a3992 1
=over 4
d4008 1
a4008 1
=over 4
d4022 1
a4022 1
=over 4
d4037 1
a4037 1
=over 4
d4050 1
a4050 1
=over 4
d4064 1
a4064 1
=over 4
d4085 1
a4085 1
=over 4
d4091 1
a4091 1
=over 4
d4111 1
a4111 1
=over 4
d4125 1
a4125 1
=over 4
d4131 1
a4131 1
=over 4
d4139 2
a4140 2
=head2 integer - Perl pragma to use integer arithmetic instead of floating
point
d4142 1
a4142 1
=over 4
d4152 1
a4152 1
=over 4
d4162 1
a4162 1
=over 4
d4168 1
a4168 1
=over 4
d4187 1
a4187 1
=over 4
d4197 1
a4197 1
=over 4
d4211 1
a4211 1
=over 4
d4223 1
a4223 1
=over 4
d4229 1
a4229 1
=over 4
d4258 1
a4258 1
=over 4
d4262 1
a4262 1
=item Fallback
d4297 1
a4297 1
=over 4
a4312 3
Odd number of arguments for overload::constant, `%s' is not an overloadable
type, `%s' is not a code reference

d4319 1
a4319 1
=over 4
d4329 1
a4329 1
=over 4
d4337 1
a4337 1
=over 4
d4359 1
a4359 1
=over 4
d4371 1
a4371 1
=over 4
d4381 1
a4381 1
=over 4
d4393 1
a4393 1
=over 4
d4403 1
a4403 1
=over 4
d4409 2
a4410 5
use warnings::register, warnings::enabled(), warnings::enabled($category),
warnings::enabled($object), warnings::warn($message),
warnings::warn($category, $message), warnings::warn($object, $message),
warnings::warnif($message), warnings::warnif($category, $message),
warnings::warnif($object, $message)
a4413 2
=head2 warnings::register - warnings import function

d4418 1
a4418 1
=over 4
d4424 1
a4424 1
=over 4
d4438 1
a4438 1
=over 4
d4444 1
a4444 1
=over 4
a4453 2
=item Not Using AutoLoader

d4466 1
a4466 1
=over 4
d4474 1
a4474 1
=over 4
d4486 1
a4486 1
=over 4
d4494 1
a4494 1
=over 4
d4504 1
a4504 1
IV, IVX, UVX, int_value, needs64bits, packiv
d4516 1
a4516 1
PV, PVX
d4536 2
a4537 2
is_empty, NAME, SAFENAME, STASH, SV, IO, FORM, AV, HV, EGV, CV, CVGEN,
LINE, FILE, FILEGV, GvREFCNT, FLAGS
d4619 1
a4619 1
=over 4
d4631 1
a4631 1
=over 4
d4637 1
a4637 1
=item AUTHORS
d4643 1
a4643 1
=over 4
d4655 1
a4655 1
=over 4
d4664 2
a4665 3
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-On>, B<-D>, B<-Do>,
B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-upackage>    Stores package in the
output.    =back
d4671 1
a4671 1
=item AUTHORS
d4677 1
a4677 1
=over 4
d4698 1
a4698 1
=over 4
d4716 1
a4716 1
=over 4
a4731 39
=head2 B::Concise - Walk Perl syntax tree, printing concise info about ops

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

B<-basic>, B<-exec>, B<-tree>, B<-compact>, B<-loose>, B<-vt>, B<-ascii>,
B<-main>, B<-base>I<n>, B<-bigendian>, B<-littleendian>, B<-concise>,
B<-terse>, B<-linenoise>, B<-debug>, B<-env>

=item FORMATTING SPECIFICATIONS

B<(x(>I<exec_text>B<;>I<basic_text>B<)x)>, B<(*(>I<text>B<)*)>,
B<(*(>I<text1>B<;>I<text2>B<)*)>, B<(?(>I<text1>B<#>I<var>I<Text2>B<)?)>,
B<#>I<var>, B<#>I<var>I<N>, B<~>, B<#addr>, B<#arg>, B<#class>,
B<#classym>, B<#coplabel>, B<#exname>, B<#extarg>, B<#firstaddr>,
B<#flags>, B<#flagval>, B<#hyphenseq>, B<#label>, B<#lastaddr>, B<#name>,
B<#NAME>, B<#next>, B<#nextaddr>, B<#noise>, B<#private>, B<#privval>,
B<#seq>, B<#seqnum>, B<#sibaddr>, B<#svaddr>, B<#svclass>, B<#svval>,
B<#targ>, B<#targarg>, B<#targarglife>, B<#typenum>

=item ABBREVIATIONS

=over 4

=item OP flags abbreviations

=item OP class abbreviations

=back

=item AUTHOR

=back

d4734 1
a4734 1
=over 4
d4746 1
a4746 1
=over 4
d4755 1
a4755 1
B<T>, B<v>I<STRING>B<.>, B<-x>I<LEVEL>
d4759 1
a4759 1
=over 4
d4779 1
a4779 1
=over 4
d4791 1
a4791 1
=over 4
d4814 1
a4814 1
=over 4
d4830 1
a4830 1
=over 4
d4842 1
a4842 1
=over 4
a4851 2
=head2 B::Stash - show what stashes are loaded

d4854 1
a4854 1
=over 4
d4866 1
a4866 1
=over 4
d4884 1
a4884 1
=over 4
d4896 1
a4896 1
=over 4
d4902 1
a4902 1
=over 4
d4940 1
a4940 1
=over 4
d4954 1
a4954 1
=over 4
d4963 2
a4964 3
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-On>, B<-D>, B<-Do>,
B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-upackage>    Stores package in the
output.    =back
d4970 1
a4970 1
=item AUTHORS
d4976 1
a4976 1
=over 4
d4984 1
a4984 1
=over 4
d4990 4
d5029 2
a5030 2
-any, -compile, -nosticky, -no_xhtml, -nph, -newstyle_urls, -oldstyle_urls,
-autoload, -no_debug, -debug, -private_tempfiles
d5042 1
a5042 1
=over 4
d5059 1
a5059 1
(B<-query_string>), B<-base>
d5067 1
a5067 1
=over 4
a5076 5
=item AUTOESCAPING HTML

$escaped_string = escapeHTML("unescaped string");, $charset =
charset([$charset]);, $flag = autoEscape([$flag]);

d5083 1
a5083 1
=over 4
d5135 3
a5137 1
B<Parameters:>
d5158 1
a5158 1
=over 4
d5167 4
a5170 3
B<path_translated()>, B<remote_host()>, B<script_name()>, B<referer()>,
B<auth_type ()>, B<server_name ()>, B<virtual_host ()>, B<server_port ()>,
B<server_software ()>, B<remote_user ()>, B<user_name ()>,
d5176 1
a5176 1
parameters
d5180 1
a5180 1
multipart_init(), multipart_start(), multipart_end(), multipart_final()
d5216 1
a5216 1
=over 4
d5235 1
a5235 1
=over 4
d5245 1
a5245 1
=over 4
a5250 2
=item MAKING WARNINGS APPEAR AS HTML COMMENTS

d5261 1
a5261 1
=over 4
d5271 1
a5271 1
=over 4
d5295 1
a5295 1
=over 4
d5321 1
a5321 1
=over 4
d5327 1
a5327 1
=over 4
d5345 1
a5345 1
=over 4
d5353 1
a5353 1
-next_page, -last_page, -type, -delay, -cookie, -target, -expires, -nph
d5355 1
a5355 1
=over 4
d5375 1
a5375 1
=over 4
a5390 14
=head2 CGI::Util - Internal utilities used by CGI module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR INFORMATION

=item SEE ALSO

=back

d5393 1
a5393 1
=over 4
d5399 1
a5399 1
=over 4
d5405 1
a5405 1
distribution, ls author, Signals
d5415 1
a5415 1
=item Programmer's interface
d5417 1
a5417 1
expand($type,@@things), expandany(@@things), Programming Examples
d5419 1
a5419 28
=item Methods in the other Classes

CPAN::Author::as_glimpse(), CPAN::Author::as_string(),
CPAN::Author::email(), CPAN::Author::fullname(), CPAN::Author::name(),
CPAN::Bundle::as_glimpse(), CPAN::Bundle::as_string(),
CPAN::Bundle::clean(), CPAN::Bundle::contains(),
CPAN::Bundle::force($method,@@args), CPAN::Bundle::get(),
CPAN::Bundle::inst_file(), CPAN::Bundle::inst_version(),
CPAN::Bundle::uptodate(), CPAN::Bundle::install(), CPAN::Bundle::make(),
CPAN::Bundle::readme(), CPAN::Bundle::test(),
CPAN::Distribution::as_glimpse(), CPAN::Distribution::as_string(),
CPAN::Distribution::clean(), CPAN::Distribution::containsmods(),
CPAN::Distribution::cvs_import(), CPAN::Distribution::dir(),
CPAN::Distribution::force($method,@@args), CPAN::Distribution::get(),
CPAN::Distribution::install(), CPAN::Distribution::isa_perl(),
CPAN::Distribution::look(), CPAN::Distribution::make(),
CPAN::Distribution::prereq_pm(), CPAN::Distribution::readme(),
CPAN::Distribution::test(), CPAN::Distribution::uptodate(),
CPAN::Index::force_reload(), CPAN::Index::reload(), CPAN::InfoObj::dump(),
CPAN::Module::as_glimpse(), CPAN::Module::as_string(),
CPAN::Module::clean(), CPAN::Module::cpan_file(),
CPAN::Module::cpan_version(), CPAN::Module::cvs_import(),
CPAN::Module::description(), CPAN::Module::force($method,@@args),
CPAN::Module::get(), CPAN::Module::inst_file(),
CPAN::Module::inst_version(), CPAN::Module::install(),
CPAN::Module::look(), CPAN::Module::make(),
CPAN::Module::manpage_headline(), CPAN::Module::readme(),
CPAN::Module::test(), CPAN::Module::uptodate(), CPAN::Module::userid()
d5442 1
a5442 1
=over 4
a5457 4
=over 4

=item Three basic types of firewalls

a5459 8
=item Configuring lynx or ncftp for going through a firewall

=back

=item FAQ

1), 2), 3), 4), 5), 6), 7), 8), 9), 10)

a5463 2
=item TRANSLATIONS

d5470 1
a5470 1
=over 4
d5481 1
a5481 1
=over 4
d5493 1
a5493 1
=over 4
d5499 1
a5499 1
=over 4
d5511 1
a5511 1
=over 4
d5521 1
a5521 1
=over 4
d5527 1
a5527 1
=over 4
a5530 2
=item Class Creation at Compile Time

d5550 1
a5550 1
=over 4
d5564 1
a5564 1
=over 4
d5584 2
a5585 3
C<ccflags_uselargefiles>, C<ccname>, C<ccsymbols>, C<ccversion>, C<cf_by>,
C<cf_email>, C<cf_time>, C<charsize>, C<chgrp>, C<chmod>, C<chown>,
C<clocktype>, C<comm>, C<compress>
d5595 5
a5599 5
C<d__fwalk>, C<d_access>, C<d_accessx>, C<d_alarm>, C<d_archlib>,
C<d_atolf>, C<d_atoll>, C<d_attribut>, C<d_bcmp>, C<d_bcopy>,
C<d_bincompat5005>, C<d_bsd>, C<d_bsdgetpgrp>, C<d_bsdsetpgrp>, C<d_bzero>,
C<d_casti32>, C<d_castneg>, C<d_charvspr>, C<d_chown>, C<d_chroot>,
C<d_chsize>, C<d_closedir>, C<d_const>, C<d_crypt>, C<d_csh>, C<d_cuserid>,
d5603 9
a5611 10
C<d_endsent>, C<d_eofnblk>, C<d_eunice>, C<d_fchmod>, C<d_fchown>,
C<d_fcntl>, C<d_fcntl_can_lock>, C<d_fd_macros>, C<d_fd_set>,
C<d_fds_bits>, C<d_fgetpos>, C<d_flexfnam>, C<d_flock>, C<d_fork>,
C<d_fpathconf>, C<d_fpos64_t>, C<d_frexpl>, C<d_fs_data_s>, C<d_fseeko>,
C<d_fsetpos>, C<d_fstatfs>, C<d_fstatvfs>, C<d_fsync>, C<d_ftello>,
C<d_ftime>, C<d_Gconvert>, C<d_getcwd>, C<d_getespwnam>, C<d_getfsstat>,
C<d_getgrent>, C<d_getgrps>, C<d_gethbyaddr>, C<d_gethbyname>,
C<d_gethent>, C<d_gethname>, C<d_gethostprotos>, C<d_getlogin>,
C<d_getmnt>, C<d_getmntent>, C<d_getnbyaddr>, C<d_getnbyname>,
C<d_getnent>, C<d_getnetprotos>, C<d_getpagsz>, C<d_getpbyname>,
d5613 23
a5635 25
C<d_getppid>, C<d_getprior>, C<d_getprotoprotos>, C<d_getprpwnam>,
C<d_getpwent>, C<d_getsbyname>, C<d_getsbyport>, C<d_getsent>,
C<d_getservprotos>, C<d_getspnam>, C<d_gettimeod>, C<d_gnulibc>,
C<d_grpasswd>, C<d_hasmntopt>, C<d_htonl>, C<d_iconv>, C<d_index>,
C<d_inetaton>, C<d_int64_t>, C<d_isascii>, C<d_isnan>, C<d_isnanl>,
C<d_killpg>, C<d_lchown>, C<d_ldbl_dig>, C<d_link>, C<d_locconv>,
C<d_lockf>, C<d_longdbl>, C<d_longlong>, C<d_lseekproto>, C<d_lstat>,
C<d_madvise>, C<d_mblen>, C<d_mbstowcs>, C<d_mbtowc>, C<d_memchr>,
C<d_memcmp>, C<d_memcpy>, C<d_memmove>, C<d_memset>, C<d_mkdir>,
C<d_mkdtemp>, C<d_mkfifo>, C<d_mkstemp>, C<d_mkstemps>, C<d_mktime>,
C<d_mmap>, C<d_modfl>, C<d_mprotect>, C<d_msg>, C<d_msg_ctrunc>,
C<d_msg_dontroute>, C<d_msg_oob>, C<d_msg_peek>, C<d_msg_proxy>,
C<d_msgctl>, C<d_msgget>, C<d_msgrcv>, C<d_msgsnd>, C<d_msync>,
C<d_munmap>, C<d_mymalloc>, C<d_nice>, C<d_nv_preserves_uv>,
C<d_nv_preserves_uv_bits>, C<d_off64_t>, C<d_old_pthread_create_joinable>,
C<d_oldpthreads>, C<d_oldsock>, C<d_open3>, C<d_pathconf>, C<d_pause>,
C<d_perl_otherlibdirs>, C<d_phostname>, C<d_pipe>, C<d_poll>,
C<d_portable>, C<d_PRId64>, C<d_PRIeldbl>, C<d_PRIEUldbl>, C<d_PRIfldbl>,
C<d_PRIFUldbl>, C<d_PRIgldbl>, C<d_PRIGUldbl>, C<d_PRIi64>, C<d_PRIo64>,
C<d_PRIu64>, C<d_PRIx64>, C<d_PRIXU64>, C<d_pthread_yield>, C<d_pwage>,
C<d_pwchange>, C<d_pwclass>, C<d_pwcomment>, C<d_pwexpire>, C<d_pwgecos>,
C<d_pwpasswd>, C<d_pwquota>, C<d_qgcvt>, C<d_quad>, C<d_readdir>,
C<d_readlink>, C<d_rename>, C<d_rewinddir>, C<d_rmdir>, C<d_safebcpy>,
C<d_safemcpy>, C<d_sanemcmp>, C<d_sbrkproto>, C<d_sched_yield>,
C<d_scm_rights>, C<d_SCNfldbl>, C<d_seekdir>, C<d_select>, C<d_sem>,
d5639 6
a5644 7
C<d_setpgid>, C<d_setpgrp2>, C<d_setpgrp>, C<d_setprior>,
C<d_setproctitle>, C<d_setpwent>, C<d_setregid>, C<d_setresgid>,
C<d_setresuid>, C<d_setreuid>, C<d_setrgid>, C<d_setruid>, C<d_setsent>,
C<d_setsid>, C<d_setvbuf>, C<d_sfio>, C<d_shm>, C<d_shmat>,
C<d_shmatprototype>, C<d_shmctl>, C<d_shmdt>, C<d_shmget>, C<d_sigaction>,
C<d_sigprocmask>, C<d_sigsetjmp>, C<d_socket>, C<d_socklen_t>,
C<d_sockpair>, C<d_socks5_init>, C<d_sqrtl>, C<d_statblks>,
d5646 1
a5646 2
C<d_stdio_ptr_lval>, C<d_stdio_ptr_lval_nochange_cnt>,
C<d_stdio_ptr_lval_sets_cnt>, C<d_stdio_stream_array>, C<d_stdiobase>,
d5649 3
a5651 3
C<d_strtoq>, C<d_strtoul>, C<d_strtoull>, C<d_strtouq>, C<d_strxfrm>,
C<d_suidsafe>, C<d_symlink>, C<d_syscall>, C<d_sysconf>, C<d_sysernlst>,
C<d_syserrlst>, C<d_system>, C<d_tcgetpgrp>, C<d_tcsetpgrp>, C<d_telldir>,
d5672 2
a5673 2
C<gccosandvers>, C<gccversion>, C<gidformat>, C<gidsign>, C<gidsize>,
C<gidtype>, C<glibpth>, C<grep>, C<groupcat>, C<groupstype>, C<gzip>
d5677 1
a5677 1
C<h_fcntl>, C<h_sysfile>, C<hint>, C<hostcat>
d5684 20
a5703 21
C<i_grp>, C<i_iconv>, C<i_ieeefp>, C<i_inttypes>, C<i_libutil>,
C<i_limits>, C<i_locale>, C<i_machcthr>, C<i_malloc>, C<i_math>,
C<i_memory>, C<i_mntent>, C<i_ndbm>, C<i_netdb>, C<i_neterrno>,
C<i_netinettcp>, C<i_niin>, C<i_poll>, C<i_prot>, C<i_pthread>, C<i_pwd>,
C<i_rpcsvcdbm>, C<i_sfio>, C<i_sgtty>, C<i_shadow>, C<i_socks>,
C<i_stdarg>, C<i_stddef>, C<i_stdlib>, C<i_string>, C<i_sunmath>,
C<i_sysaccess>, C<i_sysdir>, C<i_sysfile>, C<i_sysfilio>, C<i_sysin>,
C<i_sysioctl>, C<i_syslog>, C<i_sysmman>, C<i_sysmode>, C<i_sysmount>,
C<i_sysndir>, C<i_sysparam>, C<i_sysresrc>, C<i_syssecrt>, C<i_sysselct>,
C<i_syssockio>, C<i_sysstat>, C<i_sysstatfs>, C<i_sysstatvfs>,
C<i_systime>, C<i_systimek>, C<i_systimes>, C<i_systypes>, C<i_sysuio>,
C<i_sysun>, C<i_sysutsname>, C<i_sysvfs>, C<i_syswait>, C<i_termio>,
C<i_termios>, C<i_time>, C<i_unistd>, C<i_ustat>, C<i_utime>, C<i_values>,
C<i_varargs>, C<i_varhdr>, C<i_vfork>, C<ignore_versioned_solibs>,
C<inc_version_list>, C<inc_version_list_init>, C<incpath>, C<inews>,
C<installarchlib>, C<installbin>, C<installman1dir>, C<installman3dir>,
C<installprefix>, C<installprefixexp>, C<installprivlib>, C<installscript>,
C<installsitearch>, C<installsitebin>, C<installsitelib>, C<installstyle>,
C<installusrbinperl>, C<installvendorarch>, C<installvendorbin>,
C<installvendorlib>, C<intsize>, C<issymlink>, C<ivdformat>, C<ivsize>,
C<ivtype>
d5711 6
a5716 6
C<ld>, C<lddlflags>, C<ldflags>, C<ldflags_uselargefiles>, C<ldlibpthname>,
C<less>, C<lib_ext>, C<libc>, C<libperl>, C<libpth>, C<libs>, C<libsdirs>,
C<libsfiles>, C<libsfound>, C<libspath>, C<libswanted>,
C<libswanted_uselargefiles>, C<line>, C<lint>, C<lkflags>, C<ln>, C<lns>,
C<locincpth>, C<loclibpth>, C<longdblsize>, C<longlongsize>, C<longsize>,
C<lp>, C<lpr>, C<ls>, C<lseeksize>, C<lseektype>
d5726 3
a5728 2
C<Mcc>, C<mips_type>, C<mkdir>, C<mmaptype>, C<modetype>, C<more>,
C<multiarch>, C<mv>, C<myarchname>, C<mydomain>, C<myhostname>, C<myuname>
d5732 3
a5734 4
C<n>, C<need_va_copy>, C<netdb_hlen_type>, C<netdb_host_type>,
C<netdb_name_type>, C<netdb_net_type>, C<nm>, C<nm_opt>, C<nm_so_opt>,
C<nonxs_ext>, C<nroff>, C<nveformat>, C<nvEUformat>, C<nvfformat>,
C<nvFUformat>, C<nvgformat>, C<nvGUformat>, C<nvsize>, C<nvtype>
d5739 1
a5739 1
C<orderlib>, C<osname>, C<osvers>, C<otherlibdirs>
d5749 3
a5751 3
C<perllibs>, C<perlpath>, C<pg>, C<phostname>, C<pidtype>, C<plibpth>,
C<pm_apiversion>, C<pmake>, C<pr>, C<prefix>, C<prefixexp>, C<privlib>,
C<privlibexp>, C<prototype>, C<ptrsize>
d5767 4
a5770 4
C<sig_name>, C<sig_name_init>, C<sig_num>, C<sig_num_init>, C<sig_size>,
C<signal_t>, C<sitearch>, C<sitearchexp>, C<sitebin>, C<sitebinexp>,
C<sitelib>, C<sitelib_stem>, C<sitelibexp>, C<siteprefix>,
C<siteprefixexp>, C<sizesize>, C<sizetype>, C<sleep>, C<smail>, C<so>,
d5772 3
a5774 3
C<spitshell>, C<sPRId64>, C<sPRIeldbl>, C<sPRIEUldbl>, C<sPRIfldbl>,
C<sPRIFUldbl>, C<sPRIgldbl>, C<sPRIGUldbl>, C<sPRIi64>, C<sPRIo64>,
C<sPRIu64>, C<sPRIx64>, C<sPRIXU64>, C<src>, C<sSCNfldbl>, C<ssizetype>,
d5794 1
a5794 1
C<uvxformat>, C<uvXUformat>
d5800 1
a5800 1
C<vendorprefixexp>, C<version>, C<versiononly>, C<vi>, C<voidflags>
d5816 1
a5816 1
=head2 Cwd - get pathname of current working directory
d5818 1
a5818 1
=over 4
d5830 1
a5830 1
=over 4
d5836 1
a5836 1
=over 4
d5865 1
a5865 1
=over 4
d5873 1
a5873 1
=over 4
d5889 1
a5889 1
=over 4
d5897 1
a5897 1
=over 4
d5915 1
a5915 1
=over 4
d5942 1
a5942 1
=over 4
d5954 1
a5954 1
=over 4
d5970 1
a5970 1
=over 4
d6001 1
a6001 1
=over 4
d6007 1
a6007 1
=over 4
d6055 1
a6055 1
=over 4
d6075 1
a6075 1
=over 4
a6080 6
=over 4

=item Memory footprint debugging

=back

d6083 1
a6083 1
=over 4
d6117 1
a6117 1
=over 4
d6127 1
a6127 1
=over 4
d6137 1
a6137 1
=over 4
d6143 1
a6143 1
=over 4
d6163 1
a6163 1
=over 4
d6182 1
a6182 1
=over 4
d6195 1
a6195 1
=over 4
d6208 1
a6208 1
=over 4
d6222 1
a6222 1
=over 4
d6238 1
a6238 1
=over 4
d6244 1
a6244 1
=over 4
d6266 1
a6266 1
=over 4
d6277 1
a6277 1
=over 4
d6305 1
a6305 1
=over 4
d6317 1
a6317 1
=over 4
d6340 1
a6340 1
=over 4
d6350 1
a6350 1
=over 4
d6371 1
a6371 1
=over 4
d6379 1
a6379 1
=over 4
d6391 1
a6391 1
=over 4
d6406 1
a6406 1
=over 4
a6415 2
perl_archive_after

d6419 1
a6419 1
=over 4
d6429 1
a6429 1
=over 4
d6437 1
a6437 1
=over 4
d6457 1
a6457 1
=over 4
d6509 1
a6509 1
=over 4
a6624 2
perl_archive_after

d6627 1
a6627 1
=over 4
d6636 1
a6636 1
=over 4
d6642 1
a6642 1
=over 4
d6654 1
a6654 1
=over 4
d6751 1
a6751 1
=over 4
d6797 1
a6797 1
=over 4
d6803 1
a6803 1
=over 4
d6827 1
a6827 1
ABSTRACT, ABSTRACT_FROM, AUTHOR, BINARY_LOCATION, C, CAPI, CCFLAGS, CONFIG,
d6834 8
a6841 8
INST_EXE, INST_HTMLLIBDIR, INST_HTMLSCRIPTDIR, INST_LIB, INST_MAN1DIR,
INST_MAN3DIR, INST_SCRIPT, LDFROM, LIB, LIBPERL_A, LIBS, LINKTYPE,
MAKEAPERL, MAKEFILE, MAN1PODS, MAN3PODS, MAP_TARGET, MYEXTLIB, NAME,
NEEDS_LINKING, NOECHO, NORECURS, NO_VC, OBJECT, OPTIMIZE, PERL, PERLMAINCC,
PERL_ARCHLIB, PERL_LIB, PERL_MALLOC_OK, PERL_SRC, PERM_RW, PERM_RWX,
PL_FILES, PM, PMLIBDIRS, PM_FILTER, POLLUTE, PPM_INSTALL_EXEC,
PPM_INSTALL_SCRIPT, PREFIX, PREREQ_PM, SKIP, TYPEMAPS, VERSION,
VERSION_FROM, XS, XSOPT, XSPROTOARG, XS_VERSION
d6874 1
a6874 1
=over 4
d6899 1
a6899 1
=over 4
d6911 1
a6911 1
=over 4
d6922 1
a6922 1
=over 4
d6938 1
a6938 1
=over 4
d6958 1
a6958 1
=over 4
d6968 1
a6968 1
=over 4
d6980 1
a6980 1
=over 4
d6994 1
a6994 1
=over 4
d7010 1
a7010 1
=over 4
d7020 1
a7020 1
=over 4
d7034 1
a7034 1
=over 4
d7040 1
a7040 1
=over 4
d7056 1
a7056 1
=over 4
d7076 1
a7076 1
=over 4
d7082 2
a7083 3
C<wanted>, C<bydepth>, C<preprocess>, C<postprocess>, C<follow>,
C<follow_fast>, C<follow_skip>, C<no_chdir>, C<untaint>,
C<untaint_pattern>, C<untaint_skip>
d7091 1
a7091 1
=over 4
d7098 1
a7098 2
C<GLOB_BRACE>, C<GLOB_NOMAGIC>, C<GLOB_QUOTE>, C<GLOB_TILDE>, C<GLOB_CSH>,
C<GLOB_ALPHASORT>
d7112 1
a7112 1
=over 4
d7124 1
a7124 1
=over 4
a7135 34
=head2 File::Spec::Epoc - methods for Epoc file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

devnull

=back

tmpdir

path

canonpath

splitpath

splitdir

catpath

abs2rel

rel2abs

=over 4

=item SEE ALSO

=back

d7138 1
a7138 1
=over 4
d7144 1
a7144 1
=over 4
d7156 1
a7156 1
=over 4
d7196 1
a7196 1
=over 4
d7204 1
a7204 1
=over 4
d7214 1
a7214 1
=over 4
d7246 1
a7246 93
path

join

splitpath

splitdir

catpath

abs2rel

rel2abs

=over 4

=item SEE ALSO

=back

=head2 File::Spec::VMS - methods for VMS file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

eliminate_macros

=back

fixpath

=over 4

=item Methods always loaded

canonpath (override)

=back

catdir

catfile

curdir (override)

devnull (override)

rootdir (override)

tmpdir (override)

updir (override)

case_tolerant (override)

path (override)

file_name_is_absolute (override)

splitpath (override)

splitdir (override)

catpath (override)

abs2rel (override)

rel2abs (override)

=over 4

=item SEE ALSO

=back

=head2 File::Spec::Win32 - methods for Win32 file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

devnull

=back

tmpdir

catfile
d7248 1
a7248 1
canonpath
d7256 5
a7260 1
=over 4
d7266 1
a7266 3
=head2 File::Temp - return name and handle of a temporary file safely

=over 4
d7268 1
a7268 1
=item PORTABILITY
d7274 2
d7278 3
a7280 1
=over 4
d7282 1
a7282 1
=item FUNCTIONS
d7284 1
a7284 1
B<tempfile>
d7288 3
a7290 1
B<tempdir>
d7292 1
a7292 1
=over 4
d7294 1
a7294 1
=item MKTEMP FUNCTIONS
d7296 1
a7296 1
B<mkstemp>
d7298 1
a7298 1
=back
d7300 1
a7300 1
B<mkstemps>
d7302 1
a7302 1
B<mkdtemp>
d7304 1
a7304 1
B<mktemp>
d7306 1
a7306 1
=over 4
d7308 1
a7308 1
=item POSIX FUNCTIONS
d7310 1
a7310 1
B<tmpnam>
d7312 1
a7312 1
=back
d7314 1
a7314 1
B<tmpfile>
d7316 1
a7316 1
=over 4
d7318 1
a7318 1
=item ADDITIONAL FUNCTIONS
d7320 1
a7320 1
B<tempnam>
d7324 1
a7324 1
=over 4
d7326 1
a7326 1
=item UTILITY FUNCTIONS
d7328 1
a7328 1
B<unlink0>
d7330 1
a7330 1
=back
d7332 1
a7332 1
=over 4
d7334 1
a7334 1
=item PACKAGE VARIABLES
d7336 1
a7336 1
B<safe_level>, STANDARD, MEDIUM, HIGH
d7338 1
a7338 1
=back
d7340 1
a7340 1
TopSystemUID
d7342 1
a7342 1
=over 4
d7344 1
a7344 1
=item WARNING
d7346 1
a7346 1
=over 4
d7348 1
a7348 1
=item Temporary files and NFS
d7350 1
a7350 1
=back
d7352 1
a7352 1
=item HISTORY
a7355 2
=item AUTHOR

d7360 1
a7360 1
=over 4
d7374 1
a7374 1
=over 4
d7386 1
a7386 1
=over 4
d7400 1
a7400 1
=over 4
d7418 1
a7418 1
=over 4
d7434 1
a7434 1
=over 4
d7444 1
a7444 1
=over 4
d7472 1
a7472 3
=over 4

=item Object oriented interface
d7488 4
a7491 5
default, posix_default, auto_abbrev, getopt_compat, gnu_compat, gnu_getopt,
require_order, permute, bundling (default: disabled), bundling_override
(default: disabled), ignore_case  (default: enabled), ignore_case_always
(default: disabled), pass_through (default: disabled), prefix,
prefix_pattern, debug (default: disabled)
d7497 1
a7497 1
=over 4
a7506 11
=item Trouble Shooting

=over 4

=item Warning: Ignoring '!' modifier for short option

=item GetOptions does not return a false result when an option is not
supplied

=back

d7516 1
a7516 1
=over 4
d7527 1
a7527 1
=over 4
d7537 1
a7537 1
=over 4
d7547 1
a7547 1
=over 4
d7566 1
a7566 1
=over 4
d7588 1
a7588 1
=over 4
d7617 1
a7617 1
=over 4
d7641 1
a7641 1
=over 4
d7662 1
a7662 1
=over 4
d7668 1
a7668 3
$io->getpos, $io->setpos, $io->setpos ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=1 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell
d7676 1
a7676 1
=over 4
d7702 1
a7702 1
=over 4
d7727 1
a7727 1
=over 4
d7737 1
a7737 1
=over 4
d7756 1
a7756 1
=over 4
d7781 1
a7781 1
=over 4
d7800 1
a7800 1
=over 4
d7823 1
a7823 1
=over 4
d7852 1
a7852 1
=over 4
d7876 1
a7876 1
=over 4
d7898 1
a7898 1
=over 4
d7904 1
a7904 3
$io->getpos, $io->setpos, $io->setpos ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=1 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell
d7913 1
a7913 1
=over 4
d7940 1
a7940 1
=over 4
d7966 1
a7966 1
=over 4
d7976 1
a7976 1
=over 4
d7996 1
a7996 1
=over 4
d8020 1
a8020 1
=over 4
d8042 1
a8042 1
=over 4
d8057 1
a8057 1
=over 4
d8069 1
a8069 1
=over 4
d8092 1
a8092 1
=over 4
d8110 1
a8110 1
=over 4
d8133 1
a8133 1
=over 4
d8156 1
a8156 1
=over 4
d8173 1
a8173 1
=over 4
a8190 33
=head2 Math::Complex - complex numbers and associated mathematical
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPERATIONS

=item CREATION

=item STRINGIFICATION

=over 4

=item CHANGED IN PERL 5.6

=back

=item USAGE

=item ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO

=item ERRORS DUE TO INDIGESTIBLE ARGUMENTS

=item BUGS

=item AUTHORS

=back

d8193 1
a8193 1
=over 4
d8203 1
a8203 1
=over 4
d8215 1
a8215 1
=over 4
d8238 1
a8238 1
=over 4
d8242 1
a8242 11
C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>

=item DIAGNOSTICS

=over 4

=item C<ndbm store returned -1, errno 22, key "..." at ...>

=back

=item BUGS AND WARNINGS
d8248 1
a8248 1
=over 4
d8254 1
a8254 1
=over 4
d8272 1
a8272 1
=over 4
d8289 1
a8289 1
=over 4
d8306 1
a8306 1
=over 4
d8321 1
a8321 1
=over 4
d8337 1
a8337 1
=over 4
d8353 1
a8353 1
=over 4
d8357 1
a8357 11
C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>

=item DIAGNOSTICS

=over 4

=item C<odbm store returned -1, errno 22, key "..." at ...>

=back

=item BUGS AND WARNINGS
d8363 1
a8363 1
=over 4
d8391 1
a8391 1
=over 4
d8409 1
a8409 1
=over 4
d8419 1
a8419 1
=over 4
d8443 1
a8443 1
=over 4
d8455 1
a8455 1
=over 4
d8487 6
a8492 6
strncat, strncmp, strncpy, strpbrk, strrchr, strspn, strstr, strtod,
strtok, strtol, strtoul, strxfrm, sysconf, system, tan, tanh, tcdrain,
tcflow, tcflush, tcgetpgrp, tcsendbreak, tcsetpgrp, time, times, tmpfile,
tmpnam, tolower, toupper, ttyname, tzname, tzset, umask, uname, ungetc,
unlink, utime, vfprintf, vprintf, vsprintf, wait, waitpid, wcstombs,
wctomb, write
d8496 1
a8496 1
=over 4
d8580 2
d8586 1
a8586 1
=over 4
d8592 1
a8592 1
=over 4
d8604 1
a8604 1
=over 4
d8621 6
a8626 10
whitespace in paragraph, file does not start with =head, previous =item has
no contents, preceding non-item paragraph(s), =item type mismatch (I<one>
vs. I<two>), I<N> unescaped C<E<lt>E<gt>> in paragraph, Unknown entity, No
items in =over, No argument for =item, empty section in previous paragraph,
Verbatim paragraph in NAME section

=item Hyperlinks

ignoring leading/trailing whitespace in link, (section) in '$page'
deprecated, alternative text/node '%s' contains non-escaped | or /
a8637 2
C<Pod::Checker-E<gt>new( %options )>

d8651 1
a8651 1
=over 4
d8659 1
a8659 1
=over 4
d8665 1
a8665 25
=back

=over 4

=item C<pod_find( { %opts } , @@directories )>

C<-verbose =E<gt> 1>, C<-perl =E<gt> 1>, C<-script =E<gt> 1>, C<-inc =E<gt>
1>

=back

=over 4

=item C<simplify_name( $str )>

=back

=over 4

=item C<pod_where( { %opts }, $pod )>

C<-inc =E<gt> 1>, C<-dirs =E<gt> [ $dir1, $dir2, ... ]>, C<-verbose =E<gt>
1>

=back
d8667 1
a8667 7
=over 4

=item C<contains_pod( $file , $verbose )>

=back

=over 4
d8677 1
a8677 1
=over 4
d8704 1
a8704 1
=over 4
d8714 2
a8715 2
package B<Pod::InputSource>, package B<Pod::Paragraph>, package
B<Pod::InteriorSequence>, package B<Pod::ParseTree>
d8719 1
a8719 1
=over 4
d8725 1
a8725 1
=over 4
d8731 1
a8731 1
=over 4
d8737 1
a8737 1
=over 4
d8743 1
a8743 1
=over 4
d8749 1
a8749 1
=over 4
d8755 1
a8755 1
=over 4
d8757 1
a8757 1
=item Pod::Paragraph-E<gt>B<new()>
d8761 1
a8761 1
=over 4
d8763 1
a8763 1
=item $pod_para-E<gt>B<cmd_name()>
d8767 1
a8767 1
=over 4
d8769 1
a8769 1
=item $pod_para-E<gt>B<text()>
d8773 1
a8773 1
=over 4
d8775 1
a8775 1
=item $pod_para-E<gt>B<raw_text()>
d8779 1
a8779 1
=over 4
d8781 1
a8781 1
=item $pod_para-E<gt>B<cmd_prefix()>
d8785 1
a8785 1
=over 4
d8787 1
a8787 1
=item $pod_para-E<gt>B<cmd_separator()>
d8791 1
a8791 1
=over 4
d8793 1
a8793 1
=item $pod_para-E<gt>B<parse_tree()>
d8797 1
a8797 1
=over 4
d8799 1
a8799 1
=item $pod_para-E<gt>B<file_line()>
d8803 1
a8803 1
=over 4
d8809 1
a8809 1
=over 4
d8811 1
a8811 1
=item Pod::InteriorSequence-E<gt>B<new()>
d8815 1
a8815 1
=over 4
d8817 1
a8817 1
=item $pod_seq-E<gt>B<cmd_name()>
d8821 1
a8821 1
=over 4
d8823 1
a8823 1
=item $pod_seq-E<gt>B<prepend()>
d8827 1
a8827 1
=over 4
d8829 1
a8829 1
=item $pod_seq-E<gt>B<append()>
d8833 1
a8833 1
=over 4
d8835 1
a8835 1
=item $pod_seq-E<gt>B<nested()>
d8839 1
a8839 1
=over 4
d8841 1
a8841 1
=item $pod_seq-E<gt>B<raw_text()>
d8845 1
a8845 1
=over 4
d8847 1
a8847 1
=item $pod_seq-E<gt>B<left_delimiter()>
d8851 1
a8851 1
=over 4
d8853 1
a8853 1
=item $pod_seq-E<gt>B<right_delimiter()>
d8857 1
a8857 1
=over 4
d8859 1
a8859 1
=item $pod_seq-E<gt>B<parse_tree()>
d8863 1
a8863 1
=over 4
d8865 1
a8865 1
=item $pod_seq-E<gt>B<file_line()>
d8869 1
a8869 1
=over 4
d8871 1
a8871 1
=item Pod::InteriorSequence::B<DESTROY()>
d8875 1
a8875 1
=over 4
d8881 1
a8881 1
=over 4
d8883 1
a8883 1
=item Pod::ParseTree-E<gt>B<new()>
d8887 1
a8887 1
=over 4
d8889 1
a8889 1
=item $ptree-E<gt>B<top()>
d8893 1
a8893 1
=over 4
d8895 1
a8895 1
=item $ptree-E<gt>B<children()>
d8899 1
a8899 1
=over 4
d8901 1
a8901 1
=item $ptree-E<gt>B<prepend()>
d8905 1
a8905 1
=over 4
d8907 1
a8907 1
=item $ptree-E<gt>B<append()>
d8911 1
a8911 1
=over 4
d8913 1
a8913 1
=item $ptree-E<gt>B<raw_text()>
d8917 1
a8917 1
=over 4
d8919 1
a8919 1
=item Pod::ParseTree::B<DESTROY()>
d8923 1
a8923 1
=over 4
a8930 118
=head2 Pod::LaTeX - Convert Pod data to formatted Latex

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item OBJECT METHODS

C<initialize>

=back

=over 4

=item Data Accessors

B<AddPreamble>

=back

B<AddPostamble>

B<Head1Level>

B<Label>

B<LevelNoNum>

B<MakeIndex>

B<ReplaceNAMEwithSection>

B<StartWithNewPage>

B<TableOfContents>

B<UniqueLabels>

B<UserPreamble>

B<UserPostamble>

B<Lists>

=over 4

=item Subclassed methods

=back

B<begin_pod>

B<end_pod>

B<command>

B<verbatim>

B<textblock>

B<interior_sequence>

=over 4

=item List Methods

B<begin_list>

=back

B<end_list>

B<add_item>

=over 4

=item Methods for headings

B<head>

=back

=over 4

=item Internal methods

B<_output>

=back

B<_replace_special_chars>

B<_create_label>

B<_create_index>

B<_clean_latex_commands>

=over 4

=item NOTES

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=item REVISION

=back

d8933 1
a8933 1
=over 4
d8939 2
a8940 2
center, date, fixed, fixedbold, fixeditalic, fixedbolditalic, quotes,
release, section
d8944 2
a8945 4
roff font should be 1 or 2 chars, not "%s", Invalid link %s, Invalid quote
specification "%s", %s:%d: Unknown command paragraph "%s", Unknown escape
EE<lt>%sE<gt>, Unknown sequence %s, %s: Unknown command paragraph "%s" on
line %d, Unmatched =back
d8957 1
a8957 1
=over 4
d8965 1
a8965 1
=over 4
d8969 1
a8969 1
Pod::List-E<gt>new()
d8973 1
a8973 1
$list-E<gt>file()
d8975 1
a8975 1
$list-E<gt>start()
d8977 1
a8977 1
$list-E<gt>indent()
d8979 1
a8979 1
$list-E<gt>type()
d8981 1
a8981 1
$list-E<gt>rx()
d8983 1
a8983 1
$list-E<gt>item()
d8985 1
a8985 1
$list-E<gt>parent()
d8987 1
a8987 1
$list-E<gt>tag()
d8989 1
a8989 1
=over 4
d8993 1
a8993 1
Pod::Hyperlink-E<gt>new()
d8997 1
a8997 1
$link-E<gt>parse($string)
d8999 1
a8999 1
$link-E<gt>markup($string)
d9001 1
a9001 1
$link-E<gt>text()
d9003 1
a9003 1
$link-E<gt>warning()
d9005 1
a9005 1
$link-E<gt>file(), $link-E<gt>line()
d9007 1
a9007 1
$link-E<gt>page()
d9009 1
a9009 1
$link-E<gt>node()
d9011 1
a9011 1
$link-E<gt>alttext()
d9013 1
a9013 1
$link-E<gt>type()
d9015 1
a9015 1
$link-E<gt>link()
d9017 1
a9017 1
=over 4
d9021 1
a9021 1
Pod::Cache-E<gt>new()
d9025 1
a9025 1
$cache-E<gt>item()
d9027 1
a9027 1
$cache-E<gt>find_page($name)
d9029 1
a9029 1
=over 4
d9033 1
a9033 1
Pod::Cache::Item-E<gt>new()
d9037 1
a9037 1
$cacheitem-E<gt>page()
d9039 1
a9039 1
$cacheitem-E<gt>description()
d9041 1
a9041 1
$cacheitem-E<gt>path()
d9043 1
a9043 1
$cacheitem-E<gt>file()
d9045 1
a9045 1
$cacheitem-E<gt>nodes()
d9047 1
a9047 1
$cacheitem-E<gt>find_node($name)
d9049 1
a9049 1
$cacheitem-E<gt>idx()
d9051 1
a9051 1
=over 4
d9061 1
a9061 1
=over 4
d9080 1
a9080 1
=over 4
d9086 1
a9086 1
=over 4
d9094 1
a9094 1
=over 4
d9102 1
a9102 1
=over 4
d9110 1
a9110 1
=over 4
d9116 1
a9116 1
=over 4
d9122 1
a9122 1
=over 4
d9128 1
a9128 1
=over 4
d9134 1
a9134 1
=over 4
d9140 1
a9140 1
=over 4
d9146 1
a9146 1
=over 4
d9152 1
a9152 1
=over 4
d9158 1
a9158 1
=over 4
d9164 1
a9164 1
=over 4
d9170 1
a9170 1
=over 4
d9176 1
a9176 1
=over 4
d9186 1
a9186 1
=over 4
d9192 1
a9192 1
=over 4
d9198 1
a9198 1
=over 4
d9204 1
a9204 1
=over 4
d9210 1
a9210 1
=over 4
d9216 1
a9216 1
=over 4
d9222 1
a9222 1
=over 4
d9228 1
a9228 1
=over 4
d9234 1
a9234 1
=over 4
d9240 1
a9240 1
=over 4
d9246 1
a9246 1
=over 4
d9252 1
a9252 1
=over 4
d9258 1
a9258 1
=over 4
d9264 1
a9264 1
=over 4
d9270 1
a9270 1
=over 4
d9276 1
a9276 1
=over 4
d9282 1
a9282 1
=over 4
d9288 1
a9288 1
=over 4
d9300 1
a9300 1
=over 4
d9306 1
a9306 1
=over 4
d9321 1
a9321 1
=over 4
d9337 1
a9337 1
=over 4
d9343 1
a9343 1
=over 4
d9349 1
a9349 1
=over 4
d9355 1
a9355 1
=over 4
d9361 1
a9361 1
=over 4
d9367 1
a9367 1
=over 4
d9373 1
a9373 1
=over 4
d9379 1
a9379 1
=over 4
d9385 1
a9385 1
=over 4
d9393 1
a9393 1
=over 4
d9399 1
a9399 1
=over 4
d9405 1
a9405 1
=over 4
d9411 1
a9411 1
=over 4
d9417 1
a9417 1
=over 4
d9427 1
a9427 1
=over 4
d9433 1
a9433 1
alt, indent, loose, quotes, sentence, width
d9437 2
a9438 3
Bizarre space in item, Can't open %s for reading: %s, Invalid quote
specification "%s", %s:%d: Unknown command paragraph "%s", Unknown escape:
%s, Unknown sequence: %s, Unmatched =back
d9452 1
a9452 18
=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=item AUTHOR

=back

=head2 Pod::Text::Overstrike - Convert POD data to formatted overstrike
text

=over 4
d9469 1
a9469 1
=over 4
d9484 1
a9484 1
=over 4
d9497 1
a9497 1
=over 4
d9513 1
a9513 1
=over 4
a9518 12
C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>

=item DIAGNOSTICS

=over 4

=item C<sdbm store returned -1, errno 22, key "..." at ...>

=back

=item BUGS AND WARNINGS

d9523 1
a9523 1
=over 4
d9533 1
a9533 1
=over 4
d9556 1
a9556 1
=over 4
d9566 1
a9566 1
=over 4
d9576 1
a9576 1
=over 4
d9582 1
a9582 1
=over 4
d9604 1
a9604 1
=over 4
a9609 6
=over 4

=item OBJECT ORIENTED SYNTAX

=back

d9617 1
a9617 1
=over 4
d9633 1
a9633 1
=over 4
d9643 1
a9643 1
=over 4
d9656 1
a9656 1
=over 4
d9677 1
a9677 1
=over 4
d9697 1
a9697 1
=over 4
d9705 3
a9707 3
Invalid attribute name %s, Name "%s" used only once: possible typo, No
comma allowed after filehandle, Bareword "%s" not allowed while "strict
subs" in use
a9710 2
=item NOTES

d9717 1
a9717 1
=over 4
d9729 1
a9729 1
=over 4
d9748 1
a9748 1
=over 4
d9771 1
a9771 1
=over 4
d9793 1
a9793 1
=over 4
d9799 1
a9799 1
=over 4
d9826 1
a9826 1
=over 4
d9839 1
a9839 1
=over 4
d9847 6
d9860 1
a9860 1
=over 4
d9877 1
a9877 1
=over 4
d9891 1
a9891 1
=over 4
d9906 1
a9906 3
=over 4

=item CAVEAT
d9930 1
a9930 1
=over 4
d9946 1
a9946 1
=over 4
d9960 1
a9960 1
=over 4
d9972 1
a9972 1
=over 4
d9982 1
a9982 1
=over 4
d9984 1
a9984 1
=item SYNOPSIS
d9986 1
a9986 1
=item DESCRIPTION
d9995 1
a9995 1
=item AUTHOR
d10002 1
a10002 1
=over 4
a10014 2
=item COMPATIBILITY

d10019 1
a10019 1
=over 4
d10036 1
a10036 1
=over 4
d10055 1
a10055 1
=over 4
d10069 1
a10069 1
=over 4
d10081 1
a10081 1
=over 4
d10096 1
a10096 1
=over 4
d10111 1
a10111 1
=over 4
d10125 1
a10125 1
=over 4
d10137 1
a10137 1
=over 4
d10151 1
a10151 1
=over 4
d10166 1
a10166 1
=over 4
d10172 1
a10172 1
=over 4
a10187 31
=head2 Win32 - Interfaces to some Win32 API Functions

=over 4

=item DESCRIPTION

=over 4

=item Alphabetical Listing of Win32 Functions

Win32::AbortSystemShutdown(MACHINE), Win32::BuildNumber(),
Win32::CopyFile(FROM, TO, OVERWRITE), Win32::DomainName(),
Win32::ExpandEnvironmentStrings(STRING), Win32::FormatMessage(ERRORCODE),
Win32::FsType(), Win32::FreeLibrary(HANDLE), Win32::GetArchName(),
Win32::GetChipName(), Win32::GetCwd(), Win32::GetFullPathName(FILENAME),
Win32::GetLastError(), Win32::GetLongPathName(PATHNAME),
Win32::GetNextAvailDrive(), Win32::GetOSVersion(),
Win32::GetShortPathName(PATHNAME), Win32::GetProcAddress(INSTANCE,
PROCNAME), Win32::GetTickCount(), Win32::InitiateSystemShutdown,
Win32::IsWinNT(), Win32::IsWin95(), Win32::LoadLibrary(LIBNAME),
Win32::LoginName(), Win32::LookupAccountName(SYSTEM, ACCOUNT, DOMAIN, SID,
SIDTYPE), Win32::LookupAccountSID(SYSTEM, SID, ACCOUNT, DOMAIN, SIDTYPE),
Win32::MsgBox(MESSAGE [, FLAGS [, TITLE]]), Win32::NodeName(),
Win32::RegisterServer(LIBRARYNAME), Win32::SetCwd(NEWDIRECTORY),
Win32::SetLastError(ERROR), Win32::Sleep(TIME), Win32::Spawn(COMMAND, ARGS,
PID), Win32::UnregisterServer(LIBRARYNAME)

=back

=back

d10190 1
a10190 1
=over 4
d10205 1
a10205 1
=over 4
@


1.1.1.5
log
@stock perl 5.8.0 from CPAN
@
text
@a19 18
=over 4

=item Overview

=item Tutorials

=item Reference Manual

=item Internals and C Language Interface

=item Miscellaneous

=item Language-Specific

=item Platform-Specific

=back

d40 2
a41 50
=head2 perlintro -- a brief introduction and overview of Perl

=over 4

=item DESCRIPTION

=over 4

=item What is Perl?

=item Running Perl programs

=item Basic syntax overview

=item Perl variable types

Scalars, Arrays, Hashes

=item Variable scoping

=item Conditional and looping constructs

if, while, for, foreach

=item Builtin operators and functions

Arithmetic, Numeric comparison, String comparison, Boolean logic,
Miscellaneous

=item Files and I/O

=item Regular expressions

Simple matching, Simple substitution, More complex regular expressions,
Parentheses for capturing, Other regexp features

=item Writing subroutines

=item OO Perl

=item Using Perl modules

=back

=item AUTHOR

=back

=head2 perlfaq - frequently asked questions about Perl ($Date: 2002/03/11
21:32:23 $)
d61 1
a61 1
=item L<perlfaq6>: Regular Expressions
d241 1
a241 1
y/SEARCHLIST/REPLACEMENTLIST/cds, <<EOF
a284 2
Lvalue subroutines are EXPERIMENTAL

d335 3
a337 3
binmode FILEHANDLE, LAYER, binmode FILEHANDLE, bless REF,CLASSNAME, bless
REF, caller EXPR, caller, chdir EXPR, chmod LIST, chomp VARIABLE, chomp(
LIST ), chomp, chop VARIABLE, chop( LIST ), chop, chown LIST, chr NUMBER,
d360 20
a379 22
lock THING, log EXPR, log, lstat EXPR, lstat, m//, map BLOCK LIST, map
EXPR,LIST, mkdir FILENAME,MASK, mkdir FILENAME, msgctl ID,CMD,ARG, msgget
KEY,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, msgsnd ID,MSG,FLAGS, my EXPR, my
TYPE EXPR, my EXPR : ATTRS, my TYPE EXPR : ATTRS, next LABEL, next, no
Module VERSION LIST, no Module VERSION, no Module LIST, no Module, oct
EXPR, oct, open FILEHANDLE,EXPR, open FILEHANDLE,MODE,EXPR, open
FILEHANDLE,MODE,EXPR,LIST, open FILEHANDLE,MODE,REFERENCE, open FILEHANDLE,
opendir DIRHANDLE,EXPR, ord EXPR, ord, our EXPR, our EXPR TYPE, our EXPR :
ATTRS, our TYPE EXPR : ATTRS, pack TEMPLATE,LIST, package NAMESPACE,
package, pipe READHANDLE,WRITEHANDLE, pop ARRAY, pop, pos SCALAR, pos,
print FILEHANDLE LIST, print LIST, print, printf FILEHANDLE FORMAT, LIST,
printf FORMAT, LIST, prototype FUNCTION, push ARRAY,LIST, q/STRING/,
qq/STRING/, qr/STRING/, qx/STRING/, qw/STRING/, quotemeta EXPR, quotemeta,
rand EXPR, rand, read FILEHANDLE,SCALAR,LENGTH,OFFSET, read
FILEHANDLE,SCALAR,LENGTH, readdir DIRHANDLE, readline EXPR, readlink EXPR,
readlink, readpipe EXPR, recv SOCKET,SCALAR,LENGTH,FLAGS, redo LABEL, redo,
ref EXPR, ref, rename OLDNAME,NEWNAME, require VERSION, require EXPR,
require, reset EXPR, reset, return EXPR, return, reverse LIST, rewinddir
DIRHANDLE, rindex STR,SUBSTR,POSITION, rindex STR,SUBSTR, rmdir FILENAME,
rmdir, s///, scalar EXPR, seek FILEHANDLE,POSITION,WHENCE, seekdir
DIRHANDLE,POS, select FILEHANDLE, select, select RBITS,WBITS,EBITS,TIMEOUT,
semctl ID,SEMNUM,CMD,ARG, semget KEY,NSEMS,FLAGS, semop KEY,OPSTRING, send
d388 4
a391 6
/PATTERN/,EXPR, split /PATTERN/, split, sprintf FORMAT, LIST, format
parameter index, flags, vector flag, (minimum) width, precision, or maximum
width, size, order of arguments, sqrt EXPR, sqrt, srand EXPR, srand, stat
FILEHANDLE, stat EXPR, stat, study SCALAR, study, sub NAME BLOCK, sub NAME
(PROTO) BLOCK, sub NAME : ATTRS BLOCK, sub NAME (PROTO) : ATTRS BLOCK,
substr EXPR,OFFSET,LENGTH,REPLACEMENT, substr EXPR,OFFSET,LENGTH, substr
d475 1
a475 1
=item Declaration of an ARRAY OF ARRAYS
d477 1
a477 1
=item Generation of an ARRAY OF ARRAYS
d479 1
a479 1
=item Access and Printing of an ARRAY OF ARRAYS
d499 1
a499 1
=item Declaration of an ARRAY OF HASHES
d501 1
a501 1
=item Generation of an ARRAY OF HASHES
d503 1
a503 1
=item Access and Printing of an ARRAY OF HASHES
d583 1
a583 1
=head2 perlpod - the Plain Old Documentation format
a590 2
=item Ordinary Paragraph

d595 1
a595 13
C<=head1 I<Heading Text>>, C<=head2 I<Heading Text>>, C<=head3 I<Heading
Text>>, C<=head4 I<Heading Text>>, C<=over I<indentlevel>>, C<=item
I<stuff...>>, C<=back>, C<=cut>, C<=pod>, C<=begin I<formatname>>, C<=end
I<formatname>>, C<=for I<formatname> I<text...>>

=item Formatting Codes

C<IE<lt>textE<gt>> -- italic text, C<BE<lt>textE<gt>> -- bold text,
C<CE<lt>codeE<gt>> -- code text, C<LE<lt>nameE<gt>> -- a hyperlink,
C<EE<lt>escapeE<gt>> -- a character escape, C<FE<lt>filenameE<gt>> -- used
for filenames, C<SE<lt>textE<gt>> -- text contains non-breaking spaces,
C<XE<lt>topic nameE<gt>> -- an index entry, C<ZE<lt>E<gt>> -- a null
(zero-effect) formatting code
d601 1
a601 7
=item Hints for Writing Pod

=back

=item SEE ALSO

=item AUTHOR
a604 33
=head2 perlpodspec - Plain Old Documentation: format specification and
notes

=over 4

=item DESCRIPTION

=item Pod Definitions

=item Pod Commands

"=head1", "=head2", "=head3", "=head4", "=pod", "=cut", "=over", "=item",
"=back", "=begin formatname", "=end formatname", "=for formatname text..."

=item Pod Formatting Codes

C<IE<lt>textE<gt>> -- italic text, C<BE<lt>textE<gt>> -- bold text,
C<CE<lt>codeE<gt>> -- code text, C<FE<lt>filenameE<gt>> -- style for
filenames, C<XE<lt>topic nameE<gt>> -- an index entry, C<ZE<lt>E<gt>> -- a
null (zero-effect) formatting code, C<LE<lt>nameE<gt>> -- a hyperlink,
C<EE<lt>escapeE<gt>> -- a character escape, C<SE<lt>textE<gt>> -- text
contains non-breaking spaces

=item Notes on Implementing Pod Processors

=item About LE<lt>...E<gt> Codes

First:, Second:, Third:, Fourth:, Fifth:, Sixth:

=item About =over...=back Regions

=item About Data Paragraphs and "=begin/=end" Regions

d652 1
a652 1
Parsing, Parsing, Parsing, Parsing, Parsing
d727 2
a728 2
B<-t>, B<-T>, B<-u>, B<-U>, B<-v>, B<-V>, B<-V:>I<name>, B<-w>, B<-W>,
B<-X>, B<-x> I<directory>
d734 3
a736 5
HOME, LOGDIR, PATH, PERL5LIB, PERL5OPT, PERLIO, :bytes, :crlf, :mmap,
:perlio, :raw, :stdio, :unix, :utf8, :win32, PERLIO_DEBUG, PERLLIB,
PERL5DB, PERL5SHELL (specific to the Win32 port), PERL_DEBUG_MSTATS,
PERL_DESTRUCT_LEVEL, PERL_ENCODING, PERL_ROOT (specific to the VMS port),
SYS$LOGIN (specific to the VMS port)
d790 1
a790 1
=item Looking at data and -w and v
d828 9
a836 10
h, h [command], h h, p expr, x [maxdepth] expr, V [pkg [vars]], X [vars], y
[level [vars]], T, s [expr], n [expr], r, <CR>, c [line|sub], l, l
min+incr, l min-max, l line, l subname, -, v [line], f filename, /pattern/,
?pattern?, L [abw], S [[!]regex], t, t expr, b, b [line] [condition], b
subname [condition], b postpone subname [condition], b load filename, b
compile subname, B line, B *, a [line] command, A line, A *, w expr, W
expr, W *, o, o booloption .., o anyoption? .., o option=value .., < ?, < [
command ], << command, > ?, > command, >> command, { ?, { [ command ], {{
command, ! number, ! -number, ! pattern, !! cmd, source file, H -number, q
or ^D, R, |dbcmd, ||dbcmd, command, m expr, M, man [manpage]
d842 4
a845 5
C<PrintRet>, C<ornaments>, C<frame>, C<maxTraceLen>, C<windowSize>,
C<arrayDepth>, C<hashDepth>, C<dumpDepth>, C<compactDump>, C<veryCompact>,
C<globPrint>, C<DumpDBFiles>, C<DumpPackages>, C<DumpReused>, C<quote>,
C<HighBit>, C<undefPrint>, C<UsageOnly>, C<TTY>, C<noTTY>, C<ReadLine>,
C<NonStop>
d884 25
a908 26
$ARG, $_, $a, $b, $<I<digits>>, $MATCH, $&, $PREMATCH, $`, $POSTMATCH, $',
$LAST_PAREN_MATCH, $+, $^N, @@LAST_MATCH_END, @@+, $MULTILINE_MATCHING, $*,
HANDLE->input_line_number(EXPR), $INPUT_LINE_NUMBER, $NR, $,
IO::Handle->input_record_separator(EXPR), $INPUT_RECORD_SEPARATOR, $RS, $/,
HANDLE->autoflush(EXPR), $OUTPUT_AUTOFLUSH, $|,
IO::Handle->output_field_separator EXPR, $OUTPUT_FIELD_SEPARATOR, $OFS, $,,
IO::Handle->output_record_separator EXPR, $OUTPUT_RECORD_SEPARATOR, $ORS,
$\, $LIST_SEPARATOR, $", $SUBSCRIPT_SEPARATOR, $SUBSEP, $;, $OFMT, $#,
HANDLE->format_page_number(EXPR), $FORMAT_PAGE_NUMBER, $%,
HANDLE->format_lines_per_page(EXPR), $FORMAT_LINES_PER_PAGE, $=,
HANDLE->format_lines_left(EXPR), $FORMAT_LINES_LEFT, $-, @@LAST_MATCH_START,
@@-, C<$`> is the same as C<substr($var, 0, $-[0])>, C<$&> is the same as
C<substr($var, $-[0], $+[0] - $-[0])>, C<$'> is the same as C<substr($var,
$+[0])>, C<$1> is the same as C<substr($var, $-[1], $+[1] - $-[1])>, C<$2>
is the same as C<substr($var, $-[2], $+[2] - $-[2])>, C<$3> is the same as
C<substr $var, $-[3], $+[3] - $-[3])>, HANDLE->format_name(EXPR),
$FORMAT_NAME, $~, HANDLE->format_top_name(EXPR), $FORMAT_TOP_NAME, $^,
IO::Handle->format_line_break_characters EXPR,
$FORMAT_LINE_BREAK_CHARACTERS, $:, IO::Handle->format_formfeed EXPR,
$FORMAT_FORMFEED, $^L, $ACCUMULATOR, $^A, $CHILD_ERROR, $?, ${^ENCODING},
$OS_ERROR, $ERRNO, $!, %!, $EXTENDED_OS_ERROR, $^E, $EVAL_ERROR, $@@,
$PROCESS_ID, $PID, $$, $REAL_USER_ID, $UID, $<, $EFFECTIVE_USER_ID, $EUID,
$>, $REAL_GROUP_ID, $GID, $(, $EFFECTIVE_GROUP_ID, $EGID, $),
$PROGRAM_NAME, $0, $[, $], $COMPILING, $^C, $DEBUGGING, $^D,
$SYSTEM_FD_MAX, $^F, $^H, %^H, $INPLACE_EDIT, $^I, $^M, $OSNAME, $^O,
${^OPEN}, $PERLDB, $^P, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
d910 3
a912 4
$BASETIME, $^T, ${^TAINT}, $PERL_VERSION, $^V, $WARNING, $^W,
${^WARNING_BITS}, ${^WIDE_SYSTEM_CALLS}, $EXECUTABLE_NAME, $^X, ARGV,
$ARGV, @@ARGV, ARGVOUT, @@F, @@INC, @@_, %INC, %ENV, $ENV{expr}, %SIG,
$SIG{expr}
a1003 2
=item IO Layers

a1013 72
=head2 perlpacktut - tutorial on C<pack> and C<unpack>

=over 4

=item DESCRIPTION

=item The Basic Principle

=item Packing Text

=item Packing Numbers

=over 4

=item Integers

=item Unpacking a Stack Frame

=item How to Eat an Egg on a Net

=item Floating point Numbers

=back

=item Exotic Templates

=over 4

=item Bit Strings

=item Uuencoding

=item Doing Sums

=item  Unicode

=item Another Portable Binary Encoding

=back

=item Lengths and Widths

=over 4

=item String Lengths

=item Dynamic Templates

=back

=item Packing and Unpacking C Structures

=over 4

=item The Alignment Pit

=item Alignment, Take 2

=item Alignment, Take 3

=item Pointers for How to Use Them

=back

=item Pack Recipes

=item Funnies Section

=item Authors

=back

d1092 1
a1092 1
[1], [2], [3], cntrl, graph, print, punct, xdigit
d1344 1
a1344 1
=head2 perltooc - Tom's OO Tutorial for Class Data in Perl
d1414 1
a1414 1
=item Indirect Object Syntax
a1519 6
=over 4

=item Handling the SIGHUP Signal in Daemons

=back

d1524 1
a1524 4
=item Deferred Signals

Long running opcodes, Interrupting IO, Signals as "faults", Signals
triggered by operating system state
d1590 1
a1590 1
=head2 perlfork - Perl's fork() emulation
d1642 2
a1643 2
Arithmetic operators, ++, Arithmetic operators during C<use integer>, Other
mathematical operators, Bitwise operators, Bitwise operators during C<use
a1658 120
=item Status

=item What Is A Thread Anyway?

=item Threaded Program Models

=over 4

=item Boss/Worker

=item Work Crew

=item Pipeline

=back

=item Native threads

=item What kind of threads are Perl threads?

=item Thread-Safe Modules

=item Thread Basics

=over 4

=item Basic Thread Support

=item A Note about the Examples

=item Creating Threads

=item Giving up control

=item Waiting For A Thread To Exit

=item Ignoring A Thread

=back

=item Threads And Data

=over 4

=item Shared And Unshared Data

=item Thread Pitfalls: Races

=back

=item Synchronization and control

=over 4

=item Controlling access: lock()

=item A Thread Pitfall: Deadlocks

=item Queues: Passing Data Around

=item Semaphores: Synchronizing Data Access

=item Basic semaphores

=item Advanced Semaphores

=item cond_wait() and cond_signal()

=back

=item General Thread Utility Routines

=over 4

=item What Thread Am I In?

=item Thread IDs

=item Are These Threads The Same?

=item What Threads Are Running?

=back

=item A Complete Example

=item Performance considerations

=item Process-scope Changes

=item Thread-Safety of System Libraries

=item Conclusion

=item Bibliography

=over 4

=item Introductory Texts

=item OS-Related References

=item Other References

=back

=item Acknowledgements

=item AUTHOR

=item Copyrights

=back

=head2 perlothrtut - old tutorial on threads in Perl

=over 4

=item DESCRIPTION

a1789 2
=item Command names versus file pathnames

d1846 14
a1859 14
LIST, exit EXPR, exit, fcntl FILEHANDLE,FUNCTION,SCALAR, flock
FILEHANDLE,OPERATION, fork, getlogin, getpgrp PID, getppid, getpriority
WHICH,WHO, getpwnam NAME, getgrnam NAME, getnetbyname NAME, getpwuid UID,
getgrgid GID, getnetbyaddr ADDR,ADDRTYPE, getprotobynumber NUMBER,
getservbyport PORT,PROTO, getpwent, getgrent, gethostent, getnetent,
getprotoent, getservent, sethostent STAYOPEN, setnetent STAYOPEN,
setprotoent STAYOPEN, setservent STAYOPEN, endpwent, endgrent, endhostent,
endnetent, endprotoent, endservent, getsockopt SOCKET,LEVEL,OPTNAME, glob
EXPR, glob, ioctl FILEHANDLE,FUNCTION,SCALAR, kill SIGNAL, LIST, link
OLDFILE,NEWFILE, lstat FILEHANDLE, lstat EXPR, lstat, msgctl ID,CMD,ARG,
msgget KEY,FLAGS, msgsnd ID,MSG,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, open
FILEHANDLE,EXPR, open FILEHANDLE, pipe READHANDLE,WRITEHANDLE, readlink
EXPR, readlink, select RBITS,WBITS,EBITS,TIMEOUT, semctl ID,SEMNUM,CMD,ARG,
semget KEY,NSEMS,FLAGS, semop KEY,OPSTRING, setgrent, setpgrp PID,PGRP,
d1862 3
a1864 3
shmread ID,VAR,POS,SIZE, shmwrite ID,STRING,POS,SIZE, sockatmark SOCKET,
socketpair SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, stat FILEHANDLE, stat
EXPR, stat, symlink OLDFILE,NEWFILE, syscall LIST, sysopen
d1886 2
a1920 2
=item I18N::Langinfo

a1967 2
=item Unicode and UTF-8

d1982 2
a1983 1
=head2 perluniintro - Perl Unicode introduction
d1991 1
a1991 15
=item Unicode

=item Perl's Unicode Support

=item Perl's Unicode Model

=item Unicode and EBCDIC

=item Creating Unicode

=item Handling Unicode

=item Legacy Encodings

=item Unicode I/O
d1993 2
a1994 1
=item Displaying Unicode As Text
d1996 1
a1996 1
=item Special Cases
d1998 1
a1998 1
=item Advanced Topics
d2000 1
a2000 7
=item Miscellaneous

=item Questions With Answers

=item Hexadecimal Notation

=item Further Resources
d2004 1
a2004 1
=item UNICODE IN OLDER PERLS
a2007 4
=item ACKNOWLEDGMENTS

=item AUTHOR, COPYRIGHT, AND LICENSE

d2010 1
a2010 1
=head2 perlunicode - Unicode support in Perl
d2016 2
d2020 1
a2020 1
=item Important Caveats
d2022 1
a2022 2
Input and Output Layers, Regular Expressions, C<use utf8> still needed to
enable UTF-8/UTF-EBCDIC in scripts
d2024 1
a2024 1
=item Byte and Character Semantics
d2026 1
a2026 1
=item Effects of Character Semantics
d2028 1
a2028 1
=item Scripts
d2030 1
a2030 1
=item Blocks
d2032 1
a2032 57
=item User-Defined Character Properties

=item Character Encodings for Input and Output

=item Unicode Regular Expression Support Level

=item Unicode Encodings

=item Security Implications of Unicode

=item Unicode in Perl on EBCDIC

=item Locales

=item Using Unicode in XS

=back

=item BUGS

=over 4

=item Interaction with Locales

=item Interaction with Extensions

=item Speed

=back

=item SEE ALSO

=back

=head2 perlebcdic - Considerations for running Perl on EBCDIC platforms

=over 4

=item DESCRIPTION

=item COMMON CHARACTER CODE SETS

=over 4

=item ASCII

=item ISO 8859

=item Latin 1 (ISO 8859-1)

=item EBCDIC

=item 13 variant characters

=item 0037

=item 1047
a2035 8
=item Unicode code points versus EBCDIC code points

=item Remaining Perl Unicode problems in EBCDIC

=item Unicode and UTF

=item Using Encode

d2040 1
a2040 1
recipe 0, recipe 1, recipe 2, recipe 3, recipe 4, recipe 5, recipe 6
d2080 1
a2080 1
=item TRANSFORMATION FORMATS
d2090 1
a2090 1
=item Caesarian ciphers
d2108 1
a2108 1
=item OS/390, z/OS
d2110 1
a2110 1
chcp, dataset access, OS/390, z/OS iconv, locales
a2123 2
=item HISTORY

a2145 2
=item Unicode

a2169 2
=item Making your module threadsafe

a2175 25
=head2 perlmodinstall - Installing CPAN Modules

=over 4

=item DESCRIPTION

=over 4

=item PREAMBLE

B<DECOMPRESS> the file, B<UNPACK> the file into a directory, B<BUILD> the
module (sometimes unnecessary), B<INSTALL> the module

=back

=item PORTABILITY

=item HEY

=item AUTHOR

=item COPYRIGHT

=back

d2188 4
a2191 4
attributes, attrs, autouse, base, bigint, bignum, bigrat, blib, bytes,
charnames, constant, diagnostics, encoding, fields, filetest, if, integer,
less, locale, open, ops, overload, re, sigtrap, sort, strict, subs,
threads, utf8, vars, vmsish, warnings, warnings::register
d2195 30
a2224 46
AnyDBM_File, Attribute::Handlers, AutoLoader, AutoSplit, B, B::Asmdata,
B::Assembler, B::Bblock, B::Bytecode, B::C, B::CC, B::Concise, B::Debug,
B::Deparse, B::Disassembler, B::Lint, B::Showlex, B::Stackobj, B::Stash,
B::Terse, B::Xref, Benchmark, ByteLoader, CGI, CGI::Apache, CGI::Carp,
CGI::Cookie, CGI::Fast, CGI::Pretty, CGI::Push, CGI::Switch, CGI::Util,
CPAN, CPAN::FirstTime, CPAN::Nox, Carp, Carp::Heavy, Class::ISA,
Class::Struct, Config, Cwd, DB, DB_File, Devel::SelfStubber, Digest,
DirHandle, Dumpvalue, Encode, English, Env, Errno, Exporter,
Exporter::Heavy, ExtUtils::Command, ExtUtils::Command::MM,
ExtUtils::Constant, ExtUtils::Embed, ExtUtils::Install,
ExtUtils::Installed, ExtUtils::Liblist, ExtUtils::MM, ExtUtils::MM_Any,
ExtUtils::MM_BeOS, ExtUtils::MM_Cygwin, ExtUtils::MM_DOS,
ExtUtils::MM_MacOS, ExtUtils::MM_NW5, ExtUtils::MM_OS2, ExtUtils::MM_UWIN,
ExtUtils::MM_Unix, ExtUtils::MM_VMS, ExtUtils::MM_Win32,
ExtUtils::MM_Win95, ExtUtils::MY, ExtUtils::MakeMaker, ExtUtils::Manifest,
ExtUtils::Mkbootstrap, ExtUtils::Mksymlists, ExtUtils::Packlist,
ExtUtils::testlib, Fatal, Fcntl, File::Basename, File::CheckTree,
File::Compare, File::Copy, File::DosGlob, File::Find, File::Path,
File::Spec, File::Spec::Cygwin, File::Spec::Epoc, File::Spec::Functions,
File::Spec::Mac, File::Spec::OS2, File::Spec::Unix, File::Spec::VMS,
File::Spec::Win32, File::Temp, File::stat, FileCache, FileHandle,
Filter::Simple, FindBin, Getopt::Long, Getopt::Std, Hash::Util,
I18N::Collate, I18N::LangTags, I18N::LangTags::List, IO, IPC::Open2,
IPC::Open3, Locale::Constants, Locale::Country, Locale::Currency,
Locale::Language, Locale::Maketext, Locale::Maketext::TPJ13,
Locale::Script, Math::BigFloat, Math::BigInt, Math::BigInt::Calc,
Math::BigRat, Math::Complex, Math::Trig, Memoize, Memoize::AnyDBM_File,
Memoize::Expire, Memoize::ExpireFile, Memoize::ExpireTest,
Memoize::NDBM_File, Memoize::SDBM_File, Memoize::Storable, NDBM_File, NEXT,
Net::Cmd, Net::Config, Net::Domain, Net::FTP, Net::NNTP, Net::Netrc,
Net::POP3, Net::Ping, Net::SMTP, Net::Time, Net::hostent, Net::libnetFAQ,
Net::netent, Net::protoent, Net::servent, O, ODBM_File, Opcode, POSIX,
PerlIO, PerlIO::via::QuotedPrint, Pod::Checker, Pod::Find, Pod::Functions,
Pod::Html, Pod::InputObjects, Pod::LaTeX, Pod::Man, Pod::ParseLink,
Pod::ParseUtils, Pod::Parser, Pod::Plainer, Pod::Select, Pod::Text,
Pod::Text::Color, Pod::Text::Overstrike, Pod::Text::Termcap, Pod::Usage,
SDBM_File, Safe, Search::Dict, SelectSaver, SelfLoader, Shell, Socket,
Storable, Switch, Symbol, Term::ANSIColor, Term::Cap, Term::Complete,
Term::ReadLine, Test, Test::Builder, Test::Harness, Test::Harness::Assert,
Test::Harness::Iterator, Test::Harness::Straps, Test::More, Test::Simple,
Test::Tutorial, Text::Abbrev, Text::Balanced, Text::ParseWords,
Text::Soundex, Text::Tabs, Text::Wrap, Thread, Thread::Queue,
Thread::Semaphore, Tie::Array, Tie::File, Tie::Handle, Tie::Hash,
Tie::Memoize, Tie::RefHash, Tie::Scalar, Tie::SubstrHash, Time::Local,
Time::gmtime, Time::localtime, Time::tm, UNIVERSAL, Unicode::Collate,
Unicode::UCD, User::grent, User::pwent, Win32
a2235 2
South Africa

a2237 3
China, India, Indonesia, Israel, Japan, Korea, Philippines, Russian
Federation, Saudi Arabia, Singapore, South Korea, Taiwan, Thailand

a2239 2
Costa Rica

a2241 6
Austria, Belgium, Bulgaria, Croatia, Czech Republic, Denmark, Estonia,
Finland, France, Germany, Greece, Hungary, Iceland, Ireland, Italy, Latvia,
Lithuania, Netherlands, Norway, Poland, Portugal, Romania, Russia,
Slovakia, Slovenia, Spain, Sweden, Switzerland, Turkey, Ukraine, United
Kingdom

a2243 9
Alberta, Manitoba, Nova Scotia, Ontario, Quebec, Mexico

=item United States

Alabama, California, Colorado, Delaware, District of Columbia, Florida,
Illinois, Indiana, Kentucky, Massachusetts, Michigan, New Jersey, New York,
North Carolina, Ohio, Oklahoma, Oregon, Pennsylvania, Tennessee, Texas,
Utah, Virginia, ashington, Wisconsin

a2245 2
Australia, New Zealand

a2247 4
Argentina, Brazil, Chile

=item RSYNC Mirrors

d2256 2
d2268 1
a2268 1
=head2 perlmodstyle - Perl module style guide
d2272 1
a2272 3
=item INTRODUCTION

=item QUICK CHECKLIST
d2276 1
a2276 1
=item Before you start
d2278 2
a2279 7
=item The API

=item Stability

=item Documentation

=item Release considerations
d2283 1
a2283 1
=item BEFORE YOU START WRITING A MODULE
d2285 1
a2285 1
=over 4
d2287 1
a2287 1
=item Has it been done before?
d2289 1
a2289 70
=item Do one thing and do it well

=item What's in a name?

=back

=item DESIGNING AND WRITING YOUR MODULE

=over 4

=item To OO or not to OO?

=item Designing your API

Write simple routines to do simple things, Separate functionality from
output, Provide sensible shortcuts and defaults, Naming conventions,
Parameter passing

=item Strictness and warnings

=item Backwards compatibility

=item Error handling and messages

=back

=item DOCUMENTING YOUR MODULE

=over 4

=item POD

=item README, INSTALL, release notes, changelogs

=back

=item RELEASE CONSIDERATIONS

=over 4

=item Version numbering

=item Pre-requisites

=item Testing

=item Packaging

=item Licensing

=back

=item COMMON PITFALLS

=over 4

=item Reinventing the wheel

=item Trying to do too much

=item Inappropriate documentation

=back

=item SEE ALSO

L<perlstyle>, L<perlnewmod>, L<perlpod>, L<podchecker>, Testing tools,
http://pause.perl.org/, Any good book on software engineering

=item AUTHOR
d2328 2
a2329 2
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.8 $, $Date:
2002/04/07 18:46:13 $)
d2367 1
a2367 1
5/5.6.1/Perl instead of some other language?
d2375 2
a2376 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.13 $,
$Date: 2002/04/26 16:56:35 $)
d2423 1
a2423 1
=item What is perl.com? Perl Mongers? pm.org? perl.org? cpan.org?
d2431 2
a2432 2
=head2 perlfaq3 - Programming Tools ($Revision: 1.22 $, $Date: 2002/05/06
13:11:13 $)
d2458 2
a2459 2
Komodo, The Object System, Open Perl IDE, PerlBuilder, visiPerl+, OptiPerl,
CodeMagicCD, GNU Emacs, MicroEMACS, XEmacs, Elvis, Vile, Vim, Codewright,
d2472 2
a2477 3
Don't slurp!, Use map and grep selectively, Avoid unnecessary quotes and
stringification, Pass by reference, Tie large variables to disk

d2505 2
a2506 1
=item When I tried to run my script, I got this message. What does it mean?
d2516 2
a2517 2
=head2 perlfaq4 - Data Manipulation ($Revision: 1.25 $, $Date: 2002/05/30
07:04:25 $)
d2535 1
a2535 6
=item How do I convert between numeric representations?

How do I convert hexadecimal into decimal, How do I convert from decimal to
hexadecimal, How do I convert from octal to decimal, How do I convert from
decimal to octal, How do I convert from binary to decimal, How do I convert
from decimal to binary
a2546 2
=item How do I get a random number between X and Y?

d2633 1
a2633 2
=item How can I tell whether a certain element is contained in a list or
array?
d2725 2
a2726 2
=head2 perlfaq5 - Files and Formats ($Revision: 1.18 $, $Date: 2002/05/30
07:04:25 $)
a2774 3
=item All I want to do is append a small amount of text to the end of a
file.  Do I still have to use locking?

d2797 1
a2797 1
=item Why can't I use "C:\temp\foo" in DOS paths?  Why doesn't
d2815 1
a2815 2
=head2 perlfaq6 - Regular Expressions ($Revision: 1.12 $, $Date: 2002/06/01
22:31:09 $)
d2881 2
a2882 2
=head2 perlfaq7 - General Perl Language Issues ($Revision: 1.8 $, $Date:
2002/03/26 15:48:32 $)
d2960 2
a2961 2
=head2 perlfaq8 - System Interaction ($Revision: 1.8 $, $Date: 2002/05/16
12:41:42 $)
d3088 1
a3088 1
=head2 perlfaq9 - Networking ($Revision: 1.9 $, $Date: 2002/04/07 18:46:13
a3096 2
=item What is the correct form of response from a CGI script?

d3188 4
a3193 6
=item Module List for the Compiler Suite

B, O, B::Asmdata, B::Assembler, B::Bblock, B::Bytecode, B::C, B::CC,
B::Concise, B::Debug, B::Deparse, B::Disassembler, B::Lint, B::Showlex,
B::Stackobj, B::Stash, B::Terse, B::Xref

a3228 2
=item Execution of END blocks

d3377 1
a3377 1
=item EXAMPLE 9 Passing open files to XSes
a3440 2
=item The C<length(NAME)> Keyword

d3453 1
a3453 1
=item The POSTCALL: Keyword
a3464 2
=item The OVERLOAD: Keyword

a3484 4
=item Safely Storing Static Data in XS

MY_CXT_KEY, typedef my_cxt_t, START_MY_CXT, MY_CXT_INIT, dMY_CXT, MY_CXT

a3558 2
GV_ADDMULTI, GV_ADDWARN

a3625 2
=item Pluggable runops

a3677 2
=item Custom Operators

a3788 4
=item Administration

L<libnetcfg|libnetcfg>

a3864 6
=item "Gimme" Values

GIMME, GIMME_V, G_ARRAY, G_DISCARD, G_EVAL, G_NOARGS, G_SCALAR, G_VOID

=item Array Manipulation Functions

d3867 48
a3914 1
get_av, newAV, Nullav, sortsv
d3916 1
a3916 1
=item Callback Functions
d3918 1
a3918 2
call_argv, call_method, call_pv, call_sv, ENTER, eval_pv, eval_sv,
FREETMPS, LEAVE, SAVETMPS
d3920 1
a3920 1
=item Character classes
d3922 2
a3923 1
isALNUM, isALPHA, isDIGIT, isLOWER, isSPACE, isUPPER, toLOWER, toUPPER
d3925 1
a3925 1
=item Cloning an interpreter
d3927 1
a3927 1
perl_clone
d3929 2
a3930 1
=item CV Manipulation Functions
d3932 1
a3932 1
CvSTASH, get_cv, Nullcv
d3934 1
a3934 1
=item Embedding Functions
d3936 1
a3936 2
load_module, nothreadhook, perl_alloc, perl_construct, perl_destruct,
perl_free, perl_parse, perl_run, require_pv
d3938 1
a3938 1
=item Functions in file pp_pack.c
d3940 1
a3940 1
pack_cat, unpack_str
d3942 1
a3942 1
=item Global Variables
d3944 1
a3944 1
PL_modglobal, PL_na, PL_sv_no, PL_sv_undef, PL_sv_yes
d3946 10
a3955 1
=item GV Functions
d3957 1
a3957 2
GvSV, gv_fetchmeth, gv_fetchmethod, gv_fetchmethod_autoload,
gv_fetchmeth_autoload, gv_stashpv, gv_stashsv
d3959 1
a3959 1
=item Handy Values
d3961 6
a3966 82
HEf_SVKEY, Nullch, Nullsv

=item Hash Manipulation Functions

get_hv, HeHASH, HeKEY, HeKLEN, HePV, HeSVKEY, HeSVKEY_force, HeSVKEY_set,
HeVAL, HvNAME, hv_clear, hv_delete, hv_delete_ent, hv_exists,
hv_exists_ent, hv_fetch, hv_fetch_ent, hv_iterinit, hv_iterkey,
hv_iterkeysv, hv_iternext, hv_iternextsv, hv_iternext_flags, hv_iterval,
hv_magic, hv_store, hv_store_ent, hv_undef, newHV, Nullhv

=item Magical Functions

mg_clear, mg_copy, mg_find, mg_free, mg_get, mg_length, mg_magical, mg_set,
SvGETMAGIC, SvLOCK, SvSETMAGIC, SvSetMagicSV, SvSetMagicSV_nosteal,
SvSetSV, SvSetSV_nosteal, SvSHARE

=item Memory Management

Copy, Move, New, Newc, NEWSV, Newz, Poison, Renew, Renewc, Safefree,
savepv, savepvn, savesharedpv, StructCopy, Zero

=item Miscellaneous Functions

fbm_compile, fbm_instr, form, getcwd_sv, strEQ, strGE, strGT, strLE, strLT,
strNE, strnEQ, strnNE

=item Numeric functions

grok_bin, grok_hex, grok_number, grok_numeric_radix, grok_oct, scan_bin,
scan_hex, scan_oct

=item Optree Manipulation Functions

cv_const_sv, newCONSTSUB, newXS

=item Stack Manipulation Macros

dMARK, dORIGMARK, dSP, EXTEND, MARK, ORIGMARK, POPi, POPl, POPn, POPp,
POPpbytex, POPpx, POPs, PUSHi, PUSHMARK, PUSHn, PUSHp, PUSHs, PUSHu,
PUTBACK, SP, SPAGAIN, XPUSHi, XPUSHn, XPUSHp, XPUSHs, XPUSHu, XSRETURN,
XSRETURN_IV, XSRETURN_NO, XSRETURN_NV, XSRETURN_PV, XSRETURN_UNDEF,
XSRETURN_YES, XST_mIV, XST_mNO, XST_mNV, XST_mPV, XST_mUNDEF, XST_mYES

=item SV Flags

svtype, SVt_IV, SVt_NV, SVt_PV, SVt_PVAV, SVt_PVCV, SVt_PVHV, SVt_PVMG

=item SV Manipulation Functions

get_sv, looks_like_number, newRV_inc, newRV_noinc, newSV, newSViv, newSVnv,
newSVpv, newSVpvf, newSVpvn, newSVpvn_share, newSVrv, newSVsv, newSVuv,
new_vstring, SvCUR, SvCUR_set, SvEND, SvGROW, SvIOK, SvIOKp, SvIOK_notUV,
SvIOK_off, SvIOK_on, SvIOK_only, SvIOK_only_UV, SvIOK_UV, SvIV, SvIVx,
SvIVX, SvLEN, SvNIOK, SvNIOKp, SvNIOK_off, SvNOK, SvNOKp, SvNOK_off,
SvNOK_on, SvNOK_only, SvNV, SvNVX, SvNVx, SvOK, SvOOK, SvPOK, SvPOKp,
SvPOK_off, SvPOK_on, SvPOK_only, SvPOK_only_UTF8, SvPV, SvPVbyte,
SvPVbytex, SvPVbytex_force, SvPVbyte_force, SvPVbyte_nolen, SvPVutf8,
SvPVutf8x, SvPVutf8x_force, SvPVutf8_force, SvPVutf8_nolen, SvPVx, SvPVX,
SvPV_force, SvPV_force_nomg, SvPV_nolen, SvREFCNT, SvREFCNT_dec,
SvREFCNT_inc, SvROK, SvROK_off, SvROK_on, SvRV, SvSTASH, SvTAINT,
SvTAINTED, SvTAINTED_off, SvTAINTED_on, SvTRUE, SvTYPE, SvUNLOCK, SvUOK,
SvUPGRADE, SvUTF8, SvUTF8_off, SvUTF8_on, SvUV, SvUVX, SvUVx, sv_2bool,
sv_2cv, sv_2io, sv_2iv, sv_2mortal, sv_2nv, sv_2pvbyte, sv_2pvbyte_nolen,
sv_2pvutf8, sv_2pvutf8_nolen, sv_2pv_flags, sv_2pv_nolen, sv_2uv,
sv_backoff, sv_bless, sv_catpv, sv_catpvf, sv_catpvf_mg, sv_catpvn,
sv_catpvn_flags, sv_catpvn_mg, sv_catpv_mg, sv_catsv, sv_catsv_flags,
sv_catsv_mg, sv_chop, sv_clear, sv_cmp, sv_cmp_locale, sv_collxfrm,
sv_copypv, sv_dec, sv_derived_from, sv_eq, sv_force_normal,
sv_force_normal_flags, sv_free, sv_gets, sv_grow, sv_inc, sv_insert,
sv_isa, sv_isobject, sv_iv, sv_len, sv_len_utf8, sv_magic, sv_magicext,
sv_mortalcopy, sv_newmortal, sv_newref, sv_nolocking, sv_nosharing,
sv_nounlocking, sv_nv, sv_pos_b2u, sv_pos_u2b, sv_pv, sv_pvbyte,
sv_pvbyten, sv_pvbyten_force, sv_pvn, sv_pvn_force, sv_pvn_force_flags,
sv_pvutf8, sv_pvutf8n, sv_pvutf8n_force, sv_reftype, sv_replace,
sv_report_used, sv_reset, sv_rvweaken, sv_setiv, sv_setiv_mg, sv_setnv,
sv_setnv_mg, sv_setpv, sv_setpvf, sv_setpvf_mg, sv_setpvn, sv_setpvn_mg,
sv_setpv_mg, sv_setref_iv, sv_setref_nv, sv_setref_pv, sv_setref_pvn,
sv_setref_uv, sv_setsv, sv_setsv_flags, sv_setsv_mg, sv_setuv, sv_setuv_mg,
sv_taint, sv_tainted, sv_true, sv_unmagic, sv_unref, sv_unref_flags,
sv_untaint, sv_upgrade, sv_usepvn, sv_usepvn_mg, sv_utf8_decode,
sv_utf8_downgrade, sv_utf8_encode, sv_utf8_upgrade, sv_utf8_upgrade_flags,
sv_uv, sv_vcatpvfn, sv_vsetpvfn
d3968 1
a3968 20
=item Unicode Support

bytes_from_utf8, bytes_to_utf8, ibcmp_utf8, is_utf8_char, is_utf8_string,
pv_uni_display, sv_recode_to_utf8, sv_uni_display, to_utf8_case,
to_utf8_fold, to_utf8_lower, to_utf8_title, to_utf8_upper, utf8n_to_uvchr,
utf8n_to_uvuni, utf8_distance, utf8_hop, utf8_length, utf8_to_bytes,
utf8_to_uvchr, utf8_to_uvuni, uvchr_to_utf8, uvuni_to_utf8_flags

=item Variables created by C<xsubpp> and C<xsubpp> internal functions

ax, CLASS, dAX, dITEMS, dXSARGS, dXSI32, items, ix, newXSproto, RETVAL, ST,
THIS, XS, XSRETURN_EMPTY, XS_VERSION, XS_VERSION_BOOTCHECK

=item Warning and Dieing

croak, warn

=item AUTHORS

=item SEE ALSO
d3972 1
a3972 2
=head2 perlintern - autogenerated documentation of purely B<internal>
		 Perl functions
d3978 1
a3978 1
=item Global Variables
d3980 1
a3980 2
PL_DBsingle, PL_DBsub, PL_DBtrace, PL_dowarn, PL_last_in_gv, PL_ofs_sv,
PL_rs
d3982 1
a3982 1
=item GV Functions
d3984 1
a3984 1
is_gv_magical
d3986 1
a3986 1
=item IO Functions
d3988 2
a3989 1
start_glob
d3991 1
a3991 1
=item Pad Data Structures
d3993 1
a3993 1
CvPADLIST
d3995 1
a3995 1
=item Stack Manipulation Macros
d3997 1
a3997 9
djSP, LVRET

=item SV Manipulation Functions

report_uninit, sv_add_arena, sv_clean_all, sv_clean_objs, sv_free_arenas

=item AUTHORS

=item SEE ALSO
d4001 1
a4001 1
=head2 perliol - C API for Perl's implementation of IO in Layers.
d4005 1
a4005 1
=item SYNOPSIS
d4007 1
a4007 1
=item DESCRIPTION
d4009 1
a4009 1
=over 4
d4011 1
a4011 1
=item History and Background
d4013 1
a4013 1
=item Layers vs Disciplines
d4015 1
a4015 1
=item Data Structures
d4017 1
a4017 1
=item Functions and Attributes
d4019 1
a4019 1
=item Per-instance Data
d4021 1
a4021 1
=item Layers in action.
d4023 2
a4024 1
=item Per-instance flag bits
d4026 1
a4026 4
PERLIO_F_EOF, PERLIO_F_CANWRITE,  PERLIO_F_CANREAD, PERLIO_F_ERROR,
PERLIO_F_TRUNCATE, PERLIO_F_APPEND, PERLIO_F_CRLF, PERLIO_F_UTF8,
PERLIO_F_UNBUF, PERLIO_F_WRBUF, PERLIO_F_RDBUF, PERLIO_F_LINEBUF,
PERLIO_F_TEMP, PERLIO_F_OPEN, PERLIO_F_FASTGETS
d4028 1
a4028 1
=item Methods in Detail
d4030 1
a4030 5
fsize, name, size, kind, PERLIO_K_BUFFERED, PERLIO_K_RAW, PERLIO_K_CANCRLF,
PERLIO_K_FASTGETS, PERLIO_K_MULTIARG, Pushed, Popped, Open, Binmode,
Getarg, Fileno, Dup, Read, Write, Seek, Tell, Close, Flush, Fill, Eof,
Error,	Clearerr, Setlinebuf, Get_base, Get_bufsiz, Get_ptr, Get_cnt,
Set_ptrcnt
d4032 1
a4032 1
=item Core Layers
d4034 1
a4034 1
"unix", "perlio", "stdio", "crlf", "mmap", "pending", "raw", "utf8"
d4036 1
a4036 1
=item Extension Layers
d4038 1
a4038 1
":encoding", ":scalar", ":via"
d4042 1
a4042 1
=item TODO
d4044 1
a4044 1
=back
d4046 1
a4046 1
=head2 perlapio - perl's IO abstraction interface.
d4048 1
a4048 1
=over 4
d4050 1
a4050 1
=item SYNOPSIS
d4052 1
a4052 1
=item DESCRIPTION
d4054 1
a4054 11
1. USE_STDIO, 2. USE_SFIO, 3. USE_PERLIO, B<PerlIO_stdin()>,
B<PerlIO_stdout()>, B<PerlIO_stderr()>, B<PerlIO_open(path, mode)>,
B<PerlIO_fdopen(fd,mode)>, B<PerlIO_reopen(path,mode,f)>,
B<PerlIO_printf(f,fmt,...)>, B<PerlIO_vprintf(f,fmt,a)>,
B<PerlIO_stdoutf(fmt,...)>, B<PerlIO_read(f,buf,count)>,
B<PerlIO_write(f,buf,count)>, B<PerlIO_close(f)>, B<PerlIO_puts(f,s)>,
B<PerlIO_putc(f,c)>, B<PerlIO_ungetc(f,c)>, B<PerlIO_getc(f)>,
B<PerlIO_eof(f)>, B<PerlIO_error(f)>, B<PerlIO_fileno(f)>,
B<PerlIO_clearerr(f)>, B<PerlIO_flush(f)>, B<PerlIO_seek(f,offset,whence)>,
B<PerlIO_tell(f)>, B<PerlIO_getpos(f,p)>, B<PerlIO_setpos(f,p)>,
B<PerlIO_rewind(f)>, B<PerlIO_tmpfile()>, B<PerlIO_setlinebuf(f)>
d4056 1
a4056 1
=over 4
d4058 1
a4058 1
=item Co-existence with stdio
d4060 1
a4060 2
B<PerlIO_importFILE(f,mode)>, B<PerlIO_exportFILE(f,mode)>,
B<PerlIO_releaseFILE(p,f)>, B<PerlIO_findFILE(f)>
d4062 1
a4062 1
=item "Fast gets" Functions
d4064 1
a4064 4
B<PerlIO_fast_gets(f)>, B<PerlIO_has_cntptr(f)>, B<PerlIO_get_cnt(f)>,
B<PerlIO_get_ptr(f)>, B<PerlIO_set_ptrcnt(f,p,c)>, B<PerlIO_canset_cnt(f)>,
B<PerlIO_set_cnt(f,c)>, B<PerlIO_has_base(f)>, B<PerlIO_get_base(f)>,
B<PerlIO_get_bufsiz(f)>
d4066 1
a4066 1
=item Other Functions
d4068 1
a4068 2
PerlIO_apply_layers(f,mode,layers), PerlIO_binmode(f,ptype,imode,layers),
'E<lt>' read, 'E<gt>' write, '+' read/write, PerlIO_debug(fmt,...)
d4070 1
a4070 1
=back
d4074 1
a4074 1
=head2 perltodo - Perl TO-DO List
d4078 1
a4078 1
=item DESCRIPTION
d4080 1
a4080 1
=item To do during 5.6.x
d4082 1
a4082 1
=over 4
d4084 1
a4084 1
=item Support for I/O disciplines
d4086 1
a4086 1
=item Autoload bytes.pm
d4088 1
a4088 1
=item Make "\u{XXXX}" et al work
d4090 1
a4090 1
=item Create a char *sv_pvprintify(sv, STRLEN *lenp, UV flags)
d4092 1
a4092 1
=item Overloadable regex assertions
d4094 1
a4094 1
=item Unicode
d4096 1
a4096 1
=item Work out exit/die semantics for threads
d4098 1
a4098 1
=item Better support for nonpreemptive threading systems like GNU pth
d4100 1
a4100 1
=item Typed lexicals for compiler
d4102 1
a4102 1
=item Compiler workarounds for Win32
d4104 1
a4104 1
=item AUTOLOADing in the compiler
d4106 1
a4106 1
=item Fixing comppadlist when compiling
d4108 1
a4108 1
=item Cleaning up exported namespace
d4110 1
a4110 1
=item Complete signal handling
d4112 1
a4112 1
=item Out-of-source builds
d4114 1
a4114 1
=item POSIX realtime support
d4116 1
a4116 1
=item UNIX98 support
d4118 1
a4118 1
=item IPv6 Support
d4120 1
a4120 1
=item Long double conversion
d4122 1
a4122 1
=item Locales
d4124 1
a4124 1
=item Arithmetic on non-Arabic numerals
d4126 1
a4126 1
=item POSIX Unicode character classes
d4128 1
a4128 1
=item Factoring out common suffices/prefices in regexps (trie optimization)
d4130 1
a4130 1
=item Security audit shipped utilities
d4132 1
a4132 1
=item Sort out the uid-setting mess
d4134 1
a4134 1
=item Custom opcodes
d4136 1
a4136 1
=item DLL Versioning
d4138 1
a4138 1
=item Introduce @@( and @@)
d4140 1
a4140 1
=item Floating point handling
d4142 1
a4142 1
=item IV/UV preservation
d4144 1
a4144 1
=item Replace pod2html with something using Pod::Parser
d4146 1
a4146 1
=item Automate module testing on CPAN
d4148 1
a4148 1
=item sendmsg and recvmsg
d4150 5
a4154 1
=item Rewrite perlre documentation
d4156 1
a4156 1
=item Convert example code to IO::Handle filehandles
d4158 1
a4158 3
=item Document Win32 choices

=item Check new modules
d4160 1
a4160 1
=item Make roffitall find pods and libs itself
d4164 1
a4164 1
=item To do at some point
d4168 1
a4168 17
=item Remove regular expression recursion

=item Memory leaks after failed eval

=item bitfields in pack

=item Cross compilation

=item Perl preprocessor / macros

=item Perl lexer in Perl

=item Using POSIX calls internally

=item -i rename file when changed

=item All ARGV input should act like E<lt>E<gt>
d4170 1
a4170 21
=item Support for rerunning debugger

=item Test Suite for the Debugger

=item my sub foo { }

=item One-pass global destruction

=item Rewrite regexp parser

=item Cache recently used regexps

=item Cross-compilation support

=item Bit-shifting bitvectors

=item debugger pragma

=item use less pragma

=item switch structures
d4178 1
a4178 1
=item Optimize away @@_
d4180 1
a4180 1
=item Prototypes versus indirect objects
d4182 1
a4182 1
=item Install HTML
d4184 1
a4184 1
=item Prototype method calls
d4186 1
a4186 1
=item Return context prototype declarations
d4188 1
a4188 1
=item magic_setisa
d4190 3
a4192 1
=item Garbage collection
d4194 1
a4194 1
=item IO tutorial
d4196 1
a4196 19
=item Rewrite perldoc

=item Install .3p manpages

=item Unicode tutorial

=item Update POSIX.pm for 1003.1-2

=item Retargetable installation

=item POSIX emulation on non-POSIX systems

=item Rename Win32 headers

=item Finish off lvalue functions

=item Update sprintf documentation

=item Use fchown/fchmod internally
d4198 1
a4198 1
=item Make v-strings overloaded objects
d4200 1
a4200 1
=item Allow restricted hash assignment
d4202 1
a4202 1
=item Should overload be inheritable?
d4204 1
a4204 1
=item Taint rethink
d4208 1
a4208 1
=item Vague ideas
d4212 1
a4212 1
=item ref() in list context
d4214 1
a4214 11
=item Make tr/// return histogram of characters in list context

=item Compile to real threaded code

=item Structured types

=item Modifiable $1 et al.

=item Procedural interfaces for IO::*, etc.

=item RPC modules
d4216 1
a4216 1
=item Attach/detach debugger from running program
d4218 1
a4218 15
=item GUI::Native

=item foreach(reverse ...)

=item Constant function cache

=item Approximate regular expression matching

=back

=item Ongoing

=over 4

=item Update guts documentation
d4220 1
a4220 1
=item Add more tests
d4222 1
a4222 1
=item Update auxiliary tools
d4224 1
a4224 1
=item Create debugging macros
d4226 1
a4226 3
=item truncate to the people

=item Unicode in Filenames
d4230 1
a4230 1
=item Recently done things
d4234 1
a4234 1
=item Alternative RE syntax module
d4236 1
a4236 1
=item Safe signal handling
d4238 1
a4238 1
=item Tie Modules
d4240 1
a4240 1
=item gettimeofday
d4242 1
a4242 1
=item setitimer and getimiter
d4244 1
a4244 1
=item Testing __DIE__ hook
d4246 1
a4246 1
=item CPP equivalent in Perl
d4248 1
a4248 1
=item Explicit switch statements
d4250 1
a4250 1
=item autocroak
d4252 1
a4252 45
=item UTF/EBCDIC

=item UTF Regexes

=item perlcc to produce executable

=item END blocks saved in compiled output

=item Secure temporary file module

=item Integrate Time::HiRes

=item Turn Cwd into XS

=item Mmap for input

=item Byte to/from UTF8 and UTF8 to/from local conversion

=item Add sockatmark support

=item Mailing list archives

=item Bug tracking

=item Integrate MacPerl

=item Web "nerve center" for Perl

=item Regular expression tutorial

=item Debugging Tutorial

=item Integrate new modules

=item Integrate profiler

=item Y2K error detection

=item Regular expression debugger

=item POD checker

=item "Dynamic" lexicals

=item Cache precompiled modules
d4256 1
a4256 1
=item Deprecated Wishes
d4260 1
a4260 1
=item Loop control on do{}
d4262 1
a4262 1
=item Lexically scoped typeglobs
d4264 1
a4264 1
=item format BOTTOM
d4266 1
a4266 1
=item report HANDLE
d4268 1
a4268 1
=item Generalised want()/caller())
d4270 1
a4270 15
=item Named prototypes

=item Built-in globbing

=item Regression tests for suidperl

=item Cached hash values

=item Add compression modules

=item Reorganise documentation into tutorials/references

=item Remove distinction between functions and operators

=item Make XS easier to use
d4272 1
a4272 19
=item Make embedding easier to use

=item man for perl

=item my $Package::variable

=item "or" tests defined, not truth

=item "class"-based lexicals

=item byteperl

=item Lazy evaluation / tail recursion removal

=item Make "use utf8" the default

=item Unicode collation and normalization

=item pack/unpack tutorial
d4288 3
a4290 3
the implementation generic enough to be portable?, Is the implementation
tested?, Is there enough documentation?, Is there another way to do it?,
Does it create too much work?, Patches speak louder than words
d4301 1
a4301 1
It's easier to rsync the source tree, It's more reliable
d4305 2
a4306 7
It's easier to rsync the patches, It's a good reference, Finding a start
point, Finding how to fix a bug, Finding the source of misbehaviour

=item Perlbug remote interface

1 http://bugs.perl.org, 2 bugdb@@perl.org, 3
commands_and_bugdids@@bugs.perl.org, notes, patches, tests
d4315 1
a4315 1
Core modules, Tests, Documentation, Configure, Interpreter
a4341 14
=item Patching a core module

=item Adding a new function to the core

=item Writing a test

F<t/base/>, F<t/cmd/>, F<t/comp/>, F<t/io/>, F<t/lib/>, F<t/op/>,
F<t/pod/>, F<t/run/>, t/base t/comp, t/cmd t/run t/io t/op, t/lib ext lib

=item Special Make Test Targets

coretest, test.deparse, minitest, test.third check.third utest.third
ucheck.third, test.torture torturetest, utest ucheck test.utf8 check.utf8

a4357 19
=item Compaq's/Digital's/HP's Third Degree

=item PERL_DESTRUCT_LEVEL

=item Profiling

=item Gprof Profiling

-a, -b, -e routine, -f routine, -s, -z

=item GCC gcov Profiling

=item Pixie Profiling

-h, -l, -p[rocedures], -h[eavy], -i[nvocations], -l[ines], -testcoverage,
-z[ero]

=item Miscellaneous tricks

d4398 1
a4398 1
=head2 perldelta - what is new for perl v5.8.0
d4404 5
a4408 1
=item Highlights In 5.8.0
d4410 1
a4410 1
=item Incompatible Changes
d4412 7
a4418 1
=over 4
d4420 1
a4420 1
=item Binary Incompatibility
d4422 1
a4422 1
=item 64-bit platforms and malloc
d4424 1
a4424 1
=item AIX Dynaloading
d4426 1
a4426 1
=item Attributes for C<my> variables now handled at run-time
d4428 4
a4431 1
=item Socket Extension Dynamic in VMS
d4433 1
a4433 1
=item IEEE-format Floating Point Default on OpenVMS Alpha
d4435 1
a4435 1
=item New Unicode Semantics (no more C<use utf8>, almost)
d4437 1
a4437 1
=item New Unicode Properties
d4439 1
a4439 1
=item REF(...) Instead Of SCALAR(...)
d4441 1
a4441 1
=item pack/unpack D/F recycled
d4443 1
a4443 1
=item glob() now returns filenames in alphabetical order
d4445 1
a4445 1
=item Deprecations
d4447 1
a4447 1
=back
d4449 1
a4449 1
=item Core Enhancements
d4451 1
a4451 1
=over 4
d4453 1
a4453 1
=item Unicode Overhaul
d4455 1
a4455 1
=item PerlIO is Now The Default
d4457 1
a4457 1
=item ithreads
d4459 1
a4459 1
=item Restricted Hashes
d4461 1
a4461 1
=item Safe Signals
d4463 1
a4463 1
=item Understanding of Numbers
d4465 1
a4465 1
=item Arrays now always interpolate into double-quoted strings [561]
d4467 1
a4467 1
=item Miscellaneous Changes
d4469 1
a4469 1
=back
d4471 1
a4471 1
=item Modules and Pragmata
d4473 1
a4473 1
=over 4
d4475 1
a4475 1
=item New Modules and Pragmata
d4477 1
a4477 1
=item Updated And Improved Modules and Pragmata
d4479 1
a4479 1
=back
d4481 1
a4481 1
=item Utility Changes
d4483 1
a4483 1
=item New Documentation
d4485 1
a4485 1
=item Performance Enhancements
d4487 1
a4487 1
=item Installation and Configuration Improvements
d4489 1
a4489 1
=over 4
d4491 1
a4491 1
=item Generic Improvements
d4493 1
a4493 1
=item New Or Improved Platforms
d4495 1
a4495 1
=back
d4497 1
a4497 1
=item Selected Bug Fixes
d4499 1
a4499 1
=over 4
d4501 1
a4501 1
=item Platform Specific Changes and Fixes
d4503 1
a4503 1
=back
d4505 1
a4505 1
=item New or Changed Diagnostics
d4507 1
a4507 1
=item Changed Internals
d4509 1
a4509 1
=item Security Vulnerability Closed [561]
d4511 1
a4511 1
=item New Tests
d4513 1
a4513 1
=item Known Problems
d4515 1
a4515 1
=over 4
d4517 1
a4517 1
=item The Compiler Suite Is Still Very Experimental
d4519 1
a4519 1
=item Localising Tied Arrays and Hashes Is Broken
d4521 1
a4521 1
=item Building Extensions Can Fail Because Of Largefiles
d4523 1
a4523 1
=item Modifying $_ Inside for(..)
d4525 1
a4525 1
=item mod_perl 1.26 Doesn't Build With Threaded Perl
d4527 1
a4527 1
=item lib/ftmp-security tests warn 'system possibly insecure'
d4529 1
a4529 1
=item libwww-perl (LWP) fails base/date #51
d4531 1
a4531 1
=item PDL failing some tests
d4533 1
a4533 1
=item Perl_get_sv
d4535 1
a4535 1
=item Self-tying Problems
d4537 1
a4537 1
=item ext/threads/t/libc
d4539 1
a4539 1
=item Failure of Thread (5.005-style) tests
d4541 1
a4541 1
=item Timing problems
d4543 1
a4543 1
=item Tied/Magical Array/Hash Elements Do Not Autovivify
d4545 1
a4545 1
=item Unicode in package/class and subroutine names does not work
d4549 1
a4549 1
=item Platform Specific Problems
d4553 1
a4553 1
=item AIX
d4555 8
a4562 1
=item Alpha systems with old gccs fail several tests
d4564 1
a4564 1
=item AmigaOS
d4566 1
a4566 1
=item BeOS
d4568 1
a4568 1
=item Cygwin "unable to remap"
d4570 1
a4570 1
=item Cygwin ndbm tests fail on FAT
d4572 1
a4572 1
=item DJGPP Failures
d4574 1
a4574 1
=item FreeBSD built with ithreads coredumps reading large directories
d4576 1
a4576 1
=item FreeBSD Failing locale Test 117 For ISO 8859-15 Locales
d4578 1
a4578 1
=item IRIX fails ext/List/Util/t/shuffle.t or Digest::MD5
d4580 1
a4580 1
=item HP-UX lib/posix Subtest 9 Fails When LP64-Configured
d4582 1
a4582 1
=item Linux with glibc 2.2.5 fails t/op/int subtest #6 with -Duse64bitint
d4584 1
a4584 1
=item Linux With Sfio Fails op/misc Test 48
d4586 1
a4586 1
=item Mac OS X
d4588 4
a4591 1
=item Mac OS X dyld undefined symbols
d4593 1
a4593 1
=item OS/2 Test Failures
d4595 1
a4595 1
=item op/sprintf tests 91, 129, and 130
d4597 1
a4597 1
=item Solaris 2.5
d4599 1
a4599 1
=item Solaris x86 Fails Tests With -Duse64bitint
d4601 1
a4601 1
=item SUPER-UX (NEC SX)
d4603 1
a4603 1
=item Term::ReadKey not working on Win32
d4605 1
a4605 1
=item UNICOS/mk
d4607 1
a4607 1
=item UTS
d4609 1
a4609 1
=item VOS (Stratus)
d4611 1
a4611 1
=item VMS
d4613 1
a4613 1
=item Win32
d4615 1
a4615 1
=item XML::Parser not working
d4617 3
a4619 1
=item z/OS (OS/390)
d4621 1
a4621 1
=item Unicode Support on EBCDIC Still Spotty
d4623 1
a4623 1
=item Seen In Perl 5.7 But Gone Now
d4625 1
a4625 1
=back
d4627 1
a4627 1
=item Reporting Bugs
d4629 1
a4629 1
=item SEE ALSO
d4631 1
a4631 1
=item HISTORY
d4635 1
a4635 1
=head2 perl572delta - what's new for perl v5.7.2
d4639 1
a4639 1
=item DESCRIPTION
d4641 1
a4641 1
=item Security Vulnerability Closed
d4643 1
a4643 1
=item Incompatible Changes
d4645 1
a4645 1
=over 4
d4647 1
a4647 1
=item 64-bit platforms and malloc
d4649 1
a4649 1
=item AIX Dynaloading
d4651 1
a4651 1
=item Socket Extension Dynamic in VMS
d4653 1
a4653 1
=item Different Definition of the Unicode Character Classes \p{In...}
d4655 1
a4655 1
=item Deprecations
d4657 1
a4657 1
=back
d4659 1
a4659 1
=item Core Enhancements
d4661 1
a4661 1
=item Modules and Pragmata
d4663 1
a4663 1
=over 4
d4665 1
a4665 1
=item New Modules and Distributions
d4667 1
a4667 1
=item Updated And Improved Modules and Pragmata
d4669 1
a4669 1
=back
d4671 1
a4671 1
=item Utility Changes
d4673 1
a4673 1
=item New Documentation
d4675 1
a4675 1
=item Installation and Configuration Improvements
d4677 1
a4677 1
=over 4
d4679 1
a4679 1
=item New Or Improved Platforms
d4681 1
a4681 1
=item Generic Improvements
d4683 1
a4683 7
=back

=item Selected Bug Fixes

=over 4

=item Platform Specific Changes and Fixes
d4689 50
a4738 1
=item Source Code Enhancements
d4740 1
a4740 1
=over 4
d4742 1
a4742 13
=item MAGIC constants

=item Better commented code

=item Regex pre-/post-compilation items matched up

=item gcc -Wall

=back

=item New Tests

=item Known Problems
d4746 1
a4746 1
=item AIX
d4748 11
a4758 1
=item Amiga Perl Invoking Mystery
d4760 1
a4760 1
=item lib/ftmp-security tests warn 'system possibly insecure'
d4762 1
a4762 1
=item Cygwin intermittent failures of lib/Memoize/t/expire_file 11 and 12
d4764 1
a4764 1
=item HP-UX lib/io_multihomed Fails When LP64-Configured
d4766 1
a4766 1
=item  HP-UX lib/posix Subtest 9 Fails When LP64-Configured
d4768 1
a4768 1
=item Linux With Sfio Fails op/misc Test 48
d4770 1
a4770 1
=item OS/390
d4772 1
a4772 1
=item op/sprintf tests 129 and 130
d4774 1
a4774 1
=item  Failure of Thread tests
d4776 1
a4776 1
=item UNICOS
d4778 1
a4778 1
=item UTS
d4780 2
a4781 1
=item VMS
d4783 1
a4783 1
=item Win32
d4785 1
a4785 1
=item Localising a Tied Variable Leaks Memory
d4787 1
a4787 1
=item Self-tying of Arrays and Hashes Is Forbidden
d4789 1
a4789 1
=item Variable Attributes are not Currently Usable for Tieing
d4791 3
a4793 1
=item Building Extensions Can Fail Because Of Largefiles
d4795 1
a4795 1
=item The Compiler Suite Is Still Experimental
d4797 1
a4797 1
=item The Long Double Support is Still Experimental
d4799 4
a4802 1
=back
d4812 1
a4812 1
=head2 perl571delta - what's new for perl v5.7.1
d4818 1
a4818 1
=item Security Vulnerability Closed
a4821 2
=item Core Enhancements

d4824 1
a4824 1
=item AUTOLOAD Is Now Lvaluable
d4826 1
a4826 1
=item PerlIO is Now The Default
d4828 1
a4828 1
=item Signals Are Now Safe
d4830 1
a4830 1
=back
d4832 1
a4832 1
=item Modules and Pragmata
d4834 1
a4834 1
=over 4
d4836 1
a4836 1
=item New Modules
d4838 1
a4838 1
=item Updated And Improved Modules and Pragmata
d4842 1
a4842 5
=item Performance Enhancements

=item Utility Changes

=item New Documentation
d4846 1
a4846 1
=item perlclib
d4848 1
a4848 1
=item perliol
d4850 1
a4850 1
=item README.aix
d4852 3
a4854 1
=item README.bs2000
d4856 1
a4856 1
=item README.macos
d4858 1
a4858 1
=item README.mpeix
d4860 1
a4860 1
=item README.solaris
d4862 1
a4862 1
=item README.vos
d4864 1
a4864 1
=item Porting/repository.pod
d4866 1
a4866 1
=back
d4868 1
a4868 1
=item Installation and Configuration Improvements
d4870 1
a4870 1
=over 4
d4872 1
a4872 1
=item New Or Improved Platforms
d4874 1
a4874 1
=item Generic Improvements
d4876 1
a4876 3
d_cmsghdr, d_fcntl_can_lock, d_fsync, d_getitimer, d_getpagsz, d_msghdr_s,
need_va_copy, d_readv, d_recvmsg, d_sendmsg, sig_size, d_sockatmark,
d_strtoq, d_u32align, d_ualarm, d_usleep
d4878 1
a4878 1
=back
d4880 1
a4880 1
=item Selected Bug Fixes
d4882 1
a4882 1
=over 4
d4884 1
a4884 1
=item Platform Specific Changes and Fixes
d4886 1
a4886 1
=back
d4888 1
a4888 1
=item New or Changed Diagnostics
d4890 1
a4890 1
=item Changed Internals
d4892 1
a4892 1
=item New Tests
d4894 1
a4894 1
=item Known Problems
d4896 1
a4896 1
=over 4
d4898 1
a4898 1
=item AIX vac 5.0.0.0 May Produce Buggy Code For Perl
d4900 1
a4900 1
=item lib/ftmp-security tests warn 'system possibly insecure'
d4902 1
a4902 1
=item lib/io_multihomed Fails In LP64-Configured HP-UX
d4904 1
a4904 1
=item Test lib/posix Subtest 9 Fails In LP64-Configured HP-UX
d4906 1
a4906 1
=item lib/b test 19
d4908 1
a4908 1
=item Linux With Sfio Fails op/misc Test 48
d4910 1
a4910 1
=item sigaction test 13 in VMS
d4912 1
a4912 1
=item sprintf tests 129 and 130
d4914 1
a4914 1
=item  Failure of Thread tests
d4916 1
a4916 1
=item Localising a Tied Variable Leaks Memory
d4918 1
a4918 5
=item Self-tying of Arrays and Hashes Is Forbidden

=item Building Extensions Can Fail Because Of Largefiles

=item The Compiler Suite Is Still Experimental
d4922 1
a4922 9
=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl570delta - what's new for perl v5.7.0
d4926 1
a4926 1
=item DESCRIPTION
d4928 1
a4928 1
=item Security Vulnerability Closed
d4930 1
a4930 3
=item Incompatible Changes

=item Core Enhancements
d4938 3
a4940 1
=item Updated And Improved Modules and Pragmata
d4942 1
a4942 1
=back
d4944 2
a4945 11
=item Utility Changes

=item New Documentation

=item Performance Enhancements

=item Installation and Configuration Improvements

=over 4

=item Generic Improvements
d4949 1
a4949 1
=item Selected Bug Fixes
d4951 1
a4951 1
=over 4
d4953 1
a4953 1
=item Platform Specific Changes and Fixes
d4955 17
a4971 1
=back
d4973 1
a4973 1
=item New or Changed Diagnostics
d4975 2
a4976 1
=item Changed Internals
d4978 1
a4978 1
=item Known Problems
d4980 1
a4980 25
=over 4

=item Unicode Support Still Far From Perfect

=item EBCDIC Still A Lost Platform

=item Building Extensions Can Fail Because Of Largefiles

=item ftmp-security tests warn 'system possibly insecure'

=item Test lib/posix Subtest 9 Fails In LP64-Configured HP-UX

=item Long Doubles Still Don't Work In Solaris

=item Linux With Sfio Fails op/misc Test 48

=item Storable tests fail in some platforms

=item Threads Are Still Experimental

=item The Compiler Suite Is Still Experimental

=back

=item Reporting Bugs
d4988 1
a4988 1
=head2 perl561delta - what's new for perl v5.6.x
d4994 1
a4994 1
=item Summary of changes between 5.6.0 and 5.6.1
d4996 1
a4996 34
=over 4

=item Security Issues

=item Core bug fixes

C<UNIVERSAL::isa()>, Memory leaks, Numeric conversions, qw(a\\b), caller(),
Bugs in regular expressions, "slurp" mode, Autovivification of symbolic
references to special variables, Lexical warnings, Spurious warnings and
errors, glob(), Tainting, sort(), #line directives, Subroutine prototypes,
map(), Debugger, PERL5OPT, chop(), Unicode support, 64-bit support,
Compiler, Lvalue subroutines, IO::Socket, File::Find, xsubpp, C<no
Module;>, Tests

=item Core features

=item Configuration issues

=item Documentation

=item Bundled modules

B::Concise, File::Temp, Pod::LaTeX, Pod::Text::Overstrike, CGI, CPAN,
Class::Struct, DB_File, Devel::Peek, File::Find, Getopt::Long, IO::Poll,
IPC::Open3, Math::BigFloat, Math::Complex, Net::Ping, Opcode, Pod::Parser,
Pod::Text, SDBM_File, Sys::Syslog, Tie::RefHash, Tie::SubstrHash

=item Platform-specific improvements

NCR MP-RAS, NonStop-UX

=back

=item Core Enhancements
d5000 1
a5000 1
=item Interpreter cloning, threads, and concurrency
d5002 1
a5002 1
=item Lexically scoped warning categories
d5004 1
a5004 1
=item Unicode and UTF-8 support
d5006 1
a5006 1
=item Support for interpolating named characters
d5008 1
a5008 1
=item "our" declarations
d5010 1
a5010 1
=item Support for strings represented as a vector of ordinals
d5012 1
a5012 1
=item Improved Perl version numbering system
d5014 1
a5014 1
=item New syntax for declaring subroutine attributes
d5016 1
a5016 1
=item File and directory handles can be autovivified
d5018 1
a5018 1
=item open() with more than two arguments
d5020 1
a5020 1
=item 64-bit support
d5022 1
a5022 1
=item Large file support
d5024 1
a5024 1
=item Long doubles
d5026 1
a5026 1
=item "more bits"
d5028 1
a5028 1
=item Enhanced support for sort() subroutines
d5030 1
a5030 1
=item C<sort $coderef @@foo> allowed
d5032 2
a5033 1
=item File globbing implemented internally
d5035 1
a5035 1
=item Support for CHECK blocks
d5037 1
a5037 1
=item POSIX character class syntax [: :] supported
d5039 1
a5039 1
=item Better pseudo-random number generator
d5041 1
a5041 1
=item Improved C<qw//> operator
d5043 1
a5043 1
=item Better worst-case behavior of hashes
d5045 1
a5045 1
=item pack() format 'Z' supported
d5047 1
a5047 1
=item pack() format modifier '!' supported
d5049 1
a5049 1
=item pack() and unpack() support counted strings
d5051 1
a5051 1
=item Comments in pack() templates
d5053 1
a5053 1
=item Weak references
d5055 1
a5055 1
=item Binary numbers supported
d5057 5
a5061 1
=item Lvalue subroutines
d5063 1
a5063 1
=item Some arrows may be omitted in calls through references
d5065 1
a5065 1
=item Boolean assignment operators are legal lvalues
d5067 1
a5067 1
=item exists() is supported on subroutine names
d5069 2
a5070 1
=item exists() and delete() are supported on array elements
d5072 1
a5072 1
=item Pseudo-hashes work better
d5074 1
a5074 1
=item Automatic flushing of output buffers
d5076 1
a5076 39
=item Better diagnostics on meaningless filehandle operations

=item Where possible, buffered data discarded from duped input filehandle

=item eof() has the same old magic as <>

=item binmode() can be used to set :crlf and :raw modes

=item C<-T> filetest recognizes UTF-8 encoded files as "text"

=item system(), backticks and pipe open now reflect exec() failure

=item Improved diagnostics

=item Diagnostics follow STDERR

=item More consistent close-on-exec behavior

=item syswrite() ease-of-use

=item Better syntax checks on parenthesized unary operators

=item Bit operators support full native integer width

=item Improved security features

=item More functional bareword prototype (*)

=item C<require> and C<do> may be overridden

=item $^X variables may now have names longer than one character

=item New variable $^C reflects C<-c> switch

=item New variable $^V contains Perl version as a string

=item Optional Y2K warnings

=item Arrays now always interpolate into double-quoted strings
d5080 1
a5080 1
=item Modules and Pragmata
d5084 1
a5084 1
=item Modules
d5086 1
a5086 8
attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters
d5088 1
a5088 1
=item Pragmata
d5090 1
a5090 38
=back

=item Utility Changes

=over 4

=item dprofpp

=item find2perl

=item h2xs

=item perlcc

=item perldoc

=item The Perl Debugger

=back

=item Improved Documentation

perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod

=item Performance enhancements

=over 4

=item Simple sort() using { $a <=> $b } and the like are optimized

=item Optimized assignments to lexical variables

=item Faster subroutine calls

=item delete(), each(), values() and hash iteration are faster
d5094 1
a5094 5046
=item Installation and Configuration Improvements

=over 4

=item -Dusethreads means something different

=item New Configure flags

=item Threadedness and 64-bitness now more daring

=item Long Doubles

=item -Dusemorebits

=item -Duselargefiles

=item installusrbinperl

=item SOCKS support

=item C<-A> flag

=item Enhanced Installation Directories

=item gcc automatically tried if 'cc' does not seem to be working

=back

=item Platform specific changes

=over 4

=item Supported platforms

=item DOS

=item OS390 (OpenEdition MVS)

=item VMS

=item Win32

=back

=item Significant bug fixes

=over 4

=item <HANDLE> on empty files

=item C<eval '...'> improvements

=item All compilation errors are true errors

=item Implicitly closed filehandles are safer

=item Behavior of list slices is more consistent

=item C<(\$)> prototype and C<$foo{a}>

=item C<goto &sub> and AUTOLOAD

=item C<-bareword> allowed under C<use integer>

=item Failures in DESTROY()

=item Locale bugs fixed

=item Memory leaks

=item Spurious subroutine stubs after failed subroutine calls

=item Taint failures under C<-U>

=item END blocks and the C<-c> switch

=item Potential to leak DATA filehandles

=back

=item New or Changed Diagnostics

"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible unintended interpolation of %s in string,
Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME : ATTRS"
instead, Premature end of script headers, Repeat count in pack overflows,
Repeat count in unpack overflows, realloc() of freed memory ignored,
Reference is already weak, setpgrp can't take arguments, Strange *+?{} on
zero-length expression, switching effective %s is not implemented, This
Perl can't reset CRTL environ elements (%s), This Perl can't set CRTL
environ elements (%s=%s), Too late to run %s block, Unknown open() mode
'%s', Unknown process %x sent message to prime_env_iter: %s, Unrecognized
escape \\%c passed through, Unterminated attribute parameter in attribute
list, Unterminated attribute list, Unterminated attribute parameter in
subroutine attribute list, Unterminated subroutine attribute list, Value of
CLI symbol "%s" too long, Version number must be a constant number

=item New tests

=item Incompatible Changes

=over 4

=item Perl Source Incompatibilities

CHECK is a new keyword, Treatment of list slices of undef has changed,
Format of $English::PERL_VERSION is different, Literals of the form
C<1.2.3> parse differently, Possibly changed pseudo-random number
generator, Hashing function for hash keys has changed, C<undef> fails on
read only values, Close-on-exec bit may be set on pipe and socket handles,
Writing C<"$$1"> to mean C<"${$}1"> is unsupported, delete(), each(),
values() and C<\(%h)>, vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
Text of some diagnostic output has changed, C<%@@> has been removed,
Parenthesized not() behaves like a list operator, Semantics of bareword
prototype C<(*)> have changed, Semantics of bit operators may have changed
on 64-bit platforms, More builtins taint their results

=item C Source Incompatibilities

C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>

=item Compatible C Source API Changes

C<PATCHLEVEL> is now C<PERL_VERSION>

=item Binary Incompatibilities

=back

=item Known Problems

=over 4

=item Localizing a tied hash element may leak memory

=item Known test failures

=item EBCDIC platforms not fully supported

=item UNICOS/mk CC failures during Configure run

=item Arrow operator and arrays

=item Experimental features

Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression code constructs:

=back

=item Obsolete Diagnostics

Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, In string, @@%s now must be written as
\@@%s, Probable precedence problem on %s, regexp too big, Use of "$$<digit>"
to mean "${$}<digit>" is deprecated

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl56delta - what's new for perl v5.6.0

=over 4

=item DESCRIPTION

=item Core Enhancements

=over 4

=item Interpreter cloning, threads, and concurrency

=item Lexically scoped warning categories

=item Unicode and UTF-8 support

=item Support for interpolating named characters

=item "our" declarations

=item Support for strings represented as a vector of ordinals

=item Improved Perl version numbering system

=item New syntax for declaring subroutine attributes

=item File and directory handles can be autovivified

=item open() with more than two arguments

=item 64-bit support

=item Large file support

=item Long doubles

=item "more bits"

=item Enhanced support for sort() subroutines

=item C<sort $coderef @@foo> allowed

=item File globbing implemented internally

=item Support for CHECK blocks

=item POSIX character class syntax [: :] supported

=item Better pseudo-random number generator

=item Improved C<qw//> operator

=item Better worst-case behavior of hashes

=item pack() format 'Z' supported

=item pack() format modifier '!' supported

=item pack() and unpack() support counted strings

=item Comments in pack() templates

=item Weak references

=item Binary numbers supported

=item Lvalue subroutines

=item Some arrows may be omitted in calls through references

=item Boolean assignment operators are legal lvalues

=item exists() is supported on subroutine names

=item exists() and delete() are supported on array elements

=item Pseudo-hashes work better

=item Automatic flushing of output buffers

=item Better diagnostics on meaningless filehandle operations

=item Where possible, buffered data discarded from duped input filehandle

=item eof() has the same old magic as <>

=item binmode() can be used to set :crlf and :raw modes

=item C<-T> filetest recognizes UTF-8 encoded files as "text"

=item system(), backticks and pipe open now reflect exec() failure

=item Improved diagnostics

=item Diagnostics follow STDERR

=item More consistent close-on-exec behavior

=item syswrite() ease-of-use

=item Better syntax checks on parenthesized unary operators

=item Bit operators support full native integer width

=item Improved security features

=item More functional bareword prototype (*)

=item C<require> and C<do> may be overridden

=item $^X variables may now have names longer than one character

=item New variable $^C reflects C<-c> switch

=item New variable $^V contains Perl version as a string

=item Optional Y2K warnings

=item Arrays now always interpolate into double-quoted strings

=back

=item Modules and Pragmata

=over 4

=item Modules

attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters

=item Pragmata

=back

=item Utility Changes

=over 4

=item dprofpp

=item find2perl

=item h2xs

=item perlcc

=item perldoc

=item The Perl Debugger

=back

=item Improved Documentation

perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod

=item Performance enhancements

=over 4

=item Simple sort() using { $a <=> $b } and the like are optimized

=item Optimized assignments to lexical variables

=item Faster subroutine calls

=item delete(), each(), values() and hash iteration are faster

=back

=item Installation and Configuration Improvements

=over 4

=item -Dusethreads means something different

=item New Configure flags

=item Threadedness and 64-bitness now more daring

=item Long Doubles

=item -Dusemorebits

=item -Duselargefiles

=item installusrbinperl

=item SOCKS support

=item C<-A> flag

=item Enhanced Installation Directories

=back

=item Platform specific changes

=over 4

=item Supported platforms

=item DOS

=item OS390 (OpenEdition MVS)

=item VMS

=item Win32

=back

=item Significant bug fixes

=over 4

=item <HANDLE> on empty files

=item C<eval '...'> improvements

=item All compilation errors are true errors

=item Implicitly closed filehandles are safer

=item Behavior of list slices is more consistent

=item C<(\$)> prototype and C<$foo{a}>

=item C<goto &sub> and AUTOLOAD

=item C<-bareword> allowed under C<use integer>

=item Failures in DESTROY()

=item Locale bugs fixed

=item Memory leaks

=item Spurious subroutine stubs after failed subroutine calls

=item Taint failures under C<-U>

=item END blocks and the C<-c> switch

=item Potential to leak DATA filehandles

=back

=item New or Changed Diagnostics

"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible unintended interpolation of %s in string,
Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME : ATTRS"
instead, Premature end of script headers, Repeat count in pack overflows,
Repeat count in unpack overflows, realloc() of freed memory ignored,
Reference is already weak, setpgrp can't take arguments, Strange *+?{} on
zero-length expression, switching effective %s is not implemented, This
Perl can't reset CRTL environ elements (%s), This Perl can't set CRTL
environ elements (%s=%s), Too late to run %s block, Unknown open() mode
'%s', Unknown process %x sent message to prime_env_iter: %s, Unrecognized
escape \\%c passed through, Unterminated attribute parameter in attribute
list, Unterminated attribute list, Unterminated attribute parameter in
subroutine attribute list, Unterminated subroutine attribute list, Value of
CLI symbol "%s" too long, Version number must be a constant number

=item New tests

=item Incompatible Changes

=over 4

=item Perl Source Incompatibilities

CHECK is a new keyword, Treatment of list slices of undef has changed,
Format of $English::PERL_VERSION is different, Literals of the form
C<1.2.3> parse differently, Possibly changed pseudo-random number
generator, Hashing function for hash keys has changed, C<undef> fails on
read only values, Close-on-exec bit may be set on pipe and socket handles,
Writing C<"$$1"> to mean C<"${$}1"> is unsupported, delete(), each(),
values() and C<\(%h)>, vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
Text of some diagnostic output has changed, C<%@@> has been removed,
Parenthesized not() behaves like a list operator, Semantics of bareword
prototype C<(*)> have changed, Semantics of bit operators may have changed
on 64-bit platforms, More builtins taint their results

=item C Source Incompatibilities

C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>

=item Compatible C Source API Changes

C<PATCHLEVEL> is now C<PERL_VERSION>

=item Binary Incompatibilities

=back

=item Known Problems

=over 4

=item Thread test failures

=item EBCDIC platforms not supported

=item In 64-bit HP-UX the lib/io_multihomed test may hang

=item NEXTSTEP 3.3 POSIX test failure

=item Tru64 (aka Digital UNIX, aka DEC OSF/1) lib/sdbm test failure with
gcc

=item UNICOS/mk CC failures during Configure run

=item Arrow operator and arrays

=item Experimental features

Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression code constructs:

=back

=item Obsolete Diagnostics

Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, In string, @@%s now must be written as
\@@%s, Probable precedence problem on %s, regexp too big, Use of "$$<digit>"
to mean "${$}<digit>" is deprecated

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

=head2 perl5005delta - what's new for perl5.005

=over 4

=item DESCRIPTION

=item About the new versioning system

=item Incompatible Changes

=over 4

=item WARNING:	This version is not binary compatible with Perl 5.004.

=item Default installation structure has changed

=item Perl Source Compatibility

=item C Source Compatibility

=item Binary Compatibility

=item Security fixes may affect compatibility

=item Relaxed new mandatory warnings introduced in 5.004

=item Licensing

=back

=item Core Changes

=over 4

=item Threads

=item Compiler

=item Regular Expressions

Many new and improved optimizations, Many bug fixes, New regular expression
constructs, New operator for precompiled regular expressions, Other
improvements, Incompatible changes

=item	Improved malloc()

=item Quicksort is internally implemented

=item Reliable signals

=item Reliable stack pointers

=item More generous treatment of carriage returns

=item Memory leaks

=item Better support for multiple interpreters

=item Behavior of local() on array and hash elements is now well-defined

=item C<%!> is transparently tied to the L<Errno> module

=item Pseudo-hashes are supported

=item C<EXPR foreach EXPR> is supported

=item Keywords can be globally overridden

=item C<$^E> is meaningful on Win32

=item C<foreach (1..1000000)> optimized

=item C<Foo::> can be used as implicitly quoted package name

=item C<exists $Foo::{Bar::}> tests existence of a package

=item Better locale support

=item Experimental support for 64-bit platforms

=item prototype() returns useful results on builtins

=item Extended support for exception handling

=item Re-blessing in DESTROY() supported for chaining DESTROY() methods

=item All C<printf> format conversions are handled internally

=item New C<INIT> keyword

=item New C<lock> keyword

=item New C<qr//> operator

=item C<our> is now a reserved word

=item Tied arrays are now fully supported

=item Tied handles support is better

=item 4th argument to substr

=item Negative LENGTH argument to splice

=item Magic lvalues are now more magical

=item <> now reads in records

=back

=item Supported Platforms

=over 4

=item New Platforms

=item Changes in existing support

=back

=item Modules and Pragmata

=over 4

=item New Modules

B, Data::Dumper, Dumpvalue, Errno, File::Spec, ExtUtils::Installed,
ExtUtils::Packlist, Fatal, IPC::SysV, Test, Tie::Array, Tie::Handle,
Thread, attrs, fields, re

=item Changes in existing modules

Benchmark, Carp, CGI, Fcntl, Math::Complex, Math::Trig, POSIX, DB_File,
MakeMaker, CPAN, Cwd

=back

=item Utility Changes

=item Documentation Changes

=item New Diagnostics

Ambiguous call resolved as CORE::%s(), qualify as such or use &, Bad index
while coercing array into hash, Bareword "%s" refers to nonexistent
package, Can't call method "%s" on an undefined value, Can't check
filesystem of script "%s" for nosuid, Can't coerce array into hash, Can't
goto subroutine from an eval-string, Can't localize pseudo-hash element,
Can't use %%! because Errno.pm is not available, Cannot find an opnumber
for "%s", Character class syntax [. .] is reserved for future extensions,
Character class syntax [: :] is reserved for future extensions, Character
class syntax [= =] is reserved for future extensions, %s: Eval-group in
insecure regular expression, %s: Eval-group not allowed, use re 'eval', %s:
Eval-group not allowed at run time, Explicit blessing to '' (assuming
package main), Illegal hex digit ignored, No such array field, No such
field "%s" in variable %s of type %s, Out of memory during ridiculously
large request, Range iterator outside integer range, Recursive inheritance
detected while looking for method '%s' %s, Reference found where even-sized
list expected, Undefined value assigned to typeglob, Use of reserved word
"%s" is deprecated, perl: warning: Setting locale failed

=item Obsolete Diagnostics

Can't mktemp(), Can't write to temp file for B<-e>: %s, Cannot open
temporary file, regexp too big

=item Configuration Changes

=item BUGS

=item SEE ALSO

=item HISTORY

=back

=head2 perl5004delta - what's new for perl5.004

=over 4

=item DESCRIPTION

=item Supported Environments

=item Core Changes

=over 4

=item List assignment to %ENV works

=item Change to "Can't locate Foo.pm in @@INC" error

=item Compilation option: Binary compatibility with 5.003

=item $PERL5OPT environment variable

=item Limitations on B<-M>, B<-m>, and B<-T> options

=item More precise warnings

=item Deprecated: Inherited C<AUTOLOAD> for non-methods

=item Previously deprecated %OVERLOAD is no longer usable

=item Subroutine arguments created only when they're modified

=item Group vector changeable with C<$)>

=item Fixed parsing of $$<digit>, &$<digit>, etc.

=item Fixed localization of $<digit>, $&, etc.

=item No resetting of $. on implicit close

=item C<wantarray> may return undef

=item C<eval EXPR> determines value of EXPR in scalar context

=item Changes to tainting checks

No glob() or <*>, No spawning if tainted $CDPATH, $ENV, $BASH_ENV, No
spawning if tainted $TERM doesn't look like a terminal name

=item New Opcode module and revised Safe module

=item Embedding improvements

=item Internal change: FileHandle class based on IO::* classes

=item Internal change: PerlIO abstraction interface

=item New and changed syntax

$coderef->(PARAMS)

=item New and changed builtin constants

__PACKAGE__

=item New and changed builtin variables

$^E, $^H, $^M

=item New and changed builtin functions

delete on slices, flock, printf and sprintf, keys as an lvalue, my() in
Control Structures, pack() and unpack(), sysseek(), use VERSION, use Module
VERSION LIST, prototype(FUNCTION), srand, $_ as Default, C<m//gc> does not
reset search position on failure, C<m//x> ignores whitespace before ?*+{},
nested C<sub{}> closures work now, formats work right on changing lexicals

=item New builtin methods

isa(CLASS), can(METHOD), VERSION( [NEED] )

=item TIEHANDLE now supported

TIEHANDLE classname, LIST, PRINT this, LIST, PRINTF this, LIST, READ this
LIST, READLINE this, GETC this, DESTROY this

=item Malloc enhancements

-DPERL_EMERGENCY_SBRK, -DPACK_MALLOC, -DTWO_POT_OPTIMIZE

=item Miscellaneous efficiency enhancements

=back

=item Support for More Operating Systems

=over 4

=item Win32

=item Plan 9

=item QNX

=item AmigaOS

=back

=item Pragmata

use autouse MODULE => qw(sub1 sub2 sub3), use blib, use blib 'dir', use
constant NAME => VALUE, use locale, use ops, use vmsish

=item Modules

=over 4

=item Required Updates

=item Installation directories

=item Module information summary

=item Fcntl

=item IO

=item Math::Complex

=item Math::Trig

=item DB_File

=item Net::Ping

=item Object-oriented overrides for builtin operators

=back

=item Utility Changes

=over 4

=item pod2html

Sends converted HTML to standard output

=item xsubpp

C<void> XSUBs now default to returning nothing

=back

=item C Language API Changes

C<gv_fetchmethod> and C<perl_call_sv>, C<perl_eval_pv>, Extended API for
manipulating hashes

=item Documentation Changes

L<perldelta>, L<perlfaq>, L<perllocale>, L<perltoot>, L<perlapio>,
L<perlmodlib>, L<perldebug>, L<perlsec>

=item New Diagnostics

"my" variable %s masks earlier declaration in same scope, %s argument is
not a HASH element or slice, Allocation too large: %lx, Allocation too
large, Applying %s to %s will act on scalar(%s), Attempt to free
nonexistent shared string, Attempt to use reference as lvalue in substr,
Bareword "%s" refers to nonexistent package, Can't redefine active sort
subroutine %s, Can't use bareword ("%s") as %s ref while "strict refs" in
use, Cannot resolve method `%s' overloading `%s' in package `%s', Constant
subroutine %s redefined, Constant subroutine %s undefined, Copy method did
not return a reference, Died, Exiting pseudo-block via %s, Identifier too
long, Illegal character %s (carriage return), Illegal switch in PERL5OPT:
%s, Integer overflow in hex number, Integer overflow in octal number,
internal error: glob failed, Invalid conversion in %s: "%s", Invalid type
in pack: '%s', Invalid type in unpack: '%s', Name "%s::%s" used only once:
possible typo, Null picture in formline, Offset outside string, Out of
memory!, Out of memory during request for %s, panic: frexp, Possible
attempt to put comments in qw() list, Possible attempt to separate words
with commas, Scalar value @@%s{%s} better written as $%s{%s}, Stub found
while resolving method `%s' overloading `%s' in %s, Too late for "B<-T>"
option, untie attempted while %d inner references still exist, Unrecognized
character %s, Unsupported function fork, Use of "$$<digit>" to mean
"${$}<digit>" is deprecated, Value of %s can be "0"; test with defined(),
Variable "%s" may be unavailable, Variable "%s" will not stay shared,
Warning: something's wrong, Ill-formed logical name |%s| in prime_env_iter,
Got an error from DosAllocMem, Malformed PERLLIB_PREFIX, PERL_SH_DIR too
long, Process terminated by SIG%s

=item BUGS

=item SEE ALSO

=item HISTORY

=back

=head2 perlaix, README.aix - Perl version 5 on IBM Unix (AIX) systems

=over 4

=item DESCRIPTION

=over 4

=item Compiling Perl 5 on AIX

=item OS level

=item Building Dynamic Extensions on AIX

=item The IBM ANSI C Compiler

=item Using GNU's gcc for building perl

=item Using Large Files with Perl

=item Threaded Perl

=item 64-bit Perl

=item AIX 4.2 and extensions using C++ with statics

=back

=item AUTHOR

=item DATE

=back

=head2 perlapollo, README.apollo - Perl version 5 on Apollo DomainOS

=over 4

=item DESCRIPTION

=item AUTHOR

=back

=head2 perlamiga - Perl under Amiga OS

=over 4

=item NOTE

=item SYNOPSIS

=back

=over 4

=item DESCRIPTION

=over 4

=item Prerequisites for Compiling Perl on AmigaOS

B<Unix emulation for AmigaOS: ixemul.library>, B<Version of Amiga OS>

=item Starting Perl programs under AmigaOS

=item Shortcomings of Perl under AmigaOS

=back

=item INSTALLATION

=item Accessing documentation

=over 4

=item Manpages for Perl on AmigaOS

=item Perl HTML Documentation on AmigaOS

=item Perl GNU Info Files on AmigaOS

=item Perl LaTeX Documentation on AmigaOS

=back

=item BUILDING PERL ON AMIGAOS

=over 4

=item Build Prerequisites for Perl on AmigaOS

=item Getting the Perl Source for AmigaOS

=item Making Perl on AmigaOS

=item Testing Perl on AmigaOS

=item Installing the built Perl on AmigaOS

=back

=item PERL 5.8.0 BROKEN IN AMIGAOS

=item AUTHORS

=item SEE ALSO

=back

=head2 perlbeos, README.beos - Perl version 5 on BeOS

=over 4

=item DESCRIPTION

=over 4

=item General Issues with Perl on BeOS

=item BeOS Release-specific Notes

R4 x86, R4 PPC

=item Contact Information

=item Update 2002-05-30

=back

=back

=head2 perlbs2000, README.BS2000 - building and installing Perl for BS2000.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item gzip on BS2000

=item bison on BS2000

=item Unpacking Perl Distribution on BS2000

=item Compiling Perl on BS2000

=item Testing Perl on BS2000

=item Installing Perl on BS2000

=item Using Perl in the Posix-Shell of BS2000

=item Using Perl in "native" BS2000

=item Floating point anomalies on BS2000

=back

=item AUTHORS

=item SEE ALSO

=over 4

=item Mailing list

=back

=item HISTORY

=back

=over 4

=item Name

=item Description

=item Build

=over 4

=item Tools & SDK

=item Make

=back

=item Acknowledgements

=item Author

=back

=head2 perlcygwin, README.cygwin - Perl for Cygwin

=over 4

=item SYNOPSIS

=item PREREQUISITES FOR COMPILING PERL ON CYGWIN

=over 4

=item Cygwin = GNU+Cygnus+Windows (Don't leave UNIX without it)

=item Cygwin Configuration

C<PATH>, I<nroff>, Permissions

=back

=item CONFIGURE PERL ON CYGWIN

=over 4

=item Stripping Perl Binaries on Cygwin

=item Optional Libraries for Perl on Cygwin

C<-lcrypt>, C<-lgdbm> (C<use GDBM_File>), C<-ldb> (C<use DB_File>),
C<-lcygipc> (C<use IPC::SysV>), C<-lutil>

=item Configure-time Options for Perl on Cygwin

C<-Uusedl>, C<-Uusemymalloc>, C<-Uuseperlio>, C<-Dusemultiplicity>,
C<-Duse64bitint>, C<-Duselongdouble>, C<-Dusethreads>, C<-Duselargefiles>,
C<-Dmksymlinks>

=item Suspicious Warnings on Cygwin

I<dlsym()>, Win9x and C<d_eofnblk>, Compiler/Preprocessor defines

=back

=item MAKE ON CYGWIN

=over 4

=item Warnings on Cygwin

=item ld2 on Cygwin

=back

=item TEST ON CYGWIN

=over 4

=item File Permissions on Cygwin

=item NDBM_File does not work on FAT filesystems

=item Script Portability on Cygwin

Pathnames, Text/Binary, F<.exe>, chown(), Miscellaneous

=back

=item INSTALL PERL ON CYGWIN

=item MANIFEST ON CYGWIN

Documentation, Build, Configure, Make, Install, Tests, Compiled Perl
Source, Compiled Module Source, Perl Modules/Scripts

=item BUGS ON CYGWIN

=item AUTHORS

=item HISTORY

=back

=head2 perldgux - Perl under DG/UX.

=over 4

=item SYNOPSIS

=back

=over 4

=item DESCRIPTION

=item BUILDING PERL ON DG/UX

=over 4

=item Non-threaded Perl on DG/UX

=item Threaded Perl on DG/UX

=item Testing Perl on DG/UX

=item Installing the built perl on DG/UX

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 perldos - Perl under DOS, W31, W95.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Prerequisites for Compiling Perl on DOS

DJGPP, Pthreads

=item Shortcomings of Perl under DOS

=item Building Perl on DOS

=item Testing Perl on DOS

=item Installation of Perl on DOS

=back

=item BUILDING AND INSTALLING MODULES ON DOS

=over 4

=item Building Prerequisites for Perl on DOS

=item Unpacking CPAN Modules on DOS

=item Building Non-XS Modules on DOS

=item Building XS Modules on DOS

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 perlepoc, README.epoc - Perl for EPOC

=over 4

=item SYNOPSIS

=item INTRODUCTION

=item INSTALLING PERL ON EPOC

=item STARTING PERL ON EPOC

=over 4

=item Editors on Epoc

=item Features of Perl on Epoc

=item Restrictions of Perl on Epoc

=item Compiling Perl 5 on the EPOC cross compiling environment

=back

=item SUPPORT STATUS OF PERL ON EPOC

=item AUTHOR

=item LAST UPDATE

=back

=head2 perlfreebsd, README.freebsd - Perl version 5 on FreeBSD systems

=over 4

=item DESCRIPTION

=over 4

=item FreeBSD core dumps from readdir_r with ithreads

=item $^X doesn't always contain a full path in FreeBSD

=item Perl will no longer be part of "base FreeBSD"

=back

=item AUTHOR

=back

=head2 perlhpux, README.hpux - Perl version 5 on Hewlett-Packard Unix
(HP-UX) systems

=over 4

=item DESCRIPTION

=over 4

=item Using perl as shipped with HP-UX

=item Compiling Perl 5 on HP-UX

=item PA-RISC

=item PA-RISC 1.0

=item PA-RISC 1.1

=item PA-RISC 2.0

=item Itanium

=item Portability Between PA-RISC Versions

=item Itanium Processor Family and HP-UX

=item Building Dynamic Extensions on HP-UX

=item The HP ANSI C Compiler

=item The GNU C Compiler

=item Using Large Files with Perl on HP-UX

=item Threaded Perl on HP-UX

=item 64-bit Perl on HP-UX

=item Oracle on HP-UX

=item GDBM and Threads on HP-UX

=item NFS filesystems and utime(2) on HP-UX

=item perl -P and // and HP-UX

=item HP-UX Kernel Parameters (maxdsiz) for Compiling Perl

=back

=item nss_delete core dump from op/pwent or op/grent

=item AUTHOR

=item DATE

=back

=head2 perlhurd, README.hurd - Perl version 5 on Hurd

=over 4

=item DESCRIPTION

=over 4

=item Known Problems with Perl on Hurd 

=back

=item AUTHOR

=back

=head2 perlirix, README.irix - Perl version 5 on Irix systems

=over 4

=item DESCRIPTION

=over 4

=item Building 32-bit Perl in Irix

=item Building 64-bit Perl in Irix

=item About Compiler Versions of Irix

=item Linker Problems in Irix

=item Malloc in Irix

=item Building with threads in Irix

=back

=item AUTHOR

=back

=head2 perlmachten, README.machten - Perl version 5 on Power MachTen
systems

=over 4

=item DESCRIPTION

=over 4

=item Compiling Perl 5 on MachTen

=item Failures during C<make test> on MachTen

op/lexassign.t, pragma/warnings.t

=item Building external modules on MachTen

=back

=item AUTHOR

=item DATE

=back

=head2 perlmacos, README.macos - Perl under Mac OS (Classic)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item DATE

=back

=head2 perlmint, README.mint - Perl version 5 on Atari MiNT

=over 4

=item DESCRIPTION

=item Known problems with Perl on MiNT

=item AUTHOR

=back

=head2 perlmpeix, README.mpeix - Perl/iX for HP e3000 MPE

=over 4

=item SYNOPSIS

=item NOTE

=item Binary distribution from HP

=item What's New in Perl for MPE/iX

=item Welcome to Perl/iX

=item System Requirements for Perl/iX

=item How to Obtain Perl/iX

=item Perl/iX Distribution Contents Highlights

README, INSTALL, LIBSHP3K, PERL, .cpan/, lib/, man/,
public_html/feedback.cgi, src/perl-5.6.0-mpe

=item How to Compile Perl/iX

 4,  6

=item Getting Started with Perl/iX

=item MPE/iX Implementation Considerations

=item Known Perl/iX Bugs Under Investigation

=item Perl/iX To-Do List

=item Perl/iX Change History

=item AUTHOR

=item Name

=item Description

=item Build

=over 4

=item Tools & SDK

=item Setup

SetNWBld.bat, Buildtype.bat

=item Make

=item Interpreter

=item Extensions

=back

=item Install

=item Build new extensions

=item Acknowledgements

=item Authors

=item Date

=back

=head2 perlos2 - Perl under OS/2, DOS, Win0.3*, Win0.95 and WinNT.

=over 4

=item SYNOPSIS

=back

=over 4

=item DESCRIPTION

=over 4

=item Target

=item Other OSes

=item Prerequisites

EMX, RSX, HPFS, pdksh

=item Starting Perl programs under OS/2 (and DOS and...)

=item Starting OS/2 (and DOS) programs under Perl

=back

=item Frequently asked questions

=over 4

=item "It does not work"

=item I cannot run external programs

=item I cannot embed perl into my program, or use F<perl.dll> from my
program. 

Is your program EMX-compiled with C<-Zmt -Zcrtdll>?, Did you use
L<ExtUtils::Embed>?

=item C<``> and pipe-C<open> do not work under DOS.

=item Cannot start C<find.exe "pattern" file>

=back

=item INSTALLATION

=over 4

=item Automatic binary installation

C<PERL_BADLANG>, C<PERL_BADFREE>, F<Config.pm>

=item Manual binary installation

Perl VIO and PM executables (dynamically linked), Perl_ VIO executable
(statically linked), Executables for Perl utilities, Main Perl library,
Additional Perl modules, Tools to compile Perl modules, Manpages for Perl
and utilities, Manpages for Perl modules, Source for Perl documentation,
Perl manual in F<.INF> format, Pdksh

=item B<Warning>

=back

=item Accessing documentation

=over 4

=item OS/2 F<.INF> file

=item Plain text

=item Manpages

=item HTML

=item GNU C<info> files

=item F<PDF> files

=item C<LaTeX> docs

=back

=item BUILD

=over 4

=item The short story

=item Prerequisites

=item Getting perl source

=item Application of the patches

=item Hand-editing

=item Making

=item Testing

A lot of C<bad free>, Process terminated by SIGTERM/SIGINT, F<op/fs.t>,
F<op/stat.t>

=item Installing the built perl

=item C<a.out>-style build

=back

=item Build FAQ

=over 4

=item Some C</> became C<\> in pdksh.

=item C<'errno'> - unresolved external

=item Problems with tr or sed

=item Some problem (forget which ;-)

=item Library ... not found

=item Segfault in make

=item op/sprintf test failure

=back

=item Specific (mis)features of OS/2 port

=over 4

=item C<setpriority>, C<getpriority>

=item C<system()>

=item C<extproc> on the first line

=item Additional modules:

=item Prebuilt methods:

C<File::Copy::syscopy>, C<DynaLoader::mod2fname>,  C<Cwd::current_drive()>,
 C<Cwd::sys_chdir(name)>,  C<Cwd::change_drive(name)>, 
C<Cwd::sys_is_absolute(name)>,	C<Cwd::sys_is_rooted(name)>, 
C<Cwd::sys_is_relative(name)>,	C<Cwd::sys_cwd(name)>, 
C<Cwd::sys_abspath(name, dir)>,  C<Cwd::extLibpath([type])>, 
C<Cwd::extLibpath_set( path [, type ] )>,
C<OS2::Error(do_harderror,do_exception)>, C<OS2::Errors2Drive(drive)>,
OS2::SysInfo(), OS2::BootDrive(), C<OS2::MorphPM(serve)>,
C<OS2::UnMorphPM(serve)>, C<OS2::Serve_Messages(force)>,
C<OS2::Process_Messages(force [, cnt])>, C<OS2::_control87(new,mask)>,
OS2::get_control87(), C<OS2::set_control87_em(new=MCW_EM,mask=MCW_EM)>,
C<OS2::DLLname([how [, \&xsub]])>

=item Prebuilt variables:

$OS2::emx_rev, $OS2::emx_env, $OS2::os_ver, $OS2::is_aout, $OS2::can_fork,
$OS2::nsyserror

=item Misfeatures

=item Modifications

C<popen>, C<tmpnam>, C<tmpfile>, C<ctermid>, C<stat>, C<mkdir>, C<rmdir>,
C<flock>

=item Identifying DLLs

=item Centralized management of resources

C<HAB>, C<HMQ>, Treating errors reported by OS/2 API,
C<CheckOSError(expr)>, C<CheckWinError(expr)>, C<SaveWinError(expr)>,
C<SaveCroakWinError(expr,die,name1,name2)>, C<WinError_2_Perl_rc>,
C<FillWinError>, C<FillOSError(rc)>, Loading DLLs and ordinals in DLLs

=back

=item Perl flavors

=over 4

=item F<perl.exe>

=item F<perl_.exe>

=item F<perl__.exe>

=item F<perl___.exe>

=item Why strange names?

=item Why dynamic linking?

=item Why chimera build?

=back

=item ENVIRONMENT

=over 4

=item C<PERLLIB_PREFIX>

=item C<PERL_BADLANG>

=item C<PERL_BADFREE>

=item C<PERL_SH_DIR>

=item C<USE_PERL_FLOCK>

=item C<TMP> or C<TEMP>

=back

=item Evolution

=over 4

=item Text-mode filehandles

=item Priorities

=item DLL name mangling: pre 5.6.2

=item DLL name mangling: 5.6.2 and beyond

Global DLLs, specific DLLs, C<BEGINLIBPATH> and C<ENDLIBPATH>, F<.> from
C<LIBPATH>

=item DLL forwarder generation

=item Threading

=item Calls to external programs

=item Memory allocation

=item Threads

C<COND_WAIT>, F<os2.c>

=back

=item BUGS

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 perlos390, README.os390 - building and installing Perl for OS/390
and z/OS

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Tools

=item Unpacking Perl distribution on OS/390

=item Setup and utilities for Perl on OS/390

=item Configure Perl on OS/390

=item Build, Test, Install Perl on OS/390

=item Build Anomalies with Perl on OS/390

=item Testing Anomalies with Perl on OS/390

=item Installation Anomalies with Perl on OS/390

=item Usage Hints for Perl on OS/390

=item Floating Point Anomalies with Perl on OS/390

=item Modules and Extensions for Perl on OS/390

=back

=item AUTHORS

=item SEE ALSO

=over 4

=item Mailing list for Perl on OS/390

=back

=item HISTORY

=back

=head2 perlqnx, README.qnx - Perl version 5 on QNX

=over 4

=item DESCRIPTION

=over 4

=item Required Software for Compiling Perl on QNX4

/bin/sh, ar, nm, cpp, make

=item Outstanding Issues with Perl on QNX4

=item QNX auxiliary files

qnx/ar, qnx/cpp

=item Outstanding issues with perl under QNX6

=back

=item AUTHOR

=back

=head2 perlplan9 - Plan 9-specific documentation for Perl

=over 4

=item DESCRIPTION

=over 4

=item Invoking Perl

=item What's in Plan 9 Perl

=item What's not in Plan 9 Perl

=item Perl5 Functions not currently supported in Plan 9 Perl

=item Signals in Plan 9 Perl

=back

=item COMPILING AND INSTALLING PERL ON PLAN 9

=over 4

=item Installing Perl Documentation on Plan 9

=back

=item BUGS

=item Revision date

=item AUTHOR

=back

=head2 perlsolaris, README.solaris - Perl version 5 on Solaris systems

=over 4

=item DESCRIPTION

=over 4

=item Solaris Version Numbers.

=back

=item RESOURCES

Solaris FAQ, Precompiled Binaries, Solaris Documentation

=item SETTING UP

=over 4

=item File Extraction Problems on Solaris.

=item Compiler and Related Tools on Solaris.

=item Environment for Compiling Perl on Solaris

=back

=item RUN CONFIGURE.

=over 4

=item 64-bit Issues with Perl on Solaris.

=item Threads in Perl on Solaris.

=item Malloc Issues with Perl on Solaris.

=back

=item MAKE PROBLEMS.

Dynamic Loading Problems With GNU as and GNU ld, ld.so.1: ./perl: fatal:
relocation error:, dlopen: stub interception failed, #error "No
DATAMODEL_NATIVE specified", sh: ar: not found

=item MAKE TEST

=over 4

=item op/stat.t test 4 in Solaris

=item nss_delete core dump from op/pwent or op/grent

=back

=item PREBUILT BINARIES OF PERL FOR SOLARIS.

=item RUNTIME ISSUES FOR PERL ON SOLARIS.

=over 4

=item Limits on Numbers of Open Files on Solaris.

=back

=item SOLARIS-SPECIFIC MODULES.

=item SOLARIS-SPECIFIC PROBLEMS WITH MODULES.

=over 4

=item Proc::ProcessTable on Solaris

=item BSD::Resource on Solaris

=item Net::SSLeay on Solaris

=back

=item AUTHOR

=item LAST MODIFIED

=back

=head2 perltru64, README.tru64 - Perl version 5 on Tru64 (formerly known as
Digital UNIX formerly known as DEC OSF/1) systems

=over 4

=item DESCRIPTION

=over 4

=item Compiling Perl 5 on Tru64

=item Using Large Files with Perl on Tru64

=item Threaded Perl on Tru64

=item Long Doubles on Tru64

=item 64-bit Perl on Tru64

=item Warnings about floating-point overflow when compiling Perl on Tru64

=back

=item Testing Perl on Tru64

=item ext/ODBM_File/odbm Test Failing With Static Builds

=item Perl Fails Because Of Unresolved Symbol sockatmark

=item AUTHOR

=back

=head2 perluts - Perl under UTS

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUILDING PERL ON UTS

=item Installing the built perl on UTS

=item AUTHOR

=back

=head2 perlvmesa, README.vmesa - building and installing Perl for VM/ESA.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Unpacking Perl Distribution on VM/ESA

=item Setup Perl and utilities on VM/ESA

=item Configure Perl on VM/ESA

=item Testing Anomalies of Perl on VM/ESA

=item Usage Hints for Perl on VM/ESA

=back

=item AUTHORS

=item SEE ALSO

=over 4

=item Mailing list for Perl on VM/ESA

=back

=back

=head2 perlvms - VMS-specific documentation for Perl

=over 4

=item DESCRIPTION

=item Installation

=item Organization of Perl Images

=over 4

=item Core Images

=item Perl Extensions

=item Installing static extensions

=item Installing dynamic extensions

=back

=item File specifications

=over 4

=item Syntax

=item Wildcard expansion

=item Pipes

=back

=item PERL5LIB and PERLLIB

=item Command line

=over 4

=item I/O redirection and backgrounding

=item Command line switches

-i, -S, -u

=back

=item Perl functions

File tests, backticks, binmode FILEHANDLE, crypt PLAINTEXT, USER, dump,
exec LIST, fork, getpwent, getpwnam, getpwuid, gmtime, kill, qx//, select
(system call), stat EXPR, system LIST, time, times, unlink LIST, utime
LIST, waitpid PID,FLAGS

=item Perl variables

%ENV, CRTL_ENV, CLISYM_[LOCAL], Any other string, $!, $^E, $?, $|

=item Standard modules with VMS-specific differences

=over 4

=item SDBM_File

=back

=item Revision date

=item AUTHOR

=back

=head2 perlvos, README.vos - Perl for Stratus VOS

=over 4

=item SYNOPSIS

=over 4

=item Multiple methods to build perl for VOS

=item Stratus POSIX Support

=back

=item INSTALLING PERL IN VOS

=over 4

=item Compiling Perl 5 on VOS

=item Installing Perl 5 on VOS

=back

=item USING PERL IN VOS

=over 4

=item Unimplemented Features of Perl on VOS

=item Restrictions of Perl on VOS

=item Handling of underflow and overflow

=back

=item TEST STATUS

=item SUPPORT STATUS

=item AUTHOR

=item LAST UPDATE

=back

=head2 perlwin32 - Perl under Windows

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Setting Up Perl on Win32

Make, Command Shell, Borland C++, Microsoft Visual C++, Microsoft Platform
SDK 64-bit Compiler, Mingw32 with GCC

=item Building

=item Testing Perl on Win32

=item Installation of Perl on Win32

=item Usage Hints for Perl on Win32

Environment Variables, File Globbing, Using perl from the command line,
Building Extensions, Command-line Wildcard Expansion, Win32 Specific
Extensions, Notes on 64-bit Windows

=item Running Perl Scripts

Miscellaneous Things

=back

=item BUGS AND CAVEATS

=item AUTHORS

Gary Ng E<lt>71564.1743@@CompuServe.COME<gt>, Gurusamy Sarathy
E<lt>gsar@@activestate.comE<gt>, Nick Ing-Simmons
E<lt>nick@@ing-simmons.netE<gt>

=item SEE ALSO

=item HISTORY

=back

=head1 PRAGMA DOCUMENTATION

=head2 attrs - set/get attributes of a subroutine (deprecated)

=over 4

=item SYNOPSIS

=item DESCRIPTION

method, locked

=back

=head2 re - Perl pragma to alter regular expression behaviour

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 threadshared::shared, threads::shared - Perl extension for sharing
data structures between threads

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXPORT

=item FUNCTIONS

share VARIABLE, lock VARIABLE, cond_wait VARIABLE, cond_signal VARIABLE,
cond_broadcast VARIABLE

=item NOTES

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 threads - Perl extension allowing use of interpreter based threads
from perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

$thread = threads->create(function, LIST), $thread->join, $thread->detach,
threads->self, $thread->tid, threads->object( tid ), threads->yield();,
threads->list();, async BLOCK;

=item WARNINGS

A thread exited while %d other threads were still running

=item TODO

=item BUGS

Parent-Child threads, Returning objects, Creating threads inside BEGIN
blocks, PERL_OLD_SIGNALS are not threadsafe, will not be

=item AUTHOR and COPYRIGHT

=item SEE ALSO

=back

=head2 attributes - get/set subroutine or variable attributes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Built-in Attributes

locked, method, lvalue

=item Available Subroutines

get, reftype

=item Package-specific Attribute Handling

FETCH_I<type>_ATTRIBUTES, MODIFY_I<type>_ATTRIBUTES

=item Syntax of Attribute Lists

=back

=item EXPORTS

=over 4

=item Default exports

=item Available exports

=item Export tags defined

=back

=item EXAMPLES

=item SEE ALSO

=back

=head2 attrs - set/get attributes of a subroutine (deprecated)

=over 4

=item SYNOPSIS

=item DESCRIPTION

method, locked

=back

=head2 autouse - postpone load of modules until a function is used

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item WARNING

=item AUTHOR

=item SEE ALSO

=back

=head2 base - Establish IS-A relationship with base class at compile time

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item HISTORY

=item SEE ALSO

=back

=head2 bigint - Transparent big integer support for Perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item OPTIONS

a or accuracy, p or precision, t or trace, l or lib, v or version

=item MATH LIBRARY

=item INTERNAL FORMAT

=item SIGN

=item METHODS

=back

=item MODULES USED

=item EXAMPLES

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 bignum - Transparent BigNumber support for Perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item OPTIONS

a or accuracy, p or precision, t or trace, l or lib, v or version

=item MATH LIBRARY

=item INTERNAL FORMAT

=item SIGN

=item METHODS

=back

=item MODULES USED

=item EXAMPLES

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 bigrat - Transparent BigNumber/BigRational support for Perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item MODULES USED

=item MATH LIBRARY

=item SIGN

=item METHODS

=back

=item EXAMPLES

	perl -Mbigrat -le 'print sqrt(33)'
	perl -Mbigrat -le 'print 2*255'
	perl -Mbigrat -le 'print 4.5+2*255'
	perl -Mbigrat -le 'print 3/7 + 5/7 + 8/3'	
	perl -Mbigrat -le 'print 12->is_odd()';

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 blib - Use MakeMaker's uninstalled version of a package

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item AUTHOR

=back

=head2 bytes - Perl pragma to force byte semantics rather than character
semantics

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=back

=head2 charnames - define character names for C<\N{named}> string literal
escapes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CUSTOM TRANSLATORS

=item charnames::viacode(code)

=item charnames::vianame(name)

=item ALIASES

=item ILLEGAL CHARACTERS

=item BUGS

=back

=head2 constant - Perl pragma to declare constants

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=over 4

=item List constants

=item Defining multiple constants at once

=item Magic constants

=back

=item TECHNICAL NOTES

=item BUGS

=item AUTHOR

=item COPYRIGHT

=back

=head2 diagnostics - Perl compiler pragma to force verbose warning
diagnostics

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The C<diagnostics> Pragma

=item The I<splain> Program

=back

=item EXAMPLES

=item INTERNALS

=item BUGS

=item AUTHOR

=back

=head2 encoding - allows you to write your script in non-ascii or non-utf8

=over 4

=item SYNOPSIS

=item ABSTRACT

=item USAGE

use encoding [I<ENCNAME>] ;, use encoding I<ENCNAME> [ STDIN =E<gt>
I<ENCNAME_IN> ...] ;, no encoding;

=item CAVEATS

=over 4

=item NOT SCOPED

=item DO NOT MIX MULTIPLE ENCODINGS

=back

=item Non-ASCII Identifiers and Filter option

use encoding I<ENCNAME> Filter=E<gt>1;

=item EXAMPLE - Greekperl

=item KNOWN PROBLEMS

=item SEE ALSO

=back

=head2 fields - compile-time class fields

=over 4

=item SYNOPSIS

=item DESCRIPTION

new, phash

=item SEE ALSO

=back

=head2 filetest - Perl pragma to control the filetest permission operators

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item subpragma access

=back

=back

=head2 if - C<use> a Perl module if a condition holds

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item AUTHOR

=back

=head2 integer - Perl pragma to use integer arithmetic instead of floating
point

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 less - perl pragma to request less of something from the compiler

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 lib - manipulate @@INC at compile time

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Adding directories to @@INC

=item Deleting directories from @@INC

=item Restoring original @@INC

=back

=item CAVEATS

=item NOTES

=item SEE ALSO

=item AUTHOR

=back

=head2 locale - Perl pragma to use and avoid POSIX locales for built-in
operations

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 open - perl pragma to set default PerlIO layers for input and output

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NONPERLIO FUNCTIONALITY

=item IMPLEMENTATION DETAILS

=item SEE ALSO

=back

=head2 ops - Perl pragma to restrict unsafe operations when compiling

=over 4

=item SYNOPSIS	

=item DESCRIPTION

=item SEE ALSO

=back

=head2 overload - Package for overloading perl operations

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Declaration of overloaded functions

=item Calling Conventions for Binary Operations

FALSE, TRUE, C<undef>

=item Calling Conventions for Unary Operations

=item Calling Conventions for Mutators

C<++> and C<-->, C<x=> and other assignment versions

=item Overloadable Operations

I<Arithmetic operations>, I<Comparison operations>, I<Bit operations>,
I<Increment and decrement>, I<Transcendental functions>, I<Boolean, string
and numeric conversion>, I<Iteration>, I<Dereferencing>, I<Special>

=item Inheritance and overloading

Strings as values of C<use overload> directive, Overloading of an operation
is inherited by derived classes

=back

=item SPECIAL SYMBOLS FOR C<use overload>

=over 4

=item Last Resort

=item Fallback

C<undef>, TRUE, defined, but FALSE

=item Copy Constructor

B<Example>

=back

=item MAGIC AUTOGENERATION

I<Assignment forms of arithmetic operations>, I<Conversion operations>,
I<Increment and decrement>, C<abs($a)>, I<Unary minus>, I<Negation>,
I<Concatenation>, I<Comparison operations>, I<Iterator>, I<Dereferencing>,
I<Copy operator>

=item Losing overloading

=item Run-time Overloading

=item Public functions

overload::StrVal(arg), overload::Overloaded(arg), overload::Method(obj,op)

=item Overloading constants

integer, float, binary, q, qr

=item IMPLEMENTATION

=item Metaphor clash

=item Cookbook

=over 4

=item Two-face scalars

=item Two-face references

=item Symbolic calculator

=item I<Really> symbolic calculator

=back

=item AUTHOR

=item DIAGNOSTICS

Odd number of arguments for overload::constant, `%s' is not an overloadable
type, `%s' is not a code reference

=item BUGS

=back

=head2 re - Perl pragma to alter regular expression behaviour

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 sigtrap - Perl pragma to enable simple signal handling

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

=over 4

=item SIGNAL HANDLERS

B<stack-trace>, B<die>, B<handler> I<your-handler>

=item SIGNAL LISTS

B<normal-signals>, B<error-signals>, B<old-interface-signals>

=item OTHER

B<untrapped>, B<any>, I<signal>, I<number>

=back

=item EXAMPLES

=back

=head2 sort - perl pragma to control sort() behaviour

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEATS

=back

=head2 strict - Perl pragma to restrict unsafe constructs

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<strict refs>, C<strict vars>, C<strict subs>

=back

=head2 subs - Perl pragma to predeclare sub names

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 threads - Perl extension allowing use of interpreter based threads
from perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

$thread = threads->create(function, LIST), $thread->join, $thread->detach,
threads->self, $thread->tid, threads->object( tid ), threads->yield();,
threads->list();, async BLOCK;

=item WARNINGS

A thread exited while %d other threads were still running

=item TODO

=item BUGS

Parent-Child threads, Returning objects, Creating threads inside BEGIN
blocks, PERL_OLD_SIGNALS are not threadsafe, will not be

=item AUTHOR and COPYRIGHT

=item SEE ALSO

=back

=head2 threadshared, threads::shared - Perl extension for sharing data
structures between threads

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXPORT

=item FUNCTIONS

share VARIABLE, lock VARIABLE, cond_wait VARIABLE, cond_signal VARIABLE,
cond_broadcast VARIABLE

=item NOTES

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 utf8 - Perl pragma to enable/disable UTF-8 (or UTF-EBCDIC) in source
code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Utility functions

$num_octets = utf8::upgrade($string);, utf8::downgrade($string[, FAIL_OK]),
utf8::encode($string), $flag = utf8::decode($string), $flag =
utf8::valid(STRING)

=back

=item BUGS

=item SEE ALSO

=back

=head2 vars - Perl pragma to predeclare global variable names (obsolete)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 vmsish - Perl pragma to control VMS-specific language features

=over 4

=item SYNOPSIS

=item DESCRIPTION

C<vmsish status>, C<vmsish exit>, C<vmsish time>, C<vmsish hushed>

=back

=head2 warnings - Perl pragma to control optional warnings

=over 4

=item SYNOPSIS

=item DESCRIPTION

use warnings::register, warnings::enabled(), warnings::enabled($category),
warnings::enabled($object), warnings::warn($message),
warnings::warn($category, $message), warnings::warn($object, $message),
warnings::warnif($message), warnings::warnif($category, $message),
warnings::warnif($object, $message)

=back

=head2 warnings::register - warnings import function

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head1 MODULE DOCUMENTATION

=head2 AnyDBM_File - provide framework for multiple DBMs

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item DBM Comparisons

[0], [1], [2], [3]

=back

=item SEE ALSO

=back

=head2 Attribute::Handlers - Simpler definition of attribute handlers

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

[0], [1], [2], [3], [4], [5]

=over 4

=item Typed lexicals

=item Type-specific attribute handlers

=item Non-interpretive attribute handlers

=item Phase-specific attribute handlers

=item Attributes as C<tie> interfaces

=back

=item EXAMPLES

=item DIAGNOSTICS

C<Bad attribute type: ATTR(%s)>, C<Attribute handler %s doesn't handle %s
attributes>, C<Declaration of %s attribute in package %s may clash with
future reserved word>, C<Can't have two ATTR specifiers on one subroutine>,
C<Can't autotie a %s>, C<Internal error: %s symbol went missing>, C<Won't
be able to apply END handler>

=item AUTHOR

=item BUGS

=item COPYRIGHT

=back

=head2 AutoLoader - load subroutines only on demand

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Subroutine Stubs

=item Using B<AutoLoader>'s AUTOLOAD Subroutine

=item Overriding B<AutoLoader>'s AUTOLOAD Subroutine

=item Package Lexicals

=item Not Using AutoLoader

=item B<AutoLoader> vs. B<SelfLoader>

=back

=item CAVEATS

=item SEE ALSO

=back

=head2 AutoSplit - split a package for autoloading

=over 4

=item SYNOPSIS

=item DESCRIPTION

$keep, $check, $modtime

=over 4

=item Multiple packages

=back

=item DIAGNOSTICS

=back

=head2 B - The Perl Compiler

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OVERVIEW OF CLASSES

=over 4

=item SV-RELATED CLASSES

=item B::SV METHODS

REFCNT, FLAGS

=item B::IV METHODS

IV, IVX, UVX, int_value, needs64bits, packiv

=item B::NV METHODS

NV, NVX

=item B::RV METHODS

RV

=item B::PV METHODS

PV, RV, PVX

=item B::PVMG METHODS

MAGIC, SvSTASH

=item B::MAGIC METHODS

MOREMAGIC, precomp, PRIVATE, TYPE, FLAGS, OBJ, PTR, REGEX

=item B::PVLV METHODS

TARGOFF, TARGLEN, TYPE, TARG

=item B::BM METHODS

USEFUL, PREVIOUS, RARE, TABLE

=item B::GV METHODS

is_empty, NAME, SAFENAME, STASH, SV, IO, FORM, AV, HV, EGV, CV, CVGEN,
LINE, FILE, FILEGV, GvREFCNT, FLAGS

=item B::IO METHODS

LINES, PAGE, PAGE_LEN, LINES_LEFT, TOP_NAME, TOP_GV, FMT_NAME, FMT_GV,
BOTTOM_NAME, BOTTOM_GV, SUBPROCESS, IoTYPE, IoFLAGS, IsSTD

=item B::AV METHODS

FILL, MAX, OFF, ARRAY, AvFLAGS

=item B::CV METHODS

STASH, START, ROOT, GV, FILE, DEPTH, PADLIST, OUTSIDE, XSUB, XSUBANY,
CvFLAGS, const_sv

=item B::HV METHODS

FILL, MAX, KEYS, RITER, NAME, PMROOT, ARRAY

=item OP-RELATED CLASSES

=item B::OP METHODS

next, sibling, name, ppaddr, desc, targ, type, seq, flags, private

=item B::UNOP METHOD

first

=item B::BINOP METHOD

last

=item B::LOGOP METHOD

other

=item B::LISTOP METHOD

children

=item B::PMOP METHODS

pmreplroot, pmreplstart, pmnext, pmregexp, pmflags, pmdynflags,
pmpermflags, precomp, pmoffet

=item B::SVOP METHOD

sv, gv

=item B::PADOP METHOD

padix

=item B::PVOP METHOD

pv

=item B::LOOP METHODS

redoop, nextop, lastop

=item B::COP METHODS

label, stash, file, cop_seq, arybase, line

=back

=item FUNCTIONS EXPORTED BY C<B>

main_cv, init_av, begin_av, end_av, main_root, main_start, comppadlist,
regex_padav, sv_undef, sv_yes, sv_no, amagic_generation, walkoptree(OP,
METHOD), walkoptree_debug(DEBUG), walksymtable(SYMREF, METHOD, RECURSE,
PREFIX), svref_2object(SV), ppname(OPNUM), hash(STR), cast_I32(I), minus_c,
cstring(STR), perlstring(STR), class(OBJ), threadsv_names

=item AUTHOR

=back

=head2 B::Asmdata - Autogenerated data about Perl ops, used to generate
bytecode

=over 4

=item SYNOPSIS

=item DESCRIPTION

%insn_data, @@insn_name, @@optype, @@specialsv_name

=item AUTHOR

=back

=head2 B::Assembler - Assemble Perl bytecode

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHORS

=back

=head2 B::Bblock - Walk basic blocks

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Functions

B<find_leaders>

=back

=item AUTHOR

=back

=head2 B::Bytecode - Perl compiler's bytecode backend

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

B<-ofilename>, B<-afilename>, B<-->, B<-f>, B<-fcompress-nullops>,
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-On>, B<-D>, B<-Do>,
B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-upackage>

=item EXAMPLES

=item BUGS

=item AUTHORS

=back

=head2 B::C - Perl compiler's C backend

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-D>, B<-Do>, B<-Dc>, B<-DA>,
B<-DC>, B<-DM>, B<-f>, B<-fcog>, B<-fsave-data>, B<-fppaddr>, B<-fwarn-sv>,
B<-fuse-script-name>, B<-fsave-sig-hash>, B<-On>, B<-O0>, B<-O1>, B<-O2>,
B<-llimit>

=item EXAMPLES

=item BUGS

=item AUTHOR

=back

=head2 B::CC - Perl compiler's optimized C translation backend

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

B<-ofilename>, B<-v>, B<-->, B<-uPackname>, B<-mModulename>, B<-D>, B<-Dr>,
B<-DO>, B<-Ds>, B<-Dp>, B<-Dq>, B<-Dl>, B<-Dt>, B<-f>,
B<-ffreetmps-each-bblock>, B<-ffreetmps-each-loop>, B<-fomit-taint>, B<-On>

=item EXAMPLES

=item BUGS

=item DIFFERENCES

=over 4

=item Loops

=item Context of ".."

=item Arithmetic

=item Deprecated features

=back

=item AUTHOR

=back

=head2 B::Concise - Walk Perl syntax tree, printing concise info about ops

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLE

=item OPTIONS

B<-basic>, B<-exec>, B<-tree>, B<-compact>, B<-loose>, B<-vt>, B<-ascii>,
B<-main>, B<-base>I<n>, B<-bigendian>, B<-littleendian>, B<-concise>,
B<-terse>, B<-linenoise>, B<-debug>, B<-env>

=item FORMATTING SPECIFICATIONS

B<(x(>I<exec_text>B<;>I<basic_text>B<)x)>, B<(*(>I<text>B<)*)>,
B<(*(>I<text1>B<;>I<text2>B<)*)>, B<(?(>I<text1>B<#>I<var>I<Text2>B<)?)>,
B<#>I<var>, B<#>I<var>I<N>, B<~>, B<#addr>, B<#arg>, B<#class>,
B<#classsym>, B<#coplabel>, B<#exname>, B<#extarg>, B<#firstaddr>,
B<#flags>, B<#flagval>, B<#hyphseq>, B<#label>, B<#lastaddr>, B<#name>,
B<#NAME>, B<#next>, B<#nextaddr>, B<#noise>, B<#private>, B<#privval>,
B<#seq>, B<#seqnum>, B<#sibaddr>, B<#svaddr>, B<#svclass>, B<#svval>,
B<#targ>, B<#targarg>, B<#targarglife>, B<#typenum>

=item ABBREVIATIONS

=over 4

=item OP flags abbreviations

=item OP class abbreviations

=back

=item Using B::Concise outside of the O framework

=item AUTHOR

=back

=head2 B::Debug - Walk Perl syntax tree, printing debug info about ops

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 B::Deparse - Perl compiler backend to produce perl code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

B<-l>, B<-p>, B<-P>, B<-q>, B<-f>I<FILE>, B<-s>I<LETTERS>, B<C>,
B<i>I<NUMBER>, B<T>, B<v>I<STRING>B<.>, B<-x>I<LEVEL>

=item USING B::Deparse AS A MODULE

=over 4

=item Synopsis

=item Description

=item new

=item ambient_pragmas

strict, $[, bytes, utf8, integer, re, warnings, hint_bits, warning_bits

=item coderef2text

=back

=item BUGS

=item AUTHOR

=back

=head2 B::Disassembler - Disassemble Perl bytecode

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 B::Lint - Perl lint

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS AND LINT CHECKS

B<context>, B<implicit-read> and B<implicit-write>, B<dollar-underscore>,
B<private-names>, B<undefined-subs>, B<regexp-variables>, B<all>, B<none>

=item NON LINT-CHECK OPTIONS

B<-u Package>

=item BUGS

=item AUTHOR

=back

=head2 B::O, O - Generic interface to Perl Compiler backends

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONVENTIONS

=item IMPLEMENTATION

=item BUGS

=item AUTHOR

=back

=head2 B::Showlex - Show lexical variables used in functions or files

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 B::Stackobj - Helper module for CC backend

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 B::Stash - show what stashes are loaded

=head2 B::Terse - Walk Perl syntax tree, printing terse info about ops

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 B::Xref - Generates cross reference reports for Perl programs

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

C<-oFILENAME>, C<-r>, C<-d>, C<-D[tO]>

=item BUGS

=item AUTHOR

=back

=head2 Bblock, B::Bblock - Walk basic blocks

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Functions

B<find_leaders>

=back

=item AUTHOR

=back

=head2 Benchmark - benchmark running times of Perl code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods

new, debug, iters

=item Standard Exports

timeit(COUNT, CODE), timethis ( COUNT, CODE, [ TITLE, [ STYLE ]] ),
timethese ( COUNT, CODEHASHREF, [ STYLE ] ), timediff ( T1, T2 ), timestr (
TIMEDIFF, [ STYLE, [ FORMAT ] ] )

=item Optional Exports

clearcache ( COUNT ), clearallcache ( ), cmpthese ( COUT, CODEHASHREF, [
STYLE ] ), cmpthese ( RESULTSHASHREF, [ STYLE ] ), countit(TIME, CODE),
disablecache ( ), enablecache ( ), timesum ( T1, T2 )

=back

=item NOTES

=item EXAMPLES

=item INHERITANCE

=item CAVEATS

=item SEE ALSO

=item AUTHORS

=item MODIFICATION HISTORY

=back

=head2 ByteLoader - load byte compiled perl code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 Bytecode, B::Bytecode - Perl compiler's bytecode backend

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

B<-ofilename>, B<-afilename>, B<-->, B<-f>, B<-fcompress-nullops>,
B<-fomit-sequence-numbers>, B<-fbypass-nullops>, B<-On>, B<-D>, B<-Do>,
B<-Db>, B<-Da>, B<-DC>, B<-S>, B<-upackage>

=item EXAMPLES

=item BUGS

=item AUTHORS

=back

=head2 CGI - Simple Common Gateway Interface Class

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=over 4

=item PROGRAMMING STYLE

=item CALLING CGI.PM ROUTINES

=item CREATING A NEW QUERY OBJECT (OBJECT-ORIENTED STYLE):

=item CREATING A NEW QUERY OBJECT FROM AN INPUT FILE

=item FETCHING A LIST OF KEYWORDS FROM THE QUERY:

=item FETCHING THE NAMES OF ALL THE PARAMETERS PASSED TO YOUR SCRIPT:

=item FETCHING THE VALUE OR VALUES OF A SINGLE NAMED PARAMETER:

=item SETTING THE VALUE(S) OF A NAMED PARAMETER:

=item APPENDING ADDITIONAL VALUES TO A NAMED PARAMETER:

=item IMPORTING ALL PARAMETERS INTO A NAMESPACE:

=item DELETING A PARAMETER COMPLETELY:

=item DELETING ALL PARAMETERS:

=item DIRECT ACCESS TO THE PARAMETER LIST:

=item FETCHING THE PARAMETER LIST AS A HASH:

=item SAVING THE STATE OF THE SCRIPT TO A FILE:

=item RETRIEVING CGI ERRORS

=item USING THE FUNCTION-ORIENTED INTERFACE

B<:cgi>, B<:form>, B<:html2>, B<:html3>, B<:html4>, B<:netscape>, B<:html>,
B<:standard>, B<:all>

=item PRAGMAS

-any, -compile, -nosticky, -no_undef_params, -no_xhtml, -nph,
-newstyle_urls, -oldstyle_urls, -autoload, -no_debug, -debug,
-private_tempfiles

=item SPECIAL FORMS FOR IMPORTING HTML-TAG FUNCTIONS

1. start_table() (generates a <table> tag), 2. end_table() (generates a
</table> tag), 3. start_ul() (generates a <ul> tag), 4. end_ul() (generates
a </ul> tag)

=back

=item GENERATING DYNAMIC DOCUMENTS

=over 4

=item CREATING A STANDARD HTTP HEADER:

=item GENERATING A REDIRECTION HEADER

=item CREATING THE HTML DOCUMENT HEADER

B<Parameters:>, 4, 5, 6..

=item ENDING THE HTML DOCUMENT:

=item CREATING A SELF-REFERENCING URL THAT PRESERVES STATE INFORMATION:

=item OBTAINING THE SCRIPT'S URL

B<-absolute>, B<-relative>, B<-full>, B<-path> (B<-path_info>), B<-query>
(B<-query_string>), B<-base>

=item MIXING POST AND URL PARAMETERS

=back

=item CREATING STANDARD HTML ELEMENTS:

=over 4

=item PROVIDING ARGUMENTS TO HTML SHORTCUTS

=item THE DISTRIBUTIVE PROPERTY OF HTML SHORTCUTS

=item HTML SHORTCUTS AND LIST INTERPOLATION

=item NON-STANDARD HTML SHORTCUTS

=item AUTOESCAPING HTML

$escaped_string = escapeHTML("unescaped string");, $charset =
charset([$charset]);, $flag = autoEscape([$flag]);

=item PRETTY-PRINTING HTML

=back

=item CREATING FILL-OUT FORMS:

=over 4

=item CREATING AN ISINDEX TAG

=item STARTING AND ENDING A FORM

B<application/x-www-form-urlencoded>, B<multipart/form-data>

=item CREATING A TEXT FIELD

B<Parameters>

=item CREATING A BIG TEXT FIELD

=item CREATING A PASSWORD FIELD

=item CREATING A FILE UPLOAD FIELD

B<Parameters>

=item CREATING A POPUP MENU

=item CREATING A SCROLLING LIST

B<Parameters:>

=item CREATING A GROUP OF RELATED CHECKBOXES

B<Parameters:>

=item CREATING A STANDALONE CHECKBOX

B<Parameters:>

=item CREATING A RADIO BUTTON GROUP

B<Parameters:>

=item CREATING A SUBMIT BUTTON 

B<Parameters:>

=item CREATING A RESET BUTTON

=item CREATING A DEFAULT BUTTON

=item CREATING A HIDDEN FIELD

B<Parameters:>

=item CREATING A CLICKABLE IMAGE BUTTON

B<Parameters:>

=item CREATING A JAVASCRIPT ACTION BUTTON

=back

=item HTTP COOKIES

1. an expiration time, 2. a domain, 3. a path, 4. a "secure" flag,
B<-name>, B<-value>, B<-path>, B<-domain>, B<-expires>, B<-secure>

=item WORKING WITH FRAMES

1. Create a <Frameset> document, 2. Specify the destination for the
document in the HTTP header, 3. Specify the destination for the document in
the <form> tag

=item LIMITED SUPPORT FOR CASCADING STYLE SHEETS

=item DEBUGGING

=over 4

=item DUMPING OUT ALL THE NAME/VALUE PAIRS

=back

=item FETCHING ENVIRONMENT VARIABLES

B<Accept()>, B<raw_cookie()>, B<user_agent()>, B<path_info()>,
B<path_translated()>, B<remote_host()>, B<script_name()>, B<referer()>,
B<auth_type ()>, B<server_name ()>, B<virtual_host ()>, B<server_port ()>,
B<server_software ()>, B<remote_user ()>, B<user_name ()>,
B<request_method()>, B<content_type()>, B<http()>, B<https()>

=item USING NPH SCRIPTS

In the B<use> statement, By calling the B<nph()> method:, By using B<-nph>
parameters

=item Server Push

multipart_init(), multipart_start(), multipart_end(), multipart_final()

=item Avoiding Denial of Service Attacks

B<$CGI::POST_MAX>, B<$CGI::DISABLE_UPLOADS>, B<1. On a script-by-script
basis>, B<2. Globally for all scripts>

=item COMPATIBILITY WITH CGI-LIB.PL

=item AUTHOR INFORMATION

=item CREDITS

Matt Heffron (heffron@@falstaff.css.beckman.com), James Taylor
(james.taylor@@srs.gov), Scott Anguish <sanguish@@digifix.com>, Mike Jewell
(mlj3u@@virginia.edu), Timothy Shimmin (tes@@kbs.citri.edu.au), Joergen Haegg
(jh@@axis.se), Laurent Delfosse (delfosse@@delfosse.com), Richard Resnick
(applepi1@@aol.com), Craig Bishop (csb@@barwonwater.vic.gov.au), Tony Curtis
(tc@@vcpc.univie.ac.at), Tim Bunce (Tim.Bunce@@ig.co.uk), Tom Christiansen
(tchrist@@convex.com), Andreas Koenig (k@@franz.ww.TU-Berlin.DE), Tim
MacKenzie (Tim.MacKenzie@@fulcrum.com.au), Kevin B. Hendricks
(kbhend@@dogwood.tyler.wm.edu), Stephen Dahmen (joyfire@@inxpress.net), Ed
Jordan (ed@@fidalgo.net), David Alan Pisoni (david@@cnation.com), Doug
MacEachern (dougm@@opengroup.org), Robin Houston (robin@@oneworld.org),
...and many many more..

=item A COMPLETE EXAMPLE OF A SIMPLE FORM-BASED SCRIPT

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Apache - Backward compatibility module for CGI.pm

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Carp, B<CGI::Carp> - CGI routines for writing to the HTTPD (or
other) error log

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item REDIRECTING ERROR MESSAGES

=item MAKING PERL ERRORS APPEAR IN THE BROWSER WINDOW

=over 4

=item Changing the default message

=back

=item MAKING WARNINGS APPEAR AS HTML COMMENTS

=item CHANGE LOG

=item AUTHORS

=item SEE ALSO

=back

=head2 CGI::Cookie - Interface to Netscape Cookies

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USING CGI::Cookie

B<1. expiration date>, B<2. domain>, B<3. path>, B<4. secure flag>

=over 4

=item Creating New Cookies

=item Sending the Cookie to the Browser

=item Recovering Previous Cookies

=item Manipulating Cookies

B<name()>, B<value()>, B<domain()>, B<path()>, B<expires()>

=back

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Fast - CGI Interface for Fast CGI

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OTHER PIECES OF THE PUZZLE

=item WRITING FASTCGI PERL SCRIPTS

=item INSTALLING FASTCGI SCRIPTS

=item USING FASTCGI SCRIPTS AS CGI SCRIPTS

=item EXTERNAL FASTCGI SERVER INVOCATION

FCGI_SOCKET_PATH, FCGI_LISTEN_QUEUE

=item CAVEATS

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Pretty - module to produce nicely formatted HTML code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Tags that won't be formatted

=item Customizing the Indenting

=back

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 CGI::Push - Simple Interface to Server Push

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USING CGI::Push

-next_page, -last_page, -type, -delay, -cookie, -target, -expires, -nph

=over 4

=item Heterogeneous Pages

=item Changing the Page Delay on the Fly

=back

=item INSTALLING CGI::Push SCRIPTS

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Switch - Backward compatibility module for defunct CGI::Switch

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Util - Internal utilities used by CGI module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR INFORMATION

=item SEE ALSO

=back

=head2 CPAN - query, download and build perl modules from CPAN sites

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Interactive Mode

Searching for authors, bundles, distribution files and modules, make, test,
install, clean	modules or distributions, get, readme, look module or
distribution, ls author, Signals

=item CPAN::Shell

=item autobundle

=item recompile

=item The four C<CPAN::*> Classes: Author, Bundle, Module, Distribution

=item Programmer's interface

expand($type,@@things), expandany(@@things), Programming Examples

=item Methods in the other Classes

CPAN::Author::as_glimpse(), CPAN::Author::as_string(),
CPAN::Author::email(), CPAN::Author::fullname(), CPAN::Author::name(),
CPAN::Bundle::as_glimpse(), CPAN::Bundle::as_string(),
CPAN::Bundle::clean(), CPAN::Bundle::contains(),
CPAN::Bundle::force($method,@@args), CPAN::Bundle::get(),
CPAN::Bundle::inst_file(), CPAN::Bundle::inst_version(),
CPAN::Bundle::uptodate(), CPAN::Bundle::install(), CPAN::Bundle::make(),
CPAN::Bundle::readme(), CPAN::Bundle::test(),
CPAN::Distribution::as_glimpse(), CPAN::Distribution::as_string(),
CPAN::Distribution::clean(), CPAN::Distribution::containsmods(),
CPAN::Distribution::cvs_import(), CPAN::Distribution::dir(),
CPAN::Distribution::force($method,@@args), CPAN::Distribution::get(),
CPAN::Distribution::install(), CPAN::Distribution::isa_perl(),
CPAN::Distribution::look(), CPAN::Distribution::make(),
CPAN::Distribution::prereq_pm(), CPAN::Distribution::readme(),
CPAN::Distribution::test(), CPAN::Distribution::uptodate(),
CPAN::Index::force_reload(), CPAN::Index::reload(), CPAN::InfoObj::dump(),
CPAN::Module::as_glimpse(), CPAN::Module::as_string(),
CPAN::Module::clean(), CPAN::Module::cpan_file(),
CPAN::Module::cpan_version(), CPAN::Module::cvs_import(),
CPAN::Module::description(), CPAN::Module::force($method,@@args),
CPAN::Module::get(), CPAN::Module::inst_file(),
CPAN::Module::inst_version(), CPAN::Module::install(),
CPAN::Module::look(), CPAN::Module::make(),
CPAN::Module::manpage_headline(), CPAN::Module::readme(),
CPAN::Module::test(), CPAN::Module::uptodate(), CPAN::Module::userid()

=item Cache Manager

=item Bundles

=item Prerequisites

=item Finding packages and VERSION

=item Debugging

=item Floppy, Zip, Offline Mode

=back

=item CONFIGURATION

C<o conf E<lt>scalar optionE<gt>>, C<o conf E<lt>scalar optionE<gt>
E<lt>valueE<gt>>, C<o conf E<lt>list optionE<gt>>, C<o conf E<lt>list
optionE<gt> [shift|pop]>, C<o conf E<lt>list optionE<gt>
[unshift|push|splice] E<lt>listE<gt>>

=over 4

=item Note on urllist parameter's format

=item urllist parameter has CD-ROM support

=back

=item SECURITY

=item EXPORT

=item POPULATE AN INSTALLATION WITH LOTS OF MODULES

=item WORKING WITH CPAN.pm BEHIND FIREWALLS

=over 4

=item Three basic types of firewalls

http firewall, ftp firewall, One way visibility, SOCKS, IP Masquerade

=item Configuring lynx or ncftp for going through a firewall

=back

=item FAQ

1), 2), 3), 4), 5), 6), 7), 8), 9), 10)

=item BUGS

=item AUTHOR

=item TRANSLATIONS

=item SEE ALSO

=back

=head2 CPAN::FirstTime - Utility for CPAN::Config file Initialization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 CPANox, CPAN::Nox - Wrapper around CPAN.pm without using any XS
module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item  SEE ALSO

=back

=head2 Carp, carp    - warn of errors (from perspective of caller)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Forcing a Stack Trace

=back

=item BUGS

=back

=head2 Carp::Heavy, Carp heavy machinery - no user serviceable parts inside

=head2 Class::ISA -- report the search path for a class's ISA tree

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

the function Class::ISA::super_path($CLASS), the function
Class::ISA::self_and_super_path($CLASS), the function
Class::ISA::self_and_super_versions($CLASS)

=item CAUTIONARY NOTES

=item COPYRIGHT

=item AUTHOR

=back

=head2 Class::Struct - declare struct-like datatypes as Perl classes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The C<struct()> function

=item Class Creation at Compile Time

=item Element Types and Accessor Methods

Scalar (C<'$'> or C<'*$'>), Array (C<'@@'> or C<'*@@'>), Hash (C<'%'> or
C<'*%'>), Class (C<'Class_Name'> or C<'*Class_Name'>)

=item Initializing with C<new>

=back

=item EXAMPLES

Example 1, Example 2, Example 3

=item Author and Modification History

=back

=head2 Config - access Perl configuration information

=over 4

=item SYNOPSIS

=item DESCRIPTION

myconfig(), config_sh(), config_vars(@@names)

=item EXAMPLE

=item WARNING

=item GLOSSARY

=over 4

=item _

C<_a>, C<_exe>, C<_o>

=item a

C<afs>, C<afsroot>, C<alignbytes>, C<ansi2knr>, C<aphostname>,
C<api_revision>, C<api_subversion>, C<api_version>, C<api_versionstring>,
C<ar>, C<archlib>, C<archlibexp>, C<archname64>, C<archname>, C<archobjs>,
C<asctime_r_proto>, C<awk>

=item b

C<baserev>, C<bash>, C<bin>, C<binexp>, C<bison>, C<byacc>, C<byteorder>

=item c

C<c>, C<castflags>, C<cat>, C<cc>, C<cccdlflags>, C<ccdlflags>, C<ccflags>,
C<ccflags_uselargefiles>, C<ccname>, C<ccsymbols>, C<ccversion>, C<cf_by>,
C<cf_email>, C<cf_time>, C<charsize>, C<chgrp>, C<chmod>, C<chown>,
C<clocktype>, C<comm>, C<compress>, C<contains>, C<cp>, C<cpio>, C<cpp>,
C<cpp_stuff>, C<cppccsymbols>, C<cppflags>, C<cpplast>, C<cppminus>,
C<cpprun>, C<cppstdin>, C<cppsymbols>, C<crypt_r_proto>, C<cryptlib>,
C<csh>, C<ctermid_r_proto>, C<ctime_r_proto>

=item d

C<d__fwalk>, C<d_access>, C<d_accessx>, C<d_alarm>, C<d_archlib>,
C<d_asctime_r>, C<d_atolf>, C<d_atoll>, C<d_attribut>, C<d_bcmp>,
C<d_bcopy>, C<d_bsd>, C<d_bsdgetpgrp>, C<d_bsdsetpgrp>, C<d_bzero>,
C<d_casti32>, C<d_castneg>, C<d_charvspr>, C<d_chown>, C<d_chroot>,
C<d_chsize>, C<d_class>, C<d_closedir>, C<d_cmsghdr_s>, C<d_const>,
C<d_crypt>, C<d_crypt_r>, C<d_csh>, C<d_ctermid_r>, C<d_ctime_r>,
C<d_cuserid>, C<d_dbl_dig>, C<d_dbminitproto>, C<d_difftime>, C<d_dirfd>,
C<d_dirnamlen>, C<d_dlerror>, C<d_dlopen>, C<d_dlsymun>, C<d_dosuid>,
C<d_drand48_r>, C<d_drand48proto>, C<d_dup2>, C<d_eaccess>, C<d_endgrent>,
C<d_endgrent_r>, C<d_endhent>, C<d_endhostent_r>, C<d_endnent>,
C<d_endnetent_r>, C<d_endpent>, C<d_endprotoent_r>, C<d_endpwent>,
C<d_endpwent_r>, C<d_endsent>, C<d_endservent_r>, C<d_eofnblk>,
C<d_eunice>, C<d_fchdir>, C<d_fchmod>, C<d_fchown>, C<d_fcntl>,
C<d_fcntl_can_lock>, C<d_fd_macros>, C<d_fd_set>, C<d_fds_bits>,
C<d_fgetpos>, C<d_finite>, C<d_finitel>, C<d_flexfnam>, C<d_flock>,
C<d_flockproto>, C<d_fork>, C<d_fp_class>, C<d_fpathconf>, C<d_fpclass>,
C<d_fpclassify>, C<d_fpclassl>, C<d_fpos64_t>, C<d_frexpl>, C<d_fs_data_s>,
C<d_fseeko>, C<d_fsetpos>, C<d_fstatfs>, C<d_fstatvfs>, C<d_fsync>,
C<d_ftello>, C<d_ftime>, C<d_Gconvert>, C<d_getcwd>, C<d_getespwnam>,
C<d_getfsstat>, C<d_getgrent>, C<d_getgrent_r>, C<d_getgrgid_r>,
C<d_getgrnam_r>, C<d_getgrps>, C<d_gethbyaddr>, C<d_gethbyname>,
C<d_gethent>, C<d_gethname>, C<d_gethostbyaddr_r>, C<d_gethostbyname_r>,
C<d_gethostent_r>, C<d_gethostprotos>, C<d_getitimer>, C<d_getlogin>,
C<d_getlogin_r>, C<d_getmnt>, C<d_getmntent>, C<d_getnbyaddr>,
C<d_getnbyname>, C<d_getnent>, C<d_getnetbyaddr_r>, C<d_getnetbyname_r>,
C<d_getnetent_r>, C<d_getnetprotos>, C<d_getpagsz>, C<d_getpbyname>,
C<d_getpbynumber>, C<d_getpent>, C<d_getpgid>, C<d_getpgrp2>, C<d_getpgrp>,
C<d_getppid>, C<d_getprior>, C<d_getprotobyname_r>,
C<d_getprotobynumber_r>, C<d_getprotoent_r>, C<d_getprotoprotos>,
C<d_getprpwnam>, C<d_getpwent>, C<d_getpwent_r>, C<d_getpwnam_r>,
C<d_getpwuid_r>, C<d_getsbyname>, C<d_getsbyport>, C<d_getsent>,
C<d_getservbyname_r>, C<d_getservbyport_r>, C<d_getservent_r>,
C<d_getservprotos>, C<d_getspnam>, C<d_getspnam_r>, C<d_gettimeod>,
C<d_gmtime_r>, C<d_gnulibc>, C<d_grpasswd>, C<d_hasmntopt>, C<d_htonl>,
C<d_index>, C<d_inetaton>, C<d_int64_t>, C<d_isascii>, C<d_isfinite>,
C<d_isinf>, C<d_isnan>, C<d_isnanl>, C<d_killpg>, C<d_lchown>,
C<d_ldbl_dig>, C<d_link>, C<d_localtime_r>, C<d_locconv>, C<d_lockf>,
C<d_longdbl>, C<d_longlong>, C<d_lseekproto>, C<d_lstat>, C<d_madvise>,
C<d_mblen>, C<d_mbstowcs>, C<d_mbtowc>, C<d_memchr>, C<d_memcmp>,
C<d_memcpy>, C<d_memmove>, C<d_memset>, C<d_mkdir>, C<d_mkdtemp>,
C<d_mkfifo>, C<d_mkstemp>, C<d_mkstemps>, C<d_mktime>, C<d_mmap>,
C<d_modfl>, C<d_modfl_pow32_bug>, C<d_mprotect>, C<d_msg>, C<d_msg_ctrunc>,
C<d_msg_dontroute>, C<d_msg_oob>, C<d_msg_peek>, C<d_msg_proxy>,
C<d_msgctl>, C<d_msgget>, C<d_msghdr_s>, C<d_msgrcv>, C<d_msgsnd>,
C<d_msync>, C<d_munmap>, C<d_mymalloc>, C<d_nice>, C<d_nl_langinfo>,
C<d_nv_preserves_uv>, C<d_off64_t>, C<d_old_pthread_create_joinable>,
C<d_oldpthreads>, C<d_oldsock>, C<d_open3>, C<d_pathconf>, C<d_pause>,
C<d_perl_otherlibdirs>, C<d_phostname>, C<d_pipe>, C<d_poll>,
C<d_portable>, C<d_PRId64>, C<d_PRIeldbl>, C<d_PRIEUldbl>, C<d_PRIfldbl>,
C<d_PRIFUldbl>, C<d_PRIgldbl>, C<d_PRIGUldbl>, C<d_PRIi64>, C<d_PRIo64>,
C<d_PRIu64>, C<d_PRIx64>, C<d_PRIXU64>, C<d_procselfexe>,
C<d_pthread_atfork>, C<d_pthread_yield>, C<d_pwage>, C<d_pwchange>,
C<d_pwclass>, C<d_pwcomment>, C<d_pwexpire>, C<d_pwgecos>, C<d_pwpasswd>,
C<d_pwquota>, C<d_qgcvt>, C<d_quad>, C<d_random_r>, C<d_readdir64_r>,
C<d_readdir>, C<d_readdir_r>, C<d_readlink>, C<d_readv>, C<d_recvmsg>,
C<d_rename>, C<d_rewinddir>, C<d_rmdir>, C<d_safebcpy>, C<d_safemcpy>,
C<d_sanemcmp>, C<d_sbrkproto>, C<d_sched_yield>, C<d_scm_rights>,
C<d_SCNfldbl>, C<d_seekdir>, C<d_select>, C<d_sem>, C<d_semctl>,
C<d_semctl_semid_ds>, C<d_semctl_semun>, C<d_semget>, C<d_semop>,
C<d_sendmsg>, C<d_setegid>, C<d_seteuid>, C<d_setgrent>, C<d_setgrent_r>,
C<d_setgrps>, C<d_sethent>, C<d_sethostent_r>, C<d_setitimer>,
C<d_setlinebuf>, C<d_setlocale>, C<d_setlocale_r>, C<d_setnent>,
C<d_setnetent_r>, C<d_setpent>, C<d_setpgid>, C<d_setpgrp2>, C<d_setpgrp>,
C<d_setprior>, C<d_setproctitle>, C<d_setprotoent_r>, C<d_setpwent>,
C<d_setpwent_r>, C<d_setregid>, C<d_setresgid>, C<d_setresuid>,
C<d_setreuid>, C<d_setrgid>, C<d_setruid>, C<d_setsent>, C<d_setservent_r>,
C<d_setsid>, C<d_setvbuf>, C<d_sfio>, C<d_shm>, C<d_shmat>,
C<d_shmatprototype>, C<d_shmctl>, C<d_shmdt>, C<d_shmget>, C<d_sigaction>,
C<d_sigprocmask>, C<d_sigsetjmp>, C<d_sockatmark>, C<d_sockatmarkproto>,
C<d_socket>, C<d_socklen_t>, C<d_sockpair>, C<d_socks5_init>, C<d_sqrtl>,
C<d_srand48_r>, C<d_srandom_r>, C<d_sresgproto>, C<d_sresuproto>,
C<d_statblks>, C<d_statfs_f_flags>, C<d_statfs_s>, C<d_statvfs>,
C<d_stdio_cnt_lval>, C<d_stdio_ptr_lval>, C<d_stdio_ptr_lval_nochange_cnt>,
C<d_stdio_ptr_lval_sets_cnt>, C<d_stdio_stream_array>, C<d_stdiobase>,
C<d_stdstdio>, C<d_strchr>, C<d_strcoll>, C<d_strctcpy>, C<d_strerrm>,
C<d_strerror>, C<d_strerror_r>, C<d_strftime>, C<d_strtod>, C<d_strtol>,
C<d_strtold>, C<d_strtoll>, C<d_strtoq>, C<d_strtoul>, C<d_strtoull>,
C<d_strtouq>, C<d_strxfrm>, C<d_suidsafe>, C<d_symlink>, C<d_syscall>,
C<d_syscallproto>, C<d_sysconf>, C<d_sysernlst>, C<d_syserrlst>,
C<d_system>, C<d_tcgetpgrp>, C<d_tcsetpgrp>, C<d_telldir>,
C<d_telldirproto>, C<d_time>, C<d_times>, C<d_tm_tm_gmtoff>,
C<d_tm_tm_zone>, C<d_tmpnam_r>, C<d_truncate>, C<d_ttyname_r>, C<d_tzname>,
C<d_u32align>, C<d_ualarm>, C<d_umask>, C<d_uname>, C<d_union_semun>,
C<d_unordered>, C<d_usleep>, C<d_usleepproto>, C<d_ustat>, C<d_vendorarch>,
C<d_vendorbin>, C<d_vendorlib>, C<d_vfork>, C<d_void_closedir>,
C<d_voidsig>, C<d_voidtty>, C<d_volatile>, C<d_vprintf>, C<d_wait4>,
C<d_waitpid>, C<d_wcstombs>, C<d_wctomb>, C<d_writev>, C<d_xenix>, C<date>,
C<db_hashtype>, C<db_prefixtype>, C<db_version_major>, C<db_version_minor>,
C<db_version_patch>, C<defvoidused>, C<direntrytype>, C<dlext>, C<dlsrc>,
C<doublesize>, C<drand01>, C<drand48_r_proto>, C<dynamic_ext>

=item e

C<eagain>, C<ebcdic>, C<echo>, C<egrep>, C<emacs>, C<endgrent_r_proto>,
C<endhostent_r_proto>, C<endnetent_r_proto>, C<endprotoent_r_proto>,
C<endpwent_r_proto>, C<endservent_r_proto>, C<eunicefix>, C<exe_ext>,
C<expr>, C<extensions>, C<extras>

=item f

C<fflushall>, C<fflushNULL>, C<find>, C<firstmakefile>, C<flex>,
C<fpossize>, C<fpostype>, C<freetype>, C<from>, C<full_ar>, C<full_csh>,
C<full_sed>

=item g

C<gccosandvers>, C<gccversion>, C<getgrent_r_proto>, C<getgrgid_r_proto>,
C<getgrnam_r_proto>, C<gethostbyaddr_r_proto>, C<gethostbyname_r_proto>,
C<gethostent_r_proto>, C<getlogin_r_proto>, C<getnetbyaddr_r_proto>,
C<getnetbyname_r_proto>, C<getnetent_r_proto>, C<getprotobyname_r_proto>,
C<getprotobynumber_r_proto>, C<getprotoent_r_proto>, C<getpwent_r_proto>,
C<getpwnam_r_proto>, C<getpwuid_r_proto>, C<getservbyname_r_proto>,
C<getservbyport_r_proto>, C<getservent_r_proto>, C<getspnam_r_proto>,
C<gidformat>, C<gidsign>, C<gidsize>, C<gidtype>, C<glibpth>, C<gmake>,
C<gmtime_r_proto>, C<gnulibc_version>, C<grep>, C<groupcat>, C<groupstype>,
C<gzip>

=item h

C<h_fcntl>, C<h_sysfile>, C<hint>, C<hostcat>

=item i

C<i16size>, C<i16type>, C<i32size>, C<i32type>, C<i64size>, C<i64type>,
C<i8size>, C<i8type>, C<i_arpainet>, C<i_bsdioctl>, C<i_crypt>, C<i_db>,
C<i_dbm>, C<i_dirent>, C<i_dld>, C<i_dlfcn>, C<i_fcntl>, C<i_float>,
C<i_fp>, C<i_fp_class>, C<i_gdbm>, C<i_grp>, C<i_ieeefp>, C<i_inttypes>,
C<i_langinfo>, C<i_libutil>, C<i_limits>, C<i_locale>, C<i_machcthr>,
C<i_malloc>, C<i_math>, C<i_memory>, C<i_mntent>, C<i_ndbm>, C<i_netdb>,
C<i_neterrno>, C<i_netinettcp>, C<i_niin>, C<i_poll>, C<i_prot>,
C<i_pthread>, C<i_pwd>, C<i_rpcsvcdbm>, C<i_sfio>, C<i_sgtty>, C<i_shadow>,
C<i_socks>, C<i_stdarg>, C<i_stddef>, C<i_stdlib>, C<i_string>,
C<i_sunmath>, C<i_sysaccess>, C<i_sysdir>, C<i_sysfile>, C<i_sysfilio>,
C<i_sysin>, C<i_sysioctl>, C<i_syslog>, C<i_sysmman>, C<i_sysmode>,
C<i_sysmount>, C<i_sysndir>, C<i_sysparam>, C<i_sysresrc>, C<i_syssecrt>,
C<i_sysselct>, C<i_syssockio>, C<i_sysstat>, C<i_sysstatfs>,
C<i_sysstatvfs>, C<i_systime>, C<i_systimek>, C<i_systimes>, C<i_systypes>,
C<i_sysuio>, C<i_sysun>, C<i_sysutsname>, C<i_sysvfs>, C<i_syswait>,
C<i_termio>, C<i_termios>, C<i_time>, C<i_unistd>, C<i_ustat>, C<i_utime>,
C<i_values>, C<i_varargs>, C<i_varhdr>, C<i_vfork>,
C<ignore_versioned_solibs>, C<inc_version_list>, C<inc_version_list_init>,
C<incpath>, C<inews>, C<installarchlib>, C<installbin>, C<installman1dir>,
C<installman3dir>, C<installprefix>, C<installprefixexp>,
C<installprivlib>, C<installscript>, C<installsitearch>, C<installsitebin>,
C<installsitelib>, C<installstyle>, C<installusrbinperl>,
C<installvendorarch>, C<installvendorbin>, C<installvendorlib>, C<intsize>,
C<issymlink>, C<ivdformat>, C<ivsize>, C<ivtype>

=item k

C<known_extensions>, C<ksh>

=item l

C<ld>, C<lddlflags>, C<ldflags>, C<ldflags_uselargefiles>, C<ldlibpthname>,
C<less>, C<lib_ext>, C<libc>, C<libperl>, C<libpth>, C<libs>, C<libsdirs>,
C<libsfiles>, C<libsfound>, C<libspath>, C<libswanted>,
C<libswanted_uselargefiles>, C<line>, C<lint>, C<lkflags>, C<ln>, C<lns>,
C<localtime_r_proto>, C<locincpth>, C<loclibpth>, C<longdblsize>,
C<longlongsize>, C<longsize>, C<lp>, C<lpr>, C<ls>, C<lseeksize>,
C<lseektype>

=item m

C<mail>, C<mailx>, C<make>, C<make_set_make>, C<mallocobj>, C<mallocsrc>,
C<malloctype>, C<man1dir>, C<man1direxp>, C<man1ext>, C<man3dir>,
C<man3direxp>, C<man3ext>

=item M

C<Mcc>, C<mips_type>, C<mkdir>, C<mmaptype>, C<modetype>, C<more>,
C<multiarch>, C<mv>, C<myarchname>, C<mydomain>, C<myhostname>, C<myuname>

=item n

C<n>, C<need_va_copy>, C<netdb_hlen_type>, C<netdb_host_type>,
C<netdb_name_type>, C<netdb_net_type>, C<nm>, C<nm_opt>, C<nm_so_opt>,
C<nonxs_ext>, C<nroff>, C<nv_preserves_uv_bits>, C<nveformat>,
C<nvEUformat>, C<nvfformat>, C<nvFUformat>, C<nvgformat>, C<nvGUformat>,
C<nvsize>, C<nvtype>

=item o

C<o_nonblock>, C<obj_ext>, C<old_pthread_create_joinable>, C<optimize>,
C<orderlib>, C<osname>, C<osvers>, C<otherlibdirs>

=item p

C<package>, C<pager>, C<passcat>, C<patchlevel>, C<path_sep>, C<perl5>,
C<perl>, C<perl_patchlevel>

=item P

C<PERL_REVISION>, C<PERL_SUBVERSION>, C<PERL_VERSION>, C<perladmin>,
C<perllibs>, C<perlpath>, C<pg>, C<phostname>, C<pidtype>, C<plibpth>,
C<pm_apiversion>, C<pmake>, C<pr>, C<prefix>, C<prefixexp>, C<privlib>,
C<privlibexp>, C<procselfexe>, C<prototype>, C<ptrsize>

=item q

C<quadkind>, C<quadtype>

=item r

C<randbits>, C<randfunc>, C<random_r_proto>, C<randseedtype>, C<ranlib>,
C<rd_nodata>, C<readdir64_r_proto>, C<readdir_r_proto>, C<revision>, C<rm>,
C<rmail>, C<run>, C<runnm>

=item s

C<sched_yield>, C<scriptdir>, C<scriptdirexp>, C<sed>, C<seedfunc>,
C<selectminbits>, C<selecttype>, C<sendmail>, C<setgrent_r_proto>,
C<sethostent_r_proto>, C<setlocale_r_proto>, C<setnetent_r_proto>,
C<setprotoent_r_proto>, C<setpwent_r_proto>, C<setservent_r_proto>, C<sh>,
C<shar>, C<sharpbang>, C<shmattype>, C<shortsize>, C<shrpenv>, C<shsharp>,
C<sig_count>, C<sig_name>, C<sig_name_init>, C<sig_num>, C<sig_num_init>,
C<sig_size>, C<signal_t>, C<sitearch>, C<sitearchexp>, C<sitebin>,
C<sitebinexp>, C<sitelib>, C<sitelib_stem>, C<sitelibexp>, C<siteprefix>,
C<siteprefixexp>, C<sizesize>, C<sizetype>, C<sleep>, C<smail>, C<so>,
C<sockethdr>, C<socketlib>, C<socksizetype>, C<sort>, C<spackage>,
C<spitshell>, C<sPRId64>, C<sPRIeldbl>, C<sPRIEUldbl>, C<sPRIfldbl>,
C<sPRIFUldbl>, C<sPRIgldbl>, C<sPRIGUldbl>, C<sPRIi64>, C<sPRIo64>,
C<sPRIu64>, C<sPRIx64>, C<sPRIXU64>, C<srand48_r_proto>,
C<srandom_r_proto>, C<src>, C<sSCNfldbl>, C<ssizetype>, C<startperl>,
C<startsh>, C<static_ext>, C<stdchar>, C<stdio_base>, C<stdio_bufsiz>,
C<stdio_cnt>, C<stdio_filbuf>, C<stdio_ptr>, C<stdio_stream_array>,
C<strerror_r_proto>, C<strings>, C<submit>, C<subversion>, C<sysman>

=item t

C<tail>, C<tar>, C<targetarch>, C<tbl>, C<tee>, C<test>, C<timeincl>,
C<timetype>, C<tmpnam_r_proto>, C<to>, C<touch>, C<tr>, C<trnl>, C<troff>,
C<ttyname_r_proto>

=item u

C<u16size>, C<u16type>, C<u32size>, C<u32type>, C<u64size>, C<u64type>,
C<u8size>, C<u8type>, C<uidformat>, C<uidsign>, C<uidsize>, C<uidtype>,
C<uname>, C<uniq>, C<uquadtype>, C<use5005threads>, C<use64bitall>,
C<use64bitint>, C<usecrosscompile>, C<usedl>, C<useithreads>,
C<uselargefiles>, C<uselongdouble>, C<usemorebits>, C<usemultiplicity>,
C<usemymalloc>, C<usenm>, C<useopcode>, C<useperlio>, C<useposix>,
C<usereentrant>, C<usesfio>, C<useshrplib>, C<usesocks>, C<usethreads>,
C<usevendorprefix>, C<usevfork>, C<usrinc>, C<uuname>, C<uvoformat>,
C<uvsize>, C<uvtype>, C<uvuformat>, C<uvxformat>, C<uvXUformat>

=item v

C<vendorarch>, C<vendorarchexp>, C<vendorbin>, C<vendorbinexp>,
C<vendorlib>, C<vendorlib_stem>, C<vendorlibexp>, C<vendorprefix>,
C<vendorprefixexp>, C<version>, C<version_patchlevel_string>,
C<versiononly>, C<vi>, C<voidflags>

=item x

C<xlibpth>, C<xs_apiversion>

=item y

C<yacc>, C<yaccflags>

=item z

C<zcat>, C<zip>

=back

=item NOTE

=back

=head2 Cwd - get pathname of current working directory

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item getcwd and friends

getcwd, cwd, fastcwd, fastgetcwd

=item abs_path and friends

abs_path, realpath, fast_abs_path

=item $ENV{PWD}

=back

=item NOTES

=item SEE ALSO

=back

=head2 DB - programmatic interface to the Perl debugging API (draft,
subject to
change)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Global Variables

 $DB::sub,  %DB::sub,  $DB::single,  $DB::signal,  $DB::trace,	@@DB::args, 
@@DB::dbline,  %DB::dbline,  $DB::package,  $DB::filename,  $DB::subname, 
$DB::lineno

=item API Methods

CLIENT->register(), CLIENT->evalcode(STRING), CLIENT->skippkg('D::hide'),
CLIENT->run(), CLIENT->step(), CLIENT->next(), CLIENT->done()

=item Client Callback Methods

CLIENT->init(), CLIENT->prestop([STRING]), CLIENT->stop(), CLIENT->idle(),
CLIENT->poststop([STRING]), CLIENT->evalcode(STRING), CLIENT->cleanup(),
CLIENT->output(LIST)

=back

=item BUGS

=item AUTHOR

=back

=head2 DB_File - Perl5 access to Berkeley DB version 1.x

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<DB_HASH>, B<DB_BTREE>, B<DB_RECNO>

=over 4

=item Using DB_File with Berkeley DB version 2 or greater

=item Interface to Berkeley DB

=item Opening a Berkeley DB Database File

=item Default Parameters

=item In Memory Databases

=back

=item DB_HASH

=over 4

=item A Simple Example

=back

=item DB_BTREE

=over 4

=item Changing the BTREE sort order

=item Handling Duplicate Keys 

=item The get_dup() Method

=item The find_dup() Method

=item The del_dup() Method

=item Matching Partial Keys 

=back

=item DB_RECNO

=over 4

=item The 'bval' Option

=item A Simple Example

=item Extra RECNO Methods

B<$X-E<gt>push(list) ;>, B<$value = $X-E<gt>pop ;>, B<$X-E<gt>shift>,
B<$X-E<gt>unshift(list) ;>, B<$X-E<gt>length>, B<$X-E<gt>splice(offset,
length, elements);>

=item Another Example

=back

=item THE API INTERFACE

B<$status = $X-E<gt>get($key, $value [, $flags]) ;>, B<$status =
$X-E<gt>put($key, $value [, $flags]) ;>, B<$status = $X-E<gt>del($key [,
$flags]) ;>, B<$status = $X-E<gt>fd ;>, B<$status = $X-E<gt>seq($key,
$value, $flags) ;>, B<$status = $X-E<gt>sync([$flags]) ;>

=item DBM FILTERS

B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>

=over 4

=item The Filter

=item An Example -- the NULL termination problem.

=item Another Example -- Key is a C int.

=back

=item HINTS AND TIPS 

=over 4

=item Locking: The Trouble with fd

=item Safe ways to lock a database

B<Tie::DB_Lock>, B<Tie::DB_LockFile>, B<DB_File::Lock>

=item Sharing Databases With C Applications

=item The untie() Gotcha

=back

=item COMMON QUESTIONS

=over 4

=item Why is there Perl source in my database?

=item How do I store complex data structures with DB_File?

=item What does "Invalid Argument" mean?

=item What does "Bareword 'DB_File' not allowed" mean? 

=back

=item REFERENCES

=item HISTORY

=item BUGS

=item AVAILABILITY

=item COPYRIGHT

=item SEE ALSO

=item AUTHOR

=back

=head2 Data::Dumper - stringified perl data structures, suitable for both
printing and C<eval>

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods

I<PACKAGE>->new(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Dump  I<or> 
I<PACKAGE>->Dump(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Seen(I<[HASHREF]>),
I<$OBJ>->Values(I<[ARRAYREF]>), I<$OBJ>->Names(I<[ARRAYREF]>),
I<$OBJ>->Reset

=item Functions

Dumper(I<LIST>)

=item Configuration Variables or Methods

$Data::Dumper::Indent  I<or>  I<$OBJ>->Indent(I<[NEWVAL]>),
$Data::Dumper::Purity  I<or>  I<$OBJ>->Purity(I<[NEWVAL]>),
$Data::Dumper::Pad  I<or>  I<$OBJ>->Pad(I<[NEWVAL]>),
$Data::Dumper::Varname	I<or>  I<$OBJ>->Varname(I<[NEWVAL]>),
$Data::Dumper::Useqq  I<or>  I<$OBJ>->Useqq(I<[NEWVAL]>),
$Data::Dumper::Terse  I<or>  I<$OBJ>->Terse(I<[NEWVAL]>),
$Data::Dumper::Freezer	I<or>  $I<OBJ>->Freezer(I<[NEWVAL]>),
$Data::Dumper::Toaster	I<or>  $I<OBJ>->Toaster(I<[NEWVAL]>),
$Data::Dumper::Deepcopy  I<or>	$I<OBJ>->Deepcopy(I<[NEWVAL]>),
$Data::Dumper::Quotekeys  I<or>  $I<OBJ>->Quotekeys(I<[NEWVAL]>),
$Data::Dumper::Bless  I<or>  $I<OBJ>->Bless(I<[NEWVAL]>),
$Data::Dumper::Maxdepth  I<or>	$I<OBJ>->Maxdepth(I<[NEWVAL]>),
$Data::Dumper::Useperl	I<or>  $I<OBJ>->Useperl(I<[NEWVAL]>),
$Data::Dumper::Sortkeys  I<or>	$I<OBJ>->Sortkeys(I<[NEWVAL]>),
$Data::Dumper::Deparse	I<or>  $I<OBJ>->Deparse(I<[NEWVAL]>)

=item Exports

Dumper

=back

=item EXAMPLES

=item BUGS
d5096 2
a5097 1
=item AUTHOR
d5099 1
a5099 1
=item VERSION
d5101 1
a5101 1
=item SEE ALSO
d5103 1
a5103 1
=back
d5105 1
a5105 1
=head2 Devel::DProf - a Perl code profiler
d5107 1
a5107 1
=over 4
d5109 1
a5109 1
=item SYNOPSIS
d5111 1
a5111 1
=item DESCRIPTION
d5113 1
a5113 1
=item PROFILE FORMAT
d5115 1
a5115 1
=item AUTOLOAD
d5117 1
a5117 1
=item ENVIRONMENT
d5119 1
a5119 1
=item BUGS
d5121 1
a5121 1
=item SEE ALSO
d5125 1
a5125 1
=head2 Devel::PPPort, Perl/Pollution/Portability
d5129 1
a5129 1
=item SYNOPSIS
d5131 1
a5131 1
=item DESCRIPTION
d5133 1
a5133 1
=over 4
d5135 1
a5135 1
=item WriteFile
d5139 1
a5139 1
=item ppport.h
d5141 2
a5142 1
=item AUTHOR
d5144 1
a5144 1
=item SEE ALSO
d5146 2
a5147 1
=back
d5149 1
a5149 1
=head2 Devel::Peek - A data debugging tool for the XS programmer
d5151 25
a5175 1
=over 4
d5177 1
a5177 1
=item SYNOPSIS
d5179 1
a5179 1
=item DESCRIPTION
d5181 1
a5181 1
=over 4
d5183 1
a5183 1
=item Runtime debugging
d5185 1
a5185 1
=item Memory footprint debugging
d5187 1
a5187 1
=back
d5189 1
a5189 1
=item EXAMPLES
d5193 3
a5195 1
=item A simple scalar string
d5197 1
a5197 1
=item A simple scalar number
d5199 1
a5199 1
=item A simple scalar with an extra reference
d5201 1
a5201 1
=item A reference to a simple scalar
d5203 1
a5203 1
=item A reference to an array
d5205 1
a5205 1
=item A reference to a hash
d5207 1
a5207 1
=item Dumping a large array or hash
d5209 1
a5209 1
=item A reference to an SV which holds a C pointer
d5211 1
a5211 1
=item A reference to a subroutine
a5214 4
=item EXPORTS

=item BUGS

d5217 1
a5217 1
=item SEE ALSO
d5221 1
a5221 1
=head2 Devel::SelfStubber - generate stubs for a SelfLoading module
a5226 2
=item DESCRIPTION

a5228 2
=head2 Digest:: - Modules that calculate message digests

a5230 2
=item SYNOPSIS

d5233 1
a5233 1
I<binary>, I<hex>, I<base64>
d5235 1
a5235 1
=item OO INTERFACE
d5237 1
a5237 3
$ctx = Digest->XXX($arg,...), $ctx = Digest->new(XXX => $arg,...), $ctx =
Digest::XXX->new($arg,...), $ctx->reset, $ctx->add($data,...),
$ctx->addfile($io_handle), $ctx->digest, $ctx->hexdigest, $ctx->b64digest
d5239 1
a5239 1
=item SEE ALSO
d5241 1
a5241 1
=item AUTHOR
d5245 3
a5247 1
=head2 Digest::MD5 - Perl interface to the MD5 Algorithm
d5251 1
a5251 1
=item SYNOPSIS
d5253 1
a5253 1
=item DESCRIPTION
d5255 1
a5255 1
=item FUNCTIONS
d5257 1
a5257 1
md5($data,...), md5_hex($data,...), md5_base64($data,...)
d5259 1
a5259 1
=item METHODS
d5261 1
a5261 2
$md5 = Digest::MD5->new, $md5->reset, $md5->add($data,...),
$md5->addfile($io_handle), $md5->digest, $md5->hexdigest, $md5->b64digest
d5263 1
a5263 1
=item EXAMPLES
d5265 1
a5265 1
=item SEE ALSO
d5267 1
a5267 1
=item COPYRIGHT
d5269 1
a5269 1
=item AUTHORS
d5271 1
a5271 1
=back
d5273 1
a5273 1
=head2 DirHandle - supply object methods for directory handles
d5275 1
a5275 1
=over 4
d5277 1
a5277 1
=item SYNOPSIS
d5279 1
a5279 1
=item DESCRIPTION
d5281 1
a5281 1
=item NOTES
d5285 1
a5285 1
=head2 Dumpvalue - provides screen dump of Perl data.
d5295 1
a5295 8
=item Creation

C<arrayDepth>, C<hashDepth>, C<compactDump>, C<veryCompact>, C<globPrint>,
C<dumpDBFiles>, C<dumpPackages>, C<dumpReused>, C<tick>, C<quoteHighBit>,
C<printUndef>, C<usageOnly>, unctrl, subdump, bareStringify, quoteHighBit,
stopDbSignal

=item Methods
d5297 1
a5297 2
dumpValue, dumpValues, stringify, dumpvars, set_quote, set_unctrl,
compactDump, veryCompact, set, get
d5299 1
a5299 1
=back
d5301 1
a5301 1
=back
d5303 1
a5303 1
=head2 DynaLoader - Dynamically load C libraries into Perl code
d5305 1
a5305 1
=over 4
d5307 1
a5307 1
=item SYNOPSIS
d5309 1
a5309 7
=item DESCRIPTION

@@dl_library_path, @@dl_resolve_using, @@dl_require_symbols, @@dl_librefs,
@@dl_modules, dl_error(), $dl_debug, dl_findfile(), dl_expandspec(),
dl_load_file(), dl_unload_file(), dl_loadflags(), dl_find_symbol(),
dl_find_symbol_anywhere(), dl_undef_symbols(), dl_install_xsub(),
bootstrap()
d5311 1
a5311 1
=item AUTHOR
d5315 3
a5317 2
=head2 DynaLoader::XSLoader, XSLoader - Dynamically load C libraries into
Perl code
d5321 1
a5321 1
=item SYNOPSIS
d5323 1
a5323 1
=item DESCRIPTION
d5325 1
a5325 1
=item AUTHOR
d5329 1
a5329 1
=head2 Encode - character encodings
d5335 2
d5339 5
a5343 1
=item Table of Contents
d5347 1
a5347 1
=item DESCRIPTION
d5351 1
a5351 1
=item TERMINOLOGY
d5353 1
a5353 1
=back
d5355 2
a5356 1
=item PERL ENCODING API
d5358 1
a5358 4
$octets  = encode(ENCODING, $string [, CHECK]), $string = decode(ENCODING,
$octets [, CHECK]), [$length =] from_to($octets, FROM_ENC, TO_ENC [,
CHECK]), $octets = encode_utf8($string);, $string = decode_utf8($octets [,
CHECK]);
d5360 2
a5361 1
=over 4
d5363 1
a5363 1
=item Listing available encodings
d5365 1
a5365 1
=item Defining Aliases
d5369 1
a5369 1
=item Encoding via PerlIO
d5371 1
a5371 1
=item Handling Malformed Data
d5373 1
a5373 5
I<CHECK> = Encode::FB_DEFAULT ( == 0), I<CHECK> = Encode::FB_CROAK ( == 1),
I<CHECK> = Encode::FB_QUIET, I<CHECK> = Encode::FB_WARN, perlqq mode
(I<CHECK> = Encode::FB_PERLQQ), HTML charref mode (I<CHECK> =
Encode::FB_HTMLCREF), XML charref mode (I<CHECK> = Encode::FB_XMLCREF), The
bitmask
d5375 1
a5375 3
=over 4

=item Unimplemented fallback schemes
d5379 1
a5379 1
=item Defining Encodings
d5381 1
a5381 1
=item The UTF-8 flag
d5383 1
a5383 1
Goal #1:, Goal #2:, Goal #3:, Goal #4:
d5385 1
a5385 1
=over 4
d5387 1
a5387 1
=item Messing with Perl's Internals
d5389 1
a5389 1
is_utf8(STRING [, CHECK]), _utf8_on(STRING), _utf8_off(STRING)
d5391 1
a5391 1
=back
d5393 1
a5393 1
=item SEE ALSO
d5395 1
a5395 1
=item MAINTAINER
d5399 1
a5399 1
=head2 Encode::Alias - alias definitions to encodings
d5401 1
a5401 1
=over 4
d5403 2
a5404 1
=item SYNOPSIS
d5406 1
a5406 1
=item DESCRIPTION
d5408 1
a5408 2
As a simple string, As a qr// compiled regular expression, e.g.:, As a code
reference, e.g.:
d5410 1
a5410 3
=over 4

=item Alias overloading
d5414 1
a5414 5
=item SEE ALSO

=back

=head2 Encode::Byte - Single Byte Encodings
a5419 2
=item ABSTRACT

d5422 1
a5422 1
=item SEE ALSO
d5424 1
a5424 1
=back
d5426 1
a5426 1
=head2	 Encode::CJKConstants -- Internally used by Encode::??::ISO_2022_*
d5428 1
a5428 1
=head2 Encode::CN - China-based Chinese Encodings
d5430 1
a5430 1
=over 4
d5432 1
a5432 1
=item SYNOPSIS
d5434 1
a5434 1
=item DESCRIPTION
d5436 1
a5436 1
=item NOTES
d5438 1
a5438 1
=item BUGS
d5440 1
a5440 1
=item SEE ALSO
d5442 1
a5442 1
=back
d5444 1
a5444 1
=head2 Encode::CN::HZ -- internally used by Encode::CN
d5446 1
a5446 1
=head2 Encode::Config -- internally used by Encode
d5448 1
a5448 1
=head2 Encode::EBCDIC - EBCDIC Encodings
d5450 1
a5450 1
=over 4
d5452 1
a5452 5
=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION
d5458 1
a5458 1
=head2 Encode::Encoding - Encode Implementation Base Class
d5464 9
a5472 1
=item DESCRIPTION
d5476 3
a5478 1
=item Methods you should implement
d5480 1
a5480 1
-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check])
d5482 1
a5482 1
=item Other methods defined in Encode::Encodings
d5484 1
a5484 1
-E<gt>name, -E<gt>new_sequence, -E<gt>perlio_ok(), -E<gt>needs_lines()
d5486 1
a5486 1
=item Example: Encode::ROT13
d5490 1
a5490 1
=item Why the heck Encode API is different?
d5492 1
a5492 1
=over 4
d5494 1
a5494 1
=item Compiled Encodings
d5498 2
a5499 1
=item SEE ALSO
d5501 1
a5501 1
Scheme 1, Scheme 2, Other Schemes
d5503 1
a5503 1
=back
d5505 1
a5505 1
=head2 Encode::Guess -- Guesses encoding from data
d5507 1
a5507 1
=over 4
d5509 1
a5509 1
=item SYNOPSIS
d5511 1
a5511 1
=item ABSTRACT
d5513 1
a5513 1
=item DESCRIPTION
d5515 1
a5515 3
Encode::Guess->set_suspects, Encode::Guess->add_suspects,
Encode::decode("Guess" ...), Encode::Guess->guess($data),
guess_encoding($data, [, I<list of suspects>])
d5517 1
a5517 1
=item CAVEATS
d5519 1
a5519 1
=item TO DO
d5521 1
a5521 1
=item SEE ALSO
d5523 1
a5523 1
=back
d5525 1
a5525 1
=head2 Encode::JP - Japanese Encodings
d5527 1
a5527 1
=over 4
d5529 1
a5529 1
=item SYNOPSIS
d5531 1
a5531 1
=item ABSTRACT
d5533 1
a5533 1
=item DESCRIPTION
d5535 1
a5535 1
=item Note on ISO-2022-JP(-1)?
d5537 1
a5537 1
=item BUGS
d5539 1
a5539 1
=item SEE ALSO
d5543 2
a5544 1
=head2 Encode::JP::H2Z -- internally used by Encode::JP::2022_JP*
d5546 1
a5546 1
=head2 Encode::JP::JIS7 -- internally used by Encode::JP
d5548 1
a5548 1
=head2 Encode::KR - Korean Encodings
d5552 1
a5552 1
=item SYNOPSIS
d5554 1
a5554 1
=item DESCRIPTION
d5556 1
a5556 1
=item BUGS
d5558 1
a5558 1
=item SEE ALSO
d5562 5
a5566 1
=head2 Encode::KR::2022_KR -- internally used by Encode::KR
d5568 1
a5568 1
=head2 Encode::MIME::Header -- MIME 'B' and 'Q' header encoding
a5573 2
=item ABSTRACT

d5576 1
a5576 1
=item BUGS
d5578 1
a5578 1
=item SEE ALSO
d5582 3
a5584 1
=head2 Encode::PerlIO -- a detailed document on Encode and PerlIO
d5588 1
a5588 1
=item Overview
d5590 1
a5590 1
=item How does it work?
d5592 1
a5592 1
=item BUGS
d5594 1
a5594 1
=over 4
d5596 1
a5596 1
=item Workaround
d5598 1
a5598 1
=item How can I tell whether my encoding fully supports PerlIO ?
d5600 1
a5600 1
=back
d5602 1
a5602 1
=item SEE ALSO
d5606 1
a5606 1
=head2 Encode::Supported -- Encodings supported by Encode
d5610 1
a5610 5
=item DESCRIPTION

=over 4

=item Encoding Names
a5613 2
=item Supported Encodings

d5616 1
a5616 1
=item Built-in Encodings
d5618 1
a5618 1
=item Encode::Unicode -- other Unicode encodings
d5620 1
a5620 1
=item Encode::Byte -- Extended ASCII
d5622 1
a5622 2
ISO-8859 and corresponding vendor mappings, KOI8 - De Facto Standard for
the Cyrillic world, gsm0338 - Hentai Latin 1
d5624 1
a5624 1
=item CJK: Chinese, Japanese, Korean (Multibyte)
d5626 1
a5626 3
Encode::CN -- Continental China, Encode::JP -- Japan, Encode::KR -- Korea,
Encode::TW -- Taiwan, Encode::HanExtra -- More Chinese via CPAN,
Encode::JIS2K -- JIS X 0213 encodings via CPAN
d5628 1
a5628 1
=item Miscellaneous encodings
d5630 1
a5630 1
Encode::EBCDIC, Encode::Symbols, Encode::MIME::Header, Encode::Guess
d5634 1
a5634 10
=item Unsupported encodings

  ISO-2022-JP-2 [RFC1554], ISO-2022-CN [RFC1922], Various HP-UX encodings,
Cyrillic encoding ISO-IR-111, ISO-8859-8-1 [Hebrew], ISIRI 3342, Iran
System, ISIRI 2900 [Farsi], Thai encoding TCVN, Vietnamese encodings VPS,
Various Mac encodings, (Mac) Indic encodings

=item Encoding vs. Charset -- terminology

=item Encoding Classification (by Anton Tagunov and Dan Kogai)
d5638 1
a5638 1
=item Microsoft-related naming mess
d5640 1
a5640 1
KS_C_5601-1987, GB2312, Big5, Shift_JIS
d5642 2
a5643 1
=back
d5645 2
a5646 1
=item Glossary
d5648 1
a5648 3
character repertoire, coded character set (CCS), character encoding scheme
(CES), charset (in MIME context), EUC, ISO-2022, UCS, UCS-2, Unicode, UTF,
UTF-16
d5650 1
a5650 1
=item See Also
d5652 1
a5652 1
=item References
d5654 1
a5654 2
ECMA, ECMA-035 (eq C<ISO-2022>), IANA, Assigned Charset Names by IANA, ISO,
RFC, UC, Unicode Glossary
d5658 1
a5658 1
=item Other Notable Sites
d5660 1
a5660 2
czyborra.com, CJK.inf, Jungshik Shin's Hangul FAQ, debian.org:
"Introduction to i18n"
d5662 1
a5662 1
=item Offline sources
d5664 5
a5668 1
C<CJKV Information Processing> by Ken Lunde
d5670 1
a5670 1
=back
d5674 1
a5674 1
=head2 Encode::Symbol - Symbol Encodings
d5678 7
a5684 1
=item SYNOPSIS
d5686 1
a5686 1
=item ABSTRACT
d5688 1
a5688 1
=item DESCRIPTION
d5690 1
a5690 1
=item SEE ALSO
d5694 1
a5694 1
=head2 Encode::TW - Taiwan-based Chinese Encodings
d5698 1
a5698 1
=item SYNOPSIS
d5700 1
a5700 1
=item DESCRIPTION
d5702 1
a5702 1
=item NOTES
d5704 1
a5704 1
=item BUGS
d5706 1
a5706 1
=item SEE ALSO
d5708 1
a5708 1
=back
d5710 1
a5710 1
=head2 Encode::Unicode -- Various Unicode Transformation Formats
d5712 2
a5713 1
=over 4
d5715 1
a5715 1
=item SYNOPSIS
d5717 1
a5717 1
=item ABSTRACT
d5719 1
a5719 1
L<http://www.unicode.org/glossary/> says:, Quick Reference
d5721 1
a5721 1
=item Size, Endianness, and BOM
d5725 3
a5727 1
=item by size
d5729 1
a5729 1
=item by endianness
d5731 1
a5731 1
BOM as integer when fetched in network byte order
d5733 1
a5733 1
=back
d5735 1
a5735 1
=item Surrogate Pairs
d5737 1
a5737 1
=item SEE ALSO
d5741 1
a5741 2
=head2 Encode::lib::Encode::Alias, Encode::Alias - alias definitions to
encodings
d5745 3
a5747 1
=item SYNOPSIS
d5749 1
a5749 1
=item DESCRIPTION
d5751 1
a5751 2
As a simple string, As a qr// compiled regular expression, e.g.:, As a code
reference, e.g.:
d5753 1
a5753 1
=over 4
d5755 11
a5765 1
=item Alias overloading
d5767 1
a5767 1
=back
d5769 1
a5769 1
=item SEE ALSO
d5771 1
a5771 1
=back
d5773 1
a5773 2
=head2 Encode::lib::Encode::CJKConstants,   Encode::CJKConstants.pm --
Internally used by Encode::??::ISO_2022_*
d5775 2
a5776 2
=head2 Encode::lib::Encode::CN::HZ, Encode::CN::HZ -- internally used by
Encode::CN
d5778 1
a5778 2
=head2 Encode::lib::Encode::Config, Encode::Config -- internally used by
Encode
d5780 1
a5780 2
=head2 Encode::lib::Encode::Encoding, Encode::Encoding - Encode
Implementation Base Class
d5782 1
a5782 1
=over 4
d5784 1
a5784 1
=item SYNOPSIS
d5786 1
a5786 1
=item DESCRIPTION
d5790 5
a5794 1
=item Methods you should implement
d5796 1
a5796 1
-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check])
d5798 1
a5798 1
=item Other methods defined in Encode::Encodings
d5800 1
a5800 1
-E<gt>name, -E<gt>new_sequence, -E<gt>perlio_ok(), -E<gt>needs_lines()
d5802 1
a5802 1
=item Example: Encode::ROT13
d5806 1
a5806 1
=item Why the heck Encode API is different?
d5810 5
a5814 1
=item Compiled Encodings
d5816 1
a5816 1
=back
d5818 1
a5818 1
=item SEE ALSO
d5820 1
a5820 1
Scheme 1, Scheme 2, Other Schemes
d5824 1
a5824 2
=head2 Encode::lib::Encode::Guess, Encode::Guess -- Guesses encoding from
data
d5828 11
a5838 1
=item SYNOPSIS
d5840 1
a5840 1
=item ABSTRACT
d5842 1
a5842 1
=item DESCRIPTION
d5844 1
a5844 3
Encode::Guess->set_suspects, Encode::Guess->add_suspects,
Encode::decode("Guess" ...), Encode::Guess->guess($data),
guess_encoding($data, [, I<list of suspects>])
d5846 1
a5846 1
=item CAVEATS
d5848 1
a5848 1
=item TO DO
d5854 1
a5854 2
=head2 Encode::lib::Encode::JP::H2Z, Encode::JP::H2Z -- internally used by
Encode::JP::2022_JP*
d5856 1
a5856 2
=head2 Encode::lib::Encode::JP::JIS7, Encode::JP::JIS7 -- internally used
by Encode::JP
d5858 1
a5858 2
=head2 Encode::lib::Encode::KR::2022_KR, Encode::KR::2022_KR -- internally
used by Encode::KR
d5860 1
a5860 2
=head2 Encode::lib::Encode::MIME::Header, Encode::MIME::Header -- MIME 'B'
and 'Q' header encoding
d5864 5
a5868 1
=item SYNOPSIS
d5870 1
a5870 1
=item ABSTRACT
d5872 1
a5872 1
=item DESCRIPTION
d5874 1
a5874 1
=item BUGS
d5876 1
a5876 1
=item SEE ALSO
d5878 1
a5878 1
=back
d5880 1
a5880 2
=head2 Encode::lib::Encode::PerlIO, Encode::PerlIO -- a detailed document
on Encode and PerlIO
d5882 1
a5882 1
=over 4
d5884 1
a5884 1
=item Overview
d5886 1
a5886 1
=item How does it work?
d5888 1
a5888 1
=item BUGS
d5892 1
a5892 3
=item Workaround

=item How can I tell whether my encoding fully supports PerlIO ?
d5896 1
a5896 1
=item SEE ALSO
d5900 1
a5900 2
=head2 Encode::lib::Encode::Supported, Encode::Supported -- Encodings
supported by Encode
d5908 1
a5908 1
=item Encoding Names
d5912 1
a5912 1
=item Supported Encodings
d5914 1
a5914 1
=over 4
d5916 1
a5916 1
=item Built-in Encodings
d5918 1
a5918 6
=item Encode::Unicode -- other Unicode encodings

=item Encode::Byte -- Extended ASCII

ISO-8859 and corresponding vendor mappings, KOI8 - De Facto Standard for
the Cyrillic world, gsm0338 - Hentai Latin 1
d5920 1
a5920 1
=item CJK: Chinese, Japanese, Korean (Multibyte)
d5922 1
a5922 3
Encode::CN -- Continental China, Encode::JP -- Japan, Encode::KR -- Korea,
Encode::TW -- Taiwan, Encode::HanExtra -- More Chinese via CPAN,
Encode::JIS2K -- JIS X 0213 encodings via CPAN
d5924 1
a5924 3
=item Miscellaneous encodings

Encode::EBCDIC, Encode::Symbols, Encode::MIME::Header, Encode::Guess
d5928 1
a5928 1
=item Unsupported encodings
d5930 1
a5930 6
  ISO-2022-JP-2 [RFC1554], ISO-2022-CN [RFC1922], Various HP-UX encodings,
Cyrillic encoding ISO-IR-111, ISO-8859-8-1 [Hebrew], ISIRI 3342, Iran
System, ISIRI 2900 [Farsi], Thai encoding TCVN, Vietnamese encodings VPS,
Various Mac encodings, (Mac) Indic encodings

=item Encoding vs. Charset -- terminology
d5932 1
a5932 1
=item Encoding Classification (by Anton Tagunov and Dan Kogai)
d5934 1
a5934 3
=over 4

=item Microsoft-related naming mess
d5936 1
a5936 1
KS_C_5601-1987, GB2312, Big5, Shift_JIS
d5940 1
a5940 1
=item Glossary
d5942 3
a5944 3
character repertoire, coded character set (CCS), character encoding scheme
(CES), charset (in MIME context), EUC, ISO-2022, UCS, UCS-2, Unicode, UTF,
UTF-16
d5946 1
a5946 6
=item See Also

=item References

ECMA, ECMA-035 (eq C<ISO-2022>), IANA, Assigned Charset Names by IANA, ISO,
RFC, UC, Unicode Glossary
d5950 1
a5950 8
=item Other Notable Sites

czyborra.com, CJK.inf, Jungshik Shin's Hangul FAQ, debian.org:
"Introduction to i18n"

=item Offline sources

C<CJKV Information Processing> by Ken Lunde
d5954 1
a5954 1
=back
d5956 1
a5956 1
=head2 Encode::lib::Encoder, Encode::Encoder -- Object Oriented Encoder
d5960 1
a5960 1
=item SYNOPSIS
d5962 1
a5962 14
  use Encode::Encoder;
  # Encode::encode("ISO-8859-1", $data); 
  Encode::Encoder->new($data)->iso_8859_1; # OOP way
  # shortcut
  use Encode::Encoder qw(encoder);
  encoder($data)->iso_8859_1;
  # you can stack them!
  encoder($data)->iso_8859_1->base64;  # provided base64() is defined
  # you can use it as a decoder as well
  encoder($base64)->bytes('base64')->latin1;
  # stringified
  print encoder($data)->utf8->latin1;  # prints the string in latin1
  # numified
  encoder("\x{abcd}\x{ef}g")->utf8 == 6; # true. bytes::length($data)
d5964 1
a5964 1
=item ABSTRACT
d5966 1
a5966 1
=item Description
d5970 1
a5970 1
=item Predefined Methods
d5972 1
a5972 3
$e = Encode::Encoder-E<gt>new([$data, $encoding]);, encoder(),
$e-E<gt>data([$data]), $e-E<gt>encoding([$encoding]),
$e-E<gt>bytes([$encoding])
d5974 1
a5974 1
=item Example: base64 transcoder
d5976 1
a5976 1
=item Operator Overloading
d5978 1
a5978 1
=back
d5980 1
a5980 1
=item SEE ALSO
d5984 1
a5984 2
=head2 Encodencoding, encoding - allows you to write your script in
non-ascii or non-utf8
d5990 5
a5994 1
=item ABSTRACT
d5996 1
a5996 1
=item USAGE
d5998 1
a5998 2
use encoding [I<ENCNAME>] ;, use encoding I<ENCNAME> [ STDIN =E<gt>
I<ENCNAME_IN> ...] ;, no encoding;
d6000 6
a6005 1
=item CAVEATS
d6007 1
a6007 1
=over 4
d6009 1
a6009 1
=item NOT SCOPED
d6011 3
a6013 1
=item DO NOT MIX MULTIPLE ENCODINGS
d6017 1
a6017 1
=item Non-ASCII Identifiers and Filter option
d6019 1
a6019 1
use encoding I<ENCNAME> Filter=E<gt>1;
d6021 1
a6021 1
=item EXAMPLE - Greekperl
d6023 1
a6023 1
=item KNOWN PROBLEMS
d6025 1
a6025 1
=item SEE ALSO
d6029 1
a6029 1
=head2 Encoder, Encode::Encoder -- Object Oriented Encoder
d6033 1
a6033 1
=item SYNOPSIS
d6035 1
a6035 14
  use Encode::Encoder;
  # Encode::encode("ISO-8859-1", $data); 
  Encode::Encoder->new($data)->iso_8859_1; # OOP way
  # shortcut
  use Encode::Encoder qw(encoder);
  encoder($data)->iso_8859_1;
  # you can stack them!
  encoder($data)->iso_8859_1->base64;  # provided base64() is defined
  # you can use it as a decoder as well
  encoder($base64)->bytes('base64')->latin1;
  # stringified
  print encoder($data)->utf8->latin1;  # prints the string in latin1
  # numified
  encoder("\x{abcd}\x{ef}g")->utf8 == 6; # true. bytes::length($data)
d6037 1
a6037 3
=item ABSTRACT

=item Description
d6041 1
a6041 1
=item Predefined Methods
d6043 1
a6043 3
$e = Encode::Encoder-E<gt>new([$data, $encoding]);, encoder(),
$e-E<gt>data([$data]), $e-E<gt>encoding([$encoding]),
$e-E<gt>bytes([$encoding])
d6045 1
a6045 1
=item Example: base64 transcoder
d6047 1
a6047 1
=item Operator Overloading
d6051 1
a6051 6
=item SEE ALSO

=back

=head2 English - use nice English (or awk) names for ugly punctuation
variables
d6055 1
a6055 1
=item SYNOPSIS
d6057 1
a6057 1
=item DESCRIPTION
d6059 1
a6059 1
=item PERFORMANCE
d6063 3
a6065 2
=head2 Env - perl module that imports environment variables as scalars or
arrays
d6069 7
a6075 1
=item SYNOPSIS
d6077 1
a6077 1
=item DESCRIPTION
d6079 4
a6082 1
=item LIMITATIONS
d6084 1
a6084 1
=item AUTHOR
d6086 1
a6086 1
=back
d6088 1
a6088 1
=head2 Errno - System errno constants
d6092 1
a6092 1
=item SYNOPSIS
d6094 1
a6094 1
=item DESCRIPTION
d6096 1
a6096 1
=item CAVEATS
a6099 2
=item COPYRIGHT

d6102 1
a6102 1
=head2 Exporter - Implements default import method for modules
a6107 2
=item DESCRIPTION

d6110 1
a6110 7
=item How to Export

=item Selecting What To Export

=item How to Import

C<use ModuleName;>, C<use ModuleName ();>, C<use ModuleName qw(...);>
d6114 1
a6114 1
=item Advanced features
d6118 1
a6118 1
=item Specialised Import Lists
d6120 1
a6120 1
=item Exporting without using Exporter's import method
d6122 1
a6122 1
=item Module Version Checking
d6124 1
a6124 1
=item Managing Unknown Symbols
d6126 1
a6126 1
=item Tag Handling Utility Functions
d6128 1
a6128 1
=item Generating combined tags
d6130 1
a6130 1
=item C<AUTOLOAD>ed Constants
d6134 1
a6134 1
=back
d6136 1
a6136 1
=head2 Exporter::Heavy - Exporter guts
d6138 1
a6138 5
=over 4

=item SYNOPSIS

=item DESCRIPTION
d6142 1
a6142 2
=head2 ExtUtils::Command - utilities to replace common UNIX commands in
Makefiles etc.
d6150 1
a6150 1
=back
d6152 1
a6152 1
cat
d6154 1
a6154 1
eqtime src dst
d6156 1
a6156 1
rm_rf files...
d6158 1
a6158 1
rm_f files...
d6160 1
a6160 3
touch files ..

mv source... destination
d6162 1
a6162 1
cp source... destination
d6164 3
a6166 1
chmod mode files..
d6168 1
a6168 1
mkpath directory..
d6170 1
a6170 1
test_f file
d6172 1
a6172 1
=over 4
d6174 3
a6176 1
=item BUGS
d6178 1
a6178 1
=item SEE ALSO 
d6180 1
a6180 1
=item AUTHOR
d6184 3
a6186 1
=head2 ExtUtils::Command::MM - Commands for the MM's to use in Makefiles
d6194 1
a6194 1
B<test_harness>
d6198 1
a6198 1
=head2 ExtUtils::Constant - generate XS code to import C header constants
a6205 6
=item USAGE

IV, UV, NV, PV, PVN, SV, YES, NO, UNDEF

=item FUNCTIONS

d6208 1
a6208 1
C_stringify NAME
d6210 1
a6210 1
perl_stringify NAME
d6212 1
a6212 1
constant_types
d6214 1
a6214 1
memEQ_clause NAME, CHECKED_AT, INDENT
d6216 1
a6216 1
assign INDENT, TYPE, PRE, POST, VALUE..
d6218 1
a6218 1
return_clause
d6220 1
a6220 1
switch_clause INDENT, NAMELEN, ITEMHASH, ITEM..
d6222 1
a6222 1
params WHAT
d6224 1
a6224 1
dump_names
d6226 1
a6226 1
dogfood
d6228 1
a6228 2
C_constant, name, type, value, macro, default, pre, post, def_pre =item
def_post, utf8
d6230 1
a6230 12
XS_constant PACKAGE, TYPES, SUBNAME, C_SUBNAME

autoload PACKAGE, VERSION, AUTOLOADER

WriteMakefileSnippet

WriteConstants ATTRIBUTE =E<gt> VALUE [, ...], NAME, DEFAULT_TYPE,
BREAKOUT_AT, NAMES, C_FILE, XS_FILE, SUBNAME, C_SUBNAME

=over 4

=item AUTHOR
d6234 1
a6234 1
=head2 ExtUtils::Embed - Utilities for embedding Perl in C/C++ applications
d6238 1
a6238 1
=item SYNOPSIS
d6240 1
a6240 1
=item DESCRIPTION
d6242 1
a6242 1
=item @@EXPORT
d6244 1
a6244 4
=item FUNCTIONS

xsinit(), Examples, ldopts(), Examples, perl_inc(), ccflags(), ccdlflags(),
ccopts(), xsi_header(), xsi_protos(@@modules), xsi_body(@@modules)
a6249 2
=item AUTHOR

d6252 1
a6252 1
=head2 ExtUtils::Install - install files from here to there
d6260 2
d6264 1
a6264 1
=head2 ExtUtils::Installed - Inventory management of installed modules
d6272 1
a6272 1
=item USAGE
d6274 1
a6274 1
=item FUNCTIONS
d6276 1
a6276 6
new(), modules(), files(), directories(), directory_tree(), validate(),
packlist(), version()

=item EXAMPLE

=item AUTHOR
d6280 1
a6280 1
=head2 ExtUtils::Liblist - determine libraries to use and how to use them
d6288 7
a6294 2
For static extensions, For dynamic extensions at build/link time, For
dynamic extensions at load time
d6298 3
a6300 1
=item EXTRALIBS
d6302 1
a6302 1
=item LDLOADLIBS and LD_RUN_PATH
d6304 1
a6304 1
=item BSLOADLIBS
d6308 2
a6309 1
=item PORTABILITY
d6313 1
a6313 1
=item VMS implementation
d6315 1
a6315 3
=item Win32 implementation

=back
d6321 2
a6322 1
=head2 ExtUtils::MM - OS adjusted ExtUtils::MakeMaker subclass
d6330 4
d6336 1
a6336 1
=head2 ExtUtils::MM_Any - Platform agnostic MM methods
d6344 1
a6344 1
=item Inherently Cross-Platform Methods
d6346 1
a6346 1
=over 4
d6348 1
a6348 1
=item File::Spec wrappers  B<DEPRECATED>
d6350 1
a6350 1
canonpath
d6352 1
a6352 1
=back
d6356 2
a6357 1
catdir
d6359 1
a6359 1
catfile
d6361 1
a6361 1
curdir
d6363 1
a6363 7
file_name_is_absolute

path

rootdir

updir
d6367 1
a6367 1
=item Thought To Be Cross-Platform Methods
d6369 1
a6369 1
test_via_harness
d6373 3
a6375 1
test_via_script
d6377 1
a6377 1
=over 4
d6383 1
a6383 2
=head2 ExtUtils::MM_BeOS - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d6391 1
a6391 1
=back
d6393 1
a6393 12
perl_archive

=head2 ExtUtils::MM_Cygwin - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

canonpath, cflags, manifypods, perl_archive
d6397 1
a6397 1
=head2 ExtUtils::MM_DOS - DOS specific subclass of ExtUtils::MM_Unix
d6407 1
a6407 1
=item Overridden methods
d6409 1
a6409 1
B<replace_manpage_separator>
d6413 2
a6414 1
=back
d6418 1
a6418 1
=item AUTHOR
d6420 1
a6420 1
=item SEE ALSO
d6424 1
a6424 2
=head2 ExtUtils::MM_MacOS - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d6434 3
a6436 1
maybe_command
d6438 1
a6438 1
guess_name
d6440 1
a6440 1
macify
d6442 1
a6442 1
patternify
d6444 1
a6444 1
init_main
d6446 1
a6446 1
init_others
d6448 1
a6448 1
init_dirscan
d6450 1
a6450 1
libscan (o)
d6452 1
a6452 1
constants (o)
d6454 1
a6454 1
static (o)
d6456 1
a6456 1
dlsyms (o)
d6458 2
a6459 1
dynamic (o)
d6461 1
a6461 1
clean (o)
d6463 1
a6463 1
realclean (o)
d6465 1
a6465 1
rulez (o)
d6467 1
a6467 1
processPL (o)
d6469 1
a6469 2
=head2 ExtUtils::MM_NW5 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d6477 1
a6477 1
=back
d6479 1
a6479 1
constants (o)
d6481 1
a6481 1
static_lib (o)
d6483 1
a6483 4
dynamic_lib (o)

=head2 ExtUtils::MM_OS2 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d6487 1
a6487 1
=item SYNOPSIS
d6491 1
a6491 1
=item METHODS
d6495 1
a6495 3
perl_archive_after

=head2 ExtUtils::MM_UWIN - U/WIN specific subclass of ExtUtils::MM_Unix
d6505 7
a6511 1
=item Overridden methods
d6513 1
a6513 1
B<replace_manpage_separator>
d6515 1
a6515 1
=back
d6517 1
a6517 1
=back
d6519 3
a6521 1
=over 4
d6523 1
a6523 1
=item AUTHOR
d6525 2
a6526 1
=item SEE ALSO
d6530 1
a6530 1
=head2 ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker
d6534 5
a6538 1
=item SYNOPSIS
d6540 1
a6540 1
=item DESCRIPTION
d6542 1
a6542 1
=item METHODS
d6546 8
a6553 1
=over 4
d6555 1
a6555 1
=item SelfLoaded methods
d6557 1
a6557 1
c_o (o)
d6559 1
a6559 1
=back
d6561 1
a6561 1
cflags (o)
d6563 1
a6563 1
clean (o)
d6565 1
a6565 1
const_cccmd (o)
d6567 1
a6567 1
const_config (o)
d6569 1
a6569 1
const_loadlibs (o)
d6571 1
a6571 1
constants (o)
d6573 1
a6573 1
depend (o)
d6575 1
a6575 1
dir_target (o)
d6577 1
a6577 1
dist (o)
d6579 1
a6579 1
dist_basics (o)
d6581 1
a6581 1
dist_ci (o)
d6583 1
a6583 1
dist_core (o)
d6585 1
a6585 1
dist_dir
d6587 2
a6588 1
dist_test
d6590 1
a6590 1
dlsyms (o)
d6592 1
a6592 1
dynamic (o)
d6594 1
a6594 1
dynamic_bs (o)
d6596 1
a6596 1
dynamic_lib (o)
d6598 1
a6598 1
exescan
d6600 1
a6600 1
extliblist
d6602 1
a6602 1
find_perl
d6604 1
a6604 1
find_tests
d6608 5
a6612 1
=item Methods to actually produce chunks of text for the Makefile
d6614 1
a6614 1
fixin
d6616 1
a6616 1
=back
d6618 1
a6618 1
force (o)
d6620 1
a6620 1
guess_name
d6622 1
a6622 1
has_link_code
d6624 1
a6624 1
init_dirscan
d6626 1
a6626 1
init_main
d6628 1
a6628 1
init_others
d6630 1
a6630 1
init_INST
d6632 1
a6632 1
init_INSTALL
d6634 1
a6634 1
init_lib2arch
d6636 1
a6636 1
init_PERL
d6638 1
a6638 1
init_PERM
d6640 1
a6640 1
install (o)
d6642 1
a6642 1
installbin (o)
d6644 1
a6644 1
libscan (o)
d6646 1
a6646 1
linkext (o)
d6648 1
a6648 1
lsdir
d6650 1
a6650 1
macro (o)
d6652 1
a6652 1
makeaperl (o)
d6654 1
a6654 1
makefile (o)
d6656 1
a6656 1
manifypods (o)
d6658 1
a6658 1
maybe_command
d6660 1
a6660 1
maybe_command_in_dirs
d6662 1
a6662 1
needs_linking (o)
d6664 1
a6664 1
nicetext
d6666 1
a6666 1
parse_abstract
d6668 1
a6668 1
parse_version
d6670 1
a6670 1
pasthru (o)
d6672 1
a6672 1
perl_script
d6674 1
a6674 1
perldepend (o)
d6676 1
a6676 1
perm_rw (o)
d6678 1
a6678 1
perm_rwx (o)
d6680 1
a6680 1
pm_to_blib
d6682 1
a6682 1
post_constants (o)
d6684 1
a6684 1
post_initialize (o)
d6686 5
a6690 1
postamble (o)
d6692 1
a6692 1
ppd
d6694 1
a6694 1
prefixify
d6696 1
a6696 1
processPL (o)
d6698 1
a6698 1
quote_paren
d6700 1
a6700 1
realclean (o)
d6702 1
a6702 1
replace_manpage_separator
d6704 1
a6704 1
static (o)
d6706 1
a6706 1
static_lib (o)
d6708 1
a6708 1
staticmake (o)
d6710 1
a6710 1
subdir_x (o)
d6712 1
a6712 1
subdirs (o)
d6714 1
a6714 1
test (o)
d6716 1
a6716 1
test_via_harness (override)
d6718 1
a6718 1
test_via_script (override)
d6720 1
a6720 1
tool_autosplit (o)
d6722 1
a6722 1
tools_other (o)
d6724 1
a6724 1
tool_xsubpp (o)
d6726 1
a6726 1
top_targets (o)
d6728 1
a6728 1
writedoc
d6730 1
a6730 1
xs_c (o)
d6732 1
a6732 1
xs_cpp (o)
d6734 1
a6734 1
xs_o (o)
d6736 1
a6736 1
perl_archive
d6738 1
a6738 1
perl_archive_after
d6740 1
a6740 1
export_list
d6742 1
a6742 1
=over 4
d6748 1
a6748 2
=head2 ExtUtils::MM_VMS - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d6756 2
d6760 3
a6762 1
=item Methods always loaded
d6764 1
a6764 1
wraplist
d6768 9
a6776 1
=back
d6780 3
a6782 1
=item Methods
d6784 1
a6784 1
guess_name (override)
d6786 1
a6786 1
=back
d6788 1
a6788 1
find_perl (override)
d6790 1
a6790 1
maybe_command (override)
d6792 1
a6792 1
maybe_command_in_dirs (override)
d6794 1
a6794 1
perl_script (override)
d6796 1
a6796 1
replace_manpage_separator
d6798 1
a6798 1
init_main (override)
d6800 1
a6800 1
init_others (override)
d6802 1
a6802 1
constants (override)
d6804 1
a6804 1
cflags (override)
d6806 1
a6806 1
const_cccmd (override)
d6808 1
a6808 1
pm_to_blib (override)
d6810 1
a6810 1
tool_autosplit (override)
d6812 1
a6812 1
tool_sxubpp (override)
d6814 1
a6814 1
xsubpp_version (override)
d6816 1
a6816 1
tools_other (override)
d6818 1
a6818 1
dist (override)
d6820 2
a6821 1
c_o (override)
d6823 1
a6823 1
xs_c (override)
d6825 2
a6826 1
xs_o (override)
d6828 1
a6828 1
top_targets (override)
d6830 1
a6830 1
dlsyms (override)
d6832 1
a6832 1
dynamic_lib (override)
d6834 2
a6835 1
dynamic_bs (override)
d6837 1
a6837 1
static_lib (override)
d6839 1
a6839 1
manifypods (override)
d6841 1
a6841 1
processPL (override)
d6843 1
a6843 1
installbin (override)
d6845 1
a6845 1
subdir_x (override)
d6847 1
a6847 1
clean (override)
d6849 1
a6849 1
realclean (override)
d6851 1
a6851 1
dist_core (override)
d6853 1
a6853 1
dist_test (override)
d6855 1
a6855 1
install (override)
d6857 1
a6857 1
perldepend (override)
d6859 1
a6859 1
makefile (override)
d6861 1
a6861 1
find_tests (override)
d6863 1
a6863 1
test (override)
d6865 1
a6865 1
makeaperl (override)
d6867 1
a6867 1
nicetext (override)
d6869 1
a6869 1
prefixify (override)
d6871 1
a6871 2
=head2 ExtUtils::MM_Win32 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d6873 1
a6873 1
=over 4
d6875 1
a6875 1
=item SYNOPSIS
d6877 1
a6877 1
=item DESCRIPTION
d6879 1
a6879 1
=back
d6881 1
a6881 1
constants (o)
d6883 1
a6883 1
static_lib (o)
d6885 1
a6885 1
dynamic_bs (o)
d6887 1
a6887 1
dynamic_lib (o)
d6889 1
a6889 1
perl_script
d6891 4
a6894 1
pm_to_blib
d6896 1
a6896 1
tool_autosplit (override)
d6898 1
a6898 1
tools_other (o)
d6900 2
a6901 1
xs_o (o)
d6903 1
a6903 1
top_targets (o)
d6905 1
a6905 1
manifypods (o)
d6907 1
a6907 1
dist_ci (o)
d6909 1
a6909 1
dist_core (o)
d6911 1
a6911 1
pasthru (o)
d6913 1
a6913 1
=head2 ExtUtils::MM_Win95 - method to customize MakeMaker for Win9X
d6921 2
d6925 1
a6925 1
=head2 ExtUtils::MY - ExtUtils::MakeMaker subclass for customization
d6933 2
d6937 1
a6937 1
=head2 ExtUtils::MakeMaker - create an extension Makefile
d6945 14
a6958 1
=over 4
d6960 1
a6960 1
=item How To Write A Makefile.PL
d6962 1
a6962 1
=item Default Makefile Behaviour
d6964 1
a6964 1
=item make test
d6966 1
a6966 1
=item make testdb
d6968 1
a6968 1
=item make install
d6970 2
a6971 1
=item PREFIX and LIB attribute
d6973 1
a6973 1
=item AFS users
d6975 1
a6975 1
=item Static Linking of a new Perl Binary
d6977 1
a6977 1
=item Determination of Perl Library and Installation Locations
d6979 1
a6979 1
=item Which architecture dependent directory?
d6981 1
a6981 1
=item Using Attributes and Parameters
d6983 1
a6983 17
ABSTRACT, ABSTRACT_FROM, AUTHOR, BINARY_LOCATION, C, CCFLAGS, CONFIG,
CONFIGURE, DEFINE, DIR, DISTNAME, DL_FUNCS, DL_VARS, EXCLUDE_EXT,
EXE_FILES, FIRST_MAKEFILE, FULLPERL, FULLPERLRUN, FULLPERLRUNINST,
FUNCLIST, H, IMPORTS, INC, INCLUDE_EXT, INSTALLARCHLIB, INSTALLBIN,
INSTALLDIRS, INSTALLMAN1DIR, INSTALLMAN3DIR, INSTALLPRIVLIB, INSTALLSCRIPT,
INSTALLSITEARCH, INSTALLSITEBIN, INSTALLSITELIB, INSTALLSITEMAN1DIR,
INSTALLSITEMAN3DIR, INSTALLVENDORARCH, INSTALLVENDORBIN, INSTALLVENDORLIB,
INSTALLVENDORMAN1DIR, INSTALLVENDORMAN3DIR, INST_ARCHLIB, INST_BIN,
INST_LIB, INST_MAN1DIR, INST_MAN3DIR, INST_SCRIPT, LDDLFLAGS, LDFROM, LIB,
LIBPERL_A, LIBS, LINKTYPE, MAKEAPERL, MAKEFILE, MAN1PODS, MAN3PODS,
MAP_TARGET, MYEXTLIB, NAME, NEEDS_LINKING, NOECHO, NORECURS, NO_VC, OBJECT,
OPTIMIZE, PERL, PERL_CORE, PERLMAINCC, PERL_ARCHLIB, PERL_LIB,
PERL_MALLOC_OK, PERLRUN, PERLRUNINST, PERL_SRC, PERM_RW, PERM_RWX,
PL_FILES, PM, PMLIBDIRS, PM_FILTER, POLLUTE, PPM_INSTALL_EXEC,
PPM_INSTALL_SCRIPT, PREFIX, PREREQ_FATAL, PREREQ_PM, PREREQ_PRINT,
PRINT_PREREQ, SITEPREFIX, SKIP, TYPEMAPS, VENDORPREFIX, VERBINST, VERSION,
VERSION_FROM, XS, XSOPT, XSPROTOARG, XS_VERSION
d6985 1
a6985 1
=item Additional lowercase attributes
d6987 1
a6987 2
clean, depend, dist, dynamic_lib, linkext, macro, realclean, test,
tool_autosplit
d6989 1
a6989 1
=item Overriding MakeMaker Methods
d6991 3
a6993 1
=item The End Of Cargo Cult Programming
d6995 1
a6995 1
C<<MAN3PODS => ' '>>
d6997 1
a6997 1
=item Hintsfile support
d6999 1
a6999 1
=item Distribution Support
d7001 1
a7001 3
   make distcheck,    make skipcheck,	 make distclean,    make manifest, 
  make distdir,   make disttest,    make tardist,    make dist,    make
uutardist,    make shdist,    make zipdist,    make ci
d7003 1
a7003 1
=item Disabling an extension
d7005 1
a7005 1
=back
d7007 1
a7007 1
=item ENVIRONMENT
d7009 1
a7009 1
PERL_MM_OPT, PERL_MM_USE_DEFAULT
d7011 1
a7011 1
=item SEE ALSO
d7013 1
a7013 1
=item AUTHORS
d7017 1
a7017 1
=head2 ExtUtils::Manifest - utilities to write and check a MANIFEST file
d7025 5
a7029 1
=item MANIFEST.SKIP
d7031 1
a7031 1
=item EXPORT_OK
d7033 8
a7040 1
=item GLOBAL VARIABLES
d7042 1
a7042 1
=item DIAGNOSTICS
d7044 1
a7044 2
C<Not in MANIFEST:> I<file>, C<Skipping> I<file>, C<No such file:> I<file>,
C<MANIFEST:> I<$!>, C<Added to MANIFEST:> I<file>
d7046 1
a7046 1
=item ENVIRONMENT
d7048 1
a7048 1
B<PERL_MM_MANIFEST_DEBUG>
d7050 1
a7050 1
=item SEE ALSO
d7056 1
a7056 1
=head2 ExtUtils::Miniperl, writemain - write the C code for perlmain.c
d7064 1
a7064 1
=item SEE ALSO
d7068 1
a7068 1
=head2 ExtUtils::Mkbootstrap - make a bootstrap file for use by DynaLoader
d7076 4
a7079 1
=back
d7081 1
a7081 2
=head2 ExtUtils::Mksymlists - write linker options files for dynamic
extension
d7085 7
a7091 1
=item SYNOPSIS
d7093 1
a7093 1
=item DESCRIPTION
d7095 1
a7095 1
DLBASE, DL_FUNCS, DL_VARS, FILE, FUNCLIST, IMPORTS, NAME
a7098 2
=item REVISION

d7101 1
a7101 1
=head2 ExtUtils::Packlist - manage .packlist files
a7108 8
=item USAGE

=item FUNCTIONS

new(), read(), write(), validate(), packlist_file()

=item EXAMPLE

d7113 1
a7113 1
=head2 ExtUtils::testlib - add blib/* directories to @@INC
d7121 1
a7121 1
=back
d7123 2
a7124 1
=head2 Fatal - replace functions with equivalents which succeed or die
d7126 1
a7126 1
=over 4
d7128 1
a7128 1
=item SYNOPSIS
d7130 1
a7130 1
=item DESCRIPTION
d7136 1
a7136 1
=head2 Fcntl - load the C Fcntl.h defines
d7144 3
a7146 1
=item NOTE
d7148 1
a7148 1
=item EXPORTED SYMBOLS
d7152 1
a7152 1
=head2 File::Basename, fileparse - split a pathname into pieces
d7160 1
a7160 5
fileparse_set_fstype, fileparse

=item EXAMPLES

C<basename>, C<dirname>
d7164 1
a7164 1
=head2 File::CheckTree, validate - run many filetest checks on a tree
d7174 1
a7174 1
=item HISTORY
d7176 1
a7176 1
=back
d7178 1
a7178 1
=head2 File::Compare - Compare files or filehandles
a7185 2
=item RETURN

d7190 1
a7190 1
=head2 File::Copy - Copy files or filehandles
d7198 1
a7198 1
=over 4
d7200 1
a7200 1
=item Special behaviour if C<syscopy> is defined (OS/2, VMS and Win32)
d7202 1
a7202 7
rmscopy($from,$to[,$date_flag])

=back

=item RETURN

=item NOTES
d7208 1
a7208 1
=head2 File::DosGlob - DOS like globbing and then some
a7215 6
=item NOTES

=item EXPORTS (by request only)

=item BUGS

a7217 4
=item HISTORY

=item SEE ALSO

d7220 1
a7220 1
=head2 File::Find - Traverse a directory tree.
a7227 2
B<find>, B<finddepth>

d7230 1
a7230 1
=item %options
d7232 1
a7232 3
C<wanted>, C<bydepth>, C<preprocess>, C<postprocess>, C<follow>,
C<follow_fast>, C<follow_skip>, C<dangling_symlinks>, C<no_chdir>,
C<untaint>, C<untaint_pattern>, C<untaint_skip>
d7234 1
a7234 1
=item The wanted function
d7236 3
a7238 3
C<$File::Find::dir> is the current directory name,, C<$_> is the current
filename within that directory, C<$File::Find::name> is the complete
pathname to the file
d7240 1
a7240 1
=back
d7242 3
a7244 1
=item WARNINGS
d7246 1
a7246 3
=item CAVEAT

$dont_use_nlink, symlinks
d7250 1
a7250 1
=item HISTORY
d7252 1
a7252 1
=back
d7254 1
a7254 1
=head2 File::Glob - Perl extension for BSD glob routine
d7256 1
a7256 1
=over 4
d7258 1
a7258 1
=item SYNOPSIS
d7260 1
a7260 13
=item DESCRIPTION

C<GLOB_ERR>, C<GLOB_LIMIT>, C<GLOB_MARK>, C<GLOB_NOCASE>, C<GLOB_NOCHECK>,
C<GLOB_NOSORT>, C<GLOB_BRACE>, C<GLOB_NOMAGIC>, C<GLOB_QUOTE>,
C<GLOB_TILDE>, C<GLOB_CSH>, C<GLOB_ALPHASORT>

=item DIAGNOSTICS

C<GLOB_NOSPACE>, C<GLOB_ABEND>

=item NOTES

=item AUTHOR
d7264 1
a7264 1
=head2 File::Path - create or remove directory trees
d7272 3
a7274 1
=item AUTHORS
d7278 1
a7278 1
=head2 File::Spec - portably perform operations on file names
d7286 6
a7291 1
=item METHODS
d7293 1
a7293 3
canonpath, catdir, catfile, curdir, devnull, rootdir, tmpdir, updir,
no_upwards, case_tolerant, file_name_is_absolute, path, join, splitpath,
splitdir, catpath(), abs2rel, rel2abs()
d7295 1
a7295 1
=item SEE ALSO
d7301 1
a7301 1
=head2 File::Spec::Cygwin - methods for Cygwin file specs
d7307 2
a7310 4
=back

=head2 File::Spec::Epoc - methods for Epoc file specs

d7313 1
a7313 1
=item SYNOPSIS
d7315 1
a7315 1
=item DESCRIPTION
d7317 1
a7317 1
canonpath()
d7319 1
a7319 1
=back
d7321 1
a7321 1
=over 4
d7323 1
a7323 1
=item SEE ALSO
d7325 1
a7325 1
=back
d7327 1
a7327 1
=head2 File::Spec::Functions - portably perform operations on file names
d7329 1
a7329 1
=over 4
d7331 1
a7331 1
=item SYNOPSIS
d7333 1
a7333 1
=item DESCRIPTION
d7335 1
a7335 1
=over 4
d7337 1
a7337 1
=item Exports
d7339 1
a7339 1
=back
d7341 1
a7341 1
=item SEE ALSO
d7343 1
a7343 1
=back
d7345 1
a7345 1
=head2 File::Spec::Mac - File::Spec for Mac OS (Classic)
d7347 2
a7348 1
=over 4
d7350 1
a7350 1
=item SYNOPSIS
d7352 2
a7353 1
=item DESCRIPTION
d7355 1
a7355 1
=item METHODS
d7357 3
a7359 1
canonpath
d7363 1
a7363 1
catdir()
d7365 1
a7365 1
catfile
d7367 1
a7367 1
curdir
d7369 1
a7369 1
devnull
d7371 1
a7371 1
rootdir
d7373 1
a7373 1
tmpdir
d7375 1
a7375 1
updir
d7377 1
a7377 1
file_name_is_absolute
d7379 1
a7379 1
path
d7381 2
a7382 1
splitpath
d7384 1
a7384 1
splitdir
d7386 1
a7386 1
catpath
d7388 1
a7388 1
abs2rel
d7390 1
a7390 1
rel2abs
d7392 1
a7392 1
=over 4
d7394 1
a7394 1
=item AUTHORS
d7396 1
a7396 1
=item SEE ALSO
d7398 1
a7398 1
=back
d7400 1
a7400 1
canonpath
d7402 2
a7403 1
splitpath
d7405 1
a7405 1
splitdir
d7407 1
a7407 1
catpath
d7409 1
a7409 1
=head2 File::Spec::OS2 - methods for OS/2 file specs
d7413 1
a7413 1
=item SYNOPSIS
d7415 1
a7415 1
=item DESCRIPTION
d7417 1
a7417 1
=back
d7419 1
a7419 2
=head2 File::Spec::Unix - File::Spec for Unix, base for other File::Spec
modules
d7421 1
a7421 1
=over 4
d7423 1
a7423 1
=item SYNOPSIS
d7425 1
a7425 1
=item DESCRIPTION
d7427 1
a7427 1
=item METHODS
d7429 1
a7429 1
canonpath()
d7431 1
a7431 1
=back
d7433 1
a7433 1
catdir()
d7435 1
a7435 1
catfile
d7437 1
a7437 1
curdir
d7439 1
a7439 1
devnull
d7441 1
a7441 1
rootdir
d7443 1
a7443 1
tmpdir
d7445 1
a7445 1
updir
d7447 1
a7447 1
no_upwards
d7449 1
a7449 1
case_tolerant
d7451 1
a7451 1
file_name_is_absolute
d7453 1
a7453 1
path
d7455 1
a7455 1
join
d7457 1
a7457 1
splitpath
d7459 1
a7459 1
splitdir
d7461 1
a7461 1
catpath()
d7463 1
a7463 1
abs2rel
d7465 1
a7465 5
rel2abs()

=over 4

=item SEE ALSO
d7469 1
a7469 1
=head2 File::Spec::VMS - methods for VMS file specs
d7471 2
a7472 1
=over 4
d7474 1
a7474 1
=item SYNOPSIS
d7476 3
a7478 1
=item DESCRIPTION
d7480 1
a7480 1
eliminate_macros
d7482 1
a7482 3
=back

fixpath
d7486 1
a7486 3
=item Methods always loaded

canonpath (override)
d7490 1
a7490 1
catdir
d7492 5
a7496 1
catfile
d7498 1
a7498 1
curdir (override)
d7500 2
a7501 1
devnull (override)
d7503 1
a7503 1
rootdir (override)
d7505 1
a7505 1
tmpdir (override)
d7507 1
a7507 1
updir (override)
d7509 2
a7510 1
case_tolerant (override)
d7512 1
a7512 1
path (override)
d7514 1
a7514 1
file_name_is_absolute (override)
d7516 1
a7516 1
splitpath (override)
d7518 12
a7529 1
splitdir (override)
d7531 1
a7531 1
catpath (override)
d7533 1
a7533 5
abs2rel (override)

rel2abs (override)

=over 4
d7539 1
a7539 1
=head2 File::Spec::Win32 - methods for Win32 file specs
d7545 2
d7549 5
a7553 1
devnull
d7557 2
a7558 1
tmpdir
d7560 1
a7560 1
catfile
d7562 1
a7562 1
canonpath
d7564 1
a7564 1
splitpath
d7566 1
a7566 1
splitdir
d7568 1
a7568 1
catpath
d7572 1
a7572 1
=item Note For File::Spec::Win32 Maintainers
d7576 5
a7580 1
=over 4
d7586 1
a7586 1
=head2 File::Temp - return name and handle of a temporary file safely
a7589 2
=item PORTABILITY

d7594 16
d7612 1
a7612 1
=over 4
d7614 1
a7614 1
=item FUNCTIONS
d7616 1
a7616 1
B<tempfile>
d7620 1
a7620 1
B<tempdir>
d7624 3
a7626 1
=item MKTEMP FUNCTIONS
d7628 1
a7628 1
B<mkstemp>
d7630 1
a7630 1
=back
d7632 1
a7632 1
B<mkstemps>
d7634 1
a7634 1
B<mkdtemp>
d7636 1
a7636 1
B<mktemp>
d7638 1
a7638 1
=over 4
d7640 1
a7640 1
=item POSIX FUNCTIONS
d7642 1
a7642 1
B<tmpnam>
d7646 1
a7646 1
B<tmpfile>
d7650 1
a7650 1
=item ADDITIONAL FUNCTIONS
d7652 1
a7652 3
B<tempnam>

=back
d7656 1
a7656 1
=item UTILITY FUNCTIONS
d7658 1
a7658 1
B<unlink0>
d7662 1
a7662 1
=over 4
d7664 1
a7664 1
=item PACKAGE VARIABLES
d7666 1
a7666 1
B<safe_level>, STANDARD, MEDIUM, HIGH
d7670 1
a7670 1
TopSystemUID
d7674 1
a7674 1
=item WARNING
d7676 1
a7676 1
=over 4
d7678 1
a7678 1
=item Temporary files and NFS
d7680 1
a7680 1
=back
d7682 1
a7682 1
=item HISTORY
d7684 1
a7684 1
=item SEE ALSO
d7686 1
a7686 1
=item AUTHOR
d7690 1
a7690 1
=head2 File::stat - by-name interface to Perl's built-in stat() functions
d7692 1
a7692 5
=over 4

=item SYNOPSIS

=item DESCRIPTION
d7696 1
a7696 3
=item NOTE

=item AUTHOR
d7700 1
a7700 1
=head2 FileCache - keep more files open than the system permits
d7706 2
d7710 1
a7710 1
cacheout EXPR, cacheout MODE, EXPR
d7712 1
a7712 1
=item CAVEATS
d7714 1
a7714 1
=item BUGS
d7718 1
a7718 1
=head2 FileHandle - supply object methods for filehandles
d7726 1
a7726 1
$fh->print, $fh->printf, $fh->getline, $fh->getlines
d7732 1
a7732 1
=head2 Filter::Simple - Simplified source filtering
d7742 1
a7742 1
=item The Problem
d7744 3
a7746 1
=item A Solution
d7748 1
a7748 1
=item Disabling or changing <no> behaviour
d7750 1
a7750 1
=item All-in-one interface
d7752 1
a7752 1
=item Filtering only specific components of source code
d7754 1
a7754 2
C<"code">, C<"executable">, C<"quotelike">, C<"string">, C<"regex">,
C<"all">
d7756 1
a7756 1
=item Filtering only the code parts of source code
d7758 1
a7758 5
Most source code ceases to be grammatically correct when it is broken up
into the pieces between string literals and regexes. So the C<'code'>
component filter behaves slightly differently from the other partial
filters
described in the previous section.
d7760 1
a7760 1
=item Using Filter::Simple with an explicit C<import> subroutine
d7762 26
a7787 1
=item Using Filter::Simple and Exporter together
d7789 1
a7789 1
=item How it works
d7791 1
a7791 1
=back
d7793 1
a7793 1
=item AUTHOR
d7795 1
a7795 1
=item COPYRIGHT
d7797 1
a7797 1
=back
d7799 1
a7799 1
=head2 Filter::Util::Call - Perl Source Filter Utility Module
d7801 1
a7801 1
=over 4
d7803 1
a7803 1
=item SYNOPSIS
d7805 4
a7808 1
=item DESCRIPTION
d7812 3
a7814 1
=item B<use Filter::Util::Call>
d7816 1
a7816 1
=item B<import()>
d7818 1
a7818 1
=item B<filter() and anonymous sub>
d7820 1
a7820 1
B<$_>, B<$status>, B<filter_read> and B<filter_read_exact>, B<filter_del>
d7822 1
a7822 1
=back
d7824 1
a7824 1
=item EXAMPLES
d7828 3
a7830 1
=item Example 1: A simple filter.
d7832 1
a7832 1
=item Example 2: Using the context
d7834 1
a7834 1
=item Example 3: Using the context within the filter
d7836 1
a7836 1
=item Example 4: Using filter_del
d7838 1
a7838 1
=back
d7840 1
a7840 1
=item Filter::Simple
d7844 3
a7846 1
=item DATE
d7850 1
a7850 1
=head2 FindBin - Locate directory of original perl script
d7858 4
a7861 1
=item EXPORTABLE VARIABLES
d7863 1
a7863 1
=item KNOWN ISSUES
d7865 1
a7865 1
=item KNOWN BUGS
d7867 1
a7867 1
=item AUTHORS
d7869 1
a7869 1
=item COPYRIGHT
d7873 1
a7873 1
=head2 GDBM_File - Perl5 access to the gdbm library.
d7881 5
a7885 1
=item AVAILABILITY
d7889 9
a7897 1
=item SEE ALSO
d7901 1
a7901 1
=head2 Getopt::Long - Extended processing of command line options
d7909 22
a7930 1
=item Command Line Options, an Introduction
d7932 1
a7932 1
=item Getting Started with Getopt::Long
d7936 7
a7942 1
=item Simple options
d7944 1
a7944 1
=item A little bit less simple options
d7946 1
a7946 1
=item Mixing command line option with other arguments
d7948 1
a7948 1
=item Options with values
d7950 1
a7950 1
=item Options with multiple values
d7952 1
a7952 1
=item Options with hash values
d7954 1
a7954 1
=item User-defined subroutines to handle options
d7956 3
a7958 1
=item Options with multiple names
d7960 1
a7960 1
=item Case and abbreviations
d7962 2
a7963 1
=item Summary of Option Specifications
d7965 1
a7965 2
!, +, s, i, o, f, : I<type> [ I<desttype> ], : I<number> [ I<desttype> ], :
+ [ I<desttype> ]
d7967 4
a7970 1
=back
d7972 1
a7972 1
=item Advanced Possibilities
d7974 3
a7976 1
=over 4
d7978 1
a7978 1
=item Object oriented interface
d7980 69
a8048 1
=item Thread Safety
d8050 1
a8050 1
=item Documentation and help texts
d8052 2
a8053 1
=item Storing options in a hash
d8055 1
a8055 1
=item Bundling
d8057 2
a8058 1
=item The lonesome dash
d8060 1
a8060 1
=item Argument callback
d8062 2
a8063 1
=back
d8065 1
a8065 1
=item Configuring Getopt::Long
d8067 1
a8067 5
default, posix_default, auto_abbrev, getopt_compat, gnu_compat, gnu_getopt,
require_order, permute, bundling (default: disabled), bundling_override
(default: disabled), ignore_case  (default: enabled), ignore_case_always
(default: disabled), pass_through (default: disabled), prefix,
prefix_pattern, debug (default: disabled)
d8069 1
a8069 1
=item Return values and Errors
d8071 24
a8094 1
=item Legacy
d8096 1
a8096 1
=over 4
d8098 1
a8098 1
=item Default destinations
d8100 1
a8100 1
=item Alternative option starters
d8102 6
a8107 1
=item Configuration variables
d8109 1
a8109 1
=back
d8111 3
a8113 1
=item Trouble Shooting
d8115 1
a8115 1
=over 4
d8117 2
a8118 1
=item Warning: Ignoring '!' modifier for short option
d8120 1
a8120 2
=item GetOptions does not return a false result when an option is not
supplied
d8122 4
a8125 1
=item GetOptions does not split the command line correctly
d8127 1
a8127 1
=item How do I put a "-?" option into a Getopt::Long?
d8129 2
a8130 1
=back
d8132 1
a8132 1
=item AUTHOR
d8134 2
a8135 1
=item COPYRIGHT AND DISCLAIMER
d8137 1
a8137 1
=back
d8139 4
a8142 2
=head2 Getopt::Std, getopt - Process single-character switches with switch
clustering
d8144 1
a8144 1
=over 4
d8146 1
a8146 1
=item SYNOPSIS
d8148 1
a8148 1
=item DESCRIPTION
d8150 2
a8151 1
=back
d8153 1
a8153 1
=head2 Hash::Util - A selection of general-utility hash subroutines
d8155 14
a8168 1
=over 4
d8170 1
a8170 1
=item SYNOPSIS
d8172 2
a8173 1
=item DESCRIPTION
d8175 1
a8175 1
=over 4
d8177 9
a8185 1
=item Restricted hashes
d8187 1
a8187 1
lock_keys, unlock_keys
d8189 3
a8191 1
=back
d8193 1
a8193 1
=back
d8195 1
a8195 1
lock_value, unlock_value
d8197 1
a8197 1
B<lock_hash>, B<unlock_hash>
d8199 1
a8199 1
=over 4
d8201 1
a8201 1
=item AUTHOR
d8203 1
a8203 1
=item SEE ALSO
d8207 1
a8207 2
=head2 I18N::Collate - compare 8-bit scalar data according to the current
locale
d8217 3
a8219 2
=head2 I18N::LangTags - functions for dealing with RFC3066-style language
tags
d8227 1
a8227 1
=back
d8229 1
a8229 1
the function is_language_tag($lang1)
d8231 3
a8233 1
the function extract_language_tags($whatever)
d8235 1
a8235 1
the function same_language_tag($lang1, $lang2)
d8237 2
a8238 1
the function similarity_language_tag($lang1, $lang2)
d8240 1
a8240 1
the function is_dialect_of($lang1, $lang2)
d8242 3
a8244 1
the function super_languages($lang1)
d8246 1
a8246 1
the function locale2language_tag($locale_identifier)
d8248 1
a8248 15
the function encode_language_tag($lang1)

the function alternate_language_tags($lang1)

the function @@langs = panic_languages(@@accept_languages)

=over 4

=item ABOUT LOWERCASING

=item ABOUT UNICODE PLAINTEXT LANGUAGE TAGS

=item SEE ALSO

=item COPYRIGHT
d8254 1
a8254 1
=head2 I18N::LangTags::List -- tags and names for human languages
d8262 1
a8262 123
=item ABOUT LANGUAGE TAGS

=item LIST OF LANGUAGES

{ab} : Abkhazian, {ace} : Achinese, {ach} : Acoli, {ada} : Adangme, {aa} :
Afar, {afh} : Afrihili, {af} : Afrikaans, [{afa} : Afro-Asiatic (Other)],
{aka} : Akan, {akk} : Akkadian, {sq} : Albanian, {ale} : Aleut, [{alg} :
Algonquian languages], [{tut} : Altaic (Other)], {am} : Amharic, {i-ami} :
Ami, [{apa} : Apache languages], {ar} : Arabic, {arc} : Aramaic, {arp} :
Arapaho, {arn} : Araucanian, {arw} : Arawak, {hy} : Armenian, [{art} :
Artificial (Other)], {as} : Assamese, [{ath} : Athapascan languages],
[{aus} : Australian languages], [{map} : Austronesian (Other)], {ava} :
Avaric, {ae} : Avestan, {awa} : Awadhi, {ay} : Aymara, {az} : Azerbaijani,
{ban} : Balinese, [{bat} : Baltic (Other)], {bal} : Baluchi, {bam} :
Bambara, [{bai} : Bamileke languages], {bad} : Banda, [{bnt} : Bantu
(Other)], {bas} : Basa, {ba} : Bashkir, {eu} : Basque, {btk} : Batak
(Indonesia), {bej} : Beja, {be} : Belarusian, {bem} : Bemba, {bn} :
Bengali, [{ber} : Berber (Other)], {bho} : Bhojpuri, {bh} : Bihari, {bik} :
Bikol, {bin} : Bini, {bi} : Bislama, {bs} : Bosnian, {bra} : Braj, {br} :
Breton, {bug} : Buginese, {bg} : Bulgarian, {i-bnn} : Bunun, {bua} :
Buriat, {my} : Burmese, {cad} : Caddo, {car} : Carib, {ca} : Catalan,
[{cau} : Caucasian (Other)], {ceb} : Cebuano, [{cel} : Celtic (Other)],
[{cai} : Central American Indian (Other)], {chg} : Chagatai, [{cmc} :
Chamic languages], {ch} : Chamorro, {ce} : Chechen, {chr} : Cherokee, {chy}
: Cheyenne, {chb} : Chibcha, {ny} : Chichewa, {zh} : Chinese, {chn} :
Chinook Jargon, {chp} : Chipewyan, {cho} : Choctaw, {cu} : Church Slavic,
{chk} : Chuukese, {cv} : Chuvash, {cop} : Coptic, {kw} : Cornish, {co} :
Corsican, {cre} : Cree, {mus} : Creek, [{cpe} : English-based Creoles and
pidgins (Other)], [{cpf} : French-based Creoles and pidgins (Other)],
[{cpp} : Portuguese-based Creoles and pidgins (Other)], [{crp} : Creoles
and pidgins (Other)], {hr} : Croatian, [{cus} : Cushitic (Other)], {cs} :
Czech, {dak} : Dakota, {da} : Danish, {day} : Dayak, {i-default} : Default
(Fallthru) Language, {del} : Delaware, {din} : Dinka, {div} : Divehi, {doi}
: Dogri, {dgr} : Dogrib, [{dra} : Dravidian (Other)], {dua} : Duala, {nl} :
Dutch, {dum} : Middle Dutch (ca.1050-1350), {dyu} : Dyula, {dz} : Dzongkha,
{efi} : Efik, {egy} : Ancient Egyptian, {eka} : Ekajuk, {elx} : Elamite,
{en} : English, {enm} : Old English (1100-1500), {ang} : Old English
(ca.450-1100), {eo} : Esperanto, {et} : Estonian, {ewe} : Ewe, {ewo} :
Ewondo, {fan} : Fang, {fat} : Fanti, {fo} : Faroese, {fj} : Fijian, {fi} :
Finnish, [{fiu} : Finno-Ugrian (Other)], {fon} : Fon, {fr} : French, {frm}
: Middle French (ca.1400-1600), {fro} : Old French (842-ca.1400), {fy} :
Frisian, {fur} : Friulian, {ful} : Fulah, {gaa} : Ga, {gd} : Scots Gaelic,
{gl} : Gallegan, {lug} : Ganda, {gay} : Gayo, {gba} : Gbaya, {gez} : Geez,
{ka} : Georgian, {de} : German, {gmh} : Middle High German (ca.1050-1500),
{goh} : Old High German (ca.750-1050), [{gem} : Germanic (Other)], {gil} :
Gilbertese, {gon} : Gondi, {gor} : Gorontalo, {got} : Gothic, {grb} :
Grebo, {grc} : Ancient Greek, {el} : Modern Greek, {gn} : Guarani, {gu} :
Gujarati, {gwi} : Gwich'in, {hai} : Haida, {ha} : Hausa, {haw} : Hawaiian,
{he} : Hebrew, {hz} : Herero, {hil} : Hiligaynon, {him} : Himachali, {hi} :
Hindi, {ho} : Hiri Motu, {hit} : Hittite, {hmn} : Hmong, {hu} : Hungarian,
{hup} : Hupa, {iba} : Iban, {is} : Icelandic, {ibo} : Igbo, {ijo} : Ijo,
{ilo} : Iloko, [{inc} : Indic (Other)], [{ine} : Indo-European (Other)],
{id} : Indonesian, {ia} : Interlingua (International Auxiliary Language
Association), {ie} : Interlingue, {iu} : Inuktitut, {ik} : Inupiaq, [{ira}
: Iranian (Other)], {ga} : Irish, {mga} : Middle Irish (900-1200), {sga} :
Old Irish (to 900), [{iro} : Iroquoian languages], {it} : Italian, {ja} :
Japanese, {jw} : Javanese, {jrb} : Judeo-Arabic, {jpr} : Judeo-Persian,
{kab} : Kabyle, {kac} : Kachin, {kl} : Kalaallisut, {kam} : Kamba, {kn} :
Kannada, {kau} : Kanuri, {kaa} : Kara-Kalpak, {kar} : Karen, {ks} :
Kashmiri, {kaw} : Kawi, {kk} : Kazakh, {kha} : Khasi, {km} : Khmer, [{khi}
: Khoisan (Other)], {kho} : Khotanese, {ki} : Kikuyu, {kmb} : Kimbundu,
{rw} : Kinyarwanda, {ky} : Kirghiz, {i-klingon} : Klingon, {kv} : Komi,
{kon} : Kongo, {kok} : Konkani, {ko} : Korean, {kos} : Kosraean, {kpe} :
Kpelle, {kro} : Kru, {kj} : Kuanyama, {kum} : Kumyk, {ku} : Kurdish, {kru}
: Kurukh, {kut} : Kutenai, {lad} : Ladino, {lah} : Lahnda, {lam} : Lamba,
{lo} : Lao, {la} : Latin, {lv} : Latvian, {lb} : Letzeburgesch, {lez} :
Lezghian, {ln} : Lingala, {lt} : Lithuanian, {nds} : Low German, {loz} :
Lozi, {lub} : Luba-Katanga, {lua} : Luba-Lulua, {lui} : Luiseno, {lun} :
Lunda, {luo} : Luo (Kenya and Tanzania), {lus} : Lushai, {mk} : Macedonian,
{mad} : Madurese, {mag} : Magahi, {mai} : Maithili, {mak} : Makasar, {mg} :
Malagasy, {ms} : Malay, {ml} : Malayalam, {mt} : Maltese, {mnc} : Manchu,
{mdr} : Mandar, {man} : Mandingo, {mni} : Manipuri, [{mno} : Manobo
languages], {gv} : Manx, {mi} : Maori, {mr} : Marathi, {chm} : Mari, {mh} :
Marshall, {mwr} : Marwari, {mas} : Masai, [{myn} : Mayan languages], {men}
: Mende, {mic} : Micmac, {min} : Minangkabau, {i-mingo} : Mingo, [{mis} :
Miscellaneous languages], {moh} : Mohawk, {mo} : Moldavian, [{mkh} :
Mon-Khmer (Other)], {lol} : Mongo, {mn} : Mongolian, {mos} : Mossi, [{mul}
: Multiple languages], [{mun} : Munda languages], {nah} : Nahuatl, {na} :
Nauru, {nv} : Navajo, {nd} : North Ndebele, {nr} : South Ndebele, {ng} :
Ndonga, {ne} : Nepali, {new} : Newari, {nia} : Nias, [{nic} :
Niger-Kordofanian (Other)], [{ssa} : Nilo-Saharan (Other)], {niu} : Niuean,
{non} : Old Norse, [{nai} : North American Indian], {se} : Northern Sami,
{no} : Norwegian, {nb} : Norwegian Bokmal, {nn} : Norwegian Nynorsk, [{nub}
: Nubian languages], {nym} : Nyamwezi, {nyn} : Nyankole, {nyo} : Nyoro,
{nzi} : Nzima, {oc} : Occitan (post 1500), {oji} : Ojibwa, {or} : Oriya,
{om} : Oromo, {osa} : Osage, {os} : Ossetian; Ossetic, [{oto} : Otomian
languages], {pal} : Pahlavi, {i-pwn} : Paiwan, {pau} : Palauan, {pi} :
Pali, {pam} : Pampanga, {pag} : Pangasinan, {pa} : Panjabi, {pap} :
Papiamento, [{paa} : Papuan (Other)], {fa} : Persian, {peo} : Old Persian
(ca.600-400 B.C.), [{phi} : Philippine (Other)], {phn} : Phoenician, {pon}
: Pohnpeian, {pl} : Polish, {pt} : Portuguese, [{pra} : Prakrit languages],
{pro} : Old Provencal (to 1500), {ps} : Pushto, {qu} : Quechua, {rm} :
Raeto-Romance, {raj} : Rajasthani, {rap} : Rapanui, {rar} : Rarotongan,
[{qaa - qtz} : Reserved for local use.], [{roa} : Romance (Other)], {ro} :
Romanian, {rom} : Romany, {rn} : Rundi, {ru} : Russian, [{sal} : Salishan
languages], {sam} : Samaritan Aramaic, [{smi} : Sami languages (Other)],
{sm} : Samoan, {sad} : Sandawe, {sg} : Sango, {sa} : Sanskrit, {sat} :
Santali, {sc} : Sardinian, {sas} : Sasak, {sco} : Scots, {sel} : Selkup,
[{sem} : Semitic (Other)], {sr} : Serbian, {srr} : Serer, {shn} : Shan,
{sn} : Shona, {sid} : Sidamo, {sgn-...} : Sign Languages, {bla} : Siksika,
{sd} : Sindhi, {si} : Sinhalese, [{sit} : Sino-Tibetan (Other)], [{sio} :
Siouan languages], {den} : Slave (Athapascan), [{sla} : Slavic (Other)],
{sk} : Slovak, {sl} : Slovenian, {sog} : Sogdian, {so} : Somali, {son} :
Songhai, {snk} : Soninke, {wen} : Sorbian languages, {nso} : Northern
Sotho, {st} : Southern Sotho, [{sai} : South American Indian (Other)], {es}
: Spanish, {suk} : Sukuma, {sux} : Sumerian, {su} : Sundanese, {sus} :
Susu, {sw} : Swahili, {ss} : Swati, {sv} : Swedish, {syr} : Syriac, {tl} :
Tagalog, {ty} : Tahitian, [{tai} : Tai (Other)], {tg} : Tajik, {tmh} :
Tamashek, {ta} : Tamil, {i-tao} : Tao, {tt} : Tatar, {i-tay} : Tayal, {te}
: Telugu, {ter} : Tereno, {tet} : Tetum, {th} : Thai, {bo} : Tibetan, {tig}
: Tigre, {ti} : Tigrinya, {tem} : Timne, {tiv} : Tiv, {tli} : Tlingit,
{tpi} : Tok Pisin, {tkl} : Tokelau, {tog} : Tonga (Nyasa), {to} : Tonga
(Tonga Islands), {tsi} : Tsimshian, {ts} : Tsonga, {i-tsu} : Tsou, {tn} :
Tswana, {tum} : Tumbuka, {tr} : Turkish, {ota} : Ottoman Turkish
(1500-1928), {tk} : Turkmen, {tvl} : Tuvalu, {tyv} : Tuvinian, {tw} : Twi,
{uga} : Ugaritic, {ug} : Uighur, {uk} : Ukrainian, {umb} : Umbundu, {und} :
Undetermined, {ur} : Urdu, {uz} : Uzbek, {vai} : Vai, {ven} : Venda, {vi} :
Vietnamese, {vo} : Volapuk, {vot} : Votic, [{wak} : Wakashan languages],
{wal} : Walamo, {war} : Waray, {was} : Washo, {cy} : Welsh, {wo} : Wolof,
{x-...} : Unregistered (Semi-Private Use), {xh} : Xhosa, {sah} : Yakut,
{yao} : Yao, {yap} : Yapese, {yi} : Yiddish, {yo} : Yoruba, [{ypk} : Yupik
languages], {znd} : Zande, [{zap} : Zapotec], {zen} : Zenaga, {za} :
Zhuang, {zu} : Zulu, {zun} : Zuni
d8264 1
a8264 1
=item SEE ALSO
d8266 1
a8266 1
=item COPYRIGHT AND DISCLAIMER
d8268 1
a8268 1
=item AUTHOR
d8270 1
a8270 1
=back
d8272 1
a8272 1
=head2 I18N::Langinfo - query locale information
d8274 1
a8274 1
=over 4
d8276 1
a8276 1
=item SYNOPSIS
d8278 1
a8278 1
=item DESCRIPTION
d8282 1
a8282 1
=item EXPORT
d8286 1
a8286 1
=item SEE ALSO
d8288 1
a8288 1
=item AUTHOR
d8290 1
a8290 1
=item COPYRIGHT AND LICENSE
d8292 1
a8292 1
=back
d8294 1
a8294 1
=head2 IO - load various IO modules
d8296 1
a8296 1
=over 4
d8298 1
a8298 1
=item SYNOPSIS
d8300 1
a8300 1
=item DESCRIPTION
d8304 1
a8304 1
=head2 IO::Dir - supply object methods for directory handles
d8308 1
a8308 1
=item SYNOPSIS
d8310 1
a8310 1
=item DESCRIPTION
d8312 1
a8312 2
new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, IO::Dir, DIRNAME [, OPTIONS ]
d8314 2
a8315 1
=item SEE ALSO
d8317 1
a8317 3
=item AUTHOR

=item COPYRIGHT
d8321 1
a8321 1
=head2 IO::File - supply object methods for filehandles
d8323 4
a8326 1
=over 4
d8328 1
a8328 1
=item SYNOPSIS
d8330 2
a8331 1
=item DESCRIPTION
d8333 1
a8333 1
=item CONSTRUCTOR
d8335 1
a8335 1
new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile
d8337 1
a8337 1
=item METHODS
d8339 1
a8339 5
open( FILENAME [,MODE [,PERMS]] )

=item SEE ALSO

=item HISTORY
d8343 1
a8343 1
=head2 IO::Handle - supply object methods for I/O handles
d8347 1
a8347 1
=item SYNOPSIS
d8349 1
a8349 1
=item DESCRIPTION
d8351 1
a8351 1
=item CONSTRUCTOR
d8353 1
a8353 1
new (), new_from_fd ( FD, MODE )
d8355 1
a8355 14
=item METHODS

$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint

=item NOTE

=item SEE ALSO

=item BUGS

=item HISTORY
d8359 1
a8359 1
=head2 IO::Pipe - supply object methods for pipes
d8363 1
a8363 1
=item SYNOPSIS
d8365 1
a8365 1
=item DESCRIPTION
d8367 1
a8367 1
=item CONSTRUCTOR
d8369 1
a8369 11
new ( [READER, WRITER] )

=item METHODS

reader ([ARGS]), writer ([ARGS]), handles ()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT
d8373 1
a8373 1
=head2 IO::Poll - Object interface to system poll call
d8375 1
a8375 1
=over 4
d8377 1
a8377 1
=item SYNOPSIS
d8379 1
a8379 1
=item DESCRIPTION
d8381 1
a8381 4
=item METHODS

mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )
a8386 2
=item COPYRIGHT

d8389 2
a8390 1
=head2 IO::Seekable - supply seek based methods for I/O objects
d8398 1
a8398 3
$io->getpos, $io->setpos, $io->seek ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=2 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell
d8400 1
a8400 1
=item SEE ALSO
d8402 4
a8405 1
=item HISTORY
d8407 1
a8407 1
=back
d8409 1
a8409 1
=head2 IO::Select - OO interface to the select system call
d8411 1
a8411 1
=over 4
d8413 12
a8424 1
=item SYNOPSIS
d8426 1
a8426 1
=item DESCRIPTION
d8428 1
a8428 1
=item CONSTRUCTOR
d8430 1
a8430 1
new ( [ HANDLES ] )
d8432 1
a8432 1
=item METHODS
d8434 1
a8434 3
add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, ERROR [, TIMEOUT ] )
d8436 1
a8436 1
=item EXAMPLE
d8438 1
a8438 1
=item AUTHOR
d8440 1
a8440 1
=item COPYRIGHT
d8444 1
a8444 1
=head2 IO::Socket - Object interface to socket communications
d8452 1
a8452 1
=item CONSTRUCTOR
d8454 1
a8454 1
new ( [ARGS] )
d8456 1
a8456 1
=item METHODS
d8458 1
a8458 2
accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), atmark, connected,
protocol, sockdomain, sockopt(OPT [, VAL]), socktype, timeout([VAL])
a8461 4
=item AUTHOR

=item COPYRIGHT

d8464 1
a8464 1
=head2 IO::Socket::INET - Object interface for AF_INET domain sockets
a8471 4
=item CONSTRUCTOR

new ( [ARGS] )

d8474 1
a8474 1
=item METHODS
d8476 1
a8476 2
sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()
d8478 1
a8478 1
=back
d8480 1
a8480 1
=item SEE ALSO
d8482 1
a8482 1
=item AUTHOR
d8484 1
a8484 1
=item COPYRIGHT
d8486 1
a8486 1
=back
d8488 1
a8488 1
=head2 IO::Socket::UNIX - Object interface for AF_UNIX domain sockets
d8490 1
a8490 1
=over 4
d8492 1
a8492 1
=item SYNOPSIS
d8494 1
a8494 1
=item DESCRIPTION
d8496 1
a8496 1
=item CONSTRUCTOR
d8498 1
a8498 1
new ( [ARGS] )
d8500 1
a8500 1
=item METHODS
d8502 1
a8502 1
hostpath(), peerpath()
d8504 1
a8504 1
=item SEE ALSO
d8508 1
a8508 1
=item COPYRIGHT
d8512 1
a8512 2
=head2 IO::lib::IO::Dir, IO::Dir - supply object methods for directory
handles
a8519 9
new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, IO::Dir, DIRNAME [, OPTIONS ]

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

d8522 1
a8522 1
=head2 IO::lib::IO::File, IO::File - supply object methods for filehandles
a8529 12
=item CONSTRUCTOR

new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile

=item METHODS

open( FILENAME [,MODE [,PERMS]] )

=item SEE ALSO

=item HISTORY

d8532 1
a8532 2
=head2 IO::lib::IO::Handle, IO::Handle - supply object methods for I/O
handles
d8540 1
a8540 1
=item CONSTRUCTOR
d8542 1
a8542 1
new (), new_from_fd ( FD, MODE )
d8544 4
a8547 1
=item METHODS
d8549 1
a8549 4
$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint
d8551 2
a8552 1
=item NOTE
d8554 1
a8554 5
=item SEE ALSO

=item BUGS

=item HISTORY
d8558 1
a8558 1
=head2 IO::lib::IO::Pipe, IO::Pipe - supply object methods for pipes
d8566 5
a8570 9
=item CONSTRUCTOR

new ( [READER, WRITER] )

=item METHODS

reader ([ARGS]), writer ([ARGS]), handles ()

=item SEE ALSO
a8573 2
=item COPYRIGHT

d8576 2
a8577 1
=head2 IO::lib::IO::Poll, IO::Poll - Object interface to system poll call
a8584 7
=item METHODS

mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )

=item SEE ALSO

a8586 2
=item COPYRIGHT

d8589 2
a8590 2
=head2 IO::lib::IO::Seekable, IO::Seekable - supply seek based methods for
I/O objects
d8598 1
a8598 7
$io->getpos, $io->setpos, $io->seek ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=2 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell

=item SEE ALSO

=item HISTORY
d8602 2
a8603 2
=head2 IO::lib::IO::Select, IO::Select - OO interface to the select system
call
d8611 1
a8611 11
=item CONSTRUCTOR

new ( [ HANDLES ] )

=item METHODS

add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, ERROR [, TIMEOUT ] )

=item EXAMPLE
a8614 2
=item COPYRIGHT

d8617 1
a8617 2
=head2 IO::lib::IO::Socket, IO::Socket - Object interface to socket
communications
d8625 1
a8625 10
=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), atmark, connected,
protocol, sockdomain, sockopt(OPT [, VAL]), socktype, timeout([VAL])

=item SEE ALSO
d8633 1
a8633 2
=head2 IO::lib::IO::Socket::INET, IO::Socket::INET - Object interface for
AF_INET domain sockets
d8641 9
a8649 1
=item CONSTRUCTOR
d8651 1
a8651 1
new ( [ARGS] )
d8653 1
a8653 1
=over 4
d8655 1
a8655 1
=item METHODS
d8657 1
a8657 2
sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()
d8661 3
a8663 1
=item SEE ALSO
d8665 1
a8665 1
=item AUTHOR
d8667 1
a8667 1
=item COPYRIGHT
d8671 2
a8672 2
=head2 IO::lib::IO::Socket::UNIX, IO::Socket::UNIX - Object interface for
AF_UNIX domain sockets
d8680 1
a8680 3
=item CONSTRUCTOR

new ( [ARGS] )
d8682 1
a8682 1
=item METHODS
d8684 1
a8684 1
hostpath(), peerpath()
d8686 1
a8686 1
=item SEE ALSO
d8688 1
a8688 1
=item AUTHOR
d8690 1
a8690 1
=item COPYRIGHT
d8692 1
a8692 1
=back
d8694 1
a8694 1
=head2 IPC::Msg - SysV Msg IPC object class
d8696 1
a8696 1
=over 4
d8698 1
a8698 1
=item SYNOPSIS
d8700 1
a8700 1
=item DESCRIPTION
d8702 1
a8702 1
=item METHODS
d8704 1
a8704 3
new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat
d8706 1
a8706 1
=item SEE ALSO
a8709 2
=item COPYRIGHT

d8712 1
a8712 1
=head2 IPC::Open2, open2 - open a process for both reading and writing
d8720 8
a8727 1
=item WARNING 
d8731 2
d8735 1
a8735 2
=head2 IPC::Open3, open3 - open a process for reading, writing, and error
handling
a8742 2
=item WARNING

d8745 1
a8745 1
=head2 IPC::Semaphore - SysV Semaphore IPC object class
d8753 3
a8755 1
=item METHODS
d8757 2
a8758 4
new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat
d8760 1
a8760 1
=item SEE ALSO
a8763 2
=item COPYRIGHT

d8766 1
a8766 1
=head2 IPC::SysV - SysV IPC constants
d8774 3
a8776 1
ftok( PATH, ID )
d8778 1
a8778 1
=item SEE ALSO
d8780 1
a8780 1
=item AUTHORS
d8782 1
a8782 1
=item COPYRIGHT
d8786 1
a8786 1
=head2 IPC::SysV::Msg, IPC::Msg - SysV Msg IPC object class
d8790 1
a8790 1
=item SYNOPSIS
d8792 1
a8792 1
=item DESCRIPTION
d8794 1
a8794 5
=item METHODS

new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat
a8797 4
=item AUTHOR

=item COPYRIGHT

d8800 2
a8801 2
=head2 IPC::SysV::Semaphore, IPC::Semaphore - SysV Semaphore IPC object
class
d8809 1
a8809 1
=item METHODS
d8811 1
a8811 4
new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat
d8813 1
a8813 1
=item SEE ALSO
d8815 2
a8816 7
=item AUTHOR

=item COPYRIGHT

=back

=head2 List::Util - A selection of general-utility list subroutines
a8823 9
first BLOCK LIST, max LIST, maxstr LIST, min LIST, minstr LIST, reduce
BLOCK LIST, shuffle LIST, sum LIST

=item KNOWN BUGS

=item SUGGESTED ADDITIONS

=item COPYRIGHT

d8826 1
a8826 2
=head2 List::Utilib::List::Util, List::Util - A selection of
general-utility list subroutines
d8834 3
a8836 2
first BLOCK LIST, max LIST, maxstr LIST, min LIST, minstr LIST, reduce
BLOCK LIST, shuffle LIST, sum LIST
d8838 1
a8838 1
=item KNOWN BUGS
d8840 1
a8840 1
=item SUGGESTED ADDITIONS
d8842 1
a8842 1
=item COPYRIGHT
d8846 1
a8846 2
=head2 List::Utilib::Scalar::Util, Scalar::Util - A selection of
general-utility scalar subroutines
d8848 1
a8848 1
=over 4
d8850 1
a8850 1
=item SYNOPSIS
d8852 1
a8852 1
=item DESCRIPTION
d8854 1
a8854 2
blessed EXPR, dualvar NUM, STRING, isweak EXPR, openhandle FH, reftype
EXPR, tainted EXPR, weaken REF
d8856 1
a8856 1
=item KNOWN BUGS
d8858 1
a8858 1
=item COPYRIGHT
d8860 1
a8860 1
=item BLATANT PLUG
d8864 5
a8868 1
=head2 Locale::Constants - constants for Locale codes
d8870 1
a8870 1
=over 4
d8872 1
a8872 1
=item SYNOPSIS
d8874 1
a8874 1
=item DESCRIPTION
d8876 1
a8876 1
=item KNOWN BUGS AND LIMITATIONS
d8878 1
a8878 1
=item SEE ALSO
d8880 1
a8880 1
Locale::Language, Locale::Country, Locale::Script, Locale::Currency
d8882 1
a8882 1
=item AUTHOR
d8884 1
a8884 1
=item COPYRIGHT
d8886 1
a8886 1
=back
d8888 1
a8888 1
=head2 Locale::Country - ISO codes for country identification (ISO 3166)
d8890 1
a8890 1
=over 4
d8892 1
a8892 1
=item SYNOPSIS
d8894 1
a8894 1
=item DESCRIPTION
d8896 1
a8896 1
B<alpha-2>, B<alpha-3>, B<numeric>
d8898 1
a8898 1
=item CONVERSION ROUTINES
d8900 1
a8900 2
code2country( CODE, [ CODESET ] ), country2code( STRING, [ CODESET ] ),
country_code2code( CODE, CODESET, CODESET )
d8902 1
a8902 1
=item QUERY ROUTINES
d8904 1
a8904 1
C<all_country_codes( [ CODESET ] )>, C<all_country_names( [ CODESET ] )>
d8906 1
a8906 1
=item SEMI-PRIVATE ROUTINES
d8910 1
a8910 1
=item alias_code
d8912 1
a8912 1
=item rename_country
d8916 1
a8916 1
=item EXAMPLES
d8918 1
a8918 1
=item DOMAIN NAMES
d8920 1
a8920 1
=item KNOWN BUGS AND LIMITATIONS
d8922 1
a8922 1
=item SEE ALSO
d8924 1
a8924 4
Locale::Language, Locale::Script, Locale::Currency, Locale::SubCountry, ISO
3166-1, http://www.iso.org/iso/en/prods-services/iso3166ma/index.html,
http://www.egt.ie/standards/iso3166/iso3166-1-en.html,
http://www.cia.gov/cia/publications/factbook/docs/app-d-1.html
d8926 1
a8926 1
=item AUTHOR
d8928 1
a8928 1
=item COPYRIGHT
d8930 1
a8930 1
=back
d8932 1
a8932 2
=head2 Locale::Currency - ISO three letter codes for currency
identification (ISO 4217)
d8934 1
a8934 1
=over 4
d8936 1
a8936 1
=item SYNOPSIS
d8938 1
a8938 1
=item DESCRIPTION
d8940 1
a8940 1
XTS, XXX
d8942 1
a8942 1
=item CONVERSION ROUTINES
d8944 1
a8944 1
code2currency(), currency2code()
d8946 1
a8946 1
=item QUERY ROUTINES
d8948 1
a8948 1
C<all_currency_codes()>, C<all_currency_names()>
d8950 1
a8950 1
=item EXAMPLES
d8952 1
a8952 1
=item KNOWN BUGS AND LIMITATIONS
d8954 1
a8954 1
=item SEE ALSO
d8956 1
a8956 2
Locale::Country, Locale::Script, ISO 4217:1995,
http://www.bsi-global.com/iso4217currency
d8958 1
a8958 1
=item AUTHOR
d8960 1
a8960 1
=item COPYRIGHT
d8962 1
a8962 1
=back
d8964 1
a8964 2
=head2 Locale::Language - ISO two letter codes for language identification
(ISO 639)
d8966 1
a8966 1
=over 4
d8968 1
a8968 1
=item SYNOPSIS
d8970 1
a8970 1
=item DESCRIPTION
d8972 1
a8972 1
=item CONVERSION ROUTINES
d8974 1
a8974 1
code2language(), language2code()
d8976 1
a8976 1
=item QUERY ROUTINES
d8978 1
a8978 1
C<all_language_codes()>, C<all_language_names()>
d8980 1
a8980 1
=item EXAMPLES
d8982 1
a8982 1
=item KNOWN BUGS AND LIMITATIONS
d8984 1
a8984 1
=item SEE ALSO
d8986 1
a8986 2
Locale::Country, Locale::Script, Locale::Currency, ISO 639:1988 (E/F),
http://lcweb.loc.gov/standards/iso639-2/langhome.html
d8988 1
a8988 1
=item AUTHOR
d8990 1
a8990 1
=item COPYRIGHT
d8992 1
a8992 1
=back
d8994 1
a8994 1
=head2 Locale::Maketext -- framework for localization
d8996 1
a8996 1
=over 4
d8998 1
a8998 1
=item SYNOPSIS
d9000 1
a9000 1
=item DESCRIPTION
d9002 1
a9002 1
=item QUICK OVERVIEW
d9004 1
a9004 1
=item METHODS
d9006 1
a9006 1
=over 4
d9008 1
a9008 1
=item Construction Methods
d9010 1
a9010 1
=item The "maketext" Method
d9012 1
a9012 1
$lh->fail_with I<or> $lh->fail_with(I<PARAM>), $lh->failure_handler_auto
d9014 1
a9014 1
=item Utility Methods
d9016 1
a9016 4
$language->quant($number, $singular), $language->quant($number, $singular,
$plural), $language->quant($number, $singular, $plural, $negative),
$language->numf($number), $language->sprintf($format, @@items),
$language->language_tag(), $language->encoding()
d9018 1
a9018 1
=item Language Handle Attributes and Internals
d9020 1
a9020 1
=back
d9022 1
a9022 1
=item LANGUAGE CLASS HIERARCHIES
d9024 1
a9024 5
=item ENTRIES IN EACH LEXICON

=item BRACKET NOTATION

=item AUTO LEXICONS
d9026 1
a9026 1
=item CONTROLLING LOOKUP FAILURE
d9028 1
a9028 1
=item HOW TO USE MAKETEXT
a9031 4
=item COPYRIGHT AND DISCLAIMER

=item AUTHOR

d9034 2
a9035 1
=head2 Locale::Maketext::TPJ13 -- article about software localization
a9042 2
=item Localization and Perl: gettext breaks, Maketext fixes

d9045 1
a9045 1
=item A Localization Horror Story: It Could Happen To You
d9047 1
a9047 1
=item The Linguistic View
d9049 1
a9049 1
=item Breaking gettext
d9051 1
a9051 1
=item Replacing gettext
d9053 1
a9053 1
=item Buzzwords: Abstraction and Encapsulation
d9055 1
a9055 1
=item Buzzword: Isomorphism
d9057 1
a9057 1
=item Buzzword: Inheritance
d9059 1
a9059 7
=item Buzzword: Concision

=item The Devil in the Details

=item The Proof in the Pudding: Localizing Web Sites

=item References
d9063 1
a9063 1
=back
d9065 1
a9065 1
=head2 Locale::Script - ISO codes for script identification (ISO 15924)
d9067 1
a9067 1
=over 4
d9069 1
a9069 1
=item SYNOPSIS
d9071 1
a9071 1
=item DESCRIPTION
d9073 1
a9073 1
B<alpha-2>, B<alpha-3>, B<numeric>
d9075 1
a9075 1
=over 4
d9077 1
a9077 1
=item SPECIAL CODES
d9079 1
a9079 1
=back
d9081 1
a9081 1
=item CONVERSION ROUTINES
d9083 1
a9083 2
code2script( CODE, [ CODESET ] ), script2code( STRING, [ CODESET ] ),
script_code2code( CODE, CODESET, CODESET )
d9085 1
a9085 1
=item QUERY ROUTINES
d9087 1
a9087 1
C<all_script_codes ( [ CODESET ] )>, C<all_script_names ( [ CODESET ] )>
d9089 1
a9089 1
=item EXAMPLES
d9091 1
a9091 1
=item KNOWN BUGS AND LIMITATIONS
d9093 1
a9093 1
=item SEE ALSO
d9095 1
a9095 2
Locale::Language, Locale::Currency, Locale::Country, ISO 15924,
http://www.evertype.com/standards/iso15924/
d9097 1
a9097 1
=item AUTHOR
d9099 1
a9099 1
=item COPYRIGHT
d9101 1
a9101 1
=back
d9103 1
a9103 1
=head2 MIME::Base64 - Encoding and decoding of base64 strings
d9105 1
a9105 1
=over 4
d9107 1
a9107 1
=item SYNOPSIS
d9109 1
a9109 1
=item DESCRIPTION
d9111 1
a9111 1
encode_base64($str, [$eol]), decode_base64($str)
d9113 1
a9113 1
=item DIAGNOSTICS
d9115 1
a9115 1
Premature end of base64 data, Premature padding of base64 data
d9117 1
a9117 1
=item EXAMPLES
d9119 1
a9119 1
=item COPYRIGHT
d9121 1
a9121 1
=back
d9123 1
a9123 2
=head2 MIME::Base64::QuotedPrint, MIME::QuotedPrint - Encoding and decoding
of quoted-printable strings
d9125 1
a9125 1
=over 4
d9127 1
a9127 1
=item SYNOPSIS
d9129 1
a9129 1
=item DESCRIPTION
d9131 1
a9131 1
encode_qp($str), decode_qp($str);
d9133 1
a9133 1
=item COPYRIGHT
d9135 1
a9135 1
=back
d9137 1
a9137 2
=head2 MIME::QuotedPrint - Encoding and decoding of quoted-printable
strings
d9139 1
a9139 1
=over 4
d9141 1
a9141 1
=item SYNOPSIS
d9143 1
a9143 1
=item DESCRIPTION
d9145 1
a9145 1
encode_qp($str), decode_qp($str);
d9147 1
a9147 1
=item COPYRIGHT
d9149 2
a9150 3
=back

=head2 Math::BigFloat - Arbitrary size floating point math package
d9158 1
a9158 1
=over 4
d9160 1
a9160 1
=item Canonical notation
d9162 1
a9162 1
=item Output
d9164 1
a9164 1
=item C<mantissa()>, C<exponent()> and C<parts()>
d9166 1
a9166 1
=item Accuracy vs. Precision
d9168 1
a9168 1
=item Rounding
d9170 1
a9170 2
ffround ( +$scale ), ffround ( -$scale ), ffround ( 0 ), fround  ( +$scale
), fround  ( -$scale ) and fround ( 0 )
d9172 1
a9172 1
=back
d9174 1
a9174 1
=item EXAMPLES
d9176 1
a9176 1
  # not ready yet
d9178 1
a9178 1
=item Autocreating constants
d9180 1
a9180 1
=over 4
d9182 1
a9182 1
=item Math library
d9184 1
a9184 3
=item Using Math::BigInt::Lite

=back
d9186 1
a9186 1
=item BUGS
d9188 1
a9188 1
=item CAVEAT
d9190 1
a9190 1
stringify, bstr(), bdiv, Modifying and =, bpow
d9192 1
a9192 1
=item LICENSE
d9194 1
a9194 1
=item AUTHORS
d9196 1
a9196 3
=back

=head2 Math::BigInt - Arbitrary size integer math package
a9203 4
Canonical notation, Input, Output

=item METHODS

d9206 1
a9206 1
=item config
d9208 1
a9208 1
=item accuracy
d9210 1
a9210 1
=item brsft
d9212 1
a9212 1
=item new
d9214 1
a9214 1
=item bnan
d9216 1
a9216 1
=item bzero
d9218 1
a9218 1
=item binf
d9220 1
a9220 1
=item bone
d9222 1
a9222 1
=item is_one()/is_zero()/is_nan()/is_inf()
d9224 1
a9224 1
=item is_positive()/is_negative()
d9226 1
a9226 2
	$x->is_positive();		# true if >= 0
	$x->is_negative();		# true if <  0
d9228 15
a9242 1
=item is_odd()/is_even()/is_int()
d9244 1
a9244 1
=item bcmp
d9246 2
a9247 1
=item bacmp
d9249 1
a9249 1
=item sign
d9251 1
a9251 1
=item bcmp
d9253 1
a9253 1
=item bneg
d9255 3
a9257 1
=item babs
d9259 1
a9259 1
=item bnorm
d9261 1
a9261 1
=item bnot
d9263 1
a9263 1
=item binc
d9265 1
a9265 1
=item bdec
d9267 1
a9267 1
=item badd
d9269 1
a9269 1
=item bsub
d9271 1
a9271 1
=item bmul
d9273 1
a9273 1
=item bdiv
d9275 1
a9275 1
=item bmod
d9277 1
a9277 1
=item bmodinv
d9279 1
a9279 1
=item bmodpow
d9281 1
a9281 1
=item bpow
d9283 1
a9283 1
=item blsft
d9285 1
a9285 1
=item brsft
d9287 1
a9287 1
=item band
d9289 2
a9290 1
=item bior
d9292 1
a9292 1
=item bxor
d9294 1
a9294 1
=item bnot
d9296 1
a9296 1
=item bsqrt
d9298 1
a9298 1
=item bfac
d9300 1
a9300 1
=item round
d9302 1
a9302 1
=item bround
d9304 1
a9304 1
=item bfround
d9306 1
a9306 1
=item bfloor
d9308 1
a9308 1
=item bceil
d9310 1
a9310 1
=item bgcd
d9312 1
a9312 1
=item blcm
d9314 1
a9314 1
=item exponent
d9316 1
a9316 13
=item mantissa

=item parts

=item copy

=item as_number

=item bsstr

=item as_hex

=item as_bin
d9320 2
a9321 1
=item ACCURACY and PRECISION
d9325 1
a9325 1
=item Precision P
d9327 1
a9327 1
=item Accuracy A
d9329 1
a9329 1
=item Fallback F
d9331 1
a9331 1
=item Rounding mode R
d9333 1
a9333 4
'trunc', 'even', 'odd', '+inf', '-inf', 'zero', Precision, Accuracy
(significant digits), Setting/Accessing, Creating numbers, Usage,
Precedence, Overriding globals, Local settings, Rounding, Default values,
Remarks
d9337 1
a9337 1
=item INTERNALS
d9341 3
a9343 1
=item MATH LIBRARY
d9345 1
a9345 1
=item SIGN
d9347 1
a9347 1
=item mantissa(), exponent() and parts()
d9349 1
a9349 1
=back
d9351 1
a9351 1
=item EXAMPLES
d9353 1
a9353 1
  use Math::BigInt;
d9355 1
a9355 1
=item Autocreating constants
d9357 1
a9357 1
=item PERFORMANCE
d9361 1
a9361 1
=item Alternative math libraries
d9363 1
a9363 1
=item SUBCLASSING
d9367 1
a9367 1
=item Subclassing Math::BigInt
d9369 1
a9369 1
=item UPGRADING
d9371 1
a9371 1
=over 4
d9373 1
a9373 1
=item Auto-upgrade
d9375 1
a9375 1
bsqrt(), div(), blog()
d9379 1
a9379 1
=item BUGS
d9381 1
a9381 1
Out of Memory!, Fails to load Calc on Perl prior 5.6.0
d9383 1
a9383 1
=item CAVEATS
d9385 1
a9385 3
stringify, bstr(), bsstr() and 'cmp', int(), length, bdiv, infinity
handling, Modifying and =, bpow, Overloading -$x, Mixing different object
types, bsqrt(), brsft()
d9387 1
a9387 1
=item LICENSE
d9389 1
a9389 3
=item SEE ALSO

=item AUTHORS
d9393 1
a9393 1
=head2 Math::BigInt::Calc - Pure Perl module to support Math::BigInt
d9401 5
a9405 1
=item EXPORT
d9407 1
a9407 1
=item WRAP YOUR OWN
d9409 1
a9409 1
=item LICENSE
d9411 1
a9411 3
This program is free software; you may redistribute it and/or modify it
under
the same terms as Perl itself. 
d9413 1
a9413 1
=item AUTHORS
d9415 1
a9415 1
=item SEE ALSO
d9419 1
a9419 1
=head2 Math::BigRat - arbitrarily big rationals
d9427 1
a9427 1
=over 4
d9429 1
a9429 1
=item MATH LIBRARY
d9433 1
a9433 1
=item METHODS
d9437 1
a9437 1
=item new()
d9439 1
a9439 1
=item numerator()
d9441 1
a9441 1
=item denominator()
d9443 1
a9443 1
	$d = $x->denominator();
d9445 1
a9445 9
=item parts()

=item as_number()

=item bfac()

=item blog()

=item bround()/round()/bfround()
d9449 1
a9449 5
=item BUGS

=item LICENSE

=item SEE ALSO
d9451 1
a9451 1
=item AUTHORS
d9455 1
a9455 2
=head2 Math::Complex - complex numbers and associated mathematical
functions
d9463 1
a9463 1
=item OPERATIONS
d9465 1
a9465 1
=item CREATION
d9467 1
a9467 1
=item STRINGIFICATION
d9469 1
a9469 1
=over 4
d9471 1
a9471 1
=item CHANGED IN PERL 5.6
d9475 3
a9477 1
=item USAGE
d9479 1
a9479 1
=item ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO
d9481 1
a9481 1
=item ERRORS DUE TO INDIGESTIBLE ARGUMENTS
d9483 3
a9485 1
=item BUGS
d9487 1
a9487 1
=item AUTHORS
d9491 1
a9491 1
=head2 Math::Trig - trigonometric functions
d9499 3
a9501 1
=item TRIGONOMETRIC FUNCTIONS
d9503 1
a9503 1
B<tan>
d9505 1
a9505 1
=over 4
d9507 1
a9507 1
=item ERRORS DUE TO DIVISION BY ZERO
d9509 1
a9509 1
=item SIMPLE (REAL) ARGUMENTS, COMPLEX RESULTS
d9513 1
a9513 3
=item PLANE ANGLE CONVERSIONS

=item RADIAL COORDINATE CONVERSIONS
d9517 1
a9517 1
=item COORDINATE SYSTEMS
d9519 1
a9519 1
=item 3-D ANGLE CONVERSIONS
d9521 1
a9521 2
cartesian_to_cylindrical, cartesian_to_spherical, cylindrical_to_cartesian,
cylindrical_to_spherical, spherical_to_cartesian, spherical_to_cylindrical
d9525 1
a9525 3
=item GREAT CIRCLE DISTANCES AND DIRECTIONS

=item EXAMPLES
d9529 1
a9529 1
=item CAVEAT FOR GREAT CIRCLE FORMULAS
d9531 1
a9531 1
=back
d9533 1
a9533 1
=item BUGS
d9539 1
a9539 1
=head2 Memoize - Make functions faster by trading space for time
d9547 3
a9549 1
=item DETAILS
d9551 1
a9551 1
=item OPTIONS
d9553 1
a9553 1
=over 4
d9555 1
a9555 1
=item INSTALL
d9557 1
a9557 1
=item NORMALIZER
d9559 1
a9559 1
=item C<SCALAR_CACHE>, C<LIST_CACHE>
d9561 1
a9561 1
C<MEMORY>, C<HASH>, C<TIE>, C<FAULT>, C<MERGE>
d9563 1
a9563 1
=back
d9565 1
a9565 1
=item OTHER FACILITIES
d9569 1
a9569 3
=item C<unmemoize>

=item C<flush_cache>
d9573 1
a9573 1
=item CAVEATS
d9575 1
a9575 1
=item PERSISTENT CACHE SUPPORT
d9577 1
a9577 1
=item EXPIRATION SUPPORT
d9579 1
a9579 1
=item BUGS
d9581 1
a9581 1
=item MAILING LIST
d9583 1
a9583 5
=item AUTHOR

=item COPYRIGHT AND LICENSE

=item THANK YOU
d9587 1
a9587 6
=head2 Memoize::AnyDBM_File - glue to provide EXISTS for AnyDBM_File for
Storable use

=over 4

=item DESCRIPTION
d9591 1
a9591 2
=head2 Memoize::Expire - Plug-in module for automatic expiration of
memoized values
d9599 3
a9601 1
=item INTERFACE
d9603 1
a9603 1
 TIEHASH,  EXISTS,  STORE
d9605 1
a9605 1
=item ALTERNATIVES
d9607 1
a9607 1
=item CAVEATS
d9609 1
a9609 1
=item AUTHOR
d9611 1
a9611 1
=item SEE ALSO
d9613 1
a9613 1
=back
d9615 1
a9615 1
=head2 Memoize::ExpireFile - test for Memoize expiration semantics
d9617 1
a9617 1
=over 4
d9619 1
a9619 1
=item DESCRIPTION
d9621 1
a9621 1
=back
d9623 1
a9623 1
=head2 Memoize::ExpireTest - test for Memoize expiration semantics
d9625 1
a9625 1
=over 4
d9627 1
a9627 1
=item DESCRIPTION
d9629 1
a9629 1
=back
d9631 1
a9631 2
=head2 Memoize::NDBM_File - glue to provide EXISTS for NDBM_File for
Storable use
d9635 1
a9635 1
=item DESCRIPTION
d9639 1
a9639 2
=head2 Memoize::SDBM_File - glue to provide EXISTS for SDBM_File for
Storable use
d9643 2
d9649 1
a9649 1
=head2 Memoize::Storable - store Memoized data in Storable database
d9653 2
d9657 1
a9657 1
=back
d9659 1
a9659 1
=head2 NDBM_File - Tied access to ndbm files
d9661 1
a9661 1
=over 4
d9663 1
a9663 1
=item SYNOPSIS
d9665 1
a9665 1
=item DESCRIPTION
d9667 1
a9667 1
C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>
d9669 1
a9669 1
=item DIAGNOSTICS
d9671 1
a9671 1
=over 4
d9673 1
a9673 1
=item C<ndbm store returned -1, errno 22, key "..." at ...>
d9675 1
a9675 1
=back
d9677 1
a9677 1
=item BUGS AND WARNINGS
d9679 1
a9679 1
=back
d9681 1
a9681 1
=head2 NEXT - Provide a pseudo-class NEXT that allows method redispatch
d9683 1
a9683 1
=over 4
d9685 1
a9685 1
=item SYNOPSIS
d9687 1
a9687 1
=item DESCRIPTION
d9689 1
a9689 1
=over 4
d9691 1
a9691 1
=item Enforcing redispatch
d9693 1
a9693 1
=item Avoiding repetitions
d9695 1
a9695 1
=back
d9697 1
a9697 1
=item AUTHOR
d9699 1
a9699 3
=item BUGS AND IRRITATIONS

=item COPYRIGHT
d9703 1
a9703 1
=head2 Net::Cmd - Network Command class (as used by FTP, SMTP etc)
d9711 1
a9711 1
=item USER METHODS
d9713 1
a9713 2
debug ( VALUE ), message (), code (), ok (), status (), datasend ( DATA ),
dataend ()
d9715 1
a9715 1
=item CLASS METHODS
d9717 1
a9717 3
debug_print ( DIR, TEXT ), debug_text ( TEXT ), command ( CMD [, ARGS, ...
]), unsupported (), response (), parse_response ( TEXT ), getline (),
ungetline ( TEXT ), read_until_dot (), tied_fh ()
d9719 1
a9719 1
=item EXPORTS
d9721 1
a9721 1
=item AUTHOR
d9723 1
a9723 1
=item COPYRIGHT
d9725 1
a9725 1
=back
d9727 1
a9727 1
=head2 Net::Config - Local configuration data for libnet
d9729 1
a9729 1
=over 4
d9731 1
a9731 1
=item SYNOPSYS
d9733 1
a9733 1
=item DESCRIPTION
d9735 1
a9735 1
=item METHODS
d9737 1
a9737 1
requires_firewall HOST
d9739 1
a9739 1
=item NetConfig VALUES
d9741 1
a9741 3
nntp_hosts, snpp_hosts, pop3_hosts, smtp_hosts, ph_hosts, daytime_hosts,
time_hosts, inet_domain, ftp_firewall, ftp_firewall_type, ftp_ext_passive,
ftp_int_pasive, local_netmask, test_hosts, test_exists
d9743 1
a9743 1
=back
d9745 1
a9745 2
=head2 Net::Domain - Attempt to evaluate the current host's internet name
and domain
d9747 1
a9747 1
=over 4
d9749 1
a9749 1
=item SYNOPSIS
d9751 1
a9751 1
=item DESCRIPTION
d9753 1
a9753 1
hostfqdn (), hostname (), hostdomain ()
d9755 1
a9755 1
=item AUTHOR
d9757 1
a9757 1
=item COPYRIGHT
d9761 1
a9761 1
=head2 Net::FTP - FTP Client class
d9769 7
a9775 1
=item OVERVIEW
d9777 1
a9777 1
=item CONSTRUCTOR
d9779 1
a9779 1
new (HOST [,OPTIONS])
d9781 1
a9781 1
=item METHODS
d9783 1
a9783 13
login ([LOGIN [,PASSWORD [, ACCOUNT] ] ]), authorize ( [AUTH [, RESP]]),
site (ARGS), type (TYPE [, ARGS]), ascii ([ARGS]) binary([ARGS])
ebcdic([ARGS]) byte([ARGS]), rename ( OLDNAME, NEWNAME ), delete ( FILENAME
), cwd ( [ DIR ] ), cdup (), pwd (), restart ( WHERE ), rmdir ( DIR ),
mkdir ( DIR [, RECURSE ]), ls ( [ DIR ] ), dir ( [ DIR ] ), get (
REMOTE_FILE [, LOCAL_FILE [, WHERE]] ), put ( LOCAL_FILE [, REMOTE_FILE ]
), put_unique ( LOCAL_FILE [, REMOTE_FILE ] ), append ( LOCAL_FILE [,
REMOTE_FILE ] ), unique_name (), mdtm ( FILE ), size ( FILE ), supported (
CMD ), hash ( [FILEHANDLE_GLOB_REF],[ BYTES_PER_HASH_MARK] ), nlst ( [ DIR
] ), list ( [ DIR ] ), retr ( FILE ), stor ( FILE ), stou ( FILE ), appe (
FILE ), port ( [ PORT ] ), pasv (), pasv_xfer ( SRC_FILE, DEST_SERVER [,
DEST_FILE ] ), pasv_xfer_unique ( SRC_FILE, DEST_SERVER [, DEST_FILE ] ),
pasv_wait ( NON_PASV_SERVER ), abort (), quit ()
d9787 5
a9791 1
=item Methods for the adventurous
d9793 1
a9793 1
quot (CMD [,ARGS])
d9795 1
a9795 1
=back
d9797 1
a9797 1
=item THE dataconn CLASS
d9799 1
a9799 2
read ( BUFFER, SIZE [, TIMEOUT ] ), write ( BUFFER, SIZE [, TIMEOUT ] ),
bytes_read (), abort (), close ()
d9801 1
a9801 1
=item UNIMPLEMENTED
d9803 1
a9803 1
B<ALLO>, B<SMNT>, B<HELP>, B<MODE>, B<SYST>, B<STAT>, B<STRU>, B<REIN>
d9805 1
a9805 1
=item REPORTING BUGS
d9807 1
a9807 1
=item AUTHOR
d9809 1
a9809 1
=item SEE ALSO
d9811 1
a9811 1
=item USE EXAMPLES
d9813 1
a9813 1
http://www.csh.rit.edu/~adam/Progs/autoftp-2.0.tar.gz
d9815 1
a9815 1
=item CREDITS
d9817 1
a9817 1
=item COPYRIGHT
d9821 1
a9821 1
=head2 Net::NNTP - NNTP Client class
d9823 1
a9823 1
=over 4
d9825 1
a9825 1
=item SYNOPSIS
d9827 1
a9827 1
=item DESCRIPTION
d9829 1
a9829 1
=item CONSTRUCTOR
d9831 1
a9831 1
new ( [ HOST ] [, OPTIONS ])
d9833 1
a9833 1
=item METHODS
d9835 1
a9835 7
article ( [ MSGID|MSGNUM ], [FH] ), body ( [ MSGID|MSGNUM ], [FH] ), head (
[ MSGID|MSGNUM ], [FH] ), articlefh ( [ MSGID|MSGNUM ] ), bodyfh ( [
MSGID|MSGNUM ] ), headfh ( [ MSGID|MSGNUM ] ), nntpstat ( [ MSGID|MSGNUM ]
), group ( [ GROUP ] ), ihave ( MSGID [, MESSAGE ]), last (), date (),
postok (), authinfo ( USER, PASS ), list (), newgroups ( SINCE [,
DISTRIBUTIONS ]), newnews ( SINCE [, GROUPS [, DISTRIBUTIONS ]]), next (),
post ( [ MESSAGE ] ), postfh (), slave (), quit ()
d9839 1
a9839 1
=item Extension methods
d9841 1
a9841 5
newsgroups ( [ PATTERN ] ), distributions (), subscriptions (),
overview_fmt (), active_times (), active ( [ PATTERN ] ), xgtitle ( PATTERN
), xhdr ( HEADER, MESSAGE-SPEC ), xover ( MESSAGE-SPEC ), xpath (
MESSAGE-ID ), xpat ( HEADER, PATTERN, MESSAGE-SPEC), xrover, listgroup ( [
GROUP ] ), reader
d9845 3
a9847 1
=item UNSUPPORTED
d9849 1
a9849 1
=item DEFINITIONS
d9851 1
a9851 1
MESSAGE-SPEC, PATTERN, Examples, C<[^]-]>, C<*bdc>, C<[0-9a-zA-Z]>, C<a??d>
d9853 1
a9853 1
=item SEE ALSO
d9855 1
a9855 1
=item AUTHOR
d9857 1
a9857 1
=item COPYRIGHT
d9861 1
a9861 1
=head2 Net::POP3 - Post Office Protocol 3 Client class (RFC1939)
d9865 1
a9865 1
=item SYNOPSIS
d9867 1
a9867 1
=item DESCRIPTION
d9869 1
a9869 1
=item EXAMPLES
d9871 1
a9871 1
=item CONSTRUCTOR
d9873 1
a9873 10
new ( [ HOST, ] [ OPTIONS ] )

=item METHODS

user ( USER ), pass ( PASS ), login ( [ USER [, PASS ]] ), apop ( [ USER [,
PASS ]] ), top ( MSGNUM [, NUMLINES ] ), list ( [ MSGNUM ] ), get ( MSGNUM
[, FH ] ), getfh ( MSGNUM ), last (), popstat (), ping ( USER ), uidl ( [
MSGNUM ] ), delete ( MSGNUM ), reset (), quit ()

=item NOTES
a9878 2
=item COPYRIGHT

d9881 1
a9881 1
=head2 Net::Ping - check a remote host for reachability
d9889 1
a9889 1
=over 4
d9891 1
a9891 6
=item Functions

Net::Ping->new([$proto [, $def_timeout [, $bytes]]]);, $p->ping($host [,
$timeout]);, $p->source_verify( { 0 | 1 } );, $p->hires( { 0 | 1 } );,
$p->bind($local_addr);, $p->open($host);, $p->close();, pingecho($host [,
$timeout]);
d9895 1
a9895 1
=item WARNING
d9897 1
a9897 1
=item NOTES
d9899 1
a9899 1
=item INSTALL
d9901 1
a9901 1
=item AUTHORS
d9903 1
a9903 1
=item COPYRIGHT
d9907 1
a9907 1
=head2 Net::SMTP - Simple Mail Transfer Protocol Client
d9915 1
a9915 17
=item EXAMPLES

=item CONSTRUCTOR

new Net::SMTP [ HOST, ] [ OPTIONS ]

=item METHODS

banner (), domain (), hello ( DOMAIN ), etrn ( DOMAIN ), auth ( USERNAME,
PASSWORD ), mail ( ADDRESS [, OPTIONS] ), send ( ADDRESS ), send_or_mail (
ADDRESS ), send_and_mail ( ADDRESS ), reset (), recipient ( ADDRESS [,
ADDRESS [ ...]] [, OPTIONS ] ), to ( ADDRESS [, ADDRESS [...]] ), cc (
ADDRESS [, ADDRESS [...]] ), bcc ( ADDRESS [, ADDRESS [...]] ), data ( [
DATA ] ), expand ( ADDRESS ), verify ( ADDRESS ), help ( [ $subject ] ),
quit ()

=item ADDRESSES
a9918 4
=item AUTHOR

=item COPYRIGHT

d9921 1
a9921 1
=head2 Net::Time - time and daytime network client interface
d9929 3
a9931 2
inet_time ( [HOST [, PROTOCOL [, TIMEOUT]]]), inet_daytime ( [HOST [,
PROTOCOL [, TIMEOUT]]])
d9933 1
a9933 1
=item AUTHOR
d9939 1
a9939 2
=head2 Net::hostent - by-name interface to Perl's built-in gethost*()
functions
d9947 1
a9947 1
=item EXAMPLES
d9949 1
a9949 1
=item NOTE
d9951 1
a9951 1
=item AUTHOR
d9955 1
a9955 1
=head2 Net::libnetFAQ, libnetFAQ - libnet Frequently Asked Questions
d9959 2
d9963 1
a9963 1
=over 4
d9965 1
a9965 1
=item Where to get this document
d9967 1
a9967 1
=item How to contribute to this document
d9969 1
a9969 1
=back
d9971 1
a9971 1
=item Author and Copyright Information
d9973 1
a9973 1
=over 4
d9975 1
a9975 1
=item Disclaimer
d9977 1
a9977 1
=back
d9979 1
a9979 1
=item Obtaining and installing libnet
d9981 1
a9981 1
=over 4
d9983 1
a9983 1
=item What is libnet ?
d9985 1
a9985 1
=item Which version of perl do I need ?
d9987 1
a9987 1
=item What other modules do I need ?
d9989 1
a9989 3
=item What machines support libnet ?

=item Where can I get the latest libnet release
d9993 1
a9993 1
=item Using Net::FTP
d9997 3
a9999 1
=item How do I download files from an FTP server ?
d10001 1
a10001 1
=item How do I transfer files in binary mode ?
d10003 1
a10003 1
=item How can I get the size of a file on a remote FTP server ?
d10005 1
a10005 2
=item How can I get the modification time of a file on a remote FTP server
?
d10007 1
a10007 1
=item How can I change the permissions of a file on a remote server ?
d10009 1
a10009 1
=item Can I do a reget operation like the ftp command ?
d10011 1
a10011 1
=item How do I get a directory listing from an FTP server ?
d10013 5
a10017 1
=item Changing directory to "" does not fail ?
d10019 1
a10019 1
=item I am behind a SOCKS firewall, but the Firewall option does not work ?
d10021 1
a10021 2
=item I am behind an FTP proxy firewall, but cannot access machines outside
?
d10023 1
a10023 1
=item My ftp proxy firewall does not listen on port 21
d10025 1
a10025 2
=item Is it possible to change the file permissions of a file on an FTP
server ?
d10027 1
a10027 2
=item I have seen scripts call a method message, but cannot find it
documented ?
d10029 1
a10029 1
=item Why does Net::FTP not implement mput and mget methods
d10033 1
a10033 1
=item Using Net::SMTP
d10037 6
a10042 2
=item Why can't the part of an Email address after the @@ be used as the
hostname ?
d10044 1
a10044 1
=item Why does Net::SMTP not do DNS MX lookups ?
d10046 1
a10046 1
=item The verify method always returns true ?
d10050 2
a10051 1
=item Debugging scripts
d10055 1
a10055 1
=item How can I debug my scripts that use Net::* modules ?
d10057 1
a10057 3
=back

=item AUTHOR AND COPYRIGHT
d10061 2
a10062 2
=head2 Net::netent - by-name interface to Perl's built-in getnet*()
functions
a10069 6
=item EXAMPLES

=item NOTE

=item AUTHOR

d10072 1
a10072 2
=head2 Net::protoent - by-name interface to Perl's built-in getproto*()
functions
a10079 4
=item NOTE

=item AUTHOR

d10082 1
a10082 2
=head2 Net::servent - by-name interface to Perl's built-in getserv*()
functions
d10090 2
a10091 1
=item EXAMPLES
d10093 1
a10093 1
=item NOTE
d10097 2
d10101 1
a10101 1
=head2 Netrc, Net::Netrc - OO interface to users netrc file
a10108 5
=item THE .netrc FILE

machine name, default, login name, password string, account string, macdef
name

d10111 1
a10111 1
lookup ( MACHINE [, LOGIN ])
d10115 1
a10115 3
login (), password (), account (), lpa ()

=item AUTHOR
d10119 1
a10119 1
=item COPYRIGHT
d10123 1
a10123 1
=head2 O - Generic interface to Perl Compiler backends
d10131 1
a10131 1
=item CONVENTIONS
d10133 1
a10133 1
=item IMPLEMENTATION
d10135 1
a10135 1
=item BUGS
d10137 4
a10140 1
=item AUTHOR
d10142 1
a10142 1
=back
d10144 1
a10144 1
=head2 ODBM_File - Tied access to odbm files
d10146 1
a10146 1
=over 4
d10148 1
a10148 11
=item SYNOPSIS

=item DESCRIPTION

C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>

=item DIAGNOSTICS

=over 4

=item C<odbm store returned -1, errno 22, key "..." at ...>
d10152 1
a10152 5
=item BUGS AND WARNINGS

=back

=head2 Opcode - Disable named opcodes when compiling perl code
d10160 1
a10160 1
=item NOTE
d10162 1
a10162 1
=item WARNING
d10164 1
a10164 1
=item Operator Names and Operator Lists
d10166 1
a10166 24
an operator name (opname), an operator tag name (optag), a negated opname
or optag, an operator set (opset)

=item Opcode Functions

opcodes, opset (OP, ...), opset_to_ops (OPSET), opset_to_hex (OPSET),
full_opset, empty_opset, invert_opset (OPSET), verify_opset (OPSET, ...),
define_optag (OPTAG, OPSET), opmask_add (OPSET), opmask, opdesc (OP, ...),
opdump (PAT)

=item Manipulating Opsets

=item TO DO (maybe)

=back

=over 4

=item Predefined Opcode Tags

:base_core, :base_mem, :base_loop, :base_io, :base_orig, :base_math,
:base_thread, :default, :filesys_read, :sys_db, :browse, :filesys_open,
:filesys_write, :subprocess, :ownprocess, :others, :still_to_be_decided,
:dangerous
d10170 1
a10170 1
=item AUTHORS
d10172 1
a10172 10
=back

=head2 Opcode::Safe, Safe - Compile and execute code in restricted
compartments

=over 4

=item SYNOPSIS

=item DESCRIPTION
d10174 1
a10174 1
a new namespace, an operator mask
d10176 1
a10176 1
=item WARNING
d10180 1
a10180 1
=item RECENT CHANGES
d10182 1
a10182 1
=item Methods in class Safe
d10184 1
a10184 4
permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)
d10186 2
a10187 1
=item Some Safety Issues
d10189 1
a10189 1
Memory, CPU, Snooping, Signals, State Changes
d10193 1
a10193 1
=back
d10197 1
a10197 2
=head2 Opcode::ops, ops - Perl pragma to restrict unsafe operations when
compiling
d10201 1
a10201 1
=item SYNOPSIS	
d10205 5
a10209 1
=item SEE ALSO
d10213 1
a10213 1
=head2 POSIX - Perl interface to IEEE Std 1003.1
d10221 1
a10221 1
=item NOTE
d10223 1
a10223 1
=item CAVEATS 
d10225 1
a10225 1
=item FUNCTIONS
d10227 3
a10229 26
_exit, abort, abs, access, acos, alarm, asctime, asin, assert, atan, atan2,
atexit, atof, atoi, atol, bsearch, calloc, ceil, chdir, chmod, chown,
clearerr, clock, close, closedir, cos, cosh, creat, ctermid, ctime,
cuserid, difftime, div, dup, dup2, errno, execl, execle, execlp, execv,
execve, execvp, exit, exp, fabs, fclose, fcntl, fdopen, feof, ferror,
fflush, fgetc, fgetpos, fgets, fileno, floor, fmod, fopen, fork, fpathconf,
fprintf, fputc, fputs, fread, free, freopen, frexp, fscanf, fseek, fsetpos,
fstat, ftell, fwrite, getc, getchar, getcwd, getegid, getenv, geteuid,
getgid, getgrgid, getgrnam, getgroups, getlogin, getpgrp, getpid, getppid,
getpwnam, getpwuid, gets, getuid, gmtime, isalnum, isalpha, isatty,
iscntrl, isdigit, isgraph, islower, isprint, ispunct, isspace, isupper,
isxdigit, kill, labs, ldexp, ldiv, link, localeconv, localtime, log, log10,
longjmp, lseek, malloc, mblen, mbstowcs, mbtowc, memchr, memcmp, memcpy,
memmove, memset, mkdir, mkfifo, mktime, modf, nice, offsetof, open,
opendir, pathconf, pause, perror, pipe, pow, printf, putc, putchar, puts,
qsort, raise, rand, read, readdir, realloc, remove, rename, rewind,
rewinddir, rmdir, scanf, setgid, setjmp, setlocale, setpgid, setsid,
setuid, sigaction, siglongjmp, sigpending, sigprocmask, sigsetjmp,
sigsuspend, sin, sinh, sleep, sprintf, sqrt, srand, sscanf, stat, strcat,
strchr, strcmp, strcoll, strcpy, strcspn, strerror, strftime, strlen,
strncat, strncmp, strncpy, strpbrk, strrchr, strspn, strstr, strtod,
strtok, strtol, strtoul, strxfrm, sysconf, system, tan, tanh, tcdrain,
tcflow, tcflush, tcgetpgrp, tcsendbreak, tcsetpgrp, time, times, tmpfile,
tmpnam, tolower, toupper, ttyname, tzname, tzset, umask, uname, ungetc,
unlink, utime, vfprintf, vprintf, vsprintf, wait, waitpid, wcstombs,
wctomb, write
d10231 1
a10231 1
=item CLASSES
d10233 1
a10233 1
=over 4
d10235 1
a10235 1
=item POSIX::SigAction
d10237 1
a10237 1
new
d10239 1
a10239 1
=item POSIX::SigSet
d10241 1
a10241 1
new, addset, delset, emptyset, fillset, ismember
d10243 1
a10243 1
=item POSIX::Termios
d10245 1
a10245 5
new, getattr, getcc, getcflag, getiflag, getispeed, getlflag, getoflag,
getospeed, setattr, setcc, setcflag, setiflag, setispeed, setlflag,
setoflag, setospeed, Baud rate values, Terminal interface values, c_cc
field values, c_cflag field values, c_iflag field values, c_lflag field
values, c_oflag field values
d10247 1
a10247 1
=back
d10249 1
a10249 1
=item PATHNAME CONSTANTS
d10251 1
a10251 1
Constants
d10253 2
a10254 1
=item POSIX CONSTANTS
d10256 1
a10256 1
Constants
d10258 1
a10258 1
=item SYSTEM CONFIGURATION
d10260 1
a10260 1
Constants
d10262 1
a10262 1
=item ERRNO
d10264 1
a10264 1
Constants
d10266 1
a10266 1
=item FCNTL
d10268 1
a10268 1
Constants
d10270 1
a10270 1
=item FLOAT
d10272 1
a10272 1
Constants
d10274 1
a10274 1
=item LIMITS
d10276 1
a10276 1
Constants
d10278 1
a10278 1
=item LOCALE
d10280 2
a10281 1
Constants
d10283 1
a10283 1
=item MATH
d10285 1
a10285 1
Constants
d10287 1
a10287 1
=item SIGNAL
d10289 1
a10289 1
Constants
d10291 1
a10291 1
=item STAT
d10293 1
a10293 1
Constants, Macros
d10295 1
a10295 1
=item STDLIB
d10297 1
a10297 1
Constants
d10299 1
a10299 1
=item STDIO
d10301 1
a10301 1
Constants
d10303 1
a10303 1
=item TIME
d10305 1
a10305 1
Constants
d10307 1
a10307 1
=item UNISTD
d10309 1
a10309 1
Constants
d10311 1
a10311 1
=item WAIT
d10313 1
a10313 2
Constants, WNOHANG, WUNTRACED, Macros, WIFEXITED, WEXITSTATUS, WIFSIGNALED,
WTERMSIG, WIFSTOPPED, WSTOPSIG
d10317 2
a10318 2
=head2 PerlIO - On demand loader for PerlIO layers and root of PerlIO::*
name space
d10326 2
a10327 1
unix, stdio, perlio, crlf, utf8, bytes, raw, pop
d10329 1
a10329 7
=over 4

=item Alternatives to raw

=item Defaults and how to override them

=back
d10333 1
a10333 1
=item SEE ALSO
d10337 1
a10337 1
=head2 PerlIO::encoding - encoding layer
d10345 8
d10355 2
d10359 2
a10360 1
=head2 PerlIO::scalar - support module for in-memory IO.
d10368 19
d10389 1
a10389 1
=head2 PerlIO::via - Helper class for PerlIO layers implemented in perl
d10397 3
a10399 1
=item EXPECTED METHODS
d10401 1
a10401 8
$class->PUSHED([$mode[,$fh]]), $obj->POPPED([$fh]),
$obj->OPEN($path,$mode[,$fh]), $obj->BINMODE([,$fh]),
$obj->FDOPEN($fd[,$fh]), $obj->SYSOPEN($path,$imode,$perm,[,$fh]),
$obj->FILENO($fh), $obj->READ($buffer,$len,$fh), $obj->WRITE($buffer,$fh),
$obj->FILL($fh), $obj->CLOSE($fh), $obj->SEEK($posn,$whence,$fh),
$obj->TELL($fh), $obj->UNREAD($buffer,$fh), $obj->FLUSH($fh),
$obj->SETLINEBUF($fh), $obj->CLEARERR($fh), $obj->ERROR($fh),
$obj->EOF($fh)
d10403 1
a10403 1
=item EXAMPLES
d10405 1
a10405 1
=over 4
d10407 1
a10407 1
=item Example - a Hexadecimal Handle
d10409 1
a10409 1
=back
d10413 1
a10413 1
=head2 PerlIO::via::QuotedPrint - PerlIO layer for quoted-printable strings
d10421 5
d10428 2
d10434 2
a10435 1
=head2 Pod::Checker, podchecker() - check pod documents for syntax errors
d10441 1
a10441 1
=item OPTIONS/ARGUMENTS
d10443 3
a10445 1
=over 4
d10447 1
a10447 3
=item podchecker()

B<-warnings> =E<gt> I<val>
d10451 2
a10452 3
=item DESCRIPTION

=item DIAGNOSTICS
d10456 1
a10456 1
=item Errors
d10458 1
a10458 9
empty =headn, =over on line I<N> without closing =back, =item without
previous =over, =back without previous =over, No argument for =begin, =end
without =begin, Nested =begin's, =for without formatter specification,
unresolved internal link I<NAME>, Unknown command "I<CMD>", Unknown
interior-sequence "I<SEQ>", nested commands
I<CMD>E<lt>...I<CMD>E<lt>...E<gt>...E<gt>, garbled entity I<STRING>, Entity
number out of range, malformed link LE<lt>E<gt>, nonempty ZE<lt>E<gt>,
empty XE<lt>E<gt>, Spurious text after =pod / =cut, Spurious character(s)
after =back
d10460 1
a10460 1
=item Warnings
d10462 1
a10462 6
multiple occurrence of link target I<name>, line containing nothing but
whitespace in paragraph, file does not start with =head, previous =item has
no contents, preceding non-item paragraph(s), =item type mismatch (I<one>
vs. I<two>), I<N> unescaped C<E<lt>E<gt>> in paragraph, Unknown entity, No
items in =over, No argument for =item, empty section in previous paragraph,
Verbatim paragraph in NAME section
d10464 1
a10464 4
=item Hyperlinks

ignoring leading/trailing whitespace in link, (section) in '$page'
deprecated, alternative text/node '%s' contains non-escaped | or /
d10466 3
a10468 1
=back
d10470 1
a10470 1
=item RETURN VALUE
d10472 1
a10472 1
=item EXAMPLES
d10474 1
a10474 1
=item INTERFACE
d10478 4
a10481 1
C<Pod::Checker-E<gt>new( %options )>
d10483 1
a10483 2
C<$checker-E<gt>poderror( @@args )>, C<$checker-E<gt>poderror( {%opts},
@@args )>
d10485 1
a10485 1
C<$checker-E<gt>num_errors()>
d10487 1
a10487 1
C<$checker-E<gt>name()>
d10489 1
a10489 1
C<$checker-E<gt>node()>
d10491 1
a10491 1
C<$checker-E<gt>idx()>
d10493 2
a10494 1
C<$checker-E<gt>hyperlink()>
d10496 1
a10496 1
=over 4
d10500 2
d10504 2
a10505 1
=head2 Pod::Find - find POD documents in directory trees
d10513 3
a10515 1
=back
d10519 1
a10519 1
=item C<pod_find( { %opts } , @@directories )>
d10521 2
a10522 2
C<-verbose =E<gt> 1>, C<-perl =E<gt> 1>, C<-script =E<gt> 1>, C<-inc =E<gt>
1>
d10526 3
a10528 1
=over 4
d10530 1
a10530 1
=item C<simplify_name( $str )>
d10534 3
d10539 1
a10539 1
=item C<pod_where( { %opts }, $pod )>
d10541 1
a10541 2
C<-inc =E<gt> 1>, C<-dirs =E<gt> [ $dir1, $dir2, ... ]>, C<-verbose =E<gt>
1>
d10543 1
a10543 1
=back
d10545 1
a10545 1
=over 4
d10547 1
a10547 1
=item C<contains_pod( $file , $verbose )>
d10549 1
a10549 1
=back
d10551 1
a10551 1
=over 4
d10555 1
a10555 1
=item SEE ALSO
d10559 1
a10559 1
=head2 Pod::Html - module to convert pod files to HTML
d10567 1
a10567 1
=item ARGUMENTS
d10569 3
a10571 3
backlink, cachedir, css, flush, header, help, htmldir, htmlroot, index,
infile, libpods, netscape, outfile, podpath, podroot, quiet, recurse,
title, verbose
d10573 1
a10573 3
=item EXAMPLE

=item ENVIRONMENT
a10576 2
=item SEE ALSO

d10581 1
a10581 2
=head2 Pod::InputObjects - objects representing POD input paragraphs,
commands, etc.
d10587 1
a10587 1
=item REQUIRES
d10589 1
a10589 1
=item EXPORTS
d10591 1
a10591 1
=item DESCRIPTION
d10593 1
a10593 2
package B<Pod::InputSource>, package B<Pod::Paragraph>, package
B<Pod::InteriorSequence>, package B<Pod::ParseTree>
d10595 2
a10596 1
=back
d10600 1
a10600 1
=item B<Pod::InputSource>
d10602 1
a10602 1
=back
d10604 1
a10604 1
=over 4
d10606 1
a10606 1
=item B<new()>
d10608 1
a10608 1
=back
d10612 1
a10612 1
=item B<name()>
d10614 1
a10614 1
=back
d10616 1
a10616 1
=over 4
d10618 4
a10621 1
=item B<handle()>
d10623 1
a10623 1
=back
d10625 1
a10625 1
=over 4
d10627 1
a10627 1
=item B<was_cutting()>
d10631 2
d10635 1
a10635 1
=item B<Pod::Paragraph>
d10637 1
a10637 1
=back
d10639 1
a10639 1
=over 4
d10641 1
a10641 1
=item Pod::Paragraph-E<gt>B<new()>
d10643 1
a10643 1
=back
d10645 1
a10645 1
=over 4
d10647 1
a10647 1
=item $pod_para-E<gt>B<cmd_name()>
d10649 1
a10649 1
=back
d10653 1
a10653 1
=item $pod_para-E<gt>B<text()>
d10655 1
a10655 1
=back
d10657 1
a10657 1
=over 4
d10659 3
a10661 1
=item $pod_para-E<gt>B<raw_text()>
d10663 1
a10663 1
=back
d10665 1
a10665 1
=over 4
d10667 1
a10667 1
=item $pod_para-E<gt>B<cmd_prefix()>
d10671 3
d10676 1
a10676 1
=item $pod_para-E<gt>B<cmd_separator()>
d10678 1
a10678 1
=back
d10680 1
a10680 1
=over 4
d10682 4
a10685 1
=item $pod_para-E<gt>B<parse_tree()>
d10687 1
a10687 1
=back
d10689 1
a10689 1
=over 4
d10691 1
a10691 1
=item $pod_para-E<gt>B<file_line()>
d10695 2
d10699 3
a10701 1
=item B<Pod::InteriorSequence>
d10703 2
a10704 1
=back
d10706 1
a10706 1
=over 4
d10708 1
a10708 1
=item Pod::InteriorSequence-E<gt>B<new()>
d10712 2
d10716 1
a10716 1
=item $pod_seq-E<gt>B<cmd_name()>
d10718 1
a10718 1
=back
d10720 1
a10720 1
=over 4
d10722 1
a10722 1
=item $pod_seq-E<gt>B<prepend()>
d10724 1
a10724 1
=back
d10726 1
a10726 1
=over 4
d10728 1
a10728 1
=item $pod_seq-E<gt>B<append()>
d10732 3
d10737 1
a10737 1
=item $pod_seq-E<gt>B<nested()>
d10739 1
a10739 1
=back
d10741 1
a10741 1
=over 4
d10743 1
a10743 1
=item $pod_seq-E<gt>B<raw_text()>
d10745 1
a10745 1
=back
d10749 1
a10749 1
=item $pod_seq-E<gt>B<left_delimiter()>
d10753 1
a10753 1
=over 4
d10755 1
a10755 1
=item $pod_seq-E<gt>B<right_delimiter()>
d10757 1
a10757 1
=back
d10759 1
a10759 1
=over 4
d10761 1
a10761 1
=item $pod_seq-E<gt>B<parse_tree()>
d10765 2
d10769 1
a10769 1
=item $pod_seq-E<gt>B<file_line()>
d10771 1
a10771 1
=back
d10773 1
a10773 1
=over 4
d10775 1
a10775 1
=item Pod::InteriorSequence::B<DESTROY()>
d10777 1
a10777 1
=back
d10779 1
a10779 1
=over 4
d10781 1
a10781 1
=item B<Pod::ParseTree>
d10785 1
a10785 1
=over 4
d10787 1
a10787 3
=item Pod::ParseTree-E<gt>B<new()>

=back
d10791 1
a10791 3
=item $ptree-E<gt>B<top()>

=back
d10793 1
a10793 1
=over 4
d10795 2
a10796 1
=item $ptree-E<gt>B<children()>
d10800 1
a10800 1
=over 4
d10802 1
a10802 1
=item $ptree-E<gt>B<prepend()>
d10804 1
a10804 1
=back
d10806 1
a10806 1
=over 4
d10808 1
a10808 1
=item $ptree-E<gt>B<append()>
d10810 1
a10810 1
=back
d10814 3
a10816 1
=item $ptree-E<gt>B<raw_text()>
d10818 1
a10818 1
=back
d10822 1
a10822 1
=item Pod::ParseTree::B<DESTROY()>
d10826 1
a10826 5
=over 4

=item SEE ALSO

=item AUTHOR
d10830 1
a10830 1
=head2 Pod::LaTeX - Convert Pod data to formatted Latex
a10837 2
=back

d10840 1
a10840 1
=item OBJECT METHODS
d10842 2
a10843 1
C<initialize>
d10847 1
a10847 1
=over 4
d10849 1
a10849 1
=item Data Accessors
d10851 1
a10851 1
B<AddPreamble>
d10853 2
a10854 1
=back
d10856 1
a10856 1
B<AddPostamble>
d10858 1
a10858 1
B<Head1Level>
d10860 1
a10860 1
B<Label>
d10862 1
a10862 1
B<LevelNoNum>
d10864 1
a10864 1
B<MakeIndex>
d10866 1
a10866 1
B<ReplaceNAMEwithSection>
d10868 1
a10868 1
B<StartWithNewPage>
d10870 2
a10871 1
B<TableOfContents>
d10873 1
a10873 1
B<UniqueLabels>
d10875 1
a10875 1
B<UserPreamble>
d10877 1
a10877 1
B<UserPostamble>
d10879 1
a10879 1
B<Lists>
d10881 1
a10881 1
=over 4
d10883 1
a10883 1
=item Subclassed methods
d10887 2
a10888 1
B<begin_pod>
d10890 1
a10890 1
B<end_pod>
d10892 1
a10892 1
B<command>
d10894 1
a10894 1
B<verbatim>
d10896 1
a10896 1
B<textblock>
d10898 1
a10898 1
B<interior_sequence>
d10900 1
a10900 1
=over 4
d10902 2
a10903 1
=item List Methods
d10905 1
a10905 1
B<begin_list>
d10907 1
a10907 1
=back
d10909 1
a10909 1
B<end_list>
d10911 1
a10911 1
B<add_item>
d10913 1
a10913 1
=over 4
d10915 1
a10915 1
=item Methods for headings
d10917 1
a10917 1
B<head>
d10919 1
a10919 1
=back
d10923 1
a10923 1
=item Internal methods
d10925 1
a10925 1
B<_output>
d10927 1
a10927 1
=back
d10929 1
a10929 1
B<_replace_special_chars>
d10931 1
a10931 1
B<_replace_special_chars_late>
d10933 1
a10933 1
B<_create_label>
d10935 1
a10935 1
B<_create_index>
d10937 1
a10937 1
B<_clean_latex_commands>
d10939 1
a10939 1
B<_split_delimited>
d10941 1
a10941 1
=over 4
d10943 1
a10943 1
=item NOTES
d10945 1
a10945 1
=item SEE ALSO
d10947 1
a10947 1
=item AUTHORS
d10949 1
a10949 1
=item COPYRIGHT
d10951 1
a10951 1
=item REVISION
d10955 1
a10955 1
=head2 Pod::Man - Convert POD data to formatted *roff input
d10963 1
a10963 2
center, date, fixed, fixedbold, fixeditalic, fixedbolditalic, name, quotes,
release, section
d10965 1
a10965 1
=item DIAGNOSTICS
d10967 1
a10967 4
roff font should be 1 or 2 chars, not "%s", Invalid link %s, Invalid quote
specification "%s", %s:%d: Unknown command paragraph "%s", %s:%d: Unknown
escape EE<lt>%sE<gt>, %s:%d: Unknown formatting code %s, %s:%d: Unmatched
=back
d10969 2
a10970 1
=item BUGS
d10972 1
a10972 1
=item CAVEATS
d10974 4
a10977 1
=item SEE ALSO
d10979 1
a10979 1
=item AUTHOR
d10981 1
a10981 1
=item COPYRIGHT AND LICENSE
a10984 2
=head2 Pod::ParseLink - Parse an LE<lt>E<gt> formatting code in POD text

d10987 1
a10987 1
=item SYNOPSIS
d10989 4
a10992 1
=item DESCRIPTION
d10996 1
a10996 3
=item AUTHOR

=item COPYRIGHT AND LICENSE
d11000 2
a11001 1
=head2 Pod::ParseUtils - helpers for POD parsing and conversion
d11009 3
a11011 1
=back
d11015 12
a11026 1
=item Pod::List
d11028 1
a11028 1
Pod::List-E<gt>new()
d11032 1
a11032 1
$list-E<gt>file()
d11034 2
a11035 1
$list-E<gt>start()
d11037 1
a11037 1
$list-E<gt>indent()
d11039 1
a11039 1
$list-E<gt>type()
d11041 1
a11041 1
$list-E<gt>rx()
d11043 1
a11043 1
$list-E<gt>item()
d11045 1
a11045 1
$list-E<gt>parent()
d11047 1
a11047 1
$list-E<gt>tag()
d11051 1
a11051 1
=item Pod::Hyperlink
d11053 1
a11053 1
Pod::Hyperlink-E<gt>new()
d11055 1
a11055 1
=back
d11057 1
a11057 1
$link-E<gt>parse($string)
d11059 1
a11059 1
$link-E<gt>markup($string)
d11061 26
a11086 1
$link-E<gt>text()
d11088 1
a11088 1
$link-E<gt>warning()
d11090 1
a11090 1
$link-E<gt>file(), $link-E<gt>line()
d11092 1
a11092 5
$link-E<gt>page()

$link-E<gt>node()

$link-E<gt>alttext()
d11094 1
a11094 1
$link-E<gt>type()
d11096 1
a11096 1
$link-E<gt>link()
d11098 1
a11098 1
=over 4
d11100 1
a11100 1
=item Pod::Cache
d11102 5
a11106 1
Pod::Cache-E<gt>new()
d11110 1
a11110 1
$cache-E<gt>item()
d11112 1
a11112 1
$cache-E<gt>find_page($name)
d11114 1
a11114 1
=over 4
d11116 1
a11116 1
=item Pod::Cache::Item
d11118 1
a11118 1
Pod::Cache::Item-E<gt>new()
d11120 1
a11120 1
=back
d11122 1
a11122 1
$cacheitem-E<gt>page()
d11124 1
a11124 1
$cacheitem-E<gt>description()
d11126 1
a11126 1
$cacheitem-E<gt>path()
d11128 1
a11128 1
$cacheitem-E<gt>file()
d11130 1
a11130 1
$cacheitem-E<gt>nodes()
d11132 1
a11132 1
$cacheitem-E<gt>find_node($name)
d11134 1
a11134 1
$cacheitem-E<gt>idx()
d11136 1
a11136 1
=over 4
d11138 1
a11138 1
=item AUTHOR
d11140 1
a11140 1
=item SEE ALSO
d11142 1
a11142 1
=back
d11144 1
a11144 1
=head2 Pod::Parser - base class for creating POD filters and translators
d11146 1
a11146 1
=over 4
d11148 1
a11148 1
=item SYNOPSIS
d11150 1
a11150 1
=item REQUIRES
d11152 1
a11152 1
=item EXPORTS
d11154 1
a11154 1
=item DESCRIPTION
d11156 1
a11156 1
=item QUICK OVERVIEW
d11158 1
a11158 1
=item PARSING OPTIONS
d11160 1
a11160 2
B<-want_nonPODs> (default: unset), B<-process_cut_cmd> (default: unset),
B<-warnings> (default: unset)
d11162 1
a11162 1
=back
d11164 1
a11164 1
=over 4
d11166 1
a11166 1
=item RECOMMENDED SUBROUTINE/METHOD OVERRIDES
d11168 1
a11168 1
=back
d11170 1
a11170 1
=over 4
d11172 1
a11172 1
=item B<command()>
d11174 1
a11174 1
C<$cmd>, C<$text>, C<$line_num>, C<$pod_para>
d11176 1
a11176 1
=back
d11180 1
a11180 1
=item B<verbatim()>
d11182 1
a11182 3
C<$text>, C<$line_num>, C<$pod_para>

=back
d11186 1
a11186 1
=item B<textblock()>
d11188 1
a11188 1
C<$text>, C<$line_num>, C<$pod_para>
d11192 1
a11192 1
=over 4
d11194 1
a11194 3
=item B<interior_sequence()>

=back
d11198 1
a11198 1
=item OPTIONAL SUBROUTINE/METHOD OVERRIDES
d11200 9
a11208 1
=back
d11210 1
a11210 1
=over 4
d11212 6
a11217 1
=item B<new()>
d11219 1
a11219 1
=back
d11221 2
a11222 1
=over 4
d11224 1
a11224 1
=item B<initialize()>
d11226 1
a11226 1
=back
d11228 1
a11228 1
=over 4
d11230 1
a11230 1
=item B<begin_pod()>
d11234 4
a11237 1
=over 4
d11239 1
a11239 1
=item B<begin_input()>
d11241 1
a11241 1
=back
d11243 1
a11243 1
=over 4
d11245 1
a11245 1
=item B<end_input()>
d11247 1
a11247 1
=back
d11251 1
a11251 1
=item B<end_pod()>
d11255 2
d11259 3
a11261 1
=item B<preprocess_line()>
d11267 4
a11270 1
=item B<preprocess_paragraph()>
d11276 1
a11276 1
=item METHODS FOR PARSING AND PROCESSING
d11282 1
a11282 1
=item B<parse_text()>
d11284 2
a11285 3
B<-expand_seq> =E<gt> I<code-ref>|I<method-name>, B<-expand_text> =E<gt>
I<code-ref>|I<method-name>, B<-expand_ptree> =E<gt>
I<code-ref>|I<method-name>
d11291 1
a11291 1
=item B<interpolate()>
d11297 3
a11299 1
=item B<parse_paragraph()>
d11303 2
d11307 1
a11307 1
=item B<parse_from_filehandle()>
d11309 1
a11309 1
=back
d11311 1
a11311 1
=over 4
d11313 3
a11315 1
=item B<parse_from_file()>
d11317 1
a11317 1
=back
d11319 1
a11319 1
=over 4
d11321 1
a11321 1
=item ACCESSOR METHODS
d11323 1
a11323 1
=back
d11325 1
a11325 1
=over 4
d11327 1
a11327 1
=item B<errorsub()>
d11329 2
a11330 1
=back
d11334 1
a11334 1
=item B<cutting()>
d11336 1
a11336 1
=back
d11338 1
a11338 1
=over 4
d11340 1
a11340 1
=item B<parseopts()>
d11342 2
a11343 5
=back

=over 4

=item B<output_file()>
d11349 1
a11349 1
=item B<output_handle()>
d11355 1
a11355 1
=item B<input_file()>
d11361 1
a11361 1
=item B<input_handle()>
d11367 1
a11367 1
=item B<input_streams()>
d11373 1
a11373 1
=item B<top_stream()>
d11379 1
a11379 1
=item PRIVATE METHODS AND DATA
d11385 1
a11385 1
=item B<_push_input_stream()>
d11391 1
a11391 1
=item B<_pop_input_stream()>
d11397 1
a11397 5
=item TREE-BASED PARSING

=item SEE ALSO

=item AUTHOR
a11400 2
=head2 Pod::Plainer - Perl extension for converting Pod to old style Pod.

d11403 1
a11403 13
=item SYNOPSIS

=item DESCRIPTION

=over 4

=item EXPORT

=back

=item AUTHOR

=item SEE ALSO
a11406 3
=head2 Pod::Select, podselect() - extract selected sections of POD from
input

d11409 3
a11411 1
=item SYNOPSIS
d11413 1
a11413 1
=item REQUIRES
d11415 1
a11415 1
=item EXPORTS
d11417 1
a11417 1
=item DESCRIPTION
d11419 1
a11419 1
=item SECTION SPECIFICATIONS
d11421 1
a11421 1
=item RANGE SPECIFICATIONS
d11427 1
a11427 1
=item OBJECT METHODS
d11433 1
a11433 1
=item B<curr_headings()>
d11439 1
a11439 1
=item B<select()>
d11445 1
a11445 1
=item B<add_selection()>
d11451 1
a11451 1
=item B<clear_selections()>
d11457 1
a11457 1
=item B<match_section()>
d11463 1
a11463 1
=item B<is_selected()>
d11469 1
a11469 1
=item EXPORTED FUNCTIONS
d11475 1
a11475 3
=item B<podselect()>

B<-output>, B<-sections>, B<-ranges>
d11481 1
a11481 1
=item PRIVATE METHODS AND DATA
d11487 1
a11487 1
=item B<_compile_section_spec()>
d11493 1
a11493 1
=item $self->{_SECTION_HEADINGS}
d11499 1
a11499 1
=item $self->{_SELECTED_SECTIONS}
d11505 1
a11505 3
=item SEE ALSO

=item AUTHOR
a11508 2
=head2 Pod::Text - Convert POD data to formatted ASCII text

d11511 1
a11511 1
=item SYNOPSIS
d11513 1
a11513 1
=item DESCRIPTION
d11515 1
a11515 1
alt, code, indent, loose, quotes, sentence, width
d11517 1
a11517 1
=item DIAGNOSTICS
d11519 1
a11519 4
Bizarre space in item, Item called without tag, Can't open %s for reading:
%s, Invalid quote specification "%s", %s:%d: Unknown command paragraph: %s,
%s:%d: Unknown escape: %s, %s:%d: Unknown formatting code: %s, %s:%d:
Unmatched =back
d11521 1
a11521 1
=item RESTRICTIONS
d11523 1
a11523 1
=item NOTES
d11525 1
a11525 1
=item SEE ALSO
d11527 1
a11527 1
=item AUTHOR
d11529 1
a11529 1
=item COPYRIGHT AND LICENSE
a11532 2
=head2 Pod::Text::Color - Convert POD data to formatted color ASCII text

d11535 1
a11535 1
=item SYNOPSIS
d11537 1
a11537 1
=item DESCRIPTION
d11539 1
a11539 1
=item BUGS
d11541 1
a11541 5
=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE
a11544 3
=head2 Pod::Text::Overstrike - Convert POD data to formatted overstrike
text

d11547 1
a11547 1
=item SYNOPSIS
d11549 1
a11549 1
=item DESCRIPTION
d11551 1
a11551 1
=item BUGS
a11556 2
=item COPYRIGHT AND LICENSE

d11559 1
a11559 2
=head2 Pod::Text::Termcap - Convert POD data to ASCII text with format
escapes
d11567 1
a11567 1
=item NOTES
d11569 1
a11569 1
=item SEE ALSO
d11571 1
a11571 1
=item AUTHOR
d11573 1
a11573 1
=item COPYRIGHT AND LICENSE
a11576 3
=head2 Pod::Usage, pod2usage() - print a usage message from embedded pod
documentation

d11579 1
a11579 1
=item SYNOPSIS
d11581 1
a11581 1
=item ARGUMENTS
d11583 1
a11583 2
C<-message>, C<-msg>, C<-exitval>, C<-verbose>, C<-output>, C<-input>,
C<-pathlist>
d11585 1
a11585 1
=item DESCRIPTION
d11587 1
a11587 1
=item EXAMPLES
d11589 1
a11589 1
=over 4
d11591 1
a11591 1
=item Recommended Use
d11593 1
a11593 1
=back
d11595 1
a11595 1
=item CAVEATS
d11597 1
a11597 1
=item AUTHOR
d11599 1
a11599 1
=item ACKNOWLEDGEMENTS
d11601 1
a11601 1
=back
d11603 1
a11603 2
=head2 Pod::t::basic, basic.pod - Test of various basic POD features in
translators.
d11605 1
a11605 1
=over 4
d11607 1
a11607 3
=item HEADINGS

=item This C<is> a "level 1" heading
d11611 1
a11611 1
=item ``Level'' "2 I<heading>
d11615 1
a11615 1
=item This C<is> a "level 1" heading
d11617 1
a11617 1
=over 4
d11619 1
a11619 1
=item ``Level'' 2 I<heading>
d11621 1
a11621 1
=back
d11623 1
a11623 1
=item LINKS
d11625 1
a11625 1
=item OVER AND ITEMS
d11627 1
a11627 2
This  is a test, a, b, a, b, c, d, "foo", B<bar>, C<baz>, Some longer item
text
d11629 1
a11629 1
=item FORMATTING CODES
d11631 1
a11631 1
E<amp>, E<apos>, E<lt>, E<gt>, E<quot>, E<sol>
d11633 1
a11633 1
=item VERBATIM
d11635 1
a11635 1
=item CONCLUSION
d11637 1
a11637 1
=back
d11639 1
a11639 1
=head2 Pod::t::htmlescp, Escape Sequences Test
d11641 1
a11641 1
=over 4
d11643 1
a11643 1
=item DESCRIPTION
d11647 3
a11649 1
=head2 Pod::t::htmlview, Test HTML Rendering
d11651 1
a11651 1
=over 4
d11653 1
a11653 1
=item SYNOPSIS
d11655 1
a11655 1
=item DESCRIPTION
d11657 1
a11657 1
=item METHODS =E<gt> OTHER STUFF
d11659 1
a11659 1
=over 4
d11661 1
a11661 1
=item new()
d11663 1
a11663 2
foo, bar, baz, C<Black> Cat, Sat S<I<on> the>, MatE<lt>!E<gt>, 1 Cat, 2
Sat, 3 Mat
d11665 1
a11665 1
=item old()
d11667 1
a11667 1
=back
d11669 1
a11669 1
=item TESTING FOR AND BEGIN
d11671 1
a11671 1
=item TESTING URLs hyperlinking
d11673 1
a11673 1
=item SEE ALSO
d11677 1
a11677 1
=head2 SDBM_File - Tied access to sdbm files
d11685 2
a11686 1
C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>
d11690 4
a11693 1
=over 4
d11695 1
a11695 1
=item C<sdbm store returned -1, errno 22, key "..." at ...>
d11697 1
a11697 1
=back
d11699 1
a11699 1
=item BUGS AND WARNINGS
d11703 1
a11703 1
=head2 Safe - Compile and execute code in restricted compartments
d11711 3
a11713 1
a new namespace, an operator mask
d11715 1
a11715 1
=item WARNING
d11717 1
a11717 1
=over 4
d11719 1
a11719 1
=item RECENT CHANGES
d11721 1
a11721 1
=item Methods in class Safe
d11723 1
a11723 4
permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)
d11725 1
a11725 1
=item Some Safety Issues
d11727 1
a11727 1
Memory, CPU, Snooping, Signals, State Changes
d11729 1
a11729 1
=item AUTHOR
d11731 1
a11731 1
=back
d11733 1
a11733 1
=back
d11735 1
a11735 1
=head2 Scalar::Util - A selection of general-utility scalar subroutines
d11739 1
a11739 1
=item SYNOPSIS
d11741 1
a11741 1
=item DESCRIPTION
d11743 1
a11743 2
blessed EXPR, dualvar NUM, STRING, isweak EXPR, openhandle FH, reftype
EXPR, tainted EXPR, weaken REF
d11745 1
a11745 1
=item KNOWN BUGS
d11747 1
a11747 1
=item COPYRIGHT
d11749 1
a11749 1
=item BLATANT PLUG
d11751 1
a11751 1
=back
d11753 1
a11753 1
=head2 Search::Dict, look - search for key in dictionary file
d11755 1
a11755 1
=over 4
d11757 1
a11757 1
=item SYNOPSIS
d11759 1
a11759 1
=item DESCRIPTION
d11761 1
a11761 1
=back
d11763 1
a11763 1
=head2 SelectSaver - save and restore selected file handle
d11767 1
a11767 1
=item SYNOPSIS
d11769 1
a11769 1
=item DESCRIPTION
d11773 3
a11775 1
=head2 SelfLoader - load functions only on demand
d11779 5
a11783 1
=item SYNOPSIS
d11785 1
a11785 1
=item DESCRIPTION
d11787 1
a11787 1
=over 4
d11789 1
a11789 1
=item The __DATA__ token
d11791 1
a11791 1
=item SelfLoader autoloading
d11793 1
a11793 1
=item Autoloading and package lexicals
d11795 1
a11795 1
=item SelfLoader and AutoLoader
d11797 1
a11797 1
=item __DATA__, __END__, and the FOOBAR::DATA filehandle.
d11799 1
a11799 1
=item Classes and inherited methods.
d11801 1
a11801 1
=back
d11803 1
a11803 1
=item Multiple packages and fully qualified subroutine names
d11807 1
a11807 1
=head2 Shell - run shell commands transparently within perl
d11813 4
d11819 3
a11821 1
=over 4
d11823 2
a11824 1
=item OBJECT ORIENTED SYNTAX
d11828 3
a11830 1
=item AUTHOR
a11833 3
=head2 Socket, sockaddr_in, sockaddr_un, inet_aton, inet_ntoa - load the C
socket.h defines and structure manipulators 

d11836 1
a11836 1
=item SYNOPSIS
d11838 1
a11838 7
=item DESCRIPTION

inet_aton HOSTNAME, inet_ntoa IP_ADDRESS, INADDR_ANY, INADDR_BROADCAST,
INADDR_LOOPBACK, INADDR_NONE, sockaddr_family SOCKADDR, sockaddr_in PORT,
ADDRESS, sockaddr_in SOCKADDR_IN, pack_sockaddr_in PORT, IP_ADDRESS,
unpack_sockaddr_in SOCKADDR_IN, sockaddr_un PATHNAME, sockaddr_un
SOCKADDR_UN, pack_sockaddr_un PATH, unpack_sockaddr_un SOCKADDR_UN
a11841 2
=head2 Storable - persistence for Perl data structures

d11844 1
a11844 1
=item SYNOPSIS
d11846 1
a11846 1
=item DESCRIPTION
d11848 1
a11848 1
=item MEMORY STORE
d11850 1
a11850 1
=item ADVISORY LOCKING
d11852 1
a11852 1
=item SPEED
d11854 1
a11854 1
=item CANONICAL REPRESENTATION
d11856 1
a11856 1
=item FORWARD COMPATIBILITY
d11858 1
a11858 1
utf8 data, restricted hashes, files from future versions of Storable
d11860 1
a11860 1
=item ERROR REPORTING
d11862 1
a11862 1
=item WIZARDS ONLY
d11866 3
a11868 1
=item Hooks
d11870 1
a11870 2
C<STORABLE_freeze> I<obj>, I<cloning>, C<STORABLE_thaw> I<obj>, I<cloning>,
I<serialized>, ..
d11872 1
a11872 1
=item Predicates
d11874 1
a11874 2
C<Storable::last_op_in_netorder>, C<Storable::is_storing>,
C<Storable::is_retrieving>
d11876 1
a11876 1
=item Recursion
d11878 1
a11878 1
=item Deep Cloning
d11882 1
a11882 1
=item Storable magic
d11884 1
a11884 1
=item EXAMPLES
d11886 1
a11886 3
=item WARNING

=item BUGS
d11890 1
a11890 1
=item 64 bit data in perl 5.6.0 and 5.6.1
d11894 1
a11894 1
=item CREDITS
d11896 1
a11896 3
=item AUTHOR

=item SEE ALSO
d11900 1
a11900 1
=head2 Switch - A switch statement for Perl
d11902 1
a11902 1
=over 4
d11904 1
a11904 1
=item VERSION
d11906 1
a11906 1
=item SYNOPSIS
d11908 1
a11908 1
=item BACKGROUND
d11910 1
a11910 1
=item DESCRIPTION
d11914 1
a11914 1
=item Allowing fall-through
d11916 1
a11916 1
=item Automating fall-through
d11918 1
a11918 1
=item Alternative syntax
d11920 1
a11920 1
=item Higher-order Operations
d11924 3
a11926 1
=item DEPENDENCIES
d11928 3
a11930 1
=item AUTHOR
d11932 1
a11932 1
=item BUGS
d11934 1
a11934 1
=item LIMITATION
d11936 1
a11936 1
=item COPYRIGHT
a11939 2
=head2 Symbol - manipulate Perl symbols and their names

d11942 1
a11942 3
=item SYNOPSIS

=item DESCRIPTION
d11946 1
a11946 1
=head2 Sys::Hostname - Try every conceivable way to get hostname
d11948 1
a11948 1
=over 4
d11950 1
a11950 1
=item SYNOPSIS
d11952 1
a11952 1
=item DESCRIPTION
d11954 1
a11954 1
=item AUTHOR
d11958 1
a11958 2
=head2 Syslog, Sys::Syslog, openlog, closelog, setlogmask, syslog - Perl
interface to the UNIX syslog(3) calls
d11960 1
a11960 1
=over 4
d11962 1
a11962 1
=item SYNOPSIS
d11964 1
a11964 1
=item DESCRIPTION
d11966 1
a11966 3
openlog $ident, $logopt, $facility, syslog $priority, $format, @@args,
setlogmask $mask_priority, setlogsock $sock_type [$stream_location] (added
in 5.004_02), closelog
d11968 1
a11968 1
=item EXAMPLES
d11970 1
a11970 1
=item SEE ALSO
d11972 1
a11972 1
=item AUTHOR
a11975 3
=head2 Syslog::Syslog, Sys::Syslog, openlog, closelog, setlogmask, syslog -
Perl interface to the UNIX syslog(3) calls

d11978 1
a11978 1
=item SYNOPSIS
d11980 1
a11980 1
=item DESCRIPTION
d11982 1
a11982 3
openlog $ident, $logopt, $facility, syslog $priority, $format, @@args,
setlogmask $mask_priority, setlogsock $sock_type [$stream_location] (added
in 5.004_02), closelog
d11984 1
a11984 5
=item EXAMPLES

=item SEE ALSO

=item AUTHOR
a11987 2
=head2 Term::ANSIColor - Color screen output using ANSI escape sequences

d11990 1
a11990 1
=item SYNOPSIS
d11992 1
a11992 1
=item DESCRIPTION
d11994 1
a11994 1
=item DIAGNOSTICS
d11996 1
a11996 3
Bad escape sequence %s, Bareword "%s" not allowed while "strict subs" in
use, Invalid attribute name %s, Name "%s" used only once: possible typo, No
comma allowed after filehandle, No name for escape sequence %s
d11998 1
a11998 1
=item ENVIRONMENT
d12000 1
a12000 1
ANSI_COLORS_DISABLED
d12002 1
a12002 1
=item RESTRICTIONS
d12004 1
a12004 1
=item NOTES
d12006 1
a12006 1
=item SEE ALSO
d12008 1
a12008 3
=item AUTHORS

=item COPYRIGHT AND LICENSE
a12011 2
=head2 Term::Cap - Perl termcap interface

d12014 1
a12014 1
=item SYNOPSIS
d12016 1
a12016 1
=item DESCRIPTION
d12020 1
a12020 1
=item METHODS
d12024 1
a12024 1
=back
d12026 1
a12026 1
B<Tgetent>, OSPEED, TERM
d12028 1
a12028 1
B<Tpad>, B<$string>, B<$cnt>, B<$FH>
d12030 1
a12030 1
B<Tputs>, B<$cap>, B<$cnt>, B<$FH>
d12032 1
a12032 1
B<Tgoto>, B<$cap>, B<$col>, B<$row>, B<$FH>
d12034 1
a12034 1
B<Trequire>
d12038 1
a12038 1
=item EXAMPLES
d12040 1
a12040 1
=item COPYRIGHT AND LICENSE
a12043 2
=item SEE ALSO

d12046 1
a12046 1
=head2 Term::Complete - Perl word completion module
d12054 1
a12054 1
E<lt>tabE<gt>, ^D, ^U, E<lt>delE<gt>, E<lt>bsE<gt>
d12056 1
a12056 1
=item DIAGNOSTICS
d12058 1
a12058 1
=item BUGS
d12062 2
d12066 2
a12067 2
=head2 Term::ReadLine - Perl interface to various C<readline> packages. If
no real package is found, substitutes stubs instead of basic functions.
d12073 1
a12073 1
=item DESCRIPTION
d12075 1
a12075 1
=item Minimal set of supported functions
d12077 1
a12077 2
C<ReadLine>, C<new>, C<readline>, C<addhistory>, C<IN>, $C<OUT>,
C<MinLine>, C<findConsole>, Attribs, C<Features>
d12079 1
a12079 1
=item Additional supported functions
d12081 1
a12081 1
C<tkRunning>, C<ornaments>, C<newTTY>
d12083 1
a12083 1
=item EXPORTS
d12085 1
a12085 1
=item ENVIRONMENT
d12087 1
a12087 1
=item CAVEATS
a12090 2
=head2 Test - provides a simple framework for writing test scripts

d12093 1
a12093 1
=item SYNOPSIS
d12095 1
a12095 1
=item DESCRIPTION
d12099 1
a12099 3
=item Functions

B<plan>
d12103 1
a12103 1
=back
d12105 1
a12105 1
B<_to_value>
d12107 1
a12107 1
B<ok>
d12111 1
a12111 1
=item TEST TYPES
d12113 1
a12113 1
NORMAL TESTS, SKIPPED TESTS, TODO TESTS
d12115 1
a12115 1
=item ONFAIL
d12117 1
a12117 1
=item BUGS and CAVEATS
d12119 1
a12119 1
=item NOTE
d12121 1
a12121 1
=item SEE ALSO
d12123 1
a12123 1
=item AUTHOR
a12126 2
=head2 Test::Builder - Backend for building test libraries

d12129 1
a12129 1
=item SYNOPSIS
d12131 1
a12131 1
=item DESCRIPTION
d12135 1
a12135 3
=item Construction

B<new>
d12137 1
a12137 1
=back
d12143 1
a12143 3
=item Setting up tests

B<exported_to>
d12147 1
a12147 1
B<plan>
d12149 1
a12149 1
B<expected_tests>
d12151 1
a12151 3
B<no_plan>

B<skip_all>
d12155 1
a12155 3
=item Running tests

B<ok>
d12159 1
a12159 1
B<is_eq>, B<is_num>
d12161 1
a12161 1
B<isnt_eq>, B<isnt_num>
d12163 1
a12163 1
B<like>, B<unlike>
d12165 1
a12165 1
B<maybe_regex>
d12167 1
a12167 1
B<cmp_ok>
d12169 1
a12169 1
B<BAILOUT>
d12171 1
a12171 1
B<skip>
d12173 1
a12173 1
B<todo_skip>
d12175 1
a12175 1
B<skip_rest>
d12177 1
a12177 1
=over 4
d12179 1
a12179 1
=item Test style
d12181 1
a12181 1
B<level>
d12183 1
a12183 1
=back
d12185 3
a12187 1
B<use_numbers>
d12189 1
a12189 1
B<no_header>, B<no_ending>
d12191 1
a12191 1
=over 4
d12193 1
a12193 1
=item Output
d12195 1
a12195 1
B<diag>
d12199 1
a12199 3
B<_print>

B<output>, B<failure_output>, B<todo_output>
d12203 1
a12203 1
=item Test Status and Info
d12205 1
a12205 1
B<current_test>
d12207 1
a12207 1
=back
d12209 1
a12209 1
B<summary>
d12211 1
a12211 1
B<details>  I<UNIMPLEMENTED>, B<todo>
d12213 1
a12213 1
B<caller>
d12215 2
a12216 1
B<_sanity_check>
d12218 1
a12218 1
B<_whoa>
d12220 1
a12220 1
B<_my_exit>
d12222 1
a12222 1
=over 4
d12224 1
a12224 3
=item THREADS

=item EXAMPLES
d12228 1
a12228 3
=item AUTHORS

=item COPYRIGHT
d12232 2
a12233 1
=head2 Test::Harness - run perl standard test scripts with statistics
d12241 3
a12243 1
=over 4
d12245 1
a12245 1
=item The test script output
d12247 2
a12248 3
B<'1..M'>, B<'ok', 'not ok'.  Ok?>, B<test numbers>, B<test names>,
B<Skipping tests>, B<Todo tests>, B<Bail out!>, B<Comments>, B<Anything
else>
d12250 1
a12250 1
=item Taint mode
d12252 1
a12252 1
=item Configuration variables.
d12254 1
a12254 1
B<$Test::Harness::verbose>, B<$Test::Harness::switches>
d12256 2
a12257 1
=item Failure
d12259 1
a12259 2
B<Failed Test>, B<Stat>, B<Wstat>, B<Total>, B<Fail>, B<Failed>, B<List of
Failed>
d12261 1
a12261 1
=item Functions
d12263 1
a12263 1
B<runtests>
d12265 1
a12265 1
=back
d12269 1
a12269 1
B<_all_ok>
d12271 1
a12271 1
B<_globdir>
d12273 1
a12273 1
B<_run_all_tests>
d12275 1
a12275 1
B<_mk_leader>
d12277 1
a12277 1
B<_leader_width>
d12281 1
a12281 1
=item EXPORT
d12283 1
a12283 1
=item DIAGNOSTICS
d12285 1
a12285 4
C<All tests successful.\nFiles=%d,  Tests=%d, %s>, C<FAILED tests
%s\n\tFailed %d/%d tests, %.2f%% okay.>, C<Test returned status %d (wstat
%d)>, C<Failed 1 test, %.2f%% okay. %s>, C<Failed %d/%d tests, %.2f%% okay.
%s>, C<FAILED--Further testing stopped: %s>
d12287 1
a12287 1
=item ENVIRONMENT
d12289 1
a12289 3
C<HARNESS_ACTIVE>, C<HARNESS_COLUMNS>, C<HARNESS_COMPILE_TEST>,
C<HARNESS_FILELEAK_IN_DIR>, C<HARNESS_IGNORE_EXITCODE>, C<HARNESS_NOTTY>,
C<HARNESS_PERL_SWITCHES>, C<HARNESS_VERBOSE>
d12291 1
a12291 1
=item EXAMPLE
d12293 1
a12293 1
=item SEE ALSO
d12295 1
a12295 5
=item AUTHORS

=item TODO

=item BUGS
d12299 1
a12299 1
=head2 Test::Harness::Assert - simple assert
d12307 4
d12313 1
a12313 1
=item Functions
d12315 1
a12315 1
B<assert>
d12317 4
a12320 1
=back
d12322 1
a12322 1
=back
d12324 1
a12324 1
=over 4
d12328 1
a12328 1
=item SEE ALSO
d12332 1
a12332 1
=head2 Test::Harness::Iterator - Internal Test::Harness Iterator
d12342 1
a12342 1
=head2 Test::Harness::Straps - detailed analysis of test results
a12349 6
=over 4

=item Construction

B<new>

d12352 1
a12352 3
=back

B<_init>
d12356 1
a12356 1
=item Analysis
d12358 1
a12358 1
B<analyze>
d12360 1
a12360 1
=back
d12362 1
a12362 1
B<analyze_fh>
d12364 1
a12364 1
B<analyze_file>
d12366 1
a12366 1
B<_switches>
d12368 1
a12368 1
B<_INC2PERL5LIB>
d12370 1
a12370 1
B<_filtered_INC>
d12372 1
a12372 1
B<_restore_PERL5LIB>
d12374 1
a12374 1
=over 4
d12376 1
a12376 3
=item Parsing

B<_is_comment>
d12380 1
a12380 1
B<_is_header>
d12382 1
a12382 1
B<_is_test>
d12384 1
a12384 1
B<_is_bail_out>
d12386 1
a12386 1
B<_reset_file_state>
d12390 1
a12390 3
=item Results

B<_detailize>
a12393 4
=over 4

=item EXAMPLES

a12395 2
=item SEE ALSO

d12398 2
a12399 1
=head2 Test::More - yet another framework for writing test scripts
d12407 5
a12411 3
=over 4

=item I love it when a plan comes together
d12415 1
a12415 1
=back
d12419 1
a12419 1
=item Test names
d12421 1
a12421 3
=item I'm ok, you're not ok.

B<ok>
d12425 1
a12425 1
B<is>, B<isnt>
d12427 1
a12427 1
B<like>
d12429 1
a12429 1
B<unlike>
d12431 1
a12431 1
B<cmp_ok>
d12433 1
a12433 1
B<can_ok>
d12435 1
a12435 1
B<isa_ok>
d12437 2
a12438 1
B<pass>, B<fail>
d12442 1
a12442 1
=item Diagnostics
d12444 1
a12444 1
B<diag>
d12446 3
a12448 1
=back
d12450 1
a12450 1
=over 4
d12452 1
a12452 1
=item Module tests
d12454 1
a12454 1
B<use_ok>
d12458 2
a12459 1
B<require_ok>
d12463 1
a12463 1
=item Conditional tests
d12465 1
a12465 1
B<SKIP: BLOCK>
d12467 3
a12469 1
=back
d12471 1
a12471 1
B<TODO: BLOCK>, B<todo_skip>
d12473 1
a12473 1
When do I use SKIP vs. TODO?
d12475 1
a12475 5
=over 4

=item Comparison functions

B<is_deeply>
d12479 1
a12479 1
B<eq_array>
d12481 1
a12481 1
B<eq_hash>
d12483 1
a12483 1
B<eq_set>
d12485 1
a12485 1
=over 4
d12487 1
a12487 1
=item Extending and Embedding Test::More
d12489 3
a12491 1
B<builder>
d12493 1
a12493 3
=back

=over 4
a12496 9
=item BUGS and CAVEATS

Making your own ok(), The eq_* family has some caveats, Test::Harness
upgrades

=item HISTORY

=item SEE ALSO

a12498 2
=item COPYRIGHT

d12501 1
a12501 1
=head2 Test::Simple - Basic utilities for writing tests.
d12509 1
a12509 1
B<ok>
d12513 2
d12517 1
a12517 1
=item EXAMPLE
d12519 1
a12519 1
=item CAVEATS
d12521 1
a12521 1
=item NOTES
d12523 1
a12523 1
=item HISTORY
d12525 1
a12525 1
=item SEE ALSO
d12527 1
a12527 6
L<Test::More>, L<Test>, L<Test::Unit>, L<Test::Inline>, L<SelfTest>,
L<Test::Harness>

=item AUTHORS

=item COPYRIGHT
d12531 2
a12532 1
=head2 Test::Tutorial - A tutorial about writing really basic tests
d12536 2
d12540 1
a12540 1
=over 4
d12542 2
a12543 1
=item Nuts and bolts of testing.
d12545 1
a12545 1
=item Where to start?
d12547 1
a12547 1
=item Names
d12549 1
a12549 1
=item Test the manual
d12551 1
a12551 1
=item Sometimes the tests are wrong
d12553 1
a12553 1
=item Testing lots of values
d12555 1
a12555 1
=item Informative names
d12557 1
a12557 1
=item Skipping tests
d12559 1
a12559 1
=item Todo tests
d12561 1
a12561 1
=item Testing with taint mode.
d12563 1
a12563 1
=back
d12565 1
a12565 1
=item FOOTNOTES
d12567 1
a12567 1
=item AUTHORS
d12569 1
a12569 9
=item COPYRIGHT

=back

=head2 Text::Abbrev, abbrev - create an abbreviation table from a list

=over 4

=item SYNOPSIS
d12571 1
a12571 1
=item DESCRIPTION
d12573 1
a12573 1
=item EXAMPLE
d12577 1
a12577 1
=head2 Text::Balanced - Extract delimited text sequences from strings.
d12587 1
a12587 1
=item General behaviour in list contexts
d12589 1
a12589 1
[0], [1], [2]
d12591 1
a12591 1
=item General behaviour in scalar and void contexts
d12593 1
a12593 1
=item A note about prefixes
d12595 4
a12598 1
=item C<extract_delimited>
d12600 1
a12600 1
=item C<extract_bracketed>
d12602 1
a12602 1
=item C<extract_tagged>
d12604 1
a12604 2
C<reject =E<gt> $listref>, C<ignore =E<gt> $listref>, C<fail =E<gt> $str>,
[0], [1], [2], [3], [4], [5]
d12606 1
a12606 15
=item C<gen_extract_tagged>

=item C<extract_quotelike>

[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10]

=item C<extract_quotelike> and "here documents"

[0], [1], [2], [3], [4], [5], [6], [7..10]

=item C<extract_codeblock>

=item C<extract_multiple>

=item C<gen_delimited_pat>
d12610 1
a12610 1
=item DIAGNOSTICS
d12612 1
a12612 13
 C<Did not find a suitable bracket: "%s">,  C<Did not find prefix: /%s/>, 
C<Did not find opening bracket after prefix: "%s">,  C<No quotelike
operator found after prefix: "%s">,  C<Unmatched closing bracket: "%c">, 
C<Unmatched opening bracket(s): "%s">, C<Unmatched embedded quote (%s)>,
C<Did not find closing delimiter to match '%s'>,  C<Mismatched closing
bracket: expected "%c" but found "%s">,  C<No block delimiter found after
quotelike "%s">, C<Did not find leading dereferencer>, C<Bad identifier
after dereferencer>, C<Did not find expected opening bracket at %s>,
C<Improperly nested codeblock at %s>,  C<Missing second block for quotelike
"%s">, C<No match found for opening bracket>, C<Did not find opening tag:
/%s/>, C<Unable to construct closing tag to match: /%s/>, C<Found invalid
nested tag: %s>, C<Found unbalanced nested tag: %s>, C<Did not find closing
tag>
d12614 1
a12614 1
=item AUTHOR
d12616 1
a12616 1
=item BUGS AND IRRITATIONS
d12618 1
a12618 1
=item COPYRIGHT
a12676 2
=item OVERRIDES

d12683 2
a12684 1
=head2 Thread - manipulate threads in Perl (for old code only)
d12696 3
a12698 3
$thread = Thread->new(\&start_sub), $thread = Thread->new(\&start_sub,
LIST), lock VARIABLE, async BLOCK;, Thread->self, cond_wait VARIABLE,
cond_signal VARIABLE, cond_broadcast VARIABLE, yield
d12702 1
a12702 1
join, eval, detach, equal, tid, flags, done
a12740 1
(for old code)
a12743 2
=item CAVEAT

a12780 64
=head2 Tie::File - Access the lines of a disk file via a Perl array

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item C<recsep>

=item C<autochomp>

=item C<mode>

=item C<memory>

=item C<dw_size>

=item Option Format

=back

=item Public Methods

=over 4

=item C<flock>

=item C<autochomp>

=item C<defer>, C<flush>, C<discard>, and C<autodefer>

=back

=item Tying to an already-opened filehandle

=item Deferred Writing

=over 4

=item Autodeferring

=back

=item CAVEATS

=item SUBCLASSING

=item WHAT ABOUT C<DB_File>?

=item AUTHOR

=item LICENSE

=item WARRANTY

=item THANKS

=item TODO

=back

d12801 1
a12801 2
=head2 Tie::Hash, Tie::StdHash, Tie::ExtraHash - base class definitions for
tied hashes
d12812 1
a12812 5
=item Inheriting from B<Tie::StdHash>

=item Inheriting from B<Tie::ExtraHash>

=item C<UNTIE> and C<DESTROY>
a12817 18
=head2 Tie::Memoize - add data to hash when needed

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Inheriting from B<Tie::Memoize>

=item EXAMPLE

=item BUGS

=item AUTHOR

=back

a12862 28
=head2 Time::HiRes - High resolution alarm, sleep, gettimeofday, interval
timers

=over 4

=item SYNOPSIS

=item DESCRIPTION

gettimeofday (), usleep ( $useconds ), ualarm ( $useconds [,
$interval_useconds ] ), tv_interval, time (), sleep ( $floating_seconds ),
alarm ( $floating_seconds [, $interval_floating_seconds ] ), setitimer,
getitimer ( $which )

=item EXAMPLES

=item C API

=item CAVEATS

=item AUTHORS

=item REVISION

=item COPYRIGHT

=back

d12927 2
a12928 196
$obj->isa( TYPE ), CLASS->isa( TYPE ), isa( VAL, TYPE ), $obj->can( METHOD
), CLASS->can( METHOD ), can( VAL, METHOD ), VERSION ( [ REQUIRE ] )

=back

=head2 Unicode::Collate - Unicode Collation Algorithm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Constructor and Tailoring

alternate, backwards, entry, ignoreName, ignoreChar, level, normalization,
overrideCJK, overrideHangul, preprocess, rearrange, table, undefName,
undefChar, katakana_before_hiragana, upper_before_lower

=item Methods for Collation

C<@@sorted = $Collator-E<gt>sort(@@not_sorted)>, C<$result =
$Collator-E<gt>cmp($a, $b)>, C<$result = $Collator-E<gt>eq($a, $b)>,
C<$result = $Collator-E<gt>ne($a, $b)>, C<$result = $Collator-E<gt>lt($a,
$b)>, C<$result = $Collator-E<gt>le($a, $b)>, C<$result =
$Collator-E<gt>gt($a, $b)>, C<$result = $Collator-E<gt>ge($a, $b)>,
C<$sortKey = $Collator-E<gt>getSortKey($string)>, C<$sortKeyForm =
$Collator-E<gt>viewSortKey($string)>, C<$position =
$Collator-E<gt>index($string, $substring)>, C<($position, $length) =
$Collator-E<gt>index($string, $substring)>

=item Other Methods

UCA_Version, Base_Unicode_Version

=item EXPORT

=item TODO

=item CAVEAT

=item BUGS

=back

=item AUTHOR

=item SEE ALSO

http://www.unicode.org/unicode/reports/tr10/,
http://www.unicode.org/unicode/reports/tr10/allkeys.txt,
http://www.unicode.org/unicode/reports/tr15/,
http://www.unicode.org/unicode/reports/tr18, L<Unicode::Normalize>

=back

=head2 Unicode::Normalize - Unicode Normalization Forms

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Normalization Forms

C<$NFD_string = NFD($string)>, C<$NFC_string = NFC($string)>,
C<$NFKD_string = NFKD($string)>, C<$NFKC_string = NFKC($string)>,
C<$normalized_string = normalize($form_name, $string)>

=item Decomposition and Composition

C<$decomposed_string = decompose($string)>, C<$decomposed_string =
decompose($string, $useCompatMapping)>, C<$reordered_string  =
reorder($string)>, C<$composed_string	= compose($string)>

=item Quick Check

C<$result = checkNFD($string)>, C<$result = checkNFC($string)>, C<$result =
checkNFKD($string)>, C<$result = checkNFKC($string)>, C<$result =
check($form_name, $string)>

=item Character Data

C<$canonical_decomposed = getCanon($codepoint)>,
C<$compatibility_decomposed = getCompat($codepoint)>,
C<$codepoint_composite = getComposite($codepoint_here, $codepoint_next)>,
C<$combining_class = getCombinClass($codepoint)>, C<$is_exclusion =
isExclusion($codepoint)>, C<$is_singleton = isSingleton($codepoint)>,
C<$is_non_startar_decomposition = isNonStDecomp($codepoint)>,
C<$may_be_composed_with_prev_char = isComp2nd($codepoint)>

=item EXPORT

=back

=item AUTHOR

=item SEE ALSO

http://www.unicode.org/unicode/reports/tr15/,
http://www.unicode.org/Public/UNIDATA/DerivedNormalizationProps.txt

=back

=head2 Unicode::UCD - Unicode character database

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item charinfo

=back

=over 4

=item charblock

=back

=over 4

=item charscript

=back

=over 4

=item charblocks

=back

=over 4

=item charscripts

=back

=over 4

=item Blocks versus Scripts

=item Matching Scripts and Blocks

=item Code Point Arguments

=item charinrange

=back

=over 4

=item compexcl

=back

=over 4

=item casefold

=back

=over 4

=item casespec

=back

=over 4

=item Unicode::UCD::UnicodeVersion

=back

=over 4

=item Implementation Note

=back

=over 4

=item BUGS

=item AUTHOR
d12988 1
a12988 1
Win32::GetNextAvailDrive(), Win32::GetOSVersion(), Win32::GetOSName(),
d12995 3
a12997 4
Win32::RegisterServer(LIBRARYNAME), Win32::SetChildShowWindow(SHOWWINDOW),
Win32::SetCwd(NEWDIRECTORY), Win32::SetLastError(ERROR),
Win32::Sleep(TIME), Win32::Spawn(COMMAND, ARGS, PID),
Win32::UnregisterServer(LIBRARYNAME)
@


1.1.1.6
log
@perl 5.8.2 from CPAN
@
text
@a1 4
# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is autogenerated by buildtoc from all the other pods.
# Edit those files and run buildtoc --build-toc to effect changes.

d106 2
a107 1
=head2 perlreftut - Mark's very short tutorial about references
a112 6
=item Who Needs Complicated Data Structures?

=item The Solution

=item Syntax

d115 1
a115 1
=item Making References
d117 1
a117 1
=item Using References
d119 1
a119 1
=item An Example
d121 1
a121 1
=item Arrow Rule
d123 1
a123 1
=back
d125 1
a125 1
=item Solution
d127 1
a127 1
=item The Rest
d129 1
a129 1
=item Summary
d131 1
a131 1
=item Credits
d133 1
a133 5
=over 4

=item Distribution Conditions

=back
d137 1
a137 1
=head2 perldsc - Perl Data Structures Cookbook
d141 1
a141 1
=item DESCRIPTION
d143 1
a143 2
arrays of arrays, hashes of arrays, arrays of hashes, hashes of hashes,
more elaborate constructs
d145 2
a146 1
=item REFERENCES
d148 1
a148 1
=item COMMON MISTAKES
d150 1
a150 1
=item CAVEAT ON PRECEDENCE
d152 1
a152 7
=item WHY YOU SHOULD ALWAYS C<use strict>

=item DEBUGGING

=item CODE EXAMPLES

=item ARRAYS OF ARRAYS
d156 1
a156 1
=item Declaration of an ARRAY OF ARRAYS
d158 1
a158 3
=item Generation of an ARRAY OF ARRAYS

=item Access and Printing of an ARRAY OF ARRAYS
d162 1
a162 5
=item HASHES OF ARRAYS

=over 4

=item Declaration of a HASH OF ARRAYS
d164 3
a166 3
=item Generation of a HASH OF ARRAYS

=item Access and Printing of a HASH OF ARRAYS
d170 1
a170 1
=item ARRAYS OF HASHES
d174 1
a174 5
=item Declaration of an ARRAY OF HASHES

=item Generation of an ARRAY OF HASHES

=item Access and Printing of an ARRAY OF HASHES
d178 1
a178 1
=item HASHES OF HASHES
d182 1
a182 1
=item Declaration of a HASH OF HASHES
d184 1
a184 1
=item Generation of a HASH OF HASHES
d186 1
a186 1
=item Access and Printing of a HASH OF HASHES
d188 1
a188 1
=back
d190 1
a190 1
=item MORE ELABORATE RECORDS
d192 1
a192 1
=over 4
d194 1
a194 1
=item Declaration of MORE ELABORATE RECORDS
d196 1
a196 1
=item Declaration of a HASH OF COMPLEX RECORDS
d198 1
a198 1
=item Generation of a HASH OF COMPLEX RECORDS
d200 1
a200 1
=back
d202 1
a202 1
=item Database Ties
d204 1
a204 1
=item SEE ALSO
d206 1
a206 1
=item AUTHOR
d210 1
a210 1
=head2 perllol - Manipulating Arrays of Arrays in Perl
d218 5
a222 1
=item Declaration and Access of Arrays of Arrays
d224 1
a224 1
=item Growing Your Own
d226 1
a226 1
=item Access and Printing
d230 2
a235 2
=item AUTHOR

d238 1
a238 1
=head2 perlrequick - Perl regular expressions quick start
d242 2
a245 2
=item The Guide

d248 1
a248 1
=item Simple word matching
d250 1
a250 1
=item Using character classes
d252 1
a252 1
=item Matching this or that
d254 1
a254 1
=item Grouping things and hierarchical matching
d256 1
a256 1
=item Extracting matches
d258 1
a258 1
=item Matching repetitions
d260 1
a260 1
=item More matching
d262 1
a262 1
=item Search and replace
d264 1
a264 1
=item The split operator
d266 1
a266 1
=back
d268 1
a268 1
=item BUGS
d270 1
a270 1
=item SEE ALSO
d272 1
a272 1
=item AUTHOR AND COPYRIGHT
d274 1
a274 1
=over 4
d276 1
a276 1
=item Acknowledgments
d278 1
a278 1
=back
d280 1
a280 1
=back
d282 1
a282 1
=head2 perlretut - Perl regular expressions tutorial
d284 1
a284 1
=over 4
d286 1
a286 1
=item DESCRIPTION
d288 1
a288 1
=item Part 1: The basics
d290 1
a290 1
=over 4
d292 1
a292 1
=item Simple word matching
d294 1
a294 1
=item Using character classes
d296 1
a296 1
=item Matching this or that
d298 1
a298 1
=item Grouping things and hierarchical matching
d300 1
a300 1
=item Extracting matches
d302 1
a302 1
=item Matching repetitions
d304 4
a307 1
=item Building a regexp
d309 1
a309 1
=item Using regular expressions in Perl
d311 5
a315 1
=back
d317 1
a317 1
=item Part 2: Power tools
d319 1
a319 1
=over 4
d321 1
a321 1
=item More on characters, strings, and character classes
d323 1
a323 1
=item Compiling and saving regular expressions
d325 1
a325 1
=item Embedding comments and modifiers in a regular expression
d327 1
a327 1
=item Non-capturing groupings
d329 1
a329 1
=item Looking ahead and looking behind
d331 1
a331 1
=item Using independent subexpressions to prevent backtracking
d333 1
a333 1
=item Conditional expressions
d335 1
a335 1
=item A bit of magic: executing Perl code in a regular expression
d337 1
a337 1
=item Pragmas and debugging
d339 1
a339 1
=back
d341 1
a341 1
=item BUGS
d343 1
a343 1
=item SEE ALSO
d345 1
a345 1
=item AUTHOR AND COPYRIGHT
d347 1
a347 1
=over 4
d349 1
a349 1
=item Acknowledgments
d351 1
a351 1
=back
d353 1
a353 1
=back
d355 1
a355 1
=head2 perlboot - Beginner's Object-Oriented Tutorial
d357 1
a357 1
=over 4
d359 1
a359 1
=item DESCRIPTION
d361 1
a361 1
=over 4
d363 1
a363 1
=item If we could talk to the animals...
d365 1
a365 1
=item Introducing the method invocation arrow
d367 1
a367 1
=item Invoking a barnyard
d369 1
a369 1
=item The extra parameter of method invocation
d371 1
a371 1
=item Calling a second method to simplify things
d373 1
a373 1
=item Inheriting the windpipes
d375 1
a375 1
=item A few notes about @@ISA
d377 1
a377 1
=item Overriding the methods
d379 1
a379 1
=item Starting the search from a different place
d381 1
a381 1
=item The SUPER way of doing things
d383 1
a383 1
=item Where we're at so far...
d385 11
a395 1
=item A horse is a horse, of course of course -- or is it?
d397 1
a397 1
=item Invoking an instance method
d399 1
a399 1
=item Accessing the instance data
d401 76
a476 1
=item How to build a horse
d478 1
a478 1
=item Inheriting the constructor
d480 1
a480 1
=item Making a method work with either classes or instances
d482 1
a482 1
=item Adding parameters to a method
d484 1
a484 1
=item More interesting instances
d486 1
a486 1
=item A horse of a different color
d488 1
a488 1
=item Summary
d490 1
a490 1
=back
d492 1
a492 1
=item SEE ALSO
d494 1
a494 1
=item COPYRIGHT
d496 1
a496 1
=back
d498 1
a498 1
=head2 perltoot - Tom's object-oriented tutorial for perl
d500 1
a500 1
=over 4
d502 1
a502 1
=item DESCRIPTION
d504 1
a504 1
=item Creating a Class
d506 1
a506 1
=over 4
d508 1
a508 1
=item Object Representation
d510 1
a510 1
=item Class Interface
d512 1
a512 1
=item Constructors and Instance Methods
d514 1
a514 1
=item Planning for the Future: Better Constructors
d516 1
a516 1
=item Destructors
d518 1
a518 1
=item Other Object Methods
d522 1
a522 1
=item Class Data
d526 6
a531 1
=item Accessing Class Data
d533 1
a533 1
=item Debugging Methods
d535 1
a535 1
=item Class Destructors
d537 1
a537 1
=item Documenting the Interface
d539 1
a539 1
=back
d541 1
a541 1
=item Aggregation
d543 1
a543 1
=item Inheritance
d547 1
a547 1
=item Overridden Methods
d549 1
a549 1
=item Multiple Inheritance
d551 1
a551 1
=item UNIVERSAL: The Root of All Objects
d555 1
a555 1
=item Alternate Object Representations
d559 3
a561 1
=item Arrays as Objects
d563 1
a563 1
=item Closures as Objects
d567 1
a567 1
=item AUTOLOAD: Proxy Methods
d571 3
a573 1
=item Autoloaded Data Methods
d575 1
a575 1
=item Inherited Autoloaded Data Methods
d579 1
a579 1
=item Metaclassical Tools
d583 3
a585 1
=item Class::Struct
d587 1
a587 1
=item Data Members as Variables
d591 1
a591 1
=item NOTES
d595 1
a595 1
=item Object Terminology
d597 1
a597 1
=back
d599 1
a599 1
=item SEE ALSO
d601 1
a601 1
=item AUTHOR AND COPYRIGHT
d603 1
a603 1
=item COPYRIGHT
d605 1
a605 1
=over 4
d607 1
a607 1
=item Acknowledgments
d611 1
a611 3
=back

=head2 perltooc - Tom's OO Tutorial for Class Data in Perl
d617 1
a617 3
=item Class Data in a Can

=item Class Data as Package Variables
d621 1
a621 1
=item Putting All Your Eggs in One Basket
d623 1
a623 1
=item Inheritance Concerns
d625 1
a625 1
=item The Eponymous Meta-Object
d627 1
a627 1
=item Indirect References to Class Data
d629 1
a629 1
=item Monadic Classes
d631 1
a631 1
=item Translucent Attributes
d633 1
a633 1
=back
d635 1
a635 1
=item Class Data as Lexical Variables
d637 1
a637 11
=over 4

=item Privacy and Responsibility 

=item File-Scoped Lexicals

=item More Inheritance Concerns

=item Locking the Door and Throwing Away the Key

=item Translucency Revisited
d641 1
a641 1
=item NOTES
d647 3
a649 1
=item ACKNOWLEDGEMENTS
d651 1
a651 1
=item HISTORY
d655 1
a655 1
=head2 perlbot - Bag'o Object Tricks (the BOT)
d661 1
a661 1
=item OO SCALING TIPS
d663 1
a663 1
=item INSTANCE VARIABLES
d665 1
a665 1
=item SCALAR INSTANCE VARIABLES
d667 1
a667 1
=item INSTANCE VARIABLE INHERITANCE
d669 4
a672 1
=item OBJECT RELATIONSHIPS
d674 1
a674 1
=item OVERRIDING SUPERCLASS METHODS
d676 6
a681 1
=item USING RELATIONSHIP WITH SDBM
d683 1
a683 1
=item THINKING OF CODE REUSE
d685 1
a685 1
=item CLASS CONTEXT AND THE OBJECT
d687 1
a687 1
=item INHERITING A CONSTRUCTOR
d689 1
a689 1
=item DELEGATION
d693 2
d697 2
a698 1
=head2 perlstyle - Perl style guide
d704 19
a722 1
=back
d724 1
a724 1
=head2 perlcheat - Perl 5 Cheat Sheet
d726 1
a726 1
=over 4
d728 1
a728 1
=item DESCRIPTION
d730 1
a730 1
=over 4
d732 1
a732 1
=item The sheet
d736 1
a736 1
=item ACKNOWLEDGEMENTS
d738 1
a738 1
=item AUTHOR
d740 1
a740 1
=item SEE ALSO
d754 1
a754 1
=item C/C++ Traps
d801 1
a801 1
Regular Expression, Regular Expression
d829 1
a829 1
=head2 perldebtut - Perl debugging tutorial
d833 2
d837 1
a837 1
=item use strict
d839 1
a839 1
=item Looking at data and -w and v
d841 1
a841 1
=item help
d843 1
a843 1
=item Stepping through code
d845 1
a845 1
=item Placeholder for a, w, t, T
d847 7
a853 1
=item REGULAR EXPRESSIONS
d855 1
a855 1
=item OUTPUT TIPS
d857 1
a857 1
=item CGI
d859 5
a863 1
=item GUIs
d865 1
a865 1
=item SUMMARY
d867 1
a867 1
=item SEE ALSO
d869 1
a869 1
=item AUTHOR
d871 1
a871 1
=item CONTRIBUTORS
d875 1
a875 2
=head2 perlfaq - frequently asked questions about Perl ($Date: 2003/01/31
17:37:17 $)
d883 11
a893 1
=item Where to get the perlfaq
d895 1
a895 1
=item How to contribute to the perlfaq
d897 1
a897 2
=item What will happen if you mail your Perl programming problems to the
authors
d901 1
a901 1
=item Credits
d903 1
a903 1
=item Author and Copyright Information
d905 1
a905 1
=over 4
d907 1
a907 1
=item Bundled Distributions
d909 1
a909 1
=item Disclaimer
d911 1
a911 1
=back
d913 1
a913 1
=item Table of Contents
d915 1
a915 5
perlfaq  - this document, perlfaq1 - General Questions About Perl, perlfaq2
- Obtaining and Learning about Perl, perlfaq3 - Programming Tools, perlfaq4
- Data Manipulation, perlfaq5 - Files and Formats, perlfaq6 - Regular
Expressions, perlfaq7 - General Perl Language Issues, perlfaq8 - System
Interaction, perlfaq9 - Networking
d917 1
a917 1
=item The Questions
d919 1
a919 1
=over 4
d921 1
a921 1
=item L<perlfaq1>: General Questions About Perl
d923 1
a923 1
=item L<perlfaq2>: Obtaining and Learning about Perl
d925 1
a925 1
=item L<perlfaq3>: Programming Tools
d927 1
a927 1
=item L<perlfaq4>: Data Manipulation
d929 1
a929 1
=item L<perlfaq5>: Files and Formats
d931 1
a931 1
=item L<perlfaq6>: Regular Expressions
d933 1
a933 1
=item L<perlfaq7>: General Perl Language Issues
d935 1
a935 1
=item L<perlfaq8>: System Interaction
d937 1
a937 1
=item L<perlfaq9>: Networking
d939 1
a939 1
=back
d943 1
a943 2
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.12 $, $Date:
2003/07/09 15:47:28 $)
d949 2
d953 1
a953 1
=item What is Perl?
d955 10
a964 1
=item Who supports Perl?  Who develops it?  Why is it free?
d966 1
a966 1
=item Which version of Perl should I use?
d968 7
a974 1
=item What are perl4 and perl5?
d976 1
a976 1
=item What is Ponie?
d978 2
a979 1
=item What is perl6?
d981 1
a981 1
=item How stable is Perl?
d983 1
a983 1
=item Is Perl difficult to learn?
d985 1
a985 2
=item How does Perl compare with other languages like Java, Python, REXX,
Scheme, or Tcl?
d987 1
a987 1
=item Can I do [task] in Perl?
d989 1
a989 1
=item When shouldn't I program in Perl?
d991 1
a991 1
=item What's the difference between "perl" and "Perl"?
d993 1
a993 1
=item Is it a Perl program or a Perl script?
d995 1
a995 1
=item What is a JAPH?
d997 1
a997 1
=item Where can I get a list of Larry Wall witticisms?
d999 1
a999 2
=item How can I convince my sysadmin/supervisor/employees to use version
5/5.6.1/Perl instead of some other language?
d1003 1
a1003 6
=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.20 $,
$Date: 2003/01/26 17:50:56 $)
d1011 1
a1011 1
=item What machines support Perl?  Where do I get it?
d1013 31
a1043 1
=item How can I get a binary version of Perl?
d1045 1
a1045 1
=item I don't have a C compiler on my system.  How can I compile perl?
d1047 1
a1047 2
=item I copied the Perl binary from one machine to another, but scripts
don't work.
d1049 1
a1049 2
=item I grabbed the sources and tried to compile but gdbm/dynamic
loading/malloc/linking/... failed.  How do I make it work?
d1051 1
a1051 2
=item What modules and extensions are available for Perl?  What is CPAN? 
What does CPAN/src/... mean?
d1053 1
a1053 1
=item Is there an ISO or ANSI certified version of Perl?
d1055 1
a1055 1
=item Where can I get information on Perl?
d1057 1
a1057 1
=item What are the Perl newsgroups on Usenet?  Where do I post questions?
d1059 1
a1059 1
=item Where should I post source code?
d1061 1
a1061 1
=item Perl Books
d1063 1
a1063 1
References, Tutorials, Task-Oriented, Special Topics
d1065 1
a1065 1
=item Perl in Magazines
d1067 1
a1067 1
=item Perl on the Net: FTP and WWW Access
d1069 1
a1069 1
=item What mailing lists are there for Perl?
d1071 1
a1071 1
=item Archives of comp.lang.perl.misc
d1073 1
a1073 1
=item Where can I buy a commercial version of Perl?
d1075 1
a1075 3
=item Where do I send bug reports?

=item What is perl.com? Perl Mongers? pm.org? perl.org? cpan.org?
d1079 1
a1079 6
=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq3 - Programming Tools ($Revision: 1.35 $, $Date: 2003/08/24
05:26:59 $)
d1085 2
d1089 1
a1089 1
=item How do I do (anything)?
d1091 1
a1091 1
=item How can I use Perl interactively?
d1093 1
a1093 1
=item Is there a Perl shell?
d1095 1
a1095 1
=item How do I find which modules are installed on my system?
d1097 1
a1097 1
=item How do I debug my Perl programs?
d1099 1
a1099 1
=item How do I profile my Perl programs?
d1101 1
a1101 1
=item How do I cross-reference my Perl programs?
d1103 1
a1103 1
=item Is there a pretty-printer (formatter) for Perl?
d1105 1
a1105 1
=item Is there a ctags for Perl?
d1107 1
a1107 1
=item Is there an IDE or Windows Perl Editor?
d1109 1
a1109 3
Komodo, The Object System, Open Perl IDE, PerlBuilder, visiPerl+, OptiPerl,
GNU Emacs, MicroEMACS, XEmacs, Jed, Elvis, Vile, Vim, Codewright,
MultiEdit, SlickEdit, Bash, Ksh, Tcsh, Zsh, BBEdit and BBEdit Lite, Alpha
d1111 1
a1111 1
=item Where can I get Perl macros for vi?
d1113 1
a1113 1
=item Where can I get perl-mode for emacs?
d1115 1
a1115 1
=item How can I use curses with Perl?
d1117 1
a1117 1
=item How can I use X or Tk with Perl?
d1119 1
a1119 1
=item How can I generate simple menus without using CGI or Tk?
d1121 1
a1121 1
=item How can I make my Perl program run faster?
d1123 1
a1123 1
=item How can I make my Perl program take less memory?
d1125 1
a1125 2
Don't slurp!, Use map and grep selectively, Avoid unnecessary quotes and
stringification, Pass by reference, Tie large variables to disk
d1127 1
a1127 1
=item Is it safe to return a reference to local or lexical data?
d1129 1
a1129 1
=item How can I free an array or hash so my program shrinks?
d1131 1
a1131 1
=item How can I make my CGI script more efficient?
d1133 1
a1133 1
=item How can I hide the source for my Perl program?
d1135 1
a1135 1
=item How can I compile my Perl program into byte code or C?
d1137 1
a1137 1
=item How can I compile Perl into Java?
d1139 1
a1139 1
=item How can I get C<#!perl> to work on [MS-DOS,NT,...]?
d1141 1
a1141 1
=item Can I write useful Perl programs on the command line?
d1143 1
a1143 14
=item Why don't Perl one-liners work on my DOS/Mac/VMS system?

=item Where can I learn about CGI or Web programming in Perl?

=item Where can I learn about object-oriented Perl programming?

=item Where can I learn about linking C with Perl? [h2xs, xsubpp]

=item I've read perlembed, perlguts, etc., but I can't embed perl in
my C program; what am I doing wrong?

=item When I tried to run my script, I got this message. What does it mean?

=item What's MakeMaker?
d1147 1
a1147 1
=item AUTHOR AND COPYRIGHT
d1149 1
a1149 1
=back
d1151 1
a1151 2
=head2 perlfaq4 - Data Manipulation ($Revision: 1.52 $, $Date: 2003/10/02
04:44:33 $)
d1153 1
a1153 1
=over 4
d1155 1
a1155 1
=item DESCRIPTION
d1157 1
a1157 1
=item Data: Numbers
d1161 1
a1161 2
=item Why am I getting long decimals (eg, 19.9499999999999) instead of the
numbers I should be getting (eg, 19.95)?
d1163 1
a1163 1
=item Why is int() broken?
d1165 1
a1165 1
=item Why isn't my octal data interpreted correctly?
d1167 1
a1167 2
=item Does Perl have a round() function?  What about ceil() and floor()? 
Trig functions?
d1169 1
a1169 1
=item How do I convert between numeric representations/bases/radixes?
d1171 1
a1171 4
How do I convert hexadecimal into decimal, How do I convert from decimal to
hexadecimal, How do I convert from octal to decimal, How do I convert from
decimal to octal, How do I convert from binary to decimal, How do I convert
from decimal to binary
d1173 1
a1173 1
=item Why doesn't & work the way I want it to?
d1175 1
a1175 1
=item How do I multiply matrices?
d1177 1
a1177 1
=item How do I perform an operation on a series of integers?
d1179 1
a1179 1
=item How can I output Roman numerals?
d1181 1
a1181 1
=item Why aren't my random numbers random?
d1183 1
a1183 1
=item How do I get a random number between X and Y?
d1187 1
a1187 1
=item Data: Dates
d1191 1
a1191 1
=item How do I find the day or week of the year?
d1193 1
a1193 11
=item How do I find the current century or millennium?

=item How can I compare two dates and find the difference?

=item How can I take a string and turn it into epoch seconds?

=item How can I find the Julian Day?

=item How do I find yesterday's date?

=item Does Perl have a Year 2000 problem?  Is Perl Y2K compliant?
d1197 1
a1197 1
=item Data: Strings
d1201 3
a1203 1
=item How do I validate input?
d1205 1
a1205 1
=item How do I unescape a string?
d1207 1
a1207 1
=item How do I remove consecutive pairs of characters?
d1209 1
a1209 1
=item How do I expand function calls in a string?
d1211 1
a1211 1
=item How do I find matching/nesting anything?
d1213 1
a1213 1
=item How do I reverse a string?
d1215 1
a1215 1
=item How do I expand tabs in a string?
d1217 1
a1217 1
=item How do I reformat a paragraph?
d1219 1
a1219 1
=item How can I access or change N characters of a string?
d1221 1
a1221 1
=item How do I change the Nth occurrence of something?
d1223 1
a1223 2
=item How can I count the number of occurrences of a substring within a
string?
d1225 1
a1225 1
=item How do I capitalize all the words on one line?
d1227 1
a1227 2
=item How can I split a [character] delimited string except when inside
[character]?
d1229 1
a1229 1
=item How do I strip blank space from the beginning/end of a string?
d1231 1
a1231 1
=item How do I pad a string with blanks or pad a number with zeroes?
d1233 1
a1233 1
=item How do I extract selected columns from a string?
d1235 1
a1235 1
=item How do I find the soundex value of a string?
d1237 1
a1237 1
=item How can I expand variables in text strings?
d1239 1
a1239 1
=item What's wrong with always quoting "$vars"?
d1241 1
a1241 1
=item Why don't my E<lt>E<lt>HERE documents work?
d1243 1
a1243 3
There must be no space after the E<lt>E<lt> part, There (probably) should
be a semicolon at the end, You can't (easily) have any space in front of
the tag
d1247 1
a1247 1
=item Data: Arrays
d1251 1
a1251 1
=item What is the difference between a list and an array?
d1253 1
a1253 1
=item What is the difference between $array[1] and @@array[1]?
d1255 1
a1255 1
=item How can I remove duplicate elements from a list or array?
d1257 1
a1257 1
a), b), c), d), e)
d1259 1
a1259 2
=item How can I tell whether a certain element is contained in a list or
array?
d1261 1
a1261 2
=item How do I compute the difference of two arrays?  How do I compute the
intersection of two arrays?
d1263 1
a1263 1
=item How do I test whether two arrays or hashes are equal?
d1265 1
a1265 1
=item How do I find the first array element for which a condition is true?
d1267 1
a1267 1
=item How do I handle linked lists?
d1269 1
a1269 1
=item How do I handle circular lists?
d1271 1
a1271 1
=item How do I shuffle an array randomly?
d1273 1
a1273 1
=item How do I process/modify each element of an array?
d1275 1
a1275 1
=item How do I select a random element from an array?
d1277 1
a1277 1
=item How do I permute N elements of a list?
d1279 1
a1279 1
=item How do I sort an array by (anything)?
d1281 1
a1281 3
=item How do I manipulate arrays of bits?

=item Why does defined() return true on empty arrays and hashes?
d1285 1
a1285 1
=item Data: Hashes (Associative Arrays)
d1289 1
a1289 1
=item How do I process an entire hash?
d1291 1
a1291 2
=item What happens if I add or remove keys from a hash while iterating over
it?
d1293 1
a1293 1
=item How do I look up a hash element by value?
d1295 1
a1295 1
=item How can I know how many entries are in a hash?
d1297 1
a1297 1
=item How do I sort a hash (optionally by value instead of key)?
d1299 1
a1299 1
=item How can I always keep my hash sorted?
d1301 4
a1304 1
=item What's the difference between "delete" and "undef" with hashes?
d1306 1
a1306 1
=item Why don't my tied hashes make the defined/exists distinction?
d1308 1
a1308 1
=item How do I reset an each() operation part-way through?
d1310 1
a1310 1
=item How can I get the unique keys from two hashes?
d1312 1
a1312 1
=item How can I store a multidimensional array in a DBM file?
d1314 1
a1314 1
=item How can I make my hash remember the order I put elements into it?
d1316 8
a1323 2
=item Why does passing a subroutine an undefined element in a hash create
it?
d1325 1
a1325 2
=item How can I make the Perl equivalent of a C structure/C++ class/hash or
array of hashes or arrays?
d1327 1
a1327 1
=item How can I use a reference as a hash key?
d1331 1
a1331 1
=item Data: Misc
d1335 5
a1339 1
=item How do I handle binary data correctly?
d1341 1
a1341 1
=item How do I determine whether a scalar is a number/whole/integer/float?
d1343 1
a1343 1
=item How do I keep persistent data across program calls?
d1345 1
a1345 1
=item How do I print out or copy a recursive data structure?
d1347 1
a1347 1
=item How do I define methods for every class/object?
d1349 1
a1349 1
=item How do I verify a credit card checksum?
d1351 1
a1351 1
=item How do I pack arrays of doubles or floats for XS code?
d1355 3
a1357 1
=item AUTHOR AND COPYRIGHT
d1361 1
a1361 2
=head2 perlfaq5 - Files and Formats ($Revision: 1.28 $, $Date: 2003/01/26
17:45:46 $)
d1369 1
a1369 1
=item How do I flush/unbuffer an output filehandle?  Why must I do this?
d1371 1
a1371 2
=item How do I change one line in a file/delete a line in a file/insert a
line in the middle of a file/append to the beginning of a file?
d1373 1
a1373 1
=item How do I count the number of lines in a file?
d1375 1
a1375 1
=item How can I use Perl's C<-i> option from within a program?
d1377 1
a1377 1
=item How do I make a temporary file name?
d1379 1
a1379 1
=item How can I manipulate fixed-record-length files?
d1381 1
a1381 2
=item How can I make a filehandle local to a subroutine?  How do I pass
filehandles between subroutines?  How do I make an array of filehandles?
d1383 1
a1383 1
=item How can I use a filehandle indirectly?
d1385 1
a1385 1
=item How can I set up a footer format to be used with write()?
d1387 1
a1387 1
=item How can I write() into a string?
d1389 1
a1389 1
=item How can I output my numbers with commas added?
d1391 1
a1391 1
=item How can I translate tildes (~) in a filename?
d1393 1
a1393 1
=item How come when I open a file read-write it wipes it out?
d1395 1
a1395 2
=item Why do I sometimes get an "Argument list too long" when I use
E<lt>*E<gt>?
d1397 1
a1397 1
=item Is there a leak/bug in glob()?
d1399 1
a1399 1
=item How can I open a file with a leading ">" or trailing blanks?
d1401 1
a1401 1
=item How can I reliably rename a file?
d1403 1
a1403 1
=item How can I lock a file?
d1405 1
a1405 1
=item Why can't I just open(FH, "E<gt>file.lock")?
d1407 1
a1407 2
=item I still don't get locking.  I just want to increment the number in
the file.  How can I do this?
d1409 1
a1409 2
=item All I want to do is append a small amount of text to the end of a
file.  Do I still have to use locking?
d1411 1
a1411 1
=item How do I randomly update a binary file?
d1413 1
a1413 1
=item How do I get a file's timestamp in perl?
d1415 1
a1415 1
=item How do I set a file's timestamp in perl?
d1417 1
a1417 1
=item How do I print to more than one file at once?
d1419 1
a1419 1
=item How can I read in an entire file all at once?
d1421 1
a1421 1
=item How can I read in a file by paragraphs?
d1423 1
a1423 1
=item How can I read a single character from a file?  From the keyboard?
d1425 1
a1425 1
=item How can I tell whether there's a character waiting on a filehandle?
d1427 1
a1427 1
=item How do I do a C<tail -f> in perl?
d1429 1
a1429 1
=item How do I dup() a filehandle in Perl?
d1431 1
a1431 1
=item How do I close a file descriptor by number?
d1433 1
a1433 2
=item Why can't I use "C:\temp\foo" in DOS paths?  Why doesn't
`C:\temp\foo.exe` work?
d1435 1
a1435 1
=item Why doesn't glob("*.*") get all the files?
d1437 1
a1437 2
=item Why does Perl let me delete read-only files?  Why does C<-i> clobber
protected files?  Isn't this a bug in Perl?
d1439 1
a1439 1
=item How do I select a random line from a file?
d1441 1
a1441 1
=item Why do I get weird spaces when I print an array of lines?
d1445 1
a1445 6
=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq6 - Regular Expressions ($Revision: 1.20 $, $Date: 2003/01/03
20:05:28 $)
d1451 2
d1455 3
a1457 2
=item How can I hope to use regular expressions without creating illegible
and unmaintainable code?
d1459 1
a1459 1
Comments Outside the Regex, Comments Inside the Regex, Different Delimiters
d1461 1
a1461 1
=item I'm having trouble matching over more than one line.  What's wrong?
d1463 1
a1463 2
=item How can I pull out lines between two patterns that are themselves on
different lines?
d1465 1
a1465 1
=item I put a regular expression into $/ but it didn't work. What's wrong?
d1467 1
a1467 2
=item How do I substitute case insensitively on the LHS while preserving
case on the RHS?
d1469 1
a1469 1
=item How can I make C<\w> match national character sets?
d1471 1
a1471 1
=item How can I match a locale-smart version of C</[a-zA-Z]/>?
d1473 1
a1473 1
=item How can I quote a variable to use in a regex?
d1475 1
a1475 1
=item What is C</o> really for?
d1477 1
a1477 2
=item How do I use a regular expression to strip C style comments from a
file?
d1479 1
a1479 1
=item Can I use Perl regular expressions to match balanced text?
d1481 1
a1481 1
=item What does it mean that regexes are greedy?  How can I get around it?
d1483 1
a1483 1
=item How do I process each word on each line?
d1485 1
a1485 1
=item How can I print out a word-frequency or line-frequency summary?
d1487 1
a1487 1
=item How can I do approximate matching?
d1489 1
a1489 1
=item How do I efficiently match many regular expressions at once?
d1491 1
a1491 1
=item Why don't word-boundary searches with C<\b> work for me?
d1493 1
a1493 1
=item Why does using $&, $`, or $' slow my program down?
d1495 1
a1495 1
=item What good is C<\G> in a regular expression?
d1497 1
a1497 1
=item Are Perl regexes DFAs or NFAs?  Are they POSIX compliant?
d1499 1
a1499 1
=item What's wrong with using grep in a void context?
d1501 1
a1501 1
=item How can I match strings with multibyte characters?
d1503 1
a1503 1
=item How do I match a pattern that is supplied by the user?
d1507 7
a1513 1
=item AUTHOR AND COPYRIGHT
d1517 1
a1517 2
=head2 perlfaq7 - General Perl Language Issues ($Revision: 1.15 $, $Date:
2003/07/24 02:17:21 $)
d1521 1
a1521 1
=item DESCRIPTION
d1523 1
a1523 1
=over 4
d1525 1
a1525 1
=item Can I get a BNF/yacc/RE for the Perl language?
d1527 1
a1527 2
=item What are all these $@@%&* punctuation signs, and how do I know when to
use them?
d1529 1
a1529 2
=item Do I always/never have to quote my strings or use semicolons and
commas?
d1531 1
a1531 1
=item How do I skip some return values?
d1533 1
a1533 1
=item How do I temporarily block warnings?
d1535 1
a1535 1
=item What's an extension?
d1537 1
a1537 1
=item Why do Perl operators have different precedence than C operators?
d1539 1
a1539 1
=item How do I declare/create a structure?
d1541 1
a1541 1
=item How do I create a module?
d1543 1
a1543 1
=item How do I create a class?
d1545 1
a1545 1
=item How can I tell if a variable is tainted?
d1547 1
a1547 1
=item What's a closure?
d1549 1
a1549 1
=item What is variable suicide and how can I prevent it?
d1551 1
a1551 2
=item How can I pass/return a {Function, FileHandle, Array, Hash, Method,
Regex}?
d1553 1
a1553 2
Passing Variables and Functions, Passing Filehandles, Passing Regexes,
Passing Methods
d1555 1
a1555 1
=item How do I create a static variable?
d1557 1
a1557 2
=item What's the difference between dynamic and lexical (static) scoping? 
Between local() and my()?
d1559 1
a1559 2
=item How can I access a dynamic variable while a similarly named lexical
is in scope?
d1561 1
a1561 1
=item What's the difference between deep and shallow binding?
d1563 1
a1563 1
=item Why doesn't "my($foo) = E<lt>FILEE<gt>;" work right?
d1565 1
a1565 1
=item How do I redefine a builtin function, operator, or method?
d1567 1
a1567 1
=item What's the difference between calling a function as &foo and foo()?
d1569 1
a1569 1
=item How do I create a switch or case statement?
d1571 1
a1571 2
=item How can I catch accesses to undefined variables, functions, or
methods?
d1573 1
a1573 1
=item Why can't a method included in this same file be found?
d1575 1
a1575 1
=item How can I find out my current package?
d1577 1
a1577 1
=item How can I comment out a large block of perl code?
d1579 1
a1579 1
=item How do I clear a package?
d1581 1
a1581 1
=item How can I use a variable as a variable name?
d1583 1
a1583 1
=item What does "bad interpreter" mean?
d1585 1
a1585 1
=back
d1587 1
a1587 1
=item AUTHOR AND COPYRIGHT
d1591 1
a1591 2
=head2 perlfaq8 - System Interaction ($Revision: 1.17 $, $Date: 2003/01/26
17:44:04 $)
d1593 1
a1593 1
=over 4
d1595 1
a1595 1
=item DESCRIPTION
d1597 1
a1597 1
=over 4
d1599 1
a1599 1
=item How do I find out which operating system I'm running under?
d1601 1
a1601 1
=item How come exec() doesn't return?
d1603 1
a1603 1
=item How do I do fancy stuff with the keyboard/screen/mouse?
d1605 1
a1605 1
Keyboard, Screen, Mouse
d1607 1
a1607 1
=item How do I print something out in color?
d1609 1
a1609 1
=item How do I read just one key without waiting for a return key?
d1611 1
a1611 1
=item How do I check whether input is ready on the keyboard?
d1613 1
a1613 1
=item How do I clear the screen?
d1615 1
a1615 1
=item How do I get the screen size?
d1617 1
a1617 1
=item How do I ask the user for a password?
d1619 1
a1619 1
=item How do I read and write the serial port?
d1621 1
a1621 1
lockfiles, open mode, end of line, flushing output, non-blocking input
d1623 1
a1623 1
=item How do I decode encrypted password files?
d1625 1
a1625 1
=item How do I start a process in the background?
d1627 1
a1627 1
STDIN, STDOUT, and STDERR are shared, Signals, Zombies
d1629 1
a1629 1
=item How do I trap control characters/signals?
d1631 1
a1631 1
=item How do I modify the shadow password file on a Unix system?
d1633 1
a1633 1
=item How do I set the time and date?
d1635 1
a1635 1
=item How can I sleep() or alarm() for under a second?
d1637 1
a1637 1
=item How can I measure time under a second?
d1639 1
a1639 1
=item How can I do an atexit() or setjmp()/longjmp()? (Exception handling)
d1641 1
a1641 2
=item Why doesn't my sockets program work under System V (Solaris)?  What
does the error message "Protocol not supported" mean?
d1643 1
a1643 1
=item How can I call my system's unique C functions from Perl?
d1645 1
a1645 1
=item Where do I get the include files to do ioctl() or syscall()?
d1647 1
a1647 1
=item Why do setuid perl scripts complain about kernel problems?
d1649 1
a1649 1
=item How can I open a pipe both to and from a command?
d1651 1
a1651 1
=item Why can't I get the output of a command with system()?
d1653 1
a1653 1
=item How can I capture STDERR from an external command?
d1655 1
a1655 1
=item Why doesn't open() return an error when a pipe open fails?
d1657 1
a1657 1
=item What's wrong with using backticks in a void context?
d1659 1
a1659 1
=item How can I call backticks without shell processing?
d1661 1
a1661 2
=item Why can't my script read from STDIN after I gave it EOF (^D on Unix,
^Z on MS-DOS)?
d1663 1
a1663 1
=item How can I convert my shell script to perl?
d1665 1
a1665 1
=item Can I use perl to run a telnet or ftp session?
d1667 1
a1667 1
=item How can I write expect in Perl?
d1669 1
a1669 2
=item Is there a way to hide perl's command line from programs such as
"ps"?
d1671 1
a1671 3
=item I {changed directory, modified my environment} in a perl script.	How
come the change disappeared when I exited the script?  How do I get my
changes to be visible?
d1673 1
a1673 1
Unix
d1675 1
a1675 2
=item How do I close a process's filehandle without waiting for it to
complete?
d1677 1
a1677 1
=item How do I fork a daemon process?
d1679 2
a1680 1
=item How do I find out if I'm running interactively or not?
d1682 1
a1682 1
=item How do I timeout a slow event?
d1684 5
a1688 1
=item How do I set CPU limits?
d1690 1
a1690 1
=item How do I avoid zombies on a Unix system?
d1692 3
a1694 1
=item How do I use an SQL database?
d1696 1
a1696 1
=item How do I make a system() exit on control-C?
d1698 3
a1700 1
=item How do I open a file without blocking?
d1702 1
a1702 1
=item How do I install a module from CPAN?
d1704 1
a1704 1
=item What's the difference between require and use?
d1706 1
a1706 1
=item How do I keep my own module/library directory?
d1708 1
a1708 2
=item How do I add the directory my program lives in to the module/library
search path?
d1710 1
a1710 1
=item How do I add a directory to my include path (@@INC) at runtime?
d1712 1
a1712 1
=item What is socket.ph and where do I get it?
d1716 2
a1717 6
=item AUTHOR AND COPYRIGHT

=back

=head2 perlfaq9 - Networking ($Revision: 1.15 $, $Date: 2003/01/31 17:36:57
$)
d1723 2
d1727 1
a1727 1
=item What is the correct form of response from a CGI script?
d1729 1
a1729 2
=item My CGI script runs from the command line but not the browser.  (500
Server Error)
d1731 1
a1731 1
=item How can I get better error messages from a CGI program?
d1733 1
a1733 1
=item How do I remove HTML from a string?
d1735 1
a1735 1
=item How do I extract URLs?
d1737 2
a1738 2
=item How do I download a file from the user's machine?  How do I open a
file on another machine?
d1740 1
a1740 1
=item How do I make a pop-up menu in HTML?
d1742 1
a1742 1
=item How do I fetch an HTML file?
d1744 1
a1744 1
=item How do I automate an HTML form submission?
d1746 1
a1746 1
=item How do I decode or create those %-encodings on the web?
d1748 1
a1748 1
=item How do I redirect to another page?
d1750 1
a1750 1
=item How do I put a password on my web pages?
d1752 1
a1752 1
=item How do I edit my .htpasswd and .htgroup files with Perl?
d1754 1
a1754 2
=item How do I make sure users can't enter values into a form that cause my
CGI script to do bad things?
d1756 1
a1756 1
=item How do I parse a mail header?
d1758 1
a1758 1
=item How do I decode a CGI form?
d1760 1
a1760 1
=item How do I check a valid mail address?
d1762 1
a1762 1
=item How do I decode a MIME/BASE64 string?
d1764 1
a1764 1
=item How do I return the user's mail address?
d1766 1
a1766 1
=item How do I send mail?
d1768 1
a1768 11
=item How do I use MIME to make an attachment to a mail message?

=item How do I read mail?

=item How do I find out my hostname/domainname/IP address?

=item How do I fetch a news article or the active newsgroups?

=item How do I fetch/put an FTP file?

=item How can I do RPC in Perl?
d1772 1
a1772 5
=item AUTHOR AND COPYRIGHT

=back

=head2 perlsyn - Perl syntax
d1776 1
a1776 1
=item DESCRIPTION
d1778 1
a1778 1
=over 4
d1780 1
a1780 1
=item Declarations
d1782 1
a1782 1
=item Comments
d1784 1
a1784 1
=item Simple Statements
d1786 1
a1786 1
=item Truth and Falsehood
d1788 1
a1788 1
=item Statement Modifiers
d1790 1
a1790 1
=item Compound Statements
d1792 1
a1792 1
=item Loop Control
d1794 1
a1794 1
=item For Loops
d1796 1
a1796 1
=item Foreach Loops
d1798 1
a1798 1
=item Basic BLOCKs and Switch Statements
d1800 1
a1800 5
=item Goto

=item PODs: Embedded Documentation

=item Plain Old Comments (Not!)
d1804 1
a1804 1
=back
d1806 1
a1806 1
=head2 perldata - Perl data types
d1808 1
a1808 1
=over 4
d1814 5
a1818 1
=item Variable names
d1820 1
a1820 1
=item Context
d1822 1
a1822 1
=item Scalar values
d1824 1
a1824 1
=item Scalar value constructors
d1826 1
a1826 1
=item List value constructors
d1828 3
a1830 1
=item Subscripts
d1832 1
a1832 1
=item Slices
d1834 1
a1834 1
=item Typeglobs and Filehandles
d1836 1
a1836 1
=back
d1842 1
a1842 1
=head2 perlop - Perl operators and precedence
d1846 2
d1850 1
a1850 1
=over 4
d1852 1
a1852 1
=item Operator Precedence and Associativity
d1854 1
a1854 1
=item Terms and List Operators (Leftward)
d1856 4
a1859 1
=item The Arrow Operator
d1861 1
a1861 1
=item Auto-increment and Auto-decrement
d1863 1
a1863 74
=item Exponentiation

=item Symbolic Unary Operators

=item Binding Operators

=item Multiplicative Operators

=item Additive Operators

=item Shift Operators

=item Named Unary Operators

=item Relational Operators

=item Equality Operators

=item Bitwise And

=item Bitwise Or and Exclusive Or

=item C-style Logical And

=item C-style Logical Or

=item Range Operators

=item Conditional Operator

=item Assignment Operators

=item Comma Operator

=item List Operators (Rightward)

=item Logical Not

=item Logical And

=item Logical or and Exclusive Or

=item C Operators Missing From Perl

unary &, unary *, (TYPE)

=item Quote and Quote-like Operators

=item Regexp Quote-Like Operators

?PATTERN?, m/PATTERN/cgimosx, /PATTERN/cgimosx, q/STRING/, C<'STRING'>,
qq/STRING/, "STRING", qr/STRING/imosx, qx/STRING/, `STRING`, qw/STRING/,
s/PATTERN/REPLACEMENT/egimosx, tr/SEARCHLIST/REPLACEMENTLIST/cds,
y/SEARCHLIST/REPLACEMENTLIST/cds, <<EOF

=item Gory details of parsing quoted constructs

Finding the end, Removal of backslashes before delimiters, Interpolation,
C<<<'EOF'>, C<m''>, C<s'''>, C<tr///>, C<y///>, C<''>, C<q//>, C<"">,
C<``>, C<qq//>, C<qx//>, C<< <file*glob> >>, C<?RE?>, C</RE/>, C<m/RE/>,
C<s/RE/foo/>,, Interpolation of regular expressions, Optimization of
regular expressions

=item I/O Operators

=item Constant Folding

=item Bitwise String Operators

=item Integer Arithmetic

=item Floating-point Arithmetic

=item Bigger Numbers
d1867 1
a1867 3
=back

=head2 perlsub - Perl subroutines
a1870 2
=item SYNOPSIS

d1873 1
a1873 1
=over 4
d1875 1
a1875 1
=item Private Variables via my()
d1877 1
a1877 31
=item Persistent Private Variables

=item Temporary Values via local()

=item Lvalue subroutines

Lvalue subroutines are EXPERIMENTAL

=item Passing Symbol Table Entries (typeglobs)

=item When to Still Use local()

=item Pass by Reference

=item Prototypes

=item Constant Functions

=item Overriding Built-in Functions

=item Autoloading

=item Subroutine Attributes

=back

=item SEE ALSO

=back

=head2 perlfunc - Perl builtin functions
d1881 1
a1881 1
=item DESCRIPTION
d1883 1
a1883 1
=over 4
d1885 1
a1885 94
=item Perl Functions by Category

Functions for SCALARs or strings, Regular expressions and pattern matching,
Numeric functions, Functions for real @@ARRAYs, Functions for list data,
Functions for real %HASHes, Input and output functions, Functions for fixed
length data or records, Functions for filehandles, files, or directories,
Keywords related to the control flow of your perl program, Keywords related
to scoping, Miscellaneous functions, Functions for processes and process
groups, Keywords related to perl modules, Keywords related to classes and
object-orientedness, Low-level socket functions, System V interprocess
communication functions, Fetching user and group info, Fetching network
info, Time-related functions, Functions new in perl5, Functions obsoleted
in perl5

=item Portability

=item Alphabetical Listing of Perl Functions

-I<X> FILEHANDLE, -I<X> EXPR, -I<X>, abs VALUE, abs, accept
NEWSOCKET,GENERICSOCKET, alarm SECONDS, alarm, atan2 Y,X, bind SOCKET,NAME,
binmode FILEHANDLE, LAYER, binmode FILEHANDLE, bless REF,CLASSNAME, bless
REF, caller EXPR, caller, chdir EXPR, chmod LIST, chomp VARIABLE, chomp(
LIST ), chomp, chop VARIABLE, chop( LIST ), chop, chown LIST, chr NUMBER,
chr, chroot FILENAME, chroot, close FILEHANDLE, close, closedir DIRHANDLE,
connect SOCKET,NAME, continue BLOCK, cos EXPR, cos, crypt PLAINTEXT,SALT,
dbmclose HASH, dbmopen HASH,DBNAME,MASK, defined EXPR, defined, delete
EXPR, die LIST, do BLOCK, do SUBROUTINE(LIST), do EXPR, dump LABEL, dump,
each HASH, eof FILEHANDLE, eof (), eof, eval EXPR, eval BLOCK, exec LIST,
exec PROGRAM LIST, exists EXPR, exit EXPR, exp EXPR, exp, fcntl
FILEHANDLE,FUNCTION,SCALAR, fileno FILEHANDLE, flock FILEHANDLE,OPERATION,
fork, format, formline PICTURE,LIST, getc FILEHANDLE, getc, getlogin,
getpeername SOCKET, getpgrp PID, getppid, getpriority WHICH,WHO, getpwnam
NAME, getgrnam NAME, gethostbyname NAME, getnetbyname NAME, getprotobyname
NAME, getpwuid UID, getgrgid GID, getservbyname NAME,PROTO, gethostbyaddr
ADDR,ADDRTYPE, getnetbyaddr ADDR,ADDRTYPE, getprotobynumber NUMBER,
getservbyport PORT,PROTO, getpwent, getgrent, gethostent, getnetent,
getprotoent, getservent, setpwent, setgrent, sethostent STAYOPEN, setnetent
STAYOPEN, setprotoent STAYOPEN, setservent STAYOPEN, endpwent, endgrent,
endhostent, endnetent, endprotoent, endservent, getsockname SOCKET,
getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob, gmtime EXPR, goto LABEL,
goto EXPR, goto &NAME, grep BLOCK LIST, grep EXPR,LIST, hex EXPR, hex,
import, index STR,SUBSTR,POSITION, index STR,SUBSTR, int EXPR, int, ioctl
FILEHANDLE,FUNCTION,SCALAR, join EXPR,LIST, keys HASH, kill SIGNAL, LIST,
last LABEL, last, lc EXPR, lc, lcfirst EXPR, lcfirst, length EXPR, length,
link OLDFILE,NEWFILE, listen SOCKET,QUEUESIZE, local EXPR, localtime EXPR,
lock THING, log EXPR, log, lstat EXPR, lstat, m//, map BLOCK LIST, map
EXPR,LIST, mkdir FILENAME,MASK, mkdir FILENAME, msgctl ID,CMD,ARG, msgget
KEY,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, msgsnd ID,MSG,FLAGS, my EXPR, my
TYPE EXPR, my EXPR : ATTRS, my TYPE EXPR : ATTRS, next LABEL, next, no
Module VERSION LIST, no Module VERSION, no Module LIST, no Module, oct
EXPR, oct, open FILEHANDLE,EXPR, open FILEHANDLE,MODE,EXPR, open
FILEHANDLE,MODE,EXPR,LIST, open FILEHANDLE,MODE,REFERENCE, open FILEHANDLE,
opendir DIRHANDLE,EXPR, ord EXPR, ord, our EXPR, our EXPR TYPE, our EXPR :
ATTRS, our TYPE EXPR : ATTRS, pack TEMPLATE,LIST, package NAMESPACE,
package, pipe READHANDLE,WRITEHANDLE, pop ARRAY, pop, pos SCALAR, pos,
print FILEHANDLE LIST, print LIST, print, printf FILEHANDLE FORMAT, LIST,
printf FORMAT, LIST, prototype FUNCTION, push ARRAY,LIST, q/STRING/,
qq/STRING/, qr/STRING/, qx/STRING/, qw/STRING/, quotemeta EXPR, quotemeta,
rand EXPR, rand, read FILEHANDLE,SCALAR,LENGTH,OFFSET, read
FILEHANDLE,SCALAR,LENGTH, readdir DIRHANDLE, readline EXPR, readlink EXPR,
readlink, readpipe EXPR, recv SOCKET,SCALAR,LENGTH,FLAGS, redo LABEL, redo,
ref EXPR, ref, rename OLDNAME,NEWNAME, require VERSION, require EXPR,
require, reset EXPR, reset, return EXPR, return, reverse LIST, rewinddir
DIRHANDLE, rindex STR,SUBSTR,POSITION, rindex STR,SUBSTR, rmdir FILENAME,
rmdir, s///, scalar EXPR, seek FILEHANDLE,POSITION,WHENCE, seekdir
DIRHANDLE,POS, select FILEHANDLE, select, select RBITS,WBITS,EBITS,TIMEOUT,
semctl ID,SEMNUM,CMD,ARG, semget KEY,NSEMS,FLAGS, semop KEY,OPSTRING, send
SOCKET,MSG,FLAGS,TO, send SOCKET,MSG,FLAGS, setpgrp PID,PGRP, setpriority
WHICH,WHO,PRIORITY, setsockopt SOCKET,LEVEL,OPTNAME,OPTVAL, shift ARRAY,
shift, shmctl ID,CMD,ARG, shmget KEY,SIZE,FLAGS, shmread ID,VAR,POS,SIZE,
shmwrite ID,STRING,POS,SIZE, shutdown SOCKET,HOW, sin EXPR, sin, sleep
EXPR, sleep, socket SOCKET,DOMAIN,TYPE,PROTOCOL, socketpair
SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, sort SUBNAME LIST, sort BLOCK LIST,
sort LIST, splice ARRAY,OFFSET,LENGTH,LIST, splice ARRAY,OFFSET,LENGTH,
splice ARRAY,OFFSET, splice ARRAY, split /PATTERN/,EXPR,LIMIT, split
/PATTERN/,EXPR, split /PATTERN/, split, sprintf FORMAT, LIST, format
parameter index, flags, vector flag, (minimum) width, precision, or maximum
width, size, order of arguments, sqrt EXPR, sqrt, srand EXPR, srand, stat
FILEHANDLE, stat EXPR, stat, study SCALAR, study, sub NAME BLOCK, sub NAME
(PROTO) BLOCK, sub NAME : ATTRS BLOCK, sub NAME (PROTO) : ATTRS BLOCK,
substr EXPR,OFFSET,LENGTH,REPLACEMENT, substr EXPR,OFFSET,LENGTH, substr
EXPR,OFFSET, symlink OLDFILE,NEWFILE, syscall NUMBER, LIST, sysopen
FILEHANDLE,FILENAME,MODE, sysopen FILEHANDLE,FILENAME,MODE,PERMS, sysread
FILEHANDLE,SCALAR,LENGTH,OFFSET, sysread FILEHANDLE,SCALAR,LENGTH, sysseek
FILEHANDLE,POSITION,WHENCE, system LIST, system PROGRAM LIST, syswrite
FILEHANDLE,SCALAR,LENGTH,OFFSET, syswrite FILEHANDLE,SCALAR,LENGTH,
syswrite FILEHANDLE,SCALAR, tell FILEHANDLE, tell, telldir DIRHANDLE, tie
VARIABLE,CLASSNAME,LIST, tied VARIABLE, time, times, tr///, truncate
FILEHANDLE,LENGTH, truncate EXPR,LENGTH, uc EXPR, uc, ucfirst EXPR,
ucfirst, umask EXPR, umask, undef EXPR, undef, unlink LIST, unlink, unpack
TEMPLATE,EXPR, untie VARIABLE, unshift ARRAY,LIST, use Module VERSION LIST,
use Module VERSION, use Module LIST, use Module, use VERSION, utime LIST,
values HASH, vec EXPR,OFFSET,BITS, wait, waitpid PID,FLAGS, wantarray, warn
LIST, write FILEHANDLE, write EXPR, write, y///
d1889 1
a1889 1
=back
d1891 1
a1891 1
=head2 perlopentut - tutorial on opening things in Perl
d1893 1
a1893 1
=over 4
d1895 1
a1895 3
=item DESCRIPTION

=item Open E<agrave> la shell
d1899 1
a1899 1
=item Simple Opens
d1901 1
a1901 1
=item Indirect Filehandles
d1903 1
a1903 1
=item Pipe Opens
d1905 1
a1905 1
=item The Minus File
d1907 1
a1907 1
=item Mixing Reads and Writes
d1909 1
a1909 1
=item Filters 
d1913 1
a1913 1
=item Open E<agrave> la C
d1917 1
a1917 1
=item Permissions E<agrave> la mode
d1919 1
a1919 15
=back

=item Obscure Open Tricks

=over 4

=item Re-Opening Files (dups)

=item Dispelling the Dweomer

=item Paths as Opens

=item Single Argument Open

=item Playing with STDIN and STDOUT
d1923 1
a1923 1
=item Other I/O Issues
d1927 1
a1927 7
=item Opening Non-File Files

=item Opening Named Pipes

=item Opening Sockets

=item Binary Files
d1929 1
a1929 1
=item File Locking
d1931 1
a1931 1
=item IO Layers
d1933 1
a1933 1
=back
d1935 1
a1935 1
=item SEE ALSO 
d1937 1
a1937 1
=item AUTHOR and COPYRIGHT
d1939 1
a1939 1
=item HISTORY
d1943 1
a1943 1
=head2 perlpacktut - tutorial on C<pack> and C<unpack>
d1947 1
a1947 1
=item DESCRIPTION
d1949 1
a1949 1
=item The Basic Principle
d1951 1
a1951 1
=item Packing Text
d1953 1
a1953 1
=item Packing Numbers
d1955 1
a1955 1
=over 4
d1957 1
a1957 1
=item Integers
d1959 1
a1959 1
=item Unpacking a Stack Frame
d1961 1
a1961 1
=item How to Eat an Egg on a Net
d1963 1
a1963 1
=item Floating point Numbers
d1965 1
a1965 1
=back
d1967 1
a1967 1
=item Exotic Templates
d1971 5
a1975 1
=item Bit Strings
d1977 1
a1977 1
=item Uuencoding
d1979 1
a1979 1
=item Doing Sums
d1981 1
a1981 1
=item  Unicode
d1983 1
a1983 1
=item Another Portable Binary Encoding
d1987 1
a1987 3
=item Template Grouping

=item Lengths and Widths
d1991 1
a1991 1
=item String Lengths
d1993 1
a1993 1
=item Dynamic Templates
d1995 1
a1995 5
=item Counting Repetitions

=back

=item Packing and Unpacking C Structures
d1999 1
a1999 1
=item The Alignment Pit
d2001 1
a2001 1
=item Alignment, Take 2
d2003 1
a2003 3
=item Alignment, Take 3

=item Pointers for How to Use Them
d2007 1
a2007 1
=item Pack Recipes
d2009 1
a2009 1
=item Funnies Section
d2011 1
a2011 1
=item Authors
d2013 1
a2013 3
=back

=head2 perlpod - the Plain Old Documentation format
d2017 1
a2017 1
=item DESCRIPTION
d2019 1
a2019 1
=over 4
d2021 1
a2021 1
=item Ordinary Paragraph
d2023 1
a2023 1
=item Verbatim Paragraph
d2025 1
a2025 1
=item Command Paragraph
d2027 1
a2027 5
C<=head1 I<Heading Text>>, C<=head2 I<Heading Text>>, C<=head3 I<Heading
Text>>, C<=head4 I<Heading Text>>, C<=over I<indentlevel>>, C<=item
I<stuff...>>, C<=back>, C<=cut>, C<=pod>, C<=begin I<formatname>>, C<=end
I<formatname>>, C<=for I<formatname> I<text...>>, C<=encoding
I<encodingname>>
d2029 1
a2029 1
=item Formatting Codes
d2031 1
a2031 6
C<IE<lt>textE<gt>> -- italic text, C<BE<lt>textE<gt>> -- bold text,
C<CE<lt>codeE<gt>> -- code text, C<LE<lt>nameE<gt>> -- a hyperlink,
C<EE<lt>escapeE<gt>> -- a character escape, C<FE<lt>filenameE<gt>> -- used
for filenames, C<SE<lt>textE<gt>> -- text contains non-breaking spaces,
C<XE<lt>topic nameE<gt>> -- an index entry, C<ZE<lt>E<gt>> -- a null
(zero-effect) formatting code
d2033 1
a2033 1
=item The Intent
d2035 1
a2035 1
=item Embedding Pods in Perl Modules
d2037 1
a2037 1
=item Hints for Writing Pod
d2039 1
a2039 1
=back
d2041 1
a2041 1
=item SEE ALSO
d2043 1
a2043 1
=item AUTHOR
d2047 1
a2047 2
=head2 perlpodspec - Plain Old Documentation: format specification and
notes
d2051 1
a2051 1
=item DESCRIPTION
d2053 1
a2053 1
=item Pod Definitions
d2055 1
a2055 1
=item Pod Commands
d2057 1
a2057 3
"=head1", "=head2", "=head3", "=head4", "=pod", "=cut", "=over", "=item",
"=back", "=begin formatname", "=end formatname", "=for formatname text...",
"=encoding encodingname"
d2059 1
a2059 1
=item Pod Formatting Codes
d2061 1
a2061 6
C<IE<lt>textE<gt>> -- italic text, C<BE<lt>textE<gt>> -- bold text,
C<CE<lt>codeE<gt>> -- code text, C<FE<lt>filenameE<gt>> -- style for
filenames, C<XE<lt>topic nameE<gt>> -- an index entry, C<ZE<lt>E<gt>> -- a
null (zero-effect) formatting code, C<LE<lt>nameE<gt>> -- a hyperlink,
C<EE<lt>escapeE<gt>> -- a character escape, C<SE<lt>textE<gt>> -- text
contains non-breaking spaces
d2063 1
a2063 1
=item Notes on Implementing Pod Processors
d2065 1
a2065 1
=item About LE<lt>...E<gt> Codes
d2067 1
a2067 1
First:, Second:, Third:, Fourth:, Fifth:, Sixth:
d2069 1
a2069 1
=item About =over...=back Regions
d2071 1
a2071 1
=item About Data Paragraphs and "=begin/=end" Regions
d2073 1
a2073 1
=item SEE ALSO
d2075 1
a2075 1
=item AUTHOR
d2079 1
a2079 1
=head2 perlrun - how to execute the Perl interpreter
d2081 1
a2081 1
=over 4
d2083 1
a2083 3
=item SYNOPSIS

=item DESCRIPTION
d2087 1
a2087 1
=item #! and quoting on non-Unix systems
d2089 1
a2089 1
OS/2, MS-DOS, Win95/NT, Macintosh, VMS
d2091 1
a2091 1
=item Location of Perl
d2093 1
a2093 1
=item Command Switches
d2095 1
a2095 8
B<-0>[I<octal/hexadecimal>], B<-a>, B<-C [I<number/list>]>, B<-c>, B<-d>,
B<-d:>I<foo[=bar,baz]>, B<-D>I<letters>, B<-D>I<number>, B<-e>
I<commandline>, B<-F>I<pattern>, B<-h>, B<-i>[I<extension>],
B<-I>I<directory>, B<-l>[I<octnum>], B<-m>[B<->]I<module>,
B<-M>[B<->]I<module>, B<-M>[B<->]I<'module ...'>,
B<-[mM]>[B<->]I<module=arg[,arg]...>, B<-n>, B<-p>, B<-P>, B<-s>, B<-S>,
B<-t>, B<-T>, B<-u>, B<-U>, B<-v>, B<-V>, B<-V:>I<name>, B<-w>, B<-W>,
B<-X>, B<-x> I<directory>
d2097 1
a2097 1
=back
d2099 1
a2099 8
=item ENVIRONMENT

HOME, LOGDIR, PATH, PERL5LIB, PERL5OPT, PERLIO, :bytes, :crlf, :mmap,
:perlio, :pop, :raw, :stdio, :unix, :utf8, :win32, PERLIO_DEBUG, PERLLIB,
PERL5DB, PERL5SHELL (specific to the Win32 port), PERL_DEBUG_MSTATS,
PERL_DESTRUCT_LEVEL, PERL_ENCODING, PERL_HASH_SEED, PERL_HASH_SEED_DEBUG,
PERL_ROOT (specific to the VMS port), PERL_SIGNALS, PERL_UNICODE, SYS$LOGIN
(specific to the VMS port)
d2103 1
a2103 1
=head2 perldiag - various Perl diagnostics
d2109 2
a2110 1
=back
d2112 1
a2112 1
=head2 perllexwarn - Perl Lexical Warnings
d2116 1
a2116 1
=item DESCRIPTION
d2118 1
a2118 1
=over 4
d2120 1
a2120 1
=item Default Warnings and Optional Warnings
d2122 1
a2122 1
=item What's wrong with B<-w> and C<$^W>
d2124 1
a2124 1
=item Controlling Warnings from the Command Line
d2126 1
a2126 1
B<-w>, B<-W>, B<-X>
d2128 1
a2128 1
=item Backward Compatibility
d2130 1
a2130 1
=item Category Hierarchy
d2132 1
a2132 1
=item Fatal Warnings
d2134 1
a2134 1
=item Reporting Warnings from a Module
d2136 1
a2136 1
=back
d2138 1
a2138 1
=item TODO
d2140 1
a2140 1
=item SEE ALSO
d2142 1
a2142 1
=item AUTHOR
d2146 6
a2151 1
=head2 perldebug - Perl debugging
d2155 1
a2155 1
=item DESCRIPTION
d2157 1
a2157 1
=item The Perl Debugger
d2159 1
a2159 1
=over 4
d2161 1
a2161 1
=item Debugger Commands
d2163 1
a2163 11
h, h [command], h h, p expr, x [maxdepth] expr, V [pkg [vars]], X [vars], y
[level [vars]], T, s [expr], n [expr], r, <CR>, c [line|sub], l, l
min+incr, l min-max, l line, l subname, -, v [line], f filename, /pattern/,
?pattern?, L [abw], S [[!]regex], t, t expr, b, b [line] [condition], b
subname [condition], b postpone subname [condition], b load filename, b
compile subname, B line, B *, a [line] command, A line, A *, w expr, W
expr, W *, o, o booloption .., o anyoption? .., o option=value .., < ?, < [
command ], < *, << command, > ?, > command, > *, >> command, { ?, { [
command ], { *, {{ command, ! number, ! -number, ! pattern, !! cmd, source
file, H -number, q or ^D, R, |dbcmd, ||dbcmd, command, m expr, M, man
[manpage]
d2165 1
a2165 1
=item Configurable Options
d2167 1
a2167 7
C<recallCommand>, C<ShellBang>, C<pager>, C<tkRunning>, C<signalLevel>,
C<warnLevel>, C<dieLevel>, C<AutoTrace>, C<LineInfo>, C<inhibit_exit>,
C<PrintRet>, C<ornaments>, C<frame>, C<maxTraceLen>, C<windowSize>,
C<arrayDepth>, C<hashDepth>, C<dumpDepth>, C<compactDump>, C<veryCompact>,
C<globPrint>, C<DumpDBFiles>, C<DumpPackages>, C<DumpReused>, C<quote>,
C<HighBit>, C<undefPrint>, C<UsageOnly>, C<TTY>, C<noTTY>, C<ReadLine>,
C<NonStop>
d2169 1
a2169 1
=item Debugger input/output
d2171 1
a2171 2
Prompt, Multiline commands, Stack backtrace, Line Listing Format, Frame
listing
d2173 1
a2173 1
=item Debugging compile-time statements
d2175 1
a2175 3
=item Debugger Customization

=item Readline Support
d2177 1
a2177 1
=item Editor Support for Debugging
d2179 25
a2203 1
=item The Perl Profiler
d2207 8
a2214 1
=item Debugging regular expressions
d2216 1
a2216 1
=item Debugging memory usage
d2220 1
a2220 1
=item BUGS
d2224 2
a2225 1
=head2 perlvar - Perl predefined variables
d2231 1
a2231 1
=over 4
d2233 1
a2233 1
=item Predefined Names
d2235 1
a2235 31
$ARG, $_, $a, $b, $<I<digits>>, $MATCH, $&, $PREMATCH, $`, $POSTMATCH, $',
$LAST_PAREN_MATCH, $+, $^N, @@LAST_MATCH_END, @@+, $*,
HANDLE->input_line_number(EXPR), $INPUT_LINE_NUMBER, $NR, $,
IO::Handle->input_record_separator(EXPR), $INPUT_RECORD_SEPARATOR, $RS, $/,
HANDLE->autoflush(EXPR), $OUTPUT_AUTOFLUSH, $|,
IO::Handle->output_field_separator EXPR, $OUTPUT_FIELD_SEPARATOR, $OFS, $,,
IO::Handle->output_record_separator EXPR, $OUTPUT_RECORD_SEPARATOR, $ORS,
$\, $LIST_SEPARATOR, $", $SUBSCRIPT_SEPARATOR, $SUBSEP, $;, $#,
HANDLE->format_page_number(EXPR), $FORMAT_PAGE_NUMBER, $%,
HANDLE->format_lines_per_page(EXPR), $FORMAT_LINES_PER_PAGE, $=,
HANDLE->format_lines_left(EXPR), $FORMAT_LINES_LEFT, $-, @@LAST_MATCH_START,
@@-, C<$`> is the same as C<substr($var, 0, $-[0])>, C<$&> is the same as
C<substr($var, $-[0], $+[0] - $-[0])>, C<$'> is the same as C<substr($var,
$+[0])>, C<$1> is the same as C<substr($var, $-[1], $+[1] - $-[1])>, C<$2>
is the same as C<substr($var, $-[2], $+[2] - $-[2])>, C<$3> is the same as
C<substr $var, $-[3], $+[3] - $-[3])>, HANDLE->format_name(EXPR),
$FORMAT_NAME, $~, HANDLE->format_top_name(EXPR), $FORMAT_TOP_NAME, $^,
IO::Handle->format_line_break_characters EXPR,
$FORMAT_LINE_BREAK_CHARACTERS, $:, IO::Handle->format_formfeed EXPR,
$FORMAT_FORMFEED, $^L, $ACCUMULATOR, $^A, $CHILD_ERROR, $?, ${^ENCODING},
$OS_ERROR, $ERRNO, $!, %!, $EXTENDED_OS_ERROR, $^E, $EVAL_ERROR, $@@,
$PROCESS_ID, $PID, $$, $REAL_USER_ID, $UID, $<, $EFFECTIVE_USER_ID, $EUID,
$>, $REAL_GROUP_ID, $GID, $(, $EFFECTIVE_GROUP_ID, $EGID, $),
$PROGRAM_NAME, $0, $[, $], $COMPILING, $^C, $DEBUGGING, $^D,
$SYSTEM_FD_MAX, $^F, $^H, %^H, $INPLACE_EDIT, $^I, $^M, $OSNAME, $^O,
${^OPEN}, $PERLDB, $^P, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
0x100, 0x200, 0x400, $LAST_REGEXP_CODE_RESULT, $^R,
$EXCEPTIONS_BEING_CAUGHT, $^S, $BASETIME, $^T, ${^TAINT}, ${^UNICODE},
$PERL_VERSION, $^V, $WARNING, $^W, ${^WARNING_BITS}, $EXECUTABLE_NAME, $^X,
ARGV, $ARGV, @@ARGV, ARGVOUT, @@F, @@INC, @@_, %INC, %ENV, $ENV{expr}, %SIG,
$SIG{expr}
d2237 1
a2237 1
=item Error Indicators
d2239 1
a2239 1
=item Technical Note on the Syntax of Variable Names
d2241 1
a2241 1
=back
d2243 1
a2243 1
=item BUGS
d2245 1
a2245 1
=back
d2247 1
a2247 1
=head2 perlre - Perl regular expressions
d2249 1
a2249 1
=over 4
d2251 1
a2251 1
=item DESCRIPTION
d2253 1
a2253 1
i, m, s, x
d2255 1
a2255 1
=over 4
d2257 1
a2257 1
=item Regular Expressions
d2259 1
a2259 1
[1], [2], [3], cntrl, graph, print, punct, xdigit
d2261 1
a2261 1
=item Extended Patterns
d2263 1
a2263 4
C<(?#text)>, C<(?imsx-imsx)>, C<(?:pattern)>, C<(?imsx-imsx:pattern)>,
C<(?=pattern)>, C<(?!pattern)>, C<(?<=pattern)>, C<(?<!pattern)>, C<(?{
code })>, C<(??{ code })>, C<< (?>pattern) >>,
C<(?(condition)yes-pattern|no-pattern)>, C<(?(condition)yes-pattern)>
d2265 1
a2265 1
=item Backtracking
d2267 1
a2267 1
=item Version 8 Regular Expressions
d2269 1
a2269 1
=item Warning on \1 vs $1
d2271 1
a2271 1
=item Repeated patterns matching zero-length substring
d2273 1
a2273 8
=item Combining pieces together

C<ST>, C<S|T>, C<S{REPEAT_COUNT}>, C<S{min,max}>, C<S{min,max}?>, C<S?>,
C<S*>, C<S+>, C<S??>, C<S*?>, C<S+?>, C<< (?>S) >>, C<(?=S)>, C<(?<=S)>,
C<(?!S)>, C<(?<!S)>, C<(??{ EXPR })>,
C<(?(condition)yes-pattern|no-pattern)>

=item Creating custom RE engines
d2277 1
a2277 1
=item BUGS
d2279 1
a2279 1
=item SEE ALSO
d2281 2
a2282 1
=back
d2284 1
a2284 1
=head2 perlreref - Perl Regular Expressions Reference
d2288 1
a2288 1
=item DESCRIPTION
d2290 1
a2290 1
=over 4
d2292 1
a2292 1
=item OPERATORS
d2294 1
a2294 1
=item SYNTAX
d2296 1
a2296 1
=item ESCAPE SEQUENCES
d2298 1
a2298 1
=item CHARACTER CLASSES
d2300 1
a2300 1
=item ANCHORS
d2302 1
a2302 1
=item QUANTIFIERS
d2304 1
a2304 1
=item EXTENDED CONSTRUCTS
d2306 1
a2306 1
=item VARIABLES
d2308 1
a2308 1
=item FUNCTIONS
d2310 1
a2310 1
=item TERMINOLOGY
a2313 2
=item AUTHOR

d2316 1
a2316 1
=item THANKS
d2320 1
a2320 1
=head2 perlref - Perl references and nested data structures
a2323 2
=item NOTE

d2328 19
a2346 1
=item Making References
d2348 1
a2348 1
=item Using References
d2350 1
a2350 1
=item Symbolic references
d2352 1
a2352 1
=item Not-so-symbolic references
d2354 1
a2354 1
=item Pseudo-hashes: Using an array as a hash
d2356 1
a2356 1
=item Function Templates
d2360 1
a2360 1
=item WARNING
d2364 4
d2370 1
a2370 1
=head2 perlform - Perl formats
d2378 1
a2378 1
=item Format Variables
d2380 2
a2381 1
=back
d2383 1
a2383 1
=item NOTES
d2385 1
a2385 1
=over 4
d2387 1
a2387 1
=item Footers
d2389 1
a2389 1
=item Accessing Formatting Internals
d2391 1
a2391 1
=back
d2393 1
a2393 1
=item WARNINGS
d2395 1
a2395 1
=back
d2397 1
a2397 1
=head2 perlobj - Perl objects
d2399 1
a2399 1
=over 4
d2401 1
a2401 1
=item DESCRIPTION
d2403 1
a2403 1
=over 4
d2405 1
a2405 1
=item An Object is Simply a Reference
d2407 1
a2407 1
=item A Class is Simply a Package
d2409 1
a2409 1
=item A Method is Simply a Subroutine
d2411 1
a2411 1
=item Method Invocation
d2413 1
a2413 1
=item Indirect Object Syntax
d2415 1
a2415 1
=item Default UNIVERSAL methods
d2417 1
a2417 7
isa(CLASS), can(METHOD), VERSION( [NEED] )

=item Destructors

=item Summary

=item Two-Phased Garbage Collection
d2425 1
a2425 1
=head2 perltie - how to hide an object class in a simple variable
d2429 1
a2429 1
=item SYNOPSIS
d2431 1
a2431 1
=item DESCRIPTION
d2435 1
a2435 1
=item Tying Scalars
d2437 1
a2437 2
TIESCALAR classname, LIST, FETCH this, STORE this, value, UNTIE this,
DESTROY this
d2439 1
a2439 1
=item Tying Arrays
d2441 1
a2441 5
TIEARRAY classname, LIST, FETCH this, index, STORE this, index, value,
FETCHSIZE this, STORESIZE this, count, EXTEND this, count, EXISTS this,
key, DELETE this, key, CLEAR this, PUSH this, LIST, POP this, SHIFT this,
UNSHIFT this, LIST, SPLICE this, offset, length, LIST, UNTIE this, DESTROY
this
d2443 1
a2443 7
=item Tying Hashes

USER, HOME, CLOBBER, LIST, TIEHASH classname, LIST, FETCH this, key, STORE
this, key, value, DELETE this, key, CLEAR this, EXISTS this, key, FIRSTKEY
this, NEXTKEY this, lastkey, UNTIE this, DESTROY this

=item Tying FileHandles
d2445 1
a2445 3
TIEHANDLE classname, LIST, WRITE this, LIST, PRINT this, LIST, PRINTF this,
LIST, READ this, LIST, READLINE this, GETC this, CLOSE this, UNTIE this,
DESTROY this
d2447 1
a2447 1
=item UNTIE this
d2449 1
a2449 1
=item The C<untie> Gotcha
d2451 1
a2451 1
=back
d2453 1
a2453 1
=item SEE ALSO
d2455 1
a2455 1
=item BUGS
d2457 1
a2457 1
=item AUTHOR
d2461 1
a2461 1
=head2 perldbmfilter - Perl DBM Filters
d2463 1
a2463 1
=over 4
d2465 1
a2465 1
=item SYNOPSIS
d2467 1
a2467 4
=item DESCRIPTION

B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>
d2471 1
a2471 1
=item The Filter
d2473 1
a2473 1
=item An Example -- the NULL termination problem.
d2475 1
a2475 1
=item Another Example -- Key is a C int.
d2479 5
a2483 1
=item SEE ALSO
d2485 1
a2485 1
=item AUTHOR
d2487 1
a2487 1
=back
d2489 1
a2489 2
=head2 perlipc - Perl interprocess communication (signals, fifos, pipes,
safe subprocesses, sockets, and semaphores)
d2493 1
a2493 1
=item DESCRIPTION
d2495 1
a2495 1
=item Signals
d2497 1
a2497 1
=over 4
d2499 1
a2499 1
=item Handling the SIGHUP Signal in Daemons
d2503 1
a2503 1
=item Named Pipes
d2507 5
a2511 1
=item Deferred Signals (Safe Signals)
d2513 1
a2513 2
Long running opcodes, Interrupting IO, Restartable system calls, Signals as
"faults", Signals triggered by operating system state
d2517 7
a2523 1
=item Using open() for IPC
d2527 1
a2527 1
=item Filehandles
d2529 1
a2529 1
=item Background Processes
d2531 1
a2531 1
=item Complete Dissociation of Child from Parent
d2533 1
a2533 1
=item Safe Pipe Opens
d2535 1
a2535 1
=item Bidirectional Communication with Another Process
d2537 1
a2537 1
=item Bidirectional Communication with Yourself
d2541 1
a2541 1
=item Sockets: Client/Server Communication
d2543 1
a2543 1
=over 4
d2545 1
a2545 1
=item Internet Line Terminators
d2547 1
a2547 1
=item Internet TCP Clients and Servers
d2549 1
a2549 1
=item Unix-Domain TCP Clients and Servers
d2553 1
a2553 1
=item TCP Clients with IO::Socket
d2557 1
a2557 1
=item A Simple Client
d2559 1
a2559 1
C<Proto>, C<PeerAddr>, C<PeerPort>
d2561 1
a2561 1
=item A Webget Client
d2563 1
a2563 1
=item Interactive Client with IO::Socket
d2565 1
a2565 1
=back
d2567 1
a2567 1
=item TCP Servers with IO::Socket
d2569 1
a2569 1
Proto, LocalPort, Listen, Reuse
d2571 1
a2571 1
=item UDP: Message Passing
d2573 1
a2573 7
=item SysV IPC

=item NOTES

=item BUGS

=item AUTHOR
d2579 1
a2579 1
=head2 perlfork - Perl's fork() emulation
a2582 2
=item SYNOPSIS

d2587 1
a2587 1
=item Behavior of other Perl features in forked pseudo-processes
d2589 1
a2589 3
$$ or $PROCESS_ID, %ENV, chdir() and all other builtins that accept
filenames, wait() and waitpid(), kill(), exec(), exit(), Open handles to
files, directories and network sockets
d2591 1
a2591 1
=item Resource limits
d2593 1
a2593 1
=item Killing the parent process
d2595 1
a2595 1
=item Lifetime of the parent process and pseudo-processes
d2597 1
a2597 5
=item CAVEATS AND LIMITATIONS

BEGIN blocks, Open filehandles, Forking pipe open() not yet implemented,
Global state maintained by XSUBs, Interpreter embedded in larger
application, Thread-safety of extensions
a2600 4
=item BUGS

=item AUTHOR

d2605 1
a2605 1
=head2 perlnumber - semantics of numbers and numeric operations in Perl
d2609 3
a2611 1
=item SYNOPSIS
d2613 1
a2613 1
=item DESCRIPTION
d2615 2
a2616 1
=item Storing numbers
d2618 1
a2618 1
=item Numeric operators and numeric conversions
d2620 1
a2620 1
=item Flavors of Perl numeric operations
d2622 1
a2622 4
Arithmetic operators, ++, Arithmetic operators during C<use integer>, Other
mathematical operators, Bitwise operators, Bitwise operators during C<use
integer>, Operators which expect an integer, Operators which expect a
string
d2626 1
a2626 1
=item SEE ALSO
d2630 1
a2630 1
=head2 perlthrtut - tutorial on threads in Perl
d2636 1
a2636 1
=item Status
d2638 1
a2638 1
=item What Is A Thread Anyway?
d2640 1
a2640 1
=item Threaded Program Models
d2642 4
a2645 1
=over 4
d2647 1
a2647 1
=item Boss/Worker
d2649 46
a2694 1
=item Work Crew
d2696 1
a2696 1
=item Pipeline
d2700 12
a2711 1
=item What kind of threads are Perl threads?
d2713 1
a2713 1
=item Thread-Safe Modules
d2715 1
a2715 1
=item Thread Basics
d2717 1
a2717 1
=over 4
d2719 5
a2723 1
=item Basic Thread Support
d2725 1
a2725 1
=item A Note about the Examples
d2727 1
a2727 1
=item Creating Threads
d2729 1
a2729 1
=item Waiting For A Thread To Exit
d2731 4
a2734 1
=item Ignoring A Thread
d2736 1
a2736 1
=back
d2738 1
a2738 1
=item Threads And Data
d2740 1
a2740 1
=over 4
d2742 1
a2742 1
=item Shared And Unshared Data
d2744 1
a2744 1
=item Thread Pitfalls: Races
d2748 1
a2748 1
=item Synchronization and control
d2752 1
a2752 1
=item Controlling access: lock()
d2754 1
a2754 1
=item A Thread Pitfall: Deadlocks
d2756 1
a2756 1
=item Queues: Passing Data Around
d2758 1
a2758 1
=item Semaphores: Synchronizing Data Access
d2760 1
a2760 1
=item Basic semaphores
d2762 1
a2762 1
=item Advanced Semaphores
d2764 1
a2764 1
=item cond_wait() and cond_signal()
d2766 1
a2766 1
=item Giving up control
d2768 1
a2768 1
=back
d2770 1
a2770 1
=item General Thread Utility Routines
d2774 3
a2776 1
=item What Thread Am I In?
d2778 1
a2778 1
=item Thread IDs
d2780 1
a2780 1
=item Are These Threads The Same?
d2782 1
a2782 1
=item What Threads Are Running?
d2786 1
a2786 1
=item A Complete Example
d2788 1
a2788 1
=item Different implementations of threads
d2790 1
a2790 1
=item Performance considerations
d2792 1
a2792 1
=item Process-scope Changes
d2794 1
a2794 1
=item Thread-Safety of System Libraries
d2796 1
a2796 1
=item Conclusion
d2798 1
a2798 1
=item Bibliography
d2802 1
a2802 1
=item Introductory Texts
d2804 1
a2804 1
=item OS-Related References
d2806 3
a2808 1
=item Other References
d2810 1
a2810 1
=back
d2812 1
a2812 1
=item Acknowledgements
d2814 1
a2814 3
=item AUTHOR

=item Copyrights
d2818 1
a2818 1
=head2 perlothrtut - old tutorial on threads in Perl
d2822 3
a2824 1
=item DESCRIPTION
d2826 1
a2826 1
=item What Is A Thread Anyway?
d2828 1
a2828 1
=item Threaded Program Models
d2832 1
a2832 1
=item Boss/Worker
d2834 1
a2834 1
=item Work Crew
d2836 1
a2836 1
=item Pipeline
d2838 1
a2838 1
=back
d2840 1
a2840 1
=item Native threads
d2842 1
a2842 1
=item What kind of threads are perl threads?
d2844 1
a2844 1
=item Threadsafe Modules
d2846 1
a2846 1
=item Thread Basics
d2848 1
a2848 1
=over 4
d2850 1
a2850 1
=item Basic Thread Support
d2852 1
a2852 1
=item Creating Threads
d2854 1
a2854 1
=item Giving up control
d2856 1
a2856 1
=item Waiting For A Thread To Exit
d2858 2
a2859 1
=item Errors In Threads
d2861 1
a2861 1
=item Ignoring A Thread
d2865 1
a2865 1
=item Threads And Data
d2869 3
a2871 1
=item Shared And Unshared Data
d2873 1
a2873 1
=item Thread Pitfall: Races
d2875 1
a2875 1
=item Controlling access: lock()
d2877 1
a2877 1
=item Thread Pitfall: Deadlocks
d2879 1
a2879 1
=item Queues: Passing Data Around
d2881 1
a2881 1
=back
d2883 3
a2885 1
=item Threads And Code
d2887 1
a2887 1
=over 4
d2889 2
a2890 1
=item Semaphores: Synchronizing Data Access
d2892 1
a2892 1
Basic semaphores, Advanced Semaphores
d2894 1
a2894 1
=item Attributes: Restricting Access To Subroutines
d2896 1
a2896 1
=item Subroutine Locks
d2898 1
a2898 1
=item Methods
d2900 2
a2901 1
=item Locking A Subroutine
d2903 1
a2903 1
=back
d2905 1
a2905 1
=item General Thread Utility Routines
d2909 3
a2911 1
=item What Thread Am I In?
d2913 1
a2913 1
=item Thread IDs
d2915 1
a2915 1
=item Are These Threads The Same?
d2917 1
a2917 1
=item What Threads Are Running?
d2919 1
a2919 1
=back
d2921 1
a2921 1
=item A Complete Example
d2923 2
a2924 1
=item Conclusion
d2926 1
a2926 1
=item Bibliography
d2928 1
a2928 1
=over 4
d2930 1
a2930 1
=item Introductory Texts
d2932 1
a2932 1
=item OS-Related References
d2934 1
a2934 1
=item Other References
d2936 1
a2936 1
=back
d2938 2
a2939 1
=item Acknowledgements
d2941 1
a2941 1
=item AUTHOR
d2943 1
a2943 1
=item Copyrights
d2947 2
a2948 1
=head2 perlport - Writing portable Perl
d2954 5
a2958 2
Not all Perl programs have to be portable, Nearly all of Perl already I<is>
portable
d2960 1
a2960 1
=item ISSUES
d2962 2
a2963 1
=over 4
d2965 2
a2966 1
=item Newlines
d2968 2
a2969 1
=item Numbers endianness and Width
d2971 1
a2971 1
=item Files and Filesystems
d2973 1
a2973 1
=item System Interaction
d2975 1
a2975 1
=item Command names versus file pathnames
d2977 1
a2977 1
=item Networking
d2979 1
a2979 1
=item Interprocess Communication (IPC)
d2981 1
a2981 1
=item External Subroutines (XS)
d2983 1
a2983 1
=item Standard Modules
d2985 1
a2985 1
=item Time and Date
d2987 1
a2987 1
=item Character sets and character encoding
d2989 1
a2989 1
=item Internationalisation
d2991 1
a2991 1
=item System Resources
d2993 1
a2993 1
=item Security
d2995 1
a2995 1
=item Style
d2999 1
a2999 1
=item CPAN Testers
d3001 1
a3001 2
Mailing list: cpan-testers@@perl.org, Testing results:
http://testers.cpan.org/
d3003 2
a3004 1
=item PLATFORMS
d3008 3
a3010 1
=item Unix
d3012 1
a3012 1
=item DOS and Derivatives
d3014 1
a3014 1
=item S<Mac OS>
d3016 1
a3016 1
=item VMS
d3018 1
a3018 1
=item VOS
d3020 1
a3020 1
=item EBCDIC Platforms
d3022 1
a3022 1
=item Acorn RISC OS
d3024 1
a3024 1
=item Other perls
d3026 1
a3026 1
=back
d3028 1
a3028 1
=item FUNCTION IMPLEMENTATIONS
d3030 3
a3032 1
=over 4
d3034 1
a3034 1
=item Alphabetical Listing of Perl Functions
d3036 1
a3036 26
-I<X> FILEHANDLE, -I<X> EXPR, -I<X>, alarm SECONDS, alarm, binmode
FILEHANDLE, chmod LIST, chown LIST, chroot FILENAME, chroot, crypt
PLAINTEXT,SALT, dbmclose HASH, dbmopen HASH,DBNAME,MODE, dump LABEL, exec
LIST, exit EXPR, exit, fcntl FILEHANDLE,FUNCTION,SCALAR, flock
FILEHANDLE,OPERATION, fork, getlogin, getpgrp PID, getppid, getpriority
WHICH,WHO, getpwnam NAME, getgrnam NAME, getnetbyname NAME, getpwuid UID,
getgrgid GID, getnetbyaddr ADDR,ADDRTYPE, getprotobynumber NUMBER,
getservbyport PORT,PROTO, getpwent, getgrent, gethostbyname, gethostent,
getnetent, getprotoent, getservent, sethostent STAYOPEN, setnetent
STAYOPEN, setprotoent STAYOPEN, setservent STAYOPEN, endpwent, endgrent,
endhostent, endnetent, endprotoent, endservent, getsockopt
SOCKET,LEVEL,OPTNAME, glob EXPR, glob, ioctl FILEHANDLE,FUNCTION,SCALAR,
kill SIGNAL, LIST, link OLDFILE,NEWFILE, lstat FILEHANDLE, lstat EXPR,
lstat, msgctl ID,CMD,ARG, msgget KEY,FLAGS, msgsnd ID,MSG,FLAGS, msgrcv
ID,VAR,SIZE,TYPE,FLAGS, open FILEHANDLE,EXPR, open FILEHANDLE, pipe
READHANDLE,WRITEHANDLE, readlink EXPR, readlink, select
RBITS,WBITS,EBITS,TIMEOUT, semctl ID,SEMNUM,CMD,ARG, semget
KEY,NSEMS,FLAGS, semop KEY,OPSTRING, setgrent, setpgrp PID,PGRP,
setpriority WHICH,WHO,PRIORITY, setpwent, setsockopt
SOCKET,LEVEL,OPTNAME,OPTVAL, shmctl ID,CMD,ARG, shmget KEY,SIZE,FLAGS,
shmread ID,VAR,POS,SIZE, shmwrite ID,STRING,POS,SIZE, sockatmark SOCKET,
socketpair SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL, stat FILEHANDLE, stat
EXPR, stat, symlink OLDFILE,NEWFILE, syscall LIST, sysopen
FILEHANDLE,FILENAME,MODE,PERMS, system LIST, times, truncate
FILEHANDLE,LENGTH, truncate EXPR,LENGTH, umask EXPR, umask, utime LIST,
wait, waitpid PID,FLAGS
d3038 1
a3038 1
=back
d3040 1
a3040 1
=item CHANGES
d3042 1
a3042 6
v1.48, 02 February 2001, v1.47, 22 March 2000, v1.46, 12 February 2000,
v1.45, 20 December 1999, v1.44, 19 July 1999, v1.43, 24 May 1999, v1.42, 22
May 1999, v1.41, 19 May 1999, v1.40, 11 April 1999, v1.39, 11 February
1999, v1.38, 31 December 1998, v1.37, 19 December 1998, v1.36, 9 September
1998, v1.35, 13 August 1998, v1.33, 06 August 1998, v1.32, 05 August 1998,
v1.30, 03 August 1998, v1.23, 10 July 1998
d3044 1
a3044 1
=item Supported Platforms
d3046 1
a3046 1
=item SEE ALSO
d3048 2
a3049 1
=item AUTHORS / CONTRIBUTORS
d3051 1
a3051 1
=back
d3053 1
a3053 2
=head2 perllocale - Perl locale handling (internationalization and
localization)
d3055 1
a3055 1
=over 4
d3057 1
a3057 1
=item DESCRIPTION
d3059 1
a3059 1
=item PREPARING TO USE LOCALES
d3061 1
a3061 1
=item USING LOCALES
d3063 1
a3063 1
=over 4
d3065 1
a3065 1
=item The use locale pragma
d3067 1
a3067 1
=item The setlocale function
d3069 1
a3069 1
=item Finding locales
d3071 1
a3071 1
=item LOCALE PROBLEMS
d3073 1
a3073 1
=item Temporarily fixing locale problems
d3075 2
a3076 1
=item Permanently fixing locale problems
d3078 1
a3078 1
=item Permanently fixing your system's locale configuration
d3080 1
a3080 1
=item Fixing system locale configuration
d3082 1
a3082 1
=item The localeconv function
d3084 1
a3084 1
=item I18N::Langinfo
d3088 2
a3089 1
=item LOCALE CATEGORIES
d3093 1
a3093 1
=item Category LC_COLLATE: Collation
d3095 1
a3095 1
=item Category LC_CTYPE: Character Types
d3097 1
a3097 1
=item Category LC_NUMERIC: Numeric Formatting
d3099 2
a3100 1
=item Category LC_MONETARY: Formatting of monetary amounts
d3102 1
a3102 1
=item LC_TIME
d3104 2
a3105 1
=item Other categories
d3107 1
a3107 1
=back
d3109 4
a3112 1
=item SECURITY
d3114 1
a3114 1
=item ENVIRONMENT
d3116 1
a3116 2
PERL_BADLANG, LC_ALL, LANGUAGE, LC_CTYPE, LC_COLLATE, LC_MONETARY,
LC_NUMERIC, LC_TIME, LANG
d3118 1
a3118 1
=item NOTES
d3120 1
a3120 1
=over 4
d3122 1
a3122 1
=item Backward compatibility
d3124 1
a3124 1
=item I18N:Collate obsolete
d3126 1
a3126 1
=item Sort speed and memory use impacts
d3128 1
a3128 1
=item write() and LC_NUMERIC
d3130 1
a3130 1
=item Freely available locale definitions
d3132 1
a3132 1
=item I18n and l10n
d3134 1
a3134 1
=item An imperfect standard
d3136 1
a3136 1
=back
d3138 1
a3138 1
=item Unicode and UTF-8
d3140 1
a3140 1
=item BUGS
d3142 1
a3142 1
=over 4
d3144 1
a3144 1
=item Broken systems
d3148 1
a3148 7
=item SEE ALSO

=item HISTORY

=back

=head2 perluniintro - Perl Unicode introduction
d3152 1
a3152 1
=item DESCRIPTION
d3154 1
a3154 1
=over 4
d3156 1
a3156 1
=item Unicode
d3158 1
a3158 1
=item Perl's Unicode Support
d3160 1
a3160 1
=item Perl's Unicode Model
d3162 1
a3162 1
=item Unicode and EBCDIC
d3164 1
a3164 1
=item Creating Unicode
d3166 1
a3166 1
=item Handling Unicode
d3168 1
a3168 1
=item Legacy Encodings
d3170 1
a3170 1
=item Unicode I/O
d3172 2
a3173 1
=item Displaying Unicode As Text
d3175 1
a3175 1
=item Special Cases
d3177 2
a3178 1
=item Advanced Topics
d3180 1
a3180 1
=item Miscellaneous
d3182 1
a3182 1
=item Questions With Answers
d3184 1
a3184 1
=item Hexadecimal Notation
d3186 1
a3186 1
=item Further Resources
d3188 1
a3188 1
=back
d3190 1
a3190 1
=item UNICODE IN OLDER PERLS
d3192 1
a3192 1
=item SEE ALSO
d3194 3
a3196 3
=item ACKNOWLEDGMENTS

=item AUTHOR, COPYRIGHT, AND LICENSE
d3200 1
a3200 1
=head2 perlunicode - Unicode support in Perl
d3204 1
a3204 1
=item DESCRIPTION
d3206 1
a3206 1
=over 4
d3208 1
a3208 1
=item Important Caveats
d3210 1
a3210 2
Input and Output Layers, Regular Expressions, C<use utf8> still needed to
enable UTF-8/UTF-EBCDIC in scripts
d3212 2
a3213 1
=item Byte and Character Semantics
d3215 2
a3216 1
=item Effects of Character Semantics
d3218 1
a3218 1
=item Scripts
d3220 1
a3220 1
=item Blocks
d3222 1
a3222 1
=item User-Defined Character Properties
d3224 1
a3224 1
=item Character Encodings for Input and Output
d3226 1
a3226 1
=item Unicode Regular Expression Support Level
d3228 1
a3228 1
=item Unicode Encodings
d3230 1
a3230 1
=item Security Implications of Unicode
d3232 1
a3232 1
=item Unicode in Perl on EBCDIC
d3234 1
a3234 1
=item Locales
d3236 1
a3236 1
=item When Unicode Does Not Happen
d3238 1
a3238 3
=item Forcing Unicode in Perl (Or Unforcing Unicode in Perl)

=item Using Unicode in XS
d3242 1
a3242 1
=item BUGS
d3246 4
a3249 1
=item Interaction with Locales
d3251 1
a3251 1
=item Interaction with Extensions
d3253 1
a3253 1
=item Speed
d3255 1
a3255 1
=item Porting code from perl-5.6.X
d3257 1
a3257 1
=back
d3259 1
a3259 1
=item SEE ALSO
d3261 1
a3261 1
=back
d3263 1
a3263 1
=head2 perlebcdic - Considerations for running Perl on EBCDIC platforms
d3265 1
a3265 1
=over 4
d3267 1
a3267 1
=item DESCRIPTION
d3269 1
a3269 1
=item COMMON CHARACTER CODE SETS
d3271 2
a3272 1
=over 4
d3274 2
a3275 1
=item ASCII
d3277 1
a3277 1
=item ISO 8859
d3279 1
a3279 1
=item Latin 1 (ISO 8859-1)
d3281 1
a3281 1
=item EBCDIC
d3283 1
a3283 1
=item 13 variant characters
d3285 1
a3285 1
=item 0037
d3287 1
a3287 1
=item 1047
d3289 1
a3289 1
=item POSIX-BC
d3291 1
a3291 1
=item Unicode code points versus EBCDIC code points
d3293 1
a3293 1
=item Remaining Perl Unicode problems in EBCDIC
d3295 1
a3295 1
=item Unicode and UTF
d3297 1
a3297 1
=item Using Encode
d3301 1
a3301 1
=item SINGLE OCTET TABLES
d3303 1
a3303 3
recipe 0, recipe 1, recipe 2, recipe 3, recipe 4, recipe 5, recipe 6

=item IDENTIFYING CHARACTER CODE SETS
d3305 2
a3306 1
=item CONVERSIONS
d3310 1
a3310 1
=item tr///
d3312 1
a3312 1
=item iconv
d3314 1
a3314 1
=item C RTL
d3316 2
a3317 1
=back
d3319 1
a3319 1
=item OPERATOR DIFFERENCES
d3321 1
a3321 1
=item FUNCTION DIFFERENCES
d3323 1
a3323 1
chr(), ord(), pack(), print(), printf(), sort(), sprintf(), unpack()
d3325 2
a3326 1
=item REGULAR EXPRESSION DIFFERENCES
d3328 1
a3328 1
=item SOCKETS
d3330 1
a3330 1
=item SORTING
d3332 1
a3332 1
=over 4
d3334 1
a3334 1
=item Ignore ASCII vs. EBCDIC sort differences.
d3336 1
a3336 1
=item MONO CASE then sort data.
d3338 1
a3338 1
=item Convert, sort data, then re convert.
d3340 1
a3340 1
=item Perform sorting on one type of machine only.
d3342 1
a3342 1
=back
d3344 1
a3344 1
=item TRANSFORMATION FORMATS
d3346 1
a3346 1
=over 4
d3348 1
a3348 1
=item URL decoding and encoding
d3350 1
a3350 1
=item uu encoding and decoding
d3352 2
a3353 1
=item Quoted-Printable encoding and decoding
d3355 2
a3356 1
=item Caesarian ciphers
d3358 1
a3358 1
=back
d3360 1
a3360 1
=item Hashing order and checksums
d3362 1
a3362 1
=item I18N AND L10N
d3364 1
a3364 1
=item MULTI OCTET CHARACTER SETS
d3366 1
a3366 1
=item OS ISSUES
d3368 1
a3368 1
=over 4
d3370 1
a3370 1
=item OS/400
d3372 1
a3372 1
PASE, IFS access
d3374 1
a3374 1
=item OS/390, z/OS
d3376 1
a3376 1
chcp, dataset access, OS/390, z/OS iconv, locales
d3378 1
a3378 1
=item VM/ESA?
d3380 2
a3381 1
=item POSIX-BC?
d3383 1
a3383 1
=back
d3385 2
a3386 1
=item BUGS
d3388 1
a3388 1
=item SEE ALSO
d3390 1
a3390 1
=item REFERENCES
d3392 1
a3392 1
=item HISTORY
d3394 1
a3394 1
=item AUTHOR
d3398 2
a3399 1
=head2 perlsec - Perl security
d3407 11
a3417 1
=item Laundering and Detecting Tainted Data
d3419 2
a3420 1
=item Switches On the "#!" Line
d3422 1
a3422 1
=item Cleaning Up Your Path
d3424 1
a3424 1
=item Security Bugs
d3426 1
a3426 1
=item Protecting Your Programs
d3428 1
a3428 1
=item Unicode
d3430 2
a3431 1
=item Algorithmic Complexity Attacks
d3433 1
a3433 1
=back
d3435 1
a3435 1
=item SEE ALSO
d3437 1
a3437 1
=back
d3439 1
a3439 1
=head2 perlmod - Perl modules (packages and symbol tables)
d3441 1
a3441 1
=over 4
d3443 1
a3443 1
=item DESCRIPTION
d3445 1
a3445 1
=over 4
d3447 1
a3447 1
=item Packages
d3449 1
a3449 1
=item Symbol Tables
d3451 1
a3451 1
=item Package Constructors and Destructors
d3453 1
a3453 1
=item Perl Classes
d3455 1
a3455 1
=item Perl Modules
d3457 1
a3457 1
=item Making your module threadsafe
d3461 1
a3461 1
=item SEE ALSO
d3465 2
a3466 1
=head2 perlmodlib - constructing new Perl modules and finding existing ones
d3470 1
a3470 1
=item THE PERL MODULE LIBRARY
d3474 1
a3474 1
=item Pragmatic Modules
d3476 2
a3477 4
attributes, attrs, autouse, base, bigint, bignum, bigrat, blib, bytes,
charnames, constant, diagnostics, encoding, fields, filetest, if, integer,
less, lib, locale, open, ops, overload, re, sigtrap, sort, strict, subs,
threads, threads::shared, utf8, vars, vmsish, warnings, warnings::register
d3479 2
a3480 1
=item Standard Modules
d3482 1
a3482 65
AnyDBM_File, Attribute::Handlers, AutoLoader, AutoSplit, B, B::Asmdata,
B::Assembler, B::Bblock, B::Bytecode, B::C, B::CC, B::Concise, B::Debug,
B::Deparse, B::Disassembler, B::Lint, B::Showlex, B::Stackobj, B::Stash,
B::Terse, B::Xref, Benchmark, ByteLoader, CGI, CGI::Apache, CGI::Carp,
CGI::Cookie, CGI::Fast, CGI::Pretty, CGI::Push, CGI::Switch, CGI::Util,
CPAN, CPAN::FirstTime, CPAN::Nox, Carp, Carp::Heavy, Class::ISA,
Class::Struct, Config, Cwd, DB, DB_File, Data::Dumper, Devel::DProf,
Devel::PPPort, Devel::Peek, Devel::SelfStubber, Digest, Digest::MD5,
DirHandle, Dumpvalue, DynaLoader, Encode, Encode::Alias, Encode::Byte,
Encode::CJKConstants, Encode::CN, Encode::CN::HZ, Encode::Config,
Encode::EBCDIC, Encode::Encoder, Encode::Encoding, Encode::Guess,
Encode::JP, Encode::JP::H2Z, Encode::JP::JIS7, Encode::KR,
Encode::KR::2022_KR, Encode::MIME::Header, Encode::PerlIO,
Encode::Supported, Encode::Symbol, Encode::TW, Encode::Unicode,
Encode::Unicode::UTF7, English, Env, Errno, Exporter, Exporter::Heavy,
ExtUtils::Command, ExtUtils::Command::MM, ExtUtils::Constant,
ExtUtils::Embed, ExtUtils::Install, ExtUtils::Installed, ExtUtils::Liblist,
ExtUtils::MM, ExtUtils::MM_Any, ExtUtils::MM_BeOS, ExtUtils::MM_Cygwin,
ExtUtils::MM_DOS, ExtUtils::MM_MacOS, ExtUtils::MM_NW5, ExtUtils::MM_OS2,
ExtUtils::MM_UWIN, ExtUtils::MM_Unix, ExtUtils::MM_VMS, ExtUtils::MM_Win32,
ExtUtils::MM_Win95, ExtUtils::MY, ExtUtils::MakeMaker,
ExtUtils::MakeMaker::FAQ, ExtUtils::MakeMaker::Tutorial,
ExtUtils::MakeMaker::bytes, ExtUtils::MakeMaker::vmsish,
ExtUtils::Manifest, ExtUtils::Mkbootstrap, ExtUtils::Mksymlists,
ExtUtils::Packlist, ExtUtils::testlib, Fatal, Fcntl, File::Basename,
File::CheckTree, File::Compare, File::Copy, File::DosGlob, File::Find,
File::Glob, File::Path, File::Spec, File::Spec::Cygwin, File::Spec::Epoc,
File::Spec::Functions, File::Spec::Mac, File::Spec::OS2, File::Spec::Unix,
File::Spec::VMS, File::Spec::Win32, File::Temp, File::stat, FileCache,
FileHandle, Filter::Simple, Filter::Util::Call, FindBin, GDBM_File,
Getopt::Long, Getopt::Std, Hash::Util, I18N::Collate, I18N::LangTags,
I18N::LangTags::List, I18N::Langinfo, IO, IO::Dir, IO::File, IO::Handle,
IO::Pipe, IO::Poll, IO::Seekable, IO::Select, IO::Socket, IO::Socket::INET,
IO::Socket::UNIX, IPC::Open2, IPC::Open3, IPC::SysV, IPC::SysV::Msg,
IPC::SysV::Semaphore, List::Util, Locale::Constants, Locale::Country,
Locale::Currency, Locale::Language, Locale::Maketext,
Locale::Maketext::TPJ13, Locale::Script, MIME::Base64,
MIME::Base64::QuotedPrint, Math::BigFloat, Math::BigInt,
Math::BigInt::Calc, Math::BigInt::Scalar, Math::BigRat, Math::Complex,
Math::Trig, Memoize, Memoize::AnyDBM_File, Memoize::Expire,
Memoize::ExpireFile, Memoize::ExpireTest, Memoize::NDBM_File,
Memoize::SDBM_File, Memoize::Storable, NDBM_File, NEXT, Net::Cmd,
Net::Config, Net::Domain, Net::FTP, Net::NNTP, Net::Netrc, Net::POP3,
Net::Ping, Net::SMTP, Net::Time, Net::hostent, Net::libnetFAQ, Net::netent,
Net::protoent, Net::servent, O, ODBM_File, Opcode, POSIX, PerlIO,
PerlIO::encoding, PerlIO::scalar, PerlIO::via, PerlIO::via::QuotedPrint,
Pod::Checker, Pod::Find, Pod::Functions, Pod::Html, Pod::InputObjects,
Pod::LaTeX, Pod::Man, Pod::ParseLink, Pod::ParseUtils, Pod::Parser,
Pod::Perldoc::ToChecker, Pod::Perldoc::ToMan, Pod::Perldoc::ToNroff,
Pod::Perldoc::ToPod, Pod::Perldoc::ToRtf, Pod::Perldoc::ToText,
Pod::Perldoc::ToTk, Pod::Perldoc::ToXml, Pod::PlainText, Pod::Plainer,
Pod::Select, Pod::Text, Pod::Text::Color, Pod::Text::Overstrike,
Pod::Text::Termcap, Pod::Usage, SDBM_File, Safe, Scalar::Util,
Search::Dict, SelectSaver, SelfLoader, Shell, Socket, Storable, Switch,
Symbol, Sys::Hostname, Sys::Syslog, Term::ANSIColor, Term::Cap,
Term::Complete, Term::ReadLine, Test, Test::Builder, Test::Harness,
Test::Harness::Assert, Test::Harness::Iterator, Test::Harness::Straps,
Test::More, Test::Simple, Test::Tutorial, Text::Abbrev, Text::Balanced,
Text::ParseWords, Text::Soundex, Text::Tabs, Text::Wrap, Thread,
Thread::Queue, Thread::Semaphore, Thread::Signal, Thread::Specific,
Tie::Array, Tie::File, Tie::Handle, Tie::Hash, Tie::Memoize, Tie::RefHash,
Tie::Scalar, Tie::SubstrHash, Time::HiRes, Time::Local, Time::gmtime,
Time::localtime, Time::tm, UNIVERSAL, Unicode::Collate, Unicode::Normalize,
Unicode::UCD, User::grent, User::pwent, Win32, XS::APItest, XS::Typemap,
XSLoader
d3484 1
a3484 1
=item Extension Modules
d3486 1
a3486 1
=back
d3488 1
a3488 1
=item CPAN
d3490 1
a3490 1
=over 4
d3492 1
a3492 1
=item Africa
d3494 1
a3494 1
South Africa
d3496 1
a3496 1
=item Asia
d3498 1
a3498 2
China, Indonesia, Israel, Japan, Malaysia, Russian Federation, Saudi
Arabia, Singapore, South Korea, Taiwan, Thailand
d3500 1
a3500 1
=item Central America
d3502 2
a3503 1
Costa Rica
d3505 2
a3506 1
=item Europe
d3508 1
a3508 5
Austria, Belgium, Bosnia and Herzegovina, Bulgaria, Croatia, Czech
Republic, Denmark, Estonia, Finland, France, Germany, Greece, Hungary,
Iceland, Ireland, Italy, Latvia, Lithuania, Netherlands, Norway, Poland,
Portugal, Romania, Russia, Slovakia, Slovenia, Spain, Sweden, Switzerland,
Turkey, Ukraine, United Kingdom
d3510 2
a3511 1
=item North America
d3513 2
a3514 5
Canada, Alberta, Manitoba, Nova Scotia, Ontario, Mexico, United States,
Alabama, California, Colorado, Delaware, District of Columbia, Florida,
Indiana, Kentucky, Massachusetts, Michigan, Nevada, New Jersey, New York,
North Carolina, Oklahoma, Oregon, Pennsylvania, Tennessee, Texas, Utah,
Virginia, Washington, Wisconsin
d3516 1
a3516 1
=item Oceania
d3518 1
a3518 1
Australia, New Zealand, United States
d3520 1
a3520 1
=item South America
d3522 1
a3522 1
Argentina, Brazil, Chile
d3524 1
a3524 1
=item RSYNC Mirrors
d3526 1
a3526 1
=back
d3528 1
a3528 1
=item Modules: Creation, Use, and Abuse
d3530 1
a3530 1
=over 4
d3532 1
a3532 1
=item Guidelines for Module Creation
d3534 1
a3534 1
=item Guidelines for Converting Perl 4 Library Scripts into Modules
d3536 1
a3536 1
=item Guidelines for Reusing Application Code
d3540 1
a3540 1
=item NOTE
d3544 2
a3545 1
=head2 perlmodstyle - Perl module style guide
d3549 1
a3549 3
=item INTRODUCTION

=item QUICK CHECKLIST
d3553 1
a3553 1
=item Before you start
d3555 1
a3555 1
=item The API
d3557 1
a3557 1
=item Stability
d3559 1
a3559 1
=item Documentation
d3561 1
a3561 1
=item Release considerations
d3563 1
a3563 1
=back
d3565 1
a3565 1
=item BEFORE YOU START WRITING A MODULE
d3567 1
a3567 1
=over 4
d3569 1
a3569 1
=item Has it been done before?
d3571 1
a3571 1
=item Do one thing and do it well
d3573 1
a3573 1
=item What's in a name?
d3575 1
a3575 1
=back
d3577 1
a3577 1
=item DESIGNING AND WRITING YOUR MODULE
d3579 1
a3579 1
=over 4
d3581 1
a3581 1
=item To OO or not to OO?
d3583 1
a3583 1
=item Designing your API
d3585 1
a3585 3
Write simple routines to do simple things, Separate functionality from
output, Provide sensible shortcuts and defaults, Naming conventions,
Parameter passing
d3587 1
a3587 1
=item Strictness and warnings
d3589 1
a3589 1
=item Backwards compatibility
d3591 1
a3591 1
=item Error handling and messages
d3593 1
a3593 1
=back
d3595 2
a3596 1
=item DOCUMENTING YOUR MODULE
d3598 1
a3598 1
=over 4
d3600 1
a3600 1
=item POD
d3602 1
a3602 1
=item README, INSTALL, release notes, changelogs
d3604 1
a3604 2
perl Makefile.PL, make, make test, make install, perl Build.PL, perl Build,
perl Build test, perl Build install
d3606 1
a3606 1
=back
d3608 1
a3608 1
=item RELEASE CONSIDERATIONS
d3610 1
a3610 1
=over 4
d3612 1
a3612 1
=item Version numbering
d3614 1
a3614 1
=item Pre-requisites
d3616 2
a3617 3
=item Testing

=item Packaging
d3619 1
a3619 1
=item Licensing
d3621 1
a3621 1
=back
d3623 1
a3623 1
=item COMMON PITFALLS
d3625 2
a3626 1
=over 4
d3628 3
a3630 1
=item Reinventing the wheel
d3632 1
a3632 1
=item Trying to do too much
d3634 2
a3635 1
=item Inappropriate documentation
d3637 1
a3637 1
=back
d3639 1
a3639 1
=item SEE ALSO
d3641 1
a3641 3
L<perlstyle>, L<perlnewmod>, L<perlpod>, L<podchecker>, Packaging Tools,
Testing tools, http://pause.perl.org/, Any good book on software
engineering
d3643 1
a3643 1
=item AUTHOR
d3645 1
a3645 1
=back
d3647 1
a3647 1
=head2 perlmodinstall - Installing CPAN Modules
d3649 1
a3649 1
=over 4
d3651 1
a3651 1
=item DESCRIPTION
d3653 1
a3653 1
=over 4
d3655 1
a3655 1
=item PREAMBLE
d3657 1
a3657 2
B<DECOMPRESS> the file, B<UNPACK> the file into a directory, B<BUILD> the
module (sometimes unnecessary), B<INSTALL> the module
d3659 2
a3660 1
=back
d3662 1
a3662 1
=item PORTABILITY
d3664 1
a3664 1
=item HEY
d3666 1
a3666 1
=item AUTHOR
d3668 1
a3668 1
=item COPYRIGHT
d3672 2
a3673 1
=head2 perlnewmod - preparing a new module for distribution
d3681 4
a3684 1
=item Warning
d3686 1
a3686 1
=item What should I make into a module?
d3688 1
a3688 1
=item Step-by-step: Preparing the ground
d3690 1
a3690 1
Look around, Check it's new, Discuss the need, Choose a name, Check again
d3692 2
a3693 1
=item Step-by-step: Making the module
d3695 1
a3695 3
Start with F<h2xs>, Use L<strict|strict> and L<warnings|warnings>, Use
L<Carp|Carp>, Use L<Exporter|Exporter> - wisely!, Use L<plain old
documentation|perlpod>, Write tests, Write the README
d3697 1
a3697 1
=item Step-by-step: Distributing your module
d3699 1
a3699 2
Get a CPAN user ID, C<perl Makefile.PL; make test; make dist>, Upload the
tarball, Announce to the modules list, Announce to clpa, Fix bugs!
d3701 1
a3701 1
=back
d3703 1
a3703 1
=item AUTHOR
d3705 1
a3705 1
=item SEE ALSO
d3707 1
a3707 1
=back
d3709 2
a3710 1
=head2 perlutil - utilities packaged with the Perl distribution
d3712 1
a3712 1
=over 4
d3714 1
a3714 1
=item DESCRIPTION
d3716 1
a3716 1
=over 4
d3718 1
a3718 1
=item DOCUMENTATION
d3720 1
a3720 4
L<perldoc|perldoc>, L<pod2man|pod2man> and L<pod2text|pod2text>,
L<pod2html|pod2html> and L<pod2latex|pod2latex>, L<pod2usage|pod2usage>,
L<podselect|podselect>, L<podchecker|podchecker>, L<splain|splain>,
L<roffitall|roffitall>
d3722 1
a3722 1
=item CONVERTORS
d3724 1
a3724 1
L<a2p|a2p>, L<s2p|s2p>, L<find2perl|find2perl>
d3726 1
a3726 1
=item Administration
d3728 1
a3728 1
L<libnetcfg|libnetcfg>
d3730 1
a3730 1
=item Development
d3732 1
a3732 2
L<perlbug|perlbug>, L<h2ph|h2ph>, L<c2ph|c2ph> and L<pstruct|pstruct>,
L<h2xs|h2xs>, L<dprofpp|dprofpp>, L<perlcc|perlcc>
d3734 1
a3734 1
=item SEE ALSO
d3738 2
a3787 36
=head2 perlfilter - Source Filters

=over 4

=item DESCRIPTION

=item CONCEPTS

=item USING FILTERS

=item WRITING A SOURCE FILTER

=item WRITING A SOURCE FILTER IN C

B<Decryption Filters>

=item CREATING A SOURCE FILTER AS A SEPARATE EXECUTABLE

=item WRITING A SOURCE FILTER IN PERL

=item USING CONTEXT: THE DEBUG FILTER

=item CONCLUSION

=item THINGS TO LOOK OUT FOR

Some Filters Clobber the C<DATA> Handle

=item REQUIREMENTS

=item AUTHOR

=item Copyrights

=back

a3827 2
=item Hiding Perl_

a4058 2
=item The FALLBACK: Keyword

a4150 2
=item AVs, HVs and undefined values

d4268 1
a4268 1
=item How can I recognise a UTF-8 string?
d4270 1
a4270 1
=item How does UTF-8 represent Unicode characters?
d4272 1
a4272 1
=item How does Perl store UTF-8 strings?
d4274 1
a4274 1
=item How do I convert a string to UTF-8?
d4374 93
d4502 2
a4503 2
cv_undef, load_module, nothreadhook, perl_alloc, perl_construct,
perl_destruct, perl_free, perl_parse, perl_run, require_pv
d4507 1
a4507 1
packlist, pack_cat, unpackstring, unpack_str
d4544 1
a4544 1
strNE, strnEQ, strnNE, sv_nolocking, sv_nosharing, sv_nounlocking
a4554 4
=item Pad Data Structures

pad_sv

d4561 1
a4561 2
XSRETURN_UV, XSRETURN_YES, XST_mIV, XST_mNO, XST_mNV, XST_mPV, XST_mUNDEF,
XST_mYES
d4571 31
a4601 31
SvCUR, SvCUR_set, SvEND, SvGROW, SvIOK, SvIOKp, SvIOK_notUV, SvIOK_off,
SvIOK_on, SvIOK_only, SvIOK_only_UV, SvIOK_UV, SvIsCOW,
SvIsCOW_shared_hash, SvIV, SvIVx, SvIVX, SvLEN, SvNIOK, SvNIOKp,
SvNIOK_off, SvNOK, SvNOKp, SvNOK_off, SvNOK_on, SvNOK_only, SvNV, SvNVX,
SvNVx, SvOK, SvOOK, SvPOK, SvPOKp, SvPOK_off, SvPOK_on, SvPOK_only,
SvPOK_only_UTF8, SvPV, SvPVbyte, SvPVbytex, SvPVbytex_force,
SvPVbyte_force, SvPVbyte_nolen, SvPVutf8, SvPVutf8x, SvPVutf8x_force,
SvPVutf8_force, SvPVutf8_nolen, SvPVx, SvPVX, SvPV_force, SvPV_force_nomg,
SvPV_nolen, SvREFCNT, SvREFCNT_dec, SvREFCNT_inc, SvROK, SvROK_off,
SvROK_on, SvRV, SvSTASH, SvTAINT, SvTAINTED, SvTAINTED_off, SvTAINTED_on,
SvTRUE, SvTYPE, SvUNLOCK, SvUOK, SvUPGRADE, SvUTF8, SvUTF8_off, SvUTF8_on,
SvUV, SvUVX, SvUVx, sv_2bool, sv_2cv, sv_2io, sv_2iv, sv_2mortal, sv_2nv,
sv_2pvbyte, sv_2pvbyte_nolen, sv_2pvutf8, sv_2pvutf8_nolen, sv_2pv_flags,
sv_2pv_nolen, sv_2uv, sv_backoff, sv_bless, sv_catpv, sv_catpvf,
sv_catpvf_mg, sv_catpvn, sv_catpvn_flags, sv_catpvn_mg, sv_catpv_mg,
sv_catsv, sv_catsv_flags, sv_catsv_mg, sv_chop, sv_clear, sv_cmp,
sv_cmp_locale, sv_collxfrm, sv_copypv, sv_dec, sv_derived_from, sv_eq,
sv_force_normal, sv_force_normal_flags, sv_free, sv_gets, sv_grow, sv_inc,
sv_insert, sv_isa, sv_isobject, sv_iv, sv_len, sv_len_utf8, sv_magic,
sv_magicext, sv_mortalcopy, sv_newmortal, sv_newref, sv_nv, sv_pos_b2u,
sv_pos_u2b, sv_pv, sv_pvbyte, sv_pvbyten, sv_pvbyten_force, sv_pvn,
sv_pvn_force, sv_pvn_force_flags, sv_pvutf8, sv_pvutf8n, sv_pvutf8n_force,
sv_reftype, sv_replace, sv_report_used, sv_reset, sv_rvweaken, sv_setiv,
sv_setiv_mg, sv_setnv, sv_setnv_mg, sv_setpv, sv_setpvf, sv_setpvf_mg,
sv_setpviv, sv_setpviv_mg, sv_setpvn, sv_setpvn_mg, sv_setpv_mg,
sv_setref_iv, sv_setref_nv, sv_setref_pv, sv_setref_pvn, sv_setref_uv,
sv_setsv, sv_setsv_flags, sv_setsv_mg, sv_setuv, sv_setuv_mg, sv_taint,
sv_tainted, sv_true, sv_unmagic, sv_unref, sv_unref_flags, sv_untaint,
sv_upgrade, sv_usepvn, sv_usepvn_mg, sv_utf8_decode, sv_utf8_downgrade,
sv_utf8_encode, sv_utf8_upgrade, sv_utf8_upgrade_flags, sv_uv, sv_vcatpvfn,
sv_vsetpvfn
d4606 4
a4609 5
is_utf8_string_loc, pv_uni_display, sv_cat_decode, sv_recode_to_utf8,
sv_uni_display, to_utf8_case, to_utf8_fold, to_utf8_lower, to_utf8_title,
to_utf8_upper, utf8n_to_uvchr, utf8n_to_uvuni, utf8_distance, utf8_hop,
utf8_length, utf8_to_bytes, utf8_to_uvchr, utf8_to_uvuni, uvchr_to_utf8,
uvuni_to_utf8_flags
a4632 16
=item CV reference counts and CvOUTSIDE

CvWEAKOUTSIDE

=item Functions in file pad.h

CX_CURPAD_SAVE, CX_CURPAD_SV, PAD_BASE_SV, PAD_CLONE_VARS,
PAD_COMPNAME_FLAGS, PAD_COMPNAME_GEN, PAD_COMPNAME_OURSTASH,
PAD_COMPNAME_PV, PAD_COMPNAME_TYPE, PAD_DUP, PAD_RESTORE_LOCAL,
PAD_SAVE_LOCAL, PAD_SAVE_SETNULLPAD, PAD_SETSV, PAD_SET_CUR,
PAD_SET_CUR_NOSAVE, PAD_SV, PAD_SVl, SAVECLEARSV, SAVECOMPPAD, SAVEPADSV

=item Functions in file pp_ctl.c

find_runcv

d4648 1
a4648 4
CvPADLIST, cv_clone, cv_dump, do_dump_pad, intro_my, pad_add_anon,
pad_add_name, pad_alloc, pad_block_start, pad_check_dup, pad_findlex,
pad_findmy, pad_fixup_inner_anons, pad_free, pad_leavemy, pad_new,
pad_push, pad_reset, pad_setsv, pad_swipe, pad_tidy, pad_undef
a4675 2
=item Basic Structure

a4700 6
=item Utilities

=item Implementing PerlIO Layers

C implementations, Perl implementations

a4757 146
=head2 perlhack - How to hack at the Perl internals

=over 4

=item DESCRIPTION

Does concept match the general goals of Perl?, Where is the
implementation?, Backwards compatibility, Could it be a module instead?, Is
the feature generic enough?, Does it potentially introduce new bugs?, Does
it preclude other desirable features?, Is the implementation robust?, Is
the implementation generic enough to be portable?, Is the implementation
tested?, Is there enough documentation?, Is there another way to do it?,
Does it create too much work?, Patches speak louder than words

=over 4

=item Keeping in sync

rsync'ing the source tree, Using rsync over the LAN, Using pushing over the
NFS, rsync'ing the patches

=item Why rsync the source tree

It's easier to rsync the source tree, It's more reliable

=item Why rsync the patches

It's easier to rsync the patches, It's a good reference, Finding a start
point, Finding how to fix a bug, Finding the source of misbehaviour

=item Perlbug administration

=item Submitting patches

L<perlguts>, L<perlxstut> and L<perlxs>, L<perlapi>,
F<Porting/pumpkin.pod>, The perl5-porters FAQ

=item Finding Your Way Around

Core modules, Tests, Documentation, Configure, Interpreter

=item Elements of the interpreter

Startup, Parsing, Optimization, Running

=item Internal Variable Types

=item Op Trees

=item Stacks

Argument stack, Mark stack, Save stack

=item Millions of Macros

=item The .i Targets

=item Poking at Perl

=item Using a source-level debugger

run [args], break function_name, break source.c:xxx, step, next, continue,
finish, 'enter', print

=item gdb macro support

=item Dumping Perl Data Structures

=item Patching

=item Patching a core module

=item Adding a new function to the core

=item Writing a test

F<t/base/>, F<t/cmd/>, F<t/comp/>, F<t/io/>, F<t/lib/>, F<t/op/>,
F<t/pod/>, F<t/run/>, F<t/uni/>, F<t/win32/>, F<t/x2p>, t/base t/comp,
t/cmd t/run t/io t/op, t/lib ext lib

=item Special Make Test Targets

coretest, test.deparse, test.taintwarn, minitest, test.valgrind
check.valgrind utest.valgrind ucheck.valgrind, test.third check.third
utest.third ucheck.third, test.torture torturetest, utest ucheck test.utf8
check.utf8, test_harness

=item Running tests by hand

PERL_CORE=1, PERL_DESTRUCT_LEVEL=2, PERL, PERL_SKIP_TTY_TEST

=back

=item EXTERNAL TOOLS FOR DEBUGGING PERL

=over 4

=item Rational Software's Purify

=item Purify on Unix

-Accflags=-DPURIFY, -Doptimize='-g', -Uusemymalloc, -Dusemultiplicity

=item Purify on NT

DEFINES, USE_MULTI = define, #PERL_MALLOC = define, CFG = Debug

=item valgrind

=item Compaq's/Digital's/HP's Third Degree

=item PERL_DESTRUCT_LEVEL

=item Profiling

=item Gprof Profiling

-a, -b, -e routine, -f routine, -s, -z

=item GCC gcov Profiling

=item Pixie Profiling

-h, -l, -p[rocedures], -h[eavy], -i[nvocations], -l[ines], -testcoverage,
-z[ero]

=item Miscellaneous tricks

=item CONCLUSION

I<The Road goes ever on and on, down from the door where it began.>

=back

=item AUTHOR

=back

=head2 perlbook - Perl book information

=over 4

=item DESCRIPTION

=back

a4939 3
=item Perform correctly when XSUBs call subroutines that exit via
goto(LABEL) and friends

a4989 2
=item Unicode in %ENV

d5028 1
a5028 1
=item Byte to/from UTF-8 and UTF-8 to/from local conversion
d5114 1
a5114 1
=head2 perldoc - Look up Perl documentation in Pod format.
a5117 2
=item SYNOPSIS

d5120 7
a5126 18
=item OPTIONS

B<-h>, B<-v>, B<-t>, B<-u>, B<-m> I<module>, B<-l>, B<-F>, B<-f>
I<perlfunc>, B<-q> I<perlfaq-search-regexp>, B<-T>, B<-d>
I<destination-filename>, B<-o> I<output-formatname>, B<-M> I<module-name>,
B<-w> I<option:value> or B<-w> I<option>, B<-X>,
B<PageName|ModuleName|ProgramName>, B<-n> I<some-formatter>, B<-r>, B<-i>,
B<-V>

=item SECURITY

=item ENVIRONMENT

=item AUTHOR

=back

=head2 perlhist - the Perl history records
d5130 1
a5130 1
=item DESCRIPTION
d5132 2
a5133 1
=item INTRODUCTION
d5135 1
a5135 1
=item THE KEEPERS OF THE PUMPKIN
d5137 1
a5137 1
=over 4
d5139 1
a5139 1
=item PUMPKIN?
d5141 2
a5142 1
=back
d5144 1
a5144 1
=item THE RECORDS
d5146 2
a5147 1
=over 4
d5149 1
a5149 1
=item SELECTED RELEASE SIZES
d5151 2
a5152 1
=item SELECTED PATCH SIZES
d5154 1
a5154 1
=back
d5156 1
a5156 1
=item THE KEEPERS OF THE RECORDS
d5158 1
a5158 1
=back
d5160 1
a5160 1
=head2 perldelta - what is new for perl v5.8.2
d5162 1
a5162 1
=over 4
d5164 1
a5164 1
=item DESCRIPTION
d5166 1
a5166 1
=item Incompatible Changes
d5168 1
a5168 1
=item Core Enhancements
d5170 1
a5170 1
=item Modules and Pragmata
d5172 1
a5172 1
=item Utility Changes
d5174 1
a5174 67
=item New Documentation

=item Performance Enhancements

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item New Tests

=item Known Problems

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl581delta, perldelta - what is new for perl v5.8.1

=over 4

=item DESCRIPTION

=item Incompatible Changes

=over 4

=item Hash Randomisation

=item UTF-8 On Filehandles No Longer Activated By Locale

=item Single-number v-strings are no longer v-strings before "=>"

=item (Win32) The -C Switch Has Been Repurposed

=item (Win32) The /d Switch Of cmd.exe

=back

=item Core Enhancements

=over 4

=item UTF-8 no longer default under UTF-8 locales

=item Unsafe signals again available

=item Tied Arrays with Negative Array Indices

=item local ${$x}

=item Unicode Character Database 4.0.0

=item Deprecation Warnings

=item Miscellaneous Enhancements

=back

=item Modules and Pragmata
d5176 2
a5177 1
=over 4
d5179 1
a5179 1
=item Updated Modules And Pragmata
d5181 1
a5181 8
base, B::Bytecode, B::Concise, B::Deparse, Benchmark, ByteLoader, bytes,
CGI, charnames, CPAN, Data::Dumper, DB_File, Devel::PPPort, Digest::MD5,
Encode, fields, libnet, Math::BigInt, MIME::Base64, NEXT, Net::Ping,
PerlIO::scalar, podlators, Pod::LaTeX, PodParsers, Pod::Perldoc,
Scalar::Util, Storable, strict, Term::ANSIcolor, Test::Harness, Test::More,
Test::Simple, Text::Balanced, Time::HiRes, threads, threads::shared,
Unicode::Collate, Unicode::Normalize, Win32::GetFolderPath,
Win32::GetOSVersion
d5183 1
a5183 1
=back
d5185 1
a5185 1
=item Utility Changes
d5187 1
a5187 1
=item New Documentation
d5189 2
a5190 1
=item Installation and Configuration Improvements
d5192 1
a5192 1
=over 4
d5194 2
a5195 1
=item Platform-specific enhancements
d5199 1
a5199 1
=item Selected Bug Fixes
d5203 1
a5203 1
=item Closures, eval and lexicals
d5205 1
a5205 1
=item Generic fixes
d5207 1
a5207 1
=item Platform-specific fixes
d5209 1
a5209 1
=back
d5211 1
a5211 1
=item New or Changed Diagnostics
d5213 1
a5213 1
=over 4
d5215 1
a5215 1
=item Changed "A thread exited while %d threads were running"
d5217 1
a5217 1
=item Removed "Attempt to clear a restricted hash"
d5219 1
a5219 1
=item New "Illegal declaration of anonymous subroutine"
d5221 1
a5221 1
=item Changed "Invalid range "%s" in transliteration operator"
d5223 1
a5223 1
=item New "Missing control char name in \c"
d5225 1
a5225 1
=item New "Newline in left-justified string for %s"
d5227 2
a5228 1
=item New "Possible precedence problem on bitwise %c operator"
d5230 1
a5230 1
=item New "Pseudo-hashes are deprecated"
d5232 1
a5232 1
=item New "read() on %s filehandle %s"
d5234 1
a5234 1
=item New "5.005 threads are deprecated"
d5236 1
a5236 1
=item New "Tied variable freed while still in use"
d5238 1
a5238 3
=item New "To%s: illegal mapping '%s'"

=item New "Use of freed value in iteration"
d5242 1
a5242 1
=item Changed Internals
d5244 1
a5244 1
=item New Tests
d5246 1
a5246 1
=item Known Problems
d5248 1
a5248 1
=over 4
d5250 1
a5250 1
=item Tied hashes in scalar context
d5252 1
a5252 1
=item Net::Ping 450_service and 510_ping_udp failures
d5254 1
a5254 1
=item B::C
d5258 1
a5258 1
=item Platform Specific Problems
d5262 1
a5262 1
=item EBCDIC Platforms
d5264 1
a5264 11
=item Cygwin 1.5 problems

=item HP-UX: HP cc warnings about sendfile and sendpath

=item IRIX: t/uni/tr_7jis.t falsely failing

=item Mac OS X: no usemymalloc

=item Tru64: No threaded builds with GNU cc (gcc)

=item Win32: sysopen, sysread, syswrite
d5268 1
a5268 5
=item Future Directions

=item Reporting Bugs

=item SEE ALSO
d5272 1
a5272 1
=head2 perl58delta, perldelta - what is new for perl v5.8.0
a5447 2
=item SCO

a5483 16
=head2 perl573delta - what's new for perl v5.7.3

=over 4

=item DESCRIPTION

=item Changes

=item Reporting Bugs

=item SEE ALSO

=item HISTORY

=back

a6998 43
=head2 perlartistic - the Perl Artistic License

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item The "Artistic License"

=over 4

=item Preamble

=item Definitions

"Package", "Standard Version", "Copyright Holder", "You", "Reasonable
copying fee", "Freely Available"

=item Conditions

a), b), c), d), a), b), c), d)

=back

=back

=head2 perlgpl - the GNU General Public License, version 2

=over 4

=item SYNOPSIS

=back

=over 4

=item DESCRIPTION

=item GNU GENERAL PUBLIC LICENSE

=back

a7014 2
=item The usenm option

d7033 10
a7108 10
=head2 perlapollo, README.apollo - Perl version 5 on Apollo DomainOS

=over 4

=item DESCRIPTION

=item AUTHOR

=back

a7158 2
=item Using PerlIO and different encodings on ASCII and EBCDIC partitions

d7175 22
d7242 1
a7242 1
=item Errors on Cygwin
d7254 1
a7254 3
=item NDBM_File and ODBM_File do not work on FAT filesystems

=item C<fork()> failures in io_* tests
d7258 1
a7258 1
Pathnames, Text/Binary, PerlIO, F<.exe>, C<chown()>, Miscellaneous
d7309 44
a7415 2
=item Using perl from HP's porting centre

a7499 2
=item Irix 5.3

a7544 34
=head2 perlmacosx, README.macosx - Perl under Mac OS X

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Installation Prefix

=item libperl and Prebinding

=item Updating Panther

=item Known problems

=item MacPerl

=item Carbon

=item Cocoa

=back

=item Starting From Scratch

=item AUTHOR

=item DATE

=back

d7943 1
a7943 1
=head2 perlos400, README.os400 - Perl version 5 on OS/400
d7951 3
a7953 1
=item Compiling Perl for OS/400 PASE
d7955 1
a7955 1
=item Installing Perl in OS/400 PASE
d7957 1
a7957 1
=item Using Perl in OS/400 PASE
d7959 1
a7959 1
=item Known Problems
d7961 1
a7961 1
=item Perl on ILE
d7965 1
a7965 1
=item AUTHORS
d7997 1
a7997 27
=item BUGS

=item Revision date

=item AUTHOR

=back

=head2 perlqnx, README.qnx - Perl version 5 on QNX

=over 4

=item DESCRIPTION

=over 4

=item Required Software for Compiling Perl on QNX4

/bin/sh, ar, nm, cpp, make

=item Outstanding Issues with Perl on QNX4

=item QNX auxiliary files

qnx/ar, qnx/cpp

=item Outstanding issues with perl under QNX6
d7999 1
a7999 1
=back
d8029 1
a8029 1
=item Environment for Compiling perl on Solaris
d8037 1
a8037 1
=item 64-bit perl on Solaris.
d8039 1
a8039 1
=item Threads in perl on Solaris.
d8041 1
a8041 1
=item Malloc Issues with perl on Solaris.
a8084 2
=item SunOS 4.x

a8107 2
=item DB_File tests failing on Tru64

d8293 47
d8464 12
a8501 2
=item CAVEATS

d8506 1
a8506 1
=head2 bigint - Transparent BigInteger support for Perl
a8527 2
=item CAVEAT

a8555 6
=item METHODS

=item CAVEAT

inf(), NaN(), upgrade()

d8562 2
a8595 2
=item CAVEAT

a8636 2
=item LIMITATIONS

a8651 12
=item CUSTOM ALIASES

=over 4

=item Anonymous hashes

=item Alias file

=item Alias shortcut

=back

a8728 12
=over 4

=item Literal Conversions

=item PerlIO layers for C<STD(IN|OUT)>

=back

=item FEATURES THAT REQUIRE 5.8.1

"NON-EUC" doublebyte encodings, tr//, DATA pseudo-filehandle

d8732 1
a8732 9
I<ENCNAME_IN> ...] ;, use encoding I<ENCNAME> Filter=E<gt>1;, no encoding;

=item The Filter Option

=over 4

=item Filter-related changes at Encode version 1.87

=back
d8742 1
a8742 1
=item tr/// with ranges
d8744 1
a8744 1
Legend of characters above
d8746 1
a8746 1
=back
a8751 4
literals in regex that are longer than 127 bytes, EBCDIC, format

=item HISTORY

d8987 10
d9049 9
a9057 1
=item HISTORY
d9061 2
a9062 1
=head2 subs - Perl pragma to predeclare sub names
d9070 19
d9130 3
a9132 3
$num_octets = utf8::upgrade($string), $success = utf8::downgrade($string[,
FAIL_OK]), utf8::encode($string), utf8::decode($string), $flag =
utf8::is_utf8(STRING), $flag = utf8::valid(STRING)
a9313 27
=item OVERVIEW

=item Utility Functions

=over 4

=item Functions Returning C<B::SV>, C<B::AV>, C<B::HV>, and C<B::CV>
objects

sv_undef, sv_yes, sv_no, svref_2object(SVREF), amagic_generation, init_av,
check_av, begin_av, end_av, comppadlist, regex_padav, main_cv

=item Functions for Examining the Symbol Table

walksymtable(SYMREF, METHOD, RECURSE, PREFIX)

=item Functions Returning C<B::OP> objects or for walking op trees

main_root, main_start, walkoptree(OP, METHOD), walkoptree_debug(DEBUG)

=item Miscellaneous Utility Functions

ppname(OPNUM), hash(STR), cast_I32(I), minus_c, cstring(STR),
perlstring(STR), class(OBJ), threadsv_names

=back

d9320 1
a9320 1
=item B::SV Methods
d9322 1
a9322 1
REFCNT, FLAGS, object_2svref
d9324 1
a9324 1
=item B::IV Methods
d9328 1
a9328 1
=item B::NV Methods
d9332 1
a9332 1
=item B::RV Methods
d9336 1
a9336 1
=item B::PV Methods
d9340 1
a9340 1
=item B::PVMG Methods
d9344 1
a9344 1
=item B::MAGIC Methods
d9348 1
a9348 1
=item B::PVLV Methods
d9352 1
a9352 1
=item B::BM Methods
d9356 1
a9356 1
=item B::GV Methods
d9361 1
a9361 1
=item B::IO Methods
d9366 1
a9366 1
=item B::AV Methods
d9368 1
a9368 1
FILL, MAX, OFF, ARRAY, ARRAYelt, AvFLAGS
d9370 1
a9370 1
=item B::CV Methods
d9372 2
a9373 2
STASH, START, ROOT, GV, FILE, DEPTH, PADLIST, OUTSIDE, OUTSIDE_SEQ, XSUB,
XSUBANY, CvFLAGS, const_sv
d9375 1
a9375 1
=item B::HV Methods
d9381 1
a9381 1
=item B::OP Methods
d9401 1
a9401 1
=item B::PMOP Methods
d9404 1
a9404 1
pmpermflags, precomp, pmoffset
d9418 1
a9418 1
=item B::LOOP Methods
d9422 1
a9422 1
=item B::COP Methods
d9424 1
a9424 1
label, stash, stashpv, file, cop_seq, arybase, line, warnings, io
d9428 8
a9494 2
=item EXAMPLE

d9497 3
a9499 1
B<-b>, B<-H>, B<-k>, B<-o>I<outfile>, B<-s>
d9501 1
a9501 1
=item KNOWN BUGS
d9503 1
a9503 1
=item NOTICE
d9633 1
a9633 1
B<-d>, B<-f>I<FILE>, B<-l>, B<-p>, B<-P>, B<-q>, B<-s>I<LETTERS>, B<C>,
d9682 2
a9683 3
B<context>, B<implicit-read> and B<implicit-write>, B<bare-subs>,
B<dollar-underscore>, B<private-names>, B<undefined-subs>,
B<regexp-variables>, B<all>, B<none>
d9811 1
a9811 1
clearcache ( COUNT ), clearallcache ( ), cmpthese ( COUNT, CODEHASHREF, [
a9814 2
=item :hireswallclock

a9854 2
=item EXAMPLE

d9857 3
a9859 1
B<-b>, B<-H>, B<-k>, B<-o>I<outfile>, B<-s>
d9861 1
a9861 1
=item KNOWN BUGS
d9863 1
a9863 1
=item NOTICE
a10001 2
=item CREATING AN OPTION GROUP

d10032 1
a10032 2
B<Parameters:>, 3. The third option (-align, optional) is an alignment
type, and may be TOP, BOTTOM or MIDDLE
d10062 2
a10063 3
B<path_translated()>, B<remote_host()>, B<script_name()> Return the script
name as a partial URL, for self-refering scripts, B<referer()>, B<auth_type
()>, B<server_name ()>, B<virtual_host ()>, B<server_port ()>,
d10147 1
a10147 1
=item OVERRIDING THE NAME OF THE PROGRAM
a10310 2
=item STATUS

d10527 1
a10527 1
myconfig(), config_sh(), config_re($regex), config_vars(@@names)
d10564 47
a10610 48
C<d__fwalk>, C<d_access>, C<d_accessx>, C<d_aintl>, C<d_alarm>,
C<d_archlib>, C<d_asctime_r>, C<d_atolf>, C<d_atoll>, C<d_attribut>,
C<d_bcmp>, C<d_bcopy>, C<d_bsd>, C<d_bsdgetpgrp>, C<d_bsdsetpgrp>,
C<d_bzero>, C<d_casti32>, C<d_castneg>, C<d_charvspr>, C<d_chown>,
C<d_chroot>, C<d_chsize>, C<d_class>, C<d_closedir>, C<d_cmsghdr_s>,
C<d_const>, C<d_copysignl>, C<d_crypt>, C<d_crypt_r>, C<d_csh>,
C<d_ctermid_r>, C<d_ctime_r>, C<d_cuserid>, C<d_dbl_dig>,
C<d_dbminitproto>, C<d_difftime>, C<d_dirfd>, C<d_dirnamlen>, C<d_dlerror>,
C<d_dlopen>, C<d_dlsymun>, C<d_dosuid>, C<d_drand48_r>, C<d_drand48proto>,
C<d_dup2>, C<d_eaccess>, C<d_endgrent>, C<d_endgrent_r>, C<d_endhent>,
C<d_endhostent_r>, C<d_endnent>, C<d_endnetent_r>, C<d_endpent>,
C<d_endprotoent_r>, C<d_endpwent>, C<d_endpwent_r>, C<d_endsent>,
C<d_endservent_r>, C<d_eofnblk>, C<d_eunice>, C<d_faststdio>, C<d_fchdir>,
C<d_fchmod>, C<d_fchown>, C<d_fcntl>, C<d_fcntl_can_lock>, C<d_fd_macros>,
C<d_fd_set>, C<d_fds_bits>, C<d_fgetpos>, C<d_finite>, C<d_finitel>,
C<d_flexfnam>, C<d_flock>, C<d_flockproto>, C<d_fork>, C<d_fp_class>,
C<d_fpathconf>, C<d_fpclass>, C<d_fpclassify>, C<d_fpclassl>,
C<d_fpos64_t>, C<d_frexpl>, C<d_fs_data_s>, C<d_fseeko>, C<d_fsetpos>,
C<d_fstatfs>, C<d_fstatvfs>, C<d_fsync>, C<d_ftello>, C<d_ftime>,
C<d_Gconvert>, C<d_getcwd>, C<d_getespwnam>, C<d_getfsstat>, C<d_getgrent>,
C<d_getgrent_r>, C<d_getgrgid_r>, C<d_getgrnam_r>, C<d_getgrps>,
C<d_gethbyaddr>, C<d_gethbyname>, C<d_gethent>, C<d_gethname>,
C<d_gethostbyaddr_r>, C<d_gethostbyname_r>, C<d_gethostent_r>,
C<d_gethostprotos>, C<d_getitimer>, C<d_getlogin>, C<d_getlogin_r>,
C<d_getmnt>, C<d_getmntent>, C<d_getnbyaddr>, C<d_getnbyname>,
C<d_getnent>, C<d_getnetbyaddr_r>, C<d_getnetbyname_r>, C<d_getnetent_r>,
C<d_getnetprotos>, C<d_getpagsz>, C<d_getpbyname>, C<d_getpbynumber>,
C<d_getpent>, C<d_getpgid>, C<d_getpgrp2>, C<d_getpgrp>, C<d_getppid>,
C<d_getprior>, C<d_getprotobyname_r>, C<d_getprotobynumber_r>,
C<d_getprotoent_r>, C<d_getprotoprotos>, C<d_getprpwnam>, C<d_getpwent>,
C<d_getpwent_r>, C<d_getpwnam_r>, C<d_getpwuid_r>, C<d_getsbyname>,
C<d_getsbyport>, C<d_getsent>, C<d_getservbyname_r>, C<d_getservbyport_r>,
C<d_getservent_r>, C<d_getservprotos>, C<d_getspnam>, C<d_getspnam_r>,
C<d_gettimeod>, C<d_gmtime_r>, C<d_gnulibc>, C<d_grpasswd>, C<d_hasmntopt>,
C<d_htonl>, C<d_ilogbl>, C<d_index>, C<d_inetaton>, C<d_int64_t>,
C<d_isascii>, C<d_isfinite>, C<d_isinf>, C<d_isnan>, C<d_isnanl>,
C<d_killpg>, C<d_lchown>, C<d_ldbl_dig>, C<d_link>, C<d_localtime_r>,
C<d_locconv>, C<d_lockf>, C<d_longdbl>, C<d_longlong>, C<d_lseekproto>,
C<d_lstat>, C<d_madvise>, C<d_mblen>, C<d_mbstowcs>, C<d_mbtowc>,
C<d_memchr>, C<d_memcmp>, C<d_memcpy>, C<d_memmove>, C<d_memset>,
C<d_mkdir>, C<d_mkdtemp>, C<d_mkfifo>, C<d_mkstemp>, C<d_mkstemps>,
C<d_mktime>, C<d_mmap>, C<d_modfl>, C<d_modfl_pow32_bug>, C<d_modflproto>,
C<d_mprotect>, C<d_msg>, C<d_msg_ctrunc>, C<d_msg_dontroute>, C<d_msg_oob>,
C<d_msg_peek>, C<d_msg_proxy>, C<d_msgctl>, C<d_msgget>, C<d_msghdr_s>,
C<d_msgrcv>, C<d_msgsnd>, C<d_msync>, C<d_munmap>, C<d_mymalloc>,
C<d_nanosleep>, C<d_nice>, C<d_nl_langinfo>, C<d_nv_preserves_uv>,
C<d_off64_t>, C<d_old_pthread_create_joinable>, C<d_oldpthreads>,
C<d_oldsock>, C<d_open3>, C<d_pathconf>, C<d_pause>,
d10615 22
a10636 23
C<d_pthread_atfork>, C<d_pthread_attr_setscope>, C<d_pthread_yield>,
C<d_pwage>, C<d_pwchange>, C<d_pwclass>, C<d_pwcomment>, C<d_pwexpire>,
C<d_pwgecos>, C<d_pwpasswd>, C<d_pwquota>, C<d_qgcvt>, C<d_quad>,
C<d_random_r>, C<d_readdir64_r>, C<d_readdir>, C<d_readdir_r>,
C<d_readlink>, C<d_readv>, C<d_recvmsg>, C<d_rename>, C<d_rewinddir>,
C<d_rmdir>, C<d_safebcpy>, C<d_safemcpy>, C<d_sanemcmp>, C<d_sbrkproto>,
C<d_scalbnl>, C<d_sched_yield>, C<d_scm_rights>, C<d_SCNfldbl>,
C<d_seekdir>, C<d_select>, C<d_sem>, C<d_semctl>, C<d_semctl_semid_ds>,
C<d_semctl_semun>, C<d_semget>, C<d_semop>, C<d_sendmsg>, C<d_setegid>,
C<d_seteuid>, C<d_setgrent>, C<d_setgrent_r>, C<d_setgrps>, C<d_sethent>,
C<d_sethostent_r>, C<d_setitimer>, C<d_setlinebuf>, C<d_setlocale>,
C<d_setlocale_r>, C<d_setnent>, C<d_setnetent_r>, C<d_setpent>,
C<d_setpgid>, C<d_setpgrp2>, C<d_setpgrp>, C<d_setprior>,
C<d_setproctitle>, C<d_setprotoent_r>, C<d_setpwent>, C<d_setpwent_r>,
C<d_setregid>, C<d_setresgid>, C<d_setresuid>, C<d_setreuid>, C<d_setrgid>,
C<d_setruid>, C<d_setsent>, C<d_setservent_r>, C<d_setsid>, C<d_setvbuf>,
C<d_sfio>, C<d_shm>, C<d_shmat>, C<d_shmatprototype>, C<d_shmctl>,
C<d_shmdt>, C<d_shmget>, C<d_sigaction>, C<d_sigprocmask>, C<d_sigsetjmp>,
C<d_sockatmark>, C<d_sockatmarkproto>, C<d_socket>, C<d_socklen_t>,
C<d_sockpair>, C<d_socks5_init>, C<d_sqrtl>, C<d_srand48_r>,
C<d_srandom_r>, C<d_sresgproto>, C<d_sresuproto>, C<d_statblks>,
C<d_statfs_f_flags>, C<d_statfs_s>, C<d_statvfs>, C<d_stdio_cnt_lval>,
C<d_stdio_ptr_lval>, C<d_stdio_ptr_lval_nochange_cnt>,
d10648 6
a10653 7
C<d_vendorbin>, C<d_vendorlib>, C<d_vendorscript>, C<d_vfork>,
C<d_void_closedir>, C<d_voidsig>, C<d_voidtty>, C<d_volatile>,
C<d_vprintf>, C<d_wait4>, C<d_waitpid>, C<d_wcstombs>, C<d_wctomb>,
C<d_writev>, C<d_xenix>, C<date>, C<db_hashtype>, C<db_prefixtype>,
C<db_version_major>, C<db_version_minor>, C<db_version_patch>,
C<defvoidused>, C<direntrytype>, C<dlext>, C<dlsrc>, C<doublesize>,
C<drand01>, C<drand48_r_proto>, C<dynamic_ext>
d10670 10
a10679 10
C<gccansipedantic>, C<gccosandvers>, C<gccversion>, C<getgrent_r_proto>,
C<getgrgid_r_proto>, C<getgrnam_r_proto>, C<gethostbyaddr_r_proto>,
C<gethostbyname_r_proto>, C<gethostent_r_proto>, C<getlogin_r_proto>,
C<getnetbyaddr_r_proto>, C<getnetbyname_r_proto>, C<getnetent_r_proto>,
C<getprotobyname_r_proto>, C<getprotobynumber_r_proto>,
C<getprotoent_r_proto>, C<getpwent_r_proto>, C<getpwnam_r_proto>,
C<getpwuid_r_proto>, C<getservbyname_r_proto>, C<getservbyport_r_proto>,
C<getservent_r_proto>, C<getspnam_r_proto>, C<gidformat>, C<gidsign>,
C<gidsize>, C<gidtype>, C<glibpth>, C<gmake>, C<gmtime_r_proto>,
C<gnulibc_version>, C<grep>, C<groupcat>, C<groupstype>, C<gzip>
d10683 1
a10683 2
C<h_fcntl>, C<h_sysfile>, C<hint>, C<hostcat>, C<html1dir>, C<html1direxp>,
C<html3dir>, C<html3direxp>
d10705 6
a10710 10
C<incpath>, C<inews>, C<installarchlib>, C<installbin>, C<installhtml1dir>,
C<installhtml3dir>, C<installman1dir>, C<installman3dir>, C<installprefix>,
C<installprefixexp>, C<installprivlib>, C<installscript>,
C<installsitearch>, C<installsitebin>, C<installsitehtml1dir>,
C<installsitehtml3dir>, C<installsitelib>, C<installsiteman1dir>,
C<installsiteman3dir>, C<installsitescript>, C<installstyle>,
C<installusrbinperl>, C<installvendorarch>, C<installvendorbin>,
C<installvendorhtml1dir>, C<installvendorhtml3dir>, C<installvendorlib>,
C<installvendorman1dir>, C<installvendorman3dir>, C<installvendorscript>,
C<intsize>, C<issymlink>, C<ivdformat>, C<ivsize>, C<ivtype>
d10734 2
a10735 3
C<Mcc>, C<mips_type>, C<mistrustnm>, C<mkdir>, C<mmaptype>, C<modetype>,
C<more>, C<multiarch>, C<mv>, C<myarchname>, C<mydomain>, C<myhostname>,
C<myuname>
d10781 10
a10790 13
C<sitebinexp>, C<sitehtml1dir>, C<sitehtml1direxp>, C<sitehtml3dir>,
C<sitehtml3direxp>, C<sitelib>, C<sitelib_stem>, C<sitelibexp>,
C<siteman1dir>, C<siteman1direxp>, C<siteman3dir>, C<siteman3direxp>,
C<siteprefix>, C<siteprefixexp>, C<sitescript>, C<sitescriptexp>,
C<sizesize>, C<sizetype>, C<sleep>, C<smail>, C<so>, C<sockethdr>,
C<socketlib>, C<socksizetype>, C<sort>, C<spackage>, C<spitshell>,
C<sPRId64>, C<sPRIeldbl>, C<sPRIEUldbl>, C<sPRIfldbl>, C<sPRIFUldbl>,
C<sPRIgldbl>, C<sPRIGUldbl>, C<sPRIi64>, C<sPRIo64>, C<sPRIu64>,
C<sPRIx64>, C<sPRIXU64>, C<srand48_r_proto>, C<srandom_r_proto>, C<src>,
C<sSCNfldbl>, C<ssizetype>, C<startperl>, C<startsh>, C<static_ext>,
C<stdchar>, C<stdio_base>, C<stdio_bufsiz>, C<stdio_cnt>, C<stdio_filbuf>,
C<stdio_ptr>, C<stdio_stream_array>, C<strerror_r_proto>, C<strings>,
C<submit>, C<subversion>, C<sysman>
d10803 6
a10808 7
C<use64bitint>, C<usecrosscompile>, C<usedl>, C<usefaststdio>,
C<useithreads>, C<uselargefiles>, C<uselongdouble>, C<usemorebits>,
C<usemultiplicity>, C<usemymalloc>, C<usenm>, C<useopcode>, C<useperlio>,
C<useposix>, C<usereentrant>, C<usesfio>, C<useshrplib>, C<usesocks>,
C<usethreads>, C<usevendorprefix>, C<usevfork>, C<usrinc>, C<uuname>,
C<uvoformat>, C<uvsize>, C<uvtype>, C<uvuformat>, C<uvxformat>,
C<uvXUformat>
d10813 2
a10814 5
C<vendorhtml1dir>, C<vendorhtml1direxp>, C<vendorhtml3dir>,
C<vendorhtml3direxp>, C<vendorlib>, C<vendorlib_stem>, C<vendorlibexp>,
C<vendorman1dir>, C<vendorman1direxp>, C<vendorman3dir>,
C<vendorman3direxp>, C<vendorprefix>, C<vendorprefixexp>, C<vendorscript>,
C<vendorscriptexp>, C<version>, C<version_patchlevel_string>,
d11060 16
a11085 6
=over 4

=item NOTE

=back

d11114 1
a11114 1
=head2 Devel::PPPort - Perl/Pollution/Portability
d11209 2
a11210 3
Digest::XXX->new($arg,...), $other_ctx = $ctx->clone, $ctx->reset,
$ctx->add($data,...), $ctx->addfile($io_handle), $ctx->digest,
$ctx->hexdigest, $ctx->b64digest
d11232 1
a11232 1
$md5 = Digest::MD5->new, $md5->reset, $md5->clone, $md5->add($data,...),
d11293 1
a11293 1
dl_load_file(), dl_unload_file(), dl_load_flags(), dl_find_symbol(),
a11309 18
=over 4

=item Migration from C<DynaLoader>

=item Backward compatible boilerplate

=back

=item Order of initialization: early load()

=over 4

=item The most hairy case

=back

=item LIMITATIONS

d11420 1
a11420 1
=head2 Encode::CJKConstants -- Internally used by Encode::??::ISO_2022_*
d11468 1
a11468 2
-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check]),
-E<gt>cat_decode($destination, $octets, $offset, $terminator [,$check])
d11472 1
a11472 1
-E<gt>name, -E<gt>renew, -E<gt>perlio_ok(), -E<gt>needs_lines()
d11576 1
a11576 1
=item Line Buffering
d11580 2
a11731 14
=head2 Encode::Unicode::UTF7 -- UTF-7 encoding

=over 4

=item SYNOPSIS

=item ABSTRACT

=item In Practice

=item SEE ALSO

=back

d11754 1
a11754 1
=head2 Encode::lib::Encode::CJKConstants, Encode::CJKConstants.pm --
d11776 1
a11776 2
-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check]),
-E<gt>cat_decode($destination, $octets, $offset, $terminator [,$check])
d11780 1
a11780 1
-E<gt>name, -E<gt>renew, -E<gt>perlio_ok(), -E<gt>needs_lines()
d11858 1
a11858 1
=item Line Buffering
d11862 2
d11957 1
a11957 2
=head2 Encode::lib::Encode::Unicode::UTF7, Encode::Unicode::UTF7 -- UTF-7
encoding
d11963 14
a11976 13
=item ABSTRACT

=item In Practice

=item SEE ALSO

=back

=head2 Encode::lib::Encoder, Encode::Encoder -- Object Oriented Encoder

=over 4

=item SYNOPSIS
a12008 12
=over 4

=item Literal Conversions

=item PerlIO layers for C<STD(IN|OUT)>

=back

=item FEATURES THAT REQUIRE 5.8.1

"NON-EUC" doublebyte encodings, tr//, DATA pseudo-filehandle

d12012 1
a12012 9
I<ENCNAME_IN> ...] ;, use encoding I<ENCNAME> Filter=E<gt>1;, no encoding;

=item The Filter Option

=over 4

=item Filter-related changes at Encode version 1.87

=back
d12022 1
a12022 1
=item tr/// with ranges
d12024 1
a12024 1
Legend of characters above
d12026 1
a12026 1
=back
a12031 4
literals in regex that are longer than 127 bytes, EBCDIC, format

=item HISTORY

d12042 15
a12227 8
B<pod2man>

B<warn_if_old_packlist>

B<perllocal_install>

B<uninstall>

d12309 1
a12309 25
=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Functions

B<install>

=back

=back

B<install_default> I<DISCOURAGED>

B<uninstall>

B<pm_to_blib>

_autosplit

=over 4

=item ENVIRONMENT
d12311 1
a12311 5
B<PERL_INSTALL_ROOT>

=item AUTHOR

=item LICENSE
d12381 1
a12381 1
=head2 ExtUtils::MM_Any - Platform-agnostic MM methods
a12390 6
installvars

=back

os_flavor_is

d12393 1
a12393 1
=item File::Spec wrappers
d12395 1
a12395 1
catfile
a12398 6
=over 4

=item Thought To Be Cross-Platform Methods

B<split_command>

d12401 1
a12401 1
B<echo>
d12403 1
a12403 1
init_VERSION
d12405 1
a12405 1
wraplist
d12407 1
a12407 1
manifypods
d12409 1
a12409 1
manifypods_target
d12411 1
a12411 1
makemakerdflt_target
d12413 1
a12413 21
special_targets

POD2MAN_macro

test_via_harness

test_via_script

libscan

tool_autosplit

all_target

metafile_target

signature_target

metafile_addtomanifest_target

signature_addtomanifest_target
d12417 1
a12417 1
=item Abstract methods
d12419 1
a12419 3
oneliner, B<quote_literal>, B<escape_newlines>, max_exec_len,
B<init_others>, init_DIRFILESEP, init_linker, init_platform,
platform_constants
d12423 1
a12423 1
os_flavor
d12442 1
a12442 3
os_flavor (o)

init_linker
d12453 1
a12453 1
os_flavor (o)
a12456 6
cflags (o)

replace_manpage_separator (o)

init_linker

d12469 1
a12469 1
os_flavor
a12474 2
B<replace_manpage_separator>

a12505 2
init_platform, platform_constants

d12508 1
a12508 1
init_VERSION (o)
d12510 1
a12510 1
special_targets (o)
a12519 2
clean_subdirs_target

a12521 2
realclean_subdirs_target

a12525 2
os_flavor

d12537 1
a12537 5
os_flavor

init_platform (o), platform_constants

const_cccmd (o)
a12553 2
init_dist (o)

d12556 1
a12556 3
init_linker

os_flavor
d12570 1
a12570 1
os_flavor
a12575 2
B<replace_manpage_separator>

d12598 1
a12598 1
=item Methods
d12600 1
a12600 1
os_flavor (o)
a12603 2
c_o (o)

a12607 2
clean_subdirs_target

a12619 4
init_DEST

init_dist

d12628 1
a12628 15
B<dist_target>

B<tardist_target>

B<zipdist_target>

B<tarfile_target>

zipfile_target

uutardist_target

shdist_target

distdir
a12663 2
init_DIRFILESEP

a12671 2
init_linker

a12675 2
init_platform (o), platform_constants (o)

a12677 2
init_xs

d12682 2
d12694 2
d12698 2
a12735 2
realclean_subdirs_target

a12737 8
oneliner (o)

quote_literal

escape_newlines

max_exec_len

d12754 2
a12759 2
all_target

d12770 6
d12813 2
a12818 4
init_DEST

init_DIRFILESEP

a12822 6
init_platform (override)

platform_constants

init_VERSION (override)

a12824 2
special_targets

d12829 4
d12835 2
d12839 1
a12839 1
init_dist (override)
d12847 2
d12857 2
a12866 2
clean_subdirs_target

d12869 1
a12869 1
zipfile_target (o), tarfile_target (o), shdist_target (o)
a12888 18
oneliner (o)

B<echo> (o)

quote_literal

escape_newlines

max_exec_len

init_linker (o)

eliminate_macros

fixpath

os_flavor

d12900 1
a12900 1
=over 4
d12902 1
a12902 1
=item Overridden methods
d12904 1
a12904 1
B<dlsyms>
d12906 1
a12906 1
=back
d12908 1
a12908 1
replace_manpage_separator
d12910 1
a12910 1
B<maybe_command>
d12912 1
a12912 1
B<find_tests>
d12914 1
a12914 1
B<init_DIRFILESEP>
d12916 1
a12916 1
B<init_others>
d12918 1
a12918 1
init_platform (o), platform_constants (o)
d12920 1
a12920 1
special_targets (o)
d12922 1
a12922 1
static_lib (o)
d12924 1
a12924 9
dynamic_lib (o)

clean

init_linker

perl_script

xs_o (o)
a12927 6
oneliner (o)

max_exec_len

os_flavor

a12935 28
=over 4

=item Overriden methods

dist_test

=back

=back

subdir_x

xs_c

xs_cpp

xs_o

clean_subdirs_target

realclean_subdirs_target

os_flavor

=over 4

=item AUTHOR

d12948 1
a12948 1
=head2 ExtUtils::MakeMaker - Create a module Makefile
d12981 10
a12990 11
CONFIGURE, DEFINE, DESTDIR, DIR, DISTNAME, DISTVNAME, DL_FUNCS, DL_VARS,
EXCLUDE_EXT, EXE_FILES, FIRST_MAKEFILE, FULLPERL, FULLPERLRUN,
FULLPERLRUNINST, FUNCLIST, H, IMPORTS, INC, INCLUDE_EXT, INSTALLARCHLIB,
INSTALLBIN, INSTALLDIRS, INSTALLMAN1DIR, INSTALLMAN3DIR, INSTALLPRIVLIB,
INSTALLSCRIPT, INSTALLSITEARCH, INSTALLSITEBIN, INSTALLSITELIB,
INSTALLSITEMAN1DIR, INSTALLSITEMAN3DIR, INSTALLVENDORARCH,
INSTALLVENDORBIN, INSTALLVENDORLIB, INSTALLVENDORMAN1DIR,
INSTALLVENDORMAN3DIR, INST_ARCHLIB, INST_BIN, INST_LIB, INST_MAN1DIR,
INST_MAN3DIR, INST_SCRIPT, LD, LDDLFLAGS, LDFROM, LIB, LIBPERL_A, LIBS,
LINKTYPE, MAKEAPERL, MAKEFILE_OLD, MAN1PODS, MAN3PODS, MAP_TARGET,
MYEXTLIB, NAME, NEEDS_LINKING, NOECHO, NORECURS, NO_META, NO_VC, OBJECT,
d12992 2
a12993 2
PERL_MALLOC_OK, PERLPREFIX, PERLRUN, PERLRUNINST, PERL_SRC, PERM_RW,
PERM_RWX, PL_FILES, PM, PMLIBDIRS, PM_FILTER, POLLUTE, PPM_INSTALL_EXEC,
d12995 2
a12996 2
PRINT_PREREQ, SITEPREFIX, SIGN, SKIP, TYPEMAPS, VENDORPREFIX, VERBINST,
VERSION, VERSION_FROM, VERSION_SYM, XS, XSOPT, XSPROTOARG, XS_VERSION
d13000 2
a13001 2
clean, depend, dist, dynamic_lib, linkext, macro, postamble, realclean,
test, tool_autosplit
a13016 2
=item Module Meta-Data

a13018 113
=item Other Handy Functions

prompt

=back

=item ENVIRONMENT

PERL_MM_OPT, PERL_MM_USE_DEFAULT

=item SEE ALSO

=item AUTHORS

=item LICENSE

=back

=head2 ExtUtils::MakeMaker::FAQ - Frequently Asked Questions About
MakeMaker

=over 4

=item DESCRIPTION

=over 4

=item Philosophy and History

Why not just use <insert other build config tool here>?, What's
Module::Build and how does it relate to MakeMaker?, pure perl.	no make, no
shell commands, easier to customize, cleaner internals, less cruft

=item Module Writing

How do I keep my $VERSION up to date without resetting it manually?, What's
this F<META.yml> thing and how did it get in my F<MANIFEST>?!

=item XS

How to I prevent "object version X.XX does not match bootstrap parameter
Y.YY" errors?, How do I make two or more XS files coexist in the same
directory?

=back

=item PATCHING

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MakeMaker::Tutorial - Writing a module with MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The Mantra

=item The Layout

Makefile.PL, MANIFEST, lib/, t/, Changes, README, INSTALL, MANIFEST.SKIP,
bin/

=back

=item SEE ALSO

=back

=head2 ExtUtils::MakeMaker::bytes - Version agnostic bytes.pm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MakeMaker::vmsish - Platform agnostic vmsish.pm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::Manifest - utilities to write and check a MANIFEST file

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Functions

mkmanifest

=back

d13021 1
a13021 1
manifind
d13023 1
a13023 1
manicheck
d13025 1
a13025 1
filecheck
d13027 1
a13027 1
fullcheck
d13029 1
a13029 1
skipcheck
d13031 1
a13031 1
maniread
d13033 1
a13033 1
manicopy
d13035 1
a13035 1
maniadd
d13037 1
a13037 3
=over 4

=item MANIFEST
a13044 4
=back

=over 4

a13312 2
=item DIAGNOSTICS

a13346 6
canonpath

file_name_is_absolute

tmpdir (override)

d13355 1
a13355 1
=item AUTHORS
a13358 2
canonpath()

d13433 8
a13448 2
tmpdir, splitpath

a13613 12
=item OO INTERFACE

B<new>

=back

B<filename>

B<DESTROY>

=over 4

a13661 4
B<cmpstat>

B<unlink1>

a13719 2
=item NOTES

d13923 1
a13923 2
(default: disabled), auto_version (default:disabled), auto_help
(default:disabled), pass_through (default: disabled), prefix,
a13925 4
=item Exportable Methods

VersionMessage, C<-message>, C<-msg>, C<-exitval>, C<-output>, HelpMessage

d13944 2
a13950 2
=item Undefined subroutine &main::GetOptions called

a13969 2
=item C<--help> and C<--version>

a13993 2
B<hash_seed>

a13995 2
=item CAVEATS

d14070 44
a14113 46
{ab} : Abkhazian, {ace} : Achinese, {ach} : Acoli, {ada} : Adangme, {ady} :
Adyghe, {aa} : Afar, {afh} : Afrihili, {af} : Afrikaans, [{afa} :
Afro-Asiatic (Other)], {ak} : Akan, {akk} : Akkadian, {sq} : Albanian,
{ale} : Aleut, [{alg} : Algonquian languages], [{tut} : Altaic (Other)],
{am} : Amharic, {i-ami} : Ami, [{apa} : Apache languages], {ar} : Arabic,
{arc} : Aramaic, {arp} : Arapaho, {arn} : Araucanian, {arw} : Arawak, {hy}
: Armenian, {an} : Aragonese, [{art} : Artificial (Other)], {ast} :
Asturian, {as} : Assamese, [{ath} : Athapascan languages], [{aus} :
Australian languages], [{map} : Austronesian (Other)], {av} : Avaric, {ae}
: Avestan, {awa} : Awadhi, {ay} : Aymara, {az} : Azerbaijani, {ban} :
Balinese, [{bat} : Baltic (Other)], {bal} : Baluchi, {bm} : Bambara, [{bai}
: Bamileke languages], {bad} : Banda, [{bnt} : Bantu (Other)], {bas} :
Basa, {ba} : Bashkir, {eu} : Basque, {btk} : Batak (Indonesia), {bej} :
Beja, {be} : Belarusian, {bem} : Bemba, {bn} : Bengali, [{ber} : Berber
(Other)], {bho} : Bhojpuri, {bh} : Bihari, {bik} : Bikol, {bin} : Bini,
{bi} : Bislama, {bs} : Bosnian, {bra} : Braj, {br} : Breton, {bug} :
Buginese, {bg} : Bulgarian, {i-bnn} : Bunun, {bua} : Buriat, {my} :
Burmese, {cad} : Caddo, {car} : Carib, {ca} : Catalan, [{cau} : Caucasian
(Other)], {ceb} : Cebuano, [{cel} : Celtic (Other)], [{cai} : Central
American Indian (Other)], {chg} : Chagatai, [{cmc} : Chamic languages],
{ch} : Chamorro, {ce} : Chechen, {chr} : Cherokee, {chy} : Cheyenne, {chb}
: Chibcha, {ny} : Chichewa, {zh} : Chinese, {chn} : Chinook Jargon, {chp} :
Chipewyan, {cho} : Choctaw, {cu} : Church Slavic, {chk} : Chuukese, {cv} :
Chuvash, {cop} : Coptic, {kw} : Cornish, {co} : Corsican, {cr} : Cree,
{mus} : Creek, [{cpe} : English-based Creoles and pidgins (Other)], [{cpf}
: French-based Creoles and pidgins (Other)], [{cpp} : Portuguese-based
Creoles and pidgins (Other)], [{crp} : Creoles and pidgins (Other)], {hr} :
Croatian, [{cus} : Cushitic (Other)], {cs} : Czech, {dak} : Dakota, {da} :
Danish, {dar} : Dargwa, {day} : Dayak, {i-default} : Default (Fallthru)
Language, {del} : Delaware, {din} : Dinka, {dv} : Divehi, {doi} : Dogri,
{dgr} : Dogrib, [{dra} : Dravidian (Other)], {dua} : Duala, {nl} : Dutch,
{dum} : Middle Dutch (ca.1050-1350), {dyu} : Dyula, {dz} : Dzongkha, {efi}
: Efik, {egy} : Ancient Egyptian, {eka} : Ekajuk, {elx} : Elamite, {en} :
English, {enm} : Old English (1100-1500), {ang} : Old English
(ca.450-1100), {i-enochian} : Enochian (Artificial), {myv} : Erzya, {eo} :
Esperanto, {et} : Estonian, {ee} : Ewe, {ewo} : Ewondo, {fan} : Fang, {fat}
: Fanti, {fo} : Faroese, {fj} : Fijian, {fi} : Finnish, [{fiu} :
Finno-Ugrian (Other)], {fon} : Fon, {fr} : French, {frm} : Middle French
(ca.1400-1600), {fro} : Old French (842-ca.1400), {fy} : Frisian, {fur} :
Friulian, {ff} : Fulah, {gaa} : Ga, {gd} : Scots Gaelic, {gl} : Gallegan,
{lg} : Ganda, {gay} : Gayo, {gba} : Gbaya, {gez} : Geez, {ka} : Georgian,
{de} : German, {gmh} : Middle High German (ca.1050-1500), {goh} : Old High
German (ca.750-1050), [{gem} : Germanic (Other)], {gil} : Gilbertese, {gon}
: Gondi, {gor} : Gorontalo, {got} : Gothic, {grb} : Grebo, {grc} : Ancient
Greek, {el} : Modern Greek, {gn} : Guarani, {gu} : Gujarati, {gwi} :
Gwich'in, {hai} : Haida, {ht} : Haitian, {ha} : Hausa, {haw} : Hawaiian,
d14116 30
a14145 33
{hup} : Hupa, {iba} : Iban, {is} : Icelandic, {io} : Ido, {ig} : Igbo,
{ijo} : Ijo, {ilo} : Iloko, [{inc} : Indic (Other)], [{ine} : Indo-European
(Other)], {id} : Indonesian, {inh} : Ingush, {ia} : Interlingua
(International Auxiliary Language Association), {ie} : Interlingue, {iu} :
Inuktitut, {ik} : Inupiaq, [{ira} : Iranian (Other)], {ga} : Irish, {mga} :
Middle Irish (900-1200), {sga} : Old Irish (to 900), [{iro} : Iroquoian
languages], {it} : Italian, {ja} : Japanese, {jv} : Javanese, {jrb} :
Judeo-Arabic, {jpr} : Judeo-Persian, {kbd} : Kabardian, {kab} : Kabyle,
{kac} : Kachin, {kl} : Kalaallisut, {xal} : Kalmyk, {kam} : Kamba, {kn} :
Kannada, {kr} : Kanuri, {krc} : Karachay-Balkar, {kaa} : Kara-Kalpak, {kar}
: Karen, {ks} : Kashmiri, {csb} : Kashubian, {kaw} : Kawi, {kk} : Kazakh,
{kha} : Khasi, {km} : Khmer, [{khi} : Khoisan (Other)], {kho} : Khotanese,
{ki} : Kikuyu, {kmb} : Kimbundu, {rw} : Kinyarwanda, {ky} : Kirghiz,
{i-klingon} : Klingon, {kv} : Komi, {kg} : Kongo, {kok} : Konkani, {ko} :
Korean, {kos} : Kosraean, {kpe} : Kpelle, {kro} : Kru, {kj} : Kuanyama,
{kum} : Kumyk, {ku} : Kurdish, {kru} : Kurukh, {kut} : Kutenai, {lad} :
Ladino, {lah} : Lahnda, {lam} : Lamba, {lo} : Lao, {la} : Latin, {lv} :
Latvian, {lb} : Letzeburgesch, {lez} : Lezghian, {li} : Limburgish, {ln} :
Lingala, {lt} : Lithuanian, {nds} : Low German, {art-lojban} : Lojban
(Artificial), {loz} : Lozi, {lu} : Luba-Katanga, {lua} : Luba-Lulua, {lui}
: Luiseno, {lun} : Lunda, {luo} : Luo (Kenya and Tanzania), {lus} : Lushai,
{mk} : Macedonian, {mad} : Madurese, {mag} : Magahi, {mai} : Maithili,
{mak} : Makasar, {mg} : Malagasy, {ms} : Malay, {ml} : Malayalam, {mt} :
Maltese, {mnc} : Manchu, {mdr} : Mandar, {man} : Mandingo, {mni} :
Manipuri, [{mno} : Manobo languages], {gv} : Manx, {mi} : Maori, {mr} :
Marathi, {chm} : Mari, {mh} : Marshall, {mwr} : Marwari, {mas} : Masai,
[{myn} : Mayan languages], {men} : Mende, {mic} : Micmac, {min} :
Minangkabau, {i-mingo} : Mingo, [{mis} : Miscellaneous languages], {moh} :
Mohawk, {mdf} : Moksha, {mo} : Moldavian, [{mkh} : Mon-Khmer (Other)],
{lol} : Mongo, {mn} : Mongolian, {mos} : Mossi, [{mul} : Multiple
languages], [{mun} : Munda languages], {nah} : Nahuatl, {nap} : Neapolitan,
{na} : Nauru, {nv} : Navajo, {nd} : North Ndebele, {nr} : South Ndebele,
{ng} : Ndonga, {ne} : Nepali, {new} : Newari, {nia} : Nias, [{nic} :
d14147 5
a14151 5
{nog} : Nogai, {non} : Old Norse, [{nai} : North American Indian], {no} :
Norwegian, {nb} : Norwegian Bokmal, {nn} : Norwegian Nynorsk, [{nub} :
Nubian languages], {nym} : Nyamwezi, {nyn} : Nyankole, {nyo} : Nyoro, {nzi}
: Nzima, {oc} : Occitan (post 1500), {oj} : Ojibwa, {or} : Oriya, {om} :
Oromo, {osa} : Osage, {os} : Ossetian; Ossetic, [{oto} : Otomian
d14161 28
a14188 31
languages], {sam} : Samaritan Aramaic, {se} : Northern Sami, {sma} :
Southern Sami, {smn} : Inari Sami, {smj} : Lule Sami, {sms} : Skolt Sami,
[{smi} : Sami languages (Other)], {sm} : Samoan, {sad} : Sandawe, {sg} :
Sango, {sa} : Sanskrit, {sat} : Santali, {sc} : Sardinian, {sas} : Sasak,
{sco} : Scots, {sel} : Selkup, [{sem} : Semitic (Other)], {sr} : Serbian,
{srr} : Serer, {shn} : Shan, {sn} : Shona, {sid} : Sidamo, {sgn-...} : Sign
Languages, {bla} : Siksika, {sd} : Sindhi, {si} : Sinhalese, [{sit} :
Sino-Tibetan (Other)], [{sio} : Siouan languages], {den} : Slave
(Athapascan), [{sla} : Slavic (Other)], {sk} : Slovak, {sl} : Slovenian,
{sog} : Sogdian, {so} : Somali, {son} : Songhai, {snk} : Soninke, {wen} :
Sorbian languages, {nso} : Northern Sotho, {st} : Southern Sotho, [{sai} :
South American Indian (Other)], {es} : Spanish, {suk} : Sukuma, {sux} :
Sumerian, {su} : Sundanese, {sus} : Susu, {sw} : Swahili, {ss} : Swati,
{sv} : Swedish, {syr} : Syriac, {tl} : Tagalog, {ty} : Tahitian, [{tai} :
Tai (Other)], {tg} : Tajik, {tmh} : Tamashek, {ta} : Tamil, {i-tao} : Tao,
{tt} : Tatar, {i-tay} : Tayal, {te} : Telugu, {ter} : Tereno, {tet} :
Tetum, {th} : Thai, {bo} : Tibetan, {tig} : Tigre, {ti} : Tigrinya, {tem} :
Timne, {tiv} : Tiv, {tli} : Tlingit, {tpi} : Tok Pisin, {tkl} : Tokelau,
{tog} : Tonga (Nyasa), {to} : Tonga (Tonga Islands), {tsi} : Tsimshian,
{ts} : Tsonga, {i-tsu} : Tsou, {tn} : Tswana, {tum} : Tumbuka, [{tup} :
Tupi languages], {tr} : Turkish, {ota} : Ottoman Turkish (1500-1928), {crh}
: Crimean Turkish, {tk} : Turkmen, {tvl} : Tuvalu, {tyv} : Tuvinian, {tw} :
Twi, {udm} : Udmurt, {uga} : Ugaritic, {ug} : Uighur, {uk} : Ukrainian,
{umb} : Umbundu, {und} : Undetermined, {ur} : Urdu, {uz} : Uzbek, {vai} :
Vai, {ve} : Venda, {vi} : Vietnamese, {vo} : Volapuk, {vot} : Votic, [{wak}
: Wakashan languages], {wa} : Walloon, {wal} : Walamo, {war} : Waray, {was}
: Washo, {cy} : Welsh, {wo} : Wolof, {x-...} : Unregistered (Semi-Private
Use), {xh} : Xhosa, {sah} : Yakut, {yao} : Yao, {yap} : Yapese, {ii} :
Sichuan Yi, {yi} : Yiddish, {yo} : Yoruba, [{ypk} : Yupik languages], {znd}
: Zande, [{zap} : Zapotec], {zen} : Zenaga, {za} : Zhuang, {zu} : Zulu,
{zun} : Zuni
a14227 2
=item DEPRECATED

d14239 1
a14239 1
rewind (), close (), tie %hash, 'IO::Dir', DIRNAME [, OPTIONS ]
d14263 1
a14263 1
open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS )
d14379 1
a14379 1
count (), bits(), select ( READ, WRITE, EXCEPTION [, TIMEOUT ] )
d14477 1
a14477 1
rewind (), close (), tie %hash, 'IO::Dir', DIRNAME [, OPTIONS ]
d14501 1
a14501 1
open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS )
d14620 1
a14620 1
count (), bits(), select ( READ, WRITE, EXCEPTION [, TIMEOUT ] )
d14895 2
a14896 3
blessed EXPR, dualvar NUM, STRING, isvstring EXPR, isweak EXPR,
looks_like_number EXPR, openhandle FH, refaddr EXPR, reftype EXPR,
set_prototype CODEREF, PROTOTYPE, tainted EXPR, weaken REF
d15040 1
a15040 1
=head2 Locale::Maketext - framework for localization
d15177 1
a15177 1
encode_base64($str), encode_base64($str, $eol);, decode_base64($str)
a15186 2
=item SEE ALSO

d15198 1
a15198 1
encode_qp($str), encode_qp($str, $eol), decode_qp($str);
a15201 2
=item SEE ALSO

d15213 1
a15213 1
encode_qp($str), encode_qp($str, $eol), decode_qp($str);
a15216 2
=item SEE ALSO

d15260 1
a15260 1
=item CAVEATS
a15263 2
=item SEE ALSO

d15278 1
a15278 1
Input, Output
a15287 2
=item precision

d15454 1
a15454 2
broot() does not work, Out of Memory!, Fails to load Calc on Perl prior
5.6.0
d15478 1
a15478 3
=item STORAGE

=item METHODS
a15493 21
=head2 Math::BigInt::Scalar - Pure Perl module to test Math::BigInt with
scalars

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item LICENSE

This program is free software; you may redistribute it and/or modify it
under
the same terms as Perl itself. 

=item AUTHOR

=item SEE ALSO

=back

a15529 24
=item bmod()

=item is_one()

=item is_zero()

=item is_positive()

=item is_negative()

=item is_int()

=item is_odd()

=item is_even()

=item bceil()

=item bfloor()

	$x->bfloor();

=item config

a15533 3
inf handling (partial), NaN handling (partial), rounding (not implemented
except for bceil/bfloor), $x ** $y where $y is not an integer

d15774 1
a15774 2
=head2 NEXT - Provide a pseudo-class NEXT (et al) that allows method
redispatch
a15787 4
=item Invoking all versions of a method with a single call

=item Using C<EVERY> methods

d15815 1
a15815 1
ungetline ( TEXT ), rawdatasend ( DATA ), read_until_dot (), tied_fh ()
d15879 12
a15890 12
site (ARGS), ascii, binary, rename ( OLDNAME, NEWNAME ), delete ( FILENAME
), cwd ( [ DIR ] ), cdup (), pwd (), restart ( WHERE ), rmdir ( DIR [,
RECURSE ]), mkdir ( DIR [, RECURSE ]), ls ( [ DIR ] ), alloc ( SIZE [,
RECORD_SIZE] ), dir ( [ DIR ] ), get ( REMOTE_FILE [, LOCAL_FILE [, WHERE]]
), put ( LOCAL_FILE [, REMOTE_FILE ] ), put_unique ( LOCAL_FILE [,
REMOTE_FILE ] ), append ( LOCAL_FILE [, REMOTE_FILE ] ), unique_name (),
mdtm ( FILE ), size ( FILE ), supported ( CMD ), hash (
[FILEHANDLE_GLOB_REF],[ BYTES_PER_HASH_MARK] ), nlst ( [ DIR ] ), list ( [
DIR ] ), retr ( FILE ), stor ( FILE ), stou ( FILE ), appe ( FILE ), port (
[ PORT ] ), pasv (), pasv_xfer ( SRC_FILE, DEST_SERVER [, DEST_FILE ] ),
pasv_xfer_unique ( SRC_FILE, DEST_SERVER [, DEST_FILE ] ), pasv_wait (
NON_PASV_SERVER ), abort (), quit ()
d15907 1
a15907 1
B<SMNT>, B<HELP>, B<MODE>, B<SYST>, B<STAT>, B<STRU>, B<REIN>
d15917 1
a15917 1
http://www.csh.rit.edu/~adam/Progs/
d15981 2
d16016 4
a16019 6
Net::Ping->new([$proto [, $def_timeout [, $bytes [, $device [, $tos
]]]]]);, $p->ping($host [, $timeout]);, $p->source_verify( { 0 | 1 } );,
$p->service_check( { 0 | 1 } );, $p->tcp_service_check( { 0 | 1 } );,
$p->hires( { 0 | 1 } );, $p->bind($local_addr);, $p->open($host);, $p->ack(
[ $host ] );, $p->nack( $failed_ack_host );, $p->close();, pingecho($host
[, $timeout]);
d16023 2
a16028 2
=item BUGS

d16435 11
a16445 11
fstat, fsync, ftell, fwrite, getc, getchar, getcwd, getegid, getenv,
geteuid, getgid, getgrgid, getgrnam, getgroups, getlogin, getpgrp, getpid,
getppid, getpwnam, getpwuid, gets, getuid, gmtime, isalnum, isalpha,
isatty, iscntrl, isdigit, isgraph, islower, isprint, ispunct, isspace,
isupper, isxdigit, kill, labs, ldexp, ldiv, link, localeconv, localtime,
log, log10, longjmp, lseek, malloc, mblen, mbstowcs, mbtowc, memchr,
memcmp, memcpy, memmove, memset, mkdir, mkfifo, mktime, modf, nice,
offsetof, open, opendir, pathconf, pause, perror, pipe, pow, printf, putc,
putchar, puts, qsort, raise, rand, read, readdir, realloc, remove, rename,
rewind, rewinddir, rmdir, scanf, setgid, setjmp, setlocale, setpgid,
setsid, setuid, sigaction, siglongjmp, sigpending, sigprocmask, sigsetjmp,
d16461 1
a16461 1
new, handler, mask, flags, safe
a16556 4
=item Custom Layers

:encoding, :via

a16560 2
=item Querying the layers of filehandles

d16581 1
a16581 1
=head2 PerlIO::scalar - in-memory IO, scalar IO
a16588 2
=item IMPLEMENTATION NOTE

d16602 7
a16608 7
$obj->UTF8($bellowFlag,[$fh]), $obj->OPEN($path,$mode[,$fh]),
$obj->BINMODE([,$fh]), $obj->FDOPEN($fd[,$fh]),
$obj->SYSOPEN($path,$imode,$perm,[,$fh]), $obj->FILENO($fh),
$obj->READ($buffer,$len,$fh), $obj->WRITE($buffer,$fh), $obj->FILL($fh),
$obj->CLOSE($fh), $obj->SEEK($posn,$whence,$fh), $obj->TELL($fh),
$obj->UNREAD($buffer,$fh), $obj->FLUSH($fh), $obj->SETLINEBUF($fh),
$obj->CLEARERR($fh), $obj->ERROR($fh), $obj->EOF($fh)
a16629 2
=item ACKNOWLEDGEMENTS

d16675 1
a16675 2
Verbatim paragraph in NAME section, =headI<n> without preceding higher
level
a16698 2
C<$checker-E<gt>num_warnings()>

d17434 1
a17434 141
=over 4

=item B<parse_from_file()>

=back

=over 4

=item ACCESSOR METHODS

=back

=over 4

=item B<errorsub()>

=back

=over 4

=item B<cutting()>

=back

=over 4

=item B<parseopts()>

=back

=over 4

=item B<output_file()>

=back

=over 4

=item B<output_handle()>

=back

=over 4

=item B<input_file()>

=back

=over 4

=item B<input_handle()>

=back

=over 4

=item B<input_streams()>

=back

=over 4

=item B<top_stream()>

=back

=over 4

=item PRIVATE METHODS AND DATA

=back

=over 4

=item B<_push_input_stream()>

=back

=over 4

=item B<_pop_input_stream()>

=back

=over 4

=item TREE-BASED PARSING

=item SEE ALSO

=item AUTHOR

=back

=head2 Pod::Perldoc::ToChecker - let Perldoc check Pod for errors

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToMan - let Perldoc render Pod as man pages

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEAT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToNroff - let Perldoc convert Pod to nroff

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEAT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS
d17436 1
a17436 1
=item AUTHOR
a17439 2
=head2 Pod::Perldoc::ToPod - let Perldoc render Pod as ... Pod!

d17442 1
a17442 1
=item SYNOPSIS
d17444 1
a17444 1
=item DESCRIPTION
d17446 1
a17446 1
=item SEE ALSO
d17448 1
a17448 3
=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR
a17451 2
=head2 Pod::Perldoc::ToRtf - let Perldoc render Pod as RTF

d17454 1
a17454 1
=item SYNOPSIS
d17456 1
a17456 1
=item DESCRIPTION
d17458 1
a17458 1
=item SEE ALSO
d17460 1
a17460 3
=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR
d17464 1
a17464 1
=head2 Pod::Perldoc::ToText - let Perldoc render Pod as plaintext
d17466 1
a17466 1
=over 4
d17468 1
a17468 1
=item SYNOPSIS
d17470 1
a17470 1
=item DESCRIPTION
d17472 1
a17472 1
=item CAVEAT
d17474 1
a17474 1
=item SEE ALSO
d17476 1
a17476 1
=item COPYRIGHT AND DISCLAIMERS
d17478 1
a17478 1
=item AUTHOR
a17481 2
=head2 Pod::Perldoc::ToTk - let Perldoc use Tk::Pod to render Pod

d17484 1
a17484 1
=item SYNOPSIS
d17486 1
a17486 1
=item DESCRIPTION
d17488 1
a17488 1
=item SEE ALSO
d17490 1
a17490 1
=item AUTHOR
a17493 2
=head2 Pod::Perldoc::ToXml - let Perldoc render Pod as XML

d17496 1
a17496 1
=item SYNOPSIS
d17498 1
a17498 1
=item DESCRIPTION
d17500 1
a17500 1
=item SEE ALSO
d17502 1
a17502 3
=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR
a17505 2
=head2 Pod::PlainText - Convert POD data to formatted ASCII text

d17508 1
a17508 1
=item SYNOPSIS
d17510 1
a17510 1
=item DESCRIPTION
d17512 1
a17512 1
alt, indent, loose, sentence, width
d17514 1
a17514 1
=item DIAGNOSTICS
d17516 1
a17516 2
Bizarre space in item, Can't open %s for reading: %s, Unknown escape: %s,
Unknown sequence: %s, Unmatched =back
d17518 1
a17518 1
=item RESTRICTIONS
d17520 1
a17520 1
=item NOTES
d17663 1
a17663 1
alt, code, indent, loose, margin, quotes, sentence, width
d17770 77
d17910 2
a17911 3
blessed EXPR, dualvar NUM, STRING, isvstring EXPR, isweak EXPR,
looks_like_number EXPR, openhandle FH, refaddr EXPR, reftype EXPR,
set_prototype CODEREF, PROTOTYPE, tainted EXPR, weaken REF
a18019 2
=item CODE REFERENCES

a18111 2
=item BUGS

d18254 2
a18255 2
=head2 Term::ReadLine - Perl interface to various C<readline> packages.
If no real package is found, substitutes stubs instead of basic functions.
d18265 2
a18266 2
C<ReadLine>, C<new>, C<readline>, C<addhistory>, C<IN>, C<OUT>, C<MinLine>,
C<findConsole>, Attribs, C<Features>
a18287 2
=item QUICK START GUIDE

d18292 1
a18292 2
C<plan(...)>, C<tests =E<gt> I<number>>, C<todo =E<gt> [I<1,5,14>]>,
C<onfail =E<gt> sub { ... }>, C<onfail =E<gt> \&some_sub>
d18300 1
a18300 3
C<ok(...)>

C<skip(I<skip_if_true>, I<args...>)>
a18351 2
B<has_plan>

d18414 1
a18414 3
B<details>

B<todo>
d18498 1
a18498 1
C<HARNESS_OK_SLOW>, C<HARNESS_PERL_SWITCHES>, C<HARNESS_VERBOSE>
a18505 2
=item LICENSE

d18556 2
d18560 1
a18560 3
=over 4

=item C<new>
d18566 1
a18566 5
=over 4

=item C<_init>

=back
d18572 1
a18572 17
=over 4

=item C<analyze>

=back

=back

=over 4

=item C<analyze_fh>

=back

=over 4

=item C<analyze_file>
d18576 1
a18576 13
=over 4

=item C<_switches>

=back

=over 4

=item C<_INC2PERL5LIB>

=back

=over 4
d18578 1
a18578 1
=item C<_filtered_INC>
d18580 1
a18580 1
=back
d18582 1
a18582 1
=over 4
d18584 1
a18584 1
=item C<_restore_PERL5LIB>
d18586 1
a18586 1
=back
d18592 1
a18592 3
=over 4

=item C<_is_comment>
d18596 1
a18596 19
=back

=over 4

=item C<_is_header>

=back

=over 4

=item C<_is_test>

=back

=over 4

=item C<_is_bail_out>

=back
d18598 1
a18598 1
=over 4
d18600 1
a18600 1
=item C<_reset_file_state>
d18602 1
a18602 1
=back
d18608 1
a18608 5
=over 4

=item C<_detailize>

=back
a18837 4
=item C<extract_variable>

[0], [1], [2]

a19081 2
=item C<offset>

a19093 2
=item CONCURRENT ACCESS TO FILES

d19228 2
a19229 3
alarm ( $floating_seconds [, $interval_floating_seconds ] ), setitimer (
$which, $floating_seconds [, $interval_floating_seconds ] ), getitimer (
$which )
a19234 10
=item DIAGNOSTICS

=over 4

=item negative time not invented yet

=item internal error: useconds < 0 (unsigned ... signed ...)

=back

d19239 3
a19241 1
=item COPYRIGHT AND LICENSE
a19256 4
=item SUPPORT

=item AUTHOR

d19309 2
a19310 5
C<< $obj->isa( TYPE ) >>, C<< CLASS->isa( TYPE ) >>, C<isa( VAL, TYPE )>,
C<TYPE>, C<$obj>, C<CLASS>, C<VAL>, C<< $obj->can( METHOD ) >>, C<<
CLASS->can( METHOD ) >>, C<can( VAL, METHOD )>, C<VERSION ( [ REQUIRE ] )>

=item EXPORTS
d19326 3
a19328 4
UCA_Version, backwards, entry, hangul_terminator, ignoreName, ignoreChar,
level, normalization, overrideCJK, overrideHangul, preprocess, rearrange,
table, undefName, undefChar, katakana_before_hiragana, upper_before_lower,
variable, alternate
d19338 3
a19340 11
$Collator-E<gt>viewSortKey($string)>

=item Methods for Searching

C<$position = $Collator-E<gt>index($string, $substring[, $position])>,
C<($position, $length) = $Collator-E<gt>index($string, $substring[,
$position])>, C<$match_ref = $Collator-E<gt>match($string, $substring)>,
C<($match)   = $Collator-E<gt>match($string, $substring)>, C<@@match =
$Collator-E<gt>gmatch($string, $substring)>, C<$count =
$Collator-E<gt>subst($string, $substring, $replacement)>, C<$count =
$Collator-E<gt>gsubst($string, $substring, $replacement)>
d19344 1
a19344 2
C<%old_tailoring = $Collator-E<gt>change(%new_tailoring)>, C<$version =
$Collator-E<gt>version()>, C<UCA_Version()>, C<Base_Unicode_Version()>
d19348 2
d19352 1
a19352 1
=item Conformance Test
d19360 4
a19363 3
Unicode Collation Algorithm - UTS #10, The Default Unicode Collation
Element Table (DUCET), The conformance test for the UCA, Hangul Syllable
Type, Unicode Normalization Forms - UAX #15, L<Unicode::Normalize>
a19380 1
C<$FCD_string = FCD($string)>, C<$FCC_string = FCC($string)>,
a19392 1
checkFCD($string)>, C<$result = checkFCC($string)>, C<$result =
d19402 1
a19402 1
C<$is_non_starter_decomposition = isNonStDecomp($codepoint)>,
d19414 1
a19414 2
http://www.unicode.org/Public/UNIDATA/DerivedNormalizationProps.txt,
http://www.unicode.org/notes/tn5/
d19562 3
a19564 4
Win32::GetChipName(), Win32::GetCwd(), Win32::GetFolderPath(FOLDER [,
CREATE]), Win32::GetFullPathName(FILENAME), Win32::GetLastError(),
Win32::GetLongPathName(PATHNAME), Win32::GetNextAvailDrive(),
Win32::GetOSVersion(), Win32::GetOSName(),
a19587 18
=over 4

=item Migration from C<DynaLoader>

=item Backward compatible boilerplate

=back

=item Order of initialization: early load()

=over 4

=item The most hairy case

=back

=item LIMITATIONS

d19601 1
a19601 1
=item c2ph
d19603 1
a19603 1
=item dprofpp
d19607 2
d19611 1
a19611 7
=item perlbug

=item perldoc

=item pl2pm

=item pod2html
d19615 1
a19615 5
=item s2p

=item splain

=item xsubpp
@


1.1.1.7
log
@perl 5.8.3 from CPAN
@
text
@d832 2
a833 2
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.14 $, $Date:
2003/11/23 08:02:29 $)
d881 2
a882 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.25 $,
$Date: 2003/10/16 04:57:38 $)
d937 2
a938 2
=head2 perlfaq3 - Programming Tools ($Revision: 1.37 $, $Date: 2003/11/24
19:55:50 $)
d1024 2
a1025 2
=head2 perlfaq4 - Data Manipulation ($Revision: 1.54 $, $Date: 2003/11/30
00:50:08 $)
d1243 2
a1244 2
=head2 perlfaq5 - Files and Formats ($Revision: 1.30 $, $Date: 2003/11/23
08:07:46 $)
d2265 3
a2267 3
PERL_DESTRUCT_LEVEL, PERL_DL_NONLAZY, PERL_ENCODING, PERL_HASH_SEED,
PERL_HASH_SEED_DEBUG, PERL_ROOT (specific to the VMS port), PERL_SIGNALS,
PERL_UNICODE, SYS$LOGIN (specific to the VMS port)
d2627 1
a2627 1
this, NEXTKEY this, lastkey, SCALAR this, UNTIE this, DESTROY this
d3141 16
a3156 15
-I<X> FILEHANDLE, -I<X> EXPR, -I<X>, binmode FILEHANDLE, chmod LIST, chown
LIST, chroot FILENAME, chroot, crypt PLAINTEXT,SALT, dbmclose HASH, dbmopen
HASH,DBNAME,MODE, dump LABEL, exec LIST, exit EXPR, exit, fcntl
FILEHANDLE,FUNCTION,SCALAR, flock FILEHANDLE,OPERATION, fork, getlogin,
getpgrp PID, getppid, getpriority WHICH,WHO, getpwnam NAME, getgrnam NAME,
getnetbyname NAME, getpwuid UID, getgrgid GID, getnetbyaddr ADDR,ADDRTYPE,
getprotobynumber NUMBER, getservbyport PORT,PROTO, getpwent, getgrent,
gethostbyname, gethostent, getnetent, getprotoent, getservent, sethostent
STAYOPEN, setnetent STAYOPEN, setprotoent STAYOPEN, setservent STAYOPEN,
endpwent, endgrent, endhostent, endnetent, endprotoent, endservent,
getsockopt SOCKET,LEVEL,OPTNAME, glob EXPR, glob, ioctl
FILEHANDLE,FUNCTION,SCALAR, kill SIGNAL, LIST, link OLDFILE,NEWFILE, lstat
FILEHANDLE, lstat EXPR, lstat, msgctl ID,CMD,ARG, msgget KEY,FLAGS, msgsnd
ID,MSG,FLAGS, msgrcv ID,VAR,SIZE,TYPE,FLAGS, open FILEHANDLE,EXPR, open
FILEHANDLE, pipe READHANDLE,WRITEHANDLE, readlink EXPR, readlink, select
d3344 1
a3344 2
enable UTF-8/UTF-EBCDIC in scripts, C<use encoding> needed to upgrade
non-Latin-1 byte strings
a3533 2
=item Taint mode and @@INC

d3562 1
a3562 1
=item BEGIN, CHECK, INIT and END
d3601 4
a3604 4
Digest::base, DirHandle, Dumpvalue, DynaLoader, Encode, Encode::Alias,
Encode::Byte, Encode::CJKConstants, Encode::CN, Encode::CN::HZ,
Encode::Config, Encode::EBCDIC, Encode::Encoder, Encode::Encoding,
Encode::Guess, Encode::JP, Encode::JP::H2Z, Encode::JP::JIS7, Encode::KR,
d3631 10
a3640 10
Math::BigInt::Calc, Math::BigRat, Math::Complex, Math::Trig, Memoize,
Memoize::AnyDBM_File, Memoize::Expire, Memoize::ExpireFile,
Memoize::ExpireTest, Memoize::NDBM_File, Memoize::SDBM_File,
Memoize::Storable, NDBM_File, NEXT, Net::Cmd, Net::Config, Net::Domain,
Net::FTP, Net::NNTP, Net::Netrc, Net::POP3, Net::Ping, Net::SMTP,
Net::Time, Net::hostent, Net::libnetFAQ, Net::netent, Net::protoent,
Net::servent, O, ODBM_File, Opcode, POSIX, PerlIO, PerlIO::encoding,
PerlIO::scalar, PerlIO::via, PerlIO::via::QuotedPrint, Pod::Checker,
Pod::Find, Pod::Functions, Pod::Html, Pod::InputObjects, Pod::LaTeX,
Pod::Man, Pod::ParseLink, Pod::ParseUtils, Pod::Parser,
d4473 1
a4473 1
A, p, d, s, n, r, f, M, o, x, m, X, E, b
d4655 2
a4656 2
HeVAL, HvNAME, hv_clear, hv_clear_placeholders, hv_delete, hv_delete_ent,
hv_exists, hv_exists_ent, hv_fetch, hv_fetch_ent, hv_iterinit, hv_iterkey,
d4658 1
a4658 1
hv_magic, hv_scalar, hv_store, hv_store_ent, hv_undef, newHV, Nullhv
d5483 1
a5483 1
=head2 perldelta - what is new for perl v5.8.3
a5494 4
CGI, Cwd, Digest, Digest::MD5, Encode, File::Spec, FindBin, List::Util,
Math::BigInt, PodParser, Pod::Perldoc, POSIX, Unicode::Collate,
Unicode::Normalize, Test::Harness, threads::shared

d5499 1
a5499 43
=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item Configuration and Building

=item Platform Specific Problems

=item Known Problems

=item Future Directions

=item Obituary

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl583delta, perldelta - what is new for perl v5.8.3

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata

CGI, Cwd, Digest, Digest::MD5, Encode, File::Spec, FindBin, List::Util,
Math::BigInt, PodParser, Pod::Perldoc, POSIX, Unicode::Collate,
Unicode::Normalize, Test::Harness, threads::shared

=item Utility Changes

=item New Documentation
d5509 1
a5509 3
=item Configuration and Building

=item Platform Specific Problems
a5512 44
=item Future Directions

=item Obituary

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl582delta - what is new for perl v5.8.2

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=over 4

=item Hash Randomisation

=item Threading

=back

=item Modules and Pragmata

=over 4

=item Updated Modules And Pragmata

Devel::PPPort, Digest::MD5, I18N::LangTags, libnet, MIME::Base64,
Pod::Perldoc, strict, Tie::Hash, Time::HiRes, Unicode::Collate,
Unicode::Normalize, UNIVERSAL

=back

=item Selected Bug Fixes

=item Changed Internals

a5514 2
=item Future Directions

d5521 1
a5521 1
=head2 perl581delta - what is new for perl v5.8.1
d5680 1
a5680 1
=head2 perl58delta - what is new for perl v5.8.0
a7647 28
=head2 perlce - Perl for WinCE

=over 4

=item DESCRIPTION

=item BUILD

=over 4

=item Tools & SDK

Microsoft Embedded Visual Tools, Microsoft Visual C++, Rainer Keuchel's
celib-sources, Rainer Keuchel's console-sources

=item Make

go to ./wince subdirectory, edit file compile.bat, run	  compile.bat, run 
  compile.bat dist

=back

=item ACKNOWLEDGEMENTS

=item AUTHORS

=back

a7761 44
=head2 perldos - Perl under DOS, W31, W95.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Prerequisites for Compiling Perl on DOS

DJGPP, Pthreads

=item Shortcomings of Perl under DOS

=item Building Perl on DOS

=item Testing Perl on DOS

=item Installation of Perl on DOS

=back

=item BUILDING AND INSTALLING MODULES ON DOS

=over 4

=item Building Prerequisites for Perl on DOS

=item Unpacking CPAN Modules on DOS

=item Building Non-XS Modules on DOS

=item Building XS Modules on DOS

=back

=item AUTHOR

=item SEE ALSO

=back

d8043 1
a8043 3
=back

=head2 perlnetware - Perl for NetWare
d8045 1
a8045 3
=over 4

=item DESCRIPTION
d8047 1
a8047 1
=item BUILD
d8065 1
a8065 1
=item INSTALL
d8067 1
a8067 1
=item BUILD NEW EXTENSIONS
d8069 1
a8069 1
=item ACKNOWLEDGEMENTS
d8071 1
a8071 1
=item AUTHORS
d8073 1
a8073 1
=item DATE
a8191 13
=item Building a binary distribution

=item Building custom F<.EXE> files

=over 4

=item Making executables with a custom collection of statically loaded
extensions

=item Making executables with a custom search-paths

=back

a8767 47
=head2 perlwin32 - Perl under Windows

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Setting Up Perl on Win32

Make, Command Shell, Borland C++, Microsoft Visual C++, Microsoft Platform
SDK 64-bit Compiler, MinGW32 with gcc, MinGW release 1

=item Building

=item Testing Perl on Win32

=item Installation of Perl on Win32

=item Usage Hints for Perl on Win32

Environment Variables, File Globbing, Using perl from the command line,
Building Extensions, Command-line Wildcard Expansion, Win32 Specific
Extensions, Notes on 64-bit Windows

=item Running Perl Scripts

Miscellaneous Things

=back

=item BUGS AND CAVEATS

=item AUTHORS

Gary Ng E<lt>71564.1743@@CompuServe.COME<gt>, Gurusamy Sarathy
E<lt>gsar@@activestate.comE<gt>, Nick Ing-Simmons
E<lt>nick@@ing-simmons.netE<gt>

=item SEE ALSO

=item HISTORY

=back

d8805 2
a8806 3
share VARIABLE, lock VARIABLE, cond_wait VARIABLE, cond_wait CONDVAR,
LOCKVAR, cond_timedwait VARIABLE, ABS_TIMEOUT, cond_timedwait CONDVAR,
ABS_TIMEOUT, LOCKVAR, cond_signal VARIABLE, cond_broadcast VARIABLE
d8840 1
a8840 2
blocks, PERL_OLD_SIGNALS are not threadsafe, will not be, Detached threads
on Windows
d8908 1
a8908 1
=head2 base - Establish IS-A relationship with base classes at compile time
d9134 2
a9135 1
=head2 diagnostics, splain - produce verbose warning diagnostics
a9174 2
=item Implicit upgrading for byte strings

d9530 2
a9531 3
share VARIABLE, lock VARIABLE, cond_wait VARIABLE, cond_wait CONDVAR,
LOCKVAR, cond_timedwait VARIABLE, ABS_TIMEOUT, cond_timedwait CONDVAR,
ABS_TIMEOUT, LOCKVAR, cond_signal VARIABLE, cond_broadcast VARIABLE
d10516 2
a10517 2
B<virtual_port ()>, B<server_software ()>, B<remote_user ()>, B<user_name
()>, B<request_method()>, B<content_type()>, B<http()>, B<https()>
d11656 1
a11656 1
=head2 Digest - Modules that calculate message digests
d11670 1
a11670 2
$ctx->add( $data, ... ), $ctx->addfile( $io_handle ), $ctx->add_bits(
$data, $nbits ), $ctx->add_bits( $bitstring ), $ctx->digest,
a11672 2
=item Digest speed

d11694 1
a11694 2
$md5->addfile($io_handle), $md5->add_bits($data, $nbits),
$md5->add_bits($bitstring), $md5->digest, $md5->hexdigest, $md5->b64digest
a11705 12
=head2 Digest::base - Digest base class

=over 4

=item SYNPOSIS

=item DESCRIPTION

=item SEE ALSO

=back

a12505 2
=item Implicit upgrading for byte strings

a12650 2
=item Exporting without inheriting from Exporter

d12977 2
d12981 2
d13684 2
a13685 2
PRINT_PREREQ, SITEPREFIX, SKIP, TYPEMAPS, VENDORPREFIX, VERBINST, VERSION,
VERSION_FROM, VERSION_SYM, XS, XSOPT, XSPROTOARG, XS_VERSION
d14798 2
a14799 2
=head2 Getopt::Std, getopt, getopts - Process single-character switches
with switch clustering
d16166 1
a16166 1
=item is_pos()/is_neg()
d16168 2
a16169 2
	$x->is_pos();			# true if >= 0
	$x->is_neg();			# true if <  0
d16179 1
a16179 1
=item digit
d16247 1
a16247 1
=item as_int
d16323 3
a16325 3
bstr(), bsstr() and 'cmp', int(), length, bdiv, infinity handling,
Modifying and =, bpow, Overloading -$x, Mixing different object types,
bsqrt(), brsft()
d16361 2
a16362 1
=head2 Math::BigInt::CalcEmu - Emulate low-level math with BigInt code
a16369 2
=item METHODS

d16376 1
a16376 1
=item AUTHORS
d17473 1
a17473 1
:unix, :stdio, :perlio, :crlf, :mmap, :utf8, :bytes, :raw, :pop, :win32
a17555 2
=item REQUIRED MODULES

d17704 3
a17706 3
backlink, cachedir, css, flush, header, help, hiddendirs, htmldir,
htmlroot, index, infile, libpods, netscape, outfile, podpath, podroot,
quiet, recurse, title, verbose
d19465 1
a19465 7
=head2 Test::Harness - Run Perl standard test scripts with statistics

=over 4

=item VERSION

=back
d19485 1
a19485 1
B<$Test::Harness::Verbose>, B<$Test::Harness::switches>
d19524 2
a19525 3
C<HARNESS_DEBUG>, C<HARNESS_FILELEAK_IN_DIR>, C<HARNESS_IGNORE_EXITCODE>,
C<HARNESS_NOTTY>, C<HARNESS_OK_SLOW>, C<HARNESS_PERL>,
C<HARNESS_PERL_SWITCHES>, C<HARNESS_VERBOSE>
a19538 4
=item AUTHORS

=item COPYRIGHT

d19549 1
a19549 1
=item FUNCTIONS
d19551 1
a19551 1
=over 4
d19553 1
a19553 1
=item C<assert()>
a19574 8
=over 4

=item new()

=item next()

=back

a19626 12
=item C<_command_line( $file )>

=back

=over 4

=item C<_command>

=back

=over 4

a19632 6
=item C<_cleaned_switches>

=back

=over 4

d20235 1
a20235 2
this, NEXTKEY this, lastkey, EXISTS this, key, DELETE this, key, CLEAR
this, SCALAR this
d20241 1
a20241 1
=item C<SCALAR>, C<UNTIE> and C<DESTROY>
d20531 1
a20531 1
http://www.unicode.org/reports/tr15/,
@


1.1.1.8
log
@Import of stock perl 5.8.5
@
text
@d832 2
a833 2
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.8 $, $Date:
2003/07/09 15:47:28 $)
d881 2
a882 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.8 $,
$Date: 2004/04/07 21:33:09 $)
d937 2
a938 2
=head2 perlfaq3 - Programming Tools ($Revision: 1.8 $, $Date: 2003/08/24
05:26:59 $)
d1024 2
a1025 2
=head2 perlfaq4 - Data Manipulation ($Revision: 1.8 $, $Date: 2003/10/02
04:44:33 $)
d1243 2
a1244 2
=head2 perlfaq5 - Files and Formats ($Revision: 1.8 $, $Date: 2003/01/26
17:45:46 $)
d1339 1
a1339 1
=head2 perlfaq6 - Regular Expressions ($Revision: 1.8 $, $Date: 2003/01/03
d1406 1
a1406 1
=head2 perlfaq7 - General Perl Language Issues ($Revision: 1.8 $, $Date:
d1488 1
a1488 1
=head2 perlfaq8 - System Interaction ($Revision: 1.8 $, $Date: 2003/01/26
d1616 1
a1616 1
=head2 perlfaq9 - Networking ($Revision: 1.8 $, $Date: 2003/01/31 17:36:57
d2256 1
a2256 1
B<-X>, B<-x>, B<-x> I<directory>
a2547 18
=item Text Fields

=item Numeric Fields

=item The Field @@* for Variable Width Multi-Line Text

=item The Field ^* for Variable Width One-line-at-a-time Text

=item Specifying Values

=item Using Fill Mode

=item Suppressing Lines Where All Fields Are Void

=item Repeating Format Lines

=item Top of Form Processing

d3343 2
a3344 2
enable UTF-8/UTF-EBCDIC in scripts, BOM-marked scripts and UTF-16 scripts
autodetected, C<use encoding> needed to upgrade non-Latin-1 byte strings
a4223 2
=item Returning SVs, AVs and HVs through RETVAL

d4613 1
a4613 1
get_av, newAV, sortsv
d4630 1
a4630 1
CvSTASH, get_cv
d4652 1
a4652 1
Nullav, Nullch, Nullcv, Nullhv, Nullsv
d4656 5
a4660 6
get_hv, HEf_SVKEY, HeHASH, HeKEY, HeKLEN, HePV, HeSVKEY, HeSVKEY_force,
HeSVKEY_set, HeVAL, HvNAME, hv_clear, hv_clear_placeholders, hv_delete,
hv_delete_ent, hv_exists, hv_exists_ent, hv_fetch, hv_fetch_ent,
hv_iterinit, hv_iterkey, hv_iterkeysv, hv_iternext, hv_iternextsv,
hv_iternext_flags, hv_iterval, hv_magic, hv_scalar, hv_store, hv_store_ent,
hv_undef, newHV
d4666 1
a4666 1
SvSetSV, SvSetSV_nosteal, SvSHARE, SvUNLOCK
d4670 2
a4671 2
Copy, Move, New, Newc, Newz, Poison, Renew, Renewc, Safefree, savepv,
savepvn, savesharedpv, StructCopy, Zero
d4693 6
a4698 7
dMARK, dORIGMARK, dSP, EXTEND, MARK, mPUSHi, mPUSHn, mPUSHp, mPUSHu,
mXPUSHi, mXPUSHn, mXPUSHp, mXPUSHu, ORIGMARK, POPi, POPl, POPn, POPp,
POPpbytex, POPpx, POPs, PUSHi, PUSHMARK, PUSHmortal, PUSHn, PUSHp, PUSHs,
PUSHu, PUTBACK, SP, SPAGAIN, XPUSHi, XPUSHmortal, XPUSHn, XPUSHp, XPUSHs,
XPUSHu, XSRETURN, XSRETURN_EMPTY, XSRETURN_IV, XSRETURN_NO, XSRETURN_NV,
XSRETURN_PV, XSRETURN_UNDEF, XSRETURN_UV, XSRETURN_YES, XST_mIV, XST_mNO,
XST_mNV, XST_mPV, XST_mUNDEF, XST_mYES
d4706 4
a4709 4
get_sv, looks_like_number, newRV_inc, newRV_noinc, NEWSV, newSV, newSViv,
newSVnv, newSVpv, newSVpvf, newSVpvn, newSVpvn_share, newSVrv, newSVsv,
newSVuv, SvCUR, SvCUR_set, SvEND, SvGROW, SvIOK, SvIOKp, SvIOK_notUV,
SvIOK_off, SvIOK_on, SvIOK_only, SvIOK_only_UV, SvIOK_UV, SvIsCOW,
d4711 2
a4712 2
SvNIOK_off, SvNOK, SvNOKp, SvNOK_off, SvNOK_on, SvNOK_only, SvNV, SvNVx,
SvNVX, SvOK, SvOOK, SvPOK, SvPOKp, SvPOK_off, SvPOK_on, SvPOK_only,
d4715 1
a4715 1
SvPVutf8_force, SvPVutf8_nolen, SvPVX, SvPVx, SvPV_force, SvPV_force_nomg,
d4718 2
a4719 2
SvTRUE, SvTYPE, SvUOK, SvUPGRADE, SvUTF8, SvUTF8_off, SvUTF8_on, SvUV,
SvUVx, SvUVX, sv_2bool, sv_2cv, sv_2io, sv_2iv, sv_2mortal, sv_2nv,
d4752 1
a4752 1
THIS, XS, XS_VERSION, XS_VERSION_BOOTCHECK
a4952 2
=item Working with the source

d5485 1
a5485 1
=head2 perldelta, perl584delta - what is new for perl v5.8.4
a5494 12
=over 4

=item Malloc wrapping

=item Unicode Character Database 4.0.1

=item suidperl less insecure

=item format

=back

d5497 3
a5499 45
=over 4

=item Updated modules

Attribute::Handlers, B, Benchmark, CGI, Carp, Cwd, Exporter, File::Find,
IO, IPC::Open3, Local::Maketext, Math::BigFloat, Math::BigInt,
Math::BigRat, MIME::Base64, ODBM_File, POSIX, Shell, Socket, Storable,
Switch, Sys::Syslog, Term::ANSIColor, Time::HiRes, Unicode::UCD, Win32,
base, open, threads, utf8

=back

=item Performance Enhancements

=item Utility Changes

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item Future Directions

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl585delta, perldelta - what is new for perl v5.8.5

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata
a5502 8
=over 4

=item Perl's debugger

=item h2ph

=back

a5504 2
=item Performance Enhancements

d5513 1
a5513 3
=item New Tests

=item Known Problems
d5517 1
a5517 53
=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl584delta - what is new for perl v5.8.4

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=over 4

=item Malloc wrapping

=item Unicode Character Database 4.0.1

=item suidperl less insecure

=item format

=back

=item Modules and Pragmata

=over 4

=item Updated modules

Attribute::Handlers, B, Benchmark, CGI, Carp, Cwd, Exporter, File::Find,
IO, IPC::Open3, Local::Maketext, Math::BigFloat, Math::BigInt,
Math::BigRat, MIME::Base64, ODBM_File, POSIX, Shell, Socket, Storable,
Switch, Sys::Syslog, Term::ANSIColor, Time::HiRes, Unicode::UCD, Win32,
base, open, threads, utf8

=back

=item Performance Enhancements

=item Utility Changes

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals
d5521 1
a5521 1
=item Platform Specific Problems
d5529 1
a5529 1
=head2 perl583delta - what is new for perl v5.8.3
d8005 1
a8005 1
=item Itanium & Itanium 2
d8096 1
a8096 3
=item Perl version 5.8.x and greater not supported

=item Compiling Perl 5.6.x on MachTen
d8966 1
a8966 1
SDK 64-bit Compiler, MinGW release 3 with gcc, MinGW release 1 with gcc
a8987 2
=item ACKNOWLEDGEMENTS

d9073 2
a9074 1
blocks, PERL_OLD_SIGNALS are not threadsafe, will not be
a9149 4
=item DIAGNOSTICS

Base class package "%s" is empty

d10261 3
a10263 25
=over 4

=item Options for Opcode Ordering

B<-basic>, B<-exec>, B<-tree>

=item Options for Line-Style

B<-concise>, B<-terse>, B<-linenoise>, B<-debug>, B<-env>

=item Options for tree-specific formatting

B<-compact>, B<-loose>, B<-vt>, B<-ascii>

=item Options controlling sequence numbering

B<-base>I<n>, B<-bigendian>, B<-littleendian>

=item Other options

B<-main>, B<-banner>

=item Option Stickiness

=back
a10287 20
=over 4

=item Example: Altering Concise Renderings

=item set_style()

=item set_style_standard($name)

=item add_style()

=item add_callback()

=item Running B::Concise::compile()

=item B::Concise::reset_sequence()

=item Errors

=back

d11154 1
a11154 1
=head2 Carp::Heavy - heavy machinery, no user serviceable parts inside
d11458 2
a11459 2
C<pmake>, C<pr>, C<prefix>, C<prefixexp>, C<privlib>, C<privlibexp>,
C<procselfexe>, C<prototype>, C<ptrsize>
d11525 1
a11525 1
C<xlibpth>
d11553 1
a11553 1
getcwd, cwd, fastcwd, fastgetcwd, getdcwd
a11564 2
=item AUTHOR

a11605 68
=head2 DBM_Filter -- Filter DBM keys/values 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item What is a DBM Filter?

=over 4

=item So what's new?

=back

=item METHODS

=over 4

=item $db->Filter_Push()

=item $db->Filter_Key_Push()

=item $db->Filter_Value_Push()

Filter_Push, Filter_Key_Push, Filter_Value_Push

=item $db->Filter_Pop()

=item $db->Filtered()

=back

=item Writing a Filter

=over 4

=item Immediate Filters

=item Canned Filters

"name", params

=back

=item Filters Included

utf8, encode, compress, int32, null

=item NOTES

=over 4

=item Maintain Round Trip Integrity

=item Don't mix filtered & non-filtered data in the same database file. 

=back

=item EXAMPLE

=item SEE ALSO

=item AUTHOR

=back

d12005 4
a12008 4
@@dl_modules, @@dl_shared_objects, dl_error(), $dl_debug, dl_findfile(),
dl_expandspec(), dl_load_file(), dl_unload_file(), dl_load_flags(),
dl_find_symbol(), dl_find_symbol_anywhere(), dl_undef_symbols(),
dl_install_xsub(), bootstrap()
a14340 2
=item BUGS AND CAVEATS

d14802 2
a15138 3
the function implicate_supers( ...languages... ), the function
implicate_supers_strictly( ...languages... )

a15152 20
=head2 I18N::LangTags::Detect - detect the user's language preferences

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=item ENVIRONMENT

=item SEE ALSO

=item COPYRIGHT

=item AUTHOR

=back

d16635 1
a16635 1
=head2 Math::BigRat - arbitrarily big rational numbers
a16692 4
=item bsqrt()

	$x->bsqrt();

d16700 1
a16700 2
except for bceil/bfloor), $x ** $y where $y is not an integer, bmod(),
blog(), bmodinv() and bmodpow() (partial)
d17047 1
a17047 1
new ([ HOST ] [, OPTIONS ])
d17054 10
a17063 10
RECURSE ]), mkdir ( DIR [, RECURSE ]), alloc ( SIZE [, RECORD_SIZE] ), ls (
[ DIR ] ), dir ( [ DIR ] ), get ( REMOTE_FILE [, LOCAL_FILE [, WHERE]] ),
put ( LOCAL_FILE [, REMOTE_FILE ] ), put_unique ( LOCAL_FILE [, REMOTE_FILE
] ), append ( LOCAL_FILE [, REMOTE_FILE ] ), unique_name (), mdtm ( FILE ),
size ( FILE ), supported ( CMD ), hash ( [FILEHANDLE_GLOB_REF],[
BYTES_PER_HASH_MARK] ), nlst ( [ DIR ] ), list ( [ DIR ] ), retr ( FILE ),
stor ( FILE ), stou ( FILE ), appe ( FILE ), port ( [ PORT ] ), pasv (),
pasv_xfer ( SRC_FILE, DEST_SERVER [, DEST_FILE ] ), pasv_xfer_unique (
SRC_FILE, DEST_SERVER [, DEST_FILE ] ), pasv_wait ( NON_PASV_SERVER ),
abort (), quit ()
d17156 1
a17156 1
new ( [ HOST ] [, OPTIONS ] 0
d17160 4
a17163 5
auth ( USERNAME, PASSWORD ), user ( USER ), pass ( PASS ), login ( [ USER
[, PASS ]] ), apop ( [ USER [, PASS ]] ), banner (), capa (),  capabilities
(), top ( MSGNUM [, NUMLINES ] ), list ( [ MSGNUM ] ), get ( MSGNUM [, FH ]
), getfh ( MSGNUM ), last (), popstat (), ping ( USER ), uidl ( [ MSGNUM ]
), delete ( MSGNUM ), reset (), quit ()
d17220 1
a17220 1
new ( [ HOST ] [, OPTIONS ] )
d17224 7
a17230 7
banner (), domain (), hello ( DOMAIN ), host (), etrn ( DOMAIN ), auth (
USERNAME, PASSWORD ), mail ( ADDRESS [, OPTIONS] ), send ( ADDRESS ),
send_or_mail ( ADDRESS ), send_and_mail ( ADDRESS ), reset (), recipient (
ADDRESS [, ADDRESS, [...]] [, OPTIONS ] ), to ( ADDRESS [, ADDRESS [...]]
), cc ( ADDRESS [, ADDRESS [...]] ), bcc ( ADDRESS [, ADDRESS [...]] ),
data ( [ DATA ] ), expand ( ADDRESS ), verify ( ADDRESS ), help ( [
$subject ] ), quit ()
d19248 1
a19248 5
=item Caveats

=item Escaping Magic Characters

=item Configuration
a19251 2
=item BUGS

d19369 1
a19369 1
=item LIMITATIONS
a19589 2
=item ENVIRONMENT

a20647 10
=over 4

=item Ambiguous Local Times (DST)

=item Non-Existent Local Times (DST)

=item Negative Epoch Values

=back

d20957 33
@


1.1.1.9
log
@perl 5.8.6 from CPAN
@
text
@d832 2
a833 2
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.14 $, $Date:
2003/11/23 08:02:29 $)
d881 2
a882 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.25 $,
$Date: 2003/10/16 04:57:38 $)
d937 2
a938 2
=head2 perlfaq3 - Programming Tools ($Revision: 1.37 $, $Date: 2003/11/24
19:55:50 $)
d1024 2
a1025 2
=head2 perlfaq4 - Data Manipulation ($Revision: 1.54 $, $Date: 2003/11/30
00:50:08 $)
d1243 2
a1244 2
=head2 perlfaq5 - Files and Formats ($Revision: 1.30 $, $Date: 2003/11/23
08:07:46 $)
d1339 1
a1339 1
=head2 perlfaq6 - Regular Expressions ($Revision: 1.20 $, $Date: 2003/01/03
d1406 1
a1406 1
=head2 perlfaq7 - General Perl Language Issues ($Revision: 1.15 $, $Date:
d1488 1
a1488 1
=head2 perlfaq8 - System Interaction ($Revision: 1.17 $, $Date: 2003/01/26
d1616 1
a1616 1
=head2 perlfaq9 - Networking ($Revision: 1.15 $, $Date: 2003/01/31 17:36:57
a1836 2
=item No-ops

d2255 1
a2255 1
B<-t>, B<-T>, B<-u>, B<-U>, B<-v>, B<-V>, B<-V:>I<configvar>, B<-w>, B<-W>,
d2264 4
a2267 5
PERL5DB, PERL5SHELL (specific to the Win32 port), PERL_ALLOW_NON_IFS_LSP
(specific to the Win32 port), PERL_DEBUG_MSTATS, PERL_DESTRUCT_LEVEL,
PERL_DL_NONLAZY, PERL_ENCODING, PERL_HASH_SEED, PERL_HASH_SEED_DEBUG,
PERL_ROOT (specific to the VMS port), PERL_SIGNALS, PERL_UNICODE, SYS$LOGIN
(specific to the VMS port)
d3892 3
a3894 3
Start with F<module-starter> or F<h2xs>, Use L<strict|strict> and
L<warnings|warnings>, Use L<Carp|Carp>, Use L<Exporter|Exporter> - wisely!,
Use L<plain old documentation|perlpod>, Write tests, Write the README
d4691 2
a4692 2
Copy, CopyD, Move, MoveD, New, Newc, Newz, Poison, Renew, Renewc, Safefree,
savepv, savepvn, savesharedpv, StructCopy, Zero, ZeroD
d4737 1
a4737 1
SvPVutf8_force, SvPVutf8_nolen, SvPVx, SvPVX, SvPV_force, SvPV_force_nomg,
d4744 17
a4760 18
sv_catpvf_mg, sv_catpvn, sv_catpvn_flags, sv_catpvn_mg, sv_catpvn_nomg,
sv_catpv_mg, sv_catsv, sv_catsv_flags, sv_catsv_mg, sv_catsv_nomg, sv_chop,
sv_clear, sv_cmp, sv_cmp_locale, sv_collxfrm, sv_copypv, sv_dec,
sv_derived_from, sv_eq, sv_force_normal, sv_force_normal_flags, sv_free,
sv_gets, sv_grow, sv_inc, sv_insert, sv_isa, sv_isobject, sv_iv, sv_len,
sv_len_utf8, sv_magic, sv_magicext, sv_mortalcopy, sv_newmortal, sv_newref,
sv_nv, sv_pos_b2u, sv_pos_u2b, sv_pv, sv_pvbyte, sv_pvbyten,
sv_pvbyten_force, sv_pvn, sv_pvn_force, sv_pvn_force_flags, sv_pvutf8,
sv_pvutf8n, sv_pvutf8n_force, sv_reftype, sv_replace, sv_report_used,
sv_reset, sv_rvweaken, sv_setiv, sv_setiv_mg, sv_setnv, sv_setnv_mg,
sv_setpv, sv_setpvf, sv_setpvf_mg, sv_setpviv, sv_setpviv_mg, sv_setpvn,
sv_setpvn_mg, sv_setpv_mg, sv_setref_iv, sv_setref_nv, sv_setref_pv,
sv_setref_pvn, sv_setref_uv, sv_setsv, sv_setsv_flags, sv_setsv_mg,
sv_setsv_nomg, sv_setuv, sv_setuv_mg, sv_taint, sv_tainted, sv_true,
sv_unmagic, sv_unref, sv_unref_flags, sv_untaint, sv_upgrade, sv_usepvn,
sv_usepvn_mg, sv_utf8_decode, sv_utf8_downgrade, sv_utf8_encode,
sv_utf8_upgrade, sv_utf8_upgrade_flags, sv_uv, sv_vcatpvf, sv_vcatpvfn,
sv_vcatpvf_mg, sv_vsetpvf, sv_vsetpvfn, sv_vsetpvf_mg
d5032 1
a5032 1
check.utf8, minitest.utf16 test.utf16, test_harness
d5099 63
a5161 1
=item assertions
d5163 1
a5163 1
=item iCOW
d5165 1
a5165 1
=item (?{...}) closures in regexps
d5167 1
a5167 1
=item A re-entrant regexp engine
d5169 1
a5169 1
=item pragmata
d5171 3
a5173 1
=over 4
d5175 1
a5175 1
=item lexical pragmas
d5177 1
a5177 1
=item use less 'memory'
d5181 1
a5181 1
=item prototypes and functions
d5185 63
a5247 1
=item _ prototype character
d5249 11
a5259 1
=item inlining autoloaded constants
d5263 15
d5280 1
a5280 1
=item Unicode and UTF8
d5284 11
a5294 1
=item Implicit Latin 1 => Unicode translation
d5296 1
a5296 1
=item UTF8 caching code
d5298 7
a5304 1
=item Unicode in Filenames
d5306 1
a5306 1
=item Unicode in %ENV
d5310 1
a5310 1
=item Regexps
d5314 7
a5320 1
=item regexp optimiser optional
d5322 3
a5324 1
=item common suffices/prefices in regexps (trie optimization)
d5328 3
a5330 1
=item POD
d5334 7
a5340 1
=item POD -> HTML conversion still sucks
d5342 17
a5358 1
=back
d5360 1
a5360 1
=item Misc medium sized projects
d5362 1
a5362 1
=over 4
d5364 1
a5364 1
=item UNITCHECK
d5366 1
a5366 1
=item optional optimizer
d5368 1
a5368 1
=item You WANT *how* many
d5370 1
a5370 1
=item lexical aliases
d5372 1
a5372 1
=item no 6
d5374 1
a5374 1
=item IPv6
d5376 1
a5376 1
=item entersub XS vs Perl
d5378 1
a5378 1
=item @@INC source filter to Filter::Simple
d5380 1
a5380 1
=item bincompat functions
d5382 1
a5382 1
=item Use fchown/fchmod internally
d5384 1
a5384 1
=back
d5386 1
a5386 1
=item Tests
d5388 1
a5388 1
=over 4
d5390 1
a5390 1
=item Make Schwern poorer
d5392 1
a5392 1
=item test B
d5394 1
a5394 1
=item Improve tests for Config.pm
d5396 1
a5396 1
=item common test code for timed bailout
d5400 1
a5400 1
=item Installation
d5404 3
a5406 1
=item compressed man pages
d5408 1
a5408 1
=item Make Config.pm cope with differences between build and installed perl
d5410 1
a5410 1
=item Relocatable perl
d5412 1
a5412 1
=item make HTML install work
d5414 1
a5414 1
=item put patchlevel in -v
d5416 1
a5416 1
=back
d5418 1
a5418 1
=item Incremental things
d5420 1
a5420 1
=over 4
d5422 1
a5422 1
=item autovivification
d5424 1
a5424 1
=item fix tainting bugs
d5426 1
a5426 1
=item Make tainting consistent
d5428 1
a5428 1
=item Dual life everything
d5430 1
a5430 1
=back
d5432 1
a5432 1
=item Vague things
d5434 1
a5434 1
=over 4
d5436 1
a5436 1
=item threads
d5438 1
a5438 1
=item POSIX memory footprint
d5440 1
a5440 1
=item Optimize away @@_
d5442 1
a5442 1
=item switch ops
d5444 1
a5444 1
=item Attach/detach debugger from running program
d5446 1
a5446 1
=item A decent benchmark
d5448 1
a5448 1
=item readpipe(LIST)
d5509 1
a5509 1
=head2 perldelta - what is new for perl v5.8.5
d5519 1
a5519 1
=item Modules and Pragmata
d5521 1
a5521 1
=item Utility Changes
d5523 1
a5523 1
=item New Documentation
d5525 1
a5525 1
=item Performance Enhancements
d5527 1
a5527 17
=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item New Tests

=item Known Problems

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO
d5531 1
a5531 1
=head2 perl586delta, perldelta - what is new for perl v5.8.5
d5535 1
a5535 1
=item DESCRIPTION
d5537 5
a5541 1
=item Incompatible Changes
d5543 1
a5543 1
=item Core Enhancements
d5545 1
a5545 1
=item Modules and Pragmata
a5548 4
=item New Documentation

=item Performance Enhancements

d5557 1
a5557 3
=item New Tests

=item Known Problems
d5567 1
a5567 1
=head2 perl585delta - what is new for perl v5.8.5
d5589 4
d5601 2
a8140 2
=item Portability Between PA-RISC Versions

d8147 4
a8152 2
=item Itanium & Itanium 2

d9109 2
a9110 3
Make, Command Shell, Borland C++, Microsoft Visual C++, Microsoft Visual
C++ Toolkit 2003, Microsoft Platform SDK 64-bit Compiler, MinGW release 3
with gcc, MinGW release 1 with gcc
d9126 1
a9126 1
=item Miscellaneous Things
a9597 6
=over 4

=item The Logic of :locale

=back

d10221 1
a10221 2
next, sibling, name, ppaddr, desc, targ, type, opt, static, flags, private,
spare
d10430 1
a10430 1
B<-main>, B<-nomain>, B<-nobanner>, B<-banner>, B<-banneris> => subref
a10435 10
=item ABBREVIATIONS

=over 4

=item OP class abbreviations

=item OP flags abbreviations

=back

a10437 4
=over 4

=item Special Patterns

d10440 1
a10440 5
B<~>

=item # Variables

B<#>I<var>, B<#>I<var>I<N>, B<#>I<Var>, B<#addr>, B<#arg>, B<#class>,
d10444 10
a10453 2
B<#seq>, B<#seqnum>, B<#opt>, B<#static>, B<#sibaddr>, B<#svaddr>,
B<#svclass>, B<#svval>, B<#targ>, B<#targarg>, B<#targarglife>, B<#typenum>
a10593 12
=item EXAMPLES

=over 4

=item OPTIONS

=back

=item SEE ALSO

=item TODO

a11340 24
=back

=over 4

=item GLOBAL VARIABLES

=over 4

=item $Carp::CarpLevel

=item $Carp::MaxEvalLen

=item $Carp::MaxArgLen

=item $Carp::MaxArgNums

=item $Carp::Verbose

=back

=back

=over 4

a12080 16
=item Why use ppport.h?

You should use F<ppport.h> in modern code so that your code will work
with the widest range of Perl interpreters possible, without significant
additional work.

=item How to use ppport.h

=item Running ppport.h

=back

=item FUNCTIONS

=over 4

d12085 1
a12085 1
=item COMPATIBILITY
d12087 1
a12087 17
=over 4

=item Provided Perl compatibility API

=item Perl API not supported by ppport.h

perl 5.9.2, perl 5.9.1, perl 5.9.0, perl 5.8.3, perl 5.8.1, perl 5.8.0,
perl 5.7.3, perl 5.7.2, perl 5.7.1, perl 5.6.1, perl 5.6.0, perl 5.005_03,
perl 5.005, perl 5.004_05, perl 5.004_04, perl 5.004

=back

=item BUGS

=item AUTHORS

=item COPYRIGHT
a13059 6
=over 4

=item The Logic of :locale

=back

d14660 1
a14660 1
=item AUTHOR
d16590 1
a16590 2
encode_qp($str), encode_qp($str, $eol), encode_qp($str, $eol, $binmode),
decode_qp($str);
d16607 1
a16607 2
encode_qp($str), encode_qp($str, $eol), encode_qp($str, $eol, $binmode),
decode_qp($str);
@


1.1.1.10
log
@perl 5.8.8 import
@
text
@a159 1
X<reference> X<dereference> X<dereferencing> X<pointer>
a163 1
X<dereference, precedence> X<dereferencing, precedence>
a167 4
X<data structure, debugging> X<complex data structure, debugging>
X<AoA, debugging> X<HoA, debugging> X<AoH, debugging> X<HoH, debugging>
X<array of arrays, debugging> X<hash of arrays, debugging>
X<array of hashes, debugging> X<hash of hashes, debugging>
a171 1
X<array of arrays> X<AoA>
a183 1
X<hash of arrays> X<HoA>
a195 1
X<array of hashes> X<AoH>
a207 1
X<hass of hashes> X<HoH>
a219 1
X<record> X<structure> X<struct>
d676 3
a678 8
Symbols starting with "_" no longer forced into main, Double-colon valid
package separator in variable name, 2nd and 3rd args to C<splice()> are now
in scalar context, Can't do C<goto> into a block that is optimized away,
Can't use whitespace as variable name or quote delimiter, C<while/if BLOCK
BLOCK> gone, C<**> binds tighter than unary minus, C<foreach> changed when
iterating over a list, C<split> with no args behavior changed, B<-e>
behavior fixed, C<push> returns number of elements in resulting list, Some
error messages differ, C<split()> honors subroutine args, Bugs removed
d682 1
a682 3
Space between . and = triggers syntax error, Better parsing in perl 5,
Function parsing, String interpolation of C<$#array> differs, Perl guesses
on C<map>, C<grep> followed by C<{> if it starts BLOCK or hash ref
d686 1
a686 3
Formatted output and significant digits, Auto-increment operator over
signed int limit deleted, Assignment of return values from numeric equality
tests doesn't work, Bitwise string ops
d690 2
a691 5
Negative array subscripts now count from the end of array, Setting
C<$#array> lower now discards array elements, Hashes get defined before
use, Glob assignment from localized variable to variable, Assigning
C<undef> to glob, Changes in unary negation (of strings), Modifying of
constants prohibited, C<defined $var> behavior changed, Variable Suicide
d695 1
a695 4
Elements of argument lists for formats evaluated in list context,
C<caller()> returns false value in scalar context if no caller present,
Comma operator in scalar context gives scalar context to args, C<sprintf()>
prototyped as C<($;@@)>
d699 2
a700 5
LHS vs. RHS of any assignment operator, Semantic errors introduced due to
precedence, Precedence of assignment operators same as the precedence of
assignment, C<open> requires parentheses around filehandle, C<$:>
precedence over C<$::> gone, Precedence of file test operators documented,
C<keys>, C<each>, C<values> are regular named unary operators
d704 3
a706 6
C<s'$lhs'$rhs'> interpolates on either side, C<m//g> attaches its state to
the searched string, C<m//o> used within an anonymous sub, C<$+> isn't set
to whole match, Substitution now returns null string if it fails,
C<s`lhs`rhs`> is now a normal substitution, Stricter parsing of variables
in regular expressions, C<m?x?> matches only once, Failed matches don't
reset the match variables
d710 1
a710 3
Barewords that used to look like strings look like subroutine calls,
Reverse is no longer allowed as the name of a sort subroutine, C<warn()>
won't let you specify a filehandle
d714 1
a714 1
SysV resets signal handler correctly, SysV C<seek()> appends correctly
d718 2
a719 7
C<@@> always interpolates an array in double-quotish strings, Double-quoted
strings may no longer end with an unescaped $, Arbitrary expressions are
evaluated inside braces within double quotes, C<$$x> now tries to
dereference $x, Creation of hashes on the fly with C<eval "EXPR"> requires
protection, Bugs in earlier perl versions, Array and hash brackets during
interpolation, Interpolation of C<\$$foo{bar}>, C<qq()> string passed to
C<eval> will not find string terminator
d723 1
a723 3
Perl5 must have been linked with same dbm/ndbm as the default for
C<dbmopen()>, DBM exceeding limit on the key/value size will cause perl5 to
exit immediately
d768 2
a769 2
=head2 perlfaq - frequently asked questions about Perl ($Date: 2005/12/30
15:04:07 $)
d832 2
a833 2
=head2 perlfaq1 - General Questions About Perl ($Revision: 1.19 $, $Date:
2005/12/31 00:54:37 $)
d847 1
a847 1
=item What are perl4, perl5, or perl6?
d881 2
a882 2
=head2 perlfaq2 - Obtaining and Learning about Perl ($Revision: 1.38 $,
$Date: 2005/12/31 00:54:37 $)
d890 1
a890 1
=item What machines support perl?  Where do I get it?
d892 1
a892 1
=item How can I get a binary version of perl?
d894 1
a894 1
=item I don't have a C compiler. How can I build my own Perl interpreter?
d896 1
a896 1
=item I copied the perl binary from one machine to another, but scripts
d925 1
a925 1
=item Where can I buy a commercial version of perl?
d937 2
a938 2
=head2 perlfaq3 - Programming Tools ($Revision: 1.56 $, $Date: 2005/12/31
00:54:37 $)
d966 3
a968 4
Eclipse, Enginsite, Komodo, Open Perl IDE, OptiPerl, PerlBuilder,
visiPerl+, Visual Perl, Zeus, GNU Emacs, MicroEMACS, XEmacs, Jed, Elvis,
Vile, Vim, Codewright, MultiEdit, SlickEdit, Bash, Ksh, Tcsh, Zsh, Affrus,
Alpha, BBEdit and BBEdit Lite
d978 2
d1009 1
a1009 1
=item Where can I learn about linking C with Perl?
d1011 2
a1012 2
=item I've read perlembed, perlguts, etc., but I can't embed perl in my C
program; what am I doing wrong?
d1024 2
a1025 2
=head2 perlfaq4 - Data Manipulation ($Revision: 1.73 $, $Date: 2005/12/31
00:54:37 $)
d1148 2
d1243 2
a1244 2
=head2 perlfaq5 - Files and Formats ($Revision: 1.42 $, $Date: 2005/12/31
00:54:37 $)
a1252 1
X<flush> X<buffer> X<unbuffer> X<autoflush>
a1255 1
X<file, editing>
a1257 1
X<file, counting lines> X<lines> X<line>
a1259 4
X<-i> X<in-place>

=item How can I copy a file?
X<copy> X<file, copy>
a1261 1
X<file, temporary>
a1263 1
X<fixed-length> X<file, fixed-length records>
a1266 1
X<filehandle, local> X<filehandle, passing> X<filehandle, reference>
a1268 1
X<filehandle, indirect>
a1270 1
X<footer>
a1272 1
X<write, into a string>
a1274 1
X<number, commify>
a1276 1
X<tilde> X<tilde expansion>
a1278 1
X<clobber> X<read-write> X<clobbering> X<truncate> X<truncating>
a1281 1
X<argument list too long>
a1283 1
X<glob>
a1285 1
X<filename, special characters>
a1287 1
X<rename> X<mv> X<move> X<file, rename> X<ren>
a1289 1
X<lock> X<file, lock> X<flock>
a1291 1
X<lock, lockfile race condition>
a1294 1
X<counter> X<file, counter>
a1297 1
X<append> X<file, append>
a1299 1
X<file, binary patch>
a1301 1
X<timestamp> X<file, timestamp>
a1303 1
X<timestamp> X<file, timestamp>
a1305 1
X<print, to multiple files>
a1307 1
X<slurp> X<file, slurping>
a1309 1
X<file, reading by paragraphs>
a1311 1
X<getc> X<file, reading one character at a time>
a1315 1
X<tail>
a1317 1
X<dup>
a1319 1
X<file, closing file descriptors>
a1322 1
X<filename, DOS issues>
a1324 1
X<glob>
a1329 1
X<file, selecting a random line>
d1339 2
a1340 2
=head2 perlfaq6 - Regular Expressions ($Revision: 1.38 $, $Date: 2005/12/31
00:54:37 $)
a1349 2
X<regex, legibility> X<regexp, legibility>
X<regular expression, legibility> X</x>
a1353 1
X<regex, multiline> X<regexp, multiline> X<regular expression, multiline>
a1356 1
X<..>
a1358 2
X<$/, regexes in> X<$INPUT_RECORD_SEPARATOR, regexes in>
X<$RS, regexes in>
a1361 2
X<replace, case preserving> X<substitute, case preserving>
X<substitution, case preserving> X<s, case preserving>
a1363 1
X<\w>
a1365 1
X<alpha>
a1367 1
X<regex, escaping> X<regexp, escaping> X<regular expression, escaping>
a1369 1
X</o>
a1374 2
X<regex, matching balanced test> X<regexp, matching balanced test>
X<regular expression, matching balanced test>
a1376 1
X<greedy> X<greediness>
a1378 1
X<word>
a1382 1
X<match, approximate> X<matching, approximate>
a1384 2
X<regex, efficiency> X<regexp, efficiency>
X<regular expression, efficiency>
a1386 1
X<\b>
a1388 1
X<$MATCH> X<$&> X<$POSTMATCH> X<$'> X<$PREMATCH> X<$`>
a1390 1
X<\G>
a1392 1
X<DFA> X<NFA> X<POSIX>
a1394 1
X<grep>
a1396 2
X<regex, and multibyte characters> X<regexp, and multibyte characters>
X<regular expression, and multibyte characters>
d1406 2
a1407 2
=head2 perlfaq7 - General Perl Language Issues ($Revision: 1.28 $, $Date:
2005/12/31 00:54:37 $)
d1488 2
a1489 2
=head2 perlfaq8 - System Interaction ($Revision: 1.27 $, $Date: 2005/12/31
00:54:37 $)
a1596 2
=item How do I tell the difference between errors from the shell and perl?

d1616 1
a1616 1
=head2 perlfaq9 - Networking ($Revision: 1.28 $, $Date: 2005/12/31 00:54:37
d1672 1
a1672 3
=item How do I find out my hostname, domainname, or IP address?
X<hostname, domainname, IP address, host, domain, hostfqdn, inet_ntoa,
gethostbyname, Socket, Net::Domain, Sys::Hostname>
a1694 1
X<declaration> X<undef> X<undefined> X<uninitialized>
a1696 1
X<comment> X<#>
a1698 1
X<statement> X<semicolon> X<expression> X<;>
a1700 1
X<truth> X<falsehood> X<true> X<false> X<!> X<not> X<negation> X<0>
a1702 2
X<statement modifier> X<modifier> X<if> X<unless> X<while>
X<until> X<foreach> X<for>
a1704 2
X<statement, compound> X<block> X<bracket, curly> X<curly bracket> X<brace>
X<{> X<}> X<if> X<unless> X<while> X<until> X<foreach> X<for> X<continue>
a1706 1
X<loop control> X<loop, control> X<next> X<last> X<redo> X<continue>
a1708 1
X<for> X<foreach>
a1710 1
X<for> X<foreach>
a1712 1
X<switch> X<block> X<case>
a1714 1
X<goto>
a1716 1
X<POD> X<documentation>
a1718 1
X<comment> X<line> X<#> X<preprocessor> X<eval>
a1732 1
X<variable, name> X<variable name> X<data type> X<type>
a1734 1
X<context> X<scalar context> X<list context>
a1736 1
X<scalar> X<number> X<string> X<reference>
a1738 1
X<scalar, literal> X<scalar, constant>
a1740 1
X<list>
a1744 1
X<slice> X<array, slice> X<hash, slice>
a1746 1
X<typeglob> X<filehandle> X<*>
d1762 1
a1762 2
=item Operator Precedence and Associativity 
X<operator, precedence> X<precedence> X<associativity>
a1764 1
X<list operator> X<operator, list> X<term>
a1766 1
X<arrow> X<dereference> X<< -> >>
a1768 1
X<increment> X<auto-increment> X<++> X<decrement> X<auto-decrement> X<-->
a1770 1
X<**> X<exponentiation> X<power>
a1772 1
X<unary operator> X<operator, unary>
a1774 1
X<binding> X<operator, binding> X<=~> X<!~>
a1776 1
X<operator, multiplicative>
a1778 1
X<operator, additive>
a1780 3
X<shift operator> X<operator, shift> X<<< << >>>
X<<< >> >>> X<right shift> X<left shift> X<bitwise shift>
X<shl> X<shr> X<shift, right> X<shift, left>
a1782 1
X<operator, named unary>
a1784 1
X<relational operator> X<operator, relational>
a1786 1
X<equality> X<equal> X<equals> X<operator, equality>
a1788 1
X<operator, bitwise, and> X<bitwise and> X<&>
a1790 2
X<operator, bitwise, or> X<bitwise or> X<|> X<operator, bitwise, xor>
X<bitwise xor> X<^>
a1792 1
X<&&> X<logical and> X<operator, logical, and>
a1794 1
X<||> X<operator, logical, or>
a1796 1
X<operator, range> X<range> X<..> X<...>
a1798 1
X<operator, conditional> X<operator, ternary> X<ternary> X<?:>
a1800 3
X<assignment> X<operator, assignment> X<=> X<**=> X<+=> X<*=> X<&=>
X<<< <<= >>> X<&&=> X<-=> X</=> X<|=> X<<< >>= >>> X<||=> X<.=>
X<%=> X<^=> X<x=>
a1802 1
X<comma> X<operator, comma> X<,>
a1804 1
X<operator, list, rightward> X<list operator>
a1806 1
X<operator, logical, not> X<not>
a1808 1
X<operator, logical, and> X<and>
a1810 4
X<operator, logical, or> X<operator, logical, xor> X<operator, logical,
err>
X<operator, logical, defined or> X<operator, logical, exclusive or>
X<or> X<xor> X<err>
a1812 2
X<operator, missing from perl> X<&> X<*>
X<typecasting> X<(TYPE)>
a1816 3
X<operator, quote> X<operator, quote-like> X<q> X<qq> X<qx> X<qw> X<m> 
X<qr> X<s> X<tr> X<'> X<''> X<"> X<""> X<//> X<`> X<``> X<<< << >>>
X<escape sequence> X<escape>
a1818 1
X<operator, regexp>
d1820 4
a1823 11
?PATTERN? X<?>, m/PATTERN/cgimosx X<m> X<operator, match>  X<regexp,
options> X<regexp> X<regex, options> X<regex>  X</c> X</i> X</m> X</o>
X</s> X</x>, /PATTERN/cgimosx, q/STRING/ X<q> X<quote, double> X<'> X<''>,
C<'STRING'>, qq/STRING/ X<qq> X<quote, double> X<"> X<"">, "STRING",
qr/STRING/imosx X<qr> X</i> X</m> X</o> X</s> X</x>, qx/STRING/ X<qx> X<`>
X<``> X<backtick>, `STRING`, qw/STRING/ X<qw> X<quote, list> X<quote,
words>, s/PATTERN/REPLACEMENT/egimosx X<substitute> X<substitution>
X<replace> X<regexp, replace> X<regexp, substitute> X</e> X</g> X</i> X</m>
X</o> X</s> X</x>, tr/SEARCHLIST/REPLACEMENTLIST/cds X<tr> X<y>
X<transliterate> X</c> X</d> X</s>, y/SEARCHLIST/REPLACEMENTLIST/cds, <<EOF
X<here-doc> X<heredoc> X<here-document> X<<< << >>>
a1825 1
X<quote, gory details>
d1827 5
a1831 6
Finding the end, Removal of backslashes before delimiters, Interpolation
X<interpolation>, C<<<'EOF'>, C<m''>, C<s'''>, C<tr///>, C<y///>, C<''>,
C<q//>, C<"">, C<``>, C<qq//>, C<qx//>, C<< <file*glob> >>, C<?RE?>,
C</RE/>, C<m/RE/>, C<s/RE/foo/>,, Interpolation of regular expressions
X<regexp, interpolation>, Optimization of regular expressions X<regexp,
optimization>
a1833 2
X<operator, i/o> X<operator, io> X<io> X<while> X<filehandle>
X<< <> >> X<@@ARGV>
a1835 1
X<constant folding> X<folding>
a1837 1
X<no-op> X<nop>
a1839 1
X<operator, bitwise, string>
a1841 1
X<integer>
a1843 1
X<floating-point> X<floating point> X<float> X<real>
a1845 1
X<number, arbitrary precision>
a1861 2
X<my> X<variable, lexical> X<lexical> X<lexical variable> X<scope, lexical>
X<lexical scope> X<attributes, my>
a1863 1
X<static> X<variable, persistent> X<variable, static> X<closure>
a1865 2
X<local> X<scope, dynamic> X<dynamic scope> X<variable, local>
X<variable, temporary>
a1867 1
X<lvalue> X<subroutine, lvalue>
a1871 1
X<typeglob> X<*>
a1873 1
X<local> X<variable, local>
a1875 1
X<pass by reference> X<pass-by-reference> X<reference>
a1877 1
X<prototype> X<subroutine, prototype>
a1879 1
X<constant>
a1881 1
X<built-in> X<override> X<CORE> X<CORE::GLOBAL>
a1883 1
X<autoloading> X<AUTOLOAD>
a1885 1
X<attribute> X<subroutine, attribute> X<attrs>
a1901 1
X<function>
d1903 11
a1913 19
Functions for SCALARs or strings X<scalar> X<string> X<character>, Regular
expressions and pattern matching X<regular expression> X<regex> X<regexp>,
Numeric functions X<numeric> X<number> X<trigonometric> X<trigonometry>,
Functions for real @@ARRAYs X<array>, Functions for list data X<list>,
Functions for real %HASHes X<hash>, Input and output functions X<I/O>
X<input> X<output> X<dbm>, Functions for fixed length data or records,
Functions for filehandles, files, or directories X<file> X<filehandle>
X<directory> X<pipe> X<link> X<symlink>, Keywords related to the control
flow of your Perl program X<control flow>, Keywords related to scoping,
Miscellaneous functions, Functions for processes and process groups
X<process> X<pid> X<process id>, Keywords related to perl modules
X<module>, Keywords related to classes and object-orientedness X<object>
X<class> X<package>, Low-level socket functions X<socket> X<sock>, System V
interprocess communication functions X<IPC> X<System V> X<semaphore>
X<shared memory> X<memory> X<message>, Fetching user and group info X<user>
X<group> X<password> X<uid> X<gid>  X<passwd> X</etc/passwd>, Fetching
network info X<network> X<protocol> X<host> X<hostname> X<IP> X<address>
X<service>, Time-related functions X<time> X<date>, Functions new in perl5
X<perl5>, Functions obsoleted in perl5
a1915 1
X<portability> X<Unix> X<portable>
d1919 76
a1994 138
-I<X> FILEHANDLE
X<-r>X<-w>X<-x>X<-o>X<-R>X<-W>X<-X>X<-O>X<-e>X<-z>X<-s>X<-f>X<-d>X<-l>X<-p>
X<-S>X<-b>X<-c>X<-t>X<-u>X<-g>X<-k>X<-T>X<-B>X<-M>X<-A>X<-C>, -I<X> EXPR,
-I<X>, abs VALUE X<abs> X<absolute>, abs, accept NEWSOCKET,GENERICSOCKET
X<accept>, alarm SECONDS X<alarm> X<SIGALRM> X<timer>, alarm, atan2 Y,X
X<atan2> X<arctangent> X<tan> X<tangent>, bind SOCKET,NAME X<bind>, binmode
FILEHANDLE, LAYER X<binmode> X<binary> X<text> X<DOS> X<Windows>, binmode
FILEHANDLE, bless REF,CLASSNAME X<bless>, bless REF, caller EXPR X<caller>
X<call stack> X<stack> X<stack trace>, caller, chdir EXPR X<chdir> X<cd>,
chdir FILEHANDLE, chdir DIRHANDLE, chdir, chmod LIST X<chmod> X<permission>
X<mode>, chomp VARIABLE X<chomp> X<INPUT_RECORD_SEPARATOR> X<$/> X<newline>
X<eol>, chomp( LIST ), chomp, chop VARIABLE X<chop>, chop( LIST ), chop,
chown LIST X<chown> X<owner> X<user> X<group>, chr NUMBER X<chr>
X<character> X<ASCII> X<Unicode>, chr, chroot FILENAME X<chroot> X<root>,
chroot, close FILEHANDLE X<close>, close, closedir DIRHANDLE X<closedir>,
connect SOCKET,NAME X<connect>, continue BLOCK X<continue>, cos EXPR X<cos>
X<cosine> X<acos> X<arccosine>, cos, crypt PLAINTEXT,SALT X<crypt>
X<digest> X<hash> X<salt> X<plaintext> X<password> X<decrypt>
X<cryptography> X<passwd>, dbmclose HASH X<dbmclose>, dbmopen
HASH,DBNAME,MASK X<dbmopen> X<dbm> X<ndbm> X<sdbm> X<gdbm>, defined EXPR
X<defined> X<undef> X<undefined>, defined, delete EXPR X<delete>, die LIST
X<die> X<throw> X<exception> X<raise> X<$@@> X<abort>, do BLOCK X<do>
X<block>, do SUBROUTINE(LIST) X<do>, do EXPR X<do>, dump LABEL X<dump>
X<core> X<undump>, dump, each HASH X<each> X<hash, iterator>, eof
FILEHANDLE X<eof> X<end of file> X<end-of-file>, eof (), eof, eval EXPR
X<eval> X<try> X<catch> X<evaluate> X<parse> X<execute>, eval BLOCK, eval,
exec LIST X<exec> X<execute>, exec PROGRAM LIST, exists EXPR X<exists>
X<autovivification>, exit EXPR X<exit> X<terminate> X<abort>, exit, exp
EXPR X<exp> X<exponential> X<antilog> X<antilogarithm> X<e>, exp, fcntl
FILEHANDLE,FUNCTION,SCALAR X<fcntl>, fileno FILEHANDLE X<fileno>, flock
FILEHANDLE,OPERATION X<flock> X<lock> X<locking>, fork X<fork> X<child>
X<parent>, format X<format>, formline PICTURE,LIST X<formline>, getc
FILEHANDLE X<getc> X<getchar>, getc, getlogin X<getlogin> X<login>,
getpeername SOCKET X<getpeername> X<peer>, getpgrp PID X<getpgrp> X<group>,
getppid X<getppid> X<parent> X<pid>, getpriority WHICH,WHO X<getpriority>
X<priority> X<nice>, getpwnam NAME X<getpwnam> X<getgrnam> X<gethostbyname>
X<getnetbyname> X<getprotobyname> X<getpwuid> X<getgrgid> X<getservbyname>
X<gethostbyaddr> X<getnetbyaddr> X<getprotobynumber> X<getservbyport>
X<getpwent> X<getgrent> X<gethostent> X<getnetent> X<getprotoent>
X<getservent> X<setpwent> X<setgrent> X<sethostent> X<setnetent>
X<setprotoent> X<setservent> X<endpwent> X<endgrent> X<endhostent>
X<endnetent> X<endprotoent> X<endservent>, getgrnam NAME, gethostbyname
NAME, getnetbyname NAME, getprotobyname NAME, getpwuid UID, getgrgid GID,
getservbyname NAME,PROTO, gethostbyaddr ADDR,ADDRTYPE, getnetbyaddr
ADDR,ADDRTYPE, getprotobynumber NUMBER, getservbyport PORT,PROTO, getpwent,
getgrent, gethostent, getnetent, getprotoent, getservent, setpwent,
setgrent, sethostent STAYOPEN, setnetent STAYOPEN, setprotoent STAYOPEN,
setservent STAYOPEN, endpwent, endgrent, endhostent, endnetent,
endprotoent, endservent, getsockname SOCKET X<getsockname>, getsockopt
SOCKET,LEVEL,OPTNAME X<getsockopt>, glob EXPR X<glob> X<wildcard>
X<filename, expansion> X<expand>, glob, gmtime EXPR X<gmtime> X<UTC>
X<Greenwich>, gmtime, goto LABEL X<goto> X<jump> X<jmp>, goto EXPR, goto
&NAME, grep BLOCK LIST X<grep>, grep EXPR,LIST, hex EXPR X<hex>
X<hexadecimal>, hex, import LIST X<import>, index STR,SUBSTR,POSITION
X<index> X<indexOf> X<InStr>, index STR,SUBSTR, int EXPR X<int> X<integer>
X<truncate> X<trunc>, int, ioctl FILEHANDLE,FUNCTION,SCALAR X<ioctl>, join
EXPR,LIST X<join>, keys HASH X<keys> X<key>, kill SIGNAL, LIST X<kill>
X<signal>, last LABEL X<last> X<break>, last, lc EXPR X<lc> X<lowercase>,
lc, lcfirst EXPR X<lcfirst> X<lowercase>, lcfirst, length EXPR X<length>
X<size>, length, link OLDFILE,NEWFILE X<link>, listen SOCKET,QUEUESIZE
X<listen>, local EXPR X<local>, localtime EXPR X<localtime>, localtime,
lock THING X<lock>, log EXPR X<log> X<logarithm> X<e> X<ln> X<base>, log,
lstat EXPR X<lstat>, lstat, m//, map BLOCK LIST X<map>, map EXPR,LIST,
mkdir FILENAME,MASK X<mkdir> X<md> X<directory, create>, mkdir FILENAME,
msgctl ID,CMD,ARG X<msgctl>, msgget KEY,FLAGS X<msgget>, msgrcv
ID,VAR,SIZE,TYPE,FLAGS X<msgrcv>, msgsnd ID,MSG,FLAGS X<msgsnd>, my EXPR
X<my>, my TYPE EXPR, my EXPR : ATTRS, my TYPE EXPR : ATTRS, next LABEL
X<next> X<continue>, next, no Module VERSION LIST X<no>, no Module VERSION,
no Module LIST, no Module, oct EXPR X<oct> X<octal> X<hex> X<hexadecimal>
X<binary> X<bin>, oct, open FILEHANDLE,EXPR X<open> X<pipe> X<file, open>
X<fopen>, open FILEHANDLE,MODE,EXPR, open FILEHANDLE,MODE,EXPR,LIST, open
FILEHANDLE,MODE,REFERENCE, open FILEHANDLE, opendir DIRHANDLE,EXPR
X<opendir>, ord EXPR X<ord> X<encoding>, ord, our EXPR X<our> X<global>,
our EXPR TYPE, our EXPR : ATTRS, our TYPE EXPR : ATTRS, pack TEMPLATE,LIST
X<pack>, package NAMESPACE X<package> X<module> X<namespace>, package, pipe
READHANDLE,WRITEHANDLE X<pipe>, pop ARRAY X<pop> X<stack>, pop, pos SCALAR
X<pos> X<match, position>, pos, print FILEHANDLE LIST X<print>, print LIST,
print, printf FILEHANDLE FORMAT, LIST X<printf>, printf FORMAT, LIST,
prototype FUNCTION X<prototype>, push ARRAY,LIST X<push>, X<stack>,
q/STRING/, qq/STRING/, qr/STRING/, qx/STRING/, qw/STRING/, quotemeta EXPR
X<quotemeta> X<metacharacter>, quotemeta, rand EXPR X<rand> X<random>,
rand, read FILEHANDLE,SCALAR,LENGTH,OFFSET X<read>, read
FILEHANDLE,SCALAR,LENGTH, readdir DIRHANDLE X<readdir>, readline EXPR
X<readline> X<gets> X<fgets>, readlink EXPR X<readlink>, readlink, readpipe
EXPR X<readpipe>, recv SOCKET,SCALAR,LENGTH,FLAGS X<recv>, redo LABEL
X<redo>, redo, ref EXPR X<ref> X<reference>, ref, rename OLDNAME,NEWNAME
X<rename> X<move> X<mv> X<ren>, require VERSION X<require>, require EXPR,
require, reset EXPR X<reset>, reset, return EXPR X<return>, return, reverse
LIST X<reverse> X<rev> X<invert>, rewinddir DIRHANDLE X<rewinddir>, rindex
STR,SUBSTR,POSITION X<rindex>, rindex STR,SUBSTR, rmdir FILENAME X<rmdir>
X<rd> X<directory, remove>, rmdir, s///, scalar EXPR X<scalar> X<context>,
seek FILEHANDLE,POSITION,WHENCE X<seek> X<fseek> X<filehandle, position>,
seekdir DIRHANDLE,POS X<seekdir>, select FILEHANDLE X<select> X<filehandle,
default>, select, select RBITS,WBITS,EBITS,TIMEOUT X<select>, semctl
ID,SEMNUM,CMD,ARG X<semctl>, semget KEY,NSEMS,FLAGS X<semget>, semop
KEY,OPSTRING X<semop>, send SOCKET,MSG,FLAGS,TO X<send>, send
SOCKET,MSG,FLAGS, setpgrp PID,PGRP X<setpgrp> X<group>, setpriority
WHICH,WHO,PRIORITY X<setpriority> X<priority> X<nice> X<renice>, setsockopt
SOCKET,LEVEL,OPTNAME,OPTVAL X<setsockopt>, shift ARRAY X<shift>, shift,
shmctl ID,CMD,ARG X<shmctl>, shmget KEY,SIZE,FLAGS X<shmget>, shmread
ID,VAR,POS,SIZE X<shmread> X<shmwrite>, shmwrite ID,STRING,POS,SIZE,
shutdown SOCKET,HOW X<shutdown>, sin EXPR X<sin> X<sine> X<asin>
X<arcsine>, sin, sleep EXPR X<sleep> X<pause>, sleep, socket
SOCKET,DOMAIN,TYPE,PROTOCOL X<socket>, socketpair
SOCKET1,SOCKET2,DOMAIN,TYPE,PROTOCOL X<socketpair>, sort SUBNAME LIST
X<sort> X<qsort> X<quicksort> X<mergesort>, sort BLOCK LIST, sort LIST,
splice ARRAY,OFFSET,LENGTH,LIST X<splice>, splice ARRAY,OFFSET,LENGTH,
splice ARRAY,OFFSET, splice ARRAY, split /PATTERN/,EXPR,LIMIT X<split>,
split /PATTERN/,EXPR, split /PATTERN/, split, sprintf FORMAT, LIST
X<sprintf>, format parameter index, flags, vector flag, (minimum) width,
precision, or maximum width X<precision>, size, order of arguments, sqrt
EXPR X<sqrt> X<root> X<square root>, sqrt, srand EXPR X<srand> X<seed>
X<randseed>, srand, stat FILEHANDLE X<stat> X<file, status>, stat EXPR,
stat, study SCALAR X<study>, study, sub NAME BLOCK X<sub>, sub NAME (PROTO)
BLOCK, sub NAME : ATTRS BLOCK, sub NAME (PROTO) : ATTRS BLOCK, substr
EXPR,OFFSET,LENGTH,REPLACEMENT X<substr> X<substring> X<mid> X<left>
X<right>, substr EXPR,OFFSET,LENGTH, substr EXPR,OFFSET, symlink
OLDFILE,NEWFILE X<symlink> X<link> X<symbolic link> X<link, symbolic>,
syscall NUMBER, LIST X<syscall> X<system call>, sysopen
FILEHANDLE,FILENAME,MODE X<sysopen>, sysopen
FILEHANDLE,FILENAME,MODE,PERMS, sysread FILEHANDLE,SCALAR,LENGTH,OFFSET
X<sysread>, sysread FILEHANDLE,SCALAR,LENGTH, sysseek
FILEHANDLE,POSITION,WHENCE X<sysseek> X<lseek>, system LIST X<system>
X<shell>, system PROGRAM LIST, syswrite FILEHANDLE,SCALAR,LENGTH,OFFSET
X<syswrite>, syswrite FILEHANDLE,SCALAR,LENGTH, syswrite FILEHANDLE,SCALAR,
tell FILEHANDLE X<tell>, tell, telldir DIRHANDLE X<telldir>, tie
VARIABLE,CLASSNAME,LIST X<tie>, tied VARIABLE X<tied>, time X<time>
X<epoch>, times X<times>, tr///, truncate FILEHANDLE,LENGTH X<truncate>,
truncate EXPR,LENGTH, uc EXPR X<uc> X<uppercase> X<toupper>, uc, ucfirst
EXPR X<ucfirst> X<uppercase>, ucfirst, umask EXPR X<umask>, umask, undef
EXPR X<undef> X<undefine>, undef, unlink LIST X<unlink> X<delete> X<remove>
X<rm>, unlink, unpack TEMPLATE,EXPR X<unpack>, untie VARIABLE X<untie>,
unshift ARRAY,LIST X<unshift>, use Module VERSION LIST X<use> X<module>
X<import>, use Module VERSION, use Module LIST, use Module, use VERSION,
utime LIST X<utime>, values HASH X<values>, vec EXPR,OFFSET,BITS X<vec>
X<bit> X<bit vector>, wait X<wait>, waitpid PID,FLAGS X<waitpid>, wantarray
X<wantarray> X<context>, warn LIST X<warn> X<warning> X<STDERR>, write
FILEHANDLE X<write>, write EXPR, write, y///
a2158 1
X<POD, ordinary paragraph>
a2160 1
X<POD, verbatim paragraph> X<verbatim>
a2162 1
X<POD, command>
d2164 5
a2168 8
C<=head1 I<Heading Text>> X<=head1> X<=head2> X<=head3> X<=head4> X<head1>
X<head2> X<head3> X<head4>, C<=head2 I<Heading Text>>, C<=head3 I<Heading
Text>>, C<=head4 I<Heading Text>>, C<=over I<indentlevel>> X<=over>
X<=item> X<=back> X<over> X<item> X<back>, C<=item I<stuff...>>, C<=back>,
C<=cut> X<=cut> X<cut>, C<=pod> X<=pod> X<pod>, C<=begin I<formatname>>
X<=begin> X<=end> X<=for> X<begin> X<end> X<for>, C<=end I<formatname>>,
C<=for I<formatname> I<text...>>, C<=encoding I<encodingname>> X<=encoding>
X<encoding>
a2170 2
X<POD, formatting code> X<formatting code>
X<POD, interior sequence> X<interior sequence>
d2172 6
a2177 14
C<IE<lt>textE<gt>> -- italic text X<I> X<< IZ<><> >> X<POD, formatting
code, italic> X<italic>, C<BE<lt>textE<gt>> -- bold text X<B> X<< BZ<><> >>
X<POD, formatting code, bold> X<bold>, C<CE<lt>codeE<gt>> -- code text X<C>
X<< CZ<><> >> X<POD, formatting code, code> X<code>, C<LE<lt>nameE<gt>> --
a hyperlink X<L> X<< LZ<><> >> X<POD, formatting code, hyperlink>
X<hyperlink>, C<EE<lt>escapeE<gt>> -- a character escape X<E> X<< EZ<><> >>
X<POD, formatting code, escape> X<escape>, C<FE<lt>filenameE<gt>> -- used
for filenames X<F> X<< FZ<><> >> X<POD, formatting code, filename>
X<filename>, C<SE<lt>textE<gt>> -- text contains non-breaking spaces X<S>
X<< SZ<><> >> X<POD, formatting code, non-breaking space>  X<non-breaking
space>, C<XE<lt>topic nameE<gt>> -- an index entry X<X> X<< XZ<><> >>
X<POD, formatting code, index entry> X<index entry>, C<ZE<lt>E<gt>> -- a
null (zero-effect) formatting code X<Z> X<< ZZ<><> >> X<POD, formatting
code, null> X<null>
a2179 1
X<POD, intent of>
a2181 1
X<POD, embedding>
a2184 2
X<podchecker> X<POD, validating>

a2243 1
X<hashbang> X<#!>
a2247 1
X<perl, location of interpreter>
a2249 1
X<perl, command switches> X<command switches>
d2251 4
a2254 7
B<-0>[I<octal/hexadecimal>] X<-0> X<$/>, B<-a> X<-a> X<autosplit>, B<-C
[I<number/list>]> X<-C>, B<-c> X<-c>, B<-d> X<-d> X<-dt>, B<-dt>,
B<-d:>I<foo[=bar,baz]> X<-d> X<-dt>, B<-dt:>I<foo[=bar,baz]>,
B<-D>I<letters> X<-D> X<DEBUGGING> X<-DDEBUGGING>, B<-D>I<number>, B<-e>
I<commandline> X<-e>, B<-f> X<-f>, B<-F>I<pattern> X<-F>, B<-h> X<-h>,
B<-i>[I<extension>] X<-i> X<in-place>, B<-I>I<directory> X<-I> X<@@INC>,
B<-l>[I<octnum>] X<-l> X<$/> X<$\>, B<-m>[B<->]I<module> X<-m> X<-M>,
d2256 3
a2258 4
B<-[mM]>[B<->]I<module=arg[,arg]...>, B<-n> X<-n>, B<-p> X<-p>, B<-P>
X<-P>, B<-s> X<-s>, B<-S> X<-S>, B<-t> X<-t>, B<-T> X<-T>, B<-u> X<-u>,
B<-U> X<-U>, B<-v> X<-v>, B<-V> X<-V>, B<-V:>I<configvar>, B<-w> X<-w>,
B<-W> X<-W>, B<-X> X<-X>, B<-x> X<-x>, B<-x> I<directory>
a2262 1
X<perl, environment variables>
d2264 7
a2270 14
HOME X<HOME>, LOGDIR X<LOGDIR>, PATH X<PATH>, PERL5LIB X<PERL5LIB>,
PERL5OPT X<PERL5OPT>, PERLIO X<PERLIO>, :bytes X<:bytes>, :crlf X<:crlf>,
:mmap X<:mmap>, :perlio X<:perlio>, :pop X<:pop>, :raw X<:raw>, :stdio
X<:stdio>, :unix X<:unix>, :utf8 X<:utf8>, :win32 X<:win32>, PERLIO_DEBUG
X<PERLIO_DEBUG>, PERLLIB X<PERLLIB>, PERL5DB X<PERL5DB>, PERL5DB_THREADED
X<PERL5DB_THREADED>, PERL5SHELL (specific to the Win32 port) X<PERL5SHELL>,
PERL_ALLOW_NON_IFS_LSP (specific to the Win32 port)
X<PERL_ALLOW_NON_IFS_LSP>, PERL_DEBUG_MSTATS X<PERL_DEBUG_MSTATS>,
PERL_DESTRUCT_LEVEL X<PERL_DESTRUCT_LEVEL>, PERL_DL_NONLAZY
X<PERL_DL_NONLAZY>, PERL_ENCODING X<PERL_ENCODING>, PERL_HASH_SEED
X<PERL_HASH_SEED>, PERL_HASH_SEED_DEBUG X<PERL_HASH_SEED_DEBUG>, PERL_ROOT
(specific to the VMS port) X<PERL_ROOT>, PERL_SIGNALS X<PERL_SIGNALS>,
PERL_UNICODE X<PERL_UNICODE>, SYS$LOGIN (specific to the VMS port)
X<SYS$LOGIN>
d2296 1
a2296 1
B<-w> X<-w>, B<-W> X<-W>, B<-X> X<-X>
a2300 1
X<warning, categories>
a2302 1
X<warning, fatal>
a2304 1
X<warning, reporting> X<warning, registering>
d2328 11
a2338 34
h X<debugger command, h>, h [command], h h, p expr X<debugger command, p>,
x [maxdepth] expr X<debugger command, x>, V [pkg [vars]] X<debugger
command, V>, X [vars] X<debugger command, X>, y [level [vars]] X<debugger
command, y>, T X<debugger command, T> X<backtrace> X<stack, backtrace>, s
[expr] X<debugger command, s> X<step>, n [expr] X<debugger command, n>, r
X<debugger command, r>, <CR>, c [line|sub] X<debugger command, c>, l
X<debugger command, l>, l min+incr, l min-max, l line, l subname, -
X<debugger command, ->, v [line] X<debugger command, v>, . X<debugger
command, .>, f filename X<debugger command, f>, /pattern/, ?pattern?, L
[abw] X<debugger command, L>, S [[!]regex] X<debugger command, S>, t
X<debugger command, t>, t expr X<debugger command, t>, b X<breakpoint>
X<debugger command, b>, b [line] [condition] X<breakpoint> X<debugger
command, b>, b subname [condition] X<breakpoint> X<debugger command, b>, b
postpone subname [condition] X<breakpoint> X<debugger command, b>, b load
filename X<breakpoint> X<debugger command, b>, b compile subname
X<breakpoint> X<debugger command, b>, B line X<breakpoint> X<debugger
command, B>, B * X<breakpoint> X<debugger command, B>, a [line] command
X<debugger command, a>, A line X<debugger command, A>, A * X<debugger
command, A>, w expr X<debugger command, w>, W expr X<debugger command, W>,
W * X<debugger command, W>, o X<debugger command, o>, o booloption ...
X<debugger command, o>, o anyoption? ... X<debugger command, o>, o
option=value ... X<debugger command, o>, < ? X<< debugger command, < >>, <
[ command ] X<< debugger command, < >>, < * X<< debugger command, < >>, <<
command X<< debugger command, << >>, > ? X<< debugger command, > >>, >
command X<< debugger command, > >>, > * X<< debugger command, > >>, >>
command X<<< debugger command, >> >>>, { ? X<debugger command, {>, { [
command ], { * X<debugger command, {>, {{ command X<debugger command, {{>,
! number X<debugger command, !>, ! -number X<debugger command, !>, !
pattern X<debugger command, !>, !! cmd X<debugger command, !!>, source file
X<debugger command, source>, H -number X<debugger command, H>, q or ^D
X<debugger command, q> X<debugger command, ^D>, R X<debugger command, R>,
|dbcmd X<debugger command, |>, ||dbcmd X<debugger command, ||>, command, m
expr X<debugger command, m>, M X<debugger command, M>, man [manpage]
X<debugger command, man>
d2342 7
a2348 20
C<recallCommand>, C<ShellBang> X<debugger option, recallCommand> X<debugger
option, ShellBang>, C<pager> X<debugger option, pager>, C<tkRunning>
X<debugger option, tkRunning>, C<signalLevel>, C<warnLevel>, C<dieLevel>
X<debugger option, signalLevel> X<debugger option, warnLevel> X<debugger
option, dieLevel>, C<AutoTrace> X<debugger option, AutoTrace>, C<LineInfo>
X<debugger option, LineInfo>, C<inhibit_exit> X<debugger option,
inhibit_exit>, C<PrintRet> X<debugger option, PrintRet>, C<ornaments>
X<debugger option, ornaments>, C<frame> X<debugger option, frame>,
C<maxTraceLen> X<debugger option, maxTraceLen>, C<windowSize> X<debugger
option, windowSize>, C<arrayDepth>, C<hashDepth> X<debugger option,
arrayDepth> X<debugger option, hashDepth>, C<dumpDepth> X<debugger option,
dumpDepth>, C<compactDump>, C<veryCompact> X<debugger option, compactDump>
X<debugger option, veryCompact>, C<globPrint> X<debugger option,
globPrint>, C<DumpDBFiles> X<debugger option, DumpDBFiles>, C<DumpPackages>
X<debugger option, DumpPackages>, C<DumpReused> X<debugger option,
DumpReused>, C<quote>, C<HighBit>, C<undefPrint> X<debugger option, quote>
X<debugger option, HighBit> X<debugger option, undefPrint>, C<UsageOnly>
X<debugger option, UsageOnly>, C<TTY> X<debugger option, TTY>, C<noTTY>
X<debugger option, noTTY>, C<ReadLine> X<debugger option, ReadLine>,
C<NonStop> X<debugger option, NonStop>
d2352 2
a2353 2
Prompt, Multiline commands, Stack backtrace X<backtrace> X<stack,
backtrace>, Line Listing Format, Frame listing
a2363 1
X<profile> X<profiling> X<profiler>
a2367 2
X<regular expression, debugging>
X<regex, debugging> X<regexp, debugging>
a2369 1
X<memory usage>
d2402 1
a2402 1
C<substr($var, $-[3], $+[3] - $-[3])>, HANDLE->format_name(EXPR),
d2415 3
a2417 3
${^UTF8LOCALE}, $PERL_VERSION, $^V, $WARNING, $^W, ${^WARNING_BITS},
$EXECUTABLE_NAME, $^X, ARGV, $ARGV, @@ARGV, ARGVOUT, @@F, @@INC, @@_, %INC,
%ENV, $ENV{expr}, %SIG, $SIG{expr}
d2435 1
a2435 4
i X</i> X<regex, case-insensitive> X<regexp, case-insensitive> X<regular
expression, case-insensitive>, m X</m> X<regex, multiline> X<regexp,
multiline> X<regular expression, multiline>, s X</s> X<regex, single-line>
X<regexp, single-line> X<regular expression, single-line>, x X</x>
d2441 1
a2441 2
[1], [2], [3], cntrl X<cntrl>, graph X<graph>, print X<print>, punct
X<punct>, xdigit X<xdigit>
d2445 4
a2448 12
C<(?#text)> X<(?#)>, C<(?imsx-imsx)> X<(?)>, C<(?:pattern)> X<(?:)>,
C<(?imsx-imsx:pattern)>, C<(?=pattern)> X<(?=)> X<look-ahead, positive>
X<lookahead, positive>, C<(?!pattern)> X<(?!)> X<look-ahead, negative>
X<lookahead, negative>, C<(?<=pattern)> X<(?<=)> X<look-behind, positive>
X<lookbehind, positive>, C<(?<!pattern)> X<(?<!)> X<look-behind, negative>
X<lookbehind, negative>, C<(?{ code })> X<(?{})> X<regex, code in>
X<regexp, code in> X<regular expression, code in>, C<(??{ code })>
X<(??{})> X<regex, postponed> X<regexp, postponed> X<regular expression,
postponed> X<regex, recursive> X<regexp, recursive> X<regular expression,
recursive>, C<< (?>pattern) >> X<backtrack> X<backtracking>,
C<(?(condition)yes-pattern|no-pattern)> X<(?()>,
C<(?(condition)yes-pattern)>
a2450 1
X<backtrack> X<backtracking>
a2452 1
X<regular expression, version 8> X<regex, version 8> X<regexp, version 8>
a2523 9
X<reference, creation> X<referencing>

1. X<\> X<backslash>, 2. X<array, anonymous> X<[> X<[]> X<square bracket>
X<bracket, square> X<arrayref> X<array reference> X<reference, array>, 3.
X<hash, anonymous> X<{> X<{}> X<curly bracket> X<bracket, curly> X<brace>
X<hashref> X<hash reference> X<reference, hash>, 4. X<subroutine,
anonymous> X<subroutine, reference> X<reference, subroutine> X<scope,
lexical> X<closure> X<lexical> X<lexical scope>, 5. X<constructor> X<new>,
6. X<autovivification>, 7. X<*foo{THING}> X<*>
a2525 4
X<reference, use> X<dereferencing> X<dereference>

2. X<${}> X<@@{}> X<%{}>, 3. X<autovivification> X<< -> >> X<arrow>, 4.
X<encapsulation>
a2527 2
X<reference, symbolic> X<reference, soft>
X<symbolic reference> X<soft reference>
a2531 1
X<pseudo-hash> X<pseudo hash> X<pseudohash>
a2533 2
X<scope, lexical> X<closure> X<lexical> X<lexical scope>
X<subroutine, nested> X<sub, nested> X<subroutine, local> X<sub, local>
a2537 1
X<reference, string context> X<reference, use as hash key>
a2551 1
X<format, text field>
a2553 1
X<#> X<format, numeric field>
a2555 1
X<@@*>
a2557 1
X<^*>
a2559 1
X<format, specifying values>
a2561 1
X<format, fill mode>
a2563 1
X<format, suppressing lines>
a2565 1
X<format, repeating lines>
a2567 1
X<format, top of form> X<top> X<header>
a2569 2
X<format variables>
X<format, variables>
a2577 1
X<format, footer> X<footer>
a2579 1
X<format, internals>
a2595 1
X<object> X<bless> X<constructor> X<new>
a2597 1
X<class> X<package> X<@@ISA> X<inheritance>
a2599 1
X<method>
a2601 1
X<invocation> X<method> X<arrow> X<< -> >>
a2603 1
X<indirect object syntax> X<invocation, indirect> X<indirect>
a2605 1
X<UNIVERSAL>
d2607 1
a2607 1
isa(CLASS) X<isa>, can(METHOD) X<can>, VERSION( [NEED] ) X<VERSION>
a2609 1
X<destructor> X<DESTROY>
a2613 2
X<garbage collection> X<GC> X<circular reference>
X<reference, circular> X<DESTROY> X<destructor>
a2631 1
X<scalar, tying>
d2633 2
a2634 2
TIESCALAR classname, LIST X<TIESCALAR>, FETCH this X<FETCH>, STORE this,
value X<STORE>, UNTIE this X<UNTIE>, DESTROY this X<DESTROY>
a2636 1
X<array, tying>
d2638 5
a2642 7
TIEARRAY classname, LIST X<TIEARRAY>, FETCH this, index X<FETCH>, STORE
this, index, value X<STORE>, FETCHSIZE this X<FETCHSIZE>, STORESIZE this,
count X<STORESIZE>, EXTEND this, count X<EXTEND>, EXISTS this, key
X<EXISTS>, DELETE this, key X<DELETE>, CLEAR this X<CLEAR>, PUSH this, LIST
 X<PUSH>, POP this X<POP>, SHIFT this X<SHIFT>, UNSHIFT this, LIST 
X<UNSHIFT>, SPLICE this, offset, length, LIST X<SPLICE>, UNTIE this
X<UNTIE>, DESTROY this X<DESTROY>
a2644 1
X<hash, tying>
d2646 3
a2648 5
USER, HOME, CLOBBER, LIST, TIEHASH classname, LIST X<TIEHASH>, FETCH this,
key X<FETCH>, STORE this, key, value X<STORE>, DELETE this, key X<DELETE>,
CLEAR this X<CLEAR>, EXISTS this, key X<EXISTS>, FIRSTKEY this X<FIRSTKEY>,
NEXTKEY this, lastkey X<NEXTKEY>, SCALAR this X<SCALAR>, UNTIE this
X<UNTIE>, DESTROY this X<DESTROY>
a2650 1
X<filehandle, tying>
d2652 3
a2654 4
TIEHANDLE classname, LIST X<TIEHANDLE>, WRITE this, LIST X<WRITE>, PRINT
this, LIST X<PRINT>, PRINTF this, LIST X<PRINTF>, READ this, LIST X<READ>,
READLINE this X<READLINE>, GETC this X<GETC>, CLOSE this X<CLOSE>, UNTIE
this X<UNTIE>, DESTROY this X<DESTROY>
a2656 1
X<UNTIE>
a2658 1
X<untie>
d3131 3
d3162 25
a3186 13
-I<X>, atan2 Y,X, atan2, binmode, chmod, chown, chroot, crypt, dbmclose,
dbmopen, dump, exec, exit, fcntl, flock, fork, getlogin, getpgrp, getppid,
getpriority, getpwnam, getgrnam, getnetbyname, getpwuid, getgrgid,
getnetbyaddr, getprotobynumber, getservbyport, getpwent, getgrent,
gethostbyname, gethostent, getnetent, getprotoent, getservent, sethostent,
setnetent, setprotoent, setservent, endpwent, endgrent, endhostent,
endnetent, endprotoent, endservent, getsockopt SOCKET,LEVEL,OPTNAME, glob,
gmtime, ioctl FILEHANDLE,FUNCTION,SCALAR, kill, link, localtime, lstat,
msgctl, msgget, msgsnd, msgrcv, open, pipe, readlink, rename, select,
semctl, semget, semop, setgrent, setpgrp, setpriority, setpwent,
setsockopt, shmctl, shmget, shmread, shmwrite, sockatmark, socketpair,
stat, symlink, syscall, sysopen, system, times, truncate, umask, utime,
wait, waitpid
d3190 9
a3581 1
X<package> X<namespace> X<variable, global> X<global variable> X<global>
a3583 1
X<symbol table> X<stash> X<%::> X<%main::> X<typeglob> X<glob> X<alias>
a3585 1
X<BEGIN> X<CHECK> X<INIT> X<END>
a3587 1
X<class> X<@@ISA>
a3589 1
X<module>
a3591 3
X<threadsafe> X<thread safe>
X<module, threadsafe> X<module, thread safe>
X<CLONE> X<CLONE_SKIP> X<thread> X<threads> X<ithread>
d3609 4
a3612 5
assertions::compat, attributes, attrs, autouse, base, bigint, bignum,
bigrat, blib, bytes, charnames, constant, diagnostics, encoding, fields,
filetest, if, integer, less, lib, locale, open, ops, overload, re, sigtrap,
sort, strict, subs, threads, threads::shared, utf8, vars, vmsish, warnings,
warnings::register
d3616 12
a3627 13
AnyDBM_File, Archive::Tar, Archive::Tar::File, Attribute::Handlers,
AutoLoader, AutoSplit, B, B::Asmdata, B::Assembler, B::Bblock, B::Bytecode,
B::C, B::CC, B::Concise, B::Debug, B::Deparse, B::Disassembler, B::Lint,
B::Showlex, B::Stackobj, B::Stash, B::Terse, B::Xref, Benchmark,
ByteLoader, CGI, CGI::Apache, CGI::Carp, CGI::Cookie, CGI::Fast,
CGI::Pretty, CGI::Push, CGI::Switch, CGI::Util, CPAN, CPAN::FirstTime,
CPAN::Nox, Carp, Carp::Heavy, Class::ISA, Class::Struct, Compress::Zlib,
Config, Cwd, DB, DB_File, Data::Dumper, Devel::DProf, Devel::PPPort,
Devel::Peek, Devel::SelfStubber, Digest, Digest::MD5, Digest::base,
DirHandle, Dumpvalue, DynaLoader, Encode, Encode::Alias, Encode::Byte,
Encode::CJKConstants, Encode::CN, Encode::CN::HZ, Encode::Config,
Encode::EBCDIC, Encode::Encoder, Encode::Encoding, Encode::Guess,
Encode::JP, Encode::JP::H2Z, Encode::JP::JIS7, Encode::KR,
a3630 1
ExtUtils::CBuilder, ExtUtils::CBuilder::Platform::Windows,
d3633 3
a3635 4
ExtUtils::MM, ExtUtils::MM_AIX, ExtUtils::MM_Any, ExtUtils::MM_BeOS,
ExtUtils::MM_Cygwin, ExtUtils::MM_DOS, ExtUtils::MM_MacOS,
ExtUtils::MM_NW5, ExtUtils::MM_OS2, ExtUtils::MM_QNX, ExtUtils::MM_UWIN,
ExtUtils::MM_Unix, ExtUtils::MM_VMS, ExtUtils::MM_VOS, ExtUtils::MM_Win32,
d3637 6
a3642 7
ExtUtils::MakeMaker::Config, ExtUtils::MakeMaker::FAQ,
ExtUtils::MakeMaker::Tutorial, ExtUtils::MakeMaker::bytes,
ExtUtils::MakeMaker::vmsish, ExtUtils::Manifest, ExtUtils::Mkbootstrap,
ExtUtils::Mksymlists, ExtUtils::Packlist, ExtUtils::ParseXS,
ExtUtils::testlib, Fatal, Fcntl, File::Basename, File::CheckTree,
File::Compare, File::Copy, File::DosGlob, File::Find, File::Glob,
File::Path, File::Spec, File::Spec::Cygwin, File::Spec::Epoc,
d3649 3
a3651 3
IO::Socket::UNIX, IO::Zlib, IPC::Open2, IPC::Open3, IPC::SysV,
IPC::SysV::Msg, IPC::SysV::Semaphore, List::Util, Locale::Constants,
Locale::Country, Locale::Currency, Locale::Language, Locale::Maketext,
d3654 10
a3663 10
Math::BigInt::Calc, Math::BigInt::FastCalc, Math::BigRat, Math::Complex,
Math::Trig, Memoize, Memoize::AnyDBM_File, Memoize::Expire,
Memoize::ExpireFile, Memoize::ExpireTest, Memoize::NDBM_File,
Memoize::SDBM_File, Memoize::Storable, NDBM_File, NEXT, Net::Cmd,
Net::Config, Net::Domain, Net::FTP, Net::NNTP, Net::Netrc, Net::POP3,
Net::Ping, Net::SMTP, Net::Time, Net::hostent, Net::libnetFAQ, Net::netent,
Net::protoent, Net::servent, O, ODBM_File, Opcode, POSIX, PerlIO,
PerlIO::encoding, PerlIO::scalar, PerlIO::via, PerlIO::via::QuotedPrint,
Pod::Checker, Pod::Find, Pod::Functions, Pod::Html, Pod::InputObjects,
Pod::LaTeX, Pod::Man, Pod::ParseLink, Pod::ParseUtils, Pod::Parser,
d3672 9
a3680 9
Test::Harness::Assert, Test::Harness::Iterator, Test::Harness::Point,
Test::Harness::Straps, Test::More, Test::Simple, Test::Tutorial,
Text::Abbrev, Text::Balanced, Text::ParseWords, Text::Soundex, Text::Tabs,
Text::Wrap, Thread, Thread::Queue, Thread::Semaphore, Thread::Signal,
Thread::Specific, Tie::Array, Tie::File, Tie::Handle, Tie::Hash,
Tie::Memoize, Tie::RefHash, Tie::Scalar, Tie::SubstrHash, Time::HiRes,
Time::Local, Time::gmtime, Time::localtime, Time::tm, UNIVERSAL,
Unicode::Collate, Unicode::Normalize, Unicode::UCD, User::grent,
User::pwent, Win32, XS::APItest, XS::Typemap, XSLoader
a4027 187
=head2 perlglossary - Perl Glossary

=over 4

=item DESCRIPTION

=over 4

=item A

accessor methods, actual arguments, address operator, algorithm, alias,
alternatives, anonymous, architecture, argument, ARGV, arithmetical
operator, array, array context, ASCII, assertion, assignment, assignment
operator, associative array, associativity, asynchronous, atom, atomic
operation, attribute, autogeneration, autoincrement, autoload, autosplit,
autovivification, AV, awk

=item B

backreference, backtracking, backward compatibility, bareword, base class,
big-endian, binary, binary operator, bind, bit, bit shift, bit string,
bless, block, BLOCK, block buffering, Boolean, Boolean context, breakpoint,
broadcast, BSD, bucket, buffer, built-in, bundle, byte, bytecode

=item C

C, C preprocessor, call by reference, call by value, callback, canonical,
capturing, character, character class, character property, circumfix
operator, class, class method, client, cloister, closure, cluster, CODE,
code generator, code subpattern, collating sequence, command, command
buffering, command name, command-line arguments, comment, compilation unit,
compile phase, compile time, compiler, composer, concatenation,
conditional, connection, construct, constructor, context, continuation,
core dump, CPAN, cracker, current package, current working directory,
currently selected output channel, CV

=item D

dangling statement, data structure, data type, datagram, DBM, declaration,
decrement, default, defined, delimiter, dereference, derived class,
descriptor, destroy, destructor, device, directive, directory, directory
handle, dispatch, distribution, dweomer, dwimmer, dynamic scoping

=item E

eclectic, element, embedding, empty subclass test, en passant,
encapsulation, endian, environment, environment variable, EOF, errno,
error, escape sequence, exception, exception handling, exec, executable
file, execute, execute bit, exit status, export, expression, extension

=item F

false, FAQ, fatal error, field, FIFO, file, file descriptor, file test
operator, fileglob, filehandle, filename, filesystem, filter, flag,
floating point, flush, FMTEYEWTK, fork, formal arguments, format, freely
available, freely redistributable, freeware, function, funny character,
garbage collection

=item G

GID, glob, global, global destruction, glue language, granularity, greedy,
grep, group, GV

=item H

hacker, handler, hard reference, hash, hash table, header file, here
document, hexadecimal, home directory, host, hubris, HV

=item I

identifier, impatience, implementation, import, increment, indexing,
indirect filehandle, indirect object, indirect object slot, indirection,
infix, inheritance, instance, instance variable, integer, interface,
interpolation, interpreter, invocant, invocation, I/O, IO, IP, IPC, is-a,
iteration, iterator, IV

=item J

JAPH

=item K

key, keyword

=item L

label, laziness, left shift, leftmost longest, lexeme, lexer, lexical
analysis, lexical scoping, lexical variable, library, LIFO, line, line
buffering, line number, link, LIST, list, list context, list operator, list
value, literal, little-endian, local, logical operator, lookahead,
lookbehind, loop, loop control statement, loop label, lvaluable, lvalue,
lvalue modifier

=item M

magic, magical increment, magical variables, Makefile, man, manpage,
matching, member data, memory, metacharacter, metasymbol, method,
minimalism, mode, modifier, module, modulus, monger, mortal,
multidimensional array, multiple inheritance

=item N

named pipe, namespace, network address, newline, NFS, null character, null
list, null string, numeric context, NV, nybble

=item O

object, octal, offset, one-liner, open source software, operand, operating
system, operator, operator overloading, options, overloading, overriding,
owner

=item P

package, pad, parameter, parent class, parse tree, parsing, patch, PATH,
pathname, pattern, pattern matching, permission bits, Pern, pipe, pipeline,
platform, pod, pointer, polymorphism, port, portable, porter, POSIX,
postfix, pp, pragma, precedence, prefix, preprocessing, procedure, process,
program generator, progressive matching, property, protocol, prototype,
pseudofunction, pseudohash, pseudoliteral, public domain, pumpkin,
pumpking, PV

=item Q

qualified, quantifier

=item R

readable, reaping, record, recursion, reference, referent, regex, regular
expression, regular expression modifier, regular file, relational operator,
reserved words, return value, RFC, right shift, root, RTFM, run phase, run
time, run-time pattern, RV, rvalue

=item S

scalar, scalar context, scalar literal, scalar value, scalar variable,
scope, scratchpad, script, script kiddie, sed, semaphore, separator,
serialization, server, service, setgid, setuid, shared memory, shebang,
shell, side effects, signal, signal handler, single inheritance, slice,
slurp, socket, soft reference, source filter, stack, standard, standard
error, standard I/O, standard input, standard output, stat structure,
statement, statement modifier, static, static method, static scoping,
static variable, status, STDERR, STDIN, STDIO, STDOUT, stream, string,
string context, stringification, struct, structure, subclass, subpattern,
subroutine, subscript, substitution, substring, superclass, superuser, SV,
switch, switch cluster, switch statement, symbol, symbol table, symbolic
debugger, symbolic link, symbolic reference, synchronous, syntactic sugar,
syntax, syntax tree, syscall

=item T

tainted, TCP, term, terminator, ternary, text, thread, tie, TMTOWTDI,
token, tokener, tokenizing, toolbox approach, transliterate, trigger,
trinary, troff, true, truncating, type, type casting, typed lexical,
typedef, typeglob, typemap

=item U

UDP, UID, umask, unary operator, Unicode, Unix

=item V

value, variable, variable interpolation, variadic, vector, virtual, void
context, v-string

=item W

warning, watch expression, whitespace, word, working directory, wrapper,
WYSIWYG

=item X

XS, XSUB

=item Y

yacc

=item Z

zero width, zombie

=back

=item AUTHOR AND COPYRIGHT

=back

d4121 10
a4507 2
=item Backwards compatibility

d4570 2
a4626 1
X<Perl API> X<API> X<api>
d4630 1
a4630 3
GIMME X<GIMME>, GIMME_V X<GIMME_V>, G_ARRAY X<G_ARRAY>, G_DISCARD
X<G_DISCARD>, G_EVAL X<G_EVAL>, G_NOARGS X<G_NOARGS>, G_SCALAR X<G_SCALAR>,
G_VOID X<G_VOID>
d4634 3
a4636 6
AvFILL X<AvFILL>, av_clear X<av_clear>, av_delete X<av_delete>, av_exists
X<av_exists>, av_extend X<av_extend>, av_fetch X<av_fetch>, av_fill
X<av_fill>, av_len X<av_len>, av_make X<av_make>, av_pop X<av_pop>, av_push
X<av_push>, av_shift X<av_shift>, av_store X<av_store>, av_undef
X<av_undef>, av_unshift X<av_unshift>, get_av X<get_av>, newAV X<newAV>,
sortsv X<sortsv>
d4640 2
a4641 3
call_argv X<call_argv>, call_method X<call_method>, call_pv X<call_pv>,
call_sv X<call_sv>, ENTER X<ENTER>, eval_pv X<eval_pv>, eval_sv X<eval_sv>,
FREETMPS X<FREETMPS>, LEAVE X<LEAVE>, SAVETMPS X<SAVETMPS>
d4645 1
a4645 3
isALNUM X<isALNUM>, isALPHA X<isALPHA>, isDIGIT X<isDIGIT>, isLOWER
X<isLOWER>, isSPACE X<isSPACE>, isUPPER X<isUPPER>, toLOWER X<toLOWER>,
toUPPER X<toUPPER>
d4649 1
a4649 1
perl_clone X<perl_clone>
d4653 1
a4653 1
CvSTASH X<CvSTASH>, get_cv X<get_cv>
d4657 2
a4658 4
cv_undef X<cv_undef>, load_module X<load_module>, nothreadhook
X<nothreadhook>, perl_alloc X<perl_alloc>, perl_construct
X<perl_construct>, perl_destruct X<perl_destruct>, perl_free X<perl_free>,
perl_parse X<perl_parse>, perl_run X<perl_run>, require_pv X<require_pv>
d4662 1
a4662 2
packlist X<packlist>, pack_cat X<pack_cat>, unpackstring X<unpackstring>,
unpack_str X<unpack_str>
d4666 1
a4666 2
PL_modglobal X<PL_modglobal>, PL_na X<PL_na>, PL_sv_no X<PL_sv_no>,
PL_sv_undef X<PL_sv_undef>, PL_sv_yes X<PL_sv_yes>
d4670 2
a4671 4
GvSV X<GvSV>, gv_fetchmeth X<gv_fetchmeth>, gv_fetchmethod
X<gv_fetchmethod>, gv_fetchmethod_autoload X<gv_fetchmethod_autoload>,
gv_fetchmeth_autoload X<gv_fetchmeth_autoload>, gv_stashpv X<gv_stashpv>,
gv_stashpvn X<gv_stashpvn>, gv_stashsv X<gv_stashsv>
d4675 1
a4675 2
Nullav X<Nullav>, Nullch X<Nullch>, Nullcv X<Nullcv>, Nullhv X<Nullhv>,
Nullsv X<Nullsv>
d4679 6
a4684 12
get_hv X<get_hv>, HEf_SVKEY X<HEf_SVKEY>, HeHASH X<HeHASH>, HeKEY X<HeKEY>,
HeKLEN X<HeKLEN>, HePV X<HePV>, HeSVKEY X<HeSVKEY>, HeSVKEY_force
X<HeSVKEY_force>, HeSVKEY_set X<HeSVKEY_set>, HeVAL X<HeVAL>, HvNAME
X<HvNAME>, hv_clear X<hv_clear>, hv_clear_placeholders
X<hv_clear_placeholders>, hv_delete X<hv_delete>, hv_delete_ent
X<hv_delete_ent>, hv_exists X<hv_exists>, hv_exists_ent X<hv_exists_ent>,
hv_fetch X<hv_fetch>, hv_fetch_ent X<hv_fetch_ent>, hv_iterinit
X<hv_iterinit>, hv_iterkey X<hv_iterkey>, hv_iterkeysv X<hv_iterkeysv>,
hv_iternext X<hv_iternext>, hv_iternextsv X<hv_iternextsv>,
hv_iternext_flags X<hv_iternext_flags>, hv_iterval X<hv_iterval>, hv_magic
X<hv_magic>, hv_scalar X<hv_scalar>, hv_store X<hv_store>, hv_store_ent
X<hv_store_ent>, hv_undef X<hv_undef>, newHV X<newHV>
d4688 3
a4690 7
mg_clear X<mg_clear>, mg_copy X<mg_copy>, mg_find X<mg_find>, mg_free
X<mg_free>, mg_get X<mg_get>, mg_length X<mg_length>, mg_magical
X<mg_magical>, mg_set X<mg_set>, SvGETMAGIC X<SvGETMAGIC>, SvLOCK
X<SvLOCK>, SvSETMAGIC X<SvSETMAGIC>, SvSetMagicSV X<SvSetMagicSV>,
SvSetMagicSV_nosteal X<SvSetMagicSV_nosteal>, SvSetSV X<SvSetSV>,
SvSetSV_nosteal X<SvSetSV_nosteal>, SvSHARE X<SvSHARE>, SvUNLOCK
X<SvUNLOCK>
d4694 2
a4695 5
Copy X<Copy>, CopyD X<CopyD>, Move X<Move>, MoveD X<MoveD>, Newx X<Newx>,
Newxc X<Newxc>, Newxz X<Newxz>, Poison X<Poison>, Renew X<Renew>, Renewc
X<Renewc>, Safefree X<Safefree>, savepv X<savepv>, savepvn X<savepvn>,
savesharedpv X<savesharedpv>, savesvpv X<savesvpv>, StructCopy
X<StructCopy>, Zero X<Zero>, ZeroD X<ZeroD>
d4699 2
a4700 5
fbm_compile X<fbm_compile>, fbm_instr X<fbm_instr>, form X<form>, getcwd_sv
X<getcwd_sv>, strEQ X<strEQ>, strGE X<strGE>, strGT X<strGT>, strLE
X<strLE>, strLT X<strLT>, strNE X<strNE>, strnEQ X<strnEQ>, strnNE
X<strnNE>, sv_nolocking X<sv_nolocking>, sv_nosharing X<sv_nosharing>,
sv_nounlocking X<sv_nounlocking>
d4704 2
a4705 3
grok_bin X<grok_bin>, grok_hex X<grok_hex>, grok_number X<grok_number>,
grok_numeric_radix X<grok_numeric_radix>, grok_oct X<grok_oct>, scan_bin
X<scan_bin>, scan_hex X<scan_hex>, scan_oct X<scan_oct>
d4709 1
a4709 1
cv_const_sv X<cv_const_sv>, newCONSTSUB X<newCONSTSUB>, newXS X<newXS>
d4713 1
a4713 1
pad_sv X<pad_sv>
d4717 7
a4723 16
dMARK X<dMARK>, dORIGMARK X<dORIGMARK>, dSP X<dSP>, EXTEND X<EXTEND>, MARK
X<MARK>, mPUSHi X<mPUSHi>, mPUSHn X<mPUSHn>, mPUSHp X<mPUSHp>, mPUSHu
X<mPUSHu>, mXPUSHi X<mXPUSHi>, mXPUSHn X<mXPUSHn>, mXPUSHp X<mXPUSHp>,
mXPUSHu X<mXPUSHu>, ORIGMARK X<ORIGMARK>, POPi X<POPi>, POPl X<POPl>, POPn
X<POPn>, POPp X<POPp>, POPpbytex X<POPpbytex>, POPpx X<POPpx>, POPs
X<POPs>, PUSHi X<PUSHi>, PUSHMARK X<PUSHMARK>, PUSHmortal X<PUSHmortal>,
PUSHn X<PUSHn>, PUSHp X<PUSHp>, PUSHs X<PUSHs>, PUSHu X<PUSHu>, PUTBACK
X<PUTBACK>, SP X<SP>, SPAGAIN X<SPAGAIN>, XPUSHi X<XPUSHi>, XPUSHmortal
X<XPUSHmortal>, XPUSHn X<XPUSHn>, XPUSHp X<XPUSHp>, XPUSHs X<XPUSHs>,
XPUSHu X<XPUSHu>, XSRETURN X<XSRETURN>, XSRETURN_EMPTY X<XSRETURN_EMPTY>,
XSRETURN_IV X<XSRETURN_IV>, XSRETURN_NO X<XSRETURN_NO>, XSRETURN_NV
X<XSRETURN_NV>, XSRETURN_PV X<XSRETURN_PV>, XSRETURN_UNDEF
X<XSRETURN_UNDEF>, XSRETURN_UV X<XSRETURN_UV>, XSRETURN_YES
X<XSRETURN_YES>, XST_mIV X<XST_mIV>, XST_mNO X<XST_mNO>, XST_mNV
X<XST_mNV>, XST_mPV X<XST_mPV>, XST_mUNDEF X<XST_mUNDEF>, XST_mYES
X<XST_mYES>
d4727 1
a4727 3
svtype X<svtype>, SVt_IV X<SVt_IV>, SVt_NV X<SVt_NV>, SVt_PV X<SVt_PV>,
SVt_PVAV X<SVt_PVAV>, SVt_PVCV X<SVt_PVCV>, SVt_PVHV X<SVt_PVHV>, SVt_PVMG
X<SVt_PVMG>
d4731 34
a4764 77
get_sv X<get_sv>, looks_like_number X<looks_like_number>, newRV_inc
X<newRV_inc>, newRV_noinc X<newRV_noinc>, NEWSV X<NEWSV>, newSV X<newSV>,
newSVhek X<newSVhek>, newSViv X<newSViv>, newSVnv X<newSVnv>, newSVpv
X<newSVpv>, newSVpvf X<newSVpvf>, newSVpvn X<newSVpvn>, newSVpvn_share
X<newSVpvn_share>, newSVrv X<newSVrv>, newSVsv X<newSVsv>, newSVuv
X<newSVuv>, SvCUR X<SvCUR>, SvCUR_set X<SvCUR_set>, SvEND X<SvEND>, SvGROW
X<SvGROW>, SvIOK X<SvIOK>, SvIOKp X<SvIOKp>, SvIOK_notUV X<SvIOK_notUV>,
SvIOK_off X<SvIOK_off>, SvIOK_on X<SvIOK_on>, SvIOK_only X<SvIOK_only>,
SvIOK_only_UV X<SvIOK_only_UV>, SvIOK_UV X<SvIOK_UV>, SvIsCOW X<SvIsCOW>,
SvIsCOW_shared_hash X<SvIsCOW_shared_hash>, SvIV X<SvIV>, SvIVX X<SvIVX>,
SvIVx X<SvIVx>, SvIV_set X<SvIV_set>, SvLEN X<SvLEN>, SvLEN_set
X<SvLEN_set>, SvMAGIC_set X<SvMAGIC_set>, SvNIOK X<SvNIOK>, SvNIOKp
X<SvNIOKp>, SvNIOK_off X<SvNIOK_off>, SvNOK X<SvNOK>, SvNOKp X<SvNOKp>,
SvNOK_off X<SvNOK_off>, SvNOK_on X<SvNOK_on>, SvNOK_only X<SvNOK_only>,
SvNV X<SvNV>, SvNVX X<SvNVX>, SvNVx X<SvNVx>, SvNV_set X<SvNV_set>, SvOK
X<SvOK>, SvOOK X<SvOOK>, SvPOK X<SvPOK>, SvPOKp X<SvPOKp>, SvPOK_off
X<SvPOK_off>, SvPOK_on X<SvPOK_on>, SvPOK_only X<SvPOK_only>,
SvPOK_only_UTF8 X<SvPOK_only_UTF8>, SvPV X<SvPV>, SvPVbyte X<SvPVbyte>,
SvPVbytex X<SvPVbytex>, SvPVbytex_force X<SvPVbytex_force>, SvPVbyte_force
X<SvPVbyte_force>, SvPVbyte_nolen X<SvPVbyte_nolen>, SvPVutf8 X<SvPVutf8>,
SvPVutf8x X<SvPVutf8x>, SvPVutf8x_force X<SvPVutf8x_force>, SvPVutf8_force
X<SvPVutf8_force>, SvPVutf8_nolen X<SvPVutf8_nolen>, SvPVX X<SvPVX>, SvPVx
X<SvPVx>, SvPV_force X<SvPV_force>, SvPV_force_nomg X<SvPV_force_nomg>,
SvPV_nolen X<SvPV_nolen>, SvPV_set X<SvPV_set>, SvREFCNT X<SvREFCNT>,
SvREFCNT_dec X<SvREFCNT_dec>, SvREFCNT_inc X<SvREFCNT_inc>, SvROK X<SvROK>,
SvROK_off X<SvROK_off>, SvROK_on X<SvROK_on>, SvRV X<SvRV>, SvRV_set
X<SvRV_set>, SvSTASH X<SvSTASH>, SvSTASH_set X<SvSTASH_set>, SvTAINT
X<SvTAINT>, SvTAINTED X<SvTAINTED>, SvTAINTED_off X<SvTAINTED_off>,
SvTAINTED_on X<SvTAINTED_on>, SvTRUE X<SvTRUE>, SvTYPE X<SvTYPE>, SvUOK
X<SvUOK>, SvUPGRADE X<SvUPGRADE>, SvUTF8 X<SvUTF8>, SvUTF8_off
X<SvUTF8_off>, SvUTF8_on X<SvUTF8_on>, SvUV X<SvUV>, SvUVX X<SvUVX>, SvUVx
X<SvUVx>, SvUV_set X<SvUV_set>, sv_2bool X<sv_2bool>, sv_2cv X<sv_2cv>,
sv_2io X<sv_2io>, sv_2iv X<sv_2iv>, sv_2mortal X<sv_2mortal>, sv_2nv
X<sv_2nv>, sv_2pvbyte X<sv_2pvbyte>, sv_2pvbyte_nolen X<sv_2pvbyte_nolen>,
sv_2pvutf8 X<sv_2pvutf8>, sv_2pvutf8_nolen X<sv_2pvutf8_nolen>,
sv_2pv_flags X<sv_2pv_flags>, sv_2pv_nolen X<sv_2pv_nolen>, sv_2uv
X<sv_2uv>, sv_backoff X<sv_backoff>, sv_bless X<sv_bless>, sv_catpv
X<sv_catpv>, sv_catpvf X<sv_catpvf>, sv_catpvf_mg X<sv_catpvf_mg>,
sv_catpvn X<sv_catpvn>, sv_catpvn_flags X<sv_catpvn_flags>, sv_catpvn_mg
X<sv_catpvn_mg>, sv_catpvn_nomg X<sv_catpvn_nomg>, sv_catpv_mg
X<sv_catpv_mg>, sv_catsv X<sv_catsv>, sv_catsv_flags X<sv_catsv_flags>,
sv_catsv_mg X<sv_catsv_mg>, sv_catsv_nomg X<sv_catsv_nomg>, sv_chop
X<sv_chop>, sv_clear X<sv_clear>, sv_cmp X<sv_cmp>, sv_cmp_locale
X<sv_cmp_locale>, sv_collxfrm X<sv_collxfrm>, sv_copypv X<sv_copypv>,
sv_dec X<sv_dec>, sv_derived_from X<sv_derived_from>, sv_eq X<sv_eq>,
sv_force_normal X<sv_force_normal>, sv_force_normal_flags
X<sv_force_normal_flags>, sv_free X<sv_free>, sv_gets X<sv_gets>, sv_grow
X<sv_grow>, sv_inc X<sv_inc>, sv_insert X<sv_insert>, sv_isa X<sv_isa>,
sv_isobject X<sv_isobject>, sv_iv X<sv_iv>, sv_len X<sv_len>, sv_len_utf8
X<sv_len_utf8>, sv_magic X<sv_magic>, sv_magicext X<sv_magicext>,
sv_mortalcopy X<sv_mortalcopy>, sv_newmortal X<sv_newmortal>, sv_newref
X<sv_newref>, sv_nv X<sv_nv>, sv_pos_b2u X<sv_pos_b2u>, sv_pos_u2b
X<sv_pos_u2b>, sv_pv X<sv_pv>, sv_pvbyte X<sv_pvbyte>, sv_pvbyten
X<sv_pvbyten>, sv_pvbyten_force X<sv_pvbyten_force>, sv_pvn X<sv_pvn>,
sv_pvn_force X<sv_pvn_force>, sv_pvn_force_flags X<sv_pvn_force_flags>,
sv_pvutf8 X<sv_pvutf8>, sv_pvutf8n X<sv_pvutf8n>, sv_pvutf8n_force
X<sv_pvutf8n_force>, sv_reftype X<sv_reftype>, sv_replace X<sv_replace>,
sv_report_used X<sv_report_used>, sv_reset X<sv_reset>, sv_rvweaken
X<sv_rvweaken>, sv_setiv X<sv_setiv>, sv_setiv_mg X<sv_setiv_mg>, sv_setnv
X<sv_setnv>, sv_setnv_mg X<sv_setnv_mg>, sv_setpv X<sv_setpv>, sv_setpvf
X<sv_setpvf>, sv_setpvf_mg X<sv_setpvf_mg>, sv_setpviv X<sv_setpviv>,
sv_setpviv_mg X<sv_setpviv_mg>, sv_setpvn X<sv_setpvn>, sv_setpvn_mg
X<sv_setpvn_mg>, sv_setpv_mg X<sv_setpv_mg>, sv_setref_iv X<sv_setref_iv>,
sv_setref_nv X<sv_setref_nv>, sv_setref_pv X<sv_setref_pv>, sv_setref_pvn
X<sv_setref_pvn>, sv_setref_uv X<sv_setref_uv>, sv_setsv X<sv_setsv>,
sv_setsv_flags X<sv_setsv_flags>, sv_setsv_mg X<sv_setsv_mg>, sv_setsv_nomg
X<sv_setsv_nomg>, sv_setuv X<sv_setuv>, sv_setuv_mg X<sv_setuv_mg>,
sv_taint X<sv_taint>, sv_tainted X<sv_tainted>, sv_true X<sv_true>,
sv_unmagic X<sv_unmagic>, sv_unref X<sv_unref>, sv_unref_flags
X<sv_unref_flags>, sv_untaint X<sv_untaint>, sv_upgrade X<sv_upgrade>,
sv_usepvn X<sv_usepvn>, sv_usepvn_mg X<sv_usepvn_mg>, sv_utf8_decode
X<sv_utf8_decode>, sv_utf8_downgrade X<sv_utf8_downgrade>, sv_utf8_encode
X<sv_utf8_encode>, sv_utf8_upgrade X<sv_utf8_upgrade>,
sv_utf8_upgrade_flags X<sv_utf8_upgrade_flags>, sv_uv X<sv_uv>, sv_vcatpvf
X<sv_vcatpvf>, sv_vcatpvfn X<sv_vcatpvfn>, sv_vcatpvf_mg X<sv_vcatpvf_mg>,
sv_vsetpvf X<sv_vsetpvf>, sv_vsetpvfn X<sv_vsetpvfn>, sv_vsetpvf_mg
X<sv_vsetpvf_mg>
d4768 6
a4773 13
bytes_from_utf8 X<bytes_from_utf8>, bytes_to_utf8 X<bytes_to_utf8>,
ibcmp_utf8 X<ibcmp_utf8>, is_utf8_char X<is_utf8_char>, is_utf8_string
X<is_utf8_string>, is_utf8_string_loc X<is_utf8_string_loc>,
is_utf8_string_loclen X<is_utf8_string_loclen>, pv_uni_display
X<pv_uni_display>, sv_cat_decode X<sv_cat_decode>, sv_recode_to_utf8
X<sv_recode_to_utf8>, sv_uni_display X<sv_uni_display>, to_utf8_case
X<to_utf8_case>, to_utf8_fold X<to_utf8_fold>, to_utf8_lower
X<to_utf8_lower>, to_utf8_title X<to_utf8_title>, to_utf8_upper
X<to_utf8_upper>, utf8n_to_uvchr X<utf8n_to_uvchr>, utf8n_to_uvuni
X<utf8n_to_uvuni>, utf8_distance X<utf8_distance>, utf8_hop X<utf8_hop>,
utf8_length X<utf8_length>, utf8_to_bytes X<utf8_to_bytes>, utf8_to_uvchr
X<utf8_to_uvchr>, utf8_to_uvuni X<utf8_to_uvuni>, uvchr_to_utf8
X<uvchr_to_utf8>, uvuni_to_utf8_flags X<uvuni_to_utf8_flags>
d4777 2
a4778 4
ax X<ax>, CLASS X<CLASS>, dAX X<dAX>, dAXMARK X<dAXMARK>, dITEMS X<dITEMS>,
dXSARGS X<dXSARGS>, dXSI32 X<dXSI32>, items X<items>, ix X<ix>, newXSproto
X<newXSproto>, RETVAL X<RETVAL>, ST X<ST>, THIS X<THIS>, XS X<XS>,
XS_VERSION X<XS_VERSION>, XS_VERSION_BOOTCHECK X<XS_VERSION_BOOTCHECK>
d4782 1
a4782 1
croak X<croak>, warn X<warn>
a4795 1
X<internal Perl functions> X<interpreter functions>
d4799 1
a4799 1
CvWEAKOUTSIDE X<CvWEAKOUTSIDE>
d4803 5
a4807 11
CX_CURPAD_SAVE X<CX_CURPAD_SAVE>, CX_CURPAD_SV X<CX_CURPAD_SV>, PAD_BASE_SV
X<PAD_BASE_SV>, PAD_CLONE_VARS X<PAD_CLONE_VARS>, PAD_COMPNAME_FLAGS
X<PAD_COMPNAME_FLAGS>, PAD_COMPNAME_GEN X<PAD_COMPNAME_GEN>,
PAD_COMPNAME_GEN_set X<PAD_COMPNAME_GEN_set>, PAD_COMPNAME_OURSTASH
X<PAD_COMPNAME_OURSTASH>, PAD_COMPNAME_PV X<PAD_COMPNAME_PV>,
PAD_COMPNAME_TYPE X<PAD_COMPNAME_TYPE>, PAD_DUP X<PAD_DUP>,
PAD_RESTORE_LOCAL X<PAD_RESTORE_LOCAL>, PAD_SAVE_LOCAL X<PAD_SAVE_LOCAL>,
PAD_SAVE_SETNULLPAD X<PAD_SAVE_SETNULLPAD>, PAD_SETSV X<PAD_SETSV>,
PAD_SET_CUR X<PAD_SET_CUR>, PAD_SET_CUR_NOSAVE X<PAD_SET_CUR_NOSAVE>,
PAD_SV X<PAD_SV>, PAD_SVl X<PAD_SVl>, SAVECLEARSV X<SAVECLEARSV>,
SAVECOMPPAD X<SAVECOMPPAD>, SAVEPADSV X<SAVEPADSV>
d4811 1
a4811 1
find_runcv X<find_runcv>
d4815 2
a4816 3
PL_DBsingle X<PL_DBsingle>, PL_DBsub X<PL_DBsub>, PL_DBtrace X<PL_DBtrace>,
PL_dowarn X<PL_dowarn>, PL_last_in_gv X<PL_last_in_gv>, PL_ofs_sv
X<PL_ofs_sv>, PL_rs X<PL_rs>
d4820 1
a4820 1
is_gv_magical X<is_gv_magical>
d4824 1
a4824 1
start_glob X<start_glob>
d4828 4
a4831 9
CvPADLIST X<CvPADLIST>, cv_clone X<cv_clone>, cv_dump X<cv_dump>,
do_dump_pad X<do_dump_pad>, intro_my X<intro_my>, pad_add_anon
X<pad_add_anon>, pad_add_name X<pad_add_name>, pad_alloc X<pad_alloc>,
pad_block_start X<pad_block_start>, pad_check_dup X<pad_check_dup>,
pad_findlex X<pad_findlex>, pad_findmy X<pad_findmy>, pad_fixup_inner_anons
X<pad_fixup_inner_anons>, pad_free X<pad_free>, pad_leavemy X<pad_leavemy>,
pad_new X<pad_new>, pad_push X<pad_push>, pad_reset X<pad_reset>, pad_setsv
X<pad_setsv>, pad_swipe X<pad_swipe>, pad_tidy X<pad_tidy>, pad_undef
X<pad_undef>
d4835 1
a4835 1
djSP X<djSP>, LVRET X<LVRET>
d4839 1
a4839 3
report_uninit X<report_uninit>, sv_add_arena X<sv_add_arena>, sv_clean_all
X<sv_clean_all>, sv_clean_objs X<sv_clean_objs>, sv_free_arenas
X<sv_free_arenas>
d4994 1
a4994 1
Startup, Parsing, Optimization, Running, Exception handing
d5036 1
a5036 1
check.utf8, minitest.utf16 test.utf16, test_harness, test-notty test_notty
d5040 1
a5040 2
-v, -torture, -re=PATTERN, -re LIST OF PATTERNS, PERL_CORE=1,
PERL_DESTRUCT_LEVEL=2, PERL, PERL_SKIP_TTY_TEST
d5103 1
a5103 1
=item The roadmap to 5.10
d5105 5
a5109 1
=over 4
d5111 1
a5111 1
=item Needed for a 5.9.4 release
d5113 1
a5113 1
=item Needed for a 5.9.5 release
d5115 1
a5115 1
Implement L</_ prototype character>, Implement L</state variables>
d5117 1
a5117 1
=item Needed for a 5.9.6 release
d5121 1
a5121 1
=item Tasks that only need Perl knowledge
d5125 1
a5125 1
=item common test code for timed bail out
d5127 1
a5127 1
=item POD -> HTML conversion in the core still sucks
d5129 1
a5129 1
=item Parallel testing
d5131 1
a5131 1
=item Make Schwern poorer
d5133 1
a5133 1
=item Improve the coverage of the core tests
d5135 1
a5135 1
=item test B
d5137 1
a5137 1
=item A decent benchmark
d5139 1
a5139 1
=item fix tainting bugs
d5141 1
a5141 1
=item Dual life everything
d5143 1
a5143 3
=item Improving C<threads::shared>

=item POSIX memory footprint
d5147 1
a5147 1
=item Tasks that need a little sysadmin-type knowledge
d5151 1
a5151 1
=item Relocatable perl
d5153 1
a5153 1
=item make HTML install work
d5155 1
a5155 1
=item compressed man pages
d5157 1
a5157 1
=item Add a code coverage target to the Makefile
d5159 1
a5159 3
=item Make Config.pm cope with differences between build and installed perl

=item make parallel builds work
d5161 1
a5161 1
=item linker specification files
d5165 1
a5165 1
=item Tasks that need a little C knowledge
d5169 1
a5169 1
=item Make it clear from -v if this is the exact official release
d5171 1
a5171 1
=item Tidy up global variables
d5173 1
a5173 1
=item Ordering of "global" variables.
d5175 1
a5175 7
=item bincompat functions

=item am I hot or not?

=item emulate the per-thread memory pool on Unix

=item reduce duplication in sv_setsv_flags
d5177 1
a5177 5
=back

=item Tasks that need a knowledge of XS

=over 4
d5181 1
a5181 1
=item shrink C<GV>s, C<CV>s
d5183 1
a5183 1
=item merge Perl_sv_2[inpu]v
d5185 1
a5185 1
=item UTF8 caching code
d5187 1
a5187 1
=item Implicit Latin 1 => Unicode translation
d5189 1
a5189 1
=item autovivification
d5191 1
a5191 1
=item Unicode in Filenames
d5193 1
a5193 1
=item Unicode in %ENV
d5195 1
a5195 1
=item use less 'memory'
d5197 1
a5197 1
=item Re-implement C<:unique> in a way that is actually thread-safe
d5199 1
a5199 1
=item Make tainting consistent
d5201 1
a5201 1
=item readpipe(LIST)
d5205 1
a5205 1
=item Tasks that need a knowledge of the interpreter
d5209 1
a5209 1
=item lexical pragmas
d5211 1
a5211 1
=item Attach/detach debugger from running program
d5213 1
a5213 1
=item Constant folding
d5215 1
a5215 1
=item LVALUE functions for lists
d5217 1
a5217 1
=item LVALUE functions in the debugger
d5219 1
a5219 1
=item _ prototype character
d5221 1
a5221 1
=item state variables
d5223 1
a5223 1
=item @@INC source filter to Filter::Simple
d5225 1
a5225 1
=item regexp optimiser optional
d5227 1
a5227 1
=item UNITCHECK
d5229 1
a5229 1
=item optional optimizer
d5231 1
a5231 1
=item You WANT *how* many
d5233 1
a5233 1
=item lexical aliases
d5235 1
a5235 1
=item entersub XS vs Perl
d5237 1
a5237 1
=item Self ties
d5239 1
a5239 1
=item Optimize away @@_
d5241 1
a5241 1
=item What hooks would assertions need?
d5243 1
a5243 1
=back
d5245 1
a5245 1
=item Big projects
d5247 1
a5247 1
=over 4
d5249 1
a5249 1
=item make ithreads more robust
d5251 1
a5251 5
=item iCOW

=item (?{...}) closures in regexps

=item A re-entrant regexp engine
d5312 1
a5312 1
=head2 perldelta - what is new for perl v5.8.8
d5350 1
a5350 1
=head2 perl588delta, perldelta - what is new for perl v5.8.8
d5388 1
a5388 1
=head2 perl587delta, perldelta - what is new for perl v5.8.7
a5397 12
=over 4

=item Unicode Character Database 4.1.0

=item suidperl less insecure

=item Optional site customization script

=item C<Config.pm> is now much smaller.

=back

d5404 3
a5406 1
=item find2perl enhancements
a5409 2
=item Performance Enhancements

d5428 1
a5428 1
=head2 perl586delta - what is new for perl v5.8.6
d5438 12
d5452 14
d5468 1
a5468 1
=item Performance Enhancements
d5476 3
a5478 1
=item New Tests
d5486 1
a5486 1
=head2 perl585delta - what is new for perl v5.8.5
d5498 4
d5504 1
a5504 7
=over 4

=item Perl's debugger

=item h2ph

=back
d5514 4
d5520 3
a5522 1
=item Platform Specific Problems
d5530 1
a5530 1
=head2 perl584delta - what is new for perl v5.8.4
d5542 1
a5542 103
=item Malloc wrapping

=item Unicode Character Database 4.0.1

=item suidperl less insecure

=item format

=back

=item Modules and Pragmata

=over 4

=item Updated modules

Attribute::Handlers, B, Benchmark, CGI, Carp, Cwd, Exporter, File::Find,
IO, IPC::Open3, Local::Maketext, Math::BigFloat, Math::BigInt,
Math::BigRat, MIME::Base64, ODBM_File, POSIX, Shell, Socket, Storable,
Switch, Sys::Syslog, Term::ANSIColor, Time::HiRes, Unicode::UCD, Win32,
base, open, threads, utf8

=back

=item Performance Enhancements

=item Utility Changes

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item Future Directions

=item Platform Specific Problems

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl583delta - what is new for perl v5.8.3

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=item Modules and Pragmata

CGI, Cwd, Digest, Digest::MD5, Encode, File::Spec, FindBin, List::Util,
Math::BigInt, PodParser, Pod::Perldoc, POSIX, Unicode::Collate,
Unicode::Normalize, Test::Harness, threads::shared

=item Utility Changes

=item New Documentation

=item Installation and Configuration Improvements

=item Selected Bug Fixes

=item New or Changed Diagnostics

=item Changed Internals

=item Configuration and Building

=item Platform Specific Problems

=item Known Problems

=item Future Directions

=item Obituary

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl582delta - what is new for perl v5.8.2

=over 4

=item DESCRIPTION

=item Incompatible Changes

=item Core Enhancements

=over 4

=item Hash Randomisation
a6457 2
=item @@- and @@+ provide starting/ending offsets of regex submatches

a6839 2
=item @@- and @@+ provide starting/ending offsets of regex matches

d7633 1
a7633 1
=head2 perlbeos, README.beos - Perl version 5.8+ on BeOS
d7639 1
a7639 1
=item BUILD AND INSTALL
d7641 1
a7641 1
=over 4
d7643 1
a7643 1
=item Requirements
d7645 1
a7645 1
=item Configure
d7647 1
a7647 1
=item Build
d7649 1
a7649 1
=item Install
a7652 4
=item KNOWN PROBLEMS

=item CONTACT

a7789 6
=back

=item Specific features of the Cygwin port

=over 4

d7792 1
a7792 6
Pathnames, Text/Binary, PerlIO, F<.exe>, cygwin vs. windows process ids,
C<chown()>, Miscellaneous

=item Prebuilt methods:

C<Cwd::cwd>, C<Cygwin::pid_to_winpid>, C<Cygwin::winpid_to_pid>
a8043 16
=head2 perllinux, README.linux - Perl version 5 on Linux systems

=over 4

=item DESCRIPTION

=over 4

=item Experimental Support for Sun Studio Compilers for Linux OS

=back

=item AUTHOR

=back

d8099 1
a8099 7
=item Updating Apple-supplied Perl

=item 64-bit Perl

=item Intel processor support

=item  Universal binaries
a8207 17
=head2 perlopenbsd, README.openbsd - Perl version 5 on OpenBSD systems

=over 4

=item DESCRIPTION

=over 4

=item OpenBSD core dumps from getprotobyname_r and getservbyname_r with
ithreads

=back

=item AUTHOR

=back

d8664 1
a8664 2
DATAMODEL_NATIVE specified", sh: ar: not found, warning: dead part of
constant expression is nonconstant
d8704 2
d8954 1
a8954 2
E<lt>nick@@ing-simmons.netE<gt>, Jan Dubois E<lt>jand@@activestate.comE<gt>,
Steve Hay E<lt>steve.hay@@uk.radan.comE<gt>
d9034 2
a9035 2
Parent-Child threads, tid is I32, Returning objects, Creating threads
inside BEGIN blocks, PERL_OLD_SIGNALS are not threadsafe, will not be
d9133 1
a9133 1
=item Options
d9137 1
a9137 1
=item Math Library
d9139 1
a9139 1
=item Internal Format
d9141 1
a9141 1
=item Sign
d9143 1
a9143 1
=item Methods
d9145 1
a9145 1
=item Caveat
d9171 1
a9171 1
=item Options
d9175 1
a9175 1
=item Methods
d9177 1
a9177 1
=item Caveat
d9211 1
a9211 1
=item Modules Used
d9213 1
a9213 1
=item Math Library
d9215 1
a9215 1
=item Sign
d9217 1
a9217 1
=item Methods
d9219 1
a9219 5
=item Cavaet

=item Options

a or accuracy, p or precision, t or trace, l or lib, v or version
d9558 1
a9558 1
=head2 overload - Package for overloading Perl operations
a10624 2
=item HANDLING NON-URLENCODED ARGUMENTS

d10640 1
a10640 1
-any, -compile, -nosticky, -tabindex, -no_undef_params, -no_xhtml, -nph,
d10671 1
a10671 1
(B<-query_string>), B<-base>, B<-rewrite>
a10707 6
=item FORM ELEMENTS

B<-name>, B<-value>, B<-values>, B<-tabindex>, B<-id>, B<-override>,
B<-onChange>, B<-onFocus>, B<-onBlur>, B<-onMouseOver>, B<-onMouseOut>,
B<-onSelect>

a10771 5
=item SUPPORT FOR JAVASCRIPT

B<onLoad>, B<onUnload>, B<onSubmit>, B<onClick>, B<onChange>, B<onFocus>,
B<onBlur>, B<onSelect>, B<onMouseOver>, B<onMouseOut>

d11044 2
a11045 2
install, clean	modules or distributions, get, readme, perldoc, look module
or distribution, ls author, ls globbing_expresion, Signals
d11076 9
a11084 9
CPAN::Distribution::perldoc(), CPAN::Distribution::test(),
CPAN::Distribution::uptodate(), CPAN::Index::force_reload(),
CPAN::Index::reload(), CPAN::InfoObj::dump(), CPAN::Module::as_glimpse(),
CPAN::Module::as_string(), CPAN::Module::clean(),
CPAN::Module::cpan_file(), CPAN::Module::cpan_version(),
CPAN::Module::cvs_import(), CPAN::Module::description(),
CPAN::Module::force($method,@@args), CPAN::Module::get(),
CPAN::Module::inst_file(), CPAN::Module::inst_version(),
CPAN::Module::install(), CPAN::Module::look(), CPAN::Module::make(),
d11086 1
a11086 2
CPAN::Module::perldoc(), CPAN::Module::test(), CPAN::Module::uptodate(),
CPAN::Module::userid()
a11118 6
=over 4

=item Cryptographically signed modules

=back

d11137 1
a11137 1
1), 2), 3), 4), 5), 6), 7), 8), 9), 10), 11)
a11158 10
=head2 CPAN::Version - utility functions to compare CPAN versions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

d11315 19
a11333 22
C<d_archlib>, C<d_asctime_r>, C<d_atolf>, C<d_atoll>,
C<d_attribute_format>, C<d_attribute_malloc>, C<d_attribute_nonnull>,
C<d_attribute_noreturn>, C<d_attribute_pure>, C<d_attribute_unused>,
C<d_attribute_warn_unused_result>, C<d_bcmp>, C<d_bcopy>, C<d_bsd>,
C<d_bsdgetpgrp>, C<d_bsdsetpgrp>, C<d_bzero>, C<d_casti32>, C<d_castneg>,
C<d_charvspr>, C<d_chown>, C<d_chroot>, C<d_chsize>, C<d_class>,
C<d_clearenv>, C<d_closedir>, C<d_cmsghdr_s>, C<d_const>, C<d_copysignl>,
C<d_crypt>, C<d_crypt_r>, C<d_csh>, C<d_ctermid_r>, C<d_ctime_r>,
C<d_cuserid>, C<d_dbl_dig>, C<d_dbminitproto>, C<d_difftime>, C<d_dirfd>,
C<d_dirnamlen>, C<d_dlerror>, C<d_dlopen>, C<d_dlsymun>, C<d_dosuid>,
C<d_drand48_r>, C<d_drand48proto>, C<d_dup2>, C<d_eaccess>, C<d_endgrent>,
C<d_endgrent_r>, C<d_endhent>, C<d_endhostent_r>, C<d_endnent>,
C<d_endnetent_r>, C<d_endpent>, C<d_endprotoent_r>, C<d_endpwent>,
C<d_endpwent_r>, C<d_endsent>, C<d_endservent_r>, C<d_eofnblk>,
C<d_eunice>, C<d_faststdio>, C<d_fchdir>, C<d_fchmod>, C<d_fchown>,
C<d_fcntl>, C<d_fcntl_can_lock>, C<d_fd_macros>, C<d_fd_set>,
C<d_fds_bits>, C<d_fgetpos>, C<d_finite>, C<d_finitel>, C<d_flexfnam>,
C<d_flock>, C<d_flockproto>, C<d_fork>, C<d_fp_class>, C<d_fpathconf>,
C<d_fpclass>, C<d_fpclassify>, C<d_fpclassl>, C<d_fpos64_t>, C<d_frexpl>,
C<d_fs_data_s>, C<d_fseeko>, C<d_fsetpos>, C<d_fstatfs>, C<d_fstatvfs>,
C<d_fsync>, C<d_ftello>, C<d_ftime>, C<d_futimes>, C<d_Gconvert>,
C<d_getcwd>, C<d_getespwnam>, C<d_getfsstat>, C<d_getgrent>,
d11352 34
a11385 36
C<d_lstat>, C<d_madvise>, C<d_malloc_size>, C<d_malloc_good_size>,
C<d_mblen>, C<d_mbstowcs>, C<d_mbtowc>, C<d_memchr>, C<d_memcmp>,
C<d_memcpy>, C<d_memmove>, C<d_memset>, C<d_mkdir>, C<d_mkdtemp>,
C<d_mkfifo>, C<d_mkstemp>, C<d_mkstemps>, C<d_mktime>, C<d_mmap>,
C<d_modfl>, C<d_modfl_pow32_bug>, C<d_modflproto>, C<d_mprotect>, C<d_msg>,
C<d_msg_ctrunc>, C<d_msg_dontroute>, C<d_msg_oob>, C<d_msg_peek>,
C<d_msg_proxy>, C<d_msgctl>, C<d_msgget>, C<d_msghdr_s>, C<d_msgrcv>,
C<d_msgsnd>, C<d_msync>, C<d_munmap>, C<d_mymalloc>, C<d_nanosleep>,
C<d_nice>, C<d_nl_langinfo>, C<d_nv_preserves_uv>,
C<d_nv_zero_is_allbits_zero>, C<d_off64_t>,
C<d_old_pthread_create_joinable>, C<d_oldpthreads>, C<d_oldsock>,
C<d_open3>, C<d_pathconf>, C<d_pause>, C<d_perl_otherlibdirs>,
C<d_phostname>, C<d_pipe>, C<d_poll>, C<d_portable>, C<d_PRId64>,
C<d_PRIeldbl>, C<d_PRIEUldbl>, C<d_PRIfldbl>, C<d_PRIFUldbl>,
C<d_PRIgldbl>, C<d_PRIGUldbl>, C<d_PRIi64>, C<d_PRIo64>, C<d_PRIu64>,
C<d_PRIx64>, C<d_PRIXU64>, C<d_procselfexe>, C<d_pthread_atfork>,
C<d_pthread_attr_setscope>, C<d_pthread_yield>, C<d_pwage>, C<d_pwchange>,
C<d_pwclass>, C<d_pwcomment>, C<d_pwexpire>, C<d_pwgecos>, C<d_pwpasswd>,
C<d_pwquota>, C<d_qgcvt>, C<d_quad>, C<d_random_r>, C<d_readdir64_r>,
C<d_readdir>, C<d_readdir_r>, C<d_readlink>, C<d_readv>, C<d_recvmsg>,
C<d_rename>, C<d_rewinddir>, C<d_rmdir>, C<d_safebcpy>, C<d_safemcpy>,
C<d_sanemcmp>, C<d_sbrkproto>, C<d_scalbnl>, C<d_sched_yield>,
C<d_scm_rights>, C<d_SCNfldbl>, C<d_seekdir>, C<d_select>, C<d_sem>,
C<d_semctl>, C<d_semctl_semid_ds>, C<d_semctl_semun>, C<d_semget>,
C<d_semop>, C<d_sendmsg>, C<d_setegid>, C<d_seteuid>, C<d_setgrent>,
C<d_setgrent_r>, C<d_setgrps>, C<d_sethent>, C<d_sethostent_r>,
C<d_setitimer>, C<d_setlinebuf>, C<d_setlocale>, C<d_setlocale_r>,
C<d_setnent>, C<d_setnetent_r>, C<d_setpent>, C<d_setpgid>, C<d_setpgrp2>,
C<d_setpgrp>, C<d_setprior>, C<d_setproctitle>, C<d_setprotoent_r>,
C<d_setpwent>, C<d_setpwent_r>, C<d_setregid>, C<d_setresgid>,
C<d_setresuid>, C<d_setreuid>, C<d_setrgid>, C<d_setruid>, C<d_setsent>,
C<d_setservent_r>, C<d_setsid>, C<d_setvbuf>, C<d_sfio>, C<d_shm>,
C<d_shmat>, C<d_shmatprototype>, C<d_shmctl>, C<d_shmdt>, C<d_shmget>,
C<d_sigaction>, C<d_sigprocmask>, C<d_sigsetjmp>, C<d_sockatmark>,
C<d_sockatmarkproto>, C<d_socket>, C<d_socklen_t>, C<d_sockpair>,
C<d_socks5_init>, C<d_sprintf_returns_strlen>, C<d_sqrtl>, C<d_srand48_r>,
d11391 16
a11406 16
C<d_strerror>, C<d_strerror_r>, C<d_strftime>, C<d_strlcat>, C<d_strlcpy>,
C<d_strtod>, C<d_strtol>, C<d_strtold>, C<d_strtoll>, C<d_strtoq>,
C<d_strtoul>, C<d_strtoull>, C<d_strtouq>, C<d_strxfrm>, C<d_suidsafe>,
C<d_symlink>, C<d_syscall>, C<d_syscallproto>, C<d_sysconf>,
C<d_sysernlst>, C<d_syserrlst>, C<d_system>, C<d_tcgetpgrp>,
C<d_tcsetpgrp>, C<d_telldir>, C<d_telldirproto>, C<d_time>, C<d_times>,
C<d_tm_tm_gmtoff>, C<d_tm_tm_zone>, C<d_tmpnam_r>, C<d_truncate>,
C<d_ttyname_r>, C<d_tzname>, C<d_u32align>, C<d_ualarm>, C<d_umask>,
C<d_uname>, C<d_union_semun>, C<d_unordered>, C<d_unsetenv>, C<d_usleep>,
C<d_usleepproto>, C<d_ustat>, C<d_vendorarch>, C<d_vendorbin>,
C<d_vendorlib>, C<d_vendorscript>, C<d_vfork>, C<d_void_closedir>,
C<d_voidsig>, C<d_voidtty>, C<d_volatile>, C<d_vprintf>, C<d_wait4>,
C<d_waitpid>, C<d_wcstombs>, C<d_wctomb>, C<d_writev>, C<d_xenix>, C<date>,
C<db_hashtype>, C<db_prefixtype>, C<db_version_major>, C<db_version_minor>,
C<db_version_patch>, C<defvoidused>, C<direntrytype>, C<dlext>, C<dlsrc>,
C<doublesize>, C<drand01>, C<drand48_r_proto>, C<dynamic_ext>
d11566 5
a11570 5
C<useithreads>, C<uselargefiles>, C<uselongdouble>, C<usemallocwrap>,
C<usemorebits>, C<usemultiplicity>, C<usemymalloc>, C<usenm>, C<useopcode>,
C<useperlio>, C<useposix>, C<usereentrant>, C<usesfio>, C<useshrplib>,
C<usesocks>, C<usethreads>, C<usevendorprefix>, C<usevfork>, C<usrinc>,
C<uuname>, C<uvoformat>, C<uvsize>, C<uvtype>, C<uvuformat>, C<uvxformat>,
a11626 2
=item COPYRIGHT

a12053 53
=head2 Devel::Size - Perl extension for finding the memory usage of Perl
variables

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item size($ref)

=item total_size($ref)

=back

=item EXPORT

=item UNDERSTANDING MEMORY ALLOCATION

=over 4

=item The C library

=item Perl

=back

=item DANGERS

=item Messages: texts originating from this module.

=over 4

=item Errors

=item warnings

=back

=item BUGS

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

d12112 1
a12112 13
=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Digest::file - Calculate digests of files

=over 4

=item SYNOPSIS
a12115 4
digest_file( $file, $algorithm, [$arg,...] ), digest_file_hex( $file,
$algorithm, [$arg,...] ), digest_file_base64( $file, $algorithm, [$arg,...]
)

a12180 2
=item VERSION

d12201 1
a12201 1
=item DIAGNOSTICS
d12203 1
a12203 3
Can't find '%s' symbol in %s, Can't load '%s' for module %s: %s, Undefined
symbols present after loading %s: %s, XSLoader::load('Your::Module',
$Your::Module::VERSION)
d12205 1
a12205 11
=item LIMITATIONS

=item BUGS

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back
d12246 5
a12250 5
B<NOTE:> Not all encoding support this feature, I<CHECK> =
Encode::FB_DEFAULT ( == 0), I<CHECK> = Encode::FB_CROAK ( == 1), I<CHECK> =
Encode::FB_QUIET, I<CHECK> = Encode::FB_WARN, perlqq mode (I<CHECK> =
Encode::FB_PERLQQ), HTML charref mode (I<CHECK> = Encode::FB_HTMLCREF), XML
charref mode (I<CHECK> = Encode::FB_XMLCREF), The bitmask
d12254 1
a12254 1
=item coderef for CHECK
a12271 2
=item UTF-8 vs. utf8

d12366 1
a12366 2
-E<gt>name, -E<gt>renew, -E<gt>renewed, -E<gt>perlio_ok(),
-E<gt>needs_lines()
a12619 2
=item Error Checking

d12687 1
a12687 2
-E<gt>name, -E<gt>renew, -E<gt>renewed, -E<gt>perlio_ok(),
-E<gt>needs_lines()
d13112 1
a13112 1
eqtime
d13114 1
a13114 1
rm_rf
d13116 1
a13116 1
rm_f
d13118 1
a13118 1
touch
d13120 1
a13120 1
mv
d13122 1
a13122 1
cp
d13124 1
a13124 1
chmod
d13126 1
a13126 1
mkpath
d13128 1
a13128 1
test_f
d13130 1
a13130 1
dos2unix
d13132 1
a13132 1
=over 4
d13176 1
a13176 1
constant_types
d13178 1
a13178 1
XS_constant PACKAGE, TYPES, SUBNAME, C_SUBNAME
d13180 1
a13180 12
autoload PACKAGE, VERSION, AUTOLOADER

WriteMakefileSnippet

WriteConstants ATTRIBUTE =E<gt> VALUE [, ...], NAME, DEFAULT_TYPE,
BREAKOUT_AT, NAMES, C_FILE, XS_FILE, SUBNAME, C_SUBNAME

=over 4

=item AUTHOR

=back
d13182 1
a13182 1
=head2 ExtUtils::Constant::Base - base class for ExtUtils::Constant objects
d13184 1
a13184 15
=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=back

header

memEQ_clause args_hashref

dump_names arg_hashref, ITEM..
d13186 1
a13186 1
assign arg_hashref, VALUE..
d13188 1
a13188 3
return_clause arg_hashref, ITEM

switch_clause arg_hashref, NAMELEN, ITEMHASH, ITEM..
d13192 1
a13192 1
dogfood arg_hashref, ITEM..
d13194 1
a13194 2
C_constant arg_hashref, ITEM.., name, type, value, macro, default, pre,
post, def_pre, def_post, utf8, weight
d13196 2
a13197 1
=over 4
d13199 1
a13199 1
=item BUGS
d13201 1
a13201 1
=item AUTHOR
d13203 1
a13203 1
=back
d13205 2
a13206 24
=head2 ExtUtils::Constant::Utils - helper functions for ExtUtils::Constant

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

C_stringify NAME

=back

perl_stringify NAME

=over 4

=item AUTHOR

=back

=head2 ExtUtils::Constant::XS, ExtUtils::Constant::Base - base class for
ExtUtils::Constant objects
a13209 6
=item SYNOPSIS

=item DESCRIPTION

=item BUGS

d13341 1
a13341 1
=head2 ExtUtils::MM_AIX - AIX specific subclass of ExtUtils::MM_Unix
d13349 1
a13349 1
=over 4
d13351 1
a13351 1
=item Overridden methods
d13355 1
a13355 1
=back
d13359 1
a13359 1
=item AUTHOR
d13361 1
a13361 1
=item SEE ALSO
a13364 2
=head2 ExtUtils::MM_Any - Platform-agnostic MM methods

d13367 1
a13367 1
=item SYNOPSIS
d13369 1
a13369 1
=item DESCRIPTION
d13371 1
a13371 1
=item METHODS
d13373 1
a13373 1
=over 4
d13375 1
a13375 1
=item Cross-platform helper methods
d13377 1
a13377 1
=back
d13379 1
a13379 1
=back
d13381 1
a13381 1
=over 4
d13383 1
a13383 1
=item Targets
d13385 1
a13385 1
=back
d13387 1
a13387 1
=over 4
d13389 1
a13389 1
=item Init methods
d13391 1
a13391 1
=back
d13393 1
a13393 1
=over 4
d13395 1
a13395 1
=item Tools
d13397 1
a13397 1
=back
d13399 1
a13399 1
=over 4
d13401 1
a13401 1
=item File::Spec wrappers
d13403 1
a13403 1
=back
d13405 1
a13405 1
=over 4
d13407 3
a13409 1
=item Misc
d13413 2
d13432 1
a13432 1
os_flavor
d13445 1
a13445 1
os_flavor
d13449 1
a13449 1
cflags
d13451 1
a13451 1
replace_manpage_separator
d13483 2
a13484 1
=head2 ExtUtils::MM_MacOS - once produced Makefiles for MacOS Classic
d13494 1
a13494 2
=head2 ExtUtils::MM_NW5 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d13496 1
a13496 1
=over 4
d13498 1
a13498 1
=item SYNOPSIS
d13500 1
a13500 1
=item DESCRIPTION
d13502 1
a13502 1
=back
d13504 1
a13504 1
os_flavor
d13508 3
a13510 1
const_cccmd
d13512 1
a13512 1
static_lib
d13514 1
a13514 1
dynamic_lib
d13516 1
a13516 2
=head2 ExtUtils::MM_OS2 - methods to override UN*X behaviour in
ExtUtils::MakeMaker
d13518 1
a13518 1
=over 4
d13520 1
a13520 1
=item SYNOPSIS
d13522 1
a13522 1
=item DESCRIPTION
d13524 1
a13524 1
=item METHODS
d13526 1
a13526 1
init_dist
d13528 1
a13528 1
=back
d13530 1
a13530 1
init_linker
d13534 2
a13535 1
=head2 ExtUtils::MM_QNX - QNX specific subclass of ExtUtils::MM_Unix
d13543 7
a13549 1
=over 4
d13551 1
a13551 1
=item Overridden methods
d13553 1
a13553 1
=back
d13555 2
a13556 1
=back
d13560 5
a13564 1
=item AUTHOR
d13566 1
a13566 1
=item SEE ALSO
d13570 4
d13618 1
a13618 1
os_flavor
d13626 4
d13640 2
d13668 4
d13674 2
d13686 6
d13694 2
d13710 4
d13720 1
a13720 1
init_platform, platform_constants
d13776 4
d13782 1
a13782 3
cd

oneliner
a13858 4
pasthru (override)

pm_to_blib (override)

d13885 2
d13901 2
d13905 7
a13911 1
extra_clean_files
d13913 7
a13919 1
zipfile_target, tarfile_target, shdist_target
d13925 6
d13937 1
a13937 1
cd
d13939 1
a13939 3
oneliner

B<echo>
d13947 1
a13947 1
init_linker
a13954 30
=over 4

=item AUTHOR

=back

=head2 ExtUtils::MM_VOS - VOS specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

=back

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

d13978 2
d13984 1
a13984 1
init_platform, platform_constants
d13986 1
a13986 1
special_targets
d13988 1
a13988 1
static_lib
d13990 1
a13990 1
dynamic_lib
d13992 1
a13992 1
extra_clean_files
d13998 1
a13998 1
xs_o
d14000 1
a14000 1
pasthru
d14002 1
a14002 3
oneliner

cd
d14020 1
a14020 1
xs_c
d14026 4
d14034 3
a14036 1
max_exec_len
d14104 2
a14105 2
PRINT_PREREQ, SITEPREFIX, SIGN, SKIP, TYPEMAPS, VENDORPREFIX, VERBINST,
VERSION, VERSION_FROM, VERSION_SYM, XS, XSOPT, XSPROTOARG, XS_VERSION
d14116 1
a14116 1
C<< MAN3PODS => ' ' >>
d14138 1
a14138 1
PERL_MM_OPT, PERL_MM_USE_DEFAULT, PERL_CORE
d14148 2
a14149 1
=head2 ExtUtils::MakeMaker::Config - Wrapper around Config.pm
d14153 1
a14153 12
=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MakeMaker::FAQ - Frequently Asked Questions About
MakeMaker

=over 4

=item DESCRIPTION
a14156 5
=item Module Installation

How do I keep from installing man pages?, How do I use a module without
installing it?

d14159 1
a14159 1
Why not just use <insert other build config tool here>?, What is
d14207 1
a14207 1
=head2 ExtUtils::MakeMaker::bytes - Version-agnostic bytes.pm
d14217 1
a14217 1
=head2 ExtUtils::MakeMaker::vmsish - Platform-agnostic vmsish.pm
d14385 1
a14385 2
=head2 File::Basename - Parse file paths into directory, filename and
suffix.
d14393 1
a14393 3
=back

C<fileparse>
d14395 1
a14395 3
C<basename>

C<dirname>
d14397 1
a14397 5
C<fileparse_set_fstype>

=over 4

=item SEE ALSO
a14522 6
=over 4

=item META CHARACTERS

=item POSIX FLAGS

a14526 2
=back

a14532 2
=item SEE ALSO

a14568 2
=item COPYRIGHT

a14586 6
=over 4

=item COPYRIGHT

=back

d14595 2
a14602 4
=item AUTHOR

=item COPYRIGHT

a14620 2
=item COPYRIGHT

a14670 2
=item COPYRIGHT

a14684 2
=item COPYRIGHT

a14737 2
=item COPYRIGHT

d14750 10
d14764 1
a14764 1
catdir (override)
d14766 1
a14766 1
catfile (override)
a14795 2
=item COPYRIGHT

a14831 2
=item COPYRIGHT

d14850 1
a14850 1
=item OBJECT-ORIENTED INTERFACE
a14857 2
B<unlink_on_destroy>

a14913 2
B<cleanup>

a14923 2
B<$KEEP_ALL>, B<$DEBUG>

a14931 4
=item Forking

=item BINMODE

d15008 1
a15008 2
C<"code">, C<"code_no_comments">, C<"executable">,
C<"executable_no_comments">, C<"quotelike">, C<"string">, C<"regex">,
d15015 3
a15017 2
and C<'code_no_comments'> component filter behave slightly differently
from the other partial filters described in the previous section.
d15160 1
a15160 1
=item Storing option values in a hash
d15177 1
a15177 1
prefix_pattern, long_prefix_pattern, debug (default: disabled)
d15559 1
a15559 4
open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS ), binmode(
[LAYER] )

=item NOTE
d15797 1
a15797 4
open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS ), binmode(
[LAYER] )

=item NOTE
d16478 1
a16478 2
Premature end of base64 data, Premature padding of base64 data, Wide
character in subroutine entry
d16549 1
a16549 1
=item METHODS
d16551 1
a16551 7
=over 4

=item accuracy

=item precision()

=back
d16567 1
a16567 1
stringify, bstr(), bdiv, Modifying and =, bpow, precision() vs. accuracy()
d16577 1
a16577 1
=head2 Math::BigInt - Arbitrary size integer/float math package
d16613 2
a16614 2
	$x->is_pos();			# true if > 0
	$x->is_neg();			# true if < 0
a16720 4
=item Infinity and Not a Number

oct()/hex(), log(-inf), exp(), cos(), sin(), atan2()

a16815 10
=over 4

=item __emu_bxor

=item __emu_band

=item __emu_bior

=back

d16828 1
a16828 1
=head2 Math::BigRat - Arbitrary big rational numbers
d16856 1
a16856 5
=item as_int()

=item as_hex()

=item as_bin()
d16870 1
a16870 1
=item is_pos()
d16872 1
a16872 1
=item is_neg()
d16921 1
a16921 1
=item DISPLAYING
d19293 2
a19294 2
C<-message>, C<-msg>, C<-exitval>, C<-verbose>, C<-section>, C<-output>,
C<-input>, C<-pathlist>, C<-noperldoc>
d19509 1
a19509 1
I<serialized>, .., C<STORABLE_attach> I<class>, I<cloning>, I<serialized>
d19604 2
a19605 1
=head2 Syslog, Sys::Syslog - Perl interface to the UNIX syslog(3) calls
a19608 2
=item VERSION

d19613 3
a19615 9
=item EXPORTS

=item FUNCTIONS

B<openlog($ident, $logopt, $facility)>, B<syslog($priority, $message)>,
B<syslog($priority, $format, @@args)>, B<Note>,
B<setlogmask($mask_priority)>, B<setlogsock($sock_type)>,
B<setlogsock($sock_type, $stream_location)> (added in 5.004_02),
B<closelog()>
a19618 21
=item CONSTANTS

=over 4

=item Facilities

=item Levels

=back

=item DIAGNOSTICS

Invalid argument passed to setlogsock, no connection to syslog available,
stream passed to setlogsock, but %s is not writable, stream passed to
setlogsock, but could not find any device, tcp passed to setlogsock, but
tcp service unavailable, syslog: expecting argument %s, syslog: invalid
level/facility: %s, syslog: too many levels given: %s, syslog: too many
facilities given: %s, syslog: level must be given, udp passed to
setlogsock, but udp service unavailable, unix passed to setlogsock, but
path not available

a19622 9
=item BUGS

=item SUPPORT

AnnoCPAN: Annotated CPAN documentation, CPAN Ratings, RT: CPAN's request
tracker, Search CPAN

=item LICENSE

d19625 2
a19626 2
=head2 Syslog::Syslog, Sys::Syslog - Perl interface to the UNIX syslog(3)
calls
a19629 2
=item VERSION

d19634 3
a19636 9
=item EXPORTS

=item FUNCTIONS

B<openlog($ident, $logopt, $facility)>, B<syslog($priority, $message)>,
B<syslog($priority, $format, @@args)>, B<Note>,
B<setlogmask($mask_priority)>, B<setlogsock($sock_type)>,
B<setlogsock($sock_type, $stream_location)> (added in 5.004_02),
B<closelog()>
a19639 21
=item CONSTANTS

=over 4

=item Facilities

=item Levels

=back

=item DIAGNOSTICS

Invalid argument passed to setlogsock, no connection to syslog available,
stream passed to setlogsock, but %s is not writable, stream passed to
setlogsock, but could not find any device, tcp passed to setlogsock, but
tcp service unavailable, syslog: expecting argument %s, syslog: invalid
level/facility: %s, syslog: too many levels given: %s, syslog: too many
facilities given: %s, syslog: level must be given, udp passed to
setlogsock, but udp service unavailable, unix passed to setlogsock, but
path not available

a19643 9
=item BUGS

=item SUPPORT

AnnoCPAN: Annotated CPAN documentation, CPAN Ratings, RT: CPAN's request
tracker, Search CPAN

=item LICENSE

a19822 4
B<create>

B<reset>

d19859 1
a19859 1
B<BAIL_OUT>
d19877 1
a19877 1
B<no_diag>, B<no_ending>, B<no_header>
a19888 2
B<_print_diag>

a19914 2
=item EXIT CODES

d19927 1
a19927 1
=head2 Test::Builder::Module - Base class for test modules
d19931 1
a19931 15
=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Importing

=back

=back

=over 4

=item Builder
a19934 3
=head2 Test::Builder::Tester - test testsuites that have been built with
Test::Builder

a19940 2
=back

d19943 1
a19943 15
=item Methods

test_out, test_err

=back

test_fail

test_diag

test_test, title (synonym 'name', 'label'), skip_out, skip_err

line_num

color
d19945 3
a19947 48
=over 4

=item BUGS

=item AUTHOR

=item NOTES

=item SEE ALSO

=back

=head2 Test::Builder::Tester::Color - turn on colour in
Test::Builder::Tester

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item AUTHOR

=item BUGS

=item SEE ALSO

=back

=head2 Test::Harness - Run Perl standard test scripts with statistics

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4
d19953 1
a19953 2
C<$Test::Harness::Verbose>, C<$Test::Harness::switches>,
C<$Test::Harness::Timer>
d19989 1
a19989 1
=item ENVIRONMENT VARIABLES THAT TEST::HARNESS SETS
d19991 4
a19994 1
C<HARNESS_ACTIVE>, C<HARNESS_VERSION>
d19996 1
a19996 1
=item ENVIRONMENT VARIABLES THAT AFFECT TEST::HARNESS
d19998 1
a19998 3
C<HARNESS_COLUMNS>, C<HARNESS_COMPILE_TEST>, C<HARNESS_DEBUG>,
C<HARNESS_FILELEAK_IN_DIR>, C<HARNESS_IGNORE_EXITCODE>, C<HARNESS_NOTTY>,
C<HARNESS_PERL>, C<HARNESS_PERL_SWITCHES>, C<HARNESS_VERBOSE>
d20000 1
a20000 1
=item EXAMPLE
d20002 1
a20002 1
=item SEE ALSO
a20057 30
=head2 Test::Harness::Point - object for tracking a single test point

=over 4

=item SYNOPSIS

=item CONSTRUCTION

=over 4

=item new()

=back

=back

=over 4

=item from_test_line( $line )

=back

=over 4

=item ACCESSORS

ok, number

=back

d20066 1
a20066 1
=item CONSTRUCTION
d20070 1
a20070 1
=item new()
d20078 1
a20078 1
=item $strap->_init
d20084 1
a20084 1
=item ANALYSIS
d20088 1
a20088 1
=item $strap->analyze( $name, \@@output_lines )
d20096 1
a20096 1
=item $strap->analyze_fh( $name, $test_filehandle )
d20102 1
a20102 1
=item $strap->analyze_file( $test_file )
d20108 1
a20108 1
=item $strap->_command_line( $file )
d20114 1
a20114 1
=item $strap->_command()
d20120 1
a20120 1
=item $strap->_switches( $file )
d20126 1
a20126 1
=item $strap->_cleaned_switches( @@switches_from_user )
d20132 1
a20132 1
=item $strap->_INC2PERL5LIB
d20138 1
a20138 1
=item $strap->_filtered_INC()
d20144 1
a20144 1
=item $strap->_restore_PERL5LIB()
d20154 1
a20154 1
=item C<_is_diagnostic>
d20168 1
a20168 1
=item C<_is_bail_out>
d20174 1
a20174 1
=item C<_reset_file_state>
d20180 1
a20180 7
=item Results

=item EXAMPLES

=item AUTHOR

=item SEE ALSO
a20183 2
=head2 Test::Harness::TAP - Documentation for the TAP format

d20186 1
a20186 9
=item SYNOPSIS

=item TODO

=item THE TAP FORMAT

=item HARNESS BEHAVIOR

=item TESTS LINES AND THE PLAN
d20190 1
a20190 7
=item The plan

=item The test line

C<ok> or C<not ok>, Test number, Description, Directive, ok/not ok
(required), Test number (recommended), Description (recommended), Directive
(only when necessary)
a20193 8
=item DIRECTIVES

=over 4

=item TODO tests

=item Skipping tests

a20195 2
=item OTHER LINES

a20197 8
=item Bail out!

=item Diagnostics

=item Anything else

=back

d20200 1
a20200 1
=over 4
d20202 1
a20202 21
=item Common with explanation

=item Unknown amount and failures

=item Giving up

=item Skipping a few

=item Skipping everything

=item Got spare tuits?

=item Creative liberties

=back

=item AUTHORS

=item ACKNOWLEDGEMENTS

=item COPYRIGHT
d20248 1
a20248 1
=item Module tests
d20250 1
a20250 1
B<use_ok>
a20253 2
B<require_ok>

d20256 1
a20256 1
=item Complex data structures
d20258 1
a20258 1
B<is_deeply>
d20262 1
a20262 7
=over 4

=item Diagnostics

B<diag>

=back
d20278 1
a20278 1
=item Test control
d20280 1
a20280 1
B<BAIL_OUT>
a20283 4
=over 4

=item Discouraged comparison functions

a20285 2
=back

d20300 1
a20300 1
=item EXIT CODES
d20302 1
a20302 1
=item CAVEATS and NOTES
d20304 2
a20305 1
Backwards compatibility, Overloaded objects, Threads, Test::Harness upgrade
a20312 2
=item BUGS

d20516 1
a20516 1
=item LICENSE
d20532 1
a20532 1
=item LICENSE
d20819 5
a20823 7
gettimeofday (), usleep ( $useconds ), nanosleep ( $nanoseconds ), ualarm (
$useconds [, $interval_useconds ] ), tv_interval, time (), sleep (
$floating_seconds ), alarm ( $floating_seconds [,
$interval_floating_seconds ] ), setitimer ( $which, $floating_seconds [,
$interval_floating_seconds ] ), getitimer ( $which ), clock_gettime (
$which ), clock_getres ( $which ), clock_nanosleep ( $which, $seconds,
$flags = 0), clock()
a20840 2
=item SEE ALSO

d20945 4
a20948 4
UCA_Version, alternate, backwards, entry, hangul_terminator, ignoreChar,
ignoreName, katakana_before_hiragana, level, normalization, overrideCJK,
overrideHangul, preprocess, rearrange, table, undefChar, undefName,
upper_before_lower, variable
a20974 2
=back

d20977 1
a20977 1
=item INSTALL
d20979 1
a20979 1
=item CAVEATS
d20981 1
a20981 1
Normalization, Conformance Test
d20983 1
a20983 1
=item AUTHOR, COPYRIGHT AND LICENSE
d20989 1
a20989 1
Type, Unicode Normalization Forms - UAX #15
a21032 2
=back

d21035 1
a21035 4
=item CAVEATS

Perl's version vs. Unicode version, Correction of decomposition mapping,
Revised definition of canonical composition
d21043 1
a21043 2
http://www.unicode.org/Public/UNIDATA/NormalizationCorrections.txt,
http://www.unicode.org/review/pr-29.html, http://www.unicode.org/notes/tn5/
a21118 6
=item namedseq()

=back

=over 4

a21180 2
=item VERSION

a21200 6
=item DIAGNOSTICS

Can't find '%s' symbol in %s, Can't load '%s' for module %s: %s, Undefined
symbols present after loading %s: %s, XSLoader::load('Your::Module',
$Your::Module::VERSION)

d21203 1
a21203 7
=item BUGS

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT
@


1.1.1.11
log
@import perl 5.10.0 from CPAN
@
text
@a73 2
=item Safety net

a337 12
=item Backreferences

=item Relative backreferences

=item Named backreferences

=item Alternative capture group numbering

=item Position information

=item Non-capturing groupings

a339 2
=item Possessive quantifiers

d354 1
a354 1
=item Composing regular expressions at runtime
d356 1
a356 1
=item Embedding comments and modifiers in a regular expression
a363 4
=item Defining named patterns

=item Recursive patterns

a365 2
=item Backtracking control verbs

a491 2
=item Deeper UNIVERSAL details

d809 2
a810 1
=head2 perlfaq - frequently asked questions about Perl
d823 1
a823 1
authors?
d827 9
a835 1
=item CREDITS
d837 1
a837 1
=item AUTHOR AND COPYRIGHT
d873 2
a874 1
=head2 perlfaq1 - General Questions About Perl
d888 1
a888 1
=item What are Perl 4, Perl 5, or Perl 6?
d890 1
a890 1
=item What was Ponie?
d892 1
a892 1
=item What is Perl 6?
d913 2
a914 4
=item How can I convince others to use Perl?

http://perltraining.com.au/whyperl.html,
http://www.perl.org/advocacy/whyperl.html
a917 2
=item REVISION

d922 2
a923 1
=head2 perlfaq2 - Obtaining and Learning about Perl
d958 3
a960 1
=item Which magazines have Perl content?
d964 1
a964 1
=item Where are the archives for comp.lang.perl.misc?
a973 2
=item REVISION

d978 2
a979 1
=head2 perlfaq3 - Programming Tools
d1018 1
a1018 4
=item How can I write a GUI (X, Tk, Gtk, etc.) in Perl?
X<GUI> X<Tk> X<Wx> X<WxWidgets> X<Gtk> X<Gtk2> X<CamelBones> X<Qt>

Tk, Wx, Gtk and Gtk2, Win32::GUI, CamelBones, Qt, Athena
d1037 2
a1059 2
=item REVISION

d1064 2
a1065 1
=head2 perlfaq4 - Data Manipulation
d1122 1
a1122 1
=item Does Perl have a Year 2000 problem? Is Perl Y2K compliant?
a1208 2
X<List::Permuter> X<permute> X<Algorithm::Loops> X<Knuth>
X<The Art of Computer Programming> X<Fischer-Krause>
a1233 1
X<hash tie sort DB_File Tie::IxHash>
a1276 2
=item REVISION

d1281 2
a1282 1
=head2 perlfaq5 - Files and Formats
d1293 4
d1325 2
a1326 2
=item How can I open a filehandle to a string?
X<string>, X<open>, X<IO::Scalar>, X<filehandle>
d1385 1
a1385 1
X<tail> X<IO::Handle> X<File::Tail> X<clearerr>
d1391 1
a1391 1
X<file, closing file descriptors> X<POSIX> X<close>
a1409 2
=item REVISION

d1414 2
a1415 1
=head2 perlfaq6 - Regular Expressions
d1456 1
a1456 1
X</o, regular expressions> X<compile, regular expressions>
d1497 1
a1497 2
X<regular expression, and multibyte characters> X<martian> X<encoding,
Martian>
d1499 1
a1499 3
=item How do I match a regular expression that's in a variable?
X<regex, in variable> X<eval> X<regex> X<quotemeta> X<\Q, regex>
X<\E, regex>, X<qr//>
a1502 2
=item REVISION

d1507 2
a1508 1
=head2 perlfaq7 - General Perl Language Issues
a1535 2
=item How do I adopt or take over a module already on CPAN?

a1584 2
=item REVISION

d1589 2
a1590 1
=head2 perlfaq8 - System Interaction
a1634 1
X<Time::HiRes> X<BSD::Itimer> X<sleep> X<select>
a1636 1
X<Time::HiRes> X<BSD::Itimer> X<sleep> X<select>
a1688 1
X<BSD::Resource> X<limit> X<CPU>
a1710 3
the PERLLIB environment variable, the PERL5LIB environment variable, the
perl -Idir command line flag, the use lib pragma:

a1714 2
=item REVISION

d1719 2
a1720 1
=head2 perlfaq9 - Networking
d1742 1
a1742 1
=item How do I make an HTML pop-up menu with Perl?
a1786 2
=item REVISION

d1828 2
a1829 7
=item Basic BLOCKs
X<block>

=item Switch statements
X<switch> X<case> X<given> X<when> X<default>

o, o, o, o, o, o, o
d1889 1
a1889 1
=item Operator Precedence and Associativity
a1942 3
=item C-style Logical Defined-Or
X<//> X<operator, logical, defined-or>

d1951 1
a1951 1
X<<< <<= >>> X<&&=> X<-=> X</=> X<|=> X<<< >>= >>> X<||=> X<//=> X<.=>
d1966 3
a1968 2
=item Logical or, Defined or, and Exclusive Or
X<operator, logical, or> X<operator, logical, xor>
d1970 1
a1970 1
X<or> X<xor>
d1979 1
a1979 1
X<operator, quote> X<operator, quote-like> X<q> X<qq> X<qx> X<qw> X<m>
d1986 11
a1996 16
qr/STRING/msixpo X<qr> X</i> X</m> X</o> X</s> X</x> X</p>,
m/PATTERN/msixpogc X<m> X<operator, match> X<regexp, options> X<regexp>
X<regex, options> X<regex> X</m> X</s> X</i> X</x> X</p> X</o> X</g> X</c>,
/PATTERN/msixpogc, ?PATTERN? X<?>, s/PATTERN/REPLACEMENT/msixpogce
X<substitute> X<substitution> X<replace> X<regexp, replace> X<regexp,
substitute> X</m> X</s> X</i> X</x> X</p> X</o> X</g> X</c> X</e>

=item Quote-Like Operators
X<operator, quote-like>

q/STRING/ X<q> X<quote, single> X<'> X<''>, 'STRING', qq/STRING/ X<qq>
X<quote, double> X<"> X<"">, "STRING", qx/STRING/ X<qx> X<`> X<``>
X<backtick>, `STRING`, qw/STRING/ X<qw> X<quote, list> X<quote, words>,
tr/SEARCHLIST/REPLACEMENTLIST/cds X<tr> X<y> X<transliterate> X</c> X</d>
X</s>, y/SEARCHLIST/REPLACEMENTLIST/cds, <<EOF X<here-doc> X<heredoc>
X<here-document> X<<< << >>>, Double Quotes, Single Quotes, Backticks
d2001 6
a2006 6
Finding the end, Interpolation X<interpolation>, C<<<'EOF'>,  C<m''>, the
pattern of C<s'''>, C<''>, C<q//>, C<tr'''>, C<y'''>, the replacement of
C<s'''>, C<tr///>, C<y///>, C<"">, C<``>, C<qq//>, C<qx//>, C<< <file*glob>
>>, C<<<"EOF">, the replacement of C<s///>, C<RE> in C<?RE?>, C</RE/>,
C<m/RE/>, C<s/RE/foo/>,, parsing regular expressions X<regexp, parse>,
Optimization of regular expressions X<regexp, optimization>
d2049 1
a2049 2
X<state> X<state variable> X<static> X<variable, persistent> X<variable,
static> X<closure>
d2109 11
a2119 12
flow of your Perl program X<control flow>, Keywords related to switch,
Keywords related to scoping, Miscellaneous functions, Functions for
processes and process groups X<process> X<pid> X<process id>, Keywords
related to perl modules X<module>, Keywords related to classes and
object-orientation X<object> X<class> X<package>, Low-level socket
functions X<socket> X<sock>, System V interprocess communication functions
X<IPC> X<System V> X<semaphore> X<shared memory> X<memory> X<message>,
Fetching user and group info X<user> X<group> X<password> X<uid> X<gid> 
X<passwd> X</etc/passwd>, Fetching network info X<network> X<protocol>
X<host> X<hostname> X<IP> X<address> X<service>, Time-related functions
X<time> X<date>, Functions new in perl5 X<perl5>, Functions obsoleted in
perl5
d2129 14
a2142 15
-I<X> DIRHANDLE, -I<X>, abs VALUE X<abs> X<absolute>, abs, accept
NEWSOCKET,GENERICSOCKET X<accept>, alarm SECONDS X<alarm> X<SIGALRM>
X<timer>, alarm, atan2 Y,X X<atan2> X<arctangent> X<tan> X<tangent>, bind
SOCKET,NAME X<bind>, binmode FILEHANDLE, LAYER X<binmode> X<binary> X<text>
X<DOS> X<Windows>, binmode FILEHANDLE, bless REF,CLASSNAME X<bless>, bless
REF, break, caller EXPR X<caller> X<call stack> X<stack> X<stack trace>,
caller, chdir EXPR X<chdir> X<cd> X<directory, change>, chdir FILEHANDLE,
chdir DIRHANDLE, chdir, chmod LIST X<chmod> X<permission> X<mode>, chomp
VARIABLE X<chomp> X<INPUT_RECORD_SEPARATOR> X<$/> X<newline> X<eol>, chomp(
LIST ), chomp, chop VARIABLE X<chop>, chop( LIST ), chop, chown LIST
X<chown> X<owner> X<user> X<group>, chr NUMBER X<chr> X<character> X<ASCII>
X<Unicode>, chr, chroot FILENAME X<chroot> X<root>, chroot, close
FILEHANDLE X<close>, close, closedir DIRHANDLE X<closedir>, connect
SOCKET,NAME X<connect>, continue BLOCK X<continue>, continue, cos EXPR
X<cos> X<cosine> X<acos> X<arccosine>, cos, crypt PLAINTEXT,SALT X<crypt>
d2144 1
a2144 1
X<cryptography> X<passwd> X<encrypt>, dbmclose HASH X<dbmclose>, dbmopen
d2151 8
a2158 9
X<eval> X<try> X<catch> X<evaluate> X<parse> X<execute> X<error, handling>
X<exception, handling>, eval BLOCK, eval, exec LIST X<exec> X<execute>,
exec PROGRAM LIST, exists EXPR X<exists> X<autovivification>, exit EXPR
X<exit> X<terminate> X<abort>, exit, exp EXPR X<exp> X<exponential>
X<antilog> X<antilogarithm> X<e>, exp, fcntl FILEHANDLE,FUNCTION,SCALAR
X<fcntl>, fileno FILEHANDLE X<fileno>, flock FILEHANDLE,OPERATION X<flock>
X<lock> X<locking>, fork X<fork> X<child> X<parent>, format X<format>,
formline PICTURE,LIST X<formline>, getc FILEHANDLE X<getc> X<getchar>
X<character> X<file, read>, getc, getlogin X<getlogin> X<login>,
d2181 16
a2196 17
X<truncate> X<trunc> X<floor>, int, ioctl FILEHANDLE,FUNCTION,SCALAR
X<ioctl>, join EXPR,LIST X<join>, keys HASH X<keys> X<key>, kill SIGNAL,
LIST X<kill> X<signal>, last LABEL X<last> X<break>, last, lc EXPR X<lc>
X<lowercase>, lc, lcfirst EXPR X<lcfirst> X<lowercase>, lcfirst, length
EXPR X<length> X<size>, length, link OLDFILE,NEWFILE X<link>, listen
SOCKET,QUEUESIZE X<listen>, local EXPR X<local>, localtime EXPR
X<localtime> X<ctime>, localtime, lock THING X<lock>, log EXPR X<log>
X<logarithm> X<e> X<ln> X<base>, log, lstat EXPR X<lstat>, lstat, m//, map
BLOCK LIST X<map>, map EXPR,LIST, mkdir FILENAME,MASK X<mkdir> X<md>
X<directory, create>, mkdir FILENAME, mkdir, msgctl ID,CMD,ARG X<msgctl>,
msgget KEY,FLAGS X<msgget>, msgrcv ID,VAR,SIZE,TYPE,FLAGS X<msgrcv>, msgsnd
ID,MSG,FLAGS X<msgsnd>, my EXPR X<my>, my TYPE EXPR, my EXPR : ATTRS, my
TYPE EXPR : ATTRS, next LABEL X<next> X<continue>, next, no Module VERSION
LIST X<no>, no Module VERSION, no Module LIST, no Module, no VERSION, oct
EXPR X<oct> X<octal> X<hex> X<hexadecimal> X<binary> X<bin>, oct, open
FILEHANDLE,EXPR X<open> X<pipe> X<file, open> X<fopen>, open
FILEHANDLE,MODE,EXPR, open FILEHANDLE,MODE,EXPR,LIST, open
d2199 1
a2199 1
our TYPE EXPR, our EXPR : ATTRS, our TYPE EXPR : ATTRS, pack TEMPLATE,LIST
d2204 1
a2204 1
prototype FUNCTION X<prototype>, push ARRAY,LIST X<push> X<stack>,
d2207 14
a2220 15
rand, read FILEHANDLE,SCALAR,LENGTH,OFFSET X<read> X<file, read>, read
FILEHANDLE,SCALAR,LENGTH, readdir DIRHANDLE X<readdir>, readline EXPR,
readline X<readline> X<gets> X<fgets>, readlink EXPR X<readlink>, readlink,
readpipe EXPR, readpipe X<readpipe>, recv SOCKET,SCALAR,LENGTH,FLAGS
X<recv>, redo LABEL X<redo>, redo, ref EXPR X<ref> X<reference>, ref,
rename OLDNAME,NEWNAME X<rename> X<move> X<mv> X<ren>, require VERSION
X<require>, require EXPR, require, reset EXPR X<reset>, reset, return EXPR
X<return>, return, reverse LIST X<reverse> X<rev> X<invert>, rewinddir
DIRHANDLE X<rewinddir>, rindex STR,SUBSTR,POSITION X<rindex>, rindex
STR,SUBSTR, rmdir FILENAME X<rmdir> X<rd> X<directory, remove>, rmdir,
s///, say FILEHANDLE LIST X<say>, say LIST, say, scalar EXPR X<scalar>
X<context>, seek FILEHANDLE,POSITION,WHENCE X<seek> X<fseek> X<filehandle,
position>, seekdir DIRHANDLE,POS X<seekdir>, select FILEHANDLE X<select>
X<filehandle, default>, select, select RBITS,WBITS,EBITS,TIMEOUT X<select>,
semctl ID,SEMNUM,CMD,ARG X<semctl>, semget KEY,NSEMS,FLAGS X<semget>, semop
d2238 7
a2244 8
X<randseed>, srand, stat FILEHANDLE X<stat> X<file, status> X<ctime>, stat
EXPR, stat DIRHANDLE, stat, state EXPR X<state>, state TYPE EXPR, state
EXPR : ATTRS, state TYPE EXPR : ATTRS, study SCALAR X<study>, study, sub
NAME BLOCK X<sub>, sub NAME (PROTO) BLOCK, sub NAME : ATTRS BLOCK, sub NAME
(PROTO) : ATTRS BLOCK, substr EXPR,OFFSET,LENGTH,REPLACEMENT X<substr>
X<substring> X<mid> X<left> X<right>, substr EXPR,OFFSET,LENGTH, substr
EXPR,OFFSET, symlink OLDFILE,NEWFILE X<symlink> X<link> X<symbolic link>
X<link, symbolic>, syscall NUMBER, LIST X<syscall> X<system call>, sysopen
d2257 7
a2263 7
X<rm> X<del>, unlink, unpack TEMPLATE,EXPR X<unpack>, unpack TEMPLATE,
untie VARIABLE X<untie>, unshift ARRAY,LIST X<unshift>, use Module VERSION
LIST X<use> X<module> X<import>, use Module VERSION, use Module LIST, use
Module, use VERSION, utime LIST X<utime>, values HASH X<values>, vec
EXPR,OFFSET,BITS X<vec> X<bit> X<bit vector>, wait X<wait>, waitpid
PID,FLAGS X<waitpid>, wantarray X<wantarray> X<context>, warn LIST X<warn>
X<warning> X<STDERR>, write FILEHANDLE X<write>, write EXPR, write, y///
a2362 2
=item Byte-order modifiers

a2402 2
=item Dealing with Endian-ness

d2547 8
a2554 9
I<commandline> X<-e>, B<-E> I<commandline> X<-E>, B<-f> X<-f>,
B<-F>I<pattern> X<-F>, B<-h> X<-h>, B<-i>[I<extension>] X<-i> X<in-place>,
B<-I>I<directory> X<-I> X<@@INC>, B<-l>[I<octnum>] X<-l> X<$/> X<$\>,
B<-m>[B<->]I<module> X<-m> X<-M>, B<-M>[B<->]I<module>,
B<-M>[B<->]I<'module ...'>, B<-[mM]>[B<->]I<module=arg[,arg]...>, B<-n>
X<-n>, B<-p> X<-p>, B<-P> X<-P>, B<-s> X<-s>, B<-S> X<-S>, B<-t> X<-t>,
B<-T> X<-T>, B<-u> X<-u>, B<-U> X<-U>, B<-v> X<-v>, B<-V> X<-V>,
B<-V:>I<configvar>, B<-w> X<-w>, B<-W> X<-W>, B<-X> X<-X>, B<-x> X<-x>,
B<-x>I<directory>
a2583 2
=item SEE ALSO

d2615 2
a2632 5
=item Calling the debugger

perl -d program_name, perl -d -e 0, perl -d:Ptkdb program_name, perl -dt
threaded_program_name

d2734 6
a2739 12
$ARG, $_ X<$_> X<$ARG>, $a, $b X<$a> X<$b>, $<I<digits>> X<$1> X<$2> X<$3>,
$MATCH, $& X<$&> X<$MATCH>, ${^MATCH} X<${^MATCH}>, $PREMATCH, $` X<$`>
X<$PREMATCH>, ${^PREMATCH} X<${^PREMATCH}>, $POSTMATCH, $' X<$'>
X<$POSTMATCH>, ${^POSTMATCH} X<${^POSTMATCH}>, $LAST_PAREN_MATCH, $+ X<$+>
X<$LAST_PAREN_MATCH>, $LAST_SUBMATCH_RESULT, $^N X<$^N>, @@LAST_MATCH_END,
@@+ X<@@+> X<@@LAST_MATCH_END>, %+ X<%+>, HANDLE->input_line_number(EXPR),
$INPUT_LINE_NUMBER, $NR, $. X<$.> X<$NR> X<$INPUT_LINE_NUMBER> X<line
number>, IO::Handle->input_record_separator(EXPR), $INPUT_RECORD_SEPARATOR,
$RS, $/ X<$/> X<$RS> X<$INPUT_RECORD_SEPARATOR>, HANDLE->autoflush(EXPR),
$OUTPUT_AUTOFLUSH, $| X<$|> X<autoflush> X<flush> X<$OUTPUT_AUTOFLUSH>,
IO::Handle->output_field_separator EXPR, $OUTPUT_FIELD_SEPARATOR, $OFS, $,
X<$,> X<$OFS> X<$OUTPUT_FIELD_SEPARATOR>,
d2741 24
a2764 42
$\ X<$\> X<$ORS> X<$OUTPUT_RECORD_SEPARATOR>, $LIST_SEPARATOR, $" X<$">
X<$LIST_SEPARATOR>, $SUBSCRIPT_SEPARATOR, $SUBSEP, $; X<$;> X<$SUBSEP>
X<SUBSCRIPT_SEPARATOR>, HANDLE->format_page_number(EXPR),
$FORMAT_PAGE_NUMBER, $% X<$%> X<$FORMAT_PAGE_NUMBER>,
HANDLE->format_lines_per_page(EXPR), $FORMAT_LINES_PER_PAGE, $= X<$=>
X<$FORMAT_LINES_PER_PAGE>, HANDLE->format_lines_left(EXPR),
$FORMAT_LINES_LEFT, $- X<$-> X<$FORMAT_LINES_LEFT>, @@LAST_MATCH_START, @@-
X<@@-> X<@@LAST_MATCH_START>, C<$`> is the same as C<substr($var, 0, $-[0])>,
C<$&> is the same as C<substr($var, $-[0], $+[0] - $-[0])>, C<$'> is the
same as C<substr($var, $+[0])>, C<$1> is the same as C<substr($var, $-[1],
$+[1] - $-[1])>, C<$2> is the same as C<substr($var, $-[2], $+[2] -
$-[2])>, C<$3> is the same as C<substr($var, $-[3], $+[3] - $-[3])>, %-
X<%->, HANDLE->format_name(EXPR), $FORMAT_NAME, $~ X<$~> X<$FORMAT_NAME>,
HANDLE->format_top_name(EXPR), $FORMAT_TOP_NAME, $^ X<$^>
X<$FORMAT_TOP_NAME>, IO::Handle->format_line_break_characters EXPR,
$FORMAT_LINE_BREAK_CHARACTERS, $: X<$:> X<FORMAT_LINE_BREAK_CHARACTERS>,
IO::Handle->format_formfeed EXPR, $FORMAT_FORMFEED, $^L X<$^L>
X<$FORMAT_FORMFEED>, $ACCUMULATOR, $^A X<$^A> X<$ACCUMULATOR>,
$CHILD_ERROR, $? X<$?> X<$CHILD_ERROR>, ${^CHILD_ERROR_NATIVE}
X<$^CHILD_ERROR_NATIVE>, ${^ENCODING} X<$^ENCODING>, $OS_ERROR, $ERRNO, $!
X<$!> X<$ERRNO> X<$OS_ERROR>, %OS_ERROR, %ERRNO, %! X<%!>,
$EXTENDED_OS_ERROR, $^E X<$^E> X<$EXTENDED_OS_ERROR>, $EVAL_ERROR, $@@ X<$@@>
X<$EVAL_ERROR>, $PROCESS_ID, $PID, $$ X<$$> X<$PID> X<$PROCESS_ID>,
$REAL_USER_ID, $UID, $< X<< $< >> X<$UID> X<$REAL_USER_ID>,
$EFFECTIVE_USER_ID, $EUID, $> X<< $> >> X<$EUID> X<$EFFECTIVE_USER_ID>,
$REAL_GROUP_ID, $GID, $( X<$(> X<$GID> X<$REAL_GROUP_ID>,
$EFFECTIVE_GROUP_ID, $EGID, $) X<$)> X<$EGID> X<$EFFECTIVE_GROUP_ID>,
$PROGRAM_NAME, $0 X<$0> X<$PROGRAM_NAME>, $[ X<$[>, $] X<$]>, $COMPILING,
$^C X<$^C> X<$COMPILING>, $DEBUGGING, $^D X<$^D> X<$DEBUGGING>,
${^RE_DEBUG_FLAGS}, ${^RE_TRIE_MAXBUF}, $SYSTEM_FD_MAX, $^F X<$^F>
X<$SYSTEM_FD_MAX>, $^H, %^H, $INPLACE_EDIT, $^I X<$^I> X<$INPLACE_EDIT>,
$^M X<$^M>, $OSNAME, $^O X<$^O> X<$OSNAME>, ${^OPEN}, $PERLDB, $^P X<$^P>
X<$PERLDB>, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x100, 0x200,
0x400, $LAST_REGEXP_CODE_RESULT, $^R X<$^R> X<$LAST_REGEXP_CODE_RESULT>,
$EXCEPTIONS_BEING_CAUGHT, $^S X<$^S> X<$EXCEPTIONS_BEING_CAUGHT>,
$BASETIME, $^T X<$^T> X<$BASETIME>, ${^TAINT}, ${^UNICODE}, ${^UTF8CACHE},
${^UTF8LOCALE}, $PERL_VERSION, $^V X<$^V> X<$PERL_VERSION>, $WARNING, $^W
X<$^W> X<$WARNING>, ${^WARNING_BITS}, ${^WIN32_SLOPPY_STAT},
$EXECUTABLE_NAME, $^X X<$^X> X<$EXECUTABLE_NAME>, ARGV X<ARGV>, $ARGV
X<$ARGV>, @@ARGV X<@@ARGV>, ARGVOUT X<ARGVOUT>, @@F X<@@F>, @@INC X<@@INC>, @@ARG,
@@_ X<@@_> X<@@ARG>, %INC X<%INC>, %ENV, $ENV{expr} X<%ENV>, %SIG, $SIG{expr}
X<%SIG>
a2766 1
X<error> X<exception>
d2782 5
a2788 8
=item Modifiers

m X</m> X<regex, multiline> X<regexp, multiline> X<regular expression,
multiline>, s X</s> X<regex, single-line> X<regexp, single-line> X<regular
expression, single-line>, i X</i> X<regex, case-insensitive> X<regexp,
case-insensitive> X<regular expression, case-insensitive>, x X</x>, p X</p>
X<regex, preserve> X<regexp, preserve>, g and c X</g> X</c>

d2796 12
a2807 28
C<(?#text)> X<(?#)>, C<(?pimsx-imsx)> X<(?)>, C<(?:pattern)> X<(?:)>,
C<(?imsx-imsx:pattern)>, C<(?|pattern)> X<(?|)> X<Branch reset>,
Look-Around Assertions X<look-around assertion> X<lookaround assertion>
X<look-around> X<lookaround>, C<(?=pattern)> X<(?=)> X<look-ahead,
positive> X<lookahead, positive>, C<(?!pattern)> X<(?!)> X<look-ahead,
negative> X<lookahead, negative>, C<(?<=pattern)> C<\K> X<(?<=)>
X<look-behind, positive> X<lookbehind, positive> X<\K>, C<(?<!pattern)>
X<(?<!)> X<look-behind, negative> X<lookbehind, negative>,
C<(?'NAME'pattern)>, C<< (?<NAME>pattern) >> X<< (?<NAME>) >> X<(?'NAME')>
X<named capture> X<capture>, C<< \k<NAME> >>, C<< \k'NAME' >>, C<(?{ code
})> X<(?{})> X<regex, code in> X<regexp, code in> X<regular expression,
code in>, C<(??{ code })> X<(??{})> X<regex, postponed> X<regexp,
postponed> X<regular expression, postponed>, C<(?PARNO)> C<(?-PARNO)>
C<(?+PARNO)> C<(?R)> C<(?0)> X<(?PARNO)> X<(?1)> X<(?R)> X<(?0)> X<(?-1)>
X<(?+1)> X<(?-PARNO)> X<(?+PARNO)> X<regex, recursive> X<regexp, recursive>
X<regular expression, recursive> X<regex, relative recursion>, C<(?&NAME)>
X<(?&NAME)>, C<(?(condition)yes-pattern|no-pattern)> X<(?()>,
C<(?(condition)yes-pattern)>, (1) (2) .., (<NAME>) ('NAME'), (?{ CODE }),
(R), (R1) (R2) .., (R&NAME), (DEFINE), C<< (?>pattern) >> X<backtrack>
X<backtracking> X<atomic> X<possessive>

=item Special Backtracking Control Verbs

Verbs that take an argument, C<(*PRUNE)> C<(*PRUNE:NAME)> X<(*PRUNE)>
X<(*PRUNE:NAME)>, C<(*SKIP)> C<(*SKIP:NAME)> X<(*SKIP)>, C<(*MARK:NAME)>
C<(*:NAME)> X<(*MARK)> C<(*MARK:NAME)> C<(*:NAME)>, C<(*THEN)>
C<(*THEN:NAME)>, C<(*COMMIT)> X<(*COMMIT)>, Verbs without an argument,
C<(*FAIL)> C<(*F)> X<(*FAIL)> X<(*F)>, C<(*ACCEPT)> X<(*ACCEPT)>
d2815 1
a2815 1
=item Warning on \1 Instead of $1
d2817 1
a2817 1
=item Repeated Patterns Matching a Zero-length Substring
d2819 1
a2819 1
=item Combining RE Pieces
d2823 1
a2823 1
C<(?!S)>, C<(?<!S)>, C<(??{ EXPR })>, C<(?PARNO)>,
d2826 1
a2826 1
=item Creating Custom RE Engines
a2829 4
=item PCRE/Python Support

C<< (?PE<lt>NAMEE<gt>pattern) >>, C<< (?P=NAME) >>, C<< (?P>NAME) >>

a2835 61
=head2 perlrebackslash - Perl Regular Expression Backslash Sequences and
Escapes

=over 4

=item DESCRIPTION

=over 4

=item The backslash

[1]

=item All the sequences and escapes

=item Character Escapes

[1], [2]

=item Modifiers

=item Character classes

=item Referencing

=item Assertions

\A, \z, \Z, \G, \b, \B

=item Misc

\C, \K, \R, \X

=back

=back

=head2 perlrecharclass - Perl Regular Expression Character Classes

=over 4

=item DESCRIPTION

=over 4

=item The dot

=item Backslashed sequences

[1]

=item Bracketed Character Classes

cntrl, graph, print, punct

=item Locale, Unicode and UTF-8

=back

=back

d2898 3
d3131 1
a3131 1
Long-running opcodes, Interrupting IO, Restartable system calls, Signals as
d3261 1
a3261 1
=head2 perlthrtut - Tutorial on threads in Perl
d3267 2
a3300 2
=item Process and Thread Termination

d3329 1
a3329 1
=item Waiting for a Condition
a3360 2
=item SEE ALSO

d3572 2
a3573 2
-I<X>, atan2, binmode, chmod, chown, chroot, crypt, dbmclose, dbmopen,
dump, exec, exit, fcntl, flock, fork, getlogin, getpgrp, getppid,
a3655 6
=over 4

=item Examples

=back

d3760 1
a3760 1
=item Unicode Character Properties
d3762 1
a3762 2
General Category, Bidirectional Character Types, Scripts, Extended property
classes, Use of "Is" Prefix, Blocks
a3765 2
=item User-Defined Case Mappings

a3803 97
=head2 perlunifaq - Perl Unicode FAQ

=over 4

=item Q and A

=over 4

=item perlunitut isn't really a Unicode tutorial, is it?

=item What character encodings does Perl support?

=item Which version of perl should I use?

=item What about binary data, like images?

=item When should I decode or encode?

=item What if I don't decode?

=item What if I don't encode?

=item Is there a way to automatically decode or encode?

=item What if I don't know which encoding was used?

=item Can I use Unicode in my Perl sources?

=item Data::Dumper doesn't restore the UTF8 flag; is it broken?

=item Why do regex character classes sometimes match only in the ASCII
range?

=item Why do some characters not uppercase or lowercase correctly?

=item How can I determine if a string is a text string or a binary string?

=item How do I convert from encoding FOO to encoding BAR?

=item What are C<decode_utf8> and C<encode_utf8>?

=item What is a "wide character"?

=back

=item INTERNALS

=over 4

=item What is "the UTF8 flag"?

=item What about the C<use bytes> pragma?

=item What about the C<use encoding> pragma?

=item What is the difference between C<:encoding> and C<:utf8>?

=item What's the difference between C<UTF-8> and C<utf8>?

=item I lost track; what encoding is the internal format really?

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 perlunitut - Perl Unicode Tutorial

=over 4

=item DESCRIPTION

=over 4

=item Definitions

=item Your new toolkit

=item I/O flow (the actual 5 minute tutorial)

=back

=item SUMMARY

=item Q and A (or FAQ)

=item ACKNOWLEDGEMENTS

=item AUTHOR

=item SEE ALSO

=back

d3976 2
a3977 2
=item BEGIN, UNITCHECK, CHECK, INIT and END
X<BEGIN> X<UNITCHECK> X<CHECK> X<INIT> X<END>
d4006 5
a4010 5
attributes, attrs, autouse, base, bigint, bignum, bigrat, blib, bytes,
charnames, constant, diagnostics, encoding, encoding::warnings, feature,
fields, filetest, if, integer, less, lib, locale, mro, open, ops, overload,
re, sigtrap, sort, strict, subs, threads, threads::shared, utf8, vars,
version, vmsish, warnings, warnings::register
d4014 14
a4027 18
AnyDBM_File, Archive::Extract, Archive::Tar, Archive::Tar::File,
Attribute::Handlers, AutoLoader, AutoSplit, B, B::Concise, B::Debug,
B::Deparse, B::Lint, B::Showlex, B::Terse, B::Xref, Benchmark, CGI,
CGI::Apache, CGI::Carp, CGI::Cookie, CGI::Fast, CGI::Pretty, CGI::Push,
CGI::Switch, CGI::Util, CORE, CPAN, CPAN::API::HOWTO, CPAN::FirstTime,
CPAN::Kwalify, CPAN::Nox, CPAN::Version, CPANPLUS, CPANPLUS::Dist::Base,
CPANPLUS::Dist::Sample, CPANPLUS::Shell::Classic,
CPANPLUS::Shell::Default::Plugins::HOWTO, Carp, Carp::Heavy, Class::ISA,
Class::Struct, Compress::Raw::Zlib, Compress::Zlib, Config, Cwd, DB,
DBM_Filter, DBM_Filter::compress, DBM_Filter::encode, DBM_Filter::int32,
DBM_Filter::null, DBM_Filter::utf8, DB_File, Data::Dumper, Devel::DProf,
Devel::InnerPackage, Devel::Peek, Devel::SelfStubber, Digest, Digest::MD5,
Digest::SHA, Digest::base, Digest::file, DirHandle, Dumpvalue, DynaLoader,
Encode, Encode::Alias, Encode::Byte, Encode::CJKConstants, Encode::CN,
Encode::CN::HZ, Encode::Config, Encode::EBCDIC, Encode::Encoder,
Encode::Encoding, Encode::GSM0338, Encode::Guess, Encode::JP,
Encode::JP::H2Z, Encode::JP::JIS7, Encode::KR, Encode::KR::2022_KR,
Encode::MIME::Header, Encode::MIME::Name, Encode::PerlIO,
d4032 6
a4037 7
ExtUtils::Constant::Base, ExtUtils::Constant::Utils,
ExtUtils::Constant::XS, ExtUtils::Embed, ExtUtils::Install,
ExtUtils::Installed, ExtUtils::Liblist, ExtUtils::MM, ExtUtils::MM_AIX,
ExtUtils::MM_Any, ExtUtils::MM_BeOS, ExtUtils::MM_Cygwin, ExtUtils::MM_DOS,
ExtUtils::MM_MacOS, ExtUtils::MM_NW5, ExtUtils::MM_OS2, ExtUtils::MM_QNX,
ExtUtils::MM_UWIN, ExtUtils::MM_Unix, ExtUtils::MM_VMS, ExtUtils::MM_VOS,
ExtUtils::MM_Win32, ExtUtils::MM_Win95, ExtUtils::MY, ExtUtils::MakeMaker,
d4043 7
a4049 10
File::Compare, File::Copy, File::DosGlob, File::Fetch, File::Find,
File::Glob, File::GlobMapper, File::Path, File::Spec, File::Spec::Cygwin,
File::Spec::Epoc, File::Spec::Functions, File::Spec::Mac, File::Spec::OS2,
File::Spec::Unix, File::Spec::VMS, File::Spec::Win32, File::Temp,
File::stat, FileCache, FileHandle, Filter::Simple, Filter::Util::Call,
FindBin, GDBM_File, Getopt::Long, Getopt::Std, Hash::Util,
Hash::Util::FieldHash, I18N::Collate, I18N::LangTags,
I18N::LangTags::Detect, I18N::LangTags::List, I18N::Langinfo, IO,
IO::Compress::Base, IO::Compress::Deflate, IO::Compress::Gzip,
IO::Compress::RawDeflate, IO::Compress::Zip, IO::Dir, IO::File, IO::Handle,
d4051 14
a4064 33
IO::Socket::UNIX, IO::Uncompress::AnyInflate,
IO::Uncompress::AnyUncompress, IO::Uncompress::Base,
IO::Uncompress::Gunzip, IO::Uncompress::Inflate,
IO::Uncompress::RawInflate, IO::Uncompress::Unzip, IO::Zlib, IPC::Cmd,
IPC::Open2, IPC::Open3, IPC::SysV, IPC::SysV::Msg, IPC::SysV::Semaphore,
List::Util, Locale::Constants, Locale::Country, Locale::Currency,
Locale::Language, Locale::Maketext, Locale::Maketext::Simple,
Locale::Maketext::TPJ13, Locale::Script, Log::Message,
Log::Message::Config, Log::Message::Handlers, Log::Message::Item,
MIME::Base64, MIME::QuotedPrint, Math::BigFloat, Math::BigInt,
Math::BigInt::Calc, Math::BigInt::CalcEmu, Math::BigInt::FastCalc,
Math::BigRat, Math::Complex, Math::Trig, Memoize, Memoize::AnyDBM_File,
Memoize::Expire, Memoize::ExpireFile, Memoize::ExpireTest,
Memoize::NDBM_File, Memoize::SDBM_File, Memoize::Storable, Module::Build,
Module::Build::API, Module::Build::Authoring, Module::Build::Base,
Module::Build::Compat, Module::Build::ConfigData, Module::Build::Cookbook,
Module::Build::ModuleInfo, Module::Build::Notes, Module::Build::PPMMaker,
Module::Build::Platform::Amiga, Module::Build::Platform::Default,
Module::Build::Platform::EBCDIC, Module::Build::Platform::MPEiX,
Module::Build::Platform::MacOS, Module::Build::Platform::RiscOS,
Module::Build::Platform::Unix, Module::Build::Platform::VMS,
Module::Build::Platform::VOS, Module::Build::Platform::Windows,
Module::Build::Platform::aix, Module::Build::Platform::cygwin,
Module::Build::Platform::darwin, Module::Build::Platform::os2,
Module::Build::YAML, Module::CoreList, Module::Load,
Module::Load::Conditional, Module::Loaded, Module::Pluggable,
Module::Pluggable::Object, NDBM_File, NEXT, Net::Cmd, Net::Config,
Net::Domain, Net::FTP, Net::NNTP, Net::Netrc, Net::POP3, Net::Ping,
Net::SMTP, Net::Time, Net::hostent, Net::libnetFAQ, Net::netent,
Net::protoent, Net::servent, O, ODBM_File, Opcode, POSIX,
Package::Constants, Params::Check, PerlIO, PerlIO::encoding,
PerlIO::scalar, PerlIO::via, PerlIO::via::QuotedPrint, Pod::Checker,
Pod::Escapes, Pod::Find, Pod::Functions, Pod::Html, Pod::InputObjects,
d4069 5
a4073 14
Pod::Select, Pod::Simple, Pod::Simple::Checker, Pod::Simple::Debug,
Pod::Simple::DumpAsText, Pod::Simple::DumpAsXML, Pod::Simple::HTML,
Pod::Simple::HTMLBatch, Pod::Simple::LinkSection, Pod::Simple::Methody,
Pod::Simple::PullParser, Pod::Simple::PullParserEndToken,
Pod::Simple::PullParserStartToken, Pod::Simple::PullParserTextToken,
Pod::Simple::PullParserToken, Pod::Simple::RTF, Pod::Simple::Search,
Pod::Simple::SimpleTree, Pod::Simple::Subclassing, Pod::Simple::Text,
Pod::Simple::TextContent, Pod::Simple::XMLOutStream, Pod::Text,
Pod::Text::Color, Pod::Text::Overstrike, Pod::Text::Termcap, Pod::Usage,
SDBM_File, Safe, Scalar::Util, Search::Dict, SelectSaver, SelfLoader,
Shell, Socket, Storable, Switch, Symbol, Sys::Hostname, Sys::Syslog,
Sys::Syslog::win32::Win32, Term::ANSIColor, Term::Cap, Term::Complete,
Term::ReadLine, Term::UI, Test, Test::Builder, Test::Builder::Module,
Test::Builder::Tester, Test::Builder::Tester::Color, Test::Harness,
d4075 1
a4075 2
Test::Harness::Results, Test::Harness::Straps, Test::Harness::TAP,
Test::Harness::Util, Test::More, Test::Simple, Test::Tutorial,
d4077 6
a4082 7
Text::Wrap, Thread, Thread::Queue, Thread::Semaphore, Tie::Array,
Tie::File, Tie::Handle, Tie::Hash, Tie::Hash::NamedCapture, Tie::Memoize,
Tie::RefHash, Tie::Scalar, Tie::SubstrHash, Time::HiRes, Time::Local,
Time::Piece, Time::Piece::Seconds, Time::gmtime, Time::localtime, Time::tm,
UNIVERSAL, Unicode::Collate, Unicode::Normalize, Unicode::UCD, User::grent,
User::pwent, Win32, Win32API::File, Win32CORE, XS::APItest, XS::Typemap,
XSLoader
a4313 12
=head2 perlpragma - how to write a user pragma

=over 4

=item DESCRIPTION

=item A basic example

=item Implementation details

=back

a4319 2
=item LIST OF UTILITIES

d4322 1
a4322 1
=item Documentation
d4329 1
a4329 1
=item Convertors
d4331 1
a4331 1
L<a2p|a2p>, L<s2p|s2p> and L<psed>, L<find2perl|find2perl>
d4335 1
a4335 1
L<config_data|config_data>, L<libnetcfg|libnetcfg>, L<perlivp>
d4340 1
a4340 2
L<h2xs|h2xs>, L<enc2xs>, L<xsubpp>, L<dprofpp|dprofpp>, L<prove>,
L<corelist>
d4342 1
a4342 7
=item General tools

L<piconv>, L<ptar>, L<ptardiff>, L<shasum>

=item Installation

L<cpan>, L<cpanp>, L<cpan2dist>, L<instmodsh>
a4345 2
=item SEE ALSO

d4358 1
a4358 1
B::Lint, B::Deparse, B::Xref
d4374 6
d4384 3
a4386 2
B, O, B::Concise, B::Debug, B::Deparse, B::Lint, B::Showlex, B::Terse,
B::Xref
d4469 3
a4471 4
decrement, default, defined, delimiter, deprecated modules and features,
dereference, derived class, descriptor, destroy, destructor, device,
directive, directory, directory handle, dispatch, distribution, (to be)
dropped modules, dweomer, dwimmer, dynamic scoping
a4647 2
=item $0 assignments

d4906 1
a4906 5
MY_CXT_KEY, typedef my_cxt_t, START_MY_CXT, MY_CXT_INIT, dMY_CXT, MY_CXT,
aMY_CXT/pMY_CXT, MY_CXT_CLONE, MY_CXT_INIT_INTERP(my_perl),
dMY_CXT_INTERP(my_perl)

=item Thread-aware system interfaces
d5077 1
a5077 1
A, p, d, s, n, r, f, M, o, x, m, X, E, b, others
a5084 2
=item Exception Handling

a5192 2
=item LIGHTWEIGHT CALLBACKS

d5201 1
a5201 1
=head2 perlreapi - perl regular expression plugin interface
d5206 1
d5208 1
a5208 1
=item Callbacks
d5210 3
a5212 1
=over 4
d5214 1
a5214 1
=item comp
d5216 6
a5221 4
C</m> - RXf_PMf_MULTILINE, C</s> - RXf_PMf_SINGLELINE, C</i> -
RXf_PMf_FOLD, C</x> - RXf_PMf_EXTENDED, C</p> - RXf_PMf_KEEPCOPY,
RXf_PMf_LOCALE, RXf_UTF8, RXf_SPLIT, RXf_SKIPWHITE, RXf_START_ONLY,
RXf_WHITE, RXf_NULL
d5223 1
a5223 1
=item exec
d5225 3
a5227 1
=item intuit
d5229 1
a5229 1
=item checkstr
d5231 3
a5233 1
=item free
d5235 1
a5235 1
=item Numbered capture callbacks
d5237 1
a5237 1
=item Named capture callbacks
d5239 1
a5239 1
=item qr_package
d5241 1
a5241 1
=item dupe
d5243 1
a5243 1
=back
d5245 4
a5248 1
=item The REGEXP structure
d5250 1
a5250 1
=over 4
d5252 2
a5253 1
=item C<engine>
d5255 1
a5255 1
=item C<mother_re>
d5257 2
a5258 1
=item C<extflags>
d5260 1
a5260 1
=item C<minlen> C<minlenret>
d5262 4
a5265 1
=item C<gofs>
d5267 1
a5267 1
=item C<substrs>
d5269 2
a5270 1
=item C<nparens>, C<lasparen>, and C<lastcloseparen>
d5272 1
a5272 1
=item C<intflags>
d5274 12
a5285 1
=item C<pprivate>
d5287 1
a5287 192
=item C<swap>

=item C<offs>

=item C<precomp> C<prelen>

=item C<paren_names>

=item C<substrs>

=item C<subbeg> C<sublen> C<saved_copy>

=item C<wrapped> C<wraplen>

=item C<seen_evals>

=item C<refcnt>

=back

=item HISTORY

=item AUTHORS

=item LICENSE

=back

=head2 perlreguts - Description of the Perl regular expression engine.

=over 4

=item DESCRIPTION

=item OVERVIEW

=over 4

=item A quick note on terms

=item What is a regular expression engine?

=item Structure of a Regexp Program

C<regnode_1>, C<regnode_2>, C<regnode_string>, C<regnode_charclass>,
C<regnode_charclass_class>

=back

=item Process Overview

A. Compilation, 1. Parsing for size, 2. Parsing for construction, 3.
Peep-hole optimisation and analysis, B. Execution, 4. Start position and
no-match optimisations, 5. Program execution

=over 4

=item Compilation

anchored fixed strings, floating fixed strings, minimum and maximum length
requirements, start class, Beginning/End of line positions

=item Execution

=back

=item MISCELLANEOUS

=over 4

=item Unicode and Localisation Support

=item Base Structures

C<swap>, C<offsets>, C<regstclass>, C<data>, C<program>

=back

=item SEE ALSO

=item AUTHOR

=item LICENCE

=item REFERENCES

=back

=head2 perlapi - autogenerated documentation for the perl public API

=over 4

=item DESCRIPTION
X<Perl API> X<API> X<api>

=item "Gimme" Values

GIMME X<GIMME>, GIMME_V X<GIMME_V>, G_ARRAY X<G_ARRAY>, G_DISCARD
X<G_DISCARD>, G_EVAL X<G_EVAL>, G_NOARGS X<G_NOARGS>, G_SCALAR X<G_SCALAR>,
G_VOID X<G_VOID>

=item Array Manipulation Functions

AvFILL X<AvFILL>, av_clear X<av_clear>, av_create_and_push
X<av_create_and_push>, av_create_and_unshift_one
X<av_create_and_unshift_one>, av_delete X<av_delete>, av_exists
X<av_exists>, av_extend X<av_extend>, av_fetch X<av_fetch>, av_fill
X<av_fill>, av_len X<av_len>, av_make X<av_make>, av_pop X<av_pop>, av_push
X<av_push>, av_shift X<av_shift>, av_store X<av_store>, av_undef
X<av_undef>, av_unshift X<av_unshift>, get_av X<get_av>, newAV X<newAV>,
sortsv X<sortsv>, sortsv_flags X<sortsv_flags>

=item Callback Functions

call_argv X<call_argv>, call_method X<call_method>, call_pv X<call_pv>,
call_sv X<call_sv>, ENTER X<ENTER>, eval_pv X<eval_pv>, eval_sv X<eval_sv>,
FREETMPS X<FREETMPS>, LEAVE X<LEAVE>, SAVETMPS X<SAVETMPS>

=item Character classes

isALNUM X<isALNUM>, isALPHA X<isALPHA>, isDIGIT X<isDIGIT>, isLOWER
X<isLOWER>, isSPACE X<isSPACE>, isUPPER X<isUPPER>, toLOWER X<toLOWER>,
toUPPER X<toUPPER>

=item Cloning an interpreter

perl_clone X<perl_clone>

=item CV Manipulation Functions

CvSTASH X<CvSTASH>, get_cv X<get_cv>, get_cvn_flags X<get_cvn_flags>

=item Embedding Functions

cv_undef X<cv_undef>, load_module X<load_module>, nothreadhook
X<nothreadhook>, perl_alloc X<perl_alloc>, perl_construct
X<perl_construct>, perl_destruct X<perl_destruct>, perl_free X<perl_free>,
perl_parse X<perl_parse>, perl_run X<perl_run>, require_pv X<require_pv>

=item Functions in file dump.c

pv_display X<pv_display>, pv_escape X<pv_escape>, pv_pretty X<pv_pretty>

=item Functions in file mathoms.c

gv_fetchmethod X<gv_fetchmethod>, pack_cat X<pack_cat>, sv_2pvbyte_nolen
X<sv_2pvbyte_nolen>, sv_2pvutf8_nolen X<sv_2pvutf8_nolen>, sv_2pv_nolen
X<sv_2pv_nolen>, sv_catpvn_mg X<sv_catpvn_mg>, sv_catsv_mg X<sv_catsv_mg>,
sv_force_normal X<sv_force_normal>, sv_iv X<sv_iv>, sv_nolocking
X<sv_nolocking>, sv_nounlocking X<sv_nounlocking>, sv_nv X<sv_nv>, sv_pv
X<sv_pv>, sv_pvbyte X<sv_pvbyte>, sv_pvbyten X<sv_pvbyten>, sv_pvn
X<sv_pvn>, sv_pvutf8 X<sv_pvutf8>, sv_pvutf8n X<sv_pvutf8n>, sv_taint
X<sv_taint>, sv_unref X<sv_unref>, sv_usepvn X<sv_usepvn>, sv_usepvn_mg
X<sv_usepvn_mg>, sv_uv X<sv_uv>, unpack_str X<unpack_str>

=item Functions in file pp_ctl.c

find_runcv X<find_runcv>

=item Functions in file pp_pack.c

packlist X<packlist>, unpackstring X<unpackstring>

=item GV Functions

GvSV X<GvSV>, gv_const_sv X<gv_const_sv>, gv_fetchmeth X<gv_fetchmeth>,
gv_fetchmethod_autoload X<gv_fetchmethod_autoload>, gv_fetchmeth_autoload
X<gv_fetchmeth_autoload>, gv_stashpv X<gv_stashpv>, gv_stashpvn
X<gv_stashpvn>, gv_stashpvs X<gv_stashpvs>, gv_stashsv X<gv_stashsv>

=item Handy Values

Nullav X<Nullav>, Nullch X<Nullch>, Nullcv X<Nullcv>, Nullhv X<Nullhv>,
Nullsv X<Nullsv>

=item Hash Manipulation Functions

get_hv X<get_hv>, HEf_SVKEY X<HEf_SVKEY>, HeHASH X<HeHASH>, HeKEY X<HeKEY>,
HeKLEN X<HeKLEN>, HePV X<HePV>, HeSVKEY X<HeSVKEY>, HeSVKEY_force
X<HeSVKEY_force>, HeSVKEY_set X<HeSVKEY_set>, HeVAL X<HeVAL>, HvNAME
X<HvNAME>, hv_assert X<hv_assert>, hv_clear X<hv_clear>,
hv_clear_placeholders X<hv_clear_placeholders>, hv_delete X<hv_delete>,
hv_delete_ent X<hv_delete_ent>, hv_exists X<hv_exists>, hv_exists_ent
X<hv_exists_ent>, hv_fetch X<hv_fetch>, hv_fetchs X<hv_fetchs>,
hv_fetch_ent X<hv_fetch_ent>, hv_iterinit X<hv_iterinit>, hv_iterkey
X<hv_iterkey>, hv_iterkeysv X<hv_iterkeysv>, hv_iternext X<hv_iternext>,
hv_iternextsv X<hv_iternextsv>, hv_iternext_flags X<hv_iternext_flags>,
hv_iterval X<hv_iterval>, hv_magic X<hv_magic>, hv_scalar X<hv_scalar>,
hv_store X<hv_store>, hv_stores X<hv_stores>, hv_store_ent X<hv_store_ent>,
hv_undef X<hv_undef>, newHV X<newHV>

=item Magical Functions
d5300 1
a5300 2
Newxc X<Newxc>, Newxz X<Newxz>, Poison X<Poison>, PoisonFree X<PoisonFree>,
PoisonNew X<PoisonNew>, PoisonWith X<PoisonWith>, Renew X<Renew>, Renewc
d5302 2
a5303 3
savepvs X<savepvs>, savesharedpv X<savesharedpv>, savesharedpvn
X<savesharedpvn>, savesvpv X<savesvpv>, StructCopy X<StructCopy>, Zero
X<Zero>, ZeroD X<ZeroD>
d5308 1
a5308 3
X<getcwd_sv>, my_snprintf X<my_snprintf>, my_sprintf X<my_sprintf>,
my_vsnprintf X<my_vsnprintf>, new_version X<new_version>, scan_version
X<scan_version>, strEQ X<strEQ>, strGE X<strGE>, strGT X<strGT>, strLE
d5310 2
a5311 13
X<strnNE>, sv_destroyable X<sv_destroyable>, sv_nosharing X<sv_nosharing>,
upg_version X<upg_version>, vcmp X<vcmp>, vnormal X<vnormal>, vnumify
X<vnumify>, vstringify X<vstringify>, vverify X<vverify>

=item MRO Functions

mro_get_linear_isa X<mro_get_linear_isa>, mro_method_changed_in
X<mro_method_changed_in>

=item Multicall Functions

dMULTICALL X<dMULTICALL>, MULTICALL X<MULTICALL>, POP_MULTICALL
X<POP_MULTICALL>, PUSH_MULTICALL X<PUSH_MULTICALL>
d5316 2
a5317 3
grok_numeric_radix X<grok_numeric_radix>, grok_oct X<grok_oct>,
Perl_signbit X<Perl_signbit>, scan_bin X<scan_bin>, scan_hex X<scan_hex>,
scan_oct X<scan_oct>
a5326 14
=item Per-Interpreter Variables

PL_modglobal X<PL_modglobal>, PL_na X<PL_na>, PL_sv_no X<PL_sv_no>,
PL_sv_undef X<PL_sv_undef>, PL_sv_yes X<PL_sv_yes>

=item REGEXP Functions

SvRX X<SvRX>, SvRXOK X<SvRXOK>

=item Simple Exception Handling Macros

dXCPT X<dXCPT>, XCPT_CATCH X<XCPT_CATCH>, XCPT_RETHROW X<XCPT_RETHROW>,
XCPT_TRY_END X<XCPT_TRY_END>, XCPT_TRY_START X<XCPT_TRY_START>

d5354 9
a5362 5
get_sv X<get_sv>, newRV_inc X<newRV_inc>, SvCUR X<SvCUR>, SvCUR_set
X<SvCUR_set>, SvEND X<SvEND>, SvGAMAGIC X<SvGAMAGIC>, SvGROW X<SvGROW>,
SvIOK X<SvIOK>, SvIOKp X<SvIOKp>, SvIOK_notUV X<SvIOK_notUV>, SvIOK_off
X<SvIOK_off>, SvIOK_on X<SvIOK_on>, SvIOK_only X<SvIOK_only>, SvIOK_only_UV
X<SvIOK_only_UV>, SvIOK_UV X<SvIOK_UV>, SvIsCOW X<SvIsCOW>,
d5364 39
a5402 54
SvIVx X<SvIVx>, SvIV_nomg X<SvIV_nomg>, SvIV_set X<SvIV_set>, SvLEN
X<SvLEN>, SvLEN_set X<SvLEN_set>, SvMAGIC_set X<SvMAGIC_set>, SvNIOK
X<SvNIOK>, SvNIOKp X<SvNIOKp>, SvNIOK_off X<SvNIOK_off>, SvNOK X<SvNOK>,
SvNOKp X<SvNOKp>, SvNOK_off X<SvNOK_off>, SvNOK_on X<SvNOK_on>, SvNOK_only
X<SvNOK_only>, SvNV X<SvNV>, SvNVX X<SvNVX>, SvNVx X<SvNVx>, SvNV_set
X<SvNV_set>, SvOK X<SvOK>, SvOOK X<SvOOK>, SvPOK X<SvPOK>, SvPOKp
X<SvPOKp>, SvPOK_off X<SvPOK_off>, SvPOK_on X<SvPOK_on>, SvPOK_only
X<SvPOK_only>, SvPOK_only_UTF8 X<SvPOK_only_UTF8>, SvPV X<SvPV>, SvPVbyte
X<SvPVbyte>, SvPVbytex X<SvPVbytex>, SvPVbytex_force X<SvPVbytex_force>,
SvPVbyte_force X<SvPVbyte_force>, SvPVbyte_nolen X<SvPVbyte_nolen>,
SvPVutf8 X<SvPVutf8>, SvPVutf8x X<SvPVutf8x>, SvPVutf8x_force
X<SvPVutf8x_force>, SvPVutf8_force X<SvPVutf8_force>, SvPVutf8_nolen
X<SvPVutf8_nolen>, SvPVX X<SvPVX>, SvPVx X<SvPVx>, SvPV_force
X<SvPV_force>, SvPV_force_nomg X<SvPV_force_nomg>, SvPV_nolen
X<SvPV_nolen>, SvPV_nomg X<SvPV_nomg>, SvPV_set X<SvPV_set>, SvREFCNT
X<SvREFCNT>, SvREFCNT_dec X<SvREFCNT_dec>, SvREFCNT_inc X<SvREFCNT_inc>,
SvREFCNT_inc_NN X<SvREFCNT_inc_NN>, SvREFCNT_inc_simple
X<SvREFCNT_inc_simple>, SvREFCNT_inc_simple_NN X<SvREFCNT_inc_simple_NN>,
SvREFCNT_inc_simple_void X<SvREFCNT_inc_simple_void>,
SvREFCNT_inc_simple_void_NN X<SvREFCNT_inc_simple_void_NN>,
SvREFCNT_inc_void X<SvREFCNT_inc_void>, SvREFCNT_inc_void_NN
X<SvREFCNT_inc_void_NN>, SvROK X<SvROK>, SvROK_off X<SvROK_off>, SvROK_on
X<SvROK_on>, SvRV X<SvRV>, SvRV_set X<SvRV_set>, SvSTASH X<SvSTASH>,
SvSTASH_set X<SvSTASH_set>, SvTAINT X<SvTAINT>, SvTAINTED X<SvTAINTED>,
SvTAINTED_off X<SvTAINTED_off>, SvTAINTED_on X<SvTAINTED_on>, SvTRUE
X<SvTRUE>, SvTYPE X<SvTYPE>, SvUOK X<SvUOK>, SvUPGRADE X<SvUPGRADE>, SvUTF8
X<SvUTF8>, SvUTF8_off X<SvUTF8_off>, SvUTF8_on X<SvUTF8_on>, SvUV X<SvUV>,
SvUVX X<SvUVX>, SvUVx X<SvUVx>, SvUV_nomg X<SvUV_nomg>, SvUV_set
X<SvUV_set>, SvVOK X<SvVOK>, sv_catpvn_nomg X<sv_catpvn_nomg>,
sv_catsv_nomg X<sv_catsv_nomg>, sv_derived_from X<sv_derived_from>, sv_does
X<sv_does>, sv_report_used X<sv_report_used>, sv_setsv_nomg
X<sv_setsv_nomg>

=item SV-Body Allocation

looks_like_number X<looks_like_number>, newRV_noinc X<newRV_noinc>, newSV
X<newSV>, newSVhek X<newSVhek>, newSViv X<newSViv>, newSVnv X<newSVnv>,
newSVpv X<newSVpv>, newSVpvf X<newSVpvf>, newSVpvn X<newSVpvn>,
newSVpvn_share X<newSVpvn_share>, newSVpvs X<newSVpvs>, newSVpvs_share
X<newSVpvs_share>, newSVrv X<newSVrv>, newSVsv X<newSVsv>, newSVuv
X<newSVuv>, newSV_type X<newSV_type>, sv_2bool X<sv_2bool>, sv_2cv
X<sv_2cv>, sv_2io X<sv_2io>, sv_2iv_flags X<sv_2iv_flags>, sv_2mortal
X<sv_2mortal>, sv_2nv X<sv_2nv>, sv_2pvbyte X<sv_2pvbyte>, sv_2pvutf8
X<sv_2pvutf8>, sv_2pv_flags X<sv_2pv_flags>, sv_2uv_flags X<sv_2uv_flags>,
sv_backoff X<sv_backoff>, sv_bless X<sv_bless>, sv_catpv X<sv_catpv>,
sv_catpvf X<sv_catpvf>, sv_catpvf_mg X<sv_catpvf_mg>, sv_catpvn
X<sv_catpvn>, sv_catpvn_flags X<sv_catpvn_flags>, sv_catpvs X<sv_catpvs>,
sv_catpv_mg X<sv_catpv_mg>, sv_catsv X<sv_catsv>, sv_catsv_flags
X<sv_catsv_flags>, sv_chop X<sv_chop>, sv_clear X<sv_clear>, sv_cmp
X<sv_cmp>, sv_cmp_locale X<sv_cmp_locale>, sv_collxfrm X<sv_collxfrm>,
sv_copypv X<sv_copypv>, sv_dec X<sv_dec>, sv_eq X<sv_eq>,
sv_force_normal_flags X<sv_force_normal_flags>, sv_free X<sv_free>, sv_gets
X<sv_gets>, sv_grow X<sv_grow>, sv_inc X<sv_inc>, sv_insert X<sv_insert>,
sv_isa X<sv_isa>, sv_isobject X<sv_isobject>, sv_len X<sv_len>, sv_len_utf8
d5405 5
a5409 3
X<sv_newref>, sv_pos_b2u X<sv_pos_b2u>, sv_pos_u2b X<sv_pos_u2b>,
sv_pvbyten_force X<sv_pvbyten_force>, sv_pvn_force X<sv_pvn_force>,
sv_pvn_force_flags X<sv_pvn_force_flags>, sv_pvutf8n_force
d5411 6
a5416 6
sv_reset X<sv_reset>, sv_rvweaken X<sv_rvweaken>, sv_setiv X<sv_setiv>,
sv_setiv_mg X<sv_setiv_mg>, sv_setnv X<sv_setnv>, sv_setnv_mg
X<sv_setnv_mg>, sv_setpv X<sv_setpv>, sv_setpvf X<sv_setpvf>, sv_setpvf_mg
X<sv_setpvf_mg>, sv_setpviv X<sv_setpviv>, sv_setpviv_mg X<sv_setpviv_mg>,
sv_setpvn X<sv_setpvn>, sv_setpvn_mg X<sv_setpvn_mg>, sv_setpvs
X<sv_setpvs>, sv_setpv_mg X<sv_setpv_mg>, sv_setref_iv X<sv_setref_iv>,
d5419 12
a5430 10
sv_setsv_flags X<sv_setsv_flags>, sv_setsv_mg X<sv_setsv_mg>, sv_setuv
X<sv_setuv>, sv_setuv_mg X<sv_setuv_mg>, sv_tainted X<sv_tainted>, sv_true
X<sv_true>, sv_unmagic X<sv_unmagic>, sv_unref_flags X<sv_unref_flags>,
sv_untaint X<sv_untaint>, sv_upgrade X<sv_upgrade>, sv_usepvn_flags
X<sv_usepvn_flags>, sv_utf8_decode X<sv_utf8_decode>, sv_utf8_downgrade
X<sv_utf8_downgrade>, sv_utf8_encode X<sv_utf8_encode>, sv_utf8_upgrade
X<sv_utf8_upgrade>, sv_utf8_upgrade_flags X<sv_utf8_upgrade_flags>,
sv_vcatpvf X<sv_vcatpvf>, sv_vcatpvfn X<sv_vcatpvfn>, sv_vcatpvf_mg
X<sv_vcatpvf_mg>, sv_vsetpvf X<sv_vsetpvf>, sv_vsetpvfn X<sv_vsetpvfn>,
sv_vsetpvf_mg X<sv_vsetpvf_mg>
d5451 3
a5453 4
dUNDERBAR X<dUNDERBAR>, dXSARGS X<dXSARGS>, dXSI32 X<dXSI32>, items
X<items>, ix X<ix>, newXSproto X<newXSproto>, RETVAL X<RETVAL>, ST X<ST>,
THIS X<THIS>, UNDERBAR X<UNDERBAR>, XS X<XS>, XS_VERSION X<XS_VERSION>,
XS_VERSION_BOOTCHECK X<XS_VERSION_BOOTCHECK>
d5491 5
a5495 1
=item GV Functions
d5497 3
a5499 1
is_gv_magical X<is_gv_magical>, is_gv_magical_sv X<is_gv_magical_sv>
d5501 1
a5501 1
=item Hash Manipulation Functions
d5503 1
a5503 2
refcounted_he_chain_2hv X<refcounted_he_chain_2hv>, refcounted_he_free
X<refcounted_he_free>, refcounted_he_new X<refcounted_he_new>
a5508 9
=item Magical Functions

magic_sethint X<magic_sethint>, mg_localize X<mg_localize>

=item MRO Functions

mro_get_linear_isa_c3 X<mro_get_linear_isa_c3>, mro_get_linear_isa_dfs
X<mro_get_linear_isa_dfs>, mro_isa_changed_in X<mro_isa_changed_in>

a5520 6
=item Per-Interpreter Variables

PL_DBsingle X<PL_DBsingle>, PL_DBsub X<PL_DBsub>, PL_DBtrace X<PL_DBtrace>,
PL_dowarn X<PL_dowarn>, PL_last_in_gv X<PL_last_in_gv>, PL_ofs_sv
X<PL_ofs_sv>, PL_rs X<PL_rs>

d5527 3
a5529 10
sv_add_arena X<sv_add_arena>, sv_clean_all X<sv_clean_all>, sv_clean_objs
X<sv_clean_objs>, sv_free_arenas X<sv_free_arenas>

=item SV-Body Allocation

sv_2num X<sv_2num>

=item Unicode Support

find_uninit_var X<find_uninit_var>, report_uninit X<report_uninit>
a5697 18
=back

=item SOURCE CODE STATIC ANALYSIS

=over 4

=item lint, splint

=item Coverity

=item cpd (cut-and-paste detector)

=item gcc warnings

=item Warnings of other C compilers

=item DEBUGGING

d5717 3
a5719 3
F<t/base/>, F<t/cmd/>, F<t/comp/>, F<t/io/>, F<t/lib/>, F<t/mro/>,
F<t/op/>, F<t/pod/>, F<t/run/>, F<t/uni/>, F<t/win32/>, F<t/x2p>, t/base
t/comp, t/cmd t/run t/io t/op, t/lib ext lib
d5731 1
a5731 12
PERL_DESTRUCT_LEVEL=2, PERL, PERL_SKIP_TTY_TEST, PERL_TEST_Net_Ping,
PERL_TEST_NOVREXX, PERL_TEST_NUMCONVERTS

=item Common problems when patching Perl source code

=item Perl environment problems

=item Portability problems

=item Problematic System Interfaces

=item Security problems
a5754 2
=item PERL_MEM_LOG

a5769 2
=back

d5774 2
d5788 1
a5788 1
=head2 perlcommunity - a brief overview of the Perl community
d5794 2
d5798 1
a5798 13
=item Where to find the community

=item Mailing lists and Newsgroups

=item IRC

=item Websites

L<http://perl.com/>, L<http://use.perl.org/>, L<http://www.perlmonks.org/>

=item User Groups

=item Workshops
d5800 1
a5800 1
=item Hackathons
d5802 1
a5802 5
=item Conventions

=item Calendar of Perl Events

=back
d5804 1
a5804 1
=item AUTHOR
a5807 6
=head2 perltodo - Perl TO-DO List

=over 4

=item DESCRIPTION

a5811 4
=item Remove duplication of test setup.

=item merge common code in installperl and installman

d5814 1
a5814 5
=item POD -E<gt> HTML conversion in the core still sucks

=item merge checkpods and podchecker

=item perlmodlib.PL rewrite
a5823 2
=item Deparse inlined constants

a5833 4
=item embed.pl/makedef.pl

=item use strict; and AutoLoad

d5840 2
d5848 3
a5850 1
=item Make Config.pm cope with differences between built and installed perl
a5853 4
=item Cross-compile support

=item roffitall

a5859 6
=item Exterminate PL_na!

=item Modernize the order of directories in @@INC

=item -Duse32bit*

d5862 1
a5862 1
=item Profile Perl - am I hot or not?
d5864 1
a5864 1
=item Allocate OPs from arenas
d5866 1
a5866 1
=item Improve win32/wince.c
d5868 1
a5868 1
=item Use secure CRT functions when building with VC8 on Win32
d5870 1
a5870 1
=item strcat(), strcpy(), strncat(), strncpy(), sprintf(), vsprintf()
d5872 1
a5872 1
=item -D_FORTIFY_SOURCE=2, -fstack-protector
d5880 10
a5895 4
=item Unicode and glob()

=item Unicode and lc/uc operators

a5903 13
=item Audit the code for destruction ordering assumptions

=item Extend PerlIO and PerlIO::Scalar

=item -C on the #! line

=item Propagate const outwards from Perl_moreswitches()

=item Duplicate logic in S_method_common() and
Perl_gv_fetchmethod_autoload()

=item Organize error messages

d5910 1
a5910 1
=item state variable initialization in list context
d5912 1
a5912 1
=item Implement $value ~~ 0 .. $range
d5914 1
a5914 1
=item A does() built-in
d5916 1
a5916 1
=item Tied filehandles and write() don't mix
d5918 1
a5918 1
=item Attach/detach debugger from running program
d5920 1
a5920 1
=item Optimize away empty destructors
d5922 1
a5922 1
=item LVALUE functions for lists
d5924 1
a5924 1
=item LVALUE functions in the debugger
d5928 1
a5928 3
=item delete &function

=item C</w> regex modifier
d5938 1
a5938 1
=item Self-ties
d5942 1
a5942 7
=item Properly Unicode safe tokeniser and pads.

=item The yada yada yada operators

=item Virtualize operating system access

=item Investigate PADTMP hash pessimisation
a5957 2
=item Add class set operations to regexp engine

d5975 1
a5975 1
B<-w> I<option:value> or B<-w> I<option>, B<-X>, B<-L> I<language_code>,
d6017 1
a6017 1
=head2 perldelta - what is new for perl 5.10.0
d6023 2
d6027 1
a6027 1
=over 4
d6029 1
a6029 1
=item The C<feature> pragma
d6031 1
a6031 1
=item New B<-E> command-line switch
d6033 1
a6033 1
=item Defined-or operator
d6035 1
a6035 1
=item Switch and Smart Match operator
d6037 1
a6037 1
=item Regular expressions
d6039 1
a6039 3
Recursive Patterns, Named Capture Buffers, Possessive Quantifiers,
Backtracking control verbs, Relative backreferences, C<\K> escape, Vertical
and horizontal whitespace, and linebreak
d6041 1
a6041 1
=item C<say()>
d6043 1
a6043 1
=item Lexical C<$_>
d6045 1
a6045 1
=item The C<_> prototype
d6047 1
a6047 1
=item UNITCHECK blocks
d6049 1
a6049 1
=item New Pragma, C<mro>
d6051 1
a6051 1
=item readdir() may return a "short filename" on Windows
d6053 1
a6053 1
=item readpipe() is now overridable
d6055 1
a6055 1
=item Default argument for readline()
d6057 1
a6057 1
=item state() variables
d6059 1
a6059 1
=item Stacked filetest operators
d6061 1
a6061 1
=item UNIVERSAL::DOES()
d6063 1
a6063 1
=item Formats
d6065 1
a6065 1
=item Byte-order modifiers for pack() and unpack()
d6067 1
a6067 1
=item C<no VERSION>
d6069 1
a6069 1
=item C<chdir>, C<chmod> and C<chown> on filehandles
d6071 1
a6071 1
=item OS groups
d6073 1
a6073 1
=item Recursive sort subs
d6075 1
a6075 1
=item Exceptions in constant folding
d6077 1
a6077 1
=item Source filters in @@INC
d6079 1
a6079 1
=item New internal variables
d6081 1
a6081 2
C<${^RE_DEBUG_FLAGS}>, C<${^CHILD_ERROR_NATIVE}>, C<${^RE_TRIE_MAXBUF}>,
C<${^WIN32_SLOPPY_STAT}>
d6083 1
a6083 1
=item Miscellaneous
d6085 1
a6085 1
=item UCD 5.0.0
d6087 1
a6087 1
=item MAD
d6089 1
a6089 1
=item kill() on Windows
d6093 6
d6101 2
d6105 1
a6105 1
=item Packing and UTF-8 strings
d6107 1
a6107 1
=item Byte/character count feature in unpack()
d6109 1
a6109 1
=item The C<$*> and C<$#> variables have been removed
d6111 1
a6111 1
=item substr() lvalues are no longer fixed-length
d6113 1
a6113 1
=item Parsing of C<-f _>
d6115 1
a6115 1
=item C<:unique>
d6117 1
a6117 1
=item Effect of pragmas in eval
d6119 1
a6119 1
=item chdir FOO
d6121 1
a6121 1
=item Handling of .pmc files
d6123 1
a6123 1
=item $^V is now a C<version> object instead of a v-string
d6125 1
a6125 1
=item @@- and @@+ in patterns
d6127 1
a6127 1
=item $AUTOLOAD can now be tainted
d6129 1
a6129 1
=item Tainting and printf
d6131 1
a6131 1
=item undef and signal handlers
d6133 1
a6133 1
=item strictures and dereferencing in defined()
d6135 1
a6135 1
=item C<(?p{})> has been removed
d6137 1
a6137 1
=item Pseudo-hashes have been removed
d6139 1
a6139 1
=item Removal of the bytecode compiler and of perlcc
d6141 1
a6141 3
=item Removal of the JPL

=item Recursive inheritance detected earlier
d6145 1
a6145 1
=item Modules and Pragmata
d6149 1
a6149 1
=item Upgrading individual core modules
d6151 1
a6151 1
=item Pragmata Changes
d6153 1
a6153 3
C<feature>, C<mro>, Scoping of the C<sort> pragma, Scoping of C<bignum>,
C<bigint>, C<bigrat>, C<base>, C<strict> and C<warnings>, C<version>,
C<warnings>, C<less>
d6155 1
a6155 1
=item New modules
d6157 1
a6157 1
=item Selected Changes to Core Modules
d6159 1
a6159 1
C<Attribute::Handlers>, C<B::Lint>, C<B>, C<Thread>
d6161 1
a6161 1
=back
d6163 1
a6163 1
=item Utility Changes
d6165 1
a6165 2
perl -d, ptar, ptardiff, shasum, corelist, h2ph and h2xs, perlivp,
find2perl, config_data, cpanp, cpan2dist, pod2html
d6167 1
a6167 1
=item New Documentation
d6169 1
a6169 1
=item Performance Enhancements
d6171 1
a6171 1
=over 4
d6173 1
a6173 1
=item In-place sorting
d6175 1
a6175 1
=item Lexical array access
d6177 1
a6177 1
=item XS-assisted SWASHGET
d6179 1
a6179 1
=item Constant subroutines
d6181 1
a6181 1
=item C<PERL_DONT_CREATE_GVSV>
d6183 1
a6183 1
=item Weak references are cheaper
d6185 1
a6185 1
=item sort() enhancements
d6187 1
a6187 1
=item Memory optimisations
d6189 1
a6189 1
=item UTF-8 cache optimisation
d6191 1
a6191 1
=item Sloppy stat on Windows
d6193 1
a6193 5
=item Regular expressions optimisations

Engine de-recursivised, Single char char-classes treated as literals, Trie
optimisation of literal string alternations, Aho-Corasick start-point
optimisation
d6199 1
a6199 1
=over 4
d6201 1
a6201 1
=item Configuration improvements
d6203 1
a6203 2
C<-Dusesitecustomize>, Relocatable installations, strlcat() and strlcpy(),
C<d_pseudofork> and C<d_printf_format_null>, Configure help
d6205 1
a6205 1
=item Compilation improvements
d6207 1
a6207 3
Parallel build, Borland's compilers support, Static build on Windows,
ppport.h files, C++ compatibility, Support for Microsoft 64-bit compiler,
Visual C++, Win32 builds
d6209 1
a6209 1
=item Installation improvements
d6211 1
a6211 3
Module auxiliary files

=item New Or Improved Platforms
d6215 1
a6215 1
=item Selected Bug Fixes
d6217 1
a6217 7
strictures in regexp-eval blocks, Calling CORE::require(), Subscripts of
slices, C<no warnings 'category'> works correctly with -w, threads
improvements, chr() and negative values, PERL5SHELL and tainting, Using
*FILE{IO}, Overloading and reblessing, Overloading and UTF-8, eval memory
leaks fixed, Random device on Windows, PERLIO_DEBUG, PerlIO::scalar and
read-only scalars, study() and UTF-8, Critical signals, @@INC-hook fix,
C<-t> switch fix, Duping UTF-8 filehandles, Localisation of hash elements
d6219 1
a6219 1
=item New or Changed Diagnostics
d6221 1
a6221 6
Use of uninitialized value, Deprecated use of my() in false conditional,
!=~ should be !~, Newline in left-justified string, Too late for "-T"
option, "%s" variable %s masks earlier declaration,
readdir()/closedir()/etc. attempted on invalid dirhandle, Opening
dirhandle/filehandle %s also as a file/directory, Use of -P is deprecated,
v-string in use/require is non-portable, perl -V
d6223 1
a6223 1
=item Changed Internals
d6227 5
a6231 1
=item Reordering of SVt_* constants
d6233 1
a6233 1
=item Elimination of SVt_PVBM
d6235 1
a6235 1
=item New type SVt_BIND
d6237 1
a6237 1
=item Removal of CPP symbols
d6239 1
a6239 1
=item Less space is used by ops
d6241 1
a6241 1
=item New parser
d6243 5
a6247 1
=item Use of C<const>
d6249 1
a6249 1
=item Mathoms
d6251 1
a6251 1
=item C<AvFLAGS> has been removed
d6253 1
a6253 1
=item C<av_*> changes
d6255 1
a6255 1
=item $^H and %^H
d6257 1
a6257 1
=item B:: modules inheritance changed
d6259 1
a6259 1
=item Anonymous hash and array constructors
d6261 1
a6261 1
=back
d6263 1
a6263 1
=item Known Problems
d6273 1
a6273 1
=head2 perl5100delta, perldelta - what is new for perl 5.10.0
d6279 2
d6283 11
a6293 1
=over 4
d6295 1
a6295 1
=item The C<feature> pragma
d6297 1
a6297 1
=item New B<-E> command-line switch
d6299 1
a6299 1
=item Defined-or operator
d6301 1
a6301 1
=item Switch and Smart Match operator
d6303 1
a6303 1
=item Regular expressions
d6305 1
a6305 3
Recursive Patterns, Named Capture Buffers, Possessive Quantifiers,
Backtracking control verbs, Relative backreferences, C<\K> escape, Vertical
and horizontal whitespace, and linebreak
d6307 1
a6307 1
=item C<say()>
d6309 1
a6309 1
=item Lexical C<$_>
d6311 1
a6311 1
=item The C<_> prototype
d6313 1
a6313 1
=item UNITCHECK blocks
d6315 1
a6315 1
=item New Pragma, C<mro>
d6317 1
a6317 1
=item readdir() may return a "short filename" on Windows
d6319 1
a6319 1
=item readpipe() is now overridable
d6321 1
a6321 1
=item Default argument for readline()
d6323 1
a6323 1
=item state() variables
d6325 1
a6325 1
=item Stacked filetest operators
d6327 1
a6327 1
=item UNIVERSAL::DOES()
d6329 1
a6329 1
=item Formats
d6331 1
a6331 1
=item Byte-order modifiers for pack() and unpack()
d6333 1
a6333 1
=item C<no VERSION>
d6335 1
a6335 1
=item C<chdir>, C<chmod> and C<chown> on filehandles
d6337 1
a6337 1
=item OS groups
d6339 1
a6339 1
=item Recursive sort subs
d6341 3
a6343 1
=item Exceptions in constant folding
d6345 1
a6345 1
=item Source filters in @@INC
d6347 1
a6347 1
=item New internal variables
d6349 1
a6349 2
C<${^RE_DEBUG_FLAGS}>, C<${^CHILD_ERROR_NATIVE}>, C<${^RE_TRIE_MAXBUF}>,
C<${^WIN32_SLOPPY_STAT}>
d6351 1
a6351 1
=item Miscellaneous
d6353 1
a6353 1
=item UCD 5.0.0
d6355 1
a6355 1
=item MAD
d6357 1
a6357 1
=item kill() on Windows
d6361 1
a6361 1
=item Incompatible Changes
d6365 1
a6365 1
=item Packing and UTF-8 strings
d6367 1
a6367 1
=item Byte/character count feature in unpack()
d6369 1
a6369 1
=item The C<$*> and C<$#> variables have been removed
d6371 1
a6371 1
=item substr() lvalues are no longer fixed-length
d6373 1
a6373 1
=item Parsing of C<-f _>
d6375 1
a6375 1
=item C<:unique>
d6377 1
a6377 1
=item Effect of pragmas in eval
d6379 1
a6379 1
=item chdir FOO
d6381 1
a6381 1
=item Handling of .pmc files
d6383 1
a6383 1
=item $^V is now a C<version> object instead of a v-string
d6385 1
a6385 1
=item @@- and @@+ in patterns
d6387 1
a6387 1
=item $AUTOLOAD can now be tainted
d6389 1
a6389 1
=item Tainting and printf
d6391 1
a6391 1
=item undef and signal handlers
d6393 1
a6393 1
=item strictures and dereferencing in defined()
d6395 1
a6395 1
=item C<(?p{})> has been removed
d6397 1
a6397 1
=item Pseudo-hashes have been removed
d6399 1
a6399 5
=item Removal of the bytecode compiler and of perlcc

=item Removal of the JPL

=item Recursive inheritance detected earlier
d6407 1
a6407 1
=item Upgrading individual core modules
d6409 8
a6416 11
=item Pragmata Changes

C<feature>, C<mro>, Scoping of the C<sort> pragma, Scoping of C<bignum>,
C<bigint>, C<bigrat>, C<base>, C<strict> and C<warnings>, C<version>,
C<warnings>, C<less>

=item New modules

=item Selected Changes to Core Modules

C<Attribute::Handlers>, C<B::Lint>, C<B>, C<Thread>
a6421 3
perl -d, ptar, ptardiff, shasum, corelist, h2ph and h2xs, perlivp,
find2perl, config_data, cpanp, cpan2dist, pod2html

d6424 1
a6424 1
=item Performance Enhancements
d6428 3
a6430 1
=item In-place sorting
d6432 1
a6432 1
=item Lexical array access
d6434 1
a6434 1
=item XS-assisted SWASHGET
d6436 1
a6436 1
=item Constant subroutines
d6438 1
a6438 1
=item C<PERL_DONT_CREATE_GVSV>
d6440 1
a6440 1
=item Weak references are cheaper
d6442 1
a6442 1
=item sort() enhancements
d6444 1
a6444 1
=item Memory optimisations
d6446 1
a6446 1
=item UTF-8 cache optimisation
d6448 1
a6448 1
=item Sloppy stat on Windows
d6450 1
a6450 1
=item Regular expressions optimisations
d6452 1
a6452 3
Engine de-recursivised, Single char char-classes treated as literals, Trie
optimisation of literal string alternations, Aho-Corasick start-point
optimisation
d6454 1
a6454 1
=back
d6456 1
a6456 1
=item Installation and Configuration Improvements
d6458 1
a6458 1
=over 4
d6460 1
a6460 1
=item Configuration improvements
d6462 1
a6462 2
C<-Dusesitecustomize>, Relocatable installations, strlcat() and strlcpy(),
C<d_pseudofork> and C<d_printf_format_null>, Configure help
d6464 1
a6464 1
=item Compilation improvements
d6466 1
a6466 3
Parallel build, Borland's compilers support, Static build on Windows,
ppport.h files, C++ compatibility, Support for Microsoft 64-bit compiler,
Visual C++, Win32 builds
d6468 1
a6468 1
=item Installation improvements
d6470 1
a6470 1
Module auxiliary files
d6472 1
a6472 1
=item New Or Improved Platforms
d6476 1
a6476 1
=item Selected Bug Fixes
d6478 1
a6478 7
strictures in regexp-eval blocks, Calling CORE::require(), Subscripts of
slices, C<no warnings 'category'> works correctly with -w, threads
improvements, chr() and negative values, PERL5SHELL and tainting, Using
*FILE{IO}, Overloading and reblessing, Overloading and UTF-8, eval memory
leaks fixed, Random device on Windows, PERLIO_DEBUG, PerlIO::scalar and
read-only scalars, study() and UTF-8, Critical signals, @@INC-hook fix,
C<-t> switch fix, Duping UTF-8 filehandles, Localisation of hash elements
d6480 1
a6480 10
=item New or Changed Diagnostics

Use of uninitialized value, Deprecated use of my() in false conditional,
!=~ should be !~, Newline in left-justified string, Too late for "-T"
option, "%s" variable %s masks earlier declaration,
readdir()/closedir()/etc. attempted on invalid dirhandle, Opening
dirhandle/filehandle %s also as a file/directory, Use of -P is deprecated,
v-string in use/require is non-portable, perl -V

=item Changed Internals
d6484 1
a6484 1
=item Reordering of SVt_* constants
d6486 1
a6486 1
=item Elimination of SVt_PVBM
d6488 1
a6488 1
=item New type SVt_BIND
d6490 1
a6490 1
=item Removal of CPP symbols
d6492 1
a6492 1
=item Less space is used by ops
d6494 1
a6494 1
=item New parser
d6496 1
a6496 1
=item Use of C<const>
d6498 1
a6498 1
=item Mathoms
d6500 1
a6500 1
=item C<AvFLAGS> has been removed
d6502 1
a6502 1
=item C<av_*> changes
d6504 1
a6504 1
=item $^H and %^H
d6506 1
a6506 1
=item B:: modules inheritance changed
d6508 1
a6508 1
=item Anonymous hash and array constructors
d6512 1
a6512 3
=item Known Problems

=item Platform Specific Problems
d6520 1
a6520 1
=head2 perl595delta - what is new for perl v5.9.5
d6526 2
d6532 1
a6532 1
=item Tainting and printf
d6534 1
a6534 1
=item undef and signal handlers
d6536 1
a6536 1
=item strictures and array/hash dereferencing in defined()
d6538 1
a6538 1
=item C<(?p{})> has been removed
d6540 1
a6540 1
=item Pseudo-hashes have been removed
d6542 1
a6542 1
=item Removal of the bytecode compiler and of perlcc
d6544 1
a6544 1
=item Removal of the JPL
d6546 1
a6546 1
=item Recursive inheritance detected earlier
d6548 1
a6548 1
=back
d6550 1
a6550 1
=item Core Enhancements
d6552 1
a6552 1
=over 4
d6554 1
a6554 19
=item Regular expressions

Recursive Patterns, Named Capture Buffers, Possessive Quantifiers,
Backtracking control verbs, Relative backreferences, C<\K> escape, Vertical
and horizontal whitespace, and linebreak

=item The C<_> prototype

=item UNITCHECK blocks

=item readpipe() is now overridable

=item default argument for readline()

=item UCD 5.0.0

=item Smart match

=item Implicit loading of C<feature>
d6558 1
a6558 1
=item Modules and Pragmas
d6562 3
a6564 1
=item New Pragma, C<mro>
d6566 1
a6566 1
=item bignum, bigint, bigrat
d6568 1
a6568 1
=item Math::BigInt/Math::BigFloat
d6570 1
a6570 3
config(), import(), roundmode common, bpi(), bcos(), bsin(), batan(),
batan2(), bmuladd(), bexp(), bnok(), from_hex(), from_oct(), and
from_bin(), as_oct()
d6572 1
a6572 1
=item New Core Modules
d6574 1
a6574 1
=item Module changes
d6576 1
a6576 2
C<assertions>, C<base>, C<strict> and C<warnings>, C<warnings>, C<less>,
C<Attribute::Handlers>, C<B::Lint>, C<B>, C<Thread>
d6580 1
a6580 1
=item Utility Changes
d6584 1
a6584 1
=item C<cpanp>
d6586 1
a6586 3
=item C<cpan2dist>

=item C<pod2html>
d6590 1
a6590 1
=item Documentation
d6592 1
a6592 5
=over 4

=item New manpage, perlunifaq

=back
d6600 1
a6600 1
=item C++ compatibility
d6602 1
a6602 13
=item Visual C++

=item Static build on Win32

=item win32 builds

=item C<d_pseudofork> and C<d_printf_format_null>

=item Help

=item 64bit systems

=item Ports
a6607 2
=item New or Changed Diagnostics

d6610 1
a6610 1
=item Deprecations
d6614 2
d6618 1
a6618 1
=item Known Problems
d6620 1
a6620 1
=over 4
d6622 1
a6622 11
=item Platform Specific Problems

=back

=item Reporting Bugs

=item SEE ALSO

=back

=head2 perl594delta - what is new for perl v5.9.4
d6626 1
a6626 1
=item DESCRIPTION
d6628 1
a6628 1
=item Incompatible Changes
d6630 1
a6630 1
=over 4
d6632 1
a6632 1
=item chdir FOO
d6634 1
a6634 1
=item Handling of pmc files
d6636 1
a6636 1
=item @@- and @@+ in patterns
d6638 1
a6638 1
=item $AUTOLOAD can now be tainted
d6640 1
a6640 1
=back
d6642 1
a6642 1
=item Core Enhancements
d6644 1
a6644 1
=over 4
d6646 1
a6646 1
=item state() variables
d6648 1
a6648 1
=item UNIVERSAL::DOES()
d6650 1
a6650 1
=item Exceptions in constant folding
d6652 1
a6652 1
=item Source filters in @@INC
d6654 1
a6654 1
=item MAD
d6658 1
a6658 1
=item Modules and Pragmas
d6662 1
a6662 1
=item New Core Modules
d6664 1
a6664 1
=back
d6666 1
a6666 1
=item Utility Changes
d6668 1
a6668 1
=over 4
d6670 1
a6670 1
=item config_data
d6672 1
a6672 1
=back
d6674 1
a6674 1
=item Documentation
d6676 1
a6676 1
=over 4
d6678 1
a6678 1
=item New manpage, perlpragma
d6680 1
a6680 1
=item New manpage, perlreguts
d6682 1
a6682 1
=item New manpage, perlunitut
d6684 1
a6684 1
=back
d6686 1
a6686 1
=item Performance Enhancements
d6688 1
a6688 1
=over 4
d6690 1
a6690 1
=item Memory optimisations
d6692 1
a6692 1
=item UTF-8 cache optimisation
d6694 1
a6694 1
=item Regular expressions
d6696 1
a6696 3
Engine de-recursivised, Single char char-classes treated as literals, Trie
optimisation of literal string alternations, Aho-Corasick start-point
optimisation
d6698 1
a6698 1
=item Sloppy stat on Windows
d6700 1
a6700 1
=back
d6702 1
a6702 1
=item Installation and Configuration Improvements
d6704 1
a6704 1
=over 4
d6706 1
a6706 1
=item Relocatable installations
d6708 1
a6708 1
=item Ports
d6710 1
a6710 1
=item Compilation improvements
d6712 1
a6712 1
=item New probes
d6714 1
a6714 1
=item Windows build improvements
d6716 1
a6716 1
Building XS extensions, Support for 64-bit compiler
d6718 1
a6718 1
=back
d6720 1
a6720 1
=item Selected Bug Fixes
d6722 1
a6722 1
=over 4
d6724 1
a6724 1
=item PERL5SHELL and tainting
d6726 1
a6726 1
=item Using *FILE{IO}
d6728 1
a6728 1
=item Overloading and reblessing
d6730 1
a6730 5
=item Overloading and UTF-8

=item eval memory leaks fixed

=item Random device on Windows
d6734 1
a6734 1
=item New or Changed Diagnostics
d6736 1
a6736 1
State variable %s will be reinitialized
d6738 1
a6738 1
=item Changed Internals
d6740 1
a6740 1
=item Known Problems
d6746 2
d6750 1
a6750 1
=head2 perl593delta - what is new for perl v5.9.3
d6756 2
d6762 1
a6762 1
=item Parsing of C<-f _>
d6764 1
a6764 1
=item C<mkdir()>
d6766 1
a6766 1
=item Magic goto and eval
d6768 1
a6768 1
=item C<$#> has been removed
d6770 1
a6770 3
=item C<:unique>

=item Scoping of the C<sort> pragma
d6776 2
d6780 1
a6780 1
=item The C<feature> pragma
d6782 1
a6782 1
=item Switch and Smart Match operator
d6784 1
a6784 1
=item C<say()>
d6786 1
a6786 1
=item C<CLONE_SKIP()>
d6788 1
a6788 1
=item C<${^CHILD_ERROR_NATIVE}>
d6790 1
a6790 1
=item Assertions
d6792 1
a6792 1
=item Unicode Character Database 4.1.0
d6794 1
a6794 1
=item C<no VERSION>
d6796 1
a6796 1
=item Recursive sort subs
d6798 1
a6798 1
=item Effect of pragmas in eval
d6800 1
a6800 1
=item New B<-E> command-line switch
d6802 1
a6802 1
=item C<chdir>, C<chmod> and C<chown> on filehandles
d6804 1
a6804 1
=item OS groups
d6808 3
a6810 1
=item Modules and Pragmata
d6814 7
a6820 1
=item New Core Modules
d6824 3
a6826 1
=item Utility Changes
d6830 1
a6830 1
=item C<ptar>
d6832 1
a6832 1
=item C<ptardiff>
d6834 1
a6834 1
=item C<shasum>
d6836 1
a6836 1
=item C<h2xs> enhancements
d6838 1
a6838 1
=item C<perlivp> enhancements
d6840 1
a6840 1
=back
d6842 1
a6842 1
=item Documentation
d6844 1
a6844 1
=over 4
d6846 1
a6846 1
=item Perl Glossary
d6848 1
a6848 1
=back
d6850 1
a6850 1
=item Performance Enhancements
d6852 1
a6852 1
=over 4
d6854 1
a6854 1
=item XS-assisted SWASHGET
d6856 1
a6856 1
=item Constant subroutines
d6858 1
a6858 1
=item C<PERL_DONT_CREATE_GVSV>
d6860 1
a6860 1
=item Weak references are cheaper
d6862 1
a6862 1
=item sort() enhancements
d6864 1
a6864 1
=back
d6866 1
a6866 1
=item Installation and Configuration Improvements
d6868 1
a6868 1
=over 4
d6870 1
a6870 1
=item Compilation improvements
d6872 1
a6872 1
=item New Or Improved Platforms
d6874 1
a6874 1
=item New probes
d6876 1
a6876 1
=item Module auxiliary files
d6880 1
a6880 1
=item Selected Bug Fixes
d6884 1
a6884 1
=item C<defined $$x>
d6886 1
a6886 1
=item Calling CORE::require()
d6888 1
a6888 1
=item Subscripts of slices
d6890 1
a6890 1
=item Remove over-optimisation
d6892 1
a6892 1
=item sprintf() fixes
d6894 1
a6894 1
=item no warnings 'category' works correctly with -w
d6896 1
a6896 1
=item Smaller fixes
d6898 1
a6898 1
=item More Unicode Fixes
d6902 1
a6902 1
=item New or Changed Diagnostics
d6906 3
a6908 1
=item Attempt to set length of freed array
d6910 1
a6910 1
=item Non-string passed as bitmask
d6912 1
a6912 2
=item Search pattern not terminated or ternary operator parsed as search
pattern
d6914 1
a6914 1
=item "%s" variable %s masks earlier declaration
d6916 1
a6916 1
=item readdir()/closedir()/etc. attempted on invalid dirhandle
d6918 1
a6918 1
=back
d6920 1
a6920 1
=item Changed Internals
d6922 1
a6922 1
=over 4
d6924 1
a6924 1
=item B:: modules inheritance changed
d6926 1
a6926 1
=back
d6928 1
a6928 1
=item Reporting Bugs
d6930 1
a6930 1
=item SEE ALSO
d6932 1
a6932 1
=back
d6934 1
a6934 1
=head2 perl592delta - what is new for perl v5.9.2
d6936 1
a6936 1
=over 4
d6938 1
a6938 1
=item DESCRIPTION
d6940 1
a6940 1
=item Incompatible Changes
d6944 3
a6946 1
=item Packing and UTF-8 strings
d6948 3
a6950 1
=item Miscellaneous
d6954 1
a6954 1
=item Core Enhancements
d6958 1
a6958 1
=item Malloc wrapping
d6960 1
a6960 1
=item Unicode Character Database 4.0.1
d6962 1
a6962 1
=item suidperl less insecure
d6964 1
a6964 1
=item PERLIO_DEBUG
d6966 1
a6966 1
=item Formats
d6968 1
a6968 1
=item Unicode Character Classes
d6970 1
a6970 1
=item Byte-order modifiers for pack() and unpack()
d6972 1
a6972 1
=item Byte count feature in pack()
d6974 1
a6974 1
=item New variables
d6976 1
a6976 1
=back
d6978 1
a6978 1
=item Modules and Pragmata
d6980 1
a6980 1
=over 4
d6982 1
a6982 1
=item New modules
d6984 1
a6984 1
=item Updated And Improved Modules and Pragmata
d6986 1
a6986 1
B::Concise, Socket, Sys::Syslog, threads
d6988 1
a6988 1
=back
d6990 1
a6990 1
=item Utility Changes
d6992 1
a6992 1
=item Performance Enhancements
d6994 1
a6994 1
=item Installation and Configuration Improvements
d6996 1
a6996 1
=item Selected Bug Fixes
d6998 1
a6998 7
=item New or Changed Diagnostics

=item Changed Internals

=item Known Problems

=item Plans for the next release
d7004 2
d7008 1
a7008 1
=head2 perl591delta - what is new for perl v5.9.1
d7014 2
d7018 4
d7024 1
a7024 1
=item substr() lvalues are no longer fixed-length
d7026 1
a7026 1
=item The C<:unique> attribute is only meaningful for globals
d7030 1
a7030 1
=item Core Enhancements
d7032 1
a7032 1
=over 4
d7034 1
a7034 1
=item Lexical C<$_>
d7036 1
a7036 1
=item Tied hashes in scalar context
d7038 1
a7038 1
=item Formats
d7040 1
a7040 1
=item Stacked filetest operators
a7043 10
=item Modules and Pragmata

Benchmark, Carp, Exporter, FindBin, List::Util, threads::shared

=item Utility Changes

=item Documentation

=item Performance Enhancements

d7048 1
a7048 5
=item UTF-8 bugs

=item Threading bugs

=item More bugs
d7056 2
d7060 3
a7062 1
=item Reordering of SVt_* constants
d7064 1
a7064 1
=item Removal of CPP symbols
d7066 1
a7066 1
=item Less space is used by ops
d7068 1
a7068 1
=item New parser
d7070 1
a7070 1
=back
d7072 1
a7072 1
=item Configuration and Building
d7074 1
a7074 1
=item Known Problems
d7076 1
a7076 1
=over 4
d7078 1
a7078 1
=item Platform Specific Problems
a7081 2
=item To-do for perl 5.10.0

d7086 2
d7090 1
a7090 1
=head2 perl590delta - what is new for perl v5.9.0
d7096 1
a7096 1
=item Incompatible Changes
d7100 15
a7114 1
=item Hash Randomisation
d7116 1
a7116 1
=item UTF-8 On Filehandles No Longer Activated By Locale
d7118 1
a7118 1
=item Single-number v-strings are no longer v-strings before "=>"
d7120 4
a7123 1
=item (Win32) The -C Switch Has Been Repurposed
d7125 1
a7125 1
=item (Win32) The /d Switch Of cmd.exe
d7127 1
a7127 1
=item The C<$*> variable has been removed
d7135 1
a7135 1
=item Assertions
d7137 1
a7137 1
=item Defined-or operators
d7139 1
a7139 1
=item UTF-8 no longer default under UTF-8 locales
d7141 1
a7141 1
=item Unsafe signals again available
d7143 1
a7143 1
=item Tied Arrays with Negative Array Indices
d7145 1
a7145 1
=item local ${$x}
d7147 1
a7147 1
=item Unicode Character Database 4.0.0
d7149 1
a7149 1
=item Miscellaneous Enhancements
d7151 1
a7151 1
=back
d7153 1
a7153 1
=item Modules and Pragmata
d7155 1
a7155 1
=over 4
d7157 1
a7157 1
=item Updated Modules And Pragmata
d7159 1
a7159 8
base, B::Bytecode, B::Concise, B::Deparse, Benchmark, ByteLoader, bytes,
CGI, charnames, CPAN, Data::Dumper, DB_File, Devel::PPPort, Digest::MD5,
Encode, fields, libnet, Math::BigInt, MIME::Base64, NEXT, Net::Ping,
PerlIO::scalar, podlators, Pod::LaTeX, PodParsers, Pod::Perldoc,
Scalar::Util, Storable, strict, Term::ANSIcolor, Test::Harness, Test::More,
Test::Simple, Text::Balanced, Time::HiRes, threads, threads::shared,
Unicode::Collate, Unicode::Normalize, Win32::GetFolderPath,
Win32::GetOSVersion
d7161 1
a7161 1
=back
d7163 1
a7163 1
=item Utility Changes
d7165 1
a7165 1
=item New Documentation
d7167 1
a7167 1
=item Performance Enhancements
d7169 1
a7169 1
=item Installation and Configuration Improvements
d7171 1
a7171 1
=over 4
d7173 1
a7173 1
=item Platform-specific enhancements
d7175 1
a7175 1
=back
d7177 1
a7177 1
=item Selected Bug Fixes
d7179 1
a7179 1
=over 4
d7181 1
a7181 1
=item Closures, eval and lexicals
d7183 1
a7183 1
=item Generic fixes
d7185 1
a7185 1
=item Platform-specific fixes
d7187 1
a7187 1
=back
d7189 1
a7189 1
=item New or Changed Diagnostics
d7191 1
a7191 1
=over 4
d7193 1
a7193 1
=item Changed "A thread exited while %d threads were running"
d7195 1
a7195 1
=item Removed "Attempt to clear a restricted hash"
d7197 1
a7197 1
=item New "Illegal declaration of anonymous subroutine"
d7199 1
a7199 1
=item Changed "Invalid range "%s" in transliteration operator"
d7201 1
a7201 1
=item New "Missing control char name in \c"
d7203 1
a7203 1
=item New "Newline in left-justified string for %s"
d7205 1
a7205 1
=item New "Possible precedence problem on bitwise %c operator"
d7207 1
a7207 1
=item New "read() on %s filehandle %s"
d7209 1
a7209 1
=item New "Tied variable freed while still in use"
d7211 1
a7211 1
=item New "To%s: illegal mapping '%s'"
d7213 1
a7213 1
=item New "Use of freed value in iteration"
d7215 1
a7215 1
=back
d7217 1
a7217 1
=item Changed Internals
d7219 1
a7219 1
=item New Tests
d7221 1
a7221 1
=item Known Problems
d7223 1
a7223 1
=over 4
d7225 1
a7225 1
=item Tied hashes in scalar context
d7227 1
a7227 1
=item Net::Ping 450_service and 510_ping_udp failures
d7229 1
a7229 1
=item B::C
d7231 1
a7231 1
=back
d7233 1
a7233 1
=item Platform Specific Problems
d7235 1
a7235 1
=over 4
d7237 1
a7237 1
=item EBCDIC Platforms
d7239 1
a7239 1
=item Cygwin 1.5 problems
d7241 1
a7241 1
=item HP-UX: HP cc warnings about sendfile and sendpath
d7243 1
a7243 1
=item IRIX: t/uni/tr_7jis.t falsely failing
d7245 1
a7245 1
=item Mac OS X: no usemymalloc
d7247 1
a7247 1
=item Tru64: No threaded builds with GNU cc (gcc)
d7249 1
a7249 1
=item Win32: sysopen, sysread, syswrite
d7251 1
a7251 1
=back
d7253 1
a7253 1
=item TODO
d7255 8
a7262 1
=item Reporting Bugs
d7264 1
a7264 1
=item SEE ALSO
d7268 1
a7268 1
=head2 perl588delta - what is new for perl v5.8.8
d7272 11
a7282 1
=item DESCRIPTION
d7284 1
a7284 1
=item Incompatible Changes
d7286 1
a7286 1
=item Core Enhancements
d7288 4
a7291 1
=item Modules and Pragmata
d7293 1
a7293 1
=item Utility Changes
d7297 1
a7297 1
=item C<h2xs> enhancements
d7299 1
a7299 1
=item C<perlivp> enhancements
d7301 1
a7301 1
=back
d7303 1
a7303 1
=item New Documentation
d7305 1
a7305 1
=item Performance Enhancements
a7308 2
=item Selected Bug Fixes

d7311 1
a7311 1
=item no warnings 'category' works correctly with -w
d7313 1
a7313 1
=item Remove over-optimisation
d7315 1
a7315 1
=item sprintf() fixes
d7317 1
a7317 1
=item Debugger and Unicode slowdown
d7319 1
a7319 1
=item Smaller fixes
d7321 1
a7321 1
=back
d7323 1
a7323 1
=item New or Changed Diagnostics
d7325 1
a7325 1
=over 4
d7327 1
a7327 1
=item Attempt to set length of freed array
d7329 1
a7329 1
=item Non-string passed as bitmask
d7331 1
a7331 2
=item Search pattern not terminated or ternary operator parsed as search
pattern
d7335 7
a7341 1
=item Changed Internals
d7343 1
a7343 1
=item Platform Specific Problems
d7345 1
a7345 1
=item Reporting Bugs
d7347 1
a7347 1
=item SEE ALSO
d7351 1
a7351 1
=head2 perl587delta - what is new for perl v5.8.7
d7355 5
a7359 1
=item DESCRIPTION
d7361 1
a7361 1
=item Incompatible Changes
d7363 1
a7363 1
=item Core Enhancements
d7365 1
a7365 1
=over 4
d7367 1
a7367 1
=item Unicode Character Database 4.1.0
d7369 1
a7369 1
=item suidperl less insecure
d7371 1
a7371 1
=item Optional site customization script
d7373 1
a7373 1
=item C<Config.pm> is now much smaller.
d7375 1
a7375 1
=back
d7377 1
a7377 1
=item Modules and Pragmata
d7379 1
a7379 1
=item Utility Changes
d7381 1
a7381 1
=over 4
d7383 1
a7383 1
=item find2perl enhancements
d7387 56
a7442 1
=item Performance Enhancements
d7444 1
a7444 1
=item Installation and Configuration Improvements
d7446 1
a7446 1
=item Selected Bug Fixes
d7448 11
a7458 1
=item New or Changed Diagnostics
d7460 1
a7460 1
=item Changed Internals
d7462 1
a7462 1
=item Known Problems
d7464 1
a7464 1
=item Platform Specific Problems
d7466 1
a7466 1
=item Reporting Bugs
d7468 1
a7468 1
=item SEE ALSO
d7472 1
a7472 1
=head2 perl586delta - what is new for perl v5.8.6
d7476 1
a7476 1
=item DESCRIPTION
d7478 1
a7478 1
=item Incompatible Changes
d7480 1
a7480 1
=item Core Enhancements
d7482 1
a7482 1
=item Modules and Pragmata
d7484 1
a7484 1
=item Utility Changes
d7486 1
a7486 1
=item Performance Enhancements
d7488 3
a7490 1
=item Selected Bug Fixes
d7492 1
a7492 1
=item New or Changed Diagnostics
d7494 1
a7494 1
=item Changed Internals
d7496 4
a7499 1
=item New Tests
d7505 2
d7509 1
a7509 1
=head2 perl585delta - what is new for perl v5.8.5
d7515 1
a7515 1
=item Incompatible Changes
d7517 1
a7517 1
=item Core Enhancements
d7519 1
a7519 1
=item Modules and Pragmata
d7521 1
a7521 1
=item Utility Changes
d7523 1
a7523 1
=over 4
d7525 1
a7525 1
=item Perl's debugger
d7527 1
a7527 1
=item h2ph
d7529 1
a7529 1
=back
d7531 1
a7531 1
=item Installation and Configuration Improvements
d7533 1
a7533 1
=item Selected Bug Fixes
d7535 1
a7535 1
=item New or Changed Diagnostics
d7537 1
a7537 1
=item Changed Internals
d7539 1
a7539 1
=item Known Problems
d7541 1
a7541 1
=item Platform Specific Problems
d7543 1
a7543 1
=item Reporting Bugs
d7545 1
a7545 1
=item SEE ALSO
d7547 1
a7547 1
=back
d7549 1
a7549 1
=head2 perl584delta - what is new for perl v5.8.4
d7551 1
a7551 1
=over 4
d7553 1
a7553 1
=item DESCRIPTION
d7555 1
a7555 1
=item Incompatible Changes
d7557 1
a7557 1
=item Core Enhancements
d7559 1
a7559 1
=over 4
d7561 1
a7561 1
=item Malloc wrapping
d7563 1
a7563 1
=item Unicode Character Database 4.0.1
d7565 1
a7565 1
=item suidperl less insecure
d7567 1
a7567 1
=item format
d7569 1
a7569 1
=back
d7571 1
a7571 1
=item Modules and Pragmata
d7573 1
a7573 1
=over 4
d7575 1
a7575 1
=item Updated modules
d7577 1
a7577 5
Attribute::Handlers, B, Benchmark, CGI, Carp, Cwd, Exporter, File::Find,
IO, IPC::Open3, Local::Maketext, Math::BigFloat, Math::BigInt,
Math::BigRat, MIME::Base64, ODBM_File, POSIX, Shell, Socket, Storable,
Switch, Sys::Syslog, Term::ANSIColor, Time::HiRes, Unicode::UCD, Win32,
base, open, threads, utf8
d7579 1
a7579 1
=back
d7581 1
a7581 1
=item Performance Enhancements
d7583 1
a7583 1
=item Utility Changes
d7585 1
a7585 1
=item Installation and Configuration Improvements
d7587 1
a7587 1
=item Selected Bug Fixes
d7589 1
a7589 1
=item New or Changed Diagnostics
d7591 1
a7591 1
=item Changed Internals
d7593 1
a7593 1
=item Future Directions
d7595 1
a7595 1
=item Platform Specific Problems
d7597 1
a7597 1
=item Reporting Bugs
d7599 1
a7599 1
=item SEE ALSO
d7601 1
a7601 1
=back
d7603 1
a7603 1
=head2 perl583delta - what is new for perl v5.8.3
d7605 1
a7605 1
=over 4
d7607 1
a7607 1
=item DESCRIPTION
d7609 1
a7609 1
=item Incompatible Changes
d7611 1
a7611 1
=item Core Enhancements
d7613 1
a7613 1
=item Modules and Pragmata
d7615 1
a7615 3
CGI, Cwd, Digest, Digest::MD5, Encode, File::Spec, FindBin, List::Util,
Math::BigInt, PodParser, Pod::Perldoc, POSIX, Unicode::Collate,
Unicode::Normalize, Test::Harness, threads::shared
d7617 1
a7617 1
=item Utility Changes
d7619 1
a7619 1
=item New Documentation
d7621 1
a7621 1
=item Installation and Configuration Improvements
d7623 1
a7623 1
=item Selected Bug Fixes
d7625 1
a7625 1
=item New or Changed Diagnostics
d7627 1
a7627 1
=item Changed Internals
d7629 1
a7629 1
=item Configuration and Building
d7631 1
a7631 1
=item Platform Specific Problems
d7633 1
a7633 1
=item Known Problems
d7635 1
a7635 1
=item Future Directions
d7637 1
a7637 1
=item Obituary
d7639 8
a7646 1
=item Reporting Bugs
d7648 1
a7648 1
=item SEE ALSO
d7652 1
a7652 1
=head2 perl582delta - what is new for perl v5.8.2
d7656 1
a7656 1
=item DESCRIPTION
d7658 1
a7658 1
=item Incompatible Changes
d7660 1
a7660 1
=item Core Enhancements
d7662 1
a7662 1
=over 4
d7664 1
a7664 1
=item Hash Randomisation
d7666 1
a7666 1
=item Threading
d7670 1
a7670 1
=item Modules and Pragmata
d7672 4
a7675 1
=over 4
d7677 1
a7677 1
=item Updated Modules And Pragmata
d7679 1
a7679 3
Devel::PPPort, Digest::MD5, I18N::LangTags, libnet, MIME::Base64,
Pod::Perldoc, strict, Tie::Hash, Time::HiRes, Unicode::Collate,
Unicode::Normalize, UNIVERSAL
d7681 1
a7681 1
=back
d7683 1
a7683 1
=item Selected Bug Fixes
d7685 1
a7685 1
=item Changed Internals
d7687 1
a7687 1
=item Platform Specific Problems
d7689 1
a7689 1
=item Future Directions
d7691 1
a7691 1
=item Reporting Bugs
d7693 1
a7693 1
=item SEE ALSO
d7695 1
a7695 1
=back
d7697 1
a7697 1
=head2 perl581delta - what is new for perl v5.8.1
d7699 1
a7699 1
=over 4
d7701 1
a7701 1
=item DESCRIPTION
d7703 1
a7703 1
=item Incompatible Changes
d7705 1
a7705 1
=over 4
d7707 1
a7707 1
=item Hash Randomisation
d7709 1
a7709 1
=item UTF-8 On Filehandles No Longer Activated By Locale
d7711 1
a7711 1
=item Single-number v-strings are no longer v-strings before "=>"
d7713 1
a7713 3
=item (Win32) The -C Switch Has Been Repurposed

=item (Win32) The /d Switch Of cmd.exe
d7717 1
a7717 1
=item Core Enhancements
d7721 1
a7721 1
=item UTF-8 no longer default under UTF-8 locales
d7723 1
a7723 1
=item Unsafe signals again available
d7725 1
a7725 1
=item Tied Arrays with Negative Array Indices
d7727 1
a7727 1
=item local ${$x}
d7729 1
a7729 5
=item Unicode Character Database 4.0.0

=item Deprecation Warnings

=item Miscellaneous Enhancements
d7733 1
a7733 1
=item Modules and Pragmata
d7737 1
a7737 1
=item Updated Modules And Pragmata
d7739 1
a7739 8
base, B::Bytecode, B::Concise, B::Deparse, Benchmark, ByteLoader, bytes,
CGI, charnames, CPAN, Data::Dumper, DB_File, Devel::PPPort, Digest::MD5,
Encode, fields, libnet, Math::BigInt, MIME::Base64, NEXT, Net::Ping,
PerlIO::scalar, podlators, Pod::LaTeX, PodParsers, Pod::Perldoc,
Scalar::Util, Storable, strict, Term::ANSIcolor, Test::Harness, Test::More,
Test::Simple, Text::Balanced, Time::HiRes, threads, threads::shared,
Unicode::Collate, Unicode::Normalize, Win32::GetFolderPath,
Win32::GetOSVersion
d7741 1
a7741 1
=back
d7743 1
a7743 1
=item Utility Changes
d7745 1
a7745 1
=item New Documentation
d7747 1
a7747 1
=item Installation and Configuration Improvements
d7749 1
a7749 1
=over 4
d7751 1
a7751 1
=item Platform-specific enhancements
d7753 1
a7753 1
=back
d7755 1
a7755 1
=item Selected Bug Fixes
d7757 1
a7757 1
=over 4
d7759 1
a7759 1
=item Closures, eval and lexicals
d7761 1
a7761 1
=item Generic fixes
d7763 3
a7765 1
=item Platform-specific fixes
d7771 50
a7820 1
=over 4
d7822 1
a7822 1
=item Changed "A thread exited while %d threads were running"
d7824 1
a7824 1
=item Removed "Attempt to clear a restricted hash"
d7826 1
a7826 1
=item New "Illegal declaration of anonymous subroutine"
d7828 1
a7828 1
=item Changed "Invalid range "%s" in transliteration operator"
d7830 11
a7840 1
=item New "Missing control char name in \c"
d7842 1
a7842 1
=item New "Newline in left-justified string for %s"
d7844 1
a7844 1
=item New "Possible precedence problem on bitwise %c operator"
d7846 1
a7846 1
=item New "Pseudo-hashes are deprecated"
d7848 1
a7848 1
=item New "read() on %s filehandle %s"
d7850 1
a7850 7
=item New "5.005 threads are deprecated"

=item New "Tied variable freed while still in use"

=item New "To%s: illegal mapping '%s'"

=item New "Use of freed value in iteration"
a7853 4
=item Changed Internals

=item New Tests

d7858 1
a7858 1
=item Tied hashes in scalar context
d7860 1
a7860 1
=item Net::Ping 450_service and 510_ping_udp failures
d7862 1
a7862 1
=item B::C
d7864 1
a7864 1
=back
d7866 2
a7867 1
=item Platform Specific Problems
d7869 1
a7869 1
=over 4
d7871 1
a7871 1
=item EBCDIC Platforms
d7873 1
a7873 1
=item Cygwin 1.5 problems
d7875 3
a7877 1
=item HP-UX: HP cc warnings about sendfile and sendpath
d7879 1
a7879 1
=item IRIX: t/uni/tr_7jis.t falsely failing
d7881 1
a7881 1
=item Mac OS X: no usemymalloc
d7883 4
a7886 7
=item Tru64: No threaded builds with GNU cc (gcc)

=item Win32: sysopen, sysread, syswrite

=back

=item Future Directions
d7892 2
d7896 1
a7896 1
=head2 perl58delta - what is new for perl v5.8.0
d7902 1
a7902 1
=item Highlights In 5.8.0
d7908 1
a7908 1
=item Binary Incompatibility
d7910 1
a7910 1
=item 64-bit platforms and malloc
d7912 1
a7912 1
=item AIX Dynaloading
d7914 1
a7914 1
=item Attributes for C<my> variables now handled at run-time
d7916 1
a7916 1
=item Socket Extension Dynamic in VMS
d7918 1
a7918 1
=item IEEE-format Floating Point Default on OpenVMS Alpha
d7920 1
a7920 1
=item New Unicode Semantics (no more C<use utf8>, almost)
d7922 1
a7922 1
=item New Unicode Properties
d7924 1
a7924 1
=item REF(...) Instead Of SCALAR(...)
d7926 1
a7926 1
=item pack/unpack D/F recycled
d7928 1
a7928 1
=item glob() now returns filenames in alphabetical order
d7930 1
a7930 1
=item Deprecations
d7932 1
a7932 1
=back
d7934 1
a7934 1
=item Core Enhancements
d7936 3
a7938 1
=over 4
d7940 1
a7940 1
=item Unicode Overhaul
d7942 1
a7942 1
=item PerlIO is Now The Default
d7944 1
a7944 1
=item ithreads
d7946 1
a7946 1
=item Restricted Hashes
d7948 1
a7948 1
=item Safe Signals
d7950 1
a7950 1
=item Understanding of Numbers
d7952 1
a7952 1
=item Arrays now always interpolate into double-quoted strings [561]
d7954 1
a7954 1
=item Miscellaneous Changes
d7956 1
a7956 1
=back
d7958 1
a7958 1
=item Modules and Pragmata
d7960 1
a7960 1
=over 4
d7962 1
a7962 1
=item New Modules and Pragmata
d7964 1
a7964 1
=item Updated And Improved Modules and Pragmata
d7966 1
a7966 1
=back
d7968 1
a7968 1
=item Utility Changes
d7970 1
a7970 1
=item New Documentation
d7972 1
a7972 1
=item Performance Enhancements
d7974 1
a7974 1
=item Installation and Configuration Improvements
d7976 1
a7976 1
=over 4
d7978 1
a7978 1
=item Generic Improvements
d7980 1
a7980 1
=item New Or Improved Platforms
d7982 1
a7982 1
=back
d7984 1
a7984 1
=item Selected Bug Fixes
d7986 1
a7986 1
=over 4
d7988 1
a7988 1
=item Platform Specific Changes and Fixes
d7990 1
a7990 1
=back
d7992 1
a7992 1
=item New or Changed Diagnostics
d7994 1
a7994 1
=item Changed Internals
d7996 1
a7996 1
=item Security Vulnerability Closed [561]
d7998 1
a7998 1
=item New Tests
d8000 1
a8000 1
=item Known Problems
d8002 1
a8002 1
=over 4
d8004 1
a8004 1
=item The Compiler Suite Is Still Very Experimental
d8006 1
a8006 1
=item Localising Tied Arrays and Hashes Is Broken
d8008 1
a8008 1
=item Building Extensions Can Fail Because Of Largefiles
d8010 1
a8010 1
=item Modifying $_ Inside for(..)
d8012 1
a8012 1
=item mod_perl 1.26 Doesn't Build With Threaded Perl
d8014 1
a8014 1
=item lib/ftmp-security tests warn 'system possibly insecure'
d8016 1
a8016 1
=item libwww-perl (LWP) fails base/date #51
d8018 1
a8018 1
=item PDL failing some tests
d8020 1
a8020 1
=item Perl_get_sv
d8022 3
a8024 1
=item Self-tying Problems
d8026 1
a8026 1
=item ext/threads/t/libc
d8028 4
a8031 1
=item Failure of Thread (5.005-style) tests
d8033 1
a8033 1
=item Timing problems
d8035 1
a8035 1
=item Tied/Magical Array/Hash Elements Do Not Autovivify
d8037 1
a8037 1
=item Unicode in package/class and subroutine names does not work
d8039 17
a8055 1
=back
d8057 1
a8057 1
=item Platform Specific Problems
d8059 2
a8060 1
=over 4
d8062 1
a8062 1
=item AIX
d8064 1
a8064 1
=item Alpha systems with old gccs fail several tests
d8066 1
a8066 1
=item AmigaOS
d8068 1
a8068 1
=item BeOS
d8070 1
a8070 1
=item Cygwin "unable to remap"
d8072 1
a8072 1
=item Cygwin ndbm tests fail on FAT
d8074 1
a8074 1
=item DJGPP Failures
d8076 1
a8076 1
=item FreeBSD built with ithreads coredumps reading large directories
d8078 1
a8078 1
=item FreeBSD Failing locale Test 117 For ISO 8859-15 Locales
d8080 1
a8080 1
=item IRIX fails ext/List/Util/t/shuffle.t or Digest::MD5
d8082 1
a8082 1
=item HP-UX lib/posix Subtest 9 Fails When LP64-Configured
d8084 1
a8084 1
=item Linux with glibc 2.2.5 fails t/op/int subtest #6 with -Duse64bitint
d8086 1
a8086 1
=item Linux With Sfio Fails op/misc Test 48
d8088 1
a8088 1
=item Mac OS X
d8090 1
a8090 1
=item Mac OS X dyld undefined symbols
d8092 1
a8092 1
=item OS/2 Test Failures
d8094 1
a8094 1
=item op/sprintf tests 91, 129, and 130
d8096 1
a8096 1
=item SCO
d8098 1
a8098 1
=item Solaris 2.5
d8100 1
a8100 1
=item Solaris x86 Fails Tests With -Duse64bitint
d8102 1
a8102 1
=item SUPER-UX (NEC SX)
d8104 1
a8104 1
=item Term::ReadKey not working on Win32
d8106 1
a8106 1
=item UNICOS/mk
d8108 1
a8108 1
=item UTS
d8110 1
a8110 1
=item VOS (Stratus)
d8112 1
a8112 1
=item VMS
d8114 1
a8114 1
=item Win32
d8116 2
a8117 1
=item XML::Parser not working
d8119 1
a8119 1
=item z/OS (OS/390)
d8121 1
a8121 1
=item Unicode Support on EBCDIC Still Spotty
d8123 1
a8123 1
=item Seen In Perl 5.7 But Gone Now
d8125 1
a8125 1
=back
d8127 1
a8127 1
=item Reporting Bugs
d8129 1
a8129 1
=item SEE ALSO
d8131 1
a8131 1
=item HISTORY
d8133 1
a8133 1
=back
d8135 1
a8135 1
=head2 perl573delta - what's new for perl v5.7.3
d8137 1
a8137 1
=over 4
d8139 1
a8139 1
=item DESCRIPTION
d8141 5
a8145 1
=item Changes
d8147 1
a8147 1
=item Reporting Bugs
d8149 1
a8149 1
=item SEE ALSO
d8151 1
a8151 1
=item HISTORY
d8153 2
a8154 1
=back
d8156 1
a8156 1
=head2 perl572delta - what's new for perl v5.7.2
d8158 1
a8158 1
=over 4
d8160 1
a8160 1
=item DESCRIPTION
d8162 1
a8162 1
=item Security Vulnerability Closed
d8164 1
a8164 1
=item Incompatible Changes
d8168 1
a8168 1
=item 64-bit platforms and malloc
d8170 1
a8170 1
=item AIX Dynaloading
d8172 1
a8172 1
=item Socket Extension Dynamic in VMS
d8174 1
a8174 1
=item Different Definition of the Unicode Character Classes \p{In...}
d8176 1
a8176 1
=item Deprecations
d8178 1
a8178 1
=back
d8180 2
a8181 1
=item Core Enhancements
d8183 1
a8183 1
=item Modules and Pragmata
d8187 3
a8189 1
=item New Modules and Distributions
d8191 1
a8191 1
=item Updated And Improved Modules and Pragmata
d8193 1
a8193 1
=back
d8195 1
a8195 1
=item Utility Changes
d8197 1
a8197 1
=item New Documentation
d8199 1
a8199 1
=item Installation and Configuration Improvements
d8201 1
a8201 1
=over 4
d8203 1
a8203 1
=item New Or Improved Platforms
d8205 1
a8205 1
=item Generic Improvements
d8209 1
a8209 1
=item Selected Bug Fixes
d8213 7
a8219 1
=item Platform Specific Changes and Fixes
d8223 6
a8228 1
=item New or Changed Diagnostics
d8230 2
a8231 1
=item Source Code Enhancements
d8233 1
a8233 1
=over 4
d8235 25
a8259 1
=item MAGIC constants
d8261 1
a8261 1
=item Better commented code
d8263 1
a8263 1
=item Regex pre-/post-compilation items matched up
d8265 1
a8265 1
=item gcc -Wall
d8269 1
a8269 3
=item New Tests

=item Known Problems
d8273 1
a8273 1
=item AIX
d8275 1
a8275 1
=item Amiga Perl Invoking Mystery
d8277 1
a8277 1
=item lib/ftmp-security tests warn 'system possibly insecure'
d8279 1
a8279 1
=item Cygwin intermittent failures of lib/Memoize/t/expire_file 11 and 12
d8281 1
a8281 1
=item HP-UX lib/io_multihomed Fails When LP64-Configured
d8283 1
a8283 1
=item  HP-UX lib/posix Subtest 9 Fails When LP64-Configured
d8285 2
a8286 1
=item Linux With Sfio Fails op/misc Test 48
d8288 1
a8288 1
=item OS/390
d8290 1
a8290 1
=item op/sprintf tests 129 and 130
d8292 1
a8292 1
=item  Failure of Thread tests
d8294 1
a8294 1
=item UNICOS
d8296 1
a8296 1
=item UTS
d8298 1
a8298 1
=item VMS
d8300 1
a8300 13
=item Win32

=item Localising a Tied Variable Leaks Memory

=item Self-tying of Arrays and Hashes Is Forbidden

=item Variable Attributes are not Currently Usable for Tieing

=item Building Extensions Can Fail Because Of Largefiles

=item The Compiler Suite Is Still Experimental

=item The Long Double Support is Still Experimental
d8304 1
a8304 1
=item Reporting Bugs
d8306 1
a8306 1
=item SEE ALSO
d8308 1
a8308 1
=item HISTORY
d8312 1
a8312 1
=head2 perl571delta - what's new for perl v5.7.1
d8318 1
a8318 1
=item Security Vulnerability Closed
d8320 1
a8320 1
=item Incompatible Changes
d8322 1
a8322 1
=item Core Enhancements
d8324 1
a8324 1
=over 4
d8326 1
a8326 1
=item AUTOLOAD Is Now Lvaluable
d8328 1
a8328 1
=item PerlIO is Now The Default
d8330 1
a8330 1
=item Signals Are Now Safe
d8332 1
a8332 1
=back
d8334 1
a8334 1
=item Modules and Pragmata
d8336 1
a8336 1
=over 4
d8338 1
a8338 1
=item New Modules
d8340 1
a8340 1
=item Updated And Improved Modules and Pragmata
d8342 1
a8342 1
=back
d8344 1
a8344 1
=item Performance Enhancements
d8346 1
a8346 1
=item Utility Changes
d8348 1
a8348 1
=item New Documentation
d8352 3
a8354 1
=item perlclib
d8356 1
a8356 1
=item perliol
d8358 1
a8358 1
=item README.aix
d8360 1
a8360 1
=item README.bs2000
d8362 1
a8362 1
=item README.macos
d8364 1
a8364 1
=item README.mpeix
d8366 1
a8366 1
=item README.solaris
d8368 1
a8368 1
=item README.vos
d8370 1
a8370 1
=item Porting/repository.pod
d8374 3
a8376 1
=item Installation and Configuration Improvements
d8380 3
a8382 1
=item New Or Improved Platforms
d8384 1
a8384 1
=item Generic Improvements
d8386 1
a8386 3
d_cmsghdr, d_fcntl_can_lock, d_fsync, d_getitimer, d_getpagsz, d_msghdr_s,
need_va_copy, d_readv, d_recvmsg, d_sendmsg, sig_size, d_sockatmark,
d_strtoq, d_u32align, d_ualarm, d_usleep
d8390 1
a8390 1
=item Selected Bug Fixes
d8394 1
a8394 1
=item Platform Specific Changes and Fixes
d8396 1
a8396 1
=back
d8398 1
a8398 1
=item New or Changed Diagnostics
d8400 1
a8400 1
=item Changed Internals
d8402 1
a8402 1
=item New Tests
d8404 1
a8404 1
=item Known Problems
d8406 1
a8406 1
=over 4
d8408 1
a8408 1
=item AIX vac 5.0.0.0 May Produce Buggy Code For Perl
d8410 1
a8410 1
=item lib/ftmp-security tests warn 'system possibly insecure'
d8412 1
a8412 1
=item lib/io_multihomed Fails In LP64-Configured HP-UX
d8414 1
a8414 1
=item Test lib/posix Subtest 9 Fails In LP64-Configured HP-UX
d8416 1
a8416 1
=item lib/b test 19
d8418 1
a8418 1
=item Linux With Sfio Fails op/misc Test 48
d8420 1
a8420 1
=item sigaction test 13 in VMS
d8422 1
a8422 1
=item sprintf tests 129 and 130
d8424 1
a8424 1
=item  Failure of Thread tests
d8426 1
a8426 1
=item Localising a Tied Variable Leaks Memory
d8428 1
a8428 1
=item Self-tying of Arrays and Hashes Is Forbidden
d8430 1
a8430 1
=item Building Extensions Can Fail Because Of Largefiles
d8432 1
a8432 1
=item The Compiler Suite Is Still Experimental
d8434 1
a8434 1
=back
d8436 1
a8436 1
=item Reporting Bugs
d8438 1
a8438 1
=item SEE ALSO
d8440 1
a8440 1
=item HISTORY
d8444 1
a8444 1
=head2 perl570delta - what's new for perl v5.7.0
d8446 1
a8446 1
=over 4
d8448 1
a8448 1
=item DESCRIPTION
d8450 1
a8450 1
=item Security Vulnerability Closed
d8452 1
a8452 1
=item Incompatible Changes
d8454 1
a8454 1
=item Core Enhancements
d8456 1
a8456 1
=item Modules and Pragmata
d8460 3
a8462 1
=item New Modules
d8464 1
a8464 1
=item Updated And Improved Modules and Pragmata
d8466 1
a8466 1
=back
d8468 1
a8468 1
=item Utility Changes
d8470 1
a8470 1
=item New Documentation
d8472 1
a8472 1
=item Performance Enhancements
d8474 1
a8474 1
=item Installation and Configuration Improvements
d8476 1
a8476 1
=over 4
d8478 1
a8478 1
=item Generic Improvements
d8482 3
a8484 1
=item Selected Bug Fixes
d8488 1
a8488 1
=item Platform Specific Changes and Fixes
d8492 1
a8492 1
=item New or Changed Diagnostics
d8494 1
a8494 1
=item Changed Internals
d8496 1
a8496 1
=item Known Problems
d8500 1
a8500 1
=item Unicode Support Still Far From Perfect
d8502 1
a8502 1
=item EBCDIC Still A Lost Platform
d8504 1
a8504 1
=item Building Extensions Can Fail Because Of Largefiles
d8506 1
a8506 1
=item ftmp-security tests warn 'system possibly insecure'
d8508 2
a8509 1
=item Test lib/posix Subtest 9 Fails In LP64-Configured HP-UX
d8511 1
a8511 1
=item Long Doubles Still Don't Work In Solaris
d8513 2
a8514 1
=item Linux With Sfio Fails op/misc Test 48
d8516 1
a8516 1
=item Storable tests fail in some platforms
d8518 1
a8518 1
=item Threads Are Still Experimental
d8520 1
a8520 1
=item The Compiler Suite Is Still Experimental
d8524 1
a8524 1
=item Reporting Bugs
d8526 1
a8526 1
=item SEE ALSO
d8528 1
a8528 1
=item HISTORY
d8530 1
a8530 3
=back

=head2 perl561delta - what's new for perl v5.6.x
d8534 1
a8534 1
=item DESCRIPTION
d8536 1
a8536 1
=item Summary of changes between 5.6.0 and 5.6.1
d8538 1
a8538 1
=over 4
d8540 1
a8540 1
=item Security Issues
d8542 1
a8542 1
=item Core bug fixes
d8544 1
a8544 7
C<UNIVERSAL::isa()>, Memory leaks, Numeric conversions, qw(a\\b), caller(),
Bugs in regular expressions, "slurp" mode, Autovivification of symbolic
references to special variables, Lexical warnings, Spurious warnings and
errors, glob(), Tainting, sort(), #line directives, Subroutine prototypes,
map(), Debugger, PERL5OPT, chop(), Unicode support, 64-bit support,
Compiler, Lvalue subroutines, IO::Socket, File::Find, xsubpp, C<no
Module;>, Tests
d8546 1
a8546 1
=item Core features
d8548 1
a8548 1
=item Configuration issues
d8550 2
a8551 1
=item Documentation
d8553 1
a8553 1
=item Bundled modules
d8555 3
a8557 4
B::Concise, File::Temp, Pod::LaTeX, Pod::Text::Overstrike, CGI, CPAN,
Class::Struct, DB_File, Devel::Peek, File::Find, Getopt::Long, IO::Poll,
IPC::Open3, Math::BigFloat, Math::Complex, Net::Ping, Opcode, Pod::Parser,
Pod::Text, SDBM_File, Sys::Syslog, Tie::RefHash, Tie::SubstrHash
d8559 1
a8559 1
=item Platform-specific improvements
d8561 1
a8561 1
NCR MP-RAS, NonStop-UX
d8565 1
a8565 1
=item Core Enhancements
d8569 1
a8569 1
=item Interpreter cloning, threads, and concurrency
d8571 1
a8571 1
=item Lexically scoped warning categories
d8573 9
a8581 1
=item Unicode and UTF-8 support
d8583 1
a8583 1
=item Support for interpolating named characters
d8585 1
a8585 1
=item "our" declarations
d8587 1
a8587 1
=item Support for strings represented as a vector of ordinals
d8589 1
a8589 1
=item Improved Perl version numbering system
d8591 1
a8591 1
=item New syntax for declaring subroutine attributes
d8593 2
a8594 1
=item File and directory handles can be autovivified
d8596 1
a8596 1
=item open() with more than two arguments
d8598 1
a8598 1
=item 64-bit support
d8600 1
a8600 1
=item Large file support
d8602 1
a8602 1
=item Long doubles
d8604 1
a8604 1
=item "more bits"
d8606 2
a8607 1
=item Enhanced support for sort() subroutines
d8609 1
a8609 1
=item C<sort $coderef @@foo> allowed
d8611 1
a8611 1
=item File globbing implemented internally
d8613 1
a8613 1
=item Support for CHECK blocks
d8615 1
a8615 1
=item POSIX character class syntax [: :] supported
d8617 1
a8617 1
=item Better pseudo-random number generator
d8619 1
a8619 1
=item Improved C<qw//> operator
d8621 1
a8621 1
=item Better worst-case behavior of hashes
d8623 1
a8623 1
=item pack() format 'Z' supported
d8625 1
a8625 1
=item pack() format modifier '!' supported
d8627 1
a8627 1
=item pack() and unpack() support counted strings
d8629 1
a8629 1
=item Comments in pack() templates
d8631 1
a8631 1
=item Weak references
d8633 1
a8633 1
=item Binary numbers supported
d8635 1
a8635 1
=item Lvalue subroutines
d8637 1
a8637 1
=item Some arrows may be omitted in calls through references
d8639 1
a8639 1
=item Boolean assignment operators are legal lvalues
d8641 1
a8641 1
=item exists() is supported on subroutine names
d8643 1
a8643 1
=item exists() and delete() are supported on array elements
d8645 1
a8645 1
=item Pseudo-hashes work better
d8647 1
a8647 1
=item Automatic flushing of output buffers
d8649 1
a8649 1
=item Better diagnostics on meaningless filehandle operations
d8651 1
a8651 1
=item Where possible, buffered data discarded from duped input filehandle
d8653 1
a8653 1
=item eof() has the same old magic as <>
d8655 1
a8655 1
=item binmode() can be used to set :crlf and :raw modes
d8657 1
a8657 1
=item C<-T> filetest recognizes UTF-8 encoded files as "text"
d8659 1
a8659 1
=item system(), backticks and pipe open now reflect exec() failure
d8661 1
a8661 1
=item Improved diagnostics
d8663 1
a8663 1
=item Diagnostics follow STDERR
d8665 1
a8665 1
=item More consistent close-on-exec behavior
d8667 1
a8667 1
=item syswrite() ease-of-use
d8669 1
a8669 1
=item Better syntax checks on parenthesized unary operators
d8671 1
a8671 1
=item Bit operators support full native integer width
d8673 1
a8673 1
=item Improved security features
d8675 1
a8675 1
=item More functional bareword prototype (*)
d8677 1
a8677 1
=item C<require> and C<do> may be overridden
d8679 1
a8679 1
=item $^X variables may now have names longer than one character
d8681 1
a8681 1
=item New variable $^C reflects C<-c> switch
d8683 1
a8683 1
=item New variable $^V contains Perl version as a string
d8685 1
a8685 1
=item Optional Y2K warnings
d8687 1
a8687 1
=item Arrays now always interpolate into double-quoted strings
d8689 1
a8689 1
=item @@- and @@+ provide starting/ending offsets of regex submatches
d8693 1
a8693 1
=item Modules and Pragmata
d8697 3
a8699 1
=item Modules
d8701 1
a8701 8
attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters
d8703 1
a8703 1
=item Pragmata
d8705 1
a8705 1
=back
d8707 1
a8707 1
=item Utility Changes
d8709 1
a8709 1
=over 4
d8711 1
a8711 1
=item dprofpp
d8713 1
a8713 1
=item find2perl
d8715 1
a8715 1
=item h2xs
d8717 1
a8717 1
=item perlcc
d8719 1
a8719 1
=item perldoc
d8721 1
a8721 1
=item The Perl Debugger
d8725 1
a8725 1
=item Improved Documentation
d8727 1
a8727 4
perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod
d8729 1
a8729 1
=item Performance enhancements
d8733 3
a8735 1
=item Simple sort() using { $a <=> $b } and the like are optimized
d8737 1
a8737 1
=item Optimized assignments to lexical variables
d8739 1
a8739 1
=item Faster subroutine calls
d8741 1
a8741 1
=item delete(), each(), values() and hash iteration are faster
d8745 6
a8750 1
=item Installation and Configuration Improvements
d8754 13
a8766 1
=item -Dusethreads means something different
d8768 1
a8768 1
=item New Configure flags
d8770 1
a8770 1
=item Threadedness and 64-bitness now more daring
d8772 1
a8772 1
=item Long Doubles
d8774 1
a8774 1
=item -Dusemorebits
d8776 1
a8776 1
=item -Duselargefiles
d8778 1
a8778 1
=item installusrbinperl
d8780 1
a8780 1
=item SOCKS support
d8782 1
a8782 1
=item C<-A> flag
d8784 1
a8784 1
=item Enhanced Installation Directories
d8786 1
a8786 1
=item gcc automatically tried if 'cc' does not seem to be working
d8788 1
a8788 1
=back
d8790 1
a8790 1
=item Platform specific changes
d8792 1
a8792 1
=over 4
d8794 1
a8794 1
=item Supported platforms
d8796 1
a8796 1
=item DOS
d8798 1
a8798 1
=item OS390 (OpenEdition MVS)
d8800 1
a8800 1
=item VMS
d8802 1
a8802 1
=item Win32
d8806 1
a8806 1
=item Significant bug fixes
d8810 1
a8810 1
=item <HANDLE> on empty files
d8812 1
a8812 1
=item C<eval '...'> improvements
d8814 1
a8814 1
=item All compilation errors are true errors
d8816 1
a8816 1
=item Implicitly closed filehandles are safer
d8818 1
a8818 1
=item Behavior of list slices is more consistent
d8820 1
a8820 1
=item C<(\$)> prototype and C<$foo{a}>
d8822 1
a8822 1
=item C<goto &sub> and AUTOLOAD
d8824 1
a8824 1
=item C<-bareword> allowed under C<use integer>
d8826 1
a8826 1
=item Failures in DESTROY()
d8828 1
a8828 1
=item Locale bugs fixed
d8830 1
a8830 1
=item Memory leaks
d8832 1
a8832 1
=item Spurious subroutine stubs after failed subroutine calls
d8834 1
a8834 1
=item Taint failures under C<-U>
d8836 1
a8836 1
=item END blocks and the C<-c> switch
d8838 1
a8838 1
=item Potential to leak DATA filehandles
d8840 1
a8840 1
=back
d8842 3
a8844 1
=item New or Changed Diagnostics
d8846 1
a8846 50
"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible unintended interpolation of %s in string,
Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME : ATTRS"
instead, Premature end of script headers, Repeat count in pack overflows,
Repeat count in unpack overflows, realloc() of freed memory ignored,
Reference is already weak, setpgrp can't take arguments, Strange *+?{} on
zero-length expression, switching effective %s is not implemented, This
Perl can't reset CRTL environ elements (%s), This Perl can't set CRTL
environ elements (%s=%s), Too late to run %s block, Unknown open() mode
'%s', Unknown process %x sent message to prime_env_iter: %s, Unrecognized
escape \\%c passed through, Unterminated attribute parameter in attribute
list, Unterminated attribute list, Unterminated attribute parameter in
subroutine attribute list, Unterminated subroutine attribute list, Value of
CLI symbol "%s" too long, Version number must be a constant number
d8848 1
a8848 1
=item New tests
d8850 1
a8850 1
=item Incompatible Changes
d8854 1
a8854 1
=item Perl Source Incompatibilities
d8856 1
a8856 11
CHECK is a new keyword, Treatment of list slices of undef has changed,
Format of $English::PERL_VERSION is different, Literals of the form
C<1.2.3> parse differently, Possibly changed pseudo-random number
generator, Hashing function for hash keys has changed, C<undef> fails on
read only values, Close-on-exec bit may be set on pipe and socket handles,
Writing C<"$$1"> to mean C<"${$}1"> is unsupported, delete(), each(),
values() and C<\(%h)>, vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
Text of some diagnostic output has changed, C<%@@> has been removed,
Parenthesized not() behaves like a list operator, Semantics of bareword
prototype C<(*)> have changed, Semantics of bit operators may have changed
on 64-bit platforms, More builtins taint their results
d8858 1
a8858 1
=item C Source Incompatibilities
d8860 1
a8860 1
C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>
d8862 1
a8862 1
=item Compatible C Source API Changes
d8864 1
a8864 1
C<PATCHLEVEL> is now C<PERL_VERSION>
d8866 2
a8867 1
=item Binary Incompatibilities
d8869 1
a8869 1
=back
d8871 1
a8871 1
=item Known Problems
d8875 3
a8877 1
=item Localizing a tied hash element may leak memory
d8879 1
a8879 1
=item Known test failures
d8881 1
a8881 1
=item EBCDIC platforms not fully supported
d8883 1
a8883 1
=item UNICOS/mk CC failures during Configure run
d8885 1
a8885 1
=item Arrow operator and arrays
d8887 1
a8887 1
=item Experimental features
d8889 1
a8889 3
Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression code constructs:
d8893 3
a8895 1
=item Obsolete Diagnostics
d8897 1
a8897 4
Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, In string, @@%s now must be written as
\@@%s, Probable precedence problem on %s, regexp too big, Use of "$$<digit>"
to mean "${$}<digit>" is deprecated
d8899 1
a8899 1
=item Reporting Bugs
d8901 1
a8901 1
=item SEE ALSO
d8903 1
a8903 1
=item HISTORY
d8907 1
a8907 1
=head2 perl56delta - what's new for perl v5.6.0
d8911 2
a8914 2
=item Core Enhancements

d8917 1
a8917 1
=item Interpreter cloning, threads, and concurrency
d8919 1
a8919 1
=item Lexically scoped warning categories
d8921 1
a8921 1
=item Unicode and UTF-8 support
d8923 1
a8923 1
=item Support for interpolating named characters
d8925 1
a8925 1
=item "our" declarations
d8927 1
a8927 1
=item Support for strings represented as a vector of ordinals
d8929 1
a8929 1
=item Improved Perl version numbering system
d8931 1
a8931 1
=item New syntax for declaring subroutine attributes
d8933 1
a8933 1
=item File and directory handles can be autovivified
d8935 1
a8935 1
=item open() with more than two arguments
d8937 1
a8937 1
=item 64-bit support
d8939 1
a8939 1
=item Large file support
d8941 1
a8941 1
=item Long doubles
d8943 1
a8943 1
=item "more bits"
d8945 1
a8945 1
=item Enhanced support for sort() subroutines
d8947 1
a8947 1
=item C<sort $coderef @@foo> allowed
d8949 1
a8949 1
=item File globbing implemented internally
d8951 1
a8951 1
=item Support for CHECK blocks
d8953 1
a8953 1
=item POSIX character class syntax [: :] supported
d8955 1
a8955 1
=item Better pseudo-random number generator
d8957 1
a8957 1
=item Improved C<qw//> operator
d8959 1
a8959 1
=item Better worst-case behavior of hashes
d8961 1
a8961 1
=item pack() format 'Z' supported
d8963 1
a8963 1
=item pack() format modifier '!' supported
d8965 1
a8965 1
=item pack() and unpack() support counted strings
d8967 1
a8967 1
=item Comments in pack() templates
d8969 1
a8969 1
=item Weak references
d8971 1
a8971 1
=item Binary numbers supported
d8973 1
a8973 1
=item Lvalue subroutines
d8975 1
a8975 1
=item Some arrows may be omitted in calls through references
d8977 1
a8977 1
=item Boolean assignment operators are legal lvalues
d8979 2
a8980 1
=item exists() is supported on subroutine names
d8982 1
a8982 1
=item exists() and delete() are supported on array elements
d8984 1
a8984 1
=item Pseudo-hashes work better
d8986 1
a8986 1
=item Automatic flushing of output buffers
d8988 1
a8988 1
=item Better diagnostics on meaningless filehandle operations
d8990 1
a8990 1
=item Where possible, buffered data discarded from duped input filehandle
d8992 1
a8992 1
=item eof() has the same old magic as <>
d8994 1
a8994 1
=item binmode() can be used to set :crlf and :raw modes
d8996 1
a8996 1
=item C<-T> filetest recognizes UTF-8 encoded files as "text"
d8998 1
a8998 1
=item system(), backticks and pipe open now reflect exec() failure
d9000 1
a9000 1
=item Improved diagnostics
d9002 1
a9002 1
=item Diagnostics follow STDERR
d9004 1
a9004 1
=item More consistent close-on-exec behavior
d9006 1
a9006 1
=item syswrite() ease-of-use
d9008 1
a9008 1
=item Better syntax checks on parenthesized unary operators
d9010 1
a9010 1
=item Bit operators support full native integer width
d9012 1
a9012 1
=item Improved security features
d9014 1
a9014 1
=item More functional bareword prototype (*)
d9016 1
a9016 1
=item C<require> and C<do> may be overridden
d9018 1
a9018 1
=item $^X variables may now have names longer than one character
d9020 1
a9020 9
=item New variable $^C reflects C<-c> switch

=item New variable $^V contains Perl version as a string

=item Optional Y2K warnings

=item Arrays now always interpolate into double-quoted strings

=item @@- and @@+ provide starting/ending offsets of regex matches
d9024 1
a9024 1
=item Modules and Pragmata
d9026 1
a9026 1
=over 4
d9028 1
a9028 1
=item Modules
d9030 1
a9030 8
attributes, B, Benchmark, ByteLoader, constant, charnames, Data::Dumper,
DB, DB_File, Devel::DProf, Devel::Peek, Dumpvalue, DynaLoader, English,
Env, Fcntl, File::Compare, File::Find, File::Glob, File::Spec,
File::Spec::Functions, Getopt::Long, IO, JPL, lib, Math::BigInt,
Math::Complex, Math::Trig, Pod::Parser, Pod::InputObjects, Pod::Checker,
podchecker, Pod::ParseUtils, Pod::Find, Pod::Select, podselect, Pod::Usage,
pod2usage, Pod::Text and Pod::Man, SDBM_File, Sys::Syslog, Sys::Hostname,
Term::ANSIColor, Time::Local, Win32, XSLoader, DBM Filters
d9032 1
a9032 1
=item Pragmata
d9036 1
a9036 1
=item Utility Changes
d9040 1
a9040 1
=item dprofpp
d9042 1
a9042 1
=item find2perl
d9044 2
a9045 1
=item h2xs
d9047 1
a9047 1
=item perlcc
d9049 1
a9049 3
=item perldoc

=item The Perl Debugger
d9053 1
a9053 8
=item Improved Documentation

perlapi.pod, perlboot.pod, perlcompile.pod, perldbmfilter.pod,
perldebug.pod, perldebguts.pod, perlfork.pod, perlfilter.pod, perlhack.pod,
perlintern.pod, perllexwarn.pod, perlnumber.pod, perlopentut.pod,
perlreftut.pod, perltootc.pod, perltodo.pod, perlunicode.pod

=item Performance enhancements
d9057 1
a9057 7
=item Simple sort() using { $a <=> $b } and the like are optimized

=item Optimized assignments to lexical variables

=item Faster subroutine calls

=item delete(), each(), values() and hash iteration are faster
a9060 2
=item Installation and Configuration Improvements

d9063 1
a9063 1
=item -Dusethreads means something different
d9065 1
a9065 1
=item New Configure flags
d9067 1
a9067 1
=item Threadedness and 64-bitness now more daring
d9069 1
a9069 1
=item Long Doubles
d9071 1
a9071 1
=item -Dusemorebits
d9073 1
a9073 1
=item -Duselargefiles
d9075 1
a9075 1
=item installusrbinperl
d9077 1
a9077 5
=item SOCKS support

=item C<-A> flag

=item Enhanced Installation Directories
d9081 1
a9081 1
=item Platform specific changes
d9085 3
a9087 1
=item Supported platforms
d9089 2
a9090 1
=item DOS
d9092 2
a9093 1
=item OS390 (OpenEdition MVS)
d9095 1
a9095 1
=item VMS
d9097 1
a9097 1
=item Win32
d9101 1
a9101 1
=item Significant bug fixes
d9105 1
a9105 1
=item <HANDLE> on empty files
d9107 1
a9107 1
=item C<eval '...'> improvements
d9109 1
a9109 1
=item All compilation errors are true errors
d9111 5
a9115 1
=item Implicitly closed filehandles are safer
d9117 1
a9117 1
=item Behavior of list slices is more consistent
d9119 1
a9119 1
=item C<(\$)> prototype and C<$foo{a}>
d9121 1
a9121 1
=item C<goto &sub> and AUTOLOAD
d9123 1
a9123 1
=item C<-bareword> allowed under C<use integer>
d9125 1
a9125 1
=item Failures in DESTROY()
d9127 1
a9127 1
=item Locale bugs fixed
d9129 1
a9129 1
=item Memory leaks
d9131 1
a9131 1
=item Spurious subroutine stubs after failed subroutine calls
d9133 1
a9133 1
=item Taint failures under C<-U>
d9135 1
a9135 1
=item END blocks and the C<-c> switch
d9137 1
a9137 1
=item Potential to leak DATA filehandles
d9141 1
a9141 1
=item New or Changed Diagnostics
d9143 1
a9143 50
"%s" variable %s masks earlier declaration in same %s, "my sub" not yet
implemented, "our" variable %s redeclared, '!' allowed only after types %s,
/ cannot take a count, / must be followed by a, A or Z, / must be followed
by a*, A* or Z*, / must follow a numeric type, /%s/: Unrecognized escape
\\%c passed through, /%s/: Unrecognized escape \\%c in character class
passed through, /%s/ should probably be written as "%s", %s() called too
early to check prototype, %s argument is not a HASH or ARRAY element, %s
argument is not a HASH or ARRAY element or slice, %s argument is not a
subroutine name, %s package attribute may clash with future reserved word:
%s, (in cleanup) %s, <> should be quotes, Attempt to join self, Bad evalled
substitution pattern, Bad realloc() ignored, Bareword found in conditional,
Binary number > 0b11111111111111111111111111111111 non-portable, Bit vector
size > 32 non-portable, Buffer overflow in prime_env_iter: %s, Can't check
filesystem of script "%s", Can't declare class for non-scalar %s in "%s",
Can't declare %s in "%s", Can't ignore signal CHLD, forcing to default,
Can't modify non-lvalue subroutine call, Can't read CRTL environ, Can't
remove %s: %s, skipping file, Can't return %s from lvalue subroutine, Can't
weaken a nonreference, Character class [:%s:] unknown, Character class
syntax [%s] belongs inside character classes, Constant is not %s reference,
constant(%s): %s, CORE::%s is not a keyword, defined(@@array) is deprecated,
defined(%hash) is deprecated, Did not produce a valid header, (Did you mean
"local" instead of "our"?), Document contains no data, entering effective
%s failed, false [] range "%s" in regexp, Filehandle %s opened only for
output, flock() on closed filehandle %s, Global symbol "%s" requires
explicit package name, Hexadecimal number > 0xffffffff non-portable,
Ill-formed CRTL environ value "%s", Ill-formed message in prime_env_iter:
|%s|, Illegal binary digit %s, Illegal binary digit %s ignored, Illegal
number of bits in vec, Integer overflow in %s number, Invalid %s attribute:
%s, Invalid %s attributes: %s, invalid [] range "%s" in regexp, Invalid
separator character %s in attribute list, Invalid separator character %s in
subroutine attribute list, leaving effective %s failed, Lvalue subs
returning %s not implemented yet, Method %s not permitted, Missing
%sbrace%s on \N{}, Missing command in piped open, Missing name in "my sub",
No %s specified for -%c, No package name allowed for variable %s in "our",
No space allowed after -%c, no UTC offset information; assuming local time
is UTC, Octal number > 037777777777 non-portable, panic: del_backref,
panic: kid popen errno read, panic: magic_killbackrefs, Parentheses missing
around "%s" list, Possible unintended interpolation of %s in string,
Possible Y2K bug: %s, pragma "attrs" is deprecated, use "sub NAME : ATTRS"
instead, Premature end of script headers, Repeat count in pack overflows,
Repeat count in unpack overflows, realloc() of freed memory ignored,
Reference is already weak, setpgrp can't take arguments, Strange *+?{} on
zero-length expression, switching effective %s is not implemented, This
Perl can't reset CRTL environ elements (%s), This Perl can't set CRTL
environ elements (%s=%s), Too late to run %s block, Unknown open() mode
'%s', Unknown process %x sent message to prime_env_iter: %s, Unrecognized
escape \\%c passed through, Unterminated attribute parameter in attribute
list, Unterminated attribute list, Unterminated attribute parameter in
subroutine attribute list, Unterminated subroutine attribute list, Value of
CLI symbol "%s" too long, Version number must be a constant number
d9145 1
a9145 1
=item New tests
d9147 1
a9147 1
=item Incompatible Changes
d9149 1
a9149 1
=over 4
d9151 1
a9151 1
=item Perl Source Incompatibilities
d9153 1
a9153 11
CHECK is a new keyword, Treatment of list slices of undef has changed,
Format of $English::PERL_VERSION is different, Literals of the form
C<1.2.3> parse differently, Possibly changed pseudo-random number
generator, Hashing function for hash keys has changed, C<undef> fails on
read only values, Close-on-exec bit may be set on pipe and socket handles,
Writing C<"$$1"> to mean C<"${$}1"> is unsupported, delete(), each(),
values() and C<\(%h)>, vec(EXPR,OFFSET,BITS) enforces powers-of-two BITS,
Text of some diagnostic output has changed, C<%@@> has been removed,
Parenthesized not() behaves like a list operator, Semantics of bareword
prototype C<(*)> have changed, Semantics of bit operators may have changed
on 64-bit platforms, More builtins taint their results
d9155 1
a9155 1
=item C Source Incompatibilities
d9157 1
a9157 1
C<PERL_POLLUTE>, C<PERL_IMPLICIT_CONTEXT>, C<PERL_POLLUTE_MALLOC>
d9159 2
a9160 1
=item Compatible C Source API Changes
d9162 1
a9162 1
C<PATCHLEVEL> is now C<PERL_VERSION>
d9164 1
a9164 1
=item Binary Incompatibilities
d9168 3
a9170 1
=item Known Problems
d9174 2
a9175 1
=item Thread test failures
d9177 1
a9177 1
=item EBCDIC platforms not supported
d9179 1
a9179 1
=item In 64-bit HP-UX the lib/io_multihomed test may hang
d9181 1
a9181 1
=item NEXTSTEP 3.3 POSIX test failure
d9183 1
a9183 2
=item Tru64 (aka Digital UNIX, aka DEC OSF/1) lib/sdbm test failure with
gcc
d9185 1
a9185 1
=item UNICOS/mk CC failures during Configure run
d9187 1
a9187 1
=item Arrow operator and arrays
d9189 1
a9189 1
=item Experimental features
d9191 1
a9191 3
Threads, Unicode, 64-bit support, Lvalue subroutines, Weak references, The
pseudo-hash data type, The Compiler suite, Internal implementation of file
globbing, The DB module, The regular expression code constructs:
d9193 1
a9193 1
=back
d9195 1
a9195 1
=item Obsolete Diagnostics
d9197 1
a9197 10
Character class syntax [: :] is reserved for future extensions, Ill-formed
logical name |%s| in prime_env_iter, In string, @@%s now must be written as
\@@%s, Probable precedence problem on %s, regexp too big, Use of "$$<digit>"
to mean "${$}<digit>" is deprecated

=item Reporting Bugs

=item SEE ALSO

=item HISTORY
d9201 1
a9201 1
=head2 perl5005delta - what's new for perl5.005
d9205 1
a9205 1
=item DESCRIPTION
d9207 1
a9207 1
=item About the new versioning system
d9209 1
a9209 1
=item Incompatible Changes
d9211 1
a9211 1
=over 4
d9213 1
a9213 1
=item WARNING:	This version is not binary compatible with Perl 5.004.
d9215 12
a9226 1
=item Default installation structure has changed
d9228 1
a9228 1
=item Perl Source Compatibility
d9230 6
a9235 1
=item C Source Compatibility
d9237 2
a9238 1
=item Binary Compatibility
d9240 1
a9240 1
=item Security fixes may affect compatibility
d9242 1
a9242 1
=item Relaxed new mandatory warnings introduced in 5.004
d9244 4
a9247 1
=item Licensing
d9251 1
a9251 1
=item Core Changes
d9255 1
a9255 1
=item Threads
d9257 1
a9257 1
=item Compiler
d9259 1
a9259 1
=item Regular Expressions
d9261 1
a9261 3
Many new and improved optimizations, Many bug fixes, New regular expression
constructs, New operator for precompiled regular expressions, Other
improvements, Incompatible changes
d9263 1
a9263 1
=item	Improved malloc()
d9265 1
a9265 1
=item Quicksort is internally implemented
d9267 1
a9267 1
=item Reliable signals
d9269 1
a9269 1
=item Reliable stack pointers
d9271 1
a9271 1
=item More generous treatment of carriage returns
d9273 1
a9273 1
=item Memory leaks
d9275 1
a9275 1
=item Better support for multiple interpreters
d9277 1
a9277 1
=item Behavior of local() on array and hash elements is now well-defined
d9279 1
a9279 1
=item C<%!> is transparently tied to the L<Errno> module
d9281 1
a9281 1
=item Pseudo-hashes are supported
d9283 1
a9283 1
=item C<EXPR foreach EXPR> is supported
d9285 1
a9285 1
=item Keywords can be globally overridden
d9287 1
a9287 1
=item C<$^E> is meaningful on Win32
d9289 1
a9289 1
=item C<foreach (1..1000000)> optimized
d9291 1
a9291 1
=item C<Foo::> can be used as implicitly quoted package name
d9293 1
a9293 1
=item C<exists $Foo::{Bar::}> tests existence of a package
d9295 1
a9295 1
=item Better locale support
d9297 1
a9297 1
=item Experimental support for 64-bit platforms
d9299 1
a9299 1
=item prototype() returns useful results on builtins
d9301 2
a9302 1
=item Extended support for exception handling
d9304 1
a9304 1
=item Re-blessing in DESTROY() supported for chaining DESTROY() methods
d9306 1
a9306 1
=item All C<printf> format conversions are handled internally
d9308 1
a9308 1
=item New C<INIT> keyword
d9310 1
a9310 1
=item New C<lock> keyword
d9312 1
a9312 1
=item New C<qr//> operator
d9314 1
a9314 1
=item C<our> is now a reserved word
d9316 1
a9316 1
=item Tied arrays are now fully supported
d9318 1
a9318 1
=item Tied handles support is better
d9320 1
a9320 1
=item 4th argument to substr
d9322 1
a9322 1
=item Negative LENGTH argument to splice
d9324 1
a9324 1
=item Magic lvalues are now more magical
d9326 1
a9326 1
=item <> now reads in records
d9330 2
a9331 1
=item Supported Platforms
d9335 3
a9337 1
=item New Platforms
d9339 1
a9339 1
=item Changes in existing support
d9341 1
a9341 1
=back
d9343 1
a9343 1
=item Modules and Pragmata
d9345 1
a9345 1
=over 4
d9347 1
a9347 1
=item New Modules
d9349 1
a9349 3
B, Data::Dumper, Dumpvalue, Errno, File::Spec, ExtUtils::Installed,
ExtUtils::Packlist, Fatal, IPC::SysV, Test, Tie::Array, Tie::Handle,
Thread, attrs, fields, re
d9351 1
a9351 1
=item Changes in existing modules
d9353 1
a9353 2
Benchmark, Carp, CGI, Fcntl, Math::Complex, Math::Trig, POSIX, DB_File,
MakeMaker, CPAN, Cwd
d9355 1
a9355 1
=back
d9357 1
a9357 1
=item Utility Changes
d9359 1
a9359 1
=item Documentation Changes
d9361 1
a9361 1
=item New Diagnostics
d9363 1
a9363 17
Ambiguous call resolved as CORE::%s(), qualify as such or use &, Bad index
while coercing array into hash, Bareword "%s" refers to nonexistent
package, Can't call method "%s" on an undefined value, Can't check
filesystem of script "%s" for nosuid, Can't coerce array into hash, Can't
goto subroutine from an eval-string, Can't localize pseudo-hash element,
Can't use %%! because Errno.pm is not available, Cannot find an opnumber
for "%s", Character class syntax [. .] is reserved for future extensions,
Character class syntax [: :] is reserved for future extensions, Character
class syntax [= =] is reserved for future extensions, %s: Eval-group in
insecure regular expression, %s: Eval-group not allowed, use re 'eval', %s:
Eval-group not allowed at run time, Explicit blessing to '' (assuming
package main), Illegal hex digit ignored, No such array field, No such
field "%s" in variable %s of type %s, Out of memory during ridiculously
large request, Range iterator outside integer range, Recursive inheritance
detected while looking for method '%s' %s, Reference found where even-sized
list expected, Undefined value assigned to typeglob, Use of reserved word
"%s" is deprecated, perl: warning: Setting locale failed
d9365 1
a9365 1
=item Obsolete Diagnostics
d9367 1
a9367 2
Can't mktemp(), Can't write to temp file for B<-e>: %s, Cannot open
temporary file, regexp too big
d9369 1
a9369 1
=item Configuration Changes
d9371 1
a9371 1
=item BUGS
d9373 1
a9373 1
=item SEE ALSO
d9379 1
a9379 1
=head2 perl5004delta - what's new for perl5.004
d9385 1
a9385 1
=item Supported Environments
d9387 1
a9387 1
=item Core Changes
d9389 1
a9389 1
=over 4
d9391 1
a9391 1
=item List assignment to %ENV works
d9393 1
a9393 1
=item Change to "Can't locate Foo.pm in @@INC" error
d9395 1
a9395 1
=item Compilation option: Binary compatibility with 5.003
d9397 1
a9397 1
=item $PERL5OPT environment variable
d9399 1
a9399 1
=item Limitations on B<-M>, B<-m>, and B<-T> options
d9401 1
a9401 1
=item More precise warnings
d9403 1
a9403 1
=item Deprecated: Inherited C<AUTOLOAD> for non-methods
d9405 1
a9405 1
=item Previously deprecated %OVERLOAD is no longer usable
d9407 1
a9407 1
=item Subroutine arguments created only when they're modified
d9409 1
a9409 1
=item Group vector changeable with C<$)>
d9411 1
a9411 1
=item Fixed parsing of $$<digit>, &$<digit>, etc.
d9413 1
a9413 1
=item Fixed localization of $<digit>, $&, etc.
d9415 1
a9415 1
=item No resetting of $. on implicit close
d9417 1
a9417 1
=item C<wantarray> may return undef
d9419 1
a9419 1
=item C<eval EXPR> determines value of EXPR in scalar context
d9421 1
a9421 1
=item Changes to tainting checks
d9423 1
a9423 2
No glob() or <*>, No spawning if tainted $CDPATH, $ENV, $BASH_ENV, No
spawning if tainted $TERM doesn't look like a terminal name
d9425 1
a9425 1
=item New Opcode module and revised Safe module
d9427 1
a9427 1
=item Embedding improvements
d9429 1
a9429 1
=item Internal change: FileHandle class based on IO::* classes
d9431 1
a9431 1
=item Internal change: PerlIO abstraction interface
d9433 1
a9433 1
=item New and changed syntax
d9435 1
a9435 1
$coderef->(PARAMS)
d9437 1
a9437 1
=item New and changed builtin constants
d9439 1
a9439 1
__PACKAGE__
d9441 1
a9441 1
=item New and changed builtin variables
d9443 1
a9443 1
$^E, $^H, $^M
d9445 1
a9445 1
=item New and changed builtin functions
d9447 1
a9447 5
delete on slices, flock, printf and sprintf, keys as an lvalue, my() in
Control Structures, pack() and unpack(), sysseek(), use VERSION, use Module
VERSION LIST, prototype(FUNCTION), srand, $_ as Default, C<m//gc> does not
reset search position on failure, C<m//x> ignores whitespace before ?*+{},
nested C<sub{}> closures work now, formats work right on changing lexicals
d9449 1
a9449 1
=item New builtin methods
d9451 1
a9451 1
isa(CLASS), can(METHOD), VERSION( [NEED] )
d9453 1
a9453 1
=item TIEHANDLE now supported
d9455 1
a9455 2
TIEHANDLE classname, LIST, PRINT this, LIST, PRINTF this, LIST, READ this
LIST, READLINE this, GETC this, DESTROY this
d9457 1
a9457 1
=item Malloc enhancements
d9459 1
a9459 1
-DPERL_EMERGENCY_SBRK, -DPACK_MALLOC, -DTWO_POT_OPTIMIZE
d9461 1
a9461 1
=item Miscellaneous efficiency enhancements
d9465 1
a9465 1
=item Support for More Operating Systems
d9469 1
a9469 1
=item Win32
d9471 1
a9471 1
=item Plan 9
d9473 1
a9473 3
=item QNX

=item AmigaOS
d9477 1
a9477 1
=item Pragmata
d9479 1
a9479 2
use autouse MODULE => qw(sub1 sub2 sub3), use blib, use blib 'dir', use
constant NAME => VALUE, use locale, use ops, use vmsish
d9481 1
a9481 1
=item Modules
d9485 3
a9487 1
=item Required Updates
d9489 1
a9489 1
=item Installation directories
d9491 1
a9491 1
=item Module information summary
d9493 1
a9493 1
=item Fcntl
d9495 1
a9495 1
=item IO
d9497 1
a9497 1
=item Math::Complex
d9499 1
a9499 1
=item Math::Trig
d9501 1
a9501 1
=item DB_File
d9503 1
a9503 1
=item Net::Ping
d9505 1
a9505 1
=item Object-oriented overrides for builtin operators
d9507 4
a9510 1
=back
d9512 1
a9512 1
=item Utility Changes
d9516 7
a9522 1
=item pod2html
d9524 1
a9524 1
Sends converted HTML to standard output
d9526 1
a9526 1
=item xsubpp
d9528 1
a9528 1
C<void> XSUBs now default to returning nothing
d9532 1
a9532 1
=item C Language API Changes
d9534 1
a9534 2
C<gv_fetchmethod> and C<perl_call_sv>, C<perl_eval_pv>, Extended API for
manipulating hashes
d9536 1
a9536 1
=item Documentation Changes
d9538 1
a9538 2
L<perldelta>, L<perlfaq>, L<perllocale>, L<perltoot>, L<perlapio>,
L<perlmodlib>, L<perldebug>, L<perlsec>
d9540 1
a9540 1
=item New Diagnostics
d9542 1
a9542 25
"my" variable %s masks earlier declaration in same scope, %s argument is
not a HASH element or slice, Allocation too large: %lx, Allocation too
large, Applying %s to %s will act on scalar(%s), Attempt to free
nonexistent shared string, Attempt to use reference as lvalue in substr,
Bareword "%s" refers to nonexistent package, Can't redefine active sort
subroutine %s, Can't use bareword ("%s") as %s ref while "strict refs" in
use, Cannot resolve method `%s' overloading `%s' in package `%s', Constant
subroutine %s redefined, Constant subroutine %s undefined, Copy method did
not return a reference, Died, Exiting pseudo-block via %s, Identifier too
long, Illegal character %s (carriage return), Illegal switch in PERL5OPT:
%s, Integer overflow in hex number, Integer overflow in octal number,
internal error: glob failed, Invalid conversion in %s: "%s", Invalid type
in pack: '%s', Invalid type in unpack: '%s', Name "%s::%s" used only once:
possible typo, Null picture in formline, Offset outside string, Out of
memory!, Out of memory during request for %s, panic: frexp, Possible
attempt to put comments in qw() list, Possible attempt to separate words
with commas, Scalar value @@%s{%s} better written as $%s{%s}, Stub found
while resolving method `%s' overloading `%s' in %s, Too late for "B<-T>"
option, untie attempted while %d inner references still exist, Unrecognized
character %s, Unsupported function fork, Use of "$$<digit>" to mean
"${$}<digit>" is deprecated, Value of %s can be "0"; test with defined(),
Variable "%s" may be unavailable, Variable "%s" will not stay shared,
Warning: something's wrong, Ill-formed logical name |%s| in prime_env_iter,
Got an error from DosAllocMem, Malformed PERLLIB_PREFIX, PERL_SH_DIR too
long, Process terminated by SIG%s
d9544 1
a9544 1
=item BUGS
d9546 1
a9546 1
=item SEE ALSO
d9548 1
a9548 1
=item HISTORY
d9552 2
a9553 1
=head2 perlartistic - the Perl Artistic License
d9557 1
a9557 1
=item SYNOPSIS
d9559 1
a9559 1
=item DESCRIPTION
d9561 1
a9561 1
=item The "Artistic License"
d9563 1
a9563 1
=over 4
d9565 1
a9565 1
=item Preamble
d9567 1
a9567 1
=item Definitions
d9569 1
a9569 2
"Package", "Standard Version", "Copyright Holder", "You", "Reasonable
copying fee", "Freely Available"
d9571 1
a9571 1
=item Conditions
d9573 1
a9573 1
a), b), c), d), a), b), c), d)
d9577 8
d9587 1
a9587 1
=head2 perlgpl - the GNU General Public License, version 2
d9593 1
a9593 1
=back
d9595 1
a9595 1
=over 4
d9597 1
a9597 1
=item DESCRIPTION
d9599 1
a9599 1
=item GNU GENERAL PUBLIC LICENSE
d9603 1
a9603 1
=head2 perlaix, README.aix - Perl version 5 on IBM Unix (AIX) systems
d9607 2
d9613 3
a9615 1
=item Compiling Perl 5 on AIX
d9617 1
a9617 1
=item OS level
d9619 1
a9619 1
=item Building Dynamic Extensions on AIX
d9621 1
a9621 1
=item The IBM ANSI C Compiler
d9623 1
a9623 1
=item The usenm option
d9625 1
a9625 1
=item Using GNU's gcc for building perl
d9627 1
a9627 1
=item Using Large Files with Perl
d9629 1
a9629 1
=item Threaded Perl
d9631 1
a9631 1
=item 64-bit Perl
d9633 1
a9633 1
=item AIX 4.2 and extensions using C++ with statics
d9637 3
a9639 1
=item AUTHOR
d9641 1
a9641 1
=item DATE
d9643 1
a9643 1
=back
d9645 1
a9645 1
=head2 perlamiga - Perl under Amiga OS
d9649 5
a9653 1
=item NOTE
d9655 1
a9655 1
=item SYNOPSIS
d9659 1
a9659 3
=over 4

=item DESCRIPTION
d9663 1
a9663 1
=item Prerequisites for Compiling Perl on AmigaOS
d9665 1
a9665 1
B<Unix emulation for AmigaOS: ixemul.library>, B<Version of Amiga OS>
d9667 1
a9667 3
=item Starting Perl programs under AmigaOS

=item Shortcomings of Perl under AmigaOS
d9671 1
a9671 1
=item INSTALLATION
d9673 1
a9673 1
=item Accessing documentation
d9677 1
a9677 1
=item Manpages for Perl on AmigaOS
d9679 1
a9679 1
=item Perl HTML Documentation on AmigaOS
d9681 1
a9681 3
=item Perl GNU Info Files on AmigaOS

=item Perl LaTeX Documentation on AmigaOS
d9685 1
a9685 1
=item BUILDING PERL ON AMIGAOS
d9687 4
a9690 1
=over 4
d9692 1
a9692 1
=item Build Prerequisites for Perl on AmigaOS
d9694 1
a9694 1
=item Getting the Perl Source for AmigaOS
d9696 1
a9696 1
=item Making Perl on AmigaOS
d9698 1
a9698 1
=item Testing Perl on AmigaOS
d9700 1
a9700 1
=item Installing the built Perl on AmigaOS
d9704 3
a9706 1
=item PERL 5.8.0 BROKEN IN AMIGAOS
d9708 1
a9708 1
=item AUTHORS
d9710 1
a9710 1
=item SEE ALSO
d9712 1
a9712 1
=back
d9714 1
a9714 1
=head2 perlapollo, README.apollo - Perl version 5 on Apollo DomainOS
d9718 1
a9718 1
=item DESCRIPTION
d9720 1
a9720 1
=item AUTHOR
d9724 1
a9724 1
=head2 perlbeos, README.beos - Perl version 5.8+ on BeOS
d9728 5
a9732 1
=item DESCRIPTION
d9734 1
a9734 1
=item BUILD AND INSTALL
d9738 3
a9740 1
=item Requirements
d9742 1
a9742 1
=item Configure
d9744 1
a9744 1
=item Build
d9746 1
a9746 1
=item Install
d9748 1
a9748 1
=back
d9750 1
a9750 1
=item KNOWN PROBLEMS
d9752 1
a9752 1
=item CONTACT
d9756 1
a9756 1
=head2 perlbs2000, README.BS2000 - building and installing Perl for BS2000.
d9766 1
a9766 1
=item gzip on BS2000
d9768 3
a9770 1
=item bison on BS2000
d9772 1
a9772 1
=item Unpacking Perl Distribution on BS2000
d9774 1
a9774 1
=item Compiling Perl on BS2000
d9776 1
a9776 1
=item Testing Perl on BS2000
d9778 1
a9778 1
=item Installing Perl on BS2000
d9780 3
a9782 1
=item Using Perl in the Posix-Shell of BS2000
d9784 1
a9784 1
=item Using Perl in "native" BS2000
d9786 1
a9786 3
=item Floating point anomalies on BS2000

=item Using PerlIO and different encodings on ASCII and EBCDIC partitions
d9790 1
a9790 1
=item AUTHORS
d9792 1
a9792 1
=item SEE ALSO
d9794 1
a9794 1
=over 4
d9796 4
a9799 1
=item Mailing list
d9801 1
a9801 1
=back
d9807 3
a9809 1
=head2 perlce - Perl for WinCE
d9813 1
a9813 3
=item Building Perl for WinCE

=over 4
d9817 1
a9817 8
=item General explanations on cross-compiling WinCE

=item BUILD

Microsoft Embedded Visual Tools, Microsoft Visual C++, Rainer Keuchel's
celib-sources, Rainer Keuchel's console-sources, go to C<./win32>
subdirectory, edit file C<./win32/ce-helpers/compile.bat>, run	 
compile.bat, run    compile.bat dist
d9821 1
a9821 1
=item Using Perl on WinCE
d9825 2
d9829 1
a9829 1
=item LIMITATIONS
d9831 2
a9832 1
=item ENVIRONMENT
d9834 1
a9834 1
PERL5LIB, PATH, TMP, UNIXROOTPATH, ROWS/COLS, HOME, CONSOLEFONTSIZE
d9836 1
a9836 1
=item REGISTRY
d9838 1
a9838 1
=item XS
d9840 1
a9840 1
=item BUGS
d9842 1
a9842 1
=item INSTALLATION
d9844 3
a9846 1
=back
d9848 1
a9848 1
=item ACKNOWLEDGEMENTS
d9850 1
a9850 1
=item History of WinCE port
d9852 1
a9852 1
=item AUTHORS
d9854 1
a9854 1
Rainer Keuchel <coyxc@@rainer-keuchel.de>, Vadim Konovalov
d9858 2
a9859 1
=head2 perlcygwin, README.cygwin - Perl for Cygwin
d9865 11
a9875 1
=item PREREQUISITES FOR COMPILING PERL ON CYGWIN
d9877 1
a9877 1
=over 4
d9879 2
a9880 1
=item Cygwin = GNU+Cygnus+Windows (Don't leave UNIX without it)
d9882 1
a9882 1
=item Cygwin Configuration
d9884 1
a9884 1
C<PATH>, I<nroff>, Permissions
d9888 7
a9894 1
=item CONFIGURE PERL ON CYGWIN
d9898 1
a9898 1
=item Stripping Perl Binaries on Cygwin
d9900 1
a9900 1
=item Optional Libraries for Perl on Cygwin
d9902 1
a9902 2
C<-lcrypt>, C<-lgdbm_compat> (C<use GDBM_File>), C<-ldb> (C<use DB_File>),
C<cygserver> (C<use IPC::SysV>), C<-lutil>
d9904 1
a9904 1
=item Configure-time Options for Perl on Cygwin
d9906 1
a9906 3
C<-Uusedl>, C<-Uusemymalloc>, C<-Uuseperlio>, C<-Dusemultiplicity>,
C<-Duse64bitint>, C<-Duselongdouble>, C<-Dusethreads>, C<-Duselargefiles>,
C<-Dmksymlinks>
d9908 1
a9908 1
=item Suspicious Warnings on Cygwin
d9910 1
a9910 1
Win9x and C<d_eofnblk>, Compiler/Preprocessor defines
d9914 5
a9918 1
=item MAKE ON CYGWIN
d9920 1
a9920 1
=item TEST ON CYGWIN
d9922 1
a9922 1
=over 4
d9924 1
a9924 1
=item File Permissions on Cygwin
d9926 1
a9926 1
=item NDBM_File and ODBM_File do not work on FAT filesystems
d9928 1
a9928 1
=item C<fork()> failures in io_* tests
d9932 1
a9932 1
=item Specific features of the Cygwin port
d9936 3
a9938 1
=item Script Portability on Cygwin
d9940 1
a9940 2
Pathnames, Text/Binary, PerlIO, F<.exe>, Cygwin vs. Windows process ids,
Cygwin vs. Windows errors, C<chown()>, Miscellaneous
d9942 1
a9942 1
=item Prebuilt methods:
d9944 1
a9944 3
C<Cwd::cwd>, C<Cygwin::pid_to_winpid>, C<Cygwin::winpid_to_pid>,
C<Cygwin::win_to_posix_path>, C<Cygwin::posix_to_win_path>,
C<Cygwin::mount_table()>, C<Cygwin::mount_flags>, C<Cygwin::is_binmount>
d9948 3
a9950 1
=item INSTALL PERL ON CYGWIN
d9952 1
a9952 1
=item MANIFEST ON CYGWIN
d9954 1
a9954 2
Documentation, Build, Configure, Make, Install, Tests, Compiled Perl
Source, Compiled Module Source, Perl Modules/Scripts, Perl Module Tests
d9956 1
a9956 1
=item BUGS ON CYGWIN
d9958 1
a9958 1
=item AUTHORS
d9962 4
d9968 1
a9968 1
=head2 perldgux - Perl under DG/UX.
d9974 1
a9974 1
=back
d9978 1
a9978 1
=item DESCRIPTION
d9980 1
a9980 1
=item BUILDING PERL ON DG/UX
d9982 1
a9982 1
=over 4
d9984 1
a9984 1
=item Non-threaded Perl on DG/UX
d9986 1
a9986 1
=item Threaded Perl on DG/UX
d9988 1
a9988 1
=item Testing Perl on DG/UX
d9990 1
a9990 1
=item Installing the built perl on DG/UX
d9994 5
a9998 1
=item AUTHOR
d10002 2
d10006 1
a10006 1
=head2 perldos - Perl under DOS, W31, W95.
d10016 1
a10016 1
=item Prerequisites for Compiling Perl on DOS
d10018 1
a10018 1
DJGPP, Pthreads
d10020 1
a10020 1
=item Shortcomings of Perl under DOS
d10022 1
a10022 1
=item Building Perl on DOS
d10024 1
a10024 1
=item Testing Perl on DOS
d10026 1
a10026 1
=item Installation of Perl on DOS
d10028 1
a10028 1
=back
d10030 1
a10030 1
=item BUILDING AND INSTALLING MODULES ON DOS
d10032 1
a10032 1
=over 4
d10034 1
a10034 1
=item Building Prerequisites for Perl on DOS
d10036 1
a10036 1
=item Unpacking CPAN Modules on DOS
d10038 1
a10038 1
=item Building Non-XS Modules on DOS
d10040 1
a10040 1
=item Building XS Modules on DOS
d10042 1
a10042 5
=back

=item AUTHOR

=item SEE ALSO
d10046 1
a10046 1
=head2 perlepoc, README.epoc - Perl for EPOC
d10052 3
a10054 1
=item INTRODUCTION
d10056 1
a10056 1
=item INSTALLING PERL ON EPOC
d10058 1
a10058 1
=item STARTING PERL ON EPOC
d10060 1
a10060 1
=over 4
d10062 1
a10062 1
=item Editors on Epoc
d10064 1
a10064 1
=item Features of Perl on Epoc
d10066 1
a10066 1
=item Restrictions of Perl on Epoc
d10068 1
a10068 1
=item Compiling Perl 5 on the EPOC cross compiling environment
d10072 1
a10072 1
=item SUPPORT STATUS OF PERL ON EPOC
d10074 5
a10078 1
=item AUTHOR
d10080 1
a10080 1
=item LAST UPDATE
d10082 1
a10082 1
=back
d10084 1
a10084 1
=head2 perlfreebsd, README.freebsd - Perl version 5 on FreeBSD systems
d10086 1
a10086 1
=over 4
d10088 1
a10088 1
=item DESCRIPTION
d10092 1
a10092 1
=item FreeBSD core dumps from readdir_r with ithreads
d10094 1
a10094 1
=item $^X doesn't always contain a full path in FreeBSD
d10096 1
a10096 3
=item Perl will no longer be part of "base FreeBSD"

=back
d10102 2
a10103 2
=head2 perlhpux, README.hpux - Perl version 5 on Hewlett-Packard Unix
(HP-UX) systems
d10107 2
d10111 1
a10111 1
=over 4
d10113 1
a10113 1
=item Using perl as shipped with HP-UX
d10115 16
a10130 1
=item Using perl from HP's porting centre
d10132 1
a10132 1
=item Compiling Perl 5 on HP-UX
d10134 1
a10134 1
=item PA-RISC
d10136 1
a10136 1
=item Portability Between PA-RISC Versions
d10138 1
a10138 1
=item PA-RISC 1.0
d10140 1
a10140 1
=item PA-RISC 1.1
d10142 1
a10142 1
=item PA-RISC 2.0
d10144 1
a10144 1
=item Itanium Processor Family (IPF) and HP-UX
d10146 1
a10146 1
=item Itanium, Itanium 2 & Madison 6
d10148 1
a10148 1
=item Building Dynamic Extensions on HP-UX
d10150 1
a10150 1
=item The HP ANSI C Compiler
d10152 1
a10152 1
=item The GNU C Compiler
d10154 1
a10154 1
=item Using Large Files with Perl on HP-UX
d10156 1
a10156 1
=item Threaded Perl on HP-UX
d10158 1
a10158 1
=item 64-bit Perl on HP-UX
d10160 1
a10160 1
=item Oracle on HP-UX
d10162 1
a10162 1
=item GDBM and Threads on HP-UX
d10164 1
a10164 1
=item NFS filesystems and utime(2) on HP-UX
d10166 1
a10166 1
=item perl -P and // and HP-UX
d10168 1
a10168 1
=item HP-UX Kernel Parameters (maxdsiz) for Compiling Perl
d10172 1
a10172 1
=item nss_delete core dump from op/pwent or op/grent
d10174 1
a10174 1
=item Miscellaneous
d10178 1
a10178 1
=item DATE
d10182 1
a10182 1
=head2 perlhurd, README.hurd - Perl version 5 on Hurd
d10186 2
d10192 3
a10194 1
=item Known Problems with Perl on Hurd 
d10198 6
d10208 1
a10208 1
=head2 perlirix, README.irix - Perl version 5 on Irix systems
d10212 3
a10214 1
=item DESCRIPTION
d10218 5
a10222 1
=item Building 32-bit Perl in Irix
d10224 1
a10224 1
=item Building 64-bit Perl in Irix
d10226 1
a10226 1
=item About Compiler Versions of Irix
d10228 1
a10228 1
=item Linker Problems in Irix
d10230 1
a10230 1
=item Malloc in Irix
d10232 2
a10233 1
=item Building with threads in Irix
d10235 1
a10235 1
=item Irix 5.3
d10237 1
a10237 1
=back
d10239 1
a10239 1
=item AUTHOR
d10243 1
a10243 1
=head2 perllinux, README.linux - Perl version 5 on Linux systems
d10247 1
a10247 1
=item DESCRIPTION
d10249 1
a10249 1
=over 4
d10251 1
a10251 1
=item Experimental Support for Sun Studio Compilers for Linux OS
d10253 1
a10253 3
=back

=item AUTHOR
d10257 1
a10257 2
=head2 perlmachten, README.machten - Perl version 5 on Power MachTen
systems
d10259 1
a10259 1
=over 4
d10261 1
a10261 1
=item DESCRIPTION
d10265 1
a10265 9
=item Perl version 5.8.x and greater not supported

=item Compiling Perl 5.6.x on MachTen

=item Failures during C<make test> on MachTen

op/lexassign.t, pragma/warnings.t

=item Building external modules on MachTen
d10269 1
a10269 1
=item AUTHOR
d10271 1
a10271 1
=item DATE
d10275 1
a10275 1
=head2 perlmacos, README.macos - Perl under Mac OS (Classic)
d10283 1
a10283 1
=item AUTHOR
d10285 1
a10285 1
=item DATE
d10289 1
a10289 1
=head2 perlmacosx, README.macosx - Perl under Mac OS X
d10299 1
a10299 1
=item Installation Prefix
d10301 1
a10301 1
=item SDK support
d10303 1
a10303 1
=item Universal Binary support
d10305 1
a10305 1
=item 64-bit PPC support
d10307 1
a10307 1
=item libperl and Prebinding
d10309 1
a10309 1
=item Updating Apple's Perl
d10311 1
a10311 1
=item Known problems
d10313 1
a10313 9
=item MacPerl

=item Carbon

=item Cocoa

=back

=item Starting From Scratch
a10316 2
=item DATE

d10319 2
a10320 1
=head2 perlmint, README.mint - Perl version 5 on Atari MiNT
d10324 2
a10327 4
=item Known problems with Perl on MiNT

=item AUTHOR

d10330 1
a10330 1
=head2 perlmpeix, README.mpeix - Perl/iX for HP e3000 MPE
d10336 1
a10336 1
=item NOTE
d10338 1
a10338 1
=item Binary distribution from HP
d10340 1
a10340 1
=item What's New in Perl for MPE/iX
d10342 1
a10342 1
=item Welcome to Perl/iX
d10344 1
a10344 1
=item System Requirements for Perl/iX
d10346 1
a10346 1
=item How to Obtain Perl/iX
d10348 1
a10348 1
=item Perl/iX Distribution Contents Highlights
d10350 1
a10350 2
README, INSTALL, LIBSHP3K, PERL, .cpan/, lib/, man/,
public_html/feedback.cgi, src/perl-5.6.0-mpe
d10352 1
a10352 1
=item How to Compile Perl/iX
d10354 1
a10354 1
 4,  6
d10356 1
a10356 1
=item Getting Started with Perl/iX
d10358 1
a10358 1
=item MPE/iX Implementation Considerations
d10360 1
a10360 1
=item Known Perl/iX Bugs Under Investigation
d10362 1
a10362 3
=item Perl/iX To-Do List

=item Perl/iX Change History
d10368 2
a10369 1
=head2 perlnetware - Perl for NetWare
d10373 2
d10377 3
a10379 1
=item BUILD
d10383 1
a10383 1
=item Tools & SDK
d10385 1
a10385 1
=item Setup
d10387 1
a10387 1
SetNWBld.bat, Buildtype.bat
d10389 1
a10389 1
=item Make
d10391 1
a10391 3
=item Interpreter

=item Extensions
d10395 1
a10395 1
=item INSTALL
d10397 1
a10397 1
=item BUILD NEW EXTENSIONS
d10399 1
a10399 1
=item ACKNOWLEDGEMENTS
d10401 1
a10401 1
=item AUTHORS
d10403 1
a10403 1
=item DATE
d10407 1
a10407 1
=head2 perlopenbsd, README.openbsd - Perl version 5 on OpenBSD systems
d10411 2
d10417 1
a10417 2
=item OpenBSD core dumps from getprotobyname_r and getservbyname_r with
ithreads
d10419 1
a10419 1
=back
d10421 1
a10421 1
=item AUTHOR
d10423 1
a10423 1
=back
d10425 1
a10425 1
=head2 perlos2 - Perl under OS/2, DOS, Win0.3*, Win0.95 and WinNT.
d10427 1
a10427 1
=over 4
d10429 10
a10438 1
=item SYNOPSIS
d10442 1
a10442 3
=over 4

=item DESCRIPTION
d10446 1
a10446 1
=item Target
d10448 1
a10448 1
=item Other OSes
d10450 1
a10450 1
=item Prerequisites
d10452 1
a10452 1
EMX, RSX, HPFS, pdksh
d10454 1
a10454 1
=item Starting Perl programs under OS/2 (and DOS and...)
d10456 1
a10456 1
=item Starting OS/2 (and DOS) programs under Perl
d10458 1
a10458 1
=back
d10460 4
a10463 1
=item Frequently asked questions
d10465 1
a10465 1
=over 4
d10467 1
a10467 1
=item "It does not work"
d10469 1
a10469 1
=item I cannot run external programs
d10471 1
a10471 2
=item I cannot embed perl into my program, or use F<perl.dll> from my
program. 
d10473 1
a10473 2
Is your program EMX-compiled with C<-Zmt -Zcrtdll>?, Did you use
L<ExtUtils::Embed>?
d10475 1
a10475 1
=item C<``> and pipe-C<open> do not work under DOS.
d10477 1
a10477 1
=item Cannot start C<find.exe "pattern" file>
d10479 1
a10479 1
=back
d10481 1
a10481 1
=item INSTALLATION
d10485 1
a10485 1
=item Automatic binary installation
d10487 1
a10487 1
C<PERL_BADLANG>, C<PERL_BADFREE>, F<Config.pm>
d10489 1
a10489 1
=item Manual binary installation
d10491 1
a10491 7
Perl VIO and PM executables (dynamically linked), Perl_ VIO executable
(statically linked), Executables for Perl utilities, Main Perl library,
Additional Perl modules, Tools to compile Perl modules, Manpages for Perl
and utilities, Manpages for Perl modules, Source for Perl documentation,
Perl manual in F<.INF> format, Pdksh

=item B<Warning>
d10495 1
a10495 1
=item Accessing documentation
d10497 1
a10497 1
=over 4
d10499 2
a10500 1
=item OS/2 F<.INF> file
d10502 1
a10502 1
=item Plain text
d10504 1
a10504 1
=item Manpages
d10506 1
a10506 1
=item HTML
d10508 1
a10508 1
=item GNU C<info> files
d10510 1
a10510 1
=item F<PDF> files
d10512 1
a10512 1
=item C<LaTeX> docs
d10514 1
a10514 3
=back

=item BUILD
d10518 1
a10518 1
=item The short story
d10520 1
a10520 1
=item Prerequisites
d10522 1
a10522 1
=item Getting perl source
d10524 1
a10524 1
=item Application of the patches
d10526 1
a10526 1
=item Hand-editing
d10528 1
a10528 1
=item Making
d10530 1
a10530 1
=item Testing
d10532 1
a10532 6
A lot of C<bad free>, Process terminated by SIGTERM/SIGINT, F<op/fs.t>,
F<op/stat.t>

=item Installing the built perl

=item C<a.out>-style build
d10536 1
a10536 1
=item Building a binary distribution
d10538 1
a10538 1
=item Building custom F<.EXE> files
d10540 1
a10540 1
=over 4
d10542 1
a10542 2
=item Making executables with a custom collection of statically loaded
extensions
d10544 1
a10544 1
=item Making executables with a custom search-paths
d10548 1
a10548 1
=item Build FAQ
d10552 1
a10552 1
=item Some C</> became C<\> in pdksh.
d10554 1
a10554 1
=item C<'errno'> - unresolved external
d10556 1
a10556 1
=item Problems with tr or sed
d10558 1
a10558 7
=item Some problem (forget which ;-)

=item Library ... not found

=item Segfault in make

=item op/sprintf test failure
d10562 1
a10562 1
=item Specific (mis)features of OS/2 port
d10566 1
a10566 1
=item C<setpriority>, C<getpriority>
d10568 1
a10568 1
=item C<system()>
d10570 1
a10570 1
=item C<extproc> on the first line
d10572 2
a10573 1
=item Additional modules:
d10575 1
a10575 1
=item Prebuilt methods:
d10577 1
a10577 12
C<File::Copy::syscopy>, C<DynaLoader::mod2fname>,  C<Cwd::current_drive()>,
 C<Cwd::sys_chdir(name)>,  C<Cwd::change_drive(name)>, 
C<Cwd::sys_is_absolute(name)>,	C<Cwd::sys_is_rooted(name)>, 
C<Cwd::sys_is_relative(name)>,	C<Cwd::sys_cwd(name)>, 
C<Cwd::sys_abspath(name, dir)>,  C<Cwd::extLibpath([type])>, 
C<Cwd::extLibpath_set( path [, type ] )>,
C<OS2::Error(do_harderror,do_exception)>, C<OS2::Errors2Drive(drive)>,
OS2::SysInfo(), OS2::BootDrive(), C<OS2::MorphPM(serve)>,
C<OS2::UnMorphPM(serve)>, C<OS2::Serve_Messages(force)>,
C<OS2::Process_Messages(force [, cnt])>, C<OS2::_control87(new,mask)>,
OS2::get_control87(), C<OS2::set_control87_em(new=MCW_EM,mask=MCW_EM)>,
C<OS2::DLLname([how [, \&xsub]])>
d10579 1
a10579 1
=item Prebuilt variables:
d10581 1
a10581 2
$OS2::emx_rev, $OS2::emx_env, $OS2::os_ver, $OS2::is_aout, $OS2::can_fork,
$OS2::nsyserror
d10583 1
a10583 1
=item Misfeatures
d10585 3
a10587 1
=item Modifications
d10589 1
a10589 2
C<popen>, C<tmpnam>, C<tmpfile>, C<ctermid>, C<stat>, C<mkdir>, C<rmdir>,
C<flock>
d10591 1
a10591 1
=item Identifying DLLs
d10593 1
a10593 1
=item Centralized management of resources
d10595 1
a10595 4
C<HAB>, C<HMQ>, Treating errors reported by OS/2 API,
C<CheckOSError(expr)>, C<CheckWinError(expr)>, C<SaveWinError(expr)>,
C<SaveCroakWinError(expr,die,name1,name2)>, C<WinError_2_Perl_rc>,
C<FillWinError>, C<FillOSError(rc)>, Loading DLLs and ordinals in DLLs
d10599 2
a10600 1
=item Perl flavors
d10604 3
a10606 1
=item F<perl.exe>
d10608 1
a10608 1
=item F<perl_.exe>
d10610 1
a10610 1
=item F<perl__.exe>
d10612 3
a10614 1
=item F<perl___.exe>
d10616 1
a10616 1
=item Why strange names?
d10618 1
a10618 1
=item Why dynamic linking?
d10620 1
a10620 1
=item Why chimera build?
d10624 1
a10624 1
=item ENVIRONMENT
d10628 1
a10628 1
=item C<PERLLIB_PREFIX>
d10630 1
a10630 9
=item C<PERL_BADLANG>

=item C<PERL_BADFREE>

=item C<PERL_SH_DIR>

=item C<USE_PERL_FLOCK>

=item C<TMP> or C<TEMP>
d10634 1
a10634 1
=item Evolution
d10638 1
a10638 1
=item Text-mode filehandles
d10640 1
a10640 1
=item Priorities
d10642 1
a10642 1
=item DLL name mangling: pre 5.6.2
d10644 1
a10644 1
=item DLL name mangling: 5.6.2 and beyond
d10646 1
a10646 2
Global DLLs, specific DLLs, C<BEGINLIBPATH> and C<ENDLIBPATH>, F<.> from
C<LIBPATH>
d10648 1
a10648 1
=item DLL forwarder generation
d10650 1
a10650 1
=item Threading
d10652 1
a10652 1
=item Calls to external programs
d10654 5
a10658 5
=item Memory allocation

=item Threads

C<COND_WAIT>, F<os2.c>
d10662 1
a10662 3
=item BUGS

=back
d10666 1
a10666 1
=item AUTHOR
d10668 1
a10668 1
=item SEE ALSO
d10672 3
a10674 2
=head2 perlos390, README.os390 - building and installing Perl for OS/390
and z/OS
d10684 13
a10696 1
=item Tools
d10698 1
a10698 1
=item Unpacking Perl distribution on OS/390
d10700 1
a10700 1
=item Setup and utilities for Perl on OS/390
d10702 1
a10702 1
=item Configure Perl on OS/390
d10704 1
a10704 1
=item Build, Test, Install Perl on OS/390
d10706 1
a10706 1
=item Build Anomalies with Perl on OS/390
d10708 1
a10708 1
=item Testing Anomalies with Perl on OS/390
d10710 1
a10710 1
=item Installation Anomalies with Perl on OS/390
d10712 1
a10712 1
=item Usage Hints for Perl on OS/390
d10714 1
a10714 1
=item Floating Point Anomalies with Perl on OS/390
d10716 1
a10716 1
=item Modules and Extensions for Perl on OS/390
d10720 1
a10720 1
=item AUTHORS
d10722 1
a10722 1
=item SEE ALSO
d10724 5
a10728 1
=over 4
d10730 1
a10730 1
=item Mailing list for Perl on OS/390
d10732 1
a10732 1
=back
d10734 1
a10734 1
=item HISTORY
d10738 1
a10738 1
=head2 perlos400, README.os400 - Perl version 5 on OS/400
d10742 2
d10748 3
a10750 1
=item Compiling Perl for OS/400 PASE
d10752 1
a10752 1
=item Installing Perl in OS/400 PASE
d10754 1
a10754 1
=item Using Perl in OS/400 PASE
d10756 1
a10756 1
=item Known Problems
d10758 1
a10758 1
=item Perl on ILE
d10762 3
a10764 1
=item AUTHORS
d10768 1
a10768 1
=head2 perlplan9 - Plan 9-specific documentation for Perl
d10772 2
d10776 2
d10780 7
a10786 1
=item Invoking Perl
d10788 1
a10788 1
=item What's in Plan 9 Perl
d10790 1
a10790 1
=item What's not in Plan 9 Perl
d10792 1
a10792 1
=item Perl5 Functions not currently supported in Plan 9 Perl
d10794 1
a10794 1
=item Signals in Plan 9 Perl
d10796 1
a10796 1
=back
d10798 1
a10798 1
=item COMPILING AND INSTALLING PERL ON PLAN 9
d10802 5
a10806 1
=item Installing Perl Documentation on Plan 9
d10808 1
a10808 1
=back
d10810 1
a10810 1
=item BUGS
d10812 1
a10812 1
=item Revision date
d10814 1
a10814 1
=item AUTHOR
d10816 1
a10816 1
=back
d10818 2
a10819 1
=head2 perlqnx, README.qnx - Perl version 5 on QNX
d10821 1
a10821 1
=over 4
d10823 1
a10823 1
=item DESCRIPTION
d10827 1
a10827 1
=item Required Software for Compiling Perl on QNX4
d10829 1
a10829 1
/bin/sh, ar, nm, cpp, make
d10831 1
a10831 1
=item Outstanding Issues with Perl on QNX4
d10833 1
a10833 1
=item QNX auxiliary files
d10835 1
a10835 1
qnx/ar, qnx/cpp
d10837 1
a10837 1
=item Outstanding issues with perl under QNX6
d10839 1
a10839 1
=back
d10841 1
a10841 1
=item AUTHOR
d10843 1
a10843 1
=back
d10845 1
a10845 1
=head2 perlriscos, README.riscos - Perl version 5 for RISC OS
d10847 1
a10847 1
=over 4
d10849 1
a10849 1
=item DESCRIPTION
d10851 1
a10851 1
=item BUILD
d10853 1
a10853 1
=item AUTHOR
d10855 1
a10855 1
=back
d10857 1
a10857 1
=head2 perlsolaris, README.solaris - Perl version 5 on Solaris systems
d10859 1
a10859 1
=over 4
d10861 1
a10861 1
=item DESCRIPTION
d10863 1
a10863 1
=over 4
d10865 1
a10865 1
=item Solaris Version Numbers.
d10867 2
a10868 1
=back
d10870 1
a10870 1
=item RESOURCES
d10872 2
a10873 1
Solaris FAQ, Precompiled Binaries, Solaris Documentation
d10875 1
a10875 1
=item SETTING UP
d10877 1
a10877 1
=over 4
d10879 1
a10879 1
=item File Extraction Problems on Solaris.
d10881 2
a10882 1
=item Compiler and Related Tools on Solaris.
d10884 1
a10884 1
=item Environment for Compiling perl on Solaris
d10886 1
a10886 1
=back
d10888 1
a10888 1
=item RUN CONFIGURE.
d10890 1
a10890 1
=over 4
d10892 2
a10893 1
=item 64-bit perl on Solaris.
d10895 1
a10895 1
=item Threads in perl on Solaris.
d10897 1
a10897 1
=item Malloc Issues with perl on Solaris.
d10899 1
a10899 1
=back
d10901 1
a10901 1
=item MAKE PROBLEMS.
d10903 1
a10903 3
Dynamic Loading Problems With GNU as and GNU ld, ld.so.1: ./perl: fatal:
relocation error:, dlopen: stub interception failed, #error "No
DATAMODEL_NATIVE specified", sh: ar: not found
d10905 1
a10905 1
=item MAKE TEST
d10907 1
a10907 1
=over 4
d10909 1
a10909 1
=item op/stat.t test 4 in Solaris
d10911 1
a10911 1
=item nss_delete core dump from op/pwent or op/grent
d10913 2
a10914 1
=back
d10916 1
a10916 1
=item PREBUILT BINARIES OF PERL FOR SOLARIS.
d10918 1
a10918 1
=item RUNTIME ISSUES FOR PERL ON SOLARIS.
d10920 1
a10920 1
=over 4
d10922 1
a10922 1
=item Limits on Numbers of Open Files on Solaris.
d10924 1
a10924 1
=back
d10926 1
a10926 1
=item SOLARIS-SPECIFIC MODULES.
d10928 1
a10928 1
=item SOLARIS-SPECIFIC PROBLEMS WITH MODULES.
d10930 1
a10930 1
=over 4
d10932 1
a10932 3
=item Proc::ProcessTable on Solaris

=item BSD::Resource on Solaris
d10934 1
a10934 1
=item Net::SSLeay on Solaris
a10937 2
=item SunOS 4.x

d10942 2
a10943 1
=head2 perlsymbian, README.symbian - Perl version 5 on Symbian OS
d10947 2
d10951 5
a10955 1
=over 4
d10957 1
a10957 1
=item Compiling Perl on Symbian
d10959 1
a10959 1
=item Compilation problems
d10961 1
a10961 1
=item PerlApp
d10963 1
a10963 1
=item sisify.pl
d10965 1
a10965 1
=item Using Perl in Symbian
d10969 1
a10969 1
=item TO DO
d10971 1
a10971 1
=item WARNING
d10973 1
a10973 1
=item NOTE
d10975 1
a10975 1
=item AUTHOR
d10977 1
a10977 1
=item COPYRIGHT
d10979 1
a10979 1
=item LICENSE
d10981 1
a10981 1
=item HISTORY
d10985 1
a10985 2
=head2 perltru64, README.tru64 - Perl version 5 on Tru64 (formerly known as
Digital UNIX formerly known as DEC OSF/1) systems
d10987 1
a10987 1
=over 4
d10989 1
a10989 1
=item DESCRIPTION
d10993 1
a10993 1
=item Compiling Perl 5 on Tru64
d10995 1
a10995 1
=item Using Large Files with Perl on Tru64
d10997 1
a10997 1
=item Threaded Perl on Tru64
d10999 1
a10999 1
=item Long Doubles on Tru64
d11001 1
a11001 1
=item DB_File tests failing on Tru64
d11003 1
a11003 1
=item 64-bit Perl on Tru64
d11005 1
a11005 1
=item Warnings about floating-point overflow when compiling Perl on Tru64
d11007 1
a11007 9
=back

=item Testing Perl on Tru64

=item ext/ODBM_File/odbm Test Failing With Static Builds

=item Perl Fails Because Of Unresolved Symbol sockatmark

=item AUTHOR
d11011 1
a11011 1
=head2 perluts - Perl under UTS
d11019 8
a11026 1
=item BUILDING PERL ON UTS
d11028 1
a11028 1
=item Installing the built perl on UTS
d11034 1
a11034 1
=head2 perlvmesa, README.vmesa - building and installing Perl for VM/ESA.
d11042 1
a11042 1
=over 4
d11044 3
a11046 1
=item Unpacking Perl Distribution on VM/ESA
d11048 1
a11048 1
=item Setup Perl and utilities on VM/ESA
d11050 1
a11050 3
=item Configure Perl on VM/ESA

=item Testing Anomalies of Perl on VM/ESA
d11052 1
a11052 1
=item Usage Hints for Perl on VM/ESA
d11054 1
a11054 1
=back
d11056 1
a11056 1
=item AUTHORS
d11058 1
a11058 1
=item SEE ALSO
d11060 1
a11060 1
=over 4
d11062 1
a11062 1
=item Mailing list for Perl on VM/ESA
d11066 2
d11070 1
a11070 1
=head2 perlvms - VMS-specific documentation for Perl
d11074 2
d11078 1
a11078 1
=item Installation
d11080 1
a11080 1
=item Organization of Perl Images
d11084 1
a11084 1
=item Core Images
d11086 1
a11086 1
=item Perl Extensions
d11088 1
a11088 1
=item Installing static extensions
d11090 1
a11090 1
=item Installing dynamic extensions
d11092 1
a11092 1
=back
d11094 1
a11094 1
=item File specifications
d11096 1
a11096 1
=over 4
d11098 1
a11098 1
=item Syntax
d11100 1
a11100 1
=item Filename Case
d11102 1
a11102 1
=item Symbolic Links
d11104 1
a11104 3
=item Wildcard expansion

=item Pipes
d11108 1
a11108 7
=item PERL5LIB and PERLLIB

=item The Perl Forked Debugger

=item PERL_VMS_EXCEPTION_DEBUG

=item Command line
d11112 1
a11112 1
=item I/O redirection and backgrounding
d11114 1
a11114 3
=item Command line switches

-i, -S, -u
d11118 1
a11118 1
=item Perl functions
d11120 1
a11120 4
File tests, backticks, binmode FILEHANDLE, crypt PLAINTEXT, USER, die,
dump, exec LIST, fork, getpwent, getpwnam, getpwuid, gmtime, kill, qx//,
select (system call), stat EXPR, system LIST, time, times, unlink LIST,
utime LIST, waitpid PID,FLAGS
d11122 1
a11122 1
=item Perl variables
d11124 3
a11126 1
%ENV, CRTL_ENV, CLISYM_[LOCAL], Any other string, $!, $^E, $?, $|
d11128 1
a11128 1
=item Standard modules with VMS-specific differences
d11130 6
a11135 3
=over 4

=item SDBM_File
d11139 1
a11139 1
=item Revision date
d11141 1
a11141 1
=item AUTHOR
d11143 1
a11143 1
=back
d11145 1
a11145 1
=head2 perlvos, README.vos - Perl for Stratus VOS
d11147 1
a11147 1
=over 4
d11149 1
a11149 1
=item SYNOPSIS
d11151 1
a11151 1
=item BUILDING PERL FOR VOS
d11153 1
a11153 1
=item INSTALLING PERL IN VOS
d11155 1
a11155 1
=item USING PERL IN VOS
d11157 1
a11157 1
=over 4
d11159 1
a11159 1
=item Restrictions of Perl on VOS
d11161 1
a11161 1
=item Handling of underflow and overflow
d11165 5
a11169 1
=item TEST STATUS
d11171 1
a11171 1
=item SUPPORT STATUS
a11174 2
=item LAST UPDATE

d11177 1
a11177 1
=head2 perlwin32 - Perl under Windows
d11185 1
a11185 1
=over 4
d11187 2
a11188 1
=item Setting Up Perl on Win32
d11190 1
a11190 4
Make, Command Shell, Borland C++, Microsoft Visual C++, Microsoft Visual
C++ 2008 Express Edition Beta 2, Microsoft Visual C++ 2005 Express Edition,
Microsoft Visual C++ Toolkit 2003, Microsoft Platform SDK 64-bit Compiler,
MinGW release 3 with gcc, MinGW release 1 with gcc
d11192 1
a11192 1
=item Building
d11194 1
a11194 1
=item Testing Perl on Win32
d11196 1
a11196 1
=item Installation of Perl on Win32
d11198 1
a11198 1
=item Usage Hints for Perl on Win32
d11200 1
a11200 3
Environment Variables, File Globbing, Using perl from the command line,
Building Extensions, Command-line Wildcard Expansion, Win32 Specific
Extensions, Notes on 64-bit Windows
d11202 1
a11202 1
=item Running Perl Scripts
d11204 1
a11204 1
=item Miscellaneous Things
d11208 1
a11208 1
=item BUGS AND CAVEATS
d11210 1
a11210 12
=item ACKNOWLEDGEMENTS

=item AUTHORS

Gary Ng E<lt>71564.1743@@CompuServe.COME<gt>, Gurusamy Sarathy
E<lt>gsar@@activestate.comE<gt>, Nick Ing-Simmons
E<lt>nick@@ing-simmons.netE<gt>, Jan Dubois E<lt>jand@@activestate.comE<gt>,
Steve Hay E<lt>steve.hay@@uk.radan.comE<gt>

=item SEE ALSO

=item HISTORY
d11214 1
a11214 3
=head1 PRAGMA DOCUMENTATION

=head2 attrs - set/get attributes of a subroutine (deprecated)
d11222 1
a11222 1
method, locked
d11226 1
a11226 1
=head2 re - Perl pragma to alter regular expression behaviour
d11234 13
a11246 1
=over 4
d11248 1
a11248 1
=item 'taint' mode
d11250 1
a11250 1
=item 'eval' mode
d11252 1
a11252 1
=item 'debug' mode
d11254 1
a11254 1
=item 'Debug' mode
d11256 1
a11256 4
Compile related options, COMPILE, PARSE, OPTIMISE, TRIEC, DUMP, Execute
related options, EXECUTE, MATCH, TRIEE, INTUIT, Extra debugging options,
EXTRA, BUFFERS, TRIEM, STATE, STACK, OPTIMISEM, OFFSETS, OFFSETSDBG, Other
useful flags, ALL, All, MORE, More
d11258 1
a11258 1
=item Exportable Functions
d11260 1
a11260 2
is_regexp($ref), regexp_pattern($ref), regmust($ref), regname($name,$all),
regnames($all), regnames_count()
d11262 1
a11262 1
=back
d11264 1
a11264 1
=item SEE ALSO
d11268 1
a11268 2
=head2 threadshared::shared, threads::shared - Perl extension for sharing
data structures between threads
a11271 2
=item VERSION

d11276 1
a11276 1
=item EXPORT
d11278 1
a11278 1
=item FUNCTIONS
d11280 1
a11280 4
share VARIABLE, is_shared VARIABLE, lock VARIABLE, cond_wait VARIABLE,
cond_wait CONDVAR, LOCKVAR, cond_timedwait VARIABLE, ABS_TIMEOUT,
cond_timedwait CONDVAR, ABS_TIMEOUT, LOCKVAR, cond_signal VARIABLE,
cond_broadcast VARIABLE
d11282 1
a11282 1
=item OBJECTS
d11284 1
a11284 1
=item NOTES
d11286 1
a11286 3
=item BUGS AND LIMITATIONS

=item SEE ALSO
d11292 1
a11292 1
=head2 threads - Perl interpreter-based threads
a11295 2
=item VERSION

d11300 1
a11300 6
$thr = threads->create(FUNCTION, ARGS), $thr->join(), $thr->detach(),
threads->detach(), threads->self(), $thr->tid(), threads->tid(), "$thr",
threads->object($tid), threads->yield(), threads->list(),
threads->list(threads::all), threads->list(threads::running),
threads->list(threads::joinable), $thr1->equal($thr2), async BLOCK;,
$thr->error(), $thr->_handle(), threads->_handle()
d11302 1
a11302 1
=item EXITING A THREAD
d11304 1
a11304 3
threads->exit(), threads->exit(status), die(), exit(status), use threads
'exit' => 'threads_only', threads->create({'exit' => 'thread_only'}, ...),
$thr->set_thread_exit_only(boolean), threads->set_thread_exit_only(boolean)
d11306 1
a11306 6
=item THREAD STATE

$thr->is_running(), $thr->is_joinable(), $thr->is_detached(),
threads->is_detached()

=item THREAD CONTEXT
d11310 1
a11310 1
=item Explicit context
d11312 1
a11312 1
=item Implicit context
d11314 1
a11314 3
=item $thr->wantarray()

=item threads->wantarray()
d11318 1
a11318 1
=item THREAD STACK SIZE
d11320 1
a11320 4
threads->get_stack_size();, $size = $thr->get_stack_size();, $old_size =
threads->set_stack_size($new_size);, use threads ('stack_size' => VALUE);,
$ENV{'PERL5_ITHREADS_STACK_SIZE'}, threads->create({'stack_size' => VALUE},
FUNCTION, ARGS), $thr2 = $thr1->create(FUNCTION, ARGS)
d11322 1
a11322 1
=item THREAD SIGNALLING
d11324 1
a11324 1
$thr->kill('SIG...');
d11326 1
a11326 1
=item WARNINGS
d11328 1
a11328 21
Perl exited with active threads:, Thread creation failed: pthread_create
returned #, Thread # terminated abnormally: .., Using minimum thread stack
size of #, Thread creation failed: pthread_attr_setstacksize(I<SIZE>)
returned 22

=item ERRORS

This Perl not built to support threads, Cannot change stack size of an
existing thread, Cannot signal threads without safe signals, Unrecognized
signal name: ..

=item BUGS AND LIMITATIONS

Thread-safe modules, Using non-thread-safe modules, Current working
directory, Environment variables, Parent-child threads, Creating threads
inside special blocks, Unsafe signals, Perl has been built with
C<PERL_OLD_SIGNALS> (see C<perl -V>), The environment variable
C<PERL_SIGNALS> is set to C<unsafe> (see L<perlrun/"PERL_SIGNALS">), The
module L<Perl::Unsafe::Signals> is used, Returning closures from threads,
Returning objects from threads, Perl Bugs and the CPAN Version of
L<threads>
d11330 1
a11330 3
=item REQUIREMENTS

=item SEE ALSO
a11333 2
=item ACKNOWLEDGEMENTS

d11336 1
a11336 1
=head2 attributes - get/set subroutine or variable attributes
d11346 1
a11346 1
=item Built-in Attributes
d11348 1
a11348 1
locked, method, lvalue
d11350 1
a11350 1
=item Available Subroutines
d11352 1
a11352 1
get, reftype
d11354 1
a11354 1
=item Package-specific Attribute Handling
d11356 1
a11356 1
FETCH_I<type>_ATTRIBUTES, MODIFY_I<type>_ATTRIBUTES
d11358 1
a11358 1
=item Syntax of Attribute Lists
d11360 1
a11360 1
=back
d11362 1
a11362 1
=item EXPORTS
d11366 11
a11376 1
=item Default exports
d11378 3
a11380 1
=item Available exports
d11382 1
a11382 1
=item Export tags defined
d11386 2
d11390 4
d11396 4
d11402 1
a11402 1
=head2 autouse - postpone load of modules until a function is used
a11409 2
=item WARNING

d11416 1
a11416 2
=head2 base - Establish an ISA relationship with base classes at compile
time
d11424 3
a11426 1
=item DIAGNOSTICS
d11428 1
a11428 1
Base class package "%s" is empty, Class 'Foo' tried to inherit from itself
d11430 1
a11430 1
=item HISTORY
d11432 1
a11432 1
=item CAVEATS
d11434 1
a11434 1
=item SEE ALSO
d11438 1
a11438 1
=head2 bigint - Transparent BigInteger support for Perl
d11444 2
d11450 5
a11454 1
=item use integer vs. use bigint
d11456 1
a11456 1
=item Options
d11458 1
a11458 2
a or accuracy, p or precision, t or trace, hex, oct, l, lib, try or only, v
or version
d11460 1
a11460 1
=item Math Library
d11462 1
a11462 1
=item Internal Format
d11464 1
a11464 1
=item Sign
d11466 1
a11466 1
=item Methods
d11468 1
a11468 1
inf(), NaN(), e, PI, bexp(), bpi(), upgrade(), in_effect()
d11470 1
a11470 1
=item MATH LIBRARY
d11472 1
a11472 1
=item Caveat
d11474 1
a11474 1
=back
d11476 1
a11476 1
=item CAVAETS
d11478 1
a11478 1
in_effect(), hex()/oct()
d11480 1
a11480 1
=item MODULES USED
d11482 1
a11482 1
=item EXAMPLES
d11484 1
a11484 1
=item LICENSE
d11486 2
a11487 1
=item SEE ALSO
d11489 1
a11489 1
=item AUTHORS
d11491 3
a11493 1
=back
d11495 1
a11495 1
=head2 bignum - Transparent BigNumber support for Perl
d11497 3
a11499 1
=over 4
d11501 1
a11501 1
=item SYNOPSIS
d11503 1
a11503 1
=item DESCRIPTION
d11507 3
a11509 1
=item Options
d11511 1
a11511 1
a or accuracy, p or precision, t or trace, l or lib, hex, oct, v or version
d11513 1
a11513 1
=item Methods
d11515 1
a11515 1
=item Caveats
d11517 1
a11517 1
inf(), NaN(), e, PI(), bexp(), bpi(), upgrade(), in_effect()
d11519 1
a11519 1
=item Math Library
d11521 2
a11522 1
=item INTERNAL FORMAT
d11524 1
a11524 1
=item SIGN
d11528 1
a11528 1
=item CAVAETS
d11530 1
a11530 1
in_effect(), hex()/oct()
d11532 1
a11532 1
=item MODULES USED
d11534 1
a11534 1
=item EXAMPLES
d11536 1
a11536 1
=item LICENSE
d11538 1
a11538 1
=item SEE ALSO
d11540 1
a11540 1
=item AUTHORS
d11542 2
a11543 1
=back
d11545 1
a11545 1
=head2 bigrat - Transparent BigNumber/BigRational support for Perl
d11547 1
a11547 1
=over 4
d11549 1
a11549 3
=item SYNOPSIS

=item DESCRIPTION
d11553 1
a11553 1
=item Modules Used
d11555 1
a11555 1
=item Math Library
d11557 1
a11557 1
=item Sign
d11559 1
a11559 1
=item Methods
d11561 3
a11563 1
inf(), NaN(), e, PI, bexp(), bpi(), upgrade(), in_effect()
d11565 1
a11565 1
=item MATH LIBRARY
d11567 1
a11567 1
=item Cavaet
d11569 1
a11569 1
=item Options
d11571 1
a11571 1
a or accuracy, p or precision, t or trace, l or lib, hex, oct, v or version
d11573 1
a11573 1
=back
d11575 1
a11575 1
=item CAVAETS
d11577 1
a11577 1
in_effect(), hex()/oct()
d11579 1
a11579 1
=item EXAMPLES
d11581 1
a11581 6
	perl -Mbigrat -le 'print sqrt(33)'
	perl -Mbigrat -le 'print 2*255'
	perl -Mbigrat -le 'print 4.5+2*255'
	perl -Mbigrat -le 'print 3/7 + 5/7 + 8/3'	
	perl -Mbigrat -le 'print 12->is_odd()';
	perl -Mbignum=l,GMP -le 'print 7 ** 7777'
d11583 1
a11583 1
=item LICENSE
d11585 1
a11585 1
=item SEE ALSO
d11587 1
a11587 1
=item AUTHORS
d11589 1
a11589 1
=back
d11591 1
a11591 1
=head2 blib - Use MakeMaker's uninstalled version of a package
d11593 1
a11593 1
=over 4
d11595 1
a11595 1
=item SYNOPSIS
d11597 1
a11597 1
=item DESCRIPTION
d11599 1
a11599 1
=item BUGS
d11601 1
a11601 1
=item AUTHOR
d11603 1
a11603 1
=back
d11605 1
a11605 2
=head2 bytes - Perl pragma to force byte semantics rather than character
semantics
d11607 1
a11607 1
=over 4
d11609 1
a11609 1
=item SYNOPSIS
d11611 2
a11612 1
=item DESCRIPTION
d11614 1
a11614 3
=item LIMITATIONS

=item SEE ALSO
d11618 1
a11618 2
=head2 charnames - define character names for C<\N{named}> string literal
escapes
d11620 2
a11621 1
=over 4
d11623 1
a11623 1
=item SYNOPSIS
d11625 3
a11627 1
=item DESCRIPTION
d11629 1
a11629 1
=item ALIASES
d11631 2
a11632 1
=item CUSTOM ALIASES
d11634 1
a11634 1
=over 4
d11636 1
a11636 1
=item Anonymous hashes
d11638 1
a11638 1
=item Alias file
d11640 1
a11640 1
=item Alias shortcut
d11644 1
a11644 1
=item charnames::viacode(code)
d11646 6
a11651 1
=item charnames::vianame(name)
d11653 1
a11653 1
=item CUSTOM TRANSLATORS
d11655 2
a11656 1
=item ILLEGAL CHARACTERS
d11658 1
a11658 1
=item BUGS
d11660 1
a11660 1
=back
d11662 1
a11662 1
=head2 constant - Perl pragma to declare constants
d11664 2
a11665 1
=over 4
d11667 1
a11667 1
=item SYNOPSIS
d11669 1
a11669 1
=item DESCRIPTION
d11671 1
a11671 1
=item NOTES
d11673 12
a11684 1
=over 4
d11686 1
a11686 1
=item List constants
d11688 1
a11688 1
=item Defining multiple constants at once
d11690 1
a11690 1
=item Magic constants
d11694 9
a11702 1
=item TECHNICAL NOTES
d11704 1
a11704 1
=item CAVEATS
d11708 1
a11708 3
=item AUTHORS

=item COPYRIGHT
d11712 2
a11713 1
=head2 diagnostics, splain - produce verbose warning diagnostics
d11721 4
d11727 1
a11727 3
=item The C<diagnostics> Pragma

=item The I<splain> Program
d11731 1
a11731 1
=item EXAMPLES
d11733 1
a11733 1
=item INTERNALS
d11735 1
a11735 1
=item BUGS
d11737 1
a11737 1
=item AUTHOR
d11741 1
a11741 1
=head2 encoding - allows you to write your script in non-ascii or non-utf8
d11747 5
a11751 1
=item ABSTRACT
d11755 7
a11761 1
=item Literal Conversions
d11763 1
a11763 1
=item PerlIO layers for C<STD(IN|OUT)>
d11765 1
a11765 1
=item Implicit upgrading for byte strings
d11767 1
a11767 1
=item Side effects
d11769 1
a11769 1
=item Side effects
d11771 1
a11771 1
=item Side effects
d11775 1
a11775 1
=item FEATURES THAT REQUIRE 5.8.1
d11777 1
a11777 1
"NON-EUC" doublebyte encodings, tr//, DATA pseudo-filehandle
d11779 1
a11779 1
=item USAGE
d11781 1
a11781 2
use encoding [I<ENCNAME>] ;, use encoding I<ENCNAME> [ STDIN =E<gt>
I<ENCNAME_IN> ...] ;, use encoding I<ENCNAME> Filter=E<gt>1;, no encoding;
d11783 1
a11783 1
=item The Filter Option
d11785 1
a11785 1
=over 4
d11787 1
a11787 1
=item Filter-related changes at Encode version 1.87
d11789 1
a11789 1
=back
d11791 1
a11791 1
=item CAVEATS
d11793 1
a11793 1
=over 4
d11795 1
a11795 1
=item NOT SCOPED
d11797 1
a11797 1
=item DO NOT MIX MULTIPLE ENCODINGS
d11799 1
a11799 1
=item tr/// with ranges
d11801 1
a11801 1
Legend of characters above
d11805 3
a11807 1
=item EXAMPLE - Greekperl
d11809 1
a11809 1
=item KNOWN PROBLEMS
d11811 1
a11811 2
literals in regex that are longer than 127 bytes, EBCDIC, format, Thread
safety
d11815 3
a11817 1
=item The Logic of :locale
d11821 3
a11823 1
=item HISTORY
d11829 1
a11829 1
=head2 encoding::warnings - Warn on implicit encoding conversions
a11832 2
=item VERSION

d11837 1
a11837 1
=over 4
d11839 1
a11839 1
=item Overview of the problem
d11841 1
a11841 1
=item Detecting the problem
d11843 1
a11843 1
=item Solving the problem
d11845 1
a11845 4
Upgrade both sides to unicode-strings, Downgrade both sides to
byte-strings, Specify the encoding for implicit byte-string upgrading,
PerlIO layers for B<STDIN> and B<STDOUT>, Literal conversions, Implicit
upgrading for byte-strings
d11849 1
a11849 1
=item CAVEATS
d11851 1
a11851 1
=back
d11853 1
a11853 1
=over 4
a11856 4
=item AUTHORS

=item COPYRIGHT

d11859 1
a11859 1
=head2 feature - Perl pragma to enable new syntactic features
d11865 2
d11869 1
a11869 1
=over 4
d11871 1
a11871 1
=item Lexical effect
d11873 1
a11873 7
=item C<no feature>

=item The 'switch' feature

=item The 'say' feature

=item the 'state' feature
d11877 1
a11877 7
=item FEATURE BUNDLES

=item IMPLICIT LOADING

=back

=head2 fields - compile-time class fields
d11885 1
a11885 1
new, phash
d11891 1
a11891 1
=head2 filetest - Perl pragma to control the filetest permission operators
d11897 2
d11903 1
a11903 1
=item Consider this carefully
d11905 3
a11907 1
=item The "access" sub-pragma
d11909 1
a11909 1
=item Limitation with regard to C<_>
d11911 1
a11911 1
=back
d11913 1
a11913 1
=back
d11915 1
a11915 1
=head2 if - C<use> a Perl module if a condition holds
d11917 1
a11917 1
=over 4
d11919 1
a11919 1
=item SYNOPSIS
d11921 1
a11921 1
=item DESCRIPTION
d11923 27
a11949 1
=item BUGS
d11951 1
a11951 1
=item AUTHOR
d11953 1
a11953 1
=back
d11955 1
a11955 2
=head2 integer - Perl pragma to use integer arithmetic instead of floating
point
d11957 1
a11957 1
=over 4
d11959 1
a11959 1
=item SYNOPSIS
d11961 1
a11961 1
=item DESCRIPTION
d11965 6
a11970 1
=head2 less - perl pragma to request less of something
d11974 3
a11976 1
=item SYNOPSIS
d11978 1
a11978 1
=item DESCRIPTION
d11980 1
a11980 1
=item FOR MODULE AUTHORS
d11984 1
a11984 3
=item C<< BOOLEAN = less->of( FEATURE ) >>

=item C<< FEATURES = less->of() >>
d11988 1
a11988 1
=item CAVEATS
d11990 1
a11990 1
This probably does nothing, This works only on 5.10+
d11992 1
a11992 3
=back

=head2 lib - manipulate @@INC at compile time
d11996 1
a11996 1
=item SYNOPSIS
d11998 1
a11998 1
=item DESCRIPTION
d12000 1
a12000 1
=over 4
d12002 1
a12002 1
=item Adding directories to @@INC
d12004 1
a12004 1
=item Deleting directories from @@INC
d12006 1
a12006 1
=item Restoring original @@INC
d12008 1
a12008 1
=back
d12010 1
a12010 1
=item CAVEATS
d12012 1
a12012 1
=item NOTES
a12015 2
=item AUTHOR

d12018 1
a12018 2
=head2 locale - Perl pragma to use and avoid POSIX locales for built-in
operations
d12028 1
a12028 1
=head2 mro - Method Resolution Order
d12036 1
a12036 1
=item OVERVIEW
d12038 2
a12039 1
=item The C3 MRO
d12043 1
a12043 1
=item What is C3?
d12045 3
a12047 1
=item How does C3 work
d12051 1
a12051 1
=item Functions
d12055 1
a12055 1
=item mro::get_linear_isa($classname[, $type])
d12057 1
a12057 1
=item mro::set_mro($classname, $type)
d12059 1
a12059 1
=item mro::get_mro($classname)
d12061 1
a12061 1
=item mro::get_isarev($classname)
d12063 1
a12063 13
=item mro::is_universal($classname)

=item mro::invalidate_all_method_caches()

=item mro::method_changed_in($classname)

=item mro::get_pkg_gen($classname)

=item next::method

=item next::can

=item maybe::next::method
a12066 2
=item SEE ALSO

d12069 1
a12069 1
=item The original Dylan paper
d12071 1
a12071 1
L<http://www.webcom.com/haahr/dylan/linearization-oopsla96.html>
d12073 1
a12073 1
=item The prototype Perl 6 Object Model uses C3
d12075 1
a12075 1
L<http://svn.openfoundry.org/pugs/perl5/Perl6-MetaModel/>
d12077 1
a12077 1
=item Parrot now uses C3
d12079 1
a12079 2
L<http://aspn.activestate.com/ASPN/Mail/Message/perl6-internals/2746631>,
L<http://use.perl.org/~autrijus/journal/25768>
d12081 1
a12081 1
=item Python 2.3 MRO related links
d12083 1
a12083 2
L<http://www.python.org/2.3/mro.html>,
L<http://www.python.org/2.2.2/descrintro.html#mro>
d12085 1
a12085 1
=item C3 for TinyCLOS
d12087 1
a12087 1
L<http://www.call-with-current-continuation.org/eggs/c3.html>
d12089 1
a12089 3
=item Class::C3

L<Class::C3>
d12093 1
a12093 1
=item AUTHOR
d12095 1
a12095 3
=back

=head2 open - perl pragma to set default PerlIO layers for input and output
d12103 1
a12103 1
=item NONPERLIO FUNCTIONALITY
d12105 3
a12107 1
=item IMPLEMENTATION DETAILS
d12109 1
a12109 1
=item SEE ALSO
d12111 1
a12111 1
=back
d12113 1
a12113 9
=head2 ops - Perl pragma to restrict unsafe operations when compiling

=over 4

=item SYNOPSIS	

=item DESCRIPTION

=item SEE ALSO
d12117 1
a12117 1
=head2 overload - Package for overloading Perl operations
d12127 1
a12127 1
=item Declaration of overloaded functions
d12129 1
a12129 1
=item Calling Conventions for Binary Operations
d12131 1
a12131 1
FALSE, TRUE, C<undef>
d12133 2
a12134 1
=item Calling Conventions for Unary Operations
d12136 1
a12136 1
=item Calling Conventions for Mutators
d12138 1
a12138 1
C<++> and C<-->, C<x=> and other assignment versions
d12140 1
a12140 1
=item Overloadable Operations
d12142 1
a12142 3
I<Arithmetic operations>, I<Comparison operations>, I<Bit operations>,
I<Increment and decrement>, I<Transcendental functions>, I<Boolean, string
and numeric conversion>, I<Iteration>, I<Dereferencing>, I<Special>
d12144 1
a12144 4
=item Inheritance and overloading

Strings as values of C<use overload> directive, Overloading of an operation
is inherited by derived classes
d12148 1
a12148 1
=item SPECIAL SYMBOLS FOR C<use overload>
d12152 1
a12152 1
=item Last Resort
d12154 1
a12154 1
=item Fallback
d12156 1
a12156 1
C<undef>, TRUE, defined, but FALSE
d12158 1
a12158 1
=item Smart Match
d12160 1
a12160 1
=item Copy Constructor
d12162 1
a12162 1
B<Example>
d12164 1
a12164 1
=back
d12166 1
a12166 1
=item MAGIC AUTOGENERATION
d12168 1
a12168 4
I<Assignment forms of arithmetic operations>, I<Conversion operations>,
I<Increment and decrement>, C<abs($a)>, I<Unary minus>, I<Negation>,
I<Concatenation>, I<Comparison operations>, I<Iterator>, I<Dereferencing>,
I<Copy operator>
d12170 1
a12170 1
=item Minimal set of overloaded operations
d12172 4
a12175 1
=item Losing overloading
d12177 1
a12177 1
=item Run-time Overloading
d12179 1
a12179 1
=item Public functions
d12181 1
a12181 1
overload::StrVal(arg), overload::Overloaded(arg), overload::Method(obj,op)
d12183 7
a12189 1
=item Overloading constants
d12191 1
a12191 1
integer, float, binary, q, qr
d12193 98
a12290 1
=item IMPLEMENTATION
d12292 1
a12292 1
=item Metaphor clash
d12294 4
a12297 1
=item Cookbook
d12299 1
a12299 1
=over 4
d12301 3
a12303 1
=item Two-face scalars
d12305 1
a12305 1
=item Two-face references
d12307 10
a12316 1
=item Symbolic calculator
d12318 1
a12318 1
=item I<Really> symbolic calculator
d12320 2
a12321 1
=back
d12323 1
a12323 1
=item AUTHOR
d12325 28
a12352 1
=item DIAGNOSTICS
d12354 1
a12354 2
Odd number of arguments for overload::constant, `%s' is not an overloadable
type, `%s' is not a code reference
d12356 1
a12356 1
=item BUGS
d12358 1
a12358 1
=back
d12360 7
a12366 1
=head2 sigtrap - Perl pragma to enable simple signal handling
d12368 1
a12368 1
=over 4
d12370 3
a12372 1
=item SYNOPSIS
d12374 1
a12374 1
=item DESCRIPTION
d12376 3
a12378 1
=item OPTIONS
d12380 1
a12380 1
=over 4
d12382 5
a12386 1
=item SIGNAL HANDLERS
d12388 1
a12388 1
B<stack-trace>, B<die>, B<handler> I<your-handler>
d12390 2
a12391 1
=item SIGNAL LISTS
d12393 1
a12393 1
B<normal-signals>, B<error-signals>, B<old-interface-signals>
d12395 2
a12396 1
=item OTHER
d12398 1
a12398 1
B<untrapped>, B<any>, I<signal>, I<number>
d12400 4
a12403 1
=back
d12405 3
a12407 1
=item EXAMPLES
d12409 1
a12409 1
=back
d12411 3
a12413 1
=head2 sort - perl pragma to control sort() behaviour
d12415 1
a12415 1
=over 4
d12417 20
a12436 1
=item SYNOPSIS
d12438 1
a12438 1
=item DESCRIPTION
d12440 3
a12442 1
=item CAVEATS
d12444 1
a12444 1
=back
d12446 10
a12455 1
=head2 strict - Perl pragma to restrict unsafe constructs
d12457 1
a12457 1
=over 4
d12459 7
a12465 1
=item SYNOPSIS
d12467 1
a12467 1
=item DESCRIPTION
d12469 1
a12469 1
C<strict refs>, C<strict vars>, C<strict subs>
d12471 1
a12471 1
=item HISTORY
d12473 1
a12473 1
=back
d12475 1
a12475 1
=head2 subs - Perl pragma to predeclare sub names
d12477 1
a12477 1
=over 4
d12479 1
a12479 1
=item SYNOPSIS
d12481 1
a12481 1
=item DESCRIPTION
d12485 1
a12485 2
=head2 threadshared, threads::shared - Perl extension for sharing data
structures between threads
a12488 2
=item VERSION

d12493 7
a12499 1
=item EXPORT
d12501 1
a12501 1
=item FUNCTIONS
d12503 1
a12503 4
share VARIABLE, is_shared VARIABLE, lock VARIABLE, cond_wait VARIABLE,
cond_wait CONDVAR, LOCKVAR, cond_timedwait VARIABLE, ABS_TIMEOUT,
cond_timedwait CONDVAR, ABS_TIMEOUT, LOCKVAR, cond_signal VARIABLE,
cond_broadcast VARIABLE
d12505 1
a12505 1
=item OBJECTS
d12509 3
a12511 1
=item BUGS AND LIMITATIONS
a12514 2
=item AUTHOR

d12517 3
a12519 2
=head2 utf8 - Perl pragma to enable/disable UTF-8 (or UTF-EBCDIC) in source
code
d12529 12
a12540 1
=item Utility functions
d12542 3
a12544 3
$num_octets = utf8::upgrade($string), $success = utf8::downgrade($string[,
FAIL_OK]), utf8::encode($string), $success = utf8::decode($string), $flag =
utf8::is_utf8(STRING), $flag = utf8::valid(STRING)
d12550 1
a12550 1
=item SEE ALSO
d12554 1
a12554 1
=head2 vars - Perl pragma to predeclare global variable names (obsolete)
d12562 6
d12570 1
a12570 1
=head2 version - Perl extension for Version Objects
d12574 1
a12574 1
=item SYNOPSIS
d12576 1
a12576 1
=item DESCRIPTION
d12578 1
a12578 1
=over 4
d12580 1
a12580 1
=item BEST PRACTICES
d12582 1
a12582 1
Be consistent, Be careful
d12584 1
a12584 1
=item Using modules that use version.pm
d12586 1
a12586 1
Numeric versions always work, Extended version work sometimes
d12588 1
a12588 1
=item What IS a version
d12590 1
a12590 1
Numeric Versions, Extended Versions
d12592 1
a12592 1
=item Numeric Versions
d12594 1
a12594 1
=item Extended Versions
d12596 1
a12596 1
=item Numeric Alpha Versions
d12598 1
a12598 1
=item Object Methods
d12600 1
a12600 2
New Operator, qv(), Normal Form, Numification, Stringification, Comparison
operators, Logical Operators
d12602 1
a12602 1
=item Quoting
d12604 1
a12604 1
=item What about v-strings?
d12606 1
a12606 1
=item Types of Versions Objects
d12608 1
a12608 1
Ordinary versions, Alpha Versions
d12610 1
a12610 1
=item Replacement UNIVERSAL::VERSION
d12614 1
a12614 1
=item SUBCLASSING
d12616 1
a12616 1
=item EXPORT
a12619 2
=item SEE ALSO

d12622 1
a12622 1
=head2 vmsish - Perl pragma to control VMS-specific language features
d12630 1
a12630 1
C<vmsish status>, C<vmsish exit>, C<vmsish time>, C<vmsish hushed>
d12632 1
a12632 1
=back
d12634 1
a12634 1
=head2 warnings - Perl pragma to control optional warnings
d12636 1
a12636 1
=over 4
d12638 1
a12638 1
=item SYNOPSIS
d12640 1
a12640 1
=item DESCRIPTION
d12642 1
a12642 5
use warnings::register, warnings::enabled(), warnings::enabled($category),
warnings::enabled($object), warnings::warn($message),
warnings::warn($category, $message), warnings::warn($object, $message),
warnings::warnif($message), warnings::warnif($category, $message),
warnings::warnif($object, $message)
d12646 1
a12646 1
=head2 warnings::register - warnings import function
d12650 1
a12650 3
=item SYNOPSIS

=item DESCRIPTION
d12654 1
a12654 3
=head1 MODULE DOCUMENTATION

=head2 AnyDBM_File - provide framework for multiple DBMs
d12658 1
a12658 1
=item SYNOPSIS
d12660 1
a12660 1
=item DESCRIPTION
d12662 1
a12662 1
=over 4
d12664 1
a12664 1
=item DBM Comparisons
d12666 1
a12666 1
[0], [1], [2], [3]
d12668 1
a12668 3
=back

=item SEE ALSO
d12672 1
a12672 1
=head2 Archive::Extract - A generic archive extracting mechanism
d12676 1
a12676 1
=item SYNOPSIS
d12678 1
a12678 1
=item DESCRIPTION
d12680 1
a12680 1
=back
d12682 3
a12684 1
=over 4
d12686 1
a12686 1
=item METHODS
d12688 1
a12688 1
=over 4
d12690 1
a12690 2
=item $ae = Archive::Extract->new(archive => '/path/to/archive',[type =>
TYPE])
d12692 4
a12695 1
tar, tgz, gz, Z, zip, bz2, tbz
d12697 1
a12697 1
=back
d12699 2
a12700 1
=back
d12704 3
a12706 1
=item $ae->extract( [to => '/output/path'] )
d12708 1
a12708 1
$ae->extract_path, $ae->files
d12712 1
a12712 3
=over 4

=item ACCESSORS
d12716 1
a12716 1
=item $ae->error([BOOL])
d12718 1
a12718 1
=item $ae->extract_path
d12720 1
a12720 1
=item $ae->files
d12722 1
a12722 1
=item $ae->archive
d12724 1
a12724 3
=item $ae->type

=item $ae->types
d12728 1
a12728 1
=back
d12732 1
a12732 1
=item $ae->is_tgz
d12734 1
a12734 1
=item $ae->is_tar
d12736 1
a12736 1
=item $ae->is_gz
d12738 1
a12738 3
=item $ae->is_Z

=item $ae->is_zip
d12742 1
a12742 1
=over 4
d12744 1
a12744 1
=item $ae->bin_tar
d12746 1
a12746 1
=item $ae->bin_gzip
d12748 1
a12748 1
=item $ae->bin_unzip
d12750 1
a12750 1
=back
d12752 1
a12752 1
=over 4
d12754 1
a12754 1
=item HOW IT WORKS
d12756 4
a12759 1
=item CAVEATS
d12763 3
a12765 1
=item File Extensions
d12767 1
a12767 1
=item Supporting Very Large Files
d12769 1
a12769 1
=item Bunzip2 support of arbitrary extensions.
d12771 4
a12774 1
=back
d12776 1
a12776 1
=item GLOBAL VARIABLES
d12778 1
a12778 1
=over 4
d12780 1
a12780 1
=item $Archive::Extract::DEBUG
d12782 1
a12782 1
=item $Archive::Extract::WARN
d12784 1
a12784 1
=item $Archive::Extract::PREFER_BIN
d12788 5
a12792 1
=item TODO
d12794 1
a12794 1
Mime magic support
d12796 1
a12796 1
=item BUG REPORTS
d12800 3
a12802 1
=item COPYRIGHT
d12806 1
a12806 1
=head2 Archive::Tar - module for manipulations of tar archives
d12814 5
a12818 1
=item Object Methods
d12820 1
a12820 1
=over 4
d12822 1
a12822 1
=item Archive::Tar->new( [$file, $compressed] )
d12826 1
a12826 1
=back
d12830 1
a12830 1
=item $tar->read ( $filename|$handle, $compressed, {opt => 'val'} )
d12832 1
a12832 3
limit, extract

=back
d12836 1
a12836 1
=item $tar->contains_file( $filename )
d12838 3
a12840 1
=back
d12842 1
a12842 1
=over 4
d12844 1
a12844 1
=item $tar->extract( [@@filenames] )
d12848 2
d12852 1
a12852 1
=item $tar->extract_file( $file, [$extract_path] )
d12856 2
d12860 1
a12860 1
=item $tar->list_files( [\@@properties] )
d12862 1
a12862 3
=back

=over 4
d12864 3
a12866 1
=item $tar->get_files( [@@filenames] )
d12870 1
a12870 1
=over 4
d12872 1
a12872 1
=item $tar->get_content( $file )
d12874 1
a12874 1
=back
d12876 1
a12876 1
=over 4
d12878 1
a12878 1
=item $tar->replace_content( $file, $content )
d12880 1
a12880 1
=back
d12884 1
a12884 1
=item $tar->rename( $file, $new_name )
d12886 1
a12886 1
=back
d12890 3
a12892 1
=item $tar->remove (@@filenamelist)
d12896 2
d12900 1
a12900 1
=item $tar->clear
d12902 1
a12902 1
=back
d12904 1
a12904 1
=over 4
d12906 1
a12906 1
=item $tar->write ( [$file, $compressed, $prefix] )
d12908 1
a12908 1
=back
d12910 1
a12910 1
=over 4
d12912 1
a12912 1
=item $tar->add_files( @@filenamelist )
d12914 1
a12914 1
=back
d12916 1
a12916 1
=over 4
d12918 1
a12918 1
=item $tar->add_data ( $filename, $data, [$opthashref] )
d12920 1
a12920 1
FILE, HARDLINK, SYMLINK, CHARDEV, BLOCKDEV, DIR, FIFO, SOCKET
d12922 1
a12922 1
=back
d12924 1
a12924 1
=over 4
d12926 1
a12926 1
=item $tar->error( [$BOOL] )
d12930 2
d12934 3
a12936 1
=item $tar->setcwd( $cwd );
d12940 3
d12945 3
a12947 1
=item $bool = $tar->has_io_string
d12949 1
a12949 1
=back
d12953 3
a12955 1
=item $bool = $tar->has_perlio
d12959 1
a12959 1
=over 4
d12961 1
a12961 1
=item Class Methods
d12965 3
a12967 1
=item Archive::Tar->create_archive($file, $compression, @@filelist)
d12971 3
a12973 1
=back
d12977 3
a12979 1
=item Archive::Tar->list_archive ($file, $compressed, [\@@properties])
d12983 1
a12983 1
=over 4
d12985 1
a12985 1
=item Archive::Tar->extract_archive ($file, $gzip)
d12987 1
a12987 1
=back
d12989 1
a12989 3
=over 4

=item Archive::Tar->can_handle_compressed_files
d12993 1
a12993 3
=over 4

=item GLOBAL VARIABLES
d12997 1
a12997 1
=item $Archive::Tar::FOLLOW_SYMLINK
d12999 1
a12999 1
=item $Archive::Tar::CHOWN
d13001 1
a13001 1
=item $Archive::Tar::CHMOD
d13003 1
a13003 1
=item $Archive::Tar::DO_NOT_USE_PREFIX
d13005 5
a13009 1
=item $Archive::Tar::DEBUG
d13011 1
a13011 1
=item $Archive::Tar::WARN
d13013 1
a13013 1
=item $Archive::Tar::error
d13015 1
a13015 1
=item $Archive::Tar::INSECURE_EXTRACT_MODE
d13017 1
a13017 1
=item $Archive::Tar::HAS_PERLIO
d13019 1
a13019 1
=item $Archive::Tar::HAS_IO_STRING
d13021 1
a13021 1
=back
d13023 1
a13023 1
=item FAQ
d13025 1
a13025 7
What's the minimum perl version required to run Archive::Tar?, Isn't
Archive::Tar slow?, Isn't Archive::Tar heavier on memory than /bin/tar?,
Can't you lazy-load data instead?, How much memory will an X kb tar file
need?, What do you do with unsupported filetypes in an archive?, I'm using
WinZip, or some other non-POSIX client, and files are not being extracted
properly!, How do I extract only files that have property X from an
archive?, How do I access .tar.Z files?, How do I handle Unicode strings?
d13027 1
a13027 1
=item TODO
d13029 1
a13029 3
Check if passed in handles are open for read/write, Allow archives to be
passed in as string, Facilitate processing an opened filehandle of a
compressed archive
d13031 1
a13031 1
=item SEE ALSO
d13033 3
a13035 5
The GNU tar specification, The PAX format specication, A comparison of GNU
and POSIX tar standards;
C<http://www.delorie.com/gnu/docs/tar/tar_114.html>, GNU tar intends to
switch to POSIX compatibility, A Comparison between various tar
implementations
d13037 1
a13037 1
=item AUTHOR
d13039 1
a13039 1
=item ACKNOWLEDGEMENTS
d13043 2
d13047 1
a13047 2
=head2 Archive::Tar::File - a subclass for in-memory extracted file from
Archive::Tar
d13055 1
a13055 6
=over 4

=item Accessors

name, mode, uid, gid, size, mtime, chksum, type, linkname, magic, version,
uname, gname, devmajor, devminor, prefix, raw
d13059 1
a13059 1
=item Methods
d13063 3
a13065 1
=item new( file => $path )
d13067 3
a13069 1
=item new( data => $path, $data, $opt )
d13071 1
a13071 1
=item new( chunk => $chunk )
d13075 1
a13075 1
=back
d13079 1
a13079 1
=item full_path
d13081 1
a13081 1
=back
d13083 1
a13083 1
=over 4
d13085 1
a13085 1
=item validate
d13087 1
a13087 1
=back
d13091 1
a13091 1
=item has_content
d13093 1
a13093 1
=back
d13097 1
a13097 1
=item get_content
d13099 4
a13102 1
=back
d13104 1
a13104 1
=over 4
d13106 2
a13107 1
=item get_content_by_ref
d13111 1
a13111 1
=over 4
d13113 1
a13113 3
=item replace_content( $content )

=back
d13117 1
a13117 1
=item rename( $new_name )
d13119 1
a13119 1
=back
d13121 5
a13125 1
=over 4
d13127 1
a13127 4
=item Convenience methods

is_file, is_dir, is_hardlink, is_symlink, is_chardev, is_blockdev, is_fifo,
is_socket, is_longlink, is_label, is_unknown
d13131 2
a13132 1
=head2 Attribute::Handlers - Simpler definition of attribute handlers
d13142 1
a13142 1
[0], [1], [2], [3], [4], [5], [6], [7]
d13144 1
a13144 1
=over 4
d13146 1
a13146 1
=item Typed lexicals
d13148 1
a13148 1
=item Type-specific attribute handlers
d13150 1
a13150 1
=item Non-interpretive attribute handlers
d13152 1
a13152 1
=item Phase-specific attribute handlers
d13154 1
a13154 1
=item Attributes as C<tie> interfaces
a13157 2
=item EXAMPLES

d13160 3
a13162 5
C<Bad attribute type: ATTR(%s)>, C<Attribute handler %s doesn't handle %s
attributes>, C<Declaration of %s attribute in package %s may clash with
future reserved word>, C<Can't have two ATTR specifiers on one subroutine>,
C<Can't autotie a %s>, C<Internal error: %s symbol went missing>, C<Won't
be able to apply END handler>
d13164 1
a13164 1
=item AUTHOR
d13168 4
d13176 1
a13176 1
=head2 AutoLoader - load subroutines only on demand
d13182 6
d13192 1
a13192 1
=item Subroutine Stubs
d13194 3
a13196 1
=item Using B<AutoLoader>'s AUTOLOAD Subroutine
d13198 4
a13201 1
=item Overriding B<AutoLoader>'s AUTOLOAD Subroutine
d13203 1
a13203 1
=item Package Lexicals
d13205 1
a13205 1
=item Not Using AutoLoader
d13207 1
a13207 1
=item B<AutoLoader> vs. B<SelfLoader>
d13211 3
a13213 1
=item CAVEATS
d13215 5
a13219 1
=item SEE ALSO
d13221 1
a13221 1
=back
d13223 1
a13223 1
=head2 AutoSplit - split a package for autoloading
d13225 1
a13225 1
=over 4
d13227 1
a13227 1
=item SYNOPSIS
d13229 1
a13229 1
=item DESCRIPTION
d13231 1
a13231 1
$keep, $check, $modtime
d13235 3
a13237 1
=item Multiple packages
d13241 5
a13245 1
=item DIAGNOSTICS
d13249 1
a13249 1
=head2 B - The Perl Compiler
d13257 2
a13258 3
=item OVERVIEW

=item Utility Functions
d13262 1
a13262 2
=item Functions Returning C<B::SV>, C<B::AV>, C<B::HV>, and C<B::CV>
objects
d13264 1
a13264 2
sv_undef, sv_yes, sv_no, svref_2object(SVREF), amagic_generation, init_av,
check_av, unitcheck_av, begin_av, end_av, comppadlist, regex_padav, main_cv
d13266 1
a13266 1
=item Functions for Examining the Symbol Table
d13268 1
a13268 1
walksymtable(SYMREF, METHOD, RECURSE, PREFIX)
d13270 1
a13270 1
=item Functions Returning C<B::OP> objects or for walking op trees
d13272 1
a13272 1
main_root, main_start, walkoptree(OP, METHOD), walkoptree_debug(DEBUG)
d13274 1
a13274 1
=item Miscellaneous Utility Functions
d13276 1
a13276 2
ppname(OPNUM), hash(STR), cast_I32(I), minus_c, cstring(STR),
perlstring(STR), class(OBJ), threadsv_names
d13278 1
a13278 1
=item Exported utility variabiles
d13280 1
a13280 1
@@optype, @@specialsv_name
d13284 3
a13286 1
=item OVERVIEW OF CLASSES
d13290 1
a13290 1
=item SV-RELATED CLASSES
d13292 1
a13292 1
=item B::SV Methods
d13294 1
a13294 1
REFCNT, FLAGS, object_2svref
d13296 1
a13296 1
=item B::IV Methods
d13298 1
a13298 1
IV, IVX, UVX, int_value, needs64bits, packiv
d13300 1
a13300 1
=item B::NV Methods
d13302 1
a13302 1
NV, NVX
d13304 1
a13304 1
=item B::RV Methods
d13306 1
a13306 1
RV
d13308 1
a13308 1
=item B::PV Methods
d13310 1
a13310 1
PV, RV, PVX
d13312 1
a13312 1
=item B::PVMG Methods
d13314 1
a13314 1
MAGIC, SvSTASH
d13316 1
a13316 1
=item B::MAGIC Methods
d13318 1
a13318 1
MOREMAGIC, precomp, PRIVATE, TYPE, FLAGS, OBJ, PTR, REGEX
d13320 1
a13320 1
=item B::PVLV Methods
d13322 1
a13322 1
TARGOFF, TARGLEN, TYPE, TARG
d13324 1
a13324 1
=item B::BM Methods
d13326 1
a13326 1
USEFUL, PREVIOUS, RARE, TABLE
d13328 1
a13328 1
=item B::GV Methods
d13330 1
a13330 2
is_empty, NAME, SAFENAME, STASH, SV, IO, FORM, AV, HV, EGV, CV, CVGEN,
LINE, FILE, FILEGV, GvREFCNT, FLAGS
d13332 2
a13333 1
=item B::IO Methods
d13335 1
a13335 2
LINES, PAGE, PAGE_LEN, LINES_LEFT, TOP_NAME, TOP_GV, FMT_NAME, FMT_GV,
BOTTOM_NAME, BOTTOM_GV, SUBPROCESS, IoTYPE, IoFLAGS, IsSTD
d13337 2
a13338 1
=item B::AV Methods
d13340 1
a13340 1
FILL, MAX, ARRAY, ARRAYelt, OFF, AvFLAGS
d13342 1
a13342 1
=item B::CV Methods
d13344 1
a13344 2
STASH, START, ROOT, GV, FILE, DEPTH, PADLIST, OUTSIDE, OUTSIDE_SEQ, XSUB,
XSUBANY, CvFLAGS, const_sv
d13346 1
a13346 1
=item B::HV Methods
d13348 1
a13348 1
FILL, MAX, KEYS, RITER, NAME, ARRAY, PMROOT
d13350 1
a13350 1
=item OP-RELATED CLASSES
d13352 1
a13352 1
=item B::OP Methods
d13354 1
a13354 1
next, sibling, name, ppaddr, desc, targ, type, opt, flags, private, spare
d13356 1
a13356 1
=item B::UNOP METHOD
d13358 1
a13358 1
first
d13360 1
a13360 1
=item B::BINOP METHOD
d13362 1
a13362 1
last
d13364 1
a13364 1
=item B::LOGOP METHOD
d13366 1
a13366 1
other
d13368 3
a13370 1
=item B::LISTOP METHOD
d13372 1
a13372 1
children
d13374 1
a13374 1
=item B::PMOP Methods
d13376 1
a13376 2
pmreplroot, pmreplstart, pmnext, pmregexp, pmflags, extflags, precomp,
pmoffset
d13378 1
a13378 1
=item B::SVOP METHOD
d13380 1
a13380 1
sv, gv
d13382 1
a13382 1
=item B::PADOP METHOD
d13384 1
a13384 1
padix
d13386 1
a13386 1
=item B::PVOP METHOD
d13388 1
a13388 1
pv
d13390 1
a13390 1
=item B::LOOP Methods
d13392 1
a13392 1
redoop, nextop, lastop
d13394 1
a13394 4
=item B::COP Methods

label, stash, stashpv, file, cop_seq, arybase, line, warnings, io, hints,
hints_hash
d13398 1
a13398 1
=item AUTHOR
d13400 1
a13400 1
=back
d13402 1
a13402 1
=head2 B::Concise - Walk Perl syntax tree, printing concise info about ops
d13410 3
a13412 1
=item EXAMPLE
d13414 1
a13414 1
=item OPTIONS
d13416 1
a13416 1
=over 4
d13418 1
a13418 1
=item Options for Opcode Ordering
d13420 1
a13420 1
B<-basic>, B<-exec>, B<-tree>
d13422 1
a13422 1
=item Options for Line-Style
d13424 1
a13424 1
B<-concise>, B<-terse>, B<-linenoise>, B<-debug>, B<-env>
d13426 1
a13426 1
=item Options for tree-specific formatting
d13428 1
a13428 1
B<-compact>, B<-loose>, B<-vt>, B<-ascii>
d13430 1
a13430 1
=item Options controlling sequence numbering
d13432 1
a13432 1
B<-base>I<n>, B<-bigendian>, B<-littleendian>
d13434 1
a13434 1
=item Other options
d13436 1
a13436 2
B<-src>, B<-stash="somepackage">, B<-main>, B<-nomain>, B<-nobanner>,
B<-banner>, B<-banneris> => subref
d13438 1
a13438 1
=item Option Stickiness
d13440 1
a13440 1
=back
d13442 1
a13442 1
=item ABBREVIATIONS
d13446 3
a13448 1
=item OP class abbreviations
d13450 1
a13450 1
=item OP flags abbreviations
d13454 1
a13454 1
=item FORMATTING SPECIFICATIONS
d13458 1
a13458 1
=item Special Patterns
d13460 1
a13460 3
B<(x(>I<exec_text>B<;>I<basic_text>B<)x)>, B<(*(>I<text>B<)*)>,
B<(*(>I<text1>B<;>I<text2>B<)*)>, B<(?(>I<text1>B<#>I<var>I<Text2>B<)?)>,
B<~>
d13462 1
a13462 9
=item # Variables

B<#>I<var>, B<#>I<var>I<N>, B<#>I<Var>, B<#addr>, B<#arg>, B<#class>,
B<#classsym>, B<#coplabel>, B<#exname>, B<#extarg>, B<#firstaddr>,
B<#flags>, B<#flagval>, B<#hints>, B<#hintsval>, B<#hyphseq>, B<#label>,
B<#lastaddr>, B<#name>, B<#NAME>, B<#next>, B<#nextaddr>, B<#noise>,
B<#private>, B<#privval>, B<#seq>, B<#seqnum>, B<#opt>, B<#sibaddr>,
B<#svaddr>, B<#svclass>, B<#svval>, B<#targ>, B<#targarg>, B<#targarglife>,
B<#typenum>
d13466 1
a13466 9
=item One-Liner Command tips

perl -MO=Concise,bar foo.pl, perl -MDigest::MD5=md5 -MO=Concise,md5 -e1,
perl -MPOSIX -MO=Concise,_POSIX_ARG_MAX -e1, perl -MPOSIX -MO=Concise,a -e
'print _POSIX_SAVED_IDS', perl -MPOSIX -MO=Concise,a -e 'sub
a{_POSIX_SAVED_IDS}', perl -MB::Concise -e
'B::Concise::compile("-exec","-src", \%B::Concise::)->()'

=item Using B::Concise outside of the O framework
d13470 1
a13470 1
=item Example: Altering Concise Renderings
d13472 1
a13472 1
=item set_style()
d13474 1
a13474 1
=item set_style_standard($name)
d13476 2
a13477 1
=item add_style()
d13479 1
a13479 1
=item add_callback()
d13481 3
a13483 1
=item Running B::Concise::compile()
d13485 1
a13485 1
=item B::Concise::reset_sequence()
d13487 1
a13487 1
=item Errors
d13491 6
a13496 1
=item AUTHOR
d13498 1
a13498 1
=back
d13500 1
a13500 1
=head2 B::Debug - Walk Perl syntax tree, printing debug info about ops
d13504 1
a13504 1
=item SYNOPSIS
d13506 1
a13506 3
=item DESCRIPTION

=item AUTHOR
d13510 1
a13510 1
=head2 B::Deparse - Perl compiler backend to produce perl code
d13512 3
a13514 1
=over 4
d13516 1
a13516 1
=item SYNOPSIS
d13518 1
a13518 1
=item DESCRIPTION
d13520 2
a13521 6
=item OPTIONS

B<-d>, B<-f>I<FILE>, B<-l>, B<-p>, B<-P>, B<-q>, B<-s>I<LETTERS>, B<C>,
B<i>I<NUMBER>, B<T>, B<v>I<STRING>B<.>, B<-x>I<LEVEL>

=item USING B::Deparse AS A MODULE
d13525 1
a13525 1
=item Synopsis
d13527 2
a13528 1
=item Description
d13530 1
a13530 1
=item new
d13532 1
a13532 6
=item ambient_pragmas

strict, $[, bytes, utf8, integer, re, warnings, hint_bits, warning_bits,
%^H

=item coderef2text
a13535 4
=item BUGS

=item AUTHOR

d13538 1
a13538 1
=head2 B::Lint - Perl lint
d13544 2
d13548 1
a13548 20
=item OPTIONS AND LINT CHECKS

B<magic-diamond>, B<context>, B<implicit-read> and B<implicit-write>,
B<bare-subs>, B<dollar-underscore>, B<private-names>, B<undefined-subs>,
B<regexp-variables>, B<all>, B<none>

=item NON LINT-CHECK OPTIONS

B<-u Package>

=item EXTENDING LINT

=item TODO

while(<FH>) stomps $_, strict oo, unchecked system calls, more tests,
validate against older perls

=item BUGS

=item AUTHOR
d13552 1
a13552 1
=head2 B::O, O - Generic interface to Perl Compiler backends
d13560 1
a13560 3
=item CONVENTIONS

=item IMPLEMENTATION
d13564 1
a13564 1
=item AUTHOR
d13568 1
a13568 1
=head2 B::Showlex - Show lexical variables used in functions or files
d13574 3
a13576 1
=item DESCRIPTION
d13578 1
a13578 1
=item EXAMPLES
d13582 5
a13586 1
=item OPTIONS
d13590 1
a13590 1
=item SEE ALSO
d13592 1
a13592 1
=item TODO
d13594 1
a13594 1
=item AUTHOR
d13598 1
a13598 1
=head2 B::Terse - Walk Perl syntax tree, printing terse info about ops
d13604 3
a13606 1
=item DESCRIPTION
d13608 1
a13608 1
=item AUTHOR
d13612 2
a13613 1
=head2 B::Xref - Generates cross reference reports for Perl programs
d13621 4
a13624 1
=item OPTIONS
d13626 1
a13626 1
C<-oFILENAME>, C<-r>, C<-d>, C<-D[tO]>
d13628 1
a13628 1
=item BUGS
d13630 1
a13630 1
=item AUTHOR
d13634 11
a13644 1
=head2 Benchmark - benchmark running times of Perl code
d13654 1
a13654 1
=item Methods
d13656 2
a13657 1
new, debug, iters
d13659 1
a13659 1
=item Standard Exports
d13661 2
a13662 3
timeit(COUNT, CODE), timethis ( COUNT, CODE, [ TITLE, [ STYLE ]] ),
timethese ( COUNT, CODEHASHREF, [ STYLE ] ), timediff ( T1, T2 ), timestr (
TIMEDIFF, [ STYLE, [ FORMAT ] ] )
d13664 1
a13664 7
=item Optional Exports

clearcache ( COUNT ), clearallcache ( ), cmpthese ( COUNT, CODEHASHREF, [
STYLE ] ), cmpthese ( RESULTSHASHREF, [ STYLE ] ), countit(TIME, CODE),
disablecache ( ), enablecache ( ), timesum ( T1, T2 )

=item :hireswallclock
d13668 1
a13668 1
=item NOTES
d13670 1
a13670 1
=item EXAMPLES
d13672 1
a13672 1
=item INHERITANCE
d13674 1
a13674 1
=item CAVEATS
d13678 1
a13678 3
=item AUTHORS

=item MODIFICATION HISTORY
d13682 2
a13683 1
=head2 CGI - Simple Common Gateway Interface Class
d13693 5
a13697 1
=over 4
d13699 1
a13699 1
=item PROGRAMMING STYLE
d13701 1
a13701 1
=item CALLING CGI.PM ROUTINES
d13703 1
a13703 1
=item CREATING A NEW QUERY OBJECT (OBJECT-ORIENTED STYLE):
d13705 2
a13706 1
=item CREATING A NEW QUERY OBJECT FROM AN INPUT FILE
d13708 2
a13709 1
=item FETCHING A LIST OF KEYWORDS FROM THE QUERY:
d13711 2
a13712 1
=item FETCHING THE NAMES OF ALL THE PARAMETERS PASSED TO YOUR SCRIPT:
d13714 2
a13715 1
=item FETCHING THE VALUE OR VALUES OF A SINGLE NAMED PARAMETER:
d13717 1
a13717 1
=item SETTING THE VALUE(S) OF A NAMED PARAMETER:
d13719 1
a13719 1
=item APPENDING ADDITIONAL VALUES TO A NAMED PARAMETER:
d13721 1
a13721 1
=item IMPORTING ALL PARAMETERS INTO A NAMESPACE:
d13723 1
a13723 1
=item DELETING A PARAMETER COMPLETELY:
d13725 1
a13725 1
=item DELETING ALL PARAMETERS:
d13727 1
a13727 1
=item HANDLING NON-URLENCODED ARGUMENTS
d13729 1
a13729 1
=item DIRECT ACCESS TO THE PARAMETER LIST:
d13731 2
a13732 1
=item FETCHING THE PARAMETER LIST AS A HASH:
d13734 1
a13734 1
=item SAVING THE STATE OF THE SCRIPT TO A FILE:
d13736 1
a13736 1
=item RETRIEVING CGI ERRORS
d13738 1
a13738 1
=item USING THE FUNCTION-ORIENTED INTERFACE
d13740 1
a13740 2
B<:cgi>, B<:form>, B<:html2>, B<:html3>, B<:html4>, B<:netscape>, B<:html>,
B<:standard>, B<:all>
d13742 1
a13742 1
=item PRAGMAS
d13744 1
a13744 3
-any, -compile, -nosticky, -tabindex, -no_undef_params, -no_xhtml, -nph,
-newstyle_urls, -oldstyle_urls, -autoload, -no_debug, -debug,
-private_tempfiles
d13746 1
a13746 1
=item SPECIAL FORMS FOR IMPORTING HTML-TAG FUNCTIONS
d13748 1
a13748 3
1. start_table() (generates a <table> tag), 2. end_table() (generates a
</table> tag), 3. start_ul() (generates a <ul> tag), 4. end_ul() (generates
a </ul> tag)
d13752 2
a13753 1
=item GENERATING DYNAMIC DOCUMENTS
d13757 1
a13757 1
=item CREATING A STANDARD HTTP HEADER:
d13759 1
a13759 1
=item GENERATING A REDIRECTION HEADER
d13761 1
a13761 1
=item CREATING THE HTML DOCUMENT HEADER
d13763 1
a13763 1
B<Parameters:>, 4, 5, 6..
d13765 1
a13765 1
=item ENDING THE HTML DOCUMENT:
d13767 1
a13767 1
=item CREATING A SELF-REFERENCING URL THAT PRESERVES STATE INFORMATION:
d13769 1
a13769 1
=item OBTAINING THE SCRIPT'S URL
d13771 1
a13771 2
B<-absolute>, B<-relative>, B<-full>, B<-path> (B<-path_info>), B<-query>
(B<-query_string>), B<-base>, B<-rewrite>
d13773 1
a13773 1
=item MIXING POST AND URL PARAMETERS
d13775 2
a13776 1
=back
d13778 1
a13778 1
=item CREATING STANDARD HTML ELEMENTS:
d13780 3
a13782 1
=over 4
d13784 1
a13784 1
=item PROVIDING ARGUMENTS TO HTML SHORTCUTS
d13786 1
a13786 1
=item THE DISTRIBUTIVE PROPERTY OF HTML SHORTCUTS
d13788 1
a13788 1
=item HTML SHORTCUTS AND LIST INTERPOLATION
d13790 1
a13790 1
=item NON-STANDARD HTML SHORTCUTS
d13792 4
a13795 1
=item AUTOESCAPING HTML
d13797 1
a13797 2
$escaped_string = escapeHTML("unescaped string");, $charset =
charset([$charset]);, $flag = autoEscape([$flag]);
d13799 1
a13799 1
=item PRETTY-PRINTING HTML
d13801 1
a13801 1
=back
d13803 1
a13803 1
=item CREATING FILL-OUT FORMS:
d13805 1
a13805 1
=over 4
d13807 1
a13807 1
=item CREATING AN ISINDEX TAG
d13809 1
a13809 1
=item STARTING AND ENDING A FORM
d13811 3
a13813 1
B<application/x-www-form-urlencoded>, B<multipart/form-data>
d13815 1
a13815 1
=item FORM ELEMENTS
d13817 1
a13817 3
B<-name>, B<-value>, B<-values>, B<-tabindex>, B<-id>, B<-override>,
B<-onChange>, B<-onFocus>, B<-onBlur>, B<-onMouseOver>, B<-onMouseOut>,
B<-onSelect>
d13819 2
a13820 1
=item CREATING A TEXT FIELD
d13822 1
a13822 1
B<Parameters>
d13824 1
a13824 1
=item CREATING A BIG TEXT FIELD
d13826 2
a13827 1
=item CREATING A PASSWORD FIELD
d13829 1
a13829 1
=item CREATING A FILE UPLOAD FIELD
d13831 1
a13831 1
B<Parameters>
d13833 1
a13833 1
=item CREATING A POPUP MENU
d13835 1
a13835 1
=item CREATING AN OPTION GROUP
d13837 2
a13838 1
=item CREATING A SCROLLING LIST
d13840 1
a13840 1
B<Parameters:>
d13842 1
a13842 1
=item CREATING A GROUP OF RELATED CHECKBOXES
d13844 1
a13844 1
B<Parameters:>
d13846 1
a13846 1
=item CREATING A STANDALONE CHECKBOX
d13848 1
a13848 1
B<Parameters:>
d13850 1
a13850 1
=item CREATING A RADIO BUTTON GROUP
d13852 1
a13852 1
B<Parameters:>
d13854 1
a13854 1
=item CREATING A SUBMIT BUTTON 
d13856 1
a13856 1
B<Parameters:>
d13858 1
a13858 1
=item CREATING A RESET BUTTON
d13860 1
a13860 1
=item CREATING A DEFAULT BUTTON
d13862 1
a13862 1
=item CREATING A HIDDEN FIELD
d13864 1
a13864 1
B<Parameters:>
d13866 3
a13868 1
=item CREATING A CLICKABLE IMAGE BUTTON
d13870 1
a13870 2
B<Parameters:>, 3. The third option (-align, optional) is an alignment
type, and may be TOP, BOTTOM or MIDDLE
d13872 1
a13872 1
=item CREATING A JAVASCRIPT ACTION BUTTON
d13876 1
a13876 1
=item HTTP COOKIES
d13878 1
a13878 2
1. an expiration time, 2. a domain, 3. a path, 4. a "secure" flag,
B<-name>, B<-value>, B<-path>, B<-domain>, B<-expires>, B<-secure>
d13880 2
a13881 1
=item WORKING WITH FRAMES
d13883 1
a13883 3
1. Create a <Frameset> document, 2. Specify the destination for the
document in the HTTP header, 3. Specify the destination for the document in
the <form> tag
d13885 1
a13885 1
=item SUPPORT FOR JAVASCRIPT
d13887 1
a13887 2
B<onLoad>, B<onUnload>, B<onSubmit>, B<onClick>, B<onChange>, B<onFocus>,
B<onBlur>, B<onSelect>, B<onMouseOver>, B<onMouseOut>
d13889 1
a13889 1
=item LIMITED SUPPORT FOR CASCADING STYLE SHEETS
d13891 1
a13891 1
=item DEBUGGING
d13893 1
a13893 1
=over 4
d13895 1
a13895 1
=item DUMPING OUT ALL THE NAME/VALUE PAIRS
d13899 1
a13899 1
=item FETCHING ENVIRONMENT VARIABLES
d13901 1
a13901 6
B<Accept()>, B<raw_cookie()>, B<user_agent()>, B<path_info()>,
B<path_translated()>, B<remote_host()>, B<script_name()> Return the script
name as a partial URL, for self-refering scripts, B<referer()>, B<auth_type
()>, B<server_name ()>, B<virtual_host ()>, B<server_port ()>,
B<virtual_port ()>, B<server_software ()>, B<remote_user ()>, B<user_name
()>, B<request_method()>, B<content_type()>, B<http()>, B<https()>
d13903 1
a13903 1
=item USING NPH SCRIPTS
d13905 2
a13906 2
In the B<use> statement, By calling the B<nph()> method:, By using B<-nph>
parameters
d13908 1
a13908 1
=item Server Push
d13910 1
a13910 1
multipart_init(), multipart_start(), multipart_end(), multipart_final()
d13912 1
a13912 1
=item Avoiding Denial of Service Attacks
d13914 1
a13914 2
B<$CGI::POST_MAX>, B<$CGI::DISABLE_UPLOADS>, B<1. On a script-by-script
basis>, B<2. Globally for all scripts>
d13916 1
a13916 1
=item COMPATIBILITY WITH CGI-LIB.PL
d13918 1
a13918 1
=item AUTHOR INFORMATION
d13920 1
a13920 1
=item CREDITS
d13922 1
a13922 12
Matt Heffron (heffron@@falstaff.css.beckman.com), James Taylor
(james.taylor@@srs.gov), Scott Anguish <sanguish@@digifix.com>, Mike Jewell
(mlj3u@@virginia.edu), Timothy Shimmin (tes@@kbs.citri.edu.au), Joergen Haegg
(jh@@axis.se), Laurent Delfosse (delfosse@@delfosse.com), Richard Resnick
(applepi1@@aol.com), Craig Bishop (csb@@barwonwater.vic.gov.au), Tony Curtis
(tc@@vcpc.univie.ac.at), Tim Bunce (Tim.Bunce@@ig.co.uk), Tom Christiansen
(tchrist@@convex.com), Andreas Koenig (k@@franz.ww.TU-Berlin.DE), Tim
MacKenzie (Tim.MacKenzie@@fulcrum.com.au), Kevin B. Hendricks
(kbhend@@dogwood.tyler.wm.edu), Stephen Dahmen (joyfire@@inxpress.net), Ed
Jordan (ed@@fidalgo.net), David Alan Pisoni (david@@cnation.com), Doug
MacEachern (dougm@@opengroup.org), Robin Houston (robin@@oneworld.org),
...and many many more..
d13924 1
a13924 1
=item A COMPLETE EXAMPLE OF A SIMPLE FORM-BASED SCRIPT
d13926 1
a13926 3
=item BUGS

=item SEE ALSO
d13930 1
a13930 1
=head2 CGI::Apache - Backward compatibility module for CGI.pm
d13932 1
a13932 1
=over 4
d13934 1
a13934 1
=item SYNOPSIS
d13936 1
a13936 1
=item ABSTRACT
d13938 1
a13938 1
=item DESCRIPTION
d13940 1
a13940 1
=item AUTHOR INFORMATION
d13942 1
a13942 1
=item BUGS
d13948 1
a13948 2
=head2 CGI::Carp, B<CGI::Carp> - CGI routines for writing to the HTTPD (or
other) error log
d13954 1
a13954 1
=item DESCRIPTION
d13956 1
a13956 3
=item REDIRECTING ERROR MESSAGES

=item MAKING PERL ERRORS APPEAR IN THE BROWSER WINDOW
d13960 1
a13960 1
=item Changing the default message
d13962 3
a13964 1
=back
d13966 1
a13966 1
=item DOING MORE THAN PRINTING A MESSAGE IN THE EVENT OF PERL ERRORS
d13968 1
a13968 1
=item MAKING WARNINGS APPEAR AS HTML COMMENTS
d13970 1
a13970 3
=item OVERRIDING THE NAME OF THE PROGRAM

=item AUTHORS
d13976 2
a13977 1
=head2 CGI::Cookie - Interface to Netscape Cookies
d13985 3
a13987 1
=item USING CGI::Cookie
d13989 2
a13990 2
B<1. expiration date>, B<2. domain>, B<3. path>, B<4. secure flag>, B<4.
httponly flag>
d13994 1
a13994 1
=item Creating New Cookies
d13996 1
a13996 1
=item Sending the Cookie to the Browser
d13998 1
a13998 1
=item Recovering Previous Cookies
d14000 1
a14000 3
=item Manipulating Cookies

B<name()>, B<value()>, B<domain()>, B<path()>, B<expires()>
d14004 1
a14004 9
=item AUTHOR INFORMATION

=item BUGS

=item SEE ALSO

=back

=head2 CGI::Fast - CGI Interface for Fast CGI
a14011 12
=item OTHER PIECES OF THE PUZZLE

=item WRITING FASTCGI PERL SCRIPTS

=item INSTALLING FASTCGI SCRIPTS

=item USING FASTCGI SCRIPTS AS CGI SCRIPTS

=item EXTERNAL FASTCGI SERVER INVOCATION

FCGI_SOCKET_PATH, FCGI_LISTEN_QUEUE

d14014 1
a14014 1
=item AUTHOR INFORMATION
d14016 1
a14016 3
=item BUGS

=item SEE ALSO
d14020 1
a14020 1
=head2 CGI::Pretty - module to produce nicely formatted HTML code
d14030 1
a14030 1
=item Tags that won't be formatted
d14032 1
a14032 1
=item Customizing the Indenting
d14034 1
a14034 1
=back
d14036 1
a14036 1
=item BUGS
d14038 1
a14038 1
=item AUTHOR
d14040 1
a14040 1
=item SEE ALSO
d14042 1
a14042 1
=back
d14044 1
a14044 1
=head2 CGI::Push - Simple Interface to Server Push
d14046 1
a14046 1
=over 4
d14048 1
a14048 1
=item SYNOPSIS
d14050 1
a14050 1
=item DESCRIPTION
d14052 1
a14052 1
=item USING CGI::Push
d14054 1
a14054 1
-next_page, -last_page, -type, -delay, -cookie, -target, -expires, -nph
d14056 1
a14056 1
=over 4
d14058 1
a14058 1
=item Heterogeneous Pages
d14060 1
a14060 1
=item Changing the Page Delay on the Fly
d14064 1
a14064 1
=item INSTALLING CGI::Push SCRIPTS
d14066 1
a14066 1
=item AUTHOR INFORMATION
d14068 1
a14068 1
=item BUGS
d14070 1
a14070 1
=item SEE ALSO
d14074 2
a14075 1
=head2 CGI::Switch - Backward compatibility module for defunct CGI::Switch
a14080 2
=item ABSTRACT

d14083 1
a14083 1
=item AUTHOR INFORMATION
d14085 1
a14085 1
=item BUGS
d14087 1
a14087 1
=item SEE ALSO
d14089 1
a14089 1
=back
d14091 1
a14091 1
=head2 CGI::Util - Internal utilities used by CGI module
d14093 1
a14093 1
=over 4
d14095 1
a14095 1
=item SYNOPSIS
d14097 1
a14097 1
=item DESCRIPTION
d14099 1
a14099 1
=item AUTHOR INFORMATION
d14101 1
a14101 1
=item SEE ALSO
d14103 1
a14103 1
=back
d14105 1
a14105 1
=head2 CORE - Pseudo-namespace for Perl's core routines
d14109 1
a14109 5
=item SYNOPSIS

=item DESCRIPTION

=item OVERRIDING CORE FUNCTIONS
a14112 2
=item SEE ALSO

d14115 1
a14115 1
=head2 CPAN - query, download and build perl modules from CPAN sites
d14123 1
a14123 1
=over 4
d14125 1
a14125 1
=item CPAN::shell([$prompt, $command]) Starting Interactive Mode
d14127 1
a14127 5
Searching for authors, bundles, distribution files and modules, C<get>,
C<make>, C<test>, C<install>, C<clean> modules or distributions, C<readme>,
C<perldoc>, C<look> module or distribution, C<ls> author, C<ls>
globbing_expression, C<failed>, Persistence between sessions, The C<force>
and the C<fforce> pragma, Lockfile, Signals
d14129 1
a14129 1
=item CPAN::Shell
d14131 1
a14131 1
=item autobundle
d14133 1
a14133 1
=item hosts
d14135 1
a14135 1
=item mkmyconfig
d14137 1
a14137 1
=item recent ***EXPERIMENTAL COMMAND***
d14139 1
a14139 1
=item recompile
d14141 1
a14141 1
=item report Bundle|Distribution|Module
d14143 1
a14143 1
=item smoke ***EXPERIMENTAL COMMAND***
d14145 1
a14145 1
=item upgrade [Module|/Regex/]...
d14147 1
a14147 3
=item The four C<CPAN::*> Classes: Author, Bundle, Module, Distribution

=item Integrating local directories
d14151 1
a14151 1
=item CONFIGURATION
d14153 1
a14153 4
completion support, displaying some help: o conf help, displaying current
values: o conf [KEY], changing of scalar values: o conf KEY VALUE, changing
of list values: o conf KEY SHIFT|UNSHIFT|PUSH|POP|SPLICE|LIST, reverting to
saved: o conf defaults, saving the config: o conf commit
d14155 1
a14155 1
=over 4
d14157 1
a14157 1
=item Config Variables
d14159 2
a14160 5
C<o conf E<lt>scalar optionE<gt>>, C<o conf E<lt>scalar optionE<gt>
E<lt>valueE<gt>>, C<o conf E<lt>list optionE<gt>>, C<o conf E<lt>list
optionE<gt> [shift|pop]>, C<o conf E<lt>list optionE<gt>
[unshift|push|splice] E<lt>listE<gt>>, interactive editing: o conf init
[MATCH|LIST]
d14162 1
a14162 1
=item CPAN::anycwd($path): Note on config variable getcwd
d14164 1
a14164 1
cwd, getcwd, fastcwd, backtickcwd
d14166 1
a14166 1
=item Note on the format of the urllist parameter
d14168 1
a14168 1
=item The urllist parameter has CD-ROM support
d14170 1
a14170 1
=item Maintaining the urllist parameter
d14172 1
a14172 1
=item The C<requires> and C<build_requires> dependency declarations
d14174 1
a14174 1
=item Configuration for individual distributions (I<Distroprefs>)
d14176 1
a14176 1
=item Filenames
d14178 1
a14178 1
=item Fallback Data::Dumper and Storable
d14180 1
a14180 1
=item Blueprint
d14182 1
a14182 1
=item Language Specs
d14184 1
a14184 3
comment [scalar], cpanconfig [hash], depends [hash] *** EXPERIMENTAL
FEATURE ***, disabled [boolean], goto [string], install [hash], make
[hash], match [hash], patches [array], pl [hash], test [hash]
d14186 1
a14186 1
=item Processing Instructions
d14188 1
a14188 1
args [array], commandline, eexpect [hash], env [hash], expect [array]
d14190 1
a14190 1
=item Schema verification with C<Kwalify>
d14192 1
a14192 1
=item Example Distroprefs Files
d14194 1
a14194 1
=back
d14196 2
a14197 3
=item PROGRAMMER'S INTERFACE

expand($type,@@things), expandany(@@things), Programming Examples
d14201 1
a14201 1
=item Methods in the other Classes
d14203 1
a14203 37
CPAN::Author::as_glimpse(), CPAN::Author::as_string(),
CPAN::Author::email(), CPAN::Author::fullname(), CPAN::Author::name(),
CPAN::Bundle::as_glimpse(), CPAN::Bundle::as_string(),
CPAN::Bundle::clean(), CPAN::Bundle::contains(),
CPAN::Bundle::force($method,@@args), CPAN::Bundle::get(),
CPAN::Bundle::inst_file(), CPAN::Bundle::inst_version(),
CPAN::Bundle::uptodate(), CPAN::Bundle::install(), CPAN::Bundle::make(),
CPAN::Bundle::readme(), CPAN::Bundle::test(),
CPAN::Distribution::as_glimpse(), CPAN::Distribution::as_string(),
CPAN::Distribution::author, CPAN::Distribution::pretty_id(),
CPAN::Distribution::base_id(), CPAN::Distribution::clean(),
CPAN::Distribution::containsmods(), CPAN::Distribution::cvs_import(),
CPAN::Distribution::dir(), CPAN::Distribution::force($method,@@args),
CPAN::Distribution::get(), CPAN::Distribution::install(),
CPAN::Distribution::install_tested(), CPAN::Distribution::isa_perl(),
CPAN::Distribution::is_tested(), CPAN::Distribution::look(),
CPAN::Distribution::make(), CPAN::Distribution::perldoc(),
CPAN::Distribution::prefs(), CPAN::Distribution::prereq_pm(),
CPAN::Distribution::readme(), CPAN::Distribution::reports(),
CPAN::Distribution::read_yaml(), CPAN::Distribution::test(),
CPAN::Distribution::uptodate(), CPAN::Index::force_reload(),
CPAN::Index::reload(), CPAN::InfoObj::dump(), CPAN::Module::as_glimpse(),
CPAN::Module::as_string(), CPAN::Module::clean(),
CPAN::Module::cpan_file(), CPAN::Module::cpan_version(),
CPAN::Module::cvs_import(), CPAN::Module::description(),
CPAN::Module::distribution(), CPAN::Module::dslip_status(),
CPAN::Module::force($method,@@args), CPAN::Module::get(),
CPAN::Module::inst_file(), CPAN::Module::available_file(),
CPAN::Module::inst_version(), CPAN::Module::available_version(),
CPAN::Module::install(), CPAN::Module::look(), CPAN::Module::make(),
CPAN::Module::manpage_headline(), CPAN::Module::perldoc(),
CPAN::Module::readme(), CPAN::Module::reports(), CPAN::Module::test(),
CPAN::Module::uptodate(), CPAN::Module::userid()

=item Cache Manager

=item Bundles
d14207 1
a14207 3
=item PREREQUISITES

=item UTILITIES
d14211 1
a14211 1
=item Finding packages and VERSION
d14213 1
a14213 1
=item Debugging
d14215 1
a14215 1
o debug package.., o debug -package.., o debug all, o debug number
d14217 1
a14217 5
=item Floppy, Zip, Offline Mode

=item Basic Utilities for Programmers

has_inst($module), has_usable($module), instance($module)
d14221 1
a14221 1
=item SECURITY
d14225 1
a14225 1
=item Cryptographically signed modules
d14229 2
a14230 1
=item EXPORT
d14232 1
a14232 1
=item ENVIRONMENT
d14234 1
a14234 1
=item POPULATE AN INSTALLATION WITH LOTS OF MODULES
d14236 1
a14236 1
=item WORKING WITH CPAN.pm BEHIND FIREWALLS
d14238 1
a14238 1
=over 4
d14240 1
a14240 5
=item Three basic types of firewalls

http firewall, ftp firewall, One way visibility, SOCKS, IP Masquerade

=item Configuring lynx or ncftp for going through a firewall
d14244 1
a14244 1
=item FAQ
d14246 1
a14246 1
1), 2), 3), 4), 5), 6), 7), 8), 9), 10), 11), 12), 13), 14), 15), 16)
d14248 1
a14248 1
=item COMPATIBILITY
d14250 1
a14250 1
=over 4
d14252 1
a14252 1
=item OLD PERL VERSIONS
d14254 1
a14254 1
=item CPANPLUS
d14256 2
a14257 1
=back
d14259 1
a14259 1
=item SECURITY ADVICE
d14261 1
a14261 1
=item BUGS
a14264 6
=item LICENSE

=item TRANSLATIONS

=item SEE ALSO

d14267 1
a14267 1
=head2 CPAN::API::HOWTO - a recipe book for programming with CPAN.pm
d14271 3
a14273 1
=item RECIPES
d14277 1
a14277 1
=item What distribution contains a particular module?
d14279 1
a14279 1
=item What modules does a particular distribution contain?
d14283 1
a14283 1
=item SEE ALSO
d14285 1
a14285 1
=item LICENSE
d14287 1
a14287 1
=item AUTHOR
d14289 1
a14289 1
=back
d14291 1
a14291 1
=head2 CPAN::FirstTime - Utility for CPAN::Config file Initialization
d14295 1
a14295 1
=item SYNOPSIS
d14297 1
a14297 1
=item DESCRIPTION
d14299 1
a14299 15
=back

auto_commit, build_cache, build_dir, build_dir_reuse,
build_requires_install_policy, cache_metadata, check_sigs, colorize_output,
colorize_print, colorize_warn, colorize_debug, commandnumber_in_prompt,
ftp_passive, getcwd, histfile, histsize, inactivity_timeout, index_expire,
inhibit_startup_message, keep_source_where, load_module_verbosity,
makepl_arg, make_arg, make_install_arg, make_install_make_command,
mbuildpl_arg, mbuild_arg, mbuild_install_arg, mbuild_install_build_command,
pager, prefer_installer, prefs_dir, prerequisites_policy,
randomize_urllist, scan_cache, shell, show_unparsable_versions,
show_upload_date, show_zero_versions, tar_verbosity, term_is_latin,
term_ornaments, test_report, use_sqlite, yaml_load_code, yaml_module

=over 4
d14305 1
a14305 1
=head2 CPAN::Kwalify - Interface between CPAN.pm and Kwalify.pm
d14313 8
a14320 1
_validate($schema_name, $data, $file, $doc), yaml($schema_name)
a14323 2
=item LICENSE

d14326 1
a14326 1
=head2 CPAN::Version - utility functions to compare CPAN versions
d14334 4
a14337 1
=item LICENSE
d14339 1
a14339 1
=back
d14341 1
a14341 1
=head2 CPANPLUS - API & CLI access to the CPAN mirrors
d14343 1
a14343 1
=over 4
d14345 1
a14345 1
=item SYNOPSIS
d14347 1
a14347 1
=item GUIDE TO DOCUMENTATION
d14351 1
a14351 1
=item GENERAL USAGE
d14353 1
a14353 1
=item API REFERENCE
d14357 2
d14361 2
d14365 3
a14367 1
=item COMMANDLINE TOOLS
d14369 1
a14369 1
=over 4
d14371 1
a14371 1
=item STARTING AN INTERACTIVE SHELL
d14373 1
a14373 1
=item BUILDING PACKAGES
d14375 1
a14375 1
=item $bool = install( Module::Name | /A/AU/AUTHOR/Module-Name-1.tgz )
d14377 1
a14377 1
=item $where = fetch( Module::Name | /A/AU/AUTHOR/Module-Name-1.tgz )
d14379 1
a14379 1
=item $where = get( Module::Name | /A/AU/AUTHOR/Module-Name-1.tgz )
d14381 1
a14381 1
=item shell()
d14385 1
a14385 1
=item FAQ
d14387 1
a14387 1
=item BUG REPORTS
a14390 2
=item COPYRIGHT

a14392 5
=item CONTACT INFORMATION

Bug reporting: I<bug-cpanplus@@rt.cpan.org>, Questions & suggestions:
I<cpanplus-devel@@lists.sourceforge.net>

d14395 1
a14395 1
=head2 CPANPLUS::Backend
a14402 2
=item ENVIRONMENT

d14407 1
a14407 3
=item $cb = CPANPLUS::Backend->new( [CONFIGURE_OBJ] )

Provide a valid C<CPANPLUS::Configure> object, No arguments
d14415 1
a14415 1
=item $href = $cb->module_tree( [@@modules_names_list] )
d14421 1
a14421 1
=item $href = $cb->author_tree( [@@author_names_list] )
d14427 1
a14427 1
=item $conf = $cb->configure_object;
d14433 1
a14433 1
=item $su = $cb->selfupdate_object;
d14439 1
a14439 2
=item @@mods = $cb->search( type => TYPE, allow => AREF, [data => AREF,
verbose => BOOL] )
d14445 1
a14445 1
=item $backend_rv = $cb->fetch( modules => \@@mods )
d14447 1
a14447 1
=item $backend_rv = $cb->extract( modules => \@@mods )
d14449 2
a14450 1
=item $backend_rv = $cb->install( modules => \@@mods )
d14452 1
a14452 1
=item $backend_rv = $cb->readme( modules => \@@mods )
d14454 1
a14454 1
=item $backend_rv = $cb->files( modules => \@@mods )
d14456 1
a14456 1
=item $backend_rv = $cb->distributions( modules => \@@mods )
d14460 7
d14469 3
a14471 2
=item $mod_obj = $cb->parse_module( module =>
$modname|$distname|$modobj|URI )
d14473 1
a14473 5
Text::Bastardize, Text-Bastardize, Text-Bastardize-1.06,
AYRNIEU/Text-Bastardize, AYRNIEU/Text-Bastardize-1.06,
AYRNIEU/Text-Bastardize-1.06.tar.gz,
http://example.com/Text-Bastardize-1.06.tar.gz,
file:///tmp/Text-Bastardize-1.06.tar.gz
d14477 8
d14487 1
a14487 2
=item $bool = $cb->reload_indices( [update_source => BOOL, verbose => BOOL]
);
d14489 1
a14489 1
=back
d14493 3
a14495 1
=item $bool = $cb->flush(CACHE_NAME)
d14497 1
a14497 1
C<methods>, C<hosts>, C<modules>, C<lib>, C<load>, C<all>
d14501 2
d14505 3
a14507 1
=item @@mods = $cb->installed()
d14511 2
d14515 1
a14515 2
=item $bool = $cb->local_mirror([path => '/dir/to/save/to', index_files =>
BOOL, force => BOOL, verbose => BOOL] )
d14517 1
a14517 1
path, index_files, force, verbose
d14521 3
d14526 3
a14528 2
=item $file = $cb->autobundle([path => OUTPUT_PATH, force => BOOL, verbose
=> BOOL])
d14532 1
a14532 1
=over 4
d14534 1
a14534 1
=item CUSTOM MODULE SOURCES
d14536 1
a14536 1
=over 4
d14538 1
a14538 1
=item %files = $cb->list_custom_sources
d14540 1
a14540 1
=back
d14542 2
a14543 1
=back
d14547 7
a14553 2
=item $local_index = $cb->add_custom_source( uri => URI, [verbose => BOOL]
);
d14557 1
a14557 1
=over 4
d14559 1
a14559 2
=item $local_index = $cb->remove_custom_source( uri => URI, [verbose =>
BOOL] );
d14561 1
a14561 1
=back
d14565 1
a14565 1
=item $bool = $cb->update_custom_source( [remote => URI] );
d14567 1
a14567 1
=back
d14571 3
a14573 2
=item $file = $cb->write_custom_source_index( path =>
/path/to/package/root, [to => /path/to/index/file, verbose => BOOL] );
a14578 2
=item BUG REPORTS

a14580 2
=item COPYRIGHT

d14585 1
a14585 1
=head2 CPANPLUS::Backend::RV
a14592 2
=item METHODS

d14595 1
a14595 2
=item new( ok => BOOL, args => DATA, rv => DATA, [function => $method_name]
)
d14597 1
a14597 1
ok, args, rv, function
d14603 2
a14606 2
=item BUG REPORTS

d14609 1
a14609 1
=item COPYRIGHT
d14613 1
a14613 1
=head2 CPANPLUS::Config
d14617 2
d14621 1
a14621 1
=item CONFIGURATION
d14627 1
a14627 1
=item Section 'conf'
d14629 1
a14629 1
hosts
d14633 1
a14633 1
base
d14635 1
a14635 1
buildflags
d14637 1
a14637 1
cpantest
d14639 1
a14639 1
cpantest_mx
d14641 1
a14641 1
debug
d14643 1
a14643 1
dist_type
d14645 1
a14645 1
email
d14647 1
a14647 1
extractdir
d14649 1
a14649 1
fetchdir
d14651 1
a14651 1
flush
d14653 1
a14653 1
force
d14655 1
a14655 1
lib
d14657 1
a14657 1
makeflags
d14659 1
a14659 1
makemakerflags
d14661 1
a14661 1
md5
d14663 1
a14663 1
no_update
d14665 1
a14665 1
passive
d14667 1
a14667 1
prefer_bin
d14669 1
a14669 1
prefer_makefile
d14671 1
a14671 1
prereqs
d14673 1
a14673 1
shell
d14675 1
a14675 1
show_startup_tip
d14677 1
a14677 1
signature
d14679 1
a14679 1
skiptest
d14681 1
a14681 1
storable
d14683 1
a14683 1
timeout
d14685 1
a14685 1
verbose
d14687 1
a14687 1
write_install_log
d14689 1
a14689 1
editor
d14691 1
a14691 1
make
d14693 1
a14693 1
pager
d14695 1
a14695 1
shell
d14697 1
a14697 1
sudo
d14699 1
a14699 1
perlwrapper
d14701 1
a14701 1
=over 4
d14703 1
a14703 1
=item BUG REPORTS
d14705 1
a14705 1
=item AUTHOR
d14707 1
a14707 1
=item COPYRIGHT
d14709 1
a14709 1
=item SEE ALSO
d14711 1
a14711 1
=back
d14713 1
a14713 1
=head2 CPANPLUS::Configure
d14715 1
a14715 1
=over 4
d14717 1
a14717 1
=item SYNOPSIS
d14719 1
a14719 1
=item DESCRIPTION
d14721 1
a14721 1
=item METHODS
d14723 1
a14723 1
=over 4
d14725 1
a14725 1
=item $Configure = CPANPLUS::Configure->new( load_configs => BOOL )
d14727 1
a14727 1
=back
d14729 1
a14729 1
=back
d14731 1
a14731 1
=over 4
d14733 1
a14733 1
=item $bool = $Configure->init( [rescan => BOOL])
d14735 1
a14735 1
=back
d14737 1
a14737 1
=over 4
d14739 1
a14739 1
=item can_save( [$config_location] )
d14741 1
a14741 1
=back
d14743 1
a14743 1
=over 4
d14745 1
a14745 1
=item $file = $conf->save( [$package_name] )
d14747 1
a14747 1
=back
d14749 1
a14749 1
=over 4
d14751 1
a14751 1
=item options( type => TYPE )
d14753 1
a14753 1
=back
d14755 1
a14755 1
=over 4
d14757 1
a14757 1
=item ACCESSORS
d14759 1
a14759 1
=over 4
d14761 1
a14761 1
=item get_SOMETHING( ITEM, [ITEM, ITEM, ... ] );
d14763 1
a14763 1
=item set_SOMETHING( ITEM => VAL, [ITEM => VAL, ITEM => VAL, ... ] );
d14765 1
a14765 1
=item add_SOMETHING( ITEM => VAL, [ITEM => VAL, ITEM => VAL, ... ] );
d14767 1
a14767 2
set|get_conf, set|get_program, _set|_get_build, _set|_get_source,
_set|_get_mirror, _set|_get_fetch
d14769 1
a14769 1
=back
d14771 1
a14771 1
=back
d14773 1
a14773 1
=over 4
d14775 1
a14775 1
=item BUG REPORTS
d14777 1
a14777 1
=item AUTHOR
d14779 1
a14779 1
=item COPYRIGHT
d14781 1
a14781 1
=item SEE ALSO
d14783 1
a14783 1
=back
d14785 1
a14785 1
=head2 CPANPLUS::Dist
d14787 1
a14787 1
=over 4
d14789 1
a14789 1
=item SYNOPSIS
d14791 1
a14791 1
=item DESCRIPTION
d14793 1
a14793 1
=item ACCESSORS
d14795 1
a14795 1
parent(), status()
d14797 1
a14797 1
=item STATUS ACCESSORS
d14799 1
a14799 1
created(), installed(), uninstalled(), dist()
d14801 1
a14801 1
=back
d14803 1
a14803 1
=over 4
d14805 1
a14805 4
=item $dist = CPANPLUS::Dist->new( module => MODOBJ, [format => DIST_TYPE]
);

=back
d14809 1
a14809 1
=item @@dists = CPANPLUS::Dist->dist_types;
d14813 3
d14818 1
a14818 1
=item prereq_satisfied( modobj => $modobj, version => $version_spec )
d14820 1
a14820 1
=back
d14824 3
a14826 1
=item _resolve_prereqs
d14830 1
a14830 1
=head2 CPANPLUS::Dist::Base - Base class for custom distribution classes
d14834 9
a14842 1
=item SYNOPSIS
d14844 1
a14844 1
=item DESCRIPTION
d14846 1
a14846 1
=item FLOW
d14848 1
a14848 1
=item METHODS
d14850 1
a14850 1
=back
d14852 1
a14852 1
=over 4
d14854 1
a14854 1
=item $bool = $Class->format_available
d14856 1
a14856 1
=back
d14858 1
a14858 1
=over 4
d14860 1
a14860 1
=item $bool = $dist->init
d14862 1
a14862 1
=back
d14864 1
a14864 1
=over 4
d14866 1
a14866 1
=item $bool = $dist->prepare
d14868 1
a14868 1
=back
d14870 1
a14870 1
=over 4
d14872 1
a14872 1
=item $bool = $dist->create
d14874 1
a14874 1
=back
d14876 1
a14876 1
=over 4
d14878 1
a14878 1
=item $bool = $dist->install
d14880 1
a14880 1
=back
d14882 1
a14882 1
=over 4
d14884 1
a14884 1
=item $bool = $dist->uninstall
d14886 1
a14886 1
=back
d14888 1
a14888 1
=head2 CPANPLUS::Dist::Build
d14890 1
a14890 1
=over 4
d14892 1
a14892 1
=item SYNOPSIS
d14894 1
a14894 1
=item DESCRIPTION
d14896 1
a14896 1
=item ACCESSORS
d14898 1
a14898 1
parent(), status()
d14900 1
a14900 1
=item STATUS ACCESSORS
d14902 1
a14902 3
build_pl (), build (), test (), prepared (), distdir (), created (),
installed (), uninstalled (), _create_args (), _install_args (), _mb_object
()
d14904 1
a14904 1
=back
d14906 1
a14906 1
=over 4
d14908 1
a14908 1
=item METHODS
d14910 1
a14910 1
=over 4
d14912 1
a14912 1
=item $bool = CPANPLUS::Dist::Build->format_available();
d14914 1
a14914 1
=back
d14916 1
a14916 1
=back
d14918 1
a14918 1
=over 4
d14920 1
a14920 1
=item $bool = $dist->init();
d14922 1
a14922 1
=back
d14926 1
a14926 2
=item $bool = $dist->prepare([perl => '/path/to/perl', buildflags =>
'EXTRA=FLAGS', force => BOOL, verbose => BOOL])
d14930 2
d14934 1
a14934 2
=item $dist->create([perl => '/path/to/perl', buildflags => 'EXTRA=FLAGS',
prereq_target => TARGET, force => BOOL, verbose => BOOL, skiptest => BOOL])
d14936 1
a14936 1
=back
d14940 3
a14942 1
=item $dist->install([verbose => BOOL, perl => /path/to/perl])
a14947 5
=item KNOWN ISSUES

Module::Build can not be upgraded using its own API (#13169), Module::Build
does not provide access to install history (#9793)

d14950 1
a14950 1
=item COPYRIGHT
d14954 2
a14955 1
=head2 CPANPLUS::Dist::MM
d14961 1
a14961 8
=item ACCESSORS

parent(), status()

=item STATUS ACCESSORS 

makefile (), make (), test (), prepared (), distdir (), created (),
installed (), uninstalled (), _create_args (), _install_args ()
d14967 1
a14967 1
=item METHODS
d14969 1
a14969 3
=over 4

=item $bool = $dist->format_available();
d14973 1
a14973 1
=back
d14975 1
a14975 1
=over 4
d14977 1
a14977 2
=item $href = $dist->_find_prereqs( file => '/path/to/Makefile', [verbose
=> BOOL])
d14979 1
a14979 1
=back
d14981 1
a14981 1
=over 4
d14983 1
a14983 3
=item $bool = $dist->create([perl => '/path/to/perl', make =>
'/path/to/make', makeflags => 'EXTRA=FLAGS', prereq_target => TARGET,
skiptest => BOOL, force => BOOL, verbose => BOOL])
d14985 1
a14985 1
=back
d14987 1
a14987 1
=over 4
d14989 1
a14989 2
=item $bool = $dist->install([make => '/path/to/make',	makemakerflags =>
'EXTRA=FLAGS', force => BOOL, verbose => BOOL])
d14991 1
a14991 1
=back
d14993 1
a14993 1
=over 4
d14995 1
a14995 1
=item $bool = $dist->write_makefile_pl([force => BOOL, verbose => BOOL])
d14997 1
a14997 1
=back
d14999 1
a14999 2
=head2 CPANPLUS::Dist::Sample -- Sample code to create your own Dist::*
plugin
d15001 1
a15001 1
=over 4
d15003 1
a15003 1
=item Description.
d15005 1
a15005 1
=back
d15007 1
a15007 1
=head2 CPANPLUS::Error
a15014 2
=item FUNCTIONS

d15017 1
a15017 1
=item cp_msg("message string" [,VERBOSE])
d15019 1
a15019 1
=item msg()
d15021 1
a15021 1
=item cp_error("error string" [,VERBOSE])
d15023 1
a15023 1
=item error()
d15025 1
a15025 1
=back
d15027 1
a15027 1
=item CLASS METHODS
d15029 1
a15029 1
=over 4
d15031 1
a15031 1
=item CPANPLUS::Error->stack()
d15033 1
a15033 1
=item CPANPLUS::Error->stack_as_string([TRACE])
d15035 1
a15035 1
=item CPANPLUS::Error->flush()
d15039 1
a15039 1
=back
d15043 1
a15043 1
=item GLOBAL VARIABLES
d15045 1
a15045 1
$ERROR_FH, $MSG_FH
d15049 1
a15049 1
=head2 CPANPLUS::FAQ
d15053 2
d15057 5
a15061 1
=item BUG REPORTS
d15063 1
a15063 1
=item AUTHOR
d15065 1
a15065 1
=item COPYRIGHT
d15067 1
a15067 1
=back
d15069 1
a15069 1
=head2 CPANPLUS::Hacking
d15071 1
a15071 1
=over 4
d15073 1
a15073 1
=item DESCRIPTION
d15075 1
a15075 1
=item OBTAINING CPANPLUS
d15077 1
a15077 1
=item INSTALLING CPANPLUS
d15079 1
a15079 1
=item CONFIGURING CPANPLUS
d15081 18
a15098 1
=item RUNNING CPANPLUS FROM DEVELOPMENT ENVIRONMENT
d15100 1
a15100 1
=item RUNNING CPANPLUS TESTS
d15102 2
a15103 1
=item FINDING BUGS
d15105 1
a15105 3
Problem description, Program demonstrating the bug, [OPTIONAL] A patch to
the test suite to test for the bug, [OPTIONAL] A patch to the code + tests
+ documentation
d15107 1
a15107 1
=item SUPPLYING PATCHES
d15109 1
a15109 4
In C<diff -u> or C<diff -c> format, From the root of the snapshot,
Including patches for code + tests + docs, Sent per mail to
cpanplus-devel@@lists.sourceforge.net, With subject containing C<[PATCH]> +
description of the patch
d15111 1
a15111 1
=back
d15113 1
a15113 1
=head2 CPANPLUS::Internals
d15115 3
a15117 1
=over 4
d15119 1
a15119 1
=item SYNOPSIS
d15121 1
a15121 1
=item DESCRIPTION
d15123 1
a15123 1
=item ACCESSORS
d15125 1
a15125 1
_conf, _id, _lib, _perl5lib
d15129 3
a15131 1
=over 4
d15133 1
a15133 1
=item METHODS
d15135 1
a15135 1
=over 4
d15137 1
a15137 1
=item $internals = CPANPLUS::Internals->_init( _conf => CONFIG_OBJ )
d15141 1
a15141 1
=back
d15145 3
a15147 1
=item $bool = $internals->_flush( list => \@@caches )
d15151 7
d15160 1
a15160 2
=item $bool = $internals->_register_callback( name => CALLBACK_NAME, code
=> CODEREF );
d15162 2
a15163 2
install_prerequisite, send_test_report, munge_test_report,
edit_test_report, proceed_on_test_failure, munge_dist_metafile
d15165 1
a15165 1
=back
d15167 3
a15169 1
=over 4
d15171 1
a15171 1
=item $bool = $internals->_add_to_includepath( directories => \@@dirs )
d15173 2
a15174 1
=back
d15176 1
a15176 1
=over 4
d15178 3
a15180 1
=item $id = CPANPLUS::Internals->_last_id
d15182 1
a15182 1
=item $id = CPANPLUS::Internals->_store_id( $internals )
d15184 1
a15184 1
=item $obj = CPANPLUS::Internals->_retrieve_id( $ID )
d15186 1
a15186 1
=item CPANPLUS::Internals->_remove_id( $ID )
d15188 1
a15188 1
=item @@objs = CPANPLUS::Internals->_return_all_objects
d15192 1
a15192 1
=head2 CPANPLUS::Internals::Extract
d15202 3
a15204 3
=item $dir = _extract( module => $modobj, [perl => '/path/to/perl',
extractdir => '/path/to/extract/to', prefer_bin => BOOL, verbose => BOOL,
force => BOOL] )
d15206 2
a15207 1
module, extractdir, prefer_bin, perl, verbose, force
d15211 2
d15215 1
a15215 1
=head2 CPANPLUS::Internals::Fetch
d15223 1
a15223 1
=item METHODS
d15225 1
a15225 1
=back
d15229 1
a15229 3
=item $path = _fetch( module => $modobj, [fetchdir => '/path/to/save/to',
fetch_from => 'scheme://path/to/fetch/from', verbose => BOOL, force =>
BOOL, prefer_bin => BOOL] )
d15231 1
a15231 7
=back

=over 4

=item _add_fail_host( host => $host_hashref )

=item _host_ok( host => $host_hashref )
d15235 1
a15235 1
=head2 CPANPLUS::Internals::Report
a15242 2
=item METHODS

d15245 1
a15245 1
=item $bool = $cb->_have_query_report_modules
d15247 1
a15247 1
=item $bool = $cb->_have_send_report_modules
d15253 1
a15253 1
=over 4
d15255 1
a15255 2
=item @@list = $cb->_query_report( module => $modobj, [all_versions => BOOL,
verbose => BOOL] )
d15257 1
a15257 1
=back
d15259 1
a15259 1
=over 4
d15261 1
a15261 3
=item $bool = $cb->_send_report( module => $modobj, buffer => $make_output,
failed => BOOL, [save => BOOL, address => $email_to, dontcc => BOOL,
verbose => BOOL, force => BOOL]);
d15263 1
a15263 1
module, buffer, failed, save, address, dontcc, verbose, force
d15265 1
a15265 1
=back
d15267 1
a15267 1
=head2 CPANPLUS::Internals::Search
d15271 1
a15271 1
=item SYNOPSIS
d15273 1
a15273 1
=item DESCRIPTION
d15275 1
a15275 1
=item METHODS
d15277 1
a15277 6
=over 4

=item _search_module_tree( type => TYPE, allow => \@@regexex, [data =>
\@@previous_results ] )

type, allow, data
d15281 1
a15281 1
=back
d15283 1
a15283 1
=over 4
d15285 2
a15286 2
=item _search_author_tree( type => TYPE, allow => \@@regexex, [data =>
\@@previous_results ] )
d15288 1
a15288 1
type, allow, data
d15290 1
a15290 1
=back
d15292 1
a15292 1
=over 4
d15294 1
a15294 1
=item _all_installed()
d15298 1
a15298 1
=head2 CPANPLUS::Internals::Source
d15306 1
a15306 1
=item METHODS
d15310 2
d15314 1
a15314 2
=item $cb->_check_trees( [update_source => BOOL, path => PATH, verbose =>
BOOL] )
d15316 1
a15316 1
update_source, path, verbose
d15320 3
d15325 1
a15325 2
=item $cb->__check_uptodate( file => $file, name => $name, [update_source
=> BOOL, verbose => BOOL] )
d15327 1
a15327 1
file, name, update_source, verbose
d15329 1
a15329 1
=back
d15331 1
a15331 1
=over 4
d15333 1
a15333 2
=item $cb->_update_source( name => $name, [path => $path, verbose => BOOL]
)
d15335 1
a15335 1
name, path, verbose
d15337 1
a15337 1
=back
d15341 3
a15343 2
=item $cb->_build_trees( uptodate => BOOL, [use_stored => BOOL, path =>
$path, verbose => BOOL] )
d15345 1
a15345 1
uptodate, path, verbose, use_stored
d15347 1
a15347 1
=back
d15349 1
a15349 1
=over 4
d15351 1
a15351 2
=item $cb->__retrieve_source(name => $name, [path => $path, uptodate =>
BOOL, verbose => BOOL])
d15353 1
a15353 1
name, uptodate, path, verbose
d15357 2
d15361 1
a15361 1
=item $cb->_save_source([verbose => BOOL, path => $path])
d15363 1
a15363 1
path, verbose
d15367 2
d15371 3
a15373 2
=item $cb->__create_author_tree([path => $path, uptodate => BOOL, verbose
=> BOOL])
d15375 1
a15375 1
uptodate, path, verbose
d15379 2
d15383 5
a15387 2
=item $cb->_create_mod_tree([path => $path, uptodate => BOOL, verbose =>
BOOL])
d15389 1
a15389 1
uptodate, path, verbose
d15393 3
d15398 1
a15398 2
=item $cb->__create_dslip_tree([path => $path, uptodate => BOOL, verbose =>
BOOL])
d15400 1
a15400 1
uptodate, path, verbose
d15404 3
a15406 1
=over 4
d15408 1
a15408 1
=item $cb->_dslip_defs ()
d15410 1
a15410 1
=back
d15414 1
a15414 2
=item $file = $cb->_add_custom_module_source( uri => URI, [verbose => BOOL]
); 
d15418 2
d15422 1
a15422 1
=item $index = $cb->__custom_module_source_index_file( uri => $uri );
d15424 1
a15424 1
=back
d15426 1
a15426 1
=over 4
d15428 1
a15428 2
=item $file = $cb->_remove_custom_module_source( uri => URI, [verbose =>
BOOL] ); 
d15432 2
d15436 1
a15436 1
=item %files = $cb->__list_custom_module_sources
d15438 1
a15438 1
=back
d15440 1
a15440 1
=over 4
d15442 1
a15442 1
=item $bool = $cb->__update_custom_module_sources( [verbose => BOOL] );
d15446 2
d15450 1
a15450 1
=item $ok = $cb->__update_custom_module_source 
d15452 1
a15452 1
=back
d15456 3
a15458 2
=item $bool = $cb->__write_custom_module_index( path => /path/to/packages,
[to => /path/to/index/file, verbose => BOOL] )
d15462 3
a15464 1
=over 4
d15466 1
a15466 1
=item $bool = $cb->__create_custom_module_entries( [verbose => BOOL] ) 
d15470 1
a15470 1
=head2 CPANPLUS::Internals::Utils
d15478 7
a15484 1
=item METHODS
d15486 1
a15486 1
=over 4
d15488 1
a15488 1
=item $cb->_mkdir( dir => '/some/dir' )
d15492 1
a15492 1
=back
d15496 3
a15498 1
=item $cb->_chdir( dir => '/some/dir' )
d15500 1
a15500 1
=back
d15504 1
a15504 1
=item $cb->_rmdir( dir => '/some/dir' );
d15506 3
a15508 1
=back
d15510 1
a15510 1
=over 4
d15512 3
a15514 1
=item $cb->_perl_version ( perl => 'some/perl/binary' );
d15518 3
a15520 1
=over 4
d15522 1
a15522 1
=item $cb->_version_to_number( version => $version );
d15524 1
a15524 1
=back
d15526 1
a15526 1
=over 4
d15528 1
a15528 1
=item $cb->_whoami
d15532 2
d15536 1
a15536 1
=item _get_file_contents( file => $file );
d15538 1
a15538 1
=back
d15542 1
a15542 1
=item $cb->_mode_plus_w( file => '/path/to/file' );
d15544 1
a15544 1
=back
d15546 3
a15548 4
=over 4

=item $uri = $cb->_host_to_uri( scheme => SCHEME, host => HOST, path =>
PATH );
d15552 1
a15552 1
=over 4
d15554 1
a15554 1
=item $cb->_vcmp( VERSION, VERSION );
d15556 1
a15556 1
=back
d15558 1
a15558 1
=over 4
d15560 1
a15560 1
=item $cb->_home_dir
d15564 2
d15568 1
a15568 1
=item $path = $cb->_safe_path( path => $path );
d15570 1
a15570 1
=back
d15572 1
a15572 1
=over 4
d15574 1
a15574 2
=item ($pkg, $version, $ext) = $cb->_split_package_string( package =>
PACKAGE_STRING );
d15578 1
a15578 1
=head2 CPANPLUS::Module
d15586 1
a15586 1
=back
d15588 3
a15590 1
=over 4
d15592 1
a15592 1
=item CLASS METHODS
d15594 1
a15594 1
=over 4
d15596 1
a15596 1
=item accessors ()
d15600 1
a15600 1
=back
d15604 1
a15604 1
=item ACCESSORS
d15606 1
a15606 1
name, module, version, path, comment, package, description, dslip
d15610 1
a15610 1
status, author, parent
d15612 1
a15612 1
=over 4
d15614 1
a15614 7
=item STATUS ACCESSORS

installer_type, dist_cpan, dist, prereqs, signature, extract, fetch,
readme, uninstall, created, installed, checksums, checksum_ok,
checksum_value

=item METHODS
d15618 1
a15618 1
=item $self = CPANPLUS::Module::new( OPTIONS )
d15622 1
a15622 1
=back
d15626 1
a15626 1
=item $mod->package_name
d15628 1
a15628 1
=item $mod->package_version
d15630 1
a15630 1
=item $mod->package_extension
d15632 1
a15632 1
=item $mod->package_is_perl_core
d15634 1
a15634 1
=item $mod->module_is_supplied_with_perl_core( [version => $]] )
d15636 1
a15636 1
=item $mod->is_bundle
d15638 1
a15638 1
=item $mod->is_third_party
d15640 1
a15640 1
=item $mod->third_party_information
d15644 2
d15648 1
a15648 1
=item $clone = $self->clone
d15650 1
a15650 1
=back
d15654 1
a15654 1
=item $where = $self->fetch
d15658 1
a15658 1
=over 4
d15660 1
a15660 1
=item $path = $self->extract
d15664 2
d15668 1
a15668 1
=item $type = $self->get_installer_type([prefer_makefile => BOOL])
d15670 1
a15670 1
=back
d15672 1
a15672 1
=over 4
d15674 1
a15674 2
=item $dist = $self->dist([target => 'prepare|create', format =>
DISTRIBUTION_TYPE, args => {key => val}]);
d15678 1
a15678 1
=over 4
d15680 1
a15680 1
=item $bool = $mod->prepare( )
d15682 1
a15682 3
Convenience method around C<install()> that prepares a module 
without actually building it. This is equivalent to invoking C<install>
with C<target> set to C<prepare>
d15684 1
a15684 1
=back
d15686 1
a15686 1
=over 4
d15688 1
a15688 1
=item $bool = $mod->create( )
d15690 1
a15690 1
=back
d15692 1
a15692 1
=over 4
d15694 1
a15694 1
=item $bool = $mod->test( )
d15696 1
a15696 1
=back
d15698 1
a15698 1
=over 4
d15700 1
a15700 3
=item $bool = $self->install([ target => 'prepare|create|install', format
=> FORMAT_TYPE, extractdir => DIRECTORY, fetchdir => DIRECTORY, prefer_bin
=> BOOL, force => BOOL, verbose => BOOL, ..... ]);
d15702 1
a15702 1
=back
d15704 1
a15704 5
=over 4

=item $text = $self->readme

=back
d15708 1
a15708 1
=item $version = $self->installed_version()
d15710 1
a15710 1
=item $where = $self->installed_file()
d15712 1
a15712 1
=item $bool = $self->is_uptodate([version => VERSION_NUMBER])
d15716 2
d15720 1
a15720 1
=item $href = $self->details()
d15722 1
a15722 1
=back
d15724 1
a15724 1
=over 4
d15726 1
a15726 1
=item @@list = $self->contains()
d15730 3
d15735 1
a15735 1
=item @@list_of_hrefs = $self->fetch_report()
d15737 1
a15737 1
=back
d15739 1
a15739 1
=over 4
d15741 1
a15741 1
=item $bool = $self->uninstall([type => [all|man|prog])
d15745 1
a15745 1
=over 4
d15747 1
a15747 1
=item @@modobj = $self->distributions()
d15749 1
a15749 1
=back
d15751 1
a15751 1
=over 4
d15753 1
a15753 1
=item @@list = $self->files ()
d15755 1
a15755 1
=back
d15757 1
a15757 1
=over 4
d15759 1
a15759 1
=item @@list = $self->directory_tree ()
d15761 1
a15761 1
=back
d15763 1
a15763 1
=over 4
d15765 1
a15765 1
=item @@list = $self->packlist ()
d15767 1
a15767 1
=back
d15769 1
a15769 1
=over 4
d15771 1
a15771 1
=item @@list = $self->validate ()
d15773 1
a15773 1
=back
d15775 1
a15775 1
=over 4
d15777 1
a15777 5
=item $bool = $self->add_to_includepath;

=item $path = $self->best_path_to_module_build();

=back
d15781 1
a15781 1
=item BUG REPORTS
d15783 1
a15783 3
=item AUTHOR

=item COPYRIGHT
d15787 1
a15787 1
=head2 CPANPLUS::Module::Author
d15795 1
a15795 1
=item ACCESSORS
d15797 1
a15797 1
author, cpanid, email, parent
d15799 1
a15799 1
=back
d15801 1
a15801 1
=over 4
d15803 1
a15803 1
=item METHODS
d15805 1
a15805 1
=over 4
d15807 1
a15807 2
=item $auth = CPANPLUS::Module::Author->new( author => AUTHOR_NAME, cpanid
=> CPAN_ID, _id => INTERNALS_ID [, email => AUTHOR_EMAIL] )
d15809 1
a15809 1
=back
d15811 1
a15811 1
=back
d15813 1
a15813 1
=over 4
d15815 1
a15815 1
=item @@mod_objs = $auth->modules()
d15817 1
a15817 1
=back
d15819 1
a15819 1
=over 4
d15821 1
a15821 1
=item @@dists = $auth->distributions()
d15823 1
a15823 1
=back
d15825 1
a15825 1
=over 4
d15827 1
a15827 1
=item CLASS METHODS
d15831 1
a15831 1
=item accessors ()
d15833 1
a15833 1
=back
d15837 1
a15837 1
=head2 CPANPLUS::Module::Author::Fake
d15845 1
a15845 5
=item METHODS

=over 4

=item new( _id => DIGIT )
d15849 1
a15849 1
=back
d15851 1
a15851 1
=head2 CPANPLUS::Module::Checksums
d15853 1
a15853 1
=over 4
d15855 1
a15855 1
=item SYNOPSIS
d15857 1
a15857 1
=item DESCRIPTION
d15859 1
a15859 1
=item METHODS
d15863 1
a15863 3
=item $mod->checksums

=back
a15866 2
=head2 CPANPLUS::Module::Fake

d15869 1
a15869 1
=item SYNOPSIS
d15871 1
a15871 7
=item DESCRIPTION

=item METHODS

=over 4

=item new( module => $mod, path => $path, package => $pkg, [_id => DIGIT] )
d15875 1
a15875 3
=back

=head2 CPANPLUS::inc
d15879 1
a15879 7
=item DESCRIPTION

=back

=head2 CPANPLUS::inc - runtime inclusion of privately bundled modules

=over 4
a15884 15
Put a coderef at the beginning of C<@@INC>, Add the full path to the
C<CPANPLUS/inc> directory to C<$ENV{PERL5LIB>

=item METHODS

=over 4

=item CPANPLUS::inc->inc_path()

=item CPANPLUS::inc->my_path()

=item CPANPLUS::inc->installer_path()

=back

d15889 1
a15889 1
=item CPANPLUS::inc->original_perl5lib
d15891 1
a15891 5
=item CPANPLUS::inc->original_perl5opt

=item CPANPLUS::inc->original_inc

=item CPANPLUS::inc->limited_perl5opt(@@modules);
d15895 1
a15895 1
=over 4
d15897 1
a15897 1
=item CPANPLUS::inc->interesting_modules()
d15899 1
a15899 1
=back
d15903 1
a15903 1
=item INTERESTING MODULES
d15905 1
a15905 2
Loop over your @@INC, Check the version on every suitable module found in
@@INC
d15909 2
d15913 1
a15913 1
=item DEBUG
d15915 1
a15915 4
=item CAVEATS

On multiple C<use lib> calls, our coderef may not be the first in @@INC,
Non-directories in @@INC
d15919 1
a15919 1
=head2 CPANPLUSelfupdate, CPANPLUS::Selfupdate
d15921 1
a15921 1
=over 4
d15923 1
a15923 3
=item SYNOPSIS

=back
d15927 1
a15927 1
=item METHODS
d15929 1
a15929 3
=over 4

=item $self = CPANPLUS::Selfupdate->new( $backend_object );
d15933 1
a15933 1
=back
d15937 1
a15937 2
=item %list = $self->list_modules_to_update( update =>
"core|dependencies|enabled_features|features|all", [latest => BOOL] )
d15939 1
a15939 3
List which modules C<selfupdate> would upgrade. You can update either 
the core (CPANPLUS itself), the core dependencies, all features you have
currently turned on, or all features available, or everything.
d15945 3
a15947 1
=item @@features = $self->list_features
d15951 1
a15951 1
=over 4
d15953 1
a15953 1
=item @@features = $self->list_enabled_features
d15955 1
a15955 1
=back
d15959 1
a15959 1
=item @@mods = $self->modules_for_feature( FEATURE [,AS_HASH] )
d15961 1
a15961 5
=back

=over 4

=item @@mods = $self->list_core_dependencies( [AS_HASH] )
d15965 1
a15965 1
=over 4
d15967 1
a15967 3
=item @@mods = $self->list_core_modules( [AS_HASH] )

=back
d15971 1
a15971 3
=item CPANPLUS::Selfupdate::Module

=back
d15975 1
a15975 1
=item $version = $mod->version_required
d15977 1
a15977 1
=back
d15979 1
a15979 3
=over 4

=item $bool = $mod->is_installed_version_sufficient
d15983 1
a15983 1
=over 4
d15985 1
a15985 1
=item BUG REPORTS
a15988 2
=item COPYRIGHT

d15991 1
a15991 1
=head2 CPANPLUShell, CPANPLUS::Shell
d15999 1
a15999 1
=back
d16001 1
a16001 3
=over 4

=item BUG REPORTS
a16004 4
=item COPYRIGHT

=item SEE ALSO

d16007 1
a16007 2
=head2 CPANPLUShell::Classic, CPANPLUS::Shell::Classic - CPAN.pm emulation
for CPANPLUS
d16011 2
d16015 1
a16015 1
=item BUG REPORTS
d16017 1
a16017 1
=item AUTHOR
d16019 1
a16019 1
=item COPYRIGHT
d16021 1
a16021 1
=item SEE ALSO
d16023 1
a16023 1
=back
d16027 6
d16037 1
a16037 1
=head2 CPANPLUShell::Default, CPANPLUS::Shell::Default
a16044 2
=back

d16047 9
a16055 1
=item BUG REPORTS
d16057 3
a16059 1
=item AUTHOR
d16061 1
a16061 1
=item COPYRIGHT
d16063 4
a16066 1
=item SEE ALSO
d16068 1
a16068 1
=back
d16070 1
a16070 2
=head2 CPANPLUShell::Default::Plugins::CustomSource,
CPANPLUS::Shell::Default::Plugins::CustomSource 
d16072 1
a16072 1
=over 4
d16074 1
a16074 1
=item SYNOPSIS
d16076 1
a16076 2
    ### elaborate help text
    CPAN Terminal> /? cs
d16078 1
a16078 1
=item DESCRIPTION
d16082 1
a16082 3
=head2 CPANPLUShell::Default::Plugins::HOWTO,
CPANPLUS::Shell::Default::Plugins::HOWTO -- documentation on how to write
your own plugins
d16088 1
a16088 1
=item HOWTO
d16092 1
a16092 1
=item Registering Plugin Modules
d16094 1
a16094 1
=item Registering Plugin Commands
d16096 1
a16096 1
=item Registering Plugin Help
d16098 1
a16098 6
=item Arguments to Plugin Commands

Classname -- The name of your plugin class, Shell     -- The
CPANPLUS::Shell::Default object, Backend   -- The CPANPLUS::Backend object,
Command   -- The command issued by the user, Input     -- The input string
from the user, Options	 -- A hashref of options provided by the user
d16102 1
a16102 1
=item BUG REPORTS
d16104 1
a16104 1
=item AUTHOR
d16106 1
a16106 1
=item COPYRIGHT
d16108 1
a16108 1
=item SEE ALSO
d16110 1
a16110 1
=back
d16112 1
a16112 8
=head2 CPANPLUShell::Default::Plugins::Remote,
CPANPLUS::Shell::Default::Plugins::Remote

=over 4

=item SYNOPSIS

=item DESCRIPTION
d16116 1
a16116 3
=over 4

=item BUG REPORTS
d16120 1
a16120 3
=item COPYRIGHT

=item SEE ALSO
d16124 1
a16124 2
=head2 CPANPLUShell::Default::Plugins::Source,
CPANPLUS::Shell::Default::Plugins::Source 
d16132 1
a16132 1
=back
d16134 1
a16134 1
=over 4
d16136 1
a16136 1
=item BUG REPORTS
d16138 1
a16138 1
=item AUTHOR
a16141 2
=item SEE ALSO

d16144 1
a16144 2
=head2 CPANox, CPAN::Nox - Wrapper around CPAN.pm without using any XS
module
d16152 3
a16154 1
=item LICENSE
d16156 1
a16156 1
=item  SEE ALSO
d16160 1
a16160 1
=head2 Carp, carp    - warn of errors (from perspective of caller)
d16168 1
a16168 1
=over 4
d16170 1
a16170 1
=item Forcing a Stack Trace
d16172 1
a16172 1
=back
d16174 1
a16174 1
=item GLOBAL VARIABLES
d16176 1
a16176 1
=over 4
d16178 1
a16178 1
=item $Carp::MaxEvalLen
d16180 1
a16180 1
=item $Carp::MaxArgLen
d16182 1
a16182 1
=item $Carp::MaxArgNums
d16184 1
a16184 1
=item $Carp::Verbose
d16186 1
a16186 1
=item %Carp::Internal
d16188 1
a16188 1
=item %Carp::CarpInternal
d16190 1
a16190 1
=item $Carp::CarpLevel
d16192 1
a16192 1
=back
d16194 2
a16195 1
=item BUGS
d16199 1
a16199 3
=head2 Carp::Heavy - heavy machinery, no user serviceable parts inside

=head2 Class::ISA -- report the search path for a class's ISA tree
d16203 1
a16203 1
=item SYNOPSIS
d16205 1
a16205 1
=item DESCRIPTION
d16207 1
a16207 1
=item FUNCTIONS
d16209 1
a16209 3
the function Class::ISA::super_path($CLASS), the function
Class::ISA::self_and_super_path($CLASS), the function
Class::ISA::self_and_super_versions($CLASS)
d16211 1
a16211 1
=item CAUTIONARY NOTES
d16213 1
a16213 1
=item COPYRIGHT
d16215 1
a16215 1
=item AUTHOR
d16219 1
a16219 1
=head2 Class::Struct - declare struct-like datatypes as Perl classes
d16221 6
a16226 1
=over 4
d16228 1
a16228 1
=item SYNOPSIS
d16230 1
a16230 1
=item DESCRIPTION
d16232 1
a16232 1
=over 4
d16234 1
a16234 1
=item The C<struct()> function
d16236 1
a16236 1
=item Class Creation at Compile Time
d16238 1
a16238 1
=item Element Types and Accessor Methods
d16240 1
a16240 2
Scalar (C<'$'> or C<'*$'>), Array (C<'@@'> or C<'*@@'>), Hash (C<'%'> or
C<'*%'>), Class (C<'Class_Name'> or C<'*Class_Name'>)
d16242 1
a16242 1
=item Initializing with C<new>
d16246 1
a16246 10
=item EXAMPLES

Example 1, Example 2, Example 3

=item Author and Modification History

=back

=head2 Compress::Raw::Zlib - Low-Level Interface to zlib compression
library
d16250 2
a16251 1
=item SYNOPSIS
d16253 1
a16253 1
=item DESCRIPTION
d16255 1
a16255 1
=item Compress::Raw::Zlib::Deflate
d16257 1
a16257 1
=over 4
d16259 1
a16259 1
=item B<($d, $status) = new Compress::Raw::Zlib::Deflate( [OPT] ) >
d16261 1
a16261 2
B<-Level>, B<-Method>, B<-WindowBits>, B<-MemLevel>, B<-Strategy>,
B<-Dictionary>, B<-Bufsize>, B<-AppendOutput>, B<-CRC32>, B<-ADLER32>
d16263 1
a16263 1
=item B<$status = $d-E<gt>deflate($input, $output)>
d16265 1
a16265 1
=item B<$status = $d-E<gt>flush($output [, $flush_type]) >
d16267 2
a16268 1
=item B<$status = $d-E<gt>deflateParams([OPT])>
d16270 1
a16270 1
B<-Level>, B<-Strategy>, B<-BufSize>
d16272 1
a16272 2
=item B<$status = $d-E<gt>deflateTune($good_length, $max_lazy,
$nice_length, $max_chain)>
d16274 1
a16274 1
=item B<$d-E<gt>dict_adler()>
d16276 1
a16276 1
=item B<$d-E<gt>crc32()>
d16278 1
a16278 1
=item B<$d-E<gt>adler32()>
d16280 1
a16280 1
=item B<$d-E<gt>msg()>
d16282 1
a16282 1
=item B<$d-E<gt>total_in()>
d16284 1
a16284 1
=item B<$d-E<gt>total_out()>
d16286 1
a16286 1
=item B<$d-E<gt>get_Strategy()>
d16288 1
a16288 1
=item B<$d-E<gt>get_Level()>
d16290 1
a16290 1
=item B<$d-E<gt>get_BufSize()>
d16292 1
a16292 1
=item Example
d16296 1
a16296 1
=item Compress::Raw::Zlib::Inflate
d16298 1
a16298 1
=over 4
d16300 1
a16300 1
=item B< ($i, $status) = new Compress::Raw::Zlib::Inflate( [OPT] ) >
d16302 1
a16302 2
B<-WindowBits>, B<-Bufsize>, B<-Dictionary>, B<-AppendOutput>, B<-CRC32>,
B<-ADLER32>, B<-ConsumeInput>
d16304 1
a16304 1
=item B< $status = $i-E<gt>inflate($input, $output [,$eof]) >
d16306 1
a16306 1
=item B<$status = $i-E<gt>inflateSync($input)>
d16308 1
a16308 1
=item B<$i-E<gt>dict_adler()>
d16310 1
a16310 13
=item B<$i-E<gt>crc32()>

=item B<$i-E<gt>adler32()>

=item B<$i-E<gt>msg()>

=item B<$i-E<gt>total_in()>

=item B<$i-E<gt>total_out()>

=item B<$d-E<gt>get_BufSize()>

=item Example
d16314 2
a16315 1
=item CHECKSUM FUNCTIONS
d16317 1
a16317 1
=item ACCESSING ZIP FILES
d16319 1
a16319 1
=item CONSTANTS
d16321 1
a16321 7
=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE
d16325 2
a16326 2
=head2 Compress::Raw::Zlib::Compress::Raw::Zlib, Compress::Raw::Zlib -
Low-Level Interface to zlib compression library
d16334 1
a16334 1
=item Compress::Raw::Zlib::Deflate
d16336 1
a16336 1
=over 4
d16338 1
a16338 1
=item B<($d, $status) = new Compress::Raw::Zlib::Deflate( [OPT] ) >
d16340 1
a16340 2
B<-Level>, B<-Method>, B<-WindowBits>, B<-MemLevel>, B<-Strategy>,
B<-Dictionary>, B<-Bufsize>, B<-AppendOutput>, B<-CRC32>, B<-ADLER32>
d16342 1
a16342 1
=item B<$status = $d-E<gt>deflate($input, $output)>
d16344 1
a16344 1
=item B<$status = $d-E<gt>flush($output [, $flush_type]) >
d16346 1
a16346 1
=item B<$status = $d-E<gt>deflateParams([OPT])>
d16348 1
a16348 1
B<-Level>, B<-Strategy>, B<-BufSize>
d16350 1
a16350 2
=item B<$status = $d-E<gt>deflateTune($good_length, $max_lazy,
$nice_length, $max_chain)>
d16352 1
a16352 1
=item B<$d-E<gt>dict_adler()>
d16354 1
a16354 1
=item B<$d-E<gt>crc32()>
d16356 2
a16357 1
=item B<$d-E<gt>adler32()>
d16359 1
a16359 1
=item B<$d-E<gt>msg()>
d16361 1
a16361 1
=item B<$d-E<gt>total_in()>
d16363 1
a16363 1
=item B<$d-E<gt>total_out()>
d16365 1
a16365 1
=item B<$d-E<gt>get_Strategy()>
d16367 1
a16367 1
=item B<$d-E<gt>get_Level()>
d16369 1
a16369 3
=item B<$d-E<gt>get_BufSize()>

=item Example
d16373 1
a16373 1
=item Compress::Raw::Zlib::Inflate
d16377 1
a16377 1
=item B< ($i, $status) = new Compress::Raw::Zlib::Inflate( [OPT] ) >
d16379 1
a16379 2
B<-WindowBits>, B<-Bufsize>, B<-Dictionary>, B<-AppendOutput>, B<-CRC32>,
B<-ADLER32>, B<-ConsumeInput>
d16381 1
a16381 1
=item B< $status = $i-E<gt>inflate($input, $output [,$eof]) >
d16383 1
a16383 1
=item B<$status = $i-E<gt>inflateSync($input)>
d16385 1
a16385 1
=item B<$i-E<gt>dict_adler()>
d16387 1
a16387 1
=item B<$i-E<gt>crc32()>
d16389 1
a16389 1
=item B<$i-E<gt>adler32()>
d16391 1
a16391 1
=item B<$i-E<gt>msg()>
d16393 1
a16393 1
=item B<$i-E<gt>total_in()>
d16395 1
a16395 1
=item B<$i-E<gt>total_out()>
d16397 1
a16397 1
=item B<$d-E<gt>get_BufSize()>
d16399 1
a16399 1
=item Example
d16401 1
a16401 1
=back
d16403 1
a16403 1
=item CHECKSUM FUNCTIONS
d16405 4
a16408 5205
=item ACCESSING ZIP FILES

=item CONSTANTS

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 Compress::Zlib - Interface to zlib compression library

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Notes for users of Compress::Zlib version 1

=back

=item GZIP INTERFACE

B<$gz = gzopen($filename, $mode)>, B<$gz = gzopen($filehandle, $mode)>,
B<$bytesread = $gz-E<gt>gzread($buffer [, $size]) ;>, B<$bytesread =
$gz-E<gt>gzreadline($line) ;>, B<$byteswritten = $gz-E<gt>gzwrite($buffer)
;>, B<$status = $gz-E<gt>gzflush($flush_type) ;>, B<$offset =
$gz-E<gt>gztell() ;>, B<$status = $gz-E<gt>gzseek($offset, $whence) ;>,
B<$gz-E<gt>gzclose>, B<$gz-E<gt>gzsetparams($level, $strategy>, B<$level>,
B<$strategy>, B<$gz-E<gt>gzerror>, B<$gzerrno>

=over 4

=item Examples

=item Compress::Zlib::memGzip

=item Compress::Zlib::memGunzip

=back

=item COMPRESS/UNCOMPRESS

B<$dest = compress($source [, $level] ) ;>, B<$dest = uncompress($source)
;>

=item Deflate Interface

=over 4

=item B<($d, $status) = deflateInit( [OPT] )>

B<-Level>, B<-Method>, B<-WindowBits>, B<-MemLevel>, B<-Strategy>,
B<-Dictionary>, B<-Bufsize>

=item B<($out, $status) = $d-E<gt>deflate($buffer)>

=item B<($out, $status) = $d-E<gt>flush([flush_type])>

=item B<$status = $d-E<gt>deflateParams([OPT])>

B<-Level>, B<-Strategy>

=item B<$d-E<gt>dict_adler()>

=item B<$d-E<gt>msg()>

=item B<$d-E<gt>total_in()>

=item B<$d-E<gt>total_out()>

=item Example

=back

=item Inflate Interface

=over 4

=item B<($i, $status) = inflateInit()>

B<-WindowBits>, B<-Bufsize>, B<-Dictionary>

=item B<($out, $status) = $i-E<gt>inflate($buffer)>

=item B<$status = $i-E<gt>inflateSync($buffer)>

=item B<$i-E<gt>dict_adler()>

=item B<$i-E<gt>msg()>

=item B<$i-E<gt>total_in()>

=item B<$i-E<gt>total_out()>

=item Example

=back

=item CHECKSUM FUNCTIONS

=item CONSTANTS

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 Compress::Zlib::Compress::Zlib, Compress::Zlib - Interface to zlib
compression library

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Notes for users of Compress::Zlib version 1

=back

=item GZIP INTERFACE

B<$gz = gzopen($filename, $mode)>, B<$gz = gzopen($filehandle, $mode)>,
B<$bytesread = $gz-E<gt>gzread($buffer [, $size]) ;>, B<$bytesread =
$gz-E<gt>gzreadline($line) ;>, B<$byteswritten = $gz-E<gt>gzwrite($buffer)
;>, B<$status = $gz-E<gt>gzflush($flush_type) ;>, B<$offset =
$gz-E<gt>gztell() ;>, B<$status = $gz-E<gt>gzseek($offset, $whence) ;>,
B<$gz-E<gt>gzclose>, B<$gz-E<gt>gzsetparams($level, $strategy>, B<$level>,
B<$strategy>, B<$gz-E<gt>gzerror>, B<$gzerrno>

=over 4

=item Examples

=item Compress::Zlib::memGzip

=item Compress::Zlib::memGunzip

=back

=item COMPRESS/UNCOMPRESS

B<$dest = compress($source [, $level] ) ;>, B<$dest = uncompress($source)
;>

=item Deflate Interface

=over 4

=item B<($d, $status) = deflateInit( [OPT] )>

B<-Level>, B<-Method>, B<-WindowBits>, B<-MemLevel>, B<-Strategy>,
B<-Dictionary>, B<-Bufsize>

=item B<($out, $status) = $d-E<gt>deflate($buffer)>

=item B<($out, $status) = $d-E<gt>flush([flush_type])>

=item B<$status = $d-E<gt>deflateParams([OPT])>

B<-Level>, B<-Strategy>

=item B<$d-E<gt>dict_adler()>

=item B<$d-E<gt>msg()>

=item B<$d-E<gt>total_in()>

=item B<$d-E<gt>total_out()>

=item Example

=back

=item Inflate Interface

=over 4

=item B<($i, $status) = inflateInit()>

B<-WindowBits>, B<-Bufsize>, B<-Dictionary>

=item B<($out, $status) = $i-E<gt>inflate($buffer)>

=item B<$status = $i-E<gt>inflateSync($buffer)>

=item B<$i-E<gt>dict_adler()>

=item B<$i-E<gt>msg()>

=item B<$i-E<gt>total_in()>

=item B<$i-E<gt>total_out()>

=item Example

=back

=item CHECKSUM FUNCTIONS

=item CONSTANTS

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 Config - access Perl configuration information

=over 4

=item SYNOPSIS

=item DESCRIPTION

myconfig(), config_sh(), config_re($regex), config_vars(@@names)

=item EXAMPLE

=item WARNING

=item GLOSSARY

=over 4

=item _

C<_a>, C<_exe>, C<_o>

=item a

C<afs>, C<afsroot>, C<alignbytes>, C<ansi2knr>, C<aphostname>,
C<api_revision>, C<api_subversion>, C<api_version>, C<api_versionstring>,
C<ar>, C<archlib>, C<archlibexp>, C<archname>, C<archname64>, C<archobjs>,
C<asctime_r_proto>, C<awk>

=item b

C<baserev>, C<bash>, C<bin>, C<binexp>, C<bison>, C<byacc>, C<byteorder>

=item c

C<c>, C<castflags>, C<cat>, C<cc>, C<cccdlflags>, C<ccdlflags>, C<ccflags>,
C<ccflags_uselargefiles>, C<ccname>, C<ccsymbols>, C<ccversion>, C<cf_by>,
C<cf_email>, C<cf_time>, C<chgrp>, C<chmod>, C<chown>, C<clocktype>,
C<comm>, C<compress>, C<contains>, C<cp>, C<cpio>, C<cpp>, C<cpp_stuff>,
C<cppccsymbols>, C<cppflags>, C<cpplast>, C<cppminus>, C<cpprun>,
C<cppstdin>, C<cppsymbols>, C<crypt_r_proto>, C<cryptlib>, C<csh>,
C<ctermid_r_proto>, C<ctime_r_proto>

=item d

C<d__fwalk>, C<d_access>, C<d_accessx>, C<d_aintl>, C<d_alarm>,
C<d_archlib>, C<d_asctime_r>, C<d_atolf>, C<d_atoll>,
C<d_attribute_format>, C<d_attribute_malloc>, C<d_attribute_nonnull>,
C<d_attribute_noreturn>, C<d_attribute_pure>, C<d_attribute_unused>,
C<d_attribute_warn_unused_result>, C<d_bcmp>, C<d_bcopy>, C<d_bsd>,
C<d_bsdgetpgrp>, C<d_bsdsetpgrp>, C<d_builtin_choose_expr>,
C<d_builtin_expect>, C<d_bzero>, C<d_c99_variadic_macros>, C<d_casti32>,
C<d_castneg>, C<d_charvspr>, C<d_chown>, C<d_chroot>, C<d_chsize>,
C<d_class>, C<d_clearenv>, C<d_closedir>, C<d_cmsghdr_s>, C<d_const>,
C<d_copysignl>, C<d_cplusplus>, C<d_crypt>, C<d_crypt_r>, C<d_csh>,
C<d_ctermid>, C<d_ctermid_r>, C<d_ctime_r>, C<d_cuserid>, C<d_dbl_dig>,
C<d_dbminitproto>, C<d_difftime>, C<d_dir_dd_fd>, C<d_dirfd>,
C<d_dirnamlen>, C<d_dlerror>, C<d_dlopen>, C<d_dlsymun>, C<d_dosuid>,
C<d_drand48_r>, C<d_drand48proto>, C<d_dup2>, C<d_eaccess>, C<d_endgrent>,
C<d_endgrent_r>, C<d_endhent>, C<d_endhostent_r>, C<d_endnent>,
C<d_endnetent_r>, C<d_endpent>, C<d_endprotoent_r>, C<d_endpwent>,
C<d_endpwent_r>, C<d_endsent>, C<d_endservent_r>, C<d_eofnblk>,
C<d_eunice>, C<d_faststdio>, C<d_fchdir>, C<d_fchmod>, C<d_fchown>,
C<d_fcntl>, C<d_fcntl_can_lock>, C<d_fd_macros>, C<d_fd_set>,
C<d_fds_bits>, C<d_fgetpos>, C<d_finite>, C<d_finitel>, C<d_flexfnam>,
C<d_flock>, C<d_flockproto>, C<d_fork>, C<d_fp_class>, C<d_fpathconf>,
C<d_fpclass>, C<d_fpclassify>, C<d_fpclassl>, C<d_fpos64_t>, C<d_frexpl>,
C<d_fs_data_s>, C<d_fseeko>, C<d_fsetpos>, C<d_fstatfs>, C<d_fstatvfs>,
C<d_fsync>, C<d_ftello>, C<d_ftime>, C<d_futimes>, C<d_Gconvert>,
C<d_getcwd>, C<d_getespwnam>, C<d_getfsstat>, C<d_getgrent>,
C<d_getgrent_r>, C<d_getgrgid_r>, C<d_getgrnam_r>, C<d_getgrps>,
C<d_gethbyaddr>, C<d_gethbyname>, C<d_gethent>, C<d_gethname>,
C<d_gethostbyaddr_r>, C<d_gethostbyname_r>, C<d_gethostent_r>,
C<d_gethostprotos>, C<d_getitimer>, C<d_getlogin>, C<d_getlogin_r>,
C<d_getmnt>, C<d_getmntent>, C<d_getnbyaddr>, C<d_getnbyname>,
C<d_getnent>, C<d_getnetbyaddr_r>, C<d_getnetbyname_r>, C<d_getnetent_r>,
C<d_getnetprotos>, C<d_getpagsz>, C<d_getpbyname>, C<d_getpbynumber>,
C<d_getpent>, C<d_getpgid>, C<d_getpgrp>, C<d_getpgrp2>, C<d_getppid>,
C<d_getprior>, C<d_getprotobyname_r>, C<d_getprotobynumber_r>,
C<d_getprotoent_r>, C<d_getprotoprotos>, C<d_getprpwnam>, C<d_getpwent>,
C<d_getpwent_r>, C<d_getpwnam_r>, C<d_getpwuid_r>, C<d_getsbyname>,
C<d_getsbyport>, C<d_getsent>, C<d_getservbyname_r>, C<d_getservbyport_r>,
C<d_getservent_r>, C<d_getservprotos>, C<d_getspnam>, C<d_getspnam_r>,
C<d_gettimeod>, C<d_gmtime_r>, C<d_gnulibc>, C<d_grpasswd>, C<d_hasmntopt>,
C<d_htonl>, C<d_ilogbl>, C<d_inc_version_list>, C<d_index>, C<d_inetaton>,
C<d_int64_t>, C<d_isascii>, C<d_isfinite>, C<d_isinf>, C<d_isnan>,
C<d_isnanl>, C<d_killpg>, C<d_lchown>, C<d_ldbl_dig>,
C<d_libm_lib_version>, C<d_link>, C<d_localtime_r>,
C<d_localtime_r_needs_tzset>, C<d_locconv>, C<d_lockf>, C<d_longdbl>,
C<d_longlong>, C<d_lseekproto>, C<d_lstat>, C<d_madvise>,
C<d_malloc_good_size>, C<d_malloc_size>, C<d_mblen>, C<d_mbstowcs>,
C<d_mbtowc>, C<d_memchr>, C<d_memcmp>, C<d_memcpy>, C<d_memmove>,
C<d_memset>, C<d_mkdir>, C<d_mkdtemp>, C<d_mkfifo>, C<d_mkstemp>,
C<d_mkstemps>, C<d_mktime>, C<d_mmap>, C<d_modfl>, C<d_modfl_pow32_bug>,
C<d_modflproto>, C<d_mprotect>, C<d_msg>, C<d_msg_ctrunc>,
C<d_msg_dontroute>, C<d_msg_oob>, C<d_msg_peek>, C<d_msg_proxy>,
C<d_msgctl>, C<d_msgget>, C<d_msghdr_s>, C<d_msgrcv>, C<d_msgsnd>,
C<d_msync>, C<d_munmap>, C<d_mymalloc>, C<d_nice>, C<d_nl_langinfo>,
C<d_nv_preserves_uv>, C<d_nv_zero_is_allbits_zero>, C<d_off64_t>,
C<d_old_pthread_create_joinable>, C<d_oldpthreads>, C<d_oldsock>,
C<d_open3>, C<d_pathconf>, C<d_pause>, C<d_perl_otherlibdirs>,
C<d_phostname>, C<d_pipe>, C<d_poll>, C<d_portable>, C<d_PRId64>,
C<d_PRIeldbl>, C<d_PRIEUldbl>, C<d_PRIfldbl>, C<d_PRIFUldbl>,
C<d_PRIgldbl>, C<d_PRIGUldbl>, C<d_PRIi64>, C<d_printf_format_null>,
C<d_PRIo64>, C<d_PRIu64>, C<d_PRIx64>, C<d_PRIXU64>, C<d_procselfexe>,
C<d_pseudofork>, C<d_pthread_atfork>, C<d_pthread_attr_setscope>,
C<d_pthread_yield>, C<d_pwage>, C<d_pwchange>, C<d_pwclass>,
C<d_pwcomment>, C<d_pwexpire>, C<d_pwgecos>, C<d_pwpasswd>, C<d_pwquota>,
C<d_qgcvt>, C<d_quad>, C<d_random_r>, C<d_readdir>, C<d_readdir64_r>,
C<d_readdir_r>, C<d_readlink>, C<d_readv>, C<d_recvmsg>, C<d_rename>,
C<d_rewinddir>, C<d_rmdir>, C<d_safebcpy>, C<d_safemcpy>, C<d_sanemcmp>,
C<d_sbrkproto>, C<d_scalbnl>, C<d_sched_yield>, C<d_scm_rights>,
C<d_SCNfldbl>, C<d_seekdir>, C<d_select>, C<d_sem>, C<d_semctl>,
C<d_semctl_semid_ds>, C<d_semctl_semun>, C<d_semget>, C<d_semop>,
C<d_sendmsg>, C<d_setegid>, C<d_seteuid>, C<d_setgrent>, C<d_setgrent_r>,
C<d_setgrps>, C<d_sethent>, C<d_sethostent_r>, C<d_setitimer>,
C<d_setlinebuf>, C<d_setlocale>, C<d_setlocale_r>, C<d_setnent>,
C<d_setnetent_r>, C<d_setpent>, C<d_setpgid>, C<d_setpgrp>, C<d_setpgrp2>,
C<d_setprior>, C<d_setproctitle>, C<d_setprotoent_r>, C<d_setpwent>,
C<d_setpwent_r>, C<d_setregid>, C<d_setresgid>, C<d_setresuid>,
C<d_setreuid>, C<d_setrgid>, C<d_setruid>, C<d_setsent>, C<d_setservent_r>,
C<d_setsid>, C<d_setvbuf>, C<d_sfio>, C<d_shm>, C<d_shmat>,
C<d_shmatprototype>, C<d_shmctl>, C<d_shmdt>, C<d_shmget>, C<d_sigaction>,
C<d_signbit>, C<d_sigprocmask>, C<d_sigsetjmp>, C<d_sitearch>,
C<d_snprintf>, C<d_sockatmark>, C<d_sockatmarkproto>, C<d_socket>,
C<d_socklen_t>, C<d_sockpair>, C<d_socks5_init>,
C<d_sprintf_returns_strlen>, C<d_sqrtl>, C<d_srand48_r>, C<d_srandom_r>,
C<d_sresgproto>, C<d_sresuproto>, C<d_statblks>, C<d_statfs_f_flags>,
C<d_statfs_s>, C<d_statvfs>, C<d_stdio_cnt_lval>, C<d_stdio_ptr_lval>,
C<d_stdio_ptr_lval_nochange_cnt>, C<d_stdio_ptr_lval_sets_cnt>,
C<d_stdio_stream_array>, C<d_stdiobase>, C<d_stdstdio>, C<d_strchr>,
C<d_strcoll>, C<d_strctcpy>, C<d_strerrm>, C<d_strerror>, C<d_strerror_r>,
C<d_strftime>, C<d_strlcat>, C<d_strlcpy>, C<d_strtod>, C<d_strtol>,
C<d_strtold>, C<d_strtoll>, C<d_strtoq>, C<d_strtoul>, C<d_strtoull>,
C<d_strtouq>, C<d_strxfrm>, C<d_suidsafe>, C<d_symlink>, C<d_syscall>,
C<d_syscallproto>, C<d_sysconf>, C<d_sysernlst>, C<d_syserrlst>,
C<d_system>, C<d_tcgetpgrp>, C<d_tcsetpgrp>, C<d_telldir>,
C<d_telldirproto>, C<d_time>, C<d_times>, C<d_tm_tm_gmtoff>,
C<d_tm_tm_zone>, C<d_tmpnam_r>, C<d_truncate>, C<d_ttyname_r>, C<d_tzname>,
C<d_u32align>, C<d_ualarm>, C<d_umask>, C<d_uname>, C<d_union_semun>,
C<d_unordered>, C<d_unsetenv>, C<d_usleep>, C<d_usleepproto>, C<d_ustat>,
C<d_vendorarch>, C<d_vendorbin>, C<d_vendorlib>, C<d_vendorscript>,
C<d_vfork>, C<d_void_closedir>, C<d_voidsig>, C<d_voidtty>, C<d_volatile>,
C<d_vprintf>, C<d_vsnprintf>, C<d_wait4>, C<d_waitpid>, C<d_wcstombs>,
C<d_wctomb>, C<d_writev>, C<d_xenix>, C<date>, C<db_hashtype>,
C<db_prefixtype>, C<db_version_major>, C<db_version_minor>,
C<db_version_patch>, C<defvoidused>, C<direntrytype>, C<dlext>, C<dlsrc>,
C<doublesize>, C<drand01>, C<drand48_r_proto>, C<dynamic_ext>

=item e

C<eagain>, C<ebcdic>, C<echo>, C<egrep>, C<emacs>, C<endgrent_r_proto>,
C<endhostent_r_proto>, C<endnetent_r_proto>, C<endprotoent_r_proto>,
C<endpwent_r_proto>, C<endservent_r_proto>, C<eunicefix>, C<exe_ext>,
C<expr>, C<extensions>, C<extras>

=item f

C<fflushall>, C<fflushNULL>, C<find>, C<firstmakefile>, C<flex>,
C<fpossize>, C<fpostype>, C<freetype>, C<from>, C<full_ar>, C<full_csh>,
C<full_sed>

=item g

C<gccansipedantic>, C<gccosandvers>, C<gccversion>, C<getgrent_r_proto>,
C<getgrgid_r_proto>, C<getgrnam_r_proto>, C<gethostbyaddr_r_proto>,
C<gethostbyname_r_proto>, C<gethostent_r_proto>, C<getlogin_r_proto>,
C<getnetbyaddr_r_proto>, C<getnetbyname_r_proto>, C<getnetent_r_proto>,
C<getprotobyname_r_proto>, C<getprotobynumber_r_proto>,
C<getprotoent_r_proto>, C<getpwent_r_proto>, C<getpwnam_r_proto>,
C<getpwuid_r_proto>, C<getservbyname_r_proto>, C<getservbyport_r_proto>,
C<getservent_r_proto>, C<getspnam_r_proto>, C<gidformat>, C<gidsign>,
C<gidsize>, C<gidtype>, C<glibpth>, C<gmake>, C<gmtime_r_proto>,
C<gnulibc_version>, C<grep>, C<groupcat>, C<groupstype>, C<gzip>

=item h

C<h_fcntl>, C<h_sysfile>, C<hint>, C<hostcat>, C<html1dir>, C<html1direxp>,
C<html3dir>, C<html3direxp>

=item i

C<i16size>, C<i16type>, C<i32size>, C<i32type>, C<i64size>, C<i64type>,
C<i8size>, C<i8type>, C<i_arpainet>, C<i_bsdioctl>, C<i_crypt>, C<i_db>,
C<i_dbm>, C<i_dirent>, C<i_dld>, C<i_dlfcn>, C<i_fcntl>, C<i_float>,
C<i_fp>, C<i_fp_class>, C<i_gdbm>, C<i_grp>, C<i_ieeefp>, C<i_inttypes>,
C<i_langinfo>, C<i_libutil>, C<i_limits>, C<i_locale>, C<i_machcthr>,
C<i_malloc>, C<i_math>, C<i_memory>, C<i_mntent>, C<i_ndbm>, C<i_netdb>,
C<i_neterrno>, C<i_netinettcp>, C<i_niin>, C<i_poll>, C<i_prot>,
C<i_pthread>, C<i_pwd>, C<i_rpcsvcdbm>, C<i_sfio>, C<i_sgtty>, C<i_shadow>,
C<i_socks>, C<i_stdarg>, C<i_stddef>, C<i_stdlib>, C<i_string>,
C<i_sunmath>, C<i_sysaccess>, C<i_sysdir>, C<i_sysfile>, C<i_sysfilio>,
C<i_sysin>, C<i_sysioctl>, C<i_syslog>, C<i_sysmman>, C<i_sysmode>,
C<i_sysmount>, C<i_sysndir>, C<i_sysparam>, C<i_sysresrc>, C<i_syssecrt>,
C<i_sysselct>, C<i_syssockio>, C<i_sysstat>, C<i_sysstatfs>,
C<i_sysstatvfs>, C<i_systime>, C<i_systimek>, C<i_systimes>, C<i_systypes>,
C<i_sysuio>, C<i_sysun>, C<i_sysutsname>, C<i_sysvfs>, C<i_syswait>,
C<i_termio>, C<i_termios>, C<i_time>, C<i_unistd>, C<i_ustat>, C<i_utime>,
C<i_values>, C<i_varargs>, C<i_varhdr>, C<i_vfork>,
C<ignore_versioned_solibs>, C<inc_version_list>, C<inc_version_list_init>,
C<incpath>, C<inews>, C<initialinstalllocation>, C<installarchlib>,
C<installbin>, C<installhtml1dir>, C<installhtml3dir>, C<installman1dir>,
C<installman3dir>, C<installprefix>, C<installprefixexp>,
C<installprivlib>, C<installscript>, C<installsitearch>, C<installsitebin>,
C<installsitehtml1dir>, C<installsitehtml3dir>, C<installsitelib>,
C<installsiteman1dir>, C<installsiteman3dir>, C<installsitescript>,
C<installstyle>, C<installusrbinperl>, C<installvendorarch>,
C<installvendorbin>, C<installvendorhtml1dir>, C<installvendorhtml3dir>,
C<installvendorlib>, C<installvendorman1dir>, C<installvendorman3dir>,
C<installvendorscript>, C<intsize>, C<issymlink>, C<ivdformat>, C<ivsize>,
C<ivtype>

=item k

C<known_extensions>, C<ksh>

=item l

C<ld>, C<lddlflags>, C<ldflags>, C<ldflags_uselargefiles>, C<ldlibpthname>,
C<less>, C<lib_ext>, C<libc>, C<libperl>, C<libpth>, C<libs>, C<libsdirs>,
C<libsfiles>, C<libsfound>, C<libspath>, C<libswanted>,
C<libswanted_uselargefiles>, C<line>, C<lint>, C<lkflags>, C<ln>, C<lns>,
C<localtime_r_proto>, C<locincpth>, C<loclibpth>, C<longdblsize>,
C<longlongsize>, C<longsize>, C<lp>, C<lpr>, C<ls>, C<lseeksize>,
C<lseektype>

=item m

C<mad>, C<madlyh>, C<madlyobj>, C<madlysrc>, C<mail>, C<mailx>, C<make>,
C<make_set_make>, C<mallocobj>, C<mallocsrc>, C<malloctype>, C<man1dir>,
C<man1direxp>, C<man1ext>, C<man3dir>, C<man3direxp>, C<man3ext>

=item M

C<Mcc>, C<mips_type>, C<mistrustnm>, C<mkdir>, C<mmaptype>, C<modetype>,
C<more>, C<multiarch>, C<mv>, C<myarchname>, C<mydomain>, C<myhostname>,
C<myuname>

=item n

C<n>, C<need_va_copy>, C<netdb_hlen_type>, C<netdb_host_type>,
C<netdb_name_type>, C<netdb_net_type>, C<nm>, C<nm_opt>, C<nm_so_opt>,
C<nonxs_ext>, C<nroff>, C<nv_preserves_uv_bits>, C<nveformat>,
C<nvEUformat>, C<nvfformat>, C<nvFUformat>, C<nvgformat>, C<nvGUformat>,
C<nvsize>, C<nvtype>

=item o

C<o_nonblock>, C<obj_ext>, C<old_pthread_create_joinable>, C<optimize>,
C<orderlib>, C<osname>, C<osvers>, C<otherlibdirs>

=item p

C<package>, C<pager>, C<passcat>, C<patchlevel>, C<path_sep>, C<perl>,
C<perl5>

=item P

C<PERL_API_REVISION>, C<PERL_API_SUBVERSION>, C<PERL_API_VERSION>,
C<PERL_CONFIG_SH>, C<PERL_PATCHLEVEL>, C<perl_patchlevel>,
C<PERL_REVISION>, C<PERL_SUBVERSION>, C<PERL_VERSION>, C<perladmin>,
C<perllibs>, C<perlpath>, C<pg>, C<phostname>, C<pidtype>, C<plibpth>,
C<pmake>, C<pr>, C<prefix>, C<prefixexp>, C<privlib>, C<privlibexp>,
C<procselfexe>, C<prototype>, C<ptrsize>

=item q

C<quadkind>, C<quadtype>

=item r

C<randbits>, C<randfunc>, C<random_r_proto>, C<randseedtype>, C<ranlib>,
C<rd_nodata>, C<readdir64_r_proto>, C<readdir_r_proto>, C<revision>, C<rm>,
C<rm_try>, C<rmail>, C<run>, C<runnm>

=item s

C<sched_yield>, C<scriptdir>, C<scriptdirexp>, C<sed>, C<seedfunc>,
C<selectminbits>, C<selecttype>, C<sendmail>, C<setgrent_r_proto>,
C<sethostent_r_proto>, C<setlocale_r_proto>, C<setnetent_r_proto>,
C<setprotoent_r_proto>, C<setpwent_r_proto>, C<setservent_r_proto>, C<sh>,
C<shar>, C<sharpbang>, C<shmattype>, C<shortsize>, C<shrpenv>, C<shsharp>,
C<sig_count>, C<sig_name>, C<sig_name_init>, C<sig_num>, C<sig_num_init>,
C<sig_size>, C<signal_t>, C<sitearch>, C<sitearchexp>, C<sitebin>,
C<sitebinexp>, C<sitehtml1dir>, C<sitehtml1direxp>, C<sitehtml3dir>,
C<sitehtml3direxp>, C<sitelib>, C<sitelib_stem>, C<sitelibexp>,
C<siteman1dir>, C<siteman1direxp>, C<siteman3dir>, C<siteman3direxp>,
C<siteprefix>, C<siteprefixexp>, C<sitescript>, C<sitescriptexp>,
C<sizesize>, C<sizetype>, C<sleep>, C<smail>, C<so>, C<sockethdr>,
C<socketlib>, C<socksizetype>, C<sort>, C<spackage>, C<spitshell>,
C<sPRId64>, C<sPRIeldbl>, C<sPRIEUldbl>, C<sPRIfldbl>, C<sPRIFUldbl>,
C<sPRIgldbl>, C<sPRIGUldbl>, C<sPRIi64>, C<sPRIo64>, C<sPRIu64>,
C<sPRIx64>, C<sPRIXU64>, C<srand48_r_proto>, C<srandom_r_proto>, C<src>,
C<sSCNfldbl>, C<ssizetype>, C<startperl>, C<startsh>, C<static_ext>,
C<stdchar>, C<stdio_base>, C<stdio_bufsiz>, C<stdio_cnt>, C<stdio_filbuf>,
C<stdio_ptr>, C<stdio_stream_array>, C<strerror_r_proto>, C<strings>,
C<submit>, C<subversion>, C<sysman>

=item t

C<tail>, C<tar>, C<targetarch>, C<tbl>, C<tee>, C<test>, C<timeincl>,
C<timetype>, C<tmpnam_r_proto>, C<to>, C<touch>, C<tr>, C<trnl>, C<troff>,
C<ttyname_r_proto>

=item u

C<u16size>, C<u16type>, C<u32size>, C<u32type>, C<u64size>, C<u64type>,
C<u8size>, C<u8type>, C<uidformat>, C<uidsign>, C<uidsize>, C<uidtype>,
C<uname>, C<uniq>, C<uquadtype>, C<use5005threads>, C<use64bitall>,
C<use64bitint>, C<usecrosscompile>, C<usedl>, C<usefaststdio>,
C<useithreads>, C<uselargefiles>, C<uselongdouble>, C<usemallocwrap>,
C<usemorebits>, C<usemultiplicity>, C<usemymalloc>, C<usenm>, C<useopcode>,
C<useperlio>, C<useposix>, C<usereentrant>, C<userelocatableinc>,
C<usesfio>, C<useshrplib>, C<usesitecustomize>, C<usesocks>, C<usethreads>,
C<usevendorprefix>, C<usevfork>, C<usrinc>, C<uuname>, C<uvoformat>,
C<uvsize>, C<uvtype>, C<uvuformat>, C<uvxformat>, C<uvXUformat>

=item v

C<vendorarch>, C<vendorarchexp>, C<vendorbin>, C<vendorbinexp>,
C<vendorhtml1dir>, C<vendorhtml1direxp>, C<vendorhtml3dir>,
C<vendorhtml3direxp>, C<vendorlib>, C<vendorlib_stem>, C<vendorlibexp>,
C<vendorman1dir>, C<vendorman1direxp>, C<vendorman3dir>,
C<vendorman3direxp>, C<vendorprefix>, C<vendorprefixexp>, C<vendorscript>,
C<vendorscriptexp>, C<version>, C<version_patchlevel_string>,
C<versiononly>, C<vi>, C<voidflags>

=item x

C<xlibpth>

=item y

C<yacc>, C<yaccflags>

=item z

C<zcat>, C<zip>

=back

=item NOTE

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

dynamic, nonxs, static

=item AUTHOR

=back

=head2 Cwd - get pathname of current working directory

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item getcwd and friends

getcwd, cwd, fastcwd, fastgetcwd, getdcwd

=item abs_path and friends

abs_path, realpath, fast_abs_path

=item $ENV{PWD}

=back

=item NOTES

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 DB - programmatic interface to the Perl debugging API

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Global Variables

 $DB::sub,  %DB::sub,  $DB::single,  $DB::signal,  $DB::trace,	@@DB::args, 
@@DB::dbline,  %DB::dbline,  $DB::package,  $DB::filename,  $DB::subname, 
$DB::lineno

=item API Methods

CLIENT->register(), CLIENT->evalcode(STRING), CLIENT->skippkg('D::hide'),
CLIENT->run(), CLIENT->step(), CLIENT->next(), CLIENT->done()

=item Client Callback Methods

CLIENT->init(), CLIENT->prestop([STRING]), CLIENT->stop(), CLIENT->idle(),
CLIENT->poststop([STRING]), CLIENT->evalcode(STRING), CLIENT->cleanup(),
CLIENT->output(LIST)

=back

=item BUGS

=item AUTHOR

=back

=head2 DBM_Filter -- Filter DBM keys/values 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item What is a DBM Filter?

=over 4

=item So what's new?

=back

=item METHODS

=over 4

=item $db->Filter_Push()

=item $db->Filter_Key_Push()

=item $db->Filter_Value_Push()

Filter_Push, Filter_Key_Push, Filter_Value_Push

=item $db->Filter_Pop()

=item $db->Filtered()

=back

=item Writing a Filter

=over 4

=item Immediate Filters

=item Canned Filters

"name", params

=back

=item Filters Included

utf8, encode, compress, int32, null

=item NOTES

=over 4

=item Maintain Round Trip Integrity

=item Don't mix filtered & non-filtered data in the same database file. 

=back

=item EXAMPLE

=item SEE ALSO

=item AUTHOR

=back

=head2 DBM_Filter::compress - filter for DBM_Filter

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=back

=head2 DBM_Filter::encode - filter for DBM_Filter

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=back

=head2 DBM_Filter::int32 - filter for DBM_Filter

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=back

=head2 DBM_Filter::null - filter for DBM_Filter

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=back

=head2 DBM_Filter::utf8 - filter for DBM_Filter

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=back

=head2 DB_File - Perl5 access to Berkeley DB version 1.x

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<DB_HASH>, B<DB_BTREE>, B<DB_RECNO>

=over 4

=item Using DB_File with Berkeley DB version 2 or greater

=item Interface to Berkeley DB

=item Opening a Berkeley DB Database File

=item Default Parameters

=item In Memory Databases

=back

=item DB_HASH

=over 4

=item A Simple Example

=back

=item DB_BTREE

=over 4

=item Changing the BTREE sort order

=item Handling Duplicate Keys 

=item The get_dup() Method

=item The find_dup() Method

=item The del_dup() Method

=item Matching Partial Keys 

=back

=item DB_RECNO

=over 4

=item The 'bval' Option

=item A Simple Example

=item Extra RECNO Methods

B<$X-E<gt>push(list) ;>, B<$value = $X-E<gt>pop ;>, B<$X-E<gt>shift>,
B<$X-E<gt>unshift(list) ;>, B<$X-E<gt>length>, B<$X-E<gt>splice(offset,
length, elements);>

=item Another Example

=back

=item THE API INTERFACE

B<$status = $X-E<gt>get($key, $value [, $flags]) ;>, B<$status =
$X-E<gt>put($key, $value [, $flags]) ;>, B<$status = $X-E<gt>del($key [,
$flags]) ;>, B<$status = $X-E<gt>fd ;>, B<$status = $X-E<gt>seq($key,
$value, $flags) ;>, B<$status = $X-E<gt>sync([$flags]) ;>

=item DBM FILTERS

B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>

=over 4

=item The Filter

=item An Example -- the NULL termination problem.

=item Another Example -- Key is a C int.

=back

=item HINTS AND TIPS 

=over 4

=item Locking: The Trouble with fd

=item Safe ways to lock a database

B<Tie::DB_Lock>, B<Tie::DB_LockFile>, B<DB_File::Lock>

=item Sharing Databases With C Applications

=item The untie() Gotcha

=back

=item COMMON QUESTIONS

=over 4

=item Why is there Perl source in my database?

=item How do I store complex data structures with DB_File?

=item What does "Invalid Argument" mean?

=item What does "Bareword 'DB_File' not allowed" mean? 

=back

=item REFERENCES

=item HISTORY

=item BUGS

=item AVAILABILITY

=item COPYRIGHT

=item SEE ALSO

=item AUTHOR

=back

=head2 Data::Dumper - stringified perl data structures, suitable for both
printing and C<eval>

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods

I<PACKAGE>->new(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Dump  I<or> 
I<PACKAGE>->Dump(I<ARRAYREF [>, I<ARRAYREF]>), I<$OBJ>->Seen(I<[HASHREF]>),
I<$OBJ>->Values(I<[ARRAYREF]>), I<$OBJ>->Names(I<[ARRAYREF]>),
I<$OBJ>->Reset

=item Functions

Dumper(I<LIST>)

=item Configuration Variables or Methods

=item Exports

Dumper

=back

=item EXAMPLES

=item BUGS

=over 4

=item NOTE

=back

=item AUTHOR

=item VERSION

=item SEE ALSO

=back

=head2 Devel::DProf - a Perl code profiler

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item PROFILE FORMAT

=item AUTOLOAD

=item ENVIRONMENT

=item BUGS

=item SEE ALSO

=back

=head2 Devel::InnerPackage - find all the inner packages of a package

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item list_packages <package name>

=back

=back

=over 4

=item AUTHOR

=item COPYING

=item BUGS

=back

=head2 Devel::PPPort - Perl/Pollution/Portability

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Why use ppport.h?

=item How to use ppport.h

=item Running ppport.h

=back

=item FUNCTIONS

=over 4

=item WriteFile

=back

=item COMPATIBILITY

=over 4

=item Provided Perl compatibility API

=item Perl API not supported by ppport.h

perl 5.9.5, perl 5.9.4, perl 5.9.3, perl 5.9.2, perl 5.9.1, perl 5.9.0,
perl 5.8.3, perl 5.8.1, perl 5.8.0, perl 5.7.3, perl 5.7.2, perl 5.7.1,
perl 5.6.1, perl 5.6.0, perl 5.005_03, perl 5.005, perl 5.004_05, perl
5.004

=back

=item BUGS

=item AUTHORS

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Devel::Peek - A data debugging tool for the XS programmer

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Runtime debugging

=item Memory footprint debugging

=back

=item EXAMPLES

=over 4

=item A simple scalar string

=item A simple scalar number

=item A simple scalar with an extra reference

=item A reference to a simple scalar

=item A reference to an array

=item A reference to a hash

=item Dumping a large array or hash

=item A reference to an SV which holds a C pointer

=item A reference to a subroutine

=back

=item EXPORTS

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 Devel::SelfStubber - generate stubs for a SelfLoading module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 Digest - Modules that calculate message digests

=over 4

=item SYNOPSIS

=item DESCRIPTION

I<binary>, I<hex>, I<base64>

=item OO INTERFACE

$ctx = Digest->XXX($arg,...), $ctx = Digest->new(XXX => $arg,...), $ctx =
Digest::XXX->new($arg,...), $other_ctx = $ctx->clone, $ctx->reset,
$ctx->add( $data ), $ctx->add( $chunk1, $chunk2, ... ), $ctx->addfile(
$io_handle ), $ctx->add_bits( $data, $nbits ), $ctx->add_bits( $bitstring
), $ctx->digest, $ctx->hexdigest, $ctx->b64digest

=item Digest speed

=item SEE ALSO

=item AUTHOR

=back

=head2 Digest::MD5 - Perl interface to the MD5 Algorithm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

md5($data,...), md5_hex($data,...), md5_base64($data,...)

=item METHODS

$md5 = Digest::MD5->new, $md5->reset, $md5->clone, $md5->add($data,...),
$md5->addfile($io_handle), $md5->add_bits($data, $nbits),
$md5->add_bits($bitstring), $md5->digest, $md5->hexdigest, $md5->b64digest

=item EXAMPLES

=item SEE ALSO

=item COPYRIGHT

=item AUTHORS

=back

=head2 Digest::SHA - Perl extension for SHA-1/224/256/384/512

=over 4

=item SYNOPSIS

=item SYNOPSIS (HMAC-SHA)

=item ABSTRACT

=item DESCRIPTION

=item NIST STATEMENT ON SHA-1

=item PADDING OF BASE64 DIGESTS

=item EXPORT

=item EXPORTABLE FUNCTIONS

B<sha1($data, ...)>, B<sha224($data, ...)>, B<sha256($data, ...)>,
B<sha384($data, ...)>, B<sha512($data, ...)>, B<sha1_hex($data, ...)>,
B<sha224_hex($data, ...)>, B<sha256_hex($data, ...)>, B<sha384_hex($data,
...)>, B<sha512_hex($data, ...)>, B<sha1_base64($data, ...)>,
B<sha224_base64($data, ...)>, B<sha256_base64($data, ...)>,
B<sha384_base64($data, ...)>, B<sha512_base64($data, ...)>, B<new($alg)>,
B<reset($alg)>, B<hashsize>, B<algorithm>, B<clone>, B<add($data, ...)>,
B<add_bits($data, $nbits)>, B<add_bits($bits)>, B<addfile(*FILE)>,
B<addfile($filename [, $mode])>, B<dump($filename)>, B<load($filename)>,
B<digest>, B<hexdigest>, B<b64digest>, B<hmac_sha1($data, $key)>,
B<hmac_sha224($data, $key)>, B<hmac_sha256($data, $key)>,
B<hmac_sha384($data, $key)>, B<hmac_sha512($data, $key)>,
B<hmac_sha1_hex($data, $key)>, B<hmac_sha224_hex($data, $key)>,
B<hmac_sha256_hex($data, $key)>, B<hmac_sha384_hex($data, $key)>,
B<hmac_sha512_hex($data, $key)>, B<hmac_sha1_base64($data, $key)>,
B<hmac_sha224_base64($data, $key)>, B<hmac_sha256_base64($data, $key)>,
B<hmac_sha384_base64($data, $key)>, B<hmac_sha512_base64($data, $key)>

=item SEE ALSO

=item AUTHOR

=item ACKNOWLEDGMENTS

=item COPYRIGHT AND LICENSE

=back

=head2 Digest::base - Digest base class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Digest::file - Calculate digests of files

=over 4

=item SYNOPSIS

=item DESCRIPTION

digest_file( $file, $algorithm, [$arg,...] ), digest_file_hex( $file,
$algorithm, [$arg,...] ), digest_file_base64( $file, $algorithm, [$arg,...]
)

=item SEE ALSO

=back

=head2 DirHandle - supply object methods for directory handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=back

=head2 Dumpvalue - provides screen dump of Perl data.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Creation

C<arrayDepth>, C<hashDepth>, C<compactDump>, C<veryCompact>, C<globPrint>,
C<dumpDBFiles>, C<dumpPackages>, C<dumpReused>, C<tick>, C<quoteHighBit>,
C<printUndef>, C<usageOnly>, unctrl, subdump, bareStringify, quoteHighBit,
stopDbSignal

=item Methods

dumpValue, dumpValues, stringify, dumpvars, set_quote, set_unctrl,
compactDump, veryCompact, set, get

=back

=back

=head2 DynaLoader - Dynamically load C libraries into Perl code

=over 4

=item SYNOPSIS

=item DESCRIPTION

@@dl_library_path, @@dl_resolve_using, @@dl_require_symbols, @@dl_librefs,
@@dl_modules, @@dl_shared_objects, dl_error(), $dl_debug, dl_findfile(),
dl_expandspec(), dl_load_file(), dl_unload_file(), dl_load_flags(),
dl_find_symbol(), dl_find_symbol_anywhere(), dl_undef_symbols(),
dl_install_xsub(), bootstrap()

=item AUTHOR

=back

=head2 DynaLoader::XSLoader, XSLoader - Dynamically load C libraries into
Perl code

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Migration from C<DynaLoader>

=item Backward compatible boilerplate

=back

=item Order of initialization: early load()

=over 4

=item The most hairy case

=back

=item DIAGNOSTICS

C<Can't find '%s' symbol in %s>, C<Can't load '%s' for module %s: %s>,
C<Undefined symbols present after loading %s: %s>,
C<XSLoader::load('Your::Module', $Your::Module::VERSION)>

=item LIMITATIONS

=item BUGS

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 Encode - character encodings

=over 4

=item SYNOPSIS

=over 4

=item Table of Contents

=back

=item DESCRIPTION

=over 4

=item TERMINOLOGY

=back

=item PERL ENCODING API

$octets  = encode(ENCODING, $string [, CHECK]), $string = decode(ENCODING,
$octets [, CHECK]), [$obj =] find_encoding(ENCODING), [$length =]
from_to($octets, FROM_ENC, TO_ENC [, CHECK]), $octets =
encode_utf8($string);, $string = decode_utf8($octets [, CHECK]);

=over 4

=item Listing available encodings

=item Defining Aliases

=item Finding IANA Character Set Registry names

=back

=item Encoding via PerlIO

=item Handling Malformed Data

B<NOTE:> Not all encoding support this feature, I<CHECK> =
Encode::FB_DEFAULT ( == 0), I<CHECK> = Encode::FB_CROAK ( == 1), I<CHECK> =
Encode::FB_QUIET, I<CHECK> = Encode::FB_WARN, perlqq mode (I<CHECK> =
Encode::FB_PERLQQ), HTML charref mode (I<CHECK> = Encode::FB_HTMLCREF), XML
charref mode (I<CHECK> = Encode::FB_XMLCREF), The bitmask,
Encode::LEAVE_SRC

=item Defining Encodings

=item The UTF8 flag

Goal #1:, Goal #2:, Goal #3:, Goal #4:

=over 4

=item Messing with Perl's Internals

is_utf8(STRING [, CHECK]), _utf8_on(STRING), _utf8_off(STRING)

=back

=item UTF-8 vs. utf8 vs. UTF8

=item SEE ALSO

=item MAINTAINER

=item COPYRIGHT

=back

=head2 Encode::Alias - alias definitions to encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

As a simple string, As a qr// compiled regular expression, e.g.:, As a code
reference, e.g.:

=over 4

=item Alias overloading

=back

=item SEE ALSO

=back

=head2 Encode::Byte - Single Byte Encodings

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Encode::CJKConstants -- Internally used by Encode::??::ISO_2022_*

=head2 Encode::CN - China-based Chinese Encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item BUGS

=item SEE ALSO

=back

=head2 Encode::CN::HZ -- internally used by Encode::CN

=head2 Encode::Config -- internally used by Encode

=head2 Encode::EBCDIC - EBCDIC Encodings

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Encode::Encoding - Encode Implementation Base Class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods you should implement

-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check]),
-E<gt>cat_decode($destination, $octets, $offset, $terminator [,$check])

=item Other methods defined in Encode::Encodings

-E<gt>name, -E<gt>mime_name, -E<gt>renew, -E<gt>renewed, -E<gt>perlio_ok(),
-E<gt>needs_lines()

=item Example: Encode::ROT13

=back

=item Why the heck Encode API is different?

=over 4

=item Compiled Encodings

=back

=item SEE ALSO

Scheme 1, Scheme 2, Other Schemes

=back

=head2 Encode::GSM0338 -- ESTI GSM 03.38 Encoding

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item BUGS

=item SEE ALSO

=back

=head2 Encode::Guess -- Guesses encoding from data

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

Encode::Guess->set_suspects, Encode::Guess->add_suspects,
Encode::decode("Guess" ...), Encode::Guess->guess($data),
guess_encoding($data, [, I<list of suspects>])

=item CAVEATS

=item TO DO

=item SEE ALSO

=back

=head2 Encode::JP - Japanese Encodings

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item Note on ISO-2022-JP(-1)?

=item BUGS

=item SEE ALSO

=back

=head2 Encode::JP::H2Z -- internally used by Encode::JP::2022_JP*

=head2 Encode::JP::JIS7 -- internally used by Encode::JP

=head2 Encode::KR - Korean Encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=back

=head2 Encode::KR::2022_KR -- internally used by Encode::KR

=head2 Encode::MIME::Header -- MIME 'B' and 'Q' header encoding

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=back

=head2 Encode::MIME::Name, Encode::MIME::NAME -- internally used by Encode

=over 4

=item SEE ALSO

=back

=head2 Encode::PerlIO -- a detailed document on Encode and PerlIO

=over 4

=item Overview

=item How does it work?

=item Line Buffering

=over 4

=item How can I tell whether my encoding fully supports PerlIO ?

=back

=item SEE ALSO

=back

=head2 Encode::Supported -- Encodings supported by Encode

=over 4

=item DESCRIPTION

=over 4

=item Encoding Names

=back

=item Supported Encodings

=over 4

=item Built-in Encodings

=item Encode::Unicode -- other Unicode encodings

=item Encode::Byte -- Extended ASCII

ISO-8859 and corresponding vendor mappings, KOI8 - De Facto Standard for
the Cyrillic world

=item gsm0338 - Hentai Latin 1

gsm0338 support before 2.19

=item CJK: Chinese, Japanese, Korean (Multibyte)

Encode::CN -- Continental China, Encode::JP -- Japan, Encode::KR -- Korea,
Encode::TW -- Taiwan, Encode::HanExtra -- More Chinese via CPAN,
Encode::JIS2K -- JIS X 0213 encodings via CPAN

=item Miscellaneous encodings

Encode::EBCDIC, Encode::Symbols, Encode::MIME::Header, Encode::Guess

=back

=item Unsupported encodings

  ISO-2022-JP-2 [RFC1554], ISO-2022-CN [RFC1922], Various HP-UX encodings,
Cyrillic encoding ISO-IR-111, ISO-8859-8-1 [Hebrew], ISIRI 3342, Iran
System, ISIRI 2900 [Farsi], Thai encoding TCVN, Vietnamese encodings VPS,
Various Mac encodings, (Mac) Indic encodings

=item Encoding vs. Charset -- terminology

=item Encoding Classification (by Anton Tagunov and Dan Kogai)

=over 4

=item Microsoft-related naming mess

KS_C_5601-1987, GB2312, Big5, Shift_JIS

=back

=item Glossary

character repertoire, coded character set (CCS), character encoding scheme
(CES), charset (in MIME context), EUC, ISO-2022, UCS, UCS-2, Unicode, UTF,
UTF-16

=item See Also

=item References

ECMA, ECMA-035 (eq C<ISO-2022>), IANA, Assigned Charset Names by IANA, ISO,
RFC, UC, Unicode Glossary

=over 4

=item Other Notable Sites

czyborra.com, CJK.inf, Jungshik Shin's Hangul FAQ, debian.org:
"Introduction to i18n"

=item Offline sources

C<CJKV Information Processing> by Ken Lunde

=back

=back

=head2 Encode::Symbol - Symbol Encodings

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item SEE ALSO

=back

=head2 Encode::TW - Taiwan-based Chinese Encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item BUGS

=item SEE ALSO

=back

=head2 Encode::Unicode -- Various Unicode Transformation Formats

=over 4

=item SYNOPSIS

=item ABSTRACT

L<http://www.unicode.org/glossary/> says:, Quick Reference

=item Size, Endianness, and BOM

=over 4

=item by size

=item by endianness

BOM as integer when fetched in network byte order

=back

=item Surrogate Pairs

=item Error Checking

=item SEE ALSO

=back

=head2 Encode::Unicode::UTF7 -- UTF-7 encoding

=over 4

=item SYNOPSIS

=item ABSTRACT

=item In Practice

=item SEE ALSO

=back

=head2 Encode::lib::Encode::Alias, Encode::Alias - alias definitions to
encodings

=over 4

=item SYNOPSIS

=item DESCRIPTION

As a simple string, As a qr// compiled regular expression, e.g.:, As a code
reference, e.g.:

=over 4

=item Alias overloading

=back

=item SEE ALSO

=back

=head2 Encode::lib::Encode::CJKConstants, Encode::CJKConstants.pm --
Internally used by Encode::??::ISO_2022_*

=head2 Encode::lib::Encode::CN::HZ, Encode::CN::HZ -- internally used by
Encode::CN

=head2 Encode::lib::Encode::Config, Encode::Config -- internally used by
Encode

=head2 Encode::lib::Encode::Encoding, Encode::Encoding - Encode
Implementation Base Class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods you should implement

-E<gt>encode($string [,$check]), -E<gt>decode($octets [,$check]),
-E<gt>cat_decode($destination, $octets, $offset, $terminator [,$check])

=item Other methods defined in Encode::Encodings

-E<gt>name, -E<gt>mime_name, -E<gt>renew, -E<gt>renewed, -E<gt>perlio_ok(),
-E<gt>needs_lines()

=item Example: Encode::ROT13

=back

=item Why the heck Encode API is different?

=over 4

=item Compiled Encodings

=back

=item SEE ALSO

Scheme 1, Scheme 2, Other Schemes

=back

=head2 Encode::lib::Encode::GSM0338, Encode::GSM0338 -- ESTI GSM 03.38
Encoding

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item BUGS

=item SEE ALSO

=back

=head2 Encode::lib::Encode::Guess, Encode::Guess -- Guesses encoding from
data

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

Encode::Guess->set_suspects, Encode::Guess->add_suspects,
Encode::decode("Guess" ...), Encode::Guess->guess($data),
guess_encoding($data, [, I<list of suspects>])

=item CAVEATS

=item TO DO

=item SEE ALSO

=back

=head2 Encode::lib::Encode::JP::H2Z, Encode::JP::H2Z -- internally used by
Encode::JP::2022_JP*

=head2 Encode::lib::Encode::JP::JIS7, Encode::JP::JIS7 -- internally used
by Encode::JP

=head2 Encode::lib::Encode::KR::2022_KR, Encode::KR::2022_KR -- internally
used by Encode::KR

=head2 Encode::lib::Encode::MIME::Header, Encode::MIME::Header -- MIME 'B'
and 'Q' header encoding

=over 4

=item SYNOPSIS

=item ABSTRACT

=item DESCRIPTION

=item BUGS

=item SEE ALSO

=back

=head2 Encode::lib::Encode::MIME::Name, Encode::MIME::NAME -- internally
used by Encode

=over 4

=item SEE ALSO

=back

=head2 Encode::lib::Encode::PerlIO, Encode::PerlIO -- a detailed document
on Encode and PerlIO

=over 4

=item Overview

=item How does it work?

=item Line Buffering

=over 4

=item How can I tell whether my encoding fully supports PerlIO ?

=back

=item SEE ALSO

=back

=head2 Encode::lib::Encode::Supported, Encode::Supported -- Encodings
supported by Encode

=over 4

=item DESCRIPTION

=over 4

=item Encoding Names

=back

=item Supported Encodings

=over 4

=item Built-in Encodings

=item Encode::Unicode -- other Unicode encodings

=item Encode::Byte -- Extended ASCII

ISO-8859 and corresponding vendor mappings, KOI8 - De Facto Standard for
the Cyrillic world

=item gsm0338 - Hentai Latin 1

gsm0338 support before 2.19

=item CJK: Chinese, Japanese, Korean (Multibyte)

Encode::CN -- Continental China, Encode::JP -- Japan, Encode::KR -- Korea,
Encode::TW -- Taiwan, Encode::HanExtra -- More Chinese via CPAN,
Encode::JIS2K -- JIS X 0213 encodings via CPAN

=item Miscellaneous encodings

Encode::EBCDIC, Encode::Symbols, Encode::MIME::Header, Encode::Guess

=back

=item Unsupported encodings

  ISO-2022-JP-2 [RFC1554], ISO-2022-CN [RFC1922], Various HP-UX encodings,
Cyrillic encoding ISO-IR-111, ISO-8859-8-1 [Hebrew], ISIRI 3342, Iran
System, ISIRI 2900 [Farsi], Thai encoding TCVN, Vietnamese encodings VPS,
Various Mac encodings, (Mac) Indic encodings

=item Encoding vs. Charset -- terminology

=item Encoding Classification (by Anton Tagunov and Dan Kogai)

=over 4

=item Microsoft-related naming mess

KS_C_5601-1987, GB2312, Big5, Shift_JIS

=back

=item Glossary

character repertoire, coded character set (CCS), character encoding scheme
(CES), charset (in MIME context), EUC, ISO-2022, UCS, UCS-2, Unicode, UTF,
UTF-16

=item See Also

=item References

ECMA, ECMA-035 (eq C<ISO-2022>), IANA, Assigned Charset Names by IANA, ISO,
RFC, UC, Unicode Glossary

=over 4

=item Other Notable Sites

czyborra.com, CJK.inf, Jungshik Shin's Hangul FAQ, debian.org:
"Introduction to i18n"

=item Offline sources

C<CJKV Information Processing> by Ken Lunde

=back

=back

=head2 Encode::lib::Encode::Unicode::UTF7, Encode::Unicode::UTF7 -- UTF-7
encoding

=over 4

=item SYNOPSIS

=item ABSTRACT

=item In Practice

=item SEE ALSO

=back

=head2 Encode::lib::Encoder, Encode::Encoder -- Object Oriented Encoder

=over 4

=item SYNOPSIS

=item ABSTRACT

=item Description

=over 4

=item Predefined Methods

$e = Encode::Encoder-E<gt>new([$data, $encoding]);, encoder(),
$e-E<gt>data([$data]), $e-E<gt>encoding([$encoding]),
$e-E<gt>bytes([$encoding])

=item Example: base64 transcoder

=item Operator Overloading

=back

=item SEE ALSO

=back

=head2 Encodencoding, encoding - allows you to write your script in
non-ascii or non-utf8

=over 4

=item SYNOPSIS

=item ABSTRACT

=over 4

=item Literal Conversions

=item PerlIO layers for C<STD(IN|OUT)>

=item Implicit upgrading for byte strings

=item Side effects

=item Side effects

=item Side effects

=back

=item FEATURES THAT REQUIRE 5.8.1

"NON-EUC" doublebyte encodings, tr//, DATA pseudo-filehandle

=item USAGE

use encoding [I<ENCNAME>] ;, use encoding I<ENCNAME> [ STDIN =E<gt>
I<ENCNAME_IN> ...] ;, use encoding I<ENCNAME> Filter=E<gt>1;, no encoding;

=item The Filter Option

=over 4

=item Filter-related changes at Encode version 1.87

=back

=item CAVEATS

=over 4

=item NOT SCOPED

=item DO NOT MIX MULTIPLE ENCODINGS

=item tr/// with ranges

Legend of characters above

=back

=item EXAMPLE - Greekperl

=item KNOWN PROBLEMS

literals in regex that are longer than 127 bytes, EBCDIC, format, Thread
safety

=over 4

=item The Logic of :locale

=back

=item HISTORY

=item SEE ALSO

=back

=head2 Encoder, Encode::Encoder -- Object Oriented Encoder

=over 4

=item SYNOPSIS

=item ABSTRACT

=item Description

=over 4

=item Predefined Methods

$e = Encode::Encoder-E<gt>new([$data, $encoding]);, encoder(),
$e-E<gt>data([$data]), $e-E<gt>encoding([$encoding]),
$e-E<gt>bytes([$encoding])

=item Example: base64 transcoder

=item Operator Overloading

=back

=item SEE ALSO

=back

=head2 English - use nice English (or awk) names for ugly punctuation
variables

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item PERFORMANCE

=back

=head2 Env - perl module that imports environment variables as scalars or
arrays

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item LIMITATIONS

=item AUTHOR

=back

=head2 Errno - System errno constants

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEATS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Exporter - Implements default import method for modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item How to Export

=item Selecting What To Export

=item How to Import

C<use ModuleName;>, C<use ModuleName ();>, C<use ModuleName qw(...);>

=back

=item Advanced features

=over 4

=item Specialised Import Lists

=item Exporting without using Exporter's import method

=item Exporting without inheriting from Exporter

=item Module Version Checking

=item Managing Unknown Symbols

=item Tag Handling Utility Functions

=item Generating combined tags

=item C<AUTOLOAD>ed Constants

=back

=item Good Practices

=over 4

=item Declaring C<@@EXPORT_OK> and Friends

=item Playing Safe

=item What not to Export

=back

=item SEE ALSO

=item LICENSE

=back

=head2 Exporter::Heavy - Exporter guts

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::CBuilder - Compile and link C code for Perl modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new, have_compiler, compile, C<object_file>, C<include_dirs>,
C<extra_compiler_flags>, link, lib_file, module_name, extra_linker_flags,
link_executable, exe_file, object_file, lib_file, exe_file, prelink,
need_prelink, extra_link_args_after_prelink

=item TO DO

=item HISTORY

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 ExtUtils::CBuilder::Platform::Windows - Builder class for Windows
platforms

=over 4

=item DESCRIPTION

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::Command - utilities to replace common UNIX commands in
Makefiles etc.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item FUNCTIONS

=back

=back

cat

eqtime

rm_rf

rm_f

touch

mv

cp

chmod

mkpath

test_f

test_d

dos2unix

=over 4

=item SEE ALSO

=item AUTHOR

=back

=head2 ExtUtils::Command::MM - Commands for the MM's to use in Makefiles

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<test_harness>

=back

B<pod2man>

B<warn_if_old_packlist>

B<perllocal_install>

B<uninstall>

=head2 ExtUtils::Constant - generate XS code to import C header constants

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

IV, UV, NV, PV, PVN, SV, YES, NO, UNDEF

=item FUNCTIONS

=back

constant_types

XS_constant PACKAGE, TYPES, SUBNAME, C_SUBNAME

autoload PACKAGE, VERSION, AUTOLOADER

WriteMakefileSnippet

WriteConstants ATTRIBUTE =E<gt> VALUE [, ...], NAME, DEFAULT_TYPE,
BREAKOUT_AT, NAMES, C_FH, C_FILE, XS_FH, XS_FILE, SUBNAME, C_SUBNAME

=over 4

=item AUTHOR

=back

=head2 ExtUtils::Constant::Base - base class for ExtUtils::Constant objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=back

header

memEQ_clause args_hashref

dump_names arg_hashref, ITEM..

assign arg_hashref, VALUE..

return_clause arg_hashref, ITEM

switch_clause arg_hashref, NAMELEN, ITEMHASH, ITEM..

params WHAT

dogfood arg_hashref, ITEM..

normalise_items args, default_type, seen_types, seen_items, ITEM..

C_constant arg_hashref, ITEM.., name, type, value, macro, default, pre,
post, def_pre, def_post, utf8, weight

=over 4

=item BUGS

=item AUTHOR

=back

=head2 ExtUtils::Constant::Utils - helper functions for ExtUtils::Constant

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

C_stringify NAME

=back

perl_stringify NAME

=over 4

=item AUTHOR

=back

=head2 ExtUtils::Constant::XS, ExtUtils::Constant::Base - base class for
ExtUtils::Constant objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item AUTHOR

=back

=head2 ExtUtils::Embed - Utilities for embedding Perl in C/C++ applications

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item @@EXPORT

=item FUNCTIONS

xsinit(), Examples, ldopts(), Examples, perl_inc(), ccflags(), ccdlflags(),
ccopts(), xsi_header(), xsi_protos(@@modules), xsi_body(@@modules)

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=back

=head2 ExtUtils::Install - install files from here to there

=over 4

=item SYNOPSIS

=item DESCRIPTION

_chmod($$;$), _warnonce(@@), _choke(@@)

=back

_move_file_at_boot( $file, $target, $moan  )

_unlink_or_rename( $file, $tryhard, $installing )

=over 4

=item Functions

B<install>

=back

_get_install_skip

_have_write_access

_can_write_dir(C<$dir>)

_mkpath($dir,$show,$mode,$verbose,$fake)

_copy($from,$to,$verbose,$fake)

_chdir($from)

_do_cleanup

install_rooted_file( $file ), install_rooted_dir( $dir )

forceunlink( $file, $tryhard )

directory_not_empty( $dir )

B<install_default> I<DISCOURAGED>

B<uninstall>

inc_uninstall($filepath,$libdir,$verbose,$nonono,$ignore)

run_filter($cmd,$src,$dest)

B<pm_to_blib>

_autosplit

_invokant

=over 4

=item ENVIRONMENT

B<PERL_INSTALL_ROOT>, B<EU_INSTALL_IGNORE_SKIP>,
B<EU_INSTALL_SITE_SKIPFILE>

=item AUTHOR

=item LICENSE

=back

=head2 ExtUtils::Installed - Inventory management of installed modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=item FUNCTIONS

new(), modules(), files(), directories(), directory_tree(), validate(),
packlist(), version()

=item EXAMPLE

=item AUTHOR

=back

=head2 ExtUtils::Liblist - determine libraries to use and how to use them

=over 4

=item SYNOPSIS

=item DESCRIPTION

For static extensions, For dynamic extensions at build/link time, For
dynamic extensions at load time

=over 4

=item EXTRALIBS

=item LDLOADLIBS and LD_RUN_PATH

=item BSLOADLIBS

=back

=item PORTABILITY

=over 4

=item VMS implementation

=item Win32 implementation

=back

=item SEE ALSO

=back

=head2 ExtUtils::MM - OS adjusted ExtUtils::MakeMaker subclass

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MM_AIX - AIX specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

=back

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_Any - Platform-agnostic MM methods

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Cross-platform helper methods

=back

=back

=over 4

=item Targets

=back

=over 4

=item Init methods

=back

=over 4

=item Tools

=back

=over 4

=item File::Spec wrappers

=back

=over 4

=item Misc

=back

=over 4

=item AUTHOR

=back

=head2 ExtUtils::MM_BeOS - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

os_flavor

init_linker

=head2 ExtUtils::MM_Cygwin - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

os_flavor

=back

cflags

replace_manpage_separator

init_linker

=head2 ExtUtils::MM_DOS - DOS specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

os_flavor

=back

=back

B<replace_manpage_separator>

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_MacOS - once produced Makefiles for MacOS Classic

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MM_NW5 - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

os_flavor

init_platform, platform_constants

const_cccmd

static_lib

dynamic_lib

=head2 ExtUtils::MM_OS2 - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

init_dist

=back

init_linker

os_flavor

=head2 ExtUtils::MM_QNX - QNX specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

=back

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_UWIN - U/WIN specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

os_flavor

=back

=back

B<replace_manpage_separator>

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_Unix - methods used by ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=back

=over 4

=item Methods

os_flavor

=back

c_o (o)

cflags (o)

const_cccmd (o)

const_config (o)

const_loadlibs (o)

constants (o)

depend (o)

init_DEST

init_dist

dist (o)

dist_basics (o)

dist_ci (o)

dist_core (o)

B<dist_target>

B<tardist_target>

B<zipdist_target>

B<tarfile_target>

zipfile_target

uutardist_target

shdist_target

dlsyms (o)

dynamic_bs (o)

dynamic_lib (o)

exescan

extliblist

find_perl

fixin

force (o)

guess_name

has_link_code

init_dirscan

init_MANPODS

init_MAN1PODS

init_MAN3PODS

init_PM

init_DIRFILESEP

init_main

init_others

init_linker

init_lib2arch

init_PERL

init_platform, platform_constants

init_PERM

init_xs

install (o)

installbin (o)

linkext (o)

lsdir

macro (o)

makeaperl (o)

makefile (o)

maybe_command

needs_linking (o)

parse_abstract

parse_version

pasthru (o)

perl_script

perldepend (o)

perm_rw (o)

perm_rwx (o)

pm_to_blib

post_constants (o)

post_initialize (o)

postamble (o)

ppd

prefixify

processPL (o)

quote_paren

replace_manpage_separator

cd

oneliner

quote_literal

escape_newlines

max_exec_len

static (o)

static_lib (o)

staticmake (o)

subdir_x (o)

subdirs (o)

test (o)

test_via_harness (override)

test_via_script (override)

tools_other (o)

tool_xsubpp (o)

all_target

top_targets (o)

writedoc

xs_c (o)

xs_cpp (o)

xs_o (o)

=over 4

=item SEE ALSO

=back

=head2 ExtUtils::MM_VMS - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Methods always loaded

wraplist

=back

=back

=over 4

=item Methods

guess_name (override)

=back

find_perl (override)

maybe_command (override)

pasthru (override)

pm_to_blib (override)

perl_script (override)

replace_manpage_separator

init_DEST

init_DIRFILESEP

init_main (override)

init_others (override)

init_platform (override)

platform_constants

init_VERSION (override)

constants (override)

special_targets

cflags (override)

const_cccmd (override)

tools_other (override)

init_dist (override)

c_o (override)

xs_c (override)

xs_o (override)

dlsyms (override)

dynamic_lib (override)

static_lib (override)

extra_clean_files

zipfile_target, tarfile_target, shdist_target

install (override)

perldepend (override)

makeaperl (override)

maketext_filter (override)

prefixify (override)

cd

oneliner

B<echo>

quote_literal

escape_newlines

max_exec_len

init_linker

eliminate_macros

fixpath

os_flavor

=over 4

=item AUTHOR

=back

=head2 ExtUtils::MM_VOS - VOS specific subclass of ExtUtils::MM_Unix

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

=back

=back

=over 4

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MM_Win32 - methods to override UN*X behaviour in
ExtUtils::MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item Overridden methods

B<dlsyms>

=back

replace_manpage_separator

B<maybe_command>

B<init_DIRFILESEP>

B<init_others>

init_platform, platform_constants

special_targets

static_lib

dynamic_lib

extra_clean_files

init_linker

perl_script

xs_o

pasthru

oneliner

cd

max_exec_len

os_flavor

cflags

=head2 ExtUtils::MM_Win95 - method to customize MakeMaker for Win9X

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overridden methods

xs_c

=back

=back

xs_cpp

xs_o

max_exec_len

os_flavor

=over 4

=item AUTHOR

=back

=head2 ExtUtils::MY - ExtUtils::MakeMaker subclass for customization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MakeMaker - Create a module Makefile

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item How To Write A Makefile.PL

=item Default Makefile Behaviour

=item make test

=item make testdb

=item make install

=item INSTALL_BASE

=item PREFIX and LIB attribute

=item AFS users

=item Static Linking of a new Perl Binary

=item Determination of Perl Library and Installation Locations

=item Which architecture dependent directory?

=item Using Attributes and Parameters

ABSTRACT, ABSTRACT_FROM, AUTHOR, BINARY_LOCATION, C, CCFLAGS, CONFIG,
CONFIGURE, DEFINE, DESTDIR, DIR, DISTNAME, DISTVNAME, DL_FUNCS, DL_VARS,
EXCLUDE_EXT, EXE_FILES, FIRST_MAKEFILE, FULLPERL, FULLPERLRUN,
FULLPERLRUNINST, FUNCLIST, H, IMPORTS, INC, INCLUDE_EXT, INSTALLARCHLIB,
INSTALLBIN, INSTALLDIRS, INSTALLMAN1DIR, INSTALLMAN3DIR, INSTALLPRIVLIB,
INSTALLSCRIPT, INSTALLSITEARCH, INSTALLSITEBIN, INSTALLSITELIB,
INSTALLSITEMAN1DIR, INSTALLSITEMAN3DIR, INSTALLSITESCRIPT,
INSTALLVENDORARCH, INSTALLVENDORBIN, INSTALLVENDORLIB,
INSTALLVENDORMAN1DIR, INSTALLVENDORMAN3DIR, INSTALLVENDORSCRIPT,
INST_ARCHLIB, INST_BIN, INST_LIB, INST_MAN1DIR, INST_MAN3DIR, INST_SCRIPT,
LD, LDDLFLAGS, LDFROM, LIB, LIBPERL_A, LIBS, LICENSE, LINKTYPE, MAKE,
MAKEAPERL, MAKEFILE_OLD, MAN1PODS, MAN3PODS, MAP_TARGET, MYEXTLIB, NAME,
NEEDS_LINKING, NOECHO, NORECURS, NO_META, NO_VC, OBJECT, OPTIMIZE, PERL,
PERL_CORE, PERLMAINCC, PERL_ARCHLIB, PERL_LIB, PERL_MALLOC_OK, PERLPREFIX,
PERLRUN, PERLRUNINST, PERL_SRC, PERM_RW, PERM_RWX, PL_FILES, PM, PMLIBDIRS,
PM_FILTER, POLLUTE, PPM_INSTALL_EXEC, PPM_INSTALL_SCRIPT, PREFIX,
PREREQ_FATAL, PREREQ_PM, PREREQ_PRINT, PRINT_PREREQ, SITEPREFIX, SIGN,
SKIP, TYPEMAPS, VENDORPREFIX, VERBINST, VERSION, VERSION_FROM, VERSION_SYM,
XS, XSOPT, XSPROTOARG, XS_VERSION

=item Additional lowercase attributes

clean, depend, dist, dynamic_lib, linkext, macro, postamble, realclean,
test, tool_autosplit

=item Overriding MakeMaker Methods

=item The End Of Cargo Cult Programming

C<< MAN3PODS => ' ' >>

=item Hintsfile support

=item Distribution Support

   make distcheck,    make skipcheck,	 make distclean,    make manifest, 
  make distdir,   make disttest,    make tardist,    make dist,    make
uutardist,    make shdist,    make zipdist,    make ci

=item Module Meta-Data

=item Disabling an extension

=item Other Handy Functions

prompt

=back

=item ENVIRONMENT

PERL_MM_OPT, PERL_MM_USE_DEFAULT, PERL_CORE

=item SEE ALSO

=item AUTHORS

=item LICENSE

=back

=head2 ExtUtils::MakeMaker::Config - Wrapper around Config.pm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MakeMaker::FAQ - Frequently Asked Questions About
MakeMaker

=over 4

=item DESCRIPTION

=over 4

=item Module Installation

How do I install a module into my home directory?, How do I get MakeMaker
and Module::Build to install to the same place?, How do I keep from
installing man pages?, How do I use a module without installing it?, PREFIX
vs INSTALL_BASE from Module::Build::Cookbook

=item Philosophy and History

Why not just use <insert other build config tool here>?, What is
Module::Build and how does it relate to MakeMaker?, pure perl.	no make, no
shell commands, easier to customize, cleaner internals, less cruft

=item Module Writing

How do I keep my $VERSION up to date without resetting it manually?, What's
this F<META.yml> thing and how did it get in my F<MANIFEST>?!, How do I
delete everything not in my F<MANIFEST>?

=item XS

How to I prevent "object version X.XX does not match bootstrap parameter
Y.YY" errors?, How do I make two or more XS files coexist in the same
directory?

=back

=item PATCHING

=item AUTHOR

=item SEE ALSO

=back

=head2 ExtUtils::MakeMaker::Tutorial - Writing a module with MakeMaker

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The Mantra

=item The Layout

Makefile.PL, MANIFEST, lib/, t/, Changes, README, INSTALL, MANIFEST.SKIP,
bin/

=back

=item SEE ALSO

=back

=head2 ExtUtils::MakeMaker::bytes - Version-agnostic bytes.pm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::MakeMaker::vmsish - Platform-agnostic vmsish.pm

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::Manifest - utilities to write and check a MANIFEST file

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Functions

mkmanifest

=back

=back

manifind

manicheck

filecheck

fullcheck

skipcheck

maniread

manicopy

maniadd

=over 4

=item MANIFEST

=item MANIFEST.SKIP

#!include_default, #!include /Path/to/another/manifest.skip

=item EXPORT_OK

=item GLOBAL VARIABLES

=back

=over 4

=item DIAGNOSTICS

C<Not in MANIFEST:> I<file>, C<Skipping> I<file>, C<No such file:> I<file>,
C<MANIFEST:> I<$!>, C<Added to MANIFEST:> I<file>

=item ENVIRONMENT

B<PERL_MM_MANIFEST_DEBUG>

=item SEE ALSO

=item AUTHOR

=back

=head2 ExtUtils::Miniperl, writemain - write the C code for perlmain.c

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=back

=head2 ExtUtils::Mkbootstrap - make a bootstrap file for use by DynaLoader

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 ExtUtils::Mksymlists - write linker options files for dynamic
extension

=over 4

=item SYNOPSIS

=item DESCRIPTION

DLBASE, DL_FUNCS, DL_VARS, FILE, FUNCLIST, IMPORTS, NAME

=item AUTHOR

=item REVISION

mkfh()

=back

__find_relocations

=head2 ExtUtils::Packlist - manage .packlist files

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=item FUNCTIONS

new(), read(), write(), validate(), packlist_file()

=item EXAMPLE

=item AUTHOR

=back

=head2 ExtUtils::ParseXS - converts Perl XS code into C code

=over 4

=item SYNOPSIS

=item EXPORT

=item FUNCTIONS

process_xs(), B<C++>, B<hiertype>, B<except>, B<typemap>, B<prototypes>,
B<versioncheck>, B<linenumbers>, B<optimize>, B<inout>, B<argtypes>, B<s>,
errors()

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 ExtUtils::testlib - add blib/* directories to @@INC

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 Fatal - replace functions with equivalents which succeed or die

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item AUTHOR

=back

=head2 Fcntl - load the C Fcntl.h defines

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTE

=item EXPORTED SYMBOLS

=back

=head2 File::Basename - Parse file paths into directory, filename and
suffix.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

C<fileparse> X<fileparse>

C<basename> X<basename> X<filename>

C<dirname> X<dirname>

C<fileparse_set_fstype> X<filesystem>

=over 4

=item SEE ALSO

=back

=head2 File::CheckTree - run many filetest checks on a tree

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item HISTORY

=back

=head2 File::Compare - Compare files or filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item RETURN

=item AUTHOR

=back

=head2 File::Copy - Copy files or filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

copy X<copy> X<cp>, move X<move> X<mv> X<rename>, syscopy X<syscopy>,
rmscopy($from,$to[,$date_flag]) X<rmscopy>

=item RETURN

=item NOTES

=item AUTHOR

=back

=head2 File::DosGlob - DOS like globbing and then some

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item NOTES

=item EXPORTS (by request only)

=item BUGS

=item AUTHOR

=item HISTORY

=item SEE ALSO

=back

=head2 File::Fetch - A generic file fetching mechanism

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item ACCESSORS

$ff->uri, $ff->scheme, $ff->host, $ff->vol, $ff->share, $ff->path,
$ff->file

=back

$ff->output_file

=over 4

=item METHODS

=over 4

=item $ff = File::Fetch->new( uri => 'http://some.where.com/dir/file.txt'
);

=back

=back

=over 4

=item $ff->fetch( [to => /my/output/dir/] )

=back

=over 4

=item $ff->error([BOOL])

=back

=over 4

=item HOW IT WORKS

=item GLOBAL VARIABLES

=over 4

=item $File::Fetch::FROM_EMAIL

=item $File::Fetch::USER_AGENT

=item $File::Fetch::FTP_PASSIVE

=item $File::Fetch::TIMEOUT

=item $File::Fetch::WARN

=item $File::Fetch::DEBUG

=item $File::Fetch::BLACKLIST

=item $File::Fetch::METHOD_FAIL

=back

=item MAPPING

=item FREQUENTLY ASKED QUESTIONS

=over 4

=item So how do I use a proxy with File::Fetch?

=item I used 'lynx' to fetch a file, but its contents is all wrong!

=item Files I'm trying to fetch have reserved characters or non-ASCII
characters in them. What do I do?

=back

=item TODO

Implement $PREFER_BIN

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 File::Find - Traverse a directory tree.

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<find>, B<finddepth>

=over 4

=item %options

C<wanted>, C<bydepth>, C<preprocess>, C<postprocess>, C<follow>,
C<follow_fast>, C<follow_skip>, C<dangling_symlinks>, C<no_chdir>,
C<untaint>, C<untaint_pattern>, C<untaint_skip>

=item The wanted function

C<$File::Find::dir> is the current directory name,, C<$_> is the current
filename within that directory, C<$File::Find::name> is the complete
pathname to the file

=back

=item WARNINGS

=item CAVEAT

$dont_use_nlink, symlinks

=item NOTES

=item BUGS AND CAVEATS

=item HISTORY

=back

=head2 File::Glob - Perl extension for BSD glob routine

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item META CHARACTERS

=item POSIX FLAGS

C<GLOB_ERR>, C<GLOB_LIMIT>, C<GLOB_MARK>, C<GLOB_NOCASE>, C<GLOB_NOCHECK>,
C<GLOB_NOSORT>, C<GLOB_BRACE>, C<GLOB_NOMAGIC>, C<GLOB_QUOTE>,
C<GLOB_TILDE>, C<GLOB_CSH>, C<GLOB_ALPHASORT>

=back

=item DIAGNOSTICS

C<GLOB_NOSPACE>, C<GLOB_ABEND>

=item NOTES

=item SEE ALSO

=item AUTHOR

=back

=head2 File::GlobMapper - Extend File Glob to Allow Input and Output Files

=over 4

=item SYNOPSIS

=item DESCRIPTION

This code is a work in progress, There are known bugs, The interface
defined here is tentative, There are portability issues, Do not use in
production code, Consider yourself warned!

=over 4

=item Behind The Scenes

=item Limitations

=item Input File Glob

B<~>, B<~user>, B<.>, B<*>, B<?>, B<\>,  B<[]>,  B<{,}>,  B<()>

=item Output File Glob

"*", #1

=item Returned Data

=back

=item EXAMPLES

=over 4

=item A Rename script

=item A few example globmaps

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 File::Path - Create or remove directory trees

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item FUNCTIONS

mode, verbose, error, verbose, safe, keep_root, result, error

=item TRADITIONAL INTERFACE

=item ERROR HANDLING

=item NOTES

=back

=item DIAGNOSTICS

mkdir [path]: [errmsg] (SEVERE), No root path(s) specified, No such file or
directory, cannot fetch initial working directory: [errmsg], cannot stat
initial working directory: [errmsg], cannot chdir to [dir]: [errmsg],
directory [dir] changed before chdir, expected dev=[n] inode=[n], actual
dev=[n] ino=[n], aborting. (FATAL), cannot make directory [dir]
read+writeable: [errmsg], cannot read [dir]: [errmsg], cannot reset chmod
[dir]: [errmsg], cannot chdir to [parent-dir] from [child-dir]: [errmsg],
aborting. (FATAL), cannot stat prior working directory [dir]: [errmsg],
aborting. (FATAL), previous directory [parent-dir] changed before entering
[child-dir], expected dev=[n] inode=[n], actual dev=[n] ino=[n], aborting.
(FATAL), cannot make directory [dir] writeable: [errmsg], cannot remove
directory [dir]: [errmsg], cannot restore permissions of [dir] to [0nnn]:
[errmsg], cannot make file [file] writeable: [errmsg], cannot unlink file
[file]: [errmsg], cannot restore permissions of [file] to [0nnn]: [errmsg]

=item SEE ALSO

=item BUGS

=item ACKNOWLEDGEMENTS

=item AUTHORS

=item COPYRIGHT

=item LICENSE

=back

=head2 File::Spec - portably perform operations on file names

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

canonpath X<canonpath>, catdir X<catdir>, catfile X<catfile>, curdir
X<curdir>, devnull X<devnull>, rootdir X<rootdir>, tmpdir X<tmpdir>, updir
X<updir>, no_upwards, case_tolerant, file_name_is_absolute, path X<path>,
join X<join, path>, splitpath X<splitpath> X<split, path>, splitdir
X<splitdir> X<split, dir>, catpath(), abs2rel X<abs2rel> X<absolute, path>
X<relative, path>, rel2abs() X<rel2abs> X<absolute, path> X<relative, path>

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 File::Spec::Cygwin - methods for Cygwin file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

canonpath

file_name_is_absolute

tmpdir (override)

case_tolerant

=over 4

=item COPYRIGHT

=back

=head2 File::Spec::Epoc - methods for Epoc file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

canonpath()

=over 4

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::Functions - portably perform operations on file names

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Exports

=back

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::Mac - File::Spec for Mac OS (Classic)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

canonpath

=back

catdir()

catfile

curdir

devnull

rootdir

tmpdir

updir

file_name_is_absolute

path

splitpath

splitdir

catpath

abs2rel

rel2abs

=over 4

=item AUTHORS

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::OS2 - methods for OS/2 file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

tmpdir, splitpath

=item COPYRIGHT

=back

=head2 File::Spec::Unix - File::Spec for Unix, base for other File::Spec
modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

canonpath()

=back

catdir()

catfile

curdir

devnull

rootdir

tmpdir

updir

no_upwards

case_tolerant

file_name_is_absolute

path

join

splitpath

splitdir

catpath()

abs2rel

rel2abs()

=over 4

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::VMS - methods for VMS file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

canonpath (override)

=back

catdir (override)

catfile (override)

curdir (override)

devnull (override)

rootdir (override)

tmpdir (override)

updir (override)

case_tolerant (override)

path (override)

file_name_is_absolute (override)

splitpath (override)

splitdir (override)

catpath (override)

abs2rel (override)

rel2abs (override)

=over 4

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Spec::Win32 - methods for Win32 file specs

=over 4

=item SYNOPSIS

=item DESCRIPTION

devnull

=back

tmpdir

case_tolerant

file_name_is_absolute

catfile

canonpath

splitpath

splitdir

catpath

=over 4

=item Note For File::Spec::Win32 Maintainers

=back

=over 4

=item COPYRIGHT

=item SEE ALSO

=back

=head2 File::Temp - return name and handle of a temporary file safely

=over 4

=item PORTABILITY

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item OBJECT-ORIENTED INTERFACE

B<new>

=back

B<filename>

B<unlink_on_destroy>

B<DESTROY>

=over 4

=item FUNCTIONS

B<tempfile>

=back

B<tempdir>

=over 4

=item MKTEMP FUNCTIONS

B<mkstemp>

=back

B<mkstemps>

B<mkdtemp>

B<mktemp>

=over 4

=item POSIX FUNCTIONS

B<tmpnam>

=back

B<tmpfile>

=over 4

=item ADDITIONAL FUNCTIONS

B<tempnam>

=back

=over 4

=item UTILITY FUNCTIONS

B<unlink0>

=back

B<cmpstat>

B<unlink1>

B<cleanup>

=over 4

=item PACKAGE VARIABLES

B<safe_level>, STANDARD, MEDIUM, HIGH

=back

TopSystemUID

B<$KEEP_ALL>, B<$DEBUG>

=over 4

=item WARNING

=over 4

=item Temporary files and NFS

=item Forking

=item BINMODE

=back

=item HISTORY

=item SEE ALSO

=item AUTHOR

=back

=head2 File::stat - by-name interface to Perl's built-in stat() functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item NOTE

=item AUTHOR

=back

=head2 FileCache - keep more files open than the system permits

=over 4

=item SYNOPSIS

=item DESCRIPTION

cacheout EXPR, cacheout MODE, EXPR

=item CAVEATS

=item BUGS

=back

=head2 FileHandle - supply object methods for filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

$fh->print, $fh->printf, $fh->getline, $fh->getlines

=item SEE ALSO

=back

=head2 Filter::Simple - Simplified source filtering

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The Problem

=item A Solution

=item Disabling or changing <no> behaviour

=item All-in-one interface

=item Filtering only specific components of source code

C<"code">, C<"code_no_comments">, C<"executable">,
C<"executable_no_comments">, C<"quotelike">, C<"string">, C<"regex">,
C<"all">

=item Filtering only the code parts of source code

Most source code ceases to be grammatically correct when it is broken up
into the pieces between string literals and regexes. So the C<'code'>
and C<'code_no_comments'> component filter behave slightly differently
from the other partial filters described in the previous section.

=item Using Filter::Simple with an explicit C<import> subroutine

=item Using Filter::Simple and Exporter together

=item How it works

=back

=item AUTHOR

=item COPYRIGHT

=back

=head2 Filter::Util::Call - Perl Source Filter Utility Module

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item B<use Filter::Util::Call>

=item B<import()>

=item B<filter() and anonymous sub>

B<$_>, B<$status>, B<filter_read> and B<filter_read_exact>, B<filter_del>

=back

=item EXAMPLES

=over 4

=item Example 1: A simple filter.

=item Example 2: Using the context

=item Example 3: Using the context within the filter

=item Example 4: Using filter_del

=back

=item Filter::Simple

=item AUTHOR

=item DATE

=back

=head2 FindBin - Locate directory of original perl script

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXPORTABLE VARIABLES

=item KNOWN ISSUES

=item KNOWN BUGS

=item AUTHORS

=item COPYRIGHT

=back

=head2 GDBM_File - Perl5 access to the gdbm library.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AVAILABILITY

=item BUGS

=item SEE ALSO

=back

=head2 Getopt::Long - Extended processing of command line options

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Command Line Options, an Introduction

=item Getting Started with Getopt::Long

=over 4

=item Simple options

=item A little bit less simple options

=item Mixing command line option with other arguments

=item Options with values

=item Options with multiple values

=item Options with hash values

=item User-defined subroutines to handle options

=item Options with multiple names

=item Case and abbreviations

=item Summary of Option Specifications

!, +, s, i, o, f, : I<type> [ I<desttype> ], : I<number> [ I<desttype> ], :
+ [ I<desttype> ]

=back

=item Advanced Possibilities

=over 4

=item Object oriented interface

=item Thread Safety

=item Documentation and help texts

=item Parsing options from an arbitrary array

=item Parsing options from an arbitrary string

=item Storing options values in a hash

=item Bundling

=item The lonesome dash

=item Argument callback

=back

=item Configuring Getopt::Long

default, posix_default, auto_abbrev, getopt_compat, gnu_compat, gnu_getopt,
require_order, permute, bundling (default: disabled), bundling_override
(default: disabled), ignore_case  (default: enabled), ignore_case_always
(default: disabled), auto_version (default:disabled), auto_help
(default:disabled), pass_through (default: disabled), prefix,
prefix_pattern, long_prefix_pattern, debug (default: disabled)

=item Exportable Methods

VersionMessage, C<-message>, C<-msg>, C<-exitval>, C<-output>, HelpMessage

=item Return values and Errors

=item Legacy

=over 4

=item Default destinations

=item Alternative option starters

=item Configuration variables

=back

=item Tips and Techniques

=over 4

=item Pushing multiple values in a hash option

=back

=item Trouble Shooting

=over 4

=item GetOptions does not return a false result when an option is not
supplied

=item GetOptions does not split the command line correctly

=item Undefined subroutine &main::GetOptions called

=item How do I put a "-?" option into a Getopt::Long?

=back

=item AUTHOR

=item COPYRIGHT AND DISCLAIMER

=back

=head2 Getopt::Std, getopt, getopts - Process single-character switches
with switch clustering

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item C<--help> and C<--version>

=back

=head2 Hash::Util - A selection of general-utility hash subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Restricted hashes

B<lock_keys>, B<unlock_keys>

=back

=back

B<lock_keys_plus>

B<lock_value>, B<unlock_value>

B<lock_hash>, B<unlock_hash>

B<lock_hash_recurse>, B<unlock_hash_recurse>

B<hash_unlocked>

B<legal_keys>, B<hidden_keys>, B<all_keys>, B<hash_seed>

B<hv_store>

=over 4

=item Operating on references to hashes.

lock_ref_keys, unlock_ref_keys, lock_ref_keys_plus, lock_ref_value,
unlock_ref_value, lock_hashref, unlock_hashref, lock_hashref_recurse,
unlock_hashref_recurse, hash_ref_unlocked, legal_ref_keys, hidden_ref_keys

=back

=over 4

=item CAVEATS

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 Hash::Util::FieldHash - Support for Inside-Out Classes

=over 4

=item SYNOPSIS

=item FUNCTIONS

id, id_2obj, register, idhash, idhashes, fieldhash, fieldhashes

=item DESCRIPTION

=over 4

=item The Inside-out Technique

=item Problems of Inside-out

=item Solutions

=item More Problems

=item The Generic Object

=item How to use Field Hashes

=item Garbage-Collected Hashes

=back

=item EXAMPLES

C<init()>, C<first()>, C<last()>, C<name()>, C<Name_hash>, C<Name_id>,
C<Name_idhash>, C<Name_id_reg>, C<Name_idhash_reg>, C<Name_fieldhash>

=over 4

=item Example 1

=item Example 2

=back

=item GUTS

=over 4

=item The C<PERL_MAGIC_uvar> interface for hashes

=item Weakrefs call uvar magic

=item How field hashes work

=item Internal function Hash::Util::FieldHash::_fieldhash

=back

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Hash::Util::FieldHash::lib::Hash::Util::FieldHash,
Hash::Util::FieldHash - Support for Inside-Out Classes

=over 4

=item SYNOPSIS

=item FUNCTIONS

id, id_2obj, register, idhash, idhashes, fieldhash, fieldhashes

=item DESCRIPTION

=over 4

=item The Inside-out Technique

=item Problems of Inside-out

=item Solutions

=item More Problems

=item The Generic Object

=item How to use Field Hashes

=item Garbage-Collected Hashes

=back

=item EXAMPLES

C<init()>, C<first()>, C<last()>, C<name()>, C<Name_hash>, C<Name_id>,
C<Name_idhash>, C<Name_id_reg>, C<Name_idhash_reg>, C<Name_fieldhash>

=over 4

=item Example 1

=item Example 2

=back

=item GUTS

=over 4

=item The C<PERL_MAGIC_uvar> interface for hashes

=item Weakrefs call uvar magic

=item How field hashes work

=item Internal function Hash::Util::FieldHash::_fieldhash

=back

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Hash::Utilib::Hash::Util, Hash::Util - A selection of
general-utility hash subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Restricted hashes

B<lock_keys>, B<unlock_keys>

=back

=back

B<lock_keys_plus>

B<lock_value>, B<unlock_value>

B<lock_hash>, B<unlock_hash>

B<lock_hash_recurse>, B<unlock_hash_recurse>

B<hash_unlocked>

B<legal_keys>, B<hidden_keys>, B<all_keys>, B<hash_seed>

B<hv_store>

=over 4

=item Operating on references to hashes.

lock_ref_keys, unlock_ref_keys, lock_ref_keys_plus, lock_ref_value,
unlock_ref_value, lock_hashref, unlock_hashref, lock_hashref_recurse,
unlock_hashref_recurse, hash_ref_unlocked, legal_ref_keys, hidden_ref_keys

=back

=over 4

=item CAVEATS

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 I18N::Collate - compare 8-bit scalar data according to the current
locale

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 I18N::LangTags - functions for dealing with RFC3066-style language
tags

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

the function is_language_tag($lang1)

the function extract_language_tags($whatever)

the function same_language_tag($lang1, $lang2)

the function similarity_language_tag($lang1, $lang2)

the function is_dialect_of($lang1, $lang2)

the function super_languages($lang1)

the function locale2language_tag($locale_identifier)

the function encode_language_tag($lang1)

the function alternate_language_tags($lang1)

the function @@langs = panic_languages(@@accept_languages)

the function implicate_supers( ...languages... ), the function
implicate_supers_strictly( ...languages... )

=over 4

=item ABOUT LOWERCASING

=item ABOUT UNICODE PLAINTEXT LANGUAGE TAGS

=item SEE ALSO

=item COPYRIGHT

=item AUTHOR

=back

=head2 I18N::LangTags::Detect - detect the user's language preferences

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=item ENVIRONMENT

=item SEE ALSO

=item COPYRIGHT

=item AUTHOR

=back

=head2 I18N::LangTags::List -- tags and names for human languages

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item ABOUT LANGUAGE TAGS

=item LIST OF LANGUAGES

{ab} : Abkhazian, {ace} : Achinese, {ach} : Acoli, {ada} : Adangme, {ady} :
Adyghe, {aa} : Afar, {afh} : Afrihili, {af} : Afrikaans, [{afa} :
Afro-Asiatic (Other)], {ak} : Akan, {akk} : Akkadian, {sq} : Albanian,
{ale} : Aleut, [{alg} : Algonquian languages], [{tut} : Altaic (Other)],
d16533 1
a16533 4210
=item SEE ALSO

=item COPYRIGHT AND DISCLAIMER

=item AUTHOR

=back

=head2 I18N::Langinfo - query locale information

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item EXPORT

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 IO - load various IO modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item DEPRECATED

=back

=head2 IO::Compress::Base - Base Class for IO::Compress modules 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Compress::Deflate - Write RFC 1950 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item deflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Merge => 0|1 >>, -Level, -Strategy, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Compress::Gzip - Write RFC 1952 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item gzip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Merge => 0|1 >>, -Level, -Strategy, C<< Minimal => 0|1 >>,
C<< Comment => $comment >>, C<< Name => $string >>, C<< Time => $number >>,
C<< TextFlag => 0|1 >>, C<< HeaderCRC => 0|1 >>, C<< OS_Code => $value >>,
C<< ExtraField => $data >>, C<< ExtraFlags => $value >>, C<< Strict => 0|1
>>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Compress::RawDeflate - Write RFC 1951 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item rawdeflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Merge => 0|1 >>, -Level, -Strategy, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Compress::Zip - Write zip files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item zip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Name => $string >>, C<< Time => $number >>, C<< ExtAttr =>
$attr >>, C<< exTime => [$atime, $mtime, $ctime] >>, C<< Comment =>
$comment >>, C<< ZipComment => $comment >>, C<< Method => $method >>, C<<
Stream => 0|1 >>, C<< Zip64 => 0|1 >>, C<< TextFlag => 0|1 >>, C<<
ExtraFieldLocal => $data >> =item C<< ExtraFieldCentral => $data >>, C<<
Minimal => 1|0 >>, C<< BlockSize100K => number >>, C<< WorkFactor => number
>>, -Level, -Strategy, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy, :zip_method

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Dir - supply object methods for directory handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, 'IO::Dir', DIRNAME [, OPTIONS ]

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::File - supply object methods for filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile

=item METHODS

open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS ), binmode(
[LAYER] )

=item NOTE

=item SEE ALSO

=item HISTORY

=back

=head2 IO::Handle - supply object methods for I/O handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new (), new_from_fd ( FD, MODE )

=item METHODS

$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint

=item NOTE

=item SEE ALSO

=item BUGS

=item HISTORY

=back

=head2 IO::Pipe - supply object methods for pipes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [READER, WRITER] )

=item METHODS

reader ([ARGS]), writer ([ARGS]), handles ()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Poll - Object interface to system poll call

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Seekable - supply seek based methods for I/O objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

$io->getpos, $io->setpos, $io->seek ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=2 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell

=item SEE ALSO

=item HISTORY

=back

=head2 IO::Select - OO interface to the select system call

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ HANDLES ] )

=item METHODS

add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, EXCEPTION [, TIMEOUT ] )

=item EXAMPLE

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Socket - Object interface to socket communications

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), atmark, connected,
protocol, sockdomain, sockopt(OPT [, VAL]), socktype, timeout([VAL])

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Socket::INET - Object interface for AF_INET domain sockets

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=over 4

=item METHODS

sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Socket::UNIX - Object interface for AF_UNIX domain sockets

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

hostpath(), peerpath()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Uncompress::AnyInflate - Uncompress zlib-based (zip, gzip)
file/buffer

=over 4

=item SYNOPSIS

=item DESCRIPTION

RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip

=item Functional Interface

=over 4

=item anyinflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< RawInflate => 0|1
>>, C<< ParseExtra => 0|1 >> If the gzip FEXTRA header field is present and
this option is set, it will force the module to check that it conforms to
the sub-field structure as defined in RFC 1952

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::AnyUncompress - Uncompress gzip, zip, bzip2 or lzop
file/buffer

=over 4

=item SYNOPSIS

=item DESCRIPTION

RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip, bzip2, lzop, lzf

=item Functional Interface

=over 4

=item anyuncompress $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< RawInflate => 0|1
>>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::Base - Base Class for IO::Uncompress modules 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::Gunzip - Read RFC 1952 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item gunzip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< ParseExtra => 0|1
>> If the gzip FEXTRA header field is present and this option is set, it
will force the module to check that it conforms to the sub-field structure
as defined in RFC 1952

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

Name, Comment

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::Inflate - Read RFC 1950 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item inflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::RawInflate - Read RFC 1951 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item rawinflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::Unzip - Read zip files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item unzip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Zlib - IO:: style interface to L<Compress::Zlib>

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item OBJECT METHODS

open ( FILENAME, MODE ), opened, close, getc, getline, getlines, print (
ARGS... ), read ( BUF, NBYTES, [OFFSET] ), eof, seek ( OFFSET, WHENCE ),
tell, setpos ( POS ), getpos ( POS )

=item USING THE EXTERNAL GZIP

=item CLASS METHODS

has_Compress_Zlib, gzip_external, gzip_used, gzip_read_open,
gzip_write_open

=item DIAGNOSTICS

IO::Zlib::getlines: must be called in list context,
IO::Zlib::gzopen_external: mode '...' is illegal, IO::Zlib::import: '...'
is illegal, IO::Zlib::import: ':gzip_external' requires an argument,
IO::Zlib::import: 'gzip_read_open' requires an argument, IO::Zlib::import:
'gzip_read' '...' is illegal, IO::Zlib::import: 'gzip_write_open' requires
an argument, IO::Zlib::import: 'gzip_write_open' '...' is illegal,
IO::Zlib::import: no Compress::Zlib and no external gzip, IO::Zlib::open:
needs a filename, IO::Zlib::READ: NBYTES must be specified,
IO::Zlib::WRITE: too long LENGTH, IO::Zlib::WRITE: OFFSET is not supported

=item SEE ALSO

=item HISTORY

=item COPYRIGHT

=back

=head2 IO::lib::IO::Dir, IO::Dir - supply object methods for directory
handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

new ( [ DIRNAME ] ), open ( DIRNAME ), read (), seek ( POS ), tell (),
rewind (), close (), tie %hash, 'IO::Dir', DIRNAME [, OPTIONS ]

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::File, IO::File - supply object methods for filehandles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( FILENAME [,MODE [,PERMS]] ), new_tmpfile

=item METHODS

open( FILENAME [,MODE [,PERMS]] ), open( FILENAME, IOLAYERS ), binmode(
[LAYER] )

=item NOTE

=item SEE ALSO

=item HISTORY

=back

=head2 IO::lib::IO::Handle, IO::Handle - supply object methods for I/O
handles

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new (), new_from_fd ( FD, MODE )

=item METHODS

$io->fdopen ( FD, MODE ), $io->opened, $io->getline, $io->getlines,
$io->ungetc ( ORD ), $io->write ( BUF, LEN [, OFFSET ] ), $io->error,
$io->clearerr, $io->sync, $io->flush, $io->printflush ( ARGS ),
$io->blocking ( [ BOOL ] ), $io->untaint

=item NOTE

=item SEE ALSO

=item BUGS

=item HISTORY

=back

=head2 IO::lib::IO::Pipe, IO::Pipe - supply object methods for pipes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [READER, WRITER] )

=item METHODS

reader ([ARGS]), writer ([ARGS]), handles ()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Poll, IO::Poll - Object interface to system poll call

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

mask ( IO [, EVENT_MASK ] ), poll ( [ TIMEOUT ] ), events ( IO ), remove (
IO ), handles( [ EVENT_MASK ] )

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Seekable, IO::Seekable - supply seek based methods for
I/O objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

$io->getpos, $io->setpos, $io->seek ( POS, WHENCE ), WHENCE=0 (SEEK_SET),
WHENCE=1 (SEEK_CUR), WHENCE=2 (SEEK_END), $io->sysseek( POS, WHENCE ),
$io->tell

=item SEE ALSO

=item HISTORY

=back

=head2 IO::lib::IO::Select, IO::Select - OO interface to the select system
call

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ HANDLES ] )

=item METHODS

add ( HANDLES ), remove ( HANDLES ), exists ( HANDLE ), handles, can_read (
[ TIMEOUT ] ), can_write ( [ TIMEOUT ] ), has_exception ( [ TIMEOUT ] ),
count (), bits(), select ( READ, WRITE, EXCEPTION [, TIMEOUT ] )

=item EXAMPLE

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Socket, IO::Socket - Object interface to socket
communications

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

accept([PKG]), socketpair(DOMAIN, TYPE, PROTOCOL), atmark, connected,
protocol, sockdomain, sockopt(OPT [, VAL]), socktype, timeout([VAL])

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Socket::INET, IO::Socket::INET - Object interface for
AF_INET domain sockets

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=over 4

=item METHODS

sockaddr (), sockport (), sockhost (), peeraddr (), peerport (), peerhost
()

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::lib::IO::Socket::UNIX, IO::Socket::UNIX - Object interface for
AF_UNIX domain sockets

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

hostpath(), peerpath()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO_Compress_Base::lib::File::GlobMapper, File::GlobMapper - Extend
File Glob to Allow Input and Output Files

=over 4

=item SYNOPSIS

=item DESCRIPTION

This code is a work in progress, There are known bugs, The interface
defined here is tentative, There are portability issues, Do not use in
production code, Consider yourself warned!

=over 4

=item Behind The Scenes

=item Limitations

=item Input File Glob

B<~>, B<~user>, B<.>, B<*>, B<?>, B<\>,  B<[]>,  B<{,}>,  B<()>

=item Output File Glob

"*", #1

=item Returned Data

=back

=item EXAMPLES

=over 4

=item A Rename script

=item A few example globmaps

=back

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Base::lib::IO::Compress::Base, IO::Compress::Base - Base
Class for IO::Compress modules 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Base::lib::IO::Uncompress::AnyUncompress,
IO::Uncompress::AnyUncompress - Uncompress gzip, zip, bzip2 or lzop
file/buffer

=over 4

=item SYNOPSIS

=item DESCRIPTION

RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip, bzip2, lzop, lzf

=item Functional Interface

=over 4

=item anyuncompress $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< RawInflate => 0|1
>>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Base::lib::IO::Uncompress::Base, IO::Uncompress::Base -
Base Class for IO::Uncompress modules 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Compress::Deflate, IO::Compress::Deflate -
Write RFC 1950 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item deflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Merge => 0|1 >>, -Level, -Strategy, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Compress::Gzip, IO::Compress::Gzip - Write RFC
1952 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item gzip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Merge => 0|1 >>, -Level, -Strategy, C<< Minimal => 0|1 >>,
C<< Comment => $comment >>, C<< Name => $string >>, C<< Time => $number >>,
C<< TextFlag => 0|1 >>, C<< HeaderCRC => 0|1 >>, C<< OS_Code => $value >>,
C<< ExtraField => $data >>, C<< ExtraFlags => $value >>, C<< Strict => 0|1
>>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Compress::RawDeflate, IO::Compress::RawDeflate
- Write RFC 1951 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item rawdeflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Merge => 0|1 >>, -Level, -Strategy, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Compress::Zip, IO::Compress::Zip - Write zip
files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item zip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeIn => 0|1 >>, C<< Append => 0|1 >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< Append => 0|1 >>, A Buffer, A Filename, A
Filehandle, C<< Name => $string >>, C<< Time => $number >>, C<< ExtAttr =>
$attr >>, C<< exTime => [$atime, $mtime, $ctime] >>, C<< Comment =>
$comment >>, C<< ZipComment => $comment >>, C<< Method => $method >>, C<<
Stream => 0|1 >>, C<< Zip64 => 0|1 >>, C<< TextFlag => 0|1 >>, C<<
ExtraFieldLocal => $data >> =item C<< ExtraFieldCentral => $data >>, C<<
Minimal => 1|0 >>, C<< BlockSize100K => number >>, C<< WorkFactor => number
>>, -Level, -Strategy, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item print

=item printf

=item syswrite

=item write

=item flush

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item newStream([OPTS])

=item deflateParams

=back

=item Importing 

:all, :constants, :flush, :level, :strategy, :zip_method

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Uncompress::AnyInflate,
IO::Uncompress::AnyInflate - Uncompress zlib-based (zip, gzip) file/buffer

=over 4

=item SYNOPSIS

=item DESCRIPTION

RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip

=item Functional Interface

=over 4

=item anyinflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< RawInflate => 0|1
>>, C<< ParseExtra => 0|1 >> If the gzip FEXTRA header field is present and
this option is set, it will force the module to check that it conforms to
the sub-field structure as defined in RFC 1952

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Uncompress::Gunzip, IO::Uncompress::Gunzip -
Read RFC 1952 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item gunzip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< ParseExtra => 0|1
>> If the gzip FEXTRA header field is present and this option is set, it
will force the module to check that it conforms to the sub-field structure
as defined in RFC 1952

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

Name, Comment

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Uncompress::Inflate, IO::Uncompress::Inflate -
Read RFC 1950 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item inflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Uncompress::RawInflate,
IO::Uncompress::RawInflate - Read RFC 1951 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item rawinflate $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO_Compress_Zlib::IO::Uncompress::Unzip, IO::Uncompress::Unzip -
Read zip files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item unzip $input => $output [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< TrailingData => $scalar >>

=item Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=item Examples

=back

=item Methods 

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing 

:all

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IPC::Msg - SysV Msg IPC object class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::Open2, open2 - open a process for both reading and writing

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item WARNING 

=item SEE ALSO

=back

=head2 IPC::Open3, open3 - open a process for reading, writing, and error
handling

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item See Also

L<IPC::Open2>, L<IPC::Run>

=item WARNING

=back

=head2 IPC::Semaphore - SysV Semaphore IPC object class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::SysV - SysV IPC constants

=over 4

=item SYNOPSIS

=item DESCRIPTION

ftok( PATH, ID )

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 IPC::SysV::Msg, IPC::Msg - SysV Msg IPC object class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::SysV::Semaphore, IPC::Semaphore - SysV Semaphore IPC object
class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPCmd, IPC::Cmd - finding and running system commands made easy

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CLASS METHODS 

=over 4

=item $bool = IPC::Cmd->can_use_ipc_run( [VERBOSE] )

=back

=back

=over 4

=item $bool = IPC::Cmd->can_use_ipc_open3( [VERBOSE] )

=back

=over 4

=item $bool = IPC::Cmd->can_capture_buffer

=back

=over 4

=item FUNCTIONS

=over 4

=item $path = can_run( PROGRAM );

=back

=back

=over 4

=item $ok | ($ok, $err, $full_buf, $stdout_buff, $stderr_buff) = run(
command => COMMAND, [verbose => BOOL, buffer => \$SCALAR] );

command, verbose, buffer, success, errorcode, full_buffer, out_buffer,
error_buffer

=back

=over 4

=item HOW IT WORKS

=item Global Variables

=over 4

=item $IPC::Cmd::VERBOSE

=item $IPC::Cmd::USE_IPC_RUN

=item $IPC::Cmd::USE_IPC_OPEN3

=item $IPC::Cmd::WARN

=back

=item Caveats

Whitespace, IO Redirect

=item See Also

=item ACKNOWLEDGEMENTS

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 List::Util - A selection of general-utility list subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

first BLOCK LIST, max LIST, maxstr LIST, min LIST, minstr LIST, reduce
BLOCK LIST, shuffle LIST, sum LIST

=item KNOWN BUGS

=item SUGGESTED ADDITIONS

=item SEE ALSO

=item COPYRIGHT

=back

=head2 List::Utilib::List::Util, List::Util - A selection of
general-utility list subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

first BLOCK LIST, max LIST, maxstr LIST, min LIST, minstr LIST, reduce
BLOCK LIST, shuffle LIST, sum LIST

=item KNOWN BUGS

=item SUGGESTED ADDITIONS

=item SEE ALSO

=item COPYRIGHT

=back

=head2 List::Utilib::Scalar::Util, Scalar::Util - A selection of
general-utility scalar subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

blessed EXPR, dualvar NUM, STRING, isvstring EXPR, isweak EXPR,
looks_like_number EXPR, openhandle FH, refaddr EXPR, reftype EXPR,
set_prototype CODEREF, PROTOTYPE, tainted EXPR, weaken REF

=item KNOWN BUGS

=item SEE ALSO

=item COPYRIGHT

=item BLATANT PLUG

=back

=head2 Locale::Constants - constants for Locale codes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Language, Locale::Country, Locale::Script, Locale::Currency

=item AUTHOR

=item COPYRIGHT

=back

=head2 Locale::Country - ISO codes for country identification (ISO 3166)

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<alpha-2>, B<alpha-3>, B<numeric>

=item CONVERSION ROUTINES

code2country( CODE, [ CODESET ] ), country2code( STRING, [ CODESET ] ),
country_code2code( CODE, CODESET, CODESET )

=item QUERY ROUTINES

C<all_country_codes( [ CODESET ] )>, C<all_country_names( [ CODESET ] )>

=item SEMI-PRIVATE ROUTINES

=over 4

=item alias_code

=item rename_country

=back

=item EXAMPLES

=item DOMAIN NAMES

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Language, Locale::Script, Locale::Currency, Locale::SubCountry, ISO
3166-1, http://www.iso.org/iso/en/prods-services/iso3166ma/index.html,
http://www.egt.ie/standards/iso3166/iso3166-1-en.html,
http://www.cia.gov/cia/publications/factbook/docs/app-d-1.html

=item AUTHOR

=item COPYRIGHT

=back

=head2 Locale::Currency - ISO three letter codes for currency
identification (ISO 4217)

=over 4

=item SYNOPSIS

=item DESCRIPTION

XTS, XXX

=item CONVERSION ROUTINES

code2currency(), currency2code()

=item QUERY ROUTINES

C<all_currency_codes()>, C<all_currency_names()>

=item EXAMPLES

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Country, Locale::Script, ISO 4217:1995,
http://www.bsi-global.com/iso4217currency

=item AUTHOR

=item COPYRIGHT

=back

=head2 Locale::Language - ISO two letter codes for language identification
(ISO 639)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONVERSION ROUTINES

code2language(), language2code()

=item QUERY ROUTINES

C<all_language_codes()>, C<all_language_names()>

=item EXAMPLES

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Country, Locale::Script, Locale::Currency, ISO 639:1988 (E/F),
http://lcweb.loc.gov/standards/iso639-2/langhome.html

=item AUTHOR

=item COPYRIGHT

=back

=head2 Locale::Maketext - framework for localization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item QUICK OVERVIEW

=item METHODS

=over 4

=item Construction Methods

=item The "maketext" Method

$lh->fail_with I<or> $lh->fail_with(I<PARAM>), $lh->failure_handler_auto

=item Utility Methods

$language->quant($number, $singular), $language->quant($number, $singular,
$plural), $language->quant($number, $singular, $plural, $negative),
$language->numf($number), $language->sprintf($format, @@items),
$language->language_tag(), $language->encoding()

=item Language Handle Attributes and Internals

=back

=item LANGUAGE CLASS HIERARCHIES

=item ENTRIES IN EACH LEXICON

=item BRACKET NOTATION

=item AUTO LEXICONS

=item CONTROLLING LOOKUP FAILURE

=item HOW TO USE MAKETEXT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMER

=item AUTHOR

=back

=head2 Locale::Maketext::Simple - Simple interface to
Locale::Maketext::Lexicon

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

=over 4

=item Class

=item Path

=item Style

=item Export

=item Subclass

=item Decode

=item Encoding

=back

=back

=over 4

=item ACKNOWLEDGMENTS

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=over 4

=item The "MIT" License

=back

=back

=head2 Locale::Maketext::TPJ13 -- article about software localization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Localization and Perl: gettext breaks, Maketext fixes

=over 4

=item A Localization Horror Story: It Could Happen To You

=item The Linguistic View

=item Breaking gettext

=item Replacing gettext

=item Buzzwords: Abstraction and Encapsulation

=item Buzzword: Isomorphism

=item Buzzword: Inheritance

=item Buzzword: Concision

=item The Devil in the Details

=item The Proof in the Pudding: Localizing Web Sites

=item References

=back

=back

=head2 Locale::Script - ISO codes for script identification (ISO 15924)

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<alpha-2>, B<alpha-3>, B<numeric>

=over 4

=item SPECIAL CODES

=back

=item CONVERSION ROUTINES

code2script( CODE, [ CODESET ] ), script2code( STRING, [ CODESET ] ),
script_code2code( CODE, CODESET, CODESET )

=item QUERY ROUTINES

C<all_script_codes ( [ CODESET ] )>, C<all_script_names ( [ CODESET ] )>

=item EXAMPLES

=item KNOWN BUGS AND LIMITATIONS

=item SEE ALSO

Locale::Language, Locale::Currency, Locale::Country, ISO 15924,
http://www.evertype.com/standards/iso15924/

=item AUTHOR

=item COPYRIGHT

=back

=head2 Log::Message - A generic message storing mechanism;

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Hierarchy

Log::Message, Log::Message::Item, Log::Message::Handlers,
Log::Message::Config

=item Options

config, private, verbose, tag, level, remove, chrono

=back

=over 4

=item Methods

=over 4

=item new

=back

=back

=over 4

=item store

message, tag, level, extra

=back

=over 4

=item retrieve

tag, level, message, amount, chrono, remove

=back

=over 4

=item first

=back

=over 4

=item last

=back

=over 4

=item flush

=back

=over 4

=item SEE ALSO

=item AUTHOR

=item Acknowledgements

=item COPYRIGHT

=back

=head2 Log::Message::Config - Configuration options for Log::Message

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=item Acknowledgements

=item COPYRIGHT

=back

=head2 Log::Message::Handlers - Message handlers for Log::Message

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Default Handlers

=over 4

=item log

=back

=back

=over 4

=item carp

=back

=over 4

=item croak

=back

=over 4

=item cluck

=back

=over 4

=item confess

=back

=over 4

=item die

=back

=over 4

=item warn

=back

=over 4

=item trace

=back

=over 4

=item Custom Handlers

=item SEE ALSO

=item AUTHOR

=item Acknowledgements

=item COPYRIGHT

=back

=head2 Log::Message::Item  - Message objects for Log::Message

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Methods and Accessors

=over 4

=item remove

=item id

=item when

=item message

=item level

=item tag

=item shortmess

=item longmess

=item parent

=back

=item SEE ALSO

=item AUTHOR

=item Acknowledgements

=item COPYRIGHT

=back

=head2 Log::Message::Simple

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item msg("message string" [,VERBOSE])

=item debug("message string" [,VERBOSE])

=item error("error string" [,VERBOSE])

=back

=back

=over 4

=item carp();

=item croak();

=item confess();

=item cluck();

=back

=over 4

=item CLASS METHODS

=over 4

=item Log::Message::Simple->stack()

=item Log::Message::Simple->stack_as_string([TRACE])

=item Log::Message::Simple->flush()

=back

=back

=over 4

=item GLOBAL VARIABLES

$ERROR_FH, $MSG_FH, $DEBUG_FH, $STACKTRACE_ON_ERROR

=back

=head2 MIME::Base64 - Encoding and decoding of base64 strings

=over 4

=item SYNOPSIS

=item DESCRIPTION

encode_base64($str), encode_base64($str, $eol);, decode_base64($str)

=item DIAGNOSTICS

Premature end of base64 data, Premature padding of base64 data, Wide
character in subroutine entry

=item EXAMPLES

=item COPYRIGHT

=item SEE ALSO

=back

=head2 MIME::Base64::QuotedPrint, MIME::QuotedPrint - Encoding and decoding
of quoted-printable strings

=over 4

=item SYNOPSIS

=item DESCRIPTION

encode_qp($str), encode_qp($str, $eol), encode_qp($str, $eol, $binmode),
decode_qp($str);

=item COPYRIGHT

=item SEE ALSO

=back

=head2 MIME::QuotedPrint - Encoding and decoding of quoted-printable
strings

=over 4

=item SYNOPSIS

=item DESCRIPTION

encode_qp($str), encode_qp($str, $eol), encode_qp($str, $eol, $binmode),
decode_qp($str);

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Math::BigFloat - Arbitrary size floating point math package

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Canonical notation

=item Output

=item C<mantissa()>, C<exponent()> and C<parts()>

=item Accuracy vs. Precision

=item Rounding

ffround ( +$scale ), ffround ( -$scale ), ffround ( 0 ), fround  ( +$scale
), fround  ( -$scale ) and fround ( 0 )

=back

=item METHODS

=over 4

=item accuracy

=item precision()

=item bexp()

=item bnok()

=item bpi()

=item bcos()

=item bsin()

=item batan2()

=item batan()

=item bmuladd()

=back

=item Autocreating constants

=over 4

=item Math library

=item Using Math::BigInt::Lite

=back

=item EXPORTS

=item BUGS

=item CAVEATS

stringify, bstr(), bdiv, brsft, Modifying and =, bpow, precision() vs.
accuracy()

=item SEE ALSO

=item LICENSE

=item AUTHORS

=back

=head2 Math::BigInt - Arbitrary size integer/float math package

=over 4

=item SYNOPSIS

=item DESCRIPTION

Input, Output

=item METHODS

=over 4

=item config()

=item accuracy()

=item precision()

=item brsft()

=item new()

=item from_oct()

=item from_hex()

=item from_bin()

=item bnan()

=item bzero()

=item binf()

=item bone()

=item is_one()/is_zero()/is_nan()/is_inf()

=item is_pos()/is_neg()/is_positive()/is_negative()

	$x->is_pos();			# true if > 0
	$x->is_neg();			# true if < 0

=item is_odd()/is_even()/is_int()

=item bcmp()

=item bacmp()

=item sign()

=item digit()

=item bneg()

=item babs()

=item bnorm()

=item bnot()

=item binc()

=item bdec()

=item badd()

=item bsub()

=item bmul()

=item bmuladd()

=item bdiv()

=item bmod()

=item bmodinv()

=item bmodpow()

=item bpow()

=item blog()

=item bexp()

=item bnok()

=item bpi()

=item bcos()

=item bsin()

=item batan2()

=item batan()

=item blsft()

=item brsft()

=item band()

=item bior()

=item bxor()

=item bnot()

=item bsqrt()

=item broot()

=item bfac()

=item round()

=item bround()

=item bfround()

=item bfloor()

=item bceil()

=item bgcd()

=item blcm()

=item exponent()

=item mantissa()

=item parts()

=item copy()

=item as_int()/as_number()

=item bsstr()

=item as_hex()

=item as_bin()

=item as_oct()

=item numify()

=item modify()

=item upgrade()/downgrade()

=item div_scale()

=item round_mode()

=back

=item ACCURACY and PRECISION

=over 4

=item Precision P

=item Accuracy A

=item Fallback F

=item Rounding mode R

'trunc', 'even', 'odd', '+inf', '-inf', 'zero', 'common', Precision,
Accuracy (significant digits), Setting/Accessing, Creating numbers, Usage,
Precedence, Overriding globals, Local settings, Rounding, Default values,
Remarks

=back

=item Infinity and Not a Number

oct()/hex(), log(-inf), exp(), cos(), sin(), atan2()

=item INTERNALS

=over 4

=item MATH LIBRARY

=item SIGN

=item mantissa(), exponent() and parts()

=back

=item EXAMPLES

  use Math::BigInt;

=item Autocreating constants

=item PERFORMANCE

=over 4

=item Alternative math libraries

=item SUBCLASSING

=back

=item Subclassing Math::BigInt

=item UPGRADING

=over 4

=item Auto-upgrade

bsqrt(), div(), blog(), bexp()

=back

=item EXPORTS

=item CAVEATS

bstr(), bsstr() and 'cmp', int(), length, bdiv, infinity handling,
Modifying and =, bpow, Overloading -$x, Mixing different object types,
bsqrt(), brsft()

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 Math::BigInt::Calc - Pure Perl module to support Math::BigInt

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item STORAGE

=item METHODS

=item WRAP YOUR OWN

=item LICENSE

This program is free software; you may redistribute it and/or modify it
under
the same terms as Perl itself. 

=item AUTHORS

=item SEE ALSO

=back

=head2 Math::BigInt::CalcEmu - Emulate low-level math with BigInt code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item __emu_bxor

=item __emu_band

=item __emu_bior

=back

=item LICENSE

This program is free software; you may redistribute it and/or modify it
under
the same terms as Perl itself. 

=item AUTHORS

=item SEE ALSO

=back

=head2 Math::BigInt::FastCalc - Math::BigInt::Calc with some XS for more
speed

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item STORAGE

=item METHODS

=item LICENSE

This program is free software; you may redistribute it and/or modify it
under
the same terms as Perl itself. 

=item AUTHORS

=item SEE ALSO

=back

=head2 Math::BigRat - Arbitrary big rational numbers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item MATH LIBRARY

=back

=item METHODS

=over 4

=item new()

=item numerator()

=item denominator()

	$d = $x->denominator();

=item parts()

=item numify()

=item as_int()/as_number()

=item as_hex()

=item as_bin()

=item as_oct()

=item from_hex()/from_bin()/from_oct()

=item length()

=item digit()

=item bnorm()

=item bfac()

=item bround()/round()/bfround()

=item bmod()

=item bneg()

=item is_one()

=item is_zero()

=item is_pos()/is_positive()

=item is_neg()/is_negative()

=item is_int()

=item is_odd()

=item is_even()

=item bceil()
d16535 1
a16535 1
=item bfloor()
d16537 1
a16537 27
	$x->bfloor();

=item bsqrt()

	$x->bsqrt();

=item broot()

	$x->broot($n);

=item badd()/bmul()/bsub()/bdiv()/bdec()/binc()

=item copy()

=item bstr()/bsstr()

=item bacmp()/bcmp()

=item blsft()/brsft()

=item bpow()

=item bexp()

=item bnok()

=item config()
d16541 1
a16541 16
=item BUGS

inf handling (partial), NaN handling (partial), rounding (not implemented
except for bceil/bfloor), $x ** $y where $y is not an integer, bmod(),
blog(), bmodinv() and bmodpow() (partial)

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 Math::Complex - complex numbers and associated mathematical
functions
a16548 6
=item OPERATIONS

=item CREATION

=item DISPLAYING

d16551 1
a16551 1
=item CHANGED IN PERL 5.6
d16555 1
a16555 1
=item USAGE
d16557 1
a16557 1
=over 4
d16559 1
a16559 1
=item PI
d16563 1
a16563 11
=item ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO

=item ERRORS DUE TO INDIGESTIBLE ARGUMENTS

=item BUGS

=item AUTHORS

=back

=head2 Math::Trig - trigonometric functions
d16571 1
a16571 9
=item TRIGONOMETRIC FUNCTIONS

B<tan>

=over 4

=item ERRORS DUE TO DIVISION BY ZERO

=item SIMPLE (REAL) ARGUMENTS, COMPLEX RESULTS
d16575 1
a16575 6
=item PLANE ANGLE CONVERSIONS

deg2rad, grad2rad, rad2deg, grad2deg, deg2grad, rad2grad, rad2rad, deg2deg,
grad2grad

=item RADIAL COORDINATE CONVERSIONS
d16579 1
a16579 1
=item COORDINATE SYSTEMS
d16581 1
a16581 1
=item 3-D ANGLE CONVERSIONS
d16583 2
a16584 2
cartesian_to_cylindrical, cartesian_to_spherical, cylindrical_to_cartesian,
cylindrical_to_spherical, spherical_to_cartesian, spherical_to_cylindrical
d16586 1
a16586 1
=back
d16588 1
a16588 1
=item GREAT CIRCLE DISTANCES AND DIRECTIONS
d16590 1
a16590 13
=over 4

=item great_circle_distance

=item great_circle_direction

=item great_circle_bearing

=item great_circle_destination

=item great_circle_midpoint

=item great_circle_waypoint
d16594 1
a16594 15
=item EXAMPLES

=over 4

=item CAVEAT FOR GREAT CIRCLE FORMULAS

=back

=item BUGS

=item AUTHORS

=back

=head2 Memoize - Make functions faster by trading space for time
d16602 1
a16602 1
=item DETAILS
d16604 1
a16604 1
=item OPTIONS
d16606 1
a16606 1
=over 4
d16608 2
a16609 1
=item INSTALL
d16611 1
a16611 1
=item NORMALIZER
d16613 1
a16613 1
=item C<SCALAR_CACHE>, C<LIST_CACHE>
d16615 1
a16615 1
C<MEMORY>, C<HASH>, C<TIE>, C<FAULT>, C<MERGE>
d16619 1
a16619 1
=item OTHER FACILITIES
d16623 1
a16623 1
=item C<unmemoize>
d16625 1
a16625 1
=item C<flush_cache>
d16627 1
a16627 1
=back
d16629 1
a16629 1
=item CAVEATS
d16631 1
a16631 1
=item PERSISTENT CACHE SUPPORT
d16633 4
a16636 1
=item EXPIRATION SUPPORT
d16638 1
a16638 1
=item BUGS
d16640 1
a16640 1
=item MAILING LIST
d16642 1
a16642 1
=item AUTHOR
d16644 1
a16644 3
=item COPYRIGHT AND LICENSE

=item THANK YOU
d16648 1
a16648 11
=head2 Memoize::AnyDBM_File - glue to provide EXISTS for AnyDBM_File for
Storable use

=over 4

=item DESCRIPTION

=back

=head2 Memoize::Expire - Plug-in module for automatic expiration of
memoized values
d16656 1
a16656 1
=item INTERFACE
d16658 1
a16658 1
 TIEHASH,  EXISTS,  STORE
d16660 1
a16660 1
=item ALTERNATIVES
d16662 1
a16662 3
=item CAVEATS

=item AUTHOR
d16666 1
a16666 1
=back
d16668 1
a16668 5
=head2 Memoize::ExpireFile - test for Memoize expiration semantics

=over 4

=item DESCRIPTION
d16672 1
a16672 1
=head2 Memoize::ExpireTest - test for Memoize expiration semantics
d16676 1
a16676 8
=item DESCRIPTION

=back

=head2 Memoize::NDBM_File - glue to provide EXISTS for NDBM_File for
Storable use

=over 4
d16680 1
a16680 1
=back
d16682 2
a16683 2
=head2 Memoize::SDBM_File - glue to provide EXISTS for SDBM_File for
Storable use
d16685 1
a16685 1
=over 4
d16687 1
a16687 1
=item DESCRIPTION
d16689 1
a16689 7
=back

=head2 Memoize::Storable - store Memoized data in Storable database

=over 4

=item DESCRIPTION
d16693 1
a16693 1
=head2 Module::Build - Build and install Perl modules
d16701 3
a16703 1
=item GUIDE TO DOCUMENTATION
d16705 1
a16705 3
General Usage (L<Module::Build>), Authoring Reference
(L<Module::Build::Authoring>), API Reference (L<Module::Build::API>),
Cookbook (L<Module::Build::Cookbook>)
d16707 1
a16707 1
=item ACTIONS
d16709 1
a16709 5
build, clean, code, config_data, diff, dist, distcheck, distclean, distdir,
distmeta, distsign, disttest, docs, fakeinstall, help, html, install,
manifest, manpages, pardist, ppd, ppmdist, prereq_report, pure_install,
realclean, retest, skipcheck, test, testall, testcover, testdb, testpod,
testpodcoverage, versioninstall
d16711 1
a16711 1
=item OPTIONS
d16715 1
a16715 30
=item Command Line Options

quiet, use_rcfile, verbose, allow_mb_mismatch

=item Default Options File (F<.modulebuildrc>)

=back

=item INSTALL PATHS

lib, arch, script, bin, bindoc, libdoc, binhtml, libhtml, installdirs,
install_path, install_base, destdir, prefix

=item MOTIVATIONS

+, +

=item TO DO

=item AUTHOR

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Module::Build::API - API Reference for Module Authors

=over 4
d16719 1
a16719 1
=over 4
d16721 1
a16721 12
=item CONSTRUCTORS

current(), new(), add_to_cleanup, auto_features, autosplit, build_class,
build_requires, create_packlist, c_source, conflicts, create_makefile_pl,
create_readme, dist_abstract, dist_author, dist_name, dist_version,
dist_version_from, dynamic_config, extra_compiler_flags,
extra_linker_flags, get_options, type, store, default, include_dirs,
install_path, installdirs, license, apache, artistic, artistic_2, bsd, gpl,
lgpl, mit, mozilla, open_source, perl, restrictive, unrestricted, meta_add,
meta_merge, module_name, PL_files, pm_files, pod_files, recommends,
recursive_test_files, requires, script_files, sign, test_files, xs_files,
new_from_context(%args), resume(), subclass()
d16725 3
a16727 38
add_build_element($type), add_to_cleanup(@@files), args(),
autosplit_file($from, $to), base_dir(), build_requires(),
check_installed_status($module, $version), check_installed_version($module,
$version), compare_versions($v1, $op, $v2), config($key), config($key,
$value), config() [deprecated], config_data($name), config_data($name =>
$value), conflicts(), contains_pod($file), copy_if_modified(%parameters),
create_build_script(), current_action(), depends_on(@@actions),
dir_contains($first_dir, $second_dir), dispatch($action, %args),
dist_dir(), dist_name(), dist_version(), do_system($cmd, @@args),
feature($name), feature($name => $value), have_c_compiler(),
install_base_relpaths(), install_base_relpaths($type),
install_base_relpaths($type => $path), install_destination($type),
install_path(), install_path($type), install_path($type => $path),
install_types(), invoked_action(), notes(), notes($key), notes($key =>
$value), orig_dir(), os_type(), is_vmsish(), is_windowsish(), is_unixish(),
prefix_relpaths(), prefix_relpaths($installdirs),
prefix_relpaths($installdirs, $type), prefix_relpaths($installdirs, $type
=> $path), prepare_metadata(), prereq_failures(), prereq_report(),
prompt($message, $default), recommends(), requires(), rscan_dir($dir,
$pattern), runtime_params(), runtime_params($key), script_files(),
up_to_date($source_file, $derived_file), up_to_date(\@@source_files,
\@@derived_files), y_n($message, $default)

=item Autogenerated Accessors

PL_files(), allow_mb_mismatch(), autosplit(), base_dir(), bindoc_dirs(),
blib(), build_bat(), build_class(), build_elements(), build_requires(),
build_script(), c_source(), config_dir(), configure_requires(),
conflicts(), create_makefile_pl(), create_packlist(), create_readme(),
debugger(), destdir(), get_options(), html_css(), include_dirs(),
install_base(), install_sets(), installdirs(), libdoc_dirs(), license(),
magic_number(), mb_version(), meta_add(), meta_merge(), metafile(),
module_name(), orig_dir(), original_prefix(), perl(), pm_files(),
pod_files(), pollute(), prefix(), prereq_action_types(), quiet(),
recommends(), recurse_into(), recursive_test_files(), requires(),
scripts(), use_rcfile(), verbose(), xs_files()

=back
d16729 1
a16729 3
=item MODULE METADATA

keywords, resources
a16734 2
=item SEE ALSO

d16737 1
a16737 1
=head2 Module::Build::Authoring - Authoring Module::Build modules
d16741 2
d16745 1
a16745 1
=item STRUCTURE
d16747 1
a16747 1
=item SUBCLASSING
d16749 1
a16749 1
=item PREREQUISITES
d16751 2
a16752 1
=over 4
d16754 1
a16754 1
=item Types of prerequisites
d16756 1
a16756 1
configure_requires, build_requires, requires, recommends, conflicts
d16758 1
a16758 3
=item Format of prerequisites

=item XS Extensions
d16762 1
a16762 1
=item SAVING CONFIGURATION INFORMATION
d16764 1
a16764 1
=item STARTING MODULE DEVELOPMENT
d16766 1
a16766 1
=item AUTOMATION
d16768 1
a16768 1
=item MIGRATION
d16770 1
a16770 1
=item AUTHOR
d16772 1
a16772 1
=item SEE ALSO
d16774 1
a16774 1
=back
d16776 1
a16776 1
=head2 Module::Build::Base - Default methods for Module::Build
d16778 2
a16779 1
=over 4
d16781 1
a16781 1
=item SYNOPSIS
d16783 1
a16783 1
=item DESCRIPTION
a16788 2
=item SEE ALSO

d16791 1
a16791 1
=head2 Module::Build::Compat - Compatibility with ExtUtils::MakeMaker
d16799 4
d16805 1
a16805 2
create_makefile_pl($style, $build), small, passthrough, traditional,
run_build_pl(args => \@@ARGV), args, script, write_makefile(), makefile
d16807 1
a16807 1
=item SCENARIOS
a16812 2
=item SEE ALSO

d16815 2
a16816 1
=head2 Module::Build::ConfigData - Configuration for Module::Build
d16824 2
a16825 1
=item METHODS
d16827 1
a16827 3
config($name), feature($name), set_config($name, $value),
set_feature($name, $value), config_names(), feature_names(),
auto_feature_names(), write()
d16831 2
d16835 1
a16835 1
=head2 Module::Build::Cookbook - Examples of Module::Build Usage
d16839 2
d16843 1
a16843 1
=item BASIC RECIPES
d16845 1
a16845 1
=over 4
d16847 1
a16847 1
=item Installing modules that use Module::Build
d16849 2
a16850 1
=item Modifying Config.pm values
d16852 1
a16852 1
=item Installing modules using the programmatic interface
d16854 1
a16854 1
=item Installing to a temporary directory
d16856 1
a16856 5
=item Installing to a non-standard directory

=item Installing in the same location as ExtUtils::MakeMaker

=item Running a single test file
d16860 2
a16861 1
=item ADVANCED RECIPES
d16865 1
a16865 1
=item Making a CPAN.pm-compatible distribution
d16867 1
a16867 1
=item Changing the order of the build process
d16869 1
a16869 1
=item Adding new file types to the build process
d16871 1
a16871 1
=item Adding new elements to the install process
d16873 1
a16873 1
=back
d16875 4
a16878 1
=item EXAMPLES ON CPAN
d16880 1
a16880 1
=over 4
d16882 1
a16882 1
=item SVN-Notify-Mirror
d16884 1
a16884 7
1. Using C<auto_features>, I check to see whether two optional modules are
available - SVN::Notify::Config and Net::SSH;, 2. If the S::N::Config
module is loaded, I automatically generate testfiles for it during Build
(using the C<PL_files> property), 3. If the C<ssh_feature> is available, I
ask if the user wishes to perform the ssh tests (since it requires a little
preliminary setup);, 4. Only if the user has C<ssh_feature> and answers yes
to the testing, do I generate a test file
d16886 1
a16886 1
=item Modifying an action
d16890 3
a16892 1
=item AUTHOR
d16894 1
a16894 1
=item COPYRIGHT
d16896 1
a16896 1
=item SEE ALSO
d16898 1
a16898 1
=back
d16900 1
a16900 2
=head2 Module::Build::ModuleInfo, ModuleInfo - Gather package and POD
information from a perl module files
d16902 1
a16902 1
=over 4
d16904 1
a16904 1
=item DESCRIPTION
d16906 1
a16906 5
new_from_file($filename, collect_pod => 1), new_from_module($module,
collect_pod => 1, inc => \@@dirs), name(), version($package), filename(),
packages_inside(), pod_inside(), contains_pod(), pod($section),
find_module_by_name($module, \@@dirs), find_module_dir_by_name($module,
\@@dirs)
a16911 2
=item SEE ALSO

d16914 1
a16914 1
=head2 Module::Build::Notes, $notes_name - Configuration for $module_name
d16924 4
a16927 3
config(\$name), feature(\$name), set_config(\$name, \$value),
set_feature(\$name, \$value), config_names(), feature_names(),
auto_feature_names(), write()
d16931 2
d16935 2
a16936 1
=head2 Module::Build::PPMMaker - Perl Package Manager file creation
d16944 3
a16946 1
=item AUTHOR
d16948 1
a16948 1
=item COPYRIGHT
d16950 1
a16950 1
=item SEE ALSO
d16954 2
a16955 1
=head2 Module::Build::Platform::Amiga - Builder class for Amiga platforms
d16959 2
d16963 1
a16963 1
=item AUTHOR
d16965 1
a16965 1
=item SEE ALSO
d16967 1
a16967 1
=back
d16969 3
a16971 1
=head2 Module::Build::Platform::Default - Stub class for unknown platforms
d16973 1
a16973 3
=over 4

=item DESCRIPTION
d16977 1
a16977 1
=item SEE ALSO
d16981 2
a16982 1
=head2 Module::Build::Platform::EBCDIC - Builder class for EBCDIC platforms
d16986 2
d16990 1
a16990 1
=item AUTHOR
d16992 1
a16992 1
=item SEE ALSO
d16994 1
a16994 1
=back
d16996 2
a16997 1
=head2 Module::Build::Platform::MPEiX - Builder class for MPEiX platforms
d16999 1
a16999 3
=over 4

=item DESCRIPTION
d17003 1
a17003 1
=item SEE ALSO
d17007 2
a17008 1
=head2 Module::Build::Platform::MacOS - Builder class for MacOS platforms
d17012 2
d17016 4
d17022 1
a17022 1
=item Overriden Methods
d17024 2
a17025 1
new(), make_executable(), dispatch(), ACTION_realclean()
d17029 2
d17033 1
a17033 1
=item SEE ALSO
d17037 2
a17038 1
=head2 Module::Build::Platform::RiscOS - Builder class for RiscOS platforms
d17042 2
d17046 10
d17058 1
a17058 1
=item SEE ALSO
d17062 1
a17062 1
=head2 Module::Build::Platform::Unix - Builder class for Unix platforms
d17066 2
d17070 8
d17080 1
a17080 1
=item SEE ALSO
d17084 1
a17084 1
=head2 Module::Build::Platform::VMS - Builder class for VMS platforms
d17088 2
d17092 1
a17092 1
=over 4
d17094 1
a17094 3
=item Overridden Methods

_set_defaults
d17098 2
a17099 1
=back
d17101 1
a17101 1
cull_args
d17103 1
a17103 1
manpage_separator
d17105 1
a17105 1
prefixify
d17107 1
a17107 1
_quote_args
d17109 1
a17109 1
have_forkpipe
d17111 1
a17111 1
_backticks
d17113 1
a17113 1
do_system
d17115 1
a17115 1
_infer_xs_spec
d17117 1
a17117 1
rscan_dir
d17119 1
a17119 1
dist_dir
d17121 4
a17124 1
man3page_name
d17126 1
a17126 7
expand_test_dir

_detildefy

find_perl_interpreter

=over 4
d17130 1
a17130 1
=item SEE ALSO
d17134 1
a17134 1
=head2 Module::Build::Platform::VOS - Builder class for VOS platforms
d17138 2
d17142 1
a17142 1
=item AUTHOR
d17146 4
d17152 1
a17152 2
=head2 Module::Build::Platform::Windows - Builder class for Windows
platforms
d17156 2
d17160 1
a17160 1
=item AUTHOR
d17162 3
a17164 5
=item SEE ALSO

=back

=head2 Module::Build::Platform::aix - Builder class for AIX platform
d17166 1
a17166 3
=over 4

=item DESCRIPTION
d17170 1
a17170 1
=item SEE ALSO
d17174 2
a17175 1
=head2 Module::Build::Platform::cygwin - Builder class for Cygwin platform
d17179 2
d17183 6
a17188 1
=item AUTHOR
a17191 9
=back

=head2 Module::Build::Platform::darwin - Builder class for Mac OS X
platform

=over 4

=item DESCRIPTION

d17194 1
a17194 1
=item SEE ALSO
d17198 1
a17198 1
=head2 Module::Build::Platform::os2 - Builder class for OS/2 platform
d17202 2
d17206 6
a17211 1
=item AUTHOR
d17213 1
a17213 1
=item SEE ALSO
d17217 2
a17218 2
=head2 Module::Build::YAML - Provides just enough YAML support so that
Module::Build works even if YAML.pm is not installed
d17226 6
a17231 1
=item AUTHOR
d17237 2
a17238 1
=head2 Module::CoreList - what modules shipped with versions of perl
d17246 3
a17248 1
=item CAVEATS
d17250 1
a17250 3
=item HISTORY

=item AUTHOR
d17254 1
a17254 1
=item SEE ALSO
d17258 1
a17258 1
=head2 Module::Load - runtime require of both modules and files
d17266 1
a17266 1
=item Rules
d17268 1
a17268 1
=item Caveats
d17270 1
a17270 3
=item ACKNOWLEDGEMENTS

=item BUG REPORTS
d17278 1
a17278 2
=head2 Module::Load::Conditional - Looking up module information / loading
at runtime
d17286 6
a17291 1
=item Methods
d17293 1
a17293 2
=item $href = check_install( module => NAME [, version => VERSION, verbose
=> BOOL ] );
d17295 1
a17295 1
module, version, verbose, file, version, uptodate
d17297 1
a17297 1
=back
d17301 1
a17301 2
=item $bool = can_load( modules => { NAME => VERSION [,NAME => VERSION] },
[verbose => BOOL, nocache => BOOL] )
d17303 1
a17303 1
modules, verbose, nocache
d17307 14
a17320 1
=over 4
d17322 1
a17322 1
=item @@list = requires( MODULE );
d17326 3
d17331 3
a17333 1
=item Global Variables
d17335 1
a17335 1
=over 4
d17337 1
a17337 1
=item $Module::Load::Conditional::VERBOSE
d17339 1
a17339 1
=item $Module::Load::Conditional::FIND_VERSION
d17341 1
a17341 1
=item $Module::Load::Conditional::CHECK_INC_HASH
d17343 1
a17343 1
=item $Module::Load::Conditional::CACHE
d17345 1
a17345 1
=item $Module::Load::Conditional::ERROR
d17347 1
a17347 1
=back
d17349 1
a17349 1
=item See Also
d17351 2
a17352 1
=item BUG REPORTS
d17360 2
a17361 1
=head2 Module::Loaded - mark modules as loaded or unloaded
d17369 1
a17369 1
=item FUNCTIONS
d17371 1
a17371 1
=over 4
d17373 1
a17373 1
=item $bool = mark_as_loaded( PACKAGE );
d17375 1
a17375 1
=back
d17377 1
a17377 1
=back
d17379 1
a17379 1
=over 4
d17381 1
a17381 1
=item $bool = mark_as_unloaded( PACKAGE );
d17383 2
a17384 9
=back

=over 4

=item $loc = is_loaded( PACKAGE );

=back

=over 4
d17392 1
a17392 2
=head2 Module::Pluggable - automatically give your module the ability to
have plugins
a17397 2
=item EXAMPLE

d17400 1
a17400 1
=item ADVANCED USAGE
d17402 1
a17402 3
=item INNER PACKAGES

=item OPTIONS
d17406 1
a17406 1
=item sub_name
d17408 1
a17408 1
=item search_path
d17410 1
a17410 1
=item search_dirs 
d17412 1
a17412 1
=item instantiate
d17414 4
a17417 1
=item require
d17419 1
a17419 1
=item inner
d17421 1
a17421 1
=item only
d17423 1
a17423 1
=item except
d17425 1
a17425 1
=item package
d17427 1
a17427 1
=item file_regex
d17429 1
a17429 1
=back
d17431 1
a17431 1
=item METHODs
d17433 1
a17433 1
=over 4
d17435 1
a17435 1
=item search_path
d17437 1
a17437 3
=back

=item FUTURE PLANS
a17440 6
=item COPYING

=item BUGS

=item SEE ALSO

d17443 1
a17443 2
=head2 Module::Pluggable::Object - automatically give your module the
ability to have plugins
d17451 1
a17451 1
=item AUTHOR
d17453 1
a17453 1
=item COPYING
d17455 1
a17455 1
=item BUGS
d17457 1
a17457 1
=item SEE ALSO
d17459 1
a17459 1
=back
d17461 1
a17461 1
=head2 NDBM_File - Tied access to ndbm files
d17463 1
a17463 1
=over 4
d17465 1
a17465 1
=item SYNOPSIS
d17467 1
a17467 1
=item DESCRIPTION
d17469 1
a17469 1
C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>
d17471 1
a17471 1
=item DIAGNOSTICS
d17473 1
a17473 1
=over 4
d17475 1
a17475 1
=item C<ndbm store returned -1, errno 22, key "..." at ...>
a17478 2
=item BUGS AND WARNINGS

d17481 1
a17481 2
=head2 NEXT - Provide a pseudo-class NEXT (et al) that allows method
redispatch
d17489 2
d17493 12
a17504 1
=item Enforcing redispatch
d17506 1
a17506 1
=item Avoiding repetitions
d17508 1
a17508 1
=item Invoking all versions of a method with a single call
d17510 1
a17510 1
=item Using C<EVERY> methods
d17512 2
a17513 1
=back
a17516 2
=item BUGS AND IRRITATIONS

d17521 1
a17521 1
=head2 Net::Cmd - Network Command class (as used by FTP, SMTP etc)
d17529 1
a17529 1
=item USER METHODS
d17531 1
a17531 2
debug ( VALUE ), message (), code (), ok (), status (), datasend ( DATA ),
dataend ()
d17533 2
a17534 1
=item CLASS METHODS
d17536 1
a17536 3
debug_print ( DIR, TEXT ), debug_text ( TEXT ), command ( CMD [, ARGS, ...
]), unsupported (), response (), parse_response ( TEXT ), getline (),
ungetline ( TEXT ), rawdatasend ( DATA ), read_until_dot (), tied_fh ()
d17538 1
a17538 1
=item EXPORTS
d17540 1
a17540 3
=item AUTHOR

=item COPYRIGHT
d17544 2
a17545 1
=head2 Net::Config - Local configuration data for libnet
d17549 1
a17549 1
=item SYNOPSYS
d17553 2
a17554 1
=item METHODS
d17556 1
a17556 1
requires_firewall HOST
d17558 1
a17558 5
=item NetConfig VALUES

nntp_hosts, snpp_hosts, pop3_hosts, smtp_hosts, ph_hosts, daytime_hosts,
time_hosts, inet_domain, ftp_firewall, ftp_firewall_type, ftp_ext_passive,
ftp_int_passive, local_netmask, test_hosts, test_exists
d17562 2
a17563 2
=head2 Net::Domain - Attempt to evaluate the current host's internet name
and domain
d17571 2
a17572 1
hostfqdn (), domainname (), hostname (), hostdomain ()
d17574 1
a17574 1
=item AUTHOR
d17576 1
a17576 1
=item COPYRIGHT
d17580 1
a17580 1
=head2 Net::FTP - FTP Client class
d17588 11
a17598 1
=item OVERVIEW
d17600 2
a17601 1
=item CONSTRUCTOR
d17603 1
a17603 1
new ([ HOST ] [, OPTIONS ])
a17606 14
login ([LOGIN [,PASSWORD [, ACCOUNT] ] ]), authorize ( [AUTH [, RESP]]),
site (ARGS), ascii, binary, rename ( OLDNAME, NEWNAME ), delete ( FILENAME
), cwd ( [ DIR ] ), cdup (), pwd (), restart ( WHERE ), rmdir ( DIR [,
RECURSE ]), mkdir ( DIR [, RECURSE ]), alloc ( SIZE [, RECORD_SIZE] ), ls (
[ DIR ] ), dir ( [ DIR ] ), get ( REMOTE_FILE [, LOCAL_FILE [, WHERE]] ),
put ( LOCAL_FILE [, REMOTE_FILE ] ), put_unique ( LOCAL_FILE [, REMOTE_FILE
] ), append ( LOCAL_FILE [, REMOTE_FILE ] ), unique_name (), mdtm ( FILE ),
size ( FILE ), supported ( CMD ), hash ( [FILEHANDLE_GLOB_REF],[
BYTES_PER_HASH_MARK] ), feature ( NAME ), nlst ( [ DIR ] ), list ( [ DIR ]
), retr ( FILE ), stor ( FILE ), stou ( FILE ), appe ( FILE ), port ( [
PORT ] ), pasv (), pasv_xfer ( SRC_FILE, DEST_SERVER [, DEST_FILE ] ),
pasv_xfer_unique ( SRC_FILE, DEST_SERVER [, DEST_FILE ] ), pasv_wait (
NON_PASV_SERVER ), abort (), quit ()

d17609 1
a17609 1
=item Methods for the adventurous
d17611 1
a17611 1
quot (CMD [,ARGS])
d17615 1
a17615 1
=item THE dataconn CLASS
d17617 1
a17617 2
read ( BUFFER, SIZE [, TIMEOUT ] ), write ( BUFFER, SIZE [, TIMEOUT ] ),
bytes_read (), abort (), close ()
d17619 1
a17619 1
=item UNIMPLEMENTED
d17621 1
a17621 1
B<SMNT>, B<HELP>, B<MODE>, B<SYST>, B<STAT>, B<STRU>, B<REIN>
d17623 1
a17623 1
=item REPORTING BUGS
d17625 1
a17625 1
=item AUTHOR
d17627 1
a17627 1
=item SEE ALSO
d17629 1
a17629 1
=item USE EXAMPLES
d17631 1
a17631 1
http://www.csh.rit.edu/~adam/Progs/
d17633 1
a17633 1
=item CREDITS
d17635 1
a17635 1
=item COPYRIGHT
d17639 1
a17639 1
=head2 Net::NNTP - NNTP Client class
d17647 1
a17647 3
=item CONSTRUCTOR

new ( [ HOST ] [, OPTIONS ])
a17650 8
article ( [ MSGID|MSGNUM ], [FH] ), body ( [ MSGID|MSGNUM ], [FH] ), head (
[ MSGID|MSGNUM ], [FH] ), articlefh ( [ MSGID|MSGNUM ] ), bodyfh ( [
MSGID|MSGNUM ] ), headfh ( [ MSGID|MSGNUM ] ), nntpstat ( [ MSGID|MSGNUM ]
), group ( [ GROUP ] ), ihave ( MSGID [, MESSAGE ]), last (), date (),
postok (), authinfo ( USER, PASS ), list (), newgroups ( SINCE [,
DISTRIBUTIONS ]), newnews ( SINCE [, GROUPS [, DISTRIBUTIONS ]]), next (),
post ( [ MESSAGE ] ), postfh (), slave (), quit ()

d17653 1
a17653 1
=item Extension methods
d17655 1
a17655 7
newsgroups ( [ PATTERN ] ), distributions (), subscriptions (),
overview_fmt (), active_times (), active ( [ PATTERN ] ), xgtitle ( PATTERN
), xhdr ( HEADER, MESSAGE-SPEC ), xover ( MESSAGE-SPEC ), xpath (
MESSAGE-ID ), xpat ( HEADER, PATTERN, MESSAGE-SPEC), xrover, listgroup ( [
GROUP ] ), reader

=back
d17657 1
a17657 1
=item UNSUPPORTED
d17659 1
a17659 1
=item DEFINITIONS
d17661 1
a17661 1
MESSAGE-SPEC, PATTERN, Examples, C<[^]-]>, C<*bdc>, C<[0-9a-zA-Z]>, C<a??d>
d17663 1
a17663 1
=item SEE ALSO
d17665 1
a17665 1
=item AUTHOR
d17667 1
a17667 1
=item COPYRIGHT
d17669 1
a17669 1
=back
d17671 1
a17671 1
=head2 Net::POP3 - Post Office Protocol 3 Client class (RFC1939)
d17673 1
a17673 1
=over 4
d17675 2
a17676 1
=item SYNOPSIS
d17678 1
a17678 7
=item DESCRIPTION

=item CONSTRUCTOR

new ( [ HOST ] [, OPTIONS ] 0

=item METHODS
d17680 1
a17680 5
auth ( USERNAME, PASSWORD ), user ( USER ), pass ( PASS ), login ( [ USER
[, PASS ]] ), apop ( [ USER [, PASS ]] ), banner (), capa (),  capabilities
(), top ( MSGNUM [, NUMLINES ] ), list ( [ MSGNUM ] ), get ( MSGNUM [, FH ]
), getfh ( MSGNUM ), last (), popstat (), ping ( USER ), uidl ( [ MSGNUM ]
), delete ( MSGNUM ), reset (), quit ()
d17682 1
a17682 1
=item NOTES
d17684 1
a17684 1
=item SEE ALSO
d17686 1
a17686 1
=item AUTHOR
d17688 1
a17688 1
=item COPYRIGHT
d17690 1
a17690 1
=back
d17692 1
a17692 1
=head2 Net::Ping - check a remote host for reachability
d17694 1
a17694 1
=over 4
d17696 1
a17696 1
=item SYNOPSIS
d17698 1
a17698 1
=item DESCRIPTION
d17700 1
a17700 1
=over 4
d17702 1
a17702 1
=item Functions
d17704 1
a17704 6
Net::Ping->new([$proto [, $def_timeout [, $bytes [, $device [, $tos
]]]]]);, $p->ping($host [, $timeout]);, $p->source_verify( { 0 | 1 } );,
$p->service_check( { 0 | 1 } );, $p->tcp_service_check( { 0 | 1 } );,
$p->hires( { 0 | 1 } );, $p->bind($local_addr);, $p->open($host);, $p->ack(
[ $host ] );, $p->nack( $failed_ack_host );, $p->close();,
$p->port_number([$port_number]), pingecho($host [, $timeout]);
d17706 1
a17706 1
=back
d17708 1
a17708 1
=item NOTES
d17710 1
a17710 1
=item INSTALL
d17712 1
a17712 1
=item BUGS
d17714 1
a17714 1
=item AUTHORS
d17716 1
a17716 1
=item COPYRIGHT
d17718 1
a17718 1
=back
d17720 1
a17720 1
=head2 Net::SMTP - Simple Mail Transfer Protocol Client
d17722 1
a17722 1
=over 4
d17724 1
a17724 1
=item SYNOPSIS
d17726 1
a17726 1
=item DESCRIPTION
d17728 1
a17728 1
=item EXAMPLES
d17730 1
a17730 1
=item CONSTRUCTOR
d17732 1
a17732 1
new ( [ HOST ] [, OPTIONS ] )
d17734 1
a17734 1
=item METHODS
d17736 1
a17736 7
banner (), domain (), hello ( DOMAIN ), host (), etrn ( DOMAIN ), auth (
USERNAME, PASSWORD ), mail ( ADDRESS [, OPTIONS] ), send ( ADDRESS ),
send_or_mail ( ADDRESS ), send_and_mail ( ADDRESS ), reset (), recipient (
ADDRESS [, ADDRESS, [...]] [, OPTIONS ] ), to ( ADDRESS [, ADDRESS [...]]
), cc ( ADDRESS [, ADDRESS [...]] ), bcc ( ADDRESS [, ADDRESS [...]] ),
data ( [ DATA ] ), expand ( ADDRESS ), verify ( ADDRESS ), help ( [
$subject ] ), quit ()
d17738 1
a17738 1
=item ADDRESSES
d17740 1
a17740 1
=item SEE ALSO
d17742 1
a17742 1
=item AUTHOR
d17744 1
a17744 1
=item COPYRIGHT
d17746 1
a17746 1
=back
d17748 1
a17748 1
=head2 Net::Time - time and daytime network client interface
d17750 1
a17750 1
=over 4
d17752 1
a17752 1
=item SYNOPSIS
d17754 1
a17754 1
=item DESCRIPTION
d17756 1
a17756 2
inet_time ( [HOST [, PROTOCOL [, TIMEOUT]]]), inet_daytime ( [HOST [,
PROTOCOL [, TIMEOUT]]])
d17758 1
a17758 1
=item AUTHOR
d17760 1
a17760 1
=item COPYRIGHT
d17764 1
a17764 2
=head2 Net::hostent - by-name interface to Perl's built-in gethost*()
functions
d17768 1
a17768 1
=item SYNOPSIS
d17770 1
a17770 1
=item DESCRIPTION
d17772 1
a17772 1
=item EXAMPLES
d17774 1
a17774 1
=item NOTE
d17776 4
a17779 1
=item AUTHOR
d17783 1
a17783 1
=head2 Net::libnetFAQ, libnetFAQ - libnet Frequently Asked Questions
d17785 1
a17785 1
=over 4
d17787 1
a17787 1
=item DESCRIPTION
d17791 3
a17793 1
=item Where to get this document
d17795 1
a17795 1
=item How to contribute to this document
d17799 1
a17799 1
=item Author and Copyright Information
d17801 1
a17801 1
=over 4
d17803 1
a17803 1
=item Disclaimer
d17805 1
a17805 3
=back

=item Obtaining and installing libnet
d17809 1
a17809 1
=item What is libnet ?
d17811 1
a17811 1
=item Which version of perl do I need ?
d17813 1
a17813 1
=item What other modules do I need ?
d17815 1
a17815 1
=item What machines support libnet ?
d17817 1
a17817 5
=item Where can I get the latest libnet release

=back

=item Using Net::FTP
d17821 1
a17821 1
=item How do I download files from an FTP server ?
d17823 1
a17823 1
=item How do I transfer files in binary mode ?
d17825 1
a17825 1
=item How can I get the size of a file on a remote FTP server ?
d17827 1
a17827 2
=item How can I get the modification time of a file on a remote FTP server
?
d17829 2
a17830 1
=item How can I change the permissions of a file on a remote server ?
d17832 1
a17832 1
=item Can I do a reget operation like the ftp command ?
d17834 3
a17836 1
=item How do I get a directory listing from an FTP server ?
d17838 1
a17838 1
=item Changing directory to "" does not fail ?
d17840 1
a17840 1
=item I am behind a SOCKS firewall, but the Firewall option does not work ?
d17842 1
a17842 12
=item I am behind an FTP proxy firewall, but cannot access machines outside
?

=item My ftp proxy firewall does not listen on port 21

=item Is it possible to change the file permissions of a file on an FTP
server ?

=item I have seen scripts call a method message, but cannot find it
documented ?

=item Why does Net::FTP not implement mput and mget methods
d17846 1
a17846 1
=item Using Net::SMTP
d17850 1
a17850 2
=item Why can't the part of an Email address after the @@ be used as the
hostname ?
d17852 1
a17852 1
=item Why does Net::SMTP not do DNS MX lookups ?
d17854 1
a17854 1
=item The verify method always returns true ?
d17856 1
a17856 1
=back
d17858 1
a17858 1
=item Debugging scripts
d17860 1
a17860 1
=over 4
d17862 3
a17864 1
=item How can I debug my scripts that use Net::* modules ?
d17866 1
a17866 1
=back
d17868 1
a17868 1
=item AUTHOR AND COPYRIGHT
d17872 1
a17872 2
=head2 Net::netent - by-name interface to Perl's built-in getnet*()
functions
d17880 17
a17896 1
=item EXAMPLES
d17898 1
a17898 1
=item NOTE
d17900 1
a17900 1
=item AUTHOR
d17904 1
a17904 2
=head2 Net::protoent - by-name interface to Perl's built-in getproto*()
functions
d17912 1
a17912 1
=item NOTE
d17914 1
a17914 1
=item AUTHOR
d17918 1
a17918 2
=head2 Net::servent - by-name interface to Perl's built-in getserv*()
functions
d17922 1
a17922 1
=item SYNOPSIS
d17924 1
a17924 1
=item DESCRIPTION
d17926 1
a17926 1
=item EXAMPLES
d17928 1
a17928 1
=item NOTE
d17930 1
a17930 1
=item AUTHOR
d17932 1
a17932 1
=back
d17934 1
a17934 1
=head2 Netrc, Net::Netrc - OO interface to users netrc file
d17936 1
a17936 1
=over 4
d17938 1
a17938 1
=item SYNOPSIS
d17940 1
a17940 1
=item DESCRIPTION
d17942 1
a17942 1
=item THE .netrc FILE
d17944 1
a17944 2
machine name, default, login name, password string, account string, macdef
name
d17946 1
a17946 1
=item CONSTRUCTOR
d17948 1
a17948 1
lookup ( MACHINE [, LOGIN ])
d17950 1
a17950 1
=item METHODS
d17952 1
a17952 1
login (), password (), account (), lpa ()
d17954 1
a17954 1
=item AUTHOR
d17956 1
a17956 1
=item SEE ALSO
d17958 1
a17958 1
=item COPYRIGHT
d17960 1
a17960 1
=back
d17962 1
a17962 1
=head2 O - Generic interface to Perl Compiler backends
d17964 1
a17964 1
=over 4
d17966 1
a17966 1
=item SYNOPSIS
d17968 1
a17968 1
=item DESCRIPTION
d17970 1
a17970 1
=item CONVENTIONS
d17972 1
a17972 1
=item IMPLEMENTATION
d17976 9
a17984 1
=item AUTHOR
d17988 2
a17989 1
=head2 ODBM_File - Tied access to odbm files
d17997 3
a17999 1
C<O_RDONLY>, C<O_WRONLY>, C<O_RDWR>
d18001 1
a18001 1
=item DIAGNOSTICS
d18005 1
a18005 1
=item C<odbm store returned -1, errno 22, key "..." at ...>
d18009 9
a18017 1
=item BUGS AND WARNINGS
d18021 1
a18021 1
=head2 Object::Accessor
d18029 3
a18031 1
=item METHODS
d18035 3
a18037 1
=item $object = Object::Accessor->new( [ARGS] );
d18041 3
a18043 1
=back
d18047 6
a18052 1
=item $bool = $object->mk_accessors( @@ACCESSORS | \%ACCESSOR_MAP );
d18056 4
d18062 1
a18062 1
=item @@list = $self->ls_accessors;
d18066 1
a18066 1
=over 4
d18068 1
a18068 1
=item $ref = $self->ls_allow(KEY)
d18072 2
d18076 5
a18080 1
=item $clone = $self->mk_clone;
d18082 1
a18082 1
=back
d18086 7
a18092 1
=item $bool = $self->mk_flush;
d18096 2
d18100 3
a18102 1
=item $bool = $self->mk_verify;
d18106 7
a18112 1
=over 4
d18114 1
a18114 1
=item $bool = $self->register_callback( sub { ... } );
d18116 1
a18116 1
=back
d18118 1
a18118 1
=over 4
d18120 1
a18120 1
=item $bool = $self->can( METHOD_NAME )
d18124 3
d18129 1
a18129 1
=item $val = $self->___get( METHOD_NAME );
d18133 3
d18138 1
a18138 1
=item $bool = $self->___set( METHOD_NAME => VALUE );
d18140 1
a18140 1
=back
d18142 1
a18142 1
=over 4
d18144 1
a18144 1
=item LVALUE ACCESSORS
d18146 1
a18146 1
=over 4
d18150 3
a18152 1
Allow handlers, Callbacks
d18156 1
a18156 1
=back
d18160 5
a18164 1
=item GLOBAL VARIABLES
d18168 1
a18168 3
=item $Object::Accessor::FATAL

=item $Object::Accessor::DEBUG
d18172 2
a18173 1
=item TODO
d18177 1
a18177 1
=item Create read-only accessors
d18181 2
a18182 1
=item CAVEATS
d18184 1
a18184 1
=item AUTHOR
d18186 1
a18186 1
=item COPYRIGHT
d18190 1
a18190 1
=head2 Opcode - Disable named opcodes when compiling perl code
a18193 2
=item SYNOPSIS

d18196 1
a18196 1
=item NOTE
d18198 1
a18198 1
=item WARNING
d18200 1
a18200 1
=item Operator Names and Operator Lists
d18202 1
a18202 9
an operator name (opname), an operator tag name (optag), a negated opname
or optag, an operator set (opset)

=item Opcode Functions

opcodes, opset (OP, ...), opset_to_ops (OPSET), opset_to_hex (OPSET),
full_opset, empty_opset, invert_opset (OPSET), verify_opset (OPSET, ...),
define_optag (OPTAG, OPSET), opmask_add (OPSET), opmask, opdesc (OP, ...),
opdump (PAT)
d18204 1
a18204 1
=item Manipulating Opsets
d18206 1
a18206 1
=item TO DO (maybe)
d18208 1
a18208 1
=back
d18212 1
a18212 1
=item Predefined Opcode Tags
d18214 1
a18214 4
:base_core, :base_mem, :base_loop, :base_io, :base_orig, :base_math,
:base_thread, :default, :filesys_read, :sys_db, :browse, :filesys_open,
:filesys_write, :subprocess, :ownprocess, :others, :load,
:still_to_be_decided, :dangerous
d18216 1
a18216 3
=item SEE ALSO

=item AUTHORS
d18220 2
a18221 2
=head2 Opcode::Safe, Safe - Compile and execute code in restricted
compartments
a18228 4
a new namespace, an operator mask

=item WARNING

d18231 1
a18231 1
=item RECENT CHANGES
d18233 1
a18233 1
=item Methods in class Safe
d18235 1
a18235 4
permit (OP, ...), permit_only (OP, ...), deny (OP, ...), deny_only (OP,
...), trap (OP, ...), untrap (OP, ...), share (NAME, ...), share_from
(PACKAGE, ARRAYREF), varglob (VARNAME), reval (STRING), rdo (FILENAME),
root (NAMESPACE), mask (MASK)
d18237 1
a18237 1
=item Some Safety Issues
d18239 1
a18239 1
Memory, CPU, Snooping, Signals, State Changes
d18243 3
a18245 1
=back
d18249 1
a18249 2
=head2 Opcode::ops, ops - Perl pragma to restrict unsafe operations when
compiling
d18253 1
a18253 1
=item SYNOPSIS	
d18257 1
a18257 1
=item SEE ALSO
d18259 2
a18260 1
=back
d18262 1
a18262 1
=head2 POSIX - Perl interface to IEEE Std 1003.1
d18264 3
a18266 1
=over 4
d18268 1
a18268 1
=item SYNOPSIS
d18270 1
a18270 1
=item DESCRIPTION
d18272 1
a18272 1
=item NOTE
d18274 1
a18274 1
=item CAVEATS
d18276 1
a18276 30
=item FUNCTIONS

_exit, abort, abs, access, acos, alarm, asctime, asin, assert, atan, atan2,
atexit, atof, atoi, atol, bsearch, calloc, ceil, chdir, chmod, chown,
clearerr, clock, close, closedir, cos, cosh, creat, ctermid, ctime,
cuserid, difftime, div, dup, dup2, errno, execl, execle, execlp, execv,
execve, execvp, exit, exp, fabs, fclose, fcntl, fdopen, feof, ferror,
fflush, fgetc, fgetpos, fgets, fileno, floor, fmod, fopen, fork, fpathconf,
fprintf, fputc, fputs, fread, free, freopen, frexp, fscanf, fseek, fsetpos,
fstat, fsync, ftell, fwrite, getc, getchar, getcwd, getegid, getenv,
geteuid, getgid, getgrgid, getgrnam, getgroups, getlogin, getpgrp, getpid,
getppid, getpwnam, getpwuid, gets, getuid, gmtime, isalnum, isalpha,
isatty, iscntrl, isdigit, isgraph, islower, isprint, ispunct, isspace,
isupper, isxdigit, kill, labs, ldexp, ldiv, link, localeconv, localtime,
log, log10, longjmp, lseek, malloc, mblen, mbstowcs, mbtowc, memchr,
memcmp, memcpy, memmove, memset, mkdir, mkfifo, mktime, modf, nice,
offsetof, open, opendir, pathconf, pause, perror, pipe, pow, printf, putc,
putchar, puts, qsort, raise, rand, read, readdir, realloc, remove, rename,
rewind, rewinddir, rmdir, scanf, setgid, setjmp, setlocale, setpgid,
setsid, setuid, sigaction, siglongjmp, sigpending, sigprocmask, sigsetjmp,
sigsuspend, sin, sinh, sleep, sprintf, sqrt, srand, sscanf, stat, strcat,
strchr, strcmp, strcoll, strcpy, strcspn, strerror, strftime, strlen,
strncat, strncmp, strncpy, strpbrk, strrchr, strspn, strstr, strtod,
strtok, strtol, strtoul, strxfrm, sysconf, system, tan, tanh, tcdrain,
tcflow, tcflush, tcgetpgrp, tcsendbreak, tcsetpgrp, time, times, tmpfile,
tmpnam, tolower, toupper, ttyname, tzname, tzset, umask, uname, ungetc,
unlink, utime, vfprintf, vprintf, vsprintf, wait, waitpid, wcstombs,
wctomb, write

=item CLASSES
d18280 1
a18280 1
=item POSIX::SigAction
d18282 1
a18282 1
new, handler, mask, flags, safe
d18284 1
a18284 1
=item POSIX::SigRt
d18286 1
a18286 1
%SIGRT, SIGRTMIN, SIGRTMAX
d18288 1
a18288 1
=item POSIX::SigSet
d18290 3
a18292 9
new, addset, delset, emptyset, fillset, ismember

=item POSIX::Termios

new, getattr, getcc, getcflag, getiflag, getispeed, getlflag, getoflag,
getospeed, setattr, setcc, setcflag, setiflag, setispeed, setlflag,
setoflag, setospeed, Baud rate values, Terminal interface values, c_cc
field values, c_cflag field values, c_iflag field values, c_lflag field
values, c_oflag field values
d18296 2
a18297 1
=item PATHNAME CONSTANTS
d18299 1
a18299 1
Constants
d18301 1
a18301 1
=item POSIX CONSTANTS
d18303 1
a18303 1
Constants
d18305 1
a18305 1
=item SYSTEM CONFIGURATION
d18307 1
a18307 1
Constants
d18309 1
a18309 1
=item ERRNO
d18311 1
a18311 1
Constants
d18313 1
a18313 1
=item FCNTL
d18315 1
a18315 1
Constants
d18317 1
a18317 1
=item FLOAT
d18319 1
a18319 1
Constants
d18321 1
a18321 1
=item LIMITS
d18323 1
a18323 1
Constants
d18325 1
a18325 1
=item LOCALE
d18327 1
a18327 1
Constants
d18329 13
a18341 1
=item MATH
d18343 1
a18343 1
Constants
d18345 1
a18345 1
=item SIGNAL
d18347 1
a18347 1
Constants
d18349 1
a18349 1
=item STAT
d18351 1
a18351 1
Constants, Macros
d18353 2
a18354 1
=item STDLIB
d18356 1
a18356 1
Constants
d18358 1
a18358 1
=item STDIO
d18360 1
a18360 1
Constants
d18362 1
a18362 1
=item TIME
d18364 1
a18364 1
Constants
d18366 1
a18366 1
=item UNISTD
d18368 1
a18368 1
Constants
d18370 1
a18370 1
=item WAIT
d18372 1
a18372 2
Constants, WNOHANG, WUNTRACED, Macros, WIFEXITED, WEXITSTATUS, WIFSIGNALED,
WTERMSIG, WIFSTOPPED, WSTOPSIG
d18376 1
a18376 1
=head2 Package::Constants - List all constants declared in a package
d18384 1
a18384 1
=item CLASS METHODS
d18386 1
a18386 1
=over 4
d18388 1
a18388 1
=item @@const = Package::Constants->list( PACKAGE_NAME );
d18390 7
a18396 1
=back
d18398 1
a18398 1
=back
d18400 1
a18400 1
=over 4
d18402 5
a18406 1
=item GLOBAL VARIABLES
d18408 1
a18408 1
=over 4
d18410 1
a18410 1
=item $Package::Constants::DEBUG
d18412 1
a18412 1
=back
d18414 1
a18414 1
=back
d18416 1
a18416 1
=over 4
d18424 1
a18424 1
=head2 Params::Check - A generic input parsing/checking mechanism.
d18432 1
a18432 1
=item Template
d18434 1
a18434 1
default, required, strict_type, defined, no_override, store, allow
d18436 1
a18436 1
=item Functions
d18438 5
a18442 1
=over 4
d18444 1
a18444 1
=item check( \%tmpl, \%args, [$verbose] );
d18446 1
a18446 1
Template, Arguments, Verbose
d18448 1
a18448 1
=back
d18450 1
a18450 7
=back

=over 4

=item allow( $test_me, \@@criteria );

string, regexp, subroutine, array ref
d18454 1
a18454 15
=over 4

=item last_error()

=back

=over 4

=item Global Variables

=over 4

=item $Params::Check::VERBOSE

=item $Params::Check::STRICT_TYPE
d18456 1
a18456 1
=item $Params::Check::ALLOW_UNKNOWN
d18458 1
a18458 1
=item $Params::Check::STRIP_LEADING_DASHES
d18460 1
a18460 1
=item $Params::Check::NO_DUPLICATES
d18462 1
a18462 1
=item $Params::Check::PRESERVE_CASE
d18464 1
a18464 1
=item $Params::Check::ONLY_ALLOW_DEFINED
d18466 6
a18471 1
=item $Params::Check::SANITY_CHECK_TEMPLATE
d18473 1
a18473 1
=item $Params::Check::WARNINGS_FATAL
d18475 1
a18475 1
=item $Params::Check::CALLER_DEPTH
d18477 1
a18477 1
=back
d18479 1
a18479 1
=item AUTHOR
d18481 1
a18481 1
=item Acknowledgements
d18487 1
a18487 2
=head2 PerlIO - On demand loader for PerlIO layers and root of PerlIO::*
name space
d18495 1
a18495 1
:unix, :stdio, :perlio, :crlf, :mmap, :utf8, :bytes, :raw, :pop, :win32
d18497 1
a18497 1
=over 4
d18499 1
a18499 1
=item Custom Layers
d18501 1
a18501 1
:encoding, :via
d18503 7
a18509 1
=item Alternatives to raw
d18511 1
a18511 1
=item Defaults and how to override them
d18513 1
a18513 3
=item Querying the layers of filehandles

=back
d18517 1
a18517 1
=item SEE ALSO
d18521 1
a18521 1
=head2 PerlIO::encoding - encoding layer
d18529 6
a18534 1
=item SEE ALSO
d18538 2
a18539 1
=head2 PerlIO::scalar - in-memory IO, scalar IO
d18547 5
a18551 1
=item IMPLEMENTATION NOTE
d18555 1
a18555 1
=head2 PerlIO::via - Helper class for PerlIO layers implemented in perl
d18559 3
a18561 1
=item SYNOPSIS
d18563 1
a18563 1
=item DESCRIPTION
d18565 1
a18565 1
=item EXPECTED METHODS
d18567 1
a18567 8
$class->PUSHED([$mode[,$fh]]), $obj->POPPED([$fh]),
$obj->UTF8($bellowFlag,[$fh]), $obj->OPEN($path,$mode[,$fh]),
$obj->BINMODE([,$fh]), $obj->FDOPEN($fd[,$fh]),
$obj->SYSOPEN($path,$imode,$perm,[,$fh]), $obj->FILENO($fh),
$obj->READ($buffer,$len,$fh), $obj->WRITE($buffer,$fh), $obj->FILL($fh),
$obj->CLOSE($fh), $obj->SEEK($posn,$whence,$fh), $obj->TELL($fh),
$obj->UNREAD($buffer,$fh), $obj->FLUSH($fh), $obj->SETLINEBUF($fh),
$obj->CLEARERR($fh), $obj->ERROR($fh), $obj->EOF($fh)
d18569 1
a18569 1
=item EXAMPLES
d18573 1
a18573 1
=item Example - a Hexadecimal Handle
d18577 1
a18577 3
=back

=head2 PerlIO::via::QuotedPrint - PerlIO layer for quoted-printable strings
d18581 1
a18581 1
=item SYNOPSIS
d18583 1
a18583 1
=item DESCRIPTION
d18585 1
a18585 1
=item REQUIRED MODULES
d18587 1
a18587 1
=item SEE ALSO
d18589 1
a18589 3
=item ACKNOWLEDGEMENTS

=item COPYRIGHT
d18593 1
a18593 1
=head2 Pod::Checker, podchecker() - check pod documents for syntax errors
d18597 1
a18597 1
=item SYNOPSIS
d18599 1
a18599 1
=item OPTIONS/ARGUMENTS
d18601 1
a18601 1
=over 4
d18603 2
a18604 1
=item podchecker()
d18606 1
a18606 1
B<-warnings> =E<gt> I<val>
d18608 1
a18608 1
=back
d18610 1
a18610 1
=item DESCRIPTION
d18612 1
a18612 1
=item DIAGNOSTICS
d18614 1
a18614 1
=over 4
d18616 2
a18617 1
=item Errors
d18619 1
a18619 9
empty =headn, =over on line I<N> without closing =back, =item without
previous =over, =back without previous =over, No argument for =begin, =end
without =begin, Nested =begin's, =for without formatter specification,
unresolved internal link I<NAME>, Unknown command "I<CMD>", Unknown
interior-sequence "I<SEQ>", nested commands
I<CMD>E<lt>...I<CMD>E<lt>...E<gt>...E<gt>, garbled entity I<STRING>, Entity
number out of range, malformed link LE<lt>E<gt>, nonempty ZE<lt>E<gt>,
empty XE<lt>E<gt>, Spurious text after =pod / =cut, Spurious character(s)
after =back
d18621 2
a18622 1
=item Warnings
d18624 2
a18625 7
multiple occurrence of link target I<name>, line containing nothing but
whitespace in paragraph, file does not start with =head, previous =item has
no contents, preceding non-item paragraph(s), =item type mismatch (I<one>
vs. I<two>), I<N> unescaped C<E<lt>E<gt>> in paragraph, Unknown entity, No
items in =over, No argument for =item, empty section in previous paragraph,
Verbatim paragraph in NAME section, =headI<n> without preceding higher
level
d18627 1
a18627 4
=item Hyperlinks

ignoring leading/trailing whitespace in link, (section) in '$page'
deprecated, alternative text/node '%s' contains non-escaped | or /
d18631 1
a18631 1
=item RETURN VALUE
d18633 1
a18633 1
=item EXAMPLES
d18635 2
a18636 1
=item INTERFACE
d18638 1
a18638 1
=back
d18640 1
a18640 1
C<Pod::Checker-E<gt>new( %options )>
d18642 1
a18642 2
C<$checker-E<gt>poderror( @@args )>, C<$checker-E<gt>poderror( {%opts},
@@args )>
d18644 1
a18644 1
C<$checker-E<gt>num_errors()>
d18646 1
a18646 1
C<$checker-E<gt>num_warnings()>
d18648 1
a18648 1
C<$checker-E<gt>name()>
d18650 1
a18650 1
C<$checker-E<gt>node()>
d18652 1
a18652 7
C<$checker-E<gt>idx()>

C<$checker-E<gt>hyperlink()>

=over 4

=item AUTHOR
d18656 2
a18657 1
=head2 Pod::Escapes -- for resolving Pod EE<lt>...E<gt> sequences
d18665 1
a18665 1
=item GOODIES
d18667 1
a18667 9
e2char($e_content), e2charnum($e_content), $Name2character{I<name>},
$Name2character_number{I<name>}, $Latin1Code_to_fallback{I<integer>},
$Latin1Char_to_fallback{I<character>}, $Code2USASCII{I<integer>}

=item CAVEATS

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS
d18673 2
a18674 1
=head2 Pod::Find - find POD documents in directory trees
d18682 4
d18688 3
d18693 1
a18693 1
=item C<pod_find( { %opts } , @@directories )>
d18695 1
a18695 2
C<-verbose =E<gt> 1>, C<-perl =E<gt> 1>, C<-script =E<gt> 1>, C<-inc =E<gt>
1>
d18697 1
a18697 1
=back
d18699 1
a18699 1
=over 4
d18701 1
a18701 1
=item C<simplify_name( $str )>
d18705 2
d18709 3
a18711 1
=item C<pod_where( { %opts }, $pod )>
d18713 1
a18713 2
C<-inc =E<gt> 1>, C<-dirs =E<gt> [ $dir1, $dir2, ... ]>, C<-verbose =E<gt>
1>
d18715 2
a18716 1
=back
d18718 1
a18718 1
=over 4
d18720 1
a18720 1
=item C<contains_pod( $file , $verbose )>
d18722 1
a18722 1
=back
d18724 1
a18724 1
=over 4
d18730 2
d18734 1
a18734 1
=head2 Pod::Html - module to convert pod files to HTML
d18742 1
a18742 1
=item FUNCTIONS
d18744 1
a18744 1
=over 4
d18746 1
a18746 13
=item pod2html

backlink, cachedir, css, flush, header, help, hiddendirs, htmldir,
htmlroot, index, infile, libpods, netscape, outfile, podpath, podroot,
quiet, recurse, title, verbose

=item htmlify

=item anchorify

=back

=item ENVIRONMENT
a18749 4
=item SEE ALSO

=item COPYRIGHT

d18752 1
a18752 2
=head2 Pod::InputObjects - objects representing POD input paragraphs,
commands, etc.
a18757 4
=item REQUIRES

=item EXPORTS

d18760 1
a18760 2
package B<Pod::InputSource>, package B<Pod::Paragraph>, package
B<Pod::InteriorSequence>, package B<Pod::ParseTree>
d18762 1
a18762 1
=back
d18766 1
a18766 1
=item B<Pod::InputSource>
d18770 1
a18770 1
=over 4
d18772 1
a18772 1
=item B<new()>
d18774 1
a18774 1
=back
d18778 1
a18778 1
=item B<name()>
d18780 1
a18780 1
=back
d18782 1
a18782 1
=over 4
d18784 1
a18784 1
=item B<handle()>
d18786 1
a18786 1
=back
d18788 2
a18789 1
=over 4
d18791 1
a18791 1
=item B<was_cutting()>
d18793 4
a18796 1
=back
d18798 1
a18798 1
=over 4
d18800 1
a18800 1
=item B<Pod::Paragraph>
d18806 1
a18806 1
=item Pod::Paragraph-E<gt>B<new()>
d18808 4
a18811 1
=back
d18813 1
a18813 1
=over 4
d18815 1
a18815 1
=item $pod_para-E<gt>B<cmd_name()>
d18819 3
d18824 5
a18828 1
=item $pod_para-E<gt>B<text()>
d18830 1
a18830 1
=back
d18834 1
a18834 1
=item $pod_para-E<gt>B<raw_text()>
d18836 1
a18836 1
=back
d18838 4
a18841 1
=over 4
d18843 1
a18843 1
=item $pod_para-E<gt>B<cmd_prefix()>
d18845 1
a18845 1
=back
d18847 1
a18847 1
=over 4
d18849 1
a18849 1
=item $pod_para-E<gt>B<cmd_separator()>
d18853 3
d18858 1
a18858 1
=item $pod_para-E<gt>B<parse_tree()>
d18860 1
a18860 1
=back
d18862 1
a18862 1
=over 4
d18864 1
a18864 1
=item $pod_para-E<gt>B<file_line()>
d18866 1
a18866 1
=back
d18870 1
a18870 1
=item B<Pod::InteriorSequence>
d18872 1
a18872 1
=back
d18874 1
a18874 1
=over 4
d18876 1
a18876 1
=item Pod::InteriorSequence-E<gt>B<new()>
d18878 1
a18878 1
=back
d18880 26
a18905 1
=over 4
d18907 1
a18907 3
=item $pod_seq-E<gt>B<cmd_name()>

=back
d18911 1
a18911 1
=item $pod_seq-E<gt>B<prepend()>
d18913 1
a18913 1
=back
d18915 1
a18915 1
=over 4
d18917 1
a18917 1
=item $pod_seq-E<gt>B<append()>
d18919 1
a18919 1
=back
d18921 5
a18925 3
=over 4

=item $pod_seq-E<gt>B<nested()>
d18929 1
a18929 1
=over 4
d18931 1
a18931 1
=item $pod_seq-E<gt>B<raw_text()>
d18933 1
a18933 1
=back
d18935 1
a18935 1
=over 4
d18937 1
a18937 1
=item $pod_seq-E<gt>B<left_delimiter()>
d18939 1
a18939 1
=back
d18941 1
a18941 1
=over 4
d18943 1
a18943 1
=item $pod_seq-E<gt>B<right_delimiter()>
d18945 1
a18945 1
=back
d18947 1
a18947 1
=over 4
d18949 1
a18949 1
=item $pod_seq-E<gt>B<parse_tree()>
d18951 1
a18951 1
=back
d18953 1
a18953 1
=over 4
d18955 1
a18955 1
=item $pod_seq-E<gt>B<file_line()>
d18957 1
a18957 1
=back
d18959 1
a18959 1
=over 4
d18961 1
a18961 1
=item Pod::InteriorSequence::B<DESTROY()>
d18963 1
a18963 1
=back
d18965 1
a18965 1
=over 4
d18967 1
a18967 1
=item B<Pod::ParseTree>
d18969 1
a18969 1
=back
d18971 1
a18971 1
=over 4
d18973 1
a18973 1
=item Pod::ParseTree-E<gt>B<new()>
d18975 1
a18975 1
=back
d18977 1
a18977 1
=over 4
d18979 1
a18979 1
=item $ptree-E<gt>B<top()>
d18981 1
a18981 1
=back
d18983 1
a18983 1
=over 4
d18985 1
a18985 1
=item $ptree-E<gt>B<children()>
d18987 1
a18987 1
=back
d18989 1
a18989 1
=over 4
d18991 2
a18992 1
=item $ptree-E<gt>B<prepend()>
d18996 3
d19001 3
a19003 1
=item $ptree-E<gt>B<append()>
d19005 1
a19005 1
=back
d19009 3
a19011 1
=item $ptree-E<gt>B<raw_text()>
d19013 1
a19013 1
=back
d19015 1
a19015 1
=over 4
d19017 1
a19017 1
=item Pod::ParseTree::B<DESTROY()>
d19021 1
a19021 1
=over 4
a19024 2
=item AUTHOR

d19027 1
a19027 1
=head2 Pod::LaTeX - Convert Pod data to formatted Latex
d19033 1
a19033 15
=item DESCRIPTION

=back

=over 4

=item OBJECT METHODS

C<initialize>

=back

=over 4

=item Data Accessors
d19035 1
a19035 1
B<AddPreamble>
d19039 3
a19041 1
B<AddPostamble>
d19043 1
a19043 1
B<Head1Level>
d19045 1
a19045 1
B<Label>
d19047 1
a19047 1
B<LevelNoNum>
d19049 1
a19049 1
B<MakeIndex>
d19051 1
a19051 1
B<ReplaceNAMEwithSection>
d19053 1
a19053 1
B<StartWithNewPage>
d19055 1
a19055 1
B<TableOfContents>
d19057 1
a19057 1
B<UniqueLabels>
d19059 1
a19059 1
B<UserPreamble>
d19061 8
a19068 1
B<UserPostamble>
d19070 1
a19070 1
B<Lists>
d19074 1
a19074 1
=item Subclassed methods
d19078 1
a19078 1
B<begin_pod>
d19080 1
a19080 1
B<end_pod>
d19082 1
a19082 1
B<command>
d19084 1
a19084 1
B<verbatim>
d19086 1
a19086 1
B<textblock>
d19088 1
a19088 1
B<interior_sequence>
d19090 1
a19090 1
=over 4
d19092 1
a19092 1
=item List Methods
d19094 1
a19094 1
B<begin_list>
d19098 1
a19098 3
B<end_list>

B<add_item>
d19102 1
a19102 1
=item Methods for headings
d19104 1
a19104 3
B<head>

=back
d19108 1
a19108 1
=item Internal methods
d19110 1
a19110 1
B<_output>
d19114 3
a19116 1
B<_replace_special_chars>
d19118 1
a19118 1
B<_replace_special_chars_late>
d19120 1
a19120 1
B<_create_label>
d19122 9
a19130 1
B<_create_index>
d19132 1
a19132 1
B<_clean_latex_commands>
d19134 7
a19140 1
B<_split_delimited>
d19142 1
a19142 1
=over 4
d19144 2
a19145 1
=item NOTES
d19147 1
a19147 1
=item SEE ALSO
d19149 1
a19149 1
=item AUTHORS
d19151 1
a19151 1
=item COPYRIGHT
d19153 1
a19153 1
=item REVISION
d19157 1
a19157 1
=head2 Pod::Man - Convert POD data to formatted *roff input
d19159 2
a19160 1
=over 4
d19162 1
a19162 1
=item SYNOPSIS
d19164 1
a19164 1
=item DESCRIPTION
d19166 1
a19166 2
center, date, fixed, fixedbold, fixeditalic, fixedbolditalic, name, quotes,
release, section
d19168 1
a19168 1
=item DIAGNOSTICS
d19170 1
a19170 2
roff font should be 1 or 2 chars, not "%s", Invalid quote specification
"%s"
d19172 1
a19172 1
=item BUGS
d19174 1
a19174 1
=item CAVEATS
a19177 4
=item COPYRIGHT AND LICENSE

=item SEE ALSO

d19180 1
a19180 1
=head2 Pod::ParseLink - Parse an LE<lt>E<gt> formatting code in POD text
d19188 3
a19190 1
=item SEE ALSO
d19192 1
a19192 1
=item AUTHOR
d19194 2
a19195 1
=item COPYRIGHT AND LICENSE
a19198 2
=head2 Pod::ParseUtils - helpers for POD parsing and conversion

d19201 1
a19201 3
=item SYNOPSIS

=item DESCRIPTION
d19207 1
a19207 1
=item Pod::List
d19209 2
a19210 1
Pod::List-E<gt>new()
d19214 1
a19214 1
$list-E<gt>file()
d19216 1
a19216 1
$list-E<gt>start()
d19218 1
a19218 1
$list-E<gt>indent()
d19220 1
a19220 1
$list-E<gt>type()
d19222 1
a19222 1
$list-E<gt>rx()
d19224 1
a19224 1
$list-E<gt>item()
d19226 1
a19226 1
$list-E<gt>parent()
d19228 1
a19228 1
$list-E<gt>tag()
d19232 3
a19234 1
=item Pod::Hyperlink
d19236 1
a19236 1
Pod::Hyperlink-E<gt>new()
d19238 3
a19240 1
=back
d19242 1
a19242 1
$link-E<gt>parse($string)
d19244 1
a19244 1
$link-E<gt>markup($string)
d19246 1
a19246 1
$link-E<gt>text()
d19248 1
a19248 1
$link-E<gt>warning()
d19250 1
a19250 1
$link-E<gt>file(), $link-E<gt>line()
d19252 1
a19252 1
$link-E<gt>page()
d19254 2
a19255 1
$link-E<gt>node()
d19257 1
a19257 1
$link-E<gt>alttext()
d19259 1
a19259 1
$link-E<gt>type()
d19261 1
a19261 1
$link-E<gt>link()
d19263 1
a19263 1
=over 4
d19265 1
a19265 1
=item Pod::Cache
d19267 2
a19268 1
Pod::Cache-E<gt>new()
d19272 3
a19274 1
$cache-E<gt>item()
d19276 1
a19276 1
$cache-E<gt>find_page($name)
d19280 1
a19280 3
=item Pod::Cache::Item

Pod::Cache::Item-E<gt>new()
d19284 1
a19284 1
$cacheitem-E<gt>page()
d19286 1
a19286 1
$cacheitem-E<gt>description()
d19288 1
a19288 1
$cacheitem-E<gt>path()
d19290 1
a19290 1
$cacheitem-E<gt>file()
d19292 1
a19292 1
$cacheitem-E<gt>nodes()
d19294 1
a19294 3
$cacheitem-E<gt>find_node($name)

$cacheitem-E<gt>idx()
d19298 1
a19298 3
=item AUTHOR

=item SEE ALSO
a19301 2
=head2 Pod::Parser - base class for creating POD filters and translators

d19304 1
a19304 1
=item SYNOPSIS
d19306 1
a19306 1
=item REQUIRES
d19308 1
a19308 1
=item EXPORTS
d19310 1
a19310 1
=item DESCRIPTION
d19312 1
a19312 1
=item QUICK OVERVIEW
d19314 1
a19314 1
=item PARSING OPTIONS
d19316 1
a19316 2
B<-want_nonPODs> (default: unset), B<-process_cut_cmd> (default: unset),
B<-warnings> (default: unset)
d19322 1
a19322 1
=item RECOMMENDED SUBROUTINE/METHOD OVERRIDES
d19328 1
a19328 3
=item B<command()>

C<$cmd>, C<$text>, C<$line_num>, C<$pod_para>
d19334 1
a19334 3
=item B<verbatim()>

C<$text>, C<$line_num>, C<$pod_para>
d19340 1
a19340 3
=item B<textblock()>

C<$text>, C<$line_num>, C<$pod_para>
d19346 1
a19346 1
=item B<interior_sequence()>
d19352 1
a19352 1
=item OPTIONAL SUBROUTINE/METHOD OVERRIDES
d19358 1
a19358 1
=item B<new()>
d19364 1
a19364 1
=item B<initialize()>
d19370 1
a19370 1
=item B<begin_pod()>
d19376 1
a19376 1
=item B<begin_input()>
d19382 1
a19382 1
=item B<end_input()>
d19388 1
a19388 1
=item B<end_pod()>
d19394 1
a19394 1
=item B<preprocess_line()>
d19400 1
a19400 1
=item B<preprocess_paragraph()>
d19406 1
a19406 1
=item METHODS FOR PARSING AND PROCESSING
d19412 1
a19412 5
=item B<parse_text()>

B<-expand_seq> =E<gt> I<code-ref>|I<method-name>, B<-expand_text> =E<gt>
I<code-ref>|I<method-name>, B<-expand_ptree> =E<gt>
I<code-ref>|I<method-name>
d19418 1
a19418 1
=item B<interpolate()>
d19424 1
a19424 1
=item B<parse_paragraph()>
d19430 1
a19430 1
=item B<parse_from_filehandle()>
d19436 1
a19436 1
=item B<parse_from_file()>
d19442 1
a19442 1
=item ACCESSOR METHODS
d19448 1
a19448 1
=item B<errorsub()>
d19454 1
a19454 1
=item B<cutting()>
d19460 1
a19460 1
=item B<parseopts()>
d19466 1
a19466 1
=item B<output_file()>
d19472 1
a19472 1
=item B<output_handle()>
d19478 3
a19480 1
=item B<input_file()>
d19484 2
d19488 3
a19490 1
=item B<input_handle()>
d19496 3
a19498 1
=item B<input_streams()>
d19504 3
a19506 1
=item B<top_stream()>
d19510 1
a19510 1
=over 4
d19512 1
a19512 1
=item PRIVATE METHODS AND DATA
d19514 1
a19514 1
=back
d19516 1
a19516 1
=over 4
d19518 1
a19518 1
=item B<_push_input_stream()>
d19520 1
a19520 1
=back
d19522 1
a19522 1
=over 4
d19524 1
a19524 1
=item B<_pop_input_stream()>
d19526 1
a19526 1
=back
d19528 1
a19528 1
=over 4
d19530 1
a19530 1
=item TREE-BASED PARSING
d19532 1
a19532 1
=item CAVEATS
d19534 1
a19534 1
=item SEE ALSO
d19536 1
a19536 1
=item AUTHOR
d19540 5
a19544 1
=head2 Pod::Perldoc::ToChecker - let Perldoc check Pod for errors
d19546 1
a19546 1
=over 4
d19548 1
a19548 1
=item SYNOPSIS
d19550 1
a19550 1
=item DESCRIPTION
d19552 1
a19552 1
=item SEE ALSO
d19554 1
a19554 1
=item COPYRIGHT AND DISCLAIMERS
d19556 1
a19556 1
=item AUTHOR
d19560 3
a19562 1
=head2 Pod::Perldoc::ToMan - let Perldoc render Pod as man pages
d19566 1
a19566 1
=item SYNOPSIS
d19568 1
a19568 1
=item DESCRIPTION
d19570 1
a19570 1
=item CAVEAT
d19572 1
a19572 1
=item SEE ALSO
d19574 1
a19574 1
=item COPYRIGHT AND DISCLAIMERS
d19576 1
a19576 1
=item AUTHOR
d19580 7
a19586 1
=head2 Pod::Perldoc::ToNroff - let Perldoc convert Pod to nroff
d19588 1
a19588 1
=over 4
d19590 1
a19590 1
=item SYNOPSIS
d19592 1
a19592 1
=item DESCRIPTION
d19594 1
a19594 1
=item CAVEAT
d19598 3
a19600 1
=item COPYRIGHT AND DISCLAIMERS
d19602 1
a19602 1
=item AUTHOR
d19606 1
a19606 1
=head2 Pod::Perldoc::ToPod - let Perldoc render Pod as ... Pod!
d19614 14
d19630 1
a19630 1
=item COPYRIGHT AND DISCLAIMERS
d19632 1
a19632 1
=item AUTHOR
d19636 1
a19636 1
=head2 Pod::Perldoc::ToRtf - let Perldoc render Pod as RTF
d19646 1
a19646 1
=item COPYRIGHT AND DISCLAIMERS
d19648 1
a19648 1
=item AUTHOR
d19652 1
a19652 1
=head2 Pod::Perldoc::ToText - let Perldoc render Pod as plaintext
d19660 1
a19660 1
=item CAVEAT
d19662 1
a19662 1
=item SEE ALSO
d19664 1
a19664 1
=item COPYRIGHT AND DISCLAIMERS
d19666 1
a19666 1
=item AUTHOR
d19670 11
a19680 1
=head2 Pod::Perldoc::ToTk - let Perldoc use Tk::Pod to render Pod
d19682 1
a19682 1
=over 4
d19684 1
a19684 1
=item SYNOPSIS
d19686 1
a19686 1
=item DESCRIPTION
d19688 1
a19688 1
=item SEE ALSO
d19690 1
a19690 1
=item AUTHOR
d19694 3
a19696 1
=head2 Pod::Perldoc::ToXml - let Perldoc render Pod as XML
d19698 1
a19698 1
=over 4
d19700 1
a19700 1
=item SYNOPSIS
d19702 1
a19702 1
=item DESCRIPTION
d19704 1
a19704 1
=item SEE ALSO
d19706 1
a19706 1
=item COPYRIGHT AND DISCLAIMERS
d19708 1
a19708 1
=item AUTHOR
d19710 1
a19710 1
=back
d19712 1
a19712 1
=head2 Pod::PlainText - Convert POD data to formatted ASCII text
d19716 1
a19716 1
=item SYNOPSIS
d19718 1
a19718 1
=item DESCRIPTION
d19720 1
a19720 1
alt, indent, loose, sentence, width
d19722 1
a19722 1
=item DIAGNOSTICS
d19724 1
a19724 2
Bizarre space in item, Can't open %s for reading: %s, Unknown escape: %s,
Unknown sequence: %s, Unmatched =back
d19726 1
a19726 1
=item RESTRICTIONS
d19728 1
a19728 3
=item NOTES

=item SEE ALSO
d19730 1
a19730 1
=item AUTHOR
d19734 3
a19736 1
=head2 Pod::Plainer - Perl extension for converting Pod to old style Pod.
d19738 1
a19738 1
=over 4
d19740 1
a19740 1
=item SYNOPSIS
d19742 1
a19742 1
=item DESCRIPTION
d19744 1
a19744 1
=over 4
d19746 1
a19746 1
=item EXPORT
d19748 1
a19748 1
=back
d19756 1
a19756 2
=head2 Pod::Select, podselect() - extract selected sections of POD from
input
d19768 3
a19770 1
=item SECTION SPECIFICATIONS
d19772 2
a19773 1
=item RANGE SPECIFICATIONS
d19779 1
a19779 1
=item OBJECT METHODS
d19785 3
a19787 1
=item B<curr_headings()>
d19793 3
a19795 1
=item B<select()>
d19801 3
a19803 1
=item B<add_selection()>
d19809 1
a19809 1
=item B<clear_selections()>
d19815 1
a19815 1
=item B<match_section()>
d19821 1
a19821 1
=item B<is_selected()>
d19827 1
a19827 1
=item EXPORTED FUNCTIONS
d19833 1
a19833 3
=item B<podselect()>

B<-output>, B<-sections>, B<-ranges>
d19839 1
a19839 1
=item PRIVATE METHODS AND DATA
d19845 1
a19845 1
=item B<_compile_section_spec()>
d19851 1
a19851 1
=item $self->{_SECTION_HEADINGS}
d19857 1
a19857 1
=item $self->{_SELECTED_SECTIONS}
d19863 1
a19863 3
=item SEE ALSO

=item AUTHOR
d19867 1
a19867 1
=head2 Pod::Simple - framework for parsing Pod
d19869 1
a19869 1
=over 4
d19871 1
a19871 1
=item SYNOPSIS
d19873 1
a19873 1
=item DESCRIPTION
d19875 1
a19875 1
=item MAIN METHODS
d19877 3
a19879 8
C<< $parser = I<SomeClass>->new(); >>, C<< $parser->output_fh( *OUT ); >>,
C<< $parser->output_string( \$somestring ); >>, C<< $parser->parse_file(
I<$some_filename> ); >>, C<< $parser->parse_file( *INPUT_FH ); >>, C<<
$parser->parse_string_document( I<$all_content> ); >>, C<<
$parser->parse_lines( I<...@@lines...>, undef ); >>, C<<
$parser->content_seen >>, C<< I<SomeClass>->filter( I<$filename> ); >>, C<<
I<SomeClass>->filter( I<*INPUT_FH> ); >>, C<< I<SomeClass>->filter(
I<\$document_content> ); >>
d19881 1
a19881 1
=item SECONDARY METHODS
d19883 1
a19883 4
C<< $parser->no_whining( I<SOMEVALUE> ) >>, C<< $parser->no_errata_section(
I<SOMEVALUE> ) >>, C<< $parser->complain_stderr( I<SOMEVALUE> ) >>, C<<
$parser->source_filename >>, C<< $parser->doc_has_started >>, C<<
$parser->source_dead >>
d19885 1
a19885 1
=item CAVEATS
d19887 1
a19887 1
=item SEE ALSO
d19889 1
a19889 1
=item COPYRIGHT AND DISCLAIMERS
d19891 1
a19891 1
=item AUTHOR
a19894 2
=head2 Pod::Simple::Checker -- check the Pod syntax of a document

d19897 1
a19897 1
=item SYNOPSIS
d19899 1
a19899 1
=item DESCRIPTION
d19901 1
a19901 1
=item SEE ALSO
d19903 1
a19903 3
=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR
a19906 2
=head2 Pod::Simple::Debug -- put Pod::Simple into trace/debug mode

d19909 1
a19909 1
=item SYNOPSIS
d19911 1
a19911 1
=item DESCRIPTION
d19913 1
a19913 1
=item CAVEATS
d19915 1
a19915 1
=item GUTS
d19917 1
a19917 1
=item SEE ALSO
d19919 1
a19919 1
=item COPYRIGHT AND DISCLAIMERS
d19921 1
a19921 1
=item AUTHOR
a19924 2
=head2 Pod::Simple::DumpAsText -- dump Pod-parsing events as text

d19927 1
a19927 1
=item SYNOPSIS
d19929 1
a19929 1
=item DESCRIPTION
d19931 1
a19931 1
=item SEE ALSO
d19933 1
a19933 3
=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR
a19936 2
=head2 Pod::Simple::DumpAsXML -- turn Pod into XML

d19939 1
a19939 1
=item SYNOPSIS
d19941 1
a19941 1
=item DESCRIPTION
d19943 1
a19943 1
=item SEE ALSO
d19945 1
a19945 3
=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR
a19948 2
=head2 Pod::Simple::HTML - convert Pod to HTML

d19951 1
a19951 1
=item SYNOPSIS
d19953 1
a19953 1
=item DESCRIPTION
d19955 1
a19955 1
=item CALLING FROM THE COMMAND LINE
d19957 1
a19957 1
=item CALLING FROM PERL
d19959 1
a19959 1
=item METHODS
d19961 1
a19961 1
=item SUBCLASSING
d19963 1
a19963 5
=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR
a19966 3
=head2 Pod::Simple::HTMLBatch - convert several Pod files to several HTML
files

d19969 1
a19969 1
=item SYNOPSIS
d19971 1
a19971 1
=item DESCRIPTION
d19975 1
a19975 1
=item FROM THE COMMAND LINE
a19978 10
=item MAIN METHODS

$batchconv = Pod::Simple::HTMLBatch->new;, $batchconv->batch_convert(
I<indirs>, I<outdir> );, $batchconv->batch_convert( undef    , ...);,
$batchconv->batch_convert( q{@@INC}, ...);, $batchconv->batch_convert(
\@@dirs , ...);, $batchconv->batch_convert( "somedir" , ...);,
$batchconv->batch_convert( 'somedir:someother:also' , ...);,
$batchconv->batch_convert( ... , undef );, $batchconv->batch_convert( ... ,
'somedir' );

d19981 1
a19981 10
=item ACCESSOR METHODS

$batchconv->verbose( I<nonnegative_integer> );, $batchconv->index(
I<true-or-false> );, $batchconv->contents_file( I<filename> );,
$batchconv->contents_page_start( I<HTML_string> );,
$batchconv->contents_page_end( I<HTML_string> );, $batchconv->add_css( $url
);, $batchconv->add_javascript( $url );, $batchconv->css_flurry(
I<true-or-false> );, $batchconv->javascript_flurry( I<true-or-false> );,
$batchconv->no_contents_links( I<true-or-false> );,
$batchconv->html_render_class( I<classname> );
d19985 1
a19985 1
=item NOTES ON CUSTOMIZATION
d19987 1
a19987 1
=item ASK ME!
a19990 2
=item COPYRIGHT AND DISCLAIMERS

d19995 1
a19995 2
=head2 Pod::Simple::LinkSection -- represent "section" attributes of L
codes
d20011 1
a20011 1
=head2 Pod::Simple::Methody -- turn Pod::Simple events into method calls
d20019 1
a20019 1
=item METHOD CALLING
d20029 1
a20029 1
=head2 Pod::Simple::PullParser -- a pull-parser interface to parsing Pod
d20037 1
a20037 14
=item METHODS

my $token = $parser->get_token, $parser->unget_token( $token ),
$parser->unget_token( $token1, $token2, ... ), $parser->set_source(
$filename ), $parser->set_source( $filehandle_object ),
$parser->set_source( \$document_source ), $parser->set_source(
\@@document_lines ), $parser->parse_file(...),
$parser->parse_string_document(...), $parser->filter(...),
$parser->parse_from_file(...), my $title_string = $parser->get_title, my
$title_string = $parser->get_short_title, $author_name	 =
$parser->get_author, $description_name = $parser->get_description,
$version_block = $parser->get_version

=item NOTE
d20047 1
a20047 2
=head2 Pod::Simple::PullParserEndToken -- end-tokens from
Pod::Simple::PullParser
a20054 3
$token->tagname, $token->tagname(I<somestring>), $token->tag(...),
$token->is_tag(I<somestring>) or $token->is_tagname(I<somestring>)

d20063 1
a20063 2
=head2 Pod::Simple::PullParserStartToken -- start-tokens from
Pod::Simple::PullParser
a20070 5
$token->tagname, $token->tagname(I<somestring>), $token->tag(...),
$token->is_tag(I<somestring>) or $token->is_tagname(I<somestring>),
$token->attr(I<attrname>), $token->attr(I<attrname>, I<newvalue>),
$token->attr_hash

d20079 1
a20079 2
=head2 Pod::Simple::PullParserTextToken -- text-tokens from
Pod::Simple::PullParser
d20087 1
a20087 1
$token->text, $token->text(I<somestring>), $token->text_r()
d20097 1
a20097 1
=head2 Pod::Simple::PullParserToken -- tokens from Pod::Simple::PullParser
a20104 3
$token->type, $token->is_start, $token->is_text, $token->is_end,
$token->dump

a20106 2
=item COPYRIGHT AND DISCLAIMERS

d20111 1
a20111 1
=head2 Pod::Simple::RTF -- format Pod as RTF
a20118 12
=item FORMAT CONTROL ATTRIBUTES

$parser->head1_halfpoint_size( I<halfpoint_integer> );,
$parser->head2_halfpoint_size( I<halfpoint_integer> );,
$parser->head3_halfpoint_size( I<halfpoint_integer> );,
$parser->head4_halfpoint_size( I<halfpoint_integer> );,
$parser->codeblock_halfpoint_size( I<halfpoint_integer> );,
$parser->header_halfpoint_size( I<halfpoint_integer> );,
$parser->normal_halfpoint_size( I<halfpoint_integer> );,
$parser->no_proofing_exemptions( I<true_or_false> );, $parser->doc_lang(
I<microsoft_decimal_language_code> )

d20127 1
a20127 1
=head2 Pod::Simple::Search - find POD documents in directory trees
d20135 8
a20142 1
=item CONSTRUCTOR
d20144 1
a20144 1
=item ACCESSORS
d20146 1
a20146 7
$search->inc( I<true-or-false> );, $search->verbose( I<nonnegative-number>
);, $search->limit_glob( I<some-glob-string> );, $search->callback(
I<\&some_routine> );, $search->laborious( I<true-or-false> );,
$search->shadows( I<true-or-false> );, $search->limit_re( I<some-regxp> );,
$search->dir_prefix( I<some-string-value> );, $search->progress(
I<some-progress-object> );, $name2path = $self->name2path;, $path2name =
$self->path2name;
d20148 1
a20148 1
=item MAIN SEARCH METHODS
d20150 1
a20150 1
=over 4
d20152 1
a20152 1
=item C<< $search->survey( @@directories ) >>
d20154 1
a20154 1
C<name2path>, C<path2name>
d20156 1
a20156 1
=item C<< $search->simplify_name( $str ) >>
d20158 1
a20158 1
=item C<< $search->find( $pod ) >>
d20160 1
a20160 1
=item C<< $search->find( $pod, @@search_dirs ) >>
d20162 1
a20162 1
=item C<< $self->contains_pod( $file ) >>
d20172 2
a20173 2
=head2 Pod::Simple::Subclassing -- write a formatter as a Pod::Simple
subclass
d20179 4
d20185 3
a20187 1
=item Events
d20189 1
a20189 13
C<< $parser->_handle_element_start( I<element_name>, I<attr_hashref> ) >>,
C<< $parser->_handle_element_end( I<element_name>  ) >>, C<<
$parser->_handle_text(	I<text_string>	) >>, events with an element_name
of Document, events with an element_name of Para, events with an
element_name of B, C, F, or I, events with an element_name of S, events
with an element_name of X, events with an element_name of L, events with an
element_name of E or Z, events with an element_name of Verbatim, events
with an element_name of head1 .. head4, events with an element_name of
over-bullet, events with an element_name of over-number, events with an
element_name of over-text, events with an element_name of over-block,
events with an element_name of item-bullet, events with an element_name of
item-number, events with an element_name of item-text, events with an
element_name of for, events with an element_name of Data
d20191 1
a20191 1
=item More Pod::Simple Methods
d20193 1
a20193 17
C<< $parser->accept_targets( I<SOMEVALUE> ) >>, C<<
$parser->accept_targets_as_text(  I<SOMEVALUE>	) >>, C<<
$parser->accept_codes( I<Codename>, I<Codename>...  ) >>, C<<
$parser->accept_directive_as_data( I<directive_name> ) >>, C<<
$parser->accept_directive_as_verbatim( I<directive_name> ) >>, C<<
$parser->accept_directive_as_processed( I<directive_name> ) >>, C<<
$parser->nbsp_for_S( I<BOOLEAN> ); >>, C<< $parser->version_report() >>,
C<< $parser->pod_para_count() >>, C<< $parser->line_count() >>, C<<
$parser->nix_X_codes(  I<SOMEVALUE>  ) >>, C<< $parser->merge_text( 
I<SOMEVALUE>  ) >>, C<< $parser->code_handler(	I<CODE_REF>  ) >>, C<<
$parser->cut_handler(  I<CODE_REF>  ) >>, C<< $parser->whine(
I<linenumber>, I<complaint string> ) >>, C<< $parser->scream(
I<linenumber>, I<complaint string> ) >>, C<< $parser->source_dead(1) >>,
C<< $parser->hide_line_numbers( I<SOMEVALUE> ) >>, C<< $parser->no_whining(
I<SOMEVALUE> ) >>, C<< $parser->no_errata_section( I<SOMEVALUE> ) >>, C<<
$parser->complain_stderr( I<SOMEVALUE> ) >>, C<< $parser->bare_output(
I<SOMEVALUE> ) >>, C<< $parser->preserve_whitespace( I<SOMEVALUE> ) >>
d20195 1
a20195 1
=item SEE ALSO
d20197 1
a20197 1
=item COPYRIGHT AND DISCLAIMERS
d20199 1
a20199 1
=item AUTHOR
d20203 5
a20207 1
=head2 Pod::Simple::Text -- format Pod as plaintext
d20211 5
a20215 1
=item SYNOPSIS
d20217 1
a20217 1
=item DESCRIPTION
d20219 1
a20219 1
=item SEE ALSO
d20221 1
a20221 1
=item COPYRIGHT AND DISCLAIMERS
d20223 1
a20223 1
=item AUTHOR
d20227 5
a20231 1
=head2 Pod::Simple::TextContent -- get the text content of Pod
d20235 1
a20235 1
=item SYNOPSIS
d20237 1
a20237 1
=item DESCRIPTION
d20239 1
a20239 1
=item SEE ALSO
d20241 1
a20241 1
=item COPYRIGHT AND DISCLAIMERS
d20243 1
a20243 1
=item AUTHOR
a20246 2
=head2 Pod::Simple::XMLOutStream -- turn Pod into XML

d20249 1
a20249 1
=item SYNOPSIS
d20251 1
a20251 1
=item DESCRIPTION
d20253 1
a20253 1
=item SEE ALSO
d20255 1
a20255 1
=item ABOUT EXTENDING POD
d20257 1
a20257 1
=item ASK ME!
d20259 1
a20259 1
=item COPYRIGHT AND DISCLAIMERS
d20261 1
a20261 1
=item AUTHOR
a20264 3
=head2 Pod::SimpleTree, Pod::Simple::SimpleTree -- parse Pod into a simple
parse tree 

d20267 1
a20267 1
=item SYNOPSIS
d20269 1
a20269 1
=item DESCRIPTION
d20271 1
a20271 3
=item METHODS

=item Tree Contents
a20274 2
=item COPYRIGHT AND DISCLAIMERS

d20292 5
a20296 1
%s, Invalid quote specification "%s"
d20373 1
a20373 1
C<-message>, C<-msg>, C<-exitval>, C<-verbose>, C<-sections>, C<-output>,
d20390 1
a20390 1
=item ACKNOWLEDGMENTS
a20462 2
=item SEE ALSO

a20516 2
B<_make_cmd>

a20603 5
$info = Storable::file_magic( $filename ), C<version>, C<version_nv>,
C<major>, C<minor>, C<hdrsize>, C<netorder>, C<byteorder>, C<intsize>,
C<longsize>, C<ptrsize>, C<nvsize>, C<file>, $info = Storable::read_magic(
$buffer ), $info = Storable::read_magic( $buffer, $must_be_file )

d20701 2
a20702 4
B<setlogsock($sock_type, $stream_location)> (added in Perl 5.004_02),
B<Note>, B<closelog()>

=item THE RULES OF SYS::SYSLOG
d20718 8
a20725 9
C<Invalid argument passed to setlogsock>, C<eventlog passed to setlogsock,
but no Win32 API available>, C<no connection to syslog available>, C<stream
passed to setlogsock, but %s is not writable>, C<stream passed to
setlogsock, but could not find any device>, C<tcp passed to setlogsock, but
tcp service unavailable>, C<syslog: expecting argument %s>, C<syslog:
invalid level/facility: %s>, C<syslog: too many levels given: %s>,
C<syslog: too many facilities given: %s>, C<syslog: level must be given>,
C<udp passed to setlogsock, but udp service unavailable>, C<unix passed to
setlogsock, but path not available>
d20729 1
a20729 13
=over 4

=item Manual Pages

=item RFCs

=item Articles

=item Event Log

=back

=item AUTHORS & ACKNOWLEDGEMENTS
d20736 1
a20736 3
tracker, Search CPAN, Kobes' CPAN Search, Perl Documentation

=item COPYRIGHT
d20760 2
a20761 4
B<setlogsock($sock_type, $stream_location)> (added in Perl 5.004_02),
B<Note>, B<closelog()>

=item THE RULES OF SYS::SYSLOG
d20777 8
a20784 9
C<Invalid argument passed to setlogsock>, C<eventlog passed to setlogsock,
but no Win32 API available>, C<no connection to syslog available>, C<stream
passed to setlogsock, but %s is not writable>, C<stream passed to
setlogsock, but could not find any device>, C<tcp passed to setlogsock, but
tcp service unavailable>, C<syslog: expecting argument %s>, C<syslog:
invalid level/facility: %s>, C<syslog: too many levels given: %s>,
C<syslog: too many facilities given: %s>, C<syslog: level must be given>,
C<udp passed to setlogsock, but udp service unavailable>, C<unix passed to
setlogsock, but path not available>
d20788 1
a20788 13
=over 4

=item Manual Pages

=item RFCs

=item Articles

=item Event Log

=back

=item AUTHORS & ACKNOWLEDGEMENTS
d20795 1
a20795 18
tracker, Search CPAN, Kobes' CPAN Search, Perl Documentation

=item COPYRIGHT

=item LICENSE

=back

=head2 Syslog::win32::Win32, Sys::Syslog::Win32 - Win32 support for
Sys::Syslog

=over 4

=item DESCRIPTION

=item SEE ALSO

=item AUTHORS
a20912 117
=head2 Term::UI - Term::ReadLine UI made easy

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item HOW IT WORKS

=item METHODS

=over 4

=item $reply = $term->get_reply( prompt => 'question?', [choices => \@@list,
default => $list[0], multi => BOOL, print_me => "extra text to print &
record", allow => $ref] );

=back

=back

=over 4

=item $bool = $term->ask_yn( prompt => "your question", [default =>
(y|1,n|0), print_me => "extra text to print & record"] )

=back

=over 4

=item ($opts, $munged) = $term->parse_options( STRING );

=back

=over 4

=item $str = $term->history_as_string

=back

=over 4

=item GLOBAL VARIABLES

=over 4

=item $Term::UI::VERBOSE

=item $Term::UI::AUTOREPLY

=item $Term::UI::INVALID

=item $Term::UI::History::HISTORY_FH

=back

=item EXAMPLES

=over 4

=item Basic get_reply sample

=item get_reply with choices

=item get_reply with choices and default

=item get_reply using print_me & multi

=item get_reply & allow

=item an elaborate ask_yn sample

=back

=item See Also

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Term::UI::History

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item history("message string" [,VERBOSE])

=back

=back

=over 4

=item GLOBAL VARIABLES

$HISTORY_FH

=item See Also

=item AUTHOR

=item COPYRIGHT

=back

d21014 2
a21017 4
=over 4

=item Other Testing Methods

a21019 2
=back

a21027 12
=item Test building utility methods

B<maybe_regex>

=back

B<_try>

B<is_fh>

=over 4

a21051 2
carp, croak

d21125 1
a21125 1
=item Functions
d21199 2
a21200 1
B<Failed Test>, B<Stat>, B<Wstat>, B<Total>, B<Fail>, B<List of Failed>
d21202 1
a21202 1
=back
d21204 1
a21204 1
=item FUNCTIONS
d21206 1
a21206 1
=over 4
d21208 1
a21208 1
=item runtests( @@test_files )
d21210 1
a21210 1
=back
d21212 1
a21212 1
=back
d21214 1
a21214 1
=over 4
d21216 1
a21216 1
=item execute_tests( tests => \@@test_files, out => \*FH )
d21218 1
a21218 1
=back
d21238 2
a21239 3
C<HARNESS_FILELEAK_IN_DIR>, C<HARNESS_NOTTY>, C<HARNESS_PERL>,
C<HARNESS_PERL_SWITCHES>, C<HARNESS_TIMER>, C<HARNESS_VERBOSE>,
C<HARNESS_STRAP_CLASS>
a21248 7
=item SUPPORT

AnnoCPAN: Annotated CPAN documentation, CPAN Ratings, RT: CPAN's request
tracker, Search CPAN

=item SOURCE CODE

d21305 51
a21355 1
=item CONSTRUCTION
d21359 1
a21359 1
=item new()
d21367 1
a21367 1
=item from_test_line( $line )
d21373 1
a21373 3
=item ACCESSORS

ok, number
a21376 3
=head2 Test::Harness::Results - object for tracking results from a single
test file

d21379 1
a21379 1
=item SYNOPSIS
d21381 1
a21381 1
=item CONSTRUCTION
d21385 1
a21385 1
=item new()
d21389 4
d21397 1
a21397 3
=item ACCESSORS

wait, exit
a21400 2
=head2 Test::Harness::Straps - detailed analysis of test results

d21403 1
a21403 1
=item SYNOPSIS
d21405 1
a21405 3
=item DESCRIPTION

=item CONSTRUCTION
d21409 1
a21409 1
=item new()
d21413 4
d21421 1
a21421 1
=item ANALYSIS
d21425 3
a21427 1
=item $strap->analyze( $name, \@@output_lines )
d21431 4
d21439 1
a21439 1
=item $strap->analyze_file( $test_file )
d21445 1
a21445 1
=item Parsing
d21451 2
a21528 19
=item Non-Perl TAP

=over 4

=item C/C++

Specify a test plan, Run tests, Skip tests in certain situations, Have TODO
tests, Produce TAP compatible diagnostics

=item Python

=item JavaScript

=item PHP

phpt, PHPUnit, SimpleTest, Apache-Test

=back

a21536 30
=head2 Test::Harness::Util - Utility functions for Test::Harness::*

=over 4

=item SYNOPSIS

=item PUBLIC FUNCTIONS

=over 4

=item all_in( {parm => value, parm => value} )

start, recurse

=back

=back

=over 4

=item shuffle( @@list )

=back

=over 4

=item blibdir()

=back

a21792 2
=item C<delimited_pat>

d21834 2
a21835 1
=head2 Text::Soundex - Implementation of the soundex algorithm.
d21847 1
a21847 3
=item MAINTAINER

=item HISTORY
d21860 1
a21860 1
=item EXAMPLE
d21876 1
a21876 1
=item EXAMPLES
d21882 1
a21882 1
=head2 Thread - Manipulate threads in Perl (for old code only)
d21886 1
a21886 3
=item DEPRECATED

=item HISTORY
d21895 2
a21896 2
LIST), lock VARIABLE, async BLOCK;, Thread->self, Thread->list, cond_wait
VARIABLE, cond_signal VARIABLE, cond_broadcast VARIABLE, yield
d21900 1
a21900 1
join, detach, equal, tid, done
d21902 1
a21902 3
=item DEFUNCT

lock(\&sub), eval, flags
d21938 25
d22050 2
a22051 1
=head2 Tie::Handle - base class definitions for tied handles
a22092 12
=head2 Tie::Hash::NamedCapture - Named regexp capture buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=back

d22121 1
a22121 1
=item THREAD SUPPORT
d22123 1
a22123 7
=item STORABLE SUPPORT

=item RELIC SUPPORT

=item MAINTAINER

=item AUTHOR
d22170 2
a22171 2
$which ), clock_getres ( $which ), clock_nanosleep ( $which, $nanoseconds,
$flags = 0), clock(), stat, stat FH, stat EXPR
a22180 2
=item useconds or interval more than ...

a22204 2
=item FUNCTIONS

a22206 8
=item C<timelocal()> and C<timegm()>

=item C<timelocal_nocheck()> and C<timegm_nocheck()>

=item Year Value Interpretation

=item Limits of time_t

a22220 73
=item COPYRIGHT

=item AUTHOR

=back

=head2 Time::Piece - Object Oriented time objects

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item USAGE

=over 4

=item Local Locales

=item Date Calculations

=item Date Comparisons

=item Date Parsing

=item YYYY-MM-DDThh:mm:ss

=item Week Number

=item Global Overriding

=back

=item AUTHOR

=item License

=item SEE ALSO

=item BUGS

=back

=head2 Time::Piece::Seconds, Time::Seconds - a simple API to convert
seconds to other date values

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=item AUTHOR

=item LICENSE

=item Bugs

=back

=head2 Time::Seconds - a simple API to convert seconds to other date values

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

a22222 4
=item LICENSE

=item Bugs

d22275 3
a22277 4
C<< $obj->isa( TYPE ) >>, C<< CLASS->isa( TYPE ) >>, C<< eval { VAL->isa(
TYPE ) } >>, C<TYPE>, C<$obj>, C<CLASS>, C<VAL>, C<< $obj->DOES( ROLE ) >>,
C<< CLASS->DOES( ROLE ) >>, C<< $obj->can( METHOD ) >>, C<< CLASS->can(
METHOD ) >>, C<< eval { VAL->can( METHOD ) } >>, C<VERSION ( [ REQUIRE ] )>
d22364 3
a22366 3
C<$decomposed_string = decompose($string [, $useCompatMapping])>,
C<$reordered_string = reorder($string)>, C<$composed_string =
compose($string)>
d22377 7
a22383 13
C<$canonical_decomposition = getCanon($code_point)>,
C<$compatibility_decomposition = getCompat($code_point)>,
C<$code_point_composite = getComposite($code_point_here,
$code_point_next)>, C<$combining_class = getCombinClass($code_point)>,
C<$may_be_composed_with_prev_char = isComp2nd($code_point)>,
C<$is_exclusion = isExclusion($code_point)>, C<$is_singleton =
isSingleton($code_point)>, C<$is_non_starter_decomposition =
isNonStDecomp($code_point)>, C<$is_Full_Composition_Exclusion =
isComp_Ex($code_point)>, C<$NFD_is_NO = isNFD_NO($code_point)>,
C<$NFC_is_NO = isNFC_NO($code_point)>, C<$NFC_is_MAYBE =
isNFC_MAYBE($code_point)>, C<$NFKD_is_NO = isNFKD_NO($code_point)>,
C<$NFKC_is_NO = isNFKC_NO($code_point)>, C<$NFKC_is_MAYBE =
isNFKC_MAYBE($code_point)>
a22398 1
http://www.unicode.org/Public/UNIDATA/CompositionExclusions.txt,
a22458 12
=item general_categories

=back

=over 4

=item bidi_types

=back

=over 4

a22540 182
=head2 Win32 - Interfaces to some Win32 API Functions

=over 4

=item DESCRIPTION

=over 4

=item Alphabetical Listing of Win32 Functions

Win32::AbortSystemShutdown(MACHINE), Win32::BuildNumber(),
Win32::CopyFile(FROM, TO, OVERWRITE), Win32::CreateDirectory(DIRECTORY),
Win32::CreateFile(FILE), Win32::DomainName(),
Win32::ExpandEnvironmentStrings(STRING), Win32::FormatMessage(ERRORCODE),
Win32::FsType(), Win32::FreeLibrary(HANDLE),
Win32::GetANSIPathName(FILENAME), Win32::GetArchName(),
Win32::GetChipName(), Win32::GetCwd(), Win32::GetCurrentThreadId(),
Win32::GetFileVersion(FILENAME), Win32::GetFolderPath(FOLDER [, CREATE]),
Win32::GetFullPathName(FILENAME), Win32::GetLastError(),
Win32::GetLongPathName(PATHNAME), Win32::GetNextAvailDrive(),
Win32::GetOSVersion(), Win32::GetOSName(),
Win32::GetShortPathName(PATHNAME), Win32::GetProcAddress(INSTANCE,
PROCNAME), Win32::GetTickCount(), Win32::GuidGen(), Win32::IsAdminUser(),
Win32::IsWinNT(), Win32::IsWin95(), Win32::LoadLibrary(LIBNAME),
Win32::LoginName(), Win32::LookupAccountName(SYSTEM, ACCOUNT, DOMAIN, SID,
SIDTYPE), Win32::LookupAccountSID(SYSTEM, SID, ACCOUNT, DOMAIN, SIDTYPE),
Win32::MsgBox(MESSAGE [, FLAGS [, TITLE]]), Win32::NodeName(),
Win32::OutputDebugString(STRING), Win32::RegisterServer(LIBRARYNAME),
Win32::SetChildShowWindow(SHOWWINDOW), Win32::SetCwd(NEWDIRECTORY),
Win32::SetLastError(ERROR), Win32::Sleep(TIME), Win32::Spawn(COMMAND, ARGS,
PID), Win32::UnregisterServer(LIBRARYNAME)

=back

=back

=head2 Win32API::File - Low-level access to Win32 system API calls for
files/dirs.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Object Oriented/Tied Handle Interface

=item Exports

C<":Func">, attrLetsToBits, C<$uBits= attrLetsToBits( $sAttributeLetters
)>, C<"a">, C<"c">, C<"h">, C<"o">, C<"r">, C<"s">, C<"t">, createFile,
C<$hObject= createFile( $sPath )>, C<$hObject= createFile( $sPath,
$rvhvOptions )>, C<$hObject= createFile( $sPath, $svAccess )>, C<$hObject=
createFile( $sPath, $svAccess, $rvhvOptions )>, C<$hObject= createFile(
$sPath, $svAccess, $svShare )>, C<$hObject= createFile( $sPath, $svAccess,
$svShare, $rvhvOptions )>, C<"q">, C<"r">, C<"w">, C<"k">, C<"t">, C<"n">,
C<"c">, C<"e">, C<"kc">, C<"ke">, C<"tc">, C<"te">, C<"nc">, C<"ne">, Flags
=> $uFlags, Attributes => $sAttributes, Security => $pSecurityAttributes,
Model => $hModelFile, Access => $sAccess, Access => $uAccess, Create =>
$sCreate, Create => $uCreate, Share => $sShare, Share => $uShare,
getLogicalDrives, C<@@roots= getLogicalDrives()>, CloseHandle,
C<CloseHandle( $hObject )>, CopyFile, C<CopyFile( $sOldFileName,
$sNewFileName, $bFailIfExists )>, CreateFile, C<$hObject= CreateFile(
$sPath, $uAccess, $uShare, $pSecAttr, $uCreate, $uFlags, $hModel )>,
C<"//./PhysicalDrive0">, C<"//./C:">, C<"//./A:">, C<"//./PIPE/PipeName">,
DefineDosDevice, C<DefineDosDevice( $uFlags, $sDosDeviceName, $sTargetPath
)>, C<DDD_RAW_TARGET_PATH>, C<DDD_REMOVE_DEFINITION>,
C<DDD_EXACT_MATCH_ON_REMOVE>, DeleteFile, C<DeleteFile( $sFileName )>,
DeviceIoControl, C<DeviceIoControl( $hDevice, $uIoControlCode, $pInBuf,
$lInBuf, $opOutBuf, $lOutBuf, $olRetBytes, $pOverlapped )>, FdGetOsFHandle,
C<$hNativeHandle= FdGetOsFHandle( $ivFd )>, fileConstant, C<$value=
fileConstant( $sConstantName )>, fileLastError, C<$svError=
fileLastError();>, C<fileLastError( $uError );>, GetDriveType,
C<$uDriveType= GetDriveType( $sRootPath )>, C<DRIVE_UNKNOWN>,
C<DRIVE_NO_ROOT_DIR>, C<DRIVE_REMOVABLE>, C<DRIVE_FIXED>, C<DRIVE_REMOTE>,
C<DRIVE_CDROM>, C<DRIVE_RAMDISK>, GetFileAttributes, C<$uAttrs =
GetFileAttributes( $sPath )>, C<FILE_ATTRIBUTE_ARCHIVE>,
C<FILE_ATTRIBUTE_COMPRESSED>, C<FILE_ATTRIBUTE_DEVICE>,
C<FILE_ATTRIBUTE_DIRECTORY>, C<FILE_ATTRIBUTE_ENCRYPTED>,
C<FILE_ATTRIBUTE_HIDDEN>, C<FILE_ATTRIBUTE_NORMAL>,
C<FILE_ATTRIBUTE_NOT_CONTENT_INDEXED>, C<FILE_ATTRIBUTE_OFFLINE>,
C<FILE_ATTRIBUTE_READONLY>, C<FILE_ATTRIBUTE_REPARSE_POINT>,
C<FILE_ATTRIBUTE_SPARSE_FILE>, C<FILE_ATTRIBUTE_SYSTEM>,
C<FILE_ATTRIBUTE_TEMPORARY>, GetFileType, C<$uFileType= GetFileType( $hFile
)>, C<FILE_TYPE_UNKNOWN>, C<FILE_TYPE_DISK>, C<FILE_TYPE_CHAR>,
C<FILE_TYPE_PIPE>, getFileSize, C<$size= getFileSize( $hFile )>,
GetFileSize, C<$iSizeLow= GetFileSize($win32Handle, $iSizeHigh)>,
GetOverlappedResult, C<$bRetval= GetOverlappedResult( $win32Handle,
$pOverlapped,  $numBytesTransferred, $bWait )>, GetLogicalDrives,
C<$uDriveBits= GetLogicalDrives()>, GetLogicalDriveStrings, C<$olOutLength=
GetLogicalDriveStrings( $lBufSize, $osBuffer )>, GetHandleInformation,
C<GetHandleInformation( $hObject, $ouFlags )>, GetOsFHandle,
C<$hNativeHandle= GetOsFHandle( FILE )>, GetVolumeInformation,
C<GetVolumeInformation( $sRootPath, $osVolName, $lVolName, $ouSerialNum,
$ouMaxNameLen, $ouFsFlags, $osFsType, $lFsType )>, C<FS_CASE_IS_PRESERVED>,
C<FS_CASE_SENSITIVE>, C<FS_UNICODE_STORED_ON_DISK>, C<FS_PERSISTENT_ACLS>,
C<FS_FILE_COMPRESSION>, C<FS_VOL_IS_COMPRESSED>, IsRecognizedPartition,
C<IsRecognizedPartition( $ivPartitionType )>, IsContainerPartition,
C<IsContainerPartition( $ivPartitionType )>, MoveFile, C<MoveFile(
$sOldName, $sNewName )>, MoveFileEx, C<MoveFileEx( $sOldName, $sNewName,
$uFlags )>, C<MOVEFILE_REPLACE_EXISTING>, C<MOVEFILE_COPY_ALLOWED>,
C<MOVEFILE_DELAY_UNTIL_REBOOT>, C<MOVEFILE_WRITE_THROUGH>, OsFHandleOpen,
C<OsFHandleOpen( FILE, $hNativeHandle, $sMode )>, OsFHandleOpenFd, C<$ivFD=
OsFHandleOpenFd( $hNativeHandle, $uMode )>, QueryDosDevice, C<$olTargetLen=
QueryDosDevice( $sDosDeviceName, $osTargetPath, $lTargetBuf )>, ReadFile,
C<ReadFile( $hFile, $opBuffer, $lBytes, $olBytesRead, $pOverlapped )>,
SetErrorMode, C<$uOldMode= SetErrorMode( $uNewMode )>,
C<SEM_FAILCRITICALERRORS>, C<SEM_NOALIGNMENTFAULTEXCEPT>,
C<SEM_NOGPFAULTERRORBOX>, C<SEM_NOOPENFILEERRORBOX>, setFilePointer,
C<$uNewPos = setFilePointer( $hFile, $ivOffset, $uFromWhere )>,
SetFilePointer, C<$uNewPos = SetFilePointer( $hFile, $ivOffset,
$ioivOffsetHigh, $uFromWhere )>, SetHandleInformation,
C<SetHandleInformation( $hObject, $uMask, $uFlags )>, WriteFile,
C<WriteFile( $hFile, $pBuffer, $lBytes, $ouBytesWritten, $pOverlapped )>,
C<":FuncA">, C<":FuncW">, CopyFileW, C<CopyFileW( $swOldFileName,
$swNewFileName, $bFailIfExists )>, CreateFileW, C<$hObject= CreateFileW(
$swPath, $uAccess, $uShare, $pSecAttr, $uCreate, $uFlags, $hModel )>,
DefineDosDeviceW, C<DefineDosDeviceW( $uFlags, $swDosDeviceName,
$swTargetPath )>, DeleteFileW, C<DeleteFileW( $swFileName )>,
GetDriveTypeW, C<$uDriveType= GetDriveTypeW( $swRootPath )>,
GetFileAttributesW, C<$uAttrs= GetFileAttributesW( $swPath )>,
GetLogicalDriveStringsW, C<$olwOutLength= GetLogicalDriveStringsW(
$lwBufSize, $oswBuffer )>, GetVolumeInformationW, C<GetVolumeInformationW(
$swRootPath, $oswVolName, $lwVolName, $ouSerialNum, $ouMaxNameLen,
$ouFsFlags, $oswFsType, $lwFsType )>, MoveFileW, C<MoveFileW( $swOldName,
$swNewName )>, MoveFileExW, C<MoveFileExW( $swOldName, $swNewName, $uFlags
)>, QueryDosDeviceW, C<$olwTargetLen= QueryDosDeviceW( $swDeviceName,
$oswTargetPath, $lwTargetBuf )>, C<":Misc">, C<":DDD_">, C<":DRIVE_">,
C<":FILE_">, C<":FILE_ATTRIBUTE_">, C<":FILE_FLAG_">, C<":FILE_SHARE_">,
C<":FILE_TYPE_">, C<":FS_">, C<":HANDLE_FLAG_">, HANDLE_FLAG_INHERIT,
HANDLE_FLAG_PROTECT_FROM_CLOSE, C<":IOCTL_STORAGE_">,
C<IOCTL_STORAGE_CHECK_VERIFY>, C<IOCTL_STORAGE_MEDIA_REMOVAL>,
C<IOCTL_STORAGE_EJECT_MEDIA>, C<IOCTL_STORAGE_LOAD_MEDIA>,
C<IOCTL_STORAGE_RESERVE>, C<IOCTL_STORAGE_RELEASE>,
C<IOCTL_STORAGE_FIND_NEW_DEVICES>, C<IOCTL_STORAGE_GET_MEDIA_TYPES>,
C<$ucCylsLow[$i]>, C<$ivcCylsHigh[$i]>, C<$uMediaType[$i]>,
C<$uTracksPerCyl[$i]>, C<$uSectsPerTrack[$i]>, C<$uBytesPerSect[$i]>,
C<":IOCTL_DISK_">, C<IOCTL_DISK_GET_DRIVE_GEOMETRY>, C<$ucCylsLow>,
C<$ivcCylsHigh>, C<$uMediaType>, C<$uTracksPerCyl>, C<$uSectsPerTrack>,
C<$uBytesPerSect>, C<IOCTL_DISK_GET_PARTITION_INFO>, C<$uStartLow> and
C<$ivStartHigh>, C<$ucHiddenSects>, C<$uPartitionSeqNumber>,
C<$uPartitionType>, C<$bActive>, C<$bRecognized>, C<$bToRewrite>,
C<IOCTL_DISK_SET_PARTITION_INFO>, C<IOCTL_DISK_GET_DRIVE_LAYOUT>,
C<$cPartitions>, C<$uDiskSignature>, C<IOCTL_DISK_GET_MEDIA_TYPES>,
C<IOCTL_DISK_SET_DRIVE_LAYOUT>, C<IOCTL_DISK_VERIFY>, C<$uStartOffsetLow>
and C<$ivStartOffsetHigh>, C<$uLength>, C<IOCTL_DISK_FORMAT_TRACKS>,
C<IOCTL_DISK_REASSIGN_BLOCKS>, C<IOCTL_DISK_PERFORMANCE>,
C<IOCTL_DISK_IS_WRITABLE>, C<IOCTL_DISK_LOGGING>, DISK_LOGGING_START,
DISK_LOGGING_STOP, DISK_LOGGING_DUMP, DISK_LOGGING_BINNING,
C<IOCTL_DISK_FORMAT_TRACKS_EX>, C<IOCTL_DISK_HISTOGRAM_STRUCTURE>,
C<IOCTL_DISK_HISTOGRAM_DATA>, C<IOCTL_DISK_HISTOGRAM_RESET>,
C<IOCTL_DISK_REQUEST_STRUCTURE>, C<IOCTL_DISK_REQUEST_DATA>, C<":FSCTL_">,
C<FSCTL_SET_REPARSE_POINT>, C<FSCTL_GET_REPARSE_POINT>,
C<FSCTL_DELETE_REPARSE_POINT>, C<":GENERIC_">, C<":MEDIA_TYPE">,
C<Unknown>, C<F5_1Pt2_512>, C<F3_1Pt44_512>, C<F3_2Pt88_512>,
C<F3_20Pt8_512>, C<F3_720_512>, C<F5_360_512>, C<F5_320_512>,
C<F5_320_1024>, C<F5_180_512>, C<F5_160_512>, C<RemovableMedia>,
C<FixedMedia>, C<F3_120M_512>, C<":MOVEFILE_">, C<":SECURITY_">,
C<":SEM_">, C<":PARTITION_">, C<":ALL">

=back

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 Win32CORE - Win32 CORE function stubs

=over 4

=item DESCRIPTION

=item HISTORY

=back

d22569 3
a22571 3
C<Can't find '%s' symbol in %s>, C<Can't load '%s' for module %s: %s>,
C<Undefined symbols present after loading %s: %s>,
C<XSLoader::load('Your::Module', $Your::Module::VERSION)>
@


