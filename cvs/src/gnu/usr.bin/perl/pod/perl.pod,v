head	1.25;
access;
symbols
	OPENBSD_6_2:1.25.0.4
	OPENBSD_6_2_BASE:1.25
	PERL_5_24_2:1.1.1.18
	OPENBSD_6_1:1.23.0.4
	OPENBSD_6_1_BASE:1.23
	OPENBSD_6_0:1.21.0.4
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.20.0.2
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.4
	OPENBSD_5_8_BASE:1.20
	PERL_5_20_2:1.1.1.17
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	PERL_5_20_1:1.1.1.16
	OPENBSD_5_6:1.16.0.4
	OPENBSD_5_6_BASE:1.16
	PERL_5_18_2:1.1.1.15
	PERL:1.1.1
	OPENBSD_5_5:1.15.0.6
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.2
	OPENBSD_5_4_BASE:1.15
	PERL_5_16_3:1.1.1.14
	OPENBSD_5_3:1.14.0.10
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.8
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.6
	OPENBSD_5_0:1.14.0.4
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.2
	OPENBSD_4_9_BASE:1.14
	PERL_5_12_2:1.1.1.13
	OPENBSD_4_8:1.13.0.4
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	PERL_5_10_1:1.1.1.12
	OPENBSD_4_6:1.12.0.6
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.2
	OPENBSD_4_5_BASE:1.12
	PERL_5_10_0:1.1.1.11
	OPENBSD_4_4:1.11.0.10
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.8
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.6
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.4
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.2
	OPENBSD_4_0_BASE:1.11
	PERL_5_8_8:1.1.1.10
	OPENBSD_3_9:1.10.0.6
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.4
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	PERL_5_8_6:1.1.1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	PERL_5_8_5:1.1.1.8
	PERL_5_8_3:1.1.1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	PERL_5_8_2:1.1.1.6
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	PERL_5_8_0:1.1.1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	PERL_5_6_1:1.1.1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.25
date	2017.08.14.13.50.32;	author afresh1;	state Exp;
branches;
next	1.24;
commitid	9G1mW67n0iRI6ckT;

1.24
date	2017.08.14.13.48.47;	author afresh1;	state Exp;
branches;
next	1.23;
commitid	CrMEpTqBUsxCMTjx;

1.23
date	2017.02.05.00.34.36;	author afresh1;	state Exp;
branches;
next	1.22;
commitid	14g5t9TCF9ptuB8D;

1.22
date	2017.02.05.00.32.18;	author afresh1;	state Exp;
branches;
next	1.21;
commitid	cxJ08BvJA9Pt2PTM;

1.21
date	2016.07.03.01.08.03;	author afresh1;	state Exp;
branches;
next	1.20;
commitid	GzHqjSTnBjdF7Wcw;

1.20
date	2015.04.25.19.30.23;	author afresh1;	state Exp;
branches;
next	1.19;
commitid	j9Lvbog4oJBg7dIS;

1.19
date	2015.04.25.19.14.47;	author afresh1;	state Exp;
branches;
next	1.18;
commitid	XRK22kO4se3v2i2I;

1.18
date	2014.11.17.21.03.19;	author afresh1;	state Exp;
branches;
next	1.17;
commitid	KQNGgR8uwAxYXWj8;

1.17
date	2014.11.17.20.57.07;	author afresh1;	state Exp;
branches;
next	1.16;
commitid	QP75iYx42Uo7mMxO;

1.16
date	2014.03.24.15.05.32;	author afresh1;	state Exp;
branches;
next	1.15;

1.15
date	2013.03.25.20.40.57;	author sthen;	state Exp;
branches;
next	1.14;

1.14
date	2010.09.24.15.07.03;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2009.10.12.18.24.47;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2008.09.29.17.36.16;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.28.19.23.09;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2005.01.15.21.30.35;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2004.08.09.18.10.14;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.07.21.33.07;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.03.03.02.43;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.27.22.25.32;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.24.18.35.50;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.07.17;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.52.07;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.58.58;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.12.55;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.12.55;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.40.33;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.10.19;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2001.05.24.18.24.27;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2002.10.27.22.15.03;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.12.03.02.44.23;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2004.04.07.21.13.34;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2004.08.09.17.48.06;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2005.01.15.21.17.56;	author millert;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2006.03.28.18.49.23;	author millert;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2008.09.29.17.18.50;	author millert;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	2009.10.12.18.10.38;	author millert;	state Exp;
branches;
next	1.1.1.13;

1.1.1.13
date	2010.09.24.14.49.09;	author millert;	state Exp;
branches;
next	1.1.1.14;

1.1.1.14
date	2013.03.25.20.09.12;	author sthen;	state Exp;
branches;
next	1.1.1.15;

1.1.1.15
date	2014.03.24.14.59.06;	author afresh1;	state Exp;
branches;
next	1.1.1.16;

1.1.1.16
date	2014.11.17.20.53.12;	author afresh1;	state Exp;
branches;
next	1.1.1.17;
commitid	B31cAbBIXiCqnL97;

1.1.1.17
date	2015.04.25.19.10.42;	author afresh1;	state Exp;
branches;
next	1.1.1.18;
commitid	Wpcs5S8qILgEZC7F;

1.1.1.18
date	2017.08.14.13.46.18;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.25
log
@Apply pre-built unicore patch - perl-5.24.2

OK bluhm@@, Reads ok sthen@@
@
text
@=head1 NAME

perl - The Perl 5 language interpreter

=head1 SYNOPSIS

B<perl>	S<[ B<-sTtuUWX> ]>
	S<[ B<-hv> ] [ B<-V>[:I<configvar>] ]>
	S<[ B<-cw> ] [ B<-d>[B<t>][:I<debugger>] ] [ B<-D>[I<number/list>] ]>
	S<[ B<-pna> ] [ B<-F>I<pattern> ] [ B<-l>[I<octal>] ] [ B<-0>[I<octal/hexadecimal>] ]>
	S<[ B<-I>I<dir> ] [ B<-m>[B<->]I<module> ] [ B<-M>[B<->]I<'module...'> ] [ B<-f> ]>
	S<[ B<-C [I<number/list>] >]>
	S<[ B<-S> ]>
	S<[ B<-x>[I<dir>] ]>
	S<[ B<-i>[I<extension>] ]>
	S<[ [B<-e>|B<-E>] I<'command'> ] [ B<--> ] [ I<programfile> ] [ I<argument> ]...>

For more information on these options, you can run C<perldoc perlrun>.

=head1 GETTING HELP

The F<perldoc> program gives you access to all the documentation that comes
with Perl.  You can get more documentation, tutorials and community support
online at L<http://www.perl.org/>.

If you're new to Perl, you should start by running C<perldoc perlintro>,
which is a general intro for beginners and provides some background to help
you navigate the rest of Perl's extensive documentation.  Run C<perldoc
perldoc> to learn more things you can do with F<perldoc>.

For ease of access, the Perl manual has been split up into several sections.

=begin buildtoc

# This section is parsed by Porting/pod_lib.pl for use by pod/buildtoc etc

flag =g  perlmodlib perlapi perlintern
flag =go perltoc
flag =ro perlcn perljp perlko perltw
flag =   perlvms

path perlfaq.*               cpan/perlfaq/lib/
path perlglossary            cpan/perlfaq/lib/
path perlxs(?:tut|typemap)?  dist/ExtUtils-ParseXS/lib/
path perldoc                 cpan/Pod-Perldoc/

aux c2ph h2ph h2xs perlbug pl2pm pod2html pod2man splain xsubpp

=end buildtoc

=head2 Overview

    perl		Perl overview (this section)
    perlintro		Perl introduction for beginners
    perlrun		Perl execution and options
    perltoc		Perl documentation table of contents

=head2 Tutorials

    perlreftut		Perl references short introduction
    perldsc		Perl data structures intro
    perllol		Perl data structures: arrays of arrays

    perlrequick 	Perl regular expressions quick start
    perlretut		Perl regular expressions tutorial

    perlootut		Perl OO tutorial for beginners

    perlperf		Perl Performance and Optimization Techniques

    perlstyle		Perl style guide

    perlcheat		Perl cheat sheet
    perltrap		Perl traps for the unwary
    perldebtut		Perl debugging tutorial

    perlfaq		Perl frequently asked questions
      perlfaq1		General Questions About Perl
      perlfaq2		Obtaining and Learning about Perl
      perlfaq3		Programming Tools
      perlfaq4		Data Manipulation
      perlfaq5		Files and Formats
      perlfaq6		Regexes
      perlfaq7		Perl Language Issues
      perlfaq8		System Interaction
      perlfaq9		Networking

=head2 Reference Manual

    perlsyn		Perl syntax
    perldata		Perl data structures
    perlop		Perl operators and precedence
    perlsub		Perl subroutines
    perlfunc		Perl built-in functions
      perlopentut	Perl open() tutorial
      perlpacktut	Perl pack() and unpack() tutorial
    perlpod		Perl plain old documentation
    perlpodspec 	Perl plain old documentation format specification
    perlpodstyle	Perl POD style guide
    perldiag		Perl diagnostic messages
    perllexwarn 	Perl warnings and their control
    perldebug		Perl debugging
    perlvar		Perl predefined variables
    perlre		Perl regular expressions, the rest of the story
    perlrebackslash	Perl regular expression backslash sequences
    perlrecharclass	Perl regular expression character classes
    perlreref		Perl regular expressions quick reference
    perlref		Perl references, the rest of the story
    perlform		Perl formats
    perlobj		Perl objects
    perltie		Perl objects hidden behind simple variables
      perldbmfilter	Perl DBM filters

    perlipc		Perl interprocess communication
    perlfork		Perl fork() information
    perlnumber		Perl number semantics

    perlthrtut		Perl threads tutorial

    perlport		Perl portability guide
    perllocale		Perl locale support
    perluniintro	Perl Unicode introduction
    perlunicode 	Perl Unicode support
    perlunicook 	Perl Unicode cookbook
    perlunifaq		Perl Unicode FAQ
    perluniprops	Index of Unicode properties in Perl
    perlunitut		Perl Unicode tutorial
    perlebcdic		Considerations for running Perl on EBCDIC platforms

    perlsec		Perl security

    perlmod		Perl modules: how they work
    perlmodlib		Perl modules: how to write and use
    perlmodstyle	Perl modules: how to write modules with style
    perlmodinstall	Perl modules: how to install from CPAN
    perlnewmod		Perl modules: preparing a new module for distribution
    perlpragma		Perl modules: writing a user pragma

    perlutil		utilities packaged with the Perl distribution

    perlfilter		Perl source filters

    perldtrace		Perl's support for DTrace

    perlglossary	Perl Glossary

=head2 Internals and C Language Interface

    perlembed		Perl ways to embed perl in your C or C++ application
    perldebguts 	Perl debugging guts and tips
    perlxstut		Perl XS tutorial
    perlxs		Perl XS application programming interface
    perlxstypemap	Perl XS C/Perl type conversion tools
    perlclib		Internal replacements for standard C library functions
    perlguts		Perl internal functions for those doing extensions
    perlcall		Perl calling conventions from C
    perlmroapi		Perl method resolution plugin interface
    perlreapi		Perl regular expression plugin interface
    perlreguts		Perl regular expression engine internals

    perlapi		Perl API listing (autogenerated)
    perlintern		Perl internal functions (autogenerated)
    perliol		C API for Perl's implementation of IO in Layers
    perlapio		Perl internal IO abstraction interface

    perlhack		Perl hackers guide
    perlsource		Guide to the Perl source tree
    perlinterp		Overview of the Perl interpreter source and how it works
    perlhacktut 	Walk through the creation of a simple C code patch
    perlhacktips	Tips for Perl core C code hacking
    perlpolicy		Perl development policies
    perlgit		Using git with the Perl repository

=head2 Miscellaneous

    perlbook		Perl book information
    perlcommunity	Perl community information

    perldoc		Look up Perl documentation in Pod format

    perlhist		Perl history records
    perldelta		Perl changes since previous version
    perl5241delta	Perl changes in version 5.24.1
    perl5240delta	Perl changes in version 5.24.0
    perl5223delta	Perl changes in version 5.22.3
    perl5222delta	Perl changes in version 5.22.2
    perl5221delta	Perl changes in version 5.22.1
    perl5220delta	Perl changes in version 5.22.0
    perl5203delta	Perl changes in version 5.20.3
    perl5202delta	Perl changes in version 5.20.2
    perl5201delta	Perl changes in version 5.20.1
    perl5200delta	Perl changes in version 5.20.0
    perl5184delta	Perl changes in version 5.18.4
    perl5182delta	Perl changes in version 5.18.2
    perl5181delta	Perl changes in version 5.18.1
    perl5180delta	Perl changes in version 5.18.0
    perl5163delta	Perl changes in version 5.16.3
    perl5162delta	Perl changes in version 5.16.2
    perl5161delta	Perl changes in version 5.16.1
    perl5160delta	Perl changes in version 5.16.0
    perl5144delta	Perl changes in version 5.14.4
    perl5143delta	Perl changes in version 5.14.3
    perl5142delta	Perl changes in version 5.14.2
    perl5141delta	Perl changes in version 5.14.1
    perl5140delta	Perl changes in version 5.14.0
    perl5125delta	Perl changes in version 5.12.5
    perl5124delta	Perl changes in version 5.12.4
    perl5123delta	Perl changes in version 5.12.3
    perl5122delta	Perl changes in version 5.12.2
    perl5121delta	Perl changes in version 5.12.1
    perl5120delta	Perl changes in version 5.12.0
    perl5101delta	Perl changes in version 5.10.1
    perl5100delta	Perl changes in version 5.10.0
    perl589delta	Perl changes in version 5.8.9
    perl588delta	Perl changes in version 5.8.8
    perl587delta	Perl changes in version 5.8.7
    perl586delta	Perl changes in version 5.8.6
    perl585delta	Perl changes in version 5.8.5
    perl584delta	Perl changes in version 5.8.4
    perl583delta	Perl changes in version 5.8.3
    perl582delta	Perl changes in version 5.8.2
    perl581delta	Perl changes in version 5.8.1
    perl58delta 	Perl changes in version 5.8.0
    perl561delta	Perl changes in version 5.6.1
    perl56delta 	Perl changes in version 5.6
    perl5005delta	Perl changes in version 5.005
    perl5004delta	Perl changes in version 5.004

    perlexperiment	A listing of experimental features in Perl

    perlartistic	Perl Artistic License
    perlgpl		GNU General Public License

=head2 Language-Specific

=for buildtoc flag +r

    perlcn		Perl for Simplified Chinese (in EUC-CN)
    perljp		Perl for Japanese (in EUC-JP)
    perlko		Perl for Korean (in EUC-KR)
    perltw		Perl for Traditional Chinese (in Big5)

=head2 Platform-Specific

    perlaix		Perl notes for AIX
    perlamiga		Perl notes for AmigaOS
    perlandroid		Perl notes for Android
    perlbs2000		Perl notes for POSIX-BC BS2000
    perlce		Perl notes for WinCE
    perlcygwin		Perl notes for Cygwin
    perldos		Perl notes for DOS
    perlfreebsd 	Perl notes for FreeBSD
    perlhaiku		Perl notes for Haiku
    perlhpux		Perl notes for HP-UX
    perlhurd		Perl notes for Hurd
    perlirix		Perl notes for Irix
    perllinux		Perl notes for Linux
    perlmacos		Perl notes for Mac OS (Classic)
    perlmacosx		Perl notes for Mac OS X
    perlnetware 	Perl notes for NetWare
    perlopenbsd 	Perl notes for OpenBSD
    perlos2		Perl notes for OS/2
    perlos390		Perl notes for OS/390
    perlos400		Perl notes for OS/400
    perlplan9		Perl notes for Plan 9
    perlqnx		Perl notes for QNX
    perlriscos		Perl notes for RISC OS
    perlsolaris 	Perl notes for Solaris
    perlsymbian 	Perl notes for Symbian
    perlsynology 	Perl notes for Synology
    perltru64		Perl notes for Tru64
    perlvms		Perl notes for VMS
    perlvos		Perl notes for Stratus VOS
    perlwin32		Perl notes for Windows

=for buildtoc flag -r

=head2 Stubs for Deleted Documents

    perlboot		
    perlbot		
    perlrepository
    perltodo
    perltooc		
    perltoot		

=for buildtoc __END__

On a Unix-like system, these documentation files will usually also be
available as manpages for use with the F<man> program.

Some documentation is not available as man pages, so if a
cross-reference is not found by man, try it with L<perldoc>.  Perldoc can
also take you directly to documentation for functions (with the B<-f>
switch). See C<perldoc --help> (or C<perldoc perldoc> or C<man perldoc>)
for other helpful options L<perldoc> has to offer.

In general, if something strange has gone wrong with your program and you're
not sure where you should look for help, try making your code comply with
B<use strict> and B<use warnings>.  These will often point out exactly
where the trouble is.

=head1 DESCRIPTION

Perl officially stands for Practical Extraction and Report Language,
except when it doesn't.

Perl was originally a language optimized for scanning arbitrary
text files, extracting information from those text files, and printing
reports based on that information.  It quickly became a good language
for many system management tasks. Over the years, Perl has grown into
a general-purpose programming language. It's widely used for everything
from quick "one-liners" to full-scale application development.

The language is intended to be practical (easy to use, efficient,
complete) rather than beautiful (tiny, elegant, minimal).  It combines
(in the author's opinion, anyway) some of the best features of B<sed>,
B<awk>, and B<sh>, making it familiar and easy to use for Unix users to
whip up quick solutions to annoying problems.  Its general-purpose
programming facilities support procedural, functional, and
object-oriented programming paradigms, making Perl a comfortable
language for the long haul on major projects, whatever your bent.

Perl's roots in text processing haven't been forgotten over the years.
It still boasts some of the most powerful regular expressions to be
found anywhere, and its support for Unicode text is world-class.  It
handles all kinds of structured text, too, through an extensive
collection of extensions.  Those libraries, collected in the CPAN,
provide ready-made solutions to an astounding array of problems.  When
they haven't set the standard themselves, they steal from the best
-- just like Perl itself.

=head1 AVAILABILITY

Perl is available for most operating systems, including virtually
all Unix-like platforms.  See L<perlport/"Supported Platforms">
for a listing.

=head1 ENVIRONMENT

See L<perlrun>.

=head1 AUTHOR

Larry Wall <larry@@wall.org>, with the help of oodles of other folks.

If your Perl success stories and testimonials may be of help to others 
who wish to advocate the use of Perl in their applications, 
or if you wish to simply express your gratitude to Larry and the 
Perl developers, please write to perl-thanks@@perl.org .

=head1 FILES

 "@@INC"			locations of perl libraries

"@@INC" above is a reference to the built-in variable of the same name;
see L<perlvar> for more information.

=head1 SEE ALSO

 http://www.perl.org/       the Perl homepage
 http://www.perl.com/       Perl articles (O'Reilly)
 http://www.cpan.org/       the Comprehensive Perl Archive
 http://www.pm.org/         the Perl Mongers

=head1 DIAGNOSTICS

Using the C<use strict> pragma ensures that all variables are properly
declared and prevents other misuses of legacy Perl features.

The C<use warnings> pragma produces some lovely diagnostics. One can
also use the B<-w> flag, but its use is normally discouraged, because
it gets applied to all executed Perl code, including that not under
your control.

See L<perldiag> for explanations of all Perl's diagnostics.  The C<use
diagnostics> pragma automatically turns Perl's normally terse warnings
and errors into these longer forms.

Compilation errors will tell you the line number of the error, with an
indication of the next token or token type that was to be examined.
(In a script passed to Perl via B<-e> switches, each
B<-e> is counted as one line.)

Setuid scripts have additional constraints that can produce error
messages such as "Insecure dependency".  See L<perlsec>.

Did we mention that you should definitely consider using the B<use warnings>
pragma?

=head1 BUGS

The behavior implied by the B<use warnings> pragma is not mandatory.

Perl is at the mercy of your machine's definitions of various
operations such as type casting, atof(), and floating-point
output with sprintf().

If your stdio requires a seek or eof between reads and writes on a
particular stream, so does Perl.  (This doesn't apply to sysread()
and syswrite().)

While none of the built-in data types have any arbitrary size limits
(apart from memory size), there are still a few arbitrary limits:  a
given variable name may not be longer than 251 characters.  Line numbers
displayed by diagnostics are internally stored as short integers,
so they are limited to a maximum of 65535 (higher numbers usually being
affected by wraparound).

You may mail your bug reports (be sure to include full configuration
information as output by the myconfig program in the perl source
tree, or by C<perl -V>) to perlbug@@perl.org .  If you've succeeded
in compiling perl, the L<perlbug> script in the F<utils/> subdirectory
can be used to help mail in a bug report.

Perl actually stands for Pathologically Eclectic Rubbish Lister, but
don't tell anyone I said that.

=head1 NOTES

The Perl motto is "There's more than one way to do it."  Divining
how many more is left as an exercise to the reader.

The three principal virtues of a programmer are Laziness,
Impatience, and Hubris.  See the Camel Book for why.

@


1.24
log
@Fix merge issues, remove excess files - match perl-5.24.2 dist

OK bluhm@@, Reads ok sthen@@
@
text
@d37 1
a37 1
flag =g  perluniprops perlmodlib perlapi perlintern
@


1.23
log
@Apply pre-built unicore patch - perl-5.24.1
@
text
@d37 1
a37 1
flag =g  perlmodlib perlapi perlintern
d183 1
d185 1
@


1.22
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@d37 1
a37 1
flag =g  perluniprops perlmodlib perlapi perlintern
@


1.21
log
@Update to perl 5.20.3

OK bluhm@@
@
text
@d37 1
a37 1
flag =g  perlmodlib perlapi perlintern
d47 1
a47 1
aux a2p c2ph h2ph h2xs perlbug pl2pm pod2html pod2man s2p splain xsubpp
d183 5
d353 3
@


1.20
log
@Apply pre-built unicore patch, remove excess files - perl-5.20.2
@
text
@d183 1
@


1.19
log
@Fix merge issues, remove excess files - match perl-5.20.2 dist
@
text
@d37 1
a37 1
flag =g  perluniprops perlmodlib perlapi perlintern
@


1.18
log
@Regenerate unicore for perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d37 1
a37 1
flag =g  perlmodlib perlapi perlintern
d124 1
d183 1
d185 1
d189 2
a191 2
    perl5162delta	Perl changes in version 5.16.2
    perl5163delta	Perl changes in version 5.16.3
@


1.17
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d37 1
a37 1
flag =g  perluniprops perlmodlib perlapi perlintern
@


1.16
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@d37 1
a37 1
flag =g  perlmodlib perlapi perlintern
d45 1
a45 1
path perldoc                 cpan/Pod-Perldoc/lib/
d182 2
d236 1
a239 1
    perldgux		Perl notes for DG/UX
d259 1
d271 1
a274 1
    perlrepository
@


1.15
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d18 2
d55 1
a99 1
    perlrun		Perl execution and options
d125 1
a125 1
    perluniprops	Index of Unicode Version 6.0.0 properties in Perl
d182 3
d186 1
a186 2
    perl5161delta	Perl changes in version 5.16.1
    perl5160delta	Perl changes in version 5.16.0
d188 1
d193 1
a233 1
    perlbeos		Perl notes for BeOS
a238 1
    perlepoc		Perl notes for EPOC
a246 1
    perlmpeix		Perl notes for MPE/iX
a257 2
    perluts		Perl notes for UTS
    perlvmesa		Perl notes for VM/ESA
d271 1
d278 6
d285 3
a287 2
not sure where you should look for help, try the B<-w> switch first.  It will
often point out exactly where the trouble is.
d302 16
a317 102
complete) rather than beautiful (tiny, elegant, minimal).

Perl combines (in the author's opinion, anyway) some of the best
features of C, B<sed>, B<awk>, and B<sh>, so people familiar with
those languages should have little difficulty with it.  (Language
historians will also note some vestiges of B<csh>, Pascal, and even
BASIC-PLUS.)  Expression syntax corresponds closely to C
expression syntax.  Unlike most Unix utilities, Perl does not
arbitrarily limit the size of your data--if you've got the memory,
Perl can slurp in your whole file as a single string.  Recursion is of
unlimited depth.  And the tables used by hashes (sometimes called
"associative arrays") grow as necessary to prevent degraded
performance.  Perl can use sophisticated pattern matching techniques to
scan large amounts of data quickly.  Although optimized for
scanning text, Perl also has many excellent tools for slicing
and dicing binary data.

But wait, there's more...

Begun in 1993 (see L<perlhist>), Perl version 5 is nearly a complete
rewrite that provides the following additional benefits:

=over 4

=item *

modularity and reusability using innumerable modules 

Described in L<perlmod>, L<perlmodlib>, and L<perlmodinstall>.

=item *

embeddable and extensible 

Described in L<perlembed>, L<perlxstut>, L<perlxs>, L<perlxstypemap>,
L<perlcall>, L<perlguts>, and L<xsubpp>.

=item *

roll-your-own magic variables (including multiple simultaneous DBM
implementations)

Described in L<perltie> and L<AnyDBM_File>.

=item *

subroutines can now be overridden, autoloaded, and prototyped

Described in L<perlsub>.

=item *

arbitrarily nested data structures and anonymous functions

Described in L<perlreftut>, L<perlref>, L<perldsc>, and L<perllol>.

=item *

object-oriented programming

Described in L<perlobj> and L<perlootut>.

=item *

support for light-weight processes (threads)

Described in L<perlthrtut> and L<threads>.

=item *

support for Unicode, internationalization, and localization

Described in L<perluniintro>, L<perllocale> and L<Locale::Maketext>.

=item *

lexical scoping

Described in L<perlsub>.

=item *

regular expression enhancements

Described in L<perlre>, with additional examples in L<perlop>.

=item *

enhanced debugger and interactive Perl environment,
with integrated editor support

Described in L<perldebtut>, L<perldebug> and L<perldebguts>.

=item *

POSIX 1003.1 compliant library

Described in L<POSIX>.

=back

Okay, that's I<definitely> enough hype.
d351 7
a357 2
The C<use warnings> pragma (and the B<-w> switch) produces some 
lovely diagnostics.
d371 2
a372 2
Did we mention that you should definitely consider using the B<-w>
switch?
d376 1
a376 1
The B<-w> switch is not mandatory.
@


1.14
log
@merge in perl 5.12.2 plus local changes
@
text
@d3 1
a3 1
perl - The Perl language interpreter
d31 18
d64 1
a64 4
    perlboot		Perl OO tutorial for beginners
    perltoot		Perl OO tutorial, part 1
    perltooc		Perl OO tutorial, part 2
    perlbot		Perl OO tricks and examples
d96 1
d123 1
a123 1
    perluniprops	Index of Unicode Version 5.2.0 properties in Perl
d138 1
a138 1
    perlcompile 	Perl compiler suite intro
d140 1
a140 1
    perlfilter		Perl source filters
d150 1
d164 4
d169 1
a169 1
    perlrepository	Perl source repository
a174 1
    perltodo		Perl things to do
d180 11
a192 6
    perl5115delta	Perl changes in version 5.11.5
    perl5114delta	Perl changes in version 5.11.4
    perl5113delta	Perl changes in version 5.11.3
    perl5112delta	Perl changes in version 5.11.2
    perl5111delta	Perl changes in version 5.11.1
    perl5110delta	Perl changes in version 5.11.0
a194 6
    perl595delta	Perl changes in version 5.9.5
    perl594delta	Perl changes in version 5.9.4
    perl593delta	Perl changes in version 5.9.3
    perl592delta	Perl changes in version 5.9.2
    perl591delta	Perl changes in version 5.9.1
    perl590delta	Perl changes in version 5.9.0
a204 4
    perl573delta	Perl changes in version 5.7.3
    perl572delta	Perl changes in version 5.7.2
    perl571delta	Perl changes in version 5.7.1
    perl570delta	Perl changes in version 5.7.0
d210 2
d217 2
a227 1
    perlapollo		Perl notes for Apollo DomainOS
d261 11
d285 1
a285 1
Perl is a language optimized for scanning arbitrary
d287 7
a293 4
reports based on that information.  It's also a good language for many
system management tasks.  The language is intended to be practical
(easy to use, efficient, complete) rather than beautiful (tiny,
elegant, minimal).
d307 2
a308 10
scanning text, Perl can also deal with binary data, and can make dbm
files look like hashes.  Setuid Perl scripts are safer than C programs
through a dataflow tracing mechanism that prevents many stupid
security holes.

If you have a problem that would ordinarily use B<sed> or B<awk> or
B<sh>, but it exceeds their capabilities or must run a little faster,
and you don't want to write the silly thing in C, then Perl may be for
you.  There are also translators to turn your B<sed> and B<awk>
scripts into Perl scripts.
d327 2
a328 2
Described in L<perlembed>, L<perlxstut>, L<perlxs>, L<perlcall>,
L<perlguts>, and L<xsubpp>.
d353 1
a353 2
Described in L<perlobj>, L<perlboot>, L<perltoot>, L<perltooc>,
and L<perlbot>.
a420 3
 a2p	awk to perl translator
 s2p	sed to perl translator

d468 1
a468 1
in compiling perl, the B<perlbug> script in the F<utils/> subdirectory
@


1.13
log
@Merge in perl 5.10.1
@
text
@d3 1
a3 1
perl - Practical Extraction and Report Language
a12 1
	S<[ B<-P> ]>
d18 10
a27 3
If you're new to Perl, you should start with L<perlintro>, which is a 
general intro for beginners and provides some background to help you
navigate the rest of Perl's extensive documentation.
a100 1
      perlothrtut	Old Perl threads tutorial
d107 1
d147 1
d160 9
d176 1
a177 1
    perl589delta	Perl changes in version 5.8.9
a222 1
    perlmachten 	Perl notes for Power MachTen
a224 1
    perlmint		Perl notes for MiNT
d244 2
a245 2
By default, the manpages listed above are installed in the 
F</usr/local/man/> directory.  
d247 3
a249 27
Extensive additional documentation for Perl modules is available.  The
default configuration for perl will place this additional documentation
in the F</usr/local/lib/perl5/man> directory (or else in the F<man>
subdirectory of the Perl library directory).  Some of this additional
documentation is distributed standard with Perl, but you'll also find
documentation for third-party modules there.

You should be able to view Perl's documentation with your man(1)
program by including the proper directories in the appropriate start-up
files, or in the MANPATH environment variable.  To find out where the
configuration has installed the manpages, type:

    perl -V:man.dir

If the directories have a common stem, such as F</usr/local/man/man1>
and F</usr/local/man/man3>, you need only to add that stem
(F</usr/local/man>) to your man(1) configuration files or your MANPATH
environment variable.  If they do not share a stem, you'll have to add
both stems.

If that doesn't work for some reason, you can still use the
supplied F<perldoc> script to view module information.  You might
also look into getting a replacement man program.

If something strange has gone wrong with your program and you're not
sure where you should look for help, try the B<-w> switch first.  It
will often point out exactly where the trouble is.
d252 3
@


1.12
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d17 1
a17 1
	S<[ B<-e> I<'command'> ] [ B<--> ] [ I<programfile> ] [ I<argument> ]...>
d45 2
d131 1
d141 1
d153 1
d161 1
d202 1
@


1.11
log
@merge in perl 5.8.8
@
text
@d79 2
d99 2
d110 1
d129 2
d142 1
d149 7
d212 1
d214 1
@


1.10
log
@sync in-tree perl with 5.8.6
@
text
@d7 11
a17 7
B<perl>	S<[ B<-sTuU> ]> S<[ B<-hv> ] [ B<-V>[:I<configvar>] ]>
    S<[ B<-cw> ] [ B<-d>[:I<debugger>] ] [ B<-D>[I<number/list>] ]>
    S<[ B<-pna> ] [ B<-F>I<pattern> ] [ B<-l>[I<octal>] ] [ B<-0>[I<octal>] ]>
    S<[ B<-I>I<dir> ] [ B<-m>[B<->]I<module> ] [ B<-M>[B<->]I<'module...'> ]>
    S<[ B<-P> ]> S<[ B<-S> ]> S<[ B<-x>[I<dir>] ]>
    S<[ B<-i>[I<extension>] ]> S<[ B<-e> I<'command'> ] 
    [ B<--> ] [ I<programfile> ] [ I<argument> ]...>
d113 2
d141 2
d184 1
d191 1
d385 1
a385 1
 http://www.perl.com/       Perl articles (O'Reilly Media)
@


1.9
log
@merge 5.8.5 into HEAD
remove now-unused files
crank libperl shared library major number
update Makefile.bsd-wrapper
tweak openbsd hints file for arm and m68k
@
text
@d135 1
d374 2
a375 1
 http://www.perl.com/       the Perl Home Page
d377 1
a377 1
 http://www.perl.org/       Perl Mongers (Perl user groups)
@


1.8
log
@merge local changes into perl-5.8.3
@
text
@d135 2
@


1.7
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d135 1
@


1.6
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d33 1
a33 1
    perlrequick		Perl regular expressions quick start
d43 1
d66 1
a66 1
      perlpacktut       Perl pack() and unpack() tutorial
d68 1
a68 1
    perlpodspec         Perl plain old documentation format specification
d71 1
a71 1
    perllexwarn		Perl warnings and their control
d75 1
d87 1
a87 1
      perlothrtut	  Old Perl threads tutorial
d92 1
a92 1
    perlunicode		Perl Unicode support
d105 1
a105 1
    perlcompile		Perl compiler suite intro
d112 1
a112 1
    perldebguts		Perl debugging guts and tips
d131 2
d135 3
d142 1
a142 1
    perl56delta		Perl changes in version 5.6
d146 3
d168 1
a168 1
    perlfreebsd		Perl notes for FreeBSD
d172 1
a172 1
    perlmachten		Perl notes for Power MachTen
d174 1
d177 1
a177 1
    perlnetware		Perl notes for NetWare
d180 1
d185 1
a185 1
    perluts             Perl notes for UTS
d277 2
a278 1
roll-your-own magic variables (including multiple simultaneous DBM implementations)
a302 6
compilability into C code or Perl bytecode

Described in L<B> and L<B::Bytecode>.

=item *

d305 1
a305 1
Described in L<perlthrtut> and L<Thread>.
d309 1
a309 1
support for internationalization, localization, and Unicode 
d311 1
a311 1
Described in L<perllocale> and L<utf8>.
@


1.5
log
@merge in perl 5.6.1 with our local changes
@
text
@d15 7
a21 1
For ease of access, the Perl manual has been split up into several sections:
d24 1
a24 1
    perlfaq		Perl frequently asked questions
a25 1
    perlbook		Perl book information
d27 2
a28 5
    perlsyn		Perl syntax
    perldata		Perl data structures
    perlop		Perl operators and precedence
    perlsub		Perl subroutines
    perlfunc		Perl builtin functions
d31 2
d34 7
a40 1
    perlpod		Perl plain old documentation
d42 1
d44 14
d59 9
a70 1
    perldebtut		Perl debugging tutorial
a71 1

a72 4
    perllol		Perl data structures: arrays of arrays
    perlopentut		Perl open() tutorial
    perlretut		Perl regular expressions tutorial

a74 1

a75 4

    perlboot		Perl OO tutorial for beginners
    perltoot		Perl OO tutorial, part 1
    perltootc		Perl OO tutorial, part 2
a76 1
    perlbot		Perl OO tricks and examples
d78 1
d83 1
d85 1
d89 2
a90 1
    perlunicode		Perl unicode support
d97 1
d101 1
a101 9
    perlfaq1		General Questions About Perl
    perlfaq2		Obtaining and Learning about Perl
    perlfaq3		Programming Tools
    perlfaq4		Data Manipulation
    perlfaq5		Files and Formats
    perlfaq6		Regexes
    perlfaq7		Perl Language Issues
    perlfaq8		System Interaction
    perlfaq9		Networking
d105 4
d116 1
a116 3
    perlutil		utilities packaged with the Perl distribution
    perlfilter		Perl source filters
    perldbmfilter	Perl DBM filters
d119 1
d121 6
a127 1
    perlhack		Perl hackers guide
d131 5
d139 9
d149 3
a151 1
    perlamiga		Perl notes for Amiga
d153 1
d155 1
d158 1
d160 2
d164 1
d166 1
d169 2
d172 2
a178 2
(If you're intending to read these straight through for the first time,
the suggested order will tend to reduce the number of forward references.)
d285 2
a286 1
Described in L<perlobj>, L<perltoot>, and L<perlbot>.
d323 1
a323 1
Described in L<perldebug>.
d363 3
a365 2
 http://www.perl.com/	    the Perl Home Page
 http://www.perl.com/CPAN   the Comprehensive Perl Archive
@


1.4
log
@perl-5.6.0 + local changes
@
text
@d15 1
a15 2
For ease of access, the Perl manual has been split up into several
sections:
a17 3
    perldelta		Perl changes since previous version
    perl5005delta	Perl changes in version 5.005
    perl5004delta	Perl changes in version 5.004
d20 1
d22 1
a23 1
    perlsyn		Perl syntax
d25 9
a33 1
    perlre		Perl regular expressions
d35 7
a41 1
    perlfunc		Perl builtin functions
d43 5
a47 5
    perlvar		Perl predefined variables
    perlsub		Perl subroutines
    perlmod		Perl modules: how they work
    perlmodlib		Perl modules: how to write and use
    perlmodinstall	Perl modules: how to install from CPAN
a48 2
    perlunicode		Perl unicode support
    perllocale		Perl locale support
a49 4
    perlreftut		Perl references short introduction
    perlref		Perl references, the rest of the story
    perldsc		Perl data structures intro
    perllol		Perl data structures: arrays of arrays
d54 1
d56 1
a56 1
    perlbot		Perl OO tricks and examples
d59 1
a60 3
    perllexwarn		Perl warnings and their control
    perlfilter		Perl source filters
    perldbmfilter	Perl DBM filters
d62 5
a66 4
    perlcompile		Perl compiler suite intro
    perldebug		Perl debugging
    perldiag		Perl diagnostic messages
    perlnumber		Perl number semantics
a67 3
    perltrap		Perl traps for the unwary
    perlport		Perl portability guide
    perlstyle		Perl style guide
d69 16
a84 2
    perlpod		Perl plain old documentation
    perlbook		Perl book information
a86 1
    perlapio		Perl internal IO abstraction interface
d88 1
d90 1
a90 1
    perlxstut		Perl XS tutorial
d93 3
d98 1
a98 1

d101 1
d103 3
d107 1
d109 1
d112 1
d115 2
d119 2
d122 1
d196 3
a198 1
=over
d200 1
a200 1
=item * modularity and reusability using innumerable modules 
d204 3
a206 1
=item * embeddable and extensible 
d211 3
a213 1
=item * roll-your-own magic variables (including multiple simultaneous DBM implementations)
d217 3
a219 1
=item * subroutines can now be overridden, autoloaded, and prototyped
d223 3
a225 1
=item * arbitrarily nested data structures and anonymous functions
d229 3
a231 1
=item * object-oriented programming
d235 3
a237 1
=item * compilability into C code or Perl bytecode
d241 3
a243 1
=item * support for light-weight processes (threads)
d247 3
a249 1
=item * support for internationalization, localization, and Unicode 
d253 3
a255 1
=item * lexical scoping
d259 3
a261 1
=item * regular expression enhancements
d265 4
a268 1
=item * enhanced debugger and interactive Perl environment, with integrated editor support
d272 3
a274 1
=item * POSIX 1003.1 compliant library
d354 1
a354 1
tree, or by C<perl -V>) to perlbug@@perl.com .  If you've succeeded
@


1.3
log
@perl5.005_03 (stock)
@
text
@d7 7
a13 10
B<perl>	S<[ B<-sTuU> ]>
	S<[ B<-hv> ] [ B<-V>[:I<configvar>] ]>
	S<[ B<-cw> ] [ B<-d>[:I<debugger>] ] [ B<-D>[I<number/list>] ]>
	S<[ B<-pna> ] [ B<-F>I<pattern> ] [ B<-l>[I<octal>] ] [ B<-0>[I<octal>] ]>
	S<[ B<-I>I<dir> ] [ B<-m>[B<->]I<module> ] [ B<-M>[B<->]I<'module...'> ]>
	S<[ B<-P> ]>
	S<[ B<-S> ]>
	S<[ B<-x>[I<dir>] ]>
	S<[ B<-i>[I<extension>] ]>
	S<[ B<-e> I<'command'> ] [ B<--> ] [ I<programfile> ] [ I<argument> ]...>
d15 2
a16 2
For ease of access, the Perl manual has been split up into a number
of sections:
d20 1
d38 1
a40 1
    perlref		Perl references
d42 1
d44 4
a47 2
    perllol		Perl data structures: lists of lists
    perltoot		Perl OO tutorial
d52 1
d54 3
d58 1
d61 1
d72 1
d77 2
d80 2
d84 10
d97 2
a98 2
By default, all of the above manpages are installed in the
F</usr/local/man/> directory.
d141 1
a141 1
BASIC-PLUS.)  Expression syntax corresponds quite closely to C
d148 1
a148 1
scan large amounts of data very quickly.  Although optimized for
d151 1
a151 1
through a dataflow tracing mechanism which prevents many stupid
d162 2
a163 6
Perl version 5 is nearly a complete rewrite, and provides
the following additional benefits:

=over 5

=item * Many usability enhancements
d165 1
a165 7
It is now possible to write much more readable Perl code (even within
regular expressions).  Formerly cryptic variable names can be replaced
by mnemonic identifiers.  Error messages are more informative, and the
optional warnings will catch many of the mistakes a novice might make.
This cannot be stressed enough.  Whenever you get mysterious behavior,
try the B<-w> switch!!!  Whenever you don't get mysterious behavior,
try using B<-w> anyway.
d167 1
a167 1
=item * Simplified grammar
d169 1
a169 4
The new yacc grammar is one half the size of the old one.  Many of the
arbitrary grammar rules have been regularized.  The number of reserved
words has been cut by 2/3.  Despite this, nearly all old Perl scripts
will continue to work unchanged.
d171 1
a171 1
=item * Lexical scoping
d173 2
a174 4
Perl variables may now be declared within a lexical scope, like "auto"
variables in C.  Not only is this more efficient, but it contributes
to better privacy for "programming in the large".  Anonymous
subroutines exhibit deep binding of lexical variables (closures).
d176 1
a176 1
=item * Arbitrarily nested data structures
d178 1
a178 4
Any scalar value, including any array element, may now contain a
reference to any other variable or subroutine.  You can easily create
anonymous variables and subroutines.  Perl manages your reference
counts for you.
d180 1
a180 1
=item * Modularity and reusability
d182 1
a182 4
The Perl library is now defined in terms of modules which can be easily
shared among various packages.  A package may choose to import all or a
portion of a module's published interface.  Pragmas (that is, compiler
directives) are defined and used by the same mechanism.
d184 1
a184 1
=item * Object-oriented programming
d186 1
a186 3
A package can function as a class.  Dynamic multiple inheritance and
virtual methods are supported in a straightforward manner and with very
little new syntax.  Filehandles may now be treated as objects.
d188 1
a188 1
=item * Embeddable and Extensible
d190 1
a190 5
Perl may now be embedded easily in your C or C++ application, and can
either call or be called by your routines through a documented
interface.  The XS preprocessor is provided to make it easy to glue
your C or C++ routines into Perl.  Dynamic loading of modules is
supported, and Perl itself can be made into a dynamic library.
d192 1
a192 1
=item * POSIX compliant
d194 1
a194 3
A major new module is the POSIX module, which provides access to all
available POSIX routines and definitions, via object classes where
appropriate.
d196 1
a196 1
=item * Package constructors and destructors
d198 1
a198 4
The new BEGIN and END blocks provide means to capture control as
a package is being compiled, and after the program exits.  As a
degenerate case they work just like awk's BEGIN and END when you
use the B<-p> or B<-n> switches.
d200 1
a200 1
=item * Multiple simultaneous DBM implementations
d202 1
a202 4
A Perl program may now access DBM, NDBM, SDBM, GDBM, and Berkeley DB
files from the same script simultaneously.  In fact, the old dbmopen
interface has been generalized to allow any variable to be tied
to an object class which defines its access methods.
d204 1
a204 1
=item * Subroutine definitions may now be autoloaded
d206 1
a206 2
In fact, the AUTOLOAD mechanism also allows you to define any arbitrary
semantics for undefined subroutine calls.  It's not for just autoloading.
d208 1
a208 1
=item * Regular expression enhancements
d210 1
a210 5
You can now specify nongreedy quantifiers.  You can now do grouping
without creating a backreference.  You can now write regular expressions
with embedded whitespace and comments for readability.  A consistent
extensibility mechanism has been added that is upwardly compatible with
all old regular expressions.
d212 1
a212 1
=item * Innumerable Unbundled Modules
d214 1
a214 3
The Comprehensive Perl Archive Network described in L<perlmodlib>
contains hundreds of plug-and-play modules full of reusable code.
See F<http://www.perl.com/CPAN> for a site near you.
d216 1
a216 1
=item * Compilability
d218 1
a218 3
While not yet in full production mode, a working perl-to-C compiler
does exist.  It can generate portable byte code, simple C, or
optimized C code.
d226 3
a228 70
Perl is available for the vast majority of operating system platforms,
including most Unix-like platforms. The following situation is as of
February 1999 and Perl 5.005_03.

The following platforms are able to build Perl from the standard
source code distribution available at
F<http://www.perl.com/CPAN/src/index.html>

        AIX             Linux           SCO ODT/OSR
        A/UX            MachTen         Solaris
        BeOS            MPE/iX          SunOS
        BSD/OS          NetBSD          SVR4
        DG/UX           NextSTEP        Tru64 UNIX      3)
        DomainOS        OpenBSD         Ultrix
        DOS DJGPP 1)    OpenSTEP        UNICOS
        DYNIX/ptx       OS/2            VMS
        FreeBSD         OS390     2)    VOS
        HP-UX           PowerMAX        Windows 3.1     1)
        Hurd            QNX             Windows 95      1) 4)
        IRIX                            Windows 98      1) 4)
                                        Windows NT      1) 4)

        1) in DOS mode either the DOS or OS/2 ports can be used
        2) formerly known as MVS
        3) formerly known as Digital UNIX and before that DEC OSF/1
        4) compilers: Borland, Cygwin32, Mingw32 EGCS/GCC, VC++

The following platforms have been known to build Perl from the source
but for the Perl release 5.005_03 we haven't been able to verify them,
either because the hardware/software platforms are rather rare or
because we don't have an active champion on these platforms, or both.
					
        3b1             FPS             Plan 9
        AmigaOS         GENIX           PowerUX
        ConvexOS        Greenhills      RISC/os
        CX/UX           ISC             Stellar
        DC/OSx          MachTen 68k     SVR2
        DDE SMES        MiNT            TI1500
        DOS EMX         MPC             TitanOS
        Dynix           NEWS-OS         UNICOS/mk
        EP/IX           Opus            Unisys Dynix
        ESIX    			Unixware

The following platforms are planned to be supported in the standard
source code distribution of the Perl release 5.006 but are not
supported in the Perl release 5.005_03:

        BS2000
	Netware
	Rhapsody
        VM/ESA

The following platforms have their own source code distributions and
binaries available via F<http://www.perl.com/CPAN/ports/index.html>.

				Perl release

	AS/400			5.003
	MacOS			5.004
	Netware			5.003_07
	Tandem Guardian		5.004

The following platforms have only binaries available via
F<http://www.perl.com/CPAN/ports/index.html>.

				Perl release

	Acorn RISCOS		5.005_02
	AOS			5.002
	LynxOS			5.004_02
d236 1
a236 1
Larry Wall <F<larry@@wall.org>>, with the help of oodles of other folks.
d238 4
a241 4
If your Perl success stories and testimonials may be of help to others
who wish to advocate the use of Perl in their applications,
or if you wish to simply express your gratitude to Larry and the
Perl developers, please write to <F<perl-thanks@@perl.org>>.
d250 1
d252 2
a253 1
 s2p	sed to perl translator
d257 2
a258 1
The B<-w> switch produces some lovely diagnostics.
d266 1
a266 1
(In the case of a script passed to Perl via B<-e> switches, each
d295 4
a298 4
information as output by the myconfig program in the perl source tree,
or by C<perl -V>) to <F<perlbug@@perl.com>>.
If you've succeeded in compiling perl, the perlbug script in the utils/
subdirectory can be used to help mail in a bug report.
@


1.2
log
@perl 5.004_04
@
text
@d21 50
a70 41
    perl	Perl overview (this section)
    perldelta	Perl changes since previous version
    perlfaq	Perl frequently asked questions

    perldata	Perl data structures
    perlsyn	Perl syntax
    perlop	Perl operators and precedence
    perlre	Perl regular expressions
    perlrun	Perl execution and options
    perlfunc	Perl builtin functions
    perlvar	Perl predefined variables
    perlsub	Perl subroutines
    perlmod	Perl modules: how they work
    perlmodlib	Perl modules: how to write and use
    perlform	Perl formats
    perllocale	Perl locale support

    perlref	Perl references
    perldsc	Perl data structures intro
    perllol	Perl data structures: lists of lists
    perltoot	Perl OO tutorial
    perlobj	Perl objects
    perltie	Perl objects hidden behind simple variables
    perlbot	Perl OO tricks and examples
    perlipc	Perl interprocess communication

    perldebug	Perl debugging
    perldiag	Perl diagnostic messages
    perlsec	Perl security
    perltrap	Perl traps for the unwary
    perlstyle	Perl style guide

    perlpod	Perl plain old documentation
    perlbook	Perl book information

    perlembed	Perl ways to embed perl in your C or C++ application
    perlapio	Perl internal IO abstraction interface
    perlxs	Perl XS application programming interface
    perlxstut	Perl XS tutorial
    perlguts	Perl internal functions for those doing extensions
    perlcall	Perl calling conventions from C
d75 2
a76 2
By default, all of the above manpages are installed in the 
F</usr/local/man/> directory.  
d123 1
a123 1
unlimited depth.  And the tables used by hashes (previously called
d125 1
a125 1
performance.  Perl uses sophisticated pattern matching techniques to
d246 73
d327 3
a329 3
If your Perl success stories and testimonials may be of help to others 
who wish to advocate the use of Perl in their applications, 
or if you wish to simply express your gratitude to Larry and the 
a333 1
 "/tmp/perl-e$$"	temporary file for -e commands
d346 3
a348 1
See L<perldiag> for explanations of all Perl's diagnostics.
d375 4
a378 3
given variable name may not be longer than 255 characters, and no
component of your PATH may be longer than 255 if you use B<-S>.  A regular
expression may not compile to more than 32767 bytes internally.
@


1.1
log
@Initial revision
@
text
@d22 3
a24 1
    perltoc	Perl documentation table of contents
d33 6
a38 2
    perlmod	Perl modules
    perlref	Perl references 
d41 1
d45 2
a48 2
    perlform	Perl formats
    perlipc	Perl interprocess communication
d52 6
d60 1
a60 1
    perlguts	Perl internal functions for those doing extensions 
a61 3
    perlembed	Perl how to embed perl in your C or C++ app
    perlpod	Perl plain old documentation
    perlbook	Perl book information
d66 22
a87 11
Additional documentation for Perl modules is available in the
F</usr/local/man/> directory.  Some of this is distributed standard with
Perl, but you'll also find third-party modules there.  You should be able
to view this with your man(1) program by including the proper directories
in the appropriate start-up files.  To find out where these are, type:

    perl -le 'use Config; print "@@Config{man1dir,man3dir}"'

If the directories were F</usr/local/man/man1> and F</usr/local/man/man3>,
you would only need to add F</usr/local/man> to your MANPATH.  If 
they are different, you'll have to add both stems.
d99 1
a99 1
Perl is an interpreted language optimized for scanning arbitrary
d106 5
a110 5
Perl combines (in the author's opinion, anyway) some
of the best features of C, B<sed>, B<awk>, and B<sh>, so people
familiar with those languages should have little difficulty with it.
(Language historians will also note some vestiges of B<csh>, Pascal,
and even BASIC-PLUS.)  Expression syntax corresponds quite closely to C
d113 15
a127 13
Perl can slurp in your whole file as a single string.  Recursion is
of unlimited depth.  And the hash tables used by associative arrays
grow as necessary to prevent degraded performance.  Perl uses
sophisticated pattern matching techniques to scan large amounts of data
very quickly.  Although optimized for scanning text, Perl can also
deal with binary data, and can make dbm files look like associative
arrays.  Setuid Perl scripts are safer than
C programs through a dataflow tracing mechanism which prevents many
stupid security holes.  If you have a problem that would ordinarily use
B<sed> or B<awk> or B<sh>, but it exceeds their capabilities or must
run a little faster, and you don't want to write the silly thing in C,
then Perl may be for you.  There are also translators to turn your
B<sed> and B<awk> scripts into Perl scripts.
d157 2
a158 1
to better privacy for "programming in the large".
d186 1
a186 1
supported.
d211 1
a211 1
semantics for undefined subroutine calls.  It's not just for autoloading.
d215 1
a215 1
You can now specify non-greedy quantifiers.  You can now do grouping
d221 1
a221 3
=back

Ok, that's I<definitely> enough hype.
d223 3
a225 1
=head1 ENVIRONMENT
d227 1
a227 1
=over 12
d229 3
a231 1
=item HOME
d233 1
a233 1
Used if chdir has no argument.
d235 1
a235 1
=item LOGDIR
d237 1
a237 1
Used if chdir has no argument and HOME is not set.
d239 1
a239 1
=item PATH
d241 1
a241 15
Used in executing subprocesses, and in finding the script if B<-S> is
used.

=item PERL5LIB

A colon-separated list of directories in which to look for Perl library
files before looking in the standard library and the current
directory.  If PERL5LIB is not defined, PERLLIB is used.  When running
taint checks (because the script was running setuid or setgid, or the
B<-T> switch was used), neither variable is used.  The script should
instead say

    use lib "/my/directory";

=item PERL5DB
d243 1
a243 23
The command used to get the debugger code.  If unset, uses

	BEGIN { require 'perl5db.pl' }

=item PERLLIB

A colon-separated list of directories in which to look for Perl library
files before looking in the standard library and the current
directory.  If PERL5LIB is defined, PERLLIB is not used.

=back

Apart from these, Perl uses no other environment variables, except
to make them available to the script being executed, and to child
processes.  However, scripts running setuid would do well to execute
the following lines before doing anything else, just to keep people
honest:

    $ENV{'PATH'} = '/bin:/usr/bin';    # or whatever you need
    $ENV{'SHELL'} = '/bin/sh' if defined $ENV{'SHELL'};
    $ENV{'IFS'} = ''          if defined $ENV{'IFS'};

=head1 AUTHOR
d245 4
a248 1
Larry Wall E<lt>F<lwall@@sems.com>E<gt>, with the help of oodles of other folks.
d253 1
a253 1
 "@@INC"			locations of perl 5 libraries
d283 2
a284 2
operations such as type casting, atof() and sprintf().  The latter
can even trigger a coredump when passed ludicrous input values.
d292 1
a292 1
given identifier may not be longer than 255 characters, and no
d296 3
a298 4
See the perl bugs database at F< http://perl.com/perl/bugs/ >.  You may
mail your bug reports (be sure to include full configuration information
as output by the myconfig program in the perl source tree) to
F<perlbug@@perl.com>.
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d21 31
a51 50
    perl		Perl overview (this section)
    perldelta		Perl changes since previous version
    perl5004delta	Perl changes in version 5.004
    perlfaq		Perl frequently asked questions
    perltoc		Perl documentation table of contents

    perldata		Perl data structures
    perlsyn		Perl syntax
    perlop		Perl operators and precedence
    perlre		Perl regular expressions
    perlrun		Perl execution and options
    perlfunc		Perl builtin functions
    perlopentut		Perl open() tutorial
    perlvar		Perl predefined variables
    perlsub		Perl subroutines
    perlmod		Perl modules: how they work
    perlmodlib		Perl modules: how to write and use
    perlmodinstall	Perl modules: how to install from CPAN
    perlform		Perl formats
    perllocale		Perl locale support

    perlref		Perl references
    perlreftut		Perl references short introduction
    perldsc		Perl data structures intro
    perllol		Perl data structures: lists of lists
    perltoot		Perl OO tutorial
    perlobj		Perl objects
    perltie		Perl objects hidden behind simple variables
    perlbot		Perl OO tricks and examples
    perlipc		Perl interprocess communication
    perlthrtut		Perl threads tutorial

    perldebug		Perl debugging
    perldiag		Perl diagnostic messages
    perlsec		Perl security
    perltrap		Perl traps for the unwary
    perlport		Perl portability guide
    perlstyle		Perl style guide

    perlpod		Perl plain old documentation
    perlbook		Perl book information

    perlembed		Perl ways to embed perl in your C or C++ application
    perlapio		Perl internal IO abstraction interface
    perlxs		Perl XS application programming interface
    perlxstut		Perl XS tutorial
    perlguts		Perl internal functions for those doing extensions
    perlcall		Perl calling conventions from C

    perlhist		Perl history records
d56 11
a66 22
By default, all of the above manpages are installed in the
F</usr/local/man/> directory.

Extensive additional documentation for Perl modules is available.  The
default configuration for perl will place this additional documentation
in the F</usr/local/lib/perl5/man> directory (or else in the F<man>
subdirectory of the Perl library directory).  Some of this additional
documentation is distributed standard with Perl, but you'll also find
documentation for third-party modules there.

You should be able to view Perl's documentation with your man(1)
program by including the proper directories in the appropriate start-up
files, or in the MANPATH environment variable.  To find out where the
configuration has installed the manpages, type:

    perl -V:man.dir

If the directories have a common stem, such as F</usr/local/man/man1>
and F</usr/local/man/man3>, you need only to add that stem
(F</usr/local/man>) to your man(1) configuration files or your MANPATH
environment variable.  If they do not share a stem, you'll have to add
both stems.
d78 1
a78 1
Perl is a language optimized for scanning arbitrary
d85 5
a89 5
Perl combines (in the author's opinion, anyway) some of the best
features of C, B<sed>, B<awk>, and B<sh>, so people familiar with
those languages should have little difficulty with it.  (Language
historians will also note some vestiges of B<csh>, Pascal, and even
BASIC-PLUS.)  Expression syntax corresponds quite closely to C
d92 13
a104 15
Perl can slurp in your whole file as a single string.  Recursion is of
unlimited depth.  And the tables used by hashes (sometimes called
"associative arrays") grow as necessary to prevent degraded
performance.  Perl can use sophisticated pattern matching techniques to
scan large amounts of data very quickly.  Although optimized for
scanning text, Perl can also deal with binary data, and can make dbm
files look like hashes.  Setuid Perl scripts are safer than C programs
through a dataflow tracing mechanism which prevents many stupid
security holes.

If you have a problem that would ordinarily use B<sed> or B<awk> or
B<sh>, but it exceeds their capabilities or must run a little faster,
and you don't want to write the silly thing in C, then Perl may be for
you.  There are also translators to turn your B<sed> and B<awk>
scripts into Perl scripts.
d134 1
a134 2
to better privacy for "programming in the large".  Anonymous
subroutines exhibit deep binding of lexical variables (closures).
d162 1
a162 1
supported, and Perl itself can be made into a dynamic library.
d187 1
a187 1
semantics for undefined subroutine calls.  It's not for just autoloading.
d191 1
a191 1
You can now specify nongreedy quantifiers.  You can now do grouping
d197 11
a207 1
=item * Innumerable Unbundled Modules
d209 1
a209 3
The Comprehensive Perl Archive Network described in L<perlmodlib>
contains hundreds of plug-and-play modules full of reusable code.
See F<http://www.perl.com/CPAN> for a site near you.
d211 1
a211 1
=item * Compilability
d213 1
a213 3
While not yet in full production mode, a working perl-to-C compiler
does exist.  It can generate portable byte code, simple C, or
optimized C code.
d215 17
a231 1
=back
d233 1
a233 1
Okay, that's I<definitely> enough hype.
d235 1
a235 1
=head1 AVAILABILITY
d237 3
a239 70
Perl is available for the vast majority of operating system platforms,
including most Unix-like platforms. The following situation is as of
February 1999 and Perl 5.005_03.

The following platforms are able to build Perl from the standard
source code distribution available at
F<http://www.perl.com/CPAN/src/index.html>

        AIX             Linux           SCO ODT/OSR
        A/UX            MachTen         Solaris
        BeOS            MPE/iX          SunOS
        BSD/OS          NetBSD          SVR4
        DG/UX           NextSTEP        Tru64 UNIX      3)
        DomainOS        OpenBSD         Ultrix
        DOS DJGPP 1)    OpenSTEP        UNICOS
        DYNIX/ptx       OS/2            VMS
        FreeBSD         OS390     2)    VOS
        HP-UX           PowerMAX        Windows 3.1     1)
        Hurd            QNX             Windows 95      1) 4)
        IRIX                            Windows 98      1) 4)
                                        Windows NT      1) 4)

        1) in DOS mode either the DOS or OS/2 ports can be used
        2) formerly known as MVS
        3) formerly known as Digital UNIX and before that DEC OSF/1
        4) compilers: Borland, Cygwin32, Mingw32 EGCS/GCC, VC++

The following platforms have been known to build Perl from the source
but for the Perl release 5.005_03 we haven't been able to verify them,
either because the hardware/software platforms are rather rare or
because we don't have an active champion on these platforms, or both.
					
        3b1             FPS             Plan 9
        AmigaOS         GENIX           PowerUX
        ConvexOS        Greenhills      RISC/os
        CX/UX           ISC             Stellar
        DC/OSx          MachTen 68k     SVR2
        DDE SMES        MiNT            TI1500
        DOS EMX         MPC             TitanOS
        Dynix           NEWS-OS         UNICOS/mk
        EP/IX           Opus            Unisys Dynix
        ESIX    			Unixware

The following platforms are planned to be supported in the standard
source code distribution of the Perl release 5.006 but are not
supported in the Perl release 5.005_03:

        BS2000
	Netware
	Rhapsody
        VM/ESA

The following platforms have their own source code distributions and
binaries available via F<http://www.perl.com/CPAN/ports/index.html>.

				Perl release

	AS/400			5.003
	MacOS			5.004
	Netware			5.003_07
	Tandem Guardian		5.004

The following platforms have only binaries available via
F<http://www.perl.com/CPAN/ports/index.html>.

				Perl release

	Acorn RISCOS		5.005_02
	AOS			5.002
	LynxOS			5.004_02
d241 1
a241 1
=head1 ENVIRONMENT
d243 9
a251 1
See L<perlrun>.
d255 1
a255 6
Larry Wall <F<larry@@wall.org>>, with the help of oodles of other folks.

If your Perl success stories and testimonials may be of help to others
who wish to advocate the use of Perl in their applications,
or if you wish to simply express your gratitude to Larry and the
Perl developers, please write to <F<perl-thanks@@perl.org>>.
d259 2
a260 1
 "@@INC"			locations of perl libraries
d272 1
a272 3
See L<perldiag> for explanations of all Perl's diagnostics.  The C<use
diagnostics> pragma automatically turns Perl's normally terse warnings
and errors into these longer forms.
d290 2
a291 2
operations such as type casting, atof(), and floating-point
output with sprintf().
d299 8
a306 8
given variable name may not be longer than 251 characters.  Line numbers
displayed by diagnostics are internally stored as short integers,
so they are limited to a maximum of 65535 (higher numbers usually being
affected by wraparound).

You may mail your bug reports (be sure to include full configuration
information as output by the myconfig program in the perl source tree,
or by C<perl -V>) to <F<perlbug@@perl.com>>.
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d7 10
a16 7
B<perl>	S<[ B<-sTuU> ]> S<[ B<-hv> ] [ B<-V>[:I<configvar>] ]>
    S<[ B<-cw> ] [ B<-d>[:I<debugger>] ] [ B<-D>[I<number/list>] ]>
    S<[ B<-pna> ] [ B<-F>I<pattern> ] [ B<-l>[I<octal>] ] [ B<-0>[I<octal>] ]>
    S<[ B<-I>I<dir> ] [ B<-m>[B<->]I<module> ] [ B<-M>[B<->]I<'module...'> ]>
    S<[ B<-P> ]> S<[ B<-S> ]> S<[ B<-x>[I<dir>] ]>
    S<[ B<-i>[I<extension>] ]> S<[ B<-e> I<'command'> ] 
    [ B<--> ] [ I<programfile> ] [ I<argument> ]...>
d18 2
a19 2
For ease of access, the Perl manual has been split up into several
sections:
a22 1
    perl5005delta	Perl changes in version 5.005
a39 1
    perlunicode		Perl unicode support
d42 1
a43 1
    perlref		Perl references, the rest of the story
d45 2
a46 4
    perllol		Perl data structures: arrays of arrays
    perlboot		Perl OO tutorial for beginners
    perltoot		Perl OO tutorial, part 1
    perltootc		Perl OO tutorial, part 2
a50 1
    perlfork		Perl fork() information
a51 3
    perllexwarn		Perl warnings and their control
    perlfilter		Perl source filters
    perldbmfilter	Perl DBM filters
a52 1
    perlcompile		Perl compiler suite intro
a54 1
    perlnumber		Perl number semantics
a64 1
    perldebguts		Perl debugging guts and tips
a68 2
    perlapi		Perl API listing (autogenerated)
    perlintern		Perl internal functions (autogenerated)
a69 2
    perltodo		Perl things to do
    perlhack		Perl hackers guide
a71 10
    perlamiga		Perl notes for Amiga
    perlcygwin		Perl notes for Cygwin
    perldos		Perl notes for DOS
    perlhpux		Perl notes for HP-UX
    perlmachten		Perl notes for Power MachTen
    perlos2		Perl notes for OS/2
    perlos390		Perl notes for OS/390
    perlvms		Perl notes for VMS
    perlwin32		Perl notes for Windows

d75 2
a76 2
By default, the manpages listed above are installed in the 
F</usr/local/man/> directory.  
d119 1
a119 1
BASIC-PLUS.)  Expression syntax corresponds closely to C
d126 1
a126 1
scan large amounts of data quickly.  Although optimized for
d129 1
a129 1
through a dataflow tracing mechanism that prevents many stupid
d140 6
a145 2
Begun in 1993 (see L<perlhist>), Perl version 5 is nearly a complete
rewrite that provides the following additional benefits:
d147 7
a153 1
=over
d155 1
a155 1
=item * modularity and reusability using innumerable modules 
d157 4
a160 1
Described in L<perlmod>, L<perlmodlib>, and L<perlmodinstall>.
d162 1
a162 1
=item * embeddable and extensible 
d164 4
a167 2
Described in L<perlembed>, L<perlxstut>, L<perlxs>, L<perlcall>,
L<perlguts>, and L<xsubpp>.
d169 1
a169 1
=item * roll-your-own magic variables (including multiple simultaneous DBM implementations)
d171 4
a174 1
Described in L<perltie> and L<AnyDBM_File>.
d176 1
a176 1
=item * subroutines can now be overridden, autoloaded, and prototyped
d178 4
a181 1
Described in L<perlsub>.
d183 1
a183 1
=item * arbitrarily nested data structures and anonymous functions
d185 3
a187 1
Described in L<perlreftut>, L<perlref>, L<perldsc>, and L<perllol>.
d189 1
a189 1
=item * object-oriented programming
d191 5
a195 1
Described in L<perlobj>, L<perltoot>, and L<perlbot>.
d197 1
a197 1
=item * compilability into C code or Perl bytecode
d199 3
a201 1
Described in L<B> and L<B::Bytecode>.
d203 1
a203 1
=item * support for light-weight processes (threads)
d205 4
a208 1
Described in L<perlthrtut> and L<Thread>.
d210 1
a210 1
=item * support for internationalization, localization, and Unicode 
d212 4
a215 1
Described in L<perllocale> and L<utf8>.
d217 1
a217 1
=item * lexical scoping
d219 2
a220 1
Described in L<perlsub>.
d222 1
a222 1
=item * regular expression enhancements
d224 5
a228 1
Described in L<perlre>, with additional examples in L<perlop>.
d230 1
a230 1
=item * enhanced debugger and interactive Perl environment, with integrated editor support
d232 3
a234 1
Described in L<perldebug>.
d236 1
a236 1
=item * POSIX 1003.1 compliant library
d238 3
a240 1
Described in L<POSIX>.
d248 70
a317 3
Perl is available for most operating systems, including virtually
all Unix-like platforms.  See L<perlport/"Supported Platforms">
for a listing.
d325 1
a325 1
Larry Wall <larry@@wall.org>, with the help of oodles of other folks.
d327 4
a330 4
If your Perl success stories and testimonials may be of help to others 
who wish to advocate the use of Perl in their applications, 
or if you wish to simply express your gratitude to Larry and the 
Perl developers, please write to perl-thanks@@perl.org .
d339 1
a341 3
 http://www.perl.com/	    the Perl Home Page
 http://www.perl.com/CPAN   the Comprehensive Perl Archive

d344 1
a344 2
The C<use warnings> pragma (and the B<-w> switch) produces some 
lovely diagnostics.
d352 1
a352 1
(In a script passed to Perl via B<-e> switches, each
d381 4
a384 4
information as output by the myconfig program in the perl source
tree, or by C<perl -V>) to perlbug@@perl.com .  If you've succeeded
in compiling perl, the B<perlbug> script in the F<utils/> subdirectory
can be used to help mail in a bug report.
@


1.1.1.4
log
@stock perl 5.6.1
@
text
@d15 2
a16 1
For ease of access, the Perl manual has been split up into several sections:
d19 3
a23 1
    perlbook		Perl book information
d25 1
a26 1
    perldata		Perl data structures
d28 5
d34 7
a40 1
    perlfunc		Perl builtin functions
d42 1
a43 12
    perlrequick		Perl regular expressions quick start
    perlpod		Perl plain old documentation
    perlstyle		Perl style guide
    perltrap		Perl traps for the unwary

    perlrun		Perl execution and options
    perldiag		Perl diagnostic messages
    perllexwarn		Perl warnings and their control
    perldebtut		Perl debugging tutorial
    perldebug		Perl debugging

    perlvar		Perl predefined variables
a44 8
    perlopentut		Perl open() tutorial
    perlretut		Perl regular expressions tutorial

    perlre		Perl regular expressions, the rest of the story
    perlref		Perl references, the rest of the story

    perlform		Perl formats

d49 1
a50 2
    perltie		Perl objects hidden behind simple variables

a52 1
    perlnumber		Perl number semantics
d54 3
d58 6
d65 1
a65 3
    perllocale		Perl locale support
    perlunicode		Perl unicode support
    perlebcdic		Considerations for running Perl on EBCDIC platforms
d67 2
a68 18
    perlsec		Perl security

    perlmod		Perl modules: how they work
    perlmodlib		Perl modules: how to write and use
    perlmodinstall	Perl modules: how to install from CPAN
    perlnewmod		Perl modules: preparing a new module for distribution

    perlfaq1		General Questions About Perl
    perlfaq2		Obtaining and Learning about Perl
    perlfaq3		Programming Tools
    perlfaq4		Data Manipulation
    perlfaq5		Files and Formats
    perlfaq6		Regexes
    perlfaq7		Perl Language Issues
    perlfaq8		System Interaction
    perlfaq9		Networking

    perlcompile		Perl compiler suite intro
d71 1
d73 1
a74 2
    perlxs		Perl XS application programming interface
    perlclib		Internal replacements for standard C library functions
a76 3
    perlutil		utilities packaged with the Perl distribution
    perlfilter		Perl source filters
    perldbmfilter	Perl DBM filters
d79 1
a79 1
    perlapio		Perl internal IO abstraction interface
a81 1

a82 3
    perldelta		Perl changes since previous version
    perl5005delta	Perl changes in version 5.005
    perl5004delta	Perl changes in version 5.004
a83 1
    perlaix		Perl notes for AIX
a84 1
    perlbs2000		Perl notes for POSIX-BC BS2000
a86 1
    perlepoc		Perl notes for EPOC
a88 2
    perlmacos		Perl notes for Mac OS (Classic)
    perlmpeix		Perl notes for MPE/iX
a90 2
    perlsolaris 	Perl notes for Solaris
    perlvmesa		Perl notes for VM/ESA
a91 1
    perlvos		Perl notes for Stratus VOS
d165 1
a165 3
=over 4

=item *
d167 1
a167 1
modularity and reusability using innumerable modules 
d171 1
a171 3
=item *

embeddable and extensible 
d176 1
a176 3
=item *

roll-your-own magic variables (including multiple simultaneous DBM implementations)
d180 1
a180 3
=item *

subroutines can now be overridden, autoloaded, and prototyped
d184 1
a184 3
=item *

arbitrarily nested data structures and anonymous functions
d188 1
a188 3
=item *

object-oriented programming
d192 1
a192 3
=item *

compilability into C code or Perl bytecode
d196 1
a196 3
=item *

support for light-weight processes (threads)
d200 1
a200 3
=item *

support for internationalization, localization, and Unicode 
d204 1
a204 3
=item *

lexical scoping
d208 1
a208 3
=item *

regular expression enhancements
d212 1
a212 4
=item *

enhanced debugger and interactive Perl environment,
with integrated editor support
d216 1
a216 3
=item *

POSIX 1003.1 compliant library
d296 1
a296 1
tree, or by C<perl -V>) to perlbug@@perl.org .  If you've succeeded
@


1.1.1.5
log
@stock perl 5.8.0 from CPAN
@
text
@d15 1
a15 7
If you're new to Perl, you should start with L<perlintro>, which is a 
general intro for beginners and provides some background to help you
navigate the rest of Perl's extensive documentation.

For ease of access, the Perl manual has been split up into several sections.

=head2 Overview
d18 1
a18 1
    perlintro		Perl introduction for beginners
d20 1
d22 5
a26 2
=head2 Tutorials

a28 2
    perllol		Perl data structures: arrays of arrays

d30 1
a30 7
    perlretut		Perl regular expressions tutorial

    perlboot		Perl OO tutorial for beginners
    perltoot		Perl OO tutorial, part 1
    perltooc		Perl OO tutorial, part 2
    perlbot		Perl OO tricks and examples

a31 1

a32 14
    perldebtut		Perl debugging tutorial

    perlfaq		Perl frequently asked questions
      perlfaq1		General Questions About Perl
      perlfaq2		Obtaining and Learning about Perl
      perlfaq3		Programming Tools
      perlfaq4		Data Manipulation
      perlfaq5		Files and Formats
      perlfaq6		Regexes
      perlfaq7		Perl Language Issues
      perlfaq8		System Interaction
      perlfaq9		Networking

=head2 Reference Manual
a33 9
    perlsyn		Perl syntax
    perldata		Perl data structures
    perlop		Perl operators and precedence
    perlsub		Perl subroutines
    perlfunc		Perl built-in functions
      perlopentut	Perl open() tutorial
      perlpacktut       Perl pack() and unpack() tutorial
    perlpod		Perl plain old documentation
    perlpodspec         Perl plain old documentation format specification
d37 1
d39 1
d41 4
d47 1
d49 4
d54 1
a55 1
      perldbmfilter	Perl DBM filters
a59 1

a60 1
      perlothrtut	  Old Perl threads tutorial
d64 1
a64 2
    perluniintro	Perl Unicode introduction
    perlunicode		Perl Unicode support
a70 1
    perlmodstyle	Perl modules: how to write modules with style
d74 9
a82 1
    perlutil		utilities packaged with the Perl distribution
a85 4
    perlfilter		Perl source filters

=head2 Internals and C Language Interface

d93 3
a95 1

a97 1
    perliol		C API for Perl's implementation of IO in Layers
d99 1
a99 1

a101 5
=head2 Miscellaneous

    perlbook		Perl book information
    perltodo		Perl things to do

a103 5
    perl572delta	Perl changes in version 5.7.2
    perl571delta	Perl changes in version 5.7.1
    perl570delta	Perl changes in version 5.7.0
    perl561delta	Perl changes in version 5.6.1
    perl56delta		Perl changes in version 5.6
a106 9
=head2 Language-Specific

    perlcn		Perl for Simplified Chinese (in EUC-CN)
    perljp		Perl for Japanese (in EUC-JP)
    perlko		Perl for Korean (in EUC-KR)
    perltw		Perl for Traditional Chinese (in Big5)

=head2 Platform-Specific

d108 1
a108 3
    perlamiga		Perl notes for AmigaOS
    perlapollo		Perl notes for Apollo DomainOS
    perlbeos		Perl notes for BeOS
a109 1
    perlce		Perl notes for WinCE
a110 1
    perldgux		Perl notes for DG/UX
a112 1
    perlfreebsd		Perl notes for FreeBSD
a113 2
    perlhurd		Perl notes for Hurd
    perlirix		Perl notes for Irix
a115 1
    perlmint		Perl notes for MiNT
a116 1
    perlnetware		Perl notes for NetWare
a118 2
    perlplan9		Perl notes for Plan 9
    perlqnx		Perl notes for QNX
a119 2
    perltru64		Perl notes for Tru64
    perluts             Perl notes for UTS
d125 2
d233 1
a233 2
Described in L<perlobj>, L<perlboot>, L<perltoot>, L<perltooc>,
and L<perlbot>.
d270 1
a270 1
Described in L<perldebtut>, L<perldebug> and L<perldebguts>.
d310 2
a311 3
 http://www.perl.com/       the Perl Home Page
 http://www.cpan.org/       the Comprehensive Perl Archive
 http://www.perl.org/       Perl Mongers (Perl user groups)
@


1.1.1.6
log
@perl 5.8.2 from CPAN
@
text
@d33 1
a33 1
    perlrequick 	Perl regular expressions quick start
a42 1
    perlcheat		Perl cheat sheet
d65 1
a65 1
      perlpacktut	Perl pack() and unpack() tutorial
d67 1
a67 1
    perlpodspec 	Perl plain old documentation format specification
d70 1
a70 1
    perllexwarn 	Perl warnings and their control
a73 1
    perlreref		Perl regular expressions quick reference
d85 1
a85 1
      perlothrtut	Old Perl threads tutorial
d90 1
a90 1
    perlunicode 	Perl Unicode support
d103 1
a103 1
    perlcompile 	Perl compiler suite intro
d110 1
a110 1
    perldebguts 	Perl debugging guts and tips
a128 2
    perldoc		Look up Perl documentation in Pod format

a130 3
    perl581delta	Perl changes in version 5.8.1
    perl58delta 	Perl changes in version 5.8.0
    perl573delta	Perl changes in version 5.7.3
d135 1
a135 1
    perl56delta 	Perl changes in version 5.6
a138 3
    perlartistic	Perl Artistic License
    perlgpl		GNU General Public License

d158 1
a158 1
    perlfreebsd 	Perl notes for FreeBSD
d162 1
a162 1
    perlmachten 	Perl notes for Power MachTen
a163 1
    perlmacosx		Perl notes for Mac OS X
d166 1
a166 1
    perlnetware 	Perl notes for NetWare
a168 1
    perlos400		Perl notes for OS/400
d173 1
a173 1
    perluts		Perl notes for UTS
d265 1
a265 2
roll-your-own magic variables (including multiple simultaneous DBM
implementations)
d290 6
d298 1
a298 1
Described in L<perlthrtut> and L<threads>.
d302 1
a302 1
support for Unicode, internationalization, and localization
d304 1
a304 1
Described in L<perluniintro>, L<perllocale> and L<Locale::Maketext>.
@


1.1.1.7
log
@perl 5.8.3 from CPAN
@
text
@a134 1
    perl582delta	Perl changes in version 5.8.2
@


1.1.1.8
log
@Import of stock perl 5.8.5
@
text
@a134 2
    perl584delta	Perl changes in version 5.8.4
    perl583delta	Perl changes in version 5.8.3
@


1.1.1.9
log
@perl 5.8.6 from CPAN
@
text
@a134 1
    perl585delta	Perl changes in version 5.8.5
d373 1
a373 2
 http://www.perl.org/       the Perl homepage
 http://www.perl.com/       Perl articles (O'Reilly Media)
d375 1
a375 1
 http://www.pm.org/         the Perl Mongers
@


1.1.1.10
log
@perl 5.8.8 import
@
text
@d7 7
a13 11
B<perl>	S<[ B<-sTtuUWX> ]>
	S<[ B<-hv> ] [ B<-V>[:I<configvar>] ]>
	S<[ B<-cw> ] [ B<-d>[B<t>][:I<debugger>] ] [ B<-D>[I<number/list>] ]>
	S<[ B<-pna> ] [ B<-F>I<pattern> ] [ B<-l>[I<octal>] ] [ B<-0>[I<octal/hexadecimal>] ]>
	S<[ B<-I>I<dir> ] [ B<-m>[B<->]I<module> ] [ B<-M>[B<->]I<'module...'> ] [ B<-f> ]>
	S<[ B<-C [I<number/list>] >]>
	S<[ B<-P> ]>
	S<[ B<-S> ]>
	S<[ B<-x>[I<dir>] ]>
	S<[ B<-i>[I<extension>] ]>
	S<[ B<-e> I<'command'> ] [ B<--> ] [ I<programfile> ] [ I<argument> ]...>
a108 2
    perlglossary	Perl Glossary

a134 2
    perl587delta	Perl changes in version 5.8.7
    perl586delta	Perl changes in version 5.8.6
a175 1
    perllinux		Perl notes for Linux
a181 1
    perlopenbsd 	Perl notes for OpenBSD
d375 1
a375 1
 http://www.perl.com/       Perl articles (O'Reilly)
@


1.1.1.11
log
@import perl 5.10.0 from CPAN
@
text
@a78 2
    perlrebackslash	Perl regular expression backslash sequences
    perlrecharclass	Perl regular expression character classes
a96 2
    perlunifaq		Perl Unicode FAQ
    perlunitut		Perl Unicode tutorial
a105 1
    perlpragma		Perl modules: writing a user pragma
a123 2
    perlreapi		Perl regular expression plugin interface
    perlreguts		Perl regular expression engine internals
a134 1
    perlcommunity	Perl community information
a140 7
    perl595delta	Perl changes in version 5.9.5
    perl594delta	Perl changes in version 5.9.4
    perl593delta	Perl changes in version 5.9.3
    perl592delta	Perl changes in version 5.9.2
    perl591delta	Perl changes in version 5.9.1
    perl590delta	Perl changes in version 5.9.0
    perl588delta	Perl changes in version 5.8.8
a196 1
    perlriscos		Perl notes for RISC OS
a197 1
    perlsymbian 	Perl notes for Symbian
@


1.1.1.12
log
@import perl 5.10.1
@
text
@d17 1
a17 1
	S<[ [B<-e>|B<-E>] I<'command'> ] [ B<--> ] [ I<programfile> ] [ I<argument> ]...>
a44 2
    perlperf		Perl Performance and Optimization Techniques

a128 1
    perlmroapi		Perl method resolution plugin interface
a137 1
    perlrepository	Perl source repository
a148 1
    perl5100delta	Perl changes in version 5.10.0
a155 1
    perl589delta	Perl changes in version 5.8.9
a195 1
    perlhaiku		Perl notes for Haiku
@


1.1.1.13
log
@Perl 5.12.2 from CPAN
@
text
@d3 1
a3 1
perl - The Perl language interpreter
d13 1
d19 3
a21 10
=head1 GETTING HELP

The F<perldoc> program gives you access to all the documentation that comes
with Perl.  You can get more documentation, tutorials and community support
online at L<http://www.perl.org/>.

If you're new to Perl, you should start by running C<perldoc perlintro>,
which is a general intro for beginners and provides some background to help
you navigate the rest of Perl's extensive documentation.  Run C<perldoc
perldoc> to learn more things you can do with F<perldoc>.
d95 1
a101 1
    perluniprops	Index of Unicode Version 5.2.0 properties in Perl
a140 1
    perlpolicy		Perl development policies
a152 9
    perl5121delta	Perl changes in version 5.12.1
    perl5120delta	Perl changes in version 5.12.0
    perl5115delta	Perl changes in version 5.11.5
    perl5114delta	Perl changes in version 5.11.4
    perl5113delta	Perl changes in version 5.11.3
    perl5112delta	Perl changes in version 5.11.2
    perl5111delta	Perl changes in version 5.11.1
    perl5110delta	Perl changes in version 5.11.0
    perl5101delta	Perl changes in version 5.10.1
d160 1
a161 1
    perl588delta	Perl changes in version 5.8.8
d207 1
d210 1
d230 2
a231 2
On a Unix-like system, these documentation files will usually also be
available as manpages for use with the F<man> program.
d233 27
a259 3
In general, if something strange has gone wrong with your program and you're
not sure where you should look for help, try the B<-w> switch first.  It will
often point out exactly where the trouble is.
a261 3

Perl officially stands for Practical Extraction and Report Language,
except when it doesn't.
@


1.1.1.14
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d3 1
a3 1
perl - The Perl 5 language interpreter
a30 18
=begin buildtoc

# This section is parsed by Porting/pod_lib.pl for use by pod/buildtoc etc

flag =g  perluniprops perlmodlib perlapi perlintern
flag =go perltoc
flag =ro perlcn perljp perlko perltw
flag =   perlvms

path perlfaq.*               cpan/perlfaq/lib/
path perlglossary            cpan/perlfaq/lib/
path perlxs(?:tut|typemap)?  dist/ExtUtils-ParseXS/lib/
path perldoc                 cpan/Pod-Perldoc/lib/

aux a2p c2ph h2ph h2xs perlbug pl2pm pod2html pod2man s2p splain xsubpp

=end buildtoc

d46 4
a49 1
    perlootut		Perl OO tutorial for beginners
a80 1
    perlpodstyle	Perl POD style guide
d107 1
a107 1
    perluniprops	Index of Unicode Version 6.0.0 properties in Perl
d122 2
a125 2
    perldtrace		Perl's support for DTrace

a133 1
    perlxstypemap	Perl XS C/Perl type conversion tools
a146 4
    perlsource		Guide to the Perl source tree
    perlinterp		Overview of the Perl interpreter source and how it works
    perlhacktut 	Walk through the creation of a simple C code patch
    perlhacktips	Tips for Perl core C code hacking
d148 1
a148 1
    perlgit		Using git with the Perl repository
d154 1
a159 11
    perl5162delta	Perl changes in version 5.16.2
    perl5161delta	Perl changes in version 5.16.1
    perl5160delta	Perl changes in version 5.16.0
    perl5160delta	Perl changes in version 5.16.0
    perl5143delta	Perl changes in version 5.14.3
    perl5142delta	Perl changes in version 5.14.2
    perl5141delta	Perl changes in version 5.14.1
    perl5140delta	Perl changes in version 5.14.0
    perl5124delta	Perl changes in version 5.12.4
    perl5123delta	Perl changes in version 5.12.3
    perl5122delta	Perl changes in version 5.12.2
d162 6
d170 6
d186 4
a194 2
    perlexperiment	A listing of experimental features in Perl

a199 2
=for buildtoc flag +r

d209 1
a242 11
=for buildtoc flag -r

=head2 Stubs for Deleted Documents

    perlboot		
    perlbot		
    perltodo
    perltooc		
    perltoot		

=for buildtoc __END__
d256 1
a256 1
Perl was originally a language optimized for scanning arbitrary
d258 4
a261 7
reports based on that information.  It quickly became a good language
for many system management tasks. Over the years, Perl has grown into
a general-purpose programming language. It's widely used for everything
from quick "one-liners" to full-scale application development.

The language is intended to be practical (easy to use, efficient,
complete) rather than beautiful (tiny, elegant, minimal).
d275 10
a284 2
scanning text, Perl also has many excellent tools for slicing
and dicing binary data.
d303 2
a304 2
Described in L<perlembed>, L<perlxstut>, L<perlxs>, L<perlxstypemap>,
L<perlcall>, L<perlguts>, and L<xsubpp>.
d329 2
a330 1
Described in L<perlobj> and L<perlootut>.
d398 3
d448 1
a448 1
in compiling perl, the L<perlbug> script in the F<utils/> subdirectory
@


1.1.1.15
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@a17 2
For more information on these options, you can run C<perldoc perlrun>.

a52 1
    perlrun		Perl execution and options
d97 1
d123 1
a123 1
    perluniprops	Index of Unicode properties in Perl
d180 1
a180 2
    perl5181delta	Perl changes in version 5.18.1
    perl5180delta	Perl changes in version 5.18.0
a181 2
    perl5162delta	Perl changes in version 5.16.2
    perl5163delta	Perl changes in version 5.16.3
d183 1
a183 1
    perl5144delta	Perl changes in version 5.14.4
a187 1
    perl5125delta	Perl changes in version 5.12.5
d228 1
d234 1
d243 1
d255 2
a269 1
    perlrepository
a275 6
Some documentation is not available as man pages, so if a
cross-reference is not found by man, try it with L<perldoc>.  Perldoc can
also take you directly to documentation for functions (with the B<-f>
switch). See C<perldoc --help> (or C<perldoc perldoc> or C<man perldoc>)
for other helpful options L<perldoc> has to offer.

d277 2
a278 3
not sure where you should look for help, try making your code comply with
B<use strict> and B<use warnings>.  These will often point out exactly
where the trouble is.
d293 102
a394 16
complete) rather than beautiful (tiny, elegant, minimal).  It combines
(in the author's opinion, anyway) some of the best features of B<sed>,
B<awk>, and B<sh>, making it familiar and easy to use for Unix users to
whip up quick solutions to annoying problems.  Its general-purpose
programming facilities support procedural, functional, and
object-oriented programming paradigms, making Perl a comfortable
language for the long haul on major projects, whatever your bent.

Perl's roots in text processing haven't been forgotten over the years.
It still boasts some of the most powerful regular expressions to be
found anywhere, and its support for Unicode text is world-class.  It
handles all kinds of structured text, too, through an extensive
collection of extensions.  Those libraries, collected in the CPAN,
provide ready-made solutions to an astounding array of problems.  When
they haven't set the standard themselves, they steal from the best
-- just like Perl itself.
d428 2
a429 7
Using the C<use strict> pragma ensures that all variables are properly
declared and prevents other misuses of legacy Perl features.

The C<use warnings> pragma produces some lovely diagnostics. One can
also use the B<-w> flag, but its use is normally discouraged, because
it gets applied to all executed Perl code, including that not under
your control.
d443 2
a444 2
Did we mention that you should definitely consider using the B<use warnings>
pragma?
d448 1
a448 1
The behavior implied by the B<use warnings> pragma is not mandatory.
@


1.1.1.16
log
@Import perl-5.20.1
@
text
@d45 1
a45 1
path perldoc                 cpan/Pod-Perldoc/
a181 2
    perl5200delta	Perl changes in version 5.20.0
    perl5182delta	Perl changes in version 5.18.2
a233 1
    perlandroid		Perl notes for Android
d237 1
a256 1
    perlsynology 	Perl notes for Synology
a267 1
    perlrepository
d271 1
@


1.1.1.17
log
@Import perl-5.20.2
@
text
@a123 1
    perlunicook 	Perl Unicode cookbook
a181 1
    perl5201delta	Perl changes in version 5.20.1
a182 1
    perl5184delta	Perl changes in version 5.18.4
d186 2
a188 2
    perl5162delta	Perl changes in version 5.16.2
    perl5161delta	Perl changes in version 5.16.1
@


1.1.1.18
log
@Import perl-5.24.2
@
text
@d47 1
a47 1
aux c2ph h2ph h2xs perlbug pl2pm pod2html pod2man splain xsubpp
a182 8
    perl5241delta	Perl changes in version 5.24.1
    perl5240delta	Perl changes in version 5.24.0
    perl5223delta	Perl changes in version 5.22.3
    perl5222delta	Perl changes in version 5.22.2
    perl5221delta	Perl changes in version 5.22.1
    perl5220delta	Perl changes in version 5.22.0
    perl5203delta	Perl changes in version 5.20.3
    perl5202delta	Perl changes in version 5.20.2
a346 3

"@@INC" above is a reference to the built-in variable of the same name;
see L<perlvar> for more information.
@


