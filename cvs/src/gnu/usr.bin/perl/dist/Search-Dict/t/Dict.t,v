head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.2.0.10
	OPENBSD_6_1_BASE:1.1.1.2
	OPENBSD_6_0:1.1.1.2.0.12
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.6
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.8
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.2
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.2.0.4
	OPENBSD_5_6_BASE:1.1.1.2
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.39;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.39;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.03.24.14.59.00;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!./perl

print "1..4\n";

$DICT = <<EOT;
Aarhus
Aaron
Ababa
aback
abaft
abandon
abandoned
abandoning
abandonment
abandons
abase
abased
abasement
abasements
abases
abash
abashed
abashes
abashing
abasing
abate
abated
abatement
abatements
abater
abates
abating
Abba
EOT

use Search::Dict;

open(DICT, "+>dict-$$") or die "Can't create dict-$$: $!";
binmode DICT;			# To make length expected one.
print DICT $DICT;

my $pos = look *DICT, "Ababa";
chomp($word = <DICT>);
print "not " if $pos < 0 || $word ne "Ababa";
print "ok 1\n";

if (ord('a') > ord('A') ) {  # ASCII

    $pos = look *DICT, "foo";
    chomp($word = <DICT>);

    print "not " if $pos != length($DICT);  # will search to end of file
    print "ok 2\n";

    my $pos = look *DICT, "abash";
    chomp($word = <DICT>);
    print "not " if $pos < 0 || $word ne "abash";
    print "ok 3\n";

}
else { # EBCDIC systems e.g. os390

    $pos = look *DICT, "FOO";
    chomp($word = <DICT>);

    print "not " if $pos != length($DICT);  # will search to end of file
    print "ok 2\n";

    my $pos = look *DICT, "Abba";
    chomp($word = <DICT>);
    print "not " if $pos < 0 || $word ne "Abba";
    print "ok 3\n";
}

$pos = look *DICT, "aarhus", 1, 1;
chomp($word = <DICT>);

print "not " if $pos < 0 || $word ne "Aarhus";
print "ok 4\n";

close DICT or die "cannot close";
unlink "dict-$$";
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d3 1
a3 3
use strict;
use Test::More;
plan tests => ( $] ge '5.008' ? 14 : 10 );
d5 1
a5 1
my $DICT = <<EOT;
a35 1
use Tie::Handle; # loads Tie::StdHandle
a41 2
my $word;

d44 2
a45 2
cmp_ok $pos, ">=", 0;
is $word, "Ababa", "found 'Ababa' from file";
d50 1
a50 1
    $word = <DICT>;
d52 2
a53 1
    is $pos, length($DICT), "word not found will search to end of file";
d57 3
a59 2
    cmp_ok $pos, ">=", 0;
    is $word, "abash";
d64 1
a64 1
    $word = <DICT>;
d66 2
a67 1
    is $pos, length($DICT);  # will search to end of file
d71 2
a72 2
    cmp_ok $pos, ">=", 0;
    is $word, "Abba";
d78 2
a79 2
cmp_ok $pos, ">=", 0;
is $word, "Aarhus";
a81 20

{
  local $^W = 1; # turn on global warnings for stat() in Search::Dict

  my $warn = '';
  local $SIG{__WARN__} = sub { $warn = join("\n",@@_) };

  tie *DICT, 'Tie::StdHandle', "<", "dict-$$";

  $pos = look \*DICT, "aarhus", 1, 1;
  is( $warn, '', "no warning seen" );

  $word = <DICT>;
  chomp $word;

  cmp_ok $pos, ">=", 0, "case-insensitive search for 'aarhus' returned > 0";
  is $word, "Aarhus", "case-insensitive search found 'Aarhus'";

  untie *DICT;
}
a82 20

if ( $] ge '5.008' ) {
      open my $strfh, "<", \$DICT or die $!;

      {
          my $pos = look $strfh, 'Ababa';
          chomp($word = <$strfh>);
          cmp_ok $pos, ">=", 0;
          is $word, "Ababa";
      }

      {
          my $pos = look $strfh, "aarhus", 1, 1;
          chomp($word = <$strfh>);
          cmp_ok $pos, ">=", 0;
          is $word, "Aarhus";
      }

      close $strfh;
}
@

