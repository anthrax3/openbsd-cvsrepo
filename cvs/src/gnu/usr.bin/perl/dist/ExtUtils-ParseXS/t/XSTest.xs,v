head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1.1.2
	PERL_5_24_2:1.1.1.2
	OPENBSD_6_1:1.1.1.2.0.12
	OPENBSD_6_1_BASE:1.1.1.2
	OPENBSD_6_0:1.1.1.2.0.10
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.4
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.6
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.2
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.36;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.36;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.11.17.20.53.03;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"

void
xstest_something (char * some_thing)
{
	some_thing = some_thing;
}

void
xstest_something2 (char * some_thing)
{
	some_thing = some_thing;
}


MODULE = XSTest         PACKAGE = XSTest	PREFIX = xstest_

PROTOTYPES: DISABLE

int
is_even(input)
	int     input
    CODE:
	RETVAL = (input % 2 == 0);
    OUTPUT:
	RETVAL

void
xstest_something (myclass, some_thing)
	char * some_thing
    C_ARGS:
	some_thing

void
xstest_something2 (some_thing)
	char * some_thing

void
xstest_something3 (myclass, some_thing)
	SV   * myclass
	char * some_thing
    PREINIT:
    	int i = 0;
    PPCODE:
    	/* it's up to us clear these warnings */
	myclass = myclass;
	some_thing = some_thing;
	i = i;
	XSRETURN_UNDEF;
	
int
consts (myclass)
	SV * myclass
    ALIAS:
	const_one = 1
	const_two = 2
	const_three = 3
    CODE:
    	/* it's up to us clear these warnings */
    	myclass = myclass;
	ix = ix;
    	RETVAL = 1;
    OUTPUT:
	RETVAL

@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.20.1
@
text
@a67 20
bool
T_BOOL(in)
        bool in
    CODE:
        RETVAL = in;
    OUTPUT: RETVAL

bool
T_BOOL_2(in)
        bool in
    CODE:
    OUTPUT: in

void
T_BOOL_OUT( out, in )
        bool out
        bool in
    CODE:
        out = in;
    OUTPUT: out
@

