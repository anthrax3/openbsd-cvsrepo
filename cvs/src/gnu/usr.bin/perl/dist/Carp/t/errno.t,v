head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.10
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	PERL:1.1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2014.11.17.20.53.02;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;
commitid	B31cAbBIXiCqnL97;

1.1.1.1
date	2014.11.17.20.53.02;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@use warnings;
use strict;

use Test::More tests => 20;

use Carp ();

sub AA::CARP_TRACE { $! = 42; $^E = 42; "Tracy" }
my $aa = bless({}, "AA");

my($m, $errno, $exterr);

$! = 69; $^E = 69;
sub lmm { Carp::longmess("x") }
sub lm { lmm() }
$m = lm($aa);
$errno = 0+$!; $exterr = 0+$^E;
like $m, qr/Tracy/;
is $errno, 69;
is $exterr, 69;

$! = 69; $^E = 69;
sub sm { Carp::shortmess("x") }
$m = sm($aa);
$errno = 0+$!; $exterr = 0+$^E;
like $m, qr/Tracy/;
is $errno, 69;
is $exterr, 69;

$SIG{__WARN__} = sub { $m = $_[0]; $errno = 0+$!; $exterr = 0+$^E; };

$! = 69; $^E = 69;
$m = $errno = $exterr = undef;
sub cl { Carp::cluck("x") }
cl($aa);
like $m, qr/Tracy/;
is $errno, 69;
is $exterr, 69;

$! = 69; $^E = 69;
$m = $errno = $exterr = undef;
sub cp { Carp::carp("x") }
cp($aa);
like $m, qr/Tracy/;
is $errno, 69;
is $exterr, 69;

$SIG{__DIE__} = $SIG{__WARN__};
delete $SIG{__WARN__};

$! = 69; $^E = 69;
$m = $errno = $exterr = undef;
sub cf { Carp::confess("x") }
eval { cf($aa) };
like $@@, qr/Tracy/;
like $m, qr/Tracy/;
is $errno, 69;
is $exterr, 69;

$! = 69; $^E = 69;
$m = $errno = $exterr = undef;
sub ck { Carp::croak("x") }
eval { ck($aa) };
like $@@, qr/Tracy/;
like $m, qr/Tracy/;
is $errno, 69;
is $exterr, 69;

delete $SIG{__DIE__};

1;
@


1.1.1.1
log
@Import perl-5.20.1
@
text
@@
