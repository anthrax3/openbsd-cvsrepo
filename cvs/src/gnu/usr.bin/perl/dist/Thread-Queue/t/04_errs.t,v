head	1.1;
branch	1.1.1;
access;
symbols
	PERL_5_24_2:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.28
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.26
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.20
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.22
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.14
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.18
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2010.09.24.14.48.48;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.48.48;	author millert;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@use strict;
use warnings;

use Thread::Queue;

use Test::More 'tests' => 26;

my $q = Thread::Queue->new(1..10);
ok($q, 'New queue');

eval { $q->dequeue(undef); };
like($@@, qr/Invalid 'count'/, $@@);
eval { $q->dequeue(0); };
like($@@, qr/Invalid 'count'/, $@@);
eval { $q->dequeue(0.5); };
like($@@, qr/Invalid 'count'/, $@@);
eval { $q->dequeue(-1); };
like($@@, qr/Invalid 'count'/, $@@);
eval { $q->dequeue('foo'); };
like($@@, qr/Invalid 'count'/, $@@);

eval { $q->dequeue_nb(undef); };
like($@@, qr/Invalid 'count'/, $@@);
eval { $q->dequeue_nb(0); };
like($@@, qr/Invalid 'count'/, $@@);
eval { $q->dequeue_nb(-0.5); };
like($@@, qr/Invalid 'count'/, $@@);
eval { $q->dequeue_nb(-1); };
like($@@, qr/Invalid 'count'/, $@@);
eval { $q->dequeue_nb('foo'); };
like($@@, qr/Invalid 'count'/, $@@);

eval { $q->peek(undef); };
like($@@, qr/Invalid 'index'/, $@@);
eval { $q->peek(3.3); };
like($@@, qr/Invalid 'index'/, $@@);
eval { $q->peek('foo'); };
like($@@, qr/Invalid 'index'/, $@@);

eval { $q->insert(); };
like($@@, qr/Invalid 'index'/, $@@);
eval { $q->insert(undef); };
like($@@, qr/Invalid 'index'/, $@@);
eval { $q->insert(.22); };
like($@@, qr/Invalid 'index'/, $@@);
eval { $q->insert('foo'); };
like($@@, qr/Invalid 'index'/, $@@);

eval { $q->extract(undef); };
like($@@, qr/Invalid 'index'/, $@@);
eval { $q->extract('foo'); };
like($@@, qr/Invalid 'index'/, $@@);
eval { $q->extract(1.1); };
like($@@, qr/Invalid 'index'/, $@@);
eval { $q->extract(0, undef); };
like($@@, qr/Invalid 'count'/, $@@);
eval { $q->extract(0, 0); };
like($@@, qr/Invalid 'count'/, $@@);
eval { $q->extract(0, 3.3); };
like($@@, qr/Invalid 'count'/, $@@);
eval { $q->extract(0, -1); };
like($@@, qr/Invalid 'count'/, $@@);
eval { $q->extract(0, 'foo'); };
like($@@, qr/Invalid 'count'/, $@@);

exit(0);

# EOF
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@
