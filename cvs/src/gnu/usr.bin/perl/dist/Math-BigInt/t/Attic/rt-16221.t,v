head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.09;	author afresh1;	state dead;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2013.03.25.20.08.37;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.37;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!/usr/bin/perl
#
# Verify that
#   - Math::BigInt::objectify() calls as_int() (or as_number(), as a fallback)
#     if the target object class is Math::BigInt.
#   - Math::BigInt::objectify() calls as_float() if the target object class is
#     Math::BigFloat.
#
# See RT #16221 and RT #52124.

use strict;
use warnings;

package main;

use Test::More tests => 2;
use Math::BigInt;
use Math::BigFloat;

############################################################################

my $int = Math::BigInt->new(10);
my $int_percent = My::Percent::Float->new(100);

is($int * $int_percent, 10);

############################################################################

my $float = Math::BigFloat->new(10);
my $float_percent = My::Percent::Float->new(100);

is($float * $float_percent, 10);

############################################################################

package My::Percent::Int;

sub new {
    my $class = shift;
    my $num = shift;
    return bless \$num, $class;
}

sub as_number {
    my $self = shift;
    return Math::BigInt->new($$self / 100);
}

sub as_string {
    my $self = shift;
    return $$self;
}

############################################################################

package My::Percent::Float;

sub new {
    my $class = shift;
    my $num = shift;
    return bless \$num, $class;
}

sub as_int {
    my $self = shift;
    return Math::BigInt->new($$self / 100);
}

sub as_float {
    my $self = shift;
    return Math::BigFloat->new($$self / 100);
}

sub as_string {
    my $self = shift;
    return $$self;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
