head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.16
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.10
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.12
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.8
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2013.03.25.20.08.32;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.08.32;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@
use strict;

my ($x);

###############################################################################
# inf tests

$x = 1+inf;	like (ref($x), qr/^Math::BigInt/); is ($x->bstr(),'inf');
$x = 1*inf;	like (ref($x), qr/^Math::BigInt/); is ($x->bstr(),'inf');

# these don't work without exporting inf()
$x = inf;	like (ref($x), qr/^Math::BigInt/); is ($x->bstr(),'inf');
$x = inf+inf;	like (ref($x), qr/^Math::BigInt/); is ($x->bstr(),'inf');
$x = inf*inf;	like (ref($x), qr/^Math::BigInt/); is ($x->bstr(),'inf');

###############################################################################
# NaN tests

$x = 1+NaN;	like (ref($x), qr/^Math::BigInt/); is ($x->bstr(),'NaN');
$x = 1*NaN;	like (ref($x), qr/^Math::BigInt/); is ($x->bstr(),'NaN');

# these don't work without exporting NaN()
$x = NaN;	like (ref($x), qr/^Math::BigInt/); is ($x->bstr(),'NaN');
$x = NaN+NaN;	like (ref($x), qr/^Math::BigInt/); is ($x->bstr(),'NaN');
$x = NaN*NaN;	like (ref($x), qr/^Math::BigInt/); is ($x->bstr(),'NaN');

###############################################################################
# mixed tests

# these don't work without exporting NaN() or inf()
$x = NaN+inf;	like (ref($x), qr/^Math::BigInt/); is ($x->bstr(),'NaN');
$x = NaN*inf;	like (ref($x), qr/^Math::BigInt/); is ($x->bstr(),'NaN');
$x = inf*NaN;	like (ref($x), qr/^Math::BigInt/); is ($x->bstr(),'NaN');

@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@
