head	1.2;
access;
symbols
	OPENBSD_6_1_BASE:1.2;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.33.40;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	7JLVNm1wwPgqSqTa;

1.1
date	2017.02.05.00.32.10;	author afresh1;	state Exp;
branches;
next	;
commitid	cxJ08BvJA9Pt2PTM;


desc
@@


1.2
log
@Apply local patches - perl-5.24.1
@
text
@package t::Watchdog;

use strict;

use Config;
use Test::More;

my $waitfor = 360; # 30-45 seconds is normal (load affects this).
my $watchdog_pid;
my $TheEnd;

if ($Config{d_fork}) {
    print("# I am the main process $$, starting the watchdog process...\n");
    $watchdog_pid = fork();
    if (defined $watchdog_pid) {
	if ($watchdog_pid == 0) { # We are the kid, set up the watchdog.
	    my $ppid = getppid();
	    print("# I am the watchdog process $$, sleeping for $waitfor seconds...\n");
	    sleep($waitfor - 2);    # Workaround for perlbug #49073
	    sleep(2);               # Wait for parent to exit
	    if (kill(0, $ppid)) {   # Check if parent still exists
		warn "\n$0: overall time allowed for tests (${waitfor}s) exceeded!\n";
		print("Terminating main process $ppid...\n");
		kill('KILL', $ppid);
		print("# This is the watchdog process $$, over and out.\n");
	    }
	    exit(0);
	} else {
	    print("# The watchdog process $watchdog_pid launched, continuing testing...\n");
	    $TheEnd = time() + $waitfor;
	}
    } else {
	warn "$0: fork failed: $!\n";
    }
} else {
    print("# No watchdog process (need fork)\n");
}

END {
    if ($watchdog_pid) { # Only in the main process.
	my $left = $TheEnd - time();
	printf("# I am the main process $$, terminating the watchdog process $watchdog_pid before it terminates me in %d seconds (testing took %d seconds).\n", $left, $waitfor - $left);
	if (kill(0, $watchdog_pid)) {
	    local $? = 0;
	    my $kill = kill('KILL', $watchdog_pid); # We are done, the watchdog can go.
	    wait();
	    printf("# kill KILL $watchdog_pid = %d\n", $kill);
	}
	unlink("ktrace.out"); # Used in BSD system call tracing.
	print("# All done.\n");
    }
}

1;
@


1.1
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@d13 1
a13 1
    note "I am the main process $$, starting the watchdog process...";
d18 1
a18 1
	    note "I am the watchdog process $$, sleeping for $waitfor seconds...";
d23 1
a23 1
		note "Terminating main process $ppid...";
d25 1
a25 1
		note "This is the watchdog process $$, over and out.";
d29 1
a29 1
	    note "The watchdog process $watchdog_pid launched, continuing testing...";
d36 1
a36 1
    note "No watchdog process (need fork)";
d42 1
a42 1
	note sprintf "I am the main process $$, terminating the watchdog process $watchdog_pid before it terminates me in %d seconds (testing took %d seconds).", $left, $waitfor - $left;
d47 1
a47 1
	    note sprintf "kill KILL $watchdog_pid = %d", $kill;
d50 1
a50 1
	note "All done.";
@

