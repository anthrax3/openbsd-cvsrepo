head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.2
	OPENBSD_6_2_BASE:1.4
	PERL_5_24_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2017.08.14.13.49.45;	author afresh1;	state Exp;
branches;
next	1.3;
commitid	AOpGtCFzbfdujI88;

1.3
date	2017.08.14.13.48.47;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	CrMEpTqBUsxCMTjx;

1.2
date	2017.02.05.00.33.40;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	7JLVNm1wwPgqSqTa;

1.1
date	2017.02.05.00.32.10;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;
commitid	cxJ08BvJA9Pt2PTM;

1.1.1.1
date	2017.08.14.13.46.10;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.4
log
@Apply local patches - perl-5.24.2

OK bluhm@@, Reads ok sthen@@
@
text
@use strict;

sub has_symbol {
    my $symbol = shift;
    eval "use Time::HiRes qw($symbol)";
    return 0 unless $@@ eq '';
    eval "my \$a = $symbol";
    return $@@ eq '';
}

use Config;

BEGIN {
    require Time::HiRes;
    unless(defined &Time::HiRes::setitimer
	    && defined &Time::HiRes::getitimer
	    && has_symbol('ITIMER_VIRTUAL')
	    && $Config{sig_name} =~ m/\bVTALRM\b/
	    && $^O ne 'nto' # nto: QNX 6 has the API but no implementation
	    && $^O ne 'haiku' # haiku: has the API but no implementation
	    && $^O ne 'gnu' # GNU/Hurd: has the API but no implementation
    ) {
	require Test::More;
	Test::More::plan(skip_all => "no itimer");
    }
}

use Test::More tests => 2;
use t::Watchdog;

my $limit = 0.25; # 25% is acceptable slosh for testing timers

my $i = 3;
my $r = [Time::HiRes::gettimeofday()];

$SIG{VTALRM} = sub {
    $i ? $i-- : Time::HiRes::setitimer(&Time::HiRes::ITIMER_VIRTUAL, 0);
    printf("# Tick! $i %s\n", Time::HiRes::tv_interval($r));
};	

printf("# setitimer: %s\n", join(" ",
       Time::HiRes::setitimer(&Time::HiRes::ITIMER_VIRTUAL, 0.5, 0.4)));

# Assume interval timer granularity of $limit * 0.5 seconds.  Too bold?
my $virt = Time::HiRes::getitimer(&Time::HiRes::ITIMER_VIRTUAL);
ok(defined $virt && abs($virt / 0.5) - 1 < $limit,
   "ITIMER_VIRTUAL defined with sufficient granularity")
   or diag "virt=" . (defined $virt ? $virt : 'undef');

printf("# getitimer: %s\n", join(" ",
       Time::HiRes::getitimer(&Time::HiRes::ITIMER_VIRTUAL)));

while (Time::HiRes::getitimer(&Time::HiRes::ITIMER_VIRTUAL)) {
    my $j;
    for (1..1000) { $j++ } # Can't be unbreakable, must test getitimer().
}

printf("# getitimer: %s\n", join(" ",
       Time::HiRes::getitimer(&Time::HiRes::ITIMER_VIRTUAL)));

$virt = Time::HiRes::getitimer(&Time::HiRes::ITIMER_VIRTUAL);
print("# at end, i=$i\n");
is($virt, 0, "time left should be zero");

$SIG{VTALRM} = 'DEFAULT';

1;
@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.2 dist

OK bluhm@@, Reads ok sthen@@
@
text
@d28 1
a28 1
use Test::More 0.82 tests => 2;
d38 1
a38 1
    note "Tick! $i ", Time::HiRes::tv_interval($r);
d41 2
a42 2
note "setitimer: ", join(" ",
    Time::HiRes::setitimer(&Time::HiRes::ITIMER_VIRTUAL, 0.5, 0.4));
d50 2
a51 2
note "getitimer: ", join(" ",
    Time::HiRes::getitimer(&Time::HiRes::ITIMER_VIRTUAL));
d58 2
a59 2
note "getitimer: ", join(" ",
    Time::HiRes::getitimer(&Time::HiRes::ITIMER_VIRTUAL));
d62 1
a62 1
note "at end, i=$i";
@


1.2
log
@Apply local patches - perl-5.24.1
@
text
@d28 1
a28 1
use Test::More tests => 2;
d38 1
a38 1
    printf("# Tick! $i %s\n", Time::HiRes::tv_interval($r));
d41 2
a42 2
printf("# setitimer: %s\n", join(" ",
       Time::HiRes::setitimer(&Time::HiRes::ITIMER_VIRTUAL, 0.5, 0.4)));
d50 2
a51 2
printf("# getitimer: %s\n", join(" ",
       Time::HiRes::getitimer(&Time::HiRes::ITIMER_VIRTUAL)));
d58 2
a59 2
printf("# getitimer: %s\n", join(" ",
       Time::HiRes::getitimer(&Time::HiRes::ITIMER_VIRTUAL)));
d62 1
a62 1
print("# at end, i=$i\n");
@


1.1
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@d28 1
a28 1
use Test::More 0.82 tests => 2;
d38 1
a38 1
    note "Tick! $i ", Time::HiRes::tv_interval($r);
d41 2
a42 2
note "setitimer: ", join(" ",
    Time::HiRes::setitimer(&Time::HiRes::ITIMER_VIRTUAL, 0.5, 0.4));
d50 2
a51 2
note "getitimer: ", join(" ",
    Time::HiRes::getitimer(&Time::HiRes::ITIMER_VIRTUAL));
d58 2
a59 2
note "getitimer: ", join(" ",
    Time::HiRes::getitimer(&Time::HiRes::ITIMER_VIRTUAL));
d62 1
a62 1
note "at end, i=$i";
@


1.1.1.1
log
@Import perl-5.24.2
@
text
@@


