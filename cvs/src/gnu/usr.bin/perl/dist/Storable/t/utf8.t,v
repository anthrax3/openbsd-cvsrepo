head	1.2;
access;
symbols
	OPENBSD_6_2_BASE:1.2
	PERL_5_24_2:1.1.1.3
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.2.0.16
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.10
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.12
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.4
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.2.0.8
	OPENBSD_5_6_BASE:1.1.1.2
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.2.0.6
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.2
	OPENBSD_5_4_BASE:1.1.1.2
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.32.10;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2010.09.24.14.48.48;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.48.48;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.03.25.20.08.40;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2017.08.14.13.46.09;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!./perl -w
#
#  Copyright (c) 1995-2000, Raphael Manfredi
#  
#  You may redistribute only under the same terms as Perl 5, as specified
#  in the README file that comes with the distribution.
#

sub BEGIN {
    if ($] < 5.006) {
	print "1..0 # Skip: no utf8 support\n";
	exit 0;
    }
    unshift @@INC, 't';
    unshift @@INC, 't/compat' if $] < 5.006002;
    require Config; import Config;
    if ($ENV{PERL_CORE} and $Config{'extensions'} !~ /\bStorable\b/) {
        print "1..0 # Skip: Storable was not built\n";
        exit 0;
    }
}

use strict;

use Storable qw(thaw freeze);
use Test::More tests => 6;

my $x = chr(1234);
is($x, ${thaw freeze \$x});

# Long scalar
$x = join '', map {chr $_} (0..1023);
is($x, ${thaw freeze \$x});

# Char in the range 127-255 (probably) in utf8.  This just won't work for
# EBCDIC for early Perls.
$x = ($] lt 5.007_003) ? chr(175) : chr(utf8::unicode_to_native(175))
   . chr (256);
chop $x;
is($x, ${thaw freeze \$x});

# Storable needs to cope if a frozen string happens to be internal utf8
# encoded

$x = chr 256;
my $data = freeze \$x;
is($x, ${thaw $data});

$data .= chr 256;
chop $data;
is($x, ${thaw $data});


$data .= chr 256;
# This definitely isn't valid
eval {thaw $data};
like($@@, qr/corrupt.*characters outside/);
@


1.1
log
@Initial revision
@
text
@a0 1

d15 1
a20 1
    require 'st-dump.pl';
a23 1
sub ok;
d26 1
a26 2

print "1..6\n";
d29 1
a29 1
ok 1, $x eq ${thaw freeze \$x};
d33 1
a33 1
ok 2, $x eq ${thaw freeze \$x};
d35 4
a38 2
# Char in the range 127-255 (probably) in utf8
$x = chr (175) . chr (256);
d40 1
a40 1
ok 3, $x eq ${thaw freeze \$x};
d42 1
a42 1
# Storable needs to cope if a frozen string happens to be internall utf8
d47 1
a47 1
ok 4, $x eq ${thaw $data};
d51 1
a51 1
ok 5, $x eq ${thaw $data};
d55 1
a55 1
# This definately isn't valid
d57 1
a57 1
ok 6, $@@ =~ /corrupt.*characters outside/;
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d1 1
a15 1
    unshift @@INC, 't/compat' if $] < 5.006002;
d21 1
d25 1
d28 2
a29 1
use Test::More tests => 6;
d32 1
a32 1
is($x, ${thaw freeze \$x});
d36 1
a36 1
is($x, ${thaw freeze \$x});
d41 1
a41 1
is($x, ${thaw freeze \$x});
d43 1
a43 1
# Storable needs to cope if a frozen string happens to be internal utf8
d48 1
a48 1
is($x, ${thaw $data});
d52 1
a52 1
is($x, ${thaw $data});
d56 1
a56 1
# This definitely isn't valid
d58 1
a58 1
like($@@, qr/corrupt.*characters outside/);
@


1.1.1.3
log
@Import perl-5.24.2
@
text
@d35 2
a36 4
# Char in the range 127-255 (probably) in utf8.  This just won't work for
# EBCDIC for early Perls.
$x = ($] lt 5.007_003) ? chr(175) : chr(utf8::unicode_to_native(175))
   . chr (256);
@


