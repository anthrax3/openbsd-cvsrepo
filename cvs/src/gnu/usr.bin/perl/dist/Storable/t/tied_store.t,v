head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.14
	OPENBSD_6_2_BASE:1.1.1.1
	PERL_5_24_2:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.12
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.10
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	PERL:1.1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2014.11.17.20.53.05;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;
commitid	B31cAbBIXiCqnL97;

1.1.1.1
date	2014.11.17.20.53.05;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@#!./perl

sub BEGIN {
    unshift @@INC, 't';
    unshift @@INC, 't/compat' if $] < 5.006002;
    require Config; import Config;
    if ($ENV{PERL_CORE} and $Config{'extensions'} !~ /\bStorable\b/) {
        print "1..0 # Skip: Storable was not built\n";
        exit 0;
    }
}

use Storable ();
use Test::More tests => 3;

our $f;

package TIED_HASH;

sub TIEHASH { bless({}, $_[0]) }

sub STORE {
	$f = Storable::freeze(\$_[2]);
	1;
}

package TIED_ARRAY;

sub TIEARRAY { bless({}, $_[0]) }

sub STORE {
	$f = Storable::freeze(\$_[2]);
	1;
}

package TIED_SCALAR;

sub TIESCALAR { bless({}, $_[0]) }

sub STORE {
	$f = Storable::freeze(\$_[1]);
	1;
}

package main;

my($s, @@a, %h);
tie $s, "TIED_SCALAR";
tie @@a, "TIED_ARRAY";
tie %h, "TIED_HASH";

$f = undef;
$s = 111;
is $f, Storable::freeze(\111);

$f = undef;
$a[3] = 222;
is $f, Storable::freeze(\222);

$f = undef;
$h{foo} = 333;
is $f, Storable::freeze(\333);

1;
@


1.1.1.1
log
@Import perl-5.20.1
@
text
@@
