head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.24
	OPENBSD_6_2_BASE:1.1.1.1
	PERL_5_24_2:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.28
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.26
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.20
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.22
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.14
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.18
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.16
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.12
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.10
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.8
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.6
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2010.09.24.14.48.48;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.09.24.14.48.48;	author millert;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl -Tw

use strict;
use Test::More tests => 10;

BEGIN {
    use_ok( 'Locale::Maketext' );
}

print "# --- Making sure that get_handle works ---\n";

# declare some classes...
{
    package Woozle;
    our @@ISA = ('Locale::Maketext');
    sub dubbil   { return $_[1] * 2 }
    sub numerate { return $_[2] . 'en' }
}
{
    package Woozle::eu_mt;
    our @@ISA = ('Woozle');
    our %Lexicon = (
        'd2' => 'hum [dubbil,_1]',
        'd3' => 'hoo [quant,_1,zaz]',
        'd4' => 'hoo [*,_1,zaz]',
    );
    keys %Lexicon; # dodges the 'used only once' warning
}

my $lh = Woozle->get_handle('eu-mt');
isa_ok( $lh, 'Woozle::eu_mt' );
is( $lh->maketext( 'd2', 7 ), 'hum 14' );

print "# Make sure we can assign to ENV entries\n",
"# (Otherwise we can't run the subsequent tests)...\n";
$ENV{'MYORP'}   = 'Zing';
is( $ENV{'MYORP'}, 'Zing' );
$ENV{'SWUZ'}   = 'KLORTHO HOOBOY';
is( $ENV{'SWUZ'}, 'KLORTHO HOOBOY' );

delete $ENV{'MYORP'};
delete $ENV{'SWUZ'};


print "# Test LANG...\n";
$ENV{'LC_ALL'} = '';
$ENV{'LC_MESSAGES'} = '';
$ENV{'REQUEST_METHOD'} = '';
$ENV{'LANG'}     = 'Eu_MT';
$ENV{'LANGUAGE'} = '';
$lh = Woozle->get_handle();
isa_ok( $lh, 'Woozle::eu_mt' );

print "# Test LANGUAGE...\n";
$ENV{'LANG'}     = '';
$ENV{'LANGUAGE'} = 'Eu-MT';
$lh = Woozle->get_handle();
isa_ok( $lh, 'Woozle::eu_mt' );

print "# Test HTTP_ACCEPT_LANGUAGE...\n";
$ENV{'REQUEST_METHOD'}       = 'GET';
$ENV{'HTTP_ACCEPT_LANGUAGE'} = 'eu-MT';
$lh = Woozle->get_handle();
isa_ok( $lh, 'Woozle::eu_mt' );

$ENV{'HTTP_ACCEPT_LANGUAGE'} = 'x-plorp, zaz, eu-MT, i-klung';
$lh = Woozle->get_handle();
isa_ok( $lh, 'Woozle::eu_mt' );

$ENV{'HTTP_ACCEPT_LANGUAGE'} = 'x-plorp, zaz, eU-Mt, i-klung';
$lh = Woozle->get_handle();
isa_ok( $lh, 'Woozle::eu_mt' );
@


1.1.1.1
log
@Perl 5.12.2 from CPAN
@
text
@@
