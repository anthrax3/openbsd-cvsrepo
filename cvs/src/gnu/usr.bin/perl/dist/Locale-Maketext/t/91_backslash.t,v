head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.8
	OPENBSD_6_2_BASE:1.1.1.1
	PERL_5_24_2:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.12
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.10
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.4
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.6
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.2
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	PERL:1.1.1;
locks; strict;
comment	@# @;
expand	@b@;


1.1
date	2014.11.17.20.53.03;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;
commitid	B31cAbBIXiCqnL97;

1.1.1.1
date	2014.11.17.20.53.03;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl -Tw

use strict;
use Test::More tests => 6;

BEGIN {
    use_ok( 'Locale::Maketext' );
}

use utf8;

{
    package My::Localize;
    our @@ISA = ('Locale::Maketext');
}
{
    package My::Localize::cs_cz;
    our @@ISA = ('My::Localize');
    our %Lexicon = (
        '[_1]foo1\n' => '[_1]bar\n',
        '[_1]foo2\n' => '[_1]běr\n',
        'foo2\n' => 'aěa\n',
        "[_1]foo\\n\n" => "[_1]bar\\n\n",
    );
    keys %Lexicon; # dodges the 'used only once' warning
}

my $lh = My::Localize->get_handle('cs_cz');
isa_ok( $lh, 'My::Localize::cs_cz' );
is( $lh->maketext('[_1]foo1\n', 'arg'), 'argbar\n', 'Safe parameterized' );
is( $lh->maketext('[_1]foo2\n', 'arg'), 'argběr\n', 'Unicode parameterized' );
is( $lh->maketext('foo2\n'), 'aěa\n', 'Unicode literal' );
is( $lh->maketext("[_1]foo\\n\n", 'arg'), "argbar\\n\n", 'new line parameterized' );
@


1.1.1.1
log
@Import perl-5.20.1
@
text
@@
