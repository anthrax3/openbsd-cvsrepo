head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.1.6.0.10
	OPENBSD_4_4_BASE:1.1.1.6
	OPENBSD_4_3:1.1.1.6.0.8
	OPENBSD_4_3_BASE:1.1.1.6
	OPENBSD_4_2:1.1.1.6.0.6
	OPENBSD_4_2_BASE:1.1.1.6
	OPENBSD_4_1:1.1.1.6.0.4
	OPENBSD_4_1_BASE:1.1.1.6
	OPENBSD_4_0:1.1.1.6.0.2
	OPENBSD_4_0_BASE:1.1.1.6
	PERL_5_8_8:1.1.1.6
	OPENBSD_3_9:1.1.1.5.0.8
	OPENBSD_3_9_BASE:1.1.1.5
	OPENBSD_3_8:1.1.1.5.0.6
	OPENBSD_3_8_BASE:1.1.1.5
	OPENBSD_3_7:1.1.1.5.0.4
	OPENBSD_3_7_BASE:1.1.1.5
	PERL_5_8_6:1.1.1.5
	OPENBSD_3_6:1.1.1.5.0.2
	OPENBSD_3_6_BASE:1.1.1.5
	PERL_5_8_5:1.1.1.5
	PERL_5_8_3:1.1.1.5
	OPENBSD_3_5:1.1.1.4.0.6
	OPENBSD_3_5_BASE:1.1.1.4
	PERL_5_8_2:1.1.1.4
	OPENBSD_3_4:1.1.1.4.0.4
	OPENBSD_3_4_BASE:1.1.1.4
	OPENBSD_3_3:1.1.1.4.0.2
	OPENBSD_3_3_BASE:1.1.1.4
	PERL_5_8_0:1.1.1.4
	OPENBSD_3_2:1.1.1.3.0.6
	OPENBSD_3_2_BASE:1.1.1.3
	OPENBSD_3_1:1.1.1.3.0.4
	OPENBSD_3_1_BASE:1.1.1.3
	OPENBSD_3_0:1.1.1.3.0.2
	OPENBSD_3_0_BASE:1.1.1.3
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.1.1.2.0.6
	OPENBSD_2_9_BASE:1.1.1.2
	OPENBSD_2_8:1.1.1.2.0.4
	OPENBSD_2_8_BASE:1.1.1.2
	OPENBSD_2_7:1.1.1.2.0.2
	OPENBSD_2_7_BASE:1.1.1.2
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	PERL_500503:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2008.09.29.17.35.58;	author millert;	state dead;
branches;
next	1.1;

1.1
date	99.04.29.22.37.38;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.37.38;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.08.43;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2001.05.24.18.22.15;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.10.27.22.14.49;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.04.07.21.12.53;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2006.03.28.18.47.36;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@*** perly.c.old	Wed Jan 06 20:03:41 1999
--- perly.c	Wed Jan 06 18:51:20 1999
***************
*** 7,86 ****
  #include "perl.h"
  
  static void
  dep(void)
  {
      deprecate("\"do\" to call subroutines");
  }
  
  #line 30 "perly.y"
- #ifndef OEMVS
- #line 33 "perly.y"
- typedef union {
-     I32	ival;
-     char *pval;
-     OP *opval;
-     GV *gvval;
- } YYSTYPE;
- #line 41 "perly.y"
- #endif /* OEMVS */
- #line 27 "y.tab.c"
- #define WORD 257
- #define METHOD 258
- #define FUNCMETH 259
- #define THING 260
- #define PMFUNC 261
- #define PRIVATEREF 262
- #define FUNC0SUB 263
- #define UNIOPSUB 264
- #define LSTOPSUB 265
- #define LABEL 266
- #define FORMAT 267
- #define SUB 268
- #define ANONSUB 269
- #define PACKAGE 270
- #define USE 271
- #define WHILE 272
- #define UNTIL 273
- #define IF 274
- #define UNLESS 275
- #define ELSE 276
- #define ELSIF 277
- #define CONTINUE 278
- #define FOR 279
- #define LOOPEX 280
- #define DOTDOT 281
- #define FUNC0 282
- #define FUNC1 283
- #define FUNC 284
- #define UNIOP 285
- #define LSTOP 286
- #define RELOP 287
- #define EQOP 288
- #define MULOP 289
- #define ADDOP 290
- #define DOLSHARP 291
- #define DO 292
- #define HASHBRACK 293
- #define NOAMP 294
- #define LOCAL 295
- #define MY 296
- #define OROP 297
- #define ANDOP 298
- #define NOTOP 299
- #define ASSIGNOP 300
- #define OROR 301
- #define ANDAND 302
- #define BITOROP 303
- #define BITANDOP 304
- #define SHIFTOP 305
- #define MATCHOP 306
- #define UMINUS 307
- #define REFGEN 308
- #define POWOP 309
- #define PREINC 310
- #define PREDEC 311
- #define POSTINC 312
- #define POSTDEC 313
- #define ARROW 314
  #define YYERRCODE 256
  short yylhs[] = {                                        -1,
--- 7,26 ----
  #include "perl.h"
  
+ #ifdef PERL_OBJECT
  static void
+ Dep(CPerlObj *pPerl)
+ {
+     pPerl->deprecate("\"do\" to call subroutines");
+ }
+ #define dep() Dep(this)
+ #else
+ static void
  dep(void)
  {
      deprecate("\"do\" to call subroutines");
  }
+ #endif
  
  #line 30 "perly.y"
  #define YYERRCODE 256
  short yylhs[] = {                                        -1,
***************
*** 1337,1340 ****
--- 1277,1281 ----
  #endif
  #endif
+ #ifndef PERL_OBJECT
  int yydebug;
  int yynerrs;
***************
*** 1345,1365 ****
  YYSTYPE yyval;
  YYSTYPE yylval;
! short yyss[YYSTACKSIZE];
! YYSTYPE yyvs[YYSTACKSIZE];
! #define yystacksize YYSTACKSIZE
  #line 643 "perly.y"
   /* PROGRAM */
! #line 1353 "y.tab.c"
  #define YYABORT goto yyabort
  #define YYACCEPT goto yyaccept
  #define YYERROR goto yyerrlab
  int
! yyparse()
  {
      register int yym, yyn, yystate;
  #if YYDEBUG
      register char *yys;
      extern char *getenv();
  
      if (yys = getenv("YYDEBUG"))
      {
--- 1286,1351 ----
  YYSTYPE yyval;
  YYSTYPE yylval;
! #endif
  #line 643 "perly.y"
   /* PROGRAM */
! #line 1353 "perly.c"
  #define YYABORT goto yyabort
  #define YYACCEPT goto yyaccept
  #define YYERROR goto yyerrlab
+ 
+ struct ysv {
+     short* yyss;
+     YYSTYPE* yyvs;
+     int oldyydebug;
+     int oldyynerrs;
+     int oldyyerrflag;
+     int oldyychar;
+     YYSTYPE oldyyval;
+     YYSTYPE oldyylval;
+ };
+ 
+ void
+ yydestruct(void *ptr)
+ {
+     struct ysv* ysave = (struct ysv*)ptr;
+     if (ysave->yyss) Safefree(ysave->yyss);
+     if (ysave->yyvs) Safefree(ysave->yyvs);
+     yydebug	= ysave->oldyydebug;
+     yynerrs	= ysave->oldyynerrs;
+     yyerrflag	= ysave->oldyyerrflag;
+     yychar	= ysave->oldyychar;
+     yyval	= ysave->oldyyval;
+     yylval	= ysave->oldyylval;
+     Safefree(ysave);
+ }
+ 
  int
! yyparse(void)
  {
      register int yym, yyn, yystate;
+     register short *yyssp;
+     register YYSTYPE *yyvsp;
+     short* yyss;
+     YYSTYPE* yyvs;
+     unsigned yystacksize = YYSTACKSIZE;
+     int retval = 0;
  #if YYDEBUG
      register char *yys;
+ #ifndef __cplusplus
      extern char *getenv();
+ #endif
+ #endif
+ 
+     struct ysv *ysave;
+     New(73, ysave, 1, struct ysv);
+     SAVEDESTRUCTOR(yydestruct, ysave);
+     ysave->oldyydebug	= yydebug;
+     ysave->oldyynerrs	= yynerrs;
+     ysave->oldyyerrflag	= yyerrflag;
+     ysave->oldyychar	= yychar;
+     ysave->oldyyval	= yyval;
+     ysave->oldyylval	= yylval;
  
+ #if YYDEBUG
      if (yys = getenv("YYDEBUG"))
      {
***************
*** 1374,1377 ****
--- 1360,1373 ----
      yychar = (-1);
  
+     /*
+     ** Initialize private stacks (yyparse may be called from an action)
+     */
+     New(73, yyss, yystacksize, short);
+     New(73, yyvs, yystacksize, YYSTYPE);
+     ysave->yyss = yyss;
+     ysave->yyvs = yyvs;
+     if (!yyvs || !yyss)
+ 	goto yyoverflow;
+ 
      yyssp = yyss;
      yyvsp = yyvs;
***************
*** 1389,1393 ****
              if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
              if (!yys) yys = "illegal-symbol";
!             printf("yydebug: state %d, reading %d (%s)\n", yystate,
                      yychar, yys);
          }
--- 1385,1389 ----
              if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
              if (!yys) yys = "illegal-symbol";
!             PerlIO_printf(Perl_debug_log, "yydebug: state %d, reading %d (%s)\n", yystate,
                      yychar, yys);
          }
***************
*** 1399,1408 ****
  #if YYDEBUG
          if (yydebug)
!             printf("yydebug: state %d, shifting to state %d\n",
                      yystate, yytable[yyn]);
  #endif
          if (yyssp >= yyss + yystacksize - 1)
          {
!             goto yyoverflow;
          }
          *++yyssp = yystate = yytable[yyn];
--- 1395,1418 ----
  #if YYDEBUG
          if (yydebug)
!             PerlIO_printf(Perl_debug_log, "yydebug: state %d, shifting to state %d\n",
                      yystate, yytable[yyn]);
  #endif
          if (yyssp >= yyss + yystacksize - 1)
          {
! 	    /*
! 	    ** reallocate and recover.  Note that pointers
! 	    ** have to be reset, or bad things will happen
! 	    */
! 	    int yyps_index = (yyssp - yyss);
! 	    int yypv_index = (yyvsp - yyvs);
! 	    yystacksize += YYSTACKSIZE;
! 	    ysave->yyvs = yyvs =
! 		(YYSTYPE*)PerlMem_realloc((char*)yyvs,yystacksize * sizeof(YYSTYPE));
! 	    ysave->yyss = yyss =
! 		(short*)PerlMem_realloc((char*)yyss,yystacksize * sizeof(short));
! 	    if (!yyvs || !yyss)
! 		goto yyoverflow;
! 	    yyssp = yyss + yyps_index;
! 	    yyvsp = yyvs + yypv_index;
          }
          *++yyssp = yystate = yytable[yyn];
***************
*** 1440,1449 ****
  #if YYDEBUG
                  if (yydebug)
!                     printf("yydebug: state %d, error recovery shifting\
!  to state %d\n", *yyssp, yytable[yyn]);
  #endif
                  if (yyssp >= yyss + yystacksize - 1)
                  {
!                     goto yyoverflow;
                  }
                  *++yyssp = yystate = yytable[yyn];
--- 1450,1474 ----
  #if YYDEBUG
                  if (yydebug)
!                     PerlIO_printf(Perl_debug_log,
! 		     "yydebug: state %d, error recovery shifting to state %d\n",
! 		     *yyssp, yytable[yyn]);
  #endif
                  if (yyssp >= yyss + yystacksize - 1)
                  {
! 		    /*
! 		    ** reallocate and recover.  Note that pointers
! 		    ** have to be reset, or bad things will happen
! 		    */
! 		    int yyps_index = (yyssp - yyss);
! 		    int yypv_index = (yyvsp - yyvs);
! 		    yystacksize += YYSTACKSIZE;
! 		    ysave->yyvs = yyvs = (YYSTYPE*)PerlMem_realloc((char*)yyvs,
! 			yystacksize * sizeof(YYSTYPE));
! 		    ysave->yyss = yyss = (short*)PerlMem_realloc((char*)yyss,
! 			yystacksize * sizeof(short));
! 		    if (!yyvs || !yyss)
! 			goto yyoverflow;
! 		    yyssp = yyss + yyps_index;
! 		    yyvsp = yyvs + yypv_index;
                  }
                  *++yyssp = yystate = yytable[yyn];
***************
*** 1455,1460 ****
  #if YYDEBUG
                  if (yydebug)
!                     printf("yydebug: error recovery discarding state %d\n",
!                             *yyssp);
  #endif
                  if (yyssp <= yyss) goto yyabort;
--- 1480,1486 ----
  #if YYDEBUG
                  if (yydebug)
!                     PerlIO_printf(Perl_debug_log,
! 			"yydebug: error recovery discarding state %d\n",
! 			*yyssp);
  #endif
                  if (yyssp <= yyss) goto yyabort;
***************
*** 1473,1478 ****
              if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
              if (!yys) yys = "illegal-symbol";
!             printf("yydebug: state %d, error recovery discards token %d (%s)\n",
!                     yystate, yychar, yys);
          }
  #endif
--- 1499,1505 ----
              if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
              if (!yys) yys = "illegal-symbol";
!             PerlIO_printf(Perl_debug_log,
! 		"yydebug: state %d, error recovery discards token %d (%s)\n",
! 		yystate, yychar, yys);
          }
  #endif
***************
*** 1483,1487 ****
  #if YYDEBUG
      if (yydebug)
!         printf("yydebug: state %d, reducing by rule %d (%s)\n",
                  yystate, yyn, yyrule[yyn]);
  #endif
--- 1510,1514 ----
  #if YYDEBUG
      if (yydebug)
!         PerlIO_printf(Perl_debug_log, "yydebug: state %d, reducing by rule %d (%s)\n",
                  yystate, yyn, yyrule[yyn]);
  #endif
***************
*** 2267,2271 ****
  { yyval.opval = yyvsp[0].opval; }
  break;
! #line 2270 "y.tab.c"
      }
      yyssp -= yym;
--- 2294,2298 ----
  { yyval.opval = yyvsp[0].opval; }
  break;
! #line 2270 "perly.c"
      }
      yyssp -= yym;
***************
*** 2277,2282 ****
  #if YYDEBUG
          if (yydebug)
!             printf("yydebug: after reduction, shifting from state 0 to\
!  state %d\n", YYFINAL);
  #endif
          yystate = YYFINAL;
--- 2304,2310 ----
  #if YYDEBUG
          if (yydebug)
!             PerlIO_printf(Perl_debug_log,
! 		"yydebug: after reduction, shifting from state 0 to state %d\n",
! 		YYFINAL);
  #endif
          yystate = YYFINAL;
***************
*** 2292,2296 ****
                  if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
                  if (!yys) yys = "illegal-symbol";
!                 printf("yydebug: state %d, reading %d (%s)\n",
                          YYFINAL, yychar, yys);
              }
--- 2320,2324 ----
                  if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
                  if (!yys) yys = "illegal-symbol";
!                 PerlIO_printf(Perl_debug_log, "yydebug: state %d, reading %d (%s)\n",
                          YYFINAL, yychar, yys);
              }
***************
*** 2307,2316 ****
  #if YYDEBUG
      if (yydebug)
!         printf("yydebug: after reduction, shifting from state %d \
! to state %d\n", *yyssp, yystate);
  #endif
      if (yyssp >= yyss + yystacksize - 1)
      {
!         goto yyoverflow;
      }
      *++yyssp = yystate;
--- 2335,2359 ----
  #if YYDEBUG
      if (yydebug)
!         PerlIO_printf(Perl_debug_log,
! 	    "yydebug: after reduction, shifting from state %d to state %d\n",
! 	    *yyssp, yystate);
  #endif
      if (yyssp >= yyss + yystacksize - 1)
      {
! 	/*
! 	** reallocate and recover.  Note that pointers
! 	** have to be reset, or bad things will happen
! 	*/
! 	int yyps_index = (yyssp - yyss);
! 	int yypv_index = (yyvsp - yyvs);
! 	yystacksize += YYSTACKSIZE;
! 	ysave->yyvs = yyvs =
! 	    (YYSTYPE*)PerlMem_realloc((char*)yyvs,yystacksize * sizeof(YYSTYPE));
! 	ysave->yyss = yyss =
! 	    (short*)PerlMem_realloc((char*)yyss,yystacksize * sizeof(short));
! 	if (!yyvs || !yyss)
! 	    goto yyoverflow;
! 	yyssp = yyss + yyps_index;
! 	yyvsp = yyvs + yypv_index;
      }
      *++yyssp = yystate;
***************
*** 2318,2325 ****
      goto yyloop;
  yyoverflow:
!     yyerror("yacc stack overflow");
  yyabort:
!     return (1);
  yyaccept:
!     return (0);
  }
--- 2361,2368 ----
      goto yyloop;
  yyoverflow:
!     yyerror("Out of memory for yacc stack");
  yyabort:
!     retval = 1;
  yyaccept:
!     return retval;
  }
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl5.005_03
@
text
@@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@d1 2
a2 2
*** y.tab.c.orig	Thu Aug 26 22:31:26 1999
--- y.tab.c	Thu Aug 26 22:32:22 1999
d4 125
a128 2
*** 1447,1456 ****
  yyparse()
d133 1
a133 1
!     extern char *getenv();
d137 39
a175 3
          yyn = *yys;
--- 1447,1473 ----
  yyparse()
d186 5
a190 2
! #endif
  
d193 1
a193 1
+     SAVEDESTRUCTOR_X(yydestruct, ysave);
d200 1
a200 1
+   
a203 1
          yyn = *yys;
d205 2
a206 3
*** 1463,1468 ****
--- 1480,1495 ----
      yyerrflag = 0;
a220 1
      *yyssp = yystate = 0;
d222 18
a239 1
*** 1493,1499 ****
d246 5
a250 2
          *++yyvsp = yylval;
--- 1520,1538 ----
d261 4
a264 2
! 	    ysave->yyvs = Renew(yyvs, yystacksize, YYSTYPE);
! 	    ysave->yyss = Renew(yyss, yystacksize, short);
a270 1
          *++yyvsp = yylval;
d272 5
a276 1
*** 1534,1540 ****
d283 6
a288 2
                  *++yyvsp = yylval;
--- 1573,1591 ----
d299 4
a302 2
! 		    ysave->yyvs = Renew(yyvs, yystacksize, YYSTYPE);
! 		    ysave->yyss = Renew(yyss, yystacksize, short);
a308 1
                  *++yyvsp = yylval;
d310 92
a401 1
*** 2473,2487 ****
d408 6
a413 10
      *++yyvsp = yyval;
      goto yyloop;
  yyoverflow:
!     yyerror("yacc stack overflow");
  yyabort:
!     return (1);
  yyaccept:
!     return (0);
  }
--- 2524,2569 ----
d424 4
a427 2
! 	ysave->yyvs = Renew(yyvs, yystacksize, YYSTYPE);
! 	ysave->yyss = Renew(yyss, yystacksize, short);
d434 11
a444 1
      *++yyvsp = yyval;
a451 19
! }
! 
! #ifdef PERL_OBJECT
! #include "XSUB.h"
! #endif
! 
! static void
! yydestruct(pTHXo_ void *ptr)
! {
!     struct ysv* ysave = (struct ysv*)ptr;
!     if (ysave->yyss) Safefree(ysave->yyss);
!     if (ysave->yyvs) Safefree(ysave->yyvs);
!     yydebug	= ysave->oldyydebug;
!     yynerrs	= ysave->oldyynerrs;
!     yyerrflag	= ysave->oldyyerrflag;
!     yychar	= ysave->oldyychar;
!     yyval	= ysave->oldyyval;
!     yylval	= ysave->oldyylval;
!     Safefree(ysave);
@


1.1.1.3
log
@stock perl 5.6.1
@
text
@d15 1
a15 1
--- 1447,1476 ----
a29 3
+ #ifdef USE_ITHREADS
+     ENTER;			/* force yydestruct() before we return */
+ #endif
d45 1
a45 1
--- 1483,1498 ----
d71 1
a71 1
--- 1523,1541 ----
d100 1
a100 1
--- 1576,1594 ----
d137 1
a137 1
--- 2527,2575 ----
a162 3
! #ifdef USE_ITHREADS
!     LEAVE;			/* force yydestruct() before we return */
! #endif
@


1.1.1.4
log
@stock perl 5.8.0 from CPAN
@
text
@d1 2
a2 2
*** perly.c.orig	Tue Mar 26 01:38:52 2002
--- perly.c	Tue Mar 26 01:38:54 2002
d4 1
a4 320
*** 1,5 ****
  #ifndef lint
! static char yysccsid[] = "@@(#)yaccpar 1.8 (Berkeley) 01/20/91";
  #endif
  #define YYBYACC 1
  #line 16 "perly.y"
--- 1,5 ----
  #ifndef lint
! /* static char yysccsid[] = "@@(#)yaccpar 1.8 (Berkeley) 01/20/91"; */
  #endif
  #define YYBYACC 1
  #line 16 "perly.y"
***************
*** 9,15 ****
  #ifdef EBCDIC
  #undef YYDEBUG
  #endif
! #define dep() deprecate("\"do\" to call subroutines")
  
  /* stuff included here to make perly_c.diff apply better */
  
--- 9,15 ----
  #ifdef EBCDIC
  #undef YYDEBUG
  #endif
! #define dep() deprecate_old("\"do\" to call subroutines")
  
  /* stuff included here to make perly_c.diff apply better */
  
***************
*** 50,119 ****
  #define yylex yylex_r
  #endif
  
! #line 54 "y.tab.c"
! #define WORD 257
! #define METHOD 258
! #define FUNCMETH 259
! #define THING 260
! #define PMFUNC 261
! #define PRIVATEREF 262
! #define FUNC0SUB 263
! #define UNIOPSUB 264
! #define LSTOPSUB 265
! #define LABEL 266
! #define FORMAT 267
! #define SUB 268
! #define ANONSUB 269
! #define PACKAGE 270
! #define USE 271
! #define WHILE 272
! #define UNTIL 273
! #define IF 274
! #define UNLESS 275
! #define ELSE 276
! #define ELSIF 277
! #define CONTINUE 278
! #define FOR 279
! #define LOOPEX 280
! #define DOTDOT 281
! #define FUNC0 282
! #define FUNC1 283
! #define FUNC 284
! #define UNIOP 285
! #define LSTOP 286
! #define RELOP 287
! #define EQOP 288
! #define MULOP 289
! #define ADDOP 290
! #define DOLSHARP 291
! #define DO 292
! #define HASHBRACK 293
! #define NOAMP 294
! #define LOCAL 295
! #define MY 296
! #define MYSUB 297
! #define COLONATTR 298
! #define PREC_LOW 299
! #define OROP 300
! #define ANDOP 301
! #define NOTOP 302
! #define ASSIGNOP 303
! #define OROR 304
! #define ANDAND 305
! #define BITOROP 306
! #define BITANDOP 307
! #define SHIFTOP 308
! #define MATCHOP 309
! #define UMINUS 310
! #define REFGEN 311
! #define POWOP 312
! #define PREINC 313
! #define PREDEC 314
! #define POSTINC 315
! #define POSTDEC 316
! #define ARROW 317
  #define YYERRCODE 256
! short yylhs[] = {                                        -1,
      0,    9,    7,    6,   10,    8,   11,   11,   11,   12,
     12,   12,   12,   25,   25,   25,   25,   25,   25,   25,
     15,   15,   15,   14,   14,   43,   43,   13,   13,   13,
--- 50,58 ----
  #define yylex yylex_r
  #endif
  
! #line 54 "perly.c"
  #define YYERRCODE 256
! static short yylhs[] = {                                        -1,
      0,    9,    7,    6,   10,    8,   11,   11,   11,   12,
     12,   12,   12,   25,   25,   25,   25,   25,   25,   25,
     15,   15,   15,   14,   14,   43,   43,   13,   13,   13,
***************
*** 135,141 ****
     49,   34,   34,   35,   35,   35,   44,   24,   19,   20,
     21,   22,   23,   36,   36,   36,   36,
  };
! short yylen[] = {                                         2,
      2,    4,    0,    0,    4,    0,    0,    2,    2,    2,
      1,    2,    3,    1,    1,    3,    3,    3,    3,    3,
      0,    2,    6,    7,    7,    0,    2,    8,    8,   10,
--- 74,80 ----
     49,   34,   34,   35,   35,   35,   44,   24,   19,   20,
     21,   22,   23,   36,   36,   36,   36,
  };
! static short yylen[] = {                                         2,
      2,    4,    0,    0,    4,    0,    0,    2,    2,    2,
      1,    2,    3,    1,    1,    3,    3,    3,    3,    3,
      0,    2,    6,    7,    7,    0,    2,    8,    8,   10,
***************
*** 157,163 ****
      1,    0,    1,    0,    1,    2,    1,    2,    2,    2,
      2,    2,    2,    1,    1,    1,    1,
  };
! short yydefred[] = {                                      4,
      0,    7,    0,   45,   58,   56,    0,   56,   56,    8,
     46,    9,   11,   48,    0,   47,   49,   50,    0,    0,
      0,   70,   71,    0,   14,    3,  173,    0,    0,  154,
--- 96,102 ----
      1,    0,    1,    0,    1,    2,    1,    2,    2,    2,
      2,    2,    2,    1,    1,    1,    1,
  };
! static short yydefred[] = {                                      4,
      0,    7,    0,   45,   58,   56,    0,   56,   56,    8,
     46,    9,   11,   48,    0,   47,   49,   50,    0,    0,
      0,   70,   71,    0,   14,    3,  173,    0,    0,  154,
***************
*** 199,205 ****
      0,   22,    0,    0,    0,   31,    5,    0,   30,    0,
      0,   33,    0,   23,
  };
! short yydgoto[] = {                                       1,
     10,   11,   20,  104,   19,    2,   95,  370,   98,  359,
      3,   12,   13,   70,  375,  285,   72,   73,   74,   75,
     76,   77,   78,   79,  291,   81,  292,  281,  283,  286,
--- 138,144 ----
      0,   22,    0,    0,    0,   31,    5,    0,   30,    0,
      0,   33,    0,   23,
  };
! static short yydgoto[] = {                                       1,
     10,   11,   20,  104,   19,    2,   95,  370,   98,  359,
      3,   12,   13,   70,  375,  285,   72,   73,   74,   75,
     76,   77,   78,   79,  291,   81,  292,  281,  283,  286,
***************
*** 207,213 ****
    194,  327,  156,  289,  271,  225,   14,   83,  137,   84,
     85,   86,   87,   15,   16,   17,   18,   93,  278,
  };
! short yysindex[] = {                                      0,
      0,    0, -132,    0,    0,    0,  -51,    0,    0,    0,
      0,    0,    0,    0,  650,    0,    0,    0, -239, -215,
      5,    0,    0, -215,    0,    0,    0,  -31,  -31,    0,
--- 146,152 ----
    194,  327,  156,  289,  271,  225,   14,   83,  137,   84,
     85,   86,   87,   15,   16,   17,   18,   93,  278,
  };
! static short yysindex[] = {                                      0,
      0,    0, -132,    0,    0,    0,  -51,    0,    0,    0,
      0,    0,    0,    0,  650,    0,    0,    0, -239, -215,
      5,    0,    0, -215,    0,    0,    0,  -31,  -31,    0,
***************
*** 249,255 ****
    449,    0, 2181, -150,  340,    0,    0,  355,    0,  216,
    216,    0, -123,    0,
  };
! short yyrindex[] = {                                      0,
      0,    0,  247,    0,    0,    0,    0,    0,    0,    0,
      0,    0,    0,    0,    0,    0,    0,    0,  274,    0,
      0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
--- 188,194 ----
    449,    0, 2181, -150,  340,    0,    0,  355,    0,  216,
    216,    0, -123,    0,
  };
! static short yyrindex[] = {                                      0,
      0,    0,  247,    0,    0,    0,    0,    0,    0,    0,
      0,    0,    0,    0,    0,    0,    0,    0,  274,    0,
      0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
***************
*** 291,297 ****
    917,    0,    0,  119,    0,    0,    0,    0,    0,    0,
      0,    0,  179,    0,
  };
! short yygindex[] = {                                      0,
      0,    0,  196,  425,    0,    0,   -2,    0,   37,  634,
    -94,    0,    0,    0, -323,  -15, 2445,    0,  999,  414,
    417,    0,    0,    0,  463,  -43,    0,    0,  321, -198,
--- 230,236 ----
    917,    0,    0,  119,    0,    0,    0,    0,    0,    0,
      0,    0,  179,    0,
  };
! static short yygindex[] = {                                      0,
      0,    0,  196,  425,    0,    0,   -2,    0,   37,  634,
    -94,    0,    0,    0, -323,  -15, 2445,    0,  999,  414,
    417,    0,    0,    0,  463,  -43,    0,    0,  321, -198,
***************
*** 300,306 ****
      0,    0,    0,    0,    0,    0,    0,    0,    0,
  };
  #define YYTABLESIZE 4568
! short yytable[] = {                                      71,
    197,   65,  121,  227,   65,  111,  220,   22,  198,  293,
    139,  296,  315,  275,  305,  102,  273,   88,  113,  228,
     60,  113,  279,   65,  317,   60,  182,  254,  325,  101,
--- 239,245 ----
      0,    0,    0,    0,    0,    0,    0,    0,    0,
  };
  #define YYTABLESIZE 4568
! static short yytable[] = {                                      71,
    197,   65,  121,  227,   65,  111,  220,   22,  198,  293,
    139,  296,  315,  275,  305,  102,  273,   88,  113,  228,
     60,  113,  279,   65,  317,   60,  182,  254,  325,  101,
***************
*** 759,765 ****
      0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      0,    0,    0,    0,    0,    0,   77,   77,
  };
! short yycheck[] = {                                      15,
     95,   36,   46,   41,   36,   40,   59,   59,  100,  208,
     54,   41,   59,  199,   41,   40,  196,  257,   41,   93,
    123,   44,  202,   36,   93,   59,   40,   40,   59,   29,
--- 698,704 ----
      0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      0,    0,    0,    0,    0,    0,   77,   77,
  };
! static short yycheck[] = {                                      15,
     95,   36,   46,   41,   36,   40,   59,   59,  100,  208,
     54,   41,   59,  199,   41,   40,  196,  257,   41,   93,
    123,   44,  202,   36,   93,   59,   40,   40,   59,   29,
***************
*** 1224,1230 ****
  #endif
  #define YYMAXTOKEN 317
  #if YYDEBUG
! char *yyname[] = {
  "end-of-file",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  "'!'",0,0,"'$'","'%'","'&'",0,"'('","')'","'*'","'+'","','","'-'",0,0,0,0,0,0,0,
  0,0,0,0,0,"':'","';'",0,0,0,"'?'","'@@'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
--- 1163,1169 ----
  #endif
  #define YYMAXTOKEN 317
  #if YYDEBUG
! static char *yyname[] = {
  "end-of-file",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  "'!'",0,0,"'$'","'%'","'&'",0,"'('","')'","'*'","'+'","','","'-'",0,0,0,0,0,0,0,
  0,0,0,0,0,"':'","';'",0,0,0,"'?'","'@@'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
***************
*** 1241,1247 ****
  "ANDAND","BITOROP","BITANDOP","SHIFTOP","MATCHOP","UMINUS","REFGEN","POWOP",
  "PREINC","PREDEC","POSTINC","POSTDEC","ARROW",
  };
! char *yyrule[] = {
  "$accept : prog",
  "prog : progstart lineseq",
  "block : '{' remember lineseq '}'",
--- 1180,1186 ----
  "ANDAND","BITOROP","BITANDOP","SHIFTOP","MATCHOP","UMINUS","REFGEN","POWOP",
  "PREINC","PREDEC","POSTINC","POSTDEC","ARROW",
  };
! static char *yyrule[] = {
  "$accept : prog",
  "prog : progstart lineseq",
  "block : '{' remember lineseq '}'",
***************
*** 1456,1472 ****
  #define YYMAXDEPTH 500
  #endif
  #endif
- int yydebug;
- int yynerrs;
- int yyerrflag;
- int yychar;
- short *yyssp;
- YYSTYPE *yyvsp;
- YYSTYPE yyval;
- YYSTYPE yylval;
- short yyss[YYSTACKSIZE];
- YYSTYPE yyvs[YYSTACKSIZE];
- #define yystacksize YYSTACKSIZE
  #line 793 "perly.y"
   /* PROGRAM */
  
--- 1395,1400 ----
***************
*** 1477,1483 ****
  #endif
  #define yyparse() Perl_yyparse(pTHX)
  
! #line 1481 "y.tab.c"
  #define YYABORT goto yyabort
  #define YYACCEPT goto yyaccept
  #define YYERROR goto yyerrlab
--- 1405,1411 ----
  #endif
  #define yyparse() Perl_yyparse(pTHX)
  
! #line 1409 "perly.c"
  #define YYABORT goto yyabort
  #define YYACCEPT goto yyaccept
  #define YYERROR goto yyerrlab
***************
*** 1485,1495 ****
d12 1
a12 1
!     if (yys = getenv("YYDEBUG"))
d15 1
a15 2
          if (yyn >= '0' && yyn <= '9')
--- 1413,1443 ----
d29 15
a43 15
!     struct ysv *ysave;
! #ifdef USE_ITHREADS
!     ENTER;			/* force yydestruct() before we return */
! #endif
!     New(73, ysave, 1, struct ysv);
!     SAVEDESTRUCTOR_X(yydestruct, ysave);
!     ysave->oldyydebug	= yydebug;
!     ysave->oldyynerrs	= yynerrs;
!     ysave->oldyyerrflag	= yyerrflag;
!     ysave->oldyychar	= yychar;
!     ysave->oldyyval	= yyval;
!     ysave->oldyylval	= yylval;
! 
! #if YYDEBUG
!     if ((yys = getenv("YYDEBUG")))
a45 1
          if (yyn >= '0' && yyn <= '9')
d47 2
a48 14
*** 1501,1512 ****
      yyerrflag = 0;
      yychar = (-1);
  
      yyssp = yyss;
      yyvsp = yyvs;
      *yyssp = yystate = 0;
  
  yyloop:
!     if (yyn = yydefred[yystate]) goto yyreduce;
      if (yychar < 0)
      {
          if ((yychar = yylex()) < 0) yychar = 0;
--- 1449,1470 ----
a64 6
  
  yyloop:
!     if ((yyn = yydefred[yystate])) goto yyreduce;
      if (yychar < 0)
      {
          if ((yychar = yylex()) < 0) yychar = 0;
d66 1
a66 23
*** 1516,1522 ****
              yys = 0;
              if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
              if (!yys) yys = "illegal-symbol";
!             printf("yydebug: state %d, reading %d (%s)\n", yystate,
                      yychar, yys);
          }
  #endif
--- 1474,1480 ----
              yys = 0;
              if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
              if (!yys) yys = "illegal-symbol";
!             PerlIO_printf(Perl_debug_log, "yydebug: state %d, reading %d (%s)\n", yystate,
                      yychar, yys);
          }
  #endif
***************
*** 1526,1537 ****
      {
  #if YYDEBUG
          if (yydebug)
!             printf("yydebug: state %d, shifting to state %d\n",
                      yystate, yytable[yyn]);
d70 1
a70 1
              goto yyoverflow;
d74 1
a74 6
--- 1484,1507 ----
      {
  #if YYDEBUG
          if (yydebug)
!             PerlIO_printf(Perl_debug_log, "yydebug: state %d, shifting to state %d\n",
                      yystate, yytable[yyn]);
d78 13
a90 13
+ 	    /*
+ 	    ** reallocate and recover.  Note that pointers
+ 	    ** have to be reset, or bad things will happen
+ 	    */
+ 	    int yyps_index = (yyssp - yyss);
+ 	    int yypv_index = (yyvsp - yyvs);
+ 	    yystacksize += YYSTACKSIZE;
+ 	    ysave->yyvs = Renew(yyvs, yystacksize, YYSTYPE);
+ 	    ysave->yyss = Renew(yyss, yystacksize, short);
+ 	    if (!yyvs || !yyss)
              goto yyoverflow;
+ 	    yyssp = yyss + yyps_index;
+ 	    yyvsp = yyvs + yypv_index;
d95 1
a95 37
*** 1547,1560 ****
      }
      if (yyerrflag) goto yyinrecovery;
  #ifdef lint
!     goto yynewerror;
  #endif
! yynewerror:
      yyerror("syntax error");
  #ifdef lint
!     goto yyerrlab;
  #endif
! yyerrlab:
      ++yynerrs;
  yyinrecovery:
      if (yyerrflag < 3)
--- 1517,1530 ----
      }
      if (yyerrflag) goto yyinrecovery;
  #ifdef lint
! 
  #endif
! 
      yyerror("syntax error");
  #ifdef lint
! 
  #endif
! 
      ++yynerrs;
  yyinrecovery:
      if (yyerrflag < 3)
***************
*** 1567,1578 ****
              {
  #if YYDEBUG
                  if (yydebug)
!                     printf("yydebug: state %d, error recovery shifting\
   to state %d\n", *yyssp, yytable[yyn]);
d99 1
a99 1
                      goto yyoverflow;
d103 1
a103 6
--- 1537,1560 ----
              {
  #if YYDEBUG
                  if (yydebug)
!                     PerlIO_printf(Perl_debug_log, "yydebug: state %d, error recovery shifting\
   to state %d\n", *yyssp, yytable[yyn]);
d107 13
a119 13
+ 		    /*
+ 		    ** reallocate and recover.  Note that pointers
+ 		    ** have to be reset, or bad things will happen
+ 		    */
+ 		    int yyps_index = (yyssp - yyss);
+ 		    int yypv_index = (yyvsp - yyvs);
+ 		    yystacksize += YYSTACKSIZE;
+ 		    ysave->yyvs = Renew(yyvs, yystacksize, YYSTYPE);
+ 		    ysave->yyss = Renew(yyss, yystacksize, short);
+ 		    if (!yyvs || !yyss)
                      goto yyoverflow;
+ 		    yyssp = yyss + yyps_index;
+ 		    yyvsp = yyvs + yypv_index;
d124 1
a124 108
*** 1582,1588 ****
              {
  #if YYDEBUG
                  if (yydebug)
!                     printf("yydebug: error recovery discarding state %d\n",
                              *yyssp);
  #endif
                  if (yyssp <= yyss) goto yyabort;
--- 1564,1570 ----
              {
  #if YYDEBUG
                  if (yydebug)
!                     PerlIO_printf(Perl_debug_log, "yydebug: error recovery discarding state %d\n",
                              *yyssp);
  #endif
                  if (yyssp <= yyss) goto yyabort;
***************
*** 1600,1606 ****
              yys = 0;
              if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
              if (!yys) yys = "illegal-symbol";
!             printf("yydebug: state %d, error recovery discards token %d (%s)\n",
                      yystate, yychar, yys);
          }
  #endif
--- 1582,1588 ----
              yys = 0;
              if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
              if (!yys) yys = "illegal-symbol";
!             PerlIO_printf(Perl_debug_log, "yydebug: state %d, error recovery discards token %d (%s)\n",
                      yystate, yychar, yys);
          }
  #endif
***************
*** 1610,1616 ****
  yyreduce:
  #if YYDEBUG
      if (yydebug)
!         printf("yydebug: state %d, reducing by rule %d (%s)\n",
                  yystate, yyn, yyrule[yyn]);
  #endif
      yym = yylen[yyn];
--- 1592,1598 ----
  yyreduce:
  #if YYDEBUG
      if (yydebug)
!         PerlIO_printf(Perl_debug_log, "yydebug: state %d, reducing by rule %d (%s)\n",
                  yystate, yyn, yyrule[yyn]);
  #endif
      yym = yylen[yyn];
***************
*** 2473,2479 ****
  #line 790 "perly.y"
  { yyval.opval = yyvsp[0].opval; }
  break;
! #line 2477 "y.tab.c"
      }
      yyssp -= yym;
      yystate = *yyssp;
--- 2455,2461 ----
  #line 790 "perly.y"
  { yyval.opval = yyvsp[0].opval; }
  break;
! #line 2459 "perly.c"
      }
      yyssp -= yym;
      yystate = *yyssp;
***************
*** 2483,2489 ****
      {
  #if YYDEBUG
          if (yydebug)
!             printf("yydebug: after reduction, shifting from state 0 to\
   state %d\n", YYFINAL);
  #endif
          yystate = YYFINAL;
--- 2465,2471 ----
      {
  #if YYDEBUG
          if (yydebug)
!             PerlIO_printf(Perl_debug_log, "yydebug: after reduction, shifting from state 0 to\
   state %d\n", YYFINAL);
  #endif
          yystate = YYFINAL;
***************
*** 2498,2504 ****
                  yys = 0;
                  if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
                  if (!yys) yys = "illegal-symbol";
!                 printf("yydebug: state %d, reading %d (%s)\n",
                          YYFINAL, yychar, yys);
              }
  #endif
--- 2480,2486 ----
                  yys = 0;
                  if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
                  if (!yys) yys = "illegal-symbol";
!                 PerlIO_printf(Perl_debug_log, "yydebug: state %d, reading %d (%s)\n",
                          YYFINAL, yychar, yys);
              }
  #endif
***************
*** 2513,2532 ****
          yystate = yydgoto[yym];
  #if YYDEBUG
      if (yydebug)
!         printf("yydebug: after reduction, shifting from state %d \
  to state %d\n", *yyssp, yystate);
d128 1
a128 1
          goto yyoverflow;
d140 1
a140 6
--- 2495,2544 ----
          yystate = yydgoto[yym];
  #if YYDEBUG
      if (yydebug)
!         PerlIO_printf(Perl_debug_log, "yydebug: after reduction, shifting from state %d \
  to state %d\n", *yyssp, yystate);
d144 13
a156 13
+ 	/*
+ 	** reallocate and recover.  Note that pointers
+ 	** have to be reset, or bad things will happen
+ 	*/
+ 	int yyps_index = (yyssp - yyss);
+ 	int yypv_index = (yyvsp - yyvs);
+ 	yystacksize += YYSTACKSIZE;
+ 	ysave->yyvs = Renew(yyvs, yystacksize, YYSTYPE);
+ 	ysave->yyss = Renew(yyss, yystacksize, short);
+ 	if (!yyvs || !yyss)
          goto yyoverflow;
+ 	yyssp = yyss + yyps_index;
+ 	yyvsp = yyvs + yypv_index;
d172 4
d177 1
a177 1
! yydestruct(pTHX_ void *ptr)
@


1.1.1.5
log
@perl 5.8.3 from CPAN
@
text
@d1 704
a704 455
--- perly.c.orig	Tue Dec 30 14:54:16 2003
+++ perly.c	Tue Dec 30 14:54:16 2003
@@@@ -1,5 +1,5 @@@@
 #ifndef lint
-static char yysccsid[] = "@@(#)yaccpar 1.8 (Berkeley) 01/20/91";
+/* static char yysccsid[] = "@@(#)yaccpar 1.8 (Berkeley) 01/20/91"; */
 #endif
 #define YYBYACC 1
 #line 16 "perly.y"
@@@@ -9,7 +9,7 @@@@
 #ifdef EBCDIC
 #undef YYDEBUG
 #endif
-#define dep() deprecate("\"do\" to call subroutines")
+#define dep() deprecate_old("\"do\" to call subroutines")
 
 /* stuff included here to make perly_c.diff apply better */
 
@@@@ -50,70 +50,9 @@@@
 #define yylex yylex_r
 #endif
 
-#line 54 "y.tab.c"
-#define WORD 257
-#define METHOD 258
-#define FUNCMETH 259
-#define THING 260
-#define PMFUNC 261
-#define PRIVATEREF 262
-#define FUNC0SUB 263
-#define UNIOPSUB 264
-#define LSTOPSUB 265
-#define LABEL 266
-#define FORMAT 267
-#define SUB 268
-#define ANONSUB 269
-#define PACKAGE 270
-#define USE 271
-#define WHILE 272
-#define UNTIL 273
-#define IF 274
-#define UNLESS 275
-#define ELSE 276
-#define ELSIF 277
-#define CONTINUE 278
-#define FOR 279
-#define LOOPEX 280
-#define DOTDOT 281
-#define FUNC0 282
-#define FUNC1 283
-#define FUNC 284
-#define UNIOP 285
-#define LSTOP 286
-#define RELOP 287
-#define EQOP 288
-#define MULOP 289
-#define ADDOP 290
-#define DOLSHARP 291
-#define DO 292
-#define HASHBRACK 293
-#define NOAMP 294
-#define LOCAL 295
-#define MY 296
-#define MYSUB 297
-#define COLONATTR 298
-#define PREC_LOW 299
-#define OROP 300
-#define ANDOP 301
-#define NOTOP 302
-#define ASSIGNOP 303
-#define OROR 304
-#define ANDAND 305
-#define BITOROP 306
-#define BITANDOP 307
-#define SHIFTOP 308
-#define MATCHOP 309
-#define UMINUS 310
-#define REFGEN 311
-#define POWOP 312
-#define PREINC 313
-#define PREDEC 314
-#define POSTINC 315
-#define POSTDEC 316
-#define ARROW 317
+#line 54 "perly.c"
 #define YYERRCODE 256
-short yylhs[] = {                                        -1,
+static short yylhs[] = {                                        -1,
     0,    9,    7,    6,   10,    8,   11,   11,   11,   12,
    12,   12,   12,   25,   25,   25,   25,   25,   25,   25,
    15,   15,   15,   14,   14,   43,   43,   13,   13,   13,
@@@@ -135,7 +74,7 @@@@
    49,   34,   34,   35,   35,   35,   44,   24,   19,   20,
    21,   22,   23,   36,   36,   36,   36,
 };
-short yylen[] = {                                         2,
+static short yylen[] = {                                         2,
     2,    4,    0,    0,    4,    0,    0,    2,    2,    2,
     1,    2,    3,    1,    1,    3,    3,    3,    3,    3,
     0,    2,    6,    7,    7,    0,    2,    8,    8,   10,
@@@@ -157,7 +96,7 @@@@
     1,    0,    1,    0,    1,    2,    1,    2,    2,    2,
     2,    2,    2,    1,    1,    1,    1,
 };
-short yydefred[] = {                                      4,
+static short yydefred[] = {                                      4,
     0,    7,    0,   45,   58,   56,    0,   56,   56,    8,
    46,    9,   11,   48,    0,   47,   49,   50,    0,    0,
     0,   70,   71,    0,   14,    3,  173,    0,    0,  154,
@@@@ -199,7 +138,7 @@@@
     0,   22,    0,    0,    0,   31,    5,    0,   30,    0,
     0,   33,    0,   23,
 };
-short yydgoto[] = {                                       1,
+static short yydgoto[] = {                                       1,
    10,   11,   20,  104,   19,    2,   95,  370,   98,  359,
     3,   12,   13,   70,  375,  285,   72,   73,   74,   75,
    76,   77,   78,   79,  291,   81,  292,  281,  283,  286,
@@@@ -207,7 +146,7 @@@@
   194,  327,  156,  289,  271,  225,   14,   83,  137,   84,
    85,   86,   87,   15,   16,   17,   18,   93,  278,
 };
-short yysindex[] = {                                      0,
+static short yysindex[] = {                                      0,
     0,    0, -132,    0,    0,    0,  -51,    0,    0,    0,
     0,    0,    0,    0,  650,    0,    0,    0, -239, -215,
     5,    0,    0, -215,    0,    0,    0,  -31,  -31,    0,
@@@@ -249,7 +188,7 @@@@
   449,    0, 2181, -150,  340,    0,    0,  355,    0,  216,
   216,    0, -123,    0,
 };
-short yyrindex[] = {                                      0,
+static short yyrindex[] = {                                      0,
     0,    0,  247,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,    0,    0,  274,    0,
     0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
@@@@ -291,7 +230,7 @@@@
   917,    0,    0,  119,    0,    0,    0,    0,    0,    0,
     0,    0,  179,    0,
 };
-short yygindex[] = {                                      0,
+static short yygindex[] = {                                      0,
     0,    0,  196,  425,    0,    0,   -2,    0,   37,  634,
   -94,    0,    0,    0, -323,  -15, 2445,    0,  999,  414,
   417,    0,    0,    0,  463,  -43,    0,    0,  321, -198,
@@@@ -300,7 +239,7 @@@@
     0,    0,    0,    0,    0,    0,    0,    0,    0,
 };
 #define YYTABLESIZE 4568
-short yytable[] = {                                      71,
+static short yytable[] = {                                      71,
   197,   65,  121,  227,   65,  111,  220,   22,  198,  293,
   139,  296,  315,  275,  305,  102,  273,   88,  113,  228,
    60,  113,  279,   65,  317,   60,  182,  254,  325,  101,
@@@@ -759,7 +698,7 @@@@
     0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
     0,    0,    0,    0,    0,    0,   77,   77,
 };
-short yycheck[] = {                                      15,
+static short yycheck[] = {                                      15,
    95,   36,   46,   41,   36,   40,   59,   59,  100,  208,
    54,   41,   59,  199,   41,   40,  196,  257,   41,   93,
   123,   44,  202,   36,   93,   59,   40,   40,   59,   29,
@@@@ -1224,7 +1163,7 @@@@
 #endif
 #define YYMAXTOKEN 317
 #if YYDEBUG
-char *yyname[] = {
+static char *yyname[] = {
 "end-of-file",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
 "'!'",0,0,"'$'","'%'","'&'",0,"'('","')'","'*'","'+'","','","'-'",0,0,0,0,0,0,0,
 0,0,0,0,0,"':'","';'",0,0,0,"'?'","'@@'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
@@@@ -1241,7 +1180,7 @@@@
 "ANDAND","BITOROP","BITANDOP","SHIFTOP","MATCHOP","UMINUS","REFGEN","POWOP",
 "PREINC","PREDEC","POSTINC","POSTDEC","ARROW",
 };
-char *yyrule[] = {
+static char *yyrule[] = {
 "$accept : prog",
 "prog : progstart lineseq",
 "block : '{' remember lineseq '}'",
@@@@ -1456,17 +1395,6 @@@@
 #define YYMAXDEPTH 500
 #endif
 #endif
-int yydebug;
-int yynerrs;
-int yyerrflag;
-int yychar;
-short *yyssp;
-YYSTYPE *yyvsp;
-YYSTYPE yyval;
-YYSTYPE yylval;
-short yyss[YYSTACKSIZE];
-YYSTYPE yyvs[YYSTACKSIZE];
-#define yystacksize YYSTACKSIZE
 #line 794 "perly.y"
  /* PROGRAM */
 
@@@@ -1477,7 +1405,7 @@@@
 #endif
 #define yyparse() Perl_yyparse(pTHX)
 
-#line 1481 "y.tab.c"
+#line 1409 "perly.c"
 #define YYABORT goto yyabort
 #define YYACCEPT goto yyaccept
 #define YYERROR goto yyerrlab
@@@@ -1485,11 +1413,31 @@@@
 yyparse()
 {
     register int yym, yyn, yystate;
+    register short *yyssp;
+    register YYSTYPE *yyvsp;
+    short* yyss;
+    YYSTYPE* yyvs;
+    unsigned yystacksize = YYSTACKSIZE;
+    int retval = 0;
 #if YYDEBUG
     register char *yys;
-    extern char *getenv();
+#endif
+
+    struct ysv *ysave;
+#ifdef USE_ITHREADS
+    ENTER;			/* force yydestruct() before we return */
+#endif
+    New(73, ysave, 1, struct ysv);
+    SAVEDESTRUCTOR_X(yydestruct, ysave);
+    ysave->oldyydebug	= yydebug;
+    ysave->oldyynerrs	= yynerrs;
+    ysave->oldyyerrflag	= yyerrflag;
+    ysave->oldyychar	= yychar;
+    ysave->oldyyval	= yyval;
+    ysave->oldyylval	= yylval;
 
-    if (yys = getenv("YYDEBUG"))
+#if YYDEBUG
+    if ((yys = getenv("YYDEBUG")))
     {
         yyn = *yys;
         if (yyn >= '0' && yyn <= '9')
@@@@ -1501,12 +1449,22 @@@@
     yyerrflag = 0;
     yychar = (-1);
 
+    /*
+    ** Initialize private stacks (yyparse may be called from an action)
+    */
+    New(73, yyss, yystacksize, short);
+    New(73, yyvs, yystacksize, YYSTYPE);
+    ysave->yyss = yyss;
+    ysave->yyvs = yyvs;
+    if (!yyvs || !yyss)
+	goto yyoverflow;
+
     yyssp = yyss;
     yyvsp = yyvs;
     *yyssp = yystate = 0;
 
 yyloop:
-    if (yyn = yydefred[yystate]) goto yyreduce;
+    if ((yyn = yydefred[yystate])) goto yyreduce;
     if (yychar < 0)
     {
         if ((yychar = yylex()) < 0) yychar = 0;
@@@@ -1516,7 +1474,7 @@@@
             yys = 0;
             if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
             if (!yys) yys = "illegal-symbol";
-            printf("yydebug: state %d, reading %d (%s)\n", yystate,
+            PerlIO_printf(Perl_debug_log, "yydebug: state %d, reading %d (%s)\n", yystate,
                     yychar, yys);
         }
 #endif
@@@@ -1526,12 +1484,24 @@@@
     {
 #if YYDEBUG
         if (yydebug)
-            printf("yydebug: state %d, shifting to state %d\n",
+            PerlIO_printf(Perl_debug_log, "yydebug: state %d, shifting to state %d\n",
                     yystate, yytable[yyn]);
 #endif
         if (yyssp >= yyss + yystacksize - 1)
         {
+	    /*
+	    ** reallocate and recover.  Note that pointers
+	    ** have to be reset, or bad things will happen
+	    */
+	    int yyps_index = (yyssp - yyss);
+	    int yypv_index = (yyvsp - yyvs);
+	    yystacksize += YYSTACKSIZE;
+	    ysave->yyvs = Renew(yyvs, yystacksize, YYSTYPE);
+	    ysave->yyss = Renew(yyss, yystacksize, short);
+	    if (!yyvs || !yyss)
             goto yyoverflow;
+	    yyssp = yyss + yyps_index;
+	    yyvsp = yyvs + yypv_index;
         }
         *++yyssp = yystate = yytable[yyn];
         *++yyvsp = yylval;
@@@@ -1547,14 +1517,14 @@@@
     }
     if (yyerrflag) goto yyinrecovery;
 #ifdef lint
-    goto yynewerror;
+
 #endif
-yynewerror:
+
     yyerror("syntax error");
 #ifdef lint
-    goto yyerrlab;
+
 #endif
-yyerrlab:
+
     ++yynerrs;
 yyinrecovery:
     if (yyerrflag < 3)
@@@@ -1567,12 +1537,24 @@@@
             {
 #if YYDEBUG
                 if (yydebug)
-                    printf("yydebug: state %d, error recovery shifting\
+                    PerlIO_printf(Perl_debug_log, "yydebug: state %d, error recovery shifting\
  to state %d\n", *yyssp, yytable[yyn]);
 #endif
                 if (yyssp >= yyss + yystacksize - 1)
                 {
+		    /*
+		    ** reallocate and recover.  Note that pointers
+		    ** have to be reset, or bad things will happen
+		    */
+		    int yyps_index = (yyssp - yyss);
+		    int yypv_index = (yyvsp - yyvs);
+		    yystacksize += YYSTACKSIZE;
+		    ysave->yyvs = Renew(yyvs, yystacksize, YYSTYPE);
+		    ysave->yyss = Renew(yyss, yystacksize, short);
+		    if (!yyvs || !yyss)
                     goto yyoverflow;
+		    yyssp = yyss + yyps_index;
+		    yyvsp = yyvs + yypv_index;
                 }
                 *++yyssp = yystate = yytable[yyn];
                 *++yyvsp = yylval;
@@@@ -1582,7 +1564,7 @@@@
             {
 #if YYDEBUG
                 if (yydebug)
-                    printf("yydebug: error recovery discarding state %d\n",
+                    PerlIO_printf(Perl_debug_log, "yydebug: error recovery discarding state %d\n",
                             *yyssp);
 #endif
                 if (yyssp <= yyss) goto yyabort;
@@@@ -1600,7 +1582,7 @@@@
             yys = 0;
             if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
             if (!yys) yys = "illegal-symbol";
-            printf("yydebug: state %d, error recovery discards token %d (%s)\n",
+            PerlIO_printf(Perl_debug_log, "yydebug: state %d, error recovery discards token %d (%s)\n",
                     yystate, yychar, yys);
         }
 #endif
@@@@ -1610,7 +1592,7 @@@@
 yyreduce:
 #if YYDEBUG
     if (yydebug)
-        printf("yydebug: state %d, reducing by rule %d (%s)\n",
+        PerlIO_printf(Perl_debug_log, "yydebug: state %d, reducing by rule %d (%s)\n",
                 yystate, yyn, yyrule[yyn]);
 #endif
     yym = yylen[yyn];
@@@@ -2474,7 +2456,7 @@@@
 #line 791 "perly.y"
 { yyval.opval = yyvsp[0].opval; }
 break;
-#line 2478 "y.tab.c"
+#line 2460 "perly.c"
     }
     yyssp -= yym;
     yystate = *yyssp;
@@@@ -2484,7 +2466,7 @@@@
     {
 #if YYDEBUG
         if (yydebug)
-            printf("yydebug: after reduction, shifting from state 0 to\
+            PerlIO_printf(Perl_debug_log, "yydebug: after reduction, shifting from state 0 to\
  state %d\n", YYFINAL);
 #endif
         yystate = YYFINAL;
@@@@ -2499,7 +2481,7 @@@@
                 yys = 0;
                 if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
                 if (!yys) yys = "illegal-symbol";
-                printf("yydebug: state %d, reading %d (%s)\n",
+                PerlIO_printf(Perl_debug_log, "yydebug: state %d, reading %d (%s)\n",
                         YYFINAL, yychar, yys);
             }
 #endif
@@@@ -2514,20 +2496,50 @@@@
         yystate = yydgoto[yym];
 #if YYDEBUG
     if (yydebug)
-        printf("yydebug: after reduction, shifting from state %d \
+        PerlIO_printf(Perl_debug_log, "yydebug: after reduction, shifting from state %d \
 to state %d\n", *yyssp, yystate);
 #endif
     if (yyssp >= yyss + yystacksize - 1)
     {
+	/*
+	** reallocate and recover.  Note that pointers
+	** have to be reset, or bad things will happen
+	*/
+	int yyps_index = (yyssp - yyss);
+	int yypv_index = (yyvsp - yyvs);
+	yystacksize += YYSTACKSIZE;
+	ysave->yyvs = Renew(yyvs, yystacksize, YYSTYPE);
+	ysave->yyss = Renew(yyss, yystacksize, short);
+	if (!yyvs || !yyss)
         goto yyoverflow;
+	yyssp = yyss + yyps_index;
+	yyvsp = yyvs + yypv_index;
     }
     *++yyssp = yystate;
     *++yyvsp = yyval;
     goto yyloop;
 yyoverflow:
-    yyerror("yacc stack overflow");
+    yyerror("Out of memory for yacc stack");
 yyabort:
-    return (1);
+    retval = 1;
 yyaccept:
-    return (0);
+#ifdef USE_ITHREADS
+    LEAVE;			/* force yydestruct() before we return */
+#endif
+    return retval;
+}
+
+static void
+yydestruct(pTHX_ void *ptr)
+{
+    struct ysv* ysave = (struct ysv*)ptr;
+    if (ysave->yyss) Safefree(ysave->yyss);
+    if (ysave->yyvs) Safefree(ysave->yyvs);
+    yydebug	= ysave->oldyydebug;
+    yynerrs	= ysave->oldyynerrs;
+    yyerrflag	= ysave->oldyyerrflag;
+    yychar	= ysave->oldyychar;
+    yyval	= ysave->oldyyval;
+    yylval	= ysave->oldyylval;
+    Safefree(ysave);
 }
@


1.1.1.6
log
@perl 5.8.8 import
@
text
@d1 2
a2 2
--- perly.c.orig	Thu Apr  7 10:51:31 2005
+++ perly.c	Thu Apr  7 10:54:13 2005
d9 1
a9 1
 #line 25 "perly.y"
d197 1
a197 1
 #line 804 "perly.y"
d374 10
a383 1
@@@@ -2485,7 +2467,7 @@@@
d392 1
a392 1
@@@@ -2500,7 +2482,7 @@@@
d401 1
a401 1
@@@@ -2515,20 +2497,50 @@@@
@


