head	1.7;
access;
symbols
	OPENBSD_5_3:1.6.0.18
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.16
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.14
	OPENBSD_5_0:1.6.0.12
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.10
	OPENBSD_4_9_BASE:1.6
	PERL_5_12_2:1.1.1.6
	OPENBSD_4_8:1.6.0.8
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.4
	OPENBSD_4_7_BASE:1.6
	PERL_5_10_1:1.1.1.6
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	PERL_5_10_0:1.1.1.6
	OPENBSD_4_4:1.5.0.10
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.8
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	PERL_5_8_8:1.1.1.5
	OPENBSD_3_9:1.4.0.14
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.12
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.10
	OPENBSD_3_7_BASE:1.4
	PERL_5_8_6:1.1.1.4
	OPENBSD_3_6:1.4.0.8
	OPENBSD_3_6_BASE:1.4
	PERL_5_8_5:1.1.1.4
	PERL_5_8_3:1.1.1.4
	OPENBSD_3_5:1.4.0.6
	OPENBSD_3_5_BASE:1.4
	PERL_5_8_2:1.1.1.4
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	PERL_5_8_0:1.1.1.4
	OPENBSD_3_2:1.3.0.12
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.10
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.8
	OPENBSD_3_0_BASE:1.3
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.7
date	2013.03.25.20.40.45;	author sthen;	state dead;
branches;
next	1.6;

1.6
date	2008.09.29.17.36.00;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2006.03.28.19.23.00;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.27.22.25.19;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.06.17.04.32;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.49.26;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.11.52;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.11.52;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.38.10;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.08.51;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.10.27.22.14.52;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2006.03.28.18.47.49;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2008.09.29.17.18.11;	author millert;	state Exp;
branches;
next	;


desc
@@


1.7
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@case $PERL_CONFIG_SH in
'')
	if test -f config.sh; then TOP=.;
	elif test -f ../config.sh; then TOP=..;
	elif test -f ../../config.sh; then TOP=../..;
	elif test -f ../../../config.sh; then TOP=../../..;
	elif test -f ../../../../config.sh; then TOP=../../../..;
	else
		echo "Can't find config.sh."; exit 1
	fi
	. $TOP/config.sh
	;;
esac
: This forces SH files to create target in same directory as SH file.
: This is so that make depend always knows where to find SH derivatives.
case "$0" in
*/*) cd `expr X$0 : 'X\(.*\)/'` ;;
esac
echo "Extracting writemain (with variable substitutions)"
: This section of the file will have variable substitutions done on it.
: Move anything that needs config subs from !NO!SUBS! section to !GROK!THIS!.
: Protect any dollar signs and backticks that you do not want interpreted
: by putting a backslash in front.  You may delete these comments.
rm -f writemain
$spitshell >writemain <<!GROK!THIS!
$startsh
!GROK!THIS!

: In the following dollars and backticks do not need the extra backslash.
$spitshell >>writemain <<'!NO!SUBS!'
# This script takes the plain miniperlmain.c and writes out perlmain.c
# which includes all the extensions.
# The command line arguments name extensions to be used.
#  E.g.:  sh writemain SDBM_File POSIX > perlmain.c
#

orig="$*"
args=''
: Remove any .a suffixes and any leading path components
for file in $orig ; do
        case "$file" in
           *.a)  file=`echo $file | sed 's/\.a//g'`;;
           *.o)  file=`echo $file | sed 's/\.o//g'`;;
        esac
	case "$file" in
	ext/*)	file=`echo $file | sed 's:ext/\(.*\)/[^/]*:\1:'`
		;;
	lib/auto/*)	file=`echo $file | sed 's:lib/auto/\(.*\)/[^/]*:\1:'`
		;;
	*/*)
		file=`expr X$file : 'X.*/\(.*\)'`
		;;
	esac
	args="$args $file"
done


sed '/Do not delete this line--writemain depends on it/q' miniperlmain.c


if test X"$args" != "X" ; then
    for ext in $args ; do
: $ext will either be 'Name' or 'Name1/Name2' etc
: convert ext into cname and mname
mname=`echo $ext   | sed 's!/!::!g'`
cname=`echo $mname | sed 's!:!_!g'`

echo "EXTERN_C void boot_${cname} (pTHX_ CV* cv);"
    done
fi

cat << 'EOP'

static void
xs_init(pTHX)
{
EOP

if test X"$args" != "X" ; then
    echo "    static const char file[] = __FILE__;"
    echo "    dXSUB_SYS;"

    ai=''

    for ext in $args ; do

	: $ext will either be 'Name' or 'Name1/Name2' etc
	: convert ext into cname and mname
	mname=`echo $ext   | sed 's!/!::!g'`
	cname=`echo $mname | sed 's!:!_!g'`

	if test "$ext" = "DynaLoader"; then
	    : Must NOT install 'DynaLoader::boot_DynaLoader' as 'bootstrap'!
	    : boot_DynaLoader is called directly in DynaLoader.pm
	    echo "        newXS(\"${mname}::boot_${ext}\", boot_${cname}, file);"
	else
	    echo "        newXS(\"${mname}::bootstrap\", boot_${cname}, file);"
	fi
    done
fi

cat << 'EOP'
}
EOP

!NO!SUBS!
chmod 755 writemain
$eunicefix writemain
@


1.6
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@@


1.5
log
@merge in perl 5.8.8
@
text
@d42 2
a43 2
           *.a)  file=`echo $file | sed 's/\.a//g'`
                 ;;
d80 1
a80 1
    echo "    const char file[] = __FILE__;"
d95 1
a95 1
	    echo "        newXS(\"${mname}::boot_${ext}\", boot_${cname}, (char *)file);"
d97 1
a97 1
	    echo "        newXS(\"${mname}::bootstrap\", boot_${cname}, (char *)file);"
@


1.4
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d80 1
a80 1
    echo "    char *file = __FILE__;"
d95 1
a95 1
	    echo "        newXS(\"${mname}::boot_${ext}\", boot_${cname}, file);"
d97 1
a97 1
	    echo "        newXS(\"${mname}::bootstrap\", boot_${cname}, file);"
@


1.3
log
@perl-5.6.0 + local changes
@
text
@d1 1
a1 1
case $CONFIGDOTSH in
@


1.2
log
@perl 5.004_04
@
text
@d1 1
a1 1
case $CONFIG in
d40 5
a44 1
for file in `echo $orig | sed 's/\.a//g'` ; do
d68 1
a68 1
echo "EXTERN_C void boot_${cname} _((CV* cv));"
d75 1
a75 1
xs_init()
@


1.1
log
@Initial revision
@
text
@d24 1
a72 1
  dXSUB_SYS;
d77 2
a87 1
	echo "    {"
a94 1
	echo "    }"
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@a23 1
rm -f writemain
d72 1
a76 2
    echo "    dXSUB_SYS;"

d86 1
d94 1
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d1 1
a1 1
case $CONFIGDOTSH in
d40 1
a40 5
for file in $orig ; do
        case "$file" in
           *.a)  file=`echo $file | sed 's/\.a//g'`
                 ;;
        esac
d64 1
a64 1
echo "EXTERN_C void boot_${cname} (pTHX_ CV* cv);"
d71 1
a71 1
xs_init(pTHX)
@


1.1.1.4
log
@stock perl 5.8.0 from CPAN
@
text
@d1 1
a1 1
case $PERL_CONFIG_SH in
@


1.1.1.5
log
@perl 5.8.8 import
@
text
@d80 1
a80 1
    echo "    const char file[] = __FILE__;"
d95 1
a95 1
	    echo "        newXS(\"${mname}::boot_${ext}\", boot_${cname}, (char *)file);"
d97 1
a97 1
	    echo "        newXS(\"${mname}::bootstrap\", boot_${cname}, (char *)file);"
@


1.1.1.6
log
@import perl 5.10.0 from CPAN
@
text
@d42 2
a43 2
           *.a)  file=`echo $file | sed 's/\.a//g'`;;
           *.o)  file=`echo $file | sed 's/\.o//g'`;;
d80 1
a80 1
    echo "    static const char file[] = __FILE__;"
d95 1
a95 1
	    echo "        newXS(\"${mname}::boot_${ext}\", boot_${cname}, file);"
d97 1
a97 1
	    echo "        newXS(\"${mname}::bootstrap\", boot_${cname}, file);"
@


