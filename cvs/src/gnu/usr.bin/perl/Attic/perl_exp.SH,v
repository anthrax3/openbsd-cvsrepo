head	1.4;
access;
symbols
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2000.04.06.17.04.10;	author millert;	state dead;
branches;
next	1.3;

1.3
date	99.04.29.22.51.05;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.48.57;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.11.45;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.11.45;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.37.34;	author millert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@perl-5.6.0 + local changes
@
text
@#!/bin/sh
#
# Written: Nov 1994 Wayne Scott <wscott@@ichips.intel.com>
#
# Updated: 1997-8 Jarkko Hietaniemi <jhi@@iki.fi>
#
# Create the export list for perl.
# Needed by AIX to do dynamic linking.
#
# This simple program relies on 'global.sym' and few other *.sym files
# and the *var*.h files being up to date with all of the global
# symbols that a dynamic link library might want to access.
#
# Most symbols have a Perl_ or PL_prefix because that's what embed.h
# sticks in front of them.
#
# AIX requires the list of external symbols (variables or functions)
# that are made available for another executable object file the import.
# The list is called the export file and it is a simple text file.
# The first line must be
#!
# That is, hash-bang, pound-shout, however you want to call it.
# The remainder of the file are the names of the symbols, one per line.
# The file is then given to the system loader (cc/xlc command line)
# as -bE:export.file.

case $CONFIG in
'')
	if test -f config.sh; then TOP=.;
	elif test -f ../config.sh; then TOP=..;
	elif test -f ../../config.sh; then TOP=../..;
	elif test -f ../../../config.sh; then TOP=../../..;
	elif test -f ../../../../config.sh; then TOP=../../../..;
	else
		echo "Can't find config.sh."; exit 1
	fi
	. $TOP/config.sh
	;;
esac
: This forces SH files to create target in same directory as SH file.
: This is so that make depend always knows where to find SH derivatives.
case "$0" in
*/*) cd `expr X$0 : 'X\(.*\)/'` ;;
esac

echo "Extracting perl.exp"

rm -f perl.exp
echo "#!" > perl.exp

# No compat3 since 5.004_50.
# No interp.sym since 5.005_03.
# perlio.sym will added later if needed.

syms="global.sym thread.sym"

sed -n '/^[A-Za-z]/ s/^/Perl_/p' $syms                 >> perl.exp

sed -n 's/^PERLVAR.*(G\([^[,]*\).*/PL_\1/p' perlvars.h >> perl.exp
sed -n 's/^PERLVAR.*(I\([^[,]*\).*/PL_\1/p' intrpvar.h >> perl.exp
sed -n 's/^PERLVAR.*(T\([^[,]*\).*/PL_\1/p' thrdvar.h  >> perl.exp

# 
# If we use the PerlIO abstraction layer, add its symbols.
#

if [ $useperlio = "define" ]
then
	grep '^[A-Za-z]' perlio.sym >> perl.exp
fi

#
# Extra globals not included above (including a few that might
# not actually be defined, but there's no harm in that).
#

cat >> perl.exp <<END
perl_init_i18nl10n
perl_init_i18nl14n
perl_new_collate
perl_new_ctype
perl_new_numeric
perl_set_numeric_local
perl_set_numeric_standard
perl_alloc
perl_construct
perl_destruct
perl_free
perl_parse
perl_run
perl_get_sv
perl_get_av
perl_get_hv
perl_get_cv
perl_call_argv
perl_call_pv
perl_call_method
perl_call_sv
perl_eval_pv
perl_eval_sv
perl_require_pv
cast_i32
cast_iv
cast_uv
END

case "$ccflags" in
*-DHIDEMYMALLOC*)
  cat >>perl.exp <<END
Mymalloc
Mycalloc
Myremalloc
Myfree
END
  ;;
esac

case "$ccflags" in
*-DEMBEDMYMALLOC*)
  cat >>perl.exp <<END
Perl_malloc
Perl_calloc
Perl_realloc
Perl_free
END
  ;;
esac

# The shebang line nicely sorts as the first one.
sort -o perl.exp -u perl.exp

# eof
@


1.3
log
@perl5.005_03 (stock)
@
text
@@


1.2
log
@perl 5.004_04
@
text
@d3 3
a5 1
# Written: Nov 1994 Wayne Scott (wscott@@ichips.intel.com)
d10 16
a25 8
# This simple program relys on 'global.sym' and other *.sym files
# being up to date with all of the global symbols that a dynamic
# link library might want to access.
#
# Most symbols have a Perl_ prefix because that's what embed.h sticks
# in front of them.  Variations depend on binary compatibility with
# Perl 5.003.
#
d51 11
a61 18
case "$bincompat3" in
y*)
	global=/tmp/exp$$g
	interp=/tmp/exp$$i
	compat3=/tmp/exp$$c
	grep '^[A-Za-z]' global.sym | sort >$global
	grep '^[A-Za-z]' interp.sym | sort >$interp
	grep '^[A-Za-z]' compat3.sym | sort >$compat3
	comm -23 $global $compat3 | sed 's/^/Perl_/' >> perl.exp
	comm -12 $interp $compat3 | sed 's/^/Perl_/' >> perl.exp
	comm -12 $global $compat3 >> perl.exp
	comm -23 $interp $compat3 >> perl.exp
	rm -f $global $interp $compat3
	;;
*)
	sed -n '/^[A-Za-z]/ s/^/Perl_/p' global.sym interp.sym >> perl.exp
	;;
esac
d64 1
a64 1
# If we use the PerlIO abstraction layer, add its symbols
d77 1
a77 1
cat <<END >> perl.exp
d102 8
d114 7
d126 7
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1

d4 1
a4 1

d7 28
a34 7

# This simple program relys on 'global.sym' being up to date
# with all of the global symbols that a dynamicly link library
# might want to access.

# All symbols have a Perl_ prefix because that's what embed.h
# sticks in front of them.
d38 1
d41 32
a72 6
sed -n '/^[A-Za-z]/ s/^/Perl_/p' global.sym >> perl.exp

# also add symbols from interp.sym
# They are only needed if -DMULTIPLICITY is not set but it
# doesn't hurt to include them anyway.
sed -n '/^[A-Za-z]/ p' interp.sym >> perl.exp
a73 1
# extra globals not included above.
d75 1
d77 5
a81 1
perl_init_ext
d96 11
a106 4
perl_requirepv
safemalloc
saferealloc
safefree
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d2 3
a4 5
#
# Written: Nov 1994 Wayne Scott <wscott@@ichips.intel.com>
#
# Updated: 1997-8 Jarkko Hietaniemi <jhi@@iki.fi>
#
d7 6
a12 6
#
# This simple program relies on 'global.sym' and few other *.sym files
# and the *var*.h files being up to date with all of the global
# symbols that a dynamic link library might want to access.
#
# Most symbols have a Perl_ or PL_prefix because that's what embed.h
a13 29
#
# AIX requires the list of external symbols (variables or functions)
# that are made available for another executable object file the import.
# The list is called the export file and it is a simple text file.
# The first line must be
#!
# That is, hash-bang, pound-shout, however you want to call it.
# The remainder of the file are the names of the symbols, one per line.
# The file is then given to the system loader (cc/xlc command line)
# as -bE:export.file.

case $CONFIG in
'')
	if test -f config.sh; then TOP=.;
	elif test -f ../config.sh; then TOP=..;
	elif test -f ../../config.sh; then TOP=../..;
	elif test -f ../../../config.sh; then TOP=../../..;
	elif test -f ../../../../config.sh; then TOP=../../../..;
	else
		echo "Can't find config.sh."; exit 1
	fi
	. $TOP/config.sh
	;;
esac
: This forces SH files to create target in same directory as SH file.
: This is so that make depend always knows where to find SH derivatives.
case "$0" in
*/*) cd `expr X$0 : 'X\(.*\)/'` ;;
esac
a16 1
rm -f perl.exp
d19 6
a24 25
# No compat3 since 5.004_50.
# No interp.sym since 5.005_03.
# perlio.sym will added later if needed.

syms="global.sym thread.sym"

sed -n '/^[A-Za-z]/ s/^/Perl_/p' $syms                 >> perl.exp

sed -n 's/^PERLVAR.*(G\([^[,]*\).*/PL_\1/p' perlvars.h >> perl.exp
sed -n 's/^PERLVAR.*(I\([^[,]*\).*/PL_\1/p' intrpvar.h >> perl.exp
sed -n 's/^PERLVAR.*(T\([^[,]*\).*/PL_\1/p' thrdvar.h  >> perl.exp

# 
# If we use the PerlIO abstraction layer, add its symbols.
#

if [ $useperlio = "define" ]
then
	grep '^[A-Za-z]' perlio.sym >> perl.exp
fi

#
# Extra globals not included above (including a few that might
# not actually be defined, but there's no harm in that).
#
d26 2
a27 2
cat >> perl.exp <<END
perl_init_i18nl10n
d29 1
a29 5
perl_new_collate
perl_new_ctype
perl_new_numeric
perl_set_numeric_local
perl_set_numeric_standard
d44 4
a47 6
perl_eval_pv
perl_eval_sv
perl_require_pv
cast_i32
cast_iv
cast_uv
a48 27

case "$ccflags" in
*-DHIDEMYMALLOC*)
  cat >>perl.exp <<END
Mymalloc
Mycalloc
Myremalloc
Myfree
END
  ;;
esac

case "$ccflags" in
*-DEMBEDMYMALLOC*)
  cat >>perl.exp <<END
Perl_malloc
Perl_calloc
Perl_realloc
Perl_free
END
  ;;
esac

# The shebang line nicely sorts as the first one.
sort -o perl.exp -u perl.exp

# eof
@

