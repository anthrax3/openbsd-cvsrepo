head	1.9;
access;
symbols
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	PERL_5_18_2:1.1.1.8
	PERL:1.1.1
	OPENBSD_5_5:1.7.0.20
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.16
	OPENBSD_5_4_BASE:1.7
	PERL_5_16_3:1.1.1.7
	OPENBSD_5_3:1.7.0.14
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.12
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	PERL_5_12_2:1.1.1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	PERL_5_10_1:1.1.1.7
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	PERL_5_10_0:1.1.1.6
	OPENBSD_4_4:1.5.0.10
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.8
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	PERL_5_8_8:1.1.1.5
	OPENBSD_3_9:1.4.0.20
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.18
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.16
	OPENBSD_3_7_BASE:1.4
	PERL_5_8_6:1.1.1.4
	OPENBSD_3_6:1.4.0.14
	OPENBSD_3_6_BASE:1.4
	PERL_5_8_5:1.1.1.4
	PERL_5_8_3:1.1.1.4
	OPENBSD_3_5:1.4.0.12
	OPENBSD_3_5_BASE:1.4
	PERL_5_8_2:1.1.1.4
	OPENBSD_3_4:1.4.0.10
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.8
	OPENBSD_3_3_BASE:1.4
	PERL_5_8_0:1.1.1.4
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	PERL_5_6_1:1.1.1.4
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.9
date	2014.11.17.20.56.47;	author afresh1;	state dead;
branches;
next	1.8;
commitid	QP75iYx42Uo7mMxO;

1.8
date	2014.03.24.15.05.13;	author afresh1;	state Exp;
branches;
next	1.7;

1.7
date	2009.10.12.18.24.21;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2008.09.29.17.35.57;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2006.03.28.19.22.57;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.24.18.34.51;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.06.17.04.03;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.48.45;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.11.43;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.11.43;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.37.27;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.08.39;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2001.05.24.18.22.07;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2006.03.28.18.47.30;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2008.09.29.17.18.06;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2009.10.12.18.10.34;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2014.03.24.14.58.45;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@#./miniperl -w
# minimod.pl writes the contents of miniperlmain.c into the module
# ExtUtils::Miniperl for later perusal (when the perl source is
# deleted)
#
# It also writes the subroutine writemain(), which takes as its
# arguments module names that shall be statically linked into perl.
#
# Authors: Andreas Koenig <k@@franz.ww.TU-Berlin.DE>, Tim Bunce
#          <Tim.Bunce@@ig.co.uk>
#
# Version 1.0, Feb 2nd 1995 by Andreas Koenig

BEGIN { unshift @@INC, "lib" }

use strict;

print <<'END';
# This File keeps the contents of miniperlmain.c.
#
# It was generated automatically by minimod.PL from the contents
# of miniperlmain.c. Don't edit this file!
#
#       ANY CHANGES MADE HERE WILL BE LOST! 
#


package ExtUtils::Miniperl;
require Exporter;
@@ISA = qw(Exporter);
@@EXPORT = qw(&writemain);

$head= <<'EOF!HEAD';
END

open MINI, "miniperlmain.c";
while (<MINI>) {
    last if /Do not delete this line--writemain depends on it/;
    print;
    /#include "perl.h"/ and print qq/#include "XSUB.h"\n/;
}

print <<'END';
EOF!HEAD
$tail=<<'EOF!TAIL';
END

while (<MINI>) {
    print unless /dXSUB_SYS/;
}
close MINI;

print <<'END';
EOF!TAIL

sub writemain{
    my(@@exts) = @@_;

    my($pname);
    my($dl) = canon('/','DynaLoader');
    print $head;

    foreach $_ (@@exts){
	my($pname) = canon('/', $_);
	my($mname, $cname);
	($mname = $pname) =~ s!/!::!g;
	($cname = $pname) =~ s!/!__!g;
        print "EXTERN_C void boot_${cname} (pTHX_ CV* cv);\n";
    }

    my ($tail1,$tail2,$tail3) = ( $tail =~ /\A(.*{\s*\n)(.*\n)(\s*\}.*)\Z/s );

    print $tail1;
    print "\tstatic const char file[] = __FILE__;\n";
    print "\tdXSUB_SYS;\n" if $] > 5.002;
    print $tail2;

    foreach $_ (@@exts){
	my($pname) = canon('/', $_);
	my($mname, $cname, $ccode);
	($mname = $pname) =~ s!/!::!g;
	($cname = $pname) =~ s!/!__!g;
	print "\t{\n";
	if ($pname eq $dl){
	    # Must NOT install 'DynaLoader::boot_DynaLoader' as 'bootstrap'!
	    # boot_DynaLoader is called directly in DynaLoader.pm
	    $ccode = "\t/* DynaLoader is a special case */\n
\tnewXS(\"${mname}::boot_${cname}\", boot_${cname}, file);\n";
	    print $ccode unless $SEEN{$ccode}++;
	} else {
	    $ccode = "\tnewXS(\"${mname}::bootstrap\", boot_${cname}, file);\n";
	    print $ccode unless $SEEN{$ccode}++;
	}
	print "\t}\n";
    }
    print $tail3;
}

sub canon{
    my($as, @@ext) = @@_;
	foreach(@@ext){
	    # might be X::Y or lib/auto/X/Y/Y.a
		next if s!::!/!g;
	    s:^(lib|ext)/(auto/)?::;
	    s:/\w+\.\w+$::;
	}
	grep(s:/:$as:, @@ext) if ($as ne '/');
	@@ext;
}

1;
__END__

=head1 NAME

ExtUtils::Miniperl, writemain - write the C code for perlmain.c

=head1 SYNOPSIS

C<use ExtUtils::Miniperl;>

C<writemain(@@directories);>

=head1 DESCRIPTION

This whole module is written when perl itself is built from a script
called minimod.PL. In case you want to patch it, please patch
minimod.PL in the perl distribution instead.

writemain() takes an argument list of directories containing archive
libraries that relate to perl modules and should be linked into a new
perl binary. It writes to STDOUT a corresponding perlmain.c file that
is a plain C file containing all the bootstrap code to make the
modules associated with the libraries available from within perl.

The typical usage is from within a Makefile generated by
ExtUtils::MakeMaker. So under normal circumstances you won't have to
deal with this module directly.

=head1 SEE ALSO

L<ExtUtils::MakeMaker>

=cut

END
@


1.8
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@@


1.7
log
@Merge in perl 5.10.1
@
text
@d74 1
a74 1
    print "\tconst char file[] = __FILE__;\n";
@


1.6
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d40 1
d71 2
a72 1
    my ($tail1,$tail2) = ( $tail =~ /\A(.*\n)(\s*\}.*)\Z/s );
a73 1

d76 1
d96 1
a96 1
    print $tail2;
@


1.5
log
@merge in perl 5.8.8
@
text
@d1 2
a2 1
# minimod.PL writes the contents of miniperlmain.c into the module
d13 4
@


1.4
log
@merge in perl 5.6.1 with our local changes
@
text
@d68 1
a68 1
    print "\tchar *file = __FILE__;\n";
@


1.3
log
@perl-5.6.0 + local changes
@
text
@d62 1
a62 1
	print "EXTERN_C void boot_${cname} (CV* cv);\n";
@


1.2
log
@perl 5.004_04
@
text
@d62 1
a62 1
	print "EXTERN_C void boot_${cname} _((CV* cv));\n";
@


1.1
log
@Initial revision
@
text
@d43 1
a43 1
    print;
d68 3
a70 1
    print "	char *file = __FILE__;\n";
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d43 1
a43 1
    print unless /dXSUB_SYS/;
d68 1
a68 3
    print "\tchar *file = __FILE__;\n";
    print "\tdXSUB_SYS;\n" if $] > 5.002;

@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d62 1
a62 1
	print "EXTERN_C void boot_${cname} (CV* cv);\n";
@


1.1.1.4
log
@stock perl 5.6.1
@
text
@d62 1
a62 1
        print "EXTERN_C void boot_${cname} (pTHX_ CV* cv);\n";
@


1.1.1.5
log
@perl 5.8.8 import
@
text
@d68 1
a68 1
    print "\tconst char file[] = __FILE__;\n";
@


1.1.1.6
log
@import perl 5.10.0 from CPAN
@
text
@d1 1
a1 2
#./miniperl -w
# minimod.pl writes the contents of miniperlmain.c into the module
a11 4

BEGIN { unshift @@INC, "lib" }

use strict;
@


1.1.1.7
log
@import perl 5.10.1
@
text
@a39 1
    /#include "perl.h"/ and print qq/#include "XSUB.h"\n/;
d70 2
a71 1
    my ($tail1,$tail2,$tail3) = ( $tail =~ /\A(.*{\s*\n)(.*\n)(\s*\}.*)\Z/s );
a72 1
    print $tail1;
a74 1
    print $tail2;
d94 1
a94 1
    print $tail3;
@


1.1.1.8
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d74 1
a74 1
    print "\tstatic const char file[] = __FILE__;\n";
@


