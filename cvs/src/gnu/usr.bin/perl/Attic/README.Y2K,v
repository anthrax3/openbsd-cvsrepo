head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.1.3.0.20
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.18
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_2:1.1.1.3.0.16
	OPENBSD_4_2_BASE:1.1.1.3
	OPENBSD_4_1:1.1.1.3.0.14
	OPENBSD_4_1_BASE:1.1.1.3
	OPENBSD_4_0:1.1.1.3.0.12
	OPENBSD_4_0_BASE:1.1.1.3
	PERL_5_8_8:1.1.1.3
	OPENBSD_3_9:1.1.1.3.0.10
	OPENBSD_3_9_BASE:1.1.1.3
	OPENBSD_3_8:1.1.1.3.0.8
	OPENBSD_3_8_BASE:1.1.1.3
	OPENBSD_3_7:1.1.1.3.0.6
	OPENBSD_3_7_BASE:1.1.1.3
	PERL_5_8_6:1.1.1.3
	OPENBSD_3_6:1.1.1.3.0.4
	OPENBSD_3_6_BASE:1.1.1.3
	PERL_5_8_5:1.1.1.3
	PERL_5_8_3:1.1.1.3
	OPENBSD_3_5:1.1.1.3.0.2
	OPENBSD_3_5_BASE:1.1.1.3
	PERL_5_8_2:1.1.1.3
	OPENBSD_3_4:1.1.1.2.0.10
	OPENBSD_3_4_BASE:1.1.1.2
	OPENBSD_3_3:1.1.1.2.0.8
	OPENBSD_3_3_BASE:1.1.1.2
	PERL_5_8_0:1.1.1.2
	OPENBSD_3_2:1.1.1.2.0.6
	OPENBSD_3_2_BASE:1.1.1.2
	OPENBSD_3_1:1.1.1.2.0.4
	OPENBSD_3_1_BASE:1.1.1.2
	OPENBSD_3_0:1.1.1.2.0.2
	OPENBSD_3_0_BASE:1.1.1.2
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	PERL_5_6_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2008.09.29.17.35.56;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2000.04.06.16.08.30;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.06.16.08.30;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.05.24.18.21.51;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.12.03.02.43.36;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@The following information about Perl and the year 2000 is a modified
version of the information that can be found in the Frequently Asked
Question (FAQ) documents.

Does Perl have a year 2000 problem?  Is Perl Y2K compliant?

Short answer: No, Perl does not have a year 2000 problem.  Yes,
       Perl is Y2K compliant (whatever that means).  The
       programmers you've hired to use it, however, probably are
       not.  If you want perl to complain when your programmers
       create programs with certain types of possible year 2000
       problems, a build option allows you to turn on warnings.

Long answer: The question belies a true understanding of the
       issue.  Perl is just as Y2K compliant as your pencil
       --no more, and no less.  Can you use your pencil to write
       a non-Y2K-compliant memo?  Of course you can.  Is that
       the pencil's fault?  Of course it isn't.

       The date and time functions supplied with perl (gmtime and
       localtime) supply adequate information to determine the
       year well beyond 2000 (2038 is when trouble strikes for
       32-bit machines).  The year returned by these functions
       when used in an array context is the year minus 1900.  For
       years between 1910 and 1999 this happens to be a 2-digit
       decimal number. To avoid the year 2000 problem simply do
       not treat the year as a 2-digit number.  It isn't.

       When gmtime() and localtime() are used in scalar context
       they return a timestamp string that contains a fully-
       expanded year.  For example, $timestamp =
       gmtime(1005613200) sets $timestamp to "Tue Nov 13 01:00:00
       2001".  There's no year 2000 problem here.

       That doesn't mean that Perl can't be used to create non-
       Y2K compliant programs.  It can.  But so can your pencil.
       It's the fault of the user, not the language.  At the risk
       of inflaming the NRA: ``Perl doesn't break Y2K, people
       do.''  See http://language.perl.com/news/y2k.html for a
       longer exposition.

       If you want perl to warn you when it sees a program which
       catenates a number with the string "19" -- a common
       indication of a year 2000 problem -- build perl using the
       Configure option  "-Accflags=-DPERL_Y2KWARN".
       (See the file INSTALL for more information about building
       perl.)
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@virgin perl 5.6.0
@
text
@@


1.1.1.2
log
@stock perl 5.6.1
@
text
@d24 1
a24 1
       when used in a list context is the year minus 1900.  For
@


1.1.1.3
log
@perl 5.8.2 from CPAN
@
text
@d43 1
a43 1
       concatenates a number with the string "19" -- a common
@


