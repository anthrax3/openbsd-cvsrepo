head	1.2;
access;
symbols
	OPENBSD_5_5:1.1.1.6.0.6
	OPENBSD_5_5_BASE:1.1.1.6
	OPENBSD_5_4:1.1.1.6.0.2
	OPENBSD_5_4_BASE:1.1.1.6
	PERL_5_16_3:1.1.1.6
	OPENBSD_5_3:1.1.1.5.0.28
	OPENBSD_5_3_BASE:1.1.1.5
	OPENBSD_5_2:1.1.1.5.0.26
	OPENBSD_5_2_BASE:1.1.1.5
	OPENBSD_5_1_BASE:1.1.1.5
	OPENBSD_5_1:1.1.1.5.0.24
	OPENBSD_5_0:1.1.1.5.0.22
	OPENBSD_5_0_BASE:1.1.1.5
	OPENBSD_4_9:1.1.1.5.0.20
	OPENBSD_4_9_BASE:1.1.1.5
	PERL_5_12_2:1.1.1.5
	OPENBSD_4_8:1.1.1.5.0.18
	OPENBSD_4_8_BASE:1.1.1.5
	OPENBSD_4_7:1.1.1.5.0.14
	OPENBSD_4_7_BASE:1.1.1.5
	PERL_5_10_1:1.1.1.5
	OPENBSD_4_6:1.1.1.5.0.16
	OPENBSD_4_6_BASE:1.1.1.5
	OPENBSD_4_5:1.1.1.5.0.12
	OPENBSD_4_5_BASE:1.1.1.5
	PERL_5_10_0:1.1.1.5
	OPENBSD_4_4:1.1.1.5.0.10
	OPENBSD_4_4_BASE:1.1.1.5
	OPENBSD_4_3:1.1.1.5.0.8
	OPENBSD_4_3_BASE:1.1.1.5
	OPENBSD_4_2:1.1.1.5.0.6
	OPENBSD_4_2_BASE:1.1.1.5
	OPENBSD_4_1:1.1.1.5.0.4
	OPENBSD_4_1_BASE:1.1.1.5
	OPENBSD_4_0:1.1.1.5.0.2
	OPENBSD_4_0_BASE:1.1.1.5
	PERL_5_8_8:1.1.1.5
	OPENBSD_3_9:1.1.1.4.0.10
	OPENBSD_3_9_BASE:1.1.1.4
	OPENBSD_3_8:1.1.1.4.0.8
	OPENBSD_3_8_BASE:1.1.1.4
	OPENBSD_3_7:1.1.1.4.0.6
	OPENBSD_3_7_BASE:1.1.1.4
	PERL_5_8_6:1.1.1.4
	OPENBSD_3_6:1.1.1.4.0.4
	OPENBSD_3_6_BASE:1.1.1.4
	PERL_5_8_5:1.1.1.4
	PERL_5_8_3:1.1.1.4
	OPENBSD_3_5:1.1.1.4.0.2
	OPENBSD_3_5_BASE:1.1.1.4
	PERL_5_8_2:1.1.1.4
	OPENBSD_3_4:1.1.1.3.0.4
	OPENBSD_3_4_BASE:1.1.1.3
	OPENBSD_3_3:1.1.1.3.0.2
	OPENBSD_3_3_BASE:1.1.1.3
	PERL_5_8_0:1.1.1.3
	OPENBSD_3_2:1.1.1.2.0.6
	OPENBSD_3_2_BASE:1.1.1.2
	OPENBSD_3_1:1.1.1.2.0.4
	OPENBSD_3_1_BASE:1.1.1.2
	OPENBSD_3_0:1.1.1.2.0.2
	OPENBSD_3_0_BASE:1.1.1.2
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	PERL_5_6_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2014.03.24.15.05.13;	author afresh1;	state dead;
branches;
next	1.1;

1.1
date	2000.04.06.16.08.31;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.06.16.08.31;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.05.24.18.21.54;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.10.27.22.14.50;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.12.03.02.43.35;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2006.03.28.18.47.40;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2013.03.25.20.06.37;	author sthen;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@README.vmesa

This is a fully ported perl for VM/ESA 2.3.0.  It may work on
other versions, but that's the one we've tested it on.

If you've downloaded the binary distribution, it needs to be
installed below /usr/local.  Source code distributions have an
automated `make install` step that means you do not need to extract
the source code below /usr/local (though that is where it will be
installed by default).  You may need to worry about the networking
configuration files discussed in the last bullet below.

To extract an ASCII tar archive on VM/ESA, try this:

   pax -o to=IBM-1047,from=ISO8859-1 -r < latest.tar

GNU make for VM/ESA, which may be required for the build of perl,
is available from:

  http://pucc.princeton.edu/~neale/vmoe.html

Once you've unpacked the distribution, run Configure (see INSTALL for
full discussion of the Configure options), and then run make, then
"make test" then "make install" (this last step may require UID=0
privileges)

There is a "hints" file for vmesa that specifies the correct values
for most things.  Some things to watch out for are

	- this port does support dynamic loading but it's not had much testing

	- Don't turn on the compiler optimization flag "-O".  There's
	  a bug in the compiler (APAR PQ18812) that generates some bad code
	  the optimizer is on.

	- As VM/ESA doesn't fully support the fork() API programs relying on
	  this call will not work. I've replaced fork()/exec() with spawn()
	  and the standalone exec() with spawn(). This has a side effect when
	  opening unnamed pipes in a shell script: there is no child process
	  generated under.

	- At the moment the hints file for VM/ESA basically bypasses all of the
	  automatic configuration process. This is because Configure relies on:
	  1. The header files living in the Byte File System (you could put the
	     there if you want;
	  2. The C preprocessor including the #include statements in the
	     preprocessor output (.i) file.
	
When using perl on VM/ESA please keep in mind that the EBCDIC and ASCII
character sets are different.  Perl builtin functions that may behave
differently under EBCDIC are mentioned in the perlport.pod document.

OpenEdition (UNIX System Services) does not (yet) support the #! means
of script invokation.
See:

    head `whence perldoc`

for an example of how to use the "eval exec" trick to ask the shell to
have perl run your scripts for you.

If you are interested in the VM and OS/390 ports of perl then see the
perl-mvs mailing list: The Perl Institute (http://www.perl.org/)
maintains a mailing list of interest to all folks building and/or
using perl on EBCDIC platforms.  To subscibe, send a message of:

    subscribe perl-mvs

to majordomo@@perl.org.

Regression tests: as the 5.005 kit was was being assembled
the following "failures" were known to appear on some machines
during `make test` (mostly due to ASCII vs. EBCDIC conflicts),
your results may differ:

[the list of failures being compiled]
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@virgin perl 5.6.0
@
text
@@


1.1.1.2
log
@stock perl 5.6.1
@
text
@d1 1
a1 17

This document is written in pod format hence there are punctuation
characters in odd places.  Do not worry, you've apparently got
the ASCII->EBCDIC translation worked out correctly.  You can read
more about pod in pod/perlpod.pod or the short summary in the
INSTALL file.

=head1 NAME

README.vmesa - building and installing Perl for VM/ESA.

=head1 SYNOPSIS

This document will help you Configure, build, test and install Perl
on VM/ESA.

=head1 DESCRIPTION
a12 2
=head2 Unpacking

a16 2
=head2 Setup and utilities

a21 2
=head2 Configure

d25 1
a25 1
privileges).
d28 1
a28 33
for most things.  Some things to watch out for are:

=over 4

=item *

this port does support dynamic loading but it's not had much testing

=item *
	
Don't turn on the compiler optimization flag "-O".  There's
a bug in the compiler (APAR PQ18812) that generates some bad code
the optimizer is on.

=item *
	
As VM/ESA doesn't fully support the fork() API programs relying on
this call will not work. I've replaced fork()/exec() with spawn()
and the standalone exec() with spawn(). This has a side effect when
opening unnamed pipes in a shell script: there is no child process
generated under.

=item *

At the moment the hints file for VM/ESA basically bypasses all of the
automatic configuration process.  This is because Configure relies on:
1. The header files living in the Byte File System (you could put the
there if you want); 2. The C preprocessor including the #include 
statements in the preprocessor output (.i) file.

=back

=head2 testing anomalies
d30 1
a30 7
The `make test` step runs a Perl Verification Procedure, usually before
installation.  As the 5.6.1 kit was was being assembled
the following "failures" were known to appear on some machines
during `make test` (mostly due to ASCII vs. EBCDIC conflicts),
your results may differ:

[the list of failures being compiled]
d32 16
a47 1
=head2 Usage Hints
d54 1
a54 1
of script invocation.
a61 10
=head1 AUTHORS

Neale Ferguson.

=head1 SEE ALSO

L<INSTALL>, L<perlport>, L<perlebcdic>.

=head2 Mailing list

d65 1
a65 1
using perl on EBCDIC platforms.  To subscribe, send a message of:
d71 4
a74 10
   See also:

    http://lists.perl.org/showlist.cgi?name=perl-mvs

There are web archives of the mailing list at:

    http://www.xray.mpe.mpg.de/mailing-lists/perl-mvs/
    http://archive.develooper.com/perl-mvs@@perl.org/

=cut
d76 1
@


1.1.1.3
log
@stock perl 5.8.0 from CPAN
@
text
@d29 1
a29 1
=head2 Unpacking Perl Distribution on VM/ESA
d35 1
a35 1
=head2 Setup Perl and utilities on VM/ESA
d42 1
a42 1
=head2 Configure Perl on VM/ESA
d59 1
a59 1

d65 1
a65 1

d82 1
a82 1
=head2 Testing Anomalies of Perl on VM/ESA
d85 1
a85 1
installation.  As the 5.6.1 kit was being assembled
d92 2
a93 2
=head2 Usage Hints for Perl on VM/ESA

d115 8
a122 1
=head2 Mailing list for Perl on VM/ESA
d124 1
a124 3
If you are interested in the VM/ESA, z/OS (formerly known as OS/390)
and POSIX-BC (BS2000) ports of Perl then see the perl-mvs mailing list.
To subscribe, send an empty message to perl-mvs-subscribe@@perl.org.
d126 1
a126 1
See also:
@


1.1.1.4
log
@perl 5.8.2 from CPAN
@
text
@d40 1
a40 1
  http://vm.marist.edu/~neale/vmoe.html
@


1.1.1.5
log
@perl 5.8.8 import
@
text
@d24 1
a24 1
automated "make install" step that means you do not need to extract
d84 1
a84 1
The "make test" step runs a Perl Verification Procedure, usually before
d87 1
a87 1
during "make test" (mostly due to ASCII vs. EBCDIC conflicts),
@


1.1.1.6
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d10 1
a10 1
perlvmesa - building and installing Perl for VM/ESA.
d40 1
a40 1
L<http://vm.marist.edu/~neale/vmoe.html>
d123 1
a123 1
L<http://lists.perl.org/list/perl-mvs.html>
d127 2
a128 11
=over 4

=item *

L<http://www.xray.mpe.mpg.de/mailing-lists/perl-mvs/>

=item *

L<http://archive.develooper.com/perl-mvs@@perl.org/>

=back
@


