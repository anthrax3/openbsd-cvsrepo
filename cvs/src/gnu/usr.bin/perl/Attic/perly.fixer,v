head	1.8;
access;
symbols
	OPENBSD_4_4:1.7.0.18
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.16
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.14
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.12
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.10
	OPENBSD_4_0_BASE:1.7
	PERL_5_8_8:1.1.1.6
	OPENBSD_3_9:1.7.0.8
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.6
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.4
	OPENBSD_3_7_BASE:1.7
	PERL_5_8_6:1.1.1.6
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	PERL_5_8_5:1.1.1.6
	PERL_5_8_3:1.1.1.5
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	PERL_5_8_2:1.1.1.5
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	PERL_5_8_0:1.1.1.4
	OPENBSD_3_2:1.4.0.12
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.10
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2008.09.29.17.35.58;	author millert;	state dead;
branches;
next	1.7;

1.7
date	2004.08.09.18.08.55;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.03.03.02.22;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.27.22.25.18;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.04.14;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.51.06;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.49.05;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.11.46;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.11.46;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.37.39;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.08.43;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.10.27.22.14.49;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.12.03.02.43.33;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2004.08.09.17.45.44;	author millert;	state Exp;
branches;
next	;


desc
@@


1.8
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@#!/bin/sh

# Fix up yacc output to allow dynamic allocation.  Since perly.c
# is now provided with the perl source, this should not be necessary.
#
# However, if the user wishes to use byacc, or wishes to try another 
# compiler compiler (e.g. bison or yacc), this script will get run.
# See makefile run_byacc target for more details.
#
# Currently, only byacc version 1.8 is fully supported.
#
#  Hacks to make it work with Interactive's SysVr3 Version 2.2
#   doughera@@lafayette.edu (Andy Dougherty)   3/23/91
#
# Additional information to make the BSD section work with SunOS 4.0.2
#   tdinger@@East.Sun.COM (Tom Dinger)	4/15/1991
#
# Also edit some practices gcc -Wall finds questionable.
#  

gnupatch=patch
. ./config.sh

input=$1
output=$2
tmp=perly$$

inputh=`echo $input|sed 's:\.c$:.h:'`
if grep '^#ifdef PERL_CORE' $inputh; then
	: never mind
else
	echo "#ifdef PERL_CORE"	> $tmp
	sed -e 's:^typedef union {:#endif /* PERL_CORE */\
\
typedef union {:' $inputh		>> $tmp
	mv -f $tmp $inputh
fi

if grep 'yaccpar 1.8 (Berkeley)' $input >/dev/null 2>&1; then
    cp $input $output
    # Don't expect the diff to do everything -- do some by hand
    if test -f perly_c.diff; then
	$gnupatch -F3 $output <perly_c.diff
	sed -e '/^[ 	]*printf("yydebug:/s/printf(/PerlIO_printf(Perl_debug_log, /' \
	    -e '/^#line /s/"y[.]tab[.]c"/"perly.c"/' \
	    -e '/\[\] *= *[{]/s/^/static /' \
	    -e '/^static static/s/^static //' \
	    -e '/^#define.WORD/,/^#define.ARROW/d' \
	    -e '/^int.yydebug/,/^#define.yystacksize/d' \
	    -e 's/^yyerrlab:$//' \
	    -e 's/^    goto yyerrlab;//' \
	    -e 's/^yynewerror:$//' \
	    -e 's/^    goto yynewerror;//' \
	    -e 's|^static char yysccsid\(.*\)|/* static char yysccsid\1 */|' \
	    -e 's|deprecate(|deprecate_old(|' \
	    < $output > $tmp && mv -f $tmp $output || exit 1
	rm -rf $input
	echo "If you need to debug perly.c, you need to fix up the #line"
	echo "directives yourself."
    fi
    exit
elif grep 'yaccpar	1.9 (Berkeley)' $input >/dev/null 2>&1; then
    if test -f perly.c.dif9; then
	$gnupatch -F3 $output <perly.c.dif9
	sed -e '/^[ 	]*printf("yydebug:/s/printf(/PerlIO_printf(Perl_debug_log, /' \
	    -e '/^#line /s/"y[.]tab[.]c"/"perly.c"/' \
	    -e '/\[\] *= *[{]/s/^/static /' \
	    -e '/^static static/s/^static //' \
	    -e '/^#define.WORD/,/^#define.ARROW/d' \
	    -e '/^int.yydebug/,/^#define.yystacksize/d' \
	    -e 's/^yyerrlab:$//' \
	    -e 's/^    goto yyerrlab;//' \
	    -e 's/^yynewerror:$//' \
	    -e 's/^    goto yynewerror;//' \
	    -e 's|^static char yysccsid\(.*\)|/* static char yysccsid\1 */|' \
	    -e 's|deprecate(|deprecate_old(|' \
	    < $output > $tmp && mv -f $tmp $output || exit 1
	rm -rf $input
	echo "If you need to debug perly.c, you need to fix up the #line"
	echo "directives yourself."
	exit 0
    else
	echo "Diffs from byacc-1.9 are not available."
	echo "If you wish to proceed anyway, do"
	echo "cp $input $output"
	echo "cp y.tab.h perly.h"
	echo "and re-run make. Otherwise, I will use the old perly.c"
	touch perly.c
	# Exit with error status to stop make.
	exit 1
    fi
fi

plan="unknown"

echo ""
echo "Warning: the yacc you have used is not directly supported by perl."
echo "The perly.fixer script will attempt to make some changes to the generated"
echo "file. The changes may be incomplete and that might lead to problems later"
echo "(especially with complex scripts). You may need to apply the changes"
echo "embedded in perl.fixer (and/or perly_c.dif*) by hand."
echo ""

# Below, we check for various characteristic yaccpar outputs.

#  Test for BSD 4.3 version.
#  Also tests for the SunOS 4.0.2 version
egrep 'YYSTYPE[ 	]*yyv\[ *YYMAXDEPTH *\];
short[  ]*yys\[ *YYMAXDEPTH *\] *;
yyps *= *&yys\[ *-1 *\];
yypv *= *&yyv\[ *-1 *\];
if *\( *\+\+yyps *>=* *&yys\[ *YYMAXDEPTH *\] *\)' $input >$tmp 2>/dev/null

set `wc -l $tmp`
if test "$1" = "5"; then
      plan="bsd43"
fi

if test "$plan" = "unknown"; then
    #   Test for ISC 2.2 version (probably generic SysVr3).
egrep 'YYSTYPE[ 	]*yyv\[ *YYMAXDEPTH *\];
int[    ]*yys\[ *YYMAXDEPTH *\] *;
yyps *= *&yys\[ *-1 *\];
yypv *= *&yyv\[ *-1 *\];
if *\( *\+\+yy_ps *>= *&yys\[ *YYMAXDEPTH *\] *\)' $input >$tmp 2>/dev/null

    set `wc -l $tmp`
    if test "$1" = "5"; then
	plan="isc"
    fi
fi

# ------

case "$plan" in
    ##################################################################
    # The SunOS 4.0.2 version has the comparison fixed already.
    # Also added are out of memory checks (makes porting the generated
    # code easier) For most systems, it can't hurt. -- TD
    "bsd43")
	echo "Attempting to patch perly.c to allow dynamic yacc stack allocation"
	echo "Assuming bsd4.3 yaccpar"
	cat >$tmp <<'END'
/YYSTYPE[ 	]*yyv\[ *YYMAXDEPTH *\];/c\
int yymaxdepth = YYMAXDEPTH;\
YYSTYPE *yyv; /* where the values are stored */\
short *yys;\
short *maxyyps;

/short[ 	]*yys\[ *YYMAXDEPTH *\] *;/d

/yyps *= *&yys\[ *-1 *\];/d

/yypv *= *&yyv\[ *-1 *\];/c\
\	if (!yyv) {\
\	    New(73, yyv, yymaxdepth, YYSTYPE);\
\	    New(73, yys, yymaxdepth, short);\
\	    if ( !yyv || !yys ) {\
\		yyerror( "out of memory" );\
\		return(1);\
\	    }\
\	    maxyyps = &yys[yymaxdepth];\
\	}\
\	yyps = &yys[-1];\
\	yypv = &yyv[-1];


/if *( *\+\+yyps *>=* *&yys\[ *YYMAXDEPTH *\] *)/c\
\		if( ++yyps >= maxyyps ) {\
\		    int tv = yypv - yyv;\
\		    int ts = yyps - yys;\
\
\		    yymaxdepth *= 2;\
\		    Renew(yyv, yymaxdepth, YYSTYPE);\
\		    Renew(yys, yymaxdepth, short);\
\		    if ( !yyv || !yys ) {\
\			yyerror( "yacc stack overflow" );\
\			return(1);\
\		    }\
\		    yyps = yys + ts;\
\		    yypv = yyv + tv;\
\		    maxyyps = &yys[yymaxdepth];\
\		}

/yacc stack overflow.*}/d
/yacc stack overflow/,/}/d
END
	if sed -f $tmp <$input >$output
	then echo "The edit seems to have been applied okay."
	else echo "The edit seems to have failed!"
	fi
	;;

    #######################################################
    "isc") # Interactive Systems 2.2  version
	echo "Attempting to patch perly.c to allow dynamic yacc stack allocation"
	echo "Assuming Interactive SysVr3 2.2 yaccpar"
	# Easier to simply put whole script here than to modify the
	# bsd script with sed.
	# Main changes:  yaccpar sometimes uses yy_ps and yy_pv
	# which are local register variables.
	#  if(++yyps > YYMAXDEPTH) had opening brace on next line.
	# I've kept that brace in along with a call to yyerror if
	# realloc fails. (Actually, I just don't know how to do
	# multi-line matches in sed.)
	cat > $tmp << 'END'
/YYSTYPE[ 	]*yyv\[ *YYMAXDEPTH *\];/c\
int yymaxdepth = YYMAXDEPTH;\
YYSTYPE *yyv; /* where the values are stored */\
int *yys;\
int *maxyyps;

/int[ 	]*yys\[ *YYMAXDEPTH *\] *;/d

/yyps *= *&yys\[ *-1 *\];/d

/yypv *= *&yyv\[ *-1 *\];/c\
\	if (!yyv) {\
\	    New(73, yyv, yymaxdepth, YYSTYPE);\
\	    New(73, yys, yymaxdepth, int);\
\	    maxyyps = &yys[yymaxdepth];\
\	}\
\	yyps = &yys[-1];\
\	yypv = &yyv[-1];

/if *( *\+\+yy_ps *>= *&yys\[ *YYMAXDEPTH *\] *)/c\
\		if( ++yy_ps >= maxyyps ) {\
\		    int tv = yy_pv - yyv;\
\		    int ts = yy_ps - yys;\
\
\		    yymaxdepth *= 2;\
\		    Renew(yyv, yymaxdepth, YYSTYPE);\
\		    Renew(yys, yymaxdepth, int);\
\		    yy_ps = yyps = yys + ts;\
\		    yy_pv = yypv = yyv + tv;\
\		    maxyyps = &yys[yymaxdepth];\
\		}\
\		if (yyv == NULL || yys == NULL)
END
	if sed -f $tmp < $input > $output
	then echo "The edit seems to have been applied okay."
	else echo "The edit seems to have failed!"
	fi
	;;

    ######################################################
    # Plan still unknown
    *)
	echo "Unable to patch perly.c to allow dynamic yacc stack allocation (plan=$plan)"
	# just do minimal change to write $output from $input
	sed -e 's/Received token/ *** Received token/' $input >$output
	;;
esac

echo ""
rm -rf $tmp $input
@


1.7
log
@merge 5.8.5 into HEAD
remove now-unused files
crank libperl shared library major number
update Makefile.bsd-wrapper
tweak openbsd hints file for arm and m68k
@
text
@@


1.6
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d26 1
a26 1
tmp=/tmp/f$$
@


1.5
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d13 1
a13 1
#   doughera@@lafvax.lafayette.edu (Andy Dougherty)   3/23/91
@


1.4
log
@perl-5.6.0 + local changes
@
text
@d5 1
a5 1
#  
d17 6
d28 11
d43 1
a43 1
	patch -F3 $output <perly_c.diff
d50 6
d64 1
a64 1
	patch -F3 $output <perly.c.dif9
d71 6
@


1.3
log
@perl5.005_03 (stock)
@
text
@d24 1
d27 7
d35 2
d42 7
d50 2
d112 1
a112 1
	echo "Attempting to path perly.c to allow dynamic yacc stack allocation"
d167 1
a167 1
	echo "Attempting to path perly.c to allow dynamic yacc stack allocation"
@


1.2
log
@perl 5.004_04
@
text
@d24 2
a25 2
    if test -f perly.c.diff; then
	patch -F3 $output <perly.c.diff
d53 1
a53 1
echo "embedded in perl.fixer (and/or perly.c.dif*) by hand."
d108 2
a109 2
\	    yyv = (YYSTYPE*) safemalloc(yymaxdepth * sizeof(YYSTYPE));\
\	    yys = (short*) safemalloc(yymaxdepth * sizeof(short));\
d126 2
a127 4
\		    yyv = (YYSTYPE*)realloc((char*)yyv,\
\		      yymaxdepth*sizeof(YYSTYPE));\
\		    yys = (short*)realloc((char*)yys,\
\		      yymaxdepth*sizeof(short));\
d171 2
a172 2
\	    yyv = (YYSTYPE*) safemalloc(yymaxdepth * sizeof(YYSTYPE));\
\	    yys = (int*) safemalloc(yymaxdepth * sizeof(int));\
d184 2
a185 4
\		    yyv = (YYSTYPE*)realloc((char*)yyv,\
\		      yymaxdepth*sizeof(YYSTYPE));\
\		    yys = (int*)realloc((char*)yys,\
\		      yymaxdepth*sizeof(int));\
@


1.1
log
@Initial revision
@
text
@d8 1
d10 1
a10 1
# Currently, only byacc version 1.8 is supported.
d48 9
a56 1
# Below, we check for various yaccpar outputs.
d85 2
d93 1
a93 1
	echo "Patching perly.c to allow dynamic yacc stack allocation"
d142 5
a146 1
	sed -f $tmp <$input >$output ;;
d150 1
a150 1
	echo "Patching perly.c to allow dynamic yacc stack allocation"
d196 5
a200 1
	sed -f $tmp < $input > $output ;;
d204 5
a208 1
    *) sed -e 's/Received token/ *** Received token/' $input >$output;
d211 1
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@a7 1
# See makefile run_byacc target for more details.
d9 1
a9 1
# Currently, only byacc version 1.8 is fully supported.
d23 2
a24 2
    if test -f perly_c.diff; then
	patch -F3 $output <perly_c.diff
d47 1
a47 9
echo ""
echo "Warning: the yacc you have used is not directly supported by perl."
echo "The perly.fixer script will attempt to make some changes to the generated"
echo "file. The changes may be incomplete and that might lead to problems later"
echo "(especially with complex scripts). You may need to apply the changes"
echo "embedded in perl.fixer (and/or perly_c.dif*) by hand."
echo ""

# Below, we check for various characteristic yaccpar outputs.
a75 2
# ------

d82 1
a82 1
	echo "Attempting to path perly.c to allow dynamic yacc stack allocation"
d97 2
a98 2
\	    New(73, yyv, yymaxdepth, YYSTYPE);\
\	    New(73, yys, yymaxdepth, short);\
d115 4
a118 2
\		    Renew(yyv, yymaxdepth, YYSTYPE);\
\		    Renew(yys, yymaxdepth, short);\
d131 1
a131 5
	if sed -f $tmp <$input >$output
	then echo "The edit seems to have been applied okay."
	else echo "The edit seems to have failed!"
	fi
	;;
d135 1
a135 1
	echo "Attempting to path perly.c to allow dynamic yacc stack allocation"
d158 2
a159 2
\	    New(73, yyv, yymaxdepth, YYSTYPE);\
\	    New(73, yys, yymaxdepth, int);\
d171 4
a174 2
\		    Renew(yyv, yymaxdepth, YYSTYPE);\
\		    Renew(yys, yymaxdepth, int);\
d181 1
a181 5
	if sed -f $tmp < $input > $output
	then echo "The edit seems to have been applied okay."
	else echo "The edit seems to have failed!"
	fi
	;;
d185 1
a185 5
    *)
	echo "Unable to patch perly.c to allow dynamic yacc stack allocation (plan=$plan)"
	# just do minimal change to write $output from $input
	sed -e 's/Received token/ *** Received token/' $input >$output
	;;
a187 1
echo ""
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@a23 1
    # Don't expect the diff to do everything -- do some by hand
a25 7
	sed -e '/^[ 	]*printf("yydebug:/s/printf(/PerlIO_printf(Perl_debug_log, /' \
	    -e '/^#line /s/"y[.]tab[.]c"/"perly.c"/' \
	    -e '/\[\] *= *[{]/s/^/static /' \
	    -e '/^static static/s/^static //' \
	    -e '/^#define.WORD/,/^#define.ARROW/d' \
	    -e '/^int.yydebug/,/^#define.yystacksize/d' \
	    < $output > $tmp && mv -f $tmp $output || exit 1
a26 2
	echo "If you need to debug perly.c, you need to fix up the #line"
	echo "directives yourself."
a31 7
	sed -e '/^[ 	]*printf("yydebug:/s/printf(/PerlIO_printf(Perl_debug_log, /' \
	    -e '/^#line /s/"y[.]tab[.]c"/"perly.c"/' \
	    -e '/\[\] *= *[{]/s/^/static /' \
	    -e '/^static static/s/^static //' \
	    -e '/^#define.WORD/,/^#define.ARROW/d' \
	    -e '/^int.yydebug/,/^#define.yystacksize/d' \
	    < $output > $tmp && mv -f $tmp $output || exit 1
a32 2
	echo "If you need to debug perly.c, you need to fix up the #line"
	echo "directives yourself."
d93 1
a93 1
	echo "Attempting to patch perly.c to allow dynamic yacc stack allocation"
d148 1
a148 1
	echo "Attempting to patch perly.c to allow dynamic yacc stack allocation"
@


1.1.1.4
log
@stock perl 5.8.0 from CPAN
@
text
@d5 1
a5 1
#
a16 6
#
# Also edit some practices gcc -Wall finds questionable.
#  

gnupatch=patch
. ./config.sh
a21 11
inputh=`echo $input|sed 's:\.c$:.h:'`
if grep '^#ifdef PERL_CORE' $inputh; then
	: never mind
else
	echo "#ifdef PERL_CORE"	> $tmp
	sed -e 's:^typedef union {:#endif /* PERL_CORE */\
\
typedef union {:' $inputh		>> $tmp
	mv -f $tmp $inputh
fi

d26 1
a26 1
	$gnupatch -F3 $output <perly_c.diff
a32 6
	    -e 's/^yyerrlab:$//' \
	    -e 's/^    goto yyerrlab;//' \
	    -e 's/^yynewerror:$//' \
	    -e 's/^    goto yynewerror;//' \
	    -e 's|^static char yysccsid\(.*\)|/* static char yysccsid\1 */|' \
	    -e 's|deprecate(|deprecate_old(|' \
d41 1
a41 1
	$gnupatch -F3 $output <perly.c.dif9
a47 6
	    -e 's/^yyerrlab:$//' \
	    -e 's/^    goto yyerrlab;//' \
	    -e 's/^yynewerror:$//' \
	    -e 's/^    goto yynewerror;//' \
	    -e 's|^static char yysccsid\(.*\)|/* static char yysccsid\1 */|' \
	    -e 's|deprecate(|deprecate_old(|' \
@


1.1.1.5
log
@perl 5.8.2 from CPAN
@
text
@d13 1
a13 1
#   doughera@@lafayette.edu (Andy Dougherty)   3/23/91
@


1.1.1.6
log
@Import of stock perl 5.8.5
@
text
@d26 1
a26 1
tmp=perly$$
@


