head	1.2;
access;
symbols
	OPENBSD_2_9:1.1.1.2.0.6
	OPENBSD_2_9_BASE:1.1.1.2
	OPENBSD_2_8:1.1.1.2.0.4
	OPENBSD_2_8_BASE:1.1.1.2
	OPENBSD_2_7:1.1.1.2.0.2
	OPENBSD_2_7_BASE:1.1.1.2
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	PERL_500503:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2001.05.24.18.34.47;	author millert;	state dead;
branches;
next	1.1;

1.1
date	99.04.29.22.37.13;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.37.13;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.08.34;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge in perl 5.6.1 with our local changes
@
text
@#include "EXTERN.h"
#include "perl.h"

/* in ASCII order, not that it matters */
static const char controllablechars[] = "?@@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_";
 
int
ebcdic_control(int ch)
{
    	if (ch > 'a') {
	        char *ctlp;
 
 	       if (islower(ch))
  	              ch = toupper(ch);
 
 	       if ((ctlp = strchr(controllablechars, ch)) == 0) {
  	              die("unrecognised control character '%c'\n", ch);
     	       }
 
        	if (ctlp == controllablechars)
         	       return('\177'); /* DEL */
        	else
         	       return((unsigned char)(ctlp - controllablechars - 1));
	} else { /* Want uncontrol */
        	if (ch == '\177' || ch == -1)
                	return('?');
        	else if (0 < ch && ch < (sizeof(controllablechars) - 1))
                	return(controllablechars[ch+1]);
        	else
                	die("invalid control request: '\\%03o'\n", ch & 0xFF);
	}
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl5.005_03
@
text
@@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@a1 1
#define PERL_IN_EBCDIC_C
d17 1
a17 1
  	              Perl_die(aTHX_ "unrecognised control character '%c'\n", ch);
a26 8
        	else if (ch == '\157')
                	return('\177');
        	else if (ch == '\174')
                	return('\000');
        	else if (ch == '^')    /* '\137' in 1047, '\260' in 819 */
                	return('\036');
        	else if (ch == '\155')
                	return('\037');
d30 1
a30 1
                	Perl_die(aTHX_ "invalid control request: '\\%03o'\n", ch & 0xFF);
@

