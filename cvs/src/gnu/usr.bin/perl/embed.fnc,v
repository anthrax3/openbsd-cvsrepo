head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.1.12.0.4
	OPENBSD_5_9_BASE:1.1.1.12
	OPENBSD_5_8:1.1.1.12.0.6
	OPENBSD_5_8_BASE:1.1.1.12
	PERL_5_20_2:1.1.1.12
	OPENBSD_5_7:1.1.1.12.0.2
	OPENBSD_5_7_BASE:1.1.1.12
	PERL_5_20_1:1.1.1.12
	OPENBSD_5_6:1.1.1.11.0.4
	OPENBSD_5_6_BASE:1.1.1.11
	PERL_5_18_2:1.1.1.11
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.10.0.6
	OPENBSD_5_5_BASE:1.1.1.10
	OPENBSD_5_4:1.1.1.10.0.2
	OPENBSD_5_4_BASE:1.1.1.10
	PERL_5_16_3:1.1.1.10
	OPENBSD_5_3:1.1.1.9.0.10
	OPENBSD_5_3_BASE:1.1.1.9
	OPENBSD_5_2:1.1.1.9.0.8
	OPENBSD_5_2_BASE:1.1.1.9
	OPENBSD_5_1_BASE:1.1.1.9
	OPENBSD_5_1:1.1.1.9.0.6
	OPENBSD_5_0:1.1.1.9.0.4
	OPENBSD_5_0_BASE:1.1.1.9
	OPENBSD_4_9:1.1.1.9.0.2
	OPENBSD_4_9_BASE:1.1.1.9
	PERL_5_12_2:1.1.1.9
	OPENBSD_4_8:1.1.1.8.0.4
	OPENBSD_4_8_BASE:1.1.1.8
	OPENBSD_4_7:1.1.1.8.0.2
	OPENBSD_4_7_BASE:1.1.1.8
	PERL_5_10_1:1.1.1.8
	OPENBSD_4_6:1.1.1.7.0.6
	OPENBSD_4_6_BASE:1.1.1.7
	OPENBSD_4_5:1.1.1.7.0.2
	OPENBSD_4_5_BASE:1.1.1.7
	PERL_5_10_0:1.1.1.7
	OPENBSD_4_4:1.1.1.6.0.10
	OPENBSD_4_4_BASE:1.1.1.6
	OPENBSD_4_3:1.1.1.6.0.8
	OPENBSD_4_3_BASE:1.1.1.6
	OPENBSD_4_2:1.1.1.6.0.6
	OPENBSD_4_2_BASE:1.1.1.6
	OPENBSD_4_1:1.1.1.6.0.4
	OPENBSD_4_1_BASE:1.1.1.6
	OPENBSD_4_0:1.1.1.6.0.2
	OPENBSD_4_0_BASE:1.1.1.6
	PERL_5_8_8:1.1.1.6
	OPENBSD_3_9:1.1.1.5.0.6
	OPENBSD_3_9_BASE:1.1.1.5
	OPENBSD_3_8:1.1.1.5.0.4
	OPENBSD_3_8_BASE:1.1.1.5
	OPENBSD_3_7:1.1.1.5.0.2
	OPENBSD_3_7_BASE:1.1.1.5
	PERL_5_8_6:1.1.1.5
	OPENBSD_3_6:1.1.1.4.0.2
	OPENBSD_3_6_BASE:1.1.1.4
	PERL_5_8_5:1.1.1.4
	PERL_5_8_3:1.1.1.3
	OPENBSD_3_5:1.1.1.2.0.2
	OPENBSD_3_5_BASE:1.1.1.2
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2017.02.05.00.31.52;	author afresh1;	state Exp;
branches;
next	1.2;
commitid	cxJ08BvJA9Pt2PTM;

1.2
date	2016.07.03.01.07.47;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	GzHqjSTnBjdF7Wcw;

1.1
date	2002.10.27.22.14.46;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.14.46;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.03.02.43.28;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.04.07.21.12.48;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.08.09.17.45.39;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2005.01.15.21.16.23;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2006.03.28.18.47.25;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2008.09.29.17.18.04;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2009.10.12.18.10.35;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2010.09.24.14.48.27;	author millert;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2013.03.25.20.06.22;	author sthen;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2014.03.24.14.58.44;	author afresh1;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	2014.11.17.20.52.36;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.3
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@: BEGIN{die "You meant to run regen/embed.pl"} # Stop early if fed to perl.
:
: This file is processed by regen/embed.pl and autodoc.pl
:
: Lines are of the form:
:    flags|return_type|function_name|arg1|arg2|...|argN
:
: A line may be continued on another by ending it with a backslash.
: Leading and trailing whitespace will be ignored in each component.
:
: flags are single letters with following meanings:
:
:   A  Available fully everywhere (usually part of the public API):
:
:         add entry to the list of exported symbols (unless x or m);
:         any doc entry goes in perlapi.pod rather than perlintern.pod.  If no
:	     documentation is furnished for this function, and M is also
:	     specified, the function is not listed as part of the public API.
:	     If M isn't specified, and no documentation is furnished, the
:	     function is listed in perlapi as existing and being undocumented
:         makes '#define foo Perl_foo' scope not just for PERL_CORE/PERL_EXT
:
:      If the function is only exported for use in a public
:      macro, see X.
:
:   a  Allocates memory a la malloc/calloc.  Also implies "R":
:
:         proto.h: add __attribute__malloc__
:
:   b  Binary backward compatibility; has an exported Perl_ implementation
:      but function is also normally a macro (i.e. has the "m" flag as well).
:      Backcompat functions ("b") can be anywhere, but if they are also
:      macros ("m") then they have no proto.h entries so must either be in
:      mathoms.c to get marked EXTERN_C (and skipped for -DNO_MATHOMS builds)
:      or else will require special attention to ensure they are marked
:      EXTERN_C (and then won't be automatically skipped for -DNO_MATHOMS
:      builds).
:
:         add entry to the list of exported symbols;
:         don't define PERL_ARGS_ASSERT_FOO
:
:   D  Function is deprecated:
:
:         proto.h: add __attribute__deprecated__
:
:   d  Function has documentation (somewhere) in the source:
:
:         enables 'no docs for foo" warning in autodoc.pl
:
:   E  Visible to extensions included in the Perl core:
:
:         in embed.h, change "#ifdef PERL_CORE"
:         into               "#if defined(PERL_CORE) || defined(PERL_EXT)"
:
:      To be usable from dynamically loaded extensions, either:
:	  1) must be static to its containing file ("i" or "s" flag); or
:         2) be combined with the "X" flag.
:
:   f  Function takes a format string. If the function name /strftime/
:      then its assumed to take a strftime-style format string as 1st arg;
:      otherwise it's assumed to be a printf style format string, varargs
:      (hence any entry that would otherwise go in embed.h is suppressed):
:
:         proto.h: add __attribute__format__ (or ...null_ok__)
:
:   i  Static inline: function in source code has a S_ prefix:
:
:         proto.h: function is declared as S_foo rather than foo,
:                PERL_STATIC_INLINE is added to declaration;
:         embed.h: "#define foo S_foo" entries added
:
:   M  May change:
:
:         any doc entry is marked that function may change.  Also used to
:	  suppress making a doc entry if it would just be a placeholder.
:
:   m  Implemented as a macro:
:
:         suppress proto.h entry (actually, not suppressed, but commented out)
:         suppress entry in the list of exported symbols
:         suppress embed.h entry
:
:   n  Has no implicit interpreter/thread context argument:
:
:         suppress the pTHX part of "foo(pTHX...)" in proto.h;
:         In the PERL_IMPLICIT_SYS branch of embed.h, generates
:             "#define foo Perl_foo",      rather than
:             "#define foo(a,b,c) Perl_foo(aTHX_ a,b,c)
:
:   O  Has a perl_ compatibility macro.
:
:      The really OLD name for API funcs
:
:   o  Has no Perl_foo or S_foo compatibility macro:
:
:         embed.h: suppress "#define foo Perl_foo"
:
:   P  Pure function: no effects except the return value;
:      return value depends only on params and/or globals:
:
:         proto.h: add __attribute__pure__
:
:   p  Function in source code has a Perl_ prefix:
:
:         proto.h: function is declared as Perl_foo rather than foo
:         embed.h: "#define foo Perl_foo" entries added
:
:   R  Return value must not be ignored (also implied by 'a' flag):
:
:        proto.h: add __attribute__warn_unused_result__
:
:   r  Function never returns:
:
:        proto.h: add __attribute__noreturn__
:
:   s  Static function: function in source code has a S_ prefix:
:
:         proto.h: function is declared as S_foo rather than foo,
:                STATIC is added to declaration;
:         embed.h: "#define foo S_foo" entries added
:
:   U  Suppress usage example in autogenerated documentation
:
:         (currently no effect)
:
:   X  Explicitly exported:
:
:         add entry to the list of exported symbols, unless x or m
:
:      This is often used for private functions that are used by public
:      macros.  In those cases the macros must use the long form of the
:      name (Perl_blah(aTHX_ ...)).
:
:   x  Not exported
:
:         suppress entry in the list of exported symbols
:
: (see also L<perlguts/Internal Functions> for those flags.)
:
: Pointer parameters that must not be passed NULLs should be prefixed with NN.
:
: Pointer parameters that may be NULL should be prefixed with NULLOK.  This has
: no effect on output yet.  It's a notation for the maintainers to know "I have
: defined whether NULL is OK or not" rather than having neither NULL or NULLOK,
: which is ambiguous.
:
: Individual flags may be separated by whitespace.

#if defined(PERL_IMPLICIT_SYS)
Ano	|PerlInterpreter*|perl_alloc_using \
				|NN struct IPerlMem *ipM \
				|NN struct IPerlMem *ipMS \
				|NN struct IPerlMem *ipMP \
				|NN struct IPerlEnv *ipE \
				|NN struct IPerlStdIO *ipStd \
				|NN struct IPerlLIO *ipLIO \
				|NN struct IPerlDir *ipD \
				|NN struct IPerlSock *ipS \
				|NN struct IPerlProc *ipP
#endif
Anod	|PerlInterpreter*	|perl_alloc
Anod	|void	|perl_construct	|NN PerlInterpreter *my_perl
Anod	|int	|perl_destruct	|NN PerlInterpreter *my_perl
Anod	|void	|perl_free	|NN PerlInterpreter *my_perl
Anod	|int	|perl_run	|NN PerlInterpreter *my_perl
Anod	|int	|perl_parse	|NN PerlInterpreter *my_perl|XSINIT_t xsinit \
				|int argc|NULLOK char** argv|NULLOK char** env
AnpR	|bool	|doing_taint	|int argc|NULLOK char** argv|NULLOK char** env
#if defined(USE_ITHREADS)
Anod	|PerlInterpreter*|perl_clone|NN PerlInterpreter *proto_perl|UV flags
#  if defined(PERL_IMPLICIT_SYS)
Ano	|PerlInterpreter*|perl_clone_using \
				|NN PerlInterpreter *proto_perl \
				|UV flags \
				|NN struct IPerlMem* ipM \
				|NN struct IPerlMem* ipMS \
				|NN struct IPerlMem* ipMP \
				|NN struct IPerlEnv* ipE \
				|NN struct IPerlStdIO* ipStd \
				|NN struct IPerlLIO* ipLIO \
				|NN struct IPerlDir* ipD \
				|NN struct IPerlSock* ipS \
				|NN struct IPerlProc* ipP
#  endif
#endif

Aanop	|Malloc_t|malloc	|MEM_SIZE nbytes
Aanop	|Malloc_t|calloc	|MEM_SIZE elements|MEM_SIZE size
Aanop	|Malloc_t|realloc	|Malloc_t where|MEM_SIZE nbytes
Anop	|Free_t	|mfree		|Malloc_t where
#if defined(MYMALLOC)
npR	|MEM_SIZE|malloced_size	|NN void *p
npR	|MEM_SIZE|malloc_good_size	|size_t nbytes
#endif
#if defined(PERL_IN_MALLOC_C)
sn	|int	|adjust_size_and_find_bucket	|NN size_t *nbytes_p
#endif

AnpR	|void*	|get_context
Anp	|void	|set_context	|NN void *t

XEop	|bool	|try_amagic_bin	|int method|int flags
XEop	|bool	|try_amagic_un	|int method|int flags
Ap	|SV*	|amagic_call	|NN SV* left|NN SV* right|int method|int dir
Ap	|SV *	|amagic_deref_call|NN SV *ref|int method
p	|bool	|amagic_is_enabled|int method
Ap	|int	|Gv_AMupdate	|NN HV* stash|bool destructing
ApR	|CV*	|gv_handler	|NULLOK HV* stash|I32 id
Apd	|OP*	|op_append_elem	|I32 optype|NULLOK OP* first|NULLOK OP* last
Apd	|OP*	|op_append_list	|I32 optype|NULLOK OP* first|NULLOK OP* last
Apd	|OP*	|op_linklist	|NN OP *o
Apd	|OP*	|op_prepend_elem|I32 optype|NULLOK OP* first|NULLOK OP* last
: FIXME - this is only called by pp_chown. They should be merged.
p	|I32	|apply		|I32 type|NN SV** mark|NN SV** sp
ApM	|void	|apply_attrs_string|NN const char *stashpv|NN CV *cv|NN const char *attrstr|STRLEN len
Apd	|void	|av_clear	|NN AV *av
Apd	|SV*	|av_delete	|NN AV *av|SSize_t key|I32 flags
ApdR	|bool	|av_exists	|NN AV *av|SSize_t key
Apd	|void	|av_extend	|NN AV *av|SSize_t key
p	|void	|av_extend_guts	|NULLOK AV *av|SSize_t key \
				|NN SSize_t *maxp \
				|NN SV ***allocp|NN SV ***arrayp
ApdR	|SV**	|av_fetch	|NN AV *av|SSize_t key|I32 lval
Apd	|void	|av_fill	|NN AV *av|SSize_t fill
ApdR	|SSize_t|av_len		|NN AV *av
ApdR	|AV*	|av_make	|SSize_t size|NN SV **strp
Apd	|SV*	|av_pop		|NN AV *av
ApdoxM	|void	|av_create_and_push|NN AV **const avp|NN SV *const val
Apd	|void	|av_push	|NN AV *av|NN SV *val
: Used in scope.c, and by Data::Alias
EXp	|void	|av_reify	|NN AV *av
ApdR	|SV*	|av_shift	|NN AV *av
Apd	|SV**	|av_store	|NN AV *av|SSize_t key|NULLOK SV *val
#ifndef PERL_NO_INLINE_FUNCTIONS
AidR	|SSize_t|av_top_index	|NN AV *av
#endif
AmpdR	|SSize_t|av_tindex	|NN AV *av
Apd	|void	|av_undef	|NN AV *av
ApdoxM	|SV**	|av_create_and_unshift_one|NN AV **const avp|NN SV *const val
Apd	|void	|av_unshift	|NN AV *av|SSize_t num
Apo	|SV**	|av_arylen_p	|NN AV *av
Apo	|IV*	|av_iter_p	|NN AV *av
#if defined(PERL_IN_AV_C)
s	|MAGIC*	|get_aux_mg	|NN AV *av
#endif
: Used in perly.y
pR	|OP*	|bind_match	|I32 type|NN OP *left|NN OP *right
: Used in perly.y
ApdR	|OP*	|block_end	|I32 floor|NULLOK OP* seq
ApR	|U8	|block_gimme
: Used in perly.y
ApdR	|int	|block_start	|int full
Aodp	|void	|blockhook_register |NN BHK *hk
: Used in perl.c
p	|void	|boot_core_UNIVERSAL
: Used in perl.c
p	|void	|boot_core_PerlIO
Ap	|void	|call_list	|I32 oldscope|NN AV *paramList
Apd	|const PERL_CONTEXT *	|caller_cx|I32 level \
				|NULLOK const PERL_CONTEXT **dbcxp
: Used in several source files
pR	|bool	|cando		|Mode_t mode|bool effective|NN const Stat_t* statbufp
ApRn	|U32	|cast_ulong	|NV f
ApRn	|I32	|cast_i32	|NV f
ApRn	|IV	|cast_iv	|NV f
ApRn	|UV	|cast_uv	|NV f
#if !defined(HAS_TRUNCATE) && !defined(HAS_CHSIZE) && defined(F_FREESP)
ApR	|I32	|my_chsize	|int fd|Off_t length
#endif
p	|const COP*|closest_cop	|NN const COP *cop|NULLOK const OP *o \
				|NULLOK const OP *curop|bool opnext
: Used in perly.y
ApdR	|OP*	|op_convert_list	|I32 optype|I32 flags|NULLOK OP* o
: Used in op.c and perl.c
pM	|void	|create_eval_scope|NULLOK OP *retop|U32 flags
Aprd	|void	|croak_sv	|NN SV *baseex
: croak()'s first parm can be NULL.  Otherwise, mod_perl breaks.
Afprd	|void	|croak		|NULLOK const char* pat|...
Aprd	|void	|vcroak		|NULLOK const char* pat|NULLOK va_list* args
Anprd	|void	|croak_no_modify
Anprd	|void	|croak_xs_usage	|NN const CV *const cv \
				|NN const char *const params
npr	|void	|croak_no_mem
nprX	|void	|croak_popstack
fnprx	|void	|noperl_die|NN const char* pat|...
#if defined(WIN32)
norx	|void	|win32_croak_not_implemented|NN const char * fname
#endif
#if defined(PERL_IMPLICIT_CONTEXT)
Afnrp	|void	|croak_nocontext|NULLOK const char* pat|...
Afnrp  |OP*    |die_nocontext  |NULLOK const char* pat|...
Afnp	|void	|deb_nocontext	|NN const char* pat|...
Afnp	|char*	|form_nocontext	|NN const char* pat|...
Anp	|void	|load_module_nocontext|U32 flags|NN SV* name|NULLOK SV* ver|...
Afnp	|SV*	|mess_nocontext	|NN const char* pat|...
Afnp	|void	|warn_nocontext	|NN const char* pat|...
Afnp	|void	|warner_nocontext|U32 err|NN const char* pat|...
Afnp	|SV*	|newSVpvf_nocontext|NN const char *const pat|...
Afnp	|void	|sv_catpvf_nocontext|NN SV *const sv|NN const char *const pat|...
Afnp	|void	|sv_setpvf_nocontext|NN SV *const sv|NN const char *const pat|...
Afnp	|void	|sv_catpvf_mg_nocontext|NN SV *const sv|NN const char *const pat|...
Afnp	|void	|sv_setpvf_mg_nocontext|NN SV *const sv|NN const char *const pat|...
Afnp	|int	|fprintf_nocontext|NN PerlIO *stream|NN const char *format|...
Afnp	|int	|printf_nocontext|NN const char *format|...
#endif
: Used in pp.c
p	|SV *	|core_prototype	|NULLOK SV *sv|NN const char *name \
				|const int code|NULLOK int * const opnum
: Used in gv.c
p	|OP *	|coresub_op	|NN SV *const coreargssv|const int code \
				|const int opnum
: Used in sv.c
EMXp	|void	|cv_ckproto_len_flags	|NN const CV* cv|NULLOK const GV* gv\
				|NULLOK const char* p|const STRLEN len \
                                |const U32 flags
: Used in pp.c and pp_sys.c
ApdR	|SV*	|gv_const_sv	|NN GV* gv
ApdRn	|SV*	|cv_const_sv	|NULLOK const CV *const cv
pRn	|SV*	|cv_const_sv_or_av|NULLOK const CV *const cv
Apd	|SV *	|cv_name	|NN CV *cv|NULLOK SV *sv|U32 flags
Apd	|void	|cv_undef	|NN CV* cv
p	|void	|cv_undef_flags	|NN CV* cv|U32 flags
p	|void	|cv_forget_slab	|NULLOK CV *cv
Ap	|void	|cx_dump	|NN PERL_CONTEXT* cx
Ap	|SV*	|filter_add	|NULLOK filter_t funcp|NULLOK SV* datasv
Ap	|void	|filter_del	|NN filter_t funcp
ApR	|I32	|filter_read	|int idx|NN SV *buf_sv|int maxlen
ApPR	|char**	|get_op_descs
ApPR	|char**	|get_op_names
: FIXME discussion on p5p
pPR	|const char*	|get_no_modify
: FIXME discussion on p5p
pPR	|U32*	|get_opargs
ApPR	|PPADDR_t*|get_ppaddr
: Used by CXINC, which appears to be in widespread use
ApR	|I32	|cxinc
Afp	|void	|deb		|NN const char* pat|...
Ap	|void	|vdeb		|NN const char* pat|NULLOK va_list* args
Ap	|void	|debprofdump
EXp	|SV*	|multideref_stringify	|NN const OP* o|NULLOK CV *cv
Ap	|I32	|debop		|NN const OP* o
Ap	|I32	|debstack
Ap	|I32	|debstackptrs
pR	|SV *	|defelem_target	|NN SV *sv|NULLOK MAGIC *mg
Anp	|char*	|delimcpy	|NN char* to|NN const char* toend|NN const char* from \
				|NN const char* fromend|int delim|NN I32* retlen
: Used in op.c, perl.c
pM	|void	|delete_eval_scope
Aprd    |OP*    |die_sv         |NN SV *baseex
Afrpd   |OP*    |die            |NULLOK const char* pat|...
: Used in util.c
pr	|void	|die_unwind	|NN SV* msv
Ap	|void	|dounwind	|I32 cxix
: FIXME
pmb	|bool|do_aexec	|NULLOK SV* really|NN SV** mark|NN SV** sp
: Used in pp_sys.c
p	|bool|do_aexec5	|NULLOK SV* really|NN SV** mark|NN SV** sp|int fd|int do_report
Ap	|int	|do_binmode	|NN PerlIO *fp|int iotype|int mode
: Used in pp.c
Ap	|bool	|do_close	|NULLOK GV* gv|bool not_implicit
: Defined in doio.c, used only in pp_sys.c
p	|bool	|do_eof		|NN GV* gv

#ifdef PERL_DEFAULT_DO_EXEC3_IMPLEMENTATION
pm	|bool|do_exec	|NN const char* cmd
#else
p	|bool|do_exec	|NN const char* cmd
#endif

#if defined(WIN32) || defined(__SYMBIAN32__) || defined(VMS)
Ap	|int	|do_aspawn	|NULLOK SV* really|NN SV** mark|NN SV** sp
Ap	|int	|do_spawn	|NN char* cmd
Ap	|int	|do_spawn_nowait|NN char* cmd
#endif
#if !defined(WIN32)
p	|bool|do_exec3	|NN const char *incmd|int fd|int do_report
#endif
p	|void	|do_execfree
#if defined(PERL_IN_DOIO_C)
s	|void	|exec_failed	|NN const char *cmd|int fd|int do_report
#endif
#if defined(HAS_MSG) || defined(HAS_SEM) || defined(HAS_SHM)
: Defined in doio.c, used only in pp_sys.c
p	|I32	|do_ipcctl	|I32 optype|NN SV** mark|NN SV** sp
: Defined in doio.c, used only in pp_sys.c
p	|I32	|do_ipcget	|I32 optype|NN SV** mark|NN SV** sp
: Defined in doio.c, used only in pp_sys.c
p	|I32	|do_msgrcv	|NN SV** mark|NN SV** sp
: Defined in doio.c, used only in pp_sys.c
p	|I32	|do_msgsnd	|NN SV** mark|NN SV** sp
: Defined in doio.c, used only in pp_sys.c
p	|I32	|do_semop	|NN SV** mark|NN SV** sp
: Defined in doio.c, used only in pp_sys.c
p	|I32	|do_shmio	|I32 optype|NN SV** mark|NN SV** sp
#endif
Ap	|void	|do_join	|NN SV *sv|NN SV *delim|NN SV **mark|NN SV **sp
: Used in pp.c and pp_hot.c, prototype generated by regen/opcode.pl
: p	|OP*	|do_kv
: used in pp.c, pp_hot.c
pR	|I32	|do_ncmp	|NN SV *const left|NN SV *const right
Apmb	|bool	|do_open	|NN GV* gv|NN const char* name|I32 len|int as_raw \
				|int rawmode|int rawperm|NULLOK PerlIO* supplied_fp
Ap	|bool	|do_open9	|NN GV *gv|NN const char *name|I32 len|int as_raw \
				|int rawmode|int rawperm|NULLOK PerlIO *supplied_fp \
				|NN SV *svs|I32 num
#if defined(PERL_IN_DOIO_C)
s	|IO *	|openn_setup    |NN GV *gv|NN char *mode|NN PerlIO **saveifp \
				|NN PerlIO **saveofp|NN int *savefd \
                                |NN char *savetype
s	|bool	|openn_cleanup	|NN GV *gv|NN IO *io|NULLOK PerlIO *fp \
				|NN char *mode|NN const char *oname \
                                |NULLOK PerlIO *saveifp|NULLOK PerlIO *saveofp \
                                |int savefd|char savetype|int writing \
                                |bool was_fdopen|NULLOK const char *type
#endif
Ap	|bool	|do_openn	|NN GV *gv|NN const char *oname|I32 len \
				|int as_raw|int rawmode|int rawperm \
				|NULLOK PerlIO *supplied_fp|NULLOK SV **svp \
				|I32 num
Mp	|bool	|do_open_raw	|NN GV *gv|NN const char *oname|STRLEN len \
				|int rawmode|int rawperm
Mp	|bool	|do_open6	|NN GV *gv|NN const char *oname|STRLEN len \
				|NULLOK PerlIO *supplied_fp|NULLOK SV **svp \
				|U32 num
: Used in pp_hot.c and pp_sys.c
p	|bool	|do_print	|NULLOK SV* sv|NN PerlIO* fp
: Used in pp_sys.c
pR	|OP*	|do_readline
: Defined in doio.c, used only in pp_sys.c
p	|bool	|do_seek	|NULLOK GV* gv|Off_t pos|int whence
Ap	|void	|do_sprintf	|NN SV* sv|I32 len|NN SV** sarg
: Defined in doio.c, used only in pp_sys.c
p	|Off_t	|do_sysseek	|NN GV* gv|Off_t pos|int whence
: Defined in doio.c, used only in pp_sys.c
pR	|Off_t	|do_tell	|NN GV* gv
: Defined in doop.c, used only in pp.c
p	|I32	|do_trans	|NN SV* sv
: Used in my.c and pp.c
p	|UV	|do_vecget	|NN SV* sv|SSize_t offset|int size
: Defined in doop.c, used only in mg.c (with /* XXX slurp this routine */)
p	|void	|do_vecset	|NN SV* sv
: Defined in doop.c, used only in pp.c
p	|void	|do_vop		|I32 optype|NN SV* sv|NN SV* left|NN SV* right
: Used in perly.y
p	|OP*	|dofile		|NN OP* term|I32 force_builtin
ApR	|U8	|dowantarray
Ap	|void	|dump_all
p	|void	|dump_all_perl	|bool justperl
Ap	|void	|dump_eval
Ap	|void	|dump_form	|NN const GV* gv
Ap	|void	|gv_dump	|NULLOK GV* gv
Ap	|void	|op_dump	|NN const OP *o
Ap	|void	|pmop_dump	|NULLOK PMOP* pm
Ap	|void	|dump_packsubs	|NN const HV* stash
p	|void	|dump_packsubs_perl	|NN const HV* stash|bool justperl
Ap	|void	|dump_sub	|NN const GV* gv
p	|void	|dump_sub_perl	|NN const GV* gv|bool justperl
Apd	|void	|fbm_compile	|NN SV* sv|U32 flags
ApdR	|char*	|fbm_instr	|NN unsigned char* big|NN unsigned char* bigend \
				|NN SV* littlestr|U32 flags
p	|CV *	|find_lexical_cv|PADOFFSET off
pR	|OP *	|parse_subsignature
: Defined in util.c, used only in perl.c
p	|char*	|find_script	|NN const char *scriptname|bool dosearch \
				|NULLOK const char *const *const search_ext|I32 flags
#if defined(PERL_IN_OP_C)
s	|OP*	|force_list	|NULLOK OP* arg|bool nullit
i	|OP*	|op_integerize	|NN OP *o
i	|OP*	|op_std_init	|NN OP *o
#if defined(USE_ITHREADS)
i	|void	|op_relocate_sv	|NN SV** svp|NN PADOFFSET* targp
#endif
i	|OP*	|newMETHOP_internal	|I32 type|I32 flags|NULLOK OP* dynamic_meth \
					|NULLOK SV* const_meth
: FIXME
s	|OP*	|fold_constants	|NN OP *o
#endif
Afpd	|char*	|form		|NN const char* pat|...
Ap	|char*	|vform		|NN const char* pat|NULLOK va_list* args
Ap	|void	|free_tmps
#if defined(PERL_IN_OP_C)
s	|OP*	|gen_constant_list|NULLOK OP* o
#endif
#if !defined(HAS_GETENV_LEN)
: Used in hv.c
p	|char*	|getenv_len	|NN const char *env_elem|NN unsigned long *len
#endif
: Used in pp_ctl.c and pp_hot.c
pox	|void	|get_db_sub	|NULLOK SV **svp|NN CV *cv
Ap	|void	|gp_free	|NULLOK GV* gv
Ap	|GP*	|gp_ref		|NULLOK GP* gp
Ap	|GV*	|gv_add_by_type	|NULLOK GV *gv|svtype type
Apmb	|GV*	|gv_AVadd	|NULLOK GV *gv
Apmb	|GV*	|gv_HVadd	|NULLOK GV *gv
Apmb	|GV*	|gv_IOadd	|NULLOK GV* gv
AmR	|GV*	|gv_autoload4	|NULLOK HV* stash|NN const char* name \
				|STRLEN len|I32 method
ApR	|GV*	|gv_autoload_sv	|NULLOK HV* stash|NN SV* namesv|U32 flags
ApR	|GV*	|gv_autoload_pv	|NULLOK HV* stash|NN const char* namepv \
                                |U32 flags
ApR	|GV*	|gv_autoload_pvn	|NULLOK HV* stash|NN const char* name \
                                        |STRLEN len|U32 flags
Ap	|void	|gv_check	|NN HV* stash
Ap	|void	|gv_efullname	|NN SV* sv|NN const GV* gv
Apmb	|void	|gv_efullname3	|NN SV* sv|NN const GV* gv|NULLOK const char* prefix
Ap	|void	|gv_efullname4	|NN SV* sv|NN const GV* gv|NULLOK const char* prefix|bool keepmain
Ap	|GV*	|gv_fetchfile	|NN const char* name
Ap	|GV*	|gv_fetchfile_flags|NN const char *const name|const STRLEN len\
				|const U32 flags
Amd	|GV*	|gv_fetchmeth	|NULLOK HV* stash|NN const char* name \
				|STRLEN len|I32 level
Apd	|GV*	|gv_fetchmeth_sv	|NULLOK HV* stash|NN SV* namesv|I32 level|U32 flags
Apd	|GV*	|gv_fetchmeth_pv	|NULLOK HV* stash|NN const char* name \
                                        |I32 level|U32 flags
Apd	|GV*	|gv_fetchmeth_pvn	|NULLOK HV* stash|NN const char* name \
                                        |STRLEN len|I32 level|U32 flags
Amd	|GV*	|gv_fetchmeth_autoload	|NULLOK HV* stash \
					|NN const char* name|STRLEN len \
					|I32 level
Apd	|GV*	|gv_fetchmeth_sv_autoload	|NULLOK HV* stash|NN SV* namesv|I32 level|U32 flags
Apd	|GV*	|gv_fetchmeth_pv_autoload	|NULLOK HV* stash|NN const char* name \
                                        |I32 level|U32 flags
Apd	|GV*	|gv_fetchmeth_pvn_autoload	|NULLOK HV* stash|NN const char* name \
                                        |STRLEN len|I32 level|U32 flags
Apdmb	|GV*	|gv_fetchmethod	|NN HV* stash|NN const char* name
Apd	|GV*	|gv_fetchmethod_autoload|NN HV* stash|NN const char* name \
				|I32 autoload
ApM	|GV*	|gv_fetchmethod_sv_flags|NN HV* stash|NN SV* namesv|U32 flags
ApM	|GV*	|gv_fetchmethod_pv_flags|NN HV* stash|NN const char* name \
 				|U32 flags
ApM	|GV*	|gv_fetchmethod_pvn_flags|NN HV* stash|NN const char* name \
				|const STRLEN len|U32 flags
Ap	|GV*	|gv_fetchpv	|NN const char *nambeg|I32 add|const svtype sv_type
Ap	|void	|gv_fullname	|NN SV* sv|NN const GV* gv
Apmb	|void	|gv_fullname3	|NN SV* sv|NN const GV* gv|NULLOK const char* prefix
Ap	|void	|gv_fullname4	|NN SV* sv|NN const GV* gv|NULLOK const char* prefix|bool keepmain
: Used in scope.c
pMox	|GP *	|newGP		|NN GV *const gv
pX	|void	|cvgv_set	|NN CV* cv|NULLOK GV* gv
poX	|GV *	|cvgv_from_hek	|NN CV* cv
pX	|void	|cvstash_set	|NN CV* cv|NULLOK HV* stash
Amd	|void	|gv_init	|NN GV* gv|NULLOK HV* stash \
                                |NN const char* name|STRLEN len|int multi
Ap	|void	|gv_init_sv	|NN GV* gv|NULLOK HV* stash|NN SV* namesv|U32 flags
Ap	|void	|gv_init_pv	|NN GV* gv|NULLOK HV* stash|NN const char* name \
                                |U32 flags
Ap	|void	|gv_init_pvn	|NN GV* gv|NULLOK HV* stash|NN const char* name \
                                |STRLEN len|U32 flags
Ap	|void	|gv_name_set	|NN GV* gv|NN const char *name|U32 len|U32 flags
px	|GV *	|gv_override	|NN const char * const name \
				|const STRLEN len
XMpd	|void	|gv_try_downgrade|NN GV* gv
p	|void	|gv_setref	|NN SV *const dstr|NN SV *const sstr
Apd	|HV*	|gv_stashpv	|NN const char* name|I32 flags
Apd	|HV*	|gv_stashpvn	|NN const char* name|U32 namelen|I32 flags
#if defined(PERL_IN_GV_C)
i	|HV*	|gv_stashpvn_internal	|NN const char* name|U32 namelen|I32 flags
i	|HV*	|gv_stashsvpvn_cached	|NULLOK SV *namesv|NULLOK const char* name|U32 namelen|I32 flags
i	|GV*	|gv_fetchmeth_internal	|NULLOK HV* stash|NULLOK SV* meth|NULLOK const char* name \
					|STRLEN len|I32 level|U32 flags
#endif
Apd	|HV*	|gv_stashsv	|NN SV* sv|I32 flags
Apd	|void	|hv_clear	|NULLOK HV *hv
: used in SAVEHINTS() and op.c
ApdR	|HV *	|hv_copy_hints_hv|NULLOK HV *const ohv
Ap	|void	|hv_delayfree_ent|NN HV *hv|NULLOK HE *entry
Abmd	|SV*	|hv_delete	|NULLOK HV *hv|NN const char *key|I32 klen \
				|I32 flags
Abmd	|SV*	|hv_delete_ent	|NULLOK HV *hv|NN SV *keysv|I32 flags|U32 hash
AbmdR	|bool	|hv_exists	|NULLOK HV *hv|NN const char *key|I32 klen
AbmdR	|bool	|hv_exists_ent	|NULLOK HV *hv|NN SV *keysv|U32 hash
Abmd	|SV**	|hv_fetch	|NULLOK HV *hv|NN const char *key|I32 klen \
				|I32 lval
Abmd	|HE*	|hv_fetch_ent	|NULLOK HV *hv|NN SV *keysv|I32 lval|U32 hash
Ap	|void*	|hv_common	|NULLOK HV *hv|NULLOK SV *keysv \
				|NULLOK const char* key|STRLEN klen|int flags \
				|int action|NULLOK SV *val|U32 hash
Ap	|void*	|hv_common_key_len|NULLOK HV *hv|NN const char *key \
				|I32 klen_i32|const int action|NULLOK SV *val \
				|const U32 hash
Apod	|STRLEN	|hv_fill	|NN HV *const hv
Ap	|void	|hv_free_ent	|NN HV *hv|NULLOK HE *entry
Apd	|I32	|hv_iterinit	|NN HV *hv
ApdR	|char*	|hv_iterkey	|NN HE* entry|NN I32* retlen
ApdR	|SV*	|hv_iterkeysv	|NN HE* entry
ApdRbm	|HE*	|hv_iternext	|NN HV *hv
ApdR	|SV*	|hv_iternextsv	|NN HV *hv|NN char **key|NN I32 *retlen
ApMdR	|HE*	|hv_iternext_flags|NN HV *hv|I32 flags
ApdR	|SV*	|hv_iterval	|NN HV *hv|NN HE *entry
Ap	|void	|hv_ksplit	|NN HV *hv|IV newmax
Apdbm	|void	|hv_magic	|NN HV *hv|NULLOK GV *gv|int how
#if defined(PERL_IN_HV_C)
s	|SV *	|refcounted_he_value	|NN const struct refcounted_he *he
#endif
Xpd	|HV *	|refcounted_he_chain_2hv|NULLOK const struct refcounted_he *c|U32 flags
Xpd	|SV *	|refcounted_he_fetch_pvn|NULLOK const struct refcounted_he *chain \
				|NN const char *keypv|STRLEN keylen|U32 hash|U32 flags
Xpd	|SV *	|refcounted_he_fetch_pv|NULLOK const struct refcounted_he *chain \
				|NN const char *key|U32 hash|U32 flags
Xpd	|SV *	|refcounted_he_fetch_sv|NULLOK const struct refcounted_he *chain \
				|NN SV *key|U32 hash|U32 flags
Xpd	|struct refcounted_he *|refcounted_he_new_pvn \
				|NULLOK struct refcounted_he *parent \
				|NN const char *keypv|STRLEN keylen \
				|U32 hash|NULLOK SV *value|U32 flags
Xpd	|struct refcounted_he *|refcounted_he_new_pv \
				|NULLOK struct refcounted_he *parent \
				|NN const char *key \
				|U32 hash|NULLOK SV *value|U32 flags
Xpd	|struct refcounted_he *|refcounted_he_new_sv \
				|NULLOK struct refcounted_he *parent \
				|NN SV *key \
				|U32 hash|NULLOK SV *value|U32 flags
Xpd	|void	|refcounted_he_free|NULLOK struct refcounted_he *he
Xpd	|struct refcounted_he *|refcounted_he_inc|NULLOK struct refcounted_he *he
Abmd	|SV**	|hv_store	|NULLOK HV *hv|NULLOK const char *key \
				|I32 klen|NULLOK SV *val|U32 hash
Abmd	|HE*	|hv_store_ent	|NULLOK HV *hv|NULLOK SV *key|NULLOK SV *val\
				|U32 hash
AbmM	|SV**	|hv_store_flags	|NULLOK HV *hv|NULLOK const char *key \
				|I32 klen|NULLOK SV *val|U32 hash|int flags
Amd	|void	|hv_undef	|NULLOK HV *hv
poX	|void	|hv_undef_flags	|NULLOK HV *hv|U32 flags
Am	|I32	|ibcmp		|NN const char* a|NN const char* b|I32 len
AnpP	|I32	|foldEQ		|NN const char* a|NN const char* b|I32 len
Am	|I32	|ibcmp_locale	|NN const char* a|NN const char* b|I32 len
AnpP	|I32	|foldEQ_locale	|NN const char* a|NN const char* b|I32 len
Am	|I32	|ibcmp_utf8	|NN const char *s1|NULLOK char **pe1|UV l1 \
				|bool u1|NN const char *s2|NULLOK char **pe2 \
				|UV l2|bool u2
Amd	|I32	|foldEQ_utf8	|NN const char *s1|NULLOK char **pe1|UV l1 \
				|bool u1|NN const char *s2|NULLOK char **pe2 \
				|UV l2|bool u2
AMp	|I32	|foldEQ_utf8_flags |NN const char *s1|NULLOK char **pe1|UV l1 \
				|bool u1|NN const char *s2|NULLOK char **pe2 \
				|UV l2|bool u2|U32 flags
AnpP	|I32	|foldEQ_latin1	|NN const char* a|NN const char* b|I32 len
#if defined(PERL_IN_DOIO_C)
sR	|bool	|ingroup	|Gid_t testgid|bool effective
#endif
: Used in toke.c
p	|void	|init_argv_symbols|int argc|NN char **argv
: Used in pp_ctl.c
po	|void	|init_dbargs
: Used in mg.c
p	|void	|init_debugger
Ap	|void	|init_stacks
Ap	|void	|init_tm	|NN struct tm *ptm
: Used in perly.y
AnpPR	|char*	|instr		|NN const char* big|NN const char* little
: Used in sv.c
p	|bool	|io_close	|NN IO* io|NULLOK GV *gv \
				|bool not_implicit|bool warn_on_fail
: Used in perly.y
pR	|OP*	|invert		|NULLOK OP* cmd
ApR	|I32	|is_lvalue_sub
: Used in cop.h
XopR	|I32	|was_lvalue_sub
#ifndef PERL_NO_INLINE_FUNCTIONS
AiMRn	|STRLEN	|_is_utf8_char_slow|NN const U8 *s|NN const U8 *e
#endif
ADMpPR	|U32	|to_uni_upper_lc|U32 c
ADMpPR	|U32	|to_uni_title_lc|U32 c
ADMpPR	|U32	|to_uni_lower_lc|U32 c
ADMpPR	|bool	|is_uni_alnum	|UV c
ADMpPR	|bool	|is_uni_alnumc	|UV c
ADMpPR	|bool	|is_uni_idfirst	|UV c
ADMpPR	|bool	|is_uni_alpha	|UV c
ADMpPR	|bool	|is_uni_ascii	|UV c
ADMpPR	|bool	|is_uni_blank	|UV c
ADMpPR	|bool	|is_uni_space	|UV c
ADMpPR	|bool	|is_uni_cntrl	|UV c
ADMpPR	|bool	|is_uni_graph	|UV c
ADMpPR	|bool	|is_uni_digit	|UV c
ADMpPR	|bool	|is_uni_upper	|UV c
ADMpPR	|bool	|is_uni_lower	|UV c
ADMpPR	|bool	|is_uni_print	|UV c
ADMpPR	|bool	|is_uni_punct	|UV c
ADMpPR	|bool	|is_uni_xdigit	|UV c
AMp	|UV	|to_uni_upper	|UV c|NN U8 *p|NN STRLEN *lenp
AMp	|UV	|to_uni_title	|UV c|NN U8 *p|NN STRLEN *lenp
ADMpPR	|bool	|isIDFIRST_lazy	|NN const char* p
ADMpPR	|bool	|isALNUM_lazy	|NN const char* p
#ifdef PERL_IN_UTF8_C
snR	|U8	|to_lower_latin1|const U8 c|NULLOK U8 *p|NULLOK STRLEN *lenp
#endif
#if defined(PERL_IN_UTF8_C) || defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_REGEXEC_C)
EXp        |UV        |_to_fold_latin1|const U8 c|NN U8 *p|NN STRLEN *lenp|const unsigned int flags
#endif
#if defined(PERL_IN_UTF8_C) || defined(PERL_IN_PP_C)
p	|UV	|_to_upper_title_latin1|const U8 c|NN U8 *p|NN STRLEN *lenp|const char S_or_s
#endif
AMp	|UV	|to_uni_lower	|UV c|NN U8 *p|NN STRLEN *lenp
AMmp	|UV	|to_uni_fold	|UV c|NN U8 *p|NN STRLEN *lenp
AMp	|UV	|_to_uni_fold_flags|UV c|NN U8 *p|NN STRLEN *lenp|U8 flags
ADMpPR	|bool	|is_uni_alnum_lc|UV c
ADMpPR	|bool	|is_uni_alnumc_lc|UV c
ADMpPR	|bool	|is_uni_idfirst_lc|UV c
AMpR	|bool	|_is_uni_perl_idcont|UV c
AMpR	|bool	|_is_uni_perl_idstart|UV c
ADMpPR	|bool	|is_uni_alpha_lc|UV c
ADMpPR	|bool	|is_uni_ascii_lc|UV c
ADMpPR	|bool	|is_uni_space_lc|UV c
ADMpPR	|bool	|is_uni_blank_lc|UV c
ADMpPR	|bool	|is_uni_cntrl_lc|UV c
ADMpPR	|bool	|is_uni_graph_lc|UV c
ADMpPR	|bool	|is_uni_digit_lc|UV c
ADMpPR	|bool	|is_uni_upper_lc|UV c
ADMpPR	|bool	|is_uni_lower_lc|UV c
ADMpPR	|bool	|is_uni_print_lc|UV c
ADMpPR	|bool	|is_uni_punct_lc|UV c
ADMpPR	|bool	|is_uni_xdigit_lc|UV c
AnpdR	|bool	|is_invariant_string|NN const U8 *s|STRLEN len
AmpdR	|bool	|is_ascii_string|NN const U8 *s|STRLEN len
AnpdD	|STRLEN	|is_utf8_char	|NN const U8 *s
Abmnpd	|STRLEN	|is_utf8_char_buf|NN const U8 *buf|NN const U8 *buf_end
Anpd	|bool	|is_utf8_string	|NN const U8 *s|STRLEN len
Anpdmb	|bool	|is_utf8_string_loc|NN const U8 *s|STRLEN len|NULLOK const U8 **ep
Anpd	|bool	|is_utf8_string_loclen|NN const U8 *s|STRLEN len|NULLOK const U8 **ep|NULLOK STRLEN *el
AMpR	|bool	|_is_uni_FOO|const U8 classnum|const UV c
AMpR	|bool	|_is_utf8_FOO|const U8 classnum|NN const U8 *p
ADMpR	|bool	|is_utf8_alnum	|NN const U8 *p
ADMpR	|bool	|is_utf8_alnumc	|NN const U8 *p
ADMpR	|bool	|is_utf8_idfirst|NN const U8 *p
ADMpR	|bool	|is_utf8_xidfirst|NN const U8 *p
AMpR	|bool	|_is_utf8_idcont|NN const U8 *p
AMpR	|bool	|_is_utf8_idstart|NN const U8 *p
AMpR	|bool	|_is_utf8_xidcont|NN const U8 *p
AMpR	|bool	|_is_utf8_xidstart|NN const U8 *p
AMpR	|bool	|_is_utf8_perl_idcont|NN const U8 *p
AMpR	|bool	|_is_utf8_perl_idstart|NN const U8 *p
ADMpR	|bool	|is_utf8_idcont	|NN const U8 *p
ADMpR	|bool	|is_utf8_xidcont	|NN const U8 *p
ADMpR	|bool	|is_utf8_alpha	|NN const U8 *p
ADMpR	|bool	|is_utf8_ascii	|NN const U8 *p
ADMpR	|bool	|is_utf8_blank	|NN const U8 *p
ADMpR	|bool	|is_utf8_space	|NN const U8 *p
ADMpR	|bool	|is_utf8_perl_space	|NN const U8 *p
ADMpR	|bool	|is_utf8_perl_word	|NN const U8 *p
ADMpR	|bool	|is_utf8_cntrl	|NN const U8 *p
ADMpR	|bool	|is_utf8_digit	|NN const U8 *p
ADMpR	|bool	|is_utf8_posix_digit	|NN const U8 *p
ADMpR	|bool	|is_utf8_graph	|NN const U8 *p
ADMpR	|bool	|is_utf8_upper	|NN const U8 *p
ADMpR	|bool	|is_utf8_lower	|NN const U8 *p
ADMpR	|bool	|is_utf8_print	|NN const U8 *p
ADMpR	|bool	|is_utf8_punct	|NN const U8 *p
ADMpR	|bool	|is_utf8_xdigit	|NN const U8 *p
AMpR	|bool	|_is_utf8_mark	|NN const U8 *p
ADMpR	|bool	|is_utf8_mark	|NN const U8 *p
: Used in perly.y
p	|OP*	|jmaybe		|NN OP *o
: Used in pp.c 
pP	|I32	|keyword	|NN const char *name|I32 len|bool all_keywords
#if defined(PERL_IN_OP_C)
s	|void	|inplace_aassign	|NN OP* o
#endif
Ap	|void	|leave_scope	|I32 base
: Public lexer API
AMpd	|void	|lex_start	|NULLOK SV* line|NULLOK PerlIO *rsfp|U32 flags
AMpd	|bool	|lex_bufutf8
AMpd	|char*	|lex_grow_linestr|STRLEN len
AMpd	|void	|lex_stuff_pvn	|NN const char* pv|STRLEN len|U32 flags
AMpd	|void	|lex_stuff_pv	|NN const char* pv|U32 flags
AMpd	|void	|lex_stuff_sv	|NN SV* sv|U32 flags
AMpd	|void	|lex_unstuff	|NN char* ptr
AMpd	|void	|lex_read_to	|NN char* ptr
AMpd	|void	|lex_discard_to	|NN char* ptr
AMpd	|bool	|lex_next_chunk	|U32 flags
AMpd	|I32	|lex_peek_unichar|U32 flags
AMpd	|I32	|lex_read_unichar|U32 flags
AMpd	|void	|lex_read_space	|U32 flags
: Public parser API
AMpd	|OP*	|parse_arithexpr|U32 flags
AMpd	|OP*	|parse_termexpr	|U32 flags
AMpd	|OP*	|parse_listexpr	|U32 flags
AMpd	|OP*	|parse_fullexpr	|U32 flags
AMpd	|OP*	|parse_block	|U32 flags
AMpd	|OP*	|parse_barestmt	|U32 flags
AMpd	|SV*	|parse_label	|U32 flags
AMpd	|OP*	|parse_fullstmt	|U32 flags
AMpd	|OP*	|parse_stmtseq	|U32 flags
: Used in various files
Apd	|void	|op_null	|NN OP* o
: FIXME. Used by Data::Alias
EXp	|void	|op_clear	|NN OP* o
Ap	|void	|op_refcnt_lock
Ap	|void	|op_refcnt_unlock
Apdn	|OP*	|op_sibling_splice|NULLOK OP *parent|NULLOK OP *start \
		|int del_count|NULLOK OP* insert
#ifdef PERL_OP_PARENT
Apdn	|OP*	|op_parent|NN OP *o
#endif
#if defined(PERL_IN_OP_C)
s	|OP*	|listkids	|NULLOK OP* o
#endif
p	|OP*	|list		|NULLOK OP* o
Apd	|void	|load_module|U32 flags|NN SV* name|NULLOK SV* ver|...
Ap	|void	|vload_module|U32 flags|NN SV* name|NULLOK SV* ver|NULLOK va_list* args
: Used in perly.y
p	|OP*	|localize	|NN OP *o|I32 lex
ApdR	|I32	|looks_like_number|NN SV *const sv
Apd	|UV	|grok_bin	|NN const char* start|NN STRLEN* len_p|NN I32* flags|NULLOK NV *result
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_TOKE_C) || defined(PERL_IN_DQUOTE_C)
EMpRX	|bool	|grok_bslash_x	|NN char** s|NN UV* uv           \
				|NN const char** error_msg       \
				|const bool output_warning       \
				|const bool strict               \
				|const bool silence_non_portable \
				|const bool utf8
EMpRX	|char	|grok_bslash_c	|const char source|const bool output_warning
EMpRX	|bool	|grok_bslash_o	|NN char** s|NN UV* uv           \
				|NN const char** error_msg       \
				|const bool output_warning       \
				|const bool strict               \
				|const bool silence_non_portable \
				|const bool utf8
EMiR	|char*|form_short_octal_warning|NN const char * const s  \
				|const STRLEN len
EiPRn	|I32	|regcurly	|NN const char *s
#endif
Apd	|UV	|grok_hex	|NN const char* start|NN STRLEN* len_p|NN I32* flags|NULLOK NV *result
Apd	|int	|grok_infnan	|NN const char** sp|NN const char *send
Apd	|int	|grok_number	|NN const char *pv|STRLEN len|NULLOK UV *valuep
Apd	|int	|grok_number_flags|NN const char *pv|STRLEN len|NULLOK UV *valuep|U32 flags
ApdR	|bool	|grok_numeric_radix|NN const char **sp|NN const char *send
Apd	|UV	|grok_oct	|NN const char* start|NN STRLEN* len_p|NN I32* flags|NULLOK NV *result
EXpn	|bool	|grok_atoUV	|NN const char* pv|NN UV* valptr|NULLOK const char** endptr
: These are all indirectly referenced by globals.c. This is somewhat annoying.
p	|int	|magic_clearenv	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_clear_all_env|NN SV* sv|NN MAGIC* mg
dp	|int	|magic_clearhint|NN SV* sv|NN MAGIC* mg
dp	|int	|magic_clearhints|NN SV* sv|NN MAGIC* mg
p	|int	|magic_clearisa	|NULLOK SV* sv|NN MAGIC* mg
p	|int	|magic_clearpack|NN SV* sv|NN MAGIC* mg
p	|int	|magic_clearsig	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_copycallchecker|NN SV* sv|NN MAGIC *mg|NN SV *nsv \
				      |NULLOK const char *name|I32 namlen
p	|int	|magic_existspack|NN SV* sv|NN const MAGIC* mg
p	|int	|magic_freeovrld|NN SV* sv|NN MAGIC* mg
p	|int	|magic_get	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getarylen|NN SV* sv|NN const MAGIC* mg
p	|int	|magic_getdefelem|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getdebugvar|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getnkeys	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getpack	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getpos	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getsig	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getsubstr|NN SV* sv|NN MAGIC* mg
p	|int	|magic_gettaint	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getuvar	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getvec	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_nextpack	|NN SV *sv|NN MAGIC *mg|NN SV *key
p	|U32	|magic_regdata_cnt|NN SV* sv|NN MAGIC* mg
p	|int	|magic_regdatum_get|NN SV* sv|NN MAGIC* mg
:removing noreturn to silence a warning for this function resulted in no
:change to the interpreter DLL image under VS 2003 -O1 -GL 32 bits only because
:this is used in a magic vtable, do not use this on conventionally called funcs
#ifdef _MSC_VER
p	|int	|magic_regdatum_set|NN SV* sv|NN MAGIC* mg
#else
pr	|int	|magic_regdatum_set|NN SV* sv|NN MAGIC* mg
#endif
p	|int	|magic_set	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setarylen|NN SV* sv|NN MAGIC* mg
p	|int	|magic_cleararylen_p|NN SV* sv|NN MAGIC* mg
p	|int	|magic_freearylen_p|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setdbline|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setdebugvar|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setdefelem|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setenv	|NN SV* sv|NN MAGIC* mg
dp	|int	|magic_sethint	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setisa	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setlvref	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setmglob	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setnkeys	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setpack	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setpos	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setregexp|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setsig	|NULLOK SV* sv|NN MAGIC* mg
p	|int	|magic_setsubstr|NN SV* sv|NN MAGIC* mg
p	|int	|magic_settaint	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setuvar	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setvec	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setutf8	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_set_all_env|NN SV* sv|NN MAGIC* mg
p	|U32	|magic_sizepack	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_wipepack	|NN SV* sv|NN MAGIC* mg
pod	|SV*	|magic_methcall	|NN SV *sv|NN const MAGIC *mg \
				|NN SV *meth|U32 flags \
				|U32 argc|...
Ap	|I32 *	|markstack_grow
#if defined(USE_LOCALE_COLLATE)
p	|int	|magic_setcollxfrm|NN SV* sv|NN MAGIC* mg
: Defined in locale.c, used only in sv.c
p	|char*	|mem_collxfrm	|NN const char* s|STRLEN len|NN STRLEN* xlen
#endif
Afpd	|SV*	|mess		|NN const char* pat|...
Apd	|SV*	|mess_sv	|NN SV* basemsg|bool consume
Apd	|SV*	|vmess		|NN const char* pat|NULLOK va_list* args
: FIXME - either make it public, or stop exporting it. (Data::Alias uses this)
: Used in gv.c, op.c, toke.c
EXp	|void	|qerror		|NN SV* err
Apd	|void	|sortsv		|NULLOK SV** array|size_t num_elts|NN SVCOMPARE_t cmp
Apd	|void	|sortsv_flags	|NULLOK SV** array|size_t num_elts|NN SVCOMPARE_t cmp|U32 flags
Apd	|int	|mg_clear	|NN SV* sv
Apd	|int	|mg_copy	|NN SV *sv|NN SV *nsv|NULLOK const char *key \
				|I32 klen
: Defined in mg.c, used only in scope.c
pd	|void	|mg_localize	|NN SV* sv|NN SV* nsv|bool setmagic
ApdRn	|MAGIC*	|mg_find	|NULLOK const SV* sv|int type
ApdRn	|MAGIC*	|mg_findext	|NULLOK const SV* sv|int type|NULLOK const MGVTBL *vtbl
: exported for re.pm
EXpR	|MAGIC*	|mg_find_mglob	|NN SV* sv
Apd	|int	|mg_free	|NN SV* sv
Apd	|void	|mg_free_type	|NN SV* sv|int how
Apd	|int	|mg_get		|NN SV* sv
ApdD	|U32	|mg_length	|NN SV* sv
Apdn	|void	|mg_magical	|NN SV* sv
Apd	|int	|mg_set		|NN SV* sv
Ap	|I32	|mg_size	|NN SV* sv
Apn	|void	|mini_mktime	|NN struct tm *ptm
AMmd	|OP*	|op_lvalue	|NULLOK OP* o|I32 type
poX	|OP*	|op_lvalue_flags|NULLOK OP* o|I32 type|U32 flags
p	|void	|finalize_optree		|NN OP* o
#if defined(PERL_IN_OP_C)
s	|void	|finalize_op	|NN OP* o
s	|void	|move_proto_attr|NN OP **proto|NN OP **attrs|NN const GV *name
#endif
: Used in op.c and pp_sys.c
p	|int	|mode_from_discipline|NULLOK const char* s|STRLEN len
Ap	|const char*	|moreswitches	|NN const char* s
Ap	|NV	|my_atof	|NN const char *s
#if !defined(HAS_MEMCPY) || (!defined(HAS_MEMMOVE) && !defined(HAS_SAFE_MEMCPY))
Anp	|void*	|my_bcopy	|NN const void* vfrom|NN void* vto|size_t len
#endif
#if !defined(HAS_BZERO) && !defined(HAS_MEMSET)
Anp	|void*	|my_bzero	|NN void* vloc|size_t len
#endif
Apr	|void	|my_exit	|U32 status
Apr	|void	|my_failure_exit
Ap	|I32	|my_fflush_all
Anp	|Pid_t	|my_fork
Anp	|void	|atfork_lock
Anp	|void	|atfork_unlock
Apmb	|I32	|my_lstat
pX	|I32	|my_lstat_flags	|NULLOK const U32 flags
#if !defined(HAS_MEMCMP) || !defined(HAS_SANE_MEMCMP)
AnpP	|int	|my_memcmp	|NN const void* vs1|NN const void* vs2|size_t len
#endif
#if !defined(HAS_MEMSET)
Anp	|void*	|my_memset	|NN void* vloc|int ch|size_t len
#endif
#if !defined(PERL_IMPLICIT_SYS)
Ap	|I32	|my_pclose	|NULLOK PerlIO* ptr
Ap	|PerlIO*|my_popen	|NN const char* cmd|NN const char* mode
#endif
Ap	|PerlIO*|my_popen_list	|NN const char* mode|int n|NN SV ** args
Ap	|void	|my_setenv	|NULLOK const char* nam|NULLOK const char* val
Apmb	|I32	|my_stat
pX	|I32	|my_stat_flags	|NULLOK const U32 flags
Afp	|char *	|my_strftime	|NN const char *fmt|int sec|int min|int hour|int mday|int mon|int year|int wday|int yday|int isdst
: Used in pp_ctl.c
p	|void	|my_unexec
ADMnoPR	|UV	|NATIVE_TO_NEED	|const UV enc|const UV ch
ADMnoPR	|UV	|ASCII_TO_NEED	|const UV enc|const UV ch
Apa	|OP*	|newANONLIST	|NULLOK OP* o
Apa	|OP*	|newANONHASH	|NULLOK OP* o
Ap	|OP*	|newANONSUB	|I32 floor|NULLOK OP* proto|NULLOK OP* block
Apda	|OP*	|newASSIGNOP	|I32 flags|NULLOK OP* left|I32 optype|NULLOK OP* right
Apda	|OP*	|newCONDOP	|I32 flags|NN OP* first|NULLOK OP* trueop|NULLOK OP* falseop
Apd	|CV*	|newCONSTSUB	|NULLOK HV* stash|NULLOK const char* name|NULLOK SV* sv
Apd	|CV*	|newCONSTSUB_flags|NULLOK HV* stash \
				  |NULLOK const char* name|STRLEN len \
				  |U32 flags|NULLOK SV* sv
Ap	|void	|newFORM	|I32 floor|NULLOK OP* o|NULLOK OP* block
Apda	|OP*	|newFOROP	|I32 flags|NULLOK OP* sv|NN OP* expr|NULLOK OP* block|NULLOK OP* cont
Apda	|OP*	|newGIVENOP	|NN OP* cond|NN OP* block|PADOFFSET defsv_off
Apda	|OP*	|newLOGOP	|I32 optype|I32 flags|NN OP *first|NN OP *other
Apda	|OP*	|newLOOPEX	|I32 type|NN OP* label
Apda	|OP*	|newLOOPOP	|I32 flags|I32 debuggable|NULLOK OP* expr|NULLOK OP* block
Apda	|OP*	|newNULLLIST
Apda	|OP*	|newOP		|I32 optype|I32 flags
Ap	|void	|newPROG	|NN OP* o
Apda	|OP*	|newRANGE	|I32 flags|NN OP* left|NN OP* right
Apda	|OP*	|newSLICEOP	|I32 flags|NULLOK OP* subscript|NULLOK OP* listop
Apda	|OP*	|newSTATEOP	|I32 flags|NULLOK char* label|NULLOK OP* o
Abm	|CV*	|newSUB		|I32 floor|NULLOK OP* o|NULLOK OP* proto \
				|NULLOK OP* block
p	|CV *	|newXS_len_flags|NULLOK const char *name|STRLEN len \
				|NN XSUBADDR_t subaddr\
				|NULLOK const char *const filename \
				|NULLOK const char *const proto \
				|NULLOK SV **const_svp|U32 flags
pX	|CV *	|newXS_deffile	|NN const char *name|NN XSUBADDR_t subaddr
ApM	|CV *	|newXS_flags	|NULLOK const char *name|NN XSUBADDR_t subaddr\
				|NN const char *const filename \
				|NULLOK const char *const proto|U32 flags
Apd	|CV*	|newXS		|NULLOK const char *name|NN XSUBADDR_t subaddr\
				|NN const char *filename
AmdbR	|AV*	|newAV
Apa	|OP*	|newAVREF	|NN OP* o
Apda	|OP*	|newBINOP	|I32 type|I32 flags|NULLOK OP* first|NULLOK OP* last
Apa	|OP*	|newCVREF	|I32 flags|NULLOK OP* o
Apda	|OP*	|newGVOP	|I32 type|I32 flags|NN GV* gv
Am	|GV*	|newGVgen	|NN const char* pack
Apa	|GV*	|newGVgen_flags	|NN const char* pack|U32 flags
Apa	|OP*	|newGVREF	|I32 type|NULLOK OP* o
ApaR	|OP*	|newHVREF	|NN OP* o
AmdbR	|HV*	|newHV
ApaR	|HV*	|newHVhv	|NULLOK HV *hv
Apabm	|IO*	|newIO
Apda	|OP*	|newLISTOP	|I32 type|I32 flags|NULLOK OP* first|NULLOK OP* last
AMpdan	|PADNAME *|newPADNAMEouter|NN PADNAME *outer
AMpdan	|PADNAME *|newPADNAMEpvn|NN const char *s|STRLEN len
AMpdan	|PADNAMELIST *|newPADNAMELIST|size_t max
#ifdef USE_ITHREADS
Apda	|OP*	|newPADOP	|I32 type|I32 flags|NN SV* sv
#endif
Apda	|OP*	|newPMOP	|I32 type|I32 flags
Apda	|OP*	|newPVOP	|I32 type|I32 flags|NULLOK char* pv
Apa	|SV*	|newRV		|NN SV *const sv
Apda	|SV*	|newRV_noinc	|NN SV *const tmpRef
Apda	|SV*	|newSV		|const STRLEN len
Apa	|OP*	|newSVREF	|NN OP* o
Apda	|OP*	|newSVOP	|I32 type|I32 flags|NN SV* sv
ApdR	|OP*	|newDEFSVOP
pa	|SV*	|newSVavdefelem	|NN AV *av|SSize_t ix|bool extendible
Apda	|SV*	|newSViv	|const IV i
Apda	|SV*	|newSVuv	|const UV u
Apda	|SV*	|newSVnv	|const NV n
Apda	|SV*	|newSVpv	|NULLOK const char *const s|const STRLEN len
Apda	|SV*	|newSVpvn	|NULLOK const char *const s|const STRLEN len
Apda	|SV*	|newSVpvn_flags	|NULLOK const char *const s|const STRLEN len|const U32 flags
Apda	|SV*	|newSVhek	|NULLOK const HEK *const hek
Apda	|SV*	|newSVpvn_share	|NULLOK const char* s|I32 len|U32 hash
Apda	|SV*	|newSVpv_share	|NULLOK const char* s|U32 hash
Afpda	|SV*	|newSVpvf	|NN const char *const pat|...
Apa	|SV*	|vnewSVpvf	|NN const char *const pat|NULLOK va_list *const args
Apd	|SV*	|newSVrv	|NN SV *const rv|NULLOK const char *const classname
Apda	|SV*	|newSVsv	|NULLOK SV *const old
Apda	|SV*	|newSV_type	|const svtype type
Apda	|OP*	|newUNOP	|I32 type|I32 flags|NULLOK OP* first
Apda	|OP*	|newUNOP_AUX	|I32 type|I32 flags|NULLOK OP* first \
				|NULLOK UNOP_AUX_item *aux
Apda	|OP*	|newWHENOP	|NULLOK OP* cond|NN OP* block
Apda	|OP*	|newWHILEOP	|I32 flags|I32 debuggable|NULLOK LOOP* loop \
				|NULLOK OP* expr|NULLOK OP* block|NULLOK OP* cont \
				|I32 has_my
Apda	|OP*	|newMETHOP	|I32 type|I32 flags|NN OP* dynamic_meth
Apda	|OP*	|newMETHOP_named|I32 type|I32 flags|NN SV* const_meth
Apd	|CV*	|rv2cv_op_cv	|NN OP *cvop|U32 flags
Apd	|OP*	|ck_entersub_args_list|NN OP *entersubop
Apd	|OP*	|ck_entersub_args_proto|NN OP *entersubop|NN GV *namegv|NN SV *protosv
Apd	|OP*	|ck_entersub_args_proto_or_list|NN OP *entersubop|NN GV *namegv|NN SV *protosv
po	|OP*	|ck_entersub_args_core|NN OP *entersubop|NN GV *namegv \
				      |NN SV *protosv
Apd	|void	|cv_get_call_checker|NN CV *cv|NN Perl_call_checker *ckfun_p|NN SV **ckobj_p
Apd	|void	|cv_set_call_checker|NN CV *cv|NN Perl_call_checker ckfun|NN SV *ckobj
Apd	|void	|cv_set_call_checker_flags|NN CV *cv \
					  |NN Perl_call_checker ckfun \
					  |NN SV *ckobj|U32 flags
Apd	|void	|wrap_op_checker|Optype opcode|NN Perl_check_t new_checker|NN Perl_check_t *old_checker_p
Apa	|PERL_SI*|new_stackinfo|I32 stitems|I32 cxitems
Ap	|char*	|scan_vstring	|NN const char *s|NN const char *const e \
				|NN SV *sv
Apd	|const char*	|scan_version	|NN const char *s|NN SV *rv|bool qv
Apd	|const char*	|prescan_version	|NN const char *s\
	|bool strict|NULLOK const char** errstr|NULLOK bool *sqv\
	|NULLOK int *ssaw_decimal|NULLOK int *swidth|NULLOK bool *salpha
Apd	|SV*	|new_version	|NN SV *ver
Apd	|SV*	|upg_version	|NN SV *ver|bool qv
Apd	|SV*	|vverify	|NN SV *vs
Apd	|SV*	|vnumify	|NN SV *vs
Apd	|SV*	|vnormal	|NN SV *vs
Apd	|SV*	|vstringify	|NN SV *vs
Apd	|int	|vcmp		|NN SV *lhv|NN SV *rhv
: Used in pp_hot.c and pp_sys.c
p	|PerlIO*|nextargv	|NN GV* gv|bool nomagicopen
AnpP	|char*	|ninstr		|NN const char* big|NN const char* bigend \
				|NN const char* little|NN const char* lend
Apd	|void	|op_free	|NULLOK OP* arg
Mp	|OP*	|op_unscope	|NULLOK OP* o
#ifdef PERL_CORE
p	|void	|opslab_free	|NN OPSLAB *slab
p	|void	|opslab_free_nopad|NN OPSLAB *slab
p	|void	|opslab_force_free|NN OPSLAB *slab
#endif
: Used in perly.y
p	|void	|package	|NN OP* o
: Used in perly.y
p	|void	|package_version|NN OP* v
: Used in toke.c and perly.y
p	|PADOFFSET|allocmy	|NN const char *const name|const STRLEN len\
				|const U32 flags
#ifdef USE_ITHREADS
AMp	|PADOFFSET|alloccopstash|NN HV *hv
#endif
: Used in perly.y
pR	|OP*	|oopsAV		|NN OP* o
: Used in perly.y
pR	|OP*	|oopsHV		|NN OP* o

: peephole optimiser
p	|void	|peep		|NULLOK OP* o
p	|void	|rpeep		|NULLOK OP* o
: Defined in doio.c, used only in pp_hot.c
dopM	|PerlIO*|start_glob	|NN SV *tmpglob|NN IO *io

Ap	|void	|reentrant_size
Ap	|void	|reentrant_init
Ap	|void	|reentrant_free
Anp	|void*	|reentrant_retry|NN const char *f|...

: "Very" special - can't use the O flag for this one:
: (The rename from perl_atexit to Perl_call_atexit was in 864dbfa3ca8032ef)
Ap	|void	|call_atexit	|ATEXIT_t fn|NULLOK void *ptr
ApdO	|I32	|call_argv	|NN const char* sub_name|I32 flags|NN char** argv
ApdO	|I32	|call_method	|NN const char* methname|I32 flags
ApdO	|I32	|call_pv	|NN const char* sub_name|I32 flags
ApdO	|I32	|call_sv	|NN SV* sv|VOL I32 flags
Ap	|void	|despatch_signals
Ap	|OP *	|doref		|NN OP *o|I32 type|bool set_op_ref
ApdO	|SV*	|eval_pv	|NN const char* p|I32 croak_on_error
ApdO	|I32	|eval_sv	|NN SV* sv|I32 flags
ApdO	|SV*	|get_sv		|NN const char *name|I32 flags
ApdO	|AV*	|get_av		|NN const char *name|I32 flags
ApdO	|HV*	|get_hv		|NN const char *name|I32 flags
ApdO	|CV*	|get_cv		|NN const char* name|I32 flags
Apd	|CV*	|get_cvn_flags	|NN const char* name|STRLEN len|I32 flags
#ifdef WIN32
ApPM	|char*	|my_setlocale	|int category|NULLOK const char* locale
#else
AmPM	|char*	|my_setlocale	|int category|NULLOK const char* locale
#endif
ApOM	|int	|init_i18nl10n	|int printwarn
ApOM	|int	|init_i18nl14n	|int printwarn
ApM	|char*	|my_strerror	|const int errnum
ApOM	|void	|new_collate	|NULLOK const char* newcoll
ApOM	|void	|new_ctype	|NN const char* newctype
EXpMn	|void	|_warn_problematic_locale
ApOM	|void	|new_numeric	|NULLOK const char* newcoll
Ap	|void	|set_numeric_local
Ap	|void	|set_numeric_radix
Ap	|void	|set_numeric_standard
ApM	|bool	|_is_in_locale_category|const bool compiling|const int category
Apd	|void	|sync_locale
ApdO	|void	|require_pv	|NN const char* pv
Apd	|void	|pack_cat	|NN SV *cat|NN const char *pat|NN const char *patend \
				|NN SV **beglist|NN SV **endlist|NN SV ***next_in_list|U32 flags
Apd	|void	|packlist 	|NN SV *cat|NN const char *pat|NN const char *patend|NN SV **beglist|NN SV **endlist
#if defined(PERL_USES_PL_PIDSTATUS) && defined(PERL_IN_UTIL_C)
s	|void	|pidgone	|Pid_t pid|int status
#endif
: Used in perly.y
p	|OP*	|pmruntime	|NN OP *o|NN OP *expr|NULLOK OP *repl \
				|bool isreg|I32 floor
#if defined(PERL_IN_OP_C)
s	|OP*	|pmtrans	|NN OP* o|NN OP* expr|NN OP* repl
#endif
Ap	|void	|pop_scope
Ap	|void	|push_scope
Amb	|OP*	|ref		|NULLOK OP* o|I32 type
#if defined(PERL_IN_OP_C)
s	|OP*	|refkids	|NULLOK OP* o|I32 type
#endif
Ap	|void	|regdump	|NN const regexp* r
ApM	|SV*	|regclass_swash	|NULLOK const regexp *prog \
				|NN const struct regnode *node|bool doinit \
				|NULLOK SV **listsvp|NULLOK SV **altsvp
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_PERL_C) || defined(PERL_IN_UTF8_C)
AMpR	|SV*	|_new_invlist_C_array|NN const UV* const list
EXMp	|bool	|_invlistEQ	|NN SV* const a|NN SV* const b|const bool complement_b
#endif
Ap	|I32	|pregexec	|NN REGEXP * const prog|NN char* stringarg \
				|NN char* strend|NN char* strbeg \
				|SSize_t minend |NN SV* screamer|U32 nosave
Ap	|void	|pregfree	|NULLOK REGEXP* r
Ap	|void	|pregfree2	|NN REGEXP *rx
: FIXME - is anything in re using this now?
EXp	|REGEXP*|reg_temp_copy	|NULLOK REGEXP* ret_x|NN REGEXP* rx
Ap	|void	|regfree_internal|NN REGEXP *const rx
#if defined(USE_ITHREADS)
Ap	|void*	|regdupe_internal|NN REGEXP * const r|NN CLONE_PARAMS* param
#endif
EXp	|regexp_engine const *|current_re_engine
Ap	|REGEXP*|pregcomp	|NN SV * const pattern|const U32 flags
p	|REGEXP*|re_op_compile	|NULLOK SV ** const patternp \
				|int pat_count|NULLOK OP *expr \
				|NN const regexp_engine* eng \
				|NULLOK REGEXP *old_re \
				|NULLOK bool *is_bare_re \
				|U32 rx_flags|U32 pm_flags
Ap	|REGEXP*|re_compile	|NN SV * const pattern|U32 orig_rx_flags
Ap	|char*	|re_intuit_start|NN REGEXP * const rx \
				|NULLOK SV* sv \
				|NN const char* const strbeg \
				|NN char* strpos \
				|NN char* strend \
				|const U32 flags \
				|NULLOK re_scream_pos_data *data
Ap	|SV*	|re_intuit_string|NN REGEXP  *const r
Ap	|I32	|regexec_flags	|NN REGEXP *const rx|NN char *stringarg \
				|NN char *strend|NN char *strbeg \
				|SSize_t minend|NN SV *sv \
				|NULLOK void *data|U32 flags
ApR	|regnode*|regnext	|NULLOK regnode* p
EXp |SV*|reg_named_buff          |NN REGEXP * const rx|NULLOK SV * const key \
                                 |NULLOK SV * const value|const U32 flags
EXp |SV*|reg_named_buff_iter     |NN REGEXP * const rx|NULLOK const SV * const lastkey \
                                 |const U32 flags
Ap |SV*|reg_named_buff_fetch    |NN REGEXP * const rx|NN SV * const namesv|const U32 flags
Ap |bool|reg_named_buff_exists  |NN REGEXP * const rx|NN SV * const key|const U32 flags
Ap |SV*|reg_named_buff_firstkey |NN REGEXP * const rx|const U32 flags
Ap |SV*|reg_named_buff_nextkey  |NN REGEXP * const rx|const U32 flags
Ap |SV*|reg_named_buff_scalar   |NN REGEXP * const rx|const U32 flags
Ap |SV*|reg_named_buff_all      |NN REGEXP * const rx|const U32 flags

: FIXME - is anything in re using this now?
EXp	|void|reg_numbered_buff_fetch|NN REGEXP * const rx|const I32 paren|NULLOK SV * const sv
: FIXME - is anything in re using this now?
EXp	|void|reg_numbered_buff_store|NN REGEXP * const rx|const I32 paren|NULLOK SV const * const value
: FIXME - is anything in re using this now?
EXp	|I32|reg_numbered_buff_length|NN REGEXP * const rx|NN const SV * const sv|const I32 paren

: FIXME - is anything in re using this now?
EXp	|SV*|reg_qr_package|NN REGEXP * const rx

Anp	|void	|repeatcpy	|NN char* to|NN const char* from|I32 len|IV count
AnpP	|char*	|rninstr	|NN const char* big|NN const char* bigend \
				|NN const char* little|NN const char* lend
Ap	|Sighandler_t|rsignal	|int i|Sighandler_t t
: Used in pp_sys.c
p	|int	|rsignal_restore|int i|NULLOK Sigsave_t* t
: Used in pp_sys.c
p	|int	|rsignal_save	|int i|Sighandler_t t1|NN Sigsave_t* save
Ap	|Sighandler_t|rsignal_state|int i
#if defined(PERL_IN_PP_CTL_C)
s	|void	|rxres_free	|NN void** rsp
s	|void	|rxres_restore	|NN void **rsp|NN REGEXP *rx
#endif
: Used in pp_hot.c
p	|void	|rxres_save	|NN void **rsp|NN REGEXP *rx
#if !defined(HAS_RENAME)
: Used in pp_sys.c
p	|I32	|same_dirent	|NN const char* a|NN const char* b
#endif
Apda	|char*	|savepv		|NULLOK const char* pv
Apda	|char*	|savepvn	|NULLOK const char* pv|I32 len
Apda	|char*	|savesharedpv	|NULLOK const char* pv

: NULLOK only to suppress a compiler warning
Apda	|char*	|savesharedpvn	|NULLOK const char *const pv \
				|const STRLEN len
Apda	|char*	|savesharedsvpv	|NN SV *sv
Apda	|char*	|savesvpv	|NN SV* sv
Ap	|void	|savestack_grow
Ap	|void	|savestack_grow_cnt	|I32 need
Amp	|void	|save_aelem	|NN AV* av|SSize_t idx|NN SV **sptr
Ap	|void	|save_aelem_flags|NN AV* av|SSize_t idx|NN SV **sptr \
				 |const U32 flags
Ap	|I32	|save_alloc	|I32 size|I32 pad
Ap	|void	|save_aptr	|NN AV** aptr
Ap	|AV*	|save_ary	|NN GV* gv
Ap	|void	|save_bool	|NN bool* boolp
Ap	|void	|save_clearsv	|NN SV** svp
Ap	|void	|save_delete	|NN HV *hv|NN char *key|I32 klen
Ap	|void	|save_hdelete	|NN HV *hv|NN SV *keysv
Ap	|void	|save_adelete	|NN AV *av|SSize_t key
Ap	|void	|save_destructor|DESTRUCTORFUNC_NOCONTEXT_t f|NN void* p
Ap	|void	|save_destructor_x|DESTRUCTORFUNC_t f|NULLOK void* p
Apmb	|void	|save_freesv	|NULLOK SV* sv
: Used in SAVEFREOP(), used in op.c, pp_ctl.c
Apmb	|void	|save_freeop	|NULLOK OP* o
Apmb	|void	|save_freepv	|NULLOK char* pv
Ap	|void	|save_generic_svref|NN SV** sptr
Ap	|void	|save_generic_pvref|NN char** str
Ap	|void	|save_shared_pvref|NN char** str
Adp	|void	|save_gp	|NN GV* gv|I32 empty
Ap	|HV*	|save_hash	|NN GV* gv
Ap	|void	|save_hints
Amp	|void	|save_helem	|NN HV *hv|NN SV *key|NN SV **sptr
Ap	|void	|save_helem_flags|NN HV *hv|NN SV *key|NN SV **sptr|const U32 flags
Ap	|void	|save_hptr	|NN HV** hptr
Ap	|void	|save_I16	|NN I16* intp
Ap	|void	|save_I32	|NN I32* intp
Ap	|void	|save_I8	|NN I8* bytep
Ap	|void	|save_int	|NN int* intp
Ap	|void	|save_item	|NN SV* item
Ap	|void	|save_iv	|NN IV *ivp
Ap	|void	|save_list	|NN SV** sarg|I32 maxsarg
Ap	|void	|save_long	|NN long* longp
Apmb	|void	|save_mortalizesv|NN SV* sv
Ap	|void	|save_nogv	|NN GV* gv
: Used in SAVEFREOP(), used in gv.c, op.c, perl.c, pp_ctl.c, pp_sort.c
Apmb	|void	|save_op
Ap	|SV*	|save_scalar	|NN GV* gv
Ap	|void	|save_pptr	|NN char** pptr
Ap	|void	|save_vptr	|NN void *ptr
Ap	|void	|save_re_context
Ap	|void	|save_padsv_and_mortalize|PADOFFSET off
Ap	|void	|save_sptr	|NN SV** sptr
Xp	|void	|save_strlen	|NN STRLEN* ptr
Ap	|SV*	|save_svref	|NN SV** sptr
AMpo	|void	|savetmps
Ap	|void	|save_pushptr	|NULLOK void *const ptr|const int type
Ap	|void	|save_pushi32ptr|const I32 i|NULLOK void *const ptr|const int type
: Used by SAVESWITCHSTACK() in pp.c
Ap	|void	|save_pushptrptr|NULLOK void *const ptr1 \
				|NULLOK void *const ptr2|const int type
#if defined(PERL_IN_SCOPE_C)
s	|void	|save_pushptri32ptr|NULLOK void *const ptr1|const I32 i \
				|NULLOK void *const ptr2|const int type
#endif
: Used in perly.y
p	|OP*	|sawparens	|NULLOK OP* o
Apd	|OP*	|op_contextualize|NN OP* o|I32 context
: Used in perly.y
p	|OP*	|scalar		|NULLOK OP* o
#if defined(PERL_IN_OP_C)
s	|OP*	|scalarkids	|NULLOK OP* o
s	|OP*	|scalarseq	|NULLOK OP* o
#endif
: Used in pp_ctl.c
p	|OP*	|scalarvoid	|NN OP* o
Apd	|NV	|scan_bin	|NN const char* start|STRLEN len|NN STRLEN* retlen
Apd	|NV	|scan_hex	|NN const char* start|STRLEN len|NN STRLEN* retlen
Ap	|char*	|scan_num	|NN const char* s|NN YYSTYPE *lvalp
Apd	|NV	|scan_oct	|NN const char* start|STRLEN len|NN STRLEN* retlen
AMpd	|OP*	|op_scope	|NULLOK OP* o
: Only used by perl.c/miniperl.c, but defined in caretx.c
px	|void	|set_caret_X
Apd	|void	|setdefout	|NN GV* gv
Ap	|HEK*	|share_hek	|NN const char* str|I32 len|U32 hash
#if defined(HAS_SIGACTION) && defined(SA_SIGINFO)
: Used in perl.c
np	|Signal_t |sighandler	|int sig|NULLOK siginfo_t *info|NULLOK void *uap
Anp	|Signal_t |csighandler	|int sig|NULLOK siginfo_t *info|NULLOK void *uap
#else
np	|Signal_t |sighandler	|int sig
Anp	|Signal_t |csighandler	|int sig
#endif
Ap	|SV**	|stack_grow	|NN SV** sp|NN SV** p|SSize_t n
Ap	|I32	|start_subparse	|I32 is_format|U32 flags
: Used in pp_ctl.c
p	|void	|sub_crush_depth|NN CV* cv
Amd	|bool	|sv_2bool	|NN SV *const sv
Apd	|bool	|sv_2bool_flags	|NN SV *sv|I32 flags
Apd	|CV*	|sv_2cv		|NULLOK SV* sv|NN HV **const st|NN GV **const gvp \
				|const I32 lref
Apd	|IO*	|sv_2io		|NN SV *const sv
#if defined(PERL_IN_SV_C)
s	|bool	|glob_2number	|NN GV* const gv
#endif
Amb	|IV	|sv_2iv		|NN SV *sv
Apd	|IV	|sv_2iv_flags	|NN SV *const sv|const I32 flags
Apd	|SV*	|sv_2mortal	|NULLOK SV *const sv
Apd	|NV	|sv_2nv_flags	|NN SV *const sv|const I32 flags
: Used in pp.c, pp_hot.c, sv.c
pMd	|SV*	|sv_2num	|NN SV *const sv
Amb	|char*	|sv_2pv		|NN SV *sv|NULLOK STRLEN *lp
Apd	|char*	|sv_2pv_flags	|NN SV *const sv|NULLOK STRLEN *const lp|const I32 flags
Apd	|char*	|sv_2pvutf8	|NN SV *sv|NULLOK STRLEN *const lp
Apd	|char*	|sv_2pvbyte	|NN SV *sv|NULLOK STRLEN *const lp
Ap	|char*	|sv_pvn_nomg	|NN SV* sv|NULLOK STRLEN* lp
Amb	|UV	|sv_2uv		|NN SV *sv
Apd	|UV	|sv_2uv_flags	|NN SV *const sv|const I32 flags
Apd	|IV	|sv_iv		|NN SV* sv
Apd	|UV	|sv_uv		|NN SV* sv
Apd	|NV	|sv_nv		|NN SV* sv
Apd	|char*	|sv_pvn		|NN SV *sv|NN STRLEN *lp
Apd	|char*	|sv_pvutf8n	|NN SV *sv|NN STRLEN *lp
Apd	|char*	|sv_pvbyten	|NN SV *sv|NN STRLEN *lp
Apd	|I32	|sv_true	|NULLOK SV *const sv
#if defined(PERL_IN_SV_C)
sd	|void	|sv_add_arena	|NN char *const ptr|const U32 size \
				|const U32 flags
#endif
Apdn	|void	|sv_backoff	|NN SV *const sv
Apd	|SV*	|sv_bless	|NN SV *const sv|NN HV *const stash
#if defined(PERL_DEBUG_READONLY_COW)
p	|void	|sv_buf_to_ro	|NN SV *sv
# if defined(PERL_IN_SV_C)
s	|void	|sv_buf_to_rw	|NN SV *sv
# endif
#endif
Afpd	|void	|sv_catpvf	|NN SV *const sv|NN const char *const pat|...
Apd	|void	|sv_vcatpvf	|NN SV *const sv|NN const char *const pat \
				|NULLOK va_list *const args
Apd	|void	|sv_catpv	|NN SV *const sv|NULLOK const char* ptr
Amdb	|void	|sv_catpvn	|NN SV *dsv|NN const char *sstr|STRLEN len
Amdb	|void	|sv_catsv	|NN SV *dstr|NULLOK SV *sstr
Apd	|void	|sv_chop	|NN SV *const sv|NULLOK const char *const ptr
: Used only in perl.c
pd	|I32	|sv_clean_all
: Used only in perl.c
pd	|void	|sv_clean_objs
Apd	|void	|sv_clear	|NN SV *const orig_sv
#if defined(PERL_IN_SV_C)
s	|bool	|curse		|NN SV * const sv|const bool check_refcnt
#endif
Aopd	|I32	|sv_cmp		|NULLOK SV *const sv1|NULLOK SV *const sv2
Apd	|I32	|sv_cmp_flags	|NULLOK SV *const sv1|NULLOK SV *const sv2 \
				|const U32 flags
Aopd	|I32	|sv_cmp_locale	|NULLOK SV *const sv1|NULLOK SV *const sv2
Apd	|I32	|sv_cmp_locale_flags	|NULLOK SV *const sv1 \
				|NULLOK SV *const sv2|const U32 flags
#if defined(USE_LOCALE_COLLATE)
Amd	|char*	|sv_collxfrm	|NN SV *const sv|NN STRLEN *const nxp
Apd	|char*	|sv_collxfrm_flags	|NN SV *const sv|NN STRLEN *const nxp|I32 const flags
#endif
Apd	|int	|getcwd_sv	|NN SV* sv
Apd	|void	|sv_dec		|NULLOK SV *const sv
Apd	|void	|sv_dec_nomg	|NULLOK SV *const sv
Ap	|void	|sv_dump	|NN SV* sv
ApdR	|bool	|sv_derived_from|NN SV* sv|NN const char *const name
ApdR	|bool	|sv_derived_from_sv|NN SV* sv|NN SV *namesv|U32 flags
ApdR	|bool	|sv_derived_from_pv|NN SV* sv|NN const char *const name|U32 flags
ApdR	|bool	|sv_derived_from_pvn|NN SV* sv|NN const char *const name \
                                    |const STRLEN len|U32 flags
ApdR	|bool	|sv_does	|NN SV* sv|NN const char *const name
ApdR	|bool	|sv_does_sv	|NN SV* sv|NN SV* namesv|U32 flags
ApdR	|bool	|sv_does_pv	|NN SV* sv|NN const char *const name|U32 flags
ApdR	|bool	|sv_does_pvn	|NN SV* sv|NN const char *const name|const STRLEN len \
                                |U32 flags
Amd	|I32	|sv_eq		|NULLOK SV* sv1|NULLOK SV* sv2
Apd	|I32	|sv_eq_flags	|NULLOK SV* sv1|NULLOK SV* sv2|const U32 flags
Apd	|void	|sv_free	|NULLOK SV *const sv
poMX	|void	|sv_free2	|NN SV *const sv|const U32 refcnt
: Used only in perl.c
pd	|void	|sv_free_arenas
Apd	|char*	|sv_gets	|NN SV *const sv|NN PerlIO *const fp|I32 append
Apd	|char*	|sv_grow	|NN SV *const sv|STRLEN newlen
Apd	|void	|sv_inc		|NULLOK SV *const sv
Apd	|void	|sv_inc_nomg	|NULLOK SV *const sv
Amdb	|void	|sv_insert	|NN SV *const bigstr|const STRLEN offset \
				|const STRLEN len|NN const char *const little \
				|const STRLEN littlelen
Apd	|void	|sv_insert_flags|NN SV *const bigstr|const STRLEN offset|const STRLEN len \
				|NN const char *const little|const STRLEN littlelen|const U32 flags
Apd	|int	|sv_isa		|NULLOK SV* sv|NN const char *const name
Apd	|int	|sv_isobject	|NULLOK SV* sv
Apd	|STRLEN	|sv_len		|NULLOK SV *const sv
Apd	|STRLEN	|sv_len_utf8	|NULLOK SV *const sv
p	|STRLEN	|sv_len_utf8_nomg|NN SV *const sv
Apd	|void	|sv_magic	|NN SV *const sv|NULLOK SV *const obj|const int how \
				|NULLOK const char *const name|const I32 namlen
Apd	|MAGIC *|sv_magicext	|NN SV *const sv|NULLOK SV *const obj|const int how \
				|NULLOK const MGVTBL *const vtbl|NULLOK const char *const name \
				|const I32 namlen
#ifndef PERL_NO_INLINE_FUNCTIONS
Ein	|bool	|sv_only_taint_gmagic|NN SV *sv
#endif
: exported for re.pm
EXp	|MAGIC *|sv_magicext_mglob|NN SV *sv
ApdbamR	|SV*	|sv_mortalcopy	|NULLOK SV *const oldsv
XpaR	|SV*	|sv_mortalcopy_flags|NULLOK SV *const oldsv|U32 flags
ApdR	|SV*	|sv_newmortal
Apd	|SV*	|sv_newref	|NULLOK SV *const sv
Ap	|char*	|sv_peek	|NULLOK SV* sv
Apd	|void	|sv_pos_u2b	|NULLOK SV *const sv|NN I32 *const offsetp|NULLOK I32 *const lenp
Apd	|STRLEN	|sv_pos_u2b_flags|NN SV *const sv|STRLEN uoffset \
				|NULLOK STRLEN *const lenp|U32 flags
Apd	|void	|sv_pos_b2u	|NULLOK SV *const sv|NN I32 *const offsetp
Apd	|STRLEN	|sv_pos_b2u_flags|NN SV *const sv|STRLEN const offset \
				 |U32 flags
Amdb	|char*	|sv_pvn_force	|NN SV* sv|NULLOK STRLEN* lp
Apd	|char*	|sv_pvutf8n_force|NN SV *const sv|NULLOK STRLEN *const lp
Apd	|char*	|sv_pvbyten_force|NN SV *const sv|NULLOK STRLEN *const lp
Apd	|char*	|sv_recode_to_utf8	|NN SV* sv|NN SV *encoding
Apd	|bool	|sv_cat_decode	|NN SV* dsv|NN SV *encoding|NN SV *ssv|NN int *offset \
				|NN char* tstr|int tlen
ApdR	|const char*	|sv_reftype	|NN const SV *const sv|const int ob
Apd	|SV*	|sv_ref	|NULLOK SV *dst|NN const SV *const sv|const int ob
Apd	|void	|sv_replace	|NN SV *const sv|NN SV *const nsv
Apd	|void	|sv_report_used
Apd	|void	|sv_reset	|NN const char* s|NULLOK HV *const stash
p	|void	|sv_resetpvn	|NULLOK const char* s|STRLEN len \
				|NULLOK HV *const stash
Afpd	|void	|sv_setpvf	|NN SV *const sv|NN const char *const pat|...
Apd	|void	|sv_vsetpvf	|NN SV *const sv|NN const char *const pat|NULLOK va_list *const args
Apd	|void	|sv_setiv	|NN SV *const sv|const IV num
Apdb	|void	|sv_setpviv	|NN SV *const sv|const IV num
Apd	|void	|sv_setuv	|NN SV *const sv|const UV num
Apd	|void	|sv_setnv	|NN SV *const sv|const NV num
Apd	|SV*	|sv_setref_iv	|NN SV *const rv|NULLOK const char *const classname|const IV iv
Apd	|SV*	|sv_setref_uv	|NN SV *const rv|NULLOK const char *const classname|const UV uv
Apd	|SV*	|sv_setref_nv	|NN SV *const rv|NULLOK const char *const classname|const NV nv
Apd	|SV*	|sv_setref_pv	|NN SV *const rv|NULLOK const char *const classname \
				|NULLOK void *const pv
Apd	|SV*	|sv_setref_pvn	|NN SV *const rv|NULLOK const char *const classname \
				|NN const char *const pv|const STRLEN n
Apd	|void	|sv_setpv	|NN SV *const sv|NULLOK const char *const ptr
Apd	|void	|sv_setpvn	|NN SV *const sv|NULLOK const char *const ptr|const STRLEN len
Xp	|void	|sv_sethek	|NN SV *const sv|NULLOK const HEK *const hek
Amdb	|void	|sv_setsv	|NN SV *dstr|NULLOK SV *sstr
Amdb	|void	|sv_taint	|NN SV* sv
ApdR	|bool	|sv_tainted	|NN SV *const sv
Apd	|int	|sv_unmagic	|NN SV *const sv|const int type
Apd	|int	|sv_unmagicext	|NN SV *const sv|const int type|NULLOK MGVTBL *vtbl
Apdmb	|void	|sv_unref	|NN SV* sv
Apd	|void	|sv_unref_flags	|NN SV *const ref|const U32 flags
Apd	|void	|sv_untaint	|NN SV *const sv
Apd	|void	|sv_upgrade	|NN SV *const sv|svtype new_type
Apdmb	|void	|sv_usepvn	|NN SV* sv|NULLOK char* ptr|STRLEN len
Apd	|void	|sv_usepvn_flags|NN SV *const sv|NULLOK char* ptr|const STRLEN len\
				|const U32 flags
Apd	|void	|sv_vcatpvfn	|NN SV *const sv|NN const char *const pat|const STRLEN patlen \
				|NULLOK va_list *const args|NULLOK SV **const svargs|const I32 svmax \
				|NULLOK bool *const maybe_tainted
Apd	|void	|sv_vcatpvfn_flags|NN SV *const sv|NN const char *const pat|const STRLEN patlen \
				|NULLOK va_list *const args|NULLOK SV **const svargs|const I32 svmax \
				|NULLOK bool *const maybe_tainted|const U32 flags
Apd	|void	|sv_vsetpvfn	|NN SV *const sv|NN const char *const pat|const STRLEN patlen \
				|NULLOK va_list *const args|NULLOK SV **const svargs \
				|const I32 svmax|NULLOK bool *const maybe_tainted
ApR	|NV	|str_to_version	|NN SV *sv
ApRM	|SV*	|swash_init	|NN const char* pkg|NN const char* name|NN SV* listsv|I32 minbits|I32 none
ApM	|UV	|swash_fetch	|NN SV *swash|NN const U8 *ptr|bool do_utf8
#ifdef PERL_IN_REGCOMP_C
EiMR	|SV*	|add_cp_to_invlist	|NULLOK SV* invlist|const UV cp
EsM	|void	|_append_range_to_invlist   |NN SV* const invlist|const UV start|const UV end
EiMRn	|UV*	|_invlist_array_init	|NN SV* const invlist|const bool will_have_0
EsM	|void	|invlist_extend    |NN SV* const invlist|const UV len
EiMRn	|UV	|invlist_max	|NN SV* const invlist
EiM	|void	|invlist_set_len|NN SV* const invlist|const UV len|const bool offset
EiMRn	|bool	|invlist_is_iterating|NN SV* const invlist
#ifndef PERL_EXT_RE_BUILD
EsM	|void	|invlist_replace_list_destroys_src|NN SV *dest|NN SV *src
EiMRn	|IV*	|get_invlist_previous_index_addr|NN SV* invlist
EiMn	|void	|invlist_set_previous_index|NN SV* const invlist|const IV index
EiMRn	|IV	|invlist_previous_index|NN SV* const invlist
EiMn	|void	|invlist_trim	|NN SV* invlist
EiM	|void	|invlist_clear	|NN SV* invlist
#endif
EiMR	|SV*	|invlist_clone	|NN SV* const invlist
EiMRn	|STRLEN*|get_invlist_iter_addr	|NN SV* invlist
EiMn	|void	|invlist_iterinit|NN SV* invlist
EsMRn	|bool	|invlist_iternext|NN SV* invlist|NN UV* start|NN UV* end
EiMn	|void	|invlist_iterfinish|NN SV* invlist
EiMRn	|UV	|invlist_highest|NN SV* const invlist
EMRs	|SV*	|_make_exactf_invlist	|NN RExC_state_t *pRExC_state \
					|NN regnode *node
EsMR	|SV*	|invlist_contents|NN SV* const invlist		    \
				 |const bool traditional_style
#endif
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_UTF8_C)
EXmM	|void	|_invlist_intersection	|NN SV* const a|NN SV* const b|NN SV** i
EXpM	|void	|_invlist_intersection_maybe_complement_2nd \
		|NULLOK SV* const a|NN SV* const b          \
		|const bool complement_b|NN SV** i
EXmM	|void	|_invlist_union	|NULLOK SV* const a|NN SV* const b|NN SV** output
EXpM	|void	|_invlist_union_maybe_complement_2nd        \
		|NULLOK SV* const a|NN SV* const b          \
		|const bool complement_b|NN SV** output
EXmM	|void	|_invlist_subtract|NN SV* const a|NN SV* const b|NN SV** result
EXpM	|void	|_invlist_invert|NN SV* const invlist
EXMpR	|SV*	|_new_invlist	|IV initial_size
EXMpR	|SV*	|_swash_to_invlist	|NN SV* const swash
EXMpR	|SV*	|_add_range_to_invlist	|NULLOK SV* invlist|const UV start|const UV end
EXMpR	|SV*	|_setup_canned_invlist|const STRLEN size|const UV element0|NN UV** other_elements_ptr
EXMpn	|void	|_invlist_populate_swatch   |NN SV* const invlist|const UV start|const UV end|NN U8* swatch
#endif
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_REGEXEC_C) || defined(PERL_IN_UTF8_C) || defined(PERL_IN_TOKE_C)
EXp	|SV*	|_core_swash_init|NN const char* pkg|NN const char* name \
		|NN SV* listsv|I32 minbits|I32 none \
		|NULLOK SV* invlist|NULLOK U8* const flags_p
#endif
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_REGEXEC_C) || defined(PERL_IN_UTF8_C)
EiMRn	|UV*	|invlist_array	|NN SV* const invlist
EiMRn	|bool*	|get_invlist_offset_addr|NN SV* invlist
EiMRn	|UV	|_invlist_len	|NN SV* const invlist
EMiRn	|bool	|_invlist_contains_cp|NN SV* const invlist|const UV cp
EXpMRn	|IV	|_invlist_search	|NN SV* const invlist|const UV cp
EXMpR	|SV*	|_get_swash_invlist|NN SV* const swash
EXMpR	|HV*	|_swash_inversion_hash	|NN SV* const swash
#endif
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_REGEXEC_C)
ApM	|SV*	|_get_regclass_nonbitmap_data				   \
				|NULLOK const regexp *prog		   \
				|NN const struct regnode *node		   \
				|bool doinit				   \
				|NULLOK SV **listsvp			   \
				|NULLOK SV **lonly_utf8_locale		   \
				|NULLOK SV **output_invlist
EXp	|void|_load_PL_utf8_foldclosures|
#endif
#if defined(PERL_IN_REGCOMP_C) || defined (PERL_IN_DUMP_C)
EXMp	|void	|_invlist_dump	|NN PerlIO *file|I32 level   \
				|NN const char* const indent \
				|NN SV* const invlist
#endif
Ap	|void	|taint_env
Ap	|void	|taint_proper	|NULLOK const char* f|NN const char *const s
ApdD	|UV	|to_utf8_case	|NN const U8 *p					\
				|NN U8* ustrp					\
				|NULLOK STRLEN *lenp				\
				|NN SV **swashp					\
				|NN const char *normal|				\
				NULLOK const char *special
#if defined(PERL_IN_UTF8_C)
s	|UV	|_to_utf8_case  |const UV uv1					\
				|NN const U8 *p					\
				|NN U8* ustrp					\
				|NULLOK STRLEN *lenp				\
				|NN SV **swashp					\
				|NN const char *normal 				\
				|NULLOK const char *special
#endif
Abmd	|UV	|to_utf8_lower	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
AMp	|UV	|_to_utf8_lower_flags	|NN const U8 *p|NN U8* ustrp  \
				|NULLOK STRLEN *lenp|bool flags
Abmd	|UV	|to_utf8_upper	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
AMp	|UV	|_to_utf8_upper_flags	|NN const U8 *p|NN U8* ustrp   \
				|NULLOK STRLEN *lenp|bool flags
Abmd	|UV	|to_utf8_title	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
AMp	|UV	|_to_utf8_title_flags	|NN const U8 *p|NN U8* ustrp   \
				|NULLOK STRLEN *lenp|bool flags
Abmd	|UV	|to_utf8_fold	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
AMp	|UV	|_to_utf8_fold_flags|NN const U8 *p|NN U8* ustrp       \
				|NULLOK STRLEN *lenp|U8 flags
#if defined(PERL_IN_MG_C) || defined(PERL_IN_PP_C)
pn	|bool	|translate_substr_offsets|STRLEN curlen|IV pos1_iv \
					 |bool pos1_is_uv|IV len_iv \
					 |bool len_is_uv|NN STRLEN *posp \
					 |NN STRLEN *lenp
#endif
#if defined(UNLINK_ALL_VERSIONS)
Ap	|I32	|unlnk		|NN const char* f
#endif
Apd	|I32	|unpack_str	|NN const char *pat|NN const char *patend|NN const char *s \
				|NULLOK const char *strbeg|NN const char *strend|NULLOK char **new_s \
				|I32 ocnt|U32 flags
Apd	|I32	|unpackstring	|NN const char *pat|NN const char *patend|NN const char *s \
				|NN const char *strend|U32 flags
Ap	|void	|unsharepvn	|NULLOK const char* sv|I32 len|U32 hash
: Used in gv.c, hv.c
p	|void	|unshare_hek	|NULLOK HEK* hek
: Used in perly.y
p	|void	|utilize	|int aver|I32 floor|NULLOK OP* version|NN OP* idop|NULLOK OP* arg
Ap	|U8*	|utf16_to_utf8	|NN U8* p|NN U8 *d|I32 bytelen|NN I32 *newlen
Ap	|U8*	|utf16_to_utf8_reversed|NN U8* p|NN U8 *d|I32 bytelen|NN I32 *newlen
AdpPR	|STRLEN	|utf8_length	|NN const U8* s|NN const U8 *e
ApdPR	|IV	|utf8_distance	|NN const U8 *a|NN const U8 *b
ApdPRn	|U8*	|utf8_hop	|NN const U8 *s|SSize_t off
ApMd	|U8*	|utf8_to_bytes	|NN U8 *s|NN STRLEN *len
Apd	|int	|bytes_cmp_utf8	|NN const U8 *b|STRLEN blen|NN const U8 *u \
				|STRLEN ulen
ApMd	|U8*	|bytes_from_utf8|NN const U8 *s|NN STRLEN *len|NULLOK bool *is_utf8
ApMd	|U8*	|bytes_to_utf8	|NN const U8 *s|NN STRLEN *len
ApdD	|UV	|utf8_to_uvchr	|NN const U8 *s|NULLOK STRLEN *retlen
ApdD	|UV	|utf8_to_uvuni	|NN const U8 *s|NULLOK STRLEN *retlen
ApMD	|UV	|valid_utf8_to_uvuni	|NN const U8 *s|NULLOK STRLEN *retlen
Amd	|UV	|utf8_to_uvchr_buf	|NN const U8 *s|NN const U8 *send|NULLOK STRLEN *retlen
ApdD	|UV	|utf8_to_uvuni_buf	|NN const U8 *s|NN const U8 *send|NULLOK STRLEN *retlen
pM	|bool	|check_utf8_print	|NN const U8 *s|const STRLEN len

Adp	|UV	|utf8n_to_uvchr	|NN const U8 *s|STRLEN curlen|NULLOK STRLEN *retlen|U32 flags
ApM	|UV	|valid_utf8_to_uvchr	|NN const U8 *s|NULLOK STRLEN *retlen

Ap	|UV	|utf8n_to_uvuni|NN const U8 *s|STRLEN curlen|NULLOK STRLEN *retlen|U32 flags

Adm	|U8*	|uvchr_to_utf8	|NN U8 *d|UV uv
Ap	|U8*	|uvuni_to_utf8	|NN U8 *d|UV uv
Adm	|U8*	|uvchr_to_utf8_flags	|NN U8 *d|UV uv|UV flags
Apd	|U8*	|uvoffuni_to_utf8_flags	|NN U8 *d|UV uv|UV flags
Ap	|U8*	|uvuni_to_utf8_flags	|NN U8 *d|UV uv|UV flags
Apd	|char*	|pv_uni_display	|NN SV *dsv|NN const U8 *spv|STRLEN len|STRLEN pvlim|UV flags
ApdR	|char*	|sv_uni_display	|NN SV *dsv|NN SV *ssv|STRLEN pvlim|UV flags
: Used by Data::Alias
EXp	|void	|vivify_defelem	|NN SV* sv
: Used in pp.c
pR	|SV*	|vivify_ref	|NN SV* sv|U32 to_what
: Used in pp_sys.c
p	|I32	|wait4pid	|Pid_t pid|NN int* statusp|int flags
: Used in locale.c and perl.c
p	|U32	|parse_unicode_opts|NN const char **popt
Ap	|U32	|seed
Xpno	|double	|drand48_r	|NN perl_drand48_t *random_state
Xpno	|void	|drand48_init_r |NN perl_drand48_t *random_state|U32 seed
: Only used in perl.c
p        |void        |get_hash_seed        |NN unsigned char * const seed_buffer
: Used in doio.c, pp_hot.c, pp_sys.c
p	|void	|report_evil_fh	|NULLOK const GV *gv
: Used in doio.c, pp_hot.c, pp_sys.c
p	|void	|report_wrongway_fh|NULLOK const GV *gv|const char have
: Used in mg.c, pp.c, pp_hot.c, regcomp.c
XEpd	|void	|report_uninit	|NULLOK const SV *uninit_sv
#if defined(PERL_IN_OP_C) || defined(PERL_IN_SV_C)
p	|void	|report_redefined_cv|NN const SV *name \
				    |NN const CV *old_cv \
				    |NULLOK SV * const *new_const_svp
#endif
Apd	|void	|warn_sv	|NN SV *baseex
Afpd	|void	|warn		|NN const char* pat|...
Apd	|void	|vwarn		|NN const char* pat|NULLOK va_list* args
Afp	|void	|warner		|U32 err|NN const char* pat|...
Afp	|void	|ck_warner	|U32 err|NN const char* pat|...
Afp	|void	|ck_warner_d	|U32 err|NN const char* pat|...
Ap	|void	|vwarner	|U32 err|NN const char* pat|NULLOK va_list* args
#ifdef USE_C_BACKTRACE
pd	|Perl_c_backtrace*|get_c_backtrace|int max_depth|int skip
dm	|void	|free_c_backtrace|NN Perl_c_backtrace* bt
Apd	|SV*	|get_c_backtrace_dump|int max_depth|int skip
Apd	|bool	|dump_c_backtrace|NN PerlIO* fp|int max_depth|int skip
#endif
: FIXME
p	|void	|watch		|NN char** addr
Am	|I32	|whichsig	|NN const char* sig
Ap     |I32    |whichsig_sv    |NN SV* sigsv
Ap     |I32    |whichsig_pv    |NN const char* sig
Ap     |I32    |whichsig_pvn   |NN const char* sig|STRLEN len
#ifndef PERL_NO_INLINE_FUNCTIONS
: used to check for NULs in pathnames and other names
AiR	|bool	|is_safe_syscall|NN const char *pv|STRLEN len|NN const char *what|NN const char *op_name
#endif
#ifdef PERL_CORE
inR	|bool	|should_warn_nl|NN const char *pv
#endif
: Used in pp_ctl.c
p	|void	|write_to_stderr|NN SV* msv
: Used in op.c
p	|int	|yyerror	|NN const char *const s
p	|int	|yyerror_pv	|NN const char *const s|U32 flags
p	|int	|yyerror_pvn	|NN const char *const s|STRLEN len|U32 flags
: Used in perly.y, and by Data::Alias
EXp	|int	|yylex
p	|void	|yyunlex
: Used in perl.c, pp_ctl.c
p	|int	|yyparse	|int gramtype
: Only used in scope.c
p	|void	|parser_free	|NN const yy_parser *parser
#ifdef PERL_CORE
p	|void	|parser_free_nexttoke_ops|NN yy_parser *parser \
					 |NN OPSLAB *slab
#endif
#if defined(PERL_IN_TOKE_C)
s	|int	|yywarn		|NN const char *const s|U32 flags
#endif
#if defined(MYMALLOC)
Ap	|void	|dump_mstats	|NN const char* s
Ap	|int	|get_mstats	|NN perl_mstats_t *buf|int buflen|int level
#endif
Anpa	|Malloc_t|safesysmalloc	|MEM_SIZE nbytes
Anpa	|Malloc_t|safesyscalloc	|MEM_SIZE elements|MEM_SIZE size
Anpa	|Malloc_t|safesysrealloc|Malloc_t where|MEM_SIZE nbytes
Anp	|Free_t	|safesysfree	|Malloc_t where
Asrnx	|void	|croak_memory_wrap
#if defined(PERL_GLOBAL_STRUCT)
Ap	|struct perl_vars *|GetVars
Ap	|struct perl_vars*|init_global_struct
Ap	|void	|free_global_struct|NN struct perl_vars *plvarsp
#endif
Ap	|int	|runops_standard
Ap	|int	|runops_debug
Afpd	|void	|sv_catpvf_mg	|NN SV *const sv|NN const char *const pat|...
Apd	|void	|sv_vcatpvf_mg	|NN SV *const sv|NN const char *const pat \
				|NULLOK va_list *const args
Apd	|void	|sv_catpv_mg	|NN SV *const sv|NULLOK const char *const ptr
Apdbm	|void	|sv_catpvn_mg	|NN SV *sv|NN const char *ptr|STRLEN len
Apdbm	|void	|sv_catsv_mg	|NN SV *dsv|NULLOK SV *ssv
Afpd	|void	|sv_setpvf_mg	|NN SV *const sv|NN const char *const pat|...
Apd	|void	|sv_vsetpvf_mg	|NN SV *const sv|NN const char *const pat \
				|NULLOK va_list *const args
Apd	|void	|sv_setiv_mg	|NN SV *const sv|const IV i
Apdb	|void	|sv_setpviv_mg	|NN SV *const sv|const IV iv
Apd	|void	|sv_setuv_mg	|NN SV *const sv|const UV u
Apd	|void	|sv_setnv_mg	|NN SV *const sv|const NV num
Apd	|void	|sv_setpv_mg	|NN SV *const sv|NULLOK const char *const ptr
Apd	|void	|sv_setpvn_mg	|NN SV *const sv|NN const char *const ptr|const STRLEN len
Apd	|void	|sv_setsv_mg	|NN SV *const dstr|NULLOK SV *const sstr
Apdbm	|void	|sv_usepvn_mg	|NN SV *sv|NULLOK char *ptr|STRLEN len
ApR	|MGVTBL*|get_vtbl	|int vtbl_id
Apd	|char*	|pv_display	|NN SV *dsv|NN const char *pv|STRLEN cur|STRLEN len \
				|STRLEN pvlim
Apd	|char*	|pv_escape	|NULLOK SV *dsv|NN char const * const str\
                                |const STRLEN count|const STRLEN max\
                                |NULLOK STRLEN * const escaped\
                                |const U32 flags				
Apd     |char*  |pv_pretty      |NN SV *dsv|NN char const * const str\
                                |const STRLEN count|const STRLEN max\
                                |NULLOK char const * const start_color\
                                |NULLOK char const * const end_color\
                                |const U32 flags				
Afp	|void	|dump_indent	|I32 level|NN PerlIO *file|NN const char* pat|...
Ap	|void	|dump_vindent	|I32 level|NN PerlIO *file|NN const char* pat \
				|NULLOK va_list *args
Ap	|void	|do_gv_dump	|I32 level|NN PerlIO *file|NN const char *name\
				|NULLOK GV *sv
Ap	|void	|do_gvgv_dump	|I32 level|NN PerlIO *file|NN const char *name\
				|NULLOK GV *sv
Ap	|void	|do_hv_dump	|I32 level|NN PerlIO *file|NN const char *name\
				|NULLOK HV *sv
Ap	|void	|do_magic_dump	|I32 level|NN PerlIO *file|NULLOK const MAGIC *mg|I32 nest \
				|I32 maxnest|bool dumpops|STRLEN pvlim
Ap	|void	|do_op_dump	|I32 level|NN PerlIO *file|NULLOK const OP *o
Ap	|void	|do_pmop_dump	|I32 level|NN PerlIO *file|NULLOK const PMOP *pm
Ap	|void	|do_sv_dump	|I32 level|NN PerlIO *file|NULLOK SV *sv|I32 nest \
				|I32 maxnest|bool dumpops|STRLEN pvlim
Ap	|void	|magic_dump	|NULLOK const MAGIC *mg
Ap	|void	|reginitcolors
ApdRmb	|char*	|sv_2pv_nolen	|NN SV* sv
ApdRmb	|char*	|sv_2pvutf8_nolen|NN SV* sv
ApdRmb	|char*	|sv_2pvbyte_nolen|NN SV* sv
AmdbR	|char*	|sv_pv		|NN SV *sv
AmdbR	|char*	|sv_pvutf8	|NN SV *sv
AmdbR	|char*	|sv_pvbyte	|NN SV *sv
Amdb	|STRLEN	|sv_utf8_upgrade|NN SV *sv
Amd	|STRLEN	|sv_utf8_upgrade_nomg|NN SV *sv
ApdM	|bool	|sv_utf8_downgrade|NN SV *const sv|const bool fail_ok
Apd	|void	|sv_utf8_encode |NN SV *const sv
ApdM	|bool	|sv_utf8_decode |NN SV *const sv
Apdmb	|void	|sv_force_normal|NN SV *sv
Apd	|void	|sv_force_normal_flags|NN SV *const sv|const U32 flags
pX	|SSize_t|tmps_grow_p	|SSize_t ix
Apd	|SV*	|sv_rvweaken	|NN SV *const sv
AnpPMd	|SV*	|sv_get_backrefs|NN SV *const sv
: This is indirectly referenced by globals.c. This is somewhat annoying.
p	|int	|magic_killbackrefs|NN SV *sv|NN MAGIC *mg
Ap	|OP*	|newANONATTRSUB	|I32 floor|NULLOK OP *proto|NULLOK OP *attrs|NULLOK OP *block
Am	|CV*	|newATTRSUB	|I32 floor|NULLOK OP *o|NULLOK OP *proto|NULLOK OP *attrs|NULLOK OP *block
pX	|CV*	|newATTRSUB_x	|I32 floor|NULLOK OP *o|NULLOK OP *proto \
				 |NULLOK OP *attrs|NULLOK OP *block \
				 |bool o_is_gv
Ap	|CV *	|newMYSUB	|I32 floor|NN OP *o|NULLOK OP *proto \
				|NULLOK OP *attrs|NULLOK OP *block
p	|CV*	|newSTUB	|NN GV *gv|bool fake
: Used in perly.y
p	|OP *	|my_attrs	|NN OP *o|NULLOK OP *attrs
#if defined(USE_ITHREADS)
ApR	|PERL_CONTEXT*|cx_dup	|NULLOK PERL_CONTEXT* cx|I32 ix|I32 max|NN CLONE_PARAMS* param
ApR	|PERL_SI*|si_dup	|NULLOK PERL_SI* si|NN CLONE_PARAMS* param
Apa	|ANY*	|ss_dup		|NN PerlInterpreter* proto_perl|NN CLONE_PARAMS* param
ApR	|void*	|any_dup	|NULLOK void* v|NN const PerlInterpreter* proto_perl
ApR	|HE*	|he_dup		|NULLOK const HE* e|bool shared|NN CLONE_PARAMS* param
ApR	|HEK*	|hek_dup	|NULLOK HEK* e|NN CLONE_PARAMS* param
Ap	|void	|re_dup_guts	|NN const REGEXP *sstr|NN REGEXP *dstr \
				|NN CLONE_PARAMS* param
Ap	|PerlIO*|fp_dup		|NULLOK PerlIO *const fp|const char type|NN CLONE_PARAMS *const param
ApR	|DIR*	|dirp_dup	|NULLOK DIR *const dp|NN CLONE_PARAMS *const param
ApR	|GP*	|gp_dup		|NULLOK GP *const gp|NN CLONE_PARAMS *const param
ApR	|MAGIC*	|mg_dup		|NULLOK MAGIC *mg|NN CLONE_PARAMS *const param
#if defined(PERL_IN_SV_C)
s	|SV **	|sv_dup_inc_multiple|NN SV *const *source|NN SV **dest \
				|SSize_t items|NN CLONE_PARAMS *const param
sR	|SV*	|sv_dup_common	|NN const SV *const sstr \
				|NN CLONE_PARAMS *const param
#endif
ApR	|SV*	|sv_dup		|NULLOK const SV *const sstr|NN CLONE_PARAMS *const param
ApR	|SV*	|sv_dup_inc	|NULLOK const SV *const sstr \
				|NN CLONE_PARAMS *const param
Ap	|void	|rvpv_dup	|NN SV *const dstr|NN const SV *const sstr|NN CLONE_PARAMS *const param
Ap	|yy_parser*|parser_dup	|NULLOK const yy_parser *const proto|NN CLONE_PARAMS *const param
#endif
Apa	|PTR_TBL_t*|ptr_table_new
ApR	|void*	|ptr_table_fetch|NN PTR_TBL_t *const tbl|NULLOK const void *const sv
Ap	|void	|ptr_table_store|NN PTR_TBL_t *const tbl|NULLOK const void *const oldsv \
				|NN void *const newsv
Ap	|void	|ptr_table_split|NN PTR_TBL_t *const tbl
ApD	|void	|ptr_table_clear|NULLOK PTR_TBL_t *const tbl
Ap	|void	|ptr_table_free|NULLOK PTR_TBL_t *const tbl
#if defined(HAVE_INTERP_INTERN)
Ap	|void	|sys_intern_clear
Ap	|void	|sys_intern_init
#  if defined(USE_ITHREADS)
Ap	|void	|sys_intern_dup	|NN struct interp_intern* src|NN struct interp_intern* dst
#  endif
#endif

AmopP	|const XOP *	|custom_op_xop	|NN const OP *o
ApR	|const char *	|custom_op_name	|NN const OP *o
ApR	|const char *	|custom_op_desc	|NN const OP *o
pRX	|XOPRETANY	|custom_op_get_field	|NN const OP *o|const xop_flags_enum field
Aop	|void	|custom_op_register	|NN Perl_ppaddr_t ppaddr \
			|NN const XOP *xop

Adp	|void	|sv_nosharing	|NULLOK SV *sv
Adpbm	|void	|sv_nolocking	|NULLOK SV *sv
Adp	|bool	|sv_destroyable	|NULLOK SV *sv
#ifdef NO_MATHOMS
Adpbm	|void	|sv_nounlocking	|NULLOK SV *sv
#else
Adpb	|void	|sv_nounlocking	|NULLOK SV *sv
#endif
Adp	|int	|nothreadhook
p	|void	|init_constants

#if defined(PERL_IN_DOOP_C)
sR	|I32	|do_trans_simple	|NN SV * const sv
sR	|I32	|do_trans_count		|NN SV * const sv
sR	|I32	|do_trans_complex	|NN SV * const sv
sR	|I32	|do_trans_simple_utf8	|NN SV * const sv
sR	|I32	|do_trans_count_utf8	|NN SV * const sv
sR	|I32	|do_trans_complex_utf8	|NN SV * const sv
#endif

#if defined(PERL_IN_GV_C)
s	|void	|gv_init_svtype	|NN GV *gv|const svtype sv_type
s	|void	|gv_magicalize_isa	|NN GV *gv
s  |bool|parse_gv_stash_name|NN HV **stash|NN GV **gv \
                     |NN const char **name|NN STRLEN *len \
                     |NN const char *nambeg|STRLEN full_len \
                     |const U32 is_utf8|const I32 add
s  |bool|find_default_stash|NN HV **stash|NN const char *name \
                     |STRLEN len|const U32 is_utf8|const I32 add \
                     |const svtype sv_type
s  |bool|gv_magicalize|NN GV *gv|NN HV *stash|NN const char *name \
                     |STRLEN len|bool addmg \
                     |const svtype sv_type
s  |void|maybe_multimagic_gv|NN GV *gv|NN const char *name|const svtype sv_type
s  |bool|gv_is_in_main|NN const char *name|STRLEN len \
                      |const U32 is_utf8
s	|HV*	|require_tie_mod|NN GV *gv|NN const char *varpv|NN SV* namesv \
				|NN const char *methpv|const U32 flags
#endif

#if defined(PERL_IN_HV_C) || defined(PERL_IN_SV_C)
po	|SV*	|hfree_next_entry	|NN HV *hv|NN STRLEN *indexp
#endif

#if defined(PERL_IN_HV_C)
s	|void	|hsplit		|NN HV *hv|STRLEN const oldsize|STRLEN newsize
s	|void	|hfreeentries	|NN HV *hv
s	|SV*	|hv_free_ent_ret|NN HV *hv|NN HE *entry
sa	|HE*	|new_he
sanR	|HEK*	|save_hek_flags	|NN const char *str|I32 len|U32 hash|int flags
sn	|void	|hv_magic_check	|NN HV *hv|NN bool *needs_copy|NN bool *needs_store
s	|void	|unshare_hek_or_pvn|NULLOK const HEK* hek|NULLOK const char* str|I32 len|U32 hash
sR	|HEK*	|share_hek_flags|NN const char *str|I32 len|U32 hash|int flags
rs	|void	|hv_notallowed	|int flags|NN const char *key|I32 klen|NN const char *msg
in	|U32|ptr_hash|PTRV u
s	|struct xpvhv_aux*|hv_auxinit|NN HV *hv
sn	|struct xpvhv_aux*|hv_auxinit_internal|NN struct xpvhv_aux *iter
sM	|SV*	|hv_delete_common|NULLOK HV *hv|NULLOK SV *keysv \
		|NULLOK const char *key|STRLEN klen|int k_flags|I32 d_flags \
		|U32 hash
sM	|void	|clear_placeholders	|NN HV *hv|U32 items
#endif

#if defined(PERL_IN_MG_C)
s	|void	|save_magic_flags|I32 mgs_ix|NN SV *sv|U32 flags
-s	|int	|magic_methpack	|NN SV *sv|NN const MAGIC *mg|NN SV *meth
s	|SV*	|magic_methcall1|NN SV *sv|NN const MAGIC *mg \
				|NN SV *meth|U32 flags \
				|int n|NULLOK SV *val
s	|void	|restore_magic	|NULLOK const void *p
s	|void	|unwind_handler_stack|NULLOK const void *p
s	|void	|fixup_errno_string|NN SV* sv

#endif

#if defined(PERL_IN_OP_C)
sRn	|bool	|is_handle_constructor|NN const OP *o|I32 numargs
sR	|I32	|assignment_type|NULLOK const OP *o
s	|void	|forget_pmop	|NN PMOP *const o
s	|void	|find_and_forget_pmops	|NN OP *o
s	|void	|cop_free	|NN COP *cop
s	|OP*	|modkids	|NULLOK OP *o|I32 type
s	|OP*	|scalarboolean	|NN OP *o
sR	|OP*	|search_const	|NN OP *o
sR	|OP*	|new_logop	|I32 type|I32 flags|NN OP **firstp|NN OP **otherp
s	|void	|simplify_sort	|NN OP *o
sRn	|bool	|scalar_mod_type|NULLOK const OP *o|I32 type
s	|OP *	|my_kid		|NULLOK OP *o|NULLOK OP *attrs|NN OP **imopsp
s	|OP *	|dup_attrlist	|NN OP *o
s	|void	|apply_attrs	|NN HV *stash|NN SV *target|NULLOK OP *attrs
s	|void	|apply_attrs_my	|NN HV *stash|NN OP *target|NULLOK OP *attrs|NN OP **imopsp
s	|void	|bad_type_pv	|I32 n|NN const char *t|NN const OP *o|NN const OP *kid
s	|void	|bad_type_gv	|I32 n|NN GV *gv|NN const OP *kid|NN const char *t
s	|void	|no_bareword_allowed|NN OP *o
sR	|OP*	|no_fh_allowed|NN OP *o
sR	|OP*	|too_few_arguments_pv|NN OP *o|NN const char* name|U32 flags
s	|OP*	|too_many_arguments_pv|NN OP *o|NN const char* name|U32 flags
s	|bool	|looks_like_bool|NN const OP* o
s	|OP*	|newGIVWHENOP	|NULLOK OP* cond|NN OP *block \
				|I32 enter_opcode|I32 leave_opcode \
				|PADOFFSET entertarg
s	|OP*	|ref_array_or_hash|NULLOK OP* cond
s	|bool	|process_special_blocks	|I32 floor \
					|NN const char *const fullname\
					|NN GV *const gv|NN CV *const cv
s	|void	|clear_special_blocks	|NN const char *const fullname\
					|NN GV *const gv|NN CV *const cv
#endif
Xpa	|void*	|Slab_Alloc	|size_t sz
Xp	|void	|Slab_Free	|NN void *op
#if defined(PERL_DEBUG_READONLY_OPS)
#    if defined(PERL_CORE)
px	|void	|Slab_to_ro	|NN OPSLAB *slab
px	|void	|Slab_to_rw	|NN OPSLAB *const slab
#    endif
: Used in OpREFCNT_inc() in sv.c
poxM	|OP *	|op_refcnt_inc	|NULLOK OP *o
: FIXME - can be static.
poxM	|PADOFFSET	|op_refcnt_dec	|NN OP *o
#endif

#if defined(PERL_IN_PERL_C)
s	|void	|find_beginning	|NN SV* linestr_sv|NN PerlIO *rsfp
s	|void	|forbid_setid	|const char flag|const bool suidscript
s	|void	|incpush	|NN const char *const dir|STRLEN len \
				|U32 flags
s	|SV*	|mayberelocate	|NN const char *const dir|STRLEN len \
				|U32 flags
s	|void	|incpush_use_sep|NN const char *p|STRLEN len|U32 flags
s	|void	|init_interp
s	|void	|init_ids
s	|void	|init_main_stash
s	|void	|init_perllib
s	|void	|init_postdump_symbols|int argc|NN char **argv|NULLOK char **env
s	|void	|init_predump_symbols
rs	|void	|my_exit_jump
s	|void	|nuke_stacks
s	|PerlIO *|open_script	|NN const char *scriptname|bool dosearch \
				|NN bool *suidscript
sr	|void	|usage
#ifndef SETUID_SCRIPTS_ARE_SECURE_NOW
so	|void	|validate_suid	|NN PerlIO *rsfp
#endif
sr	|void	|minus_v

s	|void*	|parse_body	|NULLOK char **env|XSINIT_t xsinit
rs	|void	|run_body	|I32 oldscope
#  ifndef PERL_IS_MINIPERL
s	|SV *	|incpush_if_exists|NN AV *const av|NN SV *dir|NN SV *const stem
#  endif
#endif

#if defined(PERL_IN_PP_C)
s	|size_t	|do_chomp	|NN SV *retval|NN SV *sv|bool chomping
s	|OP*	|do_delete_local
sR	|SV*	|refto		|NN SV* sv
#endif
#if defined(PERL_IN_PP_C) || defined(PERL_IN_PP_HOT_C)
: Used in pp_hot.c
pRxo	|GV*	|softref2xv	|NN SV *const sv|NN const char *const what \
				|const svtype type|NN SV ***spp
#endif

#if defined(PERL_IN_PP_PACK_C)
s	|I32	|unpack_rec	|NN struct tempsym* symptr|NN const char *s \
				|NN const char *strbeg|NN const char *strend|NULLOK const char **new_s
s	|SV **	|pack_rec	|NN SV *cat|NN struct tempsym* symptr|NN SV **beglist|NN SV **endlist
s	|SV*	|mul128		|NN SV *sv|U8 m
s	|I32	|measure_struct	|NN struct tempsym* symptr
s	|bool	|next_symbol	|NN struct tempsym* symptr
sR	|SV*	|is_an_int	|NN const char *s|STRLEN l
s	|int	|div128		|NN SV *pnum|NN bool *done
s	|const char *|group_end	|NN const char *patptr|NN const char *patend \
				|char ender
sR	|const char *|get_num	|NN const char *patptr|NN I32 *lenptr
ns	|bool	|need_utf8	|NN const char *pat|NN const char *patend
ns	|char	|first_symbol	|NN const char *pat|NN const char *patend
sR	|char *	|sv_exp_grow	|NN SV *sv|STRLEN needed
snR	|char *	|my_bytes_to_utf8|NN const U8 *start|STRLEN len|NN char *dest \
	      			|const bool needs_swap
#endif

#if defined(PERL_IN_PP_CTL_C)
sR	|OP*	|docatch	|NULLOK OP *o
sR	|OP*	|dofindlabel	|NN OP *o|NN const char *label|STRLEN len \
                                |U32 flags|NN OP **opstack|NN OP **oplimit
s	|MAGIC *|doparseform	|NN SV *sv
snR	|bool	|num_overflow	|NV value|I32 fldsize|I32 frcsize
sR	|I32	|dopoptoeval	|I32 startingblock
sR	|I32	|dopoptogivenfor|I32 startingblock
sR	|I32	|dopoptolabel	|NN const char *label|STRLEN len|U32 flags
sR	|I32	|dopoptoloop	|I32 startingblock
sR	|I32	|dopoptosub_at	|NN const PERL_CONTEXT* cxstk|I32 startingblock
sR	|I32	|dopoptowhen	|I32 startingblock
s	|void	|save_lines	|NULLOK AV *array|NN SV *sv
s	|bool	|doeval_compile	|U8 gimme \
				|NULLOK CV* outside|U32 seq|NULLOK HV* hh
sR	|PerlIO *|check_type_and_open|NN SV *name
#ifndef PERL_DISABLE_PMC
sR	|PerlIO *|doopen_pm	|NN SV *name
#endif
iRn	|bool	|path_is_searchable|NN const char *name
sR	|I32	|run_user_filter|int idx|NN SV *buf_sv|int maxlen
sR	|PMOP*	|make_matcher	|NN REGEXP* re
sR	|bool	|matcher_matches_sv|NN PMOP* matcher|NN SV* sv
s	|void	|destroy_matcher|NN PMOP* matcher
s	|OP*	|do_smartmatch	|NULLOK HV* seen_this \
				|NULLOK HV* seen_other|const bool copied
#endif

#if defined(PERL_IN_PP_HOT_C)
s	|void	|do_oddball	|NN SV **oddkey|NN SV **firstkey
i	|HV*	|opmethod_stash	|NN SV* meth
#endif

#if defined(PERL_IN_PP_SORT_C)
s	|I32	|sv_ncmp	|NN SV *const a|NN SV *const b
s	|I32	|sv_i_ncmp	|NN SV *const a|NN SV *const b
s	|I32	|amagic_ncmp	|NN SV *const a|NN SV *const b
s	|I32	|amagic_i_ncmp	|NN SV *const a|NN SV *const b
s	|I32	|amagic_cmp	|NN SV *const str1|NN SV *const str2
#  ifdef USE_LOCALE_COLLATE
s	|I32	|amagic_cmp_locale|NN SV *const str1|NN SV *const str2
#  endif
s	|I32	|sortcv		|NN SV *const a|NN SV *const b
s	|I32	|sortcv_xsub	|NN SV *const a|NN SV *const b
s	|I32	|sortcv_stacked	|NN SV *const a|NN SV *const b
s	|void	|qsortsvu	|NULLOK SV** array|size_t num_elts|NN SVCOMPARE_t compare
#endif

#if defined(PERL_IN_PP_SYS_C)
s	|OP*	|doform		|NN CV *cv|NN GV *gv|NULLOK OP *retop
#  if !defined(HAS_MKDIR) || !defined(HAS_RMDIR)
sR	|int	|dooneliner	|NN const char *cmd|NN const char *filename
#  endif
s	|SV *	|space_join_names_mortal|NN char *const *array
#endif
p	|OP *	|tied_method|NN SV *methname|NN SV **sp \
				|NN SV *const sv|NN const MAGIC *const mg \
				|const U32 flags|U32 argc|...

#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_REGEXEC_C)
Ep	|void	|regprop	|NULLOK const regexp *prog|NN SV* sv|NN const regnode* o|NULLOK const regmatch_info *reginfo \
				|NULLOK const RExC_state_t *pRExC_state
Ep	|int	|re_printf	|NN const char *fmt|...
#endif
#if defined(PERL_IN_REGCOMP_C)
Es	|regnode*|reg		|NN RExC_state_t *pRExC_state \
				|I32 paren|NN I32 *flagp|U32 depth
Es	|regnode*|regnode_guts	|NN RExC_state_t *pRExC_state              \
				|const U8 op				   \
				|const STRLEN extra_len			   \
				|NN const char* const name
Es	|regnode*|reganode	|NN RExC_state_t *pRExC_state|U8 op \
				|U32 arg
Es	|regnode*|reg2Lanode	|NN RExC_state_t *pRExC_state		   \
				|const U8 op				   \
				|const U32 arg1				   \
				|const I32 arg2
Es	|regnode*|regatom	|NN RExC_state_t *pRExC_state \
				|NN I32 *flagp|U32 depth
Es	|regnode*|regbranch	|NN RExC_state_t *pRExC_state \
				|NN I32 *flagp|I32 first|U32 depth
Es	|void	 |set_ANYOF_arg	|NN RExC_state_t* const pRExC_state \
				|NN regnode* const node                    \
				|NULLOK SV* const cp_list                  \
				|NULLOK SV* const runtime_defns            \
				|NULLOK SV* const only_utf8_locale_list	   \
				|NULLOK SV* const swash                    \
				|const bool has_user_defined_property
Es	|void	|output_or_return_posix_warnings			    \
				|NN RExC_state_t *pRExC_state		    \
				|NN AV* posix_warnings			    \
				|NULLOK AV** return_posix_warnings
Es	|AV*	 |add_multi_match|NULLOK AV* multi_char_matches		    \
				|NN SV* multi_string			    \
				|const STRLEN cp_count
Es	|regnode*|regclass	|NN RExC_state_t *pRExC_state                 \
				|NN I32 *flagp|U32 depth|const bool stop_at_1 \
				|bool allow_multi_fold                        \
				|const bool silence_non_portable              \
				|const bool strict                            \
				|bool optimizable			      \
				|NULLOK SV** ret_invlist		      \
				|NULLOK AV** return_posix_warnings
Es	|void|add_above_Latin1_folds|NN RExC_state_t *pRExC_state|const U8 cp \
				|NN SV** invlist
Ei	|regnode*|handle_named_backref|NN RExC_state_t *pRExC_state	    \
				|NN I32 *flagp				    \
				|NN char * parse_start			    \
				|char ch
EsnP	|unsigned int|regex_set_precedence|const U8 my_operator
Es	|regnode*|handle_regex_sets|NN RExC_state_t *pRExC_state \
				|NULLOK SV ** return_invlist            \
				|NN I32 *flagp|U32 depth                \
				|NN char * const oregcomp_parse
Es	|void|parse_lparen_question_flags|NN RExC_state_t *pRExC_state
Es	|regnode*|reg_node	|NN RExC_state_t *pRExC_state|U8 op
Es	|UV	|reg_recode	|const U8 value|NN SV **encp
Es	|regnode*|regpiece	|NN RExC_state_t *pRExC_state \
				|NN I32 *flagp|U32 depth
Es	|bool	|grok_bslash_N	|NN RExC_state_t *pRExC_state		    \
				|NULLOK regnode** nodep			    \
				|NULLOK UV *code_point_p		    \
				|NULLOK int* cp_count			    \
				|NN I32 *flagp				    \
				|const bool strict			    \
				|const U32 depth
Es	|void	|reginsert	|NN RExC_state_t *pRExC_state \
				|U8 op|NN regnode *opnd|U32 depth
Es	|void	|regtail	|NN RExC_state_t * pRExC_state		    \
				|NN const regnode * const p		    \
				|NN const regnode * const val		    \
				|const U32 depth
Es	|SV *	|reg_scan_name	|NN RExC_state_t *pRExC_state \
				|U32 flags
Es	|U32	|join_exact	|NN RExC_state_t *pRExC_state \
				|NN regnode *scan|NN UV *min_subtract  \
				|NN bool *unfolded_multi_char          \
				|U32 flags|NULLOK regnode *val|U32 depth
Ei	|void   |alloc_maybe_populate_EXACT|NN RExC_state_t *pRExC_state \
				|NN regnode *node|NN I32 *flagp|STRLEN len \
				|UV code_point|bool downgradable
Ein	|U8   |compute_EXACTish|NN RExC_state_t *pRExC_state
Es	|void	|nextchar	|NN RExC_state_t *pRExC_state
Es	|void	|skip_to_be_ignored_text|NN RExC_state_t *pRExC_state  \
				|NN char ** p			    \
				|const bool force_to_xmod
Ein	|char *	|reg_skipcomment|NN RExC_state_t *pRExC_state|NN char * p
Es	|void	|scan_commit	|NN const RExC_state_t *pRExC_state \
				|NN struct scan_data_t *data        \
				|NN SSize_t *minlenp		    \
				|int is_inf
Es	|void	|populate_ANYOF_from_invlist|NN regnode *node|NN SV** invlist_ptr
Es	|void	|ssc_anything	|NN regnode_ssc *ssc
EsRn	|int	|ssc_is_anything|NN const regnode_ssc *ssc
Es	|void	|ssc_init	|NN const RExC_state_t *pRExC_state \
				|NN regnode_ssc *ssc
EsRn	|int	|ssc_is_cp_posixl_init|NN const RExC_state_t *pRExC_state \
				|NN const regnode_ssc *ssc
Es	|void	|ssc_and	|NN const RExC_state_t *pRExC_state \
				|NN regnode_ssc *ssc                \
				|NN const regnode_charclass *and_with
Es	|void	|ssc_or		|NN const RExC_state_t *pRExC_state \
				|NN regnode_ssc *ssc \
				|NN const regnode_charclass *or_with
Es	|SV*	|get_ANYOF_cp_list_for_ssc                                 \
				|NN const RExC_state_t *pRExC_state \
				|NN const regnode_charclass* const node
Ei	|void	|ssc_intersection|NN regnode_ssc *ssc \
				|NN SV* const invlist|const bool invert_2nd
Ei	|void	|ssc_union	|NN regnode_ssc *ssc \
				|NN SV* const invlist|const bool invert_2nd
Ei	|void	|ssc_add_range	|NN regnode_ssc *ssc \
				|UV const start|UV const end
Ei	|void	|ssc_cp_and	|NN regnode_ssc *ssc \
				|UV const cp
Ein	|void	|ssc_clear_locale|NN regnode_ssc *ssc
Ens	|bool	|is_ssc_worth_it|NN const RExC_state_t * pRExC_state \
				|NN const regnode_ssc * ssc
Es	|void	|ssc_finalize	|NN RExC_state_t *pRExC_state \
				|NN regnode_ssc *ssc
Es	|SSize_t|study_chunk	|NN RExC_state_t *pRExC_state \
				|NN regnode **scanp|NN SSize_t *minlenp \
				|NN SSize_t *deltap|NN regnode *last \
				|NULLOK struct scan_data_t *data \
                                |I32 stopparen|U32 recursed_depth \
				|NULLOK regnode_ssc *and_withp \
				|U32 flags|U32 depth
EsRn	|U32	|add_data	|NN RExC_state_t* const pRExC_state \
				|NN const char* const s|const U32 n
rs	|void	|re_croak2	|bool utf8|NN const char* pat1|NN const char* pat2|...
Es	|int	|handle_possible_posix					    \
				|NN RExC_state_t *pRExC_state		    \
				|NN const char* const s			    \
				|NULLOK char ** updated_parse_ptr	    \
				|NULLOK AV** posix_warnings		    \
				|const bool check_only
Es	|I32	|make_trie	|NN RExC_state_t *pRExC_state \
				|NN regnode *startbranch|NN regnode *first \
				|NN regnode *last|NN regnode *tail \
				|U32 word_count|U32 flags|U32 depth
Es	|regnode *|construct_ahocorasick_from_trie|NN RExC_state_t *pRExC_state \
                                |NN regnode *source|U32 depth
EnPs	|const char *|cntrl_to_mnemonic|const U8 c
EnPs	|int	|edit_distance	|NN const UV *src		    \
				|NN const UV *tgt		    \
				|const STRLEN x			    \
				|const STRLEN y			    \
				|const SSize_t maxDistance
#  ifdef DEBUGGING
Ep	|int	|re_indentf	|NN const char *fmt|U32 depth|...
Es        |void        |regdump_intflags|NULLOK const char *lead| const U32 flags
Es	|void	|regdump_extflags|NULLOK const char *lead| const U32 flags
Es	|const regnode*|dumpuntil|NN const regexp *r|NN const regnode *start \
				|NN const regnode *node \
				|NULLOK const regnode *last \
				|NULLOK const regnode *plast \
				|NN SV* sv|I32 indent|U32 depth
Es	|void	|put_code_point	|NN SV* sv|UV c
Es	|bool	|put_charclass_bitmap_innards|NN SV* sv		    \
				|NN char* bitmap		    \
				|NULLOK SV* nonbitmap_invlist	    \
				|NULLOK SV* only_utf8_locale_invlist\
				|NULLOK const regnode * const node
Es	|SV*	|put_charclass_bitmap_innards_common		    \
				|NN SV* invlist			    \
				|NULLOK SV* posixes		    \
				|NULLOK SV* only_utf8		    \
				|NULLOK SV* not_utf8		    \
				|NULLOK SV* only_utf8_locale	    \
				|const bool invert
Es	|void	|put_charclass_bitmap_innards_invlist		    \
				|NN SV *sv			    \
				|NN SV* invlist
Es	|void	|put_range	|NN SV* sv|UV start|const UV end    \
				|const bool allow_literals
Es	|void	|dump_trie	|NN const struct _reg_trie_data *trie\
				|NULLOK HV* widecharmap|NN AV *revcharmap\
				|U32 depth
Es	|void	|dump_trie_interim_list|NN const struct _reg_trie_data *trie\
				|NULLOK HV* widecharmap|NN AV *revcharmap\
				|U32 next_alloc|U32 depth
Es	|void	|dump_trie_interim_table|NN const struct _reg_trie_data *trie\
				|NULLOK HV* widecharmap|NN AV *revcharmap\
				|U32 next_alloc|U32 depth
Es	|U8	|regtail_study	|NN RExC_state_t *pRExC_state \
				|NN regnode *p|NN const regnode *val|U32 depth
#  endif
#endif

#if defined(PERL_IN_REGEXEC_C)
ERs	|bool	|isFOO_lc	|const U8 classnum|const U8 character
ERs	|bool	|isFOO_utf8_lc	|const U8 classnum|NN const U8* character
ERs	|SSize_t|regmatch	|NN regmatch_info *reginfo|NN char *startpos|NN regnode *prog
ERs	|I32	|regrepeat	|NN regexp *prog|NN char **startposp \
				|NN const regnode *p \
				|NN regmatch_info *const reginfo \
				|I32 max \
				|int depth
ERs	|bool	|regtry		|NN regmatch_info *reginfo|NN char **startposp
ERs	|bool	|reginclass	|NULLOK regexp * const prog  \
				|NN const regnode * const n  \
				|NN const U8 * const p       \
				|NN const U8 * const p_end   \
				|bool const utf8_target
Es	|CHECKPOINT|regcppush	|NN const regexp *rex|I32 parenfloor\
				|U32 maxopenparen
Es	|void	|regcppop	|NN regexp *rex\
				|NN U32 *maxopenparen_p
ERsn	|U8*	|reghop3	|NN U8 *s|SSize_t off|NN const U8 *lim
ERsn	|U8*	|reghop4	|NN U8 *s|SSize_t off|NN const U8 *llim \
				|NN const U8 *rlim
ERsn	|U8*	|reghopmaybe3	|NN U8 *s|SSize_t off|NN const U8 *lim
ERs	|char*	|find_byclass	|NN regexp * prog|NN const regnode *c \
				|NN char *s|NN const char *strend \
				|NULLOK regmatch_info *reginfo
Es	|void	|to_utf8_substr	|NN regexp * prog
Es	|bool	|to_byte_substr	|NN regexp * prog
ERsn	|I32	|reg_check_named_buff_matched	|NN const regexp *rex \
						|NN const regnode *scan
EinR	|bool	|isGCB		|const GCB_enum before|const GCB_enum after
EsR	|bool	|isLB		|LB_enum before				\
				|LB_enum after				\
				|NN const U8 * const strbeg		\
				|NN const U8 * const curpos		\
				|NN const U8 * const strend		\
				|const bool utf8_target
EsR	|LB_enum|advance_one_LB |NN U8 ** curpos				\
				|NN const U8 * const strend			\
				|const bool utf8_target
EsR	|LB_enum|backup_one_LB  |NN const U8 * const strbeg			\
				|NN U8 ** curpos				\
				|const bool utf8_target
EsR	|bool	|isSB		|SB_enum before				\
				|SB_enum after				\
				|NN const U8 * const strbeg			\
				|NN const U8 * const curpos			\
				|NN const U8 * const strend			\
				|const bool utf8_target
EsR	|SB_enum|advance_one_SB |NN U8 ** curpos				\
				|NN const U8 * const strend			\
				|const bool utf8_target
EsR	|SB_enum|backup_one_SB  |NN const U8 * const strbeg			\
				|NN U8 ** curpos				\
				|const bool utf8_target
EsR	|bool	|isWB		|WB_enum previous				\
				|WB_enum before				\
				|WB_enum after				\
				|NN const U8 * const strbeg			\
				|NN const U8 * const curpos			\
				|NN const U8 * const strend			\
				|const bool utf8_target
EsR	|WB_enum|advance_one_WB |NN U8 ** curpos				\
				|NN const U8 * const strend			\
				|const bool utf8_target				\
				|const bool skip_Extend_Format
EsR	|WB_enum|backup_one_WB  |NN WB_enum * previous			\
				|NN const U8 * const strbeg			\
				|NN U8 ** curpos				\
				|const bool utf8_target
#  ifdef DEBUGGING
Es	|void	|dump_exec_pos	|NN const char *locinput|NN const regnode *scan|NN const char *loc_regeol\
				|NN const char *loc_bostr|NN const char *loc_reg_starttry|const bool do_utf8|const U32 depth
Es	|void	|debug_start_match|NN const REGEXP *prog|const bool do_utf8\
				|NN const char *start|NN const char *end\
				|NN const char *blurb

Ep	|int	|re_exec_indentf	|NN const char *fmt|U32 depth|...
#  endif
#endif

#if defined(PERL_IN_DUMP_C)
s	|CV*	|deb_curcv	|I32 ix
s	|void	|debprof	|NN const OP *o
s	|UV	|sequence_num	|NULLOK const OP *o
s	|SV*	|pm_description	|NN const PMOP *pm
#endif

#if defined(PERL_IN_SCOPE_C)
s	|SV*	|save_scalar_at	|NN SV **sptr|const U32 flags
#endif

#if defined(PERL_IN_GV_C) || defined(PERL_IN_SV_C) || defined(PERL_IN_PAD_C) || defined(PERL_IN_OP_C)
: Used in gv.c
po	|void	|sv_add_backref	|NN SV *const tsv|NN SV *const sv
#endif

#if defined(PERL_IN_HV_C) || defined(PERL_IN_MG_C) || defined(PERL_IN_SV_C)
: Used in hv.c and mg.c
poM	|void	|sv_kill_backrefs	|NN SV *const sv|NULLOK AV *const av
#endif

#if defined(PERL_IN_SV_C) || defined (PERL_IN_OP_C)
pR	|SV *	|varname	|NULLOK const GV *const gv|const char gvtype \
				|PADOFFSET targ|NULLOK const SV *const keyname \
				|I32 aindex|int subscript_type
#endif

pX	|void	|sv_del_backref	|NN SV *const tsv|NN SV *const sv
#if defined(PERL_IN_SV_C)
nsR	|char *	|uiv_2buf	|NN char *const buf|const IV iv|UV uv|const int is_uv|NN char **const peob
i	|void	|sv_unglob	|NN SV *const sv|U32 flags
s	|const char *|sv_display	|NN SV *const sv|NN char *tmpbuf|STRLEN tmpbuf_size
s	|void	|not_a_number	|NN SV *const sv
s	|void	|not_incrementable	|NN SV *const sv
s	|I32	|visit		|NN SVFUNC_t f|const U32 flags|const U32 mask
#  ifdef DEBUGGING
s	|void	|del_sv	|NN SV *p
#  endif
#  if !defined(NV_PRESERVES_UV)
#    ifdef DEBUGGING
s	|int	|sv_2iuv_non_preserve	|NN SV *const sv|I32 numtype
#    else
s	|int	|sv_2iuv_non_preserve	|NN SV *const sv
#    endif
#  endif
sR	|I32	|expect_number	|NN char **const pattern
sn	|STRLEN	|sv_pos_u2b_forwards|NN const U8 *const start \
		|NN const U8 *const send|NN STRLEN *const uoffset \
		|NN bool *const at_end
sn	|STRLEN	|sv_pos_u2b_midway|NN const U8 *const start \
		|NN const U8 *send|STRLEN uoffset|const STRLEN uend
s	|STRLEN	|sv_pos_u2b_cached|NN SV *const sv|NN MAGIC **const mgp \
		|NN const U8 *const start|NN const U8 *const send \
		|STRLEN uoffset|STRLEN uoffset0|STRLEN boffset0
s	|void	|utf8_mg_len_cache_update|NN SV *const sv|NN MAGIC **const mgp \
		|const STRLEN ulen
s	|void	|utf8_mg_pos_cache_update|NN SV *const sv|NN MAGIC **const mgp \
		|const STRLEN byte|const STRLEN utf8|const STRLEN blen
s	|STRLEN	|sv_pos_b2u_midway|NN const U8 *const s|NN const U8 *const target \
		|NN const U8 *end|STRLEN endu
s	|void	|assert_uft8_cache_coherent|NN const char *const func \
		|STRLEN from_cache|STRLEN real|NN SV *const sv
sn	|char *	|F0convert	|NV nv|NN char *const endbuf|NN STRLEN *const len
s	|SV *	|more_sv
s	|bool	|sv_2iuv_common	|NN SV *const sv
s	|void	|glob_assign_glob|NN SV *const dstr|NN SV *const sstr \
		|const int dtype
sRn	|PTR_TBL_ENT_t *|ptr_table_find|NN PTR_TBL_t *const tbl|NULLOK const void *const sv
s	|void	|anonymise_cv_maybe	|NN GV *gv|NN CV *cv
#endif

: Used in sv.c and hv.c
po	|void *	|more_bodies	|const svtype sv_type|const size_t body_size \
				|const size_t arena_size

#if defined(PERL_IN_TOKE_C)
s	|void	|check_uni
s	|void	|force_next	|I32 type
s	|char*	|force_version	|NN char *s|int guessing
s	|char*	|force_strict_version	|NN char *s
s	|char*	|force_word	|NN char *start|int token|int check_keyword \
				|int allow_pack
s	|SV*	|tokeq		|NN SV *sv
sR	|char*	|scan_const	|NN char *start
iR	|SV*	|get_and_check_backslash_N_name|NN const char* s \
				|NN const char* const e
sR	|char*	|scan_formline	|NN char *s
sR	|char*	|scan_heredoc	|NN char *s
s	|char*	|scan_ident	|NN char *s|NN char *dest \
				|STRLEN destlen|I32 ck_uni
sR	|char*	|scan_inputsymbol|NN char *start
sR	|char*	|scan_pat	|NN char *start|I32 type
sR	|char*	|scan_str	|NN char *start|int keep_quoted \
				|int keep_delims|int re_reparse \
				|NULLOK char **delimp
sR	|char*	|scan_subst	|NN char *start
sR	|char*	|scan_trans	|NN char *start
s	|char*	|scan_word	|NN char *s|NN char *dest|STRLEN destlen \
				|int allow_package|NN STRLEN *slp
s	|void	|update_debugger_info|NULLOK SV *orig_sv \
				|NULLOK const char *const buf|STRLEN len
sR	|char*	|skipspace_flags|NN char *s|U32 flags
sR	|char*	|swallow_bom	|NN U8 *s
#ifndef PERL_NO_UTF16_FILTER
s	|I32	|utf16_textfilter|int idx|NN SV *sv|int maxlen
s	|U8*	|add_utf16_textfilter|NN U8 *const s|bool reversed
#endif
s	|void	|checkcomma	|NN const char *s|NN const char *name \
				|NN const char *what
s	|void	|force_ident	|NN const char *s|int kind
s	|void	|force_ident_maybe_lex|char pit
s	|void	|incline	|NN const char *s
s	|int	|intuit_method	|NN char *s|NULLOK SV *ioname|NULLOK CV *cv
s	|int	|intuit_more	|NN char *s
s	|I32	|lop		|I32 f|int x|NN char *s
rs	|void	|missingterm	|NULLOK char *s
s	|void	|no_op		|NN const char *const what|NULLOK char *s
s	|int	|pending_ident
sR	|I32	|sublex_done
sR	|I32	|sublex_push
sR	|I32	|sublex_start
sR	|char *	|filter_gets	|NN SV *sv|STRLEN append
sR	|HV *	|find_in_my_stash|NN const char *pkgname|STRLEN len
sR	|char *	|tokenize_use	|int is_use|NN char *s
so	|SV*	|new_constant	|NULLOK const char *s|STRLEN len \
				|NN const char *key|STRLEN keylen|NN SV *sv \
				|NULLOK SV *pv|NULLOK const char *type \
				|STRLEN typelen
s	|int	|deprecate_commaless_var_list
s	|int	|ao		|int toketype
s  |void|parse_ident|NN char **s|NN char **d \
                     |NN char * const e|int allow_package \
                     |bool is_utf8
#  if defined(PERL_CR_FILTER)
s	|I32	|cr_textfilter	|int idx|NULLOK SV *sv|int maxlen
s	|void	|strip_return	|NN SV *sv
#  endif
#  if defined(DEBUGGING)
s	|int	|tokereport	|I32 rv|NN const YYSTYPE* lvalp
sf	|void	|printbuf	|NN const char *const fmt|NN const char *const s
#  endif
#endif
EXMp	|bool	|validate_proto	|NN SV *name|NULLOK SV *proto|bool warn

#if defined(PERL_IN_UNIVERSAL_C)
s	|bool	|isa_lookup	|NN HV *stash|NN const char * const name \
                                        |STRLEN len|U32 flags
#endif

#if defined(USE_LOCALE) && defined(PERL_IN_LOCALE_C)
s	|char*	|stdize_locale	|NN char* locs
#endif

#if defined(USE_LOCALE) \
    && (defined(PERL_IN_LOCALE_C) || defined (PERL_EXT_POSIX))
ApM	|bool	|_is_cur_LC_category_utf8|int category
#	ifdef DEBUGGING
AMnPpR	|char *	|_setlocale_debug_string|const int category		    \
					|NULLOK const char* const locale    \
					|NULLOK const char* const retval
#	endif
#endif


#if defined(PERL_IN_UTIL_C)
s	|SV*	|mess_alloc
s	|SV *	|with_queued_errors|NN SV *ex
s	|bool	|invoke_exception_hook|NULLOK SV *ex|bool warn
#if defined(PERL_MEM_LOG) && !defined(PERL_MEM_LOG_NOIMPL)
sn	|void	|mem_log_common	|enum mem_log_type mlt|const UV n|const UV typesize \
				|NN const char *type_name|NULLOK const SV *sv \
				|Malloc_t oldalloc|Malloc_t newalloc \
				|NN const char *filename|const int linenumber \
				|NN const char *funcname
#endif
#endif

#if defined(PERL_MEM_LOG)
pn	|Malloc_t	|mem_log_alloc	|const UV nconst|UV typesize|NN const char *type_name|Malloc_t newalloc|NN const char *filename|const int linenumber|NN const char *funcname
pn	|Malloc_t	|mem_log_realloc	|const UV n|const UV typesize|NN const char *type_name|Malloc_t oldalloc|Malloc_t newalloc|NN const char *filename|const int linenumber|NN const char *funcname
pn	|Malloc_t	|mem_log_free	|Malloc_t oldalloc|NN const char *filename|const int linenumber|NN const char *funcname
#endif

#if defined(PERL_IN_NUMERIC_C)
#ifndef USE_QUADMATH
sn	|NV|mulexp10	|NV value|I32 exponent
#endif
#endif

#if defined(PERL_IN_UTF8_C)
sRM	|UV	|check_locale_boundary_crossing				    \
		|NN const U8* const p					    \
		|const UV result					    \
		|NN U8* const ustrp					    \
		|NN STRLEN *lenp
iR	|bool	|is_utf8_common	|NN const U8 *const p|NN SV **swash|NN const char * const swashname|NULLOK SV* const invlist
sR	|SV*	|swatch_get	|NN SV* swash|UV start|UV span
sRM	|U8*	|swash_scan_list_line|NN U8* l|NN U8* const lend|NN UV* min \
		|NN UV* max|NN UV* val|const bool wants_value		    \
		|NN const U8* const typestr
#endif

#ifndef PERL_NO_INLINE_FUNCTIONS
AiMn	|void	|append_utf8_from_native_byte|const U8 byte|NN U8** dest
#endif

Apd	|void	|sv_setsv_flags	|NN SV *dstr|NULLOK SV *sstr|const I32 flags
Apd	|void	|sv_catpvn_flags|NN SV *const dstr|NN const char *sstr|const STRLEN len \
				|const I32 flags
Apd	|void	|sv_catpv_flags	|NN SV *dstr|NN const char *sstr \
				|const I32 flags
Apd	|void	|sv_catsv_flags	|NN SV *const dsv|NULLOK SV *const ssv|const I32 flags
Apmd	|STRLEN	|sv_utf8_upgrade_flags|NN SV *const sv|const I32 flags
Ap	|STRLEN	|sv_utf8_upgrade_flags_grow|NN SV *const sv|const I32 flags|STRLEN extra
Apd	|char*	|sv_pvn_force_flags|NN SV *const sv|NULLOK STRLEN *const lp|const I32 flags
pmb	|void	|sv_copypv	|NN SV *const dsv|NN SV *const ssv
Apmd	|void	|sv_copypv_nomg	|NN SV *const dsv|NN SV *const ssv
Apd	|void	|sv_copypv_flags	|NN SV *const dsv|NN SV *const ssv|const I32 flags
Ap	|char*	|my_atof2	|NN const char *s|NN NV* value
Apn	|int	|my_socketpair	|int family|int type|int protocol|int fd[2]
Apn	|int	|my_dirfd	|NULLOK DIR* dir
#ifdef PERL_ANY_COW
: Used in pp_hot.c and regexec.c
pMXE	|SV*	|sv_setsv_cow	|NULLOK SV* dstr|NN SV* sstr
#endif

Aop	|const char *|PerlIO_context_layers|NULLOK const char *mode

#if defined(USE_PERLIO)
Ap	|int	|PerlIO_close		|NULLOK PerlIO *f
Ap	|int	|PerlIO_fill		|NULLOK PerlIO *f
Ap	|int	|PerlIO_fileno		|NULLOK PerlIO *f
Ap	|int	|PerlIO_eof		|NULLOK PerlIO *f
Ap	|int	|PerlIO_error		|NULLOK PerlIO *f
Ap	|int	|PerlIO_flush		|NULLOK PerlIO *f
Ap	|void	|PerlIO_clearerr	|NULLOK PerlIO *f
Ap	|void	|PerlIO_set_cnt		|NULLOK PerlIO *f|SSize_t cnt
Ap	|void	|PerlIO_set_ptrcnt	|NULLOK PerlIO *f|NULLOK STDCHAR *ptr \
					|SSize_t cnt
Ap	|void	|PerlIO_setlinebuf	|NULLOK PerlIO *f
Ap	|SSize_t|PerlIO_read		|NULLOK PerlIO *f|NN void *vbuf \
					|Size_t count
Ap	|SSize_t|PerlIO_write		|NULLOK PerlIO *f|NN const void *vbuf \
					|Size_t count
Ap	|SSize_t|PerlIO_unread		|NULLOK PerlIO *f|NN const void *vbuf \
					|Size_t count
Ap	|Off_t	|PerlIO_tell		|NULLOK PerlIO *f
Ap	|int	|PerlIO_seek		|NULLOK PerlIO *f|Off_t offset|int whence
Xp	|void	|PerlIO_save_errno	|NULLOK PerlIO *f
Xp	|void	|PerlIO_restore_errno	|NULLOK PerlIO *f

Ap	|STDCHAR *|PerlIO_get_base	|NULLOK PerlIO *f
Ap	|STDCHAR *|PerlIO_get_ptr	|NULLOK PerlIO *f
ApR	|SSize_t	  |PerlIO_get_bufsiz	|NULLOK PerlIO *f
ApR	|SSize_t	  |PerlIO_get_cnt	|NULLOK PerlIO *f

ApR	|PerlIO *|PerlIO_stdin
ApR	|PerlIO *|PerlIO_stdout
ApR	|PerlIO *|PerlIO_stderr
#endif /* USE_PERLIO */

: Only used in dump.c
p	|void	|deb_stack_all
#if defined(PERL_IN_DEB_C)
s	|void	|deb_stack_n	|NN SV** stack_base|I32 stack_min \
				|I32 stack_max|I32 mark_min|I32 mark_max
#endif

: pad API
Apda	|PADLIST*|pad_new	|int flags
#ifdef DEBUGGING
pnX	|void|set_padlist| NN CV * cv | NULLOK PADLIST * padlist
#endif
#if defined(PERL_IN_PAD_C)
s	|PADOFFSET|pad_alloc_name|NN PADNAME *name|U32 flags \
				|NULLOK HV *typestash|NULLOK HV *ourstash
#endif
Apd	|PADOFFSET|pad_add_name_pvn|NN const char *namepv|STRLEN namelen\
				|U32 flags|NULLOK HV *typestash\
				|NULLOK HV *ourstash
Apd	|PADOFFSET|pad_add_name_pv|NN const char *name\
				|const U32 flags|NULLOK HV *typestash\
				|NULLOK HV *ourstash
Apd	|PADOFFSET|pad_add_name_sv|NN SV *name\
				|U32 flags|NULLOK HV *typestash\
				|NULLOK HV *ourstash
AMpd	|PADOFFSET|pad_alloc	|I32 optype|U32 tmptype
Apd	|PADOFFSET|pad_add_anon	|NN CV* func|I32 optype
p	|void	|pad_add_weakref|NN CV* func
#if defined(PERL_IN_PAD_C)
sd	|void	|pad_check_dup	|NN PADNAME *name|U32 flags \
				|NULLOK const HV *ourstash
#endif
Apd	|PADOFFSET|pad_findmy_pvn|NN const char* namepv|STRLEN namelen|U32 flags
Apd	|PADOFFSET|pad_findmy_pv|NN const char* name|U32 flags
Apd	|PADOFFSET|pad_findmy_sv|NN SV* name|U32 flags
ApdD	|PADOFFSET|find_rundefsvoffset	|
Apd	|SV*	|find_rundefsv	|
#if defined(PERL_IN_PAD_C)
sd	|PADOFFSET|pad_findlex	|NN const char *namepv|STRLEN namelen|U32 flags \
				|NN const CV* cv|U32 seq|int warn \
				|NULLOK SV** out_capture \
				|NN PADNAME** out_name|NN int *out_flags
#endif
#ifdef DEBUGGING
Apd	|SV*	|pad_sv		|PADOFFSET po
Apd	|void	|pad_setsv	|PADOFFSET po|NN SV* sv
#endif
pd	|void	|pad_block_start|int full
Apd	|U32	|intro_my
pd	|OP *	|pad_leavemy
pd	|void	|pad_swipe	|PADOFFSET po|bool refadjust
#if defined(PERL_IN_PAD_C)
sd	|void	|pad_reset
#endif
AMpd	|void	|pad_tidy	|padtidy_type type
pd	|void	|pad_free	|PADOFFSET po
pd 	|void	|do_dump_pad	|I32 level|NN PerlIO *file|NULLOK PADLIST *padlist|int full
#if defined(PERL_IN_PAD_C)
#  if defined(DEBUGGING)
sd	|void	|cv_dump	|NN const CV *cv|NN const char *title
#  endif
#endif
Apd	|CV*	|cv_clone	|NN CV* proto
p	|CV*	|cv_clone_into	|NN CV* proto|NN CV *target
pd	|void	|pad_fixup_inner_anons|NN PADLIST *padlist|NN CV *old_cv|NN CV *new_cv
pdX	|void	|pad_push	|NN PADLIST *padlist|int depth
ApbdR	|HV*	|pad_compname_type|const PADOFFSET po
AMpdRn	|PADNAME *|padnamelist_fetch|NN PADNAMELIST *pnl|SSize_t key
Xop	|void	|padnamelist_free|NN PADNAMELIST *pnl
AMpd	|PADNAME **|padnamelist_store|NN PADNAMELIST *pnl|SSize_t key \
				     |NULLOK PADNAME *val
Xop	|void	|padname_free	|NN PADNAME *pn
#if defined(USE_ITHREADS)
pdR	|PADNAME *|padname_dup	|NN PADNAME *src|NN CLONE_PARAMS *param
pR	|PADNAMELIST *|padnamelist_dup|NN PADNAMELIST *srcpad \
				      |NN CLONE_PARAMS *param
pdR	|PADLIST *|padlist_dup	|NN PADLIST *srcpad \
				|NN CLONE_PARAMS *param
#endif
p	|PAD **	|padlist_store	|NN PADLIST *padlist|I32 key \
				|NULLOK PAD *val

ApdR	|CV*	|find_runcv	|NULLOK U32 *db_seqp
pR	|CV*	|find_runcv_where|U8 cond|IV arg \
				 |NULLOK U32 *db_seqp
: Only used in perl.c
p	|void	|free_tied_hv_pool
#if defined(DEBUGGING)
: Used in mg.c
pR	|int	|get_debug_opts	|NN const char **s|bool givehelp
#endif
Ap	|void	|save_set_svflags|NN SV *sv|U32 mask|U32 val
#ifdef DEBUGGING
Apod	|void	|hv_assert	|NN HV *hv
#endif

ApdR	|SV*	|hv_scalar	|NN HV *hv
ApoR	|I32*	|hv_riter_p	|NN HV *hv
ApoR	|HE**	|hv_eiter_p	|NN HV *hv
Apo	|void	|hv_riter_set	|NN HV *hv|I32 riter
Apo	|void	|hv_eiter_set	|NN HV *hv|NULLOK HE *eiter
Ap      |void   |hv_rand_set    |NN HV *hv|U32 new_xhv_rand
Ap	|void	|hv_name_set	|NN HV *hv|NULLOK const char *name|U32 len|U32 flags
p	|void	|hv_ename_add	|NN HV *hv|NN const char *name|U32 len \
				|U32 flags
p	|void	|hv_ename_delete|NN HV *hv|NN const char *name|U32 len \
				|U32 flags
: Used in dump.c and hv.c
poM	|AV**	|hv_backreferences_p	|NN HV *hv
#if defined(PERL_IN_DUMP_C) || defined(PERL_IN_HV_C) || defined(PERL_IN_SV_C) || defined(PERL_IN_SCOPE_C)
poM	|void	|hv_kill_backrefs	|NN HV *hv
#endif
Apd	|void	|hv_clear_placeholders	|NN HV *hv
XpoR	|SSize_t*|hv_placeholders_p	|NN HV *hv
ApoR	|I32	|hv_placeholders_get	|NN const HV *hv
Apo	|void	|hv_placeholders_set	|NN HV *hv|I32 ph

: This is indirectly referenced by globals.c. This is somewhat annoying.
p	|SV*	|magic_scalarpack|NN HV *hv|NN MAGIC *mg

#if defined(PERL_IN_SV_C)
s	|SV *	|find_hash_subscript|NULLOK const HV *const hv \
		|NN const SV *const val
s	|I32	|find_array_subscript|NULLOK const AV *const av \
		|NN const SV *const val
sMd	|SV*	|find_uninit_var|NULLOK const OP *const obase \
		|NULLOK const SV *const uninit_sv|bool match \
		|NN const char **desc_p
#endif

Ap	|GV*	|gv_fetchpvn_flags|NN const char* name|STRLEN len|I32 flags|const svtype sv_type
Ap	|GV*	|gv_fetchsv|NN SV *name|I32 flags|const svtype sv_type

#ifdef DEBUG_LEAKING_SCALARS_FORK_DUMP
: Used in sv.c
p	|void	|dump_sv_child	|NN SV *sv
#endif

#ifdef PERL_DONT_CREATE_GVSV
Apbm	|GV*	|gv_SVadd	|NULLOK GV *gv
#endif
#if defined(PERL_IN_UTIL_C)
s	|bool	|ckwarn_common	|U32 w
#endif
Apo	|bool	|ckwarn		|U32 w
Apo	|bool	|ckwarn_d	|U32 w
: FIXME - exported for ByteLoader - public or private?
XEopMa	|STRLEN *|new_warnings_bitfield|NULLOK STRLEN *buffer \
				|NN const char *const bits|STRLEN size

#ifndef SPRINTF_RETURNS_STRLEN
Apnod	|int	|my_sprintf	|NN char *buffer|NN const char *pat|...
#endif

Apnodf	|int	|my_snprintf	|NN char *buffer|const Size_t len|NN const char *format|...
Apnod	|int	|my_vsnprintf	|NN char *buffer|const Size_t len|NN const char *format|va_list ap
#ifdef USE_QUADMATH
Apnd	|const char*	|quadmath_format_single|NN const char* format
Apnd	|bool|quadmath_format_needed|NN const char* format
#endif

: Used in mg.c, sv.c
px	|void	|my_clearenv

#ifdef PERL_IMPLICIT_CONTEXT
#ifdef PERL_GLOBAL_STRUCT_PRIVATE
Apo	|void*	|my_cxt_init	|NN const char *my_cxt_key|size_t size
Apo	|int	|my_cxt_index	|NN const char *my_cxt_key
#else
Apo	|void*	|my_cxt_init	|NN int *index|size_t size
#endif
#endif
#if defined(PERL_IN_UTIL_C)
so	|void	|xs_version_bootcheck|U32 items|U32 ax|NN const char *xs_p \
				|STRLEN xs_len
#endif
Xpon	|I32	|xs_handshake	|const U32 key|NN void * v_my_perl\
				|NN const char * file| ...
Xp	|void	|xs_boot_epilog	|const I32 ax
#ifndef HAS_STRLCAT
Apnod	|Size_t	|my_strlcat	|NULLOK char *dst|NULLOK const char *src|Size_t size
#endif

#ifndef HAS_STRLCPY
Apnod     |Size_t |my_strlcpy     |NULLOK char *dst|NULLOK const char *src|Size_t size
#endif

Apdn	|bool	|isinfnan	|NV nv
p	|bool	|isinfnansv	|NN SV *sv

#if !defined(HAS_SIGNBIT)
AMdnoP	|int	|Perl_signbit	|NV f
#endif

: Used by B
XEMop	|void	|emulate_cop_io	|NN const COP *const c|NN SV *const sv
: Used by SvRX and SvRXOK
XEMop	|REGEXP *|get_re_arg|NULLOK SV *sv

Aop	|SV*	|mro_get_private_data|NN struct mro_meta *const smeta \
				     |NN const struct mro_alg *const which
Aop	|SV*	|mro_set_private_data|NN struct mro_meta *const smeta \
				     |NN const struct mro_alg *const which \
				     |NN SV *const data
Aop	|const struct mro_alg *|mro_get_from_name|NN SV *name
Aop	|void	|mro_register	|NN const struct mro_alg *mro
Aop	|void	|mro_set_mro	|NN struct mro_meta *const meta \
				|NN SV *const name
: Used in HvMROMETA(), which is public.
Xpo	|struct mro_meta*	|mro_meta_init	|NN HV* stash
#if defined(USE_ITHREADS)
: Only used in sv.c
p	|struct mro_meta*	|mro_meta_dup	|NN struct mro_meta* smeta|NN CLONE_PARAMS* param
#endif
Apd	|AV*	|mro_get_linear_isa|NN HV* stash
#if defined(PERL_IN_MRO_C)
sd	|AV*	|mro_get_linear_isa_dfs|NN HV* stash|U32 level
s	|void	|mro_clean_isarev|NN HV * const isa   \
				 |NN const char * const name \
				 |const STRLEN len \
				 |NULLOK HV * const exceptions \
				 |U32 hash|U32 flags
s	|void	|mro_gather_and_rename|NN HV * const stashes \
				      |NN HV * const seen_stashes \
				      |NULLOK HV *stash \
				      |NULLOK HV *oldstash \
				      |NN SV *namesv
#endif
: Used in hv.c, mg.c, pp.c, sv.c
pd	|void   |mro_isa_changed_in|NN HV* stash
Apd	|void	|mro_method_changed_in	|NN HV* stash
pdx	|void	|mro_package_moved	|NULLOK HV * const stash|NULLOK HV * const oldstash|NN const GV * const gv|U32 flags
: Only used in perl.c
p	|void   |boot_core_mro
Apon	|void	|sys_init	|NN int* argc|NN char*** argv
Apon	|void	|sys_init3	|NN int* argc|NN char*** argv|NN char*** env
Apon	|void	|sys_term
ApoM	|const char *|cop_fetch_label|NN COP *const cop \
		|NULLOK STRLEN *len|NULLOK U32 *flags
: Only used  in op.c and the perl compiler
ApoM	|void|cop_store_label \
		|NN COP *const cop|NN const char *label|STRLEN len|U32 flags

xpo	|int	|keyword_plugin_standard|NN char* keyword_ptr|STRLEN keyword_len|NN OP** op_ptr

#if defined(USE_ITHREADS)
#  if defined(PERL_IN_SV_C)
s	|void	|unreferenced_to_tmp_stack|NN AV *const unreferenced
#  endif
Aanop	|CLONE_PARAMS *|clone_params_new|NN PerlInterpreter *const from \
		|NN PerlInterpreter *const to
Anop	|void	|clone_params_del|NN CLONE_PARAMS *param
#endif

: Used in perl.c and toke.c
op	|void	|populate_isa	|NN const char *name|STRLEN len|...

: Used in keywords.c and toke.c
Xop	|bool	|feature_is_enabled|NN const char *const name \
		|STRLEN namelen

: Some static inline functions need predeclaration because they are used
: inside other static inline functions.
#if defined(PERL_CORE) || defined (PERL_EXT)
Ei	|STRLEN	|sv_or_pv_pos_u2b|NN SV *sv|NN const char *pv|STRLEN pos \
				 |NULLOK STRLEN *lenp
#endif

EMpPX	|SV*	|_get_encoding
Ap	|void	|clear_defarray	|NN AV* av|bool abandon

ApM	|void	|leave_adjust_stacks|NN SV **from_sp|NN SV **to_sp \
                |U8 gimme|int filter

#ifndef PERL_NO_INLINE_FUNCTIONS
AiM	|PERL_CONTEXT *	|cx_pushblock|U8 type|U8 gimme|NN SV** sp|I32 saveix
AiM	|void	|cx_popblock|NN PERL_CONTEXT *cx
AiM	|void	|cx_topblock|NN PERL_CONTEXT *cx
AiM	|void	|cx_pushsub      |NN PERL_CONTEXT *cx|NN CV *cv \
				 |NULLOK OP *retop|bool hasargs
AiM	|void	|cx_popsub_common|NN PERL_CONTEXT *cx
AiM	|void	|cx_popsub_args  |NN PERL_CONTEXT *cx
AiM	|void	|cx_popsub       |NN PERL_CONTEXT *cx
AiM	|void	|cx_pushformat   |NN PERL_CONTEXT *cx|NN CV *cv \
				 |NULLOK OP *retop|NULLOK GV *gv
AiM	|void	|cx_popformat    |NN PERL_CONTEXT *cx
AiM	|void	|cx_pusheval     |NN PERL_CONTEXT *cx \
				 |NULLOK OP *retop|NULLOK SV *namesv
AiM	|void	|cx_popeval      |NN PERL_CONTEXT *cx
AiM	|void	|cx_pushloop_plain|NN PERL_CONTEXT *cx
AiM	|void	|cx_pushloop_for |NN PERL_CONTEXT *cx \
				 |NN void *itervarp|NULLOK SV *itersave
AiM	|void	|cx_poploop      |NN PERL_CONTEXT *cx
AiM	|void	|cx_pushwhen     |NN PERL_CONTEXT *cx
AiM	|void	|cx_popwhen      |NN PERL_CONTEXT *cx
AiM	|void	|cx_pushgiven    |NN PERL_CONTEXT *cx|NULLOK SV *orig_defsv
AiM	|void	|cx_popgiven     |NN PERL_CONTEXT *cx
#endif

#ifdef USE_DTRACE
XEop    |void   |dtrace_probe_call |NN CV *cv|bool is_call
XEop    |void   |dtrace_probe_load |NN const char *name|bool is_loading
XEop    |void   |dtrace_probe_op   |NN const OP *op
XEop    |void   |dtrace_probe_phase|enum perl_phase phase
#endif

: ex: set ts=8 sts=4 sw=4 noet:
@


1.2
log
@Update to perl 5.20.3

OK bluhm@@
@
text
@d30 8
a37 4
:   b  Binary backward compatibility; function is a macro
:      but has also Perl_ implementation (which is exported); often
:      implemented in mathoms.c (whose compilation can be suppressed; see
:      INSTALL):
d74 2
a75 1
:         any doc entry is marked that function may change
d79 1
a79 1
:         suppress proto.h entry
d234 1
d236 1
d249 2
a250 2
pR	|OP*	|block_end	|I32 floor|NULLOK OP* seq
ApR	|I32	|block_gimme
d252 1
a252 1
pR	|int	|block_start	|int full
d263 4
a266 4
ApR	|U32	|cast_ulong	|NV f
ApR	|I32	|cast_i32	|NV f
ApR	|IV	|cast_iv	|NV f
ApR	|UV	|cast_uv	|NV f
d273 1
a273 1
pR	|OP*	|convert	|I32 optype|I32 flags|NULLOK OP* o
d275 1
a275 1
pM	|PERL_CONTEXT*	|create_eval_scope|U32 flags
d285 1
d291 1
a291 1
Afnp	|OP*	|die_nocontext	|NULLOK const char* pat|...
d318 3
a320 4
ApdR	|SV*	|cv_const_sv	|NULLOK const CV *const cv
pR	|SV*	|cv_const_sv_or_av|NULLOK const CV *const cv
: Used in pad.c
pR	|SV*	|op_const_sv	|NULLOK const OP* o|NULLOK CV* cv
d322 2
a323 1
p	|void	|cv_forget_slab	|NN CV *cv
d340 1
d349 2
a350 2
Apd	|OP*	|die_sv		|NN SV *baseex
Afpd	|OP*	|die		|NULLOK const char* pat|...
d355 1
a355 1
pmb	|bool	|do_aexec	|NULLOK SV* really|NN SV** mark|NN SV** sp
d357 1
a357 1
p	|bool	|do_aexec5	|NULLOK SV* really|NN SV** mark|NN SV** sp|int fd|int do_report
d365 1
a365 1
pm	|bool	|do_exec	|NN const char* cmd
d367 1
a367 1
p	|bool	|do_exec	|NN const char* cmd
d376 1
a376 1
p	|bool	|do_exec3	|NN const char *incmd|int fd|int do_report
d446 1
a446 1
ApR	|I32	|dowantarray
d451 1
a451 1
Ap	|void	|gv_dump	|NN GV* gv
d467 1
a467 1
s	|OP*	|force_list	|NULLOK OP* arg
d470 5
d540 1
d553 1
d556 6
d652 2
a653 1
p	|bool	|io_close	|NN IO* io|bool not_implicit
d659 3
d682 2
a683 2
iDMPR	|bool	|isIDFIRST_lazy	|NN const char* p
iDMPR	|bool	|isALNUM_lazy	|NN const char* p
d685 1
a685 1
sR	|U8	|to_lower_latin1|const U8 c|NULLOK U8 *p|NULLOK STRLEN *lenp
d713 2
a714 1
Anpd	|bool	|is_ascii_string|NN const U8 *s|STRLEN len
d716 1
a716 1
Anpd	|STRLEN	|is_utf8_char_buf|NN const U8 *buf|NN const U8 *buf_end
d726 4
d789 5
a796 1
: Used in S_doeval in pp_ctl.c
d804 2
a805 3
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_TOKE_C)
EMsR	|char	|grok_bslash_c	|const char source|const bool output_warning
EMsR	|bool	|grok_bslash_o	|NN char** s|NN UV* uv           \
d811 2
a812 1
EMiR	|bool	|grok_bslash_x	|NN char** s|NN UV* uv           \
d818 1
a818 1
EMsPR	|char*|form_short_octal_warning|NN const char * const s  \
d820 1
d823 1
d825 1
d828 1
d844 1
d857 2
a858 1
:change to the interpreter DLL image under VS 2003 -O1 -GL 32 bits
d869 1
d874 1
d892 1
a892 1
Ap	|void	|markstack_grow
d911 2
a912 2
ApdR	|MAGIC*	|mg_find	|NULLOK const SV* sv|int type
ApdR	|MAGIC*	|mg_findext	|NULLOK const SV* sv|int type|NULLOK const MGVTBL *vtbl
d919 1
a919 1
Apd	|void	|mg_magical	|NN SV* sv
d922 1
a922 1
Ap	|void	|mini_mktime	|NN struct tm *ptm
d934 2
a935 2
#if (!defined(HAS_MEMCPY) && !defined(HAS_BCOPY)) || (!defined(HAS_MEMMOVE) && !defined(HAS_SAFE_MEMCPY) && !defined(HAS_SAFE_BCOPY))
Anp	|char*	|my_bcopy	|NN const char* from|NN char* to|I32 len
d938 1
a938 1
Anp	|char*	|my_bzero	|NN char* loc|I32 len
d949 1
a949 1
AnpP	|I32	|my_memcmp	|NN const char* s1|NN const char* s2|I32 len
d952 1
a952 1
Anp	|void*	|my_memset	|NN char* loc|I32 ch|I32 len
a969 3
#if defined(PERL_IN_OP_C)
i	|bool	|aassign_common_vars	|NULLOK OP* o
#endif
a975 3
#ifdef PERL_MAD
Ap	|OP*	|newFORM	|I32 floor|NULLOK OP* o|NULLOK OP* block
#else
a976 1
#endif
d992 1
a992 1
				|NN const char *const filename \
d995 1
d1014 3
d1023 1
a1023 1
Apda	|SV*	|newRV_noinc	|NN SV *const sv
d1027 1
d1044 2
d1050 2
d1060 3
d1079 1
a1079 1
p	|PerlIO*|nextargv	|NN GV* gv
a1089 3
#ifdef PERL_MAD
p	|OP*	|package	|NN OP* o
#else
a1090 1
#endif
d1138 1
d1141 1
d1146 2
a1147 1
Admn	|void	|sync_locale
d1156 2
a1157 1
p	|OP*	|pmruntime	|NN OP *o|NN OP *expr|bool isreg|I32 floor
d1168 1
a1168 1
Ap	|SV*	|regclass_swash	|NULLOK const regexp *prog \
d1173 1
a1173 1
: Not used currently: EXMs	|bool	|_invlistEQ	|NN SV* const a|NN SV* const b|const bool complement_b
a1202 4
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_TOKE_C)
EiPR	|I32	|regcurly	|NN const char *s                   \
				|const bool rbrace_must_be_escaped
#endif
a1228 2
: FIXME - why the E?
Ep	|void	|regprop	|NULLOK const regexp *prog|NN SV* sv|NN const regnode* o|NULLOK const regmatch_info *reginfo
d1279 1
a1279 1
Ap	|void	|save_gp	|NN GV* gv|I32 empty
d1305 1
a1330 2
Ap	|char*	|screaminstr	|NN SV *bigstr|NN SV *littlestr|I32 start_shift \
				|I32 end_shift|NN I32 *old_posp|I32 last
d1379 1
a1379 1
Apd	|int	|sv_backoff	|NN SV *const sv
d1451 1
d1453 1
d1474 1
a1474 1
pd	|SV*	|sv_ref	|NULLOK SV *dst|NN const SV *const sv|const int ob
d1518 2
a1519 2
ApR	|SV*	|swash_init	|NN const char* pkg|NN const char* name|NN SV* listsv|I32 minbits|I32 none
Ap	|UV	|swash_fetch	|NN SV *swash|NN const U8 *ptr|bool do_utf8
d1523 1
a1523 2
EiMR	|UV*	|_invlist_array_init	|NN SV* const invlist|const bool will_have_0
EiMR	|UV*	|invlist_array	|NN SV* const invlist
d1525 1
a1525 1
EiMR	|UV	|invlist_max	|NN SV* const invlist
d1527 9
a1535 4
EiMR	|IV*	|get_invlist_previous_index_addr|NN SV* invlist
EiMR	|IV	|invlist_previous_index|NN SV* const invlist
EiM	|void	|invlist_set_previous_index|NN SV* const invlist|const IV index
EiM	|void	|invlist_trim	|NN SV* const invlist
d1537 9
a1545 6
EiMR	|bool	|invlist_is_iterating|NN SV* const invlist
EiMR	|STRLEN*|get_invlist_iter_addr	|NN SV* invlist
EiM	|void	|invlist_iterinit|NN SV* invlist
EsMR	|bool	|invlist_iternext|NN SV* invlist|NN UV* start|NN UV* end
EiM	|void	|invlist_iterfinish|NN SV* invlist
EiMR	|UV	|invlist_highest|NN SV* const invlist
d1562 1
a1562 1
EXMp	|void	|_invlist_populate_swatch   |NN SV* const invlist|const UV start|const UV end|NN U8* swatch
d1570 5
a1574 5
EXMpR	|SV*	|_invlist_contents|NN SV* const invlist
EiMR	|bool*	|get_invlist_offset_addr|NN SV* invlist
EiMR	|UV	|_invlist_len	|NN SV* const invlist
EMiR	|bool	|_invlist_contains_cp|NN SV* const invlist|const UV cp
EXpMR	|IV	|_invlist_search	|NN SV* const invlist|const UV cp
d1581 2
a1582 1
				|NN const struct regnode *node|bool doinit \
d1584 3
a1586 1
				|NULLOK SV **lonly_utf8_locale
d1595 15
a1609 2
Apd	|UV	|to_utf8_case	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp \
				|NN SV **swashp|NN const char *normal|NULLOK const char *special
d1623 1
a1623 1
p	|bool	|translate_substr_offsets|STRLEN curlen|IV pos1_iv \
a1639 4
#ifdef PERL_MAD
p	|OP *	|utilize	|int aver|I32 floor|NULLOK OP* version \
				|NN OP* idop|NULLOK OP* arg
#else
a1640 1
#endif
d1645 1
a1645 1
ApdPR	|U8*	|utf8_hop	|NN const U8 *s|I32 off
d1701 6
d1713 1
d1716 4
d1776 1
a1776 1
Apd	|char*	|pv_escape	|NN SV *dsv|NN char const * const str\
d1794 1
a1794 1
Ap	|void	|do_magic_dump	|I32 level|NN PerlIO *file|NN const MAGIC *mg|I32 nest \
d1815 1
a1815 1
Ap	|void	|tmps_grow	|SSize_t n
d1817 1
d1906 1
a1906 1
                     |svtype sv_type
d1909 1
a1909 1
                     |svtype sv_type
d1954 1
a1954 1
sR	|I32	|is_list_assignment|NULLOK const OP *o
a1959 1
sR	|OP*	|newDEFSVOP
a1962 2
s	|void	|null_listop_in_list_context |NN OP* o
s	|SV*	|gv_ename	|NN GV *gv
d1968 2
a1969 2
s	|void	|bad_type_pv	|I32 n|NN const char *t|NN const char *name|U32 flags|NN const OP *kid
s	|void	|bad_type_gv	|I32 n|NN const char *t|NN GV *gv|U32 flags|NN const OP *kid
a1971 1
sR	|OP*	|too_few_arguments_sv|NN OP *o|NN SV* namesv|U32 flags
a1973 1
sR	|OP*	|too_many_arguments_sv|NN OP *o|NN SV* namesv|U32 flags
d1979 1
a1979 1
s	|void	|process_special_blocks	|I32 floor \
d1982 2
d2030 1
a2030 1
s	|void	|do_chomp	|NN SV *retval|NN SV *sv|bool chomping
d2055 1
a2055 1
snR	|char *	|bytes_to_uni	|NN const U8 *start|STRLEN len|NN char *dest \
d2066 1
a2066 1
sR	|I32	|dopoptogiven	|I32 startingblock
d2072 1
a2072 1
s	|bool	|doeval		|int gimme \
a2077 2
s	|SV **	|adjust_stack_on_leave|NN SV **newsp|NN SV **sp|NN SV **mark|I32 gimme \
				      |U32 flags|bool lvalue
d2089 1
a2089 1
sR	|SV*	|method_common	|NN SV* meth|NULLOK U32* hashp
d2098 1
d2100 1
d2118 5
d2126 4
d2132 4
a2139 2
Ei	|STRLEN	|reguni		|NN const RExC_state_t *pRExC_state \
				|UV uv|NN char *s
d2147 8
a2154 1
Es	|regnode*|regclass	|NN RExC_state_t *pRExC_state \
d2157 12
a2168 3
				|const bool silence_non_portable	      \
				|NULLOK SV** ret_invlist
Es	|bool|could_it_be_a_POSIX_class|NN RExC_state_t *pRExC_state
d2175 1
a2175 1
Es	|UV	|reg_recode	|const char value|NN SV **encp
d2178 7
a2184 4
Es	|bool	|grok_bslash_N	|NN RExC_state_t *pRExC_state        \
				|NULLOK regnode** nodep|NULLOK UV *valuep   \
				|NN I32 *flagp|U32 depth|bool in_char_class \
				|const bool strict
d2187 4
a2190 2
Es	|void	|regtail	|NN RExC_state_t *pRExC_state \
				|NN regnode *p|NN const regnode *val|U32 depth
a2196 4
EsRn	|char *	|regwhite	|NN RExC_state_t *pRExC_state \
				|NN char *p
EsRn	|char *	|regpatws	|NN RExC_state_t *pRExC_state \
				|NN char *p|const bool recognize_comment
d2200 6
a2205 3
Ei	|U8   |compute_EXACTish|NN RExC_state_t *pRExC_state
Es	|char *	|nextchar	|NN RExC_state_t *pRExC_state
Es	|bool	|reg_skipcomment|NN RExC_state_t *pRExC_state
d2212 1
a2212 1
EsR	|int	|ssc_is_anything|NN const regnode_ssc *ssc
d2215 1
a2215 1
EsR	|int	|ssc_is_cp_posixl_init|NN const RExC_state_t *pRExC_state \
d2234 3
a2236 1
Ei	|void	|ssc_clear_locale|NN regnode_ssc *ssc
d2249 6
a2254 2
Ei	|I32	|regpposixcc	|NN RExC_state_t *pRExC_state \
				|I32 value|const bool strict
d2259 8
a2266 3
Es	|void	|make_trie_failtable	|NN RExC_state_t *pRExC_state \
                                |NN regnode *source|NN regnode *stclass \
				|U32 depth
d2268 1
d2276 18
a2293 3
Es	|void	|put_byte	|NN SV* sv|int c
Es	|bool	|put_latin1_charclass_innards|NN SV* sv|NN char* bitmap
Es	|void	|put_range	|NN SV* sv|UV start|UV end
d2317 1
a2317 1
ERs	|I32	|regtry		|NN regmatch_info *reginfo|NN char **startposp
d2336 1
a2336 1
ERs	|I32	|reg_check_named_buff_matched	|NN const regexp *rex \
d2338 40
d2380 1
a2380 1
				|NN const char *loc_bostr|NN const char *loc_reg_starttry|const bool do_utf8
d2384 2
d2390 1
a2390 1
s	|CV*	|deb_curcv	|const I32 ix
d2420 1
d2422 1
a2451 3
#  if defined(PERL_OLD_COPY_ON_WRITE)
sM	|void	|sv_release_COW	|NN SV *sv|NN const char *pvx|NN SV *after
#  endif
a2455 1
s	|void	|glob_assign_ref|NN SV *const dstr|NN SV *const sstr
a2482 1
				|bool deprecate_escaped_matching \
d2501 1
a2501 1
s	|int	|intuit_method	|NN char *s|NULLOK GV *gv|NULLOK CV *cv
d2538 1
a2538 1
#if defined(PERL_IN_LOCALE_C) && defined(USE_LOCALE)
a2539 1
s	|bool	|is_cur_LC_category_utf8|int category
d2542 11
d2566 6
d2573 1
d2576 1
d2579 5
a2583 2
iRn	|STRLEN	|is_utf8_char_slow|NN const U8 *s|const STRLEN len
sRM	|UV	|check_locale_boundary_crossing|NN const U8* const p|const UV result|NN U8* const ustrp|NN STRLEN *lenp
d2586 3
d2591 1
d2593 1
d2609 1
a2609 1
Ap	|int	|my_dirfd	|NULLOK DIR* dir
d2637 2
d2648 1
a2648 1
#endif /* PERLIO_LAYERS */
d2658 3
a2660 2
#ifdef PERL_MAD
Mnpd	|void	|pad_peg	|NN const char* s
a2661 1
Apda	|PADLIST*|pad_new	|int flags
d2663 1
a2663 1
s	|PADOFFSET|pad_alloc_name|NN SV *namesv|U32 flags \
d2677 1
d2679 2
a2680 1
sd	|void	|pad_check_dup	|NN SV *name|U32 flags|NULLOK const HV *ourstash
a2686 2
: Used in pp.c
p	|SV*	|find_rundefsv2	|NN CV *cv|U32 seq
d2690 2
a2691 2
				|NULLOK SV** out_capture|NN SV** out_name_sv \
				|NN int *out_flags
d2698 1
a2698 1
pd	|U32	|intro_my
d2716 6
a2721 1
ApdR	|HV*	|pad_compname_type|const PADOFFSET po
d2723 4
a2726 1
pdR	|PADLIST *|padlist_dup	|NULLOK PADLIST *srcpad \
d2776 2
a2777 1
		|NULLOK const SV *const uninit_sv|bool top
d2806 4
d2822 2
a2823 4

: This function is an implementation detail. The public API for this is
: XS_VERSION_BOOTCHECK
Xpo	|void	|xs_version_bootcheck|U32 items|U32 ax|NN const char *xs_p \
d2825 4
a2828 5
: This function is an implementation detail. The public API for this is
: XS_APIVERSION_BOOTCHECK
Xpo	|void	|xs_apiversion_bootcheck|NN SV *module|NN const char *api_p \
				|STRLEN api_len

d2837 3
a2839 52
#ifdef PERL_MAD
#if defined(PERL_IN_DUMP_C)
sf	|void	|xmldump_attr	|I32 level|NN PerlIO *file|NN const char* pat \
				|...
#endif
Mfp	|void	|xmldump_indent	|I32 level|NN PerlIO *file|NN const char* pat \
				|...
Mp	|void	|xmldump_vindent|I32 level|NN PerlIO *file|NN const char* pat \
				|NULLOK va_list *args
Mp	|void	|xmldump_all
p	|void	|xmldump_all_perl	|bool justperl
Mp	|void	|xmldump_packsubs	|NN const HV* stash
p	|void	|xmldump_packsubs_perl	|NN const HV* stash|bool justperl
Mp	|void	|xmldump_sub	|NN const GV* gv
Mp	|void	|xmldump_sub_perl	|NN const GV* gv|bool justperl
Mp	|void	|xmldump_form	|NN const GV* gv
Mp	|void	|xmldump_eval
Mp	|char*	|sv_catxmlsv	|NN SV *dsv|NN SV *ssv
Mp	|char*	|sv_catxmlpvn	|NN SV *dsv|NN const char *pv|STRLEN len|int utf8
Mp	|char*	|sv_catxmlpv	|NN SV *dsv|NN const char *pv|int utf8
Mp	|char*	|sv_xmlpeek	|NN SV* sv
Mp	|void	|do_pmop_xmldump|I32 level|NN PerlIO *file \
				|NULLOK const PMOP *pm
Mp	|void	|pmop_xmldump	|NULLOK const PMOP* pm
Mp	|void	|do_op_xmldump	|I32 level|NN PerlIO *file|NULLOK const OP *o
Mp	|void	|op_xmldump	|NN const OP *o

Mp	|TOKEN*	|newTOKEN	|I32 optype|YYSTYPE lval \
				|NULLOK MADPROP* madprop
Mp	|void	|token_free	|NN TOKEN *tk
Mp	|void	|token_getmad	|NN TOKEN *tk|NULLOK OP *o|char slot
Mp	|void	|op_getmad_weak	|NULLOK OP* from|NULLOK OP* o|char slot
Mp	|void	|op_getmad	|NULLOK OP* from|NULLOK OP* o|char slot
Mp	|void	|prepend_madprops|NULLOK MADPROP* mp|NULLOK OP* o|char slot
Mp	|void	|append_madprops|NULLOK MADPROP* tm|NULLOK OP* o|char slot
Mp	|void	|addmad		|NULLOK MADPROP* tm|NULLOK MADPROP** root \
				|char slot
Mp	|MADPROP*|newMADsv	|char key|NN SV* sv
Mp	|MADPROP*|newMADPROP	|char key|char type|NULLOK void* val \
				|I32 vlen
Mp	|void	|mad_free	|NULLOK MADPROP* mp

#  if defined(PERL_IN_TOKE_C)
s	|char*	|skipspace0	|NN char *s
s	|char*	|skipspace1	|NN char *s
s	|char*	|skipspace2	|NN char *s|NULLOK SV **sv
s	|void	|start_force	|int where
s	|void	|curmad		|char slot|NULLOK SV *sv
#  endif
Mp	|int	|madlex
Mp	|int	|madparse	|int gramtype
#endif
d2916 38
@


1.1
log
@Initial revision
@
text
@d1 4
d12 129
a140 12
:	A		member of public API
:	m		Implemented as a macro - no export, no proto, no #define
:	d		function has documentation with its source
:	s		static function, should have an S_ prefix in source
:				file
:	n		has no implicit interpreter/thread context argument
:	p		function has a Perl_ prefix
:	f		function takes printf style format string, varargs
:	r		function never returns
:       o		has no compatibility macro (#define foo Perl_foo)
:       x		not exported
:       M		may change
a142 5
:
: New global functions should be added at the end for binary compatibility
: in some configurations.

START_EXTERN_C
d145 10
a154 6
Ano	|PerlInterpreter*	|perl_alloc_using \
				|struct IPerlMem* m|struct IPerlMem* ms \
				|struct IPerlMem* mp|struct IPerlEnv* e \
				|struct IPerlStdIO* io|struct IPerlLIO* lio \
				|struct IPerlDir* d|struct IPerlSock* s \
				|struct IPerlProc* p
d157 7
a163 6
Anod	|void	|perl_construct	|PerlInterpreter* interp
Anod	|int	|perl_destruct	|PerlInterpreter* interp
Anod	|void	|perl_free	|PerlInterpreter* interp
Anod	|int	|perl_run	|PerlInterpreter* interp
Anod	|int	|perl_parse	|PerlInterpreter* interp|XSINIT_t xsinit \
				|int argc|char** argv|char** env
d165 1
a165 1
Anod	|PerlInterpreter*|perl_clone|PerlInterpreter* interp, UV flags
d167 12
a178 6
Ano	|PerlInterpreter*|perl_clone_using|PerlInterpreter *interp|UV flags \
				|struct IPerlMem* m|struct IPerlMem* ms \
				|struct IPerlMem* mp|struct IPerlEnv* e \
				|struct IPerlStdIO* io|struct IPerlLIO* lio \
				|struct IPerlDir* d|struct IPerlSock* s \
				|struct IPerlProc* p
d182 3
a184 3
Anop	|Malloc_t|malloc	|MEM_SIZE nbytes
Anop	|Malloc_t|calloc	|MEM_SIZE elements|MEM_SIZE size
Anop	|Malloc_t|realloc	|Malloc_t where|MEM_SIZE nbytes
d187 5
a191 1
np	|MEM_SIZE|malloced_size	|void *p
d194 54
a247 42
Anp	|void*	|get_context
Anp	|void	|set_context	|void *thx

END_EXTERN_C

/* functions with flag 'n' should come before here */
START_EXTERN_C
#  include "pp_proto.h"
Ap	|SV*	|amagic_call	|SV* left|SV* right|int method|int dir
Ap	|bool	|Gv_AMupdate	|HV* stash
Ap	|CV*	|gv_handler	|HV* stash|I32 id
p	|OP*	|append_elem	|I32 optype|OP* head|OP* tail
p	|OP*	|append_list	|I32 optype|LISTOP* first|LISTOP* last
p	|I32	|apply		|I32 type|SV** mark|SV** sp
ApM	|void	|apply_attrs_string|char *stashpv|CV *cv|char *attrstr|STRLEN len
Ap	|SV*	|avhv_delete_ent|AV *ar|SV* keysv|I32 flags|U32 hash
Ap	|bool	|avhv_exists_ent|AV *ar|SV* keysv|U32 hash
Ap	|SV**	|avhv_fetch_ent	|AV *ar|SV* keysv|I32 lval|U32 hash
Ap	|SV**	|avhv_store_ent	|AV *ar|SV* keysv|SV* val|U32 hash
Ap	|HE*	|avhv_iternext	|AV *ar
Ap	|SV*	|avhv_iterval	|AV *ar|HE* entry
Ap	|HV*	|avhv_keys	|AV *ar
Apd	|void	|av_clear	|AV* ar
Apd	|SV*	|av_delete	|AV* ar|I32 key|I32 flags
Apd	|bool	|av_exists	|AV* ar|I32 key
Apd	|void	|av_extend	|AV* ar|I32 key
p	|AV*	|av_fake	|I32 size|SV** svp
Apd	|SV**	|av_fetch	|AV* ar|I32 key|I32 lval
Apd	|void	|av_fill	|AV* ar|I32 fill
Apd	|I32	|av_len		|AV* ar
Apd	|AV*	|av_make	|I32 size|SV** svp
Apd	|SV*	|av_pop		|AV* ar
Apd	|void	|av_push	|AV* ar|SV* val
p	|void	|av_reify	|AV* ar
Apd	|SV*	|av_shift	|AV* ar
Apd	|SV**	|av_store	|AV* ar|I32 key|SV* val
Apd	|void	|av_undef	|AV* ar
Apd	|void	|av_unshift	|AV* ar|I32 num
p	|OP*	|bind_match	|I32 type|OP* left|OP* pat
p	|OP*	|block_end	|I32 floor|OP* seq
Ap	|I32	|block_gimme
p	|int	|block_start	|int full
d249 1
d251 9
a259 6
Ap	|void	|call_list	|I32 oldscope|AV* av_list
p	|bool	|cando		|Mode_t mode|Uid_t effective|Stat_t* statbufp
Ap	|U32	|cast_ulong	|NV f
Ap	|I32	|cast_i32	|NV f
Ap	|IV	|cast_iv	|NV f
Ap	|UV	|cast_uv	|NV f
d261 1
a261 1
Ap	|I32	|my_chsize	|int fd|Off_t length
d263 17
a279 2
#if defined(USE_5005THREADS)
Ap	|MAGIC*	|condpair_magic	|SV *sv
a280 3
p	|OP*	|convert	|I32 optype|I32 flags|OP* o
Afprd	|void	|croak		|const char* pat|...
Apr	|void	|vcroak		|const char* pat|va_list* args
d282 49
a330 33
Afnrp	|void	|croak_nocontext|const char* pat|...
Afnp	|OP*	|die_nocontext	|const char* pat|...
Afnp	|void	|deb_nocontext	|const char* pat|...
Afnp	|char*	|form_nocontext	|const char* pat|...
Anp	|void	|load_module_nocontext|U32 flags|SV* name|SV* ver|...
Afnp	|SV*	|mess_nocontext	|const char* pat|...
Afnp	|void	|warn_nocontext	|const char* pat|...
Afnp	|void	|warner_nocontext|U32 err|const char* pat|...
Afnp	|SV*	|newSVpvf_nocontext|const char* pat|...
Afnp	|void	|sv_catpvf_nocontext|SV* sv|const char* pat|...
Afnp	|void	|sv_setpvf_nocontext|SV* sv|const char* pat|...
Afnp	|void	|sv_catpvf_mg_nocontext|SV* sv|const char* pat|...
Afnp	|void	|sv_setpvf_mg_nocontext|SV* sv|const char* pat|...
Afnp	|int	|fprintf_nocontext|PerlIO* stream|const char* fmt|...
Afnp	|int	|printf_nocontext|const char* fmt|...
#endif
p	|void	|cv_ckproto	|CV* cv|GV* gv|char* p
p	|CV*	|cv_clone	|CV* proto
Apd	|SV*	|cv_const_sv	|CV* cv
p	|SV*	|op_const_sv	|OP* o|CV* cv
Ap	|void	|cv_undef	|CV* cv
Ap	|void	|cx_dump	|PERL_CONTEXT* cs
Ap	|SV*	|filter_add	|filter_t funcp|SV* datasv
Ap	|void	|filter_del	|filter_t funcp
Ap	|I32	|filter_read	|int idx|SV* buffer|int maxlen
Ap	|char**	|get_op_descs
Ap	|char**	|get_op_names
p	|char*	|get_no_modify
p	|U32*	|get_opargs
Ap	|PPADDR_t*|get_ppaddr
p	|I32	|cxinc
Afp	|void	|deb		|const char* pat|...
Ap	|void	|vdeb		|const char* pat|va_list* args
d332 1
a332 1
Ap	|I32	|debop		|OP* o
d335 9
a343 7
Ap	|char*	|delimcpy	|char* to|char* toend|char* from \
				|char* fromend|int delim|I32* retlen
p	|void	|deprecate	|char* s
p	|void	|deprecate_old	|char* s
Afp	|OP*	|die		|const char* pat|...
p	|OP*	|vdie		|const char* pat|va_list* args
p	|OP*	|die_where	|char* message|STRLEN msglen
d345 20
a364 11
p	|bool	|do_aexec	|SV* really|SV** mark|SV** sp
p	|bool	|do_aexec5	|SV* really|SV** mark|SV** sp|int fd|int flag
Ap	|int	|do_binmode	|PerlIO *fp|int iotype|int mode
p	|void	|do_chop	|SV* asv|SV* sv
Ap	|bool	|do_close	|GV* gv|bool not_implicit
p	|bool	|do_eof		|GV* gv
p	|bool	|do_exec	|char* cmd
#if defined(WIN32)
Ap	|int	|do_aspawn	|SV* really|SV** mark|SV** sp
Ap	|int	|do_spawn	|char* cmd
Ap	|int	|do_spawn_nowait|char* cmd
d367 1
a367 1
p	|bool	|do_exec3	|char* cmd|int fd|int flag
d370 3
d374 64
a437 31
p	|I32	|do_ipcctl	|I32 optype|SV** mark|SV** sp
p	|I32	|do_ipcget	|I32 optype|SV** mark|SV** sp
p	|I32	|do_msgrcv	|SV** mark|SV** sp
p	|I32	|do_msgsnd	|SV** mark|SV** sp
p	|I32	|do_semop	|SV** mark|SV** sp
p	|I32	|do_shmio	|I32 optype|SV** mark|SV** sp
#endif
Ap	|void	|do_join	|SV* sv|SV* del|SV** mark|SV** sp
p	|OP*	|do_kv
Ap	|bool	|do_open	|GV* gv|char* name|I32 len|int as_raw \
				|int rawmode|int rawperm|PerlIO* supplied_fp
Ap	|bool	|do_open9	|GV *gv|char *name|I32 len|int as_raw \
				|int rawmode|int rawperm|PerlIO *supplied_fp \
				|SV *svs|I32 num
Ap	|bool	|do_openn	|GV *gv|char *name|I32 len|int as_raw \
				|int rawmode|int rawperm|PerlIO *supplied_fp \
				|SV **svp|I32 num
p	|void	|do_pipe	|SV* sv|GV* rgv|GV* wgv
p	|bool	|do_print	|SV* sv|PerlIO* fp
p	|OP*	|do_readline
p	|I32	|do_chomp	|SV* sv
p	|bool	|do_seek	|GV* gv|Off_t pos|int whence
Ap	|void	|do_sprintf	|SV* sv|I32 len|SV** sarg
p	|Off_t	|do_sysseek	|GV* gv|Off_t pos|int whence
p	|Off_t	|do_tell	|GV* gv
p	|I32	|do_trans	|SV* sv
p	|UV	|do_vecget	|SV* sv|I32 offset|I32 size
p	|void	|do_vecset	|SV* sv
p	|void	|do_vop		|I32 optype|SV* sv|SV* left|SV* right
p	|OP*	|dofile		|OP* term
Ap	|I32	|dowantarray
d439 1
d441 22
a462 2
#if defined(DUMP_FDS)
Ap	|void	|dump_fds	|char* s
d464 2
a465 18
Ap	|void	|dump_form	|GV* gv
Ap	|void	|gv_dump	|GV* gv
Ap	|void	|op_dump	|OP* arg
Ap	|void	|pmop_dump	|PMOP* pm
Ap	|void	|dump_packsubs	|HV* stash
Ap	|void	|dump_sub	|GV* gv
Apd	|void	|fbm_compile	|SV* sv|U32 flags
Apd	|char*	|fbm_instr	|unsigned char* big|unsigned char* bigend \
				|SV* littlesv|U32 flags
p	|char*	|find_script	|char *scriptname|bool dosearch \
				|char **search_ext|I32 flags
#if defined(USE_5005THREADS)
p	|PADOFFSET|find_threadsv|const char *name
#endif
p	|OP*	|force_list	|OP* arg
p	|OP*	|fold_constants	|OP* arg
Afpd	|char*	|form		|const char* pat|...
Ap	|char*	|vform		|const char* pat|va_list* args
d467 3
a469 1
p	|OP*	|gen_constant_list|OP* o
d471 2
a472 1
p	|char*	|getenv_len	|const char* key|unsigned long *len
d474 39
a512 18
Ap	|void	|gp_free	|GV* gv
Ap	|GP*	|gp_ref		|GP* gp
Ap	|GV*	|gv_AVadd	|GV* gv
Ap	|GV*	|gv_HVadd	|GV* gv
Ap	|GV*	|gv_IOadd	|GV* gv
Ap	|GV*	|gv_autoload4	|HV* stash|const char* name|STRLEN len \
				|I32 method
Ap	|void	|gv_check	|HV* stash
Ap	|void	|gv_efullname	|SV* sv|GV* gv
Ap	|void	|gv_efullname3	|SV* sv|GV* gv|const char* prefix
Ap	|void	|gv_efullname4	|SV* sv|GV* gv|const char* prefix|bool keepmain
Ap	|GV*	|gv_fetchfile	|const char* name
Apd	|GV*	|gv_fetchmeth	|HV* stash|const char* name|STRLEN len \
				|I32 level
Apd	|GV*	|gv_fetchmeth_autoload	|HV* stash|const char* name|STRLEN len \
				|I32 level
Apd	|GV*	|gv_fetchmethod	|HV* stash|const char* name
Apd	|GV*	|gv_fetchmethod_autoload|HV* stash|const char* name \
d514 83
a596 28
Ap	|GV*	|gv_fetchpv	|const char* name|I32 add|I32 sv_type
Ap	|void	|gv_fullname	|SV* sv|GV* gv
Ap	|void	|gv_fullname3	|SV* sv|GV* gv|const char* prefix
Ap	|void	|gv_fullname4	|SV* sv|GV* gv|const char* prefix|bool keepmain
Ap	|void	|gv_init	|GV* gv|HV* stash|const char* name \
				|STRLEN len|int multi
Apd	|HV*	|gv_stashpv	|const char* name|I32 create
Ap	|HV*	|gv_stashpvn	|const char* name|U32 namelen|I32 create
Apd	|HV*	|gv_stashsv	|SV* sv|I32 create
Apd	|void	|hv_clear	|HV* tb
Ap	|void	|hv_delayfree_ent|HV* hv|HE* entry
Apd	|SV*	|hv_delete	|HV* tb|const char* key|I32 klen|I32 flags
Apd	|SV*	|hv_delete_ent	|HV* tb|SV* key|I32 flags|U32 hash
Apd	|bool	|hv_exists	|HV* tb|const char* key|I32 klen
Apd	|bool	|hv_exists_ent	|HV* tb|SV* key|U32 hash
Apd	|SV**	|hv_fetch	|HV* tb|const char* key|I32 klen|I32 lval
Apd	|HE*	|hv_fetch_ent	|HV* tb|SV* key|I32 lval|U32 hash
Ap	|void	|hv_free_ent	|HV* hv|HE* entry
Apd	|I32	|hv_iterinit	|HV* tb
Apd	|char*	|hv_iterkey	|HE* entry|I32* retlen
Apd	|SV*	|hv_iterkeysv	|HE* entry
Apd	|HE*	|hv_iternext	|HV* tb
Apd	|SV*	|hv_iternextsv	|HV* hv|char** key|I32* retlen
ApMd	|HE*	|hv_iternext_flags|HV* tb|I32 flags
Apd	|SV*	|hv_iterval	|HV* tb|HE* entry
Ap	|void	|hv_ksplit	|HV* hv|IV newmax
Apd	|void	|hv_magic	|HV* hv|GV* gv|int how
Apd	|SV**	|hv_store	|HV* tb|const char* key|I32 klen|SV* val \
d598 26
a623 9
Apd	|HE*	|hv_store_ent	|HV* tb|SV* key|SV* val|U32 hash
ApM	|SV**	|hv_store_flags	|HV* tb|const char* key|I32 klen|SV* val \
				|U32 hash|int flags
Apd	|void	|hv_undef	|HV* tb
Ap	|I32	|ibcmp		|const char* a|const char* b|I32 len
Ap	|I32	|ibcmp_locale	|const char* a|const char* b|I32 len
Apd	|I32	|ibcmp_utf8	|const char* a|char **pe1|UV l1|bool u1|const char* b|char **pe2|UV l2|bool u2
p	|bool	|ingroup	|Gid_t testgid|Uid_t effective
p	|void	|init_argv_symbols|int|char **
d626 101
a726 62
Ap	|void	|init_tm	|struct tm *ptm
p	|U32	|intro_my
Ap	|char*	|instr		|const char* big|const char* little
p	|bool	|io_close	|IO* io|bool not_implicit
p	|OP*	|invert		|OP* cmd
dp	|bool	|is_gv_magical	|char *name|STRLEN len|U32 flags
Ap	|I32	|is_lvalue_sub
Ap	|U32	|to_uni_upper_lc|U32 c
Ap	|U32	|to_uni_title_lc|U32 c
Ap	|U32	|to_uni_lower_lc|U32 c
Ap	|bool	|is_uni_alnum	|UV c
Ap	|bool	|is_uni_alnumc	|UV c
Ap	|bool	|is_uni_idfirst	|UV c
Ap	|bool	|is_uni_alpha	|UV c
Ap	|bool	|is_uni_ascii	|UV c
Ap	|bool	|is_uni_space	|UV c
Ap	|bool	|is_uni_cntrl	|UV c
Ap	|bool	|is_uni_graph	|UV c
Ap	|bool	|is_uni_digit	|UV c
Ap	|bool	|is_uni_upper	|UV c
Ap	|bool	|is_uni_lower	|UV c
Ap	|bool	|is_uni_print	|UV c
Ap	|bool	|is_uni_punct	|UV c
Ap	|bool	|is_uni_xdigit	|UV c
Ap	|UV	|to_uni_upper	|UV c|U8 *p|STRLEN *lenp
Ap	|UV	|to_uni_title	|UV c|U8 *p|STRLEN *lenp
Ap	|UV	|to_uni_lower	|UV c|U8 *p|STRLEN *lenp
Ap	|UV	|to_uni_fold	|UV c|U8 *p|STRLEN *lenp
Ap	|bool	|is_uni_alnum_lc|UV c
Ap	|bool	|is_uni_alnumc_lc|UV c
Ap	|bool	|is_uni_idfirst_lc|UV c
Ap	|bool	|is_uni_alpha_lc|UV c
Ap	|bool	|is_uni_ascii_lc|UV c
Ap	|bool	|is_uni_space_lc|UV c
Ap	|bool	|is_uni_cntrl_lc|UV c
Ap	|bool	|is_uni_graph_lc|UV c
Ap	|bool	|is_uni_digit_lc|UV c
Ap	|bool	|is_uni_upper_lc|UV c
Ap	|bool	|is_uni_lower_lc|UV c
Ap	|bool	|is_uni_print_lc|UV c
Ap	|bool	|is_uni_punct_lc|UV c
Ap	|bool	|is_uni_xdigit_lc|UV c
Apd	|STRLEN	|is_utf8_char	|U8 *p
Apd	|bool	|is_utf8_string	|U8 *s|STRLEN len
Ap	|bool	|is_utf8_alnum	|U8 *p
Ap	|bool	|is_utf8_alnumc	|U8 *p
Ap	|bool	|is_utf8_idfirst|U8 *p
Ap	|bool	|is_utf8_idcont	|U8 *p
Ap	|bool	|is_utf8_alpha	|U8 *p
Ap	|bool	|is_utf8_ascii	|U8 *p
Ap	|bool	|is_utf8_space	|U8 *p
Ap	|bool	|is_utf8_cntrl	|U8 *p
Ap	|bool	|is_utf8_digit	|U8 *p
Ap	|bool	|is_utf8_graph	|U8 *p
Ap	|bool	|is_utf8_upper	|U8 *p
Ap	|bool	|is_utf8_lower	|U8 *p
Ap	|bool	|is_utf8_print	|U8 *p
Ap	|bool	|is_utf8_punct	|U8 *p
Ap	|bool	|is_utf8_xdigit	|U8 *p
Ap	|bool	|is_utf8_mark	|U8 *p
p	|OP*	|jmaybe		|OP* arg
p	|I32	|keyword	|char* d|I32 len
d728 121
a848 69
p	|void	|lex_end
p	|void	|lex_start	|SV* line
Ap |void   |op_null    |OP* o
p	|void	|op_clear	|OP* o
p	|OP*	|linklist	|OP* o
p	|OP*	|list		|OP* o
p	|OP*	|listkids	|OP* o
Apd	|void	|load_module|U32 flags|SV* name|SV* ver|...
Ap	|void	|vload_module|U32 flags|SV* name|SV* ver|va_list* args
p	|OP*	|localize	|OP* arg|I32 lexical
Apd	|I32	|looks_like_number|SV* sv
Apd	|UV	|grok_bin	|char* start|STRLEN* len|I32* flags|NV *result
Apd	|UV	|grok_hex	|char* start|STRLEN* len|I32* flags|NV *result
Apd	|int	|grok_number	|const char *pv|STRLEN len|UV *valuep
Apd	|bool	|grok_numeric_radix|const char **sp|const char *send
Apd	|UV	|grok_oct	|char* start|STRLEN* len|I32* flags|NV *result
p	|int	|magic_clearenv	|SV* sv|MAGIC* mg
p	|int	|magic_clear_all_env|SV* sv|MAGIC* mg
p	|int	|magic_clearpack|SV* sv|MAGIC* mg
p	|int	|magic_clearsig	|SV* sv|MAGIC* mg
p	|int	|magic_existspack|SV* sv|MAGIC* mg
p	|int	|magic_freeregexp|SV* sv|MAGIC* mg
p	|int	|magic_freeovrld|SV* sv|MAGIC* mg
p	|int	|magic_get	|SV* sv|MAGIC* mg
p	|int	|magic_getarylen|SV* sv|MAGIC* mg
p	|int	|magic_getdefelem|SV* sv|MAGIC* mg
p	|int	|magic_getglob	|SV* sv|MAGIC* mg
p	|int	|magic_getnkeys	|SV* sv|MAGIC* mg
p	|int	|magic_getpack	|SV* sv|MAGIC* mg
p	|int	|magic_getpos	|SV* sv|MAGIC* mg
p	|int	|magic_getsig	|SV* sv|MAGIC* mg
p	|int	|magic_getsubstr|SV* sv|MAGIC* mg
p	|int	|magic_gettaint	|SV* sv|MAGIC* mg
p	|int	|magic_getuvar	|SV* sv|MAGIC* mg
p	|int	|magic_getvec	|SV* sv|MAGIC* mg
p	|U32	|magic_len	|SV* sv|MAGIC* mg
#if defined(USE_5005THREADS)
p	|int	|magic_mutexfree|SV* sv|MAGIC* mg
#endif
p	|int	|magic_nextpack	|SV* sv|MAGIC* mg|SV* key
p	|U32	|magic_regdata_cnt|SV* sv|MAGIC* mg
p	|int	|magic_regdatum_get|SV* sv|MAGIC* mg
p	|int	|magic_regdatum_set|SV* sv|MAGIC* mg
p	|int	|magic_set	|SV* sv|MAGIC* mg
p	|int	|magic_setamagic|SV* sv|MAGIC* mg
p	|int	|magic_setarylen|SV* sv|MAGIC* mg
p	|int	|magic_setbm	|SV* sv|MAGIC* mg
p	|int	|magic_setdbline|SV* sv|MAGIC* mg
#if defined(USE_LOCALE_COLLATE)
p	|int	|magic_setcollxfrm|SV* sv|MAGIC* mg
#endif
p	|int	|magic_setdefelem|SV* sv|MAGIC* mg
p	|int	|magic_setenv	|SV* sv|MAGIC* mg
p	|int	|magic_setfm	|SV* sv|MAGIC* mg
p	|int	|magic_setisa	|SV* sv|MAGIC* mg
p	|int	|magic_setglob	|SV* sv|MAGIC* mg
p	|int	|magic_setmglob	|SV* sv|MAGIC* mg
p	|int	|magic_setnkeys	|SV* sv|MAGIC* mg
p	|int	|magic_setpack	|SV* sv|MAGIC* mg
p	|int	|magic_setpos	|SV* sv|MAGIC* mg
p	|int	|magic_setsig	|SV* sv|MAGIC* mg
p	|int	|magic_setsubstr|SV* sv|MAGIC* mg
p	|int	|magic_settaint	|SV* sv|MAGIC* mg
p	|int	|magic_setuvar	|SV* sv|MAGIC* mg
p	|int	|magic_setvec	|SV* sv|MAGIC* mg
p	|int	|magic_set_all_env|SV* sv|MAGIC* mg
p	|U32	|magic_sizepack	|SV* sv|MAGIC* mg
p	|int	|magic_wipepack	|SV* sv|MAGIC* mg
p	|void	|magicname	|char* sym|char* name|I32 namlen
d851 40
a890 21
p	|char*	|mem_collxfrm	|const char* s|STRLEN len|STRLEN* xlen
#endif
Afp	|SV*	|mess		|const char* pat|...
Ap	|SV*	|vmess		|const char* pat|va_list* args
p	|void	|qerror		|SV* err
Apd     |void   |sortsv         |SV ** array|size_t num_elts|SVCOMPARE_t cmp
Apd	|int	|mg_clear	|SV* sv
Apd	|int	|mg_copy	|SV* sv|SV* nsv|const char* key|I32 klen
Apd	|MAGIC*	|mg_find	|SV* sv|int type
Apd	|int	|mg_free	|SV* sv
Apd	|int	|mg_get		|SV* sv
Apd	|U32	|mg_length	|SV* sv
Apd	|void	|mg_magical	|SV* sv
Apd	|int	|mg_set		|SV* sv
Ap	|I32	|mg_size	|SV* sv
Ap	|void	|mini_mktime	|struct tm *pm
p	|OP*	|mod		|OP* o|I32 type
p	|int	|mode_from_discipline|SV* discp
Ap	|char*	|moreswitches	|char* s
p	|OP*	|my		|OP* o
Ap	|NV	|my_atof	|const char *s
d892 1
a892 1
Anp	|char*	|my_bcopy	|const char* from|char* to|I32 len
d895 1
a895 1
Anp	|char*	|my_bzero	|char* loc|I32 len
d903 2
a904 1
Ap	|I32	|my_lstat
d906 1
a906 1
Anp	|I32	|my_memcmp	|const char* s1|const char* s2|I32 len
d909 1
a909 12
Anp	|void*	|my_memset	|char* loc|I32 ch|I32 len
#endif
Ap	|I32	|my_pclose	|PerlIO* ptr
Ap	|PerlIO*|my_popen	|char* cmd|char* mode
Ap	|PerlIO*|my_popen_list	|char* mode|int n|SV ** args
Ap	|void	|my_setenv	|char* nam|char* val
Ap	|I32	|my_stat
Ap	|char *	|my_strftime	|char *fmt|int sec|int min|int hour|int mday|int mon|int year|int wday|int yday|int isdst
#if defined(MYSWAP)
Ap	|short	|my_swap	|short s
Ap	|long	|my_htonl	|long l
Ap	|long	|my_ntohl	|long l
d911 10
d922 144
a1065 78
Ap	|OP*	|newANONLIST	|OP* o
Ap	|OP*	|newANONHASH	|OP* o
Ap	|OP*	|newANONSUB	|I32 floor|OP* proto|OP* block
Ap	|OP*	|newASSIGNOP	|I32 flags|OP* left|I32 optype|OP* right
Ap	|OP*	|newCONDOP	|I32 flags|OP* expr|OP* trueop|OP* falseop
Apd	|CV*	|newCONSTSUB	|HV* stash|char* name|SV* sv
Ap	|void	|newFORM	|I32 floor|OP* o|OP* block
Ap	|OP*	|newFOROP	|I32 flags|char* label|line_t forline \
				|OP* sclr|OP* expr|OP*block|OP*cont
Ap	|OP*	|newLOGOP	|I32 optype|I32 flags|OP* left|OP* right
Ap	|OP*	|newLOOPEX	|I32 type|OP* label
Ap	|OP*	|newLOOPOP	|I32 flags|I32 debuggable|OP* expr|OP* block
Ap	|OP*	|newNULLLIST
Ap	|OP*	|newOP		|I32 optype|I32 flags
Ap	|void	|newPROG	|OP* o
Ap	|OP*	|newRANGE	|I32 flags|OP* left|OP* right
Ap	|OP*	|newSLICEOP	|I32 flags|OP* subscript|OP* listop
Ap	|OP*	|newSTATEOP	|I32 flags|char* label|OP* o
Ap	|CV*	|newSUB		|I32 floor|OP* o|OP* proto|OP* block
Apd	|CV*	|newXS		|char* name|XSUBADDR_t f|char* filename
Apd	|AV*	|newAV
Ap	|OP*	|newAVREF	|OP* o
Ap	|OP*	|newBINOP	|I32 type|I32 flags|OP* first|OP* last
Ap	|OP*	|newCVREF	|I32 flags|OP* o
Ap	|OP*	|newGVOP	|I32 type|I32 flags|GV* gv
Ap	|GV*	|newGVgen	|char* pack
Ap	|OP*	|newGVREF	|I32 type|OP* o
Ap	|OP*	|newHVREF	|OP* o
Apd	|HV*	|newHV
Ap	|HV*	|newHVhv	|HV* hv
Ap	|IO*	|newIO
Ap	|OP*	|newLISTOP	|I32 type|I32 flags|OP* first|OP* last
Ap	|OP*	|newPADOP	|I32 type|I32 flags|SV* sv
Ap	|OP*	|newPMOP	|I32 type|I32 flags
Ap	|OP*	|newPVOP	|I32 type|I32 flags|char* pv
Ap	|SV*	|newRV		|SV* pref
Apd	|SV*	|newRV_noinc	|SV *sv
Apd	|SV*	|newSV		|STRLEN len
Ap	|OP*	|newSVREF	|OP* o
Ap	|OP*	|newSVOP	|I32 type|I32 flags|SV* sv
Apd	|SV*	|newSViv	|IV i
Apd	|SV*	|newSVuv	|UV u
Apd	|SV*	|newSVnv	|NV n
Apd	|SV*	|newSVpv	|const char* s|STRLEN len
Apd	|SV*	|newSVpvn	|const char* s|STRLEN len
Apd	|SV*	|newSVpvn_share	|const char* s|I32 len|U32 hash
Afpd	|SV*	|newSVpvf	|const char* pat|...
Ap	|SV*	|vnewSVpvf	|const char* pat|va_list* args
Apd	|SV*	|newSVrv	|SV* rv|const char* classname
Apd	|SV*	|newSVsv	|SV* old
Ap	|OP*	|newUNOP	|I32 type|I32 flags|OP* first
Ap	|OP*	|newWHILEOP	|I32 flags|I32 debuggable|LOOP* loop \
				|I32 whileline|OP* expr|OP* block|OP* cont

Ap	|PERL_SI*|new_stackinfo|I32 stitems|I32 cxitems
Apd	|char*	|new_vstring	|char *vstr|SV *sv
p	|PerlIO*|nextargv	|GV* gv
Ap	|char*	|ninstr		|const char* big|const char* bigend \
				|const char* little|const char* lend
p	|OP*	|oopsCV		|OP* o
Ap	|void	|op_free	|OP* arg
p	|void	|package	|OP* o
p	|PADOFFSET|pad_alloc	|I32 optype|U32 tmptype
p	|PADOFFSET|pad_allocmy	|char* name
p	|PADOFFSET|pad_findmy	|char* name
p	|OP*	|oopsAV		|OP* o
p	|OP*	|oopsHV		|OP* o
p	|void	|pad_leavemy	|I32 fill
Ap	|SV*	|pad_sv		|PADOFFSET po
p	|void	|pad_free	|PADOFFSET po
p	|void	|pad_reset
p	|void	|pad_swipe	|PADOFFSET po
p	|void	|peep		|OP* o
dopM	|PerlIO*|start_glob	|SV* pattern|IO *io
#if defined(USE_5005THREADS)
Ap	|struct perl_thread*	|new_struct_thread|struct perl_thread *t
#endif
#if defined(USE_REENTRANT_API)
d1069 9
a1077 7
Anp	|void*	|reentrant_retry|const char*|...
#endif
Ap	|void	|call_atexit	|ATEXIT_t fn|void *ptr
Apd	|I32	|call_argv	|const char* sub_name|I32 flags|char** argv
Apd	|I32	|call_method	|const char* methname|I32 flags
Apd	|I32	|call_pv	|const char* sub_name|I32 flags
Apd	|I32	|call_sv	|SV* sv|I32 flags
d1079 18
a1096 11
Apd	|SV*	|eval_pv	|const char* p|I32 croak_on_error
Apd	|I32	|eval_sv	|SV* sv|I32 flags
Apd	|SV*	|get_sv		|const char* name|I32 create
Apd	|AV*	|get_av		|const char* name|I32 create
Apd	|HV*	|get_hv		|const char* name|I32 create
Apd	|CV*	|get_cv		|const char* name|I32 create
Ap	|int	|init_i18nl10n	|int printwarn
Ap	|int	|init_i18nl14n	|int printwarn
Ap	|void	|new_collate	|char* newcoll
Ap	|void	|new_ctype	|char* newctype
Ap	|void	|new_numeric	|char* newcoll
d1100 13
a1112 7
Apd	|void	|require_pv	|const char* pv
Apd	|void	|pack_cat	|SV *cat|char *pat|char *patend|SV **beglist|SV **endlist|SV ***next_in_list|U32 flags
p	|void	|pidgone	|Pid_t pid|int status
Ap	|void	|pmflag		|U32* pmfl|int ch
p	|OP*	|pmruntime	|OP* pm|OP* expr|OP* repl
p	|OP*	|pmtrans	|OP* o|OP* expr|OP* repl
p	|OP*	|pop_return
a1113 2
p	|OP*	|prepend_elem	|I32 optype|OP* head|OP* tail
p	|void	|push_return	|OP* o
d1115 75
a1189 21
p	|OP*	|ref		|OP* o|I32 type
p	|OP*	|refkids	|OP* o|I32 type
Ap	|void	|regdump	|regexp* r
Ap	|SV*	|regclass_swash	|struct regnode *n|bool doinit|SV **listsvp|SV **altsvp
Ap	|I32	|pregexec	|regexp* prog|char* stringarg \
				|char* strend|char* strbeg|I32 minend \
				|SV* screamer|U32 nosave
Ap	|void	|pregfree	|struct regexp* r
Ap	|regexp*|pregcomp	|char* exp|char* xend|PMOP* pm
Ap	|char*	|re_intuit_start|regexp* prog|SV* sv|char* strpos \
				|char* strend|U32 flags \
				|struct re_scream_pos_data_s *data
Ap	|SV*	|re_intuit_string|regexp* prog
Ap	|I32	|regexec_flags	|regexp* prog|char* stringarg \
				|char* strend|char* strbeg|I32 minend \
				|SV* screamer|void* data|U32 flags
Ap	|regnode*|regnext	|regnode* p
p	|void	|regprop	|SV* sv|regnode* o
Ap	|void	|repeatcpy	|char* to|const char* from|I32 len|I32 count
Ap	|char*	|rninstr	|const char* big|const char* bigend \
				|const char* little|const char* lend
d1191 4
a1194 2
p	|int	|rsignal_restore|int i|Sigsave_t* t
p	|int	|rsignal_save	|int i|Sighandler_t t1|Sigsave_t* t2
d1196 6
a1201 3
p	|void	|rxres_free	|void** rsp
p	|void	|rxres_restore	|void** rsp|REGEXP* prx
p	|void	|rxres_save	|void** rsp|REGEXP* prx
d1203 2
a1204 1
p	|I32	|same_dirent	|char* a|char* b
d1206 9
a1214 3
Apd	|char*	|savepv		|const char* pv
Apd	|char*	|savesharedpv	|const char* pv
Apd	|char*	|savepvn	|const char* pv|I32 len
d1216 4
a1219 1
Ap	|void	|save_aelem	|AV* av|I32 idx|SV **sptr
d1221 18
a1238 15
Ap	|void	|save_aptr	|AV** aptr
Ap	|AV*	|save_ary	|GV* gv
Ap	|void	|save_clearsv	|SV** svp
Ap	|void	|save_delete	|HV* hv|char* key|I32 klen
Ap	|void	|save_destructor|DESTRUCTORFUNC_NOCONTEXT_t f|void* p
Ap	|void	|save_destructor_x|DESTRUCTORFUNC_t f|void* p
Ap	|void	|save_freesv	|SV* sv
p	|void	|save_freeop	|OP* o
Ap	|void	|save_freepv	|char* pv
Ap	|void	|save_generic_svref|SV** sptr
Ap	|void	|save_generic_pvref|char** str
Ap	|void	|save_shared_pvref|char** str
Ap	|void	|save_gp	|GV* gv|I32 empty
Ap	|HV*	|save_hash	|GV* gv
Ap	|void	|save_helem	|HV* hv|SV *key|SV **sptr
d1240 18
a1257 15
Ap	|void	|save_hptr	|HV** hptr
Ap	|void	|save_I16	|I16* intp
Ap	|void	|save_I32	|I32* intp
Ap	|void	|save_I8	|I8* bytep
Ap	|void	|save_int	|int* intp
Ap	|void	|save_item	|SV* item
Ap	|void	|save_iv	|IV* iv
Ap	|void	|save_list	|SV** sarg|I32 maxsarg
Ap	|void	|save_long	|long* longp
Ap	|void	|save_mortalizesv|SV* sv
Ap	|void	|save_nogv	|GV* gv
p	|void	|save_op
Ap	|SV*	|save_scalar	|GV* gv
Ap	|void	|save_pptr	|char** pptr
Ap	|void	|save_vptr	|void* pptr
d1259 42
a1300 18
Ap	|void	|save_padsv	|PADOFFSET off
Ap	|void	|save_sptr	|SV** sptr
Ap	|SV*	|save_svref	|SV** sptr
Ap	|SV**	|save_threadsv	|PADOFFSET i
p	|OP*	|sawparens	|OP* o
p	|OP*	|scalar		|OP* o
p	|OP*	|scalarkids	|OP* o
p	|OP*	|scalarseq	|OP* o
p	|OP*	|scalarvoid	|OP* o
Apd	|NV	|scan_bin	|char* start|STRLEN len|STRLEN* retlen
Apd	|NV	|scan_hex	|char* start|STRLEN len|STRLEN* retlen
Ap	|char*	|scan_num	|char* s|YYSTYPE *lvalp
Apd	|NV	|scan_oct	|char* start|STRLEN len|STRLEN* retlen
p	|OP*	|scope		|OP* o
Ap	|char*	|screaminstr	|SV* bigsv|SV* littlesv|I32 start_shift \
				|I32 end_shift|I32 *state|I32 last
#if !defined(VMS)
p	|I32	|setenv_getix	|char* nam
d1302 1
a1302 4
p	|void	|setdefout	|GV* gv
p	|HEK*	|share_hek	|const char* sv|I32 len|U32 hash
np	|Signal_t |sighandler	|int sig
Ap	|SV**	|stack_grow	|SV** sp|SV**p|int n
d1304 50
a1353 28
p	|void	|sub_crush_depth|CV* cv
Apd	|bool	|sv_2bool	|SV* sv
Apd	|CV*	|sv_2cv		|SV* sv|HV** st|GV** gvp|I32 lref
Apd	|IO*	|sv_2io		|SV* sv
Apd	|IV	|sv_2iv		|SV* sv
Apd	|SV*	|sv_2mortal	|SV* sv
Apd	|NV	|sv_2nv		|SV* sv
Am	|char*	|sv_2pv		|SV* sv|STRLEN* lp
Apd	|char*	|sv_2pvutf8	|SV* sv|STRLEN* lp
Apd	|char*	|sv_2pvbyte	|SV* sv|STRLEN* lp
Ap	|char*	|sv_pvn_nomg	|SV* sv|STRLEN* lp
Apd	|UV	|sv_2uv		|SV* sv
Apd	|IV	|sv_iv		|SV* sv
Apd	|UV	|sv_uv		|SV* sv
Apd	|NV	|sv_nv		|SV* sv
Apd	|char*	|sv_pvn		|SV *sv|STRLEN *len
Apd	|char*	|sv_pvutf8n	|SV *sv|STRLEN *len
Apd	|char*	|sv_pvbyten	|SV *sv|STRLEN *len
Apd	|I32	|sv_true	|SV *sv
pd	|void	|sv_add_arena	|char* ptr|U32 size|U32 flags
Apd	|int	|sv_backoff	|SV* sv
Apd	|SV*	|sv_bless	|SV* sv|HV* stash
Afpd	|void	|sv_catpvf	|SV* sv|const char* pat|...
Ap	|void	|sv_vcatpvf	|SV* sv|const char* pat|va_list* args
Apd	|void	|sv_catpv	|SV* sv|const char* ptr
Amd	|void	|sv_catpvn	|SV* sv|const char* ptr|STRLEN len
Amd	|void	|sv_catsv	|SV* dsv|SV* ssv
Apd	|void	|sv_chop	|SV* sv|char* ptr
d1355 1
d1357 10
a1366 3
Apd	|void	|sv_clear	|SV* sv
Apd	|I32	|sv_cmp		|SV* sv1|SV* sv2
Apd	|I32	|sv_cmp_locale	|SV* sv1|SV* sv2
d1368 2
a1369 1
Apd	|char*	|sv_collxfrm	|SV* sv|STRLEN* nxp
d1371 19
a1389 7
Ap	|OP*	|sv_compile_2op	|SV* sv|OP** startp|char* code|AV** avp
Apd	|int	|getcwd_sv	|SV* sv
Apd	|void	|sv_dec		|SV* sv
Ap	|void	|sv_dump	|SV* sv
Apd	|bool	|sv_derived_from|SV* sv|const char* name
Apd	|I32	|sv_eq		|SV* sv1|SV* sv2
Apd	|void	|sv_free	|SV* sv
d1391 42
a1432 25
Apd	|char*	|sv_gets	|SV* sv|PerlIO* fp|I32 append
Apd	|char*	|sv_grow	|SV* sv|STRLEN newlen
Apd	|void	|sv_inc		|SV* sv
Apd	|void	|sv_insert	|SV* bigsv|STRLEN offset|STRLEN len \
				|char* little|STRLEN littlelen
Apd	|int	|sv_isa		|SV* sv|const char* name
Apd	|int	|sv_isobject	|SV* sv
Apd	|STRLEN	|sv_len		|SV* sv
Apd	|STRLEN	|sv_len_utf8	|SV* sv
Apd	|void	|sv_magic	|SV* sv|SV* obj|int how|const char* name \
				|I32 namlen
Apd	|MAGIC *|sv_magicext	|SV* sv|SV* obj|int how|MGVTBL *vtbl \
				| const char* name|I32 namlen	
Apd	|SV*	|sv_mortalcopy	|SV* oldsv
Apd	|SV*	|sv_newmortal
Apd	|SV*	|sv_newref	|SV* sv
Ap	|char*	|sv_peek	|SV* sv
Apd	|void	|sv_pos_u2b	|SV* sv|I32* offsetp|I32* lenp
Apd	|void	|sv_pos_b2u	|SV* sv|I32* offsetp
Amd	|char*	|sv_pvn_force	|SV* sv|STRLEN* lp
Apd	|char*	|sv_pvutf8n_force|SV* sv|STRLEN* lp
Apd	|char*	|sv_pvbyten_force|SV* sv|STRLEN* lp
Apd	|char*	|sv_recode_to_utf8	|SV* sv|SV *encoding
Apd	|char*	|sv_reftype	|SV* sv|int ob
Apd	|void	|sv_replace	|SV* sv|SV* nsv
d1434 106
a1539 33
Apd	|void	|sv_reset	|char* s|HV* stash
Afpd	|void	|sv_setpvf	|SV* sv|const char* pat|...
Ap	|void	|sv_vsetpvf	|SV* sv|const char* pat|va_list* args
Apd	|void	|sv_setiv	|SV* sv|IV num
Apd	|void	|sv_setuv	|SV* sv|UV num
Apd	|void	|sv_setnv	|SV* sv|NV num
Apd	|SV*	|sv_setref_iv	|SV* rv|const char* classname|IV iv
Apd	|SV*	|sv_setref_uv	|SV* rv|const char* classname|UV uv
Apd	|SV*	|sv_setref_nv	|SV* rv|const char* classname|NV nv
Apd	|SV*	|sv_setref_pv	|SV* rv|const char* classname|void* pv
Apd	|SV*	|sv_setref_pvn	|SV* rv|const char* classname|char* pv \
				|STRLEN n
Apd	|void	|sv_setpv	|SV* sv|const char* ptr
Apd	|void	|sv_setpvn	|SV* sv|const char* ptr|STRLEN len
Amd	|void	|sv_setsv	|SV* dsv|SV* ssv
Apd	|void	|sv_taint	|SV* sv
Apd	|bool	|sv_tainted	|SV* sv
Apd	|int	|sv_unmagic	|SV* sv|int type
Apd	|void	|sv_unref	|SV* sv
Apd	|void	|sv_unref_flags	|SV* sv|U32 flags
Apd	|void	|sv_untaint	|SV* sv
Apd	|bool	|sv_upgrade	|SV* sv|U32 mt
Apd	|void	|sv_usepvn	|SV* sv|char* ptr|STRLEN len
Apd	|void	|sv_vcatpvfn	|SV* sv|const char* pat|STRLEN patlen \
				|va_list* args|SV** svargs|I32 svmax \
				|bool *maybe_tainted
Apd	|void	|sv_vsetpvfn	|SV* sv|const char* pat|STRLEN patlen \
				|va_list* args|SV** svargs|I32 svmax \
				|bool *maybe_tainted
Ap	|NV	|str_to_version	|SV *sv
Ap	|SV*	|swash_init	|char* pkg|char* name|SV* listsv \
				|I32 minbits|I32 none
Ap	|UV	|swash_fetch	|SV *sv|U8 *ptr|bool do_utf8
d1541 21
a1561 7
Ap	|void	|taint_proper	|const char* f|const char* s
Apd	|UV	|to_utf8_case	|U8 *p|U8* ustrp|STRLEN *lenp \
				|SV **swash|char *normal|char *special
Apd	|UV	|to_utf8_lower	|U8 *p|U8* ustrp|STRLEN *lenp
Apd	|UV	|to_utf8_upper	|U8 *p|U8* ustrp|STRLEN *lenp
Apd	|UV	|to_utf8_title	|U8 *p|U8* ustrp|STRLEN *lenp
Apd	|UV	|to_utf8_fold	|U8 *p|U8* ustrp|STRLEN *lenp
d1563 101
a1663 1
Ap	|I32	|unlnk		|char* f
d1665 2
a1666 2
#if defined(USE_5005THREADS)
Ap	|void	|unlock_condpair|void* svv
a1667 41
Apd	|I32	|unpack_str	|char *pat|char *patend|char *s|char *strbeg|char *strend|char **new_s|I32 ocnt|U32 flags
Ap	|void	|unsharepvn	|const char* sv|I32 len|U32 hash
p	|void	|unshare_hek	|HEK* hek
p	|void	|utilize	|int aver|I32 floor|OP* version|OP* id|OP* arg
Ap	|U8*	|utf16_to_utf8	|U8* p|U8 *d|I32 bytelen|I32 *newlen
Ap	|U8*	|utf16_to_utf8_reversed|U8* p|U8 *d|I32 bytelen|I32 *newlen
Adp	|STRLEN	|utf8_length	|U8* s|U8 *e
Apd	|IV	|utf8_distance	|U8 *a|U8 *b
Apd	|U8*	|utf8_hop	|U8 *s|I32 off
ApMd	|U8*	|utf8_to_bytes	|U8 *s|STRLEN *len
ApMd	|U8*	|bytes_from_utf8|U8 *s|STRLEN *len|bool *is_utf8
ApMd	|U8*	|bytes_to_utf8	|U8 *s|STRLEN *len
Apd	|UV	|utf8_to_uvchr	|U8 *s|STRLEN* retlen
Apd	|UV	|utf8_to_uvuni	|U8 *s|STRLEN* retlen
Adp	|UV	|utf8n_to_uvchr	|U8 *s|STRLEN curlen|STRLEN* retlen|U32 flags
Adp	|UV	|utf8n_to_uvuni	|U8 *s|STRLEN curlen|STRLEN* retlen|U32 flags
Apd	|U8*	|uvchr_to_utf8	|U8 *d|UV uv
Ap	|U8*	|uvuni_to_utf8	|U8 *d|UV uv
Ap	|U8*	|uvchr_to_utf8_flags	|U8 *d|UV uv|UV flags
Apd	|U8*	|uvuni_to_utf8_flags	|U8 *d|UV uv|UV flags
Apd	|char*	|pv_uni_display	|SV *dsv|U8 *spv|STRLEN len \
				|STRLEN pvlim|UV flags
Apd	|char*	|sv_uni_display	|SV *dsv|SV *ssv|STRLEN pvlim|UV flags
p	|void	|vivify_defelem	|SV* sv
p	|void	|vivify_ref	|SV* sv|U32 to_what
p	|I32	|wait4pid	|Pid_t pid|int* statusp|int flags
p	|void	|report_evil_fh	|GV *gv|IO *io|I32 op
pd	|void	|report_uninit
Afpd	|void	|warn		|const char* pat|...
Ap	|void	|vwarn		|const char* pat|va_list* args
Afp	|void	|warner		|U32 err|const char* pat|...
Ap	|void	|vwarner	|U32 err|const char* pat|va_list* args
p	|void	|watch		|char** addr
Ap	|I32	|whichsig	|char* sig
p	|int	|yyerror	|char* s
#ifdef USE_PURE_BISON
p	|int	|yylex_r	|YYSTYPE *lvalp|int *lcharp
#endif
p	|int	|yylex
p	|int	|yyparse
p	|int	|yywarn		|char* s
d1669 2
a1670 2
Ap	|void	|dump_mstats	|char* s
Ap	|int	|get_mstats	|perl_mstats_t *buf|int buflen|int level
d1672 3
a1674 3
Anp	|Malloc_t|safesysmalloc	|MEM_SIZE nbytes
Anp	|Malloc_t|safesyscalloc	|MEM_SIZE elements|MEM_SIZE size
Anp	|Malloc_t|safesysrealloc|Malloc_t where|MEM_SIZE nbytes
d1676 1
a1676 6
#if defined(LEAKTEST)
Anp	|Malloc_t|safexmalloc	|I32 x|MEM_SIZE size
Anp	|Malloc_t|safexcalloc	|I32 x|MEM_SIZE elements|MEM_SIZE size
Anp	|Malloc_t|safexrealloc	|Malloc_t where|MEM_SIZE size
Anp	|void	|safexfree	|Malloc_t where
#endif
d1679 2
d1684 19
a1702 19
#if defined(USE_5005THREADS)
Ap	|SV*	|sv_lock	|SV *sv
#endif
Afpd	|void	|sv_catpvf_mg	|SV *sv|const char* pat|...
Ap	|void	|sv_vcatpvf_mg	|SV* sv|const char* pat|va_list* args
Apd	|void	|sv_catpv_mg	|SV *sv|const char *ptr
Apd	|void	|sv_catpvn_mg	|SV *sv|const char *ptr|STRLEN len
Apd	|void	|sv_catsv_mg	|SV *dstr|SV *sstr
Afpd	|void	|sv_setpvf_mg	|SV *sv|const char* pat|...
Ap	|void	|sv_vsetpvf_mg	|SV* sv|const char* pat|va_list* args
Apd	|void	|sv_setiv_mg	|SV *sv|IV i
Apd	|void	|sv_setuv_mg	|SV *sv|UV u
Apd	|void	|sv_setnv_mg	|SV *sv|NV num
Apd	|void	|sv_setpv_mg	|SV *sv|const char *ptr
Apd	|void	|sv_setpvn_mg	|SV *sv|const char *ptr|STRLEN len
Apd	|void	|sv_setsv_mg	|SV *dstr|SV *sstr
Apd	|void	|sv_usepvn_mg	|SV *sv|char *ptr|STRLEN len
Ap	|MGVTBL*|get_vtbl	|int vtbl_id
Ap	|char*	|pv_display	|SV *dsv|char *pv|STRLEN cur|STRLEN len \
d1704 19
a1722 7
Afp	|void	|dump_indent	|I32 level|PerlIO *file|const char* pat|...
Ap	|void	|dump_vindent	|I32 level|PerlIO *file|const char* pat \
				|va_list *args
Ap	|void	|do_gv_dump	|I32 level|PerlIO *file|char *name|GV *sv
Ap	|void	|do_gvgv_dump	|I32 level|PerlIO *file|char *name|GV *sv
Ap	|void	|do_hv_dump	|I32 level|PerlIO *file|char *name|HV *sv
Ap	|void	|do_magic_dump	|I32 level|PerlIO *file|MAGIC *mg|I32 nest \
d1724 3
a1726 3
Ap	|void	|do_op_dump	|I32 level|PerlIO *file|OP *o
Ap	|void	|do_pmop_dump	|I32 level|PerlIO *file|PMOP *pm
Ap	|void	|do_sv_dump	|I32 level|PerlIO *file|SV *sv|I32 nest \
d1728 1
a1728 7
Ap	|void	|magic_dump	|MAGIC *mg
#if defined(PERL_FLEXIBLE_EXCEPTIONS)
Ap	|void*	|default_protect|volatile JMPENV *je|int *excpt \
				|protect_body_t body|...
Ap	|void*	|vdefault_protect|volatile JMPENV *je|int *excpt \
				|protect_body_t body|va_list *args
#endif
d1730 27
a1756 20
Apd	|char*	|sv_2pv_nolen	|SV* sv
Apd	|char*	|sv_2pvutf8_nolen|SV* sv
Apd	|char*	|sv_2pvbyte_nolen|SV* sv
Amd	|char*	|sv_pv		|SV *sv
Amd	|char*	|sv_pvutf8	|SV *sv
Amd	|char*	|sv_pvbyte	|SV *sv
Amd	|STRLEN	|sv_utf8_upgrade|SV *sv
ApdM	|bool	|sv_utf8_downgrade|SV *sv|bool fail_ok
Apd	|void	|sv_utf8_encode |SV *sv
ApdM	|bool	|sv_utf8_decode |SV *sv
Apd	|void	|sv_force_normal|SV *sv
Apd	|void	|sv_force_normal_flags|SV *sv|U32 flags
Ap	|void	|tmps_grow	|I32 n
Apd	|SV*	|sv_rvweaken	|SV *sv
p	|int	|magic_killbackrefs|SV *sv|MAGIC *mg
Ap	|OP*	|newANONATTRSUB	|I32 floor|OP *proto|OP *attrs|OP *block
Ap	|CV*	|newATTRSUB	|I32 floor|OP *o|OP *proto|OP *attrs|OP *block
Ap	|void	|newMYSUB	|I32 floor|OP *o|OP *proto|OP *attrs|OP *block
p	|OP *	|my_attrs	|OP *o|OP *attrs
p	|void	|boot_core_xsutils
d1758 31
a1788 22
Ap	|PERL_CONTEXT*|cx_dup	|PERL_CONTEXT* cx|I32 ix|I32 max|CLONE_PARAMS* param
Ap	|PERL_SI*|si_dup	|PERL_SI* si|CLONE_PARAMS* param
Ap	|ANY*	|ss_dup		|PerlInterpreter* proto_perl|CLONE_PARAMS* param
Ap	|void*	|any_dup	|void* v|PerlInterpreter* proto_perl
Ap	|HE*	|he_dup		|HE* e|bool shared|CLONE_PARAMS* param
Ap	|REGEXP*|re_dup		|REGEXP* r|CLONE_PARAMS* param
Ap	|PerlIO*|fp_dup		|PerlIO* fp|char type|CLONE_PARAMS* param
Ap	|DIR*	|dirp_dup	|DIR* dp
Ap	|GP*	|gp_dup		|GP* gp|CLONE_PARAMS* param
Ap	|MAGIC*	|mg_dup		|MAGIC* mg|CLONE_PARAMS* param
Ap	|SV*	|sv_dup		|SV* sstr|CLONE_PARAMS* param
#if defined(HAVE_INTERP_INTERN)
Ap	|void	|sys_intern_dup	|struct interp_intern* src \
				|struct interp_intern* dst
#endif
Ap	|PTR_TBL_t*|ptr_table_new
Ap	|void*	|ptr_table_fetch|PTR_TBL_t *tbl|void *sv
Ap	|void	|ptr_table_store|PTR_TBL_t *tbl|void *oldsv|void *newsv
Ap	|void	|ptr_table_split|PTR_TBL_t *tbl
Ap	|void	|ptr_table_clear|PTR_TBL_t *tbl
Ap	|void	|ptr_table_free|PTR_TBL_t *tbl
#endif
d1792 3
d1797 15
a1811 6
Ap |char * |custom_op_name|OP* op
Ap |char * |custom_op_desc|OP* op

Adp	|void	|sv_nosharing	|SV *
Adp	|void	|sv_nolocking	|SV *
Adp	|void	|sv_nounlocking	|SV *
d1813 1
d1815 121
a1935 80
END_EXTERN_C

#if defined(PERL_IN_AV_C) || defined(PERL_DECL_PROT)
s	|I32	|avhv_index_sv	|SV* sv
s	|I32	|avhv_index	|AV* av|SV* sv|U32 hash
#endif

#if defined(PERL_IN_DOOP_C) || defined(PERL_DECL_PROT)
s	|I32	|do_trans_simple	|SV *sv
s	|I32	|do_trans_count		|SV *sv
s	|I32	|do_trans_complex	|SV *sv
s	|I32	|do_trans_simple_utf8	|SV *sv
s	|I32	|do_trans_count_utf8	|SV *sv
s	|I32	|do_trans_complex_utf8	|SV *sv
#endif

#if defined(PERL_IN_GV_C) || defined(PERL_DECL_PROT)
s	|void	|gv_init_sv	|GV *gv|I32 sv_type
s	|void	|require_errno	|GV *gv
#endif

#if defined(PERL_IN_HV_C) || defined(PERL_DECL_PROT)
s	|void	|hsplit		|HV *hv
s	|void	|hfreeentries	|HV *hv
s	|void	|more_he
s	|HE*	|new_he
s	|void	|del_he		|HE *p
s	|HEK*	|save_hek_flags	|const char *str|I32 len|U32 hash|int flags
s	|void	|hv_magic_check	|HV *hv|bool *needs_copy|bool *needs_store
s	|void	|unshare_hek_or_pvn|HEK* hek|const char* sv|I32 len|U32 hash
s	|HEK*	|share_hek_flags|const char* sv|I32 len|U32 hash|int flags
s	|SV**	|hv_fetch_flags	|HV* tb|const char* key|I32 klen|I32 lval \
                                |int flags
s	|void	|hv_notallowed	|int flags|const char *key|I32 klen|const char *msg
#endif

#if defined(PERL_IN_MG_C) || defined(PERL_DECL_PROT)
s	|void	|save_magic	|I32 mgs_ix|SV *sv
s	|int	|magic_methpack	|SV *sv|MAGIC *mg|char *meth
s	|int	|magic_methcall	|SV *sv|MAGIC *mg|char *meth|I32 f \
				|int n|SV *val
#endif

#if defined(PERL_IN_OP_C) || defined(PERL_DECL_PROT)
s	|I32	|list_assignment|OP *o
s	|void	|bad_type	|I32 n|char *t|char *name|OP *kid
s	|void	|cop_free	|COP *cop
s	|OP*	|modkids	|OP *o|I32 type
s	|void	|no_bareword_allowed|OP *o
s	|OP*	|no_fh_allowed	|OP *o
s	|OP*	|scalarboolean	|OP *o
s	|OP*	|too_few_arguments|OP *o|char* name
s	|OP*	|too_many_arguments|OP *o|char* name
s	|PADOFFSET|pad_addlex	|SV* name
s	|PADOFFSET|pad_findlex	|char* name|PADOFFSET newoff|U32 seq \
				|CV* startcv|I32 cx_ix|I32 saweval|U32 flags
s	|OP*	|newDEFSVOP
s	|OP*	|new_logop	|I32 type|I32 flags|OP **firstp|OP **otherp
s	|void	|simplify_sort	|OP *o
s	|bool	|is_handle_constructor	|OP *o|I32 argnum
s	|char*	|gv_ename	|GV *gv
#  if defined(DEBUG_CLOSURES)
s	|void	|cv_dump	|CV *cv
#  endif
s	|CV*	|cv_clone2	|CV *proto|CV *outside
s	|bool	|scalar_mod_type|OP *o|I32 type
s	|OP *	|my_kid		|OP *o|OP *attrs|OP **imopsp
s	|OP *	|dup_attrlist	|OP *o
s	|void	|apply_attrs	|HV *stash|SV *target|OP *attrs|bool for_my
s	|void	|apply_attrs_my	|HV *stash|OP *target|OP *attrs|OP **imopsp
#  if defined(PL_OP_SLAB_ALLOC)
s	|void*	|Slab_Alloc	|int m|size_t sz
s      |void   |Slab_Free      |void *op
#  endif
#endif

#if defined(PERL_IN_PERL_C) || defined(PERL_DECL_PROT)
s	|void	|find_beginning
s	|void	|forbid_setid	|char *
s	|void	|incpush	|char *|int|int
a1937 1
s	|void	|init_lexer
d1940 1
a1940 1
s	|void	|init_postdump_symbols|int|char **|char **
d1944 12
a1955 5
s	|void	|open_script	|char *|bool|SV *|int *fd
s	|void	|usage		|char *
s	|void	|validate_suid	|char *|char*|int
#  if defined(IAMSUID)
s	|int	|fd_on_nosuid_fs|int fd
a1956 9
s	|void*	|parse_body	|char **env|XSINIT_t xsinit
s	|void*	|run_body	|I32 oldscope
s	|void	|call_body	|OP *myop|int is_eval
s	|void*	|call_list_body	|CV *cv
#if defined(PERL_FLEXIBLE_EXCEPTIONS)
s	|void*	|vparse_body	|va_list args
s	|void*	|vrun_body	|va_list args
s	|void*	|vcall_body	|va_list args
s	|void*	|vcall_list_body|va_list args
d1958 77
a2034 3
#  if defined(USE_5005THREADS)
s	|struct perl_thread *	|init_main_thread
#  endif
d2037 2
a2038 46
#if defined(PERL_IN_PP_C) || defined(PERL_DECL_PROT)
s	|SV*	|refto		|SV* sv
s	|U32	|seed
#endif

#if defined(PERL_IN_PP_PACK_C) || defined(PERL_DECL_PROT)
s	|void	|doencodes	|SV* sv|char* s|I32 len
s	|SV*	|mul128		|SV *sv|U8 m
s	|SV*	|is_an_int	|char *s|STRLEN l
s	|int	|div128		|SV *pnum|bool *done
s	|char *	|next_symbol	|char *pat|char *patend
s	|I32	|find_count	|char **ppat|char *patend|int *star
s	|char *	|group_end	|char *pat|char *patend|char ender
s	|I32	|measure_struct	|char *pat|char *patend
#endif

#if defined(PERL_IN_PP_CTL_C) || defined(PERL_DECL_PROT)
s	|OP*	|docatch	|OP *o
s	|void*	|docatch_body
#if defined(PERL_FLEXIBLE_EXCEPTIONS)
s	|void*	|vdocatch_body	|va_list args
#endif
s	|OP*	|dofindlabel	|OP *o|char *label|OP **opstack|OP **oplimit
s	|void	|doparseform	|SV *sv
s	|I32	|dopoptoeval	|I32 startingblock
s	|I32	|dopoptolabel	|char *label
s	|I32	|dopoptoloop	|I32 startingblock
s	|I32	|dopoptosub	|I32 startingblock
s	|I32	|dopoptosub_at	|PERL_CONTEXT* cxstk|I32 startingblock
s	|void	|save_lines	|AV *array|SV *sv
s	|OP*	|doeval		|int gimme|OP** startop
s	|PerlIO *|doopen_pmc	|const char *name|const char *mode
s	|bool	|path_is_absolute|char *name
#endif

#if defined(PERL_IN_PP_HOT_C) || defined(PERL_DECL_PROT)
s	|int	|do_maybe_phash	|AV *ary|SV **lelem|SV **firstlelem \
				|SV **relem|SV **lastrelem
s	|void	|do_oddball	|HV *hash|SV **relem|SV **firstrelem
s	|CV*	|get_db_sub	|SV **svp|CV *cv
s	|SV*	|method_common	|SV* meth|U32* hashp
#endif

#if defined(PERL_IN_PP_SYS_C) || defined(PERL_DECL_PROT)
s	|OP*	|doform		|CV *cv|GV *gv|OP *retop
s	|int	|emulate_eaccess|const char* path|Mode_t mode
d2040 137
a2176 1
s	|int	|dooneliner	|char *cmd|char *filename
d2180 30
a2209 15
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_DECL_PROT)
s	|regnode*|reg		|struct RExC_state_t*|I32|I32 *
s	|regnode*|reganode	|struct RExC_state_t*|U8|U32
s	|regnode*|regatom	|struct RExC_state_t*|I32 *
s	|regnode*|regbranch	|struct RExC_state_t*|I32 *|I32
s	|void	|reguni		|struct RExC_state_t*|UV|char *|STRLEN*
s	|regnode*|regclass	|struct RExC_state_t*
s	|I32	|regcurly	|char *
s	|regnode*|reg_node	|struct RExC_state_t*|U8
s	|regnode*|regpiece	|struct RExC_state_t*|I32 *
s	|void	|reginsert	|struct RExC_state_t*|U8|regnode *
s	|void	|regoptail	|struct RExC_state_t*|regnode *|regnode *
s	|void	|regtail	|struct RExC_state_t*|regnode *|regnode *
s	|char*|regwhite	|char *|char *
s	|char*|nextchar	|struct RExC_state_t*
d2211 5
a2215 3
s	|regnode*|dumpuntil	|regnode *start|regnode *node \
				|regnode *last|SV* sv|I32 l
s	|void	|put_byte	|SV* sv|int c
d2217 35
a2251 91
s	|void	|scan_commit	|struct RExC_state_t*|struct scan_data_t *data
s	|void	|cl_anything	|struct RExC_state_t*|struct regnode_charclass_class *cl
s	|int	|cl_is_anything	|struct regnode_charclass_class *cl
s	|void	|cl_init	|struct RExC_state_t*|struct regnode_charclass_class *cl
s	|void	|cl_init_zero	|struct RExC_state_t*|struct regnode_charclass_class *cl
s	|void	|cl_and		|struct regnode_charclass_class *cl \
				|struct regnode_charclass_class *and_with
s	|void	|cl_or		|struct RExC_state_t*|struct regnode_charclass_class *cl \
				|struct regnode_charclass_class *or_with
s	|I32	|study_chunk	|struct RExC_state_t*|regnode **scanp|I32 *deltap \
				|regnode *last|struct scan_data_t *data \
				|U32 flags
s	|I32	|add_data	|struct RExC_state_t*|I32 n|char *s
rs	|void|re_croak2	|const char* pat1|const char* pat2|...
s	|I32	|regpposixcc	|struct RExC_state_t*|I32 value
s	|void	|checkposixcc	|struct RExC_state_t*
#endif

#if defined(PERL_IN_REGEXEC_C) || defined(PERL_DECL_PROT)
s	|I32	|regmatch	|regnode *prog
s	|I32	|regrepeat	|regnode *p|I32 max
s	|I32	|regrepeat_hard	|regnode *p|I32 max|I32 *lp
s	|I32	|regtry		|regexp *prog|char *startpos
s	|bool	|reginclass	|regnode *n|U8 *p|STRLEN *lenp|bool do_utf8sv_is_utf8
s	|CHECKPOINT|regcppush	|I32 parenfloor
s	|char*|regcppop
s	|char*|regcp_set_to	|I32 ss
s	|void	|cache_re	|regexp *prog
s	|U8*	|reghop		|U8 *pos|I32 off
s	|U8*	|reghop3	|U8 *pos|I32 off|U8 *lim
s	|U8*	|reghopmaybe	|U8 *pos|I32 off
s	|U8*	|reghopmaybe3	|U8 *pos|I32 off|U8 *lim
s	|char*	|find_byclass	|regexp * prog|regnode *c|char *s|char *strend|char *startpos|I32 norun
s	|void	|to_utf8_substr	|regexp * prog
s	|void	|to_byte_substr	|regexp * prog
#endif

#if defined(PERL_IN_DUMP_C) || defined(PERL_DECL_PROT)
s	|CV*	|deb_curcv	|I32 ix
s	|void	|debprof	|OP *o
#endif

#if defined(PERL_IN_SCOPE_C) || defined(PERL_DECL_PROT)
s	|SV*	|save_scalar_at	|SV **sptr
#endif

#if defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
s	|IV	|asIV		|SV* sv
s	|UV	|asUV		|SV* sv
s	|SV*	|more_sv
s	|void	|more_xiv
s	|void	|more_xnv
s	|void	|more_xpv
s	|void	|more_xpviv
s	|void	|more_xpvnv
s	|void	|more_xpvcv
s	|void	|more_xpvav
s	|void	|more_xpvhv
s	|void	|more_xpvmg
s	|void	|more_xpvlv
s	|void	|more_xpvbm
s	|void	|more_xrv
s	|XPVIV*	|new_xiv
s	|XPVNV*	|new_xnv
s	|XPV*	|new_xpv
s	|XPVIV*	|new_xpviv
s	|XPVNV*	|new_xpvnv
s	|XPVCV*	|new_xpvcv
s	|XPVAV*	|new_xpvav
s	|XPVHV*	|new_xpvhv
s	|XPVMG*	|new_xpvmg
s	|XPVLV*	|new_xpvlv
s	|XPVBM*	|new_xpvbm
s	|XRV*	|new_xrv
s	|void	|del_xiv	|XPVIV* p
s	|void	|del_xnv	|XPVNV* p
s	|void	|del_xpv	|XPV* p
s	|void	|del_xpviv	|XPVIV* p
s	|void	|del_xpvnv	|XPVNV* p
s	|void	|del_xpvcv	|XPVCV* p
s	|void	|del_xpvav	|XPVAV* p
s	|void	|del_xpvhv	|XPVHV* p
s	|void	|del_xpvmg	|XPVMG* p
s	|void	|del_xpvlv	|XPVLV* p
s	|void	|del_xpvbm	|XPVBM* p
s	|void	|del_xrv	|XRV* p
s	|void	|sv_unglob	|SV* sv
s	|void	|not_a_number	|SV *sv
s	|I32	|visit		|SVFUNC_t f
s	|void	|sv_add_backref	|SV *tsv|SV *sv
s	|void	|sv_del_backref	|SV *sv
d2253 1
a2253 1
s	|void	|del_sv	|SV *p
d2256 5
a2260 1
s      |int    |sv_2iuv_non_preserve   |SV *sv|I32 numtype
d2262 20
a2281 4
s	|I32	|expect_number	|char** pattern
#
#  if defined(USE_ITHREADS)
s	|SV*	|gv_share	|SV *sv|CLONE_PARAMS *param
d2283 7
d2292 5
a2296 1
#if defined(PERL_IN_TOKE_C) || defined(PERL_DECL_PROT)
d2299 40
a2338 4
s	|char*	|force_version	|char *start|int guessing
s	|char*	|force_word	|char *start|int token|int check_keyword \
				|int allow_pack|int allow_tick
s	|SV*	|tokeq		|SV *sv
d2340 11
a2350 33
s	|char*	|scan_const	|char *start
s	|char*	|scan_formline	|char *s
s	|char*	|scan_heredoc	|char *s
s	|char*	|scan_ident	|char *s|char *send|char *dest \
				|STRLEN destlen|I32 ck_uni
s	|char*	|scan_inputsymbol|char *start
s	|char*	|scan_pat	|char *start|I32 type
s	|char*	|scan_str	|char *start|int keep_quoted|int keep_delims
s	|char*	|scan_subst	|char *start
s	|char*	|scan_trans	|char *start
s	|char*	|scan_word	|char *s|char *dest|STRLEN destlen \
				|int allow_package|STRLEN *slp
s	|char*	|skipspace	|char *s
s	|char*	|swallow_bom	|U8 *s
s	|void	|checkcomma	|char *s|char *name|char *what
s	|void	|force_ident	|char *s|int kind
s	|void	|incline	|char *s
s	|int	|intuit_method	|char *s|GV *gv
s	|int	|intuit_more	|char *s
s	|I32	|lop		|I32 f|int x|char *s
s	|void	|missingterm	|char *s
s	|void	|no_op		|char *what|char *s
s	|void	|set_csh
s	|I32	|sublex_done
s	|I32	|sublex_push
s	|I32	|sublex_start
s	|char *	|filter_gets	|SV *sv|PerlIO *fp|STRLEN append
s	|HV *	|find_in_my_stash|char *pkgname|I32 len
s	|SV*	|new_constant	|char *s|STRLEN len|const char *key|SV *sv \
				|SV *pv|const char *type
#  if defined(DEBUGGING)
s	|void	|tokereport	|char *thing|char *s|I32 rv
#  endif
d2352 3
a2354 6
s	|void	|depcom
s	|char*	|incl_perldb
#if 0
s	|I32	|utf16_textfilter|int idx|SV *sv|int maxlen
s	|I32	|utf16rev_textfilter|int idx|SV *sv|int maxlen
#endif
d2356 6
a2361 1
s	|I32	|cr_textfilter	|int idx|SV *sv|int maxlen
d2364 1
d2366 3
a2368 2
#if defined(PERL_IN_UNIVERSAL_C) || defined(PERL_DECL_PROT)
s	|SV*|isa_lookup	|HV *stash|const char *name|HV *name_stash|int len|int level
d2371 3
a2373 2
#if defined(PERL_IN_LOCALE_C) || defined(PERL_DECL_PROT)
s	|char*	|stdize_locale	|char* locs
d2376 1
a2376 2
#if defined(PERL_IN_UTIL_C) || defined(PERL_DECL_PROT)
s	|COP*	|closest_cop	|COP *cop|OP *o
d2378 137
a2514 2
#  if defined(LEAKTEST)
s	|void	|xstat		|int
d2517 219
d2737 1
a2737 1
START_EXTERN_C
d2739 11
a2749 9
Apd	|void	|sv_setsv_flags	|SV* dsv|SV* ssv|I32 flags
Apd	|void	|sv_catpvn_flags|SV* sv|const char* ptr|STRLEN len|I32 flags
Apd	|void	|sv_catsv_flags	|SV* dsv|SV* ssv|I32 flags
Apd	|STRLEN	|sv_utf8_upgrade_flags|SV *sv|I32 flags
Apd	|char*	|sv_pvn_force_flags|SV* sv|STRLEN* lp|I32 flags
Apd	|char*	|sv_2pv_flags	|SV* sv|STRLEN* lp|I32 flags
Apd	|void	|sv_copypv	|SV* dsv|SV* ssv
Ap	|char*	|my_atof2	|const char *s|NV* value
Apn	|int	|my_socketpair	|int family|int type|int protocol|int fd[2]
d2751 3
a2753 26
#if defined(USE_PERLIO) && !defined(USE_SFIO)
Ap	|int	|PerlIO_close		|PerlIO *
Ap	|int	|PerlIO_fill		|PerlIO *
Ap	|int	|PerlIO_fileno		|PerlIO *
Ap	|int	|PerlIO_eof		|PerlIO *
Ap	|int	|PerlIO_error		|PerlIO *
Ap	|int	|PerlIO_flush		|PerlIO *
Ap	|void	|PerlIO_clearerr	|PerlIO *
Ap	|void	|PerlIO_set_cnt		|PerlIO *|int
Ap	|void	|PerlIO_set_ptrcnt	|PerlIO *|STDCHAR *|int
Ap	|void	|PerlIO_setlinebuf	|PerlIO *
Ap	|SSize_t|PerlIO_read		|PerlIO *|void *|Size_t
Ap	|SSize_t|PerlIO_write		|PerlIO *|const void *|Size_t
Ap	|SSize_t|PerlIO_unread		|PerlIO *|const void *|Size_t
Ap	|Off_t	|PerlIO_tell		|PerlIO *
Ap	|int	|PerlIO_seek		|PerlIO *|Off_t|int

Ap	|STDCHAR *|PerlIO_get_base	|PerlIO *
Ap	|STDCHAR *|PerlIO_get_ptr	|PerlIO *
Ap	|int	  |PerlIO_get_bufsiz	|PerlIO *
Ap	|int	  |PerlIO_get_cnt	|PerlIO *

Ap	|PerlIO *|PerlIO_stdin
Ap	|PerlIO *|PerlIO_stdout
Ap	|PerlIO *|PerlIO_stderr
#endif /* PERLIO_LAYERS */
d2755 6
a2760 1
END_EXTERN_C
d2762 1
@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.2 from CPAN
@
text
@d9 1
a9 2
:	m		Implemented as a macro - no export, no
:			proto, no #define
d11 2
a12 2
:	s		static function, should have an S_ prefix in
:			source file
d17 3
a19 7
:	o		has no compatibility macro (#define foo Perl_foo)
:	x		not exported
:	X		explicitly exported
:	M		may change
:	E		visible to extensions included in the Perl core
:	b		binary backward compatibility; function is a macro
:			but has also Perl_ implementation (which is exported)
a42 1
Anp	|bool	|doing_taint	|int argc|char** argv|char** env
d140 1
a140 1
pd	|CV*	|cv_clone	|CV* proto
d143 1
a143 1
Apd	|void	|cv_undef	|CV* cv
d153 1
a153 1
Ep	|I32	|cxinc
d304 1
a304 1
pd	|U32	|intro_my
a346 1
Apd	|bool	|is_utf8_string_loc|U8 *s|STRLEN len|U8 **p
a425 1
p	|int	|magic_setregexp|SV* sv|MAGIC* mg
a430 1
p	|int	|magic_setutf8	|SV* sv|MAGIC* mg
d544 1
a544 1
Ap	|char*	|scan_vstring	|char *vstr|SV *sv
d551 3
a553 3
pd	|PADOFFSET|pad_alloc	|I32 optype|U32 tmptype
p	|PADOFFSET|allocmy	|char* name
pd	|PADOFFSET|pad_findmy	|char* name
d556 5
a560 5
pd	|void	|pad_leavemy
Apd	|SV*	|pad_sv		|PADOFFSET po
pd	|void	|pad_free	|PADOFFSET po
pd	|void	|pad_reset
pd	|void	|pad_swipe	|PADOFFSET po|bool refadjust
a593 1
Apd	|void	|packlist 	|SV *cat|char *pat|char *patend|SV **beglist|SV **endlist
d620 1
a620 1
Ep	|void	|regprop	|SV* sv|regnode* o
a637 1
Ap	|void	|savestack_grow_cnt	|I32 need
a641 1
Ap	|void	|save_bool	|bool* boolp
a693 1
Anp	|Signal_t |csighandler	|int sig
d703 1
a703 1
Amb	|char*	|sv_2pv		|SV* sv|STRLEN* lp
d721 2
a722 2
Amdb	|void	|sv_catpvn	|SV* sv|const char* ptr|STRLEN len
Amdb	|void	|sv_catsv	|SV* dsv|SV* ssv
d732 1
a732 1
Ap	|OP*	|sv_compile_2op	|SV* sv|OP** startp|char* code|PAD** padp
d759 1
a759 1
Amdb	|char*	|sv_pvn_force	|SV* sv|STRLEN* lp
a762 2
Apd	|bool	|sv_cat_decode	|SV* dsv|SV *encoding|SV *ssv|int *offset \
				|char* tstr|int tlen
a769 1
Apdb	|void	|sv_setpviv	|SV* sv|IV num
d780 1
a780 1
Amdb	|void	|sv_setsv	|SV* dsv|SV* ssv
a813 1
Apd	|I32	|unpackstring	|char *pat|char *patend|char *s|char *strend|U32 flags
d816 1
a816 1
p	|void	|utilize	|int aver|I32 floor|OP* version|OP* idop|OP* arg
a838 3
p	|U32	|parse_unicode_opts|char **popt
p	|U32	|seed
p	|UV	|get_hash_seed
a846 1
p	|void	|write_to_stderr|const char* message|int msglen
d862 6
a883 1
Apdb	|void	|sv_setpviv_mg	|SV *sv|IV iv
d916 4
a919 4
Amdb	|char*	|sv_pv		|SV *sv
Amdb	|char*	|sv_pvutf8	|SV *sv
Amdb	|char*	|sv_pvbyte	|SV *sv
Amdb	|STRLEN	|sv_utf8_upgrade|SV *sv
d961 2
a962 2
Ap	|char *	|custom_op_name	|OP* op
Ap	|char *	|custom_op_desc	|OP* op
d1022 3
d1030 4
d1039 4
a1042 4
#endif
#if defined(PL_OP_SLAB_ALLOC)
Ap	|void*	|Slab_Alloc	|int m|size_t sz
Ap	|void	|Slab_Free	|void *op
d1048 1
a1048 1
s	|void	|incpush	|char *|int|int|int
d1081 1
d1085 1
a1085 2
s	|I32	|unpack_rec	|tempsym_t* symptr|char *s|char *strbeg|char *strend|char **new_s
s	|SV **	|pack_rec	|SV *cat|tempsym_t* symptr|SV **beglist|SV **endlist
a1086 5
s	|I32	|measure_struct	|tempsym_t* symptr
s	|char *	|group_end	|char *pat|char *patend|char ender
s	|char *	|get_num	|char *ppat|I32 *
s	|bool	|next_symbol	|tempsym_t* symptr
s	|void	|doencodes	|SV* sv|char* s|I32 len
d1089 4
d1109 2
a1110 2
s	|OP*	|doeval		|int gimme|OP** startop|CV* outside|U32 seq
s	|PerlIO *|doopen_pm	|const char *name|const char *mode
d1131 14
a1144 14
Es	|regnode*|reg		|struct RExC_state_t*|I32|I32 *
Es	|regnode*|reganode	|struct RExC_state_t*|U8|U32
Es	|regnode*|regatom	|struct RExC_state_t*|I32 *
Es	|regnode*|regbranch	|struct RExC_state_t*|I32 *|I32
Es	|void	|reguni		|struct RExC_state_t*|UV|char *|STRLEN*
Es	|regnode*|regclass	|struct RExC_state_t*
Es	|I32	|regcurly	|char *
Es	|regnode*|reg_node	|struct RExC_state_t*|U8
Es	|regnode*|regpiece	|struct RExC_state_t*|I32 *
Es	|void	|reginsert	|struct RExC_state_t*|U8|regnode *
Es	|void	|regoptail	|struct RExC_state_t*|regnode *|regnode *
Es	|void	|regtail	|struct RExC_state_t*|regnode *|regnode *
Es	|char*|regwhite	|char *|char *
Es	|char*|nextchar	|struct RExC_state_t*
d1146 1
a1146 1
Es	|regnode*|dumpuntil	|regnode *start|regnode *node \
d1148 1
a1148 1
Es	|void	|put_byte	|SV* sv|int c
d1150 6
a1155 6
Es	|void	|scan_commit	|struct RExC_state_t*|struct scan_data_t *data
Es	|void	|cl_anything	|struct RExC_state_t*|struct regnode_charclass_class *cl
Es	|int	|cl_is_anything	|struct regnode_charclass_class *cl
Es	|void	|cl_init	|struct RExC_state_t*|struct regnode_charclass_class *cl
Es	|void	|cl_init_zero	|struct RExC_state_t*|struct regnode_charclass_class *cl
Es	|void	|cl_and		|struct regnode_charclass_class *cl \
d1157 1
a1157 1
Es	|void	|cl_or		|struct RExC_state_t*|struct regnode_charclass_class *cl \
d1159 1
a1159 1
Es	|I32	|study_chunk	|struct RExC_state_t*|regnode **scanp|I32 *deltap \
d1162 1
a1162 1
Es	|I32	|add_data	|struct RExC_state_t*|I32 n|char *s
d1164 2
a1165 2
Es	|I32	|regpposixcc	|struct RExC_state_t*|I32 value
Es	|void	|checkposixcc	|struct RExC_state_t*
d1169 16
a1184 16
Es	|I32	|regmatch	|regnode *prog
Es	|I32	|regrepeat	|regnode *p|I32 max
Es	|I32	|regrepeat_hard	|regnode *p|I32 max|I32 *lp
Es	|I32	|regtry		|regexp *prog|char *startpos
Es	|bool	|reginclass	|regnode *n|U8 *p|STRLEN *lenp|bool do_utf8sv_is_utf8
Es	|CHECKPOINT|regcppush	|I32 parenfloor
Es	|char*|regcppop
Es	|char*|regcp_set_to	|I32 ss
Es	|void	|cache_re	|regexp *prog
Es	|U8*	|reghop		|U8 *pos|I32 off
Es	|U8*	|reghop3	|U8 *pos|I32 off|U8 *lim
Es	|U8*	|reghopmaybe	|U8 *pos|I32 off
Es	|U8*	|reghopmaybe3	|U8 *pos|I32 off|U8 *lim
Es	|char*	|find_byclass	|regexp * prog|regnode *c|char *s|char *strend|char *startpos|I32 norun
Es	|void	|to_utf8_substr	|regexp * prog
Es	|void	|to_byte_substr	|regexp * prog
d1245 1
a1245 1
s	|int	|sv_2iuv_non_preserve	|SV *sv|I32 numtype
a1251 2
s 	|bool	|utf8_mg_pos	|SV *sv|MAGIC **mgp|STRLEN **cachep|I32 i|I32 *offsetp|I32 uoff|U8 **sp|U8 *start|U8 *send
s	|bool	|utf8_mg_pos_init	|SV *sv|MAGIC **mgp|STRLEN **cachep|I32 i|I32 *offsetp|U8 *s|U8 *start
d1318 3
a1320 4
#endif

#if defined(PERL_IN_NUMERIC_C) || defined(PERL_DECL_PROT)
sn	|NV|mulexp10	|NV value|I32 exponent
a1360 39

p	|void	|deb_stack_all
#ifdef PERL_IN_DEB_C
s	|void	|deb_stack_n	|SV** stack_base|I32 stack_min \
				|I32 stack_max|I32 mark_min|I32 mark_max
#endif

pd	|PADLIST*|pad_new	|int flags
pd	|void	|pad_undef	|CV* cv
pd	|PADOFFSET|pad_add_name	|char *name\
				|HV* typestash|HV* ourstash \
				|bool clone
pd	|PADOFFSET|pad_add_anon	|SV* sv|OPCODE op_type
pd	|void	|pad_check_dup	|char* name|bool is_our|HV* ourstash
#ifdef DEBUGGING
pd	|void	|pad_setsv	|PADOFFSET po|SV* sv
#endif
pd	|void	|pad_block_start|int full
pd	|void	|pad_tidy	|padtidy_type type
pd 	|void	|do_dump_pad	|I32 level|PerlIO *file \
				|PADLIST *padlist|int full
pd	|void	|pad_fixup_inner_anons|PADLIST *padlist|CV *old_cv|CV *new_cv

pd	|void	|pad_push	|PADLIST *padlist|int depth|int has_args

#if defined(PERL_IN_PAD_C) || defined(PERL_DECL_PROT)
sd	|PADOFFSET|pad_findlex	|char* name|PADOFFSET newoff|CV* innercv
#  if defined(DEBUGGING)
sd	|void	|cv_dump	|CV *cv|char *title
#  endif
s	|CV*	|cv_clone2	|CV *proto|CV *outside
#endif
pd 	|CV*	|find_runcv	|U32 *db_seqp
p	|void	|free_tied_hv_pool
#if defined(DEBUGGING)
p	|int	|get_debug_opts	|char **s
#endif


@


1.1.1.3
log
@perl 5.8.3 from CPAN
@
text
@d50 1
a50 1
Anod	|PerlInterpreter*|perl_clone|PerlInterpreter* interp|UV flags
d1016 2
d1414 1
a1415 10
Apd	|void	|hv_clear_placeholders|HV* hb

#if defined(PERL_IN_HV_C) || defined(PERL_DECL_PROT)
sM	|SV*	|hv_delete_common|HV* tb|SV* key_sv|const char* key|STRLEN klen|int k_flags|I32 d_flags|U32 hash
sM	|HE*	|hv_fetch_common|HV* tb|SV* key_sv|const char* key|STRLEN klen|int flags|int action|SV* val|U32 hash
#endif
Apd	|SV*	|hv_scalar	|HV* hv|
p	|SV*	|magic_scalarpack|HV* hv|MAGIC*	mg

END_EXTERN_C
@


1.1.1.4
log
@Import of stock perl 5.8.5
@
text
@d13 1
a13 2
:			source file; for macros (m), suffix the usage
:			example	with a semicolon
a24 1
:	U		suppress usage example in autogenerated documentation
d1065 1
a1065 1
s	|void	|open_script	|char *|bool|SV *
d1067 1
a1067 1
s	|void	|validate_suid	|char *|char*
d1110 1
a1110 2
s	|OP*	|doparseform	|SV *sv
sn	|bool	|num_overflow	|NV value|I32 fldsize|I32 frcsize
d1246 1
a1246 1
s	|I32	|visit		|SVFUNC_t f|U32 flags|U32 mask
@


1.1.1.5
log
@perl 5.8.6 from CPAN
@
text
@d734 1
a734 1
Apd	|void	|sv_vcatpvf	|SV* sv|const char* pat|va_list* args
d785 1
a785 1
Apd	|void	|sv_vsetpvf	|SV* sv|const char* pat|va_list* args
d894 1
a894 1
Apd	|void	|sv_vcatpvf_mg	|SV* sv|const char* pat|va_list* args
d899 1
a899 1
Apd	|void	|sv_vsetpvf_mg	|SV* sv|const char* pat|va_list* args
a1424 3
#if defined(DEBUGGING)
p	|int	|get_debug_opts_flags	|char **s|int flags
#endif
@


1.1.1.6
log
@perl 5.8.8 import
@
text
@d14 1
a14 1
:			example with a semicolon
a26 12
:	a		allocates memory a la malloc/calloc.  Is also "R".
:	R		Return value must not be ignored.
:	P		pure function: no effects except the return value;
:			return value depends only on parms and/or globals
: (see also L<perlguts/Internal Functions> for those flags.)
:
: Pointer parameters that must not be passed NULLs should be prefixed with NN.
:
: Pointer parameters that may be NULL should be prefixed with NULLOK.  This has
: no effect on output yet.  It's a notation for the maintainers to know "I have
: defined whether NULL is OK or not" rather than having neither NULL or NULLOK,
: which is ambiguous.
d36 6
a41 6
Ano	|PerlInterpreter*|perl_alloc_using \
				|NN struct IPerlMem* m|NN struct IPerlMem* ms \
				|NN struct IPerlMem* mp|NN struct IPerlEnv* e \
				|NN struct IPerlStdIO* io|NN struct IPerlLIO* lio \
				|NN struct IPerlDir* d|NN struct IPerlSock* s \
				|NN struct IPerlProc* p
d44 7
a50 7
Anod	|void	|perl_construct	|NN PerlInterpreter* interp
Anod	|int	|perl_destruct	|NN PerlInterpreter* interp
Anod	|void	|perl_free	|NN PerlInterpreter* interp
Anod	|int	|perl_run	|NN PerlInterpreter* interp
Anod	|int	|perl_parse	|NN PerlInterpreter* interp|XSINIT_t xsinit \
				|int argc|NULLOK char** argv|NULLOK char** env
AnpR	|bool	|doing_taint	|int argc|NULLOK char** argv|NULLOK char** env
d52 1
a52 1
Anod	|PerlInterpreter*|perl_clone|NN PerlInterpreter* interp|UV flags
d54 6
a59 7
Ano	|PerlInterpreter*|perl_clone_using \
				|NN PerlInterpreter *interp|UV flags \
				|NN struct IPerlMem* m|NN struct IPerlMem* ms \
				|NN struct IPerlMem* mp|NN struct IPerlEnv* e \
				|NN struct IPerlStdIO* io|NN struct IPerlLIO* lio \
				|NN struct IPerlDir* d|NN struct IPerlSock* s \
				|NN struct IPerlProc* p
d63 3
a65 3
Aanop	|Malloc_t|malloc	|MEM_SIZE nbytes
Aanop	|Malloc_t|calloc	|MEM_SIZE elements|MEM_SIZE size
Aanop	|Malloc_t|realloc	|Malloc_t where|MEM_SIZE nbytes
d68 1
a68 1
npR	|MEM_SIZE|malloced_size	|NN void *p
d71 2
a72 2
AnpR	|void*	|get_context
Anp	|void	|set_context	|NN void *thx
d79 34
a112 35
Ap	|SV*	|amagic_call	|NN SV* left|NN SV* right|int method|int dir
Ap	|bool	|Gv_AMupdate	|NN HV* stash
ApR	|CV*	|gv_handler	|NULLOK HV* stash|I32 id
p	|OP*	|append_elem	|I32 optype|NULLOK OP* first|NULLOK OP* last
p	|OP*	|append_list	|I32 optype|NULLOK LISTOP* first|NULLOK LISTOP* last
p	|I32	|apply		|I32 type|NN SV** mark|NN SV** sp
ApM	|void	|apply_attrs_string|NN char *stashpv|NN CV *cv|NN char *attrstr|STRLEN len
Ap	|SV*	|avhv_delete_ent|NULLOK AV *ar|NN SV* keysv|I32 flags|U32 hash
Ap	|bool	|avhv_exists_ent|NULLOK AV *ar|NN SV* keysv|U32 hash
Ap	|SV**	|avhv_fetch_ent	|NULLOK AV *ar|NN SV* keysv|I32 lval|U32 hash
Ap	|SV**	|avhv_store_ent	|NULLOK AV *ar|NN SV* keysv|NULLOK SV* val\
				|U32 hash
Ap	|HE*	|avhv_iternext	|NULLOK AV *ar
Ap	|SV*	|avhv_iterval	|NULLOK AV *ar|NN HE* entry
Ap	|HV*	|avhv_keys	|NULLOK AV *ar
Apd	|void	|av_clear	|NULLOK AV* ar
Apd	|SV*	|av_delete	|NULLOK AV* ar|I32 key|I32 flags
ApdR	|bool	|av_exists	|NULLOK AV* ar|I32 key
Apd	|void	|av_extend	|NN AV* ar|I32 key
pR	|AV*	|av_fake	|I32 size|NN SV** svp
ApdR	|SV**	|av_fetch	|NULLOK AV* ar|I32 key|I32 lval
Apd	|void	|av_fill	|NN AV* ar|I32 fill
ApdR	|I32	|av_len		|NN AV* ar
ApdR	|AV*	|av_make	|I32 size|NN SV** svp
Apd	|SV*	|av_pop		|NULLOK AV* ar
Apd	|void	|av_push	|NULLOK AV* ar|NN SV* val
p	|void	|av_reify	|NN AV* ar
ApdR	|SV*	|av_shift	|NULLOK AV* ar
Apd	|SV**	|av_store	|NULLOK AV* ar|I32 key|NULLOK SV* val
Apd	|void	|av_undef	|NULLOK AV* ar
Apd	|void	|av_unshift	|NULLOK AV* ar|I32 num
pR	|OP*	|bind_match	|I32 type|NN OP* left|NN OP* pat
pR	|OP*	|block_end	|I32 floor|NULLOK OP* seq
ApR	|I32	|block_gimme
pR	|int	|block_start	|int full
d115 6
a120 6
Ap	|void	|call_list	|I32 oldscope|NN AV* av_list
pR	|bool	|cando		|Mode_t mode|Uid_t effective|NN Stat_t* statbufp
ApR	|U32	|cast_ulong	|NV f
ApR	|I32	|cast_i32	|NV f
ApR	|IV	|cast_iv	|NV f
ApR	|UV	|cast_uv	|NV f
d122 1
a122 1
ApR	|I32	|my_chsize	|int fd|Off_t length
d125 1
a125 1
Ap	|MAGIC*	|condpair_magic	|NN SV *sv
d127 3
a129 4
pR	|OP*	|convert	|I32 optype|I32 flags|NULLOK OP* o
: croak()'s first parm can be NULL.  Otherwise, mod_perl breaks.
Afprd	|void	|croak		|NULLOK const char* pat|...
Apr	|void	|vcroak		|NN const char* pat|NULLOK va_list* args
d131 33
a163 33
Afnrp	|void	|croak_nocontext|NN const char* pat|...
Afnp	|OP*	|die_nocontext	|NN const char* pat|...
Afnp	|void	|deb_nocontext	|NN const char* pat|...
Afnp	|char*	|form_nocontext	|NN const char* pat|...
Anp	|void	|load_module_nocontext|U32 flags|NN SV* name|NN SV* ver|...
Afnp	|SV*	|mess_nocontext	|NN const char* pat|...
Afnp	|void	|warn_nocontext	|NN const char* pat|...
Afnp	|void	|warner_nocontext|U32 err|NN const char* pat|...
Afnp	|SV*	|newSVpvf_nocontext|NN const char* pat|...
Afnp	|void	|sv_catpvf_nocontext|NN SV* sv|NN const char* pat|...
Afnp	|void	|sv_setpvf_nocontext|NN SV* sv|NN const char* pat|...
Afnp	|void	|sv_catpvf_mg_nocontext|NN SV* sv|NN const char* pat|...
Afnp	|void	|sv_setpvf_mg_nocontext|NN SV* sv|NN const char* pat|...
Afnp	|int	|fprintf_nocontext|NN PerlIO* stream|NN const char* fmt|...
Afnp	|int	|printf_nocontext|NN const char* fmt|...
#endif
p	|void	|cv_ckproto	|NN CV* cv|NULLOK GV* gv|NULLOK char* p
pd	|CV*	|cv_clone	|NN CV* proto
ApdR	|SV*	|cv_const_sv	|NULLOK CV* cv
pR	|SV*	|op_const_sv	|NULLOK OP* o|NULLOK CV* cv
Apd	|void	|cv_undef	|NN CV* cv
Ap	|void	|cx_dump	|NN PERL_CONTEXT* cx
Ap	|SV*	|filter_add	|NULLOK filter_t funcp|NULLOK SV* datasv
Ap	|void	|filter_del	|NN filter_t funcp
ApR	|I32	|filter_read	|int idx|NN SV* buffer|int maxlen
ApPR	|char**	|get_op_descs
ApPR	|char**	|get_op_names
pPR	|char*	|get_no_modify
pPR	|U32*	|get_opargs
ApPR	|PPADDR_t*|get_ppaddr
EpR	|I32	|cxinc
Afp	|void	|deb		|NN const char* pat|...
Ap	|void	|vdeb		|NN const char* pat|NULLOK va_list* args
d165 1
a165 1
Ap	|I32	|debop		|NN OP* o
d168 7
a174 7
Ap	|char*	|delimcpy	|NN char* to|NN char* toend|NN char* from \
				|NN char* fromend|int delim|NN I32* retlen
p	|void	|deprecate	|NN char* s
p	|void	|deprecate_old	|NN char* s
Afp	|OP*	|die		|NULLOK const char* pat|...
p	|OP*	|vdie		|NULLOK const char* pat|NULLOK va_list* args
p	|OP*	|die_where	|NULLOK char* message|STRLEN msglen
d176 7
a182 7
p	|bool	|do_aexec	|NULLOK SV* really|NN SV** mark|NN SV** sp
p	|bool	|do_aexec5	|NULLOK SV* really|NN SV** mark|NN SV** sp|int fd|int flag
Ap	|int	|do_binmode	|NN PerlIO *fp|int iotype|int mode
p	|void	|do_chop	|NN SV* asv|NN SV* sv
Ap	|bool	|do_close	|NN GV* gv|bool not_implicit
p	|bool	|do_eof		|NN GV* gv
p	|bool	|do_exec	|NN char* cmd
d184 3
a186 3
Ap	|int	|do_aspawn	|NN SV* really|NN SV** mark|NN SV** sp
Ap	|int	|do_spawn	|NN char* cmd
Ap	|int	|do_spawn_nowait|NN char* cmd
d189 1
a189 1
p	|bool	|do_exec3	|NN char* cmd|int fd|int flag
d193 6
a198 6
p	|I32	|do_ipcctl	|I32 optype|NN SV** mark|NN SV** sp
p	|I32	|do_ipcget	|I32 optype|NN SV** mark|NN SV** sp
p	|I32	|do_msgrcv	|NN SV** mark|NN SV** sp
p	|I32	|do_msgsnd	|NN SV** mark|NN SV** sp
p	|I32	|do_semop	|NN SV** mark|NN SV** sp
p	|I32	|do_shmio	|I32 optype|NN SV** mark|NN SV** sp
d200 1
a200 1
Ap	|void	|do_join	|NN SV* sv|NN SV* del|NN SV** mark|NN SV** sp
d202 22
a223 22
Ap	|bool	|do_open	|NN GV* gv|NN char* name|I32 len|int as_raw \
				|int rawmode|int rawperm|NULLOK PerlIO* supplied_fp
Ap	|bool	|do_open9	|NN GV *gv|NN char *name|I32 len|int as_raw \
				|int rawmode|int rawperm|NULLOK PerlIO *supplied_fp \
				|NN SV *svs|I32 num
Ap	|bool	|do_openn	|NN GV *gv|NN char *name|I32 len|int as_raw \
				|int rawmode|int rawperm|NULLOK PerlIO *supplied_fp \
				|NULLOK SV **svp|I32 num
p	|void	|do_pipe	|NN SV* sv|NULLOK GV* rgv|NULLOK GV* wgv
p	|bool	|do_print	|NULLOK SV* sv|NN PerlIO* fp
pR	|OP*	|do_readline
p	|I32	|do_chomp	|NN SV* sv
p	|bool	|do_seek	|NULLOK GV* gv|Off_t pos|int whence
Ap	|void	|do_sprintf	|NN SV* sv|I32 len|NN SV** sarg
p	|Off_t	|do_sysseek	|NN GV* gv|Off_t pos|int whence
pR	|Off_t	|do_tell	|NN GV* gv
p	|I32	|do_trans	|NN SV* sv
p	|UV	|do_vecget	|NN SV* sv|I32 offset|I32 size
p	|void	|do_vecset	|NN SV* sv
p	|void	|do_vop		|I32 optype|NN SV* sv|NN SV* left|NN SV* right
p	|OP*	|dofile		|NN OP* term
ApR	|I32	|dowantarray
d227 1
a227 1
Ap	|void	|dump_fds	|NN char* s
d229 11
a239 11
Ap	|void	|dump_form	|NN GV* gv
Ap	|void	|gv_dump	|NN GV* gv
Ap	|void	|op_dump	|NN OP* arg
Ap	|void	|pmop_dump	|NULLOK PMOP* pm
Ap	|void	|dump_packsubs	|NN HV* stash
Ap	|void	|dump_sub	|NN GV* gv
Apd	|void	|fbm_compile	|NN SV* sv|U32 flags
ApdR	|char*	|fbm_instr	|NN unsigned char* big|NN unsigned char* bigend \
				|NN SV* littlesv|U32 flags
p	|char*	|find_script	|NN char *scriptname|bool dosearch \
				|NULLOK char **search_ext|I32 flags
d241 1
a241 1
p	|PADOFFSET|find_threadsv|NN const char *name
d243 4
a246 4
p	|OP*	|force_list	|NULLOK OP* arg
p	|OP*	|fold_constants	|NN OP* arg
Afpd	|char*	|form		|NN const char* pat|...
Ap	|char*	|vform		|NN const char* pat|NULLOK va_list* args
d248 1
a248 1
p	|OP*	|gen_constant_list|NULLOK OP* o
d250 1
a250 1
p	|char*	|getenv_len	|NN const char* key|NN unsigned long *len
d252 47
a298 42
Ap	|void	|gp_free	|NULLOK GV* gv
Ap	|GP*	|gp_ref		|NULLOK GP* gp
Ap	|GV*	|gv_AVadd	|NN GV* gv
Ap	|GV*	|gv_HVadd	|NN GV* gv
Ap	|GV*	|gv_IOadd	|NN GV* gv
ApR	|GV*	|gv_autoload4	|NULLOK HV* stash|NN const char* name|STRLEN len|I32 method
Ap	|void	|gv_check	|NN HV* stash
Ap	|void	|gv_efullname	|NN SV* sv|NN GV* gv
Apmb	|void	|gv_efullname3	|NN SV* sv|NN GV* gv|NULLOK const char* prefix
Ap	|void	|gv_efullname4	|NN SV* sv|NN GV* gv|NULLOK const char* prefix|bool keepmain
Ap	|GV*	|gv_fetchfile	|NN const char* name
Apd	|GV*	|gv_fetchmeth	|NULLOK HV* stash|NN const char* name|STRLEN len|I32 level
Apd	|GV*	|gv_fetchmeth_autoload	|NULLOK HV* stash|NN const char* name|STRLEN len|I32 level
Apd	|GV*	|gv_fetchmethod	|NULLOK HV* stash|NN const char* name
Apd	|GV*	|gv_fetchmethod_autoload|NULLOK HV* stash|NN const char* name|I32 autoload
Ap	|GV*	|gv_fetchpv	|NN const char* name|I32 add|I32 sv_type
Ap	|void	|gv_fullname	|NN SV* sv|NN GV* gv
Apmb	|void	|gv_fullname3	|NN SV* sv|NN GV* gv|NULLOK const char* prefix
Ap	|void	|gv_fullname4	|NN SV* sv|NN GV* gv|NULLOK const char* prefix|bool keepmain
Ap	|void	|gv_init	|NN GV* gv|NULLOK HV* stash|NN const char* name|STRLEN len|int multi
Apd	|HV*	|gv_stashpv	|NN const char* name|I32 create
Apd	|HV*	|gv_stashpvn	|NN const char* name|U32 namelen|I32 create
Apd	|HV*	|gv_stashsv	|NULLOK SV* sv|I32 create
Apd	|void	|hv_clear	|NULLOK HV* tb
Ap	|void	|hv_delayfree_ent|NN HV* hv|NULLOK HE* entry
Apd	|SV*	|hv_delete	|NULLOK HV* tb|NN const char* key|I32 klen|I32 flags
Apd	|SV*	|hv_delete_ent	|NULLOK HV* tb|NN SV* key|I32 flags|U32 hash
ApdR	|bool	|hv_exists	|NULLOK HV* tb|NN const char* key|I32 klen
ApdR	|bool	|hv_exists_ent	|NULLOK HV* tb|NN SV* key|U32 hash
Apd	|SV**	|hv_fetch	|NULLOK HV* tb|NN const char* key|I32 klen|I32 lval
Apd	|HE*	|hv_fetch_ent	|NULLOK HV* tb|NN SV* key|I32 lval|U32 hash
Ap	|void	|hv_free_ent	|NN HV* hv|NULLOK HE* entryK
Apd	|I32	|hv_iterinit	|NN HV* tb
ApdR	|char*	|hv_iterkey	|NN HE* entry|NN I32* retlen
ApdR	|SV*	|hv_iterkeysv	|NN HE* entry
ApdR	|HE*	|hv_iternext	|NN HV* tb
ApdR	|SV*	|hv_iternextsv	|NN HV* hv|NN char** key|NN I32* retlen
ApMdR	|HE*	|hv_iternext_flags|NN HV* tb|I32 flags
ApdR	|SV*	|hv_iterval	|NN HV* tb|NN HE* entry
Ap	|void	|hv_ksplit	|NN HV* hv|IV newmax
Apd	|void	|hv_magic	|NN HV* hv|NULLOK GV* gv|int how
Apd	|SV**	|hv_store	|NULLOK HV* tb|NULLOK const char* key|I32 klen|NULLOK SV* val \
d300 2
a301 2
Apd	|HE*	|hv_store_ent	|NULLOK HV* tb|NULLOK SV* key|NULLOK SV* val|U32 hash
ApM	|SV**	|hv_store_flags	|NULLOK HV* tb|NULLOK const char* key|I32 klen|NULLOK SV* val \
d303 6
a308 7
Apd	|void	|hv_undef	|NULLOK HV* tb
ApP	|I32	|ibcmp		|NN const char* a|NN const char* b|I32 len
ApP	|I32	|ibcmp_locale	|NN const char* a|NN const char* b|I32 len
Apd	|I32	|ibcmp_utf8	|NN const char* a|NULLOK char **pe1|UV l1|bool u1 \
				|NN const char* b|NULLOK char **pe2|UV l2|bool u2
pR	|bool	|ingroup	|Gid_t testgid|Uid_t effective
p	|void	|init_argv_symbols|int argc|NN char **argv
d311 1
a311 1
Ap	|void	|init_tm	|NN struct tm *ptm
d313 61
a373 61
ApPR	|char*	|instr		|NN const char* big|NN const char* little
pR	|bool	|io_close	|NN IO* io|bool not_implicit
pR	|OP*	|invert		|NULLOK OP* cmd
dpR	|bool	|is_gv_magical	|NN char *name|STRLEN len|U32 flags
ApR	|I32	|is_lvalue_sub
ApPR	|U32	|to_uni_upper_lc|U32 c
ApPR	|U32	|to_uni_title_lc|U32 c
ApPR	|U32	|to_uni_lower_lc|U32 c
ApPR	|bool	|is_uni_alnum	|UV c
ApPR	|bool	|is_uni_alnumc	|UV c
ApPR	|bool	|is_uni_idfirst	|UV c
ApPR	|bool	|is_uni_alpha	|UV c
ApPR	|bool	|is_uni_ascii	|UV c
ApPR	|bool	|is_uni_space	|UV c
ApPR	|bool	|is_uni_cntrl	|UV c
ApPR	|bool	|is_uni_graph	|UV c
ApPR	|bool	|is_uni_digit	|UV c
ApPR	|bool	|is_uni_upper	|UV c
ApPR	|bool	|is_uni_lower	|UV c
ApPR	|bool	|is_uni_print	|UV c
ApPR	|bool	|is_uni_punct	|UV c
ApPR	|bool	|is_uni_xdigit	|UV c
Ap	|UV	|to_uni_upper	|UV c|NN U8 *p|NN STRLEN *lenp
Ap	|UV	|to_uni_title	|UV c|NN U8 *p|NN STRLEN *lenp
Ap	|UV	|to_uni_lower	|UV c|NN U8 *p|NN STRLEN *lenp
Ap	|UV	|to_uni_fold	|UV c|NN U8 *p|NN STRLEN *lenp
ApPR	|bool	|is_uni_alnum_lc|UV c
ApPR	|bool	|is_uni_alnumc_lc|UV c
ApPR	|bool	|is_uni_idfirst_lc|UV c
ApPR	|bool	|is_uni_alpha_lc|UV c
ApPR	|bool	|is_uni_ascii_lc|UV c
ApPR	|bool	|is_uni_space_lc|UV c
ApPR	|bool	|is_uni_cntrl_lc|UV c
ApPR	|bool	|is_uni_graph_lc|UV c
ApPR	|bool	|is_uni_digit_lc|UV c
ApPR	|bool	|is_uni_upper_lc|UV c
ApPR	|bool	|is_uni_lower_lc|UV c
ApPR	|bool	|is_uni_print_lc|UV c
ApPR	|bool	|is_uni_punct_lc|UV c
ApPR	|bool	|is_uni_xdigit_lc|UV c
Apd	|STRLEN	|is_utf8_char	|NN U8 *p
Apd	|bool	|is_utf8_string_loc|NN U8 *s|STRLEN len|NULLOK U8 **p
Apd	|bool	|is_utf8_string	|NN U8 *s|STRLEN len
ApR	|bool	|is_utf8_alnum	|NN U8 *p
ApR	|bool	|is_utf8_alnumc	|NN U8 *p
ApR	|bool	|is_utf8_idfirst|NN U8 *p
ApR	|bool	|is_utf8_idcont	|NN U8 *p
ApR	|bool	|is_utf8_alpha	|NN U8 *p
ApR	|bool	|is_utf8_ascii	|NN U8 *p
ApR	|bool	|is_utf8_space	|NN U8 *p
ApR	|bool	|is_utf8_cntrl	|NN U8 *p
ApR	|bool	|is_utf8_digit	|NN U8 *p
ApR	|bool	|is_utf8_graph	|NN U8 *p
ApR	|bool	|is_utf8_upper	|NN U8 *p
ApR	|bool	|is_utf8_lower	|NN U8 *p
ApR	|bool	|is_utf8_print	|NN U8 *p
ApR	|bool	|is_utf8_punct	|NN U8 *p
ApR	|bool	|is_utf8_xdigit	|NN U8 *p
ApR	|bool	|is_utf8_mark	|NN U8 *p
p	|OP*	|jmaybe		|NN OP* arg
pP	|I32	|keyword	|NN char* d|I32 len
d376 35
a410 35
p	|void	|lex_start	|NN SV* line
Ap	|void	|op_null	|NN OP* o
p	|void	|op_clear	|NN OP* o
p	|OP*	|linklist	|NN OP* o
p	|OP*	|list		|NULLOK OP* o
p	|OP*	|listkids	|NULLOK OP* o
Apd	|void	|load_module|U32 flags|NN SV* name|NULLOK SV* ver|...
Ap	|void	|vload_module|U32 flags|NN SV* name|NULLOK SV* ver|NULLOK va_list* args
p	|OP*	|localize	|NN OP* arg|I32 lexical
ApdR	|I32	|looks_like_number|NN SV* sv
Apd	|UV	|grok_bin	|NN char* start|NN STRLEN* len|NN I32* flags|NULLOK NV *result
Apd	|UV	|grok_hex	|NN char* start|NN STRLEN* len|NN I32* flags|NULLOK NV *result
Apd	|int	|grok_number	|NN const char *pv|STRLEN len|NULLOK UV *valuep
ApdR	|bool	|grok_numeric_radix|NN const char **sp|NN const char *send
Apd	|UV	|grok_oct	|NN char* start|NN STRLEN* len_p|NN I32* flags|NULLOK NV *result
p	|int	|magic_clearenv	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_clear_all_env|NN SV* sv|NN MAGIC* mg
p	|int	|magic_clearpack|NN SV* sv|NN MAGIC* mg
p	|int	|magic_clearsig	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_existspack|NN SV* sv|NN MAGIC* mg
p	|int	|magic_freeregexp|NN SV* sv|NN MAGIC* mg
p	|int	|magic_freeovrld|NN SV* sv|NN MAGIC* mg
p	|int	|magic_get	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getarylen|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getdefelem|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getglob	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getnkeys	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getpack	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getpos	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getsig	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getsubstr|NN SV* sv|NN MAGIC* mg
p	|int	|magic_gettaint	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getuvar	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_getvec	|NN SV* sv|NN MAGIC* mg
p	|U32	|magic_len	|NN SV* sv|NN MAGIC* mg
d412 1
a412 1
p	|int	|magic_mutexfree|NULLOK SV* sv|NN MAGIC* mg
d414 9
a422 9
p	|int	|magic_nextpack	|NN SV* sv|NN MAGIC* mg|NN SV* key
p	|U32	|magic_regdata_cnt|NN SV* sv|NN MAGIC* mg
p	|int	|magic_regdatum_get|NN SV* sv|NN MAGIC* mg
pr	|int	|magic_regdatum_set|NN SV* sv|NN MAGIC* mg
p	|int	|magic_set	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setamagic|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setarylen|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setbm	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setdbline|NN SV* sv|NN MAGIC* mg
d424 1
a424 1
p	|int	|magic_setcollxfrm|NN SV* sv|NN MAGIC* mg
d426 20
a445 20
p	|int	|magic_setdefelem|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setenv	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setfm	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setisa	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setglob	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setmglob	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setnkeys	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setpack	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setpos	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setregexp|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setsig	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setsubstr|NN SV* sv|NN MAGIC* mg
p	|int	|magic_settaint	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setuvar	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setvec	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_setutf8	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_set_all_env|NN SV* sv|NN MAGIC* mg
p	|U32	|magic_sizepack	|NN SV* sv|NN MAGIC* mg
p	|int	|magic_wipepack	|NN SV* sv|NN MAGIC* mg
p	|void	|magicname	|NN char* sym|NULLOK char* name|I32 namlen
d448 1
a448 1
p	|char*	|mem_collxfrm	|NN const char* s|STRLEN len|NN STRLEN* xlen
d450 19
a468 19
Afp	|SV*	|mess		|NN const char* pat|...
Ap	|SV*	|vmess		|NN const char* pat|NULLOK va_list* args
p	|void	|qerror		|NN SV* err
Apd	|void	|sortsv		|NN SV** array|size_t num_elts|SVCOMPARE_t cmp
Apd	|int	|mg_clear	|NN SV* sv
Apd	|int	|mg_copy	|NN SV* sv|NN SV* nsv|NULLOK const char* key|I32 klen
ApdR	|MAGIC*	|mg_find	|NULLOK SV* sv|int type
Apd	|int	|mg_free	|NN SV* sv
Apd	|int	|mg_get		|NN SV* sv
Apd	|U32	|mg_length	|NN SV* sv
Apd	|void	|mg_magical	|NN SV* sv
Apd	|int	|mg_set		|NN SV* sv
Ap	|I32	|mg_size	|NN SV* sv
Ap	|void	|mini_mktime	|NN struct tm *pm
p	|OP*	|mod		|NULLOK OP* o|I32 type
p	|int	|mode_from_discipline|NULLOK SV* discp
Ap	|char*	|moreswitches	|NN char* s
p	|OP*	|my		|NN OP* o
Ap	|NV	|my_atof	|NN const char *s
d470 1
a470 1
Anp	|char*	|my_bcopy	|NN const char* from|NN char* to|I32 len
d473 1
a473 1
Anp	|char*	|my_bzero	|NN char* loc|I32 len
d483 1
a483 1
AnpP	|I32	|my_memcmp	|NN const char* s1|NN const char* s2|I32 len
d486 1
a486 1
Anp	|void*	|my_memset	|NN char* loc|I32 ch|I32 len
d488 4
a491 4
Ap	|I32	|my_pclose	|NULLOK PerlIO* ptr
Ap	|PerlIO*|my_popen	|NN char* cmd|NN char* mode
Ap	|PerlIO*|my_popen_list	|NN char* mode|int n|NN SV ** args
Ap	|void	|my_setenv	|NULLOK char* nam|NULLOK char* val
d493 1
a493 1
Ap	|char *	|my_strftime	|NN char *fmt|int sec|int min|int hour|int mday|int mon|int year|int wday|int yday|int isdst
d495 3
a497 3
ApPa	|short	|my_swap	|short s
ApPa	|long	|my_htonl	|long l
ApPa	|long	|my_ntohl	|long l
d500 62
a561 61
Apa	|OP*	|newANONLIST	|NULLOK OP* o
Apa	|OP*	|newANONHASH	|NULLOK OP* o
Ap	|OP*	|newANONSUB	|I32 floor|NULLOK OP* proto|NULLOK OP* block
Apa	|OP*	|newASSIGNOP	|I32 flags|NULLOK OP* left|I32 optype|NULLOK OP* right
Apa	|OP*	|newCONDOP	|I32 flags|NN OP* first|NULLOK OP* trueop|NULLOK OP* falseop
Apd	|CV*	|newCONSTSUB	|NULLOK HV* stash|NULLOK char* name|NULLOK SV* sv
Ap	|void	|newFORM	|I32 floor|NULLOK OP* o|NULLOK OP* block
Apa	|OP*	|newFOROP	|I32 flags|NULLOK char* label|line_t forline \
				|NULLOK OP* sv|NN OP* expr|NULLOK OP* block|NULLOK OP* cont
Apa	|OP*	|newLOGOP	|I32 optype|I32 flags|NN OP* left|NN OP* right
Apa	|OP*	|newLOOPEX	|I32 type|NN OP* label
Apa	|OP*	|newLOOPOP	|I32 flags|I32 debuggable|NULLOK OP* expr|NULLOK OP* block
Apa	|OP*	|newNULLLIST
Apa	|OP*	|newOP		|I32 optype|I32 flags
Ap	|void	|newPROG	|NN OP* o
Apa	|OP*	|newRANGE	|I32 flags|NN OP* left|NN OP* right
Apa	|OP*	|newSLICEOP	|I32 flags|NULLOK OP* subscript|NULLOK OP* listop
Apa	|OP*	|newSTATEOP	|I32 flags|NULLOK char* label|NULLOK OP* o
Ap	|CV*	|newSUB		|I32 floor|NULLOK OP* o|NULLOK OP* proto|NULLOK OP* block
Apd	|CV*	|newXS		|NULLOK char* name|NN XSUBADDR_t f|NN char* filename
Apda	|AV*	|newAV
Apa	|OP*	|newAVREF	|NN OP* o
Apa	|OP*	|newBINOP	|I32 type|I32 flags|NULLOK OP* first|NULLOK OP* last
Apa	|OP*	|newCVREF	|I32 flags|NULLOK OP* o
Apa	|OP*	|newGVOP	|I32 type|I32 flags|NN GV* gv
Apa	|GV*	|newGVgen	|NN char* pack
Apa	|OP*	|newGVREF	|I32 type|NULLOK OP* o
ApaR	|OP*	|newHVREF	|NN OP* o
ApdaR	|HV*	|newHV
ApaR	|HV*	|newHVhv	|NULLOK HV* hv
Apa	|IO*	|newIO
Apa	|OP*	|newLISTOP	|I32 type|I32 flags|NULLOK OP* first|NULLOK OP* last
Apa	|OP*	|newPADOP	|I32 type|I32 flags|NULLOK SV* sv
Apa	|OP*	|newPMOP	|I32 type|I32 flags
Apa	|OP*	|newPVOP	|I32 type|I32 flags|NULLOK char* pv
Apa	|SV*	|newRV		|NN SV* pref
Apda	|SV*	|newRV_noinc	|NN SV *sv
Apda	|SV*	|newSV		|STRLEN len
Apa	|OP*	|newSVREF	|NN OP* o
Apa	|OP*	|newSVOP	|I32 type|I32 flags|NN SV* sv
Apda	|SV*	|newSViv	|IV i
Apda	|SV*	|newSVuv	|UV u
Apda	|SV*	|newSVnv	|NV n
Apda	|SV*	|newSVpv	|NULLOK const char* s|STRLEN len
Apda	|SV*	|newSVpvn	|NULLOK const char* s|STRLEN len
Apda	|SV*	|newSVpvn_share	|NULLOK const char* s|I32 len|U32 hash
Afpda	|SV*	|newSVpvf	|NN const char* pat|...
Apa	|SV*	|vnewSVpvf	|NN const char* pat|NULLOK va_list* args
Apd	|SV*	|newSVrv	|NN SV* rv|NULLOK const char* classname
Apda	|SV*	|newSVsv	|NULLOK SV* old
Apa	|OP*	|newUNOP	|I32 type|I32 flags|NULLOK OP* first
Apa	|OP*	|newWHILEOP	|I32 flags|I32 debuggable|NULLOK LOOP* loop \
				|I32 whileline|NULLOK OP* expr|NULLOK OP* block|NULLOK OP* cont
Apa	|PERL_SI*|new_stackinfo|I32 stitems|I32 cxitems
Ap	|char*	|scan_vstring	|NN char *vstr|NN SV *sv
p	|PerlIO*|nextargv	|NN GV* gv
ApP	|char*	|ninstr		|NN const char* big|NN const char* bigend \
				|NN const char* little|NN const char* lend
pr	|OP*	|oopsCV		|NN OP* o
Ap	|void	|op_free	|NULLOK OP* arg
p	|void	|package	|NN OP* o
d563 4
a566 4
p	|PADOFFSET|allocmy	|NN char* name
pdR	|PADOFFSET|pad_findmy	|NN char* name
pR	|OP*	|oopsAV		|NN OP* o
pR	|OP*	|oopsHV		|NN OP* o
d572 2
a573 2
p	|void	|peep		|NULLOK OP* o
dopM	|PerlIO*|start_glob	|NN SV* pattern|NN IO *io
d575 1
a575 1
Ap	|struct perl_thread*	|new_struct_thread|NN struct perl_thread *t
d581 1
a581 1
Anp	|void*	|reentrant_retry|NN const char*|...
d583 5
a587 5
Ap	|void	|call_atexit	|ATEXIT_t fn|NULLOK void *ptr
Apd	|I32	|call_argv	|NN const char* sub_name|I32 flags|NN char** argv
Apd	|I32	|call_method	|NN const char* methname|I32 flags
Apd	|I32	|call_pv	|NN const char* sub_name|I32 flags
Apd	|I32	|call_sv	|NN SV* sv|I32 flags
d589 6
a594 6
Apd	|SV*	|eval_pv	|NN const char* p|I32 croak_on_error
Apd	|I32	|eval_sv	|NN SV* sv|I32 flags
Apd	|SV*	|get_sv		|NN const char* name|I32 create
Apd	|AV*	|get_av		|NN const char* name|I32 create
Apd	|HV*	|get_hv		|NN const char* name|I32 create
Apd	|CV*	|get_cv		|NN const char* name|I32 create
d597 3
a599 3
Ap	|void	|new_collate	|NULLOK char* newcoll
Ap	|void	|new_ctype	|NN char* newctype
Ap	|void	|new_numeric	|NULLOK char* newcoll
d603 3
a605 4
Apd	|void	|require_pv	|NN const char* pv
Apd	|void	|pack_cat	|NN SV *cat|NN char *pat|NN char *patend \
				|NN SV **beglist|NN SV **endlist|NN SV ***next_in_list|U32 flags
Apd	|void	|packlist 	|NN SV *cat|NN char *pat|NN char *patend|NN SV **beglist|NN SV **endlist
d607 3
a609 3
Ap	|void	|pmflag		|NN U32* pmfl|int ch
p	|OP*	|pmruntime	|NN OP* pm|NN OP* expr|NULLOK OP* repl
p	|OP*	|pmtrans	|NN OP* o|NN OP* expr|NN OP* repl
d612 2
a613 2
p	|OP*	|prepend_elem	|I32 optype|NULLOK OP* head|NULLOK OP* tail
p	|void	|push_return	|NULLOK OP* o
d615 21
a635 21
p	|OP*	|ref		|NULLOK OP* o|I32 type
p	|OP*	|refkids	|NULLOK OP* o|I32 type
Ap	|void	|regdump	|NN regexp* r
Ap	|SV*	|regclass_swash	|NN struct regnode *n|bool doinit|NULLOK SV **listsvp|NULLOK SV **altsvp
Ap	|I32	|pregexec	|NN regexp* prog|NN char* stringarg \
				|NN char* strend|NN char* strbeg|I32 minend \
				|NN SV* screamer|U32 nosave
Ap	|void	|pregfree	|NULLOK struct regexp* r
Ap	|regexp*|pregcomp	|NN char* exp|NN char* xend|NN PMOP* pm
Ap	|char*	|re_intuit_start|NN regexp* prog|NULLOK SV* sv|NN char* strpos \
				|NN char* strend|U32 flags \
				|NULLOK struct re_scream_pos_data_s *data
Ap	|SV*	|re_intuit_string|NN regexp* prog
Ap	|I32	|regexec_flags	|NN regexp* prog|NN char* stringarg \
				|NN char* strend|NN char* strbeg|I32 minend \
				|NN SV* screamer|NULLOK void* data|U32 flags
ApR	|regnode*|regnext	|NN regnode* p
Ep	|void	|regprop	|NN SV* sv|NN regnode* o
Ap	|void	|repeatcpy	|NN char* to|NN const char* from|I32 len|I32 count
ApP	|char*	|rninstr	|NN const char* big|NN const char* bigend \
				|NN const char* little|NN const char* lend
d637 2
a638 2
p	|int	|rsignal_restore|int i|NULLOK Sigsave_t* t
p	|int	|rsignal_save	|int i|Sighandler_t t1|NN Sigsave_t* t2
d640 3
a642 3
p	|void	|rxres_free	|NN void** rsp
p	|void	|rxres_restore	|NN void** rsp|NN REGEXP* prx
p	|void	|rxres_save	|NN void** rsp|NN REGEXP* prx
d644 1
a644 1
p	|I32	|same_dirent	|NN char* a|NN char* b
d646 3
a648 3
Apda	|char*	|savepv		|NULLOK const char* pv
Apda	|char*	|savepvn	|NULLOK const char* pv|I32 len
Apda	|char*	|savesharedpv	|NULLOK const char* pv
d651 1
a651 1
Ap	|void	|save_aelem	|NN AV* av|I32 idx|NN SV **sptr
d653 28
a680 28
Ap	|void	|save_aptr	|NN AV** aptr
Ap	|AV*	|save_ary	|NN GV* gv
Ap	|void	|save_bool	|NN bool* boolp
Ap	|void	|save_clearsv	|NN SV** svp
Ap	|void	|save_delete	|NN HV* hv|NN char* key|I32 klen
Ap	|void	|save_destructor|DESTRUCTORFUNC_NOCONTEXT_t f|NN void* p
Ap	|void	|save_destructor_x|DESTRUCTORFUNC_t f|NULLOK void* p
Ap	|void	|save_freesv	|NULLOK SV* sv
p	|void	|save_freeop	|NULLOK OP* o
Ap	|void	|save_freepv	|NULLOK char* pv
Ap	|void	|save_generic_svref|NN SV** sptr
Ap	|void	|save_generic_pvref|NN char** str
Ap	|void	|save_shared_pvref|NN char** str
Ap	|void	|save_gp	|NN GV* gv|I32 empty
Ap	|HV*	|save_hash	|NN GV* gv
Ap	|void	|save_helem	|NN HV* hv|NN SV *key|NN SV **sptr
Apr	|void	|save_hints
Ap	|void	|save_hptr	|NN HV** hptr
Ap	|void	|save_I16	|NN I16* intp
Ap	|void	|save_I32	|NN I32* intp
Ap	|void	|save_I8	|NN I8* bytep
Ap	|void	|save_int	|NN int* intp
Ap	|void	|save_item	|NN SV* item
Ap	|void	|save_iv	|NN IV* iv
Ap	|void	|save_list	|NN SV** sarg|I32 maxsarg
Ap	|void	|save_long	|NN long* longp
Ap	|void	|save_mortalizesv|NN SV* sv
Ap	|void	|save_nogv	|NULLOK GV* gv
d682 3
a684 3
Ap	|SV*	|save_scalar	|NN GV* gv
Ap	|void	|save_pptr	|NN char** pptr
Ap	|void	|save_vptr	|NN void* pptr
d687 2
a688 3
Ap	|void	|save_sptr	|NN SV** sptr
Ap	|SV*	|save_svref	|NN SV** sptr
#ifdef USE_5005THREADS
d690 12
a701 15
#else
Apr	|SV**	|save_threadsv	|PADOFFSET i
#endif
p	|OP*	|sawparens	|NULLOK OP* o
p	|OP*	|scalar		|NULLOK OP* o
p	|OP*	|scalarkids	|NULLOK OP* o
p	|OP*	|scalarseq	|NULLOK OP* o
p	|OP*	|scalarvoid	|NN OP* o
Apd	|NV	|scan_bin	|NN char* start|STRLEN len|NN STRLEN* retlen
Apd	|NV	|scan_hex	|NN char* start|STRLEN len|NN STRLEN* retlen
Ap	|char*	|scan_num	|NN char* s|NN YYSTYPE *lvalp
Apd	|NV	|scan_oct	|NN char* start|STRLEN len|NN STRLEN* retlen
p	|OP*	|scope		|NULLOK OP* o
Ap	|char*	|screaminstr	|NN SV *bigstr|NN SV *littlestr|I32 start_shift \
				|I32 end_shift|NN I32 *oldposp|I32 last
d703 1
a703 1
p	|I32	|setenv_getix	|NN char* nam
d705 2
a706 2
p	|void	|setdefout	|NULLOK GV* gv
Ap	|HEK*	|share_hek	|NN const char* str|I32 len|U32 hash
d709 1
a709 1
Ap	|SV**	|stack_grow	|NN SV** sp|NN SV**p|int n
d711 28
a738 28
p	|void	|sub_crush_depth|NN CV* cv
Apd	|bool	|sv_2bool	|NN SV* sv
Apd	|CV*	|sv_2cv		|NULLOK SV* sv|NN HV** st|NN GV** gvp|I32 lref
Apd	|IO*	|sv_2io		|NN SV* sv
Apd	|IV	|sv_2iv		|NN SV* sv
Apd	|SV*	|sv_2mortal	|NULLOK SV* sv
Apd	|NV	|sv_2nv		|NN SV* sv
Amb	|char*	|sv_2pv		|NN SV* sv|NULLOK STRLEN* lp
Apd	|char*	|sv_2pvutf8	|NN SV* sv|NULLOK STRLEN* lp
Apd	|char*	|sv_2pvbyte	|NN SV* sv|NULLOK STRLEN* lp
Ap	|char*	|sv_pvn_nomg	|NN SV* sv|NULLOK STRLEN* lp
Apd	|UV	|sv_2uv		|NN SV* sv
Apd	|IV	|sv_iv		|NN SV* sv
Apd	|UV	|sv_uv		|NN SV* sv
Apd	|NV	|sv_nv		|NN SV* sv
Apd	|char*	|sv_pvn		|NN SV *sv|NN STRLEN *len
Apd	|char*	|sv_pvutf8n	|NN SV *sv|NN STRLEN *len
Apd	|char*	|sv_pvbyten	|NN SV *sv|NN STRLEN *len
Apd	|I32	|sv_true	|NULLOK SV *sv
pd	|void	|sv_add_arena	|NN char* ptr|U32 size|U32 flags
Apd	|int	|sv_backoff	|NN SV* sv
Apd	|SV*	|sv_bless	|NN SV* sv|NN HV* stash
Afpd	|void	|sv_catpvf	|NN SV* sv|NN const char* pat|...
Apd	|void	|sv_vcatpvf	|NN SV* sv|NN const char* pat|NULLOK va_list* args
Apd	|void	|sv_catpv	|NN SV* sv|NN const char* ptr
Amdb	|void	|sv_catpvn	|NN SV* sv|NN const char* ptr|STRLEN len
Amdb	|void	|sv_catsv	|NN SV* dsv|NULLOK SV* ssv
Apd	|void	|sv_chop	|NN SV* sv|NULLOK char* ptr
d741 3
a743 3
Apd	|void	|sv_clear	|NN SV* sv
Apd	|I32	|sv_cmp		|NN SV* sv1|NN SV* sv2
Apd	|I32	|sv_cmp_locale	|NN SV* sv1|NN SV* sv2
d745 1
a745 1
Apd	|char*	|sv_collxfrm	|NN SV* sv|NN STRLEN* nxp
d747 7
a753 7
Ap	|OP*	|sv_compile_2op	|NN SV* sv|NN OP** startp|NN char* code|NN PAD** padp
Apd	|int	|getcwd_sv	|NN SV* sv
Apd	|void	|sv_dec		|NN SV* sv
Ap	|void	|sv_dump	|NN SV* sv
ApdR	|bool	|sv_derived_from|NN SV* sv|NN const char* name
Apd	|I32	|sv_eq		|NULLOK SV* sv1|NULLOK SV* sv2
Apd	|void	|sv_free	|NULLOK SV* sv
d755 10
a764 10
Apd	|char*	|sv_gets	|NN SV* sv|NN PerlIO* fp|I32 append
Apd	|char*	|sv_grow	|NN SV* sv|STRLEN newlen
Apd	|void	|sv_inc		|NN SV* sv
Apd	|void	|sv_insert	|NN SV* bigsv|STRLEN offset|STRLEN len \
				|NN char* little|STRLEN littlelen
Apd	|int	|sv_isa		|NULLOK SV* sv|NN const char* name
Apd	|int	|sv_isobject	|NULLOK SV* sv
Apd	|STRLEN	|sv_len		|NULLOK SV* sv
Apd	|STRLEN	|sv_len_utf8	|NULLOK SV* sv
Apd	|void	|sv_magic	|NN SV* sv|NULLOK SV* obj|int how|NULLOK const char* name \
d766 16
a781 16
Apd	|MAGIC *|sv_magicext	|NN SV* sv|NULLOK SV* obj|int how|NULLOK MGVTBL *vtbl \
				|NULLOK const char* name|I32 namlen
ApdaR	|SV*	|sv_mortalcopy	|NULLOK SV* oldsv
ApdR	|SV*	|sv_newmortal
Apd	|SV*	|sv_newref	|NULLOK SV* sv
Ap	|char*	|sv_peek	|NULLOK SV* sv
Apd	|void	|sv_pos_u2b	|NULLOK SV* sv|NN I32* offsetp|NULLOK I32* lenp
Apd	|void	|sv_pos_b2u	|NULLOK SV* sv|NN I32* offsetp
Amdb	|char*	|sv_pvn_force	|NN SV* sv|NULLOK STRLEN* lp
Apd	|char*	|sv_pvutf8n_force|NN SV* sv|NULLOK STRLEN* lp
Apd	|char*	|sv_pvbyten_force|NN SV* sv|NULLOK STRLEN* lp
Apd	|char*	|sv_recode_to_utf8	|NN SV* sv|NN SV *encoding
Apd	|bool	|sv_cat_decode	|NN SV* dsv|NN SV *encoding|NN SV *ssv|NN int *offset \
				|NN char* tstr|int tlen
ApdR	|char*	|sv_reftype	|NN SV* sv|int ob
Apd	|void	|sv_replace	|NN SV* sv|NN SV* nsv
d783 34
a816 32
Apd	|void	|sv_reset	|NN char* s|NULLOK HV* stash
Afpd	|void	|sv_setpvf	|NN SV* sv|NN const char* pat|...
Apd	|void	|sv_vsetpvf	|NN SV* sv|NN const char* pat|NULLOK va_list* args
Apd	|void	|sv_setiv	|NN SV* sv|IV num
Apdb	|void	|sv_setpviv	|NN SV* sv|IV num
Apd	|void	|sv_setuv	|NN SV* sv|UV num
Apd	|void	|sv_setnv	|NN SV* sv|NV num
Apd	|SV*	|sv_setref_iv	|NN SV* rv|NULLOK const char* classname|IV iv
Apd	|SV*	|sv_setref_uv	|NN SV* rv|NULLOK const char* classname|UV uv
Apd	|SV*	|sv_setref_nv	|NN SV* rv|NULLOK const char* classname|NV nv
Apd	|SV*	|sv_setref_pv	|NN SV* rv|NULLOK const char* classname|NULLOK void* pv
Apd	|SV*	|sv_setref_pvn	|NN SV* rv|NULLOK const char* classname|NN char* pv|STRLEN n
Apd	|void	|sv_setpv	|NN SV* sv|NULLOK const char* ptr
Apd	|void	|sv_setpvn	|NN SV* sv|NULLOK const char* ptr|STRLEN len
Amdb	|void	|sv_setsv	|NN SV* dsv|NULLOK SV* ssv
Apd	|void	|sv_taint	|NN SV* sv
ApdR	|bool	|sv_tainted	|NN SV* sv
Apd	|int	|sv_unmagic	|NN SV* sv|int type
Apd	|void	|sv_unref	|NN SV* sv
Apd	|void	|sv_unref_flags	|NN SV* sv|U32 flags
Apd	|void	|sv_untaint	|NN SV* sv
Apd	|bool	|sv_upgrade	|NN SV* sv|U32 mt
Apd	|void	|sv_usepvn	|NN SV* sv|NULLOK char* ptr|STRLEN len
Apd	|void	|sv_vcatpvfn	|NN SV* sv|NN const char* pat|STRLEN patlen \
				|NULLOK va_list* args|NULLOK SV** svargs|I32 svmax \
				|NULLOK bool *maybe_tainted
Apd	|void	|sv_vsetpvfn	|NN SV* sv|NN const char* pat|STRLEN patlen \
				|NULLOK va_list* args|NULLOK SV** svargs|I32 svmax \
				|NULLOK bool *maybe_tainted
ApR	|NV	|str_to_version	|NN SV *sv
Ap	|SV*	|swash_init	|NN char* pkg|NN char* name|NN SV* listsv|I32 minbits|I32 none
Ap	|UV	|swash_fetch	|NN SV *sv|NN U8 *ptr|bool do_utf8
d818 7
a824 7
Ap	|void	|taint_proper	|NULLOK const char* f|NN const char* s
Apd	|UV	|to_utf8_case	|NN U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp \
				|NN SV **swashp|NN char *normal|NN char *special
Apd	|UV	|to_utf8_lower	|NN U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
Apd	|UV	|to_utf8_upper	|NN U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
Apd	|UV	|to_utf8_title	|NN U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
Apd	|UV	|to_utf8_fold	|NN U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
d826 1
a826 1
Ap	|I32	|unlnk		|NN char* f
d829 1
a829 1
Ap	|void	|unlock_condpair|NN void* svv
d831 22
a852 25
Apd	|I32	|unpack_str	|NN char *pat|NN char *patend|NN char *s \
				|NULLOK char *strbeg|NN char *strend|NULLOK char **new_s \
				|I32 ocnt|U32 flags
Apd	|I32	|unpackstring	|NN char *pat|NN char *patend|NN char *s \
				|NN char *strend|U32 flags
Ap	|void	|unsharepvn	|NULLOK const char* sv|I32 len|U32 hash
p	|void	|unshare_hek	|NULLOK HEK* hek
p	|void	|utilize	|int aver|I32 floor|NULLOK OP* version|NN OP* idop|NULLOK OP* arg
Ap	|U8*	|utf16_to_utf8	|NN U8* p|NN U8 *d|I32 bytelen|NN I32 *newlen
Ap	|U8*	|utf16_to_utf8_reversed|NN U8* p|NN U8 *d|I32 bytelen|NN I32 *newlen
AdpPR	|STRLEN	|utf8_length	|NN U8* s|NN U8 *e
ApdPR	|IV	|utf8_distance	|NN U8 *a|NN U8 *b
ApdPR	|U8*	|utf8_hop	|NN U8 *s|I32 off
ApMd	|U8*	|utf8_to_bytes	|NN U8 *s|NN STRLEN *len
ApMd	|U8*	|bytes_from_utf8|NN U8 *s|NN STRLEN *len|NULLOK bool *is_utf8
ApMd	|U8*	|bytes_to_utf8	|NN U8 *s|NN STRLEN *len
Apd	|UV	|utf8_to_uvchr	|NN U8 *s|NULLOK STRLEN *retlen
Apd	|UV	|utf8_to_uvuni	|NN U8 *s|NULLOK STRLEN *retlen
Adp	|UV	|utf8n_to_uvchr	|NN U8 *s|STRLEN curlen|NULLOK STRLEN *retlen|U32 flags
Adp	|UV	|utf8n_to_uvuni	|NN U8 *s|STRLEN curlen|NULLOK STRLEN *retlen|U32 flags
Apd	|U8*	|uvchr_to_utf8	|NN U8 *d|UV uv
Ap	|U8*	|uvuni_to_utf8	|NN U8 *d|UV uv
Ap	|U8*	|uvchr_to_utf8_flags	|NN U8 *d|UV uv|UV flags
Apd	|U8*	|uvuni_to_utf8_flags	|NN U8 *d|UV uv|UV flags
Apd	|char*	|pv_uni_display	|NN SV *dsv|NN U8 *spv|STRLEN len \
d854 8
a861 8
ApdR	|char*	|sv_uni_display	|NN SV *dsv|NN SV *ssv|STRLEN pvlim|UV flags
p	|void	|vivify_defelem	|NN SV* sv
p	|void	|vivify_ref	|NN SV* sv|U32 to_what
p	|I32	|wait4pid	|Pid_t pid|NN int* statusp|int flags
p	|U32	|parse_unicode_opts|NN char **popt
Ap	|U32	|seed
pR	|UV	|get_hash_seed
p	|void	|report_evil_fh	|NULLOK GV *gv|NULLOK IO *io|I32 op
d863 8
a870 8
Afpd	|void	|warn		|NN const char* pat|...
Ap	|void	|vwarn		|NN const char* pat|NULLOK va_list* args
Afp	|void	|warner		|U32 err|NN const char* pat|...
Ap	|void	|vwarner	|U32 err|NN const char* pat|NULLOK va_list* args
p	|void	|watch		|NN char** addr
Ap	|I32	|whichsig	|NN char* sig
p	|void	|write_to_stderr|NN const char* message|int msglen
p	|int	|yyerror	|NN char* s
d872 1
a872 1
p	|int	|yylex_r	|NULLOK YYSTYPE *lvalp|NULLOK int *lcharp
d876 1
a876 1
p	|int	|yywarn		|NN char* s
d878 2
a879 2
Ap	|void	|dump_mstats	|NN char* s
ApR	|int	|get_mstats	|NN perl_mstats_t *buf|int buflen|int level
d881 3
a883 3
Anpa	|Malloc_t|safesysmalloc	|MEM_SIZE nbytes
Anpa	|Malloc_t|safesyscalloc	|MEM_SIZE elements|MEM_SIZE size
Anpa	|Malloc_t|safesysrealloc|Malloc_t where|MEM_SIZE nbytes
d891 1
a891 1
Ap	|SV*	|sv_lock	|NN SV *sv
d893 17
a909 17
Afpd	|void	|sv_catpvf_mg	|NN SV *sv|NN const char* pat|...
Apd	|void	|sv_vcatpvf_mg	|NN SV* sv|NN const char* pat|NULLOK va_list* args
Apd	|void	|sv_catpv_mg	|NN SV *sv|NN const char *ptr
Apd	|void	|sv_catpvn_mg	|NN SV *sv|NN const char *ptr|STRLEN len
Apd	|void	|sv_catsv_mg	|NN SV *dstr|NULLOK SV *sstr
Afpd	|void	|sv_setpvf_mg	|NN SV *sv|NN const char* pat|...
Apd	|void	|sv_vsetpvf_mg	|NN SV* sv|NN const char* pat|NULLOK va_list* args
Apd	|void	|sv_setiv_mg	|NN SV *sv|IV i
Apdb	|void	|sv_setpviv_mg	|NN SV *sv|IV iv
Apd	|void	|sv_setuv_mg	|NN SV *sv|UV u
Apd	|void	|sv_setnv_mg	|NN SV *sv|NV num
Apd	|void	|sv_setpv_mg	|NN SV *sv|NULLOK const char *ptr
Apd	|void	|sv_setpvn_mg	|NN SV *sv|NN const char *ptr|STRLEN len
Apd	|void	|sv_setsv_mg	|NN SV *dstr|NULLOK SV *sstr
Apd	|void	|sv_usepvn_mg	|NN SV *sv|NULLOK char *ptr|STRLEN len
ApR	|MGVTBL*|get_vtbl	|int vtbl_id
Ap	|char*	|pv_display	|NN SV *dsv|NN char *pv|STRLEN cur|STRLEN len \
d911 7
a917 7
Afp	|void	|dump_indent	|I32 level|NN PerlIO *file|NN const char* pat|...
Ap	|void	|dump_vindent	|I32 level|NN PerlIO *file|NN const char* pat \
				|NULLOK va_list *args
Ap	|void	|do_gv_dump	|I32 level|NN PerlIO *file|NN char *name|NN GV *sv
Ap	|void	|do_gvgv_dump	|I32 level|NN PerlIO *file|NN char *name|NN GV *sv
Ap	|void	|do_hv_dump	|I32 level|NN PerlIO *file|NN char *name|NN HV *sv
Ap	|void	|do_magic_dump	|I32 level|NN PerlIO *file|NN MAGIC *mg|I32 nest \
d919 3
a921 3
Ap	|void	|do_op_dump	|I32 level|NN PerlIO *file|NULLOK OP *o
Ap	|void	|do_pmop_dump	|I32 level|NN PerlIO *file|NULLOK PMOP *pm
Ap	|void	|do_sv_dump	|I32 level|NN PerlIO *file|NULLOK SV *sv|I32 nest \
d923 1
a923 1
Ap	|void	|magic_dump	|NULLOK MAGIC *mg
d925 1
a925 1
Ap	|void*	|default_protect|NN volatile JMPENV *je|NN int *excpt \
d927 2
a928 2
Ap	|void*	|vdefault_protect|NN volatile JMPENV *je|NN int *excpt \
				|protect_body_t body|NN va_list *args
d931 12
a942 12
ApdR	|char*	|sv_2pv_nolen	|NN SV* sv
ApdR	|char*	|sv_2pvutf8_nolen|NN SV* sv
ApdR	|char*	|sv_2pvbyte_nolen|NN SV* sv
AmdbR	|char*	|sv_pv		|NN SV *sv
AmdbR	|char*	|sv_pvutf8	|NN SV *sv
AmdbR	|char*	|sv_pvbyte	|NN SV *sv
Amdb	|STRLEN	|sv_utf8_upgrade|NN SV *sv
ApdM	|bool	|sv_utf8_downgrade|NN SV *sv|bool fail_ok
Apd	|void	|sv_utf8_encode |NN SV *sv
ApdM	|bool	|sv_utf8_decode |NN SV *sv
Apd	|void	|sv_force_normal|NN SV *sv
Apd	|void	|sv_force_normal_flags|NN SV *sv|U32 flags
d944 6
a949 6
Apd	|SV*	|sv_rvweaken	|NN SV *sv
p	|int	|magic_killbackrefs|NN SV *sv|NN MAGIC *mg
Ap	|OP*	|newANONATTRSUB	|I32 floor|NULLOK OP *proto|NULLOK OP *attrs|NULLOK OP *block
Ap	|CV*	|newATTRSUB	|I32 floor|NULLOK OP *o|NULLOK OP *proto|NULLOK OP *attrs|NULLOK OP *block
Apr	|void	|newMYSUB	|I32 floor|NULLOK OP *o|NULLOK OP *proto|NULLOK OP *attrs|NULLOK OP *block
p	|OP *	|my_attrs	|NN OP *o|NULLOK OP *attrs
d952 11
a962 12
Apa	|PERL_CONTEXT*|cx_dup	|NULLOK PERL_CONTEXT* cx|I32 ix|I32 max|NN CLONE_PARAMS* param
Apa	|PERL_SI*|si_dup	|NULLOK PERL_SI* si|NN CLONE_PARAMS* param
Apa	|ANY*	|ss_dup		|NN PerlInterpreter* proto_perl|NN CLONE_PARAMS* param
Apa	|void*	|any_dup	|NULLOK void* v|NN PerlInterpreter* proto_perl
Apa	|HE*	|he_dup		|NULLOK HE* e|bool shared|NN CLONE_PARAMS* param
Apa	|REGEXP*|re_dup		|NULLOK REGEXP* r|NN CLONE_PARAMS* param
Apa	|PerlIO*|fp_dup		|NULLOK PerlIO* fp|char type|NN CLONE_PARAMS* param
Apa	|DIR*	|dirp_dup	|NULLOK DIR* dp
Apa	|GP*	|gp_dup		|NULLOK GP* gp|NN CLONE_PARAMS* param
Apa	|MAGIC*	|mg_dup		|NULLOK MAGIC* mg|NN CLONE_PARAMS* param
Apa	|SV*	|sv_dup		|NULLOK SV* sstr|NN CLONE_PARAMS* param
Ap	|void	|rvpv_dup	|NN SV* dstr|NN SV *sstr|NN CLONE_PARAMS* param
d964 2
a965 2
Ap	|void	|sys_intern_dup	|NN struct interp_intern* src \
				|NN struct interp_intern* dst
d967 6
a972 6
Apa	|PTR_TBL_t*|ptr_table_new
Apa	|void*	|ptr_table_fetch|NN PTR_TBL_t *tbl|NN void *sv
Ap	|void	|ptr_table_store|NN PTR_TBL_t *tbl|NULLOK void *oldsv|NN void *newsv
Ap	|void	|ptr_table_split|NN PTR_TBL_t *tbl
Ap	|void	|ptr_table_clear|NULLOK PTR_TBL_t *tbl
Ap	|void	|ptr_table_free|NULLOK PTR_TBL_t *tbl
d979 2
a980 2
ApR	|char *	|custom_op_name	|NN OP* op
ApR	|char *	|custom_op_desc	|NN OP* op
d982 3
a984 3
Adp	|void	|sv_nosharing	|NULLOK SV *
Adp	|void	|sv_nolocking	|NULLOK SV *
Adp	|void	|sv_nounlocking	|NULLOK SV *
d990 2
a991 2
s	|I32	|avhv_index_sv	|NN SV* sv
s	|I32	|avhv_index	|NULLOK AV* av|NN SV* sv|U32 hash
d995 6
a1000 6
sR	|I32	|do_trans_simple	|NN SV *sv
sR	|I32	|do_trans_count		|NN SV *sv
sR	|I32	|do_trans_complex	|NN SV *sv
sR	|I32	|do_trans_simple_utf8	|NN SV *sv
sR	|I32	|do_trans_count_utf8	|NN SV *sv
sR	|I32	|do_trans_complex_utf8	|NN SV *sv
d1004 2
a1005 2
s	|void	|gv_init_sv	|NN GV *gv|I32 sv_type
s	|void	|require_errno	|NN GV *gv
d1009 10
a1018 9
s	|void	|hsplit		|NN HV *hv
s	|void	|hfreeentries	|NN HV *hv
sa	|HE*	|new_he
s	|void	|del_he		|NN HE *p
sa	|HEK*	|save_hek_flags	|NN const char *str|I32 len|U32 hash|int flags
s	|void	|hv_magic_check	|NN HV *hv|NN bool *needs_copy|NN bool *needs_store
s	|void	|unshare_hek_or_pvn|NULLOK HEK* hek|NULLOK const char* str|I32 len|U32 hash
sR	|HEK*	|share_hek_flags|NN const char* str|I32 len|U32 hash|int flags
rs	|void	|hv_notallowed	|int flags|NN const char *key|I32 klen|NN const char *msg
d1022 4
a1025 7
s	|void	|save_magic	|I32 mgs_ix|NN SV *sv
s	|int	|magic_methpack	|NN SV *sv|NN const MAGIC *mg|NN const char *meth
s	|int	|magic_methcall	|NN SV *sv|NN const MAGIC *mg|NN const char *meth|I32 f \
				|int n|NULLOK SV *val
s	|void	|restore_magic	|NN const void *p
s	|void	|unwind_handler_stack|NN const void *p

d1029 19
a1047 19
sR	|bool	|is_handle_constructor|NN const OP *o|I32 numargs
sR	|I32	|is_list_assignment|NULLOK const OP *o
s	|void	|cop_free	|NN COP *cop
s	|OP*	|modkids	|NULLOK OP *o|I32 type
s	|OP*	|scalarboolean	|NN OP *o
sR	|OP*	|newDEFSVOP
sR	|OP*	|new_logop	|I32 type|I32 flags|NN OP **firstp|NN OP **otherp
s	|void	|simplify_sort	|NN OP *o
s	|const char*	|gv_ename	|NN GV *gv
s	|bool	|scalar_mod_type|NN const OP *o|I32 type
s	|OP *	|my_kid		|NULLOK OP *o|NULLOK OP *attrs|NN OP **imopsp
s	|OP *	|dup_attrlist	|NN OP *o
s	|void	|apply_attrs	|NN HV *stash|NN SV *target|NULLOK OP *attrs|bool for_my
s	|void	|apply_attrs_my	|NN HV *stash|NN OP *target|NULLOK OP *attrs|NN OP **imopsp
s	|void	|bad_type	|I32 n|NN const char *t|NN const char *name|NN const OP *kid
s	|void	|no_bareword_allowed|NN const OP *o
sR	|OP*	|no_fh_allowed|NN OP *o
sR	|OP*	|too_few_arguments|NN OP *o|NN const char* name
sR	|OP*	|too_many_arguments|NN OP *o|NN const char* name
d1050 2
a1051 2
Apa	|void*	|Slab_Alloc	|int m|size_t sz
Ap	|void	|Slab_Free	|NN void *op
d1056 2
a1057 2
s	|void	|forbid_setid	|NN const char * s
s	|void	|incpush	|NULLOK const char *dir|bool addsubdirs|bool addoldvers|bool usesep
d1063 1
a1063 1
s	|void	|init_postdump_symbols|int argc|NN char **argv|NULLOK char **env
d1067 3
a1069 3
s	|void	|open_script	|NN const char *scriptname|bool dosearch|NN SV *sv
s	|void	|usage		|NN const char *name
s	|void	|validate_suid	|NN const char *validarg|NN const char *scriptname
d1073 4
a1076 4
s	|void*	|parse_body	|NULLOK char **env|XSINIT_t xsinit
rs	|void	|run_body	|I32 oldscope
s	|void	|call_body	|NN const OP *myop|bool is_eval
s	|void*	|call_list_body	|NN CV *cv
d1089 1
a1089 1
sR	|SV*	|refto		|NN SV* sv
d1093 10
a1102 11
s	|I32	|unpack_rec	|NN tempsym_t* symptr|NN char *s \
				|NN char *strbeg|NN char *strend|NULLOK char **new_s
s	|SV **	|pack_rec	|NN SV *cat|NN tempsym_t* symptr|NN SV **beglist|NN SV **endlist
s	|SV*	|mul128		|NN SV *sv|U8 m
s	|I32	|measure_struct	|NN tempsym_t* symptr
s	|const char *	|group_end	|NN const char *pat|NN const char *patend|char ender
s	|const char *	|get_num	|NN const char *ppat|NN I32 *
s	|bool	|next_symbol	|NN tempsym_t* symptr
s	|void	|doencodes	|NN SV* sv|NN char* s|I32 len
sR	|SV*	|is_an_int	|NN const char *s|STRLEN l
s	|int	|div128		|NN SV *pnum|NN bool *done
d1106 2
a1107 2
sR	|OP*	|docatch	|NULLOK OP *o
s	|void	|docatch_body
d1111 12
a1122 13
sR	|OP*	|dofindlabel	|NN OP *o|NN const char *label|NN OP **opstack|NN OP **oplimit
sR	|OP*	|doparseform	|NN SV *sv
snR	|bool	|num_overflow	|NV value|I32 fldsize|I32 frcsize
sR	|I32	|dopoptoeval	|I32 startingblock
sR	|I32	|dopoptolabel	|NN const char *label
sR	|I32	|dopoptoloop	|I32 startingblock
sR	|I32	|dopoptosub	|I32 startingblock
sR	|I32	|dopoptosub_at	|NN const PERL_CONTEXT* cxstk|I32 startingblock
s	|void	|save_lines	|NULLOK AV *array|NN SV *sv
sR	|OP*	|doeval		|int gimme|NULLOK OP** startop|NULLOK CV* outside|U32 seq
sR	|PerlIO *|check_type_and_open|NN const char *name|NN const char *mode
sR	|PerlIO *|doopen_pm	|NN const char *name|NN const char *mode
sR	|bool	|path_is_absolute|NN const char *name
d1126 5
a1130 5
s	|int	|do_maybe_phash	|NN AV *ary|NN SV **lelem|NN SV **firstlelem \
				|NN SV **relem|NN SV **lastrelem
s	|void	|do_oddball	|NN HV *hash|NN SV **relem|NN SV **firstrelem
sR	|CV*	|get_db_sub	|NN SV **svp|NN CV *cv
sR	|SV*	|method_common	|NN SV* meth|NULLOK U32* hashp
d1134 2
a1135 2
s	|OP*	|doform		|NN CV *cv|NN GV *gv|NN OP *retop
s	|int	|emulate_eaccess|NN const char* path|Mode_t mode
d1137 1
a1137 1
sR	|int	|dooneliner	|NN const char *cmd|NN const char *filename
d1142 14
a1155 14
Es	|regnode*|reg		|NN struct RExC_state_t *state|I32 paren|NN I32 *flagp
Es	|regnode*|reganode	|NN struct RExC_state_t *state|U8 op|U32 arg
Es	|regnode*|regatom	|NN struct RExC_state_t *state|NN I32 *flagp
Es	|regnode*|regbranch	|NN struct RExC_state_t *state|NN I32 *flagp|I32 first
Es	|void	|reguni		|NN const struct RExC_state_t *state|UV uv|NN char *s|NN STRLEN *lenp
Es	|regnode*|regclass	|NN struct RExC_state_t *state
ERs	|I32	|regcurly	|NN const char *
Es	|regnode*|reg_node	|NN struct RExC_state_t *state|U8 op
Es	|regnode*|regpiece	|NN struct RExC_state_t *state|NN I32 *flagp
Es	|void	|reginsert	|NN struct RExC_state_t *state|U8 op|NN regnode *opnd
Es	|void	|regoptail	|NN struct RExC_state_t *state|NN regnode *p|NN regnode *val
Es	|void	|regtail	|NN struct RExC_state_t *state|NN regnode *p|NN regnode *val
Es	|char*	|regwhite	|NN char *p|NN const char *e
Es	|char*	|nextchar	|NN struct RExC_state_t*
d1157 3
a1159 3
Es	|regnode*|dumpuntil	|NN regnode *start|NN regnode *node \
				|NULLOK regnode *last|NN SV* sv|I32 l
Es	|void	|put_byte	|NN SV* sv|int c
d1161 11
a1171 11
Es	|void	|scan_commit	|NN struct RExC_state_t*|NN struct scan_data_t *data
Es	|void	|cl_anything	|NN struct RExC_state_t*|NN struct regnode_charclass_class *cl
Es	|int	|cl_is_anything	|NN const struct regnode_charclass_class *cl
Es	|void	|cl_init	|NN struct RExC_state_t*|NN struct regnode_charclass_class *cl
Es	|void	|cl_init_zero	|NN struct RExC_state_t*|NN struct regnode_charclass_class *cl
Es	|void	|cl_and		|NN struct regnode_charclass_class *cl \
				|NN const struct regnode_charclass_class *and_with
Es	|void	|cl_or		|NN struct RExC_state_t*|NN struct regnode_charclass_class *cl \
				|NN const struct regnode_charclass_class *or_with
Es	|I32	|study_chunk	|NN struct RExC_state_t* pRExC_state|NN regnode **scanp \
				|NN I32 *deltap|NN regnode *last|NULLOK struct scan_data_t *data \
d1173 4
a1176 4
Es	|I32	|add_data	|NN struct RExC_state_t*|I32 n|NN const char *s
rs	|void	|re_croak2	|NN const char* pat1|NN const char* pat2|...
Es	|I32	|regpposixcc	|NN struct RExC_state_t*|I32 value
Es	|void	|checkposixcc	|NN struct RExC_state_t*
d1180 5
a1184 6
ERs	|I32	|regmatch	|NN regnode *prog
ERs	|I32	|regrepeat	|NN const regnode *p|I32 max
ERs	|I32	|regrepeat_hard	|NN regnode *p|I32 max|NN I32 *lp
ERs	|I32	|regtry		|NN regexp *prog|NN char *startpos
ERs	|bool	|reginclass	|NN const regnode *n|NN const U8 *p|NULLOK STRLEN *lenp\
				|bool do_utf8sv_is_utf8
d1188 8
a1195 8
Es	|void	|cache_re	|NN regexp *prog
ERs	|U8*	|reghop		|NN U8 *pos|I32 off
ERs	|U8*	|reghop3	|NN U8 *pos|I32 off|NN U8 *lim
ERs	|U8*	|reghopmaybe	|NN U8 *pos|I32 off
ERs	|U8*	|reghopmaybe3	|NN U8 *pos|I32 off|NN U8 *lim
ERs	|char*	|find_byclass	|NN regexp * prog|NN regnode *c|NN char *s|NN const char *strend|I32 norun
Es	|void	|to_utf8_substr	|NN regexp * prog
Es	|void	|to_byte_substr	|NN regexp * prog
d1200 1
a1200 1
s	|void	|debprof	|NN const OP *o
d1204 1
a1204 1
s	|SV*	|save_scalar_at	|NN SV **sptr
d1208 15
a1222 3
nsR	|char *	|uiv_2buf	|NN char *buf|IV iv|UV uv|int is_uv|NN char **peob
sR	|IV	|asIV		|NN SV* sv
sR	|UV	|asUV		|NN SV* sv
d1235 17
a1251 17
s	|void	|del_xiv	|NN XPVIV* p
s	|void	|del_xnv	|NN XPVNV* p
s	|void	|del_xpv	|NN XPV* p
s	|void	|del_xpviv	|NN XPVIV* p
s	|void	|del_xpvnv	|NN XPVNV* p
s	|void	|del_xpvcv	|NN XPVCV* p
s	|void	|del_xpvav	|NN XPVAV* p
s	|void	|del_xpvhv	|NN XPVHV* p
s	|void	|del_xpvmg	|NN XPVMG* p
s	|void	|del_xpvlv	|NN XPVLV* p
s	|void	|del_xpvbm	|NN XPVBM* p
s	|void	|del_xrv	|NN XRV* p
s	|void	|sv_unglob	|NN SV* sv
s	|void	|not_a_number	|NN SV *sv
s	|I32	|visit		|NN SVFUNC_t f|U32 flags|U32 mask
s	|void	|sv_add_backref	|NN SV *tsv|NN SV *sv
s	|void	|sv_del_backref	|NN SV *sv
d1253 1
a1253 1
s	|void	|del_sv	|NN SV *p
d1256 1
a1256 1
s	|int	|sv_2iuv_non_preserve	|NN SV *sv|I32 numtype
d1258 1
a1258 1
sR	|I32	|expect_number	|NN char** pattern
d1260 5
a1264 7
s	|bool	|utf8_mg_pos	|NN SV *sv|NN MAGIC **mgp|NN STRLEN **cachep \
				|I32 i|NN I32 *offsetp|I32 uoff \
				|NN const U8 **sp|NN const U8 *start \
				|NN const U8 *send
s	|bool	|utf8_mg_pos_init	|NN SV *sv|NN MAGIC **mgp \
				|NN STRLEN **cachep|I32 i|I32 offsetp \
				|NN const U8 *s|NN const U8 *start
d1270 2
a1271 2
s	|char*	|force_version	|NN char *start|int guessing
s	|char*	|force_word	|NN char *start|int token|int check_keyword \
d1273 1
a1273 1
s	|SV*	|tokeq		|NN SV *sv
d1275 4
a1278 4
sR	|char*	|scan_const	|NN char *start
sR	|char*	|scan_formline	|NN char *s
sR	|char*	|scan_heredoc	|NN char *s
s	|char*	|scan_ident	|NN char *s|NN const char *send|NN char *dest \
d1280 17
a1296 17
sR	|char*	|scan_inputsymbol|NN char *start
sR	|char*	|scan_pat	|NN char *start|I32 type
sR	|char*	|scan_str	|NN char *start|int keep_quoted|int keep_delims
sR	|char*	|scan_subst	|NN char *start
sR	|char*	|scan_trans	|NN char *start
s	|char*	|scan_word	|NN char *s|NN char *dest|STRLEN destlen \
				|int allow_package|NN STRLEN *slp
sR	|char*	|skipspace	|NN char *s
sR	|char*	|swallow_bom	|NN U8 *s
s	|void	|checkcomma	|NN char *s|NN const char *name|NN const char *what
s	|void	|force_ident	|NN const char *s|int kind
s	|void	|incline	|NN char *s
s	|int	|intuit_method	|NN char *s|NULLOK GV *gv
s	|int	|intuit_more	|NN char *s
s	|I32	|lop		|I32 f|int x|NN char *s
rs	|void	|missingterm	|NULLOK char *s
s	|void	|no_op		|NN const char *what|NULLOK char *s
d1298 7
a1304 7
sR	|I32	|sublex_done
sR	|I32	|sublex_push
sR	|I32	|sublex_start
sR	|char *	|filter_gets	|NN SV *sv|NN PerlIO *fp|STRLEN append
sR	|HV *	|find_in_my_stash|NN const char *pkgname|I32 len
s	|SV*	|new_constant	|NULLOK const char *s|STRLEN len|NN const char *key|NN SV *sv \
				|NULLOK SV *pv|NULLOK const char *type
d1306 1
a1306 1
s	|int	|tokereport	|NN const char *s|I32 rv
d1310 5
a1314 1
s	|const char*|incl_perldb
d1316 1
a1316 1
s	|I32	|cr_textfilter	|int idx|NULLOK SV *sv|int maxlen
d1321 1
a1321 1
s	|SV*|isa_lookup	|NULLOK HV *stash|NN const char *name|NULLOK HV *name_stash|int len|int level
d1325 1
a1325 1
s	|char*	|stdize_locale	|NN char* locs
d1329 1
a1329 1
s	|COP*	|closest_cop	|NN COP *cop|NULLOK const OP *o
a1330 3
xo	|const char *|vdie_croak_common|NULLOK const char *pat|NULLOK va_list *args \
				|NULLOK STRLEN *msglen|NULLOK I32* utf8
xo	|void	|vdie_common	|NULLOK const char *message|STRLEN msglen|I32 utf8
a1336 4
#if defined(PERL_IN_UTF8_C) || defined(PERL_DECL_PROT)
s	|STRLEN	|is_utf8_char_slow|NN const U8 *s|const STRLEN len
#endif

d1339 8
a1346 8
Apd	|void	|sv_setsv_flags	|NN SV* dsv|NULLOK SV* ssv|I32 flags
Apd	|void	|sv_catpvn_flags|NN SV* sv|NN const char* ptr|STRLEN len|I32 flags
Apd	|void	|sv_catsv_flags	|NN SV* dsv|NULLOK SV* ssv|I32 flags
Apd	|STRLEN	|sv_utf8_upgrade_flags|NN SV *sv|I32 flags
Apd	|char*	|sv_pvn_force_flags|NN SV* sv|NULLOK STRLEN* lp|I32 flags
Apd	|char*	|sv_2pv_flags	|NN SV* sv|NULLOK STRLEN* lp|I32 flags
Apd	|void	|sv_copypv	|NN SV* dsv|NN SV* ssv
Ap	|char*	|my_atof2	|NN const char *s|NN NV* value
d1350 24
a1373 24
Ap	|int	|PerlIO_close		|NULLOK PerlIO *f
Ap	|int	|PerlIO_fill		|NULLOK PerlIO *f
Ap	|int	|PerlIO_fileno		|NULLOK PerlIO *f
Ap	|int	|PerlIO_eof		|NULLOK PerlIO *f
Ap	|int	|PerlIO_error		|NULLOK PerlIO *f
Ap	|int	|PerlIO_flush		|NULLOK PerlIO *f
Ap	|void	|PerlIO_clearerr	|NULLOK PerlIO *f
Ap	|void	|PerlIO_set_cnt		|NULLOK PerlIO *f|int cnt
Ap	|void	|PerlIO_set_ptrcnt	|NULLOK PerlIO *f|NN STDCHAR *ptr|int cnt
Ap	|void	|PerlIO_setlinebuf	|NULLOK PerlIO *f
Ap	|SSize_t|PerlIO_read		|NULLOK PerlIO *f|NN void *buf|Size_t count
Ap	|SSize_t|PerlIO_write		|NULLOK PerlIO *f|NN const void *buf|Size_t count
Ap	|SSize_t|PerlIO_unread		|NULLOK PerlIO *f|NN const void *buf|Size_t count
Ap	|Off_t	|PerlIO_tell		|NULLOK PerlIO *f
Ap	|int	|PerlIO_seek		|NULLOK PerlIO *f|Off_t offset|int whence

Ap	|STDCHAR *|PerlIO_get_base	|NULLOK PerlIO *f
Ap	|STDCHAR *|PerlIO_get_ptr	|NULLOK PerlIO *f
ApR	|int	  |PerlIO_get_bufsiz	|NULLOK PerlIO *f
ApR	|int	  |PerlIO_get_cnt	|NULLOK PerlIO *f

ApR	|PerlIO *|PerlIO_stdin
ApR	|PerlIO *|PerlIO_stdout
ApR	|PerlIO *|PerlIO_stderr
d1378 1
a1378 1
s	|void	|deb_stack_n	|NN SV** stack_base|I32 stack_min \
d1382 7
a1388 6
pda	|PADLIST*|pad_new	|int flags
pd	|void	|pad_undef	|NN CV* cv
pd	|PADOFFSET|pad_add_name	|NN char *name\
				|NULLOK HV* typestash|NULLOK HV* ourstash|bool clone
pd	|PADOFFSET|pad_add_anon	|NN SV* sv|OPCODE op_type
pd	|void	|pad_check_dup	|NN char* name|bool is_our|NN HV* ourstash
d1390 1
a1390 1
pd	|void	|pad_setsv	|PADOFFSET po|NN SV* sv
d1394 3
a1396 2
pd 	|void	|do_dump_pad	|I32 level|NN PerlIO *file|NULLOK PADLIST *padlist|int full
pd	|void	|pad_fixup_inner_anons|NN PADLIST *padlist|NN CV *old_cv|NN CV *new_cv
d1398 1
a1398 2
pd	|void	|pad_push	|NN PADLIST *padlist|int depth|int has_args
pR	|HV*	|pad_compname_type|const PADOFFSET po
d1401 1
a1401 2
sd	|PADOFFSET|pad_findlex	|NN const char* name|PADOFFSET newoff\
				|NN const CV* innercv
d1403 1
a1403 1
sd	|void	|cv_dump	|NN const CV *cv|NN const char *title
d1405 1
a1405 1
s	|CV*	|cv_clone2	|NN CV *proto|NULLOK CV *outside
d1407 1
a1407 1
pdR	|CV*	|find_runcv	|NULLOK U32 *db_seqp
d1410 1
a1410 1
pR	|int	|get_debug_opts	|NN char **s
a1412 1
Apd	|void	|hv_clear_placeholders|NN HV* hb
a1413 6
#if defined(PERL_IN_HV_C) || defined(PERL_DECL_PROT)
sM	|SV*	|hv_delete_common|NULLOK HV* tb|NULLOK SV* key_sv|NULLOK const char* key|STRLEN klen|int k_flags|I32 d_flags|U32 hash
sM	|HE*	|hv_fetch_common|NULLOK HV* tb|NULLOK SV* key_sv|NULLOK const char* key|STRLEN klen|int flags|int action|NULLOK SV* val|U32 hash
#endif
ApdR	|SV*	|hv_scalar	|NN HV* hv|
p	|SV*	|magic_scalarpack|NN HV* hv|NN MAGIC* mg
a1414 3
#if defined(DEBUGGING)
p	|int	|get_debug_opts_flags	|NN char **s|int flags
#endif
d1416 1
a1416 3
Ap	|void	|op_refcnt_lock
Ap	|void	|op_refcnt_unlock
Apda	|char*	|savesvpv	|NN SV* sv
d1418 3
a1420 35
#ifdef PERL_NEED_MY_HTOLE16
np	|U16	|my_htole16	|U16 n
#endif
#ifdef PERL_NEED_MY_LETOH16
np	|U16	|my_letoh16	|U16 n
#endif
#ifdef PERL_NEED_MY_HTOBE16
np	|U16	|my_htobe16	|U16 n
#endif
#ifdef PERL_NEED_MY_BETOH16
np	|U16	|my_betoh16	|U16 n
#endif
#ifdef PERL_NEED_MY_HTOLE32
np	|U32	|my_htole32	|U32 n
#endif
#ifdef PERL_NEED_MY_LETOH32
np	|U32	|my_letoh32	|U32 n
#endif
#ifdef PERL_NEED_MY_HTOBE32
np	|U32	|my_htobe32	|U32 n
#endif
#ifdef PERL_NEED_MY_BETOH32
np	|U32	|my_betoh32	|U32 n
#endif
#ifdef PERL_NEED_MY_HTOLE64
np	|U64	|my_htole64	|U64 n
#endif
#ifdef PERL_NEED_MY_LETOH64
np	|U64	|my_letoh64	|U64 n
#endif
#ifdef PERL_NEED_MY_HTOBE64
np	|U64	|my_htobe64	|U64 n
#endif
#ifdef PERL_NEED_MY_BETOH64
np	|U64	|my_betoh64	|U64 n
d1422 2
d1425 2
a1426 26
#ifdef PERL_NEED_MY_HTOLES
np	|short	|my_htoles	|short n
#endif
#ifdef PERL_NEED_MY_LETOHS
np	|short	|my_letohs	|short n
#endif
#ifdef PERL_NEED_MY_HTOBES
np	|short	|my_htobes	|short n
#endif
#ifdef PERL_NEED_MY_BETOHS
np	|short	|my_betohs	|short n
#endif
#ifdef PERL_NEED_MY_HTOLEI
np	|int	|my_htolei	|int n
#endif
#ifdef PERL_NEED_MY_LETOHI
np	|int	|my_letohi	|int n
#endif
#ifdef PERL_NEED_MY_HTOBEI
np	|int	|my_htobei	|int n
#endif
#ifdef PERL_NEED_MY_BETOHI
np	|int	|my_betohi	|int n
#endif
#ifdef PERL_NEED_MY_HTOLEL
np	|long	|my_htolel	|long n
a1427 73
#ifdef PERL_NEED_MY_LETOHL
np	|long	|my_letohl	|long n
#endif
#ifdef PERL_NEED_MY_HTOBEL
np	|long	|my_htobel	|long n
#endif
#ifdef PERL_NEED_MY_BETOHL
np	|long	|my_betohl	|long n
#endif

np	|void	|my_swabn	|NN void* ptr|int n

#if defined(PERL_IN_OP_C) || defined(PERL_DECL_PROT)
ApR	|OP*	|ck_anoncode	|NN OP *o
ApR	|OP*	|ck_bitop	|NN OP *o
ApR	|OP*	|ck_concat	|NN OP *o
ApR	|OP*	|ck_defined	|NN OP *o
ApR	|OP*	|ck_delete	|NN OP *o
ApR	|OP*	|ck_die		|NN OP *o
ApR	|OP*	|ck_eof		|NN OP *o
ApR	|OP*	|ck_eval	|NN OP *o
ApR	|OP*	|ck_exec	|NN OP *o
ApR	|OP*	|ck_exists	|NN OP *o
ApR	|OP*	|ck_exit	|NN OP *o
ApR	|OP*	|ck_ftst	|NN OP *o
ApR	|OP*	|ck_fun		|NN OP *o
ApR	|OP*	|ck_glob	|NN OP *o
ApR	|OP*	|ck_grep	|NN OP *o
ApR	|OP*	|ck_index	|NN OP *o
ApR	|OP*	|ck_join	|NN OP *o
ApR	|OP*	|ck_lengthconst	|NN OP *o
ApR	|OP*	|ck_lfun	|NN OP *o
ApR	|OP*	|ck_listiob	|NN OP *o
ApR	|OP*	|ck_match	|NN OP *o
ApR	|OP*	|ck_method	|NN OP *o
ApR	|OP*	|ck_null	|NN OP *o
ApR	|OP*	|ck_open	|NN OP *o
ApR	|OP*	|ck_repeat	|NN OP *o
ApR	|OP*	|ck_require	|NN OP *o
ApR	|OP*	|ck_return	|NN OP *o
ApR	|OP*	|ck_rfun	|NN OP *o
ApR	|OP*	|ck_rvconst	|NN OP *o
ApR	|OP*	|ck_sassign	|NN OP *o
ApR	|OP*	|ck_select	|NN OP *o
ApR	|OP*	|ck_shift	|NN OP *o
ApR	|OP*	|ck_sort	|NN OP *o
ApR	|OP*	|ck_spair	|NN OP *o
ApR	|OP*	|ck_split	|NN OP *o
ApR	|OP*	|ck_subr	|NN OP *o
ApR	|OP*	|ck_substr	|NN OP *o
ApR	|OP*	|ck_svconst	|NN OP *o
ApR	|OP*	|ck_trunc	|NN OP *o
#endif

Apd	|bool	|is_utf8_string_loclen|NN const U8 *s|STRLEN len|NULLOK const U8 **ep|NULLOK STRLEN *el
Apda	|SV*	|newSVhek	|NULLOK const HEK *hek
ApR	|bool	|stashpv_hvname_match|NN const COP *cop|NN const HV *hv

p	|void	|offer_nice_chunk	|NN void *chunk|U32 chunk_size


#ifdef DEBUG_LEAKING_SCALARS_FORK_DUMP
p	|void	|dump_sv_child	|NN SV *sv
#endif

#ifdef PERL_DONT_CREATE_GVSV
Ap	|GV*	|gv_SVadd	|NN GV* gv
#endif
Apo	|bool	|ckwarn		|U32 w
Apo	|bool	|ckwarn_d	|U32 w

px	|void	|my_clearenv

a1428 3
/*
 * ex: set ts=8 sts=4 sw=4 noet:
 */
@


1.1.1.7
log
@import perl 5.10.0 from CPAN
@
text
@d98 12
a109 4
ApM	|void	|apply_attrs_string|NN const char *stashpv|NN CV *cv|NN const char *attrstr|STRLEN len
Apd	|void	|av_clear	|NN AV* ar
Apd	|SV*	|av_delete	|NN AV* ar|I32 key|I32 flags
ApdR	|bool	|av_exists	|NN AV* ar|I32 key
d112 1
a112 1
ApdR	|SV**	|av_fetch	|NN AV* ar|I32 key|I32 lval
d114 1
a114 1
ApdR	|I32	|av_len		|NN const AV* ar
d116 7
a122 10
Apd	|SV*	|av_pop		|NN AV* ar
ApdoxM	|void	|av_create_and_push|NN AV **const avp|NN SV *const val
Apd	|void	|av_push	|NN AV* ar|NN SV* val
EXp	|void	|av_reify	|NN AV* ar
ApdR	|SV*	|av_shift	|NN AV* ar
Apd	|SV**	|av_store	|NN AV* ar|I32 key|NULLOK SV* val
Apd	|void	|av_undef	|NN AV* ar
ApdoxM	|SV**	|av_create_and_unshift_one|NN AV **const avp|NN SV *const val
Apd	|void	|av_unshift	|NN AV* ar|I32 num
Apo	|SV**	|av_arylen_p	|NN AV* av
d130 1
a130 1
pR	|bool	|cando		|Mode_t mode|bool effective|NN const Stat_t* statbufp
d138 3
a141 1
pM	|PERL_CONTEXT*	|create_eval_scope|U32 flags
d162 1
a162 4
bp	|void	|cv_ckproto	|NN const CV* cv|NULLOK const GV* gv\
				|NULLOK const char* p
p	|void	|cv_ckproto_len	|NN const CV* cv|NULLOK const GV* gv\
				|NULLOK const char* p|const STRLEN len
a163 1
ApdR	|SV*	|gv_const_sv	|NN GV* gv
d165 1
a165 1
pR	|SV*	|op_const_sv	|NULLOK const OP* o|NULLOK CV* cv
d173 1
a173 1
pPR	|const char*	|get_no_modify
d176 1
a176 1
EXpR	|I32	|cxinc
d180 1
a180 1
Ap	|I32	|debop		|NN const OP* o
d183 4
a186 5
Ap	|char*	|delimcpy	|NN char* to|NN const char* toend|NN const char* from \
				|NN const char* fromend|int delim|NN I32* retlen
pM	|void	|delete_eval_scope
p	|void	|deprecate	|NN const char* s
p	|void	|deprecate_old	|NN const char* s
d189 1
a189 1
p	|OP*	|die_where	|NULLOK const char* message|STRLEN msglen
d191 2
a192 2
pmb	|bool	|do_aexec	|NULLOK SV* really|NN SV** mark|NN SV** sp
p	|bool	|do_aexec5	|NULLOK SV* really|NN SV** mark|NN SV** sp|int fd|int do_report
d195 1
a195 1
Ap	|bool	|do_close	|NULLOK GV* gv|bool not_implicit
d197 2
a198 8

#ifdef PERL_DEFAULT_DO_EXEC3_IMPLEMENTATION
pmb	|bool	|do_exec	|NN const char* cmd
#else
p	|bool	|do_exec	|NN const char* cmd
#endif

#if defined(WIN32) || defined(__SYMBIAN32__)
d204 1
a204 1
p	|bool	|do_exec3	|NN const char* cmd|int fd|int do_report
a206 3
#ifdef PERL_IN_DOIO_C
s	|void	|exec_failed	|NN const char *cmd|int fd|int do_report
#endif
d217 1
a217 1
Apmb	|bool	|do_open	|NN GV* gv|NN const char* name|I32 len|int as_raw \
d219 1
a219 1
Ap	|bool	|do_open9	|NN GV *gv|NN const char *name|I32 len|int as_raw \
d222 1
a222 1
Ap	|bool	|do_openn	|NN GV *gv|NN const char *name|I32 len|int as_raw \
d225 1
d237 1
a237 1
p	|OP*	|dofile		|NN OP* term|I32 force_builtin
d244 1
a244 1
Ap	|void	|dump_form	|NN const GV* gv
d246 1
a246 1
Ap	|void	|op_dump	|NN const OP* arg
d248 2
a249 2
Ap	|void	|dump_packsubs	|NN const HV* stash
Ap	|void	|dump_sub	|NN const GV* gv
d253 5
a257 2
p	|char*	|find_script	|NN const char *scriptname|bool dosearch \
				|NULLOK const char *const *const search_ext|I32 flags
a266 1
pox	|void	|get_db_sub	|NULLOK SV **svp|NN CV *cv
d273 4
a276 4
Ap	|void	|gv_check	|NN const HV* stash
Ap	|void	|gv_efullname	|NN SV* sv|NN const GV* gv
Apmb	|void	|gv_efullname3	|NN SV* sv|NN const GV* gv|NULLOK const char* prefix
Ap	|void	|gv_efullname4	|NN SV* sv|NN const GV* gv|NULLOK const char* prefix|bool keepmain
a277 2
Ap	|GV*	|gv_fetchfile_flags|NN const char *const name|const STRLEN len\
				|const U32 flags
d280 1
a280 1
Apdmb	|GV*	|gv_fetchmethod	|NULLOK HV* stash|NN const char* name
d283 3
a285 4
Ap	|void	|gv_fullname	|NN SV* sv|NN const GV* gv
Apmb	|void	|gv_fullname3	|NN SV* sv|NN const GV* gv|NULLOK const char* prefix
Ap	|void	|gv_fullname4	|NN SV* sv|NN const GV* gv|NULLOK const char* prefix|bool keepmain
pMox	|GP *	|newGP		|NN GV *const gv
d287 3
a289 4
Ap	|void	|gv_name_set	|NN GV* gv|NN const char *name|U32 len|U32 flags
Apd	|HV*	|gv_stashpv	|NN const char* name|I32 flags
Apd	|HV*	|gv_stashpvn	|NN const char* name|U32 namelen|I32 flags
Apd	|HV*	|gv_stashsv	|NULLOK SV* sv|I32 flags
a290 1
poM	|HV *	|hv_copy_hints_hv|NN HV *const ohv
d292 6
a297 14
Abmd	|SV*	|hv_delete	|NULLOK HV* tb|NN const char* key|I32 klen \
				|I32 flags
Abmd	|SV*	|hv_delete_ent	|NULLOK HV* tb|NN SV* key|I32 flags|U32 hash
AbmdR	|bool	|hv_exists	|NULLOK HV* tb|NN const char* key|I32 klen
AbmdR	|bool	|hv_exists_ent	|NULLOK HV* tb|NN SV* key|U32 hash
Abmd	|SV**	|hv_fetch	|NULLOK HV* tb|NN const char* key|I32 klen \
				|I32 lval
Abmd	|HE*	|hv_fetch_ent	|NULLOK HV* tb|NN SV* key|I32 lval|U32 hash
Ap	|void*	|hv_common	|NULLOK HV* tb|NULLOK SV* keysv \
				|NULLOK const char* key|STRLEN klen|int flags \
				|int action|NULLOK SV* val|U32 hash
Ap	|void*	|hv_common_key_len|NULLOK HV *hv|NN const char *key \
				|I32 klen_i32|const int action|NULLOK SV *val \
				|const U32 hash
d302 1
a302 1
ApdRbm	|HE*	|hv_iternext	|NN HV* tb
d307 6
a312 14
Apdbm	|void	|hv_magic	|NN HV* hv|NULLOK GV* gv|int how
XEdpoM	|HV *	|refcounted_he_chain_2hv|NULLOK const struct refcounted_he *c
XEpoM	|SV *	|refcounted_he_fetch|NULLOK const struct refcounted_he *chain \
				|NULLOK SV *keysv|NULLOK const char *key \
				|STRLEN klen, int flags, U32 hash
dpoM	|void	|refcounted_he_free|NULLOK struct refcounted_he *he
XEdpoM	|struct refcounted_he *|refcounted_he_new \
				|NULLOK struct refcounted_he *const parent \
				|NULLOK SV *const key|NULLOK SV *const value
Abmd	|SV**	|hv_store	|NULLOK HV* tb|NULLOK const char* key \
				|I32 klen|NULLOK SV* val|U32 hash
Abmd	|HE*	|hv_store_ent	|NULLOK HV* tb|NULLOK SV* key|NULLOK SV* val|U32 hash
AbmdM	|SV**	|hv_store_flags	|NULLOK HV* tb|NULLOK const char* key \
				|I32 klen|NULLOK SV* val|U32 hash|int flags
d318 1
a318 1
pR	|bool	|ingroup	|Gid_t testgid|bool effective
d325 1
a325 1
p	|bool	|io_close	|NN IO* io|bool not_implicit
d327 1
a327 1
dpR	|bool	|is_gv_magical	|NN const char *name|STRLEN len|U32 flags
d364 19
a382 20
Apd	|STRLEN	|is_utf8_char	|NN const U8 *p
Apd	|bool	|is_utf8_string	|NN const U8 *s|STRLEN len
Apdmb	|bool	|is_utf8_string_loc|NN const U8 *s|STRLEN len|NULLOK const U8 **p
Apd	|bool	|is_utf8_string_loclen|NN const U8 *s|STRLEN len|NULLOK const U8 **ep|NULLOK STRLEN *el
ApR	|bool	|is_utf8_alnum	|NN const U8 *p
ApR	|bool	|is_utf8_alnumc	|NN const U8 *p
ApR	|bool	|is_utf8_idfirst|NN const U8 *p
ApR	|bool	|is_utf8_idcont	|NN const U8 *p
ApR	|bool	|is_utf8_alpha	|NN const U8 *p
ApR	|bool	|is_utf8_ascii	|NN const U8 *p
ApR	|bool	|is_utf8_space	|NN const U8 *p
ApR	|bool	|is_utf8_cntrl	|NN const U8 *p
ApR	|bool	|is_utf8_digit	|NN const U8 *p
ApR	|bool	|is_utf8_graph	|NN const U8 *p
ApR	|bool	|is_utf8_upper	|NN const U8 *p
ApR	|bool	|is_utf8_lower	|NN const U8 *p
ApR	|bool	|is_utf8_print	|NN const U8 *p
ApR	|bool	|is_utf8_punct	|NN const U8 *p
ApR	|bool	|is_utf8_xdigit	|NN const U8 *p
ApR	|bool	|is_utf8_mark	|NN const U8 *p
d384 1
a384 1
pP	|I32	|keyword	|NN const char* d|I32 len|bool all_keywords
d386 2
a387 2
EXp	|void	|lex_end
p	|void	|lex_start	|NULLOK SV* line|NULLOK PerlIO *rsfp|bool new_filter
d389 1
a389 3
EXp	|void	|op_clear	|NN OP* o
Ap	|void	|op_refcnt_lock
Ap	|void	|op_refcnt_unlock
d397 2
a398 2
Apd	|UV	|grok_bin	|NN const char* start|NN STRLEN* len_p|NN I32* flags|NULLOK NV *result
Apd	|UV	|grok_hex	|NN const char* start|NN STRLEN* len_p|NN I32* flags|NULLOK NV *result
d401 1
a401 1
Apd	|UV	|grok_oct	|NN const char* start|NN STRLEN* len_p|NN I32* flags|NULLOK NV *result
a403 1
dp	|int	|magic_clearhint|NN SV* sv|NN MAGIC* mg
d406 1
a406 1
p	|int	|magic_existspack|NN SV* sv|NN const MAGIC* mg
d410 1
a410 1
p	|int	|magic_getarylen|NN SV* sv|NN const MAGIC* mg
d412 1
d422 3
a431 1
p	|int	|magic_freearylen_p|NN SV* sv|NN MAGIC* mg
d434 3
a439 1
dp	|int	|magic_sethint	|NN SV* sv|NN MAGIC* mg
d456 1
a456 1
p	|void	|magicname	|NN const char* sym|NULLOK const char* name|I32 namlen
a458 1
p	|int	|magic_setcollxfrm|NN SV* sv|NN MAGIC* mg
d463 2
a464 3
EXp	|void	|qerror		|NN SV* err
Apd	|void	|sortsv		|NN SV** array|size_t num_elts|NN SVCOMPARE_t cmp
Apd	|void	|sortsv_flags	|NN SV** array|size_t num_elts|NN SVCOMPARE_t cmp|U32 flags
d467 1
a467 2
pd	|void	|mg_localize	|NN SV* sv|NN SV* nsv
ApdR	|MAGIC*	|mg_find	|NULLOK const SV* sv|int type
d475 1
a475 1
EXp	|OP*	|mod		|NULLOK OP* o|I32 type
d477 1
a477 1
Ap	|const char*	|moreswitches	|NN const char* s
d500 1
a500 1
Ap	|PerlIO*|my_popen	|NN const char* cmd|NN const char* mode
d502 1
a502 1
Ap	|void	|my_setenv	|NULLOK const char* nam|NULLOK const char* val
d504 1
a504 1
Ap	|char *	|my_strftime	|NN const char *fmt|int sec|int min|int hour|int mday|int mon|int year|int wday|int yday|int isdst
d516 1
a516 4
Apd	|CV*	|newCONSTSUB	|NULLOK HV* stash|NULLOK const char* name|NULLOK SV* sv
#ifdef PERL_MAD
Ap	|OP*	|newFORM	|I32 floor|NULLOK OP* o|NULLOK OP* block
#else
a517 1
#endif
a519 1
Apa	|OP*	|newGIVENOP	|NN OP* cond|NN OP* block|PADOFFSET defsv_off
d530 1
a530 4
ApM	|CV *	|newXS_flags	|NULLOK const char *name|NN XSUBADDR_t subaddr\
				|NN const char *const filename \
				|NULLOK const char *const proto|U32 flags
Apd	|CV*	|newXS		|NULLOK const char* name|NN XSUBADDR_t f|NN const char* filename
d536 1
a536 1
Apa	|GV*	|newGVgen	|NN const char* pack
d543 1
a543 3
#ifdef USE_ITHREADS
Apa	|OP*	|newPADOP	|I32 type|I32 flags|NN SV* sv
#endif
d546 2
a547 2
Apa	|SV*	|newRV		|NN SV* sv
Apda	|SV*	|newRV_noinc	|NN SV* sv
a555 1
Apda	|SV*	|newSVhek	|NULLOK const HEK *hek
a560 1
Apda	|SV*	|newSV_type	|svtype type
a561 1
Apa	|OP*	|newWHENOP	|NULLOK OP* cond|NN OP* block
d563 1
a563 2
				|I32 whileline|NULLOK OP* expr|NULLOK OP* block|NULLOK OP* cont \
				|I32 has_my
d565 1
a565 9
Ap	|char*	|scan_vstring	|NN const char *vstr|NN const char *end|NN SV *sv
Apd	|const char*	|scan_version	|NN const char *vstr|NN SV *sv|bool qv
Apd	|SV*	|new_version	|NN SV *ver
Apd	|SV*	|upg_version	|NN SV *ver|bool qv
Apd	|bool	|vverify	|NN SV *vs
Apd	|SV*	|vnumify	|NN SV *vs
Apd	|SV*	|vnormal	|NN SV *vs
Apd	|SV*	|vstringify	|NN SV *vs
Apd	|int	|vcmp		|NN SV *lvs|NN SV *rvs
a570 3
#ifdef PERL_MAD
p	|OP*	|package	|NN OP* o
#else
a571 1
#endif
d573 2
a574 3
p	|PADOFFSET|allocmy	|NN const char *const name
pdR	|PADOFFSET|pad_findmy	|NN const char* name
Ap	|PADOFFSET|find_rundefsvoffset	|
d584 3
a598 1
Ap	|OP *	|doref		|NN OP *o|I32 type|bool set_op_ref
d604 1
a604 2
Apd	|CV*	|get_cv		|NN const char* name|I32 flags
Apd	|CV*	|get_cvn_flags	|NN const char* name|STRLEN len|I32 flags
d607 3
a609 3
Ap	|void	|new_collate	|NULLOK const char* newcoll
Ap	|void	|new_ctype	|NN const char* newctype
Ap	|void	|new_numeric	|NULLOK const char* newcoll
d614 1
a614 1
Apd	|void	|pack_cat	|NN SV *cat|NN const char *pat|NN const char *patend \
d616 1
a616 2
Apd	|void	|packlist 	|NN SV *cat|NN const char *pat|NN const char *patend|NN SV **beglist|NN SV **endlist
#ifdef PERL_USES_PL_PIDSTATUS
a617 1
#endif
d619 1
a619 1
p	|OP*	|pmruntime	|NN OP* pm|NN OP* expr|bool isreg
d621 1
d624 1
d626 1
a626 1
Amb	|OP*	|ref		|NULLOK OP* o|I32 type
d628 3
a630 4
Ap	|void	|regdump	|NN const regexp* r
Ap	|void	|regdump	|NN const regexp* r
Ap	|SV*	|regclass_swash	|NULLOK const regexp *prog|NN const struct regnode *n|bool doinit|NULLOK SV **listsvp|NULLOK SV **altsvp
Ap	|I32	|pregexec	|NN REGEXP * const prog|NN char* stringarg \
d634 6
a639 13
EXp	|struct regexp*	|reg_temp_copy	|NN struct regexp* r
Ap	|void	|regfree_internal|NULLOK REGEXP * const r
Ap	|char *	|reg_stringify  |NN MAGIC *mg|NULLOK STRLEN *lp|NULLOK U32 *flags|NULLOK I32 *haseval
#if defined(USE_ITHREADS)
Ap	|void*	|regdupe_internal|NN REGEXP * const r|NN CLONE_PARAMS* param
#endif
Ap	|REGEXP*|pregcomp	|NN const SV * const pattern|const U32 flags
Ap	|REGEXP*|re_compile	|NN const SV * const pattern|const U32 flags
Ap	|char*	|re_intuit_start|NN REGEXP * const rx|NULLOK SV* sv|NN char* strpos \
				|NN char* strend|const U32 flags \
				|NULLOK re_scream_pos_data *data
Ap	|SV*	|re_intuit_string|NN REGEXP * const rx
Ap	|I32	|regexec_flags	|NN REGEXP * const rx|NN char* stringarg \
d643 1
a643 19

EXp |SV*|reg_named_buff          |NN REGEXP * const rx|NULLOK SV * const key \
                                 |NULLOK SV * const value|const U32 flags
EXp |SV*|reg_named_buff_iter     |NN REGEXP * const rx|NULLOK const SV * const lastkey \
                                 |const U32 flags
Ap |SV*|reg_named_buff_fetch    |NN REGEXP * const rx|NN SV * const namesv|const U32 flags
Ap |bool|reg_named_buff_exists  |NN REGEXP * const rx|NN SV * const key|const U32 flags
Ap |SV*|reg_named_buff_firstkey |NN REGEXP * const rx|const U32 flags
Ap |SV*|reg_named_buff_nextkey  |NN REGEXP * const rx|const U32 flags
Ap |SV*|reg_named_buff_scalar   |NN REGEXP * const rx|const U32 flags
Ap |SV*|reg_named_buff_all      |NN REGEXP * const rx|const U32 flags

EXp	|void|reg_numbered_buff_fetch|NN REGEXP * const rx|const I32 paren|NULLOK SV * const sv
EXp	|void|reg_numbered_buff_store|NN REGEXP * const rx|const I32 paren|NULLOK SV const * const value
EXp	|I32|reg_numbered_buff_length|NN REGEXP * const rx|NN const SV * const sv|const I32 paren

EXp	|SV*|reg_qr_package|NN REGEXP * const rx

Ep	|void	|regprop	|NULLOK const regexp *prog|NN SV* sv|NN const regnode* o
d655 1
a655 1
p	|I32	|same_dirent	|NN const char* a|NN const char* b
a659 2
Apda	|char*	|savesharedpvn	|NN const char *const pv|const STRLEN len
Apda	|char*	|savesvpv	|NN SV* sv
d680 1
d700 5
d710 4
a713 4
Apd	|NV	|scan_bin	|NN const char* start|STRLEN len|NN STRLEN* retlen
Apd	|NV	|scan_hex	|NN const char* start|STRLEN len|NN STRLEN* retlen
Ap	|char*	|scan_num	|NN const char* s|NN YYSTYPE *lvalp
Apd	|NV	|scan_oct	|NN const char* start|STRLEN len|NN STRLEN* retlen
d718 1
a718 1
p	|I32	|setenv_getix	|NN const char* nam
d720 1
a720 1
EXp	|void	|setdefout	|NULLOK GV* gv
a721 4
#if defined(HAS_SIGACTION) && defined(SA_SIGINFO)
np	|Signal_t |sighandler	|int sig|NULLOK siginfo_t *info|NULLOK void *uap
Anp	|Signal_t |csighandler	|int sig|NULLOK siginfo_t *info|NULLOK void *uap
#else
d724 1
a724 2
#endif
Ap	|SV**	|stack_grow	|NN SV** sp|NN SV** p|int n
d730 1
a730 6
#ifdef PERL_IN_SV_C
s	|bool	|glob_2number	|NN GV* const gv
s	|char*	|glob_2pv	|NN GV* const gv|NULLOK STRLEN * const len
#endif
Amb	|IV	|sv_2iv		|NN SV* sv
Apd	|IV	|sv_2iv_flags	|NN SV* sv|I32 flags
a732 1
pMd	|SV*	|sv_2num	|NN SV* sv
a733 1
Apd	|char*	|sv_2pv_flags	|NN SV* sv|NULLOK STRLEN* lp|I32 flags
d737 1
a737 2
Amb	|UV	|sv_2uv		|NN SV* sv
Apd	|UV	|sv_2uv_flags	|NN SV* sv|I32 flags
d753 1
a753 1
Apd	|void	|sv_chop	|NN SV* sv|NULLOK const char* ptr
d762 1
a762 1
Ap	|OP*	|sv_compile_2op	|NN SV* sv|NN OP** startp|NN const char* code|NN PAD** padp
a766 1
ApdR	|bool	|sv_does	|NN SV* sv|NN const char* name
a768 1
poMX	|void	|sv_free2	|NN SV* sv
d774 1
a774 1
				|NN const char* little|STRLEN littlelen
d781 1
a781 1
Apd	|MAGIC *|sv_magicext	|NN SV* sv|NULLOK SV* obj|int how|NULLOK const MGVTBL *vtbl \
d795 1
a795 1
ApdR	|const char*	|sv_reftype	|NN const SV* sv|int ob
d798 1
a798 1
Apd	|void	|sv_reset	|NN const char* s|NULLOK HV* stash
d809 1
a809 1
Apd	|SV*	|sv_setref_pvn	|NN SV* rv|NULLOK const char* classname|NN const char* pv|STRLEN n
d813 1
a813 1
Amdb	|void	|sv_taint	|NN SV* sv
d816 1
a816 1
Apdmb	|void	|sv_unref	|NN SV* sv
d819 2
a820 4
Apd	|void	|sv_upgrade	|NN SV* sv|svtype new_type
Apdmb	|void	|sv_usepvn	|NN SV* sv|NULLOK char* ptr|STRLEN len
Apd	|void	|sv_usepvn_flags|NN SV* sv|NULLOK char* ptr|STRLEN len\
				|U32 flags
d828 2
a829 2
Ap	|SV*	|swash_init	|NN const char* pkg|NN const char* name|NN SV* listsv|I32 minbits|I32 none
Ap	|UV	|swash_fetch	|NN SV *swash|NN const U8 *ptr|bool do_utf8
d832 6
a837 6
Apd	|UV	|to_utf8_case	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp \
				|NN SV **swashp|NN const char *normal|NN const char *special
Apd	|UV	|to_utf8_lower	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
Apd	|UV	|to_utf8_upper	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
Apd	|UV	|to_utf8_title	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
Apd	|UV	|to_utf8_fold	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
d839 1
a839 1
Ap	|I32	|unlnk		|NN const char* f
d841 5
a845 2
Apd	|I32	|unpack_str	|NN const char *pat|NN const char *patend|NN const char *s \
				|NULLOK const char *strbeg|NN const char *strend|NULLOK char **new_s \
d847 2
a848 2
Apd	|I32	|unpackstring	|NN const char *pat|NN const char *patend|NN const char *s \
				|NN const char *strend|U32 flags
a850 4
#ifdef PERL_MAD
p	|OP *	|utilize	|int aver|I32 floor|NULLOK OP* version \
				|NN OP* idop|NULLOK OP* arg
#else
a851 1
#endif
d854 3
a856 3
AdpPR	|STRLEN	|utf8_length	|NN const U8* s|NN const U8 *e
ApdPR	|IV	|utf8_distance	|NN const U8 *a|NN const U8 *b
ApdPR	|U8*	|utf8_hop	|NN const U8 *s|I32 off
d858 6
a863 14
ApMd	|U8*	|bytes_from_utf8|NN const U8 *s|NN STRLEN *len|NULLOK bool *is_utf8
ApMd	|U8*	|bytes_to_utf8	|NN const U8 *s|NN STRLEN *len
Apd	|UV	|utf8_to_uvchr	|NN const U8 *s|NULLOK STRLEN *retlen
Apd	|UV	|utf8_to_uvuni	|NN const U8 *s|NULLOK STRLEN *retlen

#ifdef EBCDIC
Adp	|UV	|utf8n_to_uvchr	|NN const U8 *s|STRLEN curlen|NULLOK STRLEN *retlen|U32 flags
#else
Adpbm	|UV	|utf8n_to_uvchr	|NN const U8 *s|STRLEN curlen|NULLOK STRLEN *retlen|U32 flags
#endif

Adp	|UV	|utf8n_to_uvuni	|NN const U8 *s|STRLEN curlen|NULLOK STRLEN *retlen|U32 flags

#ifdef EBCDIC
d865 1
a865 5
#else
Apdbm	|U8*	|uvchr_to_utf8	|NN U8 *d|UV uv
#endif

Apbm	|U8*	|uvuni_to_utf8	|NN U8 *d|UV uv
d868 2
a869 1
Apd	|char*	|pv_uni_display	|NN SV *dsv|NN const U8 *spv|STRLEN len|STRLEN pvlim|UV flags
d871 1
a871 1
EXp	|void	|vivify_defelem	|NN SV* sv
d874 1
a874 1
p	|U32	|parse_unicode_opts|NN const char **popt
d877 2
a878 2
p	|void	|report_evil_fh	|NULLOK const GV *gv|NULLOK const IO *io|I32 op
XEpd	|void	|report_uninit	|NULLOK SV* uninit_sv
d884 1
a884 1
Ap	|I32	|whichsig	|NN const char* sig
d886 5
a890 2
p	|int	|yyerror	|NN const char* s
EXp	|int	|yylex
d892 1
a892 2
p	|void	|parser_free	|NN const yy_parser *
p	|int	|yywarn		|NN const char* s
d895 1
a895 1
Ap	|int	|get_mstats	|NN perl_mstats_t *buf|int buflen|int level
a902 2
Ap	|struct perl_vars*|init_global_struct
Ap	|void	|free_global_struct|NN struct perl_vars *plvarsp
d906 3
d912 2
a913 2
Apdbm	|void	|sv_catpvn_mg	|NN SV *sv|NN const char *ptr|STRLEN len
Apdbm	|void	|sv_catsv_mg	|NN SV *dstr|NULLOK SV *sstr
d923 1
a923 1
Apdbm	|void	|sv_usepvn_mg	|NN SV *sv|NULLOK char *ptr|STRLEN len
d925 1
a925 1
Apd	|char*	|pv_display	|NN SV *dsv|NN const char *pv|STRLEN cur|STRLEN len \
a926 9
Apd	|char*	|pv_escape	|NN SV *dsv|NN char const * const str\
                                |const STRLEN count|const STRLEN max\
                                |NULLOK STRLEN * const escaped\
                                |const U32 flags				
Apd     |char*  |pv_pretty      |NN SV *dsv|NN char const * const str\
                                |const STRLEN count|const STRLEN max\
                                |NULLOK char const * const start_color\
                                |NULLOK char const * const end_color\
                                |const U32 flags				
d930 4
a933 7
Ap	|void	|do_gv_dump	|I32 level|NN PerlIO *file|NN const char *name\
				|NULLOK GV *sv
Ap	|void	|do_gvgv_dump	|I32 level|NN PerlIO *file|NN const char *name\
				|NULLOK GV *sv
Ap	|void	|do_hv_dump	|I32 level|NN PerlIO *file|NN const char *name\
				|NULLOK HV *sv
Ap	|void	|do_magic_dump	|I32 level|NN PerlIO *file|NN const MAGIC *mg|I32 nest \
d935 2
a936 2
Ap	|void	|do_op_dump	|I32 level|NN PerlIO *file|NULLOK const OP *o
Ap	|void	|do_pmop_dump	|I32 level|NN PerlIO *file|NULLOK const PMOP *pm
d939 7
a945 1
Ap	|void	|magic_dump	|NULLOK const MAGIC *mg
d947 3
a949 3
ApdRmb	|char*	|sv_2pv_nolen	|NN SV* sv
ApdRmb	|char*	|sv_2pvutf8_nolen|NN SV* sv
ApdRmb	|char*	|sv_2pvbyte_nolen|NN SV* sv
d957 1
a957 1
Apdmb	|void	|sv_force_normal|NN SV *sv
a963 4
#ifdef PERL_MAD
Apr	|OP *	|newMYSUB	|I32 floor|NULLOK OP *o|NULLOK OP *proto \
				|NULLOK OP *attrs|NULLOK OP *block
#else
a964 1
#endif
d968 2
a969 2
ApR	|PERL_CONTEXT*|cx_dup	|NULLOK PERL_CONTEXT* cx|I32 ix|I32 max|NN CLONE_PARAMS* param
ApR	|PERL_SI*|si_dup	|NULLOK PERL_SI* si|NN CLONE_PARAMS* param
d971 12
a982 11
ApR	|void*	|any_dup	|NULLOK void* v|NN const PerlInterpreter* proto_perl
ApR	|HE*	|he_dup		|NULLOK const HE* e|bool shared|NN CLONE_PARAMS* param
ApR	|HEK*	|hek_dup	|NULLOK HEK* e|NN CLONE_PARAMS* param
ApR	|REGEXP*|re_dup		|NULLOK const REGEXP* r|NN CLONE_PARAMS* param
Ap	|PerlIO*|fp_dup		|NULLOK PerlIO* fp|char type|NN CLONE_PARAMS* param
ApR	|DIR*	|dirp_dup	|NULLOK DIR* dp
ApR	|GP*	|gp_dup		|NULLOK GP* gp|NN CLONE_PARAMS* param
ApR	|MAGIC*	|mg_dup		|NULLOK MAGIC* mg|NN CLONE_PARAMS* param
ApR	|SV*	|sv_dup		|NULLOK const SV* sstr|NN CLONE_PARAMS* param
Ap	|void	|rvpv_dup	|NN SV* dstr|NN const SV *sstr|NN CLONE_PARAMS* param
Ap	|yy_parser*|parser_dup	|NN const yy_parser *proto|NN CLONE_PARAMS* param
d985 2
a986 2
ApR	|void*	|ptr_table_fetch|NN PTR_TBL_t *tbl|NN const void *sv
Ap	|void	|ptr_table_store|NN PTR_TBL_t *tbl|NULLOK const void *oldsv|NN void *newsv
a989 4
#if defined(USE_ITHREADS)
#  if defined(HAVE_INTERP_INTERN)
Ap	|void	|sys_intern_dup	|NN struct interp_intern* src|NN struct interp_intern* dst
#  endif
d996 2
a997 2
ApR	|const char *	|custom_op_name	|NN const OP* op
ApR	|const char *	|custom_op_desc	|NN const OP* op
d999 3
a1001 8
Adp	|void	|sv_nosharing	|NULLOK SV *sv
Adpbm	|void	|sv_nolocking	|NULLOK SV *sv
Adp	|bool	|sv_destroyable	|NULLOK SV *sv
#ifdef NO_MATHOMS
Adpbm	|void	|sv_nounlocking	|NULLOK SV *sv
#else
Adpb	|void	|sv_nounlocking	|NULLOK SV *sv
#endif
d1006 5
d1012 6
a1017 6
sR	|I32	|do_trans_simple	|NN SV * const sv
sR	|I32	|do_trans_count		|NN SV * const sv
sR	|I32	|do_trans_complex	|NN SV * const sv
sR	|I32	|do_trans_simple_utf8	|NN SV * const sv
sR	|I32	|do_trans_count_utf8	|NN SV * const sv
sR	|I32	|do_trans_complex_utf8	|NN SV * const sv
d1022 1
a1022 3
s	|HV*	|gv_get_super_pkg|NN const char* name|I32 namelen
s	|HV*	|require_tie_mod|NN GV *gv|NN const char *varpv|NN SV* namesv \
				|NN const char *methpv|const U32 flags
a1024 4
: #if defined(PERL_IN_HV_C) || defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
paRxo	|void*	|get_arena	|size_t svtype|U32 misc
: #endif

d1029 5
a1033 4
sanR	|HEK*	|save_hek_flags	|NN const char *str|I32 len|U32 hash|int flags
sn	|void	|hv_magic_check	|NN HV *hv|NN bool *needs_copy|NN bool *needs_store
s	|void	|unshare_hek_or_pvn|NULLOK const HEK* hek|NULLOK const char* str|I32 len|U32 hash
sR	|HEK*	|share_hek_flags|NN const char* sv|I32 len|U32 hash|int flags
a1034 5
sn	|struct xpvhv_aux*|hv_auxinit|NN HV *hv
sM	|SV*	|hv_delete_common|NULLOK HV* tb|NULLOK SV* keysv|NULLOK const char* key \
		|STRLEN klen|int k_flags|I32 d_flags|U32 hash
sM	|void	|clear_placeholders	|NN HV* hb|U32 items
sM	|SV *	|refcounted_he_value	|NN const struct refcounted_he *he
d1048 1
a1048 43
pR	|OP*	|ck_anoncode	|NN OP *o
pR	|OP*	|ck_bitop	|NN OP *o
pR	|OP*	|ck_concat	|NN OP *o
pR	|OP*	|ck_defined	|NN OP *o
pR	|OP*	|ck_delete	|NN OP *o
pR	|OP*	|ck_die		|NN OP *o
pR	|OP*	|ck_eof		|NN OP *o
pR	|OP*	|ck_eval	|NN OP *o
pR	|OP*	|ck_exec	|NN OP *o
pR	|OP*	|ck_exists	|NN OP *o
pR	|OP*	|ck_exit	|NN OP *o
pR	|OP*	|ck_ftst	|NN OP *o
pR	|OP*	|ck_fun		|NN OP *o
pR	|OP*	|ck_glob	|NN OP *o
pR	|OP*	|ck_grep	|NN OP *o
pR	|OP*	|ck_index	|NN OP *o
pR	|OP*	|ck_join	|NN OP *o
pR	|OP*	|ck_lengthconst	|NN OP *o
pR	|OP*	|ck_lfun	|NN OP *o
pR	|OP*	|ck_listiob	|NN OP *o
pR	|OP*	|ck_match	|NN OP *o
pR	|OP*	|ck_method	|NN OP *o
pR	|OP*	|ck_null	|NN OP *o
pR	|OP*	|ck_open	|NN OP *o
pR	|OP*	|ck_readline	|NN OP *o
pR	|OP*	|ck_repeat	|NN OP *o
pR	|OP*	|ck_require	|NN OP *o
pR	|OP*	|ck_retarget	|NN OP *o
pR	|OP*	|ck_return	|NN OP *o
pR	|OP*	|ck_rfun	|NN OP *o
pR	|OP*	|ck_rvconst	|NN OP *o
pR	|OP*	|ck_sassign	|NN OP *o
pR	|OP*	|ck_select	|NN OP *o
pR	|OP*	|ck_shift	|NN OP *o
pR	|OP*	|ck_sort	|NN OP *o
pR	|OP*	|ck_spair	|NN OP *o
pR	|OP*	|ck_split	|NN OP *o
pR	|OP*	|ck_subr	|NN OP *o
pR	|OP*	|ck_substr	|NN OP *o
pR	|OP*	|ck_svconst	|NN OP *o
pR	|OP*	|ck_trunc	|NN OP *o
pR	|OP*	|ck_unpack	|NN OP *o
sRn	|bool	|is_handle_constructor|NN const OP *o|I32 numargs
a1049 6
#  ifdef USE_ITHREADS
so	|void	|forget_pmop	|NN PMOP *const o|U32 flags
#  else
so	|void	|forget_pmop	|NN PMOP *const o
#  endif
s	|void	|find_and_forget_pmops	|NN OP *o
d1057 1
a1057 1
sRn	|bool	|scalar_mod_type|NN const OP *o|I32 type
a1066 7
s	|bool	|looks_like_bool|NN const OP* o
s	|OP*	|newGIVWHENOP	|NULLOK OP* cond|NN OP *block \
				|I32 enter_opcode|I32 leave_opcode \
				|PADOFFSET entertarg
s	|OP*	|ref_array_or_hash|NULLOK OP* cond
s	|void	|process_special_blocks	|NN const char *const fullname\
					|NN GV *const gv|NN CV *const cv
d1069 1
a1069 1
Apa	|void*	|Slab_Alloc	|size_t sz
a1070 8
#  if defined(PERL_DEBUG_READONLY_OPS)
poxM	|void	|pending_Slabs_to_ro
poxM	|OP *	|op_refcnt_inc	|NULLOK OP *o
poxM	|PADOFFSET	|op_refcnt_dec	|NN OP *o
#    if defined(PERL_IN_OP_C)
s	|void	|Slab_to_rw	|NN void *op
#    endif
#  endif
d1074 3
a1076 3
s	|void	|find_beginning	|NN SV* linestr_sv|NN PerlIO *rsfp
s	|void	|forbid_setid	|const char flag|const int suidscript
s	|void	|incpush	|NULLOK const char *dir|bool addsubdirs|bool addoldvers|bool usesep|bool canrelocate
d1079 1
d1086 1
a1086 2
s	|int	|open_script	|NN const char *scriptname|bool dosearch \
				|NN SV *sv|NN int *suidscript|NN PerlIO **rsfpp
d1088 1
a1088 5
s	|void	|validate_suid	|NN const char *validarg \
				|NN const char *scriptname|int fdscript \
				|int suidscript|NN SV* linestr_sv \
				|NN PerlIO *rsfp

d1094 11
a1104 1
s	|SV *	|incpush_if_exists|NN SV *dir
a1109 4
#if defined(PERL_IN_PP_C) || defined(PERL_IN_PP_HOT_C) || defined(PERL_DECL_PROT)
pRxo	|GV*	|softref2xv	|NN SV *const sv|NN const char *const what \
				|const U32 type|NN SV ***spp
#endif
d1112 3
a1114 3
s	|I32	|unpack_rec	|NN struct tempsym* symptr|NN const char *s \
				|NN const char *strbeg|NN const char *strend|NULLOK const char **new_s
s	|SV **	|pack_rec	|NN SV *cat|NN struct tempsym* symptr|NN SV **beglist|NN SV **endlist
d1116 5
a1120 2
s	|I32	|measure_struct	|NN struct tempsym* symptr
s	|bool	|next_symbol	|NN struct tempsym* symptr
a1122 6
s	|const char *|group_end	|NN const char *pat|NN const char *patend|char ender
sR	|const char *|get_num	|NN const char *ppat|NN I32 *lenptr
ns	|bool	|need_utf8	|NN const char *pat|NN const char *patend
ns	|char	|first_symbol	|NN const char *pat|NN const char *patend
sR	|char *	|sv_exp_grow	|NN SV *sv|STRLEN needed
snR	|char *	|bytes_to_uni	|NN const U8 *start|STRLEN len|NN char *dest
d1127 4
a1134 1
sR	|I32	|dopoptogiven	|I32 startingblock
d1137 1
a1138 1
sR	|I32	|dopoptowhen	|I32 startingblock
d1140 4
a1143 11
s	|bool	|doeval		|int gimme|NULLOK OP** startop|NULLOK CV* outside|U32 seq
sR	|PerlIO *|check_type_and_open|NN const char *name
#ifndef PERL_DISABLE_PMC
sR	|PerlIO *|doopen_pm	|NN const char *name|const STRLEN namelen
#endif
sRn	|bool	|path_is_absolute|NN const char *name
sR	|I32	|run_user_filter|int idx|NN SV *buf_sv|int maxlen
sR	|PMOP*	|make_matcher	|NN regexp* re
sR	|bool	|matcher_matches_sv|NN PMOP* matcher|NN SV* sv
s	|void	|destroy_matcher|NN PMOP* matcher
s	|OP*	|do_smartmatch	|NULLOK HV* seen_this|NULLOK HV* seen_other
d1147 2
d1150 1
a1153 13
#if defined(PERL_IN_PP_SORT_C) || defined(PERL_DECL_PROT)
s	|I32	|sv_ncmp	|NN SV *a|NN SV *b
s	|I32	|sv_i_ncmp	|NN SV *a|NN SV *b
s	|I32	|amagic_ncmp	|NN SV *a|NN SV *b
s	|I32	|amagic_i_ncmp	|NN SV *a|NN SV *b
s	|I32	|amagic_cmp	|NN SV *a|NN SV *b
s	|I32	|amagic_cmp_locale|NN SV *a|NN SV *b
s	|I32	|sortcv		|NN SV *a|NN SV *b
s	|I32	|sortcv_xsub	|NN SV *a|NN SV *b
s	|I32	|sortcv_stacked	|NN SV *a|NN SV *b
s	|void	|qsortsvu	|NN SV** array|size_t num_elts|NN SVCOMPARE_t compare
#endif

d1156 1
a1159 1
s	|SV *	|space_join_names_mortal|NN char *const *array
d1163 1
a1163 1
Es	|regnode*|reg		|NN struct RExC_state_t *state|I32 paren|NN I32 *flagp|U32 depth
d1165 5
a1169 5
Es	|regnode*|regatom	|NN struct RExC_state_t *state|NN I32 *flagp|U32 depth
Es	|regnode*|regbranch	|NN struct RExC_state_t *state|NN I32 *flagp|I32 first|U32 depth
Es	|STRLEN	|reguni		|NN const struct RExC_state_t *state|UV uv|NN char *s
Es	|regnode*|regclass	|NN struct RExC_state_t *state|U32 depth
ERsn	|I32	|regcurly	|NN const char *
d1171 17
a1187 16
Es	|UV	|reg_recode	|const char value|NN SV **encp
Es	|regnode*|regpiece	|NN struct RExC_state_t *state|NN I32 *flagp|U32 depth
Es	|regnode*|reg_namedseq	|NN struct RExC_state_t *state|NULLOK UV *valuep
Es	|void	|reginsert	|NN struct RExC_state_t *state|U8 op|NN regnode *opnd|U32 depth
Es	|void	|regtail	|NN struct RExC_state_t *state|NN regnode *p|NN const regnode *val|U32 depth
Es	|SV *	|reg_scan_name	|NN struct RExC_state_t *state|U32 flags
Es	|U32	|join_exact	|NN struct RExC_state_t *state|NN regnode *scan|NN I32 *min|U32 flags|NULLOK regnode *val|U32 depth
EsRn	|char *	|regwhite	|NN struct RExC_state_t *state|NN char *p
Es	|char *	|nextchar	|NN struct RExC_state_t *state
Es	|bool	|reg_skipcomment|NN struct RExC_state_t *state
Es	|void	|scan_commit	|NN const struct RExC_state_t* state|NN struct scan_data_t *data|NN I32 *minlenp|int is_inf
Esn	|void	|cl_anything	|NN const struct RExC_state_t* state|NN struct regnode_charclass_class *cl
EsRn	|int	|cl_is_anything	|NN const struct regnode_charclass_class *cl
Esn	|void	|cl_init	|NN const struct RExC_state_t* state|NN struct regnode_charclass_class *cl
Esn	|void	|cl_init_zero	|NN const struct RExC_state_t* state|NN struct regnode_charclass_class *cl
Esn	|void	|cl_and		|NN struct regnode_charclass_class *cl \
d1189 1
a1189 1
Esn	|void	|cl_or		|NN const struct RExC_state_t* state|NN struct regnode_charclass_class *cl \
d1191 4
a1194 7
Es	|I32	|study_chunk	|NN struct RExC_state_t* state|NN regnode **scanp \
				|NN I32 *minlenp|NN I32 *deltap \
				|NN regnode *last|NULLOK struct scan_data_t *data \
				|I32 stopparen|NULLOK U8* recursed \
				|NULLOK struct regnode_charclass_class *and_withp \
				|U32 flags|U32 depth
EsRn	|U32	|add_data	|NN struct RExC_state_t* state|U32 n|NN const char *s
d1196 2
a1197 26
Es	|I32	|regpposixcc	|NN struct RExC_state_t* state|I32 value
Es	|void	|checkposixcc	|NN struct RExC_state_t* state
Es	|I32	|make_trie	|NN struct RExC_state_t* state|NN regnode *startbranch \
				|NN regnode *first|NN regnode *last|NN regnode *tail \
				|U32 word_count|U32 flags|U32 depth
Es	|void	|make_trie_failtable	|NN struct RExC_state_t* state \
                                |NN regnode *source|NN regnode *node|U32 depth
#  ifdef DEBUGGING
Es	|void	|regdump_extflags|NULLOK const char *lead| const U32 flags
Es	|const regnode*|dumpuntil|NN const regexp *r|NN const regnode *start \
				|NN const regnode *node \
				|NULLOK const regnode *last \
				|NULLOK const regnode *plast \
				|NN SV* sv|I32 indent|U32 depth
Es	|void	|put_byte	|NN SV* sv|int c
Es	|void	|dump_trie	|NN const struct _reg_trie_data *trie\
				|NULLOK HV* widecharmap|NN AV *revcharmap\
				|U32 depth
Es	|void	|dump_trie_interim_list|NN const struct _reg_trie_data *trie\
				|NULLOK HV* widecharmap|NN AV *revcharmap\
				|U32 next_alloc|U32 depth
Es	|void	|dump_trie_interim_table|NN const struct _reg_trie_data *trie\
				|NULLOK HV* widecharmap|NN AV *revcharmap\
				|U32 next_alloc|U32 depth
Es	|U8	|regtail_study	|NN struct RExC_state_t *state|NN regnode *p|NN const regnode *val|U32 depth
#  endif
d1201 5
a1205 4
ERs	|I32	|regmatch	|NN regmatch_info *reginfo|NN regnode *prog
ERs	|I32	|regrepeat	|NN const regexp *prog|NN const regnode *p|I32 max|int depth
ERs	|I32	|regtry		|NN regmatch_info *reginfo|NN char **startpos
ERs	|bool	|reginclass	|NULLOK const regexp *prog|NN const regnode *n|NN const U8 *p|NULLOK STRLEN *lenp\
d1208 8
a1215 8
Es	|char*	|regcppop	|NN const regexp *rex
ERsn	|U8*	|reghop3	|NN U8 *pos|I32 off|NN const U8 *lim
#ifdef XXX_dmq
ERsn	|U8*	|reghop4	|NN U8 *pos|I32 off|NN const U8 *llim|NN const U8 *rlim
#endif
ERsn	|U8*	|reghopmaybe3	|NN U8 *pos|I32 off|NN const U8 *lim
ERs	|char*	|find_byclass	|NN regexp * prog|NN const regnode *c|NN char *s|NN const char *strend|NULLOK regmatch_info *reginfo
Es	|void	|swap_match_buff|NN regexp * prog
a1217 6
ERs	|I32	|reg_check_named_buff_matched	|NN const regexp *rex|NN const regnode *prog
#  ifdef DEBUGGING
Es	|void	|dump_exec_pos	|NN const char *locinput|NN const regnode *scan|NN const char *loc_regeol\
				|NN const char *loc_bostr|NN const char *loc_reg_starttry|const bool do_utf8
Es	|void	|debug_start_match|NN const regexp *prog|const bool do_utf8|NN const char *start|NN const char *end|NN const char *blurb
#  endif
d1221 1
a1221 1
s	|CV*	|deb_curcv	|const I32 ix
a1222 4
s	|void	|sequence	|NULLOK const OP *o
s	|void	|sequence_tail	|NULLOK const OP *o
s	|UV	|sequence_num	|NULLOK const OP *o
s	|SV*	|pm_description	|NN const PMOP *pm
a1228 8
#if defined(PERL_IN_GV_C) || defined(PERL_IN_SV_C) || defined(PERL_IN_PAD_C) || defined(PERL_DECL_PROT)
po	|void	|sv_add_backref	|NN SV *tsv|NN SV *sv
#endif

#if defined(PERL_IN_HV_C) || defined(PERL_IN_MG_C) || defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
poM	|int	|sv_kill_backrefs	|NN SV *sv|NN AV *av
#endif

d1231 26
d1260 2
a1261 3
s	|void	|sv_del_backref	|NN SV *target|NN SV *ref
sR	|SV *	|varname	|NULLOK GV *gv|const char gvtype|PADOFFSET targ \
				|NULLOK SV *keyname|I32 aindex|int subscript_type
d1270 7
a1276 21
sn	|STRLEN	|sv_pos_u2b_forwards|NN const U8 *const start \
		|NN const U8 *const send|STRLEN uoffset
sn	|STRLEN	|sv_pos_u2b_midway|NN const U8 *const start \
		|NN const U8 *send|STRLEN uoffset|STRLEN uend
s	|STRLEN	|sv_pos_u2b_cached|NN SV *sv|NN MAGIC **mgp \
		|NN const U8 *const start|NN const U8 *const send \
		|STRLEN uoffset|STRLEN uoffset0|STRLEN boffset0
s	|void	|utf8_mg_pos_cache_update|NN SV *sv|NN MAGIC **mgp \
		|STRLEN byte|STRLEN utf8|STRLEN blen
s	|STRLEN	|sv_pos_b2u_midway|NN const U8 *s|NN const U8 *const target \
		|NN const U8 *end|STRLEN endu
sn	|char *	|F0convert	|NV nv|NN char *endbuf|NN STRLEN *len
#  if defined(PERL_OLD_COPY_ON_WRITE)
sM	|void	|sv_release_COW	|NN SV *sv|NN const char *pvx|NN SV *after
#  endif
s	|SV *	|more_sv
s	|void *	|more_bodies	|svtype sv_type
s	|bool	|sv_2iuv_common	|NN SV *sv
s	|void	|glob_assign_glob|NN SV *dstr|NN SV *sstr|const int dtype
s	|void	|glob_assign_ref|NN SV *dstr|NN SV *sstr
sRn	|PTR_TBL_ENT_t *|ptr_table_find|NN PTR_TBL_t *tbl|NN const void *sv
d1286 1
a1286 1
s	|void	|readpipe_override|
a1298 2
s	|void	|update_debugger_info|NULLOK SV *orig_sv \
				|NULLOK const char *buf|STRLEN len
d1301 1
a1301 3
s	|void	|checkcomma	|NN const char *s|NN const char *name \
				|NN const char *what
s	|bool	|feature_is_enabled|NN const char* name|STRLEN namelen
d1303 2
a1304 2
s	|void	|incline	|NN const char *s
s	|int	|intuit_method	|NN char *s|NULLOK GV *gv|NULLOK CV *cv
d1309 1
d1314 6
a1319 6
sR	|HV *	|find_in_my_stash|NN const char *pkgname|STRLEN len
sR	|char *	|tokenize_use	|int is_use|NN char *s
so	|SV*	|new_constant	|NULLOK const char *s|STRLEN len \
				|NN const char *key|STRLEN keylen|NN SV *sv \
				|NULLOK SV *pv|NULLOK const char *type \
				|STRLEN typelen
d1321 2
a1324 5
s	|void	|strip_return	|NN SV *sv
#  endif
#  if defined(DEBUGGING)
s	|int	|tokereport	|I32 rv
s	|void	|printbuf	|NN const char* fmt|NN const char* s
d1329 1
a1329 1
s	|bool|isa_lookup	|NULLOK HV *stash|NN const char * const name|NULLOK const HV * const name_stash
a1332 1
#if defined(USE_LOCALE_NUMERIC) || defined(USE_LOCALE_COLLATE)
a1334 1
#endif
d1337 1
a1337 1
s	|const COP*|closest_cop	|NN const COP *cop|NULLOK const OP *o
d1339 1
a1339 1
s	|const char *|vdie_croak_common|NULLOK const char *pat|NULLOK va_list *args \
d1341 1
a1341 3
s	|bool	|vdie_common	|NULLOK const char *message|STRLEN msglen\
				|I32 utf8|bool warn
sr	|char *	|write_no_mem
d1349 1
a1349 3
sRn	|STRLEN	|is_utf8_char_slow|NN const U8 *s|const STRLEN len
sR	|bool	|is_utf8_common	|NN const U8 *const p|NN SV **swash|NN const char * const swashname
sR	|SV*	|swash_get	|NN SV* swash|UV start|UV span
d1359 1
a1362 6
Ap	|int	|my_dirfd	|NULLOK DIR* dir
#ifdef PERL_OLD_COPY_ON_WRITE
pMXE	|SV*	|sv_setsv_cow	|NN SV* dsv|NN SV* ssv
#endif

Aop	|const char *|PerlIO_context_layers|NULLOK const char *mode
d1399 2
a1400 2
pd	|PADOFFSET|pad_add_name	|NN const char *name\
				|NULLOK HV* typestash|NULLOK HV* ourstash|bool clone|bool state
d1402 1
a1402 1
pd	|void	|pad_check_dup	|NN const char* name|bool is_our|NN const HV* ourstash
d1411 1
a1411 1
pdX	|void	|pad_push	|NN PADLIST *padlist|int depth
d1415 2
a1416 3
sd	|PADOFFSET|pad_findlex	|NN const char *name|NN const CV* cv|U32 seq|int warn \
				|NULLOK SV** out_capture|NN SV** out_name_sv \
				|NN int *out_flags
d1420 1
d1422 1
a1422 1
ApdR	|CV*	|find_runcv	|NULLOK U32 *db_seqp
d1425 1
a1425 1
pR	|int	|get_debug_opts	|NN const char **s|bool givehelp
a1426 2
Ap	|void	|save_set_svflags|NULLOK SV* sv|U32 mask|U32 val
Apod	|void	|hv_assert	|NN HV* tb
d1428 1
a1428 14
ApdR	|SV*	|hv_scalar	|NN HV* hv
ApoR	|I32*	|hv_riter_p	|NN HV* hv
ApoR	|HE**	|hv_eiter_p	|NN HV* hv
Apo	|void	|hv_riter_set	|NN HV* hv|I32 riter
Apo	|void	|hv_eiter_set	|NN HV* hv|NULLOK HE* eiter
Ap	|void	|hv_name_set	|NN HV* hv|NULLOK const char *name|U32 len|U32 flags
poM	|AV**	|hv_backreferences_p	|NN HV* hv
#if defined(PERL_IN_DUMP_C) || defined(PERL_IN_HV_C) || defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
poM	|void	|hv_kill_backrefs	|NN HV* hv
#endif
Apd	|void	|hv_clear_placeholders	|NN HV* hb
ApoR	|I32*	|hv_placeholders_p	|NN HV* hv
ApoR	|I32	|hv_placeholders_get	|NN HV* hv
Apo	|void	|hv_placeholders_set	|NN HV* hv|I32 ph
d1430 5
d1437 2
a1438 4
#if defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
s	|SV *	|find_hash_subscript|NULLOK HV *hv|NN SV *val
s	|I32	|find_array_subscript|NULLOK AV *av|NN SV *val
sMd	|SV*	|find_uninit_var|NULLOK OP* obase|NULLOK SV* uninit_sv|bool top
d1441 4
d1521 41
a1561 3
Ap	|GV*	|gv_fetchpvn_flags|NN const char* name|STRLEN len|I32 flags|I32 sv_type
Ap	|GV*	|gv_fetchsv|NN SV *name|I32 flags|I32 sv_type
dpR	|bool	|is_gv_magical_sv|NN SV *name|U32 flags
d1563 2
d1567 3
a1578 11
XEopMa	|STRLEN *|new_warnings_bitfield|NULLOK STRLEN *buffer \
				|NN const char *const bits|STRLEN size

p	|void	|offer_nice_chunk	|NN void *chunk|U32 chunk_size

#ifndef SPRINTF_RETURNS_STRLEN
Apnod	|int	|my_sprintf	|NN char *buffer|NN const char *pat|...
#endif

Apnodf	|int	|my_snprintf	|NN char *buffer|const Size_t len|NN const char *format|...
Apnod	|int	|my_vsnprintf	|NN char *buffer|const Size_t len|NN const char *format|va_list ap
a1580 90

#ifdef PERL_IMPLICIT_CONTEXT
#ifdef PERL_GLOBAL_STRUCT_PRIVATE
Apo	|void*	|my_cxt_init	|NN const char *my_cxt_key|size_t size
Apo	|int	|my_cxt_index	|NN const char *my_cxt_key
#else
Apo	|void*	|my_cxt_init	|NN int *index|size_t size
#endif
#endif

#ifndef HAS_STRLCAT
Apno	|Size_t	|my_strlcat	|NULLOK char *dst|NULLOK const char *src|Size_t size
#endif

#ifndef HAS_STRLCPY
Apno     |Size_t |my_strlcpy     |NULLOK char *dst|NULLOK const char *src|Size_t size
#endif

#ifdef PERL_MAD
Mnp	|void	|pad_peg	|NN const char* s
#if defined(PERL_IN_DUMP_C) || defined(PERL_DECL_PROT)
sf	|void	|xmldump_attr	|I32 level|NN PerlIO *file|NN const char* pat \
				|...
#endif
Mfp	|void	|xmldump_indent	|I32 level|NN PerlIO *file|NN const char* pat \
				|...
Mp	|void	|xmldump_vindent|I32 level|NN PerlIO *file|NN const char* pat \
				|NULLOK va_list *args
Mp	|void	|xmldump_all
Mp	|void	|xmldump_packsubs	|NN const HV* stash
Mp	|void	|xmldump_sub	|NN const GV* gv
Mp	|void	|xmldump_form	|NN const GV* gv
Mp	|void	|xmldump_eval
Mp	|char*	|sv_catxmlsv	|NN SV *dsv|NN SV *ssv
Mp	|char*	|sv_catxmlpvn	|NN SV *dsv|NN const char *pv|STRLEN len|int utf8
Mp	|char*	|sv_xmlpeek	|NN SV* sv
Mp	|void	|do_pmop_xmldump|I32 level|NN PerlIO *file \
				|NULLOK const PMOP *pm
Mp	|void	|pmop_xmldump	|NULLOK const PMOP* pm
Mp	|void	|do_op_xmldump	|I32 level|NN PerlIO *file|NULLOK const OP *o
Mp	|void	|op_xmldump	|NN const OP* arg

Mp	|TOKEN*	|newTOKEN	|I32 optype|YYSTYPE lval \
				|NULLOK MADPROP* madprop
Mp	|void	|token_free	|NN TOKEN* arg
Mp	|void	|token_getmad	|NN TOKEN* arg|NULLOK OP* o|char slot
Mp	|void	|op_getmad_weak	|NULLOK OP* from|NULLOK OP* o|char slot
Mp	|void	|op_getmad	|NULLOK OP* from|NULLOK OP* o|char slot
Mp	|void	|prepend_madprops|NULLOK MADPROP* mp|NULLOK OP* o|char slot
Mp	|void	|append_madprops|NULLOK MADPROP* tm|NULLOK OP* o|char slot
Mp	|void	|addmad		|NULLOK MADPROP* tm|NULLOK MADPROP** root \
				|char slot
Mp	|MADPROP*|newMADsv	|char key|NN SV* sv
Mp	|MADPROP*|newMADPROP	|char key|char type|NULLOK const void* val \
				|I32 vlen
Mp	|void	|mad_free	|NULLOK MADPROP* mp

#  if defined(PERL_IN_TOKE_C) || defined(PERL_DECL_PROT)
s	|char*	|skipspace0	|NN char *s
s	|char*	|skipspace1	|NN char *s
s	|char*	|skipspace2	|NN char *s|NULLOK SV **sv
s	|void	|start_force	|int where
s	|void	|curmad		|char slot|NULLOK SV *sv
#  endif
Mp	|int	|madlex
Mp	|int	|madparse
#endif
#if !defined(HAS_SIGNBIT)
AMdnoP	|int	|Perl_signbit	|NV f
#endif

XEMop	|void	|emulate_cop_io	|NN const COP *const c|NN SV *const sv
XEMop	|REGEXP *|get_re_arg|NULLOK SV *sv

p	|struct mro_meta*	|mro_meta_init	|NN HV* stash
#if defined(USE_ITHREADS)
p	|struct mro_meta*	|mro_meta_dup	|NN struct mro_meta* smeta|NN CLONE_PARAMS* param
#endif
Apd	|AV*	|mro_get_linear_isa|NN HV* stash
#if defined(PERL_IN_MRO_C) || defined(PERL_DECL_PROT)
sd	|AV*	|mro_get_linear_isa_c3|NN HV* stash|I32 level
sd	|AV*	|mro_get_linear_isa_dfs|NN HV* stash|I32 level
#endif
pd	|void   |mro_isa_changed_in|NN HV* stash
Apd	|void	|mro_method_changed_in	|NN HV* stash
p	|void   |boot_core_mro
Apon	|void	|sys_init	|NN int* argc|NN char*** argv
Apon	|void	|sys_init3	|NN int* argc|NN char*** argv|NN char*** env
Apon	|void	|sys_term

@


1.1.1.8
log
@import perl 5.10.1
@
text
@a0 2
: BEGIN {die "You meant to run embed.pl"} # Stop early if fed to perl.
:
d41 3
d49 5
a53 9
				|NN struct IPerlMem *ipM \
				|NN struct IPerlMem *ipMS \
				|NN struct IPerlMem *ipMP \
				|NN struct IPerlEnv *ipE \
				|NN struct IPerlStdIO *ipStd \
				|NN struct IPerlLIO *ipLIO \
				|NN struct IPerlDir *ipD \
				|NN struct IPerlSock *ipS \
				|NN struct IPerlProc *ipP
d56 5
a60 5
Anod	|void	|perl_construct	|NN PerlInterpreter *my_perl
Anod	|int	|perl_destruct	|NN PerlInterpreter *my_perl
Anod	|void	|perl_free	|NN PerlInterpreter *my_perl
Anod	|int	|perl_run	|NN PerlInterpreter *my_perl
Anod	|int	|perl_parse	|NN PerlInterpreter *my_perl|XSINIT_t xsinit \
d64 1
a64 1
Anod	|PerlInterpreter*|perl_clone|NN PerlInterpreter *proto_perl|UV flags
d67 6
a72 11
				|NN PerlInterpreter *proto_perl \
				|UV flags \
				|NN struct IPerlMem* ipM \
				|NN struct IPerlMem* ipMS \
				|NN struct IPerlMem* ipMP \
				|NN struct IPerlEnv* ipE \
				|NN struct IPerlStdIO* ipStd \
				|NN struct IPerlLIO* ipLIO \
				|NN struct IPerlDir* ipD \
				|NN struct IPerlSock* ipS \
				|NN struct IPerlProc* ipP
a81 1
npR	|MEM_SIZE|malloc_good_size	|size_t nbytes
d85 1
a85 1
Anp	|void	|set_context	|NN void *t
a94 1
: Used in perly.y
a95 1
: Used in perly.y
a96 1
: FIXME - this is only called by pp_chown. They should be merged.
d99 10
a108 10
Apd	|void	|av_clear	|NN AV *av
Apd	|SV*	|av_delete	|NN AV *av|I32 key|I32 flags
ApdR	|bool	|av_exists	|NN AV *av|I32 key
Apd	|void	|av_extend	|NN AV *av|I32 key
pR	|AV*	|av_fake	|I32 size|NN SV **strp
ApdR	|SV**	|av_fetch	|NN AV *av|I32 key|I32 lval
Apd	|void	|av_fill	|NN AV *av|I32 fill
ApdR	|I32	|av_len		|NN const AV *av
ApdR	|AV*	|av_make	|I32 size|NN SV **strp
Apd	|SV*	|av_pop		|NN AV *av
d110 5
a114 6
Apd	|void	|av_push	|NN AV *av|NN SV *val
: Used in scope.c, and by Data::Alias
EXp	|void	|av_reify	|NN AV *av
ApdR	|SV*	|av_shift	|NN AV *av
Apd	|SV**	|av_store	|NN AV *av|I32 key|NULLOK SV *val
Apd	|void	|av_undef	|NN AV *av
d116 3
a118 5
Apd	|void	|av_unshift	|NN AV *av|I32 num
Apo	|SV**	|av_arylen_p	|NN AV *av
: Used in perly.y
pR	|OP*	|bind_match	|I32 type|NN OP *left|NN OP *right
: Used in perly.y
a120 1
: Used in perly.y
a121 1
: Used in perl.c
a122 1
: Used in perl.c
d124 1
a124 2
Ap	|void	|call_list	|I32 oldscope|NN AV *paramList
: Used in serveral source files
a132 1
: Used in perly.y
a133 1
: Used in op.c and perl.c
d137 1
a137 4
Apr	|void	|vcroak		|NULLOK const char* pat|NULLOK va_list* args
Aprd	|void	|croak_xs_usage	|NN const CV *const cv \
				|NN const char *const params

d139 2
a140 2
Afnrp	|void	|croak_nocontext|NULLOK const char* pat|...
Afnp	|OP*	|die_nocontext	|NULLOK const char* pat|...
d143 1
a143 1
Anp	|void	|load_module_nocontext|U32 flags|NN SV* name|NULLOK SV* ver|...
d152 2
a153 2
Afnp	|int	|fprintf_nocontext|NN PerlIO *stream|NN const char *format|...
Afnp	|int	|printf_nocontext|NN const char *format|...
a156 1
: Used in sv.c
a158 1
: Used in pp.c and pp_sys.c
a161 1
: Used in pad.c
d167 1
a167 1
ApR	|I32	|filter_read	|int idx|NN SV *buf_sv|int maxlen
a169 1
: FIXME discussion on p5p
a170 1
: FIXME discussion on p5p
a172 1
: Used by CXINC, which appears to be in widespread use
a181 1
: Used in op.c, perl.c
a182 1
: Used in various files
a183 1
: Used in various files
a186 1
: Used in util.c
a188 1
: FIXME
a189 1
: Used in pp_sys.c
d192 1
a192 2
: Used in pp.c
p	|void	|do_chop	|NN SV *astr|NN SV *sv
a193 1
: Defined in doio.c, used only in pp_sys.c
d202 2
a203 2
#if defined(WIN32) || defined(__SYMBIAN32__) || defined(VMS)
Ap	|int	|do_aspawn	|NULLOK SV* really|NN SV** mark|NN SV** sp
d208 1
a208 1
p	|bool	|do_exec3	|NN const char *incmd|int fd|int do_report
d211 1
a211 1
#if defined(PERL_IN_DOIO_C) || defined(PERL_DECL_PROT)
a214 1
: Defined in doio.c, used only in pp_sys.c
a215 1
: Defined in doio.c, used only in pp_sys.c
a216 1
: Defined in doio.c, used only in pp_sys.c
a217 1
: Defined in doio.c, used only in pp_sys.c
a218 1
: Defined in doio.c, used only in pp_sys.c
a219 1
: Defined in doio.c, used only in pp_sys.c
d222 1
a222 2
Ap	|void	|do_join	|NN SV *sv|NN SV *delim|NN SV **mark|NN SV **sp
: Used in pp.c and pp_hot.c
d229 3
a231 5
Ap	|bool	|do_openn	|NN GV *gv|NN const char *oname|I32 len \
				|int as_raw|int rawmode|int rawperm \
				|NULLOK PerlIO *supplied_fp|NULLOK SV **svp \
				|I32 num
: Used in pp_hot.c and pp_sys.c
a232 1
: Used in pp_sys.c
a233 1
: Used in pp.c
a234 1
: Defined in doio.c, used only in pp_sys.c
a236 1
: Defined in doio.c, used only in pp_sys.c
a237 1
: Defined in doio.c, used only in pp_sys.c
a238 1
: Defined in doop.c, used only in pp.c
a239 1
: Used in my.c and pp.c
a240 1
: Defined in doop.c, used only in mg.c (with /* XXX slurp this routine */)
a241 1
: Defined in doop.c, used only in pp.c
a242 1
: Used in perly.y
d252 1
a252 1
Ap	|void	|op_dump	|NN const OP *o
d258 1
a258 2
				|NN SV* littlestr|U32 flags
: Defined in util.c, used only in perl.c
d262 1
a262 2
: FIXME
p	|OP*	|fold_constants	|NN OP *o
d268 1
a268 2
: Used in hv.c
p	|char*	|getenv_len	|NN const char *env_elem|NN unsigned long *len
a269 1
: Used in pp_ctl.c and pp_hot.c
d288 1
a288 1
Ap	|GV*	|gv_fetchpv	|NN const char *nambeg|I32 add|I32 sv_type
a291 1
: Used in scope.c
d297 5
a301 6
Apd	|HV*	|gv_stashsv	|NN SV* sv|I32 flags
Apd	|void	|hv_clear	|NULLOK HV* hv
: used in SAVEHINTS() and op.c
poM	|HV *	|hv_copy_hints_hv|NULLOK HV *const ohv
Ap	|void	|hv_delayfree_ent|NN HV *hv|NULLOK HE *entry
Abmd	|SV*	|hv_delete	|NULLOK HV *hv|NN const char *key|I32 klen \
d303 4
a306 4
Abmd	|SV*	|hv_delete_ent	|NULLOK HV *hv|NN SV *keysv|I32 flags|U32 hash
AbmdR	|bool	|hv_exists	|NULLOK HV *hv|NN const char *key|I32 klen
AbmdR	|bool	|hv_exists_ent	|NULLOK HV *hv|NN SV *keysv|U32 hash
Abmd	|SV**	|hv_fetch	|NULLOK HV *hv|NN const char *key|I32 klen \
d308 2
a309 2
Abmd	|HE*	|hv_fetch_ent	|NULLOK HV *hv|NN SV *keysv|I32 lval|U32 hash
Ap	|void*	|hv_common	|NULLOK HV *hv|NULLOK SV *keysv \
d311 1
a311 1
				|int action|NULLOK SV *val|U32 hash
d315 2
a316 2
Ap	|void	|hv_free_ent	|NN HV *hv|NULLOK HE *entryK
Apd	|I32	|hv_iterinit	|NN HV *hv
d319 6
a324 7
ApdRbm	|HE*	|hv_iternext	|NN HV *hv
ApdR	|SV*	|hv_iternextsv	|NN HV *hv|NN char **key|NN I32 *retlen
ApMdR	|HE*	|hv_iternext_flags|NN HV *hv|I32 flags
ApdR	|SV*	|hv_iterval	|NN HV *hv|NN HE *entry
Ap	|void	|hv_ksplit	|NN HV *hv|IV newmax
Apdbm	|void	|hv_magic	|NN HV *hv|NULLOK GV *gv|int how
: Used in B.xs
a325 1
: Used in APItest.xs
a328 1
: Used in various files
a329 1
: Used in various files
d333 6
a338 7
Abmd	|SV**	|hv_store	|NULLOK HV *hv|NULLOK const char *key \
				|I32 klen|NULLOK SV *val|U32 hash
Abmd	|HE*	|hv_store_ent	|NULLOK HV *hv|NULLOK SV *key|NULLOK SV *val\
				|U32 hash
AbmdM	|SV**	|hv_store_flags	|NULLOK HV *hv|NULLOK const char *key \
				|I32 klen|NULLOK SV *val|U32 hash|int flags
Apd	|void	|hv_undef	|NULLOK HV *hv
d341 2
a342 3
Apd	|I32	|ibcmp_utf8	|NN const char *s1|NULLOK char **pe1|UV l1 \
				|bool u1|NN const char *s2|NULLOK char **pe2 \
				|UV l2|bool u2
a343 1
: Used in toke.c
a344 1
: Used in mg.c
a347 1
: Used in perly.y
a349 1
: Used in sv.c
a350 1
: Used in perly.y
d389 1
a389 1
Apd	|STRLEN	|is_utf8_char	|NN const U8 *s
d409 2
a410 4
: Used in perly.y
p	|OP*	|jmaybe		|NN OP *o
: Used in pp.c 
pP	|I32	|keyword	|NN const char *name|I32 len|bool all_keywords
a411 1
: Used in pp_ctl.c, and by Data::Alias
a412 1
: Used in various files
a414 1
: FIXME. Used by Data::Alias
a418 1
: Used in S_doeval in pp_ctl.c
d423 1
a423 2
: Used in perly.y
p	|OP*	|localize	|NN OP* o|I32 lex
a429 1
: These are all indirectly referenced by globals.c. This is somewhat annoying.
a432 1
p	|int	|magic_clearisa	|NN SV* sv|NN MAGIC* mg
d450 1
a450 1
p	|int	|magic_nextpack	|NN SV *sv|NN MAGIC *mg|NN SV *key
a457 1
#ifndef NO_MATHOMS
a458 2
p	|int	|magic_setfm	|NN SV* sv|NN MAGIC* mg
#endif
d462 1
a464 1
#ifndef NO_MATHOMS
a465 1
#endif
a483 1
: Defined in locale.c, used only in sv.c
a487 2
: FIXME - either make it public, or stop exporting it. (Data::Alias uses this)
: Used in gv.c, op.c, toke.c
d489 2
a490 2
Apd	|void	|sortsv		|NULLOK SV** array|size_t num_elts|NN SVCOMPARE_t cmp
Apd	|void	|sortsv_flags	|NULLOK SV** array|size_t num_elts|NN SVCOMPARE_t cmp|U32 flags
d492 1
a492 3
Apd	|int	|mg_copy	|NN SV *sv|NN SV *nsv|NULLOK const char *key \
				|I32 klen
: Defined in mg.c, used only in scope.c
d501 1
a501 2
Ap	|void	|mini_mktime	|NN struct tm *ptm
: Used by MOD(), which Data::Alias uses
a502 1
: Used in op.c and pp_sys.c
a536 1
: Used in pp_ctl.c
d552 1
a552 1
Apa	|OP*	|newLOGOP	|I32 optype|I32 flags|NN OP *first|NN OP *other
d565 2
a566 3
Apd	|CV*	|newXS		|NULLOK const char *name|NN XSUBADDR_t subaddr\
				|NN const char *filename
AmdbR	|AV*	|newAV
d574 2
a575 2
AmdbR	|HV*	|newHV
ApaR	|HV*	|newHVhv	|NULLOK HV *hv
a592 1
Apda	|SV*	|newSVpvn_flags	|NULLOK const char* s|STRLEN len|U32 flags
d606 2
a607 3
Ap	|char*	|scan_vstring	|NN const char *s|NN const char *e \
				|NN SV *sv
Apd	|const char*	|scan_version	|NN const char *s|NN SV *rv|bool qv
d614 1
a614 2
Apd	|int	|vcmp		|NN SV *lhv|NN SV *rhv
: Used in pp_hot.c and pp_sys.c
a619 1
: Used in perly.y
a624 1
: Used in op.c
a625 1
: Used in toke.c and perly.y
a626 1
: Used in op.c and toke.c
a628 1
: Used in perly.y
a629 1
: Used in perly.y
a630 1
: Defined in pad.c, used only in op.c
a632 1
: Defined in pad.c, used only in op.c
a634 1
: Used in op.c
a635 1
: FIXME
d637 1
a637 2
: Defined in doio.c, used only in pp_hot.c
dopM	|PerlIO*|start_glob	|NN SV *tmpglob|NN IO *io
d642 1
a642 1
Anp	|void*	|reentrant_retry|NN const char *f|...
d648 1
a648 1
Apd	|I32	|call_sv	|NN SV* sv|VOL I32 flags
d653 3
a655 3
Apd	|SV*	|get_sv		|NN const char *name|I32 flags
Apd	|AV*	|get_av		|NN const char *name|I32 flags
Apd	|HV*	|get_hv		|NN const char *name|I32 flags
d674 1
a674 2
: Used in perly.y
p	|OP*	|pmruntime	|NN OP *o|NN OP *expr|bool isreg
a676 1
: Used in perly.y
d683 1
a683 3
Ap	|SV*	|regclass_swash	|NULLOK const regexp *prog \
				|NN const struct regnode *node|bool doinit \
				|NULLOK SV **listsvp|NULLOK SV **altsvp
d687 3
a689 4
Ap	|void	|pregfree	|NULLOK REGEXP* r
: FIXME - is anything in re using this now?
EXp	|REGEXP*|reg_temp_copy	|NN REGEXP* r
Ap	|void	|regfree_internal|NN REGEXP *const r
d696 1
a696 1
Ap	|char*	|re_intuit_start|NN REGEXP * const prog|NULLOK SV* sv|NN char* strpos \
d699 5
a703 5
Ap	|SV*	|re_intuit_string|NN REGEXP  *const prog
Ap	|I32	|regexec_flags	|NN REGEXP *const prog|NN char *stringarg \
				|NN char *strend|NN char *strbeg|I32 minend \
				|NN SV *sv|NULLOK void *data|U32 flags
ApR	|regnode*|regnext	|NULLOK regnode* p
a715 1
: FIXME - is anything in re using this now?
a716 1
: FIXME - is anything in re using this now?
a717 1
: FIXME - is anything in re using this now?
a719 1
: FIXME - is anything in re using this now?
a721 1
: FIXME - why the E?
a726 1
: Used in pp_sys.c
d728 1
a728 2
: Used in pp_sys.c
p	|int	|rsignal_save	|int i|Sighandler_t t1|NN Sigsave_t* save
d731 2
a732 2
p	|void	|rxres_restore	|NN void **rsp|NN REGEXP *rx
p	|void	|rxres_save	|NN void **rsp|NN REGEXP *rx
a733 1
: Used in pp_sys.c
d749 1
a749 1
Ap	|void	|save_delete	|NN HV *hv|NN char *key|I32 klen
d752 3
a754 4
Apmb	|void	|save_freesv	|NULLOK SV* sv
: Used in SAVEFREOP(), used in op.c, pp_ctl.c
pmb	|void	|save_freeop	|NULLOK OP* o
Apmb	|void	|save_freepv	|NULLOK char* pv
d760 1
a760 2
p	|void	|save_hints
Ap	|void	|save_helem	|NN HV *hv|NN SV *key|NN SV **sptr
d767 1
a767 1
Ap	|void	|save_iv	|NN IV *ivp
d770 3
a772 4
Apmb	|void	|save_mortalizesv|NN SV* sv
Ap	|void	|save_nogv	|NN GV* gv
: Used in SAVEFREOP(), used in gv.c, op.c, perl.c, pp_ctl.c, pp_sort.c
pmb	|void	|save_op
d775 1
a775 1
Ap	|void	|save_vptr	|NN void *ptr
a777 1
Ap	|void	|save_padsv_and_mortalize|PADOFFSET off
a779 11
Ap	|void	|save_pushptr	|NULLOK void *const ptr|const int type
: Used by SAVECOPARYBASE() in op.c
p	|void	|save_pushi32ptr|const I32 i|NULLOK void *const ptr|const int type
: Used by SAVESWITCHSTACK() in pp.c
p	|void	|save_pushptrptr|NULLOK void *const ptr1 \
				|NULLOK void *const ptr2|const int type
#if defined(PERL_IN_SCOPE_C) || defined(PERL_DECL_PROT)
s	|void	|save_pushptri32ptr|NULLOK void *const ptr1|const I32 i \
				|NULLOK void *const ptr2|const int type
#endif
: Used in perly.y
a780 1
: Used in perly.y
a783 1
: Used in pp_ctl.c
a788 1
: Used in perly.y
d791 1
a791 1
				|I32 end_shift|NN I32 *old_posp|I32 last
a797 1
: Used in perl.c
a805 1
: Used in pp_ctl.c
d810 1
a810 1
#if defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
d814 2
a815 2
Amb	|IV	|sv_2iv		|NULLOK SV* sv
Apd	|IV	|sv_2iv_flags	|NULLOK SV* sv|I32 flags
d817 1
a817 2
Apd	|NV	|sv_2nv		|NULLOK SV* sv
: Used in pp.c, pp_hot.c, sv.c
d819 2
a820 2
Amb	|char*	|sv_2pv		|NULLOK SV* sv|NULLOK STRLEN* lp
Apd	|char*	|sv_2pv_flags	|NULLOK SV* sv|NULLOK STRLEN* lp|I32 flags
d824 2
a825 2
Amb	|UV	|sv_2uv		|NULLOK SV* sv
Apd	|UV	|sv_2uv_flags	|NULLOK SV* sv|I32 flags
d829 3
a831 3
Apd	|char*	|sv_pvn		|NN SV *sv|NN STRLEN *lp
Apd	|char*	|sv_pvutf8n	|NN SV *sv|NN STRLEN *lp
Apd	|char*	|sv_pvbyten	|NN SV *sv|NN STRLEN *lp
d838 3
a840 3
Apd	|void	|sv_catpv	|NN SV* sv|NULLOK const char* ptr
Amdb	|void	|sv_catpvn	|NN SV *dsv|NN const char *sstr|STRLEN len
Amdb	|void	|sv_catsv	|NN SV *dstr|NULLOK SV *sstr
a841 1
: Used only in perl.c
a842 1
: Used only in perl.c
d845 2
a846 2
Apd	|I32	|sv_cmp		|NULLOK SV* sv1|NULLOK SV* sv2
Apd	|I32	|sv_cmp_locale	|NULLOK SV* sv1|NULLOK SV* sv2
d850 1
a850 2
Ap	|OP*	|sv_compile_2op	|NN SV *sv|NN OP **startop \
				|NN const char *code|NN PAD **padp
d852 1
a852 1
Apd	|void	|sv_dec		|NULLOK SV* sv
a857 2
: FIXME Used in SvREFCNT_dec() but only
: if defined(__GNUC__) && !defined(PERL_GCC_BRACE_GROUPS_FORBIDDEN)
a858 1
: Used only in perl.c
d862 3
a864 6
Apd	|void	|sv_inc		|NULLOK SV* sv
Amdb	|void	|sv_insert	|NN SV *bigstr|STRLEN offset \
				|STRLEN len|NN const char *little \
				|STRLEN littlelen
Apd	|void	|sv_insert_flags|NN SV *const bigstr|const STRLEN offset|const STRLEN len \
				|NN const char *const little|const STRLEN littlelen|const U32 flags
d902 1
a902 1
Amdb	|void	|sv_setsv	|NN SV *dstr|NULLOK SV *sstr
d907 1
a907 1
Apd	|void	|sv_unref_flags	|NN SV *ref|U32 flags
a938 1
: Used in gv.c, hv.c
a939 1
: Used in perly.y
a975 1
: Used by Data::Alias
a976 1
: Used in pp.c
a977 1
: Used in pp_sys.c
a978 1
: Used in locale.c and perl.c
a980 1
: Only used in perl.c
a981 1
: Used in doio.c, pp_hot.c, pp_sys.c
a982 1
: Used in mg.c, pp.c, pp_hot.c, regcomp.c
a987 1
: FIXME
a989 1
: Used in pp_ctl.c
a990 1
: Used in op.c
a991 1
: Used in perly.y, and by Data::Alias
a992 1
: Used in perl.c, pp_ctl.c
d994 1
a994 2
: Only used in scope.c
p	|void	|parser_free	|NN const yy_parser *parser
d1013 1
a1013 1
Apd	|void	|sv_catpv_mg	|NN SV *sv|NULLOK const char *ptr
d1015 1
a1015 1
Apdbm	|void	|sv_catsv_mg	|NN SV *dsv|NULLOK SV *ssv
a1062 1
Amd	|STRLEN	|sv_utf8_upgrade_nomg|NN SV *sv
a1068 1
: This is indirectly referenced by globals.c. This is somewhat annoying.
a1077 1
: Used in perly.y
a1078 1
: Only used in perl.c
d1094 1
a1094 1
Ap	|yy_parser*|parser_dup	|NULLOK const yy_parser *proto|NN CLONE_PARAMS* param
d1097 1
a1097 1
ApR	|void*	|ptr_table_fetch|NN PTR_TBL_t *tbl|NULLOK const void *sv
d1112 2
a1113 2
ApR	|const char *	|custom_op_name	|NN const OP *o
ApR	|const char *	|custom_op_desc	|NN const OP *o
a1143 1
: Used in hv.c
d1154 1
a1154 1
sR	|HEK*	|share_hek_flags|NN const char *str|I32 len|U32 hash|int flags
d1157 3
a1159 4
sM	|SV*	|hv_delete_common|NULLOK HV *hv|NULLOK SV *keysv \
		|NULLOK const char *key|STRLEN klen|int k_flags|I32 d_flags \
		|U32 hash
sM	|void	|clear_placeholders	|NN HV *hv|U32 items
d1168 1
a1168 1
s	|void	|restore_magic	|NULLOK const void *p
a1173 1
: These are all indirectly referenced by globals.c. This is somewhat annoying.
d1201 1
a1227 1
sR	|OP*	|search_const	|NN OP *o
a1252 1
: Used in perl.c
a1253 1
: Used in OpREFCNT_inc() in sv.c
a1254 1
: FIXME - can be static.
d1264 1
a1264 1
s	|void	|forbid_setid	|const char flag|const bool suidscript
d1275 1
a1275 1
				|NN SV *sv|NN bool *suidscript|NN PerlIO **rsfpp
d1277 1
a1277 8
#ifdef DOSUID
#  ifdef IAMSUID
so	|void	|validate_suid	|NN const char *validarg \
				|int fdscript \
				|bool suidscript|NN SV* linestr_sv \
				|NN PerlIO *rsfp
#  else
so	|void	|validate_suid	|NN const char *validarg \
d1279 1
a1279 1
				|NN SV* linestr_sv \
a1280 6
#  endif
#else
#  ifndef SETUID_SCRIPTS_ARE_SECURE_NOW
so	|void	|validate_suid	|NN PerlIO *rsfp
#  endif
#endif
a1293 1
: Used in pp_hot.c
d1307 2
a1308 3
s	|const char *|group_end	|NN const char *patptr|NN const char *patend \
				|char ender
sR	|const char *|get_num	|NN const char *patptr|NN I32 *lenptr
d1334 1
a1334 1
sR	|PMOP*	|make_matcher	|NN REGEXP* re
d1350 2
a1351 2
s	|I32	|amagic_cmp	|NN SV *str1|NN SV *str2
s	|I32	|amagic_cmp_locale|NN SV *str1|NN SV *str2
d1355 1
a1355 1
s	|void	|qsortsvu	|NULLOK SV** array|size_t num_elts|NN SVCOMPARE_t compare
d1367 8
a1374 13
Es	|regnode*|reg		|NN struct RExC_state_t *pRExC_state \
				|I32 paren|NN I32 *flagp|U32 depth
Es	|regnode*|reganode	|NN struct RExC_state_t *pRExC_state|U8 op \
				|U32 arg
Es	|regnode*|regatom	|NN struct RExC_state_t *pRExC_state \
				|NN I32 *flagp|U32 depth
Es	|regnode*|regbranch	|NN struct RExC_state_t *pRExC_state \
				|NN I32 *flagp|I32 first|U32 depth
Es	|STRLEN	|reguni		|NN const struct RExC_state_t *pRExC_state \
				|UV uv|NN char *s
Es	|regnode*|regclass	|NN struct RExC_state_t *pRExC_state|U32 depth
ERsn	|I32	|regcurly	|NN const char *s
Es	|regnode*|reg_node	|NN struct RExC_state_t *pRExC_state|U8 op
d1376 11
a1386 21
Es	|regnode*|regpiece	|NN struct RExC_state_t *pRExC_state \
				|NN I32 *flagp|U32 depth
Es	|regnode*|reg_namedseq	|NN struct RExC_state_t *pRExC_state \
				|NULLOK UV *valuep
Es	|void	|reginsert	|NN struct RExC_state_t *pRExC_state \
				|U8 op|NN regnode *opnd|U32 depth
Es	|void	|regtail	|NN struct RExC_state_t *pRExC_state \
				|NN regnode *p|NN const regnode *val|U32 depth
Es	|SV *	|reg_scan_name	|NN struct RExC_state_t *pRExC_state \
				|U32 flags
Es	|U32	|join_exact	|NN struct RExC_state_t *pRExC_state \
				|NN regnode *scan|NN I32 *min|U32 flags|NULLOK regnode *val|U32 depth
EsRn	|char *	|regwhite	|NN struct RExC_state_t *pRExC_state \
				|NN char *p
Es	|char *	|nextchar	|NN struct RExC_state_t *pRExC_state
Es	|bool	|reg_skipcomment|NN struct RExC_state_t *pRExC_state
Es	|void	|scan_commit	|NN const struct RExC_state_t *pRExC_state \
				|NN struct scan_data_t *data|NN I32 *minlenp \
				|int is_inf
Esn	|void	|cl_anything	|NN const struct RExC_state_t *pRExC_state \
				|NN struct regnode_charclass_class *cl
d1388 2
a1389 4
Esn	|void	|cl_init	|NN const struct RExC_state_t *pRExC_state \
				|NN struct regnode_charclass_class *cl
Esn	|void	|cl_init_zero	|NN const struct RExC_state_t *pRExC_state \
				|NN struct regnode_charclass_class *cl
d1392 1
a1392 2
Esn	|void	|cl_or		|NN const struct RExC_state_t *pRExC_state \
				|NN struct regnode_charclass_class *cl \
d1394 3
a1396 4
Es	|I32	|study_chunk	|NN struct RExC_state_t *pRExC_state \
				|NN regnode **scanp|NN I32 *minlenp \
				|NN I32 *deltap|NN regnode *last \
				|NULLOK struct scan_data_t *data \
d1400 1
a1400 2
EsRn	|U32	|add_data	|NN struct RExC_state_t *pRExC_state|U32 n \
				|NN const char *s
d1402 4
a1405 5
Es	|I32	|regpposixcc	|NN struct RExC_state_t *pRExC_state|I32 value
Es	|void	|checkposixcc	|NN struct RExC_state_t *pRExC_state
Es	|I32	|make_trie	|NN struct RExC_state_t *pRExC_state \
				|NN regnode *startbranch|NN regnode *first \
				|NN regnode *last|NN regnode *tail \
d1407 2
a1408 3
Es	|void	|make_trie_failtable	|NN struct RExC_state_t *pRExC_state \
                                |NN regnode *source|NN regnode *stclass \
				|U32 depth
d1426 1
a1426 2
Es	|U8	|regtail_study	|NN struct RExC_state_t *pRExC_state \
				|NN regnode *p|NN const regnode *val|U32 depth
d1438 1
a1438 1
ERsn	|U8*	|reghop3	|NN U8 *s|I32 off|NN const U8 *lim
d1440 1
a1440 2
ERsn	|U8*	|reghop4	|NN U8 *s|I32 off|NN const U8 *llim \
				|NN const U8 *rlim
d1442 1
a1442 1
ERsn	|U8*	|reghopmaybe3	|NN U8 *s|I32 off|NN const U8 *lim
d1447 1
a1447 2
ERs	|I32	|reg_check_named_buff_matched	|NN const regexp *rex \
						|NN const regnode *scan
d1451 1
a1451 3
Es	|void	|debug_start_match|NN const REGEXP *prog|const bool do_utf8\
				|NN const char *start|NN const char *end\
				|NN const char *blurb
a1468 1
: Used in gv.c
a1472 1
: Used in hv.c and mg.c
d1481 1
a1481 1
s	|void	|sv_del_backref	|NN SV *tsv|NN SV *sv
a1487 1
#    ifdef DEBUGGING
a1488 3
#    else
s	|int	|sv_2iuv_non_preserve	|NN SV *sv
#    endif
d1512 1
a1512 1
sRn	|PTR_TBL_ENT_t *|ptr_table_find|NN PTR_TBL_t *tbl|NULLOK const void *sv
d1518 1
a1518 1
s	|char*	|force_version	|NN char *s|int guessing
d1565 1
a1565 1
s	|int	|tokereport	|I32 rv|NN const YYSTYPE* lvalp
d1571 1
a1571 2
s	|bool|isa_lookup	|NN HV *stash|NN const char * const name
so	|HV *	|get_isa_hash	|NN HV *const stash
a1587 7
#if defined(PERL_MEM_LOG) && defined(PERL_MEM_LOG_STDERR)
sn	|void	|mem_log_common	|enum mem_log_type mlt|const UV n|const UV typesize \
				|NN const char *type_name|NULLOK const SV *sv \
				|Malloc_t oldalloc|Malloc_t newalloc \
				|NN const char *filename|const int linenumber \
				|NN const char *funcname
#endif
d1602 2
a1603 3
Apd	|void	|sv_setsv_flags	|NN SV *dstr|NULLOK SV *sstr|I32 flags
Apd	|void	|sv_catpvn_flags|NN SV *dstr|NN const char *sstr|STRLEN len \
				|I32 flags
d1612 1
a1612 2
: Used in pp_hot.c and regexec.c
pMXE	|SV*	|sv_setsv_cow	|NULLOK SV* dstr|NN SV* sstr
d1626 1
a1626 2
Ap	|void	|PerlIO_set_ptrcnt	|NULLOK PerlIO *f|NULLOK STDCHAR *ptr \
					|int cnt
d1628 3
a1630 6
Ap	|SSize_t|PerlIO_read		|NULLOK PerlIO *f|NN void *vbuf \
					|Size_t count
Ap	|SSize_t|PerlIO_write		|NULLOK PerlIO *f|NN const void *vbuf \
					|Size_t count
Ap	|SSize_t|PerlIO_unread		|NULLOK PerlIO *f|NN const void *vbuf \
					|Size_t count
a1643 1
: Only used in dump.c
d1645 1
a1645 1
#if defined(PERL_IN_DEB_C) || defined(PERL_DECL_PROT)
a1649 1
: Used in perl.c, pp_ctl.c, toke.c
a1650 1
: Only used in op.c
a1651 1
: Only used in op.c
a1653 1
: Only used in op.c
a1654 1
: Only used in op.c
a1656 1
: Only used PAD_SETSV() in op.c
a1658 1
: Only used in op.c
a1659 1
: Only used in op.c
a1660 1
: Used in dump.c
a1661 1
: Only used in op.c
a1663 1
: Used in pp_ctl.c, pp_hot.c, pp_sort.c
a1664 1
: Only used in PAD_COMPNAME_TYPE() in op.c
a1675 1
: Only used in perl.c
a1677 1
: Used in mg.c
d1680 2
a1681 2
Ap	|void	|save_set_svflags|NN SV *sv|U32 mask|U32 val
Apod	|void	|hv_assert	|NN HV *hv
d1683 7
a1689 8
ApdR	|SV*	|hv_scalar	|NN HV *hv
ApoR	|I32*	|hv_riter_p	|NN HV *hv
ApoR	|HE**	|hv_eiter_p	|NN HV *hv
Apo	|void	|hv_riter_set	|NN HV *hv|I32 riter
Apo	|void	|hv_eiter_set	|NN HV *hv|NULLOK HE *eiter
Ap	|void	|hv_name_set	|NN HV *hv|NULLOK const char *name|U32 len|U32 flags
: Used in dump.c and hv.c
poM	|AV**	|hv_backreferences_p	|NN HV *hv
d1691 1
a1691 2
: Only used in sv.c
poM	|void	|hv_kill_backrefs	|NN HV *hv
d1693 4
a1696 4
Apd	|void	|hv_clear_placeholders	|NN HV *hv
ApoR	|I32*	|hv_placeholders_p	|NN HV *hv
ApoR	|I32	|hv_placeholders_get	|NN HV *hv
Apo	|void	|hv_placeholders_set	|NN HV *hv|I32 ph
d1698 1
a1698 2
: This is indirectly referenced by globals.c. This is somewhat annoying.
p	|SV*	|magic_scalarpack|NN HV *hv|NN MAGIC *mg
a1779 2
: I think that these are only used by the above, which are macros, and in turn
: currently they are only used in pp_pack.c, but this is in util.c
a1783 1
: Only used in pp.c
d1786 1
a1786 1
ApR	|bool	|stashpv_hvname_match|NN const COP *c|NN const HV *hv
a1788 1
: Used in sv.c
a1796 1
: FIXME - exported for ByteLoader - public or private?
a1799 1
: Used in av.c, hv.c
a1808 1
: Used in mg.c, sv.c
d1850 1
a1850 1
Mp	|void	|op_xmldump	|NN const OP *o
d1854 2
a1855 2
Mp	|void	|token_free	|NN TOKEN *tk
Mp	|void	|token_getmad	|NN TOKEN *tk|NULLOK OP *o|char slot
a1880 1
: Used by B
a1881 1
: Used by SvRX and SvRXOK
d1884 1
a1884 11
Aop	|SV*	|mro_get_private_data|NN struct mro_meta *const smeta \
				     |NN const struct mro_alg *const which
Aop	|SV*	|mro_set_private_data|NN struct mro_meta *const smeta \
				     |NN const struct mro_alg *const which \
				     |NN SV *const data
Aop	|const struct mro_alg *|mro_get_from_name|NN SV *name
Aop	|void	|mro_register	|NN const struct mro_alg *mro
Aop	|void	|mro_set_mro	|NN struct mro_meta *const meta \
				|NN SV *const name
: Used in HvMROMETA(), which is public.
Xpo	|struct mro_meta*	|mro_meta_init	|NN HV* stash
a1885 1
: Only used in sv.c
d1890 2
a1891 1
sd	|AV*	|mro_get_linear_isa_dfs|NN HV* stash|U32 level
a1892 1
: Used in hv.c, mg.c, pp.c, sv.c
a1894 1
: Only used in perl.c
d1899 1
@


1.1.1.9
log
@Perl 5.12.2 from CPAN
@
text
@a2 2
: This file is processed by embed.pl and autodoc.pl
:
d10 23
a32 94
:
:   A  Member of public API:
:
:         add entry to global.sym (unless x or m);
:         any doc entry goes in perlapi.pod rather than perlintern.api
:         makes '#define foo Perl_foo' scope not just for PERL_CORE/PERL_EXT
:
:   a  Allocates memory a la malloc/calloc.  Also implies "R":
:
:         proto.h: add __attribute__malloc__
:
:   b  Binary backward compatibility; function is a macro
:      but has also Perl_ implementation (which is exported):
:
:         add entry to global.sym;
:         don't define PERL_ARGS_ASSERT_FOO
:
:   D  Function is deprecated:
:
:         proto.h: add __attribute__deprecated__
:
:   d  Function has documentation with its source:
:
:         enables 'no docs for foo" warning in autodoc.pl
:
:   E  Visible to extensions included in the Perl core:
:
:         in embed.h, change "#ifdef PERL_CORE"
:         into               "#if defined(PERL_CORE) || defined(PERL_EXT)"
:
:      Should always be combined with "X" to be usable from dynamically
:      loaded extensions.
:
:   f  Function takes printf style format string, varargs:
:
:         proto.h: add __attribute__format__ (or ...null_ok__)
:
:   M  May change:
:
:         (currently no effect)
:
:   m  Implemented as a macro:
:
:         suppress proto.h entry
:         suppress global.sym entry
:         suppress embed.h entry
:
:   n  Has no implicit interpreter/thread context argument:
:
:         suppress the pTHX part of "foo(pTHX...)" in proto.h;
:         In the PERL_IMPLICIT_SYS branch of embed.h, generates
:             "#define foo Perl_foo",      rather than
:             "#define foo(a,b,c) Perl_foo(aTHX_ a,b,c)
:
:   o  Has no Perl_foo compatibility macro:
:
:         embed.h: suppress "#define foo Perl_foo"
:
:   P  Pure function: no effects except the return value;
:      return value depends only on params and/or globals:
:
:         proto.h: add __attribute__pure__
:
:   p  Function in source code has a Perl_ prefix:
:
:         proto.h: function is declared as Perl_foo rather than foo
:         embed.h: "#define foo Perl_foo" entries added
:
:   R  Return value must not be ignored (also implied by 'a' flag):
:
:        proto.h: add __attribute__warn_unused_result__
:
:   r  Function never returns:
:
:        proto.h: add __attribute__noreturn__
:
:   s  Static function: function in source code has a S_ prefix:
:
:         proto.h: function is declared as S_foo rather than foo,
:                STATIC is added to declaration;
:         embed.h: "#define foo S_foo" entries added
:
:   U  Suppress usage example in autogenerated documentation
:
:         (currently no effect)
:
:   X  Explicitly exported:
:
:         add entry to global.sym, unless x or m
:
:   x  Not exported
:
:         suppress entry in global.sym
:
a94 1
EXpRnP	|I32	|regcurly	|NN const char *s
d102 1
a102 1
Ap	|int	|Gv_AMupdate	|NN HV* stash|bool destructing
d115 1
d118 1
a118 1
ApdR	|I32	|av_len		|NN AV *av
a130 4
Apo	|IV*	|av_iter_p	|NN AV *av
#if defined(PERL_IN_AV_C) || defined(PERL_DECL_PROT)
s	|MAGIC*	|get_aux_mg	|NN AV *av
#endif
d171 5
a175 5
Afnp	|SV*	|newSVpvf_nocontext|NN const char *const pat|...
Afnp	|void	|sv_catpvf_nocontext|NN SV *const sv|NN const char *const pat|...
Afnp	|void	|sv_setpvf_nocontext|NN SV *const sv|NN const char *const pat|...
Afnp	|void	|sv_catpvf_mg_nocontext|NN SV *const sv|NN const char *const pat|...
Afnp	|void	|sv_setpvf_mg_nocontext|NN SV *const sv|NN const char *const pat|...
d179 2
d187 1
a187 1
ApdR	|SV*	|cv_const_sv	|NULLOK const CV *const cv
d203 1
a203 1
ApR	|I32	|cxinc
d210 1
a210 1
Anp	|char*	|delimcpy	|NN char* to|NN const char* toend|NN const char* from \
d214 4
d219 1
a219 3
#if defined(PERL_IN_UTIL_C) || defined(PERL_DECL_PROT)
s	|OP*	|vdie		|NULLOK const char* pat|NULLOK va_list* args
#endif
d221 1
a221 1
pr	|void	|die_where	|NULLOK SV* msv
a302 1
p	|void	|dump_all_perl	|bool justperl
a311 1
p	|void	|dump_packsubs_perl	|NN const HV* stash|bool justperl
a312 1
p	|void	|dump_sub_perl	|NN const GV* gv|bool justperl
d319 1
a319 2
#if defined(PERL_IN_OP_C) || defined(PERL_DECL_PROT)
s	|OP*	|force_list	|NULLOK OP* arg
d321 1
a321 2
s	|OP*	|fold_constants	|NN OP *o
#endif
d325 1
a325 3
#if defined(PERL_IN_OP_C) || defined(PERL_DECL_PROT)
s	|OP*	|gen_constant_list|NULLOK OP* o
#endif
d334 3
a336 4
Ap	|GV*	|gv_add_by_type	|NULLOK GV *gv|svtype type
Apmb	|GV*	|gv_AVadd	|NULLOK GV *gv
Apmb	|GV*	|gv_HVadd	|NULLOK GV *gv
Apmb	|GV*	|gv_IOadd	|NULLOK GV* gv
d347 3
a349 6
Apdmb	|GV*	|gv_fetchmethod	|NN HV* stash|NN const char* name
Apd	|GV*	|gv_fetchmethod_autoload|NN HV* stash|NN const char* name \
				|I32 autoload
ApM	|GV*	|gv_fetchmethod_flags|NN HV* stash|NN const char* name \
				|U32 flags
Ap	|GV*	|gv_fetchpv	|NN const char *nambeg|I32 add|const svtype sv_type
a356 1
XMpd	|void	|gv_try_downgrade|NN GV* gv
d360 1
a360 1
Apd	|void	|hv_clear	|NULLOK HV *hv
a399 8
#if defined(PERL_IN_HV_C) || defined(PERL_DECL_PROT)
s	|struct refcounted_he *	|refcounted_he_new_common \
				|NULLOK struct refcounted_he *const parent \
				|NN const char *const key_p \
				|const STRLEN key_len|const char flags \
				|char value_type|NN const void *value \
				|const STRLEN value_len
#endif
d404 1
a404 1
AbmM	|SV**	|hv_store_flags	|NULLOK HV *hv|NULLOK const char *key \
d407 2
a408 2
AnpP	|I32	|ibcmp		|NN const char* a|NN const char* b|I32 len
AnpP	|I32	|ibcmp_locale	|NN const char* a|NN const char* b|I32 len
d412 1
a412 3
#if defined(PERL_IN_DOIO_C) || defined(PERL_DECL_PROT)
sR	|bool	|ingroup	|Gid_t testgid|bool effective
#endif
a414 2
: Used in pp_ctl.c
po	|void	|init_dbargs
d421 1
a421 1
AnpPR	|char*	|instr		|NN const char* big|NN const char* little
d426 1
d432 1
d450 1
d463 4
a466 5
Anpd	|bool	|is_ascii_string|NN const U8 *s|STRLEN len
Anpd	|STRLEN	|is_utf8_char	|NN const U8 *s
Anpd	|bool	|is_utf8_string	|NN const U8 *s|STRLEN len
Anpdmb	|bool	|is_utf8_string_loc|NN const U8 *s|STRLEN len|NULLOK const U8 **p
Anpd	|bool	|is_utf8_string_loclen|NN const U8 *s|STRLEN len|NULLOK const U8 **ep|NULLOK STRLEN *el
d468 1
a473 2
ApR	|bool	|is_utf8_perl_space	|NN const U8 *p
ApR	|bool	|is_utf8_perl_word	|NN const U8 *p
a475 1
ApR	|bool	|is_utf8_posix_digit	|NN const U8 *p
a482 10
EXpR	|bool	|is_utf8_X_begin	|NN const U8 *p
EXpR	|bool	|is_utf8_X_extend	|NN const U8 *p
EXpR	|bool	|is_utf8_X_prepend	|NN const U8 *p
EXpR	|bool	|is_utf8_X_non_hangul	|NN const U8 *p
EXpR	|bool	|is_utf8_X_L		|NN const U8 *p
EXpR	|bool	|is_utf8_X_LV		|NN const U8 *p
EXpR	|bool	|is_utf8_X_LVT		|NN const U8 *p
EXpR	|bool	|is_utf8_X_LV_LVT_V	|NN const U8 *p
EXpR	|bool	|is_utf8_X_T		|NN const U8 *p
EXpR	|bool	|is_utf8_X_V		|NN const U8 *p
a486 4
#if defined(PERL_IN_OP_C) || defined(PERL_DECL_PROT)
s	|OP*	|opt_scalarhv	|NN OP* rep_op
s	|OP*	|is_inplace_av	|NN OP* o|NULLOK OP* oright
#endif
a491 13
: Public lexer API
AMpd	|bool	|lex_bufutf8
AMpd	|char*	|lex_grow_linestr|STRLEN len
AMpd	|void	|lex_stuff_pvn	|NN char* pv|STRLEN len|U32 flags
AMpd	|void	|lex_stuff_sv	|NN SV* sv|U32 flags
AMpd	|void	|lex_unstuff	|NN char* ptr
AMpd	|void	|lex_read_to	|NN char* ptr
AMpd	|void	|lex_discard_to	|NN char* ptr
AMpd	|bool	|lex_next_chunk	|U32 flags
AMpd	|I32	|lex_peek_unichar|U32 flags
AMpd	|I32	|lex_read_unichar|U32 flags
AMpd	|void	|lex_read_space	|U32 flags
: Used in various files
d497 1
a497 4
#if defined(PERL_IN_OP_C) || defined(PERL_DECL_PROT)
s	|OP*	|linklist	|NN OP *o
s	|OP*	|listkids	|NULLOK OP* o
#endif
d500 1
d504 2
a505 2
p	|OP*	|localize	|NN OP *o|I32 lex
ApdR	|I32	|looks_like_number|NN SV *const sv
d515 1
a515 2
dp	|int	|magic_clearhints|NN SV* sv|NN MAGIC* mg
p	|int	|magic_clearisa	|NULLOK SV* sv|NN MAGIC* mg
d519 1
d541 4
d550 3
d558 1
a558 1
p	|int	|magic_setsig	|NULLOK SV* sv|NN MAGIC* mg
d567 1
d585 1
a585 1
pd	|void	|mg_localize	|NN SV* sv|NN SV* nsv|bool setmagic
d597 1
a597 1
p	|int	|mode_from_discipline|NULLOK const char* s|STRLEN len
d599 1
d622 1
a622 1
Ap	|PerlIO*|my_popen_list	|NN const char* mode|int n|NN SV ** args
d672 1
a672 1
Apabm	|IO*	|newIO
d679 3
a681 3
Apa	|SV*	|newRV		|NN SV *const sv
Apda	|SV*	|newRV_noinc	|NN SV *const sv
Apda	|SV*	|newSV		|const STRLEN len
d684 7
a690 7
Apda	|SV*	|newSViv	|const IV i
Apda	|SV*	|newSVuv	|const UV u
Apda	|SV*	|newSVnv	|const NV n
Apda	|SV*	|newSVpv	|NULLOK const char *const s|const STRLEN len
Apda	|SV*	|newSVpvn	|NULLOK const char *const s|const STRLEN len
Apda	|SV*	|newSVpvn_flags	|NULLOK const char *const s|const STRLEN len|const U32 flags
Apda	|SV*	|newSVhek	|NULLOK const HEK *const hek
d692 5
a696 5
Afpda	|SV*	|newSVpvf	|NN const char *const pat|...
Apa	|SV*	|vnewSVpvf	|NN const char *const pat|NULLOK va_list *const args
Apd	|SV*	|newSVrv	|NN SV *const rv|NULLOK const char *const classname
Apda	|SV*	|newSVsv	|NULLOK SV *const old
Apda	|SV*	|newSV_type	|const svtype type
d703 1
a703 1
Ap	|char*	|scan_vstring	|NN const char *s|NN const char *const e \
a705 3
Apd	|const char*	|prescan_version	|NN const char *s\
	|bool strict|NULLOK const char** errstr|NULLOK bool *sqv\
	|NULLOK int *ssaw_decimal|NULLOK int *swidth|NULLOK bool *salpha
d715 1
a715 1
AnpP	|char*	|ninstr		|NN const char* big|NN const char* bigend \
d717 1
a724 2
: Used in perly.y
p	|void	|package_version|NN OP* v
d728 1
a728 2
p	|PADOFFSET|allocmy	|NN const char *const name|const STRLEN len\
				|const U32 flags
d730 1
a730 1
AMpdR	|PADOFFSET|pad_findmy	|NN const char* name|STRLEN len|U32 flags
a737 1
#ifdef DEBUGGING
a738 1
#endif
d741 1
a741 3
#if defined(PERL_IN_PAD_C) || defined(PERL_DECL_PROT)
sd	|void	|pad_reset
#endif
d780 2
a781 2
#if defined(PERL_USES_PL_PIDSTATUS) && defined(PERL_IN_UTIL_C)
s	|void	|pidgone	|Pid_t pid|int status
d783 1
a783 1
DUXpo	|void	|pmflag		|NN U32 *pmfl|int ch
d786 1
a786 3
#if defined(PERL_IN_OP_C) || defined(PERL_DECL_PROT)
s	|OP*	|pmtrans	|NN OP* o|NN OP* expr|NN OP* repl
#endif
d792 1
a792 3
#if defined(PERL_IN_OP_C) || defined(PERL_DECL_PROT)
s	|OP*	|refkids	|NULLOK OP* o|I32 type
#endif
a801 1
Ap	|void	|pregfree2	|NN REGEXP *rx
d803 3
a805 2
EXp	|REGEXP*|reg_temp_copy	|NULLOK REGEXP* ret_x|NN REGEXP* rx
Ap	|void	|regfree_internal|NN REGEXP *const rx
d809 3
a811 3
Ap	|REGEXP*|pregcomp	|NN SV * const pattern|const U32 flags
Ap	|REGEXP*|re_compile	|NN SV * const pattern|U32 flags
Ap	|char*	|re_intuit_start|NN REGEXP * const rx|NULLOK SV* sv|NN char* strpos \
d814 2
a815 2
Ap	|SV*	|re_intuit_string|NN REGEXP  *const r
Ap	|I32	|regexec_flags	|NN REGEXP *const rx|NN char *stringarg \
d843 2
a844 2
Anp	|void	|repeatcpy	|NN char* to|NN const char* from|I32 len|I32 count
AnpP	|char*	|rninstr	|NN const char* big|NN const char* bigend \
d852 2
a853 5
#if defined(PERL_IN_PP_CTL_C) || defined(PERL_DECL_PROT)
s	|void	|rxres_free	|NN void** rsp
s	|void	|rxres_restore	|NN void **rsp|NN REGEXP *rx
#endif
: Used in pp_hot.c
d866 1
a866 2
Amp	|void	|save_aelem	|NN AV* av|I32 idx|NN SV **sptr
Ap	|void	|save_aelem_flags|NN AV* av|I32 idx|NN SV **sptr|const U32 flags
a872 2
Ap	|void	|save_hdelete	|NN HV *hv|NN SV *keysv
Ap	|void	|save_adelete	|NN AV *av|I32 key
d885 1
a885 2
Amp	|void	|save_helem	|NN HV *hv|NN SV *key|NN SV **sptr
Ap	|void	|save_helem_flags|NN HV *hv|NN SV *key|NN SV **sptr|const U32 flags
d903 1
d921 2
a922 4
#if defined(PERL_IN_OP_C) || defined(PERL_DECL_PROT)
s	|OP*	|scalarkids	|NULLOK OP* o
s	|OP*	|scalarseq	|NULLOK OP* o
#endif
d933 4
a936 1
Apd	|void	|setdefout	|NULLOK GV* gv
d950 3
a952 4
Apd	|bool	|sv_2bool	|NN SV *const sv
Apd	|CV*	|sv_2cv		|NULLOK SV* sv|NN HV **const st|NN GV **const gvp \
				|const I32 lref
Apd	|IO*	|sv_2io		|NN SV *const sv
d955 1
d957 4
a960 4
Amb	|IV	|sv_2iv		|NULLOK SV *sv
Apd	|IV	|sv_2iv_flags	|NULLOK SV *const sv|const I32 flags
Apd	|SV*	|sv_2mortal	|NULLOK SV *const sv
Apd	|NV	|sv_2nv		|NULLOK SV *const sv
d962 5
a966 5
pMd	|SV*	|sv_2num	|NN SV *const sv
Amb	|char*	|sv_2pv		|NULLOK SV *sv|NULLOK STRLEN *lp
Apd	|char*	|sv_2pv_flags	|NULLOK SV *const sv|NULLOK STRLEN *const lp|const I32 flags
Apd	|char*	|sv_2pvutf8	|NN SV *const sv|NULLOK STRLEN *const lp
Apd	|char*	|sv_2pvbyte	|NN SV *const sv|NULLOK STRLEN *const lp
d968 2
a969 2
Amb	|UV	|sv_2uv		|NULLOK SV *sv
Apd	|UV	|sv_2uv_flags	|NULLOK SV *const sv|const I32 flags
d976 7
a982 11
Apd	|I32	|sv_true	|NULLOK SV *const sv
#if defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
sd	|void	|sv_add_arena	|NN char *const ptr|const U32 size \
				|const U32 flags
#endif
Apd	|int	|sv_backoff	|NN SV *const sv
Apd	|SV*	|sv_bless	|NN SV *const sv|NN HV *const stash
Afpd	|void	|sv_catpvf	|NN SV *const sv|NN const char *const pat|...
Apd	|void	|sv_vcatpvf	|NN SV *const sv|NN const char *const pat \
				|NULLOK va_list *const args
Apd	|void	|sv_catpv	|NN SV *const sv|NULLOK const char* ptr
d985 1
a985 1
Apd	|void	|sv_chop	|NN SV *const sv|NULLOK const char *const ptr
d990 3
a992 3
Apd	|void	|sv_clear	|NN SV *const sv
Apd	|I32	|sv_cmp		|NULLOK SV *const sv1|NULLOK SV *const sv2
Apd	|I32	|sv_cmp_locale	|NULLOK SV *const sv1|NULLOK SV *const sv2
d994 1
a994 1
Apd	|char*	|sv_collxfrm	|NN SV *const sv|NN STRLEN *const nxp
d999 1
a999 1
Apd	|void	|sv_dec		|NULLOK SV *const sv
d1001 2
a1002 2
ApdR	|bool	|sv_derived_from|NN SV* sv|NN const char *const name
ApdR	|bool	|sv_does	|NN SV* sv|NN const char *const name
d1004 1
a1004 1
Apd	|void	|sv_free	|NULLOK SV *const sv
d1007 1
a1007 1
poMX	|void	|sv_free2	|NN SV *const sv
d1010 6
a1015 6
Apd	|char*	|sv_gets	|NN SV *const sv|NN PerlIO *const fp|I32 append
Apd	|char*	|sv_grow	|NN SV *const sv|STRLEN newlen
Apd	|void	|sv_inc		|NULLOK SV *const sv
Amdb	|void	|sv_insert	|NN SV *const bigstr|const STRLEN offset \
				|const STRLEN len|NN const char *const little \
				|const STRLEN littlelen
d1018 1
a1018 1
Apd	|int	|sv_isa		|NULLOK SV* sv|NN const char *const name
d1020 7
a1026 8
Apd	|STRLEN	|sv_len		|NULLOK SV *const sv
Apd	|STRLEN	|sv_len_utf8	|NULLOK SV *const sv
Apd	|void	|sv_magic	|NN SV *const sv|NULLOK SV *const obj|const int how \
				|NULLOK const char *const name|const I32 namlen
Apd	|MAGIC *|sv_magicext	|NN SV *const sv|NULLOK SV *const obj|const int how \
				|NULLOK const MGVTBL *const vtbl|NULLOK const char *const name \
				|const I32 namlen
ApdaR	|SV*	|sv_mortalcopy	|NULLOK SV *const oldsv
d1028 1
a1028 1
Apd	|SV*	|sv_newref	|NULLOK SV *const sv
d1030 2
a1031 4
Apd	|void	|sv_pos_u2b	|NULLOK SV *const sv|NN I32 *const offsetp|NULLOK I32 *const lenp
Apd	|STRLEN	|sv_pos_u2b_flags|NN SV *const sv|STRLEN uoffset \
				|NULLOK STRLEN *const lenp|U32 flags
Apd	|void	|sv_pos_b2u	|NULLOK SV *const sv|NN I32 *const offsetp
d1033 2
a1034 2
Apd	|char*	|sv_pvutf8n_force|NN SV *const sv|NULLOK STRLEN *const lp
Apd	|char*	|sv_pvbyten_force|NN SV *const sv|NULLOK STRLEN *const lp
d1038 2
a1039 2
ApdR	|const char*	|sv_reftype	|NN const SV *const sv|const int ob
Apd	|void	|sv_replace	|NN SV *const sv|NN SV *const nsv
d1041 14
a1054 16
Apd	|void	|sv_reset	|NN const char* s|NULLOK HV *const stash
Afpd	|void	|sv_setpvf	|NN SV *const sv|NN const char *const pat|...
Apd	|void	|sv_vsetpvf	|NN SV *const sv|NN const char *const pat|NULLOK va_list *const args
Apd	|void	|sv_setiv	|NN SV *const sv|const IV num
Apdb	|void	|sv_setpviv	|NN SV *const sv|const IV num
Apd	|void	|sv_setuv	|NN SV *const sv|const UV num
Apd	|void	|sv_setnv	|NN SV *const sv|const NV num
Apd	|SV*	|sv_setref_iv	|NN SV *const rv|NULLOK const char *const classname|const IV iv
Apd	|SV*	|sv_setref_uv	|NN SV *const rv|NULLOK const char *const classname|const UV uv
Apd	|SV*	|sv_setref_nv	|NN SV *const rv|NULLOK const char *const classname|const NV nv
Apd	|SV*	|sv_setref_pv	|NN SV *const rv|NULLOK const char *const classname \
				|NULLOK void *const pv
Apd	|SV*	|sv_setref_pvn	|NN SV *const rv|NULLOK const char *const classname \
				|NN const char *const pv|const STRLEN n
Apd	|void	|sv_setpv	|NN SV *const sv|NULLOK const char *const ptr
Apd	|void	|sv_setpvn	|NN SV *const sv|NULLOK const char *const ptr|const STRLEN len
d1057 2
a1058 2
ApdR	|bool	|sv_tainted	|NN SV *const sv
Apd	|int	|sv_unmagic	|NN SV *const sv|const int type
d1060 3
a1062 3
Apd	|void	|sv_unref_flags	|NN SV *const ref|const U32 flags
Apd	|void	|sv_untaint	|NN SV *const sv
Apd	|void	|sv_upgrade	|NN SV *const sv|svtype new_type
d1064 8
a1071 8
Apd	|void	|sv_usepvn_flags|NN SV *const sv|NULLOK char* ptr|const STRLEN len\
				|const U32 flags
Apd	|void	|sv_vcatpvfn	|NN SV *const sv|NN const char *const pat|const STRLEN patlen \
				|NULLOK va_list *const args|NULLOK SV **const svargs|const I32 svmax \
				|NULLOK bool *const maybe_tainted
Apd	|void	|sv_vsetpvfn	|NN SV *const sv|NN const char *const pat|const STRLEN patlen \
				|NULLOK va_list *const args|NULLOK SV **const svargs \
				|const I32 svmax|NULLOK bool *const maybe_tainted
d1076 1
a1076 1
Ap	|void	|taint_proper	|NULLOK const char* f|NN const char *const s
d1145 1
a1145 1
XEpd	|void	|report_uninit	|NULLOK const SV *uninit_sv
a1148 2
Afp	|void	|ck_warner	|U32 err|NN const char* pat|...
Afp	|void	|ck_warner_d	|U32 err|NN const char* pat|...
d1154 1
a1154 1
p	|void	|write_to_stderr|NN SV* msv
d1156 1
a1156 1
p	|int	|yyerror	|NN const char *const s
d1163 1
a1163 3
#if defined(PERL_IN_TOKE_C) || defined(PERL_DECL_PROT)
s	|int	|yywarn		|NN const char *const s
#endif
d1165 1
a1165 1
Ap	|void	|dump_mstats	|NN const char* s
d1179 3
a1181 4
Afpd	|void	|sv_catpvf_mg	|NN SV *const sv|NN const char *const pat|...
Apd	|void	|sv_vcatpvf_mg	|NN SV *const sv|NN const char *const pat \
				|NULLOK va_list *const args
Apd	|void	|sv_catpv_mg	|NN SV *const sv|NULLOK const char *const ptr
d1184 9
a1192 10
Afpd	|void	|sv_setpvf_mg	|NN SV *const sv|NN const char *const pat|...
Apd	|void	|sv_vsetpvf_mg	|NN SV *const sv|NN const char *const pat \
				|NULLOK va_list *const args
Apd	|void	|sv_setiv_mg	|NN SV *const sv|const IV i
Apdb	|void	|sv_setpviv_mg	|NN SV *const sv|const IV iv
Apd	|void	|sv_setuv_mg	|NN SV *const sv|const UV u
Apd	|void	|sv_setnv_mg	|NN SV *const sv|const NV num
Apd	|void	|sv_setpv_mg	|NN SV *const sv|NULLOK const char *const ptr
Apd	|void	|sv_setpvn_mg	|NN SV *const sv|NN const char *const ptr|const STRLEN len
Apd	|void	|sv_setsv_mg	|NN SV *const dstr|NULLOK SV *const sstr
d1230 1
d1232 2
a1233 3
ApdM	|bool	|sv_utf8_downgrade|NN SV *const sv|const bool fail_ok
Apd	|void	|sv_utf8_encode |NN SV *const sv
ApdM	|bool	|sv_utf8_decode |NN SV *const sv
d1235 1
a1235 1
Apd	|void	|sv_force_normal_flags|NN SV *const sv|const U32 flags
d1237 1
a1237 1
Apd	|SV*	|sv_rvweaken	|NN SV *const sv
d1250 2
d1259 8
a1266 13
Ap	|void	|re_dup_guts	|NN const REGEXP *sstr|NN REGEXP *dstr \
				|NN CLONE_PARAMS* param
Ap	|PerlIO*|fp_dup		|NULLOK PerlIO *const fp|const char type|NN CLONE_PARAMS *const param
ApR	|DIR*	|dirp_dup	|NULLOK DIR *const dp
ApR	|GP*	|gp_dup		|NULLOK GP *const gp|NN CLONE_PARAMS *const param
ApR	|MAGIC*	|mg_dup		|NULLOK MAGIC *mg|NN CLONE_PARAMS *const param
#if defined(PERL_IN_SV_C) || defined(PERL_DECL_PROT)
s	|SV **	|sv_dup_inc_multiple|NN SV *const *source|NN SV **dest \
				|SSize_t items|NN CLONE_PARAMS *const param
#endif
ApR	|SV*	|sv_dup		|NULLOK const SV *const sstr|NN CLONE_PARAMS *const param
Ap	|void	|rvpv_dup	|NN SV *const dstr|NN const SV *const sstr|NN CLONE_PARAMS *const param
Ap	|yy_parser*|parser_dup	|NULLOK const yy_parser *const proto|NN CLONE_PARAMS *const param
d1269 5
a1273 6
ApR	|void*	|ptr_table_fetch|NN PTR_TBL_t *const tbl|NULLOK const void *const sv
Ap	|void	|ptr_table_store|NN PTR_TBL_t *const tbl|NULLOK const void *const oldsv \
				|NN void *const newsv
Ap	|void	|ptr_table_split|NN PTR_TBL_t *const tbl
Ap	|void	|ptr_table_clear|NULLOK PTR_TBL_t *const tbl
Ap	|void	|ptr_table_free|NULLOK PTR_TBL_t *const tbl
d1309 1
a1309 1
s	|void	|gv_init_sv	|NN GV *gv|const svtype sv_type
d1317 1
a1317 1
paRxoM	|void*	|get_arena	|const size_t arenasize |const svtype bodytype
a1322 1
s	|I32	|anonymise_cv	|NULLOK HEK *stash|NN SV *val
d1366 1
a1389 1
pR	|OP*	|ck_each	|NN OP *o
d1443 1
a1443 3
s	|void	|incpush	|NN const char *const dir|STRLEN len \
				|U32 flags
s	|void	|incpush_use_sep|NN const char *p|STRLEN len|U32 flags
d1453 1
a1453 1
				|NN bool *suidscript|NN PerlIO **rsfpp
d1455 14
a1468 1
#ifndef SETUID_SCRIPTS_ARE_SECURE_NOW
d1470 1
d1473 3
d1478 1
a1478 1
s	|SV *	|incpush_if_exists|NN AV *const av|NN SV *dir|NN SV *const stem
a1481 1
s	|OP*	|do_delete_local
d1487 1
a1487 1
				|const svtype type|NN SV ***spp
d1539 9
a1547 9
s	|I32	|sv_ncmp	|NN SV *const a|NN SV *const b
s	|I32	|sv_i_ncmp	|NN SV *const a|NN SV *const b
s	|I32	|amagic_ncmp	|NN SV *const a|NN SV *const b
s	|I32	|amagic_i_ncmp	|NN SV *const a|NN SV *const b
s	|I32	|amagic_cmp	|NN SV *const str1|NN SV *const str2
s	|I32	|amagic_cmp_locale|NN SV *const str1|NN SV *const str2
s	|I32	|sortcv		|NN SV *const a|NN SV *const b
s	|I32	|sortcv_xsub	|NN SV *const a|NN SV *const b
s	|I32	|sortcv_stacked	|NN SV *const a|NN SV *const b
d1571 1
d1577 1
a1577 1
				|NULLOK UV *valuep|NULLOK I32 *flagp
d1661 1
d1685 1
a1685 1
s	|SV*	|save_scalar_at	|NN SV **sptr|const U32 flags
d1690 1
a1690 1
po	|void	|sv_add_backref	|NN SV *const tsv|NN SV *const sv
d1695 1
a1695 1
poM	|int	|sv_kill_backrefs	|NN SV *const sv|NN AV *const av
d1699 7
a1705 8
nsR	|char *	|uiv_2buf	|NN char *const buf|const IV iv|UV uv|const int is_uv|NN char **const peob
s	|void	|sv_unglob	|NN SV *const sv
s	|void	|not_a_number	|NN SV *const sv
s	|I32	|visit		|NN SVFUNC_t f|const U32 flags|const U32 mask
s	|void	|sv_del_backref	|NN SV *const tsv|NN SV *const sv
sR	|SV *	|varname	|NULLOK const GV *const gv|const char gvtype \
				|PADOFFSET targ|NULLOK const SV *const keyname \
				|I32 aindex|int subscript_type
d1711 1
a1711 1
s	|int	|sv_2iuv_non_preserve	|NN SV *const sv|I32 numtype
d1713 1
a1713 1
s	|int	|sv_2iuv_non_preserve	|NN SV *const sv
d1716 1
a1716 1
sR	|I32	|expect_number	|NN char **const pattern
d1721 2
a1722 2
		|NN const U8 *send|const STRLEN uoffset|const STRLEN uend
s	|STRLEN	|sv_pos_u2b_cached|NN SV *const sv|NN MAGIC **const mgp \
d1724 4
a1727 4
		|const STRLEN uoffset|STRLEN uoffset0|STRLEN boffset0
s	|void	|utf8_mg_pos_cache_update|NN SV *const sv|NN MAGIC **const mgp \
		|const STRLEN byte|const STRLEN utf8|const STRLEN blen
s	|STRLEN	|sv_pos_b2u_midway|NN const U8 *const s|NN const U8 *const target \
d1729 1
a1729 1
sn	|char *	|F0convert	|NV nv|NN char *const endbuf|NN STRLEN *const len
d1734 5
a1738 6
s	|void *	|more_bodies	|const svtype sv_type
s	|bool	|sv_2iuv_common	|NN SV *const sv
s	|void	|glob_assign_glob|NN SV *const dstr|NN SV *const sstr \
		|const int dtype
s	|void	|glob_assign_ref|NN SV *const dstr|NN SV *const sstr
sRn	|PTR_TBL_ENT_t *|ptr_table_find|NN PTR_TBL_t *const tbl|NULLOK const void *const sv
a1744 1
s	|char*	|force_strict_version	|NN char *s
d1762 1
a1762 1
				|NULLOK const char *const buf|STRLEN len
a1764 4
#ifndef PERL_NO_UTF16_FILTER
s	|I32	|utf16_textfilter|int idx|NN SV *sv|int maxlen
s	|U8*	|add_utf16_textfilter|NN U8 *const s|bool reversed
#endif
d1767 1
a1767 1
s	|bool	|feature_is_enabled|NN const char *const name|STRLEN namelen
d1774 1
a1774 1
s	|void	|no_op		|NN const char *const what|NULLOK char *s
d1778 1
a1778 1
sR	|char *	|filter_gets	|NN SV *sv|STRLEN append
a1784 1
s	|int	|deprecate_commaless_var_list
d1792 1
a1792 1
s	|void	|printbuf	|NN const char *const fmt|NN const char *const s
d1810 4
a1813 2
s	|SV *|vdie_croak_common|NULLOK const char *pat|NULLOK va_list *args
s	|bool	|vdie_common	|NULLOK SV *message|bool warn
d1815 1
a1815 1
#if defined(PERL_MEM_LOG) && !defined(PERL_MEM_LOG_NOIMPL)
d1836 7
a1842 8
Apd	|void	|sv_setsv_flags	|NN SV *dstr|NULLOK SV *sstr|const I32 flags
Apd	|void	|sv_catpvn_flags|NN SV *const dstr|NN const char *sstr|const STRLEN len \
				|const I32 flags
Apd	|void	|sv_catsv_flags	|NN SV *const dsv|NULLOK SV *const ssv|const I32 flags
Apmd	|STRLEN	|sv_utf8_upgrade_flags|NN SV *const sv|const I32 flags
Ap	|STRLEN	|sv_utf8_upgrade_flags_grow|NN SV *const sv|const I32 flags|STRLEN extra
Apd	|char*	|sv_pvn_force_flags|NN SV *const sv|NULLOK STRLEN *const lp|const I32 flags
Apd	|void	|sv_copypv	|NN SV *const dsv|NN SV *const ssv
d1896 2
a1897 3
Mpd	|PADOFFSET|pad_add_name	|NN const char *name|const STRLEN len\
				|const U32 flags|NULLOK HV *typestash\
				|NULLOK HV *ourstash
d1900 2
a1901 4
#if defined(PERL_IN_PAD_C) || defined(PERL_DECL_PROT)
sd	|void	|pad_check_dup	|NN SV *name|const U32 flags \
				|NULLOK const HV *ourstash
#endif
a1923 2
s	|PADOFFSET|pad_add_name_sv|NN SV *namesv|const U32 flags \
				|NULLOK HV *typestash|NULLOK HV *ourstash
a1935 1
#ifdef DEBUGGING
a1936 1
#endif
d1952 1
a1952 1
ApoR	|I32	|hv_placeholders_get	|NN const HV *hv
d1959 3
a1961 6
s	|SV *	|find_hash_subscript|NULLOK const HV *const hv \
		|NN const SV *const val
s	|I32	|find_array_subscript|NULLOK const AV *const av \
		|NN const SV *const val
sMd	|SV*	|find_uninit_var|NULLOK const OP *const obase \
		|NULLOK const SV *const uninit_sv|bool top
d2042 2
a2043 2
Ap	|GV*	|gv_fetchpvn_flags|NN const char* name|STRLEN len|I32 flags|const svtype sv_type
Ap	|GV*	|gv_fetchsv|NN SV *name|I32 flags|const svtype sv_type
d2045 1
a2045 1
dpR	|bool	|is_gv_magical_sv|NN SV *const name_sv|U32 flags
d2055 1
a2055 4
Apbm	|GV*	|gv_SVadd	|NULLOK GV *gv
#endif
#if defined(PERL_IN_UTIL_C) || defined(PERL_DECL_PROT)
s	|bool	|ckwarn_common	|U32 w
d2064 1
a2064 1
p	|void	|offer_nice_chunk	|NN void *const chunk|const U32 chunk_size
a2103 1
p	|void	|xmldump_all_perl	|bool justperl
a2104 1
p	|void	|xmldump_packsubs_perl	|NN const HV* stash|bool justperl
a2105 1
Mp	|void	|xmldump_sub_perl	|NN const GV* gv|bool justperl
d2128 1
a2128 1
Mp	|MADPROP*|newMADPROP	|char key|char type|NULLOK void* val \
a2177 7
ApoM	|const char *|fetch_cop_label|NULLOK struct refcounted_he *const chain \
		|NULLOK STRLEN *len|NULLOK U32 *flags
: Only used  in op.c
xpoM	|struct refcounted_he *|store_cop_label \
		|NULLOK struct refcounted_he *const chain|NN const char *label

xpo	|int	|keyword_plugin_standard|NN char* keyword_ptr|STRLEN keyword_len|NN OP** op_ptr
@


1.1.1.10
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d1 1
a1 1
: BEGIN{die "You meant to run regen/embed.pl"} # Stop early if fed to perl.
d3 1
a3 1
: This file is processed by regen/embed.pl and autodoc.pl
d15 2
a16 2
:         add entry to the list of exported symbols (unless x or m);
:         any doc entry goes in perlapi.pod rather than perlintern.pod
d24 1
a24 2
:      but has also Perl_ implementation (which is exported); often
:      implemented in mathoms.c:
d26 1
a26 1
:         add entry to the list of exported symbols;
d33 1
a33 1
:   d  Function has documentation in the source:
a48 6
:   i  Static inline: function in source code has a S_ prefix:
:
:         proto.h: function is declared as S_foo rather than foo,
:                PERL_STATIC_INLINE is added to declaration;
:         embed.h: "#define foo S_foo" entries added
:
d51 1
a51 1
:         any doc entry is marked that function may change
d56 1
a56 1
:         suppress entry in the list of exported symbols
a65 4
:   O  Has a perl_ compatibility macro.
:
:      The really OLD name for API funcs
:
d100 1
a100 1
:         add entry to the list of exported symbols, unless x or m
d104 1
a104 1
:         suppress entry in the list of exported symbols
d117 2
d168 1
d170 5
a174 2
XEop	|bool	|try_amagic_bin	|int method|int flags
XEop	|bool	|try_amagic_un	|int method|int flags
a175 2
Ap	|SV *	|amagic_deref_call|NN SV *ref|int method
p	|bool	|amagic_is_enabled|int method
d178 4
a181 4
Apd	|OP*	|op_append_elem	|I32 optype|NULLOK OP* first|NULLOK OP* last
Apd	|OP*	|op_append_list	|I32 optype|NULLOK OP* first|NULLOK OP* last
Apd	|OP*	|op_linklist	|NN OP *o
Apd	|OP*	|op_prepend_elem|I32 optype|NULLOK OP* first|NULLOK OP* last
d205 1
a205 1
#if defined(PERL_IN_AV_C)
a214 1
Aodp	|void	|blockhook_register |NN BHK *hk
d220 1
a220 3
Apd	|const PERL_CONTEXT *	|caller_cx|I32 level \
				|NULLOK const PERL_CONTEXT **dbcxp
: Used in several source files
a232 1
Aprd	|void	|croak_sv	|NN SV *baseex
d235 1
a235 2
Aprd	|void	|vcroak		|NULLOK const char* pat|NULLOK va_list* args
Aprd	|void	|croak_no_modify
a255 6
: Used in pp.c
p	|SV *	|core_prototype	|NULLOK SV *sv|NN const char *name \
				|const int code|NULLOK int * const opnum
: Used in gv.c
p	|OP *	|coresub_op	|NN SV *coreargssv|const int code \
				|const int opnum
d257 2
a258 3
p	|void	|cv_ckproto_len_flags	|NN const CV* cv|NULLOK const GV* gv\
				|NULLOK const char* p|const STRLEN len \
                                |const U32 flags
d260 1
d289 4
a292 2
Apd	|OP*	|die_sv		|NN SV *baseex
Afpd	|OP*	|die		|NULLOK const char* pat|...
d294 1
a294 1
pr	|void	|die_unwind	|NN SV* msv
d302 1
d308 1
a308 1
pm	|bool	|do_exec	|NN const char* cmd
d322 1
a322 1
#if defined(PERL_IN_DOIO_C)
d340 2
a341 4
: Used in pp.c and pp_hot.c, prototype generated by regen/opcode.pl
: p	|OP*	|do_kv
: used in pp.c, pp_hot.c
pR	|I32	|do_ncmp	|NN SV *const left|NN SV *const right
d355 2
d395 1
a395 1
#if defined(PERL_IN_OP_C)
a396 2
i	|OP*	|op_integerize	|NN OP *o
i	|OP*	|op_std_init	|NN OP *o
d403 1
a403 1
#if defined(PERL_IN_OP_C)
d418 1
a418 7
AmR	|GV*	|gv_autoload4	|NULLOK HV* stash|NN const char* name \
				|STRLEN len|I32 method
ApR	|GV*	|gv_autoload_sv	|NULLOK HV* stash|NN SV* namesv|U32 flags
ApR	|GV*	|gv_autoload_pv	|NULLOK HV* stash|NN const char* namepv \
                                |U32 flags
ApR	|GV*	|gv_autoload_pvn	|NULLOK HV* stash|NN const char* name \
                                        |STRLEN len|U32 flags
d426 2
a427 15
Amd	|GV*	|gv_fetchmeth	|NULLOK HV* stash|NN const char* name \
				|STRLEN len|I32 level
Apd	|GV*	|gv_fetchmeth_sv	|NULLOK HV* stash|NN SV* namesv|I32 level|U32 flags
Apd	|GV*	|gv_fetchmeth_pv	|NULLOK HV* stash|NN const char* name \
                                        |I32 level|U32 flags
Apd	|GV*	|gv_fetchmeth_pvn	|NULLOK HV* stash|NN const char* name \
                                        |STRLEN len|I32 level|U32 flags
Amd	|GV*	|gv_fetchmeth_autoload	|NULLOK HV* stash \
					|NN const char* name|STRLEN len \
					|I32 level
Apd	|GV*	|gv_fetchmeth_sv_autoload	|NULLOK HV* stash|NN SV* namesv|I32 level|U32 flags
Apd	|GV*	|gv_fetchmeth_pv_autoload	|NULLOK HV* stash|NN const char* name \
                                        |I32 level|U32 flags
Apd	|GV*	|gv_fetchmeth_pvn_autoload	|NULLOK HV* stash|NN const char* name \
                                        |STRLEN len|I32 level|U32 flags
d431 2
a432 5
ApM	|GV*	|gv_fetchmethod_sv_flags|NN HV* stash|NN SV* namesv|U32 flags
ApM	|GV*	|gv_fetchmethod_pv_flags|NN HV* stash|NN const char* name \
 				|U32 flags
ApM	|GV*	|gv_fetchmethod_pvn_flags|NN HV* stash|NN const char* name \
				|const STRLEN len|U32 flags
d439 1
a439 9
pX	|void	|cvgv_set	|NN CV* cv|NULLOK GV* gv
pX	|void	|cvstash_set	|NN CV* cv|NULLOK HV* stash
Amd	|void	|gv_init	|NN GV* gv|NULLOK HV* stash \
                                |NN const char* name|STRLEN len|int multi
Ap	|void	|gv_init_sv	|NN GV* gv|NULLOK HV* stash|NN SV* namesv|U32 flags
Ap	|void	|gv_init_pv	|NN GV* gv|NULLOK HV* stash|NN const char* name \
                                |U32 flags
Ap	|void	|gv_init_pvn	|NN GV* gv|NULLOK HV* stash|NN const char* name \
                                |STRLEN len|U32 flags
d447 1
a447 1
ApdR	|HV *	|hv_copy_hints_hv|NULLOK HV *const ohv
a462 1
Apod	|STRLEN	|hv_fill	|NN HV const *const hv
d473 19
a491 2
#if defined(PERL_IN_HV_C)
s	|SV *	|refcounted_he_value	|NN const struct refcounted_he *he
a492 21
Xpd	|HV *	|refcounted_he_chain_2hv|NULLOK const struct refcounted_he *c|U32 flags
Xpd	|SV *	|refcounted_he_fetch_pvn|NULLOK const struct refcounted_he *chain \
				|NN const char *keypv|STRLEN keylen|U32 hash|U32 flags
Xpd	|SV *	|refcounted_he_fetch_pv|NULLOK const struct refcounted_he *chain \
				|NN const char *key|U32 hash|U32 flags
Xpd	|SV *	|refcounted_he_fetch_sv|NULLOK const struct refcounted_he *chain \
				|NN SV *key|U32 hash|U32 flags
Xpd	|struct refcounted_he *|refcounted_he_new_pvn \
				|NULLOK struct refcounted_he *parent \
				|NN const char *keypv|STRLEN keylen \
				|U32 hash|NULLOK SV *value|U32 flags
Xpd	|struct refcounted_he *|refcounted_he_new_pv \
				|NULLOK struct refcounted_he *parent \
				|NN const char *key \
				|U32 hash|NULLOK SV *value|U32 flags
Xpd	|struct refcounted_he *|refcounted_he_new_sv \
				|NULLOK struct refcounted_he *parent \
				|NN SV *key \
				|U32 hash|NULLOK SV *value|U32 flags
Xpd	|void	|refcounted_he_free|NULLOK struct refcounted_he *he
Xpd	|struct refcounted_he *|refcounted_he_inc|NULLOK struct refcounted_he *he
d499 4
a502 7
Amd	|void	|hv_undef	|NULLOK HV *hv
poX	|void	|hv_undef_flags	|NULLOK HV *hv|U32 flags
Am	|I32	|ibcmp		|NN const char* a|NN const char* b|I32 len
AnpP	|I32	|foldEQ		|NN const char* a|NN const char* b|I32 len
Am	|I32	|ibcmp_locale	|NN const char* a|NN const char* b|I32 len
AnpP	|I32	|foldEQ_locale	|NN const char* a|NN const char* b|I32 len
Am	|I32	|ibcmp_utf8	|NN const char *s1|NULLOK char **pe1|UV l1 \
d505 1
a505 8
Amd	|I32	|foldEQ_utf8	|NN const char *s1|NULLOK char **pe1|UV l1 \
				|bool u1|NN const char *s2|NULLOK char **pe2 \
				|UV l2|bool u2
AMp	|I32	|foldEQ_utf8_flags |NN const char *s1|NULLOK char **pe1|UV l1 \
				|bool u1|NN const char *s2|NULLOK char **pe2 \
				|UV l2|bool u2|U32 flags
AnpP	|I32	|foldEQ_latin1	|NN const char* a|NN const char* b|I32 len
#if defined(PERL_IN_DOIO_C)
d517 1
a523 2
: Used in cop.h
XopR	|I32	|was_lvalue_sub
a541 10
#ifdef PERL_IN_UTF8_C
sR	|U8	|to_lower_latin1|const U8 c|NULLOK U8 *p|NULLOK STRLEN *lenp
#endif
#if defined(PERL_IN_UTF8_C) || defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_REGEXEC_C)
EXp        |UV        |_to_fold_latin1|const U8 c|NN U8 *p|NN STRLEN *lenp|const bool flags
#endif
#if defined(PERL_IN_UTF8_C) || defined(PERL_IN_PP_C)
p	|UV	|_to_upper_title_latin1|const U8 c|NN U8 *p|NN STRLEN *lenp|const char S_or_s
ApR	|bool	|_is_utf8_quotemeta|NN const U8 *p
#endif
d543 1
a543 2
Amp	|UV	|to_uni_fold	|UV c|NN U8 *p|NN STRLEN *lenp
AMp	|UV	|_to_uni_fold_flags|UV c|NN U8 *p|NN STRLEN *lenp|const bool flags
d558 1
a558 2
AnpdD	|STRLEN	|is_utf8_char	|NN const U8 *s
Anpd	|STRLEN	|is_utf8_char_buf|NN const U8 *buf|NN const U8 *buf_end
a563 2
ApR	|bool	|is_utf8_xidfirst|NN const U8 *p
EXpR	|bool	|_is_utf8__perl_idstart|NN const U8 *p
a564 1
ApR	|bool	|is_utf8_xidcont	|NN const U8 *p
d594 1
a594 1
#if defined(PERL_IN_OP_C)
d596 1
a596 1
s	|void	|inplace_aassign	|NN OP* o
d599 4
a603 1
AMpd	|void	|lex_start	|NULLOK SV* line|NULLOK PerlIO *rsfp|U32 flags
d606 1
a606 2
AMpd	|void	|lex_stuff_pvn	|NN const char* pv|STRLEN len|U32 flags
AMpd	|void	|lex_stuff_pv	|NN const char* pv|U32 flags
a614 10
: Public parser API
AMpd	|OP*	|parse_arithexpr|U32 flags
AMpd	|OP*	|parse_termexpr	|U32 flags
AMpd	|OP*	|parse_listexpr	|U32 flags
AMpd	|OP*	|parse_fullexpr	|U32 flags
AMpd	|OP*	|parse_block	|U32 flags
AMpd	|OP*	|parse_barestmt	|U32 flags
AMpd	|SV*	|parse_label	|U32 flags
AMpd	|OP*	|parse_fullstmt	|U32 flags
AMpd	|OP*	|parse_stmtseq	|U32 flags
d621 2
a622 1
#if defined(PERL_IN_OP_C)
a632 4
#ifdef PERL_IN_DQUOTE_STATIC_C
EMsR	|char	|grok_bslash_c	|const char source|const bool utf8|const bool output_warning
EMsR	|bool	|grok_bslash_o	|NN const char* s|NN UV* uv|NN STRLEN* len|NN const char** error_msg|const bool output_warning
#endif
a682 1
p	|int	|magic_setvstring|NN SV* sv|NN MAGIC* mg
a685 3
pod	|SV*	|magic_methcall	|NN SV *sv|NN const MAGIC *mg \
				|NN const char *meth|U32 flags \
				|U32 argc|...
d692 2
a693 3
Afpd	|SV*	|mess		|NN const char* pat|...
Apd	|SV*	|mess_sv	|NN SV* basemsg|bool consume
Apd	|SV*	|vmess		|NN const char* pat|NULLOK va_list* args
a704 1
ApdR	|MAGIC*	|mg_findext	|NULLOK const SV* sv|int type|NULLOK const MGVTBL *vtbl
a705 1
Apd	|void	|mg_free_type	|NN SV* sv|int how
d712 2
a713 6
AMmd	|OP*	|op_lvalue	|NULLOK OP* o|I32 type
poX	|OP*	|op_lvalue_flags|NULLOK OP* o|I32 type|U32 flags
p	|void	|finalize_optree		|NN OP* o
#if defined(PERL_IN_OP_C)
s	|void	|finalize_op	|NN OP* o
#endif
d730 1
a730 2
Apmb	|I32	|my_lstat
pX	|I32	|my_lstat_flags	|NULLOK const U32 flags
a736 1
#if !defined(PERL_IMPLICIT_SYS)
a738 1
#endif
d741 1
a741 2
Apmb	|I32	|my_stat
pX	|I32	|my_stat_flags	|NULLOK const U32 flags
d753 2
a754 5
#if defined(PERL_IN_OP_C)
i	|bool	|aassign_common_vars	|NULLOK OP* o
#endif
Apda	|OP*	|newASSIGNOP	|I32 flags|NULLOK OP* left|I32 optype|NULLOK OP* right
Apda	|OP*	|newCONDOP	|I32 flags|NN OP* first|NULLOK OP* trueop|NULLOK OP* falseop
a755 3
Apd	|CV*	|newCONSTSUB_flags|NULLOK HV* stash \
				  |NULLOK const char* name|STRLEN len \
				  |U32 flags|NULLOK SV* sv
d761 8
a768 7
Apda	|OP*	|newFOROP	|I32 flags|NULLOK OP* sv|NN OP* expr|NULLOK OP* block|NULLOK OP* cont
Apda	|OP*	|newGIVENOP	|NN OP* cond|NN OP* block|PADOFFSET defsv_off
Apda	|OP*	|newLOGOP	|I32 optype|I32 flags|NN OP *first|NN OP *other
Apda	|OP*	|newLOOPEX	|I32 type|NN OP* label
Apda	|OP*	|newLOOPOP	|I32 flags|I32 debuggable|NULLOK OP* expr|NULLOK OP* block
Apda	|OP*	|newNULLLIST
Apda	|OP*	|newOP		|I32 optype|I32 flags
d770 4
a773 10
Apda	|OP*	|newRANGE	|I32 flags|NN OP* left|NN OP* right
Apda	|OP*	|newSLICEOP	|I32 flags|NULLOK OP* subscript|NULLOK OP* listop
Apda	|OP*	|newSTATEOP	|I32 flags|NULLOK char* label|NULLOK OP* o
Abm	|CV*	|newSUB		|I32 floor|NULLOK OP* o|NULLOK OP* proto \
				|NULLOK OP* block
p	|CV *	|newXS_len_flags|NULLOK const char *name|STRLEN len \
				|NN XSUBADDR_t subaddr\
				|NN const char *const filename \
				|NULLOK const char *const proto \
				|NULLOK SV **const_svp|U32 flags
d781 1
a781 1
Apda	|OP*	|newBINOP	|I32 type|I32 flags|NULLOK OP* first|NULLOK OP* last
d783 2
a784 3
Apda	|OP*	|newGVOP	|I32 type|I32 flags|NN GV* gv
Am	|GV*	|newGVgen	|NN const char* pack
Apa	|GV*	|newGVgen_flags	|NN const char* pack|U32 flags
d790 1
a790 1
Apda	|OP*	|newLISTOP	|I32 type|I32 flags|NULLOK OP* first|NULLOK OP* last
d792 1
a792 1
Apda	|OP*	|newPADOP	|I32 type|I32 flags|NN SV* sv
d794 2
a795 2
Apda	|OP*	|newPMOP	|I32 type|I32 flags
Apda	|OP*	|newPVOP	|I32 type|I32 flags|NULLOK char* pv
d800 1
a800 1
Apda	|OP*	|newSVOP	|I32 type|I32 flags|NN SV* sv
a808 1
Apda	|SV*	|newSVpv_share	|NULLOK const char* s|U32 hash
d814 4
a817 4
Apda	|OP*	|newUNOP	|I32 type|I32 flags|NULLOK OP* first
Apda	|OP*	|newWHENOP	|NULLOK OP* cond|NN OP* block
Apda	|OP*	|newWHILEOP	|I32 flags|I32 debuggable|NULLOK LOOP* loop \
				|NULLOK OP* expr|NULLOK OP* block|NULLOK OP* cont \
a818 9
Apd	|CV*	|rv2cv_op_cv	|NN OP *cvop|U32 flags
Apd	|OP*	|ck_entersub_args_list|NN OP *entersubop
Apd	|OP*	|ck_entersub_args_proto|NN OP *entersubop|NN GV *namegv|NN SV *protosv
Apd	|OP*	|ck_entersub_args_proto_or_list|NN OP *entersubop|NN GV *namegv|NN SV *protosv
po	|OP*	|ck_entersub_args_core|NN OP *entersubop|NN GV *namegv \
				      |NN SV *protosv
Apd	|void	|cv_get_call_checker|NN CV *cv|NN Perl_call_checker *ckfun_p|NN SV **ckobj_p
Apd	|void	|cv_set_call_checker|NN CV *cv|NN Perl_call_checker ckfun|NN SV *ckobj
Apd	|void	|wrap_op_checker|Optype opcode|NN Perl_check_t new_checker|NN Perl_check_t *old_checker_p
d828 1
a828 1
Apd	|SV*	|vverify	|NN SV *vs
d846 2
d851 3
d858 13
a870 2

: peephole optimiser
a871 1
p	|void	|rpeep		|NULLOK OP* o
a879 2
: "Very" special - can't use the O flag for this one:
: (The rename from perl_atexit to Perl_call_atexit was in 864dbfa3ca8032ef)
d881 4
a884 4
ApdO	|I32	|call_argv	|NN const char* sub_name|I32 flags|NN char** argv
ApdO	|I32	|call_method	|NN const char* methname|I32 flags
ApdO	|I32	|call_pv	|NN const char* sub_name|I32 flags
ApdO	|I32	|call_sv	|NN SV* sv|VOL I32 flags
d887 6
a892 6
ApdO	|SV*	|eval_pv	|NN const char* p|I32 croak_on_error
ApdO	|I32	|eval_sv	|NN SV* sv|I32 flags
ApdO	|SV*	|get_sv		|NN const char *name|I32 flags
ApdO	|AV*	|get_av		|NN const char *name|I32 flags
ApdO	|HV*	|get_hv		|NN const char *name|I32 flags
ApdO	|CV*	|get_cv		|NN const char* name|I32 flags
d894 5
a898 5
ApO	|int	|init_i18nl10n	|int printwarn
ApO	|int	|init_i18nl14n	|int printwarn
ApO	|void	|new_collate	|NULLOK const char* newcoll
ApO	|void	|new_ctype	|NN const char* newctype
ApO	|void	|new_numeric	|NULLOK const char* newcoll
d902 1
a902 1
ApdO	|void	|require_pv	|NN const char* pv
d909 1
d912 1
a912 1
#if defined(PERL_IN_OP_C)
d916 2
d920 1
a920 1
#if defined(PERL_IN_OP_C)
a927 6
#ifdef PERL_IN_REGCOMP_C
EMi	|U8	|set_regclass_bit|NN struct RExC_state_t* pRExC_state|NN regnode* node|const U8 value|NN SV** invlist_ptr|NN AV** alternate_ptr
EMs	|U8	|set_regclass_bit_fold|NN struct RExC_state_t *pRExC_state|NN regnode* node|const U8 value|NN SV** invlist_ptr|NN AV** alternate_ptr
EMs	|void	|add_alternate	|NN AV** alternate_ptr|NN U8* string|STRLEN len
EMsR	|SV*	|_new_invlist_C_array|NN UV* list
#endif
a944 3
#if defined(PERL_IN_DQUOTE_STATIC_C)
EiPR	|I32	|regcurly	|NN const char *s
#endif
d973 1
a973 1
Anp	|void	|repeatcpy	|NN char* to|NN const char* from|I32 len|IV count
d982 1
a982 1
#if defined(PERL_IN_PP_CTL_C)
d995 1
a995 5

: NULLOK only to suppress a compiler warning
Apda	|char*	|savesharedpvn	|NULLOK const char *const pv \
				|const STRLEN len
Apda	|char*	|savesharedsvpv	|NN SV *sv
d1013 1
a1013 1
Apmb	|void	|save_freeop	|NULLOK OP* o
d1020 1
a1020 1
Ap	|void	|save_hints
d1035 1
a1035 1
Apmb	|void	|save_op
d1044 2
a1045 1
Ap	|void	|save_pushi32ptr|const I32 i|NULLOK void *const ptr|const int type
d1047 1
a1047 1
Ap	|void	|save_pushptrptr|NULLOK void *const ptr1 \
d1049 1
a1049 1
#if defined(PERL_IN_SCOPE_C)
a1054 1
Apd	|OP*	|op_contextualize|NN OP* o|I32 context
d1057 1
a1057 1
#if defined(PERL_IN_OP_C)
d1067 2
a1068 1
AMpd	|OP*	|op_scope	|NULLOK OP* o
d1085 1
a1085 2
Amd	|bool	|sv_2bool	|NN SV *const sv
Apd	|bool	|sv_2bool_flags	|NN SV *const sv|const I32 flags
d1089 1
a1089 1
#if defined(PERL_IN_SV_C)
d1095 1
a1095 1
Apd	|NV	|sv_2nv_flags	|NULLOK SV *const sv|const I32 flags
d1100 2
a1101 2
Apd	|char*	|sv_2pvutf8	|NN SV *sv|NULLOK STRLEN *const lp
Apd	|char*	|sv_2pvbyte	|NN SV *sv|NULLOK STRLEN *const lp
d1112 1
a1112 1
#if defined(PERL_IN_SV_C)
d1129 3
a1131 10
Apd	|void	|sv_clear	|NN SV *const orig_sv
#if defined(PERL_IN_SV_C)
s	|bool	|curse		|NN SV * const sv|const bool check_refcnt
#endif
Aopd	|I32	|sv_cmp		|NULLOK SV *const sv1|NULLOK SV *const sv2
Apd	|I32	|sv_cmp_flags	|NULLOK SV *const sv1|NULLOK SV *const sv2 \
				|const U32 flags
Aopd	|I32	|sv_cmp_locale	|NULLOK SV *const sv1|NULLOK SV *const sv2
Apd	|I32	|sv_cmp_locale_flags	|NULLOK SV *const sv1 \
				|NULLOK SV *const sv2|const U32 flags
d1133 1
a1133 2
Amd	|char*	|sv_collxfrm	|NN SV *const sv|NN STRLEN *const nxp
Apd	|char*	|sv_collxfrm_flags	|NN SV *const sv|NN STRLEN *const nxp|I32 const flags
d1135 1
a1135 6
: Frustratingly, because regcomp.c is also compiled as ext/re/re_comp.c,
: anything it needs has to be exported. So this has to be X. I'd rather it
: wasn't.
Xpo	|OP*	|sv_compile_2op_is_broken|NN SV *sv|NN OP **startop \
				|NN const char *code|NN PAD **padp
ApD	|OP*	|sv_compile_2op	|NN SV *sv|NN OP **startop \
a1138 1
Apd	|void	|sv_dec_nomg	|NULLOK SV *const sv
a1140 4
ApdR	|bool	|sv_derived_from_sv|NN SV* sv|NN SV *namesv|U32 flags
ApdR	|bool	|sv_derived_from_pv|NN SV* sv|NN const char *const name|U32 flags
ApdR	|bool	|sv_derived_from_pvn|NN SV* sv|NN const char *const name \
                                    |const STRLEN len|U32 flags
d1142 1
a1142 6
ApdR	|bool	|sv_does_sv	|NN SV* sv|NN SV* namesv|U32 flags
ApdR	|bool	|sv_does_pv	|NN SV* sv|NN const char *const name|U32 flags
ApdR	|bool	|sv_does_pvn	|NN SV* sv|NN const char *const name|const STRLEN len \
                                |U32 flags
Amd	|I32	|sv_eq		|NULLOK SV* sv1|NULLOK SV* sv2
Apd	|I32	|sv_eq_flags	|NULLOK SV* sv1|NULLOK SV* sv2|const U32 flags
a1151 1
Apd	|void	|sv_inc_nomg	|NULLOK SV *const sv
a1180 1
pd	|SV*	|sv_ref	|NULLOK SV *dst|NN const SV *const sv|const int ob
a1198 1
Xp	|void	|sv_sethek	|NN SV *const sv|NULLOK const HEK *const hek
a1202 1
Apd	|int	|sv_unmagicext	|NN SV *const sv|const int type|NULLOK MGVTBL *vtbl
d1217 1
a1217 1
ApR	|SV*	|swash_init	|NN const char* pkg|NN const char* name|NN SV* listsv|I32 minbits|I32 none
a1218 39
#ifdef PERL_IN_REGCOMP_C
EiMR	|SV*	|add_cp_to_invlist	|NULLOK SV* invlist|const UV cp
EsM	|void	|_append_range_to_invlist   |NN SV* const invlist|const UV start|const UV end
EiMR	|UV*	|_invlist_array_init	|NN SV* const invlist|const bool will_have_0
EiMR	|UV*	|invlist_array	|NN SV* const invlist
EsM	|void	|invlist_extend    |NN SV* const invlist|const UV len
EiMR	|UV*	|get_invlist_len_addr	|NN SV* invlist
EiMR	|UV*	|get_invlist_zero_addr	|NN SV* invlist
EiMR	|UV	|invlist_len	|NN SV* const invlist
EiMR	|UV	|invlist_max	|NN SV* const invlist
EiM	|void	|invlist_set_len	|NN SV* const invlist|const UV len
EiM	|void	|invlist_trim	|NN SV* const invlist
EiMR	|SV*	|invlist_clone	|NN SV* const invlist
EiMR	|UV*	|get_invlist_iter_addr	|NN SV* invlist
EiMR	|UV*	|get_invlist_version_id_addr	|NN SV* invlist
EiM	|void	|invlist_iterinit|NN SV* invlist
EsMR	|bool	|invlist_iternext|NN SV* invlist|NN UV* start|NN UV* end
EsMR	|IV	|invlist_search	|NN SV* const invlist|const UV cp
#endif
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_UTF8_C)
EXmM	|void	|_invlist_intersection	|NN SV* const a|NN SV* const b|NN SV** i
EXpM	|void	|_invlist_intersection_maybe_complement_2nd|NULLOK SV* const a|NN SV* const b|bool complement_b|NN SV** i
EXmM	|void	|_invlist_union	|NULLOK SV* const a|NN SV* const b|NN SV** output
EXpM	|void	|_invlist_union_maybe_complement_2nd|NULLOK SV* const a|NN SV* const b|bool complement_b|NN SV** output
EXmM	|void	|_invlist_subtract|NN SV* const a|NN SV* const b|NN SV** result
EXpM	|void	|_invlist_invert|NN SV* const invlist
EXpM	|void	|_invlist_invert_prop|NN SV* const invlist
EXMpR	|HV*	|_swash_inversion_hash	|NN SV* const swash
EXMpR	|SV*	|_new_invlist	|IV initial_size
EXMpR	|SV*	|_swash_to_invlist	|NN SV* const swash
EXMpR	|SV*	|_add_range_to_invlist	|NULLOK SV* invlist|const UV start|const UV end
EXMp	|void	|_invlist_populate_swatch   |NN SV* const invlist|const UV start|const UV end|NN U8* swatch
#endif
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_REGEXEC_C) || defined(PERL_IN_UTF8_C)
EXp	|SV*	|_core_swash_init|NN const char* pkg|NN const char* name|NN SV* listsv|I32 minbits \
                |I32 none|bool return_if_undef|NULLOK SV* invlist \
		|bool passed_in_invlist_has_user_defined_property
EXMpR	|SV*	|_invlist_contents|NN SV* const invlist
#endif
d1222 5
a1226 15
				|NN SV **swashp|NN const char *normal|NULLOK const char *special
Abmd	|UV	|to_utf8_lower	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
AMp	|UV	|_to_utf8_lower_flags	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp|const bool flags|NULLOK bool* tainted_ptr
Abmd	|UV	|to_utf8_upper	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
AMp	|UV	|_to_utf8_upper_flags	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp|const bool flags|NULLOK bool* tainted_ptr
Abmd	|UV	|to_utf8_title	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
AMp	|UV	|_to_utf8_title_flags	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp|const bool flags|NULLOK bool* tainted_ptr
Abmd	|UV	|to_utf8_fold	|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp
AMp	|UV	|_to_utf8_fold_flags|NN const U8 *p|NN U8* ustrp|NULLOK STRLEN *lenp|U8 flags|NULLOK bool* tainted_ptr
#if defined(PERL_IN_MG_C) || defined(PERL_IN_PP_C)
p	|bool	|translate_substr_offsets|STRLEN curlen|IV pos1_iv \
					 |bool pos1_is_uv|IV len_iv \
					 |bool len_is_uv|NN STRLEN *posp \
					 |NN STRLEN *lenp
#endif
a1250 2
Apd	|int	|bytes_cmp_utf8	|NN const U8 *b|STRLEN blen|NN const U8 *u \
				|STRLEN ulen
d1253 2
a1254 7
ApdD	|UV	|utf8_to_uvchr	|NN const U8 *s|NULLOK STRLEN *retlen
ApdD	|UV	|utf8_to_uvuni	|NN const U8 *s|NULLOK STRLEN *retlen
ApM	|UV	|valid_utf8_to_uvchr	|NN const U8 *s|NULLOK STRLEN *retlen
ApM	|UV	|valid_utf8_to_uvuni	|NN const U8 *s|NULLOK STRLEN *retlen
Apd	|UV	|utf8_to_uvchr_buf	|NN const U8 *s|NN const U8 *send|NULLOK STRLEN *retlen
Apd	|UV	|utf8_to_uvuni_buf	|NN const U8 *s|NN const U8 *send|NULLOK STRLEN *retlen
pM	|bool	|check_utf8_print	|NN const U8 *s|const STRLEN len
d1278 1
a1278 1
pR	|SV*	|vivify_ref	|NN SV* sv|U32 to_what
d1287 1
a1287 3
p	|void	|report_evil_fh	|NULLOK const GV *gv
: Used in doio.c, pp_hot.c, pp_sys.c
p	|void	|report_wrongway_fh|NULLOK const GV *gv|const char have
a1289 6
#if defined(PERL_IN_OP_C) || defined(PERL_IN_SV_C)
p	|void	|report_redefined_cv|NN const SV *name \
				    |NN const CV *old_cv \
				    |NULLOK SV * const *new_const_svp
#endif
Apd	|void	|warn_sv	|NN SV *baseex
d1291 1
a1291 1
Apd	|void	|vwarn		|NN const char* pat|NULLOK va_list* args
d1298 1
a1298 4
Am	|I32	|whichsig	|NN const char* sig
Ap     |I32    |whichsig_sv    |NN SV* sigsv
Ap     |I32    |whichsig_pv    |NN const char* sig
Ap     |I32    |whichsig_pvn   |NN const char* sig|STRLEN len
a1302 2
p	|int	|yyerror_pv	|NN const char *const s|U32 flags
p	|int	|yyerror_pvn	|NN const char *const s|STRLEN len|U32 flags
a1304 1
p	|void	|yyunlex
d1306 1
a1306 1
p	|int	|yyparse	|int gramtype
d1309 2
a1310 2
#if defined(PERL_IN_TOKE_C)
s	|int	|yywarn		|NN const char *const s|U32 flags
a1391 3
p	|CV*	|newATTRSUB_flags|I32 floor|NULLOK OP *o|NULLOK OP *proto \
				 |NULLOK OP *attrs|NULLOK OP *block \
				 |U32 flags
d1410 1
a1410 1
ApR	|DIR*	|dirp_dup	|NULLOK DIR *const dp|NN CLONE_PARAMS *const param
d1413 1
a1413 1
#if defined(PERL_IN_SV_C)
a1415 2
sR	|SV*	|sv_dup_common	|NN const SV *const sstr \
				|NN CLONE_PARAMS *const param
a1417 2
ApR	|SV*	|sv_dup_inc	|NULLOK const SV *const sstr \
				|NN CLONE_PARAMS *const param
d1426 1
a1426 1
ApD	|void	|ptr_table_clear|NULLOK PTR_TBL_t *const tbl
a1437 1
AopP	|const XOP *	|custom_op_xop	|NN const OP *o
a1439 2
Aop	|void	|custom_op_register	|NN Perl_ppaddr_t ppaddr \
			|NN const XOP *xop
d1451 3
a1453 1
#if defined(PERL_IN_DOOP_C)
d1462 3
a1464 5
#if defined(PERL_IN_GV_C)
s	|void	|gv_init_svtype	|NN GV *gv|const svtype sv_type
s	|void	|gv_magicalize_isa	|NN GV *gv
s	|void	|gv_magicalize_overload	|NN GV *gv
s	|HV*	|gv_get_super_pkg|NN const char* name|I32 namelen|U32 flags
d1469 4
a1472 3
#if defined(PERL_IN_HV_C) || defined(PERL_IN_SV_C)
po	|SV*	|hfree_next_entry	|NN HV *hv|NN STRLEN *indexp
#endif
d1474 1
a1474 1
#if defined(PERL_IN_HV_C)
d1477 1
a1477 1
s	|SV*	|hv_free_ent_ret|NN HV *hv|NULLOK HE *entryK
d1489 1
d1492 1
a1492 1
#if defined(PERL_IN_MG_C)
d1494 2
a1495 3
-s	|int	|magic_methpack	|NN SV *sv|NN const MAGIC *mg|NN const char *meth
s	|SV*	|magic_methcall1|NN SV *sv|NN const MAGIC *mg \
				|NN const char *meth|U32 flags \
d1498 1
a1498 1
s	|void	|unwind_handler_stack|NULLOK const void *p
d1502 43
a1544 1
#if defined(PERL_IN_OP_C)
d1560 2
a1561 2
s	|SV*	|gv_ename	|NN GV *gv
sRn	|bool	|scalar_mod_type|NULLOK const OP *o|I32 type
d1566 2
a1567 3
s	|void	|bad_type_pv	|I32 n|NN const char *t|NN const char *name|U32 flags|NN const OP *kid
s	|void	|bad_type_sv	|I32 n|NN const char *t|NN SV *namesv|U32 flags|NN const OP *kid
s	|void	|no_bareword_allowed|NN OP *o
d1569 2
a1570 4
sR	|OP*	|too_few_arguments_sv|NN OP *o|NN SV* namesv|U32 flags
sR	|OP*	|too_few_arguments_pv|NN OP *o|NN const char* name|U32 flags
s	|OP*	|too_many_arguments_pv|NN OP *o|NN const char* name|U32 flags
sR	|OP*	|too_many_arguments_sv|NN OP *o|NN SV* namesv|U32 flags
d1595 1
a1595 1
#if defined(PERL_IN_PERL_C)
a1599 2
s	|SV*	|mayberelocate	|NN const char *const dir|STRLEN len \
				|U32 flags
d1609 3
a1611 3
s	|PerlIO *|open_script	|NN const char *scriptname|bool dosearch \
				|NN bool *suidscript
sr	|void	|usage
a1614 1
sr	|void	|minus_v
a1617 1
#  ifndef PERL_IS_MINIPERL
a1618 1
#  endif
d1621 1
a1621 2
#if defined(PERL_IN_PP_C)
s	|void	|do_chomp	|NN SV *retval|NN SV *sv|bool chomping
d1625 1
a1625 1
#if defined(PERL_IN_PP_C) || defined(PERL_IN_PP_HOT_C)
d1631 1
a1631 1
#if defined(PERL_IN_PP_PACK_C)
d1649 1
a1649 1
#if defined(PERL_IN_PP_CTL_C)
d1651 2
a1652 3
sR	|OP*	|dofindlabel	|NN OP *o|NN const char *label|STRLEN len \
                                |U32 flags|NN OP **opstack|NN OP **oplimit
s	|MAGIC *|doparseform	|NN SV *sv
d1656 1
a1656 1
sR	|I32	|dopoptolabel	|NN const char *label|STRLEN len|U32 flags
d1661 2
a1662 3
s	|bool	|doeval		|int gimme|NULLOK OP** startop \
				|NULLOK CV* outside|U32 seq|NULLOK HV* hh
sR	|PerlIO *|check_type_and_open|NN SV *name
d1664 1
a1664 1
sR	|PerlIO *|doopen_pm	|NN SV *name
a1665 1
s	|SV **	|adjust_stack_on_leave|NN SV **newsp|NN SV **sp|NN SV **mark|I32 gimme|U32 flags
d1671 1
a1671 2
s	|OP*	|do_smartmatch	|NULLOK HV* seen_this \
				|NULLOK HV* seen_other|const bool copied
d1674 1
a1674 1
#if defined(PERL_IN_PP_HOT_C)
d1679 1
a1679 1
#if defined(PERL_IN_PP_SORT_C)
d1692 1
a1692 1
#if defined(PERL_IN_PP_SYS_C)
a1698 3
p	|OP *	|tied_method|NN const char *const methname|NN SV **sp \
				|NN SV *const sv|NN const MAGIC *const mg \
				|const U32 flags|U32 argc|...
d1700 1
a1700 1
#if defined(PERL_IN_REGCOMP_C)
d1717 1
a1717 1
				|NULLOK UV *valuep|NULLOK I32 *flagp|U32 depth
d1725 1
a1725 3
				|NN regnode *scan|NN UV *min_subtract  \
				|NN bool *has_exactf_sharp_s  \
				|U32 flags|NULLOK regnode *val|U32 depth
d1738 2
d1786 1
a1786 1
#if defined(PERL_IN_REGEXEC_C)
d1790 2
a1791 2
ERs	|bool	|reginclass	|NULLOK const regexp * const prog|NN const regnode * const n|NN const U8 * const p|NULLOK STRLEN *lenp\
				|bool const do_utf8sv_is_utf8
a1794 3
ERsM	|SV*	|core_regclass_swash|NULLOK const regexp *prog \
				|NN const struct regnode *node|bool doinit \
				|NULLOK SV **listsvp|NULLOK SV **altsvp
d1814 1
a1814 1
#if defined(PERL_IN_DUMP_C)
d1817 2
d1823 1
a1823 1
#if defined(PERL_IN_SCOPE_C)
d1827 1
a1827 1
#if defined(PERL_IN_GV_C) || defined(PERL_IN_SV_C) || defined(PERL_IN_PAD_C) || defined(PERL_IN_OP_C)
d1832 1
a1832 1
#if defined(PERL_IN_HV_C) || defined(PERL_IN_MG_C) || defined(PERL_IN_SV_C)
d1834 1
a1834 1
poM	|void	|sv_kill_backrefs	|NN SV *const sv|NULLOK AV *const av
d1837 1
a1837 8
#if defined(PERL_IN_SV_C) || defined (PERL_IN_OP_C)
pR	|SV *	|varname	|NULLOK const GV *const gv|const char gvtype \
				|PADOFFSET targ|NULLOK const SV *const keyname \
				|I32 aindex|int subscript_type
#endif

pX	|void	|sv_del_backref	|NN SV *const tsv|NN SV *const sv
#if defined(PERL_IN_SV_C)
d1839 1
a1839 1
i	|void	|sv_unglob	|NN SV *const sv|U32 flags
d1842 4
d1857 1
d1859 1
a1859 2
		|NN const U8 *const send|NN STRLEN *const uoffset \
		|NN bool *const at_end
d1861 1
a1861 1
		|NN const U8 *send|STRLEN uoffset|const STRLEN uend
d1864 1
a1864 3
		|STRLEN uoffset|STRLEN uoffset0|STRLEN boffset0
s	|void	|utf8_mg_len_cache_update|NN SV *const sv|NN MAGIC **const mgp \
		|const STRLEN ulen
a1868 2
s	|void	|assert_uft8_cache_coherent|NN const char *const func \
		|STRLEN from_cache|STRLEN real|NN SV *const sv
d1874 1
a1879 1
s	|void	|anonymise_cv_maybe	|NN GV *gv|NN CV *cv
d1882 1
a1882 5
: Used in sv.c and hv.c
po	|void *	|more_bodies	|const svtype sv_type|const size_t body_size \
				|const size_t arena_size

#if defined(PERL_IN_TOKE_C)
d1913 1
d1943 3
a1945 3
#if defined(PERL_IN_UNIVERSAL_C)
s	|bool|isa_lookup	|NN HV *stash|NN const char * const name \
                                        |STRLEN len|U32 flags
d1948 1
a1948 1
#if defined(PERL_IN_LOCALE_C)
d1954 1
a1954 1
#if defined(PERL_IN_UTIL_C)
d1957 2
a1958 2
s	|SV *|with_queued_errors|NN SV *ex
s	|bool	|invoke_exception_hook|NULLOK SV *ex|bool warn
d1969 1
a1969 1
#if defined(PERL_IN_NUMERIC_C)
d1973 1
a1973 1
#if defined(PERL_IN_UTF8_C)
a1974 1
sRM	|UV	|check_locale_boundary_crossing|NN const U8* const p|const UV result|NN U8* const ustrp|NN STRLEN *lenp
d1976 1
a1976 1
sR	|SV*	|swatch_get	|NN SV* swash|UV start|UV span
d1979 2
a1983 2
Apd	|void	|sv_catpv_flags	|NN SV *dstr|NN const char *sstr \
				|const I32 flags
d2032 1
a2032 1
#if defined(PERL_IN_DEB_C)
d2037 6
a2042 13
: pad API
#ifdef PERL_MAD
Mnpd	|void	|pad_peg	|NN const char* s
#endif
Apda	|PADLIST*|pad_new	|int flags
#if defined(PERL_IN_PAD_C)
s	|PADOFFSET|pad_alloc_name|NN SV *namesv|U32 flags \
				|NULLOK HV *typestash|NULLOK HV *ourstash
#endif
Apd	|PADOFFSET|pad_add_name_pvn|NN const char *namepv|STRLEN namelen\
				|U32 flags|NULLOK HV *typestash\
				|NULLOK HV *ourstash
Apd	|PADOFFSET|pad_add_name_pv|NN const char *name\
d2045 5
a2049 20
Apd	|PADOFFSET|pad_add_name_sv|NN SV *name\
				|U32 flags|NULLOK HV *typestash\
				|NULLOK HV *ourstash
AMpd	|PADOFFSET|pad_alloc	|I32 optype|U32 tmptype
Apd	|PADOFFSET|pad_add_anon	|NN CV* func|I32 optype
#if defined(PERL_IN_PAD_C)
sd	|void	|pad_check_dup	|NN SV *name|U32 flags|NULLOK const HV *ourstash
#endif
Apd	|PADOFFSET|pad_findmy_pvn|NN const char* namepv|STRLEN namelen|U32 flags
Apd	|PADOFFSET|pad_findmy_pv|NN const char* name|U32 flags
Apd	|PADOFFSET|pad_findmy_sv|NN SV* name|U32 flags
ApdD	|PADOFFSET|find_rundefsvoffset	|
Apd	|SV*	|find_rundefsv	|
: Used in pp.c
p	|SV*	|find_rundefsv2	|NN CV *cv|U32 seq
#if defined(PERL_IN_PAD_C)
sd	|PADOFFSET|pad_findlex	|NN const char *namepv|STRLEN namelen|U32 flags \
				|NN const CV* cv|U32 seq|int warn \
				|NULLOK SV** out_capture|NN SV** out_name_sv \
				|NN int *out_flags
d2052 2
a2053 2
Apd	|SV*	|pad_sv		|PADOFFSET po
Apd	|void	|pad_setsv	|PADOFFSET po|NN SV* sv
d2055 1
d2057 3
a2059 8
pd	|U32	|intro_my
pd	|void	|pad_leavemy
pd	|void	|pad_swipe	|PADOFFSET po|bool refadjust
#if defined(PERL_IN_PAD_C)
sd	|void	|pad_reset
#endif
AMpd	|void	|pad_tidy	|padtidy_type type
pd	|void	|pad_free	|PADOFFSET po
d2061 14
a2074 1
#if defined(PERL_IN_PAD_C)
a2078 8
Apd	|CV*	|cv_clone	|NN CV* proto
pd	|void	|pad_fixup_inner_anons|NN PADLIST *padlist|NN CV *old_cv|NN CV *new_cv
pdX	|void	|pad_push	|NN PADLIST *padlist|int depth
ApdR	|HV*	|pad_compname_type|const PADOFFSET po
#if defined(USE_ITHREADS)
pdR	|AV*	|padlist_dup	|NULLOK AV *srcpad|NN CLONE_PARAMS *param
#endif

a2096 4
p	|void	|hv_ename_add	|NN HV *hv|NN const char *name|U32 len \
				|U32 flags
p	|void	|hv_ename_delete|NN HV *hv|NN const char *name|U32 len \
				|U32 flags
d2099 2
a2100 1
#if defined(PERL_IN_DUMP_C) || defined(PERL_IN_HV_C) || defined(PERL_IN_SV_C) || defined(PERL_IN_SCOPE_C)
d2111 1
a2111 1
#if defined(PERL_IN_SV_C)
d2200 2
d2213 1
a2213 1
#if defined(PERL_IN_UTIL_C)
d2222 3
a2243 9
: This function is an implementation detail. The public API for this is
: XS_VERSION_BOOTCHECK
Xpo	|void	|xs_version_bootcheck|U32 items|U32 ax|NN const char *xs_p \
				|STRLEN xs_len
: This function is an implementation detail. The public API for this is
: XS_APIVERSION_BOOTCHECK
Xpo	|void	|xs_apiversion_bootcheck|NN SV *module|NN const char *api_p \
				|STRLEN api_len

d2253 2
a2254 1
#if defined(PERL_IN_DUMP_C)
a2271 1
Mp	|char*	|sv_catxmlpv	|NN SV *dsv|NN const char *pv|int utf8
d2294 1
a2294 1
#  if defined(PERL_IN_TOKE_C)
d2302 1
a2302 1
Mp	|int	|madparse	|int gramtype
d2329 1
a2329 1
#if defined(PERL_IN_MRO_C)
a2330 9
s	|void	|mro_clean_isarev|NN HV * const isa   \
				 |NN const char * const name \
				 |const STRLEN len \
				 |NULLOK HV * const exceptions|U32 flags
s	|void	|mro_gather_and_rename|NN HV * const stashes \
				      |NN HV * const seen_stashes \
				      |NULLOK HV *stash \
				      |NULLOK HV *oldstash \
				      |NN SV *namesv
a2334 1
pdx	|void	|mro_package_moved	|NULLOK HV * const stash|NULLOK HV * const oldstash|NN const GV * const gv|U32 flags
d2340 1
a2340 1
ApoM	|const char *|cop_fetch_label|NN COP *const cop \
d2342 3
a2344 3
: Only used  in op.c and the perl compiler
ApoM	|void|cop_store_label \
		|NN COP *const cop|NN const char *label|STRLEN len|U32 flags
a2346 18
: Used in perly.y
xp	|void	|munge_qwlist_to_paren_list|NN OP* qwlist

#if defined(USE_ITHREADS)
#  if defined(PERL_IN_SV_C)
s	|void	|unreferenced_to_tmp_stack|NN AV *const unreferenced
#  endif
Aanop	|CLONE_PARAMS *|clone_params_new|NN PerlInterpreter *const from \
		|NN PerlInterpreter *const to
Anop	|void	|clone_params_del|NN CLONE_PARAMS *param
#endif

: Used in perl.c and toke.c
op	|void	|populate_isa	|NN const char *name|STRLEN len|...

: Used in keywords.c and toke.c
Xop	|bool	|feature_is_enabled|NN const char *const name \
		|STRLEN namelen
d2348 4
a2351 1
: ex: set ts=8 sts=4 sw=4 noet:
@


1.1.1.11
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d13 1
a13 1
:   A  Available fully everywhere (usually part of the public API):
d16 1
a16 5
:         any doc entry goes in perlapi.pod rather than perlintern.pod.  If no
:	     documentation is furnished for this function, and M is also
:	     specified, the function is not listed as part of the public API.
:	     If M isn't specified and no documentation is furnished, the
:	     function is listed in perlapi as existing and being undocumented
a18 3
:      If the function is only exported for use in a public
:      macro, see X.
:
d25 1
a25 2
:      implemented in mathoms.c (whose compilation can be suppressed; see
:      INSTALL):
d46 1
a46 2
:   f  Function takes printf style format string, varargs (hence any entry that
:      would otherwise go in embed.h is suppressed):
d77 1
a77 1
:   o  Has no Perl_foo or S_foo compatibility macro:
a112 4
:      This is often used for private functions that are used by public
:      macros.  In those cases the macros must use the long form of the
:      name (Perl_blah(aTHX_ ...)).
:
a195 2
p	|void	|av_extend_guts	|NULLOK AV *av|I32 key|NN SSize_t *maxp \
				|NN SV ***allocp|NN SV ***arrayp
a206 2
AidR	|I32	|av_top_index	|NN AV *av
AmpdR	|I32	|av_tindex	|NN AV *av
d247 2
a248 2
Anprd	|void	|croak_no_modify
Anprd	|void	|croak_xs_usage	|NN const CV *const cv \
d250 1
a250 6
npr	|void	|croak_no_mem
nroX	|void	|Perl_croak_memory_wrap
nprX	|void	|croak_popstack
#if defined(WIN32)
norx	|void	|win32_croak_not_implemented|NN const char * fname
#endif
d272 1
a272 1
p	|OP *	|coresub_op	|NN SV *const coreargssv|const int code \
a283 1
p	|void	|cv_forget_slab	|NN CV *cv
d382 1
a382 1
p	|UV	|do_vecget	|NN SV* sv|SSize_t offset|int size
a406 1
p	|CV *	|find_lexical_cv|PADOFFSET off
d511 1
a511 1
Ap	|void	|hv_free_ent	|NN HV *hv|NULLOK HE *entry
d587 18
a604 22
ADMpPR	|U32	|to_uni_upper_lc|U32 c
ADMpPR	|U32	|to_uni_title_lc|U32 c
ADMpPR	|U32	|to_uni_lower_lc|U32 c
ADMpPR	|bool	|is_uni_alnum	|UV c
ADMpPR	|bool	|is_uni_alnumc	|UV c
ADMpPR	|bool	|is_uni_idfirst	|UV c
ADMpPR	|bool	|is_uni_alpha	|UV c
ADMpPR	|bool	|is_uni_ascii	|UV c
ADMpPR	|bool	|is_uni_blank	|UV c
ADMpPR	|bool	|is_uni_space	|UV c
ADMpPR	|bool	|is_uni_cntrl	|UV c
ADMpPR	|bool	|is_uni_graph	|UV c
ADMpPR	|bool	|is_uni_digit	|UV c
ADMpPR	|bool	|is_uni_upper	|UV c
ADMpPR	|bool	|is_uni_lower	|UV c
ADMpPR	|bool	|is_uni_print	|UV c
ADMpPR	|bool	|is_uni_punct	|UV c
ADMpPR	|bool	|is_uni_xdigit	|UV c
AMp	|UV	|to_uni_upper	|UV c|NN U8 *p|NN STRLEN *lenp
AMp	|UV	|to_uni_title	|UV c|NN U8 *p|NN STRLEN *lenp
iDMPR	|bool	|isIDFIRST_lazy	|NN const char* p
iDMPR	|bool	|isALNUM_lazy	|NN const char* p
d613 1
d615 16
a630 20
AMp	|UV	|to_uni_lower	|UV c|NN U8 *p|NN STRLEN *lenp
AMmp	|UV	|to_uni_fold	|UV c|NN U8 *p|NN STRLEN *lenp
AMp	|UV	|_to_uni_fold_flags|UV c|NN U8 *p|NN STRLEN *lenp|const U8 flags
ADMpPR	|bool	|is_uni_alnum_lc|UV c
ADMpPR	|bool	|is_uni_alnumc_lc|UV c
ADMpPR	|bool	|is_uni_idfirst_lc|UV c
AMpR	|bool	|_is_uni_perl_idcont|UV c
AMpR	|bool	|_is_uni_perl_idstart|UV c
ADMpPR	|bool	|is_uni_alpha_lc|UV c
ADMpPR	|bool	|is_uni_ascii_lc|UV c
ADMpPR	|bool	|is_uni_space_lc|UV c
ADMpPR	|bool	|is_uni_blank_lc|UV c
ADMpPR	|bool	|is_uni_cntrl_lc|UV c
ADMpPR	|bool	|is_uni_graph_lc|UV c
ADMpPR	|bool	|is_uni_digit_lc|UV c
ADMpPR	|bool	|is_uni_upper_lc|UV c
ADMpPR	|bool	|is_uni_lower_lc|UV c
ADMpPR	|bool	|is_uni_print_lc|UV c
ADMpPR	|bool	|is_uni_punct_lc|UV c
ADMpPR	|bool	|is_uni_xdigit_lc|UV c
d635 1
a635 1
Anpdmb	|bool	|is_utf8_string_loc|NN const U8 *s|STRLEN len|NULLOK const U8 **ep
d637 31
a667 27
AMpR	|bool	|_is_uni_FOO|const U8 classnum|const UV c
AMpR	|bool	|_is_utf8_FOO|const U8 classnum|NN const U8 *p
ADMpR	|bool	|is_utf8_alnum	|NN const U8 *p
ADMpR	|bool	|is_utf8_alnumc	|NN const U8 *p
ADMpR	|bool	|is_utf8_idfirst|NN const U8 *p
ADMpR	|bool	|is_utf8_xidfirst|NN const U8 *p
AMpR	|bool	|_is_utf8_perl_idcont|NN const U8 *p
AMpR	|bool	|_is_utf8_perl_idstart|NN const U8 *p
ADMpR	|bool	|is_utf8_idcont	|NN const U8 *p
ADMpR	|bool	|is_utf8_xidcont	|NN const U8 *p
ADMpR	|bool	|is_utf8_alpha	|NN const U8 *p
ADMpR	|bool	|is_utf8_ascii	|NN const U8 *p
ADMpR	|bool	|is_utf8_blank	|NN const U8 *p
ADMpR	|bool	|is_utf8_space	|NN const U8 *p
ADMpR	|bool	|is_utf8_perl_space	|NN const U8 *p
ADMpR	|bool	|is_utf8_perl_word	|NN const U8 *p
ADMpR	|bool	|is_utf8_cntrl	|NN const U8 *p
ADMpR	|bool	|is_utf8_digit	|NN const U8 *p
ADMpR	|bool	|is_utf8_posix_digit	|NN const U8 *p
ADMpR	|bool	|is_utf8_graph	|NN const U8 *p
ADMpR	|bool	|is_utf8_upper	|NN const U8 *p
ADMpR	|bool	|is_utf8_lower	|NN const U8 *p
ADMpR	|bool	|is_utf8_print	|NN const U8 *p
ADMpR	|bool	|is_utf8_punct	|NN const U8 *p
ADMpR	|bool	|is_utf8_xdigit	|NN const U8 *p
AMpR	|bool	|_is_utf8_mark	|NN const U8 *p
ADMpR	|bool	|is_utf8_mark	|NN const U8 *p
d673 1
d718 1
a718 1
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_TOKE_C)
d720 1
a720 14
EMsR	|bool	|grok_bslash_o	|NN char** s|NN UV* uv           \
				|NN const char** error_msg       \
				|const bool output_warning       \
				|const bool strict               \
				|const bool silence_non_portable \
				|const bool utf8
EMiR	|bool	|grok_bslash_x	|NN char** s|NN UV* uv           \
				|NN const char** error_msg       \
				|const bool output_warning       \
				|const bool strict               \
				|const bool silence_non_portable \
				|const bool utf8
EMsPR	|char*|form_short_octal_warning|NN const char * const s  \
				|const STRLEN len
a733 2
p	|int	|magic_copycallchecker|NN SV* sv|NN MAGIC *mg|NN SV *nsv \
				      |NULLOK const char *name|I32 namlen
d747 1
a750 5
:removing noreturn to silence a warning for this function resulted in no
:change to the interpreter DLL image under VS 2003 -O1 -GL 32 bits
#ifdef _MSC_VER
p	|int	|magic_regdatum_set|NN SV* sv|NN MAGIC* mg
#else
a751 1
#endif
d753 1
a754 1
p	|int	|magic_cleararylen_p|NN SV* sv|NN MAGIC* mg
d772 1
d803 1
a803 1
ApdD	|U32	|mg_length	|NN SV* sv
d848 3
a850 3
ApPR	|short	|my_swap	|short s
ApPR	|long	|my_htonl	|long l
ApPR	|long	|my_ntohl	|long l
a963 6
Mp	|OP*	|op_unscope	|NULLOK OP* o
#ifdef PERL_CORE
p	|void	|opslab_free	|NN OPSLAB *slab
p	|void	|opslab_free_nopad|NN OPSLAB *slab
p	|void	|opslab_force_free|NN OPSLAB *slab
#endif
a974 3
#ifdef USE_ITHREADS
AMp	|PADOFFSET|alloccopstash|NN HV *hv
#endif
d985 1
a985 1

d990 1
a990 1

d1023 1
a1023 1
p	|OP*	|pmruntime	|NN OP *o|NN OP *expr|bool isreg|I32 floor
d1034 1
d1039 3
a1042 1
: Not used currently: EXMs	|bool	|_invlistEQ	|NN SV* const a|NN SV* const b|bool complement_b
a1054 1
EXp	|regexp_engine const *|current_re_engine
d1056 1
a1056 7
p	|REGEXP*|re_op_compile	|NULLOK SV ** const patternp \
				|int pat_count|NULLOK OP *expr \
				|NN const regexp_engine* eng \
				|NULLOK REGEXP *old_re \
				|NULLOK bool *is_bare_re \
				|U32 rx_flags|U32 pm_flags
Ap	|REGEXP*|re_compile	|NN SV * const pattern|U32 orig_rx_flags
d1061 2
a1062 3
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_TOKE_C)
EiPR	|I32	|regcurly	|NN const char *s                   \
				|const bool rbrace_must_be_escaped
d1193 1
a1193 1
Apd	|void	|setdefout	|NN GV* gv
d1266 7
d1290 3
a1292 1
poMX	|void	|sv_free2	|NN SV *const sv|const U32 refcnt
a1307 1
p	|STRLEN	|sv_len_utf8_nomg|NN SV *const sv
d1313 1
a1313 2
ApdbamR	|SV*	|sv_mortalcopy	|NULLOK SV *const oldsv
XpaR	|SV*	|sv_mortalcopy_flags|NULLOK SV *const oldsv|U32 flags
a1331 2
p	|void	|sv_resetpvn	|NULLOK const char* s|STRLEN len \
				|NULLOK HV *const stash
a1362 3
Apd	|void	|sv_vcatpvfn_flags|NN SV *const sv|NN const char *const pat|const STRLEN patlen \
				|NULLOK va_list *const args|NULLOK SV **const svargs|const I32 svmax \
				|NULLOK bool *const maybe_tainted|const U32 flags
d1375 1
d1377 1
d1379 1
a1379 4
EiM	|void	|invlist_set_len|NN SV* const invlist|const UV len
EiMR	|IV*	|get_invlist_previous_index_addr|NN SV* invlist
EiMR	|IV	|invlist_previous_index|NN SV* const invlist
EiM	|void	|invlist_set_previous_index|NN SV* const invlist|const IV index
a1381 1
EiMR	|bool	|invlist_is_iterating|NN SV* const invlist
d1386 1
a1386 2
EiM	|void	|invlist_iterfinish|NN SV* invlist
EiMR	|UV	|invlist_highest|NN SV* const invlist
d1396 1
a1401 5
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_REGEXEC_C) || defined(PERL_IN_UTF8_C) || defined(PERL_IN_TOKE_C)
EXp	|SV*	|_core_swash_init|NN const char* pkg|NN const char* name \
		|NN SV* listsv|I32 minbits|I32 none \
		|NULLOK SV* invlist|NULLOK U8* const flags_p
#endif
d1403 3
a1406 7
EiMR	|UV*	|_get_invlist_len_addr	|NN SV* invlist
EiMR	|UV	|_invlist_len	|NN SV* const invlist
EMiR	|bool	|_invlist_contains_cp|NN SV* const invlist|const UV cp
EXpMR	|IV	|_invlist_search	|NN SV* const invlist|const UV cp
EXMpR	|SV*	|_get_swash_invlist|NN SV* const swash
EXMpR	|HV*	|_swash_inversion_hash	|NN SV* const swash
: Not used currently: EXMp	|void	|_invlist_dump	|NN SV* const invlist|NN const char * const header
d1456 1
a1463 1
ApM	|UV	|valid_utf8_to_uvchr	|NN const U8 *s|NULLOK STRLEN *retlen
a1465 1
ApbmM	|UV	|valid_utf8_to_uvchr	|NN const U8 *s|NULLOK STRLEN *retlen
d1491 1
a1491 1
p        |void        |get_hash_seed        |NN unsigned char * const seed_buffer
a1528 4
#ifdef PERL_CORE
p	|void	|parser_free_nexttoke_ops|NN yy_parser *parser \
					 |NN OPSLAB *slab
#endif
d1615 2
a1616 1
Ap	|CV *	|newMYSUB	|I32 floor|NN OP *o|NULLOK OP *proto \
d1618 3
a1620 1
p	|CV*	|newSTUB	|NN GV *gv|bool fake
a1679 1
p	|void	|init_constants
d1693 2
d1704 1
a1704 1
s	|void	|hsplit		|NN HV *hv|STRLEN const oldsize|STRLEN newsize
d1706 1
a1706 1
s	|SV*	|hv_free_ent_ret|NN HV *hv|NN HE *entry
d1713 1
a1713 2
sn      |U32|ptr_hash|PTRV u
s	|struct xpvhv_aux*|hv_auxinit|NN HV *hv
d1734 5
a1738 1
s	|void	|forget_pmop	|NN PMOP *const o
d1751 1
a1751 1
s	|void	|apply_attrs	|NN HV *stash|NN SV *target|NULLOK OP *attrs
d1766 1
a1766 2
s	|void	|process_special_blocks	|I32 floor \
					|NN const char *const fullname\
d1769 6
a1774 7
Xpa	|void*	|Slab_Alloc	|size_t sz
Xp	|void	|Slab_Free	|NN void *op
#if defined(PERL_DEBUG_READONLY_OPS)
#    if defined(PERL_CORE)
px	|void	|Slab_to_ro	|NN OPSLAB *slab
px	|void	|Slab_to_rw	|NN OPSLAB *const slab
#    endif
d1779 4
d1858 1
a1858 1
s	|bool	|doeval		|int gimme \
d1875 1
a1875 1
s	|void	|do_oddball	|NN SV **oddkey|NN SV **firstkey
d1914 1
a1914 11
Es	|regnode*|regclass	|NN struct RExC_state_t *pRExC_state \
				|NN I32 *flagp|U32 depth|const bool stop_at_1 \
				|bool allow_multi_fold                        \
				|const bool silence_non_portable	      \
				|NULLOK SV** ret_invlist
Es	|bool|could_it_be_a_POSIX_class|NN struct RExC_state_t *pRExC_state
Es	|regnode*|handle_regex_sets|NN struct RExC_state_t *pRExC_state \
				|NULLOK SV ** return_invlist            \
				|NN I32 *flagp|U32 depth                \
				|NN char * const oregcomp_parse
Es	|void|parse_lparen_question_flags|NN struct RExC_state_t *pRExC_state
d1919 2
a1920 4
Es	|bool	|grok_bslash_N	|NN struct RExC_state_t *pRExC_state        \
				|NULLOK regnode** nodep|NULLOK UV *valuep   \
				|NN I32 *flagp|U32 depth|bool in_char_class \
				|const bool strict
a1932 6
EsRn	|char *	|regpatws	|NN struct RExC_state_t *pRExC_state \
				|NN char *p|const bool recognize_comment
Ei	|void   |alloc_maybe_populate_EXACT|NN struct RExC_state_t *pRExC_state \
				|NN regnode *node|NN I32 *flagp|STRLEN len \
				|UV code_point
Ei	|U8   |compute_EXACTish|NN struct RExC_state_t *pRExC_state
d1958 2
a1959 2
Ei	|I32	|regpposixcc	|NN struct RExC_state_t *pRExC_state \
				|I32 value|const bool strict
d1990 7
a1996 13
ERs	|bool	|isFOO_lc	|const U8 classnum|const U8 character
ERs	|bool	|isFOO_utf8_lc	|const U8 classnum|NN const U8* character
ERs	|I32	|regmatch	|NN regmatch_info *reginfo|NN char *startpos|NN regnode *prog
ERs	|I32	|regrepeat	|NN regexp *prog|NN char **startposp \
				|NN const regnode *p|I32 max|int depth \
				|bool is_utf8_pat
ERs	|I32	|regtry		|NN regmatch_info *reginfo|NN char **startposp
ERs	|bool	|reginclass	|NULLOK regexp * const prog|NN const regnode * const n|NN const U8 * const p\
				|bool const utf8_target
Es	|CHECKPOINT|regcppush	|NN const regexp *rex|I32 parenfloor\
				|U32 maxopenparen
Es	|void	|regcppop	|NN regexp *rex\
				|NN U32 *maxopenparen_p
d2000 1
a2000 1
				|NULLOK SV **listsvp
d2006 1
a2006 4
ERs	|char*	|find_byclass	|NN regexp * prog|NN const regnode *c \
				|NN char *s|NN const char *strend \
				|NULLOK regmatch_info *reginfo \
				|bool is_utf_pat
d2008 1
a2008 1
Es	|bool	|to_byte_substr	|NN regexp * prog
a2106 2
iR	|SV*	|get_and_check_backslash_N_name|NN const char* s \
				|NN const char* const e
d2113 1
a2113 3
sR	|char*	|scan_str	|NN char *start|int keep_quoted \
				|int keep_delims|int re_reparse \
				|bool deprecate_escaped_matching
a2128 1
s	|void	|force_ident_maybe_lex|char pit
a2134 1
s	|int	|pending_ident
a2146 3
s  |void|parse_ident|NN char **s|NN char **d \
                     |NN char * const e|int allow_package \
                     |bool is_utf8
d2173 1
d2188 1
a2188 1
iRn	|STRLEN	|is_utf8_char_slow|NN const U8 *s|const STRLEN len
d2190 1
a2190 1
iR	|bool	|is_utf8_common	|NN const U8 *const p|NN SV **swash|NN const char * const swashname
d2203 1
a2203 3
pmb	|void	|sv_copypv	|NN SV *const dsv|NN SV *const ssv
Apmd	|void	|sv_copypv_nomg	|NN SV *const dsv|NN SV *const ssv
Apd	|void	|sv_copypv_flags	|NN SV *const dsv|NN SV *const ssv|const I32 flags
d2207 1
a2207 1
#ifdef PERL_ANY_COW
d2294 1
a2294 1
pd	|OP *	|pad_leavemy
a2307 1
p	|CV*	|cv_clone_into	|NN CV* proto|NN CV *target
d2312 1
a2312 2
pdR	|PADLIST *|padlist_dup	|NULLOK PADLIST *srcpad \
				|NN CLONE_PARAMS *param
a2313 2
p	|PAD **	|padlist_store	|NN PADLIST *padlist|I32 key \
				|NULLOK PAD *val
a2315 2
pR	|CV*	|find_runcv_where|U8 cond|IV arg \
				 |NULLOK U32 *db_seqp
a2331 1
Ap      |void   |hv_rand_set    |NN HV *hv|U32 new_xhv_rand
d2440 2
d2600 2
@


1.1.1.12
log
@Import perl-5.20.1
@
text
@d19 1
a19 1
:	     If M isn't specified, and no documentation is furnished, the
d42 1
a42 1
:   d  Function has documentation (somewhere) in the source:
d51 5
a55 8
:      To be usable from dynamically loaded extensions, either:
:	  1) must be static to its containing file ("i" or "s" flag); or
:         2) be combined with the "X" flag.
:
:   f  Function takes a format string. If the function name /strftime/
:      then its assumed to take a strftime-style format string as 1st arg;
:      otherwise it's assumed to be a printf style format string, varargs
:      (hence any entry that would otherwise go in embed.h is suppressed):
a186 3
#if defined(PERL_IN_MALLOC_C)
sn	|int	|adjust_size_and_find_bucket	|NN size_t *nbytes_p
#endif
d206 4
a209 5
Apd	|SV*	|av_delete	|NN AV *av|SSize_t key|I32 flags
ApdR	|bool	|av_exists	|NN AV *av|SSize_t key
Apd	|void	|av_extend	|NN AV *av|SSize_t key
p	|void	|av_extend_guts	|NULLOK AV *av|SSize_t key \
				|NN SSize_t *maxp \
d211 4
a214 4
ApdR	|SV**	|av_fetch	|NN AV *av|SSize_t key|I32 lval
Apd	|void	|av_fill	|NN AV *av|SSize_t fill
ApdR	|SSize_t|av_len		|NN AV *av
ApdR	|AV*	|av_make	|SSize_t size|NN SV **strp
d221 3
a223 3
Apd	|SV**	|av_store	|NN AV *av|SSize_t key|NULLOK SV *val
AidR	|SSize_t|av_top_index	|NN AV *av
AmpdR	|SSize_t|av_tindex	|NN AV *av
d226 1
a226 1
Apd	|void	|av_unshift	|NN AV *av|SSize_t num
a255 2
p	|const COP*|closest_cop	|NN const COP *cop|NULLOK const OP *o \
				|NULLOK const OP *curop|bool opnext
d268 1
d297 1
a297 1
EMXp	|void	|cv_ckproto_len_flags	|NN const CV* cv|NULLOK const GV* gv\
a302 1
pR	|SV*	|cv_const_sv_or_av|NULLOK const CV *const cv
a325 1
pR	|SV *	|defelem_target	|NN SV *sv|NULLOK MAGIC *mg
a386 10
#if defined(PERL_IN_DOIO_C)
s	|IO *	|openn_setup    |NN GV *gv|NN char *mode|NN PerlIO **saveifp \
				|NN PerlIO **saveofp|NN int *savefd \
                                |NN char *savetype
s	|bool	|openn_cleanup	|NN GV *gv|NN IO *io|NULLOK PerlIO *fp \
				|NN char *mode|NN const char *oname \
                                |NULLOK PerlIO *saveifp|NULLOK PerlIO *saveofp \
                                |int savefd|char savetype|int writing \
                                |bool was_fdopen|NULLOK const char *type
#endif
a390 5
Mp	|bool	|do_open_raw	|NN GV *gv|NN const char *oname|STRLEN len \
				|int rawmode|int rawperm
Mp	|bool	|do_open6	|NN GV *gv|NN const char *oname|STRLEN len \
				|NULLOK PerlIO *supplied_fp|NULLOK SV **svp \
				|U32 num
d416 3
a430 1
pR	|OP *	|parse_subsignature
d466 1
a466 1
Ap	|void	|gv_check	|NN HV* stash
a511 2
px	|GV *	|gv_override	|NN const char * const name \
				|const STRLEN len
d534 1
a534 1
Apod	|STRLEN	|hv_fill	|NN HV *const hv
d637 1
a637 1
EXp        |UV        |_to_fold_latin1|const U8 c|NN U8 *p|NN STRLEN *lenp|const unsigned int flags
d644 1
a644 1
AMp	|UV	|_to_uni_fold_flags|UV c|NN U8 *p|NN STRLEN *lenp|U8 flags
d728 1
a728 1
Apd	|void	|op_null	|NN OP* o
d745 1
a745 1
EMsR	|char	|grok_bslash_c	|const char source|const bool output_warning
d822 1
a822 1
				|NN SV *meth|U32 flags \
a844 2
: exported for re.pm
EXpR	|MAGIC*	|mg_find_mglob	|NN SV* sv
a857 1
s	|void	|move_proto_attr|NN OP **proto|NN OP **attrs|NN const GV *name
d891 6
a896 1
Afp	|char *	|my_strftime	|NN const char *fmt|int sec|int min|int hour|int mday|int mon|int year|int wday|int yday|int isdst
a898 2
ADMnoPR	|UV	|NATIVE_TO_NEED	|const UV enc|const UV ch
ADMnoPR	|UV	|ASCII_TO_NEED	|const UV enc|const UV ch
a961 1
pa	|SV*	|newSVavdefelem	|NN AV *av|SSize_t ix|bool extendible
d1008 1
a1008 1
Apd	|void	|op_free	|NULLOK OP* arg
d1061 5
a1065 10
#ifdef WIN32
ApPM	|char*	|my_setlocale	|int category|NULLOK const char* locale
#else
AmPM	|char*	|my_setlocale	|int category|NULLOK const char* locale
#endif
ApOM	|int	|init_i18nl10n	|int printwarn
ApOM	|int	|init_i18nl14n	|int printwarn
ApOM	|void	|new_collate	|NULLOK const char* newcoll
ApOM	|void	|new_ctype	|NN const char* newctype
ApOM	|void	|new_numeric	|NULLOK const char* newcoll
a1068 1
Admn	|void	|sync_locale
d1091 3
a1093 3
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_PERL_C) || defined(PERL_IN_UTF8_C)
AMpR	|SV*	|_new_invlist_C_array|NN const UV* const list
: Not used currently: EXMs	|bool	|_invlistEQ	|NN SV* const a|NN SV* const b|const bool complement_b
d1096 2
a1097 2
				|NN char* strend|NN char* strbeg \
				|SSize_t minend |NN SV* screamer|U32 nosave
d1115 2
a1116 6
Ap	|char*	|re_intuit_start|NN REGEXP * const rx \
				|NULLOK SV* sv \
				|NN const char* const strbeg \
				|NN char* strpos \
				|NN char* strend \
				|const U32 flags \
d1124 2
a1125 3
				|NN char *strend|NN char *strbeg \
				|SSize_t minend|NN SV *sv \
				|NULLOK void *data|U32 flags
d1127 1
d1150 1
a1150 1
Ep	|void	|regprop	|NULLOK const regexp *prog|NN SV* sv|NN const regnode* o|NULLOK const regmatch_info *reginfo
d1181 2
a1182 3
Amp	|void	|save_aelem	|NN AV* av|SSize_t idx|NN SV **sptr
Ap	|void	|save_aelem_flags|NN AV* av|SSize_t idx|NN SV **sptr \
				 |const U32 flags
d1190 1
a1190 1
Ap	|void	|save_adelete	|NN AV *av|SSize_t key
a1223 1
Xp	|void	|save_strlen	|NN STRLEN* ptr
a1251 2
: Only used by perl.c/miniperl.c, but defined in caretx.c
px	|void	|set_caret_X
d1262 1
a1262 1
Ap	|SV**	|stack_grow	|NN SV** sp|NN SV** p|SSize_t n
d1267 1
a1267 1
Apd	|bool	|sv_2bool_flags	|NN SV *sv|I32 flags
d1274 2
a1275 2
Amb	|IV	|sv_2iv		|NN SV *sv
Apd	|IV	|sv_2iv_flags	|NN SV *const sv|const I32 flags
d1277 1
a1277 1
Apd	|NV	|sv_2nv_flags	|NN SV *const sv|const I32 flags
d1280 2
a1281 2
Amb	|char*	|sv_2pv		|NN SV *sv|NULLOK STRLEN *lp
Apd	|char*	|sv_2pv_flags	|NN SV *const sv|NULLOK STRLEN *const lp|const I32 flags
d1285 2
a1286 2
Amb	|UV	|sv_2uv		|NN SV *sv
Apd	|UV	|sv_2uv_flags	|NN SV *const sv|const I32 flags
a1299 6
#if defined(PERL_DEBUG_READONLY_COW)
p	|void	|sv_buf_to_ro	|NN SV *sv
# if defined(PERL_IN_SV_C)
s	|void	|sv_buf_to_rw	|NN SV *sv
# endif
#endif
a1363 2
: exported for re.pm
EXp	|MAGIC *|sv_magicext_mglob|NN SV *sv
a1372 2
Apd	|STRLEN	|sv_pos_b2u_flags|NN SV *const sv|STRLEN const offset \
				 |U32 flags
d1432 1
d1434 1
a1434 1
EiM	|void	|invlist_set_len|NN SV* const invlist|const UV len|const bool offset
d1441 2
a1442 1
EiMR	|STRLEN*|get_invlist_iter_addr	|NN SV* invlist
d1450 1
a1450 3
EXpM	|void	|_invlist_intersection_maybe_complement_2nd \
		|NULLOK SV* const a|NN SV* const b          \
		|const bool complement_b|NN SV** i
d1452 1
a1452 3
EXpM	|void	|_invlist_union_maybe_complement_2nd        \
		|NULLOK SV* const a|NN SV* const b          \
		|const bool complement_b|NN SV** output
d1455 1
a1458 1
EXMpR	|SV*	|_setup_canned_invlist|const STRLEN size|const UV element0|NN UV** other_elements_ptr
d1468 1
a1468 1
EiMR	|bool*	|get_invlist_offset_addr|NN SV* invlist
d1474 1
a1474 12
#endif
#if defined(PERL_IN_REGCOMP_C) || defined(PERL_IN_REGEXEC_C)
ApM	|SV*	|_get_regclass_nonbitmap_data				   \
				|NULLOK const regexp *prog		   \
				|NN const struct regnode *node|bool doinit \
				|NULLOK SV **listsvp			   \
				|NULLOK SV **lonly_utf8_locale
#endif
#if defined(PERL_IN_REGCOMP_C) || defined (PERL_IN_DUMP_C)
EXMp	|void	|_invlist_dump	|NN PerlIO *file|I32 level   \
				|NN const char* const indent \
				|NN SV* const invlist
d1481 1
a1481 2
AMp	|UV	|_to_utf8_lower_flags	|NN const U8 *p|NN U8* ustrp  \
				|NULLOK STRLEN *lenp|bool flags
d1483 1
a1483 2
AMp	|UV	|_to_utf8_upper_flags	|NN const U8 *p|NN U8* ustrp   \
				|NULLOK STRLEN *lenp|bool flags
d1485 1
a1485 2
AMp	|UV	|_to_utf8_title_flags	|NN const U8 *p|NN U8* ustrp   \
				|NULLOK STRLEN *lenp|bool flags
d1487 1
a1487 2
AMp	|UV	|_to_utf8_fold_flags|NN const U8 *p|NN U8* ustrp       \
				|NULLOK STRLEN *lenp|U8 flags
d1524 3
a1526 3
ApMD	|UV	|valid_utf8_to_uvuni	|NN const U8 *s|NULLOK STRLEN *retlen
Amd	|UV	|utf8_to_uvchr_buf	|NN const U8 *s|NN const U8 *send|NULLOK STRLEN *retlen
ApdD	|UV	|utf8_to_uvuni_buf	|NN const U8 *s|NN const U8 *send|NULLOK STRLEN *retlen
d1529 1
d1532 6
d1539 5
a1543 1
Ap	|UV	|utf8n_to_uvuni|NN const U8 *s|STRLEN curlen|NULLOK STRLEN *retlen|U32 flags
d1545 3
a1547 5
Adm	|U8*	|uvchr_to_utf8	|NN U8 *d|UV uv
Ap	|U8*	|uvuni_to_utf8	|NN U8 *d|UV uv
Adm	|U8*	|uvchr_to_utf8_flags	|NN U8 *d|UV uv|UV flags
Apd	|U8*	|uvoffuni_to_utf8_flags	|NN U8 *d|UV uv|UV flags
Ap	|U8*	|uvuni_to_utf8_flags	|NN U8 *d|UV uv|UV flags
a1558 2
Xpno	|double	|drand48_r	|NN perl_drand48_t *random_state
Xpno	|void	|drand48_init_r |NN perl_drand48_t *random_state|U32 seed
a1584 2
: used to check for NULs in pathnames and other names
AiR	|bool	|is_safe_syscall|NN const char *pv|STRLEN len|NN const char *what|NN const char *op_name
a1612 1
Asrnx	|void	|croak_memory_wrap
d1679 1
a1679 1
Ap	|void	|tmps_grow	|SSize_t n
d1684 2
a1685 2
Am	|CV*	|newATTRSUB	|I32 floor|NULLOK OP *o|NULLOK OP *proto|NULLOK OP *attrs|NULLOK OP *block
pX	|CV*	|newATTRSUB_x	|I32 floor|NULLOK OP *o|NULLOK OP *proto \
d1687 1
a1687 1
				 |bool o_is_gv
d1725 5
a1732 3
#  if defined(USE_ITHREADS)
Ap	|void	|sys_intern_dup	|NN struct interp_intern* src|NN struct interp_intern* dst
#  endif
d1735 1
a1735 1
AmopP	|const XOP *	|custom_op_xop	|NN const OP *o
a1737 1
pRX	|XOPRETANY	|custom_op_get_field	|NN const OP *o|const xop_flags_enum field
a1763 13
s  |bool|parse_gv_stash_name|NN HV **stash|NN GV **gv \
                     |NN const char **name|NN STRLEN *len \
                     |NN const char *nambeg|STRLEN full_len \
                     |const U32 is_utf8|const I32 add
s  |bool|find_default_stash|NN HV **stash|NN const char *name \
                     |STRLEN len|const U32 is_utf8|const I32 add \
                     |svtype sv_type
s  |bool|gv_magicalize|NN GV *gv|NN HV *stash|NN const char *name \
                     |STRLEN len|bool addmg \
                     |svtype sv_type
s  |void|maybe_multimagic_gv|NN GV *gv|NN const char *name|const svtype sv_type
s  |bool|gv_is_in_main|NN const char *name|STRLEN len \
                      |const U32 is_utf8
d1782 1
a1782 1
in	|U32|ptr_hash|PTRV u
a1783 1
sn	|struct xpvhv_aux*|hv_auxinit_internal|NN struct xpvhv_aux *iter
d1791 2
a1792 2
s	|void	|save_magic_flags|I32 mgs_ix|NN SV *sv|U32 flags
-s	|int	|magic_methpack	|NN SV *sv|NN const MAGIC *mg|NN SV *meth
d1794 1
a1794 1
				|NN SV *meth|U32 flags \
a1797 1
s	|void	|fixup_errno_string|NN SV* sv
a1812 1
s	|void	|null_listop_in_list_context |NN OP* o
d1820 1
a1820 1
s	|void	|bad_type_gv	|I32 n|NN const char *t|NN GV *gv|U32 flags|NN const OP *kid
d1906 1
a1906 2
snR	|char *	|bytes_to_uni	|NN const U8 *start|STRLEN len|NN char *dest \
	      			|const bool needs_swap
d1928 2
a1929 3
s	|SV **	|adjust_stack_on_leave|NN SV **newsp|NN SV **sp|NN SV **mark|I32 gimme \
				      |U32 flags|bool lvalue
iRn	|bool	|path_is_searchable|NN const char *name
d1957 1
a1957 1
s	|OP*	|doform		|NN CV *cv|NN GV *gv|NULLOK OP *retop
d1963 1
a1963 1
p	|OP *	|tied_method|NN SV *methname|NN SV **sp \
d1968 1
a1968 1
Es	|regnode*|reg		|NN RExC_state_t *pRExC_state \
d1970 1
a1970 1
Es	|regnode*|reganode	|NN RExC_state_t *pRExC_state|U8 op \
d1972 1
a1972 1
Es	|regnode*|regatom	|NN RExC_state_t *pRExC_state \
d1974 1
a1974 1
Es	|regnode*|regbranch	|NN RExC_state_t *pRExC_state \
d1976 1
a1976 1
Ei	|STRLEN	|reguni		|NN const RExC_state_t *pRExC_state \
d1978 1
a1978 8
Es	|void	 |set_ANYOF_arg	|NN RExC_state_t* const pRExC_state \
				|NN regnode* const node                    \
				|NULLOK SV* const cp_list                  \
				|NULLOK SV* const runtime_defns            \
				|NULLOK SV* const only_utf8_locale_list	   \
				|NULLOK SV* const swash                    \
				|const bool has_user_defined_property
Es	|regnode*|regclass	|NN RExC_state_t *pRExC_state \
d1983 2
a1984 2
Es	|bool|could_it_be_a_POSIX_class|NN RExC_state_t *pRExC_state
Es	|regnode*|handle_regex_sets|NN RExC_state_t *pRExC_state \
d1988 2
a1989 2
Es	|void|parse_lparen_question_flags|NN RExC_state_t *pRExC_state
Es	|regnode*|reg_node	|NN RExC_state_t *pRExC_state|U8 op
d1991 1
a1991 1
Es	|regnode*|regpiece	|NN RExC_state_t *pRExC_state \
d1993 1
a1993 1
Es	|bool	|grok_bslash_N	|NN RExC_state_t *pRExC_state        \
d1997 1
a1997 1
Es	|void	|reginsert	|NN RExC_state_t *pRExC_state \
d1999 1
a1999 1
Es	|void	|regtail	|NN RExC_state_t *pRExC_state \
d2001 1
a2001 1
Es	|SV *	|reg_scan_name	|NN RExC_state_t *pRExC_state \
d2003 1
a2003 1
Es	|U32	|join_exact	|NN RExC_state_t *pRExC_state \
d2005 1
a2005 1
				|NN bool *unfolded_multi_char          \
d2007 1
a2007 1
EsRn	|char *	|regwhite	|NN RExC_state_t *pRExC_state \
d2009 1
a2009 1
EsRn	|char *	|regpatws	|NN RExC_state_t *pRExC_state \
d2011 1
a2011 1
Ei	|void   |alloc_maybe_populate_EXACT|NN RExC_state_t *pRExC_state \
d2013 6
a2018 7
				|UV code_point|bool downgradable
Ei	|U8   |compute_EXACTish|NN RExC_state_t *pRExC_state
Es	|char *	|nextchar	|NN RExC_state_t *pRExC_state
Es	|bool	|reg_skipcomment|NN RExC_state_t *pRExC_state
Es	|void	|scan_commit	|NN const RExC_state_t *pRExC_state \
				|NN struct scan_data_t *data        \
				|NN SSize_t *minlenp		    \
d2020 13
a2032 30
Es	|void	|populate_ANYOF_from_invlist|NN regnode *node|NN SV** invlist_ptr
Es	|void	|ssc_anything	|NN regnode_ssc *ssc
EsR	|int	|ssc_is_anything|NN const regnode_ssc *ssc
Es	|void	|ssc_init	|NN const RExC_state_t *pRExC_state \
				|NN regnode_ssc *ssc
EsR	|int	|ssc_is_cp_posixl_init|NN const RExC_state_t *pRExC_state \
				|NN const regnode_ssc *ssc
Es	|void	|ssc_and	|NN const RExC_state_t *pRExC_state \
				|NN regnode_ssc *ssc                \
				|NN const regnode_charclass *and_with
Es	|void	|ssc_or		|NN const RExC_state_t *pRExC_state \
				|NN regnode_ssc *ssc \
				|NN const regnode_charclass *or_with
Es	|SV*	|get_ANYOF_cp_list_for_ssc                                 \
				|NN const RExC_state_t *pRExC_state \
				|NN const regnode_charclass* const node
Ei	|void	|ssc_intersection|NN regnode_ssc *ssc \
				|NN SV* const invlist|const bool invert_2nd
Ei	|void	|ssc_union	|NN regnode_ssc *ssc \
				|NN SV* const invlist|const bool invert_2nd
Ei	|void	|ssc_add_range	|NN regnode_ssc *ssc \
				|UV const start|UV const end
Ei	|void	|ssc_cp_and	|NN regnode_ssc *ssc \
				|UV const cp
Ei	|void	|ssc_clear_locale|NN regnode_ssc *ssc
Es	|void	|ssc_finalize	|NN RExC_state_t *pRExC_state \
				|NN regnode_ssc *ssc
Es	|SSize_t|study_chunk	|NN RExC_state_t *pRExC_state \
				|NN regnode **scanp|NN SSize_t *minlenp \
				|NN SSize_t *deltap|NN regnode *last \
d2034 2
a2035 2
                                |I32 stopparen|U32 recursed_depth \
				|NULLOK regnode_ssc *and_withp \
d2037 4
a2040 4
EsRn	|U32	|add_data	|NN RExC_state_t* const pRExC_state \
				|NN const char* const s|const U32 n
rs	|void	|re_croak2	|bool utf8|NN const char* pat1|NN const char* pat2|...
Ei	|I32	|regpposixcc	|NN RExC_state_t *pRExC_state \
d2042 1
a2042 1
Es	|I32	|make_trie	|NN RExC_state_t *pRExC_state \
d2046 1
a2046 1
Es	|void	|make_trie_failtable	|NN RExC_state_t *pRExC_state \
a2049 1
Es        |void        |regdump_intflags|NULLOK const char *lead| const U32 flags
a2056 2
Es	|bool	|put_latin1_charclass_innards|NN SV* sv|NN char* bitmap
Es	|void	|put_range	|NN SV* sv|UV start|UV end
d2066 1
a2066 1
Es	|U8	|regtail_study	|NN RExC_state_t *pRExC_state \
d2074 1
a2074 1
ERs	|SSize_t|regmatch	|NN regmatch_info *reginfo|NN char *startpos|NN regnode *prog
d2076 2
a2077 4
				|NN const regnode *p \
				|NN regmatch_info *const reginfo \
				|I32 max \
				|int depth
d2079 1
a2079 4
ERs	|bool	|reginclass	|NULLOK regexp * const prog  \
				|NN const regnode * const n  \
				|NN const U8 * const p       \
				|NN const U8 * const p_end   \
d2085 6
a2090 2
ERsn	|U8*	|reghop3	|NN U8 *s|SSize_t off|NN const U8 *lim
ERsn	|U8*	|reghop4	|NN U8 *s|SSize_t off|NN const U8 *llim \
d2092 2
a2093 1
ERsn	|U8*	|reghopmaybe3	|NN U8 *s|SSize_t off|NN const U8 *lim
d2096 2
a2097 1
				|NULLOK regmatch_info *reginfo
d2194 1
a2194 1
				|int allow_pack
d2196 1
d2202 1
a2202 1
s	|char*	|scan_ident	|NN char *s|NN char *dest \
d2208 1
a2208 2
				|bool deprecate_escaped_matching \
				|NULLOK char **delimp
d2215 1
a2215 1
sR	|char*	|skipspace_flags|NN char *s|U32 flags
d2253 1
a2253 1
sf	|void	|printbuf	|NN const char *const fmt|NN const char *const s
a2255 1
EXMp	|bool	|validate_proto	|NN SV *name|NULLOK SV *proto|bool warn
d2258 1
a2258 1
s	|bool	|isa_lookup	|NN HV *stash|NN const char * const name \
d2262 2
a2263 1
#if defined(PERL_IN_LOCALE_C) && defined(USE_LOCALE)
d2265 1
a2265 1
s	|bool	|is_cur_LC_category_utf8|int category
d2269 1
d2271 1
a2271 1
s	|SV *	|with_queued_errors|NN SV *ex
d2289 1
a2289 1
iR	|bool	|is_utf8_common	|NN const U8 *const p|NN SV **swash|NN const char * const swashname|NULLOK SV* const invlist
a2292 2
AiMn	|void	|append_utf8_from_native_byte|const U8 byte|NN U8** dest

d2315 1
a2315 1
#if defined(USE_PERLIO)
d2323 1
a2323 1
Ap	|void	|PerlIO_set_cnt		|NULLOK PerlIO *f|SSize_t cnt
d2325 1
a2325 1
					|SSize_t cnt
d2338 2
a2339 2
ApR	|SSize_t	  |PerlIO_get_bufsiz	|NULLOK PerlIO *f
ApR	|SSize_t	  |PerlIO_get_cnt	|NULLOK PerlIO *f
d2451 1
a2451 1
XpoR	|SSize_t*|hv_placeholders_p	|NN HV *hv
d2467 78
d2594 1
a2594 1
Apnod	|Size_t	|my_strlcat	|NULLOK char *dst|NULLOK const char *src|Size_t size
d2598 1
a2598 1
Apnod     |Size_t |my_strlcpy     |NULLOK char *dst|NULLOK const char *src|Size_t size
d2683 1
a2683 2
				 |NULLOK HV * const exceptions \
				 |U32 hash|U32 flags
a2721 7

: Some static inline functions need predeclaration because they are used
: inside other static inline functions.
#if defined(PERL_CORE) || defined (PERL_EXT)
Ei	|STRLEN	|sv_or_pv_pos_u2b|NN SV *sv|NN const char *pv|STRLEN pos \
				 |NULLOK STRLEN *lenp
#endif
@


