head	1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2017.02.05.00.31.52;	author afresh1;	state Exp;
branches;
next	;
commitid	cxJ08BvJA9Pt2PTM;


desc
@@


1.1
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@# This file intended to be used with clang as
#
#  clang -fsanitize=foo -fsanitize-blacklist=`pwd`/asan_ignore
#
# It lists those files / functions that clang's Address Sanitizer should
# ignore.
#
# See http://clang.llvm.org/docs/SanitizerSpecialCaseList.html.


# The pp functions used under 'use integer' shouldn't warn about
# integer overflow etc.
#
# Unfortunately there doesn't seem to be any way to disable just specific
# errors (i.e. the integer overflow ones). The manual implies that you can
# suffix with =foo for a "tool-specific category", but neither =undefined
# nor =signed-integer-overflow worked.

fun:Perl_pp_i_*

# Perl's << is defined as using the underlying C's << operator, with the
# same undefined behaviour for shifts greater than the word size.
# (UVs normally, IVs with 'use integer')

fun:Perl_pp_left_shift

# this function numifies the field width in eg printf "%10f".
# It has its own overflow detection, so don't warn about it

fun:S_expect_number
@
