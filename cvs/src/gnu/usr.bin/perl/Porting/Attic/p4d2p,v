head	1.4;
access;
symbols
	OPENBSD_4_6:1.3.0.26
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.22
	OPENBSD_4_5_BASE:1.3
	PERL_5_10_0:1.1.1.3
	OPENBSD_4_4:1.3.0.20
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.18
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.16
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.14
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.12
	OPENBSD_4_0_BASE:1.3
	PERL_5_8_8:1.1.1.3
	OPENBSD_3_9:1.3.0.10
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	PERL_5_8_6:1.1.1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	PERL_5_8_5:1.1.1.3
	PERL_5_8_3:1.1.1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	PERL_5_8_2:1.1.1.3
	OPENBSD_3_2:1.1.1.2.0.12
	OPENBSD_3_2_BASE:1.1.1.2
	OPENBSD_3_1:1.1.1.2.0.10
	OPENBSD_3_1_BASE:1.1.1.2
	OPENBSD_3_0:1.1.1.2.0.8
	OPENBSD_3_0_BASE:1.1.1.2
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.1.1.2.0.6
	OPENBSD_2_9_BASE:1.1.1.2
	OPENBSD_2_8:1.1.1.2.0.4
	OPENBSD_2_8_BASE:1.1.1.2
	OPENBSD_2_7:1.1.1.2.0.2
	OPENBSD_2_7_BASE:1.1.1.2
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	PERL_500503:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2009.10.12.18.24.22;	author millert;	state dead;
branches;
next	1.3;

1.3
date	2003.12.03.03.12.00;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2002.10.27.22.25.20;	author millert;	state dead;
branches;
next	1.1;

1.1
date	99.04.29.22.38.15;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.38.15;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.08.52;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.12.03.02.44.29;	author millert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Merge in perl 5.10.1
@
text
@#!/usr/bin/perl -wspi~

#
# reads a perforce style diff on stdin and outputs appropriate headers
# so the diff can be applied with the patch program
#
# Gurusamy Sarathy <gsar@@activestate.com>
#

BEGIN {
    $0 =~ s|.*/||;
    if ($h or $help) {
	print STDERR <<USAGE;
Usage: $0 [-v] [-h] files

	-h	print this help
	-v	output progress messages

Does inplace edit of diff files output by the perforce commands
"p4 describe", "p4 diff", and "p4 diff2". The result is suitable
for feeding to the "patch" program.

If no files are specified, reads from stdin and writes to stdout.

WARNING: It only handles context or unified diffs.

Example: p4 describe -du 123 | $0 > change-123.patch

USAGE
	exit(0);
    }
    unless (@@ARGV) { @@ARGV = '-'; undef $^I; }
    use vars qw($thisfile $time $file $fnum $v $h $help);
    $thisfile = "";
    $time = localtime(time);
}

my ($cur, $match);
$cur = m<^==== //depot/(.+?)\#\d+.* ====( \w+)?$> ... m<^(\@@\@@.+\@@\@@|\*+)$>;

$match = $1;

if ($ARGV ne $thisfile) {
    warn "processing patchfile [$ARGV]\n" unless $ARGV eq '-';
    $thisfile = $ARGV;
}

# while we are within range
if ($cur) {
    # set the file name after first line
    if ($cur == 1) {
	$file = $match;
	$fnum++;
    }
    # emit the diff header when we hit last line
    elsif ($cur =~ /E0$/) {
	my $f = $file;

	# special hack for perl so we can always use "patch -p1"
	$f =~ s<^.*?(perl.*?/)><$1>;

	# unified diff
	if ($match =~ /^\@@/) {
	    warn "emitting udiff header\n" if $v;
	    $_ = "Index: $f\n--- $f.~1~\t$time\n+++ $f\t$time\n$_";
	}
	# context diff
	elsif ($match =~ /^\*/) {
	    warn "emitting cdiff header\n" if $v;
	    $_ = "Index: $f\n*** $f.~1~\t$time\n--- $f\t$time\n$_";
	}
    }
    # see if we hit another patch (i.e. previous patch was empty)
    elsif (m<^==== //depot/(.+?)\#\d+.* ====( \w+)?$>) {
	$file = $match = $1;
    }
    # suppress all other lines in the header
    else {
	$_ = "";
    }
    warn "file [$file] line [$cur] file# [$fnum]\n" if $v;
}

$_ .= "End of Patch.\n" if eof;
@


1.3
log
@Add back these dead files for 5.8.2
@
text
@@


1.2
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d1 1
a1 1
#!/l/local/bin/perl -wspi.bak
d7 1
a7 1
# Gurusamy Sarathy <gsar@@umich.edu>
d39 1
a39 1
$cur = m<^==== //depot/(.+?)\#\d+.* ====$> ... m<^(\@@\@@.+\@@\@@|\*+)$>;
d74 1
a74 1
    elsif (m<^==== //depot/(.+?)\#\d+.* ====$>) {
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl5.005_03
@
text
@@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@d7 1
a7 1
# Gurusamy Sarathy <gsar@@activestate.com>
@


1.1.1.3
log
@perl 5.8.2 from CPAN
@
text
@d1 1
a1 1
#!/usr/bin/perl -wspi~
d39 1
a39 1
$cur = m<^==== //depot/(.+?)\#\d+.* ====( \w+)?$> ... m<^(\@@\@@.+\@@\@@|\*+)$>;
d74 1
a74 1
    elsif (m<^==== //depot/(.+?)\#\d+.* ====( \w+)?$>) {
@


