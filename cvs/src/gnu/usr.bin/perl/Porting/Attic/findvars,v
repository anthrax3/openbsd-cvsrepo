head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.1.5.0.18
	OPENBSD_5_3_BASE:1.1.1.5
	OPENBSD_5_2:1.1.1.5.0.16
	OPENBSD_5_2_BASE:1.1.1.5
	OPENBSD_5_1_BASE:1.1.1.5
	OPENBSD_5_1:1.1.1.5.0.14
	OPENBSD_5_0:1.1.1.5.0.12
	OPENBSD_5_0_BASE:1.1.1.5
	OPENBSD_4_9:1.1.1.5.0.10
	OPENBSD_4_9_BASE:1.1.1.5
	PERL_5_12_2:1.1.1.5
	OPENBSD_4_8:1.1.1.5.0.8
	OPENBSD_4_8_BASE:1.1.1.5
	OPENBSD_4_7:1.1.1.5.0.4
	OPENBSD_4_7_BASE:1.1.1.5
	PERL_5_10_1:1.1.1.5
	OPENBSD_4_6:1.1.1.5.0.6
	OPENBSD_4_6_BASE:1.1.1.5
	OPENBSD_4_5:1.1.1.5.0.2
	OPENBSD_4_5_BASE:1.1.1.5
	PERL_5_10_0:1.1.1.5
	OPENBSD_4_4:1.1.1.4.0.20
	OPENBSD_4_4_BASE:1.1.1.4
	OPENBSD_4_3:1.1.1.4.0.18
	OPENBSD_4_3_BASE:1.1.1.4
	OPENBSD_4_2:1.1.1.4.0.16
	OPENBSD_4_2_BASE:1.1.1.4
	OPENBSD_4_1:1.1.1.4.0.14
	OPENBSD_4_1_BASE:1.1.1.4
	OPENBSD_4_0:1.1.1.4.0.12
	OPENBSD_4_0_BASE:1.1.1.4
	PERL_5_8_8:1.1.1.4
	OPENBSD_3_9:1.1.1.4.0.10
	OPENBSD_3_9_BASE:1.1.1.4
	OPENBSD_3_8:1.1.1.4.0.8
	OPENBSD_3_8_BASE:1.1.1.4
	OPENBSD_3_7:1.1.1.4.0.6
	OPENBSD_3_7_BASE:1.1.1.4
	PERL_5_8_6:1.1.1.4
	OPENBSD_3_6:1.1.1.4.0.4
	OPENBSD_3_6_BASE:1.1.1.4
	PERL_5_8_5:1.1.1.4
	PERL_5_8_3:1.1.1.4
	OPENBSD_3_5:1.1.1.4.0.2
	OPENBSD_3_5_BASE:1.1.1.4
	PERL_5_8_2:1.1.1.4
	OPENBSD_3_4:1.1.1.3.0.4
	OPENBSD_3_4_BASE:1.1.1.3
	OPENBSD_3_3:1.1.1.3.0.2
	OPENBSD_3_3_BASE:1.1.1.3
	PERL_5_8_0:1.1.1.3
	OPENBSD_3_2:1.1.1.2.0.12
	OPENBSD_3_2_BASE:1.1.1.2
	OPENBSD_3_1:1.1.1.2.0.10
	OPENBSD_3_1_BASE:1.1.1.2
	OPENBSD_3_0:1.1.1.2.0.8
	OPENBSD_3_0_BASE:1.1.1.2
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.1.1.2.0.6
	OPENBSD_2_9_BASE:1.1.1.2
	OPENBSD_2_8:1.1.1.2.0.4
	OPENBSD_2_8_BASE:1.1.1.2
	OPENBSD_2_7:1.1.1.2.0.2
	OPENBSD_2_7_BASE:1.1.1.2
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	PERL_500503:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2013.03.25.20.40.46;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	99.04.29.22.38.13;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.38.13;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.08.52;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.10.27.22.15.09;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.12.03.02.44.29;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2008.09.29.17.18.12;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@#!/l/local/bin/perl -w

$pat = '';
# construct word list
while (<DATA>) {
  chomp;
  next unless $_;
  $pat .= "$_|";
}
chop $pat if $pat =~ /\|$/;

# grep
while (<>) {
    if (/^(.*?)\b($pat)\b(.*)$/o) {
        my $head = "$1#$2#";
        $_ = $3;
        while (/^(.*?)\b($pat)\b(.*)$/o) {
            $head .= "$1#$2#";
            $_ = $3;
        }
	print "$ARGV\:$.\:$head$_\n";
    }
}
continue {
    close ARGV if eof;
}
__END__
Argv
Cmd
DBcv
DBgv
DBline
DBsignal
DBsingle
DBsub
DBtrace
No
Sv
Xpv
Yes
amagic_generation
ampergv
an
archpat_auto
argvgv
argvoutgv
av_fetch_sv
basetime
beginav
bodytarget
bostr
bufend
bufptr
cddir
chopset
collation_ix
collation_name
collation_standard
collxfrm_base
collxfrm_mult
colors
colorset
compcv
compiling
comppad
comppad_name
comppad_name_fill
comppad_name_floor
cop_seqmax
copline
cryptseen
cshlen
cshname
curcop
curcopdb
curinterp
curpad
curpm
curstack
curstackinfo
curstash
curstname
curthr
dbargs
debdelim
debname
debstash
debug
defgv
defoutgv
defstash
delaymagic
diehook
dirty
dlevel
dlmax
do_undump
doextract
doswitches
dowarn
dumplvl
e_script
egid
endav
envgv
errgv
error_count
euid
eval_cond
eval_mutex
eval_owner
eval_root
eval_start
evalseq
exitlist
exitlistlen
expect
extralen
fdpid
filemode
firstgv
forkprocess
formfeed
formtarget
generation
gensym
gid
globalstash
he_root
hexdigit
hintgv
hints
hv_fetch_ent_mh
hv_fetch_sv
in_clean_all
in_clean_objs
in_eval
in_my
in_my_stash
incgv
initav
inplace
last_in_gv
last_lop
last_lop_op
last_proto
last_uni
lastfd
lastgotoprobe
lastscream
lastsize
lastspbase
laststatval
laststype
leftgv
lex_brackets
lex_brackstack
lex_casemods
lex_casestack
lex_defer
lex_dojoin
lex_expect
lex_fakebrack
lex_formbrack
lex_inpat
lex_inwhat
lex_op
lex_repl
lex_starts
lex_state
lex_stuff
lineary
linestart
linestr
localizing
localpatches
main_cv
main_root
main_start
mainstack
malloc_mutex
markstack
markstack_max
markstack_ptr
max_intro_pending
maxo
maxscream
maxsysfd
mess_sv
min_intro_pending
minus_F
minus_a
minus_c
minus_l
minus_n
minus_p
modcount
modglobal
multi_close
multi_end
multi_open
multi_start
multiline
mystrk
na
nexttoke
nexttype
nextval
nice_chunk
nice_chunk_size
ninterps
nomemok
nrs
nthreads
nthreads_cond
numeric_local
numeric_name
numeric_standard
ofmt
ofs
ofslen
oldbufptr
oldlastpm
oldname
oldoldbufptr
op
op_mask
op_seqmax
opsave
origalen
origargc
origargv
origenviron
origfilename
ors
orslen
osname
pad_reset_pending
padix
padix_floor
parsehook
patchlevel
patleave
pending_ident
perl_destruct_level
perldb
pidstatus
preambleav
preambled
preprocess
profiledata
reg_eval_set
reg_flags
reg_start_tmp
reg_start_tmpl
regbol
regcc
regcode
regcomp_parse
regcomp_rx
regcompp
regdata
regdummy
regendp
regeol
regexecp
regflags
regindent
reginput
reginterp_cnt
reglastparen
regnarrate
regnaughty
regnpar
regprecomp
regprev
regprogram
regsawback
regseen
regsize
regstartp
regtill
regxend
replgv
restartop
retstack
retstack_ix
retstack_max
rightgv
rs
rsfp
rsfp_filters
runops
savestack
savestack_ix
savestack_max
sawampersand
sawstudy
sawvec
scopestack
scopestack_ix
scopestack_max
screamfirst
screamnext
secondgv
seen_evals
seen_zerolen
sh_path
siggv
sighandlerp
sortcop
sortcxix
sortstash
specialsv_list
splitstr
stack_base
stack_max
stack_sp
start_env
statbuf
statcache
statgv
statname
statusvalue
statusvalue_vms
stdingv
strchop
strtab
sub_generation
sublex_info
subline
subname
sv_arenaroot
sv_count
sv_mutex
sv_no
sv_objcount
sv_root
sv_undef
sv_yes
svref_mutex
sys_intern
tainted
tainting
thisexpr
thr_key
threadnum
threads_mutex
threadsv_names
thrsv
timesbuf
tmps_floor
tmps_ix
tmps_max
tmps_stack
tokenbuf
top_env
toptarget
uid
unsafe
warnhook
xiv_arenaroot
xiv_root
xnv_root
xpv_root
xrv_root
piMem
piENV
piStdIO
piLIO
piDir
piSock
piProc
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl5.005_03
@
text
@@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@d14 9
a22 11
    print "$ARGV\:$.\:$_" if s/\b($pat)\b/#$1#/og;
# this variant might useful if the transformation is more complicated
#    if (/^(.*?)\b($pat)\b(.*)$/o) {
#        my $head = "$1#$2#";
#        $_ = $3;
#        while (/^(.*?)\b($pat)\b(.*)$/o) {
#            $head .= "$1#$2#";
#            $_ = $3;
#        }
#	print "$ARGV\:$.\:$head$_\n";
#    }
d241 1
@


1.1.1.3
log
@stock perl 5.8.0 from CPAN
@
text
@d215 1
@


1.1.1.4
log
@perl 5.8.2 from CPAN
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
@


1.1.1.5
log
@import perl 5.10.0 from CPAN
@
text
@d85 1
d111 3
d215 2
d335 1
d341 1
d347 4
@


