head	1.2;
access;
symbols
	OPENBSD_5_6:1.1.1.3.0.22
	OPENBSD_5_6_BASE:1.1.1.3
	PERL_5_18_2:1.1.1.3
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.3.0.20
	OPENBSD_5_5_BASE:1.1.1.3
	OPENBSD_5_4:1.1.1.3.0.16
	OPENBSD_5_4_BASE:1.1.1.3
	PERL_5_16_3:1.1.1.3
	OPENBSD_5_3:1.1.1.3.0.14
	OPENBSD_5_3_BASE:1.1.1.3
	OPENBSD_5_2:1.1.1.3.0.12
	OPENBSD_5_2_BASE:1.1.1.3
	OPENBSD_5_1_BASE:1.1.1.3
	OPENBSD_5_1:1.1.1.3.0.10
	OPENBSD_5_0:1.1.1.3.0.8
	OPENBSD_5_0_BASE:1.1.1.3
	OPENBSD_4_9:1.1.1.3.0.6
	OPENBSD_4_9_BASE:1.1.1.3
	PERL_5_12_2:1.1.1.3
	OPENBSD_4_8:1.1.1.3.0.4
	OPENBSD_4_8_BASE:1.1.1.3
	OPENBSD_4_7:1.1.1.3.0.2
	OPENBSD_4_7_BASE:1.1.1.3
	PERL_5_10_1:1.1.1.3
	OPENBSD_4_6:1.1.1.2.0.26
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.22
	OPENBSD_4_5_BASE:1.1.1.2
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.20
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.18
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.16
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.14
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.12
	OPENBSD_4_0_BASE:1.1.1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.2.0.10
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.8
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.6
	OPENBSD_3_7_BASE:1.1.1.2
	PERL_5_8_6:1.1.1.2
	OPENBSD_3_6:1.1.1.2.0.4
	OPENBSD_3_6_BASE:1.1.1.2
	PERL_5_8_5:1.1.1.2
	PERL_5_8_3:1.1.1.2
	OPENBSD_3_5:1.1.1.2.0.2
	OPENBSD_3_5_BASE:1.1.1.2
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2014.11.17.20.56.55;	author afresh1;	state dead;
branches;
next	1.1;
commitid	QP75iYx42Uo7mMxO;

1.1
date	2002.10.27.22.15.09;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.15.09;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.03.02.44.29;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2009.10.12.18.10.45;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@local $/;
$_ = <ARGV>;

my @@accv = /(^-+ \w+ -- \d+ --(?:.(?!^-))+)/msg;
my @@leak = /(\d+ bytes? in \d+ leaks? .+? created at:(?:.(?!^[\d-]))+)/msg;

$leak[ 0] =~ s/.* were found:\n\n//m; # Snip off totals.

# Weed out the known access violations.

@@accv = grep { ! /-- ru[hs] --.+setlocale.+Perl_init_i18nl10n/s }  @@accv;
@@accv = grep { ! /-- [rw][ui]s --.+_doprnt_dis/s }                 @@accv;
@@accv = grep { ! /-- (?:fon|ris) --.+__strxfrm/s }                 @@accv;
@@accv = grep { ! /-- rus --.+__catgets/s }                         @@accv;
@@accv = grep { ! /-- rus --.+__execvp/s }                          @@accv;
@@accv = grep { ! /-- rus --.+tmpnam.+tmpfile/s }                   @@accv;
@@accv = grep { ! /-- rus --.+__gethostbyname/s }                   @@accv;
@@accv = grep { ! /-- ris --.+__actual_atof/s }                     @@accv;
@@accv = grep { ! /-- ris --.+__strftime/s }                        @@accv;

# Weed out untraceable access violations.
@@accv = grep { ! / ----- /s }                                      @@accv;
@@accv = grep { ! /-- r[ui][hs] --.+proc_at_/s }                    @@accv;
@@accv = grep { ! /-- r[ui][hs] --.+pc = 0x/s }                     @@accv;

# The following look like being caused by the intrinsic inlined
# string handling functions reading one or few bytes beyond the
# actual length.
@@accv = grep { ! /-- rih --.+(?:memmove|strcpy).+moreswitches/s }  @@accv;
@@accv = grep { ! /-- (?:rih|rus) --.+strcpy.+gv_fetchfile/s }      @@accv;
@@accv = grep { ! /-- rih --.+strcmp.+doopen_pmc/s }                @@accv;
@@accv = grep { ! /-- rih --.+strcmp.+gv_fetchpv/s }                @@accv;
@@accv = grep { ! /-- r[ui]h --.+strcmp.+gv_fetchmeth/s }           @@accv;
@@accv = grep { ! /-- rih --.+memmove.+my_setenv/s }                @@accv;
@@accv = grep { ! /-- rih --.+memmove.+catpvn_flags/s }             @@accv;

# yyparse.
@@accv = grep { ! /Perl_yyparse/s }                                 @@accv;

# Weed out the known memory leaks.

@@leak = grep { ! /setlocale.+Perl_init_i18nl10n/s }   @@leak;
@@leak = grep { ! /setlocale.+set_numeric_standard/s } @@leak;
@@leak = grep { ! /_findiop.+fopen/s }                 @@leak;
@@leak = grep { ! /_findiop.+__fdopen/s }              @@leak;
@@leak = grep { ! /__localtime/s }                     @@leak;
@@leak = grep { ! /__get_libc_context/s }              @@leak;
@@leak = grep { ! /__sia_init/s }                      @@leak;

# Weed out untraceable memory leaks.
@@leak = grep { ! / ----- /s }                         @@leak;
@@leak = grep { ! /pc = 0x/s }                         @@leak;
@@leak = grep { ! /_pc_range_table/s }                 @@leak;
@@leak = grep { ! /_add_gp_range/s }                   @@leak;

# yyparse.
@@leak = grep { ! /Perl_yyparse/s }                    @@leak;

# Output the cleaned up report.

# Access violations.

for (my $i = 0; $i < @@accv; $i++) {
  $_ = $accv[$i];
  s/\d+/$i/;
  print;
}

# Memory leaks.

my ($leakb, $leakn, $leaks);

for (my $i = 0; $i < @@leak; $i++) {
  $_ = $leak[$i];
  print $_, "\n";
  /^(\d+) bytes? in (\d+) leak/;
  $leakb += $1;
  $leakn += $2;
  $leaks += $1 if /including (\d+) super/;
}

print "Bytes $leakb Leaks $leakn Super $leaks\n" if $leakb;
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.2 from CPAN
@
text
@d31 1
a31 1
@@accv = grep { ! /-- rih --.+strcmp.+doopen_pm/s }                 @@accv;
@


1.1.1.3
log
@import perl 5.10.1
@
text
@a0 9
#!./perl

# DAPM: this description is from the original commit message:
# this appears to be a HP leak detection thing:
#
#    Add a script for cleaning out the "known noise"
#    from Third Degree reports: either noise caused
#    by libc itself, or Perl_yyparse leaks.

@


