head	1.13;
access;
symbols
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.12.0.10
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.4
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.6
	OPENBSD_5_8_BASE:1.12
	PERL_5_20_2:1.1.1.11
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	PERL_5_20_1:1.1.1.11
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	PERL_5_18_2:1.1.1.10
	PERL:1.1.1
	OPENBSD_5_5:1.10.0.6
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	PERL_5_16_3:1.1.1.9
	OPENBSD_5_3:1.9.0.10
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.8
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.6
	OPENBSD_5_0:1.9.0.4
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.2
	OPENBSD_4_9_BASE:1.9
	PERL_5_12_2:1.1.1.8
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	PERL_5_10_1:1.1.1.7
	OPENBSD_4_6:1.7.0.6
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	PERL_5_10_0:1.1.1.6
	OPENBSD_4_4:1.6.0.20
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.18
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.16
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.14
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.12
	OPENBSD_4_0_BASE:1.6
	PERL_5_8_8:1.1.1.5
	OPENBSD_3_9:1.6.0.10
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.8
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.6
	OPENBSD_3_7_BASE:1.6
	PERL_5_8_6:1.1.1.5
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	PERL_5_8_5:1.1.1.5
	PERL_5_8_3:1.1.1.5
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	PERL_5_8_2:1.1.1.5
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	PERL_5_8_0:1.1.1.4
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.1
	CPAN:1.1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.13
date	2017.02.05.00.31.54;	author afresh1;	state Exp;
branches;
next	1.12;
commitid	cxJ08BvJA9Pt2PTM;

1.12
date	2014.11.17.20.56.55;	author afresh1;	state Exp;
branches;
next	1.11;
commitid	QP75iYx42Uo7mMxO;

1.11
date	2014.03.24.15.05.23;	author afresh1;	state Exp;
branches;
next	1.10;

1.10
date	2013.03.25.20.40.46;	author sthen;	state Exp;
branches;
next	1.9;

1.9
date	2010.09.24.15.06.44;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2009.10.12.18.24.22;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2008.09.29.17.36.01;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.03.03.02.26;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.27.22.25.20;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.24.18.35.02;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.06.17.04.37;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.04.29.22.51.15;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.11.30.07.49.30;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.38.13;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.08.52;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2001.05.24.18.22.30;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.10.27.22.15.09;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.12.03.02.44.29;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2008.09.29.17.18.12;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2009.10.12.18.10.46;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2010.09.24.14.49.21;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2013.03.25.20.09.30;	author sthen;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2014.03.24.14.59.09;	author afresh1;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2014.11.17.20.53.16;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@perl 5.004_04
@


1.13
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!/usr/bin/perl -w

# A tool to build a perl release tarball
# Very basic but functional - if you're on a unix system.
#
# If you're on Win32 then it should still work, but various Unix command-line
# tools will need to be available somewhere. An obvious choice is to install
# Cygwin and ensure its 'bin' folder is on the PATH in the shell where you run
# this script. The Cygwin 'bin' folder needs to precede the Windows 'system32'
# folder so that Cygwin's 'find' command is found in preference to the Windows
# 'find' command. In addition to the commands installed by default, your Cygwin
# installation will need to contain at least the 'cpio' and '7z' commands.
# Finally, ensure that the 'awk', 'shasum' (if you have it) and '7z' commands
# are copies of 'gawk.exe', 'sha1sum.exe' and 'lib\p7zip\7z.exe' respectively,
# rather than the links to them that only work in a Cygwin bash shell which
# they are by default.
#
# No matter how automated this gets, you'll always need to read
# and re-read pumpkin.pod and release_managers_guide.pod to
# check for things to be done at various stages of the process.
#
# Tim Bunce, June 1997

use ExtUtils::Manifest qw(fullcheck);
$ExtUtils::Manifest::Quiet = 1;
use Getopt::Std;

$|=1;

sub usage { die <<EOF; }
usage: $0 [ -r rootdir ] [-s suffix ] [ -b ] [ -n ]
    -r rootdir   directory under which to create the build dir and tarball
                 defaults to '..'
    -s suffix    suffix to append to to the perl-x.y.z dir and tarball name
		 defaults to the concatenation of the local_patches entry
		 in patchlevel.h (or blank, if none)
    -b           make a .bz2 file in addtion to a .gz file
    -x           make a .xz file in addtion to a .gz file
    -n           do not make any tarballs, just the directory
EOF

my %opts;
getopts('bxnr:s:', \%opts) or usage;
@@ARGV && usage;

$relroot = defined $opts{r} ? $opts{r} : "..";

die "Must be in root of the perl source tree.\n"
	unless -f "./MANIFEST" and -f "patchlevel.h";

open PATCHLEVEL,"<patchlevel.h" or die;
my @@patchlevel_h = <PATCHLEVEL>;
close PATCHLEVEL;
my $patchlevel_h = join "", grep { /^#\s*define/ } @@patchlevel_h;
print $patchlevel_h;
$revision = $1 if $patchlevel_h =~ /PERL_REVISION\s+(\d+)/;
$patchlevel = $1 if $patchlevel_h =~ /PERL_VERSION\s+(\d+)/;
$subversion = $1 if $patchlevel_h =~ /PERL_SUBVERSION\s+(\d+)/;
die "Unable to parse patchlevel.h" unless $subversion >= 0;
$vers = sprintf("%d.%d.%d", $revision, $patchlevel, $subversion);

# fetch list of local patches
my (@@local_patches, @@lpatch_tags, $lpatch_tags);
@@local_patches = grep { !/^\s*,?NULL/ && ! /,"uncommitted-changes"/ }
                 grep { /^static.*local_patches/../^};/ }
                 @@patchlevel_h;
@@lpatch_tags   = map  {  /^\s*,"(\w+)/ } @@local_patches;
$lpatch_tags   = join "-", @@lpatch_tags;

$perl = "perl-$vers";
$reldir = "$perl";

$lpatch_tags = $opts{s} if defined $opts{s};
$reldir .= "-$lpatch_tags" if $lpatch_tags;

print "\nMaking a release for $perl in $relroot/$reldir\n\n";

print "Cross-checking the MANIFEST...\n";
($missfile, $missentry) = fullcheck();
@@$missentry
    = grep {$_ !~ m!^\.git/! and $_ !~ m!(?:/|^)\.gitignore!} @@$missentry;
if (@@$missfile ) {
    warn "Can't make a release with MANIFEST files missing:\n";
    warn "\t".$_."\n" for (@@$missfile);
}
if (@@$missentry ) {
    warn "Can't make a release with files not listed in MANIFEST\n";
    warn "\t".$_."\n" for (@@$missentry);

}
if ("@@$missentry" =~ m/\.orig\b/) {
    # Handy listing of find command and .orig files from patching work.
    # I tend to run 'xargs rm' and copy and paste the file list.
    my $cmd = "find . -name '*.orig' -print";
    print "$cmd\n";
    system($cmd);
}
die "Aborted.\n" if @@$missentry or @@$missfile;
print "\n";

# VMS no longer has hardcoded version numbers descrip.mms

print "Creating $relroot/$reldir release directory...\n";
die "$relroot/$reldir release directory already exists\n"   if -e "$relroot/$reldir";
die "$relroot/$reldir.tar.gz release file already exists\n" if -e "$relroot/$reldir.tar.gz";
mkdir("$relroot/$reldir", 0755) or die "mkdir $relroot/$reldir: $!\n";
print "\n";


print "Copying files to release directory...\n";
# ExtUtils::Manifest maniread does not preserve the order
$cmd = "awk '{print \$1}' MANIFEST | cpio -pdm $relroot/$reldir";
system($cmd) == 0
    or die "$cmd failed";
print "\n";

chdir "$relroot/$reldir" or die $!;


print "Setting file permissions...\n";
system("find . -type f -print     | xargs chmod 0444");
system("find . -type d -print     | xargs chmod 0755");
my @@exe = map   { my ($f) = split; glob($f) }
          grep  { $_ !~ /\A#/ && $_ !~ /\A\s*\z/ }
          map   { split "\n" }
          do    { local (@@ARGV, $/) = 'Porting/exec-bit.txt'; <> };

system("chmod +x @@exe") == 0
    or die "system: $!";

my @@writables = qw(
    NetWare/config_H.wc
    NetWare/Makefile
    feature.h
    lib/feature.pm
    keywords.h
    keywords.c
    opcode.h
    opnames.h
    pp_proto.h
    proto.h
    embed.h
    embedvar.h
    overload.inc
    overload.h
    mg_vtable.h
    perlapi.h
    perlapi.c
    cpan/Devel-PPPort/module2.c
    cpan/Devel-PPPort/module3.c
    cpan/autodie/t/touch_me
    reentr.c
    reentr.h
    regcharclass.h
    regnodes.h
    warnings.h
    lib/warnings.pm
    win32/GNUmakefile
    win32/Makefile
    win32/Makefile.ce
    win32/makefile.mk
    win32/config_H.ce
    win32/config_H.gc
    win32/config_H.vc
    uconfig.h
);

my $out = `chmod u+w @@writables 2>&1`;
if ($? != 0) {
    warn $out;
    if ($out =~ /no such file/i) {
        warn "Check that the files above still exist in the Perl core.\n";
        warn "If not, remove them from \@@writables in Porting/makerel\n";
    }
    exit 1;
}

warn $out if $out;

chdir ".." or die $!;

exit if $opts{n};

my $src = (-e $perl) ? $perl : 'perl'; # 'perl' in maint branch

print "Checking if you have 7z...\n";
my $output_7z = `7z 2>&1`;
my $have_7z = defined $output_7z && $output_7z =~ /7-Zip/;

print "Checking if you have advdef...\n";
my $output_advdef = `advdef --version 2>&1`;
my $have_advdef = defined $output_advdef && $output_advdef =~ /advancecomp/;

if ($have_7z) {
    print "Creating and compressing the tar.gz file with 7z...\n";
    $cmd = "tar cf - $reldir | 7z a -tgzip -mx9 -bd -si $reldir.tar.gz";
    system($cmd) == 0 or die "$cmd failed";
} else {
    print "Creating and compressing the tar.gz file...\n";
    $cmd = "tar cf - $reldir | gzip --best > $reldir.tar.gz";
    system($cmd) == 0 or die "$cmd failed";
    if ($have_advdef) {
        print "Recompressing the tar.gz file with advdef...\n";
        $cmd = "advdef -z -4 $reldir.tar.gz";
        system($cmd) == 0 or die "$cmd failed";
    }
}

if ($opts{b}) {
    if ($have_7z) {
        print "Creating and compressing the tar.bz2 file with 7z...\n";
        $cmd = "tar cf - $reldir | 7z a -tbzip2 -mx9 -bd -si $reldir.tar.bz2";
        system($cmd) == 0 or die "$cmd failed";
    } else {
        print "Creating and compressing the tar.bz2 file...\n";
        $cmd = "tar cf - $reldir | bzip2 > $reldir.tar.bz2";
        system($cmd) == 0 or die "$cmd failed";
    }
}

if ($opts{x}) {
    print "Creating and compressing the tar.gz file with 7z...\n";
    $cmd = "tar cf - $reldir | xz -z -c > $reldir.tar.xz";
    system($cmd) == 0 or die "$cmd failed";
}

print "\n";

system("ls -ld $perl*");
print "\n";

my $null = $^O eq 'MSWin32' ? 'NUL' : '/dev/null';
for my $sha (qw(sha1 shasum sha1sum)) {
    if (`which $sha 2>$null`) {
	system("$sha $perl*.tar.*");
	last;
    }
}
@


1.12
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d38 1
d43 1
a43 1
getopts('bnr:s:', \%opts) or usage;
d144 1
a144 1
    overload.c
d151 1
a151 1
    cpan/autodie/t/truncate_me
d158 1
d167 12
a178 2
system("chmod u+w @@writables") == 0
    or die "system: $!";
d219 6
@


1.11
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@d150 1
a162 1
    utils/Makefile
@


1.10
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d11 6
a16 8
# 'find' command. Your Cygwin installation will need to contain at least the
# 'cpio' command, in addition to the commands installed by default, and it will
# also be useful to have 'curl' and 'diffstat' installed too for later stages
# of the release process (namely, Porting\corelist.pl and generating the commit
# statistics for the perlXYZdelta.pod file respectively). Finally, ensure that
# the 'awk' and 'shasum' commands are copies of gawk.exe and sha1sum.exe
# respectively, rather than the links to them that only work in a Cygwin bash
# shell which they are by default.
a160 2
    win32/config_H.gc64
    win32/config_H.gc64nox
a161 1
    win32/config_H.vc64
@


1.9
log
@merge in perl 5.12.2 plus local changes
@
text
@d17 2
a18 2
# respectively, rather the links to them that only work in a Cygwin bash shell
# which they are by default.
d37 1
a37 1
		 defaults to the concatenaion of the local_patches entry
d65 3
a67 2
@@local_patches = grep { /^static.*local_patches/../^};/ } @@patchlevel_h;
@@local_patches = grep { !/^\s*,?NULL/  } @@local_patches;
a120 2
my $SEARCH_ROOTS = 't ext lib dist cpan';

d124 5
a128 24
system("find $SEARCH_ROOTS -name '*.t'     -print | xargs chmod +x");
system("find $SEARCH_ROOTS -name 'test.pl' -print | xargs chmod +x");
my @@exe = qw(
    Configure
    configpm
    configure.gnu
    embed.pl
    installperl
    installman
    keywords.pl
    opcode.pl
    t/TEST
    *.SH
    vms/ext/filespec.t
    x2p/*.SH
    Porting/findrfuncs
    Porting/genlog
    Porting/makerel
    Porting/*.pl
    mpeix/nm
    mpeix/relink
    Cross/generate_config_sh
    Cross/warp
);
d135 2
d138 1
a141 1
    pp.sym
a144 1
    global.sym
d147 1
d161 1
a161 1
    win32/config_H.bc
d163 2
d166 1
d170 1
a170 1
system("chmod +w @@writables") == 0
d179 22
a200 3
print "Creating and compressing the tar.gz file...\n";
$cmd = "tar cf - $reldir | gzip --best > $reldir.tar.gz";
system($cmd) == 0 or die "$cmd failed";
d203 9
a211 3
    print "Creating and compressing the tar.bz2 file...\n";
    $cmd = "tar cf - $reldir | bzip2 > $reldir.tar.bz2";
    system($cmd) == 0 or die "$cmd failed";
@


1.8
log
@Merge in perl 5.10.1
@
text
@d3 1
a3 1
# A first attempt at some automated support for making a perl release.
d6 14
d21 2
a22 2
# and re-read pumpkin.pod checking for things to be done at various
# stages of the process.
d33 1
a33 1
usage: $0 [ -r rootdir ] [-s suffix ] [ -b ]
d40 1
d44 1
a44 1
getopts('br:s:', \%opts) or usage;
d119 3
d125 2
a126 2
system("find t ext lib -name '*.t'     -print | xargs chmod +x");
system("find t ext lib -name 'test.pl' -print | xargs chmod +x");
a137 1
    vms/ext/Stdio/test.pl
d168 2
a169 2
    ext/Devel-PPPort/module2.c
    ext/Devel-PPPort/module3.c
d188 1
a188 23
print "Adding CRs to DOSish files...\n";
# This list is also in curliff.pl.
my @@crlf = qw(
    djgpp/configure.bat
    README.ce
    README.dos
    README.symbian
    README.win32
    symbian/config.pl
    symbian/makesis.pl
    symbian/README
    symbian/xsbuild.pl
    win32/Makefile
    win32/Makefile.ce
    win32/ce-helpers/compile-all.bat
    win32/ce-helpers/compile.bat
    win32/ce-helpers/registry.bat
    win32/distclean.bat
    win32/makefile.mk
);
system("perl -pi -e 's/\\015*\\012/\\015\\012/' @@crlf") == 0
    or die "system: $!";
print "\n";
d190 1
a190 1
chdir ".." or die $!;
d209 1
d211 1
a211 1
    if (`which $sha 2>/dev/null`) {
@


1.7
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d13 2
d17 16
a32 1
$relroot = "..";	# XXX make an option
d57 2
d65 11
a75 2
warn "Can't make a release with MANIFEST files missing.\n" if @@$missfile;
warn "Can't make a release with files not listed in MANIFEST.\n" if @@$missentry;
a125 2
    Porting/p4genpatch
    Porting/patchls
a148 3
    pod/perlintern.pod
    pod/perlapi.pod
    pod/perltoc.pod
d151 2
a152 2
    ext/Devel/PPPort/module2.c
    ext/Devel/PPPort/module3.c
a196 1
print "Creating and compressing the tar file...\n";
d198 2
d201 8
a208 2
system($cmd) == 0
    or die "$cmd failed";
d212 8
@


1.6
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@a29 1
$vms_vers = sprintf("%d_%d_%d", $revision, $patchlevel, $subversion);
a58 4
#print "Updating VMS version specific files with $vms_vers...\n";
#system("perl -pi -e 's/^\QPERL_VERSION = \E\d\_\d+(\s*\#)/PERL_VERSION = $vms_vers$1/' vms/descrip.mms");


a89 1
    perly.fixer
d121 2
d125 1
a127 4
    ext/ByteLoader/byterun.h
    ext/ByteLoader/byterun.c
    ext/B/B/Asmdata.pm
    ext/Devel/PPPort/PPPort.xs
d130 3
a135 2
    vms/perly_c.vms
    vms/perly_h.vms
d137 1
d142 2
a143 2
    wince/config_H.ce
    wince/Makefile.ce
d149 1
d154 1
d156 4
d161 5
a166 4
    wince/Makefile.ce
    wince/compile-all.bat
    wince/README.perlce
    wince/registry.bat
@


1.5
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d1 1
a1 1
#!/bin/env perl -w
d75 2
a76 1
system($cmd) == 0 or die "$cmd failed";
d109 2
d112 2
a113 1
system("chmod +x @@exe");
d150 2
a151 1
system("chmod +w @@writables");
d162 1
a162 1
    wince/README.compile
d166 2
a167 1
system("perl -pi -e 's/\015*\012/\015\012/' @@crlf");
d175 2
a176 1
system($cmd) == 0 or die "$cmd failed";
@


1.4
log
@merge in perl 5.6.1 with our local changes
@
text
@d81 1
a81 1
system("find . -type f -print     | xargs chmod a-w");
d83 2
a84 4

# the right files should already have the execute bit set
# in the repository, but this is just insurance
system("find t -name '*.t' -print | xargs chmod a+x");
d87 1
d89 1
a89 1
    configpm
a90 1
    installhtml
a91 1
    embed.pl
a93 1
    warnings.pl
a95 1
    t/*/*.t
d98 1
a98 1
    vms/ext/*.t
d100 4
d105 3
a107 1
    Porting/makerel
d112 2
a124 1
    objXSUB.h
d130 3
a140 1
    win32/config_H.bc
d143 2
d151 1
d156 4
d161 1
a161 1
system("perl -pi -e 's/\$/\\r/' @@crlf");
@


1.3
log
@perl-5.6.0 + local changes
@
text
@d81 6
a86 3
system("find . -type f -print     | xargs chmod -w");
system("find . -type d -print     | xargs chmod g-s");
system("find t -name '*.t' -print | xargs chmod +x");
d89 1
a90 1
    embed.pl
d92 1
d94 1
d97 1
d103 1
a103 1
    vms/ext/filespec.t
d111 6
a118 3
    ext/B/B/Asmdata.pm
    ext/ByteLoader/byterun.c
    ext/ByteLoader/byterun.h
d120 2
a121 2
    keywords.h
    lib/warnings.pm
d123 5
a127 3
    opcode.h
    pp.sym
    pp_proto.h
d130 6
@


1.2
log
@perl5.005_03 (stock)
@
text
@d23 1
a23 1
my $patchlevel_h = join "", grep { /^#define/ } @@patchlevel_h;
d25 3
a27 2
$patchlevel = $1 if $patchlevel_h =~ /PATCHLEVEL\s+(\d+)/;
$subversion = $1 if $patchlevel_h =~ /SUBVERSION\s+(\d+)/;
d29 2
a30 8
$vers = sprintf("5.%03d", $patchlevel);
$vms_vers = sprintf("5_%03d", $patchlevel);
if ($subversion) {
    $vers.= sprintf( "_%02d", $subversion);
    $vms_vers.= sprintf( "%02d", $subversion);
} else {
    $vms_vers.= "  ";
}
d39 1
a39 1
$perl = "perl$vers";
a90 1
    myconfig
d103 21
@


1.1
log
@perl 5.004_04
@
text
@d20 4
a23 1
$patchlevel_h = `grep '#define ' patchlevel.h`;
d27 1
a27 1
die "Unable to parse patchlevel.h" unless $subversion > 0;
d29 14
a42 1
$vers.= sprintf( "_%02d", $subversion) if $subversion;
d45 2
a46 4
$reldir = "$relroot/$perl";
$reldir .= "-$ARGV[0]" if $ARGV[0];

print "\nMaking a release for $perl in $reldir\n\n";
d48 1
d64 20
d89 1
a89 2
system("chmod +w configure"); # special case (see pumpkin.pod)
@@exe = qw(
a91 1
    configure
a103 1
    vms/fndvers.com
a108 1
print "\n";
d110 9
a118 12

print "Creating $reldir release directory...\n";
die "$reldir release directory already exists\n"   if -e "../$perl";
die "$reldir.tar.gz release file already exists\n" if -e "../$reldir.tar.gz";
mkdir($reldir, 0755) or die "mkdir $reldir: $!\n";
print "\n";


print "Copying files to release directory...\n";
# ExtUtils::Manifest maniread does not preserve the order
$cmd = "awk '{print \$1}' MANIFEST | cpio -pdm $reldir";
system($cmd) == 0 or die "$cmd failed";
d121 1
a121 1
chdir $relroot or die $!;
d124 2
a125 1
$cmd = "tar cf - $perl | gzip --best > $perl.tar.gz";
@


1.1.1.1
log
@perl5.005_03
@
text
@d20 1
a20 4
open PATCHLEVEL,"<patchlevel.h" or die;
my @@patchlevel_h = <PATCHLEVEL>;
close PATCHLEVEL;
my $patchlevel_h = join "", grep { /^#define/ } @@patchlevel_h;
d24 1
a24 1
die "Unable to parse patchlevel.h" unless $subversion >= 0;
d26 1
a26 7
$vms_vers = sprintf("5_%03d", $patchlevel);
if ($subversion) {
    $vers.= sprintf( "_%02d", $subversion);
    $vms_vers.= sprintf( "%02d", $subversion);
} else {
    $vms_vers.= "  ";
}
d28 3
a30 6
# fetch list of local patches
my (@@local_patches, @@lpatch_tags, $lpatch_tags);
@@local_patches = grep { /^static.*local_patches/../^};/ } @@patchlevel_h;
@@local_patches = grep { !/^\s*,?NULL/  } @@local_patches;
@@lpatch_tags   = map  {  /^\s*,"(\w+)/ } @@local_patches;
$lpatch_tags   = join "-", @@lpatch_tags;
d32 1
a32 3
$perl = "perl$vers";
$reldir = "$perl";
$reldir .= "-$lpatch_tags" if $lpatch_tags;
a33 1
print "\nMaking a release for $perl in $relroot/$reldir\n\n";
a48 20
# VMS no longer has hardcoded version numbers descrip.mms
#print "Updating VMS version specific files with $vms_vers...\n";
#system("perl -pi -e 's/^\QPERL_VERSION = \E\d\_\d+(\s*\#)/PERL_VERSION = $vms_vers$1/' vms/descrip.mms");



print "Creating $relroot/$reldir release directory...\n";
die "$relroot/$reldir release directory already exists\n"   if -e "$relroot/$reldir";
die "$relroot/$reldir.tar.gz release file already exists\n" if -e "$relroot/$reldir.tar.gz";
mkdir("$relroot/$reldir", 0755) or die "mkdir $relroot/$reldir: $!\n";
print "\n";


print "Copying files to release directory...\n";
# ExtUtils::Manifest maniread does not preserve the order
$cmd = "awk '{print \$1}' MANIFEST | cpio -pdm $relroot/$reldir";
system($cmd) == 0 or die "$cmd failed";
print "\n";

chdir "$relroot/$reldir" or die $!;
d54 2
a55 1
my @@exe = qw(
d58 1
d71 1
d77 8
d86 5
a90 9
print "Adding CRs to DOSish files...\n";
my @@crlf = qw(
    djgpp/configure.bat
    README.dos
    README.win32
    win32/Makefile
    win32/makefile.mk
);
system("perl -pi -e 's/\$/\\r/' @@crlf");
d93 1
a93 1
chdir ".." or die $!;
d96 1
a96 2
my $src = (-e $perl) ? $perl : 'perl'; # 'perl' in maint branch
$cmd = "tar cf - $reldir | gzip --best > $reldir.tar.gz";
@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@d23 1
a23 1
my $patchlevel_h = join "", grep { /^#\s*define/ } @@patchlevel_h;
d25 2
a26 3
$revision = $1 if $patchlevel_h =~ /PERL_REVISION\s+(\d+)/;
$patchlevel = $1 if $patchlevel_h =~ /PERL_VERSION\s+(\d+)/;
$subversion = $1 if $patchlevel_h =~ /PERL_SUBVERSION\s+(\d+)/;
d28 8
a35 2
$vers = sprintf("%d.%d.%d", $revision, $patchlevel, $subversion);
$vms_vers = sprintf("%d_%d_%d", $revision, $patchlevel, $subversion);
d44 1
a44 1
$perl = "perl-$vers";
d96 1
a108 21

my @@writables = qw(
    embed.h
    embedvar.h
    ext/B/B/Asmdata.pm
    ext/ByteLoader/byterun.c
    ext/ByteLoader/byterun.h
    global.sym
    keywords.h
    lib/warnings.pm
    objXSUB.h
    opcode.h
    pp.sym
    pp_proto.h
    regnodes.h
    warnings.h
    win32/config_H.bc
    win32/config_H.gc
    win32/config_H.vc
);
system("chmod +w @@writables");
@


1.1.1.3
log
@stock perl 5.6.1
@
text
@d81 3
a83 6
system("find . -type f -print     | xargs chmod a-w");
system("find . -type d -print     | xargs chmod 0755");

# the right files should already have the execute bit set
# in the repository, but this is just insurance
system("find t -name '*.t' -print | xargs chmod a+x");
a85 1
    configure.gnu
d87 1
a88 1
    installhtml
a89 1
    embed.pl
a91 1
    warnings.pl
d97 1
a97 1
    vms/ext/*.t
a104 6
    keywords.h
    opcode.h
    opnames.h
    pp_proto.h
    pp.sym
    proto.h
d107 3
d111 2
a112 2
    pod/perlintern.pod
    pod/perlapi.pod
d114 3
a116 5
    perlapi.h
    perlapi.c
    ext/ByteLoader/byterun.h
    ext/ByteLoader/byterun.c
    ext/B/B/Asmdata.pm
a118 6
    lib/warnings.pm
    vms/perly_c.vms
    vms/perly_h.vms
    win32/Makefile
    win32/makefile.mk
    win32/config_H.bc
@


1.1.1.4
log
@stock perl 5.8.0 from CPAN
@
text
@d81 1
a81 1
system("find . -type f -print     | xargs chmod 0444");
d83 4
a86 2
system("find t ext lib -name '*.t'     -print | xargs chmod +x");
system("find t ext lib -name 'test.pl' -print | xargs chmod +x");
d89 1
a90 2
    configure.gnu
    embed.pl
d92 1
d94 1
d97 1
d100 1
d103 1
a103 1
    vms/ext/filespec.t
d105 1
a105 2
    Porting/findrfuncs
    Porting/genlog
a106 5
    Porting/p4genpatch
    Porting/patchls
    Porting/*.pl
    mpeix/nm
    mpeix/relink
a110 2
    NetWare/config_H.wc
    NetWare/Makefile
d122 1
a127 3
    ext/Devel/PPPort/PPPort.xs
    ext/Devel/PPPort/module2.c
    ext/Devel/PPPort/module3.c
d136 1
a138 2
    wince/config_H.ce
    wince/Makefile.ce
a144 1
    README.ce
a148 4
    wince/Makefile.ce
    wince/README.compile
    wince/README.perlce
    wince/registry.bat
d150 1
a150 1
system("perl -pi -e 's/\015*\012/\015\012/' @@crlf");
@


1.1.1.5
log
@perl 5.8.2 from CPAN
@
text
@d1 1
a1 1
#!/usr/bin/perl -w
d75 1
a75 2
system($cmd) == 0
    or die "$cmd failed";
a107 2
    Cross/generate_config_sh
    Cross/warp
d109 1
a109 2
system("chmod +x @@exe") == 0
    or die "system: $!";
d146 1
a146 2
system("chmod +w @@writables") == 0
    or die "system: $!";
d157 1
a157 1
    wince/compile-all.bat
d161 1
a161 2
system("perl -pi -e 's/\\015*\\012/\\015\\012/' @@crlf") == 0
    or die "system: $!";
d169 1
a169 2
system($cmd) == 0
    or die "$cmd failed";
@


1.1.1.6
log
@import perl 5.10.0 from CPAN
@
text
@d30 1
d60 4
d95 1
a126 2
    overload.c
    overload.h
a128 1
    pod/perltoc.pod
d131 4
a136 3
    reentr.c
    reentr.h
    regcharclass.h
d140 2
a142 1
    win32/Makefile.ce
d147 2
a148 2
    utils/Makefile
    uconfig.h
a153 1
# This list is also in curliff.pl.
a157 1
    README.symbian
a158 4
    symbian/config.pl
    symbian/makesis.pl
    symbian/README
    symbian/xsbuild.pl
a159 5
    win32/Makefile.ce
    win32/ce-helpers/compile-all.bat
    win32/ce-helpers/compile.bat
    win32/ce-helpers/registry.bat
    win32/distclean.bat
d161 4
@


1.1.1.7
log
@import perl 5.10.1
@
text
@a12 2
$ExtUtils::Manifest::Quiet = 1;
use Getopt::Std;
d15 1
a15 16

sub usage { die <<EOF; }
usage: $0 [ -r rootdir ] [-s suffix ] [ -b ]
    -r rootdir   directory under which to create the build dir and tarball
                 defaults to '..'
    -s suffix    suffix to append to to the perl-x.y.z dir and tarball name
		 defaults to the concatenaion of the local_patches entry
		 in patchlevel.h (or blank, if none)
    -b           make a .bz2 file in addtion to a .gz file
EOF

my %opts;
getopts('br:s:', \%opts) or usage;
@@ARGV && usage;

$relroot = defined $opts{r} ? $opts{r} : "..";
a39 2

$lpatch_tags = $opts{s} if defined $opts{s};
d46 2
a47 11
@@$missentry
    = grep {$_ !~ m!^\.git/! and $_ !~ m!(?:/|^)\.gitignore!} @@$missentry;
if (@@$missfile ) {
    warn "Can't make a release with MANIFEST files missing:\n";
    warn "\t".$_."\n" for (@@$missfile);
}
if (@@$missentry ) {
    warn "Can't make a release with files not listed in MANIFEST\n";
    warn "\t".$_."\n" for (@@$missentry);

}
d98 2
d123 3
d128 2
a129 2
    ext/Devel-PPPort/module2.c
    ext/Devel-PPPort/module3.c
d174 1
a175 2

print "Creating and compressing the tar.gz file...\n";
d177 2
a178 8
system($cmd) == 0 or die "$cmd failed";

if ($opts{b}) {
    print "Creating and compressing the tar.bz2 file...\n";
    $cmd = "tar cf - $reldir | bzip2 > $reldir.tar.bz2";
    system($cmd) == 0 or die "$cmd failed";
}

a181 8
print "\n";

for my $sha (qw(sha1 shasum sha1sum)) {
    if (`which $sha 2>/dev/null`) {
	system("$sha $perl*.tar.*");
	last;
    }
}
@


1.1.1.8
log
@Perl 5.12.2 from CPAN
@
text
@d3 1
a3 1
# A tool to build a perl release tarball
a5 14
# If you're on Win32 then it should still work, but various Unix command-line
# tools will need to be available somewhere. An obvious choice is to install
# Cygwin and ensure its 'bin' folder is on the PATH in the shell where you run
# this script. The Cygwin 'bin' folder needs to precede the Windows 'system32'
# folder so that Cygwin's 'find' command is found in preference to the Windows
# 'find' command. Your Cygwin installation will need to contain at least the
# 'cpio' command, in addition to the commands installed by default, and it will
# also be useful to have 'curl' and 'diffstat' installed too for later stages
# of the release process (namely, Porting\corelist.pl and generating the commit
# statistics for the perlXYZdelta.pod file respectively). Finally, ensure that
# the 'awk' and 'shasum' commands are copies of gawk.exe and sha1sum.exe
# respectively, rather the links to them that only work in a Cygwin bash shell
# which they are by default.
#
d7 2
a8 2
# and re-read pumpkin.pod and release_managers_guide.pod to
# check for things to be done at various stages of the process.
d19 1
a19 1
usage: $0 [ -r rootdir ] [-s suffix ] [ -b ] [ -n ]
a25 1
    -n           do not make any tarballs, just the directory
d29 1
a29 1
getopts('bnr:s:', \%opts) or usage;
a103 3

my $SEARCH_ROOTS = 't ext lib dist cpan';

d107 2
a108 2
system("find $SEARCH_ROOTS -name '*.t'     -print | xargs chmod +x");
system("find $SEARCH_ROOTS -name 'test.pl' -print | xargs chmod +x");
d120 1
d151 2
a152 2
    cpan/Devel-PPPort/module2.c
    cpan/Devel-PPPort/module3.c
d171 24
a196 2
exit if $opts{n};

a213 1
my $null = $^O eq 'MSWin32' ? 'NUL' : '/dev/null';
d215 1
a215 1
    if (`which $sha 2>$null`) {
@


1.1.1.9
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d17 2
a18 2
# respectively, rather than the links to them that only work in a Cygwin bash
# shell which they are by default.
d37 1
a37 1
		 defaults to the concatenation of the local_patches entry
d65 2
a66 3
@@local_patches = grep { !/^\s*,?NULL/ && ! /,"uncommitted-changes"/ }
                 grep { /^static.*local_patches/../^};/ }
                 @@patchlevel_h;
d120 2
d125 24
a148 5
my @@exe = map   { my ($f) = split; glob($f) }
          grep  { $_ !~ /\A#/ && $_ !~ /\A\s*\z/ }
          map   { split "\n" }
          do    { local (@@ARGV, $/) = 'Porting/exec-bit.txt'; <> };

a154 2
    feature.h
    lib/feature.pm
a155 1
    keywords.c
d159 1
d163 1
a165 1
    mg_vtable.h
d179 1
a179 1
    win32/config_H.ce
a180 2
    win32/config_H.gc64
    win32/config_H.gc64nox
a181 1
    win32/config_H.vc64
d185 1
a185 1
system("chmod u+w @@writables") == 0
d194 3
a196 22
print "Checking if you have 7z...\n";
my $output_7z = `7z 2>&1`;
my $have_7z = defined $output_7z && $output_7z =~ /7-Zip/;

print "Checking if you have advdef...\n";
my $output_advdef = `advdef --version 2>&1`;
my $have_advdef = defined $output_advdef && $output_advdef =~ /advancecomp/;

if ($have_7z) {
    print "Creating and compressing the tar.gz file with 7z...\n";
    $cmd = "tar cf - $reldir | 7z a -tgzip -mx9 -bd -si $reldir.tar.gz";
    system($cmd) == 0 or die "$cmd failed";
} else {
    print "Creating and compressing the tar.gz file...\n";
    $cmd = "tar cf - $reldir | gzip --best > $reldir.tar.gz";
    system($cmd) == 0 or die "$cmd failed";
    if ($have_advdef) {
        print "Recompressing the tar.gz file with advdef...\n";
        $cmd = "advdef -z -4 $reldir.tar.gz";
        system($cmd) == 0 or die "$cmd failed";
    }
}
d199 3
a201 9
    if ($have_7z) {
        print "Creating and compressing the tar.bz2 file with 7z...\n";
        $cmd = "tar cf - $reldir | 7z a -tbzip2 -mx9 -bd -si $reldir.tar.bz2";
        system($cmd) == 0 or die "$cmd failed";
    } else {
        print "Creating and compressing the tar.bz2 file...\n";
        $cmd = "tar cf - $reldir | bzip2 > $reldir.tar.bz2";
        system($cmd) == 0 or die "$cmd failed";
    }
@


1.1.1.10
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d11 8
a18 6
# 'find' command. In addition to the commands installed by default, your Cygwin
# installation will need to contain at least the 'cpio' and '7z' commands.
# Finally, ensure that the 'awk', 'shasum' (if you have it) and '7z' commands
# are copies of 'gawk.exe', 'sha1sum.exe' and 'lib\p7zip\7z.exe' respectively,
# rather than the links to them that only work in a Cygwin bash shell which
# they are by default.
d163 2
d166 1
@


1.1.1.11
log
@Import perl-5.20.1
@
text
@a149 1
    cpan/autodie/t/truncate_me
d162 1
@


