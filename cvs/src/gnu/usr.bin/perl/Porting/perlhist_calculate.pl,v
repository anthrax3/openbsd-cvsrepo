head	1.2;
access;
symbols
	OPENBSD_6_2_BASE:1.2
	PERL_5_24_2:1.1.1.3
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.2.0.12
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.6
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.8
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.2
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.2.0.4
	OPENBSD_5_6_BASE:1.1.1.2
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.6
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.2
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.02.05.00.31.54;	author afresh1;	state Exp;
branches;
next	1.1;
commitid	cxJ08BvJA9Pt2PTM;

1.1
date	2013.03.25.20.09.30;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.03.25.20.09.30;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.03.24.14.59.09;	author afresh1;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2017.08.14.13.46.22;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.2
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!perl
# Generates info for perlhist from this perl tree
# run this from the root of a perl tree
#
# Data is on STDOUT.

use 5.010000;
use File::Find;
use warnings;
use strict;

sub emit {
  my $H = '%-9s:';
  my $D = '%6d';
  printf "$H $D $D\n", @@_;
}

sub calc_core {

	my @@core;
	push @@core, glob '*.h';
	push @@core, glob '*.c';
	push @@core, glob '*.y';
	my $coresize = 0;

	foreach my $corefile (@@core) {
		$coresize += (-s $corefile) / 1000;
	}

	my $corenumber = scalar @@core;
	$coresize = int $coresize;

  return $coresize, $corenumber;
}

sub calc_lib {

	our $libsize = 0;
	our $libnumber = 0;
	sub wanted_lib {
		$File::Find::name =~ /[.] (?:pm|pl)\z/msx or return;
		$libsize += (-s $_) / 1000;
		$libnumber++;
	}

	find(\&wanted_lib, 'lib');
	$libsize = int $libsize;

  return $libsize, $libnumber;
}

sub calc_ext {

	our $extsize = 0;
	our $extnumber = 0;
	sub wanted_ext {
		$File::Find::name =~ /[.] (?:h|c|y|t|xs|pm)\z/msx or return;
		$extsize += (-s $_) / 1000;
		$extnumber++;
	}

	if (-d 'dist') {
		find(\&wanted_ext, 'ext', 'dist', 'cpan');
	} else {
		find(\&wanted_ext, 'ext');
	}

	$extsize = int $extsize;

  return $extsize, $extnumber;
}

sub calc_t {

	our $tsize = 0;
	our $tnumber = 0;
	sub wanted_t {
		$File::Find::name =~ /[.] t\z/msx or return;
		$tsize += (-s $_) / 1000;
		$tnumber++;
	}

	find(\&wanted_t, '.');

	$tsize = int $tsize;

  return $tsize, $tnumber;
}

sub calc_doc {

	my @@doc;
	push @@doc, 'INSTALL';
	push @@doc, 'README';
	push @@doc, glob 'README.*';
	our $docsize = 0;

	foreach my $docfile (@@doc) {
		$docsize += (-s $docfile) / 1000;
	}

	our $docnumber = scalar @@doc;

	sub wanted_doc {
		$File::Find::name =~ /[.] pod\z/msx or return;
		$docsize += (-s $_) / 1000;
		$docnumber++;
	}

	find(\&wanted_doc, 'pod');

	$docsize = int $docsize;

  return $docsize, $docnumber;
}

sub calc_dir {
	my $dir = shift;

	return if ! -d $dir;

	our $dirnumber = 0;
	our $dirsize = 0;

	sub wanted_dir {
		$dirsize += (-s $_) / 1000;
		$dirnumber++;
	}

	find(\&wanted_dir, $dir);

	$dirsize = int $dirsize;

  emit $dir => $dirsize, $dirnumber;
}


sub calc_longtable {

	print "\n\nTable:\n";

	my $configure_size = int ((-s 'Configure') / 1000);

	emit Configure => $configure_size, 1;

	foreach my $dir (qw(Cross djgpp emacs h2pl hints NetWare os2 plan9 Porting qnx symbian utils vms vos win32)) {
		calc_dir($dir);
	}
}

say "Selected release sizes for perl tarball:";
print "\n";

 #5.16.0         5562 109   1077  80  20504 2702   8750 2375   4815 152

sub calc_line {
  printf " %-12s %6s %3s %6s %3s %6s %4s %6s %4s %6s %3s\n",
    '5.xx.0', calc_core(), calc_lib(), calc_ext(), calc_t(), calc_doc();
}

calc_line();

calc_longtable();

exit;
@


1.1
log
@Initial revision
@
text
@d12 6
d33 1
a33 1
	say "core: $coresize $corenumber";
d49 1
a49 1
	say "lib: $libsize $libnumber";
d70 1
a70 1
	say "ext: $extsize $extnumber";
d87 1
a87 1
	say "t: $tsize $tnumber";
d114 1
a114 1
	say "doc: $docsize $docnumber";
d134 1
a134 1
	say "$dir: $dirsize $dirnumber";
d140 1
a140 5
	print "\n\nTable\n";

	foreach my $dir (qw(beos)) {
		calc_dir($dir);
	}
d144 1
a144 1
	say "Configure: $configure_size 1";
d146 1
a146 1
	foreach my $dir (qw(Cross djgpp emacs epoc h2pl hints mad mint mpeix NetWare os2 plan9 Porting qnx symbian utils uts vmesa vms vos win32 x2p)) {
d154 9
a162 5
calc_core();
calc_lib();
calc_ext();
calc_t();
calc_doc();
@


1.1.1.1
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@@


1.1.1.2
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@a11 6
sub emit {
  my $H = '%-9s:';
  my $D = '%6d';
  printf "$H $D $D\n", @@_;
}

d27 1
a27 1
  return $coresize, $corenumber;
d43 1
a43 1
  return $libsize, $libnumber;
d64 1
a64 1
  return $extsize, $extnumber;
d81 1
a81 1
  return $tsize, $tnumber;
d108 1
a108 1
  return $docsize, $docnumber;
d128 1
a128 1
  emit $dir => $dirsize, $dirnumber;
d134 5
a138 1
	print "\n\nTable:\n";
d142 1
a142 1
	emit Configure => $configure_size, 1;
d144 1
a144 1
	foreach my $dir (qw(Cross djgpp emacs h2pl hints mad NetWare os2 plan9 Porting qnx symbian utils vms vos win32 x2p)) {
d152 5
a156 9
 #5.16.0         5562 109   1077  80  20504 2702   8750 2375   4815 152

sub calc_line {
  printf " %-12s %6s %3s %6s %3s %6s %4s %6s %4s %6s %3s\n",
    '5.xx.0', calc_core(), calc_lib(), calc_ext(), calc_t(), calc_doc();
}

calc_line();

@


1.1.1.3
log
@Import perl-5.24.2
@
text
@d146 1
a146 1
	foreach my $dir (qw(Cross djgpp emacs h2pl hints NetWare os2 plan9 Porting qnx symbian utils vms vos win32)) {
@


