head	1.8;
access;
symbols
	OPENBSD_4_4:1.7.0.20
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.18
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.16
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.14
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.12
	OPENBSD_4_0_BASE:1.7
	PERL_5_8_8:1.1.1.7
	OPENBSD_3_9:1.7.0.10
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	PERL_5_8_6:1.1.1.7
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	PERL_5_8_5:1.1.1.6
	PERL_5_8_3:1.1.1.5
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	PERL_5_8_2:1.1.1.5
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	PERL_5_8_0:1.1.1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	PERL_5_6_1:1.1.1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2008.09.29.17.36.14;	author millert;	state dead;
branches;
next	1.7;

1.7
date	2003.12.03.03.02.41;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.27.22.25.27;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.24.18.35.39;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.06.55;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.52.00;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.58.05;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.12.51;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.12.51;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.40.19;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.09.50;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2001.05.24.18.23.38;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2002.10.27.22.15.01;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2004.08.09.17.47.25;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2005.01.15.21.17.31;	author millert;	state Exp;
branches;
next	;


desc
@@


1.8
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@package Text::Soundex;
require 5.000;
require Exporter;

@@ISA = qw(Exporter);
@@EXPORT = qw(&soundex $soundex_nocode);

$VERSION = '1.01';

# $Id: Soundex.pm,v 1.7 2003/12/03 03:02:41 millert Exp $
#
# Implementation of soundex algorithm as described by Knuth in volume
# 3 of The Art of Computer Programming, with ideas stolen from Ian
# Phillipps <ian@@pipex.net>.
#
# Mike Stok <Mike.Stok@@meiko.concord.ma.us>, 2 March 1994.
#
# Knuth's test cases are:
# 
# Euler, Ellery -> E460
# Gauss, Ghosh -> G200
# Hilbert, Heilbronn -> H416
# Knuth, Kant -> K530
# Lloyd, Ladd -> L300
# Lukasiewicz, Lissajous -> L222
#
# $Log: Soundex.pm,v $
# Revision 1.7  2003/12/03 03:02:41  millert
# Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
#
# Revision 1.2  1994/03/24  00:30:27  mike
# Subtle bug (any excuse :-) spotted by Rich Pinder <rpinder@@hsc.usc.edu>
# in the way I handles leasing characters which were different but had
# the same soundex code.  This showed up comparing it with Oracle's
# soundex output.
#
# Revision 1.1  1994/03/02  13:01:30  mike
# Initial revision
#
#
##############################################################################

# $soundex_nocode is used to indicate a string doesn't have a soundex
# code, I like undef other people may want to set it to 'Z000'.

$soundex_nocode = undef;

sub soundex
{
  local (@@s, $f, $fc, $_) = @@_;

  push @@s, '' unless @@s;	# handle no args as a single empty string

  foreach (@@s)
  {
    $_ = uc $_;
    tr/A-Z//cd;

    if ($_ eq '')
    {
      $_ = $soundex_nocode;
    }
    else
    {
      ($f) = /^(.)/;
      tr/AEHIOUWYBFPVCGJKQSXZDTLMNR/00000000111122222222334556/;
      ($fc) = /^(.)/;
      s/^$fc+//;
      tr///cs;
      tr/0//d;
      $_ = $f . $_ . '000';
      s/^(.{4}).*/$1/;
    }
  }

  wantarray ? @@s : shift @@s;
}

1;

__END__

=head1 NAME

Text::Soundex - Implementation of the Soundex Algorithm as Described by Knuth

=head1 SYNOPSIS

  use Text::Soundex;

  $code = soundex $string;            # get soundex code for a string
  @@codes = soundex @@list;             # get list of codes for list of strings

  # set value to be returned for strings without soundex code

  $soundex_nocode = 'Z000';

=head1 DESCRIPTION

This module implements the soundex algorithm as described by Donald Knuth
in Volume 3 of B<The Art of Computer Programming>.  The algorithm is
intended to hash words (in particular surnames) into a small space using a
simple model which approximates the sound of the word when spoken by an English
speaker.  Each word is reduced to a four character string, the first
character being an upper case letter and the remaining three being digits.

If there is no soundex code representation for a string then the value of
C<$soundex_nocode> is returned.  This is initially set to C<undef>, but
many people seem to prefer an I<unlikely> value like C<Z000>
(how unlikely this is depends on the data set being dealt with.)  Any value
can be assigned to C<$soundex_nocode>.

In scalar context C<soundex> returns the soundex code of its first
argument, and in list context a list is returned in which each element is the 
soundex code for the corresponding argument passed to C<soundex> e.g.

  @@codes = soundex qw(Mike Stok);

leaves C<@@codes> containing C<('M200', 'S320')>.

=head1 EXAMPLES

Knuth's examples of various names and the soundex codes they map to
are listed below:

  Euler, Ellery -> E460
  Gauss, Ghosh -> G200
  Hilbert, Heilbronn -> H416
  Knuth, Kant -> K530
  Lloyd, Ladd -> L300
  Lukasiewicz, Lissajous -> L222

so:

  $code = soundex 'Knuth';              # $code contains 'K530'
  @@list = soundex qw(Lloyd Gauss);	# @@list contains 'L300', 'G200'

=head1 LIMITATIONS

As the soundex algorithm was originally used a B<long> time ago in the US
it considers only the English alphabet and pronunciation.

As it is mapping a large space (arbitrary length strings) onto a small
space (single letter plus 3 digits) no inference can be made about the
similarity of two strings which end up with the same soundex code.  For 
example, both C<Hilbert> and C<Heilbronn> end up with a soundex code
of C<H416>.

=head1 AUTHOR

This code was implemented by Mike Stok (C<stok@@cybercom.net>) from the 
description given by Knuth.  Ian Phillipps (C<ian@@pipex.net>) and Rich Pinder 
(C<rpinder@@hsc.usc.edu>) supplied ideas and spotted mistakes.
@


1.7
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d10 1
a10 1
# $Id: soundex.pl,v 1.2 1994/03/24 00:30:27 mike Exp $
d27 4
a30 1
# $Log: soundex.pl,v $
@


1.6
log
@Resolve conflicts, remove old files, merge local changes
@
text
@@


1.5
log
@merge in perl 5.6.1 with our local changes
@
text
@d8 1
a8 1
$VERSION = '1.0';
d14 1
a14 1
# Phillips <ian@@pipex.net>.
d149 1
a149 1
description given by Knuth.  Ian Phillips (C<ian@@pipex.net>) and Rich Pinder 
@


1.4
log
@perl-5.6.0 + local changes
@
text
@d111 1
a111 1
argument, and in array context a list is returned in which each element is the 
@


1.3
log
@perl5.005_03 (stock)
@
text
@d8 2
@


1.2
log
@perl 5.004_04
@
text
@@


1.1
log
@Initial revision
@
text
@d51 1
a51 1
    tr/a-z/A-Z/;
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d51 1
a51 1
    $_ = uc $_;
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@a7 2
$VERSION = '1.0';

@


1.1.1.4
log
@stock perl 5.6.1
@
text
@d111 1
a111 1
argument, and in list context a list is returned in which each element is the 
@


1.1.1.5
log
@stock perl 5.8.0 from CPAN
@
text
@d8 1
a8 1
$VERSION = '1.01';
d14 1
a14 1
# Phillipps <ian@@pipex.net>.
d149 1
a149 1
description given by Knuth.  Ian Phillipps (C<ian@@pipex.net>) and Rich Pinder 
@


1.1.1.6
log
@Import of stock perl 5.8.5
@
text
@d10 1
a10 1
# $Id: Soundex.pm,v 1.7 2003/12/03 03:02:41 millert Exp $
d27 1
a27 4
# $Log: Soundex.pm,v $
# Revision 1.7  2003/12/03 03:02:41  millert
# Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
#
@


1.1.1.7
log
@perl 5.8.6 from CPAN
@
text
@d10 1
a10 1
# $Id: soundex.pl,v 1.2 1994/03/24 00:30:27 mike Exp $
d27 4
a30 1
# $Log: soundex.pl,v $
@


