head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.2.0.4
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.2
	OPENBSD_4_7_BASE:1.1.1.2
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.1.1.1.0.6
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	PERL_5_10_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2010.09.24.14.59.46;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2008.09.29.17.18.39;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.29.17.18.39;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2009.10.12.18.11.00;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@package TestModule;

use strict;
require Exporter;
use vars qw(@@EXPORT @@EXPORT_OK @@ISA);

@@ISA = qw(Exporter);
@@EXPORT = qw(func2);
@@EXPORT_OK = qw(func1);

sub func1 { return "func1"; }

sub func2 { return "func2"; }

1;
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.10.0 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.10.1
@
text
@d5 1
a5 1
use vars qw(@@EXPORT @@EXPORT_OK @@ISA $IMPORTED);
d7 3
a9 3
@@ISA        = qw(Exporter);
@@EXPORT     = qw(func2);
@@EXPORT_OK  = qw(func1);
d11 1
a11 15
### test if import gets called properly
sub import   { $IMPORTED = 1; 
               ### this breaks on 5.8.[45] which have a bug with goto's losing
               ### arguments in @@_. This is the cause of the 0.14 tester failures
               ### under 5.8.[45]. The bug is NOT in exporter, but core perl:
               ### http://testers.cpan.org/show/Module-Load.html
               #goto &Exporter::import; 
               
               ### instead, use the undocumented, but widely used $ExportLevel
               ### which will make sure we pass all arguments, and even works
               ### on buggy 5.8.[45]
               do { local $Exporter::ExportLevel += 1; Exporter::import(@@_) }
             }
             
sub imported { $IMPORTED;       }
d13 1
a13 3
sub func1    { return "func1";  }

sub func2    { return "func2";  }
@

