head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2009.05.16.21.42.58;	author simon;	state dead;
branches;
next	1.1;

1.1
date	2009.05.13.17.10.14;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@relocate / fix Test::Simple tests

ok millert@@
@
text
@#!/usr/bin/perl -w

# Test to see if is_deeply() plays well with threads.

BEGIN {
    if( $ENV{PERL_CORE} ) {
        chdir 't';
        @@INC = ('../lib', 'lib');
    }
    else {
        unshift @@INC, 't/lib';
    }
}

use strict;
use Config;

BEGIN {
    unless ( $] >= 5.008001 && $Config{'useithreads'} && 
             eval { require threads; 'threads'->import; 1; }) 
    {
        print "1..0 # Skip no working threads\n";
        exit 0;
    }
    
    unless ( $ENV{AUTHOR_TESTING} ) {
        print "1..0 # Skip many perls have broken threads.  Enable with AUTHOR_TESTING.\n";
        exit 0;
    }
}
use Test::More;

my $Num_Threads = 5;

plan tests => $Num_Threads * 100 + 6;


sub do_one_thread {
    my $kid = shift;
    my @@list = ( 'x', 'yy', 'zzz', 'a', 'bb', 'ccc', 'aaaaa', 'z',
                 'hello', 's', 'thisisalongname', '1', '2', '3',
                 'abc', 'xyz', '1234567890', 'm', 'n', 'p' );
    my @@list2 = @@list;
    print "# kid $kid before is_deeply\n";

    for my $j (1..100) {
        is_deeply(\@@list, \@@list2);
    }
    print "# kid $kid exit\n";
    return 42;
}

my @@kids = ();
for my $i (1..$Num_Threads) {
    my $t = threads->new(\&do_one_thread, $i);
    print "# parent $$: continue\n";
    push(@@kids, $t);
}
for my $t (@@kids) {
    print "# parent $$: waiting for join\n";
    my $rc = $t->join();
    cmp_ok( $rc, '==', 42, "threads exit status is $rc" );
}

pass("End of test");
@


1.1
log
@update Test::Simple to version 0.86

tested in multiple builds on multiple arches by me
ok millert@@, simon@@
@
text
@@

