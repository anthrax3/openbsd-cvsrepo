head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2009.05.16.21.42.58;	author simon;	state dead;
branches;
next	1.1;

1.1
date	2009.05.13.17.10.14;	author jasper;	state Exp;
branches;
next	;


desc
@@


1.2
log
@relocate / fix Test::Simple tests

ok millert@@
@
text
@#!/usr/bin/perl -w

use strict;

use Test::More tests => 13;

{
    package Bar;

    sub new {
        my $class = shift;
        return bless {@@_}, $class;
    }


    package Foo;
    our @@ISA = qw(Bar);
}

{
    my $obj = new_ok("Foo");
    is_deeply $obj, {};
    isa_ok $obj, "Foo";

    $obj = new_ok("Bar");
    is_deeply $obj, {};
    isa_ok $obj, "Bar";

    $obj = new_ok("Foo", [this => 42]);
    is_deeply $obj, { this => 42 };
    isa_ok $obj, "Foo";

    $obj = new_ok("Foo", [], "Foo");
    is_deeply $obj, {};
    isa_ok $obj, "Foo";
}

# And what if we give it nothing?
eval {
    new_ok();
};
is $@@, sprintf "new_ok() must be given at least a class at %s line %d.\n", $0, __LINE__ - 2;
@


1.1
log
@update Test::Simple to version 0.86

tested in multiple builds on multiple arches by me
ok millert@@, simon@@
@
text
@@

