head	1.4;
access;
symbols
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	PERL_5_10_1:1.1.1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.2.0.2
	OPENBSD_4_5_BASE:1.1.1.2
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.1.1.1.0.24
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.22
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.20
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.18
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.16
	OPENBSD_4_0_BASE:1.1.1.1
	PERL_5_8_8:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.14
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.12
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.10
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.8
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.6
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2010.09.24.14.59.51;	author millert;	state dead;
branches;
next	1.3;

1.3
date	2009.10.12.18.24.43;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.16.21.42.57;	author simon;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.27.22.15.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.15.01;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.09.29.17.18.43;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2009.10.12.18.10.56;	author millert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!perl -w

BEGIN {
    if( $ENV{PERL_CORE} ) {
        chdir 't';
        @@INC = '../lib';
    }
}

use Test::More tests => 17;

# If we skip with the same name, Test::Harness will report it back and
# we won't get lots of false bug reports.
my $Why = "Just testing the skip interface.";

SKIP: {
    skip $Why, 2 
      unless Pigs->can('fly');

    my $pig = Pigs->new;
    $pig->takeoff;

    ok( $pig->altitude > 0,         'Pig is airborne' );
    ok( $pig->airspeed > 0,         '  and moving'    );
}


SKIP: {
    skip "We're not skipping", 2 if 0;

    pass("Inside skip block");
    pass("Another inside");
}


SKIP: {
    skip "Again, not skipping", 2 if 0;

    my($pack, $file, $line) = caller;
    is( $pack || '', '',      'calling package not interfered with' );
    is( $file || '', '',      '  or file' );
    is( $line || '', '',      '  or line' );
}


SKIP: {
    skip $Why, 2 if 1;

    die "A horrible death";
    fail("Deliberate failure");
    fail("And again");
}


{
    my $warning;
    local $SIG{__WARN__} = sub { $warning = join "", @@_ };
    SKIP: {
        # perl gets the line number a little wrong on the first
        # statement inside a block.
        1 == 1;
#line 56
        skip $Why;
        fail("So very failed");
    }
    is( $warning, "skip() needs to know \$how_many tests are in the ".
                  "block at $0 line 56\n",
        'skip without $how_many warning' );
}


SKIP: {
    skip "Not skipping here.", 4 if 0;

    pass("This is supposed to run");

    # Testing out nested skips.
    SKIP: {
        skip $Why, 2;
        fail("AHHH!");
        fail("You're a failure");
    }

    pass("This is supposed to run, too");
}

{
    my $warning = '';
    local $SIG{__WARN__} = sub { $warning .= join "", @@_ };

    SKIP: {
        skip 1, "This is backwards" if 1;

        pass "This does not run";
    }

    like $warning, qr/^skip\(\) was passed a non-numeric number of tests/;
}
@


1.3
log
@Merge in perl 5.10.1
@
text
@@


1.2
log
@relocate / fix Test::Simple tests

ok millert@@
@
text
@a1 1
# $Id$
d97 1
a97 1
    like $warning, '/^skip\(\) was passed a non-numeric number of tests/';
@


1.1
log
@Initial revision
@
text
@d2 1
d11 1
a11 1
use Test::More tests => 15;
d88 12
@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.10.0 from CPAN
@
text
@d10 1
a10 1
use Test::More tests => 17;
a86 12
{
    my $warning = '';
    local $SIG{__WARN__} = sub { $warning .= join "", @@_ };

    SKIP: {
        skip 1, "This is backwards" if 1;

        pass "This does not run";
    }

    like $warning, '/^skip\(\) was passed a non-numeric number of tests/';
}
@


1.1.1.3
log
@import perl 5.10.1
@
text
@d97 1
a97 1
    like $warning, qr/^skip\(\) was passed a non-numeric number of tests/;
@


