head	1.4;
access;
symbols
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	PERL_5_10_1:1.1.1.4
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.3.0.2
	OPENBSD_4_5_BASE:1.1.1.3
	PERL_5_10_0:1.1.1.3
	OPENBSD_4_4:1.1.1.2.0.10
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.8
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.6
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.4
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.2
	OPENBSD_4_0_BASE:1.1.1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.1.0.14
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.12
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.10
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.8
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.6
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2010.09.24.14.59.51;	author millert;	state dead;
branches;
next	1.3;

1.3
date	2009.10.12.18.24.43;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.16.21.42.57;	author simon;	state Exp;
branches;
next	1.1;

1.1
date	2002.10.27.22.15.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.15.01;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.03.28.18.48.59;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.29.17.18.43;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2009.10.12.18.10.56;	author millert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!perl -w

# Simple test of what failure output looks like

BEGIN {
    if( $ENV{PERL_CORE} ) {
        chdir 't';
        @@INC = ('../lib', 'lib');
    }
    else {
        unshift @@INC, 't/lib';
    }
}

use strict;

# Normalize the output whether we're running under Test::Harness or not.
local $ENV{HARNESS_ACTIVE} = 0;

use Test::Builder;
use Test::Builder::NoOutput;

my $Test = Test::Builder->new;

# Set up a builder to record some failing tests.
{
    my $tb = Test::Builder::NoOutput->create;
    $tb->plan( tests => 5 );

#line 28
    $tb->ok( 1, 'passing' );
    $tb->ok( 2, 'passing still' );
    $tb->ok( 3, 'still passing' );
    $tb->ok( 0, 'oh no!' );
    $tb->ok( 0, 'damnit' );
    $tb->_ending;

    $Test->is_eq($tb->read('out'), <<OUT);
1..5
ok 1 - passing
ok 2 - passing still
ok 3 - still passing
not ok 4 - oh no!
not ok 5 - damnit
OUT

    $Test->is_eq($tb->read('err'), <<ERR);
#   Failed test 'oh no!'
#   at $0 line 31.
#   Failed test 'damnit'
#   at $0 line 32.
# Looks like you failed 2 tests of 5.
ERR

    $Test->done_testing(2);
}
@


1.3
log
@Merge in perl 5.10.1
@
text
@@


1.2
log
@relocate / fix Test::Simple tests

ok millert@@
@
text
@d2 2
a3 1
# $Id$
d17 1
a17 2
require Test::Simple::Catch;
my($out, $err) = Test::Simple::Catch::caught();
d20 2
d23 1
a23 30
# Can't use Test.pm, that's a 5.005 thing.
package My::Test;

print "1..2\n";

my $test_num = 1;
# Utility testing functions.
sub ok ($;$) {
    my($test, $name) = @@_;
    my $ok = '';
    $ok .= "not " unless $test;
    $ok .= "ok $test_num";
    $ok .= " - $name" if defined $name;
    $ok .= "\n";
    print $ok;
    $test_num++;
}


package main;

require Test::Simple;
Test::Simple->import(tests => 5);

#line 35
ok( 1, 'passing' );
ok( 2, 'passing still' );
ok( 3, 'still passing' );
ok( 0, 'oh no!' );
ok( 0, 'damnit' );
d25 12
d38 1
a38 2
END {
    My::Test::ok($$out eq <<OUT);
d47 1
a47 1
    My::Test::ok($$err eq <<ERR);
d49 1
a49 1
#   at $0 line 38.
d51 1
a51 1
#   at $0 line 39.
d55 1
a55 2
    # Prevent Test::Simple from exiting with non zero
    exit 0;
@


1.1
log
@Initial revision
@
text
@d2 1
d18 1
d64 4
a67 2
#     Failed test ($0 at line 38)
#     Failed test ($0 at line 39)
@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.8 import
@
text
@a16 1
local $ENV{HARNESS_ACTIVE} = 0;
d62 2
a63 4
#   Failed test 'oh no!'
#   in $0 at line 38.
#   Failed test 'damnit'
#   in $0 at line 39.
@


1.1.1.3
log
@import perl 5.10.0 from CPAN
@
text
@d64 1
a64 1
#   at $0 line 38.
d66 1
a66 1
#   at $0 line 39.
@


1.1.1.4
log
@import perl 5.10.1
@
text
@a2 2
# Simple test of what failure output looks like

d15 2
a16 1
# Normalize the output whether we're running under Test::Harness or not.
a18 2
use Test::Builder;
use Test::Builder::NoOutput;
d20 30
a49 1
my $Test = Test::Builder->new;
a50 12
# Set up a builder to record some failing tests.
{
    my $tb = Test::Builder::NoOutput->create;
    $tb->plan( tests => 5 );

#line 28
    $tb->ok( 1, 'passing' );
    $tb->ok( 2, 'passing still' );
    $tb->ok( 3, 'still passing' );
    $tb->ok( 0, 'oh no!' );
    $tb->ok( 0, 'damnit' );
    $tb->_ending;
d52 2
a53 1
    $Test->is_eq($tb->read('out'), <<OUT);
d62 1
a62 1
    $Test->is_eq($tb->read('err'), <<ERR);
d64 1
a64 1
#   at $0 line 31.
d66 1
a66 1
#   at $0 line 32.
d70 2
a71 1
    $Test->done_testing(2);
@


