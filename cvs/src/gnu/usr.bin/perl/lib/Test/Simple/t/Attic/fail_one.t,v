head	1.4;
access;
symbols
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	PERL_5_10_1:1.1.1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.2.0.2
	OPENBSD_4_5_BASE:1.1.1.2
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.1.1.1.0.10
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.8
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.6
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	PERL_5_8_8:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2010.09.24.14.59.51;	author millert;	state dead;
branches;
next	1.3;

1.3
date	2009.10.12.18.24.43;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.16.21.42.57;	author simon;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.28.18.48.59;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.03.28.18.48.59;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.09.29.17.18.43;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2009.10.12.18.10.56;	author millert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!/usr/bin/perl -w

BEGIN {
    if( $ENV{PERL_CORE} ) {
        chdir 't';
        @@INC = ('../lib', 'lib');
    }
    else {
        unshift @@INC, 't/lib';
    }
}

use strict;

# Normalize the output whether we're running under Test::Harness or not.
local $ENV{HARNESS_ACTIVE} = 0;

use Test::Builder;
use Test::Builder::NoOutput;

my $Test = Test::Builder->new;

{
    my $tb = Test::Builder::NoOutput->create;

    $tb->plan( tests => 1 );

#line 28
    $tb->ok(0);
    $tb->_ending;

    $Test->is_eq($tb->read('out'), <<OUT);
1..1
not ok 1
OUT

    $Test->is_eq($tb->read('err'), <<ERR);
#   Failed test at $0 line 28.
# Looks like you failed 1 test of 1.
ERR

    $Test->done_testing(2);
}
@


1.3
log
@Merge in perl 5.10.1
@
text
@@


1.2
log
@relocate / fix Test::Simple tests

ok millert@@
@
text
@a1 1
# $Id$
d15 1
a15 2
require Test::Simple::Catch;
my($out, $err) = Test::Simple::Catch::caught();
d18 2
d21 1
a21 2
# Can't use Test.pm, that's a 5.005 thing.
package My::Test;
d23 2
a24 1
print "1..2\n";
d26 1
a26 11
my $test_num = 1;
# Utility testing functions.
sub ok ($;$) {
    my($test, $name) = @@_;
    my $ok = '';
    $ok .= "not " unless $test;
    $ok .= "ok $test_num";
    $ok .= " - $name" if defined $name;
    $ok .= "\n";
    print $ok;
    $test_num++;
d28 3
a30 11
    return $test ? 1 : 0;
}


package main;

require Test::Simple;
Test::Simple->import(tests => 1);

#line 45
ok(0);
d32 1
a32 2
END {
    My::Test::ok($$out eq <<OUT);
d37 2
a38 2
    My::Test::ok($$err eq <<ERR) || print $$err;
#   Failed test at $0 line 45.
d42 1
a42 2
    # Prevent Test::Simple from existing with non-zero
    exit 0;
@


1.1
log
@Initial revision
@
text
@d2 1
d57 1
a57 1
#   Failed test in $0 at line 45.
@


1.1.1.1
log
@perl 5.8.8 import
@
text
@@


1.1.1.2
log
@import perl 5.10.0 from CPAN
@
text
@d56 1
a56 1
#   Failed test at $0 line 45.
@


1.1.1.3
log
@import perl 5.10.1
@
text
@d15 2
a16 1
# Normalize the output whether we're running under Test::Harness or not.
a18 2
use Test::Builder;
use Test::Builder::NoOutput;
d20 2
a21 1
my $Test = Test::Builder->new;
d23 1
a23 2
{
    my $tb = Test::Builder::NoOutput->create;
d25 11
a35 1
    $tb->plan( tests => 1 );
d37 2
a38 3
#line 28
    $tb->ok(0);
    $tb->_ending;
d40 11
a50 1
    $Test->is_eq($tb->read('out'), <<OUT);
d55 2
a56 2
    $Test->is_eq($tb->read('err'), <<ERR);
#   Failed test at $0 line 28.
d60 2
a61 1
    $Test->done_testing(2);
@


