head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.1.1.0.10
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.8
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.6
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	PERL_5_8_8:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2008.09.29.17.36.14;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2006.03.28.18.48.59;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.03.28.18.48.59;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@#!/usr/bin/perl -w

# Test to see if we've worked around some wacky sort/threading bug
# See [rt.cpan.org 6782]

BEGIN {
    if( $ENV{PERL_CORE} ) {
        chdir 't';
        @@INC = ('../lib', 'lib');
    }
    else {
        unshift @@INC, 't/lib';
    }
}

use strict;
use Config;

BEGIN {
    unless ( $] >= 5.008 && $Config{'useithreads'} && 
             eval { require threads; 'threads'->import; 1; }) 
    {
        print "1..0 # Skip: no threads\n";
        exit 0;
    }
}
use Test::More;

# Passes with $nthreads = 1 and with eq_set().
# Passes with $nthreads = 2 and with eq_array().
# Fails  with $nthreads = 2 and with eq_set().
my $Num_Threads = 2;

plan tests => $Num_Threads;


sub do_one_thread {
    my $kid = shift;
    my @@list = ( 'x', 'yy', 'zzz', 'a', 'bb', 'ccc', 'aaaaa', 'z',
                 'hello', 's', 'thisisalongname', '1', '2', '3',
                 'abc', 'xyz', '1234567890', 'm', 'n', 'p' );
    my @@list2 = @@list;
    print "# kid $kid before eq_set\n";

    for my $j (1..99) {
        # With eq_set, either crashes or panics
        eq_set(\@@list, \@@list2);
        eq_array(\@@list, \@@list2);
    }
    print "# kid $kid exit\n";
    return 42;
}

my @@kids = ();
for my $i (1..$Num_Threads) {
    my $t = threads->new(\&do_one_thread, $i);
    print "# parent $$: continue\n";
    push(@@kids, $t);
}
for my $t (@@kids) {
    print "# parent $$: waiting for join\n";
    my $rc = $t->join();
    cmp_ok( $rc, '==', 42, "threads exit status is $rc" );
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl 5.8.8 import
@
text
@@
