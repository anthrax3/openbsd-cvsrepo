head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.2.0.14
	OPENBSD_6_2_BASE:1.1.1.2
	PERL_5_24_2:1.1.1.2
	OPENBSD_6_1:1.1.1.2.0.12
	OPENBSD_6_1_BASE:1.1.1.2
	OPENBSD_6_0:1.1.1.2.0.10
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.4
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.6
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.2
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.1.0.50
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.48
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.44
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.42
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.40
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.38
	OPENBSD_5_0:1.1.1.1.0.36
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.34
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.32
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.28
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.30
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.26
	OPENBSD_4_5_BASE:1.1.1.1
	PERL_5_10_0:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.24
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.22
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.20
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.18
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.16
	OPENBSD_4_0_BASE:1.1.1.1
	PERL_5_8_8:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.14
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.12
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.10
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.8
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.6
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2002.10.27.22.15.00;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.15.00;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.11.17.20.53.08;	author afresh1;	state Exp;
branches;
next	;
commitid	B31cAbBIXiCqnL97;


desc
@@


1.1
log
@Initial revision
@
text
@#!./perl -wT

BEGIN {
    chdir 't' if -d 't';
    @@INC = '../lib';
}

use strict;
use Test::More tests => 21;
use Getopt::Std;

our ($warning, $opt_f, $opt_i, $opt_o, $opt_x, $opt_y, %opt);

# First we test the getopt function
@@ARGV = qw(-xo -f foo -y file);
getopt('f');

is( "@@ARGV", 'file',		'options removed from @@ARGV (1)' );
ok( $opt_x && $opt_o && $opt_y, 'options -x, -o and -y set' );
is( $opt_f, 'foo',		q/option -f is 'foo'/ );

@@ARGV = qw(-hij k -- -l m -n);
getopt 'il', \%opt;

is( "@@ARGV", 'k -- -l m -n',	'options removed from @@ARGV (2)' );
ok( $opt{h} && $opt{i} eq 'j',	'option -h and -i correctly set' );
ok( !defined $opt{l},		'option -l not set' );
ok( !defined $opt_i,		'$opt_i still undefined' );

# Then we try the getopts
$opt_o = $opt_i = $opt_f = undef;
@@ARGV = qw(-foi -i file);

ok( getopts('oif:'),		'getopts succeeded (1)' );
is( "@@ARGV", 'file',		'options removed from @@ARGV (3)' );
ok( $opt_i && $opt_f eq 'oi',	'options -i and -f correctly set' );
ok( !defined $opt_o,		'option -o not set' );

%opt = (); $opt_i = undef;
@@ARGV = qw(-hij -k -- -l m);

ok( getopts('hi:kl', \%opt),	'getopts succeeded (2)' );
is( "@@ARGV", '-l m',		'options removed from @@ARGV (4)' );
ok( $opt{h} && $opt{k},		'options -h and -k set' );
is( $opt{i}, 'j',		q/option -i is 'j'/ );
ok( !defined $opt_i,		'$opt_i still undefined' );

# Try illegal options, but avoid printing of the error message
$SIG{__WARN__} = sub { $warning = $_[0] };
@@ARGV = qw(-h help);

ok( !getopts("xf:y"),		'getopts fails for an illegal option' );
ok( $warning eq "Unknown option: h\n", 'user warned' );

# Then try the Getopt::Long module

use Getopt::Long;

@@ARGV = qw(--help --file foo --foo --nobar --num=5 -- file);

our ($HELP, $FILE, $FOO, $BAR, $NO);

ok( GetOptions(
	'help'   => \$HELP,
	'file:s' => \$FILE,
	'foo!'   => \$FOO,
	'bar!'   => \$BAR,
	'num:i'  => \$NO,
    ),
    'Getopt::Long::GetOptions succeeded'
);
is( "@@ARGV", 'file', 'options removed from @@ARGV (5)' );
ok( $HELP && $FOO && !$BAR && $FILE eq 'foo' && $NO == 5, 'options set' );
@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@Import perl-5.20.1
@
text
@d9 1
a9 1
use Test::More tests => 22;
d55 19
a73 38
# Tests for RT #41359
undef %opt;
my $expected;
{
    local @@ARGV = ( '-a', '-b', 'foo', '-c' );
    getopts('ab:c:', \%opt);
    $expected = { 'a' => 1, 'b' => 'foo', 'c' => undef };
    is_deeply(\%opt, $expected,
        "getopts: multiple switches; switch expected argument, none provided; value undef");
    undef %opt;
}

{
    local @@ARGV = ( '-c' );
    getopts('c:', \%opt);
    $expected = { 'c' => undef };
    is_deeply(\%opt, $expected,
        "getopts: single switch; switch expected argument, none provided; value undef");
    undef %opt;
}

{
    local @@ARGV = ( '-b', 'foo', '-c' );
    getopt('bc', \%opt);
    $expected = { 'b' => 'foo', 'c' => undef };
    is_deeply(\%opt, $expected,
        "getopt: multiple switches; switch expected argument, none provided; value undef");
    undef %opt;
}

{
    local @@ARGV = ( '-c' );
    getopt('c', \%opt);
    $expected = { 'c' => undef };
    is_deeply(\%opt, $expected,
        "getopt: single switch; switch expected argument, none provided; value undef");
    undef %opt;
}
@

