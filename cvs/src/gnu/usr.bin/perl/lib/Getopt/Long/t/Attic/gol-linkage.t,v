head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.4.0.8
	OPENBSD_4_8_BASE:1.1.1.4
	OPENBSD_4_7:1.1.1.4.0.4
	OPENBSD_4_7_BASE:1.1.1.4
	PERL_5_10_1:1.1.1.4
	OPENBSD_4_6:1.1.1.4.0.6
	OPENBSD_4_6_BASE:1.1.1.4
	OPENBSD_4_5:1.1.1.4.0.2
	OPENBSD_4_5_BASE:1.1.1.4
	PERL_5_10_0:1.1.1.4
	OPENBSD_4_4:1.1.1.3.0.10
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.8
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_2:1.1.1.3.0.6
	OPENBSD_4_2_BASE:1.1.1.3
	OPENBSD_4_1:1.1.1.3.0.4
	OPENBSD_4_1_BASE:1.1.1.3
	OPENBSD_4_0:1.1.1.3.0.2
	OPENBSD_4_0_BASE:1.1.1.3
	PERL_5_8_8:1.1.1.3
	OPENBSD_3_9:1.1.1.2.0.10
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.8
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.6
	OPENBSD_3_7_BASE:1.1.1.2
	PERL_5_8_6:1.1.1.2
	OPENBSD_3_6:1.1.1.2.0.4
	OPENBSD_3_6_BASE:1.1.1.2
	PERL_5_8_5:1.1.1.2
	PERL_5_8_3:1.1.1.2
	OPENBSD_3_5:1.1.1.2.0.2
	OPENBSD_3_5_BASE:1.1.1.2
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2010.09.24.14.59.40;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2002.10.27.22.15.00;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.15.00;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.12.03.02.44.04;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.03.28.18.48.49;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2008.09.29.17.18.36;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!./perl -w

BEGIN {
    chdir('t') if -d 't';
    @@INC = '../lib';
}

use Getopt::Long;

print "1..18\n";

@@ARGV = qw(-Foo -baR --foo bar);
Getopt::Long::Configure ("no_ignore_case");
%lnk = ();
print "ok 1\n" if GetOptions (\%lnk, "foo", "Foo=s");
print ((defined $lnk{foo})   ? "" : "not ", "ok 2\n");
print (($lnk{foo} == 1)      ? "" : "not ", "ok 3\n");
print ((defined $lnk{Foo})   ? "" : "not ", "ok 4\n");
print (($lnk{Foo} eq "-baR") ? "" : "not ", "ok 5\n");
print ((@@ARGV == 1)          ? "" : "not ", "ok 6\n");
print (($ARGV[0] eq "bar")   ? "" : "not ", "ok 7\n");
print (!(exists $lnk{baR})   ? "" : "not ", "ok 8\n");

@@ARGV = qw(-Foo -baR --foo bar);
Getopt::Long::Configure ("default","no_ignore_case");
%lnk = ();
my $foo;
print "ok 9\n" if GetOptions (\%lnk, "foo" => \$foo, "Foo=s");
print ((defined $foo)        ? "" : "not ", "ok 10\n");
print (($foo == 1)           ? "" : "not ", "ok 11\n");
print ((defined $lnk{Foo})   ? "" : "not ", "ok 12\n");
print (($lnk{Foo} eq "-baR") ? "" : "not ", "ok 13\n");
print ((@@ARGV == 1)          ? "" : "not ", "ok 14\n");
print (($ARGV[0] eq "bar")   ? "" : "not ", "ok 15\n");
print (!(exists $lnk{foo})   ? "" : "not ", "ok 16\n");
print (!(exists $lnk{baR})   ? "" : "not ", "ok 17\n");
print (!(exists $lnk{bar})   ? "" : "not ", "ok 18\n");
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.2 from CPAN
@
text
@d4 2
a5 4
    if ($ENV{PERL_CORE}) {
	@@INC = '../lib';
	chdir 't';
    }
@


1.1.1.3
log
@perl 5.8.8 import
@
text
@a2 2
no strict;

d12 1
a12 1
print "1..32\n";
a39 38

@@ARGV = qw(/Foo=-baR --bar bar);
Getopt::Long::Configure ("default","prefix_pattern=--|/|-|\\+","long_prefix_pattern=--|/");
%lnk = ();
my $bar;
print "ok 19\n" if GetOptions (\%lnk, "bar" => \$bar, "Foo=s");
print ((defined $bar)        ? "" : "not ", "ok 20\n");
print (($bar == 1)           ? "" : "not ", "ok 21\n");
print ((defined $lnk{Foo})   ? "" : "not ", "ok 22\n");
print (($lnk{Foo} eq "-baR") ? "" : "not ", "ok 23\n");
print ((@@ARGV == 1)          ? "" : "not ", "ok 24\n");
print (($ARGV[0] eq "bar")   ? "" : "not ", "ok 25\n");
print (!(exists $lnk{foo})   ? "" : "not ", "ok 26\n");
print (!(exists $lnk{baR})   ? "" : "not ", "ok 27\n");
print (!(exists $lnk{bar})   ? "" : "not ", "ok 28\n");
{
    my $errors;
    %lnk = ();
    local $SIG{__WARN__}= sub { $errors.=join("\n",@@_,'') };

    @@ARGV = qw(/Foo=-baR);
    Getopt::Long::Configure ("default","bundling","ignore_case_always",
                             "prefix_pattern=--|/|-|\\+","long_prefix_pattern=--");
    %lnk = ();
    undef $bar;
    GetOptions (\%lnk, "bar" => \$bar, "Foo=s");
    print (($errors=~/Unknown option:/) ? "" : "not ", "ok 29\n");
    $errors="";
    %lnk = ();
    undef $bar;
     @@ARGV = qw(/Foo=-baR);
    Getopt::Long::Configure ("default","bundling","ignore_case_always",
                             "prefix_pattern=--|/|-|\\+","long_prefix_pattern=--|/");
    GetOptions (\%lnk, "bar" => \$bar, "Foo=s");
    print (($errors eq '') ? "" : "not ", "ok 30\n");
    print ((defined $lnk{Foo})   ? "" : "not ", "ok 31\n");
    print (($lnk{Foo} eq "-baR") ? "" : "not ", "ok 32\n");
}
@


1.1.1.4
log
@import perl 5.10.0 from CPAN
@
text
@d14 1
a14 1
print "1..33\n";
a78 14
}

{
    # Allow hashes to overload "".
    # This used to fail up to 2.34.
    # Thanks to Yves Orton.
    my $blessed = bless(\%lnk, "OverLoad::Test");

    @@ARGV = qw(--foo bar);
    Getopt::Long::Configure("default");
    print "not" unless GetOptions (\%lnk, "foo=s" => \$foo);
    print "ok 33\n";
    package Overload::Test;
    use overload '""' => sub{ die "Bad mojo!" };
@


