head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.2.0.24
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.20
	OPENBSD_4_7_BASE:1.1.1.2
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.22
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.18
	OPENBSD_4_5_BASE:1.1.1.2
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.16
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.14
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.12
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.10
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.8
	OPENBSD_4_0_BASE:1.1.1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.2.0.6
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.4
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.2
	OPENBSD_3_7_BASE:1.1.1.2
	PERL_5_8_6:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.43;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2003.12.03.02.44.06;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.12.03.02.44.06;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.01.15.21.17.24;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!/usr/bin/perl -w

# Test whether $Math::BigInt::upgrade is breaks out neck

use Test;
use strict;

BEGIN
  {
  $| = 1;
  chdir 't' if -d 't';
  unshift @@INC, '../lib';
  plan tests => 5;
  }

use Math::BigInt upgrade => 'Math::BigRat';
use Math::BigRat;

my $rat = 'Math::BigRat';
my ($x,$y,$z);

##############################################################################
# bceil/bfloor

$x = $rat->new('49/4'); ok ($x->bfloor(),'12');
$x = $rat->new('49/4'); ok ($x->bceil(),'13');

##############################################################################
# bsqrt

$x = $rat->new('144'); ok ($x->bsqrt(),'12');
$x = $rat->new('144/16'); ok ($x->bsqrt(),'3');
$x = $rat->new('1/3'); ok ($x->bsqrt(),
 '1000000000000000000000000000000000000000/1732050807568877293527446341505872366943');




@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl 5.8.2 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.6 from CPAN
@
text
@d3 1
a3 1
# Test whether $Math::BigInt::upgrade breaks our neck
d5 1
a5 1
use Test::More;
d25 2
a26 2
$x = $rat->new('49/4'); is ($x->bfloor(),'12', 'floor(49/4)');
$x = $rat->new('49/4'); is ($x->bceil(),'13', 'ceil(49/4)');
d31 5
a35 5
$x = $rat->new('144'); is ($x->bsqrt(),'12', 'bsqrt(144)');
$x = $rat->new('144/16'); is ($x->bsqrt(),'3', 'bsqrt(144/16)');
$x = $rat->new('1/3'); is ($x->bsqrt(),
 '1000000000000000000000000000000000000000/1732050807568877293527446341505872366943',
 'bsqrt(1/3)');
a36 1
# all tests successfull
a37 1
1;
@

