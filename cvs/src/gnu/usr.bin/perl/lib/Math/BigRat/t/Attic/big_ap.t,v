head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.2.0.24
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.20
	OPENBSD_4_7_BASE:1.1.1.2
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.22
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.18
	OPENBSD_4_5_BASE:1.1.1.2
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.16
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.14
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.12
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.10
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.8
	OPENBSD_4_0_BASE:1.1.1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.2.0.6
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.4
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.2
	OPENBSD_3_7_BASE:1.1.1.2
	PERL_5_8_6:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.42;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2003.12.03.02.44.06;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.12.03.02.44.06;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.01.15.21.17.24;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!/usr/bin/perl -w

use Test;
use strict;

BEGIN
  {
  $| = 1;
  chdir 't' if -d 't';
  unshift @@INC, '../lib';
  plan tests => 17;
  }

use Math::BigInt;
use Math::BigFloat;
use Math::BigRat;

my $r = 'Math::BigRat';
my $proper = $r->new('12345678901234567890/2');
my $proper_inc = $r->new('12345678901234567890/2')->binc();
my $proper_dec = $r->new('12345678901234567890/2')->bdec();
my $proper_int = Math::BigInt->new('12345678901234567890');
my $proper_float = Math::BigFloat->new('12345678901234567890');
my $proper2 = $r->new('12345678901234567890');

print "# Start\n";

Math::BigInt->accuracy(3);
Math::BigFloat->accuracy(5);

my ($x,$y,$z);

##############################################################################
# new()

$z = $r->new('12345678901234567890/2');
ok ($z,$proper);

$z = $r->new('1234567890123456789E1');
ok ($z,$proper2);

$z = $r->new('12345678901234567890/1E0');
ok ($z,$proper2);
$z = $r->new('1234567890123456789e1/1');
ok ($z,$proper2);
$z = $r->new('1234567890123456789e1/1E0');
ok ($z,$proper2);

$z = $r->new($proper_int);
ok ($z,$proper2);

$z = $r->new($proper_float);
ok ($z,$proper2);

##############################################################################
# bdiv

$x = $r->new('12345678901234567890'); $y = Math::BigRat->new('2');
$z = $x->copy->bdiv($y);
ok ($z,$proper);

##############################################################################
# bmul

$x = $r->new("$proper"); $y = Math::BigRat->new('1');
$z = $x->copy->bmul($y);
ok ($z,$proper);
$z = $r->new('12345678901234567890/1E0');
ok ($z,$proper2);

$z = $r->new($proper_int);
ok ($z,$proper2);

$z = $r->new($proper_float);
ok ($z,$proper2);

##############################################################################
# bdiv

$x = $r->new('12345678901234567890'); $y = Math::BigRat->new('2');
$z = $x->copy->bdiv($y);
ok ($z,$proper);

##############################################################################
# bmul

$x = $r->new("$proper"); $y = Math::BigRat->new('1');
$z = $x->copy->bmul($y);
ok ($z,$proper);

$x = $r->new("$proper"); $y = Math::BigRat->new('2');
$z = $x->copy->bmul($y);
ok ($z,$proper2);

##############################################################################
# binc

$x = $proper->copy()->binc(); ok ($x,$proper_inc);
$x = $proper->copy()->bdec(); ok ($x,$proper_dec);

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl 5.8.2 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.6 from CPAN
@
text
@a2 3
# Test that accuracy() and precision() in BigInt/BigFloat do not disturb
# the rounding force in BigRat.

d96 1
a96 1
# binc/bdec
@

