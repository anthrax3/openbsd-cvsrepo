head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.6
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	PERL_5_10_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2010.09.24.14.59.42;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2008.09.29.17.18.38;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.29.17.18.38;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!/usr/bin/perl -w

# test that overloaded compare works when NaN are involved

use strict;
use Test::More;

BEGIN
  {
  $| = 1;
  chdir 't' if -d 't';
  unshift @@INC, '../lib';	# for running manually
  plan tests => 26;
  }

use Math::BigInt;
use Math::BigFloat;

compare (Math::BigInt->bnan(),   Math::BigInt->bone() );
compare (Math::BigFloat->bnan(), Math::BigFloat->bone() );

sub compare
  {
  my ($nan, $one) = @@_;

  is ($one, $one, '1 == 1');

  is ($one != $nan, 1, "1 != NaN");
  is ($nan != $one, 1, "NaN != 1");
  is ($nan != $nan, 1, "NaN != NaN");

  is ($nan == $one, '', "NaN == 1");
  is ($one == $nan, '', "1 == NaN");
  is ($nan == $nan, '', "NaN == NaN");

  is ($nan <= $one, '', "NaN <= 1");
  is ($one <= $nan, '', "1 <= NaN");
  is ($nan <= $nan, '', "NaN <= NaN");

  is ($nan >= $one, '', "NaN >= 1");
  is ($one >= $nan, '', "1 >= NaN");
  is ($nan >= $nan, '', "NaN >= NaN");
  }

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.10.0 from CPAN
@
text
@@
