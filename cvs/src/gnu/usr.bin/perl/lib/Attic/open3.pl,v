head	1.4;
access;
symbols
	OPENBSD_5_3:1.3.0.10
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.8
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	PERL_5_12_2:1.1.1.3
	OPENBSD_4_8:1.2.0.52
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.48
	OPENBSD_4_7_BASE:1.2
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.2.0.50
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.46
	OPENBSD_4_5_BASE:1.2
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.2.0.44
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.42
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.40
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.38
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.36
	OPENBSD_4_0_BASE:1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.2.0.34
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.32
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.30
	OPENBSD_3_7_BASE:1.2
	PERL_5_8_6:1.1.1.2
	OPENBSD_3_6:1.2.0.28
	OPENBSD_3_6_BASE:1.2
	PERL_5_8_5:1.1.1.2
	PERL_5_8_3:1.1.1.2
	OPENBSD_3_5:1.2.0.26
	OPENBSD_3_5_BASE:1.2
	PERL_5_8_2:1.1.1.2
	OPENBSD_3_4:1.2.0.24
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.22
	OPENBSD_3_3_BASE:1.2
	PERL_5_8_0:1.1.1.2
	OPENBSD_3_2:1.2.0.20
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.18
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.16
	OPENBSD_3_0_BASE:1.2
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.2.0.14
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.12
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.10
	OPENBSD_2_7_BASE:1.2
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.2.0.8
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2013.03.25.20.40.55;	author sthen;	state dead;
branches;
next	1.3;

1.3
date	2010.09.24.15.06.59;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.57.05;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.12.35;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.12.35;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.39.55;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2010.09.24.14.48.38;	author millert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@# This legacy library is deprecated and will be removed in a future
# release of perl.
#
# This is a compatibility interface to IPC::Open3.  New programs should
# do
#
#     use IPC::Open3;
#
# instead of
#
#     require 'open3.pl';

package main;
use IPC::Open3 'open3';
1
@


1.3
log
@merge in perl 5.12.2 plus local changes
@
text
@@


1.2
log
@perl 5.004_04
@
text
@d1 3
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
# &open3: Marc Horowitz <marc@@mit.edu>
# derived mostly from &open2 by tom christiansen, <tchrist@@convex.com>
d4 1
a4 1
# $Id: open3.pl,v 1.1 1993/11/23 06:26:15 marc Exp $
d6 1
a6 1
# usage: $pid = open3('wtr', 'rdr', 'err' 'some cmd and args', 'optarg', ...);
d8 1
a8 5
# spawn the given $cmd and connect rdr for
# reading, wtr for writing, and err for errors.
# if err is '', or the same as rdr, then stdout and
# stderr of the child are on the same fh.  returns pid
# of child, or 0 on failure.
d10 3
a12 93

# if wtr begins with '>&', then wtr will be closed in the parent, and
# the child will read from it directly.  if rdr or err begins with
# '>&', then the child will send output directly to that fd.  In both
# cases, there will be a dup() instead of a pipe() made.


# WARNING: this is dangerous, as you may block forever
# unless you are very careful.
#
# $wtr is left unbuffered.
#
# abort program if
#   rdr or wtr are null
#   pipe or fork or exec fails

package open3;

$fh = 'FHOPEN000';  # package static in case called more than once

sub main'open3 {
    local($kidpid);
    local($dad_wtr, $dad_rdr, $dad_err, @@cmd) = @@_;
    local($dup_wtr, $dup_rdr, $dup_err);

    $dad_wtr			|| die "open3: wtr should not be null";
    $dad_rdr			|| die "open3: rdr should not be null";
    $dad_err = $dad_rdr if ($dad_err eq '');

    $dup_wtr = ($dad_wtr =~ s/^\>\&//);
    $dup_rdr = ($dad_rdr =~ s/^\>\&//);
    $dup_err = ($dad_err =~ s/^\>\&//);

    # force unqualified filehandles into callers' package
    local($package) = caller;
    $dad_wtr =~ s/^[^']+$/$package'$&/;
    $dad_rdr =~ s/^[^']+$/$package'$&/;
    $dad_err =~ s/^[^']+$/$package'$&/;

    local($kid_rdr) = ++$fh;
    local($kid_wtr) = ++$fh;
    local($kid_err) = ++$fh;

    if (!$dup_wtr) {
	pipe($kid_rdr, $dad_wtr)    || die "open3: pipe 1 (stdin) failed: $!";
    }
    if (!$dup_rdr) {
	pipe($dad_rdr, $kid_wtr)    || die "open3: pipe 2 (stdout) failed: $!";
    }
    if ($dad_err ne $dad_rdr && !$dup_err) {
	pipe($dad_err, $kid_err)    || die "open3: pipe 3 (stderr) failed: $!";
    }

    if (($kidpid = fork) < 0) {
        die "open2: fork failed: $!";
    } elsif ($kidpid == 0) {
	if ($dup_wtr) {
	    open(STDIN,  ">&$dad_wtr") if (fileno(STDIN) != fileno($dad_wtr));
	} else {
	    close($dad_wtr);
	    open(STDIN,  ">&$kid_rdr");
	}
	if ($dup_rdr) {
	    open(STDOUT, ">&$dad_rdr") if (fileno(STDOUT) != fileno($dad_rdr));
	} else {
	    close($dad_rdr);
	    open(STDOUT, ">&$kid_wtr");
	}
	if ($dad_rdr ne $dad_err) {
	    if ($dup_err) {
		open(STDERR, ">&$dad_err")
		    if (fileno(STDERR) != fileno($dad_err));
	    } else {
		close($dad_err);
		open(STDERR, ">&$kid_err");
	    }
	} else {
	    open(STDERR, ">&STDOUT") if (fileno(STDERR) != fileno(STDOUT));
	}
	local($")=(" ");
	exec @@cmd;
        die "open2: exec of @@cmd failed";
    }

    close $kid_rdr; close $kid_wtr; close $kid_err;
    if ($dup_wtr) {
	close($dad_wtr);
    }

    select((select($dad_wtr), $| = 1)[0]); # unbuffer pipe
    $kidpid;
}
1; # so require is happy
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d1 2
a2 2
# This is a compatibility interface to IPC::Open3.  New programs should
# do
d4 1
a4 1
#     use IPC::Open3;
d6 1
a6 1
# instead of
d8 5
a12 1
#     require 'open3.pl';
d14 93
a106 3
package main;
use IPC::Open3 'open3';
1
@


1.1.1.3
log
@Perl 5.12.2 from CPAN
@
text
@a0 3
# This legacy library is deprecated and will be removed in a future
# release of perl.
#
@


