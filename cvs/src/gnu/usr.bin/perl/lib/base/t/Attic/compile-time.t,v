head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.56;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2009.10.12.18.10.54;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.12.18.10.54;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!/usr/bin/perl -w

use strict;
use Test::More tests => 3;

my $Has_PH = $] < 5.009;
my $Field = $Has_PH ? "pseudo-hash field" : "class field";

{
    package Parent;
    use fields qw(this that);
    sub new { fields::new(shift) }
}

{
    package Child;
    use base qw(Parent);
}

my Child $obj = Child->new;

eval q(return; my Child $obj3 = $obj; $obj3->{notthere} = "");
like $@@, 
    qr/^No such .*field "notthere" in variable \$obj3 of type Child/,
    "Compile failure of undeclared fields (helem)";

# Slices
# We should get compile time failures field name typos
SKIP: {
    skip("Pseudo-hashes do not support compile-time slice checks", 2)
        if $Has_PH;

    eval q(return; my Child $obj3 = $obj; my $k; @@$obj3{$k,'notthere'} = ());
    like $@@, 
        qr/^No such .*field "notthere" in variable \$obj3 of type Child/,
        "Compile failure of undeclared fields (hslice)";

    eval q(return; my Child $obj3 = $obj; my $k; @@{$obj3}{$k,'notthere'} = ());
    like 
        $@@, qr/^No such .*field "notthere" in variable \$obj3 of type Child/,
        "Compile failure of undeclared fields (hslice (block form))";
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.10.1
@
text
@@
