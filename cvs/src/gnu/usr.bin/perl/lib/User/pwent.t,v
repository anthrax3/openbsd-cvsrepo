head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.2.0.32
	OPENBSD_6_2_BASE:1.1.1.2
	PERL_5_24_2:1.1.1.2
	OPENBSD_6_1:1.1.1.2.0.36
	OPENBSD_6_1_BASE:1.1.1.2
	OPENBSD_6_0:1.1.1.2.0.34
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.28
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.30
	OPENBSD_5_8_BASE:1.1.1.2
	PERL_5_20_2:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.22
	OPENBSD_5_7_BASE:1.1.1.2
	PERL_5_20_1:1.1.1.2
	OPENBSD_5_6:1.1.1.2.0.26
	OPENBSD_5_6_BASE:1.1.1.2
	PERL_5_18_2:1.1.1.2
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.2.0.24
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.20
	OPENBSD_5_4_BASE:1.1.1.2
	PERL_5_16_3:1.1.1.2
	OPENBSD_5_3:1.1.1.2.0.18
	OPENBSD_5_3_BASE:1.1.1.2
	OPENBSD_5_2:1.1.1.2.0.16
	OPENBSD_5_2_BASE:1.1.1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.14
	OPENBSD_5_0:1.1.1.2.0.12
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.10
	OPENBSD_4_9_BASE:1.1.1.2
	PERL_5_12_2:1.1.1.2
	OPENBSD_4_8:1.1.1.2.0.8
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.4
	OPENBSD_4_7_BASE:1.1.1.2
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.6
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.2
	OPENBSD_4_5_BASE:1.1.1.2
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.1.1.1.0.24
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.22
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.20
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.18
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.16
	OPENBSD_4_0_BASE:1.1.1.1
	PERL_5_8_8:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.14
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.12
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.10
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.8
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.6
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2002.10.27.22.15.02;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.15.02;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.09.29.17.18.46;	author millert;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!./perl

BEGIN {
    chdir 't' if -d 't';
    @@INC = '../lib';
}

BEGIN {
    our $haspw;
    eval { my @@n = getpwuid 0 };
    $haspw = 1 unless $@@ && $@@ =~ /unimplemented/;
    unless ($haspw) { print "1..0 # Skip: no getpwuid\n"; exit 0 }
    use Config;
    # VMS's pwd.h struct passwd conflicts with the one in vmsish.h
    $haspw = 0 unless ( $Config{'i_pwd'} eq 'define' || $^O eq 'VMS' );
    unless ($haspw) { print "1..0 # Skip: no pwd.h\n"; exit 0 }
}

BEGIN {
    our $uid = 0;
    # On VMS getpwuid(0) may return [$gid,0] UIC info (which may not exist).
    # It is better to use the $< uid for testing on VMS instead.
    if ( $^O eq 'VMS' ) { $uid = $< ; }
    our @@pwent = getpwuid $uid; # This is the function getpwuid.
    unless (@@pwent) { print "1..0 # Skip: no uid $uid\n"; exit 0 }
}

print "1..9\n";

use User::pwent;

print "ok 1\n";

my $pwent = getpwuid $uid; # This is the OO getpwuid.

my $uid_expect = $uid;
if ( $^O eq 'cygwin' ) {
    print "not " unless (   $pwent->uid == $uid_expect
                         || $pwent->uid == 500         );  # go figure
}
else {
    print "not " unless $pwent->uid    == $uid_expect ;
}
print "ok 2\n";

print "not " unless $pwent->name   eq $pwent[0];
print "ok 3\n";

if ($^O eq 'os390') {
    print "not "
	unless not defined $pwent->passwd &&
	       $pwent[1] eq '0'; # go figure
} else {
    print "not " unless $pwent->passwd eq $pwent[1];
}
print "ok 4\n";

print "not " unless $pwent->uid    == $pwent[2];
print "ok 5\n";

print "not " unless $pwent->gid    == $pwent[3];
print "ok 6\n";

# The quota and comment fields are unportable.

print "not " unless $pwent->gecos  eq $pwent[6];
print "ok 7\n";

print "not " unless $pwent->dir    eq $pwent[7];
print "ok 8\n";

print "not " unless $pwent->shell  eq $pwent[8];
print "ok 9\n";

# The expire field is unportable.

# Testing pretty much anything else is unportable:
# there maybe more than one username with uid 0;
# uid 0's home directory may be "/" or "/root' or something else,
# and so on.

@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.10.0 from CPAN
@
text
@a23 1
    if ( $^O eq 'cygwin' ) { $uid = 500 ; }
@

