head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.53;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2009.10.12.18.10.54;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.12.18.10.54;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@use strict;
use warnings;

BEGIN {
    if ($ENV{'PERL_CORE'}){
        chdir('t');
        unshift(@@INC, '../lib');
    }
    use Config;
    if (! $Config{'useithreads'}) {
        print("1..0 # SKIP Perl not compiled with 'useithreads'\n");
        exit(0);
    }
}

use threads;
use threads::shared;
use Thread::Semaphore;

if ($] == 5.008) {
    require 't/test.pl';   # Test::More work-alike for Perl 5.8.0
} else {
    require Test::More;
}
Test::More->import();
plan('tests' => 10);

### Basic usage with multiple threads ###

my $sm = Thread::Semaphore->new();
my $st = Thread::Semaphore->new(0);
ok($sm, 'New Semaphore');
ok($st, 'New Semaphore');

my $token :shared = 0;

threads->create(sub {
    $st->down();
    is($token++, 1, 'Thread 1 got semaphore');
    $st->up();
    $sm->up();

    $st->down(4);
    is($token, 5, 'Thread 1 done');
    $sm->up();
})->detach();

threads->create(sub {
    $st->down(2);
    is($token++, 3, 'Thread 2 got semaphore');
    $st->up();
    $sm->up();

    $st->down(4);
    is($token, 5, 'Thread 2 done');
    $sm->up();
})->detach();

$sm->down();
is($token++, 0, 'Main has semaphore');
$st->up();

$sm->down();
is($token++, 2, 'Main got semaphore');
$st->up(2);

$sm->down();
is($token++, 4, 'Main re-got semaphore');
$st->up(9);

$sm->down(2);
$st->down();
ok(1, 'Main done');
threads::yield();

exit(0);

# EOF
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.10.1
@
text
@@
