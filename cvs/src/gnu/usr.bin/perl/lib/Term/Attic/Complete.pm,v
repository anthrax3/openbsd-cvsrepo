head	1.7;
access;
symbols
	OPENBSD_5_3:1.6.0.28
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.26
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.24
	OPENBSD_5_0:1.6.0.22
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.20
	OPENBSD_4_9_BASE:1.6
	PERL_5_12_2:1.1.1.5
	OPENBSD_4_8:1.6.0.18
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.14
	OPENBSD_4_7_BASE:1.6
	PERL_5_10_1:1.1.1.5
	OPENBSD_4_6:1.6.0.16
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.12
	OPENBSD_4_5_BASE:1.6
	PERL_5_10_0:1.1.1.5
	OPENBSD_4_4:1.6.0.10
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.8
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.6
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.4
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	PERL_5_8_8:1.1.1.5
	OPENBSD_3_9:1.5.0.10
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.8
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	PERL_5_8_6:1.1.1.4
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	PERL_5_8_5:1.1.1.4
	PERL_5_8_3:1.1.1.4
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	PERL_5_8_2:1.1.1.4
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	PERL_5_8_0:1.1.1.3
	OPENBSD_3_2:1.3.0.14
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.12
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.10
	OPENBSD_3_0_BASE:1.3
	PERL_5_6_1:1.1.1.2
	OPENBSD_2_9:1.3.0.8
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.7
date	2013.03.25.20.40.56;	author sthen;	state dead;
branches;
next	1.6;

1.6
date	2006.03.28.19.23.08;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.12.03.03.02.41;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.27.22.25.27;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.51.59;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.57.59;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.12.49;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.12.49;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.40.17;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.10.27.22.15.01;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.12.03.02.44.09;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2006.03.28.18.48.58;	author millert;	state Exp;
branches;
next	;


desc
@@


1.7
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@package Term::Complete;
require 5.000;
require Exporter;

use strict;
our @@ISA = qw(Exporter);
our @@EXPORT = qw(Complete);
our $VERSION = '1.402';

#      @@(#)complete.pl,v1.2            (me@@anywhere.EBay.Sun.COM) 09/23/91

=head1 NAME

Term::Complete - Perl word completion module

=head1 SYNOPSIS

    $input = Complete('prompt_string', \@@completion_list);
    $input = Complete('prompt_string', @@completion_list);

=head1 DESCRIPTION

This routine provides word completion on the list of words in
the array (or array ref).

The tty driver is put into raw mode and restored using an operating
system specific command, in UNIX-like environments C<stty>.

The following command characters are defined:

=over 4

=item E<lt>tabE<gt>

Attempts word completion.
Cannot be changed.

=item ^D

Prints completion list.
Defined by I<$Term::Complete::complete>.

=item ^U

Erases the current input.
Defined by I<$Term::Complete::kill>.

=item E<lt>delE<gt>, E<lt>bsE<gt>

Erases one character.
Defined by I<$Term::Complete::erase1> and I<$Term::Complete::erase2>.

=back

=head1 DIAGNOSTICS

Bell sounds when word completion fails.

=head1 BUGS

The completion character E<lt>tabE<gt> cannot be changed.

=head1 AUTHOR

Wayne Thompson

=cut

our($complete, $kill, $erase1, $erase2, $tty_raw_noecho, $tty_restore, $stty, $tty_safe_restore);
our($tty_saved_state) = '';
CONFIG: {
    $complete = "\004";
    $kill     = "\025";
    $erase1 =   "\177";
    $erase2 =   "\010";
    foreach my $s (qw(/bin/stty /usr/bin/stty)) {
	if (-x $s) {
	    $tty_raw_noecho = "$s raw -echo";
	    $tty_restore    = "$s -raw echo";
	    $tty_safe_restore = $tty_restore;
	    $stty = $s;
	    last;
	}
    }
}

sub Complete {
    my($prompt, @@cmp_lst, $cmp, $test, $l, @@match);
    my ($return, $r) = ("", 0);

    $return = "";
    $r      = 0;

    $prompt = shift;
    if (ref $_[0] || $_[0] =~ /^\*/) {
	@@cmp_lst = sort @@{$_[0]};
    }
    else {
	@@cmp_lst = sort(@@_);
    }

    # Attempt to save the current stty state, to be restored later
    if (defined $stty && defined $tty_saved_state && $tty_saved_state eq '') {
	$tty_saved_state = qx($stty -g 2>/dev/null);
	if ($?) {
	    # stty -g not supported
	    $tty_saved_state = undef;
	}
	else {
	    $tty_saved_state =~ s/\s+$//g;
	    $tty_restore = qq($stty "$tty_saved_state" 2>/dev/null);
	}
    }
    system $tty_raw_noecho if defined $tty_raw_noecho;
    LOOP: {
        local $_;
        print($prompt, $return);
        while (($_ = getc(STDIN)) ne "\r") {
            CASE: {
                # (TAB) attempt completion
                $_ eq "\t" && do {
                    @@match = grep(/^\Q$return/, @@cmp_lst);
                    unless ($#match < 0) {
                        $l = length($test = shift(@@match));
                        foreach $cmp (@@match) {
                            until (substr($cmp, 0, $l) eq substr($test, 0, $l)) {
                                $l--;
                            }
                        }
                        print("\a");
                        print($test = substr($test, $r, $l - $r));
                        $r = length($return .= $test);
                    }
                    last CASE;
                };

                # (^D) completion list
                $_ eq $complete && do {
                    print(join("\r\n", '', grep(/^\Q$return/, @@cmp_lst)), "\r\n");
                    redo LOOP;
                };

                # (^U) kill
                $_ eq $kill && do {
                    if ($r) {
                        $r	= 0;
			$return	= "";
                        print("\r\n");
                        redo LOOP;
                    }
                    last CASE;
                };

                # (DEL) || (BS) erase
                ($_ eq $erase1 || $_ eq $erase2) && do {
                    if($r) {
                        print("\b \b");
                        chop($return);
                        $r--;
                    }
                    last CASE;
                };

                # printable char
                ord >= 32 && do {
                    $return .= $_;
                    $r++;
                    print;
                    last CASE;
                };
            }
        }
    }

    # system $tty_restore if defined $tty_restore;
    if (defined $tty_saved_state && defined $tty_restore && defined $tty_safe_restore)
    {
	system $tty_restore;
	if ($?) {
	    # tty_restore caused error
	    system $tty_safe_restore;
	}
    }
    print("\n");
    $return;
}

1;
@


1.6
log
@merge in perl 5.8.8
@
text
@@


1.5
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d8 1
a8 1
our $VERSION = '1.401';
d116 1
@


1.4
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d8 1
a8 1
our $VERSION = '1.4';
d69 1
a69 1
our($complete, $kill, $erase1, $erase2, $tty_raw_noecho, $tty_restore, $stty);
d80 1
d110 2
a111 1
	    $tty_restore = qq($stty "$tty_saved_state");
d173 10
a182 1
    system $tty_restore if defined $tty_restore;
a187 1

@


1.3
log
@perl5.005_03 (stock)
@
text
@d5 4
a8 2
@@ISA = qw(Exporter);
@@EXPORT = qw(Complete);
d26 2
a27 2
The tty driver is put into raw mode using the system command
C<stty raw -echo> and restored using C<stty -raw echo>.
d69 2
d76 8
d87 1
a87 1
    my($prompt, @@cmp_list, $cmp, $test, $l, @@match);
d101 12
a112 1
    system('stty raw -echo');
d119 1
a119 1
                    @@match = grep(/^$return/, @@cmp_lst);
d136 1
a136 1
                    print(join("\r\n", '', grep(/^$return/, @@cmp_lst)), "\r\n");
d171 1
a171 1
    system('stty -raw echo');
@


1.2
log
@perl 5.004_04
@
text
@d8 1
a8 1
#      @@(#)complete.pl,v1.1            (me@@anywhere.EBay.Sun.COM) 09/23/91
d16 2
a17 2
    $input = complete('prompt_string', \@@completion_list);
    $input = complete('prompt_string', @@completion_list);
d59 1
a59 1
The completion charater E<lt>tabE<gt> cannot be changed.
d75 5
a79 1
    my($prompt, @@cmp_list, $return, @@match, $l, $test, $cmp, $r);
a96 1
                    $l = length($test = shift(@@match));
d98 1
d105 2
a107 2
                    print($test = substr($test, $r, $l - $r));
                    $r = length($return .= $test);
d120 2
a121 2
                        undef $r;
			undef $return;
@


1.1
log
@Initial revision
@
text
@d31 2
a32 1
=item <tab>
d46 1
a46 1
=item <del>, <bs>
d59 1
a59 1
The completion charater <tab> cannot be changed.
d75 2
d116 2
a117 1
                        undef($r, $return);
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d8 1
a8 1
#      @@(#)complete.pl,v1.2            (me@@anywhere.EBay.Sun.COM) 09/23/91
d16 2
a17 2
    $input = Complete('prompt_string', \@@completion_list);
    $input = Complete('prompt_string', @@completion_list);
d31 1
a31 2
=item E<lt>tabE<gt>

d45 1
a45 1
=item E<lt>delE<gt>, E<lt>bsE<gt>
d58 1
a58 1
The completion character E<lt>tabE<gt> cannot be changed.
a73 6
    my($prompt, @@cmp_list, $cmp, $test, $l, @@match);
    my ($return, $r) = ("", 0);

    $return = "";
    $r      = 0;

d90 1
a91 1
                        $l = length($test = shift(@@match));
a97 2
                        print($test = substr($test, $r, $l - $r));
                        $r = length($return .= $test);
d99 2
d113 1
a113 2
                        $r	= 0;
			$return	= "";
@


1.1.1.3
log
@stock perl 5.8.0 from CPAN
@
text
@d5 2
a6 4
use strict;
our @@ISA = qw(Exporter);
our @@EXPORT = qw(Complete);
our $VERSION = '1.4';
d24 2
a25 2
The tty driver is put into raw mode and restored using an operating
system specific command, in UNIX-like environments C<stty>.
a66 2
our($complete, $kill, $erase1, $erase2, $tty_raw_noecho, $tty_restore, $stty);
our($tty_saved_state) = '';
a71 8
    foreach my $s (qw(/bin/stty /usr/bin/stty)) {
	if (-x $s) {
	    $tty_raw_noecho = "$s raw -echo";
	    $tty_restore    = "$s -raw echo";
	    $stty = $s;
	    last;
	}
    }
d75 1
a75 1
    my($prompt, @@cmp_lst, $cmp, $test, $l, @@match);
d89 1
a89 12
    # Attempt to save the current stty state, to be restored later
    if (defined $stty && defined $tty_saved_state && $tty_saved_state eq '') {
	$tty_saved_state = qx($stty -g 2>/dev/null);
	if ($?) {
	    # stty -g not supported
	    $tty_saved_state = undef;
	}
	else {
	    $tty_restore = qq($stty "$tty_saved_state");
	}
    }
    system $tty_raw_noecho if defined $tty_raw_noecho;
d96 1
a96 1
                    @@match = grep(/^\Q$return/, @@cmp_lst);
d113 1
a113 1
                    print(join("\r\n", '', grep(/^\Q$return/, @@cmp_lst)), "\r\n");
d148 1
a148 1
    system $tty_restore if defined $tty_restore;
@


1.1.1.4
log
@perl 5.8.2 from CPAN
@
text
@d8 1
a8 1
our $VERSION = '1.401';
d69 1
a69 1
our($complete, $kill, $erase1, $erase2, $tty_raw_noecho, $tty_restore, $stty, $tty_safe_restore);
a79 1
	    $tty_safe_restore = $tty_restore;
d109 1
a109 2
	    $tty_saved_state =~ s/\s+$//g;
	    $tty_restore = qq($stty "$tty_saved_state" 2>/dev/null);
d171 1
a171 10

    # system $tty_restore if defined $tty_restore;
    if (defined $tty_saved_state && defined $tty_restore && defined $tty_safe_restore)
    {
	system $tty_restore;
	if ($?) {
	    # tty_restore caused error
	    system $tty_safe_restore;
	}
    }
d177 1
@


1.1.1.5
log
@perl 5.8.8 import
@
text
@d8 1
a8 1
our $VERSION = '1.402';
a115 1
        local $_;
@


