head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.2.0.8
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.4
	OPENBSD_4_7_BASE:1.1.1.2
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.6
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.2
	OPENBSD_4_5_BASE:1.1.1.2
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.1.1.1.0.10
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.8
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.6
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.4
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.2
	OPENBSD_4_0_BASE:1.1.1.1
	PERL_5_8_8:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.37;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2006.03.28.18.48.41;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.03.28.18.48.41;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.09.29.17.18.32;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!perl -w

use Test qw(plan ok);
plan tests => 5;

{
   package Digest::Foo;
   require Digest::base;
   use vars qw(@@ISA $VERSION);
   @@ISA = qw(Digest::base);

   sub new {
	my $class = shift;
	my $str = "";
	bless \$str, $class;
   }

   sub add {
	my $self = shift;
	$$self .= join("", @@_);
	return $self;
   }

   sub digest {
	my $self = shift;
	return sprintf "%04d", length($$self);
   }
}

use Digest::file qw(digest_file digest_file_hex digest_file_base64);

my $file = "test-$$";
die if -f $file;
open(F, ">$file") || die "Can't create '$file': $!";
binmode(F);
print F "foo\0\n";
close(F) || die "Can't write '$file': $!";

ok(digest_file($file, "Foo"), "0005");
ok(digest_file_hex($file, "Foo"), "30303035");
ok(digest_file_base64($file, "Foo"), "MDAwNQ");

unlink($file) || warn "Can't unlink '$file': $!";

ok(eval { digest_file("not-there.txt", "Foo") }, undef);
ok($@@);
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl 5.8.8 import
@
text
@@


1.1.1.2
log
@import perl 5.10.0 from CPAN
@
text
@d40 2
a41 8

if (ord('A') == 193) { # EBCDIC.
    ok(digest_file_hex($file, "Foo"), "f0f0f0f5");
    ok(digest_file_base64($file, "Foo"), "8PDw9Q");
} else {
    ok(digest_file_hex($file, "Foo"), "30303035");
    ok(digest_file_base64($file, "Foo"), "MDAwNQ");
}
@

