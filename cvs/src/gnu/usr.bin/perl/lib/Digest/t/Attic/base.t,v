head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.2.0.8
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.4
	OPENBSD_4_7_BASE:1.1.1.2
	PERL_5_10_1:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.6
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.2
	OPENBSD_4_5_BASE:1.1.1.2
	PERL_5_10_0:1.1.1.2
	OPENBSD_4_4:1.1.1.1.0.18
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.16
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.14
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.12
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.10
	OPENBSD_4_0_BASE:1.1.1.1
	PERL_5_8_8:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.8
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.6
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.4
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.37;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2004.04.07.21.13.16;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.04.07.21.13.16;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.09.29.17.18.32;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!perl -w

use Test qw(plan ok);
plan tests => 12;

{
   package LenDigest;
   require Digest::base;
   use vars qw(@@ISA);
   @@ISA = qw(Digest::base);

   sub new {
	my $class = shift;
	my $str = "";
	bless \$str, $class;
   }

   sub add {
	my $self = shift;
	$$self .= join("", @@_);
	return $self;
   }

   sub digest {
	my $self = shift;
	my $len = length($$self);
	my $first = ($len > 0) ? substr($$self, 0, 1) : "X";
	$$self = "";
	return sprintf "$first%04d", $len;
   }
}

my $ctx = LenDigest->new;
ok($ctx->digest, "X0000");
ok($ctx->hexdigest, "5830303030");
ok($ctx->b64digest, "WDAwMDA");

$ctx->add("foo");
ok($ctx->digest, "f0003");

$ctx->add("foo");
ok($ctx->hexdigest, "6630303033");

$ctx->add("foo");
ok($ctx->b64digest, "ZjAwMDM");

open(F, ">xxtest$$") || die;
binmode(F);
print F "abc" x 100, "\n";
close(F) || die;

open(F, "xxtest$$") || die;
$ctx->addfile(*F);
close(F);
unlink("xxtest$$") || warn;

ok($ctx->digest, "a0301");

eval {
    $ctx->add_bits("1010");
};
ok($@@ =~ /^Number of bits must be multiple of 8/);

$ctx->add_bits("01010101");
ok($ctx->digest, "U0001");

eval {
    $ctx->add_bits("abc", 12);
};
ok($@@ =~ /^Number of bits must be multiple of 8/);

$ctx->add_bits("abc", 16);
ok($ctx->digest, "a0002");

$ctx->add_bits("abc", 32);
ok($ctx->digest, "a0003");
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl 5.8.3 from CPAN
@
text
@@


1.1.1.2
log
@import perl 5.10.0 from CPAN
@
text
@d35 2
a36 10

my $EBCDIC = ord('A') == 193;

if ($EBCDIC) {
    ok($ctx->hexdigest, "e7f0f0f0f0");
    ok($ctx->b64digest, "5/Dw8PA");
} else {
    ok($ctx->hexdigest, "5830303030");
    ok($ctx->b64digest, "WDAwMDA");
}
d42 1
a42 1
ok($ctx->hexdigest, $EBCDIC ? "86f0f0f0f3" : "6630303033");
d45 1
a45 1
ok($ctx->b64digest, $EBCDIC ? "hvDw8PM" : "ZjAwMDM");
d64 1
a64 1
$ctx->add_bits($EBCDIC ? "11100100" : "01010101");
@

