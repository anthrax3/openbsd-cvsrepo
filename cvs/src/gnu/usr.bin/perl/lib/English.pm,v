head	1.13;
access;
symbols
	PERL_5_24_2:1.1.1.12
	OPENBSD_6_1:1.13.0.4
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.12.0.10
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.4
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.6
	OPENBSD_5_8_BASE:1.12
	PERL_5_20_2:1.1.1.11
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	PERL_5_20_1:1.1.1.11
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	PERL_5_18_2:1.1.1.10
	PERL:1.1.1
	OPENBSD_5_5:1.10.0.6
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	PERL_5_16_3:1.1.1.9
	OPENBSD_5_3:1.9.0.18
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.16
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.14
	OPENBSD_5_0:1.9.0.12
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.10
	OPENBSD_4_9_BASE:1.9
	PERL_5_12_2:1.1.1.8
	OPENBSD_4_8:1.9.0.8
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.4
	OPENBSD_4_7_BASE:1.9
	PERL_5_10_1:1.1.1.8
	OPENBSD_4_6:1.9.0.6
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.2
	OPENBSD_4_5_BASE:1.9
	PERL_5_10_0:1.1.1.8
	OPENBSD_4_4:1.8.0.10
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.8
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.6
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	PERL_5_8_8:1.1.1.7
	OPENBSD_3_9:1.7.0.10
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	PERL_5_8_6:1.1.1.6
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	PERL_5_8_5:1.1.1.6
	PERL_5_8_3:1.1.1.6
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	PERL_5_8_2:1.1.1.6
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	PERL_5_8_0:1.1.1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	PERL_5_6_1:1.1.1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.13
date	2017.02.05.00.32.15;	author afresh1;	state Exp;
branches;
next	1.12;
commitid	cxJ08BvJA9Pt2PTM;

1.12
date	2014.11.17.20.57.06;	author afresh1;	state Exp;
branches;
next	1.11;
commitid	QP75iYx42Uo7mMxO;

1.11
date	2014.03.24.15.05.27;	author afresh1;	state Exp;
branches;
next	1.10;

1.10
date	2013.03.25.20.40.55;	author sthen;	state Exp;
branches;
next	1.9;

1.9
date	2008.09.29.17.36.09;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.28.19.23.05;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.03.03.02.35;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.27.22.25.25;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.24.18.35.23;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.06.04;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.51.44;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.56.41;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.12.30;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.12.30;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.39.46;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.09.35;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2001.05.24.18.23.17;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2002.10.27.22.14.58;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.12.03.02.43.58;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2006.03.28.18.48.35;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2008.09.29.17.18.29;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2013.03.25.20.08.52;	author sthen;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2014.03.24.14.59.03;	author afresh1;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2014.11.17.20.53.07;	author afresh1;	state Exp;
branches;
next	1.1.1.12;
commitid	B31cAbBIXiCqnL97;

1.1.1.12
date	2017.08.14.13.46.14;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.13
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@package English;

our $VERSION = '1.10';

require Exporter;
@@ISA = qw(Exporter);

=head1 NAME

English - use nice English (or awk) names for ugly punctuation variables

=head1 SYNOPSIS

    use English;
    use English qw( -no_match_vars ) ;  # Avoids regex performance
                                        # penalty in perl 5.16 and
                                        # earlier
    ...
    if ($ERRNO =~ /denied/) { ... }

=head1 DESCRIPTION

This module provides aliases for the built-in variables whose
names no one seems to like to read.  Variables with side-effects
which get triggered just by accessing them (like $0) will still 
be affected.

For those variables that have an B<awk> version, both long
and short English alternatives are provided.  For example, 
the C<$/> variable can be referred to either $RS or 
$INPUT_RECORD_SEPARATOR if you are using the English module.

See L<perlvar> for a complete list of these.

=head1 PERFORMANCE

NOTE: This was fixed in perl 5.20.  Mentioning these three variables no
longer makes a speed difference.  This section still applies if your code
is to run on perl 5.18 or earlier.

This module can provoke sizeable inefficiencies for regular expressions,
due to unfortunate implementation details.  If performance matters in
your application and you don't need $PREMATCH, $MATCH, or $POSTMATCH,
try doing

   use English qw( -no_match_vars ) ;

.  B<It is especially important to do this in modules to avoid penalizing
all applications which use them.>

=cut

no warnings;

my $globbed_match ;

# Grandfather $NAME import
sub import {
    my $this = shift;
    my @@list = grep { ! /^-no_match_vars$/ } @@_ ;
    local $Exporter::ExportLevel = 1;
    if ( @@_ == @@list ) {
        *EXPORT = \@@COMPLETE_EXPORT ;
        $globbed_match ||= (
	    eval q{
		*MATCH				= *&	;
		*PREMATCH			= *`	;
		*POSTMATCH			= *'	;
		1 ;
	       }
	    || do {
		require Carp ;
		Carp::croak("Can't create English for match leftovers: $@@") ;
	    }
	) ;
    }
    else {
        *EXPORT = \@@MINIMAL_EXPORT ;
    }
    Exporter::import($this,grep {s/^\$/*/} @@list);
}

@@MINIMAL_EXPORT = qw(
	*ARG
	*LAST_PAREN_MATCH
	*INPUT_LINE_NUMBER
	*NR
	*INPUT_RECORD_SEPARATOR
	*RS
	*OUTPUT_AUTOFLUSH
	*OUTPUT_FIELD_SEPARATOR
	*OFS
	*OUTPUT_RECORD_SEPARATOR
	*ORS
	*LIST_SEPARATOR
	*SUBSCRIPT_SEPARATOR
	*SUBSEP
	*FORMAT_PAGE_NUMBER
	*FORMAT_LINES_PER_PAGE
	*FORMAT_LINES_LEFT
	*FORMAT_NAME
	*FORMAT_TOP_NAME
	*FORMAT_LINE_BREAK_CHARACTERS
	*FORMAT_FORMFEED
	*CHILD_ERROR
	*OS_ERROR
	*ERRNO
	*EXTENDED_OS_ERROR
	*EVAL_ERROR
	*PROCESS_ID
	*PID
	*REAL_USER_ID
	*UID
	*EFFECTIVE_USER_ID
	*EUID
	*REAL_GROUP_ID
	*GID
	*EFFECTIVE_GROUP_ID
	*EGID
	*PROGRAM_NAME
	*PERL_VERSION
	*OLD_PERL_VERSION
	*ACCUMULATOR
	*COMPILING
	*DEBUGGING
	*SYSTEM_FD_MAX
	*INPLACE_EDIT
	*PERLDB
	*BASETIME
	*WARNING
	*EXECUTABLE_NAME
	*OSNAME
	*LAST_REGEXP_CODE_RESULT
	*EXCEPTIONS_BEING_CAUGHT
	*LAST_SUBMATCH_RESULT
	@@LAST_MATCH_START
	@@LAST_MATCH_END
);


@@MATCH_EXPORT = qw(
	*MATCH
	*PREMATCH
	*POSTMATCH
);

@@COMPLETE_EXPORT = ( @@MINIMAL_EXPORT, @@MATCH_EXPORT ) ;

# The ground of all being.

	*ARG					= *_	;

# Matching.

	*LAST_PAREN_MATCH			= *+	;
	*LAST_SUBMATCH_RESULT			= *^N ;
	*LAST_MATCH_START			= *-{ARRAY} ;
	*LAST_MATCH_END				= *+{ARRAY} ;

# Input.

	*INPUT_LINE_NUMBER			= *.	;
	    *NR					= *.	;
	*INPUT_RECORD_SEPARATOR			= */	;
	    *RS					= */	;

# Output.

	*OUTPUT_AUTOFLUSH			= *|	;
	*OUTPUT_FIELD_SEPARATOR			= *,	;
	    *OFS				= *,	;
	*OUTPUT_RECORD_SEPARATOR		= *\	;
	    *ORS				= *\	;

# Interpolation "constants".

	*LIST_SEPARATOR				= *"	;
	*SUBSCRIPT_SEPARATOR			= *;	;
	    *SUBSEP				= *;	;

# Formats

	*FORMAT_PAGE_NUMBER			= *%	;
	*FORMAT_LINES_PER_PAGE			= *=	;
	*FORMAT_LINES_LEFT			= *-{SCALAR}	;
	*FORMAT_NAME				= *~	;
	*FORMAT_TOP_NAME			= *^	;
	*FORMAT_LINE_BREAK_CHARACTERS		= *:	;
	*FORMAT_FORMFEED			= *^L	;

# Error status.

	*CHILD_ERROR				= *?	;
	*OS_ERROR				= *!	;
	    *ERRNO				= *!	;
	*OS_ERROR				= *!	;
	    *ERRNO				= *!	;
	*EXTENDED_OS_ERROR			= *^E	;
	*EVAL_ERROR				= *@@	;

# Process info.

	*PROCESS_ID				= *$	;
	    *PID				= *$	;
	*REAL_USER_ID				= *<	;
	    *UID				= *<	;
	*EFFECTIVE_USER_ID			= *>	;
	    *EUID				= *>	;
	*REAL_GROUP_ID				= *(	;
	    *GID				= *(	;
	*EFFECTIVE_GROUP_ID			= *)	;
	    *EGID				= *)	;
	*PROGRAM_NAME				= *0	;

# Internals.

	*PERL_VERSION				= *^V	;
	*OLD_PERL_VERSION			= *]	;
	*ACCUMULATOR				= *^A	;
	*COMPILING				= *^C	;
	*DEBUGGING				= *^D	;
	*SYSTEM_FD_MAX				= *^F	;
	*INPLACE_EDIT				= *^I	;
	*PERLDB					= *^P	;
	*LAST_REGEXP_CODE_RESULT		= *^R	;
	*EXCEPTIONS_BEING_CAUGHT		= *^S	;
	*BASETIME				= *^T	;
	*WARNING				= *^W	;
	*EXECUTABLE_NAME			= *^X	;
	*OSNAME					= *^O	;

# Deprecated.

#	*ARRAY_BASE				= *[	;
#	*OFMT					= *#	;

1;
@


1.12
log
@Fix merge conflicts, remove extra files, match upstream perl-5.20.1

ok deraadt@@ sthen@@ espie@@ miod@@
@
text
@d3 1
a3 1
our $VERSION = '1.09';
d185 1
a185 1
	*FORMAT_LINES_LEFT			= *-	;
@


1.11
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@d3 1
a3 1
our $VERSION = '1.06_01';
d15 3
a17 2
    use English qw( -no_match_vars ) ;  # Avoids regex performance penalty
                                        # in perl 5.16 and earlier
d122 1
d218 1
a235 1
#	*OLD_PERL_VERSION			= *]	;
@


1.10
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d3 1
a3 1
our $VERSION = '1.05';
d14 1
d16 1
a16 1
    use English;
d35 4
@


1.9
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d3 1
a3 1
our $VERSION = '1.04';
d142 1
a142 1
# The ground of all being. @@ARG is deprecated (5.005 makes @@_ lexical)
@


1.8
log
@merge in perl 5.8.8
@
text
@d3 1
a3 1
our $VERSION = '1.02';
d6 1
a6 1
@@ISA = (Exporter);
d67 1
a67 1
		Carp::croak "Can't create English for match leftovers: $@@" ;
a227 1
#	*MULTILINE_MATCHING			= **	;
@


1.7
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@d3 1
a3 1
our $VERSION = '1.01';
d117 1
@


1.6
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d3 1
a3 1
our $VERSION = '1.00';
d60 3
a62 3
		*MATCH				= \$&	;
		*PREMATCH				= \$`	;
		*POSTMATCH				= \$'	;
d147 4
a150 4
	*LAST_PAREN_MATCH			= \$+	;
	*LAST_SUBMATCH_RESULT			= \$^N ;
	*LAST_MATCH_START			= \@@- ;
	*LAST_MATCH_END				= \@@+ ;
d154 4
a157 4
	*INPUT_LINE_NUMBER			= \$.	;
	    *NR					= \$.	;
	*INPUT_RECORD_SEPARATOR			= \$/	;
	    *RS					= \$/	;
d161 5
a165 5
	*OUTPUT_AUTOFLUSH			= \$|	;
	*OUTPUT_FIELD_SEPARATOR			= \$,	;
	    *OFS				= \$,	;
	*OUTPUT_RECORD_SEPARATOR		= \$\	;
	    *ORS				= \$\	;
d169 3
a171 3
	*LIST_SEPARATOR				= \$"	;
	*SUBSCRIPT_SEPARATOR			= \$;	;
	    *SUBSEP				= \$;	;
d175 7
a181 7
	*FORMAT_PAGE_NUMBER			= \$%	;
	*FORMAT_LINES_PER_PAGE			= \$=	;
	*FORMAT_LINES_LEFT			= \$-	;
	*FORMAT_NAME				= \$~	;
	*FORMAT_TOP_NAME			= \$^	;
	*FORMAT_LINE_BREAK_CHARACTERS		= \$:	;
	*FORMAT_FORMFEED			= \$^L	;
d185 7
a191 7
	*CHILD_ERROR				= \$?	;
	*OS_ERROR				= \$!	;
	    *ERRNO				= \$!	;
	*OS_ERROR				= \%!	;
	    *ERRNO				= \%!	;
	*EXTENDED_OS_ERROR			= \$^E	;
	*EVAL_ERROR				= \$@@	;
d195 11
a205 11
	*PROCESS_ID				= \$$	;
	    *PID				= \$$	;
	*REAL_USER_ID				= \$<	;
	    *UID				= \$<	;
	*EFFECTIVE_USER_ID			= \$>	;
	    *EUID				= \$>	;
	*REAL_GROUP_ID				= \$(	;
	    *GID				= \$(	;
	*EFFECTIVE_GROUP_ID			= \$)	;
	    *EGID				= \$)	;
	*PROGRAM_NAME				= \$0	;
d209 13
a221 13
	*PERL_VERSION				= \$^V	;
	*ACCUMULATOR				= \$^A	;
	*COMPILING				= \$^C	;
	*DEBUGGING				= \$^D	;
	*SYSTEM_FD_MAX				= \$^F	;
	*INPLACE_EDIT				= \$^I	;
	*PERLDB					= \$^P	;
	*LAST_REGEXP_CODE_RESULT		= \$^R	;
	*EXCEPTIONS_BEING_CAUGHT		= \$^S	;
	*BASETIME				= \$^T	;
	*WARNING				= \$^W	;
	*EXECUTABLE_NAME			= \$^X	;
	*OSNAME					= \$^O	;
d225 4
a228 4
#	*ARRAY_BASE				= \$[	;
#	*OFMT					= \$#	;
#	*MULTILINE_MATCHING			= \$*	;
#	*OLD_PERL_VERSION			= \$]	;
@


1.5
log
@merge in perl 5.6.1 with our local changes
@
text
@d3 2
d14 1
d33 6
a38 1
=head1 BUGS
d40 4
a43 3
This module provokes sizeable inefficiencies for regular expressions,
due to unfortunate implementation details.  If performance matters,
consider avoiding English.
d49 2
d54 1
a54 1
    my @@list = @@_;
d56 18
d77 1
a77 1
@@EXPORT = qw(
a78 3
	*MATCH
	*PREMATCH
	*POSTMATCH
d127 1
d132 9
d147 4
a150 6
	*MATCH					= *&	;
	*PREMATCH				= *`	;
	*POSTMATCH				= *'	;
	*LAST_PAREN_MATCH			= *+	;
	*LAST_MATCH_START			= *-{ARRAY} ;
	*LAST_MATCH_END				= *+{ARRAY} ;
d154 4
a157 4
	*INPUT_LINE_NUMBER			= *.	;
	    *NR					= *.	;
	*INPUT_RECORD_SEPARATOR			= */	;
	    *RS					= */	;
d161 5
a165 5
	*OUTPUT_AUTOFLUSH			= *|	;
	*OUTPUT_FIELD_SEPARATOR			= *,	;
	    *OFS				= *,	;
	*OUTPUT_RECORD_SEPARATOR		= *\	;
	    *ORS				= *\	;
d169 3
a171 3
	*LIST_SEPARATOR				= *"	;
	*SUBSCRIPT_SEPARATOR			= *;	;
	    *SUBSEP				= *;	;
d175 7
a181 7
	*FORMAT_PAGE_NUMBER			= *%	;
	*FORMAT_LINES_PER_PAGE			= *=	;
	*FORMAT_LINES_LEFT			= *-	;
	*FORMAT_NAME				= *~	;
	*FORMAT_TOP_NAME			= *^	;
	*FORMAT_LINE_BREAK_CHARACTERS		= *:	;
	*FORMAT_FORMFEED			= *^L	;
d185 7
a191 5
	*CHILD_ERROR				= *?	;
	*OS_ERROR				= *!	;
	    *ERRNO				= *!	;
	*EXTENDED_OS_ERROR			= *^E	;
	*EVAL_ERROR				= *@@	;
d195 11
a205 11
	*PROCESS_ID				= *$	;
	    *PID				= *$	;
	*REAL_USER_ID				= *<	;
	    *UID				= *<	;
	*EFFECTIVE_USER_ID			= *>	;
	    *EUID				= *>	;
	*REAL_GROUP_ID				= *(	;
	    *GID				= *(	;
	*EFFECTIVE_GROUP_ID			= *)	;
	    *EGID				= *)	;
	*PROGRAM_NAME				= *0	;
d209 13
a221 13
	*PERL_VERSION				= *^V	;
	*ACCUMULATOR				= *^A	;
	*COMPILING				= *^C	;
	*DEBUGGING				= *^D	;
	*SYSTEM_FD_MAX				= *^F	;
	*INPLACE_EDIT				= *^I	;
	*PERLDB					= *^P	;
	*LAST_REGEXP_CODE_RESULT		= *^R	;
	*EXCEPTIONS_BEING_CAUGHT		= *^S	;
	*BASETIME				= *^T	;
	*WARNING				= *^W	;
	*EXECUTABLE_NAME			= *^X	;
	*OSNAME					= *^O	;
d225 4
a228 4
#	*ARRAY_BASE				= *[	;
#	*OFMT					= *#	;
#	*MULTILINE_MATCHING			= **	;
#	*OLD_PERL_VERSION			= *]	;
@


1.4
log
@perl-5.6.0 + local changes
@
text
@d101 2
d115 2
@


1.3
log
@perl5.005_03 (stock)
@
text
@a17 8
You should I<not> use this module in programs intended to be portable
among Perl versions, programs that must perform regular expression
matching operations efficiently, or libraries intended for use with
such programs.  In a sense, this module is deprecated.  The reasons
for this have to do with implementation details of the Perl
interpreter which are too thorny to go into here.  Perhaps someday
they will be fixed to make "C<use English>" more practical.

d30 6
d38 1
a38 1
local $^W = 0;
d99 2
d169 1
a169 1
	*PERL_VERSION				= *]	;
d176 2
d188 1
@


1.2
log
@perl 5.004_04
@
text
@d18 8
d171 1
@


1.1
log
@Initial revision
@
text
@d95 1
a95 1
# The ground of all being.
d141 1
a142 1
	    *ERRNO				= *!	;
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@a17 8
You should I<not> use this module in programs intended to be portable
among Perl versions, programs that must perform regular expression
matching operations efficiently, or libraries intended for use with
such programs.  In a sense, this module is deprecated.  The reasons
for this have to do with implementation details of the Perl
interpreter which are too thorny to go into here.  Perhaps someday
they will be fixed to make "C<use English>" more practical.

d95 1
a95 1
# The ground of all being. @@ARG is deprecated (5.005 makes @@_ lexical)
d141 1
a142 1
	*EXTENDED_OS_ERROR			= *^E	;
a162 1
	*COMPILING				= *^C	;
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d18 8
a37 6
=head1 BUGS

This module provokes sizeable inefficiencies for regular expressions,
due to unfortunate implementation details.  If performance matters,
consider avoiding English.

d40 1
a40 1
no warnings;
a100 2
	*LAST_REGEXP_CODE_RESULT
	*EXCEPTIONS_BEING_CAUGHT
d169 1
a169 1
	*PERL_VERSION				= *^V	;
a175 2
	*LAST_REGEXP_CODE_RESULT		= *^R	;
	*EXCEPTIONS_BEING_CAUGHT		= *^S	;
a185 1
#	*OLD_PERL_VERSION			= *]	;
@


1.1.1.4
log
@stock perl 5.6.1
@
text
@a100 2
	@@LAST_MATCH_START
	@@LAST_MATCH_END
a112 2
	*LAST_MATCH_START			= *-{ARRAY} ;
	*LAST_MATCH_END				= *+{ARRAY} ;
@


1.1.1.5
log
@stock perl 5.8.0 from CPAN
@
text
@a2 2
our $VERSION = '1.00';

a11 1
    use English qw( -no_match_vars ) ;  # Avoids regex performance penalty
d30 1
a30 6
=head1 PERFORMANCE

This module can provoke sizeable inefficiencies for regular expressions,
due to unfortunate implementation details.  If performance matters in
your application and you don't need $PREMATCH, $MATCH, or $POSTMATCH,
try doing
d32 3
a34 4
   use English qw( -no_match_vars ) ;

.  B<It is especially important to do this in modules to avoid penalizing
all applications which use them.>
a39 2
my $globbed_match ;

d43 1
a43 1
    my @@list = grep { ! /^-no_match_vars$/ } @@_ ;
a44 18
    if ( @@_ == @@list ) {
        *EXPORT = \@@COMPLETE_EXPORT ;
        $globbed_match ||= (
	    eval q{
		*MATCH				= \$&	;
		*PREMATCH				= \$`	;
		*POSTMATCH				= \$'	;
		1 ;
	       }
	    || do {
		require Carp ;
		Carp::croak "Can't create English for match leftovers: $@@" ;
	    }
	) ;
    }
    else {
        *EXPORT = \@@MINIMAL_EXPORT ;
    }
d48 1
a48 1
@@MINIMAL_EXPORT = qw(
d50 3
a100 1
	*LAST_SUBMATCH_RESULT
a104 9

@@MATCH_EXPORT = qw(
	*MATCH
	*PREMATCH
	*POSTMATCH
);

@@COMPLETE_EXPORT = ( @@MINIMAL_EXPORT, @@MATCH_EXPORT ) ;

d111 6
a116 4
	*LAST_PAREN_MATCH			= \$+	;
	*LAST_SUBMATCH_RESULT			= \$^N ;
	*LAST_MATCH_START			= \@@- ;
	*LAST_MATCH_END				= \@@+ ;
d120 4
a123 4
	*INPUT_LINE_NUMBER			= \$.	;
	    *NR					= \$.	;
	*INPUT_RECORD_SEPARATOR			= \$/	;
	    *RS					= \$/	;
d127 5
a131 5
	*OUTPUT_AUTOFLUSH			= \$|	;
	*OUTPUT_FIELD_SEPARATOR			= \$,	;
	    *OFS				= \$,	;
	*OUTPUT_RECORD_SEPARATOR		= \$\	;
	    *ORS				= \$\	;
d135 3
a137 3
	*LIST_SEPARATOR				= \$"	;
	*SUBSCRIPT_SEPARATOR			= \$;	;
	    *SUBSEP				= \$;	;
d141 7
a147 7
	*FORMAT_PAGE_NUMBER			= \$%	;
	*FORMAT_LINES_PER_PAGE			= \$=	;
	*FORMAT_LINES_LEFT			= \$-	;
	*FORMAT_NAME				= \$~	;
	*FORMAT_TOP_NAME			= \$^	;
	*FORMAT_LINE_BREAK_CHARACTERS		= \$:	;
	*FORMAT_FORMFEED			= \$^L	;
d151 5
a155 7
	*CHILD_ERROR				= \$?	;
	*OS_ERROR				= \$!	;
	    *ERRNO				= \$!	;
	*OS_ERROR				= \%!	;
	    *ERRNO				= \%!	;
	*EXTENDED_OS_ERROR			= \$^E	;
	*EVAL_ERROR				= \$@@	;
d159 11
a169 11
	*PROCESS_ID				= \$$	;
	    *PID				= \$$	;
	*REAL_USER_ID				= \$<	;
	    *UID				= \$<	;
	*EFFECTIVE_USER_ID			= \$>	;
	    *EUID				= \$>	;
	*REAL_GROUP_ID				= \$(	;
	    *GID				= \$(	;
	*EFFECTIVE_GROUP_ID			= \$)	;
	    *EGID				= \$)	;
	*PROGRAM_NAME				= \$0	;
d173 13
a185 13
	*PERL_VERSION				= \$^V	;
	*ACCUMULATOR				= \$^A	;
	*COMPILING				= \$^C	;
	*DEBUGGING				= \$^D	;
	*SYSTEM_FD_MAX				= \$^F	;
	*INPLACE_EDIT				= \$^I	;
	*PERLDB					= \$^P	;
	*LAST_REGEXP_CODE_RESULT		= \$^R	;
	*EXCEPTIONS_BEING_CAUGHT		= \$^S	;
	*BASETIME				= \$^T	;
	*WARNING				= \$^W	;
	*EXECUTABLE_NAME			= \$^X	;
	*OSNAME					= \$^O	;
d189 4
a192 4
#	*ARRAY_BASE				= \$[	;
#	*OFMT					= \$#	;
#	*MULTILINE_MATCHING			= \$*	;
#	*OLD_PERL_VERSION			= \$]	;
@


1.1.1.6
log
@perl 5.8.2 from CPAN
@
text
@d3 1
a3 1
our $VERSION = '1.01';
d60 3
a62 3
		*MATCH				= *&	;
		*PREMATCH			= *`	;
		*POSTMATCH			= *'	;
d147 4
a150 4
	*LAST_PAREN_MATCH			= *+	;
	*LAST_SUBMATCH_RESULT			= *^N ;
	*LAST_MATCH_START			= *-{ARRAY} ;
	*LAST_MATCH_END				= *+{ARRAY} ;
d154 4
a157 4
	*INPUT_LINE_NUMBER			= *.	;
	    *NR					= *.	;
	*INPUT_RECORD_SEPARATOR			= */	;
	    *RS					= */	;
d161 5
a165 5
	*OUTPUT_AUTOFLUSH			= *|	;
	*OUTPUT_FIELD_SEPARATOR			= *,	;
	    *OFS				= *,	;
	*OUTPUT_RECORD_SEPARATOR		= *\	;
	    *ORS				= *\	;
d169 3
a171 3
	*LIST_SEPARATOR				= *"	;
	*SUBSCRIPT_SEPARATOR			= *;	;
	    *SUBSEP				= *;	;
d175 7
a181 7
	*FORMAT_PAGE_NUMBER			= *%	;
	*FORMAT_LINES_PER_PAGE			= *=	;
	*FORMAT_LINES_LEFT			= *-	;
	*FORMAT_NAME				= *~	;
	*FORMAT_TOP_NAME			= *^	;
	*FORMAT_LINE_BREAK_CHARACTERS		= *:	;
	*FORMAT_FORMFEED			= *^L	;
d185 7
a191 7
	*CHILD_ERROR				= *?	;
	*OS_ERROR				= *!	;
	    *ERRNO				= *!	;
	*OS_ERROR				= *!	;
	    *ERRNO				= *!	;
	*EXTENDED_OS_ERROR			= *^E	;
	*EVAL_ERROR				= *@@	;
d195 11
a205 11
	*PROCESS_ID				= *$	;
	    *PID				= *$	;
	*REAL_USER_ID				= *<	;
	    *UID				= *<	;
	*EFFECTIVE_USER_ID			= *>	;
	    *EUID				= *>	;
	*REAL_GROUP_ID				= *(	;
	    *GID				= *(	;
	*EFFECTIVE_GROUP_ID			= *)	;
	    *EGID				= *)	;
	*PROGRAM_NAME				= *0	;
d209 13
a221 13
	*PERL_VERSION				= *^V	;
	*ACCUMULATOR				= *^A	;
	*COMPILING				= *^C	;
	*DEBUGGING				= *^D	;
	*SYSTEM_FD_MAX				= *^F	;
	*INPLACE_EDIT				= *^I	;
	*PERLDB					= *^P	;
	*LAST_REGEXP_CODE_RESULT		= *^R	;
	*EXCEPTIONS_BEING_CAUGHT		= *^S	;
	*BASETIME				= *^T	;
	*WARNING				= *^W	;
	*EXECUTABLE_NAME			= *^X	;
	*OSNAME					= *^O	;
d225 4
a228 4
#	*ARRAY_BASE				= *[	;
#	*OFMT					= *#	;
#	*MULTILINE_MATCHING			= **	;
#	*OLD_PERL_VERSION			= *]	;
@


1.1.1.7
log
@perl 5.8.8 import
@
text
@d3 1
a3 1
our $VERSION = '1.02';
a116 1
	*COMPILING
@


1.1.1.8
log
@import perl 5.10.0 from CPAN
@
text
@d3 1
a3 1
our $VERSION = '1.04';
d6 1
a6 1
@@ISA = qw(Exporter);
d67 1
a67 1
		Carp::croak("Can't create English for match leftovers: $@@") ;
d228 1
@


1.1.1.9
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d3 1
a3 1
our $VERSION = '1.05';
d142 1
a142 1
# The ground of all being.
@


1.1.1.10
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d3 1
a3 1
our $VERSION = '1.06_01';
d14 1
a15 2
    use English qw( -no_match_vars ) ;  # Avoids regex performance penalty
                                        # in perl 5.16 and earlier
a33 4

NOTE: This was fixed in perl 5.20.  Mentioning these three variables no
longer makes a speed difference.  This section still applies if your code
is to run on perl 5.18 or earlier.
@


1.1.1.11
log
@Import perl-5.20.1
@
text
@d3 1
a3 1
our $VERSION = '1.09';
d15 2
a16 3
    use English qw( -no_match_vars ) ;  # Avoids regex performance
                                        # penalty in perl 5.16 and
                                        # earlier
a120 1
	*OLD_PERL_VERSION
a215 1
	*OLD_PERL_VERSION			= *]	;
d233 1
@


1.1.1.12
log
@Import perl-5.24.2
@
text
@d3 1
a3 1
our $VERSION = '1.10';
d185 1
a185 1
	*FORMAT_LINES_LEFT			= *-{SCALAR}	;
@


