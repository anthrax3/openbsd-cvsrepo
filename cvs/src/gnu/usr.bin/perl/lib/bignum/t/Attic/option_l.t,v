head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.3.0.8
	OPENBSD_4_8_BASE:1.1.1.3
	OPENBSD_4_7:1.1.1.3.0.4
	OPENBSD_4_7_BASE:1.1.1.3
	PERL_5_10_1:1.1.1.3
	OPENBSD_4_6:1.1.1.3.0.6
	OPENBSD_4_6_BASE:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.2
	OPENBSD_4_5_BASE:1.1.1.3
	PERL_5_10_0:1.1.1.3
	OPENBSD_4_4:1.1.1.2.0.10
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.8
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.6
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.4
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.2
	OPENBSD_4_0_BASE:1.1.1.2
	PERL_5_8_8:1.1.1.2
	OPENBSD_3_9:1.1.1.1.0.14
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.12
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.10
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.8
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.6
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	PERL_5_8_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2010.09.24.14.59.57;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2002.10.27.22.14.58;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.27.22.14.58;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.03.28.18.48.40;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.29.17.18.46;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!/usr/bin/perl -w

###############################################################################

use Test;
use strict;

BEGIN
  {
  $| = 1;
  chdir 't' if -d 't';
  unshift @@INC, '../lib';
  plan tests => 12;
  }

use bignum;

my $rc = eval ('bignum->import( "l" => "foo" );');
ok ($@@,'');						# shouldn't die
$rc = eval ('bignum->import( "lib" => "foo" );');
ok ($@@,'');						# ditto

$rc = eval ('bignum->import( "foo" => "bar" );');
ok ($@@ =~ /^Unknown option foo/i,1);			# should die

# test that options are only lowercase (don't see a reason why allow UPPER)

foreach (qw/L LIB Lib T Trace TRACE V Version VERSION/)
  {
  $rc = eval ('bignum->import( "$_" => "bar" );');
  ok ($@@ =~ /^Unknown option $_/i,1);			# should die
  }

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@stock perl 5.8.0 from CPAN
@
text
@@


1.1.1.2
log
@perl 5.8.8 import
@
text
@d3 3
a5 1
use Test::More;
d19 1
a19 1
is ($@@,'');						# shouldn't die
d21 1
a21 1
is ($@@,'');						# ditto
d24 1
a24 1
like ($@@, qr/^Unknown option foo/i, 'died');			# should die
d31 1
a31 1
  like ($@@, qr/^Unknown option $_/i, 'died');			# should die
@


1.1.1.3
log
@import perl 5.10.0 from CPAN
@
text
@a2 2
# test the "l", "lib", "try" and "only" options:

d11 1
a11 1
  plan tests => 19;
a15 8
my @@W;
{
# catch warnings:
require Carp;
no warnings 'redefine';
*Carp::carp = sub { push @@W, $_[0]; };
}

a17 3
is (scalar @@W, 1, 'one warning');
like ($W[0], qr/fallback to Math::/, 'got fallback');

a19 7
is (scalar @@W, 2, 'two warnings');
like ($W[1], qr/fallback to Math::/, 'got fallback');

$rc = eval ('bignum->import( "try" => "foo" );');
is ($@@,'');						# shouldn't die
$rc = eval ('bignum->import( "try" => "foo" );');
is ($@@,'');						# ditto
a22 3

$rc = eval ('bignum->import( "only" => "bar" );');
like ($@@, qr/fallback disallowed/i, 'died');			# should die
@


