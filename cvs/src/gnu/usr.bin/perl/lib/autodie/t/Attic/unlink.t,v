head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.56;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2009.10.12.18.11.07;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.12.18.11.07;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!/usr/bin/perl -w
use strict;
use Test::More;
use FindBin qw($Bin);
use constant TMPFILE => "$Bin/unlink_test_delete_me";

# Create a file to practice unlinking
open(my $fh, ">", TMPFILE)
	or plan skip_all => "Unable to create test file: $!";
print {$fh} "Test\n";
close $fh;

# Check that file now exists
-e TMPFILE or plan skip_all => "Failed to create test file";

# Check we can unlink
unlink TMPFILE;

# Check it's gone
if(-e TMPFILE) {plan skip_all => "Failed to delete test file: $!";}

# Re-create file
open(my $fh2, ">", TMPFILE)
	or plan skip_all => "Unable to create test file: $!";
print {$fh2} "Test\n";
close $fh2;

# Check that file now exists
-e TMPFILE or plan skip_all => "Failed to create test file";

plan tests => 6;

# Try to delete directory (this should succeed)
eval {
	use autodie;

	unlink TMPFILE;
};
is($@@, "", "Unlink appears to have been successful");
ok(! -e TMPFILE, "File does not exist");

# Try to delete file again (this should fail)
eval {
	use autodie;

	unlink TMPFILE;
};
ok($@@, "Re-unlinking file causes failure.");
isa_ok($@@, "autodie::exception", "... errors are of the correct type");
ok($@@->matches("unlink"), "... it's also a unlink object");
ok($@@->matches(":filesys"), "... and a filesys object");

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.10.1
@
text
@@
