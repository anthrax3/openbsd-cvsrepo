head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.1.0.28
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.24
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.26
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.22
	OPENBSD_4_5_BASE:1.1.1.1
	PERL_5_10_0:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.20
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.18
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.16
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.14
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.12
	OPENBSD_4_0_BASE:1.1.1.1
	PERL_5_8_8:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.10
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.8
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.6
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.09.24.14.59.40;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2003.12.03.02.44.04;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.12.03.02.44.04;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@#!./perl
use FileCache maxopen=>2;
use vars qw(@@files);
BEGIN {
    @@files = qw(foo bar baz quux Foo_Bar);
    chdir 't' if -d 't';

    #For tests within the perl distribution
    @@INC = '../lib' if -d '../lib';
    END;
}
END{
  1 while unlink @@files;
}

print "1..2\n";

{# Test 3: that we open for append on second viewing
     my @@cat;
     for my $path ( @@files ){
	 cacheout $path;
	 print $path "$path 3\n";
     }
     for my $path ( @@files ){
	 cacheout $path;
	 print $path "$path 33\n";
     }
     for my $path ( @@files ){
	 open($path, '<', $path);
	 push @@cat, do{ local $/; <$path>};
         close($path);
     }
     print 'not ' unless scalar grep(/\b3$/m, @@cat) == scalar @@files;
     print "ok 1\n";
     @@cat = ();
     for my $path ( @@files ){
	 cacheout $path;
	 print $path "$path 333\n";
     }
     for my $path ( @@files ){
	 open($path, '<', $path);
	 push @@cat, do{ local $/; <$path>};
         close($path);
     }
     print 'not ' unless scalar grep(/\b33$/m, @@cat) == scalar @@files;
     print "ok 2\n";
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@perl 5.8.2 from CPAN
@
text
@@
