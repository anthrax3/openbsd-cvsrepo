head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.6
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	PERL_5_10_0:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2010.09.24.14.59.57;	author millert;	state dead;
branches;
next	1.1;

1.1
date	2008.09.29.17.18.46;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.29.17.18.46;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove files no longer in perl 5.12.2 (or that have moved)
@
text
@use strict;
use Test;
BEGIN {
    use Config;
    if ($Config::Config{'extensions'} !~ /\bEncode\b/) {
      print "1..0 # Skip: Encode was not built\n";
      exit 0;
    }

    plan tests => 3;
}

{
    use encoding::warnings;
    ok(encoding::warnings->VERSION);

    if ($] < 5.009004) {
        ok('skipped');
        ok('skipped');
        exit;
    }

    my ($a, $b, $c, $warned);

    local $SIG{__WARN__} = sub {
        if ($_[0] =~ /upgraded/) { $warned = 1 }
    };

    utf8::encode($a = chr(20000));
    $b = chr(20000);
    $c = $a . $b;
    ok($warned);
}

{
    my ($a, $b, $c, $warned);

    local $SIG{__WARN__} = sub {
        if ($_[0] =~ /upgraded/) { $warned = 1 }
    };

    utf8::encode($a = chr(20000));
    $b = chr(20000);
    $c = $a . $b;
    ok(!$warned);
}


__END__
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import perl 5.10.0 from CPAN
@
text
@@
