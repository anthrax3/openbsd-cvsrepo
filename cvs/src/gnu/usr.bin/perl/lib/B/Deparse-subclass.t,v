head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.6
	OPENBSD_6_2_BASE:1.1
	PERL_5_24_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_6_1:1.1.0.4
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2017.02.05.00.32.15;	author afresh1;	state Exp;
branches
	1.1.1.1;
next	;
commitid	cxJ08BvJA9Pt2PTM;

1.1.1.1
date	2017.08.14.13.46.14;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.1
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@#!./perl

# These tests are not necessarily normative, but until such time as we
# publicise an API for subclassing B::Deparse they can prevent us from
# gratuitously breaking conventions that CPAN modules already use.

use Test::More tests => 2;

use B::Deparse;

package B::Deparse::NameMangler {
  @@ISA = "B::Deparse";
  sub padname { SUPER::padname{@@_} . '_groovy' }
}

my $nm = 'B::Deparse::NameMangler'->new;

like  $nm->coderef2text(sub { my($a, $b, $c) }),
      qr/\$a_groovy, \$b_groovy, \$c_groovy/,
     'overriding padname works for renaming lexicals';

like  $nm->coderef2text(sub { my $c; /(??{ $c })/; }),
      qr/\Q(??{\E \$c_groovy/,
     'overriding padname works for renaming lexicals in regexp blocks';
@


1.1.1.1
log
@Import perl-5.24.2
@
text
@@

