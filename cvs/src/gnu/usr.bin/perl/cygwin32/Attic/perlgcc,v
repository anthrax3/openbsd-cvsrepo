head	1.3;
access;
symbols
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	PERL_500503:1.1.1.1
	CPAN:1.1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2000.04.06.17.04.42;	author millert;	state dead;
branches;
next	1.2;

1.2
date	99.04.29.22.51.17;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.11.30.07.49.34;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.39.16;	author millert;	state Exp;
branches;
next	;


desc
@perl 5.004_04
@


1.3
log
@perl-5.6.0 + local changes
@
text
@#

# Perl script be a wrapper around the gnu gcc. the exportable perl.exe
#   is built, special processing is done.
# This script is caled by the gcc2 shell script when the flag
#   -buildperl is passed to gcc2

print "perlgcc: building exportable perl...\n";

# get all libs:
my @@libobs;
my @@obs;
my @@libFlags;
my $libstring;
foreach (@@ARGV){
	if( /\.[a]$/){
		push @@libobs,$_;
	}
	elsif(/^\-l/){
		push @@libFlags,$_;
	}
	if( /\.[o]$/){
		push @@obs,$_;
	}
}
$libstring = join(" ",@@libobs);	
$obsString = join(" ",@@obs);
$libflagString = join(" ",@@libFlags);

# make exports file
my $command = "echo EXPORTS > perl.def";
print "$command\n";
system($command) == 0 or die "system() failed.\n";

$command ="nm $libstring | grep '^........ [TCD] _'| grep -v _impure_ptr | sed 's/[^_]*_//' >> perl.def";
print "$command\n";
system($command) == 0 or die "system() failed.\n";

# Build the perl.a lib to link to:
$command ="dlltool --as=as --dllname perl.exe --def perl.def --output-lib perl.a";
print "$command\n";
system($command) == 0 or die "system() failed.\n";

# change name of export lib to libperlexp so that is can be understood by ld2/perlld
$command ="mv perl.a libperlexp.a";  
print "$command\n";
system($command) == 0 or die "system() failed.\n";

# get the full path name of a few libs:
my $crt0 = `gcc -print-file-name=crt0.o`;
chomp $crt0;
my $libdir = `gcc -print-file-name=libcygwin.a`;
chomp $libdir;
$libdir =~ s/libcygwin\.a//g;

# when $crt0 and $libdir get used in the system calls below, the \'s
# from the gcc -print-file-name get used to create special characters,
# such as \n, \t.  Replace the \'s with /'s so that this does not
# happen:
$crt0   =~ s:\\:/:g;
$libdir =~  s:\\:/:g;

# Link exe:
$command = "ld --base-file perl.base -o perl.exe $crt0 $obsString $libstring -L$libdir $libflagString";
print "$command\n";
system($command) == 0 or die "system() failed.\n";

$command = "dlltool --as=as --dllname perl.exe --def perl.def --base-file perl.base --output-exp perl.exp";
print "$command\n";
system($command) == 0 or die "system() failed.\n";

$command = "ld --base-file perl.base perl.exp -o perl.exe $crt0 $obsString $libstring -L$libdir $libflagString";
print "$command\n";
system($command) == 0 or die "system() failed.\n";

$command = "dlltool --as=as --dllname perl.exe --def perl.def --base-file perl.base --output-exp perl.exp";
print "$command\n";
system($command) == 0 or die "system() failed.\n";

$command = "ld perl.exp -o perl.exe $crt0 $obsString $libstring -L$libdir $libflagString";
print "$command\n";
system($command) == 0 or die "system() failed.\n";

print "perlgcc: Completed\n";
@


1.2
log
@perl5.005_03 (stock)
@
text
@@


1.1
log
@perl 5.004_04
@
text
@d33 1
a33 1
system($command);
d37 1
a37 1
system($command);
d42 1
a42 1
system($command); 
d47 1
a47 1
system($command);
d56 7
d66 1
a66 1
system($command);
d70 1
a70 1
system($command);
d74 1
a74 1
system($command);
d78 1
a78 1
system($command);
d82 1
a82 1
system($command);
@


1.1.1.1
log
@perl5.005_03
@
text
@d33 1
a33 1
system($command) == 0 or die "system() failed.\n";
d37 1
a37 1
system($command) == 0 or die "system() failed.\n";
d42 1
a42 1
system($command) == 0 or die "system() failed.\n";
d47 1
a47 1
system($command) == 0 or die "system() failed.\n";
a55 7
# when $crt0 and $libdir get used in the system calls below, the \'s
# from the gcc -print-file-name get used to create special characters,
# such as \n, \t.  Replace the \'s with /'s so that this does not
# happen:
$crt0   =~ s:\\:/:g;
$libdir =~  s:\\:/:g;

d59 1
a59 1
system($command) == 0 or die "system() failed.\n";
d63 1
a63 1
system($command) == 0 or die "system() failed.\n";
d67 1
a67 1
system($command) == 0 or die "system() failed.\n";
d71 1
a71 1
system($command) == 0 or die "system() failed.\n";
d75 1
a75 1
system($command) == 0 or die "system() failed.\n";
@

