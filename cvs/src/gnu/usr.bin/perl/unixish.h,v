head	1.13;
access;
symbols
	OPENBSD_6_2:1.13.0.6
	OPENBSD_6_2_BASE:1.13
	PERL_5_24_2:1.1.1.12
	OPENBSD_6_1:1.13.0.4
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.12.0.12
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.6
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.8
	OPENBSD_5_8_BASE:1.12
	PERL_5_20_2:1.1.1.11
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	PERL_5_20_1:1.1.1.11
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	PERL_5_18_2:1.1.1.11
	PERL:1.1.1
	OPENBSD_5_5:1.11.0.6
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	PERL_5_16_3:1.1.1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	PERL_5_12_2:1.1.1.9
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	PERL_5_10_1:1.1.1.9
	OPENBSD_4_6:1.9.0.6
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.2
	OPENBSD_4_5_BASE:1.9
	PERL_5_10_0:1.1.1.8
	OPENBSD_4_4:1.8.0.18
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.16
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.14
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.12
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.10
	OPENBSD_4_0_BASE:1.8
	PERL_5_8_8:1.1.1.7
	OPENBSD_3_9:1.8.0.8
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.6
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.4
	OPENBSD_3_7_BASE:1.8
	PERL_5_8_6:1.1.1.7
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	PERL_5_8_5:1.1.1.7
	PERL_5_8_3:1.1.1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	PERL_5_8_2:1.1.1.6
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	PERL_5_8_0:1.1.1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	PERL_5_6_1:1.1.1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	PERL_5_6_0:1.1.1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	PERL_500503:1.1.1.2
	CPAN:1.1.1
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	perl5003:1.1.1.1
	lwall:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.13
date	2017.02.05.00.31.54;	author afresh1;	state Exp;
branches;
next	1.12;
commitid	cxJ08BvJA9Pt2PTM;

1.12
date	2014.03.24.15.05.13;	author afresh1;	state Exp;
branches;
next	1.11;

1.11
date	2013.03.25.20.40.45;	author sthen;	state Exp;
branches;
next	1.10;

1.10
date	2009.10.12.18.24.22;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2008.09.29.17.36.00;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.07.21.33.01;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.12.03.03.02.23;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.27.22.25.19;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.24.18.35.00;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.06.17.04.31;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.29.22.51.13;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.30.07.49.24;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.08.19.10.11.51;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.19.10.11.51;	author downsj;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.29.22.38.06;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.04.06.16.08.49;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2001.05.24.18.22.26;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2002.10.27.22.14.52;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.12.03.02.43.39;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2004.04.07.21.12.57;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2008.09.29.17.18.11;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2009.10.12.18.10.35;	author millert;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2013.03.25.20.06.42;	author sthen;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2014.03.24.14.58.48;	author afresh1;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	2017.08.14.13.45.31;	author afresh1;	state Exp;
branches;
next	;
commitid	fAzrs78vdW2Yfc6A;


desc
@@


1.13
log
@Fix merge issues, remove excess files - match perl-5.24.1 dist
@
text
@/*    unixish.h
 *
 *    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2001, 2002,
 *    2003, 2006, 2007, by Larry Wall and others
 *
 *    You may distribute under the terms of either the GNU General Public
 *    License or the Artistic License, as specified in the README file.
 *
 */

/*
 * The following symbols are defined if your operating system supports
 * functions by that name.  All Unixes I know of support them, thus they
 * are not checked by the configuration script, but are directly defined
 * here.
 */

#ifndef PERL_MICRO

/* HAS_IOCTL:
 *	This symbol, if defined, indicates that the ioctl() routine is
 *	available to set I/O characteristics
 */
#define	HAS_IOCTL		/**/
 
/* HAS_UTIME:
 *	This symbol, if defined, indicates that the routine utime() is
 *	available to update the access and modification times of files.
 */
#define HAS_UTIME		/**/

/* HAS_GROUP
 *	This symbol, if defined, indicates that the getgrnam() and
 *	getgrgid() routines are available to get group entries.
 *	The getgrent() has a separate definition, HAS_GETGRENT.
 */
#define HAS_GROUP		/**/

/* HAS_PASSWD
 *	This symbol, if defined, indicates that the getpwnam() and
 *	getpwuid() routines are available to get password entries.
 *	The getpwent() has a separate definition, HAS_GETPWENT.
 */
#define HAS_PASSWD		/**/

#define HAS_KILL
#define HAS_WAIT

#endif /* !PERL_MICRO */
  
/* USEMYBINMODE
 *	This symbol, if defined, indicates that the program should
 *	use the routine my_binmode(FILE *fp, char iotype) to insure
 *	that a file is in "binary" mode -- that is, that no translation
 *	of bytes occurs on read or write operations.
 */
#undef USEMYBINMODE

/* Stat_t:
 *	This symbol holds the type used to declare buffers for information
 *	returned by stat().  It's usually just struct stat.  It may be necessary
 *	to include <sys/stat.h> and <sys/types.h> to get any typedef'ed
 *	information.
 */
#define Stat_t struct stat

/* USE_STAT_RDEV:
 *	This symbol is defined if this system has a stat structure declaring
 *	st_rdev
 */
#define USE_STAT_RDEV 	/**/

/* ACME_MESS:
 *	This symbol, if defined, indicates that error messages should be 
 *	should be generated in a format that allows the use of the Acme
 *	GUI/editor's autofind feature.
 */
#undef ACME_MESS	/**/

/* UNLINK_ALL_VERSIONS:
 *	This symbol, if defined, indicates that the program should arrange
 *	to remove all versions of a file if unlink() is called.  This is
 *	probably only relevant for VMS.
 */
/* #define UNLINK_ALL_VERSIONS		/ **/

/* VMS:
 *	This symbol, if defined, indicates that the program is running under
 *	VMS.  It is currently automatically set by cpps running under VMS,
 *	and is included here for completeness only.
 */
/* #define VMS		/ **/

/* ALTERNATE_SHEBANG:
 *	This symbol, if defined, contains a "magic" string which may be used
 *	as the first line of a Perl program designed to be executed directly
 *	by name, instead of the standard Unix #!.  If ALTERNATE_SHEBANG
 *	begins with a character other then #, then Perl will only treat
 *	it as a command line if it finds the string "perl" in the first
 *	word; otherwise it's treated as the first line of code in the script.
 *	(IOW, Perl won't hand off to another interpreter via an alternate
 *	shebang sequence that might be legal Perl code.)
 */
/* #define ALTERNATE_SHEBANG "#!" / **/

# include <signal.h>

#ifndef SIGABRT
#    define SIGABRT SIGILL
#endif
#ifndef SIGILL
#    define SIGILL 6         /* blech */
#endif
#define ABORT() kill(PerlProc_getpid(),SIGABRT);

/*
 * fwrite1() should be a routine with the same calling sequence as fwrite(),
 * but which outputs all of the bytes requested as a single stream (unlike
 * fwrite() itself, which on some systems outputs several distinct records
 * if the number_of_items parameter is >1).
 */
#define fwrite1 fwrite

#define Stat(fname,bufptr) stat((fname),(bufptr))

#ifdef __amigaos4__
int afstat(int fd, struct stat *statb);
#  define Fstat(fd,bufptr) afstat((fd),(bufptr))
#endif

#ifndef Fstat
#  define Fstat(fd,bufptr)   fstat((fd),(bufptr))
#endif

#define Fflush(fp)         fflush(fp)
#define Mkdir(path,mode)   mkdir((path),(mode))

#if defined(__amigaos4__)
#  define PERL_SYS_INIT_BODY(c,v)					\
	MALLOC_CHECK_TAINT2(*c,*v) PERL_FPU_INIT; PERLIO_INIT; MALLOC_INIT; amigaos4_init_fork_array(); amigaos4_init_environ_sema();
#  define PERL_SYS_TERM_BODY()                              \
    HINTS_REFCNT_TERM; OP_CHECK_MUTEX_TERM;                 \
    OP_REFCNT_TERM; PERLIO_TERM; MALLOC_TERM; LOCALE_TERM;  \
    amigaos4_dispose_fork_array();
#endif

#ifndef PERL_SYS_INIT_BODY
#  define PERL_SYS_INIT_BODY(c,v)					\
	MALLOC_CHECK_TAINT2(*c,*v) PERL_FPU_INIT; PERLIO_INIT; MALLOC_INIT
#endif

#ifndef PERL_SYS_TERM_BODY
#  define PERL_SYS_TERM_BODY()                      \
    HINTS_REFCNT_TERM; OP_CHECK_MUTEX_TERM;         \
    OP_REFCNT_TERM; PERLIO_TERM; MALLOC_TERM;       \
    LOCALE_TERM;

#endif

#define BIT_BUCKET "/dev/null"

#define dXSUB_SYS

#ifndef NO_ENVIRON_ARRAY
#define USE_ENVIRON_ARRAY
#endif

/*
 * ex: set ts=8 sts=4 sw=4 et:
 */
@


1.12
log
@Merge perl-5.18.2 plus local patches, remove old files

OK espie@@ sthen@@ deraadt@@
@
text
@d125 10
a134 1
#define Fstat(fd,bufptr)   fstat((fd),(bufptr))
d138 9
d153 4
a156 3
#  define PERL_SYS_TERM_BODY() \
    HINTS_REFCNT_TERM; OP_CHECK_MUTEX_TERM; \
    OP_REFCNT_TERM; PERLIO_TERM; MALLOC_TERM;
a168 6
 * Local variables:
 * c-indentation-style: bsd
 * c-basic-offset: 4
 * indent-tabs-mode: nil
 * End:
 *
@


1.11
log
@merge/resolve conflicts
(some more to do after this one)
@
text
@d153 1
a153 1
 * indent-tabs-mode: t
d156 1
a156 1
 * ex: set ts=8 sts=4 sw=4 noet:
@


1.10
log
@Merge in perl 5.10.1
@
text
@d136 2
a137 1
    HINTS_REFCNT_TERM; OP_REFCNT_TERM; PERLIO_TERM; MALLOC_TERM;
@


1.9
log
@fix conflicts and merge in local changes to perl 5.10.0
@
text
@d148 9
@


1.8
log
@merge local changes into perl-5.8.3
@
text
@d3 2
a4 2
 *    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2001,
 *    by Larry Wall and others
d129 3
a131 2
#ifndef PERL_SYS_INIT
#  define PERL_SYS_INIT(c,v) MALLOC_CHECK_TAINT2(*c,*v) PERL_FPU_INIT MALLOC_INIT
d134 4
a137 2
#ifndef PERL_SYS_TERM
#define PERL_SYS_TERM()		OP_REFCNT_TERM; MALLOC_TERM
d144 1
d146 1
@


1.7
log
@Resolve conflicts for perl 5.8.2, remove old files, and add OpenBSD-specific scaffolding
@
text
@a105 1
#if !defined(NSIG) || defined(M_UNIX) || defined(M_XENIX) || defined(__NetBSD__) || defined(__FreeBSD__) || defined(__OpenBSD__)
a106 1
#endif
@


1.6
log
@Resolve conflicts, remove old files, merge local changes
@
text
@d3 2
a4 1
 *    Copyright (c) 1997-2002, Larry Wall
d24 1
a24 1
#define	HAS_IOCTL		/ **/
d30 1
a30 1
#define HAS_UTIME		/ **/
d37 1
a37 1
#define HAS_GROUP		/ **/
d44 1
a44 1
#define HAS_PASSWD		/ **/
d71 1
a71 1
#define USE_STAT_RDEV 	/ **/
d132 1
a132 1
#  define PERL_SYS_INIT(c,v) PERL_FPU_INIT MALLOC_INIT
@


1.5
log
@merge in perl 5.6.1 with our local changes
@
text
@d1 9
d17 2
d47 2
d98 1
a98 1
 *	it as a command line if if finds the string "perl" in the first
d105 1
a105 1
#if !defined(NSIG) || defined(M_UNIX) || defined(M_XENIX) || defined(__NetBSD__)
a129 1
/* these should be set in a hint file, not here */
d131 1
a131 12
#if defined(PERL_SCO5) || defined(__FreeBSD__)
#  ifdef __FreeBSD__
#    include <floatingpoint.h>
#  endif
#  define PERL_SYS_INIT(c,v)	fpsetmask(0); MALLOC_INIT
#else
#  ifdef POSIX_BC
#    define PERL_SYS_INIT(c,v)	sigignore(SIGFPE); MALLOC_INIT
#  else
#    define PERL_SYS_INIT(c,v) MALLOC_INIT
#  endif
#endif
@


1.4
log
@perl-5.6.0 + local changes
@
text
@d128 1
a128 5
#    ifdef __CYGWIN__
#      define PERL_SYS_INIT(c,v) Perl_my_setenv_init(&environ); MALLOC_INIT
#    else
#      define PERL_SYS_INIT(c,v) MALLOC_INIT
#    endif
d140 3
@


1.3
log
@perl5.005_03 (stock)
@
text
@d92 1
a92 1
#if !defined(NSIG) || defined(M_UNIX) || defined(M_XENIX)  || defined(__NetBSD__)
d102 1
a102 1
#define ABORT() kill(getpid(),SIGABRT);
d117 1
d119 4
a122 2
#ifdef PERL_SCO5
/* this should be set in a hint file, not here */
d125 9
a133 1
#  define PERL_SYS_INIT(c,v)	MALLOC_INIT
d138 1
a138 1
#define PERL_SYS_TERM()		MALLOC_TERM
@


1.2
log
@perl 5.004_04
@
text
@d21 3
a23 3
 *	This symbol, if defined, indicates that the getgrnam(),
 *	getgrgid(), and getgrent() routines are available to 
 *	get group entries.
d28 3
a30 3
 *	This symbol, if defined, indicates that the getpwnam(),
 *	getpwuid(), and getpwent() routines are available to 
 *	get password entries.
d45 8
d92 1
a92 1
#if !defined(NSIG) || defined(M_UNIX) || defined(M_XENIX)
d120 1
a120 1
#  define PERL_SYS_INIT(c,v)	fpsetmask(0)
d122 1
a122 1
#  define PERL_SYS_INIT(c,v)
d127 1
a127 1
#define PERL_SYS_TERM()
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
#define	HAS_IOCTL		/**/
d18 1
a18 1
#define HAS_UTIME		/**/
d25 1
a25 1
#define HAS_GROUP		/**/
d32 1
a32 1
#define HAS_PASSWD		/**/
d37 21
d63 1
a63 1
/* #define UNLINK_ALL_VERSIONS		/**/
d70 13
a82 1
/* #define VMS		/**/
a95 5
#define BIT_BUCKET "/dev/null"
#define PERL_SYS_INIT(c,v)
#define PERL_SYS_TERM()
#define dXSUB_SYS int dummy

d107 1
d109 14
a122 1
#define my_getenv(var) getenv(var)
d124 1
@


1.1.1.1
log
@Import of Perl 5.003 into the tree.  Makefile.bsd-wrapper and
config.sh.OpenBSD are the only local changes.
@
text
@@


1.1.1.2
log
@perl5.005_03
@
text
@d12 1
a12 1
#define	HAS_IOCTL		/ **/
d18 1
a18 1
#define HAS_UTIME		/ **/
d21 3
a23 3
 *	This symbol, if defined, indicates that the getgrnam() and
 *	getgrgid() routines are available to get group entries.
 *	The getgrent() has a separate definition, HAS_GETGRENT.
d25 1
a25 1
#define HAS_GROUP		/ **/
d28 3
a30 3
 *	This symbol, if defined, indicates that the getpwnam() and
 *	getpwuid() routines are available to get password entries.
 *	The getpwent() has a separate definition, HAS_GETPWENT.
d32 1
a32 1
#define HAS_PASSWD		/ **/
a36 29
/* USEMYBINMODE
 *	This symbol, if defined, indicates that the program should
 *	use the routine my_binmode(FILE *fp, char iotype) to insure
 *	that a file is in "binary" mode -- that is, that no translation
 *	of bytes occurs on read or write operations.
 */
#undef USEMYBINMODE

/* Stat_t:
 *	This symbol holds the type used to declare buffers for information
 *	returned by stat().  It's usually just struct stat.  It may be necessary
 *	to include <sys/stat.h> and <sys/types.h> to get any typedef'ed
 *	information.
 */
#define Stat_t struct stat

/* USE_STAT_RDEV:
 *	This symbol is defined if this system has a stat structure declaring
 *	st_rdev
 */
#define USE_STAT_RDEV 	/ **/

/* ACME_MESS:
 *	This symbol, if defined, indicates that error messages should be 
 *	should be generated in a format that allows the use of the Acme
 *	GUI/editor's autofind feature.
 */
#undef ACME_MESS	/**/

d42 1
a42 1
/* #define UNLINK_ALL_VERSIONS		/ **/
d49 1
a49 13
/* #define VMS		/ **/

/* ALTERNATE_SHEBANG:
 *	This symbol, if defined, contains a "magic" string which may be used
 *	as the first line of a Perl program designed to be executed directly
 *	by name, instead of the standard Unix #!.  If ALTERNATE_SHEBANG
 *	begins with a character other then #, then Perl will only treat
 *	it as a command line if if finds the string "perl" in the first
 *	word; otherwise it's treated as the first line of code in the script.
 *	(IOW, Perl won't hand off to another interpreter via an alternate
 *	shebang sequence that might be legal Perl code.)
 */
/* #define ALTERNATE_SHEBANG "#!" / **/
d51 1
a51 1
#if !defined(NSIG) || defined(M_UNIX) || defined(M_XENIX)  || defined(__NetBSD__)
d63 5
a78 1
#define Mkdir(path,mode)   mkdir((path),(mode))
d80 1
a80 14
#ifndef PERL_SYS_INIT
#ifdef PERL_SCO5
/* this should be set in a hint file, not here */
#  define PERL_SYS_INIT(c,v)	fpsetmask(0); MALLOC_INIT
#else
#  define PERL_SYS_INIT(c,v)	MALLOC_INIT
#endif
#endif

#ifndef PERL_SYS_TERM
#define PERL_SYS_TERM()		MALLOC_TERM
#endif

#define BIT_BUCKET "/dev/null"
a81 1
#define dXSUB_SYS
@


1.1.1.3
log
@virgin perl 5.6.0
@
text
@d92 1
a92 1
#if !defined(NSIG) || defined(M_UNIX) || defined(M_XENIX) || defined(__NetBSD__)
d102 1
a102 1
#define ABORT() kill(PerlProc_getpid(),SIGABRT);
a116 1
/* these should be set in a hint file, not here */
d118 2
a119 4
#if defined(PERL_SCO5) || defined(__FreeBSD__)
#  ifdef __FreeBSD__
#    include <floatingpoint.h>
#  endif
d122 1
a122 9
#  ifdef POSIX_BC
#    define PERL_SYS_INIT(c,v)	sigignore(SIGFPE); MALLOC_INIT
#  else
#    ifdef __CYGWIN__
#      define PERL_SYS_INIT(c,v) Perl_my_setenv_init(&environ); MALLOC_INIT
#    else
#      define PERL_SYS_INIT(c,v) MALLOC_INIT
#    endif
#  endif
d127 1
a127 1
#define PERL_SYS_TERM()		OP_REFCNT_TERM; MALLOC_TERM
@


1.1.1.4
log
@stock perl 5.6.1
@
text
@d128 5
a132 1
#    define PERL_SYS_INIT(c,v) MALLOC_INIT
a143 3

#define USE_ENVIRON_ARRAY

@


1.1.1.5
log
@stock perl 5.8.0 from CPAN
@
text
@a0 9
/*    unixish.h
 *
 *    Copyright (c) 1997-2002, Larry Wall
 *
 *    You may distribute under the terms of either the GNU General Public
 *    License or the Artistic License, as specified in the README file.
 *
 */

a7 2
#ifndef PERL_MICRO

a35 2

#endif /* !PERL_MICRO */
d85 1
a85 1
 *	it as a command line if it finds the string "perl" in the first
d92 1
a92 1
#if !defined(NSIG) || defined(M_UNIX) || defined(M_XENIX) || defined(__NetBSD__) || defined(__FreeBSD__) || defined(__OpenBSD__)
d117 1
d119 12
a130 1
#  define PERL_SYS_INIT(c,v) PERL_FPU_INIT MALLOC_INIT
@


1.1.1.6
log
@perl 5.8.2 from CPAN
@
text
@d3 1
a3 2
 *    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2001,
 *    by Larry Wall and others
d23 1
a23 1
#define	HAS_IOCTL		/**/
d29 1
a29 1
#define HAS_UTIME		/**/
d36 1
a36 1
#define HAS_GROUP		/**/
d43 1
a43 1
#define HAS_PASSWD		/**/
d70 1
a70 1
#define USE_STAT_RDEV 	/**/
d131 1
a131 1
#  define PERL_SYS_INIT(c,v) MALLOC_CHECK_TAINT2(*c,*v) PERL_FPU_INIT MALLOC_INIT
@


1.1.1.7
log
@perl 5.8.3 from CPAN
@
text
@d106 1
d108 1
@


1.1.1.8
log
@import perl 5.10.0 from CPAN
@
text
@d3 2
a4 2
 *    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2001, 2002,
 *    2003, 2006, 2007, by Larry Wall and others
d129 2
a130 3
#ifndef PERL_SYS_INIT_BODY
#  define PERL_SYS_INIT_BODY(c,v)					\
	MALLOC_CHECK_TAINT2(*c,*v) PERL_FPU_INIT; PERLIO_INIT; MALLOC_INIT
d133 2
a134 4
#ifndef PERL_SYS_TERM_BODY
#  define PERL_SYS_TERM_BODY() \
    HINTS_REFCNT_TERM; OP_REFCNT_TERM; PERLIO_TERM; MALLOC_TERM;

a140 1
#ifndef NO_ENVIRON_ARRAY
a141 1
#endif
@


1.1.1.9
log
@import perl 5.10.1
@
text
@a147 9
/*
 * Local variables:
 * c-indentation-style: bsd
 * c-basic-offset: 4
 * indent-tabs-mode: t
 * End:
 *
 * ex: set ts=8 sts=4 sw=4 noet:
 */
@


1.1.1.10
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d136 1
a136 2
    HINTS_REFCNT_TERM; OP_CHECK_MUTEX_TERM; \
    OP_REFCNT_TERM; PERLIO_TERM; MALLOC_TERM;
@


1.1.1.11
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d153 1
a153 1
 * indent-tabs-mode: nil
d156 1
a156 1
 * ex: set ts=8 sts=4 sw=4 et:
@


1.1.1.12
log
@Import perl-5.24.2
@
text
@d125 1
a125 10

#ifdef __amigaos4__
int afstat(int fd, struct stat *statb);
#  define Fstat(fd,bufptr) afstat((fd),(bufptr))
#endif

#ifndef Fstat
#  define Fstat(fd,bufptr)   fstat((fd),(bufptr))
#endif

a128 9
#if defined(__amigaos4__)
#  define PERL_SYS_INIT_BODY(c,v)					\
	MALLOC_CHECK_TAINT2(*c,*v) PERL_FPU_INIT; PERLIO_INIT; MALLOC_INIT; amigaos4_init_fork_array(); amigaos4_init_environ_sema();
#  define PERL_SYS_TERM_BODY()                              \
    HINTS_REFCNT_TERM; OP_CHECK_MUTEX_TERM;                 \
    OP_REFCNT_TERM; PERLIO_TERM; MALLOC_TERM; LOCALE_TERM;  \
    amigaos4_dispose_fork_array();
#endif

d135 3
a137 4
#  define PERL_SYS_TERM_BODY()                      \
    HINTS_REFCNT_TERM; OP_CHECK_MUTEX_TERM;         \
    OP_REFCNT_TERM; PERLIO_TERM; MALLOC_TERM;       \
    LOCALE_TERM;
d150 6
@


