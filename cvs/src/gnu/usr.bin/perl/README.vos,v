head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.10
	OPENBSD_6_0:1.1.1.10.0.12
	OPENBSD_6_0_BASE:1.1.1.10
	OPENBSD_5_9:1.1.1.10.0.6
	OPENBSD_5_9_BASE:1.1.1.10
	OPENBSD_5_8:1.1.1.10.0.8
	OPENBSD_5_8_BASE:1.1.1.10
	PERL_5_20_2:1.1.1.10
	OPENBSD_5_7:1.1.1.10.0.2
	OPENBSD_5_7_BASE:1.1.1.10
	PERL_5_20_1:1.1.1.10
	OPENBSD_5_6:1.1.1.10.0.4
	OPENBSD_5_6_BASE:1.1.1.10
	PERL_5_18_2:1.1.1.10
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.9.0.6
	OPENBSD_5_5_BASE:1.1.1.9
	OPENBSD_5_4:1.1.1.9.0.2
	OPENBSD_5_4_BASE:1.1.1.9
	PERL_5_16_3:1.1.1.9
	OPENBSD_5_3:1.1.1.8.0.14
	OPENBSD_5_3_BASE:1.1.1.8
	OPENBSD_5_2:1.1.1.8.0.12
	OPENBSD_5_2_BASE:1.1.1.8
	OPENBSD_5_1_BASE:1.1.1.8
	OPENBSD_5_1:1.1.1.8.0.10
	OPENBSD_5_0:1.1.1.8.0.8
	OPENBSD_5_0_BASE:1.1.1.8
	OPENBSD_4_9:1.1.1.8.0.6
	OPENBSD_4_9_BASE:1.1.1.8
	PERL_5_12_2:1.1.1.8
	OPENBSD_4_8:1.1.1.8.0.4
	OPENBSD_4_8_BASE:1.1.1.8
	OPENBSD_4_7:1.1.1.8.0.2
	OPENBSD_4_7_BASE:1.1.1.8
	PERL_5_10_1:1.1.1.8
	OPENBSD_4_6:1.1.1.7.0.6
	OPENBSD_4_6_BASE:1.1.1.7
	OPENBSD_4_5:1.1.1.7.0.2
	OPENBSD_4_5_BASE:1.1.1.7
	PERL_5_10_0:1.1.1.7
	OPENBSD_4_4:1.1.1.6.0.18
	OPENBSD_4_4_BASE:1.1.1.6
	OPENBSD_4_3:1.1.1.6.0.16
	OPENBSD_4_3_BASE:1.1.1.6
	OPENBSD_4_2:1.1.1.6.0.14
	OPENBSD_4_2_BASE:1.1.1.6
	OPENBSD_4_1:1.1.1.6.0.12
	OPENBSD_4_1_BASE:1.1.1.6
	OPENBSD_4_0:1.1.1.6.0.10
	OPENBSD_4_0_BASE:1.1.1.6
	PERL_5_8_8:1.1.1.6
	OPENBSD_3_9:1.1.1.6.0.8
	OPENBSD_3_9_BASE:1.1.1.6
	OPENBSD_3_8:1.1.1.6.0.6
	OPENBSD_3_8_BASE:1.1.1.6
	OPENBSD_3_7:1.1.1.6.0.4
	OPENBSD_3_7_BASE:1.1.1.6
	PERL_5_8_6:1.1.1.6
	OPENBSD_3_6:1.1.1.6.0.2
	OPENBSD_3_6_BASE:1.1.1.6
	PERL_5_8_5:1.1.1.6
	PERL_5_8_3:1.1.1.5
	OPENBSD_3_5:1.1.1.5.0.2
	OPENBSD_3_5_BASE:1.1.1.5
	PERL_5_8_2:1.1.1.5
	OPENBSD_3_4:1.1.1.4.0.4
	OPENBSD_3_4_BASE:1.1.1.4
	OPENBSD_3_3:1.1.1.4.0.2
	OPENBSD_3_3_BASE:1.1.1.4
	PERL_5_8_0:1.1.1.4
	OPENBSD_3_2:1.1.1.3.0.6
	OPENBSD_3_2_BASE:1.1.1.3
	OPENBSD_3_1:1.1.1.3.0.4
	OPENBSD_3_1_BASE:1.1.1.3
	OPENBSD_3_0:1.1.1.3.0.2
	OPENBSD_3_0_BASE:1.1.1.3
	PERL_5_6_1:1.1.1.3
	OPENBSD_2_9:1.1.1.2.0.6
	OPENBSD_2_9_BASE:1.1.1.2
	OPENBSD_2_8:1.1.1.2.0.4
	OPENBSD_2_8_BASE:1.1.1.2
	OPENBSD_2_7:1.1.1.2.0.2
	OPENBSD_2_7_BASE:1.1.1.2
	PERL_5_6_0:1.1.1.2
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	PERL_500503:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	99.04.29.22.36.59;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.29.22.36.59;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.04.06.16.08.32;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2001.05.24.18.21.54;	author millert;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.10.27.22.14.50;	author millert;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.12.03.02.43.36;	author millert;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2004.08.09.17.45.37;	author millert;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2008.09.29.17.18.03;	author millert;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2009.10.12.18.10.37;	author millert;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2013.03.25.20.06.37;	author sthen;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2014.03.24.14.58.47;	author afresh1;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@Perl 5 README file for the Stratus VOS operating system.
Paul Green (Paul_Green@@stratus.com)
February 4, 1999


Introduction
------------
This is a port of Perl version 5, revision 005-03, to VOS.  Perl
is a scripting or macro language that is popular on many
systems.  See your local computer bookstore for a number of good
books on Perl.

Most of the Perl features should work on VOS.  However, any
attempt by perl.pm to call the following unimplemented POSIX
functions will result in an error message and an immediate and
fatal call to the VOS debugger.  They are "dup", "fork", and
"waitpid".  The lack of these functions pretty much prevents you
from starting VOS commands and grabbing their output in perl.
The workaround is to run the commands outside of perl, then have
perl process the output file.


Compiling Perl 5 on VOS
-----------------------
Before you can build Perl 5 on VOS, you need to have or acquire the
following additional items.

1.   The VOS Standard C Compiler and Runtime, or the VOS Standard C
     Cross-Compiler.  This is a standard Stratus product.

2.   The VOS OS TCP/IP product set.  While the necessary header
     files are included with VOS POSIX.1, you still need the
     appropriate object files in order to bind perl.pm.  This is
     a standard Stratus product.

3.   The VOS POSIX.1 environment.  As of this writing, this is
     available on the VOS FTP site.  Login anonymously to
     ftp.stratus.com and get the file
     /pub/vos/alpha/posix.save.evf.gz in binary file-transfer
     mode.  Or use the Uniform Resource Locator (URL)
     ftp://ftp.stratus.com/pub/vos/alpha/posix.save.evf.gz from
     your web browser.  This is not a standard Stratus product.

     Instructions for unbundling this file are at
     ftp://ftp.stratus.com/pub/vos/utility/utility.html.

To build perl 5, change to the "vos" subdirectory and type the
command "compile_perl -processor X", where X is the processor
type (mc68020, i80860, pa7100, pa8000) that you wish to use.


Installing Perl 5 on VOS
------------------------
1.   Create the directory >system>ported>command_library.

2.   Copy the appropriate version of the perl program module to
     this directory.  For example, with your current directory
     set to the top-level directory of Perl 5, to install the
     executable program module for the Motorola 68K
     architecture, enter:

          !copy_file vos>obj>perl.pm >system>ported>command_library>*

     (If you wish to use both Perl version 4 and Perl version 5,
     you must give them different names; for example, perl.pm
     and perl5.pm).

3.   Create the directory >system>ported>perl>lib.

4.   Copy all of the files and subdirectories from the lib
     subdirectory into this new directory.  For example, with
     the current directory set to the top-level directory of the
     perl distribution, enter:

          !copy_dir lib >system>ported>perl>lib>5.005

5.   While there are currently no architecture-specific
     extensions or modules distributed with perl, the following
     directories can be used to hold such files:

          >system>ported>perl>lib>5.005.68k
          >system>ported>perl>lib>5.005.860
          >system>ported>perl>lib>5.005.7100
          >system>ported>perl>lib>5.005.8000

6.   Site-specific perl extensions and modules can be installed
     in one of two places.  Put architecture-independent files
     into:

          >system>ported>perl>lib>site>5.005

     Put architecture-dependent files into one of the following
     directories:

          >system>ported>perl>lib>site>5.005.68k
          >system>ported>perl>lib>site>5.005.860
          >system>ported>perl>lib>site>5.005.7100
          >system>ported>perl>lib>site>5.005.8000

7.   You can examine the @@INC variable from within a perl program
     to see the order in which Perl searches these directories.


Unimplemented Features
----------------------
If Perl 5 attempts to call an unimplemented VOS POSIX.1 function,
it will print a fatal error message and enter the VOS debugger.
This error is not recoverable.  See vos_dummies.c for a list of
the unimplemented POSIX.1 functions.  To see what functions are
unimplemented and what the error message looks like, compile and
execute "test_vos_dummies.c".


Restrictions
------------
This port of Perl version 5 to VOS prefers Unix-style,
slash-separated pathnames over VOS-style greater-than-separated
pathnames.  VOS-style pathnames should work in most contexts, but
if you have trouble, replace all greater-than characters by slash
characters.  Because the slash character is used as a pathname
delimiter, Perl cannot process VOS pathnames containing a slash
character in a directory or file name; these must be renamed.

This port of Perl also uses Unix-epoch date values internally.
As long as you are dealing with ASCII character string
representations of dates, this should not be an issue.  The
supported epoch is January 1, 1980 to January 17, 2038.

See the file pod/perlport.pod for more information about the VOS
port of Perl.


Support Status
--------------
I'm offering this port "as is".  You can ask me questions, but I
can't guarantee I'll be able to answer them; I don't know much
about Perl itself; I'm still learning that.

(end)
@


1.1.1.1
log
@perl5.005_03
@
text
@@


1.1.1.2
log
@virgin perl 5.6.0
@
text
@d3 1
a3 1
February 3, 2000
d8 1
a8 1
This is a port of Perl version 5, revision 005-63, to VOS.  Perl
a46 6
4.   You must compile this version of Perl 5 on VOS Release
     14.1.0 or higher because some of the perl source files
     contain more than 32,767 source lines.  Due to VOS
     release-compatibility rules, this port of perl may not
     execute on VOS Release 12 or earlier.

a49 4
Note that code compiled for the pa7100 processor type can
execute on the PA7100, PA8000, and PA8500 processors, and that
code compiled for the pa8000 processor type can execute on the
PA8000 and PA8500 processors.
d137 1
a137 3
about Perl itself; I'm still learning that.  There are some
excellent books available on the Perl language; consult a book
seller.
@


1.1.1.3
log
@stock perl 5.6.1
@
text
@d1 13
a13 28
If you read this file _as_is_, just ignore the funny characters you
see. It is written in the POD format (see pod/perlpod.pod) which is
specially designed to be readable as is.

=head1 NAME

README.vos - Perl for Stratus VOS

=head1 SYNOPSIS

This is a port of Perl version 5 to VOS.  Perl is a scripting or
macro language that is popular on many systems.  See your local
computer bookstore for a number of good books on Perl.

=head2 Stratus POSIX Support

Note that there are two different implementations of POSIX.1
support on VOS.  There is an alpha version of POSIX that is
available from the Stratus anonymous ftp site
(ftp://ftp.stratus.com/pub/vos/posix/alpha/alpha.html).  There
is a generally-available version of POSIX that comes with the
VOS Standard C compiler and C runtime in VOS Release 14.3.0 or
higher.  This port of POSIX will compile and bind with either
version of POSIX.

Most of the Perl features should work on VOS regardless of which
version of POSIX that you are using.  However, the alpha version
of POSIX is missing a number of key functions, and therefore any
d20 1
a20 2
perl process the output file.  These functions are all available
in the generally-available version of POSIX.
a21 3
=head1 INSTALLING PERL IN VOS

=head2 Compiling Perl 5 on VOS
d23 2
d28 2
a29 6
=over 5

=item 1

The VOS Standard C Compiler and Runtime, or the VOS Standard C
Cross-Compiler.  This is a standard Stratus product.
d31 21
a51 37
=item 2

Either the VOS OS TCP/IP or STCP product set.  If you are
building with the alpha version of POSIX you need the OS
TCP/IP product set.  If you are building with the
generally-available version of POSIX you need the STCP
product set.  These are standard Stratus products.

=item 3

Either the alpha or generally-available version of the VOS
POSIX.1 environment.

The alpha version of POSIX.1 support is available on the
Stratus FTP site.  Login anonymously to ftp.stratus.com and
get the file /pub/vos/posix/alpha/posix.save.evf.gz in
binary file-transfer mode.  Or use the Uniform Resource
Locator (URL)
ftp://ftp.stratus.com/pub/vos/alpha/posix.save.evf.gz from
your web browser.  Instructions for unbundling this file
are at ftp://ftp.stratus.com/pub/vos/utility/utility.html.
This is not a standard Stratus product.

The generally-available version of POSIX.1 support is
bundled with the VOS Standard C compiler and Runtime (or
Cross-Compiler) in VOS Release 14.3.0 or higher.  This is a
standard Stratus product.

=item 4

You must compile this version of Perl 5 on VOS Release
14.1.0 or higher because some of the perl source files
contain more than 32,767 source lines.  Due to VOS
release-compatibility rules, this port of perl may not
execute on VOS Release 12 or earlier.

=back
a55 7
Note that the generally-available version of POSIX.1 support is
not available for the mc68020 or i80860 processors.

You must have purchased the VOS Standard C Cross Compiler in
order to compile perl for a processor type that is different
from the processor type of the module.

d57 3
a59 9
execute on the PA7100, PA8000, PA8500 and PA8600 processors, and
that code compiled for the pa8000 processor type can execute on
the PA8000, PA8500 and PA8600 processors.

=head2 Installing Perl 5 on VOS

=over 4

=item 1
a60 1
Create the directory >system>ported>command_library.
d62 9
a70 7
=item 2

Copy the appropriate version of the perl program module to
this directory.  For example, with your current directory
set to the top-level directory of Perl 5, to install the
executable program module for the Motorola 68K
architecture, enter:
d74 3
a76 18
(If you wish to use both Perl version 4 and Perl version 5,
you must give them different names; for example, perl.pm
and perl5.pm).

=item 3

Create the directory >system>ported>perl>lib.

=item 4

Copy all of the files and subdirectories from the lib
subdirectory into this new directory.  For example, with
the current directory set to the top-level directory of the
perl distribution, enter:

          !copy_dir lib >system>ported>perl>lib>5.6

=item 5
d78 1
a78 3
While there are currently no architecture-specific
extensions or modules distributed with perl, the following
directories can be used to hold such files:
d80 4
a83 4
          >system>ported>perl>lib>5.6.68k
          >system>ported>perl>lib>5.6.860
          >system>ported>perl>lib>5.6.7100
          >system>ported>perl>lib>5.6.8000
d85 1
a85 1
=item 6
d87 3
a89 2
Site-specific perl extensions and modules can be installed in one of
two places.  Put architecture-independent files into:
d91 4
a94 1
          >system>ported>perl>lib>site>5.6
d96 3
a98 2
Put architecture-dependent files into one of the following
directories:
d100 1
a100 4
          >system>ported>perl>lib>site>5.6.68k
          >system>ported>perl>lib>site>5.6.860
          >system>ported>perl>lib>site>5.6.7100
          >system>ported>perl>lib>site>5.6.8000
d102 2
a103 1
=item 7
d105 4
a108 2
You can examine the @@INC variable from within a perl program
to see the order in which Perl searches these directories.
d110 2
a111 1
=back
a112 1
=head1 USING PERL IN VOS
d114 8
a121 1
=head2 Unimplemented Features
a122 9
If perl is built with the alpha version of VOS POSIX.1 support
and if it attempts to call an unimplemented VOS POSIX.1
function, it will print a fatal error message and enter the VOS
debugger.  This error is not recoverable.  See vos_dummies.c for
a list of the unimplemented POSIX.1 functions.  To see what
functions are unimplemented and what the error message looks
like, compile and execute "test_vos_dummies.c".

=head2 Restrictions
d124 2
a141 1
=head1 SUPPORT STATUS
d143 2
d146 2
a147 1
can't guarantee I'll be able to answer them.  There are some
d151 1
a151 9
=head1 AUTHOR

Paul Green (Paul_Green@@stratus.com)

=head1 LAST UPDATE

February 13, 2001

=cut
@


1.1.1.4
log
@stock perl 5.8.0 from CPAN
@
text
@d11 3
a13 101
This file contains notes for building perl on the Stratus VOS
operating system.  Perl is a scripting or macro language that is
popular on many systems.  See L<perlbook> for a number of good
books on Perl.

These are instructions for building Perl from source.  Most people can
simply download a pre-compiled distribution from the VOS anonymous FTP
site.  If you are running VOS Release 14.2.0 or earlier, download Perl
from ftp://ftp.stratus.com/pub/vos/posix/alpha/alpha.html  If you are
running VOS Release 14.3.0 or later, download Perl from
ftp://ftp.stratus.com/pub/vos/posix/ga/ga.html  Instructions for
unbundling the Perl distribution file are at
ftp://ftp.stratus.com/pub/vos/utility/utility.html

If you are running VOS Release 14.4.1 or later, you can obtain a
pre-compiled, supported copy of perl by purchasing Release 2.0.1
of the VOS GNU C++ and GNU Tools product from Stratus
Technologies.

=head2 Multiple methods to build perl for VOS

If you elect to build perl from its source code, you have several
different ways that you can build perl.  The method that you use
depends on the version of VOS that you are using and on the
architecture of you Stratus hardware platform.

=over 5

=item 1

If you have a Stratus XA2000 (Motorola 68k-based) platform, you
must build perl using the alpha version of VOS POSIX support and
using the VOS Standard C Cross-compiler.  You must build perl on
VOS Release 14.1.0 (or later) on an XA/R or Continuum platform.

This version of perl is properly called "miniperl" because it
does not contain the complete perl functionality.

You must build perl with the compile_perl.cm command macro found
in the vos subdirectory.

=item 2

If you have a Stratus XA/R (Intel i860-based) platform, you must
build perl using the alpha version of VOS POSIX support and using
the VOS Standard C compiler or cross-compiler.  You must build
perl on VOS Release 14.1.0 (or later) on an XA/R or Continuum
platform.

This version of perl is properly called "miniperl" because it
does not contain the complete perl functionality.

You must build perl with the compile_perl.cm command macro found
in the vos subdirectory.

=item 3

If you have a Stratus Continuum (PARISC-based) platform that is
running a version of VOS earlier than VOS 14.3.0, you must build
perl using the alpha version of VOS POSIX support and using the
VOS Standard C compiler or cross-compiler.  You must build perl
on VOS Release 14.1.0 (or later) on an XA/R or Continuum
platform.

This version of perl is properly called "miniperl" because it
does not contain the complete perl functionality.

You must build perl with the compile_perl.cm command macro found
in the vos subdirectory.

=item 4

If you have a Stratus Continuum (PARISC-based) platform that is
running VOS Release 14.3.0 through VOS Release 14.4.1, you must
build perl using the generally-available version of VOS POSIX
support, and using either the VOS Standard C compiler or the VOS
GNU C compiler.  You must build perl on VOS Release 14.3.0 (or
later) on a Continuum platform.

This version of perl is properly called "miniperl" because it
does not contain the complete perl functionality.

You must build perl with the compile_perl.cm command macro found
in the vos subdirectory.

=item 5

If you have a Stratus Continuum (PA-RISC-based) platform that is
running VOS Release 14.5.0 or later, you can either use the
previous method to build "miniperl" or you can build "full
perl", which contains the complete functionality of perl.  I
strongly recommend that you build full perl.  To build full
perl, you must use the generally-available version of VOS POSIX
support.  You must use the VOS GNU C compiler and the VOS GNU
C/C++ and GNU Tools Release 2.0.1 product.  You must build full
perl on VOS Release 14.5.0 (or later) on a Continuum platform.

You must build full perl with the compile_full_perl.cm command
macro found in the vos subdirectory.

=back
d20 5
a24 4
( ftp://ftp.stratus.com/pub/vos/posix/alpha/alpha.html ).  There
is a generally-available version of POSIX that comes with VOS
Release 14.3.0 or higher.  This port of POSIX will compile and
bind with either version of POSIX.
d32 5
a36 5
"waitpid".  The lack of these functions prevents you from
starting VOS commands and grabbing their output in perl.  The
workaround is to run the commands outside of perl, then have perl
process the output file.  These functions are all available in
the generally-available version of POSIX.
d49 2
a50 5
The VOS Standard C Compiler (or the VOS Standard C
Cross-Compiler) and the VOS C Runtime.  If you are using
the generally-available version of POSIX support, you may
instead use the VOS GNU C/C++ Compiler.  These are
standard Stratus products.
d70 1
a70 1
ftp://ftp.stratus.com/pub/vos/posix/alpha/posix.save.evf.gz from
d72 1
a72 1
are at ftp://ftp.stratus.com/pub/vos/utility/utility.html
d75 4
a78 5
In VOS Release 14.3.0, the generally-available version of
POSIX.1 support is bundled with the VOS Standard C compiler
(or Standard C Cross-Compiler).  In VOS Release 14.4.0 or
higher, it is also bundled with the VOS C Runtime.  These
are standard Stratus products.
a87 9
=item 5

If you are using the generally-available version of VOS POSIX
support, then you should also acquire the VOS GNU C/C++ Compiler
and GNU Tools product.  When perl is built with this version of
POSIX support, it assumes that it can find "bash", "sed" and
other POSIX-compatible commands in the directory
/system/gnu_library/bin.

d90 5
a94 16
To build perl using the supplied VOS command macros, change to
the "vos" subdirectory and type the command "compile_perl
-processor X", where X is the processor type (mc68020, i80860,
pa7100, pa8000) that you wish to use.  Note that the
generally-available version of POSIX.1 support is not available
for the mc68020 or i80860 processors.

Use the "-version alpha" control argument to build perl with
the alpha version of POSIX support, and use the "-version
ga" control argument to build it with the
generally-available version of POSIX.  The default is "ga".

Use the "-compiler cc" control argument to build perl with
the VOS Standard C compiler.  Use the "-compiler gcc"
control argument to build it with the GNU GCC compiler.  The
default is "cc".
a104 6
To build full perl using the supplied Configure script and
makefiles, change to the "vos" subdirectory and type the command
"compile_full_perl" or "start_process compile_full_perl".  This
will configure, build, and test perl.  All of the test cases
that are executed should pass.

d111 3
a113 2
If you have built perl using the Configure script, ensure that
you have modify permission to C<< >system>ported >> and type
d115 11
a125 1
     gmake install
d127 1
a127 1
=item 2
d129 1
a129 1
If you have built perl using any of the other methods, type
d131 1
a131 1
     install_perl -processor PROCESSOR -name NAME
d133 4
a136 3
where PROCESSOR is mc68020, i80860, pa7100, or pa8000, as
appropriate, and NAME is perl or perl5, according to which name
you wish to use.
d138 1
a138 2
This command macro will install perl and all of its related
files in the proper directories.
d140 1
a140 1
=item 3
d146 4
a149 4
     >system>ported>lib>perl5>5.8.0>68k
     >system>ported>lib>perl5>5.8.0>860
     >system>ported>lib>perl5>5.8.0>7100
     >system>ported>lib>perl5>5.8.0>8000
d151 1
a151 1
=item 4
d156 1
a156 1
     >system>ported>lib>perl5>site_perl>5.8.0
d158 2
a159 2
Put site-specific architecture-dependent files into one of the
following directories:
d161 4
a164 4
     >system>ported>lib>perl5>site_perl>5.8.0>68k
     >system>ported>lib>perl5>site_perl>5.8.0>860
     >system>ported>lib>perl5>site_perl>5.8.0>7100
     >system>ported>lib>perl5>site_perl>5.8.0>8000
d166 1
a166 1
=item 5
d175 1
a175 1
=head2 Unimplemented Features of Perl on VOS
d185 1
a185 1
=head2 Restrictions of Perl on VOS
a202 16
=head2 Handling of underflow and overflow

VOS does not support automatically mapping overflowed
floating-point values to +infinity, nor automatically mapping
underflowed floating-point values to -infinity, unlike many
other platforms.  The Perl pack function has been modified to
perform such mapping in software on VOS.  Performing other
floating-point computations that underflow or overflow will
probably result in SIGFPE.  Don't push your luck.

=head1 TEST STATUS

When Perl is built using the native build process on VOS Release
14.5.0 and GNU C++/GNU Tools 2.0.1, all attempted tests either
pass or result in TODO (ignored) failures.

a209 5
If you want a supported version of perl for VOS, purchase the VOS
GNU C++ and GNU Tools Release 2.0.1 product from Stratus
Technologies, along with a support contract (or from anyone else
who will sell you support).

d212 1
a212 1
Paul Green (Paul.Green@@stratus.com)
d216 1
a216 1
May 13, 2002
@


1.1.1.5
log
@perl 5.8.2 from CPAN
@
text
@d321 7
a327 16
Prior to VOS Release 14.7.0, VOS does not support automatically
mapping overflowed floating-point values to +infinity, nor
automatically mapping underflowed floating-point values to zero,
unlike many other platforms.  The Perl pack function has been
modified to perform such mapping in software on VOS.  Performing
other floating-point computations that underflow or overflow
will probably result in SIGFPE.  Don't push your luck.

As of VOS Release 14.7.0, the VOS POSIX runtime sets up the
PA-RISC hardware floating-point status register so that the
overflow and underflow exceptions do not trap, but instead
automatically convert the result to infinity or zero, as
appropriate.  As of this writing, there are still floating-point
operations that can trap, for example, subtracting two infinite
values.  This is recorded as suggestion posix-1022, which is not
yet fixed.
d331 3
a333 7
When Perl 5.8.1 is built using the native build process on VOS
Release 14.5.0 and GNU C++/GNU Tools 2.0.1, all but five
attempted tests either pass or result in TODO (ignored)
failures.  The tests that fail are:

ext/Time/HiRes/HiRes, tests 8, 11, 20, and 21.
lib/Net/Ping/t/450_service, test 8.
d353 1
a353 1
March 26, 2003
@


1.1.1.6
log
@Import of stock perl 5.8.5
@
text
@d27 1
a27 1
(or later) of the VOS GNU C++ and GNU Tools product from Stratus
d35 1
a35 1
architecture of your Stratus hardware platform.
d68 1
a68 1
If you have a Stratus Continuum (PA-RISC-based) platform that is
d83 1
a83 1
If you have a Stratus Continuum (PA-RISC-based) platform that is
d105 2
a106 3
C/C++ and GNU Tools Release 2.0.1 (or later) product.  You must
build full perl on VOS Release 14.5.0 (or later) on a Continuum
platform.
d173 1
a173 1
This is NOT a standard Stratus product.
d229 2
a230 1
will configure, build, and test perl.
d340 2
a341 2
When Perl 5.8.3 is built using the native build process on VOS
Release 14.7.0 and GNU C++/GNU Tools 2.0.2a, all but three
d345 2
a346 3
t/io/tell.t, test 28
t/op/pack.t, test 39
lib/Net/ing/t/450_service.t, test 8
d355 4
a358 4
If you want a supported version of perl for VOS, purchase the
VOS GNU C++ and GNU Tools Release 2.0.1 (or later) product from
Stratus Technologies, along with a support contract (or from
anyone else who will sell you support).
d366 1
a366 1
January 15, 2004
@


1.1.1.7
log
@import perl 5.10.0 from CPAN
@
text
@d16 8
a23 8
These are instructions for building Perl from source.  Most
people can simply download a pre-compiled distribution from the
VOS anonymous FTP site.  This version of Perl is not supported
on VOS Release 14.2.0 or earlier releases.  If you are running
VOS Release 14.3.0 or later, download Perl from
ftp://ftp.stratus.com/pub/vos/posix/ga/ga.html.  Instructions
for unbundling the Perl distribution file are at
ftp://ftp.stratus.com/pub/vos/utility/utility.html.
d30 1
a30 1
=head1 BUILDING PERL FOR VOS
d32 194
a225 3
To build perl from its source code, you must have a Continuum
platform running VOS Release 14.5.0 or later, the STCP product,
and the GNU C++ and GNU Tools, Release 2.0.1 or later.
d232 1
a232 1
=head1 INSTALLING PERL IN VOS
d245 13
d262 4
a265 2
     >system>ported>lib>perl5>5.9.0>7100
     >system>ported>lib>perl5>5.9.0>8000
d267 1
a267 1
=item 3
d272 1
a272 1
     >system>ported>lib>perl5>site_perl>5.9.0
d277 4
a280 2
     >system>ported>lib>perl5>site_perl>5.9.0>7100
     >system>ported>lib>perl5>site_perl>5.9.0>8000
d282 1
a282 1
=item 4
d291 10
d340 2
a341 2
When Perl 5.9.0 is built using the native build process on VOS
Release 14.7.0 and GNU C++/GNU Tools 2.0.2a, all but nine
d345 3
a347 9
t/io/dup, test 2
t/io/tell, test 28
t/op/pack, test 0
ext/B/t/bytecode, test 1
ext/Devel/Peek/t/Peek, test 1
ext/Encode/t/enc_module, test 1
ext/IO/t/io_dup, test 2
lib/ExtUtils/t/MM_Unix, test 94
lib/Net/ing/t/450_service, test 8
@


1.1.1.8
log
@import perl 5.10.1
@
text
@d27 2
a28 2
(or later) of the VOS GNU C/C++ and GNU Tools product from
Stratus Technologies.
d32 3
a34 6
To build perl from its source code on the Stratus Continuum
platform, you must be have VOS Release 14.5.0 or later, the STCP
product, and the GNU C/C++ and GNU Tools, Release 2.0.1 or
later.  On the V Series platform you must have VOS Release
15.0.0 or later, and any version of the GNU C/C++ and GNU Tools
product.
d48 1
a48 2
you have modify and default write permission to C<<
>system>ported >> and all subdirectories.  Then type
a59 1
     >system>ported>lib>perl5>5.9.0>i786
a72 1
     >system>ported>lib>perl5>site_perl>5.9.0>i786
d112 3
a114 3
PA-RISC and IA-32 hardware floating-point status register so
that the overflow and underflow exceptions do not trap, but
instead automatically convert the result to infinity or zero, as
d117 2
a118 2
values.  This is recorded as suggestion posix-1022, which has
been fixed in VOS Release 15.2 and higher.
d145 1
a145 1
VOS GNU C/C++ and GNU Tools Release 2.0.1 (or later) product from
d155 1
a155 1
February 7, 2008
@


1.1.1.9
log
@import perl 5.16.3 from CPAN - worked on by Andrew Fresh and myself
@
text
@d7 1
a7 1
perlvos - Perl for Stratus VOS
d16 7
a22 12
These are instructions for building Perl from source.  This version of
Perl is not supported on VOS Release 14.2 or earlier releases.  If you
have a Continuum platform running VOS Release 14.3 through 14.7,
download Perl from the Stratus Anonymous FTP site at
ftp://ftp.stratus.com/pub/vos/posix/ga/continuum/continuum.html.  If
you have a V Series platform running VOS Release 15.0 or later, or if
you have a V Series platform running OpenVOS Release 17.0 or later,
download Perl from
ftp://ftp.stratus.com/pub/vos/posix/ga/v-series/v-series.html.  The
perl distribution files on the Stratus anonymous FTP site are stored
in a format called a "bundled file".  Instructions for unbundling the
Perl distribution file are at
d58 7
a64 8
While there are currently no architecture-specific extensions or
modules distributed with perl, the following directories can be
used to hold such files (replace the string VERSION by the
appropriate version number):

     >system>ported>lib>perl5>VERSION>7100
     >system>ported>lib>perl5>VERSION>8000
     >system>ported>lib>perl5>VERSION>i786
d71 1
a71 1
     >system>ported>lib>perl5>site_perl>VERSION
d76 3
a78 3
     >system>ported>lib>perl5>site_perl>VERSION>7100
     >system>ported>lib>perl5>site_perl>VERSION>8000
     >system>ported>lib>perl5>site_perl>VERSION>i786
d117 2
a118 2
As of VOS Release 14.7.0 or later, the VOS POSIX runtime sets up
the PA-RISC and IA-32 hardware floating-point status register so
d161 1
a161 1
October 6, 2010
@


1.1.1.10
log
@Import perl-5.18.2

OK espie@@ sthen@@ deraadt@@
@
text
@d7 1
a7 1
perlvos - Perl for Stratus OpenVOS
d11 1
a11 1
This file contains notes for building perl on the Stratus OpenVOS
d13 2
a14 2
popular on many systems.  See L<perlbook> for a number of good books
on Perl.
d17 12
a28 3
Perl requires the dynamic linking support that is found in OpenVOS
Release 17.1 and thus is not supported on OpenVOS Release 17.0 or
earlier releases.
d31 17
a47 2
pre-compiled, supported copy of perl by purchasing the GNU Tools
product from Stratus Technologies.
d49 1
a49 10
=head1 BUILDING PERL FOR OPENVOS

To build perl from its source code on the Stratus V Series platform
you must have OpenVOS Release 17.1.0 or later, GNU Tools Release
3.5 or later, and the C/POSIX Runtime Libraries.

Follow the normal instructions for building perl; e.g, enter bash, run
the Configure script, then use "gmake" to build perl.

=head1 INSTALLING PERL IN OPENVOS
d55 3
a57 3
After you have built perl using the Configure script, ensure that you
have modify and default write permission to C<< >system>ported >> and
all subdirectories.  Then type
d68 2
d82 2
d93 1
a93 1
=head1 USING PERL IN OPENVOS
d95 1
a95 1
=head2 Restrictions of Perl on OpenVOS
d97 7
a103 7
This port of Perl version 5 prefers Unix-style, slash-separated
pathnames over OpenVOS-style greater-than-separated pathnames.
OpenVOS-style pathnames should work in most contexts, but if you have
trouble, replace all greater-than characters by slash characters.
Because the slash character is used as a pathname delimiter, Perl
cannot process OpenVOS pathnames containing a slash character in a
directory or file name; these must be renamed.
d110 1
a110 1
See the file pod/perlport.pod for more information about the OpenVOS
d113 19
d134 14
a147 5
A number of the perl self-tests fails for various reasons; generally
these are minor and due to subtle differences between common
POSIX-based environments and the OpenVOS POSIX environment.  Ensure
that you conduct sufficient testing of your code to guarantee that it
works properly in the OpenVOS environment.
d156 4
a159 3
If you want a supported version of perl for OpenVOS, purchase the
OpenVOS GNU Tools product from Stratus Technologies, along with a
support contract (or from anyone else who will sell you support).
d167 1
a167 1
February 28, 2013
@


