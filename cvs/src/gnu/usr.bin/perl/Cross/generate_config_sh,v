head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.56
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.54
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.48
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.50
	OPENBSD_5_8_BASE:1.1.1.1
	PERL_5_20_2:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.42
	OPENBSD_5_7_BASE:1.1.1.1
	PERL_5_20_1:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.46
	OPENBSD_5_6_BASE:1.1.1.1
	PERL_5_18_2:1.1.1.1
	PERL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.44
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.40
	OPENBSD_5_4_BASE:1.1.1.1
	PERL_5_16_3:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.38
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.36
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.34
	OPENBSD_5_0:1.1.1.1.0.32
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.30
	OPENBSD_4_9_BASE:1.1.1.1
	PERL_5_12_2:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.28
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.24
	OPENBSD_4_7_BASE:1.1.1.1
	PERL_5_10_1:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.26
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.22
	OPENBSD_4_5_BASE:1.1.1.1
	PERL_5_10_0:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.20
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.18
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.16
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.14
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.12
	OPENBSD_4_0_BASE:1.1.1.1
	PERL_5_8_8:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.10
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.8
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.6
	OPENBSD_3_7_BASE:1.1.1.1
	PERL_5_8_6:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	PERL_5_8_5:1.1.1.1
	PERL_5_8_3:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	PERL_5_8_2:1.1.1.1
	CPAN:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2003.12.03.02.43.39;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.12.03.02.43.39;	author millert;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl

##############################################################################
#
#	generate_config_sh
#		Process that takes an automatically generated config.sh
#		file and allows the environment to overload the values
#		automatically discovered by Configure on our target platform.
#
#	Author	Redvers Davies <red@@criticalintegration.com>
#
##############################################################################

my $config = shift;

my $sys = $ENV{SYS};

my $callbacks = {};
$callbacks->{'ar'} = [\&simple_process, ["AR", "arm-linux-ar"]];
$callbacks->{'archname'} = [\&simple_process, ["SYS", "armv4l-linux"]];
$callbacks->{'cc'} = [\&simple_process, ["CC", "arm-linux-gcc"]];
$callbacks->{'cccdlflags'} = [\&simple_process, ["CFLAGS", ""]];
$callbacks->{'ccdlflags'} = [\&simple_process, ["CFLAGS", ""]];
$callbacks->{'ccflags'} = [\&simple_process, ["CFLAGS", "-fno-strict-aliasing -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"]];
$callbacks->{'ccflags_uselargefiles'} = [\&simple_process, ["CFLAGS", "-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"]];
$callbacks->{'ccname'} = [\&simple_process, ["CC", "arm-linux-gcc"]];
$callbacks->{'cpp'} = [\&simple_process, ["CCP", "arm-linux-cpp"]];
$callbacks->{'cppflags'} = [\&simple_process, ["CCPFLAGS", "-fno-strict-aliasing"]];
$callbacks->{'cpprun'} = [\&simple_process_append, ["CC", "arm-linux-gcc -E", "-E"]];
$callbacks->{'cppstdin'} = [\&simple_process_append, ["CC", "arm-linux-gcc -E", "-E"]];
$callbacks->{'full_ar'} = [\&backtick, ["AR", "which $ENV{AR}", "/usr/local/arm/2.95.3/bin/arm-linux-ar"]];
$callbacks->{'ld'} = [\&simple_process, ["LD", "arm-linux-ld"]];
$callbacks->{'ldflags'} = [\&simple_process, ["LDFLAGS", ""]];
$callbacks->{'ldflags_uselargefiles'} = [\&simple_process, ["LDFLAGS", ""]];
$callbacks->{'myarchname'} = [\&simple_process, ["SYS", "armv4l-linux"]];
$callbacks->{'archlib'} = [\&library_munge, ["SYS", "armv4l-linux"]];
$callbacks->{'archlibexp'} = [\&library_munge, ["SYS", "armv4l-linux"]];
$callbacks->{'installarchlib'} = [\&library_munge, ["SYS", "armv4l-linux"]];
$callbacks->{'installsitearch'} = [\&library_munge, ["SYS", "armv4l-linux"]];
$callbacks->{'sitearch'} = [\&library_munge, ["SYS", "armv4l-linux"]];
$callbacks->{'sitearchexp'} = [\&library_munge, ["SYS", "armv4l-linux"]];

if ($config eq "") {
	die("Please run me as generate_config_sh path/to/original/config.sh");
}

open(FILE, "$config") || die("Unable to open $config");

my $line_in;
while ($line_in = <FILE>) {
	if ($line_in =~ /^#/) {
		next;
	}

	if ($line_in !~ /./) {
		next;
	}

	$line_in =~ /^([^=]+)=(.*)/;
	my $key = $1;
	my $value = $2;
	if (ref($callbacks->{$key}) eq "ARRAY") {
		($callbacks->{$key}[0])->($key,$value);
	} else {
		print($line_in);
	}
}

sub backtick {
	my $key = shift;
	my $value = shift;
	my $envvar = $callbacks->{$key}->[1][0];

	if ($ENV{$envvar}) {
		my $rawtext = `$callbacks->{$key}->[1][1]`;
		chomp($rawtext);
		print("$key=\'$rawtext\'\n");
	} else {
		print("$key=\'$callbacks->{$key}->[1][2]\'\n");
	}
}
	

sub simple_process {
	my $key = shift;
	my $envvar = $callbacks->{$key}->[1][0];

	if ($ENV{$envvar}) {
		print("$key=\"$ENV{$envvar}\"\n");
	} else {
		print("$key=\'$callbacks->{$key}->[1][1]\'\n");
	}

}

sub simple_process_append {
	my $key = shift;
	my $envvar = $callbacks->{$key}->[1][0];

	if ($ENV{$envvar}) {
		print("$key=\"$ENV{$envvar} $callbacks->{$key}->[1][2]\"\n");
	} else {
		print("$key=\'$callbacks->{$key}->[1][1]\'\n");
	}

}

sub library_munge {
	my $key = shift;
	my $value = shift;
	my $envvar = $callbacks->{$key}->[1][0];

	if ($ENV{$envvar}) {
		$value =~ s/$callbacks->{$key}->[1][1]/$ENV{$envvar}/g;
		print("$key=$value\n");
	} else {
		print("$key=$value\n");
	}
		
}












@


1.1.1.1
log
@perl 5.8.2 from CPAN
@
text
@@
