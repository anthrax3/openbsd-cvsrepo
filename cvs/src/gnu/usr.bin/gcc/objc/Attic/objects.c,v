head	1.3;
access;
symbols
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	FSF_2_8_1:1.1.1.2
	FSF_2_8_0:1.1.1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	99.05.26.16.30.46;	author espie;	state dead;
branches;
next	1.2;

1.2
date	98.03.03.21.37.14;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.12.20.01.06.02;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.20.01.06.02;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.02.14.19.27.07;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@So long, and thanks for all the bugs.
@
text
@/* GNU Objective C Runtime class related functions
   Copyright (C) 1993, 1995, 1996 Free Software Foundation, Inc.
   Contributed by Kresten Krab Thorup

This file is part of GNU CC.

GNU CC is free software; you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software
Foundation; either version 2, or (at your option) any later version.

GNU CC is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
details.

You should have received a copy of the GNU General Public License along with
GNU CC; see the file COPYING.  If not, write to the Free Software
Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

/* As a special exception, if you link this library with files compiled with
   GCC to produce an executable, this does not cause the resulting executable
   to be covered by the GNU General Public License. This exception does not
   however invalidate any other reasons why the executable file might be
   covered by the GNU General Public License.  */

#include "../tconfig.h"         /* include defs of bzero for target */
#include "runtime.h"		/* the kitchen sink */

id __objc_object_alloc(Class);
id __objc_object_dispose(id);
id __objc_object_copy(id);

id (*_objc_object_alloc)(Class)   = __objc_object_alloc;   /* !T:SINGLE */ 
id (*_objc_object_dispose)(id)    = __objc_object_dispose; /* !T:SINGLE */
id (*_objc_object_copy)(id)       = __objc_object_copy;    /* !T:SINGLE */

id
class_create_instance(Class class)
{
  id new = nil;
  if (CLS_ISCLASS(class))
    new = (*_objc_object_alloc)(class);
  if (new!=nil)
    {
      memset (new, 0, class->instance_size);
      new->class_pointer = class;
    }
  return new;
}

id
object_copy(id object)
{
  if ((object!=nil)&&CLS_ISCLASS(object->class_pointer))
    return (*_objc_object_copy)(object);
  else
    return nil;
}

id
object_dispose(id object)
{
  if ((object!=nil)&&CLS_ISCLASS(object->class_pointer))
    {
      if (_objc_object_dispose)
        (*_objc_object_dispose)(object);
      else
        objc_free(object);
    }
  return nil;
}

id __objc_object_alloc(Class class)
{
  return (id)objc_malloc(class->instance_size);
}

id __objc_object_dispose(id object) 
{
  objc_free(object);
  return 0;
}

id __objc_object_copy(id object)
{
  id copy = class_create_instance(object->class_pointer);
  memcpy(copy, object, object->class_pointer->instance_size);
  return copy;
}


@


1.2
log
@GCC 2.8.0 merge
@
text
@@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
   Copyright (C) 1993, 1995 Free Software Foundation, Inc.
d34 3
a36 3
id (*_objc_object_alloc)(Class)   = __objc_object_alloc;
id (*_objc_object_dispose)(id)    = __objc_object_dispose;
id (*_objc_object_copy)(id)       = __objc_object_copy;
d69 1
a69 1
        free(object);
d76 1
a76 1
  return (id)__objc_xmalloc(class->instance_size);
d81 1
a81 1
  free(object);
@


1.1.1.1
log
@FSF GCC version 2.7.2
@
text
@@


1.1.1.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
   Copyright (C) 1993, 1995, 1996 Free Software Foundation, Inc.
d34 3
a36 3
id (*_objc_object_alloc)(Class)   = __objc_object_alloc;   /* !T:SINGLE */ 
id (*_objc_object_dispose)(id)    = __objc_object_dispose; /* !T:SINGLE */
id (*_objc_object_copy)(id)       = __objc_object_copy;    /* !T:SINGLE */
d69 1
a69 1
        objc_free(object);
d76 1
a76 1
  return (id)objc_malloc(class->instance_size);
d81 1
a81 1
  objc_free(object);
@

