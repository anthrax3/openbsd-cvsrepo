head	1.4;
access;
symbols
	OPENBSD_2_5:1.3.0.6
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.4
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	FSF_2_8_1:1.1.1.1
	FSF_2_8_0:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	99.05.26.16.21.52;	author espie;	state dead;
branches;
next	1.3;

1.3
date	98.03.03.21.17.15;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	98.02.15.07.55.31;	author niklas;	state dead;
branches;
next	1.1;

1.1
date	98.02.14.19.11.07;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.02.14.19.11.07;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.4
log
@So long, and thanks for all the bugs.
@
text
@/* Copyright (C) 1997 Free Software Foundation, Inc.
   This file is part of GNU CC.  */

typedef struct frame_state
{
  void *cfa;
  void *eh_ptr;
  long cfa_offset;
  long args_size;
  long reg_or_offset[FIRST_PSEUDO_REGISTER+1];
  unsigned short cfa_reg;
  unsigned short retaddr_column;
  char saved[FIRST_PSEUDO_REGISTER+1];
} frame_state;

/* Values for 'saved' above.  */
#define REG_UNSAVED 0
#define REG_SAVED_OFFSET 1
#define REG_SAVED_REG 2

/* The representation for an "object" to be searched for frame unwind info.
   For targets with named sections, one object is an executable or shared
   library; for other targets, one object is one translation unit.

   A copy of this structure declaration is printed by collect2.c;
   keep the copies synchronized!  */

struct object {
  void *pc_begin;
  void *pc_end;
  struct dwarf_fde *fde_begin;
  struct dwarf_fde **fde_array;
  size_t count;
  struct object *next;
};

/* Called either from crtbegin.o or a static constructor to register the
   unwind info for an object or translation unit, respectively.  */

extern void __register_frame_info (void *, struct object *);

/* Similar, but BEGIN is actually a pointer to a table of unwind entries
   for different translation units.  Called from the file generated by
   collect2.  */
extern void __register_frame_info_table (void *, struct object *);

/* Called from crtend.o to deregister the unwind info for an object.  */

extern void __deregister_frame_info (void *);

/* Called from __throw to find the registers to restore for a given
   PC_TARGET.  The caller should allocate a local variable of `struct
   frame_state' (declared in frame.h) and pass its address to STATE_IN.
   Returns NULL on failure, otherwise returns STATE_IN.  */

extern struct frame_state *__frame_state_for (void *, struct frame_state *);
@


1.3
log
@GCC 2.8.0 merge
@
text
@@


1.2
log
@These files were new in the 2.8 import (into the FSF branch) and cvs is stupid
enough to think my branch import want s the new files to end up in the trunk
as well.  Maybe cvs know how to do what I want, but I could not find it in
the manpage
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@
@
text
@@

