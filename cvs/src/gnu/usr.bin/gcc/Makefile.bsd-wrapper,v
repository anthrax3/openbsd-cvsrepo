head	1.66;
access;
symbols
	OPENBSD_6_1:1.64.0.6
	OPENBSD_6_1_BASE:1.64
	OPENBSD_6_0:1.64.0.2
	OPENBSD_6_0_BASE:1.64
	OPENBSD_5_9:1.63.0.12
	OPENBSD_5_9_BASE:1.63
	OPENBSD_5_8:1.63.0.14
	OPENBSD_5_8_BASE:1.63
	OPENBSD_5_7:1.63.0.6
	OPENBSD_5_7_BASE:1.63
	OPENBSD_5_6:1.63.0.10
	OPENBSD_5_6_BASE:1.63
	OPENBSD_5_5:1.63.0.8
	OPENBSD_5_5_BASE:1.63
	OPENBSD_5_4:1.63.0.4
	OPENBSD_5_4_BASE:1.63
	OPENBSD_5_3:1.63.0.2
	OPENBSD_5_3_BASE:1.63
	OPENBSD_5_2:1.61.0.4
	OPENBSD_5_2_BASE:1.61
	OPENBSD_5_1_BASE:1.61
	OPENBSD_5_1:1.61.0.2
	OPENBSD_5_0:1.60.0.6
	OPENBSD_5_0_BASE:1.60
	OPENBSD_4_9:1.60.0.4
	OPENBSD_4_9_BASE:1.60
	OPENBSD_4_8:1.60.0.2
	OPENBSD_4_8_BASE:1.60
	OPENBSD_4_7:1.59.0.2
	OPENBSD_4_7_BASE:1.59
	OPENBSD_4_6:1.57.0.10
	OPENBSD_4_6_BASE:1.57
	OPENBSD_4_5:1.57.0.6
	OPENBSD_4_5_BASE:1.57
	OPENBSD_4_4:1.57.0.4
	OPENBSD_4_4_BASE:1.57
	OPENBSD_4_3:1.57.0.2
	OPENBSD_4_3_BASE:1.57
	OPENBSD_4_2:1.55.0.4
	OPENBSD_4_2_BASE:1.55
	OPENBSD_4_1:1.55.0.2
	OPENBSD_4_1_BASE:1.55
	OPENBSD_4_0:1.54.0.2
	OPENBSD_4_0_BASE:1.54
	OPENBSD_3_9:1.53.0.2
	OPENBSD_3_9_BASE:1.53
	OPENBSD_3_8:1.52.0.2
	OPENBSD_3_8_BASE:1.52
	OPENBSD_3_7:1.51.0.2
	OPENBSD_3_7_BASE:1.51
	OPENBSD_3_6:1.49.0.2
	OPENBSD_3_6_BASE:1.49
	OPENBSD_3_5:1.48.0.2
	OPENBSD_3_5_BASE:1.48
	OPENBSD_2_5:1.35.0.2
	OPENBSD_2_5_BASE:1.35
	OPENBSD_2_4:1.34.0.2
	OPENBSD_2_4_BASE:1.34
	OPENBSD_2_3:1.33.0.2
	OPENBSD_2_3_BASE:1.33
	OPENBSD_2_2:1.29.0.2
	OPENBSD_2_2_BASE:1.29
	OPENBSD_2_1:1.23.0.2
	OPENBSD_2_1_BASE:1.23
	OPENBSD_2_0:1.17.0.2
	OPENBSD_2_0_BASE:1.17;
locks; strict;
comment	@# @;


1.66
date	2017.07.04.12.43.07;	author espie;	state Exp;
branches;
next	1.65;
commitid	iA6Xsw55PwPCvU7i;

1.65
date	2017.06.12.18.49.34;	author espie;	state Exp;
branches;
next	1.64;
commitid	uAoIMHRVhjBrJMEB;

1.64
date	2016.03.30.06.38.40;	author jmc;	state Exp;
branches;
next	1.63;
commitid	LN9ijdk9SEnzWAbM;

1.63
date	2012.12.09.22.04.51;	author miod;	state Exp;
branches;
next	1.62;

1.62
date	2012.11.28.20.46.15;	author miod;	state Exp;
branches;
next	1.61;

1.61
date	2011.09.19.19.36.32;	author naddy;	state Exp;
branches;
next	1.60;

1.60
date	2010.05.25.00.24.58;	author espie;	state Exp;
branches;
next	1.59;

1.59
date	2009.07.26.22.51.28;	author kurt;	state Exp;
branches;
next	1.58;

1.58
date	2009.07.25.02.04.02;	author kurt;	state Exp;
branches;
next	1.57;

1.57
date	2007.10.25.17.42.22;	author espie;	state Exp;
branches;
next	1.56;

1.56
date	2007.09.03.14.40.16;	author millert;	state Exp;
branches;
next	1.55;

1.55
date	2006.11.22.19.18.48;	author drahn;	state Exp;
branches;
next	1.54;

1.54
date	2006.07.12.23.00.07;	author espie;	state Exp;
branches;
next	1.53;

1.53
date	2005.12.22.18.15.01;	author kettenis;	state Exp;
branches;
next	1.52;

1.52
date	2005.04.08.21.11.08;	author kettenis;	state Exp;
branches;
next	1.51;

1.51
date	2004.12.25.00.06.30;	author espie;	state Exp;
branches;
next	1.50;

1.50
date	2004.10.21.20.47.29;	author grange;	state Exp;
branches;
next	1.49;

1.49
date	2004.09.06.09.01.05;	author pefo;	state Exp;
branches;
next	1.48;

1.48
date	2004.02.27.17.40.15;	author deraadt;	state Exp;
branches;
next	1.47;

1.47
date	2004.02.21.01.06.47;	author espie;	state Exp;
branches;
next	1.46;

1.46
date	2004.02.20.23.27.57;	author deraadt;	state Exp;
branches;
next	1.45;

1.45
date	2004.01.31.20.27.58;	author espie;	state Exp;
branches;
next	1.44;

1.44
date	2004.01.31.20.25.36;	author espie;	state Exp;
branches;
next	1.43;

1.43
date	2004.01.28.23.40.36;	author espie;	state Exp;
branches;
next	1.42;

1.42
date	2004.01.15.17.48.03;	author espie;	state Exp;
branches;
next	1.41;

1.41
date	2004.01.15.17.46.53;	author espie;	state Exp;
branches;
next	1.40;

1.40
date	2003.11.29.14.55.05;	author espie;	state Exp;
branches;
next	1.39;

1.39
date	2003.11.29.14.24.49;	author espie;	state Exp;
branches;
next	1.38;

1.38
date	2003.11.29.14.21.57;	author espie;	state Exp;
branches;
next	1.37;

1.37
date	2003.11.29.13.29.55;	author espie;	state Exp;
branches;
next	1.36;

1.36
date	99.05.26.16.20.32;	author espie;	state dead;
branches;
next	1.35;

1.35
date	99.02.04.00.07.14;	author millert;	state Exp;
branches;
next	1.34;

1.34
date	98.10.18.20.02.30;	author millert;	state Exp;
branches;
next	1.33;

1.33
date	98.03.06.21.38.01;	author niklas;	state Exp;
branches;
next	1.32;

1.32
date	98.03.04.03.55.34;	author millert;	state Exp;
branches;
next	1.31;

1.31
date	98.03.03.21.14.24;	author niklas;	state Exp;
branches;
next	1.30;

1.30
date	97.11.04.13.20.57;	author kstailey;	state Exp;
branches;
next	1.29;

1.29
date	97.08.01.20.13.58;	author pefo;	state Exp;
branches;
next	1.28;

1.28
date	97.07.30.13.37.07;	author kstailey;	state Exp;
branches;
next	1.27;

1.27
date	97.07.24.20.24.36;	author kstailey;	state Exp;
branches;
next	1.26;

1.26
date	97.07.24.19.27.50;	author kstailey;	state Exp;
branches;
next	1.25;

1.25
date	97.06.23.22.20.26;	author kstailey;	state Exp;
branches;
next	1.24;

1.24
date	97.06.23.03.58.39;	author kstailey;	state Exp;
branches;
next	1.23;

1.23
date	97.04.12.21.54.42;	author pefo;	state Exp;
branches;
next	1.22;

1.22
date	97.04.07.00.18.17;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	96.12.16.01.07.22;	author downsj;	state Exp;
branches;
next	1.20;

1.20
date	96.11.24.00.43.23;	author niklas;	state Exp;
branches;
next	1.19;

1.19
date	96.10.18.11.52.26;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	96.10.12.21.30.12;	author niklas;	state Exp;
branches;
next	1.17;

1.17
date	96.08.26.21.25.20;	author niklas;	state Exp;
branches;
next	1.16;

1.16
date	96.08.25.15.39.13;	author downsj;	state Exp;
branches;
next	1.15;

1.15
date	96.08.25.09.56.57;	author downsj;	state Exp;
branches;
next	1.14;

1.14
date	96.08.23.20.57.36;	author niklas;	state Exp;
branches;
next	1.13;

1.13
date	96.07.31.00.18.13;	author niklas;	state Exp;
branches;
next	1.12;

1.12
date	96.07.27.02.50.15;	author downsj;	state Exp;
branches;
next	1.11;

1.11
date	96.04.20.21.59.44;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	96.04.18.11.51.15;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	96.02.18.06.22.17;	author etheisen;	state Exp;
branches;
next	1.8;

1.8
date	96.02.17.07.32.28;	author etheisen;	state Exp;
branches;
next	1.7;

1.7
date	96.02.06.06.58.26;	author etheisen;	state Exp;
branches;
next	1.6;

1.6
date	96.02.05.01.39.13;	author etheisen;	state Exp;
branches;
next	1.5;

1.5
date	96.02.04.10.52.33;	author etheisen;	state Exp;
branches;
next	1.4;

1.4
date	96.02.02.00.22.56;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.01.01.23.51.28;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.27.10.41.48;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.12.21.01.16.07;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.66
log
@complete "nodepend" in source

- mix-up between .ALLSRC and .IMPSRC, compile the right gc.c file
- add explicit targets for pre-generated stuff
@
text
@#	$OpenBSD: Makefile.bsd-wrapper,v 1.65 2017/06/12 18:49:34 espie Exp $

MAN=		gcc.1 cpp.1 gcov.1 protoize.1

BINDIR=/usr/bin
.if defined(BOOTSTRAP)
LANGUAGES=--enable-languages=c
.else
LANGUAGES=--enable-languages='c,c++,objc' 
.endif
V=3.3.6

.SUFFIXES:	.1
.PATH.1:	${.CURDIR}/gcc ${.CURDIR}/gcc/doc

LIBIBERTY_INCLUDES=${.CURDIR}/../../lib/libiberty/include
GNUCFLAGS=	${CFLAGS} ${COPTS} -DOPENBSD_NATIVE \
		-I${LIBIBERTY_INCLUDES}

MAKE_FLAGS= 	CFLAGS="${GNUCFLAGS}" \
		CC="${CC}" LDFLAGS="${LDSTATIC}" \
		DEMANGLER_PROG= \
		DEMANGLE_H= \
		LIBIBERTY_INCLUDES=${LIBIBERTY_INCLUDES} \
		LIBGCC2_INCLUDES=-I${LIBIBERTY_INCLUDES} \
		BUILD_LIBIBERTY=-liberty \
		LIBIBERTY=-liberty \
		HOST_LIBDEPS= \
		LIBDEPS= \
		build_infodir=.

GXX_INCDIR=	/usr/include/g++
CLEANFILES=	.gdbinit */.gdbinit *.info* \
		c-parse.c c-parse.h c-parse.y cexp.c cp/parse.c cp/parse.h \
		f/*.info* objc/objc-parse.c objc/objc-parse.y target_path \
		print-rtl1.c gengtype-lex.c gengtype-yacc.c gengtype-yacc.h \
		genrtl.c genrtl.h fixinc.sh fixinc/Makefile \
		po/Makefile  po/Makefile.in  po/POTFILES

GCCARCH=	${MACHINE_ARCH}-unknown-openbsd${OSREV}
GCCINC=	/usr/lib/gcc-lib/${GCCARCH}/$V/include

# cross-compilation
.if defined(CROSS_HOST) && defined(TARGET_ARCH) && defined(CROSSDIR)
CONFIGTARGET=	--build=${CROSS_HOST}-unknown-openbsd${OSREV} \
    --target=${TARGET_ARCH}-unknown-openbsd${OSREV}

CONFIGPREFIX=	${CROSSDIR}/usr
PATH=		/bin:/usr/bin:/sbin:/usr/sbin:${CROSSDIR}/usr/bin
GXX_INCDIR=	${CROSSDIR}/usr/include/g++
GNUCFLAGS=	${CFLAGS} ${COPTS} -DOPENBSD_CROSS -I${LIBIBERTY_INCLUDES}
HOSTCFLAGS=	${CFLAGS} ${COPTS} -DOPENBSD_CROSS -I${LIBIBERTY_INCLUDES}
HOST_CC=cc
MAKE_FLAGS+= 	CFLAGS_FOR_BUILD="${HOSTCFLAGS}" HOST_CC=cc
.elif defined(TARGET_ARCH) && defined(CROSSDIR)
CONFIGTARGET=	--target=${TARGET_ARCH}-unknown-openbsd${OSREV}
CONFIGPREFIX=	${CROSSDIR}/usr
MAKE_FLAGS+=	GCC_FOR_TARGET="./xgcc -B./ -I${CROSSDIR}/usr/include"
PATH=		/bin:/usr/bin:/sbin:/usr/sbin:${CROSSDIR}/usr/bin
GXX_INCDIR=	${CROSSDIR}/usr/include/g++
GNUCFLAGS=	${CFLAGS} ${COPTS} -DOPENBSD_CROSS -I${LIBIBERTY_INCLUDES}
.else
CONFIGTARGET=
CONFIGPREFIX=	/usr
PATH=		/bin:/usr/bin:/sbin:/usr/sbin
.endif

all:	config.status
	exec env PATH="${PATH}" ${MAKE} ${MAKE_FLAGS} all doc proto

tconfig.h: config.status
	exec ${MAKE} ${MAKE_FLAGS} tconfig.h

tree-check.h: config.status
	exec ${MAKE} ${MAKE_FLAGS} $@@


.FORCE:	.IGNORE

.include <bsd.own.mk>

.ifdef GLOBAL_AUTOCONF_CACHE
CF=	--cache-file=${GLOBAL_AUTOCONF_CACHE}
.else
CF=
.endif

config.status: gcc/Makefile.in gcc/configure gcc/c-parse.in
	PATH="${PATH}" \
	INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
	CPPFLAGS=-I${LIBIBERTY_INCLUDES} \
	MAKEINFO='makeinfo --no-split' \
	/bin/sh ${.CURDIR}/gcc/configure --with-gnu-as --with-gnu-ld \
		--prefix=${CONFIGPREFIX} --mandir='$$(prefix)/share/man' \
		--with-local-prefix=/usr ${CF} \
		${LANGUAGES} --enable-cpp --disable-nls \
		--with-gxx-include-dir=${GXX_INCDIR} \
		--enable-__cxa_atexit \
		--enable-threads=posix \
		${CONFIGTARGET} ${GCCARCH} && touch config.status

.ifdef NOMAN
maninstall:
	@@echo NOMAN is set
.endif

# XXX INSTALL_TARGET should be install-normal, more or less
# the only reason is not so is because our man handling is special
# (pre-formatted) and also because of cpp, that we install by hand
# elsewhere, until we get rid of that old `compatibility' script.

target_path: config.status
	__target=`sed -n '/^target=/s/target=//p' Makefile`; \
	__version=`sed -n '/^gcc_version=/s/gcc_version=//p' Makefile`; \
	echo /usr/lib/gcc-lib/$$__target/$$__version >target_path

install:	maninstall target_path
	${MAKE} ${MAKE_FLAGS} \
		prefix=/usr \
		INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
		GXX_TARGET_INSTALL_NAME=${.OBJDIR}/dummy1 \
		CXX_TARGET_INSTALL_NAME=${.OBJDIR}/dummy2 \
		infodir=/usr/share/info \
		tooldir=/tmp assertdir=/tmp \
		bindir=$(BINDIR) \
		install-common install-multilib \
		install-info intl.install \
		lang.install-normal
	chown -R ${BINOWN}:${BINGRP} ${DESTDIR}/usr/lib/gcc-lib
	chmod -R a+rX ${DESTDIR}/usr/lib/gcc-lib
	mkdir -p ${DESTDIR}/usr/libexec ${DESTDIR}/usr/bin
#	if [ -e ${DESTDIR}/usr/lib/libf2c.a ]; then \
#		chown ${BINOWN}:${BINGRP} ${DESTDIR}/usr/lib/libf2c.a; \
#		chmod 444 ${DESTDIR}/usr/lib/libf2c.a; \
#	fi
	if [ -e ${DESTDIR}/usr/include/f2c.h ]; then \
		chown ${BINOWN}:${BINGRP} ${DESTDIR}/usr/include/f2c.h; \
		chmod 444 ${DESTDIR}/usr/include/f2c.h; \
	fi
	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -m 755 cpp \
	   ${DESTDIR}/usr/libexec/cpp
	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -m 755 xgcc \
	   ${DESTDIR}/usr/bin/gcc
	ln -f ${DESTDIR}/usr/bin/gcc ${DESTDIR}/usr/bin/cc

clean cleandir: 
	-@@if [ -e Makefile ]; then ${MAKE} distclean; fi
	-rm -f ${CLEANFILES}

${MAN}: config.status
	exec ${MAKE} ${MAKE_FLAGS} generated-manpages

FILES= ${.CURDIR}/gcc/unwind.h
.if ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "amd64"
FILES+=${.CURDIR}/gcc/config/i386/mmintrin.h \
	${.CURDIR}/gcc/config/i386/xmmintrin.h \
	${.CURDIR}/gcc/config/i386/emmintrin.h \
	${.CURDIR}/gcc/config/i386/pmmintrin.h
.elif ${MACHINE_ARCH} == "powerpc"
FILES+=${.CURDIR}/gcc/config/rs6000/altivec.h
.endif

includes:
	mkdir -p ${DESTDIR}${GCCINC}
	for i in ${FILES}; do \
		j=`basename $$i`; \
		cmp -s $$i ${DESTDIR}${GCCINC}/$$j || \
		    ${INSTALL} ${INSTALL_COPY} -m 444 $$i ${DESTDIR}${GCCINC}/$$j; \
		ln -sf ${GCCINC}/$$j ${DESTDIR}/usr/include/$$j; \
	done

tags:
	# Nothing here so far...

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
.ifndef NOMAN
.include <bsd.man.mk>
.endif
@


1.65
log
@destroy lint remnants.
okay millert@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.64 2016/03/30 06:38:40 jmc Exp $
d150 1
a150 1
depend: config.status
@


1.64
log
@for some time now mandoc has not required MLINKS to function
correctly - logically complete that now by removing MLINKS from base;

authors need only to ensure there is an entry in NAME for any function/
util being added. MLINKS will still work, and remain for perl to ease
upgrades;

ok nicm (curses) bcook (ssl)
ok schwarze, who provided a lot of feedback and assistance
ok tb natano jung
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.63 2012/12/09 22:04:51 miod Exp $
a170 3

lint:
	# Nothing here so far...
@


1.63
log
@Remove vax-specific configuration constructs.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.62 2012/11/28 20:46:15 miod Exp $
a3 2
MLINKS+=	protoize.1 unprotoize.1
MLINKS+=	gcc.1 cc.1
a9 1
MLINKS+=	gcc.1 g++.1 gcc.1 c++.1
@


1.62
log
@merge conflicts
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.61 2011/09/19 19:36:32 naddy Exp $
a22 1
VAXHOST_CFLAGS=	-DIN_GCC -DOPENBSD_NATIVE -DHAVE_CONFIG_H -O0
a34 4
.if ${MACHINE_ARCH} == "vax"
MAKE_FLAGS+=	HOST_CFLAGS="${VAXHOST_CFLAGS}"
.endif

a64 1
VAXHOST_CFLAGS=	-DIN_GCC -DHAVE_CONFIG_H -O0
@


1.61
log
@- enable thread model posix for gcc 3 which makes dwarf2 exception
handling thread safe and enables thread safety for libstdc++
- bump libstdc++ major

See faq/current.html for instructions on how to correctly build
userland for this change.

originally from kurt@@, ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.60 2010/05/25 00:24:58 espie Exp $
d14 1
a14 1
V=3.3.5
@


1.60
log
@unlink g77 from the build.
as discussed with Theo, so that he can synch set.

(eventual gcc2 fallout to fix later)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.59 2009/07/26 22:51:28 kurt Exp $
d108 1
@


1.59
log
@- revert thread model posix since it broke the build for hppa. will revist
when all archs are fully tested and working.
- major bump libstdc++
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.58 2009/07/25 02:04:02 kurt Exp $
d11 1
a11 2
LANGUAGES=--enable-languages='c,c++,objc,f77' 
MAN+=		f/g77.1
a12 1
MLINKS+=	g77.1 f77.1
a152 5
	if [ -f ${DESTDIR}/usr/bin/g77 ]; then \
		ln -f ${DESTDIR}/usr/bin/g77 ${DESTDIR}/usr/bin/f77; \
	fi
#	ln -fs `cat target-path`/cpp \
#		${DESTDIR}/usr/libexec
@


1.58
log
@- enable thread model posix for gcc 3 which makes dwarf2 exception
handling thread safe and enables thread safety for libstdc++
- include -D_REENTRANT when -pthread cpp arg is present (needed so
boost can detect -pthread on the command line).
- bump libstdc++ major

See faq/current.html for instructions on how to correctly build
userland for this change.

okay kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.57 2007/10/25 17:42:22 espie Exp $
a109 1
		--enable-threads=posix \
@


1.57
log
@fix dependency. ok millert@@, \_o< miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.56 2007/09/03 14:40:16 millert Exp $
d110 1
@


1.56
log
@Add __cxa_atexit() support for gcc3.  This provides support for shared object destructors called at dlclose() time.  Inspired by similar changes in FreeBSD and NetBSD.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.55 2006/11/22 19:18:48 drahn Exp $
d122 1
a122 1
target_path: Makefile
@


1.55
log
@Improved cross build support for gcc on OpenBSD. allows the cross built
compiler to have the same default options as native.
The changes to cross build a native compiler is not quite complete.
"Get this in" miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.54 2006/07/12 23:00:07 espie Exp $
d109 1
@


1.54
log
@makeinfo --no-split, simplifies sets immensely.
Approved deraadt@@, kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.53 2005/12/22 18:15:01 kettenis Exp $
d54 12
a65 1
.if defined(TARGET_ARCH) && defined(CROSSDIR)
d71 1
a71 1
GNUCFLAGS=	${CFLAGS} ${COPTS} -I${LIBIBERTY_INCLUDES}
@


1.53
log
@Install header files for MMX/SSE intrinsics on amd64 too.
ok pval@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.52 2005/04/08 21:11:08 kettenis Exp $
a17 8
FAKE_FILES=/usr/share/info/g77.info-21 \
	/usr/share/info/gcc.info-25 \
	/usr/share/info/gcc.info-26 \
	/usr/share/info/gcc.info-27 \
	/usr/share/info/gcc.info-28 \
	/usr/share/info/gcc.info-29 \
	/usr/share/info/gcc.info-30

d92 1
a147 3
	for i in ${FAKE_FILES}; do \
	    touch ${DESTDIR}$$i; \
	done
@


1.52
log
@amd64 canonicalization.
ok deraadt@@, pvalchev@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.51 2004/12/25 00:06:30 espie Exp $
d167 1
a167 1
.if ${MACHINE_ARCH} == "i386"
@


1.51
log
@some new i386-specific include files. Adjust directory name.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.50 2004/10/21 20:47:29 grange Exp $
d58 1
a58 8
.if ${MACHINE} == "amd64"
M_ARCH=		x86_64
.else
M_ARCH=		${MACHINE_ARCH}
.endif


GCCARCH=	${M_ARCH}-unknown-openbsd${OSREV}
d167 1
a167 1
.if ${M_ARCH} == "i386"
d172 1
a172 1
.elif ${M_ARCH} == "powerpc"
@


1.50
log
@Move the cross glue from the root makefile to the toolchain's,
allowing bulding cross-tools with new binutils and gcc3.

ok drahn@@ brad@@ espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.49 2004/09/06 09:01:05 pefo Exp $
d16 1
a16 1
V=3.3.2
d176 3
a178 1
	${.CURDIR}/gcc/config/i386/xmmintrin.h
@


1.49
log
@Add t-openbsd64 to handle some libgcc.a build issues (needed functions)
Change configuration to mips64 with default ABI = N64 (enhanced 64 bit ABI)
we also support the older O32 and N32 abi for building boot stuff.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.48 2004/02/27 17:40:15 deraadt Exp $
d68 15
d84 1
a84 1
	exec ${MAKE} ${MAKE_FLAGS} all doc proto
d104 1
a104 1
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" \
d108 1
a108 1
		--prefix=/usr --mandir='$$(prefix)/share/man' \
d111 2
a112 1
		--with-gxx-include-dir=${GXX_INCDIR} ${GCCARCH} && touch config.status
d157 3
a159 2
	[ -f ${DESTDIR}/usr/bin/g77 ] && \
		ln -f ${DESTDIR}/usr/bin/g77 ${DESTDIR}/usr/bin/f77
@


1.48
log
@cope with MACHINE_ARCH changing from x86_64 to amd64.  For now, we want
the toolchain to remain at the name x86_64.  Tested on all other
architectures that care.  Done as very small snippets, so that espie does
not blow a fuse.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.47 2004/02/21 01:06:47 espie Exp $
a59 4
.elif ${MACHINE} == "arc" || ${MACHINE} == "pmax" || ${MACHINE} == "wgrisc"
M_ARCH=		mipsel
.elif ${MACHINE} == "hkmips" || ${MACHINE} == "sgi"
M_ARCH=		mips
@


1.47
log
@lose gcc-local as well.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.46 2004/02/20 23:27:57 deraadt Exp $
d58 3
a60 1
.if ${MACHINE} == "arc" || ${MACHINE} == "pmax" || ${MACHINE} == "wgrisc"
@


1.46
log
@do not install a ccpp.1 link
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.45 2004/01/31 20:27:58 espie Exp $
d3 1
a3 1
MAN=		gcc.1 cpp.1 gcov.1 gcc-local.1 protoize.1
@


1.45
log
@add documentation (straight copy from egcs)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.44 2004/01/31 20:25:36 espie Exp $
a2 1
#MAN=		cccp.1 gcc.1 gcc-local.1 protoize.1 gcov.1
a3 1
#MLINKS+=	cccp.1 cpp.1
d5 1
a5 1
MLINKS+=	gcc.1 cc.1 cpp.1 ccpp.1
@


1.44
log
@closer to gcc2: bring back protoize.
fake more files, to please theo.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.43 2004/01/28 23:40:36 espie Exp $
d4 1
a4 1
MAN=		gcc.1 cpp.1 gcov.1 gcc-local.1
d6 1
a6 1
#MLINKS+=	protoize.1 unprotoize.1
@


1.43
log
@install more stuff, and fake some, to please theo.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.42 2004/01/15 17:48:03 espie Exp $
d21 6
a26 6
	/usr/share/info/gcc-info-25 \
	/usr/share/info/gcc-info-26 \
	/usr/share/info/gcc-info-27 \
	/usr/share/info/gcc-info-28 \
	/usr/share/info/gcc-info-29 \
	/usr/share/info/gcc-info-30
d73 1
a73 1
	exec ${MAKE} ${MAKE_FLAGS} all doc
@


1.42
log
@target for tconfig.h, to use with libobjc.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.40 2003/11/29 14:55:05 espie Exp $
d4 1
a4 1
MAN=		gcc.1 cpp.1 gcov.1
d7 1
d20 8
d149 3
@


1.41
log
@install compiler/arch-dependent headers.
ok millert@@
@
text
@d66 3
@


1.40
log
@generate info files in the right location.
Fix clean: to clean most of the stuff it should.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.39 2003/11/29 14:24:49 espie Exp $
d17 1
d61 1
d114 1
a114 1
		install-common install-headers install-multilib \
d144 17
@


1.39
log
@Don't bother trying to install stuff that doesn't exist.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.38 2003/11/29 14:21:57 espie Exp $
d45 2
a46 1
		f/*.info* objc-parse.c objc-parse.y target_path \
@


1.38
log
@regenerate source for manpages in depend stage so MAN= doesn't fall over.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.37 2003/11/29 13:29:55 espie Exp $
a48 3
CXX_HEADERS=	${.CURDIR}/gcc/cp/inc/typeinfo ${.CURDIR}/cp/inc/exception \
		${.CURDIR}/gcc/cp/inc/new ${.CURDIR}/gcc/cp/inc/new.h

a85 8

includes:
	@@-for i in ${CXX_HEADERS}; do \
		j=`basename $$i` \
		cmp -s $$i ${DESTDIR}/${GXX_INCDIR}/$$j || \
		    ${INSTALL} ${INSTALL_COPY} -m 444 $$i \
		    ${DESTDIR}/${GXX_INCDIR}; \
	done
@


1.37
log
@OpenBSD build engine.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.15 2003/04/08 01:55:05 millert Exp $
d150 2
a151 2
depend:
	# Nothing here so far...
@


1.36
log
@So long, and thanks for all the bugs.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.35 1999/02/04 00:07:14 millert Exp $
d3 41
a43 8
MAN=		cccp.1 gcc.1 cp/g++.1 f/g77.1
MLINKS+=	gcc.1 cc.1
MLINKS+=	cccp.1 cpp.1
MLINKS+=	g++.1 c++.1

GPP_INC_DIR=	/usr/include/g++
GNUCFLAGS=	CFLAGS="${CFLAGS} ${COPTS} -DOPENBSD_NATIVE"
CLEANFILES=	.gdbinit cp/.gdbinit *.info* bi-parser.c bi-parser.h \
d45 6
a50 3
		objc-parse.c objc-parse.y f/.gdbinit f/*.info*
CXX_HEADERS=	${.CURDIR}/cp/inc/typeinfo ${.CURDIR}/cp/inc/exception \
		${.CURDIR}/cp/inc/new ${.CURDIR}/cp/inc/new.h
d60 2
a61 1
GCCARCH=	${M_ARCH}-unknown-openbsd`uname -r`
d64 4
a67 2
	${MAKE} ${GNUCFLAGS} BISON=yacc CC="${CC}" LDFLAGS="${LDSTATIC}" \
		build_infodir=. all doc
d80 1
a80 4
config: .FORCE
.ifndef GLOBAL_AUTOCONF_CACHE
	-rm -f config.cache
.endif
d83 6
a88 10
	/bin/sh ${.CURDIR}/configure --with-gnu-as --with-gnu-ld \
		--prefix=/usr --with-local-prefix=/usr ${CF} \
		--with-gxx-include-dir=${GPP_INC_DIR} ${GCCARCH}

config.status: Makefile.in configure c-parse.in
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" \
	INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
	/bin/sh ${.CURDIR}/configure --with-gnu-as --with-gnu-ld \
		--prefix=/usr --with-local-prefix=/usr ${CF} \
		--with-gxx-include-dir=${GPP_INC_DIR} ${GCCARCH} && touch config.status
d93 1
a93 1
		cmp -s $$i ${DESTDIR}/${GPP_INC_DIR}/$$j || \
d95 1
a95 1
		    ${DESTDIR}/${GPP_INC_DIR}; \
d103 13
a115 2
install:	maninstall
	${MAKE} ${GNUCFLAGS} prefix=${DESTDIR}/usr \
d117 9
a125 7
		infodir=${DESTDIR}/usr/share/info \
		build_infodir=. \
		tooldir=/tmp assertdir=/tmp INSTALL_DRIVER=install-driver \
		INSTALL_MAN= NO_TARGET_GCC=true bindir=${DESTDIR}/usr/bin \
		install
	ln -f ${DESTDIR}/usr/bin/gcc ${DESTDIR}/usr/bin/cc
	chown -R ${BINOWN}.${BINGRP} ${DESTDIR}/usr/lib/gcc-lib
d127 5
a131 4
	if [ -e ${DESTDIR}/usr/lib/libf2c.a ]; then \
		chown ${BINOWN}.${BINGRP} ${DESTDIR}/usr/lib/libf2c.a; \
		chmod 444 ${DESTDIR}/usr/lib/libf2c.a; \
	fi
d133 1
a133 1
		chown ${BINOWN}.${BINGRP} ${DESTDIR}/usr/include/f2c.h; \
d136 9
a144 4
	__target=`sed -n '/^target=/s/target=//p' Makefile`; \
	__version=`sed -n '/^version=/s/version=//p' Makefile`; \
	ln -fs /usr/lib/gcc-lib/$$__target/$$__version/cpp \
		${DESTDIR}/usr/libexec
d146 1
a146 2
clean cleandir:
	rm -f ${CLEANFILES}
d148 1
@


1.35
log
@When passing ${CC} and ${LDSTATIC} one must use quotes since they may contain more than one word; wd@@ics.nara-wu.ac.jp
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.34 1998/10/18 20:02:30 millert Exp $
@


1.34
log
@set PATH before running configure since we can't rely on the user's path being sane
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.33 1998/03/06 21:38:01 niklas Exp $
d27 1
a27 1
	${MAKE} ${GNUCFLAGS} BISON=yacc CC=${CC} LDFLAGS=${LDSTATIC} \
@


1.33
log
@Do not install a ${arch}-unknown-openbsd2.x link
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.32 1998/03/04 03:55:34 millert Exp $
d45 1
d52 1
@


1.32
log
@fix cmp of g++ include files
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.31 1998/03/03 21:14:24 niklas Exp $
d74 3
a76 2
		tooldir=/tmp assertdir=/tmp INSTALL_MAN= NO_TARGET_GCC=true \
		bindir=${DESTDIR}/usr/bin install
@


1.31
log
@GCC 2.8.0 merge
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.30 1997/11/04 13:20:57 kstailey Exp $
d58 2
a59 1
		cmp -s $$i ${DESTDIR}/${GPP_INC_DIR}/$$i || \
@


1.30
log
@better GLOBAL_AUTCONF_CACHE
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.29 1997/08/01 20:13:58 pefo Exp $
d13 2
d30 1
d47 2
a48 2
		--prefix=/usr --local-prefix=/usr ${CF} \
		--gxx-include=${GPP_INC_DIR} ${GCCARCH}
d53 9
a61 2
		--prefix=/usr --local-prefix=/usr ${CF} \
		--gxx-include=${GPP_INC_DIR} ${GCCARCH} && touch config.status
@


1.29
log
@add wgrisc to mipsle machines
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.28 1997/07/30 13:37:07 kstailey Exp $
d33 1
a33 15
config: .FORCE
	-rm -f config.cache
	INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
	/bin/sh ${.CURDIR}/configure --with-gnu-as --with-gnu-ld \
		--prefix=/usr --local-prefix=/usr \
		--gxx-include=${GPP_INC_DIR} \
		--cache-file=${GLOBAL_AUTOCONF_CACHE} \
		${GCCARCH}
config.status: Makefile.in configure c-parse.in
	INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
	/bin/sh ${.CURDIR}/configure --with-gnu-as --with-gnu-ld \
		--prefix=/usr --local-prefix=/usr \
		--gxx-include=${GPP_INC_DIR} \
		--cache-file=${GLOBAL_AUTOCONF_CACHE} \
		${GCCARCH} && touch config.status
d35 3
d39 1
d41 1
d44 1
a44 1
		--prefix=/usr --local-prefix=/usr \
d50 1
a50 1
		--prefix=/usr --local-prefix=/usr \
a51 3
.endif

.include <bsd.own.mk>
@


1.28
log
@respect INSTALL_STRIP=-s on alpha
add GLOBAL_AUTCONF_CACHE (for the fortran bits)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.27 1997/07/24 20:24:36 kstailey Exp $
d14 1
a14 1
.if ${MACHINE} == "arc" || ${MACHINE} == "pmax"
@


1.27
log
@don't hardcode `install'
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.26 1997/07/24 19:27:50 kstailey Exp $
d30 3
d35 17
d55 1
d57 1
d61 1
@


1.26
log
@respect ``INSTALL_STRIP=-s'' pr 188
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.25 1997/06/23 22:20:26 kstailey Exp $
a46 6
.if defined (INSTALL_STRIP) && ${INSTALL_STRIP} == "-s"
INST_PROG='/usr/bin/install -cs'
.else
INST_PROG='/usr/bin/install -c'
.endif

d49 1
a49 1
		INSTALL_PROGRAM=$(INST_PROG) \
@


1.25
log
@respect NOMAN during install
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.24 1997/06/23 03:58:39 kstailey Exp $
d39 3
d47 6
d55 1
@


1.24
log
@respect NOMAN
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.23 1997/04/12 21:54:42 pefo Exp $
d39 4
@


1.23
log
@Make MIPS configuration more consistent
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.22 1997/04/07 00:18:17 millert Exp $
d77 1
d79 1
@


1.22
log
@Re-run configure if Makefile.in, configure, or c-parse.in changes.
This should fix the problem people were seeing with gcc reporting
unresolved symbols (Makefile and Makefile.in were inconsistent).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.21 1996/12/16 01:07:22 downsj Exp $
d15 3
a17 3
M_ARCH=		mips64el
.elif ${MACHINE} == "laguna"
M_ARCH=		mips64
@


1.21
log
@Closer to being correct; set local_prefix as well so it stays out of
/usr/local.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.20 1996/11/24 00:43:23 niklas Exp $
d35 1
a35 1
config.status:
d38 1
a38 1
		--gxx-include=${GPP_INC_DIR} ${GCCARCH}
@


1.20
log
@Feed on COPTS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.19 1996/10/18 11:52:26 deraadt Exp $
d33 2
a34 1
		--prefix=/usr --gxx-include=${GPP_INC_DIR} ${GCCARCH}
d37 2
a38 1
		--prefix=/usr --gxx-include=${GPP_INC_DIR} ${GCCARCH}
d52 5
a56 1
	fi; \
@


1.19
log
@${MACHINE_ARCH}-unknown-openbsd2.0 always, except for mips where little/big-endian is significant
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.18 1996/10/12 21:30:12 niklas Exp $
d9 1
a9 1
GNUCFLAGS=	CFLAGS="${CFLAGS} -DOPENBSD_NATIVE"
d25 1
a25 1
	${MAKE} ${GNUCFLAGS} BISON=yacc LDFLAGS=${LDSTATIC} \
@


1.18
log
@clean better
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.17 1996/08/26 21:25:20 niklas Exp $
d14 10
d33 1
a33 2
		--prefix=/usr --gxx-include=${GPP_INC_DIR}

d36 1
a36 1
		--prefix=/usr --gxx-include=${GPP_INC_DIR}
@


1.17
log
@Our /usr/libexec/cpp link creation wasn't suitable for cross-builds
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.16 1996/08/25 15:39:13 downsj Exp $
d12 1
a12 1
		objc-parse.c objc-parse.y
@


1.16
log
@BINOWN/BINGRP
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.15 1996/08/25 09:56:57 downsj Exp $
d41 5
a45 2
	fi

@


1.15
log
@Makefile.in: break mandir creation out of install-dir;
Makefile.bsd-wrapper: add g77 manpage and lots of ${DESTDIR}s.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.14 1996/08/23 20:57:36 niklas Exp $
d36 1
a36 1
	chown -R bin.bin ${DESTDIR}/usr/lib/gcc-lib
d39 1
a39 1
		chown bin.bin ${DESTDIR}/usr/lib/libf2c.a; \
@


1.14
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD$
d3 1
a3 1
MAN=		cccp.1 gcc.1 cp/g++.1
d36 5
a40 5
	chown -R bin.bin /usr/lib/gcc-lib
	chmod -R a+rX /usr/lib/gcc-lib
	if [ -e /usr/lib/libf2c.a ]; then \
		chown bin.bin /usr/lib/libf2c.a; \
		chmod 444 /usr/lib/libf2c.a; \
@


1.13
log
@Redid the info-file build slightly, but with kept semantics.  Made g77
this style too.  Added OpenBSD/alpha support
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.12 1996/07/27 02:50:15 downsj Exp $
@


1.12
log
@Initial integration of G77.

Please do a make cleandir before rebuilding gcc!
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.11 1996/04/20 21:59:44 deraadt Exp $
d15 2
a16 1
	${MAKE} ${GNUCFLAGS} BISON=yacc LDFLAGS=${LDSTATIC}
d32 1
@


1.11
log
@no need to remove limits.h; another workaround exists
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.9 1996/02/18 06:22:17 etheisen Exp $
d34 7
@


1.10
log
@from niklas; un-install gcc limits.h because it conflicts with the system one
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.9 1996/02/18 06:22:17 etheisen Exp $
a27 4
# For now, we provide a prepped machine/limits.h through other means
# and mustn't have GCC's variant as well, no matter how correct it is.
# At some point we could make the port-provided limits.h file be
# replaced by GCC's instead, as it really is a compiler-dependent file.
a32 1
		rm -f ${DESTDIR}/usr/lib/gcc-lib/`sh ${.CURDIR}/config.guess`/`sed 's/^[^"]*"\([^"]*\).*/\1/' ${.CURDIR}/version.c`/include/limits.h
@


1.9
log
@More files to shred for cleandir.
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.8 1996/02/17 07:32:28 etheisen Exp $
d28 4
d37 1
@


1.8
log
@Moved INCLUDE_DEFAULTS path define into openbsd.h.  openbsd.h now has
OPENBSD_NATIVE section.  Please use this to overload manifest constants.

Added more files to CLEANFILES in Makefile.bsd-wrapper.
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.7 1996/02/06 06:58:26 etheisen Exp $
d12 1
a12 1
		objc-parse.c
@


1.7
log
@Set default include path to '/usr/include/g++' for g++ and '/usr/include'
for gcc.  Should help eliminate header file conflicts.
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.6 1996/02/05 01:39:13 etheisen Exp $
d7 3
a9 1
GNUCFLAGS=	CFLAGS="${CFLAGS}"
d11 2
a12 10
		c-parse.c c-parse.h cexp.c cp/parse.c cp/parse.h objc-parse.c

#
# This is ugly, but appears to be the only
# method to override default include paths
# without goofing with the source.
#
GPLUSPLUS_INCLUDE_DIR=	/usr/include/g++
GCC_INCLUDE_DIR=	/usr/include
INCDEF=			T_CPPFLAGS=-DINCLUDE_DEFAULTS=\'{{\"$(GPLUSPLUS_INCLUDE_DIR)\",1,1},{\"$(GCC_INCLUDE_DIR)\",0,0},{0,0,0}}\'
d15 1
a15 1
	${MAKE} ${GNUCFLAGS} BISON=yacc LDFLAGS=${LDSTATIC} ${INCDEF}
d22 1
a22 1
		--prefix=/usr --gxx-include=${GPLUSPLUS_INCLUDE_DIR}
d26 1
a26 1
		--prefix=/usr --gxx-include=${GPLUSPLUS_INCLUDE_DIR}
d32 1
a32 1
		bindir=${DESTDIR}/usr/bin ${INCDEF} install
@


1.6
log
@Cleanup files gnu make distclean missed.
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.5 1996/02/04 10:52:33 etheisen Exp $
d4 3
a6 1
MLINKS=		gcc.1 cc.1
d11 9
d21 1
a21 1
	${MAKE} ${GNUCFLAGS} BISON=yacc LDFLAGS=${LDSTATIC}
d28 1
a28 1
		--prefix=/usr --gxx-include=/usr/include/g++
d32 1
a32 1
		--prefix=/usr --gxx-include=/usr/include/g++
d38 1
a38 1
		bindir=${DESTDIR}/usr/bin install
@


1.5
log
@Pass CFLAGS onto GNU build.
Set g++ include to /usr/include/g++.
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.4 1996/02/02 00:22:56 niklas Exp $
d6 2
d24 2
a25 1
	${MAKE} ${GNUCFLAGS} prefix=${DESTDIR}/usr infodir=${DESTDIR}/usr/share/info \
d31 1
@


1.4
log
@"make -f Makefile.bsd-wrapper config" should *really* config, and
never use cached values.
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.3 1996/01/01 23:51:28 deraadt Exp $
d3 3
a5 2
MAN=	cccp.1 gcc.1 cp/g++.1
MLINKS=	gcc.1 cc.1
d8 1
a8 1
	${MAKE} BISON=yacc LDFLAGS=${LDSTATIC}
d15 1
a15 1
		--prefix=/usr
d19 1
a19 1
		--prefix=/usr
d22 1
a22 1
	${MAKE} prefix=${DESTDIR}/usr infodir=${DESTDIR}/usr/share/info \
@


1.3
log
@cannot assume BINDIR is setup
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.2 1995/12/27 10:41:48 niklas Exp $
d12 1
@


1.2
log
@Support LDSTATIC and BINDIR
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.1 1995/12/21 01:16:07 niklas Exp $
d22 2
a23 2
		bindir=${DESTDIR}${BINDIR} install
	ln -f ${DESTDIR}${BINDIR}/gcc ${DESTDIR}${BINDIR}/cc
@


1.1
log
@First cut at making a minimal intrusive munge of gcc to fit in a BSD
framework.  This means, provide a Makefile.bsd-wrapper.  Remove
intermediate files from the source dir.  Build them in the obj-dir.
Add some Makefile hooks so we can tune the std Makefile for our
purpose but still have it behave normal for out-of-tree
configurations.  Only i386 is supported for now.  The other archs will
follow soon.   This checkin requires an existing makeinfo and a yacc
that accepts -o.
@
text
@d1 1
a1 1
#	$Id$
d7 1
a7 1
	${MAKE} BISON=yacc
d22 2
a23 2
		install
	ln -f ${DESTDIR}/usr/bin/gcc ${DESTDIR}/usr/bin/cc
@

