head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.3.0.18
	OPENBSD_6_2_BASE:1.1.1.3
	OPENBSD_6_1:1.1.1.3.0.20
	OPENBSD_6_1_BASE:1.1.1.3
	OPENBSD_6_0:1.1.1.3.0.16
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.12
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.14
	OPENBSD_5_8_BASE:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.6
	OPENBSD_5_7_BASE:1.1.1.3
	OPENBSD_5_6:1.1.1.3.0.10
	OPENBSD_5_6_BASE:1.1.1.3
	OPENBSD_5_5:1.1.1.3.0.8
	OPENBSD_5_5_BASE:1.1.1.3
	OPENBSD_5_4:1.1.1.3.0.4
	OPENBSD_5_4_BASE:1.1.1.3
	OPENBSD_5_3:1.1.1.3.0.2
	OPENBSD_5_3_BASE:1.1.1.3
	gcc-3_3_6:1.1.1.3
	OPENBSD_5_2:1.1.1.2.0.32
	OPENBSD_5_2_BASE:1.1.1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.30
	OPENBSD_5_0:1.1.1.2.0.28
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.26
	OPENBSD_4_9_BASE:1.1.1.2
	OPENBSD_4_8:1.1.1.2.0.24
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.20
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.22
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.18
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.16
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.14
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.12
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.10
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.8
	OPENBSD_4_0_BASE:1.1.1.2
	OPENBSD_3_9:1.1.1.2.0.6
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.4
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.2
	OPENBSD_3_7_BASE:1.1.1.2
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.11.29.12.38.11;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.11.29.12.38.11;	author espie;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.24.23.51.24;	author espie;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2012.11.28.20.42.01;	author miod;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@<html lang="en">
<head>
<title>Installing GCC: Configuration</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name=description content="Installing GCC: Configuration">
<meta name=generator content="makeinfo 4.2">
<link href="http://www.gnu.org/software/texinfo/" rel=generator-home>
<!--
Copyright &copy; 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
<br><p>
<p>Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no
Invariant Sections, the Front-Cover texts being (a) (see below), and
with the Back-Cover Texts being (b) (see below).  A copy of the
license is included in the section entitled "<a href="./gfdl.html">GNU Free Documentation License</a>".

<p>(a) The FSF's Front-Cover Text is:

<p>A GNU Manual

<p>(b) The FSF's Back-Cover Text is:

<p>You have freedom to copy and modify this GNU Manual, like GNU
     software.  Copies published by the Free Software Foundation raise
     funds for GNU development.-->
</head>
<body>
<h1>Installing GCC: Configuration</h1>
Like most GNU software, GCC must be configured before it can be built. 
This document describes the recommended configuration procedure
for both native and cross targets.

<p>We use <var>srcdir</var> to refer to the toplevel source directory for
GCC; we use <var>objdir</var> to refer to the toplevel build/object directory.

<p>If you obtained the sources via CVS, <var>srcdir</var> must refer to the top
<code>gcc</code> directory, the one where the <code>MAINTAINERS</code> can be found,
and not its <code>gcc</code> subdirectory, otherwise the build will fail.

<p>If either <var>srcdir</var> or <var>objdir</var> is located on an automounted NFS
file system, the shell's built-in <code>pwd</code> command will return
temporary pathnames.  Using these can lead to various sorts of build
problems.  To avoid this issue, set the <code>PWDCMD</code> environment
variable to an automounter-aware <code>pwd</code> command, e.g.,
<code>pawd</code> or <code>amq -w</code>, during the configuration and build
phases.

<p>First, we <strong>highly</strong> recommend that GCC be built into a
separate directory than the sources which does <strong>not</strong> reside
within the source tree.  This is how we generally build GCC; building
where <var>srcdir</var> == <var>objdir</var> should still work, but doesn't
get extensive testing; building where <var>objdir</var> is a subdirectory
of <var>srcdir</var> is unsupported.

<p>If you have previously built GCC in the same directory for a
different target machine, do <code>make distclean</code> to delete all files
that might be invalid.  One of the files this deletes is <code>Makefile</code>;
if <code>make distclean</code> complains that <code>Makefile</code> does not exist
or issues a message like "don't know how to make distclean" it probably
means that the directory is already suitably clean.  However, with the
recommended method of building in a separate <var>objdir</var>, you should
simply use a different <var>objdir</var> for each target.

<p>Second, when configuring a native system, either <code>cc</code> or
<code>gcc</code> must be in your path or you must set <code>CC</code> in
your environment before running configure.  Otherwise the configuration
scripts may fail.

<p>Note that the bootstrap compiler and the resulting GCC must be link
compatible, else the bootstrap will fail with linker errors about
incompatible object file formats.  Several multilibed targets are
affected by this requirement, see
<a href="specific.html">host/target specific installation notes</a>.

<p>To configure GCC:

<br><pre>   % mkdir <var>objdir</var>
   % cd <var>objdir</var>
   % <var>srcdir</var>/configure [<var>options</var>] [<var>target</var>]
</pre>

<h3><a name="TOC0"></a>Target specification</h3>

<ul>
<li>GCC has code to correctly determine the correct value for <var>target</var>
for nearly all native systems.  Therefore, we highly recommend you not
provide a configure target when configuring a native compiler.

<li><var>target</var> must be specified as <code>--target=<var>target</var></code>
when configuring a cross compiler; examples of valid targets would be
i960-rtems, m68k-coff, sh-elf, etc.

<li>Specifying just <var>target</var> instead of <code>--target=<var>target</var></code>
implies that the host defaults to <var>target</var>. 
</ul>

<h3><a name="TOC1"></a>Options specification</h3>

<p>Use <var>options</var> to override several configure time options for
GCC.  A list of supported <var>options</var> follows; <code>configure
--help</code> may list other options, but those not listed below may not
work and should not normally be used.

<dl>
<dt><code>--prefix=<var>dirname</var></code>
<dd>Specify the toplevel installation
directory.  This is the recommended way to install the tools into a directory
other than the default.  The toplevel installation directory defaults to
<code>/usr/local</code>.

<p>We <strong>highly</strong> recommend against <var>dirname</var> being the same or a
subdirectory of <var>objdir</var> or vice versa.  If specifying a directory
beneath a user's home directory tree, some shells will not expand
<var>dirname</var> correctly if it contains the <code>~</code> metacharacter; use
<code>$HOME</code> instead.

<p>These additional options control where certain parts of the distribution
are installed.  Normally you should not need to use these options.
<dl>
<dt><code>--exec-prefix=<var>dirname</var></code>
<dd>Specify the toplevel installation directory for architecture-dependent
files.  The default is <code><var>prefix</var></code>.

<br><dt><code>--bindir=<var>dirname</var></code>
<dd>Specify the installation directory for the executables called by users
(such as <code>gcc</code> and <code>g++</code>).  The default is
<code><var>exec-prefix</var>/bin</code>.

<br><dt><code>--libdir=<var>dirname</var></code>
<dd>Specify the installation directory for object code libraries and
internal parts of GCC.  The default is <code><var>exec-prefix</var>/lib</code>.

<br><dt><code>--with-slibdir=<var>dirname</var></code>
<dd>Specify the installation directory for the shared libgcc library.  The
default is <code><var>libdir</var></code>.

<br><dt><code>--infodir=<var>dirname</var></code>
<dd>Specify the installation directory for documentation in info format. 
The default is <code><var>prefix</var>/info</code>.

<br><dt><code>--datadir=<var>dirname</var></code>
<dd>Specify the installation directory for some architecture-independent
data files referenced by GCC.  The default is <code><var>prefix</var>/share</code>.

<br><dt><code>--mandir=<var>dirname</var></code>
<dd>Specify the installation directory for manual pages.  The default is
<code><var>prefix</var>/man</code>.  (Note that the manual pages are only extracts from
the full GCC manuals, which are provided in Texinfo format.  The manpages
are derived by an automatic conversion process from parts of the full
manual.)

<br><dt><code>--with-gxx-include-dir=<var>dirname</var></code>
<dd>Specify
the installation directory for G++ header files.  The default is
<code><var>prefix</var>/include/g++-v3</code>.

</dl>

<br><dt><code>--program-prefix=<var>prefix</var></code>
<dd>GCC supports some transformations of the names of its programs when
installing them. This option prepends <var>prefix</var> to the names of
programs to install in <var>bindir</var> (see above). For example, specifying
<code>--program-prefix=foo-</code> would result in <code>gcc</code>
being installed as <code>/usr/local/bin/foo-gcc</code>.

<br><dt><code>--program-suffix=<var>suffix</var></code>
<dd>Appends <var>suffix</var> to the names of programs to install in <var>bindir</var>
(see above). For example, specifying <code>--program-suffix=-3.1</code>
would result in <code>gcc</code> being installed as
<code>/usr/local/bin/gcc-3.1</code>.

<br><dt><code>--program-transform-name=<var>pattern</var></code>
<dd>Applies the <code>sed</code> script <var>pattern</var> to be applied to the names
of programs to install in <var>bindir</var> (see above). <var>pattern</var> has to
consist of one or more basic <code>sed</code> editing commands, separated by
semicolons. For example, if you want the <code>gcc</code> program name to be
transformed to the installed program <code>/usr/local/bin/myowngcc</code> and
the <code>g++</code> program name to be transformed to
<code>/usr/local/bin/gspecial++</code> without changing other program names,
you could use the pattern
<code>--program-transform-name='s/^gcc$/myowngcc/; s/^g++$/gspecial++/'</code>
to achieve this effect.

<p>All three options can be combined and used together, resulting in more
complex conversion patterns. As a basic rule, <var>prefix</var> (and
<var>suffix</var>) are prepended (appended) before further transformations
can happen with a special transformation script <var>pattern</var>.

<p>As currently implemented, this option only takes effect for native
builds; cross compiler binaries' names are not transformed even when a
transformation is explicitly asked for by one of these options.

<p>For native builds, some of the installed programs are also installed
with the target alias in front of their name, as in
<code>i686-pc-linux-gnu-gcc</code>. All of the above transformations happen
before the target alias is prepended to the name - so, specifying
<code>--program-prefix=foo-</code> and <code>program-suffix=-3.1</code>, the
resulting binary would be installed as
<code>/usr/local/bin/i686-pc-linux-gnu-foo-gcc-3.1</code>.

<p>As a last shortcoming, none of the installed Ada programs are
transformed yet, which will be fixed in some time.

<br><dt><code>--with-local-prefix=<var>dirname</var></code>
<dd>Specify the
installation directory for local include files.  The default is
<code>/usr/local</code>.  Specify this option if you want the compiler to
search directory <code><var>dirname</var>/include</code> for locally installed
header files <em>instead</em> of <code>/usr/local/include</code>.

<p>You should specify <code>--with-local-prefix</code> <strong>only</strong> if your
site has a different convention (not <code>/usr/local</code>) for where to put
site-specific files.

<p>The default value for <code>--with-local-prefix</code> is <code>/usr/local</code>
regardless of the value of <code>--prefix</code>.  Specifying
<code>--prefix</code> has no effect on which directory GCC searches for
local header files.  This may seem counterintuitive, but actually it is
logical.

<p>The purpose of <code>--prefix</code> is to specify where to <em>install
GCC</em>.  The local header files in <code>/usr/local/include</code>--if you put
any in that directory--are not part of GCC.  They are part of other
programs--perhaps many others.  (GCC installs its own header files in
another directory which is based on the <code>--prefix</code> value.)

<p>Both the local-prefix include directory and the GCC-prefix include
directory are part of GCC's "system include" directories.  Although these
two directories are not fixed, they need to be searched in the proper
order for the correct processing of the include_next directive.  The
local-prefix include directory is searched before the GCC-prefix
include directory.  Another characteristic of system include directories
is that pedantic warnings are turned off for headers in these directories.

<p>Some autoconf macros add <code>-I <var>directory</var></code> options to the
compiler command line, to ensure that directories containing installed
packages' headers are searched.  When <var>directory</var> is one of GCC's
system include directories, GCC will ignore the option so that system
directories continue to be processed in the correct order.  This
may result in a search order different from what was specified but the
directory will still be searched.

<p>GCC automatically searches for ordinary libraries using
<code>GCC_EXEC_PREFIX</code>.  Thus, when the same installation prefix is
used for both GCC and packages, GCC will automatically search for
both headers and libraries.  This provides a configuration that is
easy to use.  GCC behaves in a manner similar to that when it is
installed as a system compiler in <code>/usr</code>.

<p>Sites that need to install multiple versions of GCC may not want to
use the above simple configuration.  It is possible to use the
<code>--program-prefix</code>, <code>--program-suffix</code> and
<code>--program-transform-name</code> options to install multiple versions
into a single directory, but it may be simpler to use different prefixes
and the <code>--with-local-prefix</code> option to specify the location of the
site-specific files for each version.  It will then be necessary for
users to specify explicitly the location of local site libraries
(e.g., with <code>LIBRARY_PATH</code>).

<p>The same value can be used for both <code>--with-local-prefix</code> and
<code>--prefix</code> provided it is not <code>/usr</code>.  This can be used
to avoid the default search of <code>/usr/local/include</code>.

<p><strong>Do not</strong> specify <code>/usr</code> as the <code>--with-local-prefix</code>! 
The directory you use for <code>--with-local-prefix</code> <strong>must not</strong>
contain any of the system's standard header files.  If it did contain
them, certain programs would be miscompiled (including GNU Emacs, on
certain targets), because this would override and nullify the header
file corrections made by the <code>fixincludes</code> script.

<p>Indications are that people who use this option use it based on mistaken
ideas of what it is for.  People use it as if it specified where to
install part of GCC.  Perhaps they make this assumption because
installing GCC creates the directory.

<br><dt><code>--enable-shared[=<var>package</var>[,<small>...</small>]]</code>
<dd>Build shared versions of libraries, if shared libraries are supported on
the target platform.  Unlike GCC 2.95.x and earlier, shared libraries
are enabled by default on all platforms that support shared libraries,
except for <code>libobjc</code> which is built as a static library only by
default.

<p>If a list of packages is given as an argument, build shared libraries
only for the listed packages.  For other packages, only static libraries
will be built.  Package names currently recognized in the GCC tree are
<code>libgcc</code> (also known as <code>gcc</code>), <code>libstdc++</code> (not
<code>libstdc++-v3</code>), <code>libffi</code>, <code>zlib</code>, <code>boehm-gc</code> and
<code>libjava</code>.  Note that <code>libobjc</code> does not recognize itself by
any name, so, if you list package names in <code>--enable-shared</code>,
you will only get static Objective-C libraries.  <code>libf2c</code> and
<code>libiberty</code> do not support shared libraries at all.

<p>Use <code>--disable-shared</code> to build only static libraries.  Note that
<code>--disable-shared</code> does not accept a list of package names as
argument, only <code>--enable-shared</code> does.

<br><dt><code><a name="with-gnu-as"></a>--with-gnu-as</code>
<dd>Specify that the compiler should assume that the
assembler it finds is the GNU assembler.  However, this does not modify
the rules to find an assembler and will result in confusion if the
assembler found is not actually the GNU assembler.  (Confusion may also
result if the compiler finds the GNU assembler but has not been
configured with <code>--with-gnu-as</code>.)  If you have more than one
assembler installed on your system, you may want to use this option in
connection with <code>--with-as=<var>pathname</var></code>.

<p>The following systems are the only ones where it makes a difference
whether you use the GNU assembler.  On any other system,
<code>--with-gnu-as</code> has no effect.

<ul>
<li><code>hppa1.0-<var>any</var>-<var>any</var></code>
<li><code>hppa1.1-<var>any</var>-<var>any</var></code>
<li><code>i386-<var>any</var>-sysv</code>
<li><code>m68k-bull-sysv</code>
<li><code>m68k-hp-hpux</code>
<li><code>m68000-hp-hpux</code>
<li><code>m68000-att-sysv</code>
<li><code><var>any</var>-lynx-lynxos</code>
<li><code>mips-<var>any</var></code>
<li><code>sparc-sun-solaris2.<var>any</var></code>
<li><code>sparc64-<var>any</var>-solaris2.<var>any</var></code>
</ul>

<p>On the systems listed above (except for the HP-PA, the SPARC, for ISC on
the 386, and for <code>mips-sgi-irix5.*</code>), if you use the GNU assembler,
you should also use the GNU linker (and specify <code>--with-gnu-ld</code>).

<br><dt><code><a name="with-as"></a>--with-as=<var>pathname</var></code>
<dd>Specify that the
compiler should use the assembler pointed to by <var>pathname</var>, rather
than the one found by the standard rules to find an assembler, which
are:
<ul>
<li>Check the
<code><var>exec_prefix</var>/lib/gcc-lib/<var>target</var>/<var>version</var></code>
directory, where <var>exec_prefix</var> defaults to <var>prefix</var> which
defaults to <code>/usr/local</code> unless overridden by the
<code>--prefix=<var>pathname</var></code> switch described above. <var>target</var> is the
target system triple, such as <code>sparc-sun-solaris2.7</code>, and
<var>version</var> denotes the GCC version, such as 3.0. 
<li>Check operating system specific directories (e.g. <code>/usr/ccs/bin</code> on
Sun Solaris 2). 
</ul>
Note that these rules do not check for the value of <code>PATH</code>.  You may
want to use <code>--with-as</code> if no assembler is installed in the
directories listed above, or if you have multiple assemblers installed
and want to choose one that is not found by the above rules.

<br><dt><code><a name="with-gnu-ld"></a>--with-gnu-ld</code>
<dd>Same as <a href="#with-gnu-as"><code>--with-gnu-as</code></a>
but for the linker.

<br><dt><code>--with-ld=<var>pathname</var></code>
<dd>Same as <a href="#with-as"><code>--with-as</code></a>
but for the linker.

<br><dt><code>--with-stabs</code>
<dd>Specify that stabs debugging
information should be used instead of whatever format the host normally
uses.  Normally GCC uses the same debug format as the host system.

<p>On MIPS based systems and on Alphas, you must specify whether you want
GCC to create the normal ECOFF debugging format, or to use BSD-style
stabs passed through the ECOFF symbol table.  The normal ECOFF debug
format cannot fully handle languages other than C.  BSD stabs format can
handle other languages, but it only works with the GNU debugger GDB.

<p>Normally, GCC uses the ECOFF debugging format by default; if you
prefer BSD stabs, specify <code>--with-stabs</code> when you configure GCC.

<p>No matter which default you choose when you configure GCC, the user
can use the <code>-gcoff</code> and <code>-gstabs+</code> options to specify explicitly
the debug format for a particular compilation.

<p><code>--with-stabs</code> is meaningful on the ISC system on the 386, also, if
<code>--with-gas</code> is used.  It selects use of stabs debugging
information embedded in COFF output.  This kind of debugging information
supports C++ well; ordinary COFF debugging information does not.

<p><code>--with-stabs</code> is also meaningful on 386 systems running SVR4.  It
selects use of stabs debugging information embedded in ELF output.  The
C++ compiler currently (2.6.0) does not support the DWARF debugging
information normally used on 386 SVR4 platforms; stabs provide a
workable alternative.  This requires gas and gdb, as the normal SVR4
tools can not generate or interpret stabs.

<br><dt><code>--disable-multilib</code>
<dd>Specify that multiple target
libraries to support different target variants, calling
conventions, etc should not be built.  The default is to build a
predefined set of them.

<p>Some targets provide finer-grained control over which multilibs are built
(e.g., <code>--disable-softfloat</code>):
<dl>
<dt><code>arc-*-elf*</code>
<dd>biendian.

<br><dt><code>arm-*-*</code>
<dd>fpu, 26bit, underscore, interwork, biendian, nofmult.

<br><dt><code>m68*-*-*</code>
<dd>softfloat, m68881, m68000, m68020.

<br><dt><code>mips*-*-*</code>
<dd>single-float, biendian, softfloat.

<br><dt><code>powerpc*-*-*, rs6000*-*-*</code>
<dd>aix64, pthread, softfloat, powercpu, powerpccpu, powerpcos, biendian,
sysv, aix.

</dl>

<br><dt><code>--enable-threads</code>
<dd>Specify that the target
supports threads.  This affects the Objective-C compiler and runtime
library, and exception handling for other languages like C++ and Java. 
On some systems, this is the default.

<p>In general, the best (and, in many cases, the only known) threading
model available will be configured for use.  Beware that on some
systems, gcc has not been taught what threading models are generally
available for the system.  In this case, <code>--enable-threads</code> is an
alias for <code>--enable-threads=single</code>.

<br><dt><code>--disable-threads</code>
<dd>Specify that threading support should be disabled for the system. 
This is an alias for <code>--enable-threads=single</code>.

<br><dt><code>--enable-threads=<var>lib</var></code>
<dd>Specify that
<var>lib</var> is the thread support library.  This affects the Objective-C
compiler and runtime library, and exception handling for other languages
like C++ and Java.  The possibilities for <var>lib</var> are:

<dl>
<dt><code>aix</code>
<dd>AIX thread support. 
<br><dt><code>dce</code>
<dd>DCE thread support. 
<br><dt><code>mach</code>
<dd>Generic MACH thread support, known to work on NeXTSTEP.  (Please note
that the file needed to support this configuration, <code>gthr-mach.h</code>, is
missing and thus this setting will cause a known bootstrap failure.) 
<br><dt><code>no</code>
<dd>This is an alias for <code>single</code>. 
<br><dt><code>posix</code>
<dd>Generic POSIX thread support. 
<br><dt><code>pthreads</code>
<dd>Same as <code>posix</code> on arm*-*-linux*, *-*-chorusos* and *-*-freebsd*
only.  A future release of gcc might remove this alias or extend it
to all platforms. 
<br><dt><code>rtems</code>
<dd>RTEMS thread support. 
<br><dt><code>single</code>
<dd>Disable thread support, should work for all platforms. 
<br><dt><code>solaris</code>
<dd>Sun Solaris 2 thread support. 
<br><dt><code>vxworks</code>
<dd>VxWorks thread support. 
<br><dt><code>win32</code>
<dd>Microsoft Win32 API thread support. 
</dl>

<br><dt><code>--with-cpu=<var>cpu</var></code>
<dd>Specify which cpu variant the
compiler should generate code for by default.  This is currently
only supported on some ports, specifically arm, powerpc, and
SPARC.  If configure does not recognize the model name (e.g. arm700,
603e, or ultrasparc) you provide, please check the
<code>gcc/config.gcc</code> script for a complete list of supported models.

<br><dt><code>--enable-altivec</code>
<dd>Specify that the target supports AltiVec vector enhancements.  This
option will adjust the ABI for AltiVec enhancements, as well as generate
AltiVec code when appropriate.  This option is only available for
PowerPC systems.

<br><dt><code>--enable-target-optspace</code>
<dd>Specify that target
libraries should be optimized for code space instead of code speed. 
This is the default for the m32r platform.

<br><dt><code>--disable-cpp</code>
<dd>Specify that a user visible <code>cpp</code> program should not be installed.

<br><dt><code>--with-cpp-install-dir=<var>dirname</var></code>
<dd>Specify that the user visible <code>cpp</code> program should be installed
in <code><var>prefix</var>/<var>dirname</var>/cpp</code>, in addition to <var>bindir</var>.

<br><dt><code>--enable-initfini-array</code>
<dd>Force the use of sections <code>.init_array</code> and <code>.fini_array</code>
(instead of <code>.init</code> and <code>.fini</code>) for constructors and
destructors.  Option <code>--disable-initfini-array</code> has the
opposite effect.  If neither option is specified, the configure script
will try to guess whether the <code>.init_array</code> and
<code>.fini_array</code> sections are supported and, if they are, use them.

<br><dt><code>--enable-maintainer-mode</code>
<dd>The build rules that
regenerate the GCC master message catalog <code>gcc.pot</code> are normally
disabled.  This is because it can only be rebuilt if the complete source
tree is present.  If you have changed the sources and want to rebuild the
catalog, configuring with <code>--enable-maintainer-mode</code> will enable
this.  Note that you need a recent version of the <code>gettext</code> tools
to do so.

<br><dt><code>--enable-version-specific-runtime-libs</code>
<dd>Specify
that runtime libraries should be installed in the compiler specific
subdirectory (<code><var>libsubdir</var></code>) rather than the usual places.  In
addition, <code>libstdc++</code>'s include files will be installed in
<code><var>libsubdir</var>/include/g++</code> unless you overruled it by using
<code>--with-gxx-include-dir=<var>dirname</var></code>.  Using this option is
particularly useful if you intend to use several versions of GCC in
parallel. This is currently supported by <code>libf2c</code> and
<code>libstdc++</code>, and is the default for <code>libobjc</code> which cannot be
changed in this case.

<br><dt><code>--enable-languages=<var>lang1</var>,<var>lang2</var>,<small>...</small></code>
<dd>Specify that only a particular subset of compilers and
their runtime libraries should be built.  For a list of valid values for
<var>langN</var> you can issue the following command in the
<code>gcc</code> directory of your GCC source tree:<br>
<br><pre>grep language= */config-lang.in
</pre>
Currently, you can use any of the following:
<code>ada</code>, <code>c</code>, <code>c++</code>, <code>f77</code>, <code>java</code>, <code>objc</code>. 
Building the Ada compiler has special requirements, see below.<br>
If you do not pass this flag, all languages available in the <code>gcc</code>
sub-tree will be configured.  Re-defining <code>LANGUAGES</code> when calling
<code>make bootstrap</code> <strong>does not</strong> work anymore, as those
language sub-directories might not have been configured!

<br><dt><code>--disable-libgcj</code>
<dd>Specify that the run-time libraries
used by GCJ should not be built.  This is useful in case you intend
to use GCJ with some other run-time, or you're going to install it
separately, or it just happens not to build on your particular
machine.  In general, if the Java front end is enabled, the GCJ
libraries will be enabled too, unless they're known to not work on
the target platform.  If GCJ is enabled but <code>libgcj</code> isn't built, you
may need to port it; in this case, before modifying the top-level
<code>configure.in</code> so that <code>libgcj</code> is enabled by default on this platform,
you may use <code>--enable-libgcj</code> to override the default.

<br><dt><code>--with-dwarf2</code>
<dd>Specify that the compiler should
use DWARF 2 debugging information as the default.

<br><dt><code>--enable-win32-registry</code>
<dt><code>--enable-win32-registry=<var>key</var></code>
<dt><code>--disable-win32-registry</code>
<dd>The <code>--enable-win32-registry</code> option enables Windows-hosted GCC
to look up installations paths in the registry using the following key:

<br><pre><code>HKEY_LOCAL_MACHINE\SOFTWARE\Free Software Foundation\<var>key</var></code>
</pre>

<p><var>key</var> defaults to GCC version number, and can be overridden by the
<code>--enable-win32-registry=<var>key</var></code> option. Vendors and distributors
who use custom installers are encouraged to provide a different key,
perhaps one comprised of vendor name and GCC version number, to
avoid conflict with existing installations.  This feature is enabled
by default, and can be disabled by <code>--disable-win32-registry</code>
option.  This option has no effect on the other hosts.

<br><dt><code>--nfp</code>
<dd>Specify that the machine does not have a floating point unit.  This
option only applies to <code>m68k-sun-sunos<var>n</var></code>.  On any other
system, <code>--nfp</code> has no effect.

<br><dt><code>--enable-checking</code>
<dt><code>--enable-checking=<var>list</var></code>
<dd>When you specify this option, the compiler is built to perform checking
of tree node types when referencing fields of that node, and some other
internal consistency checks.  This does not change the generated code,
but adds error checking within the compiler.  This will slow down the
compiler and may only work properly if you are building the compiler
with GCC.  This is on by default when building from CVS or snapshots,
but off for releases.  More control over the checks may be had by
specifying <var>list</var>; the categories of checks available are
<code>misc</code>, <code>tree</code>, <code>gc</code>, <code>rtl</code>, <code>rtlflag</code>,
<code>gcac</code> and <code>valgrind</code>.  The check <code>valgrind</code> requires the
external <code>valgrind</code> simulator, available from
<a href="http://developer.kde.org/~sewardj/">http://developer.kde.org/~sewardj/</a>.  The default when <var>list</var> is
not specified is <code>misc,tree,gc,rtlflag</code>; the checks <code>rtl</code>,
<code>gcac</code> and <code>valgrind</code> are very expensive.

<br><dt><code>--enable-coverage</code>
<br><dt><code>--enable-coverage=<var>level</var></code>
<dd>With this option, the compiler is built to collect self coverage
information, every time it is run. This is for internal development
purposes, and only works when the compiler is being built with gcc. The
<var>level</var> argument controls whether the compiler is built optimized or
not, values are <code>opt</code> and <code>noopt</code>. For coverage analysis you
want to disable optimization, for performance analysis you want to
enable optimization. When coverage is enabled, the default level is
without optimization.

<br><dt><code>--enable-nls</code>
<dt><code>--disable-nls</code>
<dd>The <code>--enable-nls</code> option enables Native Language Support (NLS),
which lets GCC output diagnostics in languages other than American
English.  Native Language Support is enabled by default if not doing a
canadian cross build.  The <code>--disable-nls</code> option disables NLS.

<br><dt><code>--with-included-gettext</code>
<dd>If NLS is enabled, the <code>--with-included-gettext</code> option causes the build
procedure to prefer its copy of GNU <code>gettext</code>.

<br><dt><code>--with-catgets</code>
<dd>If NLS is enabled, and if the host lacks <code>gettext</code> but has the
inferior <code>catgets</code> interface, the GCC build procedure normally
ignores <code>catgets</code> and instead uses GCC's copy of the GNU
<code>gettext</code> library.  The <code>--with-catgets</code> option causes the
build procedure to use the host's <code>catgets</code> in this situation.

<br><dt><code>--with-libiconv-prefix=<var>dir</var></code>
<dd>Search for libiconv header files in <code><var>dir</var>/include</code> and
libiconv library files in <code><var>dir</var>/lib</code>.

<br><dt><code>--with-system-zlib</code>
<dd>Use installed zlib rather than that included with GCC.  This option
only applies if the Java front end is being built.

<br><dt><code>--enable-obsolete</code>
<dd>Enable configuration for an obsoleted system.  If you attempt to
configure GCC for a system (build, host, or target) which has been
obsoleted, and you do not specify this flag, configure will halt with an
error message.

<p>All support for systems which have been obsoleted in one release of GCC
is removed entirely in the next major release, unless someone steps
forward to maintain the port. 
</dl>

<p>Some options which only apply to building cross compilers:
<dl>
<dt><code>--with-headers</code>
<dt><code>--with-headers=<var>dir</var></code>
<dd>Specifies that target headers are available when building a cross compiler. 
The <var>dir</var> argument specifies a directory which has the target include
files.  These include files will be copied into the <code>gcc</code> install
directory.  <em>This option with the <var>dir</var> argument is required</em> when
building a cross compiler, if <code><var>prefix</var>/<var>target</var>/sys-include</code>
doesn't pre-exist.  If <code><var>prefix</var>/<var>target</var>/sys-include</code> does
pre-exist, the <var>dir</var> argument may be omitted.  <code>fixincludes</code>
will be run on these files to make them compatible with GCC. 
<br><dt><code>--with-libs</code>
<dt><code>--with-libs=``<var>dir1</var> <var>dir2</var> <small>...</small> <var>dirN</var>''</code>
<dd>Specifies a list of directories which contain the target runtime
libraries.  These libraries will be copied into the <code>gcc</code> install
directory.  If the directory list is omitted, this option has no
effect. 
<br><dt><code>--with-newlib</code>
<dd>Specifies that <code>newlib</code> is
being used as the target C library.  This causes <code>__eprintf</code> to be
omitted from <code>libgcc.a</code> on the assumption that it will be provided by
<code>newlib</code>. 
</dl>

<p>Note that each <code>--enable</code> option has a corresponding
<code>--disable</code> option and that each <code>--with</code> option has a
corresponding <code>--without</code> option.

<hr />
<p>
<a href="./index.html">Return to the GCC Installation page</a>

</body></html>

@


1.1.1.1
log
@Import gcc-3.3.2. Only the compiler. ada frontend removed for space 
considerations.
@
text
@@


1.1.1.2
log
@gcc 3.3.5
@
text
@d1 1
a1 1
   <html lang="en">
d5 3
a7 3
<meta name="description" content="Installing GCC: Configuration">
<meta name="generator" content="makeinfo 4.5">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home">
d12 1
a12 1
   <p>Permission is granted to copy, distribute and/or modify this document
d19 1
a19 1
   <p>(a) The FSF's Front-Cover Text is:
d21 1
a21 1
   <p>A GNU Manual
d23 1
a23 1
   <p>(b) The FSF's Back-Cover Text is:
d25 1
a25 1
   <p>You have freedom to copy and modify this GNU Manual, like GNU
d30 1
a30 1
<h1 class="settitle">Installing GCC: Configuration</h1>
d35 1
a35 1
   <p>We use <var>srcdir</var> to refer to the toplevel source directory for
d38 1
a38 1
   <p>If you obtained the sources via CVS, <var>srcdir</var> must refer to the top
d42 1
a42 1
   <p>If either <var>srcdir</var> or <var>objdir</var> is located on an automounted NFS
d50 1
a50 1
   <p>First, we <strong>highly</strong> recommend that GCC be built into a
d57 1
a57 1
   <p>If you have previously built GCC in the same directory for a
d66 1
a66 1
   <p>Second, when configuring a native system, either <code>cc</code> or
d71 1
a71 1
   <p>Note that the bootstrap compiler and the resulting GCC must be link
d77 1
a77 1
   <p>To configure GCC:
d79 4
a82 4
<pre class="example">        % mkdir <var>objdir</var>
        % cd <var>objdir</var>
        % <var>srcdir</var>/configure [<var>options</var>] [<var>target</var>]
     </pre>
d84 1
a84 1
<h3 class="heading"><a name="TOC0"></a>Target specification</h3>
d86 1
a86 1
     <ul>
d91 1
a91 1
     <li><var>target</var> must be specified as <code>--target=</code><var>target</var><code></code>
d95 1
a95 1
     <li>Specifying just <var>target</var> instead of <code>--target=</code><var>target</var><code></code>
d99 1
a99 1
<h3 class="heading"><a name="TOC1"></a>Options specification</h3>
d101 1
a101 1
   <p>Use <var>options</var> to override several configure time options for
d106 3
a108 3
     <dl>
<dt><code>--prefix=</code><var>dirname</var><code></code>
     <dd>Specify the toplevel installation
d113 1
a113 1
     <p>We <strong>highly</strong> recommend against <var>dirname</var> being the same or a
d119 1
a119 1
     <p>These additional options control where certain parts of the distribution
d121 4
a124 4
          <dl>
<dt><code>--exec-prefix=</code><var>dirname</var><code></code>
          <dd>Specify the toplevel installation directory for architecture-dependent
files.  The default is <code></code><var>prefix</var><code></code>.
d126 2
a127 2
          <br><dt><code>--bindir=</code><var>dirname</var><code></code>
          <dd>Specify the installation directory for the executables called by users
d129 1
a129 1
<code></code><var>exec-prefix</var><code>/bin</code>.
d131 19
a149 19
          <br><dt><code>--libdir=</code><var>dirname</var><code></code>
          <dd>Specify the installation directory for object code libraries and
internal parts of GCC.  The default is <code></code><var>exec-prefix</var><code>/lib</code>.

          <br><dt><code>--with-slibdir=</code><var>dirname</var><code></code>
          <dd>Specify the installation directory for the shared libgcc library.  The
default is <code></code><var>libdir</var><code></code>.

          <br><dt><code>--infodir=</code><var>dirname</var><code></code>
          <dd>Specify the installation directory for documentation in info format. 
The default is <code></code><var>prefix</var><code>/info</code>.

          <br><dt><code>--datadir=</code><var>dirname</var><code></code>
          <dd>Specify the installation directory for some architecture-independent
data files referenced by GCC.  The default is <code></code><var>prefix</var><code>/share</code>.

          <br><dt><code>--mandir=</code><var>dirname</var><code></code>
          <dd>Specify the installation directory for manual pages.  The default is
<code></code><var>prefix</var><code>/man</code>.  (Note that the manual pages are only extracts from
d154 2
a155 2
          <br><dt><code>--with-gxx-include-dir=</code><var>dirname</var><code></code>
          <dd>Specify
d157 1
a157 1
<code></code><var>prefix</var><code>/include/g++-v3</code>.
d159 1
a159 1
     </dl>
d161 2
a162 2
     <br><dt><code>--program-prefix=</code><var>prefix</var><code></code>
     <dd>GCC supports some transformations of the names of its programs when
d168 2
a169 2
     <br><dt><code>--program-suffix=</code><var>suffix</var><code></code>
     <dd>Appends <var>suffix</var> to the names of programs to install in <var>bindir</var>
d174 2
a175 2
     <br><dt><code>--program-transform-name=</code><var>pattern</var><code></code>
     <dd>Applies the <code>sed</code> script <var>pattern</var> to be applied to the names
d186 1
a186 1
     <p>All three options can be combined and used together, resulting in more
d191 1
a191 1
     <p>As currently implemented, this option only takes effect for native
d195 1
a195 1
     <p>For native builds, some of the installed programs are also installed
d203 1
a203 1
     <p>As a last shortcoming, none of the installed Ada programs are
d206 2
a207 2
     <br><dt><code>--with-local-prefix=</code><var>dirname</var><code></code>
     <dd>Specify the
d210 1
a210 1
search directory <code></code><var>dirname</var><code>/include</code> for locally installed
d213 1
a213 1
     <p>You should specify <code>--with-local-prefix</code> <strong>only</strong> if your
d217 1
a217 1
     <p>The default value for <code>--with-local-prefix</code> is <code>/usr/local</code>
d223 1
a223 1
     <p>The purpose of <code>--prefix</code> is to specify where to <em>install
d229 1
a229 1
     <p>Both the local-prefix include directory and the GCC-prefix include
d237 1
a237 1
     <p>Some autoconf macros add <code>-I </code><var>directory</var><code></code> options to the
d245 1
a245 1
     <p>GCC automatically searches for ordinary libraries using
d252 1
a252 1
     <p>Sites that need to install multiple versions of GCC may not want to
d262 1
a262 1
     <p>The same value can be used for both <code>--with-local-prefix</code> and
d266 1
a266 1
     <p><strong>Do not</strong> specify <code>/usr</code> as the <code>--with-local-prefix</code>! 
d273 1
a273 1
     <p>Indications are that people who use this option use it based on mistaken
d278 2
a279 2
     <br><dt><code>--enable-shared[=</code><var>package</var><code>[,...]]</code>
     <dd>Build shared versions of libraries, if shared libraries are supported on
d285 1
a285 1
     <p>If a list of packages is given as an argument, build shared libraries
d295 1
a295 1
     <p>Use <code>--disable-shared</code> to build only static libraries.  Note that
d299 2
a300 2
     <br><dt><code><a name="with-gnu-as"></a>--with-gnu-as</code>
     <dd>Specify that the compiler should assume that the
d307 1
a307 1
connection with <code>--with-as=</code><var>pathname</var><code></code>.
d309 1
a309 1
     <p>The following systems are the only ones where it makes a difference
d313 4
a316 4
          <ul>
<li><code>hppa1.0-</code><var>any</var><code>-</code><var>any</var><code></code>
<li><code>hppa1.1-</code><var>any</var><code>-</code><var>any</var><code></code>
<li><code>i386-</code><var>any</var><code>-sysv</code>
d321 4
a324 4
<li><code></code><var>any</var><code>-lynx-lynxos</code>
<li><code>mips-</code><var>any</var><code></code>
<li><code>sparc-sun-solaris2.</code><var>any</var><code></code>
<li><code>sparc64-</code><var>any</var><code>-solaris2.</code><var>any</var><code></code>
d327 1
a327 1
     <p>On the systems listed above (except for the HP-PA, the SPARC, for ISC on
d331 2
a332 2
     <br><dt><code><a name="with-as"></a>--with-as=</code><var>pathname</var><code></code>
     <dd>Specify that the
d336 1
a336 1
          <ul>
d338 1
a338 1
<code></code><var>exec_prefix</var><code>/lib/gcc-lib/</code><var>target</var><code>/</code><var>version</var><code></code>
d341 1
a341 1
<code>--prefix=</code><var>pathname</var><code></code> switch described above. <var>target</var> is the
d347 1
a347 1
     Note that these rules do not check for the value of <code>PATH</code>.  You may
d352 2
a353 2
     <br><dt><code><a name="with-gnu-ld"></a>--with-gnu-ld</code>
     <dd>Same as <a href="#with-gnu-as"><code>--with-gnu-as</code></a>
d356 2
a357 2
     <br><dt><code>--with-ld=</code><var>pathname</var><code></code>
     <dd>Same as <a href="#with-as"><code>--with-as</code></a>
d360 2
a361 2
     <br><dt><code>--with-stabs</code>
     <dd>Specify that stabs debugging
d365 1
a365 1
     <p>On MIPS based systems and on Alphas, you must specify whether you want
d371 1
a371 1
     <p>Normally, GCC uses the ECOFF debugging format by default; if you
d374 1
a374 1
     <p>No matter which default you choose when you configure GCC, the user
d378 1
a378 1
     <p><code>--with-stabs</code> is meaningful on the ISC system on the 386, also, if
d383 1
a383 1
     <p><code>--with-stabs</code> is also meaningful on 386 systems running SVR4.  It
d390 2
a391 2
     <br><dt><code>--disable-multilib</code>
     <dd>Specify that multiple target
d396 1
a396 1
     <p>Some targets provide finer-grained control over which multilibs are built
d398 1
a398 1
          <dl>
d400 1
a400 1
          <dd>biendian.
d402 2
a403 2
          <br><dt><code>arm-*-*</code>
          <dd>fpu, 26bit, underscore, interwork, biendian, nofmult.
d405 2
a406 2
          <br><dt><code>m68*-*-*</code>
          <dd>softfloat, m68881, m68000, m68020.
d408 2
a409 2
          <br><dt><code>mips*-*-*</code>
          <dd>single-float, biendian, softfloat.
d411 2
a412 2
          <br><dt><code>powerpc*-*-*, rs6000*-*-*</code>
          <dd>aix64, pthread, softfloat, powercpu, powerpccpu, powerpcos, biendian,
d415 1
a415 1
     </dl>
d417 2
a418 2
     <br><dt><code>--enable-threads</code>
     <dd>Specify that the target
d423 1
a423 1
     <p>In general, the best (and, in many cases, the only known) threading
d429 2
a430 2
     <br><dt><code>--disable-threads</code>
     <dd>Specify that threading support should be disabled for the system. 
d433 2
a434 2
     <br><dt><code>--enable-threads=</code><var>lib</var><code></code>
     <dd>Specify that
d439 1
a439 1
          <dl>
d441 1
a441 1
          <dd>AIX thread support. 
d443 1
a443 1
          <dd>DCE thread support. 
d445 1
a445 1
          <dd>Generic MACH thread support, known to work on NeXTSTEP.  (Please note
d449 1
a449 1
          <dd>This is an alias for <code>single</code>. 
d451 1
a451 1
          <dd>Generic POSIX thread support. 
d453 1
a453 1
          <dd>Same as <code>posix</code> on arm*-*-linux*, *-*-chorusos* and *-*-freebsd*
d457 1
a457 1
          <dd>RTEMS thread support. 
d459 1
a459 1
          <dd>Disable thread support, should work for all platforms. 
d461 1
a461 1
          <dd>Sun Solaris 2 thread support. 
d463 1
a463 1
          <dd>VxWorks thread support. 
d465 1
a465 1
          <dd>Microsoft Win32 API thread support. 
d468 2
a469 2
     <br><dt><code>--with-cpu=</code><var>cpu</var><code></code>
     <dd>Specify which cpu variant the
d476 2
a477 2
     <br><dt><code>--enable-altivec</code>
     <dd>Specify that the target supports AltiVec vector enhancements.  This
d482 2
a483 2
     <br><dt><code>--enable-target-optspace</code>
     <dd>Specify that target
d487 2
a488 2
     <br><dt><code>--disable-cpp</code>
     <dd>Specify that a user visible <code>cpp</code> program should not be installed.
d490 3
a492 3
     <br><dt><code>--with-cpp-install-dir=</code><var>dirname</var><code></code>
     <dd>Specify that the user visible <code>cpp</code> program should be installed
in <code></code><var>prefix</var><code>/</code><var>dirname</var><code>/cpp</code>, in addition to <var>bindir</var>.
d494 2
a495 2
     <br><dt><code>--enable-initfini-array</code>
     <dd>Force the use of sections <code>.init_array</code> and <code>.fini_array</code>
d502 2
a503 2
     <br><dt><code>--enable-maintainer-mode</code>
     <dd>The build rules that
d511 2
a512 2
     <br><dt><code>--enable-version-specific-runtime-libs</code>
     <dd>Specify
d514 1
a514 1
subdirectory (<code></code><var>libsubdir</var><code></code>) rather than the usual places.  In
d516 2
a517 2
<code></code><var>libsubdir</var><code>/include/g++</code> unless you overruled it by using
<code>--with-gxx-include-dir=</code><var>dirname</var><code></code>.  Using this option is
d523 2
a524 2
     <br><dt><code>--enable-languages=</code><var>lang1</var><code>,</code><var>lang2</var><code>,...</code>
     <dd>Specify that only a particular subset of compilers and
d528 3
a530 3
     <pre class="example">          grep language= */config-lang.in
          </pre>
     Currently, you can use any of the following:
d538 2
a539 2
     <br><dt><code>--disable-libgcj</code>
     <dd>Specify that the run-time libraries
d550 2
a551 2
     <br><dt><code>--with-dwarf2</code>
     <dd>Specify that the compiler should
d554 4
a557 4
     <br><dt><code>--enable-win32-registry</code>
     <dd><dt><code>--enable-win32-registry=</code><var>key</var><code></code>
     <dd><dt><code>--disable-win32-registry</code>
     <dd>The <code>--enable-win32-registry</code> option enables Windows-hosted GCC
d560 2
a561 2
     <pre class="smallexample">          <code>HKEY_LOCAL_MACHINE\SOFTWARE\Free Software Foundation\</code><var>key</var><code></code>
          </pre>
d563 2
a564 2
     <p><var>key</var> defaults to GCC version number, and can be overridden by the
<code>--enable-win32-registry=</code><var>key</var><code></code> option. Vendors and distributors
d571 3
a573 3
     <br><dt><code>--nfp</code>
     <dd>Specify that the machine does not have a floating point unit.  This
option only applies to <code>m68k-sun-sunos</code><var>n</var><code></code>.  On any other
d576 3
a578 3
     <br><dt><code>--enable-checking</code>
     <dd><dt><code>--enable-checking=</code><var>list</var><code></code>
     <dd>When you specify this option, the compiler is built to perform checking
d593 3
a595 3
     <br><dt><code>--enable-coverage</code>
     <dd><dt><code>--enable-coverage=</code><var>level</var><code></code>
     <dd>With this option, the compiler is built to collect self coverage
d604 3
a606 3
     <br><dt><code>--enable-nls</code>
     <dd><dt><code>--disable-nls</code>
     <dd>The <code>--enable-nls</code> option enables Native Language Support (NLS),
d611 2
a612 2
     <br><dt><code>--with-included-gettext</code>
     <dd>If NLS is enabled, the <code>--with-included-gettext</code> option causes the build
d615 2
a616 2
     <br><dt><code>--with-catgets</code>
     <dd>If NLS is enabled, and if the host lacks <code>gettext</code> but has the
d622 3
a624 3
     <br><dt><code>--with-libiconv-prefix=</code><var>dir</var><code></code>
     <dd>Search for libiconv header files in <code></code><var>dir</var><code>/include</code> and
libiconv library files in <code></code><var>dir</var><code>/lib</code>.
d626 2
a627 2
     <br><dt><code>--with-system-zlib</code>
     <dd>Use installed zlib rather than that included with GCC.  This option
d630 2
a631 2
     <br><dt><code>--enable-obsolete</code>
     <dd>Enable configuration for an obsoleted system.  If you attempt to
d636 1
a636 1
     <p>All support for systems which have been obsoleted in one release of GCC
d641 5
a645 19
   <p>Some options which only apply to building cross compilers:
     <dl>
<dt><code>--with-sysroot</code>
     <dd><dt><code>--with-sysroot=</code><var>dir</var><code></code>
     <dd>Tells GCC to consider <var>dir</var> as the root of a tree that contains a
(subset of) the root filesystem of the target operating system. 
Target system headers, libraries and run-time object files will be
searched in there.  The specified directory is not copied into the
install tree, unlike the options <code>--with-headers</code> and
<code>--with-libs</code> that this option obsoletes.  The default value,
in case <code>--with-sysroot</code> is not given an argument, is
<code>${gcc_tooldir}/sys-root</code>.  If the specified directory is a
subdirectory of <code>${exec_prefix}</code>, then it will be found relative to
the GCC binaries if the installation tree is moved.

     <br><dt><code>--with-headers</code>
     <dd><dt><code>--with-headers=</code><var>dir</var><code></code>
     <dd>Deprecated in favor of <code>--with-sysroot</code>. 
Specifies that target headers are available when building a cross compiler. 
d648 3
a650 3
directory.  <em>This option with the </em><var>dir</var><em> argument is required</em> when
building a cross compiler, if <code></code><var>prefix</var><code>/</code><var>target</var><code>/sys-include</code>
doesn't pre-exist.  If <code></code><var>prefix</var><code>/</code><var>target</var><code>/sys-include</code> does
d654 2
a655 3
     <dd><dt><code>--with-libs=``</code><var>dir1</var><code> </code><var>dir2</var><code> ... </code><var>dirN</var><code>''</code>
     <dd>Deprecated in favor of <code>--with-sysroot</code>. 
Specifies a list of directories which contain the target runtime
d660 1
a660 1
     <dd>Specifies that <code>newlib</code> is
d666 1
a666 1
   <p>Note that each <code>--enable</code> option has a corresponding
d670 1
a670 1
   <hr />
d674 1
a674 1
   </body></html>
@


1.1.1.3
log
@gcc 3.3.6
@
text
@d1 1
a1 1
<html lang="en">
d6 2
a7 3
<meta name="generator" content="makeinfo 4.7">
<link title="Top" rel="top" href="#Top">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
d9 1
a9 1
Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
d11 2
a12 2

   Permission is granted to copy, distribute and/or modify this document
d17 1
a17 1
license is included in the section entitled "GNU Free Documentation License".
d19 1
a19 1
(a) The FSF's Front-Cover Text is:
d21 1
a21 1
     A GNU Manual
d23 1
a23 1
(b) The FSF's Back-Cover Text is:
d25 1
a25 1
     You have freedom to copy and modify this GNU Manual, like GNU
a27 11
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc { font-variant:small-caps }
  span.roman { font-family: serif; font-weight: normal; } 
--></style>
a30 1
<a name="index-Configuration-1"></a><a name="index-Installing-GCC_003a-Configuration-2"></a>
d39 2
a40 2
<span class="file">gcc</span> directory, the one where the <span class="file">MAINTAINERS</span> can be found,
and not its <span class="file">gcc</span> subdirectory, otherwise the build will fail.
d43 1
a43 1
file system, the shell's built-in <span class="command">pwd</span> command will return
d45 3
a47 3
problems.  To avoid this issue, set the <span class="env">PWDCMD</span> environment
variable to an automounter-aware <span class="command">pwd</span> command, e.g.,
<span class="command">pawd</span> or <span class="samp">amq -w</span>, during the configuration and build
d58 4
a61 4
different target machine, do <span class="samp">make distclean</span> to delete all files
that might be invalid.  One of the files this deletes is <span class="file">Makefile</span>;
if <span class="samp">make distclean</span> complains that <span class="file">Makefile</span> does not exist
or issues a message like &ldquo;don't know how to make distclean&rdquo; it probably
d66 2
a67 2
   <p>Second, when configuring a native system, either <span class="command">cc</span> or
<span class="command">gcc</span> must be in your path or you must set <span class="env">CC</span> in
d82 3
a84 2
</pre>
   <h3 class="heading"><a name="TOC0"></a>Target specification</h3>
d91 1
a91 1
     <li><var>target</var> must be specified as <span class="option">--target=</span><var>target</var>
d95 1
a95 1
     <li>Specifying just <var>target</var> instead of <span class="option">--target=</span><var>target</var>
d101 3
a103 3
<p>Use <var>options</var> to override several configure time options for
GCC.  A list of supported <var>options</var> follows; <span class="samp">configure
--help</span> may list other options, but those not listed below may not
d107 2
a108 1
<dt><code>--prefix=</code><var>dirname</var><dd>Specify the toplevel installation
d111 1
a111 1
<span class="file">/usr/local</span>.
d116 2
a117 2
<var>dirname</var> correctly if it contains the <span class="samp">~</span> metacharacter; use
<span class="env">$HOME</span> instead.
d122 28
a149 21
<dt><code>--exec-prefix=</code><var>dirname</var><dd>Specify the toplevel installation directory for architecture-dependent
files.  The default is <var>prefix</var>.

          <br><dt><code>--bindir=</code><var>dirname</var><dd>Specify the installation directory for the executables called by users
(such as <span class="command">gcc</span> and <span class="command">g++</span>).  The default is
<var>exec-prefix</var><span class="file">/bin</span>.

          <br><dt><code>--libdir=</code><var>dirname</var><dd>Specify the installation directory for object code libraries and
internal parts of GCC.  The default is <var>exec-prefix</var><span class="file">/lib</span>.

          <br><dt><code>--with-slibdir=</code><var>dirname</var><dd>Specify the installation directory for the shared libgcc library.  The
default is <var>libdir</var>.

          <br><dt><code>--infodir=</code><var>dirname</var><dd>Specify the installation directory for documentation in info format. 
The default is <var>prefix</var><span class="file">/info</span>.

          <br><dt><code>--datadir=</code><var>dirname</var><dd>Specify the installation directory for some architecture-independent
data files referenced by GCC.  The default is <var>prefix</var><span class="file">/share</span>.

          <br><dt><code>--mandir=</code><var>dirname</var><dd>Specify the installation directory for manual pages.  The default is
<var>prefix</var><span class="file">/man</span>.  (Note that the manual pages are only extracts from
d154 2
a155 1
          <br><dt><code>--with-gxx-include-dir=</code><var>dirname</var><dd>Specify
d157 1
a157 1
<var>prefix</var><span class="file">/include/g++-v3</span>.
d161 2
a162 1
     <br><dt><code>--program-prefix=</code><var>prefix</var><dd>GCC supports some transformations of the names of its programs when
d165 2
a166 2
<span class="option">--program-prefix=foo-</span> would result in <span class="samp">gcc</span>
being installed as <span class="file">/usr/local/bin/foo-gcc</span>.
d168 5
a172 4
     <br><dt><code>--program-suffix=</code><var>suffix</var><dd>Appends <var>suffix</var> to the names of programs to install in <var>bindir</var>
(see above). For example, specifying <span class="option">--program-suffix=-3.1</span>
would result in <span class="samp">gcc</span> being installed as
<span class="file">/usr/local/bin/gcc-3.1</span>.
d174 2
a175 1
     <br><dt><code>--program-transform-name=</code><var>pattern</var><dd>Applies the <span class="samp">sed</span> script <var>pattern</var> to be applied to the names
d177 5
a181 5
consist of one or more basic <span class="samp">sed</span> editing commands, separated by
semicolons. For example, if you want the <span class="samp">gcc</span> program name to be
transformed to the installed program <span class="file">/usr/local/bin/myowngcc</span> and
the <span class="samp">g++</span> program name to be transformed to
<span class="file">/usr/local/bin/gspecial++</span> without changing other program names,
d183 1
a183 1
<span class="option">--program-transform-name='s/^gcc$/myowngcc/; s/^g++$/gspecial++/'</span>
d197 1
a197 1
<span class="samp">i686-pc-linux-gnu-gcc</span>. All of the above transformations happen
d199 1
a199 1
<span class="option">--program-prefix=foo-</span> and <span class="option">program-suffix=-3.1</span>, the
d201 1
a201 1
<span class="file">/usr/local/bin/i686-pc-linux-gnu-foo-gcc-3.1</span>.
d206 2
a207 1
     <br><dt><code>--with-local-prefix=</code><var>dirname</var><dd>Specify the
d209 3
a211 3
<span class="file">/usr/local</span>.  Specify this option if you want the compiler to
search directory <var>dirname</var><span class="file">/include</span> for locally installed
header files <em>instead</em> of <span class="file">/usr/local/include</span>.
d213 2
a214 2
     <p>You should specify <span class="option">--with-local-prefix</span> <strong>only</strong> if your
site has a different convention (not <span class="file">/usr/local</span>) for where to put
d217 3
a219 3
     <p>The default value for <span class="option">--with-local-prefix</span> is <span class="file">/usr/local</span>
regardless of the value of <span class="option">--prefix</span>.  Specifying
<span class="option">--prefix</span> has no effect on which directory GCC searches for
d223 5
a227 5
     <p>The purpose of <span class="option">--prefix</span> is to specify where to <em>install
GCC</em>.  The local header files in <span class="file">/usr/local/include</span>&mdash;if you put
any in that directory&mdash;are not part of GCC.  They are part of other
programs&mdash;perhaps many others.  (GCC installs its own header files in
another directory which is based on the <span class="option">--prefix</span> value.)
d237 1
a237 1
     <p>Some autoconf macros add <span class="option">-I </span><var>directory</var> options to the
d246 1
a246 1
<span class="env">GCC_EXEC_PREFIX</span>.  Thus, when the same installation prefix is
d250 1
a250 1
installed as a system compiler in <span class="file">/usr</span>.
d254 2
a255 2
<span class="option">--program-prefix</span>, <span class="option">--program-suffix</span> and
<span class="option">--program-transform-name</span> options to install multiple versions
d257 1
a257 1
and the <span class="option">--with-local-prefix</span> option to specify the location of the
d260 1
a260 1
(e.g., with <span class="env">LIBRARY_PATH</span>).
d262 3
a264 3
     <p>The same value can be used for both <span class="option">--with-local-prefix</span> and
<span class="option">--prefix</span> provided it is not <span class="file">/usr</span>.  This can be used
to avoid the default search of <span class="file">/usr/local/include</span>.
d266 2
a267 2
     <p><strong>Do not</strong> specify <span class="file">/usr</span> as the <span class="option">--with-local-prefix</span>! 
The directory you use for <span class="option">--with-local-prefix</span> <strong>must not</strong>
d271 1
a271 1
file corrections made by the <span class="command">fixincludes</span> script.
d278 2
a279 1
     <br><dt><code>--enable-shared[=</code><var>package</var><code>[,...]]</code><dd>Build shared versions of libraries, if shared libraries are supported on
d282 1
a282 1
except for <span class="samp">libobjc</span> which is built as a static library only by
d288 10
a297 10
<span class="samp">libgcc</span> (also known as <span class="samp">gcc</span>), <span class="samp">libstdc++</span> (not
<span class="samp">libstdc++-v3</span>), <span class="samp">libffi</span>, <span class="samp">zlib</span>, <span class="samp">boehm-gc</span> and
<span class="samp">libjava</span>.  Note that <span class="samp">libobjc</span> does not recognize itself by
any name, so, if you list package names in <span class="option">--enable-shared</span>,
you will only get static Objective-C libraries.  <span class="samp">libf2c</span> and
<span class="samp">libiberty</span> do not support shared libraries at all.

     <p>Use <span class="option">--disable-shared</span> to build only static libraries.  Note that
<span class="option">--disable-shared</span> does not accept a list of package names as
argument, only <span class="option">--enable-shared</span> does.
d299 2
a300 1
     <br><dt><code><a name="with_002dgnu_002das"></a>--with-gnu-as</code><dd>Specify that the compiler should assume that the
d305 1
a305 1
configured with <span class="option">--with-gnu-as</span>.)  If you have more than one
d307 1
a307 1
connection with <span class="option">--with-as=</span><var>pathname</var>.
d311 1
a311 1
<span class="option">--with-gnu-as</span> has no effect.
d314 11
a324 11
<li><span class="samp">hppa1.0-</span><var>any</var><span class="samp">-</span><var>any</var>
<li><span class="samp">hppa1.1-</span><var>any</var><span class="samp">-</span><var>any</var>
<li><span class="samp">i386-</span><var>any</var><span class="samp">-sysv</span>
<li><span class="samp">m68k-bull-sysv</span>
<li><span class="samp">m68k-hp-hpux</span>
<li><span class="samp">m68000-hp-hpux</span>
<li><span class="samp">m68000-att-sysv</span>
<li><var>any</var><span class="samp">-lynx-lynxos</span>
<li><span class="samp">mips-</span><var>any</var>
<li><span class="samp">sparc-sun-solaris2.</span><var>any</var>
<li><span class="samp">sparc64-</span><var>any</var><span class="samp">-solaris2.</span><var>any</var>
d328 2
a329 2
the 386, and for <span class="samp">mips-sgi-irix5.*</span>), if you use the GNU assembler,
you should also use the GNU linker (and specify <span class="option">--with-gnu-ld</span>).
d331 2
a332 1
     <br><dt><code><a name="with_002das"></a>--with-as=</code><var>pathname</var><dd>Specify that the
d338 1
a338 1
<var>exec_prefix</var><span class="file">/lib/gcc-lib/</span><var>target</var><span class="file">/</span><var>version</var>
d340 3
a342 3
defaults to <span class="file">/usr/local</span> unless overridden by the
<span class="option">--prefix=</span><var>pathname</var> switch described above. <var>target</var> is the
target system triple, such as <span class="samp">sparc-sun-solaris2.7</span>, and
d344 1
a344 1
<li>Check operating system specific directories (e.g. <span class="file">/usr/ccs/bin</span> on
d347 2
a348 2
     Note that these rules do not check for the value of <span class="env">PATH</span>.  You may
want to use <span class="option">--with-as</span> if no assembler is installed in the
d352 2
a353 1
     <br><dt><code><a name="with_002dgnu_002dld"></a>--with-gnu-ld</code><dd>Same as <a href="#with-gnu-as"><span class="option">--with-gnu-as</span></a>
d356 2
a357 1
     <br><dt><code>--with-ld=</code><var>pathname</var><dd>Same as <a href="#with-as"><span class="option">--with-as</span></a>
d360 2
a361 1
     <br><dt><code>--with-stabs</code><dd>Specify that stabs debugging
d372 1
a372 1
prefer BSD stabs, specify <span class="option">--with-stabs</span> when you configure GCC.
d375 1
a375 1
can use the <span class="option">-gcoff</span> and <span class="option">-gstabs+</span> options to specify explicitly
d378 2
a379 2
     <p><span class="option">--with-stabs</span> is meaningful on the ISC system on the 386, also, if
<span class="option">--with-gas</span> is used.  It selects use of stabs debugging
d383 1
a383 1
     <p><span class="option">--with-stabs</span> is also meaningful on 386 systems running SVR4.  It
d390 2
a391 1
     <br><dt><code>--disable-multilib</code><dd>Specify that multiple target
d397 1
a397 1
(e.g., <span class="option">--disable-softfloat</span>):
d399 2
a400 1
<dt><code>arc-*-elf*</code><dd>biendian.
d402 2
a403 1
          <br><dt><code>arm-*-*</code><dd>fpu, 26bit, underscore, interwork, biendian, nofmult.
d405 2
a406 1
          <br><dt><code>m68*-*-*</code><dd>softfloat, m68881, m68000, m68020.
d408 2
a409 1
          <br><dt><code>mips*-*-*</code><dd>single-float, biendian, softfloat.
d411 2
a412 1
          <br><dt><code>powerpc*-*-*, rs6000*-*-*</code><dd>aix64, pthread, softfloat, powercpu, powerpccpu, powerpcos, biendian,
d417 2
a418 1
     <br><dt><code>--enable-threads</code><dd>Specify that the target
d426 2
a427 2
available for the system.  In this case, <span class="option">--enable-threads</span> is an
alias for <span class="option">--enable-threads=single</span>.
d429 3
a431 2
     <br><dt><code>--disable-threads</code><dd>Specify that threading support should be disabled for the system. 
This is an alias for <span class="option">--enable-threads=single</span>.
d433 2
a434 1
     <br><dt><code>--enable-threads=</code><var>lib</var><dd>Specify that
d440 7
a446 4
<dt><code>aix</code><dd>AIX thread support. 
<br><dt><code>dce</code><dd>DCE thread support. 
<br><dt><code>mach</code><dd>Generic MACH thread support, known to work on NeXTSTEP.  (Please note
that the file needed to support this configuration, <span class="file">gthr-mach.h</span>, is
d448 6
a453 3
<br><dt><code>no</code><dd>This is an alias for <span class="samp">single</span>. 
<br><dt><code>posix</code><dd>Generic POSIX thread support. 
<br><dt><code>pthreads</code><dd>Same as <span class="samp">posix</span> on arm*-*-linux*, *-*-chorusos* and *-*-freebsd*
d456 10
a465 5
<br><dt><code>rtems</code><dd>RTEMS thread support. 
<br><dt><code>single</code><dd>Disable thread support, should work for all platforms. 
<br><dt><code>solaris</code><dd>Sun Solaris 2 thread support. 
<br><dt><code>vxworks</code><dd>VxWorks thread support. 
<br><dt><code>win32</code><dd>Microsoft Win32 API thread support. 
d468 2
a469 1
     <br><dt><code>--with-cpu=</code><var>cpu</var><dd>Specify which cpu variant the
d474 1
a474 1
<span class="file">gcc/config.gcc</span> script for a complete list of supported models.
d476 2
a477 1
     <br><dt><code>--enable-altivec</code><dd>Specify that the target supports AltiVec vector enhancements.  This
d482 2
a483 1
     <br><dt><code>--enable-target-optspace</code><dd>Specify that target
d487 2
a488 1
     <br><dt><code>--disable-cpp</code><dd>Specify that a user visible <span class="command">cpp</span> program should not be installed.
d490 3
a492 2
     <br><dt><code>--with-cpp-install-dir=</code><var>dirname</var><dd>Specify that the user visible <span class="command">cpp</span> program should be installed
in <var>prefix</var><span class="file">/</span><var>dirname</var><span class="file">/cpp</span>, in addition to <var>bindir</var>.
d494 2
a495 1
     <br><dt><code>--enable-initfini-array</code><dd>Force the use of sections <code>.init_array</code> and <code>.fini_array</code>
d497 1
a497 1
destructors.  Option <span class="option">--disable-initfini-array</span> has the
d502 3
a504 2
     <br><dt><code>--enable-maintainer-mode</code><dd>The build rules that
regenerate the GCC master message catalog <span class="file">gcc.pot</span> are normally
d507 1
a507 1
catalog, configuring with <span class="option">--enable-maintainer-mode</span> will enable
d511 2
a512 1
     <br><dt><code>--enable-version-specific-runtime-libs</code><dd>Specify
d514 4
a517 4
subdirectory (<var>libsubdir</var>) rather than the usual places.  In
addition, <span class="samp">libstdc++</span>'s include files will be installed in
<var>libsubdir</var><span class="file">/include/g++</span> unless you overruled it by using
<span class="option">--with-gxx-include-dir=</span><var>dirname</var>.  Using this option is
d519 2
a520 2
parallel. This is currently supported by <span class="samp">libf2c</span> and
<span class="samp">libstdc++</span>, and is the default for <span class="samp">libobjc</span> which cannot be
d523 2
a524 1
     <br><dt><code>--enable-languages=</code><var>lang1</var><code>,</code><var>lang2</var><code>,...</code><dd>Specify that only a particular subset of compilers and
d527 1
a527 1
<span class="file">gcc</span> directory of your GCC source tree:<br>
d529 2
a530 2
     </pre>
     <p>Currently, you can use any of the following:
d533 1
a533 1
If you do not pass this flag, all languages available in the <span class="file">gcc</span>
d535 1
a535 1
<span class="samp">make bootstrap</span> <strong>does not</strong> work anymore, as those
d538 2
a539 1
     <br><dt><code>--disable-libgcj</code><dd>Specify that the run-time libraries
d545 1
a545 1
the target platform.  If GCJ is enabled but <span class="samp">libgcj</span> isn't built, you
d547 2
a548 2
<span class="file">configure.in</span> so that <span class="samp">libgcj</span> is enabled by default on this platform,
you may use <span class="option">--enable-libgcj</span> to override the default.
d550 2
a551 1
     <br><dt><code>--with-dwarf2</code><dd>Specify that the compiler should
d554 4
a557 1
     <br><dt><code>--enable-win32-registry</code><dt><code>--enable-win32-registry=</code><var>key</var><dt><code>--disable-win32-registry</code><dd>The <span class="option">--enable-win32-registry</span> option enables Windows-hosted GCC
d560 3
a562 2
     <pre class="smallexample">          <code>HKEY_LOCAL_MACHINE\SOFTWARE\Free Software Foundation\</code><var>key</var>
     </pre>
d564 1
a564 1
<span class="option">--enable-win32-registry=</span><var>key</var> option. Vendors and distributors
d568 1
a568 1
by default, and can be disabled by <span class="option">--disable-win32-registry</span>
d571 8
a578 5
     <br><dt><code>--nfp</code><dd>Specify that the machine does not have a floating point unit.  This
option only applies to <span class="samp">m68k-sun-sunos</span><var>n</var>.  On any other
system, <span class="option">--nfp</span> has no effect.

     <br><dt><code>--enable-checking</code><dt><code>--enable-checking=</code><var>list</var><dd>When you specify this option, the compiler is built to perform checking
d586 3
a588 3
<span class="samp">misc</span>, <span class="samp">tree</span>, <span class="samp">gc</span>, <span class="samp">rtl</span>, <span class="samp">rtlflag</span>,
<span class="samp">gcac</span> and <span class="samp">valgrind</span>.  The check <span class="samp">valgrind</span> requires the
external <span class="command">valgrind</span> simulator, available from
d590 2
a591 2
not specified is <span class="samp">misc,tree,gc,rtlflag</span>; the checks <span class="samp">rtl</span>,
<span class="samp">gcac</span> and <span class="samp">valgrind</span> are very expensive.
d593 3
a595 1
     <br><dt><code>--enable-coverage</code><dt><code>--enable-coverage=</code><var>level</var><dd>With this option, the compiler is built to collect self coverage
d599 1
a599 1
not, values are <span class="samp">opt</span> and <span class="samp">noopt</span>. For coverage analysis you
d604 3
a606 1
     <br><dt><code>--enable-nls</code><dt><code>--disable-nls</code><dd>The <span class="option">--enable-nls</span> option enables Native Language Support (NLS),
d609 1
a609 1
canadian cross build.  The <span class="option">--disable-nls</span> option disables NLS.
d611 3
a613 2
     <br><dt><code>--with-included-gettext</code><dd>If NLS is enabled, the <span class="option">--with-included-gettext</span> option causes the build
procedure to prefer its copy of GNU <span class="command">gettext</span>.
d615 2
a616 1
     <br><dt><code>--with-catgets</code><dd>If NLS is enabled, and if the host lacks <code>gettext</code> but has the
d619 1
a619 1
<code>gettext</code> library.  The <span class="option">--with-catgets</span> option causes the
d622 3
a624 2
     <br><dt><code>--with-libiconv-prefix=</code><var>dir</var><dd>Search for libiconv header files in <var>dir</var><span class="file">/include</span> and
libiconv library files in <var>dir</var><span class="file">/lib</span>.
d626 2
a627 1
     <br><dt><code>--with-system-zlib</code><dd>Use installed zlib rather than that included with GCC.  This option
d630 2
a631 1
     <br><dt><code>--enable-obsolete</code><dd>Enable configuration for an obsoleted system.  If you attempt to
d643 3
a645 1
<dt><code>--with-sysroot</code><dt><code>--with-sysroot=</code><var>dir</var><dd>Tells GCC to consider <var>dir</var> as the root of a tree that contains a
d649 5
a653 5
install tree, unlike the options <span class="option">--with-headers</span> and
<span class="option">--with-libs</span> that this option obsoletes.  The default value,
in case <span class="option">--with-sysroot</span> is not given an argument, is
<span class="option">${gcc_tooldir}/sys-root</span>.  If the specified directory is a
subdirectory of <span class="option">${exec_prefix}</span>, then it will be found relative to
d656 3
a658 1
     <br><dt><code>--with-headers</code><dt><code>--with-headers=</code><var>dir</var><dd>Deprecated in favor of <span class="option">--with-sysroot</span>. 
d661 1
a661 1
files.  These include files will be copied into the <span class="file">gcc</span> install
d663 3
a665 3
building a cross compiler, if <var>prefix</var><span class="file">/</span><var>target</var><span class="file">/sys-include</span>
doesn't pre-exist.  If <var>prefix</var><span class="file">/</span><var>target</var><span class="file">/sys-include</span> does
pre-exist, the <var>dir</var> argument may be omitted.  <span class="command">fixincludes</span>
d667 3
a669 1
<br><dt><code>--with-libs</code><dt><code>--with-libs=``</code><var>dir1</var> <var>dir2</var><code> ... </code><var>dirN</var><code>''</code><dd>Deprecated in favor of <span class="option">--with-sysroot</span>. 
d671 1
a671 1
libraries.  These libraries will be copied into the <span class="file">gcc</span> install
d674 2
a675 1
<br><dt><code>--with-newlib</code><dd>Specifies that <span class="samp">newlib</span> is
d677 2
a678 2
omitted from <span class="file">libgcc.a</span> on the assumption that it will be provided by
<span class="samp">newlib</span>. 
d681 9
a689 17
   <p>Note that each <span class="option">--enable</span> option has a corresponding
<span class="option">--disable</span> option and that each <span class="option">--with</span> option has a
corresponding <span class="option">--without</span> option.

   <p><hr />
<p><a href="./index.html">Return to the GCC Installation page</a>

<!-- ***Building**************************************************************** -->
<!-- ***Testing***************************************************************** -->
<!-- ***Final install*********************************************************** -->
<!-- ***Binaries**************************************************************** -->
<!-- ***Specific**************************************************************** -->
<!-- ***Old documentation****************************************************** -->
<!-- ***GFDL******************************************************************** -->
<!-- *************************************************************************** -->
<!-- Part 6 The End of the Document -->
</body></html>
@


