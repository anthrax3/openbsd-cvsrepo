head	1.4;
access;
symbols
	OPENBSD_2_5:1.3.0.6
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.4
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	FSF_2_8_1:1.1.1.1
	FSF_2_8_0:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.4
date	99.05.26.16.27.30;	author espie;	state dead;
branches;
next	1.3;

1.3
date	98.03.03.21.33.10;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	98.02.15.07.57.33;	author niklas;	state dead;
branches;
next	1.1;

1.1
date	98.02.14.19.23.41;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.02.14.19.23.41;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.4
log
@So long, and thanks for all the bugs.
@
text
@# we need to supply our own assembly versions of libgcc1.c files,
# since the user may not have native 'cc' available

CROSS_LIBGCC1 = libgcc1-asm.a
LIB1ASMSRC = sparc/lb1spc.asm
LIB1ASMFUNCS = _mulsi3 _divsi3 _modsi3

# crt0 is built elsewhere
LIBGCC1_TEST =

# These are really part of libgcc1, but this will cause them to be
# built correctly, so...

LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c

dp-bit.c: $(srcdir)/config/fp-bit.c
	cat $(srcdir)/config/fp-bit.c > dp-bit.c

fp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#define FLOAT' > fp-bit.c
	cat $(srcdir)/config/fp-bit.c >> fp-bit.c

# MULTILIB_OPTIONS should have msparclite too, but we'd have to make
# gas build...
#MULTILIB_OPTIONS = msoft-float mcpu=v8
MULTILIB_OPTIONS = msoft-float
#MULTILIB_DIRNAMES = soft v8
MULTILIB_DIRNAMES = soft
#MULTILIB_MATCHES = msoft-float=mno-fpu mcpu?v8=mv8
MULTILIB_MATCHES = msoft-float=mno-fpu

LIBGCC = stmp-multilib
INSTALL_LIBGCC = install-multilib

# Assemble startup files.
crti.o: $(srcdir)/config/sparc/sol2-ci.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) -c -o crti.o -x assembler $(srcdir)/config/sparc/sol2-ci.asm
crtn.o: $(srcdir)/config/sparc/sol2-cn.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) -c -o crtn.o -x assembler $(srcdir)/config/sparc/sol2-cn.asm
@


1.3
log
@GCC 2.8.0 merge
@
text
@@


1.2
log
@These files were new in the 2.8 import (into the FSF branch) and cvs is stupid
enough to think my branch import want s the new files to end up in the trunk
as well.  Maybe cvs know how to do what I want, but I could not find it in
the manpage
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@
@
text
@@

