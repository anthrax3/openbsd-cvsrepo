head	1.3;
access;
symbols
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	FSF_2_8_1:1.1.1.2
	FSF_2_8_0:1.1.1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.3
date	99.05.26.16.27.31;	author espie;	state dead;
branches;
next	1.2;

1.2
date	98.03.03.21.33.13;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.12.20.01.05.44;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.20.01.05.44;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.02.14.19.23.43;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@So long, and thanks for all the bugs.
@
text
@# we need to supply our own assembly versions of libgcc1.c files,
# since the user may not have native 'cc' available

LIBGCC1 =
CROSS_LIBGCC1 =
LIBGCC1_TEST =

# gmon build rule:
gmon.o:	$(srcdir)/config/sparc/gmon-sol2.c $(GCC_PASSES) $(CONFIG_H) stmp-int-hdrs
	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) \
		-c $(srcdir)/config/sparc/gmon-sol2.c -o gmon.o

# Assemble startup files.
crt1.o: $(srcdir)/config/sparc/sol2-c1.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) -c -o crt1.o -x assembler $(srcdir)/config/sparc/sol2-c1.asm
crti.o: $(srcdir)/config/sparc/sol2-ci.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) -c -o crti.o -x assembler $(srcdir)/config/sparc/sol2-ci.asm
crtn.o: $(srcdir)/config/sparc/sol2-cn.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) -c -o crtn.o -x assembler $(srcdir)/config/sparc/sol2-cn.asm
gcrt1.o: $(srcdir)/config/sparc/sol2-g1.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) -c -o gcrt1.o -x assembler $(srcdir)/config/sparc/sol2-g1.asm

# We need to use -fPIC when we are using gcc to compile the routines in
# crtstuff.c.  This is only really needed when we are going to use gcc/g++
# to produce a shared library, but since we don't know ahead of time when
# we will be doing that, we just always use -fPIC when compiling the
# routines in crtstuff.c.

CRTSTUFF_T_CFLAGS = -fPIC
TARGET_LIBGCC2_CFLAGS = -fPIC
@


1.2
log
@GCC 2.8.0 merge
@
text
@@


1.1
log
@Initial revision
@
text
@d6 1
d9 1
a9 1
gmon.o:	$(srcdir)/config/sparc/gmon-sol2.c $(GCC_PASSES) $(CONFIG_H)
d14 8
a21 6
crt1.o: $(srcdir)/config/sparc/sol2-c1.asm
	$(AS) -o crt1.o $(srcdir)/config/sparc/sol2-c1.asm
crti.o: $(srcdir)/config/sparc/sol2-ci.asm
	$(AS) -o crti.o $(srcdir)/config/sparc/sol2-ci.asm
crtn.o: $(srcdir)/config/sparc/sol2-cn.asm
	$(AS) -o crtn.o $(srcdir)/config/sparc/sol2-cn.asm
d29 2
a30 5
# Since the GNU assembler doesn't support PIC yet, we need to force gcc to
# use the native assembler when building crtstuff.  If we're a
# cross-compiler, just give up on using PIC.

CRTSTUFF_T_CFLAGS = `if [ -z "$(CROSS)" ]; then echo -fPIC -B/usr/ccs/bin/; fi`
@


1.1.1.1
log
@FSF GCC version 2.7.2
@
text
@@


1.1.1.2
log
@*** empty log message ***
@
text
@a5 1
LIBGCC1_TEST =
d8 1
a8 1
gmon.o:	$(srcdir)/config/sparc/gmon-sol2.c $(GCC_PASSES) $(CONFIG_H) stmp-int-hdrs
d13 6
a18 8
crt1.o: $(srcdir)/config/sparc/sol2-c1.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) -c -o crt1.o -x assembler $(srcdir)/config/sparc/sol2-c1.asm
crti.o: $(srcdir)/config/sparc/sol2-ci.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) -c -o crti.o -x assembler $(srcdir)/config/sparc/sol2-ci.asm
crtn.o: $(srcdir)/config/sparc/sol2-cn.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) -c -o crtn.o -x assembler $(srcdir)/config/sparc/sol2-cn.asm
gcrt1.o: $(srcdir)/config/sparc/sol2-g1.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) -c -o gcrt1.o -x assembler $(srcdir)/config/sparc/sol2-g1.asm
d26 5
a30 2
CRTSTUFF_T_CFLAGS = -fPIC
TARGET_LIBGCC2_CFLAGS = -fPIC
@

