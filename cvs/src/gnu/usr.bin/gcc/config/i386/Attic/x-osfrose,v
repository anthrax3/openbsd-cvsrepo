head	1.4;
access;
symbols
	OPENBSD_2_5:1.3.0.6
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.4
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	FSF_2_8_1:1.1.1.3
	FSF_2_8_0:1.1.1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.4
date	99.05.26.16.24.54;	author espie;	state dead;
branches;
next	1.3;

1.3
date	98.03.08.18.29.42;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	98.03.03.21.25.40;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.12.20.01.04.21;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.20.01.04.21;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.02.14.19.17.34;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	98.03.08.18.12.05;	author millert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@So long, and thanks for all the bugs.
@
text
@# Define CC and OLDCC as the same, so that the tests:
#	if [ x"$(OLDCC)" = x"$(CC)" ] ...
#
# will succeed (if OLDCC != CC, it is assumed that GCC is
# being used in secondary stage builds).

BUILD		=
CC		= $(OLDCC)
CLIB		= -lld
X_CFLAGS	= $(DEB_OPT) $(MSTATS) $(X_DEFINES)
X_CFLAGS_NODEBUG = $(NO_DEBUG) $(MSTATS) $(OPT) $(PROFILE) $(X_DEFINES) $(XCFLAGS)
XCFLAGS		= $(SHLIB)
CPP_ABORT	= # -Dabort=fancy_abort
CPPFLAGS	= $(CPP_ABORT) $(SYSTEM_INCLUDES)
DEB_OPT		= $(OPT) $(DEBUG) $(PROFILE)
DEBUG		= 
DEBUG_COLLECT	= # -DDEBUG
CCLIBFLAGS	= -O -DNO_HALF_PIC
GCC_CFLAGS	= $(INTERNAL_CFLAGS) $(X_CFLAGS) $(T_CFLAGS) $(CFLAGS) -B./ -DPOSIX -DNO_HALF_PIC
LDFLAGS		=
MSTATS		= # -mstats
OLDCC		= /usr/ccs/gcc/gcc
OPT		= -O
PROFILE		=
SHLIB		= -pic-none
SYSTEM_INCLUDES	= # -I${BUILD}/usr/include
X_DEFINES	= -Dvfork=fork
@


1.3
log
@update to gcc 2.8.1
@
text
@@


1.2
log
@GCC 2.8.0 merge
@
text
@a19 1
INSTALL		= installbsd -c
@


1.1
log
@Initial revision
@
text
@d10 3
a12 2
X_CFLAGS	= $(DEB_OPT) $(MSTATS) $(SHLIB) $(X_DEFINES)
X_CFLAGS_NODEBUG = $(NO_DEBUG) $(MSTATS) $(OPT) $(PROFILE) $(SHLIB) $(X_DEFINES) $(XCFLAGS)
a28 4

libdir		= /usr/ccs
mandir		= /usr/ccs/gcc/$(target)/$(version)
bindir		= /usr/ccs/gcc/$(target)/$(version)
@


1.1.1.1
log
@FSF GCC version 2.7.2
@
text
@@


1.1.1.2
log
@*** empty log message ***
@
text
@d10 2
a11 3
X_CFLAGS	= $(DEB_OPT) $(MSTATS) $(X_DEFINES)
X_CFLAGS_NODEBUG = $(NO_DEBUG) $(MSTATS) $(OPT) $(PROFILE) $(X_DEFINES) $(XCFLAGS)
XCFLAGS		= $(SHLIB)
d28 4
@


1.1.1.3
log
@FSF gcc 2.8.1
@
text
@d20 1
@

