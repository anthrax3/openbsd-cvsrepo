head	1.3;
access;
symbols
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	FSF_2_8_1:1.1.1.2
	FSF_2_8_0:1.1.1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	99.05.26.16.24.59;	author espie;	state dead;
branches;
next	1.2;

1.2
date	98.03.03.21.25.56;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.12.20.01.04.22;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.20.01.04.22;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.02.14.19.17.44;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@So long, and thanks for all the bugs.
@
text
@/* Configuration for GCC for Intel i386 running SCO.  */

#include "i386/xm-sysv3.h"

/* On SCO 3.2.1, ldexp rejects values outside [0.5, 1). */

#define BROKEN_LDEXP

/* Big buffers improve performance.  */

#define IO_BUFFER_SIZE (0x8000 - 1024)

/* SCO has a very small ARG_MAX.  */
#define SMALL_ARG_MAX

#ifndef __GNUC__
/* The SCO compiler gets it wrong, and treats enumerated bitfields
   as signed quantities, making it impossible to use an 8-bit enum
   for compiling GNU C++.  */
#define ONLY_INT_FIELDS 1
#define CODE_FIELD_BUG 1
#endif

/* SCO lacks sys_siglist.  */
#define NO_SYS_SIGLIST
@


1.2
log
@GCC 2.8.0 merge
@
text
@@


1.1
log
@Initial revision
@
text
@d23 3
@


1.1.1.1
log
@FSF GCC version 2.7.2
@
text
@@


1.1.1.2
log
@*** empty log message ***
@
text
@a22 3

/* SCO lacks sys_siglist.  */
#define NO_SYS_SIGLIST
@

