head	1.8;
access;
symbols
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4;
locks; strict;
comment	@ * @;


1.8
date	99.05.26.16.24.43;	author espie;	state dead;
branches;
next	1.7;

1.7
date	99.04.01.21.24.41;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	99.01.17.17.41.13;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	97.03.28.20.47.21;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.08.25.11.50.11;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.05.04.08.20.39;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.04.29.07.09.47;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.12.21.01.17.18;	author niklas;	state Exp;
branches;
next	;


desc
@Support file for OpenBSD
@


1.8
log
@So long, and thanks for all the bugs.
@
text
@/* This is tested by i386gas.h.  */
#define YES_UNDERSCORES

#include <i386/gstabs.h>

/* Remove when the math-emulator is fixed.  */
/* XXX i386 TARGET_DEFAULT/TARGET_CPU_DEFAULT is weird...
   This must be defined as TARGET_DEFAULT, and after including gstabs.h
	to override unix.h TARGET_DEFAULT definition.
	In effect, this adds MASK_NO_FANCY_MATH_387 to the usual definition.  */
#undef TARGET_DEFAULT
#define TARGET_DEFAULT \
	(MASK_NO_FANCY_MATH_387 | MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS)

/* Get perform_* macros to build libgcc.a.  */
#include <i386/perform.h>

#define OBSD_OLD_GAS
/* Get generic OpenBSD definitions.  */
#include <openbsd.h>

#define CPP_PREDEFINES "-Dunix -Di386 -D__OpenBSD__ -Asystem(unix) -Asystem(OpenBSD) -Acpu(i386) -Amachine(i386)"

#undef SIZE_TYPE
#define SIZE_TYPE "unsigned int"

#undef PTRDIFF_TYPE
#define PTRDIFF_TYPE "int"

#undef WCHAR_TYPE
#define WCHAR_TYPE "int"

#undef WCHAR_UNSIGNED
#define WCHAR_UNSIGNED 0

#undef WCHAR_TYPE_SIZE
#define WCHAR_TYPE_SIZE 32

/*	$OpenBSD: openbsd.h,v 1.7 1999/04/01 21:24:41 espie Exp $	*/

/* There are conflicting reports about whether this system uses
   a different assembler syntax.  wilson@@cygnus.com says # is right.  */
#undef COMMENT_BEGIN
#define COMMENT_BEGIN "#"

#undef ASM_APP_ON
#define ASM_APP_ON "#APP\n"

#undef ASM_APP_OFF
#define ASM_APP_OFF "#NO_APP\n"

/* The following macros are stolen from i386v4.h */
/* These have to be defined to get PIC code correct */

/* This is how to output an element of a case-vector that is relative.
   This is only used for PIC code.  See comments by the `casesi' insn in
   i386.md for an explanation of the expression this outputs. */

#undef ASM_OUTPUT_ADDR_DIFF_ELT
#define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, VALUE, REL) \
  fprintf (FILE, "\t.long _GLOBAL_OFFSET_TABLE_+[.-%s%d]\n", LPREFIX, VALUE)

/* Indicate that jump tables go in the text section.  This is
   necessary when compiling PIC code.  */

#define JUMP_TABLES_IN_TEXT_SECTION

/* Don't default to pcc-struct-return, because gcc is the only compiler, and
   we want to retain compatibility with older gcc versions.  */
#define DEFAULT_PCC_STRUCT_RETURN 0

/* Profiling routines, partially copied from i386/osfrose.h.  */

/* Redefine this to use %eax instead of %edx.  */
#undef FUNCTION_PROFILER
#define FUNCTION_PROFILER(FILE, LABELNO)  \
{									\
  if (flag_pic)								\
    {									\
      fprintf (FILE, "\tcall mcount@@PLT\n");				\
    }									\
  else									\
    {									\
      fprintf (FILE, "\tcall mcount\n");				\
    }									\
}
@


1.7
log
@Fix TARGET_CPU_DEFAULT/TARGET_DEFAULT mixup (problem is specific to
brain-damaged i386 configuration files).
No need to change configure.in/configure as well, since I have not moved
to the egcs config for this item yet.
@
text
@d39 1
a39 1
/*	$OpenBSD: openbsd.h,v 1.6 1999/01/17 17:41:13 espie Exp $	*/
@


1.6
log
@- add OBS_OLD_GAS to conditionalize ASM_SPEC for those archs that still
use it (so that more archs may include openbsd.h as is)
- #undef CPP_PREDEFINES globally.
- reorganize stuff and comments to be more precise and match gcc.info
structure better.
- synch other files
@
text
@a0 3
/* This goes away when the math-emulator is fixed */
#define TARGET_CPU_DEFAULT 0400		/* TARGET_NO_FANCY_MATH_387 */

d6 9
d39 1
a39 1
/*	$OpenBSD: openbsd.h,v 1.5 1997/03/28 20:47:21 deraadt Exp $	*/
@


1.5
log
@no more -D__NetBSD__
@
text
@d12 1
a15 1
#undef CPP_PREDEFINES
d33 1
a33 1
/*	$OpenBSD: openbsd.h,v 1.4 1996/08/25 11:50:11 deraadt Exp $	*/
@


1.4
log
@strength reduction is safe once again
@
text
@a14 1
/* Keep __NetBSD__ until we diverge sufficiently from them.  */
d16 1
a16 1
#define CPP_PREDEFINES "-Dunix -Di386 -D__OpenBSD__ -D__NetBSD__ -Asystem(unix) -Asystem(OpenBSD) -Acpu(i386) -Amachine(i386)"
d33 1
a33 1
/*	$OpenBSD: openbsd.h,v 1.2 1996/04/29 07:09:47 niklas Exp $	*/
@


1.3
log
@i386 requires -fno-strength-reduce because -O2 generates incorrect code
@
text
@d34 1
a34 1
/*	$OpenBSD$	*/
a39 3

#undef	CC1_SPEC
#define CC1_SPEC "-fno-strength-reduce"
@


1.2
log
@From NetBSD:
Re-enable weak alias and sysv pragma support that was lost when we
upgraded to gcc-2.7.  These changes have been submitted to the gcc
maintainers.  With luck, we won't have this problem again...
@
text
@d41 3
@


1.1
log
@First cut at making a minimal intrusive munge of gcc to fit in a BSD
framework.  This means, provide a Makefile.bsd-wrapper.  Remove
intermediate files from the source dir.  Build them in the obj-dir.
Add some Makefile hooks so we can tune the std Makefile for our
purpose but still have it behave normal for out-of-tree
configurations.  Only i386 is supported for now.  The other archs will
follow soon.   This checkin requires an existing makeinfo and a yacc
that accepts -o.
@
text
@d34 1
a34 1
#define HANDLE_SYSV_PRAGMA
@
