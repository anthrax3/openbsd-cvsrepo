head	1.3;
access;
symbols
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	FSF_2_8_1:1.1.1.2
	FSF_2_8_0:1.1.1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	99.05.26.16.25.37;	author espie;	state dead;
branches;
next	1.2;

1.2
date	98.03.03.21.28.02;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.12.20.01.04.48;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.20.01.04.48;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.02.14.19.19.18;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@So long, and thanks for all the bugs.
@
text
@/* Definitions of target machine for GNU compiler.  Vxworks m68k version.
   Copyright (C) 1994, 1996, 1997 Free Software Foundation, Inc.

This file is part of GNU CC.

GNU CC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU CC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU CC; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

/* This comment is here to see if it will keep Sun's cpp from dying.  */

#include "m68k/m68k-none.h"
#include "aoutos.h"

#undef CPP_PREDEFINES
#define CPP_PREDEFINES "-Dmc68000 -D__vxworks -D__vxworks_5 -Acpu(m68k) -Amachine(m68k)"

/* The default value for -DCPU=.  */
#if TARGET_CPU_DEFAULT == M68K_CPU_m68k || TARGET_CPU_DEFAULT == M68K_CPU_m68020
#define CPP_SUBTARGET_CPU_DEFAULT_SPEC "-DCPU=MC68020"
#else
#if TARGET_CPU_DEFAULT == M68K_CPU_m68000
#define CPP_SUBTARGET_CPU_DEFAULT_SPEC "-DCPU=MC68000"
#else
#if TARGET_CPU_DEFAULT == M68K_CPU_m68030
#define CPP_SUBTARGET_CPU_DEFAULT_SPEC "-DCPU=MC68030"
#else
#if TARGET_CPU_DEFAULT == M68K_CPU_m68040
#define CPP_SUBTARGET_CPU_DEFAULT_SPEC "-DCPU=MC68040"
#else
#if TARGET_CPU_DEFAULT == M68K_CPU_m68302
#define CPP_SUBTARGET_CPU_DEFAULT_SPEC "-DCPU=MC68302"
#else
#if TARGET_CPU_DEFAULT == M68K_CPU_m68332
#define CPP_SUBTARGET_CPU_DEFAULT_SPEC "-DCPU=MC68332"
#else
Unrecognized value in TARGET_CPU_DEFAULT.
#endif
#endif
#endif
#endif
#endif
#endif

#undef SUBTARGET_EXTRA_SPECS
#define SUBTARGET_EXTRA_SPECS \
{ "cpp_subtarget_cpu_default", CPP_SUBTARGET_CPU_DEFAULT_SPEC }

/* Vxworks header files require that the macro CPU be set.  */
/* ??? The previous code didn't set CPU if -ansi.  */
#undef CPP_SUBTARGET_SPEC
#define CPP_SUBTARGET_SPEC "\
%{m68000:-DCPU=MC68000 }%{m68010:-DCPU=MC68010 }%{m68020:-DCPU=MC68020 }%{mc68020:-DCPU=MC68020 }%{m68030:-DCPU=MC68030 }%{m68040:-DCPU=MC68040 }%{m68020-40:-DCPU=MC68020 }%{m68302:-DCPU=MC68000 }%{m68332:-DCPU=CPU32 } \
%{!mc68000:%{!m68000:%{!m68010:%{!mc68020:%{!m68020:%{!m68030:%{!m68040:%{!m68020-40:%{!m68302:%{!m68332:%(cpp_subtarget_cpu_default) }}}}}}}}}} \
"

#define DBX_DEBUGGING_INFO
#undef SDB_DEBUGGING_INFO

/* These are the official values from WRS.  */
#undef WCHAR_TYPE
#define WCHAR_TYPE "char"
#undef WCHAR_TYPE_SIZE
#define WCHAR_TYPE_SIZE 8
#undef PTRDIFF_TYPE
#define PTRDIFF_TYPE "long int"
#undef SIZE_TYPE
#define SIZE_TYPE "unsigned int"

/* VxWorks does all the library stuff itself.  */

#define LIB_SPEC ""

/* Provide required defaults for linker -e. */
 
#define LINK_SPEC "%{!nostdlib:%{!r*:%{!e*:-e start}}}"

/* VxWorks provides the functionality of crt0.o and friends itself.  */

#define STARTFILE_SPEC ""

/* Every structure or union's size must be a multiple of 2 bytes.  */

#define STRUCTURE_SIZE_BOUNDARY 16

/* Allow folding division by zero.  */
#define REAL_INFINITY

/* GCC is the primary compiler for VxWorks, so we don't need this.  */
#undef PCC_STATIC_STRUCT_RETURN
@


1.2
log
@GCC 2.8.0 merge
@
text
@@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
   Copyright (C) 1994 Free Software Foundation, Inc.
d23 4
d29 38
a66 10
/* Vxworks header files require that the macro CPU be set, so we must override
   the CPP_SPEC from m68k-none.h.  */

#define CPP_SPEC \
"%{!mc68000:%{!m68000:%{!m68332:%{!msoft-float:%{mfpa:-D__HAVE_FPA__ }%{!mfpa:-D__HAVE_68881__ }}}}}\
%{!ansi:%{m68000:-DCPU=MC68000 }%{m68010:-Dmc68010 -DCPU=MC68010 }%{m68020:-Dmc68020 -DCPU=MC68020 }%{mc68020:-Dmc68020 -DCPU=MC68020 }%{m68030:-Dmc68030 -DCPU=MC68030 }%{m68040:-Dmc68040 -DCPU=MC68040 }%{m68020-40:-Dmc68020 -Dmc68030 -Dmc68040 -DCPU=MC68020 }%{m68302:-Dmc68302 -DCPU=MC68000 }%{m68332:-Dmc68332 -DCPU=CPU32 }%{!mc68000:%{!m68000:%{!m68010:%{!mc68020:%{!m68020:%{!m68030:%{!m68040:%{!m68020-40:%{!m68302:%{!m68332:-Dmc68020 -DCPU=MC68020 }}}}}}}}}}}\
%{m68010:-D__mc68010__ -D__mc68010 }%{m68020:-D__mc68020__ -D__mc68020 }%{mc68020:-D__mc68020__ -D__mc68020 }%{m68030:-D__mc68030__ -D__mc68030 }%{m68040:-D__mc68040__ -D__mc68040 }%{m68020-40:-D__mc68020__ -D__mc68030__ -D__mc68040__ -D__mc68020 -D__mc68030 -D__mc68040 }%{m68302:-D__mc68302__ -D__mc68302 }%{m68332:-D__mc68332__ -D__mc68332 }%{!mc68000:%{!m68000:%{!m68010:%{!mc68020:%{!m68020:%{!m68030:%{!m68040:%{!m68020-40:%{!m68302:%{!m68332:-D__mc68020__ -D__mc68020 }}}}}}}}}}"

#include "m68k/m68k-none.h"
#include "aoutos.h"
d71 1
d73 5
a77 1
#define WCHAR_TYPE "short unsigned int"
d79 1
a79 1
#define SIZE_TYPE "long unsigned int"
@


1.1.1.1
log
@FSF GCC version 2.7.2
@
text
@@


1.1.1.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
   Copyright (C) 1994, 1996, 1997 Free Software Foundation, Inc.
d23 10
a35 42
#undef CPP_PREDEFINES
#define CPP_PREDEFINES "-Dmc68000 -D__vxworks -D__vxworks_5 -Acpu(m68k) -Amachine(m68k)"

/* The default value for -DCPU=.  */
#if TARGET_CPU_DEFAULT == M68K_CPU_m68k || TARGET_CPU_DEFAULT == M68K_CPU_m68020
#define CPP_SUBTARGET_CPU_DEFAULT_SPEC "-DCPU=MC68020"
#else
#if TARGET_CPU_DEFAULT == M68K_CPU_m68000
#define CPP_SUBTARGET_CPU_DEFAULT_SPEC "-DCPU=MC68000"
#else
#if TARGET_CPU_DEFAULT == M68K_CPU_m68030
#define CPP_SUBTARGET_CPU_DEFAULT_SPEC "-DCPU=MC68030"
#else
#if TARGET_CPU_DEFAULT == M68K_CPU_m68040
#define CPP_SUBTARGET_CPU_DEFAULT_SPEC "-DCPU=MC68040"
#else
#if TARGET_CPU_DEFAULT == M68K_CPU_m68302
#define CPP_SUBTARGET_CPU_DEFAULT_SPEC "-DCPU=MC68302"
#else
#if TARGET_CPU_DEFAULT == M68K_CPU_m68332
#define CPP_SUBTARGET_CPU_DEFAULT_SPEC "-DCPU=MC68332"
#else
Unrecognized value in TARGET_CPU_DEFAULT.
#endif
#endif
#endif
#endif
#endif
#endif

#undef SUBTARGET_EXTRA_SPECS
#define SUBTARGET_EXTRA_SPECS \
{ "cpp_subtarget_cpu_default", CPP_SUBTARGET_CPU_DEFAULT_SPEC }

/* Vxworks header files require that the macro CPU be set.  */
/* ??? The previous code didn't set CPU if -ansi.  */
#undef CPP_SUBTARGET_SPEC
#define CPP_SUBTARGET_SPEC "\
%{m68000:-DCPU=MC68000 }%{m68010:-DCPU=MC68010 }%{m68020:-DCPU=MC68020 }%{mc68020:-DCPU=MC68020 }%{m68030:-DCPU=MC68030 }%{m68040:-DCPU=MC68040 }%{m68020-40:-DCPU=MC68020 }%{m68302:-DCPU=MC68000 }%{m68332:-DCPU=CPU32 } \
%{!mc68000:%{!m68000:%{!m68010:%{!mc68020:%{!m68020:%{!m68030:%{!m68040:%{!m68020-40:%{!m68302:%{!m68332:%(cpp_subtarget_cpu_default) }}}}}}}}}} \
"

a38 1
/* These are the official values from WRS.  */
d40 1
a40 5
#define WCHAR_TYPE "char"
#undef WCHAR_TYPE_SIZE
#define WCHAR_TYPE_SIZE 8
#undef PTRDIFF_TYPE
#define PTRDIFF_TYPE "long int"
d42 1
a42 1
#define SIZE_TYPE "unsigned int"
@

