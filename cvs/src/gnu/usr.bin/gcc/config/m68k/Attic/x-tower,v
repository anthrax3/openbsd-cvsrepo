head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1
	FSF_2_8_1:1.1.1.1
	FSF_2_8_0:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.05.26.16.25.40;	author espie;	state dead;
branches;
next	1.1;

1.1
date	95.12.20.01.04.48;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.20.01.04.48;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@So long, and thanks for all the bugs.
@
text
@# On the NCR Tower 32 running SVR3, says ra@@intsys.no :
# Do *not* enable optimization in CFLAGS when using the native cc, because:
# a) The optimizer seems to loop when invoked with -O2.
# b) The -O1 level does stack/frame pointer optimizations that make the
#    assembler alloca in libPW.a fail, and the C alloca eats *lots* of memory.
# c) gcc will eventually be recompiled with itself, so all this doesn't matter.
X_CFLAGS = -O0
CCLIBFLAGS = -O2
CLIB = -lmalloc -lPW
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@FSF GCC version 2.7.2
@
text
@@

