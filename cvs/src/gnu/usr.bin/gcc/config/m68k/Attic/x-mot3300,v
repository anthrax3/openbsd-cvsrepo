head	1.3;
access;
symbols
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	FSF_2_8_1:1.1.1.2
	FSF_2_8_0:1.1.1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.3
date	99.05.26.16.25.40;	author espie;	state dead;
branches;
next	1.2;

1.2
date	98.03.03.21.28.05;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.12.20.01.04.48;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.20.01.04.48;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.02.14.19.19.23;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@So long, and thanks for all the bugs.
@
text
@ALLOCA=alloca.o

# This disables the long/short jump optimization.
# I use sysV68 R3V7.1 RM04 (phdm@@info.ucl.ac.be)
# Since ss-950318, with jump optimization enabled, "as" issues a warning
# when assembling combine.s :
#   aline nnnnn : Warning: Table overflow: some optimizations lost (SDIs)
# but later "ld" complains with
#   ld: relocation entry found for non-relocatable symbol in combine.o
# and the produced "cc1" fails with SIGSEGV
# Another possible fix would be to split combine.c.
# Since ss-961013, the same happens for expr.c compiled by gcc, but not by cc;
# and for cp/decl.c; aren't those files too big ?
XCFLAGS=`case $@@ in combine.o|expr.o|decl.o) echo -Wa,-j;;esac`
@


1.2
log
@GCC 2.8.0 merge
@
text
@@


1.1
log
@Initial revision
@
text
@d12 3
a14 1
XCFLAGS=`if [ x$@@ = xcombine.o ]; then echo -Wa,-j; fi`
@


1.1.1.1
log
@FSF GCC version 2.7.2
@
text
@@


1.1.1.2
log
@*** empty log message ***
@
text
@d12 1
a12 3
# Since ss-961013, the same happens for expr.c compiled by gcc, but not by cc;
# and for cp/decl.c; aren't those files too big ?
XCFLAGS=`case $@@ in combine.o|expr.o|decl.o) echo -Wa,-j;;esac`
@

