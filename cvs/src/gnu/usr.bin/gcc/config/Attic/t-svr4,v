head	1.3;
access;
symbols
	OPENBSD_2_5:1.2.0.6
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	FSF_2_8_1:1.1.1.2
	FSF_2_8_0:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.3
date	99.05.26.16.23.35;	author espie;	state dead;
branches;
next	1.2;

1.2
date	98.03.08.18.29.08;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.12.20.01.03.39;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.20.01.03.39;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.03.08.18.10.47;	author millert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@So long, and thanks for all the bugs.
@
text
@# We need to use -fPIC when we are using gcc to compile the routines in
# crtstuff.c.  This is only really needed when we are going to use gcc/g++
# to produce a shared library, but since we don't know ahead of time when
# we will be doing that, we just always use -fPIC when compiling the
# routines in crtstuff.c.  Likewise for libgcc2.c.

CRTSTUFF_T_CFLAGS = -fPIC
TARGET_LIBGCC2_CFLAGS = -fPIC
@


1.2
log
@update to gcc 2.8.1
@
text
@@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
# routines in crtstuff.c.
d8 1
@


1.1.1.1
log
@FSF GCC version 2.7.2
@
text
@@


1.1.1.2
log
@FSF gcc 2.8.1
@
text
@d5 1
a5 1
# routines in crtstuff.c.  Likewise for libgcc2.c.
a7 1
TARGET_LIBGCC2_CFLAGS = -fPIC
@

