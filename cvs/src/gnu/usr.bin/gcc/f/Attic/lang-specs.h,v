head	1.4;
access;
symbols
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	99.05.26.16.29.11;	author espie;	state dead;
branches;
next	1.3;

1.3
date	97.04.09.13.43.58;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	97.04.04.13.20.00;	author graichen;	state Exp;
branches;
next	1.1;

1.1
date	96.07.27.02.51.05;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.4
log
@So long, and thanks for all the bugs.
@
text
@/* lang-specs.h file for Fortran
   Copyright (C) 1995 Free Software Foundation, Inc.
   Contributed by James Craig Burley (burley@@gnu.ai.mit.edu).

This file is part of GNU Fortran.

GNU Fortran is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU Fortran is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Fortran; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA
02111-1307, USA.

*/

/* This is the contribution to the `default_compilers' array in gcc.c for
   g77.  */

#ifdef __STDC__	/* Else stringizing of OO below won't work, but in
		   K&R case we're not building the f77 language. */

#ifdef OBJECT_SUFFIX	/* Not defined compiling gcc.c prior to 2.7.0. */
#define OO "%O"
#else
#define OO ".o"
#endif

  {".F", "@@f77-cpp-input"},
  {".fpp", "@@f77-cpp-input"},
  {"@@f77-cpp-input",
     /* For f77 we want -traditional to avoid errors with, for
	instance, mismatched '.  Also, we avoid unpleasant surprises
	with substitution of names not prefixed by `_' by using %P
	rather than %p (although this isn't consistent with SGI and
	Sun f77, at least) so you test `__unix' rather than `unix'.
	-D_LANGUAGE_FORTRAN is used by some compilers like SGI and
	might as well be in there. */
   "cpp -lang-c %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %I\
	%{C:%{!E:%eGNU C does not support -C without using -E}}\
	%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\
	-undef -D__GNUC__=%v1 -D__GNUC_MINOR__=%v2\
	%{ansi:-trigraphs -$ -D__STRICT_ANSI__}\
	%{!undef:%P} -D_LANGUAGE_FORTRAN %{trigraphs} \
	%c %{O*:%{!O0:-D__OPTIMIZE__}} -traditional\
	%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C %{D*} %{U*} %{i*} %Z\
	%i %{!M:%{!MM:%{!E:%{!pipe:%g.i}}}}%{E:%W{o*}}%{M:%W{o*}}%{MM:%W{o*}} |\n",
   "%{!M:%{!MM:%{!E:f771 %{!pipe:%g.i} -fset-g77-defaults \
		   %{!Q:-quiet} -dumpbase %b.F %{d*} %{m*} %{a}\
		   %{g*} %{O*} %{W*} %{w} %{pedantic*} \
		   %{v:-version -fversion} %{pg:-p} %{p} %{f*} %{I*}\
		   %{aux-info*}\
		   %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\
		   %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\n\
	      %{!S:as %a %Y\
		      %{c:%W{o*}%{!o*:-o %w%b" OO "}}%{!c:-o %d%w%u" OO "}\
		      %{!pipe:%g.s} %A\n }}}}"},
  {".f", "@@f77"},
  {".for", "@@f77"},
  {"@@f77",
   "%{!M:%{!MM:%{!E:f771 %i -fset-g77-defaults \
		   %{!Q:-quiet} -dumpbase %b.f %{d*} %{m*} %{a}\
		   %{g*} %{O*} %{W*} %{w} %{pedantic*}\
		   %{v:-version -fversion} %{pg:-p} %{p} %{f*} %{I*}\
		   %{aux-info*}\
		   %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\
		   %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\n\
	      %{!S:as %a %Y\
		      %{c:%W{o*}%{!o*:-o %w%b" OO "}}%{!c:-o %d%w%u" OO "}\
		      %{!pipe:%g.s} %A\n }}}}"},

#undef OO

#endif
@


1.3
log
@Revert to older (working) version of gcc, plus recent changes.
@
text
@@


1.2
log
@sync g77 to version 0.5.20 - i hope i got everything right because there
is no patch from 0.5.19 to 0.5.20 - so i did it by diffing two gcc trees
looking carefully at the results

what does the new g77 give us:
* now it completely works on the alpha (64bit)
* faster
* less bugs :-)
@
text
@d2 1
a2 1
   Copyright (C) 1995, 1996 Free Software Foundation, Inc.
@


1.1
log
@Initial integration of G77.

Please do a make cleandir before rebuilding gcc!
@
text
@d2 1
a2 1
   Copyright (C) 1995 Free Software Foundation, Inc.
@
