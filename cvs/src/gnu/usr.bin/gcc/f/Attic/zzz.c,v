head	1.6;
access;
symbols
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	99.05.26.16.29.40;	author espie;	state dead;
branches;
next	1.5;

1.5
date	97.04.09.13.44.22;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	97.04.04.13.20.25;	author graichen;	state Exp;
branches;
next	1.3;

1.3
date	97.02.19.10.36.39;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.12.15.23.35.47;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.07.27.02.51.38;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.6
log
@So long, and thanks for all the bugs.
@
text
@/* zzz.c -- Implementation File (module.c template V1.0)
   Copyright (C) 1995 Free Software Foundation, Inc.
   Contributed by James Craig Burley (burley@@gnu.ai.mit.edu).

This file is part of GNU Fortran.

GNU Fortran is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU Fortran is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Fortran; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA
02111-1307, USA.

   Related Modules:
      None

   Description:
      Has the version number for the front end.	 Makes it easier to
      tell how consistently patches have been applied, etc.

   Modifications:
*/

#include "zzz.h"

/* If you want to override the version date/time info with your own
   macros, e.g. for a consistent distribution when bootstrapping,
   go ahead!  */

#ifndef FFEZZZ_DATE
#ifdef __DATE__
#define FFEZZZ_DATE __DATE__
#else	/* !defined (__DATE__) */
#define FFEZZZ_DATE "date unknown"
#endif	/* !defined (__DATE__) */
#endif	/* !defined (FFEZZZ_DATE) */

#ifndef FFEZZZ_TIME
#ifdef __TIME__
#define FFEZZZ_TIME __TIME__
#else	/* !defined (__TIME__) */
#define FFEZZZ_TIME "time unknown"
#endif	/* !defined (__TIME__) */
#endif	/* !defined (FFEZZZ_TIME) */

char *ffezzz_version_string = "0.5.19.1";
char *ffezzz_date = FFEZZZ_DATE;
char *ffezzz_time = FFEZZZ_TIME;
@


1.5
log
@Revert to older (working) version of gcc, plus recent changes.
@
text
@@


1.4
log
@sync g77 to version 0.5.20 - i hope i got everything right because there
is no patch from 0.5.19 to 0.5.20 - so i did it by diffing two gcc trees
looking carefully at the results

what does the new g77 give us:
* now it completely works on the alpha (64bit)
* faster
* less bugs :-)
@
text
@d54 1
a54 1
char *ffezzz_version_string = "0.5.20";
@


1.3
log
@f77 0.5.19.1.
@
text
@d54 1
a54 1
char *ffezzz_version_string = "0.5.19.1";
@


1.2
log
@Update to g77 0.5.19
@
text
@d54 1
a54 1
char *ffezzz_version_string = "0.5.19";
@


1.1
log
@Initial integration of G77.

Please do a make cleandir before rebuilding gcc!
@
text
@a31 1
#include "proj.h"
d39 1
d41 5
a45 1
#endif
d47 1
d49 4
a52 1
#endif
d54 1
a54 1
char *ffezzz_version_string = "0.5.18";
@
