head	1.5;
access;
symbols
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	99.05.26.16.29.48;	author espie;	state dead;
branches;
next	1.4;

1.4
date	97.04.09.13.44.36;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	97.04.04.13.21.15;	author graichen;	state Exp;
branches;
next	1.2;

1.2
date	96.12.15.23.36.08;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.07.27.02.51.49;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.5
log
@So long, and thanks for all the bugs.
@
text
@#include "f2c.h"

#ifdef KR_headers
extern double sqrt(), f__cabs();

VOID c_sqrt(r, z) complex *r, *z;
#else
#undef abs
#include <math.h>
extern double f__cabs(double, double);

void c_sqrt(complex *r, complex *z)
#endif
{
double mag, t;

if( (mag = f__cabs(z->r, z->i)) == 0.)
	r->r = r->i = 0.;
else if(z->r > 0)
	{
	r->r = t = sqrt(0.5 * (mag + z->r) );
	t = z->i / t;
	r->i = 0.5 * t;
	}
else
	{
	t = sqrt(0.5 * (mag - z->r) );
	if(z->i < 0)
		t = -t;
	r->i = t;
	t = z->i / t;
	r->r = 0.5 * t;
	}
}
@


1.4
log
@Revert to older (working) version of gcc, plus recent changes.
@
text
@@


1.3
log
@sync g77 to version 0.5.20 - i hope i got everything right because there
is no patch from 0.5.19 to 0.5.20 - so i did it by diffing two gcc trees
looking carefully at the results

what does the new g77 give us:
* now it completely works on the alpha (64bit)
* faster
* less bugs :-)
@
text
@d6 1
a6 1
VOID c_sqrt(resx, z) complex *resx, *z;
d12 1
a12 1
void c_sqrt(complex *resx, complex *z)
a15 1
complex res;
d18 1
a18 1
	res.r = res.i = 0.;
d21 1
a21 1
	res.r = t = sqrt(0.5 * (mag + z->r) );
d23 1
a23 1
	res.i = 0.5 * t;
d30 1
a30 1
	res.i = t;
d32 1
a32 1
	res.r = 0.5 * t;
a33 3

resx->r = res.r;
resx->i = res.i;
@


1.2
log
@Update to g77 0.5.19
@
text
@d6 1
a6 1
VOID c_sqrt(r, z) complex *r, *z;
d12 1
a12 1
void c_sqrt(complex *r, complex *z)
d16 1
d19 1
a19 1
	r->r = r->i = 0.;
d22 1
a22 1
	r->r = t = sqrt(0.5 * (mag + z->r) );
d24 1
a24 1
	r->i = 0.5 * t;
d31 1
a31 1
	r->i = t;
d33 1
a33 1
	r->r = 0.5 * t;
d35 3
@


1.1
log
@Initial integration of G77.

Please do a make cleandir before rebuilding gcc!
@
text
@d9 1
a9 1
#include "math.h"
@
