head	1.5;
access;
symbols
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	99.05.26.16.29.46;	author espie;	state dead;
branches;
next	1.4;

1.4
date	97.04.09.13.44.32;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	97.04.04.13.21.12;	author graichen;	state Exp;
branches;
next	1.2;

1.2
date	96.12.15.23.36.00;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.07.27.02.51.45;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.5
log
@So long, and thanks for all the bugs.
@
text
@# Makefile for GNU F77 compiler runtime.
# Copyright 1990 - 1994 by AT&T Bell Laboratories and Bellcore (see the
# file `Notice').
#   Portions of this file Copyright (C) 1995, 1996 Free Software Foundation, Inc.
#   Contributed by Dave Love (d.love@@dl.ac.uk).
#
#This file is part of GNU Fortran.
#
#GNU Fortran is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2, or (at your option)
#any later version.
#
#GNU Fortran is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with GNU Fortran; see the file COPYING.  If not, write to
#the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA
#02111-1307, USA.

SHELL = /bin/sh

srcdir = @@srcdir@@
VPATH = @@srcdir@@

#### Start of system configuration section. ####

# The _FOR_TARGET things are appropriate for a cross-make, passed by the
# superior makefile
GCC_FOR_TARGET = @@CC@@
CC = $(GCC_FOR_TARGET)
CFLAGS = @@CFLAGS@@ $(GCC_FLAGS)
CPPFLAGS = @@CPPFLAGS@@
DEFS = @@DEFS@@
CGFLAGS = -g0
# f2c.h should already be installed in xgcc's include directory but add that
# to -I anyhow in case not using xgcc.
ALL_CFLAGS = -I$(srcdir) -I../../../include $(CPPFLAGS) $(DEFS) $(CFLAGS)
AR = @@AR@@
AR_FLAGS = rc
RANLIB = @@RANLIB@@
RANLIB_TEST = @@RANLIB_TEST@@
CROSS = @@CROSS@@

.SUFFIXES:
.SUFFIXES: .c .o

.c.o:
	$(CC) -c -DSkip_f2c_Undefs $(ALL_CFLAGS) $(CGFLAGS) $<
# Next two lines were removed because Solaris doesn't like `ld -x', and
# it seems there's no real benefit to doing this anyway.
#	ld -r -x -o $@@x $@@
#	mv $@@x $@@

MISC =	F77_aloc.o VersionF.o main.o s_rnge.o abort_.o getarg_.o iargc_.o\
	getenv_.o signal_.o s_stop.o s_paus.o system_.o cabs.o\
	derf_.o derfc_.o erf_.o erfc_.o sig_die.o exit.o
POW =	pow_ci.o pow_dd.o pow_di.o pow_hh.o pow_ii.o  pow_ri.o pow_zi.o pow_zz.o
CX =	c_abs.o c_cos.o c_div.o c_exp.o c_log.o c_sin.o c_sqrt.o
DCX =	z_abs.o z_cos.o z_div.o z_exp.o z_log.o z_sin.o z_sqrt.o
REAL =	r_abs.o r_acos.o r_asin.o r_atan.o r_atn2.o r_cnjg.o r_cos.o\
	r_cosh.o r_dim.o r_exp.o r_imag.o r_int.o\
	r_lg10.o r_log.o r_mod.o r_nint.o r_sign.o\
	r_sin.o r_sinh.o r_sqrt.o r_tan.o r_tanh.o
DBL =	d_abs.o d_acos.o d_asin.o d_atan.o d_atn2.o\
	d_cnjg.o d_cos.o d_cosh.o d_dim.o d_exp.o\
	d_imag.o d_int.o d_lg10.o d_log.o d_mod.o\
	d_nint.o d_prod.o d_sign.o d_sin.o d_sinh.o\
	d_sqrt.o d_tan.o d_tanh.o
INT =	i_abs.o i_dim.o i_dnnt.o i_indx.o i_len.o i_mod.o i_nint.o i_sign.o
HALF =	h_abs.o h_dim.o h_dnnt.o h_indx.o h_len.o h_mod.o  h_nint.o h_sign.o
CMP =	l_ge.o l_gt.o l_le.o l_lt.o hl_ge.o hl_gt.o hl_le.o hl_lt.o
EFL =	ef1asc_.o ef1cmc_.o
CHAR =	s_cat.o s_cmp.o s_copy.o
F90BIT = lbitbits.o lbitshft.o

lib = ../../../libf2c.a

F2C_H = ../../include/f2c.h

all:	$(lib)

$(lib): force $(MISC) $(POW) $(CX) $(DCX) $(REAL) $(DBL) $(INT) \
	 $(HALF) $(CMP) $(EFL) $(CHAR)
# Don't worry if ar fails, that can happen when a root-like user installs a
# system built by a user to which the installer has insufficient access
# to modify libf2c.a.  Probably a better solution to this should be
# found, but this should do for now.  -- burley 951226
	-$(AR) $(AR_FLAGS) $(lib) $(MISC) $(POW) $(CX) $(DCX) $(REAL) \
	 $(DBL) $(INT) $(HALF) $(CMP) $(EFL) $(CHAR)
	if $(RANLIB_TEST); then $(RANLIB) $(lib); \
	  else true; fi

uninstall:
install:

VersionF.o: Version.c
	$(CC) -c $(CGFLAGS) -o $@@ $(srcdir)/Version.c
# Next two lines were removed because Solaris doesn't like `ld -x', and
# it seems there's no real benefit to doing this anyway.
#	ld -r -x -o $@@x $@@
#	mv $@@x $@@

clean:
	rm -f *.o

# Not quite all these actually do depend on f2c.h...
$(MISC) $(POW) $(CX) $(DCX) $(REAL) $(DBL) $(INT) \
  $(HALF) $(CMP) $(EFL) $(CHAR): $(F2C_H) $(F90BIT)

force:
@


1.4
log
@Revert to older (working) version of gcc, plus recent changes.
@
text
@@


1.3
log
@sync g77 to version 0.5.20 - i hope i got everything right because there
is no patch from 0.5.19 to 0.5.20 - so i did it by diffing two gcc trees
looking carefully at the results

what does the new g77 give us:
* now it completely works on the alpha (64bit)
* faster
* less bugs :-)
@
text
@d41 1
a41 1
ALL_CFLAGS = -I. -I$(srcdir) -I../../../include $(CPPFLAGS) $(DEFS) $(CFLAGS)
d53 4
d61 1
a61 2
POW =	pow_ci.o pow_dd.o pow_di.o pow_hh.o pow_ii.o  pow_ri.o pow_zi.o pow_zz.o \
	pow_qq.o
d78 1
a78 1
F90BIT = lbitbits.o lbitshft.o qbitbits.o qbitshft.o
d80 1
a80 1
F2C_H = ../../../include/f2c.h
d82 17
a98 2
all: $(MISC) $(POW) $(CX) $(DCX) $(REAL) $(DBL) $(INT) \
	 $(HALF) $(CMP) $(EFL) $(CHAR) $(F90BIT)
d102 4
d107 2
a108 5
mostlyclean clean:
	-rm -f *.o

distclean maintainer-clean: clean
	-rm -f stage? include Makefile
d112 1
a112 1
  $(HALF) $(CMP) $(EFL) $(CHAR) $(F90BIT): $(F2C_H)
d114 1
a114 1
.PHONY: mostlyclean clean distclean maintainer-clean all
@


1.2
log
@Update to g77 0.5.19
@
text
@d41 1
a41 1
ALL_CFLAGS = -I$(srcdir) -I../../../include $(CPPFLAGS) $(DEFS) $(CFLAGS)
a52 4
# Next two lines were removed because Solaris doesn't like `ld -x', and
# it seems there's no real benefit to doing this anyway.
#	ld -r -x -o $@@x $@@
#	mv $@@x $@@
d57 2
a58 1
POW =	pow_ci.o pow_dd.o pow_di.o pow_hh.o pow_ii.o  pow_ri.o pow_zi.o pow_zz.o
d75 1
a75 1
F90BIT = lbitbits.o lbitshft.o
d77 1
a77 1
lib = ../../../libf2c.a
d79 2
a80 17
F2C_H = ../../include/f2c.h

all:	$(lib)

$(lib): force $(MISC) $(POW) $(CX) $(DCX) $(REAL) $(DBL) $(INT) \
	 $(HALF) $(CMP) $(EFL) $(CHAR)
# Don't worry if ar fails, that can happen when a root-like user installs a
# system built by a user to which the installer has insufficient access
# to modify libf2c.a.  Probably a better solution to this should be
# found, but this should do for now.  -- burley 951226
	-$(AR) $(AR_FLAGS) $(lib) $(MISC) $(POW) $(CX) $(DCX) $(REAL) \
	 $(DBL) $(INT) $(HALF) $(CMP) $(EFL) $(CHAR)
	if $(RANLIB_TEST); then $(RANLIB) $(lib); \
	  else true; fi

uninstall:
install:
a83 4
# Next two lines were removed because Solaris doesn't like `ld -x', and
# it seems there's no real benefit to doing this anyway.
#	ld -r -x -o $@@x $@@
#	mv $@@x $@@
d85 5
a89 2
clean:
	rm -f *.o
d93 1
a93 1
  $(HALF) $(CMP) $(EFL) $(CHAR): $(F2C_H) $(F90BIT)
d95 1
a95 1
force:
@


1.1
log
@Initial integration of G77.

Please do a make cleandir before rebuilding gcc!
@
text
@d4 1
a4 1
#   Portions of this file Copyright (C) 1995 Free Software Foundation, Inc.
d41 1
a41 1
ALL_CFLAGS = -I$(srcdir) -I../../include $(CPPFLAGS) $(DEFS) $(CFLAGS)
d78 1
d112 1
a112 1
  $(HALF) $(CMP) $(EFL) $(CHAR): $(F2C_H)
@
