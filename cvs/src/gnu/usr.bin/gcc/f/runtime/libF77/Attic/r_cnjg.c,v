head	1.4;
access;
symbols
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	99.05.26.16.30.09;	author espie;	state dead;
branches;
next	1.3;

1.3
date	97.04.09.13.44.38;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	97.04.04.13.21.17;	author graichen;	state Exp;
branches;
next	1.1;

1.1
date	96.07.27.02.52.13;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.4
log
@So long, and thanks for all the bugs.
@
text
@#include "f2c.h"

#ifdef KR_headers
VOID r_cnjg(r, z) complex *r, *z;
#else
VOID r_cnjg(complex *r, complex *z)
#endif
{
r->r = z->r;
r->i = - z->i;
}
@


1.3
log
@Revert to older (working) version of gcc, plus recent changes.
@
text
@@


1.2
log
@sync g77 to version 0.5.20 - i hope i got everything right because there
is no patch from 0.5.19 to 0.5.20 - so i did it by diffing two gcc trees
looking carefully at the results

what does the new g77 give us:
* now it completely works on the alpha (64bit)
* faster
* less bugs :-)
@
text
@d4 1
a4 1
VOID r_cnjg(resx, z) complex *resx, *z;
d6 1
a6 1
VOID r_cnjg(complex *resx, complex *z)
d9 2
a10 7
complex res;

res.r = z->r;
res.i = - z->i;

resx->r = res.r;
resx->i = res.i;
@


1.1
log
@Initial integration of G77.

Please do a make cleandir before rebuilding gcc!
@
text
@d4 1
a4 1
VOID r_cnjg(r, z) complex *r, *z;
d6 1
a6 1
VOID r_cnjg(complex *r, complex *z)
d9 7
a15 2
r->r = z->r;
r->i = - z->i;
@
