head	1.4;
access;
symbols
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	99.05.26.16.30.06;	author espie;	state dead;
branches;
next	1.3;

1.3
date	97.04.09.13.44.37;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	97.04.04.13.21.17;	author graichen;	state Exp;
branches;
next	1.1;

1.1
date	96.07.27.02.52.11;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.4
log
@So long, and thanks for all the bugs.
@
text
@#include "f2c.h"

#ifdef KR_headers
VOID pow_zi(p, a, b) 	/* p = a**b  */
 doublecomplex *p, *a; integer *b;
#else
extern void z_div(doublecomplex*, doublecomplex*, doublecomplex*);
void pow_zi(doublecomplex *p, doublecomplex *a, integer *b) 	/* p = a**b  */
#endif
{
integer n;
unsigned long u;
double t;
doublecomplex x;
static doublecomplex one = {1.0, 0.0};

n = *b;
p->r = 1;
p->i = 0;

if(n == 0)
	return;
if(n < 0)
	{
	n = -n;
	z_div(&x, &one, a);
	}
else
	{
	x.r = a->r;
	x.i = a->i;
	}

for(u = n; ; )
	{
	if(u & 01)
		{
		t = p->r * x.r - p->i * x.i;
		p->i = p->r * x.i + p->i * x.r;
		p->r = t;
		}
	if(u >>= 1)
		{
		t = x.r * x.r - x.i * x.i;
		x.i = 2 * x.r * x.i;
		x.r = t;
		}
	else
		break;
	}
}
@


1.3
log
@Revert to older (working) version of gcc, plus recent changes.
@
text
@@


1.2
log
@sync g77 to version 0.5.20 - i hope i got everything right because there
is no patch from 0.5.19 to 0.5.20 - so i did it by diffing two gcc trees
looking carefully at the results

what does the new g77 give us:
* now it completely works on the alpha (64bit)
* faster
* less bugs :-)
@
text
@d4 2
a5 2
VOID pow_zi(resx, a, b) 	/* p = a**b  */
 doublecomplex *resx, *a; integer *b;
d8 1
a8 1
void pow_zi(doublecomplex *resx, doublecomplex *a, integer *b) 	/* p = a**b  */
a14 1
doublecomplex res;
d18 2
a21 3
	{
	resx->r = 1;
	resx->i = 0;
a22 5
	}

res.r = 1;
res.i = 0;

d38 3
a40 3
		t = res.r * x.r - res.i * x.i;
		res.i = res.r * x.i + res.i * x.r;
		res.r = t;
a50 3

resx->r = res.r;
resx->i = res.i;
@


1.1
log
@Initial integration of G77.

Please do a make cleandir before rebuilding gcc!
@
text
@d4 2
a5 2
VOID pow_zi(p, a, b) 	/* p = a**b  */
 doublecomplex *p, *a; integer *b;
d8 1
a8 1
void pow_zi(doublecomplex *p, doublecomplex *a, integer *b) 	/* p = a**b  */
d15 1
a18 2
p->r = 1;
p->i = 0;
d21 3
d25 5
d45 3
a47 3
		t = p->r * x.r - p->i * x.i;
		p->i = p->r * x.i + p->i * x.r;
		p->r = t;
d58 3
@
