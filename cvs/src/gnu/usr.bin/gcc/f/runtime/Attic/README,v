head	1.4;
access;
symbols
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	99.05.26.16.29.43;	author espie;	state dead;
branches;
next	1.3;

1.3
date	97.04.09.13.44.29;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	97.04.04.13.20.50;	author graichen;	state Exp;
branches;
next	1.1;

1.1
date	96.07.27.02.51.43;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.4
log
@So long, and thanks for all the bugs.
@
text
@950827

This directory contains the f2c library packaged for use with g77 to configure
and build automatically (in principle!) as part of the top-level configure and
make steps.  This depends on the makefile and configure fragments in ../f.

Some small changes have been made to the f2c distributions of lib[IF]77 which
come from ftp@@bell-labs.com:netlib/f2c and are maintained (excellently) by
David M. Gay <dmg@@bell-labs.com>.  See the Notice files for copyright
information.  I'll try to get the changes rolled into the f2c distribution.

WARNING WARNING WARNING!!!  We have left the README files in libF77 and
libI77 intact, because they are part of the libf2c sources and might
prove useful to you, but AS DISTRIBUTED WITH GNU FORTRAN, you should
not do anything suggested by gcc/f/libf77/README or gcc/f/libi77/README,
because the configuration stuff added for the g77 distribution should
handle everything.

The packaging for auto-configuration was done by Dave Love <d.love@@dl.ac.uk>.
Minor changes have been made by James Craig Burley <burley@@gnu.ai.mit.edu>,
who probably broke things Dave had working.  :-)

Some key changes made by Burley:

-  f2c.h configured to default to padding unformatted direct reads
   (#define Pad_UDread), because that's the behavior most users
   expect.

-  f2c.h configured to default to always flushing after output so that
   ERR= and IOSTAT= report disk-full errors (assuming the underlying
   system library code does that correctly), again because that's the
   behavior most users expect (#define ALWAYS_FLUSH).  But you should
   write CALL FLUSH or CALL FLUSH(IUNIT) as appropriate in your source
   code, because auto-flushing will not necessarily be enabled by
   default in future versions of g77's run-time library.

-  f2c.h configured to default to outputting leading zeros before
   decimal points in formatted and list-directed output, to be compatible
   with many other compilers (#define WANT_LEAD_0).  Either way is
   standard-conforming, however, and you should try to avoid writing
   code that assumes one format or another.
@


1.3
log
@Revert to older (working) version of gcc, plus recent changes.
@
text
@@


1.2
log
@sync g77 to version 0.5.20 - i hope i got everything right because there
is no patch from 0.5.19 to 0.5.20 - so i did it by diffing two gcc trees
looking carefully at the results

what does the new g77 give us:
* now it completely works on the alpha (64bit)
* faster
* less bugs :-)
@
text
@d1 1
a1 1
970205
d28 8
@


1.1
log
@Initial integration of G77.

Please do a make cleandir before rebuilding gcc!
@
text
@d1 1
a1 1
950827
a27 8

-  f2c.h configured to default to always flushing after output so that
   ERR= and IOSTAT= report disk-full errors (assuming the underlying
   system library code does that correctly), again because that's the
   behavior most users expect (#define ALWAYS_FLUSH).  But you should
   write CALL FLUSH or CALL FLUSH(IUNIT) as appropriate in your source
   code, because auto-flushing will not necessarily be enabled by
   default in future versions of g77's run-time library.
@
