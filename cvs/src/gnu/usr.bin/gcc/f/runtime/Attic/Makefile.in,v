head	1.6;
access;
symbols
	OPENBSD_2_5:1.5.0.6
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.4
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	99.05.26.16.29.43;	author espie;	state dead;
branches;
next	1.5;

1.5
date	98.03.04.18.16.12;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.04.09.13.44.28;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	97.04.04.13.25.47;	author graichen;	state Exp;
branches;
next	1.2;

1.2
date	97.04.04.13.20.49;	author graichen;	state Exp;
branches;
next	1.1;

1.1
date	96.07.27.02.51.42;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.6
log
@So long, and thanks for all the bugs.
@
text
@# Makefile for GNU F77 compiler runtime.
#   Copyright (C) 1995 Free Software Foundation, Inc.
#   Contributed by Dave Love (d.love@@dl.ac.uk).
#
#This file is part of GNU Fortran.
#
#GNU Fortran is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2, or (at your option)
#any later version.
#
#GNU Fortran is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with GNU Fortran; see the file COPYING.  If not, write to
#the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA
#02111-1307, USA.

#### Start of system configuration section. ####

srcdir = @@srcdir@@
VPATH = @@srcdir@@

top_srcdir = @@top_srcdir@@

INSTALL = @@INSTALL@@		# installs aren't actually done from here
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@
RANLIB = @@RANLIB@@
RANLIB_TEST = @@RANLIB_TEST@@

CFLAGS = @@CFLAGS@@
CPPFLAGS = @@CPPFLAGS@@ @@DEFS@@
LDFLAGS = @@LDFLAGS@@
LIBS = @@LIBS@@

GCC_FOR_TARGET = @@CC@@
CC = $(GCC_FOR_TARGET)

CROSS = @@CROSS@@

transform=@@program_transform_name@@

prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

AR = ar
AR_FLAGS = rc

# Directory in which to install scripts.
bindir = $(exec_prefix)/bin

# Directory in which to install library files.
libdir = $(prefix)/lib

# Directory in which to install documentation info files.
infodir = $(prefix)/info

#### End of system configuration section. ####

SHELL = /bin/sh

SUBDIRS = libI77 libF77

# flags_to_pass to recursive makes & configure (hence the quoting style)
FLAGS_TO_PASS = \
	CROSS="$(CROSS)" \
	AR_FLAGS="$(AR_FLAGS)" \
	AR="$(AR)" \
	GCCFLAGS="$(GCCFLAGS)" \
	GCC_FOR_TARGET="$(GCC_FOR_TARGET)" \
	CC="$(GCC_FOR_TARGET)" \
	LDFLAGS="$(LDFLAGS)" \
	RANLIB="$(RANLIB)" \
	RANLIB_TEST="$(RANLIB_TEST)" \
	SHELL="$(SHELL)"

CROSS_FLAGS_TO_PASS = \
	CROSS="$(CROSS)" \
	AR_FLAGS="$(AR_FLAGS)" \
	AR="$(AR)" \
	GCCFLAGS="$(GCCFLAGS)" \
	GCC_FOR_TARGET="$(GCC_FOR_TARGET)" \
	CC="$(GCC_FOR_TARGET)" \
	LDFLAGS="$(LDFLAGS)" \
	RANLIB="$(RANLIB)" \
	RANLIB_TEST="$(RANLIB_TEST)" \
	SHELL="$(SHELL)"

all: ../include/f2c.h libi77 libf77

libi77: libI77/Makefile
	if test "$(CROSS)"; then \
	  cd libI77;  $(MAKE) $(CROSS_FLAGS_TO_PASS) all ; \
	else \
	  cd libI77;  $(MAKE) $(FLAGS_TO_PASS) all ; \
	fi
libf77: libF77/Makefile
	if test "$(CROSS)"; then \
	  cd libF77;  $(MAKE) $(CROSS_FLAGS_TO_PASS) all ; \
	else \
	  cd libF77;  $(MAKE) $(FLAGS_TO_PASS) all ; \
	fi

# XXX OpenBSD
#${srcdir}/configure: ${srcdir}/configure.in
#	cd ${srcdir} && autoconf && rm -f config.cache
../include/f2c.h libI77/Makefile libF77/Makefile Makefile: Makefile.in \
  config.status
	$(FLAGS_TO_PASS) CONFIG_SITE=/dev/null $(SHELL) config.status
# Extra dependencies for the targets above:
libI77/Makefile: libI77/Makefile.in
libF77/Makefile: libF77/Makefile.in
# include is linked into ..
../include/f2c.h: f2c.h.in

config.status: configure
	$(FLAGS_TO_PASS) CONFIG_SITE=/dev/null $(SHELL) config.status --recheck

mostlyclean:

clean: mostlyclean
	-rm -f config.log config.cache
	for i in libI77 libF77; do cd $$i; $(MAKE) clean; cd ..;  done

distclean: clean
	-rm -f Makefile lib?77/Makefile config.status ../include/f2c.h

uninstall:
	rm ../include/f2c.h

rebuilt: ${srcdir}/configure
	echo Fortran library rebuildable files rebuilt.

.PHONY: libf77 libi77 rebuilt
@


1.5
log
@Don't try and rebuild configure with autoconf.  We have no guarantee
that the timestamp on configure will be newer than configure.in...
@
text
@@


1.4
log
@Revert to older (working) version of gcc, plus recent changes.
@
text
@d108 3
a110 2
${srcdir}/configure: ${srcdir}/configure.in
	cd ${srcdir} && autoconf && rm -f config.cache
@


1.3
log
@changes required to get gcc with the new g77 0.5.20 compiled smoothly
on OpenBSD
@
text
@d2 1
a2 1
#   Copyright (C) 1995-1997 Free Software Foundation, Inc.
a23 3
# $(srcdir) must be set to the g77 runtime source directory
# (g77/f/runtime/).

d66 1
a66 64
lib = ../../libf2c.a

SUBDIRS = libI77 libF77 libU77

MISC =	libF77/F77_aloc.o libF77/VersionF.o libF77/main.o libF77/s_rnge.o \
	libF77/abort_.o libF77/getarg_.o libF77/iargc_.o libF77/getenv_.o \
	libF77/signal_.o libF77/s_stop.o libF77/s_paus.o libF77/system_.o \
	libF77/cabs.o libF77/derf_.o libF77/derfc_.o libF77/erf_.o \
	libF77/erfc_.o libF77/sig_die.o libF77/exit.o
POW =	libF77/pow_ci.o libF77/pow_dd.o libF77/pow_di.o libF77/pow_hh.o \
	libF77/pow_ii.o  libF77/pow_ri.o libF77/pow_zi.o libF77/pow_zz.o \
	libF77/pow_qq.o
CX =	libF77/c_abs.o libF77/c_cos.o libF77/c_div.o libF77/c_exp.o \
	libF77/c_log.o libF77/c_sin.o libF77/c_sqrt.o
DCX =	libF77/z_abs.o libF77/z_cos.o libF77/z_div.o libF77/z_exp.o \
	libF77/z_log.o libF77/z_sin.o libF77/z_sqrt.o
REAL =	libF77/r_abs.o libF77/r_acos.o libF77/r_asin.o libF77/r_atan.o \
	libF77/r_atn2.o libF77/r_cnjg.o libF77/r_cos.o libF77/r_cosh.o \
	libF77/r_dim.o libF77/r_exp.o libF77/r_imag.o libF77/r_int.o \
	libF77/r_lg10.o libF77/r_log.o libF77/r_mod.o libF77/r_nint.o \
	libF77/r_sign.o libF77/r_sin.o libF77/r_sinh.o libF77/r_sqrt.o \
	libF77/r_tan.o libF77/r_tanh.o
DBL =	libF77/d_abs.o libF77/d_acos.o libF77/d_asin.o libF77/d_atan.o \
	libF77/d_atn2.o libF77/d_cnjg.o libF77/d_cos.o libF77/d_cosh.o \
	libF77/d_dim.o libF77/d_exp.o libF77/d_imag.o libF77/d_int.o \
	libF77/d_lg10.o libF77/d_log.o libF77/d_mod.o libF77/d_nint.o \
	libF77/d_prod.o libF77/d_sign.o libF77/d_sin.o libF77/d_sinh.o \
	libF77/d_sqrt.o libF77/d_tan.o libF77/d_tanh.o
INT =	libF77/i_abs.o libF77/i_dim.o libF77/i_dnnt.o libF77/i_indx.o \
	libF77/i_len.o libF77/i_mod.o libF77/i_nint.o libF77/i_sign.o
HALF =	libF77/h_abs.o libF77/h_dim.o libF77/h_dnnt.o libF77/h_indx.o \
	libF77/h_len.o libF77/h_mod.o  libF77/h_nint.o libF77/h_sign.o
CMP =	libF77/l_ge.o libF77/l_gt.o libF77/l_le.o libF77/l_lt.o \
	libF77/hl_ge.o libF77/hl_gt.o libF77/hl_le.o libF77/hl_lt.o
EFL =	libF77/ef1asc_.o libF77/ef1cmc_.o
CHAR =	libF77/s_cat.o libF77/s_cmp.o libF77/s_copy.o
F90BIT = libF77/lbitbits.o libF77/lbitshft.o libF77/qbitbits.o \
	libF77/qbitshft.o
FOBJ = $(MISC) $(POW) $(CX) $(DCX) $(REAL) $(DBL) $(INT) $(HALF) $(CMP) \
 $(EFL) $(CHAR) $(F90BIT)

IOBJ =	libI77/VersionI.o libI77/backspace.o libI77/close.o libI77/dfe.o \
	libI77/dolio.o libI77/due.o libI77/endfile.o libI77/err.o \
	libI77/fmt.o libI77/fmtlib.o libI77/iio.o libI77/ilnw.o \
	libI77/inquire.o libI77/lread.o libI77/lwrite.o libI77/open.o \
	libI77/rdfmt.o libI77/rewind.o libI77/rsfe.o libI77/rsli.o \
	libI77/rsne.o libI77/sfe.o libI77/sue.o libI77/typesize.o \
	libI77/uio.o libI77/util.o libI77/wref.o libI77/wrtfmt.o \
	libI77/wsfe.o libI77/wsle.o libI77/wsne.o libI77/xwsne.o \
	libI77/ftell_.o

UOBJ =  libU77/VersionU.o libU77/gerror_.o libU77/perror_.o libU77/ierrno_.o \
	libU77/itime_.o libU77/time_.o libU77/unlink_.o libU77/fnum_.o \
	libU77/getpid_.o libU77/getuid_.o libU77/getgid_.o libU77/kill_.o \
	libU77/rand_.o libU77/srand_.o libU77/irand_.o libU77/sleep_.o \
	libU77/idate_.o libU77/ctime_.o libU77/etime_.o libU77/dtime_.o \
	libU77/isatty_.o libU77/ltime_.o libU77/fstat_.o libU77/stat_.o \
	libU77/lstat_.o libU77/access_.o libU77/link_.o libU77/getlog_.o \
	libU77/ttynam_.o libU77/getcwd_.o libU77/vxttime_.o \
	libU77/vxtidate_.o libU77/gmtime_.o libU77/fdate_.o libU77/secnds_.o \
	libU77/bes.o libU77/dbes.o libU77/chdir_.o libU77/chmod_.o \
	libU77/lnblnk_.o libU77/hostnm_.o libU77/rename_.o libU77/fgetc_.o \
	libU77/fputc_.o libU77/umask_.o libU77/system_clock_.o libU77/date_.o \
	libU77/second_.o libU77/flush1_.o
d93 1
a93 6
all: ../../include/f2c.h libi77 libf77 libu77 $(lib)

$(lib): $(FOBJ) $(IOBJ) $(UOBJ)
	-$(AR) $(AR_FLAGS) $(lib) $?
	if $(RANLIB_TEST); then $(RANLIB) $(lib); \
	  else true; fi
d97 1
a97 1
	  cd libI77;  $(MAKE) -f Makefile $(CROSS_FLAGS_TO_PASS) all ; \
d99 1
a99 1
	  cd libI77;  $(MAKE) -f Makefile $(FLAGS_TO_PASS) all ; \
a100 1

d103 1
a103 8
	  cd libF77;  $(MAKE) -f Makefile $(CROSS_FLAGS_TO_PASS) all ; \
	else \
	  cd libF77;  $(MAKE) -f Makefile $(FLAGS_TO_PASS) all ; \
	fi

libu77: libU77/Makefile
	if test "$(CROSS)"; then \
	  cd libU77;  $(MAKE) -f Makefile $(CROSS_FLAGS_TO_PASS) all ; \
d105 1
a105 1
	  cd libU77;  $(MAKE) -f Makefile $(FLAGS_TO_PASS) all ; \
d109 9
a117 7
	rm -f config.cache && cd ${srcdir}
${srcdir}/libU77/configure: ${srcdir}/libU77/configure.in
	rm -f libU77/config.cache && cd ${srcdir}/libU77
#../include/f2c.h libI77/Makefile libF77/Makefile libU77/Makefile Makefile: ${srcdir}/Makefile.in \
#  config.status libU77/config.status
#	$(FLAGS_TO_PASS) CONFIG_SITE=/dev/null $(SHELL) config.status
#	cd libU77; $(FLAGS_TO_PASS) CONFIG_SITE=/dev/null $(SHELL) config.status
d119 2
a120 10
# Extra dependencies for the targets above:
libI77/Makefile: $(srcdir)/libI77/Makefile.in
libF77/Makefile: $(srcdir)/libF77/Makefile.in
libU77/Makefile: $(srcdir)/libU77/Makefile.in
../../include/f2c.h: $(srcdir)/f2c.h.in

#config.status: ${srcdir}/configure
#	$(FLAGS_TO_PASS) CONFIG_SITE=/dev/null $(SHELL) config.status --recheck
#libU77/config.status: ${srcdir}/libU77/configure
#	cd libU77; $(FLAGS_TO_PASS) CONFIG_SITE=/dev/null $(SHELL) config.status --recheck
a122 1
	for i in libI77 libF77 libU77; do cd $$i; $(MAKE) -f Makefile mostlyclean; cd ..;  done
d124 1
a124 1
clean:
d126 1
a126 1
	for i in libI77 libF77 libU77; do cd $$i; $(MAKE) -f Makefile clean; cd ..;  done
d129 1
a129 4
	-rm -f Makefile lib?77/Makefile config.status libU77/config.status ../../include/f2c.h

maintainer-clean: distclean
	-rm -f $(srcdir)/configure $(srcdir)/libU77/configure
d132 1
a132 1
	rm ../../include/f2c.h
d134 2
a135 1
rebuilt: ${srcdir}/configure ${srcdir}/libU77/configure
d137 1
a137 2
.PHONY: libf77 libi77 libu77 rebuilt mostlyclean clean distclean maintainer-clean \
  uninstall all
@


1.2
log
@sync g77 to version 0.5.20 - i hope i got everything right because there
is no patch from 0.5.19 to 0.5.20 - so i did it by diffing two gcc trees
looking carefully at the results

what does the new g77 give us:
* now it completely works on the alpha (64bit)
* faster
* less bugs :-)
@
text
@d188 1
a188 1
	rm -f config.cache && cd ${srcdir} && autoconf && rm -f config.cache
d190 1
a190 1
	rm -f libU77/config.cache && cd ${srcdir}/libU77 && autoconf && rm -f config.cache
@


1.1
log
@Initial integration of G77.

Please do a make cleandir before rebuilding gcc!
@
text
@d2 1
a2 1
#   Copyright (C) 1995 Free Software Foundation, Inc.
d24 3
d69 64
a132 1
SUBDIRS = libI77 libF77
d159 6
a164 1
all: ../include/f2c.h libi77 libf77
d168 1
a168 1
	  cd libI77;  $(MAKE) $(CROSS_FLAGS_TO_PASS) all ; \
d170 1
a170 1
	  cd libI77;  $(MAKE) $(FLAGS_TO_PASS) all ; \
d172 1
d175 8
a182 1
	  cd libF77;  $(MAKE) $(CROSS_FLAGS_TO_PASS) all ; \
d184 1
a184 1
	  cd libF77;  $(MAKE) $(FLAGS_TO_PASS) all ; \
d188 8
a195 4
	cd ${srcdir} && autoconf && rm -f config.cache
../include/f2c.h libI77/Makefile libF77/Makefile Makefile: Makefile.in \
  config.status
	$(FLAGS_TO_PASS) CONFIG_SITE=/dev/null $(SHELL) config.status
d197 9
a205 7
libI77/Makefile: libI77/Makefile.in
libF77/Makefile: libF77/Makefile.in
# include is linked into ..
../include/f2c.h: f2c.h.in

config.status: configure
	$(FLAGS_TO_PASS) CONFIG_SITE=/dev/null $(SHELL) config.status --recheck
d208 1
d210 1
a210 1
clean: mostlyclean
d212 1
a212 1
	for i in libI77 libF77; do cd $$i; $(MAKE) clean; cd ..;  done
d215 4
a218 1
	-rm -f Makefile lib?77/Makefile config.status ../include/f2c.h
d221 1
a221 1
	rm ../include/f2c.h
d223 1
a223 2
rebuilt: ${srcdir}/configure
	echo Fortran library rebuildable files rebuilt.
d225 2
a226 1
.PHONY: libf77 libi77 rebuilt
@

