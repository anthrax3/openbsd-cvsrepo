head	1.4;
access;
symbols
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	99.05.26.16.30.21;	author espie;	state dead;
branches;
next	1.3;

1.3
date	97.04.09.13.44.47;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	97.04.04.13.21.30;	author graichen;	state Exp;
branches;
next	1.1;

1.1
date	96.12.15.23.37.10;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.4
log
@So long, and thanks for all the bugs.
@
text
@#include "f2c.h"
#include "fio.h"

 static FILE *
#ifdef KR_headers
unit_chk(unit, who) integer unit; char *who;
#else
unit_chk(integer unit, char *who)
#endif
{
	if (unit >= MXUNIT || unit < 0)
		f__fatal(101, who);
	return f__units[unit].ufd;
	}

 integer
#ifdef KR_headers
ftell_(unit) integer *unit;
#else
ftell_(integer *unit)
#endif
{
	FILE *f;
	return (f = unit_chk(*unit, "ftell")) ? ftell(f) : -1L;
	}

 int
#ifdef KR_headers
fseek_(unit, offset, xwhence) integer *unit, *offset, *xwhence;
#else
fseek_(integer *unit, integer *offset, integer *xwhence)
#endif
{
	int whence;
	FILE *f;

	switch (*xwhence) {
		default:
			errno = EINVAL;
			return 1;
		case 0:
			whence = SEEK_SET;
			break;
		case 1:
			whence = SEEK_CUR;
			break;
		case 2:
			whence = SEEK_END;
			break;
		}

	return	!(f = unit_chk(*unit, "fseek"))
		|| fseek(f, *offset, whence) ? 1 : 0;
	}
@


1.3
log
@Revert to older (working) version of gcc, plus recent changes.
@
text
@@


1.2
log
@sync g77 to version 0.5.20 - i hope i got everything right because there
is no patch from 0.5.19 to 0.5.20 - so i did it by diffing two gcc trees
looking carefully at the results

what does the new g77 give us:
* now it completely works on the alpha (64bit)
* faster
* less bugs :-)
@
text
@d6 1
a6 1
unit_chk(Unit, who) integer Unit; char *who;
d8 1
a8 1
unit_chk(integer Unit, char *who)
d11 1
a11 1
	if (Unit >= MXUNIT || Unit < 0)
d13 1
a13 1
	return f__units[Unit].ufd;
d18 1
a18 1
ftell_(Unit) integer *Unit;
d20 1
a20 1
ftell_(integer *Unit)
d24 1
a24 1
	return (f = unit_chk(*Unit, "ftell")) ? ftell(f) : -1L;
d29 1
a29 1
fseek_(Unit, offset, xwhence) integer *Unit, *offset, *xwhence;
d31 1
a31 1
fseek_(integer *Unit, integer *offset, integer *xwhence)
d52 1
a52 1
	return	!(f = unit_chk(*Unit, "fseek"))
@


1.1
log
@Update to g77 0.5.19
@
text
@d6 1
a6 1
unit_chk(unit, who) integer unit; char *who;
d8 1
a8 1
unit_chk(integer unit, char *who)
d11 1
a11 1
	if (unit >= MXUNIT || unit < 0)
d13 1
a13 1
	return f__units[unit].ufd;
d18 1
a18 1
ftell_(unit) integer *unit;
d20 1
a20 1
ftell_(integer *unit)
d24 1
a24 1
	return (f = unit_chk(*unit, "ftell")) ? ftell(f) : -1L;
d29 1
a29 1
fseek_(unit, offset, xwhence) integer *unit, *offset, *xwhence;
d31 1
a31 1
fseek_(integer *unit, integer *offset, integer *xwhence)
d52 1
a52 1
	return	!(f = unit_chk(*unit, "fseek"))
@
