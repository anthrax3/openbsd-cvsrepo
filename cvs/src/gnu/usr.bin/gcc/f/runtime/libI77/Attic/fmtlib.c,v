head	1.4;
access;
symbols
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	99.05.26.16.30.21;	author espie;	state dead;
branches;
next	1.3;

1.3
date	97.04.09.13.44.47;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	97.04.04.13.21.30;	author graichen;	state Exp;
branches;
next	1.1;

1.1
date	96.07.27.02.52.29;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.4
log
@So long, and thanks for all the bugs.
@
text
@/*	@@(#)fmtlib.c	1.2	*/
#define MAXINTLENGTH 23

#include "f2c.h"
#ifndef Allow_TYQUAD
#undef longint
#define longint long
#endif

#ifdef KR_headers
char *f__icvt(value,ndigit,sign, base) longint value; int *ndigit,*sign;
 register int base;
#else
char *f__icvt(longint value, int *ndigit, int *sign, int base)
#endif
{	static char buf[MAXINTLENGTH+1];
	register int i;

	if(value > 0)
		*sign = 0;
	else if (value < 0) {
		value = -value;
		*sign = 1;
		}
	else {
		*sign = 0;
		*ndigit = 1;
		buf[MAXINTLENGTH-1] = '0';
		return &buf[MAXINTLENGTH-1];
		}
	i = MAXINTLENGTH;
	do {
		buf[--i] = (value%base) + '0';
		value /= base;
		}
		while(value > 0);
	*ndigit = MAXINTLENGTH - i;
	return &buf[i];
	}
@


1.3
log
@Revert to older (working) version of gcc, plus recent changes.
@
text
@@


1.2
log
@sync g77 to version 0.5.20 - i hope i got everything right because there
is no patch from 0.5.19 to 0.5.20 - so i did it by diffing two gcc trees
looking carefully at the results

what does the new g77 give us:
* now it completely works on the alpha (64bit)
* faster
* less bugs :-)
@
text
@a7 2
#undef ulongint
#define ulongint unsigned long
d16 1
a16 2
{
	static char buf[MAXINTLENGTH+1];
a17 1
	ulongint uvalue;
d19 1
a19 2
	if(value > 0) {
		uvalue = value;
a20 1
		}
d22 1
a22 1
		uvalue = -value;
d33 2
a34 2
		buf[--i] = (uvalue%base) + '0';
		uvalue /= base;
d36 1
a36 1
		while(uvalue > 0);
@


1.1
log
@Initial integration of G77.

Please do a make cleandir before rebuilding gcc!
@
text
@d8 2
d18 2
a19 1
{	static char buf[MAXINTLENGTH+1];
d21 1
d23 2
a24 1
	if(value > 0)
d26 1
d28 1
a28 1
		value = -value;
d39 2
a40 2
		buf[--i] = (value%base) + '0';
		value /= base;
d42 1
a42 1
		while(value > 0);
@
