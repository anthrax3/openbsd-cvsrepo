head	1.5;
access;
symbols
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	99.05.26.16.30.18;	author espie;	state dead;
branches;
next	1.4;

1.4
date	97.04.09.13.44.44;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	97.04.04.13.21.27;	author graichen;	state Exp;
branches;
next	1.2;

1.2
date	96.12.15.23.37.04;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.07.27.02.52.26;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.5
log
@So long, and thanks for all the bugs.
@
text
@#include <sys/types.h>
#include "f2c.h"
#include "fio.h"
#ifdef KR_headers
integer f_back(a) alist *a;
#else
integer f_back(alist *a)
#endif
{	unit *b;
	int i, n, ndec;
#if defined (MSDOS) && !defined (GO32)
	int j, k;
	long w, z;
#endif
	long x, y;
	char buf[32];
	if(a->aunit >= MXUNIT || a->aunit < 0)
		err(a->aerr,101,"backspace")
	b= &f__units[a->aunit];
	if(b->useek==0) err(a->aerr,106,"backspace")
	if(b->ufd==NULL) {
		fk_open(1, 1, a->aunit);
		return(0);
		}
	if(b->uend==1)
	{	b->uend=0;
		return(0);
	}
	if(b->uwrt) {
		(void) t_runc(a);
		if (f__nowreading(b))
			err(a->aerr,errno,"backspace")
		}
	if(b->url>0)
	{
		x=ftell(b->ufd);
		y = x % b->url;
		if(y == 0) x--;
		x /= b->url;
		x *= b->url;
		(void) fseek(b->ufd,x,SEEK_SET);
		return(0);
	}

	if(b->ufmt==0)
	{	(void) fseek(b->ufd,-(long)sizeof(int),SEEK_CUR);
		(void) fread((char *)&n,sizeof(int),1,b->ufd);
		(void) fseek(b->ufd,-(long)n-2*sizeof(int),SEEK_CUR);
		return(0);
	}
#if defined (MSDOS) && !defined (GO32)
	w = -1;
#endif
	for(ndec = 1;; ndec = 0)
	{
		y = x = ftell(b->ufd);
		if(x < sizeof(buf))
			x = 0;
		else
			x -= sizeof(buf);
		(void) fseek(b->ufd,x,SEEK_SET);
		n=fread(buf,1,(size_t)(y-x), b->ufd);
		for(i = n - ndec; --i >= 0; )
		{
			if(buf[i]!='\n') continue;
#if defined (MSDOS) && !defined (GO32)
			for(j = k = 0; j <= i; j++)
				if (buf[j] == '\n')
					k++;
			fseek(b->ufd,x,SEEK_SET);
			for(;;)
				if (getc(b->ufd) == '\n') {
					if ((z = ftell(b->ufd)) >= y && ndec) {
						if (w == -1)
							goto break2;
						break;
						}
					if (--k <= 0)
						return 0;
					w = z;
					}
			fseek(b->ufd, w, SEEK_SET);
#else
			fseek(b->ufd,(long)(i+1-n),SEEK_CUR);
#endif
			return(0);
		}
#if defined (MSDOS) && !defined (GO32)
 break2:
#endif
		if(x==0)
			{
			(void) fseek(b->ufd, 0L, SEEK_SET);
			return(0);
			}
		else if(n<=0) err(a->aerr,(EOF),"backspace")
		(void) fseek(b->ufd, x, SEEK_SET);
	}
}
@


1.4
log
@Revert to older (working) version of gcc, plus recent changes.
@
text
@@


1.3
log
@sync g77 to version 0.5.20 - i hope i got everything right because there
is no patch from 0.5.19 to 0.5.20 - so i did it by diffing two gcc trees
looking carefully at the results

what does the new g77 give us:
* now it completely works on the alpha (64bit)
* faster
* less bugs :-)
@
text
@d18 1
a18 1
		err(a->aerr,101,"backspace");
d20 1
a20 1
	if(b->useek==0) err(a->aerr,106,"backspace");
d32 1
a32 1
			err(a->aerr,errno,"backspace");
d96 1
a96 1
		else if(n<=0) err(a->aerr,(EOF),"backspace");
@


1.2
log
@Update to g77 0.5.19
@
text
@d18 1
a18 1
		err(a->aerr,101,"backspace")
d20 1
a20 1
	if(b->useek==0) err(a->aerr,106,"backspace")
d32 1
a32 1
			err(a->aerr,errno,"backspace")
d96 1
a96 1
		else if(n<=0) err(a->aerr,(EOF),"backspace")
@


1.1
log
@Initial integration of G77.

Please do a make cleandir before rebuilding gcc!
@
text
@d1 1
d62 1
a62 1
		n=fread(buf,1,(int)(y-x), b->ufd);
@
