head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.56
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.52
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.48
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.50
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.42
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.46
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.44
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.40
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.38
	OPENBSD_5_3_BASE:1.1.1.1
	gcc-3_3_6:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.36
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.34
	OPENBSD_5_0:1.1.1.1.0.32
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.30
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.28
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.24
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.26
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.22
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.20
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.18
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.16
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.14
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.12
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.10
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.8
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.6
	OPENBSD_3_7_BASE:1.1.1.1
	gcc-3_3_5:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.11.29.12.37.20;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.11.29.12.37.20;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@// Build don't link:

// Test of severe performance regression from 2.95.  This code generates
// a heavily self-referential tree which caused the inliner to take
// O(3**N) time to scan it for function calls.
// Reported by Kelley Cook <kelley.cook@@home.com>.  PR c++/1687.

bool in0 ;
bool in1 ;
bool in2 ;
bool in3 ;
bool in4 ;
bool in5 ;
bool in6 ;
bool in7 ;
bool in8 ;
bool in9 ;
bool in10;
bool in11;
bool in12;
bool in13;
bool in14;
bool in15;
bool in16;
bool in17;
bool in18;
bool in19;
bool in20;
bool in21;
bool in22;
bool in23;
bool in24;
bool in25;
bool in26;
bool in27;
bool in28;
bool in29;
bool in30;
bool in31;
unsigned long output;

void mux(void)
{
  output =
      (in0   ?  0x00000001 : 0) |
      (in1   ?  0x00000002 : 0) |
      (in2   ?  0x00000004 : 0) |
      (in3   ?  0x00000008 : 0) |
      (in4   ?  0x00000010 : 0) |
      (in5   ?  0x00000020 : 0) |
      (in6   ?  0x00000040 : 0) |
      (in7   ?  0x00000080 : 0) |
      (in8   ?  0x00000100 : 0) |
      (in9   ?  0x00000200 : 0) |
      (in10  ?  0x00000400 : 0) |
      (in11  ?  0x00000800 : 0) |
      (in12  ?  0x00001000 : 0) |
      (in13  ?  0x00002000 : 0) |
      (in14  ?  0x00004000 : 0) |
      (in15  ?  0x00008000 : 0) |
      (in16  ?  0x00010000 : 0) |
      (in17  ?  0x00020000 : 0) |
      (in18  ?  0x00040000 : 0) |
      (in19  ?  0x00080000 : 0) |
      (in20  ?  0x00100000 : 0) |
      (in21  ?  0x00200000 : 0) |
      (in22  ?  0x00400000 : 0) |
      (in23  ?  0x00800000 : 0) |
      (in24  ?  0x01000000 : 0) |
      (in25  ?  0x02000000 : 0) |
      (in26  ?  0x04000000 : 0) |
      (in27  ?  0x08000000 : 0) |
      (in28  ?  0x10000000 : 0) |
      (in29  ?  0x20000000 : 0) |
      (in30  ?  0x40000000 : 0) |
      (in31  ?  0x80000000 : 0) ;
}

@


1.1.1.1
log
@Import gcc-3.3.2. Only the compiler. ada frontend removed for space 
considerations.
@
text
@@
