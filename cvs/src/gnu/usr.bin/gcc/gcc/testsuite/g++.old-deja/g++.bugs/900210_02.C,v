head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.54
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.52
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.48
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.50
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.42
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.46
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.44
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.40
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.38
	OPENBSD_5_3_BASE:1.1.1.1
	gcc-3_3_6:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.36
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.34
	OPENBSD_5_0:1.1.1.1.0.32
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.30
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.28
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.24
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.26
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.22
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.20
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.18
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.16
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.14
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.12
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.10
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.8
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.6
	OPENBSD_3_7_BASE:1.1.1.1
	gcc-3_3_5:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.11.29.12.37.03;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.11.29.12.37.03;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@// g++ 1.36.1 bug 900210_02

// g++ allows integral type values to be assigned to variables of pointer
// types.  According to the C++ Reference Manual, this is illegal.

// Cfront 2.0 passes this test.

// keywords: integral types, pointer types, implicit type conversions
// Special Options: -ansi -pedantic-errors
int i;
long l;
short s;
char c;
float f;
double d;
long double ld;
enum {enum_value_0} e;

signed int si;
signed long sl;
signed short ss;
signed char sc;

unsigned int ui;
unsigned long ul;
unsigned short us;
unsigned char uc;

void* vp;
char* cp;
int* ip;
enum {enum_value_1} * ep;
struct { int member; } * sp;
void (*fp) (void);

void global_function ()
{
  vp = i;	/* ERROR -  */
  vp = l;	/* ERROR -  */
  vp = s;	/* ERROR -  */
  vp = c;	/* ERROR -  */
  vp = si;	/* ERROR -  */
  vp = sl;	/* ERROR -  */
  vp = ss;	/* ERROR -  */
  vp = sc;	/* ERROR -  */
  vp = ui;	/* ERROR -  */
  vp = ul;	/* ERROR -  */
  vp = us;	/* ERROR -  */
  vp = uc;	/* ERROR -  */
  cp = i;	/* ERROR -  */
  cp = l;	/* ERROR -  */
  cp = s;	/* ERROR -  */
  cp = c;	/* ERROR -  */
  cp = si;	/* ERROR -  */
  cp = sl;	/* ERROR -  */
  cp = ss;	/* ERROR -  */
  cp = sc;	/* ERROR -  */
  cp = ui;	/* ERROR -  */
  cp = ul;	/* ERROR -  */
  cp = us;	/* ERROR -  */
  cp = uc;	/* ERROR -  */
  ip = i;	/* ERROR -  */
  ip = l;	/* ERROR -  */
  ip = s;	/* ERROR -  */
  ip = c;	/* ERROR -  */
  ip = si;	/* ERROR -  */
  ip = sl;	/* ERROR -  */
  ip = ss;	/* ERROR -  */
  ip = sc;	/* ERROR -  */
  ip = ui;	/* ERROR -  */
  ip = ul;	/* ERROR -  */
  ip = us;	/* ERROR -  */
  ip = uc;	/* ERROR -  */
  ep = i;	/* ERROR -  */
  ep = l;	/* ERROR -  */
  ep = s;	/* ERROR -  */
  ep = c;	/* ERROR -  */
  ep = si;	/* ERROR -  */
  ep = sl;	/* ERROR -  */
  ep = ss;	/* ERROR -  */
  ep = sc;	/* ERROR -  */
  ep = ui;	/* ERROR -  */
  ep = ul;	/* ERROR -  */
  ep = us;	/* ERROR -  */
  ep = uc;	/* ERROR -  */
  sp = i;	/* ERROR -  */
  sp = l;	/* ERROR -  */
  sp = s;	/* ERROR -  */
  sp = c;	/* ERROR -  */
  sp = si;	/* ERROR -  */
  sp = sl;	/* ERROR -  */
  sp = ss;	/* ERROR -  */
  sp = sc;	/* ERROR -  */
  sp = ui;	/* ERROR -  */
  sp = ul;	/* ERROR -  */
  sp = us;	/* ERROR -  */
  sp = uc;	/* ERROR -  */
  fp = i;	/* ERROR -  */
  fp = l;	/* ERROR -  */
  fp = s;	/* ERROR -  */
  fp = c;	/* ERROR -  */
  fp = si;	/* ERROR -  */
  fp = sl;	/* ERROR -  */
  fp = ss;	/* ERROR -  */
  fp = sc;	/* ERROR -  */
  fp = ui;	/* ERROR -  */
  fp = ul;	/* ERROR -  */
  fp = us;	/* ERROR -  */
  fp = uc;	/* ERROR -  */
}

int main () { return 0; }
@


1.1.1.1
log
@Import gcc-3.3.2. Only the compiler. ada frontend removed for space 
considerations.
@
text
@@
