head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.52
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.48
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.50
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.42
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.46
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.44
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.40
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.38
	OPENBSD_5_3_BASE:1.1.1.1
	gcc-3_3_6:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.36
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.34
	OPENBSD_5_0:1.1.1.1.0.32
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.30
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.28
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.24
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.26
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.22
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.20
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.18
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.16
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.14
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.12
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.10
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.8
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.6
	OPENBSD_3_7_BASE:1.1.1.1
	gcc-3_3_5:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.11.29.12.37.59;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.11.29.12.37.59;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* Test for format extensions beyond the C standard and X/Open standard.
   Test for scanf formats.
*/
/* Origin: Joseph Myers <jsm28@@cam.ac.uk> */
/* { dg-do compile } */
/* { dg-options "-std=gnu99 -Wformat" } */

#include "format.h"

void
foo (quad_t *qp, u_quad_t *uqp, quad_t *qn, long long int *llp,
     unsigned long long int *ullp, float *fp, char *s, void **pp, wchar_t *ls,
     int *ip, unsigned int *up)
{
  /* As an extension, GCC allows the BSD length "q" for integer formats.
     This is largely obsoleted in C99 by %j, %ll and SCNd64.
  */
  scanf ("%qd%qi%qo%qu%qx%qX%qn", qp, qp, uqp, uqp, uqp, uqp, qn);
  scanf ("%qf", fp); /* { dg-warning "length" "bad use of %q" } */
  scanf ("%qF", fp); /* { dg-warning "length" "bad use of %q" } */
  scanf ("%qe", fp); /* { dg-warning "length" "bad use of %q" } */
  scanf ("%qE", fp); /* { dg-warning "length" "bad use of %q" } */
  scanf ("%qg", fp); /* { dg-warning "length" "bad use of %q" } */
  scanf ("%qG", fp); /* { dg-warning "length" "bad use of %q" } */
  scanf ("%qa", fp); /* { dg-warning "length" "bad use of %q" } */
  scanf ("%qA", fp); /* { dg-warning "length" "bad use of %q" } */
  scanf ("%qs", s); /* { dg-warning "length" "bad use of %q" } */
  scanf ("%q[abc]", s); /* { dg-warning "length" "bad use of %q" } */
  scanf ("%qc", s); /* { dg-warning "length" "bad use of %q" } */
  scanf ("%qp", pp); /* { dg-warning "length" "bad use of %q" } */
  scanf ("%qC", ls); /* { dg-warning "length" "bad use of %q" } */
  scanf ("%qS", ls); /* { dg-warning "length" "bad use of %q" } */
  /* As an extension, GCC allows the length "L" on integer formats
     (but not %n) as a synonym for "ll".
     This should be considered deprecated.
  */
  scanf ("%Ld%Li%Lo%Lu%Lx%LX", llp, llp, ullp, ullp, ullp, ullp);
  /* glibc also supports flags ' and I on scanf formats.  The ' flag applies
     to all formats scanning decimal values; the I flag only to decimal integer
     formats.
  */
  scanf ("%'d%'i%'u%'a%'A%'e%'E%'f%'F%'g%'G", ip, ip, up, fp, fp, fp, fp,
	 fp, fp, fp, fp);
  scanf ("%'o", up); /* { dg-warning "flag" "bad use of ' flag" } */
  scanf ("%'x", up); /* { dg-warning "flag" "bad use of ' flag" } */
  scanf ("%'X", up); /* { dg-warning "flag" "bad use of ' flag" } */
  scanf ("%'n", ip); /* { dg-warning "flag" "bad use of ' flag" } */
  scanf ("%'s", s); /* { dg-warning "flag" "bad use of ' flag" } */
  scanf ("%'[abc]", s); /* { dg-warning "flag" "bad use of ' flag" } */
  scanf ("%'c", s); /* { dg-warning "flag" "bad use of ' flag" } */
  scanf ("%'p", pp); /* { dg-warning "flag" "bad use of ' flag" } */
  scanf ("%'C", ls); /* { dg-warning "flag" "bad use of ' flag" } */
  scanf ("%'S", ls); /* { dg-warning "flag" "bad use of ' flag" } */
  scanf ("%Id%Ii%Iu", ip, ip, up);
  scanf ("%Ia", fp); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%IA", fp); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%Ie", fp); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%IE", fp); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%If", fp); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%IF", fp); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%Ig", fp); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%IG", fp); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%Io", up); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%Ix", up); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%IX", up); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%In", ip); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%Is", s); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%I[abc]", s); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%Ic", s); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%Ip", pp); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%IC", ls); /* { dg-warning "flag" "bad use of I flag" } */
  scanf ("%IS", ls); /* { dg-warning "flag" "bad use of I flag" } */
}
@


1.1.1.1
log
@Import gcc-3.3.2. Only the compiler. ada frontend removed for space 
considerations.
@
text
@@
