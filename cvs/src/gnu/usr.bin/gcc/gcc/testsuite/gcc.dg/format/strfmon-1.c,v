head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.52
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.48
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.50
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.42
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.46
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.44
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.40
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.38
	OPENBSD_5_3_BASE:1.1.1.1
	gcc-3_3_6:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.36
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.34
	OPENBSD_5_0:1.1.1.1.0.32
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.30
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.28
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.24
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.26
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.22
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.20
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.18
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.16
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.14
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.12
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.10
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.8
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.6
	OPENBSD_3_7_BASE:1.1.1.1
	gcc-3_3_5:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2003.11.29.12.38.01;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.11.29.12.38.01;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* Test for strfmon format checking.  */
/* Origin: Joseph Myers <jsm28@@cam.ac.uk> */
/* { dg-do compile } */
/* { dg-options "-std=gnu99 -Wformat" } */

#include "format.h"

void
foo (char *s, size_t m, double d, long double ld)
{
  /* Examples of valid formats from Austin Group draft 7.  */
  strfmon (s, m, "%n", d);
  strfmon (s, m, "%11n", d);
  strfmon (s, m, "%#5n", d);
  strfmon (s, m, "%=*#5n", d);
  strfmon (s, m, "%=0#5n", d);
  strfmon (s, m, "%^#5n", d);
  strfmon (s, m, "%^#5.0n", d);
  strfmon (s, m, "%^#5.4n", d);
  strfmon (s, m, "%(#5n", d);
  strfmon (s, m, "%!(#5n", d);
  strfmon (s, m, "%-14#5.4n", d);
  strfmon (s, m, "%14#5.4n", d);
  /* Some more valid formats, including the GNU L length extension.  */
  strfmon (s, m, "abc%-11ndef%==i%%", d, d);
  strfmon (s, m, "%%abc%-11ndef%==Li%=%i", d, ld, d);
  strfmon (s, m, "%Li", ld);
  strfmon (s, m, "%11Li", ld);
  strfmon (s, m, "%#5Li", ld);
  strfmon (s, m, "%=*#5Li", ld);
  strfmon (s, m, "%=0#5Li", ld);
  strfmon (s, m, "%^#5Li", ld);
  strfmon (s, m, "%^#5.0Li", ld);
  strfmon (s, m, "%^#5.4Li", ld);
  strfmon (s, m, "%(#5Li", ld);
  strfmon (s, m, "%!(#5Li", ld);
  strfmon (s, m, "%-14#5.4Li", ld);
  strfmon (s, m, "%14#5.4Li", ld);
  /* Formats with the wrong types used.  */
  strfmon (s, m, "%Ln", d); /* { dg-warning "format" "wrong type" } */
  strfmon (s, m, "%n", ld); /* { dg-warning "format" "wrong type" } */
  /* The + and ( flags cannot be used together.  */
  strfmon (s, m, "%+(i", d); /* { dg-warning "flag" "+ and ( flags" } */
  strfmon (s, m, "%(+i", d); /* { dg-warning "flag" "+ and ( flags" } */
  /* Although empty precision is OK for printf, it isn't here.  */
  strfmon (s, m, "%#.5n", d); /* { dg-warning "empty" "empty left precision" } */
  strfmon (s, m, "%#5.n", d); /* { dg-warning "empty" "empty right precision" } */
  /* However, zero is a valid value for width and precisions.  */
  strfmon (s, m, "%0#0.0n", d);
  /* Test bogus %% constructions.  */
  strfmon (s, m, "%^%"); /* { dg-warning "format" "bogus %%" } */
  strfmon (s, m, "%!%\n"); /* { dg-warning "format" "bogus %%" } */
  strfmon (s, m, "%5%\n"); /* { dg-warning "format" "bogus %%" } */
  strfmon (s, m, "%.5%\n"); /* { dg-warning "format" "bogus %%" } */
  strfmon (s, m, "%#5%\n"); /* { dg-warning "format" "bogus %%" } */
  /* Miscellaneous bogus formats.  */
  strfmon (s, m, "%n%n", d); /* { dg-warning "arguments" "too few args" } */
  strfmon (s, m, ""); /* { dg-warning "zero-length" "empty" } */
  strfmon (s, m, NULL); /* { dg-warning "null" "null format string" } */
  strfmon (s, m, "%"); /* { dg-warning "trailing" "tailing %" } */
  strfmon (s, m, "%n\0", d); /* { dg-warning "embedded" "embedded NUL" } */
  strfmon (s, m, "%^^n", d); /* { dg-warning "repeated" "repeated flag" } */
}
@


1.1.1.1
log
@Import gcc-3.3.2. Only the compiler. ada frontend removed for space 
considerations.
@
text
@@
