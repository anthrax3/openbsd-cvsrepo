head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.56
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.52
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.48
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.50
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.42
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.46
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.44
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.40
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.38
	OPENBSD_5_3_BASE:1.1.1.1
	gcc-3_3_6:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.36
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.34
	OPENBSD_5_0:1.1.1.1.0.32
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.30
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.28
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.24
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.26
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.22
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.20
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.18
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.16
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.14
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.12
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.10
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.8
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.6
	OPENBSD_3_7_BASE:1.1.1.1
	gcc-3_3_5:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@c @;


1.1
date	2003.11.29.12.37.31;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.11.29.12.37.31;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@* Date: Wed, 25 Jun 1997 12:48:26 +0200 (MET DST)
* MIME-Version: 1.0
* From: R.Hooft@@EuroMail.com (Rob Hooft)
* To: g77-alpha@@gnu.ai.mit.edu
* Subject: Re: testing 970624.
* In-Reply-To: <199706251027.GAA07892@@churchy.gnu.ai.mit.edu>
* References: <199706251018.MAA21538@@nu>
* 	<199706251027.GAA07892@@churchy.gnu.ai.mit.edu>
* X-Mailer: VM 6.30 under Emacs 19.34.1
* Content-Type: text/plain; charset=US-ASCII
* 
* >>>>> "CB" == Craig Burley <burley@@gnu.ai.mit.edu> writes:
* 
*  CB> but OTOH I'd like to see more problems like this on other
*  CB> applications, and especially other systems
* 
* How about this one: An application that prints "112." on all
* compilers/platforms I have tested, except with the new g77 on ALPHA (I
* don't have the new g77 on any other platform here to test)?
* 
* Application Appended. Source code courtesy of my boss.....
* Disclaimer: I do not know the right answer, or even whether there is a
* single right answer.....
* 
* Regards,
* -- 
* =====       R.Hooft@@EuroMail.com   http://www.Sander.EMBL-Heidelberg.DE/rob/ ==
* ==== In need of protein modeling?  http://www.Sander.EMBL-Heidelberg.DE/whatif/
* Validation of protein structures?  http://biotech.EMBL-Heidelberg.DE:8400/ ====
* == PGPid 0xFA19277D == Use Linux!  Free Software Rules The World! =============
* 
* nu[152]for% cat humor.f      
      PROGRAM SUBROUTINE
      LOGICAL ELSE IF
      INTEGER REAL, GO TO PROGRAM, WHILE
      REAL FORMAT(2)
      DATA IF,REAL,END DO,WHILE,FORMAT(2),I2/2,6,7,1,112.,1/
      DO THEN=1, END DO, WHILE
         CALL = END DO - IF
         PROGRAM = THEN - IF
         ELSE IF = THEN .GT. IF
         IF (THEN.GT.REAL) THEN
            CALL FUNCTION PROGRAM (ELSE IF, GO TO PROGRAM, THEN)
         ELSE IF (ELSE IF) THEN
            REAL = THEN + END DO
         END IF
      END DO
 10   FORMAT(I2/I2) = WHILE*REAL*THEN
      IF (FORMAT(I2) .NE. FORMAT(I2+I2)) CALL ABORT
      END ! DO
      SUBROUTINE FUNCTION PROGRAM (REAL,INTEGER, LOGICAL)
      LOGICAL REAL
      REAL LOGICAL
      INTEGER INTEGER, STOP, RETURN, GO TO
      ASSIGN 9 TO STOP
      ASSIGN = 9 + LOGICAL
      ASSIGN 7 TO RETURN
      ASSIGN 9 TO GO TO
      GO TO = 5
      STOP = 8
      IF (.NOT.REAL) GOTO STOP
      IF (LOGICAL.GT.INTEGER) THEN
         IF = LOGICAL +5
         IF (LOGICAL.EQ.5) ASSIGN 5 TO IF
         INTEGER=IF
      ELSE
         IF (ASSIGN.GT.STOP) ASSIGN 9 TO GOTO
         ELSE = GO TO
         END IF = ELSE + GO TO
         IF (.NOT.REAL.AND.GOTO.GT.ELSE) GOTO RETURN
      END IF
    5 CONTINUE
    7 LOGICAL=LOGICAL+STOP
    9 RETURN
      END ! IF
* nu[153]for% f77 humor.f
* nu[154]for% ./a.out
*    112.0000    
* nu[155]for% f90 humor.f  
* nu[156]for% ./a.out    
*    112.0000    
* nu[157]for% g77 humor.f 
* nu[158]for% ./a.out    
*   40.
@


1.1.1.1
log
@Import gcc-3.3.2. Only the compiler. ada frontend removed for space 
considerations.
@
text
@@
