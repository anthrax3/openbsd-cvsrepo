head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.58
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.56
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.52
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.48
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.50
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.42
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.46
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.44
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.40
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.38
	OPENBSD_5_3_BASE:1.2
	gcc-3_3_6:1.1.1.1
	OPENBSD_5_2:1.2.0.36
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.34
	OPENBSD_5_0:1.2.0.32
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.30
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.28
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.24
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.26
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.22
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.20
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.18
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.16
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.14
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.12
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.10
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	gcc-3_3_5:1.1.1.1
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.11.29.13.29.30;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.29.12.36.36;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.11.29.12.36.36;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Rebuild of parser in obj directory.
@
text
@# Top level -*- makefile -*- fragment for GNU Objective-C
#   Copyright (C) 1997, 1998, 2000, 2001 Free Software Foundation, Inc.

#This file is part of GNU CC.

#GNU CC is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2, or (at your option)
#any later version.

#GNU CC is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with GNU CC; see the file COPYING.  If not, write to
#the Free Software Foundation, 59 Temple Place - Suite 330,
#Boston, MA 02111-1307, USA.

# This file provides the language dependent support in the main Makefile.
# Each language makefile fragment must provide the following targets:
#
# foo.all.build, foo.all.cross, foo.start.encap, foo.rest.encap,
# foo.info, foo.dvi,
# foo.install-normal, foo.install-common, foo.install-info, foo.install-man,
# foo.uninstall,
# foo.mostlyclean, foo.clean, foo.distclean, foo.extraclean,
# foo.maintainer-clean, foo.stage1, foo.stage2, foo.stage3, foo.stage4
#
# where `foo' is the name of the language.
#
# It should also provide rules for:
#
# - making any compiler driver (eg: g++)
# - the compiler proper (eg: cc1plus)
# - define the names for selecting the language in LANGUAGES.

#
# Define the names for selecting Objective-C in LANGUAGES.
OBJC objc: cc1obj$(exeext)
OBJECTIVE-C objective-c: cc1obj$(exeext)

# Tell GNU make to ignore these if they exist.
.PHONY: objective-c objc ObjC

# Use maximal warnings for this front end.
objc-warn = $(STRICT_WARN)

# Language-specific object files for Objective C.
OBJC_OBJS = objc-lang.o objc-parse.o objc-act.o $(C_AND_OBJC_OBJS)

cc1obj$(exeext): $(OBJC_OBJS) $(BACKEND) $(LIBDEPS)
	$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@@ $(OBJC_OBJS) $(BACKEND) $(LIBS)

# Objective C language specific files.

objc-lang.o : $(srcdir)/objc/objc-lang.c \
   $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(srcdir)/c-tree.h \
   $(srcdir)/c-common.h $(srcdir)/toplev.h $(srcdir)/objc/objc-act.h \
   $(srcdir)/langhooks.h $(srcdir)/langhooks-def.h
	$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -I$(srcdir)/objc \
	-c $(srcdir)/objc/objc-lang.c $(OUTPUT_OPTION)

objc-parse.o : objc/objc-parse.c \
   $(CONFIG_H) $(TREE_H) $(C_COMMON_H) $(srcdir)/toplev.h $(srcdir)/ggc.h \
   $(srcdir)/c-pragma.h $(srcdir)/c-tree.h \
   $(srcdir)/input.h $(srcdir)/flags.h $(srcdir)/output.h \
   $(srcdir)/objc/objc-act.h $(SYSTEM_H)
	$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -I$(srcdir)/objc \
	-c objc/objc-parse.c $(OUTPUT_OPTION)

po-generated: objc/objc-parse.c
objc/objc-parse.c : objc/objc-parse.y
	cd objc; \
	if $(BISON) $(BISONFLAGS) -o op$$$$.c objc-parse.y ; then \
	  test -f op$$$$.output && mv -f op$$$$.output objc-parse.output ; \
	  mv -f op$$$$.c objc-parse.c ; \
	else \
	  rm -f op$$$$.* ; \
	  false ; \
	fi

objc/objc-parse.y: $(srcdir)/c-parse.in
	echo '/*WARNING: This file is automatically generated!*/' >tmp-objc-prs.y
	sed -e "/^ifc$$/,/^end ifc$$/d" \
	  -e "/^ifobjc$$/d" -e "/^end ifobjc$$/d" \
	  $(srcdir)/c-parse.in >>tmp-objc-prs.y
	$(SHELL) $(srcdir)/move-if-change tmp-objc-prs.y objc/objc-parse.y

objc-act.o : $(srcdir)/objc/objc-act.c \
   $(CONFIG_H) $(TREE_H) $(RTL_H) $(SYSTEM_H) $(EXPR_H) $(TARGET_H) \
   $(C_COMMON_H) $(srcdir)/c-tree.h $(srcdir)/diagnostic.h \
   $(srcdir)/toplev.h $(srcdir)/flags.h $(srcdir)/objc/objc-act.h \
   $(srcdir)/input.h $(srcdir)/function.h $(srcdir)/output.h $(srcdir)/debug.h \
   $(srcdir)/langhooks.h $(LANGHOOKS_DEF_H) gtype-objc.h
	$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -I$(srcdir)/objc \
	-c $(srcdir)/objc/objc-act.c

gtype-objc.h : s-gtype ; @@true

#
# Build hooks:

objc.all.build:
objc.all.cross:
objc.start.encap:
objc.rest.encap:

objc.info:
objc.dvi:
objc.generated-manpages:

#
# Install hooks:
# cc1obj is installed elsewhere as part of $(COMPILERS).

objc.install-normal:

objc.install-common:

objc.install-info:

objc.install-man:

objc.uninstall:
#
# Clean hooks:
# A lot of the ancillary files are deleted by the main makefile.
# We just have to delete files specific to us.
objc.mostlyclean:
	-rm -f tmp-objc-prs.y
	-rm -f objc/*$(objext) objc/xforward objc/fflags
	-rm -f objc/*$(coverageexts)
objc.clean: objc.mostlyclean
	-rm -rf objc-headers
objc.distclean:
	-rm -f objc/Makefile objc/Make-host objc/Make-target
	-rm -f objc/config.status objc/config.cache
	-rm -f objc-parse.output
objc.extraclean:
objc.maintainer-clean:
	-rm -f objc/objc-parse.y
	-rm -f objc/objc-parse.c objc/objc-parse.output

#
# Stage hooks:

objc.stage1: stage1-start
	-mv objc/*$(objext) stage1/objc
	-mv cc1obj$(exeext) stage1
objc.stage2: stage2-start
	-mv objc/*$(objext) stage2/objc
	-mv cc1obj$(exeext) stage2
objc.stage3: stage3-start
	-mv objc/*$(objext) stage3/objc
	-mv cc1obj$(exeext) stage3
objc.stage4: stage4-start
	-mv objc/*$(objext) stage4/objc
	-mv cc1obj$(exeext) stage4
@


1.1
log
@Initial revision
@
text
@d65 1
a65 1
objc-parse.o : $(srcdir)/objc/objc-parse.c \
d71 1
a71 1
	-c $(srcdir)/objc/objc-parse.c $(OUTPUT_OPTION)
d73 3
a75 3
po-generated: $(srcdir)/objc/objc-parse.c
$(srcdir)/objc/objc-parse.c : $(srcdir)/objc/objc-parse.y
	cd $(srcdir)/objc; \
d84 1
a84 1
$(srcdir)/objc/objc-parse.y: $(srcdir)/c-parse.in
d89 1
a89 1
	$(SHELL) $(srcdir)/move-if-change tmp-objc-prs.y $(srcdir)/objc/objc-parse.y
d143 2
a144 2
	-rm -f $(srcdir)/objc/objc-parse.y
	-rm -f $(srcdir)/objc/objc-parse.c $(srcdir)/objc/objc-parse.output
@


1.1.1.1
log
@Import gcc-3.3.2. Only the compiler. ada frontend removed for space 
considerations.
@
text
@@
