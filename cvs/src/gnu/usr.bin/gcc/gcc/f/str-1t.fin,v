head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.56
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.52
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.48
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.50
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.42
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.46
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.44
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.40
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.38
	OPENBSD_5_3_BASE:1.1.1.1
	gcc-3_3_6:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.36
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.34
	OPENBSD_5_0:1.1.1.1.0.32
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.30
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.28
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.24
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.26
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.22
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.20
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.18
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.16
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.14
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.12
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.10
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.8
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.6
	OPENBSD_3_7_BASE:1.1.1.1
	gcc-3_3_5:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.11.29.12.28.17;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.11.29.12.28.17;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@{
   Copyright (C) 1995 Free Software Foundation, Inc.
   Contributed by James Craig Burley.

This file is part of GNU Fortran.

GNU Fortran is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU Fortran is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Fortran; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA
02111-1307, USA.

}

FFESTR_first // // ffestrFirst ffestr_first 1 1
;Accept ACCEPT
;Allocatable ALLOCATABLE
;Allocate ALLOCATE
Assign ASSIGN
Backspace BACKSPACE
Block BLOCK
BlockData BLOCKDATA
Byte BYTE
Call CALL
Case CASE
CaseDefault CASEDEFAULT
Character CHRCTR
Close CLOSE
Common COMMON
Complex CMPLX
;Contains CONTAINS
Continue CONTINUE
Cycle CYCLE
Data DATA
;Deallocate DEALLOCATE
Decode DECODE
Define DEFINE
;DefineFile DEFINEFILE
Delete DELETE
Dimension DIMENSION
Do DO
Double DBL
DoubleComplex DBLCMPLX
DoublePrecision DBLPRCSN
DoWhile DOWHILE
Else ELSE
ElseIf ELSEIF
;ElseWhere ELSEWHERE
Encode ENCODE
End END
EndBlock ENDBLOCK
EndBlockData ENDBLOCKDATA
EndDo ENDDO
EndFile ENDFILE
EndFunction ENDFUNCTION
EndIf ENDIF
;EndInterface ENDINTERFACE
;EndMap ENDMAP
;EndModule ENDMODULE
EndProgram ENDPROGRAM
EndSelect ENDSELECT
;EndStructure ENDSTRUCTURE
EndSubroutine ENDSUBROUTINE
;EndType ENDTYPE
;EndUnion ENDUNION
;EndWhere ENDWHERE
Entry ENTRY
Equivalence EQUIVALENCE
Exit EXIT
External EXTERNAL
Find FIND
Format FORMAT
Function FUNCTION
Go GO
GoTo GOTO
If IF
Implicit IMPLICIT
Include INCLUDE
Inquire INQUIRE
Integer INTGR
;Intent INTENT
;Interface INTERFACE
;InterfaceAssignment INTERFACEASSGNMNT
;InterfaceOperator INTERFACEOPERATOR
Intrinsic INTRINSIC
Logical LGCL
;Map MAP
;Module MODULE
;ModuleProcedure MODULEPROCEDURE
NameList NAMELIST
;Nullify NULLIFY
Open OPEN
;Optional OPTIONAL
Parameter PARAMETER
Pause PAUSE
;Pointer POINTER
Print PRINT
;Private PRIVATE
Program PROGRAM
;Public PUBLIC
Read READ
Real REAL
;Record RECORD
;Recursive RECURSIVE
;RecursiveFunction RECURSIVEFNCTN
Return RETURN
Rewind REWIND
;Rewrite REWRITE
Save SAVE
Select SELECT
SelectCase SELECTCASE
;Sequence SEQUENCE
Stop STOP
;Structure STRUCTURE
Subroutine SUBROUTINE
;Target TARGET
Then THEN
Type TYPE
;Union UNION
;Unlock UNLOCK
;Use USE
Virtual VIRTUAL
Volatile VOLATILE
;Where WHERE
Word WORD
Write WRITE
@


1.1.1.1
log
@Import gcc-3.3.2. Only the compiler. ada frontend removed for space 
considerations.
@
text
@@
