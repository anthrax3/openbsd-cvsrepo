head	1.12;
access;
symbols
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.20
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.16
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.18
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.10
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.14
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.12
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.8
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.6
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.4
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.2
	OPENBSD_5_0:1.11.0.18
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.16
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.14
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.10
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.12
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.8
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.6
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.4
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.10.0.2
	OPENBSD_4_1_BASE:1.10;
locks; strict;
comment	@ * @;


1.12
date	2011.10.21.10.17.08;	author jsg;	state Exp;
branches;
next	1.11;

1.11
date	2007.06.16.01.09.43;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2007.03.02.06.11.52;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2006.11.28.11.13.22;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2006.11.14.19.48.59;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2006.11.11.20.47.14;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2006.11.10.02.19.18;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2006.11.06.15.15.26;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2006.11.03.04.39.23;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2006.10.11.05.35.07;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.08.21.12.39;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.06.20.58.17;	author miod;	state Exp;
branches;
next	;


desc
@@


1.12
log
@change LINK_SPEC in such a way that -rdynamic will work
(passes -export-dynamic to ld(1))

ok drahn@@ miod@@
@
text
@/* Definitions for SH running OpenBSD using ELF
   Copyright (C) 2002, 2006 Free Software Foundation, Inc.
   Adapted from the NetBSD configuration contributed by Wasabi Systems, Inc.

This file is part of GNU CC.

GNU CC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU CC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

/* Get generic OpenBSD definitions. */
#include <openbsd.h>

#undef TARGET_CPU_DEFAULT
#define TARGET_CPU_DEFAULT SELECT_SH4

#undef TARGET_DEFAULT
#define TARGET_DEFAULT \
  (TARGET_CPU_DEFAULT | USERMODE_BIT | TARGET_ENDIAN_DEFAULT)

#define TARGET_OS_CPP_BUILTINS()	OPENBSD_OS_CPP_BUILTINS_ELF()

/* Layout of source language data types */

/* This must agree with <machine/_types.h> */
#undef SIZE_TYPE
#define SIZE_TYPE "long unsigned int"

#undef PTRDIFF_TYPE
#define PTRDIFF_TYPE "long int"

#undef INTMAX_TYPE
#define INTMAX_TYPE "long long int"

#undef UINTMAX_TYPE
#define UINTMAX_TYPE "long long unsigned int"

#undef WCHAR_TYPE
#define WCHAR_TYPE "int"

#undef WCHAR_TYPE_SIZE
#define WCHAR_TYPE_SIZE 32

#undef LINK_DEFAULT_CPU_EMUL
#define LINK_DEFAULT_CPU_EMUL ""

#undef SUBTARGET_LINK_EMUL_SUFFIX
#define SUBTARGET_LINK_EMUL_SUFFIX "_obsd"

#undef SUBTARGET_LINK_SPEC
#ifdef OBSD_NO_DYNAMIC_LIBRARIES
#define SUBTARGET_LINK_SPEC \
  "%{g:%{!nostdlib:-L/usr/lib/debug}} %{!nostdlib:%{!r*:%{!e*:-e __start}}} -dc -dp %{assert*}"
#else
#define SUBTARGET_LINK_SPEC \
  "%{g:%{!nostdlib:-L/usr/lib/debug}} \
   %{!shared:%{!nostdlib:%{!r*:%{!e*:-e __start}}}} \
   %{shared:-Bshareable -x} -dc -dp %{R*} \
   %{static:-Bstatic} \
   %{rdynamic:-export-dynamic} \
   %{assert*} \
   %{!dynamic-linker:-dynamic-linker /usr/libexec/ld.so}"
#endif


#undef LINK_SPEC
#define LINK_SPEC SH_LINK_SPEC

/* As an elf system, we need crtbegin/crtend stuff.  */
#undef STARTFILE_SPEC
#define STARTFILE_SPEC "\
	%{!shared: %{pg:gcrt0%O%s} %{!pg:%{p:gcrt0%O%s} %{!p:crt0%O%s}} \
	crtbegin%O%s} %{shared:crtbeginS%O%s}"
#undef ENDFILE_SPEC
#define ENDFILE_SPEC "%{!shared:crtend%O%s} %{shared:crtendS%O%s}"

#undef PREFERRED_DEBUGGING_TYPE
#define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG

/* Provide a CPP_SPEC appropriate for OpenBSD.  */
#undef SUBTARGET_CPP_SPEC
#define SUBTARGET_CPP_SPEC OBSD_CPP_SPEC

/* Define because we use the label and we do not need them. */
#define NO_PROFILE_COUNTERS
 
#undef FUNCTION_PROFILER
#define FUNCTION_PROFILER(STREAM,LABELNO)				\
do									\
  {									\
    if (TARGET_SHMEDIA32)						\
      {									\
	/* FIXME */							\
	abort ();							\
      }									\
    else if (TARGET_SHMEDIA64)						\
      {									\
	/* FIXME */							\
	abort ();							\
      }									\
    else								\
      {									\
        fprintf((STREAM), "\tmov.l\t%sLP%d,r1\n",			\
                LOCAL_LABEL_PREFIX, (LABELNO));				\
        fprintf((STREAM), "\tmova\t%sLP%dr,r0\n",			\
                LOCAL_LABEL_PREFIX, (LABELNO));				\
        fprintf((STREAM), "\tjmp\t@@r1\n");				\
        fprintf((STREAM), "\tnop\n");					\
        fprintf((STREAM), "\t.align\t2\n");				\
        fprintf((STREAM), "%sLP%d:\t.long\t__mcount\n",			\
                LOCAL_LABEL_PREFIX, (LABELNO));				\
        fprintf((STREAM), "%sLP%dr:\n", LOCAL_LABEL_PREFIX, (LABELNO));	\
      }									\
  }									\
while (0)
@


1.11
log
@INTMAX_TYPE and UINTMAX_TYPE are always in terms of long long on
OpenBSD, regardless of the size of a long.
OK kettenis@@ espie@@
@
text
@d67 7
a73 1
  "%{g:%{!nostdlib:-L/usr/lib/debug}} %{!shared:%{!nostdlib:%{!r*:%{!e*:-e __start}}}} %{shared:-Bshareable -x} -dc -dp %{R*} %{static:-Bstatic} %{assert*} %{!dynamic-linker:-dynamic-linker /usr/libexec/ld.so}"
@


1.10
log
@Move landisk to hardware floating point. At the moment the FPU context is
always saved upon context switches, as FPU registers are heavily used for
long long computations (don't ask). Gcc default to -m4.

Credits to drahn@@ otto@@ and deraadt@@ for feedback and help testing.

Upgrade procedure if you don't want to use the damn snapshots:
- build and install new kernel, reboot off it
- build new gcc, do not install it yet
- make includes
- install new gcc
- build and install lib/csu and lib/libc
- make build
@
text
@d43 6
@


1.9
log
@Turn OVERRIDE_OPTIONS macro into a function, so that we can put
preprocessor directives in it; then do our changes only if either
OPENBSD_NATIVE or OPENBSD_CROSS is defined; then disable -fregmove
for now.
ok otto@@
@
text
@d25 3
@


1.8
log
@Do not align jump targets to cache line boundaries at -O2 on OpenBSD.
@
text
@a111 4

/* We do not want jump targets to be aligned on cache line boundaries at -O2 */
#undef SH_PREFERRED_ALIGN_JUMPS
#define SH_PREFERRED_ALIGN_JUMPS 2
@


1.7
log
@OpenBSD defaults to dynamic linker of /usr/libexec/ld.so
@
text
@d112 4
@


1.6
log
@Yes, openbsd does not support shared libraries on sh yet, but why make it hard?
@
text
@d58 1
a58 1
  "%{g:%{!nostdlib:-L/usr/lib/debug}} %{!shared:%{!nostdlib:%{!r*:%{!e*:-e __start}}}} %{shared:-Bshareable -x} -dc -dp %{R*} %{static:-Bstatic} %{assert*}"
@


1.5
log
@Move back to softfloat for now.
@
text
@a21 2
#define OBSD_NO_DYNAMIC_LIBRARIES

@


1.4
log
@Use __start (the symbol we provide) not start. ok miod@@
@
text
@a26 3
#undef TARGET_CPU_DEFAULT
#define TARGET_CPU_DEFAULT SELECT_SH4

@


1.3
log
@Default to -m4.
@
text
@d60 1
a60 1
  "%{g:%{!nostdlib:-L/usr/lib/debug}} %{!nostdlib:%{!r*:%{!e*:-e start}}} -dc -dp %{assert*}"
d63 1
a63 1
  "%{g:%{!nostdlib:-L/usr/lib/debug}} %{!shared:%{!nostdlib:%{!r*:%{!e*:-e start}}}} %{shared:-Bshareable -x} -dc -dp %{R*} %{static:-Bstatic} %{assert*}"
@


1.2
log
@Define superH obsd-specific emulations for ld, and use it by default.
@
text
@d27 3
@


1.1
log
@Early bits for a 32-bit SuperH toolchain, currently for little-endian
systems only; more work is necessary in ld land.
@
text
@d52 1
a52 1
#define SUBTARGET_LINK_EMUL_SUFFIX "_nbsd"
d55 8
a62 1
#define SUBTARGET_LINK_SPEC LINK_SPEC
@

