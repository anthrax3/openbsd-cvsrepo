head	1.4;
access;
symbols
	OPENBSD_6_0:1.3.0.16
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.12
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2017.01.24.10.34.23;	author miod;	state Exp;
branches;
next	1.3;
commitid	X73HvnshGtANeYAY;

1.3
date	2013.02.12.19.57.06;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2013.01.20.22.59.12;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2013.01.05.11.20.55;	author miod;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Prevent too much reordering in the instruction prologue, in order to fulfill
the expectations of the DWARF code... and in order to get correct information.

Tested by aoyama@@
@
text
@/* Configuration file for an m88k OpenBSD ELF target.
   Copyright (C) 2000, 2004, 2005, 2012 Free Software Foundation, Inc.

This file is part of GNU CC.

GNU CC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU CC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU CC; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

#define REGISTER_PREFIX "%"
#undef ASM_COMMENT_START
#define ASM_COMMENT_START "|"

/* #define CTORS_SECTION_ASM_OP	"\t.section\t .ctors" */
/* #define DTORS_SECTION_ASM_OP	"\t.section\t .dtors" */

#define TEXT_SECTION_ASM_OP	"\t.text"
#define DATA_SECTION_ASM_OP	"\t.data"
#define FILE_ASM_OP		"\t.file\t"
#define BSS_ASM_OP		"\t.bss\t"
#define	REQUIRES_88110_ASM_OP	"\t.requires_88110\t"

/* This is how to output an assembler line
   that says to advance the location counter
   to a multiple of 2**LOG bytes.  */
#undef ASM_OUTPUT_ALIGN
#define ASM_OUTPUT_ALIGN(FILE,LOG)	\
  if ((LOG) != 0)			\
    fprintf (FILE, "%s%d\n", ALIGN_ASM_OP, (LOG))

#undef ASM_OUTPUT_WEAK_ALIAS
#define ASM_OUTPUT_WEAK_ALIAS(FILE,NAME,VALUE)		\
  do							\
    {							\
      fputs ("\t.weak\t", FILE);			\
      assemble_name (FILE, NAME);			\
      if (VALUE)					\
	{						\
	  fputs ("; ", FILE);				\
	  assemble_name (FILE, NAME);			\
	  fputs (" = ", FILE);				\
	  assemble_name (FILE, VALUE);			\
	}						\
      fputc ('\n', FILE);				\
    }							\
  while (0)

#undef	FUNCTION_PROFILER
#define FUNCTION_PROFILER(FILE, LABELNO) \
  output_function_profiler (FILE, LABELNO, "__mcount")

/* Run-time target specifications.  */
#define TARGET_OS_CPP_BUILTINS()			\
  do							\
    {							\
      OPENBSD_OS_CPP_BUILTINS_ELF();			\
      builtin_define ("__m88k");			\
      builtin_define ("__m88k__");			\
      builtin_assert ("cpu=m88k");			\
      builtin_assert ("machine=m88k");			\
      if (TARGET_88000)					\
	builtin_define ("__mc88000__");			\
      else						\
	{						\
	  if (TARGET_88100)				\
	    builtin_define ("__mc88100__");		\
	  if (TARGET_88110)				\
	    builtin_define ("__mc88110__");		\
	}						\
    }							\
  while (0)

/* Layout of source language data types. */

/* This must agree with <machine/_types.h> */
#undef SIZE_TYPE
#define SIZE_TYPE "long unsigned int"

#undef PTRDIFF_TYPE
#define PTRDIFF_TYPE "long int"

#undef INTMAX_TYPE
#define INTMAX_TYPE "long long int"

#undef UINTMAX_TYPE
#define UINTMAX_TYPE "long long unsigned int"

#undef WCHAR_TYPE
#define WCHAR_TYPE "int"

#undef WCHAR_TYPE_SIZE
#define WCHAR_TYPE_SIZE 32

/* Due to the split instruction and data caches, trampolines must cause the
   data cache to be synced before attempting to execute the trampoline code.
   Under OpenBSD, this is done by invoking trap #451 with r2 and r3 set to
   the address of the trampoline area and its size, respectively.  */
#undef FINALIZE_TRAMPOLINE
#define FINALIZE_TRAMPOLINE(TRAMP)					\
  emit_library_call(gen_rtx_SYMBOL_REF (Pmode, "__dcache_sync"),	\
		    0, VOIDmode, 2, (TRAMP), Pmode,			\
		    GEN_INT (TRAMPOLINE_SIZE), Pmode)

#if defined(CROSS_COMPILE) && !defined(ATTRIBUTE_UNUSED)
#define ATTRIBUTE_UNUSED
#endif
#undef TRANSFER_FROM_TRAMPOLINE
#define TRANSFER_FROM_TRAMPOLINE					\
extern void __dcache_sync(int, int);					\
void									\
__dcache_sync (addr, len)						\
     int addr ATTRIBUTE_UNUSED, len ATTRIBUTE_UNUSED;			\
{									\
  /* r2 and r3 are set by the caller and need not be modified */	\
  __asm __volatile ("tb0 0, %r0, 451");					\
}

#undef LINK_SPEC
#define LINK_SPEC \
  "%{!shared:%{!nostdlib:%{!r*:%{!e*:-e __start}}}} \
   %{shared:-shared} %{R*} \
   %{static:-Bstatic} \
   %{!static:-Bdynamic} \
   %{rdynamic:-export-dynamic} \
   %{assert*} \
   %{!dynamic-linker:-dynamic-linker /usr/libexec/ld.so}"

/* As an elf system, we need crtbegin/crtend stuff.  */
#undef STARTFILE_SPEC
#define STARTFILE_SPEC "\
	%{!shared: %{pg:gcrt0%O%s} %{!pg:%{p:gcrt0%O%s} %{!p:crt0%O%s}} \
	crtbegin%O%s} %{shared:crtbeginS%O%s}"
#undef ENDFILE_SPEC
#define ENDFILE_SPEC "%{!shared:crtend%O%s} %{shared:crtendS%O%s}"
@


1.3
log
@Reenable the stack protector code, the last varargs change fixed the issue.
@
text
@d22 2
@


1.2
log
@Enable multilib to build -fpic and -fPIC versions of libgcc.a, in addition to
the fully static one. Update the compiler specs to allow for dynamic linking
of libraries and binaries.
@
text
@a126 9
/* Disable stack protector until the varargs code is fixed to interact
   correctly with it.  */
#undef OVERRIDE_OPTIONS
#define OVERRIDE_OPTIONS						\
  do {									\
    m88k_override_options ();						\
    flag_propolice_protection = flag_stack_protection = 0;		\
  } while (0)

@


1.1
log
@Switch m88k ports to ELF.
@
text
@d138 9
a146 1
  "%{!nostdlib:%{!r*:%{!e*:-e __start}}} %{assert*}"
d148 3
a150 2
#define STARTFILE_SPEC \
  "%{pg:gcrt0%O%s} %{!pg:%{p:gcrt0%O%s} %{!p:crt0%O%s}} crtbegin%O%s"
d152 1
a152 2
#define ENDFILE_SPEC \
  "crtend%O%s"
@

