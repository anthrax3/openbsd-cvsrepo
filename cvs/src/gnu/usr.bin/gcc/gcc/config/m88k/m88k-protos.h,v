head	1.7;
access;
symbols
	OPENBSD_6_0:1.7.0.16
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.12
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.14
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.6
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.10
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.8
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	gcc-3_3_6:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.36
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.34
	OPENBSD_5_0:1.1.1.1.0.32
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.30
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.28
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.24
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.26
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.22
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.20
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.18
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.16
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.14
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.12
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.10
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.8
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.6
	OPENBSD_3_7_BASE:1.1.1.1
	gcc-3_3_5:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2013.02.08.05.24.36;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2013.02.08.05.17.31;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2013.01.02.22.05.10;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2013.01.02.22.01.18;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2012.11.21.21.11.17;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.09.20.33.39;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.29.12.33.40;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.11.29.12.33.40;	author espie;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Replace the dummy definition of FUNCTION_ARG_PASS_BY_REFERENCE(). The new
definition forces variable-sized types to always be passed by reference.

Update the varargs code to cope with this.

gcc.c-torture/execute/20020412-1 finally passes.
@
text
@/* Definitions of target machine for GNU compiler for
   Motorola m88100 in an 88open OCS/BCS environment.
   Copyright (C) 2000 Free Software Foundation, Inc.
   Contributed by Michael Tiemann (tiemann@@cygnus.com).
   Currently maintained by (gcc@@dg-rtp.dg.com)

This file is part of GNU CC.

GNU CC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU CC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU CC; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

#ifdef RTX_CODE
extern int m88k_debugger_offset PARAMS ((rtx, int));
extern void emit_bcnd PARAMS ((enum rtx_code, rtx));
extern void expand_block_move PARAMS ((rtx, rtx, rtx *));
extern void print_operand PARAMS ((FILE *, rtx, int));
extern void print_operand_address PARAMS ((FILE *, rtx));
extern const char *output_load_const_int PARAMS ((enum machine_mode, rtx *));
extern const char *output_load_const_float PARAMS ((rtx *));
extern const char *output_load_const_double PARAMS ((rtx *));
extern const char *output_load_const_dimode PARAMS ((rtx *));
extern const char *output_and PARAMS ((rtx[]));
extern const char *output_ior PARAMS ((rtx[]));
extern const char *output_xor PARAMS ((rtx[]));
extern const char *output_call PARAMS ((rtx[], rtx));

extern struct rtx_def *emit_test PARAMS ((enum rtx_code, enum machine_mode));
extern struct rtx_def *legitimize_address PARAMS ((int, rtx, rtx, rtx));
extern struct rtx_def *legitimize_operand PARAMS ((rtx, enum machine_mode));

extern int pic_address_needs_scratch PARAMS ((rtx));
extern int symbolic_address_p PARAMS ((rtx));
extern int condition_value PARAMS ((rtx));
extern int emit_move_sequence PARAMS ((rtx *, enum machine_mode, rtx));
extern int mostly_false_jump PARAMS ((rtx, rtx));
extern int real_power_of_2_operand PARAMS ((rtx, enum machine_mode));
extern int move_operand PARAMS ((rtx, enum machine_mode));
extern int call_address_operand PARAMS ((rtx, enum machine_mode));
extern int reg_or_0_operand PARAMS ((rtx, enum machine_mode));
extern int arith_operand PARAMS ((rtx, enum machine_mode));
extern int arith5_operand PARAMS ((rtx, enum machine_mode));
extern int arith32_operand PARAMS ((rtx, enum machine_mode));
extern int arith64_operand PARAMS ((rtx, enum machine_mode));
extern int int5_operand PARAMS ((rtx, enum machine_mode));
extern int int32_operand PARAMS ((rtx, enum machine_mode));
extern int add_operand PARAMS ((rtx, enum machine_mode));
extern int reg_or_bbx_mask_operand PARAMS ((rtx, enum machine_mode));
extern int real_or_0_operand PARAMS ((rtx, enum machine_mode));
extern int partial_ccmode_register_operand PARAMS ((rtx, enum machine_mode));
extern int relop PARAMS ((rtx, enum machine_mode));
extern int even_relop PARAMS ((rtx, enum machine_mode));
extern int odd_relop PARAMS ((rtx, enum machine_mode));
extern int relop_no_unsigned PARAMS ((rtx, enum machine_mode));
extern int equality_op PARAMS ((rtx, enum machine_mode));
extern int pc_or_label_ref PARAMS ((rtx, enum machine_mode));
extern int symbolic_operand PARAMS ((rtx, enum machine_mode));
#ifdef TREE_CODE
extern void m88k_va_start PARAMS ((tree, rtx));
#endif /* TREE_CODE */
#endif /* RTX_CODE */

extern void output_file_start PARAMS ((FILE *));

extern int null_prologue PARAMS ((void));
extern int integer_ok_for_set PARAMS ((unsigned));
extern void m88k_layout_frame PARAMS ((void));
extern void m88k_expand_prologue PARAMS ((void));
extern void m88k_expand_epilogue PARAMS ((void));
extern void output_function_profiler PARAMS ((FILE *, int, const char *));
extern void output_ascii PARAMS ((FILE *, const char *, int,
				  const char *, int));
extern void output_label PARAMS ((int));
extern void m88k_setup_incoming_varargs PARAMS ((CUMULATIVE_ARGS *,
						 enum machine_mode, tree, int *,
						 int));
extern enum m88k_instruction classify_integer PARAMS ((enum machine_mode, int));
extern int mak_mask_p PARAMS ((int));

#ifdef TREE_CODE
extern struct rtx_def *m88k_function_arg PARAMS ((CUMULATIVE_ARGS,
						  enum machine_mode, tree,
						  int));
extern void m88k_function_arg_advance PARAMS ((CUMULATIVE_ARGS *,
					       enum machine_mode, tree, int));
extern int m88k_function_arg_pass_by_reference PARAMS ((CUMULATIVE_ARGS *,
							enum machine_mode,
							tree, int));
extern struct rtx_def *m88k_va_arg PARAMS ((tree, tree));
extern tree m88k_build_va_list PARAMS ((void));
#endif /* TREE_CODE */

extern void m88k_override_options PARAMS ((void));
@


1.6
log
@Stop providing our own EXPAND_BUILTIN_SAVEREGS(). Instead, do the necessary
RTL generation in SETUP_INCOMING_VARARGS(...,0).

This means we no longer need to explicitely allocate room on the stack for
the saved register area (which we did in EXPAND_BUILTIN_SAVEREGS). We were
returning the correct size in SETUP_INCOMING_VARARGS's ``pretend_size''
argument anyway, causing this space to be allocated twice.

This change should also allow for the stack protector to be reenabled (after
more testing).
@
text
@d97 3
@


1.5
log
@Remove last boolean argumont of output_function_profiler(), it is always invoked
with the same value.
@
text
@a84 1
extern struct rtx_def *m88k_builtin_saveregs PARAMS ((void));
@


1.4
log
@Start removing obsolete features from the m88k backend (it's not like we'll
need to sync with upstream anymore) to make things a bit simpler and get
rid of unintended bitrotting.

This time:
- remove the small-data feature. It was only supported for COFF binaries
  anyway. This allows us to stop providing TARGET_ASM_SELECT_SECTION and
  use the default flavour, from which this backend had derived a bit in
  addition to sdata support, so this is a good thing...
- remove the -midentify-version option
- remove the -mbig-pic option, it has been superseded by -fPIC since years
  and was supposed to be removed `in a future version' since a long time
  as well.
- remove the old MONITOR_GCC debug hooks.
@
text
@d81 1
a81 1
extern void output_function_profiler PARAMS ((FILE *, int, const char *, int));
@


1.3
log
@Turn OVERRIDE_OPTIONS into a function, will make it easier to extend on a
per-platform basis.
@
text
@d74 1
a74 8
#ifdef ANSI_PROTOTYPES
struct m88k_lang_independent_options;
#endif
extern void output_file_start PARAMS ((FILE *,
				       const struct m88k_lang_independent_options *,
				       int,
				       const struct m88k_lang_independent_options *,
				       int));
@


1.2
log
@Port the gcc 2.95 m88k fixes to the gcc 3 codebase, except for the function
frame setup and varargs handling, which need some more work at the moment.
@
text
@d108 2
@


1.1
log
@Initial revision
@
text
@d93 3
d103 2
@


1.1.1.1
log
@Import gcc-3.3.2. Only the compiler. ada frontend removed for space 
considerations.
@
text
@@
