head	1.10;
access;
symbols
	OPENBSD_2_6:1.9.0.4
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.2
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2;
locks; strict;
comment	@ * @;


1.10
date	99.11.18.16.39.34;	author millert;	state dead;
branches;
next	1.9;

1.9
date	99.03.29.20.29.03;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	99.02.19.04.32.50;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	98.11.21.01.34.52;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.09.15.02.42.44;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.03.31.06.40.55;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.01.13.05.30.23;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.11.23.07.15.43;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.11.17.16.33.57;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.10.14.05.14.46;	author millert;	state Exp;
branches;
next	;


desc
@@


1.10
log
@remove old GPL'd sudo
@
text
@/*	$OpenBSD: goodpath.c,v 1.9 1999/03/29 20:29:03 millert Exp $	*/

/*
 *  CU sudo version 1.5.9
 *  Copyright (c) 1996, 1998, 1999 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 1, or (at your option)
 *  any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 *  Please send bugs, changes, problems to sudo-bugs@@courtesan.com
 *
 *******************************************************************
 *
 *  This module contains sudo_goodpath(3)
 *
 *  sudo_goodpath(3) takes a path to check and returns its argument
 *  if the path is stat(2)'able, a regular file, and executable by
 *  root.  The string's size should be <= MAXPATHLEN.
 *
 *  Todd C. Miller <Todd.Miller@@courtesan.com> Sat Mar 25 21:58:17 MST 1995
 */

#include "config.h"

#include <stdio.h>
#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif /* HAVE_UNISTD_H */
#ifdef HAVE_STRING_H
#include <string.h>
#endif /* HAVE_STRING_H */
#ifdef HAVE_STRINGS_H
#include <strings.h>
#endif /* HAVE_STRINGS_H */
#include <errno.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/param.h>
#include <netinet/in.h>

#include "sudo.h"

#ifndef STDC_HEADERS
extern int stat		__P((const char *, struct stat *));
#endif /* !STDC_HEADERS */

#ifndef lint
static const char rcsid[] = "$Sudo: goodpath.c,v 1.31 1999/03/29 04:05:08 millert Exp $";
#endif /* lint */

/******************************************************************
 *
 *  sudo_goodpath()
 *
 *  this function takes a path and makes sure it describes a a file
 *  that is a normal file and executable by root.
 */

char * sudo_goodpath(path)
    const char * path;
{
    struct stat statbuf;		/* for stat(2) */
    int err;				/* if stat(2) got an error */

    /* check for brain damage */
    if (path == NULL || path[0] == '\0')
	return(NULL);

    /* we need to be root for the stat */
    set_perms(PERM_ROOT, 0);

    err = stat(path, &statbuf);

    /* discard root perms */
    set_perms(PERM_USER, 0);

    /* stat(3) failed */
    if (err)
	return(NULL);

    /* make sure path describes an executable regular file */
    if (S_ISREG(statbuf.st_mode) && (statbuf.st_mode & 0000111)) {
	return((char *)path);
    } else {
	/* file is not executable/regular */
	errno = EACCES;
	return(NULL);
    }
}
@


1.9
log
@sudo 1.5.9--fixes some parser bugs
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.8
log
@sudo 1.5.8
@
text
@d4 1
a4 1
 *  CU sudo version 1.5.8
d31 1
a31 1
 *  Todd C. Miller (millert@@colorado.edu) Sat Mar 25 21:58:17 MST 1995
d59 1
a59 1
static const char rcsid[] = "$Sudo: goodpath.c,v 1.29 1999/02/03 04:32:14 millert Exp $";
@


1.7
log
@sudo 1.5.7
@
text
@d4 2
a5 1
 *  CU sudo version 1.5.7
d59 1
a59 1
static const char rcsid[] = "$From: goodpath.c,v 1.26 1998/11/18 04:16:13 millert Exp $";
@


1.6
log
@sudo 1.5.6
@
text
@d1 1
a1 1
/*	$OpenBSD: goodpath.c,v 1.5 1998/03/31 06:40:55 millert Exp $	*/
d4 1
a4 1
 *  CU sudo version 1.5.6
a32 4
#ifndef lint
static char rcsid[] = "$From: goodpath.c,v 1.22 1998/04/06 03:35:35 millert Exp $";
#endif /* lint */

a51 1
#include <options.h>
d57 3
@


1.5
log
@sudo 1.5.5
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 *  CU sudo version 1.5.5
d34 1
a34 1
static char rcsid[] = "Id: goodpath.c,v 1.21 1998/03/31 05:05:33 millert Exp $";
@


1.4
log
@sudo 1.5.4
@
text
@d4 1
a4 1
 *  CU sudo version 1.5.4
d34 1
a34 1
static char rcsid[] = "Id: goodpath.c,v 1.15 1998/01/13 04:48:17 millert Exp $";
@


1.3
log
@OpenBSD tags (and preserve sudo tags)
updates from my sudo source tree:
    logging.c: deal with maxfilelen < 0 case
    sudo.c: correct error message if mode/owner wrong and not statable by owner
    compat.h: fix seteuid macro
@
text
@d4 1
a4 1
 *  CU sudo version 1.5.3
d34 1
a34 1
static char rcsid[] = "Id: goodpath.c,v 1.14 1996/11/14 02:37:16 millert Exp $";
@


1.2
log
@Updated to sudo 1.5.3
@
text
@d1 2
d34 1
a34 1
static char rcsid[] = "$Id: goodpath.c,v 1.14 1996/11/14 02:37:16 millert Exp $";
@


1.1
log
@sudo 1.5.2
@
text
@d2 1
a2 1
 *  CU sudo version 1.5.2
d32 1
a32 1
static char rcsid[] = "$Id: goodpath.c,v 1.13 1996/10/07 05:05:33 millert Exp $";
@
