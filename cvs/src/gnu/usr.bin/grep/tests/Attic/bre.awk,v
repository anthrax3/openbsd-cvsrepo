head	1.2;
access;
symbols
	OPENBSD_3_3:1.1.0.14
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.12
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.10
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.8
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.6
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.4
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2003.06.22.22.19.04;	author deraadt;	state dead;
branches;
next	1.1;

1.1
date	2000.03.09.00.08.09;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.2
log
@use in-tree grep.  it also does z*grep
@
text
@BEGIN {
	FS="@@";
	n = 0;
	printf ("# Generated Spencer BRE Test\n");
	printf ("failures=0\n");
}

$0 ~ /^#/  { next; }

NF == 3 {
	printf ("status=`echo '%s' | { ${GREP} -e '%s' > /dev/null 2>&1; echo $?; cat >/dev/null; }`\n",$3, $2);
	printf ("if test $status -ne %s ; then\n", $1);
	printf ("\techo Spencer bre test \\#%d failed\n", ++n);
	printf ("\tfailures=1\n");
	printf ("fi\n");
}

NF == 4 {
#don't alarm users
#	printf ("echo '%s' | ${GREP} -e '%s' > /dev/null 2>&1\n",$3, $2);
#	printf ("if test $? -ne %s ; then\n", $1);
#	printf ("\techo Expected non conformance \\#%d ... continuing\n", ++n);
#	printf ("fi\n");
}

END { printf ("exit $failures\n"); }
@


1.1
log
@new grep 2.4.1
whole bunch of bug fixes, mmap support (w/ --mmap)
changed binary file grep behavior, but could be overwritten w/ -a
millert@@ ok
@
text
@@

