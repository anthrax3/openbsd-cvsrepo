head	1.2;
access;
symbols
	OPENBSD_2_8:1.1.0.12
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.10
	OPENBSD_2_7_BASE:1.1
	new-binutils:1.1.0.8
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2001.03.28.13.52.44;	author espie;	state dead;
branches;
next	1.1;

1.1
date	98.05.17.19.43.25;	author marc;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Goodbye, gdb uses src/gnu/lib/libreadline now.
@
text
@/* $OpenBSD: sysdep-openbsd.h,v 1.1 1998/05/17 19:43:25 marc Exp $

/* System defines for OpenBSD.
   If you think you need to change this file, then you are wrong.  In order to
   avoid a huge ugly mass of nested #ifdefs, you should create a new file just
   for your system, which contains exactly those #includes and definitions that
   your system needs, AND NOTHING MORE!  Then, add that file to the appropriate
   place in configure.in, and viola, you are done.  sysdep-sunos4.h is a good
   example of how to do this. */

#ifdef __GNUC__
#define alloca __builtin_alloca
#else
#ifndef alloca				/* May be a macro, with args. */
extern char *alloca ();
#endif
#endif

#include <sys/types.h>			/* Needed by dirent.h */
#include <dirent.h>
typedef struct dirent dirent;
#include <unistd.h>			/* for _POSIX_VERSION */
@


1.1
log
@add openbsd configuration file to readline.  The config file pulls in
unistd.h (for sys/unistd.h) to get _POSIX_VERSION so readline does not
depend upon the 4.3 compatibility ioctls.
@
text
@d1 1
a1 1
/* $OpenBSD$
@

