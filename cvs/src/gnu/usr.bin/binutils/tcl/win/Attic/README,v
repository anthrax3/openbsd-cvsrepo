head	1.3;
access;
symbols
	CYGNUS-961112:1.1.2.1
	CYGNUS:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	96.11.23.16.33.23;	author niklas;	state dead;
branches;
next	1.2;

1.2
date	96.11.23.04.01.37;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.11.19.14.50.49;	author niklas;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.11.19.14.50.49;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove accidentally committed dirs from the trunk
@
text
@Tcl 7.5 for Windows

by Scott Stanton
Sun Microsystems Laboratories
scott.stanton@@eng.sun.com

SCCS: @@(#) README 1.14 96/04/12 16:38:45

1. Introduction
---------------

This is the directory where you configure and compile the Windows
version of Tcl.  This directory also contains source files for Tcl
that are specific to Microsoft Windows.  The rest of this file
contains information specific to the Windows version of Tcl.

2. Distribution notes
---------------------

Tcl 7.5 for Windows is distributed in binary form in addition to the
common source release.  The binary distribution is a self-extracting
archive with a built-in installation script.

Look for the binary release in the same location as the source release
(ftp.smli.com:/pub/tcl or any of the mirror sites).  For most users,
the binary release will be much easier to install and use.  You only
need the source release if you plan to modify the core of Tcl, or if
you need to compile with a different compiler.  With the addition of
the dynamic loading interface, it is no longer necessary to have the
source distribution in order to build and use extensions.

3. Compiling Tcl
----------------

In order to compile Tcl for Windows, you need the following items:

	Tcl 7.5 Source Distribution (plus any patches)

	Borland C++ 4.5/5.0 (both 16-bit and 32-bit compilers)
	  or
	Visual C++ 2.x/4.0
	Visual C++ 1.5 (to build tcl1675.dll for Win32s support)

In the "win" subdirectory of the source release, you will find two
files called "makefile.bc" and "makefile.vc".  These are the makefiles
for the Borland and Visual C++ compilers respectively.  You should
copy the appropriate one to "makefile" and update the paths at the
top of the file to reflect your system configuration.  Now you can use
"make" (or "nmake" for VC++) to build the tcl libraries and the tclsh
executable.

In order to use the binaries generated by these makefiles, you will
need to place the Tcl script library files someplace where Tcl can
find them.  Tcl looks in one of two places for the library files:

	1) The path specified in the environment variable "TCL_LIBRARY".
	2) Relative to the directory containing the Tcl DLL.
	    Tcl will look for a directory "..\lib\tcl7.5" relative to the
	    directory containing the tcl75.dll loaded by the currently running
	    application.

Note that in order to run tclsh75.exe, you must ensure that tcl75.dll
(and tcl1675.dll under Win32s) are on your path, or in the directory
containing tclsh75.exe.

4. Test suite
-------------

Tcl currently fails a number of tests in the test suite under Windows.
Most of these failures result from dependencies on a Unix-like
environment.  There are also a few failures that are due to
differences in the way exec and pipes work under Windows.  

5. Known Bugs
-------------

Here is the current list of known bugs/missing features for the
Windows beta version of Tcl:

- Non-blocking connect for sockets does not work yet.
- The library cannot be used by two processes at the same time under
  Win32s.  This is probably fixable, but may take a while.
- Under Win32s, "exec" generates temp files and leaves them lying
  around under some circumstances.
- Under Win32s, Tcl does not properly free its state on exit, so it
  will cause memory resources to be lost to the system.
- File events only work on sockets.
- exec/open still have some problems with some programs, leading to hangs

If you have comments or bug reports for the Windows version of Tcl,
please direct them to:

Scott Stanton
scott.stanton@@eng.sun.com

or post them to the newsgroup comp.lang.tcl.
@


1.2
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@@


1.1
log
@file README was initially added on branch CYGNUS.
@
text
@d1 96
@


1.1.2.1
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a0 96
Tcl 7.5 for Windows

by Scott Stanton
Sun Microsystems Laboratories
scott.stanton@@eng.sun.com

SCCS: @@(#) README 1.14 96/04/12 16:38:45

1. Introduction
---------------

This is the directory where you configure and compile the Windows
version of Tcl.  This directory also contains source files for Tcl
that are specific to Microsoft Windows.  The rest of this file
contains information specific to the Windows version of Tcl.

2. Distribution notes
---------------------

Tcl 7.5 for Windows is distributed in binary form in addition to the
common source release.  The binary distribution is a self-extracting
archive with a built-in installation script.

Look for the binary release in the same location as the source release
(ftp.smli.com:/pub/tcl or any of the mirror sites).  For most users,
the binary release will be much easier to install and use.  You only
need the source release if you plan to modify the core of Tcl, or if
you need to compile with a different compiler.  With the addition of
the dynamic loading interface, it is no longer necessary to have the
source distribution in order to build and use extensions.

3. Compiling Tcl
----------------

In order to compile Tcl for Windows, you need the following items:

	Tcl 7.5 Source Distribution (plus any patches)

	Borland C++ 4.5/5.0 (both 16-bit and 32-bit compilers)
	  or
	Visual C++ 2.x/4.0
	Visual C++ 1.5 (to build tcl1675.dll for Win32s support)

In the "win" subdirectory of the source release, you will find two
files called "makefile.bc" and "makefile.vc".  These are the makefiles
for the Borland and Visual C++ compilers respectively.  You should
copy the appropriate one to "makefile" and update the paths at the
top of the file to reflect your system configuration.  Now you can use
"make" (or "nmake" for VC++) to build the tcl libraries and the tclsh
executable.

In order to use the binaries generated by these makefiles, you will
need to place the Tcl script library files someplace where Tcl can
find them.  Tcl looks in one of two places for the library files:

	1) The path specified in the environment variable "TCL_LIBRARY".
	2) Relative to the directory containing the Tcl DLL.
	    Tcl will look for a directory "..\lib\tcl7.5" relative to the
	    directory containing the tcl75.dll loaded by the currently running
	    application.

Note that in order to run tclsh75.exe, you must ensure that tcl75.dll
(and tcl1675.dll under Win32s) are on your path, or in the directory
containing tclsh75.exe.

4. Test suite
-------------

Tcl currently fails a number of tests in the test suite under Windows.
Most of these failures result from dependencies on a Unix-like
environment.  There are also a few failures that are due to
differences in the way exec and pipes work under Windows.  

5. Known Bugs
-------------

Here is the current list of known bugs/missing features for the
Windows beta version of Tcl:

- Non-blocking connect for sockets does not work yet.
- The library cannot be used by two processes at the same time under
  Win32s.  This is probably fixable, but may take a while.
- Under Win32s, "exec" generates temp files and leaves them lying
  around under some circumstances.
- Under Win32s, Tcl does not properly free its state on exit, so it
  will cause memory resources to be lost to the system.
- File events only work on sockets.
- exec/open still have some problems with some programs, leading to hangs

If you have comments or bug reports for the Windows version of Tcl,
please direct them to:

Scott Stanton
scott.stanton@@eng.sun.com

or post them to the newsgroup comp.lang.tcl.
@
