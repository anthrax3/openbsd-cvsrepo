head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.3.0.70
	OPENBSD_6_1_BASE:1.1.1.3
	OPENBSD_6_0:1.1.1.3.0.66
	OPENBSD_6_0_BASE:1.1.1.3
	OPENBSD_5_9:1.1.1.3.0.62
	OPENBSD_5_9_BASE:1.1.1.3
	OPENBSD_5_8:1.1.1.3.0.64
	OPENBSD_5_8_BASE:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.56
	OPENBSD_5_7_BASE:1.1.1.3
	OPENBSD_5_6:1.1.1.3.0.60
	OPENBSD_5_6_BASE:1.1.1.3
	OPENBSD_5_5:1.1.1.3.0.58
	OPENBSD_5_5_BASE:1.1.1.3
	OPENBSD_5_4:1.1.1.3.0.54
	OPENBSD_5_4_BASE:1.1.1.3
	OPENBSD_5_3:1.1.1.3.0.52
	OPENBSD_5_3_BASE:1.1.1.3
	OPENBSD_5_2:1.1.1.3.0.50
	OPENBSD_5_2_BASE:1.1.1.3
	OPENBSD_5_1_BASE:1.1.1.3
	OPENBSD_5_1:1.1.1.3.0.48
	OPENBSD_5_0:1.1.1.3.0.46
	OPENBSD_5_0_BASE:1.1.1.3
	OPENBSD_4_9:1.1.1.3.0.44
	OPENBSD_4_9_BASE:1.1.1.3
	OPENBSD_4_8:1.1.1.3.0.42
	OPENBSD_4_8_BASE:1.1.1.3
	OPENBSD_4_7:1.1.1.3.0.38
	OPENBSD_4_7_BASE:1.1.1.3
	OPENBSD_4_6:1.1.1.3.0.40
	OPENBSD_4_6_BASE:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.36
	OPENBSD_4_5_BASE:1.1.1.3
	OPENBSD_4_4:1.1.1.3.0.34
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.32
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_2:1.1.1.3.0.30
	OPENBSD_4_2_BASE:1.1.1.3
	OPENBSD_4_1:1.1.1.3.0.28
	OPENBSD_4_1_BASE:1.1.1.3
	OPENBSD_4_0:1.1.1.3.0.26
	OPENBSD_4_0_BASE:1.1.1.3
	OPENBSD_3_9:1.1.1.3.0.24
	OPENBSD_3_9_BASE:1.1.1.3
	OPENBSD_3_8:1.1.1.3.0.22
	OPENBSD_3_8_BASE:1.1.1.3
	OPENBSD_3_7:1.1.1.3.0.20
	OPENBSD_3_7_BASE:1.1.1.3
	BINUTILS_2_15:1.1.1.3
	OPENBSD_3_6:1.1.1.3.0.18
	OPENBSD_3_6_BASE:1.1.1.3
	BINUTILS-2_14:1.1.1.3
	OPENBSD_3_5:1.1.1.3.0.16
	OPENBSD_3_5_BASE:1.1.1.3
	OPENBSD_3_4:1.1.1.3.0.14
	OPENBSD_3_4_BASE:1.1.1.3
	OPENBSD_3_3:1.1.1.3.0.12
	OPENBSD_3_3_BASE:1.1.1.3
	OPENBSD_3_2:1.1.1.3.0.10
	OPENBSD_3_2_BASE:1.1.1.3
	binutils-2_11_2:1.1.1.3
	OPENBSD_3_1:1.1.1.3.0.8
	OPENBSD_3_1_BASE:1.1.1.3
	OPENBSD_3_0:1.1.1.3.0.6
	OPENBSD_3_0_BASE:1.1.1.3
	BINUTILS-2_10_1:1.1.1.3
	OPENBSD_2_9:1.1.1.3.0.4
	OPENBSD_2_9_BASE:1.1.1.3
	OPENBSD_2_8:1.1.1.3.0.2
	OPENBSD_2_8_BASE:1.1.1.3
	BINUTILS-2_10:1.1.1.3
	FSF:1.1.1
	OPENBSD_2_7:1.1.1.2.0.14
	OPENBSD_2_7_BASE:1.1.1.2
	new-binutils:1.1.1.2.0.12
	OPENBSD_2_6:1.1.1.2.0.10
	OPENBSD_2_6_BASE:1.1.1.2
	OPENBSD_2_5:1.1.1.2.0.8
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.6
	OPENBSD_2_4_BASE:1.1.1.2
	OPENBSD_2_3:1.1.1.2.0.4
	OPENBSD_2_3_BASE:1.1.1.2
	OPENBSD_2_2:1.1.1.2.0.2
	OPENBSD_2_2_BASE:1.1.1.2
	BINUTILS-2_8_1:1.1.1.2
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	CYGNUS-961112:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	CYGNUS-960904:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@# @;


1.1
date	96.09.04.17.49.01;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.09.04.17.49.01;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	97.05.29.09.27.57;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.09.12.14.47.58;	author espie;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#
# Makefile for libopcodes under openVMS/AXP
#
# For use with gnu-make for vms
#
# Created by Klaus Kaempf, kkaempf@@progis.de
#
#
CC=gcc

OBJS=alpha-dis.obj,alpha-opc.obj,dis-buf.obj,disassemble.obj

ifeq ($(CC),gcc)
DEFS=/define=(OBJ_EVAX)
CFLAGS=/include=([],[-.include],[-.bfd])$(DEFS)
else
DEFS=/define=(OBJ_EVAX,"const=")
CFLAGS=/noopt/debug/include=([],[-.include],[-.bfd])$(DEFS)
endif

libopcodes.olb: sysdep.h $(OBJS)
	purge
	lib/create libopcodes *.obj

disassemble.obj: disassemble.c
	$(CC)$(CFLAGS)/define=("ARCH_alpha") $<

alpha-dis.obj: alpha-dis.c

sysdep.h: [-.bfd.hosts]alphavms.h
	$(CP) $< $@@
@


1.1.1.1
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@@


1.1.1.2
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@d2 1
a2 1
# Makefile for libopcodes under openVMS/Alpha
d6 1
a6 1
# Created by Klaus K"ampf, kkaempf@@progis.de
d9 2
a31 6

clean:
	$$ purge
	$(RM) *.obj;
	$(RM) sysdep.h;
	$(RM) libopcodes.olb;
@


1.1.1.3
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d2 1
a2 1
# Makefile for libopcodes under openVMS VAX and Alpha
a8 1
ifeq ($(ARCH),alpha)
a9 7
FORMAT=OBJ_EVAX
ARCHDEF="ARCH_alpha"
else
OBJS=vax-dis.obj,dis-buf.obj,disassemble.obj
FORMAT=OBJ_VAX
ARCHDEF="ARCH_vax"
endif
d12 1
a12 1
DEFS=/define=($(FORMAT))
d15 2
a16 3
DEFS=/define=($(FORMAT),"const=")
CFLAGS=/noopt/debug/include=([],[-.include],[-.bfd])$(DEFS)\
/warnings=disable=(missingreturn,implicitfunc,longextern)
d24 3
a26 1
	$(CC)$(CFLAGS)/define=($(ARCHDEF)) $<
d28 1
a28 1
sysdep.h: [-.bfd.hosts]$(ARCH)vms.h
@

