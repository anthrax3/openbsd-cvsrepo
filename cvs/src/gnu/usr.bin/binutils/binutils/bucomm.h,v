head	1.10;
access;
symbols
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.52
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.48
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.44
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.46
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.38
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.42
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.40
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.36
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.34
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.32
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.30
	OPENBSD_5_0:1.10.0.28
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.26
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.24
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.20
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.22
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.18
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.16
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.14
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.12
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.10
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.8
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.6
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.4
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	BINUTILS_2_15:1.1.1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	BINUTILS-2_14:1.1.1.8
	OPENBSD_3_5:1.8.0.8
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.6
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	binutils-2_11_2:1.1.1.7
	OPENBSD_3_1:1.7.0.8
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.6
	OPENBSD_3_0_BASE:1.7
	BINUTILS-2_10_1:1.1.1.6
	OPENBSD_2_9:1.7.0.4
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	BINUTILS-2_10:1.1.1.6
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	new-binutils:1.5.0.4
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	BINUTILS-2_8_1:1.1.1.5
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	CYGNUS-961112:1.1.1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	CYGNUS-960904:1.1.1.3
	CYGNUS-960609:1.1.1.2
	CYGNUS-960607:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2004.11.02.20.45.16;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2004.05.17.21.54.25;	author drahn;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.13.17.07.32;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2000.09.12.22.45.17;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2000.09.12.19.11.29;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	99.09.14.14.20.11;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	96.11.23.03.33.48;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.09.04.19.02.39;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.10.48.23;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.03.43;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.03.43;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.07.11.03.38;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.09.04.17.49.28;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	96.11.19.14.13.20;	author niklas;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	97.05.29.09.15.41;	author niklas;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2000.09.12.14.45.02;	author espie;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2002.05.13.13.14.21;	author fgsch;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2004.05.17.20.42.03;	author drahn;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2004.11.02.20.22.00;	author miod;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Merge conflicts, bringing our changes back in:
- extra $(SHELL) and sugar for make (so that files not mode +x still work)
- safer temp file handling
- our W^X binary layout changes in ld
- OpenBSD policy for library file selection in ld
- arm and m88k changes which were not merged in time for official 2.15
- bfd core file handling
- a couple typos

New for 2.15:
- ld(1) and as(1) manpages now generated at build time
- binutils/stabs.c reverted to use our in-tree libiberty for now
- we still use our VIA C3 crypto code over stock binutils, as it recognizes
  more instructions
- new emulations for OpenBSD on mips64 machines, to help OpenBSD/sgi
- relaxed %f# handling in gas on OpenBSD/sparc64 (same as was in 2.14)

Tested on all platforms by various people; special thanks to sturm@@ and
otto@@.
@
text
@/* bucomm.h -- binutils common include file.
   Copyright 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
   2002, 2003 Free Software Foundation, Inc.

   This file is part of GNU Binutils.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

#ifndef _BUCOMM_H
#define _BUCOMM_H

#include "ansidecl.h"
#include <stdio.h>
#include <sys/types.h>

#include "config.h"
#include "bin-bugs.h"

#ifdef ANSI_PROTOTYPES
#include <stdarg.h>
#else
#include <varargs.h>
#endif

#ifdef USE_BINARY_FOPEN
#include "fopen-bin.h"
#else
#include "fopen-same.h"
#endif

#include <errno.h>
#ifndef errno
extern int errno;
#endif

#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif

#ifdef HAVE_STRING_H
#include <string.h>
#else
#ifdef HAVE_STRINGS_H
#include <strings.h>
#else
extern char *strchr ();
extern char *strrchr ();
#endif
#endif

#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#endif

#ifdef HAVE_FCNTL_H
#include <fcntl.h>
#else
#ifdef HAVE_SYS_FILE_H
#include <sys/file.h>
#endif
#endif

#ifdef NEED_DECLARATION_STRSTR
extern char *strstr ();
#endif

#ifdef HAVE_SBRK
#ifdef NEED_DECLARATION_SBRK
extern char *sbrk ();
#endif
#endif

#ifdef NEED_DECLARATION_GETENV
extern char *getenv ();
#endif

#ifdef NEED_DECLARATION_ENVIRON
extern char **environ;
#endif

#ifndef O_RDONLY
#define O_RDONLY 0
#endif

#ifndef O_RDWR
#define O_RDWR 2
#endif

#ifndef SEEK_SET
#define SEEK_SET 0
#endif
#ifndef SEEK_CUR
#define SEEK_CUR 1
#endif
#ifndef SEEK_END
#define SEEK_END 2
#endif

#if defined(__GNUC__) && !defined(C_ALLOCA)
# undef alloca
# define alloca __builtin_alloca
#else
# if defined(HAVE_ALLOCA_H) && !defined(C_ALLOCA)
#  include <alloca.h>
# else
#  ifndef alloca /* predefined by HP cc +Olibcalls */
#   if !defined (__STDC__) && !defined (__hpux)
char *alloca ();
#   else
void *alloca ();
#   endif /* __STDC__, __hpux */
#  endif /* alloca */
# endif /* HAVE_ALLOCA_H */
#endif

#ifdef HAVE_LOCALE_H
# include <locale.h>
#endif

#ifdef ENABLE_NLS
# include <libintl.h>
# define _(String) gettext (String)
# ifdef gettext_noop
#  define N_(String) gettext_noop (String)
# else
#  define N_(String) (String)
# endif
#else
# define gettext(Msgid) (Msgid)
# define dgettext(Domainname, Msgid) (Msgid)
# define dcgettext(Domainname, Msgid, Category) (Msgid)
# define textdomain(Domainname) while (0) /* nothing */
# define bindtextdomain(Domainname, Dirname) while (0) /* nothing */
# define _(String) (String)
# define N_(String) (String)
#endif

/* bucomm.c */
void bfd_nonfatal (const char *);

void bfd_fatal (const char *) ATTRIBUTE_NORETURN;

void report (const char *, va_list);

void fatal (const char *, ...) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;

void non_fatal (const char *, ...) ATTRIBUTE_PRINTF_1;

void set_default_bfd_target (void);

void list_matching_formats (char **);

void list_supported_targets (const char *, FILE *);

void list_supported_architectures (const char *, FILE *);

int display_info (void);

void print_arelt_descr (FILE *, bfd *, bfd_boolean);

char *make_tempname (char *, int);

bfd_vma parse_vma (const char *, const char *);

off_t get_file_size (const char *);

extern char *program_name;

/* filemode.c */
void mode_string (unsigned long, char *);

/* version.c */
extern void print_version (const char *);

/* rename.c */
extern void set_times (const char *, const struct stat *);

extern int smart_rename (const char *, const char *, int);

/* libiberty.  */
void *xmalloc (size_t);

void *xrealloc (void *, size_t);

#endif /* _BUCOMM_H */
@


1.9
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@d151 1
a151 2
void bfd_nonfatal
  PARAMS ((const char *));
d153 1
a153 2
void bfd_fatal
  PARAMS ((const char *)) ATTRIBUTE_NORETURN;
d155 1
a155 2
void report
  PARAMS ((const char *, va_list));
d157 1
a157 2
void fatal
  PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;
d159 1
a159 2
void non_fatal
  PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1;
d161 1
a161 2
void set_default_bfd_target
  PARAMS ((void));
d163 1
a163 2
void list_matching_formats
  PARAMS ((char **));
d165 1
a165 2
void list_supported_targets
  PARAMS ((const char *, FILE *));
d167 1
a167 2
void list_supported_architectures
  PARAMS ((const char *, FILE *));
d169 1
a169 5
int display_info
  PARAMS ((void));
  
void print_arelt_descr
  PARAMS ((FILE *, bfd *, bfd_boolean));
d171 1
a171 2
char *make_tempname
  PARAMS ((char *, int));
d173 5
a177 2
bfd_vma parse_vma
  PARAMS ((const char *, const char *));
d182 1
a182 2
void mode_string
  PARAMS ((unsigned long, char *));
d185 1
a185 2
extern void print_version
  PARAMS ((const char *));
d188 1
a188 2
extern void set_times
  PARAMS ((const char *, const struct stat *));
d190 1
a190 2
extern int smart_rename
  PARAMS ((const char *, const char *, int));
d193 1
a193 2
PTR xmalloc
  PARAMS ((size_t));
d195 1
a195 2
PTR xrealloc
  PARAMS ((PTR, size_t));
@


1.8
log
@resolve conflicts.
@
text
@d2 2
a3 2
   Copyright 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000
   Free Software Foundation, Inc.
d5 1
a5 1
This file is part of GNU Binutils.
d7 13
a19 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d151 2
a152 1
void bfd_nonfatal PARAMS ((const char *));
d154 2
a155 1
void bfd_fatal PARAMS ((const char *)) ATTRIBUTE_NORETURN;
d157 2
a158 1
void report PARAMS ((const char *, va_list));
d160 2
a161 1
void fatal PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;
d163 2
a164 1
void non_fatal PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1;
d166 2
a167 1
void set_default_bfd_target PARAMS ((void));
d169 2
a170 1
void list_matching_formats PARAMS ((char **p));
d172 2
a173 1
void list_supported_targets PARAMS ((const char *, FILE *));
d175 2
a176 1
void print_arelt_descr PARAMS ((FILE *file, bfd *abfd, boolean verbose));
d178 5
a182 1
char *make_tempname PARAMS ((char *, int));
d184 5
a188 1
bfd_vma parse_vma PARAMS ((const char *, const char *));
d193 2
a194 1
void mode_string PARAMS ((unsigned long mode, char *buf));
d197 2
a198 1
extern void print_version PARAMS ((const char *));
d201 2
a202 1
extern void set_times PARAMS ((const char *, const struct stat *));
d204 2
a205 1
extern int smart_rename PARAMS ((const char *, const char *, int));
d207 3
a209 2
/* libiberty */
PTR xmalloc PARAMS ((size_t));
d211 2
a212 1
PTR xrealloc PARAMS ((PTR, size_t));
@


1.7
log
@Change make_tempname() interface to create file or directory when needed.
Use the new interface to call safe mkstemp or mkdtemp when available.
@
text
@d2 1
a2 1
   Copyright (C) 1991, 92, 93, 94, 95, 96, 97, 98, 99, 2000
d141 5
a145 6
/* Stubs that do something close enough.  */
# define textdomain(String) (String)
# define gettext(String) (String)
# define dgettext(Domain,Message) (Message)
# define dcgettext(Domain,Message,Type) (Message)
# define bindtextdomain(Domain,Directory) (Domain)
@


1.6
log
@Help stupid cvs fixing basic conflicts.
@
text
@d170 1
a170 1
char *make_tempname PARAMS ((char *));
@


1.5
log
@Kill remaining instances of mktemp, direct and indirect.
@
text
@d2 2
a3 1
   Copyright (C) 1992, 93, 94, 95, 1996 Free Software Foundation, Inc.
d29 7
d85 8
d111 40
d152 3
a154 1
void bfd_nonfatal PARAMS ((CONST char *));
d156 1
a156 1
void bfd_fatal PARAMS ((CONST char *));
d158 5
a162 1
void fatal PARAMS ((CONST char *, ...));
a170 1
char *make_tempdir PARAMS ((char *));
d181 5
@


1.4
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d109 1
@


1.3
log
@Merge the Cygnus 960904 sources
@
text
@d117 3
@


1.2
log
@Bring Cygnus versions into the trunk, keeping our local patches
@
text
@a51 1
extern char *strstr ();
d67 10
d83 10
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
   Copyright (C) 1992, 93, 94 Free Software Foundation, Inc.
d101 1
a101 1
PTR xrealloc PARAMS ((char *, size_t));
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@(Correct) Import of Cygnus binutils snapshot taken 960607
@
text
@d2 1
a2 1
   Copyright (C) 1992, 93, 94, 95, 1996 Free Software Foundation, Inc.
d101 1
a101 1
PTR xrealloc PARAMS ((PTR, size_t));
@


1.1.1.3
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@d52 1
a67 10
#ifdef NEED_DECLARATION_STRSTR
extern char *strstr ();
#endif

#ifdef HAVE_SBRK
#ifdef NEED_DECLARATION_SBRK
extern char *sbrk ();
#endif
#endif

a73 10
#endif

#ifndef SEEK_SET
#define SEEK_SET 0
#endif
#ifndef SEEK_CUR
#define SEEK_CUR 1
#endif
#ifndef SEEK_END
#define SEEK_END 2
@


1.1.1.4
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a116 3
/* version.c */
extern void print_version PARAMS ((const char *));

@


1.1.1.5
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@d2 1
a2 1
   Copyright (C) 1992, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.
a76 4
#ifdef NEED_DECLARATION_GETENV
extern char *getenv ();
#endif

a94 17
#ifdef __GNUC__
# undef alloca
# define alloca __builtin_alloca
#else
# if HAVE_ALLOCA_H
#  include <alloca.h>
# else
#  ifndef alloca /* predefined by HP cc +Olibcalls */
#   if !defined (__STDC__) && !defined (__hpux)
char *alloca ();
#   else
void *alloca ();
#   endif /* __STDC__, __hpux */
#  endif /* alloca */
# endif /* HAVE_ALLOCA_H */
#endif

a100 2

void set_default_bfd_target PARAMS ((void));
@


1.1.1.6
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d2 1
a2 2
   Copyright (C) 1991, 92, 93, 94, 95, 96, 97, 98, 99, 2000
   Free Software Foundation, Inc.
a27 7
#include "bin-bugs.h"

#ifdef ANSI_PROTOTYPES
#include <stdarg.h>
#else
#include <varargs.h>
#endif
a80 4
#ifdef NEED_DECLARATION_ENVIRON
extern char **environ;
#endif

d99 1
a99 1
#if defined(__GNUC__) && !defined(C_ALLOCA)
d103 1
a103 1
# if defined(HAVE_ALLOCA_H) && !defined(C_ALLOCA)
a115 23
#ifdef HAVE_LOCALE_H
# include <locale.h>
#endif

#ifdef ENABLE_NLS
# include <libintl.h>
# define _(String) gettext (String)
# ifdef gettext_noop
#  define N_(String) gettext_noop (String)
# else
#  define N_(String) (String)
# endif
#else
/* Stubs that do something close enough.  */
# define textdomain(String) (String)
# define gettext(String) (String)
# define dgettext(Domain,Message) (Message)
# define dcgettext(Domain,Message,Type) (Message)
# define bindtextdomain(Domain,Directory) (Domain)
# define _(String) (String)
# define N_(String) (String)
#endif

d117 1
a117 3
void bfd_nonfatal PARAMS ((const char *));

void bfd_fatal PARAMS ((const char *)) ATTRIBUTE_NORETURN;
d119 1
a119 1
void report PARAMS ((const char *, va_list));
d121 1
a121 3
void fatal PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;

void non_fatal PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1;
a141 5

/* rename.c */
extern void set_times PARAMS ((const char *, const struct stat *));

extern int smart_rename PARAMS ((const char *, const char *, int));
@


1.1.1.7
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d2 1
a2 1
   Copyright 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000
d141 6
a146 5
# define gettext(Msgid) (Msgid)
# define dgettext(Domainname, Msgid) (Msgid)
# define dcgettext(Domainname, Msgid, Category) (Msgid)
# define textdomain(Domainname) while (0) /* nothing */
# define bindtextdomain(Domainname, Dirname) while (0) /* nothing */
@


1.1.1.8
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@d2 2
a3 2
   Copyright 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
   2002, 2003 Free Software Foundation, Inc.
d5 1
a5 1
   This file is part of GNU Binutils.
d7 13
a19 13
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d151 1
a151 2
void bfd_nonfatal
  PARAMS ((const char *));
d153 1
a153 2
void bfd_fatal
  PARAMS ((const char *)) ATTRIBUTE_NORETURN;
d155 1
a155 2
void report
  PARAMS ((const char *, va_list));
d157 1
a157 2
void fatal
  PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;
d159 1
a159 2
void non_fatal
  PARAMS ((const char *, ...)) ATTRIBUTE_PRINTF_1;
d161 1
a161 2
void set_default_bfd_target
  PARAMS ((void));
d163 1
a163 2
void list_matching_formats
  PARAMS ((char **));
d165 1
a165 2
void list_supported_targets
  PARAMS ((const char *, FILE *));
d167 1
a167 2
void list_supported_architectures
  PARAMS ((const char *, FILE *));
d169 1
a169 5
int display_info
  PARAMS ((void));
  
void print_arelt_descr
  PARAMS ((FILE *, bfd *, bfd_boolean));
d171 1
a171 5
char *make_tempname
  PARAMS ((char *));

bfd_vma parse_vma
  PARAMS ((const char *, const char *));
d176 1
a176 2
void mode_string
  PARAMS ((unsigned long, char *));
d179 1
a179 2
extern void print_version
  PARAMS ((const char *));
d182 1
a182 2
extern void set_times
  PARAMS ((const char *, const struct stat *));
d184 1
a184 2
extern int smart_rename
  PARAMS ((const char *, const char *, int));
d186 2
a187 3
/* libiberty.  */
PTR xmalloc
  PARAMS ((size_t));
d189 1
a189 2
PTR xrealloc
  PARAMS ((PTR, size_t));
@


1.1.1.9
log
@Binutils 2.15, with testsuites removed, and without gdb and libiberty.
@
text
@d151 2
a152 1
void bfd_nonfatal (const char *);
d154 2
a155 1
void bfd_fatal (const char *) ATTRIBUTE_NORETURN;
d157 2
a158 1
void report (const char *, va_list);
d160 2
a161 1
void fatal (const char *, ...) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;
d163 2
a164 1
void non_fatal (const char *, ...) ATTRIBUTE_PRINTF_1;
d166 2
a167 1
void set_default_bfd_target (void);
d169 2
a170 1
void list_matching_formats (char **);
d172 2
a173 1
void list_supported_targets (const char *, FILE *);
d175 2
a176 1
void list_supported_architectures (const char *, FILE *);
d178 5
a182 1
int display_info (void);
d184 2
a185 1
void print_arelt_descr (FILE *, bfd *, bfd_boolean);
d187 2
a188 5
char *make_tempname (char *);

bfd_vma parse_vma (const char *, const char *);

off_t get_file_size (const char *);
d193 2
a194 1
void mode_string (unsigned long, char *);
d197 2
a198 1
extern void print_version (const char *);
d201 2
a202 1
extern void set_times (const char *, const struct stat *);
d204 2
a205 1
extern int smart_rename (const char *, const char *, int);
d208 2
a209 1
void *xmalloc (size_t);
d211 2
a212 1
void *xrealloc (void *, size_t);
@


