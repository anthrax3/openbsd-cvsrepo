head	1.6;
access;
symbols
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	binutils-2_11_2:1.1.1.6
	OPENBSD_3_1:1.4.0.8
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.6
	OPENBSD_3_0_BASE:1.4
	BINUTILS-2_10_1:1.1.1.5
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	BINUTILS-2_10:1.1.1.5
	OPENBSD_2_7:1.3.0.18
	OPENBSD_2_7_BASE:1.3
	new-binutils:1.3.0.16
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	BINUTILS-2_8_1:1.1.1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	CYGNUS-961112:1.1.1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	CYGNUS-960904:1.1.1.3
	CYGNUS-960609:1.1.1.2
	CYGNUS-960607:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2004.05.17.21.54.26;	author drahn;	state dead;
branches;
next	1.5;

1.5
date	2002.05.13.17.07.33;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.12.19.11.34;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	96.09.04.19.03.37;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.10.49.28;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.04.02;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.04.02;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.07.11.04.02;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.09.04.17.50.11;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	97.05.29.09.16.37;	author niklas;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2000.09.12.14.45.12;	author espie;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2002.05.13.13.17.28;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@#   Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
#   Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# Please email any bugs, comments, and/or additions to this file to:
# bug-dejagnu@@prep.ai.mit.edu

# Written by Ian Lance Taylor <ian@@cygnus.com>

if ![is_remote host] {
    if {[which $OBJCOPY] == 0} then {
        perror "$OBJCOPY does not exist"
        return
    }
}

send_user "Version [binutil_version $OBJCOPY]"

if {![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.o]} then {
    perror "unresolved 1"
    unresolved "objcopy (simple copy)"
    return
}

if ![is_remote host] {
    set tempfile tmpdir/bintest.o;
    set copyfile tmpdir/copy;
} else {
    set tempfile [remote_download host tmpdir/bintest.o]
    set copyfile copy
}

# Test that objcopy does not modify a file when copying it.

set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS $tempfile ${copyfile}.o"]

if ![string match "" $got] then {
    fail "objcopy (simple copy)"
} else {
    send_log "cmp $tempfile ${copyfile}.o\n"
    verbose "cmp $tempfile ${copyfile}.o"
    if [is_remote host] {
	set src1 tmpdir/bintest.o
	set src2 tmpdir/copy.o
	remote_upload host $tempfile $src1;
	remote_upload host ${copyfile}.o $src2;
    } else {
	set src1 ${tempfile}
	set src2 ${copyfile}.o
    }
    set status [remote_exec build cmp "${src1} ${src2}"];
    set exec_output [lindex $status 1];
    set exec_output [prune_warnings $exec_output]

    # On some systems the result of objcopy will not be identical.
    # Usually this is just because gas isn't using bfd to write the files
    # in the first place, and may order things a little differently.
    # Those systems should use setup_xfail here.

    setup_xfail "sh-*-coff" "sh-*-hms" 
    setup_xfail "m68*-*-hpux*" "m68*-*-sunos*" "m68*-*-coff" "m68*-*-vxworks*"
    setup_xfail "m68*-ericsson-ose" "m68k*-motorola-sysv*"
    setup_xfail "i*86-*-aout*"
    setup_xfail "i*86-*-sysv3" "i*86-*-isc*" "i*86-*-sco*" "i*86-*-coff"
    setup_xfail "i*86-*-aix*" "i*86-*-go32*" "i*86-*-msdos*"
    setup_xfail "a29k-*-udi" "a29k-*-coff" "a29k-*-vxworks*"
    setup_xfail "i960-*-coff"
    setup_xfail "h8300-*-hms" "h8300-*-coff"
    setup_xfail "h8500-*-hms" "h8500-*-coff"
    setup_xfail "hppa*-*-*"
    clear_xfail "hppa*-*-*elf*" "hppa*-*-linux*"
    setup_xfail "m88*-*-coff" "m88*-motorola-sysv*"
    setup_xfail "z8*-*-coff"

    if [string match "" $exec_output] then {
	pass "objcopy (simple copy)"
    } else {
	send_log "$exec_output\n"
	verbose "$exec_output" 1

	# On OSF/1, this succeeds with gas and fails with /bin/as.
	setup_xfail "alpha*-*-osf*"

	# This fails for COFF i960-vxworks targets.
	setup_xfail "i960-*-vxworks*"

	fail "objcopy (simple copy)"
    }
}

# Test generating S records.

# We make the srec filename 8.3 compatible. Note that the header string
# matched against depends on the name of the file. Ugh.

if [is_remote host] {
    set srecfile copy.sre
    set header_string S00B0000636F70792E737265C1
} else {
    set srecfile ${copyfile}.srec
    set header_string S0130000746D706469722F636F70792E7372656397
}

set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${srecfile}"]

if ![string match "" $got] then {
    fail "objcopy -O srec"
} else {
    if [is_remote host] {
	remote_upload host ${srecfile} tmpdir/copy.srec;
	set srecfile tmpdir/copy.srec;
    }
    set file [open ${srecfile} r]

    # The first S record is fixed by the file name we are using.
    gets $file line
    send_log "$line\n"
    verbose $line
    if ![regexp "$header_string.*" $line] {
	send_log "bad header\n"
	fail "objcopy -O srec"
    } else {
	while {[gets $file line] != -1 \
	       && [regexp "^S\[123\]\[0-9a-fA-F\]+\[\r\n\]*$" $line]} {
	    send_log "$line\n"
	    verbose $line
	    set line "**EOF**"
	}
	send_log "$line\n"
	verbose $line
	if ![regexp "^S\[789\]\[0-9a-fA-F\]+\[\r\n\]*$" $line] then {
	    send_log "bad trailer\n"
	    fail "objcopy -O srec"
	} else {
	    if {[gets $file line] != -1} then {
		send_log "garbage at end\n"
		send_log "$line\n"
		verbose $line
		fail "objcopy -O srec"
	    } else {
		set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f ${copyfile}.srec"]
		if ![regexp "file format srec" $got] then {
		    send_log "objdump failed\n"
		    fail "objcopy -O srec"
		} else {
		    pass "objcopy -O srec"
		}
	    }
	}
    }

    close $file
}

# Test setting and adjusting the start address.  We only test this
# while generating S records, because we may not be able to set the
# start address for other object file formats, and the S record case
# is the only useful one anyhow.

set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f $tempfile"]
if ![regexp "start address (\[0-9a-fA-FxX\]+)" $got all origstart] then {
    perror "objdump can not recognize bintest.o"
    set origstart ""
} else {
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec --set-start 0x7654"]
    if ![string match "" $got] then {
	fail "objcopy --set-start"
    } else {
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f ${copyfile}.srec"]
	if ![regexp "file format srec.*start address (\[0-9a-fA-FxX\]+)" $got all srecstart] then {
	    fail "objcopy --set-start"
	} else {
	    if {$srecstart != 0x7654} then {
		send_log "$srecstart != 0x7654\n"
		fail "objcopy --set-start"
	    } else {
		pass "objcopy --set-start"
	    }
	}
    }

    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec --adjust-start 0x123"]
    if ![string match "" $got] then {
	fail "objcopy --adjust-start"
    } else {
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f ${copyfile}.srec"]
	if ![regexp "file format srec.*start address (\[0-9a-fA-FxX\]+)" $got all srecstart] then {
	    fail "objcopy --adjust-start"
	} else {
	    if {$srecstart != $origstart + 0x123} then {
		send_log "$srecstart != $origstart + 0x123\n"
		fail "objcopy --adjust-start"
	    } else {
		pass "objcopy --adjust-start"
	    }
	}
    }
}

# Test adjusting the overall VMA, and adjusting the VMA of a
# particular section.  We again only test this when generating S
# records.

set low ""
set lowname ""

set headers [binutils_run $OBJDUMP "$OBJDUMPFLAGS -h $tempfile"]

set headers_regexp "\[ 	0-9\]+(\[^ 	\]+)\[ 	\]*(\[0-9a-fA-F\]+)\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+(\[0-9a-fA-F\]+)\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+2\[*\]\[*\]\[0-9\]+(.*)"

set got $headers
while {[regexp $headers_regexp $got all name size vma rest]} {
    set vma 0x$vma
    set size 0x$size
    if {$size != 0} {
	if {$low == "" || $vma < $low} {
            set low $vma
	    set lowname $name
	}
    }
    set got $rest
}

if {$low == "" || $origstart == ""} then {
    perror "objdump can not recognize bintest.o"
} else {
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec --adjust-vma 0x123"]
    if ![string match "" $got] then {
        fail "objcopy --adjust-vma"
    } else {
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -fh ${copyfile}.srec"]
	set want "file format srec.*start address\[ 	\]*(\[0-9a-fA-FxX\]+).*sec1\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+(\[0-9a-fA-F\]+)"
	if ![regexp $want $got all start vma] then {
	    fail "objcopy --adjust-vma"
	} else {
	    set vma 0x$vma
	    if {$vma != $low + 0x123} then {
		send_log "$vma != $low + 0x123\n"
		fail "objcopy --adjust-vma"
	    } else {
		if {$start != $origstart + 0x123} then {
		    send_log "$start != $origstart + 0x123\n"
		    fail "objcopy --adjust-vma"
		} else {
		    pass "objcopy --adjust-vma"
		}
	    }
	}
    }

    set arg ""
    set got $headers
    while {[regexp $headers_regexp $got all name size vma rest]} {
	set vma 0x$vma
	if {$vma == $low} then {
	    set arg "$arg --adjust-section-vma $name+4"
	}
	set got $rest
    }

    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec $arg"]
    if ![string match "" $got] then {
	fail "objcopy --adjust-section-vma +"
    } else {
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -h ${copyfile}.srec"]
	set want "file format srec.*sec1\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+(\[0-9a-fA-F\]+)"
	if ![regexp $want $got all vma] then {
	    fail "objcopy --adjust-section-vma +"
	} else {
	    set vma 0x$vma
	    if {$vma != $low + 4} then {
		send_log "$vma != $low + 4\n"
		fail "objcopy --adjust-section-vma +"
	    } else {
		pass "objcopy --adjust-section-vma +"
	    }
	}
    }

    regsub -all "\\+4" $arg "=[expr $low + 4]" argeq
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec $argeq"]
    if ![string match "" $got] then {
	fail "objcopy --adjust-section-vma ="
    } else {
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -h ${copyfile}.srec"]
	set want "file format srec.*sec1\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+(\[0-9a-fA-F\]+)"
	if ![regexp $want $got all vma] then {
	    fail "objcopy --adjust-section-vma ="
	} else {
	    set vma 0x$vma
	    if {$vma != $low + 4} then {
		send_log "$vma != $low + 4\n"
		fail "objcopy --adjust-section-vma ="
	    } else {
		pass "objcopy --adjust-section-vma ="
	    }
	}
    }
}

# Test stripping an object.

proc strip_test { } {
    global CC
    global STRIP
    global STRIPFLAGS
    global NM
    global NMFLAGS
    global srcdir
    global subdir

    set test "strip"

    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog.o object debug] != "" } {
	untested $test
	return
    }

    if [is_remote host] {
	set objfile [remote_download host tmpdir/testprog.o];
    } else {
	set objfile tmpdir/testprog.o
    }

    set exec_output [binutils_run $STRIP "$STRIPFLAGS $objfile"]
    if ![string match "" $exec_output] {
	fail $test
	return
    }

    set exec_output [binutils_run $NM "-a $NMFLAGS $objfile"]
    if ![string match "*: no symbols*" $exec_output] {
	fail $test
	return
    }

    pass $test
}

strip_test

# Test stripping an object file with saving a symbol

proc strip_test_with_saving_a_symbol { } {
    global CC
    global STRIP
    global STRIPFLAGS
    global NM
    global NMFLAGS
    global srcdir
    global subdir

    set test "strip with saving a symbol"

    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog.o object debug] != "" } {
	untested $test
	return
    }

    if [is_remote host] {
	set objfile [remote_download host tmpdir/testprog.o];
    } else {
	set objfile tmpdir/testprog.o
    }

    set exec_output [binutils_run $STRIP "$STRIPFLAGS -K main -K _main $objfile"]
    if ![string match "" $exec_output] {
	fail $test
	return
    }

    set exec_output [binutils_run $NM "$NMFLAGS $objfile"]
    if {![regexp {^([0-9a-fA-F]+)?[ ]+T main} $exec_output] \
         && ![regexp {^([0-9a-fA-F]+)?[ ]+T _main} $exec_output]} {
	fail $test
	return
    }

    pass $test
}

strip_test_with_saving_a_symbol

# Build a final executable.

proc copy_setup { } {
    global srcdir
    global subdir
    global gcc_gas_flag
    
    set res [build_wrapper testglue.o];
    set flags { debug };
    
    if { $res != "" } {
	lappend flags "additional_flags=[lindex $res 1]";
	set add_libs "testglue.o";
    } else {
	set add_libs "";
    }

    if { [istarget *-*-linux*] } {
	foreach i $gcc_gas_flag {
	    set flags "additional_flags=$i $flags"
	}
    }
    if { [target_compile "$srcdir/$subdir/testprog.c $add_libs" tmpdir/testprog executable $flags]  != "" } {
	return 2
    }

    set result [remote_load target tmpdir/testprog];
    set status [lindex $result 0];

    if { $status != "pass"  } {
	perror "unresolved setup, status = $status"
	return 3
    }

    return 0
}

# Test copying an executable.

proc copy_executable { prog flags test1 test2 } {

    if [is_remote host] {
	set testfile [remote_download host tmpdir/testprog];
	set testcopy copyprog
    } else {
	set testfile tmpdir/testprog
	set testcopy tmpdir/copyprog
    }
    remote_file host delete $testcopy;

    set exec_output [binutils_run $prog "$flags $testfile $testcopy"]

    if ![string match "" $exec_output] {
	fail $test1
	fail $test2
	return
    }

    if [is_remote host] {
	remote_upload host $testcopy tmpdir/copyprog
    }

    set status [remote_exec build "cmp" "tmpdir/testprog tmpdir/copyprog"]
    set exec_output [lindex $status 1];

    if [string match "" $exec_output] then {
	pass $test1
    } else {
	send_log "$exec_output\n"
	verbose "$exec_output"

	# This will fail for many reasons.  For example, it will most
	# likely fail if a non-GNU linker is used.  Therefore, we do
	# not insist that it pass.  If you are using an assembler and
	# linker based on the same BFD as objcopy, it is worth
	# investigating to see why this failure occurs.  If we are
	# cross compiling, we assume that a GNU linker is being used,
	# and expect it to succeed.
	if {[isnative]} then {
	    setup_xfail "*-*-*"
	}

	# This also fails for mips*-*-elf targets.  See elf32-mips.c
	# mips_elf_sym_is_global.
	setup_xfail "mips*-*-elf"

	setup_xfail "*arm*-*-coff"
	setup_xfail "arm*-*-pe"
	setup_xfail "thumb*-*-coff"
	setup_xfail "thumb*-*-pe"
    
	fail $test1
    }

    set output [remote_load target tmpdir/copyprog]
    set status [lindex $output 0];
    if { $status != "pass" } {
	fail $test2
    } else {
	pass $test2
    }
}

# Test stripping an executable

proc strip_executable { prog flags test } {
    global NM
    global NMFLAGS

    remote_download build tmpdir/copyprog tmpdir/striprog
    if [is_remote host] {
	set copyfile [remote_download host tmpdir/striprog];
    } else {
	set copyfile tmpdir/striprog
    }

    set exec_output [binutils_run $prog "$flags ${copyfile}"]
    if ![string match "" $exec_output] {
	fail $test
	return
    }

    if [is_remote host] {
	remote_upload host ${copyfile} tmpdir/striprog;
    }

    set result [remote_load target tmpdir/striprog]
    set status [lindex $result 0];
    if { $status != "pass" } {
	fail $test
        return
    }

    set exec_output [binutils_run $NM "$NMFLAGS ${copyfile}"]
    if ![string match "*: no symbols*" $exec_output] {
	fail $test
	return
    }
    pass $test
}

# Test stripping an executable with saving a symbol

proc strip_executable_with_saving_a_symbol { prog flags test } {
    global NM
    global NMFLAGS

    remote_download build tmpdir/copyprog tmpdir/striprog
    if [is_remote host] {
	set copyfile [remote_download host tmpdir/striprog];
    } else {
	set copyfile tmpdir/striprog
    }

    set exec_output [binutils_run $prog "$flags ${copyfile}"]
    if ![string match "" $exec_output] {
	fail $test
	return
    }

    if [is_remote host] {
	remote_upload host ${copyfile} tmpdir/striprog;
    }

    set result [remote_load target tmpdir/striprog]
    set status [lindex $result 0];
    if { $status != "pass" } {
	fail $test
        return
    }

    set exec_output [binutils_run $NM "$NMFLAGS ${copyfile}"]
    if {![regexp {^[0-9a-fA-F]+ T main} $exec_output] \
         && ![regexp {^[0-9a-fA-F]+ T _main} $exec_output]} {
	fail $test
	return
    }
    pass $test
}

set test1 "simple objcopy of executable"
set test2 "run objcopy of executable"
set test3 "run stripped executable"
set test4 "run stripped executable with saving a symbol"

switch [copy_setup] {
    "1" {
	# do nothing
    }
    "2" {
	untested $test1
	untested $test2
	untested $test3
	untested $test4
    }
    "3" {
	unresolved $test1
	unresolved $test2
	unresolved $test3
	unresolved $test4
    }
    "0" {
	copy_executable "$OBJCOPY" "$OBJCOPYFLAGS" "$test1" "$test2"
	strip_executable "$STRIP" "$STRIPFLAGS" "$test3"
	strip_executable_with_saving_a_symbol "$STRIP" "-K main -K _main $STRIPFLAGS" "$test4"
    }
}
@


1.5
log
@resolve conflicts.
@
text
@@


1.4
log
@Help stupid cvs fixing basic conflicts.
@
text
@d1 2
a2 1
#   Copyright (C) 1994, 95, 96, 97, 1998 Free Software Foundation, Inc.
d76 1
a76 1
    setup_xfail "i*86-*-linuxaout*" "i*86-*-aout*"
d84 1
a84 1
    clear_xfail "hppa*-*-*elf*"
d402 1
d414 5
d483 1
a483 1
	setup_xfail "arm*-*-coff"
@


1.3
log
@Merge the Cygnus 960904 sources
@
text
@d1 1
a1 1
#   Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.
d22 5
a26 3
if {[which $OBJCOPY] == 0} then {
    perror "$OBJCOPY does not exist"
    return
d31 2
a32 1
if {![binutils_assemble $AS $srcdir$subdir/bintest.s tmpdir/bintest.o]} then {
d37 8
d47 1
a47 1
set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS tmpdir/bintest.o tmpdir/copy.o"]
d52 14
a65 4
    send_log "cmp tmpdir/bintest.o tmpdir/copy.o\n"
    verbose "cmp tmpdir/bintest.o tmpdir/copy.o"
    catch "exec cmp tmpdir/bintest.o tmpdir/copy.o" exec_output
    set exec_output [prune_system_crud $host_triplet $exec_output]
a72 1
    setup_xfail "arm-*-pe" 
d77 1
a77 1
    setup_xfail "i*86-*-aix*" "i*86-*-go32*"
d105 12
a116 1
set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec tmpdir/bintest.o tmpdir/copy.srec"]
d121 5
a125 1
    set file [open tmpdir/copy.srec r]
d131 1
a131 1
    if ![string match "S0130000746D706469722F636F70792E7372656397*" $line] {
d153 1
a153 1
		set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f tmpdir/copy.srec"]
d172 1
a172 1
set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f tmpdir/bintest.o"]
d177 1
a177 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec tmpdir/bintest.o tmpdir/copy.srec --set-start 0x7654"]
d181 1
a181 1
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f tmpdir/copy.srec"]
d194 1
a194 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec tmpdir/bintest.o tmpdir/copy.srec --adjust-start 0x123"]
d198 1
a198 1
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f tmpdir/copy.srec"]
d219 1
a219 1
set headers [binutils_run $OBJDUMP "$OBJDUMPFLAGS -h tmpdir/bintest.o"]
d239 1
a239 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec tmpdir/bintest.o tmpdir/copy.srec --adjust-vma 0x123"]
d243 1
a243 1
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -fh tmpdir/copy.srec"]
d273 1
a273 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec tmpdir/bintest.o tmpdir/copy.srec $arg"]
d277 1
a277 1
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -h tmpdir/copy.srec"]
d293 1
a293 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec tmpdir/bintest.o tmpdir/copy.srec $argeq"]
d297 1
a297 1
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -h tmpdir/copy.srec"]
d326 1
a326 1
    if { [which $CC] == 0 } {
d331 38
a368 2
    if ![binutils_compile $CC "-g -c" $srcdir/$subdir/testprog.c tmpdir/testprog.o] {
	unresolved $test
d372 7
a378 1
    set exec_output [binutils_run $STRIP "$STRIPFLAGS tmpdir/testprog.o"]
d384 3
a386 2
    set exec_output [binutils_run $NM "-a $NMFLAGS tmpdir/testprog.o"]
    if ![string match "No symbols in *" $exec_output] {
d394 1
a394 1
strip_test
a398 1
    global CC
d401 9
a409 3

    if ![isnative] {
	return 1
d412 1
a412 1
    if { [which $CC] == 0 } {
d416 2
a417 3
    if ![binutils_compile $CC "-g" $srcdir/$subdir/testprog.c tmpdir/testprog] {
	return 3
    }
d419 2
a420 2
    set exec_output [binutils_run tmpdir/testprog ""]
    if ![string match "ok" $exec_output] {
d431 11
a441 1
    set exec_output [binutils_run $prog "$flags tmpdir/testprog tmpdir/copyprog"]
d448 6
a453 1
    set exec_output [binutils_run "cmp" "tmpdir/testprog tmpdir/copyprog"]
d460 1
d462 1
a462 1
	# likely fail if the system linker is used.  Therefore, we do
d465 16
a480 2
	# investigating to see why this failure occurs.
	setup_xfail "*-*-*"
d484 3
a486 2
    set exec_output [binutils_run tmpdir/copyprog ""]
    if ![string match "ok" $exec_output] {
d496 9
d506 1
a506 1
    set exec_output [binutils_run $prog "$flags tmpdir/copyprog"]
d512 7
a518 2
    set exec_output [binutils_run tmpdir/copyprog ""]
    if ![string match "ok" $exec_output] {
d520 20
d541 1
a541 1
	pass $test
d543 25
d573 1
d583 1
d589 1
d594 1
@


1.2
log
@Bring Cygnus versions into the trunk, keeping our local patches
@
text
@d59 1
a59 1
    setup_xfail "i960-*-vxworks*" "i960-*-coff"
d73 6
d96 1
a96 1
    if ![string match $line "S0130000746D706469722F636F70792E7372656397\r"] {
d101 1
a101 1
	       && [regexp "^S\[123\]\[0-9a-fA-F\]+\r$" $line]} {
d108 1
a108 1
	if ![regexp "^S\[789\]\[0-9a-fA-F\]+\r$" $line] then {
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#   Copyright (C) 1994 Free Software Foundation, Inc.
d91 2
a92 1
	fail "objcopy -O srec (bad header)"
d103 2
a104 1
	    fail "objcopy -O srec (bad trailer)"
d107 1
d110 1
a110 1
		fail "objcopy -O srec (garbage at end)"
d114 2
a115 1
		    fail "objcopy -O srec (objdump failed)"
d145 2
a146 1
		fail "objcopy --set-start ($srecstart != 0x7654)"
d162 2
a163 1
		fail "objcopy --adjust-start ($srecstart != $origstart + 0x123)"
d172 1
a172 1
# particular section.  We again only test this when # generating S
d180 1
a180 1
set headers_regexp "SECTION\[ 	0-9\]+\\\[(\[^\]\]*)\\\]\[^\n\r\]*size\[ 	\]*(\[0-9a-fA-F\]+)\[ 	\]*vma\[ 	\]*(\[0-9a-fA-F\]+)(.*)"
d185 6
a190 3
    if {$low == "" || $vma < $low} then {
        set low $vma
	set lowname $name
d203 1
a203 1
	set want "file format srec.*start address\[ 	\]*(\[0-9a-fA-FxX\]+).*vma\[ 	\]*(\[0-9a-fA-F\]+)"
d209 2
a210 1
		fail "objcopy --adjust-vma ($vma != $low + 0x123)"
d213 2
a214 1
		    fail "objcopy --adjust-vma ($start != $origstart + 0x123)"
d237 1
a237 1
	set want "file format srec.*SECTION\[ 	\]*0\[^\n\r\]*vma\[ 	\]*(\[0-9a-fA-F\]+)"
d243 2
a244 1
		fail "objcopy --adjust-section-vma + ($vma != $low + 4)"
d257 1
a257 1
	set want "file format srec.*SECTION\[ 	\]*0\[^\n\r\]*vma\[ 	\]*(\[0-9a-fA-F\]+)"
d263 2
a264 1
		fail "objcopy --adjust-section-vma = ($vma != $low + 4)"
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@(Correct) Import of Cygnus binutils snapshot taken 960607
@
text
@d1 1
a1 1
#   Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.
d91 1
a91 2
	send_log "bad header\n"
	fail "objcopy -O srec"
d102 1
a102 2
	    send_log "bad trailer\n"
	    fail "objcopy -O srec"
a104 1
		send_log "garbage at end\n"
d107 1
a107 1
		fail "objcopy -O srec"
d111 1
a111 2
		    send_log "objdump failed\n"
		    fail "objcopy -O srec"
d141 1
a141 2
		send_log "$srecstart != 0x7654\n"
		fail "objcopy --set-start"
d157 1
a157 2
		send_log "$srecstart != $origstart + 0x123\n"
		fail "objcopy --adjust-start"
d166 1
a166 1
# particular section.  We again only test this when generating S
d174 1
a174 1
set headers_regexp "\[ 	0-9\]+(\[^ 	\]+)\[ 	\]*(\[0-9a-fA-F\]+)\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+(\[0-9a-fA-F\]+)\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+2\[*\]\[*\]\[0-9\]+(.*)"
d179 3
a181 6
    set size 0x$size
    if {$size != 0} {
	if {$low == "" || $vma < $low} {
            set low $vma
	    set lowname $name
	}
d194 1
a194 1
	set want "file format srec.*start address\[ 	\]*(\[0-9a-fA-FxX\]+).*sec1\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+(\[0-9a-fA-F\]+)"
d200 1
a200 2
		send_log "$vma != $low + 0x123\n"
		fail "objcopy --adjust-vma"
d203 1
a203 2
		    send_log "$start != $origstart + 0x123\n"
		    fail "objcopy --adjust-vma"
d226 1
a226 1
	set want "file format srec.*sec1\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+(\[0-9a-fA-F\]+)"
d232 1
a232 2
		send_log "$vma != $low + 4\n"
		fail "objcopy --adjust-section-vma +"
d245 1
a245 1
	set want "file format srec.*sec1\[ 	\]+\[0-9a-fA-F\]+\[ 	\]+(\[0-9a-fA-F\]+)"
d251 1
a251 2
		send_log "$vma != $low + 4\n"
		fail "objcopy --adjust-section-vma ="
@


1.1.1.3
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@d59 1
a59 1
    setup_xfail "i960-*-coff"
a72 6
	# On OSF/1, this succeeds with gas and fails with /bin/as.
	setup_xfail "alpha*-*-osf*"

	# This fails for COFF i960-vxworks targets.
	setup_xfail "i960-*-vxworks*"

d90 1
a90 1
    if ![string match "S0130000746D706469722F636F70792E7372656397*" $line] {
d95 1
a95 1
	       && [regexp "^S\[123\]\[0-9a-fA-F\]+\[\r\n\]*$" $line]} {
d102 1
a102 1
	if ![regexp "^S\[789\]\[0-9a-fA-F\]+\[\r\n\]*$" $line] then {
@


1.1.1.4
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@d1 1
a1 1
#   Copyright (C) 1994, 1995, 1996, 1997 Free Software Foundation, Inc.
d29 1
a29 1
if {![binutils_assemble $AS $srcdir/$subdir/bintest.s tmpdir/bintest.o]} then {
d44 1
a44 1
    set exec_output [prune_warnings $exec_output]
@


1.1.1.5
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d1 1
a1 1
#   Copyright (C) 1994, 95, 96, 97, 1998 Free Software Foundation, Inc.
d22 3
a24 5
if ![is_remote host] {
    if {[which $OBJCOPY] == 0} then {
        perror "$OBJCOPY does not exist"
        return
    }
d29 1
a29 2
if {![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.o]} then {
    perror "unresolved 1"
a33 8
if ![is_remote host] {
    set tempfile tmpdir/bintest.o;
    set copyfile tmpdir/copy;
} else {
    set tempfile [remote_download host tmpdir/bintest.o]
    set copyfile copy
}

d36 1
a36 1
set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS $tempfile ${copyfile}.o"]
d41 3
a43 13
    send_log "cmp $tempfile ${copyfile}.o\n"
    verbose "cmp $tempfile ${copyfile}.o"
    if [is_remote host] {
	set src1 tmpdir/bintest.o
	set src2 tmpdir/copy.o
	remote_upload host $tempfile $src1;
	remote_upload host ${copyfile}.o $src2;
    } else {
	set src1 ${tempfile}
	set src2 ${copyfile}.o
    }
    set status [remote_exec build cmp "${src1} ${src2}"];
    set exec_output [lindex $status 1];
d52 1
d57 1
a57 1
    setup_xfail "i*86-*-aix*" "i*86-*-go32*" "i*86-*-msdos*"
d85 1
a85 12
# We make the srec filename 8.3 compatible. Note that the header string
# matched against depends on the name of the file. Ugh.

if [is_remote host] {
    set srecfile copy.sre
    set header_string S00B0000636F70792E737265C1
} else {
    set srecfile ${copyfile}.srec
    set header_string S0130000746D706469722F636F70792E7372656397
}

set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${srecfile}"]
d90 1
a90 5
    if [is_remote host] {
	remote_upload host ${srecfile} tmpdir/copy.srec;
	set srecfile tmpdir/copy.srec;
    }
    set file [open ${srecfile} r]
d96 1
a96 1
    if ![regexp "$header_string.*" $line] {
d118 1
a118 1
		set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f ${copyfile}.srec"]
d137 1
a137 1
set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f $tempfile"]
d142 1
a142 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec --set-start 0x7654"]
d146 1
a146 1
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f ${copyfile}.srec"]
d159 1
a159 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec --adjust-start 0x123"]
d163 1
a163 1
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -f ${copyfile}.srec"]
d184 1
a184 1
set headers [binutils_run $OBJDUMP "$OBJDUMPFLAGS -h $tempfile"]
d204 1
a204 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec --adjust-vma 0x123"]
d208 1
a208 1
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -fh ${copyfile}.srec"]
d238 1
a238 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec $arg"]
d242 1
a242 1
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -h ${copyfile}.srec"]
d258 1
a258 1
    set got [binutils_run $OBJCOPY "$OBJCOPYFLAGS -O srec $tempfile ${copyfile}.srec $argeq"]
d262 1
a262 1
	set got [binutils_run $OBJDUMP "$OBJDUMPFLAGS -h ${copyfile}.srec"]
d291 1
a291 1
    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog.o object debug] != "" } {
d296 3
a298 4
    if [is_remote host] {
	set objfile [remote_download host tmpdir/testprog.o];
    } else {
	set objfile tmpdir/testprog.o
d301 1
a301 1
    set exec_output [binutils_run $STRIP "$STRIPFLAGS $objfile"]
d307 2
a308 2
    set exec_output [binutils_run $NM "-a $NMFLAGS $objfile"]
    if ![string match "*: no symbols*" $exec_output] {
d318 1
a318 1
# Test stripping an object file with saving a symbol
d320 1
a320 1
proc strip_test_with_saving_a_symbol { } {
a321 4
    global STRIP
    global STRIPFLAGS
    global NM
    global NMFLAGS
d325 2
a326 11
    set test "strip with saving a symbol"

    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog.o object debug] != "" } {
	untested $test
	return
    }

    if [is_remote host] {
	set objfile [remote_download host tmpdir/testprog.o];
    } else {
	set objfile tmpdir/testprog.o
d329 2
a330 4
    set exec_output [binutils_run $STRIP "$STRIPFLAGS -K main -K _main $objfile"]
    if ![string match "" $exec_output] {
	fail $test
	return
d333 2
a334 30
    set exec_output [binutils_run $NM "$NMFLAGS $objfile"]
    if {![regexp {^([0-9a-fA-F]+)?[ ]+T main} $exec_output] \
         && ![regexp {^([0-9a-fA-F]+)?[ ]+T _main} $exec_output]} {
	fail $test
	return
    }

    pass $test
}

strip_test_with_saving_a_symbol

# Build a final executable.

proc copy_setup { } {
    global srcdir
    global subdir
    
    set res [build_wrapper testglue.o];
    set flags { debug };
    
    if { $res != "" } {
	lappend flags "additional_flags=[lindex $res 1]";
	set add_libs "testglue.o";
    } else {
	set add_libs "";
    }

    if { [target_compile "$srcdir/$subdir/testprog.c $add_libs" tmpdir/testprog executable $flags]  != "" } {
	return 2
d337 2
a338 5
    set result [remote_load target tmpdir/testprog];
    set status [lindex $result 0];

    if { $status != "pass"  } {
	perror "unresolved setup, status = $status"
d349 1
a349 11
    if [is_remote host] {
	set testfile [remote_download host tmpdir/testprog];
	set testcopy copyprog
    } else {
	set testfile tmpdir/testprog
	set testcopy tmpdir/copyprog
    }
    remote_file host delete $testcopy;

    set exec_output [binutils_run $prog "$flags $testfile $testcopy"]

d356 1
a356 6
    if [is_remote host] {
	remote_upload host $testcopy tmpdir/copyprog
    }

    set status [remote_exec build "cmp" "tmpdir/testprog tmpdir/copyprog"]
    set exec_output [lindex $status 1];
a362 1

d364 1
a364 1
	# likely fail if a non-GNU linker is used.  Therefore, we do
d367 2
a368 16
	# investigating to see why this failure occurs.  If we are
	# cross compiling, we assume that a GNU linker is being used,
	# and expect it to succeed.
	if {[isnative]} then {
	    setup_xfail "*-*-*"
	}

	# This also fails for mips*-*-elf targets.  See elf32-mips.c
	# mips_elf_sym_is_global.
	setup_xfail "mips*-*-elf"

	setup_xfail "arm*-*-coff"
	setup_xfail "arm*-*-pe"
	setup_xfail "thumb*-*-coff"
	setup_xfail "thumb*-*-pe"
    
d372 2
a373 3
    set output [remote_load target tmpdir/copyprog]
    set status [lindex $output 0];
    if { $status != "pass" } {
a382 9
    global NM
    global NMFLAGS

    remote_download build tmpdir/copyprog tmpdir/striprog
    if [is_remote host] {
	set copyfile [remote_download host tmpdir/striprog];
    } else {
	set copyfile tmpdir/striprog
    }
d384 1
a384 1
    set exec_output [binutils_run $prog "$flags ${copyfile}"]
d390 2
a391 7
    if [is_remote host] {
	remote_upload host ${copyfile} tmpdir/striprog;
    }

    set result [remote_load target tmpdir/striprog]
    set status [lindex $result 0];
    if { $status != "pass" } {
a392 20
        return
    }

    set exec_output [binutils_run $NM "$NMFLAGS ${copyfile}"]
    if ![string match "*: no symbols*" $exec_output] {
	fail $test
	return
    }
    pass $test
}

# Test stripping an executable with saving a symbol

proc strip_executable_with_saving_a_symbol { prog flags test } {
    global NM
    global NMFLAGS

    remote_download build tmpdir/copyprog tmpdir/striprog
    if [is_remote host] {
	set copyfile [remote_download host tmpdir/striprog];
d394 1
a394 1
	set copyfile tmpdir/striprog
a395 25

    set exec_output [binutils_run $prog "$flags ${copyfile}"]
    if ![string match "" $exec_output] {
	fail $test
	return
    }

    if [is_remote host] {
	remote_upload host ${copyfile} tmpdir/striprog;
    }

    set result [remote_load target tmpdir/striprog]
    set status [lindex $result 0];
    if { $status != "pass" } {
	fail $test
        return
    }

    set exec_output [binutils_run $NM "$NMFLAGS ${copyfile}"]
    if {![regexp {^[0-9a-fA-F]+ T main} $exec_output] \
         && ![regexp {^[0-9a-fA-F]+ T _main} $exec_output]} {
	fail $test
	return
    }
    pass $test
a400 1
set test4 "run stripped executable with saving a symbol"
a409 1
	untested $test4
a414 1
	unresolved $test4
a418 1
	strip_executable_with_saving_a_symbol "$STRIP" "-K main -K _main $STRIPFLAGS" "$test4"
@


1.1.1.6
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d1 1
a1 2
#   Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
#   Free Software Foundation, Inc.
d75 1
a75 1
    setup_xfail "i*86-*-aout*"
d83 1
a83 1
    clear_xfail "hppa*-*-*elf*" "hppa*-*-linux*"
a400 1
    global gcc_gas_flag
a411 5
    if { [istarget *-*-linux*] } {
	foreach i $gcc_gas_flag {
	    set flags "additional_flags=$i $flags"
	}
    }
d476 1
a476 1
	setup_xfail "*arm*-*-coff"
@


