head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.50
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.48
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.44
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.46
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.38
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.42
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.40
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.36
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.34
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.32
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.30
	OPENBSD_5_0:1.10.0.28
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.26
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.24
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.20
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.22
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.18
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.16
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.14
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.12
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.10
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.8
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.6
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.4
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	BINUTILS_2_15:1.1.1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	BINUTILS-2_14:1.1.1.8
	OPENBSD_3_5:1.8.0.8
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.6
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	binutils-2_11_2:1.1.1.7
	OPENBSD_3_1:1.6.0.4
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	BINUTILS-2_10_1:1.1.1.6
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	BINUTILS-2_10:1.1.1.5
	OPENBSD_2_7:1.3.0.18
	OPENBSD_2_7_BASE:1.3
	new-binutils:1.3.0.16
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	BINUTILS-2_8_1:1.1.1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	CYGNUS-961112:1.1.1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	CYGNUS-960904:1.1.1.3
	CYGNUS-960609:1.1.1.2
	CYGNUS-960607:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2004.11.02.20.45.16;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2004.05.17.21.54.25;	author drahn;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.13.18.36.51;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.13.17.07.32;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.09.22.29.30;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2000.09.12.22.39.10;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.12.19.11.30;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	96.09.04.19.02.46;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.10.48.29;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.03.45;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.03.45;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.07.11.03.42;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.09.04.17.49.34;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	97.05.29.09.15.54;	author niklas;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2000.09.12.14.45.03;	author espie;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2001.06.09.22.06.15;	author espie;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2002.05.13.13.14.37;	author fgsch;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2004.05.17.20.42.03;	author drahn;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2004.11.02.20.22.01;	author miod;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Merge conflicts, bringing our changes back in:
- extra $(SHELL) and sugar for make (so that files not mode +x still work)
- safer temp file handling
- our W^X binary layout changes in ld
- OpenBSD policy for library file selection in ld
- arm and m88k changes which were not merged in time for official 2.15
- bfd core file handling
- a couple typos

New for 2.15:
- ld(1) and as(1) manpages now generated at build time
- binutils/stabs.c reverted to use our in-tree libiberty for now
- we still use our VIA C3 crypto code over stock binutils, as it recognizes
  more instructions
- new emulations for OpenBSD on mips64 machines, to help OpenBSD/sgi
- relaxed %f# handling in gas on OpenBSD/sparc64 (same as was in 2.14)

Tested on all platforms by various people; special thanks to sturm@@ and
otto@@.
@
text
@dnl Process this file with autoconf to produce a configure script.
dnl
AC_PREREQ(2.13)
AC_INIT(ar.c)

AC_CANONICAL_SYSTEM
AC_ISC_POSIX

changequote(,)dnl
BFD_VERSION=`sed -n -e 's/^.._INIT_AUTOMAKE.*,[ 	]*\([^ 	]*\)[ 	]*).*/\1/p' < ${srcdir}/../bfd/configure.in`
changequote([,])dnl
AM_INIT_AUTOMAKE(binutils, ${BFD_VERSION})

AM_PROG_LIBTOOL

AC_ARG_ENABLE(targets,
[  --enable-targets        alternative target configurations],
[case "${enableval}" in
  yes | "") AC_ERROR(enable-targets option must specify target names or 'all')
            ;;
  no)       enable_targets= ;;
  *)        enable_targets=$enableval ;;
esac])dnl
AC_ARG_ENABLE(commonbfdlib,
[  --enable-commonbfdlib   build shared BFD/opcodes/libiberty library],
[case "${enableval}" in
  yes) commonbfdlib=true ;;
  no)  commonbfdlib=false ;;
  *)   AC_MSG_ERROR([bad value ${enableval} for BFD commonbfdlib option]) ;;
esac])dnl

build_warnings="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
AC_ARG_ENABLE(build-warnings,
[  --enable-build-warnings Enable build-time compiler warnings if gcc is used],
[case "${enableval}" in
  yes)	;;
  no)	build_warnings="-w";;
  ,*)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
        build_warnings="${build_warnings} ${t}";;
  *,)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
        build_warnings="${t} ${build_warnings}";;
  *)    build_warnings=`echo "${enableval}" | sed -e "s/,/ /g"`;;
esac
if test x"$silent" != x"yes" && test x"$build_warnings" != x""; then
  echo "Setting warning flags = $build_warnings" 6>&1
fi])dnl
WARN_CFLAGS=""
if test "x${build_warnings}" != x -a "x$GCC" = xyes ; then
    WARN_CFLAGS="${build_warnings}"
fi
AC_SUBST(WARN_CFLAGS)

AM_CONFIG_HEADER(config.h:config.in)

if test -z "$target" ; then
    AC_MSG_ERROR(Unrecognized target system type; please check config.sub.)
fi
if test -z "$host" ; then
    AC_MSG_ERROR(Unrecognized host system type; please check config.sub.)
fi

AC_PROG_CC

AC_PROG_YACC
AM_PROG_LEX

ALL_LINGUAS="fr tr ja es sv da zh_CN ru"
CY_GNU_GETTEXT

AM_MAINTAINER_MODE
AC_EXEEXT
if test -n "$EXEEXT"; then
  AC_DEFINE(HAVE_EXECUTABLE_SUFFIX, 1,
	    [Does the platform use an executable suffix?])
fi
AC_DEFINE_UNQUOTED(EXECUTABLE_SUFFIX, "${EXEEXT}",
		   [Suffix used for executables, if any.])

# host-specific stuff:

HDEFINES=

. ${srcdir}/../bfd/configure.host

AC_SUBST(HDEFINES)
AR=${AR-ar}
AC_SUBST(AR)
AC_PROG_RANLIB
AC_PROG_INSTALL

BFD_CC_FOR_BUILD

DEMANGLER_NAME=c++filt
case "${host}" in
  *-*-go32* | *-*-msdos*)
    DEMANGLER_NAME=cxxfilt
esac
AC_SUBST(DEMANGLER_NAME)

AC_CHECK_HEADERS(string.h strings.h stdlib.h unistd.h fcntl.h sys/file.h)
AC_HEADER_SYS_WAIT
AC_FUNC_ALLOCA
AC_CHECK_FUNCS(sbrk utimes setmode getc_unlocked strcoll)

# Check whether fopen64 is available and whether _LARGEFILE64_SOURCE
# needs to be defined for it
AC_MSG_CHECKING([for fopen64])
AC_CACHE_VAL(bu_cv_have_fopen64,
[AC_TRY_LINK([#include <stdio.h>], [FILE *f = fopen64 ("/tmp/foo","r");],
bu_cv_have_fopen64=yes,
[saved_CPPFLAGS=$CPPFLAGS
 CPPFLAGS="$CPPFLAGS -D_LARGEFILE64_SOURCE"
 AC_TRY_LINK([#include <stdio.h>], [FILE *f = fopen64 ("/tmp/foo","r");],
bu_cv_have_fopen64="need -D_LARGEFILE64_SOURCE",
bu_cv_have_fopen64=no)
 CPPFLAGS=$saved_CPPFLAGS])])
AC_MSG_RESULT($bu_cv_have_fopen64)
if test "$bu_cv_have_fopen64" != no; then
  AC_DEFINE([HAVE_FOPEN64], 1,
	    [Is fopen64 available?])
  if test "$bu_cv_have_fopen64" = "need -D_LARGEFILE64_SOURCE"; then
    AC_DEFINE([_LARGEFILE64_SOURCE], 1,
	      [Enable LFS])
  fi
fi

# Some systems have frexp only in -lm, not in -lc.
AC_SEARCH_LIBS(frexp, m)

AC_MSG_CHECKING(for time_t in time.h)
AC_CACHE_VAL(bu_cv_decl_time_t_time_h,
[AC_TRY_COMPILE([#include <time.h>], [time_t i;],
bu_cv_decl_time_t_time_h=yes, bu_cv_decl_time_t_time_h=no)])
AC_MSG_RESULT($bu_cv_decl_time_t_time_h)
if test $bu_cv_decl_time_t_time_h = yes; then
  AC_DEFINE([HAVE_TIME_T_IN_TIME_H], 1,
	    [Is the type time_t defined in <time.h>?])
fi

AC_MSG_CHECKING(for time_t in sys/types.h)
AC_CACHE_VAL(bu_cv_decl_time_t_types_h,
[AC_TRY_COMPILE([#include <sys/types.h>], [time_t i;],
bu_cv_decl_time_t_types_h=yes, bu_cv_decl_time_t_types_h=no)])
AC_MSG_RESULT($bu_cv_decl_time_t_types_h)
if test $bu_cv_decl_time_t_types_h = yes; then
  AC_DEFINE([HAVE_TIME_T_IN_TYPES_H], 1,
	    [Is the type time_t defined in <sys/types.h>?])
fi

# Under Next 3.2 <utime.h> apparently does not define struct utimbuf
# by default.
AC_MSG_CHECKING([for utime.h])
AC_CACHE_VAL(bu_cv_header_utime_h,
[AC_TRY_COMPILE([#include <sys/types.h>
#ifdef HAVE_TIME_H
#include <time.h>
#endif
#include <utime.h>],
[struct utimbuf s;],
bu_cv_header_utime_h=yes, bu_cv_header_utime_h=no)])
AC_MSG_RESULT($bu_cv_header_utime_h)
if test $bu_cv_header_utime_h = yes; then
  AC_DEFINE(HAVE_GOOD_UTIME_H, 1, [Does <utime.h> define struct utimbuf?])
fi

BFD_NEED_DECLARATION(fprintf)
BFD_NEED_DECLARATION(strstr)
BFD_NEED_DECLARATION(sbrk)
BFD_NEED_DECLARATION(getenv)
BFD_NEED_DECLARATION(environ)

BFD_BINARY_FOPEN

# target-specific stuff:

# Canonicalize the secondary target names.
if test -n "$enable_targets"; then
    for targ in `echo $enable_targets | sed 's/,/ /g'`
    do
	result=`$ac_config_sub $targ 2>/dev/null`
	if test -n "$result"; then
	    canon_targets="$canon_targets $result"
	else
	    # Allow targets that config.sub doesn't recognize, like "all".
	    canon_targets="$canon_targets $targ"
	fi
    done
fi

all_targets=false
BUILD_NLMCONV=
NLMCONV_DEFS=
BUILD_SRCONV=
BUILD_DLLTOOL=
DLLTOOL_DEFS=
BUILD_WINDRES=
BUILD_DLLWRAP=
BUILD_MISC=
OBJDUMP_DEFS=

for targ in $target $canon_targets
do
    if test "x$targ" = "xall"; then
        all_targets=true
	BUILD_NLMCONV='$(NLMCONV_PROG)$(EXEEXT)'
	BUILD_SRCONV='$(SRCONV_PROG)'
	NLMCONV_DEFS="-DNLMCONV_I386 -DNLMCONV_ALPHA -DNLMCONV_POWERPC -DNLMCONV_SPARC"
    else
	case $targ in
changequote(,)dnl
	i[3-7]86*-*-netware*) 
changequote([,])dnl
	  BUILD_NLMCONV='$(NLMCONV_PROG)$(EXEEXT)'
	  NLMCONV_DEFS="$NLMCONV_DEFS -DNLMCONV_I386"
	  ;;
	alpha*-*-netware*)
	  BUILD_NLMCONV='$(NLMCONV_PROG)$(EXEEXT)'
	  NLMCONV_DEFS="$NLMCONV_DEFS -DNLMCONV_ALPHA"
	  ;;
	powerpc*-*-netware*)
	  BUILD_NLMCONV='$(NLMCONV_PROG)$(EXEEXT)'
	  NLMCONV_DEFS="$NLMCONV_DEFS -DNLMCONV_POWERPC"
	  ;;
	sparc*-*-netware*)
	  BUILD_NLMCONV='$(NLMCONV_PROG)$(EXEEXT)'
	  NLMCONV_DEFS="$NLMCONV_DEFS -DNLMCONV_SPARC"
	  ;;
	esac
	case $targ in
	*-*-hms*) BUILD_SRCONV='$(SRCONV_PROG)' ;;
	esac
	case $targ in
	arm-epoc-pe*)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_ARM_EPOC -DDLLTOOL_ARM"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
	arm-*-pe* | arm-*-wince)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_ARM"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
	thumb-*-pe*)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_ARM"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
  	arm*-* | xscale-* | strongarm-* | d10v-*)
	  OBJDUMP_DEFS="-DDISASSEMBLER_NEEDS_RELOCS"
	  ;;
changequote(,)dnl
	i[3-7]86-*-pe* | i[3-7]86-*-cygwin* | i[3-7]86-*-mingw32** | i[3-7]86-*-netbsdpe*)
changequote([,])dnl
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_I386"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  BUILD_DLLWRAP='$(DLLWRAP_PROG)$(EXEEXT)'
	  ;;
changequote(,)dnl
	i[3-7]86-*-interix)
changequote([,])dnl
	  BUILD_DLLTOOL='$(DLLTOOL_PROG)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_I386"
	  ;;
changequote(,)dnl
	powerpc*-aix5.[01])
changequote([,])dnl
	  ;;
	powerpc*-aix5.*)
	  OBJDUMP_DEFS="-DAIX_WEAK_SUPPORT"
	  ;;
	powerpc*-*-pe* | powerpc*-*-cygwin*)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_PPC"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
	sh*-*-pe)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_SH"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
	mips*-*-pe)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_MIPS"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
	mcore-*-pe)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_MCORE"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
	mcore-*-elf)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_MCORE_ELF"
	  ;;
        c4x-*-* | tic4x-*-*)
          OBJDUMP_DEFS="$OBJDUMP_DEFS -DSKIP_ZEROES=32"
          ;;
	ia64-*-*)
	  OBJDUMP_DEFS="$OBJDUMP_DEFS -DSKIP_ZEROES=16"
	  ;;
	esac
    fi
done

if test "${with_windres+set}" = set; then
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
fi

AC_SUBST(NLMCONV_DEFS)
AC_SUBST(BUILD_NLMCONV)
AC_SUBST(BUILD_SRCONV)
AC_SUBST(BUILD_DLLTOOL)
AC_SUBST(DLLTOOL_DEFS)
AC_SUBST(BUILD_WINDRES)
AC_SUBST(BUILD_DLLWRAP)
AC_SUBST(BUILD_MISC)
AC_SUBST(OBJDUMP_DEFS)

AC_DEFINE_UNQUOTED(TARGET, "${target}", [Configured target name.])

targ=$target
. $srcdir/../bfd/config.bfd
if test "x$targ_underscore" = "xyes"; then
    UNDERSCORE=1
else
    UNDERSCORE=0
fi
AC_DEFINE_UNQUOTED(TARGET_PREPENDS_UNDERSCORE, $UNDERSCORE,
 [Define to 1 if user symbol names have a leading underscore, 0 if not.])

# Emulation 
for targ_alias in `echo $target_alias $enable_targets | sed 's/,/ /g'`
do
  # Canonicalize the secondary target names.
 result=`$ac_config_sub $targ_alias 2>/dev/null`
 if test -n "$result"; then
   targ=$result
 else
   targ=$targ_alias
 fi

 . ${srcdir}/configure.tgt

  EMULATION=$targ_emul
  EMULATION_VECTOR=$targ_emul_vector	
done

AC_SUBST(EMULATION)
AC_SUBST(EMULATION_VECTOR)

AC_OUTPUT(Makefile doc/Makefile po/Makefile.in:po/Make-in,
[
case "x$CONFIG_FILES" in
*) sed -e '/POTFILES =/r po/POTFILES' po/Makefile.in > po/Makefile ;;
esac
])
@


1.9
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@d67 1
a67 1
ALL_LINGUAS="fr tr ja es sv da zh_CN"
d211 1
a211 1
	i[3456]86*-*-netware*) 
d252 1
a252 1
	i[3-6]86-*-pe* | i[3-6]86-*-cygwin* | i[3-6]86-*-mingw32** | i[3-6]86-*-netbsdpe*)
d259 3
a261 1
	i[3-6]86-*-interix)
d264 7
@


1.8
log
@don't incorrectly match powerpc or any other openbsd arch for the
case; from binutils -current.
@
text
@d32 1
a32 1
build_warnings="-W -Wall"
d67 1
a67 1
ALL_LINGUAS=
d103 23
a125 1
AC_CHECK_FUNCS(mkdtemp mkstemp sbrk utimes setmode)
d238 1
a238 1
	arm-pe* | arm-*-wince)
d243 1
a243 1
	thumb-pe*)
d252 1
a252 1
	i[3-6]86-pe* | i[3-6]86-*-cygwin* | i[3-6]86-*-mingw32*)
d278 1
a278 1
	mcore-pe)
d283 1
a283 1
	mcore-*elf)
d287 6
d297 4
d320 22
a341 1
AC_SUBST(UNDERSCORE)
d343 1
a343 1
AC_OUTPUT(Makefile po/Makefile.in:po/Make-in,
@


1.7
log
@resolve conflicts.
@
text
@d216 1
a216 1
	arm-*pe* | arm-*-wince)
d221 1
a221 1
	thumb-*pe*)
d230 1
a230 1
	i[3-6]86-*pe* | i[3-6]86-*-cygwin* | i[3-6]86-*-mingw32*)
d241 1
a241 1
	powerpc*-*-*pe* | powerpc*-*-cygwin*)
d246 1
a246 1
	sh*-*-*pe)
d251 1
a251 1
	mips*-*-*pe)
d256 1
a256 1
	mcore-*pe)
@


1.6
log
@Automatic cvs merge. Dread what I will have to fix after this excuse
of a program is done...
@
text
@d9 4
a12 1
AM_INIT_AUTOMAKE(binutils, 2.10.1)
d32 21
d177 1
d211 5
d226 3
d277 1
@


1.5
log
@Check for mkdtemp and mkstemp.
@
text
@d7 1
d9 1
a9 1
AM_INIT_AUTOMAKE(binutils, 2.10)
@


1.4
log
@Help stupid cvs fixing basic conflicts.
@
text
@d78 1
a78 1
AC_CHECK_FUNCS(sbrk utimes setmode)
@


1.3
log
@Merge the Cygnus 960904 sources
@
text
@d3 1
a3 1
AC_PREREQ(2.5)
d6 6
d20 2
a21 2
AC_ARG_ENABLE(shared,
[  --enable-shared         build shared BFD library],
d23 3
a25 7
  yes) shared=true shared_bfd=true shared_opcodes=true ;;
  no)  shared=false ;;
  *bfd*opcodes*) shared=true shared_bfd=true shared_opcodes=true ;;
  *opcodes*bfd*) shared=true shared_bfd=true shared_opcodes=true ;;
  *bfd*) shared=true shared_bfd=true ;;
  *opcodes*) shared=true shared_opcodes=true ;;
  *) shared=false ;;
d28 1
a28 1
AC_CONFIG_HEADER(config.h:config.in)
a29 2
AC_CONFIG_AUX_DIR(`cd $srcdir/..; pwd`)
AC_CANONICAL_SYSTEM
d36 17
a52 1
AC_ARG_PROGRAM
a56 5
HLDFLAGS=
HLDENV=
RPATH_ENVVAR=LD_LIBRARY_PATH

AC_PROG_CC
a60 3
AC_SUBST(HLDFLAGS)
AC_SUBST(HLDENV)
AC_SUBST(RPATH_ENVVAR)
d66 3
a68 5
# For most hosts we can use a simple definition to pick up the BFD and
# opcodes libraries.  However, if we are building shared libraries, we
# need to handle some hosts specially.
BFDLIB='-L../bfd -lbfd'
OPCODES='-L../opcodes -lopcodes'
d70 2
a71 25
*-*-sunos*)
  # On SunOS, we must link against the name we are going to install,
  # not -lbfd, since SunOS does not support SONAME.
  if test "${shared_bfd}" = "true"; then
    BFDLIB='-L../bfd -l`echo bfd | sed '"'"'$(program_transform_name)'"'"'`'
  fi
  if test "${shared_opcodes}" = "true"; then
    OPCODES='-L../opcodes -l`echo opcodes | sed '"'"'$(program_transform_name)'"'"'`'
  fi
  ;;
alpha*-*-osf*)
  # On Alpha OSF/1, the native linker searches all the -L
  # directories for any LIB.so files, and only then searches for any
  # LIB.a files.  That means that if there is an installed
  # libbfd.so, but this build is not done with --enable-shared, the
  # link will wind up being against the install libbfd.so rather
  # than the newly built libbfd.  To avoid this, we must explicitly
  # link against libbfd.a when --enable-shared is not used.
  if test "${shared_bfd}" != "true"; then
    BFDLIB='../bfd/libbfd.a'
  fi
  if test "${shared_opcodes}" != "true"; then
    OPCODES='../opcodes/libopcodes.a'
  fi
  ;;
d73 1
a73 4
AC_SUBST(BFDLIB)
AC_SUBST(OPCODES)

BFD_CC_FOR_BUILD
d77 5
a81 2
AC_CHECK_FUNCS(sbrk utimes)
AC_FUNC_VFORK
d89 2
a90 1
  AC_DEFINE([HAVE_TIME_T_IN_TIME_H])
d99 2
a100 1
  AC_DEFINE([HAVE_TIME_T_IN_TYPES_H])
d116 1
a116 1
  AC_DEFINE(HAVE_GOOD_UTIME_H)
d122 2
d149 3
d157 1
a157 1
	BUILD_NLMCONV='$(NLMCONV_PROG)'
d165 1
a165 1
	  BUILD_NLMCONV='$(NLMCONV_PROG)'
d169 1
a169 1
	  BUILD_NLMCONV='$(NLMCONV_PROG)'
d173 1
a173 1
	  BUILD_NLMCONV='$(NLMCONV_PROG)'
d177 1
a177 1
	  BUILD_NLMCONV='$(NLMCONV_PROG)'
d185 7
a191 2
	arm-*pe*)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)'
d193 2
a194 1
	 ;;
d196 1
a196 1
	i[3-6]86-*pe* | i[3-6]86-*-cygwin32)
d198 7
a204 1
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)'
d206 3
a208 3
	 ;;
	powerpc*-*-*pe* | powerpc*-*-cygwin32)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)'
d210 21
a230 1
	 ;;
d240 5
d255 6
a260 2
AC_OUTPUT(Makefile,
[case x$CONFIG_HEADERS in xconfig.h:config.in) echo > stamp-h ;; esac])
@


1.2
log
@Bring Cygnus versions into the trunk, keeping our local patches
@
text
@d3 1
a3 1
AC_PREREQ(2.0)
d42 1
d51 1
d63 27
a89 14
if test "${shared}" = "true"; then
  case "${host}" in
  *-*-sunos*)
    # On SunOS, we must link against the name we are going to install,
    # not -lbfd, since SunOS does not support SONAME.
    if test "${shared_bfd}" = "true"; then
      BFDLIB='-L../bfd -l`echo bfd | sed '"'"'$(program_transform_name)'"'"'`'
    fi
    if test "${shared_opcodes}" = "true"; then
      OPCODES='-L../opcodes -l`echo opcodes | sed '"'"'$(program_transform_name)'"'"'`'
    fi
    ;;
  esac
fi
d135 2
d173 1
a173 1
	i[345]86*-*-netware*) 
@


1.1
log
@Initial revision
@
text
@d14 11
d41 4
a44 1
LDFLAGS=
a47 2
AC_PROG_CC
AC_SUBST(CFLAGS)
d49 2
a50 1
AC_SUBST(LDFLAGS)
d56 22
d83 1
d119 1
a119 9
AC_MSG_CHECKING([whether fprintf must be declared])
AC_CACHE_VAL(bu_cv_decl_needed_fprintf,
[AC_TRY_COMPILE([#include <stdio.h>],
[int (*pfn) = (int (*)) fprintf],
bu_cv_decl_needed_fprintf=no, bu_cv_decl_needed_fprintf=yes)])
AC_MSG_RESULT($bu_cv_decl_needed_fprintf)
if test $bu_cv_decl_needed_fprintf = yes; then
  AC_DEFINE(NEED_DECLARATION_FPRINTF)
fi
d183 1
a183 1
	i[3-6]86-*pe* | i[3-6]86-*-win32)
d188 1
a188 1
	powerpc*-*pe*)
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@(Correct) Import of Cygnus binutils snapshot taken 960607
@
text
@a13 11
AC_ARG_ENABLE(shared,
[  --enable-shared         build shared BFD library],
[case "${enableval}" in
  yes) shared=true shared_bfd=true shared_opcodes=true ;;
  no)  shared=false ;;
  *bfd*opcodes*) shared=true shared_bfd=true shared_opcodes=true ;;
  *opcodes*bfd*) shared=true shared_bfd=true shared_opcodes=true ;;
  *bfd*) shared=true shared_bfd=true ;;
  *opcodes*) shared=true shared_opcodes=true ;;
  *) shared=false ;;
esac])dnl
d30 1
a30 4
HLDFLAGS=
RPATH_ENVVAR=LD_LIBRARY_PATH

AC_PROG_CC
d34 2
d37 1
a37 2
AC_SUBST(HLDFLAGS)
AC_SUBST(RPATH_ENVVAR)
a42 22
# For most hosts we can use a simple definition to pick up the BFD and
# opcodes libraries.  However, if we are building shared libraries, we
# need to handle some hosts specially.
BFDLIB='-L../bfd -lbfd'
OPCODES='-L../opcodes -lopcodes'
if test "${shared}" = "true"; then
  case "${host}" in
  *-*-sunos*)
    # On SunOS, we must link against the name we are going to install,
    # not -lbfd, since SunOS does not support SONAME.
    if test "${shared_bfd}" = "true"; then
      BFDLIB='-L../bfd -l`echo bfd | sed '"'"'$(program_transform_name)'"'"'`'
    fi
    if test "${shared_opcodes}" = "true"; then
      OPCODES='-L../opcodes -l`echo opcodes | sed '"'"'$(program_transform_name)'"'"'`'
    fi
    ;;
  esac
fi
AC_SUBST(BFDLIB)
AC_SUBST(OPCODES)

a47 1
AC_FUNC_VFORK
d83 9
a91 1
BFD_NEED_DECLARATION(fprintf)
d155 1
a155 1
	i[3-6]86-*pe* | i[3-6]86-*-cygwin32)
d160 1
a160 1
	powerpc*-*-*pe* | powerpc*-*-cygwin32)
@


1.1.1.3
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@d3 1
a3 1
AC_PREREQ(2.5)
a41 1
HLDENV=
a49 1
AC_SUBST(HLDENV)
d61 14
a74 27
case "${host}" in
*-*-sunos*)
  # On SunOS, we must link against the name we are going to install,
  # not -lbfd, since SunOS does not support SONAME.
  if test "${shared_bfd}" = "true"; then
    BFDLIB='-L../bfd -l`echo bfd | sed '"'"'$(program_transform_name)'"'"'`'
  fi
  if test "${shared_opcodes}" = "true"; then
    OPCODES='-L../opcodes -l`echo opcodes | sed '"'"'$(program_transform_name)'"'"'`'
  fi
  ;;
alpha*-*-osf*)
  # On Alpha OSF/1, the native linker searches all the -L
  # directories for any LIB.so files, and only then searches for any
  # LIB.a files.  That means that if there is an installed
  # libbfd.so, but this build is not done with --enable-shared, the
  # link will wind up being against the install libbfd.so rather
  # than the newly built libbfd.  To avoid this, we must explicitly
  # link against libbfd.a when --enable-shared is not used.
  if test "${shared_bfd}" != "true"; then
    BFDLIB='../bfd/libbfd.a'
  fi
  if test "${shared_opcodes}" != "true"; then
    OPCODES='../opcodes/libopcodes.a'
  fi
  ;;
esac
a119 2
BFD_NEED_DECLARATION(strstr)
BFD_NEED_DECLARATION(sbrk)
d156 1
a156 1
	i[3456]86*-*-netware*) 
@


1.1.1.4
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@a24 7
AC_ARG_ENABLE(commonbfdlib,
[  --enable-commonbfdlib   build shared BFD/opcodes/libiberty library],
[case "${enableval}" in
  yes) commonbfdlib=true ;;
  no)  commonbfdlib=false ;;
  *)   AC_MSG_ERROR([bad value ${enableval} for BFD commonbfdlib option]) ;;
esac])dnl
a62 1

a89 12

if test "${commonbfdlib}" = "true"; then
  # when a shared libbfd is built with --enable-commonbfdlib,
  # all of libopcodes is available in libbfd.so.  Unfortunately, on
  # HP/UX, when using gcc -g, the linker does a static link, so we
  # need to continue linking against opcodes on that platform.
  case "${host}" in
  *-*-hpux*) ;;
  *) OPCODES= ;;
  esac
fi

a96 1
AC_FUNC_ALLOCA
d98 1
a98 7
dnl Temporary workaround for bug in autoconf 2.12.  When the bug is
dnl fixed, we can just call AC_FUNC_VFORK in all cases.
if test "x$cross_compiling" = "xno"; then
  AC_FUNC_VFORK
else
  AC_CHECK_FUNC(vfork, , AC_DEFINE(vfork, fork))
fi
a136 1
BFD_NEED_DECLARATION(getenv)
d146 1
a146 1
	result=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $targ 2>/dev/null`
@


1.1.1.5
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d3 1
a3 1
AC_PREREQ(2.13)
a5 6
AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(binutils, 2.10)

AM_PROG_LIBTOOL

d14 11
d33 1
a33 1
AM_CONFIG_HEADER(config.h:config.in)
d35 2
d43 1
a43 17

AC_PROG_CC

AC_PROG_YACC
AM_PROG_LEX

ALL_LINGUAS=
CY_GNU_GETTEXT

AM_MAINTAINER_MODE
AC_EXEEXT
if test -n "$EXEEXT"; then
  AC_DEFINE(HAVE_EXECUTABLE_SUFFIX, 1,
	    [Does the platform use an executable suffix?])
fi
AC_DEFINE_UNQUOTED(EXECUTABLE_SUFFIX, "${EXEEXT}",
		   [Suffix used for executables, if any.])
d48 5
d57 3
d65 5
a69 1
BFD_CC_FOR_BUILD
a70 1
DEMANGLER_NAME=c++filt
d72 25
a96 2
  *-*-go32* | *-*-msdos*)
    DEMANGLER_NAME=cxxfilt
d98 16
a113 1
AC_SUBST(DEMANGLER_NAME)
d118 8
a125 4
AC_CHECK_FUNCS(sbrk utimes setmode)

# Some systems have frexp only in -lm, not in -lc.
AC_SEARCH_LIBS(frexp, m)
d133 1
a133 2
  AC_DEFINE([HAVE_TIME_T_IN_TIME_H], 1,
	    [Is the type time_t defined in <time.h>?])
d142 1
a142 2
  AC_DEFINE([HAVE_TIME_T_IN_TYPES_H], 1,
	    [Is the type time_t defined in <sys/types.h>?])
d158 1
a158 1
  AC_DEFINE(HAVE_GOOD_UTIME_H, 1, [Does <utime.h> define struct utimbuf?])
a164 1
BFD_NEED_DECLARATION(environ)
d174 1
a174 1
	result=`$ac_config_sub $targ 2>/dev/null`
a189 3
BUILD_WINDRES=
BUILD_DLLWRAP=
BUILD_MISC=
d195 1
a195 1
	BUILD_NLMCONV='$(NLMCONV_PROG)$(EXEEXT)'
d203 1
a203 1
	  BUILD_NLMCONV='$(NLMCONV_PROG)$(EXEEXT)'
d207 1
a207 1
	  BUILD_NLMCONV='$(NLMCONV_PROG)$(EXEEXT)'
d211 1
a211 1
	  BUILD_NLMCONV='$(NLMCONV_PROG)$(EXEEXT)'
d215 1
a215 1
	  BUILD_NLMCONV='$(NLMCONV_PROG)$(EXEEXT)'
d223 2
a224 2
	arm-*pe* | arm-*-wince)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
d226 1
a226 7
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
	thumb-*pe*)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_ARM"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
d228 1
a228 1
	i[3-6]86-*pe* | i[3-6]86-*-cygwin* | i[3-6]86-*-mingw32*)
d230 1
a230 7
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_I386"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  BUILD_DLLWRAP='$(DLLWRAP_PROG)$(EXEEXT)'
	  ;;
	i[3-6]86-*-interix)
	  BUILD_DLLTOOL='$(DLLTOOL_PROG)'
d232 3
a234 3
	  ;;
	powerpc*-*-*pe* | powerpc*-*-cygwin*)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
d236 1
a236 21
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
	sh*-*-*pe)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_SH"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
	mips*-*-*pe)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_MIPS"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
	mcore-*pe)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_MCORE"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
	mcore-*elf)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_MCORE_ELF"
	  ;;
a245 5
AC_SUBST(BUILD_WINDRES)
AC_SUBST(BUILD_DLLWRAP)
AC_SUBST(BUILD_MISC)

AC_DEFINE_UNQUOTED(TARGET, "${target}", [Configured target name.])
d256 2
a257 6
AC_OUTPUT(Makefile po/Makefile.in:po/Make-in,
[
case "x$CONFIG_FILES" in
*) sed -e '/POTFILES =/r po/POTFILES' po/Makefile.in > po/Makefile ;;
esac
])
@


1.1.1.6
log
@Long delayed import of binutils-2.10.1. Turns out art@@ needs some alpha
bug-fixes...
@
text
@a6 1
AC_ISC_POSIX
d8 1
a8 1
AM_INIT_AUTOMAKE(binutils, 2.10.1)
@


1.1.1.7
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d9 1
a9 4
changequote(,)dnl
BFD_VERSION=`sed -n -e 's/^.._INIT_AUTOMAKE.*,[ 	]*\([^ 	]*\)[ 	]*).*/\1/p' < ${srcdir}/../bfd/configure.in`
changequote([,])dnl
AM_INIT_AUTOMAKE(binutils, ${BFD_VERSION})
a28 21
build_warnings="-W -Wall"
AC_ARG_ENABLE(build-warnings,
[  --enable-build-warnings Enable build-time compiler warnings if gcc is used],
[case "${enableval}" in
  yes)	;;
  no)	build_warnings="-w";;
  ,*)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
        build_warnings="${build_warnings} ${t}";;
  *,)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
        build_warnings="${t} ${build_warnings}";;
  *)    build_warnings=`echo "${enableval}" | sed -e "s/,/ /g"`;;
esac
if test x"$silent" != x"yes" && test x"$build_warnings" != x""; then
  echo "Setting warning flags = $build_warnings" 6>&1
fi])dnl
WARN_CFLAGS=""
if test "x${build_warnings}" != x -a "x$GCC" = xyes ; then
    WARN_CFLAGS="${build_warnings}"
fi
AC_SUBST(WARN_CFLAGS)

a152 1
OBJDUMP_DEFS=
a185 5
	arm-epoc-pe*)
  	  BUILD_DLLTOOL='$(DLLTOOL_PROG)$(EXEEXT)'
	  DLLTOOL_DEFS="$DLLTOOL_DEFS -DDLLTOOL_ARM_EPOC -DDLLTOOL_ARM"
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
	  ;;
a195 3
  	arm*-* | xscale-* | strongarm-* | d10v-*)
	  OBJDUMP_DEFS="-DDISASSEMBLER_NEEDS_RELOCS"
	  ;;
a243 1
AC_SUBST(OBJDUMP_DEFS)
@


1.1.1.8
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@d32 1
a32 1
build_warnings="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
d67 1
a67 1
ALL_LINGUAS="fr tr ja es sv da zh_CN"
d103 1
a103 23
AC_CHECK_FUNCS(sbrk utimes setmode getc_unlocked strcoll)

# Check whether fopen64 is available and whether _LARGEFILE64_SOURCE
# needs to be defined for it
AC_MSG_CHECKING([for fopen64])
AC_CACHE_VAL(bu_cv_have_fopen64,
[AC_TRY_LINK([#include <stdio.h>], [FILE *f = fopen64 ("/tmp/foo","r");],
bu_cv_have_fopen64=yes,
[saved_CPPFLAGS=$CPPFLAGS
 CPPFLAGS="$CPPFLAGS -D_LARGEFILE64_SOURCE"
 AC_TRY_LINK([#include <stdio.h>], [FILE *f = fopen64 ("/tmp/foo","r");],
bu_cv_have_fopen64="need -D_LARGEFILE64_SOURCE",
bu_cv_have_fopen64=no)
 CPPFLAGS=$saved_CPPFLAGS])])
AC_MSG_RESULT($bu_cv_have_fopen64)
if test "$bu_cv_have_fopen64" != no; then
  AC_DEFINE([HAVE_FOPEN64], 1,
	    [Is fopen64 available?])
  if test "$bu_cv_have_fopen64" = "need -D_LARGEFILE64_SOURCE"; then
    AC_DEFINE([_LARGEFILE64_SOURCE], 1,
	      [Enable LFS])
  fi
fi
d216 1
a216 1
	arm-*-pe* | arm-*-wince)
d221 1
a221 1
	thumb-*-pe*)
d230 1
a230 1
	i[3-6]86-*-pe* | i[3-6]86-*-cygwin* | i[3-6]86-*-mingw32** | i[3-6]86-*-netbsdpe*)
d241 1
a241 1
	powerpc*-*-pe* | powerpc*-*-cygwin*)
d246 1
a246 1
	sh*-*-pe)
d251 1
a251 1
	mips*-*-pe)
d256 1
a256 1
	mcore-*-pe)
d261 1
a261 1
	mcore-*-elf)
a264 6
        c4x-*-* | tic4x-*-*)
          OBJDUMP_DEFS="$OBJDUMP_DEFS -DSKIP_ZEROES=32"
          ;;
	ia64-*-*)
	  OBJDUMP_DEFS="$OBJDUMP_DEFS -DSKIP_ZEROES=16"
	  ;;
a268 4
if test "${with_windres+set}" = set; then
	  BUILD_WINDRES='$(WINDRES_PROG)$(EXEEXT)'
fi

d288 1
a288 22
AC_DEFINE_UNQUOTED(TARGET_PREPENDS_UNDERSCORE, $UNDERSCORE,
 [Define to 1 if user symbol names have a leading underscore, 0 if not.])

# Emulation 
for targ_alias in `echo $target_alias $enable_targets | sed 's/,/ /g'`
do
  # Canonicalize the secondary target names.
 result=`$ac_config_sub $targ_alias 2>/dev/null`
 if test -n "$result"; then
   targ=$result
 else
   targ=$targ_alias
 fi

 . ${srcdir}/configure.tgt

  EMULATION=$targ_emul
  EMULATION_VECTOR=$targ_emul_vector	
done

AC_SUBST(EMULATION)
AC_SUBST(EMULATION_VECTOR)
d290 1
a290 1
AC_OUTPUT(Makefile doc/Makefile po/Makefile.in:po/Make-in,
@


1.1.1.9
log
@Binutils 2.15, with testsuites removed, and without gdb and libiberty.
@
text
@d67 1
a67 1
ALL_LINGUAS="fr tr ja es sv da zh_CN ru"
d211 1
a211 1
	i[3-7]86*-*-netware*) 
d252 1
a252 1
	i[3-7]86-*-pe* | i[3-7]86-*-cygwin* | i[3-7]86-*-mingw32** | i[3-7]86-*-netbsdpe*)
d259 1
a259 3
changequote(,)dnl
	i[3-7]86-*-interix)
changequote([,])dnl
a261 7
	  ;;
changequote(,)dnl
	powerpc*-aix5.[01])
changequote([,])dnl
	  ;;
	powerpc*-aix5.*)
	  OBJDUMP_DEFS="-DAIX_WEAK_SUPPORT"
@


