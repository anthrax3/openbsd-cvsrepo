head	1.2;
access;
symbols
	BINUTILS-2_14:1.1.1.2
	FSF:1.1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	BINUTILS-2_8_1:1.1.1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	CYGNUS-961112:1.1.1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1
	CYGNUS-960904:1.1.1.1
	CYGNUS-960609:1.1.1.1
	CYGNUS-960607:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	99.06.18.02.12.16;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.06.07.11.07.10;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.06.07.11.07.10;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.05.17.20.42.41;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Kill old libiberty, use the one under egcs now.
@
text
@/* xstrdup.c -- Duplicate a string in memory, using xmalloc.
   This trivial function is in the public domain.
   Ian Lance Taylor, Cygnus Support, December 1995.  */

#include "ansidecl.h"
#include "libiberty.h"

char *
xstrdup (s)
     const char *s;
{
  char *ret;

  ret = xmalloc (strlen (s) + 1);
  strcpy (ret, s);
  return ret;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@(Correct) Import of Cygnus binutils snapshot taken 960607
@
text
@@


1.1.1.2
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@a4 18
/*

@@deftypefn Replacement char* xstrdup (const char *@@var{s})

Duplicates a character string without fail, using @@code{xmalloc} to
obtain memory.

@@end deftypefn

*/

#include <sys/types.h>
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif
#ifdef HAVE_STRING_H
#include <string.h>
#endif
d10 1
a10 1
  const char *s;
d12 4
a15 3
  register size_t len = strlen (s) + 1;
  register char *ret = xmalloc (len);
  memcpy (ret, s, len);
@

