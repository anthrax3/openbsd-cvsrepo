head	1.2;
access;
symbols
	BINUTILS-2_14:1.1.1.1 FSF:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.05.17.21.54.53;	author drahn;	state dead;
branches;
next	1.1;

1.1
date	2004.05.17.20.42.40;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.17.20.42.40;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@/* calloc -- allocate memory which has been initialized to zero.
   This function is in the public domain. */

/*

@@deftypefn Supplemental void* calloc (size_t @@var{nelem}, size_t @@var{elsize})

Uses @@code{malloc} to allocate storage for @@var{nelem} objects of
@@var{elsize} bytes each, then zeros the memory.

@@end deftypefn

*/
 
#include "ansidecl.h"
#ifdef ANSI_PROTOTYPES
#include <stddef.h>
#else
#define size_t unsigned long
#endif

/* For systems with larger pointers than ints, this must be declared.  */
PTR malloc PARAMS ((size_t));
void bzero PARAMS ((PTR, size_t));

PTR
calloc (nelem, elsize)
  size_t nelem, elsize;
{
  register PTR ptr;  

  if (nelem == 0 || elsize == 0)
    nelem = elsize = 1;
  
  ptr = malloc (nelem * elsize);
  if (ptr) bzero (ptr, nelem * elsize);
  
  return ptr;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@@
