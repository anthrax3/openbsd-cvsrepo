head	1.2;
access;
symbols
	BINUTILS-2_14:1.1.1.2
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	BINUTILS-2_8_1:1.1.1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	CYGNUS-961112:1.1.1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1
	CYGNUS-960904:1.1.1.1
	CYGNUS-960609:1.1.1.1
	CYGNUS-960607:1.1.1.1
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	99.06.18.02.11.51;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.01.08.11.08.45;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.08.45;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.05.17.20.42.41;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Kill old libiberty, use the one under egcs now.
@
text
@/*
FUNCTION
	<<memchr>>---find character in memory

INDEX
	memchr

ANSI_SYNOPSIS
	#include <string.h>
	void *memchr(const void *<[src]>, int <[c]>, size_t <[length]>);

TRAD_SYNOPSIS
	#include <string.h>
	void *memchr(<[src]>, <[c]>, <[length]>)
	void *<[src]>;
	void *<[c]>;
	size_t <[length]>;

DESCRIPTION
	This function searches memory starting at <<*<[src]>>> for the
	character <[c]>.  The search only ends with the first
	occurrence of <[c]>, or after <[length]> characters; in
	particular, <<NULL>> does not terminate the search.

RETURNS
	If the character <[c]> is found within <[length]> characters
	of <<*<[src]>>>, a pointer to the character is returned. If
	<[c]> is not found, then <<NULL>> is returned. 	

PORTABILITY
<<memchr>>  requires no supporting OS subroutines.

QUICKREF
	memchr ansi pure

*/

#include <ansidecl.h>
#ifdef __STDC__
#include <stddef.h>
#else
#define size_t unsigned long
#endif

PTR
memchr (src_void, c, length)
     register CONST PTR src_void;
     int c;
     size_t length;
{
  CONST unsigned char *src = (CONST unsigned char *)src_void;
  
  while (--length >= 0)
  {
    if (*src == c)
     return (PTR)src;
    src++;
  }
  return NULL;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@d2 2
d5 2
a6 1
@@deftypefn Supplemental void* memchr (const void *@@var{s}, int @@var{c}, size_t @@var{n})
d8 21
a28 7
This function searches memory starting at @@code{*@@var{s}} for the
character @@var{c}.  The search only ends with the first occurrence of
@@var{c}, or after @@var{length} characters; in particular, a null
character does not terminate the search.  If the character @@var{c} is
found within @@var{length} characters of @@code{*@@var{s}}, a pointer
to the character is returned.  If @@var{c} is not found, then @@code{NULL} is
returned.
d30 5
a34 1
@@end deftypefn
d39 1
a39 1
#ifdef ANSI_PROTOTYPES
d47 1
a47 1
     register const PTR src_void;
d51 1
a51 1
  const unsigned char *src = (const unsigned char *)src_void;
d53 1
a53 1
  while (length-- > 0)
@

