head	1.41;
access;
symbols
	OPENBSD_6_1_BASE:1.41
	OPENBSD_6_0:1.41.0.6
	OPENBSD_6_0_BASE:1.41
	OPENBSD_5_9:1.41.0.2
	OPENBSD_5_9_BASE:1.41
	OPENBSD_5_8:1.41.0.4
	OPENBSD_5_8_BASE:1.41
	OPENBSD_5_7:1.40.0.4
	OPENBSD_5_7_BASE:1.40
	OPENBSD_5_6:1.40.0.8
	OPENBSD_5_6_BASE:1.40
	OPENBSD_5_5:1.40.0.6
	OPENBSD_5_5_BASE:1.40
	OPENBSD_5_4:1.40.0.2
	OPENBSD_5_4_BASE:1.40
	OPENBSD_5_3:1.39.0.2
	OPENBSD_5_3_BASE:1.39
	OPENBSD_5_2:1.37.0.2
	OPENBSD_5_2_BASE:1.37
	OPENBSD_5_1_BASE:1.36
	OPENBSD_5_1:1.36.0.22
	OPENBSD_5_0:1.36.0.20
	OPENBSD_5_0_BASE:1.36
	OPENBSD_4_9:1.36.0.18
	OPENBSD_4_9_BASE:1.36
	OPENBSD_4_8:1.36.0.16
	OPENBSD_4_8_BASE:1.36
	OPENBSD_4_7:1.36.0.12
	OPENBSD_4_7_BASE:1.36
	OPENBSD_4_6:1.36.0.14
	OPENBSD_4_6_BASE:1.36
	OPENBSD_4_5:1.36.0.10
	OPENBSD_4_5_BASE:1.36
	OPENBSD_4_4:1.36.0.8
	OPENBSD_4_4_BASE:1.36
	OPENBSD_4_3:1.36.0.6
	OPENBSD_4_3_BASE:1.36
	OPENBSD_4_2:1.36.0.4
	OPENBSD_4_2_BASE:1.36
	OPENBSD_4_1:1.36.0.2
	OPENBSD_4_1_BASE:1.36
	OPENBSD_4_0:1.34.0.2
	OPENBSD_4_0_BASE:1.34
	OPENBSD_3_9:1.33.0.6
	OPENBSD_3_9_BASE:1.33
	OPENBSD_3_8:1.33.0.4
	OPENBSD_3_8_BASE:1.33
	OPENBSD_3_7:1.33.0.2
	OPENBSD_3_7_BASE:1.33
	BINUTILS_2_15:1.1.1.10
	OPENBSD_3_6:1.31.0.2
	OPENBSD_3_6_BASE:1.31
	BINUTILS-2_14:1.1.1.9
	OPENBSD_3_5:1.29.0.2
	OPENBSD_3_5_BASE:1.29
	OPENBSD_3_4:1.28.0.2
	OPENBSD_3_4_BASE:1.28
	OPENBSD_3_3:1.27.0.4
	OPENBSD_3_3_BASE:1.27
	OPENBSD_3_2:1.27.0.2
	OPENBSD_3_2_BASE:1.27
	binutils-2_11_2:1.1.1.8
	OPENBSD_3_1:1.24.0.2
	OPENBSD_3_1_BASE:1.24
	OPENBSD_3_0:1.23.0.2
	OPENBSD_3_0_BASE:1.23
	BINUTILS-2_10_1:1.1.1.7
	OPENBSD_2_9:1.20.0.2
	OPENBSD_2_9_BASE:1.20
	OPENBSD_2_8:1.18.0.2
	OPENBSD_2_8_BASE:1.18
	BINUTILS-2_10:1.1.1.6
	OPENBSD_2_7:1.17.0.8
	OPENBSD_2_7_BASE:1.17
	new-binutils:1.17.0.6
	OPENBSD_2_6:1.17.0.4
	OPENBSD_2_6_BASE:1.17
	OPENBSD_2_5:1.17.0.2
	OPENBSD_2_5_BASE:1.17
	OPENBSD_2_4:1.16.0.2
	OPENBSD_2_4_BASE:1.16
	OPENBSD_2_3:1.15.0.4
	OPENBSD_2_3_BASE:1.15
	OPENBSD_2_2:1.15.0.2
	OPENBSD_2_2_BASE:1.15
	BINUTILS-2_8_1:1.1.1.5
	OPENBSD_2_1:1.14.0.2
	OPENBSD_2_1_BASE:1.14
	CYGNUS-961112:1.1.1.4
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	CYGNUS-960904:1.1.1.3
	CYGNUS-960609:1.1.1.2
	CYGNUS-960607:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.41
date	2015.04.06.18.29.27;	author kettenis;	state Exp;
branches;
next	1.40;
commitid	DQNigUiY2QvUNxoT;

1.40
date	2013.07.05.21.09.22;	author miod;	state Exp;
branches;
next	1.39;

1.39
date	2013.02.02.13.26.18;	author miod;	state Exp;
branches;
next	1.38;

1.38
date	2013.01.05.11.20.55;	author miod;	state Exp;
branches;
next	1.37;

1.37
date	2012.03.29.04.23.48;	author miod;	state Exp;
branches;
next	1.36;

1.36
date	2006.10.08.21.12.36;	author miod;	state Exp;
branches;
next	1.35;

1.35
date	2006.10.06.20.58.17;	author miod;	state Exp;
branches;
next	1.34;

1.34
date	2006.03.22.22.38.15;	author kettenis;	state Exp;
branches;
next	1.33;

1.33
date	2005.01.25.13.24.51;	author mickey;	state Exp;
branches;
next	1.32;

1.32
date	2004.11.02.20.45.05;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2004.05.20.21.33.53;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2004.05.17.21.54.21;	author drahn;	state Exp;
branches;
next	1.29;

1.29
date	2004.02.10.22.28.04;	author mickey;	state Exp;
branches;
next	1.28;

1.28
date	2003.04.17.03.44.25;	author drahn;	state Exp;
branches;
next	1.27;

1.27
date	2002.08.11.22.51.48;	author art;	state Exp;
branches;
next	1.26;

1.26
date	2002.05.13.18.33.13;	author fgsch;	state Exp;
branches;
next	1.25;

1.25
date	2002.05.13.17.07.29;	author fgsch;	state Exp;
branches;
next	1.24;

1.24
date	2002.02.13.10.00.48;	author hugh;	state Exp;
branches;
next	1.23;

1.23
date	2001.09.13.10.44.54;	author kevlo;	state Exp;
branches;
next	1.22;

1.22
date	2001.09.05.22.59.01;	author art;	state Exp;
branches;
next	1.21;

1.21
date	2001.06.09.22.29.25;	author espie;	state Exp;
branches;
next	1.20;

1.20
date	2001.01.31.07.21.35;	author art;	state Exp;
branches;
next	1.19;

1.19
date	2000.11.20.21.52.49;	author tomo;	state Exp;
branches;
next	1.18;

1.18
date	2000.09.12.19.11.09;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	99.02.09.04.01.35;	author smurph;	state Exp;
branches;
next	1.16;

1.16
date	98.05.04.21.22.41;	author mickey;	state Exp;
branches;
next	1.15;

1.15
date	97.10.13.14.50.05;	author pefo;	state Exp;
branches;
next	1.14;

1.14
date	97.04.13.21.00.18;	author pefo;	state Exp;
branches;
next	1.13;

1.13
date	97.04.12.15.46.18;	author graichen;	state Exp;
branches;
next	1.12;

1.12
date	97.01.10.06.53.45;	author imp;	state Exp;
branches;
next	1.11;

1.11
date	96.12.22.18.11.15;	author rahnds;	state Exp;
branches;
next	1.10;

1.10
date	96.12.12.05.16.32;	author imp;	state Exp;
branches;
next	1.9;

1.9
date	96.11.23.03.32.53;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	96.10.31.00.30.57;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	96.10.06.19.40.36;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.09.04.19.00.03;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.07.14.20.41.23;	author pefo;	state Exp;
branches;
next	1.4;

1.4
date	96.06.07.21.09.11;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.01.08.22.16.07;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.01.08.15.55.04;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.04.36;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.04.36;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.07.11.05.15;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.09.04.17.37.25;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	96.11.19.14.12.14;	author niklas;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	97.05.29.09.18.28;	author niklas;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2000.09.12.14.45.31;	author espie;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2001.06.09.22.06.38;	author espie;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2002.05.13.13.21.57;	author fgsch;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2004.05.17.20.42.12;	author drahn;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2004.11.02.20.22.17;	author miod;	state Exp;
branches;
next	;


desc
@@


1.41
log
@Add support for an efi-app-x86_64 target.  Needed for UEFI bootloader work.

ok mlarkin@@
@
text
@# config.bfd
# Convert a canonical host type into a BFD host type.
# Set shell variable targ to canonical target name, and run
# using ``. config.bfd''.
# Sets the following shell variables:
#  targ_defvec		Default vector for this target
#  targ_selvecs		Vectors to build for this target
#  targ64_selvecs	Vectors to build if --enable-64-bit-bfd is given
#			or if host is 64 bit.
#  targ_archs		Architectures for this target
#  targ_cflags		$(CFLAGS) for this target (FIXME: pretty bogus)
#  targ_underscore	Whether underscores are used: yes or no

# Part of this file is processed by targmatch.sed to generate the
# targmatch.h file.  The #ifdef and #endif lines that appear below are
# copied directly into targmatch.h.

# The binutils c++filt program wants to know whether underscores are
# stripped or not.  That is why we set targ_underscore.  c++filt uses
# this information to choose a default.  This information is
# duplicated in the symbol_leading_char field of the BFD target
# vector, but c++filt does not deal with object files and is not
# linked against libbfd.a.  It is not terribly important that c++filt
# get this right; it is just convenient.

targ_defvec=
targ_selvecs=
targ64_selvecs=
targ_cflags=
targ_underscore=no

# Catch obsolete configurations.
case $targ in
 vax-*-vms*			\
 )
    if test "x$enable_obsolete" != xyes; then
      echo "*** Configuration $targ is obsolete." >&2
      echo "*** Specify --enable-obsolete to build it anyway." >&2
      echo "*** Support will be REMOVED in the next major release of BINUTILS," >&2
      echo "*** unless a maintainer comes forward." >&2
      exit 1
    fi;;
esac


targ_cpu=`echo $targ | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
case "${targ_cpu}" in
alpha*)          targ_archs=bfd_alpha_arch ;;
arm*)	         targ_archs=bfd_arm_arch ;;
c30*)	         targ_archs=bfd_tic30_arch ;;
c4x*)            targ_archs=bfd_tic4x_arch ;;
c54x*)	         targ_archs=bfd_tic54x_arch ;;
dlx*)		 targ_archs=bfd_dlx_arch ;;
hppa*)	         targ_archs=bfd_hppa_arch ;;
i[3-7]86)       targ_archs=bfd_i386_arch ;;
i370)            targ_archs=bfd_i370_arch ;;
m6811*|m68hc11*) targ_archs="bfd_m68hc11_arch bfd_m68hc12_arch" ;;
m6812*|m68hc12*) targ_archs="bfd_m68hc12_arch bfd_m68hc11_arch" ;;
m68*)	         targ_archs=bfd_m68k_arch ;;
m88*)	         targ_archs=bfd_m88k_arch ;;
mips*)	         targ_archs=bfd_mips_arch ;;
or32*)		 targ_archs=bfd_or32_arch ;;
pdp11*)	         targ_archs=bfd_pdp11_arch ;;
pj*)	         targ_archs="bfd_pj_arch bfd_i386_arch";;
powerpc*)        targ_archs="bfd_rs6000_arch bfd_powerpc_arch" ;;
rs6000)	         targ_archs="bfd_rs6000_arch bfd_powerpc_arch" ;;
s390*)           targ_archs=bfd_s390_arch ;;
sh*)             targ_archs=bfd_sh_arch ;;
sparc*)          targ_archs=bfd_sparc_arch ;;
strongarm*)      targ_archs=bfd_arm_arch ;;
thumb*)	         targ_archs=bfd_arm_arch ;;
v850*)	         targ_archs=bfd_v850_arch ;;
x86_64)          targ_archs=bfd_i386_arch ;;
xscale*)         targ_archs=bfd_arm_arch ;;
xtensa*)         targ_archs=bfd_xtensa_arch ;;
z8k*)	         targ_archs=bfd_z8k_arch ;;
am33_2.0)        targ_archs=bfd_mn10300_arch ;;
*)	         targ_archs=bfd_${targ_cpu}_arch ;;
esac


# WHEN ADDING ENTRIES TO THIS MATRIX:
#  Make sure that the left side always has two dashes.  Otherwise you
#  can get spurious matches.  Even for unambiguous cases, do this as a
#  convention, else the table becomes a real mess to understand and maintain.
#
#  Keep obsolete entries above the START comment, to keep them out of
#  targmatch.h.

case "${targ}" in
  mips*-dec-bsd*)
    echo "This target is obsolete and has been removed."
    exit 1
    ;;

  mips*-*-mach3*)
    echo "This target is obsolete and has been removed."
    exit 1
    ;;

  mips*-*-pe*)
    echo "This target is obsolete and has been removed."
    exit 1
    ;;

# START OF targmatch.h
#ifdef BFD64
  alpha*-*-freebsd* | alpha*-*-kfreebsd*-gnu)
    targ_defvec=bfd_elf64_alpha_freebsd_vec
    targ_selvecs=ecoffalpha_little_vec
    # FreeBSD <= 4.0 supports only the old nonstandard way of ABI labelling.
    case "${targ}" in
      alpha*-*-freebsd3* | alpha*-*-freebsd4 | alpha*-*-freebsd4.0*)
	targ_cflags=-DOLD_FREEBSD_ABI_LABEL ;;
    esac
    ;;
  alpha*-*-netbsd* | alpha*-*-openbsd*)
    targ_defvec=bfd_elf64_alpha_vec
    targ_selvecs=ecoffalpha_little_vec
    ;;
  alpha*-*-netware*)
    targ_defvec=ecoffalpha_little_vec
    targ_selvecs=nlm32_alpha_vec
    ;;
  alpha*-*-linuxecoff*)
    targ_defvec=ecoffalpha_little_vec
    targ_selvecs=bfd_elf64_alpha_vec
    ;;
  alpha*-*-linux-gnu* | alpha*-*-elf*)
    targ_defvec=bfd_elf64_alpha_vec
    targ_selvecs=ecoffalpha_little_vec
    ;;
  alpha*-*-*vms*)
    targ_defvec=vms_alpha_vec
    ;;
  alpha*-*-*)
    targ_defvec=ecoffalpha_little_vec
    ;;
  ia64*-*-freebsd* | ia64*-*-netbsd* | ia64*-*-linux-gnu* | ia64*-*-elf* | ia64*-*-kfreebsd*-gnu)
    targ_defvec=bfd_elf64_ia64_little_vec
    targ_selvecs="bfd_elf64_ia64_big_vec bfd_efi_app_ia64_vec"
    ;;
  ia64*-*-hpux*)
    targ_defvec=bfd_elf32_ia64_hpux_big_vec
    targ_selvecs="bfd_elf64_ia64_hpux_big_vec"
    ;;
  sparc64-*-freebsd* | sparc64-*-netbsd* | sparc64-*-openbsd* | sparc64-*-kfreebsd*-gnu)
    targ_defvec=bfd_elf64_sparc_vec
    targ_selvecs="bfd_elf32_sparc_vec sunos_big_vec"
    ;;
#endif /* BFD64 */

  am33_2.0-*-linux*)
    targ_defvec=bfd_elf32_am33lin_vec
    ;;
  arc-*-elf*)
    targ_defvec=bfd_elf32_littlearc_vec
    targ_selvecs=bfd_elf32_bigarc_vec
    ;;

  armeb-*-netbsdelf*)
    targ_defvec=bfd_elf32_bigarm_vec
    targ_selvecs="bfd_elf32_littlearm_vec armnetbsd_vec"
    ;;
  arm-*-netbsdelf*)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs="bfd_elf32_bigarm_vec armnetbsd_vec"
    ;;
  arm-*-netbsd* | arm-*-openbsd*)
    targ_defvec=armnetbsd_vec
    targ_selvecs="bfd_elf32_littlearm_vec bfd_elf32_bigarm_vec"
    targ_underscore=yes
    targ_cflags=-D__QNXTARGET__
    ;;
  arm-*-nto* | nto*arm*)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
  arm-*-riscix*)
    targ_defvec=riscix_vec
    ;;
  arm-epoc-pe*)
    targ_defvec=arm_epoc_pe_little_vec
    targ_selvecs="arm_epoc_pe_little_vec arm_epoc_pe_big_vec arm_epoc_pei_little_vec arm_epoc_pei_big_vec"
    targ_underscore=no
    targ_cflags=-DARM_COFF_BUGFIX
    ;;
  arm-wince-pe | arm-*-wince)
    targ_defvec=armpe_little_vec
    targ_selvecs="armpe_little_vec armpe_big_vec armpei_little_vec armpei_big_vec"
    targ_underscore=no
    targ_cflags="-DARM_WINCE -DARM_COFF_BUGFIX"
    ;;
  arm-*-pe*)
    targ_defvec=armpe_little_vec
    targ_selvecs="armpe_little_vec armpe_big_vec armpei_little_vec armpei_big_vec"
    targ_underscore=yes
    ;;
  arm-*-aout | armel-*-aout)
    targ_defvec=aout_arm_little_vec
    targ_selvecs=aout_arm_big_vec
    ;;
  armeb-*-aout)
    targ_defvec=aout_arm_big_vec
    targ_selvecs=aout_arm_little_vec
    ;;
  arm-*-coff)
    targ_defvec=armcoff_little_vec
    targ_selvecs=armcoff_big_vec
    targ_underscore=yes
    ;;
  arm-*-rtems*)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
  armeb-*-elf | arm*b-*-linux-gnu* | armeb-*-openbsd*)
    targ_defvec=bfd_elf32_bigarm_vec
    targ_selvecs=bfd_elf32_littlearm_vec
    ;;
  arm-*-kaos* | strongarm-*-kaos*)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
  arm-*-elf | arm-*-freebsd* | arm*-*-linux-gnu* | arm*-*-conix* | \
  arm*-*-uclinux* | arm-*-kfreebsd*-gnu | arm-*-vxworks | arm-*-openbsd*)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
  arm9e-*-elf)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
  arm-*-oabi)
    targ_defvec=bfd_elf32_littlearm_oabi_vec
    targ_selvecs=bfd_elf32_bigarm_oabi_vec
    ;;

  thumb-*-coff)
    targ_defvec=armcoff_little_vec
    targ_selvecs=armcoff_big_vec
    targ_underscore=yes
    ;;
  thumb-*-oabi)
    targ_defvec=bfd_elf32_littlearm_oabi_vec
    targ_selvecs=bfd_elf32_bigarm_oabi_vec
    ;;
  thumb-*-elf)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
  thumb-epoc-pe*)
    targ_defvec=arm_epoc_pe_little_vec
    targ_selvecs="arm_epoc_pe_little_vec arm_epoc_pe_big_vec arm_epoc_pei_little_vec arm_epoc_pei_big_vec"
    targ_underscore=no
    ;;
  thumb-*-pe*)
    targ_defvec=armpe_little_vec
    targ_selvecs="armpe_little_vec armpe_big_vec armpei_little_vec armpei_big_vec"
    targ_underscore=yes
    ;;
  strongarm-*-elf)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
  strongarm-*-coff)
    targ_defvec=armcoff_little_vec
    targ_selvecs=armcoff_big_vec
    targ_underscore=yes
    ;;
  xscale-*-elf)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
  xscale-*-coff)
    targ_defvec=armcoff_little_vec
    targ_selvecs=armcoff_big_vec
    targ_underscore=yes
    ;;

  a29k-*-ebmon* | a29k-*-udi* | a29k-*-coff* | a29k-*-sym1* | \
  a29k-*-vxworks* | a29k-*-sysv* | a29k-*rtems*)
    targ_defvec=a29kcoff_big_vec
    targ_selvecs=sunos_big_vec
    targ_underscore=yes
    ;;
  a29k-*-aout* | a29k-*-bsd* | a29k-*-vsta*)
    targ_defvec=sunos_big_vec
    targ_underscore=yes
    ;;

  avr-*-*)
    targ_defvec=bfd_elf32_avr_vec
    ;;

  c30-*-*aout* | tic30-*-*aout*)
    targ_defvec=tic30_aout_vec
    ;;
  c30-*-*coff* | tic30-*-*coff*)
    targ_defvec=tic30_coff_vec
    ;;

  c4x-*-*coff* | tic4x-*-*coff* | tic4x-*-rtems*)
    targ_defvec=tic4x_coff1_vec
    targ_selvecs="tic4x_coff1_beh_vec tic4x_coff2_vec tic4x_coff2_beh_vec tic4x_coff0_vec tic4x_coff0_beh_vec"
    targ_underscore=yes
    ;;

  c54x*-*-*coff* | tic54x-*-*coff*)
    targ_defvec=tic54x_coff1_vec
    targ_selvecs="tic54x_coff1_beh_vec tic54x_coff2_vec tic54x_coff2_beh_vec tic54x_coff0_vec tic54x_coff0_beh_vec"
    targ_underscore=yes
    ;;

  cris-*-*)
    targ_defvec=cris_aout_vec
    targ_selvecs="bfd_elf32_us_cris_vec bfd_elf32_cris_vec ieee_vec"
    targ_underscore=yes # Note: not true for bfd_elf32_cris_vec.
    ;;

  d10v-*-*)
    targ_defvec=bfd_elf32_d10v_vec
    ;;

  dlx-*-elf*)
    targ_defvec=bfd_elf32_dlx_big_vec
    targ_selvecs="bfd_elf32_dlx_big_vec"
    ;;

  d30v-*-*)
    targ_defvec=bfd_elf32_d30v_vec
    ;;

  fr30-*-elf)
    targ_defvec=bfd_elf32_fr30_vec
    ;;

  frv-*-elf)
    targ_defvec=bfd_elf32_frv_vec
    targ_selvecs=bfd_elf32_frvfdpic_vec
    ;;

  frv-*-*linux*)
    targ_defvec=bfd_elf32_frvfdpic_vec
    targ_selvecs=bfd_elf32_frv_vec
    ;;

  h8300*-*-elf)
    targ_defvec=bfd_elf32_h8300_vec
    targ_underscore=yes
    ;;

  h8300*-*-*)
    targ_defvec=h8300coff_vec
    targ_underscore=yes
    ;;

  h8500-*-*)
    targ_defvec=h8500coff_vec
    targ_underscore=yes
    ;;

#ifdef BFD64
  hppa64*-*-openbsd*)
    targ_defvec=bfd_elf64_hppa_vec
    targ_selvecs=bfd_elf64_hppa_linux_vec
    ;;
  hppa*64*-*-linux-gnu*)
    targ_defvec=bfd_elf64_hppa_linux_vec
    targ_selvecs=bfd_elf64_hppa_vec
    ;;
  hppa*64*-*-hpux11*)
    targ_defvec=bfd_elf64_hppa_vec
    targ_selvecs=bfd_elf64_hppa_linux_vec
    targ_cflags=-DHPUX_LARGE_AR_IDS
    ;;
#endif

  hppa*-*-linux-gnu* | hppa*-*-netbsd*)
    targ_defvec=bfd_elf32_hppa_linux_vec
    targ_selvecs=bfd_elf32_hppa_vec
    ;;
  hppa*-*-*elf* | hppa*-*-lites* | hppa*-*-sysv4* | hppa*-*-rtems* | hppa*-*-openbsd*)
    targ_defvec=bfd_elf32_hppa_vec
    targ_selvecs=bfd_elf32_hppa_linux_vec
    ;;

#if defined (HOST_HPPAHPUX) || defined (HOST_HPPABSD) || defined (HOST_HPPAOSF) || defined (HOST_HPPAMPEIX)
  hppa*-*-bsd*)
    targ_defvec=som_vec
    targ_selvecs=bfd_elf32_hppa_vec
    ;;
  hppa*-*-hpux* | hppa*-*-hiux* | hppa*-*-mpeix*)
    targ_defvec=som_vec
    ;;
  hppa*-*-osf*)
    targ_defvec=som_vec
    targ_selvecs=bfd_elf32_hppa_vec
    ;;
#endif /* defined (HOST_HPPAHPUX) || defined (HOST_HPPABSD) || defined (HOST_HPPAOSF) */

  i370-*-*) 
    targ_defvec=bfd_elf32_i370_vec
    targ_selvecs="bfd_elf32_i370_vec"
    ;;
  i[3-7]86-*-sco3.2v5*coff)
    targ_defvec=i386coff_vec
    targ_selvecs=bfd_elf32_i386_vec
    ;;
  i[3-7]86-*-sysv4* | i[3-7]86-*-unixware* | i[3-7]86-*-solaris2* | \
  i[3-7]86-*-elf | i[3-7]86-*-sco3.2v5* | \
  i[3-7]86-*-dgux* | i[3-7]86-*-sysv5*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs=i386coff_vec
    ;;
  i[3-7]86-*-kaos*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs=bfd_elf32_i386_vec
    ;;
  i[3-7]86-*-nto*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs=i386coff_vec
    ;;
  i[3-7]86-*-aros*)
    targ_defvec=bfd_elf32_i386_vec
    ;;
  i[3-7]86-*-chorus*)
    targ_defvec=bfd_elf32_i386_vec
    ;;
  *-*-msdosdjgpp* | *-*-go32* | *-go32-rtems* )
    targ_defvec=go32coff_vec
    targ_selvecs="go32stubbedcoff_vec i386aout_vec"
    ;;
  i[3-7]86-*-sysv* | i[3-7]86-*-isc* | i[3-7]86-*-sco* | i[3-7]86-*-coff | \
  i[3-7]86-*-aix*)
    targ_defvec=i386coff_vec
    ;;
  i[3-7]86*-*-rtemscoff*)
    targ_defvec=i386coff_vec
    targ_selvecs="bfd_elf32_i386_vec i386aout_vec"
    ;;
  i[3-7]86-*-rtemself* | i[3-7]86-*-rtems*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs="i386coff_vec i386aout_vec"
    ;;
  i[3-7]86-*-darwin* | i[3-7]86-*-macos10* | i[3-7]86-*-rhapsody*)
    targ_defvec=mach_o_le_vec
    targ_selvecs="mach_o_le_vec mach_o_be_vec mach_o_fat_vec pef_vec pef_xlib_vec sym_vec"
    targ_archs="bfd_i386_arch bfd_powerpc_arch bfd_rs6000_arch"
    ;;
 i[3-7]86-sequent-bsd*)
    targ_defvec=i386dynix_vec
    targ_underscore=yes
    ;;
  i[3-7]86-*-bsd*)
    targ_defvec=i386bsd_vec
    targ_underscore=yes
    ;;
  i[3-7]86-*-freebsdaout* | i[3-7]86-*-freebsd[12].* | \
  i[3-7]86-*-freebsd[12])
    targ_defvec=i386freebsd_vec
    targ_selvecs=i386bsd_vec
    targ_underscore=yes
    ;;
  i[3-7]86-*-freebsd* | i[3-7]86-*-kfreebsd*-gnu)
    targ_defvec=bfd_elf32_i386_freebsd_vec
    targ_selvecs=i386coff_vec
    # FreeBSD <= 4.0 supports only the old nonstandard way of ABI labelling.
    case "${targ}" in
      i[3-7]86-*-freebsd3* | i[3-7]86-*-freebsd4 | i[3-7]86-*-freebsd4.0*)
	targ_cflags=-DOLD_FREEBSD_ABI_LABEL ;;
    esac
    ;;
  i[3-7]86-*-netbsdelf* | i[3-7]86-*-netbsd*-gnu* | i[3-7]86-*-knetbsd*-gnu)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs=i386netbsd_vec
    targ64_selvecs=bfd_elf64_x86_64_vec
    ;;
  i[3-7]86-*-netbsdpe*)
    targ_defvec=i386pe_vec
    targ_selvecs="i386pe_vec i386pei_vec bfd_elf32_i386_vec"
    ;;
  i[3-7]86-*-netbsdaout* | i[3-7]86-*-netbsd* | \
  i[3-7]86-*-openbsd[0-2].* | i[3-7]86-*-openbsd3.[0-3])
    targ_defvec=i386netbsd_vec
    targ_selvecs="bfd_elf32_i386_vec i386bsd_vec"
    targ_underscore=yes
    ;;
  i[3-7]86-*-openbsd*) 
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs="i386netbsd_vec bfd_efi_app_ia32_vec"
    ;;
  i[3-7]86-*-netware*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs="nlm32_i386_vec i386coff_vec i386aout_vec"
    ;;
  i[3-7]86-*-linux*aout*)
    targ_defvec=i386linux_vec
    targ_selvecs=bfd_elf32_i386_vec
    targ_underscore=yes
    ;;
  i[3-7]86-*-linux-gnu*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs="i386linux_vec bfd_efi_app_ia32_vec"
    targ64_selvecs=bfd_elf64_x86_64_vec
    ;;
#ifdef BFD64
  x86_64-*-freebsd* | x86_64-*-kfreebsd*-gnu)
    targ_defvec=bfd_elf64_x86_64_vec
    targ_selvecs="bfd_elf32_i386_vec i386coff_vec bfd_efi_app_ia32_vec"
    ;;
  x86_64-*-netbsd*)
    targ_defvec=bfd_elf64_x86_64_vec
    targ_selvecs="bfd_elf32_i386_vec i386netbsd_vec i386coff_vec bfd_efi_app_ia32_vec"
    ;;
  x86_64-*-openbsd*)
    targ_defvec=bfd_elf64_x86_64_vec
    targ_selvecs="bfd_elf32_i386_vec i386coff_vec bfd_efi_app_ia32_vec bfd_efi_app_x86_64_vec"
    ;;
  x86_64-*-linux-gnu*)
    targ_defvec=bfd_elf64_x86_64_vec
    targ_selvecs="bfd_elf32_i386_vec i386linux_vec bfd_efi_app_ia32_vec"
    ;;
#endif
  i[3-7]86-*-lynxos*)
    targ_defvec=i386lynx_coff_vec
    targ_selvecs=i386lynx_aout_vec
    ;;
  i[3-7]86-*-gnu*)
    targ_defvec=bfd_elf32_i386_vec
    ;;
  i[3-7]86-*-mach* | i[3-7]86-*-osf1mk*)
    targ_defvec=i386mach3_vec
    targ_cflags=-DSTAT_FOR_EXEC
    targ_underscore=yes
    ;;
  i[3-7]86-*-os9k)
    targ_defvec=i386os9k_vec
    ;;
  i[3-7]86-*-msdos*)
    targ_defvec=i386aout_vec
    targ_selvecs=i386msdos_vec
    ;;
  i[3-7]86-*-moss*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs="i386msdos_vec i386aout_vec"
    ;;
  i[3-7]86-*-beospe*)
    targ_defvec=i386pe_vec
    targ_selvecs="i386pe_vec i386pei_vec"
    ;;
  i[3-7]86-*-beoself* | i[3-7]86-*-beos*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs="i386pe_vec i386pei_vec"
    ;;
  i[3-7]86-*-interix*)
    targ_defvec=i386pei_vec
    targ_selvecs="i386pe_vec"
    # FIXME: This should eventually be checked at runtime.
    targ_cflags=-DSTRICT_PE_FORMAT
    ;;
  i[3-7]86-*-mingw32* | i[3-7]86-*-cygwin* | i[3-7]86-*-winnt | i[3-7]86-*-pe)
    targ_defvec=i386pe_vec
    targ_selvecs="i386pe_vec i386pei_vec bfd_elf32_i386_vec"
    ;;
  i[3-7]86-none-*)
    targ_defvec=i386coff_vec
    ;;
  i[3-7]86-*-aout* | i[3-7]86*-*-vsta*)
    targ_defvec=i386aout_vec
    ;;
  i[3-7]86-*-vxworks)
    targ_defvec=bfd_elf32_i386_vec
    targ_underscore=yes
    ;;
  i[3-7]86-*-chaos)
    targ_defvec=bfd_elf32_i386_vec
    targ_selfvecs=i386chaos_vec
    ;;

  i860-*-mach3* | i860-*-osf1* | i860-*-coff*)
    targ_defvec=i860coff_vec
    ;;
  i860-stardent-sysv4* | i860-stardent-elf*)
    targ_defvec=bfd_elf32_i860_little_vec
    targ_selvecs="bfd_elf32_i860_vec bfd_elf32_i860_little_vec"
    ;;
  i860-*-sysv4* | i860-*-elf*)
    targ_defvec=bfd_elf32_i860_vec
    ;;

  i960-*-vxworks4* | i960-*-vxworks5.0)
    targ_defvec=b_out_vec_little_host
    targ_selvecs="b_out_vec_big_host icoff_little_vec icoff_big_vec ieee_vec"
    targ_underscore=yes
    ;;
  i960-*-vxworks5.* | i960-*-coff* | i960-*-sysv* | i960-*-rtems*)
    targ_defvec=icoff_little_vec
    targ_selvecs="icoff_big_vec b_out_vec_little_host b_out_vec_big_host ieee_vec"
    targ_underscore=yes
    ;;
  i960-*-vxworks* | i960-*-aout* | i960-*-bout* | i960-*-nindy*)
    targ_defvec=b_out_vec_little_host
    targ_selvecs="b_out_vec_big_host icoff_little_vec icoff_big_vec ieee_vec"
    targ_underscore=yes
    ;;
  i960-*-elf*)
    targ_defvec=bfd_elf32_i960_vec
    targ_selvecs="icoff_little_vec icoff_big_vec"
    ;;

  ip2k-*-elf)
    targ_defvec=bfd_elf32_ip2k_vec
    ;;

  iq2000-*-elf)
    targ_defvec=bfd_elf32_iq2000_vec
    ;;

  m32r*le-*-linux*)
    targ_defvec=bfd_elf32_m32rlelin_vec
    targ_selvecs="bfd_elf32_m32rlin_vec  bfd_elf32_m32rlelin_vec"
    ;;
                                                                                
  m32r*-*-linux*)
    targ_defvec=bfd_elf32_m32rlin_vec
    targ_selvecs="bfd_elf32_m32rlin_vec  bfd_elf32_m32rlelin_vec"
    ;;
                                                                                
  m32r*le-*-*)
    targ_defvec=bfd_elf32_m32rle_vec
    targ_selvecs="bfd_elf32_m32r_vec bfd_elf32_m32rle_vec"
    ;;

  m32r-*-*)
    targ_defvec=bfd_elf32_m32r_vec
    ;;

  m68hc11-*-* | m6811-*-*)
    targ_defvec=bfd_elf32_m68hc11_vec
    targ_selvecs="bfd_elf32_m68hc11_vec bfd_elf32_m68hc12_vec"
    ;;
  m68hc12-*-* | m6812-*-*)
    targ_defvec=bfd_elf32_m68hc12_vec
    targ_selvecs="bfd_elf32_m68hc11_vec bfd_elf32_m68hc12_vec"
    ;;

  m68*-apollo-*)
    targ_defvec=apollocoff_vec
    ;;
  m68*-bull-sysv*)
    targ_defvec=m68kcoffun_vec
    targ_underscore=yes
    ;;
  m68*-motorola-sysv*)
    targ_defvec=m68ksysvcoff_vec
    ;;
  m68*-hp-bsd*)
    targ_defvec=hp300bsd_vec
    targ_underscore=yes
    ;;
  m68*-*-aout*)
    targ_defvec=aout0_big_vec
    # We include cisco_core_big_vec here, rather than making a separate cisco
    # configuration, so that cisco-core.c gets routinely tested at
    # least for compilation.
    targ_selvecs="cisco_core_big_vec ieee_vec"
    targ_underscore=yes
    ;;
  m68*-*-rtemscoff*)
    targ_defvec=m68kcoff_vec
    targ_selvecs="m68kcoff_vec versados_vec ieee_vec aout0_big_vec"
    ;;
  m68*-*-elf* | m68*-*-sysv4* | m68*-*-uclinux*)
    targ_defvec=bfd_elf32_m68k_vec
    targ_selvecs="m68kcoff_vec ieee_vec"
    ;;
  m68*-*-rtems*)
    targ_defvec=bfd_elf32_m68k_vec
    targ_selvecs="m68kcoff_vec versados_vec ieee_vec aout0_big_vec"
    ;;
  m68*-*-coff* | m68*-*-sysv*)
    targ_defvec=m68kcoff_vec
    targ_selvecs="m68kcoff_vec versados_vec ieee_vec"
    ;;
  m68*-*-hpux*)
    targ_defvec=hp300hpux_vec
    targ_underscore=yes
    ;;
  m68*-*-linux*aout*)
    targ_defvec=m68klinux_vec
    targ_selvecs=bfd_elf32_m68k_vec
    targ_underscore=yes
    ;;
  m68*-*-linux-gnu*)
    targ_defvec=bfd_elf32_m68k_vec
    targ_selvecs=m68klinux_vec
    ;;
  m68*-*-gnu*)
    targ_defvec=bfd_elf32_m68k_vec
    # targ_selvecs=m68kmach3_vec
    # targ_cflags=-DSTAT_FOR_EXEC
    ;;
  m68*-*-lynxos*)
    targ_defvec=m68klynx_coff_vec
    targ_selvecs=m68klynx_aout_vec
    ;;
  m68*-hp*-netbsd*)
    targ_defvec=m68k4knetbsd_vec
    targ_selvecs="m68knetbsd_vec hp300bsd_vec sunos_big_vec"
    targ_underscore=yes
    ;;
  m68*-*-netbsdelf*) 
    targ_defvec=bfd_elf32_m68k_vec
    targ_selvecs="m68knetbsd_vec m68k4knetbsd_vec hp300bsd_vec sunos_big_vec"
    ;;
  m68*-*-netbsdaout* | m68*-*-netbsd*)
    targ_defvec=m68knetbsd_vec
    targ_selvecs="m68k4knetbsd_vec bfd_elf32_m68k_vec hp300bsd_vec sunos_big_vec"
    targ_underscore=yes
    ;;
  m68*-*-openbsd*)
    targ_defvec=bfd_elf32_m68k_vec
    targ_selvecs="m68knetbsd_vec m68k4knetbsd_vec hp300bsd_vec sunos_big_vec"
    ;;
  m68*-*-sunos* | m68*-*-os68k* | m68*-*-vxworks* | m68*-netx-* | \
  m68*-*-bsd* | m68*-*-vsta*)
    targ_defvec=sunos_big_vec
    targ_underscore=yes
    ;;
  m68*-ericsson-*)
    targ_defvec=sunos_big_vec
    targ_selvecs="m68kcoff_vec versados_vec tekhex_vec"
    targ_underscore=yes
    ;;
  m68*-cbm-*)
    targ_defvec=bfd_elf32_m68k_vec
    targ_selvecs=m68kcoff_vec
    ;;
  m68*-apple-aux*)
    targ_defvec=m68kaux_coff_vec
    ;;
  m68*-*-psos*)
    targ_defvec=bfd_elf32_m68k_vec
    targ_selvecs=ieee_vec
    targ_underscore=yes
    ;;

  m88*-harris-cxux* | m88*-*-dgux* | m88*-*-sysv4*)
    targ_defvec=bfd_elf32_m88k_vec
    targ_selvecs=m88kbcs_vec
    ;;
  m88*-*-mach3*)
    targ_defvec=m88kmach3_vec
    targ_cflags=-DSTAT_FOR_EXEC
    ;;
  m88k-*-openbsd*)
    targ_defvec=bfd_elf32_m88k_vec
    targ_selvecs="m88kopenbsd_vec m88kbcs_vec"
    ;;
  m88*-*-*)
    targ_defvec=m88kbcs_vec
    targ_underscore=yes
    ;;

  mcore-*-elf)
    targ_defvec=bfd_elf32_mcore_big_vec
    targ_selvecs="bfd_elf32_mcore_big_vec bfd_elf32_mcore_little_vec"
    ;;
  mcore-*-pe)
    targ_defvec=mcore_pe_big_vec
    targ_selvecs="mcore_pe_big_vec mcore_pe_little_vec mcore_pei_big_vec mcore_pei_little_vec"
    ;;

  mips*-big-*)
    targ_defvec=ecoff_big_vec
    targ_selvecs=ecoff_little_vec
    ;;
#ifdef BFD64
  mips64*el-*-openbsd*)
    targ_defvec=bfd_elf64_tradlittlemips_vec
    targ_selvecs="bfd_elf32_ntradlittlemips_vec bfd_elf32_ntradbigmips_vec bfd_elf32_tradlittlemips_vec bfd_elf32_tradbigmips_vec bfd_elf64_tradbigmips_vec ecoff_little_vec ecoff_big_vec"
    ;;
  mips64*-*-openbsd*)
    targ_defvec=bfd_elf64_tradbigmips_vec
    targ_selvecs="bfd_elf32_ntradlittlemips_vec bfd_elf32_ntradbigmips_vec bfd_elf32_tradlittlemips_vec bfd_elf32_tradbigmips_vec bfd_elf64_tradlittlemips_vec ecoff_big_vec ecoff_little_vec"
    ;;
#endif
  mips*el-*-netbsd* | mipsel-*-openbsd*)
    targ_defvec=bfd_elf32_littlemips_vec
    targ_selvecs="bfd_elf32_bigmips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec ecoff_little_vec ecoff_big_vec"
    ;;
  mips*-*-netbsd* | mips-*-openbsd*)
    targ_defvec=bfd_elf32_bigmips_vec
    targ_selvecs="bfd_elf32_littlemips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec ecoff_big_vec ecoff_little_vec"
    ;;
  mips*-dec-* | mips*el-*-ecoff*)
    targ_defvec=ecoff_little_vec
    targ_selvecs=ecoff_big_vec
    ;;
  mips*-*-ecoff*)
    targ_defvec=ecoff_big_vec
    targ_selvecs=ecoff_little_vec
    ;;
#ifdef BFD64
  mips*-*-irix6*)
    targ_defvec=bfd_elf32_nbigmips_vec
    targ_selvecs="bfd_elf32_nlittlemips_vec bfd_elf32_bigmips_vec bfd_elf32_littlemips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec"
    ;;
#endif
  mips*-*-irix5*)
    targ_defvec=bfd_elf32_bigmips_vec
    targ_selvecs="bfd_elf32_littlemips_vec ecoff_big_vec ecoff_little_vec"
    ;;
  mips*-sgi-* | mips*-*-bsd*)
    targ_defvec=ecoff_big_vec
    targ_selvecs=ecoff_little_vec
    ;;
  mips*-*-lnews*)
    targ_defvec=ecoff_biglittle_vec
    targ_selvecs="ecoff_little_vec ecoff_big_vec"
    ;;
  mips*-*-sysv4*)
    targ_defvec=bfd_elf32_tradbigmips_vec
    targ_selvecs="bfd_elf32_tradlittlemips_vec ecoff_big_vec ecoff_little_vec"
    ;;
  mips*-*-sysv* | mips*-*-riscos*)
    targ_defvec=ecoff_big_vec
    targ_selvecs=ecoff_little_vec
    ;;
  mips*el-*-elf* | mips*el-*-rtems* | mips*el-*-vxworks* | mips*-*-chorus*)
    targ_defvec=bfd_elf32_littlemips_vec
    targ_selvecs="bfd_elf32_bigmips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec"
    ;;
  mips*-*-elf* | mips*-*-rtems* | mips*-*-vxworks | mips*-*-windiss)
    targ_defvec=bfd_elf32_bigmips_vec
    targ_selvecs="bfd_elf32_littlemips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec"
    ;;
  mips*-*-none)
    targ_defvec=bfd_elf32_bigmips_vec
    targ_selvecs="bfd_elf32_littlemips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec"
    ;;
#ifdef BFD64
  mips64*el-*-linux*)
    targ_defvec=bfd_elf32_ntradlittlemips_vec
    targ_selvecs="bfd_elf32_ntradbigmips_vec bfd_elf32_tradlittlemips_vec bfd_elf32_tradbigmips_vec bfd_elf64_tradlittlemips_vec bfd_elf64_tradbigmips_vec"
    ;;
  mips64*-*-linux*)
    targ_defvec=bfd_elf32_ntradbigmips_vec
    targ_selvecs="bfd_elf32_ntradlittlemips_vec bfd_elf32_tradbigmips_vec bfd_elf32_tradlittlemips_vec bfd_elf64_tradbigmips_vec bfd_elf64_tradlittlemips_vec"
    ;;
#endif
  mips*el-*-linux*)
    targ_defvec=bfd_elf32_tradlittlemips_vec
    targ_selvecs="bfd_elf32_tradbigmips_vec ecoff_little_vec ecoff_big_vec bfd_elf32_ntradlittlemips_vec bfd_elf64_tradlittlemips_vec bfd_elf32_ntradbigmips_vec bfd_elf64_tradbigmips_vec"
    want64=true
    ;;
  mips*-*-linux*)
    targ_defvec=bfd_elf32_tradbigmips_vec
    targ_selvecs="bfd_elf32_tradlittlemips_vec ecoff_big_vec ecoff_little_vec bfd_elf32_ntradbigmips_vec bfd_elf64_tradbigmips_vec bfd_elf32_ntradlittlemips_vec bfd_elf64_tradlittlemips_vec"
    want64=true
    ;;
#ifdef BFD64
  mmix-*-*)
    targ_defvec=bfd_elf64_mmix_vec
    targ_selvecs=bfd_mmo_vec
    ;;
#endif
  mn10200-*-*)
    targ_defvec=bfd_elf32_mn10200_vec
    ;;

  mn10300-*-*)
    targ_defvec=bfd_elf32_mn10300_vec
    targ_underscore=yes
    ;;

  msp430-*-*)
    targ_defvec=bfd_elf32_msp430_vec
    ;;

  ns32k-pc532-mach* | ns32k-pc532-ux*)
    targ_defvec=pc532machaout_vec
    targ_underscore=yes
    ;;
  ns32k-*-netbsd* | ns32k-*-lites*)
    targ_defvec=pc532netbsd_vec
    targ_underscore=yes
    ;;

  openrisc-*-elf)
    targ_defvec=bfd_elf32_openrisc_vec
    ;;

  or32-*-coff)
    targ_defvec=or32coff_big_vec
    targ_underscore=yes
    ;;

  or32-*-elf | or32-*-rtems*)
    targ_defvec=bfd_elf32_or32_big_vec
    ;;

  pdp11-*-*)
    targ_defvec=pdp11_aout_vec
    targ_underscore=yes
    ;;

  pj-*-*)
    targ_defvec=bfd_elf32_pj_vec
    targ_selvecs="bfd_elf32_pj_vec bfd_elf32_pjl_vec"
    ;;

  pjl-*-*)
    targ_defvec=bfd_elf32_pjl_vec
    targ_selvecs="bfd_elf32_pjl_vec bfd_elf32_pj_vec bfd_elf32_i386_vec"
    ;;

  powerpc-*-aix5.[01])
    targ_defvec=rs6000coff_vec
    targ_selvecs="aix5coff64_vec"
    want64=true
    ;;
#ifdef BFD64
  powerpc64-*-aix5.[01])
    targ_defvec=aix5coff64_vec
    targ_selvecs="rs6000coff_vec"
    want64=true
    ;;
#endif
  powerpc-*-aix5*)
    targ_cflags=-DAIX_WEAK_SUPPORT
    targ_defvec=rs6000coff_vec
    targ_selvecs="aix5coff64_vec"
    want64=true
    ;;
#ifdef BFD64
  powerpc64-*-aix5*)
    targ_cflags=-DAIX_WEAK_SUPPORT
    targ_defvec=aix5coff64_vec
    targ_selvecs="rs6000coff_vec"
    want64=true
    ;;
#endif

  powerpc-*-aix* | powerpc-*-beos* | rs6000-*-*)
    targ_defvec=rs6000coff_vec
    targ64_selvecs=rs6000coff64_vec
    case "${targ}" in
        *-*-aix4.[3456789]* | *-*-aix[56789]*)
	want64=true;;
	*)
	targ_cflags=-DSMALL_ARCHIVE;;
    esac
    ;;
#ifdef BFD64
  powerpc64-*-aix*)
    targ_defvec=rs6000coff64_vec
    targ_selvecs=rs6000coff_vec
    ;;
  powerpc64-*-elf* | powerpc-*-elf64* | powerpc64-*-linux* | \
  powerpc64-*-*bsd*)
    targ_defvec=bfd_elf64_powerpc_vec
    targ_selvecs="bfd_elf64_powerpcle_vec bfd_elf32_powerpc_vec bfd_elf32_powerpcle_vec rs6000coff_vec rs6000coff64_vec"
    ;;
  powerpc64le-*-elf* | powerpcle-*-elf64*)
    targ_defvec=bfd_elf64_powerpcle_vec
    targ_selvecs="bfd_elf64_powerpc_vec bfd_elf32_powerpcle_vec bfd_elf32_powerpc_vec rs6000coff_vec rs6000coff64_vec"
    ;;
#endif
  powerpc-*-*bsd* | powerpc-*-elf* | powerpc-*-sysv4* | powerpc-*-eabi* | \
  powerpc-*-solaris2* | powerpc-*-linux-gnu* | powerpc-*-rtems* | \
  powerpc-*-chorus* | powerpc-*-vxworks* | powerpc-*-windiss*)
    targ_defvec=bfd_elf32_powerpc_vec
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpcle_vec ppcboot_vec"
    targ64_selvecs="bfd_elf64_powerpc_vec bfd_elf64_powerpcle_vec"
    ;;
  powerpc-*-kaos*)
    targ_defvec=bfd_elf32_powerpc_vec
    targ_selvecs="bfd_elf32_powerpcle_vec ppcboot_vec"
    targ64_selvecs="bfd_elf64_powerpc_vec bfd_elf64_powerpcle_vec"
    ;;
  powerpc-*-darwin* | powerpc-*-macos10* | powerpc-*-rhapsody*)
    targ_defvec=mach_o_be_vec
    targ_selvecs="mach_o_be_vec mach_o_le_vec mach_o_fat_vec pef_vec pef_xlib_vec sym_vec"
    targ_archs="bfd_powerpc_arch bfd_rs6000_arch bfd_i386_arch"
    ;;
  powerpc-*-macos* | powerpc-*-mpw*)
    targ_defvec=pmac_xcoff_vec
    ;;
  powerpc-*-netware*)
    targ_defvec=bfd_elf32_powerpc_vec
    targ_selvecs="nlm32_powerpc_vec rs6000coff_vec"
    ;;
  powerpc-*-nto*)
    targ_defvec=bfd_elf32_powerpc_vec
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpcle_vec ppcboot_vec"
    ;;
  powerpcle-*-nto*)
    targ_defvec=bfd_elf32_powerpcle_vec
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpc_vec ppcboot_vec"
    ;;
  powerpcle-*-elf* | powerpcle-*-sysv4* | powerpcle-*-eabi* | \
  powerpcle-*-solaris2* | powerpcle-*-linux-gnu* | powerpcle-*-vxworks* |\
  powerpcle-*-rtems*)
    targ_defvec=bfd_elf32_powerpcle_vec
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpc_vec ppcboot_vec"
    targ64_selvecs="bfd_elf64_powerpc_vec bfd_elf64_powerpcle_vec"
    ;;
  powerpcle-*-pe | powerpcle-*-winnt* | powerpcle-*-cygwin*)
    targ_defvec=bfd_powerpcle_pe_vec
    targ_selvecs="bfd_powerpcle_pei_vec bfd_powerpc_pei_vec bfd_powerpcle_pe_vec bfd_powerpc_pe_vec"
    ;;

  s390-*-linux*)
    targ_defvec=bfd_elf32_s390_vec
    targ64_selvecs=bfd_elf64_s390_vec
    ;;
#ifdef BFD64
  s390x-*-linux*)
    targ_defvec=bfd_elf64_s390_vec
    targ_selvecs=bfd_elf32_s390_vec
    ;;
#endif

#ifdef BFD64
  sh64l*-*-elf*)
    targ_defvec=bfd_elf32_sh64l_vec
    targ_selvecs="bfd_elf32_sh64_vec bfd_elf64_sh64l_vec bfd_elf64_sh64_vec bfd_elf32_shl_vec bfd_elf32_sh_vec"
    targ_underscore=yes
    ;;
  sh64-*-elf*)
    targ_defvec=bfd_elf32_sh64_vec
    targ_selvecs="bfd_elf32_sh64l_vec bfd_elf64_sh64_vec bfd_elf64_sh64l_vec bfd_elf32_sh_vec bfd_elf32_shl_vec"
    targ_underscore=yes
    ;;
  sh64eb-*-linux*)
    targ_defvec=bfd_elf32_sh64blin_vec
    targ_selvecs="bfd_elf32_sh64lin_vec bfd_elf64_sh64blin_vec bfd_elf64_sh64lin_vec bfd_elf32_shblin_vec bfd_elf32_shlin_vec"
    ;;
  sh64-*-linux*)
    targ_defvec=bfd_elf32_sh64lin_vec
    targ_selvecs="bfd_elf32_sh64blin_vec bfd_elf64_sh64lin_vec bfd_elf64_sh64blin_vec bfd_elf32_shlin_vec bfd_elf32_shblin_vec"
    ;;
#endif /* BFD64 */

  sh-*-linux*)
    targ_defvec=bfd_elf32_shblin_vec
    targ_selvecs=bfd_elf32_shlin_vec
#ifdef BFD64
    targ_selvecs="${targ_selvecs} bfd_elf32_sh64lin_vec bfd_elf32_sh64blin_vec bfd_elf64_sh64lin_vec bfd_elf64_sh64blin_vec"
#endif
    ;;
  sh*eb-*-linux*)
    targ_defvec=bfd_elf32_shblin_vec
    targ_selvecs=bfd_elf32_shlin_vec
    ;;
  sh*-*-linux*)
    targ_defvec=bfd_elf32_shlin_vec
    targ_selvecs=bfd_elf32_shblin_vec
    ;;

#ifdef BFD64
  sh5le-*-netbsd*)
    targ_defvec=bfd_elf32_sh64lnbsd_vec
    targ_selvecs="bfd_elf32_sh64nbsd_vec bfd_elf64_sh64lnbsd_vec bfd_elf64_sh64nbsd_vec"
    ;;
  sh5-*-netbsd*)
    targ_defvec=bfd_elf32_sh64nbsd_vec
    targ_selvecs="bfd_elf32_sh64lnbsd_vec bfd_elf64_sh64lnbsd_vec bfd_elf64_sh64nbsd_vec"
    ;;

  sh64le-*-netbsd*)
    targ_defvec=bfd_elf64_sh64lnbsd_vec
    targ_selvecs="bfd_elf64_sh64nbsd_vec bfd_elf32_sh64lnbsd_vec bfd_elf32_sh64nbsd_vec"
    ;;
  sh64-*-netbsd*)
    targ_defvec=bfd_elf64_sh64nbsd_vec
    targ_selvecs="bfd_elf64_sh64lnbsd_vec bfd_elf32_sh64lnbsd_vec bfd_elf32_sh64nbsd_vec"
    ;;
#endif

  sh*l*-*-netbsdelf*)
    targ_defvec=bfd_elf32_shlnbsd_vec
    targ_selvecs="bfd_elf32_shnbsd_vec shcoff_vec shlcoff_vec"
#ifdef BFD64
    targ_selvecs="${targ_selvecs} bfd_elf32_sh64lnbsd_vec bfd_elf32_sh64nbsd_vec bfd_elf64_sh64lnbsd_vec bfd_elf64_sh64nbsd_vec"
#endif
    ;;
  sh-*-netbsdelf*)
    targ_defvec=bfd_elf32_shnbsd_vec
    targ_selvecs="bfd_elf32_shlnbsd_vec shcoff_vec shlcoff_vec"
#ifdef BFD64
    targ_selvecs="${targ_selvecs} bfd_elf32_sh64lnbsd_vec bfd_elf32_sh64nbsd_vec bfd_elf64_sh64lnbsd_vec bfd_elf64_sh64nbsd_vec"
#endif
    ;;
  sh*-*-netbsdelf*)
    targ_defvec=bfd_elf32_shnbsd_vec
    targ_selvecs="bfd_elf32_shlnbsd_vec shcoff_vec shlcoff_vec"
    ;;
  sh*-*-openbsd*)
    targ_defvec=bfd_elf32_shlobsd_vec
    targ_selvecs="bfd_elf32_shobsd_vec"
    ;;
  shl*-*-elf* | sh[1234]l*-*-elf* | sh3el*-*-elf* | shl*-*-kaos*)
    targ_defvec=bfd_elf32_shl_vec
    targ_selvecs="bfd_elf32_sh_vec shlcoff_vec shcoff_vec shlcoff_small_vec shcoff_small_vec"
#ifdef BFD64
    targ_selvecs="${targ_selvecs} bfd_elf32_sh64_vec bfd_elf32_sh64l_vec bfd_elf64_sh64_vec bfd_elf64_sh64l_vec"
#endif
    targ_underscore=yes
    ;;
  sh-*-rtemscoff*)
    targ_defvec=shcoff_vec
    targ_selvecs="shcoff_vec shlcoff_vec shcoff_small_vec shlcoff_small_vec"
    targ_underscore=yes
    ;;
  sh-*-elf* | sh[1234]*-elf* | sh-*-rtems* | sh-*-kaos*)
    targ_defvec=bfd_elf32_sh_vec
    targ_selvecs="bfd_elf32_shl_vec shcoff_vec shlcoff_vec shcoff_small_vec shlcoff_small_vec"
#ifdef BFD64
    targ_selvecs="${targ_selvecs} bfd_elf32_sh64_vec bfd_elf32_sh64l_vec bfd_elf64_sh64_vec bfd_elf64_sh64l_vec"
#endif
    targ_underscore=yes
    ;;
  sh-*-nto*)
    targ_defvec=bfd_elf32_sh_vec
    targ_selvecs="bfd_elf32_shl_vec shcoff_vec shlcoff_vec shcoff_small_vec shlcoff_small_vec"
    targ_underscore=yes
    ;;
  sh-*-pe)
    targ_defvec=shlpe_vec
    targ_selvecs="shlpe_vec shlpei_vec"
    targ_underscore=yes
    ;;
  sh-*-vxworks)
    targ_defvec=bfd_elf32_sh_vec
    targ_selvecs="bfd_elf32_shl_vec"
    # FIXME None of the following are actually used on this target, but
    # they're necessary for coff-sh.c (which is unconditionally used) to be
    # compiled correctly.
    targ_selvecs="$targ_selvecs shcoff_vec shlcoff_vec shcoff_small_vec shlcoff_small_vec"
    ;;
  sh-*-*)
    targ_defvec=shcoff_vec
    targ_selvecs="shcoff_vec shlcoff_vec shcoff_small_vec shlcoff_small_vec"
    targ_underscore=yes
    ;;

  sparclet-*-aout*)
    targ_defvec=sunos_big_vec
    targ_selvecs=sparcle_aout_vec
    targ_underscore=yes
    ;;
  sparc86x-*-aout*)
    targ_defvec=sunos_big_vec
    targ_underscore=yes
    ;;
  sparclite-*-elf* | sparc86x-*-elf*)
    targ_defvec=bfd_elf32_sparc_vec
    ;;
  sparc*-*-chorus*)
    targ_defvec=bfd_elf32_sparc_vec
    ;;
  sparc-*-linux*aout*)
    targ_defvec=sparclinux_vec
    targ_selvecs="bfd_elf32_sparc_vec sunos_big_vec"
    targ_underscore=yes
    ;;
  sparc-*-linux-gnu*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs="sparclinux_vec bfd_elf64_sparc_vec sunos_big_vec"
    ;;
  sparc-*-lynxos*)
    targ_defvec=sparclynx_coff_vec
    targ_selvecs=sparclynx_aout_vec
    ;;
  sparc-*-netbsdelf*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs=sparcnetbsd_vec
    ;;
  sparc-*-netbsdaout* | sparc-*-netbsd*)
    targ_defvec=sparcnetbsd_vec
    targ_selvecs=bfd_elf32_sparc_vec
    targ_underscore=yes
    ;;
  sparc-*-openbsd[0-2].* | sparc-*-openbsd3.[0-1])
    targ_defvec=sparcnetbsd_vec
    targ_underscore=yes
    ;;
  sparc-*-openbsd*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs=sparcnetbsd_vec
    ;;
  sparc-*-elf* | sparc-*-solaris2.[0-6] | sparc-*-solaris2.[0-6].*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs=sunos_big_vec
    ;;
#ifdef BFD64
  sparc-*-solaris2* | sparcv9-*-solaris2* | sparc64-*-solaris2*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs="bfd_elf64_sparc_vec sunos_big_vec"
    ;;
#endif
  sparc-*-sysv4*)
    targ_defvec=bfd_elf32_sparc_vec
    ;;
  sparc-*-netware*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs="nlm32_sparc_vec sunos_big_vec"
    ;;
#ifdef BFD64
  sparc64-*-aout*)
    targ_defvec=sunos_big_vec
    targ_underscore=yes
    ;;
  sparc64-*-linux-gnu*)
    targ_defvec=bfd_elf64_sparc_vec
    targ_selvecs="bfd_elf32_sparc_vec sparclinux_vec sunos_big_vec"
    ;;
  sparc64-*-elf*)
    targ_defvec=bfd_elf64_sparc_vec
    targ_selvecs=bfd_elf32_sparc_vec
    ;;
#endif /* BFD64 */
  sparc*-*-coff*)
    targ_defvec=sparccoff_vec
    ;;
  sparc*-*-rtemsaout*)
    targ_defvec=sunos_big_vec
    targ_selvecs="bfd_elf32_sparc_vec sparccoff_vec"
    targ_underscore=yes
    ;;
  sparc*-*-rtems* | sparc*-*-rtemself*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs="sunos_big_vec sparccoff_vec"
    ;;
  sparc*-*-* | sparc*-*-rtems*)
    targ_defvec=sunos_big_vec
    targ_underscore=yes
    ;;

#if HAVE_host_aout_vec
  tahoe-*-*)
    targ_defvec=host_aout_vec
    targ_underscore=yes
    ;;
#endif

  tic80*-*-*)
    targ_defvec=tic80coff_vec
    targ_underscore=yes
    ;;

  v850-*-*)
    targ_defvec=bfd_elf32_v850_vec
    ;;
  v850e-*-*)
    targ_defvec=bfd_elf32_v850_vec
    ;;
  v850ea-*-*)
    targ_defvec=bfd_elf32_v850_vec
    ;;

  vax-*-netbsdelf*)
    targ_defvec=bfd_elf32_vax_vec
    targ_selvecs="vaxnetbsd_vec vax1knetbsd_vec"
    ;;

  vax-*-netbsdaout* | vax-*-netbsd*)
    targ_defvec=vaxnetbsd_vec
    targ_selvecs="bfd_elf32_vax_vec vax1knetbsd_vec"
    targ_underscore=yes
    ;;

  vax-*-bsd* | vax-*-ultrix*)
    targ_defvec=vaxbsd_vec
    targ_underscore=yes
    ;;

  vax-*-openbsd*)
    targ_defvec=bfd_elf32_vax_vec
    targ_selvecs=vaxnetbsd_vec
    ;;

  vax-*-linux-gnu*)
    targ_defvec=bfd_elf32_vax_vec
    ;;

  vax*-*-*vms*)
    targ_defvec=vms_vax_vec
    ;;

  we32k-*-*)
    targ_defvec=we32kcoff_vec
    ;;

  w65-*-*)
    targ_defvec=w65_vec
    ;;

  xstormy16-*-elf)
    targ_defvec=bfd_elf32_xstormy16_vec
    ;;

  xtensa-*-*)
    targ_defvec=bfd_elf32_xtensa_le_vec
    targ_selvecs=bfd_elf32_xtensa_be_vec
    ;;

  z8k*-*-*)
    targ_defvec=z8kcoff_vec
    targ_underscore=yes
    ;;

  *-*-ieee*)
    targ_defvec=ieee_vec
    ;;

  *-adobe-*)
    targ_defvec=a_out_adobe_vec
    targ_underscore=yes
    ;;

  *-sony-*)
    targ_defvec=newsos3_vec
    targ_underscore=yes
    ;;

  *-tandem-*)
    targ_defvec=m68kcoff_vec
    targ_selvecs=ieee_vec
    ;;
# END OF targmatch.h
  *)
    echo 1>&2 "*** BFD does not support target ${targ}."
    echo 1>&2 "*** Look in bfd/config.bfd for supported targets."
    exit 1
    ;;
esac

case "${host64}${want64}" in
  *true*)
    targ_selvecs="${targ_selvecs} ${targ64_selvecs}"
    ;;
esac

# If we support any ELF target, then automatically add support for the
# generic ELF targets.  This permits an objdump with some ELF support
# to be used on an arbitrary ELF file for anything other than
# relocation information.
case "${targ_defvec} ${targ_selvecs}" in
  *bfd_elf64* | *bfd_elf32_n*mips*)
    targ_selvecs="${targ_selvecs} bfd_elf64_little_generic_vec bfd_elf64_big_generic_vec bfd_elf32_little_generic_vec bfd_elf32_big_generic_vec"
    ;;
  *bfd_elf32*)
    targ_selvecs="${targ_selvecs} bfd_elf32_little_generic_vec bfd_elf32_big_generic_vec"
    ;;
esac
@


1.40
log
@VAX ELF toolchain, using `%' as the register prefix. Heavily based upon
NetBSD.
@
text
@d517 1
a517 1
    targ_selvecs="bfd_elf32_i386_vec i386coff_vec bfd_efi_app_ia32_vec"
@


1.39
log
@ELF toolchain for m68k, following the SysV/m68k ABI (32-bit types aligned on
32-bit boundaries, function return values being in %a0 instead of %d0 if they
are declared as pointers, and in fp registers if they are floating point types).

Compiler configuration bits (including a few m68k PIC code generation fixes)
borrowed from NetBSD.
@
text
@d1281 2
a1282 2
    targ_defvec=vaxnetbsd_vec
    targ_underscore=yes
@


1.38
log
@Switch m88k ports to ELF.
@
text
@d722 2
a723 3
    targ_defvec=m68knetbsd_vec
    targ_selvecs="m68k4knetbsd_vec hp300bsd_vec sunos_big_vec"
    targ_underscore=yes
@


1.37
log
@Add ecoff as possible targets for the mips ports, to be able to muild
ecoff moot blocks on sgi.
@
text
@d758 2
a759 2
    targ_defvec=m88kopenbsd_vec
    targ_underscore=yes
@


1.36
log
@Define superH obsd-specific emulations for ld, and use it by default.
@
text
@d782 1
a782 1
    targ_selvecs="bfd_elf32_ntradlittlemips_vec bfd_elf32_ntradbigmips_vec bfd_elf32_tradlittlemips_vec bfd_elf32_tradbigmips_vec bfd_elf64_tradbigmips_vec"
d786 1
a786 1
    targ_selvecs="bfd_elf32_ntradlittlemips_vec bfd_elf32_ntradbigmips_vec bfd_elf32_tradlittlemips_vec bfd_elf32_tradbigmips_vec bfd_elf64_tradlittlemips_vec"
@


1.35
log
@Early bits for a 32-bit SuperH toolchain, currently for little-endian
systems only; more work is necessary in ld land.
@
text
@d1083 1
a1083 1
  sh*-*-openbsd* | sh*l*-*-netbsdelf*)
d1100 4
@


1.34
log
@Enable efi support on OpenBSD/i386.
ok miod@@
@
text
@d1083 1
a1083 1
  sh*l*-*-netbsdelf*)
@


1.33
log
@hppa64-unknown-openbsd build support; espie@@ miod@@ brad@@ ok
@
text
@d490 1
a490 1
    targ_selvecs=i386netbsd_vec
@


1.32
log
@Merge conflicts, bringing our changes back in:
- extra $(SHELL) and sugar for make (so that files not mode +x still work)
- safer temp file handling
- our W^X binary layout changes in ld
- OpenBSD policy for library file selection in ld
- arm and m88k changes which were not merged in time for official 2.15
- bfd core file handling
- a couple typos

New for 2.15:
- ld(1) and as(1) manpages now generated at build time
- binutils/stabs.c reverted to use our in-tree libiberty for now
- we still use our VIA C3 crypto code over stock binutils, as it recognizes
  more instructions
- new emulations for OpenBSD on mips64 machines, to help OpenBSD/sgi
- relaxed %f# handling in gas on OpenBSD/sparc64 (same as was in 2.14)

Tested on all platforms by various people; special thanks to sturm@@ and
otto@@.
@
text
@d363 4
@


1.31
log
@bfd support for OpenBSD/m88k a.out binaries, glueing existing bits together.
Gives us working objcopy, objdump, etc, and the ability to process core files
to some extent.

ok and pushed upstream kettenis@@
@
text
@d32 14
d55 1
a55 1
i[3456]86)       targ_archs=bfd_i386_arch ;;
d77 1
d92 6
a97 1
    echo "This target is obsolete and has been removed." 
d102 1
a102 1
    echo "This target is obsolete and has been removed." 
d108 1
a108 1
  alpha*-*-freebsd*)
d139 1
a139 5
  ia64*-*-aix*)
    targ_defvec=bfd_elf64_ia64_aix_little_vec
    targ_selvecs="bfd_elf64_ia64_aix_big_vec bfd_efi_app_ia64_vec"
    ;;
  ia64*-*-freebsd* | ia64*-*-netbsd* | ia64*-*-linux-gnu* | ia64*-*-elf*)
d147 1
a147 1
  sparc64-*-freebsd* | sparc64-*-netbsd* | sparc64-*-openbsd*)
d153 3
d173 1
d192 1
a192 1
    targ_cflags=-DARM_WINCE
a206 6
  arm-*-vxworks*)
    targ_defvec=armcoff_little_vec
    targ_selvecs=armcoff_big_vec
    targ_underscore=yes
    targ_cflags=-DARM_COFF_BUGFIX
    ;;
d224 2
a225 1
  arm-*-elf | arm-*-freebsd* | arm*-*-linux-gnu* | arm*-*-conix* | arm*-*-uclinux* | arm-*-openbsd*)
d302 1
a302 1
  c4x-*-*coff* | tic4x-*-*coff*)
d339 1
d342 4
d374 1
a374 1
  hppa*-*-linux-gnu*)
d378 1
a378 1
  hppa*-*-*elf* | hppa*-*-lites* | hppa*-*-netbsd* | hppa*-*-sysv4* | hppa*-*-rtems* | hppa*-*-openbsd*)
d401 1
a401 1
  i[3456]86-*-sco3.2v5*coff)
d405 3
a407 3
  i[3456]86-*-sysv4* | i[3456]86-*-unixware* | i[3456]86-*-solaris2* | \
  i[3456]86-*-elf | i[3456]86-*-sco3.2v5* | \
  i[3456]86-*-dgux* | i[3456]86-*-sysv5*)
d411 1
a411 1
  i[3456]86-*-kaos*)
d415 1
a415 1
  i[3456]86-*-nto*)
d419 1
a419 1
  i[3456]86-*-aros*)
d422 1
a422 1
  i[3456]86-*-chorus*)
d429 2
a430 2
  i[3456]86-*-sysv* | i[3456]86-*-isc* | i[3456]86-*-sco* | i[3456]86-*-coff | \
  i[3456]86-*-aix*)
d433 1
a433 1
  i[3456]86*-*-rtemscoff*)
d437 1
a437 1
  i[3456]86-*-rtemself* | i[3456]86-*-rtems*)
d441 1
a441 1
  i[3456]86-*-darwin* | i[3456]86-*-macos10* | i[3456]86-*-rhapsody*)
d446 1
a446 1
 i[3456]86-sequent-bsd*)
d450 1
a450 1
  i[3456]86-*-bsd*)
d454 2
a455 2
  i[3456]86-*-freebsdaout* | i[3456]86-*-freebsd[12].* | \
  i[3456]86-*-freebsd[12])
d460 1
a460 1
  i[3456]86-*-freebsd*)
d465 1
a465 1
      i[3456]86-*-freebsd3* | i[3456]86-*-freebsd4 | i[3456]86-*-freebsd4.0*)
d469 1
a469 1
  i[3456]86-*-netbsdelf*) 
d472 1
d474 1
a474 1
  i[3456]86-*-netbsdpe*)
d478 2
a479 1
  i[3456]86-*-netbsdaout* | i[3456]86-*-netbsd* | i[3456]86-*-openbsd[0-2].* | i[3456]86-*-openbsd3.[0-3])
d484 1
a484 1
  i[3456]86-*-openbsd*)
d488 1
a488 1
  i[3456]86-*-netware*)
d492 1
a492 1
  i[3456]86-*-linux*aout*)
d497 1
a497 1
  i[3456]86-*-linux-gnu*)
d503 1
a503 1
  x86_64-*-freebsd*)
d520 1
a520 1
  i[3456]86-*-lynxos*)
d524 1
a524 1
  i[3456]86-*-gnu*)
d527 1
a527 1
  i[3456]86-*-mach* | i[3456]86-*-osf1mk*)
d532 1
a532 1
  i[3456]86-*-os9k)
d535 1
a535 1
  i[3456]86-*-msdos*)
d539 1
a539 1
  i[3456]86-*-moss*)
d543 1
a543 1
  i[3456]86-*-beospe*)
d547 1
a547 1
  i[3456]86-*-beoself* | i[3456]86-*-beos*)
d551 1
a551 1
  i[3456]86-*-interix*)
d557 1
a557 1
  i[3456]86-*-mingw32* | i[3456]86-*-cygwin* | i[3456]86-*-winnt | i[3456]86-*-pe)
d561 1
a561 1
  i[3456]86-none-*)
d564 1
a564 1
  i[3456]86-*-aout* | i[3456]86*-*-vsta*)
d567 2
a568 2
  i[3456]86-*-vxworks*)
    targ_defvec=i386aout_vec
d571 1
a571 1
  i[3456]86-*-chaos)
d615 15
d669 1
a669 1
  m68*-*-elf* | m68*-*-sysv4*)
d775 11
a785 1
  mips*el-*-netbsd* | mips*el-*-openbsd*)
d789 1
a789 1
  mips*-*-netbsd* | mips*-*-openbsd*)
a792 4
  mips*-dec-mach3*)
    targ_defvec=aout_mips_little_vec
    targ_cflags=-DSTAT_FOR_EXEC
    ;;
a818 4
  mips*-*-mach3*)
    targ_defvec=aout_mips_little_vec
    targ_cflags=-DSTAT_FOR_EXEC
    ;;
d831 1
a831 1
  mips*-*-elf* | mips*-*-rtems* | mips*-*-vxworks*)
d871 1
d891 1
a891 1
  or32-*-coff | or32-*-rtems*)
d896 1
a896 1
  or32-*-elf)
d915 12
d928 1
d935 1
a947 1
	
a1005 1

d1079 1
a1079 1
  shle-*-netbsdelf*)
a1085 4
  sh*le-*-netbsdelf*)
    targ_defvec=bfd_elf32_shlnbsd_vec
    targ_selvecs="bfd_elf32_shnbsd_vec shcoff_vec shlcoff_vec"
    ;;
a1096 1

d1105 6
a1110 1
  sh-*-elf* | sh[1234]*-elf* | sh-*-rtemself* | sh-*-kaos*)
d1128 9
a1136 1
  sh-*-* | sh-*-rtems*)
d1179 1
a1179 1
  sparc*-*-openbsd[0-2].* | sparc*-*-openbsd3.[0-1])
d1184 3
a1186 3
   targ_defvec=bfd_elf32_sparc_vec
   targ_selvecs=sparcnetbsd_vec
   ;;
a1246 1

d1276 4
@


1.30
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@d716 4
@


1.29
log
@configs for amd64; brad@@ ok
@
text
@d8 2
d28 1
d34 9
a42 11
alpha*) targ_archs=bfd_alpha_arch ;;
arm*)	targ_archs=bfd_arm_arch ;;
strongarm*) targ_archs=bfd_arm_arch ;;
thumb*)	targ_archs=bfd_arm_arch ;;
xscale*) targ_archs=bfd_arm_arch ;;
c30*)	targ_archs=bfd_tic30_arch ;;
c54x*)	targ_archs=bfd_tic54x_arch ;;
hppa*)	targ_archs=bfd_hppa_arch ;;
x86_64) targ_archs=bfd_i386_arch ;;
i[3456]86) targ_archs=bfd_i386_arch ;;
i370)   targ_archs=bfd_i370_arch ;;
d45 19
a63 10
m68*)	targ_archs=bfd_m68k_arch ;;
m88*)	targ_archs=bfd_m88k_arch ;;
mips*)	targ_archs=bfd_mips_arch ;;
pj*)	targ_archs="bfd_pj_arch bfd_i386_arch";;
powerpc*) targ_archs="bfd_rs6000_arch bfd_powerpc_arch" ;;
rs6000)	targ_archs="bfd_rs6000_arch bfd_powerpc_arch" ;;
sparc*) targ_archs=bfd_sparc_arch ;;
v850*)	targ_archs=bfd_v850_arch ;;
z8k*)	targ_archs=bfd_z8k_arch ;;
*)	targ_archs=bfd_${targ_cpu}_arch ;;
d71 3
d76 10
d88 10
a97 1
  alpha*-*-netbsd* | alpha*-*-freebsd* | alpha*-*-openbsd*)
d119 5
a123 1
  ia64*-*-freebsd* | ia64*-*-linux-gnu* | ia64*-*-elf*)
d128 2
a129 2
    targ_defvec=bfd_elf64_ia64_big_vec
    targ_selvecs="bfd_elf32_ia64_big_vec"
d142 8
d152 1
d155 4
d166 1
d187 1
a187 1
  arm-*-coff)
d191 1
d193 1
a193 1
  arm-*-vxworks*)
a196 1
    targ_cflags=-DVXWORKS
d202 1
a202 1
  armeb-*-elf | arm*b-*-linux-gnu*)
d206 9
a214 1
  arm-*-elf | arm-*-freebsd* | arm*-*-linux-gnu* | arm*-*-conix* | arm*-*-uclinux*)
d287 6
d309 5
d322 9
d358 1
a358 1
  hppa*-*-*elf* | hppa*-*-lites* | hppa*-*-openbsd* | hppa*-*-sysv4* | hppa*-*-rtems*)
d391 9
a399 1
  i[3456]86-*-rtemself*)
a400 1
    targ_selvecs="i386coff_vec i386aout_vec"
d405 1
a405 1
  i[3456]86-*-msdosdjgpp* | i[3456]*-*-go32* | i[3456]86-go32-rtems* )
d413 1
a413 1
  i[3456]86*-*-rtems*)
d417 9
d441 1
a441 1
    targ_defvec=bfd_elf32_i386_vec
d443 5
d449 1
a449 1
  i[3456]86-*-netbsdelf* | i386-*-openbsd*)
d453 5
a457 1
  i[3456]86-*-netbsdaout* | i[3456]86-*-netbsd*)
d462 4
d478 1
d480 1
a480 1
#ifdef BFD64    
d485 4
d585 8
d628 4
d637 1
a637 1
    targ_defvec=m68kcoff_vec
d671 10
a680 1
  m68*-*-netbsd* | m68*-*-openbsd*)
d734 1
a734 1
  mips-dec-netbsd* | mips*el*-*-netbsd*)
d736 1
a736 1
    targ_selvecs="bfd_elf32_bigmips_vec ecoff_little_vec ecoff_big_vec"
d738 1
a738 1
 mips*-*-netbsd*)
d740 1
a740 5
    targ_selvecs="bfd_elf32_littlemips_vec ecoff_big_vec ecoff_little_vec"
    ;;
  mips*-dec-bsd*)
    targ_defvec=aout_mips_little_vec
    targ_underscore=yes
d754 1
d756 2
a757 2
    targ_defvec=bfd_elf32_bigmips_vec
    targ_selvecs="bfd_elf32_littlemips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec"
d759 1
a775 5
  mips*-*-pe*)
    targ_defvec=mipslpe_vec
    targ_selvecs="mipslpei_vec mipslpei_vec ecoff_little_vec ecoff_big_vec"
    targ_underscore=yes
    ;;
d796 8
a803 3
  mips*el*-*-openbsd*)
    targ_defvec=bfd_elf32_littlemips_vec
    targ_selvecs="bfd_elf32_bigmips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec ecoff_little_vec ecoff_big_vec"
d805 2
a806 1
  mips*el*-*-linux-gnu*)
d808 2
a809 1
    targ_selvecs="bfd_elf32_tradbigmips_vec bfd_elf64_tradlittlemips_vec bfd_elf64_tradbigmips_vec ecoff_little_vec ecoff_big_vec"
d811 4
a814 3
  mips*-*-openbsd*)
    targ_defvec=bfd_elf32_bigmips_vec
    targ_selvecs="bfd_elf32_littlemips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec ecoff_big_vec ecoff_little_vec"
d816 4
a819 3
  mips*-*-linux-gnu*)
    targ_defvec=bfd_elf32_tradbigmips_vec
    targ_selvecs="bfd_elf32_tradlittlemips_vec bfd_elf64_tradbigmips_vec bfd_elf64_tradlittlemips_vec ecoff_big_vec ecoff_little_vec"
d821 1
a821 1

d830 4
d838 1
a838 1
  ns32k-*-netbsd* | ns32k-*-lites* | ns32k-*-openbsd*)
d843 18
d871 14
a884 1
  powerpc-*-aix* | powerpc-*-beos*)
d886 8
a893 1
    targ_selvecs="rs6000coff64_vec"
d895 15
d912 1
a912 1
  powerpc-*-chorus* | powerpc-*-vxworks*)
d915 11
d934 8
d947 1
d955 29
a983 2
  rs6000-*-*)
    targ_defvec=rs6000coff_vec
d985 1
d990 54
d1046 17
a1062 1
  sh-*-elf* | sh-*-rtemself*)
d1106 1
a1106 1
  sparc-*-netbsdelf* | sparc-*-openbsd*)
d1115 8
d1193 12
a1204 1
#if HAVE_host_aout_vec
d1206 1
a1206 1
    targ_defvec=host_aout_vec
a1208 1
#endif
d1213 1
a1213 1
    ;;      
d1227 9
d1267 6
d1278 1
a1278 1
  *bfd_elf64*)
@


1.28
log
@Switch i386 to new binutils, i386 tools now do ELF.
RODATA_* align macros to preserve current behavior on other
archs and allow for 1G sep between beginning of exe and beginning of data
DARPA funded work.
@
text
@d377 4
@


1.27
log
@Switch sparc binutils to ELF.
XXX - we might want to improve the version selection logic when feeding
those diffs back to FSF, but we can't do that until we bump our version
to OpenBSD 3.2 because then the tree wouldn't build.
@
text
@d350 1
a350 1
  i[3456]86-*-netbsdelf*) 
d354 1
a354 1
  i[3456]86-*-netbsdaout* | i[3456]86-*-netbsd* | i[3456]86-*-openbsd*)
@


1.26
log
@hppa pieces; don't regenerate yet.
@
text
@d792 1
a792 1
  sparc-*-netbsdelf*)
a798 4
    targ_underscore=yes
    ;;
  sparc-*-openbsd*)
    targ_defvec=sparcnetbsd_vec
@


1.25
log
@resolve conflicts.
@
text
@d280 1
a280 1
  hppa*-*-*elf* | hppa*-*-lites* | hppa*-*-sysv4* | hppa*-*-rtems*)
@


1.24
log
@Changes necessary to configure vax. Confirmed by miod + theo.
@
text
@d35 1
d37 1
d39 1
d42 2
d87 9
a95 1
  sparc64-*-netbsd* | sparc64-*-openbsd*)
d129 1
a129 1
  arm-*-aout | armel-*-aout)	
d142 10
d156 1
a156 1
  arm-*-elf | arm*-*-linux-gnu* | arm*-*-conix* | arm*-*-uclinux*)
d197 9
d208 1
a208 1
  a29k-*-vxworks* | a29k-*-sysv*)
d229 12
d264 17
a280 2
#if 0 /* HPPA ELF does not work currently.  */
  hppa*-*-*elf* | hppa*-*-linux-gnu* | hppa*-*-lites* | hppa*-*-sysv4* | hppa*-*-rtems*)
d282 1
d284 1
a284 1
#endif
a285 1
#if 0 /* HPPA ELF does not work currently.  */
a289 1
#endif
a292 1
#if 0 /* HPPA ELF does not work currently.  */
a296 1
#endif
d313 7
d328 1
a328 1
  i[3456]86-*-rtemscoff*)
a331 4
  i[3456]86-*-rtemself* | i[3456]86*-*-rtems*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs="i386coff_vec i386aout_vec"
    ;;
d350 5
a354 1
  i[3456]86-*-netbsd* | i[3456]86-*-openbsd*)
d356 1
a356 1
    targ_selvecs=i386bsd_vec
d370 10
a379 1
    targ_selvecs=i386linux_vec
d381 1
d433 4
d441 4
d454 1
a454 6
  i960-*-rtemself*)
    targ_defvec=bfd_elf32_i960_vec
    targ_selvecs="icoff_big_vec b_out_vec_little_host b_out_vec_big_host ieee_vec"
    targ_underscore=yes
    ;;
  i960-*-vxworks5.* | i960-*-coff* | i960-*-sysv* | i960-*-rtemscoff* | i960-*-rtems*)
d473 9
d508 1
a508 2
  m68*-*-rtemscoff*)
    # same as m68k-coff with some extra targets
a511 5
  m68*-*-rtems* | m68*-*-rtemself*)
    # same as m68k-elf with some extra targets
    targ_defvec=bfd_elf32_m68k_vec
    targ_selvecs="m68kcoff_vec versados_vec ieee_vec aout0_big_vec"
    ;;
d647 2
a648 2
    targ_defvec=bfd_elf32_bigmips_vec
    targ_selvecs="bfd_elf32_littlemips_vec ecoff_big_vec ecoff_little_vec"
d654 1
a654 1
  mips*el-*-elf* | mips*el-*-rtems* | mips*el-*-vxworks*)
d666 1
a666 1
  mips*el*-*-linux-gnu* | mips*el*-*-openbsd*)
d670 5
a674 1
  mips*-*-linux-gnu* | mips*-*-openbsd*)
d678 4
d712 1
d716 1
a716 1
  powerpc-*-vxworks*)
d743 5
d758 1
a758 1
  sh-*-* | sh-*-rtemscoff* | sh-*-rtems*)
d776 3
d834 1
a834 1
    ;;    
d848 1
a848 1
  sparc*-*-*)
@


1.23
log
@Support for arm.
@
text
@d786 5
@


1.22
log
@Support for sparc64. gdb disabled for now.
@
text
@d93 1
a93 1
  arm-*-netbsd*)
@


1.21
log
@Automatic cvs merge. Dread what I will have to fix after this excuse
of a program is done...
@
text
@d82 1
a82 1
  sparc64-*-netbsd*)
@


1.20
log
@Switch alpha to ELF.
@
text
@d82 4
d129 5
a133 1
  arm-*-elf | arm*-*-linux-gnu* | arm*-*-conix*)
@


1.19
log
@Make new binutils compile on Alpha again; ok espie@@
@
text
@d60 1
a60 1
  alpha*-*-netbsd* | alpha*-*-freebsd*)
a74 3
    ;;
  alpha*-*-openbsd*)
    targ_defvec=ecoffalpha_little_vec
@


1.18
log
@Help stupid cvs fixing basic conflicts.
@
text
@d76 3
@


1.17
log
@Adding support for Motorola mvme88k
@
text
@d10 1
a10 1
#  targ_undercore	Whether underscores are used: yes or no
d31 1
d33 3
d38 1
d42 1
d45 2
a46 1
sparc*)	targ_archs=bfd_sparc_arch ;;
d51 1
d60 5
a64 1
  alpha-*-netware*)
d68 1
a68 9
  alpha-*-netbsd*)
    targ_defvec=bsd_ecoffalpha_little_vec
    targ_selvecs=ecoffalpha_little_vec
    ;;
  alpha-*-openbsd*)
    targ_defvec=bsd_ecoffalpha_little_vec
    targ_selvecs=ecoffalpha_little_vec
    ;;
  alpha-*-linuxecoff*)
d72 1
a72 1
  alpha-*-linux* | alpha-*-elf*)
d76 2
a77 10
  alpha-*-netbsd*)
    targ_defvec=bsd_ecoffalpha_little_vec
    targ_selvecs="ecoffalpha_little_vec bfd_elf64_alpha_vec"
    ;;
  alpha-*-openbsd*)
    targ_defvec=bsd_ecoffalpha_little_vec
    targ_selvecs="ecoffalpha_little_vec bfd_elf64_alpha_vec"
    ;;
  alpha-*-*vms*)
    targ_defvec=evax_alpha_vec
d79 1
a79 1
  alpha-*-*)
d84 9
d96 11
d125 41
d178 23
d212 2
a213 1
  hppa*-*-*elf* | hppa*-*-lites* | hppa*-*-sysv4* | hppa*-*-openbsd*)
d216 3
a218 1
#if defined (HOST_HPPAHPUX) || defined (HOST_HPPABSD) || defined (HOST_HPPAOSF)
d223 2
a224 1
  hppa*-*-hpux* | hppa*-*-hiux*)
d227 1
d232 1
d235 11
a245 3
  i[3456]86-*-sysv4* | i[3456]86-*-unixware | i[3456]86-*-solaris2* | \
  i[3456]86-*-elf | i[3456]86-*-sco*elf* | i[3456]86-*-freebsdelf* | \
  i[3456]86-*-dgux*)
d249 4
d254 1
a254 1
  i[3456]86-*-aix* | i[3456]86-*-go32* | i[3456]86*-*-rtems*)
d257 9
a265 1
  i[3456]86-sequent-bsd*)
d273 2
a274 1
  i[3456]86-*-freebsd*)
d279 3
a281 4
  i[3456]86-*-netbsd*)
    targ_defvec=i386netbsd_vec
    targ_selvecs=i386bsd_vec
    targ_underscore=yes
d283 1
a283 1
  i[3456]86-*-openbsd*)
d292 1
a292 1
  i[3456]86-*-linuxaout*)
d297 1
a297 1
  i[3456]86-*-linux*)
a299 1
    targ_underscore=yes
a306 3
    targ_selvecs=i386mach3_vec
    targ_cflags=-DSTAT_FOR_EXEC
    targ_underscore=yes
d324 1
a324 1
  i[3456]86-*-cygwin32 | i[3456]86-*-winnt | i[3456]86-*-pe)
d328 14
d348 4
d365 6
a370 1
  i960-*-vxworks5.* | i960-*-coff* | i960-*-sysv* | i960-*-rtems*)
d380 4
d385 3
d396 3
d405 1
a405 1
    # We include cisco_core_vec here, rather than making a separate cisco
d408 1
a408 1
    targ_selvecs="cisco_core_vec ieee_vec"
d415 11
a425 1
  m68*-*-coff* | m68*-*-sysv* | m68*-*-rtems*)
d433 1
a433 1
  m68*-*-linuxaout*)
d438 1
a438 1
  m68*-*-linux*)
d442 5
d456 1
a456 11
  m68*-*-netbsd*)
    targ_defvec=m68knetbsd_vec
    targ_selvecs="m68k4knetbsd_vec hp300bsd_vec sunos_big_vec"
    targ_underscore=yes
    ;;
  m68*-hp*-openbsd*)
    targ_defvec=m68k4knetbsd_vec
    targ_selvecs="m68knetbsd_vec hp300bsd_vec sunos_big_vec"
    targ_underscore=yes
    ;;
  m68*-*-openbsd*)
d468 1
a468 1
    targ_selvecs="m68kcoff_vec tekhex_vec"
a491 5
  m88*-*-openbsd*)
    targ_defvec=m88knetbsd_vec
    targ_selvecs="m88kbcs_vec m88kmach3_vec bfd_elf32_m88k_vec"
    targ_underscore=yes
    ;;
d496 8
a503 7
  mips*el-*-openbsd*)
    targ_defvec=bfd_elf32_littlemips_vec
    targ_selvecs=bfd_elf32_bigmips_vec
    ;;
  mips*-*-openbsd*)
    targ_defvec=bfd_elf32_bigmips_vec
    targ_selvecs="bfd_elf32_littlemips_vec"
d505 1
d510 1
a510 1
  mips-dec-netbsd*)
d512 5
a516 1
    targ_selvecs=bfd_elf32_bigmips_vec
d546 4
d554 5
d567 1
a567 1
  mips*el-*-elf*)
d571 5
a575 1
  mips*-*-elf* | mips*-*-rtems*)
d579 8
d600 1
a600 1
  ns32k-*-netbsd* | ns32k-*-lites*)
d604 9
a612 3
  ns32k-*-openbsd*)
    targ_defvec=pc532netbsd_vec
    targ_underscore=yes
d615 1
a615 1
  powerpc-*-aix*)
d619 2
a620 1
  powerpc-*-solaris2* | powerpc-*-linux* | powerpc-*-rtems*)
d622 1
a622 1
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpcle_vec bfd_powerpcle_pei_vec bfd_powerpc_pei_vec bfd_powerpcle_pe_vec bfd_powerpc_pe_vec ppcboot_vec"
d632 2
a633 1
  powerpcle-*-solaris2* | powerpcle-*-linux*)
d635 1
a635 1
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpc_vec bfd_powerpcle_pei_vec bfd_powerpc_pei_vec bfd_powerpcle_pe_vec bfd_powerpc_pe_vec ppcboot_vec"
d638 1
a638 1
  powerpcle-*-pe | powerpcle-*-winnt* | powerpcle-*-cygwin32)
d647 1
a647 1
  sh-*-elf*)
d649 6
a654 1
    targ_selvecs="bfd_elf32_shl_vec shcoff_vec shlcoff_vec"
d657 1
a657 1
  sh-*-*)
d659 1
a659 1
    targ_selvecs="shcoff_vec shlcoff_vec"
d668 16
d688 5
a692 1
  sparc-*-netbsd*)
d694 1
d701 1
a701 1
  sparc-*-elf* | sparc-*-solaris2*)
d705 6
d714 5
d723 4
a726 1
#ifdef BFD64
a731 4
  sparc-*-netware*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs="nlm32_sparc_vec sunos_big_vec"
    ;;
d735 10
a744 1
  sparc*-*-* | sparc*-*-rtems*)
d749 1
a749 1
#if 0
d756 16
a771 1
#if 0
d778 4
d818 13
@


1.16
log
@first cut on binutils/gcc support for hppa-*-openbsd*; tested on i386 host
@
text
@d352 5
@


1.15
log
@More than one target vector with mips woes..
@
text
@d132 1
a132 1
  hppa*-*-*elf* | hppa*-*-lites* | hppa*-*-sysv4*)
@


1.14
log
@More consistent MIPS config
@
text
@d362 1
a362 1
    targ_selvecs="bfd_elf32_littlemips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec"
@


1.13
log
@reflect the new naming for openbsd: mips*-*-openbsd* instead of mips-*-openbsd*
@
text
@d356 1
a356 1
  mips*-*-openbsd*)
d359 4
@


1.12
log
@Change all mips ports to use mips-unknown-openbsd2.0 like gcc does.
This should allow for gdb to at least build on pmax, modulo potential platform
specific include files.    This impacts gas, ld, and other critical system
components.  Don't build this unless you are happy with your backups, as
always for a change of this nature.  It works for me on my machine, however.
@
text
@d356 1
a356 1
  mips-*-openbsd*)
@


1.11
log
@changes to binutils to support powerpc-openbsd
@
text
@d356 1
a356 2

  mips-arc-openbsd*)
a364 8
    targ_defvec=bfd_elf32_littlemips_vec
    targ_selvecs=bfd_elf32_bigmips_vec
    ;;
  mips-dec-openbsd*)
    targ_defvec=bfd_elf32_littlemips_vec
    targ_selvecs=bfd_elf32_bigmips_vec
    ;;
  mips-arc-openbsd*)
@


1.10
log
@Add OpenBSD/arc support to gdb, from pefo
@
text
@d450 1
a450 1
  powerpc-*-elf* | powerpc-*-sysv4* | powerpc-*-eabi* | \
@


1.9
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d357 4
@


1.8
log
@Alpha support based on Chris Demetriou's <cgd@@cs.cmu.edu> work
@
text
@d12 4
d29 1
a29 1
targ_cpu=`echo $targ | sed 's/^\(.*\)-\(.*\)-\(.*\)$/\1/'`
d50 2
d86 1
a131 11
  sh-*-elf*)
    targ_defvec=bfd_elf32_sh_vec
    targ_selvecs="bfd_elf32_shl_vec shcoff_vec shlcoff_vec"
    targ_underscore=yes
    ;;
  sh-*-*)
    targ_defvec=shcoff_vec
    targ_selvecs="shcoff_vec shlcoff_vec"
    targ_underscore=yes
    ;;

d135 1
d147 1
d256 1
d417 1
a417 1
  mips*-*-elf*)
d422 8
d473 11
d512 1
d517 1
d530 1
d535 1
d537 2
a538 6
  vax-*-vms*)
    echo 1>&2 "*** BFD does not support target ${targ}."
    echo 1>&2 "*** Look in bfd/config.bfd for supported targets."
    exit 1
    ;;
  vax-*-*)
d542 1
d562 1
a562 1
    targ_defvec=a_aout_adobe_vec
d575 1
a575 1

@


1.7
log
@Alpha support based on Chris Demetriou's <cgd@@cs.cmu.edu> work
@
text
@d66 8
@


1.6
log
@Merge the Cygnus 960904 sources
@
text
@d50 8
@


1.5
log
@Fixes to make MIPS arc port to use in tree binutils.
@
text
@d29 1
a29 1
i[345]86) targ_archs=bfd_i386_arch ;;
d50 11
a64 1

d98 1
d109 5
d135 3
a137 2
  i[345]86-*-sysv4* | i[345]86-*-unixware | i[345]86-*-solaris2* | \
  i[345]86-*-elf | i[345]86-*-sco*elf* | i[345]86-*-freebsdelf*)
d141 2
a142 2
  i[345]86-*-sysv* | i[345]86-*-isc* | i[345]86-*-sco* | i[345]86-*-coff | \
  i[345]86-*-aix* | i[345]86-*-go32*)
d145 1
a145 1
  i[345]86-sequent-bsd*)
d149 1
a149 1
  i[345]86-*-bsd*)
d153 1
a153 1
  i[345]86-*-freebsd*)
d158 1
a158 1
  i[345]86-*-netbsd*)
d163 1
a163 1
  i[345]86-*-openbsd*)
d168 1
a168 1
  i[345]86-*-netware*)
d172 1
a172 1
  i[345]86-*-linuxaout*)
d177 1
a177 1
  i[345]86-*-linux*)
d182 1
a182 1
  i[345]86-*-lynxos*)
d186 1
a186 1
  i[345]86-*-gnu*)
d192 1
a192 1
  i[345]86-*-mach* | i[345]86-*-osf1mk*)
d197 1
a197 1
  i[345]86-*-os9k)
d200 1
a200 1
  i[345]86-*-msdos*)
d204 1
a204 1
  i[345]86-*-moss*)
d208 1
a208 1
  i[345]86-*-cygwin32 | i[345]86-*-winnt | i[345]86-*-pe)
d212 1
a212 1
  i[345]86-none-*)
d215 1
a215 1
  i[345]86-*-aout* | i[345]86*-*-vsta*)
d231 1
a231 1
  i960-*-vxworks5.* | i960-*-coff* | i960-*-sysv*)
d265 1
a265 1
  m68*-*-coff* | m68*-*-sysv*)
d374 4
d424 1
a424 1
  powerpc-*-solaris2* | powerpc-*-linux*)
d450 5
d467 1
a467 1
  sparc-*-elf* | sparc-*-sysv4* | sparc-*-solaris2*)
d471 3
d489 1
a489 1
  sparc*-*-*)
@


1.4
log
@Resolved conflicts with latest Cygnus import and our local changes
@
text
@d337 4
@


1.3
log
@Add OpenBSD configuration, it's exactly like NetBSD.
@
text
@d120 1
a120 1
  i[345]86-*-elf)
d132 1
a132 1
  i[345]86-*-bsd* | i[345]86-*-freebsd*)
d136 5
d191 1
a191 1
  i[345]86-*-win32 | i[345]86-*-winnt | i[345]86-*-pe)
d211 1
a211 1
    targ_selvecs="b_out_vec_big_host icoff_little_vec icoff_big_vec"
d216 1
a216 1
    targ_selvecs="icoff_big_vec b_out_vec_little_host b_out_vec_big_host"
d221 1
a221 1
    targ_selvecs="b_out_vec_big_host icoff_little_vec icoff_big_vec"
d238 1
a238 1
    # We include this here, rather than making a separate cisco
d241 1
a241 1
    targ_selvecs=cisco_core_vec
d246 1
a246 1
    targ_selvecs=m68kcoff_vec
d250 1
a250 1
    targ_selvecs="m68kcoff_vec versados_vec"
d256 9
d299 12
d375 1
a375 1
    targ_selvecs=bfd_elf32_bigmips_vec
d379 1
a379 1
    targ_selvecs=bfd_elf32_littlemips_vec
d398 2
a399 1
  powerpc-*-elf* | powerpc-*-sysv4* | powerpc-*-eabi* | powerpc-*-solaris2*)
d401 1
a401 1
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpcle_vec bfd_powerpcle_pei_vec bfd_powerpc_pei_vec bfd_powerpcle_pe_vec bfd_powerpc_pe_vec"
d411 1
a411 1
  powerpcle-*-solaris2*)
d413 1
a413 1
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpc_vec bfd_powerpcle_pei_vec bfd_powerpc_pei_vec bfd_powerpcle_pe_vec bfd_powerpc_pe_vec"
d416 1
a416 1
  powerpcle-*-pe | powerpcle-*-winnt*)
a420 5
  powerpc-*-pe | powerpc-*-winnt*)
    targ_defvec=bfd_powerpc_pe_vec
    targ_selvecs="bfd_powerpcle_pei_vec bfd_powerpc_pei_vec bfd_powerpcle_pe_vec bfd_powerpc_pe_vec"
    ;;

d437 1
a437 1
  sparc-*-solaris2* | sparc-*-sysv4*)
d445 1
a445 1
  sparc64-*-elf* | sparc64-*-sysv4* | sparc64-*-solaris2*)
@


1.2
log
@Tweaks for OpenBSD:
1)	recognize OpenBSD at various places
2)	m68k-cbm-* is *NOT* ELF always
3)	clean-info must be called before distclean in the GAS
	realclean target
4)	don't install unformatted ma-pages
5)	add a Makefile.bsd-wrapper
6)	just build gas through Makefile.bsd-wrapper yet
There are still other things to do...
@
text
@d141 5
d265 10
d307 4
d364 4
d408 4
@


1.1
log
@Initial revision
@
text
@d234 1
a234 1
  m68*-*-elf* | m68*-*-sysv4* | m68*-cbm-*)
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@(Correct) Import of Cygnus binutils snapshot taken 960607
@
text
@d120 1
a120 1
  i[345]86-*-elf | i[345]86-*-sco*elf* | i[345]86-*-freebsdelf*)
d132 1
a132 1
  i[345]86-*-bsd*)
a135 5
  i[345]86-*-freebsd*)
    targ_defvec=i386freebsd_vec
    targ_selvecs=i386bsd_vec
    targ_underscore=yes
    ;;
d181 1
a181 1
  i[345]86-*-cygwin32 | i[345]86-*-winnt | i[345]86-*-pe)
d201 1
a201 1
    targ_selvecs="b_out_vec_big_host icoff_little_vec icoff_big_vec ieee_vec"
d206 1
a206 1
    targ_selvecs="icoff_big_vec b_out_vec_little_host b_out_vec_big_host ieee_vec"
d211 1
a211 1
    targ_selvecs="b_out_vec_big_host icoff_little_vec icoff_big_vec ieee_vec"
d228 1
a228 1
    # We include cisco_core_vec here, rather than making a separate cisco
d231 1
a231 1
    targ_selvecs="cisco_core_vec ieee_vec"
d234 1
a234 1
  m68*-*-elf* | m68*-*-sysv4*)
d236 1
a236 1
    targ_selvecs="m68kcoff_vec ieee_vec"
d240 1
a240 1
    targ_selvecs="m68kcoff_vec versados_vec ieee_vec"
a245 9
  m68*-*-linuxaout*)
    targ_defvec=m68klinux_vec
    targ_selvecs=bfd_elf32_m68k_vec
    targ_underscore=yes
    ;;
  m68*-*-linux*)
    targ_defvec=bfd_elf32_m68k_vec
    targ_selvecs=m68klinux_vec
    ;;
a269 12
  m68*-cbm-*)
    targ_defvec=bfd_elf32_m68k_vec
    targ_selvecs=m68kcoff_vec
    ;;
  m68*-apple-aux*)
    targ_defvec=m68kaux_coff_vec
    ;;
  m68*-*-psos*)
    targ_defvec=bfd_elf32_m68k_vec
    targ_selvecs=ieee_vec
    targ_underscore=yes
    ;;
d330 1
a330 1
    targ_selvecs="bfd_elf32_bigmips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec"
d334 1
a334 1
    targ_selvecs="bfd_elf32_littlemips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec"
d349 1
a349 2
  powerpc-*-elf* | powerpc-*-sysv4* | powerpc-*-eabi* | \
  powerpc-*-solaris2* | powerpc-*-linux*)
d351 1
a351 1
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpcle_vec bfd_powerpcle_pei_vec bfd_powerpc_pei_vec bfd_powerpcle_pe_vec bfd_powerpc_pe_vec ppcboot_vec"
d361 1
a361 1
  powerpcle-*-solaris2* | powerpcle-*-linux*)
d363 1
a363 1
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpc_vec bfd_powerpcle_pei_vec bfd_powerpc_pei_vec bfd_powerpcle_pe_vec bfd_powerpc_pe_vec ppcboot_vec"
d366 1
a366 1
  powerpcle-*-pe | powerpcle-*-winnt* | powerpcle-*-cygwin32)
d371 5
d388 1
a388 1
  sparc-*-elf* | sparc-*-sysv4* | sparc-*-solaris2*)
d396 1
a396 1
  sparc64-*-elf*)
@


1.1.1.3
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@d29 1
a29 1
i[3456]86) targ_archs=bfd_i386_arch ;;
a49 11
  alpha-*-linuxecoff*)
    targ_defvec=ecoffalpha_little_vec
    targ_selvecs=bfd_elf64_alpha_vec
    ;;
  alpha-*-linux* | alpha-*-elf*)
    targ_defvec=bfd_elf64_alpha_vec
    targ_selvecs=ecoffalpha_little_vec
    ;;
  alpha-*-*vms*)
    targ_defvec=evax_alpha_vec
    ;;
d54 1
a87 1

a97 5
  sh-*-elf*)
    targ_defvec=bfd_elf32_sh_vec
    targ_selvecs="bfd_elf32_shl_vec shcoff_vec shlcoff_vec"
    targ_underscore=yes
    ;;
d119 2
a120 3
  i[3456]86-*-sysv4* | i[3456]86-*-unixware | i[3456]86-*-solaris2* | \
  i[3456]86-*-elf | i[3456]86-*-sco*elf* | i[3456]86-*-freebsdelf* | \
  i[3456]86-*-dgux*)
d124 2
a125 2
  i[3456]86-*-sysv* | i[3456]86-*-isc* | i[3456]86-*-sco* | i[3456]86-*-coff | \
  i[3456]86-*-aix* | i[3456]86-*-go32* | i[3456]86*-*-rtems*)
d128 1
a128 1
  i[3456]86-sequent-bsd*)
d132 1
a132 1
  i[3456]86-*-bsd*)
d136 1
a136 1
  i[3456]86-*-freebsd*)
d141 1
a141 1
  i[3456]86-*-netbsd*)
d146 1
a146 1
  i[3456]86-*-netware*)
d150 1
a150 1
  i[3456]86-*-linuxaout*)
d155 1
a155 1
  i[3456]86-*-linux*)
d160 1
a160 1
  i[3456]86-*-lynxos*)
d164 1
a164 1
  i[3456]86-*-gnu*)
d170 1
a170 1
  i[3456]86-*-mach* | i[3456]86-*-osf1mk*)
d175 1
a175 1
  i[3456]86-*-os9k)
d178 1
a178 1
  i[3456]86-*-msdos*)
d182 1
a182 1
  i[3456]86-*-moss*)
d186 1
a186 1
  i[3456]86-*-cygwin32 | i[3456]86-*-winnt | i[3456]86-*-pe)
d190 1
a190 1
  i[3456]86-none-*)
d193 1
a193 1
  i[3456]86-*-aout* | i[3456]86*-*-vsta*)
d209 1
a209 1
  i960-*-vxworks5.* | i960-*-coff* | i960-*-sysv* | i960-*-rtems*)
d243 1
a243 1
  m68*-*-coff* | m68*-*-sysv* | m68*-*-rtems*)
a333 4
  mips*-*-irix6*)
    targ_defvec=bfd_elf32_bigmips_vec
    targ_selvecs="bfd_elf32_littlemips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec"
    ;;
d376 1
a376 1
  powerpc-*-solaris2* | powerpc-*-linux* | powerpc-*-rtems*)
a401 5
  sparclet-*-aout*)
    targ_defvec=sunos_big_vec
    targ_selvecs=sparcle_aout_vec
    targ_underscore=yes
    ;;
d410 1
a410 1
  sparc-*-elf* | sparc-*-solaris2*)
a413 3
  sparc-*-sysv4*)
    targ_defvec=bfd_elf32_sparc_vec
    ;;
d429 1
a429 1
  sparc*-*-* | sparc*-*-rtems*)
@


1.1.1.4
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a11 4
# Part of this file is processed by targmatch.sed to generate the
# targmatch.h file.  The #ifdef and #endif lines that appear below are
# copied directly into targmatch.h.

d25 1
a25 1
targ_cpu=`echo $targ | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
a45 2
# START OF targmatch.h
#ifdef BFD64
a63 1
#endif /* BFD64 */
d109 11
a122 1
#if defined (HOST_HPPAHPUX) || defined (HOST_HPPABSD) || defined (HOST_HPPAOSF)
a133 1
#endif /* defined (HOST_HPPAHPUX) || defined (HOST_HPPABSD) || defined (HOST_HPPAOSF) */
a236 1

d379 1
a379 1
  mips*-*-elf* | mips*-*-rtems*)
a383 8
  mn10200-*-*)
    targ_defvec=bfd_elf32_mn10200_vec
    ;;

  mn10300-*-*)
    targ_defvec=bfd_elf32_mn10300_vec
    ;;

a422 11
  sh-*-elf*)
    targ_defvec=bfd_elf32_sh_vec
    targ_selvecs="bfd_elf32_shl_vec shcoff_vec shlcoff_vec"
    targ_underscore=yes
    ;;
  sh-*-*)
    targ_defvec=shcoff_vec
    targ_selvecs="shcoff_vec shlcoff_vec"
    targ_underscore=yes
    ;;

a446 1
#ifdef BFD64
a450 1
#endif /* BFD64 */
a462 1
#if 0
a466 1
#endif
d468 6
a473 2
#if 0
  vax-*-bsd* | vax-*-ultrix*)
a476 1
#endif
d496 1
a496 1
    targ_defvec=a_out_adobe_vec
d509 1
a509 1
# END OF targmatch.h
@


1.1.1.5
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@d10 1
a10 1
#  targ_underscore	Whether underscores are used: yes or no
a104 4
  d10v-*-*)
    targ_defvec=bfd_elf32_d10v_vec
    ;;

d116 1
a116 1
  hppa*-*-*elf* | hppa*-*-lites* | hppa*-*-sysv4* | hppa*-*-rtems*)
d156 1
a156 1
  i[3456]86-*-netbsd* | i[3456]86-*-openbsd*)
d165 1
a165 1
  i[3456]86-*-linux*aout*)
d173 1
d183 1
a234 3
  m32r-*-*)
    targ_defvec=bfd_elf32_m32r_vec
    ;;
a242 3
  m68*-motorola-sysv*)
    targ_defvec=m68ksysvcoff_vec
    ;;
d267 1
a267 1
  m68*-*-linux*aout*)
d285 1
a285 1
  m68*-*-netbsd* | m68*-*-openbsd*)
d297 1
a297 1
    targ_selvecs="m68kcoff_vec versados_vec tekhex_vec"
a361 4
  mips*-*-lnews*)
    targ_defvec=ecoff_biglittle_vec
    targ_selvecs="ecoff_little_vec ecoff_big_vec"
    ;;
a381 12
  mips*-*-none)
    targ_defvec=bfd_elf32_bigmips_vec
    targ_selvecs="bfd_elf32_littlemips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec"
    ;;
  mips*el*-*-linux* | mips*el*-*-openbsd*)
    targ_defvec=bfd_elf32_littlemips_vec
    targ_selvecs="bfd_elf32_bigmips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec ecoff_little_vec ecoff_big_vec"
    ;;
  mips*-*-linux* | mips*-*-openbsd*)
    targ_defvec=bfd_elf32_bigmips_vec
    targ_selvecs="bfd_elf32_littlemips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec ecoff_big_vec ecoff_little_vec"
    ;;
d395 1
a395 1
  ns32k-*-netbsd* | ns32k-*-lites* | ns32k-*-openbsd*)
d400 1
a400 1
  powerpc-*-aix* | powerpc-*-beos*)
d403 1
a403 1
  powerpc-*-*bsd* | powerpc-*-elf* | powerpc-*-sysv4* | powerpc-*-eabi* | \
a445 9
  sparc-*-linux*aout*)
    targ_defvec=sparclinux_vec
    targ_selvecs="bfd_elf32_sparc_vec sunos_big_vec"
    targ_underscore=yes
    ;;
  sparc-*-linux*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs="sparclinux_vec sunos_big_vec"
    ;;
d450 1
a450 1
  sparc-*-netbsd* | sparc-*-openbsd*)
d483 1
a483 1
#if HAVE_host_aout_vec
d490 1
a490 1
#if HAVE_host_aout_vec
@


1.1.1.6
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@a30 1
alpha*) targ_archs=bfd_alpha_arch ;;
a31 3
strongarm*) targ_archs=bfd_arm_arch ;;
thumb*)	targ_archs=bfd_arm_arch ;;
c30*)	targ_archs=bfd_tic30_arch ;;
a33 1
i370)   targ_archs=bfd_i370_arch ;;
a36 1
pj*)	targ_archs="bfd_pj_arch bfd_i386_arch";;
d39 1
a39 2
sparc*) targ_archs=bfd_sparc_arch ;;
v850*)	targ_archs=bfd_v850_arch ;;
a43 1

d52 1
a52 5
  alpha*-*-netbsd* | alpha*-*-freebsd*)
    targ_defvec=bfd_elf64_alpha_vec
    targ_selvecs=ecoffalpha_little_vec
    ;;
  alpha*-*-netware*)
d56 1
a56 1
  alpha*-*-linuxecoff*)
d60 1
a60 1
  alpha*-*-linux-gnu* | alpha*-*-elf*)
d64 2
a65 2
  alpha*-*-*vms*)
    targ_defvec=vms_alpha_vec
d67 1
a67 1
  alpha*-*-*)
a71 9
  arc-*-elf*)
    targ_defvec=bfd_elf32_littlearc_vec
    targ_selvecs=bfd_elf32_bigarc_vec
    ;;

  arm-*-netbsd*)
    targ_defvec=armnetbsd_vec
    targ_underscore=yes
    ;;
a74 11
  arm-epoc-pe*)
    targ_defvec=arm_epoc_pe_little_vec
    targ_selvecs="arm_epoc_pe_little_vec arm_epoc_pe_big_vec arm_epoc_pei_little_vec arm_epoc_pei_big_vec"
    targ_underscore=no
    ;;
  arm-wince-pe | arm-*-wince)
    targ_defvec=armpe_little_vec
    targ_selvecs="armpe_little_vec armpe_big_vec armpei_little_vec armpei_big_vec"
    targ_underscore=no
    targ_cflags=-DARM_WINCE
    ;;
a92 41
  arm-*-elf | arm*-*-linux-gnu* | arm*-*-conix*)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
  arm-*-oabi)
    targ_defvec=bfd_elf32_littlearm_oabi_vec
    targ_selvecs=bfd_elf32_bigarm_oabi_vec
    ;;

  thumb-*-coff)
    targ_defvec=armcoff_little_vec
    targ_selvecs=armcoff_big_vec
    targ_underscore=yes
    ;;
  thumb-*-oabi)
    targ_defvec=bfd_elf32_littlearm_oabi_vec
    targ_selvecs=bfd_elf32_bigarm_oabi_vec
    ;;
  thumb-*-elf)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
  thumb-epoc-pe*)
    targ_defvec=arm_epoc_pe_little_vec
    targ_selvecs="arm_epoc_pe_little_vec arm_epoc_pe_big_vec arm_epoc_pei_little_vec arm_epoc_pei_big_vec"
    targ_underscore=no
    ;;
  thumb-*-pe*)
    targ_defvec=armpe_little_vec
    targ_selvecs="armpe_little_vec armpe_big_vec armpei_little_vec armpei_big_vec"
    targ_underscore=yes
    ;;
  strongarm-*-elf)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
  strongarm-*-coff)
    targ_defvec=armcoff_little_vec
    targ_selvecs=armcoff_big_vec
    targ_underscore=yes
    ;;
a104 11
  avr-*-*)
    targ_defvec=bfd_elf32_avr_vec
    ;;

  c30-*-*aout* | tic30-*-*aout*)
    targ_defvec=tic30_aout_vec
    ;;
  c30-*-*coff* | tic30-*-*coff*)
    targ_defvec=tic30_coff_vec
    ;;

a108 8
  d30v-*-*)
    targ_defvec=bfd_elf32_d30v_vec
    ;;

  fr30-*-elf)
    targ_defvec=bfd_elf32_fr30_vec
    ;;

d120 1
a120 2
#if 0 /* HPPA ELF does not work currently.  */
  hppa*-*-*elf* | hppa*-*-linux-gnu* | hppa*-*-lites* | hppa*-*-sysv4* | hppa*-*-rtems*)
d123 1
a123 3
#endif
#if defined (HOST_HPPAHPUX) || defined (HOST_HPPABSD) || defined (HOST_HPPAOSF) || defined (HOST_HPPAMPEIX)
#if 0 /* HPPA ELF does not work currently.  */
d128 1
a128 2
#endif
  hppa*-*-hpux* | hppa*-*-hiux* | hppa*-*-mpeix*)
a130 1
#if 0 /* HPPA ELF does not work currently.  */
a134 1
#endif
d137 3
a139 11
  i370-*-*) 
    targ_defvec=bfd_elf32_i370_vec
    targ_selvecs="bfd_elf32_i370_vec"
    ;;
  i[3456]86-*-sco3.2v5*coff)
    targ_defvec=i386coff_vec
    targ_selvecs=bfd_elf32_i386_vec
    ;;
  i[3456]86-*-sysv4* | i[3456]86-*-unixware* | i[3456]86-*-solaris2* | \
  i[3456]86-*-elf | i[3456]86-*-sco3.2v5* | \
  i[3456]86-*-dgux* | i[3456]86-*-sysv5*)
a142 4
  i[3456]86-*-msdosdjgpp* | i[3456]*-*-go32* | i[3456]86-go32-rtems* )
    targ_defvec=go32coff_vec
    targ_selvecs="go32stubbedcoff_vec i386aout_vec"
    ;;
d144 1
a144 4
  i[3456]86-*-aix*)
    targ_defvec=i386coff_vec
    ;;
  i[3456]86-*-rtemscoff*)
a145 5
    targ_selvecs="bfd_elf32_i386_vec i386aout_vec"
    ;;
  i[3456]86-*-rtemself* | i[3456]86*-*-rtems*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs="i386coff_vec i386aout_vec"
d147 1
a147 1
 i[3456]86-sequent-bsd*)
d155 1
a155 2
  i[3456]86-*-freebsdaout* | i[3456]86-*-freebsd[12].* | \
  i[3456]86-*-freebsd[12])
a159 4
  i[3456]86-*-freebsd*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs=i386coff_vec
    ;;
d174 1
a174 1
  i[3456]86-*-linux-gnu*)
d184 2
d203 1
a203 1
  i[3456]86-*-beospe*)
a206 14
  i[3456]86-*-beoself* | i[3456]86-*-beos*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs="i386pe_vec i386pei_vec"
    ;;
  i[3456]86-*-interix*)
    targ_defvec=i386pei_vec
    targ_selvecs="i386pe_vec"
    # FIXME: This should eventually be checked at runtime.
    targ_cflags=-DSTRICT_PE_FORMAT
    ;;
  i[3456]86-*-mingw32* | i[3456]86-*-cygwin* | i[3456]86-*-winnt | i[3456]86-*-pe)
    targ_defvec=i386pe_vec
    targ_selvecs="i386pe_vec i386pei_vec bfd_elf32_i386_vec"
    ;;
a212 4
  i[3456]86-*-vxworks*)
    targ_defvec=i386aout_vec
    targ_underscore=yes
    ;;
d226 1
a226 6
  i960-*-rtemself*)
    targ_defvec=bfd_elf32_i960_vec
    targ_selvecs="icoff_big_vec b_out_vec_little_host b_out_vec_big_host ieee_vec"
    targ_underscore=yes
    ;;
  i960-*-vxworks5.* | i960-*-coff* | i960-*-sysv* | i960-*-rtemscoff* | i960-*-rtems*)
a235 4
  i960-*-elf*)
    targ_defvec=bfd_elf32_i960_vec
    targ_selvecs="icoff_little_vec icoff_big_vec"
    ;;
d257 1
a257 1
    # We include cisco_core_big_vec here, rather than making a separate cisco
d260 1
a260 1
    targ_selvecs="cisco_core_big_vec ieee_vec"
d267 1
a267 11
  m68*-*-rtemscoff*)
    # same as m68k-coff with some extra targets
    targ_defvec=m68kcoff_vec
    targ_selvecs="m68kcoff_vec versados_vec ieee_vec aout0_big_vec"
    ;;
  m68*-*-rtems* | m68*-*-rtemself*)
    # same as m68k-elf with some extra targets
    targ_defvec=bfd_elf32_m68k_vec
    targ_selvecs="m68kcoff_vec versados_vec ieee_vec aout0_big_vec"
    ;;
  m68*-*-coff* | m68*-*-sysv*)
d280 1
a280 1
  m68*-*-linux-gnu*)
a283 5
  m68*-*-gnu*)
    targ_defvec=bfd_elf32_m68k_vec
    # targ_selvecs=m68kmach3_vec
    # targ_cflags=-DSTAT_FOR_EXEC
    ;;
a333 9
  mcore-*-elf)
    targ_defvec=bfd_elf32_mcore_big_vec
    targ_selvecs="bfd_elf32_mcore_big_vec bfd_elf32_mcore_little_vec"
    ;;
  mcore-*-pe)
    targ_defvec=mcore_pe_big_vec
    targ_selvecs="mcore_pe_big_vec mcore_pe_little_vec mcore_pei_big_vec mcore_pei_little_vec"
    ;;

d338 1
a338 1
  mips-dec-netbsd* | mips*el*-*-netbsd*)
d340 1
a340 5
    targ_selvecs="bfd_elf32_bigmips_vec ecoff_little_vec ecoff_big_vec"
    ;;
 mips*-*-netbsd*)
    targ_defvec=bfd_elf32_bigmips_vec
    targ_selvecs="bfd_elf32_littlemips_vec ecoff_big_vec ecoff_little_vec"
a377 5
  mips*-*-pe*)
    targ_defvec=mipslpe_vec
    targ_selvecs="mipslpei_vec mipslpei_vec ecoff_little_vec ecoff_big_vec"
    targ_underscore=yes
    ;;
d386 1
a386 1
  mips*el-*-elf* | mips*el-*-rtems* | mips*el-*-vxworks*)
d390 1
a390 1
  mips*-*-elf* | mips*-*-rtems* | mips*-*-vxworks*)
d398 1
a398 1
  mips*el*-*-linux-gnu* | mips*el*-*-openbsd*)
d402 1
a402 1
  mips*-*-linux-gnu* | mips*-*-openbsd*)
a423 10
  pj-*-*)
    targ_defvec=bfd_elf32_pj_vec
    targ_selvecs="bfd_elf32_pj_vec bfd_elf32_pjl_vec"
    ;;

  pjl-*-*)
    targ_defvec=bfd_elf32_pjl_vec
    targ_selvecs="bfd_elf32_pjl_vec bfd_elf32_pj_vec bfd_elf32_i386_vec"
    ;;

d428 1
a428 2
  powerpc-*-solaris2* | powerpc-*-linux-gnu* | powerpc-*-rtems* | \
  powerpc-*-vxworks*)
d430 1
a430 1
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpcle_vec ppcboot_vec"
d440 1
a440 2
  powerpcle-*-solaris2* | powerpcle-*-linux-gnu* | powerpcle-*-vxworks* |\
  powerpcle-*-rtems*)
d442 1
a442 1
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpc_vec ppcboot_vec"
d445 1
a445 1
  powerpcle-*-pe | powerpcle-*-winnt* | powerpcle-*-cygwin*)
d454 1
a454 1
  sh-*-elf* | sh-*-rtemself*)
d456 1
a456 6
    targ_selvecs="bfd_elf32_shl_vec shcoff_vec shlcoff_vec shcoff_small_vec shlcoff_small_vec"
    targ_underscore=yes
    ;;
  sh-*-pe)
    targ_defvec=shlpe_vec
    targ_selvecs="shlpe_vec shlpei_vec"
d459 1
a459 1
  sh-*-* | sh-*-rtemscoff* | sh-*-rtems*)
d461 1
a461 1
    targ_selvecs="shcoff_vec shlcoff_vec shcoff_small_vec shlcoff_small_vec"
a469 7
  sparc86x-*-aout*)
    targ_defvec=sunos_big_vec
    targ_underscore=yes
    ;;
  sparclite-*-elf* | sparc86x-*-elf*)
    targ_defvec=bfd_elf32_sparc_vec
    ;;
d475 1
a475 1
  sparc-*-linux-gnu*)
d477 1
a477 1
    targ_selvecs="sparclinux_vec bfd_elf64_sparc_vec sunos_big_vec"
d483 1
a483 10
  sparc-*-netbsdelf*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs=sparcnetbsd_vec
    ;;
  sparc-*-netbsdaout* | sparc-*-netbsd*)
    targ_defvec=sparcnetbsd_vec
    targ_selvecs=bfd_elf32_sparc_vec
    targ_underscore=yes
    ;;
  sparc-*-openbsd*)
d487 1
a487 1
  sparc-*-elf* | sparc-*-solaris2.[0-6] | sparc-*-solaris2.[0-6].*)
a490 6
#ifdef BFD64
  sparc-*-solaris2* | sparcv9-*-solaris2* | sparc64-*-solaris2*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs="bfd_elf64_sparc_vec sunos_big_vec"
    ;;
#endif
a493 5
  sparc-*-netware*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs="nlm32_sparc_vec sunos_big_vec"
    ;;
#ifdef BFD64
d498 1
a498 4
  sparc64-*-linux-gnu*)
    targ_defvec=bfd_elf64_sparc_vec
    targ_selvecs="bfd_elf32_sparc_vec sparclinux_vec sunos_big_vec"
    ;;
d504 4
d511 1
a511 10
  sparc*-*-rtemsaout*)
    targ_defvec=sunos_big_vec
    targ_selvecs="bfd_elf32_sparc_vec sparccoff_vec"
    targ_underscore=yes
    ;;
  sparc*-*-rtems* | sparc*-*-rtemself*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs="sunos_big_vec sparccoff_vec"
    ;;
  sparc*-*-*)
a522 15
  tic80*-*-*)
    targ_defvec=tic80coff_vec
    targ_underscore=yes
    ;;


  v850-*-*)
    targ_defvec=bfd_elf32_v850_vec
    ;;
  v850e-*-*)
    targ_defvec=bfd_elf32_v850_vec
    ;;
  v850ea-*-*)
    targ_defvec=bfd_elf32_v850_vec
    ;;
a529 4
  vax*-*-*vms*)
    targ_defvec=vms_vax_vec
    ;;

a565 13
    ;;
esac

# If we support any ELF target, then automatically add support for the
# generic ELF targets.  This permits an objdump with some ELF support
# to be used on an arbitrary ELF file for anything other than
# relocation information.
case "${targ_defvec} ${targ_selvecs}" in
  *bfd_elf64*)
    targ_selvecs="${targ_selvecs} bfd_elf64_little_generic_vec bfd_elf64_big_generic_vec bfd_elf32_little_generic_vec bfd_elf32_big_generic_vec"
    ;;
  *bfd_elf32*)
    targ_selvecs="${targ_selvecs} bfd_elf32_little_generic_vec bfd_elf32_big_generic_vec"
@


1.1.1.7
log
@Long delayed import of binutils-2.10.1. Turns out art@@ needs some alpha
bug-fixes...
@
text
@a81 4
  sparc64-*-netbsd*)
    targ_defvec=bfd_elf64_sparc_vec
    targ_selvecs="bfd_elf32_sparc_vec sunos_big_vec"
    ;;
d125 1
a125 5
  armeb-*-elf | arm*b-*-linux-gnu*)
    targ_defvec=bfd_elf32_bigarm_vec
    targ_selvecs=bfd_elf32_littlearm_vec
    ;;
  arm-*-elf | arm*-*-linux-gnu* | arm*-*-conix* | arm*-*-uclinux*)
@


1.1.1.8
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@a34 1
xscale*) targ_archs=bfd_arm_arch ;;
a35 1
c54x*)	targ_archs=bfd_tic54x_arch ;;
a36 1
x86_64) targ_archs=bfd_i386_arch ;;
a38 2
m6811*|m68hc11*) targ_archs="bfd_m68hc11_arch bfd_m68hc12_arch" ;;
m6812*|m68hc12*) targ_archs="bfd_m68hc12_arch bfd_m68hc11_arch" ;;
d82 1
a82 9
  ia64*-*-freebsd* | ia64*-*-linux-gnu* | ia64*-*-elf*)
    targ_defvec=bfd_elf64_ia64_little_vec
    targ_selvecs="bfd_elf64_ia64_big_vec bfd_efi_app_ia64_vec"
    ;;
  ia64*-*-hpux*)
    targ_defvec=bfd_elf64_ia64_big_vec
    targ_selvecs="bfd_elf32_ia64_big_vec"
    ;;
  sparc64-*-freebsd* | sparc64-*-netbsd*)
d116 1
a116 1
  arm-*-aout | armel-*-aout)
a128 10
  arm-*-vxworks*)
    targ_defvec=armcoff_little_vec
    targ_selvecs=armcoff_big_vec
    targ_underscore=yes
    targ_cflags=-DVXWORKS
    ;;
  arm-*-rtems*)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
d133 1
a133 1
  arm-*-elf | arm-*-freebsd* | arm*-*-linux-gnu* | arm*-*-conix* | arm*-*-uclinux*)
a173 9
  xscale-*-elf)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
  xscale-*-coff)
    targ_defvec=armcoff_little_vec
    targ_selvecs=armcoff_big_vec
    targ_underscore=yes
    ;;
d176 1
a176 1
  a29k-*-vxworks* | a29k-*-sysv* | a29k-*rtems*)
a196 12
  c54x*-*-*coff* | tic54x-*-*coff*)
    targ_defvec=tic54x_coff1_vec
    targ_selvecs="tic54x_coff1_beh_vec tic54x_coff2_vec tic54x_coff2_beh_vec tic54x_coff0_vec tic54x_coff0_beh_vec"
    targ_underscore=yes
    ;;

  cris-*-*)
    targ_defvec=cris_aout_vec
    targ_selvecs="bfd_elf32_us_cris_vec bfd_elf32_cris_vec ieee_vec"
    targ_underscore=yes # Note: not true for bfd_elf32_cris_vec.
    ;;

d220 3
a222 9
#ifdef BFD64
  hppa*64*-*-linux-gnu*)
    targ_defvec=bfd_elf64_hppa_linux_vec
    targ_selvecs=bfd_elf64_hppa_vec
    ;;
  hppa*64*-*-hpux11*)
    targ_defvec=bfd_elf64_hppa_vec
    targ_selvecs=bfd_elf64_hppa_linux_vec
    targ_cflags=-DHPUX_LARGE_AR_IDS
a224 10

  hppa*-*-linux-gnu*)
    targ_defvec=bfd_elf32_hppa_linux_vec
    targ_selvecs=bfd_elf32_hppa_vec
    ;;
  hppa*-*-*elf* | hppa*-*-lites* | hppa*-*-sysv4* | hppa*-*-rtems*)
    targ_defvec=bfd_elf32_hppa_vec
    targ_selvecs=bfd_elf32_hppa_linux_vec
    ;;

d226 1
d231 1
d235 1
d240 1
a256 7
  i[3456]86-*-rtemself*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs="i386coff_vec i386aout_vec"
    ;;
  i[3456]86-*-chorus*)
    targ_defvec=bfd_elf32_i386_vec
    ;;
d265 1
a265 1
  i[3456]86*-*-rtems*)
d269 4
d291 1
a291 5
  i[3456]86-*-netbsdelf*) 
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs=i386netbsd_vec
    ;;
  i[3456]86-*-netbsdaout* | i[3456]86-*-netbsd* | i[3456]86-*-openbsd*)
d293 1
a293 1
    targ_selvecs="bfd_elf32_i386_vec i386bsd_vec"
d307 1
a307 10
    targ_selvecs="i386linux_vec bfd_efi_app_ia32_vec"
    ;;
#ifdef BFD64    
  x86_64-*-freebsd*)
    targ_defvec=bfd_elf64_x86_64_vec
    targ_selvecs="bfd_elf32_i386_vec i386coff_vec bfd_efi_app_ia32_vec"
    ;;
  x86_64-*-linux-gnu*)
    targ_defvec=bfd_elf64_x86_64_vec
    targ_selvecs="bfd_elf32_i386_vec i386linux_vec bfd_efi_app_ia32_vec"
a308 1
#endif
a359 4
  i[3456]86-*-chaos)
    targ_defvec=bfd_elf32_i386_vec
    targ_selfvecs=i386chaos_vec
    ;;
a363 4
  i860-stardent-sysv4* | i860-stardent-elf*)
    targ_defvec=bfd_elf32_i860_little_vec
    targ_selvecs="bfd_elf32_i860_vec bfd_elf32_i860_little_vec"
    ;;
d373 6
a378 1
  i960-*-vxworks5.* | i960-*-coff* | i960-*-sysv* | i960-*-rtems*)
a396 9
  m68hc11-*-* | m6811-*-*)
    targ_defvec=bfd_elf32_m68hc11_vec
    targ_selvecs="bfd_elf32_m68hc11_vec bfd_elf32_m68hc12_vec"
    ;;
  m68hc12-*-* | m6812-*-*)
    targ_defvec=bfd_elf32_m68hc12_vec
    targ_selvecs="bfd_elf32_m68hc11_vec bfd_elf32_m68hc12_vec"
    ;;

d423 2
a424 1
  m68*-*-rtems*)
d428 5
d568 2
a569 2
    targ_defvec=bfd_elf32_tradbigmips_vec
    targ_selvecs="bfd_elf32_tradlittlemips_vec ecoff_big_vec ecoff_little_vec"
d575 1
a575 1
  mips*el-*-elf* | mips*el-*-rtems* | mips*el-*-vxworks* | mips*-*-chorus*)
d587 1
a587 1
  mips*el*-*-openbsd*)
d591 1
a591 5
  mips*el*-*-linux-gnu*)
    targ_defvec=bfd_elf32_tradlittlemips_vec
    targ_selvecs="bfd_elf32_tradbigmips_vec bfd_elf64_tradlittlemips_vec bfd_elf64_tradbigmips_vec ecoff_little_vec ecoff_big_vec"
    ;;
  mips*-*-openbsd*)
a594 4
  mips*-*-linux-gnu*)
    targ_defvec=bfd_elf32_tradbigmips_vec
    targ_selvecs="bfd_elf32_tradlittlemips_vec bfd_elf64_tradbigmips_vec bfd_elf64_tradlittlemips_vec ecoff_big_vec ecoff_little_vec"
    ;;
a624 1
    targ_selvecs="rs6000coff64_vec"
d628 1
a628 1
  powerpc-*-chorus* | powerpc-*-vxworks*)
a654 5
  sh-*-linux*)
    targ_defvec=bfd_elf32_shblin_vec
    targ_selvecs=bfd_elf32_shlin_vec
    ;;

d665 1
a665 1
  sh-*-* | sh-*-rtems*)
a682 3
  sparc*-*-chorus*)
    targ_defvec=bfd_elf32_sparc_vec
    ;;
d738 1
a738 1
    ;;
d752 1
a752 1
  sparc*-*-* | sparc*-*-rtems*)
@


1.1.1.9
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@a7 2
#  targ64_selvecs	Vectors to build if --enable-64-bit-bfd is given
#			or if host is 64 bit.
a25 1
targ64_selvecs=
d31 11
a41 9
alpha*)          targ_archs=bfd_alpha_arch ;;
arm*)	         targ_archs=bfd_arm_arch ;;
c30*)	         targ_archs=bfd_tic30_arch ;;
c4x*)            targ_archs=bfd_tic4x_arch ;;
c54x*)	         targ_archs=bfd_tic54x_arch ;;
dlx*)		 targ_archs=bfd_dlx_arch ;;
hppa*)	         targ_archs=bfd_hppa_arch ;;
i[3456]86)       targ_archs=bfd_i386_arch ;;
i370)            targ_archs=bfd_i370_arch ;;
d44 10
a53 19
m68*)	         targ_archs=bfd_m68k_arch ;;
m88*)	         targ_archs=bfd_m88k_arch ;;
mips*)	         targ_archs=bfd_mips_arch ;;
or32*)		 targ_archs=bfd_or32_arch ;;
pdp11*)	         targ_archs=bfd_pdp11_arch ;;
pj*)	         targ_archs="bfd_pj_arch bfd_i386_arch";;
powerpc*)        targ_archs="bfd_rs6000_arch bfd_powerpc_arch" ;;
rs6000)	         targ_archs="bfd_rs6000_arch bfd_powerpc_arch" ;;
s390*)           targ_archs=bfd_s390_arch ;;
sh*)             targ_archs=bfd_sh_arch ;;
sparc*)          targ_archs=bfd_sparc_arch ;;
strongarm*)      targ_archs=bfd_arm_arch ;;
thumb*)	         targ_archs=bfd_arm_arch ;;
v850*)	         targ_archs=bfd_v850_arch ;;
x86_64)          targ_archs=bfd_i386_arch ;;
xscale*)         targ_archs=bfd_arm_arch ;;
xtensa*)         targ_archs=bfd_xtensa_arch ;;
z8k*)	         targ_archs=bfd_z8k_arch ;;
*)	         targ_archs=bfd_${targ_cpu}_arch ;;
a60 3
#
#  Keep obsolete entries above the START comment, to keep them out of
#  targmatch.h.
a62 10
  mips*-dec-bsd*)
    echo "This target is obsolete and has been removed." 
    exit 1
    ;;

  mips*-*-pe*)
    echo "This target is obsolete and has been removed." 
    exit 1
    ;;

d65 1
a65 10
  alpha*-*-freebsd*)
    targ_defvec=bfd_elf64_alpha_freebsd_vec
    targ_selvecs=ecoffalpha_little_vec
    # FreeBSD <= 4.0 supports only the old nonstandard way of ABI labelling.
    case "${targ}" in
      alpha*-*-freebsd3* | alpha*-*-freebsd4 | alpha*-*-freebsd4.0*)
	targ_cflags=-DOLD_FREEBSD_ABI_LABEL ;;
    esac
    ;;
  alpha*-*-netbsd* | alpha*-*-openbsd*)
d87 1
a87 5
  ia64*-*-aix*)
    targ_defvec=bfd_elf64_ia64_aix_little_vec
    targ_selvecs="bfd_elf64_ia64_aix_big_vec bfd_efi_app_ia64_vec"
    ;;
  ia64*-*-freebsd* | ia64*-*-netbsd* | ia64*-*-linux-gnu* | ia64*-*-elf*)
d92 2
a93 2
    targ_defvec=bfd_elf32_ia64_hpux_big_vec
    targ_selvecs="bfd_elf64_ia64_hpux_big_vec"
d95 1
a95 1
  sparc64-*-freebsd* | sparc64-*-netbsd* | sparc64-*-openbsd*)
d106 1
a106 9
  armeb-*-netbsdelf*)
    targ_defvec=bfd_elf32_bigarm_vec
    targ_selvecs="bfd_elf32_littlearm_vec armnetbsd_vec"
    ;;
  arm-*-netbsdelf*)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs="bfd_elf32_bigarm_vec armnetbsd_vec"
    ;;
  arm-*-netbsd* | arm-*-openbsd*)
a107 1
    targ_selvecs="bfd_elf32_littlearm_vec bfd_elf32_bigarm_vec"
a109 4
  arm-*-nto* | nto*arm*)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
a116 1
    targ_cflags=-DARM_COFF_BUGFIX
d137 1
a137 1
  arm-*-vxworks*)
a140 1
    targ_cflags=-DARM_COFF_BUGFIX
d142 1
a142 1
  arm-*-coff)
d146 1
a155 4
  arm-*-kaos* | strongarm-*-kaos*)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
a159 4
  arm9e-*-elf)
    targ_defvec=bfd_elf32_littlearm_vec
    targ_selvecs=bfd_elf32_bigarm_vec
    ;;
a228 6
  c4x-*-*coff* | tic4x-*-*coff*)
    targ_defvec=tic4x_coff1_vec
    targ_selvecs="tic4x_coff1_beh_vec tic4x_coff2_vec tic4x_coff2_beh_vec tic4x_coff0_vec tic4x_coff0_beh_vec"
    targ_underscore=yes
    ;;

a244 5
  dlx-*-elf*)
    targ_defvec=bfd_elf32_dlx_big_vec
    targ_selvecs="bfd_elf32_dlx_big_vec"
    ;;

a252 9
  frv-*-elf)
    targ_defvec=bfd_elf32_frv_vec
    ;;


  h8300*-*-elf)
    targ_defvec=bfd_elf32_h8300_vec
    targ_underscore=yes
    ;;
d280 1
a280 1
  hppa*-*-*elf* | hppa*-*-lites* | hppa*-*-netbsd* | hppa*-*-sysv4* | hppa*-*-rtems* | hppa*-*-openbsd*)
d313 1
a313 9
  i[3456]86-*-kaos*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs=bfd_elf32_i386_vec
    ;;
  i[3456]86-*-nto*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs=i386coff_vec
    ;;
  i[3456]86-*-aros*)
d315 1
d320 1
a320 1
  *-*-msdosdjgpp* | *-*-go32* | *-go32-rtems* )
d328 1
a328 1
  i[3456]86*-*-rtemscoff*)
a331 9
  i[3456]86-*-rtemself* | i[3456]86-*-rtems*)
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs="i386coff_vec i386aout_vec"
    ;;
  i[3456]86-*-darwin* | i[3456]86-*-macos10* | i[3456]86-*-rhapsody*)
    targ_defvec=mach_o_le_vec
    targ_selvecs="mach_o_le_vec mach_o_be_vec mach_o_fat_vec pef_vec pef_xlib_vec sym_vec"
    targ_archs="bfd_i386_arch bfd_powerpc_arch bfd_rs6000_arch"
    ;;
d347 1
a347 1
    targ_defvec=bfd_elf32_i386_freebsd_vec
a348 5
    # FreeBSD <= 4.0 supports only the old nonstandard way of ABI labelling.
    case "${targ}" in
      i[3456]86-*-freebsd3* | i[3456]86-*-freebsd4 | i[3456]86-*-freebsd4.0*)
	targ_cflags=-DOLD_FREEBSD_ABI_LABEL ;;
    esac
a353 4
  i[3456]86-*-netbsdpe*)
    targ_defvec=i386pe_vec
    targ_selvecs="i386pe_vec i386pei_vec bfd_elf32_i386_vec"
    ;;
a370 1
    targ64_selvecs=bfd_elf64_x86_64_vec
d372 1
a372 1
#ifdef BFD64
a376 4
  x86_64-*-netbsd*)
    targ_defvec=bfd_elf64_x86_64_vec
    targ_selvecs="bfd_elf32_i386_vec i386netbsd_vec i386coff_vec bfd_efi_app_ia32_vec"
    ;;
a468 8
  ip2k-*-elf)
    targ_defvec=bfd_elf32_ip2k_vec
    ;;

  iq2000-*-elf)
    targ_defvec=bfd_elf32_iq2000_vec
    ;;

a503 4
  m68*-*-rtemscoff*)
    targ_defvec=m68kcoff_vec
    targ_selvecs="m68kcoff_vec versados_vec ieee_vec aout0_big_vec"
    ;;
d509 1
a509 1
    targ_defvec=bfd_elf32_m68k_vec
d543 1
a543 10
  m68*-*-netbsdelf*) 
    targ_defvec=bfd_elf32_m68k_vec
    targ_selvecs="m68knetbsd_vec m68k4knetbsd_vec hp300bsd_vec sunos_big_vec"
    ;;
  m68*-*-netbsdaout* | m68*-*-netbsd*)
    targ_defvec=m68knetbsd_vec
    targ_selvecs="m68k4knetbsd_vec bfd_elf32_m68k_vec hp300bsd_vec sunos_big_vec"
    targ_underscore=yes
    ;;
  m68*-*-openbsd*)
d597 1
a597 1
  mips*el-*-netbsd*)
d599 1
a599 1
    targ_selvecs="bfd_elf32_bigmips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec ecoff_little_vec ecoff_big_vec"
d601 1
a601 1
  mips*-*-netbsd*)
d603 5
a607 1
    targ_selvecs="bfd_elf32_littlemips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec ecoff_big_vec ecoff_little_vec"
a620 1
#ifdef BFD64
d622 2
a623 2
    targ_defvec=bfd_elf32_nbigmips_vec
    targ_selvecs="bfd_elf32_nlittlemips_vec bfd_elf32_bigmips_vec bfd_elf32_littlemips_vec bfd_elf64_bigmips_vec bfd_elf64_littlemips_vec"
a624 1
#endif
d641 5
d666 1
a666 1
  mips*el-*-openbsd*)
d670 4
d678 1
a678 16
#ifdef BFD64
  mips64*el-*-linux*)
    targ_defvec=bfd_elf32_ntradlittlemips_vec
    targ_selvecs="bfd_elf32_ntradbigmips_vec bfd_elf32_tradlittlemips_vec bfd_elf32_tradbigmips_vec bfd_elf64_tradlittlemips_vec bfd_elf64_tradbigmips_vec"
    ;;
  mips64*-*-linux*)
    targ_defvec=bfd_elf32_ntradbigmips_vec
    targ_selvecs="bfd_elf32_ntradlittlemips_vec bfd_elf32_tradbigmips_vec bfd_elf32_tradlittlemips_vec bfd_elf64_tradbigmips_vec bfd_elf64_tradlittlemips_vec"
    ;;
#endif
  mips*el-*-linux*)
    targ_defvec=bfd_elf32_tradlittlemips_vec
    targ_selvecs="bfd_elf32_tradbigmips_vec ecoff_little_vec ecoff_big_vec bfd_elf32_ntradlittlemips_vec bfd_elf64_tradlittlemips_vec bfd_elf32_ntradbigmips_vec bfd_elf64_tradbigmips_vec"
    want64=true
    ;;
  mips*-*-linux*)
d680 1
a680 2
    targ_selvecs="bfd_elf32_tradlittlemips_vec ecoff_big_vec ecoff_little_vec bfd_elf32_ntradbigmips_vec bfd_elf64_tradbigmips_vec bfd_elf32_ntradlittlemips_vec bfd_elf64_tradlittlemips_vec"
    want64=true
d682 1
a682 6
#ifdef BFD64
  mmix-*-*)
    targ_defvec=bfd_elf64_mmix_vec
    targ_selvecs=bfd_mmo_vec
    ;;
#endif
a690 4
  msp430-*-*)
    targ_defvec=bfd_elf32_msp430_vec
    ;;

a699 18
  openrisc-*-elf)
    targ_defvec=bfd_elf32_openrisc_vec
    ;;

  or32-*-coff | or32-*-rtems*)
    targ_defvec=or32coff_big_vec
    targ_underscore=yes
    ;;

  or32-*-elf)
    targ_defvec=bfd_elf32_or32_big_vec
    ;;

  pdp11-*-*)
    targ_defvec=pdp11_aout_vec
    targ_underscore=yes
    ;;

d710 1
a710 1
  powerpc-*-aix5*)
d712 1
a712 35
    targ_selvecs="aix5coff64_vec"
    want64=true
    ;;
#ifdef BFD64
  powerpc64-*-aix5*)
    targ_defvec=aix5coff64_vec
    targ_selvecs="rs6000coff_vec"
    want64=true
    ;;
#endif

  powerpc-*-aix* | powerpc-*-beos* | rs6000-*-*)
    targ_defvec=rs6000coff_vec
    targ64_selvecs=rs6000coff64_vec
    case "${targ}" in
        *-*-aix4.[3456789]* | *-*-aix[56789]*)
	want64=true;;
	
	*)
	targ_cflags=-DSMALL_ARCHIVE;;
    esac
    ;;
#ifdef BFD64
  powerpc64-*-aix*)
    targ_defvec=rs6000coff64_vec
    targ_selvecs=rs6000coff_vec
    ;;
  powerpc64-*-elf* | powerpc-*-elf64* | powerpc64-*-linux* | \
  powerpc64-*-*bsd*)
    targ_defvec=bfd_elf64_powerpc_vec
    targ_selvecs="bfd_elf64_powerpcle_vec bfd_elf32_powerpc_vec bfd_elf32_powerpcle_vec rs6000coff_vec rs6000coff64_vec"
    ;;
  powerpc64le-*-elf* | powerpcle-*-elf64*)
    targ_defvec=bfd_elf64_powerpcle_vec
    targ_selvecs="bfd_elf64_powerpc_vec bfd_elf32_powerpcle_vec bfd_elf32_powerpc_vec rs6000coff_vec rs6000coff64_vec"
a713 1
#endif
d716 1
a716 1
  powerpc-*-chorus* | powerpc-*-vxworks* | powerpc-*-windiss*)
a718 11
    targ64_selvecs="bfd_elf64_powerpc_vec bfd_elf64_powerpcle_vec"
    ;;
  powerpc-*-kaos*)
    targ_defvec=bfd_elf32_powerpc_vec
    targ_selvecs="bfd_elf32_powerpcle_vec ppcboot_vec"
    targ64_selvecs="bfd_elf64_powerpc_vec bfd_elf64_powerpcle_vec"
    ;;
  powerpc-*-darwin* | powerpc-*-macos10* | powerpc-*-rhapsody*)
    targ_defvec=mach_o_be_vec
    targ_selvecs="mach_o_be_vec mach_o_le_vec mach_o_fat_vec pef_vec pef_xlib_vec sym_vec"
    targ_archs="bfd_powerpc_arch bfd_rs6000_arch bfd_i386_arch"
a726 8
  powerpc-*-nto*)
    targ_defvec=bfd_elf32_powerpc_vec
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpcle_vec ppcboot_vec"
    ;;
  powerpcle-*-nto*)
    targ_defvec=bfd_elf32_powerpcle_vec
    targ_selvecs="rs6000coff_vec bfd_elf32_powerpc_vec ppcboot_vec"
    ;;
a731 1
    targ64_selvecs="bfd_elf64_powerpc_vec bfd_elf64_powerpcle_vec"
d739 2
a740 3
  s390-*-linux*)
    targ_defvec=bfd_elf32_s390_vec
    targ64_selvecs=bfd_elf64_s390_vec
a741 27
#ifdef BFD64
  s390x-*-linux*)
    targ_defvec=bfd_elf64_s390_vec
    targ_selvecs=bfd_elf32_s390_vec
    ;;
#endif

#ifdef BFD64
  sh64l*-*-elf*)
    targ_defvec=bfd_elf32_sh64l_vec
    targ_selvecs="bfd_elf32_sh64_vec bfd_elf64_sh64l_vec bfd_elf64_sh64_vec bfd_elf32_shl_vec bfd_elf32_sh_vec"
    targ_underscore=yes
    ;;
  sh64-*-elf*)
    targ_defvec=bfd_elf32_sh64_vec
    targ_selvecs="bfd_elf32_sh64l_vec bfd_elf64_sh64_vec bfd_elf64_sh64l_vec bfd_elf32_sh_vec bfd_elf32_shl_vec"
    targ_underscore=yes
    ;;
  sh64eb-*-linux*)
    targ_defvec=bfd_elf32_sh64blin_vec
    targ_selvecs="bfd_elf32_sh64lin_vec bfd_elf64_sh64blin_vec bfd_elf64_sh64lin_vec bfd_elf32_shblin_vec bfd_elf32_shlin_vec"
    ;;
  sh64-*-linux*)
    targ_defvec=bfd_elf32_sh64lin_vec
    targ_selvecs="bfd_elf32_sh64blin_vec bfd_elf64_sh64lin_vec bfd_elf64_sh64blin_vec bfd_elf32_shlin_vec bfd_elf32_shblin_vec"
    ;;
#endif /* BFD64 */
a745 7
#ifdef BFD64
    targ_selvecs="${targ_selvecs} bfd_elf32_sh64lin_vec bfd_elf32_sh64blin_vec bfd_elf64_sh64lin_vec bfd_elf64_sh64blin_vec"
#endif
    ;;
  sh*eb-*-linux*)
    targ_defvec=bfd_elf32_shblin_vec
    targ_selvecs=bfd_elf32_shlin_vec
a746 24
  sh*-*-linux*)
    targ_defvec=bfd_elf32_shlin_vec
    targ_selvecs=bfd_elf32_shblin_vec
    ;;

#ifdef BFD64
  sh5le-*-netbsd*)
    targ_defvec=bfd_elf32_sh64lnbsd_vec
    targ_selvecs="bfd_elf32_sh64nbsd_vec bfd_elf64_sh64lnbsd_vec bfd_elf64_sh64nbsd_vec"
    ;;
  sh5-*-netbsd*)
    targ_defvec=bfd_elf32_sh64nbsd_vec
    targ_selvecs="bfd_elf32_sh64lnbsd_vec bfd_elf64_sh64lnbsd_vec bfd_elf64_sh64nbsd_vec"
    ;;

  sh64le-*-netbsd*)
    targ_defvec=bfd_elf64_sh64lnbsd_vec
    targ_selvecs="bfd_elf64_sh64nbsd_vec bfd_elf32_sh64lnbsd_vec bfd_elf32_sh64nbsd_vec"
    ;;
  sh64-*-netbsd*)
    targ_defvec=bfd_elf64_sh64nbsd_vec
    targ_selvecs="bfd_elf64_sh64lnbsd_vec bfd_elf32_sh64lnbsd_vec bfd_elf32_sh64nbsd_vec"
    ;;
#endif
d748 1
a748 40
  shle-*-netbsdelf*)
    targ_defvec=bfd_elf32_shlnbsd_vec
    targ_selvecs="bfd_elf32_shnbsd_vec shcoff_vec shlcoff_vec"
#ifdef BFD64
    targ_selvecs="${targ_selvecs} bfd_elf32_sh64lnbsd_vec bfd_elf32_sh64nbsd_vec bfd_elf64_sh64lnbsd_vec bfd_elf64_sh64nbsd_vec"
#endif
    ;;
  sh*le-*-netbsdelf*)
    targ_defvec=bfd_elf32_shlnbsd_vec
    targ_selvecs="bfd_elf32_shnbsd_vec shcoff_vec shlcoff_vec"
    ;;
  sh-*-netbsdelf*)
    targ_defvec=bfd_elf32_shnbsd_vec
    targ_selvecs="bfd_elf32_shlnbsd_vec shcoff_vec shlcoff_vec"
#ifdef BFD64
    targ_selvecs="${targ_selvecs} bfd_elf32_sh64lnbsd_vec bfd_elf32_sh64nbsd_vec bfd_elf64_sh64lnbsd_vec bfd_elf64_sh64nbsd_vec"
#endif
    ;;
  sh*-*-netbsdelf*)
    targ_defvec=bfd_elf32_shnbsd_vec
    targ_selvecs="bfd_elf32_shlnbsd_vec shcoff_vec shlcoff_vec"
    ;;

  shl*-*-elf* | sh[1234]l*-*-elf* | sh3el*-*-elf* | shl*-*-kaos*)
    targ_defvec=bfd_elf32_shl_vec
    targ_selvecs="bfd_elf32_sh_vec shlcoff_vec shcoff_vec shlcoff_small_vec shcoff_small_vec"
#ifdef BFD64
    targ_selvecs="${targ_selvecs} bfd_elf32_sh64_vec bfd_elf32_sh64l_vec bfd_elf64_sh64_vec bfd_elf64_sh64l_vec"
#endif
    targ_underscore=yes
    ;;
  sh-*-elf* | sh[1234]*-elf* | sh-*-rtemself* | sh-*-kaos*)
    targ_defvec=bfd_elf32_sh_vec
    targ_selvecs="bfd_elf32_shl_vec shcoff_vec shlcoff_vec shcoff_small_vec shlcoff_small_vec"
#ifdef BFD64
    targ_selvecs="${targ_selvecs} bfd_elf32_sh64_vec bfd_elf32_sh64l_vec bfd_elf64_sh64_vec bfd_elf64_sh64l_vec"
#endif
    targ_underscore=yes
    ;;
  sh-*-nto*)
d875 1
a875 12

  vax-*-netbsdelf*)
    targ_defvec=bfd_elf32_vax_vec
    targ_selvecs="vaxnetbsd_vec vax1knetbsd_vec"
    ;;

  vax-*-netbsdaout* | vax-*-netbsd*)
    targ_defvec=vaxnetbsd_vec
    targ_selvecs="bfd_elf32_vax_vec vax1knetbsd_vec"
    targ_underscore=yes
    ;;

d877 1
a877 1
    targ_defvec=vaxbsd_vec
d880 1
a893 9
  xstormy16-*-elf)
    targ_defvec=bfd_elf32_xstormy16_vec
    ;;

  xtensa-*-*)
    targ_defvec=bfd_elf32_xtensa_le_vec
    targ_selvecs=bfd_elf32_xtensa_be_vec
    ;;

a924 6
case "${host64}${want64}" in
  *true*)
    targ_selvecs="${targ_selvecs} ${targ64_selvecs}"
    ;;
esac

d930 1
a930 1
  *bfd_elf64* | *bfd_elf32_n*mips*)
@


1.1.1.10
log
@Binutils 2.15, with testsuites removed, and without gdb and libiberty.
@
text
@a31 14
# Catch obsolete configurations.
case $targ in
 vax-*-vms*			\
 )
    if test "x$enable_obsolete" != xyes; then
      echo "*** Configuration $targ is obsolete." >&2
      echo "*** Specify --enable-obsolete to build it anyway." >&2
      echo "*** Support will be REMOVED in the next major release of BINUTILS," >&2
      echo "*** unless a maintainer comes forward." >&2
      exit 1
    fi;;
esac


d41 1
a41 1
i[3-7]86)       targ_archs=bfd_i386_arch ;;
a62 1
am33_2.0)        targ_archs=bfd_mn10300_arch ;;
d77 1
a77 6
    echo "This target is obsolete and has been removed."
    exit 1
    ;;

  mips*-*-mach3*)
    echo "This target is obsolete and has been removed."
d82 1
a82 1
    echo "This target is obsolete and has been removed."
d88 1
a88 1
  alpha*-*-freebsd* | alpha*-*-kfreebsd*-gnu)
d119 5
a123 1
  ia64*-*-freebsd* | ia64*-*-netbsd* | ia64*-*-linux-gnu* | ia64*-*-elf* | ia64*-*-kfreebsd*-gnu)
d131 1
a131 1
  sparc64-*-freebsd* | sparc64-*-netbsd* | sparc64-*-openbsd* | sparc64-*-kfreebsd*-gnu)
a136 3
  am33_2.0-*-linux*)
    targ_defvec=bfd_elf32_am33lin_vec
    ;;
a153 1
    targ_cflags=-D__QNXTARGET__
d172 1
a172 1
    targ_cflags="-DARM_WINCE -DARM_COFF_BUGFIX"
d187 6
d210 1
a210 2
  arm-*-elf | arm-*-freebsd* | arm*-*-linux-gnu* | arm*-*-conix* | \
  arm*-*-uclinux* | arm-*-kfreebsd*-gnu | arm-*-vxworks)
d287 1
a287 1
  c4x-*-*coff* | tic4x-*-*coff* | tic4x-*-rtems*)
a323 1
    targ_selvecs=bfd_elf32_frvfdpic_vec
a325 4
  frv-*-*linux*)
    targ_defvec=bfd_elf32_frvfdpic_vec
    targ_selvecs=bfd_elf32_frv_vec
    ;;
d354 1
a354 1
  hppa*-*-linux-gnu* | hppa*-*-netbsd*)
d358 1
a358 1
  hppa*-*-*elf* | hppa*-*-lites* | hppa*-*-sysv4* | hppa*-*-rtems* | hppa*-*-openbsd*)
d381 1
a381 1
  i[3-7]86-*-sco3.2v5*coff)
d385 3
a387 3
  i[3-7]86-*-sysv4* | i[3-7]86-*-unixware* | i[3-7]86-*-solaris2* | \
  i[3-7]86-*-elf | i[3-7]86-*-sco3.2v5* | \
  i[3-7]86-*-dgux* | i[3-7]86-*-sysv5*)
d391 1
a391 1
  i[3-7]86-*-kaos*)
d395 1
a395 1
  i[3-7]86-*-nto*)
d399 1
a399 1
  i[3-7]86-*-aros*)
d402 1
a402 1
  i[3-7]86-*-chorus*)
d409 2
a410 2
  i[3-7]86-*-sysv* | i[3-7]86-*-isc* | i[3-7]86-*-sco* | i[3-7]86-*-coff | \
  i[3-7]86-*-aix*)
d413 1
a413 1
  i[3-7]86*-*-rtemscoff*)
d417 1
a417 1
  i[3-7]86-*-rtemself* | i[3-7]86-*-rtems*)
d421 1
a421 1
  i[3-7]86-*-darwin* | i[3-7]86-*-macos10* | i[3-7]86-*-rhapsody*)
d426 1
a426 1
 i[3-7]86-sequent-bsd*)
d430 1
a430 1
  i[3-7]86-*-bsd*)
d434 2
a435 2
  i[3-7]86-*-freebsdaout* | i[3-7]86-*-freebsd[12].* | \
  i[3-7]86-*-freebsd[12])
d440 1
a440 1
  i[3-7]86-*-freebsd* | i[3-7]86-*-kfreebsd*-gnu)
d445 1
a445 1
      i[3-7]86-*-freebsd3* | i[3-7]86-*-freebsd4 | i[3-7]86-*-freebsd4.0*)
d449 1
a449 1
  i[3-7]86-*-netbsdelf* | i[3-7]86-*-netbsd*-gnu* | i[3-7]86-*-knetbsd*-gnu)
a451 1
    targ64_selvecs=bfd_elf64_x86_64_vec
d453 1
a453 1
  i[3-7]86-*-netbsdpe*)
d457 1
a457 2
  i[3-7]86-*-netbsdaout* | i[3-7]86-*-netbsd* | \
  i[3-7]86-*-openbsd[0-2].* | i[3-7]86-*-openbsd3.[0-3])
d462 1
a462 5
  i[3-7]86-*-openbsd*) 
    targ_defvec=bfd_elf32_i386_vec
    targ_selvecs=i386netbsd_vec
    ;;
  i[3-7]86-*-netware*)
d466 1
a466 1
  i[3-7]86-*-linux*aout*)
d471 1
a471 1
  i[3-7]86-*-linux-gnu*)
d477 1
a477 1
  x86_64-*-freebsd* | x86_64-*-kfreebsd*-gnu)
d481 1
a481 1
  x86_64-*-netbsd* | x86_64-*-openbsd*)
d490 1
a490 1
  i[3-7]86-*-lynxos*)
d494 1
a494 1
  i[3-7]86-*-gnu*)
d497 1
a497 1
  i[3-7]86-*-mach* | i[3-7]86-*-osf1mk*)
d502 1
a502 1
  i[3-7]86-*-os9k)
d505 1
a505 1
  i[3-7]86-*-msdos*)
d509 1
a509 1
  i[3-7]86-*-moss*)
d513 1
a513 1
  i[3-7]86-*-beospe*)
d517 1
a517 1
  i[3-7]86-*-beoself* | i[3-7]86-*-beos*)
d521 1
a521 1
  i[3-7]86-*-interix*)
d527 1
a527 1
  i[3-7]86-*-mingw32* | i[3-7]86-*-cygwin* | i[3-7]86-*-winnt | i[3-7]86-*-pe)
d531 1
a531 1
  i[3-7]86-none-*)
d534 1
a534 1
  i[3-7]86-*-aout* | i[3-7]86*-*-vsta*)
d537 2
a538 2
  i[3-7]86-*-vxworks)
    targ_defvec=bfd_elf32_i386_vec
d541 1
a541 1
  i[3-7]86-*-chaos)
a584 15
  m32r*le-*-linux*)
    targ_defvec=bfd_elf32_m32rlelin_vec
    targ_selvecs="bfd_elf32_m32rlin_vec  bfd_elf32_m32rlelin_vec"
    ;;
                                                                                
  m32r*-*-linux*)
    targ_defvec=bfd_elf32_m32rlin_vec
    targ_selvecs="bfd_elf32_m32rlin_vec  bfd_elf32_m32rlelin_vec"
    ;;
                                                                                
  m32r*le-*-*)
    targ_defvec=bfd_elf32_m32rle_vec
    targ_selvecs="bfd_elf32_m32r_vec bfd_elf32_m32rle_vec"
    ;;

d624 1
a624 1
  m68*-*-elf* | m68*-*-sysv4* | m68*-*-uclinux*)
d734 4
d764 4
d780 1
a780 1
  mips*-*-elf* | mips*-*-rtems* | mips*-*-vxworks | mips*-*-windiss)
a827 1
    targ_underscore=yes
d847 1
a847 1
  or32-*-coff)
d852 1
a852 1
  or32-*-elf | or32-*-rtems*)
a870 12
  powerpc-*-aix5.[01])
    targ_defvec=rs6000coff_vec
    targ_selvecs="aix5coff64_vec"
    want64=true
    ;;
#ifdef BFD64
  powerpc64-*-aix5.[01])
    targ_defvec=aix5coff64_vec
    targ_selvecs="rs6000coff_vec"
    want64=true
    ;;
#endif
a871 1
    targ_cflags=-DAIX_WEAK_SUPPORT
a877 1
    targ_cflags=-DAIX_WEAK_SUPPORT
d890 1
d949 1
d1023 1
a1023 1
  sh*l*-*-netbsdelf*)
d1030 4
d1045 1
d1054 1
a1054 6
  sh-*-rtemscoff*)
    targ_defvec=shcoff_vec
    targ_selvecs="shcoff_vec shlcoff_vec shcoff_small_vec shlcoff_small_vec"
    targ_underscore=yes
    ;;
  sh-*-elf* | sh[1234]*-elf* | sh-*-rtems* | sh-*-kaos*)
d1072 1
a1072 9
  sh-*-vxworks)
    targ_defvec=bfd_elf32_sh_vec
    targ_selvecs="bfd_elf32_shl_vec"
    # FIXME None of the following are actually used on this target, but
    # they're necessary for coff-sh.c (which is unconditionally used) to be
    # compiled correctly.
    targ_selvecs="$targ_selvecs shcoff_vec shlcoff_vec shcoff_small_vec shlcoff_small_vec"
    ;;
  sh-*-*)
d1115 1
a1115 1
  sparc-*-openbsd[0-2].* | sparc-*-openbsd3.[0-1])
a1118 4
  sparc-*-openbsd*)
    targ_defvec=bfd_elf32_sparc_vec
    targ_selvecs=sparcnetbsd_vec
    ;;
d1179 1
a1203 9
    ;;

  vax-*-openbsd*)
    targ_defvec=vaxnetbsd_vec
    targ_underscore=yes
    ;;

  vax-*-linux-gnu*)
    targ_defvec=bfd_elf32_vax_vec
@


