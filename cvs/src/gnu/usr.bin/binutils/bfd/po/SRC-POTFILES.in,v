head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.52
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.48
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.44
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.46
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.38
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.42
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.40
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.36
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.34
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.32
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	BINUTILS_2_15:1.1.1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	BINUTILS-2_14:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2004.11.02.20.45.14;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.20.21.33.55;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.17.20.42.22;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.17.20.42.22;	author drahn;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.11.02.20.22.37;	author miod;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Merge conflicts, bringing our changes back in:
- extra $(SHELL) and sugar for make (so that files not mode +x still work)
- safer temp file handling
- our W^X binary layout changes in ld
- OpenBSD policy for library file selection in ld
- arm and m88k changes which were not merged in time for official 2.15
- bfd core file handling
- a couple typos

New for 2.15:
- ld(1) and as(1) manpages now generated at build time
- binutils/stabs.c reverted to use our in-tree libiberty for now
- we still use our VIA C3 crypto code over stock binutils, as it recognizes
  more instructions
- new emulations for OpenBSD on mips64 machines, to help OpenBSD/sgi
- relaxed %f# handling in gas on OpenBSD/sparc64 (same as was in 2.14)

Tested on all platforms by various people; special thanks to sturm@@ and
otto@@.
@
text
@aix386-core.c
aix5ppc-core.c
aout0.c
aout32.c
aout64.c
aout-adobe.c
aout-arm.c
aout-cris.c
aoutf1.h
aout-ns32k.c
aout-sparcle.c
aout-target.h
aout-tic30.c
aoutx.h
archive64.c
archive.c
archures.c
armnetbsd.c
bfd.c
bfdio.c
bfdwin.c
binary.c
bout.c
cache.c
cf-i386lynx.c
cf-m68klynx.c
cf-sparclynx.c
cisco-core.c
coff64-rs6000.c
coff-a29k.c
coff-alpha.c
coff-apollo.c
coff-arm.c
coff-aux.c
coffcode.h
coffgen.c
coff-go32.c
coff-h8300.c
coff-h8500.c
coff-i386.c
coff-i860.c
coff-i960.c
cofflink.c
coff-m68k.c
coff-m88k.c
coff-mips.c
coff-or32.c
coff-rs6000.c
coff-sh.c
coff-sparc.c
coff-stgo32.c
coff-svm68k.c
coffswap.h
coff-tic30.c
coff-tic4x.c
coff-tic54x.c
coff-tic80.c
coff-u68k.c
coff-w65.c
coff-we32k.c
coff-z8k.c
corefile.c
cpu-a29k.c
cpu-alpha.c
cpu-arc.c
cpu-arm.c
cpu-avr.c
cpu-cris.c
cpu-d10v.c
cpu-d30v.c
cpu-dlx.c
cpu-fr30.c
cpu-frv.c
cpu-h8300.c
cpu-h8500.c
cpu-hppa.c
cpu-i370.c
cpu-i386.c
cpu-i860.c
cpu-i960.c
cpu-ia64.c
cpu-ip2k.c
cpu-iq2000.c
cpu-m10200.c
cpu-m10300.c
cpu-m32r.c
cpu-m68hc11.c
cpu-m68hc12.c
cpu-m68k.c
cpu-m88k.c
cpu-mcore.c
cpu-mips.c
cpu-mmix.c
cpu-msp430.c
cpu-ns32k.c
cpu-openrisc.c
cpu-or32.c
cpu-pdp11.c
cpu-pj.c
cpu-powerpc.c
cpu-rs6000.c
cpu-s390.c
cpu-sh.c
cpu-sparc.c
cpu-tic30.c
cpu-tic4x.c
cpu-tic54x.c
cpu-tic80.c
cpu-v850.c
cpu-vax.c
cpu-w65.c
cpu-we32k.c
cpu-xstormy16.c
cpu-xtensa.c
cpu-z8k.c
demo64.c
dwarf1.c
dwarf2.c
ecoff.c
ecofflink.c
ecoffswap.h
efi-app-ia32.c
efi-app-ia64.c
elf32-am33lin.c
elf32-arc.c
elf32-arm.h
elf32-avr.c
elf32.c
elf32-cris.c
elf32-d10v.c
elf32-d30v.c
elf32-dlx.c
elf32-fr30.c
elf32-frv.c
elf32-gen.c
elf32-h8300.c
elf32-hppa.c
elf32-hppa.h
elf32-i370.c
elf32-i386.c
elf32-i860.c
elf32-i960.c
elf32-ip2k.c
elf32-iq2000.c
elf32-m32r.c
elf32-m68hc11.c
elf32-m68hc12.c
elf32-m68hc1x.c
elf32-m68k.c
elf32-m88k.c
elf32-mcore.c
elf32-mips.c
elf32-msp430.c
elf32-openrisc.c
elf32-or32.c
elf32-pj.c
elf32-ppc.c
elf32-s390.c
elf32-sh64.c
elf32-sh64-com.c
elf32-sh.c
elf32-sparc.c
elf32-v850.c
elf32-vax.c
elf32-xstormy16.c
elf32-xtensa.c
elf64-alpha.c
elf64.c
elf64-gen.c
elf64-hppa.c
elf64-hppa.h
elf64-mips.c
elf64-mmix.c
elf64-ppc.c
elf64-s390.c
elf64-sh64.c
elf64-sparc.c
elf64-x86-64.c
elfarm-nabi.c
elfarm-oabi.c
elf-bfd.h
elf.c
elfcode.h
elfcore.h
elf-eh-frame.c
elf-hppa.h
elflink.c
elf-m10200.c
elf-m10300.c
elfn32-mips.c
elf-strtab.c
elfxx-mips.c
epoc-pe-arm.c
epoc-pei-arm.c
format.c
freebsd.h
genlink.h
go32stub.h
hash.c
hp300bsd.c
hp300hpux.c
hpux-core.c
i386aout.c
i386bsd.c
i386dynix.c
i386freebsd.c
i386linux.c
i386lynx.c
i386mach3.c
i386msdos.c
i386netbsd.c
i386os9k.c
ieee.c
ihex.c
init.c
irix-core.c
libaout.h
libbfd.c
libbfd.h
libcoff.h
libecoff.h
libhppa.h
libieee.h
libnlm.h
liboasys.h
libpei.h
libxcoff.h
linker.c
lynx-core.c
m68k4knetbsd.c
m68klinux.c
m68klynx.c
m68knetbsd.c
m88kmach3.c
m88kopenbsd.c
mach-o.c
mach-o.h
merge.c
mipsbsd.c
mmo.c
netbsd.h
newsos3.c
nlm32-alpha.c
nlm32.c
nlm32-i386.c
nlm32-ppc.c
nlm32-sparc.c
nlm64.c
nlm.c
nlmcode.h
nlmswap.h
nlm-target.h
ns32k.h
ns32knetbsd.c
oasys.c
opncls.c
osf-core.c
pc532-mach.c
pdp11.c
pe-arm.c
pef.c
pef.h
pef-traceback.h
pe-i386.c
pei-arm.c
peicode.h
pei-i386.c
pei-mcore.c
pei-mips.c
pei-ppc.c
pei-sh.c
pe-mcore.c
pe-mips.c
pe-ppc.c
pe-sh.c
ppcboot.c
reloc16.c
reloc.c
riscix.c
sco5-core.c
section.c
simple.c
som.c
som.h
sparclinux.c
sparclynx.c
sparcnetbsd.c
srec.c
stabs.c
stab-syms.c
sunos.c
syms.c
targets.c
tekhex.c
trad-core.c
vax1knetbsd.c
vaxbsd.c
vaxnetbsd.c
versados.c
version.h
vms.c
vms-gsd.c
vms.h
vms-hdr.c
vms-misc.c
vms-tir.c
xcofflink.c
xcoff-target.h
xsym.c
xsym.h
xtensa-isa.c
xtensa-modules.c
@


1.2
log
@bfd support for OpenBSD/m88k a.out binaries, glueing existing bits together.
Gives us working objcopy, objdump, etc, and the ability to process core files
to some extent.

ok and pushed upstream kettenis@@
@
text
@d3 3
d9 1
a13 4
aout0.c
aout32.c
aout64.c
aoutf1.h
d15 1
a16 1
archive64.c
d29 1
d35 2
d43 1
d53 1
a61 5
coff64-rs6000.c
coffcode.h
coffgen.c
cofflink.c
coffswap.h
d114 1
d124 1
a124 7
elf-bfd.h
elf-eh-frame.c
elf-hppa.h
elf-m10200.c
elf-m10300.c
elf-strtab.c
elf.c
d128 1
d148 1
d159 2
a161 2
elf32-sh64-com.c
elf32-sh64.c
d166 1
a166 1
elf32.c
d168 1
a178 1
elf64.c
d181 2
d185 2
d188 2
a189 1
elflink.h
d191 1
a242 2
nlm-target.h
nlm.c
d244 1
a247 1
nlm32.c
d249 1
d252 1
a260 6
pe-i386.c
pe-mcore.c
pe-mips.c
pe-ppc.c
pe-sh.c
pef-traceback.h
d263 2
d266 1
d272 4
a275 1
peicode.h
d277 1
a278 1
reloc16.c
d289 1
a290 1
stabs.c
d301 1
d303 1
d307 1
a307 2
vms.c
vms.h
a308 1
xcofflink.c
d311 2
@


1.1
log
@Initial revision
@
text
@d232 1
@


1.1.1.1
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@@


1.1.1.2
log
@Binutils 2.15, with testsuites removed, and without gdb and libiberty.
@
text
@a2 3
aout0.c
aout32.c
aout64.c
a5 1
aoutf1.h
d10 4
d15 1
a16 1
archive.c
a28 1
coff64-rs6000.c
a33 2
coffcode.h
coffgen.c
a39 1
cofflink.c
a48 1
coffswap.h
d57 5
a113 1
cpu-xtensa.c
d123 7
a129 1
elf32-am33lin.c
a132 1
elf32.c
a151 1
elf32-m68hc1x.c
d162 2
a164 2
elf32-sh64-com.c
elf32-sh.c
d169 1
a169 1
elf32-xtensa.c
a170 1
elf64.c
d181 1
a183 2
elf-bfd.h
elf.c
a185 2
elf-eh-frame.c
elf-hppa.h
d187 1
a187 2
elf-m10200.c
elf-m10300.c
a188 1
elf-strtab.c
d239 2
a241 1
nlm32.c
d245 1
a246 1
nlm.c
a248 1
nlm-target.h
d257 6
a264 2
pef-traceback.h
pe-i386.c
a265 1
peicode.h
d271 1
a271 4
pe-mcore.c
pe-mips.c
pe-ppc.c
pe-sh.c
d273 1
a274 1
reloc.c
d285 1
a286 1
stab-syms.c
a296 1
vms.c
a297 1
vms.h
d301 3
a304 1
xcoff-target.h
a306 2
xtensa-isa.c
xtensa-modules.c
@

