head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.52
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.48
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.44
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.46
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.38
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.42
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.40
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.36
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.34
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.32
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.30
	OPENBSD_5_0:1.5.0.28
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.26
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.24
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.20
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.22
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.18
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.16
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.14
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.12
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.10
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.8
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	BINUTILS_2_15:1.1.1.5
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	BINUTILS-2_14:1.1.1.4
	OPENBSD_3_5:1.3.0.8
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.6
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	binutils-2_11_2:1.1.1.3
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	BINUTILS-2_10_1:1.1.1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	BINUTILS-2_10:1.1.1.2
	OPENBSD_2_7:1.1.0.18
	OPENBSD_2_7_BASE:1.1
	new-binutils:1.1.0.16
	OPENBSD_2_6:1.1.0.14
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	BINUTILS-2_8_1:1.1.1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	CYGNUS-961112:1.1.1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1
	CYGNUS-960904:1.1.1.1
	CYGNUS-960609:1.1.1.1
	CYGNUS-960607:1.1.1.1
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2004.11.02.20.45.08;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.17.21.54.22;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.13.17.07.30;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.12.19.11.15;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.04.49;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.04.49;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.09.12.14.45.41;	author espie;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.05.13.13.25.01;	author fgsch;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.05.17.20.42.16;	author drahn;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.11.02.20.22.26;	author miod;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Merge conflicts, bringing our changes back in:
- extra $(SHELL) and sugar for make (so that files not mode +x still work)
- safer temp file handling
- our W^X binary layout changes in ld
- OpenBSD policy for library file selection in ld
- arm and m88k changes which were not merged in time for official 2.15
- bfd core file handling
- a couple typos

New for 2.15:
- ld(1) and as(1) manpages now generated at build time
- binutils/stabs.c reverted to use our in-tree libiberty for now
- we still use our VIA C3 crypto code over stock binutils, as it recognizes
  more instructions
- new emulations for OpenBSD on mips64 machines, to help OpenBSD/sgi
- relaxed %f# handling in gas on OpenBSD/sparc64 (same as was in 2.14)

Tested on all platforms by various people; special thanks to sturm@@ and
otto@@.
@
text
@/* Generic support for 64-bit ELF
   Copyright 1993, 1995, 1998, 1999, 2001, 2002, 2004
   Free Software Foundation, Inc.

This file is part of BFD, the Binary File Descriptor library.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

#include "bfd.h"
#include "sysdep.h"
#include "libbfd.h"
#include "elf-bfd.h"

/* This does not include any relocation information, but should be
   good enough for GDB or objdump to read the file.  */

static reloc_howto_type dummy =
  HOWTO (0,			/* type */
	 0,			/* rightshift */
	 0,			/* size (0 = byte, 1 = short, 2 = long) */
	 0,			/* bitsize */
	 FALSE,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_dont, /* complain_on_overflow */
	 NULL,			/* special_function */
	 "UNKNOWN",		/* name */
	 FALSE,			/* partial_inplace */
	 0,			/* src_mask */
	 0,			/* dst_mask */
	 FALSE);		/* pcrel_offset */

static void elf_generic_info_to_howto
  PARAMS ((bfd *, arelent *, Elf_Internal_Rela *));
static void elf_generic_info_to_howto_rel
  PARAMS ((bfd *, arelent *, Elf_Internal_Rela *));
static bfd_boolean elf64_generic_link_add_symbols
  PARAMS ((bfd *, struct bfd_link_info *));

static void
elf_generic_info_to_howto (abfd, bfd_reloc, elf_reloc)
     bfd *abfd ATTRIBUTE_UNUSED;
     arelent *bfd_reloc;
     Elf_Internal_Rela *elf_reloc ATTRIBUTE_UNUSED;
{
  bfd_reloc->howto = &dummy;
}

static void
elf_generic_info_to_howto_rel (abfd, bfd_reloc, elf_reloc)
     bfd *abfd ATTRIBUTE_UNUSED;
     arelent *bfd_reloc;
     Elf_Internal_Rela *elf_reloc ATTRIBUTE_UNUSED;
{
  bfd_reloc->howto = &dummy;
}

static bfd_boolean
elf64_generic_link_add_symbols (abfd, info)
     bfd *abfd;
     struct bfd_link_info *info;
{
  asection *o;

  /* Check if there are any relocations.  */
  for (o = abfd->sections; o != NULL; o = o->next)
    if ((o->flags & SEC_RELOC) != 0)
      {
	Elf_Internal_Ehdr *ehdrp;

	ehdrp = elf_elfheader (abfd);
	(*_bfd_error_handler) (_("%s: Relocations in generic ELF (EM: %d)"),
			       bfd_archive_filename (abfd),
			       ehdrp->e_machine);

	bfd_set_error (bfd_error_wrong_format);
	return FALSE;
      }

  return bfd_elf_link_add_symbols (abfd, info);
}

#define TARGET_LITTLE_SYM		bfd_elf64_little_generic_vec
#define TARGET_LITTLE_NAME		"elf64-little"
#define TARGET_BIG_SYM			bfd_elf64_big_generic_vec
#define TARGET_BIG_NAME			"elf64-big"
#define ELF_ARCH			bfd_arch_unknown
#define ELF_MACHINE_CODE		EM_NONE
#define ELF_MAXPAGESIZE			0x1
#define bfd_elf64_bfd_reloc_type_lookup bfd_default_reloc_type_lookup
#define bfd_elf64_bfd_link_add_symbols	elf64_generic_link_add_symbols
#define elf_info_to_howto		elf_generic_info_to_howto
#define elf_info_to_howto_rel		elf_generic_info_to_howto_rel

#include "elf64-target.h"
@


1.4
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@d2 2
a3 1
   Copyright 1993, 1995, 1998, 1999, 2001, 2002 Free Software Foundation, Inc.
d91 1
a91 1
  return bfd_elf64_bfd_link_add_symbols (abfd, info);
@


1.3
log
@resolve conflicts.
@
text
@d2 1
a2 1
   Copyright 1993, 1995, 1998, 1999, 2001 Free Software Foundation, Inc.
d33 1
a33 1
	 false,			/* pc_relative */
d38 1
a38 1
	 false,			/* partial_inplace */
d41 8
a48 1
	 false);		/* pcrel_offset */
d54 1
a54 1
     Elf64_Internal_Rela *elf_reloc ATTRIBUTE_UNUSED;
d63 1
a63 1
     Elf64_Internal_Rel *elf_reloc ATTRIBUTE_UNUSED;
d68 1
a68 1
static boolean
d82 3
a84 9
	if (abfd->my_archive)
	  (*_bfd_error_handler) (_("%s(%s): Relocations in generic ELF (EM: %d)"),
				 bfd_get_filename (abfd->my_archive),
				 bfd_get_filename (abfd),
				 ehdrp->e_machine);
	else
	  (*_bfd_error_handler) (_("%s: Relocations in generic ELF (EM: %d)"),
				 bfd_get_filename (abfd),
				 ehdrp->e_machine);
d87 1
a87 1
	return false;
@


1.2
log
@Help stupid cvs fixing basic conflicts.
@
text
@d2 1
a2 1
   Copyright 1993, 1995, 1998 Free Software Foundation, Inc.
d45 1
a45 1
     bfd *abfd;
d47 1
a47 1
     Elf64_Internal_Rela *elf_reloc;
d54 1
a54 1
     bfd *abfd;
d56 1
a56 1
     Elf64_Internal_Rel *elf_reloc;
d61 31
d100 1
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
   Copyright 1993 Free Software Foundation, Inc.
d25 35
a59 2
/* This does not include any relocations, but should be good enough
   for GDB to read the file.  */
d67 1
d69 2
a70 1
#define elf_info_to_howto		_bfd_elf_no_info_to_howto
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d2 1
a2 1
   Copyright 1993, 1995, 1998 Free Software Foundation, Inc.
d25 2
a26 35
/* This does not include any relocation information, but should be
   good enough for GDB or objdump to read the file.  */

static reloc_howto_type dummy =
  HOWTO (0,			/* type */
	 0,			/* rightshift */
	 0,			/* size (0 = byte, 1 = short, 2 = long) */
	 0,			/* bitsize */
	 false,			/* pc_relative */
	 0,			/* bitpos */
	 complain_overflow_dont, /* complain_on_overflow */
	 NULL,			/* special_function */
	 "UNKNOWN",		/* name */
	 false,			/* partial_inplace */
	 0,			/* src_mask */
	 0,			/* dst_mask */
	 false);		/* pcrel_offset */

static void
elf_generic_info_to_howto (abfd, bfd_reloc, elf_reloc)
     bfd *abfd;
     arelent *bfd_reloc;
     Elf64_Internal_Rela *elf_reloc;
{
  bfd_reloc->howto = &dummy;
}

static void
elf_generic_info_to_howto_rel (abfd, bfd_reloc, elf_reloc)
     bfd *abfd;
     arelent *bfd_reloc;
     Elf64_Internal_Rel *elf_reloc;
{
  bfd_reloc->howto = &dummy;
}
a33 1
#define ELF_MAXPAGESIZE			0x1
d35 1
a35 2
#define elf_info_to_howto		elf_generic_info_to_howto
#define elf_info_to_howto_rel		elf_generic_info_to_howto_rel
@


1.1.1.3
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d2 1
a2 1
   Copyright 1993, 1995, 1998, 1999, 2001 Free Software Foundation, Inc.
d45 1
a45 1
     bfd *abfd ATTRIBUTE_UNUSED;
d47 1
a47 1
     Elf64_Internal_Rela *elf_reloc ATTRIBUTE_UNUSED;
d54 1
a54 1
     bfd *abfd ATTRIBUTE_UNUSED;
d56 1
a56 1
     Elf64_Internal_Rel *elf_reloc ATTRIBUTE_UNUSED;
a60 31
static boolean
elf64_generic_link_add_symbols (abfd, info)
     bfd *abfd;
     struct bfd_link_info *info;
{
  asection *o;

  /* Check if there are any relocations.  */
  for (o = abfd->sections; o != NULL; o = o->next)
    if ((o->flags & SEC_RELOC) != 0)
      {
	Elf_Internal_Ehdr *ehdrp;

	ehdrp = elf_elfheader (abfd);
	if (abfd->my_archive)
	  (*_bfd_error_handler) (_("%s(%s): Relocations in generic ELF (EM: %d)"),
				 bfd_get_filename (abfd->my_archive),
				 bfd_get_filename (abfd),
				 ehdrp->e_machine);
	else
	  (*_bfd_error_handler) (_("%s: Relocations in generic ELF (EM: %d)"),
				 bfd_get_filename (abfd),
				 ehdrp->e_machine);

	bfd_set_error (bfd_error_wrong_format);
	return false;
      }

  return bfd_elf64_bfd_link_add_symbols (abfd, info);
}

a68 1
#define bfd_elf64_bfd_link_add_symbols	elf64_generic_link_add_symbols
@


1.1.1.4
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@d2 1
a2 1
   Copyright 1993, 1995, 1998, 1999, 2001, 2002 Free Software Foundation, Inc.
d33 1
a33 1
	 FALSE,			/* pc_relative */
d38 1
a38 1
	 FALSE,			/* partial_inplace */
d41 1
a41 8
	 FALSE);		/* pcrel_offset */

static void elf_generic_info_to_howto
  PARAMS ((bfd *, arelent *, Elf_Internal_Rela *));
static void elf_generic_info_to_howto_rel
  PARAMS ((bfd *, arelent *, Elf_Internal_Rela *));
static bfd_boolean elf64_generic_link_add_symbols
  PARAMS ((bfd *, struct bfd_link_info *));
d47 1
a47 1
     Elf_Internal_Rela *elf_reloc ATTRIBUTE_UNUSED;
d56 1
a56 1
     Elf_Internal_Rela *elf_reloc ATTRIBUTE_UNUSED;
d61 1
a61 1
static bfd_boolean
d75 9
a83 3
	(*_bfd_error_handler) (_("%s: Relocations in generic ELF (EM: %d)"),
			       bfd_archive_filename (abfd),
			       ehdrp->e_machine);
d86 1
a86 1
	return FALSE;
@


1.1.1.5
log
@Binutils 2.15, with testsuites removed, and without gdb and libiberty.
@
text
@d2 1
a2 2
   Copyright 1993, 1995, 1998, 1999, 2001, 2002, 2004
   Free Software Foundation, Inc.
d90 1
a90 1
  return bfd_elf_link_add_symbols (abfd, info);
@


