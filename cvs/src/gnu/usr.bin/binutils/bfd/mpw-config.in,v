head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.84
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.82
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.78
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.80
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.72
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.76
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.74
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.70
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.68
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.66
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.64
	OPENBSD_5_0:1.4.0.62
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.60
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.58
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.54
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.56
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.52
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.50
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.48
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.46
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.44
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.42
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.40
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.38
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.36
	OPENBSD_3_7_BASE:1.4
	BINUTILS_2_15:1.1.1.4
	OPENBSD_3_6:1.4.0.34
	OPENBSD_3_6_BASE:1.4
	BINUTILS-2_14:1.1.1.4
	OPENBSD_3_5:1.4.0.32
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.30
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.28
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.26
	OPENBSD_3_2_BASE:1.4
	binutils-2_11_2:1.1.1.4
	OPENBSD_3_1:1.4.0.24
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.22
	OPENBSD_3_0_BASE:1.4
	BINUTILS-2_10_1:1.1.1.4
	OPENBSD_2_9:1.4.0.20
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	BINUTILS-2_10:1.1.1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	new-binutils:1.4.0.14
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	BINUTILS-2_8_1:1.1.1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	CYGNUS-961112:1.1.1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	CYGNUS-960904:1.1.1.3
	CYGNUS-960609:1.1.1.2
	CYGNUS-960607:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.4
date	96.11.23.03.33.21;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.09.04.19.01.25;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.10.46.18;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.05.02;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.05.02;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.07.11.06.10;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.09.04.17.38.26;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	96.11.19.14.12.51;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@# Configuration fragment for BFD.

# This is almost always correct.

Set selarchs "&bfd_{target_cpu}_arch"
Set defvec ""
Set selvecs ""
Set havevecs ""

If "{target_canonical}" =~ /m68k-apple-macos/
	Set BFD_BACKENDS '"{o}"coff-m68k.c.o "{o}"cofflink.c.o'
	Set defvec m68kcoff_vec
	Set selvecs '&m68kcoff_vec'
	Set havevecs '-d HAVE_m68kcoff_vec'

Else If "{target_canonical}" =~ /powerpc-apple-macos/
	Set BFD_BACKENDS '"{o}"coff-pmac.c.o "{o}"xcofflink.c.o'
	Set defvec pmac_xcoff_vec
	Set selvecs '&pmac_xcoff_vec'
	Set havevecs '-d HAVE_pmac_xcoff_vec'
	Set selarchs "&bfd_powerpc_arch"

Else If "{target_canonical}" =~ /i386-\Option-x-go32/
	Set BFD_BACKENDS '"{o}"coff-i386.c.o'
	Set defvec i386coff_vec
	Set selvecs '&i386coff_vec'
	Set havevecs '-d HAVE_i386coff_vec'

Else If "{target_canonical}" =~ /mips-\Option-x-\Option-x/
	Set BFD_BACKENDS '"{o}"coff-mips.c.o "{o}"ecoff.c.o "{o}"ecofflink.c.o "{o}"elf32.c.o "{o}"elf32-mips.c.o "{o}"elflink.c.o'
	Set defvec ecoff_big_vec
	Set selvecs '&ecoff_big_vec,&ecoff_little_vec,&bfd_elf32_bigmips_vec'
	Set havevecs '-d HAVE_ecoff_big_vec -d HAVE_ecoff_little_vec -d HAVE_bfd_elf32_bigmips_vec'

Else If "{target_canonical}" =~ /sh-\Option-x-hms/
	Set BFD_BACKENDS '"{o}"coff-sh.c.o "{o}"cofflink.c.o'
	Set defvec shcoff_vec
	Set selvecs '&shcoff_vec,&shlcoff_vec'
	Set havevecs '-d HAVE_shcoff_vec -d HAVE_shlcoff_vec'
End If

Set ta `echo {selarchs} | sed -e 's/&bfd_/{o}cpu-/g' -e 's/_arch/.c.o/g'`

Set tdefaults "-d DEFAULT_VECTOR={defvec} -d SELECT_VECS={selvecs} -d SELECT_ARCHITECTURES={selarchs} {havevecs}"

Echo '# From mpw-config.in'				 > "{o}"mk.tmp
Echo 'WORDSIZE = 32'					>> "{o}"mk.tmp
Echo 'BFD_MACHINES = ' {ta}				>> "{o}"mk.tmp
Echo 'BFD_BACKENDS = ' {BFD_BACKENDS}			>> "{o}"mk.tmp
Echo 'TDEFAULTS = ' {tdefaults}				>> "{o}"mk.tmp
Echo 'HDEPFILES = '					>> "{o}"mk.tmp
Echo 'TDEPFILES = '					>> "{o}"mk.tmp
Echo '# End from mpw-config.in'				>> "{o}"mk.tmp

Echo '/* config.h.  Generated by mpw-configure.  */'	 > "{o}"config.new
Echo '#include "mpw.h"'					>> "{o}"config.new

MoveIfChange "{o}"config.new "{o}"config.h

# We can only handle 32-bit targets right now.

sed -e 's/@@WORDSIZE@@/32/' \Option-d
    -e 's/@@wordsize@@/32/' \Option-d
    -e "s/@@VERSION@@/`Catenate {srcdir}VERSION`/" \Option-d
    -e 's/@@BFD_HOST_64_BIT_DEFINED@@/0/' \Option-d
    -e 's/@@BFD_HOST_64_BIT@@//' \Option-d
    -e 's/@@BFD_HOST_U_64_BIT@@//' \Option-d
    -e 's/@@BFD_HOST_64BIT_LONG@@/0/' \Option-d
    "{srcdir}"bfd-in2.h >"{o}"bfd.h-new

MoveIfChange "{o}"bfd.h-new "{o}"bfd.h

sed -e 's/NN/32/g' "{srcdir}"elfxx-target.h >"{o}"elf32-target.h-new
MoveIfChange "{o}"elf32-target.h-new "{o}"elf32-target.h

# Pre-expand some macros in coffswap.h, so MPW C doesn't choke.

sed -e 's/^  PUT_AOUTHDR_TSIZE (/  bfd_h_put_32 (/' \Option-d
    -e 's/^  PUT_AOUTHDR_DSIZE (/  bfd_h_put_32 (/' \Option-d
    -e 's/^  PUT_AOUTHDR_BSIZE (/  bfd_h_put_32 (/' \Option-d
    -e 's/^  PUT_AOUTHDR_ENTRY (/  bfd_h_put_32 (/' \Option-d
    -e 's/^  PUT_AOUTHDR_TEXT_START (/  bfd_h_put_32 (/' \Option-d
    -e 's/^  PUT_AOUTHDR_DATA_START (/  bfd_h_put_32 (/' \Option-d
    "{srcdir}"coffswap.h >"{o}"coffswap.h-new

MoveIfChange "{o}"coffswap.h-new "{o}"coffswap.h
@


1.3
log
@Merge the Cygnus 960904 sources
@
text
@d8 1
d14 1
d20 1
d27 1
d33 1
d39 1
d44 1
a44 1
Set tdefaults "-d DEFAULT_VECTOR={defvec} -d SELECT_VECS={selvecs} -d SELECT_ARCHITECTURES={selarchs}"
@


1.2
log
@Bring Cygnus versions into the trunk, keeping our local patches
@
text
@d20 1
a20 1
Else If "{target_canonical}" =~ /i386-unknown-go32/
d26 1
a26 1
	Set BFD_BACKENDS '"{o}"coff-mips.c.o "{o}"ecoff.c.o "{o}"ecofflink.c.o'
d28 1
a28 1
	Set selvecs '&ecoff_big_vec,&ecoff_little_vec'
d30 1
a30 1
Else If "{target_canonical}" =~ /sh-hitachi-hms/
d57 1
d59 3
d66 3
@


1.1
log
@Initial revision
@
text
@d13 1
d19 1
d24 2
a25 1
Else If "{target_canonical}" =~ /mips-idt-ecoff/
d29 1
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@(Correct) Import of Cygnus binutils snapshot taken 960607
@
text
@a12 1

a17 1

d22 1
a22 2

Else If "{target_canonical}" =~ /mips-\Option-x-\Option-x/
a25 1

@


1.1.1.3
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@d20 1
a20 1
Else If "{target_canonical}" =~ /i386-\Option-x-go32/
d26 1
a26 1
	Set BFD_BACKENDS '"{o}"coff-mips.c.o "{o}"ecoff.c.o "{o}"ecofflink.c.o "{o}"elf32.c.o "{o}"elf32-mips.c.o "{o}"elflink.c.o'
d28 1
a28 1
	Set selvecs '&ecoff_big_vec,&ecoff_little_vec,&bfd_elf32_bigmips_vec'
d30 1
a30 1
Else If "{target_canonical}" =~ /sh-\Option-x-hms/
a56 1
    -e 's/@@wordsize@@/32/' \Option-d
a57 3
    -e 's/@@BFD_HOST_64_BIT_DEFINED@@/0/' \Option-d
    -e 's/@@BFD_HOST_64_BIT@@//' \Option-d
    -e 's/@@BFD_HOST_U_64_BIT@@//' \Option-d
a61 3

sed -e 's/NN/32/g' "{srcdir}"elfxx-target.h >"{o}"elf32-target.h-new
MoveIfChange "{o}"elf32-target.h-new "{o}"elf32-target.h
@


1.1.1.4
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a7 1
Set havevecs ""
a12 1
	Set havevecs '-d HAVE_m68kcoff_vec'
a17 1
	Set havevecs '-d HAVE_pmac_xcoff_vec'
a23 1
	Set havevecs '-d HAVE_i386coff_vec'
a28 1
	Set havevecs '-d HAVE_ecoff_big_vec -d HAVE_ecoff_little_vec -d HAVE_bfd_elf32_bigmips_vec'
a33 1
	Set havevecs '-d HAVE_shcoff_vec -d HAVE_shlcoff_vec'
d38 1
a38 1
Set tdefaults "-d DEFAULT_VECTOR={defvec} -d SELECT_VECS={selvecs} -d SELECT_ARCHITECTURES={selarchs} {havevecs}"
@
