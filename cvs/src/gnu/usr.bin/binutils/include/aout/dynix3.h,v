head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.50
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.46
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.48
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.40
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.44
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.42
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.38
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.36
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.34
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.32
	OPENBSD_5_0:1.3.0.30
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.28
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.26
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.22
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.24
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.20
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.18
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.16
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.14
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.12
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.10
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.8
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	BINUTILS_2_15:1.1.1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	BINUTILS-2_14:1.1.1.3
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	binutils-2_11_2:1.1.1.2
	OPENBSD_3_1:1.1.0.26
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.24
	OPENBSD_3_0_BASE:1.1
	BINUTILS-2_10_1:1.1.1.1
	OPENBSD_2_9:1.1.0.22
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.20
	OPENBSD_2_8_BASE:1.1
	BINUTILS-2_10:1.1.1.1
	OPENBSD_2_7:1.1.0.18
	OPENBSD_2_7_BASE:1.1
	new-binutils:1.1.0.16
	OPENBSD_2_6:1.1.0.14
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	BINUTILS-2_8_1:1.1.1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	CYGNUS-961112:1.1.1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1
	CYGNUS-960904:1.1.1.1
	CYGNUS-960609:1.1.1.1
	CYGNUS-960607:1.1.1.1
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2004.05.17.21.54.49;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.13.17.07.40;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.08.15;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.08.15;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.05.13.13.52.59;	author fgsch;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.05.17.20.42.37;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@/* a.out specifics for Sequent Symmetry running Dynix 3.x

   Copyright 2001 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

#ifndef A_OUT_DYNIX3_H
#define A_OUT_DYNIX3_H

#define external_exec dynix_external_exec

/* struct exec for Dynix 3
 
   a_gdtbl and a_bootstrap are only for standalone binaries.
   Shared data fields are not supported by the kernel as of Dynix 3.1,
   but are supported by Dynix compiler programs.  */
struct dynix_external_exec
  {
    unsigned char e_info[4];
    unsigned char e_text[4];
    unsigned char e_data[4];
    unsigned char e_bss[4];
    unsigned char e_syms[4];
    unsigned char e_entry[4];
    unsigned char e_trsize[4];
    unsigned char e_drsize[4];
    unsigned char e_g_code[8];
    unsigned char e_g_data[8];
    unsigned char e_g_desc[8];
    unsigned char e_shdata[4];
    unsigned char e_shbss[4];
    unsigned char e_shdrsize[4];
    unsigned char e_bootstrap[44];
    unsigned char e_reserved[12];
    unsigned char e_version[4];
  };

#define	EXEC_BYTES_SIZE	(128)

/* All executables under Dynix are demand paged with read-only text,
   Thus no NMAGIC.
  
   ZMAGIC has a page of 0s at virtual 0,
   XMAGIC has an invalid page at virtual 0.  */
#define OMAGIC	0x12eb		/* .o */
#define ZMAGIC	0x22eb		/* zero @@ 0, demand load */
#define XMAGIC	0x32eb		/* invalid @@ 0, demand load */
#define SMAGIC	0x42eb		/* standalone, not supported here */

#define N_BADMAG(x) ((OMAGIC != N_MAGIC(x)) && \
		     (ZMAGIC != N_MAGIC(x)) && \
		     (XMAGIC != N_MAGIC(x)) && \
		     (SMAGIC != N_MAGIC(x)))

#define N_ADDRADJ(x) ((ZMAGIC == N_MAGIC(x) || XMAGIC == N_MAGIC(x)) ? 0x1000 : 0)

#define N_TXTOFF(x) (EXEC_BYTES_SIZE)
#define N_DATOFF(x) (N_TXTOFF(x) + N_TXTSIZE(x))
#define N_SHDATOFF(x) (N_DATOFF(x) + (x).a_data)
#define N_TRELOFF(x) (N_SHDATOFF(x) + (x).a_shdata)
#define N_DRELOFF(x) (N_TRELOFF(x) + (x).a_trsize)
#define N_SHDRELOFF(x) (N_DRELOFF(x) + (x).a_drsize)
#define N_SYMOFF(x) (N_SHDRELOFF(x) + (x).a_shdrsize)
#define N_STROFF(x) (N_SYMOFF(x) + (x).a_syms)

#define N_TXTADDR(x) \
	(((OMAGIC == N_MAGIC(x)) || (SMAGIC == N_MAGIC(x))) ? 0 \
	 : TEXT_START_ADDR + EXEC_BYTES_SIZE)

#define N_TXTSIZE(x) \
	(((OMAGIC == N_MAGIC(x)) || (SMAGIC == N_MAGIC(x))) ? ((x).a_text) \
	 : ((x).a_text - N_ADDRADJ(x) - EXEC_BYTES_SIZE))

#endif /* A_OUT_DYNIX3_H */
@


1.2
log
@resolve conflicts.
@
text
@d25 24
a48 22
 *
 * a_gdtbl and a_bootstrap are only for standalone binaries.
 * Shared data fields are not supported by the kernel as of Dynix 3.1,
 * but are supported by Dynix compiler programs.
 */
struct dynix_external_exec {
	unsigned char e_info[4];
	unsigned char e_text[4];
	unsigned char e_data[4];
	unsigned char e_bss[4];
	unsigned char e_syms[4];
	unsigned char e_entry[4];
	unsigned char e_trsize[4];
	unsigned char e_drsize[4];
	unsigned char e_g_code[8], e_g_data[8], e_g_desc[8];
	unsigned char e_shdata[4];
	unsigned char e_shbss[4];
	unsigned char e_shdrsize[4];
	unsigned char e_bootstrap[44];
	unsigned char e_reserved[12];
	unsigned char e_version[4];
};
d52 5
a56 7
/*
 * All executables under Dynix are demand paged with read-only text,
 * Thus no NMAGIC.
 *
 * ZMAGIC has a page of 0s at virtual 0,
 * XMAGIC has an invalid page at virtual 0
 */
@


1.1
log
@Initial revision
@
text
@d1 18
a18 3
/*
 * a.out specifics for Sequent Symmetry running Dynix 3.x
 */
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d1 3
a3 18
/* a.out specifics for Sequent Symmetry running Dynix 3.x

   Copyright 2001 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

@


1.1.1.3
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@d25 22
a46 24
 
   a_gdtbl and a_bootstrap are only for standalone binaries.
   Shared data fields are not supported by the kernel as of Dynix 3.1,
   but are supported by Dynix compiler programs.  */
struct dynix_external_exec
  {
    unsigned char e_info[4];
    unsigned char e_text[4];
    unsigned char e_data[4];
    unsigned char e_bss[4];
    unsigned char e_syms[4];
    unsigned char e_entry[4];
    unsigned char e_trsize[4];
    unsigned char e_drsize[4];
    unsigned char e_g_code[8];
    unsigned char e_g_data[8];
    unsigned char e_g_desc[8];
    unsigned char e_shdata[4];
    unsigned char e_shbss[4];
    unsigned char e_shdrsize[4];
    unsigned char e_bootstrap[44];
    unsigned char e_reserved[12];
    unsigned char e_version[4];
  };
d50 7
a56 5
/* All executables under Dynix are demand paged with read-only text,
   Thus no NMAGIC.
  
   ZMAGIC has a page of 0s at virtual 0,
   XMAGIC has an invalid page at virtual 0.  */
@


