head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.4.0.50
	OPENBSD_6_2_BASE:1.1.1.4
	OPENBSD_6_1:1.1.1.4.0.52
	OPENBSD_6_1_BASE:1.1.1.4
	OPENBSD_6_0:1.1.1.4.0.48
	OPENBSD_6_0_BASE:1.1.1.4
	OPENBSD_5_9:1.1.1.4.0.44
	OPENBSD_5_9_BASE:1.1.1.4
	OPENBSD_5_8:1.1.1.4.0.46
	OPENBSD_5_8_BASE:1.1.1.4
	OPENBSD_5_7:1.1.1.4.0.38
	OPENBSD_5_7_BASE:1.1.1.4
	OPENBSD_5_6:1.1.1.4.0.42
	OPENBSD_5_6_BASE:1.1.1.4
	OPENBSD_5_5:1.1.1.4.0.40
	OPENBSD_5_5_BASE:1.1.1.4
	OPENBSD_5_4:1.1.1.4.0.36
	OPENBSD_5_4_BASE:1.1.1.4
	OPENBSD_5_3:1.1.1.4.0.34
	OPENBSD_5_3_BASE:1.1.1.4
	OPENBSD_5_2:1.1.1.4.0.32
	OPENBSD_5_2_BASE:1.1.1.4
	OPENBSD_5_1_BASE:1.1.1.4
	OPENBSD_5_1:1.1.1.4.0.30
	OPENBSD_5_0:1.1.1.4.0.28
	OPENBSD_5_0_BASE:1.1.1.4
	OPENBSD_4_9:1.1.1.4.0.26
	OPENBSD_4_9_BASE:1.1.1.4
	OPENBSD_4_8:1.1.1.4.0.24
	OPENBSD_4_8_BASE:1.1.1.4
	OPENBSD_4_7:1.1.1.4.0.20
	OPENBSD_4_7_BASE:1.1.1.4
	OPENBSD_4_6:1.1.1.4.0.22
	OPENBSD_4_6_BASE:1.1.1.4
	OPENBSD_4_5:1.1.1.4.0.18
	OPENBSD_4_5_BASE:1.1.1.4
	OPENBSD_4_4:1.1.1.4.0.16
	OPENBSD_4_4_BASE:1.1.1.4
	OPENBSD_4_3:1.1.1.4.0.14
	OPENBSD_4_3_BASE:1.1.1.4
	OPENBSD_4_2:1.1.1.4.0.12
	OPENBSD_4_2_BASE:1.1.1.4
	OPENBSD_4_1:1.1.1.4.0.10
	OPENBSD_4_1_BASE:1.1.1.4
	OPENBSD_4_0:1.1.1.4.0.8
	OPENBSD_4_0_BASE:1.1.1.4
	OPENBSD_3_9:1.1.1.4.0.6
	OPENBSD_3_9_BASE:1.1.1.4
	OPENBSD_3_8:1.1.1.4.0.4
	OPENBSD_3_8_BASE:1.1.1.4
	OPENBSD_3_7:1.1.1.4.0.2
	OPENBSD_3_7_BASE:1.1.1.4
	BINUTILS_2_15:1.1.1.4
	OPENBSD_3_6:1.1.1.3.0.10
	OPENBSD_3_6_BASE:1.1.1.3
	BINUTILS-2_14:1.1.1.3
	OPENBSD_3_5:1.1.1.3.0.8
	OPENBSD_3_5_BASE:1.1.1.3
	OPENBSD_3_4:1.1.1.3.0.6
	OPENBSD_3_4_BASE:1.1.1.3
	OPENBSD_3_3:1.1.1.3.0.4
	OPENBSD_3_3_BASE:1.1.1.3
	OPENBSD_3_2:1.1.1.3.0.2
	OPENBSD_3_2_BASE:1.1.1.3
	binutils-2_11_2:1.1.1.3
	OPENBSD_3_1:1.1.1.2.0.8
	OPENBSD_3_1_BASE:1.1.1.2
	OPENBSD_3_0:1.1.1.2.0.6
	OPENBSD_3_0_BASE:1.1.1.2
	BINUTILS-2_10_1:1.1.1.2
	OPENBSD_2_9:1.1.1.2.0.4
	OPENBSD_2_9_BASE:1.1.1.2
	OPENBSD_2_8:1.1.1.2.0.2
	OPENBSD_2_8_BASE:1.1.1.2
	BINUTILS-2_10:1.1.1.2
	FSF:1.1.1
	OPENBSD_2_7:1.1.1.1.0.14
	OPENBSD_2_7_BASE:1.1.1.1
	new-binutils:1.1.1.1.0.12
	OPENBSD_2_6:1.1.1.1.0.10
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.8
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.6
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.4
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.2
	OPENBSD_2_2_BASE:1.1.1.1
	BINUTILS-2_8_1:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	97.05.29.09.26.44;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.05.29.09.26.44;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.09.12.14.47.41;	author espie;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.05.13.13.53.37;	author fgsch;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2004.11.02.20.23.03;	author miod;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* M32R ELF support for BFD.
   Copyright (C) 1996, 1997 Free Software Foundation, Inc.

This file is part of BFD, the Binary File Descriptor library.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software Foundation, Inc.,
59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

#ifndef _ELF_M32R_H
#define _ELF_M32R_H

enum reloc_type
{
  R_M32R_NONE = 0,
  R_M32R_16,
  R_M32R_32,
  R_M32R_24,
  R_M32R_10_PCREL,
  R_M32R_18_PCREL,
  R_M32R_26_PCREL,
  R_M32R_HI16_ULO,
  R_M32R_HI16_SLO,
  R_M32R_LO16,
  R_M32R_SDA16,
  R_M32R_max
};

/* Processor specific section indices.  These sections do not actually
   exist.  Symbols with a st_shndx field corresponding to one of these
   values have a special meaning.  */

/* Small common symbol.  */
#define SHN_M32R_SCOMMON	0xff00

/* Processor specific section flags.  */

/* This section contains sufficient relocs to be relaxed.
   When relaxing, even relocs of branch instructions the assembler could
   complete must be present because relaxing may cause the branch target to
   move.  */
#define SHF_M32R_CAN_RELAX	0x10000000

#endif
@


1.1.1.1
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@@


1.1.1.2
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d2 1
a2 1
   Copyright (C) 1996, 1997, 1998 Free Software Foundation, Inc.
d23 15
a37 19
#include "elf/reloc-macros.h"

/* Relocations.  */
START_RELOC_NUMBERS (elf_m32r_reloc_type)
  RELOC_NUMBER (R_M32R_NONE, 0)
  RELOC_NUMBER (R_M32R_16, 1)
  RELOC_NUMBER (R_M32R_32, 2)
  RELOC_NUMBER (R_M32R_24, 3)
  RELOC_NUMBER (R_M32R_10_PCREL, 4)
  RELOC_NUMBER (R_M32R_18_PCREL, 5)
  RELOC_NUMBER (R_M32R_26_PCREL, 6)
  RELOC_NUMBER (R_M32R_HI16_ULO, 7)
  RELOC_NUMBER (R_M32R_HI16_SLO, 8)
  RELOC_NUMBER (R_M32R_LO16, 9)
  RELOC_NUMBER (R_M32R_SDA16, 10)
  RELOC_NUMBER (R_M32R_GNU_VTINHERIT, 11)
  RELOC_NUMBER (R_M32R_GNU_VTENTRY, 12)
  EMPTY_RELOC  (R_M32R_max)
END_RELOC_NUMBERS
a52 10

/* Processor specific flags for the ELF header e_flags field.  */

/* Two bit m32r architecture field.  */
#define EF_M32R_ARCH		0x30000000

/* m32r code.  */
#define E_M32R_ARCH		0x00000000
/* m32rx code.  */
#define E_M32RX_ARCH		0x10000000
@


1.1.1.3
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d2 1
a2 1
   Copyright 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.
d40 2
a41 1
END_RELOC_NUMBERS (R_M32R_max)
@


1.1.1.4
log
@Binutils 2.15, with testsuites removed, and without gdb and libiberty.
@
text
@d2 1
a2 1
   Copyright 1996, 1997, 1998, 1999, 2000, 2003 Free Software Foundation, Inc.
d4 1
a4 1
   This file is part of BFD, the Binary File Descriptor library.
d6 13
a18 13
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software Foundation, Inc.,
   59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d28 12
a39 42
  /* REL relocations */
  RELOC_NUMBER (R_M32R_16, 1)		 /* For backwards compatibility. */
  RELOC_NUMBER (R_M32R_32, 2)		 /* For backwards compatibility. */
  RELOC_NUMBER (R_M32R_24, 3)		 /* For backwards compatibility. */
  RELOC_NUMBER (R_M32R_10_PCREL, 4)	 /* For backwards compatibility. */
  RELOC_NUMBER (R_M32R_18_PCREL, 5)	 /* For backwards compatibility. */
  RELOC_NUMBER (R_M32R_26_PCREL, 6)	 /* For backwards compatibility. */
  RELOC_NUMBER (R_M32R_HI16_ULO, 7)	 /* For backwards compatibility. */
  RELOC_NUMBER (R_M32R_HI16_SLO, 8)	 /* For backwards compatibility. */
  RELOC_NUMBER (R_M32R_LO16, 9)		 /* For backwards compatibility. */
  RELOC_NUMBER (R_M32R_SDA16, 10)	 /* For backwards compatibility. */
  RELOC_NUMBER (R_M32R_GNU_VTINHERIT, 11)/* For backwards compatibility. */
  RELOC_NUMBER (R_M32R_GNU_VTENTRY, 12)	 /* For backwards compatibility. */

  /* RELA relocations */
  RELOC_NUMBER (R_M32R_16_RELA, 33)
  RELOC_NUMBER (R_M32R_32_RELA, 34)
  RELOC_NUMBER (R_M32R_24_RELA, 35)
  RELOC_NUMBER (R_M32R_10_PCREL_RELA, 36)
  RELOC_NUMBER (R_M32R_18_PCREL_RELA, 37)
  RELOC_NUMBER (R_M32R_26_PCREL_RELA, 38)
  RELOC_NUMBER (R_M32R_HI16_ULO_RELA, 39)
  RELOC_NUMBER (R_M32R_HI16_SLO_RELA, 40)
  RELOC_NUMBER (R_M32R_LO16_RELA, 41)
  RELOC_NUMBER (R_M32R_SDA16_RELA, 42)
  RELOC_NUMBER (R_M32R_RELA_GNU_VTINHERIT, 43)
  RELOC_NUMBER (R_M32R_RELA_GNU_VTENTRY, 44)
                                                                                
  RELOC_NUMBER (R_M32R_GOT24, 48)
  RELOC_NUMBER (R_M32R_26_PLTREL, 49)
  RELOC_NUMBER (R_M32R_COPY, 50)
  RELOC_NUMBER (R_M32R_GLOB_DAT, 51)
  RELOC_NUMBER (R_M32R_JMP_SLOT, 52)
  RELOC_NUMBER (R_M32R_RELATIVE, 53)
  RELOC_NUMBER (R_M32R_GOTOFF, 54)
  RELOC_NUMBER (R_M32R_GOTPC24, 55)
  RELOC_NUMBER (R_M32R_GOT16_HI_ULO, 56)
  RELOC_NUMBER (R_M32R_GOT16_HI_SLO, 57)
  RELOC_NUMBER (R_M32R_GOT16_LO, 58)
  RELOC_NUMBER (R_M32R_GOTPC_HI_ULO, 59)
  RELOC_NUMBER (R_M32R_GOTPC_HI_SLO, 60)
  RELOC_NUMBER (R_M32R_GOTPC_LO, 61)
d65 1
a65 20
#define E_M32RX_ARCH            0x10000000
/* m32r2 code.  */
#define E_M32R2_ARCH            0x20000000

/* 12 bit m32r new instructions field.  */
#define EF_M32R_INST            0x0FFF0000
/* Parallel instructions.  */
#define E_M32R_HAS_PARALLEL     0x00010000
/* Hidden instructions for m32rx:
   jc, jnc, macwhi-a, macwlo-a, mulwhi-a, mulwlo-a, sth+, shb+, sat, pcmpbz,
   sc, snc.  */
#define E_M32R_HAS_HIDDEN_INST  0x00020000
/* New bit instructions:
   clrpsw, setpsw, bset, bclr, btst.  */
#define E_M32R_HAS_BIT_INST     0x00040000
/* Floating point instructions.  */
#define E_M32R_HAS_FLOAT_INST   0x00080000

/* 4 bit m32r ignore to check field.  */
#define EF_M32R_IGNORE          0x0000000F
@


