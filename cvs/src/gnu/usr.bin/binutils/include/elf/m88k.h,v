head	1.2;
access;
symbols
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.18
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.04.17.21.19.17;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2013.01.01.00.02.00;	author miod;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Define and fill machine-specific DT_88K_PLT{START,END} _DYNAMIC tags when
creating objects with a .plt (either shared libraries or dynamic binaries).
These tags contain the start and end address of the plt, relative to the
beginning of the object.

This will (eventually) allow ld.so to find the area spanned by the plt more
easily, and also matches what SVR4/m88k does.
@
text
@/* MC88k ELF support for BFD.
   Copyright 1998, 1999, 2000 Free Software Foundation, Inc.

   This file is part of BFD, the Binary File Descriptor library.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software Foundation,
   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

#ifndef _ELF_M88K_H
#define _ELF_M88K_H

#include "elf/reloc-macros.h"

/* Relocation types.  */
START_RELOC_NUMBERS (elf_m88k_reloc_type)
  RELOC_NUMBER (R_88K_NONE, 0)
  RELOC_NUMBER (R_88K_COPY, 1)
  RELOC_NUMBER (R_88K_GOTP_ENT, 2)
  RELOC_NUMBER (R_88K_8, 4)
  RELOC_NUMBER (R_88K_8S, 5)
  RELOC_NUMBER (R_88K_16S, 7)
  RELOC_NUMBER (R_88K_DISP16, 8)
  RELOC_NUMBER (R_88K_DISP26, 10)
  RELOC_NUMBER (R_88K_PLT_DISP26, 14)
  RELOC_NUMBER (R_88K_BBASED_32, 16)
  RELOC_NUMBER (R_88K_BBASED_32UA, 17)
  RELOC_NUMBER (R_88K_BBASED_16H, 18)
  RELOC_NUMBER (R_88K_BBASED_16L, 19)
  RELOC_NUMBER (R_88K_ABDIFF_32, 24)
  RELOC_NUMBER (R_88K_ABDIFF_32UA, 25)
  RELOC_NUMBER (R_88K_ABDIFF_16H, 26)
  RELOC_NUMBER (R_88K_ABDIFF_16L, 27)
  RELOC_NUMBER (R_88K_ABDIFF_16, 28)
  RELOC_NUMBER (R_88K_32, 32)
  RELOC_NUMBER (R_88K_32UA, 33)
  RELOC_NUMBER (R_88K_16H, 34)
  RELOC_NUMBER (R_88K_16L, 35)
  RELOC_NUMBER (R_88K_16, 36)
  RELOC_NUMBER (R_88K_GOT_32, 40)
  RELOC_NUMBER (R_88K_GOT_32UA, 41)
  RELOC_NUMBER (R_88K_GOT_16H, 42)
  RELOC_NUMBER (R_88K_GOT_16L, 43)
  RELOC_NUMBER (R_88K_GOT_16, 44)
  RELOC_NUMBER (R_88K_GOTP_32, 48)
  RELOC_NUMBER (R_88K_GOTP_32UA, 49)
  RELOC_NUMBER (R_88K_GOTP_16H, 50)
  RELOC_NUMBER (R_88K_GOTP_16L, 51)
  RELOC_NUMBER (R_88K_GOTP_16, 52)
  RELOC_NUMBER (R_88K_PLT_32, 56)
  RELOC_NUMBER (R_88K_PLT_32UA, 57)
  RELOC_NUMBER (R_88K_PLT_16H, 58)
  RELOC_NUMBER (R_88K_PLT_16L, 59)
  RELOC_NUMBER (R_88K_PLT_16, 60)
  RELOC_NUMBER (R_88K_ABREL_32, 64)
  RELOC_NUMBER (R_88K_ABREL_32UA, 65)
  RELOC_NUMBER (R_88K_ABREL_16H, 66)
  RELOC_NUMBER (R_88K_ABREL_16L, 67)
  RELOC_NUMBER (R_88K_ABREL_16, 68)
  RELOC_NUMBER (R_88K_GOT_ABREL_32, 72)
  RELOC_NUMBER (R_88K_GOT_ABREL_32UA, 73)
  RELOC_NUMBER (R_88K_GOT_ABREL_16H, 74)
  RELOC_NUMBER (R_88K_GOT_ABREL_16L, 75)
  RELOC_NUMBER (R_88K_GOT_ABREL_16, 76)
  RELOC_NUMBER (R_88K_GOTP_ABREL_32, 80)
  RELOC_NUMBER (R_88K_GOTP_ABREL_32UA, 81)
  RELOC_NUMBER (R_88K_GOTP_ABREL_16H, 82)
  RELOC_NUMBER (R_88K_GOTP_ABREL_16L, 83)
  RELOC_NUMBER (R_88K_GOTP_ABREL_16, 84)
  RELOC_NUMBER (R_88K_PLT_ABREL_32, 88)
  RELOC_NUMBER (R_88K_PLT_ABREL_32UA, 89)
  RELOC_NUMBER (R_88K_PLT_ABREL_16H, 90)
  RELOC_NUMBER (R_88K_PLT_ABREL_16L, 91)
  RELOC_NUMBER (R_88K_PLT_ABREL_16, 92)
  RELOC_NUMBER (R_88K_SREL_32, 96)
  RELOC_NUMBER (R_88K_SREL_32UA, 97)
  RELOC_NUMBER (R_88K_SREL_16H, 98)
  RELOC_NUMBER (R_88K_SREL_16L, 99)
  /* These are GNU extensions to enable C++ vtable garbage collection. */
  RELOC_NUMBER (R_88K_GNU_VTINHERIT, 100)
  RELOC_NUMBER (R_88K_GNU_VTENTRY, 101)
END_RELOC_NUMBERS (R_88K_UNIMPLEMENTED)

/* Processor specific flags for the ELF header e_flags field.  */

#define	EF_NABI     0x80000000	/* not ABI compliant */
#define EF_M88110   0x00000004	/* used 88110-specific features */

/* Processor specific dynamic tag values.  */

#define	DT_88K_ADDRBASE	0x70000001
#define	DT_88K_PLTSTART	0x70000002
#define	DT_88K_PLTEND	0x70000003
#define	DT_88K_TDESC	0x70000004

#endif
@


1.1
log
@m88k ELF toolchain, supporting static binaries only so far.

Assembler supports a register prefix of `#' when configured for SVR4, and `%'
when configured for OpenBSD. Pseudo-ops do not need a leading dot, except
when configured for OpenBSD, allowing the `set' instruction to be recognized
correctly.

Based upon various unfinished or unreliable works, including smurph@@'s early
work in 2003, my own attempts in 2004 and 2005, and Michael Kato's binutils
2.15 diff from 2005. Support for register prefixes, as well as fixing an
evil off-by-one in resolving 16-bit pc-relative relocations in ld (which would
only affect kernel .S files branching to global symbols), came as part of the
2012 work.

Not enabled yet (needs Makefile.bsd-wrapper, bfd/config.bfd and
gdb/configure.tgt updates to completely enable) so as not to disturb the
existing a.out toolchain builds; will hopefully be enabled very soon.
@
text
@d99 7
@

