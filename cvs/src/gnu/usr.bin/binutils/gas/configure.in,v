head	1.31;
access;
symbols
	OPENBSD_6_0:1.31.0.14
	OPENBSD_6_0_BASE:1.31
	OPENBSD_5_9:1.31.0.10
	OPENBSD_5_9_BASE:1.31
	OPENBSD_5_8:1.31.0.12
	OPENBSD_5_8_BASE:1.31
	OPENBSD_5_7:1.31.0.4
	OPENBSD_5_7_BASE:1.31
	OPENBSD_5_6:1.31.0.8
	OPENBSD_5_6_BASE:1.31
	OPENBSD_5_5:1.31.0.6
	OPENBSD_5_5_BASE:1.31
	OPENBSD_5_4:1.31.0.2
	OPENBSD_5_4_BASE:1.31
	OPENBSD_5_3:1.30.0.2
	OPENBSD_5_3_BASE:1.30
	OPENBSD_5_2:1.28.0.24
	OPENBSD_5_2_BASE:1.28
	OPENBSD_5_1_BASE:1.28
	OPENBSD_5_1:1.28.0.22
	OPENBSD_5_0:1.28.0.20
	OPENBSD_5_0_BASE:1.28
	OPENBSD_4_9:1.28.0.18
	OPENBSD_4_9_BASE:1.28
	OPENBSD_4_8:1.28.0.16
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.28.0.12
	OPENBSD_4_7_BASE:1.28
	OPENBSD_4_6:1.28.0.14
	OPENBSD_4_6_BASE:1.28
	OPENBSD_4_5:1.28.0.10
	OPENBSD_4_5_BASE:1.28
	OPENBSD_4_4:1.28.0.8
	OPENBSD_4_4_BASE:1.28
	OPENBSD_4_3:1.28.0.6
	OPENBSD_4_3_BASE:1.28
	OPENBSD_4_2:1.28.0.4
	OPENBSD_4_2_BASE:1.28
	OPENBSD_4_1:1.28.0.2
	OPENBSD_4_1_BASE:1.28
	OPENBSD_4_0:1.26.0.8
	OPENBSD_4_0_BASE:1.26
	OPENBSD_3_9:1.26.0.6
	OPENBSD_3_9_BASE:1.26
	OPENBSD_3_8:1.26.0.4
	OPENBSD_3_8_BASE:1.26
	OPENBSD_3_7:1.26.0.2
	OPENBSD_3_7_BASE:1.26
	BINUTILS_2_15:1.1.1.10
	OPENBSD_3_6:1.24.0.2
	OPENBSD_3_6_BASE:1.24
	BINUTILS-2_14:1.1.1.9
	OPENBSD_3_5:1.23.0.2
	OPENBSD_3_5_BASE:1.23
	OPENBSD_3_4:1.22.0.2
	OPENBSD_3_4_BASE:1.22
	OPENBSD_3_3:1.20.0.4
	OPENBSD_3_3_BASE:1.20
	OPENBSD_3_2:1.20.0.2
	OPENBSD_3_2_BASE:1.20
	binutils-2_11_2:1.1.1.8
	OPENBSD_3_1:1.17.0.4
	OPENBSD_3_1_BASE:1.17
	OPENBSD_3_0:1.17.0.2
	OPENBSD_3_0_BASE:1.17
	BINUTILS-2_10_1:1.1.1.7
	OPENBSD_2_9:1.15.0.2
	OPENBSD_2_9_BASE:1.15
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	BINUTILS-2_10:1.1.1.6
	OPENBSD_2_7:1.10.0.10
	OPENBSD_2_7_BASE:1.10
	new-binutils:1.10.0.8
	OPENBSD_2_6:1.10.0.6
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.10.0.4
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.10.0.2
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.9.0.6
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.4
	OPENBSD_2_2_BASE:1.9
	BINUTILS-2_8_1:1.1.1.5
	OPENBSD_2_1:1.9.0.2
	OPENBSD_2_1_BASE:1.9
	CYGNUS-961112:1.1.1.4
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	CYGNUS-960904:1.1.1.3
	CYGNUS-960609:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.31
date	2013.07.05.21.09.22;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2013.02.02.13.26.18;	author miod;	state Exp;
branches;
next	1.29;

1.29
date	2013.01.01.00.02.00;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2006.10.08.21.12.39;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2006.10.06.20.58.17;	author miod;	state Exp;
branches;
next	1.26;

1.26
date	2005.01.25.13.24.51;	author mickey;	state Exp;
branches;
next	1.25;

1.25
date	2004.11.02.20.45.23;	author miod;	state Exp;
branches;
next	1.24;

1.24
date	2004.05.17.21.54.28;	author drahn;	state Exp;
branches;
next	1.23;

1.23
date	2004.02.10.22.28.05;	author mickey;	state Exp;
branches;
next	1.22;

1.22
date	2003.08.01.07.40.19;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2003.04.17.03.44.26;	author drahn;	state Exp;
branches;
next	1.20;

1.20
date	2002.08.11.22.51.48;	author art;	state Exp;
branches;
next	1.19;

1.19
date	2002.05.13.18.33.13;	author fgsch;	state Exp;
branches;
next	1.18;

1.18
date	2002.05.13.17.07.34;	author fgsch;	state Exp;
branches;
next	1.17;

1.17
date	2001.09.17.07.03.14;	author kevlo;	state Exp;
branches;
next	1.16;

1.16
date	2001.06.09.22.29.32;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2001.01.31.15.49.49;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2001.01.31.07.21.36;	author art;	state Exp;
branches;
next	1.13;

1.13
date	2000.11.10.01.04.46;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.29.22.52.42;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2000.09.12.19.11.41;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	98.05.04.21.22.44;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	97.01.10.06.54.04;	author imp;	state Exp;
branches;
next	1.8;

1.8
date	96.12.22.18.11.34;	author rahnds;	state Exp;
branches;
next	1.7;

1.7
date	96.11.23.03.34.17;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.09.04.19.04.22;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.07.14.20.41.30;	author pefo;	state Exp;
branches;
next	1.4;

1.4
date	96.06.09.20.12.43;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.01.08.21.29.00;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.01.08.18.16.05;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.05.33;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.05.33;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.09.19.39.26;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.09.04.17.43.22;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	96.11.19.14.13.57;	author niklas;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	97.05.29.09.21.41;	author niklas;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2000.09.12.14.46.09;	author espie;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2001.06.09.22.07.07;	author espie;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2002.05.13.13.31.25;	author fgsch;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2004.05.17.20.42.25;	author drahn;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2004.11.02.20.22.42;	author miod;	state Exp;
branches;
next	;


desc
@@


1.31
log
@VAX ELF toolchain, using `%' as the register prefix. Heavily based upon
NetBSD.
@
text
@dnl Process this file with autoconf to produce a configure script.
dnl
dnl And be careful when changing it!  If you must add tests with square
dnl brackets, be sure changequote invocations surround it.
dnl
dnl
dnl v2.5 needed for --bindir et al
AC_PREREQ(2.57)
AC_INIT(as.h)

dnl Autoconf 2.57 will find the aux dir without this.  However, unless
dnl we specify this explicitly, automake-1.7 will assume that ylwrap is in
dnl gas/ instead of gas/../.
AC_CONFIG_AUX_DIR(..)
AC_CANONICAL_SYSTEM
AC_ISC_POSIX

changequote(,)dnl
BFD_VERSION=`sed -n -e 's/^.._INIT_AUTOMAKE.*,[ 	]*\([^ 	]*\)[ 	]*).*/\1/p' < ${srcdir}/../bfd/configure.in`
changequote([,])dnl
AM_INIT_AUTOMAKE(gas, ${BFD_VERSION})

AM_PROG_LIBTOOL

user_bfd_gas=
AC_ARG_ENABLE(bfd-assembler,
[  --enable-bfd-assembler  use BFD back end for writing object files],
[case "${enableval}" in
  yes) need_bfd=yes user_bfd_gas=yes ;;
  no)  user_bfd_gas=no ;;
  *)   AC_MSG_ERROR(bad value ${enableval} given for bfd-assembler option) ;;
esac])dnl
AC_ARG_ENABLE(targets,
[    targets            alternative target configurations besides the primary],
[case "${enableval}" in
  yes | "") AC_ERROR(enable-targets option must specify target names or 'all')
	    ;;
  no)	    enable_targets= ;;
  *)	    enable_targets=$enableval ;;
esac])dnl
AC_ARG_ENABLE(commonbfdlib,
[  --enable-commonbfdlib   build shared BFD/opcodes/libiberty library],
[case "${enableval}" in
  yes) commonbfdlib=true ;;
  no)  commonbfdlib=false ;;
  *)   AC_MSG_ERROR([bad value ${enableval} for BFD commonbfdlib option]) ;;
esac])dnl

using_cgen=no

build_warnings="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
AC_ARG_ENABLE(build-warnings,
[  --enable-build-warnings Enable build-time compiler warnings if gcc is used],
[case "${enableval}" in
  yes)	;;
  no)	build_warnings="-w";;
  ,*)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
        build_warnings="${build_warnings} ${t}";;
  *,)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
        build_warnings="${t} ${build_warnings}";;
  *)    build_warnings=`echo "${enableval}" | sed -e "s/,/ /g"`;;
esac
if test x"$silent" != x"yes" && test x"$build_warnings" != x""; then
  echo "Setting warning flags = $build_warnings" 6>&1
fi])dnl
WARN_CFLAGS=""
if test "x${build_warnings}" != x -a "x$GCC" = xyes ; then
    WARN_CFLAGS="${build_warnings}"
fi
AC_SUBST(WARN_CFLAGS)

# Generate a header file
AM_CONFIG_HEADER(config.h:config.in)

# If we are on a DOS filesystem, we must use gdb.ini rather than
# .gdbinit.
case "${host}" in
  *-*-msdos* | *-*-go32* | *-*-mingw32* | *-*-windows*)
    GDBINIT="gdb.ini"
    AC_CONFIG_FILES(gdb.ini:gdbinit.in)
    ;;
  *)
    GDBINIT=".gdbinit"
    AC_CONFIG_FILES(.gdbinit:gdbinit.in)
    ;;
esac
AC_SUBST(GDBINIT)

te_file=generic

# Makefile target for installing gas in $(tooldir)/bin.
install_tooldir=install-exec-tooldir

canon_targets=""
all_targets=no
if test -n "$enable_targets" ; then
  for t in `echo $enable_targets | sed 's/,/ /g'`; do
    if test $t = "all"; then
      all_targets=yes
      continue
    fi
    result=`$ac_config_sub $t 2>/dev/null`
    if test -n "$result" ; then
      canon_targets="$canon_targets $result"
#    else
#      # Permit "all", etc.  We don't support it yet though.
#      canon_targets="$canon_targets $t"
    fi
  done
  GAS_UNIQ(canon_targets)
fi

emulations=""

for this_target in $target $canon_targets ; do

changequote(,)dnl
    eval `echo $this_target | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/cpu=\1 vendor=\2 os=\3/'`
changequote([,])dnl

    # check for architecture variants
    arch=
    endian=
    case ${cpu} in
      am33_2.0)		cpu_type=mn10300 endian=little ;;
      alpha*)		cpu_type=alpha ;;
      arm*b|xscale*b|strongarm*b) cpu_type=arm endian=big ;;
      arm*|xscale*|strongarm*)    cpu_type=arm endian=little ;;
      c4x*)		cpu_type=tic4x ;;
      hppa*)		cpu_type=hppa ;;
changequote(,)dnl
      i[3-7]86)		cpu_type=i386 arch=i386;;
      x86_64)		cpu_type=i386 arch=x86_64;;
      ia64)		cpu_type=ia64 ;;
      ip2k)             cpu_type=ip2k endian=big ;; 
      iq2000)           cpu_type=iq2000 endian=big ;; 
      m6811|m6812|m68hc12) cpu_type=m68hc11 ;;
      m680[012346]0)	cpu_type=m68k ;;
changequote([,])dnl
      m68008)		cpu_type=m68k ;;
      m683??)		cpu_type=m68k ;;
      m5200)		cpu_type=m68k ;;
      m8*)		cpu_type=m88k ;;
      mips*el)		cpu_type=mips endian=little ;;
      mips*)		cpu_type=mips endian=big ;;
      or32*)		cpu_type=or32 endian=big ;;
      pjl*)		cpu_type=pj endian=little ;;
      pj*)		cpu_type=pj endian=big ;;
      powerpc*le*)	cpu_type=ppc endian=little ;;
      powerpc*)		cpu_type=ppc endian=big ;;
      rs6000*)		cpu_type=ppc ;;
      s390x*)		cpu_type=s390 arch=s390x ;;
      s390*)		cpu_type=s390 arch=s390 ;;
      sh5*)		cpu_type=sh64 endian=big ;;
      sh5le*)		cpu_type=sh64 endian=little ;;
      sh64*)            cpu_type=sh64 endian=big ;;
      sh64le*)		cpu_type=sh64 endian=little ;;
      sh*le)		cpu_type=sh endian=little ;;
      sh*)		cpu_type=sh endian=big ;;
      sparclite*)	cpu_type=sparc arch=sparclite ;;
      sparclet*)	cpu_type=sparc arch=sparclet ;;
      sparc64*)		cpu_type=sparc arch=v9-64 ;;
      sparc86x*)	cpu_type=sparc arch=sparc86x  ;;
      sparc*)		cpu_type=sparc arch=sparclite ;; # ??? See tc-sparc.c.
      v850*)		cpu_type=v850 ;;
      xtensa*)		cpu_type=xtensa arch=xtensa ;;
      m32r)             cpu_type=m32r target_cpu=m32r endian=big ;;
      m32rle)           cpu_type=m32r target_cpu=m32r endian=little ;;
      *)		cpu_type=${cpu} ;;
    esac

    if test ${this_target} = $target ; then
      target_cpu_type=${cpu_type}
    elif test ${target_cpu_type} != ${cpu_type} ; then
      continue
    fi

    generic_target=${cpu_type}-$vendor-$os
    dev=no
    bfd_gas=no
    em=generic

    # assign object format
    case ${generic_target} in
      a29k-*-coff)			fmt=coff ;;
      a29k-amd-udi)			fmt=coff ;;
      a29k-amd-ebmon)			fmt=coff ;;
      a29k-nyu-sym1)			fmt=coff ;;
      a29k-*-rtems*)			fmt=coff ;;
      a29k-*-vxworks*)			fmt=coff ;;

      alpha*-*-*vms*)			fmt=evax ;;
      alpha*-*-netware*)		fmt=ecoff ;;
      alpha*-*-osf*)			fmt=ecoff ;;
      alpha*-*-linuxecoff*)		fmt=ecoff ;;
      alpha*-*-linux-gnu*)		fmt=elf em=linux ;;
      alpha*-*-netbsd*)			fmt=elf em=nbsd ;;
      alpha*-*-openbsd*)		fmt=elf em=obsd ;;

      # cpu_type for am33_2.0 is set to mn10300
      mn10300-*-linux*)			fmt=elf bfd_gas=yes em=linux ;;

      arc-*-elf*)			fmt=elf ;;

      arm-*-aout)			fmt=aout ;;
      arm-*-coff | thumb-*-coff)	fmt=coff ;;
      arm-*-rtems* | thumb-*-rtems*)	fmt=elf ;;
      arm-*-elf | thumb-*-elf)		fmt=elf ;;
      arm-*-kaos*)			fmt=elf ;;
      arm*-*-conix*)			fmt=elf ;;
      arm-*-linux*aout*)		fmt=aout em=linux ;;
      arm*-*-linux-gnu*)		fmt=elf  em=linux ;;
      arm*-*-uclinux*)			fmt=elf  em=linux ;;
      arm-*-netbsdelf*)                 fmt=elf  em=nbsd ;;
      arm-*-netbsd*)			fmt=aout em=nbsd ;;
      arm-*-openbsd*)			fmt=elf  em=obsd ;;
      arm-**-nto*)			fmt=elf ;;
      arm-*-oabi | thumb-*-oabi)	fmt=elf ;;
      arm-epoc-pe | thumb-epoc-pe)	fmt=coff em=epoc-pe ;;
      arm-wince-pe | arm-*-wince)       fmt=coff em=wince-pe ;;
      arm-*-pe | thumb-*-pe)		fmt=coff em=pe ;;
      arm-*-riscix*)			fmt=aout em=riscix ;;

      avr-*-*)				fmt=elf ;;

      cris-*-linux-gnu*)		fmt=multi bfd_gas=yes em=linux ;;
      cris-*-*)				fmt=multi bfd_gas=yes ;;

      d10v-*-*)				fmt=elf ;;
      d30v-*-*)				fmt=elf ;;
      dlx-*-*)				fmt=elf ;;

      fr30-*-*)				fmt=elf ;;
      frv-*-*linux*)			fmt=elf em=linux;;
      frv-*-*)				fmt=elf ;;

      hppa-*-linux*)	case ${cpu} in
			    hppa*64*)	fmt=elf em=hppalinux64;;
			    hppa*)	fmt=elf em=linux;;
			esac ;;
      hppa-*-*elf*)			fmt=elf em=hppa ;;
      hppa-*-lites*)			fmt=elf em=hppa ;;
      hppa-*-netbsd*)			fmt=elf em=nbsd ;;
      hppa-*-openbsd*)	case ${cpu} in
			    hppa64)	fmt=elf em=obsdhppa64 ;;
			    hppa)	fmt=elf em=obsd ;;
			esac ;;
      hppa-*-osf*)			fmt=som em=hppa ;;
      hppa-*-rtems*)			fmt=elf em=hppa ;;
      hppa-*-hpux11*)	case ${cpu} in
			    hppa*64*)	fmt=elf em=hppa64 ;;
			    hppa*)	fmt=som em=hppa ;;
			esac ;;
      hppa-*-hpux*)			fmt=som em=hppa ;;
      hppa-*-mpeix*)			fmt=som em=hppa ;;
      hppa-*-bsd*)			fmt=som em=hppa ;;
      hppa-*-hiux*)			fmt=som em=hppa ;;

      h8300-*-rtems*)			fmt=coff ;;
      h8300-*-coff)			fmt=coff ;;
      h8300-*-elf)			fmt=elf ;;
      h8500-*-rtems*)			fmt=coff ;;
      h8500-*-coff)			fmt=coff ;;

      i370-*-elf* | i370-*-linux*)	fmt=elf ;;
      i386-ibm-aix*)			fmt=coff em=i386aix ;;
      i386-sequent-bsd*)		fmt=aout em=dynix ;;
      i386-*-beospe*)			fmt=coff em=pe ;;
      i386-*-beos*)			fmt=elf ;;
      i386-*-coff)			fmt=coff ;;
      i386-*-elf)			fmt=elf ;;
      i386-*-kaos*)			fmt=elf ;;
      i386-*-bsd*)			fmt=aout em=386bsd ;;
      i386-*-netbsd0.8)			fmt=aout em=386bsd ;;
      i386-*-netbsdpe*)			fmt=coff em=pe ;;
      i386-*-netbsd*-gnu* | \
      i386-*-knetbsd*-gnu | \
      i386-*-netbsdelf*)		fmt=elf em=nbsd ;;
      i386-*-netbsd*)	case ${cpu} in
			    x86_64)	fmt=elf em=nbsd ;;
			    *)		fmt=aout em=nbsd ;;
			esac ;;
changequote(,)dnl
      i386-*-openbsd*)			em=obsd bfd_gas=yes
			case ${cpu} in
			    x86_64)	fmt=elf ;;
			    *) case ${os} in
				openbsd[0-2].* | openbsd3.[0-2])
					fmt=aout ;;
			       *)
					fmt=elf ;;
			       esac
			esac ;;
changequote([,])dnl
      i386-*-linux*aout*)		fmt=aout em=linux ;;
      i386-*-linux*oldld)		fmt=aout em=linux ;;
      i386-*-linux*coff*)		fmt=coff em=linux ;;
      i386-*-linux-gnu*)		fmt=elf em=linux ;;
      x86_64-*-linux-gnu*)		fmt=elf em=linux ;;
      i386-*-lynxos*)			fmt=coff em=lynx ;;
changequote(,)dnl
      i386-*-sysv[45]*)			fmt=elf ;;
      i386-*-solaris*)			fmt=elf ;;
      i386-*-freebsdaout*)		fmt=aout em=386bsd ;;
      i386-*-freebsd[12].*)		fmt=aout em=386bsd ;;
      i386-*-freebsd[12])		fmt=aout em=386bsd ;;
changequote([,])dnl
      i386-*-freebsd* | i386-*-kfreebsd*-gnu)
					fmt=elf em=freebsd ;;
      i386-*-sysv*)			fmt=coff ;;
      i386-*-sco3.2v5*coff)		fmt=coff ;;
      i386-*-isc*)			fmt=coff ;;
      i386-*-sco3.2v5*)			fmt=elf
	  if test ${this_target} = $target; then
	    AC_DEFINE(SCO_ELF, 1, [Define if defaulting to ELF on SCO 5.])
	  fi ;;
      i386-*-sco3.2*)			fmt=coff ;;
      i386-*-vsta)			fmt=aout ;;
      i386-*-msdosdjgpp* \
      | i386-*-go32* \
      | i386-go32-rtems*)		fmt=coff em=go32
	    AC_DEFINE(STRICTCOFF, 1, [Using strict COFF?]) ;;
      i386-*-rtemself*)			fmt=elf ;;
      i386-*-rtemscoff*)		fmt=coff ;;
      i386-*-rtems*)			fmt=elf ;;
      i386-*-gnu*)			fmt=elf ;;
      i386-*-mach*)			fmt=aout em=mach ;;
      i386-*-msdos*)			fmt=aout ;;
      i386-*-moss*)			fmt=elf ;;
      i386-*-pe)			fmt=coff em=pe ;;
      i386-*-cygwin*)			fmt=coff em=pe ;;
      i386-*-interix*)			fmt=coff em=interix ;;
      i386-*-mingw32*)			fmt=coff em=pe ;;
      i386-*-nto-qnx*)			fmt=elf ;;
      i386-*-*nt*)			fmt=coff em=pe ;;
      i386-*-chaos)			fmt=elf ;;

      i860-*-*)				fmt=elf endian=little
		AC_MSG_WARN(GAS support for ${generic_target} is preliminary and a work in progress) ;;
      i960-*-bout)			fmt=bout ;;
      i960-*-coff)			fmt=coff em=ic960 ;;
      i960-*-rtems*)			fmt=coff em=ic960 ;;
      i960-*-nindy*)			fmt=bout ;;
      i960-*-vxworks5.0)		fmt=bout ;;
      i960-*-vxworks5.*)		fmt=coff em=ic960 ;;
      i960-*-vxworks*)			fmt=bout ;;
      i960-*-elf*)			fmt=elf ;;

      ia64-*-elf*)			fmt=elf ;;
      ia64-*-aix*)			fmt=elf em=ia64aix ;;
      ia64-*-linux-gnu*)		fmt=elf em=linux ;;
      ia64-*-hpux*)			fmt=elf em=hpux ;;
      ia64-*-netbsd*)			fmt=elf em=nbsd ;;

      ip2k-*-*)				fmt=elf ;;

      iq2000-*-elf)         		fmt=elf bfd_gas=yes ;;

      m32r-*-elf*)			fmt=elf ;;
      m32r-*-linux*)			fmt=elf em=linux;;

      m68hc11-*-* | m6811-*-*)		fmt=elf ;;
      m68hc12-*-* | m6812-*-*)		fmt=elf ;;

      m68k-*-vxworks*)			fmt=aout em=sun3 ;;
      m68k-ericsson-ose)		fmt=aout em=sun3 ;;
      m68k-*-sunos*)			fmt=aout em=sun3 ;;
      m68k-motorola-sysv*)		fmt=coff em=delta ;;
      m68k-bull-sysv3*)			fmt=coff em=dpx2 ;;
      m68k-apollo-*)			fmt=coff em=apollo ;;
      m68k-*-elf*)			fmt=elf ;;
      m68k-*-sysv4*)			fmt=elf em=svr4 ;;
      m68k-*-sysv*)			fmt=coff ;;
      m68k-*-coff | m68k-*-rtemscoff*)	fmt=coff ;;
      m68k-*-rtems*)			fmt=elf ;;
      m68k-*-hpux*)			fmt=hp300 em=hp300 ;;
      m68k-*-linux*aout*)		fmt=aout em=linux ;;
      m68k-*-linux-gnu*)		fmt=elf em=linux ;;
      m68k-*-uclinux*)			fmt=elf ;;
      m68k-*-gnu*)			fmt=elf ;;
      m68k-*-lynxos*)			fmt=coff em=lynx ;;
      m68k-*-netbsdelf*)		fmt=elf em=nbsd ;;
      m68k-*-netbsd*)			fmt=aout em=nbsd bfd_gas=yes ;;
      m68k-*-openbsd*)			fmt=elf em=obsd ;;
      m68k-apple-aux*)			fmt=coff em=aux ;;
      m68k-*-psos*)			fmt=elf em=psos;;

      m88k-motorola-sysv3*)		fmt=coff em=delt88 ;;
      m88k-*-coff*)			fmt=coff ;;
      m88k-*-openbsd*)			fmt=elf em=obsd bfd_gas=yes ;;

      mcore-*-elf)			fmt=elf ;;
      mcore-*-pe)			fmt=coff em=pe bfd_gas=yes ;;

      # don't change em like *-*-bsd does
      mips-sony-bsd*)			fmt=ecoff ;;
      mips-*-bsd*)
	    AC_MSG_ERROR(Unknown vendor for mips-bsd configuration.) ;;
      mips-*-ultrix*)			fmt=ecoff endian=little ;;
      mips-*-osf*)			fmt=ecoff endian=little ;;
      mips-*-ecoff*)			fmt=ecoff ;;
      mips-*-pe*)			fmt=coff endian=little em=pe ;;
      mips-*-irix6*)			fmt=elf em=irix ;;
      mips-*-irix5*)			fmt=elf em=irix ;;
      mips-*-irix*)			fmt=ecoff em=irix ;;
      mips-*-lnews*)			fmt=ecoff em=lnews ;;
      mips-*-riscos*)			fmt=ecoff ;;
      mips*-*-linux*)			fmt=elf em=tmips ;;
      mips-*-sysv4*MP* | mips-*-gnu*)	fmt=elf em=tmips ;;
      mips-*-sysv*)			fmt=ecoff ;;
      mips-*-elf* | mips-*-rtems*)	fmt=elf ;;
      mips-*-netbsd*)			fmt=elf ;;
      mips-*-openbsd*)			fmt=elf em=tmips ;;

      mmix-*-*)				fmt=elf ;;
      mn10200-*-*)			fmt=elf ;;
      mn10300-*-*)			fmt=elf ;;
      msp430-*-*)			fmt=elf ;;
      openrisc-*-*)			fmt=elf ;;
      or32-*-rtems*)			fmt=elf ;;
      or32-*-coff)			fmt=coff ;;
      or32-*-elf)			fmt=elf ;;
      pj*)				fmt=elf ;;

      ppc-*-pe | ppc-*-cygwin*)		fmt=coff em=pe ;;
      ppc-*-winnt*)			fmt=coff em=pe ;;
changequote(,)dnl
      ppc-*-aix5.[01])			fmt=coff em=aix5 ;;
changequote([,])dnl
      ppc-*-aix5.*)			fmt=coff em=aix5
      	AC_DEFINE(AIX_WEAK_SUPPORT, 1,
		  [Define if using AIX 5.2 value for C_WEAKEXT.])
      ;;
      ppc-*-aix*)			fmt=coff ;;
      ppc-*-beos*)			fmt=coff ;;
      ppc-*-netbsd* | ppc-*-elf*)	fmt=elf ;;
      ppc-*-openbsd*)			fmt=elf em=obsd ;;
      ppc-*-eabi* | ppc-*-sysv4*)	fmt=elf ;;
      ppc-*-linux-gnu*)			fmt=elf em=linux
	    case "$endian" in
		big)  ;;
		*)    AC_MSG_ERROR(GNU/Linux must be configured big endian) ;;
	    esac ;;
      ppc-*-solaris*)			fmt=elf
	    if test ${this_target} = $target; then
		AC_DEFINE(TARGET_SOLARIS_COMMENT, 1,
			  [Define if default target is PowerPC Solaris.])
	    fi
	    if test x${endian} = xbig; then
		AC_MSG_ERROR(Solaris must be configured little endian)
	    fi ;;
      ppc-*-rtems*)			fmt=elf ;;
      ppc-*-macos* | ppc-*-mpw*)	fmt=coff em=macos ;;
      ppc-*-netware*)			fmt=elf em=ppcnw ;;
      ppc-**-nto*)			fmt=elf ;;
      ppc-*-kaos*)			fmt=elf ;;

      s390x-*-linux-gnu*)		fmt=elf em=linux ;;
      s390-*-linux-gnu*)		fmt=elf em=linux ;;

      sh*-*-linux*)			fmt=elf em=linux
	    case ${cpu} in
		sh*eb)	endian=big ;;
		*)	endian=little ;;
	    esac ;;
      sh5*-*-netbsd*)			fmt=elf em=nbsd ;;
      sh64*-*-netbsd*)			fmt=elf em=nbsd ;;
      sh*-*-netbsdelf*)			fmt=elf em=nbsd ;;
      sh*-*-openbsd*)			fmt=elf em=obsd endian=little ;;
      sh-*-elf*)			fmt=elf ;;
      sh-*-coff*)			fmt=coff ;;
      sh-*-nto*)			fmt=elf ;;
      sh-*-pe*)				fmt=coff em=pe bfd_gas=yes endian=little ;;
      sh-*-rtemscoff*)			fmt=coff ;;
      sh-*-rtems*)			fmt=elf ;;
      sh-*-kaos*)			fmt=elf ;;
      shle*-*-kaos*)			fmt=elf ;;
      sh64-*-elf*)			fmt=elf ;;

      ns32k-pc532-mach*)		fmt=aout em=pc532mach ;;
      ns32k-pc532-ux*)			fmt=aout em=pc532mach ;;
      ns32k-pc532-lites*)		fmt=aout em=nbsd532 ;;
      ns32k-*-netbsd*)			fmt=aout em=nbsd532 ;;

      sparc-*-rtemsaout*)		fmt=aout ;;
      sparc-*-rtemself*)		fmt=elf ;;
      sparc-*-rtems*)			fmt=elf ;;
      sparc-*-sunos4*)			fmt=aout em=sun3 ;;
      sparc-*-aout | sparc*-*-vxworks*)	fmt=aout em=sparcaout ;;
      sparc-*-coff)			fmt=coff ;;
      sparc-*-linux*aout*)		fmt=aout em=linux ;;
      sparc-*-linux-gnu*)		fmt=elf em=linux ;;
      sparc-*-lynxos*)			fmt=coff em=lynx ;;
      sparc-fujitsu-none)		fmt=aout ;;
      sparc-*-elf)			fmt=elf ;;
      sparc-*-sysv4*)			fmt=elf ;;
      sparc-*-solaris*)			fmt=elf ;;
      sparc-*-netbsdelf*)		fmt=elf em=nbsd ;;
      sparc-*-netbsd*)	case ${cpu} in
			    sparc64)	fmt=elf em=nbsd ;;
			    *)		fmt=aout em=nbsd ;;
			esac ;;
changequote(,)dnl
      sparc-*-openbsd*)			em=obsd bfd_gas=yes
			case ${os} in
			    openbsd[0-2].* | openbsd3.[0-1])
					fmt=aout ;;
			    *)
					fmt=elf ;;
			esac ;;
changequote([,])dnl
      sparc64-*-openbsd*) em=obsd bfd_gas=yes fmt=elf ;;
      strongarm-*-coff)			fmt=coff ;;
      strongarm-*-elf)			fmt=elf ;;
      strongarm-*-kaos*)		fmt=elf ;;
      xscale-*-coff)			fmt=coff ;;
      xscale-*-elf)			fmt=elf ;;

      tic30-*-*aout*)			fmt=aout bfd_gas=yes ;;
      tic30-*-*coff*)			fmt=coff bfd_gas=yes ;;
      tic4x-*-* | c4x-*-*)              fmt=coff bfd_gas=yes ;;
      tic54x-*-* | c54x*-*-*)		fmt=coff bfd_gas=yes need_libm=yes;;
      tic80-*-*)			fmt=coff ;;

      v850-*-*)				fmt=elf ;;
      v850e-*-*)			fmt=elf ;;
      v850ea-*-*)			fmt=elf ;;

      vax-*-netbsdelf* | vax-*-openbsd*) fmt=elf em=nbsd ;;
      vax-*-netbsd*)			fmt=aout em=nbsd ;;
      vax-*-bsd* | vax-*-ultrix*)	fmt=aout ;;
      vax-*-linux-gnu*)			fmt=elf em=linux bfd_gas=yes ;;
      vax-*-vms)			fmt=vms ;;

      w65-*-*)				fmt=coff ;;

      xstormy16-*-*)			fmt=elf ;;

      xtensa-*-*)			fmt=elf ;;

      z8k-*-coff | z8k-*-sim)		fmt=coff ;;

      *-*-aout | *-*-scout)		fmt=aout ;;
      *-*-freebsd* | *-*-kfreebsd*-gnu)	fmt=elf em=freebsd ;;
      *-*-nindy*)			fmt=bout ;;
      *-*-bsd*)				fmt=aout em=sun3 ;;
      *-*-generic)			fmt=generic ;;
      *-*-xray | *-*-hms)		fmt=coff ;;
      *-*-sim)				fmt=coff ;;
      *-*-elf | *-*-sysv4* | *-*-solaris*) fmt=elf dev=yes ;;
      *-*-aros*)			fmt=elf em=linux bfd_gas=yes ;;
      *-*-vxworks | *-*-windiss)	fmt=elf ;;
      *-*-netware)			fmt=elf ;;
    esac

    if test ${this_target} = $target ; then
      endian_def=
      if test x${endian} = xbig; then
	endian_def=1
      elif test x${endian} = xlittle; then
	endian_def=0
      fi
      if test x${endian_def} != x; then
	AC_DEFINE_UNQUOTED(TARGET_BYTES_BIG_ENDIAN, $endian_def,
			   [Define as 1 if big endian.])
      fi
    fi

    case ${cpu_type}-${fmt} in
	alpha*-* | arm-* | i386-* | ia64*-* | mips-* | ns32k-* \
		| pdp11-* | ppc-* | sparc-* | strongarm-* | xscale-* \
		| *-elf | *-ecoff | *-som)
	    bfd_gas=yes ;;
    esac

# Other random stuff.

    case ${cpu_type} in
      mips)
	# Set mips_cpu to the name of the default CPU.
	case ${target_cpu} in
	  mips | mipsbe | mipseb | mipsle | mipsel | mips64 | mips64el)
	    mips_cpu=from-abi
	    ;;
	  mipsisa32 | mipsisa32el)
	    mips_cpu=mips32
	    ;;
	  mipsisa32r2 | mipsisa32r2el)
	    mips_cpu=mips32r2
	    ;;
	  mipsisa64 | mipsisa64el)
	    mips_cpu=mips64
	    ;;
	  mipsisa64r2 | mipsisa64r2el)
	    mips_cpu=mips64r2
	    ;;
	  mipstx39 | mipstx39el)
	    mips_cpu=r3900
	    ;;
	  mips64vr | mips64vrel)
	    mips_cpu=vr4100
	    ;;
	  mipsisa32r2* | mipsisa64r2*)
changequote(,)dnl
	    mips_cpu=`echo $target_cpu | sed -e 's/[a-z]*..r2//' -e 's/el$//'`
changequote([,])dnl
	    ;;
	  mips64* | mipsisa64* | mipsisa32*)
changequote(,)dnl
	    mips_cpu=`echo $target_cpu | sed -e 's/[a-z]*..//' -e 's/el$//'`
changequote([,])dnl
	    ;;
	  *)
	    AC_ERROR($target_cpu isn't a supported MIPS CPU name)
	    ;;
	esac
	# See whether it's appropriate to set E_MIPS_ABI_O32 for o32
	# binaries.  It's a GNU extension that some OSes don't understand.
	# The value only matters on ELF targets.
	case ${target} in
	  *-*-irix*)
	    use_e_mips_abi_o32=0
	    ;;
	  *)
	    use_e_mips_abi_o32=1
	    ;;
	esac
	# Decide whether to generate 32-bit or 64-bit code by default.
	# Used to resolve -march=from-abi when an embedded ABI is selected.
	case ${target} in
	  mips64*-*-* | mipsisa64*-*-*)
	    mips_default_64bit=1
	    ;;
	  *)
	    mips_default_64bit=0
	    ;;
	esac
	# Decide which ABI to target by default.
	case ${target} in
	  mips64*-linux* | mips-sgi-irix6*)
	    mips_default_abi=N32_ABI
	    ;;
	  mips*-linux*)
	    mips_default_abi=O32_ABI
	    ;;
	  mips64*-openbsd*)
	    mips_default_abi=N64_ABI
	    ;;
	  *)
	    mips_default_abi=NO_ABI
	    ;;
	esac
	AC_DEFINE_UNQUOTED(MIPS_CPU_STRING_DEFAULT, "$mips_cpu",
			   [Default CPU for MIPS targets. ])
	AC_DEFINE_UNQUOTED(USE_E_MIPS_ABI_O32, $use_e_mips_abi_o32,
			   [Allow use of E_MIPS_ABI_O32 on MIPS targets. ])
	AC_DEFINE_UNQUOTED(MIPS_DEFAULT_64BIT, $mips_default_64bit,
			   [Generate 64-bit code by default on MIPS targets. ])
	AC_DEFINE_UNQUOTED(MIPS_DEFAULT_ABI, $mips_default_abi,
			   [Choose a default ABI for MIPS targets. ])
	;;
    esac

    # Do we need the opcodes library?
    case ${cpu_type} in
      vax | i386 | tic30)
	;;

      *)
	need_opcodes=yes

	case "${enable_shared}" in
	yes) shared_opcodes=true ;;
	*opcodes*) shared_opcodes=true ;;
	*) shared_opcodes=false ;;
	esac
	if test "${shared_opcodes}" = "true"; then
	  # A shared libopcodes must be linked against libbfd.
	  need_bfd=yes
	fi
	;;
    esac

    # Any other special object files needed ?
    case ${cpu_type} in
      fr30 | ip2k | iq2000 | m32r | openrisc)
	using_cgen=yes
	;;

      frv)
	using_cgen=yes
	;;
      m68k)
	case ${extra_objects} in
	*m68k-parse.o*) ;;
	*) extra_objects="$extra_objects m68k-parse.o" ;;
	esac
	;;

      mips)
	echo ${extra_objects} | grep -s "itbl-parse.o" 
	if test $? -ne 0 ; then
	  extra_objects="$extra_objects itbl-parse.o"
	fi

	echo ${extra_objects} | grep -s "itbl-lex.o" 
	if test $? -ne 0 ; then
	  extra_objects="$extra_objects itbl-lex.o"
	fi

	echo ${extra_objects} | grep -s "itbl-ops.o" 
	if test $? -ne 0 ; then
	  extra_objects="$extra_objects itbl-ops.o"
	fi
	;;

      i386 | s390 | sparc)
	if test $this_target = $target ; then
	  AC_DEFINE_UNQUOTED(DEFAULT_ARCH, "${arch}", [Default architecture.])
	fi
	;;

      xstormy16)
	using_cgen=yes
	;;

      xtensa)
	echo ${extra_objects} | grep -s "xtensa-relax.o"
	if test $? -ne 0 ; then
	  extra_objects="$extra_objects xtensa-relax.o"
	fi
	;;

      *)
	;;
    esac

    if test $using_cgen = yes ; then
	case "x${extra_objects}" in
	*cgen.o*) ;;
	*) extra_objects="$extra_objects cgen.o" ;;
	esac
    fi

# See if we really can support this configuration with the emulation code.

    if test $this_target = $target ; then
      primary_bfd_gas=$bfd_gas
      obj_format=$fmt
      te_file=$em

      if test $bfd_gas = no ; then
	# Can't support other configurations this way.
	break
      fi
    elif test $bfd_gas = no ; then
      # Can't support this configuration.
      break
    fi

# From target name and format, produce a list of supported emulations.

    case ${generic_target}-${fmt} in
      mips-*-irix5*-*)	emulation="mipsbelf mipslelf mipself mipsbecoff mipslecoff mipsecoff" ;;
      mips*-*-linux*-*) case "$endian" in
			big)	emulation="mipsbelf mipslelf mipself" ;;
			*)	emulation="mipslelf mipsbelf mipself" ;;
			esac ;;
      mips-*-lnews*-ecoff) ;;
      mips-*-*-ecoff)	case "$endian" in
			big)	emulation="mipsbecoff mipslecoff mipsecoff" ;;
			*)	emulation="mipslecoff mipsbecoff mipsecoff" ;;
			esac ;;
      mips-*-*-elf)	case "$endian" in
			big)	emulation="mipsbelf mipslelf mipself" ;;
			*)	emulation="mipslelf mipsbelf mipself" ;;
			esac ;;
      mips-*-sysv4*MP*-*) emulation="mipsbelf mipslelf mipself mipsbecoff mipslecoff mipsecoff" ;;
      # i386-pc-pe-coff != i386-pc-coff.
      i386-*-pe-coff)	;;
      # Uncommenting the next line will turn on support for i386 AOUT
      # for the default linux configuration
      # i386-*-linux*-elf) emulation="i386elf i386aout" ;;
      #
      i386-*-aout)	emulation="i386aout" ;;
      i386-*-coff)	emulation="i386coff" ;;
      i386-*-elf)	emulation="i386elf" ;;

      # Always all formats.  The first stated emulation becomes the default.
      cris-*-*aout*)	emulation="crisaout criself" ;;
      cris-*-*)		emulation="criself crisaout" ;;
    esac

    emulations="$emulations $emulation"

done

# Turn on all targets if possible
if test ${all_targets} = "yes"; then
  case ${target_cpu_type} in
  i386)
    case ${obj_format} in
    aout)
      emulations="$emulations i386coff i386elf"
      ;;
    coff)
      emulations="$emulations i386aout i386elf"
    ;;
    elf)
      emulations="$emulations i386aout i386coff"
      ;;
    esac
  ;;
  esac
fi

# Assign floating point type.  Most processors with FP support
# IEEE FP.  On those that don't support FP at all, usually IEEE
# is emulated.
case ${target_cpu} in
  vax | tahoe )	atof=${target_cpu} ;;
  pdp11)	atof=vax ;;
  *)		atof=ieee ;;
esac

case "${obj_format}" in
  "") AC_MSG_ERROR(GAS does not know what format to use for target ${target}) ;;
esac

# Unfortunately the cpu in cpu-opc.h file isn't always $(TARGET_CPU).
cgen_cpu_prefix=""
if test $using_cgen = yes ; then
  case ${target_cpu} in
    *) cgen_cpu_prefix=${target_cpu} ;;
  esac
  AC_SUBST(cgen_cpu_prefix)
  AC_DEFINE(USING_CGEN, 1, [Using cgen code?])
fi

dnl
dnl Make sure the desired support files exist.
dnl

if test ! -r ${srcdir}/config/tc-${target_cpu_type}.c; then
  AC_MSG_ERROR(GAS does not support target CPU ${target_cpu_type})
fi

if test ! -r ${srcdir}/config/obj-${obj_format}.c; then
  AC_MSG_ERROR(GAS does not have support for object file format ${obj_format})
fi

case ${user_bfd_gas}-${primary_bfd_gas} in
  yes-yes | no-no)
    # We didn't override user's choice.
    ;;
  no-yes)
    AC_MSG_WARN(Use of BFD is required for ${target}; overriding config options.)
    ;;
  no-preferred)
    primary_bfd_gas=no
    ;;
  *-preferred)
    primary_bfd_gas=yes
    ;;
  yes-*)
    primary_bfd_gas=yes
    ;;
  -*)
    # User specified nothing.
    ;;
esac

# Some COFF configurations want these random other flags set.
case ${obj_format} in
  coff)
    case ${target_cpu_type} in
      i386) AC_DEFINE(I386COFF, 1, [Using i386 COFF?]) ;;
      m68k) AC_DEFINE(M68KCOFF, 1, [Using m68k COFF?]) ;;
      m88k) AC_DEFINE(M88KCOFF, 1, [Using m88k COFF?]) ;;
    esac
    ;;
esac

# Getting this done right is going to be a bitch.  Each configuration specified
# with --enable-targets=... should be checked for environment, format, cpu, and
# bfd_gas setting.
#
# For each configuration, the necessary object file support code must be linked
# in.  This might be only one, it might be up to four.  The necessary emulation
# code needs to be provided, too.
#
# And then there's "--enable-targets=all"....
#
# For now, just always do it for MIPS ELF or ECOFF configurations.  Sigh.

formats="${obj_format}"
emfiles=""
EMULATIONS=""
GAS_UNIQ(emulations)
for em in . $emulations ; do
  case $em in
    .)	continue ;;
    mipsbelf | mipslelf | mipself)
	fmt=elf   file=mipself ;;
    mipsbecoff | mipslecoff | mipsecoff)
	fmt=ecoff file=mipsecoff ;;
    *coff)
	fmt=coff  file=$em ;;
    *aout)
	fmt=aout file=$em ;;
    *elf)
	fmt=elf file=$em ;;
  esac
  formats="$formats $fmt"
  emfiles="$emfiles e-$file.o"
  EMULATIONS="$EMULATIONS &$em,"
done
GAS_UNIQ(formats)
GAS_UNIQ(emfiles)
if test `set . $formats ; shift ; echo $#` -gt 1 ; then
  for fmt in $formats ; do
    case $fmt in
      aout)	AC_DEFINE(OBJ_MAYBE_AOUT, 1,    [a.out support?])   ;;
      bout)	AC_DEFINE(OBJ_MAYBE_BOUT, 1,    [b.out support?])   ;;
      coff)	AC_DEFINE(OBJ_MAYBE_COFF, 1,    [COFF support?])    ;;
      ecoff)	AC_DEFINE(OBJ_MAYBE_ECOFF, 1,   [ECOFF support?])   ;;
      elf)	AC_DEFINE(OBJ_MAYBE_ELF, 1,     [ELF support?])     ;;
      generic)	AC_DEFINE(OBJ_MAYBE_GENERIC, 1, [generic support?]) ;;
      hp300)	AC_DEFINE(OBJ_MAYBE_HP300, 1,   [HP300 support?])   ;;
      ieee)	AC_DEFINE(OBJ_MAYBE_IEEE, 1,    [IEEE support?])    ;;
      som)	AC_DEFINE(OBJ_MAYBE_SOM, 1,     [SOM support?])     ;;
      vms)	AC_DEFINE(OBJ_MAYBE_VMS, 1,     [VMS support?])     ;;
    esac
    extra_objects="$extra_objects obj-$fmt.o"
  done
  obj_format=multi
fi
if test `set . $emfiles ; shift ; echo $#` -gt 0 ; then
  DEFAULT_EMULATION=`set . $emulations ; echo $2`
  # e-mips* has more than one emulation per file, e-i386* has just one at the
  # moment.  If only one emulation is specified, then don't define
  # USE_EMULATIONS or include any of the e-files as they will only be bloat.
  case "${obj_format}${emfiles}" in
    multi* | *mips*)
      extra_objects="$extra_objects $emfiles"
      AC_DEFINE(USE_EMULATIONS, 1, [Use emulation support?]) ;;
  esac
fi
AC_SUBST(extra_objects)
AC_DEFINE_UNQUOTED(EMULATIONS, $EMULATIONS, [Supported emulations.])
AC_DEFINE_UNQUOTED(DEFAULT_EMULATION, "$DEFAULT_EMULATION",
		   [Default emulation.])

case ${primary_bfd_gas}-${target_cpu_type}-${obj_format} in
  yes-*-coff)	need_bfd=yes ;;
  no-*-coff)	need_bfd=yes
		AC_DEFINE(MANY_SEGMENTS, 1, [old COFF support?]) ;;
esac

reject_dev_configs=yes

case ${reject_dev_configs}-${dev} in
  yes-yes) # Oops.
    AC_MSG_ERROR(GAS does not support the ${generic_target} configuration.)
    ;;
esac

AC_SUBST(target_cpu_type)
AC_SUBST(obj_format)
AC_SUBST(te_file)
AC_SUBST(install_tooldir)
AC_SUBST(atof)
dnl AC_SUBST(emulation)

case "${primary_bfd_gas}" in
  yes)	AC_DEFINE(BFD_ASSEMBLER, 1, [Use BFD interface?])
	need_bfd=yes ;;
esac

# do we need the opcodes library?
case "${need_opcodes}" in
yes)
  OPCODES_LIB=../opcodes/libopcodes.la
  ;;
esac

case "${need_bfd}" in
yes)
  BFDLIB=../bfd/libbfd.la
  BFDVER_H=../bfd/bfdver.h
  ALL_OBJ_DEPS="$ALL_OBJ_DEPS"' ../bfd/bfd.h $(INCDIR)/symcat.h'
  ;;
esac

AC_SUBST(BFDLIB)
AC_SUBST(OPCODES_LIB)

AC_SUBST(BFDVER_H)
AC_SUBST(ALL_OBJ_DEPS)

AC_DEFINE_UNQUOTED(TARGET_ALIAS,	"${target_alias}", [Target alias.])
AC_DEFINE_UNQUOTED(TARGET_CANONICAL,	"${target}",       [Canonical target.])
AC_DEFINE_UNQUOTED(TARGET_CPU,		"${target_cpu}",   [Target CPU.])
AC_DEFINE_UNQUOTED(TARGET_VENDOR,	"${target_vendor}", [Target vendor.])
AC_DEFINE_UNQUOTED(TARGET_OS,		"${target_os}",    [Target OS.])

AC_PROG_CC

AC_PROG_YACC
AM_PROG_LEX

ALL_LINGUAS="fr tr es"
CY_GNU_GETTEXT

AM_MAINTAINER_MODE
AC_EXEEXT

AC_CHECK_HEADERS(string.h stdlib.h memory.h strings.h unistd.h stdarg.h varargs.h errno.h sys/types.h)

# Put this here so that autoconf's "cross-compiling" message doesn't confuse
# people who are not cross-compiling but are compiling cross-assemblers.
AC_MSG_CHECKING(whether compiling a cross-assembler)
if test "${host}" = "${target}"; then
  cross_gas=no
else
  cross_gas=yes
  AC_DEFINE(CROSS_COMPILE, 1, [Compiling cross-assembler?])
fi
AC_MSG_RESULT($cross_gas)

dnl ansidecl.h will deal with const
dnl AC_CONST
AC_FUNC_ALLOCA
AC_C_INLINE

# VMS doesn't have unlink.
AC_CHECK_FUNCS(unlink remove, break)

# Some systems don't have sbrk().
AC_CHECK_FUNCS(sbrk)

# do we need the math library?
case "${need_libm}" in
yes) 
  AC_CHECK_LIBM
  AC_SUBST(LIBM)
  ;;
esac

# Some non-ANSI preprocessors botch requoting inside strings.  That's bad
# enough, but on some of those systems, the assert macro relies on requoting
# working properly!
GAS_WORKING_ASSERT

# On some systems, the system header files may not declare malloc, realloc,
# and free.  There are places where gas needs these functions to have been
# declared -- such as when taking their addresses.
gas_test_headers="
#ifdef HAVE_MEMORY_H
#include <memory.h>
#endif
#ifdef HAVE_STRING_H
#include <string.h>
#else
#ifdef HAVE_STRINGS_H
#include <strings.h>
#endif
#endif
#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#endif
#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif
"
GAS_CHECK_DECL_NEEDED(strstr, f, char *(*f)(), $gas_test_headers)
GAS_CHECK_DECL_NEEDED(malloc, f, char *(*f)(), $gas_test_headers)
GAS_CHECK_DECL_NEEDED(free, f, void (*f)(), $gas_test_headers)
GAS_CHECK_DECL_NEEDED(sbrk, f, char *(*f)(), $gas_test_headers)
GAS_CHECK_DECL_NEEDED(environ, f, char **f, $gas_test_headers)

# Does errno.h declare errno, or do we have to add a separate declaration
# for it?
GAS_CHECK_DECL_NEEDED(errno, f, int f, [
#ifdef HAVE_ERRNO_H
#include <errno.h>
#endif
])

dnl This must come last.

dnl We used to make symlinks to files in the source directory, but now
dnl we just use the right name for .c files, and create .h files in
dnl the build directory which include the right .h file.  Make sure
dnl the old symlinks don't exist, so that a reconfigure in an existing
dnl directory behaves reasonably.

AC_CONFIG_FILES(Makefile doc/Makefile po/Makefile.in:po/Make-in)
AC_CONFIG_COMMANDS([default],
[rm -f targ-cpu.c targ-cpu.h obj-format.h obj-format.c targ-env.h atof-targ.c itbl-cpu.h
 echo '#include "tc-'"${target_cpu_type}"'.h"' > targ-cpu.h
 echo '#include "obj-'"${obj_format}"'.h"' > obj-format.h
 echo '#include "te-'"${te_file}"'.h"' > targ-env.h
 echo '#include "itbl-'"${target_cpu_type}"'.h"' > itbl-cpu.h
 if test "x$cgen_cpu_prefix" != x ; then
   echo '#include "opcodes/'"${cgen_cpu_prefix}"'-desc.h"' > cgen-desc.h
 fi

 sed -e '/POTFILES =/r po/POTFILES' po/Makefile.in > po/Makefile],
[target_cpu_type=${target_cpu_type}
 cgen_cpu_prefix=${cgen_cpu_prefix}
 obj_format=${obj_format}
 te_file=${te_file}])

AC_OUTPUT
@


1.30
log
@ELF toolchain for m68k, following the SysV/m68k ABI (32-bit types aligned on
32-bit boundaries, function return values being in %a0 instead of %d0 if they
are declared as pointers, and in fp registers if they are floating point types).

Compiler configuration bits (including a few m68k PIC code generation fixes)
borrowed from NetBSD.
@
text
@d529 1
a529 1
      vax-*-netbsdelf*)			fmt=elf em=nbsd ;;
@


1.29
log
@m88k ELF toolchain, supporting static binaries only so far.

Assembler supports a register prefix of `#' when configured for SVR4, and `%'
when configured for OpenBSD. Pseudo-ops do not need a leading dot, except
when configured for OpenBSD, allowing the `set' instruction to be recognized
correctly.

Based upon various unfinished or unreliable works, including smurph@@'s early
work in 2003, my own attempts in 2004 and 2005, and Michael Kato's binutils
2.15 diff from 2005. Support for register prefixes, as well as fixing an
evil off-by-one in resolving 16-bit pc-relative relocations in ld (which would
only affect kernel .S files branching to global symbols), came as part of the
2012 work.

Not enabled yet (needs Makefile.bsd-wrapper, bfd/config.bfd and
gdb/configure.tgt updates to completely enable) so as not to disturb the
existing a.out toolchain builds; will hopefully be enabled very soon.
@
text
@d384 1
a384 1
      m68k-*-openbsd*)			fmt=aout em=obsd bfd_gas=yes ;;
@


1.28
log
@Define superH obsd-specific emulations for ld, and use it by default.
@
text
@d390 1
@


1.27
log
@Early bits for a 32-bit SuperH toolchain, currently for little-endian
systems only; more work is necessary in ld land.
@
text
@d468 1
a468 1
      sh*-*-openbsd*)			fmt=elf em=nbsd endian=little ;;
@


1.26
log
@hppa64-unknown-openbsd build support; espie@@ miod@@ brad@@ ok
@
text
@d468 1
@


1.25
log
@Merge conflicts, bringing our changes back in:
- extra $(SHELL) and sugar for make (so that files not mode +x still work)
- safer temp file handling
- our W^X binary layout changes in ld
- OpenBSD policy for library file selection in ld
- arm and m88k changes which were not merged in time for official 2.15
- bfd core file handling
- a couple typos

New for 2.15:
- ld(1) and as(1) manpages now generated at build time
- binutils/stabs.c reverted to use our in-tree libiberty for now
- we still use our VIA C3 crypto code over stock binutils, as it recognizes
  more instructions
- new emulations for OpenBSD on mips64 machines, to help OpenBSD/sgi
- relaxed %f# handling in gas on OpenBSD/sparc64 (same as was in 2.14)

Tested on all platforms by various people; special thanks to sturm@@ and
otto@@.
@
text
@d244 4
a247 1
      hppa-*-openbsd*)			fmt=elf em=obsd ;;
@


1.24
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@d8 1
a8 1
AC_PREREQ(2.13)
d11 4
a76 1
GDBINIT=".gdbinit"
d80 5
d125 1
d129 1
d132 1
a132 1
      i[3456]86)	cpu_type=i386 arch=i386;;
d167 2
d200 3
d207 1
a207 1
      arm-*-rtems | thumb-*-rtems)	fmt=elf ;;
d220 1
a220 1
      arm-*-wince)			fmt=coff em=wince-pe ;;
a222 1
      arm-*-vxworks)			fmt=coff ;;
d226 1
d234 1
d273 2
d281 10
a290 11
      i386-*-openbsd*)     em=obsd bfd_gas=yes
                            case ${cpu} in
                             x86_64)   fmt=elf ;;
                             *) case ${os} in
                                 openbsd[0-2].* | openbsd3.[0-2])
                                    fmt=aout ;;
                                 *)
                                    fmt=elf ;;
                              esac
                            esac
                           ;;
d305 2
a332 1
      i386-*-vxworks*)			fmt=aout ;;
d356 2
a357 1
      m32r-*-*)				fmt=elf ;;
d376 1
a391 1
      mips-dec-bsd*)			fmt=aout endian=little ;;
d409 1
a409 2
      mips-*-openbsd*)			fmt=elf ;;
      mips-*-vxworks*)			fmt=elf ;;
d416 1
a416 1
      or32-*-rtems*)			fmt=coff ;;
d423 7
a429 1
      ppc-*-aix5*)			fmt=coff em=aix5 ;;
d433 1
a433 1
      ppc-*-openbsd*)                   fmt=elf em=obsd ;;
d435 1
a435 1
      ppc-*-linux-gnu*)			fmt=elf
a451 2
      ppc-*-vxworks*)			fmt=elf ;;
      ppc-*-windiss*)			fmt=elf ;;
d469 2
a470 2
      sh-*-rtemself*)			fmt=elf ;;
      sh-*-rtems*)			fmt=coff ;;
d499 7
a505 8
      sparc-*-openbsd*)   em=obsd bfd_gas=yes
                            case ${os} in
                               openbsd[0-2].* | openbsd3.[0-1])
                                  fmt=aout ;;
                               *)
                                  fmt=elf ;;
                            esac
                          ;;
d527 1
d539 1
a539 1
      *-*-freebsd*)			fmt=elf em=freebsd ;;
d546 2
a547 2
      *-*-aros*)				fmt=elf em=linux bfd_gas=yes ;;
      *-*-vxworks)			fmt=aout ;;
d589 3
d598 1
a598 1
	  mipsisa32r2*)
d641 3
d1093 2
a1094 1
AC_OUTPUT(Makefile doc/Makefile ${GDBINIT}:gdbinit.in po/Makefile.in:po/Make-in,
d1109 2
@


1.23
log
@configs for amd64; brad@@ ok
@
text
@d47 1
a47 1
build_warnings="-W -Wall"
d75 1
a75 1
  *-*-msdos* | *-*-go32* | *-*-mingw32* | *-*-cygwin* | *-*-windows*)
d118 2
a119 8
      armeb)		cpu_type=arm endian=big ;;
      arm*)		cpu_type=arm endian=little ;;
      armb*)		cpu_type=arm endian=little ;;
      armv*l)		cpu_type=arm endian=little ;;
      armv*b)		cpu_type=arm endian=big ;;
      xscale*)		cpu_type=arm endian=little ;;
      strongarm*)	cpu_type=arm endian=little ;;
      thumb*)		cpu_type=arm endian=little ;;
d125 2
d136 1
d139 1
a139 1
      powerpcle*)	cpu_type=ppc endian=little ;;
d142 8
d156 1
d173 22
a194 21
      a29k-*-coff)          fmt=coff ;;
      a29k-amd-udi)         fmt=coff ;;
      a29k-amd-ebmon)       fmt=coff ;;
      a29k-nyu-sym1)        fmt=coff ;;
      a29k-*-rtems*)        fmt=coff ;;
      a29k-*-vxworks*)      fmt=coff ;;

      alpha*-*-*vms*)	    fmt=evax ;;
      alpha*-*-netware*)    fmt=ecoff ;;
      alpha*-*-osf*)        fmt=ecoff ;;
      alpha*-*-linuxecoff*) fmt=ecoff ;;
      alpha*-*-linux-gnu*)  fmt=elf em=linux ;;
      alpha*-*-netbsd*)     fmt=elf em=nbsd ;;
      alpha*-*-openbsd*)    fmt=elf em=obsd ;;

      arc-*-elf*)           fmt=elf bfd_gas=yes ;;

      arm-*-aout)	                fmt=aout ;;
      arm-*-coff | thumb-*-coff)        fmt=coff ;;
      arm-*-rtems | thumb-*-rtems)      fmt=elf ;;
      arm-*-elf | thumb-*-elf)          fmt=elf ;;
d196 9
a204 7
      arm-*-linux*aout*)	        fmt=aout em=linux ;;
      arm*-*-linux-gnu* | arm*-*-uclinux*)	
					fmt=elf  em=linux ;;
      arm-*-netbsd*)	                fmt=aout em=nbsd ;;
      arm-*-openbsd*)			fmt=aout em=nbsd bfd_gas=yes ;;
      arm-*-oabi | thumb-*-oabi)        fmt=elf ;;
      arm-epoc-pe | thumb-epoc-pe)      fmt=coff em=epoc-pe ;;
d206 75
a280 56
      arm-*-pe | thumb-*-pe)            fmt=coff em=pe ;;
      arm-*-riscix*)	                fmt=aout em=riscix ;;
      arm-*-vxworks)	                fmt=coff ;;

      avr-*-*)		    fmt=elf bfd_gas=yes ;;

      cris-*-*)		    fmt=multi bfd_gas=yes ;;

      d10v-*-*)		    fmt=elf bfd_gas=yes ;;
      d30v-*-*)		    fmt=elf bfd_gas=yes ;;


      fr30-*-*)		    fmt=elf bfd_gas=yes ;;

      hppa-*-linux-gnu*)    case ${cpu} in
				hppa*64*)
					fmt=elf em=hppalinux64;;
				hppa*)
					fmt=elf em=linux;;
			    esac ;;
      hppa-*-*elf*)         fmt=elf em=hppa ;;
      hppa-*-lites*)        fmt=elf em=hppa ;;
      hppa-*-openbsd*)      fmt=elf em=hppa ;;
      hppa-*-osf*)          fmt=som em=hppa ;;
      hppa-*-rtems*)        fmt=elf em=hppa ;;
      hppa-*-hpux11*)	    case ${cpu} in
				hppa*64*)
					fmt=elf em=hppa64 ;;
				hppa*)
					fmt=som em=hppa ;;
			    esac ;;
      hppa-*-hpux*)         fmt=som em=hppa ;;
      hppa-*-mpeix*)        fmt=som em=hppa ;;
      hppa-*-bsd*)          fmt=som em=hppa ;;
      hppa-*-hiux*)         fmt=som em=hppa ;;

      h8300-*-rtems*)       fmt=coff ;;
      h8300-*-coff)         fmt=coff ;;
      h8500-*-rtems*)       fmt=coff ;;
      h8500-*-coff)         fmt=coff ;;

      i370-*-elf* | i370-*-linux*) fmt=elf ;;
      i386-ibm-aix*)        fmt=coff em=i386aix ;;
      i386-sequent-bsd*)    fmt=aout em=dynix bfd_gas=yes ;;
      i386-*-beospe*)       fmt=coff em=pe bfd_gas=yes ;;
      i386-*-beoself* | i386-*-beos*) fmt=elf bfd_gas=yes ;;
      i386-*-bsd*)          fmt=aout em=386bsd ;;
      i386-*-netbsd0.8)     fmt=aout em=386bsd ;;
      i386-*-netbsd*)       fmt=aout em=nbsd bfd_gas=yes;;
      i386-*-openbsd*)      fmt=elf em=nbsd;;
      x86_64-*-openbsd*)    fmt=elf em=nbsd;;
      i386-*-linux*aout* | i386-*-linux*oldld)   fmt=aout em=linux ;;
      i386-*-linux*coff*)   fmt=coff em=linux ;;
      i386-*-linux-gnu*)    fmt=elf em=linux bfd_gas=yes ;;
      x86_64-*-linux-gnu*)  fmt=elf em=linux bfd_gas=yes ;;
      i386-*-lynxos*)       fmt=coff em=lynx ;;
d282 5
a286 4
      i386-*-sysv[45]* | i386-*-solaris* | i386-*-elf)
			    fmt=elf bfd_gas=yes ;;
      i386-*-freebsdaout* | i386-*-freebsd[12].* | i386-*-freebsd[12])
                            fmt=aout em=386bsd ;;
d288 79
a366 72
      i386-*-coff | i386-*-sysv* | i386-*-sco3.2v5*coff | i386-*-isc*)
                          fmt=coff ;;
      i386-*-sco3.2v5*)      fmt=elf
			    if test ${this_target} = $target; then
				AC_DEFINE(SCO_ELF, 1,
				    [Define if defaulting to ELF on SCO 5.])
			    fi
			    ;;
      i386-*-sco3.2*)       fmt=coff ;;
      i386-*-vsta)          fmt=aout ;;
      i386-*-msdosdjgpp* | i386-*-go32* | i386-go32-rtems*)
			    fmt=coff em=go32 bfd_gas=yes
			    AC_DEFINE(STRICTCOFF, 1, [Using strict COFF?])
			    ;;
      i386-*-rtemself*)     fmt=elf ;;
      i386-*-rtems*)        fmt=coff ;;
      i386-*-gnu*)          fmt=elf ;;
      i386-*-mach*)
			    fmt=aout em=mach bfd_gas=yes ;;
      i386-*-msdos*)        fmt=aout ;;
      i386-*-moss*)	    fmt=elf ;;
      i386-*-pe)            fmt=coff em=pe bfd_gas=yes ;;
      i386-*-cygwin*)       fmt=coff em=pe bfd_gas=yes ;;
      i386-*-interix*)	    fmt=coff em=interix bfd_gas=yes ;;
      i386-*-mingw32*)      fmt=coff em=pe bfd_gas=yes ;;
      i386-*-*nt*)          fmt=coff em=pe bfd_gas=yes ;;
      i386-*-vxworks*)      fmt=aout ;;
      i386-*-chaos)         fmt=elf ;;
      i860-stardent-sysv4* | i860-stardent-elf*)
			    fmt=elf bfd_gas=yes endian=little
			    AC_MSG_WARN(GAS support for ${generic_target} is preliminary and a work in progress) ;;
      i960-*-bout)          fmt=bout ;;
      i960-*-coff)          fmt=coff em=ic960 ;;
      i960-*-rtems*)        fmt=coff em=ic960 ;;
      i960-*-nindy*)        fmt=bout ;;
      i960-*-vxworks4*)     fmt=bout ;;
      i960-*-vxworks5.0)    fmt=bout ;;
      i960-*-vxworks5.*)    fmt=coff em=ic960 ;;
      i960-*-vxworks*)      fmt=bout ;;
      i960-*-elf*)	    fmt=elf ;;

      ia64-*-elf*)	    fmt=elf ;;
      ia64-*-linux-gnu*)    fmt=elf em=linux ;;
      ia64-*-hpux*)	    fmt=elf em=hpux ;;

      m32r-*-*)		    fmt=elf bfd_gas=yes ;;

      m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)fmt=elf bfd_gas=yes ;;

      m68k-*-vxworks* | m68k-ericsson-ose | m68k-*-sunos*)
			    fmt=aout em=sun3 ;;
      m68k-motorola-sysv*)  fmt=coff em=delta ;;
      m68k-bull-sysv3*)     fmt=coff em=dpx2 ;;
      m68k-apollo-*)        fmt=coff em=apollo ;;
      m68k-*-sysv4*) # must be before -sysv*
			    fmt=elf em=svr4 ;;
      m68k-*-elf*)	    fmt=elf ;;
      m68k-*-coff | m68k-*-sysv* | m68k-*-rtems*)
			    fmt=coff ;;
      m68k-*-hpux*)         fmt=hp300 em=hp300 ;;
      m68k-*-linux*aout*)   fmt=aout em=linux ;;
      m68k-*-linux-gnu*)    fmt=elf em=linux ;;
      m68k-*-gnu*)	    fmt=elf ;;
      m68k-*-lynxos*)       fmt=coff em=lynx ;;
      m68k-*-netbsd*)       fmt=aout em=nbsd bfd_gas=yes ;;
      m68k-*-openbsd*)      fmt=aout em=nbsd bfd_gas=yes ;;
      m68k-apple-aux*)      fmt=coff em=aux ;;
      m68k-*-psos*)         fmt=elf em=psos;;

      m88k-motorola-sysv3*) fmt=coff em=delt88 ;;
      m88k-*-coff*)         fmt=coff ;;
      m88k-*-openbsd*)      fmt=aout em=delt88 ;;
d368 2
a369 2
      mcore-*-elf)	    fmt=elf bfd_gas=yes ;;
      mcore-*-pe)	    fmt=coff em=pe bfd_gas=yes ;;
d372 111
a482 88
      mips-dec-netbsd*)	    fmt=elf endian=little ;;
      mips-dec-bsd*)        fmt=aout endian=little ;;
      mips-sony-bsd*)       fmt=ecoff ;;
      mips-*-bsd*)          AC_MSG_ERROR(Unknown vendor for mips-bsd configuration.) ;;
      mips-*-ultrix*)       fmt=ecoff endian=little ;;
      mips-*-osf*)          fmt=ecoff endian=little ;;
      mips-*-ecoff*)        fmt=ecoff ;;
      mips-*-pe*)           fmt=coff endian=little em=pe ;;
      mips-*-irix6*)	    fmt=elf ;;
      mips-*-irix5*)        fmt=elf ;;
      mips-*-irix*)         fmt=ecoff ;;
      mips-*-lnews*)        fmt=ecoff em=lnews ;;
      mips-*-riscos*)       fmt=ecoff ;;
      mips-*-linux-gnu*)
			    fmt=elf em=tmips
			    AC_DEFINE(MIPS_STABS_ELF, 1,
				[Use ELF stabs for MIPS, not ECOFF stabs])
			    ;;
      mips-*-sysv4*MP* | mips-*-gnu*)
			    fmt=elf em=tmips ;;
      mips-*-sysv*)         fmt=ecoff ;;
      mips-*-elf* | mips-*-rtems* | mips-*-openbsd*)
			    fmt=elf ;;
      mips-*-vxworks*)      fmt=elf
			    AC_DEFINE(MIPS_STABS_ELF, 1,
				[Use ELF stabs for MIPS, not ECOFF stabs])
			    ;;
      mn10200-*-*)	    fmt=elf bfd_gas=yes ;;
      mn10300-*-*)	    fmt=elf bfd_gas=yes ;;
      pj*)		    fmt=elf ;;
      ppc-*-pe | ppc-*-cygwin* | ppc-*-winnt*)
		            fmt=coff em=pe ;;
      ppc-*-aix*)           fmt=coff ;;
      ppc-*-beos*)          fmt=coff ;;
      ppc-*-*bsd* | ppc-*-elf* | ppc-*-eabi* | ppc-*-sysv4*)
			    fmt=elf ;;
      ppc-*-linux-gnu*)	    fmt=elf
			    case "$endian" in
			    big)  ;;
			    *)    AC_MSG_ERROR(GNU/Linux must be configured big endian) ;;
			    esac
			    ;;
      ppc-*-solaris*)	    fmt=elf
			    if test ${this_target} = $target; then
				AC_DEFINE(TARGET_SOLARIS_COMMENT, 1,
				[Define if default target is PowerPC Solaris.])
			    fi
			    if test x${endian} = xbig; then
				AC_MSG_ERROR(Solaris must be configured little endian)
			    fi
			    ;;
      ppc-*-rtems*)	    fmt=elf ;;
      ppc-*-macos* | ppc-*-mpw*)
			    fmt=coff em=macos ;;
      ppc-*-netware*)       fmt=elf em=ppcnw ;;
      ppc-*-vxworks*)       fmt=elf ;;

      sh-*-linux*)	    fmt=elf em=linux ;;
      sh-*-elf*)	    fmt=elf ;;
      sh-*-coff*)           fmt=coff ;;
      sh-*-pe*)             fmt=coff em=pe bfd_gas=yes;;
      sh-*-rtemself*)       fmt=elf ;;
      sh-*-rtems*)	    fmt=coff ;;

      ns32k-pc532-mach* | ns32k-pc532-ux*)    fmt=aout em=pc532mach ;;
      ns32k-pc532-netbsd* | ns32k-pc532-lites*)  fmt=aout em=nbsd532 ;;
      ns32k-pc532-openbsd*) fmt=aout em=nbsd532 ;;

      sparc-*-rtemsaout*)   fmt=aout ;;
      sparc-*-rtemself*)    fmt=elf ;;
      sparc-*-rtems*)       fmt=elf ;;
      sparc-*-sunos4*)      fmt=aout em=sun3 ;;
      sparc-*-aout | sparc*-*-vxworks*)
			    fmt=aout em=sparcaout ;;
      sparc-*-coff)         fmt=coff ;;
      sparc-*-linux*aout*)  fmt=aout em=linux ;;
      sparc-*-linux-gnu*)   fmt=elf em=linux ;;
      sparc-*-lynxos*)      fmt=coff em=lynx ;;
      sparc-fujitsu-none)   fmt=aout ;;
      sparc-*-elf | sparc-*-sysv4* | sparc-*-solaris*)
			    fmt=elf ;;
      sparc-*-netbsd*)      em=nbsd bfd_gas=yes
                            case ${cpu} in
                                sparc) case ${os} in
                                           *elf*) fmt=elf ;;
                                           *)     fmt=aout ;;
                                       esac ;;
                                sparc64) fmt=elf ;;
d484 43
a526 47
                            ;;
      sparc-*-openbsd*)     em=nbsd
			    case ${cpu} in
				sparc) fmt=elf ;;
				sparc64) fmt=elf ;;
                            esac
			    ;;
      strongarm-*-coff)     fmt=coff ;;
      strongarm-*-elf)      fmt=elf ;;
      xscale-*-coff)     fmt=coff ;;
      xscale-*-elf)      fmt=elf ;;

      tic30-*-*aout*)	    fmt=aout bfd_gas=yes ;;
      tic30-*-*coff*)       fmt=coff bfd_gas=yes ;;
      tic54x-*-* | c54x*-*-*)
			    fmt=coff bfd_gas=yes need_libm=yes;;
      tic80-*-*)	    fmt=coff ;;

      v850-*-*)		    fmt=elf bfd_gas=yes ;;
      v850e-*-*)	    fmt=elf bfd_gas=yes ;;
      v850ea-*-*)	    fmt=elf bfd_gas=yes ;;

      vax-*-bsd* | vax-*-ultrix*)
			    fmt=aout ;;
      vax-*-vms)            fmt=vms ;;


      z8k-*-coff | z8k-*-sim)
			    fmt=coff ;;

      w65-*-*)              fmt=coff ;;

      *-*-aout | *-*-scout)
			    fmt=aout ;;
      *-*-freebsd*)	    fmt=elf em=freebsd bfd_gas=yes ;;
      *-*-nindy*)
			    fmt=bout ;;
      *-*-bsd*)
			    fmt=aout em=sun3 ;;
      *-*-generic)          fmt=generic ;;
      *-*-xray | *-*-hms)   fmt=coff ;;
      *-*-sim)              fmt=coff ;;
      *-*-elf | *-*-sysv4* | *-*-solaris*)
			    AC_MSG_WARN(GAS support for ${generic_target} is incomplete.)
			    fmt=elf dev=yes ;;
      *-*-vxworks)          fmt=aout ;;
      *-*-netware)          fmt=elf ;;
d543 4
a546 19
      alpha*-*)	bfd_gas=yes ;;
      arm-*)	bfd_gas=yes ;;
    # not yet
    # i386-aout)	bfd_gas=preferred ;;
      ia64*-*)	bfd_gas=yes ;;
      mips-*)	bfd_gas=yes ;;
      ns32k-*)	bfd_gas=yes ;;
      ppc-*)	bfd_gas=yes ;;
      sparc-*)	bfd_gas=yes ;;
      strongarm-*)	bfd_gas=yes ;;
      xscale-*)	bfd_gas=yes ;;
      *-elf)	bfd_gas=yes ;;
      *-ecoff)	bfd_gas=yes ;;
      *-som)	bfd_gas=yes ;;
    #enable bfd for coff and aout to allow testing if a bfd target is
    #the primary target, but not for coff or aout as the primary target
      i386-coff)	if test x${primary_bfd_gas} = xyes; then bfd_gas=yes; fi ;;
      i386-aout)	if test x${primary_bfd_gas} = xyes; then bfd_gas=yes; fi ;;
      *)		;;
d551 80
d653 1
a653 1
      fr30 | m32r)
d657 3
d684 1
a684 1
      i386)
d689 9
a697 3
      sparc)
	if test $this_target = $target ; then
	  AC_DEFINE_UNQUOTED(DEFAULT_ARCH, "${arch}", [Default architecture.])
d700 1
d732 3
a734 3
      mips-*-linux-gnu*-*) case "$endian" in
			big)	emulation="mipsbelf mipslelf mipself mipsbecoff mipslecoff mipsecoff" ;;
			*)	emulation="mipslelf mipsbelf mipself mipslecoff mipsbecoff mipsecoff" ;;
d789 1
d957 2
a958 1
  ALL_OBJ_DEPS="$ALL_OBJ_DEPS ../bfd/bfd.h"
d965 1
d979 1
a979 1
ALL_LINGUAS=
@


1.22
log
@A working gcc 2.95/m88k compiler, for some low standard value of working.

Configuration settings mostly borrowed from the former gcc 2.8 configuration.
A few typos and fixes backported from gcc 3.3, and a hell lot of fixes from
my fingertips.

This is enough to yield a compiler which will produce correct code at -O0.
Optimization is slightly broken for some constructs, and more fixes are in
the pipeline.

ok deraadt@@
@
text
@d247 1
@


1.21
log
@Switch i386 to new binutils, i386 tools now do ELF.
RODATA_* align macros to preserve current behavior on other
archs and allow for 1G sep between beginning of exe and beginning of data
DARPA funded work.
@
text
@d329 1
@


1.20
log
@Switch sparc binutils to ELF.
XXX - we might want to improve the version selection logic when feeding
those diffs back to FSF, but we can't do that until we bump our version
to OpenBSD 3.2 because then the tree wouldn't build.
@
text
@d246 1
a246 1
      i386-*-openbsd*)      fmt=aout em=nbsd bfd_gas=yes;;
@


1.19
log
@hppa pieces; don't regenerate yet.
@
text
@d426 1
a426 1
				sparc) fmt=aout ;;
@


1.18
log
@resolve conflicts.
@
text
@d219 1
@


1.17
log
@Support for arm and sparc64 platforms. ok espie
@
text
@d12 1
d14 4
a17 1
AM_INIT_AUTOMAKE(gas, 2.10.1)
d47 21
d123 1
d128 4
a131 1
      i[456]86)		cpu_type=i386 ;;
d171 1
a178 1
      alpha*-*-freebsd*)    fmt=elf em=freebsd ;;
d186 1
d190 3
a192 2
      arm*-*-linux-gnu*)		fmt=elf  em=linux ;;
      arm-*-netbsd*)	                fmt=aout em=nbsd bfd_gas=yes ;;
d196 1
a196 1
      arm-*-wince)          fmt=coff em=wince-pe bfd_gas=yes;;
d199 1
d203 2
d211 6
a217 1
      hppa-*-linux-gnu*)    fmt=elf em=hppa ;;
d221 6
d232 1
d234 2
d246 1
a246 1
      i386-*-linux*aout* | i386-*-linuxoldld)   fmt=aout em=linux ;;
d249 1
d251 2
a252 1
      i386-*-sysv4* | i386-*-solaris* | i386-*-elf)
a253 1
changequote(,)dnl
a256 1
      i386-*-freebsd*)	    fmt=elf bfd_gas=yes ;;
d268 3
a270 2
			    fmt=coff em=go32;;
      i386-*-rtemscoff*)    fmt=coff ;;
d272 1
a272 1
      i386-*-rtems*)        fmt=elf ;;
d278 1
a278 1
      i386-*-pe)            fmt=coff em=pe ;;
d282 1
a282 1
      i386-*-*nt*)          fmt=coff em=pe ;;
d284 4
a289 2
      i960-*-rtemscoff*)    fmt=coff em=ic960 ;;
      i960-*-rtemself*)     fmt=elf ;;
d298 4
d304 2
d314 1
a314 4
      m68k-*-rtemscoff*)    fmt=coff ;;
      m68k-*-rtemself*)	    fmt=elf ;;
      m68k-*-rtems*)        fmt=elf ;;
      m68k-*-coff | m68k-*-sysv*)
a339 1
      mips-*-ecoff*)        fmt=ecoff ;;
d346 7
d354 1
a354 1
      mips-*-elf* | mips-*-rtems* | mips-*-linux-gnu* | mips-*-gnu* | mips-*-openbsd*)
d390 1
d395 1
a395 2
      sh-*-rtemscoff*)	    fmt=coff ;;
      sh-*-rtems*)          fmt=coff ;;
d431 2
d436 2
d456 1
d489 1
d495 1
d558 5
d612 3
d622 4
d736 1
a736 1
    mipsbelf | mipslelf)
d738 1
a738 1
    mipsbecoff | mipslecoff)
d740 6
a745 6
    i386aout)
	fmt=aout  file=i386aout ;;
    i386coff)
	fmt=coff  file=i386coff ;;
    i386elf)
	fmt=elf   file=i386elf ;;
d872 8
@


1.16
log
@Automatic cvs merge. Dread what I will have to fix after this excuse
of a program is done...
@
text
@d162 1
d363 6
a368 2
      sparc-*-openbsd*)     fmt=aout em=nbsd ;;

@


1.15
log
@Spacing
@
text
@d13 1
a13 1
AM_INIT_AUTOMAKE(gas, 2.10)
d353 9
a361 1
      sparc-*-netbsd*)      fmt=aout em=nbsd ;;
@


1.14
log
@Switch alpha to ELF.
@
text
@d151 1
a151 1
      alpha*-*-openbsd*)     fmt=elf em=obsd ;;
@


1.13
log
@Backout last change, broke as emulation order
@
text
@a145 1
      alpha*-*-openbsd*)    fmt=ecoff ;;
d151 1
@


1.12
log
@Repair mips-based targets, espie@@ ok
@
text
@a278 2
      mips*el-*-openbsd*)   fmt=elf endian=little ;;
      mips*-*-openbsd*)     fmt=elf endian=big ;;
@


1.11
log
@Help stupid cvs fixing basic conflicts.
@
text
@d279 2
a280 1
      mips-dec-openbsd*)    fmt=elf endian=little ;;
@


1.10
log
@first cut on binutils/gcc support for hppa-*-openbsd*; tested on i386 host
@
text
@d7 10
a16 3
AC_PREREQ(2.5)dnl v2.5 needed for --bindir et al
AC_INIT(as.h)dnl
dnl
d33 2
a34 2
AC_ARG_ENABLE(shared,
[  --enable-shared         build shared BFD library],
d36 3
a38 7
  yes) shared=true shared_bfd=true shared_opcodes=true ;;
  no)  shared=false ;;
  *bfd*opcodes*) shared=true shared_bfd=true shared_opcodes=true ;;
  *opcodes*bfd*) shared=true shared_bfd=true shared_opcodes=true ;;
  *bfd*) shared=true shared_bfd=true ;;
  *opcodes*) shared=true shared_opcodes=true ;;
  *) shared=false ;;
d41 1
a41 2
# Generate a header file -- gets more post-processing by Makefile later.
AC_CONFIG_HEADER(conf)
d43 12
a54 4
dnl For recursion to work right, this must be an absolute pathname.
AC_CONFIG_AUX_DIR(`cd $srcdir;pwd`/..)
AC_CANONICAL_SYSTEM
AC_ARG_PROGRAM
d58 3
d62 1
d65 4
d89 2
d92 1
d95 5
d104 1
d107 1
a107 1
changequote([,])dnl
d109 1
a109 1
      mips*el)		cpu_type=mips endian=little;;
d111 2
d116 6
a121 2
      sparc64)		cpu_type=sparc want_sparc_v9=true ;;
      sparc*)		cpu_type=sparc ;;
a130 1
    targ=${cpu_type}
d138 4
a141 4
      a29k-*-coff)          fmt=coff targ=ebmon29k ;;
      a29k-amd-udi)         fmt=coff targ=ebmon29k ;;
      a29k-amd-ebmon)       fmt=coff targ=ebmon29k ;;
      a29k-nyu-sym1)        fmt=coff targ=ebmon29k ;;
d144 23
a166 5
      alpha-*-*vms*)	    fmt=evax ;;
      alpha-*-netware*)     fmt=ecoff ;;
      alpha-*-osf*)         fmt=ecoff ;;
      alpha-*-linuxecoff*)  fmt=ecoff ;;
      alpha-*-linux*)       fmt=elf em=linux ;;
d168 4
a172 10
      arm-*-riscix*)	    fmt=aout targ=arm-lit em=riscix ;;
      arm-*-aout)	    fmt=aout
			    case "$endian" in
			      big)	targ=arm-big ;;
			      *)	targ=arm-lit ;;
			    esac
			    ;;
      arm-*-coff)           fmt=coff ;;
      arm-*-riscix*)        fmt=aout ;;
      arm-*-pe)             fmt=coff targ=armcoff em=pe ;;
d174 1
d177 1
a178 1
      hppa-*-openbsd*)      fmt=elf em=hppa ;;
d180 1
d182 1
d188 5
a192 2
      i386-ibm-aix*)        fmt=coff targ=i386coff
			     em=i386aix ;;
d196 1
a196 1
      i386-*-openbsd*)       fmt=aout em=nbsd bfd_gas=yes;;
d198 19
a216 10
      i386-*-linux*coff*)   fmt=coff em=linux
			     targ=i386coff ;;
      i386-*-linux*)        fmt=elf em=linux ;;
      i386-*-lynxos*)       fmt=coff targ=i386coff
			     em=lynx ;;
      i386-*-sysv4* | i386-*-solaris* | i386-*-elf | i386-*-freebsdelf*)
			    fmt=elf ;;
      i386-*-sco*elf*)      fmt=elf targ=sco5 ;;
      i386-*-coff | i386-*-sysv* | i386-*-sco* | i386-*-isc*)
			    fmt=coff targ=i386coff ;;
d218 5
a222 2
      i386-*-go32)          fmt=coff targ=i386coff ;;
      i386-*-rtems*)        fmt=coff targ=i386coff ;;
d228 6
a233 3
      i386-*-pe)            fmt=coff targ=i386coff em=pe ;;
      i386-*-cygwin32)      fmt=coff targ=i386coff em=pe ;;
      i386-*-*nt)           fmt=coff targ=i386coff em=pe ;;
d235 4
a238 2
      i960-*-coff)          fmt=coff em=ic960 targ=ic960coff ;;
      i960-*-rtems*)        fmt=coff em=ic960 targ=ic960coff ;;
d242 1
a242 1
      i960-*-vxworks5.*)    fmt=coff em=ic960 targ=ic960coff ;;
d244 3
d250 11
a260 7
      m68k-motorola-sysv*)  fmt=coff targ=m68kcoff em=delta ;;
      m68k-bull-sysv3*)     fmt=coff targ=m68kcoff em=dpx2 ;;
      m68k-apollo-*)        fmt=coff targ=apollo em=apollo ;;
      m68k-*-sysv4 | m68k-*-elf) # must be before -sysv*
			    fmt=elf ;;
      m68k-*-coff | m68k-*-sysv* | m68k-*-rtems*)
			    fmt=coff targ=m68kcoff ;;
d263 3
a265 3
      m68k-*-linux*)	    fmt=elf em=linux ;;
      m68k-*-lynxos*)       fmt=coff targ=m68kcoff
			     em=lynx ;;
d267 2
a268 2
      m68k-*-openbsd*)       fmt=aout em=nbsd bfd_gas=yes ;;
      m68k-apple-aux*)      fmt=coff targ=m68kcoff em=aux ;;
d271 5
a275 2
      m88k-motorola-sysv3*) fmt=coff targ=m88kcoff em=delt88 ;;
      m88k-*-coff*)         fmt=coff targ=m88kcoff ;;
d278 4
a281 4
      mips-dec-netbsd*)	    fmt=elf targ=mips-lit endian=little ;;
      mips-*-openbsd*)      fmt=elf targ=mips-lit endian=little ;;
      mips-dec-bsd*)        fmt=aout targ=mips-lit ;;
      mips-sony-bsd*)       fmt=ecoff targ=mips-big ;;
d283 16
a298 26
      mips-*-ultrix*)       fmt=ecoff targ=mips-lit endian=little ;;
      mips-*-osf*)          fmt=ecoff targ=mips-lit endian=little ;;
      mips-*-ecoff*)        fmt=ecoff 
			    case "$endian" in
			    big) targ=mips-big ;;
			    *)   targ=mips-lit ;;
			    esac
			    ;;
      mips-*-ecoff*)        fmt=ecoff targ=mips-big ;;
      mips-*-gnu*)          fmt=aout
			    case "$endian" in
			    big) targ=mips-big ;;
			    *)   targ=mips-lit ;;
			    esac
			    ;;
      mips-*-irix6*)	    fmt=elf targ=mips-big ;;
      mips-*-irix5*)        fmt=elf targ=mips-big ;;
      mips-*-irix*)         fmt=ecoff targ=mips-big ;;
      mips-*-riscos*)       fmt=ecoff targ=mips-big ;;
      mips-*-sysv*)         fmt=ecoff targ=mips-big ;;
      mips-*-elf* | mips-*-rtems*)
			    fmt=elf 
			    case "$endian" in
			    big) targ=mips-big ;;
			    *)   targ=mips-lit ;;
			    esac
d302 3
a304 7
      ppc-*-pe | ppc-*-cygwin32 | ppc-*-winnt*)
		            fmt=coff em=pe 
			    case "$endian" in
			    big) targ=ppc-big ;;
			    *)   targ=ppc-lit ;;
			    esac
                            ;;
d306 1
d308 2
a309 1
			    fmt=elf
d311 2
a312 8
			    big)  targ=ppc-big ;;
			    *)    targ=ppc-lit ;;
			    esac
			    ;;
      ppc-*-linux*)	    fmt=elf
			    case "$endian" in
			    big)  targ=ppc-big ;;
			    *)    AC_MSG_ERROR(Linux must be configured big endian) ;;
d316 7
a322 11
			    case "$endian" in
			    big)  AC_MSG_ERROR(Solaris must be configured little endian) ;;
			    *)    targ=ppc-sol ;;
			    esac
			    ;;
      ppc-*-rtems*)
			    fmt=elf
			    case "$endian" in
			    big)  targ=ppc-big ;;
			    *)    targ=ppc-lit ;;
			    esac
d324 1
d328 1
d332 4
d341 3
a343 1
      sparc-*-rtems*)       fmt=aout ;;
d348 2
d354 9
a362 2
      sparc-*-netbsd*)      fmt=aout em=nbsd bfd_gas=yes ;;
      sparc-*-openbsd*)     fmt=aout em=nbsd bfd_gas=yes ;;
d365 2
d372 1
d394 13
d408 1
a408 1
      alpha-*)	bfd_gas=yes ;;
d416 1
d420 4
d429 1
a429 1
    # do we need the opcodes library?
d431 1
a431 1
      vax | i386)
d433 1
d436 6
d449 5
a453 5
    test -n "$want_sparc_v9" && AC_DEFINE(SPARC_V9)

    case ${cpu}-${vendor}-${os} in
      sparc64-*-elf*) AC_DEFINE(SPARC_ARCH64) ;;
    esac
a454 1
    case ${cpu_type} in
d461 25
d488 7
a499 1
      gas_target=$targ
d515 5
d528 7
d541 19
d572 10
a593 8
# and target makefile frag

target_frag=${srcdir}/config/${gas_target}.mt
if test ! -r ${target_frag}; then
  target_frag=/dev/null # ick! but subst_file can't be conditionalized
fi
AC_SUBST_FILE(target_frag)

d619 3
a621 3
      i386) AC_DEFINE(I386COFF) ;;
      m68k) AC_DEFINE(M68KCOFF) ;;
      m88k) AC_DEFINE(M88KCOFF) ;;
d649 6
d665 10
a674 10
      aout)	AC_DEFINE(OBJ_MAYBE_AOUT)    ;;
      bout)	AC_DEFINE(OBJ_MAYBE_BOUT)    ;;
      coff)	AC_DEFINE(OBJ_MAYBE_COFF)    ;;
      ecoff)	AC_DEFINE(OBJ_MAYBE_ECOFF)   ;;
      elf)	AC_DEFINE(OBJ_MAYBE_ELF)     ;;
      generic)	AC_DEFINE(OBJ_MAYBE_GENERIC) ;;
      hp300)	AC_DEFINE(OBJ_MAYBE_HP300)   ;;
      ieee)	AC_DEFINE(OBJ_MAYBE_IEEE)    ;;
      som)	AC_DEFINE(OBJ_MAYBE_SOM)     ;;
      vms)	AC_DEFINE(OBJ_MAYBE_VMS)     ;;
a680 2
  te_file=multi
  extra_objects="$extra_objects $emfiles"
d682 8
a689 1
  AC_DEFINE(USE_EMULATIONS)
d692 3
a694 9
AC_DEFINE_UNQUOTED(EMULATIONS, $EMULATIONS)
AC_DEFINE_UNQUOTED(DEFAULT_EMULATION, "$DEFAULT_EMULATION")

files="config/tc-${target_cpu_type}.c config/tc-${target_cpu_type}.h \
	config/obj-${obj_format}.h config/obj-${obj_format}.c \
	config/te-${te_file}.h config/atof-${atof}.c \
	$extra_files"
links="targ-cpu.c targ-cpu.h obj-format.h obj-format.c targ-env.h atof-targ.c \
	$extra_links"
d699 1
a699 1
		AC_DEFINE(MANY_SEGMENTS) ;;
d712 2
a716 2
AC_LINK_FILES($files, $links)

d718 1
a718 1
  yes)	AC_DEFINE(BFD_ASSEMBLER)
d725 1
a725 25
  OPCODES_DEP=../opcodes/libopcodes.a
  OPCODES_LIB='-L../opcodes -lopcodes'

  # We need to handle some special cases for shared libraries.
  case "${host}" in
  *-*-sunos*)
    # On SunOS, we must link against the name we are going to install,
    # not -lbfd, since SunOS does not support SONAME.
    if test "${shared_opcodes}" = "true"; then
      OPCODES_LIB='-L../opcodes -l`echo opcodes | sed '"'"'$(program_transform_name)'"'"'`'
    fi
    ;;
  alpha*-*-osf*)
    # On Alpha OSF/1, the native linker searches all the -L
    # directories for any LIB.so files, and only then searches for any
    # LIB.a files.  That means that if there is an installed
    # libbfd.so, but this build is not done with --enable-shared, the
    # link will wind up being against the install libbfd.so rather
    # than the newly built libbfd.  To avoid this, we must explicitly
    # link against libbfd.a when --enable-shared is not used.
    if test "${shared_opcodes}" != "true"; then
      OPCODES_LIB='../opcodes/libopcodes.a'
    fi
    ;;
  esac
a727 2
AC_SUBST(OPCODES_DEP)
AC_SUBST(OPCODES_LIB)
d731 1
a731 2
  BFDDEP=../bfd/libbfd.a
  BFDLIB='-L../bfd -lbfd'
a732 23

  # We need to handle some special cases for shared libraries
  case "${host}" in
  *-*-sunos*)
    # On SunOS, we must link against the name we are going to install,
    # not -lbfd, since SunOS does not support SONAME.
    if test "${shared_bfd}" = "true"; then
      BFDLIB='-L../bfd -l`echo bfd | sed '"'"'$(program_transform_name)'"'"'`'
    fi
    ;;
  alpha*-*-osf*)
    # On Alpha OSF/1, the native linker searches all the -L
    # directories for any LIB.so files, and only then searches for any
    # LIB.a files.  That means that if there is an installed
    # libbfd.so, but this build is not done with --enable-shared, the
    # link will wind up being against the install libbfd.so rather
    # than the newly built libbfd.  To avoid this, we must explicitly
    # link against libbfd.a when --enable-shared is not used.
    if test "${shared_bfd}" != "true"; then
      BFDLIB='../bfd/libbfd.a'
    fi
    ;;
  esac
d735 1
a735 1
AC_SUBST(BFDDEP)
d737 2
d741 5
a745 5
AC_DEFINE_UNQUOTED(TARGET_ALIAS,	"${target_alias}")
AC_DEFINE_UNQUOTED(TARGET_CANONICAL,	"${target}")
AC_DEFINE_UNQUOTED(TARGET_CPU,		"${target_cpu}")
AC_DEFINE_UNQUOTED(TARGET_VENDOR,	"${target_vendor}")
AC_DEFINE_UNQUOTED(TARGET_OS,		"${target_os}")
d748 9
a756 1
AC_PROG_INSTALL
d767 1
a767 1
  AC_DEFINE(CROSS_COMPILE)
d812 1
d822 1
a822 51
HLDFLAGS=
HLDENV=
RPATH_ENVVAR=LD_LIBRARY_PATH
# If we have shared libraries, try to set rpath reasonably.
if test "${shared}" = "true"; then
  case "${host}" in
  *-*-hpux*)
    HLDFLAGS='-Wl,+s,+b,$(libdir)'
    RPATH_ENVVAR=SHLIB_PATH
    ;;
  *-*-irix5* | *-*-irix6*)
    HLDFLAGS='-Wl,-rpath,$(libdir)'
    ;;
  *-*-linux*aout*)
    ;;
  *-*-linux*)
    HLDFLAGS='-Wl,-rpath,$(libdir)'
    ;;
  *-*-solaris*)
    HLDFLAGS='-R $(libdir)'
    ;;
  *-*-sysv4*)
    HLDENV='if test -z "$${LD_RUN_PATH}"; then LD_RUN_PATH=$(libdir); else LD_RUN_PATH=$${LD_RUN_PATH}:$(libdir); fi; export LD_RUN_PATH;'
    ;;
  esac
fi

# On SunOS, if the linker supports the -rpath option, use it to
# prevent ../bfd and ../opcodes from being included in the run time
# search path.
case "${host}" in
  *-*-sunos*)
    echo 'main () { }' > conftest.c
    ${CC} -o conftest -Wl,-rpath= conftest.c >/dev/null 2>conftest.t
    if grep 'unrecognized' conftest.t >/dev/null 2>&1; then
      :
    elif grep 'No such file' conftest.t >/dev/null 2>&1; then
      :
    elif grep 'do not mix' conftest.t >/dev/null 2>&1; then
      :
    elif test "${shared}" = "true"; then
      HLDFLAGS='-Wl,-rpath=$(libdir)'
    else
      HLDFLAGS='-Wl,-rpath='
    fi
    rm -f conftest.t conftest.c conftest
    ;;
esac
AC_SUBST(HLDFLAGS)
AC_SUBST(HLDENV)
AC_SUBST(RPATH_ENVVAR)
d824 21
a844 2
dnl This must come last.
AC_OUTPUT(Makefile doc/Makefile .gdbinit:gdbinit.in)
@


1.9
log
@Change all mips ports to use mips-unknown-openbsd2.0 like gcc does.
This should allow for gdb to at least build on pmax, modulo potential platform
specific include files.    This impacts gas, ld, and other critical system
components.  Don't build this unless you are happy with your backups, as
always for a change of this nature.  It works for me on my machine, however.
@
text
@d133 1
@


1.8
log
@changes to binutils to support powerpc-openbsd
@
text
@d201 1
a201 2
      mips-arc-openbsd*)    fmt=elf targ=mips-lit endian=little ;;
      mips-dec-openbsd*)    fmt=elf targ=mips-lit endian=little ;;
@


1.7
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d243 1
a243 1
      ppc-*-elf* | ppc-*-eabi* | ppc-*-sysv4*)
@


1.6
log
@Merge the Cygnus 960904 sources
@
text
@d66 3
a68 1
    eval `echo $this_target | sed 's/^\(.*\)-\(.*\)-\(.*\)$/cpu=\1 vendor=\2 os=\3/'`
d226 2
a227 1
      mips-*-elf*)          fmt=elf 
d233 2
d283 1
a283 1
			    fmt=aout ;;
@


1.5
log
@Fixes to make MIPS arc port to use in tree binutils.
@
text
@d7 1
a7 1
AC_PREREQ(2.3)dnl We only need 2.0, but pre-2.3 loses on some AIX version.
d110 1
d113 2
a114 1
      alpha-*-linux*)       fmt=ecoff ;;
d117 1
a117 1
      arm-*-riscix*)	    fmt=aout targ=arm-lit ;;
d128 1
d157 1
d168 1
d182 1
a182 1
      m68k-*-coff | m68k-*-sysv*)
d205 1
d219 1
d257 7
d268 2
a269 1
      sh-*-coff)            fmt=coff ;;
d275 1
d282 1
a282 1
      sparc-*-elf | sparc-*-solaris*)
d285 3
a287 1
      sparc-*-openbsd*)      fmt=aout em=nbsd bfd_gas=yes ;;
d315 1
d333 1
a333 1
      alpha | vax | i386)
d551 3
a553 3
  yes)
    OPCODES_DEP=../opcodes/libopcodes.a
    OPCODES_LIB='-L../opcodes -lopcodes'
d555 5
a559 1
    # We need to handle some special cases if opcodes was built shared.
a560 4
      case "${host}" in
      *-*-sunos*)
      # On SunOS, we must link against the name we are going to install,
      # not -lbfd, since SunOS does not support SONAME.
a561 2
      ;;
      esac
d564 14
d583 4
a586 4
  yes)
    BFDDEP=../bfd/libbfd.a
    BFDLIB='-L../bfd -lbfd'
    ALL_OBJ_DEPS="$ALL_OBJ_DEPS ../bfd/bfd.h"
d588 5
a592 1
    # We need to handle some special cases if BFD was built shared.
d594 13
a606 7
      case "${host}" in
	*-*-sunos*)
	# On SunOS, we must link against the name we are going to install,
	# not -lbfd, since SunOS does not support SONAME.
	BFDLIB='-L../bfd -l`echo bfd | sed '"'"'$(program_transform_name)'"'"'`'
	;;
      esac
d609 2
d663 4
d675 1
d678 1
d689 1
d698 1
a698 1
  *-*-irix5*)
d706 1
a706 1
  *-*-sysv4* | *-*-solaris*)
d709 3
d737 1
@


1.4
log
@Resolve conflicts with 0609 Cygnus import
@
text
@d194 1
@


1.3
log
@As it is highly unlikely OpenBSD's object file format will divert from
NetBSD's, alias it instead of implementing a distinct but identical
configuration.
@
text
@d26 11
a47 38
# assign cpu type

# check for architecture variants
case ${target_cpu} in
  armeb)	cpu_type=arm endian=big ;;
  arm*)		cpu_type=arm endian=little ;;
  hppa*)	cpu_type=hppa ;;
changequote(,)dnl
  i[45]86)	cpu_type=i386 ;;
  m680[012346]0) cpu_type=m68k ;;
  m68008)	cpu_type=m68k ;;
  m683??)       cpu_type=m68k ;;
changequote([,])dnl
  m8*)		cpu_type=m88k ;;
  mips*el)	cpu_type=mips endian=little;;
  mips*)	cpu_type=mips endian=big ;;
  powerpcle*)	cpu_type=ppc endian=little ;;
  powerpc*)	cpu_type=ppc endian=big ;;
  rs6000*)	cpu_type=ppc ;;
  sparc64)	cpu_type=sparc obj_format=elf
		AC_DEFINE(sparcv9) ;;
  sparclite*)   cpu_type=sparc ;;
  *)		cpu_type=${target_cpu} ;;
esac

# do we need the opcodes library?
case ${cpu_type} in
  alpha | vax)
    ;;
  *)
    OPCODES_LIB="../opcodes/libopcodes.a"
    ;;
esac
AC_SUBST(OPCODES_LIB)

gas_target=${cpu_type}
this_target=${generic_target}

d70 2
d74 1
a74 1
      i[45]86)		cpu_type=i386 ;;
d85 2
a86 2
      sparc64)		cpu_type=sparc obj_format=elf want_sparcv9=true ;;
      sparclite*)	cpu_type=sparc ;;
d104 1
d147 1
a147 1
      i386-*-sysv4* | i386-*-solaris* | i386-*-elf)
d149 1
d160 1
a160 1
      i386-*-win32)         fmt=coff targ=i386coff em=pe ;;
d175 2
a178 1
      m68k-*-elf)           fmt=elf ;;
d180 2
d186 2
d189 1
a189 1
      m88k-motorola-sysv3*) fmt=coff targ=m88kcoff em=delta88 ;;
d222 2
a223 7
      ppc-*-pe)             fmt=coff em=pe 
			    case "$endian" in
			    big) targ=ppc-big ;;
			    *)   targ=ppc-lit ;;
			    esac
                            ;;
      ppc-*-winnt*)         fmt=coff em=pe 
d237 12
a254 1

d260 1
a260 1
      sparc-*-aout | sparc*-*-vxworks)
d265 1
a265 1
      sparc-*-elf | sparc*-*-solaris*)
d289 1
a289 1
			    AC_MSG_WARN(GAS support for ELF format is incomplete.)
d311 18
a328 1
    test -n "$want_sparcv9" && AC_DEFINE(sparcv9)
d331 6
a336 1
      m68k) extra_objects="$extra_objects m68k-parse.o" ;;
d529 21
d551 12
a562 2
  yes)	BFDLIB=../bfd/libbfd.a
	ALL_OBJ_DEPS="$ALL_OBJ_DEPS ../bfd/bfd.h"
d564 3
d568 1
d637 47
@


1.2
log
@Support OpenBSD configuration, by cloning NetBSD config entries.
@
text
@d164 1
a164 1
      i386-*-openbsd*)       fmt=aout em=obsd bfd_gas=yes;;
d205 1
a205 1
      m68k-*-openbsd*)       fmt=aout em=obsd bfd_gas=yes ;;
d269 1
a269 1
      ns32k-pc532-openbsd*) fmt=aout em=obsd532 ;;
d280 1
a280 1
      sparc-*-openbsd*)      fmt=aout em=obsd bfd_gas=yes ;;
@


1.1
log
@Initial revision
@
text
@d164 1
d205 1
d212 1
d269 1
d280 1
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import of binutils, gas, ld & gprof from Cygnus 960609 tree
@
text
@a25 11
AC_ARG_ENABLE(shared,
[  --enable-shared         build shared BFD library],
[case "${enableval}" in
  yes) shared=true shared_bfd=true shared_opcodes=true ;;
  no)  shared=false ;;
  *bfd*opcodes*) shared=true shared_bfd=true shared_opcodes=true ;;
  *opcodes*bfd*) shared=true shared_bfd=true shared_opcodes=true ;;
  *bfd*) shared=true shared_bfd=true ;;
  *opcodes*) shared=true shared_opcodes=true ;;
  *) shared=false ;;
esac])dnl
d37 38
a96 2
      armeb)		cpu_type=arm endian=big ;;
      arm*)		cpu_type=arm endian=little ;;
d99 1
a99 1
      i[456]86)		cpu_type=i386 ;;
d110 2
a111 2
      sparc64)		cpu_type=sparc want_sparc_v9=true ;;
      sparc*)		cpu_type=sparc ;;
a128 1
      a29k-*-coff)          fmt=coff targ=ebmon29k ;;
d170 1
a170 1
      i386-*-sysv4* | i386-*-solaris* | i386-*-elf | i386-*-freebsdelf*)
a171 1
      i386-*-sco*elf*)      fmt=elf targ=sco5 ;;
d182 1
a182 1
      i386-*-cygwin32)      fmt=coff targ=i386coff em=pe ;;
a196 2
      m68k-*-sysv4 | m68k-*-elf) # must be before -sysv*
			    fmt=elf ;;
d199 1
a200 2
      m68k-*-linux*aout*)   fmt=aout em=linux ;;
      m68k-*-linux*)	    fmt=elf em=linux ;;
a203 2
      m68k-apple-aux*)      fmt=coff targ=m68kcoff em=aux ;;
      m68k-*-psos*)         fmt=elf em=psos;;
d205 1
a205 1
      m88k-motorola-sysv3*) fmt=coff targ=m88kcoff em=delt88 ;;
d237 7
a243 2
      ppc-*-pe | ppc-*-cygwin32 | ppc-*-winnt*)
		            fmt=coff em=pe 
a256 12
      ppc-*-linux*)	    fmt=elf
			    case "$endian" in
			    big)  targ=ppc-big ;;
			    *)    AC_MSG_ERROR(Linux must be configured big endian) ;;
			    esac
			    ;;
      ppc-*-solaris*)	    fmt=elf
			    case "$endian" in
			    big)  AC_MSG_ERROR(Solaris must be configured little endian) ;;
			    *)    targ=ppc-sol ;;
			    esac
			    ;;
d263 1
d268 1
a268 1
      sparc-*-aout | sparc*-*-vxworks*)
d273 1
a273 1
      sparc-*-elf | sparc-*-solaris*)
d296 1
a296 1
			    AC_MSG_WARN(GAS support for ${generic_target} is incomplete.)
d318 1
a318 18
    # do we need the opcodes library?
    case ${cpu_type} in
      alpha | vax | i386)
	;;
      *)
	need_opcodes=yes
	if test "${shared_opcodes}" = "true"; then
	  # A shared libopcodes must be linked against libbfd.
	  need_bfd=yes
	fi
	;;
    esac

    test -n "$want_sparc_v9" && AC_DEFINE(SPARC_V9)

    case ${cpu}-${vendor}-${os} in
      sparc64-*-elf*) AC_DEFINE(SPARC_ARCH64) ;;
    esac
d321 1
a321 6
      m68k)
	case ${extra_objects} in
	*m68k-parse.o*) ;;
	*) extra_objects="$extra_objects m68k-parse.o" ;;
	esac
	;;
a513 21
# do we need the opcodes library?
case "${need_opcodes}" in
  yes)
    OPCODES_DEP=../opcodes/libopcodes.a
    OPCODES_LIB='-L../opcodes -lopcodes'

    # We need to handle some special cases if opcodes was built shared.
    if test "${shared_opcodes}" = "true"; then
      case "${host}" in
      *-*-sunos*)
      # On SunOS, we must link against the name we are going to install,
      # not -lbfd, since SunOS does not support SONAME.
      OPCODES_LIB='-L../opcodes -l`echo opcodes | sed '"'"'$(program_transform_name)'"'"'`'
      ;;
      esac
    fi
    ;;
esac
AC_SUBST(OPCODES_DEP)
AC_SUBST(OPCODES_LIB)

d515 2
a516 12
  yes)
    BFDDEP=../bfd/libbfd.a
    BFDLIB='-L../bfd -lbfd'
    ALL_OBJ_DEPS="$ALL_OBJ_DEPS ../bfd/bfd.h"

    # We need to handle some special cases if BFD was built shared.
    if test "${shared_bfd}" = "true"; then
      case "${host}" in
	*-*-sunos*)
	# On SunOS, we must link against the name we are going to install,
	# not -lbfd, since SunOS does not support SONAME.
	BFDLIB='-L../bfd -l`echo bfd | sed '"'"'$(program_transform_name)'"'"'`'
a517 3
      esac
    fi
    ;;
a518 1
AC_SUBST(BFDDEP)
a586 47

HLDFLAGS=
RPATH_ENVVAR=LD_LIBRARY_PATH
# If we have shared libraries, try to set rpath reasonably.
if test "${shared}" = "true"; then
  case "${host}" in
  *-*-hpux*)
    HLDFLAGS='-Wl,+s,+b,$(libdir)'
    RPATH_ENVVAR=SHLIB_PATH
    ;;
  *-*-irix5*)
    HLDFLAGS='-Wl,-rpath,$(libdir)'
    ;;
  *-*-linux*aout*)
    ;;
  *-*-linux*)
    HLDFLAGS='-Wl,-rpath,$(libdir)'
    ;;
  *-*-sysv4* | *-*-solaris*)
    HLDFLAGS='-R $(libdir)'
    ;;
  esac
fi

# On SunOS, if the linker supports the -rpath option, use it to
# prevent ../bfd and ../opcodes from being included in the run time
# search path.
case "${host}" in
  *-*-sunos*)
    echo 'main () { }' > conftest.c
    ${CC} -o conftest -Wl,-rpath= conftest.c >/dev/null 2>conftest.t
    if grep 'unrecognized' conftest.t >/dev/null 2>&1; then
      :
    elif grep 'No such file' conftest.t >/dev/null 2>&1; then
      :
    elif grep 'do not mix' conftest.t >/dev/null 2>&1; then
      :
    elif test "${shared}" = "true"; then
      HLDFLAGS='-Wl,-rpath=$(libdir)'
    else
      HLDFLAGS='-Wl,-rpath='
    fi
    rm -f conftest.t conftest.c conftest
    ;;
esac
AC_SUBST(HLDFLAGS)
AC_SUBST(RPATH_ENVVAR)
@


1.1.1.3
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@d7 1
a7 1
AC_PREREQ(2.5)dnl v2.5 needed for --bindir et al
a109 1
      alpha-*-*vms*)	    fmt=evax ;;
d112 1
a112 2
      alpha-*-linuxecoff*)  fmt=ecoff ;;
      alpha-*-linux*)       fmt=elf em=linux ;;
d115 1
a115 1
      arm-*-riscix*)	    fmt=aout targ=arm-lit em=riscix ;;
a125 1

a152 1
      i386-*-rtems*)        fmt=coff targ=i386coff ;;
a162 1
      i960-*-rtems*)        fmt=coff em=ic960 targ=ic960coff ;;
d176 1
a176 1
      m68k-*-coff | m68k-*-sysv* | m68k-*-rtems*)
a195 1
      mips-*-osf*)          fmt=ecoff targ=mips-lit endian=little ;;
a208 1
      mips-*-irix6*)	    fmt=elf targ=mips-big ;;
a245 7
      ppc-*-rtems*)
			    fmt=elf
			    case "$endian" in
			    big)  targ=ppc-big ;;
			    *)    targ=ppc-lit ;;
			    esac
			    ;;
d250 1
a250 2
      sh-*-elf*)	    fmt=elf ;;
      sh-*-coff*)           fmt=coff ;;
a254 1
      sparc-*-rtems*)       fmt=aout ;;
d261 1
a261 1
      sparc-*-elf | sparc-*-sysv4* | sparc-*-solaris*)
a264 2
      v850-*-*)		    fmt=elf bfd_gas=yes ;;

a290 1
      alpha-*)	bfd_gas=yes ;;
d308 1
a308 1
      vax | i386)
d526 3
a528 3
yes)
  OPCODES_DEP=../opcodes/libopcodes.a
  OPCODES_LIB='-L../opcodes -lopcodes'
d530 1
a530 5
  # We need to handle some special cases for shared libraries.
  case "${host}" in
  *-*-sunos*)
    # On SunOS, we must link against the name we are going to install,
    # not -lbfd, since SunOS does not support SONAME.
d532 4
d537 2
a540 14
  alpha*-*-osf*)
    # On Alpha OSF/1, the native linker searches all the -L
    # directories for any LIB.so files, and only then searches for any
    # LIB.a files.  That means that if there is an installed
    # libbfd.so, but this build is not done with --enable-shared, the
    # link will wind up being against the install libbfd.so rather
    # than the newly built libbfd.  To avoid this, we must explicitly
    # link against libbfd.a when --enable-shared is not used.
    if test "${shared_opcodes}" != "true"; then
      OPCODES_LIB='../opcodes/libopcodes.a'
    fi
    ;;
  esac
  ;;
d546 4
a549 4
yes)
  BFDDEP=../bfd/libbfd.a
  BFDLIB='-L../bfd -lbfd'
  ALL_OBJ_DEPS="$ALL_OBJ_DEPS ../bfd/bfd.h"
d551 1
a551 5
  # We need to handle some special cases for shared libraries
  case "${host}" in
  *-*-sunos*)
    # On SunOS, we must link against the name we are going to install,
    # not -lbfd, since SunOS does not support SONAME.
d553 7
a559 1
      BFDLIB='-L../bfd -l`echo bfd | sed '"'"'$(program_transform_name)'"'"'`'
a561 14
  alpha*-*-osf*)
    # On Alpha OSF/1, the native linker searches all the -L
    # directories for any LIB.so files, and only then searches for any
    # LIB.a files.  That means that if there is an installed
    # libbfd.so, but this build is not done with --enable-shared, the
    # link will wind up being against the install libbfd.so rather
    # than the newly built libbfd.  To avoid this, we must explicitly
    # link against libbfd.a when --enable-shared is not used.
    if test "${shared_bfd}" != "true"; then
      BFDLIB='../bfd/libbfd.a'
    fi
    ;;
  esac
  ;;
a613 4
#else
#ifdef HAVE_STRINGS_H
#include <strings.h>
#endif
a621 1
GAS_CHECK_DECL_NEEDED(strstr, f, char *(*f)(), $gas_test_headers)
a623 1
GAS_CHECK_DECL_NEEDED(sbrk, f, char *(*f)(), $gas_test_headers)
a633 1
HLDENV=
d642 1
a642 1
  *-*-irix5* | *-*-irix6*)
d650 1
a650 1
  *-*-solaris*)
a652 3
  *-*-sysv4*)
    HLDENV='if test -z "$${LD_RUN_PATH}"; then LD_RUN_PATH=$(libdir); else LD_RUN_PATH=$${LD_RUN_PATH}:$(libdir); fi; export LD_RUN_PATH;'
    ;;
a677 1
AC_SUBST(HLDENV)
@


1.1.1.4
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@d66 1
a66 3
changequote(,)dnl
    eval `echo $this_target | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/cpu=\1 vendor=\2 os=\3/'`
changequote([,])dnl
d220 1
a220 2
      mips-*-elf* | mips-*-rtems*)
			    fmt=elf 
a225 2
      mn10200-*-*)	    fmt=elf bfd_gas=yes ;;
      mn10300-*-*)	    fmt=elf bfd_gas=yes ;;
d273 1
a273 1
			    fmt=aout em=sparcaout ;;
@


1.1.1.5
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@a36 7
AC_ARG_ENABLE(commonbfdlib,
[  --enable-commonbfdlib   build shared BFD/opcodes/libiberty library],
[case "${enableval}" in
  yes) commonbfdlib=true ;;
  no)  commonbfdlib=false ;;
  *)   AC_MSG_ERROR([bad value ${enableval} for BFD commonbfdlib option]) ;;
esac])dnl
d51 1
a51 1
    result=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $t 2>/dev/null`
d82 1
a82 1
      mips*el)		cpu_type=mips endian=little ;;
a113 1
      alpha-*-openbsd*)     fmt=ecoff ;;
a129 1
      d10v-*-*)		    fmt=elf bfd_gas=yes ;;
a133 1
      hppa-*-rtems*)        fmt=elf em=hppa ;;
a141 1
      i386-sequent-bsd*)    fmt=aout em=dynix bfd_gas=yes ;;
a144 1
      i386-*-openbsd*)      fmt=aout em=nbsd bfd_gas=yes;;
a175 2
      m32r-*-*)		    fmt=elf bfd_gas=yes ;;

d181 2
a182 3
      m68k-*-sysv4*) # must be before -sysv*
			    fmt=elf em=svr4 ;;
      m68k-*-elf*)	    fmt=elf ;;
a190 1
      m68k-*-openbsd*)      fmt=aout em=nbsd bfd_gas=yes ;;
a198 1
      mips-dec-openbsd*)    fmt=elf targ=mips-lit endian=little ;;
d211 6
a219 1
      mips-*-lnews*)        fmt=ecoff targ=mips-lit em=lnews ;;
d222 1
a222 1
      mips-*-elf* | mips-*-rtems* | mips-*-linux* | mips-*-gnu* | mips-*-openbsd*)
d239 1
a239 2
      ppc-*-beos*)          fmt=coff ;;
      ppc-*-*bsd* | ppc-*-elf* | ppc-*-eabi* | ppc-*-sysv4*)
a273 1
      ns32k-pc532-openbsd*) fmt=aout em=nbsd532 ;;
a279 2
      sparc-*-linux*aout*)  fmt=aout em=linux ;;
      sparc-*-linux*)	    fmt=elf em=linux ;;
d285 2
a286 1
      sparc-*-openbsd*)     fmt=aout em=nbsd bfd_gas=yes ;;
a349 9
      m32r)
	case ${extra_objects} in
	*cgen.o*) ;;
	*) extra_objects="$extra_objects cgen.o"
	   AC_DEFINE(USING_CGEN)
	   ;;
	esac
	;;

a355 20

      mips)
	echo ${extra_objects} | grep -s "itbl-parse.o" 
	if test $? -ne 0 ; then
	  extra_objects="$extra_objects itbl-parse.o"
	fi

	echo ${extra_objects} | grep -s "itbl-lex.o" 
	if test $? -ne 0 ; then
	  extra_objects="$extra_objects itbl-lex.o"
	fi

	echo ${extra_objects} | grep -s "itbl-ops.o" 
	if test $? -ne 0 ; then
	  extra_objects="$extra_objects itbl-ops.o"
	fi
	;;

      *)
	;;
a378 5
      mips-*-linux*-*)	case "$endian" in
			big)	emulation="mipsbelf mipslelf mipself mipsbecoff mipslecoff mipsecoff" ;;
			*)	emulation="mipslelf mipsbelf mipself mipslecoff mipsbecoff mipsecoff" ;;
			esac ;;
      mips-*-lnews*-ecoff) ;;
a385 4
      # Uncommenting the next line will turn on support for i386 COFF
      # in any i386 ELF configuration.  This probably doesn't work
      # correctly.
      # i386-*-*-elf)	emulation="i386coff i386elf" ;;
a479 4
    i386coff)
	fmt=coff  file=i386coff ;;
    i386elf)
	fmt=elf   file=i386elf ;;
d515 7
a537 1
AC_SUBST(te_file)
d541 2
d578 2
a608 6

  if test "${commonbfdlib}" = "true"; then
    # when a shared libbfd is built with --enable-commonbfdlib,
    # all of libopcodes is available in libbfd.so
    OPCODES_LIB=
  fi
a610 1

a612 3
AC_SUBST(OPCODES_DEP)
AC_SUBST(OPCODES_LIB)

d740 1
a740 19

dnl We used to make symlinks to files in the source directory, but now
dnl we just use the right name for .c files, and create .h files in
dnl the build directory which include the right .h file.  Make sure
dnl the old symlinks don't exist, so that a reconfigure in an existing
dnl directory behaves reasonably.

AC_OUTPUT(Makefile doc/Makefile .gdbinit:gdbinit.in,
[rm -f targ-cpu.c targ-cpu.h obj-format.h obj-format.c targ-env.h atof-targ.c itbl-cpu.h
 echo '#include "tc-'"${target_cpu_type}"'.h"' > targ-cpu.h
 echo '#include "obj-'"${obj_format}"'.h"' > obj-format.h
 echo '#include "te-'"${te_file}"'.h"' > targ-env.h
 echo '#include "itbl-'"${target_cpu_type}"'.h"' > itbl-cpu.h
 case ${target_cpu_type} in
 m32r) echo '#include "opcodes/'"${target_cpu_type}"'-opc.h"' > cgen-opc.h ;;
 esac],
[target_cpu_type=${target_cpu_type}
 obj_format=${obj_format}
 te_file=${te_file}])
@


1.1.1.6
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d7 3
a9 10
dnl v2.5 needed for --bindir et al
AC_PREREQ(2.13)
AC_INIT(as.h)

AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(gas, 2.10)

AM_PROG_LIBTOOL

d26 11
d45 2
a46 1
using_cgen=no
d48 4
a51 12
# Generate a header file
AM_CONFIG_HEADER(config.h:config.in)

# If we are on a DOS filesystem, we must use gdb.ini rather than
# .gdbinit.
GDBINIT=".gdbinit"
case "${host}" in
  *-*-msdos* | *-*-go32* | *-*-mingw32* | *-*-cygwin* | *-*-windows*)
    GDBINIT="gdb.ini"
    ;;
esac
AC_SUBST(GDBINIT)
a54 3
# Makefile target for installing gas in $(tooldir)/bin.
install_tooldir=install-exec-tooldir

a55 1
all_targets=no
d58 1
a58 5
    if test $t = "all"; then
      all_targets=yes
      continue
    fi
    result=`$ac_config_sub $t 2>/dev/null`
a77 2
    arch=
    endian=
a78 1
      alpha*)		cpu_type=alpha ;;
a80 5
      armb*)		cpu_type=arm endian=little ;;
      armv*l)		cpu_type=arm endian=little ;;
      armv*b)		cpu_type=arm endian=big ;;
      strongarm*)	cpu_type=arm endian=little ;;
      thumb*)		cpu_type=arm endian=little ;;
a84 1
changequote([,])dnl
d87 1
a87 1
      m5200)		cpu_type=m68k ;;
a90 2
      pjl*)		cpu_type=pj endian=little ;;
      pj*)		cpu_type=pj endian=big ;;
d94 2
a95 6
      sparclite*)	cpu_type=sparc arch=sparclite ;;
      sparclet*)	cpu_type=sparc arch=sparclet ;;
      sparc64*)		cpu_type=sparc arch=v9-64 ;;
      sparc86x*)	cpu_type=sparc arch=sparc86x  ;;
      sparc*)		cpu_type=sparc arch=sparclite ;; # ??? See tc-sparc.c.
      v850*)		cpu_type=v850 ;;
d105 1
d113 4
a116 4
      a29k-*-coff)          fmt=coff ;;
      a29k-amd-udi)         fmt=coff ;;
      a29k-amd-ebmon)       fmt=coff ;;
      a29k-nyu-sym1)        fmt=coff ;;
d119 7
a125 23
      alpha*-*-*vms*)	    fmt=evax ;;
      alpha*-*-netware*)    fmt=ecoff ;;
      alpha*-*-openbsd*)    fmt=ecoff ;;
      alpha*-*-osf*)        fmt=ecoff ;;
      alpha*-*-linuxecoff*) fmt=ecoff ;;
      alpha*-*-linux-gnu*)  fmt=elf em=linux ;;
      alpha*-*-freebsd*)    fmt=elf em=freebsd ;;
      alpha*-*-netbsd*)     fmt=elf em=nbsd ;;

      arc-*-elf*)           fmt=elf bfd_gas=yes ;;

      arm-*-aout)	                fmt=aout ;;
      arm-*-coff | thumb-*-coff)        fmt=coff ;;
      arm-*-elf | thumb-*-elf)          fmt=elf ;;
      arm*-*-conix*)			fmt=elf ;;
      arm-*-linux*aout*)	        fmt=aout em=linux ;;
      arm*-*-linux-gnu*)		fmt=elf  em=linux ;;
      arm-*-netbsd*)	                fmt=aout em=nbsd bfd_gas=yes ;;
      arm-*-oabi | thumb-*-oabi)        fmt=elf ;;
      arm-epoc-pe | thumb-epoc-pe)      fmt=coff em=epoc-pe ;;
      arm-*-wince)          fmt=coff em=wince-pe bfd_gas=yes;;
      arm-*-pe | thumb-*-pe)            fmt=coff em=pe ;;
      arm-*-riscix*)	                fmt=aout em=riscix ;;
d127 10
a136 1
      avr-*-*)		    fmt=elf bfd_gas=yes ;;
a138 4
      d30v-*-*)		    fmt=elf bfd_gas=yes ;;


      fr30-*-*)		    fmt=elf bfd_gas=yes ;;
a140 1
      hppa-*-linux-gnu*)    fmt=elf em=hppa ;;
a144 1
      hppa-*-mpeix*)        fmt=som em=hppa ;;
d150 2
a151 2
      i370-*-elf* | i370-*-linux*) fmt=elf ;;
      i386-ibm-aix*)        fmt=coff em=i386aix ;;
a152 2
      i386-*-beospe*)       fmt=coff em=pe bfd_gas=yes ;;
      i386-*-beoself* | i386-*-beos*) fmt=elf bfd_gas=yes ;;
d158 10
a167 19
      i386-*-linux*coff*)   fmt=coff em=linux ;;
      i386-*-linux-gnu*)    fmt=elf em=linux bfd_gas=yes ;;
      i386-*-lynxos*)       fmt=coff em=lynx ;;
      i386-*-sysv4* | i386-*-solaris* | i386-*-elf)
			    fmt=elf bfd_gas=yes ;;
changequote(,)dnl
      i386-*-freebsdaout* | i386-*-freebsd[12].* | i386-*-freebsd[12])
                            fmt=aout em=386bsd ;;
changequote([,])dnl
      i386-*-freebsd*)	    fmt=elf bfd_gas=yes ;;
      i386-*-coff | i386-*-sysv* | i386-*-sco3.2v5*coff | i386-*-isc*)
                          fmt=coff ;;
      i386-*-sco3.2v5*)      fmt=elf
			    if test ${this_target} = $target; then
				AC_DEFINE(SCO_ELF, 1,
				    [Define if defaulting to ELF on SCO 5.])
			    fi
			    ;;
      i386-*-sco3.2*)       fmt=coff ;;
d169 2
a170 5
      i386-*-msdosdjgpp* | i386-*-go32* | i386-go32-rtems*)
			    fmt=coff em=go32;;
      i386-*-rtemscoff*)    fmt=coff ;;
      i386-*-rtemself*)     fmt=elf ;;
      i386-*-rtems*)        fmt=elf ;;
d176 3
a178 6
      i386-*-pe)            fmt=coff em=pe ;;
      i386-*-cygwin*)       fmt=coff em=pe bfd_gas=yes ;;
      i386-*-interix*)	    fmt=coff em=interix bfd_gas=yes ;;
      i386-*-mingw32*)      fmt=coff em=pe bfd_gas=yes ;;
      i386-*-*nt*)          fmt=coff em=pe ;;
      i386-*-vxworks*)      fmt=aout ;;
d180 2
a181 4
      i960-*-coff)          fmt=coff em=ic960 ;;
      i960-*-rtemscoff*)    fmt=coff em=ic960 ;;
      i960-*-rtemself*)     fmt=elf ;;
      i960-*-rtems*)        fmt=coff em=ic960 ;;
d185 1
a185 1
      i960-*-vxworks5.*)    fmt=coff em=ic960 ;;
a186 1
      i960-*-elf*)	    fmt=elf ;;
d192 3
a194 3
      m68k-motorola-sysv*)  fmt=coff em=delta ;;
      m68k-bull-sysv3*)     fmt=coff em=dpx2 ;;
      m68k-apollo-*)        fmt=coff em=apollo ;;
d198 2
a199 5
      m68k-*-rtemscoff*)    fmt=coff ;;
      m68k-*-rtemself*)	    fmt=elf ;;
      m68k-*-rtems*)        fmt=elf ;;
      m68k-*-coff | m68k-*-sysv*)
			    fmt=coff ;;
d202 3
a204 3
      m68k-*-linux-gnu*)    fmt=elf em=linux ;;
      m68k-*-gnu*)	    fmt=elf ;;
      m68k-*-lynxos*)       fmt=coff em=lynx ;;
d207 1
a207 1
      m68k-apple-aux*)      fmt=coff em=aux ;;
d210 2
a211 5
      m88k-motorola-sysv3*) fmt=coff em=delt88 ;;
      m88k-*-coff*)         fmt=coff ;;

      mcore-*-elf)	    fmt=elf bfd_gas=yes ;;
      mcore-*-pe)	    fmt=coff em=pe bfd_gas=yes ;;
d214 4
a217 4
      mips-dec-netbsd*)	    fmt=elf endian=little ;;
      mips-dec-openbsd*)    fmt=elf endian=little ;;
      mips-dec-bsd*)        fmt=aout endian=little ;;
      mips-sony-bsd*)       fmt=ecoff ;;
d219 21
a239 16
      mips-*-ultrix*)       fmt=ecoff endian=little ;;
      mips-*-osf*)          fmt=ecoff endian=little ;;
      mips-*-ecoff*)        fmt=ecoff ;;
      mips-*-ecoff*)        fmt=ecoff ;;
      mips-*-pe*)           fmt=coff endian=little em=pe ;;
      mips-*-irix6*)	    fmt=elf ;;
      mips-*-irix5*)        fmt=elf ;;
      mips-*-irix*)         fmt=ecoff ;;
      mips-*-lnews*)        fmt=ecoff em=lnews ;;
      mips-*-riscos*)       fmt=ecoff ;;
      mips-*-sysv*)         fmt=ecoff ;;
      mips-*-elf* | mips-*-rtems* | mips-*-linux-gnu* | mips-*-gnu* | mips-*-openbsd*)
			    fmt=elf ;;
      mips-*-vxworks*)      fmt=elf
			    AC_DEFINE(MIPS_STABS_ELF, 1,
				[Use ELF stabs for MIPS, not ECOFF stabs])
d243 7
a249 3
      pj*)		    fmt=elf ;;
      ppc-*-pe | ppc-*-cygwin* | ppc-*-winnt*)
		            fmt=coff em=pe ;;
d253 7
a259 2
			    fmt=elf ;;
      ppc-*-linux-gnu*)	    fmt=elf
d261 2
a262 2
			    big)  ;;
			    *)    AC_MSG_ERROR(GNU/Linux must be configured big endian) ;;
d266 11
a276 7
			    if test ${this_target} = $target; then
				AC_DEFINE(TARGET_SOLARIS_COMMENT, 1,
				[Define if default target is PowerPC Solaris.])
			    fi
			    if test x${endian} = xbig; then
				AC_MSG_ERROR(Solaris must be configured little endian)
			    fi
a277 1
      ppc-*-rtems*)	    fmt=elf ;;
a280 1
      ppc-*-vxworks*)       fmt=elf ;;
a283 4
      sh-*-pe*)             fmt=coff em=pe bfd_gas=yes;;
      sh-*-rtemself*)       fmt=elf ;;
      sh-*-rtemscoff*)	    fmt=coff ;;
      sh-*-rtems*)          fmt=coff ;;
d289 1
a289 3
      sparc-*-rtemsaout*)   fmt=aout ;;
      sparc-*-rtemself*)    fmt=elf ;;
      sparc-*-rtems*)       fmt=elf ;;
d295 1
a295 1
      sparc-*-linux-gnu*)   fmt=elf em=linux ;;
d300 2
a301 13
      sparc-*-netbsd*)      fmt=aout em=nbsd ;;
      sparc-*-openbsd*)     fmt=aout em=nbsd ;;

      strongarm-*-coff)     fmt=coff ;;
      strongarm-*-elf)      fmt=elf ;;

      tic30-*-*aout*)	    fmt=aout bfd_gas=yes ;;
      tic30-*-*coff*)       fmt=coff bfd_gas=yes ;;
      tic80-*-*)	    fmt=coff ;;

      v850-*-*)		    fmt=elf bfd_gas=yes ;;
      v850e-*-*)	    fmt=elf bfd_gas=yes ;;
      v850ea-*-*)	    fmt=elf bfd_gas=yes ;;
a306 1

a327 13
    if test ${this_target} = $target ; then
      endian_def=
      if test x${endian} = xbig; then
	endian_def=1
      elif test x${endian} = xlittle; then
	endian_def=0
      fi
      if test x${endian_def} != x; then
	AC_DEFINE_UNQUOTED(TARGET_BYTES_BIG_ENDIAN, $endian_def,
			   [Define as 1 if big endian.])
      fi
    fi

d329 1
a329 1
      alpha*-*)	bfd_gas=yes ;;
a336 1
      strongarm-*)	bfd_gas=yes ;;
a339 4
    #enable bfd for coff and aout to allow testing if a bfd target is
    #the primary target, but not for coff or aout as the primary target
      i386-coff)	if test x${primary_bfd_gas} = xyes; then bfd_gas=yes; fi ;;
      i386-aout)	if test x${primary_bfd_gas} = xyes; then bfd_gas=yes; fi ;;
d345 1
a345 1
    # Do we need the opcodes library?
d347 1
a347 1
      vax | i386 | tic30)
a348 1

a350 6

	case "${enable_shared}" in
	yes) shared_opcodes=true ;;
	*opcodes*) shared_opcodes=true ;;
	*) shared_opcodes=false ;;
	esac
d358 6
a363 1
    # Any other special object files needed ?
d365 7
a371 2
      fr30 | m32r)
	using_cgen=yes
a397 5
      sparc)
	if test $this_target = $target ; then
	  AC_DEFINE_UNQUOTED(DEFAULT_ARCH, "${arch}", [Default architecture.])
	fi
	;;
a401 7
    if test $using_cgen = yes ; then
	case "x${extra_objects}" in
	*cgen.o*) ;;
	*) extra_objects="$extra_objects cgen.o" ;;
	esac
    fi

d407 1
d423 1
a423 1
      mips-*-linux-gnu*-*) case "$endian" in
d435 4
a439 7
      # Uncommenting the next line will turn on support for i386 AOUT
      # for the default linux configuration
      # i386-*-linux*-elf) emulation="i386elf i386aout" ;;
      #
      i386-*-aout)	emulation="i386aout" ;;
      i386-*-coff)	emulation="i386coff" ;;
      i386-*-elf)	emulation="i386elf" ;;
a445 19
# Turn on all targets if possible
if test ${all_targets} = "yes"; then
  case ${target_cpu_type} in
  i386)
    case ${obj_format} in
    aout)
      emulations="$emulations i386coff i386elf"
      ;;
    coff)
      emulations="$emulations i386aout i386elf"
    ;;
    elf)
      emulations="$emulations i386aout i386coff"
      ;;
    esac
  ;;
  esac
fi

a457 10
# Unfortunately the cpu in cpu-opc.h file isn't always $(TARGET_CPU).
cgen_cpu_prefix=""
if test $using_cgen = yes ; then
  case ${target_cpu} in
    *) cgen_cpu_prefix=${target_cpu} ;;
  esac
  AC_SUBST(cgen_cpu_prefix)
  AC_DEFINE(USING_CGEN, 1, [Using cgen code?])
fi

d470 8
d503 3
a505 3
      i386) AC_DEFINE(I386COFF, 1, [Using i386 COFF?]) ;;
      m68k) AC_DEFINE(M68KCOFF, 1, [Using m68k COFF?]) ;;
      m88k) AC_DEFINE(M88KCOFF, 1, [Using m88k COFF?]) ;;
a532 2
    i386aout)
	fmt=aout  file=i386aout ;;
d547 10
a556 10
      aout)	AC_DEFINE(OBJ_MAYBE_AOUT, 1,    [a.out support?])   ;;
      bout)	AC_DEFINE(OBJ_MAYBE_BOUT, 1,    [b.out support?])   ;;
      coff)	AC_DEFINE(OBJ_MAYBE_COFF, 1,    [COFF support?])    ;;
      ecoff)	AC_DEFINE(OBJ_MAYBE_ECOFF, 1,   [ECOFF support?])   ;;
      elf)	AC_DEFINE(OBJ_MAYBE_ELF, 1,     [ELF support?])     ;;
      generic)	AC_DEFINE(OBJ_MAYBE_GENERIC, 1, [generic support?]) ;;
      hp300)	AC_DEFINE(OBJ_MAYBE_HP300, 1,   [HP300 support?])   ;;
      ieee)	AC_DEFINE(OBJ_MAYBE_IEEE, 1,    [IEEE support?])    ;;
      som)	AC_DEFINE(OBJ_MAYBE_SOM, 1,     [SOM support?])     ;;
      vms)	AC_DEFINE(OBJ_MAYBE_VMS, 1,     [VMS support?])     ;;
d563 2
d566 1
a566 8
  # e-mips* has more than one emulation per file, e-i386* has just one at the
  # moment.  If only one emulation is specified, then don't define
  # USE_EMULATIONS or include any of the e-files as they will only be bloat.
  case "${obj_format}${emfiles}" in
    multi* | *mips*)
      extra_objects="$extra_objects $emfiles"
      AC_DEFINE(USE_EMULATIONS, 1, [Use emulation support?]) ;;
  esac
d569 2
a570 3
AC_DEFINE_UNQUOTED(EMULATIONS, $EMULATIONS, [Supported emulations.])
AC_DEFINE_UNQUOTED(DEFAULT_EMULATION, "$DEFAULT_EMULATION",
		   [Default emulation.])
d575 1
a575 1
		AC_DEFINE(MANY_SEGMENTS, 1, [old COFF support?]) ;;
a588 1
AC_SUBST(install_tooldir)
d593 1
a593 1
  yes)	AC_DEFINE(BFD_ASSEMBLER, 1, [Use BFD interface?])
d600 25
a624 1
  OPCODES_LIB=../opcodes/libopcodes.la
d630 2
a631 1
  BFDLIB=../bfd/libbfd.la
d633 29
d665 1
d667 1
d672 5
a676 5
AC_DEFINE_UNQUOTED(TARGET_ALIAS,	"${target_alias}", [Target alias.])
AC_DEFINE_UNQUOTED(TARGET_CANONICAL,	"${target}",       [Canonical target.])
AC_DEFINE_UNQUOTED(TARGET_CPU,		"${target_cpu}",   [Target CPU.])
AC_DEFINE_UNQUOTED(TARGET_VENDOR,	"${target_vendor}", [Target vendor.])
AC_DEFINE_UNQUOTED(TARGET_OS,		"${target_os}",    [Target OS.])
d679 1
a679 9

AC_PROG_YACC
AM_PROG_LEX

ALL_LINGUAS=
CY_GNU_GETTEXT

AM_MAINTAINER_MODE
AC_EXEEXT
d690 1
a690 1
  AC_DEFINE(CROSS_COMPILE, 1, [Compiling cross-assembler?])
a734 1
GAS_CHECK_DECL_NEEDED(environ, f, char **f, $gas_test_headers)
d744 52
d804 1
a804 1
AC_OUTPUT(Makefile doc/Makefile ${GDBINIT}:gdbinit.in po/Makefile.in:po/Make-in,
d810 3
a812 5
 if test "x$cgen_cpu_prefix" != x ; then
   echo '#include "opcodes/'"${cgen_cpu_prefix}"'-desc.h"' > cgen-desc.h
 fi

 sed -e '/POTFILES =/r po/POTFILES' po/Makefile.in > po/Makefile],
a813 1
 cgen_cpu_prefix=${cgen_cpu_prefix}
@


1.1.1.7
log
@Long delayed import of binutils-2.10.1. Turns out art@@ needs some alpha
bug-fixes...
@
text
@d13 1
a13 1
AM_INIT_AUTOMAKE(gas, 2.10.1)
d354 1
a354 9
      sparc-*-netbsd*)      em=nbsd bfd_gas=yes
                            case ${cpu} in
                                sparc) case ${os} in
                                           *elf*) fmt=elf ;;
                                           *)     fmt=aout ;;
                                       esac ;;
                                sparc64) fmt=elf ;;
                            esac
                            ;;
@


1.1.1.8
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@a11 1
AC_ISC_POSIX
d13 1
a13 4
changequote(,)dnl
BFD_VERSION=`sed -n -e 's/^.._INIT_AUTOMAKE.*,[ 	]*\([^ 	]*\)[ 	]*).*/\1/p' < ${srcdir}/../bfd/configure.in`
changequote([,])dnl
AM_INIT_AUTOMAKE(gas, ${BFD_VERSION})
a42 21
build_warnings="-W -Wall"
AC_ARG_ENABLE(build-warnings,
[  --enable-build-warnings Enable build-time compiler warnings if gcc is used],
[case "${enableval}" in
  yes)	;;
  no)	build_warnings="-w";;
  ,*)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
        build_warnings="${build_warnings} ${t}";;
  *,)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
        build_warnings="${t} ${build_warnings}";;
  *)    build_warnings=`echo "${enableval}" | sed -e "s/,/ /g"`;;
esac
if test x"$silent" != x"yes" && test x"$build_warnings" != x""; then
  echo "Setting warning flags = $build_warnings" 6>&1
fi])dnl
WARN_CFLAGS=""
if test "x${build_warnings}" != x -a "x$GCC" = xyes ; then
    WARN_CFLAGS="${build_warnings}"
fi
AC_SUBST(WARN_CFLAGS)

a97 1
      xscale*)		cpu_type=arm endian=little ;;
d102 1
a102 4
      i[3456]86)	cpu_type=i386 arch=i386;;
      x86_64)		cpu_type=i386 arch=x86_64;;
      ia64)		cpu_type=ia64 ;;
      m6811|m6812|m68hc12) cpu_type=m68hc11 ;;
a141 1
      a29k-*-rtems*)        fmt=coff ;;
d150 1
a156 1
      arm-*-rtems | thumb-*-rtems)      fmt=elf ;;
d160 2
a161 3
      arm*-*-linux-gnu* | arm*-*-uclinux*)	
					fmt=elf  em=linux ;;
      arm-*-netbsd*)	                fmt=aout em=nbsd ;;
d164 1
a164 1
      arm-*-wince)			fmt=coff em=wince-pe ;;
a166 1
      arm-*-vxworks)	                fmt=coff ;;
a169 2
      cris-*-*)		    fmt=multi bfd_gas=yes ;;

a175 6
      hppa-*-linux-gnu*)    case ${cpu} in
				hppa*64*)
					fmt=elf em=hppalinux64;;
				hppa*)
					fmt=elf em=linux;;
			    esac ;;
d177 1
a180 6
      hppa-*-hpux11*)	    case ${cpu} in
				hppa*64*)
					fmt=elf em=hppa64 ;;
				hppa*)
					fmt=som em=hppa ;;
			    esac ;;
a185 1
      h8300-*-rtems*)       fmt=coff ;;
a186 2
      h8500-*-rtems*)       fmt=coff ;;
      h8500-*-coff)         fmt=coff ;;
d197 1
a197 1
      i386-*-linux*aout* | i386-*-linux*oldld)   fmt=aout em=linux ;;
a199 1
      x86_64-*-linux-gnu*)  fmt=elf em=linux bfd_gas=yes ;;
d201 2
a203 2
      i386-*-sysv[45]* | i386-*-solaris* | i386-*-elf)
			    fmt=elf bfd_gas=yes ;;
d207 1
d219 2
a220 3
			    fmt=coff em=go32 bfd_gas=yes
			    AC_DEFINE(STRICTCOFF, 1, [Using strict COFF?])
			    ;;
d222 1
a222 1
      i386-*-rtems*)        fmt=coff ;;
d228 1
a228 1
      i386-*-pe)            fmt=coff em=pe bfd_gas=yes ;;
d232 1
a232 1
      i386-*-*nt*)          fmt=coff em=pe bfd_gas=yes ;;
a233 4
      i386-*-chaos)         fmt=elf ;;
      i860-stardent-sysv4* | i860-stardent-elf*)
			    fmt=elf bfd_gas=yes endian=little
			    AC_MSG_WARN(GAS support for ${generic_target} is preliminary and a work in progress) ;;
d236 2
a245 4
      ia64-*-elf*)	    fmt=elf ;;
      ia64-*-linux-gnu*)    fmt=elf em=linux ;;
      ia64-*-hpux*)	    fmt=elf em=hpux ;;

a247 2
      m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)fmt=elf bfd_gas=yes ;;

d256 4
a259 1
      m68k-*-coff | m68k-*-sysv* | m68k-*-rtems*)
d286 1
a292 7
      mips-*-linux-gnu*)
			    fmt=elf em=tmips
			    AC_DEFINE(MIPS_STABS_ELF, 1,
				[Use ELF stabs for MIPS, not ECOFF stabs])
			    ;;
      mips-*-sysv4*MP* | mips-*-gnu*)
			    fmt=elf em=tmips ;;
d294 1
a294 1
      mips-*-elf* | mips-*-rtems* | mips-*-openbsd*)
a329 1
      sh-*-linux*)	    fmt=elf em=linux ;;
d334 2
a335 1
      sh-*-rtems*)	    fmt=coff ;;
a366 2
      xscale-*-coff)     fmt=coff ;;
      xscale-*-elf)      fmt=elf ;;
a369 2
      tic54x-*-* | c54x*-*-*)
			    fmt=coff bfd_gas=yes need_libm=yes;;
a387 1
      *-*-freebsd*)	    fmt=elf em=freebsd bfd_gas=yes ;;
a419 1
      ia64*-*)	bfd_gas=yes ;;
a424 1
      xscale-*)	bfd_gas=yes ;;
a486 5
      i386)
	if test $this_target = $target ; then
	  AC_DEFINE_UNQUOTED(DEFAULT_ARCH, "${arch}", [Default architecture.])
	fi
	;;
a535 3
      mips-*-sysv4*MP*-*) emulation="mipsbelf mipslelf mipself mipsbecoff mipslecoff mipsecoff" ;;
      # i386-pc-pe-coff != i386-pc-coff.
      i386-*-pe-coff)	;;
a542 4

      # Always all formats.  The first stated emulation becomes the default.
      cris-*-*aout*)	emulation="crisaout criself" ;;
      cris-*-*)		emulation="criself crisaout" ;;
d653 1
a653 1
    mipsbelf | mipslelf | mipself)
d655 1
a655 1
    mipsbecoff | mipslecoff | mipsecoff)
d657 6
a662 6
    *coff)
	fmt=coff  file=$em ;;
    *aout)
	fmt=aout file=$em ;;
    *elf)
	fmt=elf file=$em ;;
a788 8

# do we need the math library?
case "${need_libm}" in
yes) 
  AC_CHECK_LIBM
  AC_SUBST(LIBM)
  ;;
esac
@


1.1.1.9
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@d47 1
a47 1
build_warnings="-W -Wall -Wstrict-prototypes -Wmissing-prototypes"
d75 1
a75 1
  *-*-msdos* | *-*-go32* | *-*-mingw32* | *-*-windows*)
d118 8
a125 2
      arm*b|xscale*b|strongarm*b) cpu_type=arm endian=big ;;
      arm*|xscale*|strongarm*)    cpu_type=arm endian=little ;;
a130 2
      ip2k)             cpu_type=ip2k endian=big ;; 
      iq2000)           cpu_type=iq2000 endian=big ;; 
a139 1
      or32*)		cpu_type=or32 endian=big ;;
d142 1
a142 1
      powerpc*le*)	cpu_type=ppc endian=little ;;
a144 8
      s390x*)		cpu_type=s390 arch=s390x ;;
      s390*)		cpu_type=s390 arch=s390 ;;
      sh5*)		cpu_type=sh64 endian=big ;;
      sh5le*)		cpu_type=sh64 endian=little ;;
      sh64*)            cpu_type=sh64 endian=big ;;
      sh64le*)		cpu_type=sh64 endian=little ;;
      sh*le)		cpu_type=sh endian=little ;;
      sh*)		cpu_type=sh endian=big ;;
a150 1
      xtensa*)		cpu_type=xtensa arch=xtensa ;;
d167 21
a187 22
      a29k-*-coff)			fmt=coff ;;
      a29k-amd-udi)			fmt=coff ;;
      a29k-amd-ebmon)			fmt=coff ;;
      a29k-nyu-sym1)			fmt=coff ;;
      a29k-*-rtems*)			fmt=coff ;;
      a29k-*-vxworks*)			fmt=coff ;;

      alpha*-*-*vms*)			fmt=evax ;;
      alpha*-*-netware*)		fmt=ecoff ;;
      alpha*-*-osf*)			fmt=ecoff ;;
      alpha*-*-linuxecoff*)		fmt=ecoff ;;
      alpha*-*-linux-gnu*)		fmt=elf em=linux ;;
      alpha*-*-netbsd*)			fmt=elf em=nbsd ;;
      alpha*-*-openbsd*)		fmt=elf em=obsd ;;

      arc-*-elf*)			fmt=elf ;;

      arm-*-aout)			fmt=aout ;;
      arm-*-coff | thumb-*-coff)	fmt=coff ;;
      arm-*-rtems | thumb-*-rtems)	fmt=elf ;;
      arm-*-elf | thumb-*-elf)		fmt=elf ;;
      arm-*-kaos*)			fmt=elf ;;
d189 6
a194 8
      arm-*-linux*aout*)		fmt=aout em=linux ;;
      arm*-*-linux-gnu*)		fmt=elf  em=linux ;;
      arm*-*-uclinux*)			fmt=elf  em=linux ;;
      arm-*-netbsdelf*)                 fmt=elf  em=nbsd ;;
      arm-*-*n*bsd*)			fmt=aout em=nbsd ;;
      arm-**-nto*)			fmt=elf ;;
      arm-*-oabi | thumb-*-oabi)	fmt=elf ;;
      arm-epoc-pe | thumb-epoc-pe)	fmt=coff em=epoc-pe ;;
d196 54
a249 62
      arm-*-pe | thumb-*-pe)		fmt=coff em=pe ;;
      arm-*-riscix*)			fmt=aout em=riscix ;;
      arm-*-vxworks)			fmt=coff ;;

      avr-*-*)				fmt=elf ;;

      cris-*-*)				fmt=multi bfd_gas=yes ;;

      d10v-*-*)				fmt=elf ;;
      d30v-*-*)				fmt=elf ;;
      dlx-*-*)				fmt=elf ;;

      fr30-*-*)				fmt=elf ;;
      frv-*-*)				fmt=elf ;;

      hppa-*-linux*)	case ${cpu} in
			    hppa*64*)	fmt=elf em=hppalinux64;;
			    hppa*)	fmt=elf em=linux;;
			esac ;;
      hppa-*-*elf*)			fmt=elf em=hppa ;;
      hppa-*-lites*)			fmt=elf em=hppa ;;
      hppa-*-netbsd*)			fmt=elf em=nbsd ;;
      hppa-*-openbsd*)			fmt=elf em=hppa ;;
      hppa-*-osf*)			fmt=som em=hppa ;;
      hppa-*-rtems*)			fmt=elf em=hppa ;;
      hppa-*-hpux11*)	case ${cpu} in
			    hppa*64*)	fmt=elf em=hppa64 ;;
			    hppa*)	fmt=som em=hppa ;;
			esac ;;
      hppa-*-hpux*)			fmt=som em=hppa ;;
      hppa-*-mpeix*)			fmt=som em=hppa ;;
      hppa-*-bsd*)			fmt=som em=hppa ;;
      hppa-*-hiux*)			fmt=som em=hppa ;;

      h8300-*-rtems*)			fmt=coff ;;
      h8300-*-coff)			fmt=coff ;;
      h8300-*-elf)			fmt=elf ;;
      h8500-*-rtems*)			fmt=coff ;;
      h8500-*-coff)			fmt=coff ;;

      i370-*-elf* | i370-*-linux*)	fmt=elf ;;
      i386-ibm-aix*)			fmt=coff em=i386aix ;;
      i386-sequent-bsd*)		fmt=aout em=dynix ;;
      i386-*-beospe*)			fmt=coff em=pe ;;
      i386-*-beos*)			fmt=elf ;;
      i386-*-coff)			fmt=coff ;;
      i386-*-elf)			fmt=elf ;;
      i386-*-kaos*)			fmt=elf ;;
      i386-*-bsd*)			fmt=aout em=386bsd ;;
      i386-*-netbsd0.8)			fmt=aout em=386bsd ;;
      i386-*-netbsdpe*)			fmt=coff em=pe ;;
      i386-*-netbsdelf*)		fmt=elf em=nbsd ;;
      i386-*-*n*bsd*)	case ${cpu} in
			    x86_64)	fmt=elf em=nbsd ;;
			    *)		fmt=aout em=nbsd ;;
			esac ;;
      i386-*-linux*aout*)		fmt=aout em=linux ;;
      i386-*-linux*oldld)		fmt=aout em=linux ;;
      i386-*-linux*coff*)		fmt=coff em=linux ;;
      i386-*-linux-gnu*)		fmt=elf em=linux ;;
      x86_64-*-linux-gnu*)		fmt=elf em=linux ;;
      i386-*-lynxos*)			fmt=coff em=lynx ;;
d251 4
a254 5
      i386-*-sysv[45]*)			fmt=elf ;;
      i386-*-solaris*)			fmt=elf ;;
      i386-*-freebsdaout*)		fmt=aout em=386bsd ;;
      i386-*-freebsd[12].*)		fmt=aout em=386bsd ;;
      i386-*-freebsd[12])		fmt=aout em=386bsd ;;
d256 68
a323 76
      i386-*-sysv*)			fmt=coff ;;
      i386-*-sco3.2v5*coff)		fmt=coff ;;
      i386-*-isc*)			fmt=coff ;;
      i386-*-sco3.2v5*)			fmt=elf
	  if test ${this_target} = $target; then
	    AC_DEFINE(SCO_ELF, 1, [Define if defaulting to ELF on SCO 5.])
	  fi ;;
      i386-*-sco3.2*)			fmt=coff ;;
      i386-*-vsta)			fmt=aout ;;
      i386-*-msdosdjgpp* \
      | i386-*-go32* \
      | i386-go32-rtems*)		fmt=coff em=go32
	    AC_DEFINE(STRICTCOFF, 1, [Using strict COFF?]) ;;
      i386-*-rtemself*)			fmt=elf ;;
      i386-*-rtemscoff*)		fmt=coff ;;
      i386-*-rtems*)			fmt=elf ;;
      i386-*-gnu*)			fmt=elf ;;
      i386-*-mach*)			fmt=aout em=mach ;;
      i386-*-msdos*)			fmt=aout ;;
      i386-*-moss*)			fmt=elf ;;
      i386-*-pe)			fmt=coff em=pe ;;
      i386-*-cygwin*)			fmt=coff em=pe ;;
      i386-*-interix*)			fmt=coff em=interix ;;
      i386-*-mingw32*)			fmt=coff em=pe ;;
      i386-*-nto-qnx*)			fmt=elf ;;
      i386-*-*nt*)			fmt=coff em=pe ;;
      i386-*-vxworks*)			fmt=aout ;;
      i386-*-chaos)			fmt=elf ;;

      i860-*-*)				fmt=elf endian=little
		AC_MSG_WARN(GAS support for ${generic_target} is preliminary and a work in progress) ;;
      i960-*-bout)			fmt=bout ;;
      i960-*-coff)			fmt=coff em=ic960 ;;
      i960-*-rtems*)			fmt=coff em=ic960 ;;
      i960-*-nindy*)			fmt=bout ;;
      i960-*-vxworks5.0)		fmt=bout ;;
      i960-*-vxworks5.*)		fmt=coff em=ic960 ;;
      i960-*-vxworks*)			fmt=bout ;;
      i960-*-elf*)			fmt=elf ;;

      ia64-*-elf*)			fmt=elf ;;
      ia64-*-aix*)			fmt=elf em=ia64aix ;;
      ia64-*-linux-gnu*)		fmt=elf em=linux ;;
      ia64-*-hpux*)			fmt=elf em=hpux ;;
      ia64-*-netbsd*)			fmt=elf em=nbsd ;;

      ip2k-*-*)				fmt=elf ;;

      iq2000-*-elf)         		fmt=elf bfd_gas=yes ;;

      m32r-*-*)				fmt=elf ;;

      m68hc11-*-* | m6811-*-*)		fmt=elf ;;
      m68hc12-*-* | m6812-*-*)		fmt=elf ;;

      m68k-*-vxworks*)			fmt=aout em=sun3 ;;
      m68k-ericsson-ose)		fmt=aout em=sun3 ;;
      m68k-*-sunos*)			fmt=aout em=sun3 ;;
      m68k-motorola-sysv*)		fmt=coff em=delta ;;
      m68k-bull-sysv3*)			fmt=coff em=dpx2 ;;
      m68k-apollo-*)			fmt=coff em=apollo ;;
      m68k-*-elf*)			fmt=elf ;;
      m68k-*-sysv4*)			fmt=elf em=svr4 ;;
      m68k-*-sysv*)			fmt=coff ;;
      m68k-*-coff | m68k-*-rtemscoff*)	fmt=coff ;;
      m68k-*-rtems*)			fmt=elf ;;
      m68k-*-hpux*)			fmt=hp300 em=hp300 ;;
      m68k-*-linux*aout*)		fmt=aout em=linux ;;
      m68k-*-linux-gnu*)		fmt=elf em=linux ;;
      m68k-*-gnu*)			fmt=elf ;;
      m68k-*-lynxos*)			fmt=coff em=lynx ;;
      m68k-*-netbsdelf*)		fmt=elf em=nbsd ;;
      m68k-*-netbsd*)			fmt=aout em=nbsd bfd_gas=yes ;;
      m68k-*-openbsd*)			fmt=aout em=nbsd bfd_gas=yes ;;
      m68k-apple-aux*)			fmt=coff em=aux ;;
      m68k-*-psos*)			fmt=elf em=psos;;
d325 2
a326 2
      m88k-motorola-sysv3*)		fmt=coff em=delt88 ;;
      m88k-*-coff*)			fmt=coff ;;
d328 2
a329 2
      mcore-*-elf)			fmt=elf ;;
      mcore-*-pe)			fmt=coff em=pe bfd_gas=yes ;;
d332 133
a464 144
      mips-dec-openbsd*)		fmt=elf endian=little ;;
      mips-dec-bsd*)			fmt=aout endian=little ;;
      mips-sony-bsd*)			fmt=ecoff ;;
      mips-*-bsd*)
	    AC_MSG_ERROR(Unknown vendor for mips-bsd configuration.) ;;
      mips-*-ultrix*)			fmt=ecoff endian=little ;;
      mips-*-osf*)			fmt=ecoff endian=little ;;
      mips-*-ecoff*)			fmt=ecoff ;;
      mips-*-pe*)			fmt=coff endian=little em=pe ;;
      mips-*-irix6*)			fmt=elf em=irix ;;
      mips-*-irix5*)			fmt=elf em=irix ;;
      mips-*-irix*)			fmt=ecoff em=irix ;;
      mips-*-lnews*)			fmt=ecoff em=lnews ;;
      mips-*-riscos*)			fmt=ecoff ;;
      mips*-*-linux*)			fmt=elf em=tmips ;;
      mips-*-sysv4*MP* | mips-*-gnu*)	fmt=elf em=tmips ;;
      mips-*-sysv*)			fmt=ecoff ;;
      mips-*-elf* | mips-*-rtems*)	fmt=elf ;;
      mips-*-netbsd*)			fmt=elf ;;
      mips-*-openbsd*)			fmt=elf ;;
      mips-*-vxworks*)			fmt=elf ;;

      mmix-*-*)				fmt=elf ;;
      mn10200-*-*)			fmt=elf ;;
      mn10300-*-*)			fmt=elf ;;
      msp430-*-*)			fmt=elf ;;
      openrisc-*-*)			fmt=elf ;;
      or32-*-rtems*)			fmt=coff ;;
      or32-*-coff)			fmt=coff ;;
      or32-*-elf)			fmt=elf ;;
      pj*)				fmt=elf ;;

      ppc-*-pe | ppc-*-cygwin*)		fmt=coff em=pe ;;
      ppc-*-winnt*)			fmt=coff em=pe ;;
      ppc-*-aix5*)			fmt=coff em=aix5 ;;
      ppc-*-aix*)			fmt=coff ;;
      ppc-*-beos*)			fmt=coff ;;
      ppc-*-*n*bsd* | ppc-*-elf*)	fmt=elf ;;
      ppc-*-eabi* | ppc-*-sysv4*)	fmt=elf ;;
      ppc-*-linux-gnu*)			fmt=elf
	    case "$endian" in
		big)  ;;
		*)    AC_MSG_ERROR(GNU/Linux must be configured big endian) ;;
	    esac ;;
      ppc-*-solaris*)			fmt=elf
	    if test ${this_target} = $target; then
		AC_DEFINE(TARGET_SOLARIS_COMMENT, 1,
			  [Define if default target is PowerPC Solaris.])
	    fi
	    if test x${endian} = xbig; then
		AC_MSG_ERROR(Solaris must be configured little endian)
	    fi ;;
      ppc-*-rtems*)			fmt=elf ;;
      ppc-*-macos* | ppc-*-mpw*)	fmt=coff em=macos ;;
      ppc-*-netware*)			fmt=elf em=ppcnw ;;
      ppc-**-nto*)			fmt=elf ;;
      ppc-*-vxworks*)			fmt=elf ;;
      ppc-*-windiss*)			fmt=elf ;;
      ppc-*-kaos*)			fmt=elf ;;

      s390x-*-linux-gnu*)		fmt=elf em=linux ;;
      s390-*-linux-gnu*)		fmt=elf em=linux ;;

      sh*-*-linux*)			fmt=elf em=linux
	    case ${cpu} in
		sh*eb)	endian=big ;;
		*)	endian=little ;;
	    esac ;;
      sh5*-*-netbsd*)			fmt=elf em=nbsd ;;
      sh64*-*-netbsd*)			fmt=elf em=nbsd ;;
      sh*-*-netbsdelf*)			fmt=elf em=nbsd ;;
      sh-*-elf*)			fmt=elf ;;
      sh-*-coff*)			fmt=coff ;;
      sh-*-nto*)			fmt=elf ;;
      sh-*-pe*)				fmt=coff em=pe bfd_gas=yes endian=little ;;
      sh-*-rtemself*)			fmt=elf ;;
      sh-*-rtems*)			fmt=coff ;;
      sh-*-kaos*)			fmt=elf ;;
      shle*-*-kaos*)			fmt=elf ;;
      sh64-*-elf*)			fmt=elf ;;

      ns32k-pc532-mach*)		fmt=aout em=pc532mach ;;
      ns32k-pc532-ux*)			fmt=aout em=pc532mach ;;
      ns32k-pc532-lites*)		fmt=aout em=nbsd532 ;;
      ns32k-*-*n*bsd*)			fmt=aout em=nbsd532 ;;

      sparc-*-rtemsaout*)		fmt=aout ;;
      sparc-*-rtemself*)		fmt=elf ;;
      sparc-*-rtems*)			fmt=elf ;;
      sparc-*-sunos4*)			fmt=aout em=sun3 ;;
      sparc-*-aout | sparc*-*-vxworks*)	fmt=aout em=sparcaout ;;
      sparc-*-coff)			fmt=coff ;;
      sparc-*-linux*aout*)		fmt=aout em=linux ;;
      sparc-*-linux-gnu*)		fmt=elf em=linux ;;
      sparc-*-lynxos*)			fmt=coff em=lynx ;;
      sparc-fujitsu-none)		fmt=aout ;;
      sparc-*-elf)			fmt=elf ;;
      sparc-*-sysv4*)			fmt=elf ;;
      sparc-*-solaris*)			fmt=elf ;;
      sparc-*-netbsdelf*)		fmt=elf em=nbsd ;;
      sparc-*-*n*bsd*)	case ${cpu} in
			    sparc64)	fmt=elf em=nbsd ;;
			    *)		fmt=aout em=nbsd ;;
			esac ;;
      strongarm-*-coff)			fmt=coff ;;
      strongarm-*-elf)			fmt=elf ;;
      strongarm-*-kaos*)		fmt=elf ;;
      xscale-*-coff)			fmt=coff ;;
      xscale-*-elf)			fmt=elf ;;

      tic30-*-*aout*)			fmt=aout bfd_gas=yes ;;
      tic30-*-*coff*)			fmt=coff bfd_gas=yes ;;
      tic4x-*-* | c4x-*-*)              fmt=coff bfd_gas=yes ;;
      tic54x-*-* | c54x*-*-*)		fmt=coff bfd_gas=yes need_libm=yes;;
      tic80-*-*)			fmt=coff ;;

      v850-*-*)				fmt=elf ;;
      v850e-*-*)			fmt=elf ;;
      v850ea-*-*)			fmt=elf ;;

      vax-*-netbsdelf*)			fmt=elf em=nbsd ;;
      vax-*-netbsd*)			fmt=aout em=nbsd ;;
      vax-*-bsd* | vax-*-ultrix*)	fmt=aout ;;
      vax-*-vms)			fmt=vms ;;

      w65-*-*)				fmt=coff ;;

      xstormy16-*-*)			fmt=elf ;;

      xtensa-*-*)			fmt=elf ;;

      z8k-*-coff | z8k-*-sim)		fmt=coff ;;

      *-*-aout | *-*-scout)		fmt=aout ;;
      *-*-freebsd*)			fmt=elf em=freebsd ;;
      *-*-nindy*)			fmt=bout ;;
      *-*-bsd*)				fmt=aout em=sun3 ;;
      *-*-generic)			fmt=generic ;;
      *-*-xray | *-*-hms)		fmt=coff ;;
      *-*-sim)				fmt=coff ;;
      *-*-elf | *-*-sysv4* | *-*-solaris*) fmt=elf dev=yes ;;
      *-*-aros*)				fmt=elf em=linux bfd_gas=yes ;;
      *-*-vxworks)			fmt=aout ;;
      *-*-netware)			fmt=elf ;;
d481 19
a499 4
	alpha*-* | arm-* | i386-* | ia64*-* | mips-* | ns32k-* \
		| pdp11-* | ppc-* | sparc-* | strongarm-* | xscale-* \
		| *-elf | *-ecoff | *-som)
	    bfd_gas=yes ;;
a503 80
    case ${cpu_type} in
      mips)
	# Set mips_cpu to the name of the default CPU.
	case ${target_cpu} in
	  mips | mipsbe | mipseb | mipsle | mipsel | mips64 | mips64el)
	    mips_cpu=from-abi
	    ;;
	  mipsisa32 | mipsisa32el)
	    mips_cpu=mips32
	    ;;
	  mipsisa32r2 | mipsisa32r2el)
	    mips_cpu=mips32r2
	    ;;
	  mipsisa64 | mipsisa64el)
	    mips_cpu=mips64
	    ;;
	  mipstx39 | mipstx39el)
	    mips_cpu=r3900
	    ;;
	  mips64vr | mips64vrel)
	    mips_cpu=vr4100
	    ;;
	  mipsisa32r2*)
changequote(,)dnl
	    mips_cpu=`echo $target_cpu | sed -e 's/[a-z]*..r2//' -e 's/el$//'`
changequote([,])dnl
	    ;;
	  mips64* | mipsisa64* | mipsisa32*)
changequote(,)dnl
	    mips_cpu=`echo $target_cpu | sed -e 's/[a-z]*..//' -e 's/el$//'`
changequote([,])dnl
	    ;;
	  *)
	    AC_ERROR($target_cpu isn't a supported MIPS CPU name)
	    ;;
	esac
	# See whether it's appropriate to set E_MIPS_ABI_O32 for o32
	# binaries.  It's a GNU extension that some OSes don't understand.
	# The value only matters on ELF targets.
	case ${target} in
	  *-*-irix*)
	    use_e_mips_abi_o32=0
	    ;;
	  *)
	    use_e_mips_abi_o32=1
	    ;;
	esac
	# Decide whether to generate 32-bit or 64-bit code by default.
	# Used to resolve -march=from-abi when an embedded ABI is selected.
	case ${target} in
	  mips64*-*-* | mipsisa64*-*-*)
	    mips_default_64bit=1
	    ;;
	  *)
	    mips_default_64bit=0
	    ;;
	esac
	# Decide which ABI to target by default.
	case ${target} in
	  mips64*-linux* | mips-sgi-irix6*)
	    mips_default_abi=N32_ABI
	    ;;
	  mips*-linux*)
	    mips_default_abi=O32_ABI
	    ;;
	  *)
	    mips_default_abi=NO_ABI
	    ;;
	esac
	AC_DEFINE_UNQUOTED(MIPS_CPU_STRING_DEFAULT, "$mips_cpu",
			   [Default CPU for MIPS targets. ])
	AC_DEFINE_UNQUOTED(USE_E_MIPS_ABI_O32, $use_e_mips_abi_o32,
			   [Allow use of E_MIPS_ABI_O32 on MIPS targets. ])
	AC_DEFINE_UNQUOTED(MIPS_DEFAULT_64BIT, $mips_default_64bit,
			   [Generate 64-bit code by default on MIPS targets. ])
	AC_DEFINE_UNQUOTED(MIPS_DEFAULT_ABI, $mips_default_abi,
			   [Choose a default ABI for MIPS targets. ])
	;;
    esac

d526 1
a526 1
      fr30 | ip2k | iq2000 | m32r | openrisc)
a529 3
      frv)
	using_cgen=yes
	;;
d554 1
a554 1
      i386 | s390 | sparc)
d559 3
a561 9

      xstormy16)
	using_cgen=yes
	;;

      xtensa)
	echo ${extra_objects} | grep -s "xtensa-relax.o"
	if test $? -ne 0 ; then
	  extra_objects="$extra_objects xtensa-relax.o"
a563 1

d595 3
a597 3
      mips*-*-linux*-*) case "$endian" in
			big)	emulation="mipsbelf mipslelf mipself" ;;
			*)	emulation="mipslelf mipsbelf mipself" ;;
a651 1
  pdp11)	atof=vax ;;
d819 1
a819 2
  BFDVER_H=../bfd/bfdver.h
  ALL_OBJ_DEPS="$ALL_OBJ_DEPS"' ../bfd/bfd.h $(INCDIR)/symcat.h'
a825 1
AC_SUBST(BFDVER_H)
d839 1
a839 1
ALL_LINGUAS="fr tr es"
@


1.1.1.10
log
@Binutils 2.15, with testsuites removed, and without gdb and libiberty.
@
text
@d8 1
a8 1
AC_PREREQ(2.57)
a10 4
dnl Autoconf 2.57 will find the aux dir without this.  However, unless
dnl we specify this explicitly, automake-1.7 will assume that ylwrap is in
dnl gas/ instead of gas/../.
AC_CONFIG_AUX_DIR(..)
d73 1
a76 5
    AC_CONFIG_FILES(gdb.ini:gdbinit.in)
    ;;
  *)
    GDBINIT=".gdbinit"
    AC_CONFIG_FILES(.gdbinit:gdbinit.in)
a116 1
      am33_2.0)		cpu_type=mn10300 endian=little ;;
a119 1
      c4x*)		cpu_type=tic4x ;;
d122 1
a122 1
      i[3-7]86)		cpu_type=i386 arch=i386;;
a156 2
      m32r)             cpu_type=m32r target_cpu=m32r endian=big ;;
      m32rle)           cpu_type=m32r target_cpu=m32r endian=little ;;
a187 3
      # cpu_type for am33_2.0 is set to mn10300
      mn10300-*-linux*)			fmt=elf bfd_gas=yes em=linux ;;

d192 1
a192 1
      arm-*-rtems* | thumb-*-rtems*)	fmt=elf ;;
d204 1
a204 1
      arm-wince-pe | arm-*-wince)       fmt=coff em=wince-pe ;;
d207 1
a210 1
      cris-*-linux-gnu*)		fmt=multi bfd_gas=yes em=linux ;;
a217 1
      frv-*-*linux*)			fmt=elf em=linux;;
a255 2
      i386-*-netbsd*-gnu* | \
      i386-*-knetbsd*-gnu | \
a273 2
      i386-*-freebsd* | i386-*-kfreebsd*-gnu)
					fmt=elf em=freebsd ;;
d300 1
d324 1
a324 2
      m32r-*-elf*)			fmt=elf ;;
      m32r-*-linux*)			fmt=elf em=linux;;
a342 1
      m68k-*-uclinux*)			fmt=elf ;;
d359 1
d378 1
d385 1
a385 1
      or32-*-rtems*)			fmt=elf ;;
d392 1
a392 7
changequote(,)dnl
      ppc-*-aix5.[01])			fmt=coff em=aix5 ;;
changequote([,])dnl
      ppc-*-aix5.*)			fmt=coff em=aix5
      	AC_DEFINE(AIX_WEAK_SUPPORT, 1,
		  [Define if using AIX 5.2 value for C_WEAKEXT.])
      ;;
d397 1
a397 1
      ppc-*-linux-gnu*)			fmt=elf em=linux
d414 2
d433 2
a434 2
      sh-*-rtemscoff*)			fmt=coff ;;
      sh-*-rtems*)			fmt=elf ;;
a480 1
      vax-*-linux-gnu*)			fmt=elf em=linux bfd_gas=yes ;;
d492 1
a492 1
      *-*-freebsd* | *-*-kfreebsd*-gnu)	fmt=elf em=freebsd ;;
d499 2
a500 2
      *-*-aros*)			fmt=elf em=linux bfd_gas=yes ;;
      *-*-vxworks | *-*-windiss)	fmt=elf ;;
a541 3
	  mipsisa64r2 | mipsisa64r2el)
	    mips_cpu=mips64r2
	    ;;
d548 1
a548 1
	  mipsisa32r2* | mipsisa64r2*)
d1040 1
a1040 2
AC_CONFIG_FILES(Makefile doc/Makefile po/Makefile.in:po/Make-in)
AC_CONFIG_COMMANDS([default],
a1054 2

AC_OUTPUT
@


