head	1.6;
access;
symbols
	OPENBSD_6_0:1.6.0.48
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.44
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.46
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.38
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.42
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.40
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.36
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.34
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.32
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.30
	OPENBSD_5_0:1.6.0.28
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.26
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.24
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.20
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.22
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.18
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.16
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.14
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.12
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.10
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.8
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.6
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.4
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	BINUTILS_2_15:1.1.1.7
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	BINUTILS-2_14:1.1.1.6
	OPENBSD_3_5:1.4.0.8
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.6
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	binutils-2_11_2:1.1.1.5
	OPENBSD_3_1:1.3.0.8
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	BINUTILS-2_10_1:1.1.1.4
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	BINUTILS-2_10:1.1.1.4
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	new-binutils:1.2.0.14
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	BINUTILS-2_8_1:1.1.1.3
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	CYGNUS-961112:1.1.1.2
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1
	CYGNUS-960904:1.1.1.1
	CYGNUS-960609:1.1.1.1
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2004.11.02.20.45.25;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2004.05.17.21.54.28;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.13.17.07.34;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.12.19.11.43;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	96.11.23.03.34.25;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.05.42;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.05.42;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.11.19.14.14.06;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	97.05.29.09.22.11;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2000.09.12.14.46.14;	author espie;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2002.05.13.13.32.17;	author fgsch;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2004.05.17.20.42.26;	author drahn;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2004.11.02.20.22.44;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Merge conflicts, bringing our changes back in:
- extra $(SHELL) and sugar for make (so that files not mode +x still work)
- safer temp file handling
- our W^X binary layout changes in ld
- OpenBSD policy for library file selection in ld
- arm and m88k changes which were not merged in time for official 2.15
- bfd core file handling
- a couple typos

New for 2.15:
- ld(1) and as(1) manpages now generated at build time
- binutils/stabs.c reverted to use our in-tree libiberty for now
- we still use our VIA C3 crypto code over stock binutils, as it recognizes
  more instructions
- new emulations for OpenBSD on mips64 machines, to help OpenBSD/sgi
- relaxed %f# handling in gas on OpenBSD/sparc64 (same as was in 2.14)

Tested on all platforms by various people; special thanks to sturm@@ and
otto@@.
@
text
@/* obj.h - defines the object dependent hooks for all object
   format backends.

   Copyright 1987, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1999, 2000, 2002
   Free Software Foundation, Inc.

   This file is part of GAS, the GNU Assembler.

   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to the Free
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.  */

char *obj_default_output_file_name (void);
void obj_emit_relocations (char **where, fixS * fixP,
			   relax_addressT segment_address_in_file);
void obj_emit_strings (char **where);
void obj_emit_symbols (char **where, symbolS * symbols);
#ifndef obj_read_begin_hook
void obj_read_begin_hook (void);
#endif
#ifndef BFD_ASSEMBLER
void obj_crawl_symbol_chain (object_headers * headers);
void obj_header_append (char **where, object_headers * headers);
#ifndef obj_pre_write_hook
void obj_pre_write_hook (object_headers * headers);
#endif
#endif

#ifndef obj_symbol_new_hook
void obj_symbol_new_hook (symbolS * symbolP);
#endif

void obj_symbol_to_chars (char **where, symbolS * symbolP);

extern const pseudo_typeS obj_pseudo_table[];

#ifdef BFD_ASSEMBLER
struct format_ops {
  int flavor;
  unsigned dfl_leading_underscore : 1;
  unsigned emit_section_symbols : 1;
  void (*begin) (void);
  void (*app_file) (const char *);
  void (*frob_symbol) (symbolS *, int *);
  void (*frob_file) (void);
  void (*frob_file_before_adjust) (void);
  void (*frob_file_before_fix) (void);
  void (*frob_file_after_relocs) (void);
  bfd_vma (*s_get_size) (symbolS *);
  void (*s_set_size) (symbolS *, bfd_vma);
  bfd_vma (*s_get_align) (symbolS *);
  void (*s_set_align) (symbolS *, bfd_vma);
  int (*s_get_other) (symbolS *);
  void (*s_set_other) (symbolS *, int);
  int (*s_get_desc) (symbolS *);
  void (*s_set_desc) (symbolS *, int);
  int (*s_get_type) (symbolS *);
  void (*s_set_type) (symbolS *, int);
  void (*copy_symbol_attributes) (symbolS *, symbolS *);
  void (*generate_asm_lineno) (void);
  void (*process_stab) (segT, int, const char *, int, int, int);
  int (*separate_stab_sections) (void);
  void (*init_stab_section) (segT);
  int (*sec_sym_ok_for_reloc) (asection *);
  void (*pop_insert) (void);
  /* For configurations using ECOFF_DEBUGGING, this callback is used.  */
  void (*ecoff_set_ext) (symbolS *, struct ecoff_extr *);

  void (*read_begin_hook) (void);
  void (*symbol_new_hook) (symbolS *);
};

extern const struct format_ops elf_format_ops;
extern const struct format_ops ecoff_format_ops;
extern const struct format_ops coff_format_ops;
extern const struct format_ops aout_format_ops;

#ifndef this_format
COMMON const struct format_ops *this_format;
#endif
#endif

/* end of obj.h */
@


1.5
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@d24 5
a28 5
char *obj_default_output_file_name PARAMS ((void));
void obj_emit_relocations PARAMS ((char **where, fixS * fixP,
				   relax_addressT segment_address_in_file));
void obj_emit_strings PARAMS ((char **where));
void obj_emit_symbols PARAMS ((char **where, symbolS * symbols));
d30 1
a30 1
void obj_read_begin_hook PARAMS ((void));
d33 2
a34 2
void obj_crawl_symbol_chain PARAMS ((object_headers * headers));
void obj_header_append PARAMS ((char **where, object_headers * headers));
d36 1
a36 1
void obj_pre_write_hook PARAMS ((object_headers * headers));
d41 1
a41 1
void obj_symbol_new_hook PARAMS ((symbolS * symbolP));
d44 1
a44 1
void obj_symbol_to_chars PARAMS ((char **where, symbolS * symbolP));
d53 24
a76 24
  void (*begin) PARAMS ((void));
  void (*app_file) PARAMS ((const char *));
  void (*frob_symbol) PARAMS ((symbolS *, int *));
  void (*frob_file) PARAMS ((void));
  void (*frob_file_before_adjust) PARAMS ((void));
  void (*frob_file_before_fix) PARAMS ((void));
  void (*frob_file_after_relocs) PARAMS ((void));
  bfd_vma (*s_get_size) PARAMS ((symbolS *));
  void (*s_set_size) PARAMS ((symbolS *, bfd_vma));
  bfd_vma (*s_get_align) PARAMS ((symbolS *));
  void (*s_set_align) PARAMS ((symbolS *, bfd_vma));
  int (*s_get_other) PARAMS ((symbolS *));
  void (*s_set_other) PARAMS ((symbolS *, int));
  int (*s_get_desc) PARAMS ((symbolS *));
  void (*s_set_desc) PARAMS ((symbolS *, int));
  int (*s_get_type) PARAMS ((symbolS *));
  void (*s_set_type) PARAMS ((symbolS *, int));
  void (*copy_symbol_attributes) PARAMS ((symbolS *, symbolS *));
  void (*generate_asm_lineno) PARAMS ((void));
  void (*process_stab) PARAMS ((segT, int, const char *, int, int, int));
  int (*separate_stab_sections) PARAMS ((void));
  void (*init_stab_section) PARAMS ((segT));
  int (*sec_sym_ok_for_reloc) PARAMS ((asection *));
  void (*pop_insert) PARAMS ((void));
d78 1
a78 1
  void (*ecoff_set_ext) PARAMS ((symbolS *, struct ecoff_extr *));
d80 2
a81 2
  void (*read_begin_hook) PARAMS ((void));
  void (*symbol_new_hook) PARAMS ((symbolS *));
@


1.4
log
@resolve conflicts.
@
text
@d4 1
a4 1
   Copyright 1987, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1999, 2000
d58 1
@


1.3
log
@Help stupid cvs fixing basic conflicts.
@
text
@d4 1
a4 1
   Copyright (C) 1987, 90, 91, 92, 93, 95, 96, 97, 99, 2000
d53 2
d57 1
d64 1
d66 3
d72 2
@


1.2
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d4 2
a5 1
   Copyright (C) 1987, 1990, 1991, 1992 Free Software Foundation, Inc.
d20 3
a22 2
   along with GAS; see the file COPYING.  If not, write to
   the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d60 2
d63 1
a63 1
  void (*generate_asm_lineno) PARAMS ((const char *, int));
d76 2
@


1.1
log
@Initial revision
@
text
@d53 1
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a52 1
  void (*frob_file_after_relocs) PARAMS ((void));
@


1.1.1.3
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@a71 1
extern const struct format_ops coff_format_ops;
@


1.1.1.4
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d4 1
a4 2
   Copyright (C) 1987, 90, 91, 92, 93, 95, 96, 97, 99, 2000
   Free Software Foundation, Inc.
d19 2
a20 3
   along with GAS; see the file COPYING.  If not, write to the Free
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.  */
a57 2
  int (*s_get_other) PARAMS ((symbolS *));
  int (*s_get_desc) PARAMS ((symbolS *));
d59 1
a59 1
  void (*generate_asm_lineno) PARAMS ((void));
a72 1
extern const struct format_ops aout_format_ops;
@


1.1.1.5
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d4 1
a4 1
   Copyright 1987, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1999, 2000
a52 2
  void (*begin) PARAMS ((void));
  void (*app_file) PARAMS ((const char *));
a54 1
  void (*frob_file_before_adjust) PARAMS ((void));
a60 1
  void (*s_set_other) PARAMS ((symbolS *, int));
a61 3
  void (*s_set_desc) PARAMS ((symbolS *, int));
  int (*s_get_type) PARAMS ((symbolS *));
  void (*s_set_type) PARAMS ((symbolS *, int));
a64 2
  int (*separate_stab_sections) PARAMS ((void));
  void (*init_stab_section) PARAMS ((segT));
@


1.1.1.6
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@d4 1
a4 1
   Copyright 1987, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1999, 2000, 2002
a57 1
  void (*frob_file_before_fix) PARAMS ((void));
@


1.1.1.7
log
@Binutils 2.15, with testsuites removed, and without gdb and libiberty.
@
text
@d24 5
a28 5
char *obj_default_output_file_name (void);
void obj_emit_relocations (char **where, fixS * fixP,
			   relax_addressT segment_address_in_file);
void obj_emit_strings (char **where);
void obj_emit_symbols (char **where, symbolS * symbols);
d30 1
a30 1
void obj_read_begin_hook (void);
d33 2
a34 2
void obj_crawl_symbol_chain (object_headers * headers);
void obj_header_append (char **where, object_headers * headers);
d36 1
a36 1
void obj_pre_write_hook (object_headers * headers);
d41 1
a41 1
void obj_symbol_new_hook (symbolS * symbolP);
d44 1
a44 1
void obj_symbol_to_chars (char **where, symbolS * symbolP);
d53 24
a76 24
  void (*begin) (void);
  void (*app_file) (const char *);
  void (*frob_symbol) (symbolS *, int *);
  void (*frob_file) (void);
  void (*frob_file_before_adjust) (void);
  void (*frob_file_before_fix) (void);
  void (*frob_file_after_relocs) (void);
  bfd_vma (*s_get_size) (symbolS *);
  void (*s_set_size) (symbolS *, bfd_vma);
  bfd_vma (*s_get_align) (symbolS *);
  void (*s_set_align) (symbolS *, bfd_vma);
  int (*s_get_other) (symbolS *);
  void (*s_set_other) (symbolS *, int);
  int (*s_get_desc) (symbolS *);
  void (*s_set_desc) (symbolS *, int);
  int (*s_get_type) (symbolS *);
  void (*s_set_type) (symbolS *, int);
  void (*copy_symbol_attributes) (symbolS *, symbolS *);
  void (*generate_asm_lineno) (void);
  void (*process_stab) (segT, int, const char *, int, int, int);
  int (*separate_stab_sections) (void);
  void (*init_stab_section) (segT);
  int (*sec_sym_ok_for_reloc) (asection *);
  void (*pop_insert) (void);
d78 1
a78 1
  void (*ecoff_set_ext) (symbolS *, struct ecoff_extr *);
d80 2
a81 2
  void (*read_begin_hook) (void);
  void (*symbol_new_hook) (symbolS *);
@


