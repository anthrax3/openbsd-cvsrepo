head	1.4;
access;
symbols
	OPENBSD_3_5:1.3.0.8
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.6
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	binutils-2_11_2:1.1.1.3
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	BINUTILS-2_10_1:1.1.1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	BINUTILS-2_10:1.1.1.2
	OPENBSD_2_7:1.1.0.18
	OPENBSD_2_7_BASE:1.1
	new-binutils:1.1.0.16
	OPENBSD_2_6:1.1.0.14
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	BINUTILS-2_8_1:1.1.1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	CYGNUS-961112:1.1.1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1
	CYGNUS-960904:1.1.1.1
	CYGNUS-960609:1.1.1.1
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2004.05.17.21.54.46;	author drahn;	state dead;
branches;
next	1.3;

1.3
date	2002.05.13.17.07.39;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.12.19.12.23;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.07.50;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.07.50;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.09.12.14.47.26;	author espie;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.05.13.13.52.26;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@!	.MACRO	SUM FROM=0, TO=9
!	; \FROM \TO
!	MOV	R\FROM,R10
!COUNT	.ASSIGNA	\FROM+1
!	.AWHILE	\&COUNT LE \TO
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	.ENDM
!

!	SUM 0,5
!	; 0 5
	; 0 5
!	MOV	R0,R10
	MOV	R0,R10
!COUNT	.ASSIGNA	0+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	MOV	R\&COUNT,R10
	MOV	R1,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	MOV	R\&COUNT,R10
	MOV	R2,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	MOV	R\&COUNT,R10
	MOV	R3,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	MOV	R\&COUNT,R10
	MOV	R4,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	MOV	R\&COUNT,R10
	MOV	R5,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	SUM 	TO=5
!	; 0 5
	; 0 5
!	MOV	R0,R10
	MOV	R0,R10
!COUNT	.ASSIGNA	0+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	MOV	R\&COUNT,R10
	MOV	R1,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	MOV	R\&COUNT,R10
	MOV	R2,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	MOV	R\&COUNT,R10
	MOV	R3,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	MOV	R\&COUNT,R10
	MOV	R4,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	MOV	R\&COUNT,R10
	MOV	R5,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	SUM 	FROM=2, TO=5
!	; 2 5
	; 2 5
!	MOV	R2,R10
	MOV	R2,R10
!COUNT	.ASSIGNA	2+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	MOV	R\&COUNT,R10
	MOV	R3,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	MOV	R\&COUNT,R10
	MOV	R4,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!	MOV	R\&COUNT,R10
	MOV	R5,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AWHILE	\&COUNT LE 5
!	MOV	R\&COUNT,R10
!COUNT	.ASSIGNA	\&COUNT+1
!	.AENDW
!

!

!; hi this is a comment
	; hi this is a comment
!	.MACRO	BACK_SLASH_SET
!	\(MOV	#"\",R0) 
!	.ENDM
!	BACK_SLASH_SET
!	MOV	#"\",R0 
	MOV	#"\",R0 
!	.MACRO	COMM
!	bar	; this comment will get copied out
!	foo	\; this one will get dropped
!	.ENDM
!	COMM
!	bar	; this comment will get copied out
	bar	; this comment will get copied out
!	foo	\; this one will get dropped
	foo	\; this one will get dropped
!	BACK_SLASH_SET
!	MOV	#"\",R0 
	MOV	#"\",R0 
!	.MACRO	PLUS2
!	ADD	#1,R\&V1
!	.SDATA	"\&V'1"
!	.ENDM
!V	.ASSIGNC	"R"
!V1	.ASSIGNA	1
!	PLUS2
!	ADD	#1,R\&V1
	ADD	#1,R1
!	.SDATA	"\&V'1"
	.byte	82,49
!	.MACRO	PLUS1	P,P1
!	ADD	#1,\P1
!	.SDATA	"\P'1"
!	.ENDM
!	PLUS1	R,R1
!	ADD	#1,R1
	ADD	#1,R1
!	.SDATA	"R1"
	.byte	82,49
!

!	.MACRO	SUM P1
!	MOV	R0,R10
!	ADD	R1,R10
!	ADD	R2,R10
!	\P1	
!	ADD	R3,R10
!	.ENDM
!

!	SUM	.EXITM
!	MOV	R0,R10
	MOV	R0,R10
!	ADD	R1,R10
	ADD	R1,R10
!	ADD	R2,R10
	ADD	R2,R10
!	.EXITM	
!

!	.MACRO foo bar=a default=b
!	\bar
!	\default
!	bar
!	default
!	.ENDM
!	foo default=dog bar=cat
!	cat
	cat
!	dog
	dog
!	bar
	bar
!	default
	default
!	foo X Y
!	X
	X
!	Y
	Y
!	bar
	bar
!	default
	default
!	foo
!	a
	a
!	b
	b
!	bar
	bar
!	default
	default
!	foo bar=cat default=dog
!	cat
	cat
!	dog
	dog
!	bar
	bar
!	default
	default
!

!

!	.MACRO	foo bar
!	HI
!	HI \bar
!	HI
!	.ENDM
!

!	foo 1
!	HI
	HI
!	HI 1
	HI 1
!	HI
	HI
!	foo 123
!	HI
	HI
!	HI 123
	HI 123
!	HI
	HI
!	foo 1 2 3 4
!	foo
!	HI
	HI
!	HI 
	HI 
!	HI
	HI
!

!	
!	.MACRO	PUSH Rn
!	MOV.L	\Rn,@@-r15
!	.ENDM
!	PUSH	R0
!	MOV.L	R0,@@-r15
	MOV.L	R0,@@-r15
!	PUSH	R1
!	MOV.L	R1,@@-r15
	MOV.L	R1,@@-r15
!

!

!	.MACRO	RES_STR STR, Rn
!	MOV.L	#str\@@,\Rn
!	BRA	end_str\@@
!	NOP
!str\@@	.SDATA "\STR"
!	.ALIGN	2
!end_str\@@
!	.ENDM
!	
!	RES_STR	"ONE",R0	
!	MOV.L	#str18,R0
	MOV.L	#str18,R0
!	BRA	end_str18
	BRA	end_str18
!	NOP
	NOP
!str18	.SDATA "ONE"
str18:	.byte	79,78,69
!	.ALIGN	2
	.align	2
!end_str18
end_str18:
!	RES_STR	"TWO",R1
!	MOV.L	#str19,R1
	MOV.L	#str19,R1
!	BRA	end_str19
	BRA	end_str19
!	NOP
	NOP
!str19	.SDATA "TWO"
str19:	.byte	84,87,79
!	.ALIGN	2
	.align	2
!end_str19
end_str19:
!	RES_STR	"THREE",R2
!	MOV.L	#str20,R2
	MOV.L	#str20,R2
!	BRA	end_str20
	BRA	end_str20
!	NOP
	NOP
!str20	.SDATA "THREE"
str20:	.byte	84,72,82,69,69
!	.ALIGN	2
	.align	2
!end_str20
end_str20:
!

!

!

!	RES_STR STR=donkey Rn=R1
!	MOV.L	#str21,R1
	MOV.L	#str21,R1
!	BRA	end_str21
	BRA	end_str21
!	NOP
	NOP
!str21	.SDATA "donkey"
str21:	.byte	100,111,110,107,101,121
!	.ALIGN	2
	.align	2
!end_str21
end_str21:
!	RES_STR donkey,R1
!	MOV.L	#str22,R1
	MOV.L	#str22,R1
!	BRA	end_str22
	BRA	end_str22
!	NOP
	NOP
!str22	.SDATA "donkey"
str22:	.byte	100,111,110,107,101,121
!	.ALIGN	2
	.align	2
!end_str22
end_str22:
! 	RES_STR donkey Rn=R1
!	MOV.L	#str23,R1
	MOV.L	#str23,R1
!	BRA	end_str23
	BRA	end_str23
!	NOP
	NOP
!str23	.SDATA "donkey"
str23:	.byte	100,111,110,107,101,121
!	.ALIGN	2
	.align	2
!end_str23
end_str23:
!	.END
@


1.3
log
@resolve conflicts.
@
text
@@


1.2
log
@Help stupid cvs fixing basic conflicts.
@
text
@d299 4
a302 4
!	MOV.L	#str00018,R0
	MOV.L	#str00018,R0
!	BRA	end_str00018
	BRA	end_str00018
d305 2
a306 2
!str00018	.SDATA "ONE"
str00018:	.byte	79,78,69
d309 2
a310 2
!end_str00018
end_str00018:
d312 4
a315 4
!	MOV.L	#str00019,R1
	MOV.L	#str00019,R1
!	BRA	end_str00019
	BRA	end_str00019
d318 2
a319 2
!str00019	.SDATA "TWO"
str00019:	.byte	84,87,79
d322 2
a323 2
!end_str00019
end_str00019:
d325 4
a328 4
!	MOV.L	#str00020,R2
	MOV.L	#str00020,R2
!	BRA	end_str00020
	BRA	end_str00020
d331 2
a332 2
!str00020	.SDATA "THREE"
str00020:	.byte	84,72,82,69,69
d335 2
a336 2
!end_str00020
end_str00020:
d344 4
a347 4
!	MOV.L	#str00021,R1
	MOV.L	#str00021,R1
!	BRA	end_str00021
	BRA	end_str00021
d350 2
a351 2
!str00021	.SDATA "donkey"
str00021:	.byte	100,111,110,107,101,121
d354 2
a355 2
!end_str00021
end_str00021:
d357 4
a360 4
!	MOV.L	#str00022,R1
	MOV.L	#str00022,R1
!	BRA	end_str00022
	BRA	end_str00022
d363 2
a364 2
!str00022	.SDATA "donkey"
str00022:	.byte	100,111,110,107,101,121
d367 2
a368 2
!end_str00022
end_str00022:
d370 4
a373 4
!	MOV.L	#str00023,R1
	MOV.L	#str00023,R1
!	BRA	end_str00023
	BRA	end_str00023
d376 2
a377 2
!str00023	.SDATA "donkey"
str00023:	.byte	100,111,110,107,101,121
d380 2
a381 2
!end_str00023
end_str00023:
@


1.1
log
@Initial revision
@
text
@d370 12
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@a369 12
!	MOV.L	#str00023,R1
	MOV.L	#str00023,R1
!	BRA	end_str00023
	BRA	end_str00023
!	NOP
	NOP
!str00023	.SDATA "donkey"
str00023:	.byte	100,111,110,107,101,121
!	.ALIGN	2
	.align	2
!end_str00023
end_str00023:
@


1.1.1.3
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d299 4
a302 4
!	MOV.L	#str18,R0
	MOV.L	#str18,R0
!	BRA	end_str18
	BRA	end_str18
d305 2
a306 2
!str18	.SDATA "ONE"
str18:	.byte	79,78,69
d309 2
a310 2
!end_str18
end_str18:
d312 4
a315 4
!	MOV.L	#str19,R1
	MOV.L	#str19,R1
!	BRA	end_str19
	BRA	end_str19
d318 2
a319 2
!str19	.SDATA "TWO"
str19:	.byte	84,87,79
d322 2
a323 2
!end_str19
end_str19:
d325 4
a328 4
!	MOV.L	#str20,R2
	MOV.L	#str20,R2
!	BRA	end_str20
	BRA	end_str20
d331 2
a332 2
!str20	.SDATA "THREE"
str20:	.byte	84,72,82,69,69
d335 2
a336 2
!end_str20
end_str20:
d344 4
a347 4
!	MOV.L	#str21,R1
	MOV.L	#str21,R1
!	BRA	end_str21
	BRA	end_str21
d350 2
a351 2
!str21	.SDATA "donkey"
str21:	.byte	100,111,110,107,101,121
d354 2
a355 2
!end_str21
end_str21:
d357 4
a360 4
!	MOV.L	#str22,R1
	MOV.L	#str22,R1
!	BRA	end_str22
	BRA	end_str22
d363 2
a364 2
!str22	.SDATA "donkey"
str22:	.byte	100,111,110,107,101,121
d367 2
a368 2
!end_str22
end_str22:
d370 4
a373 4
!	MOV.L	#str23,R1
	MOV.L	#str23,R1
!	BRA	end_str23
	BRA	end_str23
d376 2
a377 2
!str23	.SDATA "donkey"
str23:	.byte	100,111,110,107,101,121
d380 2
a381 2
!end_str23
end_str23:
@


