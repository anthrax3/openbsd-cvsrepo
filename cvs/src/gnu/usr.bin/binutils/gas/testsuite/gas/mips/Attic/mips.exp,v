head	1.8;
access;
symbols
	OPENBSD_3_5:1.7.0.8
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.6
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	binutils-2_11_2:1.1.1.7
	OPENBSD_3_1:1.6.0.8
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.6
	OPENBSD_3_0_BASE:1.6
	BINUTILS-2_10_1:1.1.1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	BINUTILS-2_10:1.1.1.6
	OPENBSD_2_7:1.5.0.16
	OPENBSD_2_7_BASE:1.5
	new-binutils:1.5.0.14
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	BINUTILS-2_8_1:1.1.1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	CYGNUS-961112:1.1.1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	CYGNUS-960904:1.1.1.3
	CYGNUS-960609:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2004.05.17.21.54.40;	author drahn;	state dead;
branches;
next	1.7;

1.7
date	2002.05.13.17.07.38;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2000.09.12.19.12.17;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	96.11.23.03.35.28;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.09.04.19.07.18;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.06.09.20.12.49;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.01.08.18.17.59;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.07.24;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.07.24;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.09.19.42.05;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.09.04.17.47.42;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	96.11.19.14.15.19;	author niklas;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	97.05.29.09.25.23;	author niklas;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2000.09.12.14.47.08;	author espie;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2002.05.13.13.42.31;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@#
# Some generic MIPS tests
#
if { [istarget mips*-*-*] } then {
    set no_mips16 0
    set svr4pic [expr [istarget *-*-elf*] || [istarget *-*-irix5*] || [istarget *-*-irix6* ] || [istarget *-*-linux*] ]
    set empic [expr [istarget *-*-ecoff*] || [istarget *-*-ultrix*] || [istarget *-*-irix\[1-4\]*] ]
    set aout [expr [istarget *-*-bsd*] || [istarget *-*-netbsd*] || [istarget *-*-openbsd*] ]
    set ilocks [istarget mipstx39*-*-*]
    set gpr_ilocks [expr [istarget mipstx39*-*-*]]
    set addr32 [expr [istarget mipstx39*-*-*]]

    if { [istarget mips*el-*-*] || [istarget "mips*-*-*linux*"] } then {
	set tmips "t"
    } else {
	set tmips ""
    }

    run_dump_test "abs"
    run_dump_test "add"
    run_dump_test "and"
    run_dump_test "break20"
    run_dump_test "trap20"
    run_dump_test "beq"
    run_dump_test "bge"
    run_dump_test "bgeu"
    run_dump_test "blt"
    run_dump_test "bltu"
    if !$ilocks { run_dump_test "div" } else { run_dump_test "div-ilocks" }
    run_dump_test "dli"
    run_dump_test "jal"
    if $svr4pic { run_dump_test "jal-svr4pic" }
    if $svr4pic { run_dump_test "jal-xgot" }
    if $empic { run_dump_test "jal-empic" }
    if !$aout { run_dump_test "la" }
    if $svr4pic { run_dump_test "la-svr4pic" }
    if $svr4pic { run_dump_test "la-xgot" }
    if $empic { run_dump_test "la-empic" }
    if !$aout { run_dump_test "lb" }
    if $svr4pic { run_dump_test "lb-svr4pic" }
    if $svr4pic {
	# Both versions specify the cpu, so we can run both regardless of
	# the interlocking in the configured default cpu.
	run_dump_test "lb-xgot"
	run_dump_test "lb-xgot-ilocks"
    }
    if $empic { run_dump_test "lb-empic" }
    if !$aout { 
        if !$gpr_ilocks { 
            run_dump_test "ld" 
        } else { 
            if !$addr32 {
                run_dump_test "ld-ilocks"
            } else {
                run_dump_test "ld-ilocks-addr32"
            }
        }
    }
    if $svr4pic { run_dump_test "ld-svr4pic" }
    if $svr4pic { run_dump_test "ld-xgot" }
    if $empic { run_dump_test "ld-empic" }
    run_dump_test "li"
    if !$aout { run_dump_test "lifloat" }
    if $svr4pic { run_dump_test "lif-svr4pic" }
    if $svr4pic { run_dump_test "lif-xgot" }
    if $empic { run_dump_test "lif-empic" }
    run_dump_test "mips4"
    if !$ilocks { run_dump_test "mul" } else { run_dump_test "mul-ilocks" }
    run_dump_test "rol"
    if !$aout { run_dump_test "sb" }
    run_dump_test "trunc"
    if !$aout { run_dump_test "ulh" }
    if $svr4pic { run_dump_test "ulh-svr4pic" }
    if $svr4pic { run_dump_test "ulh-xgot" }
    if $empic { run_dump_test "ulh-empic" }
    if !$aout {
	run_dump_test "ulw"
	run_dump_test "uld"
	run_dump_test "ush"
	run_dump_test "usw"
	run_dump_test "usd"
    }
    # The mips16 test can only be run on ELF, because only ELF
    # supports the necessary mips16 reloc.
    if { $svr4pic && !$no_mips16 } { run_dump_test "mips16" }
    run_dump_test "delay"
    run_dump_test "nodelay"
    run_dump_test "mips4010"
    run_dump_test "mips4650"
    run_dump_test "mips4100"
    # Linux uses ELF stabs, which doesn't support line number.
    setup_xfail "mips*-*-*linux*"
    run_dump_test "lineno"
    run_dump_test "sync"
    run_dump_test "mips32"
    run_dump_test "mips64"

    if $svr4pic {
	# Make sure that -mcpu=FOO and -mFOO are equivalent.  Assemble a file
	# containing 4650-specific instructions with -m4650 and -mcpu=4650,
	# and verify that they're the same.  Specifically, we're checking
	# that the EF_MIPS_MACH field is set, and that the 4650 'mul'
	# instruction does get used.  In previous versions of GAS, 
	# only -mcpu=4650 would set the EF_MIPS_MACH field; -m4650 wouldn't.
	run_dump_test "elf_e_flags1"
	run_dump_test "elf_e_flags2"
	run_dump_test "elf_e_flags3"
	run_dump_test "elf_e_flags4"
    
	if [istarget mips*el-*-*] { 
	    run_dump_test "elfel-rel"
	} {
	    run_dump_test "elf-rel"
	}

	if [istarget mips64*-*-*] { 
	    if [istarget mips*el-*-*] { 
		run_dump_test "elfel-rel2" 
	    } {
		run_dump_test "elf-rel2" 
	    }
	} {
	    if [istarget mips*el-*-*] { 
		run_dump_test "e32el-rel2" 
	    } {
		run_dump_test "e32-rel2" 
	    }
	}

	if [istarget mips*el-*-*] { 
	    run_dump_test "elfel-rel3"
	} {
	    run_dump_test "elf-rel3"
	}

	if [istarget mips*el-*-*] { 
	    run_dump_test "${tmips}elempic"
	} {
	    run_dump_test "${tmips}empic"
	}

	if { !$no_mips16 } { 
	    if [istarget mips*el-*-*] { 
		run_dump_test "${tmips}mipsel16-e" 
	    } {
		run_dump_test "${tmips}mips16-e" 
	    }
	    setup_xfail "mips*-*-*"
	    if [istarget mips*el-*-*] { 
		run_dump_test "mipsel16-f" 
	    } {
		run_dump_test "mips16-f" 
	    }
	}
    }
}
@


1.7
log
@resolve conflicts.
@
text
@@


1.6
log
@Help stupid cvs fixing basic conflicts.
@
text
@d4 1
a4 1
if [istarget mips*-*-*] then {
d6 1
a6 1
    set svr4pic [expr [istarget *-*-elf*] || [istarget *-*-irix5*] || [istarget *-*-irix6* ] ]
d8 1
a8 1
    set aout [expr [istarget *-*-bsd*] || [istarget *-*-netbsd*] || [istarget *-*-openbsd*]]
d13 5
a17 3



d91 2
d95 2
d98 11
a108 10
    # Make sure that -mcpu=FOO and -mFOO are equivalent.  Assemble a file
    # containing 4650-specific instructions with -m4650 and -mcpu=4650,
    # and verify that they're the same.  Specifically, we're checking
    # that the EF_MIPS_MACH field is set, and that the 4650 'mul'
    # instruction does get used.  In previous versions of GAS, 
    # only -mcpu=4650 would set the EF_MIPS_MACH field; -m4650 wouldn't.
    run_dump_test "elf_e_flags1"
    run_dump_test "elf_e_flags2"
    run_dump_test "elf_e_flags3"
    run_dump_test "elf_e_flags4"
d110 6
a115 2
    if $svr4pic {
	run_dump_test "elf-rel"
d117 15
a131 1
	    run_dump_test "elf-rel2" 
d133 9
a141 3
	    run_dump_test "e32-rel2" 
	} 
	run_dump_test "empic"
d143 5
a147 1
	    run_dump_test "mips16-e" 
d149 5
a153 1
	    run_dump_test "mips16-f" 
@


1.5
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d5 2
a6 1
    set svr4pic [expr [istarget *-*-elf*] || [istarget *-*-irix5*] ]
d8 8
a15 3
    set aout [expr [istarget *-*-bsd*] || [istarget *-*-netbsd*] || [istarget *-*-openbsd*] ]
    set ilocks [expr [istarget *4300*-*-elf*] || [istarget *4100*-*-elf*]]
    set 64bit [istarget mips64*-*-*]
d20 2
d28 1
a28 1
    if $64bit { run_dump_test "dli" }
d39 6
a44 1
    if $svr4pic { run_dump_test "lb-xgot" }
d46 11
a56 1
    if !$aout { run_dump_test "ld" }
d80 36
@


1.4
log
@Merge the Cygnus 960904 sources
@
text
@d9 1
d20 1
@


1.3
log
@Resolve conflicts with 0609 Cygnus import
@
text
@d8 1
d18 1
a18 1
    run_dump_test "div"
d41 1
a41 1
    run_dump_test "mul"
@


1.2
log
@Support OpenBSD configuration, by cloning NetBSD config entries.
@
text
@d20 1
d24 1
d28 1
d32 1
d37 1
d46 1
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
    set aout [expr [istarget *-*-bsd*] || [istarget *-*-netbsd*]]
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import of binutils, gas, ld & gprof from Cygnus 960609 tree
@
text
@a19 1
    if $svr4pic { run_dump_test "jal-xgot" }
a22 1
    if $svr4pic { run_dump_test "la-xgot" }
a25 1
    if $svr4pic { run_dump_test "lb-xgot" }
a28 1
    if $svr4pic { run_dump_test "ld-xgot" }
a32 1
    if $svr4pic { run_dump_test "lif-xgot" }
a40 1
    if $svr4pic { run_dump_test "ulh-xgot" }
@


1.1.1.3
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@a7 1
    set ilocks [expr [istarget *4300*-*-elf*] || [istarget *4100*-*-elf*]]
d17 1
a17 1
    if !$ilocks { run_dump_test "div" } else { run_dump_test "div-ilocks" }
d40 1
a40 1
    if !$ilocks { run_dump_test "mul" } else { run_dump_test "mul-ilocks" }
@


1.1.1.4
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a8 1
    set 64bit [istarget mips64*-*-*]
a18 1
    if $64bit { run_dump_test "dli" }
@


1.1.1.5
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@d7 3
a9 2
    set aout [expr [istarget *-*-bsd*] || [istarget *-*-netbsd*] || [istarget *-*-openbsd*]]
    set ilocks [expr [istarget mips64vr4300*-*-*] || [istarget mips64vr4100*-*-*]]
d20 1
a20 1
    run_dump_test "dli"
a57 3
    # The mips16 test can only be run on ELF, because only ELF
    # supports the necessary mips16 reloc.
    if $svr4pic { run_dump_test "mips16" }
@


1.1.1.6
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d5 1
a5 2
    set no_mips16 0
    set svr4pic [expr [istarget *-*-elf*] || [istarget *-*-irix5*] || [istarget *-*-irix6* ] ]
d8 1
a8 7
    set ilocks [istarget mipstx39*-*-*]
    set gpr_ilocks [expr [istarget mipstx39*-*-*]]
    set addr32 [expr [istarget mipstx39*-*-*]]




a12 2
    run_dump_test "break20"
    run_dump_test "trap20"
d30 1
a30 6
    if $svr4pic {
	# Both versions specify the cpu, so we can run both regardless of
	# the interlocking in the configured default cpu.
	run_dump_test "lb-xgot"
	run_dump_test "lb-xgot-ilocks"
    }
d32 1
a32 11
    if !$aout { 
        if !$gpr_ilocks { 
            run_dump_test "ld" 
        } else { 
            if !$addr32 {
                run_dump_test "ld-ilocks"
            } else {
                run_dump_test "ld-ilocks-addr32"
            }
        }
    }
d59 1
a59 34
    if { $svr4pic && !$no_mips16 } { run_dump_test "mips16" }
    run_dump_test "delay"
    run_dump_test "nodelay"
    run_dump_test "mips4010"
    run_dump_test "mips4650"
    run_dump_test "mips4100"
    run_dump_test "lineno"
    run_dump_test "sync"

    # Make sure that -mcpu=FOO and -mFOO are equivalent.  Assemble a file
    # containing 4650-specific instructions with -m4650 and -mcpu=4650,
    # and verify that they're the same.  Specifically, we're checking
    # that the EF_MIPS_MACH field is set, and that the 4650 'mul'
    # instruction does get used.  In previous versions of GAS, 
    # only -mcpu=4650 would set the EF_MIPS_MACH field; -m4650 wouldn't.
    run_dump_test "elf_e_flags1"
    run_dump_test "elf_e_flags2"
    run_dump_test "elf_e_flags3"
    run_dump_test "elf_e_flags4"
    
    if $svr4pic {
	run_dump_test "elf-rel"
	if [istarget mips64*-*-*] { 
	    run_dump_test "elf-rel2" 
	} {
	    run_dump_test "e32-rel2" 
	} 
	run_dump_test "empic"
	if { !$no_mips16 } { 
	    run_dump_test "mips16-e" 
	    setup_xfail "mips*-*-*"
	    run_dump_test "mips16-f" 
	}
    }
@


1.1.1.7
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d4 1
a4 1
if { [istarget mips*-*-*] } then {
d6 1
a6 1
    set svr4pic [expr [istarget *-*-elf*] || [istarget *-*-irix5*] || [istarget *-*-irix6* ] || [istarget *-*-linux*] ]
d8 1
a8 1
    set aout [expr [istarget *-*-bsd*] || [istarget *-*-netbsd*] || [istarget *-*-openbsd*] ]
d13 3
a15 5
    if { [istarget mips*el-*-*] || [istarget "mips*-*-*linux*"] } then {
	set tmips "t"
    } else {
	set tmips ""
    }
a88 2
    # Linux uses ELF stabs, which doesn't support line number.
    setup_xfail "mips*-*-*linux*"
a90 2
    run_dump_test "mips32"
    run_dump_test "mips64"
d92 11
d104 1
a104 17
	# Make sure that -mcpu=FOO and -mFOO are equivalent.  Assemble a file
	# containing 4650-specific instructions with -m4650 and -mcpu=4650,
	# and verify that they're the same.  Specifically, we're checking
	# that the EF_MIPS_MACH field is set, and that the 4650 'mul'
	# instruction does get used.  In previous versions of GAS, 
	# only -mcpu=4650 would set the EF_MIPS_MACH field; -m4650 wouldn't.
	run_dump_test "elf_e_flags1"
	run_dump_test "elf_e_flags2"
	run_dump_test "elf_e_flags3"
	run_dump_test "elf_e_flags4"
    
	if [istarget mips*el-*-*] { 
	    run_dump_test "elfel-rel"
	} {
	    run_dump_test "elf-rel"
	}

d106 1
a106 15
	    if [istarget mips*el-*-*] { 
		run_dump_test "elfel-rel2" 
	    } {
		run_dump_test "elf-rel2" 
	    }
	} {
	    if [istarget mips*el-*-*] { 
		run_dump_test "e32el-rel2" 
	    } {
		run_dump_test "e32-rel2" 
	    }
	}

	if [istarget mips*el-*-*] { 
	    run_dump_test "elfel-rel3"
d108 3
a110 9
	    run_dump_test "elf-rel3"
	}

	if [istarget mips*el-*-*] { 
	    run_dump_test "${tmips}elempic"
	} {
	    run_dump_test "${tmips}empic"
	}

d112 1
a112 5
	    if [istarget mips*el-*-*] { 
		run_dump_test "${tmips}mipsel16-e" 
	    } {
		run_dump_test "${tmips}mips16-e" 
	    }
d114 1
a114 5
	    if [istarget mips*el-*-*] { 
		run_dump_test "mipsel16-f" 
	    } {
		run_dump_test "mips16-f" 
	    }
@


