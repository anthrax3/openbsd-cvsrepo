head	1.2;
access;
symbols
	OPENBSD_3_5:1.1.1.1.0.16
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.14
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.12
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.10
	OPENBSD_3_2_BASE:1.1.1.1
	binutils-2_11_2:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.8
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.6
	OPENBSD_3_0_BASE:1.1.1.1
	BINUTILS-2_10_1:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.4
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.2
	OPENBSD_2_8_BASE:1.1.1.1
	BINUTILS-2_10:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.05.17.21.54.35;	author drahn;	state dead;
branches;
next	1.1;

1.1
date	2000.09.12.14.46.41;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.09.12.14.46.41;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@# bittest.s
#
# Bit operation instructions (BCLR, BNOT, BSET, BTST) should not be placed in IU.
# If the user specifically indicates they should be in the IU, GAS will
# generate warnings. The reason why this is not an error is that those instructions 
# will fail in IU only occasionally. Thus GAS should pack them in MU for
# safety, and it just needs to draw attention when a violation is given. 

	
	nop -> ldw R1, @@(R2,R3)
        nop || ldw R6, @@(R5,R4)
        
        nop -> BSET R1, R2, R3 
        nop <- BTST F1, R2, R3 
        nop || BCLR R1, R2, R3
        nop -> BNOT R1, R2, R3
        BNOT r1, r2, r3 -> nop
        
        bset r1, r2, r3 || moddec r4, 5

        bset r1, r2, r3
        moddec r4, 5

        bset r1, r2, r3
        joinll r4, r5, r6

        joinll r4, r5, r6
        bset r1, r2, r3
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@@
