head	1.3;
access;
symbols
	OPENBSD_3_5:1.2.0.16
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.14
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.12
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.10
	OPENBSD_3_2_BASE:1.2
	binutils-2_11_2:1.1.1.2
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	BINUTILS-2_10_1:1.1.1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	BINUTILS-2_10:1.1.1.2
	OPENBSD_2_7:1.1.0.18
	OPENBSD_2_7_BASE:1.1
	new-binutils:1.1.0.16
	OPENBSD_2_6:1.1.0.14
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	BINUTILS-2_8_1:1.1.1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	CYGNUS-961112:1.1.1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1
	CYGNUS-960904:1.1.1.1
	CYGNUS-960609:1.1.1.1
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2004.05.17.21.54.39;	author drahn;	state dead;
branches;
next	1.2;

1.2
date	2000.09.12.19.12.10;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.07.09;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.07.09;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.09.12.14.47.00;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@# Test handling of MIT and Motorola syntax operands
# If you change this file, see also op68000.d.
	.text
foo:	
	| Data register direct
	tstl	%d0

	| Address register direct
	tstl	%a0

	| Address register indirect
	tstl	%a0@@
	tstl	(%a0)

	| Address register indirect with postincrement
	tstl	%a0@@+
	tstl	(%a0)+

	| Address register indirect with predecrement
	tstl	%a0@@-
	tstl	-(%a0)

	| Address register indirect with displacement
	tstl	%a0@@(8)
	tstl	(8,%a0)
	tstl	8(%a0)

	| Address register indirect with index (8-bit displacement)
	tstl	%a0@@(8,%d0)
	tstl	%a0@@(8,%d0:w)
	tstl	%a0@@(8,%d0:w:1)
	tstl	%a0@@(8,%d0:w:2)
	tstl	%a0@@(8,%d0:w:4)
	tstl	%a0@@(8,%d0:w:8)
	tstl	%a0@@(8,%d0:l)
	tstl	%a0@@(8,%d0:l:1)
	tstl	%a0@@(8,%d0:l:2)
	tstl	%a0@@(8,%d0:l:4)
	tstl	%a0@@(8,%d0:l:8)
	tstl	%a0@@(%d0:w:2)
	tstl	(8,%a0,%d0)
	tstl	(8,%a0,%d0*1)
	tstl	(8,%a0,%d0*2)
	tstl	(8,%a0,%d0*4)
	tstl	(8,%a0,%d0*8)
	tstl	(8,%a0,%d0.w)
	tstl	(8,%a0,%d0.w*1)
	tstl	(8,%a0,%d0.w*2)
	tstl	(8,%a0,%d0.w*4)
	tstl	(8,%a0,%d0.w*8)
	tstl	(8,%a0,%d0.l)
	tstl	(8,%a0,%d0.l*1)
	tstl	(8,%a0,%d0.l*2)
	tstl	(8,%a0,%d0.l*4)
	tstl	(8,%a0,%d0.l*8)
	tstl	(8,%d0,%a0)
	tstl	(8,%a1.w*2,%a0)
	tstl	(8,%a1,%a0)
	tstl	8(%a0,%d0.w*2)
	tstl	8(%d0.w*2,%a0)
	tstl	8(%a1.w*2,%a0)
	tstl	(%a0,%d0.w*2)
	tstl	(%d0.w*2,%a0)

	| Address register indirect with index (base displacement)
	tstl	%a0@@(1000,%d0:w:2)
	tstl	@@(1000,%d0:w:2)
	tstl	@@(%d0:w:2)
	tstl	@@(1000)
	tstl	%a0@@(100000)
	tstl	(1000,%a0,%d0.w*2)
	tstl	(1000,%d0,%a0)
	tstl	(1000,%a1.w*2,%a0)
	tstl	1000(%a0,%d0.w*2)
	tstl	1000(%d0,%a0)
	tstl	(1000,%d0.w*2)
	tstl	1000(%d0.w*2)
	tstl	(%d0.w*2)
	tstl	(100000,%a0)
	tstl	100000(%a0)
	tstl	%za1@@(1000,%d0:w:2)
	tstl	%za1@@(100000)
	tstl	(1000,%za1,%d0.w*2)
	tstl	(1000,%d0,%za1)
	tstl	(1000,%a1.w*2,%za1)
	tstl	1000(%za1,%d0.w*2)
	tstl	1000(%d0,%za1)
	tstl	(100000,%za1)
	tstl	100000(%za1)
	tstl	%a0@@(1000,%zd1:w:2)
	tstl	@@(1000,%zd1:w:2)
	tstl	@@(%zd1:w:2)
	tstl	(1000,%a0,%zd1.w*2)
	tstl	(1000,%zd1,%a0)
	tstl	(1000,%za1.w*2,%a0)
	tstl	1000(%a0,%zd1.w*2)
	tstl	1000(%zd1,%a0)
	tstl	(1000,%zd1.w*2)
	tstl	1000(%zd1.w*2)
	tstl	(%zd1.w*2)

	| Memory indirect postindexed
	tstl	%a0@@(1000)@@(2000,%d0:w:2)
	tstl	%a0@@(1000)@@(%d0:w:2)
	tstl	%a0@@(1000)@@(2000)
	tstl	@@(1000)@@(2000,%d0:w:2)
	tstl	@@(1000)@@(%d0:w:2)
	tstl	@@(1000)@@(2000)
	tstl	%a0@@(0)@@(2000,%d0:w:2)
	tstl	%a0@@(0)@@(%d0:w:2)
	tstl	%a0@@(0)@@(2000)
	tstl	@@(0)@@(2000,%d0:w:2)
	tstl	@@(0)@@(%d0:w:2)
	tstl	@@(0)@@(2000)
	tstl	([1000,%a0],%d0:w:2,2000)
	tstl	([1000,%a0],%d0:w:2)
	tstl	([1000,%a0],2000)
	tstl	([1000],%d0:w:2,2000)
	tstl	([1000],%d0:w:2)
	tstl	([1000],2000)
	tstl	([%a0],%d0:w:2,2000)
	tstl	([%a0],%d0:w:2)
	tstl	([%a0],2000)
	tstl	([0],%d0:w:2,2000)
	tstl	([0],%d0:w:2)
	tstl	([0],2000)

	| Memory indirect preindexed
	tstl	%a0@@(1000,%d0:w:2)@@(2000)
	tstl	%a0@@(1000,%d0:w:2)@@(0)
	tstl	@@(1000,%d0:w:2)@@(2000)
	tstl	@@(1000,%d0:w:2)@@(0)
	tstl	%a0@@(%d0:w:2)@@(2000)
	tstl	%a0@@(%d0:w:2)@@(0)
	tstl	@@(%d0:w:2)@@(2000)
	tstl	@@(%d0:w:2)@@(0)
	tstl	([1000,%a0,%d0:w:2],2000)
	tstl	([1000,%d0:w:2,%a0],2000)
	tstl	([1000,%d0,%a0],2000)
	tstl	([1000,%a1,%a0],2000)
	tstl	([1000,%a1:w:2,%a0],2000)
	tstl	([1000,%a0,%d0:w:2])
	tstl	([1000,%d0,%a0])
	tstl	([1000,%d0:w:2],2000)
	tstl	([1000,%d0:w:2])
	tstl	([%a0,%d0:w:2],2000)
	tstl	([%d0,%a0],2000)
	tstl	([%a0,%d0:w:2])
	tstl	([%d0,%a0])
	tstl	([%d0:w:2],2000)
	tstl	([%d0:w:2])

	| Program counter indirect with displacement
	pea	%pc@@(8)
	pea	(8,%pc)
	pea	8(%pc)
	pea	foo

	| Program counter indirect with index (8-bit displacement)
	pea	%pc@@(8,%d0:w:2)
	pea	%pc@@(%d0:w:2)
	pea	(8,%pc,%d0.w*2)
	pea	(8,%d0,%pc)
	pea	(8,%a0,%pc)
	pea	8(%pc,%d0.w*2)
	pea	8(%d0,%pc)
	pea	8(%a0,%pc)
	pea	(%pc,%d0.w*2)
	pea	(%d0,%pc)
	pea	(%a0,%pc)

	| Program counter indirect with index (base displacement)
	pea	%pc@@(1000,%d0:w:2)
	pea	%pc@@(100000)
	pea	(1000,%pc,%d0.w*2)
	pea	(1000,%d0,%pc)
	pea	(1000,%a1.w*2,%pc)
	pea	(1000,%a1,%pc)
	pea	1000(%pc,%d0.w*2)
	pea	1000(%d0,%pc)
	pea	1000(%a1,%pc)
	pea	(100000,%pc)
	pea	100000(%pc)
	pea	%zpc@@(1000,%d0:w:2)
	pea	%zpc@@(100000)
	pea	(1000,%zpc,%d0.w*2)
	pea	(1000,%d0,%zpc)
	pea	(1000,%a1.w*2,%zpc)
	pea	(1000,%a1,%zpc)
	pea	1000(%zpc,%d0.w*2)
	pea	1000(%d0,%zpc)
	pea	1000(%a1,%zpc)
	pea	(100000,%zpc)
	pea	100000(%zpc)

	| Program counter memory indirect postindexed
	pea	%pc@@(1000)@@(2000,%d0:w:2)
	pea	%pc@@(1000)@@(%d0:w:2)
	pea	%pc@@(1000)@@(2000)
	pea	%pc@@(0)@@(2000,%d0:w:2)
	pea	%pc@@(0)@@(%d0:w:2)
	pea	%pc@@(0)@@(2000)
	pea	([1000,%pc],%d0:w:2,2000)
	pea	([1000,%pc],%d0:w:2)
	pea	([1000,%pc],2000)
	pea	([%pc],%d0:w:2,2000)
	pea	([%pc],%d0:w:2)
	pea	([%pc],2000)
	pea	%zpc@@(1000)@@(2000,%d0:w:2)
	pea	%zpc@@(1000)@@(%d0:w:2)
	pea	%zpc@@(1000)@@(2000)
	pea	%zpc@@(0)@@(2000,%d0:w:2)
	pea	%zpc@@(0)@@(%d0:w:2)
	pea	%zpc@@(0)@@(2000)
	pea	([1000,%zpc],%d0:w:2,2000)
	pea	([1000,%zpc],%d0:w:2)
	pea	([1000,%zpc],2000)
	pea	([%zpc],%d0:w:2,2000)
	pea	([%zpc],%d0:w:2)
	pea	([%zpc],2000)

	| Program counter memory indirect preindexed
	pea	%pc@@(1000,%d0:w:2)@@(2000)
	pea	%pc@@(1000,%d0:w:2)@@(0)
	pea	%pc@@(%d0:w:2)@@(2000)
	pea	%pc@@(%d0:w:2)@@(0)
	pea	([1000,%pc,%d0:w:2],2000)
	pea	([1000,%d0:w:2,%pc],2000)
	pea	([1000,%d0,%pc],2000)
	pea	([1000,%a1,%pc],2000)
	pea	([1000,%pc,%a1],2000)
	pea	([1000,%a1:w:2,%pc],2000)
	pea	([1000,%pc,%d0:w:2])
	pea	([1000,%d0,%pc])
	pea	([1000,%a1,%pc])
	pea	([%pc,%d0:w:2],2000)
	pea	([%pc,%a0],2000)
	pea	([%pc,%d0:w:2])
	pea	([%d0,%pc])
	pea	%zpc@@(1000,%d0:w:2)@@(2000)
	pea	%zpc@@(1000,%d0:w:2)@@(0)
	pea	%zpc@@(%d0:w:2)@@(2000)
	pea	%zpc@@(%d0:w:2)@@(0)
	pea	([1000,%zpc,%d0:w:2],2000)
	pea	([1000,%d0:w:2,%zpc],2000)
	pea	([1000,%d0,%zpc],2000)
	pea	([1000,%a1,%zpc],2000)
	pea	([1000,%zpc,%a1],2000)
	pea	([1000,%a1:w:2,%zpc],2000)
	pea	([1000,%zpc,%d0:w:2])
	pea	([1000,%d0,%zpc])
	pea	([1000,%a1,%zpc])
	pea	([%zpc,%d0:w:2],2000)
	pea	([%zpc,%a0],2000)
	pea	([%zpc,%d0:w:2])
	pea	([%d0,%zpc])

	| Absolute short
	tstl	4
	tstl	4.w
	tstl	(4).w

	| Absolute long
	tstl	100000
	tstl	8.l
	tstl	(8).l

	| Immediate
	addib	&1,%d0
	addiw	&1,%d0
	addil	&1,%d0
	addqb	&1,%d0
@


1.2
log
@Help stupid cvs fixing basic conflicts.
@
text
@@


1.1
log
@Initial revision
@
text
@a3 1
	.globl	foo
d154 4
a157 4
	tstl	%pc@@(8)
	tstl	(8,%pc)
	tstl	8(%pc)
	tstl	foo
d160 11
a170 11
	tstl	%pc@@(8,%d0:w:2)
	tstl	%pc@@(%d0:w:2)
	tstl	(8,%pc,%d0.w*2)
	tstl	(8,%d0,%pc)
	tstl	(8,%a0,%pc)
	tstl	8(%pc,%d0.w*2)
	tstl	8(%d0,%pc)
	tstl	8(%a0,%pc)
	tstl	(%pc,%d0.w*2)
	tstl	(%d0,%pc)
	tstl	(%a0,%pc)
d173 22
a194 22
	tstl	%pc@@(1000,%d0:w:2)
	tstl	%pc@@(100000)
	tstl	(1000,%pc,%d0.w*2)
	tstl	(1000,%d0,%pc)
	tstl	(1000,%a1.w*2,%pc)
	tstl	(1000,%a1,%pc)
	tstl	1000(%pc,%d0.w*2)
	tstl	1000(%d0,%pc)
	tstl	1000(%a1,%pc)
	tstl	(100000,%pc)
	tstl	100000(%pc)
	tstl	%zpc@@(1000,%d0:w:2)
	tstl	%zpc@@(100000)
	tstl	(1000,%zpc,%d0.w*2)
	tstl	(1000,%d0,%zpc)
	tstl	(1000,%a1.w*2,%zpc)
	tstl	(1000,%a1,%zpc)
	tstl	1000(%zpc,%d0.w*2)
	tstl	1000(%d0,%zpc)
	tstl	1000(%a1,%zpc)
	tstl	(100000,%zpc)
	tstl	100000(%zpc)
d197 24
a220 24
	tstl	%pc@@(1000)@@(2000,%d0:w:2)
	tstl	%pc@@(1000)@@(%d0:w:2)
	tstl	%pc@@(1000)@@(2000)
	tstl	%pc@@(0)@@(2000,%d0:w:2)
	tstl	%pc@@(0)@@(%d0:w:2)
	tstl	%pc@@(0)@@(2000)
	tstl	([1000,%pc],%d0:w:2,2000)
	tstl	([1000,%pc],%d0:w:2)
	tstl	([1000,%pc],2000)
	tstl	([%pc],%d0:w:2,2000)
	tstl	([%pc],%d0:w:2)
	tstl	([%pc],2000)
	tstl	%zpc@@(1000)@@(2000,%d0:w:2)
	tstl	%zpc@@(1000)@@(%d0:w:2)
	tstl	%zpc@@(1000)@@(2000)
	tstl	%zpc@@(0)@@(2000,%d0:w:2)
	tstl	%zpc@@(0)@@(%d0:w:2)
	tstl	%zpc@@(0)@@(2000)
	tstl	([1000,%zpc],%d0:w:2,2000)
	tstl	([1000,%zpc],%d0:w:2)
	tstl	([1000,%zpc],2000)
	tstl	([%zpc],%d0:w:2,2000)
	tstl	([%zpc],%d0:w:2)
	tstl	([%zpc],2000)
d223 34
a256 34
	tstl	%pc@@(1000,%d0:w:2)@@(2000)
	tstl	%pc@@(1000,%d0:w:2)@@(0)
	tstl	%pc@@(%d0:w:2)@@(2000)
	tstl	%pc@@(%d0:w:2)@@(0)
	tstl	([1000,%pc,%d0:w:2],2000)
	tstl	([1000,%d0:w:2,%pc],2000)
	tstl	([1000,%d0,%pc],2000)
	tstl	([1000,%a1,%pc],2000)
	tstl	([1000,%pc,%a1],2000)
	tstl	([1000,%a1:w:2,%pc],2000)
	tstl	([1000,%pc,%d0:w:2])
	tstl	([1000,%d0,%pc])
	tstl	([1000,%a1,%pc])
	tstl	([%pc,%d0:w:2],2000)
	tstl	([%pc,%a0],2000)
	tstl	([%pc,%d0:w:2])
	tstl	([%d0,%pc])
	tstl	%zpc@@(1000,%d0:w:2)@@(2000)
	tstl	%zpc@@(1000,%d0:w:2)@@(0)
	tstl	%zpc@@(%d0:w:2)@@(2000)
	tstl	%zpc@@(%d0:w:2)@@(0)
	tstl	([1000,%zpc,%d0:w:2],2000)
	tstl	([1000,%d0:w:2,%zpc],2000)
	tstl	([1000,%d0,%zpc],2000)
	tstl	([1000,%a1,%zpc],2000)
	tstl	([1000,%zpc,%a1],2000)
	tstl	([1000,%a1:w:2,%zpc],2000)
	tstl	([1000,%zpc,%d0:w:2])
	tstl	([1000,%d0,%zpc])
	tstl	([1000,%a1,%zpc])
	tstl	([%zpc,%d0:w:2],2000)
	tstl	([%zpc,%a0],2000)
	tstl	([%zpc,%d0:w:2])
	tstl	([%d0,%zpc])
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d4 1
d155 4
a158 4
	pea	%pc@@(8)
	pea	(8,%pc)
	pea	8(%pc)
	pea	foo
d161 11
a171 11
	pea	%pc@@(8,%d0:w:2)
	pea	%pc@@(%d0:w:2)
	pea	(8,%pc,%d0.w*2)
	pea	(8,%d0,%pc)
	pea	(8,%a0,%pc)
	pea	8(%pc,%d0.w*2)
	pea	8(%d0,%pc)
	pea	8(%a0,%pc)
	pea	(%pc,%d0.w*2)
	pea	(%d0,%pc)
	pea	(%a0,%pc)
d174 22
a195 22
	pea	%pc@@(1000,%d0:w:2)
	pea	%pc@@(100000)
	pea	(1000,%pc,%d0.w*2)
	pea	(1000,%d0,%pc)
	pea	(1000,%a1.w*2,%pc)
	pea	(1000,%a1,%pc)
	pea	1000(%pc,%d0.w*2)
	pea	1000(%d0,%pc)
	pea	1000(%a1,%pc)
	pea	(100000,%pc)
	pea	100000(%pc)
	pea	%zpc@@(1000,%d0:w:2)
	pea	%zpc@@(100000)
	pea	(1000,%zpc,%d0.w*2)
	pea	(1000,%d0,%zpc)
	pea	(1000,%a1.w*2,%zpc)
	pea	(1000,%a1,%zpc)
	pea	1000(%zpc,%d0.w*2)
	pea	1000(%d0,%zpc)
	pea	1000(%a1,%zpc)
	pea	(100000,%zpc)
	pea	100000(%zpc)
d198 24
a221 24
	pea	%pc@@(1000)@@(2000,%d0:w:2)
	pea	%pc@@(1000)@@(%d0:w:2)
	pea	%pc@@(1000)@@(2000)
	pea	%pc@@(0)@@(2000,%d0:w:2)
	pea	%pc@@(0)@@(%d0:w:2)
	pea	%pc@@(0)@@(2000)
	pea	([1000,%pc],%d0:w:2,2000)
	pea	([1000,%pc],%d0:w:2)
	pea	([1000,%pc],2000)
	pea	([%pc],%d0:w:2,2000)
	pea	([%pc],%d0:w:2)
	pea	([%pc],2000)
	pea	%zpc@@(1000)@@(2000,%d0:w:2)
	pea	%zpc@@(1000)@@(%d0:w:2)
	pea	%zpc@@(1000)@@(2000)
	pea	%zpc@@(0)@@(2000,%d0:w:2)
	pea	%zpc@@(0)@@(%d0:w:2)
	pea	%zpc@@(0)@@(2000)
	pea	([1000,%zpc],%d0:w:2,2000)
	pea	([1000,%zpc],%d0:w:2)
	pea	([1000,%zpc],2000)
	pea	([%zpc],%d0:w:2,2000)
	pea	([%zpc],%d0:w:2)
	pea	([%zpc],2000)
d224 34
a257 34
	pea	%pc@@(1000,%d0:w:2)@@(2000)
	pea	%pc@@(1000,%d0:w:2)@@(0)
	pea	%pc@@(%d0:w:2)@@(2000)
	pea	%pc@@(%d0:w:2)@@(0)
	pea	([1000,%pc,%d0:w:2],2000)
	pea	([1000,%d0:w:2,%pc],2000)
	pea	([1000,%d0,%pc],2000)
	pea	([1000,%a1,%pc],2000)
	pea	([1000,%pc,%a1],2000)
	pea	([1000,%a1:w:2,%pc],2000)
	pea	([1000,%pc,%d0:w:2])
	pea	([1000,%d0,%pc])
	pea	([1000,%a1,%pc])
	pea	([%pc,%d0:w:2],2000)
	pea	([%pc,%a0],2000)
	pea	([%pc,%d0:w:2])
	pea	([%d0,%pc])
	pea	%zpc@@(1000,%d0:w:2)@@(2000)
	pea	%zpc@@(1000,%d0:w:2)@@(0)
	pea	%zpc@@(%d0:w:2)@@(2000)
	pea	%zpc@@(%d0:w:2)@@(0)
	pea	([1000,%zpc,%d0:w:2],2000)
	pea	([1000,%d0:w:2,%zpc],2000)
	pea	([1000,%d0,%zpc],2000)
	pea	([1000,%a1,%zpc],2000)
	pea	([1000,%zpc,%a1],2000)
	pea	([1000,%a1:w:2,%zpc],2000)
	pea	([1000,%zpc,%d0:w:2])
	pea	([1000,%d0,%zpc])
	pea	([1000,%a1,%zpc])
	pea	([%zpc,%d0:w:2],2000)
	pea	([%zpc,%a0],2000)
	pea	([%zpc,%d0:w:2])
	pea	([%d0,%zpc])
@

