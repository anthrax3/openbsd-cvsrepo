head	1.5;
access;
symbols
	OPENBSD_3_5:1.4.0.8
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.6
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	binutils-2_11_2:1.1.1.4
	OPENBSD_3_1:1.3.0.8
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	BINUTILS-2_10_1:1.1.1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	BINUTILS-2_10:1.1.1.3
	OPENBSD_2_7:1.2.0.18
	OPENBSD_2_7_BASE:1.2
	new-binutils:1.2.0.16
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	BINUTILS-2_8_1:1.1.1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	CYGNUS-961112:1.1.1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	CYGNUS-960904:1.1.1.2
	CYGNUS-960609:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2004.05.17.21.54.42;	author drahn;	state dead;
branches;
next	1.4;

1.4
date	2002.05.13.17.07.39;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.12.19.12.21;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.10.52.53;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.07.38;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.07.38;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.09.19.42.24;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.09.12.14.47.20;	author espie;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.05.13.13.42.57;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@# Some generic SPARC and SPARC64 tests

# FIXME: The tests here aren't really bullet proof.  A mistake in the opcode
# table can slip through since we use the same table for assembly and
# disassembly.  The way to fix this is to include a hex dump of the insns
# and test that as well.  Later.

# Find out if these binutils are either sparc64*-*-* or
# sparc*-*-* with --enable-targets=sparc64-*-*
proc gas_64_check { } {
    global NM
    global NMFLAGS
    global srcdir

    catch "exec $srcdir/lib/run $NM $NMFLAGS --help" nm_help
    return [regexp "elf64\[_-\]sparc" $nm_help];
}

if [istarget sparc*-*-*] {
    run_dump_test "synth"
    run_dump_test "unalign"
    if [gas_64_check] {
	run_dump_test "asi"
	run_dump_test "membar"
	run_dump_test "prefetch"
	run_dump_test "set64"
	run_dump_test "synth64"
	run_dump_test "rdpr"
	run_dump_test "wrpr"
	run_dump_test "reloc64"
    }
}

if [istarget sparclet*-*-*] {
    run_dump_test "splet"
    run_dump_test "splet-2"
}
@


1.4
log
@resolve conflicts.
@
text
@@


1.3
log
@Help stupid cvs fixing basic conflicts.
@
text
@d21 1
@


1.2
log
@Bring Cygnus versions into the trunk, keeping our local patches
@
text
@d8 11
d21 10
a30 10
}


if [istarget sparc64*-*-*] {
    run_dump_test "asi"
    run_dump_test "membar"
    run_dump_test "prefetch"
    run_dump_test "synth64"
    run_dump_test "rdpr"
    run_dump_test "wrpr"
d35 1
@


1.1
log
@Initial revision
@
text
@d8 3
a10 2
if [istarget sparc*-*-*] then {
    set sparc64 [istarget sparc64*-*-*]
d12 12
a23 6
    if $sparc64 { run_dump_test "asi" }
    if $sparc64 { run_dump_test "membar" }
    if $sparc64 { run_dump_test "prefetch" }
    if $sparc64 { run_dump_test "synth64" }
    if $sparc64 { run_dump_test "rdpr" }
    if $sparc64 { run_dump_test "wrpr" }
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import of binutils, gas, ld & gprof from Cygnus 960609 tree
@
text
@d8 2
a9 3
if [istarget sparc*-*-*] {
    run_dump_test "synth"
}
d11 6
a16 12

if [istarget sparc64*-*-*] {
    run_dump_test "asi"
    run_dump_test "membar"
    run_dump_test "prefetch"
    run_dump_test "synth64"
    run_dump_test "rdpr"
    run_dump_test "wrpr"
}

if [istarget sparclet*-*-*] {
    run_dump_test "splet"
@


1.1.1.3
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d8 3
a10 6
# Find out if these binutils are either sparc64*-*-* or
# sparc*-*-* with --enable-targets=sparc64-*-*
proc gas_64_check { } {
    global NM
    global NMFLAGS
    global srcdir
a11 3
    catch "exec $srcdir/lib/run $NM $NMFLAGS --help" nm_help
    return [regexp "elf64\[_-\]sparc" $nm_help];
}
d13 7
a19 12
if [istarget sparc*-*-*] {
    run_dump_test "synth"
    if [gas_64_check] {
	run_dump_test "asi"
	run_dump_test "membar"
	run_dump_test "prefetch"
	run_dump_test "set64"
	run_dump_test "synth64"
	run_dump_test "rdpr"
	run_dump_test "wrpr"
	run_dump_test "reloc64"
    }
a23 1
    run_dump_test "splet-2"
@


1.1.1.4
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@a20 1
    run_dump_test "unalign"
@


