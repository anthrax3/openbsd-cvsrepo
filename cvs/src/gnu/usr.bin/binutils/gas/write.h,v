head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.50
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.48
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.44
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.46
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.38
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.42
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.40
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.36
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.34
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.32
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.30
	OPENBSD_5_0:1.10.0.28
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.26
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.24
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.20
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.22
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.18
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.16
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.14
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.12
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.10
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.8
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.6
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.4
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	BINUTILS_2_15:1.1.1.8
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	BINUTILS-2_14:1.1.1.7
	OPENBSD_3_5:1.8.0.8
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.6
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	binutils-2_11_2:1.1.1.6
	OPENBSD_3_1:1.7.0.8
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.6
	OPENBSD_3_0_BASE:1.7
	BINUTILS-2_10_1:1.1.1.5
	OPENBSD_2_9:1.7.0.4
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	BINUTILS-2_10:1.1.1.5
	OPENBSD_2_7:1.5.0.16
	OPENBSD_2_7_BASE:1.5
	new-binutils:1.5.0.14
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	BINUTILS-2_8_1:1.1.1.4
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	CYGNUS-961112:1.1.1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	CYGNUS-960904:1.1.1.3
	CYGNUS-960609:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2004.11.02.20.45.25;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2004.05.17.21.54.29;	author drahn;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.13.17.07.34;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2000.09.12.22.24.59;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2000.09.12.19.11.44;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	97.01.21.10.33.04;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.11.23.03.34.31;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.09.04.19.05.04;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.10.50.51;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.05.47;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.05.47;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.09.19.39.51;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.09.04.17.43.56;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	97.05.29.09.22.24;	author niklas;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2000.09.12.14.46.16;	author espie;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2002.05.13.13.32.43;	author fgsch;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2004.05.17.20.42.26;	author drahn;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2004.11.02.20.22.45;	author miod;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Merge conflicts, bringing our changes back in:
- extra $(SHELL) and sugar for make (so that files not mode +x still work)
- safer temp file handling
- our W^X binary layout changes in ld
- OpenBSD policy for library file selection in ld
- arm and m88k changes which were not merged in time for official 2.15
- bfd core file handling
- a couple typos

New for 2.15:
- ld(1) and as(1) manpages now generated at build time
- binutils/stabs.c reverted to use our in-tree libiberty for now
- we still use our VIA C3 crypto code over stock binutils, as it recognizes
  more instructions
- new emulations for OpenBSD on mips64 machines, to help OpenBSD/sgi
- relaxed %f# handling in gas on OpenBSD/sparc64 (same as was in 2.14)

Tested on all platforms by various people; special thanks to sturm@@ and
otto@@.
@
text
@/* write.h
   Copyright 1987, 1992, 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2001
   Free Software Foundation, Inc.

   This file is part of GAS, the GNU Assembler.

   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to the Free
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.  */

#ifndef __write_h__
#define __write_h__

#ifndef TC_I960
#ifdef hpux
#define EXEC_MACHINE_TYPE HP9000S200_ID
#endif
#endif /* TC_I960 */

#ifndef BFD_ASSEMBLER

#ifndef LOCAL_LABEL
#define LOCAL_LABEL(name) (name [0] == 'L' )
#endif

#define S_LOCAL_NAME(s) (LOCAL_LABEL (S_GET_NAME (s)))

#endif /* ! BFD_ASSEMBLER */

/* This is the name of a fake symbol which will never appear in the
   assembler output.  S_IS_LOCAL detects it because of the \001.  */
#ifndef FAKE_LABEL_NAME
#define FAKE_LABEL_NAME "L0\001"
#endif

#include "bit_fix.h"

/*
 * FixSs may be built up in any order.
 */

struct fix
{
  /* These small fields are grouped together for compactness of
     this structure, and efficiency of access on some architectures.  */

  /* pc-relative offset adjust (only used by m68k) */
  char fx_pcrel_adjust;

  /* How many bytes are involved? */
  unsigned char fx_size;

  /* Is this a pc-relative relocation?  */
  unsigned fx_pcrel : 1;

  /* Is this a relocation to a procedure linkage table entry?  If so,
     some of the reductions we try to apply are invalid.  A better way
     might be to represent PLT entries with different kinds of
     symbols, and use normal relocations (with undefined symbols);
     look into it for version 2.6.  */
  unsigned fx_plt : 1;

  /* Is this value an immediate displacement?  */
  /* Only used on i960 and ns32k; merge it into TC_FIX_TYPE sometime.  */
  unsigned fx_im_disp : 2;

  /* A bit for the CPU specific code.
     This probably can be folded into tc_fix_data, below.  */
  unsigned fx_tcbit : 1;

  /* Has this relocation already been applied?  */
  unsigned fx_done : 1;

  /* Suppress overflow complaints on large addends.  This is used
     in the PowerPC ELF config to allow large addends on the
     BFD_RELOC_{LO16,HI16,HI16_S} relocations.

     @@@@ Can this be determined from BFD?  */
  unsigned fx_no_overflow : 1;

  /* The value is signed when checking for overflow.  */
  unsigned fx_signed : 1;

  /* Which frag does this fix apply to?  */
  fragS *fx_frag;

  /* Where is the first byte to fix up?  */
  long fx_where;

  /* NULL or Symbol whose value we add in.  */
  symbolS *fx_addsy;

  /* NULL or Symbol whose value we subtract.  */
  symbolS *fx_subsy;

  /* Absolute number we add in.  */
  valueT fx_offset;

  /* The value of dot when the fixup expression was parsed.  */
  addressT fx_dot_value;

  /* Next fixS in linked list, or NULL.  */
  struct fix *fx_next;

  /* If NULL, no bitfix's to do.  */
  /* Only i960-coff and ns32k use this, and i960-coff stores an
     integer.  This can probably be folded into tc_fix_data, below.
     @@@@ Alpha also uses it, but only to disable certain relocation
     processing.  */
  bit_fixS *fx_bit_fixP;

#ifdef BFD_ASSEMBLER
  bfd_reloc_code_real_type fx_r_type;
#else
#ifdef NEED_FX_R_TYPE
  /* Hack for machines where the type of reloc can't be
     worked out by looking at how big it is.  */
  int fx_r_type;
#endif
#endif

  /* This field is sort of misnamed.  It appears to be a sort of random
     scratch field, for use by the back ends.  The main gas code doesn't
     do anything but initialize it to zero.  The use of it does need to
     be coordinated between the cpu and format files, though.  E.g., some
     coff targets pass the `addend' field from the cpu file via this
     field.  I don't know why the `fx_offset' field above can't be used
     for that; investigate later and document. KR  */
  valueT fx_addnumber;

  /* The location of the instruction which created the reloc, used
     in error messages.  */
  char *fx_file;
  unsigned fx_line;

#ifdef USING_CGEN
  struct {
    /* CGEN_INSN entry for this instruction.  */
    const struct cgen_insn *insn;
    /* Target specific data, usually reloc number.  */
    int opinfo;
  } fx_cgen;
#endif

#ifdef TC_FIX_TYPE
  /* Location where a backend can attach additional data
     needed to perform fixups.  */
  TC_FIX_TYPE tc_fix_data;
#endif
};

typedef struct fix fixS;

extern int finalize_syms;
extern symbolS *abs_section_sym;
extern addressT dot_value;

#ifndef BFD_ASSEMBLER
extern char *next_object_file_charP;

#ifndef MANY_SEGMENTS
COMMON fixS *text_fix_root, *text_fix_tail;	/* Chains fixSs.  */
COMMON fixS *data_fix_root, *data_fix_tail;	/* Chains fixSs.  */
COMMON fixS *bss_fix_root, *bss_fix_tail;	/* Chains fixSs.  */
extern struct frag *text_last_frag;		/* Last frag in segment.  */
extern struct frag *data_last_frag;		/* Last frag in segment.  */
#endif
COMMON fixS **seg_fix_rootP, **seg_fix_tailP;	/* -> one of above.  */
#endif

extern long string_byte_count;
extern int section_alignment[];

extern bit_fixS *bit_fix_new
  (int size, int offset, long base_type, long base_adj, long min,
   long max, long add);
extern void append (char **charPP, char *fromP, unsigned long length);
extern void record_alignment (segT seg, int align);
extern int get_recorded_alignment (segT seg);
extern void subsegs_finish (void);
extern void write_object_file (void);
extern long relax_frag (segT, fragS *, long);
extern int relax_segment (struct frag * seg_frag_root, segT seg_type);

extern void number_to_chars_littleendian (char *, valueT, int);
extern void number_to_chars_bigendian (char *, valueT, int);

#ifdef BFD_ASSEMBLER
extern fixS *fix_new
  (fragS * frag, int where, int size, symbolS * add_symbol,
   offsetT offset, int pcrel, bfd_reloc_code_real_type r_type);
extern fixS *fix_new_exp
  (fragS * frag, int where, int size, expressionS *exp, int pcrel,
   bfd_reloc_code_real_type r_type);
#else
extern fixS *fix_new
  (fragS * frag, int where, int size, symbolS * add_symbol,
   offsetT offset, int pcrel, int r_type);
extern fixS *fix_new_exp
  (fragS * frag, int where, int size, expressionS *exp, int pcrel,
   int r_type);
#endif

extern void write_print_statistics (FILE *);

#endif /* __write_h__ */
@


1.9
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@d43 1
d45 1
d186 9
a194 10
  PARAMS ((int size, int offset, long base_type, long base_adj, long min,
	   long max, long add));
extern void append PARAMS ((char **charPP, char *fromP, unsigned long length));
extern void record_alignment PARAMS ((segT seg, int align));
extern int get_recorded_alignment PARAMS ((segT seg));
extern void subsegs_finish PARAMS ((void));
extern void write_object_file PARAMS ((void));
extern long relax_frag PARAMS ((segT, fragS *, long));
extern int relax_segment
  PARAMS ((struct frag * seg_frag_root, segT seg_type));
d196 2
a197 2
extern void number_to_chars_littleendian PARAMS ((char *, valueT, int));
extern void number_to_chars_bigendian    PARAMS ((char *, valueT, int));
d201 2
a202 2
  PARAMS ((fragS * frag, int where, int size, symbolS * add_symbol,
	   offsetT offset, int pcrel, bfd_reloc_code_real_type r_type));
d204 2
a205 2
  PARAMS ((fragS * frag, int where, int size, expressionS *exp, int pcrel,
	   bfd_reloc_code_real_type r_type));
d208 2
a209 2
  PARAMS ((fragS * frag, int where, int size, symbolS * add_symbol,
	   offsetT offset, int pcrel, int r_type));
d211 2
a212 2
  PARAMS ((fragS * frag, int where, int size, expressionS *exp, int pcrel,
	   int r_type));
d215 1
a215 1
extern void write_print_statistics PARAMS ((FILE *));
@


1.8
log
@resolve conflicts.
@
text
@d108 3
d163 4
d192 1
a192 1
extern void relax_segment
@


1.7
log
@Resolve other problems that dumb cvs can't find out by itself.

(trivial part done, `interesting' patches remain)
@
text
@d2 2
a3 1
   Copyright (C) 1987, 92, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.
d99 1
a99 1
  /* NULL or Symbol whose value we add in. */
d102 1
a102 1
  /* NULL or Symbol whose value we subtract. */
d105 1
a105 1
  /* Absolute number we add in. */
d164 5
a168 5
COMMON fixS *text_fix_root, *text_fix_tail;	/* Chains fixSs. */
COMMON fixS *data_fix_root, *data_fix_tail;	/* Chains fixSs. */
COMMON fixS *bss_fix_root, *bss_fix_tail;	/* Chains fixSs. */
extern struct frag *text_last_frag;		/* Last frag in segment. */
extern struct frag *data_last_frag;		/* Last frag in segment. */
d170 1
a170 1
COMMON fixS **seg_fix_rootP, **seg_fix_tailP;	/* -> one of above. */
d181 1
d184 1
a184 1
extern long relax_frag PARAMS ((fragS *, long));
a209 1
/* end of write.h */
@


1.6
log
@Help stupid cvs fixing basic conflicts.
@
text
@d2 1
a2 1
   Copyright (C) 1987, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.
d17 3
a19 2
   along with GAS; see the file COPYING.  If not, write to
   the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d30 2
d34 5
a38 1
#endif /* LOCAL_LABEL */
d40 2
a41 1
#ifndef FAKE_LABEL_NAME
a42 3
#endif

#define S_LOCAL_NAME(s) (LOCAL_LABEL(S_GET_NAME(s)))
d89 3
a103 5
#if defined(TE_NetBSD) || defined (TE_OpenBSD)
  /* NULL or __GLOBAL_OFFSET_TABLE_ . */
  symbolS *fx_gotsy;
#endif

d182 1
@


1.5
log
@Clone NetBSD config for us, add handling of temporary local labels
@
text
@d20 3
d50 1
a50 1
  /* pc-relative offset adjust */
d138 9
d177 1
d203 1
@


1.4
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d93 1
a93 1
#ifdef TE_NetBSD
@


1.3
log
@Merge the Cygnus 960904 sources
@
text
@d93 5
@


1.2
log
@Bring Cygnus versions into the trunk, keeping our local patches
@
text
@d2 1
a2 2

   Copyright (C) 1987, 1992, 1993 Free Software Foundation, Inc.
d155 8
a162 6
bit_fixS *bit_fix_new PARAMS ((int size, int offset, long base_type,
			       long base_adj, long min, long max, long add));
void append PARAMS ((char **charPP, char *fromP, unsigned long length));
void record_alignment PARAMS ((segT seg, int align));
void write_object_file PARAMS ((void));
void relax_segment PARAMS ((struct frag * seg_frag_root, segT seg_type));
d164 2
a165 2
void number_to_chars_littleendian PARAMS ((char *, valueT, int));
void number_to_chars_bigendian    PARAMS ((char *, valueT, int));
d168 6
a173 6
fixS *fix_new PARAMS ((fragS * frag, int where, int size,
		       symbolS * add_symbol, offsetT offset, int pcrel,
		       bfd_reloc_code_real_type r_type));
fixS *fix_new_exp PARAMS ((fragS * frag, int where, int size,
			   expressionS *exp, int pcrel,
			   bfd_reloc_code_real_type r_type));
d175 6
a180 5
fixS *fix_new PARAMS ((fragS * frag, int where, int size,
		       symbolS * add_symbol, offsetT offset, int pcrel,
		       int r_type));
fixS *fix_new_exp PARAMS ((fragS * frag, int where, int size,
			   expressionS *exp, int pcrel, int r_type));
d182 2
@


1.1
log
@Initial revision
@
text
@d102 3
a104 1
     integer.  This can probably be folded into tc_fix_data, below.  */
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import of binutils, gas, ld & gprof from Cygnus 960609 tree
@
text
@d102 1
a102 3
     integer.  This can probably be folded into tc_fix_data, below.
     @@@@ Alpha also uses it, but only to disable certain relocation
     processing.  */
@


1.1.1.3
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@d2 2
a3 1
   Copyright (C) 1987, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.
d156 6
a161 8
extern bit_fixS *bit_fix_new
  PARAMS ((int size, int offset, long base_type, long base_adj, long min,
	   long max, long add));
extern void append PARAMS ((char **charPP, char *fromP, unsigned long length));
extern void record_alignment PARAMS ((segT seg, int align));
extern void write_object_file PARAMS ((void));
extern void relax_segment
  PARAMS ((struct frag * seg_frag_root, segT seg_type));
d163 2
a164 2
extern void number_to_chars_littleendian PARAMS ((char *, valueT, int));
extern void number_to_chars_bigendian    PARAMS ((char *, valueT, int));
d167 6
a172 6
extern fixS *fix_new
  PARAMS ((fragS * frag, int where, int size, symbolS * add_symbol,
	   offsetT offset, int pcrel, bfd_reloc_code_real_type r_type));
extern fixS *fix_new_exp
  PARAMS ((fragS * frag, int where, int size, expressionS *exp, int pcrel,
	   bfd_reloc_code_real_type r_type));
d174 5
a178 6
extern fixS *fix_new
  PARAMS ((fragS * frag, int where, int size, symbolS * add_symbol,
	   offsetT offset, int pcrel, int r_type));
extern fixS *fix_new_exp
  PARAMS ((fragS * frag, int where, int size, expressionS *exp, int pcrel,
	   int r_type));
a179 2

extern void write_print_statistics PARAMS ((FILE *));
@


1.1.1.4
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@d2 1
a2 1
   Copyright (C) 1987, 92, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.
d17 2
a18 3
   along with GAS; see the file COPYING.  If not, write to the Free
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.  */
a25 2
#ifndef BFD_ASSEMBLER

d28 4
d34 1
a34 7
#define S_LOCAL_NAME(s) (LOCAL_LABEL (S_GET_NAME (s)))

#endif /* ! BFD_ASSEMBLER */

/* This is the name of a fake symbol which will never appear in the
   assembler output.  S_IS_LOCAL detects it because of the \001.  */
#define FAKE_LABEL_NAME "L0\001"
a80 3
  /* The value is signed when checking for overflow.  */
  unsigned fx_signed : 1;

a160 1
extern long relax_frag PARAMS ((fragS *, long));
@


1.1.1.5
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@a20 3
#ifndef __write_h__
#define __write_h__

d52 1
a52 1
  /* pc-relative offset adjust (only used by m68k) */
a137 9
#ifdef USING_CGEN
  struct {
    /* CGEN_INSN entry for this instruction.  */
    const struct cgen_insn *insn;
    /* Target specific data, usually reloc number.  */
    int opinfo;
  } fx_cgen;
#endif

a167 1
extern void subsegs_finish PARAMS ((void));
a193 1
#endif /* __write_h__ */
@


1.1.1.6
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d2 1
a2 2
   Copyright 1987, 1992, 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2001
   Free Software Foundation, Inc.
d98 1
a98 1
  /* NULL or Symbol whose value we add in.  */
d101 1
a101 1
  /* NULL or Symbol whose value we subtract.  */
d104 1
a104 1
  /* Absolute number we add in.  */
d163 5
a167 5
COMMON fixS *text_fix_root, *text_fix_tail;	/* Chains fixSs.  */
COMMON fixS *data_fix_root, *data_fix_tail;	/* Chains fixSs.  */
COMMON fixS *bss_fix_root, *bss_fix_tail;	/* Chains fixSs.  */
extern struct frag *text_last_frag;		/* Last frag in segment.  */
extern struct frag *data_last_frag;		/* Last frag in segment.  */
d169 1
a169 1
COMMON fixS **seg_fix_rootP, **seg_fix_tailP;	/* -> one of above.  */
a179 1
extern int get_recorded_alignment PARAMS ((segT seg));
d182 1
a182 1
extern long relax_frag PARAMS ((segT, fragS *, long));
d208 1
@


1.1.1.7
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@a107 3
  /* The value of dot when the fixup expression was parsed.  */
  addressT fx_dot_value;

a159 4
extern int finalize_syms;
extern symbolS *abs_section_sym;
extern addressT dot_value;

d185 1
a185 1
extern int relax_segment
@


1.1.1.8
log
@Binutils 2.15, with testsuites removed, and without gdb and libiberty.
@
text
@a42 1
#ifndef FAKE_LABEL_NAME
a43 1
#endif
d184 10
a193 9
  (int size, int offset, long base_type, long base_adj, long min,
   long max, long add);
extern void append (char **charPP, char *fromP, unsigned long length);
extern void record_alignment (segT seg, int align);
extern int get_recorded_alignment (segT seg);
extern void subsegs_finish (void);
extern void write_object_file (void);
extern long relax_frag (segT, fragS *, long);
extern int relax_segment (struct frag * seg_frag_root, segT seg_type);
d195 2
a196 2
extern void number_to_chars_littleendian (char *, valueT, int);
extern void number_to_chars_bigendian (char *, valueT, int);
d200 2
a201 2
  (fragS * frag, int where, int size, symbolS * add_symbol,
   offsetT offset, int pcrel, bfd_reloc_code_real_type r_type);
d203 2
a204 2
  (fragS * frag, int where, int size, expressionS *exp, int pcrel,
   bfd_reloc_code_real_type r_type);
d207 2
a208 2
  (fragS * frag, int where, int size, symbolS * add_symbol,
   offsetT offset, int pcrel, int r_type);
d210 2
a211 2
  (fragS * frag, int where, int size, expressionS *exp, int pcrel,
   int r_type);
d214 1
a214 1
extern void write_print_statistics (FILE *);
@


