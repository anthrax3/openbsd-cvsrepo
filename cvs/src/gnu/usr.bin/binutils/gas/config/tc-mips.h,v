head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.20
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.16
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.12
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.14
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.6
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.10
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.8
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.4
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.7.0.32
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.30
	OPENBSD_5_0:1.7.0.28
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.26
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.24
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.20
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.22
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.18
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.16
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.14
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.12
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.10
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.8
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.6
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	BINUTILS_2_15:1.1.1.8
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	BINUTILS-2_14:1.1.1.7
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	binutils-2_11_2:1.1.1.6
	OPENBSD_3_1:1.4.0.8
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.6
	OPENBSD_3_0_BASE:1.4
	BINUTILS-2_10_1:1.1.1.5
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	BINUTILS-2_10:1.1.1.5
	OPENBSD_2_7:1.3.0.18
	OPENBSD_2_7_BASE:1.3
	new-binutils:1.3.0.16
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	BINUTILS-2_8_1:1.1.1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	CYGNUS-961112:1.1.1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	CYGNUS-960904:1.1.1.3
	CYGNUS-960609:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2013.02.09.22.00.00;	author brad;	state Exp;
branches;
next	1.8;

1.8
date	2013.01.07.22.23.05;	author bcallah;	state Exp;
branches;
next	1.7;

1.7
date	2004.11.02.20.45.29;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2004.05.17.21.54.31;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.13.17.07.36;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.12.19.11.52;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	96.09.04.19.06.05;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.10.51.32;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.06.10;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.06.10;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.09.19.40.46;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.09.04.17.45.02;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	97.05.29.09.23.14;	author niklas;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2000.09.12.14.46.29;	author espie;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2002.05.13.13.36.29;	author fgsch;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2004.05.17.20.42.32;	author drahn;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2004.11.02.20.22.54;	author miod;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Add CFI support for MIPS.

Backported from binutils 2.17.

ok miod@@
@
text
@/* tc-mips.h -- header file for tc-mips.c.
   Copyright 1993, 1994, 1995, 1996, 1997, 2000, 2001, 2002, 2003
   Free Software Foundation, Inc.
   Contributed by the OSF and Ralph Campbell.
   Written by Keith Knowles and Ralph Campbell, working independently.
   Modified for ECOFF support by Ian Lance Taylor of Cygnus Support.

   This file is part of GAS.

   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to the Free
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.  */

#ifndef TC_MIPS
#define TC_MIPS

struct frag;
struct expressionS;

/* Default to big endian.  */
#ifndef TARGET_BYTES_BIG_ENDIAN
#define TARGET_BYTES_BIG_ENDIAN		1
#endif

#define TARGET_ARCH bfd_arch_mips

#define WORKING_DOT_WORD	1
#define OLD_FLOAT_READS
#define REPEAT_CONS_EXPRESSIONS
#define RELOC_EXPANSION_POSSIBLE
#define MAX_RELOC_EXPANSION 3
#define LOCAL_LABELS_FB 1

/* Maximum symbol offset that can be encoded in a BFD_RELOC_GPREL16
   relocation.  */
#define MAX_GPREL_OFFSET (0x7FF0)

#define md_relax_frag(segment, fragp, stretch) \
  mips_relax_frag(segment, fragp, stretch)
extern int mips_relax_frag (asection *, struct frag *, long);

#define md_undefined_symbol(name)	(0)
#define md_operand(x)

extern void mips_handle_align (struct frag *);
#define HANDLE_ALIGN(fragp)  mips_handle_align (fragp)

#define MAX_MEM_FOR_RS_ALIGN_CODE  (1 + 2)

/* We permit PC relative difference expressions when generating
   embedded PIC code.  */
#define DIFF_EXPR_OK

/* Tell assembler that we have an itbl_mips.h header file to include.  */
#define HAVE_ITBL_CPU

/* The endianness of the target format may change based on command
   line arguments.  */
#define TARGET_FORMAT mips_target_format()
extern const char *mips_target_format (void);

/* MIPS PIC level.  */

enum mips_pic_level
{
  /* Do not generate PIC code.  */
  NO_PIC,

  /* Generate PIC code as in the SVR4 MIPS ABI.  */
  SVR4_PIC,

  /* Generate PIC code without using a global offset table: the data
     segment has a maximum size of 64K, all data references are off
     the $gp register, and all text references are PC relative.  This
     is used on some embedded systems.  */
  EMBEDDED_PIC
};

extern enum mips_pic_level mips_pic;

struct mips_cl_insn
{
  unsigned long insn_opcode;
  const struct mips_opcode *insn_mo;
  /* The next two fields are used when generating mips16 code.  */
  bfd_boolean use_extend;
  unsigned short extend;
};

extern int tc_get_register (int frame);

#define md_after_parse_args() mips_after_parse_args()
extern void mips_after_parse_args (void);

#define tc_init_after_args() mips_init_after_args()
extern void mips_init_after_args (void);

#define md_parse_long_option(arg) mips_parse_long_option (arg)
extern int mips_parse_long_option (const char *);

#define tc_frob_label(sym) mips_define_label (sym)
extern void mips_define_label (symbolS *);

#define tc_frob_file_before_adjust() mips_frob_file_before_adjust ()
extern void mips_frob_file_before_adjust (void);

#define tc_frob_file_before_fix() mips_frob_file ()
extern void mips_frob_file (void);

#if defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF)
#define tc_frob_file_after_relocs mips_frob_file_after_relocs
extern void mips_frob_file_after_relocs (void);
#endif

#define tc_fix_adjustable(fixp) mips_fix_adjustable (fixp)
extern int mips_fix_adjustable (struct fix *);

/* Values passed to md_apply_fix3 don't include symbol values.  */
#define MD_APPLY_SYM_VALUE(FIX) 0

/* Global syms must not be resolved, to support ELF shared libraries.
   When generating embedded code, we don't have shared libs.  */
#define EXTERN_FORCE_RELOC			\
  (OUTPUT_FLAVOR == bfd_target_elf_flavour	\
   && mips_pic != EMBEDDED_PIC)

/* When generating embedded PIC code we must keep PC relative
   relocations.  */
#define TC_FORCE_RELOCATION(FIX) mips_force_relocation (FIX)
extern int mips_force_relocation (struct fix *);

#define TC_FORCE_RELOCATION_SUB_SAME(FIX, SEG) \
  (! SEG_NORMAL (SEG) || mips_force_relocation (FIX))

/* We use this to turn branches to global symbols into branches to
   local symbols, so that they can be simplified.  */
#define TC_VALIDATE_FIX(fixp, this_segment, skip_label) \
  do \
    if (! mips_validate_fix ((fixp), (this_segment))) \
      goto skip_label; \
  while (0)
extern int mips_validate_fix (struct fix *, asection *);

/* Register mask variables.  These are set by the MIPS assembly code
   and used by ECOFF and possibly other object file formats.  */
extern unsigned long mips_gprmask;
extern unsigned long mips_cprmask[4];

#if defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF)

#define elf_tc_final_processing mips_elf_final_processing
extern void mips_elf_final_processing (void);

#endif

extern void md_mips_end (void);
#define md_end()	md_mips_end()

#define USE_GLOBAL_POINTER_OPT	(OUTPUT_FLAVOR == bfd_target_ecoff_flavour \
				 || OUTPUT_FLAVOR == bfd_target_coff_flavour \
				 || OUTPUT_FLAVOR == bfd_target_elf_flavour)

extern void mips_pop_insert (void);
#define md_pop_insert()		mips_pop_insert()

extern void mips_flush_pending_output (void);
#define md_flush_pending_output mips_flush_pending_output

extern void mips_enable_auto_align (void);
#define md_elf_section_change_hook()	mips_enable_auto_align()

extern enum dwarf2_format mips_dwarf2_format (void);
#define DWARF2_FORMAT() mips_dwarf2_format ()

#define DWARF2_ADDR_SIZE(bfd) mips_dwarf2_addr_size ()

#define TARGET_USE_CFIPOP 1

#define tc_cfi_frame_initial_instructions mips_cfi_frame_initial_instructions
extern void mips_cfi_frame_initial_instructions (void);

#define DWARF2_DEFAULT_RETURN_COLUMN 31
#define DWARF2_CIE_DATA_ALIGNMENT -4

#define tc_regname_to_dw2regnum tc_mips_regname_to_dw2regnum
extern int tc_mips_regname_to_dw2regnum (char *regname);

#endif /* TC_MIPS */
@


1.8
log
@Teach as(1) how to handle mips symbolic register names.
Backported from a commit made after binutils 2.17 but before the GPLv3 switch.
ok miod@@
@
text
@d188 8
@


1.7
log
@Merge conflicts, bringing our changes back in:
- extra $(SHELL) and sugar for make (so that files not mode +x still work)
- safer temp file handling
- our W^X binary layout changes in ld
- OpenBSD policy for library file selection in ld
- arm and m88k changes which were not merged in time for official 2.15
- bfd core file handling
- a couple typos

New for 2.15:
- ld(1) and as(1) manpages now generated at build time
- binutils/stabs.c reverted to use our in-tree libiberty for now
- we still use our VIA C3 crypto code over stock binutils, as it recognizes
  more instructions
- new emulations for OpenBSD on mips64 machines, to help OpenBSD/sgi
- relaxed %f# handling in gas on OpenBSD/sparc64 (same as was in 2.14)

Tested on all platforms by various people; special thanks to sturm@@ and
otto@@.
@
text
@d188 3
@


1.6
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@a25 1

a27 1
#ifdef ANSI_PROTOTYPES
a29 1
#endif
d46 1
a46 1
   relocation: */
d51 1
a51 1
extern int mips_relax_frag PARAMS ((asection *, struct frag *, long));
d56 1
a56 1
extern void mips_handle_align PARAMS ((struct frag *));
d71 1
a71 1
extern const char *mips_target_format PARAMS ((void));
d101 1
a101 1
extern int tc_get_register PARAMS ((int frame));
d104 1
a104 1
extern void mips_after_parse_args PARAMS ((void));
d107 1
a107 1
extern void mips_init_after_args PARAMS ((void));
d110 1
a110 1
extern int mips_parse_long_option PARAMS ((const char *));
d113 1
a113 1
extern void mips_define_label PARAMS ((symbolS *));
d116 1
a116 1
extern void mips_frob_file_before_adjust PARAMS ((void));
d119 1
a119 1
extern void mips_frob_file PARAMS ((void));
d123 1
a123 1
extern void mips_frob_file_after_relocs PARAMS ((void));
d127 4
a130 1
extern int mips_fix_adjustable PARAMS ((struct fix *));
d141 1
a141 1
extern int mips_force_relocation PARAMS ((struct fix *));
d153 1
a153 1
extern int mips_validate_fix PARAMS ((struct fix *, asection *));
d163 1
a163 11
extern void mips_elf_final_processing PARAMS ((void));

#define ELF_TC_SPECIAL_SECTIONS \
  { ".sdata",	SHT_PROGBITS,	SHF_ALLOC + SHF_WRITE + SHF_MIPS_GPREL	}, \
  { ".sbss",	SHT_NOBITS,	SHF_ALLOC + SHF_WRITE + SHF_MIPS_GPREL	}, \
  { ".lit4",	SHT_PROGBITS,	SHF_ALLOC + SHF_WRITE + SHF_MIPS_GPREL	}, \
  { ".lit8",	SHT_PROGBITS,	SHF_ALLOC + SHF_WRITE + SHF_MIPS_GPREL	}, \
  { ".ucode",	SHT_MIPS_UCODE,	0					}, \
  { ".mdebug",	SHT_MIPS_DEBUG,	0					},
/* Other special sections not generated by the assembler: .reginfo,
   .liblist, .conflict, .gptab, .got, .dynamic, .rel.dyn.  */
d167 1
a167 1
extern void md_mips_end PARAMS ((void));
d174 1
a174 1
extern void mips_pop_insert PARAMS ((void));
d177 1
a177 1
extern void mips_flush_pending_output PARAMS ((void));
d180 1
a180 1
extern void mips_enable_auto_align PARAMS ((void));
d183 1
a183 1
extern enum dwarf2_format mips_dwarf2_format PARAMS ((void));
d186 1
a186 7
#define DWARF2_ADDR_SIZE(bfd) \
  (DWARF2_FORMAT () == dwarf2_format_32bit ? 4 : 8)

typedef struct {
  offsetT tc_fr_offset;
} tc_frag_data_type;
#define TC_FRAG_TYPE tc_frag_data_type
@


1.5
log
@resolve conflicts.
@
text
@d2 1
a2 1
   Copyright 1993, 1994, 1995, 1996, 1997, 2000, 2001
d48 1
a48 1
/* Maximum symbol offset that can be encoded in a BFD_RELOC_MIPS_GPREL
d50 1
a50 1
#define MAX_GPREL_OFFSET (0x7FF4)
d52 3
a54 2
#define md_relax_frag(segment, fragp, stretch) mips_relax_frag(fragp, stretch)
extern int mips_relax_frag PARAMS ((struct frag *, long));
d76 19
d100 1
a100 1
  boolean use_extend;
d106 3
d121 1
a121 1
#define tc_frob_file() mips_frob_file ()
a128 4
#define TC_CONS_FIX_NEW cons_fix_new_mips
extern void cons_fix_new_mips
  PARAMS ((struct frag *, int, unsigned int, struct expressionS *));

d132 6
d140 1
a140 1
#define TC_FORCE_RELOCATION(fixp) mips_force_relocation (fixp)
d143 11
a153 2
/* md_apply_fix sets fx_done correctly.  */
#define TC_HANDLE_FX_DONE 1
d192 11
@


1.4
log
@Help stupid cvs fixing basic conflicts.
@
text
@d2 2
a3 1
   Copyright (C) 1993, 94, 95, 96, 97, 1999, 2000 Free Software Foundation, Inc.
a40 1
#define ONLY_STANDARD_ESCAPES
d52 1
a52 1
#define md_relax_frag(fragp, stretch) mips_relax_frag(fragp, stretch)
d58 4
a61 2
extern int mips_do_align PARAMS ((int, const char *, int, int));
#define md_do_align(n,fill,len,max,l) if (mips_do_align (n,fill,len,max)) goto l
d67 1
a67 1
/* Tell assembler that we have an itbl_mips.h header file to include. */
@


1.3
log
@Merge the Cygnus 960904 sources
@
text
@d1 2
a2 2
/* tc-mips.c -- header file for tc-mips.c.
   Copyright (C) 1993 Free Software Foundation, Inc.
d20 3
a22 2
   along with GAS; see the file COPYING.  If not, write to
   the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d28 10
d52 2
a53 2
#define LOCAL_LABEL(name) mips_local_label (name)
extern int mips_local_label PARAMS ((const char *));
a54 1
#define md_relax_frag(fragp, stretch)	(0)
d58 3
d65 2
a66 8
#define LITTLE_ENDIAN   1234
#define BIG_ENDIAN      4321

/* Default to big endian.  */
#ifndef TARGET_BYTES_LITTLE_ENDIAN
#undef  TARGET_BYTES_BIG_ENDIAN
#define TARGET_BYTES_BIG_ENDIAN		1
#endif
d71 1
a71 1
extern const char *mips_target_format ();
d73 7
a79 3
struct mips_cl_insn {
    unsigned long		insn_opcode;
    const struct mips_opcode	*insn_mo;
d84 3
d91 4
a94 1
extern void mips_define_label PARAMS ((struct symbol *));
d99 5
d105 5
a109 1
extern void cons_fix_new_mips ();
d114 1
a114 1
extern int mips_force_relocation ();
d124 1
a124 1
#ifdef OBJ_ELF
d145 1
a155 3

extern void mips_init_after_args PARAMS ((void));
#define tc_init_after_args mips_init_after_args
@


1.2
log
@Bring Cygnus versions into the trunk, keeping our local patches
@
text
@a60 6
#if TARGET_BYTES_BIG_ENDIAN
#define BYTE_ORDER	BIG_ENDIAN
#else
#define BYTE_ORDER      LITTLE_ENDIAN
#endif

@


1.1
log
@Initial revision
@
text
@d37 4
d84 3
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import of binutils, gas, ld & gprof from Cygnus 960609 tree
@
text
@a36 4
/* Maximum symbol offset that can be encoded in a BFD_RELOC_MIPS_GPREL
   relocation: */
#define MAX_GPREL_OFFSET (0x7FF4)

a79 3

#define tc_frob_file() mips_frob_file ()
extern void mips_frob_file PARAMS ((void));
@


1.1.1.3
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@d61 6
@


1.1.1.4
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@d1 2
a2 2
/* tc-mips.h -- header file for tc-mips.c.
   Copyright (C) 1993, 1994, 1995, 1996, 1997 Free Software Foundation, Inc.
d20 2
a21 3
   along with GAS; see the file COPYING.  If not, write to the Free
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.  */
a26 10
#ifdef ANSI_PROTOTYPES
struct frag;
struct expressionS;
#endif

/* Default to big endian.  */
#ifndef TARGET_BYTES_BIG_ENDIAN
#define TARGET_BYTES_BIG_ENDIAN		1
#endif

a36 5
/* We don't want to define LOCAL_LABELS_DOLLAR, because $0 is really a
   reference to a register, not a label.  */
#undef LOCAL_LABELS_DOLLAR
#define LOCAL_LABELS_DOLLAR 0

d41 2
a42 2
#define md_relax_frag(fragp, stretch) mips_relax_frag(fragp, stretch)
extern int mips_relax_frag PARAMS ((struct frag *, long));
d44 1
d52 8
a59 2
/* Tell assembler that we have an itbl_mips.h header file to include. */
#define HAVE_ITBL_CPU
d64 1
a64 1
extern const char *mips_target_format PARAMS ((void));
d66 3
a68 7
struct mips_cl_insn
{
  unsigned long insn_opcode;
  const struct mips_opcode *insn_mo;
  /* The next two fields are used when generating mips16 code.  */
  boolean use_extend;
  unsigned short extend;
a72 3
#define tc_init_after_args() mips_init_after_args()
extern void mips_init_after_args PARAMS ((void));

a78 3
#define tc_frob_file_before_adjust() mips_frob_file_before_adjust ()
extern void mips_frob_file_before_adjust PARAMS ((void));

a81 5
#if defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF)
#define tc_frob_file_after_relocs mips_frob_file_after_relocs
extern void mips_frob_file_after_relocs PARAMS ((void));
#endif

d83 1
a83 5
extern void cons_fix_new_mips
  PARAMS ((struct frag *, int, unsigned int, struct expressionS *));

#define tc_fix_adjustable(fixp) mips_fix_adjustable (fixp)
extern int mips_fix_adjustable PARAMS ((struct fix *));
d88 1
a88 1
extern int mips_force_relocation PARAMS ((struct fix *));
d98 1
a98 1
#if defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF)
d129 3
@


1.1.1.5
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d2 1
a2 1
   Copyright (C) 1993, 94, 95, 96, 97, 1999, 2000 Free Software Foundation, Inc.
d48 5
a62 3
extern int mips_do_align PARAMS ((int, const char *, int, int));
#define md_do_align(n,fill,len,max,l) if (mips_do_align (n,fill,len,max)) goto l

d93 1
a93 1
extern void mips_define_label PARAMS ((symbolS *));
a146 1
				 || OUTPUT_FLAVOR == bfd_target_coff_flavour \
@


1.1.1.6
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d2 1
a2 2
   Copyright 1993, 1994, 1995, 1996, 1997, 2000, 2001
   Free Software Foundation, Inc.
d40 1
d52 1
a52 1
#define md_relax_frag(segment, fragp, stretch) mips_relax_frag(fragp, stretch)
d58 2
a59 4
extern void mips_handle_align PARAMS ((struct frag *));
#define HANDLE_ALIGN(fragp)  mips_handle_align (fragp)

#define MAX_MEM_FOR_RS_ALIGN_CODE  (1 + 2)
d65 1
a65 1
/* Tell assembler that we have an itbl_mips.h header file to include.  */
@


1.1.1.7
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@d2 1
a2 1
   Copyright 1993, 1994, 1995, 1996, 1997, 2000, 2001, 2002, 2003
d48 1
a48 1
/* Maximum symbol offset that can be encoded in a BFD_RELOC_GPREL16
d50 1
a50 1
#define MAX_GPREL_OFFSET (0x7FF0)
d52 2
a53 3
#define md_relax_frag(segment, fragp, stretch) \
  mips_relax_frag(segment, fragp, stretch)
extern int mips_relax_frag PARAMS ((asection *, struct frag *, long));
a74 19
/* MIPS PIC level.  */

enum mips_pic_level
{
  /* Do not generate PIC code.  */
  NO_PIC,

  /* Generate PIC code as in the SVR4 MIPS ABI.  */
  SVR4_PIC,

  /* Generate PIC code without using a global offset table: the data
     segment has a maximum size of 64K, all data references are off
     the $gp register, and all text references are PC relative.  This
     is used on some embedded systems.  */
  EMBEDDED_PIC
};

extern enum mips_pic_level mips_pic;

d80 1
a80 1
  bfd_boolean use_extend;
a85 3
#define md_after_parse_args() mips_after_parse_args()
extern void mips_after_parse_args PARAMS ((void));

d98 1
a98 1
#define tc_frob_file_before_fix() mips_frob_file ()
d106 4
a112 6
/* Global syms must not be resolved, to support ELF shared libraries.
   When generating embedded code, we don't have shared libs.  */
#define EXTERN_FORCE_RELOC			\
  (OUTPUT_FLAVOR == bfd_target_elf_flavour	\
   && mips_pic != EMBEDDED_PIC)

d115 1
a115 1
#define TC_FORCE_RELOCATION(FIX) mips_force_relocation (FIX)
d118 2
a119 11
#define TC_FORCE_RELOCATION_SUB_SAME(FIX, SEG) \
  (! SEG_NORMAL (SEG) || mips_force_relocation (FIX))

/* We use this to turn branches to global symbols into branches to
   local symbols, so that they can be simplified.  */
#define TC_VALIDATE_FIX(fixp, this_segment, skip_label) \
  do \
    if (! mips_validate_fix ((fixp), (this_segment))) \
      goto skip_label; \
  while (0)
extern int mips_validate_fix PARAMS ((struct fix *, asection *));
a157 11

extern enum dwarf2_format mips_dwarf2_format PARAMS ((void));
#define DWARF2_FORMAT() mips_dwarf2_format ()

#define DWARF2_ADDR_SIZE(bfd) \
  (DWARF2_FORMAT () == dwarf2_format_32bit ? 4 : 8)

typedef struct {
  offsetT tc_fr_offset;
} tc_frag_data_type;
#define TC_FRAG_TYPE tc_frag_data_type
@


1.1.1.8
log
@Binutils 2.15, with testsuites removed, and without gdb and libiberty.
@
text
@d26 1
d29 1
d32 1
d49 1
a49 1
   relocation.  */
d54 1
a54 1
extern int mips_relax_frag (asection *, struct frag *, long);
d59 1
a59 1
extern void mips_handle_align (struct frag *);
d74 1
a74 1
extern const char *mips_target_format (void);
d104 1
a104 1
extern int tc_get_register (int frame);
d107 1
a107 1
extern void mips_after_parse_args (void);
d110 1
a110 1
extern void mips_init_after_args (void);
d113 1
a113 1
extern int mips_parse_long_option (const char *);
d116 1
a116 1
extern void mips_define_label (symbolS *);
d119 1
a119 1
extern void mips_frob_file_before_adjust (void);
d122 1
a122 1
extern void mips_frob_file (void);
d126 1
a126 1
extern void mips_frob_file_after_relocs (void);
d130 1
a130 4
extern int mips_fix_adjustable (struct fix *);

/* Values passed to md_apply_fix3 don't include symbol values.  */
#define MD_APPLY_SYM_VALUE(FIX) 0
d141 1
a141 1
extern int mips_force_relocation (struct fix *);
d153 1
a153 1
extern int mips_validate_fix (struct fix *, asection *);
d163 11
a173 1
extern void mips_elf_final_processing (void);
d177 1
a177 1
extern void md_mips_end (void);
d184 1
a184 1
extern void mips_pop_insert (void);
d187 1
a187 1
extern void mips_flush_pending_output (void);
d190 1
a190 1
extern void mips_enable_auto_align (void);
d193 1
a193 1
extern enum dwarf2_format mips_dwarf2_format (void);
d196 7
a202 1
#define DWARF2_ADDR_SIZE(bfd) mips_dwarf2_addr_size ()
@


