head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.64
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.62
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.58
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.54
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.56
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.48
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.52
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.50
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.46
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.44
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.42
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.40
	OPENBSD_5_0:1.5.0.38
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.36
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.34
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.30
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.32
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.28
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.26
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.24
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.22
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.20
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.18
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.16
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.14
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.12
	OPENBSD_3_7_BASE:1.5
	BINUTILS_2_15:1.1.1.5
	OPENBSD_3_6:1.5.0.10
	OPENBSD_3_6_BASE:1.5
	BINUTILS-2_14:1.1.1.5
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	binutils-2_11_2:1.1.1.5
	OPENBSD_3_1:1.4.0.8
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.6
	OPENBSD_3_0_BASE:1.4
	BINUTILS-2_10_1:1.1.1.4
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	BINUTILS-2_10:1.1.1.4
	OPENBSD_2_7:1.3.0.18
	OPENBSD_2_7_BASE:1.3
	new-binutils:1.3.0.16
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	BINUTILS-2_8_1:1.1.1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	CYGNUS-961112:1.1.1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	CYGNUS-960904:1.1.1.3
	CYGNUS-960609:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2002.05.13.17.07.37;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.12.19.11.54;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	96.09.04.19.06.26;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.10.51.43;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.06.21;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.06.21;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.09.19.41.02;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.09.04.17.45.33;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2000.09.12.14.46.34;	author espie;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2002.05.13.13.37.46;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.5
log
@resolve conflicts.
@
text
@/* vms-conf.h.  Generated manually from conf.in,
   and used by config-gas.com when constructing config.h.  */

/* Define if using alloca.c.  */
#ifdef __GNUC__
#undef C_ALLOCA
#else
#define C_ALLOCA
#endif

/* Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP systems.
   This function is required for alloca.c support on those systems.  */
#undef CRAY_STACKSEG_END

/* Define if you have alloca, as a function or macro.  */
#undef HAVE_ALLOCA

/* Define if you have <alloca.h> and it should be used (not on Ultrix).  */
#undef HAVE_ALLOCA_H

/* Define as __inline if that's what the C compiler calls it.  */
#ifdef __GNUC__
#undef inline
#else
#define inline
#endif

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
 STACK_DIRECTION > 0 => grows toward higher addresses
 STACK_DIRECTION < 0 => grows toward lower addresses
 STACK_DIRECTION = 0 => direction of growth unknown
 */
#define STACK_DIRECTION (-1)

/* Define if lex declares yytext as a char * by default, not a char[].  */
#undef YYTEXT_POINTER

/* Name of package.  */
#undef PACKAGE

/* Version of package.  */
/* Define in by config-gas.com */
/* #undef VERSION */

/* Should gas use high-level BFD interfaces?  */
#undef BFD_ASSEMBLER

/* Some assert/preprocessor combinations are incapable of handling
   certain kinds of constructs in the argument of assert.  For example,
   quoted strings (if requoting isn't done right) or newlines.  */
#ifdef __GNUC__
#undef BROKEN_ASSERT
#else
#define BROKEN_ASSERT
#endif

/* If we aren't doing cross-assembling, some operations can be optimized,
   since byte orders and value sizes don't need to be adjusted.  */
#undef CROSS_COMPILE

/* Some gas code wants to know these parameters.  */
#define TARGET_ALIAS	"vms"
#define TARGET_CPU	"vax"
#define TARGET_CANONICAL	"vax-dec-vms"
#define TARGET_OS	"vms"
#define TARGET_VENDOR	"dec"

/* Sometimes the system header files don't declare strstr.  */
#undef NEED_DECLARATION_STRSTR

/* Sometimes the system header files don't declare malloc and realloc.  */
#undef NEED_DECLARATION_MALLOC

/* Sometimes the system header files don't declare free.  */
#undef NEED_DECLARATION_FREE

/* Sometimes the system header files don't declare sbrk.  */
#undef NEED_DECLARATION_SBRK

/* Sometimes errno.h doesn't declare errno itself.  */
#undef NEED_DECLARATION_ERRNO

#undef MANY_SEGMENTS

/* The configure script defines this for some targets based on the
   target name used.  It is not always defined.  */
#undef TARGET_BYTES_BIG_ENDIAN

/* Needed only for some configurations that can produce multiple output
   formats.  */
#undef DEFAULT_EMULATION
#undef EMULATIONS
#undef USE_EMULATIONS
#undef OBJ_MAYBE_AOUT
#undef OBJ_MAYBE_BOUT
#undef OBJ_MAYBE_COFF
#undef OBJ_MAYBE_ECOFF
#undef OBJ_MAYBE_ELF
#undef OBJ_MAYBE_GENERIC
#undef OBJ_MAYBE_HP300
#undef OBJ_MAYBE_IEEE
#undef OBJ_MAYBE_SOM
#undef OBJ_MAYBE_VMS

/* Used for some of the COFF configurations, when the COFF code needs
   to select something based on the CPU type before it knows it...  */
#undef I386COFF
#undef M68KCOFF
#undef M88KCOFF

/* Using cgen code?  */
#undef USING_CGEN

/* Needed only for sparc configuration.  */
#undef DEFAULT_ARCH

/* Needed only for PowerPC Solaris.  */
#undef TARGET_SOLARIS_COMMENT

/* Needed only for SCO 5.  */
#undef SCO_ELF

/* Define if you have the remove function.  */
#define HAVE_REMOVE

/* Define if you have the sbrk function.  */
/* sbrk() is available, but we don't want gas to use it.  */
#undef HAVE_SBRK

/* Define if you have the unlink function.  */
#undef HAVE_UNLINK

/* Define if you have the <errno.h> header file.  */
#define HAVE_ERRNO_H

/* Define if you have the <memory.h> header file.  */
#undef HAVE_MEMORY_H

/* Define if you have the <stdarg.h> header file.  */
#define HAVE_STDARG_H

/* Define if you have the <stdlib.h> header file.  */
#define HAVE_STDLIB_H

/* Define if you have the <string.h> header file.  */
#define HAVE_STRING_H

/* Define if you have the <strings.h> header file.  */
#undef HAVE_STRINGS_H

/* Define if you have the <sys/types.h> header file.  */
#ifdef __GNUC__
#define HAVE_SYS_TYPES_H
#else
#undef HAVE_SYS_TYPES_H
#endif

/* Define if you have the <unistd.h> header file.  */
#define HAVE_UNISTD_H	/* config-gas.com will make one if necessary */

/* Define if you have the <varargs.h> header file.  */
#undef HAVE_VARARGS_H

/* VMS-specific:  we need to set up EXIT_xxx here because the default
   values in as.h are inappropriate for VMS, but we also want to prevent
   as.h's inclusion of <stdlib.h> from triggering redefinition warnings.
   <stdlib.h> guards itself against multiple inclusion, so including it
   here turns as.h's later #include into a no-op.  (We can't simply use
   #ifndef HAVE_STDLIB_H here, because the <stdlib.h> in several older
   gcc-vms distributions neglects to define these two required macros.)  */
#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#undef EXIT_SUCCESS
#undef EXIT_FAILURE
#endif
#define EXIT_SUCCESS 1			/* SS$_NORMAL, STS$K_SUCCESS */
#define EXIT_FAILURE 0x10000002		/* (STS$K_ERROR | STS$M_INHIB_MSG) */
@


1.4
log
@Help stupid cvs fixing basic conflicts.
@
text
@d108 1
a108 1
   to select something based on the CPU type before it knows it... */
@


1.3
log
@Merge the Cygnus 960904 sources
@
text
@d31 3
a33 3
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown
d37 10
d70 3
d79 3
d87 3
a89 3
/* Needed only for sparc configuration.  */
#undef SPARC_V9
#undef SPARC_ARCH64
d113 12
d128 1
@


1.2
log
@Bring Cygnus versions into the trunk, keeping our local patches
@
text
@d15 3
d71 1
a71 1
/* Needed only for sparc configuration */
d75 22
d99 3
@


1.1
log
@Initial revision
@
text
@d69 2
a70 1
#undef sparcv9
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import of binutils, gas, ld & gprof from Cygnus 960609 tree
@
text
@d69 1
a69 2
#undef SPARC_V9
#undef SPARC_ARCH64
@


1.1.1.3
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@a14 3
/* Define if you have alloca, as a function or macro.  */
#undef HAVE_ALLOCA

d68 1
a68 1
/* Needed only for sparc configuration.  */
a71 22
/* Needed only for some configurations that can produce multiple output
   formats.  */
#undef DEFAULT_EMULATION
#undef EMULATIONS
#undef USE_EMULATIONS
#undef OBJ_MAYBE_AOUT
#undef OBJ_MAYBE_BOUT
#undef OBJ_MAYBE_COFF
#undef OBJ_MAYBE_ECOFF
#undef OBJ_MAYBE_ELF
#undef OBJ_MAYBE_GENERIC
#undef OBJ_MAYBE_HP300
#undef OBJ_MAYBE_IEEE
#undef OBJ_MAYBE_SOM
#undef OBJ_MAYBE_VMS

/* Used for some of the COFF configurations, when the COFF code needs
   to select something based on the CPU type before it knows it... */
#undef I386COFF
#undef M68KCOFF
#undef M88KCOFF

a73 3

/* sbrk() is available, but we don't want gas to use it.  */
#undef HAVE_SBRK
@


1.1.1.4
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d31 3
a33 3
 STACK_DIRECTION > 0 => grows toward higher addresses
 STACK_DIRECTION < 0 => grows toward lower addresses
 STACK_DIRECTION = 0 => direction of growth unknown
a36 10
/* Define if lex declares yytext as a char * by default, not a char[].  */
#undef YYTEXT_POINTER

/* Name of package.  */
#undef PACKAGE

/* Version of package.  */
/* Define in by config-gas.com */
/* #undef VERSION */

a59 3
/* Sometimes the system header files don't declare strstr.  */
#undef NEED_DECLARATION_STRSTR

a65 3
/* Sometimes the system header files don't declare sbrk.  */
#undef NEED_DECLARATION_SBRK

d71 3
a73 3
/* The configure script defines this for some targets based on the
   target name used.  It is not always defined.  */
#undef TARGET_BYTES_BIG_ENDIAN
a96 12
/* Using cgen code?  */
#undef USING_CGEN

/* Needed only for sparc configuration.  */
#undef DEFAULT_ARCH

/* Needed only for PowerPC Solaris.  */
#undef TARGET_SOLARIS_COMMENT

/* Needed only for SCO 5.  */
#undef SCO_ELF

a99 1
/* Define if you have the sbrk function.  */
@


1.1.1.5
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d108 1
a108 1
   to select something based on the CPU type before it knows it...  */
@


