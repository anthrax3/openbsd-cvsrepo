head	1.6;
access;
symbols
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.54
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.50
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.46
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.48
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.40
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.44
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.42
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.38
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.36
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.34
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.32
	OPENBSD_5_0:1.6.0.30
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.28
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.26
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.22
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.24
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.20
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.18
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.16
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.14
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.12
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.10
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.8
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.6
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	BINUTILS_2_15:1.1.1.5
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	BINUTILS-2_14:1.1.1.5
	OPENBSD_3_5:1.5.0.16
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.14
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.12
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.10
	OPENBSD_3_2_BASE:1.5
	binutils-2_11_2:1.1.1.4
	OPENBSD_3_1:1.5.0.8
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.6
	OPENBSD_3_0_BASE:1.5
	BINUTILS-2_10_1:1.1.1.4
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	BINUTILS-2_10:1.1.1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	new-binutils:1.4.0.14
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	BINUTILS-2_8_1:1.1.1.3
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	CYGNUS-961112:1.1.1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	CYGNUS-960904:1.1.1.2
	CYGNUS-960609:1.1.1.1
	CYGNUS-960607:1.1.1.1
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2004.05.17.21.54.27;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2000.09.12.19.11.37;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	96.11.23.03.34.08;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.10.07.04.01.53;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.09.04.19.03.49;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.10.19;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.10.19;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.09.04.17.42.49;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.11.19.14.13.47;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2000.09.12.14.48.45;	author espie;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.05.17.20.42.57;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@# 
# Makefile.in for etc
#

DESTDIR		=

prefix 		= @@prefix@@
exec_prefix 	= @@exec_prefix@@

srcdir  = @@srcdir@@
VPATH	= @@srcdir@@

bindir  = @@bindir@@
libdir  = @@libdir@@
tooldir = $(libdir)
datadir = @@datadir@@

mandir  = @@mandir@@
man1dir = $(mandir)/man1
man2dir = $(mandir)/man2
man3dir = $(mandir)/man3
man4dir = $(mandir)/man4
man5dir = $(mandir)/man5
man6dir = $(mandir)/man6
man7dir = $(mandir)/man7
man8dir = $(mandir)/man8
man9dir = $(mandir)/man9
infodir = @@infodir@@

SHELL = /bin/sh

INSTALL 	= @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA    = @@INSTALL_DATA@@

MAKEINFO = `if [ -f ../texinfo/makeinfo/makeinfo ]; \
	then echo ../texinfo/makeinfo/makeinfo; \
	else echo makeinfo; fi`
TEXI2DVI = `if [ -f ../texinfo/util/texi2dvi ]; \
	then echo ../texinfo/util/texi2dvi; \
	else echo texi2dvi; fi`
TEXI2HTML = texi2html
DVIPS = dvips

# Where to find texinfo.tex to format documentation with TeX.
TEXIDIR = $(srcdir)/../texinfo

#### Host, target, and site specific Makefile fragments come in here.
###

INFOFILES = standards.info configure.info
DVIFILES = standards.dvi configure.dvi

all:

# We want install to imply install-info as per GNU standards.
install: install-info

uninstall:

info:
	for f in $(INFOFILES); do \
	  if test -f $(srcdir)/`echo $$f | sed -e 's/.info$$/.texi/'`; then \
	    if $(MAKE) "MAKEINFO=$(MAKEINFO)" $$f; then \
	      true; \
	    else \
	      exit 1; \
	    fi; \
	  fi; \
	done

install-info: info
	$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(infodir)
	if test ! -f standards.info; then cd $(srcdir); fi; \
	if test -f standards.info; then \
	  for i in standards.info*; do \
	    $(INSTALL_DATA) $$i $(DESTDIR)$(infodir)/$$i; \
	  done; \
	fi
	if test ! -f configure.info; then cd $(srcdir); fi; \
	if test -f configure.info; then \
	  for i in configure.info*; do \
	    $(INSTALL_DATA) $$i $(DESTDIR)$(infodir)/$$i; \
	  done; \
	fi

dvi:
	for f in $(DVIFILES); do \
	  if test -f $(srcdir)/`echo $$f | sed -e 's/.dvi$$/.texi/'`; then \
	    if $(MAKE) "TEXI2DVI=$(TEXI2DVI)" $$f; then \
	      true; \
	    else \
	      exit 1; \
	    fi; \
	  fi; \
	done

standards.info: $(srcdir)/standards.texi $(srcdir)/make-stds.texi
	$(MAKEINFO) --no-split -I$(srcdir) -o standards.info $(srcdir)/standards.texi

standards.dvi: $(srcdir)/standards.texi
	TEXINPUTS=$(TEXIDIR):$$TEXINPUTS $(TEXI2DVI) $(srcdir)/standards.texi

standards.ps: standards.dvi
	$(DVIPS) standards.dvi -o standards.ps

# makeinfo requires images to be in the current directory.
configure.info: $(srcdir)/configure.texi $(srcdir)/configdev.tin $(srcdir)/configbuild.tin
	rm -f configdev.txt configbuild.txt
	cp $(srcdir)/configdev.tin configdev.txt
	cp $(srcdir)/configbuild.tin configbuild.txt
	$(MAKEINFO) -I$(srcdir) -o configure.info $(srcdir)/configure.texi
	rm -f configdev.txt configbuild.txt

# texi2dvi wants both the .txt and the .eps files.
configure.dvi: $(srcdir)/configure.texi $(srcdir)/configdev.tin $(srcdir)/configbuild.tin $(srcdir)/configdev.ein $(srcdir)/configbuild.ein
	rm -f configdev.txt configbuild.txt
	cp $(srcdir)/configdev.tin configdev.txt
	cp $(srcdir)/configbuild.tin configbuild.txt
	rm -f configdev.eps configbuild.eps
	cp $(srcdir)/configdev.ein configdev.eps
	cp $(srcdir)/configbuild.ein configbuild.eps
	TEXINPUTS=$(TEXIDIR):$$TEXINPUTS $(TEXI2DVI) $(srcdir)/configure.texi
	rm -f configdev.txt configbuild.txt
	rm -f configdev.eps configbuild.eps

# dvips requires images to be in the current directory
configure.ps: configure.dvi $(srcdir)/configdev.ein $(srcdir)/configbuild.ein
	rm -f configdev.eps configbuild.eps
	cp $(srcdir)/configdev.ein configdev.eps
	cp $(srcdir)/configbuild.ein configbuild.eps
	$(DVIPS) configure.dvi -o configure.ps
	rm -f configdev.eps configbuild.eps

configure.html: $(srcdir)/configure.texi
	$(TEXI2HTML) -split_chapter $(srcdir)/configure.texi

clean:
	rm -f *.aux *.cp *.cps *.dvi *.fn *.fns *.ky *.kys *.log
	rm -f *.pg *.pgs *.toc *.tp *.tps *.vr *.vrs
	rm -f configdev.txt configbuild.txt configdev.eps configbuild.eps
	rm -f configdev.jpg configbuild.jpg

mostlyclean: clean

distclean:   clean
	rm -f Makefile config.status config.cache

maintainer-clean realclean:   distclean
	rm -f *.info*

Makefile: $(srcdir)/Makefile.in $(host_makefile_frag) $(target_makefile_frag)
	$(SHELL) ./config.status

## these last targets are for standards.texi conformance
dist:
check:
installcheck:
TAGS:
@


1.5
log
@Help stupid cvs fixing basic conflicts.
@
text
@d5 2
d56 2
a57 1
install:
d73 1
a73 1
	$(SHELL) $(srcdir)/../mkinstalldirs $(infodir)
d77 1
a77 1
	    $(INSTALL_DATA) $$i $(infodir)/$$i; \
d83 1
a83 1
	    $(INSTALL_DATA) $$i $(infodir)/$$i; \
@


1.4
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d34 8
a41 2
MAKEINFO = makeinfo
TEXI2DVI = texi2dvi
d49 2
a50 6
INFOFILES = configure.info standards.info cfg-paper.info
DVIFILES = configure.dvi standards.dvi cfg-paper.dvi

# Target to use for installing unformatted man-pages.  Some systems may not
# want them installed.
INSTALL_MAN = install-man
d54 1
a54 4
install: $(INSTALL_MAN)

install-man: $(srcdir)/configure.man
	$(INSTALL_DATA) $(srcdir)/configure.man $(man1dir)/configure.1
a56 1
	cd $(infodir) && rm -f configure.info* standards.info* cfg-paper.info*
d58 10
a67 1
info: $(INFOFILES)
d70 23
a92 3
	if test ! -f configure.info ; then cd $(srcdir); fi; \
	for i in configure.info* standards.info* cfg-paper.info*; do \
	  $(INSTALL_DATA) $$i $(infodir)/$$i; \
d95 2
a96 10
dvi: $(DVIFILES)

configure.info: $(srcdir)/configure.texi
	$(MAKEINFO) -o configure.info $(srcdir)/configure.texi

configure.dvi: $(srcdir)/configure.texi
	TEXINPUTS=$(TEXIDIR):$$TEXINPUTS $(TEXI2DVI) $(srcdir)/configure.texi

standards.info: $(srcdir)/standards.texi
	$(MAKEINFO) -I$(srcdir) -o standards.info $(srcdir)/standards.texi
d101 22
a122 2
cfg-paper.info : $(srcdir)/cfg-paper.texi
	$(MAKEINFO) -o cfg-paper.info $(srcdir)/cfg-paper.texi
d124 7
a130 2
cfg-paper.dvi: $(srcdir)/cfg-paper.texi
	TEXINPUTS=$(TEXIDIR):$$TEXINPUTS $(TEXI2DVI) $(srcdir)/cfg-paper.texi
d132 2
d138 2
@


1.3
log
@man page fixes from niklas
@
text
@d5 2
a6 2
prefix 		= /usr/local
exec_prefix 	= $(prefix)
d8 5
a12 3
srcdir  = .
bindir  = $(exec_prefix)/bin
libdir  = $(exec_prefix)/lib
d14 1
a14 1
datadir = $(prefix)/share
d16 1
a16 1
mandir  = $(prefix)/man
d26 1
a26 1
infodir = $(prefix)/info
d30 3
a32 3
INSTALL 	= install -c
INSTALL_PROGRAM = $(INSTALL)
INSTALL_DATA    = $(INSTALL)
d96 1
a96 1
	rm -f Makefile config.status
@


1.2
log
@Merge the Cygnus 960904 sources
@
text
@d44 4
d50 3
a52 1
install:  $(srcdir)/configure.man
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
datadir = $(prefix)/lib
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@d12 1
a12 1
datadir = $(prefix)/share
@


1.1.1.3
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@d5 2
a6 2
prefix 		= @@prefix@@
exec_prefix 	= @@exec_prefix@@
d8 3
a10 5
srcdir  = @@srcdir@@
VPATH	= @@srcdir@@

bindir  = @@bindir@@
libdir  = @@libdir@@
d12 1
a12 1
datadir = @@datadir@@
d14 1
a14 1
mandir  = @@mandir@@
d24 1
a24 1
infodir = @@infodir@@
d28 3
a30 3
INSTALL 	= @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA    = @@INSTALL_DATA@@
d88 1
a88 1
	rm -f Makefile config.status config.cache
@


1.1.1.4
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d34 2
a35 8
MAKEINFO = `if [ -f ../texinfo/makeinfo/makeinfo ]; \
	then echo ../texinfo/makeinfo/makeinfo; \
	else echo makeinfo; fi`
TEXI2DVI = `if [ -f ../texinfo/util/texi2dvi ]; \
	then echo ../texinfo/util/texi2dvi; \
	else echo texi2dvi; fi`
TEXI2HTML = texi2html
DVIPS = dvips
d43 2
a44 2
INFOFILES = standards.info configure.info
DVIFILES = standards.dvi configure.dvi
d48 2
a49 1
install:
d52 1
d54 1
a54 10
info:
	for f in $(INFOFILES); do \
	  if test -f $(srcdir)/`echo $$f | sed -e 's/.info$$/.texi/'`; then \
	    if $(MAKE) "MAKEINFO=$(MAKEINFO)" $$f; then \
	      true; \
	    else \
	      exit 1; \
	    fi; \
	  fi; \
	done
d57 3
a59 23
	$(SHELL) $(srcdir)/../mkinstalldirs $(infodir)
	if test ! -f standards.info; then cd $(srcdir); fi; \
	if test -f standards.info; then \
	  for i in standards.info*; do \
	    $(INSTALL_DATA) $$i $(infodir)/$$i; \
	  done; \
	fi
	if test ! -f configure.info; then cd $(srcdir); fi; \
	if test -f configure.info; then \
	  for i in configure.info*; do \
	    $(INSTALL_DATA) $$i $(infodir)/$$i; \
	  done; \
	fi

dvi:
	for f in $(DVIFILES); do \
	  if test -f $(srcdir)/`echo $$f | sed -e 's/.dvi$$/.texi/'`; then \
	    if $(MAKE) "TEXI2DVI=$(TEXI2DVI)" $$f; then \
	      true; \
	    else \
	      exit 1; \
	    fi; \
	  fi; \
d62 10
a71 2
standards.info: $(srcdir)/standards.texi $(srcdir)/make-stds.texi
	$(MAKEINFO) --no-split -I$(srcdir) -o standards.info $(srcdir)/standards.texi
d76 2
a77 22
standards.ps: standards.dvi
	$(DVIPS) standards.dvi -o standards.ps

# makeinfo requires images to be in the current directory.
configure.info: $(srcdir)/configure.texi $(srcdir)/configdev.tin $(srcdir)/configbuild.tin
	rm -f configdev.txt configbuild.txt
	cp $(srcdir)/configdev.tin configdev.txt
	cp $(srcdir)/configbuild.tin configbuild.txt
	$(MAKEINFO) -I$(srcdir) -o configure.info $(srcdir)/configure.texi
	rm -f configdev.txt configbuild.txt

# texi2dvi wants both the .txt and the .eps files.
configure.dvi: $(srcdir)/configure.texi $(srcdir)/configdev.tin $(srcdir)/configbuild.tin $(srcdir)/configdev.ein $(srcdir)/configbuild.ein
	rm -f configdev.txt configbuild.txt
	cp $(srcdir)/configdev.tin configdev.txt
	cp $(srcdir)/configbuild.tin configbuild.txt
	rm -f configdev.eps configbuild.eps
	cp $(srcdir)/configdev.ein configdev.eps
	cp $(srcdir)/configbuild.ein configbuild.eps
	TEXINPUTS=$(TEXIDIR):$$TEXINPUTS $(TEXI2DVI) $(srcdir)/configure.texi
	rm -f configdev.txt configbuild.txt
	rm -f configdev.eps configbuild.eps
d79 2
a80 7
# dvips requires images to be in the current directory
configure.ps: configure.dvi $(srcdir)/configdev.ein $(srcdir)/configbuild.ein
	rm -f configdev.eps configbuild.eps
	cp $(srcdir)/configdev.ein configdev.eps
	cp $(srcdir)/configbuild.ein configbuild.eps
	$(DVIPS) configure.dvi -o configure.ps
	rm -f configdev.eps configbuild.eps
a81 2
configure.html: $(srcdir)/configure.texi
	$(TEXI2HTML) -split_chapter $(srcdir)/configure.texi
a85 2
	rm -f configdev.txt configbuild.txt configdev.eps configbuild.eps
	rm -f configdev.jpg configbuild.jpg
@


1.1.1.5
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@a4 2
DESTDIR		=

d54 1
a54 2
# We want install to imply install-info as per GNU standards.
install: install-info
d70 1
a70 1
	$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(infodir)
d74 1
a74 1
	    $(INSTALL_DATA) $$i $(DESTDIR)$(infodir)/$$i; \
d80 1
a80 1
	    $(INSTALL_DATA) $$i $(DESTDIR)$(infodir)/$$i; \
@


