head	1.33;
access;
symbols
	OPENBSD_6_2:1.33.0.20
	OPENBSD_6_2_BASE:1.33
	OPENBSD_6_1:1.33.0.18
	OPENBSD_6_1_BASE:1.33
	OPENBSD_6_0:1.33.0.14
	OPENBSD_6_0_BASE:1.33
	OPENBSD_5_9:1.33.0.10
	OPENBSD_5_9_BASE:1.33
	OPENBSD_5_8:1.33.0.12
	OPENBSD_5_8_BASE:1.33
	OPENBSD_5_7:1.33.0.4
	OPENBSD_5_7_BASE:1.33
	OPENBSD_5_6:1.33.0.8
	OPENBSD_5_6_BASE:1.33
	OPENBSD_5_5:1.33.0.6
	OPENBSD_5_5_BASE:1.33
	OPENBSD_5_4:1.33.0.2
	OPENBSD_5_4_BASE:1.33
	OPENBSD_5_3:1.32.0.2
	OPENBSD_5_3_BASE:1.32
	OPENBSD_5_2:1.30.0.24
	OPENBSD_5_2_BASE:1.30
	OPENBSD_5_1_BASE:1.30
	OPENBSD_5_1:1.30.0.22
	OPENBSD_5_0:1.30.0.20
	OPENBSD_5_0_BASE:1.30
	OPENBSD_4_9:1.30.0.18
	OPENBSD_4_9_BASE:1.30
	OPENBSD_4_8:1.30.0.16
	OPENBSD_4_8_BASE:1.30
	OPENBSD_4_7:1.30.0.12
	OPENBSD_4_7_BASE:1.30
	OPENBSD_4_6:1.30.0.14
	OPENBSD_4_6_BASE:1.30
	OPENBSD_4_5:1.30.0.10
	OPENBSD_4_5_BASE:1.30
	OPENBSD_4_4:1.30.0.8
	OPENBSD_4_4_BASE:1.30
	OPENBSD_4_3:1.30.0.6
	OPENBSD_4_3_BASE:1.30
	OPENBSD_4_2:1.30.0.4
	OPENBSD_4_2_BASE:1.30
	OPENBSD_4_1:1.30.0.2
	OPENBSD_4_1_BASE:1.30
	OPENBSD_4_0:1.29.0.8
	OPENBSD_4_0_BASE:1.29
	OPENBSD_3_9:1.29.0.6
	OPENBSD_3_9_BASE:1.29
	OPENBSD_3_8:1.29.0.4
	OPENBSD_3_8_BASE:1.29
	OPENBSD_3_7:1.29.0.2
	OPENBSD_3_7_BASE:1.29
	BINUTILS_2_15:1.1.1.10
	OPENBSD_3_6:1.26.0.2
	OPENBSD_3_6_BASE:1.26
	BINUTILS-2_14:1.1.1.9
	OPENBSD_3_5:1.25.0.6
	OPENBSD_3_5_BASE:1.25
	OPENBSD_3_4:1.25.0.4
	OPENBSD_3_4_BASE:1.25
	OPENBSD_3_3:1.25.0.2
	OPENBSD_3_3_BASE:1.25
	OPENBSD_3_2:1.24.0.2
	OPENBSD_3_2_BASE:1.24
	binutils-2_11_2:1.1.1.8
	OPENBSD_3_1:1.20.0.4
	OPENBSD_3_1_BASE:1.20
	OPENBSD_3_0:1.20.0.2
	OPENBSD_3_0_BASE:1.20
	BINUTILS-2_10_1:1.1.1.7
	OPENBSD_2_9:1.19.0.2
	OPENBSD_2_9_BASE:1.19
	OPENBSD_2_8:1.17.0.2
	OPENBSD_2_8_BASE:1.17
	BINUTILS-2_10:1.1.1.6
	OPENBSD_2_7:1.11.0.6
	OPENBSD_2_7_BASE:1.11
	new-binutils:1.11.0.4
	OPENBSD_2_6:1.11.0.2
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.10.0.8
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.10.0.6
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.10.0.4
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.10.0.2
	OPENBSD_2_2_BASE:1.10
	BINUTILS-2_8_1:1.1.1.5
	OPENBSD_2_1:1.9.0.2
	OPENBSD_2_1_BASE:1.9
	CYGNUS-961112:1.1.1.4
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	CYGNUS-960904:1.1.1.3
	CYGNUS-960609:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.33
date	2013.07.05.21.09.22;	author miod;	state Exp;
branches;
next	1.32;

1.32
date	2013.02.02.13.26.18;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2013.01.01.00.02.01;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2006.10.08.21.12.39;	author miod;	state Exp;
branches;
next	1.29;

1.29
date	2005.01.19.22.40.19;	author grange;	state Exp;
branches;
next	1.28;

1.28
date	2004.11.03.06.40.05;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	2004.11.02.20.45.46;	author miod;	state Exp;
branches;
next	1.26;

1.26
date	2004.05.17.21.54.49;	author drahn;	state Exp;
branches;
next	1.25;

1.25
date	2003.02.06.17.54.44;	author mickey;	state Exp;
branches;
next	1.24;

1.24
date	2002.06.05.19.33.33;	author mickey;	state Exp;
branches;
next	1.23;

1.23
date	2002.06.05.19.16.24;	author mickey;	state Exp;
branches;
next	1.22;

1.22
date	2002.05.13.22.33.44;	author fgsch;	state Exp;
branches;
next	1.21;

1.21
date	2002.05.13.17.07.42;	author fgsch;	state Exp;
branches;
next	1.20;

1.20
date	2001.06.09.22.29.39;	author espie;	state Exp;
branches;
next	1.19;

1.19
date	2001.01.17.00.11.51;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2000.11.20.21.52.49;	author tomo;	state Exp;
branches;
next	1.17;

1.17
date	2000.10.06.22.06.51;	author d;	state Exp;
branches;
next	1.16;

1.16
date	2000.09.21.15.15.59;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2000.09.14.16.48.11;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2000.09.13.12.06.12;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2000.09.12.22.34.52;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2000.09.12.19.12.41;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	99.06.18.02.11.27;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	97.10.13.14.51.42;	author pefo;	state Exp;
branches;
next	1.9;

1.9
date	97.04.13.21.07.59;	author pefo;	state Exp;
branches;
next	1.8;

1.8
date	96.11.23.03.52.22;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	96.10.31.00.31.14;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.10.07.04.02.09;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.09.28.22.59.25;	author pefo;	state Exp;
branches;
next	1.4;

1.4
date	96.09.28.12.37.18;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	96.09.04.19.08.58;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.10.54.00;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.09.09;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.09.09;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.09.19.35.18;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.09.04.17.34.41;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	96.11.19.14.38.28;	author niklas;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	97.05.29.09.28.06;	author niklas;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2000.09.12.14.48.03;	author espie;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2001.06.09.22.08.47;	author espie;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2002.05.13.13.59.58;	author fgsch;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2004.05.17.20.42.48;	author drahn;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2004.11.02.20.23.19;	author miod;	state Exp;
branches;
next	;


desc
@@


1.33
log
@VAX ELF toolchain, using `%' as the register prefix. Heavily based upon
NetBSD.
@
text
@# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @@SHELL@@

srcdir = @@srcdir@@
top_srcdir = @@top_srcdir@@
VPATH = @@srcdir@@
prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

bindir = @@bindir@@
sbindir = @@sbindir@@
libexecdir = @@libexecdir@@
datadir = @@datadir@@
sysconfdir = @@sysconfdir@@
sharedstatedir = @@sharedstatedir@@
localstatedir = @@localstatedir@@
libdir = @@libdir@@
infodir = @@infodir@@
mandir = @@mandir@@
includedir = @@includedir@@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@@PACKAGE@@
pkglibdir = $(libdir)/@@PACKAGE@@
pkgincludedir = $(includedir)/@@PACKAGE@@

top_builddir = .

ACLOCAL = @@ACLOCAL@@
AUTOCONF = @@AUTOCONF@@
AUTOMAKE = @@AUTOMAKE@@
AUTOHEADER = @@AUTOHEADER@@

INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @@INSTALL_DATA@@
INSTALL_SCRIPT = @@INSTALL_SCRIPT@@
transform = @@program_transform_name@@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @@build_alias@@
build_triplet = @@build@@
host_alias = @@host_alias@@
host_triplet = @@host@@
target_alias = @@target_alias@@
target_triplet = @@target@@
AS = @@AS@@
CATALOGS = @@CATALOGS@@
CATOBJEXT = @@CATOBJEXT@@
CC = @@CC@@
CC_FOR_BUILD = @@CC_FOR_BUILD@@
CXXCPP = @@CXXCPP@@
DATADIRNAME = @@DATADIRNAME@@
DLLTOOL = @@DLLTOOL@@
EMULATION_LIBPATH = @@EMULATION_LIBPATH@@
EXEEXT = @@EXEEXT@@
EXEEXT_FOR_BUILD = @@EXEEXT_FOR_BUILD@@
GCJ = @@GCJ@@
GCJFLAGS = @@GCJFLAGS@@
GMOFILES = @@GMOFILES@@
GMSGFMT = @@GMSGFMT@@
GT_NO = @@GT_NO@@
GT_YES = @@GT_YES@@
HDEFINES = @@HDEFINES@@
INCLUDE_LOCALE_H = @@INCLUDE_LOCALE_H@@
INSTOBJEXT = @@INSTOBJEXT@@
INTLDEPS = @@INTLDEPS@@
INTLOBJS = @@INTLOBJS@@
LIBTOOL = @@LIBTOOL@@
LN_S = @@LN_S@@
MAINT = @@MAINT@@
MAKEINFO = @@MAKEINFO@@
MKINSTALLDIRS = @@MKINSTALLDIRS@@
MSGFMT = @@MSGFMT@@
NATIVE_LIB_DIRS = @@NATIVE_LIB_DIRS@@
OBJDUMP = @@OBJDUMP@@
OBJEXT = @@OBJEXT@@
PACKAGE = @@PACKAGE@@
POFILES = @@POFILES@@
POSUB = @@POSUB@@
RANLIB = @@RANLIB@@
STRINGIFY = @@STRINGIFY@@
STRIP = @@STRIP@@
TARGET_SYSTEM_ROOT = @@TARGET_SYSTEM_ROOT@@
TARGET_SYSTEM_ROOT_DEFINE = @@TARGET_SYSTEM_ROOT_DEFINE@@
USE_INCLUDED_LIBINTL = @@USE_INCLUDED_LIBINTL@@
USE_NLS = @@USE_NLS@@
VERSION = @@VERSION@@
bfdincludedir = @@bfdincludedir@@
bfdlibdir = @@bfdlibdir@@
l = @@l@@
use_sysroot = @@use_sysroot@@

INTLLIBS = @@INTLLIBS@@

AUTOMAKE_OPTIONS = cygnus dejagnu

SUBDIRS = po

tooldir = $(exec_prefix)/$(target_alias)

YACC = `if [ -f ../bison/bison ]; then echo ../bison/bison -y -L$(srcdir)/../bison/; else echo @@YACC@@; fi`
YFLAGS = -d
LEX = `if [ -f ../flex/flex ]; then echo ../flex/flex; else echo @@LEX@@; fi`

WARN_CFLAGS = @@WARN_CFLAGS@@
AM_CFLAGS = $(WARN_CFLAGS)

# We put the scripts in the directory $(scriptdir)/ldscripts.
# We can't put the scripts in $(datadir) because the SEARCH_DIR
# directives need to be different for native and cross linkers.
scriptdir = $(tooldir)/lib

EMUL = @@EMUL@@
EMULATION_OFILES = @@EMULATION_OFILES@@
EMUL_EXTRA_OFILES = @@EMUL_EXTRA_OFILES@@

# Search path to override the default search path for -lfoo libraries.
# If LIB_PATH is empty, the ones in the script (if any) are left alone.
# (The default is usually /lib:/usr/lib:/usr/local/lib, unless building
# a cross-linker, in which case the default is empty.  See genscripts.sh.)
# Otherwise, they are replaced with the ones given in LIB_PATH,
# which may have the form: LIB_PATH=/lib:/usr/local/lib.  This can be set
# when the linker is configured via the --with-lib-path configure switch.
LIB_PATH = @@LIB_PATH@@

BASEDIR = $(srcdir)/..
BFDDIR = $(BASEDIR)/bfd
INCDIR = $(BASEDIR)/include
MKDEP = gcc -MM

# What version of the manual to build
DOCVER = gen

# Options to extract the man page from ld.texinfo
MANCONF = -Dman

TEXI2POD = perl $(BASEDIR)/etc/texi2pod.pl

POD2MAN = pod2man --center="GNU Development Tools" \
	--release="binutils-$(VERSION)" --section=1


#stuff for self hosting (can be overridden in config file).
HOSTING_CRT0 = @@HOSTING_CRT0@@
HOSTING_LIBS = @@HOSTING_LIBS@@
HOSTING_EMU = -m $(EMUL)

# Setup the testing framework, if you have one
EXPECT = `if [ -f $$r/../expect/expect ] ; \
	then echo $$r/../expect/expect ; \
	else echo expect ; fi`


RUNTEST = `if [ -f $${srcroot}/../dejagnu/runtest ] ; \
	then echo $${srcroot}/../dejagnu/runtest ; \
	else echo runtest ; fi`


RUNTESTFLAGS = 

CC_FOR_TARGET = ` \
  if [ -f $$r/../gcc/xgcc ] ; then \
    if [ -f $$r/../newlib/Makefile ] ; then \
      echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc; \
    else \
      echo $$r/../gcc/xgcc -B$$r/../gcc/; \
    fi; \
  else \
    if [ "@@host@@" = "@@target@@" ] ; then \
      echo $(CC); \
    else \
      echo gcc | sed '$(transform)'; \
    fi; \
  fi`


CXX = gcc
CXX_FOR_TARGET = ` \
  if [ -f $$r/../gcc/xgcc ] ; then \
    if [ -f $$r/../newlib/Makefile ] ; then \
      echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc; \
    else \
      echo $$r/../gcc/xgcc -B$$r/../gcc/; \
    fi; \
  else \
    if [ "@@host@@" = "@@target@@" ] ; then \
      echo $(CXX); \
    else \
      echo gcc | sed '$(transform)'; \
    fi; \
  fi`


noinst_PROGRAMS = ld-new
info_TEXINFOS = ld.texinfo
noinst_TEXINFOS = ldint.texinfo
man_MANS = ld.1

INCLUDES = -D_GNU_SOURCE -I. -I$(srcdir) -I../bfd -I$(BFDDIR) -I$(INCDIR) -I$(top_srcdir)/../intl -I../intl $(HDEFINES) $(CFLAGS) -DLOCALEDIR="\"$(prefix)/share/locale\""

BFDLIB = ../bfd/libbfd.la
LIBIBERTY = -liberty

ALL_EMULATIONS = \
	ea29k.o \
	eaixppc.o \
	eaixrs6.o \
	ealpha.o \
	earcelf.o \
	earm_epoc_pe.o \
	earmaoutb.o \
	earmaoutl.o \
	earmcoff.o \
	earmelf.o \
	earmelfb.o \
	earmelf_fbsd.o \
	earmelf_linux.o \
	earmelfb_linux.o \
	earmelf_nbsd.o \
	earmelfb_nbsd.o \
	earmelf_oabi.o \
	earmelf_obsd.o \
	earmelfb_obsd.o \
	earmnto.o \
	earmnbsd.o \
	earmpe.o \
	eavr2.o \
	eavr1.o \
	eavr3.o \
	eavr4.o \
	eavr5.o \
	ecoff_i860.o \
	ecoff_sparc.o \
	ecrisaout.o \
	ecriself.o \
	ecrislinux.o \
	ed10velf.o \
	ed30v_e.o \
	ed30v_o.o \
	ed30velf.o \
	edelta68.o \
	eelf32_dlx.o \
	eebmon29k.o \
	eelf32_i960.o \
	eelf32_i860.o \
	eelf32_sparc.o \
	eelf32_sparc_obsd.o \
	eelf32b4300.o \
	eelf32bmip.o \
	eelf32bmipn32.o \
	eelf32btsmip.o \
	eelf32btsmipn32.o \
	eelf32ltsmip.o \
	eelf32ltsmipn32.o \
	eelf32ebmip.o \
	eelf32elmip.o \
	eelf32fr30.o \
	eelf32frv.o \
	eelf32i370.o \
	eelf32ip2k.o \
	eelf32iq2000.o \
	eelf32iq10.o \
	eelf32l4300.o \
	eelf32lmip.o \
	eelf32lppc.o \
	eelf32lppcnto.o \
	eelf32lppcsim.o \
	eelf32m88k.o \
	eelf32m88k_obsd.o \
	eelf32mcore.o \
	eelf32mipswindiss.o \
	eelf32openrisc.o \
	eelf32ppc.o \
	eelf32ppc_fbsd.o \
	eelf32ppc_obsd.o \
	eelf32ppclinux.o \
	eelf32ppcnto.o \
	eelf32ppcsim.o \
	eelf32ppcwindiss.o \
	eelf32vax.o \
	eelf32vax_obsd.o \
	eelf32xstormy16.o \
	eelf32xtensa.o \
	eelf_i386.o \
	eelf_i386_be.o \
	eelf_i386_chaos.o \
	eelf_i386_fbsd.o \
	eelf_i386_ldso.o \
	eelf_i386_obsd.o \
	eelf_s390.o \
	egld960.o \
	egld960coff.o \
	eh8300.o \
	eh8300h.o \
	eh8300s.o \
	eh8300elf.o \
	eh8300hn.o \
	eh8300sn.o \
	eh8300sx.o \
	eh8300helf.o \
	eh8300self.o \
	eh8300hnelf.o \
	eh8300snelf.o \
	eh8300sxelf.o \
	eh8300sxn.o \
	eh8300sxnelf.o \
	eh8500.o \
	eh8500b.o \
	eh8500c.o \
	eh8500m.o \
	eh8500s.o \
	ehp300bsd.o \
	ehp3hpux.o \
	ehppaelf.o \
	ehppalinux.o \
	ehppanbsd.o \
	ehppaobsd.o \
	ei386aout.o \
	ei386beos.o \
	ei386bsd.o \
	ei386coff.o \
	ei386go32.o \
	ei386linux.o \
	ei386lynx.o \
	ei386mach.o \
	ei386moss.o \
	ei386msdos.o \
	ei386nbsd.o \
	ei386obsd.o \
	ei386nto.o \
	ei386nw.o \
	ei386pe.o \
	ei386pe_posix.o \
	elnk960.o \
	em32relf.o \
	em32rlelf.o \
	em32relf_linux.o \
	em32rlelf_linux.o \
	em68hc11elf.o \
	em68hc11elfb.o \
	em68hc12elf.o \
	em68hc12elfb.o \
	em68k4knbsd.o \
	em68kaout.o \
	em68kaux.o \
	em68kcoff.o \
	em68kelf.o \
	em68kelfnbsd.o \
	em68kelfobsd.o \
	em68klinux.o \
	em68klynx.o \
	em68knbsd.o \
	em68kobsd.o \
	em68kpsos.o \
	em88kbcs.o \
	em88kopenbsd.o \
	emcorepe.o \
	emipsbig.o \
	emipsbsd.o \
	emipsidt.o \
	emipsidtl.o \
	emipslit.o \
	emipslnews.o \
	emipspe.o \
	emsp430x110.o \
	emsp430x112.o \
	emsp430x1101.o \
	emsp430x1111.o \
	emsp430x1121.o \
	emsp430x1122.o \
	emsp430x1132.o \
	emsp430x122.o \
	emsp430x123.o \
	emsp430x1222.o \
	emsp430x1232.o \
	emsp430x133.o \
	emsp430x135.o \
	emsp430x1331.o \
	emsp430x1351.o \
	emsp430x147.o \
	emsp430x148.o \
	emsp430x149.o \
	emsp430x155.o \
	emsp430x156.o \
	emsp430x157.o \
	emsp430x167.o \
	emsp430x168.o \
	emsp430x169.o \
	emsp430x311.o \
	emsp430x312.o \
	emsp430x313.o \
	emsp430x314.o \
	emsp430x315.o \
	emsp430x323.o \
	emsp430x325.o \
	emsp430x336.o \
	emsp430x337.o \
	emsp430x412.o \
	emsp430x413.o \
	emsp430xE423.o \
	emsp430xE425.o \
	emsp430xE427.o \
	emsp430xW423.o \
	emsp430xW425.o \
	emsp430xW427.o \
	emsp430x435.o \
	emsp430x436.o \
	emsp430x437.o \
	emsp430x447.o \
	emsp430x448.o \
	emsp430x449.o \
	enews.o \
	ens32knbsd.o \
	eor32.o \
	eor32elf.o \
	epc532macha.o \
	epdp11.o \
	epjelf.o \
	epjlelf.o \
	eppcmacos.o \
	eppcnw.o \
	eppcpe.o \
	eriscix.o \
	esa29200.o \
	esh.o \
	eshelf32.o \
	eshlelf32.o \
	eshelf32_linux.o \
	eshlelf32_linux.o \
	eshelf32_nbsd.o \
	eshlelf32_nbsd.o \
	eshelf.o \
	eshelf_linux.o \
	eshlelf_linux.o \
	eshelf_nbsd.o \
	eshlelf_nbsd.o \
	eshelf_nto.o \
	eshlelf_nto.o \
	eshelf_obsd.o \
	eshlelf_obsd.o \
	eshl.o \
	eshlelf.o \
	eshpe.o \
	esparcaout.o \
	esparclinux.o \
	esparclynx.o \
	esparcnbsd.o \
	esparcobsd.o \
	est2000.o \
	esun3.o \
	esun4.o \
	etic30aout.o \
	etic30coff.o \
	etic3xcoff.o \
	etic3xcoff_onchip.o \
	etic4xcoff.o \
	etic54xcoff.o \
	etic80coff.o \
	evanilla.o \
	evax.o \
	evaxnbsd.o \
	evsta.o \
	ew65.o \
	ez8001.o \
	  eelf32frvfd.o \
	ez8002.o


ALL_64_EMULATIONS = \
	eelf64_aix.o \
	eelf64_ia64.o \
	eelf64_ia64_fbsd.o \
	eshelf64.o \
	eshlelf64.o \
	eshelf64_nbsd.o \
	eshlelf64_nbsd.o \
	eelf_x86_64.o \
	eelf_x86_64_fbsd.o \
	eelf_x86_64_obsd.o \
	eelf64_s390.o \
	eelf64_sparc.o \
	eelf64_sparc_fbsd.o \
	eelf64_sparc_obsd.o \
	eelf64alpha.o \
	eelf64alpha_fbsd.o \
	eelf64alpha_nbsd.o \
	eelf64alpha_obsd.o \
	eelf64bmip.o \
	eelf64btsmip.o \
	eelf64btsmip_obsd.o \
	eelf64ltsmip.o \
	eelf64ltsmip_obsd.o \
	eelf64hppa.o \
	eelf64mmix.o \
	emmo.o \
	eelf64ppc.o \
	eelf64lppc.o \
	ehppa64linux.o


ALL_EMUL_EXTRA_OFILES = \
	deffilep.o \
	pe-dll.o


CFILES = ldctor.c ldemul.c ldexp.c ldfile.c ldlang.c \
	ldmain.c ldmisc.c ldver.c ldwrite.c lexsup.c \
	mri.c ldcref.c pe-dll.c


HFILES = ld.h ldctor.h ldemul.h ldexp.h ldfile.h \
	ldlang.h ldlex.h ldmain.h ldmisc.h ldver.h \
	ldwrite.h mri.h deffile.h pe-dll.h


GENERATED_CFILES = ldgram.c ldlex.c deffilep.c
GENERATED_HFILES = ldgram.h ldemul-list.h deffilep.h

OFILES = ldgram.o ldlex.o lexsup.o ldlang.o mri.o ldctor.o ldmain.o \
	ldwrite.o ldexp.o  ldemul.o ldver.o ldmisc.o \
	ldfile.o ldcref.o ${EMULATION_OFILES} ${EMUL_EXTRA_OFILES}


STAGESTUFF = *.o ldscripts/* e*.c

# At the moment this is just a list of those emulation template files
# that contain internationalised strings.
EMULATION_FILES = emultempl/pe.em emultempl/armcoff.em

POTFILES = $(CFILES) $(HFILES) $(EMULATION_FILES)

# These all start with e so 'make clean' can find them.

GENSCRIPTS = LIB_PATH='${LIB_PATH}' $(SHELL) $(srcdir)/genscripts.sh ${srcdir} ${libdir} "${exec_prefix}" @@host@@ @@target@@ @@target_alias@@ "@@EMULATION_LIBPATH@@" "@@NATIVE_LIB_DIRS@@" @@use_sysroot@@
GEN_DEPENDS = $(srcdir)/genscripts.sh stringify.sed

# We need this for automake to use YLWRAP.
EXTRA_ld_new_SOURCES = deffilep.y

ld_new_SOURCES = ldgram.y ldlex.l lexsup.c ldlang.c mri.c ldctor.c ldmain.c \
	ldwrite.c ldexp.c ldemul.c ldver.c ldmisc.c ldfile.c ldcref.c

ld_new_DEPENDENCIES = $(EMULATION_OFILES) $(EMUL_EXTRA_OFILES) $(BFDLIB) $(INTLDEPS)
ld_new_LDADD = $(EMULATION_OFILES) $(EMUL_EXTRA_OFILES) $(BFDLIB) $(LIBIBERTY) $(INTLLIBS)

# This is the real libbfd.a created by libtool.
TESTBFDLIB = @@TESTBFDLIB@@

MAINTAINERCLEANFILES = ldver.texi

# We want to reconfigure if configure.host or configure.tgt changes.
CONFIG_STATUS_DEPENDENCIES = $(srcdir)/configure.host $(srcdir)/configure.tgt

MOSTLYCLEANFILES = $(STAGESTUFF) ld1$(EXEEXT) ld2$(EXEEXT) ld3$(EXEEXT) \
	ldemul-list.h crtbegin.o crtend.o ld.log ld.sum

CLEANFILES = dep.sed DEP DEPA DEP1 DEP2

# Stuff that should be included in a distribution.  The diststuff
# target is run by the taz target in ../Makefile.in.
EXTRA_DIST = ldgram.c ldgram.h ldlex.c $(man_MANS)

DISTCLEANFILES = tdirs site.exp site.bak stringify.sed
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = 
noinst_PROGRAMS =  ld-new$(EXEEXT)
PROGRAMS =  $(noinst_PROGRAMS)


DEFS = @@DEFS@@ -I. -I$(srcdir) -I.
CPPFLAGS = @@CPPFLAGS@@
LDFLAGS = @@LDFLAGS@@
LIBS = @@LIBS@@
ld_new_OBJECTS =  ldgram.$(OBJEXT) ldlex.$(OBJEXT) lexsup.$(OBJEXT) \
ldlang.$(OBJEXT) mri.$(OBJEXT) ldctor.$(OBJEXT) ldmain.$(OBJEXT) \
ldwrite.$(OBJEXT) ldexp.$(OBJEXT) ldemul.$(OBJEXT) ldver.$(OBJEXT) \
ldmisc.$(OBJEXT) ldfile.$(OBJEXT) ldcref.$(OBJEXT)
ld_new_LDFLAGS = 
LEX_OUTPUT_ROOT = @@LEX_OUTPUT_ROOT@@
LEXLIB = @@LEXLIB@@
YLWRAP = $(top_srcdir)/../ylwrap
CFLAGS = @@CFLAGS@@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@@
TEXI2DVI = `if test -f $(top_srcdir)/../texinfo/util/texi2dvi; then echo $(top_srcdir)/../texinfo/util/texi2dvi; else echo texi2dvi; fi`
TEXINFO_TEX = $(top_srcdir)/../texinfo/texinfo.tex
INFO_DEPS = ld.info
DVIS = ld.dvi
TEXINFOS = ld.texinfo
man1dir = $(mandir)/man1
MANS = $(man_MANS)

NROFF = nroff
DIST_COMMON =  README ./stamp-h.in ChangeLog Makefile.am Makefile.in \
NEWS TODO acinclude.m4 aclocal.m4 config.in configure configure.in \
deffilep.c ldgram.c ldlex.c


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(ld_new_SOURCES) $(EXTRA_ld_new_SOURCES)
OBJECTS = $(ld_new_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .dvi .info .l .lo .o .obj .ps .s .texi .texinfo .txi .y
$(srcdir)/Makefile.in: @@MAINTAINER_MODE_TRUE@@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --cygnus Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$@@ CONFIG_HEADERS= $(SHELL) ./config.status

$(ACLOCAL_M4): @@MAINTAINER_MODE_TRUE@@ configure.in  acinclude.m4
	cd $(srcdir) && $(ACLOCAL)

config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
$(srcdir)/configure: @@MAINTAINER_MODE_TRUE@@$(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

config.h: stamp-h
	@@if test ! -f $@@; then \
		rm -f stamp-h; \
		$(MAKE) stamp-h; \
	else :; fi
stamp-h: $(srcdir)/config.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES= CONFIG_HEADERS=config.h:config.in \
	     $(SHELL) ./config.status
	@@echo timestamp > stamp-h 2> /dev/null
$(srcdir)/config.in: @@MAINTAINER_MODE_TRUE@@$(srcdir)/stamp-h.in
	@@if test ! -f $@@; then \
		rm -f $(srcdir)/stamp-h.in; \
		$(MAKE) $(srcdir)/stamp-h.in; \
	else :; fi
$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	@@echo timestamp > $(srcdir)/stamp-h.in 2> /dev/null

mostlyclean-hdr:

clean-hdr:

distclean-hdr:
	-rm -f config.h

maintainer-clean-hdr:

mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

ld-new$(EXEEXT): $(ld_new_OBJECTS) $(ld_new_DEPENDENCIES)
	@@rm -f ld-new$(EXEEXT)
	$(LINK) $(ld_new_LDFLAGS) $(ld_new_OBJECTS) $(ld_new_LDADD) $(LIBS)
.l.c:
	$(LEX) $(AM_LFLAGS) $(LFLAGS) $< && mv $(LEX_OUTPUT_ROOT).c $@@
.y.c:
	$(SHELL) $(YLWRAP) "$(YACC)" $< y.tab.c $*.c y.tab.h $*.h -- $(AM_YFLAGS) $(YFLAGS)
deffilep.h: deffilep.c
ldgram.h: ldgram.c


ld.info: ld.texinfo
ld.dvi: ld.texinfo


DVIPS = dvips

.texi.info:
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) $<

.texi.dvi:
	TEXINPUTS=$(top_srcdir)/../texinfo/texinfo.tex:$$TEXINPUTS \
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2DVI) $<

.texi:
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) $<

.texinfo.info:
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) $<

.texinfo:
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) $<

.texinfo.dvi:
	TEXINPUTS=$(top_srcdir)/../texinfo/texinfo.tex:$$TEXINPUTS \
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2DVI) $<

.txi.info:
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) $<

.txi.dvi:
	TEXINPUTS=$(top_srcdir)/../texinfo/texinfo.tex:$$TEXINPUTS \
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2DVI) $<

.txi:
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) $<
.dvi.ps:
	$(DVIPS) $< -o $@@

install-info-am: $(INFO_DEPS)
	@@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(infodir)
	@@list='$(INFO_DEPS)'; \
	for file in $$list; do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  for ifile in `cd $$d && echo $$file $$file-[0-9] $$file-[0-9][0-9]`; do \
	    if test -f $$d/$$ifile; then \
	      echo " $(INSTALL_DATA) $$d/$$ifile $(DESTDIR)$(infodir)/$$ifile"; \
	      $(INSTALL_DATA) $$d/$$ifile $(DESTDIR)$(infodir)/$$ifile; \
	    else : ; fi; \
	  done; \
	done
	@@$(POST_INSTALL)
	@@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/dev/null 2>&1; then \
	  list='$(INFO_DEPS)'; \
	  for file in $$list; do \
	    echo " install-info --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/$$file";\
	    install-info --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/$$file || :;\
	  done; \
	else : ; fi

uninstall-info:
	$(PRE_UNINSTALL)
	@@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/dev/null 2>&1; then \
	  ii=yes; \
	else ii=; fi; \
	list='$(INFO_DEPS)'; \
	for file in $$list; do \
	  test -z "$$ii" \
	    || install-info --info-dir=$(DESTDIR)$(infodir) --remove $$file; \
	done
	@@$(NORMAL_UNINSTALL)
	list='$(INFO_DEPS)'; \
	for file in $$list; do \
	  (cd $(DESTDIR)$(infodir) && rm -f $$file $$file-[0-9] $$file-[0-9][0-9]); \
	done

dist-info: $(INFO_DEPS)
	list='$(INFO_DEPS)'; \
	for base in $$list; do \
	  if test -f $$base; then d=.; else d=$(srcdir); fi; \
	  for file in `cd $$d && eval echo $$base*`; do \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file; \
	  done; \
	done

mostlyclean-aminfo:
	-rm -f ld.aux ld.cp ld.cps ld.dvi ld.fn ld.fns ld.ky ld.kys ld.ps \
	  ld.log ld.pg ld.toc ld.tp ld.tps ld.vr ld.vrs ld.op ld.tr \
	  ld.cv ld.cn

clean-aminfo:

distclean-aminfo:

maintainer-clean-aminfo:
	for i in $(INFO_DEPS); do \
	  rm -f $$i; \
	  if test "`echo $$i-[0-9]*`" != "$$i-[0-9]*"; then \
	    rm -f $$i-[0-9]*; \
	  fi; \
	done
clean-info: mostlyclean-aminfo

install-man1:
	$(mkinstalldirs) $(DESTDIR)$(man1dir)
	@@list='$(man1_MANS)'; \
	l2='$(man_MANS)'; for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) $$file $(DESTDIR)$(man1dir)/$$inst"; \
	  $(INSTALL_DATA) $$file $(DESTDIR)$(man1dir)/$$inst; \
	done

uninstall-man1:
	@@list='$(man1_MANS)'; \
	l2='$(man_MANS)'; for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f $(DESTDIR)$(man1dir)/$$inst"; \
	  rm -f $(DESTDIR)$(man1dir)/$$inst; \
	done
install-man: $(MANS)
	@@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS)
uninstall-man:
	@@$(NORMAL_UNINSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-man1

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@@SET_MAKE@@

all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive install-info-recursive \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" != "." || dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.in $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)config.in$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags config.in $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	-rm -rf $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) zxf $(distdir).tar.gz
	mkdir $(distdir)/=build
	mkdir $(distdir)/=inst
	dc_install_base=`cd $(distdir)/=inst && pwd`; \
	cd $(distdir)/=build \
	  && ../configure --srcdir=.. --prefix=$$dc_install_base \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) dist
	-rm -rf $(distdir)
	@@banner="$(distdir).tar.gz is ready for distribution"; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"
dist: distdir
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
dist-all: distdir
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
distdir: $(DISTFILES)
	-rm -rf $(distdir)
	mkdir $(distdir)
	-chmod 777 $(distdir)
	@@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-info

DEJATOOL = $(PACKAGE)

RUNTESTDEFAULTFLAGS = --tool $(DEJATOOL) --srcdir $$srcdir
site.exp: Makefile
	@@echo 'Making a new site.exp file...'
	@@test ! -f site.bak || rm -f site.bak
	@@echo '## these variables are automatically generated by make ##' > $@@-t
	@@echo '# Do not edit here.  If you wish to override these values' >> $@@-t
	@@echo '# edit the last section' >> $@@-t
	@@echo 'set tool $(DEJATOOL)' >> $@@-t
	@@echo 'set srcdir $(srcdir)' >> $@@-t
	@@echo 'set objdir' `pwd` >> $@@-t
	@@echo 'set host_alias $(host_alias)' >> $@@-t
	@@echo 'set host_triplet $(host_triplet)' >> $@@-t
	@@echo 'set target_alias $(target_alias)' >> $@@-t
	@@echo 'set target_triplet $(target_triplet)' >> $@@-t
	@@echo 'set build_alias $(build_alias)' >> $@@-t
	@@echo 'set build_triplet $(build_triplet)' >> $@@-t
	@@echo '## All variables above are generated by configure. Do Not Edit ##' >> $@@-t
	@@test ! -f site.exp || sed '1,/^## All variables above are.*##/ d' site.exp >> $@@-t
	@@test ! -f site.exp || mv site.exp site.bak
	@@mv $@@-t site.exp
info-am: $(INFO_DEPS)
info: info-recursive
dvi-am: $(DVIS)
dvi: dvi-recursive
check-am:
	$(MAKE) $(AM_MAKEFLAGS) check-DEJAGNU
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
install-info-am: 
install-info: install-info-recursive
all-recursive-am: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

install-exec-am: install-exec-local
install-exec: install-exec-recursive

install-data-am: install-man install-data-local
install-data: install-data-recursive

install-am: all-am
	@@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am: uninstall-man
uninstall: uninstall-recursive
all-am: Makefile $(PROGRAMS) $(MANS) config.h
all-redirect: all-recursive-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs)  $(DESTDIR)$(mandir)/man1


mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	-test -z "ldlexldeffilephdeffilepcldgramhldgramc$(MAINTAINERCLEANFILES)" || rm -f ldlexl deffileph deffilepc ldgramh ldgramc $(MAINTAINERCLEANFILES)
mostlyclean-am:  mostlyclean-hdr mostlyclean-noinstPROGRAMS \
		mostlyclean-compile mostlyclean-libtool \
		mostlyclean-aminfo mostlyclean-tags mostlyclean-generic \
		mostlyclean-local

mostlyclean: mostlyclean-recursive

clean-am:  clean-hdr clean-noinstPROGRAMS clean-compile clean-libtool \
		clean-aminfo clean-tags clean-generic mostlyclean-am

clean: clean-recursive

distclean-am:  distclean-hdr distclean-noinstPROGRAMS distclean-compile \
		distclean-libtool distclean-aminfo distclean-tags \
		distclean-generic clean-am distclean-local
	-rm -f libtool

distclean: distclean-recursive
	-rm -f config.status

maintainer-clean-am:  maintainer-clean-hdr \
		maintainer-clean-noinstPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-aminfo maintainer-clean-tags \
		maintainer-clean-generic distclean-am
	@@echo "This command is intended for maintainers to use;"
	@@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive
	-rm -f config.status

.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \
mostlyclean-noinstPROGRAMS distclean-noinstPROGRAMS \
clean-noinstPROGRAMS maintainer-clean-noinstPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool install-info-am uninstall-info \
mostlyclean-aminfo distclean-aminfo clean-aminfo \
maintainer-clean-aminfo install-man1 uninstall-man1 install-man \
uninstall-man install-data-recursive uninstall-data-recursive \
install-exec-recursive uninstall-exec-recursive installdirs-recursive \
uninstalldirs-recursive all-recursive check-recursive \
installcheck-recursive info-recursive dvi-recursive \
mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir check-DEJAGNU \
info-am info dvi-am dvi check check-am installcheck-am installcheck \
install-info-am install-info all-recursive-am install-exec-local \
install-exec-am install-exec install-data-local install-data-am \
install-data install-am install uninstall-am uninstall all-redirect \
all-am all installdirs-am installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


po/POTFILES.in: @@MAINT@@ Makefile
	for f in $(POTFILES); do echo $$f; done | LC_COLLATE= sort > tmp \
	  && mv tmp $(srcdir)/po/POTFILES.in

ldmain.o: ldmain.c config.status
	$(COMPILE) -c -DDEFAULT_EMULATION='"$(EMUL)"' \
	  -DSCRIPTDIR='"$(scriptdir)"' -DBINDIR='"$(bindir)"' \
	  -DTOOLBINDIR='"$(tooldir)/bin"' \
	  -DTARGET='"@@target@@"' @@TARGET_SYSTEM_ROOT_DEFINE@@ \
	  $(srcdir)/ldmain.c

ldemul-list.h: Makefile
	(echo "/* This file is automatically generated.  DO NOT EDIT! */";\
	for f in `echo " " ${EMULATION_OFILES} "" \
	 | sed -e 's/ e/ ld/g' -e 's/ ld/ /g' -e 's/[.]o//g'`; do \
	    echo "extern ld_emulation_xfer_type ld_$${f}_emulation;"; \
	done;\
	echo "";\
	echo "#define EMULATION_LIST \\";\
	for f in `echo " " ${EMULATION_OFILES} "" \
	 | sed -e 's/ e/ ld/g' -e 's/ ld/ /g' -e 's/[.]o//g'`; do \
	    echo "  &ld_$${f}_emulation, \\"; \
	done;\
	echo "  0") >ldemul-tmp.h
	mv ldemul-tmp.h ldemul-list.h

stringify.sed: ${srcdir}/emultempl/$(STRINGIFY)
	  cp ${srcdir}/emultempl/$(STRINGIFY) stringify.sed

@@TDIRS@@

ea29k.c: $(srcdir)/emulparams/a29k.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/a29k.sc ${GEN_DEPENDS}
	${GENSCRIPTS} a29k "$(tdir_a29k)"
eaix5ppc.c: $(srcdir)/emulparams/aix5ppc.sh \
  $(srcdir)/emultempl/aix.em $(srcdir)/scripttempl/aix.sc ${GEN_DEPENDS}
	${GENSCRIPTS} aix5ppc "$(tdir_aixppc)"
eaix5rs6.c: $(srcdir)/emulparams/aix5rs6.sh \
  $(srcdir)/emultempl/aix.em $(srcdir)/scripttempl/aix.sc ${GEN_DEPENDS}
	${GENSCRIPTS} aix5rs6 "$(tdir_aixrs6)"
eaixppc.c: $(srcdir)/emulparams/aixppc.sh \
  $(srcdir)/emultempl/aix.em $(srcdir)/scripttempl/aix.sc ${GEN_DEPENDS}
	${GENSCRIPTS} aixppc "$(tdir_aixppc)"
eaixrs6.c: $(srcdir)/emulparams/aixrs6.sh \
  $(srcdir)/emultempl/aix.em $(srcdir)/scripttempl/aix.sc ${GEN_DEPENDS}
	${GENSCRIPTS} aixrs6 "$(tdir_aixrs6)"
ealpha.c: $(srcdir)/emulparams/alpha.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/alpha.sc ${GEN_DEPENDS}
	${GENSCRIPTS} alpha "$(tdir_alpha)"
earcelf.c: $(srcdir)/emulparams/arcelf.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} arcelf "$(tdir_arcelf)"
earmelf.c: $(srcdir)/emulparams/armelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelf "$(tdir_armelf)"
earmelfb.c: $(srcdir)/emulparams/armelfb.sh $(srcdir)/emulparams/armelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelfb "$(tdir_armelfb)"
earmelf_oabi.c: $(srcdir)/emulparams/armelf_oabi.sh \
  $(srcdir)/emultempl/armelf_oabi.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelf_oabi "$(tdir_armelf)"
earmelf_fbsd.c: $(srcdir)/emulparams/armelf_fbsd.sh \
  $(srcdir)/emulparams/armelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelf_fbsd "$(tdir_armelf_fbsd)"
earmelf_linux.c: $(srcdir)/emulparams/armelf_linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelf_linux "$(tdir_armelf_linux)"
earmelfb_linux.c: $(srcdir)/emulparams/armelfb_linux.sh \
  $(srcdir)/emulparams/armelf_linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelfb_linux "$(tdir_armelfb_linux)"
earmelf_nbsd.c: $(srcdir)/emulparams/armelf_nbsd.sh \
  $(srcdir)/emulparams/armelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelf_nbsd "$(tdir_armelf_nbsd)"
earmelfb_nbsd.c: $(srcdir)/emulparams/armelfb_nbsd.sh \
  $(srcdir)/emulparams/armelf_nbsd.sh \
  $(srcdir)/emulparams/armelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelfb_nbsd "$(tdir_armelfb_nbsd)"
earmelf_obsd.c: $(srcdir)/emulparams/armelf_obsd.sh \
  $(srcdir)/emulparams/armelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelf_obsd "$(tdir_armelf_obsd)"
earmelfb_obsd.c: $(srcdir)/emulparams/armelfb_obsd.sh \
  $(srcdir)/emulparams/armelf_obsd.sh \
  $(srcdir)/emulparams/armelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelfb_obsd "$(tdir_armelfb_obsd)"
earmaoutb.c:	$(srcdir)/emulparams/armaoutb.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/armaout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armaoutb "$(tdir_armaoutb)"
earmaoutl.c:	$(srcdir)/emulparams/armaoutl.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/armaout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armaoutl "$(tdir_armaoutl)"
earmcoff.c:	$(srcdir)/emulparams/armcoff.sh \
  $(srcdir)/emultempl/armcoff.em $(srcdir)/scripttempl/armcoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armcoff "$(tdir_armcoff)"
earmnbsd.c:	$(srcdir)/emulparams/armnbsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armnbsd "$(tdir_armnbsd)"
earmnto.c: $(srcdir)/emulparams/armnto.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armnto "$(tdir_armnto)"
earm_epoc_pe.c: $(srcdir)/emulparams/arm_epoc_pe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/epocpe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} arm_epoc_pe "$(tdir_armpe)"
earmpe.c: $(srcdir)/emulparams/armpe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/pe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armpe "$(tdir_armpe)"
eavr2.c: $(srcdir)/emulparams/avr2.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr2 "$(tdir_avr2)"
eavr1.c: $(srcdir)/emulparams/avr1.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr1 "$(tdir_avr2)"
eavr3.c: $(srcdir)/emulparams/avr3.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr3 "$(tdir_avr2)"
eavr4.c: $(srcdir)/emulparams/avr4.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr4 "$(tdir_avr2)"
eavr5.c: $(srcdir)/emulparams/avr5.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr5 "$(tdir_avr2)"
ecoff_i860.c: $(srcdir)/emulparams/coff_i860.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/i860coff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} coff_i860 "$(tdir_coff_i860)"
ecoff_sparc.c: $(srcdir)/emulparams/coff_sparc.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sparccoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} coff_sparc "$(tdir_coff_sparc)"
ecrisaout.c: $(srcdir)/emulparams/crisaout.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/crisaout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} crisaout "$(tdir_cris)"
ecriself.c: $(srcdir)/emulparams/criself.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} criself "$(tdir_cris)"
ecrislinux.c: $(srcdir)/emulparams/crislinux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} crislinux "$(tdir_cris)"
ed10velf.c: $(srcdir)/emulparams/d10velf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfd10v.sc ${GEN_DEPENDS}
	${GENSCRIPTS} d10velf "$(tdir_d10v)"
ed30velf.c: $(srcdir)/emulparams/d30velf.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfd30v.sc ${GEN_DEPENDS}
	${GENSCRIPTS} d30velf "$(tdir_d30v)"
ed30v_o.c: $(srcdir)/emulparams/d30v_o.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfd30v.sc ${GEN_DEPENDS}
	${GENSCRIPTS} d30v_o "$(tdir_d30v)"
ed30v_e.c: $(srcdir)/emulparams/d30v_e.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfd30v.sc ${GEN_DEPENDS}
	${GENSCRIPTS} d30v_e "$(tdir_d30v)"
edelta68.c: $(srcdir)/emulparams/delta68.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/delta68.sc ${GEN_DEPENDS}
	${GENSCRIPTS} delta68 "$(tdir_delta68)"
eelf32_dlx.c: $(srcdir)/emulparams/elf32_dlx.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/dlx.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32_dlx "$(tdir_elf32_dlx)"
eebmon29k.c: $(srcdir)/emulparams/ebmon29k.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/ebmon29k.sc ${GEN_DEPENDS}
	${GENSCRIPTS} ebmon29k "$(tdir_ebmon29k)"
eelf32xstormy16.c: $(srcdir)/emulparams/elf32xstormy16.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/needrelax.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32xstormy16 "$(tdir_xstormy16)"
eelf32am33lin.c: $(srcdir)/emulparams/elf32am33lin.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32am33lin "$(tdir_mn10300)"
eelf32vax.c: $(srcdir)/emulparams/elf32vax.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32vax "$(tdir_elf32vax)"
eelf32vax_obsd.c: $(srcdir)/emulparams/elf32vax_obsd.sh \
  $(srcdir)/emulparams/elf32vax.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32vax_obsd "$(tdir_elf32vax_obsd)"
eelf32xtensa.c: $(srcdir)/emulparams/elf32xtensa.sh \
  $(srcdir)/emulparams/xtensa-config.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/xtensaelf.em \
  $(srcdir)/scripttempl/elfxtensa.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32xtensa "$(tdir_elf32xtensa)"
eelf32fr30.c: $(srcdir)/emulparams/elf32fr30.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32fr30 "$(tdir_fr30)"
eelf32frv.c: $(srcdir)/emulparams/elf32frv.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32frv "$(tdir_frv)"
eelf32mcore.c: $(srcdir)/emulparams/elf32mcore.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32mcore "$(tdir_mcore)"
em32relf.c: $(srcdir)/emulparams/m32relf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m32relf "$(tdir_m32r)"
em32rlelf.c: $(srcdir)/emulparams/m32rlelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m32rlelf "$(tdir_m32rlelf)"
em32relf_linux.c: $(srcdir)/emulparams/m32relf_linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m32relf_linux "$(tdir_m32relf_linux)"
em32rlelf_linux.c: $(srcdir)/emulparams/m32rlelf_linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m32rlelf_linux "$(tdir_m32rlelf_linux)"
eelf32_sparc.c: $(srcdir)/emulparams/elf32_sparc.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32_sparc "$(tdir_elf32_sparc)"
eelf32_sparc_obsd.c: $(srcdir)/emulparams/elf32_sparc_obsd.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32_sparc_obsd "$(tdir_elf32_sparc_obsd)"
eelf32_i860.c: $(srcdir)/emulparams/elf32_i860.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32_i860 "$(tdir_elf32_i860)"
eelf32_i960.c: $(srcdir)/emulparams/elf32_i960.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32_i960 "$(tdir_elf32_i960)"
eelf32b4300.c: $(srcdir)/emulparams/elf32b4300.sh \
  $(srcdir)/emulparams/elf32bmip.sh $(srcdir)/emultempl/mipself.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32b4300 "$(tdir_elf32b4300)"
eelf32bmip.c: $(srcdir)/emulparams/elf32bmip.sh \
  $(srcdir)/emultempl/mipself.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32bmip "$(tdir_elf32bmip)"
eelf32bsmip.c: $(srcdir)/emulparams/elf32bsmip.sh \
  $(srcdir)/emulparams/elf32bmip.sh $(srcdir)/emultempl/irix.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32bsmip "$(tdir_elf32bsmip)"
eelf32btsmip.c: $(srcdir)/emulparams/elf32btsmip.sh \
  $(srcdir)/emulparams/elf32bmip.sh $(srcdir)/emultempl/mipself.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32btsmip "$(tdir_elf32btsmip)"
eelf32btsmipn32.c: $(srcdir)/emulparams/elf32btsmipn32.sh \
  $(srcdir)/emulparams/elf32bmip.sh $(srcdir)/emultempl/mipself.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32btsmipn32 "$(tdir_elf32btsmipn32)"
eelf32ltsmip.c: $(srcdir)/emulparams/elf32ltsmip.sh \
  $(srcdir)/emulparams/elf32btsmip.sh $(srcdir)/emulparams/elf32bmip.sh \
  $(srcdir)/emultempl/mipself.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ltsmip "$(tdir_elf32ltsmip)"
eelf32ltsmipn32.c: $(srcdir)/emulparams/elf32ltsmipn32.sh \
  $(srcdir)/emulparams/elf32btsmip.sh $(srcdir)/emulparams/elf32bmip.sh \
  $(srcdir)/emultempl/mipself.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ltsmipn32 "$(tdir_elf32ltsmipn32)"
eelf32ebmip.c: $(srcdir)/emulparams/elf32ebmip.sh \
  $(srcdir)/emulparams/elf32bmip.sh $(srcdir)/emultempl/mipself.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ebmip "$(tdir_elf32ebmip)"
eelf32elmip.c: $(srcdir)/emulparams/elf32elmip.sh \
  $(srcdir)/emulparams/elf32lmip.sh $(srcdir)/emulparams/elf32bmip.sh \
  $(srcdir)/emultempl/mipself.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32elmip "$(tdir_elf32elmip)"
eelf32bmipn32.c: $(srcdir)/emulparams/elf32bmipn32.sh \
  $(srcdir)/emultempl/irix.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32bmipn32 "$(tdir_elf32bmipn32)"
eelf32l4300.c: $(srcdir)/emulparams/elf32l4300.sh \
  $(srcdir)/emulparams/elf32b4300.sh $(srcdir)/emulparams/elf32bmip.sh \
  $(srcdir)/emultempl/mipself.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32l4300 "$(tdir_elf32l4300)"
eelf32lmip.c: $(srcdir)/emulparams/elf32lmip.sh \
  $(srcdir)/emulparams/elf32bmip.sh $(srcdir)/emultempl/mipself.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32lmip "$(tdir_elf32lmip)"
eelf32mipswindiss.c: $(srcdir)/emulparams/elf32mipswindiss.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32mipswindiss "$(tdir_elf32mipswindiss)"
eelf32lppc.c: $(srcdir)/emulparams/elf32lppc.sh \
  $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32lppc "$(tdir_elf32lppc)"
eelf32lppcnto.c: $(srcdir)/emulparams/elf32lppcnto.sh \
  $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32lppcnto "$(tdir_elf32lppcnto)"
eelf32lppcsim.c: $(srcdir)/emulparams/elf32lppcsim.sh \
  $(srcdir)/emulparams/elf32lppc.sh $(srcdir)/emulparams/elf32ppc.sh \
  $(srcdir)/emultempl/ppc32elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32lppcsim "$(tdir_elf32lppcsim)"
eelf32m88k.c: $(srcdir)/emulparams/elf32m88k.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32m88k "$(tdir_elf32m88k)"
eelf32m88k_obsd.c: $(srcdir)/emulparams/elf32m88k_obsd.sh \
  $(srcdir)/emulparams/elf32m88k.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32m88k_obsd "$(tdir_elf32m88k_obsd)"
eelf32ppcnto.c: $(srcdir)/emulparams/elf32ppcnto.sh \
  $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppcnto "$(tdir_elf32ppcnto)"
eelf32ppcwindiss.c: $(srcdir)/emulparams/elf32ppcwindiss.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppcwindiss "$(tdir_elf32ppcwindiss)"
eelf32lsmip.c: $(srcdir)/emulparams/elf32lsmip.sh \
  $(srcdir)/emulparams/elf32lmip.sh $(srcdir)/emulparams/elf32bmip.sh \
  $(srcdir)/emultempl/mipself.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32lsmip "$(tdir_elf32lsmip)"
eelf32openrisc.c: $(srcdir)/emulparams/elf32openrisc.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32openrisc "$(tdir_openrisc)"
eelf32ppc.c: $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppc "$(tdir_elf32ppc)"
eelf32ppc_fbsd.c: $(srcdir)/emulparams/elf32ppc_fbsd.sh \
  $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppc_fbsd "$(tdir_elf32ppc_fbsd)"
eelf32ppc_obsd.c: $(srcdir)/emulparams/elf32ppc_obsd.sh \
  $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppc_obsd "$(tdir_elf32ppc_obsd)"
eelf32ppcsim.c: $(srcdir)/emulparams/elf32ppcsim.sh \
  $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppcsim "$(tdir_elf32ppcsim)"
eelf32ppclinux.c: $(srcdir)/emulparams/elf32ppclinux.sh \
  $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppclinux "$(tdir_elf32ppclinux)"
eelf64ppc.c: $(srcdir)/emulparams/elf64ppc.sh $(srcdir)/emultempl/ppc64elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64ppc "$(tdir_elf64ppc)"
eelf64lppc.c: $(srcdir)/emulparams/elf64lppc.sh \
  $(srcdir)/emulparams/elf64ppc.sh $(srcdir)/emultempl/ppc64elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64lppc "$(tdir_elf64lppc)"
eelf32i370.c: $(srcdir)/emulparams/elf32i370.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfi370.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32i370 "$(tdir_elf32i370)"
eelf32ip2k.c: $(srcdir)/emulparams/elf32ip2k.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/ip2k.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ip2k "$(tdir_ip2k)"
eelf32iq2000.c: $(srcdir)/emulparams/elf32iq2000.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/iq2000.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32iq2000 "$(tdir_iq2000)"
eelf32iq10.c: $(srcdir)/emulparams/elf32iq10.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/iq2000.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32iq10 "$(tdir_iq10)"
eelf64alpha.c: $(srcdir)/emulparams/elf64alpha.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64alpha "$(tdir_elf64alpha)"
eelf64alpha_fbsd.c: $(srcdir)/emulparams/elf64alpha_fbsd.sh \
  $(srcdir)/emulparams/elf64alpha.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64alpha_fbsd "$(tdir_elf64alpha_fbsd)"
eelf64alpha_nbsd.c: $(srcdir)/emulparams/elf64alpha_nbsd.sh \
  $(srcdir)/emulparams/elf64alpha.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64alpha_nbsd "$(tdir_elf64alpha_nbsd)"
eelf64alpha_obsd.c: $(srcdir)/emulparams/elf64alpha_obsd.sh \
  $(srcdir)/emulparams/elf64alpha.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64alpha_obsd "$(tdir_elf64alpha_obsd)"
eelf64hppa.c: $(srcdir)/emulparams/elf64hppa.sh \
  $(srcdir)/emulparams/hppa64linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64hppa "$(tdir_elf64hppa)"
eelf64_aix.c: $(srcdir)/emulparams/elf64_aix.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64_aix "$(tdir_elf64_aix)"
eelf64_ia64.c: $(srcdir)/emulparams/elf64_ia64.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/ia64elf.em \
  $(srcdir)/emultempl/needrelax.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64_ia64 "$(tdir_elf64_ia64)"
eelf64_ia64_fbsd.c: $(srcdir)/emulparams/elf64_ia64_fbsd.sh \
  $(srcdir)/emulparams/elf64_ia64.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/ia64elf.em \
  $(srcdir)/emultempl/needrelax.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64_ia64_fbsd "$(tdir_elf64_ia64_fbsd)"
eelf64_s390.c: $(srcdir)/emulparams/elf64_s390.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64_s390 "$(tdir_elf64_s390)"
eelf64_sparc.c: $(srcdir)/emulparams/elf64_sparc.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64_sparc "$(tdir_elf64_sparc)"
eelf64_sparc_fbsd.c: $(srcdir)/emulparams/elf64_sparc_fbsd.sh \
  $(srcdir)/emulparams/elf64_sparc.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64_sparc_fbsd "$(tdir_elf64_sparc_fbsd)"
eelf64_sparc_obsd.c: $(srcdir)/emulparams/elf64_sparc_obsd.sh \
  $(srcdir)/emulparams/elf64_sparc.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64_sparc_obsd "$(tdir_elf64_sparc_obsd)"
eelf64bmip.c: $(srcdir)/emulparams/elf64bmip.sh \
  $(srcdir)/emulparams/elf32bmipn32.sh $(srcdir)/emultempl/irix.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64bmip "$(tdir_elf64bmip)"
eelf64mmix.c: $(srcdir)/emulparams/elf64mmix.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/mmix-elfnmmo.em \
  $(srcdir)/emultempl/mmixelf.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64mmix "$(tdir_elf64mmix)"
emmo.c: $(srcdir)/emulparams/mmo.sh $(srcdir)/emultempl/mmix-elfnmmo.em \
  $(srcdir)/emultempl/generic.em $(srcdir)/emultempl/mmo.em \
  $(srcdir)/scripttempl/mmo.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mmo "$(tdir_mmo)"
eelf64btsmip.c: $(srcdir)/emulparams/elf64btsmip.sh \
  $(srcdir)/emulparams/elf32bmipn32.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64btsmip "$(tdir_elf64btsmip)"
eelf64btsmip_obsd.c: $(srcdir)/emulparams/elf64btsmip_obsd.sh \
  $(srcdir)/emulparams/elf32bmipn32.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64btsmip_obsd "$(tdir_elf64btsmip_obsd)"
eelf64ltsmip.c: $(srcdir)/emulparams/elf64ltsmip.sh \
  $(srcdir)/emulparams/elf64btsmip.sh $(srcdir)/emulparams/elf32bmipn32.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64ltsmip "$(tdir_elf64ltsmip)"
eelf64ltsmip_obsd.c: $(srcdir)/emulparams/elf64ltsmip_obsd.sh \
  $(srcdir)/emulparams/elf32bmipn32.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64ltsmip_obsd "$(tdir_elf64ltsmip_obsd)"
eelf_i386.c: $(srcdir)/emulparams/elf_i386.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_i386 "$(tdir_elf_i386)"
eelf_x86_64.c: $(srcdir)/emulparams/elf_x86_64.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_x86_64 "$(tdir_elf_x86_64)"
eelf_x86_64_fbsd.c: $(srcdir)/emulparams/elf_x86_64_fbsd.sh \
  $(srcdir)/emulparams/elf_x86_64.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_x86_64_fbsd "$(tdir_elf_x86_64_fbsd)"
eelf_x86_64_obsd.c: $(srcdir)/emulparams/elf_x86_64_obsd.sh \
  $(srcdir)/emulparams/elf_x86_64.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_x86_64_obsd "$(tdir_elf_x86_64_obsd)"
eelf_i386_be.c: $(srcdir)/emulparams/elf_i386_be.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_i386_be "$(tdir_elf_i386_be)"
eelf_i386_chaos.c: $(srcdir)/emulparams/elf_i386_chaos.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf_chaos.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_i386_chaos "$(tdir_elf_i386_chaos)"
eelf_i386_fbsd.c: $(srcdir)/emulparams/elf_i386_fbsd.sh \
  $(srcdir)/emulparams/elf_i386.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_i386_fbsd "$(tdir_elf_i386_fbsd)"
eelf_i386_ldso.c: $(srcdir)/emulparams/elf_i386_ldso.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_i386_ldso "$(tdir_elf_i386_ldso)"
eelf_i386_obsd.c: $(srcdir)/emulparams/elf_i386_obsd.sh \
  $(srcdir)/emulparams/elf_i386.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_i386_obsd "$(tdir_elf_i386_obsd)"
eelf_s390.c: $(srcdir)/emulparams/elf_s390.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_s390 "$(tdir_elf_s390)"
egld960.c: $(srcdir)/emulparams/gld960.sh \
  $(srcdir)/emultempl/gld960.em $(srcdir)/scripttempl/i960.sc ${GEN_DEPENDS}
	${GENSCRIPTS} gld960 "$(tdir_gld960)"
egld960coff.c: $(srcdir)/emulparams/gld960coff.sh \
  $(srcdir)/emultempl/gld960c.em $(srcdir)/scripttempl/i960.sc ${GEN_DEPENDS}
	${GENSCRIPTS} gld960coff "$(tdir_gld960coff)"
eh8300.c: $(srcdir)/emulparams/h8300.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300 "$(tdir_h8300)"
eh8300h.c: $(srcdir)/emulparams/h8300h.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300h.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300h "$(tdir_h8300h)"
eh8300s.c: $(srcdir)/emulparams/h8300s.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300s.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300s "$(tdir_h8300s)"
eh8300hn.c: $(srcdir)/emulparams/h8300hn.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300hn.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300hn "$(tdir_h8300hn)"
eh8300sn.c: $(srcdir)/emulparams/h8300sn.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300sn.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300sn "$(tdir_h8300sn)"
eh8300sx.c: $(srcdir)/emulparams/h8300sx.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300sx.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300sx "$(tdir_h8300sx)"
eh8300sxn.c: $(srcdir)/emulparams/h8300sxn.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300sxn.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300sxn "$(tdir_h8300sxn)"
eh8300elf.c: $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300elf "$(tdir_h8300elf)"
eh8300helf.c: $(srcdir)/emulparams/h8300helf.sh \
  $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300helf "$(tdir_h8300helf)"
eh8300self.c: $(srcdir)/emulparams/h8300self.sh \
  $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300self "$(tdir_h8300self)"
eh8300hnelf.c: $(srcdir)/emulparams/h8300hnelf.sh \
  $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300hnelf "$(tdir_h8300hnelf)"
eh8300snelf.c: $(srcdir)/emulparams/h8300snelf.sh \
  $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300snelf "$(tdir_h8300snelf)"
eh8300sxelf.c: $(srcdir)/emulparams/h8300sxelf.sh \
  $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300sxelf "$(tdir_h8300sxelf)"
eh8300sxnelf.c: $(srcdir)/emulparams/h8300sxnelf.sh \
  $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300sxnelf "$(tdir_h8300sxnelf)"
eh8500.c: $(srcdir)/emulparams/h8500.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500 "$(tdir_h8500)"
eh8500b.c: $(srcdir)/emulparams/h8500b.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500b.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500b "$(tdir_h8500b)"
eh8500c.c: $(srcdir)/emulparams/h8500c.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500c.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500c "$(tdir_h8500c)"
eh8500m.c: $(srcdir)/emulparams/h8500m.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500m.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500m "$(tdir_h8500m)"
eh8500s.c: $(srcdir)/emulparams/h8500s.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500s.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500s "$(tdir_h8500s)"
ehp300bsd.c: $(srcdir)/emulparams/hp300bsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} hp300bsd "$(tdir_hp300bsd)"
ehp3hpux.c: $(srcdir)/emulparams/hp3hpux.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} hp3hpux "$(tdir_hp3hpux)"
ehppaelf.c: $(srcdir)/emulparams/hppaelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/hppaelf.em \
  $(srcdir)/scripttempl/hppaelf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} hppaelf "$(tdir_hppaelf)"
ehppalinux.c: $(srcdir)/emulparams/hppalinux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/hppaelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} hppalinux "$(tdir_hppalinux)"
ehppanbsd.c: $(srcdir)/emulparams/hppanbsd.sh \
  $(srcdir)/emulparams/hppaelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/hppaelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} hppanbsd "$(tdir_hppanbsd)"
ehppaobsd.c: $(srcdir)/emulparams/hppaobsd.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/hppaelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} hppaobsd "$(tdir_hppaobsd)"
ehppa64linux.c: $(srcdir)/emulparams/hppa64linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} hppa64linux "$(tdir_hppa64linux)"
ei386aout.c: $(srcdir)/emulparams/i386aout.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386aout "$(tdir_i386aout)"
ei386beos.c: $(srcdir)/emulparams/i386beos.sh \
  $(srcdir)/emultempl/beos.em $(srcdir)/scripttempl/i386beos.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386beos "$(tdir_i386beos)"
ei386bsd.c: $(srcdir)/emulparams/i386bsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386bsd "$(tdir_i386bsd)"
ei386coff.c: $(srcdir)/emulparams/i386coff.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/i386coff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386coff "$(tdir_i386coff)"
ei386go32.c: $(srcdir)/emulparams/i386go32.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/i386go32.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386go32 "$(tdir_i386go32)"
ei386linux.c: $(srcdir)/emulparams/i386linux.sh \
  $(srcdir)/emultempl/linux.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386linux "$(tdir_i386linux)"
ei386lynx.c: $(srcdir)/emulparams/i386lynx.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/i386lynx.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386lynx "$(tdir_i386lynx)"
ei386mach.c: $(srcdir)/emulparams/i386mach.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386mach "$(tdir_i386mach)"
ei386moss.c: $(srcdir)/emulparams/i386moss.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386moss "$(tdir_i386moss)"
ei386msdos.c: $(srcdir)/emulparams/i386msdos.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/i386msdos.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386msdos "$(tdir_i386msdos)"
ei386nbsd.c:	$(srcdir)/emulparams/i386nbsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386nbsd "$(tdir_i386nbsd)"
ei386nto.c:	$(srcdir)/emulparams/i386nto.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386nto "$(tdir_i386nto)"
ei386nw.c:	$(srcdir)/emulparams/i386nw.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/nw.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386nw "$(tdir_i386nw)"
ei386obsd.c:	$(srcdir)/emulparams/i386obsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386obsd "$(tdir_i386obsd)"
ei386pe.c: $(srcdir)/emulparams/i386pe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/pe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386pe "$(tdir_i386pe)"
ei386pe_posix.c: $(srcdir)/emulparams/i386pe_posix.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/pe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386pe_posix "$(tdir_i386pe_posix)"
elnk960.c: $(srcdir)/emulparams/lnk960.sh \
  $(srcdir)/emultempl/lnk960.em $(srcdir)/scripttempl/i960.sc ${GEN_DEPENDS}
	${GENSCRIPTS} lnk960 "$(tdir_lnk960)"
em68hc11elf.c: $(srcdir)/emulparams/m68hc11elf.sh \
  $(srcdir)/emultempl/m68hc1xelf.em $(srcdir)/emultempl/elf32.em \
  $(srcdir)/scripttempl/elfm68hc11.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68hc11elf "$(tdir_m68hc11)"
em68hc11elfb.c: $(srcdir)/emulparams/m68hc11elfb.sh \
  $(srcdir)/emultempl/m68hc1xelf.em $(srcdir)/emultempl/elf32.em \
  $(srcdir)/scripttempl/elfm68hc11.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68hc11elfb "$(tdir_m68hc11b)"
em68hc12elf.c: $(srcdir)/emulparams/m68hc12elf.sh \
  $(srcdir)/emultempl/m68hc1xelf.em $(srcdir)/emultempl/elf32.em \
  $(srcdir)/scripttempl/elfm68hc12.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68hc12elf "$(tdir_m68hc12)"
em68hc12elfb.c: $(srcdir)/emulparams/m68hc12elfb.sh \
  $(srcdir)/emultempl/m68hc1xelf.em $(srcdir)/emultempl/elf32.em \
  $(srcdir)/scripttempl/elfm68hc12.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68hc12elfb "$(tdir_m68hc12b)"
em68k4knbsd.c:	$(srcdir)/emulparams/m68k4knbsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68k4knbsd "$(tdir_m68k4knbsd)"
em68kaout.c: $(srcdir)/emulparams/m68kaout.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68kaout "$(tdir_m68kaout)"
em68kaux.c: $(srcdir)/emulparams/m68kaux.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/m68kaux.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68kaux "$(tdir_m68kaux)"
em68kcoff.c: $(srcdir)/emulparams/m68kcoff.sh \
  $(srcdir)/emultempl/m68kcoff.em $(srcdir)/scripttempl/m68kcoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68kcoff "$(tdir_m68kcoff)"
em68kelf.c: $(srcdir)/emulparams/m68kelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/m68kelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68kelf "$(tdir_m68kelf)"
em68kelfnbsd.c: $(srcdir)/emulparams/m68kelfnbsd.sh \
  $(srcdir)/emulparams/m68kelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/m68kelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68kelfnbsd "$(tdir_m68kelfnbsd)"
em68kelfobsd.c: $(srcdir)/emulparams/m68kelfobsd.sh \
  $(srcdir)/emulparams/m68kelf.sh $(srcdir)/emulparams/elf_obsd.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/m68kelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68kelfobsd "$(tdir_m68kelfobsd)"
em68klinux.c: $(srcdir)/emulparams/m68klinux.sh \
  $(srcdir)/emultempl/linux.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68klinux "$(tdir_m68klinux)"
em68klynx.c: $(srcdir)/emulparams/m68klynx.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/m68klynx.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68klynx "$(tdir_m68klynx)"
em68knbsd.c:	$(srcdir)/emulparams/m68knbsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68knbsd "$(tdir_m68knbsd)"
em68kobsd.c:	$(srcdir)/emulparams/m68kobsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68kobsd "$(tdir_m68kobsd)"
em68kpsos.c:	$(srcdir)/emulparams/m68kpsos.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/psos.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68kpsos "$(tdir_m68kpsos)"
em88kbcs.c: $(srcdir)/emulparams/m88kbcs.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/m88kbcs.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m88kbcs "$(tdir_m88kbcs)"
em88kopenbsd.c: $(srcdir)/emulparams/m88kopenbsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m88kopenbsd "$(tdir_m88kopenbsd)"
emcorepe.c: $(srcdir)/emulparams/mcorepe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/pe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mcorepe "$(tdir_mcorepe)"
emipsbig.c:  $(srcdir)/emulparams/mipsbig.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/mips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mipsbig
emipsbsd.c: $(srcdir)/emulparams/mipsbsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/mipsbsd.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mipsbsd
emipsidt.c: $(srcdir)/emulparams/mipsidt.sh \
  $(srcdir)/emultempl/mipsecoff.em $(srcdir)/scripttempl/mips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mipsidt "$(tdir_mipsidt)"
emipsidtl.c: $(srcdir)/emulparams/mipsidtl.sh \
  $(srcdir)/emultempl/mipsecoff.em $(srcdir)/scripttempl/mips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mipsidtl "$(tdir_mipsidtl)"
emipslit.c:  $(srcdir)/emulparams/mipslit.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/mips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mipslit "$(tdir_mipslit)"
emipslnews.c:  $(srcdir)/emulparams/mipslnews.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/mips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mipslnews
emipspe.c: $(srcdir)/emulparams/mipspe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/pe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mipspe "$(tdir_mips)"
emn10300.c: $(srcdir)/emulparams/mn10300.sh \
  $(srcdir)/emulparams/mn10200.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mn10300 "$(tdir_mn10300)"
emn10200.c: $(srcdir)/emulparams/mn10200.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mn10200 "$(tdir_mn10200)"
emsp430x110.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x110 "$(tdir_msp430x110)" msp430all
emsp430x112.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x112 "$(tdir_msp430x112)" msp430all
emsp430x1101.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1101 "$(tdir_msp430x1101)" msp430all
emsp430x1111.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1111 "$(tdir_msp430x1111)" msp430all
emsp430x1121.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1121 "$(tdir_msp430x1121)" msp430all
emsp430x1122.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1122 "$(tdir_msp430x1122)" msp430all
emsp430x1132.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1132 "$(tdir_msp430x1132)" msp430all
emsp430x122.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x122 "$(tdir_msp430x122)" msp430all
emsp430x123.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x123 "$(tdir_msp430x123)" msp430all
emsp430x1222.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1222 "$(tdir_msp430x1222)" msp430all
emsp430x1232.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1232 "$(tdir_msp430x1232)" msp430all
emsp430x133.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x133 "$(tdir_msp430x133)" msp430all
emsp430x135.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x135 "$(tdir_msp430x135)" msp430all
emsp430x1331.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1331 "$(tdir_msp430x1331)" msp430all
emsp430x1351.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1351 "$(tdir_msp430x1351)" msp430all
emsp430x147.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x147 "$(tdir_msp430x147)" msp430all
emsp430x148.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x148 "$(tdir_msp430x148)" msp430all
emsp430x149.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x149 "$(tdir_msp430x149)" msp430all
emsp430x155.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x155 "$(tdir_msp430x155)" msp430all
emsp430x156.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x156 "$(tdir_msp430x156)" msp430all
emsp430x157.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x157 "$(tdir_msp430x157)" msp430all
emsp430x167.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x167 "$(tdir_msp430x167)" msp430all
emsp430x168.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x168 "$(tdir_msp430x168)" msp430all
emsp430x169.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x169 "$(tdir_msp430x169)" msp430all
emsp430x311.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x311 "$(tdir_msp430x311)" msp430all
emsp430x312.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x312 "$(tdir_msp430x312)" msp430all
emsp430x313.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x313 "$(tdir_msp430x313)" msp430all
emsp430x314.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x314 "$(tdir_msp430x314)" msp430all
emsp430x315.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x315 "$(tdir_msp430x315)" msp430all
emsp430x323.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x323 "$(tdir_msp430x323)" msp430all
emsp430x325.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x325 "$(tdir_msp430x325)" msp430all
emsp430x336.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x336 "$(tdir_msp430x336)" msp430all
emsp430x337.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x337 "$(tdir_msp430x337)" msp430all
emsp430x412.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x412 "$(tdir_msp430x412)" msp430all
emsp430x413.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x413 "$(tdir_msp430x413)" msp430all
emsp430xE423.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430xE423 "$(tdir_msp430xE423)" msp430all
emsp430xE425.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430xE425 "$(tdir_msp430xE425)" msp430all
emsp430xE427.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430xE427 "$(tdir_msp430xE427)" msp430all
emsp430xW423.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430xW423 "$(tdir_msp430xW423)" msp430all
emsp430xW425.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430xW425 "$(tdir_msp430xW425)" msp430all
emsp430xW427.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430xW427 "$(tdir_msp430xW427)" msp430all
emsp430x435.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x435 "$(tdir_msp430x435)" msp430all
emsp430x436.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x436 "$(tdir_msp430x436)" msp430all
emsp430x437.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x437 "$(tdir_msp430x437)" msp430all
emsp430x447.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x447 "$(tdir_msp430x447)" msp430all
emsp430x448.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x448 "$(tdir_msp430x448)" msp430all
emsp430x449.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x449 "$(tdir_msp430x449)" msp430all
enews.c: $(srcdir)/emulparams/news.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} news "$(tdir_news)"
ens32knbsd.c:	$(srcdir)/emulparams/ns32knbsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/emultempl/netbsd.em \
  $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} ns32knbsd "$(tdir_ns32knbsd)"
eor32.c: $(srcdir)/emulparams/or32.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/or32.sc ${GEN_DEPENDS}
	${GENSCRIPTS} or32 "$(tdir_or32)"
eor32elf.c: $(srcdir)/emulparams/or32elf.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} or32elf "$(tdir_or32elf)"
epc532macha.c: $(srcdir)/emulparams/pc532macha.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} pc532macha "$(tdir_pc532macha)"
epdp11.c: $(srcdir)/emulparams/pdp11.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} pdp11 "$(tdir_pdp11)"
epjelf.c: $(srcdir)/emulparams/pjelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} pjelf "$(tdir_pjelf)"
epjlelf.c: $(srcdir)/emulparams/pjlelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} pjlelf "$(tdir_pjlelf)"
eppcmacos.c:	$(srcdir)/emulparams/ppcmacos.sh \
  $(srcdir)/emultempl/aix.em $(srcdir)/scripttempl/aix.sc ${GEN_DEPENDS}
	${GENSCRIPTS} ppcmacos "$(tdir_ppcmacos)"
eppcnw.c:	$(srcdir)/emulparams/ppcnw.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/nw.sc ${GEN_DEPENDS}
	${GENSCRIPTS} ppcnw "$(tdir_ppcnw)"
eppcpe.c: $(srcdir)/emulparams/ppcpe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/ppcpe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} ppcpe "$(tdir_ppcpe)"
eriscix.c: $(srcdir)/emulparams/riscix.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} riscix "$(tdir_riscix)"
esa29200.c: $(srcdir)/emulparams/sa29200.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sa29200.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sa29200 "$(tdir_sa29200)"
esh.c: $(srcdir)/emulparams/sh.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sh.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sh "$(tdir_sh)"
eshelf.c: $(srcdir)/emulparams/shelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf "$(tdir_shelf)"
eshelf32.c: $(srcdir)/emulparams/shelf32.sh \
  $(BFDDIR)/libbfd.h $(INCDIR)/libiberty.h \
  $(srcdir)/emultempl/sh64elf.em $(INCDIR)/elf/sh.h $(BFDDIR)/elf-bfd.h \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf32 "$(tdir_shelf32)"
eshelf32_linux.c: $(srcdir)/emulparams/shelf32_linux.sh \
  $(srcdir)/emulparams/shelf32.sh \
  $(BFDDIR)/libbfd.h $(INCDIR)/libiberty.h \
  $(srcdir)/emultempl/sh64elf.em $(INCDIR)/elf/sh.h $(BFDDIR)/elf-bfd.h \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf32_linux "$(tdir_shelf32_linux)"
eshelf32_nbsd.c: $(srcdir)/emulparams/shelf32_nbsd.sh \
  $(srcdir)/emulparams/shelf32.sh \
  $(BFDDIR)/libbfd.h $(INCDIR)/libiberty.h \
  $(srcdir)/emultempl/sh64elf.em $(INCDIR)/elf/sh.h $(BFDDIR)/elf-bfd.h \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf32_nbsd "$(tdir_shelf32_nbsd)"
eshelf64.c: $(srcdir)/emulparams/shelf64.sh $(srcdir)/emulparams/shelf32.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf64 "$(tdir_shelf64)"
eshelf64_nbsd.c: $(srcdir)/emulparams/shelf64_nbsd.sh \
  $(srcdir)/emulparams/shelf32_nbsd.sh $(srcdir)/emulparams/shelf32.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf64_nbsd "$(tdir_shelf64_nbsd)"
eshelf_linux.c: $(srcdir)/emulparams/shelf_linux.sh \
  $(srcdir)/emulparams/shlelf_linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf_linux "$(tdir_shelf_linux)"
eshlelf_linux.c: $(srcdir)/emulparams/shlelf_linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf_linux "$(tdir_shlelf_linux)"
eshelf_nbsd.c: $(srcdir)/emulparams/shelf_nbsd.sh \
  $(srcdir)/emulparams/shelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf_nbsd "$(tdir_shelf_nbsd)"
eshelf_nto.c: $(srcdir)/emulparams/shelf_nto.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf_nto "$(tdir_shelf_nto)"
eshlelf_nbsd.c: $(srcdir)/emulparams/shlelf_nbsd.sh \
  $(srcdir)/emulparams/shelf_nbsd.sh \
  $(srcdir)/emulparams/shelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf_nbsd "$(tdir_shlelf_nbsd)"
eshlelf_nto.c: $(srcdir)/emulparams/shlelf_nto.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf_nto "$(tdir_shlelf_nto)"
eshelf_obsd.c: $(srcdir)/emulparams/shelf_obsd.sh \
  $(srcdir)/emulparams/shelf.sh \
  $(srcdir)/emulparams/elf_obsd.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf_obsd "$(tdir_shelf_obsd)"
eshlelf_obsd.c: $(srcdir)/emulparams/shlelf_obsd.sh \
  $(srcdir)/emulparams/shelf_obsd.sh \
  $(srcdir)/emulparams/shelf.sh \
  $(srcdir)/emulparams/elf_obsd.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf_obsd "$(tdir_shlelf_obsd)"
eshlelf.c: $(srcdir)/emulparams/shlelf.sh \
  $(srcdir)/emulparams/shelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf "$(tdir_shlelf)"
eshlelf32.c: $(srcdir)/emulparams/shlelf32.sh \
  $(BFDDIR)/libbfd.h $(INCDIR)/libiberty.h $(srcdir)/emulparams/shelf32.sh \
  $(srcdir)/emultempl/sh64elf.em $(INCDIR)/elf/sh.h $(BFDDIR)/elf-bfd.h \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf32 "$(tdir_shlelf32)"
eshlelf32_linux.c: $(srcdir)/emulparams/shlelf32_linux.sh \
  $(srcdir)/emulparams/shelf32_linux.sh $(srcdir)/emulparams/shelf32.sh \
  $(BFDDIR)/libbfd.h $(INCDIR)/libiberty.h \
  $(srcdir)/emultempl/sh64elf.em $(INCDIR)/elf/sh.h $(BFDDIR)/elf-bfd.h \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf32_linux "$(tdir_shlelf32_linux)"
eshlelf32_nbsd.c: $(srcdir)/emulparams/shlelf32_nbsd.sh \
  $(srcdir)/emulparams/shelf32_nbsd.sh $(srcdir)/emulparams/shelf32.sh \
  $(BFDDIR)/libbfd.h $(INCDIR)/libiberty.h \
  $(srcdir)/emultempl/sh64elf.em $(INCDIR)/elf/sh.h $(BFDDIR)/elf-bfd.h \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf32_nbsd "$(tdir_shlelf32_nbsd)"
eshlelf64.c: $(srcdir)/emulparams/shlelf64.sh \
  $(srcdir)/emulparams/shelf64.sh $(srcdir)/emulparams/shelf32.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf64 "$(tdir_shlelf64)"
eshlelf64_nbsd.c: $(srcdir)/emulparams/shlelf64_nbsd.sh \
  $(srcdir)/emulparams/shelf64_nbsd.sh \
  $(srcdir)/emulparams/shelf32_nbsd.sh $(srcdir)/emulparams/shelf32.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf64_nbsd "$(tdir_shlelf64_nbsd)"
eshl.c: $(srcdir)/emulparams/shl.sh \
  $(srcdir)/emulparams/sh.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sh.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shl "$(tdir_shl)"
eshpe.c: $(srcdir)/emulparams/shpe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/pe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shpe "$(tdir_shl)"
esparcaout.c: $(srcdir)/emulparams/sparcaout.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sparcaout "$(tdir_sparcaout)"
esparclinux.c: $(srcdir)/emulparams/sparclinux.sh \
  $(srcdir)/emultempl/linux.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sparclinux "$(tdir_sparclinux)"
esparclynx.c: $(srcdir)/emulparams/sparclynx.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sparclynx.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sparclynx "$(tdir_sparclynx)"
esparcnbsd.c:	$(srcdir)/emulparams/sparcnbsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sparcnbsd "$(tdir_sparcnbsd)"
esparcobsd.c:	$(srcdir)/emulparams/sparcobsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sparcobsd "$(tdir_sparcobsd)"
est2000.c: $(srcdir)/emulparams/st2000.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/st2000.sc ${GEN_DEPENDS}
	${GENSCRIPTS} st2000 "$(tdir_st2000)"
esun3.c: $(srcdir)/emulparams/sun3.sh \
  $(srcdir)/emultempl/sunos.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sun3 "$(tdir_sun3)"
esun4.c: $(srcdir)/emulparams/sun4.sh \
  $(srcdir)/emultempl/sunos.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sun4 "$(tdir_sun4)"
etic30aout.c: $(srcdir)/emulparams/tic30aout.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/tic30aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic30aout "$(tdir_tic30aout)"
etic30coff.c: $(srcdir)/emulparams/tic30coff.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/tic30coff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic30coff "$(tdir_tic30coff)"
etic3xcoff.c: $(srcdir)/emulparams/tic3xcoff.sh \
  $(srcdir)/emultempl/ticoff.em $(srcdir)/scripttempl/tic4xcoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic3xcoff "$(tdir_tic4xcoff)"
etic3xcoff_onchip.c: $(srcdir)/emulparams/tic3xcoff_onchip.sh \
  $(srcdir)/emultempl/ticoff.em $(srcdir)/scripttempl/tic4xcoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic3xcoff_onchip "$(tdir_tic4xcoff)"
etic4xcoff.c: $(srcdir)/emulparams/tic4xcoff.sh \
  $(srcdir)/emultempl/ticoff.em $(srcdir)/scripttempl/tic4xcoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic4xcoff "$(tdir_tic4xcoff)"
etic54xcoff.c: $(srcdir)/emulparams/tic54xcoff.sh \
  $(srcdir)/emultempl/ticoff.em $(srcdir)/scripttempl/tic54xcoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic54xcoff "$(tdir_tic54xcoff)"
etic80coff.c: $(srcdir)/emulparams/tic80coff.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/tic80coff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic80coff "$(tdir_tic80coff)"
evanilla.c: $(srcdir)/emulparams/vanilla.sh \
  $(srcdir)/emultempl/vanilla.em $(srcdir)/scripttempl/vanilla.sc ${GEN_DEPENDS}
	${GENSCRIPTS} vanilla "$(tdir_vanilla)"
evax.c: $(srcdir)/emulparams/vax.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} vax "$(tdir_vax)"
evaxnbsd.c: $(srcdir)/emulparams/vaxnbsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} vaxnbsd "$(tdir_vaxnbsd)"
evsta.c: $(srcdir)/emulparams/vsta.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} vsta "$(tdir_vsta)"
ev850.c: $(srcdir)/emulparams/v850.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/v850.sc ${GEN_DEPENDS}
	${GENSCRIPTS} v850 "$(tdir_v850)"
ew65.c: $(srcdir)/emulparams/w65.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/w65.sc ${GEN_DEPENDS}
	${GENSCRIPTS} w65 "$(tdir_w65)"
ez8001.c: $(srcdir)/emulparams/z8001.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/z8000.sc ${GEN_DEPENDS}
	${GENSCRIPTS} z8001 "$(tdir_z8001)"
ez8002.c: $(srcdir)/emulparams/z8002.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/z8000.sc ${GEN_DEPENDS}
	${GENSCRIPTS} z8002 "$(tdir_z8002)"
eelf32frvfd.c: $(srcdir)/emulparams/elf32frvfd.sh \
  $(srcdir)/emulparams/elf32frv.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32frvfd "$(tdir_frv)"

# The generated emulation files mostly have the same dependencies.
$(EMULATION_OFILES): ../bfd/bfd.h sysdep.h config.h $(INCDIR)/bfdlink.h \
  ld.h ldmain.h ldemul.h ldfile.h ldmisc.h ldexp.h ldlang.h \
  ldctor.h ldexp.h ldlang.h ldgram.h

check-DEJAGNU: site.exp
	srcroot=`cd $(srcdir) && pwd`; export srcroot; \
	r=`pwd`; export r; \
	LC_COLLATE=; LC_ALL=; LANG=; export LC_COLLATE LC_ALL LANG; \
	EXPECT=$(EXPECT); export EXPECT; \
	if [ -f $(top_builddir)/../expect/expect ]; then \
	  TCL_LIBRARY=`cd $(top_srcdir)/../tcl/library && pwd`; \
	  export TCL_LIBRARY; \
	fi; \
	runtest=$(RUNTEST); \
	if $(SHELL) -c "$$runtest --version" > /dev/null 2>&1; then \
	  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \
		CC="$(CC_FOR_TARGET)" CFLAGS="$(CFLAGS)" \
		CXX="$(CXX_FOR_TARGET)" CXXFLAGS="$(CXXFLAGS)" \
		CC_FOR_HOST="$(CC)" CFLAGS_FOR_HOST="$(CFLAGS)" \
		OFILES="$(OFILES)" BFDLIB="$(TESTBFDLIB)" \
		LIBIBERTY="$(LIBIBERTY) $(INTLLIBS)" LIBS="$(LIBS)" \
		$(RUNTESTFLAGS); \
	else echo "WARNING: could not find \`runtest'" 1>&2; :;\
	fi

# Rules for testing by relinking ld itself.
# A similar test is in the testsuite.  This target is for ease of use
# when porting ld.

ld-partial.o: ld-new$(EXEEXT)
	./ld-new$(EXEEXT) $(HOSTING_EMU) -o ld-partial.o -r $(OFILES)
ld1$(EXEEXT): ld-partial.o
	./ld-new$(EXEEXT) $(HOSTING_EMU) -o ld1$(EXEEXT) $(HOSTING_CRT0) ld-partial.o $(TESTBFDLIB) $(LIBIBERTY) $(HOSTING_LIBS) $(LIBS)

ld1-full$(EXEEXT): ld-new
	./ld-new$(EXEEXT) $(HOSTING_EMU) -o ld1-full$(EXEEXT) $(HOSTING_CRT0) $(OFILES) $(TESTBFDLIB) $(LIBIBERTY) $(HOSTING_LIBS) $(LIBS)

ld2$(EXEEXT): ld1$(EXEEXT)
	./ld1$(EXEEXT) $(HOSTING_EMU) -o ld2$(EXEEXT) $(HOSTING_CRT0) $(OFILES) $(TESTBFDLIB) $(LIBIBERTY) $(HOSTING_LIBS) $(LIBS)

ld3$(EXEEXT): ld2$(EXEEXT)
	./ld2$(EXEEXT) $(HOSTING_EMU) -o ld3$(EXEEXT) $(HOSTING_CRT0) $(OFILES) $(TESTBFDLIB) $(LIBIBERTY) $(HOSTING_LIBS) $(LIBS)

bootstrap: ld3$(EXEEXT)
	cmp ld2$(EXEEXT) ld3$(EXEEXT)

.PHONY: bootstrap

# A test program for C++ constructors and destructors.
# This test is now in the testsuite.
#
#cdtest: cdtest-main.o cdtest-bar.o cdtest-foo.o ld.new
#	./ld.new $(HOSTING_EMU) -o cdtest $(HOSTING_CRT0) \
#	  cdtest-main.o cdtest-bar.o cdtest-foo.o $(HOSTING_LIBS)
#
#cdtest.out: cdtest
#	./cdtest > cdtest.tmp
#	mv cdtest.tmp cdtest.out
#
#cdtest-ur.o: cdtest-main.o cdtest-bar.o cdtest-foo.o ld.new
#	./ld.new $(HOSTING_EMU) -o cdtest-ur.o -Ur cdtest-main.o \
#	  cdtest-bar.o cdtest-foo.o
#
#cdtest-ur: cdtest-ur.o
#	./ld.new $(HOSTING_EMU) -o cdtest-ur $(HOSTING_CRT0) cdtest-ur.o \
#	  $(HOSTING_LIBS)
#
#cdtest-ur.out: cdtest-ur
#	./cdtest-ur > cdtest-ur.tmp
#	mv cdtest-ur.tmp cdtest-ur.out
#
#check-cdtest: cdtest.out cdtest-ur.out $(srcdir)/cdtest.exp
#	diff $(srcdir)/cdtest.exp cdtest.out
#	diff $(srcdir)/cdtest.exp cdtest-ur.out
#
#.PHONY: check-cdtest

# END OF CHECK TARGETS

# DOCUMENTATION TARGETS
# Manual configuration file; not usually attached to normal configuration,
# because almost all configs use "gen" version of manual.
#  Set DOCVER above to change.
configdoc.texi:	${DOCVER}-doc.texi
	ln -s ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi >/dev/null 2>&1 \
	  || ln ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi >/dev/null 2>&1 \
	  || cp ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi

ldver.texi: Makefile
	rm -f $@@
	echo '@@set VERSION $(VERSION)' > $@@

ld.info: $(srcdir)/ld.texinfo configdoc.texi ldver.texi
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) -I $(BFDDIR)/doc $(srcdir)/ld.texinfo

ld.dvi: $(srcdir)/ld.texinfo configdoc.texi ldver.texi
	TEXINPUTS=$(top_srcdir)/../texinfo:$$TEXINPUTS \
	  MAKEINFO="$(MAKEINFO) -I $(srcdir) -I $(BFDDIR)/doc" $(TEXI2DVI) -I $(BFDDIR)/doc $(srcdir)/ld.texinfo

# Build the man page from the texinfo file
# The sed command removes the no-adjust Nroff command so that
# the man output looks standard.
ld.1: $(srcdir)/ld.texinfo configdoc.texi ldver.texi
	touch $@@
	-$(TEXI2POD) $(MANCONF) < $(srcdir)/ld.texinfo > ld.pod
	-($(POD2MAN) ld.pod | \
	        sed -e '/^.if n .na/d' > $@@.T$$$$ && \
	        mv -f $@@.T$$$$ $@@) || \
	        (rm -f $@@.T$$$$ && exit 1)
	rm -f ld.pod
mostlyclean-local:
	-rm -rf tmpdir

.PHONY: install-exec-local install-data-local

install-exec-local: ld-new$(EXEEXT)
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(tooldir)/bin
	@@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed -e 's/$(EXEEXT)$$//' -e 's/-new//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed -e 's/$(EXEEXT)$$//' -e 's/-new//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done
	n=`echo ld | sed '$(transform)'`; \
	if [ "$(bindir)/$$n$(EXEEXT)" != "$(tooldir)/bin/ld$(EXEEXT)" ]; then \
	  rm -f $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT); \
	  ln $(DESTDIR)$(bindir)/$$n$(EXEEXT) $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT) >/dev/null 2>/dev/null \
	  || $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT); \
	fi

install-data-local:
	$(mkinstalldirs) $(DESTDIR)$(scriptdir)/ldscripts
	for f in ldscripts/*; do \
	  $(INSTALL_DATA) $$f $(DESTDIR)$(scriptdir)/$$f ; \
	done

# We want install to imply install-info as per GNU standards, despite the
# cygnus option.
install: install-info
diststuff: info $(EXTRA_DIST)
distclean-local:
	rm -rf ldscripts

Makefile: $(BFDDIR)/configure.in

# Targets to rebuild dependencies in this Makefile.
# Have to get rid of DEP1 here so that "$?" later includes all of $(CFILES).
DEP: dep.sed $(CFILES) $(HFILES) $(GENERATED_CFILES) $(GENERATED_HFILES) config.h
	rm -f DEP1
	$(MAKE) MKDEP="$(MKDEP)" DEP1
	sed -f dep.sed < DEP1 > DEPA
	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEPA
	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
	  echo 'make DEP failed!'; exit 1; \
	else \
	  mv -f DEPA $@@; \
	fi

DEP1: $(CFILES) $(GENERATED_CFILES)
	echo '# DO NOT DELETE THIS LINE -- mkdep uses it.' > DEP2
	echo '# DO NOT PUT ANYTHING AFTER THIS LINE, IT WILL GO AWAY.' >> DEP2
	$(MKDEP) $(INCLUDES) $(CFLAGS) $? >> DEP2
	mv -f DEP2 $@@

dep.sed: dep-in.sed config.status
	sed <$(srcdir)/dep-in.sed >dep.sed	\
		-e 's!@@INCDIR@@!$(INCDIR)!'	\
		-e 's!@@BFDDIR@@!$(BFDDIR)!'	\
		-e 's!@@SRCDIR@@!$(srcdir)!'	\
		-e 's!@@TOPDIR@@!'`echo $(srcdir) | sed -e s,/ld$$,,`'!'

dep: DEP
	sed -e '/^..DO NOT DELETE THIS LINE/,$$d' < Makefile > tmp-Makefile
	cat DEP >> tmp-Makefile
	$(SHELL) $(srcdir)/../move-if-change tmp-Makefile Makefile

dep-in: DEP
	sed -e '/^..DO NOT DELETE THIS LINE/,$$d' < $(srcdir)/Makefile.in > tmp-Makefile.in
	cat DEP >> tmp-Makefile.in
	$(SHELL) $(srcdir)/../move-if-change tmp-Makefile.in $(srcdir)/Makefile.in

dep-am: DEP
	sed -e '/^..DO NOT DELETE THIS LINE/,$$d' < $(srcdir)/Makefile.am > tmp-Makefile.am
	cat DEP >> tmp-Makefile.am
	$(SHELL) $(srcdir)/../move-if-change tmp-Makefile.am $(srcdir)/Makefile.am

.PHONY: dep dep-in dep-am

@@MAINT@@.PHONY: mpw
@@MAINT@@mpw: $(srcdir)/mpw-ei386go32.c $(srcdir)/mpw-elfmips.c \
@@MAINT@@	$(srcdir)/mpw-em68kcoff.c $(srcdir)/mpw-eppcmac.c \
@@MAINT@@	$(srcdir)/mpw-esh.c $(srcdir)/mpw-idtmips.c
@@MAINT@@
@@MAINT@@$(srcdir)/mpw-ei386go32.c: ei386go32.c
@@MAINT@@	$(SHELL) $(srcdir)/../move-if-change $< $@@
@@MAINT@@
@@MAINT@@$(srcdir)/mpw-elfmips.c: eelf32ebmip.c
@@MAINT@@	$(SHELL) $(srcdir)/../move-if-change $< $@@
@@MAINT@@
@@MAINT@@$(srcdir)/mpw-em68kcoff.c: em68kcoff.c
@@MAINT@@	$(SHELL) $(srcdir)/../move-if-change $< $@@
@@MAINT@@
@@MAINT@@$(srcdir)/mpw-eppcmac.c: eppcmacos.c
@@MAINT@@	$(SHELL) $(srcdir)/../move-if-change $< $@@
@@MAINT@@
@@MAINT@@$(srcdir)/mpw-esh.c: esh.c
@@MAINT@@	$(SHELL) $(srcdir)/../move-if-change $< $@@
@@MAINT@@
@@MAINT@@$(srcdir)/mpw-idtmips.c: emipsidt.c
@@MAINT@@	$(SHELL) $(srcdir)/../move-if-change $< $@@

# What appears below is generated by a hacked mkdep using gcc -MM.

# DO NOT DELETE THIS LINE -- mkdep uses it.
# DO NOT PUT ANYTHING AFTER THIS LINE, IT WILL GO AWAY.
ldctor.o: ldctor.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/safe-ctype.h ld.h $(INCDIR)/bin-bugs.h \
  ldexp.h ldlang.h ldmisc.h ldgram.h ldmain.h ldctor.h
ldemul.o: ldemul.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  ld.h $(INCDIR)/bin-bugs.h ldmisc.h ldexp.h ldlang.h \
  ldfile.h ldemul.h ldmain.h ldemul-list.h
ldexp.o: ldexp.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h ldmain.h \
  ldmisc.h ldexp.h ldgram.h ldlang.h $(INCDIR)/libiberty.h \
  $(INCDIR)/safe-ctype.h
ldfile.o: ldfile.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/safe-ctype.h ld.h $(INCDIR)/bin-bugs.h \
  ldmisc.h ldexp.h ldlang.h ldfile.h ldmain.h ldgram.h \
  ldlex.h ldemul.h $(INCDIR)/libiberty.h $(INCDIR)/filenames.h
ldlang.o: ldlang.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h $(INCDIR)/obstack.h \
  $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h ldmain.h \
  ldexp.h ldlang.h ldgram.h ldlex.h ldmisc.h ldctor.h \
  ldfile.h ldemul.h $(INCDIR)/fnmatch.h $(INCDIR)/demangle.h \
  $(INCDIR)/hashtab.h
ldmain.o: ldmain.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/safe-ctype.h $(INCDIR)/libiberty.h $(INCDIR)/progress.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/filenames.h ld.h $(INCDIR)/bin-bugs.h \
  ldmain.h ldmisc.h ldwrite.h ldexp.h ldlang.h ldgram.h \
  ldlex.h ldfile.h ldemul.h ldctor.h
ldmisc.o: ldmisc.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h $(INCDIR)/bfdlink.h sysdep.h config.h \
  $(INCDIR)/fopen-same.h $(INCDIR)/libiberty.h $(INCDIR)/demangle.h \
  ld.h $(INCDIR)/bin-bugs.h ldmisc.h ldexp.h ldlang.h \
  ldgram.h ldlex.h ldmain.h ldfile.h
ldver.o: ldver.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h ../bfd/bfdver.h sysdep.h config.h \
  $(INCDIR)/fopen-same.h ld.h $(INCDIR)/bin-bugs.h ldver.h \
  ldexp.h ldlang.h ldfile.h ldemul.h ldmain.h
ldwrite.o: ldwrite.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h \
  ld.h $(INCDIR)/bin-bugs.h ldexp.h ldlang.h ldwrite.h \
  ldmisc.h ldgram.h ldmain.h
lexsup.o: lexsup.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h $(INCDIR)/bfdlink.h \
  ld.h $(INCDIR)/bin-bugs.h ldmain.h ldmisc.h ldexp.h \
  ldlang.h ldgram.h ldlex.h ldfile.h ldver.h ldemul.h \
  $(INCDIR)/demangle.h
mri.o: mri.c ../bfd/bfd.h $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  sysdep.h config.h $(INCDIR)/fopen-same.h ld.h $(INCDIR)/bin-bugs.h \
  ldexp.h ldlang.h ldmisc.h mri.h ldgram.h $(INCDIR)/libiberty.h
ldcref.o: ldcref.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/libiberty.h ld.h $(INCDIR)/bin-bugs.h \
  ldmain.h ldmisc.h ldexp.h ldlang.h
pe-dll.o: pe-dll.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h \
  ld.h $(INCDIR)/bin-bugs.h ldexp.h ldlang.h ldwrite.h \
  ldmisc.h ldgram.h ldmain.h ldfile.h ldemul.h $(INCDIR)/coff/internal.h \
  $(BFDDIR)/libcoff.h deffile.h pe-dll.h
ldgram.o: ldgram.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h ldexp.h \
  ldver.h ldlang.h ldfile.h ldemul.h ldmisc.h ldmain.h \
  mri.h ldctor.h ldlex.h
ldlex.o: ldlex.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/safe-ctype.h $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h \
  ldmisc.h ldexp.h ldlang.h ldgram.h ldfile.h ldlex.h \
  ldmain.h $(INCDIR)/libiberty.h
deffilep.o: deffilep.c $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/safe-ctype.h ../bfd/bfd.h $(INCDIR)/symcat.h \
  sysdep.h config.h $(INCDIR)/fopen-same.h ld.h $(INCDIR)/bin-bugs.h \
  ldmisc.h deffile.h
# IF YOU PUT ANYTHING HERE IT WILL GO AWAY

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
@


1.32
log
@ELF toolchain for m68k, following the SysV/m68k ABI (32-bit types aligned on
32-bit boundaries, function return values being in %a0 instead of %d0 if they
are declared as pointers, and in fp registers if they are floating point types).

Compiler configuration bits (including a few m68k PIC code generation fixes)
borrowed from NetBSD.
@
text
@d301 1
d1350 4
@


1.31
log
@m88k ELF toolchain, supporting static binaries only so far.

Assembler supports a register prefix of `#' when configured for SVR4, and `%'
when configured for OpenBSD. Pseudo-ops do not need a leading dot, except
when configured for OpenBSD, allowing the `set' instruction to be recognized
correctly.

Based upon various unfinished or unreliable works, including smurph@@'s early
work in 2003, my own attempts in 2004 and 2005, and Michael Kato's binutils
2.15 diff from 2005. Support for register prefixes, as well as fixing an
evil off-by-one in resolving 16-bit pc-relative relocations in ld (which would
only affect kernel .S files branching to global symbols), came as part of the
2012 work.

Not enabled yet (needs Makefile.bsd-wrapper, bfd/config.bfd and
gdb/configure.tgt updates to completely enable) so as not to disturb the
existing a.out toolchain builds; will hopefully be enabled very soon.
@
text
@d368 1
d1807 5
@


1.30
log
@Define superH obsd-specific emulations for ld, and use it by default.
@
text
@d288 2
d374 1
d1454 7
d1824 3
@


1.29
log
@Provide openbsd emulation for mips64el as we do for mips64.

ok miod@@
@
text
@d454 2
d2125 11
@


1.28
log
@we use our own ways to install manual pages, not their tree traversals
which dump junk all over the place. pval miod ok
@
text
@d505 1
d1573 4
@


1.27
log
@Merge conflicts, bringing our changes back in:
- extra $(SHELL) and sugar for make (so that files not mode +x still work)
- safer temp file handling
- our W^X binary layout changes in ld
- OpenBSD policy for library file selection in ld
- arm and m88k changes which were not merged in time for official 2.15
- bfd core file handling
- a couple typos

New for 2.15:
- ld(1) and as(1) manpages now generated at build time
- binutils/stabs.c reverted to use our in-tree libiberty for now
- we still use our VIA C3 crypto code over stock binutils, as it recognizes
  more instructions
- new emulations for OpenBSD on mips64 machines, to help OpenBSD/sgi
- relaxed %f# handling in gas on OpenBSD/sparc64 (same as was in 2.14)

Tested on all platforms by various people; special thanks to sturm@@ and
otto@@.
@
text
@d877 1
a877 1
	$(MAKE) $(AM_MAKEFLAGS) install-man1
@


1.26
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am
d115 1
a115 1
AUTOMAKE_OPTIONS = cygnus dejagnu no-installman
d159 2
a160 1
POD2MAN = pod2man --center="GNU Development Tools" 	--release="binutils-$(VERSION)" --section=1
d169 3
a171 1
EXPECT = `if [ -f $$r/../expect/expect ] ; 	then echo $$r/../expect/expect ; 	else echo expect ; fi`
d174 3
a176 1
RUNTEST = `if [ -f $${srcroot}/../dejagnu/runtest ] ; 	then echo $${srcroot}/../dejagnu/runtest ; 	else echo runtest ; fi`
d181 14
a194 1
CC_FOR_TARGET = `   if [ -f $$r/../gcc/xgcc ] ; then     if [ -f $$r/../newlib/Makefile ] ; then       echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc;     else       echo $$r/../gcc/xgcc -B$$r/../gcc/;     fi;   else     if [ "@@host@@" = "@@target@@" ] ; then       echo $(CC);     else       echo gcc | sed '$(transform)';     fi;   fi`
d198 14
a211 1
CXX_FOR_TARGET = `   if [ -f $$r/../gcc/xgcc ] ; then     if [ -f $$r/../newlib/Makefile ] ; then       echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc;     else       echo $$r/../gcc/xgcc -B$$r/../gcc/;     fi;   else     if [ "@@host@@" = "@@target@@" ] ; then       echo $(CXX);     else       echo gcc | sed '$(transform)';     fi;   fi`
d224 302
a525 13
ALL_EMULATIONS =  	ea29k.o 	eaixppc.o 	eaixrs6.o 	ealpha.o 	earcelf.o 	earm_epoc_pe.o 	earmaoutb.o 	earmaoutl.o 	earmcoff.o 	earmelf.o 	earmelf_fbsd.o 	earmelf_linux.o 	earmelf_nbsd.o 	earmelf_obsd.o 	earmelfb_nbsd.o 	earmelfb_obsd.o 	earmelf_oabi.o 	earmnto.o 	earmnbsd.o 	earmpe.o 	eavr1200.o 	eavr23xx.o 	eavr4433.o 	eavr44x4.o 	eavr85xx.o 	eavrmega103.o 	eavrmega161.o 	eavrmega603.o 	eavr1.o 	eavr2.o 	eavr3.o 	eavr4.o 	eavr5.o 	ecoff_sparc.o 	ecrisaout.o 	ecriself.o 	ecrislinux.o 	ed10velf.o 	ed30v_e.o 	ed30v_o.o 	ed30velf.o 	edelta68.o 	eelf32_dlx.o 	eebmon29k.o 	eelf32_i960.o 	eelf32_i860.o 	eelf32_sparc.o 	eelf32_sparc_obsd.o 	eelf32b4300.o 	eelf32bmip.o 	eelf32bmipn32.o 	eelf32btsmip.o 	eelf32btsmipn32.o 	eelf32ltsmip.o 	eelf32ltsmipn32.o 	eelf32ebmip.o 	eelf32elmip.o 	eelf32fr30.o 	eelf32frv.o 	eelf32i370.o 	eelf32ip2k.o 	eelf32iq2000.o 	eelf32iq10.o 	eelf32l4300.o 	eelf32lmip.o 	eelf32lppc.o 	eelf32lppcnto.o 	eelf32lppcsim.o 	eelf32mcore.o 	eelf32openrisc.o 	eelf32ppc.o 	eelf32ppc_fbsd.o 	eelf32ppc_obsd.o 	eelf32ppclinux.o 	eelf32ppcnto.o 	eelf32ppcsim.o 	eelf32ppcwindiss.o 	eelf32vax.o 	eelf32xstormy16.o 	eelf32xtensa.o 	eelf_i386.o 	eelf_i386_be.o 	eelf_i386_chaos.o 	eelf_i386_fbsd.o 	eelf_i386_obsd.o 	eelf_i386_ldso.o 	eelf_s390.o 	egld960.o 	egld960coff.o 	eh8300.o 	eh8300h.o 	eh8300s.o 	eh8300elf.o 	eh8300hn.o 	eh8300sn.o 	eh8300helf.o 	eh8300self.o 	eh8300hnelf.o 	eh8300snelf.o 	eh8500.o 	eh8500b.o 	eh8500c.o 	eh8500m.o 	eh8500s.o 	ehp300bsd.o 	ehp3hpux.o 	ehppaelf.o 	ehppalinux.o 	ehppanbsd.o 	ehppaobsd.o 	ei386aout.o 	ei386beos.o 	ei386bsd.o 	ei386coff.o 	ei386go32.o 	ei386linux.o 	ei386lynx.o 	ei386mach.o 	ei386moss.o 	ei386msdos.o 	ei386nbsd.o 	ei386obsd.o 	ei386nto.o 	ei386nw.o 	ei386pe.o 	ei386pe_posix.o 	elnk960.o 	em68hc11elf.o 	em68hc11elfb.o 	em68hc12elf.o 	em68hc12elfb.o 	em68k4knbsd.o 	em68kaout.o 	em68kaux.o 	em68kcoff.o 	em68kelf.o 	em68kelfnbsd.o 	em68klinux.o 	em68klynx.o 	em68knbsd.o 	em68kobsd.o 	em68kpsos.o 	em88kbcs.o 	emcorepe.o 	emipsbig.o 	emipsbsd.o 	emipsidt.o 	emipsidtl.o 	emipslit.o 	emipslnews.o 	emipspe.o 	emsp430x1101.o 	emsp430x1111.o 	emsp430x1121.o 	emsp430x1122.o 	emsp430x1132.o 	emsp430x1331.o 	emsp430x1351.o 	emsp430x149.o 	emsp430x148.o 	emsp430x147.o 	emsp430x135.o 	emsp430x133.o 	emsp430x110.o 	emsp430x112.o 	emsp430x122.o 	emsp430x1222.o 	emsp430x123.o 	emsp430x1232.o 	emsp430x412.o 	emsp430x413.o 	emsp430x311.o 	emsp430x312.o 	emsp430x313.o 	emsp430x314.o 	emsp430x315.o 	emsp430x323.o 	emsp430x325.o 	emsp430x336.o 	emsp430x337.o 	emsp430x435.o 	emsp430x436.o 	emsp430x447.o 	emsp430x448.o 	emsp430x449.o 	emsp430x169.o 	emsp430x168.o 	emsp430x167.o 	emsp430x155.o 	emsp430x156.o 	emsp430x157.o 	enews.o 	ens32knbsd.o 	eor32.o 	eor32elf.o 	epc532macha.o 	epdp11.o 	epjelf.o 	epjlelf.o 	eppcmacos.o 	eppcnw.o 	eppcpe.o 	eriscix.o 	esa29200.o 	esh.o 	eshelf32.o 	eshlelf32.o 	eshelf32_linux.o 	eshlelf32_linux.o 	eshelf32_nbsd.o 	eshlelf32_nbsd.o 	eshelf.o 	eshelf_linux.o 	eshlelf_linux.o 	eshelf_nbsd.o 	eshlelf_nbsd.o 	eshelf_nto.o 	eshlelf_nto.o 	eshl.o 	eshlelf.o 	eshpe.o 	esparcaout.o 	esparclinux.o 	esparclynx.o 	esparcnbsd.o 	esparcobsd.o 	est2000.o 	esun3.o 	esun4.o 	etic30aout.o 	etic30coff.o 	etic3xcoff.o 	etic3xcoff_onchip.o 	etic4xcoff.o 	etic54xcoff.o 	etic80coff.o 	evanilla.o 	evax.o 	evaxnbsd.o 	evsta.o 	ew65.o 	ez8001.o 	ez8002.o


ALL_64_EMULATIONS =  	eelf64_aix.o 	eelf64_ia64.o 	eelf64_ia64_fbsd.o 	eshelf64.o 	eshlelf64.o 	eshelf64_nbsd.o 	eshlelf64_nbsd.o 	eelf_x86_64.o 	eelf_x86_64_fbsd.o 	eelf_x86_64_obsd.o 	eelf64_s390.o 	eelf64_sparc.o 	eelf64_sparc_fbsd.o 	eelf64_sparc_obsd.o 	eelf64alpha.o 	eelf64alpha_fbsd.o 	eelf64alpha_obsd.o 	eelf64alpha_nbsd.o 	eelf64bmip.o 	eelf64btsmip.o 	eelf64ltsmip.o 	eelf64hppa.o 	eelf64mmix.o 	emmo.o 	eelf64ppc.o 	eelf64lppc.o 	ehppa64linux.o


ALL_EMUL_EXTRA_OFILES =  	deffilep.o 	pe-dll.o


CFILES = ldctor.c ldemul.c ldexp.c ldfile.c ldlang.c 	ldmain.c ldmisc.c ldver.c ldwrite.c lexsup.c 	mri.c ldcref.c pe-dll.c


HFILES = ld.h ldctor.h ldemul.h ldexp.h ldfile.h 	ldlang.h ldlex.h ldmain.h ldmisc.h ldver.h 	ldwrite.h mri.h deffile.h pe-dll.h
d531 3
a533 1
OFILES = ldgram.o ldlex.o lexsup.o ldlang.o mri.o ldctor.o ldmain.o 	ldwrite.o ldexp.o  ldemul.o ldver.o ldmisc.o 	ldfile.o ldcref.o ${EMULATION_OFILES} ${EMUL_EXTRA_OFILES}
d552 2
a553 1
ld_new_SOURCES = ldgram.y ldlex.l lexsup.c ldlang.c mri.c ldctor.c ldmain.c 	ldwrite.c ldexp.c ldemul.c ldver.c ldmisc.c ldfile.c ldcref.c
d566 2
a567 1
MOSTLYCLEANFILES = $(STAGESTUFF) ld1$(EXEEXT) ld2$(EXEEXT) ld3$(EXEEXT) 	ldemul-list.h crtbegin.o crtend.o ld.log ld.sum
d617 1
a617 1
TAR = tar
a918 1
	  true; \
d1070 1
a1070 1
install-data-am: install-data-local
d1076 1
a1076 1
uninstall-am:
d1078 1
a1078 1
all-am: Makefile $(PROGRAMS) config.h
d1084 1
d1099 1
a1099 1
	-test -z "ldlexcdeffilephdeffilepcldgramhldgramc$(MAINTAINERCLEANFILES)" || rm -f ldlexc deffileph deffilepc ldgramh ldgramc $(MAINTAINERCLEANFILES)
d1156 1
a1156 1
	for file in $(POTFILES); do echo $$file; done | sort > tmp \
d1183 1
d1211 4
d1227 5
d1276 2
a1277 30
eavr85xx.c: $(srcdir)/emulparams/avr85xx.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr85xx "$(tdir_avr85xx)"
eavr1200.c: $(srcdir)/emulparams/avr1200.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr1200 "$(tdir_avr85xx)"
eavr23xx.c: $(srcdir)/emulparams/avr23xx.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr23xx "$(tdir_avr85xx)"
eavr44x4.c: $(srcdir)/emulparams/avr44x4.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr44x4 "$(tdir_avr85xx)"
eavr4433.c: $(srcdir)/emulparams/avr4433.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr4433 "$(tdir_avr85xx)"
eavrmega603.c: $(srcdir)/emulparams/avrmega603.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avrmega603 "$(tdir_avr85xx)"
eavrmega103.c: $(srcdir)/emulparams/avrmega103.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avrmega103 "$(tdir_avr85xx)"
eavrmega161.c: $(srcdir)/emulparams/avrmega161.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
d1279 1
a1279 1
	${GENSCRIPTS} avrmega161 "$(tdir_avr85xx)"
d1283 1
a1283 5
	${GENSCRIPTS} avr1 "$(tdir_avr85xx)"
eavr2.c: $(srcdir)/emulparams/avr2.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr2 "$(tdir_avr85xx)"
d1287 1
a1287 1
	${GENSCRIPTS} avr3 "$(tdir_avr85xx)"
d1291 1
a1291 1
	${GENSCRIPTS} avr4 "$(tdir_avr85xx)"
d1295 4
a1298 1
	${GENSCRIPTS} avr5 "$(tdir_avr85xx)"
d1336 3
d1359 9
a1371 1
  $(srcdir)/emulparams/elf32_sparc.sh \
d1381 1
a1381 1
  $(srcdir)/emulparams/elf32bmip.sh \
d1385 1
d1389 1
a1389 1
  $(srcdir)/emulparams/elf32bmip.sh \
d1393 1
a1393 1
  $(srcdir)/emulparams/elf32bmip.sh \
d1397 1
a1397 1
  $(srcdir)/emulparams/elf32bmip.sh \
d1402 1
d1407 1
d1411 1
a1411 1
  $(srcdir)/emulparams/elf32bmip.sh \
d1416 1
d1420 1
d1425 1
d1429 1
a1429 1
  $(srcdir)/emulparams/elf32bmip.sh \
d1432 3
d1457 1
d1471 1
a1471 1
  $(srcdir)/emulparams/elf32ppc.sh \
d1508 4
a1515 4
eelf64alpha_nbsd.c: $(srcdir)/emulparams/elf64alpha_nbsd.sh \
  $(srcdir)/emulparams/elf64alpha.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64alpha_nbsd "$(tdir_elf64alpha_nbsd)"
d1524 2
a1525 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/needrelax.em \
d1530 2
a1531 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/needrelax.em \
d1549 1
a1549 1
  $(srcdir)/emulparams/elf32bmipn32.sh \
d1564 4
d1596 3
a1602 3
eelf_i386_ldso.c: $(srcdir)/emulparams/elf_i386_ldso.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_i386_ldso "$(tdir_elf_i386_ldso)"
d1627 6
d1652 8
a1733 3
ei386obsd.c:    $(srcdir)/emulparams/i386obsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386obsd "$(tdir_i386obsd)"
d1740 3
d1753 2
a1754 1
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfm68hc11.sc ${GEN_DEPENDS}
d1757 2
a1758 1
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfm68hc11.sc ${GEN_DEPENDS}
d1761 2
a1762 1
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfm68hc12.sc ${GEN_DEPENDS}
d1765 2
a1766 1
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfm68hc12.sc ${GEN_DEPENDS}
d1798 1
a1798 1
em68kobsd.c:    $(srcdir)/emulparams/m68kobsd.sh \
d1838 5
a1842 1
emsp430x1101.c: $(srcdir)/emulparams/msp430x1101.sh \
d1845 2
a1846 2
	${GENSCRIPTS} msp430x1101 "$(tdir_msp430x1101)"
emsp430x1111.c: $(srcdir)/emulparams/msp430x1111.sh \
d1849 2
a1850 2
	${GENSCRIPTS} msp430x1111 "$(tdir_msp430x1111)"
emsp430x1121.c: $(srcdir)/emulparams/msp430x1121.sh \
d1853 2
a1854 2
	${GENSCRIPTS} msp430x1121 "$(tdir_msp430x1121)"
emsp430x1122.c: $(srcdir)/emulparams/msp430x1122.sh \
d1857 2
a1858 2
	${GENSCRIPTS} msp430x1122 "$(tdir_msp430x1122)"
emsp430x1132.c: $(srcdir)/emulparams/msp430x1132.sh \
d1861 2
a1862 2
	${GENSCRIPTS} msp430x1132 "$(tdir_msp430x1132)"
emsp430x1331.c: $(srcdir)/emulparams/msp430x1331.sh \
d1865 2
a1866 2
	${GENSCRIPTS} msp430x1331 "$(tdir_msp430x1331)"
emsp430x1351.c: $(srcdir)/emulparams/msp430x1351.sh \
d1869 2
a1870 2
	${GENSCRIPTS} msp430x1351 "$(tdir_msp430x1351)"
emsp430x149.c: $(srcdir)/emulparams/msp430x149.sh \
d1873 2
a1874 2
	${GENSCRIPTS} msp430x149 "$(tdir_msp430x149)"
emsp430x148.c: $(srcdir)/emulparams/msp430x148.sh \
d1877 2
a1878 2
	${GENSCRIPTS} msp430x148 "$(tdir_msp430x148)"
emsp430x449.c: $(srcdir)/emulparams/msp430x449.sh \
d1881 2
a1882 2
	${GENSCRIPTS} msp430x449 "$(tdir_msp430x449)"
emsp430x448.c: $(srcdir)/emulparams/msp430x448.sh \
d1885 2
a1886 2
	${GENSCRIPTS} msp430x448 "$(tdir_msp430x448)"
emsp430x447.c: $(srcdir)/emulparams/msp430x447.sh \
d1889 2
a1890 2
	${GENSCRIPTS} msp430x447 "$(tdir_msp430x447)"
emsp430x412.c: $(srcdir)/emulparams/msp430x412.sh \
d1893 2
a1894 2
	${GENSCRIPTS} msp430x412 "$(tdir_msp430x412)"
emsp430x413.c: $(srcdir)/emulparams/msp430x413.sh \
d1897 2
a1898 2
	${GENSCRIPTS} msp430x413 "$(tdir_msp430x413)"
emsp430x147.c: $(srcdir)/emulparams/msp430x147.sh \
d1901 2
a1902 2
	${GENSCRIPTS} msp430x147 "$(tdir_msp430x147)"
emsp430x135.c: $(srcdir)/emulparams/msp430x135.sh \
d1905 2
a1906 2
	${GENSCRIPTS} msp430x135 "$(tdir_msp430x135)"
emsp430x133.c: $(srcdir)/emulparams/msp430x133.sh \
d1909 2
a1910 2
	${GENSCRIPTS} msp430x133 "$(tdir_msp430x133)"
emsp430x110.c: $(srcdir)/emulparams/msp430x110.sh \
d1913 2
a1914 2
	${GENSCRIPTS} msp430x110 "$(tdir_msp430x110)"
emsp430x112.c: $(srcdir)/emulparams/msp430x112.sh \
d1917 2
a1918 2
	${GENSCRIPTS} msp430x112 "$(tdir_msp430x112)"
emsp430x122.c: $(srcdir)/emulparams/msp430x122.sh \
d1921 2
a1922 2
	${GENSCRIPTS} msp430x122 "$(tdir_msp430x122)"
emsp430x1222.c: $(srcdir)/emulparams/msp430x1222.sh \
d1925 2
a1926 2
	${GENSCRIPTS} msp430x1222 "$(tdir_msp430x1222)"
emsp430x123.c: $(srcdir)/emulparams/msp430x123.sh \
d1929 2
a1930 2
	${GENSCRIPTS} msp430x123 "$(tdir_msp430x123)"
emsp430x1232.c: $(srcdir)/emulparams/msp430x1232.sh \
d1933 2
a1934 2
	${GENSCRIPTS} msp430x1232 "$(tdir_msp430x1232)"
emsp430x311.c: $(srcdir)/emulparams/msp430x311.sh \
d1937 2
a1938 2
	${GENSCRIPTS} msp430x311 "$(tdir_msp430x311)"
emsp430x312.c: $(srcdir)/emulparams/msp430x312.sh \
d1941 2
a1942 2
	${GENSCRIPTS} msp430x312 "$(tdir_msp430x312)"
emsp430x313.c: $(srcdir)/emulparams/msp430x313.sh \
d1945 2
a1946 2
	${GENSCRIPTS} msp430x313 "$(tdir_msp430x313)"
emsp430x314.c: $(srcdir)/emulparams/msp430x314.sh \
d1949 2
a1950 2
	${GENSCRIPTS} msp430x314 "$(tdir_msp430x314)"
emsp430x315.c: $(srcdir)/emulparams/msp430x315.sh \
d1953 2
a1954 2
	${GENSCRIPTS} msp430x315 "$(tdir_msp430x315)"
emsp430x323.c: $(srcdir)/emulparams/msp430x323.sh \
d1957 2
a1958 2
	${GENSCRIPTS} msp430x323 "$(tdir_msp430x323)"
emsp430x325.c: $(srcdir)/emulparams/msp430x325.sh \
d1961 2
a1962 2
	${GENSCRIPTS} msp430x325 "$(tdir_msp430x325)"
emsp430x336.c: $(srcdir)/emulparams/msp430x336.sh \
d1965 2
a1966 2
	${GENSCRIPTS} msp430x336 "$(tdir_msp430x336)"
emsp430x337.c: $(srcdir)/emulparams/msp430x337.sh \
d1969 2
a1970 2
	${GENSCRIPTS} msp430x337 "$(tdir_msp430x337)"
emsp430x435.c: $(srcdir)/emulparams/msp430x435.sh \
d1973 2
a1974 2
	${GENSCRIPTS} msp430x435 "$(tdir_msp430x435)"
emsp430x436.c: $(srcdir)/emulparams/msp430x436.sh \
d1977 2
a1978 2
	${GENSCRIPTS} msp430x436 "$(tdir_msp430x436)"
emsp430x437.c: $(srcdir)/emulparams/msp430x437.sh \
d1981 2
a1982 2
	${GENSCRIPTS} msp430x437 "$(tdir_msp430x437)"
emsp430x167.c: $(srcdir)/emulparams/msp430x167.sh \
d1985 2
a1986 2
	${GENSCRIPTS} msp430x167 "$(tdir_msp430x167)"
emsp430x168.c: $(srcdir)/emulparams/msp430x167.sh \
d1989 2
a1990 2
	${GENSCRIPTS} msp430x168 "$(tdir_msp430x168)"
emsp430x169.c: $(srcdir)/emulparams/msp430x169.sh \
d1993 2
a1994 2
	${GENSCRIPTS} msp430x169 "$(tdir_msp430x169)"
emsp430x155.c: $(srcdir)/emulparams/msp430x155.sh \
d1997 2
a1998 2
	${GENSCRIPTS} msp430x155 "$(tdir_msp430x155)"
emsp430x156.c: $(srcdir)/emulparams/msp430x156.sh \
d2001 2
a2002 2
	${GENSCRIPTS} msp430x156 "$(tdir_msp430x156)"
emsp430x157.c: $(srcdir)/emulparams/msp430x157.sh \
d2005 21
a2025 1
	${GENSCRIPTS} msp430x157 "$(tdir_msp430x157)"
d2030 2
a2031 1
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
d2167 1
a2167 1
esparcobsd.c:   $(srcdir)/emulparams/sparcobsd.sh \
d2224 4
d2425 1
a2425 1
@@MAINT@@	$(srcdir)/../move-if-change $< $@@
d2428 1
a2428 1
@@MAINT@@	$(srcdir)/../move-if-change $< $@@
d2431 1
a2431 1
@@MAINT@@	$(srcdir)/../move-if-change $< $@@
d2434 1
a2434 1
@@MAINT@@	$(srcdir)/../move-if-change $< $@@
d2437 1
a2437 1
@@MAINT@@	$(srcdir)/../move-if-change $< $@@
d2440 1
a2440 1
@@MAINT@@	$(srcdir)/../move-if-change $< $@@
d2469 2
a2470 1
  ldfile.h ldemul.h $(INCDIR)/fnmatch.h $(INCDIR)/demangle.h
d2478 4
a2481 4
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/libiberty.h $(INCDIR)/demangle.h ld.h $(INCDIR)/bin-bugs.h \
  ldmisc.h ldexp.h ldlang.h ldgram.h ldlex.h ldmain.h \
  ldfile.h
d2488 3
a2490 2
  $(INCDIR)/bfdlink.h $(INCDIR)/libiberty.h ld.h $(INCDIR)/bin-bugs.h \
  ldexp.h ldlang.h ldwrite.h ldmisc.h ldgram.h ldmain.h
d2515 1
a2515 1
ldlex.o: ldlex.c $(INCDIR)/ansidecl.h ../bfd/bfd.h \
@


1.25
log
@use common elf.sc instead of own hppaobsd.sc, catch up w/ dale's elf work for hppa; drahn@@ lots of helps and ok
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am
d103 2
d108 2
d111 1
d115 1
a115 1
AUTOMAKE_OPTIONS = cygnus dejagnu
d142 3
a144 2
# which may have the form: LIB_PATH=/lib:/usr/local/lib
LIB_PATH = 
d154 8
d193 1
a193 1
ALL_EMULATIONS =  	ea29k.o 	eaixppc.o 	eaixrs6.o 	ealpha.o 	earcelf.o 	earm_epoc_pe.o 	earmaoutb.o 	earmaoutl.o 	earmcoff.o 	earmelf.o 	earmelf_linux.o 	earmelf_oabi.o 	earmnbsd.o 	earmpe.o 	eavr1200.o 	eavr23xx.o 	eavr4433.o 	eavr44x4.o 	eavr85xx.o 	eavrmega103.o 	eavrmega161.o 	eavrmega603.o 	ecoff_sparc.o 	ecrisaout.o 	ecriself.o 	ecrislinux.o 	ed10velf.o 	ed30v_e.o 	ed30v_o.o 	ed30velf.o 	edelta68.o 	eebmon29k.o 	eelf32_i960.o 	eelf32_i860.o 	eelf32_sparc.o 	eelf32b4300.o 	eelf32bmip.o 	eelf32bmipn32.o 	eelf32btsmip.o 	eelf32ltsmip.o 	eelf32ebmip.o 	eelf32elmip.o 	eelf32fr30.o 	eelf32i370.o 	eelf32l4300.o 	eelf32lmip.o 	eelf32lppc.o 	eelf32lppcsim.o 	eelf32mcore.o 	eelf32ppc.o 	eelf32ppclinux.o 	eelf32ppcsim.o 	eelf_i386.o 	eelf_i386_be.o 	eelf_i386_chaos.o 	egld960.o 	egld960coff.o 	eh8300.o 	eh8300h.o 	eh8300s.o 	eh8500.o 	eh8500b.o 	eh8500c.o 	eh8500m.o 	eh8500s.o 	ehp300bsd.o 	ehp3hpux.o 	ehppaelf.o 	ehppalinux.o 	ehppaobsd.o 	ei386aout.o 	ei386beos.o 	ei386bsd.o 	ei386coff.o 	ei386go32.o 	ei386linux.o 	ei386lynx.o 	ei386mach.o 	ei386moss.o 	ei386msdos.o 	ei386nbsd.o 	ei386nw.o 	ei386pe.o 	ei386pe_posix.o 	elnk960.o 	em68hc11elf.o 	em68hc11elfb.o 	em68hc12elf.o 	em68hc12elfb.o 	em68k4knbsd.o 	em68kaout.o 	em68kaux.o 	em68kcoff.o 	em68kelf.o 	em68klinux.o 	em68klynx.o 	em68knbsd.o 	em68kpsos.o 	em88kbcs.o 	emcorepe.o 	emipsbig.o 	emipsbsd.o 	emipsidt.o 	emipsidtl.o 	emipslit.o 	emipslnews.o 	emipspe.o 	enews.o 	ens32knbsd.o 	epc532macha.o 	epjelf.o 	epjlelf.o 	eppcmacos.o 	eppcnw.o 	eppcpe.o 	eriscix.o 	esa29200.o 	esh.o 	eshelf.o 	eshelf_linux.o 	eshlelf_linux.o 	eshl.o 	eshlelf.o 	eshpe.o 	esparcaout.o 	esparclinux.o 	esparclynx.o 	esparcnbsd.o 	est2000.o 	esun3.o 	esun4.o 	etic30aout.o 	etic30coff.o 	etic54xcoff.o 	etic80coff.o 	evanilla.o 	evax.o 	evsta.o 	ew65.o 	ez8001.o 	ez8002.o
d196 1
a196 1
ALL_64_EMULATIONS =  	eelf64_ia64.o 	eelf_x86_64.o 	eelf64_sparc.o 	eelf64alpha.o 	eelf64bmip.o 	eelf64btsmip.o 	eelf64ltsmip.o 	eelf64hppa.o
d224 1
a224 1
GENSCRIPTS = $(SHELL) $(srcdir)/genscripts.sh ${srcdir} ${libdir} ${exec_prefix} @@host@@ @@target@@ @@target_alias@@ "@@EMULATION_LIBPATH@@" "@@NATIVE_LIB_DIRS@@"
d240 3
d249 1
a249 1
LDDISTSTUFF = ldgram.c ldgram.h ldlex.c
a292 4
# Target to use for installing unformatted man-pages.  Some systems may not
# want them installed.
INSTALL_MAN = install-man

d310 3
d747 1
a747 1
install-data-am: $(INSTALL_MAN) install-data-local
d753 1
a753 1
uninstall-am: uninstall-man
d755 1
a755 1
all-am: Makefile $(PROGRAMS) $(MANS) config.h
a760 1
	$(mkinstalldirs)  $(DESTDIR)$(mandir)/man1
d775 1
a775 1
	-test -z "ldlexldeffilephdeffilepcldgramhldgramc$(MAINTAINERCLEANFILES)" || rm -f ldlexl deffileph deffilepc ldgramh ldgramc $(MAINTAINERCLEANFILES)
d836 5
a840 1
	$(COMPILE) -c -DDEFAULT_EMULATION='"$(EMUL)"' -DSCRIPTDIR='"$(scriptdir)"' -DTARGET='"@@target@@"' $(srcdir)/ldmain.c
d864 6
d889 5
d898 22
d932 4
d974 20
d1001 1
a1001 1
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
d1007 1
a1007 1
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfd10v.sc ${GEN_DEPENDS}
d1021 3
d1027 12
d1042 3
d1049 1
a1049 1
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
d1054 4
d1065 1
d1072 1
d1076 1
d1079 4
d1084 1
d1087 4
d1092 1
d1096 1
d1103 1
d1107 1
d1111 1
d1114 4
d1119 2
d1123 7
d1131 1
d1134 4
a1137 1
eelf32ppc.c: $(srcdir)/emulparams/elf32ppc.sh \
d1140 8
d1149 1
d1153 1
d1156 7
d1166 9
d1178 12
d1191 1
d1194 3
d1198 9
d1208 1
a1208 1
	${GENSCRIPTS} elf64_ia64 "$(tdir_elf64_ia64)"
d1212 8
d1221 1
d1224 8
d1233 1
d1237 1
d1246 8
d1258 4
d1263 11
a1273 1
	${GENSCRIPTS} elf_i386_chaos "$(tdir_elf_i386_chaos)"
d1289 25
d1343 5
d1352 3
d1380 1
a1380 1
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
d1388 6
d1434 5
d1448 3
d1482 1
d1488 164
d1658 6
d1667 3
d1697 24
d1722 1
d1728 15
d1744 1
d1747 26
d1774 1
d1792 3
d1810 9
d1831 3
d1951 11
a1961 3
# We want to reconfigure if configure.host or configure.tgt changes.
config.status: $(srcdir)/configure $(srcdir)/configure.host $(srcdir)/configure.tgt
	$(SHELL) ./config.status --recheck
d1971 1
a1971 1
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(bindir)/`echo $$p|sed -e 's/$(EXEEXT)$$//' -e 's/-new//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
d1987 5
a1991 1
diststuff: $(LDDISTSTUFF) info
d1995 2
d2019 3
a2021 1
		-e 's!@@SRCDIR@@!$(srcdir)!'
d2040 23
d2068 3
a2070 3
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  ld.h $(INCDIR)/bin-bugs.h ldexp.h ldlang.h ldmisc.h \
  ldgram.h ldmain.h ldctor.h
d2072 3
a2074 3
  sysdep.h config.h $(INCDIR)/fopen-same.h ld.h $(INCDIR)/bin-bugs.h \
  ldmisc.h ldexp.h ldlang.h ldfile.h ldemul.h ldmain.h \
  ldemul-list.h
d2076 4
a2079 3
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  ld.h $(INCDIR)/bin-bugs.h ldmain.h ldmisc.h ldexp.h \
  ldgram.h ldlang.h
d2081 4
a2084 3
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  ld.h $(INCDIR)/bin-bugs.h ldmisc.h ldexp.h ldlang.h \
  ldfile.h ldmain.h ldgram.h ldlex.h ldemul.h $(INCDIR)/libiberty.h
d2086 5
a2090 4
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/libiberty.h \
  $(INCDIR)/obstack.h $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h \
  ldmain.h ldgram.h ldexp.h ldlang.h ldlex.h ldmisc.h \
  ldctor.h ldfile.h ldemul.h $(INCDIR)/fnmatch.h $(INCDIR)/demangle.h
d2092 5
a2096 5
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/libiberty.h \
  $(INCDIR)/progress.h $(INCDIR)/bfdlink.h $(INCDIR)/filenames.h \
  ld.h $(INCDIR)/bin-bugs.h ldmain.h ldmisc.h ldwrite.h \
  ldgram.h ldexp.h ldlang.h ldlex.h ldfile.h ldemul.h \
  ldctor.h
d2098 4
a2101 3
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/libiberty.h \
  $(INCDIR)/demangle.h ld.h $(INCDIR)/bin-bugs.h ldmisc.h \
  ldexp.h ldlang.h ldgram.h ldlex.h ldmain.h ldfile.h
d2103 3
a2105 2
  sysdep.h config.h $(INCDIR)/fopen-same.h ld.h $(INCDIR)/bin-bugs.h \
  ldver.h ldexp.h ldlang.h ldfile.h ldemul.h ldmain.h
d2107 3
a2109 3
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/libiberty.h ld.h $(INCDIR)/bin-bugs.h ldexp.h \
  ldlang.h ldwrite.h ldmisc.h ldgram.h ldmain.h
d2111 7
a2117 6
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/libiberty.h \
  $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h ldmain.h \
  ldmisc.h ldexp.h ldlang.h ldgram.h ldlex.h ldfile.h \
  ldver.h ldemul.h $(INCDIR)/demangle.h
mri.o: mri.c ../bfd/bfd.h $(INCDIR)/ansidecl.h sysdep.h \
  config.h $(INCDIR)/fopen-same.h ld.h $(INCDIR)/bin-bugs.h \
d2120 3
a2122 3
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/libiberty.h ld.h $(INCDIR)/bin-bugs.h ldmain.h \
  ldmisc.h ldexp.h ldlang.h
d2124 5
a2128 5
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/libiberty.h ld.h $(INCDIR)/bin-bugs.h ldexp.h \
  ldlang.h ldwrite.h ldmisc.h ldgram.h ldmain.h ldfile.h \
  ldemul.h $(INCDIR)/coff/internal.h ../bfd/libcoff.h \
  deffile.h pe-dll.h
d2130 9
a2138 7
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  ld.h $(INCDIR)/bin-bugs.h ldexp.h ldver.h ldlang.h \
  ldfile.h ldemul.h ldmisc.h ldmain.h mri.h ldctor.h \
  ldlex.h
ldlex.o: ldlex.c ../bfd/bfd.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  ld.h $(INCDIR)/bin-bugs.h ldgram.h ldmisc.h ldexp.h \
  ldlang.h ldfile.h ldlex.h ldmain.h $(INCDIR)/libiberty.h
d2140 3
a2142 2
  ../bfd/bfd.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  ld.h $(INCDIR)/bin-bugs.h ldmisc.h deffile.h
@


1.24
log
@some manual cruft federico keeps in the generated file
@
text
@d1096 1
a1096 1
  $(srcdir)/scripttempl/hppaobsd.sc ${GEN_DEPENDS}
@


1.23
log
@provide our own path for generating the ldscripts and tweak it accordingly; fgsch@@ ok
@
text
@d276 4
d731 1
a731 1
install-data-am: install-man install-data-local
@


1.22
log
@- Sync changes between source and generated files (ie., changes existing
  only in the generated files).
- Regen.

Whenever is possible, changes should be done to the source files (.am, .in).
That way is easier to track and merge local changes when importing.
@
text
@a275 4
# Target to use for installing unformatted man-pages.  Some systems may not
# want them installed.
INSTALL_MAN = install-man

d727 1
a727 1
install-data-am: $(INSTALL_MAN) install-data-local
d1092 1
a1092 1
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
@


1.21
log
@resolve conflicts.
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
d154 1
a154 3
EXPECT = `if [ -f $$r/../expect/expect ] ; \
	then echo $$r/../expect/expect ; \
	else echo expect ; fi`
d157 1
a157 3
RUNTEST = `if [ -f $${srcroot}/../dejagnu/runtest ] ; \
	then echo $${srcroot}/../dejagnu/runtest ; \
	else echo runtest ; fi`
d162 1
a162 14
CC_FOR_TARGET = ` \
  if [ -f $$r/../gcc/xgcc ] ; then \
    if [ -f $$r/../newlib/Makefile ] ; then \
      echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc; \
    else \
      echo $$r/../gcc/xgcc -B$$r/../gcc/; \
    fi; \
  else \
    if [ "@@host@@" = "@@target@@" ] ; then \
      echo $(CC); \
    else \
      echo gcc | sed '$(transform)'; \
    fi; \
  fi`
d166 1
a166 14
CXX_FOR_TARGET = ` \
  if [ -f $$r/../gcc/xgcc ] ; then \
    if [ -f $$r/../newlib/Makefile ] ; then \
      echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc; \
    else \
      echo $$r/../gcc/xgcc -B$$r/../gcc/; \
    fi; \
  else \
    if [ "@@host@@" = "@@target@@" ] ; then \
      echo $(CXX); \
    else \
      echo gcc | sed '$(transform)'; \
    fi; \
  fi`
d179 13
a191 168
ALL_EMULATIONS = \
	ea29k.o \
	eaixppc.o \
	eaixrs6.o \
	ealpha.o \
	ealphabsd.o \
	earcelf.o \
	earm_epoc_pe.o \
	earmaoutb.o \
	earmaoutl.o \
	earmcoff.o \
	earmelf.o \
	earmelf_linux.o \
	earmelf_oabi.o \
	earmnbsd.o \
	earmpe.o \
	eavr1200.o \
	eavr23xx.o \
	eavr4433.o \
	eavr44x4.o \
	eavr85xx.o \
	eavrmega103.o \
	eavrmega161.o \
	eavrmega603.o \
	ecoff_sparc.o \
	ecrisaout.o \
	ecriself.o \
	ecrislinux.o \
	ed10velf.o \
	ed30v_e.o \
	ed30v_o.o \
	ed30velf.o \
	edelta68.o \
	eebmon29k.o \
	eelf32_i960.o \
	eelf32_i860.o \
	eelf32_sparc.o \
	eelf32b4300.o \
	eelf32bmip.o \
	eelf32bmipn32.o \
	eelf32btsmip.o \
	eelf32ltsmip.o \
	eelf32ebmip.o \
	eelf32elmip.o \
	eelf32fr30.o \
	eelf32i370.o \
	eelf32l4300.o \
	eelf32lmip.o \
	eelf32lppc.o \
	eelf32lppcsim.o \
	eelf32mcore.o \
	eelf32ppc.o \
	eelf32ppclinux.o \
	eelf32ppcsim.o \
	eelf_i386.o \
	eelf_i386_be.o \
	eelf_i386_chaos.o \
	egld960.o \
	egld960coff.o \
	eh8300.o \
	eh8300h.o \
	eh8300s.o \
	eh8500.o \
	eh8500b.o \
	eh8500c.o \
	eh8500m.o \
	eh8500s.o \
	ehp300bsd.o \
	ehp3hpux.o \
	ehppaelf.o \
	ehppalinux.o \
	ei386aout.o \
	ei386beos.o \
	ei386bsd.o \
	ei386coff.o \
	ei386go32.o \
	ei386linux.o \
	ei386lynx.o \
	ei386mach.o \
	ei386moss.o \
	ei386msdos.o \
	ei386nbsd.o \
	ei386nw.o \
	ei386pe.o \
	ei386pe_posix.o \
	elnk960.o \
	em68hc11elf.o \
	em68hc11elfb.o \
	em68hc12elf.o \
	em68hc12elfb.o \
	em68k4knbsd.o \
	em68kaout.o \
	em68kaux.o \
	em68kcoff.o \
	em68kelf.o \
	em68klinux.o \
	em68klynx.o \
	em68knbsd.o \
	em68kpsos.o \
	em88kbcs.o \
	emcorepe.o \
	emipsbig.o \
	emipsbsd.o \
	emipsidt.o \
	emipsidtl.o \
	emipslit.o \
	emipslnews.o \
	emipspe.o \
	enews.o \
	ens32knbsd.o \
	epc532macha.o \
	epjelf.o \
	epjlelf.o \
	eppcmacos.o \
	eppcnw.o \
	eppcpe.o \
	eriscix.o \
	esa29200.o \
	esh.o \
	eshelf.o \
	eshelf_linux.o \
	eshlelf_linux.o \
	eshl.o \
	eshlelf.o \
	eshpe.o \
	esparcaout.o \
	esparclinux.o \
	esparclynx.o \
	esparcnbsd.o \
	est2000.o \
	esun3.o \
	esun4.o \
	etic30aout.o \
	etic30coff.o \
	etic54xcoff.o \
	etic80coff.o \
	evanilla.o \
	evax.o \
	evsta.o \
	ew65.o \
	ez8001.o \
	ez8002.o


ALL_64_EMULATIONS = \
	eelf64_ia64.o \
	eelf_x86_64.o \
	eelf64_sparc.o \
	eelf64alpha.o \
	eelf64bmip.o \
	eelf64btsmip.o \
	eelf64ltsmip.o \
	eelf64hppa.o


ALL_EMUL_EXTRA_OFILES = \
	deffilep.o \
	pe-dll.o


CFILES = ldctor.c ldemul.c ldexp.c ldfile.c ldlang.c \
	ldmain.c ldmisc.c ldver.c ldwrite.c lexsup.c \
	mri.c ldcref.c pe-dll.c


HFILES = ld.h ldctor.h ldemul.h ldexp.h ldfile.h \
	ldlang.h ldlex.h ldmain.h ldmisc.h ldver.h \
	ldwrite.h mri.h deffile.h pe-dll.h
d197 1
a197 3
OFILES = ldgram.o ldlex.o lexsup.o ldlang.o mri.o ldctor.o ldmain.o \
	ldwrite.o ldexp.o  ldemul.o ldver.o ldmisc.o \
	ldfile.o ldcref.o ${EMULATION_OFILES} ${EMUL_EXTRA_OFILES}
d216 1
a216 2
ld_new_SOURCES = ldgram.y ldlex.l lexsup.c ldlang.c mri.c ldctor.c ldmain.c \
	ldwrite.c ldexp.c ldemul.c ldver.c ldmisc.c ldfile.c ldcref.c
d226 1
a226 2
MOSTLYCLEANFILES = $(STAGESTUFF) ld1$(EXEEXT) ld2$(EXEEXT) ld3$(EXEEXT) \
	ldemul-list.h crtbegin.o crtend.o ld.log ld.sum
d465 1
a465 1
	  test -z "$ii" \
d578 1
a578 1
	  test "$$subdir" = "." && dot_seen=yes; \
a853 3
ealphabsd.c: $(srcdir)/emulparams/alphabsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/alphabsd.sc ${GEN_DEPENDS}
	${GENSCRIPTS} alphabsd "$(tdir_alphabsd)"
d1094 4
@


1.20
log
@Automatic cvs merge. Dread what I will have to fix after this excuse
of a program is done...
@
text
@d71 1
d77 2
d96 1
d102 1
d120 3
d216 1
a216 4
	earmelf.o \
	earmelf_oabi.o \
	earmelf_linux.o \
	earmelf_linux26.o \
d220 3
a224 1
	earm_epoc_pe.o \
d227 1
a228 1
	eavr4433.o \
a229 1
	eavrmega603.o \
d232 1
d234 3
a237 1
	ed30velf.o \
d240 1
d243 2
a245 1
	eelf32_i960.o \
d248 3
d253 1
a253 1
	eelf32bmipn32.o \
d258 2
d262 1
d265 1
a267 2
	eelf32fr30.o \
	eelf32mcore.o \
d278 2
d295 4
d318 2
a321 2
	ens32knbsd.o \
	epc532macha.o \
d329 3
a332 1
	eshl.o \
d343 1
d354 2
d358 4
a361 1
	eelf64bmip.o
d365 2
a366 2
	pe-dll.o \
	deffilep.o
d397 1
a397 1
GENSCRIPTS = $(SHELL) $(srcdir)/genscripts.sh ${srcdir} ${libdir} @@host@@ @@target@@ @@target_alias@@ "@@EMULATION_LIBPATH@@" "@@NATIVE_LIB_DIRS@@"
d400 3
d417 1
a417 1
CLEANFILES = dep.sed DEP DEP1 DEP2
d436 4
a439 2
ld_new_OBJECTS =  ldgram.o ldlex.o lexsup.o ldlang.o mri.o ldctor.o \
ldmain.o ldwrite.o ldexp.o ldemul.o ldver.o ldmisc.o ldfile.o ldcref.o
d443 1
d460 1
a460 1
ldgram.c ldlex.c
d471 1
a471 1
SOURCES = $(ld_new_SOURCES)
d476 1
a476 1
.SUFFIXES: .S .c .dvi .info .l .lo .o .ps .s .texi .texinfo .txi .y
d529 5
d542 1
d576 2
a577 4
	$(YACC) $(AM_YFLAGS) $(YFLAGS) $< && mv y.tab.c $*.c
	if test -f y.tab.h; then \
	if cmp -s y.tab.h $*.h; then rm -f y.tab.h; else mv y.tab.h $*.h; fi; \
	else :; fi
d949 1
a949 1
	-test -z "ldlexlldgramhldgramc$(MAINTAINERCLEANFILES)" || rm -f ldlexl ldgramh ldgramc $(MAINTAINERCLEANFILES)
d1050 2
a1051 1
  $(srcdir)/emultempl/armelf.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
d1057 2
a1058 1
  $(srcdir)/emultempl/armelf.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
a1059 3
earmelf_linux26.c: $(srcdir)/emulparams/armelf_linux26.sh \
  $(srcdir)/emultempl/armelf.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelf_linux26 "$(tdir_armelf_linux26)"
d1113 9
d1152 3
d1167 6
d1189 1
a1189 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfppc.sc ${GEN_DEPENDS}
d1191 3
d1198 1
a1198 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfppc.sc ${GEN_DEPENDS}
d1200 3
d1204 1
a1204 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfppc.sc ${GEN_DEPENDS}
d1212 6
d1224 6
d1233 3
d1239 3
d1278 8
d1331 12
d1353 1
a1353 1
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/m68kcoff.sc ${GEN_DEPENDS}
d1356 2
a1357 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
d1440 6
d1482 3
d1609 1
a1609 1
	  MAKEINFO="$(MAKEINFO) -I $(srcdir) -I $(BFDDIR)/doc" $(TEXI2DVI) $(srcdir)/ld.texinfo
d1648 7
a1654 2
	sed -f dep.sed < DEP1 > $@@
	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> $@@
d1694 1
a1694 1
  ldemul.h ldmisc.h ldexp.h ldlang.h ldfile.h ldmain.h \
d1703 1
a1703 1
  ldfile.h ldmain.h ldgram.h ldlex.h ldemul.h
d1707 2
a1708 2
  ldmain.h ldgram.h ldexp.h ldlang.h ldemul.h ldlex.h \
  ldmisc.h ldctor.h ldfile.h $(INCDIR)/fnmatch.h $(INCDIR)/demangle.h
d1711 4
a1714 3
  $(INCDIR)/progress.h $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h \
  ldmain.h ldmisc.h ldwrite.h ldgram.h ldexp.h ldlang.h \
  ldemul.h ldlex.h ldfile.h ldctor.h
d1721 1
a1721 1
  ldver.h ldemul.h ldmain.h
d1730 1
a1730 1
  ldver.h ldemul.h
d1741 3
a1743 3
  ldlang.h ldwrite.h ldmisc.h ldgram.h ldmain.h ldemul.h \
  $(INCDIR)/coff/internal.h ../bfd/libcoff.h deffile.h \
  pe-dll.h
d1747 1
a1747 1
  ldemul.h ldfile.h ldmisc.h ldmain.h mri.h ldctor.h \
d1751 1
a1751 1
  ldlang.h ldfile.h ldlex.h ldmain.h
@


1.19
log
@Remove libiberty from the list of dependencies, since we use the install
version.
@
text
@d390 1
a390 1
DISTCLEANFILES = tdirs site.exp site.bak
@


1.18
log
@Make new binutils compile on Alpha again; ok espie@@
@
text
@d373 1
a373 1
ld_new_DEPENDENCIES = $(EMULATION_OFILES) $(EMUL_EXTRA_OFILES) $(BFDLIB) $(LIBIBERTY) $(INTLDEPS)
@


1.17
log
@${SHELL} move-if-changed
@
text
@d206 1
d1003 3
@


1.16
log
@Fix man pages for good.
@
text
@d1550 1
a1550 1
	$(srcdir)/../move-if-change tmp-Makefile Makefile
d1555 1
a1555 1
	$(srcdir)/../move-if-change tmp-Makefile.in $(srcdir)/Makefile.in
d1560 1
a1560 1
	$(srcdir)/../move-if-change tmp-Makefile.am $(srcdir)/Makefile.am
@


1.15
log
@Some installation problems: older gnu programs don't know about DESTDIR,
but we have a mix here -> convert the old ones to heed DESTDIR.

Also, fix manpages installation in Makefile.bsd-wrapper
(INSTALL_MAN setting that got lost, bad MANDIR, don't set MANDIR if
PREFIX is the standard location)
@
text
@d428 4
d879 1
a879 1
install-data-am: install-man install-data-local
@


1.14
log
@Allow make clean to proceed.
(This is probably a work-around for a bug in ksh)
@
text
@d1501 1
a1501 1
	$(mkinstalldirs) $(bindir) $(tooldir)/bin
d1505 1
a1505 1
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(bindir)/`echo $$p|sed -e 's/$(EXEEXT)$$//' -e 's/-new//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
d1510 3
a1512 3
	  rm -f $(tooldir)/bin/ld$(EXEEXT); \
	  ln $(bindir)/$$n$(EXEEXT) $(tooldir)/bin/ld$(EXEEXT) >/dev/null 2>/dev/null \
	  || $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(tooldir)/bin/ld$(EXEEXT); \
d1516 1
a1516 1
	$(mkinstalldirs) $(scriptdir)/ldscripts
d1518 1
a1518 1
	  $(INSTALL_DATA) $$f $(scriptdir)/$$f ; \
@


1.13
log
@link against installed libiberty
@
text
@d723 1
@


1.12
log
@Help stupid cvs fixing basic conflicts.
@
text
@d199 1
a199 1
LIBIBERTY = ../libiberty/libiberty.a
@


1.11
log
@Kill old libiberty, use the one under egcs now.
@
text
@d1 7
a7 11
# Makefile for the GNU linker ld (version 2)
# Copyright (C) 1989, 90, 91, 92, 93, 94, 95, 1996
# Free Software Foundation, Inc.

# This file is part of GNU ld.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
d9 4
a12 7
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
d14 1
d16 2
a18 4
srcdir = @@srcdir@@
objdir = .

target_alias = @@target_alias@@
d20 1
a21 2
program_transform_name = @@program_transform_name@@
exec_prefix = @@exec_prefix@@
d23 6
d30 1
a30 2
tooldir = $(exec_prefix)/$(target_alias)
datadir = @@datadir@@
a31 10
man1dir = $(mandir)/man1
man2dir = $(mandir)/man2
man3dir = $(mandir)/man3
man4dir = $(mandir)/man4
man5dir = $(mandir)/man5
man6dir = $(mandir)/man6
man7dir = $(mandir)/man7
man8dir = $(mandir)/man8
man9dir = $(mandir)/man9
infodir = @@infodir@@
d33 1
d35 7
a41 4
# We put the scripts in the directory $(scriptdir)/ldscripts.
# We can't put the scripts in $(datadir) because the SEARCH_DIR
# directives need to be different for native and cross linkers.
scriptdir = $(tooldir)/lib
d43 4
a46 1
SHELL = /bin/sh
d48 2
a49 2
INSTALL = `cd $(srcdir); pwd`/../install.sh -c
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
d51 2
a52 2
INSTALL_XFORM = $(INSTALL) -t='$(program_transform_name)'
INSTALL_XFORM1 = $(INSTALL_XFORM) -b=.1
d54 15
a68 2
AR = ar
AR_FLAGS = qv
d70 49
a118 10
CFLAGS = @@CFLAGS@@
LDFLAGS = @@LDFLAGS@@
HLDFLAGS = @@HLDFLAGS@@
HLDENV = @@HLDENV@@
RPATH_ENVVAR = @@RPATH_ENVVAR@@
MAKEINFO = makeinfo
TEXI2DVI = texi2dvi
RANLIB = ranlib
BISON = `if [ -f ../bison/bison ] ; then echo ../bison/bison -y -L../bison/bison ; else echo bison -y ; fi`
LEX = `if [ -f ../flex/flex ] ; then echo ../flex/flex ;  else echo flex ; fi`
d122 1
d130 1
a130 1
LIB_PATH =
d134 2
a135 3
INCDIR	= $(BASEDIR)/include
INCLUDES = -I. -I$(srcdir) -I../bfd -I$(BFDDIR) -I$(INCDIR)
DEP = mkdep
a139 16
# Where to find texinfo.tex to format docn with TeX
TEXIDIR = $(srcdir)/../texinfo

# Where to find other docs needed to format with TeX
TEXINPUTS = $(TEXIDIR):$(BFDDIR)/doc:$(srcdir)

# Whether to get roff to put indexing entries on stderr
TEXI2OPT =
# You neeed this to generate ld-index.ms (or .mm or .me)
# TEXI2OPT = -i

TEXI2ROFF=texi2roff

# Which roff program to use to generate index for texi2roff'd doc
ROFF = groff

a144 11
# These were used by `make check-cdtest'
#
#CXX = `if [ -f ../gcc/xgcc ] ; then \
#	        echo ../gcc/xgcc -B../gcc/; \
#	    else echo gcc; \
#	    fi`
#CXXFLAGS = -fgnu-linker
#
# FIX_ME: using ../gcc/xgcc breaks the cdtest. 
#CXX = g++

d150 1
d155 2
a156 1
RUNTESTFLAGS =
d169 1
a169 1
      echo gcc | sed '$(program_transform_name)'; \
d173 1
d186 1
a186 1
      echo gcc | sed '$(program_transform_name)'; \
a189 8
# go directly to ld.new in case this ld isn't capable of
# linking native object on this host.  It can be renamed on
# install.
LD_PROG	= ld.new

# Target to use for installing unformatted man-pages.  Some systems may not
# want them installed.
INSTALL_MAN = install-man
d191 4
a194 2
all: $(LD_PROG)
.PHONY: all
d196 1
a196 1
LINTFLAGS = $(INCLUDES) $(EXTRA_DEF) 
d198 2
a199 18
# The .cc suffix was used by `make check-cdtest'.

.SUFFIXES: .y $(SUFFIXES) .cc

# Suppress smart makes who think they know how to automake Yacc files
.y.c:

# This rule was used for the check-cdtest target.
#.cc.o:
#	$(CXX) -c -I$(srcdir) $(CXXFLAGS) $(CFLAGS) $<

ALL_CFLAGS = $(INCLUDES) @@HDEFINES@@ $(CFLAGS)
.c.o:
	$(CC) -c $(ALL_CFLAGS) $<

BFDDEP = ../bfd/libbfd.a
BFDLIB = @@BFDLIB@@
LIBIBERTY = -liberty
d206 5
a210 1
	ealphabsd.o \
d214 1
d216 9
d226 4
d233 1
d238 2
d244 1
a244 1
	eelf64_sparc.o \
d246 1
d249 2
a250 1
	ego32.o \
a260 1
	ehppaelf.o \
d262 1
d274 1
d286 1
a288 2
	emipsel_obsd.o \
	emipseb_obsd.o \
d292 2
d295 2
d308 1
d310 1
d316 3
d326 1
d328 9
a336 1
	eelf64alpha.o
d340 2
a341 1
	mri.c ldcref.c
d343 1
a343 1
HFILES = config.h ld.h ldctor.h ldemul.h ldexp.h ldfile.h \
d345 2
a346 1
	ldwrite.h mri.h
d348 2
a349 2
GENERATED_CFILES = ldgram.c ldlex.c
GENERATED_HFILES = ldgram.h ldemul-list.h
d353 1
a353 1
	ldfile.o ldcref.o ${EMULATION_OFILES}
a354 1
LINTSOURCES = $(CFILES) $(GENERATED_CFILES) e*.c
d358 148
a505 2
info: ld.info
.PHONY: info
d507 2
a508 4
ldgram.c: ldgram.y
	$(BISON) $(BISONFLAGS) -d $(srcdir)/ldgram.y
	mv -f y.tab.c ldgram.c
	mv -f y.tab.h ldgram.h
d510 23
a532 2
# Separate from ldgram.c so that a parallel make doesn't try to build
# both ldgram.c and ldgram.h simultaneously.
d535 428
d964 1
a964 1
	$(CC) -c -DDEFAULT_EMULATION='"$(EMUL)"' -DSCRIPTDIR='"$(scriptdir)"' $(ALL_CFLAGS) $<
d981 2
a982 13
ldlex.c: ldlex.l
	$(LEX) $(srcdir)/ldlex.l
	-sed -e '/^int.*free();/d' \
	     -e '/^char.*malloc();/d' \
	     -e 's/malloc/xmalloc/g' \
	  < lex.yy.c > ldlex.c.new
	-rm lex.yy.c
	mv ldlex.c.new ./ldlex.c

# These all start with e so 'make clean' can find them.

GENSCRIPTS = $(SHELL) $(srcdir)/genscripts.sh ${srcdir} ${libdir} @@host@@ @@target@@ @@target_alias@@ ${EMUL} "@@NATIVE_LIB_DIRS@@"
GEN_DEPENDS = $(srcdir)/genscripts.sh $(srcdir)/emultempl/stringify.sed
d997 15
a1011 3
ealphabsd.c: $(srcdir)/emulparams/alphabsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/alphabsd.sc ${GEN_DEPENDS}
	${GENSCRIPTS} alphabsd "$(tdir_alpha)"
d1019 1
a1019 1
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/armcoff.sc ${GEN_DEPENDS}
d1021 6
d1030 32
d1065 12
d1083 9
d1095 3
d1102 1
a1102 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfmips.sc ${GEN_DEPENDS}
d1104 3
d1108 1
a1108 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfmips.sc ${GEN_DEPENDS}
d1111 1
a1111 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfmips.sc ${GEN_DEPENDS}
d1113 3
d1120 1
a1120 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfmips.sc ${GEN_DEPENDS}
d1125 3
d1131 6
d1141 1
a1141 1
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
d1143 3
d1149 3
a1157 3
ego32.c: $(srcdir)/emulparams/go32.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} go32 "$(tdir_go32)"
a1187 3
ehppaelf.c: $(srcdir)/emulparams/hppaelf.sh \
  $(srcdir)/emultempl/hppaelf.em $(srcdir)/scripttempl/hppaelf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} hppaelf "$(tdir_hppaelf)"
d1191 3
d1227 3
d1261 1
a1261 1
  $(srcdir)/emultempl/m88kbcs.em $(srcdir)/scripttempl/m88kbcs.sc ${GEN_DEPENDS}
d1263 3
a1271 6
emipsel_obsd.c: $(srcdir)/emulparams/mipsel_obsd.sh \
  $(srcdir)/emultempl/elfobsd.em $(srcdir)/scripttempl/elfmips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mipsel_obsd "$(tdir_mipsel_obsd)"
emipseb_obsd.c: $(srcdir)/emulparams/mipseb_obsd.sh \
  $(srcdir)/emultempl/elfobsd.em $(srcdir)/scripttempl/elfmips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mipseb_obsd "$(tdir_mipseb_obsd)"
d1281 12
d1302 6
d1335 3
d1341 3
d1359 9
d1377 3
a1389 3
$(LD_PROG): $(OFILES) $(BFDDEP) $(LIBIBERTY)
	$(HLDENV) $(CC) $(HLDFLAGS) $(CFLAGS) $(LDFLAGS) -o $(LD_PROG) $(OFILES) $(BFDLIB) $(LIBIBERTY) $(EXTRALIBS)

d1395 2
a1396 40
# These targets are for the dejagnu testsuites. The file site.exp 
# contains global variables that all the testsuites will use.

site.exp: ./config.status Makefile
	@@echo "Making a new config file..."
	@@rm -f ./tmp?
	@@touch site.exp
	@@mv site.exp site.bak
	@@echo "## variables are automatically generated by make ##" > ./tmp0
	@@echo "# Do not edit here. If you wish to override these" >> ./tmp0
	@@echo "# values, add them to the last section" >> ./tmp0
	@@echo "# HOST AND TARGET INFO" >> ./tmp0
	@@echo "set host_os @@host_os@@" >> ./tmp0
	@@echo "set host_alias @@host_alias@@" >> ./tmp0
	@@echo "set host_cpu @@host_cpu@@" >> ./tmp0
	@@echo "set host_vendor @@host_vendor@@" >> ./tmp0
	@@echo "set target_os @@target_os@@" >> ./tmp0
	@@echo "set target_alias @@target_alias@@" >> ./tmp0
	@@echo "set target_cpu @@target_cpu@@" >> ./tmp0
	@@echo "set target_vendor @@target_vendor@@" >> ./tmp0
	@@echo "set host_triplet @@host@@" >> ./tmp0
	@@echo "set target_triplet @@target@@" >> ./tmp0
	@@echo "# DIRECTORY INFO" >> ./tmp0
	@@echo "set objdir `pwd`" >> ./tmp0
	@@echo "" >> ./tmp0	
	@@echo "# LD DEPENDENCIES" >> ./tmp0	
	@@echo "set OFILES \"$(OFILES)\"" >> ./tmp0
	@@echo "set BFDLIB \"$(BFDLIB)\"" >> ./tmp0
	@@echo "set LIBIBERTY \"$(LIBIBERTY)\"" >> ./tmp0
	@@echo "set HOSTING_EMU \"$(HOSTING_EMU)\"" >> ./tmp0
	@@echo "set HOSTING_CRT0 \"$(HOSTING_CRT0)\"" >> ./tmp0
	@@echo "set HOSTING_LIBS \"$(HOSTING_LIBS)\"" >> ./tmp0
	@@echo "" >> ./tmp0	
	@@echo "## Variables generated by configure. Do Not Edit ##" >> ./tmp0
	@@cat ./tmp0 > site.exp
	@@cat site.bak | sed \
			-e '1,/^## Variables generated by.*##/ d' >> site.exp
	-@@rm -f ./tmp?

check: site.exp
d1398 17
a1414 15
	srcroot=`cd ${srcdir}; pwd` ; export srcroot ; \
	EXPECT=${EXPECT} ; export EXPECT ; \
	$(RPATH_ENVVAR)=$$r/../bfd:$$r/../opcodes:$$$(RPATH_ENVVAR); \
	export $(RPATH_ENVVAR); \
	if [ -f $$r/../expect/expect ] ; then  \
	   TCL_LIBRARY=$${srcroot}/../tcl/library ; \
	   export TCL_LIBRARY ; \
	else true ; fi ; \
	$(RUNTEST) --tool ld --srcdir $(srcdir)/testsuite $(RUNTESTFLAGS) \
	  CC="$(CC_FOR_TARGET)" CFLAGS="$(CFLAGS)" \
	  CXX="$(CXX_FOR_TARGET)" CXXFLAGS="$(CXXFLAGS)" \
	  CC_FOR_HOST="$(CC)" CFLAGS_FOR_HOST="$(CFLAGS)"

installcheck:
.PHONY: check installcheck
d1420 7
a1426 7
ld-partial.o: ld.new
	./ld.new $(HOSTING_EMU) -o ld-partial.o -r $(OFILES)
ld1: ld-partial.o
	./ld.new $(HOSTING_EMU) -o ld1 $(HOSTING_CRT0) ld-partial.o $(BFDLIB) $(LIBIBERTY) $(HOSTING_LIBS)

ld1-full: ld.new
	./ld.new $(HOSTING_EMU) -o ld1-full $(HOSTING_CRT0) $(OFILES) $(BFDLIB) $(LIBIBERTY) $(HOSTING_LIBS)
d1428 2
a1429 2
ld2: ld1
	./ld1 $(HOSTING_EMU) -o ld2 $(HOSTING_CRT0) $(OFILES) $(BFDLIB) $(LIBIBERTY) $(HOSTING_LIBS)
d1431 2
a1432 2
ld3: ld2
	./ld2 $(HOSTING_EMU) -o ld3 $(HOSTING_CRT0) $(OFILES) $(BFDLIB) $(LIBIBERTY) $(HOSTING_LIBS)
d1434 2
a1435 2
bootstrap: ld3
	cmp ld2 ld3
d1475 15
a1489 129
	ln -s ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi || \
	ln ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi || \
	cp ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi

# TeX output
dvi: ld.dvi
ld.dvi: $(srcdir)/ld.texinfo configdoc.texi $(BFDDIR)/doc/bfdsumm.texi
	TEXINPUTS=$(BFDDIR)/doc:$$TEXINPUTS $(TEXI2DVI) $(srcdir)/ld.texinfo

ldint.dvi: $(srcdir)/ldint.texinfo
	$(TEXI2DVI) $(srcdir)/ldint.texinfo

# info file for online browsing
ld.info: $(srcdir)/ld.texinfo configdoc.texi $(BFDDIR)/doc/bfdsumm.texi
	$(MAKEINFO) -I$(BFDDIR)/doc -o ld.info $(srcdir)/ld.texinfo

ldint.info: $(srcdir)/ldint.texinfo
	$(MAKEINFO) -o ldint.info $(srcdir)/ldint.texinfo

.PHONY: dvi

#separate targets for "ms", "me", and "mm" forms of roff doc
# Try to use a recent texi2roff.  v2 was put on prep in jan91.
# If you want an index, see texi2roff doc for postprocessing 
# and add -i to texi2roff invocations below.
# Workarounds for texi2roff-2 (probably fixed in later texi2roff's, delete
#    correspondint -e lines when later texi2roff's are current)
# + @@ifinfo's deleted explicitly due to texi2roff-2 bug w nested constructs.
# + @@c's deleted explicitly because texi2roff sees texinfo commands in them
# + @@   (that's at-BLANK) not recognized by texi2roff, turned into blank
# + @@alphaenumerate is ridiculously new, turned into @@enumerate

ld.ms: $(srcdir)/ld.texinfo
	sed -e '/\\input texinfo/d' \
		-e '/@@c TEXI2ROFF-KILL/,/@@c END TEXI2ROFF-KILL/d' \
		-e '/^@@ifinfo/,/^@@end ifinfo/d' \
		-e '/^@@c/d' \
		-e 's/{.*,,/{/' \
		-e 's/@@ / /g' \
		-e 's/^@@alphaenumerate/@@enumerate/g' \
		-e 's/^@@end alphaenumerate/@@end enumerate/g' \
		$(srcdir)/ld.texinfo | \
	$(TEXI2ROFF) $(TEXI2OPT) -ms | \
	sed -e 's/---/\\(em/g' \
		>>ld.ms 

# index for roff output
ld-index.ms: ld.ms
	$(ROFF) -ms ld.ms 2>&1 1>/dev/null | \
		sed -e '/: warning:/d' | \
		texi2index >ld-index.ms

# roff output (-mm)
ld.mm: $(srcdir)/ld.texinfo
	sed -e '/\\input texinfo/d' \
		-e '/@@c TEXI2ROFF-KILL/,/@@c END TEXI2ROFF-KILL/d' \
		-e '/^@@ifinfo/,/^@@end ifinfo/d' \
		-e '/^@@c/d' \
		-e 's/{.*,,/{/' \
		-e '/@@noindent/d' \
		-e 's/@@ / /g' \
		-e 's/^@@alphaenumerate/@@enumerate/g' \
		-e 's/^@@end alphaenumerate/@@end enumerate/g' \
		$(srcdir)/ld.texinfo | \
	$(TEXI2ROFF) $(TEXI2OPT) -mm | \
	sed -e 's/---/\\(em/g' \
	>ld.mm 

# index for roff output
ld-index.mm: ld.mm
	$(ROFF) -mm ld.mm 2>&1 1>/dev/null | \
		sed -e '/: warning:/d' | \
		texi2index >ld-index.mm

# roff output (-me)
ld.me: $(srcdir)/ld.texinfo
	sed -e '/\\input texinfo/d' \
		-e '/@@c TEXI2ROFF-KILL/,/@@c END TEXI2ROFF-KILL/d' \
		-e '/^@@ifinfo/,/^@@end ifinfo/d' \
		-e '/^@@c/d' \
		-e 's/{.*,,/{/' \
		-e 's/@@ / /g' \
		-e 's/^@@alphaenumerate/@@enumerate/g' \
		-e 's/^@@end alphaenumerate/@@end enumerate/g' \
		$(srcdir)/ld.texinfo | \
	$(TEXI2ROFF) $(TEXI2OPT) -me | \
	sed -e 's/---/\\(em/g' \
		>>ld.me 

# index for roff output
ld-index.me: ld.me
	$(ROFF) -me ld.me 2>&1 1>/dev/null | \
		sed -e '/: warning:/d' | \
		texi2index >ld-index.me

stage1:	force
	-mkdir stage1
	-mv -f $(STAGESTUFF) $(LD_PROG) stage1
	-(cd stage1 ; ln -s $(LD_PROG) ld)

stage2:	force
	-mkdir stage2
	-mv -f $(STAGESTUFF) $(LD_PROG) stage2
	-(cd stage2 ; ln -s $(LD_PROG) ld)

stage3:	force
	-mkdir stage3
	-mv -f $(STAGESTUFF) $(LD_PROG) stage3
	-(cd stage3 ; ln -s $(LD_PROG) ld)

against = stage2

comparison: force
	for i in $(STAGESTUFF) $(LD_PROG) ; do cmp $$i $(against)/$$i ; done

de-stage1: force
	-(cd stage1 ; mv -f * ..)
	-rm ld
	-rmdir stage1

de-stage2: force
	-(cd stage2 ; mv -f * ..)
	-rm ld
	-rmdir stage2

de-stage3: force
	-(cd stage3 ; mv -f * ..)
	-rm ld
	-rmdir stage3
d1491 5
a1495 1
.PHONY: stage1 stage2 stage3 comparison de-stage1 de-stage2 de-stage3
d1497 1
a1497 3
# Stuff that should be included in a distribution:
LDDISTSTUFF = ldgram.c ldgram.h ldlex.c
diststuff: $(LDDISTSTUFF) info
d1499 14
a1512 19
mostlyclean:
	-rm -f $(STAGESTUFF) ld.?? ld.??? ldlex.[qp]
	-rm -f ld ld1 ld2 ld3 *.o y.output cdtest cdtest.out cdtest.tmp
	-rm -f cdtest-ur cdtest-ur.out cdtest-ur.tmp crtbegin.o crtend.o
	-rm -f ldemul-list.h
	-rm -fr tmpdir
clean: mostlyclean
	-rm -f $(LD_PROG) configdoc.texi
distclean: clean
	-rm -f Makefile config.status TAGS site.exp site.bak config.cache
	-rm -f config.h stamp-h config.log
	-rm -rf ldscripts
maintainer-clean realclean: clean distclean
	@@echo "This command is intended for maintainers to use;"
	@@echo "it deletes files that may require special tools to rebuild."
	-rm -f $(GENERATED_CFILES) $(GENERATED_HFILES)
	-rm -f $(LDDISTSTUFF) *.info*

.PHONY: diststuff mostlyclean clean distclean realclean
d1514 2
a1515 18
lintlog:$(LINTSOURCES) Makefile
	$(LINT) -abhxzn  $(LINTFLAGS)  $(LINTSOURCES) \
| grep -v "pointer casts may be troublesome" \
| grep -v "possible pointer alignment problem" \
| grep -v "ignore" \
| grep -v "conversion from long may lose accuracy" \
| grep -v "warning: constant argument to NOT" \
| grep -v "enumeration type clash, operator CAST" \
| grep -v "warning: constant in conditional context"\
| grep -v "archive\.c"


TAGS:
	etags -t $(srcdir)/*.[chly] *.[chly]


install: $(INSTALL_MAN)
	$(INSTALL_XFORM) ld.new $(bindir)/ld
d1519 3
a1521 24
	test -d $(tooldir) || mkdir $(tooldir)
	test -d $(tooldir)/bin || mkdir $(tooldir)/bin
	-n=`echo ld | sed '$(program_transform_name)'`; \
	  rm -f $(tooldir)/bin/ld; \
	  ln $(bindir)/$$n $(tooldir)/bin/ld >/dev/null 2>/dev/null \
	   || $(INSTALL_PROGRAM) ld.new $(tooldir)/bin/ld

install-man:
	$(INSTALL_XFORM1) $(srcdir)/ld.1 $(man1dir)/ld.1

install-info: ld.info
	if [ -r ld.info ]; then \
	  dir=. ; \
	else \
	  dir=$(srcdir) ; \
	fi ; \
	for i in `cd $$dir ; echo ld.info*` ; do \
		$(INSTALL_DATA) $$dir/$$i $(infodir)/$$i ; \
	done

clean-info:
	-rm -rf *.info*

.PHONY: install install-info clean-info
d1524 12
a1535 12
# Have to get rid of .dep1 here so that "$?" later includes all of $(CFILES).
.dep: dep.sed $(CFILES) $(HFILES) $(GENERATED_CFILES) $(GENERATED_HFILES) config.h
	rm -f .dep1
	$(MAKE) DEP=$(DEP) .dep1
	sed -f dep.sed <.dep1 >.dep

# This rule really wants a mkdep that runs "gcc -MM".
.dep1: $(CFILES) $(GENERATED_CFILES)
	rm -f .dep2
	echo '# DO NOT DELETE THIS LINE -- mkdep uses it.' > .dep2
	$(DEP) -f .dep2 $(ALL_CFLAGS) $?
	$(srcdir)/../move-if-change .dep2 .dep1
d1542 1
a1542 1
dep: .dep
d1544 1
a1544 1
	cat .dep >> tmp-Makefile
d1547 1
a1547 1
dep-in: .dep
d1549 1
a1549 1
	cat .dep >> tmp-Makefile.in
d1552 4
a1555 10
.PHONY: dep dep-in

# Dummy target to force execution of dependent targets.
#
force:

.PHONY: force

Makefile: Makefile.in config.status
	CONFIG_FILES=Makefile CONFIG_HEADERS= $(SHELL) ./config.status
d1557 1
a1557 6
config.h: stamp-h ; @@true
stamp-h: config.in config.status
	CONFIG_FILES= CONFIG_HEADERS=config.h:config.in $(SHELL) ./config.status

config.status: configure configure.host configure.tgt
	$(SHELL) ./config.status --recheck
a1562 1

d1564 2
a1565 2
  $(INCDIR)/obstack.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h ld.h ldexp.h ldlang.h ldmisc.h \
d1568 2
a1569 2
  $(INCDIR)/obstack.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  ld.h ldemul.h ldmisc.h ldexp.h ldlang.h ldfile.h ldmain.h \
d1572 2
a1573 2
  $(INCDIR)/obstack.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h ld.h ldmain.h ldmisc.h ldexp.h \
d1576 2
a1577 2
  $(INCDIR)/obstack.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h ld.h ldmisc.h ldexp.h ldlang.h \
d1580 4
a1583 4
  $(INCDIR)/obstack.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/libiberty.h $(INCDIR)/bfdlink.h ld.h ldmain.h \
  ldgram.h ldexp.h ldlang.h ldemul.h ldlex.h ldmisc.h \
  ldctor.h ldfile.h $(INCDIR)/fnmatch.h
d1585 3
a1587 3
  $(INCDIR)/obstack.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/libiberty.h $(INCDIR)/progress.h $(INCDIR)/bfdlink.h \
  ld.h ldmain.h ldmisc.h ldwrite.h ldgram.h ldexp.h ldlang.h \
d1590 2
a1591 2
  $(INCDIR)/obstack.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/libiberty.h $(INCDIR)/demangle.h ld.h ldmisc.h \
d1594 2
a1595 2
  $(INCDIR)/obstack.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  ld.h ldver.h ldemul.h ldmain.h
d1597 2
a1598 2
  $(INCDIR)/obstack.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/libiberty.h ld.h ldexp.h \
d1601 7
a1607 7
  $(INCDIR)/obstack.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/libiberty.h $(INCDIR)/getopt.h $(INCDIR)/bfdlink.h \
  ld.h ldmain.h ldmisc.h ldexp.h ldlang.h ldgram.h ldlex.h \
  ldfile.h ldver.h ldemul.h
mri.o: mri.c ../bfd/bfd.h $(INCDIR)/ansidecl.h $(INCDIR)/obstack.h \
  sysdep.h config.h $(INCDIR)/fopen-same.h ld.h ldexp.h \
  ldlang.h ldmisc.h mri.h ldgram.h
d1609 2
a1610 2
  $(INCDIR)/obstack.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/libiberty.h ld.h ldmain.h \
d1612 6
d1619 11
a1629 6
  $(INCDIR)/obstack.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h ld.h ldexp.h ldver.h ldlang.h ldemul.h \
  ldfile.h ldmisc.h ldmain.h mri.h ldlex.h
ldlex.o: ldlex.c ../bfd/bfd.h $(INCDIR)/obstack.h sysdep.h \
  config.h $(INCDIR)/fopen-same.h ld.h ldgram.h ldmisc.h \
  ldexp.h ldlang.h ldfile.h ldlex.h ldmain.h
d1631 3
a1633 1
# IF YOU PUT ANYTHING HERE IT WILL GO AWAY
@


1.10
log
@Minor fix, mips BE
@
text
@d200 1
a200 1
LIBIBERTY = ../libiberty/libiberty.a
@


1.9
log
@More consistent MIPS config
@
text
@d555 1
a555 1
  $(srcdir)/emultempl/elfarc.em $(srcdir)/scripttempl/elfmips.sc ${GEN_DEPENDS}
@


1.8
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@a215 1
	eelf32arc.o \
d265 2
a400 3
eelf32arc.c: $(srcdir)/emulparams/elf32arc.sh \
  $(srcdir)/emultempl/elfarc.em $(srcdir)/scripttempl/elfmips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32arc "$(tdir_elf32arc)"
d551 6
@


1.7
log
@Alpha support based on Chris Demetriou's <cgd@@cs.cmu.edu> work
@
text
@a224 1
	eelf64alpha.o \
d294 3
d299 1
a299 1
	mri.c ldcref.c fnmatch.c
d303 1
a303 1
	ldwrite.h mri.h fnmatch.h
d310 1
a310 1
	ldfile.o ldcref.o fnmatch.o ${EMULATION_OFILES}
d347 1
a347 1
	$(LEX) -I -Cem $(srcdir)/ldlex.l
d896 1
a896 1
	-rm -f $(STAGESTUFF) ld.?? ld.??? ldlex.[qp] config.log
d905 1
a905 1
	-rm -f config.h stamp-h
d1033 1
a1033 1
  ldctor.h ldfile.h fnmatch.h
a1061 1
fnmatch.o: fnmatch.c
@


1.6
log
@man page fixes from niklas
@
text
@d207 1
d371 3
@


1.5
log
@A dep line was lost
@
text
@d174 4
d925 1
a925 1
install: 
a926 1
	$(INSTALL_XFORM1) $(srcdir)/ld.1 $(man1dir)/ld.1
d936 3
@


1.4
log
@New fallback alg. added for arc machines. If libxx.so is not found scan for highest
version of libxx.so.n. This is what ldconfig sets as highest. This will make manual
linking of libxx.so to libxx.so.n not requiered any more.
Also some constructor/shared lib fixes. Relocs is placed in the wrong section though.
Hmmm..
@
text
@d194 1
a194 1
BFDDEP =
@


1.3
log
@Merge the Cygnus 960904 sources
@
text
@d194 1
a194 1
BFDDEP = ../bfd/libbfd.a
d211 1
d390 3
@


1.2
log
@Bring Cygnus versions into the trunk, keeping our local patches
@
text
@d31 2
a32 2
bindir = $(exec_prefix)/bin
libdir = $(exec_prefix)/lib
d34 2
a35 2
datadir = $(prefix)/lib
mandir = $(prefix)/man
d45 3
a47 3
infodir = $(prefix)/info
includedir = $(prefix)/include
docdir = $(datadir)/doc
d56 2
a57 2
INSTALL_PROGRAM = $(INSTALL)
INSTALL_DATA = $(INSTALL)
d67 1
d213 2
d219 1
d227 1
d266 1
a266 1
	epc532machaout.o \
d273 2
d291 1
a291 1
	mri.c ldcref.c
d295 1
a295 1
	ldwrite.h mri.h
d302 1
a302 1
	ldfile.o ldcref.o ${EMULATION_OFILES}
d395 6
d413 3
d437 3
d554 1
a554 1
epc532machaout.c: $(srcdir)/emulparams/pc532machaout.sh \
d556 1
a556 1
	${GENSCRIPTS} pc532machaout "$(tdir_pc532machaout)"
d575 6
d622 1
a622 1
	$(CC) $(HLDFLAGS) $(CFLAGS) $(LDFLAGS) -o $(LD_PROG) $(OFILES) $(BFDLIB) $(LIBIBERTY) $(EXTRALIBS)
d884 1
a884 1
	-rm -f cdtest-ur cdtest-ur.out cdtest-ur.tmp
d1017 1
a1017 1
  ldctor.h ldfile.h
d1036 3
a1038 3
  $(INCDIR)/getopt.h $(INCDIR)/bfdlink.h ld.h ldmain.h \
  ldmisc.h ldexp.h ldlang.h ldgram.h ldlex.h ldfile.h \
  ldver.h ldemul.h
d1045 2
a1046 1
  ldmisc.h
@


1.1
log
@Initial revision
@
text
@d2 2
a3 1
# Copyright (C) 1989, 90, 91, 92, 93, 1994 Free Software Foundation, Inc.
d65 3
d77 1
a77 1
# Seach path to override the default search path for -lfoo libraries.
d145 1
a145 1
    if [ "$(host_canonical)" = "$(target_canonical)" ] ; then \
d161 1
a161 1
    if [ "$(host_canonical)" = "$(target_canonical)" ] ; then \
d193 2
a194 2
# for self hosting
BFDLIB = ../bfd/libbfd.a
d197 84
a280 14
ALL_EMULATIONS = ea29k.o ealpha.o earmaoutl.o earmaoutb.o \
	ecoff_sparc.o eebmon29k.o \
	eelf32_sparc.o eelf32bmip.o eelf32lmip.o eelf32ppc.o eelf32lppc.o \
	eelf64_sparc.o eelf_i386.o egld960.o ego32.o eh8300.o \
	eh8300h.o eh8500.o eh8500b.o eh8500c.o eh8500m.o eh8500s.o \
	ehp300bsd.o ehp3hpux.o ehppaelf.o ei386aout.o ei386bsd.o \
	ei386coff.o ei386go32.o ei386linux.o ei386lynx.o ei386mach.o \
	ei386nbsd.o ei386nw.o elnk960.o em68k4knbsd.o em68kaout.o em68kcoff.o \
	em68kelf.o em68klynx.o em68knbsd.o em88kbcs.o emipsbig.o emipsbsd.o \
	emipsidt.o emipsidtl.o emipslit.o enews.o ens32knbsd.o eppcnw.o \
	eriscix.o esa29200.o eshl.o esh.o esparclynx.o esparcnbsd.o \
	est2000.o esun3.o esun4.o evanilla.o evax.o evsta.o \
	ez8001.o ez8002.o ei386pe.o earmpe.o eelf32b4300.o eelf32l4300.o \
	eaixppc.o eaixrs6.o edelta68.o eppcpe.o
d284 1
a284 1
	mri.c
d295 1
a295 1
	ldfile.o ${EMULATION_OFILES}
d342 1
a342 1
GENSCRIPTS = $(SHELL) $(srcdir)/genscripts.sh ${srcdir} ${libdir} @@host_alias@@ @@target_alias@@ ${EMUL} "@@NATIVE_LIB_DIRS@@"
d344 1
d346 21
a366 6
esun4.c: $(srcdir)/emulparams/sun4.sh \
  $(srcdir)/emultempl/sunos.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sun4
esun3.c: $(srcdir)/emulparams/sun3.sh \
  $(srcdir)/emultempl/sunos.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sun3
d369 43
a411 4
	${GENSCRIPTS} armpe
evsta.c: $(srcdir)/emulparams/vsta.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} vsta
d414 22
a435 7
	${GENSCRIPTS} go32
enews.c: $(srcdir)/emulparams/news.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} news
evax.c: $(srcdir)/emulparams/vax.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} vax
d438 1
a438 1
	${GENSCRIPTS} hp300bsd
d441 1
a441 7
	${GENSCRIPTS} hp3hpux
ei386pe.c: $(srcdir)/emulparams/i386pe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/pe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386pe
eppcpe.c: $(srcdir)/emulparams/ppcpe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/ppcpe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} ppcpe
d444 1
a444 1
	${GENSCRIPTS} hppaelf
d447 7
a453 1
	${GENSCRIPTS} i386aout
d456 7
a462 1
	${GENSCRIPTS} i386go32
d465 1
a465 1
	${GENSCRIPTS} i386mach
d468 1
a468 1
	${GENSCRIPTS} i386moss
d471 10
a480 46
	${GENSCRIPTS} i386msdos
eebmon29k.c: $(srcdir)/emulparams/ebmon29k.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/ebmon29k.sc ${GEN_DEPENDS}
	${GENSCRIPTS} ebmon29k
esa29200.c: $(srcdir)/emulparams/sa29200.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sa29200.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sa29200
ea29k.c: $(srcdir)/emulparams/a29k.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/a29k.sc ${GEN_DEPENDS}
	${GENSCRIPTS} a29k
em88kbcs.c: $(srcdir)/emulparams/m88kbcs.sh \
  $(srcdir)/emultempl/m88kbcs.em $(srcdir)/scripttempl/m88kbcs.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m88kbcs
eh8300.c: $(srcdir)/emulparams/h8300.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300
eh8300h.c: $(srcdir)/emulparams/h8300h.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300h.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300h
eh8500.c: $(srcdir)/emulparams/h8500.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500
eh8500b.c: $(srcdir)/emulparams/h8500b.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500b.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500b
eh8500c.c: $(srcdir)/emulparams/h8500c.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500c.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500c
eh8500m.c: $(srcdir)/emulparams/h8500m.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500m.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500m
eh8500s.c: $(srcdir)/emulparams/h8500s.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500s.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500s
esh.c: $(srcdir)/emulparams/sh.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sh.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sh
eshl.c: $(srcdir)/emulparams/shl.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sh.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shl
est2000.c: $(srcdir)/emulparams/st2000.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/st2000.sc ${GEN_DEPENDS}
	${GENSCRIPTS} st2000
evanilla.c: $(srcdir)/emulparams/vanilla.sh \
  $(srcdir)/emultempl/vanilla.em $(srcdir)/scripttempl/vanilla.sc ${GEN_DEPENDS}
	${GENSCRIPTS} vanilla
d483 10
a492 7
	${GENSCRIPTS} lnk960
egld960.c: $(srcdir)/emulparams/gld960.sh \
  $(srcdir)/emultempl/gld960.em $(srcdir)/scripttempl/i960.sc ${GEN_DEPENDS}
	${GENSCRIPTS} gld960
egld960coff.c: $(srcdir)/emulparams/gld960coff.sh \
  $(srcdir)/emultempl/gld960c.em $(srcdir)/scripttempl/i960.sc ${GEN_DEPENDS}
	${GENSCRIPTS} gld960coff
d495 1
a495 1
	${GENSCRIPTS} m68kcoff
d498 4
a501 1
	${GENSCRIPTS} m68kelf
d504 2
a505 11
	${GENSCRIPTS} m68klynx
ei386coff.c: $(srcdir)/emulparams/i386coff.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/i386coff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386coff
ei386lynx.c: $(srcdir)/emulparams/i386lynx.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/i386lynx.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386lynx
emipslit.c:  $(srcdir)/emulparams/mipslit.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/mips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mipslit
ei386bsd.c: $(srcdir)/emulparams/i386bsd.sh \
d507 7
a513 1
	${GENSCRIPTS} i386bsd
d522 1
a522 1
	${GENSCRIPTS} mipsidt
d525 5
a529 32
	${GENSCRIPTS} mipsidtl
eelf_i386.c: $(srcdir)/emulparams/elf_i386.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_i386
eelf32bmip.c: $(srcdir)/emulparams/elf32bmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32bmip
eelf32lmip.c: $(srcdir)/emulparams/elf32lmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32lmip
eelf32b4300.c: $(srcdir)/emulparams/elf32b4300.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32b4300
eelf32l4300.c: $(srcdir)/emulparams/elf32l4300.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32l4300
ealpha.c: $(srcdir)/emulparams/alpha.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/alpha.sc ${GEN_DEPENDS}
	${GENSCRIPTS} alpha
ecoff_sparc.c: $(srcdir)/emulparams/coff_sparc.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sparccoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} coff_sparc
esparclynx.c: $(srcdir)/emulparams/sparclynx.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sparclynx.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sparclynx
eelf32ppc.c: $(srcdir)/emulparams/elf32ppc.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppc
eelf32lppc.c: $(srcdir)/emulparams/elf32lppc.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32lppc
eriscix.c: $(srcdir)/emulparams/riscix.sh \
d531 2
a532 2
	${GENSCRIPTS} riscix
em68kaout.c: $(srcdir)/emulparams/m68kaout.sh \
d534 1
a534 11
	${GENSCRIPTS} m68kaout
ei386linux.c: $(srcdir)/emulparams/i386linux.sh \
  $(srcdir)/emultempl/linux.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386linux
eelf32_sparc.c: $(srcdir)/emulparams/elf32_sparc.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32_sparc
eelf64_sparc.c: $(srcdir)/emulparams/elf64_sparc.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64_sparc

d537 4
a540 9
	${GENSCRIPTS} pc532machaout

ew65.c: $(srcdir)/emulparams/w65.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/w65.sc ${GEN_DEPENDS}
	${GENSCRIPTS} w65

ei386nw.c:	$(srcdir)/emulparams/i386nw.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/nw.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386nw
d543 5
a547 3
	${GENSCRIPTS} ppcnw

ei386nbsd.c:	$(srcdir)/emulparams/i386nbsd.sh \
d549 11
a559 2
	${GENSCRIPTS} i386nbsd
em68k4knbsd.c:	$(srcdir)/emulparams/m68k4knbsd.sh \
d561 5
a565 2
	${GENSCRIPTS} m68k4knbsd
em68knbsd.c:	$(srcdir)/emulparams/m68knbsd.sh \
d567 14
a580 2
	${GENSCRIPTS} m68knbsd
ens32knbsd.c:	$(srcdir)/emulparams/ns32knbsd.sh \
d582 2
a583 2
	${GENSCRIPTS} ns32knbsd
esparcnbsd.c:	$(srcdir)/emulparams/sparcnbsd.sh \
d585 4
a588 10
	${GENSCRIPTS} sparcnbsd
earmaoutl.c:	$(srcdir)/emulparams/armaoutl.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/armaout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armaoutl
earmaoutb.c:	$(srcdir)/emulparams/armaoutb.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/armaout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armaoutb
earmcoff.c:	$(srcdir)/emulparams/armcoff.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/armcoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armcoff
d591 1
a591 1
	${GENSCRIPTS} z8001
d594 1
a594 10
	${GENSCRIPTS} z8002
eaixppc.c: $(srcdir)/emulparams/aixppc.sh \
  $(srcdir)/emultempl/aix.em $(srcdir)/scripttempl/aix.sc ${GEN_DEPENDS}
	${GENSCRIPTS} aixppc
eaixrs6.c: $(srcdir)/emulparams/aixrs6.sh \
  $(srcdir)/emultempl/aix.em $(srcdir)/scripttempl/aix.sc ${GEN_DEPENDS}
	${GENSCRIPTS} aixrs6
edelta68.c: $(srcdir)/emulparams/delta68.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/delta68.sc ${GEN_DEPENDS}
	${GENSCRIPTS} delta68
d596 2
a597 2
$(LD_PROG): $(OFILES) $(BFDLIB) $(LIBIBERTY)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $(LD_PROG) $(OFILES) $(BFDLIB) $(LIBIBERTY) $(EXTRALIBS)
d647 2
d898 2
d1000 2
a1001 2
  ld.h ldmisc.h ldexp.h ldlang.h ldgram.h ldlex.h ldmain.h \
  ldfile.h
d1007 2
a1008 2
  $(INCDIR)/bfdlink.h ld.h ldexp.h ldlang.h ldwrite.h \
  ldmisc.h ldgram.h ldmain.h
d1017 4
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import of binutils, gas, ld & gprof from Cygnus 960609 tree
@
text
@d2 1
a2 2
# Copyright (C) 1989, 90, 91, 92, 93, 94, 95, 1996
# Free Software Foundation, Inc.
a63 3
LDFLAGS = @@LDFLAGS@@
HLDFLAGS = @@HLDFLAGS@@
RPATH_ENVVAR = @@RPATH_ENVVAR@@
d73 1
a73 1
# Search path to override the default search path for -lfoo libraries.
d141 1
a141 1
    if [ "@@host@@" = "@@target@@" ] ; then \
d157 1
a157 1
    if [ "@@host@@" = "@@target@@" ] ; then \
d189 2
a190 2
BFDDEP = ../bfd/libbfd.a
BFDLIB = @@BFDLIB@@
d193 14
a206 84
ALL_EMULATIONS = \
	ea29k.o \
	eaixppc.o \
	eaixrs6.o \
	ealpha.o \
	earmaoutb.o \
	earmaoutl.o \
	earmcoff.o \
	earmpe.o \
	ecoff_sparc.o \
	edelta68.o \
	eebmon29k.o \
	eelf32_sparc.o \
	eelf32b4300.o \
	eelf32bmip.o \
	eelf32l4300.o \
	eelf32lmip.o \
	eelf32lppc.o \
	eelf32ppc.o \
	eelf64_sparc.o \
	eelf_i386.o \
	egld960.o \
	egld960coff.o \
	ego32.o \
	eh8300.o \
	eh8300h.o \
	eh8500.o \
	eh8500b.o \
	eh8500c.o \
	eh8500m.o \
	eh8500s.o \
	ehp300bsd.o \
	ehp3hpux.o \
	ehppaelf.o \
	ei386aout.o \
	ei386bsd.o \
	ei386coff.o \
	ei386go32.o \
	ei386linux.o \
	ei386lynx.o \
	ei386mach.o \
	ei386moss.o \
	ei386msdos.o \
	ei386nbsd.o \
	ei386nw.o \
	ei386pe.o \
	elnk960.o \
	em68k4knbsd.o \
	em68kaout.o \
	em68kaux.o \
	em68kcoff.o \
	em68kelf.o \
	em68klinux.o \
	em68klynx.o \
	em68knbsd.o \
	em68kpsos.o \
	em88kbcs.o \
	emipsbig.o \
	emipsbsd.o \
	emipsidt.o \
	emipsidtl.o \
	emipslit.o \
	enews.o \
	ens32knbsd.o \
	epc532machaout.o \
	eppcmacos.o \
	eppcnw.o \
	eppcpe.o \
	eriscix.o \
	esa29200.o \
	esh.o \
	eshl.o \
	esparcaout.o \
	esparclynx.o \
	esparcnbsd.o \
	est2000.o \
	esun3.o \
	esun4.o \
	evanilla.o \
	evax.o \
	evsta.o \
	ew65.o \
	ez8001.o \
	ez8002.o
d210 1
a210 1
	mri.c ldcref.c
d221 1
a221 1
	ldfile.o ldcref.o ${EMULATION_OFILES}
d268 1
a268 1
GENSCRIPTS = $(SHELL) $(srcdir)/genscripts.sh ${srcdir} ${libdir} @@host@@ @@target@@ @@target_alias@@ ${EMUL} "@@NATIVE_LIB_DIRS@@"
a269 1
@@TDIRS@@
d271 6
a276 21
ea29k.c: $(srcdir)/emulparams/a29k.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/a29k.sc ${GEN_DEPENDS}
	${GENSCRIPTS} a29k "$(tdir_a29k)"
eaixppc.c: $(srcdir)/emulparams/aixppc.sh \
  $(srcdir)/emultempl/aix.em $(srcdir)/scripttempl/aix.sc ${GEN_DEPENDS}
	${GENSCRIPTS} aixppc "$(tdir_aixppc)"
eaixrs6.c: $(srcdir)/emulparams/aixrs6.sh \
  $(srcdir)/emultempl/aix.em $(srcdir)/scripttempl/aix.sc ${GEN_DEPENDS}
	${GENSCRIPTS} aixrs6 "$(tdir_aixrs6)"
ealpha.c: $(srcdir)/emulparams/alpha.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/alpha.sc ${GEN_DEPENDS}
	${GENSCRIPTS} alpha "$(tdir_alpha)"
earmaoutb.c:	$(srcdir)/emulparams/armaoutb.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/armaout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armaoutb "$(tdir_armaoutb)"
earmaoutl.c:	$(srcdir)/emulparams/armaoutl.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/armaout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armaoutl "$(tdir_armaoutl)"
earmcoff.c:	$(srcdir)/emulparams/armcoff.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/armcoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armcoff "$(tdir_armcoff)"
d279 4
a282 43
	${GENSCRIPTS} armpe "$(tdir_armpe)"
ecoff_sparc.c: $(srcdir)/emulparams/coff_sparc.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sparccoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} coff_sparc "$(tdir_coff_sparc)"
edelta68.c: $(srcdir)/emulparams/delta68.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/delta68.sc ${GEN_DEPENDS}
	${GENSCRIPTS} delta68 "$(tdir_delta68)"
eebmon29k.c: $(srcdir)/emulparams/ebmon29k.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/ebmon29k.sc ${GEN_DEPENDS}
	${GENSCRIPTS} ebmon29k "$(tdir_ebmon29k)"
eelf32_sparc.c: $(srcdir)/emulparams/elf32_sparc.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32_sparc "$(tdir_elf32_sparc)"
eelf32b4300.c: $(srcdir)/emulparams/elf32b4300.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32b4300 "$(tdir_elf32b4300)"
eelf32bmip.c: $(srcdir)/emulparams/elf32bmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfmips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32bmip "$(tdir_elf32bmip)"
eelf32l4300.c: $(srcdir)/emulparams/elf32l4300.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32l4300 "$(tdir_elf32l4300)"
eelf32lmip.c: $(srcdir)/emulparams/elf32lmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfmips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32lmip "$(tdir_elf32lmip)"
eelf32lppc.c: $(srcdir)/emulparams/elf32lppc.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfppc.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32lppc "$(tdir_elf32lppc)"
eelf32ppc.c: $(srcdir)/emulparams/elf32ppc.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfppc.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppc "$(tdir_elf32ppc)"
eelf64_sparc.c: $(srcdir)/emulparams/elf64_sparc.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64_sparc "$(tdir_elf64_sparc)"
eelf_i386.c: $(srcdir)/emulparams/elf_i386.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_i386 "$(tdir_elf_i386)"
egld960.c: $(srcdir)/emulparams/gld960.sh \
  $(srcdir)/emultempl/gld960.em $(srcdir)/scripttempl/i960.sc ${GEN_DEPENDS}
	${GENSCRIPTS} gld960 "$(tdir_gld960)"
egld960coff.c: $(srcdir)/emulparams/gld960coff.sh \
  $(srcdir)/emultempl/gld960c.em $(srcdir)/scripttempl/i960.sc ${GEN_DEPENDS}
	${GENSCRIPTS} gld960coff "$(tdir_gld960coff)"
d285 7
a291 22
	${GENSCRIPTS} go32 "$(tdir_go32)"
eh8300.c: $(srcdir)/emulparams/h8300.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300 "$(tdir_h8300)"
eh8300h.c: $(srcdir)/emulparams/h8300h.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300h.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300h "$(tdir_h8300h)"
eh8500.c: $(srcdir)/emulparams/h8500.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500 "$(tdir_h8500)"
eh8500b.c: $(srcdir)/emulparams/h8500b.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500b.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500b "$(tdir_h8500b)"
eh8500c.c: $(srcdir)/emulparams/h8500c.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500c.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500c "$(tdir_h8500c)"
eh8500m.c: $(srcdir)/emulparams/h8500m.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500m.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500m "$(tdir_h8500m)"
eh8500s.c: $(srcdir)/emulparams/h8500s.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8500s.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8500s "$(tdir_h8500s)"
d294 1
a294 1
	${GENSCRIPTS} hp300bsd "$(tdir_hp300bsd)"
d297 7
a303 1
	${GENSCRIPTS} hp3hpux "$(tdir_hp3hpux)"
d306 1
a306 1
	${GENSCRIPTS} hppaelf "$(tdir_hppaelf)"
d309 1
a309 7
	${GENSCRIPTS} i386aout "$(tdir_i386aout)"
ei386bsd.c: $(srcdir)/emulparams/i386bsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386bsd "$(tdir_i386bsd)"
ei386coff.c: $(srcdir)/emulparams/i386coff.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/i386coff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386coff "$(tdir_i386coff)"
d312 1
a312 7
	${GENSCRIPTS} i386go32 "$(tdir_i386go32)"
ei386linux.c: $(srcdir)/emulparams/i386linux.sh \
  $(srcdir)/emultempl/linux.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386linux "$(tdir_i386linux)"
ei386lynx.c: $(srcdir)/emulparams/i386lynx.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/i386lynx.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386lynx "$(tdir_i386lynx)"
d315 1
a315 1
	${GENSCRIPTS} i386mach "$(tdir_i386mach)"
d318 1
a318 1
	${GENSCRIPTS} i386moss "$(tdir_i386moss)"
d321 46
a366 10
	${GENSCRIPTS} i386msdos "$(tdir_i386msdos)"
ei386nbsd.c:	$(srcdir)/emulparams/i386nbsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386nbsd "$(tdir_i386nbsd)"
ei386nw.c:	$(srcdir)/emulparams/i386nw.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/nw.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386nw "$(tdir_i386nw)"
ei386pe.c: $(srcdir)/emulparams/i386pe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/pe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386pe "$(tdir_i386pe)"
d369 7
a375 10
	${GENSCRIPTS} lnk960 "$(tdir_lnk960)"
em68k4knbsd.c:	$(srcdir)/emulparams/m68k4knbsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68k4knbsd "$(tdir_m68k4knbsd)"
em68kaout.c: $(srcdir)/emulparams/m68kaout.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68kaout "$(tdir_m68kaout)"
em68kaux.c: $(srcdir)/emulparams/m68kaux.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/m68kaux.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68kaux "$(tdir_m68kaux)"
d378 1
a378 1
	${GENSCRIPTS} m68kcoff "$(tdir_m68kcoff)"
d381 1
a381 4
	${GENSCRIPTS} m68kelf "$(tdir_m68kelf)"
em68klinux.c: $(srcdir)/emulparams/m68klinux.sh \
  $(srcdir)/emultempl/linux.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68klinux "$(tdir_m68klinux)"
d384 11
a394 2
	${GENSCRIPTS} m68klynx "$(tdir_m68klynx)"
em68knbsd.c:	$(srcdir)/emulparams/m68knbsd.sh \
d396 1
a396 7
	${GENSCRIPTS} m68knbsd "$(tdir_m68knbsd)"
em68kpsos.c:	$(srcdir)/emulparams/m68kpsos.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/psos.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68kpsos "$(tdir_m68kpsos)"
em88kbcs.c: $(srcdir)/emulparams/m88kbcs.sh \
  $(srcdir)/emultempl/m88kbcs.em $(srcdir)/scripttempl/m88kbcs.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m88kbcs "$(tdir_m88kbcs)"
d405 1
a405 1
	${GENSCRIPTS} mipsidt "$(tdir_mipsidt)"
d408 32
a439 5
	${GENSCRIPTS} mipsidtl "$(tdir_mipsidtl)"
emipslit.c:  $(srcdir)/emulparams/mipslit.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/mips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mipslit "$(tdir_mipslit)"
enews.c: $(srcdir)/emulparams/news.sh \
d441 2
a442 2
	${GENSCRIPTS} news "$(tdir_news)"
ens32knbsd.c:	$(srcdir)/emulparams/ns32knbsd.sh \
d444 11
a454 1
	${GENSCRIPTS} ns32knbsd "$(tdir_ns32knbsd)"
d457 9
a465 4
	${GENSCRIPTS} pc532machaout "$(tdir_pc532machaout)"
eppcmacos.c:	$(srcdir)/emulparams/ppcmacos.sh \
  $(srcdir)/emultempl/aix.em $(srcdir)/scripttempl/aix.sc ${GEN_DEPENDS}
	${GENSCRIPTS} ppcmacos "$(tdir_ppcmacos)"
d468 3
a470 5
	${GENSCRIPTS} ppcnw "$(tdir_ppcnw)"
eppcpe.c: $(srcdir)/emulparams/ppcpe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/ppcpe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} ppcpe "$(tdir_ppcpe)"
eriscix.c: $(srcdir)/emulparams/riscix.sh \
d472 2
a473 11
	${GENSCRIPTS} riscix "$(tdir_riscix)"
esa29200.c: $(srcdir)/emulparams/sa29200.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sa29200.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sa29200 "$(tdir_sa29200)"
esh.c: $(srcdir)/emulparams/sh.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sh.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sh "$(tdir_sh)"
eshl.c: $(srcdir)/emulparams/shl.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sh.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shl "$(tdir_shl)"
esparcaout.c: $(srcdir)/emulparams/sparcaout.sh \
d475 2
a476 5
	${GENSCRIPTS} sparcaout "$(tdir_sparcaout)"
esparclynx.c: $(srcdir)/emulparams/sparclynx.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/sparclynx.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sparclynx "$(tdir_sparclynx)"
esparcnbsd.c:	$(srcdir)/emulparams/sparcnbsd.sh \
d478 2
a479 14
	${GENSCRIPTS} sparcnbsd "$(tdir_sparcnbsd)"
est2000.c: $(srcdir)/emulparams/st2000.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/st2000.sc ${GEN_DEPENDS}
	${GENSCRIPTS} st2000 "$(tdir_st2000)"
esun3.c: $(srcdir)/emulparams/sun3.sh \
  $(srcdir)/emultempl/sunos.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sun3 "$(tdir_sun3)"
esun4.c: $(srcdir)/emulparams/sun4.sh \
  $(srcdir)/emultempl/sunos.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sun4 "$(tdir_sun4)"
evanilla.c: $(srcdir)/emulparams/vanilla.sh \
  $(srcdir)/emultempl/vanilla.em $(srcdir)/scripttempl/vanilla.sc ${GEN_DEPENDS}
	${GENSCRIPTS} vanilla "$(tdir_vanilla)"
evax.c: $(srcdir)/emulparams/vax.sh \
d481 2
a482 2
	${GENSCRIPTS} vax "$(tdir_vax)"
evsta.c: $(srcdir)/emulparams/vsta.sh \
d484 10
a493 4
	${GENSCRIPTS} vsta "$(tdir_vsta)"
ew65.c: $(srcdir)/emulparams/w65.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/w65.sc ${GEN_DEPENDS}
	${GENSCRIPTS} w65 "$(tdir_w65)"
d496 1
a496 1
	${GENSCRIPTS} z8001 "$(tdir_z8001)"
d499 10
a508 1
	${GENSCRIPTS} z8002 "$(tdir_z8002)"
d510 2
a511 2
$(LD_PROG): $(OFILES) $(BFDDEP) $(LIBIBERTY)
	$(CC) $(HLDFLAGS) $(CFLAGS) $(LDFLAGS) -o $(LD_PROG) $(OFILES) $(BFDLIB) $(LIBIBERTY) $(EXTRALIBS)
a560 2
	$(RPATH_ENVVAR)=$$r/../bfd:$$r/../opcodes:$$$(RPATH_ENVVAR); \
	export $(RPATH_ENVVAR); \
a809 2
	test -d $(tooldir) || mkdir $(tooldir)
	test -d $(tooldir)/bin || mkdir $(tooldir)/bin
d910 2
a911 2
  $(INCDIR)/libiberty.h $(INCDIR)/demangle.h ld.h ldmisc.h \
  ldexp.h ldlang.h ldgram.h ldlex.h ldmain.h ldfile.h
d917 2
a918 2
  $(INCDIR)/bfdlink.h $(INCDIR)/libiberty.h ld.h ldexp.h \
  ldlang.h ldwrite.h ldmisc.h ldgram.h ldmain.h
a926 4
ldcref.o: ldcref.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  $(INCDIR)/obstack.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/libiberty.h ld.h ldmain.h \
  ldmisc.h
@


1.1.1.3
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@d31 2
a32 2
bindir = @@bindir@@
libdir = @@libdir@@
d34 2
a35 2
datadir = @@datadir@@
mandir = @@mandir@@
d45 3
a47 3
infodir = @@infodir@@
includedir = @@includedir@@

d56 2
a57 2
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@
a66 1
HLDENV = @@HLDENV@@
a211 2
	eelf32ebmip.o \
	eelf32elmip.o \
a215 1
	eelf64alpha.o \
a222 1
	eh8300s.o \
d261 1
a261 1
	epc532macha.o \
a267 2
	eshelf.o \
	eshlelf.o \
d284 1
a284 1
	mri.c ldcref.c fnmatch.c
d288 1
a288 1
	ldwrite.h mri.h fnmatch.h
d295 1
a295 1
	ldfile.o ldcref.o fnmatch.o ${EMULATION_OFILES}
a387 6
eelf32ebmip.c: $(srcdir)/emulparams/elf32ebmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfmips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ebmip "$(tdir_elf32ebmip)"
eelf32elmip.c: $(srcdir)/emulparams/elf32elmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfmips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32elmip "$(tdir_elf32elmip)"
a399 3
eelf64alpha.c: $(srcdir)/emulparams/elf64alpha.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64alpha "$(tdir_elf64alpha)"
a420 3
eh8300s.c: $(srcdir)/emulparams/h8300s.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300s.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300s "$(tdir_h8300s)"
d535 1
a535 1
epc532macha.c: $(srcdir)/emulparams/pc532macha.sh \
d537 1
a537 1
	${GENSCRIPTS} pc532macha "$(tdir_pc532macha)"
a555 6
eshelf.c: $(srcdir)/emulparams/shelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf "$(tdir_shelf)"
eshlelf.c: $(srcdir)/emulparams/shlelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf "$(tdir_shlelf)"
d597 1
a597 1
	$(HLDENV) $(CC) $(HLDFLAGS) $(CFLAGS) $(LDFLAGS) -o $(LD_PROG) $(OFILES) $(BFDLIB) $(LIBIBERTY) $(EXTRALIBS)
d859 1
a859 1
	-rm -f cdtest-ur cdtest-ur.out cdtest-ur.tmp crtbegin.o crtend.o
d992 1
a992 1
  ldctor.h ldfile.h fnmatch.h
d1011 3
a1013 3
  $(INCDIR)/libiberty.h $(INCDIR)/getopt.h $(INCDIR)/bfdlink.h \
  ld.h ldmain.h ldmisc.h ldexp.h ldlang.h ldgram.h ldlex.h \
  ldfile.h ldver.h ldemul.h
d1020 1
a1020 2
  ldmisc.h ldexp.h ldlang.h
fnmatch.o: fnmatch.c
@


1.1.1.4
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@d219 1
a288 3
ALL_64_EMULATIONS = \
	eelf64alpha.o

d291 1
a291 1
	mri.c ldcref.c
d295 1
a295 1
	ldwrite.h mri.h
d302 1
a302 1
	ldfile.o ldcref.o ${EMULATION_OFILES}
d339 1
a339 1
	$(LEX) $(srcdir)/ldlex.l
d882 1
a882 1
	-rm -f $(STAGESTUFF) ld.?? ld.??? ldlex.[qp]
d891 1
a891 1
	-rm -f config.h stamp-h config.log
d1017 1
a1017 1
  ldctor.h ldfile.h $(INCDIR)/fnmatch.h
d1046 1
@


1.1.1.5
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@d2 1
a2 1
# Copyright (C) 1989, 90, 91, 92, 93, 94, 95, 96, 1997
d72 1
a72 1
BISON = bison -y
d190 1
a190 1
ALL_CFLAGS = -D_GNU_SOURCE $(INCLUDES) @@HDEFINES@@ $(CFLAGS)
a262 1
	emipslnews.o \
a275 1
	esparclinux.o \
d323 1
a323 1
	$(CC) -c -DDEFAULT_EMULATION='"$(EMUL)"' -DSCRIPTDIR='"$(scriptdir)"' -DTARGET='"@@target@@"' $(ALL_CFLAGS) $<
a381 3
ed10velf.c: $(srcdir)/emulparams/d10velf.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfd10v.sc ${GEN_DEPENDS}
	${GENSCRIPTS} d10velf "$(tdir_d10v)"
a387 3
em32relf.c: $(srcdir)/emulparams/m32relf.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m32relf "$(tdir_m32r)"
d533 1
a533 1
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/m88kbcs.sc ${GEN_DEPENDS}
a549 9
emipslnews.c:  $(srcdir)/emulparams/mipslnews.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/mips.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mipslnews
emn10300.c: $(srcdir)/emulparams/mn10300.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mn10300 "$(tdir_mn10300)"
emn10200.c: $(srcdir)/emulparams/mn10200.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mn10200 "$(tdir_mn10200)"
a588 3
esparclinux.c: $(srcdir)/emulparams/sparclinux.sh \
  $(srcdir)/emultempl/linux.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} sparclinux "$(tdir_sparclinux)"
d754 1
a754 2
	TEXINPUTS=$(BFDDIR)/doc:$$TEXINPUTS MAKEINFO='$(MAKEINFO) -I$(BFDDIR)/doc -I$(srcdir)' \
	$(TEXI2DVI) $(srcdir)/ld.texinfo
d761 1
a761 1
	$(MAKEINFO) -I$(BFDDIR)/doc -I$(srcdir) -o ld.info $(srcdir)/ld.texinfo
d890 1
a890 1
	-rm -f $(LD_PROG)
d899 1
a899 1
	-rm -f $(LDDISTSTUFF) *.info* configdoc.texi
d1000 3
a1002 2
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  ld.h ldexp.h ldlang.h ldmisc.h ldgram.h ldmain.h ldctor.h
d1004 3
a1006 2
  sysdep.h config.h $(INCDIR)/fopen-same.h ld.h ldemul.h \
  ldmisc.h ldexp.h ldlang.h ldfile.h ldmain.h ldemul-list.h
d1008 3
a1010 2
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  ld.h ldmain.h ldmisc.h ldexp.h ldgram.h ldlang.h
d1012 3
a1014 3
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  ld.h ldmisc.h ldexp.h ldlang.h ldfile.h ldmain.h ldgram.h \
  ldlex.h ldemul.h
d1016 2
a1017 2
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/libiberty.h \
  $(INCDIR)/obstack.h $(INCDIR)/bfdlink.h ld.h ldmain.h \
d1021 4
a1024 4
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/libiberty.h \
  $(INCDIR)/progress.h $(INCDIR)/bfdlink.h ld.h ldmain.h \
  ldmisc.h ldwrite.h ldgram.h ldexp.h ldlang.h ldemul.h \
  ldlex.h ldfile.h ldctor.h
d1026 3
a1028 3
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/libiberty.h \
  $(INCDIR)/demangle.h ld.h ldmisc.h ldexp.h ldlang.h \
  ldgram.h ldlex.h ldmain.h ldfile.h
d1030 2
a1031 2
  sysdep.h config.h $(INCDIR)/fopen-same.h ld.h ldver.h \
  ldemul.h ldmain.h
d1033 3
a1035 3
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/libiberty.h ld.h ldexp.h ldlang.h ldwrite.h \
  ldmisc.h ldgram.h ldmain.h
d1037 7
a1043 7
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/libiberty.h \
  $(INCDIR)/getopt.h $(INCDIR)/bfdlink.h ld.h ldmain.h \
  ldmisc.h ldexp.h ldlang.h ldgram.h ldlex.h ldfile.h \
  ldver.h ldemul.h
mri.o: mri.c ../bfd/bfd.h $(INCDIR)/ansidecl.h sysdep.h \
  config.h $(INCDIR)/fopen-same.h ld.h ldexp.h ldlang.h \
  ldmisc.h mri.h ldgram.h $(INCDIR)/libiberty.h
d1045 3
a1047 3
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/libiberty.h ld.h ldmain.h ldmisc.h ldexp.h \
  ldlang.h
d1049 6
a1054 6
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  ld.h ldexp.h ldver.h ldlang.h ldemul.h ldfile.h ldmisc.h \
  ldmain.h mri.h ldlex.h
ldlex.o: ldlex.c ../bfd/bfd.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  ld.h ldgram.h ldmisc.h ldexp.h ldlang.h ldfile.h ldlex.h \
  ldmain.h
@


1.1.1.6
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d1 11
a11 7
# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

d13 7
a19 3
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.
d22 3
a24 1
SHELL = @@SHELL@@
d26 1
a26 3
srcdir = @@srcdir@@
top_srcdir = @@top_srcdir@@
VPATH = @@srcdir@@
d28 2
a30 1

d32 2
a33 2
sbindir = @@sbindir@@
libexecdir = @@libexecdir@@
d35 10
a44 4
sysconfdir = @@sysconfdir@@
sharedstatedir = @@sharedstatedir@@
localstatedir = @@localstatedir@@
libdir = @@libdir@@
a45 1
mandir = @@mandir@@
a46 1
oldincludedir = /usr/include
d48 4
a51 7
DESTDIR =

pkgdatadir = $(datadir)/@@PACKAGE@@
pkglibdir = $(libdir)/@@PACKAGE@@
pkgincludedir = $(includedir)/@@PACKAGE@@

top_builddir = .
d53 1
a53 4
ACLOCAL = @@ACLOCAL@@
AUTOCONF = @@AUTOCONF@@
AUTOMAKE = @@AUTOMAKE@@
AUTOHEADER = @@AUTOHEADER@@
d55 2
a56 2
INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@ $(AM_INSTALL_PROGRAM_FLAGS)
d58 2
a59 2
INSTALL_SCRIPT = @@INSTALL_SCRIPT@@
transform = @@program_transform_name@@
d61 2
a62 15
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @@build_alias@@
build_triplet = @@build@@
host_alias = @@host_alias@@
host_triplet = @@host@@
target_alias = @@target_alias@@
target_triplet = @@target@@
AS = @@AS@@
CATALOGS = @@CATALOGS@@
CATOBJEXT = @@CATOBJEXT@@
d64 10
a73 49
CC_FOR_BUILD = @@CC_FOR_BUILD@@
DATADIRNAME = @@DATADIRNAME@@
DLLTOOL = @@DLLTOOL@@
EMULATION_LIBPATH = @@EMULATION_LIBPATH@@
EXEEXT = @@EXEEXT@@
EXEEXT_FOR_BUILD = @@EXEEXT_FOR_BUILD@@
GMOFILES = @@GMOFILES@@
GMSGFMT = @@GMSGFMT@@
GT_NO = @@GT_NO@@
GT_YES = @@GT_YES@@
HDEFINES = @@HDEFINES@@
INCLUDE_LOCALE_H = @@INCLUDE_LOCALE_H@@
INSTOBJEXT = @@INSTOBJEXT@@
INTLDEPS = @@INTLDEPS@@
INTLOBJS = @@INTLOBJS@@
LIBTOOL = @@LIBTOOL@@
LN_S = @@LN_S@@
MAINT = @@MAINT@@
MAKEINFO = @@MAKEINFO@@
MKINSTALLDIRS = @@MKINSTALLDIRS@@
MSGFMT = @@MSGFMT@@
NATIVE_LIB_DIRS = @@NATIVE_LIB_DIRS@@
OBJDUMP = @@OBJDUMP@@
PACKAGE = @@PACKAGE@@
POFILES = @@POFILES@@
POSUB = @@POSUB@@
RANLIB = @@RANLIB@@
STRINGIFY = @@STRINGIFY@@
USE_INCLUDED_LIBINTL = @@USE_INCLUDED_LIBINTL@@
USE_NLS = @@USE_NLS@@
VERSION = @@VERSION@@
l = @@l@@

INTLLIBS = @@INTLLIBS@@

AUTOMAKE_OPTIONS = cygnus dejagnu

SUBDIRS = po

tooldir = $(exec_prefix)/$(target_alias)

YACC = `if [ -f ../bison/bison ]; then echo ../bison/bison -y -L$(srcdir)/../bison/; else echo @@YACC@@; fi`
YFLAGS = -d
LEX = `if [ -f ../flex/flex ]; then echo ../flex/flex; else echo @@LEX@@; fi`

# We put the scripts in the directory $(scriptdir)/ldscripts.
# We can't put the scripts in $(datadir) because the SEARCH_DIR
# directives need to be different for native and cross linkers.
scriptdir = $(tooldir)/lib
a76 1
EMUL_EXTRA_OFILES = @@EMUL_EXTRA_OFILES@@
d84 1
a84 1
LIB_PATH = 
d88 3
a90 2
INCDIR = $(BASEDIR)/include
MKDEP = gcc -MM
d95 16
d116 11
a131 1

d136 1
a136 2

RUNTESTFLAGS = 
d149 1
a149 1
      echo gcc | sed '$(transform)'; \
a152 1

d165 1
a165 1
      echo gcc | sed '$(transform)'; \
d169 9
d179 6
a184 4
noinst_PROGRAMS = ld-new
info_TEXINFOS = ld.texinfo
noinst_TEXINFOS = ldint.texinfo
man_MANS = ld.1
d186 3
a188 1
INCLUDES = -D_GNU_SOURCE -I. -I$(srcdir) -I../bfd -I$(BFDDIR) -I$(INCDIR) -I$(top_srcdir)/../intl -I../intl $(HDEFINES) $(CFLAGS) -DLOCALEDIR="\"$(prefix)/share/locale\""
d190 6
a195 1
BFDLIB = ../bfd/libbfd.la
a202 5
	earcelf.o \
	earmelf.o \
	earmelf_oabi.o \
	earmelf_linux.o \
	earmelf_linux26.o \
a205 1
	earmnbsd.o \
a206 9
	earm_epoc_pe.o \
	eavr1200.o \
	eavr23xx.o \
	eavr44x4.o \
	eavr4433.o \
	eavr85xx.o \
	eavrmega603.o \
	eavrmega103.o \
	eavrmega161.o \
a207 4
	ed10velf.o \
	ed30velf.o \
	ed30v_e.o \
	ed30v_o.o \
a210 1
	eelf32_i960.o \
a214 2
	eelf32bmipn32.o \
	eelf32i370.o \
d219 1
a219 1
	eelf32ppclinux.o \
a220 1
	eelf_i386_be.o \
d223 1
a223 2
	eelf32fr30.o \
	eelf32mcore.o \
d234 1
a235 1
	ei386beos.o \
a246 1
	ei386pe_posix.o \
a257 1
	emcorepe.o \
a263 1
	emipspe.o \
a264 2
	epjelf.o \
	epjlelf.o \
a275 1
	eshpe.o \
a282 3
	etic30aout.o \
	etic30coff.o \
	etic80coff.o \
a289 1

d291 1
a291 9
	eelf64_sparc.o \
	eelf64alpha.o \
	eelf64bmip.o


ALL_EMUL_EXTRA_OFILES = \
	pe-dll.o \
	deffilep.o

d295 1
a295 1
	mri.c ldcref.c pe-dll.c
d297 1
a297 2

HFILES = ld.h ldctor.h ldemul.h ldexp.h ldfile.h \
d299 1
a299 2
	ldwrite.h mri.h deffile.h pe-dll.h

d301 2
a302 2
GENERATED_CFILES = ldgram.c ldlex.c deffilep.c
GENERATED_HFILES = ldgram.h ldemul-list.h deffilep.h
d306 1
a306 1
	ldfile.o ldcref.o ${EMULATION_OFILES} ${EMUL_EXTRA_OFILES}
d308 1
d312 2
a313 138
# At the moment this is just a list of those emulation template files
# that contain internationalised strings.
EMULATION_FILES = emultempl/pe.em emultempl/armcoff.em

POTFILES = $(CFILES) $(HFILES) $(EMULATION_FILES)

# These all start with e so 'make clean' can find them.

GENSCRIPTS = $(SHELL) $(srcdir)/genscripts.sh ${srcdir} ${libdir} @@host@@ @@target@@ @@target_alias@@ "@@EMULATION_LIBPATH@@" "@@NATIVE_LIB_DIRS@@"
GEN_DEPENDS = $(srcdir)/genscripts.sh stringify.sed

ld_new_SOURCES = ldgram.y ldlex.l lexsup.c ldlang.c mri.c ldctor.c ldmain.c \
	ldwrite.c ldexp.c ldemul.c ldver.c ldmisc.c ldfile.c ldcref.c

ld_new_DEPENDENCIES = $(EMULATION_OFILES) $(EMUL_EXTRA_OFILES) $(BFDLIB) $(LIBIBERTY) $(INTLDEPS)
ld_new_LDADD = $(EMULATION_OFILES) $(EMUL_EXTRA_OFILES) $(BFDLIB) $(LIBIBERTY) $(INTLLIBS)

# This is the real libbfd.a created by libtool.
TESTBFDLIB = @@TESTBFDLIB@@

MAINTAINERCLEANFILES = ldver.texi

MOSTLYCLEANFILES = $(STAGESTUFF) ld1$(EXEEXT) ld2$(EXEEXT) ld3$(EXEEXT) \
	ldemul-list.h crtbegin.o crtend.o ld.log ld.sum

CLEANFILES = dep.sed DEP DEP1 DEP2

# Stuff that should be included in a distribution.  The diststuff
# target is run by the taz target in ../Makefile.in.
LDDISTSTUFF = ldgram.c ldgram.h ldlex.c

DISTCLEANFILES = tdirs site.exp site.bak
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = 
noinst_PROGRAMS =  ld-new$(EXEEXT)
PROGRAMS =  $(noinst_PROGRAMS)


DEFS = @@DEFS@@ -I. -I$(srcdir) -I.
CPPFLAGS = @@CPPFLAGS@@
LDFLAGS = @@LDFLAGS@@
LIBS = @@LIBS@@
ld_new_OBJECTS =  ldgram.o ldlex.o lexsup.o ldlang.o mri.o ldctor.o \
ldmain.o ldwrite.o ldexp.o ldemul.o ldver.o ldmisc.o ldfile.o ldcref.o
ld_new_LDFLAGS = 
LEX_OUTPUT_ROOT = @@LEX_OUTPUT_ROOT@@
LEXLIB = @@LEXLIB@@
CFLAGS = @@CFLAGS@@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@@
TEXI2DVI = `if test -f $(top_srcdir)/../texinfo/util/texi2dvi; then echo $(top_srcdir)/../texinfo/util/texi2dvi; else echo texi2dvi; fi`
TEXINFO_TEX = $(top_srcdir)/../texinfo/texinfo.tex
INFO_DEPS = ld.info
DVIS = ld.dvi
TEXINFOS = ld.texinfo
man1dir = $(mandir)/man1
MANS = $(man_MANS)

NROFF = nroff
DIST_COMMON =  README ./stamp-h.in ChangeLog Makefile.am Makefile.in \
NEWS TODO acinclude.m4 aclocal.m4 config.in configure configure.in \
ldgram.c ldlex.c


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
SOURCES = $(ld_new_SOURCES)
OBJECTS = $(ld_new_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .dvi .info .l .lo .o .ps .s .texi .texinfo .txi .y
$(srcdir)/Makefile.in: @@MAINTAINER_MODE_TRUE@@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --cygnus Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$@@ CONFIG_HEADERS= $(SHELL) ./config.status

$(ACLOCAL_M4): @@MAINTAINER_MODE_TRUE@@ configure.in  acinclude.m4
	cd $(srcdir) && $(ACLOCAL)
$(srcdir)/configure: @@MAINTAINER_MODE_TRUE@@$(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

config.h: stamp-h
	@@if test ! -f $@@; then \
		rm -f stamp-h; \
		$(MAKE) stamp-h; \
	else :; fi
stamp-h: $(srcdir)/config.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES= CONFIG_HEADERS=config.h:config.in \
	     $(SHELL) ./config.status
	@@echo timestamp > stamp-h 2> /dev/null
$(srcdir)/config.in: @@MAINTAINER_MODE_TRUE@@$(srcdir)/stamp-h.in
	@@if test ! -f $@@; then \
		rm -f $(srcdir)/stamp-h.in; \
		$(MAKE) $(srcdir)/stamp-h.in; \
	else :; fi
$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	@@echo timestamp > $(srcdir)/stamp-h.in 2> /dev/null

mostlyclean-hdr:

clean-hdr:

distclean-hdr:
	-rm -f config.h

maintainer-clean-hdr:

mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
d315 4
a318 1
clean-compile:
d320 2
a321 34
distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

ld-new$(EXEEXT): $(ld_new_OBJECTS) $(ld_new_DEPENDENCIES)
	@@rm -f ld-new$(EXEEXT)
	$(LINK) $(ld_new_LDFLAGS) $(ld_new_OBJECTS) $(ld_new_LDADD) $(LIBS)
.l.c:
	$(LEX) $(AM_LFLAGS) $(LFLAGS) $< && mv $(LEX_OUTPUT_ROOT).c $@@
.y.c:
	$(YACC) $(AM_YFLAGS) $(YFLAGS) $< && mv y.tab.c $*.c
	if test -f y.tab.h; then \
	if cmp -s y.tab.h $*.h; then rm -f y.tab.h; else mv y.tab.h $*.h; fi; \
	else :; fi
a323 428

ld.info: ld.texinfo
ld.dvi: ld.texinfo


DVIPS = dvips

.texi.info:
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) $<

.texi.dvi:
	TEXINPUTS=$(top_srcdir)/../texinfo/texinfo.tex:$$TEXINPUTS \
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2DVI) $<

.texi:
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) $<

.texinfo.info:
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) $<

.texinfo:
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) $<

.texinfo.dvi:
	TEXINPUTS=$(top_srcdir)/../texinfo/texinfo.tex:$$TEXINPUTS \
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2DVI) $<

.txi.info:
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) $<

.txi.dvi:
	TEXINPUTS=$(top_srcdir)/../texinfo/texinfo.tex:$$TEXINPUTS \
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2DVI) $<

.txi:
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) $<
.dvi.ps:
	$(DVIPS) $< -o $@@

install-info-am: $(INFO_DEPS)
	@@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(infodir)
	@@list='$(INFO_DEPS)'; \
	for file in $$list; do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  for ifile in `cd $$d && echo $$file $$file-[0-9] $$file-[0-9][0-9]`; do \
	    if test -f $$d/$$ifile; then \
	      echo " $(INSTALL_DATA) $$d/$$ifile $(DESTDIR)$(infodir)/$$ifile"; \
	      $(INSTALL_DATA) $$d/$$ifile $(DESTDIR)$(infodir)/$$ifile; \
	    else : ; fi; \
	  done; \
	done
	@@$(POST_INSTALL)
	@@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/dev/null 2>&1; then \
	  list='$(INFO_DEPS)'; \
	  for file in $$list; do \
	    echo " install-info --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/$$file";\
	    install-info --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/$$file || :;\
	  done; \
	else : ; fi

uninstall-info:
	$(PRE_UNINSTALL)
	@@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/dev/null 2>&1; then \
	  ii=yes; \
	else ii=; fi; \
	list='$(INFO_DEPS)'; \
	for file in $$list; do \
	  test -z "$ii" \
	    || install-info --info-dir=$(DESTDIR)$(infodir) --remove $$file; \
	done
	@@$(NORMAL_UNINSTALL)
	list='$(INFO_DEPS)'; \
	for file in $$list; do \
	  (cd $(DESTDIR)$(infodir) && rm -f $$file $$file-[0-9] $$file-[0-9][0-9]); \
	done

dist-info: $(INFO_DEPS)
	list='$(INFO_DEPS)'; \
	for base in $$list; do \
	  if test -f $$base; then d=.; else d=$(srcdir); fi; \
	  for file in `cd $$d && eval echo $$base*`; do \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file; \
	  done; \
	done

mostlyclean-aminfo:
	-rm -f ld.aux ld.cp ld.cps ld.dvi ld.fn ld.fns ld.ky ld.kys ld.ps \
	  ld.log ld.pg ld.toc ld.tp ld.tps ld.vr ld.vrs ld.op ld.tr \
	  ld.cv ld.cn

clean-aminfo:

distclean-aminfo:

maintainer-clean-aminfo:
	for i in $(INFO_DEPS); do \
	  rm -f $$i; \
	  if test "`echo $$i-[0-9]*`" != "$$i-[0-9]*"; then \
	    rm -f $$i-[0-9]*; \
	  fi; \
	done
clean-info: mostlyclean-aminfo

install-man1:
	$(mkinstalldirs) $(DESTDIR)$(man1dir)
	@@list='$(man1_MANS)'; \
	l2='$(man_MANS)'; for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) $$file $(DESTDIR)$(man1dir)/$$inst"; \
	  $(INSTALL_DATA) $$file $(DESTDIR)$(man1dir)/$$inst; \
	done

uninstall-man1:
	@@list='$(man1_MANS)'; \
	l2='$(man_MANS)'; for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f $(DESTDIR)$(man1dir)/$$inst"; \
	  rm -f $(DESTDIR)$(man1dir)/$$inst; \
	done
install-man: $(MANS)
	@@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-man1
uninstall-man:
	@@$(NORMAL_UNINSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-man1

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@@SET_MAKE@@

all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive install-info-recursive \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" = "." && dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.in $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)config.in$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags config.in $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	-rm -rf $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) zxf $(distdir).tar.gz
	mkdir $(distdir)/=build
	mkdir $(distdir)/=inst
	dc_install_base=`cd $(distdir)/=inst && pwd`; \
	cd $(distdir)/=build \
	  && ../configure --srcdir=.. --prefix=$$dc_install_base \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) dist
	-rm -rf $(distdir)
	@@banner="$(distdir).tar.gz is ready for distribution"; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"
dist: distdir
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
dist-all: distdir
	-chmod -R a+r $(distdir)
	GZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)
distdir: $(DISTFILES)
	-rm -rf $(distdir)
	mkdir $(distdir)
	-chmod 777 $(distdir)
	@@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-info

DEJATOOL = $(PACKAGE)

RUNTESTDEFAULTFLAGS = --tool $(DEJATOOL) --srcdir $$srcdir
site.exp: Makefile
	@@echo 'Making a new site.exp file...'
	@@test ! -f site.bak || rm -f site.bak
	@@echo '## these variables are automatically generated by make ##' > $@@-t
	@@echo '# Do not edit here.  If you wish to override these values' >> $@@-t
	@@echo '# edit the last section' >> $@@-t
	@@echo 'set tool $(DEJATOOL)' >> $@@-t
	@@echo 'set srcdir $(srcdir)' >> $@@-t
	@@echo 'set objdir' `pwd` >> $@@-t
	@@echo 'set host_alias $(host_alias)' >> $@@-t
	@@echo 'set host_triplet $(host_triplet)' >> $@@-t
	@@echo 'set target_alias $(target_alias)' >> $@@-t
	@@echo 'set target_triplet $(target_triplet)' >> $@@-t
	@@echo 'set build_alias $(build_alias)' >> $@@-t
	@@echo 'set build_triplet $(build_triplet)' >> $@@-t
	@@echo '## All variables above are generated by configure. Do Not Edit ##' >> $@@-t
	@@test ! -f site.exp || sed '1,/^## All variables above are.*##/ d' site.exp >> $@@-t
	@@test ! -f site.exp || mv site.exp site.bak
	@@mv $@@-t site.exp
info-am: $(INFO_DEPS)
info: info-recursive
dvi-am: $(DVIS)
dvi: dvi-recursive
check-am:
	$(MAKE) $(AM_MAKEFLAGS) check-DEJAGNU
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
install-info-am: 
install-info: install-info-recursive
all-recursive-am: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

install-exec-am: install-exec-local
install-exec: install-exec-recursive

install-data-am: install-man install-data-local
install-data: install-data-recursive

install-am: all-am
	@@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am: uninstall-man
uninstall: uninstall-recursive
all-am: Makefile $(PROGRAMS) $(MANS) config.h
all-redirect: all-recursive-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs)  $(DESTDIR)$(mandir)/man1


mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	-test -z "ldlexlldgramhldgramc$(MAINTAINERCLEANFILES)" || rm -f ldlexl ldgramh ldgramc $(MAINTAINERCLEANFILES)
mostlyclean-am:  mostlyclean-hdr mostlyclean-noinstPROGRAMS \
		mostlyclean-compile mostlyclean-libtool \
		mostlyclean-aminfo mostlyclean-tags mostlyclean-generic \
		mostlyclean-local

mostlyclean: mostlyclean-recursive

clean-am:  clean-hdr clean-noinstPROGRAMS clean-compile clean-libtool \
		clean-aminfo clean-tags clean-generic mostlyclean-am

clean: clean-recursive

distclean-am:  distclean-hdr distclean-noinstPROGRAMS distclean-compile \
		distclean-libtool distclean-aminfo distclean-tags \
		distclean-generic clean-am distclean-local
	-rm -f libtool

distclean: distclean-recursive
	-rm -f config.status

maintainer-clean-am:  maintainer-clean-hdr \
		maintainer-clean-noinstPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-aminfo maintainer-clean-tags \
		maintainer-clean-generic distclean-am
	@@echo "This command is intended for maintainers to use;"
	@@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive
	-rm -f config.status

.PHONY: mostlyclean-hdr distclean-hdr clean-hdr maintainer-clean-hdr \
mostlyclean-noinstPROGRAMS distclean-noinstPROGRAMS \
clean-noinstPROGRAMS maintainer-clean-noinstPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool install-info-am uninstall-info \
mostlyclean-aminfo distclean-aminfo clean-aminfo \
maintainer-clean-aminfo install-man1 uninstall-man1 install-man \
uninstall-man install-data-recursive uninstall-data-recursive \
install-exec-recursive uninstall-exec-recursive installdirs-recursive \
uninstalldirs-recursive all-recursive check-recursive \
installcheck-recursive info-recursive dvi-recursive \
mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir check-DEJAGNU \
info-am info dvi-am dvi check check-am installcheck-am installcheck \
install-info-am install-info all-recursive-am install-exec-local \
install-exec-am install-exec install-data-local install-data-am \
install-data install-am install uninstall-am uninstall all-redirect \
all-am all installdirs-am installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


po/POTFILES.in: @@MAINT@@ Makefile
	for file in $(POTFILES); do echo $$file; done | sort > tmp \
	  && mv tmp $(srcdir)/po/POTFILES.in

d325 1
a325 1
	$(COMPILE) -c -DDEFAULT_EMULATION='"$(EMUL)"' -DSCRIPTDIR='"$(scriptdir)"' -DTARGET='"@@target@@"' $(srcdir)/ldmain.c
d342 13
a354 2
stringify.sed: ${srcdir}/emultempl/$(STRINGIFY)
	  cp ${srcdir}/emultempl/$(STRINGIFY) stringify.sed
a368 15
earcelf.c: $(srcdir)/emulparams/arcelf.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} arcelf "$(tdir_arcelf)"
earmelf.c: $(srcdir)/emulparams/armelf.sh \
  $(srcdir)/emultempl/armelf.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelf "$(tdir_armelf)"
earmelf_oabi.c: $(srcdir)/emulparams/armelf_oabi.sh \
  $(srcdir)/emultempl/armelf_oabi.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelf_oabi "$(tdir_armelf)"
earmelf_linux.c: $(srcdir)/emulparams/armelf_linux.sh \
  $(srcdir)/emultempl/armelf.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelf_linux "$(tdir_armelf_linux)"
earmelf_linux26.c: $(srcdir)/emulparams/armelf_linux26.sh \
  $(srcdir)/emultempl/armelf.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelf_linux26 "$(tdir_armelf_linux26)"
d376 1
a376 1
  $(srcdir)/emultempl/armcoff.em $(srcdir)/scripttempl/armcoff.sc ${GEN_DEPENDS}
a377 6
earmnbsd.c:	$(srcdir)/emulparams/armnbsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armnbsd "$(tdir_armnbsd)"
earm_epoc_pe.c: $(srcdir)/emulparams/arm_epoc_pe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/epocpe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} arm_epoc_pe "$(tdir_armpe)"
a380 32
eavr85xx.c: $(srcdir)/emulparams/avr85xx.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr85xx "$(tdir_avr85xx)"
eavr1200.c: $(srcdir)/emulparams/avr1200.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr1200 "$(tdir_avr85xx)"
eavr23xx.c: $(srcdir)/emulparams/avr23xx.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr23xx "$(tdir_avr85xx)"
eavr44x4.c: $(srcdir)/emulparams/avr44x4.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr44x4 "$(tdir_avr85xx)"
eavr4433.c: $(srcdir)/emulparams/avr4433.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr4433 "$(tdir_avr85xx)"
eavrmega603.c: $(srcdir)/emulparams/avrmega603.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avrmega603 "$(tdir_avr85xx)"
eavrmega103.c: $(srcdir)/emulparams/avrmega103.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avrmega103 "$(tdir_avr85xx)"
eavrmega161.c: $(srcdir)/emulparams/avrmega161.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avrmega161 "$(tdir_avr85xx)"
a386 9
ed30velf.c: $(srcdir)/emulparams/d30velf.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfd30v.sc ${GEN_DEPENDS}
	${GENSCRIPTS} d30velf "$(tdir_d30v)"
ed30v_o.c: $(srcdir)/emulparams/d30v_o.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfd30v.sc ${GEN_DEPENDS}
	${GENSCRIPTS} d30v_o "$(tdir_d30v)"
ed30v_e.c: $(srcdir)/emulparams/d30v_e.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfd30v.sc ${GEN_DEPENDS}
	${GENSCRIPTS} d30v_e "$(tdir_d30v)"
a392 6
eelf32fr30.c: $(srcdir)/emulparams/elf32fr30.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32fr30 "$(tdir_fr30)"
eelf32mcore.c: $(srcdir)/emulparams/elf32mcore.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32mcore "$(tdir_mcore)"
a398 3
eelf32_i960.c: $(srcdir)/emulparams/elf32_i960.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32_i960 "$(tdir_elf32_i960)"
d403 1
a403 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
a404 3
eelf32bsmip.c: $(srcdir)/emulparams/elf32bsmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32bsmip "$(tdir_elf32bsmip)"
d406 1
a406 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
d409 1
a409 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
a410 3
eelf32bmipn32.c: $(srcdir)/emulparams/elf32bmipn32.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32bmipn32 "$(tdir_elf32bmipn32)"
d415 1
a415 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
a419 3
eelf32lsmip.c: $(srcdir)/emulparams/elf32lsmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32lsmip "$(tdir_elf32lsmip)"
a422 6
eelf32ppclinux.c: $(srcdir)/emulparams/elf32ppclinux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfppc.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppclinux "$(tdir_elf32ppclinux)"
eelf32i370.c: $(srcdir)/emulparams/elf32i370.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfi370.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32i370 "$(tdir_elf32i370)"
d427 1
a427 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
a428 3
eelf64bmip.c: $(srcdir)/emulparams/elf64bmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64bmip "$(tdir_elf64bmip)"
a431 3
eelf_i386_be.c: $(srcdir)/emulparams/elf_i386_be.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_i386_be "$(tdir_elf_i386_be)"
d438 3
d471 3
a476 3
ei386beos.c: $(srcdir)/emulparams/i386beos.sh \
  $(srcdir)/emultempl/beos.em $(srcdir)/scripttempl/i386beos.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386beos "$(tdir_i386beos)"
a509 3
ei386pe_posix.c: $(srcdir)/emulparams/i386pe_posix.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/pe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386pe_posix "$(tdir_i386pe_posix)"
a542 3
emcorepe.c: $(srcdir)/emulparams/mcorepe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/pe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mcorepe "$(tdir_mcorepe)"
a560 3
emipspe.c: $(srcdir)/emulparams/mipspe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/pe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mipspe "$(tdir_mips)"
a575 6
epjelf.c: $(srcdir)/emulparams/pjelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} pjelf "$(tdir_pjelf)"
epjlelf.c: $(srcdir)/emulparams/pjlelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} pjlelf "$(tdir_pjlelf)"
a602 3
eshpe.c: $(srcdir)/emulparams/shpe.sh \
  $(srcdir)/emultempl/pe.em $(srcdir)/scripttempl/pe.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shpe "$(tdir_shl)"
a623 9
etic30aout.c: $(srcdir)/emulparams/tic30aout.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/tic30aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic30aout "$(tdir_tic30aout)"
etic30coff.c: $(srcdir)/emulparams/tic30coff.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/tic30coff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic30coff "$(tdir_tic30coff)"
etic80coff.c: $(srcdir)/emulparams/tic80coff.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/tic80coff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic80coff "$(tdir_tic80coff)"
a632 3
ev850.c: $(srcdir)/emulparams/v850.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/v850.sc ${GEN_DEPENDS}
	${GENSCRIPTS} v850 "$(tdir_v850)"
d643 3
d651 40
a690 2
check-DEJAGNU: site.exp
	srcroot=`cd $(srcdir) && pwd`; export srcroot; \
d692 15
a706 17
	LC_COLLATE=; LC_ALL=; LANG=; export LC_COLLATE LC_ALL LANG; \
	EXPECT=$(EXPECT); export EXPECT; \
	if [ -f $(top_builddir)/../expect/expect ]; then \
	  TCL_LIBRARY=`cd $(top_srcdir)/../tcl/library && pwd`; \
	  export TCL_LIBRARY; \
	fi; \
	runtest=$(RUNTEST); \
	if $(SHELL) -c "$$runtest --version" > /dev/null 2>&1; then \
	  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \
		CC="$(CC_FOR_TARGET)" CFLAGS="$(CFLAGS)" \
		CXX="$(CXX_FOR_TARGET)" CXXFLAGS="$(CXXFLAGS)" \
		CC_FOR_HOST="$(CC)" CFLAGS_FOR_HOST="$(CFLAGS)" \
		OFILES="$(OFILES)" BFDLIB="$(TESTBFDLIB)" \
		LIBIBERTY="$(LIBIBERTY) $(INTLLIBS)" LIBS="$(LIBS)" \
		$(RUNTESTFLAGS); \
	else echo "WARNING: could not find \`runtest'" 1>&2; :;\
	fi
d712 7
a718 7
ld-partial.o: ld-new$(EXEEXT)
	./ld-new$(EXEEXT) $(HOSTING_EMU) -o ld-partial.o -r $(OFILES)
ld1$(EXEEXT): ld-partial.o
	./ld-new$(EXEEXT) $(HOSTING_EMU) -o ld1$(EXEEXT) $(HOSTING_CRT0) ld-partial.o $(TESTBFDLIB) $(LIBIBERTY) $(HOSTING_LIBS) $(LIBS)

ld1-full$(EXEEXT): ld-new
	./ld-new$(EXEEXT) $(HOSTING_EMU) -o ld1-full$(EXEEXT) $(HOSTING_CRT0) $(OFILES) $(TESTBFDLIB) $(LIBIBERTY) $(HOSTING_LIBS) $(LIBS)
d720 2
a721 2
ld2$(EXEEXT): ld1$(EXEEXT)
	./ld1$(EXEEXT) $(HOSTING_EMU) -o ld2$(EXEEXT) $(HOSTING_CRT0) $(OFILES) $(TESTBFDLIB) $(LIBIBERTY) $(HOSTING_LIBS) $(LIBS)
d723 2
a724 2
ld3$(EXEEXT): ld2$(EXEEXT)
	./ld2$(EXEEXT) $(HOSTING_EMU) -o ld3$(EXEEXT) $(HOSTING_CRT0) $(OFILES) $(TESTBFDLIB) $(LIBIBERTY) $(HOSTING_LIBS) $(LIBS)
d726 2
a727 2
bootstrap: ld3$(EXEEXT)
	cmp ld2$(EXEEXT) ld3$(EXEEXT)
d767 130
a896 15
	ln -s ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi >/dev/null 2>&1 \
	  || ln ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi >/dev/null 2>&1 \
	  || cp ${srcdir}/${DOCVER}-doc.texi ./configdoc.texi

ldver.texi: Makefile
	rm -f $@@
	echo '@@set VERSION $(VERSION)' > $@@

ld.info: $(srcdir)/ld.texinfo configdoc.texi ldver.texi
	@@rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	$(MAKEINFO) -I $(srcdir) -I $(BFDDIR)/doc $(srcdir)/ld.texinfo

ld.dvi: $(srcdir)/ld.texinfo configdoc.texi ldver.texi
	TEXINPUTS=$(top_srcdir)/../texinfo:$$TEXINPUTS \
	  MAKEINFO="$(MAKEINFO) -I $(srcdir) -I $(BFDDIR)/doc" $(TEXI2DVI) $(srcdir)/ld.texinfo
d898 1
a898 5
# We want to reconfigure if configure.host or configure.tgt changes.
config.status: $(srcdir)/configure $(srcdir)/configure.host $(srcdir)/configure.tgt
	$(SHELL) ./config.status --recheck
mostlyclean-local:
	-rm -rf tmpdir
d900 3
a902 1
.PHONY: install-exec-local install-data-local
d904 19
a922 14
install-exec-local: ld-new$(EXEEXT)
	$(mkinstalldirs) $(bindir) $(tooldir)/bin
	@@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(bindir)/`echo $$p|sed -e 's/$(EXEEXT)$$//' -e 's/-new//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(bindir)/`echo $$p|sed -e 's/$(EXEEXT)$$//' -e 's/-new//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done
	n=`echo ld | sed '$(transform)'`; \
	if [ "$(bindir)/$$n$(EXEEXT)" != "$(tooldir)/bin/ld$(EXEEXT)" ]; then \
	  rm -f $(tooldir)/bin/ld$(EXEEXT); \
	  ln $(bindir)/$$n$(EXEEXT) $(tooldir)/bin/ld$(EXEEXT) >/dev/null 2>/dev/null \
	  || $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(tooldir)/bin/ld$(EXEEXT); \
	fi
d924 19
a942 2
install-data-local:
	$(mkinstalldirs) $(scriptdir)/ldscripts
d946 21
a966 3
diststuff: $(LDDISTSTUFF) info
distclean-local:
	rm -rf ldscripts
d969 12
a980 12
# Have to get rid of DEP1 here so that "$?" later includes all of $(CFILES).
DEP: dep.sed $(CFILES) $(HFILES) $(GENERATED_CFILES) $(GENERATED_HFILES) config.h
	rm -f DEP1
	$(MAKE) MKDEP="$(MKDEP)" DEP1
	sed -f dep.sed < DEP1 > $@@
	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> $@@

DEP1: $(CFILES) $(GENERATED_CFILES)
	echo '# DO NOT DELETE THIS LINE -- mkdep uses it.' > DEP2
	echo '# DO NOT PUT ANYTHING AFTER THIS LINE, IT WILL GO AWAY.' >> DEP2
	$(MKDEP) $(INCLUDES) $(CFLAGS) $? >> DEP2
	mv -f DEP2 $@@
d987 1
a987 1
dep: DEP
d989 1
a989 1
	cat DEP >> tmp-Makefile
d992 1
a992 1
dep-in: DEP
d994 1
a994 1
	cat DEP >> tmp-Makefile.in
d997 10
a1006 4
dep-am: DEP
	sed -e '/^..DO NOT DELETE THIS LINE/,$$d' < $(srcdir)/Makefile.am > tmp-Makefile.am
	cat DEP >> tmp-Makefile.am
	$(srcdir)/../move-if-change tmp-Makefile.am $(srcdir)/Makefile.am
d1008 6
a1013 1
.PHONY: dep dep-in dep-am
d1019 1
d1022 1
a1022 2
  ld.h $(INCDIR)/bin-bugs.h ldexp.h ldlang.h ldmisc.h \
  ldgram.h ldmain.h ldctor.h
d1024 2
a1025 3
  sysdep.h config.h $(INCDIR)/fopen-same.h ld.h $(INCDIR)/bin-bugs.h \
  ldemul.h ldmisc.h ldexp.h ldlang.h ldfile.h ldmain.h \
  ldemul-list.h
d1028 1
a1028 2
  ld.h $(INCDIR)/bin-bugs.h ldmain.h ldmisc.h ldexp.h \
  ldgram.h ldlang.h
d1031 2
a1032 2
  ld.h $(INCDIR)/bin-bugs.h ldmisc.h ldexp.h ldlang.h \
  ldfile.h ldmain.h ldgram.h ldlex.h ldemul.h
d1035 3
a1037 3
  $(INCDIR)/obstack.h $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h \
  ldmain.h ldgram.h ldexp.h ldlang.h ldemul.h ldlex.h \
  ldmisc.h ldctor.h ldfile.h $(INCDIR)/fnmatch.h $(INCDIR)/demangle.h
d1040 3
a1042 3
  $(INCDIR)/progress.h $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h \
  ldmain.h ldmisc.h ldwrite.h ldgram.h ldexp.h ldlang.h \
  ldemul.h ldlex.h ldfile.h ldctor.h
d1045 2
a1046 2
  $(INCDIR)/demangle.h ld.h $(INCDIR)/bin-bugs.h ldmisc.h \
  ldexp.h ldlang.h ldgram.h ldlex.h ldmain.h ldfile.h
d1048 2
a1049 2
  sysdep.h config.h $(INCDIR)/fopen-same.h ld.h $(INCDIR)/bin-bugs.h \
  ldver.h ldemul.h ldmain.h
d1052 2
a1053 2
  $(INCDIR)/libiberty.h ld.h $(INCDIR)/bin-bugs.h ldexp.h \
  ldlang.h ldwrite.h ldmisc.h ldgram.h ldmain.h
d1056 1
a1056 1
  $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h ldmain.h \
d1060 2
a1061 2
  config.h $(INCDIR)/fopen-same.h ld.h $(INCDIR)/bin-bugs.h \
  ldexp.h ldlang.h ldmisc.h mri.h ldgram.h $(INCDIR)/libiberty.h
d1064 2
a1065 8
  $(INCDIR)/libiberty.h ld.h $(INCDIR)/bin-bugs.h ldmain.h \
  ldmisc.h ldexp.h ldlang.h
pe-dll.o: pe-dll.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
  sysdep.h config.h $(INCDIR)/fopen-same.h $(INCDIR)/bfdlink.h \
  $(INCDIR)/libiberty.h ld.h $(INCDIR)/bin-bugs.h ldexp.h \
  ldlang.h ldwrite.h ldmisc.h ldgram.h ldmain.h ldemul.h \
  $(INCDIR)/coff/internal.h ../bfd/libcoff.h deffile.h \
  pe-dll.h
d1068 2
a1069 3
  ld.h $(INCDIR)/bin-bugs.h ldexp.h ldver.h ldlang.h \
  ldemul.h ldfile.h ldmisc.h ldmain.h mri.h ldctor.h \
  ldlex.h
d1071 3
a1073 5
  ld.h $(INCDIR)/bin-bugs.h ldgram.h ldmisc.h ldexp.h \
  ldlang.h ldfile.h ldlex.h ldmain.h
deffilep.o: deffilep.c $(INCDIR)/libiberty.h $(INCDIR)/ansidecl.h \
  ../bfd/bfd.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  ld.h $(INCDIR)/bin-bugs.h ldmisc.h deffile.h
a1074 4

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
@


1.1.1.7
log
@Long delayed import of binutils-2.10.1. Turns out art@@ needs some alpha
bug-fixes...
@
text
@d389 1
a389 1
DISTCLEANFILES = tdirs site.exp site.bak stringify.sed
@


1.1.1.8
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@a70 1
CXXCPP = @@CXXCPP@@
a75 2
GCJ = @@GCJ@@
GCJFLAGS = @@GCJFLAGS@@
a92 1
OBJEXT = @@OBJEXT@@
a97 1
STRIP = @@STRIP@@
a114 3
WARN_CFLAGS = @@WARN_CFLAGS@@
AM_CFLAGS = $(WARN_CFLAGS)

d207 4
a210 1
	earm_epoc_pe.o \
a213 3
	earmelf.o \
	earmelf_linux.o \
	earmelf_oabi.o \
d216 1
d219 1
a220 1
	eavr44x4.o \
d222 1
a224 1
	eavrmega603.o \
a225 3
	ecrisaout.o \
	ecriself.o \
	ecrislinux.o \
d227 1
a229 1
	ed30velf.o \
d232 1
a233 2
	eelf32_i860.o \
	eelf32_sparc.o \
a235 3
	eelf32bmipn32.o \
	eelf32btsmip.o \
	eelf32ltsmip.o \
d238 1
a238 1
	eelf32fr30.o \
a242 2
	eelf32lppcsim.o \
	eelf32mcore.o \
a244 1
	eelf32ppcsim.o \
a246 1
	eelf_i386_chaos.o \
d249 2
a260 2
	ehppaelf.o \
	ehppalinux.o \
a275 4
	em68hc11elf.o \
	em68hc11elfb.o \
	em68hc12elf.o \
	em68hc12elfb.o \
d295 2
a298 2
	epjelf.o \
	epjlelf.o \
d306 1
a306 2
	eshelf_linux.o \
	eshlelf_linux.o \
a307 1
	eshlelf.o \
a317 1
	etic54xcoff.o \
a327 2
	eelf64_ia64.o \
	eelf_x86_64.o \
d330 1
a330 4
	eelf64bmip.o \
	eelf64btsmip.o \
	eelf64ltsmip.o \
	eelf64hppa.o
d334 2
a335 2
	deffilep.o \
	pe-dll.o
d366 1
a366 1
GENSCRIPTS = $(SHELL) $(srcdir)/genscripts.sh ${srcdir} ${libdir} ${exec_prefix} @@host@@ @@target@@ @@target_alias@@ "@@EMULATION_LIBPATH@@" "@@NATIVE_LIB_DIRS@@"
a368 3
# We need this for automake to use YLWRAP.
EXTRA_ld_new_SOURCES = deffilep.y

d383 1
a383 1
CLEANFILES = dep.sed DEP DEPA DEP1 DEP2
d402 2
a403 4
ld_new_OBJECTS =  ldgram.$(OBJEXT) ldlex.$(OBJEXT) lexsup.$(OBJEXT) \
ldlang.$(OBJEXT) mri.$(OBJEXT) ldctor.$(OBJEXT) ldmain.$(OBJEXT) \
ldwrite.$(OBJEXT) ldexp.$(OBJEXT) ldemul.$(OBJEXT) ldver.$(OBJEXT) \
ldmisc.$(OBJEXT) ldfile.$(OBJEXT) ldcref.$(OBJEXT)
a406 1
YLWRAP = $(top_srcdir)/../ylwrap
d423 1
a423 1
deffilep.c ldgram.c ldlex.c
d430 1
a430 1
SOURCES = $(ld_new_SOURCES) $(EXTRA_ld_new_SOURCES)
d435 1
a435 1
.SUFFIXES: .S .c .dvi .info .l .lo .o .obj .ps .s .texi .texinfo .txi .y
a487 5
# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

a495 1
	-rm -f *.$(OBJEXT)
d529 4
a532 2
	$(SHELL) $(YLWRAP) "$(YACC)" $< y.tab.c $*.c y.tab.h $*.h -- $(AM_YFLAGS) $(YFLAGS)
deffilep.h: deffilep.c
d903 1
a903 1
	-test -z "ldlexldeffilephdeffilepcldgramhldgramc$(MAINTAINERCLEANFILES)" || rm -f ldlexl deffileph deffilepc ldgramh ldgramc $(MAINTAINERCLEANFILES)
d1001 1
a1001 2
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
d1007 1
a1007 2
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
d1009 3
a1064 9
ecrisaout.c: $(srcdir)/emulparams/crisaout.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/crisaout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} crisaout "$(tdir_cris)"
ecriself.c: $(srcdir)/emulparams/criself.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} criself "$(tdir_cris)"
ecrislinux.c: $(srcdir)/emulparams/crislinux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} crislinux "$(tdir_cris)"
a1094 3
eelf32_i860.c: $(srcdir)/emulparams/elf32_i860.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32_i860 "$(tdir_elf32_i860)"
a1106 6
eelf32btsmip.c: $(srcdir)/emulparams/elf32btsmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32btsmip "$(tdir_elf32btsmip)"
eelf32ltsmip.c: $(srcdir)/emulparams/elf32ltsmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ltsmip "$(tdir_elf32ltsmip)"
d1123 1
a1123 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
a1124 3
eelf32lppcsim.c: $(srcdir)/emulparams/elf32lppcsim.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32lppcsim "$(tdir_elf32lppcsim)"
d1129 1
a1129 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
a1130 3
eelf32ppcsim.c: $(srcdir)/emulparams/elf32ppcsim.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppcsim "$(tdir_elf32ppcsim)"
d1132 1
a1132 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
a1139 6
eelf64hppa.c: $(srcdir)/emulparams/elf64hppa.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64hppa "$(tdir_elf64hppa)"
eelf64_ia64.c: $(srcdir)/emulparams/elf64_ia64.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64_ia64 "$(tdir_elf64_ia64)"
a1145 6
eelf64btsmip.c: $(srcdir)/emulparams/elf64btsmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64btsmip "$(tdir_elf64btsmip)"
eelf64ltsmip.c: $(srcdir)/emulparams/elf64ltsmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64ltsmip "$(tdir_elf64ltsmip)"
a1148 3
eelf_x86_64.c: $(srcdir)/emulparams/elf_x86_64.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_x86_64 "$(tdir_elf_x86_64)"
a1151 3
eelf_i386_chaos.c: $(srcdir)/emulparams/elf_i386_chaos.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_i386_chaos "$(tdir_elf_i386_chaos)"
a1187 8
ehppaelf.c: $(srcdir)/emulparams/hppaelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/hppaelf.em \
  $(srcdir)/scripttempl/hppaelf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} hppaelf "$(tdir_hppaelf)"
ehppalinux.c: $(srcdir)/emulparams/hppalinux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/hppaelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} hppalinux "$(tdir_hppalinux)"
a1232 12
em68hc11elf.c: $(srcdir)/emulparams/m68hc11elf.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfm68hc11.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68hc11elf "$(tdir_m68hc11)"
em68hc11elfb.c: $(srcdir)/emulparams/m68hc11elfb.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfm68hc11.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68hc11elfb "$(tdir_m68hc11b)"
em68hc12elf.c: $(srcdir)/emulparams/m68hc12elf.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfm68hc12.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68hc12elf "$(tdir_m68hc12)"
em68hc12elfb.c: $(srcdir)/emulparams/m68hc12elfb.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elfm68hc12.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68hc12elfb "$(tdir_m68hc12b)"
d1243 1
a1243 1
  $(srcdir)/emultempl/m68kcoff.em $(srcdir)/scripttempl/m68kcoff.sc ${GEN_DEPENDS}
d1246 1
a1246 2
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/m68kelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
a1328 6
eshelf_linux.c: $(srcdir)/emulparams/shelf_linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf_linux "$(tdir_shelf_linux)"
eshlelf_linux.c: $(srcdir)/emulparams/shlelf_linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf_linux "$(tdir_shlelf_linux)"
a1364 3
etic54xcoff.c: $(srcdir)/emulparams/tic54xcoff.sh \
  $(srcdir)/emultempl/ticoff.em $(srcdir)/scripttempl/tic54xcoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic54xcoff "$(tdir_tic54xcoff)"
d1489 1
a1489 1
	  MAKEINFO="$(MAKEINFO) -I $(srcdir) -I $(BFDDIR)/doc" $(TEXI2DVI) -I $(BFDDIR)/doc $(srcdir)/ld.texinfo
d1528 2
a1529 7
	sed -f dep.sed < DEP1 > DEPA
	echo '# IF YOU PUT ANYTHING HERE IT WILL GO AWAY' >> DEPA
	if grep ' /' DEPA > /dev/null 2> /dev/null; then \
	  echo 'make DEP failed!'; exit 1; \
	else \
	  mv -f DEPA $@@; \
	fi
d1569 1
a1569 1
  ldmisc.h ldexp.h ldlang.h ldfile.h ldemul.h ldmain.h \
d1578 1
a1578 1
  ldfile.h ldmain.h ldgram.h ldlex.h ldemul.h $(INCDIR)/libiberty.h
d1582 2
a1583 2
  ldmain.h ldgram.h ldexp.h ldlang.h ldlex.h ldmisc.h \
  ldctor.h ldfile.h ldemul.h $(INCDIR)/fnmatch.h $(INCDIR)/demangle.h
d1586 3
a1588 4
  $(INCDIR)/progress.h $(INCDIR)/bfdlink.h $(INCDIR)/filenames.h \
  ld.h $(INCDIR)/bin-bugs.h ldmain.h ldmisc.h ldwrite.h \
  ldgram.h ldexp.h ldlang.h ldlex.h ldfile.h ldemul.h \
  ldctor.h
d1595 1
a1595 1
  ldver.h ldexp.h ldlang.h ldfile.h ldemul.h ldmain.h
d1604 1
a1604 1
  ldver.h ldemul.h $(INCDIR)/demangle.h
d1615 3
a1617 3
  ldlang.h ldwrite.h ldmisc.h ldgram.h ldmain.h ldfile.h \
  ldemul.h $(INCDIR)/coff/internal.h ../bfd/libcoff.h \
  deffile.h pe-dll.h
d1621 1
a1621 1
  ldfile.h ldemul.h ldmisc.h ldmain.h mri.h ldctor.h \
d1625 1
a1625 1
  ldlang.h ldfile.h ldlex.h ldmain.h $(INCDIR)/libiberty.h
@


1.1.1.9
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@d1 1
a1 1
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am
d3 1
a3 1
# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
a102 2
TARGET_SYSTEM_ROOT = @@TARGET_SYSTEM_ROOT@@
TARGET_SYSTEM_ROOT_DEFINE = @@TARGET_SYSTEM_ROOT_DEFINE@@
a105 2
bfdincludedir = @@bfdincludedir@@
bfdlibdir = @@bfdlibdir@@
a106 1
use_sysroot = @@use_sysroot@@
d137 2
a138 3
# which may have the form: LIB_PATH=/lib:/usr/local/lib.  This can be set
# when the linker is configured via the --with-lib-path configure switch.
LIB_PATH = @@LIB_PATH@@
a147 9
# Options to extract the man page from ld.texinfo
MANCONF = -Dman

TEXI2POD = perl $(BASEDIR)/etc/texi2pod.pl

POD2MAN = pod2man --center="GNU Development Tools" \
	--release="binutils-$(VERSION)" --section=1


a219 1
	earmelf_fbsd.o \
a220 2
	earmelf_nbsd.o \
	earmelfb_nbsd.o \
a221 1
	earmnto.o \
a231 5
	eavr1.o \
	eavr2.o \
	eavr3.o \
	eavr4.o \
	eavr5.o \
a240 1
	eelf32_dlx.o \
a248 1
	eelf32btsmipn32.o \
a249 1
	eelf32ltsmipn32.o \
a252 1
	eelf32frv.o \
a253 3
	eelf32ip2k.o \
	eelf32iq2000.o \
	eelf32iq10.o \
a256 1
	eelf32lppcnto.o \
a258 1
	eelf32openrisc.o \
a259 1
	eelf32ppc_fbsd.o \
a260 1
	eelf32ppcnto.o \
a261 4
	eelf32ppcwindiss.o \
	eelf32vax.o \
	eelf32xstormy16.o \
	eelf32xtensa.o \
a264 3
	eelf_i386_fbsd.o \
	eelf_i386_ldso.o \
	eelf_s390.o \
a269 7
	eh8300elf.o \
	eh8300hn.o \
	eh8300sn.o \
	eh8300helf.o \
	eh8300self.o \
	eh8300hnelf.o \
	eh8300snelf.o \
a278 2
	ehppanbsd.o \
	ehppaobsd.o \
a289 1
	ei386nto.o \
a302 1
	em68kelfnbsd.o \
a315 40
	emsp430x1101.o \
	emsp430x1111.o \
	emsp430x1121.o \
	emsp430x1122.o \
	emsp430x1132.o \
	emsp430x1331.o \
	emsp430x1351.o \
	emsp430x149.o \
	emsp430x148.o \
	emsp430x147.o \
	emsp430x135.o \
	emsp430x133.o \
	emsp430x110.o \
	emsp430x112.o \
	emsp430x122.o \
	emsp430x1222.o \
	emsp430x123.o \
	emsp430x1232.o \
	emsp430x412.o \
	emsp430x413.o \
	emsp430x311.o \
	emsp430x312.o \
	emsp430x313.o \
	emsp430x314.o \
	emsp430x315.o \
	emsp430x323.o \
	emsp430x325.o \
	emsp430x336.o \
	emsp430x337.o \
	emsp430x435.o \
	emsp430x436.o \
	emsp430x447.o \
	emsp430x448.o \
	emsp430x449.o \
	emsp430x169.o \
	emsp430x168.o \
	emsp430x167.o \
	emsp430x155.o \
	emsp430x156.o \
	emsp430x157.o \
a317 2
	eor32.o \
	eor32elf.o \
a318 1
	epdp11.o \
a326 6
	eshelf32.o \
	eshlelf32.o \
	eshelf32_linux.o \
	eshlelf32_linux.o \
	eshelf32_nbsd.o \
	eshlelf32_nbsd.o \
a329 4
	eshelf_nbsd.o \
	eshlelf_nbsd.o \
	eshelf_nto.o \
	eshlelf_nto.o \
a341 3
	etic3xcoff.o \
	etic3xcoff_onchip.o \
	etic4xcoff.o \
a345 1
	evaxnbsd.o \
a352 1
	eelf64_aix.o \
a353 5
	eelf64_ia64_fbsd.o \
	eshelf64.o \
	eshlelf64.o \
	eshelf64_nbsd.o \
	eshlelf64_nbsd.o \
a354 2
	eelf_x86_64_fbsd.o \
	eelf64_s390.o \
a355 1
	eelf64_sparc_fbsd.o \
a356 2
	eelf64alpha_fbsd.o \
	eelf64alpha_nbsd.o \
d360 1
a360 6
	eelf64hppa.o \
	eelf64mmix.o \
	emmo.o \
	eelf64ppc.o \
	eelf64lppc.o \
	ehppa64linux.o
d396 1
a396 1
GENSCRIPTS = LIB_PATH='${LIB_PATH}' $(SHELL) $(srcdir)/genscripts.sh ${srcdir} ${libdir} "${exec_prefix}" @@host@@ @@target@@ @@target_alias@@ "@@EMULATION_LIBPATH@@" "@@NATIVE_LIB_DIRS@@" @@use_sysroot@@
a412 3
# We want to reconfigure if configure.host or configure.tgt changes.
CONFIG_STATUS_DEPENDENCIES = $(srcdir)/configure.host $(srcdir)/configure.tgt

d420 1
a420 1
EXTRA_DIST = ldgram.c ldgram.h ldlex.c $(man_MANS)
d464 1
a464 1
TAR = gtar
a480 3

config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
d649 1
a649 1
	  test -z "$$ii" \
d762 1
a762 1
	  test "$$subdir" != "." || dot_seen=yes; \
d1004 1
a1004 5
	$(COMPILE) -c -DDEFAULT_EMULATION='"$(EMUL)"' \
	  -DSCRIPTDIR='"$(scriptdir)"' -DBINDIR='"$(bindir)"' \
	  -DTOOLBINDIR='"$(tooldir)/bin"' \
	  -DTARGET='"@@target@@"' @@TARGET_SYSTEM_ROOT_DEFINE@@ \
	  $(srcdir)/ldmain.c
a1027 6
eaix5ppc.c: $(srcdir)/emulparams/aix5ppc.sh \
  $(srcdir)/emultempl/aix.em $(srcdir)/scripttempl/aix.sc ${GEN_DEPENDS}
	${GENSCRIPTS} aix5ppc "$(tdir_aixppc)"
eaix5rs6.c: $(srcdir)/emulparams/aix5rs6.sh \
  $(srcdir)/emultempl/aix.em $(srcdir)/scripttempl/aix.sc ${GEN_DEPENDS}
	${GENSCRIPTS} aix5rs6 "$(tdir_aixrs6)"
a1046 5
earmelf_fbsd.c: $(srcdir)/emulparams/armelf_fbsd.sh \
  $(srcdir)/emulparams/armelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelf_fbsd "$(tdir_armelf_fbsd)"
a1050 11
earmelf_nbsd.c: $(srcdir)/emulparams/armelf_nbsd.sh \
  $(srcdir)/emulparams/armelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelf_nbsd "$(tdir_armelf_nbsd)"
earmelfb_nbsd.c: $(srcdir)/emulparams/armelfb_nbsd.sh \
  $(srcdir)/emulparams/armelf_nbsd.sh \
  $(srcdir)/emulparams/armelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelfb_nbsd "$(tdir_armelfb_nbsd)"
a1062 4
earmnto.c: $(srcdir)/emulparams/armnto.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armnto "$(tdir_armnto)"
a1100 20
eavr1.c: $(srcdir)/emulparams/avr1.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr1 "$(tdir_avr85xx)"
eavr2.c: $(srcdir)/emulparams/avr2.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr2 "$(tdir_avr85xx)"
eavr3.c: $(srcdir)/emulparams/avr3.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr3 "$(tdir_avr85xx)"
eavr4.c: $(srcdir)/emulparams/avr4.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr4 "$(tdir_avr85xx)"
eavr5.c: $(srcdir)/emulparams/avr5.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/avr.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} avr5 "$(tdir_avr85xx)"
d1108 1
a1108 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
d1114 1
a1114 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfd10v.sc ${GEN_DEPENDS}
a1127 3
eelf32_dlx.c: $(srcdir)/emulparams/elf32_dlx.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/dlx.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32_dlx "$(tdir_elf32_dlx)"
a1130 12
eelf32xstormy16.c: $(srcdir)/emulparams/elf32xstormy16.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/needrelax.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32xstormy16 "$(tdir_xstormy16)"
eelf32vax.c: $(srcdir)/emulparams/elf32vax.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32vax "$(tdir_elf32vax)"
eelf32xtensa.c: $(srcdir)/emulparams/elf32xtensa.sh \
  $(srcdir)/emulparams/xtensa-config.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/xtensaelf.em \
  $(srcdir)/scripttempl/elfxtensa.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32xtensa "$(tdir_elf32xtensa)"
a1133 3
eelf32frv.c: $(srcdir)/emulparams/elf32frv.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32frv "$(tdir_frv)"
d1138 1
a1138 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
a1149 1
  $(srcdir)/emulparams/elf32bmip.sh \
a1155 1
  $(srcdir)/emulparams/elf32bmip.sh \
a1158 1
  $(srcdir)/emulparams/elf32bmip.sh \
a1160 4
eelf32btsmipn32.c: $(srcdir)/emulparams/elf32btsmipn32.sh \
  $(srcdir)/emulparams/elf32bmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32btsmipn32 "$(tdir_elf32btsmipn32)"
a1161 1
  $(srcdir)/emulparams/elf32btsmip.sh $(srcdir)/emulparams/elf32bmip.sh \
a1163 4
eelf32ltsmipn32.c: $(srcdir)/emulparams/elf32ltsmipn32.sh \
  $(srcdir)/emulparams/elf32btsmip.sh $(srcdir)/emulparams/elf32bmip.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ltsmipn32 "$(tdir_elf32ltsmipn32)"
a1164 1
  $(srcdir)/emulparams/elf32bmip.sh \
a1167 1
  $(srcdir)/emulparams/elf32lmip.sh $(srcdir)/emulparams/elf32bmip.sh \
a1173 1
  $(srcdir)/emulparams/elf32b4300.sh $(srcdir)/emulparams/elf32bmip.sh \
a1176 1
  $(srcdir)/emulparams/elf32bmip.sh \
a1179 1
  $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
a1181 4
eelf32lppcnto.c: $(srcdir)/emulparams/elf32lppcnto.sh \
  $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32lppcnto "$(tdir_elf32lppcnto)"
a1182 2
  $(srcdir)/emulparams/elf32lppc.sh $(srcdir)/emulparams/elf32ppc.sh \
  $(srcdir)/emultempl/ppc32elf.em \
a1184 7
eelf32ppcnto.c: $(srcdir)/emulparams/elf32ppcnto.sh \
  $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppcnto "$(tdir_elf32ppcnto)"
eelf32ppcwindiss.c: $(srcdir)/emulparams/elf32ppcwindiss.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppcwindiss "$(tdir_elf32ppcwindiss)"
a1185 1
  $(srcdir)/emulparams/elf32lmip.sh $(srcdir)/emulparams/elf32bmip.sh \
d1188 1
a1188 4
eelf32openrisc.c: $(srcdir)/emulparams/elf32openrisc.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32openrisc "$(tdir_openrisc)"
eelf32ppc.c: $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
a1190 4
eelf32ppc_fbsd.c: $(srcdir)/emulparams/elf32ppc_fbsd.sh \
  $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ppc_fbsd "$(tdir_elf32ppc_fbsd)"
a1191 1
  $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
a1194 1
  $(srcdir)/emulparams/elf32ppc.sh $(srcdir)/emultempl/ppc32elf.em \
a1196 7
eelf64ppc.c: $(srcdir)/emulparams/elf64ppc.sh $(srcdir)/emultempl/ppc64elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64ppc "$(tdir_elf64ppc)"
eelf64lppc.c: $(srcdir)/emulparams/elf64lppc.sh \
  $(srcdir)/emulparams/elf64ppc.sh $(srcdir)/emultempl/ppc64elf.em \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64lppc "$(tdir_elf64lppc)"
a1199 9
eelf32ip2k.c: $(srcdir)/emulparams/elf32ip2k.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/ip2k.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32ip2k "$(tdir_ip2k)"
eelf32iq2000.c: $(srcdir)/emulparams/elf32iq2000.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/iq2000.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32iq2000 "$(tdir_iq2000)"
eelf32iq10.c: $(srcdir)/emulparams/elf32iq10.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/iq2000.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32iq10 "$(tdir_iq10)"
a1202 8
eelf64alpha_fbsd.c: $(srcdir)/emulparams/elf64alpha_fbsd.sh \
  $(srcdir)/emulparams/elf64alpha.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64alpha_fbsd "$(tdir_elf64alpha_fbsd)"
eelf64alpha_nbsd.c: $(srcdir)/emulparams/elf64alpha_nbsd.sh \
  $(srcdir)/emulparams/elf64alpha.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64alpha_nbsd "$(tdir_elf64alpha_nbsd)"
a1203 1
  $(srcdir)/emulparams/hppa64linux.sh \
d1206 1
a1206 1
eelf64_aix.c: $(srcdir)/emulparams/elf64_aix.sh \
a1207 4
	${GENSCRIPTS} elf64_aix "$(tdir_elf64_aix)"
eelf64_ia64.c: $(srcdir)/emulparams/elf64_ia64.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/needrelax.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
a1208 8
eelf64_ia64_fbsd.c: $(srcdir)/emulparams/elf64_ia64_fbsd.sh \
  $(srcdir)/emulparams/elf64_ia64.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/needrelax.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64_ia64_fbsd "$(tdir_elf64_ia64_fbsd)"
eelf64_s390.c: $(srcdir)/emulparams/elf64_s390.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64_s390 "$(tdir_elf64_s390)"
a1211 4
eelf64_sparc_fbsd.c: $(srcdir)/emulparams/elf64_sparc_fbsd.sh \
  $(srcdir)/emulparams/elf64_sparc.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64_sparc_fbsd "$(tdir_elf64_sparc_fbsd)"
a1212 1
  $(srcdir)/emulparams/elf32bmipn32.sh \
a1214 8
eelf64mmix.c: $(srcdir)/emulparams/elf64mmix.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/mmix-elfnmmo.em \
  $(srcdir)/emultempl/mmixelf.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf64mmix "$(tdir_elf64mmix)"
emmo.c: $(srcdir)/emulparams/mmo.sh $(srcdir)/emultempl/mmix-elfnmmo.em \
  $(srcdir)/emultempl/generic.em $(srcdir)/emultempl/mmo.em \
  $(srcdir)/scripttempl/mmo.sc ${GEN_DEPENDS}
	${GENSCRIPTS} mmo "$(tdir_mmo)"
a1215 1
  $(srcdir)/emulparams/elf32bmipn32.sh \
a1218 1
  $(srcdir)/emulparams/elf64btsmip.sh $(srcdir)/emulparams/elf32bmipn32.sh \
a1226 4
eelf_x86_64_fbsd.c: $(srcdir)/emulparams/elf_x86_64_fbsd.sh \
  $(srcdir)/emulparams/elf_x86_64.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_x86_64_fbsd "$(tdir_elf_x86_64_fbsd)"
d1231 1
a1231 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf_chaos.sc ${GEN_DEPENDS}
a1232 10
eelf_i386_fbsd.c: $(srcdir)/emulparams/elf_i386_fbsd.sh \
  $(srcdir)/emulparams/elf_i386.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_i386_fbsd "$(tdir_elf_i386_fbsd)"
eelf_i386_ldso.c: $(srcdir)/emulparams/elf_i386_ldso.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_i386_ldso "$(tdir_elf_i386_ldso)"
eelf_s390.c: $(srcdir)/emulparams/elf_s390.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf_s390 "$(tdir_elf_s390)"
a1247 25
eh8300hn.c: $(srcdir)/emulparams/h8300hn.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300hn.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300hn "$(tdir_h8300hn)"
eh8300sn.c: $(srcdir)/emulparams/h8300sn.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300sn.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300sn "$(tdir_h8300sn)"
eh8300elf.c: $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300elf "$(tdir_h8300elf)"
eh8300helf.c: $(srcdir)/emulparams/h8300helf.sh \
  $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300helf "$(tdir_h8300helf)"
eh8300self.c: $(srcdir)/emulparams/h8300self.sh \
  $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300self "$(tdir_h8300self)"
eh8300hnelf.c: $(srcdir)/emulparams/h8300hnelf.sh \
  $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300hnelf "$(tdir_h8300hnelf)"
eh8300snelf.c: $(srcdir)/emulparams/h8300snelf.sh \
  $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300snelf "$(tdir_h8300snelf)"
a1276 12
ehppanbsd.c: $(srcdir)/emulparams/hppanbsd.sh \
  $(srcdir)/emulparams/hppaelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/hppaelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} hppanbsd "$(tdir_hppanbsd)"
ehppaobsd.c: $(srcdir)/emulparams/hppaobsd.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/hppaelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} hppaobsd "$(tdir_hppaobsd)"
ehppa64linux.c: $(srcdir)/emulparams/hppa64linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} hppa64linux "$(tdir_hppa64linux)"
d1302 1
a1302 1
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
a1309 3
ei386nto.c:	$(srcdir)/emulparams/i386nto.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} i386nto "$(tdir_i386nto)"
a1349 5
em68kelfnbsd.c: $(srcdir)/emulparams/m68kelfnbsd.sh \
  $(srcdir)/emulparams/m68kelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/m68kelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m68kelfnbsd "$(tdir_m68kelfnbsd)"
a1389 1
  $(srcdir)/emulparams/mn10200.sh \
a1394 164
emsp430x1101.c: $(srcdir)/emulparams/msp430x1101.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1101 "$(tdir_msp430x1101)"
emsp430x1111.c: $(srcdir)/emulparams/msp430x1111.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1111 "$(tdir_msp430x1111)"
emsp430x1121.c: $(srcdir)/emulparams/msp430x1121.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1121 "$(tdir_msp430x1121)"
emsp430x1122.c: $(srcdir)/emulparams/msp430x1122.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1122 "$(tdir_msp430x1122)"
emsp430x1132.c: $(srcdir)/emulparams/msp430x1132.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1132 "$(tdir_msp430x1132)"
emsp430x1331.c: $(srcdir)/emulparams/msp430x1331.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1331 "$(tdir_msp430x1331)"
emsp430x1351.c: $(srcdir)/emulparams/msp430x1351.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1351 "$(tdir_msp430x1351)"
emsp430x149.c: $(srcdir)/emulparams/msp430x149.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x149 "$(tdir_msp430x149)"
emsp430x148.c: $(srcdir)/emulparams/msp430x148.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x148 "$(tdir_msp430x148)"
emsp430x449.c: $(srcdir)/emulparams/msp430x449.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x449 "$(tdir_msp430x449)"
emsp430x448.c: $(srcdir)/emulparams/msp430x448.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x448 "$(tdir_msp430x448)"
emsp430x447.c: $(srcdir)/emulparams/msp430x447.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x447 "$(tdir_msp430x447)"
emsp430x412.c: $(srcdir)/emulparams/msp430x412.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x412 "$(tdir_msp430x412)"
emsp430x413.c: $(srcdir)/emulparams/msp430x413.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x413 "$(tdir_msp430x413)"
emsp430x147.c: $(srcdir)/emulparams/msp430x147.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x147 "$(tdir_msp430x147)"
emsp430x135.c: $(srcdir)/emulparams/msp430x135.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x135 "$(tdir_msp430x135)"
emsp430x133.c: $(srcdir)/emulparams/msp430x133.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x133 "$(tdir_msp430x133)"
emsp430x110.c: $(srcdir)/emulparams/msp430x110.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x110 "$(tdir_msp430x110)"
emsp430x112.c: $(srcdir)/emulparams/msp430x112.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x112 "$(tdir_msp430x112)"
emsp430x122.c: $(srcdir)/emulparams/msp430x122.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x122 "$(tdir_msp430x122)"
emsp430x1222.c: $(srcdir)/emulparams/msp430x1222.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1222 "$(tdir_msp430x1222)"
emsp430x123.c: $(srcdir)/emulparams/msp430x123.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x123 "$(tdir_msp430x123)"
emsp430x1232.c: $(srcdir)/emulparams/msp430x1232.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x1232 "$(tdir_msp430x1232)"
emsp430x311.c: $(srcdir)/emulparams/msp430x311.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x311 "$(tdir_msp430x311)"
emsp430x312.c: $(srcdir)/emulparams/msp430x312.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x312 "$(tdir_msp430x312)"
emsp430x313.c: $(srcdir)/emulparams/msp430x313.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x313 "$(tdir_msp430x313)"
emsp430x314.c: $(srcdir)/emulparams/msp430x314.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x314 "$(tdir_msp430x314)"
emsp430x315.c: $(srcdir)/emulparams/msp430x315.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x315 "$(tdir_msp430x315)"
emsp430x323.c: $(srcdir)/emulparams/msp430x323.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x323 "$(tdir_msp430x323)"
emsp430x325.c: $(srcdir)/emulparams/msp430x325.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x325 "$(tdir_msp430x325)"
emsp430x336.c: $(srcdir)/emulparams/msp430x336.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x336 "$(tdir_msp430x336)"
emsp430x337.c: $(srcdir)/emulparams/msp430x337.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430_3.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x337 "$(tdir_msp430x337)"
emsp430x435.c: $(srcdir)/emulparams/msp430x435.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x435 "$(tdir_msp430x435)"
emsp430x436.c: $(srcdir)/emulparams/msp430x436.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x436 "$(tdir_msp430x436)"
emsp430x437.c: $(srcdir)/emulparams/msp430x437.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x437 "$(tdir_msp430x437)"
emsp430x167.c: $(srcdir)/emulparams/msp430x167.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x167 "$(tdir_msp430x167)"
emsp430x168.c: $(srcdir)/emulparams/msp430x167.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x168 "$(tdir_msp430x168)"
emsp430x169.c: $(srcdir)/emulparams/msp430x169.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x169 "$(tdir_msp430x169)"
emsp430x155.c: $(srcdir)/emulparams/msp430x155.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x155 "$(tdir_msp430x155)"
emsp430x156.c: $(srcdir)/emulparams/msp430x156.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x156 "$(tdir_msp430x156)"
emsp430x157.c: $(srcdir)/emulparams/msp430x157.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x157 "$(tdir_msp430x157)"
a1400 6
eor32.c: $(srcdir)/emulparams/or32.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/or32.sc ${GEN_DEPENDS}
	${GENSCRIPTS} or32 "$(tdir_or32)"
eor32elf.c: $(srcdir)/emulparams/or32elf.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} or32elf "$(tdir_or32elf)"
a1403 3
epdp11.c: $(srcdir)/emulparams/pdp11.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} pdp11 "$(tdir_pdp11)"
a1430 24
eshelf32.c: $(srcdir)/emulparams/shelf32.sh \
  $(BFDDIR)/libbfd.h $(INCDIR)/libiberty.h \
  $(srcdir)/emultempl/sh64elf.em $(INCDIR)/elf/sh.h $(BFDDIR)/elf-bfd.h \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf32 "$(tdir_shelf32)"
eshelf32_linux.c: $(srcdir)/emulparams/shelf32_linux.sh \
  $(srcdir)/emulparams/shelf32.sh \
  $(BFDDIR)/libbfd.h $(INCDIR)/libiberty.h \
  $(srcdir)/emultempl/sh64elf.em $(INCDIR)/elf/sh.h $(BFDDIR)/elf-bfd.h \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf32_linux "$(tdir_shelf32_linux)"
eshelf32_nbsd.c: $(srcdir)/emulparams/shelf32_nbsd.sh \
  $(srcdir)/emulparams/shelf32.sh \
  $(BFDDIR)/libbfd.h $(INCDIR)/libiberty.h \
  $(srcdir)/emultempl/sh64elf.em $(INCDIR)/elf/sh.h $(BFDDIR)/elf-bfd.h \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf32_nbsd "$(tdir_shelf32_nbsd)"
eshelf64.c: $(srcdir)/emulparams/shelf64.sh $(srcdir)/emulparams/shelf32.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf64 "$(tdir_shelf64)"
eshelf64_nbsd.c: $(srcdir)/emulparams/shelf64_nbsd.sh \
  $(srcdir)/emulparams/shelf32_nbsd.sh $(srcdir)/emulparams/shelf32.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf64_nbsd "$(tdir_shelf64_nbsd)"
a1431 1
  $(srcdir)/emulparams/shlelf_linux.sh \
a1436 15
eshelf_nbsd.c: $(srcdir)/emulparams/shelf_nbsd.sh \
  $(srcdir)/emulparams/shelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf_nbsd "$(tdir_shelf_nbsd)"
eshelf_nto.c: $(srcdir)/emulparams/shelf_nto.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shelf_nto "$(tdir_shelf_nto)"
eshlelf_nbsd.c: $(srcdir)/emulparams/shlelf_nbsd.sh \
  $(srcdir)/emulparams/shelf_nbsd.sh \
  $(srcdir)/emulparams/shelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf_nbsd "$(tdir_shlelf_nbsd)"
eshlelf_nto.c: $(srcdir)/emulparams/shlelf_nto.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf_nto "$(tdir_shlelf_nto)"
a1437 1
  $(srcdir)/emulparams/shelf.sh \
a1439 26
eshlelf32.c: $(srcdir)/emulparams/shlelf32.sh \
  $(BFDDIR)/libbfd.h $(INCDIR)/libiberty.h $(srcdir)/emulparams/shelf32.sh \
  $(srcdir)/emultempl/sh64elf.em $(INCDIR)/elf/sh.h $(BFDDIR)/elf-bfd.h \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf32 "$(tdir_shlelf32)"
eshlelf32_linux.c: $(srcdir)/emulparams/shlelf32_linux.sh \
  $(srcdir)/emulparams/shelf32_linux.sh $(srcdir)/emulparams/shelf32.sh \
  $(BFDDIR)/libbfd.h $(INCDIR)/libiberty.h \
  $(srcdir)/emultempl/sh64elf.em $(INCDIR)/elf/sh.h $(BFDDIR)/elf-bfd.h \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf32_linux "$(tdir_shlelf32_linux)"
eshlelf32_nbsd.c: $(srcdir)/emulparams/shlelf32_nbsd.sh \
  $(srcdir)/emulparams/shelf32_nbsd.sh $(srcdir)/emulparams/shelf32.sh \
  $(BFDDIR)/libbfd.h $(INCDIR)/libiberty.h \
  $(srcdir)/emultempl/sh64elf.em $(INCDIR)/elf/sh.h $(BFDDIR)/elf-bfd.h \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf32_nbsd "$(tdir_shlelf32_nbsd)"
eshlelf64.c: $(srcdir)/emulparams/shlelf64.sh \
  $(srcdir)/emulparams/shelf64.sh $(srcdir)/emulparams/shelf32.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf64 "$(tdir_shlelf64)"
eshlelf64_nbsd.c: $(srcdir)/emulparams/shlelf64_nbsd.sh \
  $(srcdir)/emulparams/shelf64_nbsd.sh \
  $(srcdir)/emulparams/shelf32_nbsd.sh $(srcdir)/emulparams/shelf32.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} shlelf64_nbsd "$(tdir_shlelf64_nbsd)"
a1440 1
  $(srcdir)/emulparams/sh.sh \
a1472 9
etic3xcoff.c: $(srcdir)/emulparams/tic3xcoff.sh \
  $(srcdir)/emultempl/ticoff.em $(srcdir)/scripttempl/tic4xcoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic3xcoff "$(tdir_tic4xcoff)"
etic3xcoff_onchip.c: $(srcdir)/emulparams/tic3xcoff_onchip.sh \
  $(srcdir)/emultempl/ticoff.em $(srcdir)/scripttempl/tic4xcoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic3xcoff_onchip "$(tdir_tic4xcoff)"
etic4xcoff.c: $(srcdir)/emulparams/tic4xcoff.sh \
  $(srcdir)/emultempl/ticoff.em $(srcdir)/scripttempl/tic4xcoff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} tic4xcoff "$(tdir_tic4xcoff)"
a1484 3
evaxnbsd.c: $(srcdir)/emulparams/vaxnbsd.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
	${GENSCRIPTS} vaxnbsd "$(tdir_vaxnbsd)"
d1602 3
a1604 11
# Build the man page from the texinfo file
# The sed command removes the no-adjust Nroff command so that
# the man output looks standard.
ld.1: $(srcdir)/ld.texinfo configdoc.texi ldver.texi
	touch $@@
	-$(TEXI2POD) $(MANCONF) < $(srcdir)/ld.texinfo > ld.pod
	-($(POD2MAN) ld.pod | \
	        sed -e '/^.if n .na/d' > $@@.T$$$$ && \
	        mv -f $@@.T$$$$ $@@) || \
	        (rm -f $@@.T$$$$ && exit 1)
	rm -f ld.pod
d1611 1
a1611 1
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(tooldir)/bin
d1615 1
a1615 1
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed -e 's/$(EXEEXT)$$//' -e 's/-new//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
d1620 3
a1622 3
	  rm -f $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT); \
	  ln $(DESTDIR)$(bindir)/$$n$(EXEEXT) $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT) >/dev/null 2>/dev/null \
	  || $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) ld-new$(EXEEXT) $(DESTDIR)$(tooldir)/bin/ld$(EXEEXT); \
d1626 1
a1626 1
	$(mkinstalldirs) $(DESTDIR)$(scriptdir)/ldscripts
d1628 1
a1628 1
	  $(INSTALL_DATA) $$f $(DESTDIR)$(scriptdir)/$$f ; \
d1630 1
a1630 5

# We want install to imply install-info as per GNU standards, despite the
# cygnus option.
install: install-info
diststuff: info $(EXTRA_DIST)
a1633 2
Makefile: $(BFDDIR)/configure.in

d1656 1
a1656 3
		-e 's!@@BFDDIR@@!$(BFDDIR)!'	\
		-e 's!@@SRCDIR@@!$(srcdir)!'	\
		-e 's!@@TOPDIR@@!'`echo $(srcdir) | sed -e s,/ld$$,,`'!'
a1674 23
@@MAINT@@.PHONY: mpw
@@MAINT@@mpw: $(srcdir)/mpw-ei386go32.c $(srcdir)/mpw-elfmips.c \
@@MAINT@@	$(srcdir)/mpw-em68kcoff.c $(srcdir)/mpw-eppcmac.c \
@@MAINT@@	$(srcdir)/mpw-esh.c $(srcdir)/mpw-idtmips.c
@@MAINT@@
@@MAINT@@$(srcdir)/mpw-ei386go32.c: ei386go32.c
@@MAINT@@	$(srcdir)/../move-if-change $< $@@
@@MAINT@@
@@MAINT@@$(srcdir)/mpw-elfmips.c: eelf32ebmip.c
@@MAINT@@	$(srcdir)/../move-if-change $< $@@
@@MAINT@@
@@MAINT@@$(srcdir)/mpw-em68kcoff.c: em68kcoff.c
@@MAINT@@	$(srcdir)/../move-if-change $< $@@
@@MAINT@@
@@MAINT@@$(srcdir)/mpw-eppcmac.c: eppcmacos.c
@@MAINT@@	$(srcdir)/../move-if-change $< $@@
@@MAINT@@
@@MAINT@@$(srcdir)/mpw-esh.c: esh.c
@@MAINT@@	$(srcdir)/../move-if-change $< $@@
@@MAINT@@
@@MAINT@@$(srcdir)/mpw-idtmips.c: emipsidt.c
@@MAINT@@	$(srcdir)/../move-if-change $< $@@

d1680 3
a1682 3
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/safe-ctype.h ld.h $(INCDIR)/bin-bugs.h \
  ldexp.h ldlang.h ldmisc.h ldgram.h ldmain.h ldctor.h
d1684 3
a1686 3
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  ld.h $(INCDIR)/bin-bugs.h ldmisc.h ldexp.h ldlang.h \
  ldfile.h ldemul.h ldmain.h ldemul-list.h
d1688 3
a1690 4
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h ldmain.h \
  ldmisc.h ldexp.h ldgram.h ldlang.h $(INCDIR)/libiberty.h \
  $(INCDIR)/safe-ctype.h
d1692 3
a1694 4
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/safe-ctype.h ld.h $(INCDIR)/bin-bugs.h \
  ldmisc.h ldexp.h ldlang.h ldfile.h ldmain.h ldgram.h \
  ldlex.h ldemul.h $(INCDIR)/libiberty.h $(INCDIR)/filenames.h
d1696 4
a1699 5
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h $(INCDIR)/obstack.h \
  $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h ldmain.h \
  ldexp.h ldlang.h ldgram.h ldlex.h ldmisc.h ldctor.h \
  ldfile.h ldemul.h $(INCDIR)/fnmatch.h $(INCDIR)/demangle.h
d1701 5
a1705 5
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/safe-ctype.h $(INCDIR)/libiberty.h $(INCDIR)/progress.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/filenames.h ld.h $(INCDIR)/bin-bugs.h \
  ldmain.h ldmisc.h ldwrite.h ldexp.h ldlang.h ldgram.h \
  ldlex.h ldfile.h ldemul.h ldctor.h
d1707 3
a1709 4
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/libiberty.h $(INCDIR)/demangle.h ld.h $(INCDIR)/bin-bugs.h \
  ldmisc.h ldexp.h ldlang.h ldgram.h ldlex.h ldmain.h \
  ldfile.h
d1711 2
a1712 3
  $(INCDIR)/symcat.h ../bfd/bfdver.h sysdep.h config.h \
  $(INCDIR)/fopen-same.h ld.h $(INCDIR)/bin-bugs.h ldver.h \
  ldexp.h ldlang.h ldfile.h ldemul.h ldmain.h
d1714 3
a1716 3
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/libiberty.h ld.h $(INCDIR)/bin-bugs.h \
  ldexp.h ldlang.h ldwrite.h ldmisc.h ldgram.h ldmain.h
d1718 6
a1723 7
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h $(INCDIR)/bfdlink.h \
  ld.h $(INCDIR)/bin-bugs.h ldmain.h ldmisc.h ldexp.h \
  ldlang.h ldgram.h ldlex.h ldfile.h ldver.h ldemul.h \
  $(INCDIR)/demangle.h
mri.o: mri.c ../bfd/bfd.h $(INCDIR)/ansidecl.h $(INCDIR)/symcat.h \
  sysdep.h config.h $(INCDIR)/fopen-same.h ld.h $(INCDIR)/bin-bugs.h \
d1726 3
a1728 3
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/libiberty.h ld.h $(INCDIR)/bin-bugs.h \
  ldmain.h ldmisc.h ldexp.h ldlang.h
d1730 5
a1734 5
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h \
  ld.h $(INCDIR)/bin-bugs.h ldexp.h ldlang.h ldwrite.h \
  ldmisc.h ldgram.h ldmain.h ldfile.h ldemul.h $(INCDIR)/coff/internal.h \
  $(BFDDIR)/libcoff.h deffile.h pe-dll.h
d1736 7
a1742 9
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h ldexp.h \
  ldver.h ldlang.h ldfile.h ldemul.h ldmisc.h ldmain.h \
  mri.h ldctor.h ldlex.h
ldlex.o: ldlex.c $(INCDIR)/ansidecl.h ../bfd/bfd.h \
  $(INCDIR)/symcat.h sysdep.h config.h $(INCDIR)/fopen-same.h \
  $(INCDIR)/safe-ctype.h $(INCDIR)/bfdlink.h ld.h $(INCDIR)/bin-bugs.h \
  ldmisc.h ldexp.h ldlang.h ldgram.h ldfile.h ldlex.h \
  ldmain.h $(INCDIR)/libiberty.h
d1744 2
a1745 3
  $(INCDIR)/safe-ctype.h ../bfd/bfd.h $(INCDIR)/symcat.h \
  sysdep.h config.h $(INCDIR)/fopen-same.h ld.h $(INCDIR)/bin-bugs.h \
  ldmisc.h deffile.h
@


1.1.1.10
log
@Binutils 2.15, with testsuites removed, and without gdb and libiberty.
@
text
@a234 1
	earmelfb.o \
a236 1
	earmelfb_linux.o \
d243 9
a252 1
	eavr1.o \
a255 1
	ecoff_i860.o \
a290 1
	eelf32mipswindiss.o \
a314 1
	eh8300sx.o \
a318 3
	eh8300sxelf.o \
	eh8300sxn.o \
	eh8300sxnelf.o \
a345 4
	em32relf.o \
	em32rlelf.o \
	em32relf_linux.o \
	em32rlelf_linux.o \
a368 2
	emsp430x110.o \
	emsp430x112.o \
d374 9
d384 1
a385 1
	emsp430x1222.o \
d387 2
a388 13
	emsp430x133.o \
	emsp430x135.o \
	emsp430x1331.o \
	emsp430x1351.o \
	emsp430x147.o \
	emsp430x148.o \
	emsp430x149.o \
	emsp430x155.o \
	emsp430x156.o \
	emsp430x157.o \
	emsp430x167.o \
	emsp430x168.o \
	emsp430x169.o \
a397 8
	emsp430x412.o \
	emsp430x413.o \
	emsp430xE423.o \
	emsp430xE425.o \
	emsp430xE427.o \
	emsp430xW423.o \
	emsp430xW425.o \
	emsp430xW427.o \
a399 1
	emsp430x437.o \
d403 6
a458 1
	  eelf32frvfd.o \
d1132 1
a1132 1
	for f in $(POTFILES); do echo $$f; done | LC_COLLATE= sort > tmp \
a1158 1

a1185 4
earmelfb.c: $(srcdir)/emulparams/armelfb.sh $(srcdir)/emulparams/armelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelfb "$(tdir_armelfb)"
a1197 5
earmelfb_linux.c: $(srcdir)/emulparams/armelfb_linux.sh \
  $(srcdir)/emulparams/armelf_linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/armelf.em \
  $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} armelfb_linux "$(tdir_armelfb_linux)"
d1231 33
a1263 1
eavr2.c: $(srcdir)/emulparams/avr2.sh \
d1266 2
a1267 2
	${GENSCRIPTS} avr2 "$(tdir_avr2)"
eavr1.c: $(srcdir)/emulparams/avr1.sh \
d1270 1
a1270 1
	${GENSCRIPTS} avr1 "$(tdir_avr2)"
d1274 1
a1274 1
	${GENSCRIPTS} avr3 "$(tdir_avr2)"
d1278 1
a1278 1
	${GENSCRIPTS} avr4 "$(tdir_avr2)"
d1282 1
a1282 4
	${GENSCRIPTS} avr5 "$(tdir_avr2)"
ecoff_i860.c: $(srcdir)/emulparams/coff_i860.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/i860coff.sc ${GEN_DEPENDS}
	${GENSCRIPTS} coff_i860 "$(tdir_coff_i860)"
a1319 3
eelf32am33lin.c: $(srcdir)/emulparams/elf32am33lin.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32am33lin "$(tdir_mn10300)"
a1339 9
em32rlelf.c: $(srcdir)/emulparams/m32rlelf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m32rlelf "$(tdir_m32rlelf)"
em32relf_linux.c: $(srcdir)/emulparams/m32relf_linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m32relf_linux "$(tdir_m32relf_linux)"
em32rlelf_linux.c: $(srcdir)/emulparams/m32rlelf_linux.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} m32rlelf_linux "$(tdir_m32rlelf_linux)"
d1350 1
a1350 1
  $(srcdir)/emulparams/elf32bmip.sh $(srcdir)/emultempl/mipself.em \
a1353 1
  $(srcdir)/emultempl/mipself.em \
d1357 1
a1357 1
  $(srcdir)/emulparams/elf32bmip.sh $(srcdir)/emultempl/irix.em \
d1361 1
a1361 1
  $(srcdir)/emulparams/elf32bmip.sh $(srcdir)/emultempl/mipself.em \
d1365 1
a1365 1
  $(srcdir)/emulparams/elf32bmip.sh $(srcdir)/emultempl/mipself.em \
a1369 1
  $(srcdir)/emultempl/mipself.em \
a1373 1
  $(srcdir)/emultempl/mipself.em \
d1377 1
a1377 1
  $(srcdir)/emulparams/elf32bmip.sh $(srcdir)/emultempl/mipself.em \
a1381 1
  $(srcdir)/emultempl/mipself.em \
a1384 1
  $(srcdir)/emultempl/irix.em \
a1388 1
  $(srcdir)/emultempl/mipself.em \
d1392 1
a1392 1
  $(srcdir)/emulparams/elf32bmip.sh $(srcdir)/emultempl/mipself.em \
a1394 3
eelf32mipswindiss.c: $(srcdir)/emulparams/elf32mipswindiss.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32mipswindiss "$(tdir_elf32mipswindiss)"
a1416 1
  $(srcdir)/emultempl/mipself.em \
d1475 1
a1475 2
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/ia64elf.em \
  $(srcdir)/emultempl/needrelax.em \
d1480 1
a1480 2
  $(srcdir)/emultempl/elf32.em $(srcdir)/emultempl/ia64elf.em \
  $(srcdir)/emultempl/needrelax.em \
d1494 1
a1494 1
  $(srcdir)/emulparams/elf32bmipn32.sh $(srcdir)/emultempl/irix.em \
a1559 6
eh8300sx.c: $(srcdir)/emulparams/h8300sx.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300sx.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300sx "$(tdir_h8300sx)"
eh8300sxn.c: $(srcdir)/emulparams/h8300sxn.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/h8300sxn.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300sxn "$(tdir_h8300sxn)"
a1578 8
eh8300sxelf.c: $(srcdir)/emulparams/h8300sxelf.sh \
  $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300sxelf "$(tdir_h8300sxelf)"
eh8300sxnelf.c: $(srcdir)/emulparams/h8300sxnelf.sh \
  $(srcdir)/emulparams/h8300elf.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} h8300sxnelf "$(tdir_h8300sxnelf)"
d1669 1
a1669 2
  $(srcdir)/emultempl/m68hc1xelf.em $(srcdir)/emultempl/elf32.em \
  $(srcdir)/scripttempl/elfm68hc11.sc ${GEN_DEPENDS}
d1672 1
a1672 2
  $(srcdir)/emultempl/m68hc1xelf.em $(srcdir)/emultempl/elf32.em \
  $(srcdir)/scripttempl/elfm68hc11.sc ${GEN_DEPENDS}
d1675 1
a1675 2
  $(srcdir)/emultempl/m68hc1xelf.em $(srcdir)/emultempl/elf32.em \
  $(srcdir)/scripttempl/elfm68hc12.sc ${GEN_DEPENDS}
d1678 1
a1678 2
  $(srcdir)/emultempl/m68hc1xelf.em $(srcdir)/emultempl/elf32.em \
  $(srcdir)/scripttempl/elfm68hc12.sc ${GEN_DEPENDS}
d1747 1
a1747 5
emsp430x110.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x110 "$(tdir_msp430x110)" msp430all
emsp430x112.c: $(srcdir)/emulparams/msp430all.sh \
d1750 2
a1751 2
	${GENSCRIPTS} msp430x112 "$(tdir_msp430x112)" msp430all
emsp430x1101.c: $(srcdir)/emulparams/msp430all.sh \
d1754 2
a1755 2
	${GENSCRIPTS} msp430x1101 "$(tdir_msp430x1101)" msp430all
emsp430x1111.c: $(srcdir)/emulparams/msp430all.sh \
d1758 2
a1759 2
	${GENSCRIPTS} msp430x1111 "$(tdir_msp430x1111)" msp430all
emsp430x1121.c: $(srcdir)/emulparams/msp430all.sh \
d1762 2
a1763 2
	${GENSCRIPTS} msp430x1121 "$(tdir_msp430x1121)" msp430all
emsp430x1122.c: $(srcdir)/emulparams/msp430all.sh \
d1766 2
a1767 2
	${GENSCRIPTS} msp430x1122 "$(tdir_msp430x1122)" msp430all
emsp430x1132.c: $(srcdir)/emulparams/msp430all.sh \
d1770 2
a1771 2
	${GENSCRIPTS} msp430x1132 "$(tdir_msp430x1132)" msp430all
emsp430x122.c: $(srcdir)/emulparams/msp430all.sh \
d1774 2
a1775 2
	${GENSCRIPTS} msp430x122 "$(tdir_msp430x122)" msp430all
emsp430x123.c: $(srcdir)/emulparams/msp430all.sh \
d1778 2
a1779 2
	${GENSCRIPTS} msp430x123 "$(tdir_msp430x123)" msp430all
emsp430x1222.c: $(srcdir)/emulparams/msp430all.sh \
d1782 2
a1783 2
	${GENSCRIPTS} msp430x1222 "$(tdir_msp430x1222)" msp430all
emsp430x1232.c: $(srcdir)/emulparams/msp430all.sh \
d1786 2
a1787 2
	${GENSCRIPTS} msp430x1232 "$(tdir_msp430x1232)" msp430all
emsp430x133.c: $(srcdir)/emulparams/msp430all.sh \
d1790 2
a1791 2
	${GENSCRIPTS} msp430x133 "$(tdir_msp430x133)" msp430all
emsp430x135.c: $(srcdir)/emulparams/msp430all.sh \
d1794 2
a1795 2
	${GENSCRIPTS} msp430x135 "$(tdir_msp430x135)" msp430all
emsp430x1331.c: $(srcdir)/emulparams/msp430all.sh \
d1798 2
a1799 2
	${GENSCRIPTS} msp430x1331 "$(tdir_msp430x1331)" msp430all
emsp430x1351.c: $(srcdir)/emulparams/msp430all.sh \
d1802 2
a1803 2
	${GENSCRIPTS} msp430x1351 "$(tdir_msp430x1351)" msp430all
emsp430x147.c: $(srcdir)/emulparams/msp430all.sh \
d1806 2
a1807 2
	${GENSCRIPTS} msp430x147 "$(tdir_msp430x147)" msp430all
emsp430x148.c: $(srcdir)/emulparams/msp430all.sh \
d1810 2
a1811 2
	${GENSCRIPTS} msp430x148 "$(tdir_msp430x148)" msp430all
emsp430x149.c: $(srcdir)/emulparams/msp430all.sh \
d1814 2
a1815 2
	${GENSCRIPTS} msp430x149 "$(tdir_msp430x149)" msp430all
emsp430x155.c: $(srcdir)/emulparams/msp430all.sh \
d1818 2
a1819 2
	${GENSCRIPTS} msp430x155 "$(tdir_msp430x155)" msp430all
emsp430x156.c: $(srcdir)/emulparams/msp430all.sh \
d1822 2
a1823 2
	${GENSCRIPTS} msp430x156 "$(tdir_msp430x156)" msp430all
emsp430x157.c: $(srcdir)/emulparams/msp430all.sh \
d1826 2
a1827 2
	${GENSCRIPTS} msp430x157 "$(tdir_msp430x157)" msp430all
emsp430x167.c: $(srcdir)/emulparams/msp430all.sh \
d1830 2
a1831 2
	${GENSCRIPTS} msp430x167 "$(tdir_msp430x167)" msp430all
emsp430x168.c: $(srcdir)/emulparams/msp430all.sh \
d1834 2
a1835 2
	${GENSCRIPTS} msp430x168 "$(tdir_msp430x168)" msp430all
emsp430x169.c: $(srcdir)/emulparams/msp430all.sh \
d1838 2
a1839 2
	${GENSCRIPTS} msp430x169 "$(tdir_msp430x169)" msp430all
emsp430x311.c: $(srcdir)/emulparams/msp430all.sh \
d1842 2
a1843 2
	${GENSCRIPTS} msp430x311 "$(tdir_msp430x311)" msp430all
emsp430x312.c: $(srcdir)/emulparams/msp430all.sh \
d1846 2
a1847 2
	${GENSCRIPTS} msp430x312 "$(tdir_msp430x312)" msp430all
emsp430x313.c: $(srcdir)/emulparams/msp430all.sh \
d1850 2
a1851 2
	${GENSCRIPTS} msp430x313 "$(tdir_msp430x313)" msp430all
emsp430x314.c: $(srcdir)/emulparams/msp430all.sh \
d1854 2
a1855 2
	${GENSCRIPTS} msp430x314 "$(tdir_msp430x314)" msp430all
emsp430x315.c: $(srcdir)/emulparams/msp430all.sh \
d1858 2
a1859 2
	${GENSCRIPTS} msp430x315 "$(tdir_msp430x315)" msp430all
emsp430x323.c: $(srcdir)/emulparams/msp430all.sh \
d1862 2
a1863 2
	${GENSCRIPTS} msp430x323 "$(tdir_msp430x323)" msp430all
emsp430x325.c: $(srcdir)/emulparams/msp430all.sh \
d1866 2
a1867 2
	${GENSCRIPTS} msp430x325 "$(tdir_msp430x325)" msp430all
emsp430x336.c: $(srcdir)/emulparams/msp430all.sh \
d1870 2
a1871 2
	${GENSCRIPTS} msp430x336 "$(tdir_msp430x336)" msp430all
emsp430x337.c: $(srcdir)/emulparams/msp430all.sh \
d1874 2
a1875 22
	${GENSCRIPTS} msp430x337 "$(tdir_msp430x337)" msp430all
emsp430x412.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x412 "$(tdir_msp430x412)" msp430all
emsp430x413.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430x413 "$(tdir_msp430x413)" msp430all
emsp430xE423.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430xE423 "$(tdir_msp430xE423)" msp430all
emsp430xE425.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430xE425 "$(tdir_msp430xE425)" msp430all
emsp430xE427.c: $(srcdir)/emulparams/msp430all.sh \
  $(srcdir)/emultempl/generic.em $(srcdir)/scripttempl/elf32msp430.sc \
  ${GEN_DEPENDS}
	${GENSCRIPTS} msp430xE427 "$(tdir_msp430xE427)" msp430all
emsp430xW423.c: $(srcdir)/emulparams/msp430all.sh \
d1878 2
a1879 2
	${GENSCRIPTS} msp430xW423 "$(tdir_msp430xW423)" msp430all
emsp430xW425.c: $(srcdir)/emulparams/msp430all.sh \
d1882 2
a1883 2
	${GENSCRIPTS} msp430xW425 "$(tdir_msp430xW425)" msp430all
emsp430xW427.c: $(srcdir)/emulparams/msp430all.sh \
d1886 2
a1887 2
	${GENSCRIPTS} msp430xW427 "$(tdir_msp430xW427)" msp430all
emsp430x435.c: $(srcdir)/emulparams/msp430all.sh \
d1890 2
a1891 2
	${GENSCRIPTS} msp430x435 "$(tdir_msp430x435)" msp430all
emsp430x436.c: $(srcdir)/emulparams/msp430all.sh \
d1894 2
a1895 2
	${GENSCRIPTS} msp430x436 "$(tdir_msp430x436)" msp430all
emsp430x437.c: $(srcdir)/emulparams/msp430all.sh \
d1898 2
a1899 2
	${GENSCRIPTS} msp430x437 "$(tdir_msp430x437)" msp430all
emsp430x447.c: $(srcdir)/emulparams/msp430all.sh \
d1902 2
a1903 2
	${GENSCRIPTS} msp430x447 "$(tdir_msp430x447)" msp430all
emsp430x448.c: $(srcdir)/emulparams/msp430all.sh \
d1906 2
a1907 2
	${GENSCRIPTS} msp430x448 "$(tdir_msp430x448)" msp430all
emsp430x449.c: $(srcdir)/emulparams/msp430all.sh \
d1910 1
a1910 1
	${GENSCRIPTS} msp430x449 "$(tdir_msp430x449)" msp430all
d1915 1
a1915 2
  $(srcdir)/emultempl/generic.em $(srcdir)/emultempl/netbsd.em \
  $(srcdir)/scripttempl/aout.sc ${GEN_DEPENDS}
a2104 4
eelf32frvfd.c: $(srcdir)/emulparams/elf32frvfd.sh \
  $(srcdir)/emulparams/elf32frv.sh \
  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
	${GENSCRIPTS} elf32frvfd "$(tdir_frv)"
d2346 1
a2346 2
  ldfile.h ldemul.h $(INCDIR)/fnmatch.h $(INCDIR)/demangle.h \
  $(INCDIR)/hashtab.h
d2354 4
a2357 4
  $(INCDIR)/symcat.h $(INCDIR)/bfdlink.h sysdep.h config.h \
  $(INCDIR)/fopen-same.h $(INCDIR)/libiberty.h $(INCDIR)/demangle.h \
  ld.h $(INCDIR)/bin-bugs.h ldmisc.h ldexp.h ldlang.h \
  ldgram.h ldlex.h ldmain.h ldfile.h
d2364 2
a2365 3
  $(INCDIR)/bfdlink.h $(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h \
  ld.h $(INCDIR)/bin-bugs.h ldexp.h ldlang.h ldwrite.h \
  ldmisc.h ldgram.h ldmain.h
d2390 1
a2390 1
ldlex.o: ldlex.c ../bfd/bfd.h $(INCDIR)/ansidecl.h \
@


