head	1.36;
access;
symbols
	OPENBSD_6_2:1.36.0.16
	OPENBSD_6_2_BASE:1.36
	OPENBSD_6_1:1.36.0.18
	OPENBSD_6_1_BASE:1.36
	OPENBSD_6_0:1.36.0.14
	OPENBSD_6_0_BASE:1.36
	OPENBSD_5_9:1.36.0.10
	OPENBSD_5_9_BASE:1.36
	OPENBSD_5_8:1.36.0.12
	OPENBSD_5_8_BASE:1.36
	OPENBSD_5_7:1.36.0.4
	OPENBSD_5_7_BASE:1.36
	OPENBSD_5_6:1.36.0.8
	OPENBSD_5_6_BASE:1.36
	OPENBSD_5_5:1.36.0.6
	OPENBSD_5_5_BASE:1.36
	OPENBSD_5_4:1.36.0.2
	OPENBSD_5_4_BASE:1.36
	OPENBSD_5_3:1.35.0.2
	OPENBSD_5_3_BASE:1.35
	OPENBSD_5_2:1.33.0.24
	OPENBSD_5_2_BASE:1.33
	OPENBSD_5_1_BASE:1.33
	OPENBSD_5_1:1.33.0.22
	OPENBSD_5_0:1.33.0.20
	OPENBSD_5_0_BASE:1.33
	OPENBSD_4_9:1.33.0.18
	OPENBSD_4_9_BASE:1.33
	OPENBSD_4_8:1.33.0.16
	OPENBSD_4_8_BASE:1.33
	OPENBSD_4_7:1.33.0.12
	OPENBSD_4_7_BASE:1.33
	OPENBSD_4_6:1.33.0.14
	OPENBSD_4_6_BASE:1.33
	OPENBSD_4_5:1.33.0.10
	OPENBSD_4_5_BASE:1.33
	OPENBSD_4_4:1.33.0.8
	OPENBSD_4_4_BASE:1.33
	OPENBSD_4_3:1.33.0.6
	OPENBSD_4_3_BASE:1.33
	OPENBSD_4_2:1.33.0.4
	OPENBSD_4_2_BASE:1.33
	OPENBSD_4_1:1.33.0.2
	OPENBSD_4_1_BASE:1.33
	OPENBSD_4_0:1.31.0.8
	OPENBSD_4_0_BASE:1.31
	OPENBSD_3_9:1.31.0.6
	OPENBSD_3_9_BASE:1.31
	OPENBSD_3_8:1.31.0.4
	OPENBSD_3_8_BASE:1.31
	OPENBSD_3_7:1.31.0.2
	OPENBSD_3_7_BASE:1.31
	BINUTILS_2_15:1.1.1.10
	OPENBSD_3_6:1.29.0.2
	OPENBSD_3_6_BASE:1.29
	BINUTILS-2_14:1.1.1.9
	OPENBSD_3_5:1.28.0.2
	OPENBSD_3_5_BASE:1.28
	OPENBSD_3_4:1.27.0.2
	OPENBSD_3_4_BASE:1.27
	OPENBSD_3_3:1.26.0.4
	OPENBSD_3_3_BASE:1.26
	OPENBSD_3_2:1.26.0.2
	OPENBSD_3_2_BASE:1.26
	binutils-2_11_2:1.1.1.8
	OPENBSD_3_1:1.23.0.4
	OPENBSD_3_1_BASE:1.23
	OPENBSD_3_0:1.23.0.2
	OPENBSD_3_0_BASE:1.23
	BINUTILS-2_10_1:1.1.1.7
	OPENBSD_2_9:1.20.0.2
	OPENBSD_2_9_BASE:1.20
	OPENBSD_2_8:1.18.0.2
	OPENBSD_2_8_BASE:1.18
	BINUTILS-2_10:1.1.1.6
	OPENBSD_2_7:1.14.0.10
	OPENBSD_2_7_BASE:1.14
	new-binutils:1.14.0.8
	OPENBSD_2_6:1.14.0.6
	OPENBSD_2_6_BASE:1.14
	OPENBSD_2_5:1.14.0.4
	OPENBSD_2_5_BASE:1.14
	OPENBSD_2_4:1.14.0.2
	OPENBSD_2_4_BASE:1.14
	OPENBSD_2_3:1.13.0.6
	OPENBSD_2_3_BASE:1.13
	OPENBSD_2_2:1.13.0.4
	OPENBSD_2_2_BASE:1.13
	BINUTILS-2_8_1:1.1.1.5
	OPENBSD_2_1:1.13.0.2
	OPENBSD_2_1_BASE:1.13
	CYGNUS-961112:1.1.1.4
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	CYGNUS-960904:1.1.1.3
	CYGNUS-960609:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.36
date	2013.07.05.21.09.22;	author miod;	state Exp;
branches;
next	1.35;

1.35
date	2013.02.02.13.26.18;	author miod;	state Exp;
branches;
next	1.34;

1.34
date	2013.01.01.00.02.01;	author miod;	state Exp;
branches;
next	1.33;

1.33
date	2006.10.08.21.12.39;	author miod;	state Exp;
branches;
next	1.32;

1.32
date	2006.10.06.20.58.17;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2005.01.19.22.40.19;	author grange;	state Exp;
branches;
next	1.30;

1.30
date	2004.11.02.20.45.46;	author miod;	state Exp;
branches;
next	1.29;

1.29
date	2004.05.17.21.54.50;	author drahn;	state Exp;
branches;
next	1.28;

1.28
date	2004.02.10.22.28.05;	author mickey;	state Exp;
branches;
next	1.27;

1.27
date	2003.04.17.03.44.30;	author drahn;	state Exp;
branches;
next	1.26;

1.26
date	2002.08.11.22.51.48;	author art;	state Exp;
branches;
next	1.25;

1.25
date	2002.05.13.18.33.13;	author fgsch;	state Exp;
branches;
next	1.24;

1.24
date	2002.05.13.17.07.42;	author fgsch;	state Exp;
branches;
next	1.23;

1.23
date	2001.09.13.10.44.50;	author kevlo;	state Exp;
branches;
next	1.22;

1.22
date	2001.09.05.22.59.01;	author art;	state Exp;
branches;
next	1.21;

1.21
date	2001.06.09.22.29.40;	author espie;	state Exp;
branches;
next	1.20;

1.20
date	2001.01.31.07.21.36;	author art;	state Exp;
branches;
next	1.19;

1.19
date	2000.11.20.21.52.50;	author tomo;	state Exp;
branches;
next	1.18;

1.18
date	2000.10.29.22.53.47;	author miod;	state Exp;
branches;
next	1.17;

1.17
date	2000.09.15.01.14.04;	author rahnds;	state Exp;
branches;
next	1.16;

1.16
date	2000.09.12.23.08.03;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2000.09.12.19.12.42;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	98.05.04.21.22.50;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	97.04.13.21.08.01;	author pefo;	state Exp;
branches;
next	1.12;

1.12
date	97.01.10.06.54.51;	author imp;	state Exp;
branches;
next	1.11;

1.11
date	96.12.22.18.11.39;	author rahnds;	state Exp;
branches;
next	1.10;

1.10
date	96.11.24.11.29.51;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	96.11.23.03.52.25;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	96.10.31.00.31.18;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	96.09.28.12.37.19;	author pefo;	state Exp;
branches;
next	1.6;

1.6
date	96.09.04.19.09.10;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.08.01.10.13.56;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.07.14.20.41.31;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	96.06.09.20.12.52;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.03.09.21.03.31;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.09.11;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.09.11;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.09.19.35.23;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.09.04.17.34.47;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	96.11.19.14.38.32;	author niklas;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	97.05.29.09.28.15;	author niklas;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2000.09.12.14.48.05;	author espie;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2001.06.09.22.08.49;	author espie;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2002.05.13.14.00.16;	author fgsch;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2004.05.17.20.42.48;	author drahn;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2004.11.02.20.23.19;	author miod;	state Exp;
branches;
next	;


desc
@@


1.36
log
@VAX ELF toolchain, using `%' as the register prefix. Heavily based upon
NetBSD.
@
text
@# This is the linker target specific file.  This is invoked by the
# autoconf generated configure script.  Putting it in a separate shell
# file lets us skip running autoconf when modifying target specific
# information.

# This file switches on the shell variable ${targ}, and sets the
# following shell variables:
#  targ_emul		name of linker emulation to use
#  targ_extra_emuls	additional linker emulations to provide
#  targ_extra_libpath	additional linker emulations using LIB_PATH
#  targ_extra_ofiles	additional objects needed by the emulation
#  NATIVE_LIB_DIRS	library directories to search on this host
#			(if we are a native or sysrooted linker)

targ_extra_emuls=
targ_extra_ofiles=

case "${targ}" in
am33_2.0-*-linux*)	targ_emul=elf32am33lin ;;
arm-epoc-pe)		targ_emul=arm_epoc_pe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
arm-*-wince)		targ_emul=armpe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
arm-*-pe)		targ_emul=armpe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
arc-*-elf*)		targ_emul=arcelf ;;
avr-*-*)		targ_emul=avr2
			targ_extra_emuls="avr1 avr3 avr4 avr5" ;;
cris-*-*aout*)		targ_emul=crisaout
			targ_extra_emuls="criself crislinux"
			targ_extra_libpath=$targ_extra_emuls ;;
cris-*-linux-gnu*)	targ_emul=crislinux ;;
cris-*-*)		targ_emul=criself
			targ_extra_emuls="crisaout crislinux"
			targ_extra_libpath=$targ_extra_emuls ;;
d10v-*-*)		targ_emul=d10velf ;;
d30v-*-*ext*)		targ_emul=d30v_e; targ_extra_emuls="d30velf d30v_o" ;;
d30v-*-*onchip*)	targ_emul=d30v_o; targ_extra_emuls="d30velf d30v_e" ;;
d30v-*-*)		targ_emul=d30velf; targ_extra_emuls="d30v_e d30v_o" ;;
dlx-*-elf*)		targ_emul=elf32_dlx ;;
sparc64-*-aout*)	targ_emul=sparcaout ;;
sparc64-*-elf*)		targ_emul=elf64_sparc ;;
sparc-sun-sunos4*) 	targ_emul=sun4 ;;
sparclite*-*-elf)	targ_emul=elf32_sparc ;;
sparclite*-*-coff)	targ_emul=coff_sparc ;;
sparclite*-fujitsu-*)	targ_emul=sparcaout ;;
sparc*-*-aout)		targ_emul=sparcaout ;;
sparc*-*-coff)		targ_emul=coff_sparc ;;
sparc*-*-elf)		targ_emul=elf32_sparc ;;
sparc*-*-sysv4*)	targ_emul=elf32_sparc ;;
sparc64-*-freebsd* | sparcv9-*-freebsd* | sparc64-*-kfreebsd*-gnu | sparcv9-*-kfreebsd*-gnu)
			targ_emul=elf64_sparc_fbsd
			targ_extra_emuls="elf64_sparc elf32_sparc"
			targ_extra_libpath=$targ_extra_emuls
			tdir_elf32_sparc=`echo ${targ_alias} | sed -e 's/64//'`
			;;
sparc*-*-linux*aout*)	targ_emul=sparclinux
			targ_extra_emuls="elf32_sparc sun4"
			tdir_elf32_sparc=`echo ${targ_alias} | sed -e 's/aout//'`
			tdir_sun4=sparc-sun-sunos4
			;;
sparc64-*-linux-gnu*)	targ_emul=elf64_sparc
			targ_extra_emuls="elf32_sparc sparclinux sun4"
			targ_extra_libpath=elf32_sparc
			tdir_elf32_sparc=`echo ${targ_alias} | sed -e 's/64//'`
			tdir_sparclinux=${tdir_elf32_sparc}aout
			tdir_sun4=sparc-sun-sunos4
			;;
sparc*-*-linux-gnu*)	targ_emul=elf32_sparc
			targ_extra_emuls="sparclinux elf64_sparc sun4"
			targ_extra_libpath=elf64_sparc
			tdir_sparclinux=${targ_alias}aout
			tdir_elf64_sparc=`echo ${targ_alias} | sed -e 's/32//'`
			tdir_sun4=sparc-sun-sunos4
			;;
sparc*-*-lynxos*)	targ_emul=sparclynx ;;
sparc64-*-netbsd*)	targ_emul=elf64_sparc
			targ_extra_emuls="elf32_sparc"
			;;
sparc64-*-openbsd*)	targ_emul=elf64_sparc_obsd ;;
sparc*-*-netbsd*elf*)	targ_emul=elf32_sparc ;;
sparc*-*-netbsd*)	targ_emul=sparcnbsd ;;
sparc-*-openbsd[0-2].*|  sparc-*-openbsd3.[0-1])
			targ_emul=sparcobsd ;;
sparc-*-openbsd*)	targ_emul=elf32_sparc_obsd ;;
sparc-*-solaris2.[0-6] | sparc-*-solaris2.[0-6].*)
			targ_emul=elf32_sparc ;;
sparc-*-solaris2*)	targ_emul=elf32_sparc
			targ_extra_emuls="elf64_sparc"
			targ_extra_libpath=$targ_extra_emuls
			tdir_elf64_sparc=`echo ${targ_alias} | sed -e 's/32//'`
			;;
sparcv9-*-solaris2* | sparc64-*-solaris2*)
			targ_emul=elf64_sparc
			targ_extra_emuls="elf32_sparc"
			targ_extra_libpath=$targ_extra_emuls
			tdir_elf32_sparc=`echo ${targ_alias} | sed -e 's/64//'`
			;;
sparc*-*-solaris2*)	targ_emul=elf32_sparc ;;
sparc*-wrs-vxworks*)	targ_emul=sparcaout ;;
sparc*-*-rtemsaout*)    targ_emul=sparcaout ;;
sparc*-*-rtemself*)     targ_emul=elf32_sparc ;;
sparc*-*-rtems*)        targ_emul=elf32_sparc ;;
i860-*-coff)		targ_emul=coff_i860 ;;
i860-stardent-sysv4* | i860-stardent-elf*)
			targ_emul=elf32_i860 ;;
i960-wrs-vxworks5.0*)	targ_emul=gld960 ;;
i960-wrs-vxworks5*)	targ_emul=gld960coff ;;
i960-wrs-vxworks*)	targ_emul=gld960 ;;
i960-*-coff)		targ_emul=gld960coff ;;
i960-intel-nindy)	targ_emul=gld960 ;;
i960-*-rtems*)		targ_emul=gld960coff ;;
i960-*-elf*)		targ_emul=elf32_i960 ;;
ia64-*-elf*)		targ_emul=elf64_ia64 ;;
ia64-*-freebsd* | ia64-*-kfreebsd*-gnu)
		        targ_emul=elf64_ia64_fbsd
			targ_extra_emuls="elf64_ia64" ;;
ia64-*-netbsd*)		targ_emul=elf64_ia64 ;;
ia64-*-linux*)		targ_emul=elf64_ia64 ;;
ia64-*-aix*)		targ_emul=elf64_aix ;;
m32r*le-*-elf*)         targ_emul=m32rlelf ;;
m32r*-*-elf*)           targ_emul=m32relf ;;
m32r*le-*-linux-gnu*)   targ_emul=m32rlelf_linux ;;
m32r*-*-linux-gnu*)     targ_emul=m32relf_linux ;;
m68hc11-*-*|m6811-*-*)	targ_emul=m68hc11elf 
			targ_extra_emuls="m68hc11elfb m68hc12elf m68hc12elfb" ;;
m68hc12-*-*|m6812-*-*)	targ_emul=m68hc12elf 
			targ_extra_emuls="m68hc12elfb m68hc11elf m68hc11elfb" ;;
m68*-sun-sunos[34]*)	targ_emul=sun3 ;;
m68*-wrs-vxworks*)	targ_emul=sun3 ;;
m68*-ericsson-ose)	targ_emul=sun3 ;;
m68*-apple-aux*)	targ_emul=m68kaux ;;
*-tandem-none)		targ_emul=st2000 ;;
i370-*-elf* | i370-*-linux-gnu*) targ_emul=elf32i370 ;;
i[3-7]86-*-nto-qnx*)	targ_emul=i386nto ;;
i[3-7]86-*-vsta)	targ_emul=vsta ;;
i[3-7]86-go32-rtems*)	targ_emul=i386go32 ;;
i[3-7]86-*-go32)	targ_emul=i386go32 ;;
i[3-7]86-*-msdosdjgpp*) targ_emul=i386go32 ;;
i[3-7]86-*-aix*)	targ_emul=i386coff ;;
i[3-7]86-*-sco*)	targ_emul=i386coff ;;
i[3-7]86-*-isc*)	targ_emul=i386coff ;;
i[3-7]86-*-lynxos*)	targ_emul=i386lynx ;;
i[3-7]86-*-coff)	targ_emul=i386coff ;;
i[3-7]86-*-rtemscoff*)	targ_emul=i386coff ;;
i[3-7]86-*-rtemself*)	targ_emul=elf_i386 ;;
i[3-7]86-*-rtems*)	targ_emul=elf_i386 ;;
i[3-7]86-*-aros*)	targ_emul=elf_i386 ;;
i[3-7]86-*-bsd)		targ_emul=i386bsd ;;
i[3-7]86-*-bsd386)	targ_emul=i386bsd ;;
i[3-7]86-*-bsdi*)	targ_emul=i386bsd ;;
i[3-7]86-*-aout)	targ_emul=i386aout ;;
i[3-7]86-*-linux*aout*)	targ_emul=i386linux
			targ_extra_emuls=elf_i386
			tdir_elf_i386=`echo ${targ_alias} | sed -e 's/aout//'`
			;;
i[3-7]86-*-linux*oldld)	targ_emul=i386linux; targ_extra_emuls=elf_i386 ;;
i[3-7]86-*-linux-gnu*)	targ_emul=elf_i386
			targ_extra_emuls=i386linux
			if test x${want64} = xtrue; then
			  targ_extra_emuls="$targ_extra_emuls elf_x86_64"
			fi
			tdir_i386linux=${targ_alias}aout
			;;
x86_64-*-linux-gnu*)	targ_emul=elf_x86_64
			targ_extra_emuls="elf_i386 i386linux"
			targ_extra_libpath=elf_i386
			tdir_i386linux=`echo ${targ_alias}aout | sed -e 's/x86_64/i386/'`
			tdir_elf_i386=`echo ${targ_alias} | sed -e 's/x86_64/i386/'`
			;;
i[3-7]86-*-sysv[45]*)	targ_emul=elf_i386 ;;
i[3-7]86-*-solaris2*)	targ_emul=elf_i386_ldso
                        targ_extra_emuls="elf_i386"
                        ;;
i[3-7]86-*-unixware)	targ_emul=elf_i386 ;;
i[3-7]86-*-solaris*)	targ_emul=elf_i386_ldso
                        targ_extra_emuls="elf_i386"
                        ;;
i[3-7]86-*-netbsdelf* | \
i[3-7]86-*-netbsd*-gnu* | \
i[3-7]86-*-knetbsd*-gnu)
			targ_emul=elf_i386
			targ_extra_emuls=i386nbsd
			;;
i[3-7]86-*-netbsdpe*)	targ_emul=i386pe
			targ_extra_ofiles="deffilep.o pe-dll.o"
			;;
i[3-7]86-*-netbsd*)	targ_emul=i386nbsd
			targ_extra_emuls=elf_i386
			;;
x86_64-*-netbsd*)	targ_emul=elf_x86_64
			targ_extra_emuls="elf_i386 i386nbsd"
			tdir_elf_i386=`echo ${targ_alias} | \
			    sed -e 's/x86_64/i386/'`
			case "${tdir_elf_i386}" in
			*-netbsdelf*) ;;
			*)
				tdir_elf_i386=`echo ${tdir_elf_i386} | \
				    sed -e 's/netbsd/netbsdelf/'`
				;;
			esac
			;;
i[3-7]86-*-netware)	targ_emul=i386nw ;;
i[3-7]86-*-elf*)	targ_emul=elf_i386 ;;
i[3-7]86-*-kaos*)	targ_emul=elf_i386 ;;
i[3-7]86-*-freebsdaout* | i[3-7]86-*-freebsd[12].* | i[3-7]86-*-freebsd[12])
			targ_emul=i386bsd ;;
i[3-7]86-*-freebsd* | i[3-7]86-*-kfreebsd*-gnu)
		        targ_emul=elf_i386_fbsd
			targ_extra_emuls="elf_i386 i386bsd" ;;
x86_64-*-freebsd* | x86_64-*-kfreebsd*-gnu)
			targ_emul=elf_x86_64_fbsd
			targ_extra_emuls="elf_i386_fbsd elf_x86_64 elf_i386"
			tdir_elf_i386=`echo ${targ_alias} \
			    | sed -e 's/x86_64/i386/'`
			;;
i[3-7]86-*-openbsd[0-2]* | i[3-7]86-*-openbsd3.[0-2])
			targ_emul=i386obsd ;;
i[3-7]86-*-openbsd*)	targ_emul=elf_i386_obsd ;;
x86_64-*-openbsd*)	targ_emul=elf_x86_64_obsd
			targ_extra_emuls="elf_i386_obsd elf_i386"
			tdir_elf_i386_obsd=`echo ${targ_alias} | \
			    sed -e 's/x86_64/i386/'`
			;;
i[3-7]86-*-sysv*)	targ_emul=i386coff ;;
i[3-7]86-*-ptx*)	targ_emul=i386coff ;;
i[3-7]86-*-mach*)	targ_emul=i386mach ;;
i[3-7]86-*-gnu*)	targ_emul=elf_i386 ;;
i[3-7]86-*-msdos*)	targ_emul=i386msdos; targ_extra_emuls=i386aout ;;
i[3-7]86-*-moss*)	targ_emul=i386moss; targ_extra_emuls=i386msdos ;;
i[3-7]86-*-winnt*)	targ_emul=i386pe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
i[3-7]86-*-pe)		targ_emul=i386pe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
i[3-7]86-*-cygwin*)	targ_emul=i386pe ;
			targ_extra_ofiles="deffilep.o pe-dll.o"
			test "$targ" != "$host" && LIB_PATH='${tooldir}/lib/w32api' ;;
i[3-7]86-*-mingw32*)	targ_emul=i386pe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
i[3-7]86-*-interix*)	targ_emul=i386pe_posix;
 			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
i[3-7]86-*-beospe*)	targ_emul=i386beos ;;
i[3-7]86-*-beos*)	targ_emul=elf_i386_be ;;
i[3-7]86-*-vxworks*)	targ_emul=elf_i386 ;;
i[3-7]86-*-chaos)	targ_emul=elf_i386_chaos ;;
a29k-*-udi)		targ_emul=sa29200 ;;
a29k-*-ebmon)		targ_emul=ebmon29k ;;
a29k-*-*)		targ_emul=a29k ;;
#  arm-*-riscix*)		targ_emul=riscix ;;
arm-*-aout | armel-*-aout) targ_emul=armaoutl ;;
armeb-*-aout)		targ_emul=armaoutb ;;
arm-*-coff)		targ_emul=armcoff ;;
arm-*-freebsd* | arm-*-kfreebsd*-gnu)
	       		targ_emul=armelf_fbsd
			targ_extra_emuls="armelf" ;;
armeb-*-netbsdelf*)	targ_emul=armelfb_nbsd;
			targ_extra_emuls="armelf_nbsd armelf armnbsd" ;;
arm-*-netbsdelf*)	targ_emul=armelf_nbsd;
			targ_extra_emuls="armelfb_nbsd armelf armnbsd" ;;
arm-*-netbsd*)		targ_emul=armnbsd;
			targ_extra_emuls="armelf armelf_nbsd armelfb_nbsd"  ;;
arm-*-nto*)		targ_emul=armnto ;;
armeb-*-openbsd*)	targ_emul=armelfb_obsd
			targ_extra_emuls="armelf_obsd" ;;
arm-*-openbsd*)		targ_emul=armelf_obsd
			targ_extra_emuls="armelfb_obsd" ;;
arm-*-rtems*)		targ_emul=armelf ;;
armeb-*-elf)		targ_emul=armelfb ;;
arm-*-elf | arm-*-vxworks)
	  		targ_emul=armelf ;;
arm-*-kaos*)		targ_emul=armelf ;;
arm9e-*-elf)		targ_emul=armelf ;;
arm-*-oabi)		targ_emul=armelf_oabi ;;
arm*b-*-linux-gnu*)	targ_emul=armelfb_linux; targ_extra_emuls=armelfb ;;
arm*-*-linux-gnu*)	targ_emul=armelf_linux; targ_extra_emuls=armelf ;;
arm*-*-uclinux*)	targ_emul=armelf_linux; targ_extra_emuls=armelf ;;
arm*-*-conix*)		targ_emul=armelf ;;
thumb-*-linux-gnu* | thumb-*-uclinux*)	targ_emul=armelf_linux; targ_extra_emuls=armelf ;;
strongarm-*-coff)	targ_emul=armcoff ;;
strongarm-*-elf)	targ_emul=armelf ;;
strongarm-*-kaos*)	targ_emul=armelf ;;
thumb-*-coff)		targ_emul=armcoff ;;
thumb-*-elf)		targ_emul=armelf ;;
thumb-*-oabi)           targ_emul=armelf_oabi ;;
thumb-epoc-pe)		targ_emul=arm_epoc_pe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
thumb-*-pe)		targ_emul=armpe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
xscale-*-coff)		targ_emul=armcoff ;;
xscale-*-elf)		targ_emul=armelf ;;
h8300-*-hms* | h8300-*-coff* | h8300-*-rtems*)
			targ_emul=h8300; targ_extra_emuls="h8300h h8300s h8300hn h8300sn h8300sx h8300sxn"
			;;
h8300-*-elf*)
			targ_emul=h8300elf;
			targ_extra_emuls="h8300helf h8300self h8300hnelf h8300snelf h8300sxelf h8300sxnelf"
			;;
h8500-*-hms* | h8500-*-coff* | h8500-*-rtems*)
			targ_emul=h8500
			targ_extra_emuls="h8500s h8500b h8500m h8500c"
			;;
sh-*-linux*)
			targ_emul=shlelf_linux
			targ_extra_emuls=shelf_linux
			targ_extra_libpath=shelf_linux
			;;
sh64eb-*-linux*)	targ_emul=shelf32_linux
			targ_extra_emuls="shlelf32_linux"
			;;
sh64-*-linux*)		targ_emul=shlelf32_linux
			targ_extra_emuls="shelf32_linux"
			targ_extra_libpath=shelf32_linux
			;;
sh*eb-*-linux*)
			targ_emul=shelf_linux
			;;
sh*-*-linux*)
			targ_emul=shlelf_linux
			;;
sh5le-*-netbsd*)
			targ_emul=shlelf32_nbsd
			targ_extra_emuls="shelf32_nbsd shelf64_nbsd shlelf64_nbsd shelf_nbsd shlelf_nbsd"
			;;
sh5-*-netbsd*)
			targ_emul=shelf32_nbsd
			targ_extra_emuls="shlelf32_nbsd shelf64_nbsd shlelf64_nbsd shelf_nbsd shlelf_nbsd"
			;;
sh64le-*-netbsd*)
			targ_emul=shlelf64_nbsd
			targ_extra_emuls="shelf64_nbsd shelf32_nbsd shlelf32_nbsd shelf_nbsd shlelf_nbsd"
			;;
sh64-*-netbsd*)
			targ_emul=shelf64_nbsd
			targ_extra_emuls="shlelf64_nbsd shelf32_nbsd shlelf32_nbsd shelf_nbsd shlelf_nbsd"
			;;
sh*l*-*-netbsdelf*)
			targ_emul=shlelf_nbsd
			targ_extra_emuls=shelf_nbsd
			;;
sh*-*-netbsdelf*)
			targ_emul=shelf_nbsd
			targ_extra_emuls=shlelf_nbsd
			;;
sh*-*-openbsd*)
			targ_emul=shlelf_obsd
			targ_extra_emuls=shelf_obsd
			;;
shle*-*-elf* | sh[1234]*le*-*-elf | shle*-*-kaos*)
			targ_emul=shlelf
			targ_extra_emuls="shelf shl sh"
			;;
sh-*-rtemscoff*)	targ_emul=sh; targ_extra_emuls=shl ;;
sh-*-elf* | sh[1234]*-*-elf | sh-*-rtems* | sh-*-kaos* | sh-*-vxworks)
			targ_emul=shelf
			targ_extra_emuls="shlelf sh shl"
			;;
sh-*-nto*)		targ_emul=shelf_nto
			targ_extra_emuls=shlelf_nto
			;;
sh-*-pe)		targ_emul=shpe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
sh-*-*)			targ_emul=sh; targ_extra_emuls=shl ;;
sh64le-*-elf*)
			targ_emul=shlelf
			targ_extra_emuls="shelf shlelf32 shelf32 shlelf64 shelf64"
			targ_extra_libpath=$targ_extra_emuls
			;;
sh64-*-elf*)
			targ_emul=shelf
			targ_extra_emuls="shlelf shelf32 shlelf32 shelf64 shlelf64"
			targ_extra_libpath=$targ_extra_emuls
			;;
m68k-sony-*)		targ_emul=news ;;
m68k-hp-bsd*)		targ_emul=hp300bsd ;;
m68*-motorola-sysv*)	targ_emul=delta68 ;;
m68*-*-aout)		targ_emul=m68kaout ;;
m68*-*-coff)		targ_emul=m68kcoff ;;
m68*-*-elf)		targ_emul=m68kelf ;;
m68*-*-hpux*)		targ_emul=hp3hpux ;;
m68k-*-linux*aout*)	targ_emul=m68klinux
			targ_extra_emuls=m68kelf
			tdir_m68kelf=`echo ${targ_alias} | sed -e 's/aout//'`
			;;
m68k-*-linux-gnu*)	targ_emul=m68kelf
			targ_extra_emuls=m68klinux
			tdir_m68klinux=`echo ${targ_alias} | sed -e 's/linux/linuxaout/'`
			;;
m68k-*-uclinux*)	targ_emul=m68kelf ;;
m68*-*-gnu*)		targ_emul=m68kelf ;;
m68*-*-lynxos*)		targ_emul=m68klynx ;;
m68*-*-netbsd*4k*)	targ_emul=m68k4knbsd
			targ_extra_emuls="m68knbsd m68kelfnbsd" ;;
m68*-*-netbsdelf*)	targ_emul=m68kelfnbsd
			targ_extra_emuls="m68knbsd m68k4knbsd" ;;
m68*-*-netbsdaout* | m68*-*-netbsd*)
			targ_emul=m68knbsd
			targ_extra_emuls="m68kelfnbsd m68k4knbsd" ;;
m68*-*-openbsd*)	targ_emul=m68kelfobsd
			targ_extra_emuls="m68knbsd m68k4knbsd" ;;
m68*-*-psos*)		targ_emul=m68kpsos ;;
m68*-*-rtemscoff*)	targ_emul=m68kcoff ;;
m68*-*-rtems*)		targ_emul=m68kelf ;;
m88*-*-openbsd*)	targ_emul=elf32m88k_obsd
			targ_extra_emul="m88kopenbsd m88kbcs" ;;
m88*-*-*)		targ_emul=m88kbcs ;;
hppa*64*-*-linux-gnu*)	targ_emul=hppa64linux ;;
hppa*64*-*)		targ_emul=elf64hppa ;;
hppa*-*-linux-gnu*)	targ_emul=hppalinux ;;
hppa*-*-*elf*)		targ_emul=hppaelf ;;
hppa*-*-lites*)		targ_emul=hppaelf ;;
hppa*-*-netbsd*)	targ_emul=hppanbsd ;;
hppa*-*-openbsd*)	targ_emul=hppaobsd ;;
hppa*-*-rtems*)		targ_emul=hppaelf ;;
vax-dec-ultrix* | vax-dec-bsd*) targ_emul=vax ;;
vax-*-netbsdelf*)	targ_emul=elf32vax
			targ_extra_emuls=vaxnbsd ;;
vax-*-netbsdaout* | vax-*-netbsd*)
			targ_emul=vaxnbsd
			targ_extra_emuls=elf32vax ;;
vax-*-openbsd*)		targ_emul=elf32vax_obsd
			targ_extra_emuls=vaxnbsd ;;
vax-*-linux-gnu*)	targ_emul=elf32vax ;;
mips*-*-pe)		targ_emul=mipspe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
mips*-dec-ultrix*)	targ_emul=mipslit ;;
mips*-dec-osf*)		targ_emul=mipslit ;;
mips*-sgi-irix5*)	targ_emul=elf32bsmip ;;
mips*-sgi-irix6*)	targ_emul=elf32bmipn32
	                targ_extra_emuls="elf32bsmip elf64bmip"
			targ_extra_libpath=$targ_extra_emuls
	                ;;
mips*-sgi-irix*)	targ_emul=mipsbig ;;
mips*el-*-ecoff*)	targ_emul=mipsidtl ;;
mips*-*-ecoff*)		targ_emul=mipsidt ;;
mips*el-*-netbsd*)	targ_emul=elf32lmip
			targ_extra_emuls="elf32bmip"
			;;
mips*-*-netbsd*)	targ_emul=elf32bmip
			targ_extra_emuls="elf32lmip"
			;;
mips64*el-*-openbsd*)	targ_emul=elf64ltsmip_obsd
			targ_extra_emuls="elf32ltsmipn32 elf32btsmipn32 elf32ltsmip elf32btsmip elf64btsmip"
			;;
mips64*-*-openbsd*)	targ_emul=elf64btsmip_obsd
			targ_extra_emuls="elf32btsmipn32 elf32ltsmipn32 elf32btsmip elf32ltsmip elf64ltsmip"
			;;
mips*el-*-openbsd*)	targ_emul=elf32ltsmip ;;
mips*-*-openbsd*)	targ_emul=elf32btsmip ;;
mips*-*-bsd*)		targ_emul=mipsbig ;;
mips*vr4300el-*-elf*)	targ_emul=elf32l4300 ;;
mips*vr4300-*-elf*)	targ_emul=elf32b4300 ;;
mips*vr4100el-*-elf*)	targ_emul=elf32l4300 ;;
mips*vr4100-*-elf*)	targ_emul=elf32b4300 ;;
mips*vr5000el-*-elf*)	targ_emul=elf32l4300 ;;
mips*vr5000-*-elf*)	targ_emul=elf32b4300 ;;
mips*el-*-elf*)		targ_emul=elf32elmip ;;
mips*-*-elf*)		targ_emul=elf32ebmip ;;
mips*el-*-rtems*)	targ_emul=elf32elmip ;;
mips*-*-rtems*)		targ_emul=elf32ebmip ;;
mips*el-*-vxworks*)	targ_emul=elf32elmip ;;
mips*-*-vxworks*)	targ_emul=elf32ebmip
		        targ_extra_emuls="elf32elmip" ;;
mips*-*-windiss)	targ_emul=elf32mipswindiss ;;
mips64*el-*-linux-gnu*)	targ_emul=elf32ltsmipn32
			targ_extra_emuls="elf32btsmipn32 elf32ltsmip elf32btsmip elf64ltsmip elf64btsmip"
			;;
mips64*-*-linux-gnu*)	targ_emul=elf32btsmipn32
			targ_extra_emuls="elf32ltsmipn32 elf32btsmip elf32ltsmip elf64btsmip elf64ltsmip"
			;;
mips*el-*-linux-gnu*)	targ_emul=elf32ltsmip
			targ_extra_emuls="elf32btsmip elf32ltsmipn32 elf64ltsmip elf32btsmipn32 elf64btsmip"
			;;
mips*-*-linux-gnu*)	targ_emul=elf32btsmip
			targ_extra_emuls="elf32ltsmip elf32btsmipn32 elf64btsmip elf32ltsmipn32 elf64ltsmip"
			;;
mips*-*-lnews*)		targ_emul=mipslnews ;;
mips*-*-sysv4*)         targ_emul=elf32btsmip ;;
mmix-*-*)		targ_emul=mmo
			targ_extra_emuls=elf64mmix
			;;
mn10200-*-*)		targ_emul=mn10200 ;;
mn10300-*-*)		targ_emul=mn10300 ;;
msp430-*-*)             targ_emul=msp430x110
                        targ_extra_emuls="msp430x112 msp430x1101 msp430x1111 msp430x1121 msp430x1122 msp430x1132 msp430x122 msp430x123 msp430x1222 msp430x1232 msp430x133 msp430x135 msp430x1331 msp430x1351 msp430x147 msp430x148 msp430x149 msp430x155 msp430x156 msp430x157 msp430x167 msp430x168 msp430x169 msp430x311 msp430x312 msp430x313 msp430x314 msp430x315 msp430x323 msp430x325 msp430x336 msp430x337 msp430x412 msp430x413 msp430xE423 msp430xE425 msp430xE427 msp430xW423 msp430xW425 msp430xW427 msp430x435 msp430x436 msp430x437 msp430x447 msp430x448 msp430x449" ;;
alpha*-*-freebsd* | alpha*-*-kfreebsd*-gnu)
		        targ_emul=elf64alpha_fbsd
			targ_extra_emuls="elf64alpha alpha"
			tdir_alpha=`echo ${targ_alias} | sed -e 's/freebsd/freebsdecoff/'`
			;;
alpha*-*-linuxecoff*)	targ_emul=alpha targ_extra_emuls=elf64alpha
			tdir_elf64alpha=`echo ${targ_alias} | sed -e 's/ecoff//'`
			;;
alpha*-*-linux-gnu*)	targ_emul=elf64alpha targ_extra_emuls=alpha
			tdir_alpha=`echo ${targ_alias} | sed -e 's/linux/linuxecoff/'`
			;;
alpha*-*-osf*)		targ_emul=alpha ;;
alpha*-*-gnu*)		targ_emul=elf64alpha ;;
alpha*-*-netware*)	targ_emul=alpha ;;
alpha*-*-netbsd*)	targ_emul=elf64alpha_nbsd ;;
alpha*-*-openbsd*)	targ_emul=elf64alpha_obsd ;;
z8k-*-coff) 		targ_emul=z8002; targ_extra_emuls=z8001 ;;
ns32k-pc532-mach* | ns32k-pc532-ux*)	targ_emul=pc532macha ;;
ns32k-*-netbsd* | ns32k-pc532-lites*) targ_emul=ns32knbsd ;;
openrisc-*-*)		targ_emul=elf32openrisc ;;
or32-*-coff)		targ_emul=or32 ;;
or32-*-elf)		targ_emul=or32elf ;;
or32-*-rtems*)          targ_emul=or32elf ;;
pdp11-*-*)		targ_emul=pdp11 ;;
pjl*-*-*)	        targ_emul=pjlelf ; targ_extra_emuls="elf_i386" ;;
pj*-*-*)	        targ_emul=pjelf ;;
powerpc-*-freebsd* | powerpc-*-kfreebsd*-gnu)
			targ_emul=elf32ppc_fbsd;
			targ_extra_emuls="elf32ppc elf32ppcsim";
			targ_extra_libpath=elf32ppc;
			tdir_elf32ppcsim=`echo ${targ_alias} | sed -e 's/ppc/ppcsim/'`
			;;
powerpc-*-openbsd*)	targ_emul=elf32ppc_obsd ;;
powerpc*-*-linux*)
	case "${targ}" in
	*64*)	targ_emul=elf64ppc
		targ_extra_emuls="elf32ppclinux elf32ppc elf32ppcsim"
		targ_extra_libpath="elf32ppclinux elf32ppc"
		tdir_elf32ppc=`echo "${targ_alias}" | sed -e 's/64//'`
		tdir_elf32ppclinux=$tdir_elf32ppc
		tdir_elf32ppcsim=$tdir_elf32ppc ;;
	*)	targ_emul=elf32ppclinux
		targ_extra_emuls="elf32ppc elf32ppcsim"
		targ_extra_libpath=elf32ppc
		if test "${want64}" = "true"; then
		  targ_extra_emuls="$targ_extra_emuls elf64ppc"
		  targ_extra_libpath="$targ_extra_libpath elf64ppc"
		fi
		;;
	esac ;;
powerpc*le-*-elf* | powerpc*le-*-eabi* | powerpc*le-*-solaris* \
  | powerpc*le-*-sysv* | powerpc*le-*-vxworks*)
	case "${targ}" in
	*64*)	targ_emul=elf64lppc
		targ_extra_emuls="elf32lppc elf32lppcsim"
		tdir_elf32lppc=`echo "${targ_alias}" | sed -e 's/64//'`
		tdir_elf32lppcsim=$tdir_elf32lppc ;;
	*)	targ_emul=elf32lppc
		targ_extra_emuls="elf32ppcsim" ;;
	esac ;;
powerpc*-*-elf* | powerpc*-*-eabi* | powerpc*-*-sysv* \
  | powerpc*-*-netbsd* | powerpc*-*-vxworks* | powerpc*-*-kaos*)
	case "${targ}" in
	*64*)	targ_emul=elf64ppc
		targ_extra_emuls="elf32ppc elf32ppclinux elf32ppcsim"
		tdir_elf32ppc=`echo "${targ_alias}" | sed -e 's/64//'`
		tdir_elf32ppclinux=$tdir_elf32ppc
		tdir_elf32ppcsim=$tdir_elf32ppc ;;
	*)	targ_emul=elf32ppc
		targ_extra_emuls="elf32ppclinux elf32ppcsim" ;;
	esac ;;
powerpc-*-nto*)         targ_emul=elf32ppcnto ;;
powerpcle-*-nto*)       targ_emul=elf32lppcnto ;;
powerpcle-*-rtems*)	targ_emul=elf32leppc ;;
powerpc-*-rtems*)	targ_emul=elf32ppc ;;
powerpc-*-macos*)	targ_emul=ppcmacos ;;
powerpc-*-netware*)	targ_emul=ppcnw ;;
powerpcle-*-pe)         targ_emul=ppcpe ;;
powerpcle-*-winnt*)     targ_emul=ppcpe ;;
powerpcle-*-cygwin*)    targ_emul=ppcpe ;;
powerpc-*-aix5*)	targ_emul=aix5ppc ;;
powerpc-*-aix*)		targ_emul=aixppc ;;
powerpc-*-beos*)	targ_emul=aixppc ;;
powerpc-*-windiss*)	targ_emul=elf32ppcwindiss ;;
rs6000-*-aix5*)		targ_emul=aix5rs6 ;;
rs6000-*-aix*)		targ_emul=aixrs6 ;;
tic30-*-*aout*)		targ_emul=tic30aout ;;
tic30-*-*coff*)		targ_emul=tic30coff ;;
tic4x-*-* | c4x-*-*)    targ_emul=tic4xcoff ; targ_extra_emuls="tic3xcoff tic3xcoff_onchip" ;;
tic54x-*-* | c54x*-*-*)	targ_emul=tic54xcoff ;;
tic80-*-*)		targ_emul=tic80coff ;;
v850-*-*)		targ_emul=v850 ;;
v850e-*-*)		targ_emul=v850 ;;
v850ea-*-*)		targ_emul=v850 ;;
iq2000-*-elf)           targ_emul=elf32iq2000 ; targ_extra_emuls="elf32iq10" ;;
frv-*-*linux*)		targ_emul=elf32frvfd ;;
frv-*-*)		targ_emul=elf32frv ; targ_extra_emuls="elf32frvfd" ;;
w65-*-*)		targ_emul=w65 ;;
xstormy16-*-*)		targ_emul=elf32xstormy16 ;;
xtensa-*-*)		targ_emul=elf32xtensa;;
fr30-*-*)		targ_emul=elf32fr30 ;;
mcore-*-pe)		targ_emul=mcorepe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
mcore-*-elf)		targ_emul=elf32mcore ;;
s390x-*-linux*)         targ_emul=elf64_s390
			targ_extra_emuls=elf_s390
			targ_extra_libpath=$targ_extra_emuls
			tdir_elf_s390=`echo ${targ_alias} | sed -e 's/s390x/s390/'` ;;
s390-*-linux*)          targ_emul=elf_s390
			if test "${want64}" = "true"; then
			  targ_extra_emuls=elf64_s390
			  targ_extra_libpath=$targ_extra_emuls
			  tdir_elf64_s390=`echo ${targ_alias} | sed -e 's/s390/s390x/'`
			fi ;;
*-*-ieee*)		targ_emul=vanilla ;;
ip2k-*-elf)		targ_emul=elf32ip2k ;;

*)
  echo 2>&1 "*** ld does not support target ${targ}"
  echo 2>&1 "*** see ld/configure.tgt for supported targets"
  exit 1

esac

NATIVE_LIB_DIRS='/usr/local/lib /lib /usr/lib'
case "${target}" in

*-*-freebsd*)
  NATIVE_LIB_DIRS='/lib /usr/lib /usr/local/lib'
  ;;

hppa*64*-*-hpux11*)
  NATIVE_LIB_DIRS=/usr/lib/pa20_64
  ;;

i[3-7]86-*-sysv4*)
  NATIVE_LIB_DIRS='/usr/local/lib /usr/ccs/lib /lib /usr/lib'
  ;;

i[3-7]86-*-solaris*)
  NATIVE_LIB_DIRS='/usr/local/lib /usr/ccs/lib /lib /usr/lib'
  ;;

i[3-7]86-pc-interix*)
  NATIVE_LIB_DIRS='/usr/local/lib $$INTERIX_ROOT/usr/lib /lib /usr/lib'
  ;;

ia64-*-aix*)
  NATIVE_LIB_DIRS='/usr/local/lib /usr/lib/ia64l64 /lib /usr/lib'
  ;;

sparc*-*-solaris2*)
  NATIVE_LIB_DIRS='/usr/local/lib /usr/ccs/lib /lib /usr/lib'
  ;;

i[03-9x]86-*-cygwin*)
  NATIVE_LIB_DIRS='/usr/lib /usr/lib/w32api'
  ;;

*-*-linux*)
  ;;

*-*-freebsd*)
  ;;

*-*-netbsd*)
  ;;

alpha*-*-*)
  NATIVE_LIB_DIRS='/usr/local/lib /usr/ccs/lib /lib /usr/lib'
  ;;

esac
@


1.35
log
@ELF toolchain for m68k, following the SysV/m68k ABI (32-bit types aligned on
32-bit boundaries, function return values being in %a0 instead of %d0 if they
are declared as pointers, and in fp registers if they are floating point types).

Compiler configuration bits (including a few m68k PIC code generation fixes)
borrowed from NetBSD.
@
text
@d420 2
@


1.34
log
@m88k ELF toolchain, supporting static binaries only so far.

Assembler supports a register prefix of `#' when configured for SVR4, and `%'
when configured for OpenBSD. Pseudo-ops do not need a leading dot, except
when configured for OpenBSD, allowing the `set' instruction to be recognized
correctly.

Based upon various unfinished or unreliable works, including smurph@@'s early
work in 2003, my own attempts in 2004 and 2005, and Michael Kato's binutils
2.15 diff from 2005. Support for register prefixes, as well as fixing an
evil off-by-one in resolving 16-bit pc-relative relocations in ld (which would
only affect kernel .S files branching to global symbols), came as part of the
2012 work.

Not enabled yet (needs Makefile.bsd-wrapper, bfd/config.bfd and
gdb/configure.tgt updates to completely enable) so as not to disturb the
existing a.out toolchain builds; will hopefully be enabled very soon.
@
text
@d398 2
a399 1
m68*-*-openbsd*)	targ_emul=m68kobsd ;;
@


1.33
log
@Define superH obsd-specific emulations for ld, and use it by default.
@
text
@a245 1
m8*-*-*)		targ_emul=m88kbcs ;;
d402 3
@


1.32
log
@Early bits for a 32-bit SuperH toolchain, currently for little-endian
systems only; more work is necessary in ld land.
@
text
@d337 1
a337 1
sh*l*-*-netbsdelf*|sh*-*-openbsd*)
d344 4
@


1.31
log
@Provide openbsd emulation for mips64el as we do for mips64.

ok miod@@
@
text
@d337 1
a337 1
sh*l*-*-netbsdelf*)
@


1.30
log
@Merge conflicts, bringing our changes back in:
- extra $(SHELL) and sugar for make (so that files not mode +x still work)
- safer temp file handling
- our W^X binary layout changes in ld
- OpenBSD policy for library file selection in ld
- arm and m88k changes which were not merged in time for official 2.15
- bfd core file handling
- a couple typos

New for 2.15:
- ld(1) and as(1) manpages now generated at build time
- binutils/stabs.c reverted to use our in-tree libiberty for now
- we still use our VIA C3 crypto code over stock binutils, as it recognizes
  more instructions
- new emulations for OpenBSD on mips64 machines, to help OpenBSD/sgi
- relaxed %f# handling in gas on OpenBSD/sparc64 (same as was in 2.14)

Tested on all platforms by various people; special thanks to sturm@@ and
otto@@.
@
text
@d432 1
a432 1
mips64*el-*-openbsd*)	targ_emul=elf64ltsmip
@


1.29
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@d19 1
d27 2
a28 2
avr-*-*)		targ_emul=avr85xx
			targ_extra_emuls="avr1200 avr23xx avr44x4 avr4433 avrmega603 avrmega103 avrmega161 avr1 avr2 avr3 avr4 avr5" ;;
d32 1
d51 1
a51 1
sparc64-*-freebsd* | sparcv9-*-freebsd*)
d83 1
a83 1
sparc-*-openbsd[0-2].* | sparc-*-openbsd3.[0-1])
d85 1
a85 1
sparc*-*-openbsd*)	targ_emul=elf32_sparc_obsd ;;
d104 1
d115 2
a116 1
ia64-*-freebsd*)	targ_emul=elf64_ia64_fbsd
d121 4
a124 1
m32r-*-*)		targ_emul=m32relf ;;
d135 19
a153 19
i[3456]86-*-nto-qnx*)	targ_emul=i386nto ;;
i[3456]86-*-vsta)	targ_emul=vsta ;;
i[3456]86-go32-rtems*)	targ_emul=i386go32 ;;
i[3456]86-*-go32)	targ_emul=i386go32 ;;
i[3456]86-*-msdosdjgpp*) targ_emul=i386go32 ;;
i[3456]86-*-aix*)	targ_emul=i386coff ;;
i[3456]86-*-sco*)	targ_emul=i386coff ;;
i[3456]86-*-isc*)	targ_emul=i386coff ;;
i[3456]86-*-lynxos*)	targ_emul=i386lynx ;;
i[3456]86-*-coff)	targ_emul=i386coff ;;
i[3456]86-*-rtemscoff*) targ_emul=i386coff ;;
i[3456]86-*-rtemself*)  targ_emul=elf_i386 ;;
i[3456]86-*-rtems*)     targ_emul=elf_i386 ;;
i[3456]86-*-aros*)      targ_emul=elf_i386 ;;
i[3456]86-*-bsd)	targ_emul=i386bsd ;;
i[3456]86-*-bsd386)	targ_emul=i386bsd ;;
i[3456]86-*-bsdi*)	targ_emul=i386bsd ;;
i[3456]86-*-aout)	targ_emul=i386aout ;;
i[3456]86-*-linux*aout*)	targ_emul=i386linux
d157 2
a158 2
i[3456]86-*-linux*oldld)	targ_emul=i386linux; targ_extra_emuls=elf_i386 ;;
i[3456]86-*-linux-gnu*)	targ_emul=elf_i386
d171 2
a172 2
i[3456]86-*-sysv[45]*)	targ_emul=elf_i386 ;;
i[3456]86-*-solaris2*)  targ_emul=elf_i386_ldso
d175 2
a176 2
i[3456]86-*-unixware)	targ_emul=elf_i386 ;;
i[3456]86-*-solaris*)   targ_emul=elf_i386_ldso
d179 4
a182 1
i[3456]86-*-netbsdelf*)	targ_emul=elf_i386
d185 1
a185 1
i[3456]86-*-netbsdpe*)	targ_emul=i386pe
d188 1
a188 1
i[3456]86-*-netbsd*)	targ_emul=i386nbsd
a190 8
i[3456]86-*-openbsd[0-2].* | i[3456]86-*-openbsd3.[0-2])
			targ_emul=i386obsd ;;
i[3456]86-*-openbsd*)	targ_emul=elf_i386_obsd ;;
x86_64-*-openbsd*)	targ_emul=elf_x86_64_obsd
			targ_extra_emuls="elf_i386_obsd elf_i386"
			tdir_elf_i386_obsd=`echo ${targ_alias} \
			    | sed -e 's/x86_64/i386/'`
			;;
d203 4
a206 4
i[3456]86-*-netware)	targ_emul=i386nw ;;
i[3456]86-*-elf*)	targ_emul=elf_i386 ;;
i[3456]86-*-kaos*)	targ_emul=elf_i386 ;;
i[3456]86-*-freebsdaout* | i[3456]86-*-freebsd[12].* | i[3456]86-*-freebsd[12])
d208 2
a209 1
i[3456]86-*-freebsd*)	targ_emul=elf_i386_fbsd
d211 2
a212 1
x86_64-*-freebsd*)	targ_emul=elf_x86_64_fbsd
d217 15
a231 7
i[3456]86-*-sysv*)	targ_emul=i386coff ;;
i[3456]86-*-ptx*)	targ_emul=i386coff ;;
i[3456]86-*-mach*)	targ_emul=i386mach ;;
i[3456]86-*-gnu*)	targ_emul=elf_i386 ;;
i[3456]86-*-msdos*)	targ_emul=i386msdos; targ_extra_emuls=i386aout ;;
i[3456]86-*-moss*)	targ_emul=i386moss; targ_extra_emuls=i386msdos ;;
i[3456]86-*-winnt*)	targ_emul=i386pe ;
d233 1
a233 1
i[3456]86-*-pe)		targ_emul=i386pe ;
d235 1
a235 1
i[3456]86-*-cygwin*)	targ_emul=i386pe ;
d238 1
a238 1
i[3456]86-*-mingw32*)	targ_emul=i386pe ;
d240 1
a240 1
i[3456]86-*-interix*)	targ_emul=i386pe_posix;
d242 4
a245 4
i[3456]86-*-beospe*)    targ_emul=i386beos ;;
i[3456]86-*-beos*)	targ_emul=elf_i386_be ;;
i[3456]86-*-vxworks*)	targ_emul=i386aout ;;
i[3456]86-*-chaos)	targ_emul=elf_i386_chaos ;;
d254 2
a255 2
arm-*-vxworks)		targ_emul=armcoff ;;
arm-*-freebsd*)		targ_emul=armelf_fbsd
d269 3
a271 1
arm-*-elf)		targ_emul=armelf ;;
d275 1
d293 1
a293 1
			targ_emul=h8300; targ_extra_emuls="h8300h h8300s h8300hn h8300sn"
d297 1
a297 1
			targ_extra_emuls="h8300helf h8300self h8300hnelf h8300snelf"
d337 1
a337 1
sh*le-*-netbsdelf*)
d349 2
a350 1
sh-*-elf* | sh[1234]*-*-elf | sh-*-rtemself* | sh-*-kaos*)
d359 1
a359 1
sh-*-*|sh-*-rtems*)	targ_emul=sh; targ_extra_emuls=shl ;;
d385 1
d413 1
a425 1
mips*-dec-bsd*)		targ_emul=mipsbsd ;;
d432 8
a439 2
mips*el-*-openbsd*)	targ_emul=elf32lmip ;;
mips*-*-openbsd*)	targ_emul=elf32bmip ;;
d452 3
a454 1
mips*-*-vxworks*)	targ_emul=elf32ebmip ;;
d474 4
a477 3
msp430-*-*)             targ_emul=msp430x149
                        targ_extra_emuls="msp430x148 msp430x147 msp430x133 msp430x135 msp430x110 msp430x112 msp430x122 msp430x123 msp430x412 msp430x413 msp430x311 msp430x312 msp430x313 msp430x314 msp430x315 msp430x323 msp430x325 msp430x336 msp430x337 msp430x1101 msp430x1111 msp430x1121 msp430x1331 msp430x1351 msp430x435 msp430x436 msp430x437 msp430x447 msp430x448 msp430x449 msp430x1222 msp430x1232 msp430x169 msp430x168 msp430x167 msp430x155  msp430x156 msp430x157 msp430x1122 msp430x1132" ;;
alpha*-*-freebsd*)	targ_emul=elf64alpha_fbsd
d498 1
a498 1
or32-*-rtems)           targ_emul=or32 ;;
d502 2
a503 1
powerpc-*-freebsd*)	targ_emul=elf32ppc_fbsd;
d571 2
a572 1
frv-*-*)		targ_emul=elf32frv ;;
d611 1
a611 1
i[3456]86-*-sysv4*)
d615 1
a615 1
i[3456]86-*-solaris*)
d619 1
a619 1
i[3456]86-pc-interix*)
@


1.28
log
@configs for amd64; brad@@ ok
@
text
@d12 2
d27 1
a27 1
			targ_extra_emuls="avr1200 avr23xx avr44x4 avr4433 avrmega603 avrmega103 avrmega161" ;;
d38 1
d50 2
a51 2
			targ_emul=elf64_sparc
			targ_extra_emuls="elf32_sparc"
d62 1
d69 1
d75 4
a78 2
sparc64-*-netbsd*)	targ_emul=elf64_sparc ;;
sparc64-*-openbsd*)	targ_emul=elf64_sparc ;;
d81 3
a83 1
sparc*-*-openbsd*)	targ_emul=elf32_sparc ;;
d112 3
a114 1
ia64-*-freebsd*)	targ_emul=elf64_ia64 ;;
d116 1
d128 1
a128 1
i370-*-mvs*) 		targ_emul=mvs ;;
d138 1
d140 2
a141 1
i[3456]86-*-rtems*)	targ_emul=i386coff ;;
d153 3
d160 3
a162 1
			tdir_i386linux=${targ_alias}aout
d165 3
a167 1
i[3456]86-*-solaris2*)	targ_emul=elf_i386 ;;
d169 10
a178 4
i[3456]86-*-solaris*)	targ_emul=elf_i386 ;;
i[3456]86-*-netbsd*)	targ_emul=i386nbsd ;;
i[3456]86-*-openbsd*)	targ_emul=elf_i386 ;;
x86_64-*-openbsd*)	targ_emul=elf_x86_64
d180 20
a199 1
			tdir_elf_i386=`echo ${targ_alias} | sed -e 's/x86_64/i386/'`
d203 1
d206 6
a211 4
i[3456]86-*-freebsd*)	targ_emul=elf_i386 ;;
x86_64-*-freebsd*)	targ_emul=elf_x86_64
			targ_extra_emuls=elf_i386
			tdir_elf_i386=`echo ${targ_alias} | sed -e 's/x86_64/i386/'`
d224 2
a225 1
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
d243 13
a255 3
arm-*-freebsd*)		targ_emul=armelf ;;
arm-*-netbsd*)		targ_emul=armnbsd ;;
arm-*-openbsd*) 	targ_emul=armnbsd ;;
d258 2
d267 1
d278 1
a278 1
			targ_emul=h8300; targ_extra_emuls="h8300h h8300s"
d280 5
a284 1
h8500-*-hms* | h8500-*-coff*)
d289 12
a301 1
			targ_extra_emuls=shlelf_linux
d303 32
a334 1
sh-*-elf* | sh-*-rtemself*)
d338 3
d344 10
d371 8
a378 3
m68*-hp*-netbsd*)	targ_emul=m68k4knbsd ;;
m68*-*-netbsd*)		targ_emul=m68knbsd ;;
m68*-*-openbsd*)	targ_emul=m68knbsd ;;
d380 3
a382 1
m68*-*-rtems*)		targ_emul=m68kcoff ;;
d387 1
d391 5
d403 1
d409 6
a414 1
mips*-dec-netbsd*)	targ_emul=elf32lmip ;;
d430 6
d437 1
a437 1
			targ_extra_emuls="elf32btsmip elf64ltsmip elf64btsmip"
d440 1
a440 1
			targ_extra_emuls="elf32ltsmip elf64btsmip elf64ltsmip"
d444 3
d449 4
a452 2
alpha*-*-freebsd*)	targ_emul=elf64alpha
			targ_extra_emuls=alpha
d464 2
a465 2
alpha*-*-netbsd*)	targ_emul=elf64alpha ;;
alpha*-*-openbsd*)	targ_emul=elf64alpha ;;
d468 10
a477 3
ns32k-pc532-netbsd* | ns32k-pc532-lites*) targ_emul=ns32knbsd ;;
powerpc-*-freebsd*)	targ_emul=elf32ppc;
			targ_extra_emuls=elf32ppcsim;
d481 41
a521 11
powerpc-*-linux-gnu*)	targ_emul=elf32ppclinux;
			targ_extra_emuls="elf32ppc elf32ppcsim";
			targ_extra_libpath=elf32ppc ;;
pjl*-*-*)	        targ_emul=pjlelf ; targ_extra_emuls="elf_i386" ;;
pj*-*-*)	        targ_emul=pjelf ;;
powerpc-*-elf* | powerpc-*-eabi* | powerpc-*-sysv* \
  | powerpc-*-netbsd* | powerpc-*-openbsd* | powerpc-*-vxworks*)
	targ_emul=elf32ppc targ_extra_emuls="elf32ppclinux elf32ppcsim";;
powerpcle-*-elf* | powerpcle-*-eabi* | powerpcle-*-solaris* \
  | powerpcle-*-sysv* | powerpcle-*-vxworks*)
	targ_emul=elf32lppc targ_extra_emuls="elf32ppcsim";;
d529 1
d532 2
d537 1
d543 2
d546 2
d552 10
d563 1
d569 50
@


1.27
log
@Switch i386 to new binutils, i386 tools now do ELF.
RODATA_* align macros to preserve current behavior on other
archs and allow for 1G sep between beginning of exe and beginning of data
DARPA funded work.
@
text
@d151 4
@


1.26
log
@Switch sparc binutils to ELF.
XXX - we might want to improve the version selection logic when feeding
those diffs back to FSF, but we can't do that until we bump our version
to OpenBSD 3.2 because then the tree wouldn't build.
@
text
@d150 1
a150 1
i[3456]86-*-openbsd*)	targ_emul=i386nbsd ;;
@


1.25
log
@hppa pieces; don't regenerate yet.
@
text
@d74 1
a74 1
sparc*-*-openbsd*)	targ_emul=sparcnbsd ;;
@


1.24
log
@resolve conflicts.
@
text
@d254 1
@


1.23
log
@Support for arm.
@
text
@d26 6
d46 6
d90 5
a94 3
sparc*-*-rtemsaout*)	targ_emul=sparcaout ;;
sparc*-*-rtemself*)	targ_emul=elf32_sparc ;;
sparc*-*-rtems*)	targ_emul=elf32_sparc ;;
a99 2
i960-*-rtemscoff*)	targ_emul=gld960coff ;;
i960-*-rtemself*)	targ_emul=elf32_i960 ;;
d102 3
d106 4
a125 1
i[3456]86-*-rtemscoff*) targ_emul=i386coff ;;
d127 1
a127 1
i[3456]86-*-rtems*)     targ_emul=elf_i386 ;;
d136 1
a136 1
i[3456]86-*-linuxoldld)	targ_emul=i386linux; targ_extra_emuls=elf_i386 ;;
d141 4
d156 4
d179 1
d188 2
d192 1
d195 1
a195 1
arm*-*-linux-gnu*)	targ_emul=armelf_linux; targ_extra_emuls="armelf_linux26 armelf" ;;
d208 3
a210 1
h8300-*-hms* | h8300-*-coff*)
d217 4
d227 1
a227 2
sh-*-rtemscoff* | sh-*-* | sh-*-rtems*)
			targ_emul=sh; targ_extra_emuls=shl ;;
d249 3
a251 4
m68*-*-rtemscoff*)	targ_emul=m68kcoff ;;
m68*-*-rtemself)	targ_emul=m68kelf ;;
m68*-*-rtems*)		targ_emul=m68kelf ;;
hppa*w*-*)		targ_emul=elf64hppa ;;
a252 1
hppa*-*-linux-gnu*)	targ_emul=hppaelf ;;
d284 2
a285 2
mips*el-*-linux-gnu*)	targ_emul=elf32lsmip
			targ_extra_emuls="elf32bsmip mipslit mipsbig"
d287 2
a288 2
mips*-*-linux-gnu*)	targ_emul=elf32bsmip
			targ_extra_emuls="elf32lsmip mipsbig mipslit"
d291 1
d294 4
a297 1
alpha-*-freebsd*)	targ_emul=elf64alpha ;;
d312 7
a318 1
powerpc-*-linux-gnu*)	targ_emul=elf32ppclinux; targ_extra_emuls=elf32ppc;
d324 1
a324 1
	targ_emul=elf32ppc ;;
d327 1
a327 1
	targ_emul=elf32lppc ;;
d334 1
a334 1
powerpcle-*-cygwin*)   targ_emul=ppcpe ;;
d340 1
@


1.22
log
@Support for sparc64. gdb disabled for now.
@
text
@d162 1
@


1.21
log
@Automatic cvs merge. Dread what I will have to fix after this excuse
of a program is done...
@
text
@d59 1
@


1.20
log
@Switch alpha to ELF.
@
text
@d58 2
d122 1
a122 1
i[3456]86-*-sysv4*)	targ_emul=elf_i386 ;;
@


1.19
log
@Make new binutils compile on Alpha again; ok espie@@
@
text
@d267 1
a267 1
alpha*-*-openbsd*)	targ_emul=alphabsd ;;
@


1.18
log
@Repair mips-based targets, espie@@ ok
@
text
@d267 1
@


1.17
log
@Add powerpc-openbsd to list of supported systems.
@
text
@d232 2
@


1.16
log
@Recognize sparc/i386/m68k-openbsd, and use the netbsd emulation then.
@
text
@d273 1
a273 1
  | powerpc-*-netbsd* | powerpc-*-vxworks*)
@


1.15
log
@Help stupid cvs fixing basic conflicts.
@
text
@d59 1
d125 1
d208 1
@


1.14
log
@first cut on binutils/gcc support for hppa-*-openbsd*; tested on i386 host
@
text
@d10 2
d14 1
d17 13
a29 1
arm-*-pe)		targ_emul=armpe ;;
d33 1
d40 17
d59 13
a71 1
sparc*-*-openbsd*)	targ_emul=sparcnbsd ;;
d74 3
a76 1
sparc*-*-rtems*)	targ_emul=sparcaout ;;
d82 2
d85 2
d92 2
d97 1
d103 3
a105 1
i[3456]86-*-rtems*)	targ_emul=i386coff ;;
d110 1
a110 1
i[3456]86-*-linuxaout*)	targ_emul=i386linux
d115 1
a115 1
i[3456]86-*-linux*)	targ_emul=elf_i386
d120 1
d122 1
a123 1
i[3456]86-*-openbsd*)	targ_emul=i386nbsd ;;
d126 3
a128 1
i[3456]86-*-freebsdelf*) targ_emul=elf_i386 ;;
d132 1
a132 1
i[3456]86-*-gnu*)	targ_emul=elf_i386; targ_extra_emuls=i386mach ;;
d135 13
a147 3
i[3456]86-*-winnt)	targ_emul=i386pe ;;
i[3456]86-*-pe)		targ_emul=i386pe ;;
i[3456]86-*-cygwin32)	targ_emul=i386pe ;;
d156 18
a173 1
h8300-*-hms)		targ_emul=h8300; targ_extra_emuls="h8300h h8300s"
d175 2
a176 1
h8500-*-hms)		targ_emul=h8500
d179 2
a180 1
sh-*-elf*)		targ_emul=shelf
d183 4
a186 1
sh-*-*)			targ_emul=sh; targ_extra_emuls=shl ;;
d194 1
a194 1
m68k-*-linuxaout*)	targ_emul=m68klinux
d198 1
a198 1
m68k-*-linux*)		targ_emul=m68kelf
d202 1
a204 1
m68*-hp*-openbsd*)	targ_emul=m68k4knbsd ;;
a205 1
m68*-*-openbsd*)	targ_emul=m68knbsd ;;
d207 4
a210 1
m68*-*-rtems*)		targ_emul=m68kcoff ;;
d212 1
d214 1
a214 1
hppa*-*-openbsd*)	targ_emul=hppaelf ;;
d216 2
d220 4
a223 1
mips*-sgi-irix[56]*)	targ_emul=elf32bmip ;;
a228 3
mips*el-*-openbsd*)	targ_emul=mipsel_obsd ;;
mips*-*-openbsd*)	targ_emul=mipseb_obsd ;;
# mips*-dec-openbsd*)	targ_emul=elf32lmip ;;
d238 1
d240 13
a252 1
alpha-*-linuxecoff*)	targ_emul=alpha targ_extra_emuls=elf64alpha
d255 1
a255 1
alpha-*-linux*)		targ_emul=elf64alpha targ_extra_emuls=alpha
d258 4
a261 5
alpha-*-netbsd*)	targ_emul=alphabsd targ_extra_emuls="alpha elf64alpha";;
alpha-*-openbsd*)	targ_emul=alphabsd targ_extra_emuls="alpha";;
alpha-*-osf*)		targ_emul=alpha ;;
alpha-*-gnu*)		targ_emul=elf64alpha ;;
alpha-*-netware*)	targ_emul=alpha ;;
d265 6
a270 2
ns32k-pc532-openbsd*)	targ_emul=ns32knbsd ;;
powerpc-*-*bsd* | powerpc-*-elf* | powerpc-*-eabi* | powerpc-*-linux* | powerpc-*-sysv*)
d272 4
a275 1
powerpcle-*-elf* | powerpcle-*-eabi* | powerpcle-*-solaris* | powerpcle-*-sysv*)	targ_emul=elf32lppc ;;
d281 1
a281 1
powerpcle-*-cygwin32)   targ_emul=ppcpe ;;
d283 1
d285 6
d292 4
a295 3
*-*-aout)		targ_emul=${target_cpu}-${target_vendor} ;;
*-*-coff)		targ_emul=${target_cpu}-${target_vendor} ;;
*-*-netware)		targ_emul=${target_cpu}-nw ;;
@


1.13
log
@More consistent MIPS config
@
text
@d120 1
@


1.12
log
@Change all mips ports to use mips-unknown-openbsd2.0 like gcc does.
This should allow for gdb to at least build on pmax, modulo potential platform
specific include files.    This impacts gas, ld, and other critical system
components.  Don't build this unless you are happy with your backups, as
always for a change of this nature.  It works for me on my machine, however.
@
text
@d129 2
a130 2
mips*-*-openbsd*)	targ_emul=elf32arc ;;
mips-heurikon-openbsd*) targ_emul=elf32bmip ;;
@


1.11
log
@changes to binutils to support powerpc-openbsd
@
text
@d129 1
a129 1
mips*-arc-openbsd*)	targ_emul=elf32arc ;;
d131 1
a131 1
mips*-dec-openbsd*)	targ_emul=elf32lmip ;;
@


1.10
log
@Temporarily do not support ELF64
@
text
@d157 1
a157 1
powerpc-*-elf* | powerpc-*-eabi* | powerpc-*-linux* | powerpc-*-sysv*)
@


1.9
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d149 1
a149 1
alpha-*-openbsd*)	targ_emul=alphabsd targ_extra_emuls="alpha elf64alpha";;
@


1.8
log
@Alpha support based on Chris Demetriou's <cgd@@cs.cmu.edu> work
@
text
@d137 2
d141 1
d151 1
@


1.7
log
@New fallback alg. added for arc machines. If libxx.so is not found scan for highest
version of libxx.so.n. This is what ldconfig sets as highest. This will make manual
linking of libxx.so to libxx.so.n not requiered any more.
Also some constructor/shared lib fixes. Relocs is placed in the wrong section though.
Hmmm..
@
text
@d145 2
a146 1
alpha-*-openbsd*)	targ_emul=alpha ;;
@


1.6
log
@Merge the Cygnus 960904 sources
@
text
@d129 2
a130 1
mips*-arc-openbsd*)	targ_emul=elf32lmip ;;
@


1.5
log
@Alpha support based on Chris Demetriou's <cgd@@cs.cmu.edu> work
@
text
@d23 1
d29 1
d35 1
d41 14
a54 11
i[345]86-*-vsta)	targ_emul=vsta ;;
i[345]86-*-go32)	targ_emul=i386go32 ;;
i[345]86-*-aix*)	targ_emul=i386coff ;;
i[345]86-*-sco*)	targ_emul=i386coff ;;
i[345]86-*-lynxos*)	targ_emul=i386lynx ;;
i[345]86-*-coff)	targ_emul=i386coff ;;
i[345]86-*-bsd)		targ_emul=i386bsd ;;
i[345]86-*-bsd386)	targ_emul=i386bsd ;;
i[345]86-*-bsdi*)	targ_emul=i386bsd ;;
i[345]86-*-aout)	targ_emul=i386aout ;;
i[345]86-*-linuxaout*)	targ_emul=i386linux
d58 2
a59 2
i[345]86-*-linuxoldld)	targ_emul=i386linux; targ_extra_emuls=elf_i386 ;;
i[345]86-*-linux*)	targ_emul=elf_i386
d63 16
a78 16
i[345]86-*-sysv4*)	targ_emul=elf_i386 ;;
i[345]86-*-unixware)	targ_emul=elf_i386 ;;
i[345]86-*-netbsd*)	targ_emul=i386nbsd ;;
i[345]86-*-openbsd*)	targ_emul=i386nbsd ;;
i[345]86-*-netware)	targ_emul=i386nw ;;
i[345]86-*-elf*)	targ_emul=elf_i386 ;;
i[345]86-*-freebsdelf*)	targ_emul=elf_i386 ;;
i[345]86-*-sysv*)	targ_emul=i386coff ;;
i[345]86-*-ptx*)	targ_emul=i386coff ;;
i[345]86-*-mach*)	targ_emul=i386mach ;;
i[345]86-*-gnu*)	targ_emul=elf_i386; targ_extra_emuls=i386mach ;;
i[345]86-*-msdos*)	targ_emul=i386msdos; targ_extra_emuls=i386aout ;;
i[345]86-*-moss*)	targ_emul=i386moss; targ_extra_emuls=i386msdos ;;
i[345]86-*-winnt)	targ_emul=i386pe ;;
i[345]86-*-pe)		targ_emul=i386pe ;;
i[345]86-*-cygwin32)	targ_emul=i386pe ;;
d87 2
a88 1
h8300-*-hms)		targ_emul=h8300; targ_extra_emuls=h8300h ;;
d92 3
d117 1
d122 2
a123 1
mips*-sgi-irix5*)	targ_emul=elf32bmip ;;
d136 8
a143 3
mips*el-*-elf*)		targ_emul=elf32lmip ;;
mips*-*-elf*)		targ_emul=elf32bmip ;;
alpha-*-linux*)		targ_emul=alpha ;;
d148 1
a148 1
ns32k-pc532-mach* | ns32k-pc532-ux*)	targ_emul=pc532machaout ;;
d151 2
a152 1
powerpc-*-elf* | powerpc-*-eabi* | powerpc-*-linux* | powerpc-*-sysv*)			targ_emul=elf32ppc ;;
d154 1
@


1.4
log
@Fixes to make MIPS arc port to use in tree binutils.
@
text
@d127 1
@


1.3
log
@Resolve conflicts with 0609 Cygnus import
@
text
@d117 1
@


1.2
log
@Add OpenBSD configuration (clone NetBSD entries)
@
text
@d15 2
d19 2
a20 2
sparclite*-fujitsu-*)	targ_emul=sun4 ;;
sparc*-*-aout)		targ_emul=sun4 ;;
a21 2
sparc64-*-elf*)		targ_emul=elf64_sparc ;;
sparc64*)		targ_emul=sun4 ;;
d27 1
a27 1
sparc*-wrs-vxworks*)	targ_emul=sun4 ;;
d30 1
a30 1
i960-wrs-vxworks*)	targ_emul=gldi960 ;;
d32 1
a32 1
i960-intel-nindy)	targ_emul=gldi960 ;;
d36 1
d48 4
a51 1
i[345]86-*-linuxaout*)	targ_emul=i386linux; targ_extra_emuls=elf_i386 ;;
d53 4
a56 1
i[345]86-*-linux*)	targ_emul=elf_i386; targ_extra_emuls=i386linux ;;
d63 1
d72 1
a72 1
i[345]86-*-win32)	targ_emul=i386pe ;;
d93 8
d106 1
d121 2
d132 3
a134 2
powerpc-*-elf* | powerpc-*-eabi*)	targ_emul=elf32ppc ;;
powerpcle-*-elf* | powerpcle-*-eabi*)	targ_emul=elf32lppc ;;
d138 1
d145 1
@


1.1
log
@Initial revision
@
text
@d25 1
d53 1
d87 1
d89 1
d100 1
d112 1
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import of binutils, gas, ld & gprof from Cygnus 960609 tree
@
text
@a14 2
sparc64-*-aout*)	targ_emul=sparcaout ;;
sparc64-*-elf*)		targ_emul=elf64_sparc ;;
d17 2
a18 2
sparclite*-fujitsu-*)	targ_emul=sparcaout ;;
sparc*-*-aout)		targ_emul=sparcaout ;;
d20 2
d26 1
a26 1
sparc*-wrs-vxworks*)	targ_emul=sparcaout ;;
d29 1
a29 1
i960-wrs-vxworks*)	targ_emul=gld960 ;;
d31 1
a31 1
i960-intel-nindy)	targ_emul=gld960 ;;
a34 1
m68*-apple-aux*)	targ_emul=m68kaux ;;
d46 1
a46 4
i[345]86-*-linuxaout*)	targ_emul=i386linux
			targ_extra_emuls=elf_i386
			tdir_elf_i386=`echo ${targ_alias} | sed -e 's/aout//'`
			;;
d48 1
a48 4
i[345]86-*-linux*)	targ_emul=elf_i386
			targ_extra_emuls=i386linux
			tdir_i386linux=${targ_alias}aout
			;;
a53 1
i[345]86-*-freebsdelf*)	targ_emul=elf_i386 ;;
d62 1
a62 1
i[345]86-*-cygwin32)	targ_emul=i386pe ;;
a82 8
m68k-*-linuxaout*)	targ_emul=m68klinux
			targ_extra_emuls=m68kelf
			tdir_m68kelf=`echo ${targ_alias} | sed -e 's/aout//'`
			;;
m68k-*-linux*)		targ_emul=m68kelf
			targ_extra_emuls=m68klinux
			tdir_m68klinux=`echo ${targ_alias} | sed -e 's/linux/linuxaout/'`
			;;
a85 1
m68*-*-psos*)		targ_emul=m68kpsos ;;
a98 2
mips*vr4100el-*-elf*)	targ_emul=elf32l4300 ;;
mips*vr4100-*-elf*)	targ_emul=elf32b4300 ;;
d107 2
a108 3
powerpc-*-elf* | powerpc-*-eabi* | powerpc-*-linux* | powerpc-*-sysv*)			targ_emul=elf32ppc ;;
powerpcle-*-elf* | powerpcle-*-eabi* | powerpcle-*-solaris* | powerpcle-*-sysv*)	targ_emul=elf32lppc ;;
powerpc-*-macos*)	targ_emul=ppcmacos ;;
a111 1
powerpcle-*-cygwin32)   targ_emul=ppcpe ;;
a117 1
*-*-ieee*)		targ_emul=vanilla ;;
@


1.1.1.3
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@a22 1
sparc*-*-sysv4*)	targ_emul=elf32_sparc ;;
a26 1
sparc*-*-rtems*)	targ_emul=sparcaout ;;
a31 1
i960-*-rtems*)		targ_emul=gld960coff ;;
d37 11
a47 14
i[3456]86-*-vsta)	targ_emul=vsta ;;
i[3456]86-go32-rtems*)	targ_emul=i386go32 ;;
i[3456]86-*-go32)	targ_emul=i386go32 ;;
i[3456]86-*-aix*)	targ_emul=i386coff ;;
i[3456]86-*-sco*)	targ_emul=i386coff ;;
i[3456]86-*-isc*)	targ_emul=i386coff ;;
i[3456]86-*-lynxos*)	targ_emul=i386lynx ;;
i[3456]86-*-coff)	targ_emul=i386coff ;;
i[3456]86-*-rtems*)	targ_emul=i386coff ;;
i[3456]86-*-bsd)	targ_emul=i386bsd ;;
i[3456]86-*-bsd386)	targ_emul=i386bsd ;;
i[3456]86-*-bsdi*)	targ_emul=i386bsd ;;
i[3456]86-*-aout)	targ_emul=i386aout ;;
i[3456]86-*-linuxaout*)	targ_emul=i386linux
d51 2
a52 2
i[3456]86-*-linuxoldld)	targ_emul=i386linux; targ_extra_emuls=elf_i386 ;;
i[3456]86-*-linux*)	targ_emul=elf_i386
d56 15
a70 15
i[3456]86-*-sysv4*)	targ_emul=elf_i386 ;;
i[3456]86-*-unixware)	targ_emul=elf_i386 ;;
i[3456]86-*-netbsd*)	targ_emul=i386nbsd ;;
i[3456]86-*-netware)	targ_emul=i386nw ;;
i[3456]86-*-elf*)	targ_emul=elf_i386 ;;
i[3456]86-*-freebsdelf*) targ_emul=elf_i386 ;;
i[3456]86-*-sysv*)	targ_emul=i386coff ;;
i[3456]86-*-ptx*)	targ_emul=i386coff ;;
i[3456]86-*-mach*)	targ_emul=i386mach ;;
i[3456]86-*-gnu*)	targ_emul=elf_i386; targ_extra_emuls=i386mach ;;
i[3456]86-*-msdos*)	targ_emul=i386msdos; targ_extra_emuls=i386aout ;;
i[3456]86-*-moss*)	targ_emul=i386moss; targ_extra_emuls=i386msdos ;;
i[3456]86-*-winnt)	targ_emul=i386pe ;;
i[3456]86-*-pe)		targ_emul=i386pe ;;
i[3456]86-*-cygwin32)	targ_emul=i386pe ;;
d79 1
a79 2
h8300-*-hms)		targ_emul=h8300; targ_extra_emuls="h8300h h8300s"
			;;
a82 3
sh-*-elf*)		targ_emul=shelf
			targ_extra_emuls="shlelf sh shl"
			;;
a102 1
m68*-*-rtems*)		targ_emul=m68kcoff ;;
d107 1
a107 2
mips*-dec-osf*)		targ_emul=mipslit ;;
mips*-sgi-irix[56]*)	targ_emul=elf32bmip ;;
d118 3
a120 8
mips*el-*-elf*)		targ_emul=elf32elmip ;;
mips*-*-elf*)		targ_emul=elf32ebmip ;;
alpha-*-linuxecoff*)	targ_emul=alpha targ_extra_emuls=elf64alpha
			tdir_elf64alpha=`echo ${targ_alias} | sed -e 's/ecoff//'`
			;;
alpha-*-linux*)		targ_emul=elf64alpha targ_extra_emuls=alpha
			tdir_alpha=`echo ${targ_alias} | sed -e 's/linux/linuxecoff/'`
			;;
d124 1
a124 1
ns32k-pc532-mach* | ns32k-pc532-ux*)	targ_emul=pc532macha ;;
d126 1
a126 2
powerpc-*-elf* | powerpc-*-eabi* | powerpc-*-linux* | powerpc-*-sysv*)
	targ_emul=elf32ppc ;;
a127 1
powerpc-*-rtems*)	targ_emul=elf32ppc ;;
@


1.1.1.4
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a129 2
mips*vr5000el-*-elf*)	targ_emul=elf32l4300 ;;
mips*vr5000-*-elf*)	targ_emul=elf32b4300 ;;
a131 1
mips*-*-rtems*)		targ_emul=elf32ebmip ;;
a138 1
alpha-*-gnu*)		targ_emul=elf64alpha ;;
@


1.1.1.5
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@a14 1
d10v-*-*)		targ_emul=d10velf ;;
a23 10
sparc*-*-linux*aout*)	targ_emul=sparclinux
			targ_extra_emuls="elf32_sparc sun4"
			tdir_elf32_sparc=`echo ${targ_alias} | sed -e 's/aout//'`
			tdir_sun4=sparc-sun-sunos4
			;;
sparc*-*-linux*)	targ_emul=elf32_sparc
			targ_extra_emuls="sparclinux sun4"
			tdir_sparclinux=${targ_alias}aout
			tdir_sun4=sparc-sun-sunos4
			;;
a34 1
m32r-*-*)		targ_emul=m32relf ;;
d53 1
a53 1
i[3456]86-*-linux*aout*)	targ_emul=i386linux
d101 1
a101 1
m68k-*-linux*aout*)	targ_emul=m68klinux
a115 1
hppa*-*-rtems*)		targ_emul=hppaelf ;;
a134 9
mips*el-*-linux*)	targ_emul=elf32lmip
			targ_extra_emuls="elf32bmip mipslit mipsbig"
			;;
mips*-*-linux*)		targ_emul=elf32bmip
			targ_extra_emuls="elf32lmip mipsbig mipslit"
			;;
mips*-*-lnews*)		targ_emul=mipslnews ;;
mn10200-*-*)		targ_emul=mn10200 ;;
mn10300-*-*)		targ_emul=mn10300 ;;
a156 1
powerpc-*-beos*)	targ_emul=aixppc ;;
@


1.1.1.6
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@a9 2
#  targ_extra_libpath	additional linker emulations using LIB_PATH
#  targ_extra_ofiles	additional objects needed by the emulation
a11 1
targ_extra_ofiles=
d14 1
a14 9
arm-epoc-pe)		targ_emul=arm_epoc_pe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
arm-*-wince)		targ_emul=armpe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
arm-*-pe)		targ_emul=armpe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
arc-*-elf*)		targ_emul=arcelf ;;
avr-*-*)		targ_emul=avr85xx
			targ_extra_emuls="avr1200 avr23xx avr44x4 avr4433 avrmega603 avrmega103 avrmega161" ;;
a15 3
d30v-*-*ext*)		targ_emul=d30v_e; targ_extra_emuls="d30velf d30v_o" ;;
d30v-*-*onchip*)	targ_emul=d30v_o; targ_extra_emuls="d30velf d30v_e" ;;
d30v-*-*)		targ_emul=d30velf; targ_extra_emuls="d30v_e d30v_o" ;;
a18 1
sparclite*-*-elf)	targ_emul=elf32_sparc ;;
d30 2
a31 8
sparc64-*-linux-gnu*)	targ_emul=elf64_sparc
			targ_extra_emuls="elf32_sparc sparclinux sun4"
			tdir_elf32_sparc=`echo ${targ_alias} | sed -e 's/64//'`
			tdir_sparclinux=${tdir_elf32_sparc}aout
			tdir_sun4=sparc-sun-sunos4
			;;
sparc*-*-linux-gnu*)	targ_emul=elf32_sparc
			targ_extra_emuls="sparclinux elf64_sparc sun4"
a32 1
			tdir_elf64_sparc=`echo ${targ_alias} | sed -e 's/32//'`
a36 13
sparc-*-solaris2.[0-6] | sparc-*-solaris2.[0-6].*)
			targ_emul=elf32_sparc ;;
sparc-*-solaris2*)	targ_emul=elf32_sparc
			targ_extra_emuls="elf64_sparc"
			targ_extra_libpath=$targ_extra_emuls
			tdir_elf64_sparc=`echo ${targ_alias} | sed -e 's/32//'`
			;;
sparcv9-*-solaris2* | sparc64-*-solaris2*)
			targ_emul=elf64_sparc
			targ_extra_emuls="elf32_sparc"
			targ_extra_libpath=$targ_extra_emuls
			tdir_elf32_sparc=`echo ${targ_alias} | sed -e 's/64//'`
			;;
d39 1
a39 3
sparc*-*-rtemsaout*)	targ_emul=sparcaout ;;
sparc*-*-rtemself*)	targ_emul=elf32_sparc ;;
sparc*-*-rtems*)	targ_emul=elf32_sparc ;;
a44 2
i960-*-rtemscoff*)	targ_emul=gld960coff ;;
i960-*-rtemself*)	targ_emul=elf32_i960 ;;
a45 1
i960-*-elf*)		targ_emul=elf32_i960 ;;
a51 2
i370-*-elf* | i370-*-linux-gnu*) targ_emul=elf32i370 ;;
i370-*-mvs*) 		targ_emul=mvs ;;
a54 1
i[3456]86-*-msdosdjgpp*) targ_emul=i386go32 ;;
d60 1
a60 3
i[3456]86-*-rtemscoff*) targ_emul=i386coff ;;
i[3456]86-*-rtemself*)  targ_emul=elf_i386 ;;
i[3456]86-*-rtems*)     targ_emul=elf_i386 ;;
d70 1
a70 1
i[3456]86-*-linux-gnu*)	targ_emul=elf_i386
a74 1
i[3456]86-*-solaris2*)	targ_emul=elf_i386 ;;
a75 1
i[3456]86-*-solaris*)	targ_emul=elf_i386 ;;
d79 1
a79 3
i[3456]86-*-freebsdaout* | i[3456]86-*-freebsd[12].* | i[3456]86-*-freebsd[12])
			targ_emul=i386bsd ;;
i[3456]86-*-freebsd*)	targ_emul=elf_i386 ;;
d83 1
a83 1
i[3456]86-*-gnu*)	targ_emul=elf_i386 ;;
d86 3
a88 13
i[3456]86-*-winnt*)	targ_emul=i386pe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
i[3456]86-*-pe)		targ_emul=i386pe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
i[3456]86-*-cygwin*)	targ_emul=i386pe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
i[3456]86-*-mingw32*)	targ_emul=i386pe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
i[3456]86-*-interix*)	targ_emul=i386pe_posix;
 			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
i[3456]86-*-beospe*)    targ_emul=i386beos ;;
i[3456]86-*-beos*)	targ_emul=elf_i386_be ;;
i[3456]86-*-vxworks*)	targ_emul=i386aout ;;
d97 1
a97 18
arm-*-netbsd*)		targ_emul=armnbsd ;;
arm-*-elf)		targ_emul=armelf ;;
arm-*-oabi)		targ_emul=armelf_oabi ;;
arm*-*-linux-gnu*)	targ_emul=armelf_linux; targ_extra_emuls="armelf_linux26 armelf" ;;
arm*-*-uclinux*)	targ_emul=armelf_linux; targ_extra_emuls=armelf ;;
arm*-*-conix*)		targ_emul=armelf ;;
thumb-*-linux-gnu* | thumb-*-uclinux*)	targ_emul=armelf_linux; targ_extra_emuls=armelf ;;
strongarm-*-coff)	targ_emul=armcoff ;;
strongarm-*-elf)	targ_emul=armelf ;;
thumb-*-coff)		targ_emul=armcoff ;;
thumb-*-elf)		targ_emul=armelf ;;
thumb-*-oabi)           targ_emul=armelf_oabi ;;
thumb-epoc-pe)		targ_emul=arm_epoc_pe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
thumb-*-pe)		targ_emul=armpe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
h8300-*-hms* | h8300-*-coff*)
			targ_emul=h8300; targ_extra_emuls="h8300h h8300s"
d99 1
a99 2
h8500-*-hms* | h8500-*-coff*)
			targ_emul=h8500
d102 1
a102 2
sh-*-elf* | sh-*-rtemself*)
			targ_emul=shelf
d105 1
a105 4
sh-*-pe)		targ_emul=shpe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
sh-*-rtemscoff* | sh-*-* | sh-*-rtems*)
			targ_emul=sh; targ_extra_emuls=shl ;;
d117 1
a117 1
m68k-*-linux-gnu*)	targ_emul=m68kelf
a120 1
m68*-*-gnu*)		targ_emul=m68kelf ;;
d125 1
a125 4
m68*-*-rtemscoff*)	targ_emul=m68kcoff ;;
m68*-*-rtemself)	targ_emul=m68kelf ;;
m68*-*-rtems*)		targ_emul=m68kelf ;;
hppa*w*-*)		targ_emul=elf64hppa ;;
a126 1
hppa*-*-linux-gnu*)	targ_emul=hppaelf ;;
a129 2
mips*-*-pe)		targ_emul=mipspe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
d132 1
a132 4
mips*-sgi-irix5*)	targ_emul=elf32bsmip ;;
mips*-sgi-irix6*)	targ_emul=elf32bmipn32
	                targ_extra_emuls="elf32bsmip elf64bmip"
	                ;;
a146 1
mips*el-*-rtems*)	targ_emul=elf32elmip ;;
d148 2
a149 4
mips*el-*-vxworks*)	targ_emul=elf32elmip ;;
mips*-*-vxworks*)	targ_emul=elf32ebmip ;;
mips*el-*-linux-gnu*)	targ_emul=elf32lsmip
			targ_extra_emuls="elf32bsmip mipslit mipsbig"
d151 2
a152 2
mips*-*-linux-gnu*)	targ_emul=elf32bsmip
			targ_extra_emuls="elf32lsmip mipsbig mipslit"
d157 1
a157 2
alpha-*-freebsd*)	targ_emul=elf64alpha ;;
alpha*-*-linuxecoff*)	targ_emul=alpha targ_extra_emuls=elf64alpha
d160 1
a160 1
alpha*-*-linux-gnu*)	targ_emul=elf64alpha targ_extra_emuls=alpha
d163 3
a165 4
alpha*-*-osf*)		targ_emul=alpha ;;
alpha*-*-gnu*)		targ_emul=elf64alpha ;;
alpha*-*-netware*)	targ_emul=alpha ;;
alpha*-*-netbsd*)	targ_emul=elf64alpha ;;
d169 1
a169 6
powerpc-*-linux-gnu*)	targ_emul=elf32ppclinux; targ_extra_emuls=elf32ppc;
			targ_extra_libpath=elf32ppc ;;
pjl*-*-*)	        targ_emul=pjlelf ; targ_extra_emuls="elf_i386" ;;
pj*-*-*)	        targ_emul=pjelf ;;
powerpc-*-elf* | powerpc-*-eabi* | powerpc-*-sysv* \
  | powerpc-*-netbsd* | powerpc-*-vxworks*)
d171 1
a171 4
powerpcle-*-elf* | powerpcle-*-eabi* | powerpcle-*-solaris* \
  | powerpcle-*-sysv* | powerpcle-*-vxworks*)
	targ_emul=elf32lppc ;;
powerpcle-*-rtems*)	targ_emul=elf32leppc ;;
d177 1
a177 1
powerpcle-*-cygwin*)   targ_emul=ppcpe ;;
a180 6
tic30-*-*aout*)		targ_emul=tic30aout ;;
tic30-*-*coff*)		targ_emul=tic30coff ;;
tic80-*-*)		targ_emul=tic80coff ;;
v850-*-*)		targ_emul=v850 ;;
v850e-*-*)		targ_emul=v850 ;;
v850ea-*-*)		targ_emul=v850 ;;
d182 3
a184 4
fr30-*-*)		targ_emul=elf32fr30 ;;
mcore-*-pe)		targ_emul=mcorepe ;
			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
mcore-*-elf)		targ_emul=elf32mcore ;;
@


1.1.1.7
log
@Long delayed import of binutils-2.10.1. Turns out art@@ needs some alpha
bug-fixes...
@
text
@a57 2
sparc64-*-netbsd*)	targ_emul=elf64_sparc ;;
sparc*-*-netbsd*elf*)	targ_emul=elf32_sparc ;;
d119 1
a119 1
i[3456]86-*-sysv[45]*)	targ_emul=elf_i386 ;;
@


1.1.1.8
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@a25 6
cris-*-*aout*)		targ_emul=crisaout
			targ_extra_emuls="criself crislinux"
			targ_extra_libpath=$targ_extra_emuls ;;
cris-*-*)		targ_emul=criself
			targ_extra_emuls="crisaout crislinux"
			targ_extra_libpath=$targ_extra_emuls ;;
a39 6
sparc64-*-freebsd* | sparcv9-*-freebsd*)
			targ_emul=elf64_sparc
			targ_extra_emuls="elf32_sparc"
			targ_extra_libpath=$targ_extra_emuls
			tdir_elf32_sparc=`echo ${targ_alias} | sed -e 's/64//'`
			;;
d76 3
a78 5
sparc*-*-rtemsaout*)    targ_emul=sparcaout ;;
sparc*-*-rtemself*)     targ_emul=elf32_sparc ;;
sparc*-*-rtems*)        targ_emul=elf32_sparc ;;
i860-stardent-sysv4* | i860-stardent-elf*)
			targ_emul=elf32_i860 ;;
d84 2
a87 3
ia64-*-elf*)		targ_emul=elf64_ia64 ;;
ia64-*-freebsd*)	targ_emul=elf64_ia64 ;;
ia64-*-linux*)		targ_emul=elf64_ia64 ;;
a88 4
m68hc11-*-*|m6811-*-*)	targ_emul=m68hc11elf 
			targ_extra_emuls="m68hc11elfb m68hc12elf m68hc12elfb" ;;
m68hc12-*-*|m6812-*-*)	targ_emul=m68hc12elf 
			targ_extra_emuls="m68hc12elfb m68hc11elf m68hc11elfb" ;;
d105 1
d107 1
a107 1
i[3456]86-*-rtems*)	targ_emul=i386coff ;;
d116 1
a116 1
i[3456]86-*-linux*oldld)	targ_emul=i386linux; targ_extra_emuls=elf_i386 ;;
a120 4
x86_64-*-linux-gnu*)	targ_emul=elf_x86_64
			targ_extra_emuls="elf_i386 i386linux"
			tdir_i386linux=${targ_alias}aout
			;;
a130 4
x86_64-*-freebsd*)	targ_emul=elf_x86_64
			targ_extra_emuls=elf_i386
			tdir_elf_i386=`echo ${targ_alias} | sed -e 's/x86_64/i386/'`
			;;
a149 1
i[3456]86-*-chaos)	targ_emul=elf_i386_chaos ;;
a157 2
arm-*-vxworks)		targ_emul=armcoff ;;
arm-*-freebsd*)		targ_emul=armelf ;;
a158 1
arm-*-rtems*)		targ_emul=armelf ;;
d161 1
a161 1
arm*-*-linux-gnu*)	targ_emul=armelf_linux; targ_extra_emuls=armelf ;;
d174 1
a174 3
xscale-*-coff)		targ_emul=armcoff ;;
xscale-*-elf)		targ_emul=armelf ;;
h8300-*-hms* | h8300-*-coff* | h8300-*-rtems*)
a180 4
sh-*-linux*)
			targ_emul=shelf_linux
			targ_extra_emuls=shlelf_linux
			;;
d187 2
a188 1
sh-*-*|sh-*-rtems*)	targ_emul=sh; targ_extra_emuls=shl ;;
d209 4
a212 3
m68*-*-rtems*)		targ_emul=m68kcoff ;;
hppa*64*-*)		targ_emul=elf64hppa ;;
hppa*-*-linux-gnu*)	targ_emul=hppalinux ;;
d214 1
d244 2
a245 2
mips*el-*-linux-gnu*)	targ_emul=elf32ltsmip
			targ_extra_emuls="elf32btsmip elf64ltsmip elf64btsmip"
d247 2
a248 2
mips*-*-linux-gnu*)	targ_emul=elf32btsmip
			targ_extra_emuls="elf32ltsmip elf64btsmip elf64ltsmip"
a250 1
mips*-*-sysv4*)         targ_emul=elf32btsmip ;;
d253 1
a253 4
alpha*-*-freebsd*)	targ_emul=elf64alpha
			targ_extra_emuls=alpha
			tdir_alpha=`echo ${targ_alias} | sed -e 's/freebsd/freebsdecoff/'`
			;;
d267 1
a267 7
powerpc-*-freebsd*)	targ_emul=elf32ppc;
			targ_extra_emuls=elf32ppcsim;
			targ_extra_libpath=elf32ppc;
			tdir_elf32ppcsim=`echo ${targ_alias} | sed -e 's/ppc/ppcsim/'`
			;;
powerpc-*-linux-gnu*)	targ_emul=elf32ppclinux;
			targ_extra_emuls="elf32ppc elf32ppcsim";
d273 1
a273 1
	targ_emul=elf32ppc targ_extra_emuls="elf32ppclinux elf32ppcsim";;
d276 1
a276 1
	targ_emul=elf32lppc targ_extra_emuls="elf32ppcsim";;
d283 1
a283 1
powerpcle-*-cygwin*)    targ_emul=ppcpe ;;
a288 1
tic54x-*-* | c54x*-*-*)	targ_emul=tic54xcoff ;;
@


1.1.1.9
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@a11 2
#  NATIVE_LIB_DIRS	library directories to search on this host
#			(if we are a native or sysrooted linker)
d25 1
a25 1
			targ_extra_emuls="avr1200 avr23xx avr44x4 avr4433 avrmega603 avrmega103 avrmega161 avr1 avr2 avr3 avr4 avr5" ;;
a35 1
dlx-*-elf*)		targ_emul=elf32_dlx ;;
d47 2
a48 2
			targ_emul=elf64_sparc_fbsd
			targ_extra_emuls="elf64_sparc elf32_sparc"
a58 1
			targ_extra_libpath=elf32_sparc
a64 1
			targ_extra_libpath=elf64_sparc
d70 1
a70 4
sparc64-*-netbsd* | sparc64-*-openbsd*)
			targ_emul=elf64_sparc
			targ_extra_emuls="elf32_sparc"
			;;
d101 1
a101 3
ia64-*-freebsd*)	targ_emul=elf64_ia64_fbsd
			targ_extra_emuls="elf64_ia64" ;;
ia64-*-netbsd*)		targ_emul=elf64_ia64 ;;
a102 1
ia64-*-aix*)		targ_emul=elf64_aix ;;
d114 1
a114 1
i[3456]86-*-nto-qnx*)	targ_emul=i386nto ;;
a123 1
i[3456]86-*-rtemscoff*) targ_emul=i386coff ;;
d125 1
a125 2
i[3456]86-*-rtems*)     targ_emul=elf_i386 ;;
i[3456]86-*-aros*)      targ_emul=elf_i386 ;;
a136 3
			if test x${want64} = xtrue; then
			  targ_extra_emuls="$targ_extra_emuls elf_x86_64"
			fi
d141 1
a141 3
			targ_extra_libpath=elf_i386
			tdir_i386linux=`echo ${targ_alias}aout | sed -e 's/x86_64/i386/'`
			tdir_elf_i386=`echo ${targ_alias} | sed -e 's/x86_64/i386/'`
d144 1
a144 3
i[3456]86-*-solaris2*)  targ_emul=elf_i386_ldso
                        targ_extra_emuls="elf_i386"
                        ;;
d146 2
a147 24
i[3456]86-*-solaris*)   targ_emul=elf_i386_ldso
                        targ_extra_emuls="elf_i386"
                        ;;
i[3456]86-*-netbsdelf*)	targ_emul=elf_i386
			targ_extra_emuls=i386nbsd
			;;
i[3456]86-*-netbsdpe*)	targ_emul=i386pe
			targ_extra_ofiles="deffilep.o pe-dll.o"
			;;
i[3456]86-*-netbsd*)	targ_emul=i386nbsd
			targ_extra_emuls=elf_i386
			;;
x86_64-*-netbsd*)	targ_emul=elf_x86_64
			targ_extra_emuls="elf_i386 i386nbsd"
			tdir_elf_i386=`echo ${targ_alias} | \
			    sed -e 's/x86_64/i386/'`
			case "${tdir_elf_i386}" in
			*-netbsdelf*) ;;
			*)
				tdir_elf_i386=`echo ${tdir_elf_i386} | \
				    sed -e 's/netbsd/netbsdelf/'`
				;;
			esac
			;;
a149 1
i[3456]86-*-kaos*)	targ_emul=elf_i386 ;;
d152 4
a155 6
i[3456]86-*-freebsd*)	targ_emul=elf_i386_fbsd
			targ_extra_emuls="elf_i386 i386bsd" ;;
x86_64-*-freebsd*)	targ_emul=elf_x86_64_fbsd
			targ_extra_emuls="elf_i386_fbsd elf_x86_64 elf_i386"
			tdir_elf_i386=`echo ${targ_alias} \
			    | sed -e 's/x86_64/i386/'`
d168 1
a168 2
			targ_extra_ofiles="deffilep.o pe-dll.o"
			test "$targ" != "$host" && LIB_PATH='${tooldir}/lib/w32api' ;;
d186 2
a187 10
arm-*-freebsd*)		targ_emul=armelf_fbsd
			targ_extra_emuls="armelf" ;;
armeb-*-netbsdelf*)	targ_emul=armelfb_nbsd;
			targ_extra_emuls="armelf_nbsd armelf armnbsd" ;;
arm-*-netbsdelf*)	targ_emul=armelf_nbsd;
			targ_extra_emuls="armelfb_nbsd armelf armnbsd" ;;
arm-*-netbsd*)		targ_emul=armnbsd;
			targ_extra_emuls="armelf armelf_nbsd armelfb_nbsd"  ;;
arm-*-nto*)		targ_emul=armnto ;;
arm-*-openbsd*)		targ_emul=armnbsd ;;
a189 2
arm-*-kaos*)		targ_emul=armelf ;;
arm9e-*-elf)		targ_emul=armelf ;;
a196 1
strongarm-*-kaos*)	targ_emul=armelf ;;
d207 1
a207 1
			targ_emul=h8300; targ_extra_emuls="h8300h h8300s h8300hn h8300sn"
d209 1
a209 5
h8300-*-elf*)
			targ_emul=h8300elf;
			targ_extra_emuls="h8300helf h8300self h8300hnelf h8300snelf"
			;;
h8500-*-hms* | h8500-*-coff* | h8500-*-rtems*)
a213 12
			targ_emul=shlelf_linux
			targ_extra_emuls=shelf_linux
			targ_extra_libpath=shelf_linux
			;;
sh64eb-*-linux*)	targ_emul=shelf32_linux
			targ_extra_emuls="shlelf32_linux"
			;;
sh64-*-linux*)		targ_emul=shlelf32_linux
			targ_extra_emuls="shelf32_linux"
			targ_extra_libpath=shelf32_linux
			;;
sh*eb-*-linux*)
d215 1
d217 1
a217 32
sh*-*-linux*)
			targ_emul=shlelf_linux
			;;
sh5le-*-netbsd*)
			targ_emul=shlelf32_nbsd
			targ_extra_emuls="shelf32_nbsd shelf64_nbsd shlelf64_nbsd shelf_nbsd shlelf_nbsd"
			;;
sh5-*-netbsd*)
			targ_emul=shelf32_nbsd
			targ_extra_emuls="shlelf32_nbsd shelf64_nbsd shlelf64_nbsd shelf_nbsd shlelf_nbsd"
			;;
sh64le-*-netbsd*)
			targ_emul=shlelf64_nbsd
			targ_extra_emuls="shelf64_nbsd shelf32_nbsd shlelf32_nbsd shelf_nbsd shlelf_nbsd"
			;;
sh64-*-netbsd*)
			targ_emul=shelf64_nbsd
			targ_extra_emuls="shlelf64_nbsd shelf32_nbsd shlelf32_nbsd shelf_nbsd shlelf_nbsd"
			;;
sh*le-*-netbsdelf*)
			targ_emul=shlelf_nbsd
			targ_extra_emuls=shelf_nbsd
			;;
sh*-*-netbsdelf*)
			targ_emul=shelf_nbsd
			targ_extra_emuls=shlelf_nbsd
			;;
shle*-*-elf* | sh[1234]*le*-*-elf | shle*-*-kaos*)
			targ_emul=shlelf
			targ_extra_emuls="shelf shl sh"
			;;
sh-*-elf* | sh[1234]*-*-elf | sh-*-rtemself* | sh-*-kaos*)
a220 3
sh-*-nto*)		targ_emul=shelf_nto
			targ_extra_emuls=shlelf_nto
			;;
a223 10
sh64le-*-elf*)
			targ_emul=shlelf
			targ_extra_emuls="shelf shlelf32 shelf32 shlelf64 shelf64"
			targ_extra_libpath=$targ_extra_emuls
			;;
sh64-*-elf*)
			targ_emul=shelf
			targ_extra_emuls="shlelf shelf32 shlelf32 shelf64 shlelf64"
			targ_extra_libpath=$targ_extra_emuls
			;;
d241 2
a242 7
m68*-*-netbsd*4k*)	targ_emul=m68k4knbsd
			targ_extra_emuls="m68knbsd m68kelfnbsd" ;;
m68*-*-netbsdelf*)	targ_emul=m68kelfnbsd
			targ_extra_emuls="m68knbsd m68k4knbsd" ;;
m68*-*-netbsdaout* | m68*-*-netbsd*)
			targ_emul=m68knbsd
			targ_extra_emuls="m68kelfnbsd m68k4knbsd" ;;
d244 1
a244 3
m68*-*-rtemscoff*)	targ_emul=m68kcoff ;;
m68*-*-rtems*)		targ_emul=m68kelf ;;
hppa*64*-*-linux-gnu*)	targ_emul=hppa64linux ;;
a248 2
hppa*-*-netbsd*)	targ_emul=hppanbsd ;;
hppa*-*-openbsd*)	targ_emul=hppaobsd ;;
a250 5
vax-*-netbsdelf*)	targ_emul=elf32vax
			targ_extra_emuls=vaxnbsd ;;
vax-*-netbsdaout* | vax-*-netbsd*)
			targ_emul=vaxnbsd
			targ_extra_emuls=elf32vax ;;
a257 1
			targ_extra_libpath=$targ_extra_emuls
d263 1
a263 6
mips*el-*-netbsd*)	targ_emul=elf32lmip
			targ_extra_emuls="elf32bmip"
			;;
mips*-*-netbsd*)	targ_emul=elf32bmip
			targ_extra_emuls="elf32lmip"
			;;
a276 6
mips64*el-*-linux-gnu*)	targ_emul=elf32ltsmipn32
			targ_extra_emuls="elf32btsmipn32 elf32ltsmip elf32btsmip elf64ltsmip elf64btsmip"
			;;
mips64*-*-linux-gnu*)	targ_emul=elf32btsmipn32
			targ_extra_emuls="elf32ltsmipn32 elf32btsmip elf32ltsmip elf64btsmip elf64ltsmip"
			;;
d278 1
a278 1
			targ_extra_emuls="elf32btsmip elf32ltsmipn32 elf64ltsmip elf32btsmipn32 elf64btsmip"
d281 1
a281 1
			targ_extra_emuls="elf32ltsmip elf32btsmipn32 elf64btsmip elf32ltsmipn32 elf64ltsmip"
a284 3
mmix-*-*)		targ_emul=mmo
			targ_extra_emuls=elf64mmix
			;;
d287 2
a288 4
msp430-*-*)             targ_emul=msp430x149
                        targ_extra_emuls="msp430x148 msp430x147 msp430x133 msp430x135 msp430x110 msp430x112 msp430x122 msp430x123 msp430x412 msp430x413 msp430x311 msp430x312 msp430x313 msp430x314 msp430x315 msp430x323 msp430x325 msp430x336 msp430x337 msp430x1101 msp430x1111 msp430x1121 msp430x1331 msp430x1351 msp430x435 msp430x436 msp430x437 msp430x447 msp430x448 msp430x449 msp430x1222 msp430x1232 msp430x169 msp430x168 msp430x167 msp430x155  msp430x156 msp430x157 msp430x1122 msp430x1132" ;;
alpha*-*-freebsd*)	targ_emul=elf64alpha_fbsd
			targ_extra_emuls="elf64alpha alpha"
d300 1
a300 2
alpha*-*-netbsd*)	targ_emul=elf64alpha_nbsd ;;
alpha*-*-openbsd*)	targ_emul=elf64alpha ;;
d303 3
a305 10
ns32k-*-netbsd* | ns32k-pc532-lites*) targ_emul=ns32knbsd ;;
openrisc-*-*)		targ_emul=elf32openrisc ;;
or32-*-coff)		targ_emul=or32 ;;
or32-*-elf)		targ_emul=or32elf ;;
or32-*-rtems)           targ_emul=or32 ;;
pdp11-*-*)		targ_emul=pdp11 ;;
pjl*-*-*)	        targ_emul=pjlelf ; targ_extra_emuls="elf_i386" ;;
pj*-*-*)	        targ_emul=pjelf ;;
powerpc-*-freebsd*)	targ_emul=elf32ppc_fbsd;
			targ_extra_emuls="elf32ppc elf32ppcsim";
d309 11
a319 40
powerpc*-*-linux*)
	case "${targ}" in
	*64*)	targ_emul=elf64ppc
		targ_extra_emuls="elf32ppclinux elf32ppc elf32ppcsim"
		targ_extra_libpath="elf32ppclinux elf32ppc"
		tdir_elf32ppc=`echo "${targ_alias}" | sed -e 's/64//'`
		tdir_elf32ppclinux=$tdir_elf32ppc
		tdir_elf32ppcsim=$tdir_elf32ppc ;;
	*)	targ_emul=elf32ppclinux
		targ_extra_emuls="elf32ppc elf32ppcsim"
		targ_extra_libpath=elf32ppc
		if test "${want64}" = "true"; then
		  targ_extra_emuls="$targ_extra_emuls elf64ppc"
		  targ_extra_libpath="$targ_extra_libpath elf64ppc"
		fi
		;;
	esac ;;
powerpc*le-*-elf* | powerpc*le-*-eabi* | powerpc*le-*-solaris* \
  | powerpc*le-*-sysv* | powerpc*le-*-vxworks*)
	case "${targ}" in
	*64*)	targ_emul=elf64lppc
		targ_extra_emuls="elf32lppc elf32lppcsim"
		tdir_elf32lppc=`echo "${targ_alias}" | sed -e 's/64//'`
		tdir_elf32lppcsim=$tdir_elf32lppc ;;
	*)	targ_emul=elf32lppc
		targ_extra_emuls="elf32ppcsim" ;;
	esac ;;
powerpc*-*-elf* | powerpc*-*-eabi* | powerpc*-*-sysv* \
  | powerpc*-*-netbsd* | powerpc-*-openbsd* | powerpc*-*-vxworks* | powerpc*-*-kaos*)
	case "${targ}" in
	*64*)	targ_emul=elf64ppc
		targ_extra_emuls="elf32ppc elf32ppclinux elf32ppcsim"
		tdir_elf32ppc=`echo "${targ_alias}" | sed -e 's/64//'`
		tdir_elf32ppclinux=$tdir_elf32ppc
		tdir_elf32ppcsim=$tdir_elf32ppc ;;
	*)	targ_emul=elf32ppc
		targ_extra_emuls="elf32ppclinux elf32ppcsim" ;;
	esac ;;
powerpc-*-nto*)         targ_emul=elf32ppcnto ;;
powerpcle-*-nto*)       targ_emul=elf32lppcnto ;;
a326 1
powerpc-*-aix5*)	targ_emul=aix5ppc ;;
a328 2
powerpc-*-windiss*)	targ_emul=elf32ppcwindiss ;;
rs6000-*-aix5*)		targ_emul=aix5rs6 ;;
a331 1
tic4x-*-* | c4x-*-*)    targ_emul=tic4xcoff ; targ_extra_emuls="tic3xcoff tic3xcoff_onchip" ;;
a336 2
iq2000-*-elf)           targ_emul=elf32iq2000 ; targ_extra_emuls="elf32iq10" ;;
frv-*-*)		targ_emul=elf32frv ;;
a337 2
xstormy16-*-*)		targ_emul=elf32xstormy16 ;;
xtensa-*-*)		targ_emul=elf32xtensa;;
a341 10
s390x-*-linux*)         targ_emul=elf64_s390
			targ_extra_emuls=elf_s390
			targ_extra_libpath=$targ_extra_emuls
			tdir_elf_s390=`echo ${targ_alias} | sed -e 's/s390x/s390/'` ;;
s390-*-linux*)          targ_emul=elf_s390
			if test "${want64}" = "true"; then
			  targ_extra_emuls=elf64_s390
			  targ_extra_libpath=$targ_extra_emuls
			  tdir_elf64_s390=`echo ${targ_alias} | sed -e 's/s390/s390x/'`
			fi ;;
a342 1
ip2k-*-elf)		targ_emul=elf32ip2k ;;
a347 50

esac

NATIVE_LIB_DIRS='/usr/local/lib /lib /usr/lib'
case "${target}" in

*-*-freebsd*)
  NATIVE_LIB_DIRS='/lib /usr/lib /usr/local/lib'
  ;;

hppa*64*-*-hpux11*)
  NATIVE_LIB_DIRS=/usr/lib/pa20_64
  ;;

i[3456]86-*-sysv4*)
  NATIVE_LIB_DIRS='/usr/local/lib /usr/ccs/lib /lib /usr/lib'
  ;;

i[3456]86-*-solaris*)
  NATIVE_LIB_DIRS='/usr/local/lib /usr/ccs/lib /lib /usr/lib'
  ;;

i[3456]86-pc-interix*)
  NATIVE_LIB_DIRS='/usr/local/lib $$INTERIX_ROOT/usr/lib /lib /usr/lib'
  ;;

ia64-*-aix*)
  NATIVE_LIB_DIRS='/usr/local/lib /usr/lib/ia64l64 /lib /usr/lib'
  ;;

sparc*-*-solaris2*)
  NATIVE_LIB_DIRS='/usr/local/lib /usr/ccs/lib /lib /usr/lib'
  ;;

i[03-9x]86-*-cygwin*)
  NATIVE_LIB_DIRS='/usr/lib /usr/lib/w32api'
  ;;

*-*-linux*)
  ;;

*-*-freebsd*)
  ;;

*-*-netbsd*)
  ;;

alpha*-*-*)
  NATIVE_LIB_DIRS='/usr/local/lib /usr/ccs/lib /lib /usr/lib'
  ;;
@


1.1.1.10
log
@Binutils 2.15, with testsuites removed, and without gdb and libiberty.
@
text
@a18 1
am33_2.0-*-linux*)	targ_emul=elf32am33lin ;;
d26 2
a27 2
avr-*-*)		targ_emul=avr2
			targ_extra_emuls="avr1 avr3 avr4 avr5" ;;
a30 1
cris-*-linux-gnu*)	targ_emul=crislinux ;;
d49 1
a49 1
sparc64-*-freebsd* | sparcv9-*-freebsd* | sparc64-*-kfreebsd*-gnu | sparcv9-*-kfreebsd*-gnu)
a98 1
i860-*-coff)		targ_emul=coff_i860 ;;
d109 1
a109 2
ia64-*-freebsd* | ia64-*-kfreebsd*-gnu)
		        targ_emul=elf64_ia64_fbsd
d114 1
a114 4
m32r*le-*-elf*)         targ_emul=m32rlelf ;;
m32r*-*-elf*)           targ_emul=m32relf ;;
m32r*le-*-linux-gnu*)   targ_emul=m32rlelf_linux ;;
m32r*-*-linux-gnu*)     targ_emul=m32relf_linux ;;
d125 19
a143 19
i[3-7]86-*-nto-qnx*)	targ_emul=i386nto ;;
i[3-7]86-*-vsta)	targ_emul=vsta ;;
i[3-7]86-go32-rtems*)	targ_emul=i386go32 ;;
i[3-7]86-*-go32)	targ_emul=i386go32 ;;
i[3-7]86-*-msdosdjgpp*) targ_emul=i386go32 ;;
i[3-7]86-*-aix*)	targ_emul=i386coff ;;
i[3-7]86-*-sco*)	targ_emul=i386coff ;;
i[3-7]86-*-isc*)	targ_emul=i386coff ;;
i[3-7]86-*-lynxos*)	targ_emul=i386lynx ;;
i[3-7]86-*-coff)	targ_emul=i386coff ;;
i[3-7]86-*-rtemscoff*)	targ_emul=i386coff ;;
i[3-7]86-*-rtemself*)	targ_emul=elf_i386 ;;
i[3-7]86-*-rtems*)	targ_emul=elf_i386 ;;
i[3-7]86-*-aros*)	targ_emul=elf_i386 ;;
i[3-7]86-*-bsd)		targ_emul=i386bsd ;;
i[3-7]86-*-bsd386)	targ_emul=i386bsd ;;
i[3-7]86-*-bsdi*)	targ_emul=i386bsd ;;
i[3-7]86-*-aout)	targ_emul=i386aout ;;
i[3-7]86-*-linux*aout*)	targ_emul=i386linux
d147 2
a148 2
i[3-7]86-*-linux*oldld)	targ_emul=i386linux; targ_extra_emuls=elf_i386 ;;
i[3-7]86-*-linux-gnu*)	targ_emul=elf_i386
d161 2
a162 2
i[3-7]86-*-sysv[45]*)	targ_emul=elf_i386 ;;
i[3-7]86-*-solaris2*)	targ_emul=elf_i386_ldso
d165 2
a166 2
i[3-7]86-*-unixware)	targ_emul=elf_i386 ;;
i[3-7]86-*-solaris*)	targ_emul=elf_i386_ldso
d169 1
a169 4
i[3-7]86-*-netbsdelf* | \
i[3-7]86-*-netbsd*-gnu* | \
i[3-7]86-*-knetbsd*-gnu)
			targ_emul=elf_i386
d172 1
a172 1
i[3-7]86-*-netbsdpe*)	targ_emul=i386pe
d175 1
a175 1
i[3-7]86-*-netbsd*)	targ_emul=i386nbsd
d190 4
a193 4
i[3-7]86-*-netware)	targ_emul=i386nw ;;
i[3-7]86-*-elf*)	targ_emul=elf_i386 ;;
i[3-7]86-*-kaos*)	targ_emul=elf_i386 ;;
i[3-7]86-*-freebsdaout* | i[3-7]86-*-freebsd[12].* | i[3-7]86-*-freebsd[12])
d195 1
a195 2
i[3-7]86-*-freebsd* | i[3-7]86-*-kfreebsd*-gnu)
		        targ_emul=elf_i386_fbsd
d197 1
a197 2
x86_64-*-freebsd* | x86_64-*-kfreebsd*-gnu)
			targ_emul=elf_x86_64_fbsd
d202 7
a208 7
i[3-7]86-*-sysv*)	targ_emul=i386coff ;;
i[3-7]86-*-ptx*)	targ_emul=i386coff ;;
i[3-7]86-*-mach*)	targ_emul=i386mach ;;
i[3-7]86-*-gnu*)	targ_emul=elf_i386 ;;
i[3-7]86-*-msdos*)	targ_emul=i386msdos; targ_extra_emuls=i386aout ;;
i[3-7]86-*-moss*)	targ_emul=i386moss; targ_extra_emuls=i386msdos ;;
i[3-7]86-*-winnt*)	targ_emul=i386pe ;
d210 1
a210 1
i[3-7]86-*-pe)		targ_emul=i386pe ;
d212 1
a212 1
i[3-7]86-*-cygwin*)	targ_emul=i386pe ;
d215 1
a215 1
i[3-7]86-*-mingw32*)	targ_emul=i386pe ;
d217 1
a217 1
i[3-7]86-*-interix*)	targ_emul=i386pe_posix;
d219 4
a222 4
i[3-7]86-*-beospe*)	targ_emul=i386beos ;;
i[3-7]86-*-beos*)	targ_emul=elf_i386_be ;;
i[3-7]86-*-vxworks*)	targ_emul=elf_i386 ;;
i[3-7]86-*-chaos)	targ_emul=elf_i386_chaos ;;
d231 2
a232 2
arm-*-freebsd* | arm-*-kfreebsd*-gnu)
	       		targ_emul=armelf_fbsd
d243 1
a243 3
armeb-*-elf)		targ_emul=armelfb ;;
arm-*-elf | arm-*-vxworks)
	  		targ_emul=armelf ;;
a246 1
arm*b-*-linux-gnu*)	targ_emul=armelfb_linux; targ_extra_emuls=armelfb ;;
d264 1
a264 1
			targ_emul=h8300; targ_extra_emuls="h8300h h8300s h8300hn h8300sn h8300sx h8300sxn"
d268 1
a268 1
			targ_extra_emuls="h8300helf h8300self h8300hnelf h8300snelf h8300sxelf h8300sxnelf"
d308 1
a308 1
sh*l*-*-netbsdelf*)
d320 1
a320 2
sh-*-rtemscoff*)	targ_emul=sh; targ_extra_emuls=shl ;;
sh-*-elf* | sh[1234]*-*-elf | sh-*-rtems* | sh-*-kaos* | sh-*-vxworks)
d329 1
a329 1
sh-*-*)			targ_emul=sh; targ_extra_emuls=shl ;;
a354 1
m68k-*-uclinux*)	targ_emul=m68kelf ;;
a380 1
vax-*-linux-gnu*)	targ_emul=elf32vax ;;
d393 1
d412 1
a412 3
mips*-*-vxworks*)	targ_emul=elf32ebmip
		        targ_extra_emuls="elf32elmip" ;;
mips*-*-windiss)	targ_emul=elf32mipswindiss ;;
d432 3
a434 4
msp430-*-*)             targ_emul=msp430x110
                        targ_extra_emuls="msp430x112 msp430x1101 msp430x1111 msp430x1121 msp430x1122 msp430x1132 msp430x122 msp430x123 msp430x1222 msp430x1232 msp430x133 msp430x135 msp430x1331 msp430x1351 msp430x147 msp430x148 msp430x149 msp430x155 msp430x156 msp430x157 msp430x167 msp430x168 msp430x169 msp430x311 msp430x312 msp430x313 msp430x314 msp430x315 msp430x323 msp430x325 msp430x336 msp430x337 msp430x412 msp430x413 msp430xE423 msp430xE425 msp430xE427 msp430xW423 msp430xW425 msp430xW427 msp430x435 msp430x436 msp430x437 msp430x447 msp430x448 msp430x449" ;;
alpha*-*-freebsd* | alpha*-*-kfreebsd*-gnu)
		        targ_emul=elf64alpha_fbsd
d455 1
a455 1
or32-*-rtems*)          targ_emul=or32elf ;;
d459 1
a459 2
powerpc-*-freebsd* | powerpc-*-kfreebsd*-gnu)
			targ_emul=elf32ppc_fbsd;
d526 1
a526 2
frv-*-*linux*)		targ_emul=elf32frvfd ;;
frv-*-*)		targ_emul=elf32frv ; targ_extra_emuls="elf32frvfd" ;;
d565 1
a565 1
i[3-7]86-*-sysv4*)
d569 1
a569 1
i[3-7]86-*-solaris*)
d573 1
a573 1
i[3-7]86-pc-interix*)
@


