head	1.3;
access;
symbols
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	binutils-2_11_2:1.1.1.2
	OPENBSD_3_1:1.1.0.26
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.24
	OPENBSD_3_0_BASE:1.1
	BINUTILS-2_10_1:1.1.1.1
	OPENBSD_2_9:1.1.0.22
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.20
	OPENBSD_2_8_BASE:1.1
	BINUTILS-2_10:1.1.1.1
	OPENBSD_2_7:1.1.0.18
	OPENBSD_2_7_BASE:1.1
	new-binutils:1.1.0.16
	OPENBSD_2_6:1.1.0.14
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	BINUTILS-2_8_1:1.1.1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	CYGNUS-961112:1.1.1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1
	CYGNUS-960904:1.1.1.1
	CYGNUS-960609:1.1.1.1
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2004.05.17.21.54.50;	author drahn;	state dead;
branches;
next	1.2;

1.2
date	2002.05.13.17.07.43;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.09.18;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.09.18;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.05.13.14.01.30;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@/* This file is is generated by a shell script.  DO NOT EDIT! */

/* emulate the original gld for the given sh
   Copyright 1991, 1993, 1995, 2000 Free Software Foundation, Inc.
   Written by Steve Chamberlain steve@@cygnus.com

This file is part of GLD, the Gnu Linker.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

#define TARGET_IS_sh

#include "libiberty.h"
#include "bfd.h"
#include "sysdep.h"
#include "bfdlink.h"

#include "ld.h"
#include "ldmain.h"
#include "ldmisc.h"

#include "ldexp.h"
#include "ldlang.h"
#include "ldfile.h"
#include "ldemul.h"

static void gldsh_before_parse PARAMS ((void));
static char *gldsh_get_script PARAMS ((int *isfile));

static void
gldsh_before_parse()
{
#ifndef TARGET_			/* I.e., if not generic.  */
  ldfile_output_architecture = bfd_arch_sh;
#endif /* not TARGET_ */
}

static char *
gldsh_get_script(isfile)
     int *isfile;
{			     
  *isfile = 0;

  if (link_info.relocateable == true && config.build_constructors == true)
    return
concat(
"OUTPUT_FORMAT(\"coff-sh\")\n\
OUTPUT_ARCH(sh)\n\
MEMORY\n\
{\n\
  ram : o = 0x1000, l = 512k\n\
}\n\
 "," SECTIONS\n\
{\n\
 ","  .text :\n\
  {\n\
    *(.text)\n\
    *(.strings)\n\
  } \n\
  .tors :\n\
  {\n\
    ___ctors = . ;\n\
    *(.ctors)\n\
    ___ctors_end = . ;\n\
    ___dtors = . ;\n\
    *(.dtors)\n\
    ___dtors_end = . ;\n\
  } \n\
 ","  .data :\n\
  {\n\
    *(.data)\n\
  } \n\
 "," .bss :\n\
  {\n\
    *(.bss)\n\
    *(COMMON)\n\
  } \n\
 "," .stack   :\n\
  {\n\
    *(.stack)\n\
  } \n\
 "," .stab 0  :\n\
  {\n\
    *(.stab)\n\
  }\n\
 "," .stabstr 0  :\n\
  {\n\
    *(.stabstr)\n\
  }\n\
}\n\n", NULL)
  ; else if (link_info.relocateable == true) return
concat (
"OUTPUT_FORMAT(\"coff-sh\")\n\
OUTPUT_ARCH(sh)\n\
 "," MEMORY\n\
{\n\
  ram : o = 0x1000, l = 512k\n\
}\n\
 "," SECTIONS\n\
{\n\
 ","  .text :\n\
  {\n\
    *(.text)\n\
    *(.strings)\n\
  } \n\
 ","   .tors :\n\
  {\n\
    ___ctors = . ;\n\
    *(.ctors)\n\
    ___ctors_end = . ;\n\
    ___dtors = . ;\n\
    *(.dtors)\n\
    ___dtors_end = . ;\n\
  } \n\
 ","   .data :\n\
  {\n\
    *(.data)\n\
  } \n\
 ","   .bss :\n\
  {\n\
    *(.bss)\n\
    *(COMMON)\n\
  } \n\
 ","   .stack   :\n\
  {\n\
    *(.stack)\n\
  } \n\
 ","   .stab 0  :\n\
  {\n\
    *(.stab)\n\
  }\n\
 ","   .stabstr 0  :\n\
  {\n\
    *(.stabstr)\n\
  }\n\
}\n\n", NULL)
  ; else if (!config.text_read_only) return
concat (
"OUTPUT_FORMAT(\"coff-sh\")\n\
OUTPUT_ARCH(sh)\n\
MEMORY\n\
{\n\
  ram : o = 0x1000, l = 512k\n\
}\n\
SECTIONS\n\
{\n\
 ","   .text :\n\
  {\n\
    *(.text)\n\
    *(.strings)\n\
     _etext = . ; \n\
  }  > ram\n\
 ","   .tors :\n\
  {\n\
    ___ctors = . ;\n\
    *(.ctors)\n\
    ___ctors_end = . ;\n\
    ___dtors = . ;\n\
    *(.dtors)\n\
    ___dtors_end = . ;\n\
  }  > ram\n\
 ","   .data :\n\
  {\n\
    *(.data)\n\
     _edata = . ; \n\
  }  > ram\n\
 ","   .bss :\n\
  {\n\
     _bss_start = . ; \n\
    *(.bss)\n\
    *(COMMON)\n\
     _end = . ;  \n\
  }  > ram\n\
 ","   .stack  0x30000   :\n\
  {\n\
     _stack = . ; \n\
    *(.stack)\n\
  }  > ram\n\
 ","   .stab 0 (NOLOAD) :\n\
  {\n\
    *(.stab)\n\
  }\n\
 ","   .stabstr 0 (NOLOAD) :\n\
  {\n\
    *(.stabstr)\n\
  }\n\
}\n\n", NULL)
  ; else if (!config.magic_demand_paged) return
concat (
"OUTPUT_FORMAT(\"coff-sh\")\n\
OUTPUT_ARCH(sh)\n\
MEMORY\n\
{\n\
  ram : o = 0x1000, l = 512k\n\
}\n\
SECTIONS\n\
{\n\
 ","   .text :\n\
  {\n\
    *(.text)\n\
    *(.strings)\n\
     _etext = . ; \n\
  }  > ram\n\
 ","   .tors :\n\
  {\n\
    ___ctors = . ;\n\
    *(.ctors)\n\
    ___ctors_end = . ;\n\
    ___dtors = . ;\n\
    *(.dtors)\n\
    ___dtors_end = . ;\n\
  }  > ram\n\
 ","   .data :\n\
  {\n\
    *(.data)\n\
     _edata = . ; \n\
  }  > ram\n\
 ","   .bss :\n\
  {\n\
     _bss_start = . ; \n\
    *(.bss)\n\
    *(COMMON)\n\
     _end = . ;  \n\
  }  > ram\n\
 ","   .stack  0x30000   :\n\
  {\n\
     _stack = . ; \n\
    *(.stack)\n\
  }  > ram\n\
 ","   .stab 0 (NOLOAD) :\n\
  {\n\
    *(.stab)\n\
  }\n\
 ","   .stabstr 0 (NOLOAD) :\n\
  {\n\
    *(.stabstr)\n\
  }\n\
}\n\n", NULL)
  ; else return
concat (
"OUTPUT_FORMAT(\"coff-sh\")\n\
OUTPUT_ARCH(sh)\n\
MEMORY\n\
{\n\
  ram : o = 0x1000, l = 512k\n\
}\n\
SECTIONS\n\
{\n\
 ","   .text :\n\
  {\n\
    *(.text)\n\
    *(.strings)\n\
     _etext = . ; \n\
  }  > ram\n\
 ","   .tors :\n\
  {\n\
    ___ctors = . ;\n\
    *(.ctors)\n\
    ___ctors_end = . ;\n\
    ___dtors = . ;\n\
    *(.dtors)\n\
    ___dtors_end = . ;\n\
  }  > ram\n\
 ","   .data :\n\
  {\n\
    *(.data)\n\
     _edata = . ; \n\
  }  > ram\n\
 ","   .bss :\n\
  {\n\
     _bss_start = . ; \n\
    *(.bss)\n\
    *(COMMON)\n\
     _end = . ;  \n\
  }  > ram\n\
 ","   .stack  0x30000   :\n\
  {\n\
     _stack = . ; \n\
    *(.stack)\n\
  }  > ram\n\
 ","   .stab 0 (NOLOAD) :\n\
  {\n\
    *(.stab)\n\
  }\n\
 ","   .stabstr 0 (NOLOAD) :\n\
  {\n\
    *(.stabstr)\n\
  }\n\
}\n\n", NULL)
; }

struct ld_emulation_xfer_struct ld_sh_emulation = 
{
  gldsh_before_parse,
  syslib_default,
  hll_default,
  after_parse_default,
  after_open_default,
  after_allocation_default,
  set_output_arch_default,
  ldemul_default_target,
  before_allocation_default,
  gldsh_get_script,
  "sh",
  "coff-sh"
};
@


1.2
log
@resolve conflicts.
@
text
@@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
   Copyright (C) 1991, 1993 Free Software Foundation, Inc.
d32 5
a37 2
#include "ldfile.h"
#include "ldmisc.h"
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d4 1
a4 1
   Copyright 1991, 1993, 1995, 2000 Free Software Foundation, Inc.
d32 2
a34 5

#include "ldexp.h"
#include "ldlang.h"
#include "ldfile.h"
#include "ldemul.h"
@

