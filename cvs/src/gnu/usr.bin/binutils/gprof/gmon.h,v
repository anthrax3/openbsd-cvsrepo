head	1.8;
access;
symbols
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.50
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.46
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.48
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.40
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.44
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.42
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.38
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.36
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.34
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.32
	OPENBSD_5_0:1.8.0.30
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.28
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.26
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.22
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.24
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.20
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.18
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.16
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.14
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.12
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.10
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.8
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.6
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.4
	OPENBSD_3_7_BASE:1.8
	BINUTILS_2_15:1.1.1.7
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	BINUTILS-2_14:1.1.1.7
	OPENBSD_3_5:1.7.0.8
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.6
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	binutils-2_11_2:1.1.1.6
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	BINUTILS-2_10_1:1.1.1.5
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	BINUTILS-2_10:1.1.1.5
	OPENBSD_2_7:1.3.0.18
	OPENBSD_2_7_BASE:1.3
	new-binutils:1.3.0.16
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	BINUTILS-2_8_1:1.1.1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	CYGNUS-961112:1.1.1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	CYGNUS-960904:1.1.1.3
	CYGNUS-960609:1.1.1.2
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2004.05.17.21.54.48;	author drahn;	state Exp;
branches;
next	1.7;

1.7
date	2002.07.30.16.10.25;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.13.17.07.39;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.24.15.24.19;	author art;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.12.19.12.31;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	96.09.04.19.07.39;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.10.53.12;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.10.11;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.10.11;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.06.09.19.43.20;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.09.04.17.50.26;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	97.05.29.09.30.03;	author niklas;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2000.09.12.14.48.41;	author espie;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2002.05.13.14.03.03;	author fgsch;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2004.05.17.20.42.55;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@/*
 * Copyright (c) 1983, 1991, 1993, 2001
 *      The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
#ifndef gmon_h
#define gmon_h

/* Size of the 4.4BSD gmon header */
#define GMON_HDRSIZE_BSD44_32 (4 + 4 + 4 + 4 + 4 + (3 * 4))
#define GMON_HDRSIZE_BSD44_64 (8 + 8 + 4 + 4 + 4 + (3 * 4))

#if 0 /* For documentation purposes only.  */
  struct raw_phdr
    {
      char low_pc[sizeof(void *)]; /* base pc address of sample buffer */
      char high_pc[sizeof(void *)];/* max pc address of sampled buffer */
      char ncnt[4];		   /* size of sample buffer (plus this
				      header) */

      char version[4];		   /* version number */
      char profrate[4];		   /* profiling clock rate */
      char spare[3*4];		   /* reserved */
    };
#endif

#define GMONVERSION     0x00051879

/* Size of the old BSD gmon header */
#define GMON_HDRSIZE_OLDBSD_32 (4 + 4 + 4) 

/* FIXME: Checking host compiler defines here means that we can't
   use a cross gprof alpha OSF.  */
#if defined(__alpha__) && defined (__osf__) 
#define GMON_HDRSIZE_OLDBSD_64 (8 + 8 + 4 + 4)
#else
#define GMON_HDRSIZE_OLDBSD_64 (8 + 8 + 4)
#endif

#if 0 /* For documentation purposes only.  */
  struct old_raw_phdr
    {
      char low_pc[sizeof(void *)]; /* base pc address of sample buffer */
      char high_pc[sizeof(void *)];/* max pc address of sampled buffer */
      char ncnt[4];		   /* size of sample buffer (plus this
				      header) */
#if defined (__alpha__) && defined (__osf__)
      /*
       * DEC's OSF v3.0 uses 4 bytes of padding to bring the header to
       * a size that is a multiple of 8.
       */
      char pad[4];
#endif
    };
#endif

/*
 * Histogram counters are unsigned shorts:
 */
#define	HISTCOUNTER unsigned short

/*
 * Fraction of text space to allocate for histogram counters here, 1/2:
 */
#define	HISTFRACTION	2

/*
 * Fraction of text space to allocate for from hash buckets.  The
 * value of HASHFRACTION is based on the minimum number of bytes of
 * separation between two subroutine call points in the object code.
 * Given MIN_SUBR_SEPARATION bytes of separation the value of
 * HASHFRACTION is calculated as:
 *
 *      HASHFRACTION = MIN_SUBR_SEPARATION / (2 * sizeof(short) - 1);
 *
 * For the VAX, the shortest two call sequence is:
 *
 *      calls   $0,(r0)
 *      calls   $0,(r0)
 *
 * which is separated by only three bytes, thus HASHFRACTION is
 * calculated as:
 *
 *      HASHFRACTION = 3 / (2 * 2 - 1) = 1
 *
 * Note that the division above rounds down, thus if MIN_SUBR_FRACTION
 * is less than three, this algorithm will not work!
 */
#define	HASHFRACTION 1

/*
 * Percent of text space to allocate for tostructs with a minimum:
 */
#define ARCDENSITY	2
#define MINARCS		50

struct tostruct
  {
    char *selfpc;
    int count;
    unsigned short link;
  };

/*
 * A raw arc, with pointers to the calling site and the called site
 * and a count.  Everything is defined in terms of characters so
 * as to get a packed representation (otherwise, different compilers
 * might introduce different padding):
 */
#if 0 /* For documentation purposes only.  */
  struct raw_arc
    {
      char from_pc[sizeof(void *)];
      char self_pc[sizeof(void *)];
      char count[sizeof(long)];
    };
#endif

/*
 * General rounding functions:
 */
#define ROUNDDOWN(x,y)	(((x)/(y))*(y))
#define ROUNDUP(x,y)	((((x)+(y)-1)/(y))*(y))

#endif /* gmon_h */
@


1.7
log
@Update BSD licenses to include 'with or without modification'.
From binutils -current.
@
text
@d2 1
a2 1
 * Copyright (c) 1983, 1993, 2001
d32 17
a48 12
struct raw_phdr
  {
    /* FIXME: Checking a host compiler define means that we can't use
       a cross gprof to the alpha.  */
    char low_pc[GMON_PTR_SIZE];	/* base pc address of sample buffer */
    char high_pc[GMON_PTR_SIZE];/* max pc address of sampled buffer */
    char ncnt[4];		/* size of sample buffer (plus this header) */

    char version[4];		/* version number */
    char profrate[4];		/* profiling clock rate */
    char spare[3*4];		/* reserved */
  };
d52 10
a61 5
struct old_raw_phdr
  {
    char low_pc[GMON_PTR_SIZE];	/* base pc address of sample buffer */
    char high_pc[GMON_PTR_SIZE];/* max pc address of sampled buffer */
    char ncnt[4];		/* size of sample buffer (plus this header) */
d63 7
a69 2
    /* FIXME: Checking host compiler defines here means that we can't
       use a cross gprof alpha OSF.  */
d71 7
a77 5
    /*
     * DEC's OSF v3.0 uses 4 bytes of padding to bring the header to
     * a size that is a multiple of 8.
     */
    char pad[4];
a78 1
  };
d133 8
a140 6
struct raw_arc
  {
    char from_pc[GMON_PTR_SIZE];
    char self_pc[GMON_PTR_SIZE];
    char count[4];
  };
@


1.6
log
@resolve conflicts.
@
text
@d1 3
a3 3
/*-
 * Copyright (c) 1991, 2001 The Regents of the University of California.
 * All rights reserved.
d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
a27 2
 *
 *	@@(#)gmon.h	5.2 (Berkeley) 5/6/91
@


1.5
log
@support sparc64
@
text
@d2 1
a2 1
 * Copyright (c) 1991 The Regents of the University of California.
d42 2
a43 7
#if defined(__alpha__) || defined(__sparc64__)
    char low_pc[8];		/* base pc address of sample buffer */
    char high_pc[8];		/* max pc address of sampled buffer */
#else
    char low_pc[4];		/* base pc address of sample buffer */
    char high_pc[4];		/* max pc address of sampled buffer */
#endif
d55 2
a56 9
    /* FIXME: Checking a host compiler define means that we can't use
       a cross gprof to the alpha.  */
#if defined(__alpha__) || defined(__sparc64__)
    char low_pc[8];		/* base pc address of sample buffer */
    char high_pc[8];		/* max pc address of sampled buffer */
#else
    char low_pc[4];		/* base pc address of sample buffer */
    char high_pc[4];		/* max pc address of sampled buffer */
#endif
d94 1
a94 1
 * which is separated by only three bytes, thus HASHFRACTION is 
d125 2
a126 9
    /* FIXME: Checking a host compiler define means that we can't use
       a cross gprof to the alpha.  */
#ifdef __alpha__
    char from_pc[8];
    char self_pc[8];
    char count[8];
#else
    char from_pc[4];
    char self_pc[4];
a127 1
#endif
@


1.4
log
@Help stupid cvs fixing basic conflicts.
@
text
@d42 1
a42 1
#ifdef __alpha__
d62 1
a62 1
#ifdef __alpha__
@


1.3
log
@Merge the Cygnus 960904 sources
@
text
@d40 29
a68 2
    char low_pc[sizeof (bfd_vma)];	/* base pc address of sample buffer */
    char high_pc[sizeof (bfd_vma)];	/* max pc address of sampled buffer */
d71 2
a78 6
#else
#ifdef BSD44_FORMAT
    char version[4];			/* version number */
    char profrate[4];			/* profiling clock rate */
    char spare[3*4];			/* reserved */
#endif
d137 11
a147 3
    char from_pc[sizeof (bfd_vma)];
    char self_pc[sizeof (bfd_vma)];
    char count[sizeof (long)];
@


1.2
log
@Bring Cygnus versions into the trunk, keeping our local patches
@
text
@d50 2
a51 1
#elif defined (BSD44_FORMAT)
d55 1
@


1.1
log
@Initial revision
@
text
@d43 2
a44 1
#ifdef __osf__
d50 4
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import of binutils, gas, ld & gprof from Cygnus 960609 tree
@
text
@d43 1
a43 2

#if defined (__alpha__) && defined (__osf__)
a48 4
#elif defined (BSD44_FORMAT)
    char version[4];			/* version number */
    char profrate[4];			/* profiling clock rate */
    char spare[3*4];			/* reserved */
@


1.1.1.3
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@d50 1
a50 2
#else
#ifdef BSD44_FORMAT
a53 1
#endif
@


1.1.1.4
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@d40 2
a41 7
#ifdef TARGET_alpha
    char low_pc[8];		/* base pc address of sample buffer */
    char high_pc[8];		/* max pc address of sampled buffer */
#else
    char low_pc[4];		/* base pc address of sample buffer */
    char high_pc[4];		/* max pc address of sampled buffer */
#endif
d114 3
a116 9
#ifdef TARGET_alpha
    char from_pc[8];
    char self_pc[8];
    char count[8];
#else
    char from_pc[4];
    char self_pc[4];
    char count[4];
#endif
@


1.1.1.5
log
@Import binutils-2.10
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d40 1
a40 3
    /* FIXME: Checking a host compiler define means that we can't use
       a cross gprof to the alpha.  */
#ifdef __alpha__
a48 22
    char version[4];		/* version number */
    char profrate[4];		/* profiling clock rate */
    char spare[3*4];		/* reserved */
  };

#define GMONVERSION     0x00051879

struct old_raw_phdr
  {
    /* FIXME: Checking a host compiler define means that we can't use
       a cross gprof to the alpha.  */
#ifdef __alpha__
    char low_pc[8];		/* base pc address of sample buffer */
    char high_pc[8];		/* max pc address of sampled buffer */
#else
    char low_pc[4];		/* base pc address of sample buffer */
    char high_pc[4];		/* max pc address of sampled buffer */
#endif
    char ncnt[4];		/* size of sample buffer (plus this header) */

    /* FIXME: Checking host compiler defines here means that we can't
       use a cross gprof alpha OSF.  */
d55 6
d119 1
a119 3
    /* FIXME: Checking a host compiler define means that we can't use
       a cross gprof to the alpha.  */
#ifdef __alpha__
@


1.1.1.6
log
@Import binutils-2.11.2
- only the binutils package (no gdb here)
- don't import libiberty and texinfo, they are elsewhere
- remove all .info* generated files
@
text
@d2 1
a2 1
 * Copyright (c) 1991, 2001 The Regents of the University of California.
d42 7
a48 2
    char low_pc[GMON_PTR_SIZE];	/* base pc address of sample buffer */
    char high_pc[GMON_PTR_SIZE];/* max pc address of sampled buffer */
d60 9
a68 2
    char low_pc[GMON_PTR_SIZE];	/* base pc address of sample buffer */
    char high_pc[GMON_PTR_SIZE];/* max pc address of sampled buffer */
d106 1
a106 1
 * which is separated by only three bytes, thus HASHFRACTION is
d137 9
a145 2
    char from_pc[GMON_PTR_SIZE];
    char self_pc[GMON_PTR_SIZE];
d147 1
@


1.1.1.7
log
@import binutils 2.14 (excluding testsuites, .info files, and .po files)
@
text
@d1 3
a3 3
/*
 * Copyright (c) 1983, 1991, 1993, 2001
 *      The Regents of the University of California.  All rights reserved.
d13 5
a17 1
 * 3. Neither the name of the University nor the names of its contributors
d32 2
d38 12
a49 17
/* Size of the 4.4BSD gmon header */
#define GMON_HDRSIZE_BSD44_32 (4 + 4 + 4 + 4 + 4 + (3 * 4))
#define GMON_HDRSIZE_BSD44_64 (8 + 8 + 4 + 4 + 4 + (3 * 4))

#if 0 /* For documentation purposes only.  */
  struct raw_phdr
    {
      char low_pc[sizeof(void *)]; /* base pc address of sample buffer */
      char high_pc[sizeof(void *)];/* max pc address of sampled buffer */
      char ncnt[4];		   /* size of sample buffer (plus this
				      header) */

      char version[4];		   /* version number */
      char profrate[4];		   /* profiling clock rate */
      char spare[3*4];		   /* reserved */
    };
#endif
d53 5
a57 2
/* Size of the old BSD gmon header */
#define GMON_HDRSIZE_OLDBSD_32 (4 + 4 + 4) 
d59 2
a60 15
/* FIXME: Checking host compiler defines here means that we can't
   use a cross gprof alpha OSF.  */
#if defined(__alpha__) && defined (__osf__) 
#define GMON_HDRSIZE_OLDBSD_64 (8 + 8 + 4 + 4)
#else
#define GMON_HDRSIZE_OLDBSD_64 (8 + 8 + 4)
#endif

#if 0 /* For documentation purposes only.  */
  struct old_raw_phdr
    {
      char low_pc[sizeof(void *)]; /* base pc address of sample buffer */
      char high_pc[sizeof(void *)];/* max pc address of sampled buffer */
      char ncnt[4];		   /* size of sample buffer (plus this
				      header) */
d62 5
a66 7
      /*
       * DEC's OSF v3.0 uses 4 bytes of padding to bring the header to
       * a size that is a multiple of 8.
       */
      char pad[4];
#endif
    };
d68 1
d123 6
a128 8
#if 0 /* For documentation purposes only.  */
  struct raw_arc
    {
      char from_pc[sizeof(void *)];
      char self_pc[sizeof(void *)];
      char count[sizeof(long)];
    };
#endif
@


