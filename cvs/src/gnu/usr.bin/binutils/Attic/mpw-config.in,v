head	1.5;
access;
symbols
	OPENBSD_3_6:1.4.0.18
	OPENBSD_3_6_BASE:1.4
	BINUTILS-2_14:1.1.1.4
	OPENBSD_3_5:1.4.0.16
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.14
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.12
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.10
	OPENBSD_3_2_BASE:1.4
	binutils-2_11_2:1.1.1.4
	OPENBSD_3_1:1.4.0.8
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.6
	OPENBSD_3_0_BASE:1.4
	BINUTILS-2_10_1:1.1.1.4
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	BINUTILS-2_10:1.1.1.4
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	new-binutils:1.3.0.14
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	BINUTILS-2_8_1:1.1.1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	CYGNUS-961112:1.1.1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	CYGNUS-960904:1.1.1.2
	CYGNUS-960609:1.1.1.1
	CYGNUS-960607:1.1.1.1
	CYGNUS:1.1.1
	FSF_2_6:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2004.11.02.20.59.23;	author miod;	state dead;
branches;
next	1.4;

1.4
date	2000.09.12.22.24.19;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	96.11.23.03.32.27;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.09.04.18.58.47;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.11.03.35;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.01.08.11.03.35;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	96.09.04.17.34.35;	author niklas;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	96.11.19.14.11.44;	author niklas;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	97.05.29.09.15.17;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Merge glitches.
@
text
@# Configuration fragment for Cygnus source tree.

# Check that we can find all the special tools that we will need.
# The test for sed is semi-pointless, because it's already been invoked
# by the calculation of target_cpu in the main configure script, but
# the test will also show which one is being used.

Set Exit 0
Echo byacc is `Which byacc`
Echo flex is `Which flex`
Echo forward-include is `Which forward-include`
Echo MoveIfChange is `Which MoveIfChange`
Echo mpw-touch is `Which mpw-touch`
Echo mpw-true is `Which mpw-true`
Echo NewFolderRecursive is `Which NewFolderRecursive`
Echo null-command is `Which null-command`
Echo open-brace is `Which open-brace`
Echo sed is `Which sed`
Echo 'tr-7to8' is `Which tr-7to8`
Echo true is `Which true`
Set Exit 1

Set host_libs "mmalloc libiberty opcodes bfd readline gash tcl tk tclX"

Set host_tools "texinfo byacc flex bison binutils ld gas gcc gdb make patch \Option-d
	    prms send-pr gprof gdbtest tgas etc expect dejagnu sim bash \Option-d
	    m4 autoconf ispell grep diff rcs cvs fileutils shellutils time \Option-d
	    textutils wdiff find emacs emacs19 uudecode hello tar gzip indent \Option-d
	    recode release sed utils guile perl apache inet gawk"

Set target_libs "newlib"

Set target_tools "examples"

# Configure the resource compiler if targeting Macs.
If {target_os} =~ /macos/ || {target_os} =~ /mpw/
	Set host_tools "{host_tools} grez"
End If
	
Set configdirs "{host_libs} {host_tools} {target_libs} {target_tools}"
Export configdirs

# Make up a special include directory that tools will share.

If "`Exists "{objdir}"extra-include`" == ""
	NewFolder "{objdir}"extra-include
End If

Set edir "{objdir}extra-include:"

forward-include "{srcdir}"include:mpw:sys:file.h "{edir}"'sys/file.h'
forward-include "{srcdir}"include:mpw:sys:ioctl.h "{edir}"'sys/ioctl.h'
forward-include "{srcdir}"include:mpw:sys:param.h "{edir}"'sys/param.h'
forward-include "{srcdir}"include:mpw:sys:resource.h "{edir}"'sys/resource.h'
forward-include "{srcdir}"include:mpw:sys:stat.h "{edir}"'sys/stat.h'
forward-include "{srcdir}"include:mpw:sys:time.h "{edir}"'sys/time.h'
forward-include "{srcdir}"include:mpw:sys:types.h "{edir}"'sys/types.h'

forward-include "{srcroot}"include:aout:aout64.h "{edir}"'aout/aout64.h'
forward-include "{srcroot}"include:aout:ar.h "{edir}"'aout/ar.h'
forward-include "{srcroot}"include:aout:ranlib.h "{edir}"'aout/ranlib.h'
forward-include "{srcroot}"include:aout:reloc.h "{edir}"'aout/reloc.h'
forward-include "{srcroot}"include:aout:stab.def "{edir}"'aout/stab.def'
forward-include "{srcroot}"include:aout:stab_gnu.h "{edir}"'aout/stab_gnu.h'

If "`Exists "{srcroot}"include:aout:"{target_cpu}".h`" != ""
	forward-include "{srcroot}"include:aout:"{target_cpu}".h "{edir}"'aout/'"{target_cpu}"'.h'
End If

forward-include "{srcroot}"include:coff:ecoff.h "{edir}"'coff/ecoff.h'
forward-include "{srcroot}"include:coff:internal.h "{edir}"'coff/internal.h'
forward-include "{srcroot}"include:coff:sym.h "{edir}"'coff/sym.h'
forward-include "{srcroot}"include:coff:symconst.h "{edir}"'coff/symconst.h'

If "`Exists "{srcroot}"include:coff:"{target_cpu}".h`" != ""
	forward-include "{srcroot}"include:coff:"{target_cpu}".h "{edir}"'coff/'"{target_cpu}"'.h'
End If
If "{target_cpu}" =~ /powerpc/
	forward-include "{srcroot}"include:coff:rs6000.h "{edir}"'coff/rs6000.h'
End If

forward-include "{srcroot}"include:elf:common.h "{edir}"'elf/common.h'
forward-include "{srcroot}"include:elf:dwarf.h "{edir}"'elf/dwarf.h'
forward-include "{srcroot}"include:elf:dwarf2.h "{edir}"'elf/dwarf2.h'
forward-include "{srcroot}"include:elf:external.h "{edir}"'elf/external.h'
forward-include "{srcroot}"include:elf:internal.h "{edir}"'elf/internal.h'

# Believe it or not, GDB needs this for all targets.
forward-include "{srcroot}"include:elf:mips.h "{edir}"'elf/mips.h'

If "`Exists "{srcroot}"include:elf:"{target_cpu}".h`" != ""
	forward-include "{srcroot}"include:elf:"{target_cpu}".h "{edir}"'elf/'"{target_cpu}"'.h'
End If
If "{target_cpu}" =~ /powerpc/
	forward-include "{srcroot}"include:elf:ppc.h "{edir}"'elf/ppc.h'
End If

If "`Exists "{srcroot}"include:opcode:"{target_cpu}".h`" != ""
	forward-include "{srcroot}"include:opcode:"{target_cpu}".h "{edir}"'opcode/'"{target_cpu}"'.h'
End If
If "{target_cpu}" =~ /powerpc/
	forward-include "{srcroot}"include:opcode:ppc.h "{edir}"'opcode/ppc.h'
End If

# Add some bfd includes that get mentioned outside the bfd dir.
	
forward-include "{srcroot}"bfd:libcoff.h "{edir}"'bfd/libcoff.h'
forward-include "{srcroot}"bfd:libecoff.h "{edir}"'bfd/libecoff.h'

# Translate random files into MPW-only character set.

tr-7to8 "{srcdir}"mpw-README > "{objdir}Read Me for MPW"
tr-7to8 "{srcdir}"mpw-install > "{objdir}"Install
@


1.4
log
@Resolve other problems that dumb cvs can't find out by itself.

(trivial part done, `interesting' patches remain)
@
text
@@


1.3
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d15 1
d113 1
a113 1
tr-7to8 "{srcdir}"mpw-install > "{objdir}"Install@


1.2
log
@Merge the Cygnus 960904 sources
@
text
@d109 1
a109 1
# Make the README more visible.
d111 2
a112 1
Catenate "{srcdir}"mpw-README > "{objdir}Read Me for MPW"
@


1.1
log
@Initial revision
@
text
@d13 3
a17 1
Echo mpw-touch is `Which mpw-touch`
d19 1
d22 1
a22 1
Set host_libs "libiberty opcodes bfd readline"
d24 5
a28 1
Set host_tools "byacc flex binutils ld gas gcc gdb"
d83 1
@


1.1.1.1
log
@Initial GNU binutils 2.6 import
@
text
@@


1.1.1.2
log
@Import of binutils, gas, ld & gprof from Cygnus 960904 tree
@
text
@a12 3
Echo mpw-touch is `Which mpw-touch`
Echo mpw-true is `Which mpw-true`
Echo null-command is `Which null-command`
d15 1
a16 1
Echo true is `Which true`
d19 1
a19 1
Set host_libs "mmalloc libiberty opcodes bfd readline gash tcl tk tclX"
d21 1
a21 5
Set host_tools "texinfo byacc flex bison binutils ld gas gcc gdb make patch \Option-d
	    prms send-pr gprof gdbtest tgas etc expect dejagnu sim bash \Option-d
	    m4 autoconf ispell grep diff rcs cvs fileutils shellutils time \Option-d
	    textutils wdiff find emacs emacs19 uudecode hello tar gzip indent \Option-d
	    recode release sed utils guile perl apache inet gawk"
a75 1
forward-include "{srcroot}"include:elf:dwarf2.h "{edir}"'elf/dwarf2.h'
@


1.1.1.3
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@d109 1
a109 1
# Translate random files into MPW-only character set.
d111 1
a111 2
tr-7to8 "{srcdir}"mpw-README > "{objdir}Read Me for MPW"
tr-7to8 "{srcdir}"mpw-install > "{objdir}"Install@


1.1.1.4
log
@Import of binutils-2.8.1 from Cygnus/FSF
@
text
@a14 1
Echo NewFolderRecursive is `Which NewFolderRecursive`
d112 1
a112 1
tr-7to8 "{srcdir}"mpw-install > "{objdir}"Install
@
