head	1.85;
access;
symbols
	OPENBSD_6_0:1.83.0.6
	OPENBSD_6_0_BASE:1.83
	OPENBSD_5_9:1.83.0.2
	OPENBSD_5_9_BASE:1.83
	OPENBSD_5_8:1.83.0.4
	OPENBSD_5_8_BASE:1.83
	OPENBSD_5_7:1.82.0.4
	OPENBSD_5_7_BASE:1.82
	OPENBSD_5_6:1.82.0.8
	OPENBSD_5_6_BASE:1.82
	OPENBSD_5_5:1.82.0.6
	OPENBSD_5_5_BASE:1.82
	OPENBSD_5_4:1.82.0.2
	OPENBSD_5_4_BASE:1.82
	OPENBSD_5_3:1.79.0.2
	OPENBSD_5_3_BASE:1.79
	OPENBSD_5_2:1.76.0.4
	OPENBSD_5_2_BASE:1.76
	OPENBSD_5_1_BASE:1.76
	OPENBSD_5_1:1.76.0.2
	OPENBSD_5_0:1.75.0.2
	OPENBSD_5_0_BASE:1.75
	OPENBSD_4_9:1.74.0.6
	OPENBSD_4_9_BASE:1.74
	OPENBSD_4_8:1.74.0.4
	OPENBSD_4_8_BASE:1.74
	OPENBSD_4_7:1.74.0.2
	OPENBSD_4_7_BASE:1.74
	OPENBSD_4_6:1.73.0.6
	OPENBSD_4_6_BASE:1.73
	OPENBSD_4_5:1.73.0.2
	OPENBSD_4_5_BASE:1.73
	OPENBSD_4_4:1.72.0.4
	OPENBSD_4_4_BASE:1.72
	OPENBSD_4_3:1.72.0.2
	OPENBSD_4_3_BASE:1.72
	OPENBSD_4_2:1.70.0.2
	OPENBSD_4_2_BASE:1.70
	OPENBSD_4_1:1.67.0.2
	OPENBSD_4_1_BASE:1.67
	OPENBSD_4_0:1.66.0.2
	OPENBSD_4_0_BASE:1.66
	OPENBSD_3_9:1.64.0.6
	OPENBSD_3_9_BASE:1.64
	OPENBSD_3_8:1.64.0.4
	OPENBSD_3_8_BASE:1.64
	OPENBSD_3_7:1.64.0.2
	OPENBSD_3_7_BASE:1.64
	OPENBSD_3_6:1.58.0.2
	OPENBSD_3_6_BASE:1.58
	OPENBSD_3_5:1.54.0.2
	OPENBSD_3_5_BASE:1.54
	OPENBSD_3_4:1.51.0.2
	OPENBSD_3_4_BASE:1.51
	OPENBSD_3_3:1.50.0.2
	OPENBSD_3_3_BASE:1.50
	OPENBSD_3_2:1.48.0.2
	OPENBSD_3_2_BASE:1.48
	OPENBSD_3_1:1.45.0.2
	OPENBSD_3_1_BASE:1.45
	OPENBSD_3_0:1.44.0.2
	OPENBSD_3_0_BASE:1.44
	OPENBSD_2_9:1.43.0.2
	OPENBSD_2_9_BASE:1.43
	OPENBSD_2_8:1.41.0.2
	OPENBSD_2_8_BASE:1.41
	OPENBSD_2_7:1.32.0.4
	OPENBSD_2_7_BASE:1.32
	new-binutils:1.32.0.2
	OPENBSD_2_6:1.31.0.2
	OPENBSD_2_6_BASE:1.31
	OPENBSD_2_5:1.29.0.2
	OPENBSD_2_5_BASE:1.29
	OPENBSD_2_4:1.28.0.2
	OPENBSD_2_4_BASE:1.28
	OPENBSD_2_3:1.22.0.2
	OPENBSD_2_3_BASE:1.22
	OPENBSD_2_2:1.16.0.2
	OPENBSD_2_2_BASE:1.16
	OPENBSD_2_1:1.14.0.2
	OPENBSD_2_1_BASE:1.14
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5;
locks; strict;
comment	@# @;


1.85
date	2016.09.18.08.58.13;	author natano;	state Exp;
branches;
next	1.84;
commitid	BXZIVfFv6OCHOoWz;

1.84
date	2016.09.11.07.42.02;	author guenther;	state Exp;
branches;
next	1.83;
commitid	noYMEVOXceLT1aKj;

1.83
date	2015.06.01.17.36.19;	author miod;	state Exp;
branches;
next	1.82;
commitid	MPvATu4lQ8RLIXjC;

1.82
date	2013.07.05.21.29.51;	author miod;	state Exp;
branches;
next	1.81;

1.81
date	2013.07.05.21.09.21;	author miod;	state Exp;
branches;
next	1.80;

1.80
date	2013.03.10.21.06.23;	author miod;	state Exp;
branches;
next	1.79;

1.79
date	2013.01.05.20.03.06;	author miod;	state Exp;
branches;
next	1.78;

1.78
date	2013.01.05.11.20.55;	author miod;	state Exp;
branches;
next	1.77;

1.77
date	2012.08.28.18.59.28;	author pascal;	state Exp;
branches;
next	1.76;

1.76
date	2011.10.30.20.57.06;	author schwarze;	state Exp;
branches;
next	1.75;

1.75
date	2011.07.06.04.10.32;	author schwarze;	state Exp;
branches;
next	1.74;

1.74
date	2010.02.03.20.48.58;	author miod;	state Exp;
branches;
next	1.73;

1.73
date	2008.08.22.13.02.53;	author kettenis;	state Exp;
branches;
next	1.72;

1.72
date	2008.01.14.22.01.23;	author espie;	state Exp;
branches;
next	1.71;

1.71
date	2007.12.30.12.20.58;	author espie;	state Exp;
branches;
next	1.70;

1.70
date	2007.03.26.08.19.36;	author jmc;	state Exp;
branches;
next	1.69;

1.69
date	2007.03.25.23.13.59;	author deraadt;	state Exp;
branches;
next	1.68;

1.68
date	2007.03.19.05.32.43;	author deraadt;	state Exp;
branches;
next	1.67;

1.67
date	2006.10.06.20.58.17;	author miod;	state Exp;
branches;
next	1.66;

1.66
date	2006.07.12.23.00.07;	author espie;	state Exp;
branches;
next	1.65;

1.65
date	2006.05.04.19.40.38;	author miod;	state Exp;
branches;
next	1.64;

1.64
date	2005.01.25.13.24.51;	author mickey;	state Exp;
branches;
next	1.63;

1.63
date	2005.01.15.19.54.04;	author kettenis;	state Exp;
branches;
next	1.62;

1.62
date	2004.12.27.21.11.07;	author kettenis;	state Exp;
branches;
next	1.61;

1.61
date	2004.11.10.22.31.33;	author drahn;	state Exp;
branches;
next	1.60;

1.60
date	2004.11.02.20.44.57;	author miod;	state Exp;
branches;
next	1.59;

1.59
date	2004.10.21.20.47.29;	author grange;	state Exp;
branches;
next	1.58;

1.58
date	2004.06.01.23.01.44;	author drahn;	state Exp;
branches;
next	1.57;

1.57
date	2004.05.25.09.00.56;	author miod;	state Exp;
branches;
next	1.56;

1.56
date	2004.05.21.20.23.01;	author kettenis;	state Exp;
branches;
next	1.55;

1.55
date	2004.05.17.21.54.18;	author drahn;	state Exp;
branches;
next	1.54;

1.54
date	2004.02.27.17.40.15;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	2004.02.10.22.28.04;	author mickey;	state Exp;
branches;
next	1.52;

1.52
date	2004.01.13.03.43.40;	author mickey;	state Exp;
branches;
next	1.51;

1.51
date	2003.04.17.03.44.21;	author drahn;	state Exp;
branches;
next	1.50;

1.50
date	2003.02.16.15.09.03;	author espie;	state Exp;
branches;
next	1.49;

1.49
date	2003.02.02.15.20.11;	author espie;	state Exp;
branches;
next	1.48;

1.48
date	2002.08.11.22.51.48;	author art;	state Exp;
branches;
next	1.47;

1.47
date	2002.05.08.19.39.24;	author espie;	state Exp;
branches;
next	1.46;

1.46
date	2002.05.08.16.48.11;	author art;	state Exp;
branches;
next	1.45;

1.45
date	2002.04.02.21.56.33;	author fgsch;	state Exp;
branches;
next	1.44;

1.44
date	2001.09.05.22.59.01;	author art;	state Exp;
branches;
next	1.43;

1.43
date	2001.03.18.17.39.55;	author millert;	state Exp;
branches;
next	1.42;

1.42
date	2001.01.16.20.22.31;	author espie;	state Exp;
branches;
next	1.41;

1.41
date	2000.09.21.15.15.57;	author espie;	state Exp;
branches;
next	1.40;

1.40
date	2000.09.19.06.03.46;	author deraadt;	state Exp;
branches;
next	1.39;

1.39
date	2000.09.14.21.55.25;	author espie;	state Exp;
branches;
next	1.38;

1.38
date	2000.09.14.16.48.09;	author espie;	state Exp;
branches;
next	1.37;

1.37
date	2000.09.14.13.15.39;	author espie;	state Exp;
branches;
next	1.36;

1.36
date	2000.09.12.23.59.03;	author espie;	state Exp;
branches;
next	1.35;

1.35
date	2000.09.12.22.48.57;	author espie;	state Exp;
branches;
next	1.34;

1.34
date	2000.09.07.22.16.07;	author espie;	state Exp;
branches;
next	1.33;

1.33
date	2000.08.04.10.07.59;	author espie;	state Exp;
branches;
next	1.32;

1.32
date	99.12.22.19.45.32;	author mickey;	state Exp;
branches;
next	1.31;

1.31
date	99.06.18.02.11.24;	author espie;	state Exp;
branches;
next	1.30;

1.30
date	99.06.18.02.01.55;	author espie;	state Exp;
branches;
next	1.29;

1.29
date	99.01.09.17.57.10;	author espie;	state Exp;
branches;
next	1.28;

1.28
date	98.10.18.20.02.29;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	98.08.08.08.42.43;	author downsj;	state Exp;
branches;
next	1.26;

1.26
date	98.08.07.02.28.12;	author rahnds;	state Exp;
branches;
next	1.25;

1.25
date	98.07.06.09.04.37;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	98.06.06.08.07.59;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	98.05.18.00.43.21;	author marc;	state Exp;
branches;
next	1.22;

1.22
date	98.04.01.04.30.14;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	98.03.29.22.17.17;	author niklas;	state Exp;
branches;
next	1.20;

1.20
date	98.03.29.07.28.04;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	98.03.26.02.32.49;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	98.03.26.02.26.22;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	97.11.04.13.22.25;	author kstailey;	state Exp;
branches;
next	1.16;

1.16
date	97.06.23.22.20.25;	author kstailey;	state Exp;
branches;
next	1.15;

1.15
date	97.06.23.12.13.46;	author kstailey;	state Exp;
branches;
next	1.14;

1.14
date	97.05.05.20.16.32;	author rahnds;	state Exp;
branches;
next	1.13;

1.13
date	97.05.04.01.11.52;	author niklas;	state Exp;
branches;
next	1.12;

1.12
date	97.05.02.10.01.54;	author niklas;	state Exp;
branches;
next	1.11;

1.11
date	97.04.12.15.48.20;	author graichen;	state Exp;
branches;
next	1.10;

1.10
date	97.02.02.01.14.00;	author graichen;	state Exp;
branches;
next	1.9;

1.9
date	97.01.02.03.09.48;	author rahnds;	state Exp;
branches;
next	1.8;

1.8
date	96.11.30.23.13.41;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	96.11.23.03.32.21;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.10.31.00.23.41;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.10.02.20.56.43;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.09.06.19.20.17;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	96.09.06.19.10.22;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	96.02.02.01.11.38;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.01.08.15.54.12;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.85
log
@Use ${INSTALL} instead of install, like in all the other Makefile's.
ok guenther
@
text
@#	$OpenBSD: Makefile.bsd-wrapper,v 1.84 2016/09/11 07:42:02 guenther Exp $

.include <bsd.own.mk>

CFLAGS+=	${PIE_DEFAULT}
# This allows moving the whole binutils installation around for 
# testing purposes
PREFIX=/usr
.if ${PREFIX} != "/usr"
MANDIR=${PREFIX}/share/man/man
.endif

SUBDIRS=	opcodes bfd gdb
CONF_SUBDIRS=	${SUBDIRS}
INST_SUBDIRS=	gdb
MAN=		gdb/gdb.1

# Used by the GNU Makefile
ALL_MODULES=${SUBDIRS:S/^/all-/g}
CONFIGURE_MODULES=${CONF_SUBDIRS:S/^/configure-/g}
CONFIGURE_HOST_MODULES=${CONF_SUBDIRS:S/^/configure-/g}
ALL_HOST_MODULES=${SUBDIRS:S/^/all-/g}
INSTALL_MODULES=${INST_SUBDIRS:S/^/install-/g}
INFO_HOST_MODULES=${SUBDIRS:S/^/info-/g}
INSTALL_INFO_HOST_MODULES=${INST_SUBDIRS:S/^/install-info-/g}

# cross-compilation
.if defined(TARGET_ARCH)
CONFIGTARGET=--target=${TARGET_ARCH}-unknown-openbsd${OSREV}
.else
CONFIGTARGET=
.endif

all:	config.status
	SUBDIRS='${SUBDIRS}' \
	  CONFIGURE_HOST_MODULES='${CONFIGURE_HOST_MODULES}' \
	  ${MAKE} CC="${CC}" \
	    CFLAGS="${CFLAGS} ${COPTS}" LDFLAGS=${LDSTATIC} \
	    scriptdir=${PREFIX}/libdata \
	    tooldir=${PREFIX} \
	    MAKEINFO='makeinfo --no-split' \
	    MAKEINFOFLAGS='' \
	    BSDSRCDIR=${BSDSRCDIR} \
	    ALL_MODULES="${ALL_MODULES}" \
	    ALL_HOST_MODULES='${ALL_HOST_MODULES}' \
	    INFO_HOST_MODULES='${INFO_HOST_MODULES}' all info

.include <bsd.own.mk>

.ifdef GLOBAL_AUTOCONF_CACHE
CF=	--cache-file=${GLOBAL_AUTOCONF_CACHE}
.else
CF=
.endif

do-config: .USE
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" \
	MAKEINFO='makeinfo --no-split' \
	sh ${.CURDIR}/configure --prefix=${PREFIX} \
	    --infodir='$${prefix}/share/info' \
	    --disable-nls --disable-gdbtk --disable-install-libbfd ${CF} \
	    ${CONFIGTARGET}
	cd ${.OBJDIR} && \
	    sed -e 's,SUBDIRS *=,SUBDIRS ?=,' <Makefile >Makefile.tmp && \
	    mv -f Makefile.tmp Makefile
	cd ${.OBJDIR} && \
	    ${MAKE} ${CONFIGURE_MODULES}

config: do-config
.ifndef GLOBAL_AUTOCONF_CACHE
	-rm -f config.cache
.endif

config.status: do-config

# Need to pass SUBDIRS because of install-info
install: maninstall
	SUBDIRS='${INST_SUBDIRS}' ${MAKE} DESTDIR='${DESTDIR}' \
	    INSTALL_MAN= \
	    scriptdir=${PREFIX}/libdata \
	    tooldir=${PREFIX} \
	    BSDSRCDIR=${BSDSRCDIR} \
	    INSTALL_MODULES='${INSTALL_MODULES}' \
	    INSTALL_PROGRAM='${INSTALL} -c -S ${INSTALL_STRIP} -o ${BINOWN} -g ${BINGRP} -m ${BINMODE}' \
	    INSTALL_DATA='${INSTALL} -c -o ${DOCOWN} -g ${DOCGRP} -m ${NONBINMODE}' \
	    INSTALL_INFO_HOST_MODULES='${INSTALL_INFO_HOST_MODULES}' \
	      install install-info

clean cleandir:
	-@@if [ -e Makefile ]; then ${MAKE} distclean; fi

c++filt.1: binutils/cxxfilt.man
	sed -e 's,@@PROGRAM@@,c++filt,' <${.CURDIR}/binutils/cxxfilt.man >$@@

depend:
	# Nothing here so far...

lint:
	# Nothing here so far...

tags:
	# Nothing here so far...

BEFOREMAN=config.status

.PHONY: config

.include <bsd.obj.mk>
.include <bsd.subdir.mk>

.ifdef NOMAN
maninstall:
	@@echo NOMAN is set
.else
.include <bsd.man.mk>
.endif
@


1.84
log
@Install programs with ${INSTALL_STRIP} -o ${BINOWN} -g ${BINGRP} -m ${BINMODE}
Install info and data files with -o ${DOCOWN} -g ${DOCGRP} -m ${NONBINMODE}

Prompted by natano@@
Tweaks and oks deraadt@@ natano@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.83 2015/06/01 17:36:19 miod Exp $
d84 2
a85 2
	    INSTALL_PROGRAM='install -c -S ${INSTALL_STRIP} -o ${BINOWN} -g ${BINGRP} -m ${BINMODE}' \
	    INSTALL_DATA='install -c -o ${DOCOWN} -g ${DOCGRP} -m ${NONBINMODE}' \
@


1.83
log
@Now that we do not need to build binutils 2.15 (except for gdb), simplify the
build logic.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.82 2013/07/05 21:29:51 miod Exp $
d84 2
a85 1
	    INSTALL_PROGRAM='install -c -S' \
@


1.82
log
@ELF_TOOLCHAIN bye bye.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.81 2013/07/05 21:09:21 miod Exp $
a12 2
.if ${BINUTILS_VERSION} == "binutils-2.17"

a17 25
.else

SUBDIRS=	opcodes bfd
CONF_SUBDIRS=	opcodes bfd

MAN=		binutils/doc/addr2line.1 binutils/doc/objcopy.1 \
		binutils/doc/objdump.1 binutils/doc/readelf.1 \
		c++filt.1

.if !defined(TARGET_ARCH) && !defined(BOOTSTRAP)
CONF_SUBDIRS+=	gdb
SUBDIRS+=	gdb
INST_SUBDIRS+=	gdb
MAN+=		gdb/gdb.1
.endif

SUBDIRS+=	binutils ld gas
CONF_SUBDIRS+=	binutils ld gas
INST_SUBDIRS+=	binutils ld gas
MAN+=		binutils/doc/ar.1 binutils/doc/ranlib.1 \
		binutils/doc/strings.1 binutils/doc/strip.1 \
		gas/doc/as.1 ld/ld.1

.endif

a67 6

gas/doc/as.1: config.status
	cd ${.OBJDIR}/gas/doc && ${MAKE} as.1

ld/ld.1: config.status
	cd ${.OBJDIR}/ld && ${MAKE} ld.1
@


1.81
log
@VAX ELF toolchain, using `%' as the register prefix. Heavily based upon
NetBSD.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.80 2013/03/10 21:06:23 miod Exp $
a35 1
.if ${ELF_TOOLCHAIN:L} == "yes"
a41 4
.  else
CONF_SUBDIRS=${SUBDIRS}
CONF_SUBDIRS+= binutils
.endif
a73 5
.if ${ELF_TOOLCHAIN:L} != "yes"
	cd ${.OBJDIR}/binutils && \
	    ${MAKE} CC="${CC}" CFLAGS="${CFLAGS} ${COPTS}" \
	    LDFLAGS=${LDSTATIC} objdump
.endif
a95 1
.if ${ELF_TOOLCHAIN:L} == "yes"
a100 1
.endif
a119 5
.if ${ELF_TOOLCHAIN:L} != "yes" && ${BINUTILS_VERSION} != "binutils-2.17"
	cd ${.OBJDIR}/binutils && \
		${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -o ${BINOWN} \
		    -g ${BINGRP} -m ${BINMODE} objdump ${DESTDIR}${PREFIX}/bin
.endif
@


1.80
log
@Let platforms configured to use binutils 2.17 still recurse into the binutils
2.15 directory, but only to build gdb.
ok deraadt@@ espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.79 2013/01/05 20:03:06 miod Exp $
d29 1
a29 1
.if !defined(TARGET_ARCH)
@


1.79
log
@Replace the list of platforms enabled (or not) to build the whole binutils
with a test of ELF_TOOLCHAIN provided by bsd.own.mk.
No functional change.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.78 2013/01/05 11:20:55 miod Exp $
a4 3
SUBDIRS=	opcodes bfd
CONF_SUBDIRS=	opcodes bfd

d13 12
d29 1
d34 1
d48 2
d132 1
a132 1
.if ${ELF_TOOLCHAIN:L} != "yes"
@


1.78
log
@Switch m88k ports to ELF.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.77 2012/08/28 18:59:28 pascal Exp $
d3 1
a3 9
NEW_BINUTILS=alpha amd64 arm hppa hppa64 i386 m88k mips64 powerpc sh sparc sparc64

.for _arch in ${MACHINE_CPU}
.  if !empty(NEW_BINUTILS:M${_arch})
USING_NEW_BINUTILS?=yes
.else
USING_NEW_BINUTILS?=no
.  endif
.endfor
d25 1
a25 1
.if ${USING_NEW_BINUTILS:L} == "yes"
d66 1
a66 1
.if ${USING_NEW_BINUTILS:L} != "yes"
d93 1
a93 1
.if ${USING_NEW_BINUTILS:L} == "yes"
d119 1
a119 1
.if ${USING_NEW_BINUTILS:L} != "yes"
@


1.77
log
@Add support for PIE-by-default in both ld and gcc.  This is a completely
different approach than the one taken in kurt@@'s original diff, but deemed
better after discussion and diff exchange with kettenis@@ and matthew@@.

Lots of feedback by kettenis@@ and matthew@@, prodding and encouragement by
deraadt@@.

ok kettenis@@ matthew@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.76 2011/10/30 20:57:06 schwarze Exp $
d3 1
a3 1
NEW_BINUTILS=alpha amd64 arm hppa hppa64 i386 mips64 powerpc sh sparc sparc64
@


1.76
log
@Always install addr2line(1), objcopy(1), and readelf(1), even on
architectures with !ELF_TOOLCHAIN && !USING_NEW_BINUTILS (like vax, m68k).
There is no need to reach around from usr.bin/Makefile into binutils;
we always descend into either binutils or binutils-2.17.
All is fine so far with binutils-2.17 since ia64 has USING_NEW_BINUTILS.

tested on vax and ok  deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.75 2011/07/06 04:10:32 schwarze Exp $
d16 1
@


1.75
log
@Replace a comment asking for a particular order to build stuff in
by actual make rules to enforce that order.
While here, correct the MANDIR which must no more contain "cat".

krw@@ also confirms that this lets binutils build with -j.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.74 2010/02/03 20:48:58 miod Exp $
d23 3
a25 1
MAN=		binutils/doc/objdump.1 c++filt.1
d36 2
a37 4
MAN+=		binutils/doc/addr2line.1 binutils/doc/ar.1 \
		binutils/doc/objcopy.1 binutils/doc/ranlib.1 \
		binutils/doc/readelf.1 binutils/doc/strings.1 \
		binutils/doc/strip.1 \
@


1.74
log
@Use MACHINE_CPU instead of MACHINE_ARCH to pick the correct machine dependent
files or directories when applicable.
The inspiration and name of MACHINE_CPU come from NetBSD, although the way to
provide it to Makefiles is completely different.
ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.73 2008/08/22 13:02:53 kettenis Exp $
d20 1
a20 1
MANDIR=${PREFIX}/share/man/cat
d99 1
d101 1
a101 2
	# We need to generate as.1 and ld.1 immediately after config.status
	# for the manpage machinery to work properly.
d103 2
@


1.73
log
@Don't install libbfd and libopcodes and the associated headers.
They really are just a way to share common code between gdb and binutils
(which in the GNU world are seperate packages).  The developers (and I'm
one of them) make absolutely no effert to maintain a stable API/ABI.

If ports people really need libbfd or libopcodes, they should just
package a suitable version.

ok weingart@@, deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.72 2008/01/14 22:01:23 espie Exp $
d5 1
a5 1
.for _arch in ${MACHINE_ARCH}
@


1.72
log
@manpages need directories.
okay kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.71 2007/12/30 12:20:58 espie Exp $
d13 2
a14 11
SUBDIRS=
CONF_SUBDIRS=

.if ${USING_NEW_BINUTILS:L} == "yes"
CONF_SUBDIRS+=	opcodes bfd
SUBDIRS+=	opcodes bfd
INST_SUBDIRS+=	opcodes bfd
.else
CONF_SUBDIRS+=	opcodes bfd
SUBDIRS+=	opcodes bfd
.endif
d92 1
a92 1
	    --disable-nls --disable-gdbtk --disable-commonbfdlib ${CF} \
a132 7
prereq: config.status
	cd ${.OBJDIR}/bfd && ${MAKE} bfd.h
	# we don't install ansidecl.h, we merge it into the file that
	# needs it instead.
	sed -e '/^#include "ansidecl.h"/r${.CURDIR}/include/ansidecl.h' -e '//d' \
		bfd/bfd.h >bfd/mybfd.h

a134 8

includes:
.if ${USING_NEW_BINUTILS:L} == "yes"
	install -C -o ${BINOWN} -g ${BINGRP} -m ${NONBINMODE} \
		${.CURDIR}/include/bfdlink.h ${DESTDIR}/usr/include
	install -C -o ${BINOWN} -g ${BINGRP} -m ${NONBINMODE} \
		bfd/mybfd.h ${DESTDIR}/usr/include/bfd.h
.endif
@


1.71
log
@enforce install -S, avoids races with make -j:
libtool does relink some files during install, and it can happen that it
relinks stuff at the exact same time that ld is being reinstalled.

okay kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.70 2007/03/26 08:19:36 jmc Exp $
d168 2
@


1.70
log
@sort the MAN entry; ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.69 2007/03/25 23:13:59 deraadt Exp $
d130 1
@


1.69
log
@pick up the newer rev man pages; noticed by ingo schwarze, first rev by
jmc
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.68 2007/03/19 05:32:43 deraadt Exp $
d44 4
a47 3
		gas/doc/as.1 binutils/doc/ranlib.1 \
		binutils/doc/readelf.1 ld/ld.1 binutils/doc/objcopy.1 \
		binutils/doc/strings.1 binutils/doc/strip.1
@


1.68
log
@build two more man pages; Ingo Schwarze
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.67 2006/10/06 20:58:17 miod Exp $
d32 1
a32 1
MAN=		binutils/objdump.1 c++filt.1
d43 4
a46 4
MAN+=		binutils/addr2line.1 binutils/ar.1 binutils/ranlib.1 \
		binutils/objcopy.1 binutils/doc/readelf.1 \
		binutils/strings.1 binutils/strip.1 \
		gas/doc/as.1 ld/ld.1
@


1.67
log
@Early bits for a 32-bit SuperH toolchain, currently for little-endian
systems only; more work is necessary in ld land.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.66 2006/07/12 23:00:07 espie Exp $
d43 2
a44 2
MAN+=		binutils/ar.1 binutils/ranlib.1 \
		binutils/objcopy.1 \
@


1.66
log
@makeinfo --no-split, simplifies sets immensely.
Approved deraadt@@, kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.65 2006/05/04 19:40:38 miod Exp $
d3 1
a3 1
NEW_BINUTILS=alpha amd64 arm hppa hppa64 i386 mips64 powerpc sparc sparc64
@


1.65
log
@Allow USING_NEW_BINUTILS to be overriden by whatever invokes make here.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.64 2005/01/25 13:24:51 mickey Exp $
d75 2
d97 1
@


1.64
log
@hppa64-unknown-openbsd build support; espie@@ miod@@ brad@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.63 2005/01/15 19:54:04 kettenis Exp $
d7 1
a7 1
USING_NEW_BINUTILS=yes
d9 1
a9 1
USING_NEW_BINUTILS=no
d16 1
a16 1
.if ${USING_NEW_BINUTILS} == "yes"
d39 1
a39 1
.if ${USING_NEW_BINUTILS} == "yes"
d79 1
a79 1
.if ${USING_NEW_BINUTILS} != "yes"
d104 1
a104 1
.if ${USING_NEW_BINUTILS} == "yes"
d128 1
a128 1
.if ${USING_NEW_BINUTILS} != "yes"
d148 1
a148 1
.if ${USING_NEW_BINUTILS} == "yes"
@


1.63
log
@Get rid of *_X11_MODULES.
ok miod@@, drahn@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.62 2004/12/27 21:11:07 kettenis Exp $
d3 1
a3 1
NEW_BINUTILS=amd64 alpha arm hppa i386 mips64 powerpc sparc sparc64
@


1.62
log
@Add sgi support.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.61 2004/11/10 22:31:33 drahn Exp $
a14 2
ALL_X11_MODULES=
INSTALL_X11_MODULES=
a23 2
ALL_X11_MODULES=
INSTALL_X11_MODULES=
a37 3
ALL_X11_MODULES+=all-gdb
INSTALL_X11_MODULES+=install-gdb

a77 1
	    ALL_X11_MODULES="${ALL_X11_MODULES}" \
a120 1
	    INSTALL_X11_MODULES="${INSTALL_X11_MODULES}" \
@


1.61
log
@Put back cross build piece which was lost with the 2.15 upgrade.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.60 2004/11/02 20:44:57 miod Exp $
a37 1
.if (${MACHINE_ARCH} != "mips64")
a43 1
.endif
@


1.60
log
@Merge conflicts, bringing our changes back in:
- extra $(SHELL) and sugar for make (so that files not mode +x still work)
- safer temp file handling
- our W^X binary layout changes in ld
- OpenBSD policy for library file selection in ld
- arm and m88k changes which were not merged in time for official 2.15
- bfd core file handling
- a couple typos

New for 2.15:
- ld(1) and as(1) manpages now generated at build time
- binutils/stabs.c reverted to use our in-tree libiberty for now
- we still use our VIA C3 crypto code over stock binutils, as it recognizes
  more instructions
- new emulations for OpenBSD on mips64 machines, to help OpenBSD/sgi
- relaxed %f# handling in gas on OpenBSD/sparc64 (same as was in 2.14)

Tested on all platforms by various people; special thanks to sturm@@ and
otto@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.58 2004/06/01 23:01:44 drahn Exp $
d69 8
a76 1
	
d107 2
a108 1
	    --disable-nls --disable-gdbtk --disable-commonbfdlib ${CF}
@


1.59
log
@Move the cross glue from the root makefile to the toolchain's,
allowing bulding cross-tools with new binutils and gcc3.

ok drahn@@ brad@@ espie@@
@
text
@d3 1
a3 1
NEW_BINUTILS=alpha arm hppa i386 mips powerpc sparc sparc64 amd64
d38 1
a38 1
.if (${MACHINE_ARCH} != "unknown")
d67 2
a69 7
# cross-compilation
.if defined(TARGET_ARCH)
CONFIGTARGET=--target=${TARGET_ARCH}-unknown-openbsd${OSREV}
.else
CONFIGTARGET=
.endif

d80 2
a81 1
	    ALL_X11_MODULES="${ALL_X11_MODULES}" all info
d100 1
a100 2
	    --disable-nls --disable-gdbtk --disable-commonbfdlib ${CF} \
	    ${CONFIGTARGET}
d106 6
d128 3
a130 1
	    INSTALL_MODULES='${INSTALL_MODULES}' install install-info
@


1.58
log
@manage NEW_BINUTILS vs non-NEW_BINUTILS better. does not install unnecessary
pieces anymore. ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.57 2004/05/25 09:00:56 miod Exp $
d68 7
d104 2
a105 1
	    --disable-nls --disable-gdbtk --disable-commonbfdlib ${CF}
@


1.57
log
@Enable gdb on m88k again, it works well enough and better than ever.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.56 2004/05/21 20:23:01 kettenis Exp $
d5 10
a14 1
SUBDIRS=	opcodes bfd
d18 10
d39 1
d41 1
a46 1
SUBDIRS+=	binutils
d48 4
a51 3
.for _arch in ${MACHINE_ARCH}
.  if !empty(NEW_BINUTILS:M${_arch})
SUBDIRS+=	ld gas
d56 4
a59 2
.  endif
.endfor
d63 2
a64 2
CONFIGURE_MODULES=${SUBDIRS:S/^/configure-/g}
CONFIGURE_HOST_MODULES=${SUBDIRS:S/^/configure-/g}
d66 1
a66 1
INSTALL_MODULES=${SUBDIRS:S/^/install-/g}
d79 1
d83 1
d113 1
a113 1
	SUBDIRS='${SUBDIRS}' ${MAKE} DESTDIR='${DESTDIR}' \
d120 1
d122 3
a124 2
		${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -o ${BINOWN} -g ${BINGRP} \
			-m ${BINMODE} objdump ${DESTDIR}${PREFIX}/bin
d140 1
d145 1
@


1.56
log
@Resolve conflicts for GDB 6.1.  Add local patches.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.55 2004/05/17 21:54:18 drahn Exp $
d19 1
a19 1
.if (${MACHINE_ARCH} != "unknown") && (${MACHINE_ARCH} != "m88k")
@


1.55
log
@Resolve merge conflicts, adjust method of W^X handing (.sh files)
remove testsuites (not useable) remove mmalloc (not part of new binutils).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.54 2004/02/27 17:40:15 deraadt Exp $
d19 1
a19 1
.if (${MACHINE_ARCH} != "unknown") && (${MACHINE_ARCH} != "amd64") && (${MACHINE_ARCH} != "arm")
@


1.54
log
@cope with MACHINE_ARCH changing from x86_64 to amd64.  For now, we want
the toolchain to remain at the name x86_64.  Tested on all other
architectures that care.  Done as very small snippets, so that espie does
not blow a fuse.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.53 2004/02/10 22:28:04 mickey Exp $
d3 1
a3 1
NEW_BINUTILS=alpha hppa i386 mips powerpc sparc sparc64 amd64
d19 2
a20 2
.if (${MACHINE_ARCH} != "unknown") && (${MACHINE_ARCH} != "amd64")
SUBDIRS+=	gdb mmalloc
d26 2
d30 1
a30 1
SUBDIRS+=	binutils ld gas
d40 3
d46 3
a48 1
	SUBDIRS='${SUBDIRS}' ${MAKE} CC="${CC}" \
d54 1
d76 2
@


1.53
log
@configs for amd64; brad@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.52 2004/01/13 03:43:40 mickey Exp $
d3 1
a3 1
NEW_BINUTILS=alpha hppa i386 mips powerpc sparc sparc64 x86_64
d19 1
a19 1
.if (${MACHINE_ARCH} != "unknown") && (${MACHINE_ARCH} != "x86_64")
@


1.52
log
@use our own nm and size
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.51 2003/04/17 03:44:21 drahn Exp $
d3 1
a3 1
NEW_BINUTILS=alpha hppa i386 mips powerpc sparc sparc64
d19 1
a19 1
.if (${MACHINE_ARCH} != "unknown")
@


1.51
log
@Switch i386 to new binutils, i386 tools now do ELF.
RODATA_* align macros to preserve current behavior on other
archs and allow for 1G sep between beginning of exe and beginning of data
DARPA funded work.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.50 2003/02/16 15:09:03 espie Exp $
d29 3
a31 3
MAN+=		binutils/ar.1 binutils/nm.1 \
		binutils/objcopy.1 binutils/ranlib.1 \
		binutils/size.1 binutils/strings.1 binutils/strip.1 \
@


1.50
log
@Synch cxxfilt man page with reality and arrange for it to get built and
installed.
Noticed by jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.49 2003/02/02 15:20:11 espie Exp $
d3 1
a3 1
NEW_BINUTILS=alpha mips powerpc hppa sparc64 sparc
@


1.49
log
@pass BSDSRCDIR in environment to submakes.
This `repairs' setting up BSDSRCDIR in /etc/mk.conf and nowhere else.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.48 2002/08/11 22:51:48 art Exp $
d17 1
a17 1
MAN=		binutils/objdump.1
d98 3
@


1.48
log
@Switch sparc binutils to ELF.
XXX - we might want to improve the version selection logic when feeding
those diffs back to FSF, but we can't do that until we bump our version
to OpenBSD 3.2 because then the tree wouldn't build.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.47 2002/05/08 19:39:24 espie Exp $
d45 1
d83 1
@


1.47
log
@includes should be installed during `make include', not later.
Fixes this for lex and binutils' bfd.

Also, do not install ansidecl.h, we don't really need it, bfd.h uses it,
and we installed it so that bfd worked, so let bfd.h include it directly.

prompted by mickey@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.46 2002/05/08 16:48:11 art Exp $
d3 1
a3 1
NEW_BINUTILS=alpha mips powerpc hppa sparc64
@


1.46
log
@No more need to build this gprof on ELF archs. We use the native one now.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.45 2002/04/02 21:56:33 fgsch Exp $
d89 13
@


1.45
log
@enable gdb in sparc64; deraadt@@ ok.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.44 2001/09/05 22:59:01 art Exp $
d28 1
a28 1
SUBDIRS+=	binutils ld gas gprof
d32 1
a32 1
		gas/doc/as.1 gprof/gprof.1 ld/ld.1
@


1.44
log
@Support for sparc64. gdb disabled for now.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.43 2001/03/18 17:39:55 millert Exp $
d19 1
a19 1
.if (${MACHINE_ARCH} != "unknown") && (${MACHINE_ARCH} != "sparc64")
@


1.43
log
@Build gnu/lib/libreadline and use it instead of the one currently
in the binutils dir.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.42 2001/01/16 20:22:31 espie Exp $
d3 1
a3 1
NEW_BINUTILS=alpha mips powerpc hppa
d19 1
a19 1
.if ${MACHINE_ARCH} != "unknown"
@


1.42
log
@Enforce building stuff at compile time, not install time.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.41 2000/09/21 15:15:57 espie Exp $
d20 1
a20 1
SUBDIRS+=	gdb mmalloc readline 
@


1.41
log
@Fix man pages for good.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.40 2000/09/19 06:03:46 deraadt Exp $
d46 1
a46 1
	    ALL_X11_MODULES="${ALL_X11_MODULES}"
@


1.40
log
@install tools and scripts in libdata; espie
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.39 2000/09/14 21:55:25 espie Exp $
d77 1
a77 1
	SUBDIRS='${SUBDIRS}' ${MAKE} DESTDIR='${DESTDIR}' INSTALL_MAN= \
@


1.39
log
@Lost manpages (gdb and objdump)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.38 2000/09/14 16:48:09 espie Exp $
a4 1

d43 2
d80 2
@


1.38
log
@Some installation problems: older gnu programs don't know about DESTDIR,
but we have a mix here -> convert the old ones to heed DESTDIR.

Also, fix manpages installation in Makefile.bsd-wrapper
(INSTALL_MAN setting that got lost, bad MANDIR, don't set MANDIR if
PREFIX is the standard location)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.37 2000/09/14 13:15:39 espie Exp $
d18 1
a18 1
MAN=
d22 1
@


1.37
log
@Can't directly :M${MACHINE_ARCH}, so kludge it thru a for loop.
Thanks, Dale.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.36 2000/09/12 23:59:03 espie Exp $
a4 1
PREFIX=/usr
d10 8
a17 1
MANDIR=${PREFIX}/man/cat
d77 1
@


1.36
log
@Need to mention where to install binutils...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.35 2000/09/12 22:48:57 espie Exp $
d20 2
a21 1
.if !empty(NEW_BINUTILS:M${MACHINE_ARCH})
d27 2
a28 1
.endif
@


1.35
log
@Configure the right directories depending on arch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.32 1999/12/22 19:45:32 mickey Exp $
d4 2
@


1.34
log
@Remove unwanted MANSUBDIR that crept in from my private tree
@
text
@d1 3
a3 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.33 2000/08/04 10:07:59 espie Exp $
d6 4
d12 1
a12 2
# gdb not ready yet
.if (${MACHINE_ARCH} != "unknown")
d14 2
a15 1
MAN+=		gdb/gdb.1
d18 1
a18 3
# some ports use all of binutils, some do not.
.if (${MACHINE_ARCH} == "alpha") || (${MACHINE_ARCH} == "mips") || \
	(${MACHINE_ARCH} == "powerpc") || (${MACHINE_ARCH} == "hppa")
a23 1

a24 1
MAN+= binutils/objdump.1
d31 4
a34 3
	SUBDIRS="${SUBDIRS}" ${MAKE} CC="${CC}" CFLAGS="${CFLAGS} ${COPTS}" \
	    LDFLAGS=${LDSTATIC} ALL_MODULES="${ALL_MODULES}" \
	    INSTALL_MODULES="${INSTALL_MODULES}"
d36 2
a37 4
	${MAKE} CC="${CC}" CFLAGS="${CFLAGS} ${COPTS}" LDFLAGS=${LDSTATIC} \
		objdump

.FORCE:	.IGNORE
d49 3
a51 3
	sh ${.CURDIR}/configure --prefix=/usr \
	--infodir='$${prefix}/share/info' \
	--disable-gdbtk --disable-commonbfdlib ${CF}
a55 3

.PHONY: config

d63 1
a63 6

.ifdef NOMAN
maninstall:
	@@echo NOMAN is set
.endif

d65 3
a67 6
	SUBDIRS="${SUBDIRS}" ${MAKE} prefix='${DESTDIR}/usr' \
	    infodir='${DESTDIR}/usr/share/info' \
	    bindir='${DESTDIR}/usr/bin' \
	    INSTALL_MAN= \
	    ALL_MODULES="${ALL_MODULES}" INSTALL_MODULES="${INSTALL_MODULES}" \
	    install install-info
d70 1
a70 1
			-m ${BINMODE} objdump ${DESTDIR}/usr/bin
d84 2
d88 5
a92 1
.ifndef NOMAN
@


1.33
log
@Overriding SUBDIRS from make command line no longer works for
recursive Makefile (in this case, this will miss doc subdirs),
so pass it in the environment instead, and tweak Makefile after
configure slightly so that main SUBDIRS can be changed.

Also remove config/config.status rule duplication by use of .USE.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.32 1999/12/22 19:45:32 mickey Exp $
d20 1
a20 1
MANSUBDIR=/alpha /pmax /powerpc /hppa
@


1.32
log
@i thought hppa is there long time ago
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.31 1999/06/18 02:11:24 espie Exp $
d9 1
a9 1
MAN+=		gdb/gdb.1 
d17 1
a17 1
		binutils/objcopy.1 binutils/objdump.1 binutils/ranlib.1 \
d20 2
a21 1
.else
a22 1
.endif
d29 3
a31 3
	${MAKE} CC="${CC}" CFLAGS="${CFLAGS} ${COPTS}" LDFLAGS=${LDSTATIC} \
		SUBDIRS="${SUBDIRS}" ALL_MODULES="${ALL_MODULES}" \
		INSTALL_MODULES="${INSTALL_MODULES}"
d46 13
a58 1
config: .FORCE
a61 3
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" \
	sh ${.CURDIR}/configure --prefix=/usr --infodir=/usr/share/info \
	--disable-gdbtk --disable-commonbfdlib ${CF}
d63 2
a64 4
config.status:
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" \
	sh ${.CURDIR}/configure --prefix=/usr --infodir=/usr/share/info \
	--disable-gdbtk --disable-commonbfdlib ${CF}
d72 6
a77 4
	${MAKE} prefix=${DESTDIR}/usr infodir=${DESTDIR}/usr/share/info \
		bindir=${DESTDIR}/usr/bin INSTALL_MAN= SUBDIRS="${SUBDIRS}" \
		ALL_MODULES="${ALL_MODULES}" INSTALL_MODULES="${INSTALL_MODULES}" \
		install install-info
@


1.31
log
@Kill old libiberty, use the one under egcs now.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.30 1999/06/18 02:01:55 espie Exp $
d14 1
a14 1
	(${MACHINE_ARCH} == "powerpc")
@


1.30
log
@build objdump for all archs.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.29 1999/01/09 17:57:10 espie Exp $
d3 1
a3 1
SUBDIRS=	libiberty opcodes bfd
d51 2
a52 1
	sh ${.CURDIR}/configure --prefix=/usr --infodir=/usr/share/info --disable-gdbtk ${CF}
d56 2
a57 1
	sh ${.CURDIR}/configure --prefix=/usr --infodir=/usr/share/info --disable-gdbtk ${CF}
@


1.29
log
@gprof heads the same set of conditions as gas&friends.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.28 1998/10/18 20:02:29 millert Exp $
d20 2
d32 3
d67 3
@


1.28
log
@set PATH before running configure since we can't rely on the user's path being sane
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.27 1998/08/08 08:42:43 downsj Exp $
d15 1
a15 1
SUBDIRS+=	binutils ld gas
a19 4
.endif

.if (${MACHINE_ARCH} == "mips") || (${MACHINE_ARCH} == "powerpc") || (${MACHINE_ARCH} == "alpha")
SUBDIRS+=	gprof
@


1.27
log
@undo last commit, very broken
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.26 1998/08/07 02:28:12 rahnds Exp $
d49 1
d53 1
@


1.26
log
@powerpc supports gdb mmalloc and readline.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.25 1998/07/06 09:04:37 deraadt Exp $
d7 4
a10 4
#.if (${MACHINE_ARCH} != "unknown")
#SUBDIRS+=	gdb mmalloc readline 
#MAN+=		gdb/gdb.1 
#.endif
@


1.25
log
@alpha work again
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.24 1998/06/06 08:07:59 deraadt Exp $
d7 4
a10 4
.if (${MACHINE_ARCH} != "powerpc")
SUBDIRS+=	gdb mmalloc readline 
MAN+=		gdb/gdb.1 
.endif
@


1.24
log
@disable gprof on alpha... again.. texinfo problems
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.23 1998/05/18 00:43:21 marc Exp $
d22 1
a22 1
.if (${MACHINE_ARCH} == "mips") || (${MACHINE_ARCH} == "powerpc")
@


1.23
log
@install gdb and related info files
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.22 1998/04/01 04:30:14 millert Exp $
d15 1
a15 1
SUBDIRS+=	binutils ld gas gprof
d20 4
@


1.22
log
@include gprof for ports that are not gdb-only
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.21 1998/03/29 22:17:17 niklas Exp $
d45 1
a45 1
	sh ${.CURDIR}/configure --prefix=/usr --disable-gdbtk ${CF}
d48 1
a48 1
	sh ${.CURDIR}/configure --prefix=/usr --disable-gdbtk ${CF}
d59 1
a59 1
		install
@


1.21
log
@Adapt the newer of our GDB versions to a.out ports.  The main part of this
commit comes from NetBSD.  Also, the kernel debugging mode is a bit different
but you will notice when you type gdb -k because it documents the difference
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.20 1998/03/29 07:28:04 millert Exp $
d15 1
a15 1
SUBDIRS+=	binutils ld gas
@


1.20
log
@Set ALL_MODULES and INSTALL_MODULES variables to really control what
gets built.  Needed for gdb-only platforms.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.19 1998/03/26 02:32:49 millert Exp $
d3 2
a4 4
MAN=		binutils/ar.1 binutils/nm.1 \
		binutils/objcopy.1 binutils/objdump.1 binutils/ranlib.1 \
		binutils/size.1 binutils/strings.1 binutils/strip.1 \
		gas/doc/as.1 gprof/gprof.1 ld/ld.1
a5 1
SUBDIRS=	libiberty opcodes bfd
d16 4
@


1.19
log
@Only build/install everything for alpha, mips, and powerpc.  Others willl
just get gdb.  This will be used in the future when we use the binutils
gdb for all platforms.  As things stand right now, this change affects
nothing since only alpha, mips, and powerpc use binutils.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.18 1998/03/26 02:26:22 millert Exp $
d20 4
d27 2
a28 1
		SUBDIRS="${SUBDIRS}"
d57 1
@


1.18
log
@Pass in SUBDIRS variable for "make install" like we do for "make all".
Required for when we use binutils gdb for all ports.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.17 1997/11/04 13:22:25 kstailey Exp $
d15 3
d19 1
@


1.17
log
@GLOBAL_AUTCONF_CACHE
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.16 1997/06/23 22:20:25 kstailey Exp $
d47 2
a48 1
		bindir=${DESTDIR}/usr/bin INSTALL_MAN= install
@


1.16
log
@respect NOMAN during install
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.15 1997/06/23 12:13:46 kstailey Exp $
a14 2


d23 8
d32 1
d34 2
a35 1
	sh ${.CURDIR}/configure --prefix=/usr --disable-gdbtk
d38 1
a38 1
	sh ${.CURDIR}/configure --prefix=/usr --disable-gdbtk
@


1.15
log
@respect NOMAN (in bulk)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.14 1997/05/05 20:16:32 rahnds Exp $
d31 5
@


1.14
log
@If gdb is not configured do not build the manpage.
This allows the powerpc port to build.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.13 1997/05/04 01:11:52 niklas Exp $
d50 1
d52 1
@


1.13
log
@why install nlmconv manpage, when we don't carry the binary?
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.12 1997/05/02 10:01:54 niklas Exp $
d6 1
a6 1
		gas/doc/as.1 gdb/gdb.1 gprof/gprof.1 ld/ld.1
d12 1
d14 3
@


1.12
log
@Build gdb and gprof manpages properly.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.11 1997/04/12 15:48:20 graichen Exp $
d3 1
a3 1
MAN=		binutils/ar.1 binutils/nlmconv.1 binutils/nm.1 \
@


1.11
log
@configure with --disable-gdbtk - so that gdb will also configure
correctly if you have tcl/tk installed
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.10 1997/02/02 01:14:00 graichen Exp $
d6 1
a6 1
		gas/doc/as.1 ld/ld.1
@


1.10
log
@add gdb for alpha & mips and simplify it a bit
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.9 1997/01/02 03:09:48 rahnds Exp $
d23 1
a23 1
	sh ${.CURDIR}/configure --prefix=/usr
d26 1
a26 1
	sh ${.CURDIR}/configure --prefix=/usr
@


1.9
log
@PowerPC is like alpha and mips.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.8 1996/11/30 23:13:41 niklas Exp $
d9 3
a11 3
# When enabling gdb, enable these too
.if (${MACHINE_ARCH} != "mips") && (${MACHINE_ARCH} != "alpha")
SUBDIRS+=	mmalloc readline 
a13 5
# GDB not ready yet
.if (${MACHINE_ARCH} != "mips") && (${MACHINE_ARCH} != "alpha") \
	&& (${MACHINE_ARCH} != "powerpc")
SUBDIRS+=	gdb
.endif
@


1.8
log
@A stab at controlling SUBDIRS per arch, still problematic, but works
as commentary for the moment
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.7 1996/11/23 03:32:21 niklas Exp $
d15 2
a16 1
.if (${MACHINE_ARCH} != "mips") && (${MACHINE_ARCH} != "alpha")
@


1.7
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.5 1996/10/02 20:56:43 deraadt Exp $
d3 4
a6 3
MAN=	binutils/ar.1 binutils/nlmconv.1 binutils/nm.1 binutils/objcopy.1 \
	binutils/objdump.1 binutils/ranlib.1 binutils/size.1 \
	binutils/strings.1 binutils/strip.1 gas/doc/as.1 ld/ld.1
d8 11
d20 2
a21 1
	${MAKE} LDFLAGS=${LDSTATIC}
@


1.6
log
@Hey, if we recurse in here.. we are interested of more than gas,
 even if not mips
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.2 1996/02/02 01:11:38 niklas Exp $
@


1.5
log
@use different clean; old one deleted tree pieces
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.4 1996/09/06 19:20:17 pefo Exp $
a6 1
# So far only gas is useful for us.  This will change, be sure.
a7 1
.if   (${MACHINE_ARCH} == "mips") || make(clean) || make(cleandir)
a8 3
.else
	${MAKE} LDFLAGS=${LDSTATIC} all-gas
.endif
a19 1
.if   (${MACHINE_ARCH} == "mips") || make(clean) || make(cleandir)
a21 4
.else
	${MAKE} prefix=${DESTDIR}/usr infodir=${DESTDIR}/usr/share/info \
		bindir=${DESTDIR}/usr/bin INSTALL_MAN= install-gas
.endif
@


1.4
log
@GRRR....
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.3 1996/09/06 19:10:22 pefo Exp $
d34 1
a34 1
	-@@if [ -e Makefile ]; then ${MAKE} realclean; fi
@


1.3
log
@Nasty Niklas, there's more out there than alphas..
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.2 1996/02/02 01:11:38 niklas Exp $
d25 4
d31 1
@


1.2
log
@"make -f Makefile.bsd-wrapper config" should *really* config, and
never use cached values.  Initially we only want gas, even though
we're not even there yet.
@
text
@d1 1
a1 1
#	$Id: Makefile.bsd-wrapper,v 1.1 1996/01/08 15:54:12 niklas Exp $
d5 1
a5 2
	binutils/strings.1 binutils/strip.1 gas/doc/as.1 ld/ld.1 \
	gprof/gprof.1
d9 3
d13 1
@


1.1
log
@Tweaks for OpenBSD:
1)	recognize OpenBSD at various places
2)	m68k-cbm-* is *NOT* ELF always
3)	clean-info must be called before distclean in the GAS
	realclean target
4)	don't install unformatted ma-pages
5)	add a Makefile.bsd-wrapper
6)	just build gas through Makefile.bsd-wrapper yet
There are still other things to do...
@
text
@d1 1
a1 1
#	$Id$
d15 1
d23 1
a23 1
		bindir=${DESTDIR}/usr/bin INSTALL_MAN= install-gas install-ld
@
