head	1.3;
access;
symbols
	OPENBSD_3_5:1.2.0.32
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.30
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	new-binutils:1.2.0.14
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	CYGNUS-961112:1.1.2.1
	CYGNUS:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2004.05.21.20.23.31;	author kettenis;	state dead;
branches;
next	1.2;

1.2
date	96.11.23.03.46.39;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.11.19.14.30.32;	author niklas;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.11.19.14.30.32;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Resolve conflicts for GDB 6.1.  Add local patches.
ok deraadt@@
@
text
@#ifndef APIENTRY
#define APIENTRY
#endif
#define W32SUT_16

#include "windefs.h"
#include "./w32sut.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#undef WINDOWS
#include "c:/msvc/include/bios.h"
#define WINDOWS


int FAR PASCAL LibMain (HANDLE hLibInst, WORD wDataSeg,
			WORD cbHeapSize, LPSTR lpszCmdLine)
{
  return (1);
} // LibMain()

DWORD FAR PASCAL __export UTInit( UT16CBPROC lpfnUT16CallBack,LPVOID lpBuf )
{
  return(1); // Return Success
} // UTInit()



/*
 * Call the appropriate Win16 API based on the dwFunc parameter.  Extract any
 * necessary parameters from the lpBuf buffer.
 *
 * This function must be exported.
 *
 */


DWORD FAR PASCAL __export UTProc( DWORD *lpArgs, DWORD dwFunc)
{

  switch (dwFunc)
    {
    case 0:
      _bios_serialcom(_COM_INIT, 0, _COM_9600|_COM_NOPARITY|_COM_CHR8|_COM_STOP1);
    case 1:
      return _bios_serialcom(_COM_STATUS, 0,0);
    case 2:
      return _bios_serialcom(_COM_RECEIVE, 0,0);
    case 3:
      {
	int c = lpArgs[0];
	return _bios_serialcom(_COM_SEND, 0, lpArgs[0]);
      }
    }

  return( (DWORD)-1L ); // We should never get here.

} // UTProc()
@


1.2
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@@


1.1
log
@file iostuff.c was initially added on branch CYGNUS.
@
text
@d1 58
@


1.1.2.1
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a0 58
#ifndef APIENTRY
#define APIENTRY
#endif
#define W32SUT_16

#include "windefs.h"
#include "./w32sut.h"
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#undef WINDOWS
#include "c:/msvc/include/bios.h"
#define WINDOWS


int FAR PASCAL LibMain (HANDLE hLibInst, WORD wDataSeg,
			WORD cbHeapSize, LPSTR lpszCmdLine)
{
  return (1);
} // LibMain()

DWORD FAR PASCAL __export UTInit( UT16CBPROC lpfnUT16CallBack,LPVOID lpBuf )
{
  return(1); // Return Success
} // UTInit()



/*
 * Call the appropriate Win16 API based on the dwFunc parameter.  Extract any
 * necessary parameters from the lpBuf buffer.
 *
 * This function must be exported.
 *
 */


DWORD FAR PASCAL __export UTProc( DWORD *lpArgs, DWORD dwFunc)
{

  switch (dwFunc)
    {
    case 0:
      _bios_serialcom(_COM_INIT, 0, _COM_9600|_COM_NOPARITY|_COM_CHR8|_COM_STOP1);
    case 1:
      return _bios_serialcom(_COM_STATUS, 0,0);
    case 2:
      return _bios_serialcom(_COM_RECEIVE, 0,0);
    case 3:
      {
	int c = lpArgs[0];
	return _bios_serialcom(_COM_SEND, 0, lpArgs[0]);
      }
    }

  return( (DWORD)-1L ); // We should never get here.

} // UTProc()
@
