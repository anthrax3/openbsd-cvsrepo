head	1.3;
access;
symbols
	OPENBSD_3_5:1.2.0.32
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.30
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	new-binutils:1.2.0.14
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	CYGNUS-961112:1.1.2.1
	CYGNUS:1.1.0.2;
locks; strict;
comment	@// @;


1.3
date	2004.05.21.20.23.32;	author kettenis;	state dead;
branches;
next	1.2;

1.2
date	96.11.23.03.47.17;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.11.19.14.31.31;	author niklas;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.11.19.14.31.32;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Resolve conflicts for GDB 6.1.  Add local patches.
ok deraadt@@
@
text
@#if 0
// thinking.cpp : implementation file
//

#include "stdafx.h"
#include "thinking.h"

#ifdef _DEBUG
#undef THIS_FILE
static char BASED_CODE THIS_FILE[] = __FILE__;
#endif

/////////////////////////////////////////////////////////////////////////////
// CThinking

CThinking::CThinking()
{
}

CThinking::~CThinking()
{
}


BEGIN_MESSAGE_MAP(CThinking, CWnd)
	//{{AFX_MSG_MAP(CThinking)
	ON_WM_PAINT()
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()


/////////////////////////////////////////////////////////////////////////////
// CThinking message handlers

extern CWnd  *theframe;
BOOL CThinking::Create()
{
CRect rect(0,0,200,20);
return CControlBar::Create(this,NULL,  WS_CHILD|WS_VISIBLE|CBRS_TOP|CBRS_TOOLTIPS|CBRS_FLYBY,
		rect, theframe.0);
}

void CThinking::OnPaint() 
{
CPaintDC dc(this); // device context for painting
char b[200];
sprintf(b,"HI %d", val);
dc.TextOut(0,0,b);
}

void CThinking::set_text(const char *) {}
void CThinking::set_limit(int x) {}
void CThinking::set_now(int x)
{
 val = x; 
SendMessage(WM_PAINT);
}
#endif@


1.2
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@@


1.1
log
@file thinking.cpp was initially added on branch CYGNUS.
@
text
@d1 58
@


1.1.2.1
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a0 58
#if 0
// thinking.cpp : implementation file
//

#include "stdafx.h"
#include "thinking.h"

#ifdef _DEBUG
#undef THIS_FILE
static char BASED_CODE THIS_FILE[] = __FILE__;
#endif

/////////////////////////////////////////////////////////////////////////////
// CThinking

CThinking::CThinking()
{
}

CThinking::~CThinking()
{
}


BEGIN_MESSAGE_MAP(CThinking, CWnd)
	//{{AFX_MSG_MAP(CThinking)
	ON_WM_PAINT()
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()


/////////////////////////////////////////////////////////////////////////////
// CThinking message handlers

extern CWnd  *theframe;
BOOL CThinking::Create()
{
CRect rect(0,0,200,20);
return CControlBar::Create(this,NULL,  WS_CHILD|WS_VISIBLE|CBRS_TOP|CBRS_TOOLTIPS|CBRS_FLYBY,
		rect, theframe.0);
}

void CThinking::OnPaint() 
{
CPaintDC dc(this); // device context for painting
char b[200];
sprintf(b,"HI %d", val);
dc.TextOut(0,0,b);
}

void CThinking::set_text(const char *) {}
void CThinking::set_limit(int x) {}
void CThinking::set_now(int x)
{
 val = x; 
SendMessage(WM_PAINT);
}
#endif@
