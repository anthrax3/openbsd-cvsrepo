head	1.3;
access;
symbols
	OPENBSD_3_5:1.2.0.32
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.30
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	new-binutils:1.2.0.14
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	CYGNUS-961112:1.1.2.1
	CYGNUS:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2004.05.21.20.23.31;	author kettenis;	state dead;
branches;
next	1.2;

1.2
date	96.11.23.03.47.04;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.11.19.14.31.11;	author niklas;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.11.19.14.31.12;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Resolve conflicts for GDB 6.1.  Add local patches.
ok deraadt@@
@
text
@
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdarg.h>

void doing_something(char*s) { 
    printf("doing_something: %s\n",s);
}

char *safe_strerror (int l) {
    return strerror(l);
}

char* xmalloc(long l) {
    return malloc(l);
} 

void fprintf_unfiltered (FILE *fp, const char *str, ...) {
    va_list ap;
    if (fp==0) fp=stderr;
    va_start(ap, str);
    vfprintf(fp,str,ap);
    va_end(ap);
}
void error(const char *str, ...) {
    va_list ap;
    va_start(ap, str);
    vprintf(str,ap);
    va_end(ap);
    exit(1);
}

int fputc_unfiltered (int c, FILE *fp) {
    if (fp==0) fp=stderr;
    return fputc(c,fp);
}

char * savestring (ptr, size)
         const char *ptr;
	      int size;
{
      register char *p = (char *) xmalloc (size + 1);
        memcpy (p, ptr, size);
	  p[size] = 0;
	    return p;
}
char * strsave (ptr)
         const char *ptr;
{
      return savestring (ptr, strlen (ptr));
}



void fputs_unfiltered(char* str, FILE* fp) {
    if (fp==0) fp=stderr;
fputs(str,fp);
} 

/* these don't need to do anything */
void* setlist=0;
void* showlist=0;
void perror_with_name() { }
void add_set_cmd() { }
void add_set_enum_cmd() { }
void add_show_from_set() { }

@


1.2
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@@


1.1
log
@file serstub.c was initially added on branch CYGNUS.
@
text
@d1 68
@


1.1.2.1
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a0 68

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdarg.h>

void doing_something(char*s) { 
    printf("doing_something: %s\n",s);
}

char *safe_strerror (int l) {
    return strerror(l);
}

char* xmalloc(long l) {
    return malloc(l);
} 

void fprintf_unfiltered (FILE *fp, const char *str, ...) {
    va_list ap;
    if (fp==0) fp=stderr;
    va_start(ap, str);
    vfprintf(fp,str,ap);
    va_end(ap);
}
void error(const char *str, ...) {
    va_list ap;
    va_start(ap, str);
    vprintf(str,ap);
    va_end(ap);
    exit(1);
}

int fputc_unfiltered (int c, FILE *fp) {
    if (fp==0) fp=stderr;
    return fputc(c,fp);
}

char * savestring (ptr, size)
         const char *ptr;
	      int size;
{
      register char *p = (char *) xmalloc (size + 1);
        memcpy (p, ptr, size);
	  p[size] = 0;
	    return p;
}
char * strsave (ptr)
         const char *ptr;
{
      return savestring (ptr, strlen (ptr));
}



void fputs_unfiltered(char* str, FILE* fp) {
    if (fp==0) fp=stderr;
fputs(str,fp);
} 

/* these don't need to do anything */
void* setlist=0;
void* showlist=0;
void perror_with_name() { }
void add_set_cmd() { }
void add_set_enum_cmd() { }
void add_show_from_set() { }

@
