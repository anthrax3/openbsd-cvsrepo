head	1.3;
access;
symbols
	OPENBSD_3_5:1.2.0.32
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.30
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	new-binutils:1.2.0.14
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	CYGNUS-961112:1.1.2.1
	CYGNUS:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2004.05.21.20.23.31;	author kettenis;	state dead;
branches;
next	1.2;

1.2
date	96.11.23.03.47.06;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.11.19.14.31.14;	author niklas;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.11.19.14.31.14;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Resolve conflicts for GDB 6.1.  Add local patches.
ok deraadt@@
@
text
@# simulator
# can set TARGET_SIM_OBJS

# additional rules

$(SRCDIR)\gdb\mswin\prebuilt\code.c : $(SRCDIR)\gdb\gencode
	gencode -x > $(SRCDIR)\gdb\mswin\prebuilt\code.c

$(SRCDIR)\gdb\mswin\prebuilt\code.c : $(SRCDIR)\gdb\gencode.c 
    $(CFLAGS) @@<<
  $(SRCDIR)\gdb\gencode.c /out=$(SRCDIR)\gdb\mswin\prebuilt\code.c 
<<

SIM_OBJS=$(TARGET_SIM_OBJS) $(INTDIR)\sim\interp.obj $(INTDIR)\sim\run.obj \
	$(INTDIR)\sim\callback.obj
SIM_LIBS=$(INTDIR)\libbfd.lib $(INTDIR)\libiberty.lib $(INTDIR)\libbfd.lib $(INTDIR)\libiberty.lib $(INTDIR)\libbfd.lib 

#currently callback.c is the only src which tests INSIDE_SIMULATOR
{$(SRCDIR)/gdb}.c{$(INTDIR)/sim}.obj: 
	$(CPP) @@<<
$(SIM_CFLAGS) $(CFLAGS) $<
<<

{$(SRCDIR)/sim/common}.c{$(INTDIR)/sim}.obj: 
	$(DECHO) $(SIM_CFLAGS) $(CFLAGS) $<
	$(CPP) @@<<
$(SIM_CFLAGS) $(CFLAGS) $<
<<

{$(SRCDIR)/sim/$(TARGET)}.c{$(INTDIR)/sim}.obj: 
	$(DECHO) $(SIM_CFLAGS) $(CFLAGS) $<
	$(CPP) @@<<
$(SIM_CFLAGS) $(CFLAGS) $<
<<

$(INTDIR)\sim\nul : $(INTDIR)\nul
	mkdir $(INTDIR)\sim

LIBLIB_OBJS= \
	$(TARGET_LIBLIB_OBJS) \
	$(INTDIR)\argv.obj \
	$(INTDIR)\basename.obj \
	$(INTDIR)\concat.obj \
	$(INTDIR)\cplus-dem.obj \
	$(INTDIR)\fdmatch.obj \
	$(INTDIR)\getopt.obj \
	$(INTDIR)\getopt1.obj \
	$(INTDIR)\getruntime.obj \
	$(INTDIR)\hex.obj \
	$(INTDIR)\floatformat.obj \
	$(INTDIR)\obstack.obj \
	$(INTDIR)\spaces.obj \
	$(INTDIR)\vasprintf.obj \
	$(INTDIR)\xatexit.obj \
	$(INTDIR)\xexit.obj \
	$(INTDIR)\xmalloc.obj \
	$(INTDIR)\xstrdup.obj \
	$(INTDIR)\xstrerror.obj \
	$(INTDIR)\atexit.obj \
	$(INTDIR)\memmove.obj \


LIBBFD_OBJS= \
	$(TARGET_LIBBFD_OBJS) \
	$(INTDIR)\archive.obj \
	$(INTDIR)\archures.obj \
	$(INTDIR)\bfd.obj \
	$(INTDIR)\binary.obj \
	$(INTDIR)\cache.obj \
	$(INTDIR)\corefile.obj \
	$(INTDIR)\format.obj \
	$(INTDIR)\hash.obj \
	$(INTDIR)\ihex.obj \
	$(INTDIR)\init.obj \
	$(INTDIR)\libbfd.obj \
	$(INTDIR)\linker.obj \
	$(INTDIR)\opncls.obj \
	$(INTDIR)\reloc.obj \
	$(INTDIR)\section.obj \
	$(INTDIR)\srec.obj \
	$(INTDIR)\stab-syms.obj \
	$(INTDIR)\stabs.obj \
	$(INTDIR)\syms.obj \
	$(INTDIR)\targets.obj \
	$(INTDIR)\tekhex.obj 


LIBSIM_OBJS=$(INTDIR)\sim\interp.obj

# from sh sim
#	$(INTDIR)/coff-sh.obj 
#	$(INTDIR)/cpu-sh.obj 

# may want to add /debugtype:coff, ...
$(INTDIR)\libbfd.lib: $(LIBBFD_OBJS)
	@@echo ======= building $(INTDIR)\libbfd.lib ======
	$(DECHO) /OUT:$(INTDIR)\libbfd.lib $(LIBBFD_OBJS)
	$(AR) @@<<
   /OUT:$(INTDIR)\libbfd.lib $(LIBBFD_OBJS)
<<

$(INTDIR)\libiberty.lib: $(LIBLIB_OBJS)
	@@echo ======= building $(INTDIR)\libiberty.lib ======
	$(DECHO) /OUT:$(INTDIR)\libiberty.lib $(LIBLIB_OBJS)
	$(AR) @@<<
   /OUT:$(INTDIR)\libiberty.lib $(LIBLIB_OBJS)
<<

$(INTDIR)\sim\run.obj : $(SRCDIR)\sim\common\run.c
$(INTDIR)\sim\callback.obj : $(SRCDIR)\gdb\callback.c
$(INTDIR)\sim\interp.obj : $(SRCDIR)\sim\$(TARGET)\interp.c $(SRCDIR)\gdb\mswin\prebuilt\$(TARGET)\$(GENCODE)

$(INTDIR)/compile.obj : $(SRCDIR)/sim/$(TARGET)/compile.c
$(INTDIR)/table.obj : $(SRCDIR)/gdb/mswin/prebuilt/$(TARGET)/table.c
$(INTDIR)/interp.obj : $(SRCDIR)/sim/$(TARGET)/interp.c $(SRCDIR)/gdb/mswin/prebuilt/$(TARGET)/$(GENCODE)

$(INTDIR)\libsim.lib : $(LIBSIM_OBJS)
	@@echo ======= building $(INTDIR)\libsim.lib ======
	$(DECHO) $(AR) $(ARFLAGS) $(INTDIR)\libsim.lib $(LIBSIM_OBJS)
	$(AR) $(ARFLAGS) $(INTDIR)\libsim.lib $(LIBSIM_OBJS)
	$(RANLIB) $(INTDIR)\libsim.lib 

$(OUTDIR)\$(SIM).exe : $(OUTDIR) $(INTDIR) $(INTDIR)/sim/nul $(SIM_OBJS) $(SIM_LIBS) 
	@@echo ======= linking $(OUTDIR)\$(SIM).exe ======
    $(LINK32) @@<<
  $(SIM_LFLAGS) $(LFLAGS) $(SIM_OBJS) $(SIM_LIBS) $(TARGET_LFLAGS) /OUT:$(OUTDIR)\$(SIM).exe /SUBSYSTEM:console 
<<

@


1.2
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@@


1.1
log
@file sim.mak was initially added on branch CYGNUS.
@
text
@d1 128
@


1.1.2.1
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a0 128
# simulator
# can set TARGET_SIM_OBJS

# additional rules

$(SRCDIR)\gdb\mswin\prebuilt\code.c : $(SRCDIR)\gdb\gencode
	gencode -x > $(SRCDIR)\gdb\mswin\prebuilt\code.c

$(SRCDIR)\gdb\mswin\prebuilt\code.c : $(SRCDIR)\gdb\gencode.c 
    $(CFLAGS) @@<<
  $(SRCDIR)\gdb\gencode.c /out=$(SRCDIR)\gdb\mswin\prebuilt\code.c 
<<

SIM_OBJS=$(TARGET_SIM_OBJS) $(INTDIR)\sim\interp.obj $(INTDIR)\sim\run.obj \
	$(INTDIR)\sim\callback.obj
SIM_LIBS=$(INTDIR)\libbfd.lib $(INTDIR)\libiberty.lib $(INTDIR)\libbfd.lib $(INTDIR)\libiberty.lib $(INTDIR)\libbfd.lib 

#currently callback.c is the only src which tests INSIDE_SIMULATOR
{$(SRCDIR)/gdb}.c{$(INTDIR)/sim}.obj: 
	$(CPP) @@<<
$(SIM_CFLAGS) $(CFLAGS) $<
<<

{$(SRCDIR)/sim/common}.c{$(INTDIR)/sim}.obj: 
	$(DECHO) $(SIM_CFLAGS) $(CFLAGS) $<
	$(CPP) @@<<
$(SIM_CFLAGS) $(CFLAGS) $<
<<

{$(SRCDIR)/sim/$(TARGET)}.c{$(INTDIR)/sim}.obj: 
	$(DECHO) $(SIM_CFLAGS) $(CFLAGS) $<
	$(CPP) @@<<
$(SIM_CFLAGS) $(CFLAGS) $<
<<

$(INTDIR)\sim\nul : $(INTDIR)\nul
	mkdir $(INTDIR)\sim

LIBLIB_OBJS= \
	$(TARGET_LIBLIB_OBJS) \
	$(INTDIR)\argv.obj \
	$(INTDIR)\basename.obj \
	$(INTDIR)\concat.obj \
	$(INTDIR)\cplus-dem.obj \
	$(INTDIR)\fdmatch.obj \
	$(INTDIR)\getopt.obj \
	$(INTDIR)\getopt1.obj \
	$(INTDIR)\getruntime.obj \
	$(INTDIR)\hex.obj \
	$(INTDIR)\floatformat.obj \
	$(INTDIR)\obstack.obj \
	$(INTDIR)\spaces.obj \
	$(INTDIR)\vasprintf.obj \
	$(INTDIR)\xatexit.obj \
	$(INTDIR)\xexit.obj \
	$(INTDIR)\xmalloc.obj \
	$(INTDIR)\xstrdup.obj \
	$(INTDIR)\xstrerror.obj \
	$(INTDIR)\atexit.obj \
	$(INTDIR)\memmove.obj \


LIBBFD_OBJS= \
	$(TARGET_LIBBFD_OBJS) \
	$(INTDIR)\archive.obj \
	$(INTDIR)\archures.obj \
	$(INTDIR)\bfd.obj \
	$(INTDIR)\binary.obj \
	$(INTDIR)\cache.obj \
	$(INTDIR)\corefile.obj \
	$(INTDIR)\format.obj \
	$(INTDIR)\hash.obj \
	$(INTDIR)\ihex.obj \
	$(INTDIR)\init.obj \
	$(INTDIR)\libbfd.obj \
	$(INTDIR)\linker.obj \
	$(INTDIR)\opncls.obj \
	$(INTDIR)\reloc.obj \
	$(INTDIR)\section.obj \
	$(INTDIR)\srec.obj \
	$(INTDIR)\stab-syms.obj \
	$(INTDIR)\stabs.obj \
	$(INTDIR)\syms.obj \
	$(INTDIR)\targets.obj \
	$(INTDIR)\tekhex.obj 


LIBSIM_OBJS=$(INTDIR)\sim\interp.obj

# from sh sim
#	$(INTDIR)/coff-sh.obj 
#	$(INTDIR)/cpu-sh.obj 

# may want to add /debugtype:coff, ...
$(INTDIR)\libbfd.lib: $(LIBBFD_OBJS)
	@@echo ======= building $(INTDIR)\libbfd.lib ======
	$(DECHO) /OUT:$(INTDIR)\libbfd.lib $(LIBBFD_OBJS)
	$(AR) @@<<
   /OUT:$(INTDIR)\libbfd.lib $(LIBBFD_OBJS)
<<

$(INTDIR)\libiberty.lib: $(LIBLIB_OBJS)
	@@echo ======= building $(INTDIR)\libiberty.lib ======
	$(DECHO) /OUT:$(INTDIR)\libiberty.lib $(LIBLIB_OBJS)
	$(AR) @@<<
   /OUT:$(INTDIR)\libiberty.lib $(LIBLIB_OBJS)
<<

$(INTDIR)\sim\run.obj : $(SRCDIR)\sim\common\run.c
$(INTDIR)\sim\callback.obj : $(SRCDIR)\gdb\callback.c
$(INTDIR)\sim\interp.obj : $(SRCDIR)\sim\$(TARGET)\interp.c $(SRCDIR)\gdb\mswin\prebuilt\$(TARGET)\$(GENCODE)

$(INTDIR)/compile.obj : $(SRCDIR)/sim/$(TARGET)/compile.c
$(INTDIR)/table.obj : $(SRCDIR)/gdb/mswin/prebuilt/$(TARGET)/table.c
$(INTDIR)/interp.obj : $(SRCDIR)/sim/$(TARGET)/interp.c $(SRCDIR)/gdb/mswin/prebuilt/$(TARGET)/$(GENCODE)

$(INTDIR)\libsim.lib : $(LIBSIM_OBJS)
	@@echo ======= building $(INTDIR)\libsim.lib ======
	$(DECHO) $(AR) $(ARFLAGS) $(INTDIR)\libsim.lib $(LIBSIM_OBJS)
	$(AR) $(ARFLAGS) $(INTDIR)\libsim.lib $(LIBSIM_OBJS)
	$(RANLIB) $(INTDIR)\libsim.lib 

$(OUTDIR)\$(SIM).exe : $(OUTDIR) $(INTDIR) $(INTDIR)/sim/nul $(SIM_OBJS) $(SIM_LIBS) 
	@@echo ======= linking $(OUTDIR)\$(SIM).exe ======
    $(LINK32) @@<<
  $(SIM_LFLAGS) $(LFLAGS) $(SIM_OBJS) $(SIM_LIBS) $(TARGET_LFLAGS) /OUT:$(OUTDIR)\$(SIM).exe /SUBSYSTEM:console 
<<

@
