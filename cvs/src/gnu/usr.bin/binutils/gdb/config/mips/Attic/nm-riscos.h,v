head	1.4;
access;
symbols
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	GDB_6_1:1.1.1.1
	FSF:1.1.1
	OPENBSD_3_5:1.2.0.32
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.30
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	new-binutils:1.2.0.14
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	CYGNUS-961112:1.1.2.1
	CYGNUS:1.1.0.2;
locks; strict;
comment	@ * @;


1.4
date	2004.12.27.14.00.49;	author kettenis;	state dead;
branches;
next	1.3;

1.3
date	2004.05.21.20.23.23;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	96.11.23.03.43.42;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.11.19.14.26.18;	author niklas;	state dead;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2004.05.21.19.15.31;	author kettenis;	state Exp;
branches;
next	;

1.1.2.1
date	96.11.19.14.26.18;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Resolve conflicts for GDB 6.3.  Add local patches.
ok deraadt@@
@
text
@// OBSOLETE /* This program is free software; you can redistribute it and/or modify
// OBSOLETE    it under the terms of the GNU General Public License as published by
// OBSOLETE    the Free Software Foundation; either version 2 of the License, or
// OBSOLETE    (at your option) any later version.
// OBSOLETE 
// OBSOLETE    This program is distributed in the hope that it will be useful,
// OBSOLETE    but WITHOUT ANY WARRANTY; without even the implied warranty of
// OBSOLETE    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// OBSOLETE    GNU General Public License for more details.
// OBSOLETE 
// OBSOLETE    You should have received a copy of the GNU General Public License
// OBSOLETE    along with this program; if not, write to the Free Software
// OBSOLETE    Foundation, Inc., 59 Temple Place - Suite 330,
// OBSOLETE    Boston, MA 02111-1307, USA.  */
// OBSOLETE 
// OBSOLETE /* MIPS running RISC/os 4.52C.  */
// OBSOLETE 
// OBSOLETE #define PCB_OFFSET(FIELD) ((int)&((struct user*)0)->u_pcb.FIELD)
// OBSOLETE 
// OBSOLETE /* RISC/os 5.0 defines this in machparam.h.  */
// OBSOLETE #include <bsd43/machine/machparam.h>
// OBSOLETE #define NBPG BSD43_NBPG
// OBSOLETE #define UPAGES BSD43_UPAGES
// OBSOLETE 
// OBSOLETE /* Where is this used?  I don't see any uses in mips-nat.c, and I don't think
// OBSOLETE    the uses in infptrace.c are used if FETCH_INFERIOR_REGISTERS is defined.
// OBSOLETE    Does the compiler react badly to "extern CORE_ADDR kernel_u_addr" (even
// OBSOLETE    if never referenced)?  */
// OBSOLETE #define KERNEL_U_ADDR BSD43_UADDR
// OBSOLETE 
// OBSOLETE #define REGISTER_U_ADDR(addr, blockend, regno) 		\
// OBSOLETE 	      if (regno < FP0_REGNUM) \
// OBSOLETE 		  addr =  UPAGES*NBPG-EF_SIZE+4*((regno)+EF_AT-1); \
// OBSOLETE 	      else if (regno < PC_REGNUM) \
// OBSOLETE 		  addr = PCB_OFFSET(pcb_fpregs[0]) + 4*(regno-FP0_REGNUM); \
// OBSOLETE               else if (regno == PS_REGNUM) \
// OBSOLETE                   addr = UPAGES*NBPG-EF_SIZE+4*EF_SR; \
// OBSOLETE               else if (regno == mips_regnum (current_gdbarch)->badvaddr) \
// OBSOLETE   		  addr = UPAGES*NBPG-EF_SIZE+4*EF_BADVADDR; \
// OBSOLETE 	      else if (regno == mips_regnum (current_gdbarch)->lo) \
// OBSOLETE 		  addr = UPAGES*NBPG-EF_SIZE+4*EF_MDLO; \
// OBSOLETE 	      else if (regno == mips_regnum (current_gdbarch)->hi) \
// OBSOLETE 		  addr = UPAGES*NBPG-EF_SIZE+4*EF_MDHI; \
// OBSOLETE 	      else if (regno == mips_regnum (current_gdbarch)->cause) \
// OBSOLETE 		  addr = UPAGES*NBPG-EF_SIZE+4*EF_CAUSE; \
// OBSOLETE 	      else if (regno == mips_regnum (current_gdbarch)->pc) \
// OBSOLETE 		  addr = UPAGES*NBPG-EF_SIZE+4*EF_EPC; \
// OBSOLETE               else if (regno < mips_regnum (current_gdbarch)->fp_control_status) \
// OBSOLETE 		  addr = PCB_OFFSET(pcb_fpregs[0]) + 4*(regno-FP0_REGNUM); \
// OBSOLETE 	      else if (regno == mips_regnum (current_gdbarch)->fp_control_status) \
// OBSOLETE 		  addr = PCB_OFFSET(pcb_fpc_csr); \
// OBSOLETE 	      else if (regno == mips_regnum (current_gdbarch)->fp_implementation_revision) \
// OBSOLETE 		  addr = PCB_OFFSET(pcb_fpc_eir); \
// OBSOLETE               else \
// OBSOLETE                   addr = 0;
// OBSOLETE 
// OBSOLETE #include "mips/nm-mips.h"
// OBSOLETE 
// OBSOLETE /* Override copies of {fetch,store}_inferior_registers in infptrace.c.  */
// OBSOLETE #define FETCH_INFERIOR_REGISTERS
@


1.3
log
@Resolve conflicts for GDB 6.1.  Add local patches.
ok deraadt@@
@
text
@@


1.2
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d1 60
a60 59
/* This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

/* MIPS running RISC/os 4.52C.  */

#define PCB_OFFSET(FIELD) ((int)&((struct user*)0)->u_pcb.FIELD)

/* RISC/os 5.0 defines this in machparam.h.  */
#include <bsd43/machine/machparam.h>
#define NBPG BSD43_NBPG
#define UPAGES BSD43_UPAGES

/* Where is this used?  I don't see any uses in mips-nat.c, and I don't think
   the uses in infptrace.c are used if FETCH_INFERIOR_REGISTERS is defined.
   Does the compiler react badly to "extern CORE_ADDR kernel_u_addr" (even
   if never referenced)?  */
#define KERNEL_U_ADDR BSD43_UADDR

#define REGISTER_U_ADDR(addr, blockend, regno) 		\
	      if (regno < FP0_REGNUM) \
		  addr =  UPAGES*NBPG-EF_SIZE+4*((regno)+EF_AT-1); \
	      else if (regno < PC_REGNUM) \
		  addr = PCB_OFFSET(pcb_fpregs[0]) + 4*(regno-FP0_REGNUM); \
              else if (regno == PS_REGNUM) \
                  addr = UPAGES*NBPG-EF_SIZE+4*EF_SR; \
              else if (regno == BADVADDR_REGNUM) \
  		  addr = UPAGES*NBPG-EF_SIZE+4*EF_BADVADDR; \
	      else if (regno == LO_REGNUM) \
		  addr = UPAGES*NBPG-EF_SIZE+4*EF_MDLO; \
	      else if (regno == HI_REGNUM) \
		  addr = UPAGES*NBPG-EF_SIZE+4*EF_MDHI; \
	      else if (regno == CAUSE_REGNUM) \
		  addr = UPAGES*NBPG-EF_SIZE+4*EF_CAUSE; \
	      else if (regno == PC_REGNUM) \
		  addr = UPAGES*NBPG-EF_SIZE+4*EF_EPC; \
              else if (regno < FCRCS_REGNUM) \
		  addr = PCB_OFFSET(pcb_fpregs[0]) + 4*(regno-FP0_REGNUM); \
	      else if (regno == FCRCS_REGNUM) \
		  addr = PCB_OFFSET(pcb_fpc_csr); \
	      else if (regno == FCRIR_REGNUM) \
		  addr = PCB_OFFSET(pcb_fpc_eir); \
              else \
                  addr = 0;

#include "mips/nm-mips.h"

/* Override copies of {fetch,store}_inferior_registers in infptrace.c.  */
#define FETCH_INFERIOR_REGISTERS
@


1.1
log
@file nm-riscos.h was initially added on branch CYGNUS.
@
text
@d1 59
@


1.1.1.1
log
@GDB 6.1 (excluding .info files)
@
text
@a0 60
// OBSOLETE /* This program is free software; you can redistribute it and/or modify
// OBSOLETE    it under the terms of the GNU General Public License as published by
// OBSOLETE    the Free Software Foundation; either version 2 of the License, or
// OBSOLETE    (at your option) any later version.
// OBSOLETE 
// OBSOLETE    This program is distributed in the hope that it will be useful,
// OBSOLETE    but WITHOUT ANY WARRANTY; without even the implied warranty of
// OBSOLETE    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// OBSOLETE    GNU General Public License for more details.
// OBSOLETE 
// OBSOLETE    You should have received a copy of the GNU General Public License
// OBSOLETE    along with this program; if not, write to the Free Software
// OBSOLETE    Foundation, Inc., 59 Temple Place - Suite 330,
// OBSOLETE    Boston, MA 02111-1307, USA.  */
// OBSOLETE 
// OBSOLETE /* MIPS running RISC/os 4.52C.  */
// OBSOLETE 
// OBSOLETE #define PCB_OFFSET(FIELD) ((int)&((struct user*)0)->u_pcb.FIELD)
// OBSOLETE 
// OBSOLETE /* RISC/os 5.0 defines this in machparam.h.  */
// OBSOLETE #include <bsd43/machine/machparam.h>
// OBSOLETE #define NBPG BSD43_NBPG
// OBSOLETE #define UPAGES BSD43_UPAGES
// OBSOLETE 
// OBSOLETE /* Where is this used?  I don't see any uses in mips-nat.c, and I don't think
// OBSOLETE    the uses in infptrace.c are used if FETCH_INFERIOR_REGISTERS is defined.
// OBSOLETE    Does the compiler react badly to "extern CORE_ADDR kernel_u_addr" (even
// OBSOLETE    if never referenced)?  */
// OBSOLETE #define KERNEL_U_ADDR BSD43_UADDR
// OBSOLETE 
// OBSOLETE #define REGISTER_U_ADDR(addr, blockend, regno) 		\
// OBSOLETE 	      if (regno < FP0_REGNUM) \
// OBSOLETE 		  addr =  UPAGES*NBPG-EF_SIZE+4*((regno)+EF_AT-1); \
// OBSOLETE 	      else if (regno < PC_REGNUM) \
// OBSOLETE 		  addr = PCB_OFFSET(pcb_fpregs[0]) + 4*(regno-FP0_REGNUM); \
// OBSOLETE               else if (regno == PS_REGNUM) \
// OBSOLETE                   addr = UPAGES*NBPG-EF_SIZE+4*EF_SR; \
// OBSOLETE               else if (regno == mips_regnum (current_gdbarch)->badvaddr) \
// OBSOLETE   		  addr = UPAGES*NBPG-EF_SIZE+4*EF_BADVADDR; \
// OBSOLETE 	      else if (regno == mips_regnum (current_gdbarch)->lo) \
// OBSOLETE 		  addr = UPAGES*NBPG-EF_SIZE+4*EF_MDLO; \
// OBSOLETE 	      else if (regno == mips_regnum (current_gdbarch)->hi) \
// OBSOLETE 		  addr = UPAGES*NBPG-EF_SIZE+4*EF_MDHI; \
// OBSOLETE 	      else if (regno == mips_regnum (current_gdbarch)->cause) \
// OBSOLETE 		  addr = UPAGES*NBPG-EF_SIZE+4*EF_CAUSE; \
// OBSOLETE 	      else if (regno == mips_regnum (current_gdbarch)->pc) \
// OBSOLETE 		  addr = UPAGES*NBPG-EF_SIZE+4*EF_EPC; \
// OBSOLETE               else if (regno < mips_regnum (current_gdbarch)->fp_control_status) \
// OBSOLETE 		  addr = PCB_OFFSET(pcb_fpregs[0]) + 4*(regno-FP0_REGNUM); \
// OBSOLETE 	      else if (regno == mips_regnum (current_gdbarch)->fp_control_status) \
// OBSOLETE 		  addr = PCB_OFFSET(pcb_fpc_csr); \
// OBSOLETE 	      else if (regno == mips_regnum (current_gdbarch)->fp_implementation_revision) \
// OBSOLETE 		  addr = PCB_OFFSET(pcb_fpc_eir); \
// OBSOLETE               else \
// OBSOLETE                   addr = 0;
// OBSOLETE 
// OBSOLETE #include "mips/nm-mips.h"
// OBSOLETE 
// OBSOLETE /* Override copies of {fetch,store}_inferior_registers in infptrace.c.  */
// OBSOLETE #define FETCH_INFERIOR_REGISTERS
@


1.1.2.1
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a0 59
/* This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

/* MIPS running RISC/os 4.52C.  */

#define PCB_OFFSET(FIELD) ((int)&((struct user*)0)->u_pcb.FIELD)

/* RISC/os 5.0 defines this in machparam.h.  */
#include <bsd43/machine/machparam.h>
#define NBPG BSD43_NBPG
#define UPAGES BSD43_UPAGES

/* Where is this used?  I don't see any uses in mips-nat.c, and I don't think
   the uses in infptrace.c are used if FETCH_INFERIOR_REGISTERS is defined.
   Does the compiler react badly to "extern CORE_ADDR kernel_u_addr" (even
   if never referenced)?  */
#define KERNEL_U_ADDR BSD43_UADDR

#define REGISTER_U_ADDR(addr, blockend, regno) 		\
	      if (regno < FP0_REGNUM) \
		  addr =  UPAGES*NBPG-EF_SIZE+4*((regno)+EF_AT-1); \
	      else if (regno < PC_REGNUM) \
		  addr = PCB_OFFSET(pcb_fpregs[0]) + 4*(regno-FP0_REGNUM); \
              else if (regno == PS_REGNUM) \
                  addr = UPAGES*NBPG-EF_SIZE+4*EF_SR; \
              else if (regno == BADVADDR_REGNUM) \
  		  addr = UPAGES*NBPG-EF_SIZE+4*EF_BADVADDR; \
	      else if (regno == LO_REGNUM) \
		  addr = UPAGES*NBPG-EF_SIZE+4*EF_MDLO; \
	      else if (regno == HI_REGNUM) \
		  addr = UPAGES*NBPG-EF_SIZE+4*EF_MDHI; \
	      else if (regno == CAUSE_REGNUM) \
		  addr = UPAGES*NBPG-EF_SIZE+4*EF_CAUSE; \
	      else if (regno == PC_REGNUM) \
		  addr = UPAGES*NBPG-EF_SIZE+4*EF_EPC; \
              else if (regno < FCRCS_REGNUM) \
		  addr = PCB_OFFSET(pcb_fpregs[0]) + 4*(regno-FP0_REGNUM); \
	      else if (regno == FCRCS_REGNUM) \
		  addr = PCB_OFFSET(pcb_fpc_csr); \
	      else if (regno == FCRIR_REGNUM) \
		  addr = PCB_OFFSET(pcb_fpc_eir); \
              else \
                  addr = 0;

#include "mips/nm-mips.h"

/* Override copies of {fetch,store}_inferior_registers in infptrace.c.  */
#define FETCH_INFERIOR_REGISTERS
@
