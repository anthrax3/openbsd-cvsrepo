head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.52
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.50
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.46
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.48
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.40
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.44
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.42
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.38
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.36
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.34
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.32
	OPENBSD_5_0:1.1.1.1.0.30
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.28
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.26
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.22
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.24
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.20
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.18
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.16
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.14
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.12
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.10
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.8
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.6
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.4
	OPENBSD_3_7_BASE:1.1.1.1
	GDB_6_3:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	GDB_6_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2004.05.21.19.18.10;	author kettenis;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.21.19.18.10;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@# This file was written by Sue Kimura. (sue_kimura@@hp.com)
#
# Test for CLLbs14602 -- problem with recognizing long double on 10.20.
#
# Source file: bs14602.c

if $tracelevel {
    strace $tracelevel
}

if { [skip_hp_tests] } { continue }

#
# test running programs
#
set prms_id 0
set bug_id 0


set testfile bs14602
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}

# Create and source the file that provides information about the compiler
# used to compile the test case.
if [get_compiler_info ${binfile}] {
    return -1;
}

# set up appropriate compile option to recognize long double
if {$hp_aCC_compiler || $hp_cc_compiler} {
    set ansi_option "-Ae"
} else {
    set ansi_option ""
}

if { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "$binfile" executable "debug {additional_flags=${ansi_option}}"] != "" } {
    perror "Couldn't compile ${srcfile}"
    return -1
}


# Start with a fresh gdb.

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load $binfile


# get to end of main so we can check out some stuff
if ![runto main] {
  perror "couldn't run to breakpoint main"
  continue
}

gdb_test "txbreak" \
    "Breakpoint $decimal at $hex: file .*bs14602.c, line 9." \
    "set breakpoint at end of main"

gdb_test "continue" \
    "Continuing.\r\n$hex in main* \\(\\) at .*bs14602.c:9\r\n.*" \
    "continue to end of main"

# test some simple things about long double
gdb_test "whatis v_long_double" \
    "type = long double" \
    "whatis v_long_double"

gdb_test "ptype v_long_double" \
    "type = long double" \
    "ptype v_long_double"

gdb_test "print sizeof \(long double\)" \
    " = 16" \
    "print sizeof long double"

gdb_test "print sizeof \(v_long_double\)" \
    " = 16" \
    "print sizeof v_long_double"

gdb_test "print v_long_double"  \
    " = 12345.67890000000079453457146883011" \
    "print v_long_double - 1" 

gdb_test "set variable v_long_double = 98765.43210" \
    "" \
    "set variable v_long_double to constant value"

gdb_test "print v_long_double" \
    " = 98765.43210000000544823706150054932" \
    "print v_long_double - 2" 

gdb_test "set variable v_double = v_long_double" \
    "" \
    " set variable v_double with v_long_double"

gdb_test "print v_double" \
    " = 98765.432100000005" \
    " print v_double"

#reset v_long_double
gdb_test "set variable v_long_double = 0" \
    "" \
    "reset v_long_double to 0"

gdb_test "print v_long_double" \
    " = 0" \
    "print v_long_double - 3"

gdb_test "set variable v_long_double = v_double" \
    "" \
    " set variable v_long_double with v_long_double"

gdb_test "print v_long_double" \
    " = 98765.43210000000544823706150054932" \
    "print v_long_double - 4 "
@


1.1.1.1
log
@GDB 6.1 (excluding .info files)
@
text
@@
