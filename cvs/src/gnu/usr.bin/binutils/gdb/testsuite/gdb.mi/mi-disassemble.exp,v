head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1.1.2
	OPENBSD_6_1:1.1.1.2.0.52
	OPENBSD_6_1_BASE:1.1.1.2
	OPENBSD_6_0:1.1.1.2.0.48
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.44
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.46
	OPENBSD_5_8_BASE:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.38
	OPENBSD_5_7_BASE:1.1.1.2
	OPENBSD_5_6:1.1.1.2.0.42
	OPENBSD_5_6_BASE:1.1.1.2
	OPENBSD_5_5:1.1.1.2.0.40
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.36
	OPENBSD_5_4_BASE:1.1.1.2
	OPENBSD_5_3:1.1.1.2.0.34
	OPENBSD_5_3_BASE:1.1.1.2
	OPENBSD_5_2:1.1.1.2.0.32
	OPENBSD_5_2_BASE:1.1.1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.30
	OPENBSD_5_0:1.1.1.2.0.28
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.26
	OPENBSD_4_9_BASE:1.1.1.2
	OPENBSD_4_8:1.1.1.2.0.24
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.20
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.22
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.18
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.16
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.14
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.12
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.10
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.8
	OPENBSD_4_0_BASE:1.1.1.2
	OPENBSD_3_9:1.1.1.2.0.6
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.4
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.2
	OPENBSD_3_7_BASE:1.1.1.2
	GDB_6_3:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	GDB_6_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2004.05.21.19.18.15;	author kettenis;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.21.19.18.15;	author kettenis;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.27.13.16.36;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@# Copyright 1999, 2000, 2002 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu

#
# Test Machine interface (MI) operations for disassembly.
#
# The goal is not to test gdb functionality, which is done by other tests,
# but to verify the correct output response to MI operations.
#

load_lib mi-support.exp
set MIFLAGS "-i=mi"

gdb_exit
if [mi_gdb_start] {
    continue
}

set testfile "basics"
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug additional_flags=-DFAKEARGV}] != "" } {
     gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
}

mi_delete_breakpoints
mi_gdb_reinitialize_dir $srcdir/$subdir
mi_gdb_load ${binfile}

proc test_disassembly_only {} {
    global mi_gdb_prompt
    global hex
    global decimal

    # Test disassembly more only for the current function.
    # Tests:
    # -data-disassemble -s $pc -e "$pc+8" -- 0
    # -data-disassembly -f basics.c -l 32 -- 0

    mi_gdb_test "print/x \$pc" "" ""
    mi_gdb_test "111-data-disassemble -s \$pc -e \"\$pc + 12\" -- 0" \
	    "111\\^done,asm_insns=\\\[\{address=\"$hex\",func-name=\"main\",offset=\"$decimal\",inst=\".*\"\},\{address=\"$hex\",func-name=\"main\",offset=\"$decimal\",inst=\".*\"\}.*\]" \
             "data-disassemble from pc to pc+12 assembly only"

    mi_gdb_test "222-data-disassemble  -f basics.c -l 32 -- 0" \
	    "222\\^done,asm_insns=\\\[\{address=\"$hex\",func-name=\"main\",offset=\"0\",inst=\".*\"\},.*,\{address=\"$hex\",func-name=\"main\",offset=\"$decimal\",inst=\".*\"\}\\\]" \
              "data-disassemble file & line, assembly only"
}

proc test_disassembly_lines_limit {} {
    global mi_gdb_prompt
    global hex
    global decimal

    # Test disassembly more only for the current function.
    # Tests:
    # -data-disassembly -f basics.c -l 32 -n 20 -- 0
    # -data-disassembly -f basics.c -l 32 -n 0 -- 0
    # -data-disassembly -f basics.c -l 32 -n 50 -- 0

    mi_gdb_test "print/x \$pc" "" ""
    mi_gdb_test "222-data-disassemble  -f basics.c -l 32 -n 20 -- 0" \
	    "222\\^done,asm_insns=\\\[\{address=\"$hex\",func-name=\"main\",offset=\"0\",inst=\".*\"\},.*,\{address=\"$hex\",func-name=\"main\",offset=\"$decimal\",inst=\".*\"\}\\\]" \
              "data-disassemble file, line, number assembly only"

    mi_gdb_test "222-data-disassemble  -f basics.c -l 32 -n 0 -- 0" \
	    "222\\^done,asm_insns=\\\[\\\]" \
              "data-disassemble file, line, number (zero lines) assembly only"

    mi_gdb_test "222-data-disassemble  -f basics.c -l 32 -n 50 -- 0" \
	    "222\\^done,asm_insns=\\\[\{address=\"$hex\",func-name=\"main\",offset=\"0\",inst=\".*\"\},.*,\{address=\"$hex\",func-name=\"main\",offset=\"$decimal\",inst=\".*\"\}\\\]" \
              "data-disassemble file, line, number (more than main lines) assembly only"
}


proc test_disassembly_mixed {} {
    global mi_gdb_prompt
    global hex
    global decimal

    # Test disassembly more only for the current function.
    # Tests:
    # -data-disassembly -f basics.c -l 21 -- 1
    # -data-disassembly -s $pc -e "$pc+8" -- 1

    mi_gdb_test "002-data-disassemble -f basics.c -l 21 -- 1" \
	    "002\\^done,asm_insns=\\\[src_and_asm_line=\{line=\"21\",file=\".*basics.c\",line_asm_insn=\\\[\{address=\"$hex\",func-name=\"callee2\",offset=\"0\",inst=\".*\"\}.*\\\]\}.*,src_and_asm_line=\{line=\"$decimal\",file=\".*basics.c\",line_asm_insn=\\\[.*\{address=\"$hex\",func-name=\"callee2\",offset=\"$decimal\",inst=\".*\"\}\\\]\}\\\]" \
             "data-disassemble file, line assembly mixed"

    #
    # In mixed mode, the lowest level of granularity is the source line.
    # So we are going to get the disassembly for the source line at
    # which we are now, even if we have specified that the range is only 2 insns.
    #
    mi_gdb_test "003-data-disassemble -s \$pc -e \"\$pc+4\" -- 1" \
	    "003\\^done,asm_insns=\\\[src_and_asm_line=\{line=\"$decimal\",file=\".*basics.c\",line_asm_insn=\\\[\{address=\"$hex\",func-name=\"main\",offset=\"$decimal\",inst=\".*\"\}.*\{address=\"$hex\",func-name=\"main\",offset=\"$decimal\",inst=\".*\"\}\\\]\}\\\]" \
             "data-disassemble range assembly mixed"
}

proc test_disassembly_mixed_lines_limit {} {
    global mi_gdb_prompt
    global hex
    global decimal

    # Test disassembly more only for the current function.
    # Tests:
    # -data-disassembly -f basics.c -l 32 -n 20 -- 1
    # -data-disassembly -f basics.c -l 32 -n 0 -- 1
    # -data-disassembly -f basics.c -l 32 -n 50 -- 1

    mi_gdb_test "print/x \$pc" "" ""
    mi_gdb_test "222-data-disassemble  -f basics.c -l 32 -n 20 -- 1" \
	    "222\\^done,asm_insns=\\\[src_and_asm_line=\{line=\"$decimal\",file=\".*basics.c\",line_asm_insn=\\\[\{address=\"$hex\",func-name=\"main\",offset=\"0\",inst=\".*\"\},.*,\{address=\"$hex\",func-name=\"main\",offset=\"$decimal\",inst=\".*\"\}\\\]\}\]" \
              "data-disassemble file, line, number assembly mixed"

    mi_gdb_test "222-data-disassemble  -f basics.c -l 32 -n 0 -- 1" \
	    "222\\^done,asm_insns=\\\[src_and_asm_line=\{line=\"31\",file=\".*basics.c\",line_asm_insn=\\\[\\\]\}\\\]" \
              "data-disassemble file, line, number (zero lines) assembly mixed"

    mi_gdb_test "222-data-disassemble  -f basics.c -l 32 -n 50 -- 1" \
	    "222\\^done,asm_insns=\\\[src_and_asm_line=\{line=\"$decimal\",file=\".*basics.c\",line_asm_insn=\\\[\{address=\"$hex\",func-name=\"main\",offset=\"0\",inst=\".*\"\}.*,\{address=\"$hex\",func-name=\"main\",offset=\"$decimal\",inst=\".*\"\}\\\]\}\]" \
              "data-disassemble file, line, number (more than main lines) assembly mixed"
}

proc test_disassembly_bogus_args {} {
    global mi_gdb_prompt
    global hex

    # Test that bogus input to disassembly command is rejected.
    # Tests:
    # -data-disassembly -f foo -l abc -n 0 -- 0
    # -data-disassembly -s foo -e bar -- 0
    # -data-disassembly -s $pc -f basics.c -- 0
    # -data-disassembly -f basics.c -l 32 -- 9

    mi_gdb_test "123-data-disassemble -f foo -l abc -n 0 -- 0" \
             ".*123\\^error,msg=\"mi_cmd_disassemble: Invalid filename.\"" \
             "data-disassemble bogus filename"

    mi_gdb_test "321-data-disassemble -s foo -e bar -- 0" \
             "321\\^error,msg=\"No symbol \\\\\"foo\\\\\" in current context.\"" \
             "data-disassemble bogus address"

    mi_gdb_test "456-data-disassemble -s \$pc -f basics.c -- 0" \
             "456\\^error,msg=\"mi_cmd_disassemble: Usage: \\( .-f filename -l linenum .-n howmany.. | .-s startaddr -e endaddr.\\) .--. mixed_mode.\"" \
             "data-disassemble mix different args"

    mi_gdb_test "789-data-disassemble -f basics.c -l 32 -- 9" \
             "789\\^error,msg=\"mi_cmd_disassemble: Mixed_mode argument must be 0 or 1.\"" \
             "data-disassemble wrong mode arg"

}

mi_run_to_main
test_disassembly_only
test_disassembly_mixed
test_disassembly_bogus_args
test_disassembly_lines_limit
test_disassembly_mixed_lines_limit

mi_gdb_exit
return 0
@


1.1.1.1
log
@GDB 6.1 (excluding .info files)
@
text
@@


1.1.1.2
log
@GDB 6.3 (excluding .info files)
@
text
@d1 1
a1 1
# Copyright 1999, 2000, 2001, 2002, 2004 Free Software Foundation, Inc.
d17 3
a50 3
    set line_main_head [gdb_get_line_number "main ("]
    set line_main_body [expr $line_main_head + 2]

d54 1
a54 1
    # -data-disassembly -f basics.c -l $line_main_body -- 0
d61 1
a61 1
    mi_gdb_test "222-data-disassemble  -f basics.c -l $line_main_body -- 0" \
a70 3
    set line_main_head [gdb_get_line_number "main ("]
    set line_main_body [expr $line_main_head + 2]

d73 3
a75 3
    # -data-disassembly -f basics.c -l $line_main_body -n 20 -- 0
    # -data-disassembly -f basics.c -l $line_main_body -n 0 -- 0
    # -data-disassembly -f basics.c -l $line_main_body -n 50 -- 0
d78 1
a78 1
    mi_gdb_test "222-data-disassemble  -f basics.c -l $line_main_body -n 20 -- 0" \
d82 1
a82 1
    mi_gdb_test "222-data-disassemble  -f basics.c -l $line_main_body -n 0 -- 0" \
d86 1
a86 1
    mi_gdb_test "222-data-disassemble  -f basics.c -l $line_main_body -n 50 -- 0" \
a96 3
    set line_callee2_head       [gdb_get_line_number "callee2 ("]
    set line_callee2_open_brace [expr $line_callee2_head + 1]

d99 1
a99 1
    # -data-disassembly -f basics.c -l $line_callee2_open_brace -- 1
d102 2
a103 2
    mi_gdb_test "002-data-disassemble -f basics.c -l $line_callee2_open_brace -- 1" \
	    "002\\^done,asm_insns=\\\[src_and_asm_line=\{line=\"$line_callee2_open_brace\",file=\".*basics.c\",line_asm_insn=\\\[\{address=\"$hex\",func-name=\"callee2\",offset=\"0\",inst=\".*\"\}.*\\\]\}.*,src_and_asm_line=\{line=\"$decimal\",file=\".*basics.c\",line_asm_insn=\\\[.*\{address=\"$hex\",func-name=\"callee2\",offset=\"$decimal\",inst=\".*\"\}\\\]\}\\\]" \
a120 4
    set line_main_head       [gdb_get_line_number "main ("]
    set line_main_open_brace [expr $line_main_head + 1]
    set line_main_body       [expr $line_main_head + 2]

d123 3
a125 3
    # -data-disassembly -f basics.c -l $line_main_body -n 20 -- 1
    # -data-disassembly -f basics.c -l $line_main_body -n 0 -- 1
    # -data-disassembly -f basics.c -l $line_main_body -n 50 -- 1
d128 1
a128 1
    mi_gdb_test "222-data-disassemble  -f basics.c -l $line_main_body -n 20 -- 1" \
d132 2
a133 2
    mi_gdb_test "222-data-disassemble  -f basics.c -l $line_main_body -n 0 -- 1" \
	    "222\\^done,asm_insns=\\\[src_and_asm_line=\{line=\"$line_main_open_brace\",file=\".*basics.c\",line_asm_insn=\\\[\\\]\}\\\]" \
d136 1
a136 1
    mi_gdb_test "222-data-disassemble  -f basics.c -l $line_main_body -n 50 -- 1" \
a144 3
    set line_main_head [gdb_get_line_number "main ("]
    set line_main_body [expr $line_main_head + 2]

d164 1
a164 1
    mi_gdb_test "789-data-disassemble -f basics.c -l $line_main_body -- 9" \
@

