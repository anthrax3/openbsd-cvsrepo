head	1.3;
access;
symbols
	OPENBSD_3_5:1.2.0.32
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.30
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	new-binutils:1.2.0.14
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	CYGNUS-961112:1.1.2.1
	CYGNUS:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2004.05.21.20.23.41;	author kettenis;	state dead;
branches;
next	1.2;

1.2
date	96.11.23.03.50.50;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.11.19.14.36.24;	author niklas;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.11.19.14.36.24;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Resolve conflicts for GDB 6.1.  Add local patches.
ok deraadt@@
@
text
@hack : module

dcl i int;
newmode otto = array (bool, bool) byte;
newmode str1 = struct (f1 int, f2 bool);
newmode str2 = struct (f1 otto);

dcl a otto := [[1,1],[1,1]];
dcl b str1 := [10, false];
dcl c str2;

fred : proc (a int in, b int loc);
  writetext(stdout, "a is '%C'; b is '%C'.%/", a, b);
end fred;

klaus : proc ();
  writetext(stdout, "here's klaus calling.%/");
end klaus;

king : proc (p otto loc, x otto in);
  dcl i, j bool;
  p := [[h'ff,h'ff],[h'ff,h'ff]];
  do for i:= lower(bool) to upper(bool);
    do for j:= lower(bool) to upper(bool);
      writetext(stdout, "x(%C, %C) = %C%..%/", i, j, x(i, j));
      writetext(stdout, "p(%C, %C) = %C%..%/", i, j, p(i, j));
    od;
  od;
end king;

ralph : proc (x str1 in);
  writetext(stdout, "x.f1 = %C, x.f2 = %C%..%/", x.f1, x.f2);
end ralph;

whitney : proc (x str2 in);
  dcl i, j bool;

  do for i:= lower(bool) to upper(bool);
    do for j:= lower(bool) to upper(bool);
      writetext(stdout, "x.f1(%C, %C) = %C%..%/", i, j, x.f1(i, j));
     od;
  od;

end whitney;

c := [a];
i:=12;
writetext(stdout, "done.%/");

end hack;
@


1.2
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@@


1.1
log
@file callch.ch was initially added on branch CYGNUS.
@
text
@d1 50
@


1.1.2.1
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a0 50
hack : module

dcl i int;
newmode otto = array (bool, bool) byte;
newmode str1 = struct (f1 int, f2 bool);
newmode str2 = struct (f1 otto);

dcl a otto := [[1,1],[1,1]];
dcl b str1 := [10, false];
dcl c str2;

fred : proc (a int in, b int loc);
  writetext(stdout, "a is '%C'; b is '%C'.%/", a, b);
end fred;

klaus : proc ();
  writetext(stdout, "here's klaus calling.%/");
end klaus;

king : proc (p otto loc, x otto in);
  dcl i, j bool;
  p := [[h'ff,h'ff],[h'ff,h'ff]];
  do for i:= lower(bool) to upper(bool);
    do for j:= lower(bool) to upper(bool);
      writetext(stdout, "x(%C, %C) = %C%..%/", i, j, x(i, j));
      writetext(stdout, "p(%C, %C) = %C%..%/", i, j, p(i, j));
    od;
  od;
end king;

ralph : proc (x str1 in);
  writetext(stdout, "x.f1 = %C, x.f2 = %C%..%/", x.f1, x.f2);
end ralph;

whitney : proc (x str2 in);
  dcl i, j bool;

  do for i:= lower(bool) to upper(bool);
    do for j:= lower(bool) to upper(bool);
      writetext(stdout, "x.f1(%C, %C) = %C%..%/", i, j, x.f1(i, j));
     od;
  od;

end whitney;

c := [a];
i:=12;
writetext(stdout, "done.%/");

end hack;
@
