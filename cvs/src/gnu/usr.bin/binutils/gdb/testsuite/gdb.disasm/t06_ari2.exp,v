head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.54
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.50
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.46
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.48
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.40
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.44
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.42
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.38
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.36
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.34
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.32
	OPENBSD_5_0:1.1.1.1.0.30
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.28
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.26
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.22
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.24
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.20
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.18
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.16
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.14
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.12
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.10
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.8
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.6
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.4
	OPENBSD_3_7_BASE:1.1.1.1
	GDB_6_3:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	GDB_6_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2004.05.21.19.17.44;	author kettenis;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.21.19.17.44;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@# Copyright (C) 2003 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu

# This file was written by Michael Snyder (msnyder@@redhat.com)

if $tracelevel then {
	strace $tracelevel
}

if ![istarget "h8300*-*-*"] {
    verbose "Tests ignored for all but h8300s based targets."
    return
}

set prms_id 0
set bug_id 0

set testfile "t06_ari2"
set srcfile ${srcdir}/${subdir}/${testfile}.s
set objfile ${objdir}/${subdir}/${testfile}.o
set binfile ${objdir}/${subdir}/${testfile}.x

set asm-flags "";
set link-flags "-m h8300sxelf";


if {[target_assemble $srcfile $objfile "${asm-flags}"] != ""} then {
     gdb_suppress_entire_file "Testcase assembly failed, so all tests in this file will automatically fail."
}

if {[target_link $objfile $binfile "${link-flags}"] != ""} then {
     gdb_suppress_entire_file "Testcase link failed, so all tests in this file will automatically fail."
}

gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load $binfile

gdb_test "x /i _start" "addx(.b|)\t#0x12(:8|),r1h" \
	"addx.b #0x12:8,r1h"
gdb_test "x" "addx(.b|)\t#0x12(:8|),@@er1" \
	"addx.b #0x12:8,@@er1"
gdb_test "x" "addx(.b|)\t#0x12(:8|),@@er1-" \
	"addx.b #0x12:8,@@er1-"
gdb_test "x" "addx(.b|)\tr3h,r1h" \
	"addx.b r3h,r1h"
gdb_test "x" "addx(.b|)\tr3h,@@er1" \
	"addx.b r3h,@@er1"
gdb_test "x" "addx(.b|)\tr3h,@@er1-" \
	"addx.b r3h,@@er1-"
gdb_test "x" "addx(.b|)\t@@er3,r1h" \
	"addx.b @@er3,r1h"
gdb_test "x" "addx(.b|)\t@@er3,@@er1" \
	"addx.b @@er3,@@er1"
gdb_test "x" "addx(.b|)\t@@er3-,r1h" \
	"addx.b @@er3-,r1h"
gdb_test "x" "addx(.b|)\t@@er3-,@@er1-" \
	"addx.b @@er3-,@@er1-"
gdb_test "x" "addx.w\t#0x1234(:16|),r1" \
	"addx.w #0x1234:16,r1"
gdb_test "x" "addx.w\t#0x1234(:16|),@@er1" \
	"addx.w #0x1234:16,@@er1"
gdb_test "x" "addx.w\t#0x1234(:16|),@@er1-" \
	"addx.w #0x1234:16,@@er1-"
gdb_test "x" "addx.w\tr3,r1" \
	"addx.w r3,r1"
gdb_test "x" "addx.w\tr3,@@er1" \
	"addx.w r3,@@er1"
gdb_test "x" "addx.w\tr3,@@er1-" \
	"addx.w r3,@@er1-"
gdb_test "x" "addx.w\t@@er3,r1" \
	"addx.w @@er3,r1"
gdb_test "x" "addx.w\t@@er3,@@er1" \
	"addx.w @@er3,@@er1"
gdb_test "x" "addx.w\t@@er3-,r1" \
	"addx.w @@er3-,r1"
gdb_test "x" "addx.w\t@@er3-,@@er1-" \
	"addx.w @@er3-,@@er1-"
gdb_test "x" "addx.l\t#0x12345678(:32|),er1" \
	"addx.l #0x12345678:32,er1"
gdb_test "x" "addx.l\t#0x12345678(:32|),@@er1" \
	"addx.l #0x12345678:32,@@er1"
gdb_test "x" "addx.l\t#0x12345678(:32|),@@er1-" \
	"addx.l #0x12345678:32,@@er1-"
gdb_test "x" "addx.l\ter3,er1" \
	"addx.l er3,er1"
gdb_test "x" "addx.l\ter3,@@er1" \
	"addx.l er3,@@er1"
gdb_test "x" "addx.l\ter3,@@er1-" \
	"addx.l er3,@@er1-"
gdb_test "x" "addx.l\t@@er3,er1" \
	"addx.l @@er3,er1"
gdb_test "x" "addx.l\t@@er3,@@er1" \
	"addx.l @@er3,@@er1"
gdb_test "x" "addx.l\t@@er3-,er1" \
	"addx.l @@er3-,er1"
gdb_test "x" "addx.l\t@@er3-,@@er1-" \
	"addx.l @@er3-,@@er1-"
gdb_test "x" "subx(.b|)\t#0x12(:8|),r1h" \
	"subx.b #0x12:8,r1h"
gdb_test "x" "subx(.b|)\t#0x12(:8|),@@er1" \
	"subx.b #0x12:8,@@er1"
gdb_test "x" "subx(.b|)\t#0x12(:8|),@@er1-" \
	"subx.b #0x12:8,@@er1-"
gdb_test "x" "subx(.b|)\tr3h,r1h" \
	"subx.b r3h,r1h"
gdb_test "x" "subx(.b|)\tr3h,@@er1" \
	"subx.b r3h,@@er1"
gdb_test "x" "subx(.b|)\tr3h,@@er1-" \
	"subx.b r3h,@@er1-"
gdb_test "x" "subx(.b|)\t@@er3,r1h" \
	"subx.b @@er3,r1h"
gdb_test "x" "subx(.b|)\t@@er3,@@er1" \
	"subx.b @@er3,@@er1"
gdb_test "x" "subx(.b|)\t@@er3-,r1h" \
	"subx.b @@er3-,r1h"
gdb_test "x" "subx(.b|)\t@@er3-,@@er1-" \
	"subx.b @@er3-,@@er1-"
gdb_test "x" "subx.w\t#0x1234(:16|),r1" \
	"subx.w #0x1234:16,r1"
gdb_test "x" "subx.w\t#0x1234(:16|),@@er1" \
	"subx.w #0x1234:16,@@er1"
gdb_test "x" "subx.w\t#0x1234(:16|),@@er1-" \
	"subx.w #0x1234:16,@@er1-"
gdb_test "x" "subx.w\tr3,r1" \
	"subx.w r3,r1"
gdb_test "x" "subx.w\tr3,@@er1" \
	"subx.w r3,@@er1"
gdb_test "x" "subx.w\tr3,@@er1-" \
	"subx.w r3,@@er1-"
gdb_test "x" "subx.w\t@@er3,r1" \
	"subx.w @@er3,r1"
gdb_test "x" "subx.w\t@@er3,@@er1" \
	"subx.w @@er3,@@er1"
gdb_test "x" "subx.w\t@@er3-,r1" \
	"subx.w @@er3-,r1"
gdb_test "x" "subx.w\t@@er3-,@@er1-" \
	"subx.w @@er3-,@@er1-"
gdb_test "x" "subx.l\t#0x12345678(:32|),er1" \
	"subx.l #0x12345678:32,er1"
gdb_test "x" "subx.l\t#0x12345678(:32|),@@er1" \
	"subx.l #0x12345678:32,@@er1"
gdb_test "x" "subx.l\t#0x12345678(:32|),@@er1-" \
	"subx.l #0x12345678:32,@@er1-"
gdb_test "x" "subx.l\ter3,er1" \
	"subx.l er3,er1"
gdb_test "x" "subx.l\ter3,@@er1" \
	"subx.l er3,@@er1"
gdb_test "x" "subx.l\ter3,@@er1-" \
	"subx.l er3,@@er1-"
gdb_test "x" "subx.l\t@@er3,er1" \
	"subx.l @@er3,er1"
gdb_test "x" "subx.l\t@@er3,@@er1" \
	"subx.l @@er3,@@er1"
gdb_test "x" "subx.l\t@@er3-,er1" \
	"subx.l @@er3-,er1"
gdb_test "x" "subx.l\t@@er3-,@@er1-" \
	"subx.l @@er3-,@@er1-"
gdb_test "x" "inc(.b|)\tr1h" \
	"inc.b r1h"
gdb_test "x" "inc(.w|)\t#1,r1" \
	"inc.w #1,r1"
gdb_test "x" "inc(.w|)\t#2,r1" \
	"inc.w #2,r1"
gdb_test "x" "inc(.l|)\t#1,er1" \
	"inc.l #1,er1"
gdb_test "x" "inc(.l|)\t#2,er1" \
	"inc.l #2,er1"
gdb_test "x" "dec(.b|)\tr1h" \
	"dec.b r1h"
gdb_test "x" "dec(.w|)\t#1,r1" \
	"dec.w #1,r1"
gdb_test "x" "dec(.w|)\t#2,r1" \
	"dec.w #2,r1"
gdb_test "x" "dec(.l|)\t#1,er1" \
	"dec.l #1,er1"
gdb_test "x" "dec(.l|)\t#2,er1" \
	"dec.l #2,er1"
gdb_test "x" "adds(.l|)\t#1,er1" \
	"adds.l #1,er1"
gdb_test "x" "adds(.l|)\t#2,er1" \
	"adds.l #2,er1"
gdb_test "x" "adds(.l|)\t#4,er1" \
	"adds.l #4,er1"
gdb_test "x" "subs(.l|)\t#1,er1" \
	"subs.l #1,er1"
gdb_test "x" "subs(.l|)\t#2,er1" \
	"subs.l #2,er1"
gdb_test "x" "subs(.l|)\t#4,er1" \
	"subs.l #4,er1"
gdb_test "x" "daa(.b|)\tr1h" \
	"daa.b r1h"
gdb_test "x" "das(.b|)\tr1h" \
	"das.b r1h"
gdb_test "x" "mulxu.b\t#0xf(:4|),r1" \
	"mulxu.b #0xf:4,r1"
gdb_test "x" "mulxu.b\tr3h,r1" \
	"mulxu.b r3h,r1"
gdb_test "x" "mulxu.w\t#0xf(:4|),er1" \
	"mulxu.w #0xf:4,er1"
gdb_test "x" "mulxu.w\tr3,er1" \
	"mulxu.w r3,er1"
gdb_test "x" "divxu.b\t#0xf(:4|),r1" \
	"divxu.b #0xf:4,r1"
gdb_test "x" "divxu.b\tr3h,r1" \
	"divxu.b r3h,r1"
gdb_test "x" "divxu.w\t#0xf(:4|),er1" \
	"divxu.w #0xf:4,er1"
gdb_test "x" "divxu.w\tr3,er1" \
	"divxu.w r3,er1"
gdb_test "x" "mulxs.b\t#0xf(:4|),r1" \
	"mulxs.b #0xf:4,r1"
gdb_test "x" "mulxs.b\tr3h,r1" \
	"mulxs.b r3h,r1"
gdb_test "x" "mulxs.w\t#0xf(:4|),er1" \
	"mulxs.w #0xf:4,er1"
gdb_test "x" "mulxs.w\tr3,er1" \
	"mulxs.w r3,er1"
gdb_test "x" "divxs.b\t#0xf(:4|),r1" \
	"divxs.b #0xf:4,r1"
gdb_test "x" "divxs.b\tr3h,r1" \
	"divxs.b r3h,r1"
gdb_test "x" "divxs.w\t#0xf(:4|),er1" \
	"divxs.w #0xf:4,er1"
gdb_test "x" "divxs.w\tr3,er1" \
	"divxs.w r3,er1"
gdb_test "x" "mulu.w\t#0xf(:4|),r1" \
	"mulu.w #0xf:4,r1"
gdb_test "x" "mulu.w\tr3,r1" \
	"mulu.w r3,r1"
gdb_test "x" "mulu.l\t#0xf(:4|),er1" \
	"mulu.l #0xf:4,er1"
gdb_test "x" "mulu.l\ter3,er1" \
	"mulu.l er3,er1"
gdb_test "x" "mulu/u.l\t#0xf(:4|),er1" \
	"mulu/u.l #0xf:4,er1"
gdb_test "x" "mulu/u.l\ter3,er1" \
	"mulu/u.l er3,er1"
gdb_test "x" "muls.w\t#0xf(:4|),r1" \
	"muls.w #0xf:4,r1"
gdb_test "x" "muls.w\tr3,r1" \
	"muls.w r3,r1"
gdb_test "x" "muls.l\t#0xf(:4|),er1" \
	"muls.l #0xf:4,er1"
gdb_test "x" "muls.l\ter3,er1" \
	"muls.l er3,er1"
gdb_test "x" "muls/u.l\t#0xf(:4|),er1" \
	"muls/u.l #0xf:4,er1"
gdb_test "x" "muls/u.l\ter3,er1" \
	"muls/u.l er3,er1"
gdb_test "x" "divu.w\t#0xf(:4|),r1" \
	"divu.w #0xf:4,r1"
gdb_test "x" "divu.w\tr3,r1" \
	"divu.w r3,r1"
gdb_test "x" "divu.l\t#0xf(:4|),er1" \
	"divu.l #0xf:4,er1"
gdb_test "x" "divu.l\ter3,er1" \
	"divu.l er3,er1"
gdb_test "x" "divs.w\t#0xf(:4|),r1" \
	"divs.w #0xf:4,r1"
gdb_test "x" "divs.w\tr3,r1" \
	"divs.w r3,r1"
gdb_test "x" "divs.l\t#0xf(:4|),er1" \
	"divs.l #0xf:4,er1"
gdb_test "x" "divs.l\ter3,er1" \
	"divs.l er3,er1"
@


1.1.1.1
log
@GDB 6.1 (excluding .info files)
@
text
@@
