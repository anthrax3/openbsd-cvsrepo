head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.52
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.50
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.46
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.48
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.40
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.44
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.42
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.38
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.36
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.34
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.32
	OPENBSD_5_0:1.1.1.1.0.30
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.28
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.26
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.22
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.24
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.20
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.18
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.16
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.14
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.12
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.10
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.8
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.6
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.4
	OPENBSD_3_7_BASE:1.1.1.1
	GDB_6_3:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.2
	OPENBSD_3_6_BASE:1.1.1.1
	GDB_6_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2004.05.21.19.16.22;	author kettenis;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.05.21.19.16.22;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* Tests for single stepping through various branch conditions */

int noscramble(int a)
{
  return a ;
}

int echo(int a)
{ return noscramble(a) ; }

int equaltest(int a,int b)
{ int retval ;
  if (a == b)
    retval = noscramble(1) ;
  else retval = noscramble(0) ;
  return retval ;
}

int neqtest(int a , int b)
{ int retval ;
  if (a != b)
    retval = echo(1) ;
  else retval = echo(2) ;
  return retval ;
}
int zerotest(int a )
{ int retval ;
  a = echo(a) ;
  if (a ==0)
    retval = echo(1) ;
  else
    retval = echo(0) ;
  retval = echo(retval) ;
  return retval ;
}

int zerotest2(int a)
{
  return (a==0) ;
}

int nonzerotest(int a)
{
  int retval ;
  if (a != 0)
    retval = echo(0) ;
  else retval = echo(1) ;
  return retval ;
}

int whiletest(int a)
{
  while (a > 0)
    {
      a-- ;
    }
  return 0 ;
}
int whiletest2(int a)
{
  while (a > 0)
    {
      a = noscramble(a) ;
      a-- ;
    }
  return a ;
}

int decr(int x) { return x - 1  ; }

int while3(int a)
{
  int b = a ;
  while (a == b)
    {
      a = echo(a) ;
      b = decr(b) ;
    }
  return a ;
}

void done (int x) { } 

int main()
{
  int a,b,c,d ;
  done(1) ;
  a = echo(123456) ;
  b = echo(123456) ;
  c = echo(56789) ;
  d = echo(0) ;
#if 1
  equaltest(a,b) ;
  done(7) ;
  equaltest(a,c) ;
  done(8) ;
  whiletest(3) ;  /* worked */
  done(3) ;
  while3(3) ;
  done(6) ;
#endif  
  neqtest(a,b) ; 
  neqtest(a,b) ; 
  neqtest(a,c) ; 
  zerotest(d) ;
  zerotest(a) ;
  done(5) ;
  nonzerotest(d) ;
  done(4) ;
  nonzerotest(a) ;
  done(111) ;
  return 1 ;
}
@


1.1.1.1
log
@GDB 6.1 (excluding .info files)
@
text
@@
