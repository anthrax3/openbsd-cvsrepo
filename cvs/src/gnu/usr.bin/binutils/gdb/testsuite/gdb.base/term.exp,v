head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.56
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.54
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.50
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.46
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.48
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.40
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.44
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.42
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.38
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.36
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.34
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.32
	OPENBSD_5_0:1.3.0.30
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.28
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.26
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.22
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.24
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.20
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.18
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.16
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.14
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.12
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.10
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.8
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	GDB_6_3:1.1.1.1
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	GDB_6_1:1.1.1.1
	FSF:1.1.1
	OPENBSD_3_5:1.2.0.32
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.30
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	new-binutils:1.2.0.14
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	CYGNUS-961112:1.1.2.1
	CYGNUS:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2004.05.21.20.23.40;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	96.11.23.03.50.29;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.11.19.14.35.55;	author niklas;	state dead;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2004.05.21.19.17.05;	author kettenis;	state Exp;
branches;
next	;

1.1.2.1
date	96.11.19.14.35.55;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Resolve conflicts for GDB 6.1.  Add local patches.
ok deraadt@@
@
text
@#   Copyright 1988, 1990, 1991, 1992, 1994, 1995, 1996, 1997, 1999
#   Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu

# This file was written by Rob Savoye. (rob@@cygnus.com)

if $tracelevel then {
    strace $tracelevel
}

# Don't try this for remote targets.
if [is_remote target] then {
    continue
}

gdb_start

#
# test running programs
#
set prms_id 0
set bug_id 0

set testfile "run"
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
     gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
}

gdb_exit
gdb_start
delete_breakpoints
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

gdb_test "set print sevenbit-strings" "" "test set print sevenbit-strings"
gdb_test "set print address off" "" "test set print address off"
gdb_test "set width 0" "" "test set width 0"
gdb_test "info terminal" "No saved terminal information.*" "test info terminal"
gdb_run_cmd 5
gdb_expect {
    -re ".*120.*Program exited normally.*$gdb_prompt $" {
	gdb_test "info terminal" "No saved terminal information.*" "test info terminal #2"
    }
    default {
	fail "term.exp, factorial didn't run to completion for info terminal"
    }
}

# In mid-execution
gdb_breakpoint main
gdb_run_cmd 5
gdb_expect {
    -re ".*Breakpoint \[0-9\]+,.*main.*if .argc != 2.*$gdb_prompt $" {
	gdb_test "info terminal" "Inferior's terminal status .currently saved by GDB.:.*" "info terminal at breakpoint"
    }
    -re ".*$gdb_prompt $"	{ fail "info terminal at breakpoint" }
    timeout		{ fail "(timeout) info terminal at breakpoint" }
}
@


1.2
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d1 2
a2 1
#   Copyright (C) 1988, 1990, 1991, 1992 Free Software Foundation, Inc.
d16 1
a16 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d27 2
a28 2
# This only works for native, I think.
if ![isnative] then {
d32 2
d43 2
a44 3
if  { [compile "${srcdir}/${subdir}/${srcfile} -g -o ${binfile}"] != "" } {
    perror "Couldn't compile ${srcfile}"
    return -1
d47 2
d53 12
a64 25
send "set print sevenbit-strings\n" ; expect -re "$prompt $"
send "set print address off\n" ; expect -re "$prompt $"
send "set width 0\n" ; expect -re "$prompt $"

# Test that GDB correctly identifies that it does not control a terminal.
send "info terminal\n"
expect {
    -re "No saved terminal information..*$prompt $"\
	{ send "run 5\n"
	    expect {
		-re "Starting program.*$binfile.*120.*Program exited normally..*$prompt $"\
		    { send "info terminal\n"
			expect {
			    -re "No saved terminal information..*$prompt $"\
				{ pass "info terminal" }
			    -re ".*$prompt $"	{ fail "info terminal" }
			    timeout		{ fail "(timeout) info terminal" }
			}
		    }
		-re ".*$prompt $"	{ fail "info terminal" }
		timeout		{ fail "(timeout) info terminal" }
	    }
	}
    -re ".*$prompt $"	{ fail "info terminal" }
    timeout		{ fail "(timeout) info terminal" }
a66 1

d68 7
a74 19
send "break main\n"
expect {
    -re "Breakpoint.* file .*, line.*$prompt $"\
	{ send "run 5\n"
	    expect {
		-re "Starting program.*Breakpoint \[0-9\]+,.*main.*if .argc != 2.*$prompt $"\
		    { send "info terminal\n"
			expect {
			    -re "Inferior's terminal status .currently saved by GDB.:.*$prompt $"\
				{ pass "info terminal at breakpoint" }
			    -re ".*$prompt $"	{ fail "info terminal at breakpoint" }
			    timeout			{ fail "(timeout) info terminal at breakpoint" }
			}
		    }
		-re ".*$prompt $"	{ fail "info terminal at breakpoint" }
		timeout			{ fail "(timeout) info terminal at breakpoint" }
	    }
	}
    -re ".*$prompt $"	{ fail "info terminal at breakpoint" }
a76 2


@


1.1
log
@file term.exp was initially added on branch CYGNUS.
@
text
@d1 100
@


1.1.1.1
log
@GDB 6.1 (excluding .info files)
@
text
@a0 76
#   Copyright 1988, 1990, 1991, 1992, 1994, 1995, 1996, 1997, 1999
#   Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu

# This file was written by Rob Savoye. (rob@@cygnus.com)

if $tracelevel then {
    strace $tracelevel
}

# Don't try this for remote targets.
if [is_remote target] then {
    continue
}

gdb_start

#
# test running programs
#
set prms_id 0
set bug_id 0

set testfile "run"
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
     gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
}

gdb_exit
gdb_start
delete_breakpoints
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

gdb_test "set print sevenbit-strings" "" "test set print sevenbit-strings"
gdb_test "set print address off" "" "test set print address off"
gdb_test "set width 0" "" "test set width 0"
gdb_test "info terminal" "No saved terminal information.*" "test info terminal"
gdb_run_cmd 5
gdb_expect {
    -re ".*120.*Program exited normally.*$gdb_prompt $" {
	gdb_test "info terminal" "No saved terminal information.*" "test info terminal #2"
    }
    default {
	fail "term.exp, factorial didn't run to completion for info terminal"
    }
}

# In mid-execution
gdb_breakpoint main
gdb_run_cmd 5
gdb_expect {
    -re ".*Breakpoint \[0-9\]+,.*main.*if .argc != 2.*$gdb_prompt $" {
	gdb_test "info terminal" "Inferior's terminal status .currently saved by GDB.:.*" "info terminal at breakpoint"
    }
    -re ".*$gdb_prompt $"	{ fail "info terminal at breakpoint" }
    timeout		{ fail "(timeout) info terminal at breakpoint" }
}
@


1.1.2.1
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a0 100
#   Copyright (C) 1988, 1990, 1991, 1992 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu

# This file was written by Rob Savoye. (rob@@cygnus.com)

if $tracelevel then {
    strace $tracelevel
}

# This only works for native, I think.
if ![isnative] then {
    continue
}

#
# test running programs
#
set prms_id 0
set bug_id 0

set testfile "run"
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}
if  { [compile "${srcdir}/${subdir}/${srcfile} -g -o ${binfile}"] != "" } {
    perror "Couldn't compile ${srcfile}"
    return -1
}

delete_breakpoints
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

send "set print sevenbit-strings\n" ; expect -re "$prompt $"
send "set print address off\n" ; expect -re "$prompt $"
send "set width 0\n" ; expect -re "$prompt $"

# Test that GDB correctly identifies that it does not control a terminal.
send "info terminal\n"
expect {
    -re "No saved terminal information..*$prompt $"\
	{ send "run 5\n"
	    expect {
		-re "Starting program.*$binfile.*120.*Program exited normally..*$prompt $"\
		    { send "info terminal\n"
			expect {
			    -re "No saved terminal information..*$prompt $"\
				{ pass "info terminal" }
			    -re ".*$prompt $"	{ fail "info terminal" }
			    timeout		{ fail "(timeout) info terminal" }
			}
		    }
		-re ".*$prompt $"	{ fail "info terminal" }
		timeout		{ fail "(timeout) info terminal" }
	    }
	}
    -re ".*$prompt $"	{ fail "info terminal" }
    timeout		{ fail "(timeout) info terminal" }
}


# In mid-execution
send "break main\n"
expect {
    -re "Breakpoint.* file .*, line.*$prompt $"\
	{ send "run 5\n"
	    expect {
		-re "Starting program.*Breakpoint \[0-9\]+,.*main.*if .argc != 2.*$prompt $"\
		    { send "info terminal\n"
			expect {
			    -re "Inferior's terminal status .currently saved by GDB.:.*$prompt $"\
				{ pass "info terminal at breakpoint" }
			    -re ".*$prompt $"	{ fail "info terminal at breakpoint" }
			    timeout			{ fail "(timeout) info terminal at breakpoint" }
			}
		    }
		-re ".*$prompt $"	{ fail "info terminal at breakpoint" }
		timeout			{ fail "(timeout) info terminal at breakpoint" }
	    }
	}
    -re ".*$prompt $"	{ fail "info terminal at breakpoint" }
    timeout		{ fail "(timeout) info terminal at breakpoint" }
}


@
