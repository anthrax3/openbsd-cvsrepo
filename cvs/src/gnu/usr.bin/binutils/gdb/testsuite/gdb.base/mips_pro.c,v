head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.52
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.50
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.46
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.48
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.40
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.44
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.42
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.38
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.36
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.34
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.32
	OPENBSD_5_0:1.3.0.30
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.28
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.26
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.22
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.24
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.20
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.18
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.16
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.14
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.12
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.10
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.8
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	GDB_6_3:1.1.1.1
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	GDB_6_1:1.1.1.1
	FSF:1.1.1
	OPENBSD_3_5:1.2.0.32
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.30
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	new-binutils:1.2.0.14
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	CYGNUS-961112:1.1.2.1
	CYGNUS:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2004.05.21.20.23.39;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	96.11.23.03.50.07;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.11.19.14.35.23;	author niklas;	state dead;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2004.05.21.19.16.46;	author kettenis;	state Exp;
branches;
next	;

1.1.2.1
date	96.11.19.14.35.24;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Resolve conflicts for GDB 6.1.  Add local patches.
ok deraadt@@
@
text
@/* Tests regarding examination of prologues.  */

#ifdef PROTOTYPES
int
inner (int z)
#else
int
inner (z)
     int z;
#endif
{
  return 2 * z;
}

#ifdef PROTOTYPES
int
middle (int x)
#else
int
middle (x)
     int x;
#endif
{
  if (x == 0)
    return inner (5);
  else
    return inner (6);
}

#ifdef PROTOTYPES
int
top (int y)
#else
int
top (y)
     int y;
#endif
{
  return middle (y + 1);
}

#ifdef PROTOTYPES
int
main (int argc, char **argv)
#else
int
main (argc, argv)
     int argc;
     char **argv;
#endif
{
#ifdef usestubs
  set_debug_traps();
  breakpoint();
#endif
  return top (-1) + top (1);
}
@


1.2
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d3 4
d10 1
d15 4
d22 1
d30 4
d37 1
d42 4
d48 3
d52 4
@


1.1
log
@file mips_pro.c was initially added on branch CYGNUS.
@
text
@d1 31
@


1.1.1.1
log
@GDB 6.1 (excluding .info files)
@
text
@a0 57
/* Tests regarding examination of prologues.  */

#ifdef PROTOTYPES
int
inner (int z)
#else
int
inner (z)
     int z;
#endif
{
  return 2 * z;
}

#ifdef PROTOTYPES
int
middle (int x)
#else
int
middle (x)
     int x;
#endif
{
  if (x == 0)
    return inner (5);
  else
    return inner (6);
}

#ifdef PROTOTYPES
int
top (int y)
#else
int
top (y)
     int y;
#endif
{
  return middle (y + 1);
}

#ifdef PROTOTYPES
int
main (int argc, char **argv)
#else
int
main (argc, argv)
     int argc;
     char **argv;
#endif
{
#ifdef usestubs
  set_debug_traps();
  breakpoint();
#endif
  return top (-1) + top (1);
}
@


1.1.2.1
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a0 31
/* Tests regarding examination of prologues.  */

int
inner (z)
     int z;
{
  return 2 * z;
}

int
middle (x)
     int x;
{
  if (x == 0)
    return inner (5);
  else
    return inner (6);
}

int
top (y)
     int y;
{
  return middle (y + 1);
}

int
main (argc, argv)
{
  return top (-1) + top (1);
}
@
