head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.48
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.44
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.46
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.38
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.42
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.40
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.36
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.34
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.32
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.30
	OPENBSD_5_0:1.4.0.28
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.26
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.24
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.20
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.22
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.18
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.16
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.14
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.12
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.10
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.8
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.6
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	GDB_6_3:1.1.1.2
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	GDB_6_1:1.1.1.1
	FSF:1.1.1
	OPENBSD_3_5:1.2.0.32
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.30
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	new-binutils:1.2.0.14
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	CYGNUS-961112:1.1.2.1
	CYGNUS:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2004.12.27.14.00.52;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.21.20.23.29;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	96.11.23.03.45.50;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.11.19.14.29.22;	author niklas;	state dead;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2004.05.21.19.15.37;	author kettenis;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.27.13.14.02;	author kettenis;	state Exp;
branches;
next	;

1.1.2.1
date	96.11.19.14.29.22;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Resolve conflicts for GDB 6.3.  Add local patches.
ok deraadt@@
@
text
@dnl Autoconf configure script for GDB server.
dnl Copyright 2000, 2002, 2003, 2004 Free Software Foundation, Inc.
dnl
dnl This file is part of GDB.
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

dnl Process this file with autoconf to produce a configure script.

AC_INIT(server.c)
AC_CONFIG_HEADER(config.h:config.in)

AC_PROG_CC

AC_CANONICAL_SYSTEM

AC_PROG_INSTALL

AC_HEADER_STDC

AC_CHECK_HEADERS(sgtty.h termio.h termios.h sys/reg.h string.h dnl
		 proc_service.h sys/procfs.h thread_db.h linux/elf.h dnl
		 stdlib.h unistd.h)

BFD_NEED_DECLARATION(strerror)

. ${srcdir}/configure.srv

if test "${srv_linux_usrregs}" = "yes"; then
  AC_DEFINE(HAVE_LINUX_USRREGS)
fi

if test "${srv_linux_regsets}" = "yes"; then
  AC_MSG_CHECKING(for PTRACE_GETREGS)
  AC_CACHE_VAL(gdbsrv_cv_have_ptrace_getregs,
  [AC_TRY_COMPILE([#include <sys/ptrace.h>],
		  [PTRACE_GETREGS;],
		  [gdbsrv_cv_have_ptrace_getregs=yes],
		  [gdbsrv_cv_have_ptrace_getregs=no])])
  AC_MSG_RESULT($gdbsrv_cv_have_ptrace_getregs)
  if test "${gdbsrv_cv_have_ptrace_getregs}" = "yes"; then
    AC_DEFINE(HAVE_LINUX_REGSETS)
  fi

  AC_MSG_CHECKING(for PTRACE_GETFPXREGS)
  AC_CACHE_VAL(gdbsrv_cv_have_ptrace_getfpxregs,
  [AC_TRY_COMPILE([#include <sys/ptrace.h>],
		  [PTRACE_GETFPXREGS;],
		  [gdbsrv_cv_have_ptrace_getfpxregs=yes],
		  [gdbsrv_cv_have_ptrace_getfpxregs=no])])
  AC_MSG_RESULT($gdbsrv_cv_have_ptrace_getfpxregs)
  if test "${gdbsrv_cv_have_ptrace_getfpxregs}" = "yes"; then
    AC_DEFINE(HAVE_PTRACE_GETFPXREGS)
  fi
fi

if test "$ac_cv_header_sys_procfs_h" = yes; then
  BFD_HAVE_SYS_PROCFS_TYPE(lwpid_t)
  BFD_HAVE_SYS_PROCFS_TYPE(psaddr_t)
  BFD_HAVE_SYS_PROCFS_TYPE(prgregset_t)
  BFD_HAVE_SYS_PROCFS_TYPE(prfpregset_t)

  dnl Check for broken prfpregset_t type

  dnl For Linux/i386, glibc 2.1.3 was released with a bogus
  dnl prfpregset_t type (it's a typedef for the pointer to a struct
  dnl instead of the struct itself).  We detect this here, and work
  dnl around it in gdb_proc_service.h.

  if test $bfd_cv_have_sys_procfs_type_prfpregset_t = yes; then
    AC_MSG_CHECKING(whether prfpregset_t type is broken)
    AC_CACHE_VAL(gdb_cv_prfpregset_t_broken,
      [AC_TRY_RUN([#include <sys/procfs.h>
       int main ()
       {
         if (sizeof (prfpregset_t) == sizeof (void *))
           return 1;
         return 0;
       }],
       gdb_cv_prfpregset_t_broken=no,
       gdb_cv_prfpregset_t_broken=yes,
       gdb_cv_prfpregset_t_broken=yes)])
    AC_MSG_RESULT($gdb_cv_prfpregset_t_broken)
    if test $gdb_cv_prfpregset_t_broken = yes; then
      AC_DEFINE(PRFPREGSET_T_BROKEN)
    fi
  fi

  BFD_HAVE_SYS_PROCFS_TYPE(elf_fpregset_t)
fi

srv_thread_depfiles=
srv_libs=
USE_THREAD_DB=

if test "$srv_linux_thread_db" = "yes"; then
  SRV_CHECK_THREAD_DB
  if test "$srv_cv_thread_db" = no; then
    AC_WARN([Could not find libthread_db.])
    AC_WARN([Disabling thread support in gdbserver.])
    srv_linux_thread_db=no
  else
    srv_libs="$srv_cv_thread_db"
  fi
  old_LDFLAGS="$LDFLAGS"
  LDFLAGS="$LDFLAGS -rdynamic"
  AC_TRY_LINK([], [], [RDYNAMIC=-rdynamic], [RDYNAMIC=])
  AC_SUBST(RDYNAMIC)
  LDFLAGS="$old_LDFLAGS"
fi

if test "$srv_linux_thread_db" = "yes"; then
  srv_thread_depfiles="thread-db.o proc-service.o"
  USE_THREAD_DB="-DUSE_THREAD_DB"
fi

GDBSERVER_DEPFILES="$srv_regobj $srv_tgtobj $srv_thread_depfiles"
GDBSERVER_LIBS="$srv_libs"

AC_SUBST(GDBSERVER_DEPFILES)
AC_SUBST(GDBSERVER_LIBS)
AC_SUBST(USE_THREAD_DB)

AC_OUTPUT(Makefile,
[case x$CONFIG_HEADERS in
xconfig.h:config.in)
echo > stamp-h ;;
esac
])
@


1.3
log
@Resolve conflicts for GDB 6.1.  Add local patches.
ok deraadt@@
@
text
@d2 1
a2 1
dnl Copyright 2000, 2002 Free Software Foundation, Inc.
d117 5
@


1.2
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@d1 134
a134 142
srcname="Remote GDB server"
srctrigger=server.c
gdb_serial_driver=../ser-unix.c

# per-host:

# per-target:

# Hack alert!  We want this directory to be configured only for the target,
# which is where it will be running, so we just eliminate the per-host section,
# and make the per-target stuff setup host & host_cpu according to the target.

host_cpu=$target_cpu
host=$target

# Map host cpu into the config cpu subdirectory name.
# The default is $host_cpu.

case "${host_cpu}" in

c[12])			gdb_host_cpu=convex ;;
hppa*)			gdb_host_cpu=pa ;;
i[3456]86)		gdb_host_cpu=i386 ;;
m68*)			gdb_host_cpu=m68k ;;
np1)			gdb_host_cpu=gould ;;
pyramid)		gdb_host_cpu=pyr ;;
*)			gdb_host_cpu=$target_cpu ;;

esac

# map host info into gdb names.

case "${host}" in

a29k-*-*)		gdb_host=ultra3 ;;

arm-*-*)		gdb_host=arm ;;

c[12]-*-*)		gdb_host=convex ;;

hppa*-hp-bsd*)		gdb_host=hppabsd ;;
hppa*-hp-hpux*)		gdb_host=hppahpux ;;

i[3456]86-ncr-*)	gdb_host=ncr3000 ;;
i[3456]86-sequent-*)	gdb_host=symmetry ;;

i[3456]86-*-bsd*)	gdb_host=i386bsd ;;
i[3456]86-*-lynxos*)	gdb_host=i386lynx ;;
i[3456]86-*-go32)	gdb_host=go32
			gdb_serial_driver=ser-go32.c
			;;
i[3456]86-*-linux*)	gdb_host=linux ;;
i[3456]86-pc-linux-gnu)	gdb_host=linux ;;
i[3456]86-*-mach)	gdb_host=i386mach ;;
i[3456]86-*-sco3.2v4*)	gdb_host=i386sco4 ;;
i[3456]86-*-sco*)	gdb_host=i386sco ;;
i[3456]86-*-solaris*)	gdb_host=i386sol2 ;;
i[3456]86-*-sunos*)	gdb_host=sun386 ;;
i[3456]86-*-sysv3.2)	gdb_host=i386v32 ;;
i[3456]86-*-sysv4*)	gdb_host=i386v4 ;;
i[3456]86-*-sysv*)	gdb_host=i386v ;;

m680[01]0-sun-sunos3*)	gdb_host=sun2os3 ;;
m680[01]0-sun-sunos4*)	gdb_host=sun2os4 ;;
m68030-sony-*)		gdb_host=news1000 ;;

m68*-altos-*)		gdb_host=altos ;;
m68*-apollo*-sysv*)	gdb_host=apollo68v ;;
m68*-apollo*-bsd*)	gdb_host=apollo68b ;;
m68*-att-*)		gdb_host=3b1 ;;
m68*-cbm-sysv4*)	gdb_host=amix ;;
m68*-hp-bsd*)		gdb_host=hp300bsd ;;
m68*-hp-hpux*)		gdb_host=hp300hpux ;;
m68*-isi-*)		gdb_host=isi ;;
m68*-*-lynxos*)		gdb_host=m68klynx ;;
m68*-sony-*)		gdb_host=news ;;
m68*-sun-sunos3*)	gdb_host=sun3os3 ;;
m68*-sun-sunos4*)	gdb_host=sun3os4 ;;
m68*-sun-*)		gdb_host=sun3os4 ;;

m88k-motorola-*)	gdb_host=delta88 ;;
m88k-*-*)		gdb_host=m88k ;;

mips-dec-*)		gdb_host=decstation ;;
mips-little-*)		gdb_host=littlemips ;;
mips-sgi-irix3)		gdb_host=irix3 ;;
mips-sgi-irix4*)	gdb_host=irix4 ;;
mips-sony-*)		gdb_host=bigmips ;;

none-*-*)		gdb_host=none ;;

np1-*-*)		gdb_host=np1 ;;

ns32k-umax-*)		gdb_host=umax ;;
ns32k-utek-sysv)	gdb_host=merlin ;;

pn-*-*)			gdb_host=pn ;;

pyramid-*-*)		gdb_host=pyramid ;;

romp-*-*)		gdb_host=rtbsd ;;

rs6000-*-*)		gdb_host=rs6000 ;;

sparc-*-lynxos*)	gdb_host=sparclynx ;;
sparc-*-solaris2*)	gdb_host=sun4sol2 ;;
sparc-*-sunos4*)	gdb_host=sun4os4 ;;
sparc-*-*)		gdb_host=sun4os4 ;;

tahoe-*-*)		gdb_host=tahoe ;;

vax-*-bsd*)		gdb_host=vaxbsd ;;
vax-*-ultrix2*)		gdb_host=vaxult2 ;;
vax-*-ultrix*)		gdb_host=vaxult ;;

esac

if [ ! -f ${srcdir}/../config/${gdb_host_cpu}/${gdb_host}.mh ]; then
	echo '***' "GDB remote does not support host ${host}" 1>&2
	exit 1
fi

#  We really shouldn't depend on there being a space after XM_FILE= ...
hostfile=`awk '$1 == "XM_FILE=" { print $2 }' <${srcdir}/../config/${gdb_host_cpu}/${gdb_host}.mh`

# per-target:

# Map target cpu into the config cpu subdirectory name.
# The default is $target_cpu.

case "${target_cpu}" in

c[12])			gdb_target_cpu=convex ;;
hppa*)			gdb_target_cpu=pa ;;
i[3456]86)		gdb_target_cpu=i386 ;;
m68*)			gdb_target_cpu=m68k ;;
np1)			gdb_target_cpu=gould ;;
pn)			gdb_target_cpu=gould ;;
pyramid)		gdb_target_cpu=pyr ;;
sparc*)			gdb_target_cpu=sparc ;;
*)			gdb_target_cpu=$target_cpu ;;

d136 1
a136 193

# map target info into gdb names.

case "${target}" in

a29k-*-aout)		gdb_target=a29k ;;
a29k-*-coff)		gdb_target=a29k ;;
a29k-*-elf)		gdb_target=a29k ;;
a29k-*-ebmon)		gdb_target=a29k ;;
a29k-*-kern)		gdb_target=a29k-kern ;;
a29k-*-none)		gdb_target=a29k ;;
a29k-*-sym1)		gdb_target=ultra3 ;;
a29k-*-udi)		gdb_target=a29k-udi ;;

arm-*-*)		gdb_target=arm ;;

c1-*-*)			gdb_target=convex ;;
c2-*-*)			gdb_target=convex ;;

h8300-*-*)		gdb_target=h8300hms ;;
h8500-*-*)		gdb_target=h8500hms ;;

sh-*-*)			gdb_target=sh ;;

hppa*-*-bsd*)		gdb_target=hppabsd ;;
hppa*-*-hpux*)		gdb_target=hppahpux ;;

i[3456]86-sequent-*)	gdb_target=symmetry ;;
i[3456]86-ncr-*)	gdb_target=ncr3000 ;;

i[3456]86-*-aout)	gdb_target=i386aout ;;
i[3456]86-*-coff)	gdb_target=i386v ;;
i[3456]86-*-elf)	gdb_target=i386v ;;

i[3456]86-*-bsd*)	gdb_target=i386bsd ;;
i[3456]86-*-lynxos*)	gdb_target=i386lynx ;;
i[3456]86-*-go32)	gdb_target=i386aout ;;
i[3456]86-*-solaris*)	gdb_target=i386sol2 ;;
i[3456]86-*-sunos*)	gdb_target=sun386 ;;
i[3456]86-*-sysv4*)	gdb_target=i386v4 ;;
i[3456]86-*-sco*)	gdb_target=i386v ;;
i[3456]86-*-sysv*)	gdb_target=i386v ;;
i[3456]86-*-linux*)	gdb_target=linux ;;

i960-*-bout)		gdb_target=vxworks960 ;;
i960-*-coff)		gdb_target=nindy960 ;;
i960-*-elf)		gdb_target=nindy960 ;;

i960-*-nindy)		gdb_target=nindy960 ;;
i960-*-vxworks)		gdb_target=vxworks960 ;;

m68000-*-aout)		gdb_target=m68k-nofp ;;
m68000-*-coff)		gdb_target=m68k-nofp ;;
m68000-*-elf)		gdb_target=m68k-nofp ;;
m68000-*-sunos3*)	gdb_target=sun2os3 ;;
m68000-*-sunos4*)	gdb_target=sun2os4 ;;

m68*-cbm-sysv4*)	gdb_target=amix ;;
m68*-hp-bsd*)		gdb_target=hp300bsd ;;
m68*-hp-hpux*)		gdb_target=hp300hpux ;;

m68*-altos-*)		gdb_target=altos ;;
m68*-att-*)		gdb_target=3b1 ;;
m68*-ericsson-*)	gdb_target=es1800 ;;
m68*-isi-*)		gdb_target=isi ;;
m68*-netx-*)		gdb_target=vxworks68 ;;
m68*-sony-*)		gdb_target=news ;;
m68*-tandem-*)		gdb_target=st2000 ;;

m68*-*-aout)		gdb_target=m68k-fp ;;
m68*-*-coff)		gdb_target=m68k-fp ;;
m68*-*-elf)		gdb_target=m68k-fp ;;
m68*-*-lynxos*)		gdb_target=m68klynx ;;
m68*-*-os68k)		gdb_target=os68k ;;
m68*-*-sunos3*)		gdb_target=sun3os3 ;;
m68*-*-sunos4*)		gdb_target=sun3os4 ;;
m68*-*-vxworks*)	gdb_target=vxworks68 ;;

m88k-motorola-*)	gdb_target=delta88 ;;
m88k-*-*)		gdb_target=m88k ;;

mips-big-*)		gdb_target=bigmips ;;
mips-dec-*)		gdb_target=decstation ;;
mips-idt-ecoff)		gdb_target=idt ;;
mips-little-*)		gdb_target=littlemips ;;
mips-sgi-*)		gdb_target=irix3 ;;
mips-sony-*)		gdb_target=bigmips ;;

none-*-*)		gdb_target=none ;;

np1-*-*)		gdb_target=np1 ;;

ns32k-utek-sysv)	gdb_target=merlin ;;
ns32k-utek-*)		gdb_target=umax ;;

pn-*-*)			gdb_target=pn ;;

pyramid-*-*)		gdb_target=pyramid ;;

rs6000-*-*)		gdb_target=rs6000 ;;

sparc-*-aout)		gdb_target=sparc-em ;;
sparc-*-coff)		gdb_target=sparc-em ;;
sparc-*-elf)		gdb_target=sparc-em ;;
sparc-*-lynxos*)	gdb_target=sparclynx ;;
sparc-*-solaris2*)	gdb_target=sun4sol2 ;;
sparc-*-sunos4*)	gdb_target=sun4os4 ;;
sparc-*-vxworks*)	gdb_target=sparc-em ;;
sparc-*-*)		gdb_target=sun4os4 ;;
sparclite*-*-*)		gdb_target=sparclite ;;

tahoe-*-*)		gdb_target=tahoe ;;
vax-*-*)		gdb_target=vax ;;

z8k-*-sim)		gdb_target=z8ksim ;;
esac

if [ ! -f ${srcdir}/../config/${gdb_target_cpu}/${gdb_target}.mt ]; then
	echo '***' "GDB remote does not support target ${target}" 1>&2
	exit 1
fi

if [ -z "${removing}" ] ; then
	cat ${srcdir}/../config/${gdb_host_cpu}/${gdb_host}.mh ${srcdir}/../config/${gdb_target_cpu}/${gdb_target}.mt | awk '$1 == "#msg" {
		print substr($0,6)}'
fi

#  We really shouldn't depend on there being a space after TM_FILE= ...
targetfile=`awk '$1 == "TM_FILE=" { print $2 }' <${srcdir}/../config/${gdb_target_cpu}/${gdb_target}.mt`

if [ "${target}" = "${host}" ] ; then
	nativefile=`awk '$1 == "NAT_FILE=" { print $2 }' <${srcdir}/../config/${gdb_host_cpu}/${gdb_host}.mh`
fi

host_makefile_frag=../config/${gdb_host_cpu}/${gdb_host}.mh
target_makefile_frag=../config/${gdb_target_cpu}/${gdb_target}.mt

# If hostfile (XM_FILE) and/or targetfile (TM_FILE) and/or nativefile
# (NAT_FILE) is not set in the ?config/* file, we don't make the
# corresponding links.  But we have to remove the xm.h files and tm.h
# files anyway, e.g. when switching from "configure host" to
# "configure none".

files=
links=
rm -f xm.h
rm -f ser-hardwire.c
if [ "${hostfile}" != "" ]; then
	if [ -f ${srcdir}/../config/${hostfile} ]; then
		files="${files} ../config/${hostfile}"
	else
		files="${files} ../config/${gdb_host_cpu}/${hostfile}"
	fi
	links="${links} xm.h"

#	files="${files} ${gdb_serial_driver}"
#	links="${links} ser-hardwire.c"
fi
rm -f tm.h
if [ "${targetfile}" != "" ]; then
	if [ -f ${srcdir}/../config/${targetfile} ]; then
		files="${files} ../config/${targetfile}"
	else
		files="${files} ../config/${gdb_target_cpu}/${targetfile}"
	fi
	links="${links} tm.h"
fi
rm -f nm.h
if [ "${nativefile}" != "" ]; then
	if [ -f ${srcdir}/../config/${nativefile} ]; then
		files="${files} ../config/${nativefile}"
	else
		files="${files} ../config/${gdb_host_cpu}/${nativefile}"
	fi
	links="${links} nm.h"
# temporary scaffolding until all hosts have the host/target/native
# split in place.
else
	files="${files} ../config/nm-trash.h"
	links="${links} nm.h"
fi

if [ ${target_cpu} = "sparclite" ]; then
	configdirs="${configdirs} sparclite"
fi

# post-target:

if [ "${nativefile}" = "" ] ; then
	sed -e '/^NATDEPFILES= /s//# NATDEPFILES= /' \
		< Makefile > Makefile.tem
	mv -f Makefile.tem Makefile
fi
@


1.1
log
@file configure.in was initially added on branch CYGNUS.
@
text
@d1 336
@


1.1.1.1
log
@GDB 6.1 (excluding .info files)
@
text
@a0 136
dnl Autoconf configure script for GDB server.
dnl Copyright 2000, 2002 Free Software Foundation, Inc.
dnl
dnl This file is part of GDB.
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

dnl Process this file with autoconf to produce a configure script.

AC_INIT(server.c)
AC_CONFIG_HEADER(config.h:config.in)

AC_PROG_CC

AC_CANONICAL_SYSTEM

AC_PROG_INSTALL

AC_HEADER_STDC

AC_CHECK_HEADERS(sgtty.h termio.h termios.h sys/reg.h string.h dnl
		 proc_service.h sys/procfs.h thread_db.h linux/elf.h dnl
		 stdlib.h unistd.h)

BFD_NEED_DECLARATION(strerror)

. ${srcdir}/configure.srv

if test "${srv_linux_usrregs}" = "yes"; then
  AC_DEFINE(HAVE_LINUX_USRREGS)
fi

if test "${srv_linux_regsets}" = "yes"; then
  AC_MSG_CHECKING(for PTRACE_GETREGS)
  AC_CACHE_VAL(gdbsrv_cv_have_ptrace_getregs,
  [AC_TRY_COMPILE([#include <sys/ptrace.h>],
		  [PTRACE_GETREGS;],
		  [gdbsrv_cv_have_ptrace_getregs=yes],
		  [gdbsrv_cv_have_ptrace_getregs=no])])
  AC_MSG_RESULT($gdbsrv_cv_have_ptrace_getregs)
  if test "${gdbsrv_cv_have_ptrace_getregs}" = "yes"; then
    AC_DEFINE(HAVE_LINUX_REGSETS)
  fi

  AC_MSG_CHECKING(for PTRACE_GETFPXREGS)
  AC_CACHE_VAL(gdbsrv_cv_have_ptrace_getfpxregs,
  [AC_TRY_COMPILE([#include <sys/ptrace.h>],
		  [PTRACE_GETFPXREGS;],
		  [gdbsrv_cv_have_ptrace_getfpxregs=yes],
		  [gdbsrv_cv_have_ptrace_getfpxregs=no])])
  AC_MSG_RESULT($gdbsrv_cv_have_ptrace_getfpxregs)
  if test "${gdbsrv_cv_have_ptrace_getfpxregs}" = "yes"; then
    AC_DEFINE(HAVE_PTRACE_GETFPXREGS)
  fi
fi

if test "$ac_cv_header_sys_procfs_h" = yes; then
  BFD_HAVE_SYS_PROCFS_TYPE(lwpid_t)
  BFD_HAVE_SYS_PROCFS_TYPE(psaddr_t)
  BFD_HAVE_SYS_PROCFS_TYPE(prgregset_t)
  BFD_HAVE_SYS_PROCFS_TYPE(prfpregset_t)

  dnl Check for broken prfpregset_t type

  dnl For Linux/i386, glibc 2.1.3 was released with a bogus
  dnl prfpregset_t type (it's a typedef for the pointer to a struct
  dnl instead of the struct itself).  We detect this here, and work
  dnl around it in gdb_proc_service.h.

  if test $bfd_cv_have_sys_procfs_type_prfpregset_t = yes; then
    AC_MSG_CHECKING(whether prfpregset_t type is broken)
    AC_CACHE_VAL(gdb_cv_prfpregset_t_broken,
      [AC_TRY_RUN([#include <sys/procfs.h>
       int main ()
       {
         if (sizeof (prfpregset_t) == sizeof (void *))
           return 1;
         return 0;
       }],
       gdb_cv_prfpregset_t_broken=no,
       gdb_cv_prfpregset_t_broken=yes,
       gdb_cv_prfpregset_t_broken=yes)])
    AC_MSG_RESULT($gdb_cv_prfpregset_t_broken)
    if test $gdb_cv_prfpregset_t_broken = yes; then
      AC_DEFINE(PRFPREGSET_T_BROKEN)
    fi
  fi

  BFD_HAVE_SYS_PROCFS_TYPE(elf_fpregset_t)
fi

srv_thread_depfiles=
srv_libs=
USE_THREAD_DB=

if test "$srv_linux_thread_db" = "yes"; then
  SRV_CHECK_THREAD_DB
  if test "$srv_cv_thread_db" = no; then
    AC_WARN([Could not find libthread_db.])
    AC_WARN([Disabling thread support in gdbserver.])
    srv_linux_thread_db=no
  else
    srv_libs="$srv_cv_thread_db"
  fi
fi

if test "$srv_linux_thread_db" = "yes"; then
  srv_thread_depfiles="thread-db.o proc-service.o"
  USE_THREAD_DB="-DUSE_THREAD_DB"
fi

GDBSERVER_DEPFILES="$srv_regobj $srv_tgtobj $srv_thread_depfiles"
GDBSERVER_LIBS="$srv_libs"

AC_SUBST(GDBSERVER_DEPFILES)
AC_SUBST(GDBSERVER_LIBS)
AC_SUBST(USE_THREAD_DB)

AC_OUTPUT(Makefile,
[case x$CONFIG_HEADERS in
xconfig.h:config.in)
echo > stamp-h ;;
esac
])
@


1.1.1.2
log
@GDB 6.3 (excluding .info files)
@
text
@d2 1
a2 1
dnl Copyright 2000, 2002, 2003, 2004 Free Software Foundation, Inc.
a116 5
  old_LDFLAGS="$LDFLAGS"
  LDFLAGS="$LDFLAGS -rdynamic"
  AC_TRY_LINK([], [], [RDYNAMIC=-rdynamic], [RDYNAMIC=])
  AC_SUBST(RDYNAMIC)
  LDFLAGS="$old_LDFLAGS"
@


1.1.2.1
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a0 336
srcname="Remote GDB server"
srctrigger=server.c
gdb_serial_driver=../ser-unix.c

# per-host:

# per-target:

# Hack alert!  We want this directory to be configured only for the target,
# which is where it will be running, so we just eliminate the per-host section,
# and make the per-target stuff setup host & host_cpu according to the target.

host_cpu=$target_cpu
host=$target

# Map host cpu into the config cpu subdirectory name.
# The default is $host_cpu.

case "${host_cpu}" in

c[12])			gdb_host_cpu=convex ;;
hppa*)			gdb_host_cpu=pa ;;
i[3456]86)		gdb_host_cpu=i386 ;;
m68*)			gdb_host_cpu=m68k ;;
np1)			gdb_host_cpu=gould ;;
pyramid)		gdb_host_cpu=pyr ;;
*)			gdb_host_cpu=$target_cpu ;;

esac

# map host info into gdb names.

case "${host}" in

a29k-*-*)		gdb_host=ultra3 ;;

arm-*-*)		gdb_host=arm ;;

c[12]-*-*)		gdb_host=convex ;;

hppa*-hp-bsd*)		gdb_host=hppabsd ;;
hppa*-hp-hpux*)		gdb_host=hppahpux ;;

i[3456]86-ncr-*)	gdb_host=ncr3000 ;;
i[3456]86-sequent-*)	gdb_host=symmetry ;;

i[3456]86-*-bsd*)	gdb_host=i386bsd ;;
i[3456]86-*-lynxos*)	gdb_host=i386lynx ;;
i[3456]86-*-go32)	gdb_host=go32
			gdb_serial_driver=ser-go32.c
			;;
i[3456]86-*-linux*)	gdb_host=linux ;;
i[3456]86-pc-linux-gnu)	gdb_host=linux ;;
i[3456]86-*-mach)	gdb_host=i386mach ;;
i[3456]86-*-sco3.2v4*)	gdb_host=i386sco4 ;;
i[3456]86-*-sco*)	gdb_host=i386sco ;;
i[3456]86-*-solaris*)	gdb_host=i386sol2 ;;
i[3456]86-*-sunos*)	gdb_host=sun386 ;;
i[3456]86-*-sysv3.2)	gdb_host=i386v32 ;;
i[3456]86-*-sysv4*)	gdb_host=i386v4 ;;
i[3456]86-*-sysv*)	gdb_host=i386v ;;

m680[01]0-sun-sunos3*)	gdb_host=sun2os3 ;;
m680[01]0-sun-sunos4*)	gdb_host=sun2os4 ;;
m68030-sony-*)		gdb_host=news1000 ;;

m68*-altos-*)		gdb_host=altos ;;
m68*-apollo*-sysv*)	gdb_host=apollo68v ;;
m68*-apollo*-bsd*)	gdb_host=apollo68b ;;
m68*-att-*)		gdb_host=3b1 ;;
m68*-cbm-sysv4*)	gdb_host=amix ;;
m68*-hp-bsd*)		gdb_host=hp300bsd ;;
m68*-hp-hpux*)		gdb_host=hp300hpux ;;
m68*-isi-*)		gdb_host=isi ;;
m68*-*-lynxos*)		gdb_host=m68klynx ;;
m68*-sony-*)		gdb_host=news ;;
m68*-sun-sunos3*)	gdb_host=sun3os3 ;;
m68*-sun-sunos4*)	gdb_host=sun3os4 ;;
m68*-sun-*)		gdb_host=sun3os4 ;;

m88k-motorola-*)	gdb_host=delta88 ;;
m88k-*-*)		gdb_host=m88k ;;

mips-dec-*)		gdb_host=decstation ;;
mips-little-*)		gdb_host=littlemips ;;
mips-sgi-irix3)		gdb_host=irix3 ;;
mips-sgi-irix4*)	gdb_host=irix4 ;;
mips-sony-*)		gdb_host=bigmips ;;

none-*-*)		gdb_host=none ;;

np1-*-*)		gdb_host=np1 ;;

ns32k-umax-*)		gdb_host=umax ;;
ns32k-utek-sysv)	gdb_host=merlin ;;

pn-*-*)			gdb_host=pn ;;

pyramid-*-*)		gdb_host=pyramid ;;

romp-*-*)		gdb_host=rtbsd ;;

rs6000-*-*)		gdb_host=rs6000 ;;

sparc-*-lynxos*)	gdb_host=sparclynx ;;
sparc-*-solaris2*)	gdb_host=sun4sol2 ;;
sparc-*-sunos4*)	gdb_host=sun4os4 ;;
sparc-*-*)		gdb_host=sun4os4 ;;

tahoe-*-*)		gdb_host=tahoe ;;

vax-*-bsd*)		gdb_host=vaxbsd ;;
vax-*-ultrix2*)		gdb_host=vaxult2 ;;
vax-*-ultrix*)		gdb_host=vaxult ;;

esac

if [ ! -f ${srcdir}/../config/${gdb_host_cpu}/${gdb_host}.mh ]; then
	echo '***' "GDB remote does not support host ${host}" 1>&2
	exit 1
fi

#  We really shouldn't depend on there being a space after XM_FILE= ...
hostfile=`awk '$1 == "XM_FILE=" { print $2 }' <${srcdir}/../config/${gdb_host_cpu}/${gdb_host}.mh`

# per-target:

# Map target cpu into the config cpu subdirectory name.
# The default is $target_cpu.

case "${target_cpu}" in

c[12])			gdb_target_cpu=convex ;;
hppa*)			gdb_target_cpu=pa ;;
i[3456]86)		gdb_target_cpu=i386 ;;
m68*)			gdb_target_cpu=m68k ;;
np1)			gdb_target_cpu=gould ;;
pn)			gdb_target_cpu=gould ;;
pyramid)		gdb_target_cpu=pyr ;;
sparc*)			gdb_target_cpu=sparc ;;
*)			gdb_target_cpu=$target_cpu ;;

esac

# map target info into gdb names.

case "${target}" in

a29k-*-aout)		gdb_target=a29k ;;
a29k-*-coff)		gdb_target=a29k ;;
a29k-*-elf)		gdb_target=a29k ;;
a29k-*-ebmon)		gdb_target=a29k ;;
a29k-*-kern)		gdb_target=a29k-kern ;;
a29k-*-none)		gdb_target=a29k ;;
a29k-*-sym1)		gdb_target=ultra3 ;;
a29k-*-udi)		gdb_target=a29k-udi ;;

arm-*-*)		gdb_target=arm ;;

c1-*-*)			gdb_target=convex ;;
c2-*-*)			gdb_target=convex ;;

h8300-*-*)		gdb_target=h8300hms ;;
h8500-*-*)		gdb_target=h8500hms ;;

sh-*-*)			gdb_target=sh ;;

hppa*-*-bsd*)		gdb_target=hppabsd ;;
hppa*-*-hpux*)		gdb_target=hppahpux ;;

i[3456]86-sequent-*)	gdb_target=symmetry ;;
i[3456]86-ncr-*)	gdb_target=ncr3000 ;;

i[3456]86-*-aout)	gdb_target=i386aout ;;
i[3456]86-*-coff)	gdb_target=i386v ;;
i[3456]86-*-elf)	gdb_target=i386v ;;

i[3456]86-*-bsd*)	gdb_target=i386bsd ;;
i[3456]86-*-lynxos*)	gdb_target=i386lynx ;;
i[3456]86-*-go32)	gdb_target=i386aout ;;
i[3456]86-*-solaris*)	gdb_target=i386sol2 ;;
i[3456]86-*-sunos*)	gdb_target=sun386 ;;
i[3456]86-*-sysv4*)	gdb_target=i386v4 ;;
i[3456]86-*-sco*)	gdb_target=i386v ;;
i[3456]86-*-sysv*)	gdb_target=i386v ;;
i[3456]86-*-linux*)	gdb_target=linux ;;

i960-*-bout)		gdb_target=vxworks960 ;;
i960-*-coff)		gdb_target=nindy960 ;;
i960-*-elf)		gdb_target=nindy960 ;;

i960-*-nindy)		gdb_target=nindy960 ;;
i960-*-vxworks)		gdb_target=vxworks960 ;;

m68000-*-aout)		gdb_target=m68k-nofp ;;
m68000-*-coff)		gdb_target=m68k-nofp ;;
m68000-*-elf)		gdb_target=m68k-nofp ;;
m68000-*-sunos3*)	gdb_target=sun2os3 ;;
m68000-*-sunos4*)	gdb_target=sun2os4 ;;

m68*-cbm-sysv4*)	gdb_target=amix ;;
m68*-hp-bsd*)		gdb_target=hp300bsd ;;
m68*-hp-hpux*)		gdb_target=hp300hpux ;;

m68*-altos-*)		gdb_target=altos ;;
m68*-att-*)		gdb_target=3b1 ;;
m68*-ericsson-*)	gdb_target=es1800 ;;
m68*-isi-*)		gdb_target=isi ;;
m68*-netx-*)		gdb_target=vxworks68 ;;
m68*-sony-*)		gdb_target=news ;;
m68*-tandem-*)		gdb_target=st2000 ;;

m68*-*-aout)		gdb_target=m68k-fp ;;
m68*-*-coff)		gdb_target=m68k-fp ;;
m68*-*-elf)		gdb_target=m68k-fp ;;
m68*-*-lynxos*)		gdb_target=m68klynx ;;
m68*-*-os68k)		gdb_target=os68k ;;
m68*-*-sunos3*)		gdb_target=sun3os3 ;;
m68*-*-sunos4*)		gdb_target=sun3os4 ;;
m68*-*-vxworks*)	gdb_target=vxworks68 ;;

m88k-motorola-*)	gdb_target=delta88 ;;
m88k-*-*)		gdb_target=m88k ;;

mips-big-*)		gdb_target=bigmips ;;
mips-dec-*)		gdb_target=decstation ;;
mips-idt-ecoff)		gdb_target=idt ;;
mips-little-*)		gdb_target=littlemips ;;
mips-sgi-*)		gdb_target=irix3 ;;
mips-sony-*)		gdb_target=bigmips ;;

none-*-*)		gdb_target=none ;;

np1-*-*)		gdb_target=np1 ;;

ns32k-utek-sysv)	gdb_target=merlin ;;
ns32k-utek-*)		gdb_target=umax ;;

pn-*-*)			gdb_target=pn ;;

pyramid-*-*)		gdb_target=pyramid ;;

rs6000-*-*)		gdb_target=rs6000 ;;

sparc-*-aout)		gdb_target=sparc-em ;;
sparc-*-coff)		gdb_target=sparc-em ;;
sparc-*-elf)		gdb_target=sparc-em ;;
sparc-*-lynxos*)	gdb_target=sparclynx ;;
sparc-*-solaris2*)	gdb_target=sun4sol2 ;;
sparc-*-sunos4*)	gdb_target=sun4os4 ;;
sparc-*-vxworks*)	gdb_target=sparc-em ;;
sparc-*-*)		gdb_target=sun4os4 ;;
sparclite*-*-*)		gdb_target=sparclite ;;

tahoe-*-*)		gdb_target=tahoe ;;
vax-*-*)		gdb_target=vax ;;

z8k-*-sim)		gdb_target=z8ksim ;;
esac

if [ ! -f ${srcdir}/../config/${gdb_target_cpu}/${gdb_target}.mt ]; then
	echo '***' "GDB remote does not support target ${target}" 1>&2
	exit 1
fi

if [ -z "${removing}" ] ; then
	cat ${srcdir}/../config/${gdb_host_cpu}/${gdb_host}.mh ${srcdir}/../config/${gdb_target_cpu}/${gdb_target}.mt | awk '$1 == "#msg" {
		print substr($0,6)}'
fi

#  We really shouldn't depend on there being a space after TM_FILE= ...
targetfile=`awk '$1 == "TM_FILE=" { print $2 }' <${srcdir}/../config/${gdb_target_cpu}/${gdb_target}.mt`

if [ "${target}" = "${host}" ] ; then
	nativefile=`awk '$1 == "NAT_FILE=" { print $2 }' <${srcdir}/../config/${gdb_host_cpu}/${gdb_host}.mh`
fi

host_makefile_frag=../config/${gdb_host_cpu}/${gdb_host}.mh
target_makefile_frag=../config/${gdb_target_cpu}/${gdb_target}.mt

# If hostfile (XM_FILE) and/or targetfile (TM_FILE) and/or nativefile
# (NAT_FILE) is not set in the ?config/* file, we don't make the
# corresponding links.  But we have to remove the xm.h files and tm.h
# files anyway, e.g. when switching from "configure host" to
# "configure none".

files=
links=
rm -f xm.h
rm -f ser-hardwire.c
if [ "${hostfile}" != "" ]; then
	if [ -f ${srcdir}/../config/${hostfile} ]; then
		files="${files} ../config/${hostfile}"
	else
		files="${files} ../config/${gdb_host_cpu}/${hostfile}"
	fi
	links="${links} xm.h"

#	files="${files} ${gdb_serial_driver}"
#	links="${links} ser-hardwire.c"
fi
rm -f tm.h
if [ "${targetfile}" != "" ]; then
	if [ -f ${srcdir}/../config/${targetfile} ]; then
		files="${files} ../config/${targetfile}"
	else
		files="${files} ../config/${gdb_target_cpu}/${targetfile}"
	fi
	links="${links} tm.h"
fi
rm -f nm.h
if [ "${nativefile}" != "" ]; then
	if [ -f ${srcdir}/../config/${nativefile} ]; then
		files="${files} ../config/${nativefile}"
	else
		files="${files} ../config/${gdb_host_cpu}/${nativefile}"
	fi
	links="${links} nm.h"
# temporary scaffolding until all hosts have the host/target/native
# split in place.
else
	files="${files} ../config/nm-trash.h"
	links="${links} nm.h"
fi

if [ ${target_cpu} = "sparclite" ]; then
	configdirs="${configdirs} sparclite"
fi

# post-target:

if [ "${nativefile}" = "" ] ; then
	sed -e '/^NATDEPFILES= /s//# NATDEPFILES= /' \
		< Makefile > Makefile.tem
	mv -f Makefile.tem Makefile
fi
@
