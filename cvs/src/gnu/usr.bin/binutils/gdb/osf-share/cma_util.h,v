head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.82
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.78
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.80
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.72
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.76
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.74
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.70
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.68
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.66
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.64
	OPENBSD_5_0:1.2.0.62
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.60
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.58
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.54
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.56
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.52
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.50
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.48
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.46
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.44
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.42
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.40
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.38
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.36
	OPENBSD_3_7_BASE:1.2
	GDB_6_3:1.1.1.1
	OPENBSD_3_6:1.2.0.34
	OPENBSD_3_6_BASE:1.2
	GDB_6_1:1.1.1.1
	FSF:1.1.1
	OPENBSD_3_5:1.2.0.32
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.30
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	new-binutils:1.2.0.14
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	CYGNUS-961112:1.1.2.1
	CYGNUS:1.1.0.2;
locks; strict;
comment	@ * @;


1.2
date	96.11.23.03.49.04;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.11.19.14.34.01;	author niklas;	state dead;
branches
	1.1.1.1
	1.1.2.1;
next	;

1.1.1.1
date	2004.05.21.19.15.44;	author kettenis;	state Exp;
branches;
next	;

1.1.2.1
date	96.11.19.14.34.01;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@/* 
 * (c) Copyright 1990-1996 OPEN SOFTWARE FOUNDATION, INC.
 * (c) Copyright 1990-1996 HEWLETT-PACKARD COMPANY
 * (c) Copyright 1990-1996 DIGITAL EQUIPMENT CORPORATION
 * (c) Copyright 1991, 1992 Siemens-Nixdorf Information Systems
 * To anyone who acknowledges that this file is provided "AS IS" without
 * any express or implied warranty: permission to use, copy, modify, and
 * distribute this file for any purpose is hereby granted without fee,
 * provided that the above copyright notices and this notice appears in
 * all source code copies, and that none of the names listed above be used
 * in advertising or publicity pertaining to distribution of the software
 * without specific, written prior permission.  None of these organizations
 * makes any representations about the suitability of this software for
 * any purpose.
 */
/*
 *	Header file for CMA internal UTIL operations
 */

#ifndef	CMA_UTIL
#define CMA_UTIL

/*
 *  INCLUDE FILES
 */

#include <cma.h>
#include <cma_attr.h>
#include <cma_defs.h>

#if _CMA_OS_ == _CMA__VMS
# include <cma_rms.h>
#endif

#if _CMA_VENDOR_ == _CMA__SUN
# include <sys/time.h>
#else
# include <time.h>
#endif

#if _CMA_OS_ == _CMA__UNIX
# include <stdio.h>
#endif

/*
 * CONSTANTS AND MACROS
 */

#define cma__c_buffer_size  256		    /* Size of output buffer	    */

/*
 * TYPEDEFS
 */

/* 
 * Alternate eol routine
 */
typedef void (*cma__t_eol_routine) (char *);

#if _CMA_OS_ == _CMA__VMS
 typedef struct CMA__T_VMSFILE {
    struct RAB	rab;
    struct FAB	fab;
    } cma__t_vmsfile, 	*cma__t_file;
#elif  ( _CMA_UNIX_TYPE == _CMA__SVR4 )
 typedef int           cma__t_file;
#else
 typedef FILE		*cma__t_file;
#endif

/*
 *  GLOBAL DATA
 */

/*
 * INTERNAL INTERFACES
 */

extern void cma__abort  (void);

extern cma_t_integer cma__atol  (char *);

extern cma_t_integer cma__atoi  (char *);

extern char * cma__getenv  (char *,char *,int);

extern int cma__gettimespec  (struct timespec *);

extern cma__t_file cma__int_fopen  (char *,char *);

#ifndef NDEBUG
extern void cma__init_trace  (char *_env);
#endif

extern char * cma__memcpy  (char *,char *,cma_t_integer);
	
#ifndef cma__memset
extern char * cma__memset  (char *,cma_t_integer,cma_t_integer);
#endif

extern void cma__putformat  (char *,char *,...);

extern void cma__putstring  (char *,char *);

extern void cma__putint  (char *,cma_t_integer);

extern void cma__putint_5  (char *,cma_t_integer);

extern void cma__putint_10  (char *,cma_t_integer);

extern void cma__puthex  (char *,cma_t_integer);

extern void cma__puthex_8  (char *,cma_t_integer);

extern void cma__puteol  (char *);

extern void cma__set_eol_routine  (cma__t_eol_routine,cma__t_eol_routine *);

extern cma_t_integer cma__strlen  (char *);

extern int cma__strncmp  (char *,char *,cma_t_integer);

extern char *cma__gets (char *,char *);

#endif
@


1.1
log
@file cma_util.h was initially added on branch CYGNUS.
@
text
@d1 125
@


1.1.1.1
log
@GDB 6.1 (excluding .info files)
@
text
@a0 125
/* 
 * (c) Copyright 1990-1996 OPEN SOFTWARE FOUNDATION, INC.
 * (c) Copyright 1990-1996 HEWLETT-PACKARD COMPANY
 * (c) Copyright 1990-1996 DIGITAL EQUIPMENT CORPORATION
 * (c) Copyright 1991, 1992 Siemens-Nixdorf Information Systems
 * To anyone who acknowledges that this file is provided "AS IS" without
 * any express or implied warranty: permission to use, copy, modify, and
 * distribute this file for any purpose is hereby granted without fee,
 * provided that the above copyright notices and this notice appears in
 * all source code copies, and that none of the names listed above be used
 * in advertising or publicity pertaining to distribution of the software
 * without specific, written prior permission.  None of these organizations
 * makes any representations about the suitability of this software for
 * any purpose.
 */
/*
 *	Header file for CMA internal UTIL operations
 */

#ifndef	CMA_UTIL
#define CMA_UTIL

/*
 *  INCLUDE FILES
 */

#include <cma.h>
#include <cma_attr.h>
#include <cma_defs.h>

#if _CMA_OS_ == _CMA__VMS
# include <cma_rms.h>
#endif

#if _CMA_VENDOR_ == _CMA__SUN
# include <sys/time.h>
#else
# include <time.h>
#endif

#if _CMA_OS_ == _CMA__UNIX
# include <stdio.h>
#endif

/*
 * CONSTANTS AND MACROS
 */

#define cma__c_buffer_size  256		    /* Size of output buffer	    */

/*
 * TYPEDEFS
 */

/* 
 * Alternate eol routine
 */
typedef void (*cma__t_eol_routine) (char *);

#if _CMA_OS_ == _CMA__VMS
 typedef struct CMA__T_VMSFILE {
    struct RAB	rab;
    struct FAB	fab;
    } cma__t_vmsfile, 	*cma__t_file;
#elif  ( _CMA_UNIX_TYPE == _CMA__SVR4 )
 typedef int           cma__t_file;
#else
 typedef FILE		*cma__t_file;
#endif

/*
 *  GLOBAL DATA
 */

/*
 * INTERNAL INTERFACES
 */

extern void cma__abort  (void);

extern cma_t_integer cma__atol  (char *);

extern cma_t_integer cma__atoi  (char *);

extern char * cma__getenv  (char *,char *,int);

extern int cma__gettimespec  (struct timespec *);

extern cma__t_file cma__int_fopen  (char *,char *);

#ifndef NDEBUG
extern void cma__init_trace  (char *_env);
#endif

extern char * cma__memcpy  (char *,char *,cma_t_integer);
	
#ifndef cma__memset
extern char * cma__memset  (char *,cma_t_integer,cma_t_integer);
#endif

extern void cma__putformat  (char *,char *,...);

extern void cma__putstring  (char *,char *);

extern void cma__putint  (char *,cma_t_integer);

extern void cma__putint_5  (char *,cma_t_integer);

extern void cma__putint_10  (char *,cma_t_integer);

extern void cma__puthex  (char *,cma_t_integer);

extern void cma__puthex_8  (char *,cma_t_integer);

extern void cma__puteol  (char *);

extern void cma__set_eol_routine  (cma__t_eol_routine,cma__t_eol_routine *);

extern cma_t_integer cma__strlen  (char *);

extern int cma__strncmp  (char *,char *,cma_t_integer);

extern char *cma__gets (char *,char *);

#endif
@


1.1.2.1
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a0 125
/* 
 * (c) Copyright 1990-1996 OPEN SOFTWARE FOUNDATION, INC.
 * (c) Copyright 1990-1996 HEWLETT-PACKARD COMPANY
 * (c) Copyright 1990-1996 DIGITAL EQUIPMENT CORPORATION
 * (c) Copyright 1991, 1992 Siemens-Nixdorf Information Systems
 * To anyone who acknowledges that this file is provided "AS IS" without
 * any express or implied warranty: permission to use, copy, modify, and
 * distribute this file for any purpose is hereby granted without fee,
 * provided that the above copyright notices and this notice appears in
 * all source code copies, and that none of the names listed above be used
 * in advertising or publicity pertaining to distribution of the software
 * without specific, written prior permission.  None of these organizations
 * makes any representations about the suitability of this software for
 * any purpose.
 */
/*
 *	Header file for CMA internal UTIL operations
 */

#ifndef	CMA_UTIL
#define CMA_UTIL

/*
 *  INCLUDE FILES
 */

#include <cma.h>
#include <cma_attr.h>
#include <cma_defs.h>

#if _CMA_OS_ == _CMA__VMS
# include <cma_rms.h>
#endif

#if _CMA_VENDOR_ == _CMA__SUN
# include <sys/time.h>
#else
# include <time.h>
#endif

#if _CMA_OS_ == _CMA__UNIX
# include <stdio.h>
#endif

/*
 * CONSTANTS AND MACROS
 */

#define cma__c_buffer_size  256		    /* Size of output buffer	    */

/*
 * TYPEDEFS
 */

/* 
 * Alternate eol routine
 */
typedef void (*cma__t_eol_routine) (char *);

#if _CMA_OS_ == _CMA__VMS
 typedef struct CMA__T_VMSFILE {
    struct RAB	rab;
    struct FAB	fab;
    } cma__t_vmsfile, 	*cma__t_file;
#elif  ( _CMA_UNIX_TYPE == _CMA__SVR4 )
 typedef int           cma__t_file;
#else
 typedef FILE		*cma__t_file;
#endif

/*
 *  GLOBAL DATA
 */

/*
 * INTERNAL INTERFACES
 */

extern void cma__abort  (void);

extern cma_t_integer cma__atol  (char *);

extern cma_t_integer cma__atoi  (char *);

extern char * cma__getenv  (char *,char *,int);

extern int cma__gettimespec  (struct timespec *);

extern cma__t_file cma__int_fopen  (char *,char *);

#ifndef NDEBUG
extern void cma__init_trace  (char *_env);
#endif

extern char * cma__memcpy  (char *,char *,cma_t_integer);
	
#ifndef cma__memset
extern char * cma__memset  (char *,cma_t_integer,cma_t_integer);
#endif

extern void cma__putformat  (char *,char *,...);

extern void cma__putstring  (char *,char *);

extern void cma__putint  (char *,cma_t_integer);

extern void cma__putint_5  (char *,cma_t_integer);

extern void cma__putint_10  (char *,cma_t_integer);

extern void cma__puthex  (char *,cma_t_integer);

extern void cma__puthex_8  (char *,cma_t_integer);

extern void cma__puteol  (char *);

extern void cma__set_eol_routine  (cma__t_eol_routine,cma__t_eol_routine *);

extern cma_t_integer cma__strlen  (char *);

extern int cma__strncmp  (char *,char *,cma_t_integer);

extern char *cma__gets (char *,char *);

#endif
@
