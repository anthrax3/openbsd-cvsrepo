head	1.3;
access;
symbols
	CYGNUS-961112:1.1.2.1
	CYGNUS:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	96.11.23.16.35.13;	author niklas;	state dead;
branches;
next	1.2;

1.2
date	96.11.23.04.03.51;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.11.19.14.53.39;	author niklas;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.11.19.14.53.39;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove accidentally committed dirs from the trunk
@
text
@# Minimal top-level Makefile.  Just pass everything to the unix subdir.
# Tom Tromey <tromey@@cygnus.com>

VPATH = @@srcdir@@
SHELL = /bin/sh
srcdir = @@srcdir@@

@@SET_MAKE@@

all install:
	@@cd unix && $(MAKE) $@@

# Nothing for these yet.
installcheck install-info info:

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@@cd unix && $(MAKE) `echo $@@ | sed 's/-recursive//'`

# Don't depend on configure.in, because we can't ensure that the user
# has autoconf.
configure:
	cd $(srcdir) ; autoconf

mostlyclean: mostlyclean-recursive

clean: clean-recursive

distclean-local:
	rm -f Makefile config.status config.cache config.log

distclean: distclean-recursive distclean-local

maintainer-clean: distclean-local maintainer-clean-recursive

Makefile: Makefile.in config.status
	CONFIG_FILES=Makefile CONFIG_HEADERS= $(SHELL) ./config.status

config.status: configure
	$(SHELL) config.status --recheck

#----------------------------------------------------------------
# These let the DejaGnu test suite run when DejaGnu isn't 
# installed yet, so run it from the srcdir and objdir.
#----------------------------------------------------------------
EXPECT = ` \
  if [ -f $${rootme}/../expect/expect ] ; then \
    echo $${rootme}/../expect/expect ; \
  else echo expect ; fi`

RUNTESTFLAGS =
RUNTEST = ` \
  if [ -f $(srcdir)/../dejagnu/runtest ] ; then \
    echo $(srcdir)/../dejagnu/runtest ; \
  else echo runtest ;  fi`

check:
	cd unix && $(MAKE) tktest
	rootme=`pwd`; export rootme; \
	srcdir=${srcdir}; export srcdir ; \
	EXPECT=${EXPECT} ; export EXPECT ; \
	if [ -f $${rootme}/../expect/expect ] ; then  \
	   TCL_LIBRARY=`cd $${srcdir}/../tcl/library && pwd`; \
	   export TCL_LIBRARY; \
	   TK_LIBRARY=`cd $${srcdir}/library && pwd`; \
	   export TK_LIBRARY; \
	fi ; \
	$(RUNTEST) $(RUNTESTFLAGS) --tool tk --srcdir $(srcdir)/testsuite
@


1.2
log
@Merge to Cygnus 961112 + add some support (not ready) for shared libs
@
text
@@


1.1
log
@file Makefile.in was initially added on branch CYGNUS.
@
text
@d1 68
@


1.1.2.1
log
@Import of 961112 Cygnus binutils+gas+ld+gdb+gprof
@
text
@a0 68
# Minimal top-level Makefile.  Just pass everything to the unix subdir.
# Tom Tromey <tromey@@cygnus.com>

VPATH = @@srcdir@@
SHELL = /bin/sh
srcdir = @@srcdir@@

@@SET_MAKE@@

all install:
	@@cd unix && $(MAKE) $@@

# Nothing for these yet.
installcheck install-info info:

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@@cd unix && $(MAKE) `echo $@@ | sed 's/-recursive//'`

# Don't depend on configure.in, because we can't ensure that the user
# has autoconf.
configure:
	cd $(srcdir) ; autoconf

mostlyclean: mostlyclean-recursive

clean: clean-recursive

distclean-local:
	rm -f Makefile config.status config.cache config.log

distclean: distclean-recursive distclean-local

maintainer-clean: distclean-local maintainer-clean-recursive

Makefile: Makefile.in config.status
	CONFIG_FILES=Makefile CONFIG_HEADERS= $(SHELL) ./config.status

config.status: configure
	$(SHELL) config.status --recheck

#----------------------------------------------------------------
# These let the DejaGnu test suite run when DejaGnu isn't 
# installed yet, so run it from the srcdir and objdir.
#----------------------------------------------------------------
EXPECT = ` \
  if [ -f $${rootme}/../expect/expect ] ; then \
    echo $${rootme}/../expect/expect ; \
  else echo expect ; fi`

RUNTESTFLAGS =
RUNTEST = ` \
  if [ -f $(srcdir)/../dejagnu/runtest ] ; then \
    echo $(srcdir)/../dejagnu/runtest ; \
  else echo runtest ;  fi`

check:
	cd unix && $(MAKE) tktest
	rootme=`pwd`; export rootme; \
	srcdir=${srcdir}; export srcdir ; \
	EXPECT=${EXPECT} ; export EXPECT ; \
	if [ -f $${rootme}/../expect/expect ] ; then  \
	   TCL_LIBRARY=`cd $${srcdir}/../tcl/library && pwd`; \
	   export TCL_LIBRARY; \
	   TK_LIBRARY=`cd $${srcdir}/library && pwd`; \
	   export TK_LIBRARY; \
	fi ; \
	$(RUNTEST) $(RUNTESTFLAGS) --tool tk --srcdir $(srcdir)/testsuite
@
