head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.2
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.6.0.50
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.46
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.48
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.40
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.44
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.42
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.38
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.36
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.34
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.32
	OPENBSD_5_0:1.6.0.30
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.28
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.26
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.22
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.24
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.20
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.18
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.16
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.14
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.12
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.10
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.8
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.6
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	READLINE_4_3_PATCH_005:1.1.1.2
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	READLINE_4_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2017.01.21.08.25.30;	author krw;	state Exp;
branches;
next	1.6;
commitid	kfWrwuuXWR7ZRgGm;

1.6
date	2004.05.10.19.36.20;	author kettenis;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.12.04.13.42;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.10.21.40.00;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.08.05.36.50;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.25.16.41.17;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.18.17.32.03;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.03.18.17.32.03;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.05.10.18.48.28;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Nuke whitespace foolish enough to expose itself during the great
"warning:" rectification.
@
text
@/* savestring.c  */

/* Copyright (C) 1998 Free Software Foundation, Inc.

   This file is part of the GNU Readline Library, a library for
   reading lines of text with interactive input and history editing.

   The GNU Readline Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU General Public License
   as published by the Free Software Foundation; either version 2, or
   (at your option) any later version.

   The GNU Readline Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   The GNU General Public License is often shipped with GNU software, and
   is generally kept in a file called COPYING or LICENSE.  If you do not
   have a copy of the license, write to the Free Software Foundation,
   59 Temple Place, Suite 330, Boston, MA 02111 USA. */

#include <config.h>
#include <stdio.h>
#ifdef HAVE_STRING_H
#  include <string.h>
#endif

/* Backwards compatibility, now that savestring has been removed from
   all `public' readline header files. */
char *
savestring (s)
     const char *s;
{
	char * cp;
	cp = strdup(s);
	if (cp == NULL) {
		fprintf (stderr, "savestring: out of virtual memory\n");
		exit (2);
	}
	return(cp);
}
@


1.6
log
@Resolve conflicts for GNU readline 4.3p5.
ok deraadt@@, otto@@, pval@@
@
text
@d38 1
a38 1
		fprintf (stderr, "savestring: out of virtual memory\n"); 
@


1.5
log
@strings in libreadline, again. this time with no abi change,
static builds still seem to work with this. ok deraadt@@ tedu@@
@
text
@d23 1
d25 3
a27 1
#include <string.h>
a30 1

d32 2
a33 1
savestring(char *s) 
a42 1

@


1.4
log
@Back out libreadline changes, this breaks static build (I.E. vax).
changes are nontrivial to fix. Will return when static build works.
@
text
@d23 1
a25 3
extern char *strcpy ();
extern char *xmalloc ();

d28 1
d30 1
a30 2
savestring (s)
     char *s;
d32 7
a38 1
  return ((char *)strcpy (xmalloc (1 + (int)strlen (s)), (s)));
d40 1
@


1.3
log
@strings
ok tedu@@, art@@
@
text
@d25 2
a26 2
extern char * xmalloc();
extern void memory_error_and_abort(char *);
a29 11

char *
xstrdup(char *s) 
{
	char * cp;
	cp = strdup(s);
	if (cp == NULL)
		memory_error_and_abort("savestring");
	return(cp);
}

d34 1
a34 1
	return(xstrdup(s));
@


1.2
log
@bring in prototypes
@
text
@d25 2
a26 2
extern char *strcpy ();
extern char *xmalloc ();
d30 11
d45 1
a45 1
  return ((char *)strcpy (xmalloc (1 + (int)strlen (s)), (s)));
@


1.1
log
@Initial revision
@
text
@d23 2
@


1.1.1.1
log
@GNU readline-4.1
@
text
@@


1.1.1.2
log
@GNU readline 4.3p5
@
text
@d23 2
a24 5
#include <config.h>
#ifdef HAVE_STRING_H
#  include <string.h>
#endif
#include "xmalloc.h"
d30 1
a30 1
     const char *s;
d32 1
a32 1
  return ((char *)strcpy ((char *)xmalloc (1 + strlen (s)), (s)));
@

