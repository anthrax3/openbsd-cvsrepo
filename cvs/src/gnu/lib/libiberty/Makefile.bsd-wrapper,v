head	1.16;
access;
symbols
	OPENBSD_6_1:1.16.0.8
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.14.0.10
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.8
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.4
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.2
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.13.0.8
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.6
	OPENBSD_5_0:1.13.0.4
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.8
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.4
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.2
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.10.0.8
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.6
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.4
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.2
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.9.0.6
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.4
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6;
locks; strict;
comment	@# @;


1.16
date	2016.01.20.12.45.16;	author sthen;	state Exp;
branches;
next	1.15;
commitid	Z28MtGqUn5PsUvhb;

1.15
date	2014.08.31.01.02.48;	author miod;	state Exp;
branches;
next	1.14;
commitid	IdgiD3epFuDgogNd;

1.14
date	2012.08.02.13.38.38;	author okan;	state Exp;
branches;
next	1.13;

1.13
date	2010.09.04.14.39.05;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2009.10.12.22.32.19;	author robert;	state Exp;
branches;
next	1.11;

1.11
date	2008.05.27.18.52.40;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2006.07.12.23.00.07;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2004.09.18.20.55.16;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2004.08.30.22.33.10;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2004.05.17.10.00.37;	author kettenis;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.28.20.11.50;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2003.12.26.04.14.45;	author brad;	state Exp;
branches;
next	1.4;

1.4
date	2003.12.25.18.08.08;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2003.11.25.21.24.30;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.24.16.55.59;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.24.16.53.23;	author espie;	state Exp;
branches;
next	;


desc
@@


1.16
log
@quote ${CC} expansion, from andreas.kahari at icm uu se, ok mpi@@
@
text
@#	$OpenBSD: Makefile.bsd-wrapper,v 1.15 2014/08/31 01:02:48 miod Exp $

LIB=		iberty
CPPFLAGS+=	-DHAVE_CONFIG_H -I$(.CURDIR)/src -I$(.CURDIR)/include -I$(.OBJDIR)

HOST_FILES!=	cat $(.OBJDIR)/needed-list 2>/dev/null||true

.PATH: ${.CURDIR}/src

SRCS=		argv.c choose-temp.c concat.c cplus-dem.c cp-demangle.c \
		cp-demint.c \
		dyn-string.c fdmatch.c fopen_unlocked.c \
		getopt.c getopt1.c getpwd.c getruntime.c \
		hashtab.c hex.c fibheap.c partition.c \
		floatformat.c make-temp-file.c make-relative-prefix.c \
		md5.c objalloc.c obstack.c \
		pex-common.c pex-unix.c pexecute.c \
		regex.c safe-ctype.c spaces.c splay-tree.c \
		strerror.c strsignal.c strverscmp.c \
		xatexit.c xexit.c xmalloc.c xmemdup.c xstrerror.c xstrdup.c \
		physmem.c lbasename.c lrealpath.c unlink-if-ordinary.c \
		$(HOST_FILES)

# XXX -- These files are generated during the PREREQ variable assignment.
CLEANFILES+=	config.h config.status needed-list 

# and more
CLEANFILES+=	Makefile config.cache config.log stamp-h xhost-mkfrag \
		testsuite/Makefile libiberty.info


depend:	needed-list

needed-list: config.status
	${MAKE} ${GNUCFLAGS} CC="${CC}" needed-list

config.status: Makefile.in configure 
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" \
	INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
	MAKEINFO='makeinfo --no-split' \
	/bin/sh ${.CURDIR}/src/configure \
		--prefix=/usr --with-local-prefix=/usr ${CF} \
		&& touch config.status

all:	libiberty.info

libiberty.info:
	makeinfo --no-split -I${.CURDIR}/src ${.CURDIR}/src/libiberty.texi

afterinstall:
	${INSTALL} ${INSTALL_COPY} -o ${DOCOWN} -g ${DOCGRP} -m ${DOCMODE} \
	    libiberty.info $(DESTDIR)/usr/share/info

.include <bsd.lib.mk>
@


1.15
log
@Now that gcc 2.95 is out of the tree, get rid of the old hash table interface
it was the only user of. Bump major.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.14 2012/08/02 13:38:38 okan Exp $
d35 1
a35 1
	${MAKE} ${GNUCFLAGS} CC=${CC} needed-list
@


1.14
log
@remove leftover NOLINT, WANTLINT, LINTFLAGS, LOBJ vars and lint targets.

ok guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.13 2010/09/04 14:39:05 miod Exp $
a9 1
# XXX remove oldhashtab.c once gcc 2.95 is no longer used
d16 3
a18 2
		md5.c objalloc.c obstack.c oldhashtab.c pex-common.c \
		pex-unix.c pexecute.c regex.c safe-ctype.c spaces.c splay-tree.c \
@


1.13
log
@Compile the v3 demangler support code in libiberty, bump minor. Will be used
in a not-so-distant future.
ok kettenis@@ (some time ago)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.12 2009/10/12 22:32:19 robert Exp $
a4 2

NOLINT=
@


1.12
log
@Add fopen_unlocked.c pex-unix.c pex-common.c unlink-if-ordinary.c to
the list of built files and switch the md5.h header to the libiberty
one. This change is needed by gcc4 and it is a major library crank for
libiberty.
tested by many people on many architectures and finally ok'd by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.11 2008/05/27 18:52:40 miod Exp $
d14 1
@


1.11
log
@Merge OpenBSD specific changes:
- pexecute implementation replaced with the older gcc 2.95 implementation,
  as gcc 2.95's collect2 relies upon an implementation behaviour which has
  been lost in further libiberty updates.
- keep the old hash table interfaces, which are used by gcc 2.95.
- keep the OpenBSD replacement for the md5 interface.
- keep the OpenBSD strl{cat,cpy} and snprinft usage.

Bump libiberty minor version due to the addition of a few new symbols.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.10 2006/07/12 23:00:07 espie Exp $
d14 2
a15 2
		dyn-string.c \
		fdmatch.c getopt.c getopt1.c getpwd.c getruntime.c \
d18 2
a19 2
		objalloc.c obstack.c oldhashtab.c \
		pexecute.c regex.c safe-ctype.c spaces.c splay-tree.c \
d22 1
a22 1
		physmem.c lbasename.c lrealpath.c \
@


1.10
log
@makeinfo --no-split, simplifies sets immensely.
Approved deraadt@@, kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.9 2004/09/18 20:55:16 deraadt Exp $
d4 1
a4 1
CPPFLAGS+=	-DHAVE_CONFIG_H -I$(.CURDIR) -I$(.CURDIR)/include -I$(.OBJDIR)
d12 1
d20 1
a20 1
		strerror.c strsignal.c \
a24 3
#		choose-temp.c fnmatch.c objalloc.c pexecute.c xstrdup.c \
#		basename.c vasprintf.c 

a26 3

# XXX -- Why are these not removed by the generated Makefile?
CLEANFILES+=	insque.o insque.go insque.po insque.so 
@


1.9
log
@gnu code will never, ever, EVER, get close to passing lint
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.8 2004/08/30 22:33:10 espie Exp $
d46 1
@


1.8
log
@cute side-effect of bsd.lib.mk, some typos only show up with make tags.
noticed by marco@@

okay millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.7 2004/05/17 10:00:37 kettenis Exp $
d5 2
@


1.7
log
@Update floatformat.[ch] to gdb-6.1 version.  Include regex.c in library.
ok otto@@, pval@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.6 2003/12/28 20:11:50 espie Exp $
d18 1
a18 1
		xatexit.c xexit.c xmalloc.c xmemdup xstrerror.c xstrdup.c \
@


1.6
log
@resurrect pexecute.c for now, since vax and m68k barf on pex-unix.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.5 2003/12/26 04:14:45 brad Exp $
d16 1
a16 1
		pexecute.c safe-ctype.c spaces.c splay-tree.c \
@


1.5
log
@add libiberty.info to CLEANFILES

ok espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.4 2003/12/25 18:08:08 espie Exp $
d16 1
a16 1
		pex-unix.c safe-ctype.c spaces.c splay-tree.c \
@


1.4
log
@Compile the right files, bump minor number.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.3 2003/11/25 21:24:30 espie Exp $
d32 2
a33 1
CLEANFILES+=Makefile config.cache config.log stamp-h xhost-mkfrag testsuite/Makefile
@


1.3
log
@Build the new pieces of libiberty that gcc3 will want.
Bump major because of changes in c++ demangler.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.12 2002/12/04 19:43:13 millert Exp $
d16 1
a16 1
		pexecute.c safe-ctype.c spaces.c splay-tree.c \
d19 1
a19 1
		physmem.c lbasename.c \
@


1.2
log
@Fix build for new location
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.1 2003/11/24 16:53:23 espie Exp $
d10 2
a11 1
SRCS=		argv.c choose-temp.c concat.c cplus-dem.c dyn-string.c \
d13 7
a19 3
		hashtab.c hex.c floatformat.c objalloc.c obstack.c \
		pexecute.c spaces.c splay-tree.c strerror.c strsignal.c \
		xatexit.c xexit.c xmalloc.c xstrerror.c xstrdup.c \
d46 9
@


1.1
log
@Add build pieces
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.12 2002/12/04 19:43:13 millert Exp $
d4 1
a4 1
CPPFLAGS+=	-DHAVE_CONFIG_H -I$(.CURDIR) -I$(.CURDIR)/../include -I$(.OBJDIR)
d6 3
a8 12
# XXX -- GNUism
# As we need to fill variables with contents of dynamically created files
# we must first see to that they are really generated.  This is a hack that
# ensures this.  The echo at the end is because make doesn't like command
# substitutions to not generate output.
.ifmake !obj && !clean && !cleandir
PREREQ!=	test ! -f $(.OBJDIR)/needed-list && \
			(cd $(.CURDIR); \
			 $(MAKE) -f Makefile.bsd-wrapper1 needed-list); \
		echo 'Prerequisites made'
HOST_FILES!=	cat $(.OBJDIR)/needed-list
.endif
d28 13
@

