head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.56
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.52
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.48
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.50
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.42
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.46
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.44
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.40
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.38
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.36
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.34
	OPENBSD_5_0:1.2.0.32
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.30
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.28
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.24
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.26
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.22
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.20
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.18
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.16
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.14
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.12
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.10
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	gcc-3_3_2:1.1.1.2
	gcc-2_95_3:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2004.01.15.23.38.18;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.15.23.28.00;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.01.15.23.28.00;	author espie;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.01.15.23.34.50;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@put directory names into variable so they're overridable.
@
text
@#Makefile for GNU Objective C runtime library.
#Copyright (C) 1993, 95-98, 1999, 2001 Free Software Foundation, Inc.

#This file is part of GNU CC.

#GNU CC is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2, or (at your option)
#any later version.

#GNU CC is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with GNU CC; see the file COPYING.  If not, write to
#the Free Software Foundation, 59 Temple Place - Suite 330,
#Boston, MA 02111-1307, USA.  */

#This was cribbed from the libchill, libiberty and libstdc++
#Makefile.in files.  Some of this stuff may be unnecessary and
#worthless.

SHELL = @@SHELL@@
MAKEOVERRIDES=

#### Start of system configuration section. ####

srcdir = @@glibcpp_srcdir@@
VPATH = @@glibcpp_srcdir@@
prefix = @@prefix@@
exec_prefix = @@exec_prefix@@
target_alias = @@target_alias@@
gcc_version = @@gcc_version@@
gcc_version_trigger = @@gcc_version_trigger@@
top_srcdir = @@top_srcdir@@
toplevel_srcdir = @@toplevel_srcdir@@
toolexecdir = @@glibcpp_toolexecdir@@
glibcpp_toolexecdir = @@glibcpp_toolexecdir@@
glibcpp_toolexeclibdir = @@glibcpp_toolexeclibdir@@

top_builddir = .

libdir = $(exec_prefix)/lib
libsubdir = $(libdir)/gcc-lib/$(target_alias)/$(gcc_version)

# Multilib support variables.
MULTISRCTOP =
MULTIBUILDTOP =
MULTIDIRS =
MULTISUBDIR =
MULTIDO = true
MULTICLEAN = true

# Not configured per top-level version, since that doesn't get passed
# down at configure time, but overrridden by the top-level install
# target.
INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@

AR = @@AR@@
AR_FLAGS = rc

RANLIB = @@RANLIB@@

CC = @@CC@@
CFLAGS = @@CFLAGS@@
WARN_CFLAGS = -W -Wall -Wwrite-strings -Wstrict-prototypes
GTHREAD_FLAGS=@@GTHREAD_FLAGS@@
ALL_CFLAGS = -I. -I$(srcdir) $(CPPFLAGS) $(DEFS) $(CFLAGS) $(WARN_CFLAGS) \
	$(GTHREAD_FLAGS) -DIN_GCC -DIN_TARGET_LIBS

# Libtool
# The following strings describe the version of the obj-C library 
# begin compiled and compatibility issues.
# Please refer to Libtool documentation about how to manage these 
# numbers.
LIBOBJC_VERSION = 1:0:0
LIBOBJC_GC_VERSION = 1:0:0
# @@LIBTOOL@@ does not get it right, so we hack it in - FIXME
LIBTOOL = ./libtool
LIBTOOL_COMPILE = $(LIBTOOL) --mode=compile
LIBTOOL_LINK    = $(LIBTOOL) --mode=link 
LIBTOOL_INSTALL = $(LIBTOOL) --mode=install
LIBTOOL_CLEAN   = $(LIBTOOL) --mode=clean
#LIBTOOL_UNINSTALL = $(LIBTOOL) --mode=uninstall

#
# Define the cc1obj in terms of the CC that is passed on from higher
# level make. This is needed to make sure we can create runtime-info.h
# when doing canadian cross builds where running ../../gcc/cc1obj 
# does not make any sense.
#
CC1OBJ = `$(CC) -print-prog-name=cc1obj`

GCCSRCDIR=$(srcdir)/$(MULTISRCTOP)../gcc
GCCOBJDIR=$(MULTIBUILDTOP)/../../gcc
LIBIBERTY_INCLUDES=$(srcdir)/$(MULTISRCTOP)../include

INCLUDES = -I$(srcdir)/objc  -I$(GCCSRCDIR) \
  -I$(GCCSRCDIR)/config -I$(GCCOBJDIR) \
  -I$(LIBIBERTY_INCLUDES)

OBJC_GCFLAGS=-DOBJC_WITH_GC=1
OBJC_THREAD_FILE=thr-objc
OBJC_BOEHM_GC=@@OBJC_BOEHM_GC@@

.SUFFIXES:
.SUFFIXES: .c .m .lo

.c.lo:
	$(LIBTOOL_COMPILE) $(CC) -c $(ALL_CFLAGS) $(INCLUDES) $<

.m.lo:
	$(LIBTOOL_COMPILE) $(CC) -c $(ALL_CFLAGS) $(INCLUDES) $<

# Flags to pass to a recursive make.
FLAGS_TO_PASS = \
	"AR=$(AR)" \
	"AR_FLAGS=$(AR_FLAGS)" \
	"CC=$(CC)" \
	"CFLAGS=$(CFLAGS)" \
	"DESTDIR=$(DESTDIR)" \
	"LIBCFLAGS=$(LIBCFLAGS)" \
	"EXTRA_OFILES=$(EXTRA_OFILES)" \
	"HDEFINES=$(HDEFINES)" \
	"INSTALL=$(INSTALL)" \
	"INSTALL_DATA=$(INSTALL_DATA)" \
	"INSTALL_PROGRAM=$(INSTALL_PROGRAM)" \
	"LDFLAGS=$(LDFLAGS)" \
	"LIBTOOL=$(LIBTOOL)" \
	"LOADLIBES=$(LOADLIBES)" \
	"PICFLAG=$(PICFLAG)" \
	"RANLIB=$(RANLIB)" \
	"SHELL=$(SHELL)" \
	"prefix=$(prefix)" \
	"exec_prefix=$(exec_prefix)" \
	"libdir=$(libdir)" \
	"libsubdir=$(libsubdir)" \
	"tooldir=$(tooldir)"

all: libobjc.la $(OBJC_BOEHM_GC)
	: $(MAKE) ; exec $(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=all

# User-visible header files.

OBJC_H = hash.h objc-list.h sarray.h objc.h objc-api.h \
	 NXConstStr.h Object.h Protocol.h encoding.h typedstream.h \
	 thr.h

# Modules that comprise the runtime library.

OBJS =    archive.lo class.lo encoding.lo gc.lo hash.lo init.lo linking.lo \
	  misc.lo nil_method.lo NXConstStr.lo Object.lo objects.lo \
	  Protocol.lo sarray.lo selector.lo sendmsg.lo thr.lo \
	  $(OBJC_THREAD_FILE).lo

OBJS_GC = archive_gc.lo class_gc.lo encoding_gc.lo gc_gc.lo hash_gc.lo \
	  init_gc.lo linking_gc.lo misc_gc.lo nil_method_gc.lo \
	  NXConstStr_gc.lo Object_gc.lo objects_gc.lo Protocol_gc.lo \
	  sarray_gc.lo selector_gc.lo sendmsg_gc.lo thr_gc.lo \
	  $(OBJC_THREAD_FILE)_gc.lo

runtime-info.h: 
	echo "" > tmp-runtime
	echo "/* This file is automatically generated */" > $@@
	$(CC1OBJ) -print-objc-runtime-info tmp-runtime >> $@@
	rm -f tmp-runtime

archive_gc.lo: archive.c
	$(LIBTOOL_COMPILE) $(CC) -c  -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

class_gc.lo: class.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

encoding_gc.lo: encoding.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

gc.lo: gc.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(INCLUDES) $<

gc_gc.lo: gc.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

hash_gc.lo: hash.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

init_gc.lo: init.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

linking.lo: linking.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(INCLUDES) $<

linking_gc.lo: linking.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(OBJC_GCFLAGS) $(INCLUDES) $<

misc_gc.lo: misc.c
	$(LIBTOOL_COMPILE) $(CC) -c $(ALL_CFLAGS) -o $@@ $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

nil_method_gc.lo: nil_method.c
	$(LIBTOOL_COMPILE) $(CC) -c $(ALL_CFLAGS) -o $@@ $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

NXConstStr.lo: NXConstStr.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(INCLUDES) $<

NXConstStr_gc.lo: NXConstStr.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(OBJC_GCFLAGS) $(INCLUDES) $<

Object.lo: Object.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(INCLUDES) $<

Object_gc.lo: Object.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(OBJC_GCFLAGS) $(INCLUDES) $<

objects_gc.lo: objects.c
	$(LIBTOOL_COMPILE) $(CC) -c $(ALL_CFLAGS) -o $@@ $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

Protocol.lo: Protocol.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(INCLUDES) $<

Protocol_gc.lo: Protocol.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(OBJC_GCFLAGS) $(INCLUDES) $<

sarray_gc.lo: sarray.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

selector_gc.lo: selector.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

sendmsg.lo: sendmsg.c runtime-info.h
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(INCLUDES) $<

sendmsg_gc.lo: sendmsg.c runtime-info.h
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

thr_gc.lo: thr.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

$(OBJC_THREAD_FILE)_gc.lo: $(OBJC_THREAD_FILE).c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

doc: info dvi html

libobjc.la: $(OBJS)
	$(LIBTOOL_LINK) $(CC) -o $@@ $(OBJS) \
		-rpath $(glibcpp_toolexeclibdir) \
		-version-info $(LIBOBJC_VERSION)

libobjc_gc.la: $(OBJS_GC)
	$(LIBTOOL_LINK) $(CC) -o $@@ $(OBJS_GC) \
		-rpath $(glibcpp_toolexeclibdir) \
		-version-info $(LIBOBJC_GC_VERSION)

#
# FIXME -- The following part does not fit in the libtool context. 
# Libtool is supposed to [going to] be able to create a win 32 DLL 
# without extra code but since I don't have a win machine to test 
# if it already works, I leave the old code here.
#
libobjc_s.a: libobjc.la
	mv libobjc.a libobjc_s.a

# Create a relocatable DLL
libobjc.dll: libobjc_s.a libobjc_entry.o
	$(CC) -mdll -Wl,--base-file -Wl,libobjc.base \
		-o libobjc.dll libobjc_s.a libobjc_entry.o -lkernel32
	$(DLLTOOL) --dllname libobjc.dll --def $(srcdir)/libobjc.def \
		--base-file libobjc.base --output-exp libobjc.exp
	$(GCC_FOR_TARGET) -mdll -Wl,--base-file libobjc.base libobjc.exp \
		-o libobjc.dll libobjc_s.a libobjc_entry.o -lkernel32
	$(DLLTOOL) --dllname libobjc.dll --def $(srcdir)/libobjc.def \
		--base-file libobjc.base --output-exp libobjc.exp
	$(GCC_FOR_TARGET) libobjc.exp -mdll \
		-o libobjc.dll libobjc_s.a libobjc_entry.o -lkernel32
	$(DLLTOOL) --dllname libobjc.dll --def $(srcdir)/libobjc.def \
		--output-lib libobjc.a
#
#
#
#
#

info:
dvi:
html:

Makefile: Makefile.in config.status
	$(SHELL) config.status

config.status: configure
	rm -f config.cache
	CONFIG_SITE=no-such-file CC='$(CC)' AR='$(AR)' CFLAGS='$(CFLAGS)' \
	CPPFLAGS='$(CPPFLAGS)' $(SHELL) config.status --recheck

${srcdir}/configure: configure.in
	rm -f config.cache
	cd ${srcdir} && autoconf

install: install-libs install-headers

install-libs: installdirs
	$(SHELL) $(toplevel_srcdir)/mkinstalldirs $(DESTDIR)$(glibcpp_toolexeclibdir)
	$(LIBTOOL_INSTALL) $(INSTALL) libobjc.la $(DESTDIR)$(glibcpp_toolexeclibdir);
	if [ "$(OBJC_BOEHM_GC)" ]; then \
	  $(LIBTOOL_INSTALL) $(INSTALL) libobjc_gc.la \
				$(DESTDIR)$(glibcpp_toolexeclibdir);\
	fi
	$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO="$@@"
	@@-$(LIBTOOL) --mode=finish $(DESTDIR)$(glibcpp_toolexeclibdir)

# Copy Objective C headers to installation include directory.
install-headers:
	$(SHELL) $(toplevel_srcdir)/mkinstalldirs $(DESTDIR)$(libsubdir)/include/objc
	for file in $(OBJC_H); do \
	  realfile=$(srcdir)/objc/$${file}; \
	  $(INSTALL_DATA) $${realfile} $(DESTDIR)$(libsubdir)/include/objc; \
	done

check uninstall install-strip dist installcheck installdirs:

mostlyclean:
	-$(LIBTOOL_CLEAN) rm -f libobjc.la libobjc_gc.la *.lo
	-rm -f runtime-info.h tmp-runtime.s *.o *.lo libobjc* xforward \
		fflags *.aux *.cp *.dvi *.fn *.info *.ky *.log *.pg \
		*.toc *.tp *.vr *.html libobj.exp
	@@$(MULTICLEAN) multi-clean DO=mostlyclean

clean: mostlyclean
	rm -f config.log
	@@$(MULTICLEAN) multi-clean DO=clean

distclean: clean
	@@$(MULTICLEAN) multi-clean DO=distclean
	rm -f config.cache config.status Makefile configure

maintainer-clean realclean: distclean

.PHONY: mostlyclean clean distclean maintainer-clean all check uninstall \
	install-strip dist installcheck installdirs 
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
#Copyright (C) 1993, 95-97, 1998 Free Software Foundation, Inc.
d25 2
a26 1
SHELL = /bin/sh
d30 2
a31 2
srcdir = @@srcdir@@
VPATH = @@srcdir@@
d37 7
a46 1
incinstalldir = $(libsubdir)/include
d70 19
a88 1
ALL_CFLAGS = -I. -I$(srcdir) $(CPPFLAGS) $(DEFS) $(CFLAGS) -DIN_GCC
d98 7
a104 3
INCLUDES = -I$(srcdir)/objc  -I$(srcdir)/$(MULTISRCTOP)../gcc \
  -I$(srcdir)/$(MULTISRCTOP)../gcc/config -I$(MULTIBUILDTOP)../../gcc \
  -I$(srcdir)/$(MULTISRCTOP)../include
d107 2
a108 1
OBJC_THREAD_FILE=thr-@@OBJC_THREAD_FILE@@
d111 1
a111 1
.SUFFIXES: .c .m .o
d113 2
a114 2
.c.o:
	$(CC) -c $(ALL_CFLAGS) $(INCLUDES) $<
d116 2
a117 2
.m.o:
	$(CC) -c $(ALL_CFLAGS) $(INCLUDES) $<
d125 1
d133 1
d144 2
a145 2
all: libobjc.a @@OBJC_BOEHM_GC@@
	$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=all
d155 10
a164 10
OBJS =    archive.o class.o encoding.o gc.o hash.o init.o linking.o \
	  misc.o nil_method.o NXConstStr.o Object.o objects.o \
	  Protocol.o sarray.o selector.o sendmsg.o thr.o \
	  $(OBJC_THREAD_FILE).o

OBJS_GC = archive_gc.o class_gc.o encoding_gc.o gc_gc.o hash_gc.o \
	  init_gc.o linking_gc.o misc_gc.o nil_method_gc.o \
	  NXConstStr_gc.o Object_gc.o objects_gc.o Protocol_gc.o \
	  sarray_gc.o selector_gc.o sendmsg_gc.o thr_gc.o \
	  $(OBJC_THREAD_FILE)_gc.o
d167 98
a264 81
		echo "" > tmp-runtime
		echo "/* This file is automatically generated */" > $@@
		$(CC1OBJ) -print-objc-runtime-info tmp-runtime >> $@@
		rm -f tmp-runtime

archive_gc.o:	archive.c
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) $(INCLUDES) $<

class_gc.o:	class.c
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) $(INCLUDES) $<

encoding_gc.o:	encoding.c
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) $(INCLUDES) $<

gc.o:		gc.c
		$(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) $(INCLUDES) $<

gc_gc.o:	gc.c
		$(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
			$(INCLUDES) $<

hash_gc.o:	hash.c
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) $(INCLUDES) $<

init_gc.o:	init.c
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) $(INCLUDES) $<

linking.o:	linking.m
		$(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) $(INCLUDES) $<

linking_gc.o:	linking.m
		$(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
			$(INCLUDES) $<

misc_gc.o:	misc.c
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) $(INCLUDES) $<

nil_method_gc.o: nil_method.c
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) $(INCLUDES) $<

NXConstStr.o:	NXConstStr.m
		$(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) $(INCLUDES) $<

NXConstStr_gc.o: NXConstStr.m
		$(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
			$(INCLUDES) $<

Object.o:	Object.m
		$(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) $(INCLUDES) $<

Object_gc.o:	Object.m
		$(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
			$(INCLUDES) $<

objects_gc.o:	objects.c
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) $(INCLUDES) $<

Protocol.o:	Protocol.m
		$(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) $(INCLUDES) $<

Protocol_gc.o:	Protocol.m
		$(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
			$(INCLUDES) $<

sarray_gc.o:	sarray.c
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) $(INCLUDES) $<

selector_gc.o:	selector.c
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) $(INCLUDES) $<

sendmsg.o:	sendmsg.c runtime-info.h
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(INCLUDES) $<

sendmsg_gc.o:	sendmsg.c runtime-info.h
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) $(INCLUDES) $<

thr_gc.o:	thr.c
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) $(INCLUDES) $<

$(OBJC_THREAD_FILE)_gc.o: $(OBJC_THREAD_FILE).c
		$(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) $(INCLUDES) $<
d268 9
a276 7
libobjc.a: $(OBJS)
	$(AR) $(AR_FLAGS) $@@ $(OBJS)
	$(RANLIB) $@@

libobjc_gc.a: $(OBJS_GC)
	$(AR) $(AR_FLAGS) $@@ $(OBJS_GC)
	$(RANLIB) $@@
d278 7
a284 1
libobjc_s.a: libobjc.a
d301 5
d307 3
a309 12
info: objc-features.info
dvi: objc-features.dvi
html: objc-features_toc.html

objc-features.info: $(srcdir)/objc-features.texi
	makeinfo $(srcdir)/objc-features.texi

objc-features.dvi: $(srcdir)/objc-features.texi
	texi2dvi $(srcdir)/objc-features.texi

objc-features_toc.html: objc-features.texi
	texi2html -split_node $(srcdir)/objc-features.texi
d323 1
a323 1
install: install-libs copy-headers
d326 8
a333 19
	-if test -f libobjc.a ; then \
	  rm -f $(libsubdir)/libobjc.a; \
	  $(INSTALL_DATA) libobjc.a $(libsubdir)/libobjc.a; \
	  chmod a-x $(libsubdir)/libobjc.a; \
	else true; fi
	-if test -f libobjc_gc.a ; then \
	  rm -f $(libsubdir)/libobjc_gc.a; \
	  $(INSTALL_DATA) libobjc_gc.a $(libsubdir)/libobjc_gc.a; \
	  chmod a-x $(libsubdir)/libobjc_gc.a; \
	else true; fi
	-if test -f libobjc_s.a ; then \
	  rm -f $(libsubdir)/libobjc_s.a; \
	  $(INSTALL_DATA) libobjc_s.a $(libsubdir)/libobjc_s.a; \
	  chmod a-x $(libsubdir)/libobjc_s.a; \
	else true; fi
	  -if test -f libobjc.dll ; then \
	  rm -f $(bindir)/libobjc.dll; \
	  $(INSTALL_DATA) libobjc.dll $(bindir)/libobjc.dll; \
	else true; fi
d336 2
a337 3
copy-headers:
	-rm -rf $(incinstalldir)/objc
	-mkdir $(incinstalldir)/objc
d340 1
a340 2
	  cp $${realfile} $(incinstalldir)/objc; \
	  chmod a+r $(incinstalldir)/objc/$${file}; \
d346 2
a347 1
	-rm -f runtime-info.h tmp-runtime.s *.o libobjc* xforward \
@


1.1.1.1
log
@move libobjc around to its own directory (from src/gnu/egcs/libobjc)
@
text
@@


1.1.1.2
log
@bump to gcc 3.3.2
@
text
@d2 1
a2 1
#Copyright (C) 1993, 95-98, 1999, 2001 Free Software Foundation, Inc.
d25 1
a25 2
SHELL = @@SHELL@@
MAKEOVERRIDES=
d29 2
a30 2
srcdir = @@glibcpp_srcdir@@
VPATH = @@glibcpp_srcdir@@
a35 7
top_srcdir = @@top_srcdir@@
toplevel_srcdir = @@toplevel_srcdir@@
toolexecdir = @@glibcpp_toolexecdir@@
glibcpp_toolexecdir = @@glibcpp_toolexecdir@@
glibcpp_toolexeclibdir = @@glibcpp_toolexeclibdir@@

top_builddir = .
d39 1
d63 1
a63 19
WARN_CFLAGS = -W -Wall -Wwrite-strings -Wstrict-prototypes
GTHREAD_FLAGS=@@GTHREAD_FLAGS@@
ALL_CFLAGS = -I. -I$(srcdir) $(CPPFLAGS) $(DEFS) $(CFLAGS) $(WARN_CFLAGS) \
	$(GTHREAD_FLAGS) -DIN_GCC -DIN_TARGET_LIBS

# Libtool
# The following strings describe the version of the obj-C library 
# begin compiled and compatibility issues.
# Please refer to Libtool documentation about how to manage these 
# numbers.
LIBOBJC_VERSION = 1:0:0
LIBOBJC_GC_VERSION = 1:0:0
# @@LIBTOOL@@ does not get it right, so we hack it in - FIXME
LIBTOOL = ./libtool
LIBTOOL_COMPILE = $(LIBTOOL) --mode=compile
LIBTOOL_LINK    = $(LIBTOOL) --mode=link 
LIBTOOL_INSTALL = $(LIBTOOL) --mode=install
LIBTOOL_CLEAN   = $(LIBTOOL) --mode=clean
#LIBTOOL_UNINSTALL = $(LIBTOOL) --mode=uninstall
d78 1
a78 2
OBJC_THREAD_FILE=thr-objc
OBJC_BOEHM_GC=@@OBJC_BOEHM_GC@@
d81 1
a81 1
.SUFFIXES: .c .m .lo
d83 2
a84 2
.c.lo:
	$(LIBTOOL_COMPILE) $(CC) -c $(ALL_CFLAGS) $(INCLUDES) $<
d86 2
a87 2
.m.lo:
	$(LIBTOOL_COMPILE) $(CC) -c $(ALL_CFLAGS) $(INCLUDES) $<
a94 1
	"DESTDIR=$(DESTDIR)" \
a101 1
	"LIBTOOL=$(LIBTOOL)" \
d112 2
a113 2
all: libobjc.la $(OBJC_BOEHM_GC)
	: $(MAKE) ; exec $(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=all
d123 10
a132 10
OBJS =    archive.lo class.lo encoding.lo gc.lo hash.lo init.lo linking.lo \
	  misc.lo nil_method.lo NXConstStr.lo Object.lo objects.lo \
	  Protocol.lo sarray.lo selector.lo sendmsg.lo thr.lo \
	  $(OBJC_THREAD_FILE).lo

OBJS_GC = archive_gc.lo class_gc.lo encoding_gc.lo gc_gc.lo hash_gc.lo \
	  init_gc.lo linking_gc.lo misc_gc.lo nil_method_gc.lo \
	  NXConstStr_gc.lo Object_gc.lo objects_gc.lo Protocol_gc.lo \
	  sarray_gc.lo selector_gc.lo sendmsg_gc.lo thr_gc.lo \
	  $(OBJC_THREAD_FILE)_gc.lo
d135 81
a215 98
	echo "" > tmp-runtime
	echo "/* This file is automatically generated */" > $@@
	$(CC1OBJ) -print-objc-runtime-info tmp-runtime >> $@@
	rm -f tmp-runtime

archive_gc.lo: archive.c
	$(LIBTOOL_COMPILE) $(CC) -c  -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

class_gc.lo: class.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

encoding_gc.lo: encoding.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

gc.lo: gc.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(INCLUDES) $<

gc_gc.lo: gc.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

hash_gc.lo: hash.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

init_gc.lo: init.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

linking.lo: linking.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(INCLUDES) $<

linking_gc.lo: linking.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(OBJC_GCFLAGS) $(INCLUDES) $<

misc_gc.lo: misc.c
	$(LIBTOOL_COMPILE) $(CC) -c $(ALL_CFLAGS) -o $@@ $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

nil_method_gc.lo: nil_method.c
	$(LIBTOOL_COMPILE) $(CC) -c $(ALL_CFLAGS) -o $@@ $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

NXConstStr.lo: NXConstStr.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(INCLUDES) $<

NXConstStr_gc.lo: NXConstStr.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(OBJC_GCFLAGS) $(INCLUDES) $<

Object.lo: Object.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(INCLUDES) $<

Object_gc.lo: Object.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(OBJC_GCFLAGS) $(INCLUDES) $<

objects_gc.lo: objects.c
	$(LIBTOOL_COMPILE) $(CC) -c $(ALL_CFLAGS) -o $@@ $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

Protocol.lo: Protocol.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(INCLUDES) $<

Protocol_gc.lo: Protocol.m
	$(LIBTOOL_COMPILE) $(CC) -fgnu-runtime -c -o $@@ $(ALL_CFLAGS) \
		$(OBJC_GCFLAGS) $(INCLUDES) $<

sarray_gc.lo: sarray.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

selector_gc.lo: selector.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

sendmsg.lo: sendmsg.c runtime-info.h
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(INCLUDES) $<

sendmsg_gc.lo: sendmsg.c runtime-info.h
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

thr_gc.lo: thr.c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<

$(OBJC_THREAD_FILE)_gc.lo: $(OBJC_THREAD_FILE).c
	$(LIBTOOL_COMPILE) $(CC) -c -o $@@ $(ALL_CFLAGS) $(OBJC_GCFLAGS) \
		$(INCLUDES) $<
d219 7
a225 9
libobjc.la: $(OBJS)
	$(LIBTOOL_LINK) $(CC) -o $@@ $(OBJS) \
		-rpath $(glibcpp_toolexeclibdir) \
		-version-info $(LIBOBJC_VERSION)

libobjc_gc.la: $(OBJS_GC)
	$(LIBTOOL_LINK) $(CC) -o $@@ $(OBJS_GC) \
		-rpath $(glibcpp_toolexeclibdir) \
		-version-info $(LIBOBJC_GC_VERSION)
d227 1
a227 7
#
# FIXME -- The following part does not fit in the libtool context. 
# Libtool is supposed to [going to] be able to create a win 32 DLL 
# without extra code but since I don't have a win machine to test 
# if it already works, I leave the old code here.
#
libobjc_s.a: libobjc.la
a243 5
#
#
#
#
#
d245 12
a256 3
info:
dvi:
html:
d270 1
a270 1
install: install-libs install-headers
d273 19
a291 8
	$(SHELL) $(toplevel_srcdir)/mkinstalldirs $(DESTDIR)$(glibcpp_toolexeclibdir)
	$(LIBTOOL_INSTALL) $(INSTALL) libobjc.la $(DESTDIR)$(glibcpp_toolexeclibdir);
	if [ "$(OBJC_BOEHM_GC)" ]; then \
	  $(LIBTOOL_INSTALL) $(INSTALL) libobjc_gc.la \
				$(DESTDIR)$(glibcpp_toolexeclibdir);\
	fi
	$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO="$@@"
	@@-$(LIBTOOL) --mode=finish $(DESTDIR)$(glibcpp_toolexeclibdir)
d294 3
a296 2
install-headers:
	$(SHELL) $(toplevel_srcdir)/mkinstalldirs $(DESTDIR)$(libsubdir)/include/objc
d299 2
a300 1
	  $(INSTALL_DATA) $${realfile} $(DESTDIR)$(libsubdir)/include/objc; \
d306 1
a306 2
	-$(LIBTOOL_CLEAN) rm -f libobjc.la libobjc_gc.la *.lo
	-rm -f runtime-info.h tmp-runtime.s *.o *.lo libobjc* xforward \
@

