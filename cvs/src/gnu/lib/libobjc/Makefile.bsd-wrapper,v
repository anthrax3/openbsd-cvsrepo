head	1.10;
access;
symbols
	OPENBSD_6_1:1.9.0.6
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.2
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.8.0.8
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.10
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.10
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.8
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.6
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.4
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.10
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.12
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.8
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.6
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.4
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.4.0.4
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.10
date	2017.06.12.18.49.34;	author espie;	state Exp;
branches;
next	1.9;
commitid	uAoIMHRVhjBrJMEB;

1.9
date	2016.07.04.18.01.44;	author guenther;	state Exp;
branches;
next	1.8;
commitid	MDAws5Y7do6cFWlq;

1.8
date	2013.08.06.19.11.53;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2011.06.24.22.47.51;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2010.05.10.18.20.31;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2007.07.23.17.24.06;	author kurt;	state Exp;
branches;
next	1.4;

1.4
date	2006.08.28.20.49.50;	author tsi;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.28.20.21.31;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.09.22.27.07;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.15.23.45.37;	author espie;	state Exp;
branches;
next	;


desc
@@


1.10
log
@destroy lint remnants.
okay millert@@ deraadt@@
@
text
@#	$OpenBSD: Makefile.bsd-wrapper,v 1.9 2016/07/04 18:01:44 guenther Exp $

LIB=		objc


LIBIBERTY_INCLUDES=${.CURDIR}/../libiberty/include
.include <bsd.own.mk>
.if make(obj)
.else
. if ${COMPILER_VERSION:L} == "gcc3"
GCCDIR= $(.CURDIR)/../../usr.bin/gcc
GCCSRCDIR=${GCCDIR}/gcc
. else
error wrong compiler
. endif
.endif

.if defined(MAKEOBJDIR)
OBJDIR= ${MAKEOBJDIR}
.elif defined(OBJMACHINE)
OBJDIR=	obj.${MACHINE}
.else
OBJDIR=	obj
.endif
GCCOBJDIR!=	if [ -d $(GCCDIR)/$(OBJDIR) ]; then \
			echo $(GCCDIR)/$(OBJDIR); \
		else \
			echo $(GCCDIR); \
		fi

GNUCFLAGS=	${CFLAGS} ${COPTS} -DOPENBSD_NATIVE
		

MAKE_FLAGS= 	CFLAGS="${GNUCFLAGS}" \
		CC="${CC}" LDFLAGS="${LDSTATIC}" \
		LIBIBERTY_INCLUDES=${LIBIBERTY_INCLUDES} \
		CPPFLAGS=${CPPFLAGS} \
		GCCSRCDIR=${GCCSRCDIR} \
		GCCOBJDIR=${GCCOBJDIR}

CPPFLAGS+= -I. -I${.CURDIR}/libobjc -I$(.CURDIR)/libobjc/objc  -I$(GCCSRCDIR) \
-I$(GCCSRCDIR)/config  -I$(GCCOBJDIR) -I$(LIBIBERTY_INCLUDES) \
-DIN_GCC -DIN_TARGET_LIBS

SRCS=archive.c class.c encoding.c gc.c hash.c init.c linking.m misc.c \
nil_method.c NXConstStr.m Object.m objects.c Protocol.m sarray.c  \
selector.c sendmsg.c thr.c 

SRCS+=thr-posix.c

includes:
	install -d -m 755 -o $(BINOWN) -g $(BINGRP) \
		$(DESTDIR)/usr/include/objc
	@@-cd $(.CURDIR)/libobjc/objc; for i in *.h; do \
		[ $$i = "runtime.h" ] || install -C -o $(BINOWN) -g $(BINGRP) -m $(NONBINMODE) \
				$$i $(DESTDIR)/usr/include/objc/$$i; \
	done

depend: 
	cd ${GCCDIR} && exec ${MAKE} -f Makefile.bsd-wrapper config.status target_path tconfig.h

sendmsg.o sendmsg.po sendmsg.so: runtime-info.h

runtime-info.h:
		echo "" > tmp-runtime
		echo "/* This file is automatically generated */" > $@@
		`$(CC) -print-prog-name=cc1obj` -print-objc-runtime-info tmp-runtime >> $@@
		rm -f tmp-runtime

.ifdef GLOBAL_AUTOCONF_CACHE
CF=	--cache-file=${GLOBAL_AUTOCONF_CACHE}
.else
CF=
.endif

config.status: libobjc/Makefile.in libobjc/configure
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" \
	INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
	GCCDIR=${GCCDIR} \
	/bin/sh ${.CURDIR}/libobjc/configure --with-gnu-as --with-gnu-ld \
		--prefix=/usr --mandir='$$(prefix)/share/man' \
		--enable-shared \
		--with-local-prefix=/usr ${CF} \
		&& touch config.status

.ifdef NOMAN
maninstall:
	@@echo NOMAN is set
.endif

depend: 

tags:
	# Nothing here so far...

.include <bsd.obj.mk>
.ifndef NOMAN
.include <bsd.man.mk>
.endif
.include <bsd.lib.mk>

.SUFFIXES:	.m

.PATH:	${.CURDIR}/libobjc

COMPILE.m=${COMPILE.c} -fgnu-runtime

gc.o: gc.c
	@@echo "${COMPILE.c} ${.ALLSRC} -o ${.TARGET}"
	@@${COMPILE.c} ${.ALLSRC}  -o ${.TARGET}.o
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

gc.po: gc.c
	@@echo "${COMPILE.c} -p ${.ALLSRC} -o ${.TARGET}"
	@@${COMPILE.c} -p ${.ALLSRC} -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

gc.so: gc.c
	@@echo "${COMPILE.c} ${PICFLAG} -DPIC ${.ALLSRC} -o ${.TARGET}"
	@@${COMPILE.c} ${PICFLAG} -DPIC ${.ALLSRC} -o ${.TARGET}.o
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

.m.o:
	@@echo "${COMPILE.m} ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.m} ${.IMPSRC}  -o ${.TARGET}.o
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

.m.po:
	@@echo "${COMPILE.m} -p ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.m} -p ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

.m.so:
	@@echo "${COMPILE.m} ${PICFLAG} -DPIC ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.m} ${PICFLAG} -DPIC ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

@


1.9
log
@DEBUGLIBS has been broken since the gcc4 switch, so delete it.  CFLAGS
contains -g by default anyway

problem noted by Edgar Pettijohn (edgar (at) pettijohn-web.com)
ok millert@@ kettenis@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.8 2013/08/06 19:11:53 miod Exp $
a91 3

lint:
	# Nothing here so far...
@


1.8
log
@Remove support for COMPILER_VERSION == gcc2.
Change the logic depending upon COMPILER_VERSION everywhere, to assume gcc4
is the norm and to explicitely test for gcc3 when a different behaviour
is required.
No functional change intended. Be sure to `make install' in share/mk before
attempting to do anything.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.7 2011/06/24 22:47:51 deraadt Exp $
d62 1
a62 1
sendmsg.o sendmsg.go sendmsg.po sendmsg.so: runtime-info.h
a115 6
	
gc.go: gc.c
	@@echo "${COMPILE.c} -g ${.ALLSRC} -o ${.TARGET}"
	@@${COMPILE.c} -g ${.ALLSRC} -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o
a132 6
	@@rm -f ${.TARGET}.o

.m.go:
	@@echo "${COMPILE.m} -g ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.m} -g ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
@


1.7
log
@use .PATH instead of .PATH.c & .PATH.m; something in the recent bsd.man.mk
commit exposed a build problem which used to spuriously affect builds.
It is possible that .PATH.suffix is sutbly broken in make(1), but there is
no real need to use that construct here in any case.
ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.6 2010/05/10 18:20:31 drahn Exp $
a12 5
. elif ${COMPILER_VERSION:L} == "gcc2"
GCCDIR= $(.CURDIR)/../../egcs/gcc
GCCSRCDIR=${GCCDIR}
. elif ${COMPILER_VERSION:L} == "gcc4" 
error GCC4 should not build gnu/lib/libobjc
d14 1
a14 1
error unknown compiler
@


1.6
log
@Switch to using COMPILER_VERSION instead of USE_GCC3, allows for more flexible
complier picking, eg supporting gcc2, gcc3, and gcc4. based on diff by Marco,
with fixes from espie@@.
ok espie@@ general mumbling of approval of others.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.5 2007/07/23 17:24:06 kurt Exp $
d112 1
a112 2
.PATH.c:	${.CURDIR}/libobjc
.PATH.m:	${.CURDIR}/libobjc
@


1.5
log
@- enable thread support in libobjc
- disable thread priorities in libobjc to avoid thread starvation issues
- major bump lib due to new link dependency on pthread
- link objc regress with -pthread
Tested on i386/amd64/powerpc/landisk/vax/sparc64/hppa. okay espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.4 2006/08/28 20:49:50 tsi Exp $
d8 3
a10 1
.if ${USE_GCC3:L} == "yes"
d13 1
a13 1
.else
d16 5
@


1.4
log
@-fgnu-runtime is only effective for Objective-C source, and produces a
warning otherwise.

ok herrb@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.3 2005/03/28 20:21:31 kettenis Exp $
d47 1
a47 2
# XXX need to check how threads work.
SRCS+=thr-single.c
@


1.3
log
@Fix libobjc for i386.
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.2 2005/01/09 22:27:07 espie Exp $
d112 2
a113 2
	@@echo "${COMPILE.m} ${.ALLSRC} -o ${.TARGET}"
	@@${COMPILE.m} ${.ALLSRC}  -o ${.TARGET}.o
d118 2
a119 2
	@@echo "${COMPILE.m} -g ${.ALLSRC} -o ${.TARGET}"
	@@${COMPILE.m} -g ${.ALLSRC} -o ${.TARGET}.o
d124 2
a125 2
	@@echo "${COMPILE.m} -p ${.ALLSRC} -o ${.TARGET}"
	@@${COMPILE.m} -p ${.ALLSRC} -o ${.TARGET}.o
d130 2
a131 2
	@@echo "${COMPILE.m} ${PICFLAG} -DPIC ${.ALLSRC} -o ${.TARGET}"
	@@${COMPILE.m} ${PICFLAG} -DPIC ${.ALLSRC} -o ${.TARGET}.o
@


1.2
log
@go look in MAKEOBJDIR if defined, ensuring cross-pieces have a chance
to find each other.

okay niklas@@ (`deja-vu')
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.1 2004/01/15 23:45:37 espie Exp $
d41 1
a41 1
-DIN_GCC
@


1.1
log
@OpenBSD specific infrastructure
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.40 2003/11/29 14:55:05 espie Exp $
d16 3
a18 1
.if defined(OBJMACHINE)
@

