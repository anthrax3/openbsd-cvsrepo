head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.18
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.16
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.12
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.8
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.10
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.4.0.26
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.24
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.22
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.20
	OPENBSD_5_0:1.4.0.18
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.16
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.14
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.10
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.12
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.8
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.6
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2013.08.13.05.52.08;	author guenther;	state Exp;
branches;
next	1.4;

1.4
date	2007.07.23.17.24.06;	author kurt;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.28.22.16.27;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.13.21.03.34;	author marc;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.15.23.45.37;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Switch time_t, ino_t, clock_t, and struct kevent's ident and data
members to 64bit types.  Assign new syscall numbers for (almost
all) the syscalls that involve the affected types, including anything
with time_t, timeval, itimerval, timespec, rusage, dirent, stat,
or kevent arguments.  Add a d_off member to struct dirent and replace
getdirentries() with getdents(), thus immensely simplifying and
accelerating telldir/seekdir.  Build perl with -DBIG_TIME.

Bump the major on every single base library: the compat bits included
here are only good enough to make the transition; the T32 compat
option will be burned as soon as we've reached the new world are
are happy with the snapshots for all architectures.

DANGER: ABI incompatibility.  Updating to this kernel requires extra
work or you won't be able to login: install a snapshot instead.

Much assistance in fixing userland issues from deraadt@@ and tedu@@
and build assistance from todd@@ and otto@@
@
text
@major=5
minor=0
@


1.4
log
@- enable thread support in libobjc
- disable thread priorities in libobjc to avoid thread starvation issues
- major bump lib due to new link dependency on pthread
- link objc regress with -pthread
Tested on i386/amd64/powerpc/landisk/vax/sparc64/hppa. okay espie@@
@
text
@d1 1
a1 1
major=4
@


1.3
log
@bump major version, just to be sure.

I did check on i386 that the compiled code was identical.

However, nm shows different symbols in old libobjc compiled with gcc 2.95
versus symbols in new libobjc compiled with gcc 3.3.5.

Since that makes Theo uneasy, and since I didn't remember to ask miod
to verify nm before/after the libobjc change on all architectures,
let's crank the major number.

This is probably 99.9% unnecessary, but the crank takes care of the
0.1% chance that I fucked up and that this change will break, say,
the Objective C ABI on mvme88k.

Fucked up process on my part. Theo's right to remind me.
@
text
@d1 1
a1 1
major=3
@


1.2
log
@errno changes, lib major version bumps, and general flag day
To build you must:
cd /usr/src && make obj && make includes
cd lib/libc && make depend && make && NOMAN=1 sudo make install
cd /usr/src && make build
@
text
@d1 1
a1 1
major=2
@


1.1
log
@OpenBSD specific infrastructure
@
text
@d1 1
a1 1
major=1
@

