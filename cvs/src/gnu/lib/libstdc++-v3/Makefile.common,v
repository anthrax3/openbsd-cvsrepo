head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.6
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.3.0.16
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.20
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.18
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.14
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.12
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.10
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3;
locks; strict;
comment	@# @;


1.4
date	2015.05.14.02.56.01;	author jsg;	state Exp;
branches;
next	1.3;
commitid	gKxrs8uC9DvCRIXP;

1.3
date	2010.05.16.13.22.58;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.16.07.28.15;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.15.08.21.03;	author robert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Stop including CFLAGS in CXXFLAGS it creates problems when mixing
C and C++ when wanting to pass flags to only the C compiler.

Tested in a ports bulk build by naddy and the handful of problems
found were fixed by naddy, jca and pascal.
@
text
@# $OpenBSD: Makefile.common,v 1.3 2010/05/16 13:22:58 espie Exp $

GCCDIR= ${.CURDIR}/../../gcc/gcc
GCCLIB= ${GCCDIR}/gcc
SRCDIR=	${.CURDIR}/../../gcc/libstdc++-v3
SUPDIR=	${SRCDIR}/libsupc++

.PATH:	${SRCDIR}/src ${SRCDIR}/libmath ${SRCDIR}/config/io \
	${SRCDIR}/config/locale/generic \
	${SRCDIR}/include ${SUPDIR} ${.CURDIR}/../libiberty/src \
	${.CURDIR}/../libstdc++-v3/obj

CPPFLAGS+=	-DIN_GLIBCPP_V3 -DHAVE_CONFIG_H
CPPFLAGS+=	-I${.CURDIR}/../libstdc++-v3/ -I${SUPDIR} -I${GCCDIR} -I${SRCDIR}/include
CPPFLAGS+=	-I${GCCLIB}/include -I${SRCDIR}/include -I${.CURDIR}/../libiberty/include -I.
CFLAGS+=	-frandom-seed=RepeatabilityConsideredGood
CXXFLAGS+=	-frandom-seed=RepeatabilityConsideredGood
CXXFLAGS+=	-fno-implicit-templates -ffunction-sections -fdata-sections \
		-Wno-deprecated

SUPSRCS=del_op.cc del_opnt.cc del_opv.cc del_opvnt.cc eh_alloc.cc eh_arm.cc \
	eh_aux_runtime.cc eh_call.cc eh_catch.cc eh_exception.cc eh_globals.cc \
	eh_personality.cc eh_term_handler.cc eh_terminate.cc eh_throw.cc \
	eh_type.cc eh_unex_handler.cc guard.cc new_handler.cc new_op.cc \
	new_opnt.cc new_opv.cc new_opvnt.cc pure.cc tinfo.cc tinfo2.cc \
	vec.cc vterminate.cc

# from libiberty:
SUPSRCS+=	cp-demangle.c
@


1.3
log
@the cp-demangler is part of libsupc++ as well
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.common,v 1.2 2010/05/16 07:28:15 espie Exp $
d13 3
a15 3
CFLAGS+=	-DIN_GLIBCPP_V3 -DHAVE_CONFIG_H
CFLAGS+=	-I${.CURDIR}/../libstdc++-v3/ -I${SUPDIR} -I${GCCDIR} -I${SRCDIR}/include
CFLAGS+=	-I${GCCLIB}/include -I${SRCDIR}/include -I${.CURDIR}/../libiberty/include -I.
d17 1
@


1.2
log
@install unwind.h, like for gcc3.
problem spotted by matthieu/naddy
okay kettenis@@, matthieu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.common,v 1.1 2010/05/15 08:21:03 robert Exp $
d28 1
a28 1
SRCS+=	cp-demangle.c
@


1.1
log
@Move libsupc++ sources and other common stuff to Makefile.common
to be used by gnu/lib/libsupc++-v3 and gnu/lib/libstdc++-v3

ok espie@@
@
text
@d1 1
a1 1
# $OpenBSD$
a28 6

unwind.h: ${GCCDIR}/unwind-generic.h
	ln -sf ${.ALLSRC} ${.TARGET}

SRCS+=		unwind.h
CLEANFILES+= 	unwind.h
@

