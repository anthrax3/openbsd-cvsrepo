head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	FSF_2_8_0:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.05.26.16.37.34;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.03.15.22.19.57;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.15.22.19.57;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old libg++, replaced by part of egcs.
@
text
@The dbz package was "liberated" from C News.
It is included with the GNU libio because it provides
a fairly good work-out for a stdio implementation.
The Makefile.in, configure.in, and stdio.h have been
set up to test libio.

------

This is the new, improved, lemon-freshened :-) dbz.

Just "make" will get you dbz.o and the dbz program.  "make r" runs an
extensive set of regression tests; most of the mysterious oddments lying
around here are to do with that.  "make rclean" cleans up after "make r".

You probably want to inspect the #ifdef list early in dbz.c before
compiling, although the defaults should work all right on most systems.

If you are not building this as part of C News, you will need to change
the -I option in FLAGS in the Makefile to "-I.", and delete the DBMLIBS
and RFC lines entirely.  That will break some of the regression tests;
at some point I'll fix this.

If you are using this independently from C News, you probably still want
to look through ../notebook/problems, as some of the portability problems
described in there can affect dbz.
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of GNU libg++ 2.7.1 port (prepared by Erik Theisen)
@
text
@@

