head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.2.0.6
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.4
	OPENBSD_2_4_BASE:1.1.1.2
	OPENBSD_2_3:1.1.1.2.0.2
	OPENBSD_2_3_BASE:1.1.1.2
	FSF_2_8_0:1.1.1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	99.05.26.16.37.34;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.03.15.22.19.57;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.15.22.19.57;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.03.03.20.22.21;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old libg++, replaced by part of egcs.
@
text
@#include <stdio.h>

#define	MAXWORD	32

main(argc, argv)
int argc;
char *argv[];
{
	register int len;
	int inmap[MAXWORD];
	int outmap[MAXWORD];
	char in[MAXWORD];
	char out[MAXWORD];
	register int i;
	register int a;

	a = 1;
	len = atoi(argv[a++]);
	if (len > MAXWORD)
		abort();	/* kind of drastic... */
	for (i = 0; i < len; i++)
		inmap[i] = atoi(argv[a++]);
	if (atoi(argv[a++]) != len)
		abort();
	for (i = 0; i < len; i++)
		outmap[i] = atoi(argv[a++]);

	while (fread(in, 1, len, stdin) == len) {
		for (i = 0; i < len; i++)
			out[outmap[i]] = in[inmap[i]];
		fwrite(out, 1, len, stdout);
	}
#ifdef DBZ_FINISH
	DBZ_FINISH;
#endif
	exit(0);
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of GNU libg++ 2.7.1 port (prepared by Erik Theisen)
@
text
@@


1.1.1.2
log
@libg++ 2.8.0 baseline import
@
text
@a4 1
int
@

