head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.2.0.6
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.4
	OPENBSD_2_4_BASE:1.1.1.2
	OPENBSD_2_3:1.1.1.2.0.2
	OPENBSD_2_3_BASE:1.1.1.2
	FSF_2_8_0:1.1.1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	99.05.26.16.37.59;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.03.15.22.20.09;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.15.22.20.09;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.03.03.20.23.13;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old libg++, replaced by part of egcs.
@
text
@#ifndef STDIO_H
#define STDIO_H <iostdio.h>
#endif
#include STDIO_H

void
t1 ()
{
  int n = -1;
  sscanf ("abc  ", "abc %n", &n);
  printf ("t1: count=%d\n", n);
}

void
t2 ()
{
  int n;
  long N;
  int retval;
#define SCAN(INPUT, FORMAT, VAR) \
  VAR = -1; \
  retval = sscanf (INPUT, FORMAT,  &VAR); \
  printf ("sscanf (\"%s\", \"%s\", &x) => %d, x = %ld\n", \
	  INPUT, FORMAT, retval, VAR);

  SCAN ("12345", "%ld", N);
  SCAN ("12345", "%llllld", N);
  SCAN ("12345", "%LLLLLd", N);
  SCAN ("test ", "%*s%n",  n);
  SCAN ("test ",   "%2*s%n",  n);
  SCAN ("12 ",   "%l2d",  n);
  SCAN ("12 ",   "%2ld",  N);
}

int
main ()
{
  t1 ();
  t2 ();

  fflush (stdout);
  return 0;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of GNU libg++ 2.7.1 port (prepared by Erik Theisen)
@
text
@@


1.1.1.2
log
@libg++ 2.8.0 baseline import
@
text
@d24 1
a24 1
	  INPUT, FORMAT, retval, (long)VAR);
@

