head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.2.0.6
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.4
	OPENBSD_2_4_BASE:1.1.1.2
	OPENBSD_2_3:1.1.1.2.0.2
	OPENBSD_2_3_BASE:1.1.1.2
	FSF_2_8_0:1.1.1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.05.26.16.36.35;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.03.15.22.19.25;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.15.22.19.25;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.03.03.20.19.57;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old libg++, replaced by part of egcs.
@
text
@# This file is a shell script fragment that supplies the information
# necessary for a configure script to process the program in
# this directory.  For more information, look at ../configure.

# We need multilib support.
. ${srcdir}/../cfg-ml-com.in

configdirs=
srctrigger=getopt1.c
srcname="-liberty library"

# per-host:

files="alloca-norm.h"
links="alloca-conf.h"

xhost=${target}
. ${srcdir}/config.table
host_makefile_frag=${frag}

# per-target:

# post-target:

# If we are cross-compiling, check at compile time whether we are
# using newlib.  If we are, we already know the files we need, since
# the linker will fail when run on some of the newlib targets.
if [ "${host}" != "${target}" ] ; then
  cat > Makefile.tem <<'!EOF!'
CONFIG_H = xconfig.h
NEEDED_LIST = xneeded-list

xconfig.h: Makefile
	if [ -f ../newlib/Makefile ]; then \
	  echo "#define NEED_sys_nerr 1" >xconfig.h; \
	  echo "#define NEED_sys_errlist 1" >>xconfig.h; \
	  echo "#define NEED_sys_siglist 1" >>xconfig.h; \
	  echo "#define NEED_psignal 1" >>xconfig.h; \
	else \
	  $(MAKE) $(FLAGS_TO_PASS) lconfig.h; \
	  cp lconfig.h xconfig.h; \
	fi

xneeded-list: Makefile
	if [ -f ../newlib/Makefile ]; then \
	  echo insque.o random.o strdup.o alloca.o >xneeded-list; \
	else \
	  $(MAKE) $(FLAGS_TO_PASS) lneeded-list; \
	  cp lneeded-list xneeded-list; \
	fi
!EOF!
sed -e "/^####/  r Makefile.tem" \
  -e '/INSTALL_DEST =/s/libdir/tooldir/' ${Makefile} > Makefile.tem3
mv Makefile.tem3 ${Makefile}
rm -f Makefile.tem
fi

if [ "${srcdir}" = "." ] ; then
  echo "EXTRA_LINKS = ${source_links}" >>Makefile
fi

# We need multilib support.
. ${srcdir}/../cfg-ml-pos.in
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of GNU libg++ 2.7.1 port (prepared by Erik Theisen)
@
text
@@


1.1.1.2
log
@libg++ 2.8.0 baseline import
@
text
@d5 3
d17 1
d25 4
a28 4
# If this is the target libiberty, check at compile time whether we are using
# newlib.  If we are, we already know the files we need, since the linker
# will fail when run on some of the newlib targets.
if [ -n "${with_target_subdir}" ] ; then
a37 1
	  echo "#define NEED_strsignal 1" >>xconfig.h; \
d46 1
a46 1
	  echo insque.o random.o strdup.o alloca.o vasprintf.o >xneeded-list; \
d58 2
a59 11
# We need multilib support, but only if configuring for the target.
if [ -n "${with_target_subdir}" ] ; then
  if [ "${srcdir}" = "." ] ; then
    if [ "${with_target_subdir}" != "." ] ; then
      . ${with_multisrctop}../../config-ml.in
    else
      . ${with_multisrctop}../config-ml.in
    fi
  else
    . ${srcdir}/../config-ml.in
  fi
d61 3
@

