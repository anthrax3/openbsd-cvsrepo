head	1.7;
access;
symbols
	OPENBSD_2_5:1.6.0.8
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.6
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.5.0.4
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5;
locks; strict;
comment	@# @;


1.7
date	99.05.26.16.36.30;	author espie;	state dead;
branches;
next	1.6;

1.6
date	97.06.30.15.00.21;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	96.06.03.07.36.29;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.05.13.11.32.30;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.03.28.07.31.07;	author etheisen;	state Exp;
branches;
next	1.2;

1.2
date	96.03.27.23.00.03;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.03.16.05.18.49;	author etheisen;	state Exp;
branches;
next	;


desc
@@


1.7
log
@old libg++, replaced by part of egcs.
@
text
@#	$OpenBSD: Makefile.bsd-wrapper,v 1.6 1997/06/30 15:00:21 kstailey Exp $

LIB=		iberty
CPPFLAGS+=	-I$(.CURDIR) -I$(.CURDIR)/../include -I$(.OBJDIR)

# XXX -- GNUism
# As we need to fill variables with contents of dynamically created files
# we must first see to that they are really generated.  This is a hack that
# ensures this.  The echo at the end is because make doesn't like command
# substitutions to not generate output.
.ifmake !obj && !clean && !cleandir
PREREQ!=	test ! -f $(.OBJDIR)/needed-list && \
			(cd $(.CURDIR); \
			 $(MAKE) -f Makefile.bsd-wrapper1); \
		echo 'Prerequistes made'
HOST_FILES!=	cat $(.OBJDIR)/needed-list
.endif

SRCS=		argv.c basename.c concat.c cplus-dem.c fdmatch.c \
		getopt.c getopt1.c getruntime.c hex.c \
		floatformat.c obstack.c spaces.c strerror.c strsignal.c \
		vasprintf.c xatexit.c xexit.c xmalloc.c xstrerror.c \
		$(HOST_FILES)

# XXX -- These files are generated during the PREREQ variable assignment.
CLEANFILES+=	alloca-conf.h config.h dummy dummy.o errors lconfig.h \
		lneeded-list needed-list needed.awk needed2.awk stamp-picdir

# XXX -- Why are these not removed by the generated Makefile?
CLEANFILES+=	insque.o  insque.po insque.so tmpnam.o  tmpnam.po tmpnam.so

.include <bsd.lib.mk>
@


1.6
log
@remove: insque.o  insque.po insque.so tmpnam.o  tmpnam.po tmpnam.so
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.5 1996/06/03 07:36:29 deraadt Exp $
@


1.5
log
@do not build special files for clean, cleandir, or obj
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.4 1996/05/13 11:32:30 niklas Exp $
d28 3
@


1.4
log
@Don't do PREREQ's when making obj.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.3 1996/03/28 07:31:07 etheisen Exp $
d11 1
a11 1
.ifnmake obj
@


1.3
log
@Moved GNU spec stuff into Makefile.bsd-wrapper1 using PREREQ variable.
This makes full BSD build support a reality for libiberty.  make obj
tags depends now works.  General cleanup and commenting.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.2 1996/03/27 23:00:03 niklas Exp $
d11 1
d17 1
@


1.2
log
@Misc. cleanup, esp. for obj-dirs, DESTDIR compilations and missing
dependencies.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.1 1996/03/16 05:18:49 etheisen Exp $
d6 11
a16 3
# You must do a GNU build and then examine needed-list
# and config.h to determine HOST_FILES value.
HOST_FILES=	insque.c
d23 3
a25 57
CLEANFILES+=	alloca-conf.h needed-list $(NEEDED_LIST) config.h needed.awk \
		needed2.awk errors dummy dummy.o

all: alloca-conf.h config.h needed-list

beforedepend: alloca-conf.h config.h needed-list

alloca-conf.h:
	@@echo Creating $(.TARGET) symlink
	@@ln -s $(.CURDIR)/alloca-norm.h alloca-conf.h

# The following is from the GNU makefile
NEEDED_LIST=	lneeded-list
EXTRA_OFILES=

needed-list: $(NEEDED_LIST)
	@@cp $(NEEDED_LIST) needed-list

lneeded-list: $(EXTRA_OFILES) needed.awk errors
	@@echo Generating needed-list
	@@rm -f lneeded-list
	@@f=""; \
	for i in `awk -f needed.awk <errors` $(EXTRA_OFILES) ; do \
	  case " $$f " in \
	    *" $$i "*) ;; \
	    *) f="$$f $$i" ;; \
	  esac ; \
	done ; \
	echo $$f >>lneeded-list

needed.awk: functions.def
	@@echo "# !Automatically generated from $(.CURDIR)/functions.def"\
	  "- DO NOT EDIT!" >needed.awk
	@@grep '^DEF(' < $(.CURDIR)/functions.def \
	    | sed -e '/DEF/s|DEF.\([^,]*\).*|/\1/ { printf "\1.o " }|' \
	    >>needed.awk

config.h: needed2.awk errors
	@@echo Generating $(.TARGET)
	@@echo "/* !Automatically generated from $(.CURDIR)/functions.def"\
		"- DO NOT EDIT! */" >config.h
	@@awk -f needed2.awk <errors >>config.h

needed2.awk: functions.def
	@@echo "# !Automatically generated from $(.CURDIR)/functions.def"\
		"- DO NOT EDIT!" >needed2.awk
	@@grep '^DEFVAR(' < $(.CURDIR)/functions.def \
		| sed -e '/DEFVAR/s|DEFVAR.\([^,]*\).*|/\1/ { printf "#ifndef NEED_\1\\n#define NEED_\1\\n#endif\\n" }|'  >>needed2.awk
	@@grep '^DEFFUNC(' < $(.CURDIR)/functions.def \
		| sed -e '/DEFFUNC/s|DEFFUNC.\([^,]*\).*|/\1/ { printf "#ifndef NEED_\1\\n#define NEED_\1\\n#endif\\n" }|' >>needed2.awk

dummy.o: dummy.c alloca-conf.h functions.def
	@@echo Generating $(.TARGET)
	@@$(CC) -c $(CFLAGS) $(CPPFLAGS) $(.IMPSRC) 2>/dev/null

errors: dummy.o
	@@-($(CC) -o dummy $(CFLAGS) $(LDFLAGS) dummy.o) >errors 2>&1 || true
@


1.1
log
@Allow native BSD build of libg++ 2.7.1.  This is a complete replacement of
the GNU build procedure, not a wrapper.  Generates standard, profiled,
shared object, and shared library versions of libiberty, libstdc++, and
libg++.  libiberty version 0.0, libstdc++ version 27.1, and libg++ version
27.1.  Requires modification of bsd.subdir.mk pmake include.  Targets
linked with the shared libraries libstdc++ and libg++ will, by default,
automatically be run time linked with libm and libcurses.
@
text
@d1 1
a1 1
#	$OpenBSD$
d66 1
a66 1
dummy.o: dummy.c functions.def
@
