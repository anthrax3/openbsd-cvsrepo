head	1.12;
access;
symbols
	OPENBSD_2_5:1.11.0.4
	OPENBSD_2_5_BASE:1.11
	OPENBSD_2_4:1.11.0.2
	OPENBSD_2_4_BASE:1.11
	OPENBSD_2_3:1.9.0.2
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6;
locks; strict;
comment	@# @;


1.12
date	99.05.26.16.34.00;	author espie;	state dead;
branches;
next	1.11;

1.11
date	98.09.20.03.27.17;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	98.06.07.23.22.11;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	98.03.03.21.40.15;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.06.06.17.41.29;	author grr;	state Exp;
branches;
next	1.7;

1.7
date	97.02.21.07.33.21;	author tholo;	state Exp;
branches;
next	1.6;

1.6
date	96.09.22.22.27.43;	author etheisen;	state Exp;
branches;
next	1.5;

1.5
date	96.07.31.18.27.40;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.05.22.08.56.02;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.05.19.21.48.28;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.03.26.00.27.38;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.03.16.05.18.44;	author etheisen;	state Exp;
branches;
next	;


desc
@@


1.12
log
@old libg++, replaced by part of egcs.
@
text
@#	$OpenBSD: Makefile.bsd-wrapper,v 1.11 1998/09/20 03:27:17 millert Exp $

.if defined(OBJMACHINE)
OBJDIR=	obj.${MACHINE}
.else
OBJDIR=	obj
.endif

RX_DIR=		$(.CURDIR)/../librx

RX_OBJDIR!=	if [ -d $(RX_DIR)/$(OBJDIR) ]; then \
			echo $(RX_DIR)/$(OBJDIR); \
		else \
			echo $(RX_DIR); \
		fi

LIBIO_DIR=	$(.CURDIR)/../libio

LIBIO_OBJDIR!=	if [ -d $(LIBIO_DIR)/$(OBJDIR) ]; then \
			echo $(LIBIO_DIR)/$(OBJDIR); \
		else \
			echo $(LIBIO_DIR); \
		fi

VERSION = 2.8.0
LIBG++_DIST_VERSION = 2.8.0

.PATH:		$(.CURDIR)/src

SUBDIR=		gperf genclass

LIB=		g++
CXXFLAGS+=	-fno-implicit-templates
CPPFLAGS+=	-I. -I$(.CURDIR)/src -I$(.CURDIR)/../libio \
		-I$(.CURDIR)/../libstdc++ -I$(LIBIO_OBJDIR)
LDADD+=		-lcurses

REGEX_OBJ=
CXXSRCS=	AllocRing.cc Obstack.cc builtin.cc $(REGEX_OBJ) Regex.cc \
		String.cc Intdouble.cc Integer.cc Rational.cc Random.cc \
		BitSet.cc BitString.cc LogNorm.cc SmplHist.cc SmplStat.cc \
		Normal.cc NegExp.cc Weibull.cc Erlang.cc DiscUnif.cc \
		Uniform.cc Poisson.cc HypGeom.cc Geom.cc Binomial.cc RNG.cc \
		ACG.cc MLCG.cc  RndInt.cc Fix.cc Fix16.cc Fix24.cc \
		CursesW.cc GetOpt.cc error.cc gcd.cc hash.cc lg.cc \
		fmtq.cc ioob.cc pow.cc sqrt.cc compare.cc SLList.cc DLList.cc
CXXOBJS=	$(CXXSRCS:N*.h:R:S/$/.o/g)
CSRCS=		bitand.c bitany.c bitblt.c bitclear.c bitcopy.c bitcount.c \
		bitinvert.c bitlcomp.c bitset1.c bitxor.c timer.c
COBJS=		$(CSRCS:N*.h:R:S/$/.o/g)
GXXOBJS=	$(CXXOBJS) $(COBJS)

RXOBJ=		$(RX_OBJDIR)/rx.o

G_CFG_H=	$(LIBIO_OBJDIR)/_G_config.h

SRCS=		$(CXXSRCS) $(CSRCS)

OBJS=		$(RXOBJ)

CLEANFILES+=	rx.h

all:		rx.h $(G_CFG_H)

beforedepend:	rx.h $(G_CFG_H)

rx.h:
	ln -sf $(RX_DIR)/rx.h

$(G_CFG_H):
	@@cd $(LIBIO_DIR); $(MAKE) -f Makefile.bsd-wrapper _G_config.h

$(RXOBJ) $(RXOBJ:.o=.po) $(RXOBJ:.o=.so):
	cd $(RX_DIR); $(MAKE) -f Makefile.bsd-wrapper

clean: _SUBDIRUSE
	rm -f a.out [Ee]rrs mklog core *.core ${CLEANFILES}
	rm -f lib${LIB}.a ${GXXOBJS}
	rm -f lib${LIB}_p.a ${GXXOBJS:.o=.po}
	rm -f lib${LIB}_pic.a lib${LIB}.so.*.* ${GXXOBJS:.o=.so}
	rm -f llib-l${LIB}.ln ${GXXOBJS:.o=.ln}

afterinstall:
	@@-cd $(.CURDIR); for i in libg++.info*; do \
		cmp -s $$i $(DESTDIR)/usr/share/info/$$i || \
		$(INSTALL) -c -o $(BINOWN) -g $(BINGRP) -m $(NONBINMODE) \
		$$i $(DESTDIR)/usr/share/info/$$i; \
	done

includes:
	@@-$(INSTALL) -d -m 755 -o $(BINOWN) -g $(BINGRP) $(DESTDIR)/usr/include/g++/gen
	@@-cd $(.CURDIR)/src; for i in *.h gen/*.ccP gen/*.hP; do \
		cmp -s $$i $(DESTDIR)/usr/include/g++/$$i || \
		$(INSTALL) -c -o $(BINOWN) -g $(BINGRP) -m $(NONBINMODE) \
		$$i $(DESTDIR)/usr/include/g++/$$i; \
	done

.if defined(DESTDIR)
CPPFLAGS+= -idirafter ${DESTDIR}/usr/include/g++
.endif

.include <bsd.lib.mk>
@


1.11
log
@Append "-idirafter ${DESTDIR}/usr/include/g++" to CPPFLAGS if DESTDIR is
specified so we can find gcc-installed c++ includes.  dm@@openbsd.org
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.10 1998/06/07 23:22:11 millert Exp $
@


1.10
log
@$(INSTALL) not install
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.9 1998/03/03 21:40:15 millert Exp $
d98 3
@


1.9
log
@libg++ 2.8.0 from FSF + changes to build in an OpenBSD environment
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.8 1997/06/06 17:41:29 grr Exp $
d86 1
a86 1
		install -c -o $(BINOWN) -g $(BINGRP) -m $(NONBINMODE) \
d91 1
a91 1
	@@-install -d -m 755 -o $(BINOWN) -g $(BINGRP) $(DESTDIR)/usr/include/g++/gen
d94 1
a94 1
		install -c -o $(BINOWN) -g $(BINGRP) -m $(NONBINMODE) \
@


1.8
log
@fix a problem where make works once and fails on a second try due to some symlink already existing
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.7 1997/02/21 07:33:21 tholo Exp $
d25 2
a26 2
VERSION = 2.7.1
LIBG++_DIST_VERSION = 2.7.1
d38 1
d45 2
a46 3
		CursesW.cc GetOpt.cc chr.cc error.cc gcd.cc hash.cc lg.cc \
		fmtq.cc ioob.cc pow.cc sqrt.cc str.cc compare.cc \
		SLList.cc DLList.cc
d89 3
@


1.7
log
@ld(1) now works; link shared library against -lcurses again
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.6 1996/09/22 22:27:43 etheisen Exp $
d68 1
a68 1
	ln -s $(RX_DIR)/rx.h
@


1.6
log
@ld is broken when handling weak symbols in shared libararies.  This is
a quick workaround to allow libg++ to build.

WARNING: If you use libg++, you must EXPLICIDLY link against libcurses,
even if you don't use curses.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.5 1996/07/31 18:27:40 deraadt Exp $
d36 1
a36 1
#LDADD+=		-lcurses
@


1.5
log
@rely on mtree
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.4 1996/05/22 08:56:02 niklas Exp $
d36 1
a36 1
LDADD+=		-lcurses
@


1.4
log
@A possible make recursion case blown away
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.3 1996/05/19 21:48:28 niklas Exp $
a83 2
	install -d -m 755 -o $(BINOWN) -g $(BINGRP) \
		$(DESTDIR)/usr/include/g++/gen
@


1.3
log
@The former build assumed either no separate objdirs, or objdir links to a
separate equivalent hierarchy.  There are two cases where this does not hold:
1. When the objdirs are real directories in the src tree, i.e. not links.
2. When OBJMACHINE is set.
Fix these remaining cases.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.2 1996/03/26 00:27:38 niklas Exp $
d30 1
a30 1
SUBDIR+=	gperf genclass
@


1.2
log
@Make "make obj" work, make builds to obj directories work.  Don't put
object files in SRCS variables, add them to OBJS instead.  Also
explicitly mention -lg++ because g++ won't use the -L path for getting
libg++ unless done via the command line.
@
text
@d1 23
a23 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.1 1996/03/16 05:18:44 etheisen Exp $
d35 1
a35 1
		-I$(.CURDIR)/../libstdc++ -I../libio
a52 14
.if defined(OBJMACHINE)
OBJDIR=	obj.${MACHINE}
.else
OBJDIR=	obj
.endif

RX_DIR=		$(.CURDIR)/../librx

RX_OBJDIR!=	if [ -d $(RX_DIR)/$(OBJDIR) ]; then \
			echo $(RX_DIR)/$(OBJDIR); \
		else \
			echo $(RX_DIR); \
		fi

a54 8
LIBIO_DIR=	$(.CURDIR)/../libio

LIBIO_OBJDIR!=	if [ -d $(LIBIO_DIR)/$(OBJDIR) ]; then \
			echo $(LIBIO_DIR)/$(OBJDIR); \
		else \
			echo $(LIBIO_DIR); \
		fi

d98 1
a98 1
.include <bsd.lib.mk>@


1.1
log
@Allow native BSD build of libg++ 2.7.1.  This is a complete replacement of
the GNU build procedure, not a wrapper.  Generates standard, profiled,
shared object, and shared library versions of libiberty, libstdc++, and
libg++.  libiberty version 0.0, libstdc++ version 27.1, and libg++ version
27.1.  Requires modification of bsd.subdir.mk pmake include.  Targets
linked with the shared libraries libstdc++ and libg++ will, by default,
automatically be run time linked with libm and libcurses.
@
text
@d1 1
a1 1
#	$OpenBSD$
d31 5
a35 4
RX_DIR=		../librx
RXOBJ=		$(RX_DIR)/rx.o
LIBIO_DIR=	../libio
G_CFG_H=	$(LIBIO)/_G_config.h
d37 23
a59 1
SRCS=		$(CXXSRCS) $(CSRCS) $(RXOBJ)
d68 1
a68 1
	ln -s $(.CURDIR)/../librx/rx.h
d71 1
a71 1
	@@cd $(.CURDIR)/../libio; $(MAKE) -f Makefile.bsd-wrapper _G_config.h
d74 1
a74 1
	cd $(.CURDIR)/../$(RX_DIR); $(MAKE) -f Makefile.bsd-wrapper
@

