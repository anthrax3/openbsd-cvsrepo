head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	FSF_2_8_0:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	99.05.26.16.34.21;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.03.15.22.17.57;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.15.22.17.57;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old libg++, replaced by part of egcs.
@
text
@// -*- C++ -*-
#ifndef eGetOpt_h
#pragma interface
#define eGetOpt_h 1

#include <GetOpt.h>
#include <String.h>

// eGetOpt is a subclass of GetOpt which provides functions for
// handling arguments to the options.

class eGetOpt : public GetOpt
{
public:
  eGetOpt (int argc, char **argv, char *optstring) 
    : GetOpt(argc,argv,optstring) {}

  // first_char returns the first character of the argument.

  int first_char () { return nargv[optind][0];};

  // next_arg looks at next argument for an interger, double or string
  // depending on the type of argument given to it. If the correct type is
  // found, the value is set and next_arg returns 1.  If the type is not
  // correct, next_arg returns 0.
  
  // double arguments start with a digit, plus, minus or period.
  // integer arguments start with a digit.
  // String arguments have no restriction.

  // If the next argument is an integer, set the reference variable to it
  // and increment the index to the options.  Return 1 if an integer is
  // found, else return 0.
  
  int next_arg (int &i);
  int next_arg (double &d);
  int next_arg (String &s);
};

#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of GNU libg++ 2.7.1 port (prepared by Erik Theisen)
@
text
@@

