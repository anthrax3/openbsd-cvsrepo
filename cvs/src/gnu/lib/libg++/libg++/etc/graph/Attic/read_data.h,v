head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	FSF_2_8_0:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	99.05.26.16.34.22;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.03.15.22.17.58;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.15.22.17.58;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old libg++, replaced by part of egcs.
@
text
@// -*- C++ -*-
// READ_DATA reads ascii (or binary) data from an istream (or File) of
// coordinates and labels.  It passes back the array of points (x, y,
// and label) containing the data.

#ifndef read_data_h
#define read_data_h 1

#include <stream.h>
#include <String.h>
#include <ctype.h>
#include "pXPlex.h"
#include <float.h>

#define sp <<" "<<
#define nl <<"\n"

// data_type value indicates the type of data present in the input files.
typedef enum { ASCII, DOUBLE, INT } data_type;

// read ascii binary data from a file
void
read_data (istream& in, char* in_filename, pointXPlex &pplex,
	   int auto_abscissa, double x_start,
	   double delta_x, int &symbol_number,
	   data_type input_data, int switch_symbols);
#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of GNU libg++ 2.7.1 port (prepared by Erik Theisen)
@
text
@@

