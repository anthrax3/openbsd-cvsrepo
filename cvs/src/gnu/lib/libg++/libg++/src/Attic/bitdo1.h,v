head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	FSF_2_8_0:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	99.05.26.16.35.19;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.03.15.22.18.39;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.15.22.18.39;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old libg++, replaced by part of egcs.
@
text
@#ifndef ONES
#define ONES  ((_BS_word)(~0L))
#endif
  register int nwords;
  register _BS_word mask;
  if (offset == 0)
    ;
  else if (offset + length >= _BS_BITS_PER_WORD)
    {
      mask = ONES _BS_RIGHT offset;
      DOIT(*ptr++, mask);
      length -= _BS_BITS_PER_WORD - offset;
    }
  else
    {
      mask = (ONES _BS_RIGHT (_BS_BITS_PER_WORD - length))
	_BS_LEFT (_BS_BITS_PER_WORD - length - offset);
      DOIT(*ptr, mask);
      goto done;
    }
  nwords = _BS_INDEX(length);
  while (--nwords >= 0)
   {
     DOIT(*ptr++, ONES);
   }
  length = _BS_POS (length);
  if (length)
    {
      mask = ONES _BS_LEFT (_BS_BITS_PER_WORD - length);
      DOIT(*ptr, mask);
    }
 done: ;
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of GNU libg++ 2.7.1 port (prepared by Erik Theisen)
@
text
@@

