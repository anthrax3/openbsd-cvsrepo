head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.2.0.6
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.4
	OPENBSD_2_4_BASE:1.1.1.2
	OPENBSD_2_3:1.1.1.2.0.2
	OPENBSD_2_3_BASE:1.1.1.2
	FSF_2_8_0:1.1.1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.05.26.16.35.22;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.03.15.22.18.41;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.15.22.18.41;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.03.03.20.18.45;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old libg++, replaced by part of egcs.
@
text
@# This file is a shell script fragment that supplies the information
# necessary to tailor a template configure script into the configure
# script appropriate for this directory.  For more information, check
# any existing configure script.

configdirs=""
srctrigger=Integer.cc
srcname="main libio sources files"

target_makefile_frag=../target-mkfrag
package_makefile_frag=Make.pack

# per-host:

# per-target:

LIBDIR=yes
TOLIBGXX=../
ALL='$(OBJS)'
EXTRA_DISTCLEAN=rx.h
MOSTLYCLEAN='*.o pic stamp-picdir core libgxx.list'
XCINCLUDES='-I$(MULTITOP)/../../libio'

(. ${srcdir}/../config.shared) >${package_makefile_frag}

files=../../librx/rx.h
links=rx.h

# post-target:

rm -f ${package_makefile_frag}

# We need multilib support.
. ${srcdir}/../../cfg-ml-pos.in
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of GNU libg++ 2.7.1 port (prepared by Erik Theisen)
@
text
@@


1.1.1.2
log
@libg++ 2.8.0 baseline import
@
text
@d19 1
a19 1
ALL=libgxx.list
d22 1
a22 1
XCINCLUDES='-I../../libio'
d26 1
a26 23
case "${target}" in
  *-*-linux*)
cat > dummy.c <<EOF
#include <rx.h>
EOF
    files=`${CC-cc} -M dummy.c 2> /dev/null | grep rx.h | sed -e 's/.*[ 	]\([^ 	]*rx.h\).*/\1/'`
    if [ x"${files}"x = xx ]
    then
cat > dummy.c <<EOF
#include <regex.h>
EOF
      files=`${CC-cc} -M dummy.c 2> /dev/null | grep regex.h | sed -e 's/.*[ 	]\([^ 	]*regex.h\).*/\1/'`
      if [ x"${files}"x = xx ]
      then
	files=../../librx/rx.h
      fi
    fi
    rm -f dummy.c
    ;;
  *)
    files=../../librx/rx.h
    ;;
esac
d34 1
a34 12
case ${srcdir} in
.)
  if [ "${with_target_subdir}" != "." ] ; then
    . ${srcdir}/${with_multisrctop}../../../config-ml.in
  else
    . ${srcdir}/${with_multisrctop}../../config-ml.in
  fi
  ;;
*)
  . ${srcdir}/../../config-ml.in
  ;;
esac
@

