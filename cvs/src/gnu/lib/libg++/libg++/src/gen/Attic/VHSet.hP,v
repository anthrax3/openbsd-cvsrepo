head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	FSF_2_8_0:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.05.26.16.35.52;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.03.15.22.19.00;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.15.22.19.00;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old libg++, replaced by part of egcs.
@
text
@// This may look like C code, but it is really -*- C++ -*-
/* 
Copyright (C) 1988 Free Software Foundation
    written by Doug Lea (dl@@rocky.oswego.edu)

This file is part of the GNU C++ Library.  This library is free
software; you can redistribute it and/or modify it under the terms of
the GNU Library General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your
option) any later version.  This library is distributed in the hope
that it will be useful, but WITHOUT ANY WARRANTY; without even the
implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.  See the GNU Library General Public License for more details.
You should have received a copy of the GNU Library General Public
License along with this library; if not, write to the Free Software
Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
*/


#ifndef _<T>VHSet_h
#ifdef __GNUG__
#pragma interface
#endif
#define _<T>VHSet_h 1

#include "<T>.Set.h"



class <T>VHSet : public <T>Set
{
protected:
  <T>*          tab;
  char*         status;
  unsigned int  size;

public:
                <T>VHSet(unsigned int sz = DEFAULT_INITIAL_CAPACITY);
                <T>VHSet(<T>VHSet& a);
  inline               ~<T>VHSet();

  Pix           add(<T&> item);
  void          del(<T&> item);
  inline int           contains(<T&> item);

  void          clear();

  Pix           first();
  void          next(Pix& i);
  inline <T>&          operator () (Pix i);
  Pix           seek(<T&> item);

  void          operator |= (<T>VHSet& b);
  void          operator -= (<T>VHSet& b);
  void          operator &= (<T>VHSet& b);

  int           operator == (<T>VHSet& b);
  int           operator != (<T>VHSet& b);
  int           operator <= (<T>VHSet& b); 

  int           capacity();
  void          resize(unsigned int newsize = 0);

  int           OK();
};


inline <T>VHSet::~<T>VHSet()
{
  delete [] tab;
  delete status;
}


inline int <T>VHSet::capacity()
{
  return size;
}

inline int <T>VHSet::contains(<T&> key)
{
  return seek(key) != 0;
}

inline <T>& <T>VHSet::operator () (Pix i)
{
  if (i == 0) error("null Pix");
  return *((<T>*)i);
}

inline int <T>VHSet::operator != (<T>VHSet& b)
{
  return ! ((*this) == b);
}

#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of GNU libg++ 2.7.1 port (prepared by Erik Theisen)
@
text
@@

