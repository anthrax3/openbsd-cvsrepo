head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	FSF_2_8_0:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.05.26.16.36.26;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.03.15.22.19.21;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.15.22.19.21;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old libg++, replaced by part of egcs.
@
text
@
   PROCEDURE pat_replace (
      oldstring, !
      newstring)  !
      LOCAL range2, count ;
      position (beginning_of (current_buffer)) ;
      count := 0 ;
      LOOP
         range2 := search_quietly (oldstring, FORWARD, EXACT) ;
         EXITIF range2 = 0 ;
         position (beginning_of (range2)) ;
         erase (range2) ;
         copy_text (newstring) ;
         count := count + 1 ;
         ENDLOOP ;
      IF (count > 0) THEN
         message (fao('Replaced pattern !UL time!%S', count)) ;
      ENDIF ;
   ENDPROCEDURE ;
    
   new_string1 := read_line ("type1: ") ;
   new_file1 := substr(new_string1,1,1) ;
   mode_string1 := read_line ("type&1: ") ;
   new_string2 := read_line ("type2: ") ;
   new_file2 := substr(new_string2,1,0) ;
   mode_string2 := read_line ("type&2: ") ;
   filename := GET_INFO (COMMAND_LINE, 'file_name') ;
   LOOP
      exp_filename := FILE_SEARCH (filename) ;
      EXITIF exp_filename = "" ;
      mainbuffer := CREATE_BUFFER (exp_filename, exp_filename) ;
      position (mainbuffer) ;
      execute ("pat_replace (""<T>."",new_file1)") ;
      execute ("pat_replace (""<T>"", new_string1)") ;
      execute ("pat_replace (""<T&>"",mode_string1)") ;
      IF LENGTH (new_string2) > 0
        THEN
        execute ("pat_replace (""<C>."", new_file2)") ;
        execute ("pat_replace (""<C>"", new_string2)") ;
        execute ("pat_replace (""<C&>"",mode_string2)") ;
        ENDIF;
      IF get_info (mainbuffer, "modified") THEN
         write_file (mainbuffer)
      ELSE
         message ('No changes made.') ENDIF ;
      delete (mainbuffer) ;
      ENDLOOP ;
   quit ;

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of GNU libg++ 2.7.1 port (prepared by Erik Theisen)
@
text
@@

