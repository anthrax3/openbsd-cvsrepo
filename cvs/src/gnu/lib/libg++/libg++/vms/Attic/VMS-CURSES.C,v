head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	FSF_2_8_0:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	99.05.26.16.36.27;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.03.15.22.19.21;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.15.22.19.21;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old libg++, replaced by part of egcs.
@
text
@/* These are routines that are used in various places within libg++, which
   do not actually appear within curses anywhere.  */

struct	_kb_st
{
	int	_id;
	unsigned char	_flags;
};

struct _kb_st * stdkb __asm("_$$PsectAttributes_NOSHR$$stdkb");

extern int stdscr; /* This is the wrong type, but it does not matter.  */

mvcur(int ly,int lx,int ny,int nx)
{
	wmove (stdscr, ny, nx);
}

_setecho(int i)
{
	if(i) stdkb->_flags &= ~1;
	else stdkb->_flags |= 1;
}

_setnonl(int i)
{
	if(i) stdkb->_flags &= ~2;
	else stdkb->_flags |= 2;
}


cbreak()
{
	stdkb->_flags &= ~4;
	stdkb->_flags |= 2;
}

nocbreak()
{
	stdkb->_flags |= 4;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of GNU libg++ 2.7.1 port (prepared by Erik Theisen)
@
text
@@

