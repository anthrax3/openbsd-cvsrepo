head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	FSF_2_8_0:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.05.26.16.38.53;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.03.15.22.20.39;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.15.22.20.39;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old libg++, replaced by part of egcs.
@
text
@double_complex one = (1,0)
i = (0,1)
neg_one = (-1,0)
sqrt(neg_one) = (0,1)
a = (2,3)
b = (4,5)
a + one = (3,3)
a - one = (1,3)
a * one = (2,3)
a / one = (2,3)
a + b = (6,8)
a - b = (-2,-2)
a * b = (-7,22)
a / b = (0.560976,0.0487805)
c = a; c += b = (6,8)
c = a; c -= b = (-2,-2)
c = a; c *= b = (-7,22)
c = a; c /= b = (0.560976,0.0487805)
-a = (-2,-3)
real(a) = 2
imag(a) = 3
conj(a) = (2,-3)
norm(a) = 13
abs(a) = 3.60555
arg(a) = 0.982794
cos(a) = (-4.18963,-9.10923)
sin(a) = (9.1545,-4.16891)
cosh(a) = (-3.72455,0.511823)
sinh(a) = (-3.59056,0.530921)
log(a) = (1.28247,0.982794)
exp(a) = (-7.31511,1.04274)
sqrt(a) = (1.67415,0.895977)
pow(a, 2) = (-5,12)
pow(a, b) = (-0.753046,-0.986429)
enter a complex number in form a or (a) or (a, b): number = (1.2,-34)

End of test
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of GNU libg++ 2.7.1 port (prepared by Erik Theisen)
@
text
@@

