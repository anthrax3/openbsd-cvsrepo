head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.2.0.6
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.4
	OPENBSD_2_4_BASE:1.1.1.2
	OPENBSD_2_3:1.1.1.2.0.2
	OPENBSD_2_3_BASE:1.1.1.2
	FSF_2_8_0:1.1.1.2
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	FSF_2_7_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.05.26.16.33.30;	author espie;	state dead;
branches;
next	1.1;

1.1
date	96.03.15.22.17.29;	author niklas;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.15.22.17.29;	author niklas;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.03.03.20.16.59;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old libg++, replaced by part of egcs.
@
text
@# Configuration fragment for Cygnus source tree.

# Check that we can find all the special tools that we will need.
# The test for sed is semi-pointless, because it's already been invoked
# by the calculation of target_cpu in the main configure script, but
# the test will also show which one is being used.

Set Exit 0
Echo byacc is `Which byacc`
Echo flex is `Which flex`
Echo forward-include is `Which forward-include`
Echo MoveIfChange is `Which MoveIfChange`
Echo open-brace is `Which open-brace`
Echo sed is `Which sed`
Echo mpw-touch is `Which mpw-touch`
Echo 'tr-7to8' is `Which tr-7to8`
Set Exit 1

Set host_libs "libiberty opcodes bfd readline"

Set host_tools "byacc flex binutils ld gas gcc gdb"

Set target_libs "newlib"

Set target_tools "examples"

Set configdirs "{host_libs} {host_tools} {target_libs} {target_tools}"
Export configdirs

# Make up a special include directory that tools will share.

If "`Exists "{objdir}"extra-include`" == ""
	NewFolder "{objdir}"extra-include
End If

Set edir "{objdir}extra-include:"

forward-include "{srcdir}"include:mpw:sys:file.h "{edir}"'sys/file.h'
forward-include "{srcdir}"include:mpw:sys:ioctl.h "{edir}"'sys/ioctl.h'
forward-include "{srcdir}"include:mpw:sys:param.h "{edir}"'sys/param.h'
forward-include "{srcdir}"include:mpw:sys:resource.h "{edir}"'sys/resource.h'
forward-include "{srcdir}"include:mpw:sys:stat.h "{edir}"'sys/stat.h'
forward-include "{srcdir}"include:mpw:sys:time.h "{edir}"'sys/time.h'
forward-include "{srcdir}"include:mpw:sys:types.h "{edir}"'sys/types.h'

forward-include "{srcroot}"include:aout:aout64.h "{edir}"'aout/aout64.h'
forward-include "{srcroot}"include:aout:ar.h "{edir}"'aout/ar.h'
forward-include "{srcroot}"include:aout:ranlib.h "{edir}"'aout/ranlib.h'
forward-include "{srcroot}"include:aout:reloc.h "{edir}"'aout/reloc.h'
forward-include "{srcroot}"include:aout:stab.def "{edir}"'aout/stab.def'
forward-include "{srcroot}"include:aout:stab_gnu.h "{edir}"'aout/stab_gnu.h'

If "`Exists "{srcroot}"include:aout:"{target_cpu}".h`" != ""
	forward-include "{srcroot}"include:aout:"{target_cpu}".h "{edir}"'aout/'"{target_cpu}"'.h'
End If

forward-include "{srcroot}"include:coff:ecoff.h "{edir}"'coff/ecoff.h'
forward-include "{srcroot}"include:coff:internal.h "{edir}"'coff/internal.h'
forward-include "{srcroot}"include:coff:sym.h "{edir}"'coff/sym.h'
forward-include "{srcroot}"include:coff:symconst.h "{edir}"'coff/symconst.h'

If "`Exists "{srcroot}"include:coff:"{target_cpu}".h`" != ""
	forward-include "{srcroot}"include:coff:"{target_cpu}".h "{edir}"'coff/'"{target_cpu}"'.h'
End If
If "{target_cpu}" =~ /powerpc/
	forward-include "{srcroot}"include:coff:rs6000.h "{edir}"'coff/rs6000.h'
End If

forward-include "{srcroot}"include:elf:common.h "{edir}"'elf/common.h'
forward-include "{srcroot}"include:elf:dwarf.h "{edir}"'elf/dwarf.h'
forward-include "{srcroot}"include:elf:external.h "{edir}"'elf/external.h'
forward-include "{srcroot}"include:elf:internal.h "{edir}"'elf/internal.h'

# Believe it or not, GDB needs this for all targets.
forward-include "{srcroot}"include:elf:mips.h "{edir}"'elf/mips.h'

If "`Exists "{srcroot}"include:elf:"{target_cpu}".h`" != ""
	forward-include "{srcroot}"include:elf:"{target_cpu}".h "{edir}"'elf/'"{target_cpu}"'.h'
End If
If "{target_cpu}" =~ /powerpc/
	forward-include "{srcroot}"include:elf:ppc.h "{edir}"'elf/ppc.h'
End If

If "`Exists "{srcroot}"include:opcode:"{target_cpu}".h`" != ""
	forward-include "{srcroot}"include:opcode:"{target_cpu}".h "{edir}"'opcode/'"{target_cpu}"'.h'
End If
If "{target_cpu}" =~ /powerpc/
	forward-include "{srcroot}"include:opcode:ppc.h "{edir}"'opcode/ppc.h'
End If

# Add some bfd includes that get mentioned outside the bfd dir.
	
forward-include "{srcroot}"bfd:libcoff.h "{edir}"'bfd/libcoff.h'
forward-include "{srcroot}"bfd:libecoff.h "{edir}"'bfd/libecoff.h'

# Make the README more visible.

Catenate "{srcdir}"mpw-README > "{objdir}Read Me for MPW"
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of GNU libg++ 2.7.1 port (prepared by Erik Theisen)
@
text
@@


1.1.1.2
log
@libg++ 2.8.0 baseline import
@
text
@a12 4
Echo mpw-touch is `Which mpw-touch`
Echo mpw-true is `Which mpw-true`
Echo NewFolderRecursive is `Which NewFolderRecursive`
Echo null-command is `Which null-command`
d15 1
a16 1
Echo true is `Which true`
d19 1
a19 1
Set host_libs "mmalloc libiberty opcodes bfd readline gash tcl tk tclX"
d21 1
a21 5
Set host_tools "texinfo byacc flex bison binutils ld gas gcc gdb make patch \Option-d
	    prms send-pr gprof gdbtest tgas etc expect dejagnu sim bash \Option-d
	    m4 autoconf ispell grep diff rcs cvs fileutils shellutils time \Option-d
	    textutils wdiff find emacs emacs19 uudecode hello tar gzip indent \Option-d
	    recode release sed utils guile perl apache inet gawk"
a26 5
# Configure the resource compiler if targeting Macs.
If {target_os} =~ /macos/ || {target_os} =~ /mpw/
	Set host_tools "{host_tools} grez"
End If
	
a70 1
forward-include "{srcroot}"include:elf:dwarf2.h "{edir}"'elf/dwarf2.h'
d96 1
a96 1
# Translate random files into MPW-only character set.
d98 1
a98 2
tr-7to8 "{srcdir}"mpw-README > "{objdir}Read Me for MPW"
tr-7to8 "{srcdir}"mpw-install > "{objdir}"Install
@

