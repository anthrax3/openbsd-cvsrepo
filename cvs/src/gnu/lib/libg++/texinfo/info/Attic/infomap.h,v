head	1.4;
access;
symbols
	OPENBSD_2_5:1.3.0.6
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.4
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	FSF_2_8_0:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	99.05.26.16.39.25;	author espie;	state dead;
branches;
next	1.3;

1.3
date	98.03.03.21.48.32;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	98.03.03.20.41.38;	author millert;	state dead;
branches;
next	1.1;

1.1
date	98.03.03.20.25.13;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.03.20.25.13;	author millert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@old libg++, replaced by part of egcs.
@
text
@/* infomap.h -- Description of a keymap in Info and related functions. */

/* This file is part of GNU Info, a program for reading online documentation
   stored in Info format.

   Copyright (C) 1993 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

   Written by Brian Fox (bfox@@ai.mit.edu). */

#if !defined (_INFOMAP_H_)
#define _INFOMAP_H_

#include "general.h"

#define ESC '\033'
#define DEL '\177'
#define TAB '\011'	
#define RET '\r'
#define LFD '\n'
#define SPC ' '

#define meta_character_threshold (DEL + 1)
#define control_character_threshold (SPC)

#define meta_character_bit 0x80
#define control_character_bit 0x40

#define Meta_p(c) (((c) > meta_character_threshold))
#define Control_p(c) ((c) < control_character_threshold)

#define Meta(c) ((c) | (meta_character_bit))
#define UnMeta(c) ((c) & (~meta_character_bit))
#define Control(c) ((toupper (c)) & (~control_character_bit))
#define UnControl(c) (tolower ((c) | control_character_bit))

/* A keymap contains one entry for each key in the ASCII set.
   Each entry consists of a type and a pointer.
   FUNCTION is the address of a function to run, or the
   address of a keymap to indirect through.
   TYPE says which kind of thing FUNCTION is. */
typedef struct {
  char type;
  VFunction *function;
} KEYMAP_ENTRY;

typedef KEYMAP_ENTRY *Keymap;

/* The values that TYPE can have in a keymap entry. */
#define ISFUNC 0
#define ISKMAP 1

extern Keymap info_keymap;
extern Keymap echo_area_keymap;

/* Return a new keymap which has all the uppercase letters mapped to run
   the function info_do_lowercase_version (). */
extern Keymap keymap_make_keymap ();

/* Return a new keymap which is a copy of MAP. */
extern Keymap keymap_copy_keymap ();

/* Free MAP and it's descendents. */
extern void keymap_discard_keymap ();

/* Initialize the info keymaps. */
extern void initialize_info_keymaps ();

#endif /* !_INFOMAP_H_ */
@


1.3
log
@libg++ 2.8.0 from FSF + changes to build in an OpenBSD environment
@
text
@@


1.2
log
@Files from libg++ 2.8.0 that cvs erroneously placed in the trunk.
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@libg++ 2.8.0 baseline import
@
text
@@

