head	1.27;
access;
symbols
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.27.0.12
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.27.0.8
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.27.0.10
	OPENBSD_5_8_BASE:1.27
	OPENBSD_5_7:1.27.0.2
	OPENBSD_5_7_BASE:1.27
	OPENBSD_5_6:1.27.0.6
	OPENBSD_5_6_BASE:1.27
	OPENBSD_5_5:1.27.0.4
	OPENBSD_5_5_BASE:1.27
	OPENBSD_5_4:1.25.0.6
	OPENBSD_5_4_BASE:1.25
	OPENBSD_5_3:1.25.0.4
	OPENBSD_5_3_BASE:1.25
	OPENBSD_5_2:1.25.0.2
	OPENBSD_5_2_BASE:1.25
	OPENBSD_5_1_BASE:1.24
	OPENBSD_5_1:1.24.0.2
	OPENBSD_5_0:1.22.0.2
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.20.0.6
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.4
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.18.0.6
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.2
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.14.0.2
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.12.0.2
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.11.0.8
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.6
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.4
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.2
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.27
date	2013.10.24.07.34.56;	author guenther;	state Exp;
branches;
next	1.26;

1.26
date	2013.08.13.05.52.08;	author guenther;	state Exp;
branches;
next	1.25;

1.25
date	2012.07.17.21.26.56;	author matthew;	state Exp;
branches;
next	1.24;

1.24
date	2011.10.16.13.26.40;	author stsp;	state Exp;
branches;
next	1.23;

1.23
date	2011.09.19.19.36.32;	author naddy;	state Exp;
branches;
next	1.22;

1.22
date	2011.07.06.00.02.42;	author martynas;	state Exp;
branches;
next	1.21;

1.21
date	2011.04.28.17.41.37;	author stsp;	state Exp;
branches;
next	1.20;

1.20
date	2009.07.26.22.51.28;	author kurt;	state Exp;
branches;
next	1.19;

1.19
date	2009.07.25.02.04.01;	author kurt;	state Exp;
branches;
next	1.18;

1.18
date	2009.01.13.18.25.35;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2008.12.12.00.53.27;	author martynas;	state Exp;
branches;
next	1.16;

1.16
date	2008.12.09.20.39.37;	author martynas;	state Exp;
branches;
next	1.15;

1.15
date	2008.09.07.21.19.17;	author martynas;	state Exp;
branches;
next	1.14;

1.14
date	2008.07.24.15.51.07;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2008.05.27.18.53.39;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2007.09.03.14.41.32;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2006.01.13.17.51.53;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2005.06.17.20.40.31;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2005.05.11.18.36.17;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2005.04.30.11.36.40;	author kettenis;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.27.09.37.57;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2005.04.14.21.03.49;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2005.04.10.02.44.46;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.29.18.37.01;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2004.07.13.21.37.35;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.13.21.03.35;	author marc;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.05.15.55.55;	author espie;	state Exp;
branches;
next	;


desc
@@


1.27
log
@Align suseconds_t with POSIX: it's the type of the tv_usec member of timeval.
Use useconds_t in the ualarm() declaration.
Bump libstdc++ major to be sure there isn't ABI issues.

ok deraadt@@ jca@@ jmc@@ millert@@
ports testing by landry@@
@
text
@major=57
minor=0
@


1.26
log
@Switch time_t, ino_t, clock_t, and struct kevent's ident and data
members to 64bit types.  Assign new syscall numbers for (almost
all) the syscalls that involve the affected types, including anything
with time_t, timeval, itimerval, timespec, rusage, dirent, stat,
or kevent arguments.  Add a d_off member to struct dirent and replace
getdirentries() with getdents(), thus immensely simplifying and
accelerating telldir/seekdir.  Build perl with -DBIG_TIME.

Bump the major on every single base library: the compat bits included
here are only good enough to make the transition; the T32 compat
option will be burned as soon as we've reached the new world are
are happy with the snapshots for all architectures.

DANGER: ABI incompatibility.  Updating to this kernel requires extra
work or you won't be able to login: install a snapshot instead.

Much assistance in fixing userland issues from deraadt@@ and tedu@@
and build assistance from todd@@ and otto@@
@
text
@d1 1
a1 1
major=56
@


1.25
log
@martynas added support for the 'long double' math functions to libm at
c2k11, so libstdc++-v3 should make use of them.  Major version bump
for good measure, and sync libstdc++'s shlib_version with
libstdc++-v3's.

Issue pointed out by Roberto Bagnara on bugs@@
ok deraadt
@
text
@d1 1
a1 1
major=55
@


1.24
log
@Expose wscanf(3) and wcsftime(3) in the std:: namespace (gcc3) and bump major.
testing by naddy, final diff from kettenis
@
text
@d1 1
a1 1
major=53
@


1.23
log
@- enable thread model posix for gcc 3 which makes dwarf2 exception
handling thread safe and enables thread safety for libstdc++
- bump libstdc++ major

See faq/current.html for instructions on how to correctly build
userland for this change.

originally from kurt@@, ok miod@@
@
text
@d1 1
a1 1
major=52
@


1.22
log
@Finalize work on the math library.  It's time to do this monster
commit, and deal with problems (if any) in tree.

Note that this adds the following functions.  Ports with hacks might
need adjustments.

nexttoward(3), fma(3), nexttowardf(3), fmaf(3), acoshl(3), asinhl(3),
atanhl(3), coshl(3), sinhl(3), tanhl(3), expl(3), expm1l(3), logl(3),
log10l(3), log1pl(3), log2l(3), modfl(3), cbrtl(3), hypotl(3),
powl(3), erfl(3), erfcl(3), lgammal(3), tgammal(3), ceill(3),
floorl(3), lrintl(3), llrintl(3), roundl(3), lroundl(3), llroundl(3),
truncl(3), fmodl(3), remainderl(3), remquol(3), nextafterl(3),
nexttowardl(3), fmal(3).

With this commit, our library implements all functionality required
by C99.  Documentation bits will follow.
@
text
@d1 1
a1 1
major=51
@


1.21
log
@Expose wprintf and friends in the gcc3 libstdc++ std:: namespace.
Tested by naddy, thanks! Major bump for safety.
ok kettenis espie
@
text
@d1 1
a1 1
major=50
@


1.20
log
@- revert thread model posix since it broke the build for hppa. will revist
when all archs are fully tested and working.
- major bump libstdc++
@
text
@d1 1
a1 1
major=49
@


1.19
log
@- enable thread model posix for gcc 3 which makes dwarf2 exception
handling thread safe and enables thread safety for libstdc++
- include -D_REENTRANT when -pthread cpp arg is present (needed so
boost can detect -pthread on the command line).
- bump libstdc++ major

See faq/current.html for instructions on how to correctly build
userland for this change.

okay kettenis@@
@
text
@d1 1
a1 1
major=48
@


1.18
log
@steal some code from gcc 4.2, so that char_traits specializations start with
more default stuff.
as discussed with kettenis, landry, and others.
Allow some gnome stuff (gtk2mm) to compile, and does not break source
compatibility with the standard (well, not more than gcc 4.2 does)
@
text
@d1 1
a1 1
major=47
@


1.17
log
@bump major version, to be safe.  ok theo
@
text
@d1 1
a1 1
major=46
@


1.16
log
@libstdc++ (cmath) needs to handle integer arguments for the math
functions: acos, asin, atan, atan2, cos, cosh, exp, fabs, floor,
log, log10, sqrt, sin, sinh, tan, tanh
fixes quite some ports
tested by brad@@.   no objections millert@@
@
text
@d1 2
a2 2
major=45
minor=2
@


1.15
log
@bump minor.  ok kettenis@@
@
text
@d2 1
a2 1
minor=1
@


1.14
log
@bump because of __nan in math.h
@
text
@d2 1
a2 1
minor=0
@


1.13
log
@Cope with the changes in the libiberty C++ demangler, and crank minor version
as the demangler provides new interfaces.
@
text
@d1 2
a2 2
major=44
minor=1
@


1.12
log
@crank libc and libstdc++ majors
@
text
@d2 1
a2 1
minor=0
@


1.11
log
@Major number bump due to types changes.
@
text
@d1 1
a1 1
major=42
@


1.10
log
@
next citrus step.

reviewed by millert, otto, kevlo, naddy, kettenis...
libc+libstdc++ bump
@
text
@d1 1
a1 1
major=40
@


1.9
log
@use the ctype stuff in libc instead of re-rolling our own.
okay and comments from otto@@ (static cast) and kettenis@@.

Major bump.
@
text
@d1 1
a1 1
major=39
@


1.8
log
@Fix printing floating-point numbers.  Bump major number.
ok espie@@
@
text
@d1 1
a1 1
major=38
@


1.7
log
@allows snprintf and friends to be in std if we include cstdio.h
API addition -> minor bump.
(part of the strlcpy change okayed by otto@@ and friends, that's the
part that requires the bump)
@
text
@d1 2
a2 2
major=37
minor=1
@


1.6
log
@major bump:
- activate partial wchar_t support;
- kill old compatibility function that happens to use strcpy, poor guy.
@
text
@d2 1
a2 1
minor=0
@


1.5
log
@crank major -- it is CLEARLY needed; pval ok
@
text
@d1 1
a1 1
major=36
@


1.4
log
@Bump major version.
ok deraadt@@
@
text
@d1 1
a1 1
major=35
@


1.3
log
@bump these again, depending on gcc2/gcc3 a different library is installed
and they have different major numbers to prevent collision.
@
text
@d1 1
a1 1
major=34
@


1.2
log
@errno changes, lib major version bumps, and general flag day
To build you must:
cd /usr/src && make obj && make includes
cd lib/libc && make depend && make && NOMAN=1 sudo make install
cd /usr/src && make build
@
text
@d1 1
a1 1
major=33
@


1.1
log
@basic infrastructure for OpenBSD
@
text
@d1 1
a1 1
major=32
@

