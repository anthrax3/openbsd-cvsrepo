head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.04.14.06.01.40;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2004.12.30.17.35.27;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.24.22.33.13;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.29.19.27.19;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.02.29.19.27.19;	author drahn;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.24.22.07.32;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove libf2c, hasn't been built since it was moved to ports in 2010.
ok miod@@ espie@@
@
text
@/* Copyright (C) 1997, 2001 Free Software Foundation, Inc.
This file is part of GNU Fortran libU77 library.

This library is free software; you can redistribute it and/or modify it
under the terms of the GNU Library General Public License as published
by the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

GNU Fortran is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Library General Public License for more details.

You should have received a copy of the GNU Library General Public
License along with GNU Fortran; see the file COPYING.LIB.  If
not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#if HAVE_UNISTD_H
#  include <unistd.h>
#endif

#include <errno.h>		/* for ENOSYS */
#include "f2c.h"

#ifndef RETSIGTYPE
/* we shouldn't rely on this... */
#define RETSIGTYPE void
#endif
typedef RETSIGTYPE (*sig_type) ();

#include <signal.h>
typedef int (*sig_proc) (int);

#ifndef SIG_ERR
#define SIG_ERR ((sig_type) -1)
#endif

integer
G77_alarm_0 (integer * seconds, sig_proc proc)
{
  int status;
#if defined (HAVE_ALARM) && defined (SIGALRM)
  if (signal (SIGALRM, (sig_type) proc) == SIG_ERR)
    status = -1;
  else
    status = alarm (*seconds);
#else /* ! HAVE_ALARM || ! SIGALRM */
  errno = ENOSYS;
  status = -1;
#endif
  return status;
}
@


1.3
log
@Actual synch with 3.3.5.

Changes in Makefile.bsd-wrapper to avoid prereq.

Fix in lib*/config.h.in to include the right ones and get the correct
definitions.

Bump of shlib_version accordingly.
@
text
@@


1.2
log
@result from merge... highly weird, since dale mixed things up
and we're going back, as his libf2c 3.3.2 is actually libf2c 3.2.3.
@
text
@a31 3
#ifdef KR_headers
#define RETSIGTYPE int
#else
d34 1
a34 2
#endif
typedef RETSIGTYPE (*sig_type)();
a35 3
#ifdef KR_headers
extern sig_type signal();
#else
d37 1
a37 2
typedef int (*sig_proc)(int);
#endif
d43 2
a44 7
#ifdef KR_headers
integer G77_alarm_0 (seconds, proc)
     integer *seconds;
     sig_type proc;
#else
integer G77_alarm_0 (integer *seconds, sig_proc proc)
#endif
d48 1
a48 1
  if (signal(SIGALRM, (sig_type)proc) == SIG_ERR)
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of libf2c from gcc3.3.2
@
text
@@


1.1.1.2
log
@gcc 3.3.5 update
@
text
@d32 3
d37 2
a38 1
typedef RETSIGTYPE (*sig_type) ();
d40 3
d44 2
a45 1
typedef int (*sig_proc) (int);
d51 7
a57 2
integer
G77_alarm_0 (integer * seconds, sig_proc proc)
d61 1
a61 1
  if (signal (SIGALRM, (sig_type) proc) == SIG_ERR)
@

