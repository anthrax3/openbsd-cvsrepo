head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.04.14.06.01.40;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2004.12.30.17.35.28;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.24.22.33.14;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.29.19.27.24;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.02.29.19.27.24;	author drahn;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.24.22.07.31;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove libf2c, hasn't been built since it was moved to ports in 2010.
ok miod@@ espie@@
@
text
@/* Copyright (C) 1996, 1998, 2001 Free Software Foundation, Inc.
This file is part of GNU Fortran libU77 library.

This library is free software; you can redistribute it and/or modify it
under the terms of the GNU Library General Public License as published
by the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

GNU Fortran is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Library General Public License for more details.

You should have received a copy of the GNU Library General Public
License along with GNU Fortran; see the file COPYING.LIB.  If
not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif
#include <sys/types.h>
#if HAVE_SYS_PARAM_H
# include <sys/param.h>
#endif
#if TIME_WITH_SYS_TIME
# include <sys/time.h>
# include <time.h>
#else
# if HAVE_SYS_TIME_H
#  include <sys/time.h>
# else
#  include <time.h>
# endif
#endif
#if HAVE_SYS_TIMES_H
#  include <sys/times.h>
#endif
#include <limits.h>
#if HAVE_UNISTD_H
#  include <unistd.h>
#endif
#include <errno.h>		/* for ENOSYS */
#include "f2c.h"

int
G77_system_clock_0 (integer * count, integer * count_rate,
		    integer * count_max)
{
#if defined (HAVE_TIMES)
  struct tms buffer;
  unsigned long cnt;
  if (count_rate)
    {
#ifdef _SC_CLK_TCK
      *count_rate = sysconf (_SC_CLK_TCK);
#elif defined CLOCKS_PER_SECOND
      *count_rate = CLOCKS_PER_SECOND;
#elif defined CLK_TCK
      *count_rate = CLK_TCK;
#elif defined HZ
      *count_rate = HZ;
#else
#error Dont know clock tick length
#endif
    }
  if (count_max)		/* optional arg present? */
    *count_max = INT_MAX;	/* dubious */
  cnt = times (&buffer);
  if (cnt > (unsigned long) (INT_MAX))
    *count = INT_MAX;		/* also dubious */
  else
    *count = cnt;
  return 0;
#else /* ! HAVE_TIMES */
  errno = ENOSYS;
  return -1;
#endif /* ! HAVE_TIMES */
}
@


1.3
log
@Actual synch with 3.3.5.

Changes in Makefile.bsd-wrapper to avoid prereq.

Fix in lib*/config.h.in to include the right ones and get the correct
definitions.

Bump of shlib_version accordingly.
@
text
@@


1.2
log
@result from merge... highly weird, since dale mixed things up
and we're going back, as his libf2c 3.3.2 is actually libf2c 3.2.3.
@
text
@d46 3
a48 6
#ifdef KR_headers
int G77_system_clock_0 (count, count_rate, count_max)
     integer *count, *count_rate, *count_max;
#else
int G77_system_clock_0 (integer *count, integer *count_rate, integer *count_max)
#endif
d53 2
a54 1
  if (count_rate) {
d56 1
a56 1
    *count_rate = sysconf(_SC_CLK_TCK);
d58 1
a58 1
    *count_rate = CLOCKS_PER_SECOND;
d60 1
a60 1
    *count_rate = CLK_TCK;
d62 1
a62 1
    *count_rate = HZ;
d66 1
a66 1
  }
d68 1
a68 1
    *count_max = INT_MAX;		/* dubious */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of libf2c from gcc3.3.2
@
text
@@


1.1.1.2
log
@gcc 3.3.5 update
@
text
@d46 6
a51 3
int
G77_system_clock_0 (integer * count, integer * count_rate,
		    integer * count_max)
d56 1
a56 2
  if (count_rate)
    {
d58 1
a58 1
      *count_rate = sysconf (_SC_CLK_TCK);
d60 1
a60 1
      *count_rate = CLOCKS_PER_SECOND;
d62 1
a62 1
      *count_rate = CLK_TCK;
d64 1
a64 1
      *count_rate = HZ;
d68 1
a68 1
    }
d70 1
a70 1
    *count_max = INT_MAX;	/* dubious */
@

