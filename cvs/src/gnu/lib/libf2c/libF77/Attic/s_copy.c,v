head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.04.14.06.01.40;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2004.12.30.17.35.27;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.24.22.33.13;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.29.19.27.10;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.02.29.19.27.10;	author drahn;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.24.22.07.25;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove libf2c, hasn't been built since it was moved to ports in 2010.
ok miod@@ espie@@
@
text
@/* Unless compiled with -DNO_OVERWRITE, this variant of s_copy allows the
 * target of an assignment to appear on its right-hand side (contrary
 * to the Fortran 77 Standard, but in accordance with Fortran 90),
 * as in  a(2:5) = a(4:7) .
 */

#include "f2c.h"

/* assign strings:  a = b */

void
s_copy (register char *a, register char *b, ftnlen la, ftnlen lb)
{
  register char *aend, *bend;

  aend = a + la;

  if (la <= lb)
#ifndef NO_OVERWRITE
    if (a <= b || a >= b + la)
#endif
      while (a < aend)
	*a++ = *b++;
#ifndef NO_OVERWRITE
    else
      for (b += la; a < aend;)
	*--aend = *--b;
#endif

  else
    {
      bend = b + lb;
#ifndef NO_OVERWRITE
      if (a <= b || a >= bend)
#endif
	while (b < bend)
	  *a++ = *b++;
#ifndef NO_OVERWRITE
      else
	{
	  a += lb;
	  while (b < bend)
	    *--a = *--bend;
	  a += lb;
	}
#endif
      while (a < aend)
	*a++ = ' ';
    }
}
@


1.3
log
@Actual synch with 3.3.5.

Changes in Makefile.bsd-wrapper to avoid prereq.

Fix in lib*/config.h.in to include the right ones and get the correct
definitions.

Bump of shlib_version accordingly.
@
text
@@


1.2
log
@result from merge... highly weird, since dale mixed things up
and we're going back, as his libf2c 3.3.2 is actually libf2c 3.2.3.
@
text
@d11 2
a12 5
#ifdef KR_headers
VOID s_copy(a, b, la, lb) register char *a, *b; ftnlen la, lb;
#else
void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb)
#endif
d14 1
a14 1
	register char *aend, *bend;
d16 1
a16 1
	aend = a + la;
d18 1
a18 1
	if(la <= lb)
d20 1
a20 1
		if (a <= b || a >= b + la)
d22 2
a23 2
			while(a < aend)
				*a++ = *b++;
d25 3
a27 3
		else
			for(b += la; a < aend; )
				*--aend = *--b;
d30 3
a32 2
	else {
		bend = b + lb;
d34 1
a34 1
		if (a <= b || a >= bend)
d36 2
a37 2
			while(b < bend)
				*a++ = *b++;
d39 7
a45 6
		else {
			a += lb;
			while(b < bend)
				*--a = *--bend;
			a += lb;
			}
d47 4
a50 4
		while(a < aend)
			*a++ = ' ';
		}
	}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of libf2c from gcc3.3.2
@
text
@@


1.1.1.2
log
@gcc 3.3.5 update
@
text
@d11 5
a15 2
void
s_copy (register char *a, register char *b, ftnlen la, ftnlen lb)
d17 1
a17 1
  register char *aend, *bend;
d19 1
a19 1
  aend = a + la;
d21 1
a21 1
  if (la <= lb)
d23 1
a23 1
    if (a <= b || a >= b + la)
d25 2
a26 2
      while (a < aend)
	*a++ = *b++;
d28 3
a30 3
    else
      for (b += la; a < aend;)
	*--aend = *--b;
d33 2
a34 3
  else
    {
      bend = b + lb;
d36 1
a36 1
      if (a <= b || a >= bend)
d38 2
a39 2
	while (b < bend)
	  *a++ = *b++;
d41 10
a50 6
      else
	{
	  a += lb;
	  while (b < bend)
	    *--a = *--bend;
	  a += lb;
a51 5
#endif
      while (a < aend)
	*a++ = ' ';
    }
}
@

