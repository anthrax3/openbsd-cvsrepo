head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.04.14.06.01.40;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2004.12.30.17.35.27;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.24.22.33.13;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.29.19.27.10;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.02.29.19.27.10;	author drahn;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.24.22.07.25;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove libf2c, hasn't been built since it was moved to ports in 2010.
ok miod@@ espie@@
@
text
@#include "f2c.h"

#undef abs
#include "math.h"
extern double f__cabs (double, double);
void
z_log (doublecomplex * r, doublecomplex * z)
{
  double s, s0, t, t2, u, v;
  double zi = z->i, zr = z->r;

  r->i = atan2 (zi, zr);
#ifdef Pre20000310
  r->r = log (f__cabs (zr, zi));
#else
  if (zi < 0)
    zi = -zi;
  if (zr < 0)
    zr = -zr;
  if (zr < zi)
    {
      t = zi;
      zi = zr;
      zr = t;
    }
  t = zi / zr;
  s = zr * sqrt (1 + t * t);
  /* now s = f__cabs(zi,zr), and zr = |zr| >= |zi| = zi */
  if ((t = s - 1) < 0)
    t = -t;
  if (t > .01)
    r->r = log (s);
  else
    {

#ifdef Comment

      log (1 + x) = x - x ^ 2 / 2 + x ^ 3 / 3 - x ^ 4 / 4 + -...
	= x (1 - x / 2 + x ^ 2 / 3 - +...)
	[sqrt (y ^ 2 + z ^ 2) - 1] *[sqrt (y ^ 2 + z ^ 2) + 1] =
	y ^ 2 + z ^ 2 - 1, so sqrt (y ^ 2 + z ^ 2) - 1 =
	(y ^ 2 + z ^ 2 - 1) /[sqrt (y ^ 2 + z ^ 2) + 1]
#endif /*Comment */
	t = ((zr * zr - 1.) + zi * zi) / (s + 1);
      t2 = t * t;
      s = 1. - 0.5 * t;
      u = v = 1;
      do
	{
	  s0 = s;
	  u *= t2;
	  v += 2;
	  s += u / v - t * u / (v + 1);
	}
      while (s > s0);
      r->r = s * t;
    }
#endif
}
@


1.3
log
@Actual synch with 3.3.5.

Changes in Makefile.bsd-wrapper to avoid prereq.

Fix in lib*/config.h.in to include the right ones and get the correct
definitions.

Bump of shlib_version accordingly.
@
text
@@


1.2
log
@result from merge... highly weird, since dale mixed things up
and we're going back, as his libf2c 3.3.2 is actually libf2c 3.2.3.
@
text
@a2 4
#ifdef KR_headers
double log(), f__cabs(), atan2();
VOID z_log(r, z) doublecomplex *r, *z;
#else
d5 3
a7 3
extern double f__cabs(double, double);
void z_log(doublecomplex *r, doublecomplex *z)
#endif
d9 2
a10 2
	double s, s0, t, t2, u, v;
	double zi = z->i, zr = z->r;
d12 1
a12 1
	r->i = atan2(zi, zr);
d14 1
a14 1
	r->r = log( f__cabs( zr, zi ) );
d16 19
a34 17
	if (zi < 0)
		zi = -zi;
	if (zr < 0)
		zr = -zr;
	if (zr < zi) {
		t = zi;
		zi = zr;
		zr = t;
		}
	t = zi/zr;
	s = zr * sqrt(1 + t*t);
	/* now s = f__cabs(zi,zr), and zr = |zr| >= |zi| = zi */
	if ((t = s - 1) < 0)
		t = -t;
	if (t > .01)
		r->r = log(s);
	else {
d38 20
a57 22
	log(1+x) = x - x^2/2 + x^3/3 - x^4/4 + - ...

		 = x(1 - x/2 + x^2/3 -+...)

	[sqrt(y^2 + z^2) - 1] * [sqrt(y^2 + z^2) + 1] = y^2 + z^2 - 1, so

	sqrt(y^2 + z^2) - 1 = (y^2 + z^2 - 1) / [sqrt(y^2 + z^2) + 1]

#endif /*Comment*/

		t = ((zr*zr - 1.) + zi*zi) / (s + 1);
		t2 = t*t;
		s = 1. - 0.5*t;
		u = v = 1;
		do {
			s0 = s;
			u *= t2;
			v += 2;
			s += u/v - t*u/(v+1);
			} while(s > s0);
		r->r = s*t;
		}
d59 1
a59 1
	}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of libf2c from gcc3.3.2
@
text
@@


1.1.1.2
log
@gcc 3.3.5 update
@
text
@d3 4
d9 3
a11 3
extern double f__cabs (double, double);
void
z_log (doublecomplex * r, doublecomplex * z)
d13 2
a14 2
  double s, s0, t, t2, u, v;
  double zi = z->i, zr = z->r;
d16 1
a16 1
  r->i = atan2 (zi, zr);
d18 1
a18 1
  r->r = log (f__cabs (zr, zi));
d20 17
a36 19
  if (zi < 0)
    zi = -zi;
  if (zr < 0)
    zr = -zr;
  if (zr < zi)
    {
      t = zi;
      zi = zr;
      zr = t;
    }
  t = zi / zr;
  s = zr * sqrt (1 + t * t);
  /* now s = f__cabs(zi,zr), and zr = |zr| >= |zi| = zi */
  if ((t = s - 1) < 0)
    t = -t;
  if (t > .01)
    r->r = log (s);
  else
    {
d40 23
a62 16
      log (1 + x) = x - x ^ 2 / 2 + x ^ 3 / 3 - x ^ 4 / 4 + -...
	= x (1 - x / 2 + x ^ 2 / 3 - +...)
	[sqrt (y ^ 2 + z ^ 2) - 1] *[sqrt (y ^ 2 + z ^ 2) + 1] =
	y ^ 2 + z ^ 2 - 1, so sqrt (y ^ 2 + z ^ 2) - 1 =
	(y ^ 2 + z ^ 2 - 1) /[sqrt (y ^ 2 + z ^ 2) + 1]
#endif /*Comment */
	t = ((zr * zr - 1.) + zi * zi) / (s + 1);
      t2 = t * t;
      s = 1. - 0.5 * t;
      u = v = 1;
      do
	{
	  s0 = s;
	  u *= t2;
	  v += 2;
	  s += u / v - t * u / (v + 1);
a63 5
      while (s > s0);
      r->r = s * t;
    }
#endif
}
@

