head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.04.14.06.01.39;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2004.12.30.17.35.27;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.24.22.33.13;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.29.19.27.09;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.02.29.19.27.09;	author drahn;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.24.22.07.25;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove libf2c, hasn't been built since it was moved to ports in 2010.
ok miod@@ espie@@
@
text
@#include "f2c.h"

extern void z_div (doublecomplex *, doublecomplex *, doublecomplex *);
void
pow_zi (doublecomplex * p, doublecomplex * a, integer * b)	/* p = a**b  */
{
  integer n;
  unsigned long u;
  double t;
  doublecomplex q, x;
  static doublecomplex one = { 1.0, 0.0 };

  n = *b;
  q.r = 1;
  q.i = 0;

  if (n == 0)
    goto done;
  if (n < 0)
    {
      n = -n;
      z_div (&x, &one, a);
    }
  else
    {
      x.r = a->r;
      x.i = a->i;
    }

  for (u = n;;)
    {
      if (u & 01)
	{
	  t = q.r * x.r - q.i * x.i;
	  q.i = q.r * x.i + q.i * x.r;
	  q.r = t;
	}
      if (u >>= 1)
	{
	  t = x.r * x.r - x.i * x.i;
	  x.i = 2 * x.r * x.i;
	  x.r = t;
	}
      else
	break;
    }
done:
  p->i = q.i;
  p->r = q.r;
}
@


1.3
log
@Actual synch with 3.3.5.

Changes in Makefile.bsd-wrapper to avoid prereq.

Fix in lib*/config.h.in to include the right ones and get the correct
definitions.

Bump of shlib_version accordingly.
@
text
@@


1.2
log
@result from merge... highly weird, since dale mixed things up
and we're going back, as his libf2c 3.3.2 is actually libf2c 3.2.3.
@
text
@d3 3
a5 7
#ifdef KR_headers
VOID pow_zi(p, a, b) 	/* p = a**b  */
 doublecomplex *p, *a; integer *b;
#else
extern void z_div(doublecomplex*, doublecomplex*, doublecomplex*);
void pow_zi(doublecomplex *p, doublecomplex *a, integer *b) 	/* p = a**b  */
#endif
d7 5
a11 5
	integer n;
	unsigned long u;
	double t;
	doublecomplex q, x;
	static doublecomplex one = {1.0, 0.0};
d13 3
a15 3
	n = *b;
	q.r = 1;
	q.i = 0;
d17 12
a28 12
	if(n == 0)
		goto done;
	if(n < 0)
		{
		n = -n;
		z_div(&x, &one, a);
		}
	else
		{
		x.r = a->r;
		x.i = a->i;
		}
d30 7
a36 20
	for(u = n; ; )
		{
		if(u & 01)
			{
			t = q.r * x.r - q.i * x.i;
			q.i = q.r * x.i + q.i * x.r;
			q.r = t;
			}
		if(u >>= 1)
			{
			t = x.r * x.r - x.i * x.i;
			x.i = 2 * x.r * x.i;
			x.r = t;
			}
		else
			break;
		}
 done:
	p->i = q.i;
	p->r = q.r;
d38 13
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of libf2c from gcc3.3.2
@
text
@@


1.1.1.2
log
@gcc 3.3.5 update
@
text
@d3 7
a9 3
extern void z_div (doublecomplex *, doublecomplex *, doublecomplex *);
void
pow_zi (doublecomplex * p, doublecomplex * a, integer * b)	/* p = a**b  */
d11 5
a15 5
  integer n;
  unsigned long u;
  double t;
  doublecomplex q, x;
  static doublecomplex one = { 1.0, 0.0 };
d17 3
a19 3
  n = *b;
  q.r = 1;
  q.i = 0;
d21 12
a32 12
  if (n == 0)
    goto done;
  if (n < 0)
    {
      n = -n;
      z_div (&x, &one, a);
    }
  else
    {
      x.r = a->r;
      x.i = a->i;
    }
d34 20
a53 7
  for (u = n;;)
    {
      if (u & 01)
	{
	  t = q.r * x.r - q.i * x.i;
	  q.i = q.r * x.i + q.i * x.r;
	  q.r = t;
a54 13
      if (u >>= 1)
	{
	  t = x.r * x.r - x.i * x.i;
	  x.i = 2 * x.r * x.i;
	  x.r = t;
	}
      else
	break;
    }
done:
  p->i = q.i;
  p->r = q.r;
}
@

