head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.04.14.06.01.40;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2004.12.30.17.35.27;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.24.22.33.13;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.29.19.27.10;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.02.29.19.27.10;	author drahn;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.24.22.07.25;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove libf2c, hasn't been built since it was moved to ports in 2010.
ok miod@@ espie@@
@
text
@/* Set up the signal behavior.  */

#include <stdio.h>
#include "signal1.h"

#ifndef SIGIOT
#ifdef SIGABRT
#define SIGIOT SIGABRT
#endif
#endif

#include <stdlib.h>

extern void sig_die (char *, int);

static void
sigfdie (Sigarg)
{
  Use_Sigarg;
  sig_die ("Floating Exception", 1);
}


static void
sigidie (Sigarg)
{
  Use_Sigarg;
  sig_die ("IOT Trap", 1);
}

#ifdef SIGQUIT
static void
sigqdie (Sigarg)
{
  Use_Sigarg;
  sig_die ("Quit signal", 1);
}
#endif


static void
sigindie (Sigarg)
{
  Use_Sigarg;
  sig_die ("Interrupt", 0);
}

static void
sigtdie (Sigarg)
{
  Use_Sigarg;
  sig_die ("Killed", 0);
}

#ifdef SIGTRAP
static void
sigtrdie (Sigarg)
{
  Use_Sigarg;
  sig_die ("Trace trap", 1);
}
#endif


void
f_setsig ()
{
  signal1 (SIGFPE, sigfdie);	/* ignore underflow, enable overflow */
#ifdef SIGIOT
  signal1 (SIGIOT, sigidie);
#endif
#ifdef SIGTRAP
  signal1 (SIGTRAP, sigtrdie);
#endif
#ifdef SIGQUIT
  if (signal1 (SIGQUIT, sigqdie) == SIG_IGN)
    signal1 (SIGQUIT, SIG_IGN);
#endif
  if (signal1 (SIGINT, sigindie) == SIG_IGN)
    signal1 (SIGINT, SIG_IGN);
  signal1 (SIGTERM, sigtdie);

#ifdef pdp11
  ldfps (01200);		/* detect overflow as an exception */
#endif
}
@


1.3
log
@Actual synch with 3.3.5.

Changes in Makefile.bsd-wrapper to avoid prereq.

Fix in lib*/config.h.in to include the right ones and get the correct
definitions.

Bump of shlib_version accordingly.
@
text
@@


1.2
log
@result from merge... highly weird, since dale mixed things up
and we're going back, as his libf2c 3.3.2 is actually libf2c 3.2.3.
@
text
@a11 2
#ifndef KR_headers
#undef VOID
a12 9
#endif

#ifndef VOID
#define VOID void
#endif

#ifdef __cplusplus
extern "C" {
#endif
d14 1
a14 7
#ifdef KR_headers
extern VOID sig_die();
#define Int /* int */
#else
extern void sig_die(char*, int);
#define Int int
#endif
d16 2
a17 1
static VOID sigfdie(Sigarg)
d19 2
a20 2
Use_Sigarg;
sig_die("Floating Exception", 1);
d24 2
a25 1
static VOID sigidie(Sigarg)
d27 2
a28 2
Use_Sigarg;
sig_die("IOT Trap", 1);
d32 2
a33 1
static VOID sigqdie(Sigarg)
d35 2
a36 2
Use_Sigarg;
sig_die("Quit signal", 1);
d41 2
a42 1
static VOID sigindie(Sigarg)
d44 2
a45 2
Use_Sigarg;
sig_die("Interrupt", 0);
d48 2
a49 1
static VOID sigtdie(Sigarg)
d51 2
a52 2
Use_Sigarg;
sig_die("Killed", 0);
d56 2
a57 1
static VOID sigtrdie(Sigarg)
d59 2
a60 2
Use_Sigarg;
sig_die("Trace trap", 1);
d65 2
a66 6
#ifdef __cplusplus
	}
#endif

 void
f_setsig()
d68 1
a68 1
signal1(SIGFPE, sigfdie);	/* ignore underflow, enable overflow */
d70 1
a70 1
signal1(SIGIOT, sigidie);
d73 1
a73 1
signal1(SIGTRAP, sigtrdie);
d76 2
a77 2
if(signal1(SIGQUIT,sigqdie) == SIG_IGN)
	signal1(SIGQUIT, SIG_IGN);
d79 3
a81 3
if(signal1(SIGINT, sigindie) == SIG_IGN)
	signal1(SIGINT, SIG_IGN);
signal1(SIGTERM,sigtdie);
d84 1
a84 1
	ldfps(01200); /* detect overflow as an exception */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of libf2c from gcc3.3.2
@
text
@@


1.1.1.2
log
@gcc 3.3.5 update
@
text
@d12 2
d15 9
d25 7
a31 1
extern void sig_die (char *, int);
d33 1
a33 2
static void
sigfdie (Sigarg)
d35 2
a36 2
  Use_Sigarg;
  sig_die ("Floating Exception", 1);
d40 1
a40 2
static void
sigidie (Sigarg)
d42 2
a43 2
  Use_Sigarg;
  sig_die ("IOT Trap", 1);
d47 1
a47 2
static void
sigqdie (Sigarg)
d49 2
a50 2
  Use_Sigarg;
  sig_die ("Quit signal", 1);
d55 1
a55 2
static void
sigindie (Sigarg)
d57 2
a58 2
  Use_Sigarg;
  sig_die ("Interrupt", 0);
d61 1
a61 2
static void
sigtdie (Sigarg)
d63 2
a64 2
  Use_Sigarg;
  sig_die ("Killed", 0);
d68 1
a68 2
static void
sigtrdie (Sigarg)
d70 2
a71 2
  Use_Sigarg;
  sig_die ("Trace trap", 1);
d76 6
a81 2
void
f_setsig ()
d83 1
a83 1
  signal1 (SIGFPE, sigfdie);	/* ignore underflow, enable overflow */
d85 1
a85 1
  signal1 (SIGIOT, sigidie);
d88 1
a88 1
  signal1 (SIGTRAP, sigtrdie);
d91 2
a92 2
  if (signal1 (SIGQUIT, sigqdie) == SIG_IGN)
    signal1 (SIGQUIT, SIG_IGN);
d94 3
a96 3
  if (signal1 (SIGINT, sigindie) == SIG_IGN)
    signal1 (SIGINT, SIG_IGN);
  signal1 (SIGTERM, sigtdie);
d99 1
a99 1
  ldfps (01200);		/* detect overflow as an exception */
@

