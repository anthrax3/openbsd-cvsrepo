head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.04.14.06.01.39;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2004.12.30.17.35.27;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.24.22.33.12;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.29.19.27.09;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.02.29.19.27.09;	author drahn;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.24.22.07.25;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove libf2c, hasn't been built since it was moved to ports in 2010.
ok miod@@ espie@@
@
text
@#include "f2c.h"
#undef abs
#include <stdlib.h>
#include <string.h>
extern char *F77_aloc (ftnlen, char *);

/*
 * getenv - f77 subroutine to return environment variables
 *
 * called by:
 *	call getenv (ENV_NAME, char_var)
 * where:
 *	ENV_NAME is the name of an environment variable
 *	char_var is a character variable which will receive
 *		the current value of ENV_NAME, or all blanks
 *		if ENV_NAME is not defined
 */

void
G77_getenv_0 (char *fname, char *value, ftnlen flen, ftnlen vlen)
{
  char buf[256], *ep, *fp;
  integer i;

  if (flen <= 0)
    goto add_blanks;
  for (i = 0; i < (integer) sizeof (buf); i++)
    {
      if (i == flen || (buf[i] = fname[i]) == ' ')
	{
	  buf[i] = 0;
	  ep = getenv (buf);
	  goto have_ep;
	}
    }
  while (i < flen && fname[i] != ' ')
    i++;
  strncpy (fp = F77_aloc (i + 1, "getenv_"), fname, (int) i);
  fp[i] = 0;
  ep = getenv (fp);
  free (fp);
have_ep:
  if (ep)
    while (*ep && vlen-- > 0)
      *value++ = *ep++;
add_blanks:
  while (vlen-- > 0)
    *value++ = ' ';
}
@


1.3
log
@Actual synch with 3.3.5.

Changes in Makefile.bsd-wrapper to avoid prereq.

Fix in lib*/config.h.in to include the right ones and get the correct
definitions.

Bump of shlib_version accordingly.
@
text
@@


1.2
log
@result from merge... highly weird, since dale mixed things up
and we're going back, as his libf2c 3.3.2 is actually libf2c 3.2.3.
@
text
@a2 3
#ifdef KR_headers
extern char *F77_aloc(), *getenv();
#else
d5 1
a5 2
extern char *F77_aloc(ftnlen, char*);
#endif
d19 1
a19 5
#ifdef KR_headers
 VOID
G77_getenv_0 (fname, value, flen, vlen) char *value, *fname; ftnlen vlen, flen;
#else
 void
a20 1
#endif
d22 2
a23 2
	char buf[256], *ep, *fp;
	integer i;
d25 9
a33 22
	if (flen <= 0)
		goto add_blanks;
	for(i = 0; i < sizeof(buf); i++) {
		if (i == flen || (buf[i] = fname[i]) == ' ') {
			buf[i] = 0;
			ep = getenv(buf);
			goto have_ep;
			}
		}
	while(i < flen && fname[i] != ' ')
		i++;
	strncpy(fp = F77_aloc(i+1, "getenv_"), fname, (int)i);
	fp[i] = 0;
	ep = getenv(fp);
	free(fp);
 have_ep:
	if (ep)
		while(*ep && vlen-- > 0)
			*value++ = *ep++;
 add_blanks:
	while(vlen-- > 0)
		*value++ = ' ';
d35 15
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of libf2c from gcc3.3.2
@
text
@@


1.1.1.2
log
@gcc 3.3.5 update
@
text
@d3 3
d8 2
a9 1
extern char *F77_aloc (ftnlen, char *);
d23 5
a27 1
void
d29 1
d31 2
a32 2
  char buf[256], *ep, *fp;
  integer i;
d34 22
a55 9
  if (flen <= 0)
    goto add_blanks;
  for (i = 0; i < (integer) sizeof (buf); i++)
    {
      if (i == flen || (buf[i] = fname[i]) == ' ')
	{
	  buf[i] = 0;
	  ep = getenv (buf);
	  goto have_ep;
a56 15
    }
  while (i < flen && fname[i] != ' ')
    i++;
  strncpy (fp = F77_aloc (i + 1, "getenv_"), fname, (int) i);
  fp[i] = 0;
  ep = getenv (fp);
  free (fp);
have_ep:
  if (ep)
    while (*ep && vlen-- > 0)
      *value++ = *ep++;
add_blanks:
  while (vlen-- > 0)
    *value++ = ' ';
}
@

