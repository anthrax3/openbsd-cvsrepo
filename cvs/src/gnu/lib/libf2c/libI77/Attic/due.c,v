head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.04.14.06.01.40;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2004.12.30.17.35.27;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.24.22.33.13;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.29.19.27.13;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.02.29.19.27.13;	author drahn;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.24.22.07.27;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove libf2c, hasn't been built since it was moved to ports in 2010.
ok miod@@ espie@@
@
text
@#include "config.h"
#include "f2c.h"
#include "fio.h"

int
c_due (cilist * a)
{
  if (f__init != 1)
    f_init ();
  f__init = 3;
  if (a->ciunit >= MXUNIT || a->ciunit < 0)
    err (a->cierr, 101, "startio");
  f__sequential = f__formatted = f__recpos = 0;
  f__external = 1;
  f__curunit = &f__units[a->ciunit];
  if (a->ciunit >= MXUNIT || a->ciunit < 0)
    err (a->cierr, 101, "startio");
  f__elist = a;
  if (f__curunit->ufd == NULL && fk_open (DIR, UNF, a->ciunit))
    err (a->cierr, 104, "due");
  f__cf = f__curunit->ufd;
  if (f__curunit->ufmt)
    err (a->cierr, 102, "cdue");
  if (!f__curunit->useek)
    err (a->cierr, 104, "cdue");
  if (f__curunit->ufd == NULL)
    err (a->cierr, 114, "cdue");
  if (a->cirec <= 0)
    err (a->cierr, 130, "due");
  FSEEK (f__cf, (off_t) (a->cirec - 1) * f__curunit->url, SEEK_SET);
  f__curunit->uend = 0;
  return (0);
}

integer
s_rdue (cilist * a)
{
  int n;
  f__reading = 1;
  if ((n = c_due (a)))
    return (n);
  if (f__curunit->uwrt && f__nowreading (f__curunit))
    err (a->cierr, errno, "read start");
  return (0);
}

integer
s_wdue (cilist * a)
{
  int n;
  f__reading = 0;
  if ((n = c_due (a)))
    return (n);
  if (f__curunit->uwrt != 1 && f__nowwriting (f__curunit))
    err (a->cierr, errno, "write start");
  return (0);
}

integer
e_rdue (void)
{
  f__init = 1;
  if (f__curunit->url == 1 || f__recpos == f__curunit->url)
    return (0);
  FSEEK (f__cf, (off_t) (f__curunit->url - f__recpos), SEEK_CUR);
  if (FTELL (f__cf) % f__curunit->url)
    err (f__elist->cierr, 200, "syserr");
  return (0);
}

integer
e_wdue (void)
{
  f__init = 1;
#ifdef ALWAYS_FLUSH
  if (fflush (f__cf))
    err (f__elist->cierr, errno, "write end");
#endif
  return (e_rdue ());
}
@


1.3
log
@Actual synch with 3.3.5.

Changes in Makefile.bsd-wrapper to avoid prereq.

Fix in lib*/config.h.in to include the right ones and get the correct
definitions.

Bump of shlib_version accordingly.
@
text
@@


1.2
log
@result from merge... highly weird, since dale mixed things up
and we're going back, as his libf2c 3.3.2 is actually libf2c 3.2.3.
@
text
@d5 2
a6 5
#ifdef KR_headers
c_due(a) cilist *a;
#else
c_due(cilist *a)
#endif
d8 25
a32 20
	if(f__init != 1) f_init();
	f__init = 3;
	if(a->ciunit>=MXUNIT || a->ciunit<0)
		err(a->cierr,101,"startio");
	f__sequential=f__formatted=f__recpos=0;
	f__external=1;
	f__curunit = &f__units[a->ciunit];
	if(a->ciunit>=MXUNIT || a->ciunit<0)
		err(a->cierr,101,"startio");
	f__elist=a;
	if(f__curunit->ufd==NULL && fk_open(DIR,UNF,a->ciunit) ) err(a->cierr,104,"due");
	f__cf=f__curunit->ufd;
	if(f__curunit->ufmt) err(a->cierr,102,"cdue");
	if(!f__curunit->useek) err(a->cierr,104,"cdue");
	if(f__curunit->ufd==NULL) err(a->cierr,114,"cdue");
	if(a->cirec <= 0)
		err(a->cierr,130,"due");
	FSEEK(f__cf,(off_t)(a->cirec-1)*f__curunit->url,SEEK_SET);
	f__curunit->uend = 0;
	return(0);
d34 3
a36 5
#ifdef KR_headers
integer s_rdue(a) cilist *a;
#else
integer s_rdue(cilist *a)
#endif
d38 7
a44 6
	int n;
	f__reading=1;
	if(n=c_due(a)) return(n);
	if(f__curunit->uwrt && f__nowreading(f__curunit))
		err(a->cierr,errno,"read start");
	return(0);
d46 3
a48 5
#ifdef KR_headers
integer s_wdue(a) cilist *a;
#else
integer s_wdue(cilist *a)
#endif
d50 7
a56 6
	int n;
	f__reading=0;
	if(n=c_due(a)) return(n);
	if(f__curunit->uwrt != 1 && f__nowwriting(f__curunit))
		err(a->cierr,errno,"write start");
	return(0);
d58 3
a60 1
integer e_rdue(Void)
d62 7
a68 7
	f__init = 1;
	if(f__curunit->url==1 || f__recpos==f__curunit->url)
		return(0);
	FSEEK(f__cf,(off_t)(f__curunit->url-f__recpos),SEEK_CUR);
	if(FTELL(f__cf)%f__curunit->url)
		err(f__elist->cierr,200,"syserr");
	return(0);
d70 3
a72 1
integer e_wdue(Void)
d74 1
a74 1
	f__init = 1;
d76 2
a77 2
	if (fflush(f__cf))
		err(f__elist->cierr,errno,"write end");
d79 1
a79 1
	return(e_rdue());
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of libf2c from gcc3.3.2
@
text
@@


1.1.1.2
log
@gcc 3.3.5 update
@
text
@d5 5
a9 2
int
c_due (cilist * a)
d11 20
a30 25
  if (f__init != 1)
    f_init ();
  f__init = 3;
  if (a->ciunit >= MXUNIT || a->ciunit < 0)
    err (a->cierr, 101, "startio");
  f__sequential = f__formatted = f__recpos = 0;
  f__external = 1;
  f__curunit = &f__units[a->ciunit];
  if (a->ciunit >= MXUNIT || a->ciunit < 0)
    err (a->cierr, 101, "startio");
  f__elist = a;
  if (f__curunit->ufd == NULL && fk_open (DIR, UNF, a->ciunit))
    err (a->cierr, 104, "due");
  f__cf = f__curunit->ufd;
  if (f__curunit->ufmt)
    err (a->cierr, 102, "cdue");
  if (!f__curunit->useek)
    err (a->cierr, 104, "cdue");
  if (f__curunit->ufd == NULL)
    err (a->cierr, 114, "cdue");
  if (a->cirec <= 0)
    err (a->cierr, 130, "due");
  FSEEK (f__cf, (off_t) (a->cirec - 1) * f__curunit->url, SEEK_SET);
  f__curunit->uend = 0;
  return (0);
d32 5
a36 3

integer
s_rdue (cilist * a)
d38 6
a43 7
  int n;
  f__reading = 1;
  if ((n = c_due (a)))
    return (n);
  if (f__curunit->uwrt && f__nowreading (f__curunit))
    err (a->cierr, errno, "read start");
  return (0);
d45 5
a49 3

integer
s_wdue (cilist * a)
d51 6
a56 7
  int n;
  f__reading = 0;
  if ((n = c_due (a)))
    return (n);
  if (f__curunit->uwrt != 1 && f__nowwriting (f__curunit))
    err (a->cierr, errno, "write start");
  return (0);
d58 1
a58 3

integer
e_rdue (void)
d60 7
a66 7
  f__init = 1;
  if (f__curunit->url == 1 || f__recpos == f__curunit->url)
    return (0);
  FSEEK (f__cf, (off_t) (f__curunit->url - f__recpos), SEEK_CUR);
  if (FTELL (f__cf) % f__curunit->url)
    err (f__elist->cierr, 200, "syserr");
  return (0);
d68 1
a68 3

integer
e_wdue (void)
d70 1
a70 1
  f__init = 1;
d72 2
a73 2
  if (fflush (f__cf))
    err (f__elist->cierr, errno, "write end");
d75 1
a75 1
  return (e_rdue ());
@

