head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.04.14.06.01.40;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2004.12.30.17.35.27;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.24.22.33.13;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.29.19.27.13;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.02.29.19.27.13;	author drahn;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.24.22.07.27;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove libf2c, hasn't been built since it was moved to ports in 2010.
ok miod@@ espie@@
@
text
@#include "config.h"
#include "f2c.h"
#include "fio.h"
#include "fmt.h"

int
y_rsk (void)
{
  if (f__curunit->uend || f__curunit->url <= f__recpos
      || f__curunit->url == 1)
    return 0;
  do
    {
      getc (f__cf);
    }
  while (++f__recpos < f__curunit->url);
  return 0;
}

int
y_getc (void)
{
  int ch;
  if (f__curunit->uend)
    return (-1);
  if ((ch = getc (f__cf)) != EOF)
    {
      f__recpos++;
      if (f__curunit->url >= f__recpos || f__curunit->url == 1)
	return (ch);
      else
	return (' ');
    }
  if (feof (f__cf))
    {
      f__curunit->uend = 1;
      errno = 0;
      return (-1);
    }
  err (f__elist->cierr, errno, "readingd");
}

static int
y_rev (void)
{
  if (f__recpos < f__hiwater)
    f__recpos = f__hiwater;
  if (f__curunit->url > 1)
    while (f__recpos < f__curunit->url)
      (*f__putn) (' ');
  if (f__recpos)
    f__putbuf (0);
  f__recpos = 0;
  return (0);
}

static int
y_err (void)
{
  err (f__elist->cierr, 110, "dfe");
}

static int
y_newrec (void)
{
  y_rev ();
  f__hiwater = f__cursor = 0;
  return (1);
}

int
c_dfe (cilist * a)
{
  f__sequential = 0;
  f__formatted = f__external = 1;
  f__elist = a;
  f__cursor = f__scale = f__recpos = 0;
  f__curunit = &f__units[a->ciunit];
  if (a->ciunit > MXUNIT || a->ciunit < 0)
    err (a->cierr, 101, "startchk");
  if (f__curunit->ufd == NULL && fk_open (DIR, FMT, a->ciunit))
    err (a->cierr, 104, "dfe");
  f__cf = f__curunit->ufd;
  if (!f__curunit->ufmt)
    err (a->cierr, 102, "dfe");
  if (!f__curunit->useek)
    err (a->cierr, 104, "dfe");
  f__fmtbuf = a->cifmt;
  if (a->cirec <= 0)
    err (a->cierr, 130, "dfe");
  FSEEK (f__cf, (off_t) f__curunit->url * (a->cirec - 1), SEEK_SET);
  f__curunit->uend = 0;
  return (0);
}

integer
s_rdfe (cilist * a)
{
  int n;
  if (f__init != 1)
    f_init ();
  f__init = 3;
  f__reading = 1;
  if ((n = c_dfe (a)))
    return (n);
  if (f__curunit->uwrt && f__nowreading (f__curunit))
    err (a->cierr, errno, "read start");
  f__getn = y_getc;
  f__doed = rd_ed;
  f__doned = rd_ned;
  f__dorevert = f__donewrec = y_err;
  f__doend = y_rsk;
  if (pars_f (f__fmtbuf) < 0)
    err (a->cierr, 100, "read start");
  fmt_bg ();
  return (0);
}

integer
s_wdfe (cilist * a)
{
  int n;
  if (f__init != 1)
    f_init ();
  f__init = 3;
  f__reading = 0;
  if ((n = c_dfe (a)))
    return (n);
  if (f__curunit->uwrt != 1 && f__nowwriting (f__curunit))
    err (a->cierr, errno, "startwrt");
  f__putn = x_putc;
  f__doed = w_ed;
  f__doned = w_ned;
  f__dorevert = y_err;
  f__donewrec = y_newrec;
  f__doend = y_rev;
  if (pars_f (f__fmtbuf) < 0)
    err (a->cierr, 100, "startwrt");
  fmt_bg ();
  return (0);
}

integer
e_rdfe (void)
{
  f__init = 1;
  en_fio ();
  return (0);
}

integer
e_wdfe (void)
{
  f__init = 1;
  return en_fio ();
}
@


1.3
log
@Actual synch with 3.3.5.

Changes in Makefile.bsd-wrapper to avoid prereq.

Fix in lib*/config.h.in to include the right ones and get the correct
definitions.

Bump of shlib_version accordingly.
@
text
@@


1.2
log
@result from merge... highly weird, since dale mixed things up
and we're going back, as his libf2c 3.3.2 is actually libf2c 3.2.3.
@
text
@d6 2
a7 1
y_rsk(Void)
d9 9
a17 133
	if(f__curunit->uend || f__curunit->url <= f__recpos
		|| f__curunit->url == 1) return 0;
	do {
		getc(f__cf);
	} while(++f__recpos < f__curunit->url);
	return 0;
}
y_getc(Void)
{
	int ch;
	if(f__curunit->uend) return(-1);
	if((ch=getc(f__cf))!=EOF)
	{
		f__recpos++;
		if(f__curunit->url>=f__recpos ||
			f__curunit->url==1)
			return(ch);
		else	return(' ');
	}
	if(feof(f__cf))
	{
		f__curunit->uend=1;
		errno=0;
		return(-1);
	}
	err(f__elist->cierr,errno,"readingd");
}

 static int
y_rev(Void)
{
	if (f__recpos < f__hiwater)
		f__recpos = f__hiwater;
	if (f__curunit->url > 1)
		while(f__recpos < f__curunit->url)
			(*f__putn)(' ');
	if (f__recpos)
		f__putbuf(0);
	f__recpos = 0;
	return(0);
}

 static int
y_err(Void)
{
	err(f__elist->cierr, 110, "dfe");
}

 static int
y_newrec(Void)
{
	y_rev();
	f__hiwater = f__cursor = 0;
	return(1);
}

#ifdef KR_headers
c_dfe(a) cilist *a;
#else
c_dfe(cilist *a)
#endif
{
	f__sequential=0;
	f__formatted=f__external=1;
	f__elist=a;
	f__cursor=f__scale=f__recpos=0;
	f__curunit = &f__units[a->ciunit];
	if(a->ciunit>MXUNIT || a->ciunit<0)
		err(a->cierr,101,"startchk");
	if(f__curunit->ufd==NULL && fk_open(DIR,FMT,a->ciunit))
		err(a->cierr,104,"dfe");
	f__cf=f__curunit->ufd;
	if(!f__curunit->ufmt) err(a->cierr,102,"dfe");
	if(!f__curunit->useek) err(a->cierr,104,"dfe");
	f__fmtbuf=a->cifmt;
	if(a->cirec <= 0)
		err(a->cierr,130,"dfe");
	FSEEK(f__cf,(off_t)f__curunit->url * (a->cirec-1),SEEK_SET);
	f__curunit->uend = 0;
	return(0);
}
#ifdef KR_headers
integer s_rdfe(a) cilist *a;
#else
integer s_rdfe(cilist *a)
#endif
{
	int n;
	if(f__init != 1) f_init();
	f__init = 3;
	f__reading=1;
	if(n=c_dfe(a))return(n);
	if(f__curunit->uwrt && f__nowreading(f__curunit))
		err(a->cierr,errno,"read start");
	f__getn = y_getc;
	f__doed = rd_ed;
	f__doned = rd_ned;
	f__dorevert = f__donewrec = y_err;
	f__doend = y_rsk;
	if(pars_f(f__fmtbuf)<0)
		err(a->cierr,100,"read start");
	fmt_bg();
	return(0);
}
#ifdef KR_headers
integer s_wdfe(a) cilist *a;
#else
integer s_wdfe(cilist *a)
#endif
{
	int n;
	if(f__init != 1) f_init();
	f__init = 3;
	f__reading=0;
	if(n=c_dfe(a)) return(n);
	if(f__curunit->uwrt != 1 && f__nowwriting(f__curunit))
		err(a->cierr,errno,"startwrt");
	f__putn = x_putc;
	f__doed = w_ed;
	f__doned= w_ned;
	f__dorevert = y_err;
	f__donewrec = y_newrec;
	f__doend = y_rev;
	if(pars_f(f__fmtbuf)<0)
		err(a->cierr,100,"startwrt");
	fmt_bg();
	return(0);
}
integer e_rdfe(Void)
{
	f__init = 1;
	en_fio();
	return(0);
d20 2
a21 1
integer e_wdfe(Void)
d23 133
a155 2
	f__init = 1;
	return en_fio();
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of libf2c from gcc3.3.2
@
text
@@


1.1.1.2
log
@gcc 3.3.5 update
@
text
@d6 1
a6 2
int
y_rsk (void)
d8 133
a140 9
  if (f__curunit->uend || f__curunit->url <= f__recpos
      || f__curunit->url == 1)
    return 0;
  do
    {
      getc (f__cf);
    }
  while (++f__recpos < f__curunit->url);
  return 0;
d143 1
a143 2
int
y_getc (void)
d145 2
a146 133
  int ch;
  if (f__curunit->uend)
    return (-1);
  if ((ch = getc (f__cf)) != EOF)
    {
      f__recpos++;
      if (f__curunit->url >= f__recpos || f__curunit->url == 1)
	return (ch);
      else
	return (' ');
    }
  if (feof (f__cf))
    {
      f__curunit->uend = 1;
      errno = 0;
      return (-1);
    }
  err (f__elist->cierr, errno, "readingd");
}

static int
y_rev (void)
{
  if (f__recpos < f__hiwater)
    f__recpos = f__hiwater;
  if (f__curunit->url > 1)
    while (f__recpos < f__curunit->url)
      (*f__putn) (' ');
  if (f__recpos)
    f__putbuf (0);
  f__recpos = 0;
  return (0);
}

static int
y_err (void)
{
  err (f__elist->cierr, 110, "dfe");
}

static int
y_newrec (void)
{
  y_rev ();
  f__hiwater = f__cursor = 0;
  return (1);
}

int
c_dfe (cilist * a)
{
  f__sequential = 0;
  f__formatted = f__external = 1;
  f__elist = a;
  f__cursor = f__scale = f__recpos = 0;
  f__curunit = &f__units[a->ciunit];
  if (a->ciunit > MXUNIT || a->ciunit < 0)
    err (a->cierr, 101, "startchk");
  if (f__curunit->ufd == NULL && fk_open (DIR, FMT, a->ciunit))
    err (a->cierr, 104, "dfe");
  f__cf = f__curunit->ufd;
  if (!f__curunit->ufmt)
    err (a->cierr, 102, "dfe");
  if (!f__curunit->useek)
    err (a->cierr, 104, "dfe");
  f__fmtbuf = a->cifmt;
  if (a->cirec <= 0)
    err (a->cierr, 130, "dfe");
  FSEEK (f__cf, (off_t) f__curunit->url * (a->cirec - 1), SEEK_SET);
  f__curunit->uend = 0;
  return (0);
}

integer
s_rdfe (cilist * a)
{
  int n;
  if (f__init != 1)
    f_init ();
  f__init = 3;
  f__reading = 1;
  if ((n = c_dfe (a)))
    return (n);
  if (f__curunit->uwrt && f__nowreading (f__curunit))
    err (a->cierr, errno, "read start");
  f__getn = y_getc;
  f__doed = rd_ed;
  f__doned = rd_ned;
  f__dorevert = f__donewrec = y_err;
  f__doend = y_rsk;
  if (pars_f (f__fmtbuf) < 0)
    err (a->cierr, 100, "read start");
  fmt_bg ();
  return (0);
}

integer
s_wdfe (cilist * a)
{
  int n;
  if (f__init != 1)
    f_init ();
  f__init = 3;
  f__reading = 0;
  if ((n = c_dfe (a)))
    return (n);
  if (f__curunit->uwrt != 1 && f__nowwriting (f__curunit))
    err (a->cierr, errno, "startwrt");
  f__putn = x_putc;
  f__doed = w_ed;
  f__doned = w_ned;
  f__dorevert = y_err;
  f__donewrec = y_newrec;
  f__doend = y_rev;
  if (pars_f (f__fmtbuf) < 0)
    err (a->cierr, 100, "startwrt");
  fmt_bg ();
  return (0);
}

integer
e_rdfe (void)
{
  f__init = 1;
  en_fio ();
  return (0);
}

integer
e_wdfe (void)
{
  f__init = 1;
  return en_fio ();
@

