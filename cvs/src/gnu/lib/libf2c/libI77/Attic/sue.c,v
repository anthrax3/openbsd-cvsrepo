head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.04.14.06.01.40;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2004.12.30.17.35.27;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.24.22.33.13;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.29.19.27.17;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.02.29.19.27.17;	author drahn;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.24.22.07.27;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove libf2c, hasn't been built since it was moved to ports in 2010.
ok miod@@ espie@@
@
text
@#include "config.h"
#include "f2c.h"
#include "fio.h"
extern uiolen f__reclen;
off_t f__recloc;

int
c_sue (cilist * a)
{
  f__external = f__sequential = 1;
  f__formatted = 0;
  f__curunit = &f__units[a->ciunit];
  if (a->ciunit >= MXUNIT || a->ciunit < 0)
    err (a->cierr, 101, "startio");
  f__elist = a;
  if (f__curunit->ufd == NULL && fk_open (SEQ, UNF, a->ciunit))
    err (a->cierr, 114, "sue");
  f__cf = f__curunit->ufd;
  if (f__curunit->ufmt)
    err (a->cierr, 103, "sue");
  if (!f__curunit->useek)
    err (a->cierr, 103, "sue");
  return (0);
}

integer
s_rsue (cilist * a)
{
  int n;
  if (f__init != 1)
    f_init ();
  f__init = 3;
  f__reading = 1;
  if ((n = c_sue (a)))
    return (n);
  f__recpos = 0;
  if (f__curunit->uwrt && f__nowreading (f__curunit))
    err (a->cierr, errno, "read start");
  if (fread ((char *) &f__reclen, sizeof (uiolen), 1, f__cf) != 1)
    {
      if (feof (f__cf))
	{
	  f__curunit->uend = 1;
	  err (a->ciend, EOF, "start");
	}
      clearerr (f__cf);
      err (a->cierr, errno, "start");
    }
  return (0);
}

integer
s_wsue (cilist * a)
{
  int n;
  if (f__init != 1)
    f_init ();
  f__init = 3;
  if ((n = c_sue (a)))
    return (n);
  f__reading = 0;
  f__reclen = 0;
  if (f__curunit->uwrt != 1 && f__nowwriting (f__curunit))
    err (a->cierr, errno, "write start");
  f__recloc = FTELL (f__cf);
  FSEEK (f__cf, (off_t) sizeof (uiolen), SEEK_CUR);
  return (0);
}

integer
e_wsue (void)
{
  off_t loc;
  f__init = 1;
  fwrite ((char *) &f__reclen, sizeof (uiolen), 1, f__cf);
#ifdef ALWAYS_FLUSH
  if (fflush (f__cf))
    err (f__elist->cierr, errno, "write end");
#endif
  loc = FTELL (f__cf);
  FSEEK (f__cf, f__recloc, SEEK_SET);
  fwrite ((char *) &f__reclen, sizeof (uiolen), 1, f__cf);
  FSEEK (f__cf, loc, SEEK_SET);
  return (0);
}

integer
e_rsue (void)
{
  f__init = 1;
  FSEEK (f__cf, (off_t) (f__reclen - f__recpos + sizeof (uiolen)), SEEK_CUR);
  return (0);
}
@


1.3
log
@Actual synch with 3.3.5.

Changes in Makefile.bsd-wrapper to avoid prereq.

Fix in lib*/config.h.in to include the right ones and get the correct
definitions.

Bump of shlib_version accordingly.
@
text
@@


1.2
log
@result from merge... highly weird, since dale mixed things up
and we're going back, as his libf2c 3.3.2 is actually libf2c 3.2.3.
@
text
@d7 2
a8 5
#ifdef KR_headers
c_sue(a) cilist *a;
#else
c_sue(cilist *a)
#endif
d10 14
a23 12
	f__external=f__sequential=1;
	f__formatted=0;
	f__curunit = &f__units[a->ciunit];
	if(a->ciunit >= MXUNIT || a->ciunit < 0)
		err(a->cierr,101,"startio");
	f__elist=a;
	if(f__curunit->ufd==NULL && fk_open(SEQ,UNF,a->ciunit))
		err(a->cierr,114,"sue");
	f__cf=f__curunit->ufd;
	if(f__curunit->ufmt) err(a->cierr,103,"sue");
	if(!f__curunit->useek) err(a->cierr,103,"sue");
	return(0);
d25 3
a27 5
#ifdef KR_headers
integer s_rsue(a) cilist *a;
#else
integer s_rsue(cilist *a)
#endif
d29 16
a44 16
	int n;
	if(f__init != 1) f_init();
	f__init = 3;
	f__reading=1;
	if(n=c_sue(a)) return(n);
	f__recpos=0;
	if(f__curunit->uwrt && f__nowreading(f__curunit))
		err(a->cierr, errno, "read start");
	if(fread((char *)&f__reclen,sizeof(uiolen),1,f__cf)
		!= 1)
	{	if(feof(f__cf))
		{	f__curunit->uend = 1;
			err(a->ciend, EOF, "start");
		}
		clearerr(f__cf);
		err(a->cierr, errno, "start");
d46 4
a49 1
	return(0);
d51 3
a53 5
#ifdef KR_headers
integer s_wsue(a) cilist *a;
#else
integer s_wsue(cilist *a)
#endif
d55 13
a67 11
	int n;
	if(f__init != 1) f_init();
	f__init = 3;
	if(n=c_sue(a)) return(n);
	f__reading=0;
	f__reclen=0;
	if(f__curunit->uwrt != 1 && f__nowwriting(f__curunit))
		err(a->cierr, errno, "write start");
	f__recloc=FTELL(f__cf);
	FSEEK(f__cf,(off_t)sizeof(uiolen),SEEK_CUR);
	return(0);
d69 7
a75 4
integer e_wsue(Void)
{	off_t loc;
	f__init = 1;
	fwrite((char *)&f__reclen,sizeof(uiolen),1,f__cf);
d77 2
a78 2
	if (fflush(f__cf))
		err(f__elist->cierr, errno, "write end");
d80 5
a84 5
	loc=FTELL(f__cf);
	FSEEK(f__cf,f__recloc,SEEK_SET);
	fwrite((char *)&f__reclen,sizeof(uiolen),1,f__cf);
	FSEEK(f__cf,loc,SEEK_SET);
	return(0);
d86 3
a88 1
integer e_rsue(Void)
d90 3
a92 3
	f__init = 1;
	FSEEK(f__cf,(off_t)(f__reclen-f__recpos+sizeof(uiolen)),SEEK_CUR);
	return(0);
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of libf2c from gcc3.3.2
@
text
@@


1.1.1.2
log
@gcc 3.3.5 update
@
text
@d7 5
a11 2
int
c_sue (cilist * a)
d13 12
a24 14
  f__external = f__sequential = 1;
  f__formatted = 0;
  f__curunit = &f__units[a->ciunit];
  if (a->ciunit >= MXUNIT || a->ciunit < 0)
    err (a->cierr, 101, "startio");
  f__elist = a;
  if (f__curunit->ufd == NULL && fk_open (SEQ, UNF, a->ciunit))
    err (a->cierr, 114, "sue");
  f__cf = f__curunit->ufd;
  if (f__curunit->ufmt)
    err (a->cierr, 103, "sue");
  if (!f__curunit->useek)
    err (a->cierr, 103, "sue");
  return (0);
d26 5
a30 3

integer
s_rsue (cilist * a)
d32 16
a47 16
  int n;
  if (f__init != 1)
    f_init ();
  f__init = 3;
  f__reading = 1;
  if ((n = c_sue (a)))
    return (n);
  f__recpos = 0;
  if (f__curunit->uwrt && f__nowreading (f__curunit))
    err (a->cierr, errno, "read start");
  if (fread ((char *) &f__reclen, sizeof (uiolen), 1, f__cf) != 1)
    {
      if (feof (f__cf))
	{
	  f__curunit->uend = 1;
	  err (a->ciend, EOF, "start");
d49 1
a49 4
      clearerr (f__cf);
      err (a->cierr, errno, "start");
    }
  return (0);
d51 5
a55 3

integer
s_wsue (cilist * a)
d57 11
a67 13
  int n;
  if (f__init != 1)
    f_init ();
  f__init = 3;
  if ((n = c_sue (a)))
    return (n);
  f__reading = 0;
  f__reclen = 0;
  if (f__curunit->uwrt != 1 && f__nowwriting (f__curunit))
    err (a->cierr, errno, "write start");
  f__recloc = FTELL (f__cf);
  FSEEK (f__cf, (off_t) sizeof (uiolen), SEEK_CUR);
  return (0);
d69 4
a72 7

integer
e_wsue (void)
{
  off_t loc;
  f__init = 1;
  fwrite ((char *) &f__reclen, sizeof (uiolen), 1, f__cf);
d74 2
a75 2
  if (fflush (f__cf))
    err (f__elist->cierr, errno, "write end");
d77 5
a81 5
  loc = FTELL (f__cf);
  FSEEK (f__cf, f__recloc, SEEK_SET);
  fwrite ((char *) &f__reclen, sizeof (uiolen), 1, f__cf);
  FSEEK (f__cf, loc, SEEK_SET);
  return (0);
d83 1
a83 3

integer
e_rsue (void)
d85 3
a87 3
  f__init = 1;
  FSEEK (f__cf, (off_t) (f__reclen - f__recpos + sizeof (uiolen)), SEEK_CUR);
  return (0);
@

