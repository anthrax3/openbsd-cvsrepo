head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.04.14.06.01.40;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2004.12.30.17.35.27;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.24.22.33.13;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.29.19.27.16;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.02.29.19.27.16;	author drahn;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.24.22.07.29;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove libf2c, hasn't been built since it was moved to ports in 2010.
ok miod@@ espie@@
@
text
@/* read sequential formatted external */
#include "config.h"
#include "f2c.h"
#include "fio.h"
#include "fmt.h"

int
xrd_SL (void)
{
  int ch;
  if (!f__curunit->uend)
    while ((ch = getc (f__cf)) != '\n')
      if (ch == EOF)
	{
	  f__curunit->uend = 1;
	  break;
	}
  f__cursor = f__recpos = 0;
  return (1);
}

int
x_getc (void)
{
  int ch;
  if (f__curunit->uend)
    return (EOF);
  ch = getc (f__cf);
  if (ch != EOF && ch != '\n')
    {
      f__recpos++;
      return (ch);
    }
  if (ch == '\n')
    {
      (void) ungetc (ch, f__cf);
      return (ch);
    }
  if (f__curunit->uend || feof (f__cf))
    {
      errno = 0;
      f__curunit->uend = 1;
      return (-1);
    }
  return (-1);
}

int
x_endp (void)
{
  xrd_SL ();
  return f__curunit->uend == 1 ? EOF : 0;
}

int
x_rev (void)
{
  (void) xrd_SL ();
  return (0);
}

integer
s_rsfe (cilist * a)		/* start */
{
  int n;
  if (f__init != 1)
    f_init ();
  f__init = 3;
  f__reading = 1;
  f__sequential = 1;
  f__formatted = 1;
  f__external = 1;
  if ((n = c_sfe (a)))
    return (n);
  f__elist = a;
  f__cursor = f__recpos = 0;
  f__scale = 0;
  f__fmtbuf = a->cifmt;
  f__curunit = &f__units[a->ciunit];
  f__cf = f__curunit->ufd;
  if (pars_f (f__fmtbuf) < 0)
    err (a->cierr, 100, "startio");
  f__getn = x_getc;
  f__doed = rd_ed;
  f__doned = rd_ned;
  fmt_bg ();
  f__doend = x_endp;
  f__donewrec = xrd_SL;
  f__dorevert = x_rev;
  f__cblank = f__curunit->ublnk;
  f__cplus = 0;
  if (f__curunit->uwrt && f__nowreading (f__curunit))
    err (a->cierr, errno, "read start");
  if (f__curunit->uend)
    err (f__elist->ciend, (EOF), "read start");
  return (0);
}
@


1.3
log
@Actual synch with 3.3.5.

Changes in Makefile.bsd-wrapper to avoid prereq.

Fix in lib*/config.h.in to include the right ones and get the correct
definitions.

Bump of shlib_version accordingly.
@
text
@@


1.2
log
@result from merge... highly weird, since dale mixed things up
and we're going back, as his libf2c 3.3.2 is actually libf2c 3.2.3.
@
text
@d7 13
a19 10
xrd_SL(Void)
{	int ch;
	if(!f__curunit->uend)
		while((ch=getc(f__cf))!='\n')
			if (ch == EOF) {
				f__curunit->uend = 1;
				break;
				}
	f__cursor=f__recpos=0;
	return(1);
d21 25
a45 18
x_getc(Void)
{	int ch;
	if(f__curunit->uend) return(EOF);
	ch = getc(f__cf);
	if(ch!=EOF && ch!='\n')
	{	f__recpos++;
		return(ch);
	}
	if(ch=='\n')
	{	(void) ungetc(ch,f__cf);
		return(ch);
	}
	if(f__curunit->uend || feof(f__cf))
	{	errno=0;
		f__curunit->uend=1;
		return(-1);
	}
	return(-1);
d47 3
a49 1
x_endp(Void)
d51 2
a52 2
	xrd_SL();
	return f__curunit->uend == 1 ? EOF : 0;
d54 3
a56 1
x_rev(Void)
d58 2
a59 2
	(void) xrd_SL();
	return(0);
d61 36
a96 34
#ifdef KR_headers
integer s_rsfe(a) cilist *a; /* start */
#else
integer s_rsfe(cilist *a) /* start */
#endif
{	int n;
	if(f__init != 1) f_init();
	f__init = 3;
	f__reading=1;
	f__sequential=1;
	f__formatted=1;
	f__external=1;
	if(n=c_sfe(a)) return(n);
	f__elist=a;
	f__cursor=f__recpos=0;
	f__scale=0;
	f__fmtbuf=a->cifmt;
	f__curunit= &f__units[a->ciunit];
	f__cf=f__curunit->ufd;
	if(pars_f(f__fmtbuf)<0) err(a->cierr,100,"startio");
	f__getn= x_getc;
	f__doed= rd_ed;
	f__doned= rd_ned;
	fmt_bg();
	f__doend=x_endp;
	f__donewrec=xrd_SL;
	f__dorevert=x_rev;
	f__cblank=f__curunit->ublnk;
	f__cplus=0;
	if(f__curunit->uwrt && f__nowreading(f__curunit))
		err(a->cierr,errno,"read start");
	if(f__curunit->uend)
		err(f__elist->ciend,(EOF),"read start");
	return(0);
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of libf2c from gcc3.3.2
@
text
@@


1.1.1.2
log
@gcc 3.3.5 update
@
text
@d7 27
a33 10
int
xrd_SL (void)
{
  int ch;
  if (!f__curunit->uend)
    while ((ch = getc (f__cf)) != '\n')
      if (ch == EOF)
	{
	  f__curunit->uend = 1;
	  break;
d35 1
a35 2
  f__cursor = f__recpos = 0;
  return (1);
d37 1
a37 3

int
x_getc (void)
d39 2
a40 21
  int ch;
  if (f__curunit->uend)
    return (EOF);
  ch = getc (f__cf);
  if (ch != EOF && ch != '\n')
    {
      f__recpos++;
      return (ch);
    }
  if (ch == '\n')
    {
      (void) ungetc (ch, f__cf);
      return (ch);
    }
  if (f__curunit->uend || feof (f__cf))
    {
      errno = 0;
      f__curunit->uend = 1;
      return (-1);
    }
  return (-1);
d42 1
a42 3

int
x_endp (void)
d44 2
a45 2
  xrd_SL ();
  return f__curunit->uend == 1 ? EOF : 0;
d47 34
a80 43

int
x_rev (void)
{
  (void) xrd_SL ();
  return (0);
}

integer
s_rsfe (cilist * a)		/* start */
{
  int n;
  if (f__init != 1)
    f_init ();
  f__init = 3;
  f__reading = 1;
  f__sequential = 1;
  f__formatted = 1;
  f__external = 1;
  if ((n = c_sfe (a)))
    return (n);
  f__elist = a;
  f__cursor = f__recpos = 0;
  f__scale = 0;
  f__fmtbuf = a->cifmt;
  f__curunit = &f__units[a->ciunit];
  f__cf = f__curunit->ufd;
  if (pars_f (f__fmtbuf) < 0)
    err (a->cierr, 100, "startio");
  f__getn = x_getc;
  f__doed = rd_ed;
  f__doned = rd_ned;
  fmt_bg ();
  f__doend = x_endp;
  f__donewrec = xrd_SL;
  f__dorevert = x_rev;
  f__cblank = f__curunit->ublnk;
  f__cplus = 0;
  if (f__curunit->uwrt && f__nowreading (f__curunit))
    err (a->cierr, errno, "read start");
  if (f__curunit->uend)
    err (f__elist->ciend, (EOF), "read start");
  return (0);
@

