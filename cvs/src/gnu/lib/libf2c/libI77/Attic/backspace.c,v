head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	gcc-3_3_5:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.4
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	gcc-3_3_2:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.04.14.06.01.40;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2004.12.30.17.35.27;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.24.22.33.13;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.29.19.27.11;	author drahn;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.02.29.19.27.11;	author drahn;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.12.24.22.07.31;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove libf2c, hasn't been built since it was moved to ports in 2010.
ok miod@@ espie@@
@
text
@#include "config.h"
#include <sys/types.h>
#include "f2c.h"
#include "fio.h"
integer
f_back (alist * a)
{
  unit *b;
  off_t v, w, x, y, z;
  uiolen n;
  FILE *f;

  f__curunit = b = &f__units[a->aunit];	/* curunit for error messages */
  if (f__init & 2)
    f__fatal (131, "I/O recursion");
  if (a->aunit >= MXUNIT || a->aunit < 0)
    err (a->aerr, 101, "backspace");
  if (b->useek == 0)
    err (a->aerr, 106, "backspace");
  if (b->ufd == NULL)
    {
      fk_open (1, 1, a->aunit);
      return (0);
    }
  if (b->uend == 1)
    {
      b->uend = 0;
      return (0);
    }
  if (b->uwrt)
    {
      t_runc (a);
      if (f__nowreading (b))
	err (a->aerr, errno, "backspace");
    }
  f = b->ufd;			/* may have changed in t_runc() */
  if (b->url > 0)
    {
      x = FTELL (f);
      y = x % b->url;
      if (y == 0)
	x--;
      x /= b->url;
      x *= b->url;
      FSEEK (f, x, SEEK_SET);
      return (0);
    }

  if (b->ufmt == 0)
    {
      FSEEK (f, -(off_t) sizeof (uiolen), SEEK_CUR);
      fread ((char *) &n, sizeof (uiolen), 1, f);
      FSEEK (f, -(off_t) n - 2 * sizeof (uiolen), SEEK_CUR);
      return (0);
    }
  w = x = FTELL (f);
  z = 0;
loop:
  while (x)
    {
      x -= x < 64 ? x : 64;
      FSEEK (f, x, SEEK_SET);
      for (y = x; y < w; y++)
	{
	  if (getc (f) != '\n')
	    continue;
	  v = FTELL (f);
	  if (v == w)
	    {
	      if (z)
		goto break2;
	      goto loop;
	    }
	  z = v;
	}
      err (a->aerr, (EOF), "backspace");
    }
break2:
  FSEEK (f, z, SEEK_SET);
  return 0;
}
@


1.3
log
@Actual synch with 3.3.5.

Changes in Makefile.bsd-wrapper to avoid prereq.

Fix in lib*/config.h.in to include the right ones and get the correct
definitions.

Bump of shlib_version accordingly.
@
text
@@


1.2
log
@result from merge... highly weird, since dale mixed things up
and we're going back, as his libf2c 3.3.2 is actually libf2c 3.2.3.
@
text
@d5 7
a11 9
#ifdef KR_headers
integer f_back(a) alist *a;
#else
integer f_back(alist *a)
#endif
{	unit *b;
	off_t v, w, x, y, z;
	uiolen n;
	FILE *f;
d13 51
a63 21
	f__curunit = b = &f__units[a->aunit];	/* curunit for error messages */
	if (f__init & 2)
		f__fatal (131, "I/O recursion");
	if(a->aunit >= MXUNIT || a->aunit < 0)
		err(a->aerr,101,"backspace");
	if(b->useek==0) err(a->aerr,106,"backspace");
	if(b->ufd == NULL) {
		fk_open(1, 1, a->aunit);
		return(0);
		}
	if(b->uend==1)
	{	b->uend=0;
		return(0);
	}
	if(b->uwrt) {
		t_runc(a);
		if (f__nowreading(b))
			err(a->aerr,errno,"backspace");
		}
	f = b->ufd;	/* may have changed in t_runc() */
	if(b->url>0)
d65 10
a74 14
		x=FTELL(f);
		y = x % b->url;
		if(y == 0) x--;
		x /= b->url;
		x *= b->url;
		FSEEK(f,x,SEEK_SET);
		return(0);
	}

	if(b->ufmt==0)
	{	FSEEK(f,-(off_t)sizeof(uiolen),SEEK_CUR);
		fread((char *)&n,sizeof(uiolen),1,f);
		FSEEK(f,-(off_t)n-2*sizeof(uiolen),SEEK_CUR);
		return(0);
d76 5
a80 22
	w = x = FTELL(f);
	z = 0;
 loop:
	while(x) {
		x -= x < 64 ? x : 64;
		FSEEK(f,x,SEEK_SET);
		for(y = x; y < w; y++) {
			if (getc(f) != '\n')
				continue;
			v = FTELL(f);
			if (v == w) {
				if (z)
					goto break2;
				goto loop;
				}
			z = v;
			}
		err(a->aerr,(EOF),"backspace");
		}
 break2:
	FSEEK(f, z, SEEK_SET);
	return 0;
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of libf2c from gcc3.3.2
@
text
@@


1.1.1.2
log
@gcc 3.3.5 update
@
text
@d5 9
a13 7
integer
f_back (alist * a)
{
  unit *b;
  off_t v, w, x, y, z;
  uiolen n;
  FILE *f;
d15 30
a44 35
  f__curunit = b = &f__units[a->aunit];	/* curunit for error messages */
  if (f__init & 2)
    f__fatal (131, "I/O recursion");
  if (a->aunit >= MXUNIT || a->aunit < 0)
    err (a->aerr, 101, "backspace");
  if (b->useek == 0)
    err (a->aerr, 106, "backspace");
  if (b->ufd == NULL)
    {
      fk_open (1, 1, a->aunit);
      return (0);
    }
  if (b->uend == 1)
    {
      b->uend = 0;
      return (0);
    }
  if (b->uwrt)
    {
      t_runc (a);
      if (f__nowreading (b))
	err (a->aerr, errno, "backspace");
    }
  f = b->ufd;			/* may have changed in t_runc() */
  if (b->url > 0)
    {
      x = FTELL (f);
      y = x % b->url;
      if (y == 0)
	x--;
      x /= b->url;
      x *= b->url;
      FSEEK (f, x, SEEK_SET);
      return (0);
    }
d46 5
a50 26
  if (b->ufmt == 0)
    {
      FSEEK (f, -(off_t) sizeof (uiolen), SEEK_CUR);
      fread ((char *) &n, sizeof (uiolen), 1, f);
      FSEEK (f, -(off_t) n - 2 * sizeof (uiolen), SEEK_CUR);
      return (0);
    }
  w = x = FTELL (f);
  z = 0;
loop:
  while (x)
    {
      x -= x < 64 ? x : 64;
      FSEEK (f, x, SEEK_SET);
      for (y = x; y < w; y++)
	{
	  if (getc (f) != '\n')
	    continue;
	  v = FTELL (f);
	  if (v == w)
	    {
	      if (z)
		goto break2;
	      goto loop;
	    }
	  z = v;
d52 22
a73 5
      err (a->aerr, (EOF), "backspace");
    }
break2:
  FSEEK (f, z, SEEK_SET);
  return 0;
@

