head	1.3;
access;
symbols
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	binutils-2_11_2:1.1.1.2
	OPENBSD_3_1:1.1.1.1.0.8
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.6
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.4
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.2
	OPENBSD_2_8_BASE:1.1.1.1
	binutils-2_10:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2003.11.24.17.18.22;	author espie;	state dead;
branches;
next	1.2;

1.2
date	2002.05.11.12.59.41;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.26.11.56.30;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.07.26.11.56.30;	author espie;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.05.11.12.45.38;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.3
log
@bye, bye, they moved.

(all these changes were okay'ed millert@@, btw)
@
text
@/* xmemdup.c -- Duplicate a memory buffer, using xcalloc.
   This trivial function is in the public domain.
   Jeff Garzik, September 1999.  */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif
#include "ansidecl.h"
#include "libiberty.h"

#include <sys/types.h> /* For size_t. */

PTR
xmemdup (input, copy_size, alloc_size)
  const PTR input;
  size_t copy_size;
  size_t alloc_size;
{
  PTR output = xcalloc (1, alloc_size);
  memcpy (output, input, copy_size);
  return output;
}
@


1.2
log
@don't pull these yet.
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@libiberty version bundled with binutils-2.10
@
text
@@


1.1.1.2
log
@libiberty version bundled with binutils 2.11.
@
text
@a11 3
#ifdef HAVE_STRING_H
#include <string.h>
#endif
@

