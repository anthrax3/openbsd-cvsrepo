head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.1.1.0.58
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.56
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.54
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.52
	OPENBSD_5_0:1.1.1.1.0.50
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.48
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.46
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.42
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.44
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.40
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.38
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.36
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.34
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.32
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.30
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.28
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.26
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.24
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.22
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.20
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.18
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.16
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.14
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.12
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.10
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.8
	OPENBSD_2_9_BASE:1.1.1.1
	GCC-2_95_pre3_test3:1.1.1.1
	GCC-2_95_pre3_test2:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.6
	OPENBSD_2_8_BASE:1.1.1.1
	GCC-2_95_pre3_20000916:1.1.1.1
	GCC-2_95_pre3_20000527:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	GCC-2_95_2:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	GCC-2_95_1:1.1.1.1
	CYGNUS-990718:1.1.1.1
	CYGNUS-990629:1.1.1.1
	CYGNUS-990608:1.1.1.1
	CYGNUS-19990517:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.08.06.19.16.48;	author miod;	state dead;
branches;
next	1.1;

1.1
date	99.05.26.13.35.04;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.26.13.35.04;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove gcc 2.95 from the tree. One of the least bogus compiler we had (although
it had required some generous bandaid), but unfortunately not able to compile
most of the Real World (tm) software.
@
text
@/* lex.h -- Public #include File (module.h template V1.0)
   Copyright (C) 1995 Free Software Foundation, Inc.
   Contributed by James Craig Burley.

This file is part of GNU Fortran.

GNU Fortran is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU Fortran is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Fortran; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA
02111-1307, USA.

   Owning Modules:
      lex.c

   Modifications:
      22-Aug-89	 JCB  1.1
	 Change for new ffewhere interface.
*/

/* Allow multiple inclusion to work. */

#ifndef _H_f_lex
#define _H_f_lex

/* Simple definitions and enumerations. */

typedef enum
  {
    FFELEX_typeNONE,
    FFELEX_typeCOMMENT,
    FFELEX_typeEOS,
    FFELEX_typeEOF,
    FFELEX_typeERROR,
    FFELEX_typeRAW,
    FFELEX_typeQUOTE,
    FFELEX_typeDOLLAR,
    FFELEX_typeHASH,
    FFELEX_typePERCENT,
    FFELEX_typeAMPERSAND,
    FFELEX_typeAPOSTROPHE,
    FFELEX_typeOPEN_PAREN,
    FFELEX_typeCLOSE_PAREN,
    FFELEX_typeASTERISK,
    FFELEX_typePLUS,
    FFELEX_typeMINUS,
    FFELEX_typePERIOD,
    FFELEX_typeSLASH,
    FFELEX_typeNUMBER,		/* Grep: [0-9][0-9]*. */
    FFELEX_typeOPEN_ANGLE,
    FFELEX_typeEQUALS,
    FFELEX_typeCLOSE_ANGLE,
    FFELEX_typeNAME,		/* Grep: [A-Za-z][A-Za-z0-9_]*. */
    FFELEX_typeCOMMA,
    FFELEX_typePOWER,		/* "**". */
    FFELEX_typeCONCAT,		/* "//". */
    FFELEX_typeDEBUG,
    FFELEX_typeNAMES,		/* Same as FFELEX_typeNAME in initial
				   context. */
    FFELEX_typeHOLLERITH,	/* <text> part of <nn>H<text>. */
    FFELEX_typeCHARACTER,	/* <text> part of '<text>' or "<text>". */
    FFELEX_typeCOLON,
    FFELEX_typeSEMICOLON,
    FFELEX_typeUNDERSCORE,
    FFELEX_typeQUESTION,
    FFELEX_typeOPEN_ARRAY,	/* "(/". */
    FFELEX_typeCLOSE_ARRAY,	/* "/)". */
    FFELEX_typeCOLONCOLON,	/* "::". */
    FFELEX_typeREL_LE,		/* "<=". */
    FFELEX_typeREL_NE,		/* "<>". */
    FFELEX_typeREL_EQ,		/* "==". */
    FFELEX_typePOINTS,		/* "=>". */
    FFELEX_typeREL_GE,		/* ">=". */
    FFELEX_type
  } ffelexType;

/* Typedefs. */

typedef struct _lextoken_ *ffelexToken;
typedef void *lex_sigh_;
typedef lex_sigh_ (*lex_sigh__) (ffelexToken);
typedef lex_sigh__ (*ffelexHandler) (ffelexToken);

/* Include files needed by this one. */

#include "top.h"
#include "where.h"

/* Structure definitions. */

struct _lextoken_
  {
    long int id_;		/* DEBUG ONLY. */
    ffeTokenLength size;
    ffeTokenLength length;
    unsigned short uses;
    char *text;
    ffelexType type;
    ffewhereLine where_line;
    ffewhereColumn where_col;
    ffewhereLine currentnames_line;	/* For tracking NAMES tokens. */
    ffewhereColumn currentnames_col;	/* For tracking NAMES tokens. */
    ffewhereTrack wheretrack;	/* For tracking NAMES tokens. */
  };

/* Global objects accessed by users of this module. */


/* Declare functions with prototypes. */

void ffelex_display_token (ffelexToken t);
bool ffelex_expecting_character (void);
ffelexHandler ffelex_file_fixed (ffewhereFile wf, FILE *f);
ffelexHandler ffelex_file_free (ffewhereFile wf, FILE *f);
void ffelex_hash_kludge (FILE *f);
void ffelex_init_1 (void);
bool ffelex_is_names_expected (void);
char *ffelex_line (void);
ffewhereColumnNumber ffelex_line_length (void);
ffewhereLineNumber ffelex_line_number (void);
void ffelex_set_expecting_hollerith (long length, char which,
				     ffewhereLine line,
				     ffewhereColumn column);
void ffelex_set_handler (ffelexHandler first);
void ffelex_set_hexnum (bool on);
void ffelex_set_include (ffewhereFile wf, bool free_form, FILE *fi);
void ffelex_set_names (bool on);
void ffelex_set_names_pure (bool on);
ffelexHandler ffelex_splice_tokens (ffelexHandler first, ffelexToken master,
				    ffeTokenLength start);
ffelexHandler ffelex_swallow_tokens (ffelexToken t, ffelexHandler handler);
ffelexToken ffelex_token_dollar_from_names (ffelexToken t,
					    ffeTokenLength start);
void ffelex_token_kill (ffelexToken t);
ffelexToken ffelex_token_name_from_names (ffelexToken t,
					  ffeTokenLength start,
					  ffeTokenLength len);
ffelexToken ffelex_token_names_from_names (ffelexToken t,
					   ffeTokenLength start,
					   ffeTokenLength len);
ffelexToken ffelex_token_new (void);
ffelexToken ffelex_token_new_character (const char *s, ffewhereLine l,
					ffewhereColumn c);
ffelexToken ffelex_token_new_eof (void);
ffelexToken ffelex_token_new_name (const char *s, ffewhereLine l,
				   ffewhereColumn c);
ffelexToken ffelex_token_new_names (const char *s, ffewhereLine l,
				    ffewhereColumn c);
ffelexToken ffelex_token_new_number (const char *s, ffewhereLine l,
				     ffewhereColumn c);
ffelexToken ffelex_token_new_simple_ (ffelexType type, ffewhereLine l,
				      ffewhereColumn c);
ffelexToken ffelex_token_number_from_names (ffelexToken t,
					    ffeTokenLength start);
ffelexToken ffelex_token_uscore_from_names (ffelexToken t,
					    ffeTokenLength start);
ffelexToken ffelex_token_use (ffelexToken t);

/* Define macros. */

#define ffelex_init_0()
#define ffelex_init_2()
#define ffelex_init_3()
#define ffelex_init_4()
#define ffelex_is_firstnamechar(c) \
  (ISALPHA ((c)) || ((c) == '_'))
#define ffelex_terminate_0()
#define ffelex_terminate_1()
#define ffelex_terminate_2()
#define ffelex_terminate_3()
#define ffelex_terminate_4()
#define ffelex_token_length(t) ((t)->length)
#define ffelex_token_new_eos(l,c) \
  ffelex_token_new_simple_ (FFELEX_typeEOS, (l), (c))
#define ffelex_token_new_period(l,c) \
  ffelex_token_new_simple_ (FFELEX_typePERIOD, (l), (c))
#define ffelex_token_strcmp(t1,t2) strcmp ((t1)->text, (t2)->text)
#define ffelex_token_text(t) ((t)->text)
#define ffelex_token_type(t) ((t)->type)
#define ffelex_token_where_column(t) ((t)->where_col)
#define ffelex_token_where_filename(t) \
  ffewhere_line_filename ((t)->where_line)
#define ffelex_token_where_filelinenum(t) \
  ffewhere_line_filelinenum((t)->where_line)
#define ffelex_token_where_line(t) ((t)->where_line)
#define ffelex_token_where_line_number(t) \
  ffewhere_line_number ((t)->where_line)
#define ffelex_token_wheretrack(t) ((t)->wheretrack)

/* End of #include file. */

#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@egcs projects compiler system
Exact copy of the snapshot, except for the removal of
	texinfo/
	gcc/ch/
	libchill/

@
text
@@
