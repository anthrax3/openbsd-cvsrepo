head	1.18;
access;
symbols
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.8.0.2
	OPENBSD_3_3_BASE:1.8;
locks; strict;
comment	@.\" @;


1.18
date	2004.02.21.01.08.45;	author espie;	state dead;
branches;
next	1.17;

1.17
date	2004.01.04.07.08.09;	author pvalchev;	state Exp;
branches;
next	1.16;

1.16
date	2003.12.28.18.09.46;	author miod;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.26.02.19.13;	author tedu;	state Exp;
branches;
next	1.14;

1.14
date	2003.07.25.06.18.44;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2003.07.25.02.48.11;	author avsm;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.26.18.32.12;	author avsm;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.14.05.13.18;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.04.17.59.01;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2003.04.14.06.51.49;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.12.22.52.17;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.03.06.19.45.24;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.27.21.02.49;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.27.16.22.31;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.02.20.25.35;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.12.02.16.40.39;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.24.01.02.53;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.24.00.58.17;	author espie;	state Exp;
branches;
next	;


desc
@@


1.18
log
@kill old copies of gcc-local
@
text
@.\" $OpenBSD: gcc-local.1,v 1.17 2004/01/04 07:08:09 pvalchev Exp $
.\"
.\" Copyright (c) 2002 Marc Espie
.\" Copyright (c) 2003 Anil Madhavapeddy
.\"
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE DEVELOPERS ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE DEVELOPERS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd December 1, 2002
.Dt GCC-LOCAL 1
.Os
.Sh NAME
.Nm gcc-local
.Nd local modifications to gcc
.Sh DESCRIPTION
The
.Nm gcc
software comes with specific modifications for
.Ox .
.Bl -dash
.It
.Nm gcc
does not search under
.Pa /usr/local
for include files nor for libraries:
as a system compiler, it only searches the system paths by default.
.It
On
.Ox ,
the
.Fl pthread
option should be used to link threaded code, isolating the program from
operating system details.
.It
On most architectures,
trampoline code marks the smallest possible area around the trampoline stub
executable using
.Xr mprotect 2 ,
since the stack area is by default non-executable.
.It
The
.Fl O2
option does not include
.Fl fstrict-aliasing ,
as this option causes issues on some legacy code.
.Fl fstrict-aliasing
is very unsafe with code that plays tricks with casts, bypassing the
already weak type system of C.
.It
The option
.Fl fno-builtin-<function>
was backported from
.Nm gcc
version 3,
yielding greater control over what functions
.Nm gcc
inlines.
.It
.Nm gcc
recognizes the extra format attribute syslog, to better match
the definition of
.Xr syslog 3 ,
and silence erroneous warnings when used with
.Fl pedantic .
.It
.Nm gcc
recognizes the extra attribute nonnull, which can be used to mark
arguments that can't be
.Dv NULL .
On the other hand, the printf format attribute does not imply nonnull
for the format.
This allows for correct format checking on the
.Xr err 3
function family.
.It
.Nm gcc
recognizes the extra attribute sentinel, which can be used to mark varargs
function that need a
.Dv NULL
pointer to mark argument termination, like
.Xr execl 3 .
This exposes latent bugs for 64 bit architectures,
where a terminating 0 will expand to a 32 bit int, and not a full-fledged
64 bits pointer.
.It
On some
.Ox
platforms,
.Nm gcc
still uses
.Xr setjmp 3 /
.Xr longjmp 3 -
style exceptions, and so needs extra fixes beyond the pure 2.95.3 release.
.It
On some
platforms (mostly a.out),
.Nm gcc
uses a linker wrapper to write stubs that call global constructors and
destructors.
On
.Ox
those calls can be traced using
.Fl Wl,-trace-ctors-dtors ,
using
.Xr syslog_r 3 .
.It
On i386, the optimizer features an extra peephole which reduces the function
prologues enough to allow for the ramdisk to fit on one floppy.
.It
On
.Ox ,
.Nm gcc
comes with the
.Dq propolice
stack protection extension, which is enabled by default.
This extension reorders local variable declarations and adds stack consistency
checks at run time, in order to detect stack overflows, and will attempt to
report the problem in the system logs, and abort the faulting process.
It can be turned off using the
.Fl fno-stack-protector
commandline option.
Note that the stack protector relies on some support code in libc.
Stand-alone programs not linked against libc must either provide their own
support bits, or use the
.Fl fno-stack-protector
option.
.It
.Nm gcc
recognizes a new flag,
.Fl Wbounded ,
to perform basic checks on functions which accept buffers and sizes.
An extra attribute,
.Dv __bounded__ ,
has been added to mark functions that can be
checked this way.
.It
.Nm gcc
recognizes a new format attribute, kprintf, to deal with the extra format
arguments
.Ql %b ,
.Ql %r ,
and
.Ql %z
used in the
.Ox
kernel.
.It
.Nm gcc
does not store its version string in objects.
This behavior can be restored with
.Fl fident .
.El
.Sh ATTRIBUTES
The
.Dv __bounded__
attribute is used to type-check functions whose parameters pass fixed-length
buffers and their sizes.
The syntax for normal buffers is:
.Pp
.Li __attribute__ ((__bounded__ (
.Dv __buffer__ ,
.Va buffer ,
.Va length
.Li )))
.Pp
where
.Fa buffer
contains the parameter number (starting from 1) of the pointer to the buffer,
and
.Fa length
contains the parameter number of the buffer length argument.
.Pp
.Nm gcc
will emit a warning if the length argument is a constant larger than the
actual size of the buffer.
If the buffer is not a statically declared array of fixed length, no warnings
will be generated.
Refer to
.Xr memcpy 3
for an example of a function with this check.
.Pp
For checking strings, just use
.Dv __string__
instead of
.Dv __buffer__ :
.Pp
.Li __attribute__ ((__bounded__ (
.Dv __string__ ,
.Va buffer ,
.Va length
.Li )))
.Pp
In addition to the checks described above, this also tests if the
.Va length
argument was wrongly derived from a
.Fn sizeof "void *"
operation.
.Xr strlcpy 3
is a good example of a string function with this check.
.Pp
Some functions specify the length as two arguments:
the number of elements and the size of each element.
In this case, use the
.Dv __size__
attribute:
.Pp
.Li __attribute__ ((__bounded__ (
.Dv __size__ ,
.Va buffer ,
.Va nmemb ,
.Va size
.Li )))
.Pp
where
.Va buffer
contains the parameter number of the pointer to the buffer,
.Va nmemb
contains the parameter number of the number of members, and
.Va size
has the parameter number of the size of each element.
The type checks performed by
.Dv __size__
are the same as the
.Dv __buffer__
attribute.
See
.Xr fread 3
for an example of this type of function.
.Pp
If a function accepts a buffer parameter and specifies that it has to be of a
minimum length, the __minbytes__ attribute can be used:
.Pp
.Li __attribute__ ((__bounded__ (
.Dv __minbytes__ ,
.Va buffer ,
.Va minsize
.Li )))
.Pp
where
.Va buffer
contains the parameter number of the pointer to the buffer, and
.Va minsize
specifies the minimum number of bytes that the buffer should be.
.Xr ctime_r 3
is an example of this type of function.
.Pp
If
.Fl Wbounded
is specified with
.Fl Wformat ,
additional checks are performed on
.Xr sscanf 3
format strings.
The
.Ql %s
fields are checked for incorrect bound lengths by checking the size of the
buffer associated with the format argument.
.Sh SEE ALSO
.Xr gcc 1
.Pp
.Pa http://www.trl.ibm.com/projects/security/ssp
.Sh CAVEATS
The
.Fl Wbounded
flag only works with statically allocated fixed-size buffers.
Since it is applied at compile-time, dynamically allocated memory buffers
and non-constant arguments are ignored.
@


1.17
log
@rename BUGS section to CAVEATS more appropriately; ok avsm & others
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.16 2003/12/28 18:09:46 miod Exp $
@


1.16
log
@Document kprintf %: removal here too; anil
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.15 2003/08/26 02:19:13 tedu Exp $
d281 1
a281 1
.Sh BUGS
@


1.15
log
@stop dumping "GCC: (GNU) 2.95.3 20010125 (prerelease, propolice)" into
every object by default.  ok avsm@@ henning@@ marc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.14 2003/07/25 06:18:44 jmc Exp $
a159 1
.Ql %: ,
@


1.14
log
@kill a bit of whitespace at EOL;
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.13 2003/07/25 02:48:11 avsm Exp $
d167 5
@


1.13
log
@New format attribute __kprintf__, which understands the special kernel
format args (%r,%z,%:,%b).  A step towards reenabling -Wformat in the
kernel again ...
deraadt@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.12 2003/06/26 18:32:12 avsm Exp $
d254 1
a254 1
where 
d269 1
a269 1
The 
@


1.12
log
@document the new attribute __bounded__
with mdoc help from jmc@@, deraadt@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.11 2003/06/14 05:13:18 jmc Exp $
d155 12
@


1.11
log
@remove some trailing whitespace;
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.10 2003/06/04 17:59:01 espie Exp $
d4 1
d146 9
d156 105
d265 6
@


1.10
log
@document -fno-builtin-<function>, ok miod@@
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.9 2003/04/14 06:51:49 jmc Exp $
d41 1
a41 1
does not search under 
d48 1
a48 1
the 
d54 2
a55 2
trampoline code marks the smallest possible area around the trampoline stub 
executable using 
d59 1
a59 1
The 
d61 1
a61 1
option does not include 
d65 1
a65 1
is very unsafe with code that plays tricks with casts, bypassing the 
d70 1
a70 1
was backported from 
d79 1
a79 1
the definition of 
d86 1
a86 1
arguments that can't be 
d106 1
a106 1
platforms, 
d108 1
a108 1
still uses 
d147 1
a147 1
.Xr gcc 1 
@


1.9
log
@standalone/stand alone -> stand-alone;

from NetBSD (Igor Sobrado);
httpd stuff passed to apache people;

ok millert@@
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.8 2003/03/12 22:52:17 deraadt Exp $
d67 9
@


1.8
log
@typo; Ross.Richardson@@utas.edu.au
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.7 2003/03/06 19:45:24 jmc Exp $
d132 1
a132 1
Standalone programs not linked against libc must either provide their own
@


1.7
log
@broken .Xr's;
typos, rather than dead references

ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.6 2003/02/27 21:02:49 espie Exp $
d111 1
a111 1
Those calls can be traced using
@


1.6
log
@add -trace-ctors-dtors option to collect2.
Very useful for figuring out what's wrong with C++ shared libraries
on a.out platforms.
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.5 2003/02/27 16:22:31 millert Exp $
d71 1
a71 1
.Xr syslog 2 ,
@


1.5
log
@typo; Sebastian Stark
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.4 2002/12/02 20:25:35 deraadt Exp $
d103 12
@


1.4
log
@spelling
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.3 2002/12/02 16:40:39 miod Exp $
d101 1
a101 1
.Xr longjump 3 -
@


1.3
log
@Document the lovely propolice changes.
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.2 2002/11/24 01:02:53 espie Exp $
d113 1
a113 1
This extension reorders local variables declarations and adds stack consistency
@


1.2
log
@wrong word. Thx theo
@
text
@d1 1
a1 1
.\" $OpenBSD: gcc-local.1,v 1.1 2002/11/24 00:58:17 espie Exp $
d27 1
a27 1
.Dd Nov. 23, 2002
d106 18
d127 2
@


1.1
log
@Some documentation for local gcc changes.
Insights and grumblings from Theo, Todd, Miod.
@
text
@d1 1
a1 1
.\" $OpenBSD$
d72 1
a72 1
and shut erroneous warnings when used with
@

