head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.1.1.0.58
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.56
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.54
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.52
	OPENBSD_5_0:1.1.1.1.0.50
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.48
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.46
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.42
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.44
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.40
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.38
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.36
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.34
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.32
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.30
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.28
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.26
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.24
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.22
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.20
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.18
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.16
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.14
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.12
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.10
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.8
	OPENBSD_2_9_BASE:1.1.1.1
	GCC-2_95_pre3_test3:1.1.1.1
	GCC-2_95_pre3_test2:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.6
	OPENBSD_2_8_BASE:1.1.1.1
	GCC-2_95_pre3_20000916:1.1.1.1
	GCC-2_95_pre3_20000527:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	GCC-2_95_2:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	GCC-2_95_1:1.1.1.1
	CYGNUS-990718:1.1.1.1
	CYGNUS-990629:1.1.1.1
	CYGNUS-990608:1.1.1.1
	CYGNUS-19990517:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2013.08.06.19.16.38;	author miod;	state dead;
branches;
next	1.1;

1.1
date	99.05.26.13.34.14;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.26.13.34.14;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove gcc 2.95 from the tree. One of the least bogus compiler we had (although
it had required some generous bandaid), but unfortunately not able to compile
most of the Real World (tm) software.
@
text
@#!/bin/sh
#
# NAME:
#	fixcpp - fix CPP errors
#
# SYNOPSIS:
#	fixcpp [-c][-p patch_file][-b bak_dir][-n new_dir] files(s)
#
# DESCRIPTION:
#	For each named file, use sed(1) to fixup any descriptive
#	text after #else or #endif or that is not properly
#	commented as this causes ANSI compilers to generate
#	unnecessary warnings.
#
#	Naturally this script is not guaranteed to be bullet
#	proof, use of -n or -b is advisable!
#
#	-c causes fixcpp to make sure that only files that
#	needed changing are affected by returning the original
#	file to its original location if no changes were needed.
#
#	-p causes fixcpp to append to a patch file the context
#	diffs of the changes wrought.
#
# SEE ALSO:
#	sed(1)
#
# AMENDED:
#	90/08/08 22:46:32 (sjg)
#
# RELEASED:
#	90/08/08 22:46:34 v1.4
#
# SCCSID:
#	@@(#)fixcpp.sh 1.4 90/08/08 22:46:32 (sjg)
#
#	@@(#)Copyright (c) 1990 Simon J. Gerraty
#
#       This is free software.  It comes with NO WARRANTY.
#       Everyone is granted permission to copy, modify and
#       redistribute this source code provided that all
#       recipients are given similar rights, and that the above
#       copyright notice and this notice are preserved in all
#       copies. 

TMPF=/tmp/fixcpp.$$
NEWDIR=
BAKDIR=
PATCHF=
CHECK=

set -- `getopt "cp:b:n:" $*`
if [ $? != 0 ]; then
	echo "$0 [-c][-p patch_file][-b bakup_dir][-n new_dir] file [file ...]" >&2
	exit 1
fi
for i in $*
do
	case $i in
	-c)	CHECK=yes; shift;;
	-p)	PATCHF=$2; shift 2;;
	-b)	BAKDIR=$2; shift 2;;
	-n)	NEWDIR=$2; shift 2;;
	--)	shift; break;;
	esac
done
NEWDIR=${NEWDIR:-.}
if [ $BAKDIR ]; then
	if [ ! -d $BAKDIR ]; then
		echo "$0: no such directory -- $BAKDIR" >&2
		exit 1
	fi
fi



for i in $*
do
	if [ $BAKDIR ]; then
		mv $i $BAKDIR
		infile=$BAKDIR/$i
	else
		if [ "$NEWDIR" = "." ]; then
			mv $i ${TMPF}
			infile=${TMPF}
		else
			infile=$i
		fi
	fi	
	sed -e 's;^#\([ 	]*e[nl][^ 	]*[ 	][ 	]*\)\([^/ 	][^\*].*\);#\1/* \2 */;' -e 's;^#\([ 	]*e[nl][^ 	]*[ 	][ 	]*\)\([^/ 	]\)$;#\1/* \2 */;' $infile >${NEWDIR}/$i
	if [ "${CHECK}" = "yes" -o ${PATCHF} ]; then
		if cmp -s $infile ${NEWDIR}/$i ; then
			if [ "${CHECK}" = "yes" ]; then
				if [ $BAKDIR ]; then
					mv $infile ${NEWDIR}/$i
				else
					rm ${NEWDIR}/$i
				fi
			fi
		else
			if [ $PATCHF ]; then
				diff -c $infile ${NEWDIR}/$i >> ${PATCHF}
			fi
		fi
	fi

done

rm -f ${TMPF}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@egcs projects compiler system
Exact copy of the snapshot, except for the removal of
	texinfo/
	gcc/ch/
	libchill/

@
text
@@
