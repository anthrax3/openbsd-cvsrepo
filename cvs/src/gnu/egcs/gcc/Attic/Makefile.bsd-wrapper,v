head	1.24;
access;
symbols
	OPENBSD_5_4:1.23.0.14
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.23.0.12
	OPENBSD_5_3_BASE:1.23
	OPENBSD_5_2:1.23.0.10
	OPENBSD_5_2_BASE:1.23
	OPENBSD_5_1_BASE:1.23
	OPENBSD_5_1:1.23.0.8
	OPENBSD_5_0:1.23.0.6
	OPENBSD_5_0_BASE:1.23
	OPENBSD_4_9:1.23.0.4
	OPENBSD_4_9_BASE:1.23
	OPENBSD_4_8:1.23.0.2
	OPENBSD_4_8_BASE:1.23
	OPENBSD_4_7:1.22.0.2
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.4
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.21.0.12
	OPENBSD_4_5_BASE:1.21
	OPENBSD_4_4:1.21.0.10
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.21.0.8
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.21.0.6
	OPENBSD_4_2_BASE:1.21
	OPENBSD_4_1:1.21.0.4
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.2
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.19.0.10
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.19.0.8
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.19.0.6
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.19.0.4
	OPENBSD_3_6_BASE:1.19
	OPENBSD_3_5:1.19.0.2
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.14.0.2
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.4
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5;
locks; strict;
comment	@# @;


1.24
date	2013.08.06.19.16.38;	author miod;	state dead;
branches;
next	1.23;

1.23
date	2010.05.25.00.24.58;	author espie;	state Exp;
branches;
next	1.22;

1.22
date	2009.03.09.21.07.06;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2006.07.17.09.47.57;	author espie;	state Exp;
branches;
next	1.20;

1.20
date	2006.07.12.23.00.07;	author espie;	state Exp;
branches;
next	1.19;

1.19
date	2004.02.21.01.03.11;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2004.01.15.17.55.13;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2003.12.03.21.30.12;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	2003.11.24.17.12.55;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2003.04.08.01.55.05;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.16.18.28.40;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2003.02.16.17.07.22;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.01.18.23.49.50;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2003.01.14.20.04.44;	author marc;	state Exp;
branches;
next	1.10;

1.10
date	2002.11.24.00.58.16;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2002.11.22.20.26.12;	author marc;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.21.16.37.19;	author hugh;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.29.16.56.10;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.28.21.56.00;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	99.08.16.00.05.20;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	99.05.31.21.30.24;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.05.28.16.15.12;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	99.05.28.01.20.53;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	99.05.26.15.47.00;	author espie;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Remove gcc 2.95 from the tree. One of the least bogus compiler we had (although
it had required some generous bandaid), but unfortunately not able to compile
most of the Real World (tm) software.
@
text
@#	$OpenBSD: Makefile.bsd-wrapper,v 1.23 2010/05/25 00:24:58 espie Exp $

MAN=		cpp.1 gcc.1 protoize.1 gcov.1
MLINKS+=	gcc.1 cc.1
MLINKS+=	protoize.1 unprotoize.1

.if defined(BOOTSTRAP)
LANGUAGES=--enable-languages=c
.else
LANGUAGES=--enable-languages='c,c++,objc' 
MAN+=		cp/g++.1
MLINKS+=	g++.1 c++.1
BEFOREMAN=	config.status
.endif

FAKE_FILES=	/usr/share/info/cppinternals.info \
		/usr/share/info/gccint.info

LIBIBERTY_INCLUDES=${.CURDIR}/../../lib/libiberty/include
GNUCFLAGS=	${CFLAGS} ${COPTS} -DOPENBSD_NATIVE \
		-I${LIBIBERTY_INCLUDES}

VAXHOST_CFLAGS=	-DIN_GCC -DOPENBSD_NATIVE -DHAVE_CONFIG_H -O0
MAKE_FLAGS= 	CFLAGS="${GNUCFLAGS}" \
		CC="${CC}" LDFLAGS="${LDSTATIC}" \
		DEMANGLER_PROG= \
		DEMANGLE_H= \
		LIBIBERTY_INCLUDES=${LIBIBERTY_INCLUDES} \
		build_infodir=. \
		MAKEINFO='makeinfo --no-split'

.if ${MACHINE_ARCH} == "vax"
MAKE_FLAGS+=	HOST_CFLAGS="${VAXHOST_CFLAGS} -I${LIBIBERTY_INCLUDES}"
.endif

GXX_INCDIR=	/usr/include/g++
CLEANFILES=	.gdbinit */.gdbinit *.info* \
		c-parse.c c-parse.h c-parse.y cexp.c cp/parse.c cp/parse.h \
		f/*.info* objc-parse.c objc-parse.y target_path \
		genrtl.c genrtl.h fixinc.sh fixinc/Makefile \
		po/Makefile  po/Makefile.in  po/POTFILES

CXX_HEADERS=	${.CURDIR}/cp/inc/typeinfo ${.CURDIR}/cp/inc/exception \
		${.CURDIR}/cp/inc/new ${.CURDIR}/cp/inc/new.h

.if ${MACHINE} == "arc" || ${MACHINE} == "pmax" || ${MACHINE} == "wgrisc"
M_ARCH=		mipsel
.elif ${MACHINE} == "hkmips" || ${MACHINE} == "sgi"
M_ARCH=		mips
.else
M_ARCH=		${MACHINE_ARCH}
.endif


GCCARCH=	${M_ARCH}-unknown-openbsd${OSREV}

all:	config.status
	exec ${MAKE} ${MAKE_FLAGS} all doc

tconfig.h:	config.status
	exec ${MAKE} ${MAKE_FLAGS} tconfig.h

tree-check.h: config.status
	exec ${MAKE} ${MAKE_FLAGS} $@@


.FORCE:	.IGNORE

.include <bsd.own.mk>

.ifdef GLOBAL_AUTOCONF_CACHE
CF=	--cache-file=${GLOBAL_AUTOCONF_CACHE}
.else
CF=
.endif

config.status: Makefile.in configure c-parse.in
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" \
	INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
	MAKEINFO='makeinfo --no-split' \
	/bin/sh ${.CURDIR}/configure --with-gnu-as --with-gnu-ld \
		--prefix=/usr --mandir='$$(prefix)/share/man' \
		--with-local-prefix=/usr ${CF} \
		${LANGUAGES} --enable-cpp --disable-nls \
		--with-gxx-include-dir=${GXX_INCDIR} ${GCCARCH} && touch config.status

includes:
	@@-for i in ${CXX_HEADERS}; do \
		j=`basename $$i` \
		cmp -s $$i ${DESTDIR}/${GXX_INCDIR}/$$j || \
		    ${INSTALL} ${INSTALL_COPY} -m 444 $$i \
		    ${DESTDIR}/${GXX_INCDIR}; \
	done

.ifdef NOMAN
maninstall:
	@@echo NOMAN is set
.endif

# XXX INSTALL_TARGET should be install-normal, more or less
# the only reason is not so is because our man handling is special
# (pre-formatted) and also because of cpp, that we install by hand
# elsewhere, until we get rid of that old `compatibility' script.

target_path: config.status
	__target=`sed -n '/^target=/s/target=//p' Makefile`; \
	__version=`sed -n '/^gcc_version=/s/gcc_version=//p' Makefile`; \
	echo /usr/lib/gcc-lib/$$__target/$$__version >target_path

install:	maninstall target_path
	${MAKE} ${MAKE_FLAGS} \
		prefix=${DESTDIR}/usr \
		INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
		infodir=${DESTDIR}/usr/share/info \
		tooldir=/tmp assertdir=/tmp \
		INSTALL_TARGET='install-common $$(INSTALL_HEADERS) \
		     $$(INSTALL_LIBGCC) install-info \
		     intl.install lang.install-normal' \
		NO_TARGET_GCC=true bindir=${DESTDIR}/usr/bin \
		install
	chown -R ${BINOWN}:${BINGRP} ${DESTDIR}/usr/lib/gcc-lib
	chmod -R a+rX ${DESTDIR}/usr/lib/gcc-lib
	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -m 755 cpp \
	   ${DESTDIR}/usr/libexec/cpp
	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -m 755 xgcc \
	   ${DESTDIR}/usr/bin/gcc
	ln -f ${DESTDIR}/usr/bin/gcc ${DESTDIR}/usr/bin/cc
	for i in ${FAKE_FILES}; do \
	    touch ${DESTDIR}$$i; \
	done

clean cleandir: 
	-@@if [ -e Makefile ]; then ${MAKE} distclean; fi
	-rm -f ${CLEANFILES}

depend:
	ln -sf ${.CURDIR}/cccp.1 ${.OBJDIR}/cpp.1

lint:
	# Nothing here so far...

tags:
	# Nothing here so far...

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
.ifndef NOMAN
.include <bsd.man.mk>
.endif
@


1.23
log
@unlink g77 from the build.
as discussed with Theo, so that he can synch set.

(eventual gcc2 fallout to fix later)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.22 2009/03/09 21:07:06 miod Exp $
@


1.22
log
@Needed dependencies for make -j to behave correctly, backported from gcc 3;
ok espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.21 2006/07/17 09:47:57 espie Exp $
d10 2
a11 2
LANGUAGES=--enable-languages='c,c++,objc,f77' 
MAN+=		cp/g++.1 f/g77.1
a12 1
MLINKS+=	g77.1 f77.1
a122 8
#	if [ -e ${DESTDIR}/usr/lib/libf2c.a ]; then \
#		chown ${BINOWN}:${BINGRP} ${DESTDIR}/usr/lib/libf2c.a; \
#		chmod 444 ${DESTDIR}/usr/lib/libf2c.a; \
#	fi
	if [ -e ${DESTDIR}/usr/include/f2c.h ]; then \
		chown ${BINOWN}:${BINGRP} ${DESTDIR}/usr/include/f2c.h; \
		chmod 444 ${DESTDIR}/usr/include/f2c.h; \
	fi
a127 4
	[ -f ${DESTDIR}/usr/bin/g77 ] && \
		ln -f ${DESTDIR}/usr/bin/g77 ${DESTDIR}/usr/bin/f77
#	ln -fs `cat target-path`/cpp \
#		${DESTDIR}/usr/libexec
@


1.21
log
@make sure we pass makeinfo --no-split around, fixes gcc.info/g77.info
generation issues.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.20 2006/07/12 23:00:07 espie Exp $
d14 1
d106 1
a106 1
target_path: Makefile
@


1.20
log
@makeinfo --no-split, simplifies sets immensely.
Approved deraadt@@, kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.19 2004/02/21 01:03:11 espie Exp $
d29 2
a30 1
		build_infodir=.
@


1.19
log
@zap cccp.1, install phantom info.
ok theo
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.18 2004/01/15 17:55:13 espie Exp $
d16 2
a17 29
FAKE_FILES=	/usr/share/info/cpp.info-4 \
		/usr/share/info/cpp.info-5 \
		/usr/share/info/cppinternals.info \
		/usr/share/info/gccint.info \
		/usr/share/info/gccint.info-1 \
		/usr/share/info/gccint.info-2 \
		/usr/share/info/gccint.info-3 \
		/usr/share/info/gccint.info-4 \
		/usr/share/info/gccint.info-5 \
		/usr/share/info/gccint.info-6 \
		/usr/share/info/gccint.info-7 \
		/usr/share/info/gccint.info-8 \
		/usr/share/info/gccint.info-9 \
		/usr/share/info/gccint.info-10 \
		/usr/share/info/gccint.info-11 \
		/usr/share/info/gccint.info-12 \
		/usr/share/info/gccint.info-13 \
		/usr/share/info/gccint.info-14 \
		/usr/share/info/gccint.info-15 \
		/usr/share/info/gccint.info-16 \
		/usr/share/info/gccint.info-17 \
		/usr/share/info/gccint.info-18 \
		/usr/share/info/gccint.info-19 \
		/usr/share/info/gccint.info-20 \
		/usr/share/info/gccint.info-21 \
		/usr/share/info/gccint.info-22 \
		/usr/share/info/gccint.info-23 \
		/usr/share/info/gccint.info-24 \
		/usr/share/info/gccint.info-25
d79 1
@


1.18
log
@extra target to make sure tconfig.h is rebuilt, to use with libobjc.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.17 2003/12/03 21:30:12 espie Exp $
d3 1
a3 1
MAN=		cccp.1 gcc.1 gcc-local.1 protoize.1 gcov.1
a4 1
MLINKS+=	cccp.1 cpp.1
d16 30
d165 3
d174 1
a174 1
	# Nothing here so far...
@


1.17
log
@HOST_CFLAGS need to find libiberty too, even on vax!
ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.16 2003/11/24 17:12:55 espie Exp $
d56 3
@


1.16
log
@Switch to using libiberty in new location.
Disable building of cxxfilt in gcc, build it from its own directory.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.15 2003/04/08 01:55:05 millert Exp $
d30 1
a30 1
MAKE_FLAGS+=	HOST_CFLAGS="${VAXHOST_CFLAGS}"
@


1.15
log
@fix another non-POSIX chown
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.14 2003/02/16 18:28:40 deraadt Exp $
d17 4
d22 10
a33 1
GNUCFLAGS=	CFLAGS="${CFLAGS} ${COPTS} -DOPENBSD_NATIVE"
d52 1
a52 1
GCCARCH=	${M_ARCH}-unknown-openbsd`uname -r`
d55 1
a55 7
.if ${MACHINE_ARCH} == "vax"
	${MAKE} ${GNUCFLAGS} CC="${CC}" LDFLAGS="${LDSTATIC}" \
		HOST_CFLAGS="${VAXHOST_CFLAGS}" build_infodir=. all doc
.else
	${MAKE} ${GNUCFLAGS} CC="${CC}" LDFLAGS="${LDSTATIC}" \
		build_infodir=. all doc
.endif
d58 1
a58 2
	${MAKE} ${GNUCFLAGS} CC="${CC}" LDFLAGS="${LDSTATIC}" \
		build_infodir=. tree-check.h
d104 2
a105 1
	${MAKE} ${GNUCFLAGS} prefix=${DESTDIR}/usr \
a107 1
		build_infodir=. \
@


1.14
log
@a few missing man pages converted from info documents; work done by jmc
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.13 2003/02/16 17:07:22 deraadt Exp $
d108 1
a108 1
	chown -R ${BINOWN}.${BINGRP} ${DESTDIR}/usr/lib/gcc-lib
d111 1
a111 1
#		chown ${BINOWN}.${BINGRP} ${DESTDIR}/usr/lib/libf2c.a; \
d115 1
a115 1
		chown ${BINOWN}.${BINGRP} ${DESTDIR}/usr/include/f2c.h; \
@


1.13
log
@typo
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.12 2003/01/18 23:49:50 deraadt Exp $
d3 1
a3 1
MAN=		cccp.1 gcc.1 gcc-local.1 protoize.1
@


1.12
log
@protoize(1) man page, cobbled from various places by jmc@@prioris.mini.pw.edu.pl
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.11 2003/01/14 20:04:44 marc Exp $
d6 1
a6 1
MLINKS+=	protoize.1 unprotize.1
@


1.11
log
@
Bye-bye libc_r.   libc_r and libnpthread go away.  libpthread
takes their place.  The -pthread option to gcc uses libpthread.
ppc portion of patch from drahn@@ (thanks).   gcc portions of patch
OK espie@@.   Ports testing (no bad effects!) by naddy@@

best build sequence is: build gcc, build system, build ports
remove /usr/lib/lib{c_r,npthread}.*.   Note, once libc_r and
libnpthread is removed threaded ports will stop working until
they have been re-built using the libpthread and the updated gcc.
That's why the above build sequence is recommended.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.10 2002/11/24 00:58:16 espie Exp $
d3 1
a3 1
MAN=		cccp.1 gcc.1 gcc-local.1
d6 1
d12 1
a12 1
MAN+= cp/g++.1 f/g77.1
@


1.10
log
@Some documentation for local gcc changes.
Insights and grumblings from Theo, Todd, Miod.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.9 2002/11/22 20:26:12 marc Exp $
d16 1
a16 1
VAXHOST_CFLAGS=	-DIN_GCC -DOPENBSD_NATIVE -DHAVE_CONFIG_H ${PTHREAD_CFLAGS} -O0
d19 1
a19 1
GNUCFLAGS=	CFLAGS="${CFLAGS} ${COPTS} -DOPENBSD_NATIVE ${PTHREAD_CFLAGS}"
a143 5
.endif
.if defined(WANT_LIBPTHREAD)
PTHREAD_CFLAGS=-DOPENBSD_LIBPTHREAD
.else
PTHREAD_CFLAGS=
@


1.9
log
@specs for -lnpthread.
Put WANT_LIBPTHREAD=yes in /etc/mk.conf and re-build gcc to use
libnpthread instead of libc_r
ok espie@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.8 2002/01/21 16:37:19 hugh Exp $
d3 1
a3 1
MAN=		cccp.1 gcc.1 
@


1.8
log
@Switch last workaround to a form easier for espie to maintain.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.7 2001/01/29 16:56:10 espie Exp $
d16 1
a16 1
VAXHOST_CFLAGS=	-DIN_GCC -DOPENBSD_NATIVE -DHAVE_CONFIG_H -O0
d19 1
a19 1
GNUCFLAGS=	CFLAGS="${CFLAGS} ${COPTS} -DOPENBSD_NATIVE"
d144 5
@


1.7
log
@Internal cpp changed name
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.6 2000/03/28 21:56:00 deraadt Exp $
d16 2
d41 4
d47 1
@


1.6
log
@MLINK f77 to g77
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.5 1999/08/16 00:05:20 niklas Exp $
d110 1
a110 1
	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -m 755 xcpp \
@


1.5
log
@Protect against spaces in CC (which is not unlikely) and LDSTATIC
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.4 1999/05/31 21:30:24 millert Exp $
d13 1
@


1.4
log
@Disable fixincludes stage in a different way that does not rely on timestamps.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.3 1999/05/28 16:15:12 espie Exp $
d38 1
a38 1
	${MAKE} ${GNUCFLAGS} CC=${CC} LDFLAGS=${LDSTATIC} \
d42 1
a42 1
	${MAKE} ${GNUCFLAGS} CC=${CC} LDFLAGS=${LDSTATIC} \
@


1.3
log
@Clean-up clean target.
Remove old stuff (duplicates)
and misleading LIBIBERTY setting (handled by the x-openbsd fragment)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.2 1999/05/28 01:20:53 espie Exp $
a37 2
# disable the fixincludes mechanism
	echo "#!/bin/sh" >${.OBJDIR}/fixinc.sh
@


1.2
log
@- fix mandir to $(prefix)/share/man
- force gcc_tooldir to /tmp, avoid mkdir /usr/arch-unknown-openbsd
- install gcc driver by hand, no arch-unknown-openbsd-gcc
- alias g77 to f77
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.1 1999/05/26 15:47:00 espie Exp $
d7 4
a10 1
.if !defined(BOOTSTRAP)
d15 1
a15 1
GPP_INC_DIR=	/usr/include/g++
d17 1
a17 1
CLEANFILES=	.gdbinit cp/.gdbinit *.info* bi-parser.c bi-parser.h \
d19 3
a21 1
		f/.gdbinit f/*.info* objc-parse.c objc-parse.y target_path
a33 5
.if defined(BOOTSTRAP)
LANGUAGES=--enable-languages=c
.else
LANGUAGES=--enable-languages='c,c++,objc,f77' 
.endif
a57 12
config: .FORCE
.ifndef GLOBAL_AUTOCONF_CACHE
	-rm -f config.cache
.endif
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" \
	INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
	/bin/sh ${.CURDIR}/configure --with-gnu-as --with-gnu-ld \
		--prefix=/usr -mandir='$$(prefix)/share/man' \
		--with-local-prefix=/usr ${CF} \
		${LANGUAGES} --enable-cpp --disable-nls \
		--with-gxx-include-dir=${GPP_INC_DIR} ${GCCARCH}

d65 1
a65 1
		--with-gxx-include-dir=${GPP_INC_DIR} ${GCCARCH} && touch config.status
d70 1
a70 1
		cmp -s $$i ${DESTDIR}/${GPP_INC_DIR}/$$j || \
d72 1
a72 1
		    ${DESTDIR}/${GPP_INC_DIR}; \
a95 1
		LIBIBERTY=-liberty \
d121 1
a121 2
clean cleandir:
	rm -f ${CLEANFILES}
d123 1
@


1.1
log
@Wrappers + lib versions
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.bsd-wrapper,v 1.34 1998/10/18 20:02:30 millert Exp $
d65 2
a66 1
		--prefix=/usr --with-local-prefix=/usr ${CF} \
d74 2
a75 1
		--prefix=/usr --with-local-prefix=/usr ${CF} \
d111 1
a111 1
		     intl.install lang.install-normal install-driver' \
a113 1
	ln -f ${DESTDIR}/usr/bin/gcc ${DESTDIR}/usr/bin/cc
d126 5
@

