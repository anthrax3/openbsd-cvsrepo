head	1.8;
access;
symbols
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.26
	OPENBSD_5_0:1.5.0.24
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.22
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.20
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.16
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.18
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.14
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.12
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.10
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.8
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.6
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.4
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.2.0.16
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.14
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.12
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.10
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	GCC-2_95_pre3_test3:1.1.1.1
	GCC-2_95_pre3_test2:1.1.1.1
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	GCC-2_95_pre3_20000916:1.1.1.1
	GCC-2_95_pre3_20000527:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	GCC-2_95_2:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	GCC-2_95_1:1.1.1.1
	CYGNUS-990718:1.1.1.1
	CYGNUS-990629:1.1.1.1
	CYGNUS-990608:1.1.1.1
	CYGNUS-19990517:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2013.08.06.19.16.43;	author miod;	state dead;
branches;
next	1.7;

1.7
date	2012.08.28.10.29.09;	author jsg;	state Exp;
branches;
next	1.6;

1.6
date	2012.04.12.12.09.30;	author kurt;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.13.17.51.18;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.20.15.32.45;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2004.07.04.22.48.28;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.05.19.12.04;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	99.05.26.13.35.41;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.26.13.35.41;	author espie;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Remove gcc 2.95 from the tree. One of the least bogus compiler we had (although
it had required some generous bandaid), but unfortunately not able to compile
most of the Real World (tm) software.
@
text
@/* Configuration file for an m68k OpenBSD target.
   Copyright (C) 1999 Free Software Foundation, Inc.

This file is part of GNU CC.

GNU CC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GNU CC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU CC; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

/* m68k is an old configuration that does not yet use the TARGET_CPU_DEFAULT
   framework. OpenBSD uses -m68020-60 by default.  */
#define TARGET_DEFAULT \
	(MASK_BITFIELD | MASK_68881 | MASK_68020 | MASK_68040 | MASK_68060)

#include <m68k/m68k.h>

/* Get generic OpenBSD definitions.  */
#define OBSD_OLD_GAS
#include <openbsd.h>

/* Define __HAVE_68881__ in preprocessor, unless -msoft-float is specified.
   This will control the use of inline 68881 insns in certain macros.  */
#undef CPP_SPEC
#define CPP_SPEC "%{!msoft-float:-D__HAVE_68881__ -D__HAVE_FPU__} \
		  %{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT} \
		  %{fPIC:-D__PIC__} %{fpic:-D__PIC__}"

/* Run-time target specifications */
#define CPP_PREDEFINES "-D__unix__ -D__m68k__ -D__mc68000__ -D__mc68020__ -D__OpenBSD__ -Asystem(unix) -Asystem(OpenBSD) -Acpu(m68k) -Amachine(m68k)"

#undef ASM_SPEC
#define ASM_SPEC "%| %{m68030} %{m68040} %{m68060} %{fpic:-k} %{fPIC:-k -K}"

/* Layout of source language data types.  */

/* This must agree with <machine/_types.h> */
#undef SIZE_TYPE
#define SIZE_TYPE "long unsigned int"

#undef PTRDIFF_TYPE
#define PTRDIFF_TYPE "long int"

#undef WCHAR_TYPE
#define WCHAR_TYPE "int"

#undef WCHAR_TYPE_SIZE
#define WCHAR_TYPE_SIZE 32

/* Storage layout.  */

/* Every structure or union's size must be a multiple of 2 bytes.  */
#define STRUCTURE_SIZE_BOUNDARY 16

/* optimize_reg_copy_3() is known to misbehave with some constructs */
#define	BROKEN_OPTIMIZE_REG_COPY_3_P

/* Specific options for DBX Output.  */

/* This is BSD, so it wants DBX format.  */
#define DBX_DEBUGGING_INFO

/* Do not break .stabs pseudos into continuations.  */
#define DBX_CONTIN_LENGTH 0

/* This is the char to use for continuation (in case we need to turn
   continuation back on).  */
#define DBX_CONTIN_CHAR '?'

/* Stack & calling: aggregate returns.  */

/* Don't default to pcc-struct-return, because gcc is the only compiler, and
   we want to retain compatibility with older gcc versions.  */
#define DEFAULT_PCC_STRUCT_RETURN 0

/* Assembler format: exception region output.  */

/* All configurations that don't use elf must be explicit about not using
   dwarf unwind information. egcs doesn't try too hard to check internal
   configuration files...  */
#define DWARF2_UNWIND_INFO 0


/* TODO: ASM_OUTPUT_MI_THUNK is busted. I need to figure out 
   what bra func@@PLTPC means under linux, and find the corresponding 
   construction for our gas/pic setup.  */
#if 0
/* Taken from linux.h. Processor dependent optimized code to handle C++
   multiple inheritance vtable lookup.  */

/* Output code to add DELTA to the first argument, and then jump to FUNCTION.
   Used for C++ multiple inheritance.  */
#define ASM_OUTPUT_MI_THUNK(FILE, THUNK_FNDECL, DELTA, FUNCTION)	\
do {									\
  if (DELTA > 0 && DELTA <= 8)						\
    asm_fprintf (FILE, "\taddq.l %I%d,4(%Rsp)\n", DELTA);		\
  else if (DELTA < 0 && DELTA >= -8)					\
    asm_fprintf (FILE, "\tsubq.l %I%d,4(%Rsp)\n", -DELTA);		\
  else									\
    asm_fprintf (FILE, "\tadd.l %I%d,4(%Rsp)\n", DELTA);		\
									\
  if (flag_pic)								\
    {									\
      fprintf (FILE, "\tbra.l ");					\
      assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));	\
      fprintf (FILE, "@@PLTPC\n");					\
    }									\
  else									\
    {									\
      fprintf (FILE, "\tjmp ");						\
      assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));	\
      fprintf (FILE, "\n");						\
    }									\
} while (0)
#endif

@


1.7
log
@-fPIC and -fpic for m68k
ok miod@@ deraadt@@
@
text
@@


1.6
log
@Remove incorrect -pthread preprocessor define _POSIX_THREADS and replace
with _REENTRANT. Also remove undef _POSIX_THREADS in phread.h.
From brad@@comstyle.com. okay guenther@@
@
text
@d35 3
a37 1
#define CPP_SPEC "%{!msoft-float:-D__HAVE_68881__ -D__HAVE_FPU__} %{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}"
@


1.5
log
@Adapt to the machine/_types.h changes; size_t and ptrdiff_t are now
defined in terms of long, not int on all architectures.
@
text
@d35 1
a35 1
#define CPP_SPEC "%{!msoft-float:-D__HAVE_68881__ -D__HAVE_FPU__} %{posix:-D_POSIX_SOURCE} %{pthread:-D_POSIX_THREADS}"
@


1.4
log
@Change defaults on m68k platforms from -m68020 to -m68020-60.
This makes a noticeable performance improvement on 68060, especially for
crypto operations (such as ssh), with basically no loss on 680[234]0.

ok deraadt@@
@
text
@d45 1
a45 1
/* This must agree with <machine/ansi.h> */
d47 1
a47 1
#define SIZE_TYPE "unsigned int"
d50 1
a50 1
#define PTRDIFF_TYPE "int"
@


1.3
log
@Disable optimize_reg_copy_3() on m68k platforms.

This is a workaround for lines 1055-1057 of tcp_input.c being miscompiled,
though the problem looks like missing use/clobber qualifiers in the
extendplussidi insn, rather than a specific optimize_reg_copy_3() issue.

A proper fix may be devised in the future, in the meantime this allows
m68k platforms to be back in track.
@
text
@d22 3
a24 2
   framework.  */
#define TARGET_DEFAULT (MASK_BITFIELD | MASK_68881 | MASK_68020)
@


1.2
log
@m68k asm knows about m68030-m68060 already, no need for upgrade, the
documentation was lacking, so pass options through.

(Prompted by Lars Hecking, ok niklas@@)
@
text
@d62 3
@


1.1
log
@Initial revision
@
text
@d39 1
a39 1
/* TODO: activate subtarget types when gas is updated.
a40 1
 */
@


1.1.1.1
log
@egcs projects compiler system
Exact copy of the snapshot, except for the removal of
	texinfo/
	gcc/ch/
	libchill/

@
text
@@
