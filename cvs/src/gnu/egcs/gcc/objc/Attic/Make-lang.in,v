head	1.4;
access;
symbols
	OPENBSD_5_4:1.3.0.58
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.56
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.54
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.52
	OPENBSD_5_0:1.3.0.50
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.48
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.46
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.42
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.44
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.40
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.38
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.36
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.34
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.32
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.30
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.28
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.26
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.24
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.22
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.20
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.18
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.16
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.14
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.12
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.10
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.8
	OPENBSD_2_9_BASE:1.3
	GCC-2_95_pre3_test3:1.1.1.1
	GCC-2_95_pre3_test2:1.1.1.1
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	GCC-2_95_pre3_20000916:1.1.1.1
	GCC-2_95_pre3_20000527:1.1.1.1
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	GCC-2_95_2:1.1.1.1
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	GCC-2_95_1:1.1.1.1
	CYGNUS-990718:1.1.1.1
	CYGNUS-990629:1.1.1.1
	CYGNUS-990608:1.1.1.1
	CYGNUS-19990517:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.08.06.19.16.49;	author miod;	state dead;
branches;
next	1.3;

1.3
date	99.09.17.11.29.18;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	99.05.26.15.24.18;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	99.05.26.13.36.23;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.26.13.36.23;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove gcc 2.95 from the tree. One of the least bogus compiler we had (although
it had required some generous bandaid), but unfortunately not able to compile
most of the Real World (tm) software.
@
text
@# Top level makefile fragment for GNU Objective-C
#   Copyright (C) 1997, 1998 Free Software Foundation, Inc.

#This file is part of GNU CC.

#GNU CC is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2, or (at your option)
#any later version.

#GNU CC is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with GNU CC; see the file COPYING.  If not, write to
#the Free Software Foundation, 59 Temple Place - Suite 330,
#Boston, MA 02111-1307, USA.

# This file provides the language dependent support in the main Makefile.
# Each language makefile fragment must provide the following targets:
#
# foo.all.build, foo.all.cross, foo.start.encap, foo.rest.encap,
# foo.info, foo.dvi,
# foo.install-normal, foo.install-common, foo.install-info, foo.install-man,
# foo.uninstall, foo.distdir,
# foo.mostlyclean, foo.clean, foo.distclean, foo.extraclean,
# foo.maintainer-clean, foo.stage1, foo.stage2, foo.stage3, foo.stage4
#
# where `foo' is the name of the language.
#
# It should also provide rules for:
#
# - making any compiler driver (eg: g++)
# - the compiler proper (eg: cc1plus)
# - define the names for selecting the language in LANGUAGES.
#
# Extra flags to pass to recursive makes.
OBJC_FLAGS_TO_PASS = \
	"OBJC_FOR_BUILD=$(OBJC_FOR_BUILD)" \
	"OBJCFLAGS=$(OBJCFLAGS)" \
	"OBJC_FOR_TARGET=$(OBJC_FOR_TARGET)" \

# Actual names to use when installing a native compiler.
#OBJC_INSTALL_NAME = `t='$(program_transform_name)'; echo c++ | sed $$t`

# Actual names to use when installing a cross-compiler.
#OBJC_CROSS_NAME = `t='$(program_transform_cross_name)'; echo c++ | sed $$t`

#
# Define the names for selecting Objective-C in LANGUAGES.
OBJC objc: cc1obj$(exeext)
OBJECTIVE-C objective-c: cc1obj$(exeext)

# Tell GNU make to ignore these if they exist.
.PHONY: objective-c objc ObjC

# Language-specific object files for Objective C.
OBJC_OBJS = objc-parse.o objc-act.o $(C_AND_OBJC_OBJS)

cc1obj$(exeext): $(P) $(OBJS) $(OBJC_OBJS) $(LIBDEPS)
	$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@@ $(OBJS) $(OBJC_OBJS) $(LIBS)

# Objective C language specific files.

objc-parse.o : objc-parse.c \
   $(CONFIG_H) $(TREE_H) $(srcdir)/toplev.h \
   $(srcdir)/c-lex.h $(srcdir)/c-tree.h $(srcdir)/input.h \
   $(srcdir)/flags.h $(srcdir)/output.h $(srcdir)/objc/objc-act.h system.h
	$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -I$(srcdir)/objc \
	-c objc-parse.c

$(INTL_TARGETS): objc-parse.c
objc-parse.c : objc-parse.y
	$(BISON) $(BISONFLAGS) -o objc-parse.c objc-parse.y

objc-parse.y: $(srcdir)/c-parse.in
	echo '/*WARNING: This file is automatically generated!*/' >tmp-objc-prs.y
	sed -e "/^ifc$$/,/^end ifc$$/d" \
	  -e "/^ifobjc$$/d" -e "/^end ifobjc$$/d" \
	  $(srcdir)/c-parse.in >>tmp-objc-prs.y
	$(SHELL) $(srcdir)/move-if-change tmp-objc-prs.y objc-parse.y

objc-act.o : $(srcdir)/objc/objc-act.c \
   $(CONFIG_H) $(TREE_H) $(RTL_H) system.h \
   $(srcdir)/c-tree.h $(srcdir)/c-lex.h $(srcdir)/toplev.h \
   $(srcdir)/flags.h $(srcdir)/objc/objc-act.h $(srcdir)/input.h \
   $(srcdir)/function.h $(srcdir)/output.h c-parse.h
	$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -I$(srcdir)/objc \
	-c $(srcdir)/objc/objc-act.c

#
# Build hooks:

objc.all.build:
objc.all.cross:
objc.start.encap:
objc.rest.encap:

objc.info:
objc.dvi:

#
# Install hooks:
# cc1obj is installed elsewhere as part of $(COMPILERS).

objc.install-normal:

objc.install-common:

objc.install-info:

objc.install-man:

objc.uninstall:
#
# Clean hooks:
# A lot of the ancillary files are deleted by the main makefile.
# We just have to delete files specific to us.
objc.mostlyclean:
	-rm -f tmp-objc-prs.y
	-rm -f objc/*$(objext) objc/xforward objc/fflags
objc.clean: objc.mostlyclean
	-rm -rf objc-headers
objc.distclean:
	-rm -f objc/Makefile objc/Make-host objc/Make-target
	-rm -f objc/config.status objc/config.cache
	-rm -f objc-parse.output
objc.extraclean:
objc.maintainer-clean:
	-rm -f objc/objc-parse.y
	-rm -f objc/objc-parse.c objc/objc-parse.output

#
# Stage hooks:

objc.stage1: stage1-start
	-mv objc/*$(objext) stage1/objc
	-mv cc1obj$(exeext) stage1
objc.stage2: stage2-start
	-mv objc/*$(objext) stage2/objc
	-mv cc1obj$(exeext) stage2
objc.stage3: stage3-start
	-mv objc/*$(objext) stage3/objc
	-mv cc1obj$(exeext) stage3
objc.stage4: stage4-start
	-mv objc/*$(objext) stage4/objc
	-mv cc1obj$(exeext) stage4

#
# Maintenance hooks:

# This target creates the files that can be rebuilt, but go in the
# distribution anyway.  It then copies the files to the distdir directory.
# ??? Note that this should be fixed once the Makefile is fixed to do
# the build in the inner directory.
objc.distdir: $(srcdir)/objc/objc-parse.c
	mkdir tmp/objc
#	cd objc ; $(MAKE) $(FLAGS_TO_PASS) objc-parse.c
	cd objc; \
	for file in *[0-9a-zA-Z+]; do \
	  ln $$file ../tmp/objc >/dev/null 2>&1 || cp $$file ../tmp/objc; \
	done
@


1.3
log
@Invoke sh move-if-change explicitly.
Official patch, submitted to egcs and accepted in the main source.
(strongly suggested by mickey@@)
@
text
@@


1.2
log
@Remove bison/yacc output files and change Makefiles rules to regenerate
them.
@
text
@d83 1
a83 1
	$(srcdir)/move-if-change tmp-objc-prs.y objc-parse.y
@


1.1
log
@Initial revision
@
text
@d67 1
a67 1
objc-parse.o : $(srcdir)/objc/objc-parse.c \
d72 1
a72 1
	-c $(srcdir)/objc/objc-parse.c
d74 2
a75 3
$(INTL_TARGETS): $(srcdir)/objc/objc-parse.c
$(srcdir)/objc/objc-parse.c : $(srcdir)/objc/objc-parse.y
	cd $(srcdir)/objc; \
d78 1
a78 1
$(srcdir)/objc/objc-parse.y: $(srcdir)/c-parse.in
d83 1
a83 1
	$(srcdir)/move-if-change tmp-objc-prs.y $(srcdir)/objc/objc-parse.y
d89 1
a89 1
   $(srcdir)/function.h $(srcdir)/output.h $(srcdir)/c-parse.h
@


1.1.1.1
log
@egcs projects compiler system
Exact copy of the snapshot, except for the removal of
	texinfo/
	gcc/ch/
	libchill/

@
text
@@
