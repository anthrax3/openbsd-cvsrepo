head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.1.1.0.58
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.56
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.54
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.52
	OPENBSD_5_0:1.1.1.1.0.50
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.48
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.46
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.42
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.44
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.40
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.38
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.36
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.34
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.32
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.30
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.28
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.26
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.24
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.22
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.20
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.18
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.16
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.14
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.12
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.10
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.8
	OPENBSD_2_9_BASE:1.1.1.1
	GCC-2_95_pre3_test2:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.6
	OPENBSD_2_8_BASE:1.1.1.1
	GCC-2_95_pre3_20000916:1.1.1.1
	GCC-2_95_pre3_20000527:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	CYGNUS-990629:1.1.1.1
	CYGNUS-990608:1.1.1.1
	CYGNUS-19990517:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2013.08.06.19.17.11;	author miod;	state dead;
branches;
next	1.1;

1.1
date	99.05.26.13.38.16;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.26.13.38.16;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove gcc 2.95 from the tree. One of the least bogus compiler we had (although
it had required some generous bandaid), but unfortunately not able to compile
most of the Real World (tm) software.
@
text
@#   Copyright (C) 1999 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  

# Please email any bugs, comments, and/or additions to this file to:
# jlarmour@@cygnus.co.uk

# This file was written by Jonathan Larmour (jlarmour@@cygnus.co.uk).

# GCC testsuite that uses the `dg.exp' driver.

# Load support procs.
load_lib gcc-dg.exp

###################################
# proc gcc_target_object_format { }
###################################

proc gcc_target_object_format { } { 
    global gcc_target_object_format_saved

    if [info exists gcc_target_object_format_saved] {
        verbose "gcc_target_object_format returning saved $gcc_target_object_format_saved" 2
        return $gcc_target_object_format_saved
    } else {

        set objdump_name [find_binutils_prog objdump]
        set open_file [open objfmtst.c w]
        puts $open_file "void foo(void) { }"
        close $open_file
        
        gcc_target_compile objfmtst.c objfmtst.o object ""
        
        set output [exec $objdump_name --file-headers objfmtst.o ]
        
        file delete objfmtst.o
        
        if ![ regexp "file format (.*)arch" $output dummy objformat ]  {
            verbose "Could not parse objdump output" 2
            set gcc_target_object_format_saved unknown
        } else {
            switch -regexp $objformat {
                elf          {
                    verbose "gcc_target_object_format returning elf" 2
                    set gcc_target_object_format_saved elf
                } 
                ecoff        {
                    verbose "gcc_target_object_format returning ecoff" 2
                    set gcc_target_object_format_saved ecoff
                }
                coff         {
                    verbose "gcc_target_object_format returning coff" 2
                    set gcc_target_object_format_saved coff
                }
                a\.out       {
                    verbose "gcc_target_object_format returning a.out" 2
                    set gcc_target_object_format_saved a.out
                }
                default      {
                    verbose "gcc_target_object_format returning unknown" 2
                    set gcc_target_object_format_saved unknown
                }
            }
        }
        return $gcc_target_object_format_saved
    }
}

###############################
# proc check_weak_available { }
###############################

# weak symbols are only supported in some configs/object formats
# this proc returns 1 if they're support, 0 if they're not, or -1 if unsure

proc check_weak_available { } {
    global target_cpu

    # All mips targets should support it
    
    if { [ string first "mips" $target_cpu ] >= 0 } {
        return 1
    }

    # ELF and ECOFF support it. a.out does with gas/gld but may also with
    # other linkers, so we should try it

    set objformat [gcc_target_object_format]

    switch $objformat {
        elf      { return 1 }
        ecoff    { return 1 }
        a.out    { return 1 }
        unknown  { return -1 }
        default  { return 0 }
    }
}

##########
# weak-1.c
##########

if { [ check_weak_available ] == 1 } {
    dg-init

    set lines [gcc_target_compile "$srcdir/$subdir/weak-1a.c" "weak-1a.o" object ""]
    if ![string match "" $lines] then {
        fail "weak-1a.o"
    } else {
        dg-runtest "$srcdir/$subdir/weak-1.c" "weak-1a.o" "" 
        file delete weak-1a.o
    }
    dg-finish
} elseif { [ check_weak_available ] == 0 } {
    unsupported "weak-1.c"
} else {
    unresolved "weak-1.c"
}

##########
# weak-2.c
##########

if { [ check_weak_available ] == 1 } {
    dg-init
    
    set lines [gcc_target_compile "$srcdir/$subdir/weak-2a.c" "weak-2a.o" object ""]
    if ![string match "" $lines] then {
        fail "weak-2a.o"
    } else {
        set lines [gcc_target_compile "$srcdir/$subdir/weak-2b.c" "weak-2b.o" object ""]
        if ![string match "" $lines] then {
            fail "weak-2b.o"
        } else {
            dg-runtest "$srcdir/$subdir/weak-2.c" "weak-2a.o weak-2b.o" "" 
            file delete weak-2a.o weak-2b.o
        }
    }
    dg-finish
} elseif { [ check_weak_available ] == 0 } {
    unsupported "weak-2.c"
} else {
    unresolved "weak-2.c"
}

###########
# alias-1.c
###########

dg-init
dg-runtest "$srcdir/$subdir/alias-1.c" "" ""
dg-finish

###########
# wkali-1.c
###########

dg-init
dg-runtest "$srcdir/$subdir/wkali-1.c" "" ""
dg-finish

###########
# wkali-2.c
###########

if { [ check_weak_available ] == 1 } {
    dg-init
    set lines [gcc_target_compile "$srcdir/$subdir/wkali-2a.c" "wkali-2a.o" object ""]
    if ![string match "" $lines] then {
        fail "wkali-2a.o"
    } else {
        set lines [gcc_target_compile "$srcdir/$subdir/wkali-2b.c" "wkali-2b.o" object ""]
        if ![string match "" $lines] then {
            fail "wkali-2b.o"
        } else {
            dg-runtest "$srcdir/$subdir/wkali-2.c" "wkali-2a.o wkali-2b.o" ""
            file delete wkali-2a.o wkali-2b.o
        }
    }
    dg-finish
} elseif { [ check_weak_available ] == 0 } {
    unsupported "wkali-2.c"
} else {
    unresolved "wkali-2.c"
}

###########
# gcsec-1.c
###########

set ld_output [ exec [ find_ld ] --help ]

if { [ string first "--gc-sections" $ld_output ] >= 0 } {

    dg-init
    dg-runtest "$srcdir/$subdir/gcsec-1.c" "-ffunction-sections -fdata-sections -Wl,--gc-sections" ""
    dg-finish
} else {
    unsupported "gcsec-1.c"
}

### EOF ecos.exp
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@egcs projects compiler system
Exact copy of the snapshot, except for the removal of
	texinfo/
	gcc/ch/
	libchill/

@
text
@@
