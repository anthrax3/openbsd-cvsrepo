head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.1.1.0.58
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.56
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.54
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.52
	OPENBSD_5_0:1.1.1.1.0.50
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.48
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.46
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.42
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.44
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.40
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.38
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.36
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.34
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.32
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.30
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.28
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.26
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.24
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.22
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.20
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.18
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.16
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.14
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.12
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.10
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.8
	OPENBSD_2_9_BASE:1.1.1.1
	GCC-2_95_pre3_test2:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.6
	OPENBSD_2_8_BASE:1.1.1.1
	GCC-2_95_pre3_20000916:1.1.1.1
	GCC-2_95_pre3_20000527:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	CYGNUS-990629:1.1.1.1
	CYGNUS-990608:1.1.1.1
	CYGNUS-19990517:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.08.06.19.16.49;	author miod;	state dead;
branches;
next	1.1;

1.1
date	99.05.26.13.36.29;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.26.13.36.29;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove gcc 2.95 from the tree. One of the least bogus compiler we had (although
it had required some generous bandaid), but unfortunately not able to compile
most of the Real World (tm) software.
@
text
@// Build don't link:
// 980827 bkoz
// template parameter redeclaration bugs, part two:
// template template params and expanded template non-type parms

// 14.1 Template parameters
// p 13
// The scope of a template-parameter extens from its point of
// declartion until the end of its template. In particular, a
// template-parameter can be used in the declaration of subsequent
// template-parameters and their default arguments. 

// 14.6.1 Locally declared names
// p 4
// A template-parameter shall not be redeclared within its scope
// (including nested scopes). A template-parameter shall not have the
// same name as the template name.

// 14 
// declared friend template (v3, template type parameters)
template <class T4>// ERROR - .*
class Xfourteen {
protected:
  T4 value;
public:
  Xfourteen(T4 init): value(init) {}
  template <template <typename T4> class T5> // ERROR - .*
  friend bool isequal (Xfourteen<int>& lhs, Xfourteen<int>& rhs);
};


// 15
// nested template class (v3, template type parameters)
template <class T6>// ERROR - .*
class Xfifteen {
protected:
  T6 value;
public:
  Xfifteen(T6 init): value(init) {}

  template <template <typename T6> class T7> class nested {// ERROR - .*
    int value;
  public:
    nested(): value( int(0)) {}
  };
};


// 16
// member templates (v3, template type parameters)
template <class T8>// ERROR - .*
class Xsixteen {
protected:
  T8 value;
public:
  Xsixteen(T8 init): value(init) {}

  template <template <typename T8> class T9> int comp_ge(int test) {// ERROR - .*
    int local_value;
    if (local_value > value) 
      return local_value;
    else
      return value;
  }
};


// 17
// declared friend template (v4, template type parameters on the class)
template <typename T9> class tem_base {
public:
  T9 value;
};

template <typename T10, template <typename T12> class C10>
class Xseventeen {
protected:
  C10<T10> value;
public:
  Xseventeen(){}
  template <typename T12> // ok??
  friend bool isequal (Xseventeen<T10, tem_base>& lhs, 
		       Xseventeen<T10, tem_base>& rhs);
};

//template class Xseventeen<int, tem_base>;


// 18
// more template template redecl tests
template <typename T14, template <typename T15> class C12>// ERROR - .*
class Xeighteen {
protected:
  C12<T14> value;
  int C12; // ERROR - .*
};


// 19
// more template template redecl tests
template <typename T16, template <typename T17> class C14>// ERROR - .*
class Xnineteen{
protected:
  C14<T16> value;
  template <class C14> class nested {// ERROR - .*
    T16 value;
  public:
    nested(): value( T16(0)) {}
  };
};


// 20
// local names (14.6.1 p 4) part two, variable names as template param
template <class T17, int i> struct Xtwenty {
  void f(){
    T17 my_type; //ok
    for (int j = 0; j < 5; ++l)
      {
	T17 my_type; //ok
	++my_type;
      }
  }
};


// 14.1 Template parameters
// p 4
// A non-type templat- parameter shall have one of the following
// (optionally cv-qualified) types:
//   integral or enumeration type
//   pointer to object or pointer to function
//   referenct to object or referece to function
//   pointer to member

// 21 
// non-type template parameters v1: enum
enum my_enum {my_A = 45, my_B, my_C};

template <my_enum T18> class Xtwentyone {// ERROR - .*
  float T18; // ERROR - .*
};


// 22
// non-type template parameters v1: pointer to object
struct base {
  int	gcount;
  int ret_gcount() {return gcount;}
};

template <class T20, base* b> class Xtwentytwo {// ERROR - .*
  float b; // ERROR - .*
};


// 23
// non-type template parameters v2: reference to object
template <class T20, base& b2> class Xtwentythree {// ERROR - .*
  float b2; // ERROR - .*
};


// 24
// non-type template parameters v3: pointer to member
template <class T20, int base::* b3> class Xtwentyfour {// ERROR - .*
  float b3; // ERROR - .*
};


// 25
// non-type template parms that use push_class_level
template <class T22> void f1() {// ERROR - .*
  struct foo { 
    enum T22 { un, du, toi }; // ERROR - .*
  };
}





@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@egcs projects compiler system
Exact copy of the snapshot, except for the removal of
	texinfo/
	gcc/ch/
	libchill/

@
text
@@
