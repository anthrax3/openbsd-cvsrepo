head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.1.1.0.58
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.56
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.54
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.52
	OPENBSD_5_0:1.1.1.1.0.50
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.48
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.46
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.42
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.44
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.40
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.38
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.36
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.34
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.32
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.30
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.28
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.26
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.24
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.22
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.20
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.18
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.16
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.14
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.12
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.10
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.8
	OPENBSD_2_9_BASE:1.1.1.1
	GCC-2_95_pre3_test2:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.6
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	CYGNUS-990629:1.1.1.1
	CYGNUS-990608:1.1.1.1
	CYGNUS-19990517:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.08.06.19.16.55;	author miod;	state dead;
branches;
next	1.1;

1.1
date	99.05.26.13.37.00;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.26.13.37.00;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove gcc 2.95 from the tree. One of the least bogus compiler we had (although
it had required some generous bandaid), but unfortunately not able to compile
most of the Real World (tm) software.
@
text
@// Build don't link: 
// GROUPS passed enums
// excess errors test - XFAIL *-*-*
// enum file
// From: Peter Samuelson <psamuels@@osiris.ac.hmc.edu>
// Date:     Tue, 2 Nov 1993 23:44:34 -0800 (PST)
// Subject:  compiler error 192
// Message-ID: <199311030744.XAA23409@@osiris.ac.hmc.edu>

#include <iostream.h>
#include <stdlib.h>
#include <string.h>

/* My program to generate D&D characters
*  10/25/93
*/

//prototypes
int rndshift();
int dice(int times, int sides);
void initialize(struct Crctr &character);
void cleararray(char thearray[24]);
void input(struct Crctr &character);
void rollscores(struct Crctr &character);
void output(struct Crctr &character);

int main()
{
  enum goopes
    {
      cleric, druid, fighter, knight, paladin, avenger, magicuser, thief,
      dwarf, halfelf, elf, halfling, mystic, ranger, scout, monster,
      immortal, special
    };

  enum alignments
    {
      lawful, neutral, chaotic
    };

  struct savingthrows
    {
      int psn_dth, wands, petr_paral, breath, rod_staff_spell;
    };

  struct abilities
    {
      int str, ite, wis, dex, con, cha;
    };
  struct valuables
    {
      char type[16];
      int value;
    };
  struct money
    {
      int pp, gp, ep, sp, cp;
      valuables gems[24], jewelry[24];
    };

  struct Crctr
    {
      Crctr() : goop(fighter) {}

      char dm[24], campaign[24], name[24], player[24];
      goopes goop;
      alignments alignment;
      int level, maxhit, hitpoints, ac;
      abitities scores;// ERROR - .*
      savingthrows saves;
      money wealth;
      int experience;
      float bonus;
    };
  
  Crctr character;

  cout << "The D&D Character generator!!" << endl;
  
  rndshift();

  initialize(character);// ERROR - .*
  input(character);
  rollscores(character);
  output(character);

  cout << "Thank you for using this program." << endl;
  cout << "Copyright 1993, Chase Enterprises, Inc." << endl;
  cout << "D&D and Dungeons and Dragons are registered trademarks" << endl;
  cout << "of TSR, Inc." << endl;
} //end of main


void initialize(Crctr &character)
{
  cleararray(character.dm);
  cleararray(character.campaign);
  cleararray(character.name);
  cleararray(character.player);
  character.level = 0;
  character.maxhit = 0;
  character.hitpoints = 0;
  character.ac = 9;
  character.experience = 0;
  character.bonus = 0.0;
} //end of initialize

void cleararray(char thearray[])
{
  for (int i = 0 ; i < 24 ; i++)
    thearray[i] = 0;
} //end of cleararray

void input(Crctr &character)
{
  cout << "Please input name of the Dungeon Master." << endl;
  cin  >> character.dm;
  cout << endl << "Pleas input the name of the campaign." << endl;
  cin  >> character.campaign;
  cout << endl << "Please input the name of the character." << endl;
  cin  >> character.name;
  cout << endl << "Please input player name." << endl;
  cin  >> character.player;
  cout << endl << "Enter desired goop." << endl;
  cin  >> character.goop;
  cout << endl << "Enter desired alignment." << endl;
} //end of input

void rollscores(Crctr &character)
{
  character.scores.str = dice(3,6);
  character.scores.ite = dice(3,6);
  character.scores.wis = dice(3,6);
  character.scores.dex = dice(3,6);
  character.scores.con = dice(3,6);
  character.scores.cha = dice(3,6);
  character.level = 1;

  switch (character.goop)
    {
    case fighter:
    case dwarf:
    case half-elf:
      character.maxhit = dice(1,8);
      character.hitpoints = character.maxhit;
      break;
    case cleric:
    case elf:
    case halfling:
    case mystic:
    case scout:
      character.maxhit = dice(1,6);
      character.hitpoints = character.maxhit;
      break;
    case magic-user:
    case thief:
      character.maxhit = dice(1,4);
      character.hitpoints = character.maxhit;
      break;
    default:
      character.maxhit = 1;
      character.hitpoints = character.maxhit;
      break;
    }
} //end of rollscores


void output(Crctr &character)
{
  cout << "Your character is:" << endl;
  cout << "Your DM:\t" << character.dm << "\t\t\t" << "Campaign: "
       << character.campaign << endl;
  cout << "Player's name:\t" << character.player << endl;
  cout << "Character Name:\t" << character.name << endl;
  cout << "goop:\t" << character.goop << "\t\t\t" << "Alignment:\t"
       << character.alignment << endl;
  cout << "level:\t" << character.level << endl;
  cout << "Max. HP:\t" << character.maxhit << "\t\t\t" << "Current HP:\t"
       << character.hitpoints << endl;
  cout << "Abilities" << "\t\t\t" << "Saves" << endl;
  cout << endl;
  cout << "Str:\t" << character.scores.str << "\t\t" << "Poison/Death Ray:\t"
       << character.saves.psn_dth << endl;
  cout << "Int:\t" << character.scores.ite << "\t\t" << "Wands:           \t"
       << character.saves.wands << endl;
  cout << "Wis:\t" << character.scores.wis << "\t\t" << "Petrification" 
       << "/Paralysis" << character.saves.petr_paral << endl;

/*      abitities scores;
      savingthrows saves;
      money wealth;
      int experience;
      float bonus;
*/
}


int rndshift()
{
//Chase Tsang 10/25/93
//cheap way to shift the random number generator sequence
//because I can't change the randomseed
//requires <stdlib.h> and <iostream.h>

int shiftnumber;
int date;
int luckynumber;

cout << "Please input the date in 8 digits, no spaces, no other" << endl;
cout << "characters. (ex 10041974 for October 4, 1974)" << endl;
cin >> date;
cout << "Please input your lucky number for today (7 or less" << endl;
cout << "digits, and positive integer, please)" << endl;
cin >> luckynumber;

shiftnumber = date / luckynumber;

for (int i = 0; i < shiftnumber; i++)
        rand();
return 0;
}



int dice(int times, int sides)
{
  //dice rolling function, Chase Tsang 10/25/93
  //requires #include <stdlib.h>

  int total = 0;

  for (int i = 0; i < times; i++)
    total = total + (rand() % sides) + 1;

  return total;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@egcs projects compiler system
Exact copy of the snapshot, except for the removal of
	texinfo/
	gcc/ch/
	libchill/

@
text
@@
