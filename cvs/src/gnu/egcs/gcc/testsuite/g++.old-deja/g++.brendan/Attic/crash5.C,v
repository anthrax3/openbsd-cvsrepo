head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.1.1.0.58
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.56
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.54
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.52
	OPENBSD_5_0:1.1.1.1.0.50
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.48
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.46
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.42
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.44
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.40
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.38
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.36
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.34
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.32
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.30
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.28
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.26
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.24
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.22
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.20
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.18
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.16
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.14
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.12
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.10
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.8
	OPENBSD_2_9_BASE:1.1.1.1
	GCC-2_95_pre3_test2:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.6
	OPENBSD_2_8_BASE:1.1.1.1
	GCC-2_95_pre3_20000916:1.1.1.1
	GCC-2_95_pre3_20000527:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	CYGNUS-990629:1.1.1.1
	CYGNUS-990608:1.1.1.1
	CYGNUS-19990517:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.08.06.19.16.50;	author miod;	state dead;
branches;
next	1.1;

1.1
date	99.05.26.13.36.32;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.26.13.36.32;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove gcc 2.95 from the tree. One of the least bogus compiler we had (although
it had required some generous bandaid), but unfortunately not able to compile
most of the Real World (tm) software.
@
text
@// Build don't link: 
// GROUPS passed old-abort
// Should have been fixed by:
//
// Sun Jun 13 12:55:22 1993  Brendan Kehoe  (brendan@@lisa.cygnus.com)
// 
// 	* cp-cvt.c (build_default_binary_type_conversion): Look deeper into
// 	what ARG1 and ARG2 are if they're POINTER_TYPEs.

volatile void exit(int);

class CountableSet
{
	public:
		virtual	~CountableSet() { }		
};	

template<class T>
class FixedSet : virtual public CountableSet
{
	public:
		virtual	int Get(int, T&) = 0;		 
		virtual	~FixedSet() { }		
};

class ShrinkableSet
{
	public:
		virtual int Remove(int) = 0;   
};

template<class T>
class PVSet : virtual public FixedSet<T>, virtual public ShrinkableSet
{
	public:
		virtual	void Append(const T&) = 0;
		virtual	void operator+=(const T& a) { Append(a); }
		virtual	~PVSet() { }		
};

template<class T>
class MutSet : virtual public FixedSet<T>, virtual public FixedSet<T *>
{
	protected:
		typedef	T	*Tp;

	public:
		void Append(const Tp& tp) { Append(*tp); }

		T&	Access(int p)
		{
			Tp	tp;
			Get(p, tp);
			return *tp;
		}
		virtual	~MutSet() { }		
};

template <class T>
class	SimpleSet : virtual public MutSet<T>
{
	protected:
		T	*array;
		int	size;

		virtual	void	Allocate(int s)
		{
			array = new T[s];
		}
	public:
		SimpleSet()
		{
			size = 0;
			array = ((void*)0) ; // ERROR - implicit conversion
		}
 		int	Get(int p, T& t)
		{
			t = array[p-1];
			return 1;
		}
		int	Get(int p, T *& t)
		{
			t = &array[p-1];
			return 1;
		}
		inline void Append(const T& a)
		{
			array[size-1] = a;
		}
		inline int Remove(int n) { return 0; }
};

class	Dummy
{
	public:
		Dummy()	{}
};

int
main()
{
	SimpleSet<Dummy *>		bs1;
	int	i, j;
	Dummy	foo;

	bs1+=&foo;// ERROR -  no .*
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@egcs projects compiler system
Exact copy of the snapshot, except for the removal of
	texinfo/
	gcc/ch/
	libchill/

@
text
@@
