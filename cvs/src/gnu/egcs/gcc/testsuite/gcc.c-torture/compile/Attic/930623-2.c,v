head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.1.1.0.58
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.56
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.54
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.52
	OPENBSD_5_0:1.1.1.1.0.50
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.48
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.46
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.42
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.44
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.40
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.38
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.36
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.34
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.32
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.30
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.28
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.26
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.24
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.22
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.20
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.18
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.16
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.14
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.12
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.10
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.8
	OPENBSD_2_9_BASE:1.1.1.1
	GCC-2_95_pre3_test2:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.6
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	CYGNUS-990629:1.1.1.1
	CYGNUS-990608:1.1.1.1
	CYGNUS-19990517:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.08.06.19.17.06;	author miod;	state dead;
branches;
next	1.1;

1.1
date	99.05.26.13.37.51;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.26.13.37.51;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove gcc 2.95 from the tree. One of the least bogus compiler we had (although
it had required some generous bandaid), but unfortunately not able to compile
most of the Real World (tm) software.
@
text
@extern unsigned short statesCount;
extern short cn_cadrstates[38][37];
extern short coutstate[38][37][5];
extern short ccostate[38][37][5];
extern short cdel_E[38][37][5];
extern short cn[38][37][5][3];
extern short cd[38][37][5][3];

extern short c[4][37];

extern double vrandNext[64];

f (unsigned long long maddrOutState[37][8 * 8],
   int maddrIndices[8 * 8],
   int delta_E[8 * 8],
   int after_x_hash[8 * 8],
   int after_y_hash[8 * 8],
   int after_z_hash[8 * 8],
   int nActivePlane)
{
  int class[8 * 8];
  int ccoeff[8 * 8];
  int nx[8 * 8];
  int ny[8 * 8];
  int nz[8 * 8];
  int phat[8 * 8];
  int i;
  int inState;

  for (inState = 0; inState < statesCount; inState++) {
    long long Nf[8 * 8];
    long long Ns[8 * 8];
    long long Nb[8 * 8];
    int bbState[8 * 8];
    int not_flag_p[8 * 8];
    int j;
    int max_cadrstates = 0;

    for (i = 0; i < nActivePlane; i++) {
      int in = maddrIndices[i];
      int k = cn_cadrstates[class[in]][inState];

      if (k > max_cadrstates)
	max_cadrstates = k;
    }

    for (j = 0; j < max_cadrstates; j++) {
      int coState[8 * 8];
      int N_co[8 * 8];
      for (i = 0; i < nActivePlane; i++) {
	int in = maddrIndices[i];
	int k = cn_cadrstates[class[in]][inState];

	if (j < k-1) {
	  long long numer = (nx[in] * cn[class[in]][inState][j][0] +
			     ny[in] * cn[class[in]][inState][j][1] +
			     nz[in] * cn[class[in]][inState][j][2]);
	  long long denom = (nx[in] * cd[class[in]][inState][j][0] +
			     ny[in] * cd[class[in]][inState][j][1] +
			     nz[in] * cd[class[in]][inState][j][2]);
	  long long Nj = ((denom == 0) ? 0 : (((((long long)(const64(0,0x10000)) * numer * Ns[in]) / denom) + (long long)(((unsigned) vrandNext[in]) & 0xffff)) >> 16));
	  int outState = coutstate[class[in]][inState][j];
	  int this_coState = ccostate[class[in]][inState][j];
	  int del_E = cdel_E[class[in]][inState][j];
	  int old_Ns = Ns[in];

	  maddrOutState[outState][in] += Nj;
	  Ns[in] -= Nj;
	  delta_E[in] += Nj * del_E;
	  if (not_flag_p[in]) {
	    after_x_hash[in] += Nj * c[0][outState];
	    after_y_hash[in] += Nj * c[1][outState];
	    after_z_hash[in] += Nj * c[2][outState];
	  }
	  coState[in] = this_coState;
	  N_co[in] = Nj;
	}
	else if (j == k-1) {
	  long long Nj = Ns[in];
	  int outState = coutstate[class[in]][inState][j];
	  int this_coState = ccostate[class[in]][inState][j];
	  int del_E = cdel_E[class[in]][inState][j];
	  maddrOutState[outState][in] += Nj;
	  delta_E[in] += Nj * del_E;
	  coState[in] = this_coState;
	  N_co[in] = Nj;
	}
      }
    }
  }
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@egcs projects compiler system
Exact copy of the snapshot, except for the removal of
	texinfo/
	gcc/ch/
	libchill/

@
text
@@
