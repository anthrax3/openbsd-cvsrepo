head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.1.1.0.58
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.56
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.54
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.52
	OPENBSD_5_0:1.1.1.1.0.50
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.48
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.46
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.42
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.44
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.40
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.38
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.36
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.34
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.32
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.30
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.28
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.26
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.24
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.22
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.20
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.18
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.16
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.14
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.12
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.10
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.8
	OPENBSD_2_9_BASE:1.1.1.1
	GCC-2_95_pre3_test2:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.6
	OPENBSD_2_8_BASE:1.1.1.1
	GCC-2_95_pre3_20000916:1.1.1.1
	GCC-2_95_pre3_20000527:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.4
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.2
	OPENBSD_2_6_BASE:1.1.1.1
	CYGNUS-990629:1.1.1.1
	CYGNUS-990608:1.1.1.1
	CYGNUS-19990517:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.08.06.19.17.06;	author miod;	state dead;
branches;
next	1.1;

1.1
date	99.05.26.13.37.52;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.26.13.37.52;	author espie;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove gcc 2.95 from the tree. One of the least bogus compiler we had (although
it had required some generous bandaid), but unfortunately not able to compile
most of the Real World (tm) software.
@
text
@typedef enum
{
  LODI,
  STO,
  ADDI,
  ADD,
  SUBI,
  SUB,
  MULI,
  MUL,
  DIVI,
  DIV,
  INC,
  DEC
} INSN;

f (pc)
     short *pc;
{
  long long stack[16], *sp = &stack[16], acc = 0;

  for (;;)
    {
      switch ((INSN)*pc++)
	{
	case LODI:
	  *--sp = acc;
	  acc = ((long long)*pc++) << 32;
	  break;
	case STO:
	  return (acc >> 32) + (((((unsigned long long) acc) & 0xffffffff)  & (1 << 31)) != 0);
	  break;
	case ADDI:
	  acc += ((long long)*pc++) << 32;
	  break;
	case ADD:
	  acc = *sp++ + acc;
	  break;
	case SUBI:
	  acc -= ((long long)*pc++) << 32;
	  break;
	case SUB:
	  acc = *sp++ - acc;
	  break;
	case MULI:
	  acc *= *pc++;
	  break;
	case MUL:
	  {
	    long long aux;
	    unsigned char minus;

	    minus = 0;
	    aux = *sp++;
	    if (aux < 0)
	      {
		minus = ~minus;
		aux = -aux;
	      }
	    if (acc < 0)
	      {
		minus = ~minus;
		acc = -acc;
	      }
	    acc = ((((((unsigned long long) acc) & 0xffffffff)  * (((unsigned long long) aux) & 0xffffffff)) >> 32)
		   + ((((unsigned long long) acc) >> 32)  * (((unsigned long long) aux) & 0xffffffff)  + (((unsigned long long) acc) & 0xffffffff)  + (((unsigned long long) aux) >> 32))
		   + (((((unsigned long long) acc) >> 32)  * (((unsigned long long) aux) >> 32)) << 32));
	    if (minus)
	      acc = -acc;
	  }
	  break;
	case DIVI:
	  {
	    short aux;

	    aux = *pc++;
	    acc = (acc + aux / 2) / aux;
	  }
	  break;
	case DIV:
	  {
	    long long aux;
	    unsigned char minus;

	    minus = 0;
	    aux = *sp++;
	    if (aux < 0)
	      {
		minus = ~minus;
		aux = -aux;
	      }
	    if (acc < 0)
	      {
		minus = ~minus;
		acc = -acc;
	      }

	    if (((unsigned long long)acc)  == 0)
	      acc = (unsigned long long)-1 / 2;
	    else if ((((unsigned long long) ((unsigned long long)acc)) & 0xffffffff)  == 0)
	      acc = ((unsigned long long)aux)  / (((unsigned long long) ((unsigned long long)acc)) >> 32);
	    else if ((((unsigned long long) ((unsigned long long)acc)) >> 32)  == 0)
	      acc = ((((unsigned long long)aux)  / ((unsigned long long)acc)) << 32)
		+ ((((unsigned long long)aux)  % ((unsigned long long)acc)) << 32) / ((unsigned long long)acc);
	    else
	      {
		unsigned char shift;
		unsigned long hi;

		shift = 32;
		hi = (((unsigned long long) ((unsigned long long)acc)) >> 32);
		do {
		  if (hi & ((unsigned long)1 << (shift - 1)))
		    break;
		} while (--shift != 0);
		printf("shift = %d\n", shift);
		acc = ((((unsigned long long)aux)  / ((unsigned long long)acc)) << 32)
		  + (((((unsigned long long)aux)  % ((unsigned long long)acc)) << (32 - shift)) + ((((unsigned long long)acc)  >> shift) / 2)) / (((unsigned long long)acc)  >> shift);
	      }

	    if (minus)
	      acc = -acc;
	  }
	  break;
	case INC:
	  acc += 1;
	  break;
	case DEC:
	  acc -= 1;
	  break;
	}
      printf("%08lx.%08lx\n", (long)(((unsigned long long) acc) >> 32) , (long)(((unsigned long long) acc) & 0xffffffff));
    }
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@egcs projects compiler system
Exact copy of the snapshot, except for the removal of
	texinfo/
	gcc/ch/
	libchill/

@
text
@@
