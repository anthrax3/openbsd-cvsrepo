head	1.3;
access;
symbols
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.52
	OPENBSD_5_0:1.2.0.50
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.48
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.46
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.42
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.44
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.40
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.38
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.36
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.34
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.32
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.30
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.28
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.26
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.24
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.22
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.20
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.18
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.16
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.14
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.12
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.10
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_9_BASE:1.2
	GCC-2_95_pre3_test3:1.1.1.2
	GCC-2_95_pre3_test2:1.1.1.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	GCC-2_95_pre3_20000527:1.1.1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	GCC-2_95_2:1.1.1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	GCC-2_95_1:1.1.1.2
	CYGNUS-990718:1.1.1.1
	CYGNUS-990629:1.1.1.1
	CYGNUS-990608:1.1.1.1
	CYGNUS-19990517:1.1.1.1
	CYGNUS:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2012.04.14.06.01.40;	author jsg;	state dead;
branches;
next	1.2;

1.2
date	99.09.17.11.29.18;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	99.05.26.13.38.20;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.05.26.13.38.20;	author espie;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.08.23.20.31.24;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove libf2c, hasn't been built since it was moved to ports in 2010.
ok miod@@ espie@@
@
text
@# Makefile for GNU F77 compiler runtime.
#   Copyright (C) 1995-1998 Free Software Foundation, Inc.
#   Contributed by Dave Love (d.love@@dl.ac.uk).
#
#This file is part of GNU Fortran.
#
#GNU Fortran is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2, or (at your option)
#any later version.
#
#GNU Fortran is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with GNU Fortran; see the file COPYING.  If not, write to
#the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA
#02111-1307, USA.

SHELL = /bin/sh

#### Start of system configuration section. ####

srcdir = @@srcdir@@
VPATH = @@srcdir@@
prefix = @@prefix@@
exec_prefix = @@exec_prefix@@
target_alias = @@target_alias@@
gcc_version = @@gcc_version@@
gcc_version_trigger = @@gcc_version_trigger@@

libdir = $(exec_prefix)/lib
libsubdir = $(libdir)/gcc-lib/$(target_alias)/$(gcc_version)

# Multilib support variables.
MULTISRCTOP =
MULTIBUILDTOP =
MULTIDIRS =
MULTISUBDIR =
MULTIDO = true
MULTICLEAN = true

# Not configured per top-level version, since that doesn't get passed
# down at configure time, but overrridden by the top-level install
# target.
INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@

AR = @@AR@@
AR_FLAGS = rc

RANLIB = @@RANLIB@@

CC = @@CC@@
CFLAGS = @@CFLAGS@@

# List of variables to pass to sub-makes.
# Quote this way so that it can be used to set shell variables too.
# Currently no use for PICFLAG, RUNTESTFLAGS -- check usage.
FLAGS_TO_PASS= \
	CC='$(CC)' \
	CFLAGS='$(CFLAGS)' \
	CPPFLAGS='$(CPPFLAGS)' \
	AR='$(AR)' \
	RANLIB='$(RANLIB)' \
	PICFLAG='$(PICFLAG)' \
	RUNTESTFLAGS='$(RUNTESTFLAGS)' \
	prefix='$(prefix)' \
	exec_prefix='$(exec_prefix)' \
	libdir='$(libdir)' \
	libsubdir='$(libsubdir)' \
	tooldir='$(tooldir)'

LIBG2C = libg2c.a

SUBDIRS = libI77 libF77 libU77

F2CEXT = abort derf derfc ef1asc ef1cmc erf erfc exit getarg getenv iargc \
	signal system flush ftell fseek access besj0 besj1 besjn besy0 besy1 \
	besyn chdir chmod ctime dbesj0 dbesj1 dbesjn dbesy0 dbesy1 dbesyn \
	dtime etime fdate fgetc fget flush1 fnum fputc fput fstat gerror \
	getcwd getgid getlog getpid getuid gmtime hostnm idate ierrno irand \
	isatty itime kill link lnblnk lstat ltime mclock perror rand rename \
	secnds second sleep srand stat symlnk time ttynam umask unlink \
	vxttim alarm \
	date_y2kbuggy date_y2kbug vxtidt_y2kbuggy vxtidt_y2kbug

.SUFFIXES:

# The logic here is partly dictated by the desire to keep the lib?77
# subdirs for compatibility with the Netlib version and because libU77
# has a different copyright; then the libe77 bit (EXTERNALly-callable
# versions) is funny.  Given that, as well as keeping things as simple
# as possible we want (at least) the following:
#  * Allow make to be run at the top level (all-target-libf2c), at this
#    level, or the subdirs of this level.  In the latter case we only
#    compile, rather than updating libg2c.a;
#  * A robust set of dependencies, so that we rebuild (as little as
#    possible) if a configuration file, g2c.h or any lib?77/*.c file
#    changes;
#  * Avoid unnecessary running of ar and ranlib;
#  * Expose parallelism where reasonable, but not as a priority.

# The intended top-level target here does a non-multilib build (via
# the dependency) and then (perhaps) builds multilibs.

all: all-unilib
	$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO="all-unilib"

# `all-unilib' is the overall target in the absence of multilibs,
# meant to be invoked via multi-do for multilibs.

# Its dependencies can be satisfied in parallel.  The [fiu]77 targets
# update stamp files (see the subdir makefiles) which the $(LIBG2C)
# target checks in the sub make to decide whether to run ar/ranlib.
# (Probably only one stamp file is really needed.)  The stamp files
# s-lib[fiu]77 are intentionally not targets, since we're only meant
# to come in at the level of this target.  The [fiu]77 targets always
# invoke sub makes to check dependencies in the subdirs, else we'd
# have to maintain them at this level; we live with the overhead of
# some recursive makes which may do nothing.

all-unilib: i77 f77 u77 s-libe77
	$(MAKE) $(FLAGS_TO_PASS) $(LIBG2C)

i77 f77 u77: g2c.h

# This target should normally only get invoked via `all-unilib' --
# after all's well in the subdirs -- actually to assemble the library.
# The stamp file dependencies are just to check whether libg2c.a is
# up-to-date (to avoid running ar regardless) -- the files should
# always have been created by a successful `all-unilib'.

$(LIBG2C): s-libi77 s-libf77 s-libu77 s-libe77
	rm -f $(LIBG2C)
	set -e; \
	for i in $(SUBDIRS); \
	  do (cd $$i && $(MAKE) $(FLAGS_TO_PASS) LIBG2C=../$(LIBG2C) archive); \
	done
	objs=""; for i in $(F2CEXT); do objs="$$objs libE77/L$$i.o"; done; \
	  $(AR) $(AR_FLAGS) $(LIBG2C) $$objs
	$(RANLIB) $(LIBG2C)

i77:
	cd libI77; $(MAKE) $(FLAGS_TO_PASS) all

f77:
	cd libF77; $(MAKE) $(FLAGS_TO_PASS) all

u77:
	cd libU77; $(MAKE) $(FLAGS_TO_PASS) all

s-libe77: f2cext.c
	if [ -d libE77 ]; then rm -f libE77/*.o; else mkdir libE77; fi
	for name in $(F2CEXT); \
	do \
	  echo $${name}; \
	  $(CC) -c -I. -I$(srcdir) -I../../include $(CPPFLAGS) $(CFLAGS) \
	    -DL$${name} $(srcdir)/f2cext.c \
	    -o libE77/L$${name}.o; \
	  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \
	done
	echo timestamp >s-libe77

f2cext.c: g2c.h

${srcdir}/configure: configure.in
	rm -f config.cache
	cd $(srcdir) && autoconf

# Dependence on Makefile serializes for parallel make.
g2c.h: g2c.hin config.status Makefile
# Might try to avoid rebuilding everything if Makefile or configure
# changes and g2c.h doesn't; see also the Makefile rule.  Should
# depend on another stamp file rather than using the commented-out
# lines below, since g2c.h isn't necessarily brought up to date.
#	mv g2c.h g2c.x
	$(SHELL) config.status
#	$(SHELL) $(srcdir)/../move-if-change g2c.h g2c.x && mv g2c.x g2c.h

Makefile: Makefile.in config.status
# Autoconf doc uses `./config.status'.  Is there a good reason to use $(SHELL)?
	  $(SHELL) config.status

config.status: configure $(gcc_version_trigger)
# Make sure we don't pick up a site config file and that configure
# gets run with correct values of variables such as CC.
	CONFIG_SITE=no-such-file $(FLAGS_TO_PASS) \
	  $(SHELL) config.status --recheck

info install-info clean-info dvi TAGS dist installcheck installdirs:

check:
	cd libU77; $(MAKE) G77DIR=../../../gcc/ check

install: all
	$(INSTALL_DATA) $(LIBG2C) $(libsubdir)/$(MULTISUBDIR)/$(LIBG2C).n
	( cd $(libsubdir)/$(MULTISUBDIR) ; $(RANLIB) $(LIBG2C).n )
	mv -f $(libsubdir)/$(MULTISUBDIR)/$(LIBG2C).n $(libsubdir)/$(MULTISUBDIR)/$(LIBG2C)
	$(INSTALL_DATA) g2c.h $(libsubdir)/include/g2c.h
	@@if [ -f f2c-install-ok -o -f $(srcdir)/f2c-install-ok ]; then \
	  echo ''; \
	  echo 'Warning: g77 no longer installs libf2c.a or f2c.h.'; \
	  echo '         You must do so yourself.  For more information,'; \
	  echo '         read "Distributing Binaries" in the g77 docs.'; \
	  echo '         (To turn off this warning, delete the file'; \
	  echo '         f2c-install-ok in the source or build directory.)'; \
	  echo ''; \
	else true; fi
	$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO="$@@"

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' install

uninstall:
	rm -f $(libsubdir)/$(MULTISUBDIR)/include/g2c.h $(libsubdir)/$(MULTISUBDIR)/$(LIBG2C)
	$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO="$@@"

mostlyclean:
	rm -f $(LIBG2C)
	$(MAKE) DO=$@@ DODIRS="$(SUBDIRS)" $(FLAGS_TO_PASS) subdir_do; \
	$(MULTICLEAN) multi-clean DO=$@@
	rm -fr libE77 s-libe77

clean: mostlyclean
	rm -f config.log
	$(MAKE) DO=$@@ DODIRS="$(SUBDIRS)" $(FLAGS_TO_PASS) subdir_do; \
	$(MULTICLEAN) multi-clean DO=$@@

distclean: clean
	rm -f g2c.h s-libe77
	$(MAKE) DO=$@@ DODIRS="$(SUBDIRS)" $(FLAGS_TO_PASS) subdir_do; \
	$(MULTICLEAN) multi-clean DO=distclean
	rm -f config.cache config.status Makefile

maintainer-clean:

rebuilt: configure

.PHONY: rebuilt mostlyclean clean distclean maintainer-clean all \
        i77 f77 u77 check uninstall install-strip dist \
        installcheck installdirs all-unilib

subdir_do:
	@@rootpre=`pwd`/; export rootpre; \
	srcrootpre=`cd $(srcdir); pwd`/; export srcrootpre; \
	for i in .. $(DODIRS); do \
	  if [ x$$i != x.. ]; then \
	    if [ -f ./$$i/Makefile ]; then \
	      if (cd ./$$i; $(MAKE) $(FLAGS_TO_PASS) $(DO)); then \
		true; \
	      else \
		exit 1; \
	      fi; \
	    else true; fi; \
	  else true; fi; \
	done

# multidoings may be added here by configure.
@


1.2
log
@Invoke sh move-if-change explicitly.
Official patch, submitted to egcs and accepted in the main source.
(strongly suggested by mickey@@)
@
text
@@


1.1
log
@Initial revision
@
text
@d70 6
a75 1
	RUNTESTFLAGS='$(RUNTESTFLAGS)'
d182 1
a182 1
#	$(srcdir)/../move-if-change g2c.h g2c.x && mv g2c.x g2c.h
@


1.1.1.1
log
@egcs projects compiler system
Exact copy of the snapshot, except for the removal of
	texinfo/
	gcc/ch/
	libchill/

@
text
@@


1.1.1.2
log
@Update to gcc 2.95.1, official release.
@
text
@d70 1
a70 6
	RUNTESTFLAGS='$(RUNTESTFLAGS)' \
	prefix='$(prefix)' \
	exec_prefix='$(exec_prefix)' \
	libdir='$(libdir)' \
	libsubdir='$(libsubdir)' \
	tooldir='$(tooldir)'
@

