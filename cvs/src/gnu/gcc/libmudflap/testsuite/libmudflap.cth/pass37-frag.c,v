head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.30
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.32
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.28
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.24
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.26
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.18
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.22
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.20
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.16
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.14
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.12
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.10
	OPENBSD_5_0:1.1.1.1.0.8
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	gcc-4_2_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2009.10.15.17.11.31;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.15.17.11.31;	author robert;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@#include <stdlib.h>
#include <stdio.h>
#include <pthread.h>
#include <sched.h>

static void *
func (void *p)
{
  int *counter = (int *) p;
  unsigned i;
  
  for (i=0; i<100; i++)
    {
      (*counter) ++;
      {
	int array[17];
	unsigned x = i % (sizeof(array)/sizeof(array[0]));
	/* VRP could prove that x is within [0,16], but until then, the
	   following access will ensure that array[] is registered to
	   libmudflap. */
	array[x] = i;
      }
      sched_yield (); /* sleep (1); */
    }

  return (NULL);
}


int main ()
{
  int rc;
  unsigned i;
  enum foo { NT=10 };
  pthread_t threads[NT];
  int counts[NT];


  for (i=0; i<NT; i++)
    {
      counts[i] = 0;
      rc = pthread_create (& threads[i], NULL, func, (void *) & counts[i]);
      if (rc) abort();
    }

  for (i=0; i<NT; i++)
    {
      rc = pthread_join (threads[i], NULL);
      if (rc) abort();      
      printf ("%d%s", counts[i], (i==NT-1) ? "\n" : " ");
    }

  return 0;
}

/* { dg-output "100 100 100 100 100 100 100 100 100 100" } */
/* { dg-repetitions 20 } */
/* { dg-timeout 10 } */
@


1.1.1.1
log
@import of gcc-4.2.1, the last gcc release under GPLv2
@
text
@@
