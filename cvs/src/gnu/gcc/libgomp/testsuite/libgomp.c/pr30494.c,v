head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.28
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.24
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.26
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.18
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.22
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.20
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.16
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.14
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.12
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.10
	OPENBSD_5_0:1.1.1.1.0.8
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	gcc-4_2_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2009.10.15.17.11.31;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.15.17.11.31;	author robert;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* PR middle-end/30494 */
/* { dg-do run } */

#include <omp.h>

int errors;

int
check (int m, int i, int *v, int *w)
{
  int j;
  int n = omp_get_thread_num ();
  for (j = 0; j < m; j++)
    if (v[j] != j + n)
      #pragma omp atomic
	errors += 1;
  for (j = 0; j < m * 3 + i; j++)
    if (w[j] != j + 10 + n)
      #pragma omp atomic
	errors += 1;
}

int
foo (int n, int m)
{
  int i;
#pragma omp for
  for (i = 0; i < 6; i++)
    {
      int v[n], w[n * 3 + i], j;
      for (j = 0; j < n; j++)
	v[j] = j + omp_get_thread_num ();
      for (j = 0; j < n * 3 + i; j++)
	w[j] = j + 10 + omp_get_thread_num ();
      check (m, i, v, w);
    }
  return 0;
}

int
bar (int n, int m)
{
  int i;
#pragma omp parallel for num_threads (4)
  for (i = 0; i < 6; i++)
    {
      int v[n], w[n * 3 + i], j;
      for (j = 0; j < n; j++)
	v[j] = j + omp_get_thread_num ();
      for (j = 0; j < n * 3 + i; j++)
	w[j] = j + 10 + omp_get_thread_num ();
      check (m, i, v, w);
    }
  return 0;
}

int
main (void)
{
#pragma omp parallel num_threads (3)
  foo (128, 128);
  bar (256, 256);
  return 0;
}
@


1.1.1.1
log
@import of gcc-4.2.1, the last gcc release under GPLv2
@
text
@@
