head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.30
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.32
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.28
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.24
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.26
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.18
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.22
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.20
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.16
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.14
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.12
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.10
	OPENBSD_5_0:1.1.1.1.0.8
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	gcc-4_2_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2009.10.15.17.11.31;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.15.17.11.31;	author robert;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* Trivial test of ordered.  */

/* { dg-require-effective-target sync_int_long } */

#include <omp.h>
#include <string.h>
#include <assert.h>
#include "libgomp_g.h"


#define N 100
static int next;
static int CHUNK, NTHR;

static void clean_data (void)
{
  next = 0;
}

static void set_data (long i)
{
  int n = __sync_fetch_and_add (&next, 1);
  assert (n == i);
}


#define TMPL_1(sched)							\
static void f_##sched##_1 (void *dummy)					\
{									\
  long s0, e0, i;							\
  if (GOMP_loop_ordered_##sched##_start (0, N, 1, CHUNK, &s0, &e0))	\
    do									\
      {									\
	for (i = s0; i < e0; ++i)					\
	  {								\
	    GOMP_ordered_start ();					\
	    set_data (i);						\
	    GOMP_ordered_end ();					\
	  }								\
      }									\
    while (GOMP_loop_ordered_##sched##_next (&s0, &e0));		\
  GOMP_loop_end ();							\
}									\
static void t_##sched##_1 (void)					\
{									\
  clean_data ();							\
  GOMP_parallel_start (f_##sched##_1, NULL, NTHR);			\
  f_##sched##_1 (NULL);							\
  GOMP_parallel_end ();							\
}

TMPL_1(static)
TMPL_1(dynamic)
TMPL_1(guided)

static void test (void)
{
  t_static_1 ();
  t_dynamic_1 ();
  t_guided_1 ();
}

int main()
{
  omp_set_dynamic (0);

  NTHR = 4;

  CHUNK = 1;
  test ();

  CHUNK = 5;
  test ();

  CHUNK = 7;
  test ();

  CHUNK = 0;
  t_static_1 ();

  return 0;
}
@


1.1.1.1
log
@import of gcc-4.2.1, the last gcc release under GPLv2
@
text
@@
