head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.28
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.24
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.26
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.18
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.22
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.20
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.16
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.14
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.12
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.10
	OPENBSD_5_0:1.1.1.1.0.8
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	gcc-4_2_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2009.10.15.17.11.31;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.15.17.11.31;	author robert;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@! { dg-do run }
! { dg-options "-fopenmp -fcray-pointer" }

  use omp_lib
  integer :: a, b, c, p
  logical :: l
  pointer (ip, p)
  a = 1
  b = 2
  c = 3
  l = .false.
  ip = loc (a)

!$omp parallel num_threads (2) reduction (.or.:l)
  l = p .ne. 1
!$omp barrier
!$omp master
  ip = loc (b)
!$omp end master
!$omp barrier
  l = l .or. p .ne. 2
!$omp barrier
  if (omp_get_thread_num () .eq. 1 .or. omp_get_num_threads () .lt. 2) &
    ip = loc (c)
!$omp barrier
  l = l .or. p .ne. 3
!$omp end parallel

  if (l) call abort

  l = .false.
!$omp parallel num_threads (2) reduction (.or.:l) default (private)
  ip = loc (a)
  a = 3 * omp_get_thread_num () + 4
  b = a + 1
  c = a + 2
  l = p .ne. 3 * omp_get_thread_num () + 4
  ip = loc (c)
  l = l .or. p .ne. 3 * omp_get_thread_num () + 6
  ip = loc (b)
  l = l .or. p .ne. 3 * omp_get_thread_num () + 5
!$omp end parallel

  if (l) call abort

end
@


1.1.1.1
log
@import of gcc-4.2.1, the last gcc release under GPLv2
@
text
@@
