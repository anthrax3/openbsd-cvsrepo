head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.20
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.18
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.14
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.10
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.12
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.05.08.15.30.38;	author miod;	state Exp;
branches;
next	;


desc
@@


1.1
log
@A port of the current gcc 3.3.6 m88k backend to gcc 4.2.1.

Main features:
- md constraints rewritten in RTL
- md predicaties rewritten in RTL
- md va_arg switched to gimple
- abort() calls replaced with gcc_assert() or gcc_unreachable() for better
  diagnostics
- support for non-ELF systems completely removed

Missing:
- conversion of the pipeline information from define_function_unit to
  define_automata not done yet (thus pipeline information currently removed)

Known regressions against 3.3.6 so far:
- no stack protector support yet
- __builtin_setjmp doesn't restore the frame pointer correctly upon return
  from __builtin_longjmp
- at least one case of optimization error when delay slots are not disabled.
- libgcc is only built -fPIC, instead of static/fpic/fPIC.
@
text
@; Options for the Motorola 88000 port of the compiler.

; Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
; 2001, 2002 Free Software Foundation, Inc.
;
; This file is part of GCC.
;
; GCC is free software; you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation; either version 2, or (at your option)
; any later version.
;
; GCC is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with GCC; see the file COPYING.  If not, write to
; the Free Software Foundation, 51 Franklin Street, Fifth Floor,
; Boston, MA 02110-1301, USA.

m88110
Target RejectNegative Mask(88110)
Generate code for a 88110 processor

m88100
Target RejectNegative Mask(88100)
Generate code for a 88100 processor

m88000
Target RejectNegative
Generate code compatible with both 88100 and 88110 processors

mtrap-large-shift
Target Report RejectNegative Mask(TRAP_LARGE_SHIFT)
Add code to trap on logical shift counts larger than 31

mhandle-large-shift
Target Report RejectNegative Mask(HANDLE_LARGE_SHIFT)
Add code to handle logical shift counts larger than 31

mcheck-zero-division
Target Report Mask(CHECK_ZERO_DIV)
Add code to trap on integer divide by zero

muse-div-instruction
Target Report RejectNegative Mask(USE_DIV)
Use the \"div\" instruction for signed integer divide

mserialize-volatile
Target Report Mask(SERIALIZE_VOLATILE)
Force serialization on volatile memory access

momit-leaf-frame-pointer
Target Report Mask(OMIT_LEAF_FRAME_POINTER)
Do not save the frame pointer in leaf functions

mmemcpy
Target Report Mask(MEMCPY)
Force all memory copies to use memcpy()
@
