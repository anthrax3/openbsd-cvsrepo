head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.34
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.32
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.28
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.24
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.26
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.18
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.22
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.20
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.16
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.14
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.12
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.10
	OPENBSD_5_0:1.1.1.1.0.8
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	gcc-4_2_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2009.10.15.17.11.30;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.15.17.11.30;	author robert;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@;; Scheduling description for Motorola PowerPC 7450 processor.
;;   Copyright (C) 2003, 2004 Free Software Foundation, Inc.
;;
;; This file is part of GCC.

;; GCC is free software; you can redistribute it and/or modify it
;; under the terms of the GNU General Public License as published
;; by the Free Software Foundation; either version 2, or (at your
;; option) any later version.

;; GCC is distributed in the hope that it will be useful, but WITHOUT
;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
;; License for more details.

;; You should have received a copy of the GNU General Public License
;; along with GCC; see the file COPYING.  If not, write to the
;; Free Software Foundation, 51 Franklin Street, Fifth Floor, Boston,
;; MA 02110-1301, USA.

(define_automaton "ppc7450,ppc7450mciu,ppc7450fp,ppc7450vec")
(define_cpu_unit "iu1_7450,iu2_7450,iu3_7450" "ppc7450")
(define_cpu_unit "mciu_7450" "ppc7450mciu")
(define_cpu_unit "fpu_7450" "ppc7450fp")
(define_cpu_unit "lsu_7450,bpu_7450" "ppc7450")
(define_cpu_unit "du1_7450,du2_7450,du3_7450" "ppc7450")
(define_cpu_unit "vecsmpl_7450,veccmplx_7450,vecflt_7450,vecperm_7450" "ppc7450vec")
(define_cpu_unit "vdu1_7450,vdu2_7450" "ppc7450vec")


;; PPC7450  32-bit 3xIU, MCIU, LSU, SRU, FPU, BPU, 4xVEC
;; IU1,IU2,IU3 can perform all integer operations
;; MCIU performs imul and idiv, cr logical, SPR moves
;; LSU 2 stage pipelined
;; FPU 3 stage pipelined
;; It also has 4 vector units, one for each type of vector instruction.
;; However, we can only dispatch 2 instructions per cycle. 
;; Max issue 3 insns/clock cycle (includes 1 branch)
;; In-order execution

;; Branches go straight to the BPU.  All other insns are handled
;; by a dispatch unit which can issue a max of 3 insns per cycle.
(define_reservation "ppc7450_du" "du1_7450|du2_7450|du3_7450")
(define_reservation "ppc7450_vec_du" "vdu1_7450|vdu2_7450")

(define_insn_reservation "ppc7450-load" 3
  (and (eq_attr "type" "load,load_ext,load_ext_u,load_ext_ux,\
		        load_ux,load_u,vecload")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,lsu_7450")

(define_insn_reservation "ppc7450-store" 3
  (and (eq_attr "type" "store,store_ux,store_u,vecstore")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,lsu_7450")

(define_insn_reservation "ppc7450-fpload" 4
  (and (eq_attr "type" "fpload,fpload_ux,fpload_u")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,lsu_7450")

(define_insn_reservation "ppc7450-fpstore" 3
  (and (eq_attr "type" "fpstore,fpstore_ux,fpstore_u")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,lsu_7450*3")

(define_insn_reservation "ppc7450-llsc" 3
  (and (eq_attr "type" "load_l,store_c")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,lsu_7450")

(define_insn_reservation "ppc7450-sync" 35
  (and (eq_attr "type" "sync")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,lsu_7450")

(define_insn_reservation "ppc7450-integer" 1
  (and (eq_attr "type" "integer,insert_word")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,iu1_7450|iu2_7450|iu3_7450")

(define_insn_reservation "ppc7450-two" 1
  (and (eq_attr "type" "two")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,iu1_7450|iu2_7450|iu3_7450,iu1_7450|iu2_7450|iu3_7450")

(define_insn_reservation "ppc7450-three" 1
  (and (eq_attr "type" "three")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,iu1_7450|iu2_7450|iu3_7450,\
   iu1_7450|iu2_7450|iu3_7450,iu1_7450|iu2_7450|iu3_7450")

(define_insn_reservation "ppc7450-imul" 4
  (and (eq_attr "type" "imul,imul_compare")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,mciu_7450*2")

(define_insn_reservation "ppc7450-imul2" 3
  (and (eq_attr "type" "imul2,imul3")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,mciu_7450")

(define_insn_reservation "ppc7450-idiv" 23
  (and (eq_attr "type" "idiv")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,mciu_7450*23")

(define_insn_reservation "ppc7450-compare" 2
  (and (eq_attr "type" "cmp,fast_compare,compare,delayed_compare")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,(iu1_7450|iu2_7450|iu3_7450)")

(define_insn_reservation "ppc7450-fpcompare" 5
  (and (eq_attr "type" "fpcompare")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,fpu_7450")

(define_insn_reservation "ppc7450-fp" 5
  (and (eq_attr "type" "fp,dmul")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,fpu_7450")

; Divides are not pipelined
(define_insn_reservation "ppc7450-sdiv" 21
  (and (eq_attr "type" "sdiv")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,fpu_7450*21")

(define_insn_reservation "ppc7450-ddiv" 35
  (and (eq_attr "type" "ddiv")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,fpu_7450*35")

(define_insn_reservation "ppc7450-mfcr" 2
  (and (eq_attr "type" "mfcr,mtcr")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,mciu_7450")

(define_insn_reservation "ppc7450-crlogical" 1
  (and (eq_attr "type" "cr_logical,delayed_cr")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,mciu_7450")

(define_insn_reservation "ppc7450-mtjmpr" 2
  (and (eq_attr "type" "mtjmpr")
       (eq_attr "cpu" "ppc7450"))
  "nothing,mciu_7450*2")

(define_insn_reservation "ppc7450-mfjmpr" 3
  (and (eq_attr "type" "mfjmpr")
       (eq_attr "cpu" "ppc7450"))
  "nothing,mciu_7450*2")

(define_insn_reservation "ppc7450-jmpreg" 1
  (and (eq_attr "type" "jmpreg,branch,isync")
       (eq_attr "cpu" "ppc7450"))
  "nothing,bpu_7450")

;; Altivec
(define_insn_reservation "ppc7450-vecsimple" 1
  (and (eq_attr "type" "vecsimple")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,ppc7450_vec_du,vecsmpl_7450")

(define_insn_reservation "ppc7450-veccomplex" 4
  (and (eq_attr "type" "veccomplex")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,ppc7450_vec_du,veccmplx_7450")

(define_insn_reservation "ppc7450-veccmp" 2
  (and (eq_attr "type" "veccmp")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,ppc7450_vec_du,veccmplx_7450")

(define_insn_reservation "ppc7450-vecfloat" 4
  (and (eq_attr "type" "vecfloat")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,ppc7450_vec_du,vecflt_7450")

(define_insn_reservation "ppc7450-vecperm" 2
  (and (eq_attr "type" "vecperm")
       (eq_attr "cpu" "ppc7450"))
  "ppc7450_du,ppc7450_vec_du,vecperm_7450")

@


1.1.1.1
log
@import of gcc-4.2.1, the last gcc release under GPLv2
@
text
@@
