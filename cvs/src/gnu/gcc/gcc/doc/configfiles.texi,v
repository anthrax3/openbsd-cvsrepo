head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.30
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.32
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.28
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.24
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.26
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.18
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.22
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.20
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.16
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.14
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.12
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.10
	OPENBSD_5_0:1.1.1.1.0.8
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	gcc-4_2_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2009.10.15.17.11.30;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.15.17.11.30;	author robert;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@@@c Copyright (C) 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
@@c 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
@@c This is part of the GCC manual.
@@c For copying conditions, see the file gcc.texi.

@@node Configuration Files
@@subsubsection Files Created by @@code{configure}

Here we spell out what files will be set up by @@file{configure} in the
@@file{gcc} directory.  Some other files are created as temporary files
in the configuration process, and are not used in the subsequent
build; these are not documented.

@@itemize @@bullet
@@item
@@file{Makefile} is constructed from @@file{Makefile.in}, together with
the host and target fragments (@@pxref{Fragments, , Makefile
Fragments}) @@file{t-@@var{target}} and @@file{x-@@var{host}} from
@@file{config}, if any, and language Makefile fragments
@@file{@@var{language}/Make-lang.in}.
@@item
@@file{auto-host.h} contains information about the host machine
determined by @@file{configure}.  If the host machine is different from
the build machine, then @@file{auto-build.h} is also created,
containing such information about the build machine.
@@item
@@file{config.status} is a script that may be run to recreate the
current configuration.
@@item
@@file{configargs.h} is a header containing details of the arguments
passed to @@file{configure} to configure GCC, and of the thread model
used.
@@item
@@file{cstamp-h} is used as a timestamp.
@@item
@@file{fixinc/Makefile} is constructed from @@file{fixinc/Makefile.in}.
@@item
@@file{gccbug}, a script for reporting bugs in GCC, is constructed from
@@file{gccbug.in}.
@@item
@@file{intl/Makefile} is constructed from @@file{intl/Makefile.in}.
@@item
@@file{mklibgcc}, a shell script to create a Makefile to build libgcc,
is constructed from @@file{mklibgcc.in}.
@@item
If a language @@file{config-lang.in} file (@@pxref{Front End Config, ,
The Front End @@file{config-lang.in} File}) sets @@code{outputs}, then
the files listed in @@code{outputs} there are also generated.
@@end itemize

The following configuration headers are created from the Makefile,
using @@file{mkconfig.sh}, rather than directly by @@file{configure}.
@@file{config.h}, @@file{bconfig.h} and @@file{tconfig.h} all contain the
@@file{xm-@@var{machine}.h} header, if any, appropriate to the host,
build and target machines respectively, the configuration headers for
the target, and some definitions; for the host and build machines,
these include the autoconfigured headers generated by
@@file{configure}.  The other configuration headers are determined by
@@file{config.gcc}.  They also contain the typedefs for @@code{rtx},
@@code{rtvec} and @@code{tree}.

@@itemize @@bullet
@@item
@@file{config.h}, for use in programs that run on the host machine.
@@item
@@file{bconfig.h}, for use in programs that run on the build machine.
@@item
@@file{tconfig.h}, for use in programs and libraries for the target
machine.
@@item
@@file{tm_p.h}, which includes the header @@file{@@var{machine}-protos.h}
that contains prototypes for functions in the target @@file{.c} file.
FIXME: why is such a separate header necessary?
@@end itemize
@


1.1.1.1
log
@import of gcc-4.2.1, the last gcc release under GPLv2
@
text
@@
