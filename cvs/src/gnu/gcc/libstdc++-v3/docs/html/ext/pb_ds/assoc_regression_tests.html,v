head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.30
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.28
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.24
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.26
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.18
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.22
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.20
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.16
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.14
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.12
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.10
	OPENBSD_5_0:1.1.1.1.0.8
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.4
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	gcc-4_2_1:1.1.1.1
	FSF:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2009.10.15.17.11.32;	author robert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.10.15.17.11.32;	author robert;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <meta name="generator" content=
  "HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org" />

  <title>Associative-Container Regression Tests</title>
  <meta http-equiv="Content-Type" content=
  "text/html; charset=us-ascii" />
  </head>

<body>
  <div id="page">
    <h1>Associative-Container Regression Tests</h1>

    <h2><a name="assoc_desc" id="assoc_desc">Description</a></h2>

    <p>The library contains a single comprehensive regression test.
    For a given container type in <tt>pb_ds</tt>, the test creates
    an object of the container type and an object of the
    corresponding STL type (<i>e.g.</i>, <tt>std::set</tt>). It
    then performs a random sequence of methods with random
    arguments (<i>e.g.</i>, inserts, erases, and so forth) on both
    objects. At each operation, the test checks the return value of
    the method, and optionally both compares <tt>pb_ds</tt>'s
    object with the STL's object as well as performing other
    consistency checks on <tt>pb_ds</tt>'s object (<i>e.g.</i>,
    order preservation, when applicable, or node invariants, when
    applicable).</p>

    <p>Additionally, the test integrally checks exception safety
    and resource leaks. This is done as follows. A special
    allocator type, written for the purpose of the test, both
    randomly throws an exceptions when allocations are performed,
    and tracks allocations and de-allocations. The exceptions thrown
    at allocations simulate memory-allocation failures; the
    tracking mechanism checks for memory-related bugs (<i>e.g.</i>,
    resource leaks and multiple de-allocations). Both
    <tt>pb_ds</tt>'s containers and the containers' value-types are
    configured to use this allocator.</p>

    <p>Due to compiler constraints, the test is split into the
    several sources, each checking only some containers.</p>

    <h2><a name="assoc_tests" id="assoc_tests">Tests</a></h2>

    <h3><a name="assoc_tests_set" id="assoc_tests_set">"Set"
    Tests</a></h3>

    <p>The following check all "set" types:</p>

    <ol>
      <li><a href=
      "../../../../testsuite/ext/pb_ds/regression/hash_no_data_map_rand.cc"><tt>hash_no_data_map_rand.cc</tt></a>
      checks all hash-based "set" types.</li>

      <li><a href=
      "../../../../testsuite/ext/pb_ds/regression/list_update_no_data_map_rand.cc"><tt>list_update_no_data_map_rand.cc</tt></a>
      checks all list-based "set" types.</li>

      <li><a href=
      "../../../../testsuite/ext/pb_ds/regression/tree_no_data_map_rand.cc"><tt>tree_no_data_map_rand.cc</tt></a>
      checks all tree-based "set" types.</li>

      <li><a href=
      "../../../../testsuite/ext/pb_ds/regression/trie_no_data_map_rand.cc"><tt>trie_no_data_map_rand.cc</tt></a>
      checks all PATRICIA-trie-based "set" types.</li>
    </ol>

    <h3><a name="assoc_tests_map" id="assoc_tests_map">"Map"
    Tests</a></h3>

    <p>The following check all "map" types:</p>

    <ol>
      <li><a href=
      "../../../../testsuite/ext/pb_ds/regression/hash_data_map_rand.cc"><tt>hash_data_map_rand.cc</tt></a>
      checks all hash-based "map" types.</li>

      <li><a href=
      "../../../../testsuite/ext/pb_ds/regression/list_update_data_map_rand.cc"><tt>list_update_data_map_rand.cc</tt></a>
      checks all list-based "map" types.</li>

      <li><a href=
      "../../../../testsuite/ext/pb_ds/regression/tree_data_map_rand.cc"><tt>tree_data_map_rand.cc</tt></a>
      checks all tree-based "map" types.</li>

      <li><a href=
      "../../../../testsuite/ext/pb_ds/regression/trie_data_map_rand.cc"><tt>trie_data_map_rand.cc</tt></a>
      checks all PATRICIA-trie-based "map" types.</li>
    </ol>
  </div>
</body>
</html>
@


1.1.1.1
log
@import of gcc-4.2.1, the last gcc release under GPLv2
@
text
@@
