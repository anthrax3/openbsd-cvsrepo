head	1.1;
branch	1.1.1;
access;
symbols
	LLVM_4_0_0:1.1.1.1
	LLVM_4_0_0_RC1:1.1.1.1
	LLVM_3_9_1:1.1.1.1
	LLVM_3_8_1:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.09.03.22.46.59;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	piLU3CHugy63NlaI;

1.1.1.1
date	2016.09.03.22.46.59;	author pascal;	state Exp;
branches;
next	;
commitid	piLU3CHugy63NlaI;


desc
@@


1.1
log
@Initial revision
@
text
@# Check stdout redirect (> and >>).
#
# RUN: echo "not-present" > %t.stdout-write
# RUN: echo "is-present" > %t.stdout-write
# RUN: FileCheck --check-prefix=STDOUT-WRITE < %t.stdout-write %s
#
# STDOUT-WRITE-NOT: not-present
# STDOUT-WRITE: is-present
#
# RUN: echo "appended-line" >> %t.stdout-write
# RUN: FileCheck --check-prefix=STDOUT-APPEND < %t.stdout-write %s
#
# STDOUT-APPEND: is-present
# STDOUT-APPEND: appended-line


# Check stderr redirect (2> and 2>>).
#
# RUN: echo "not-present" > %t.stderr-write
# RUN: %S/write-to-stderr.sh 2> %t.stderr-write
# RUN: FileCheck --check-prefix=STDERR-WRITE < %t.stderr-write %s
#
# STDERR-WRITE-NOT: not-present
# STDERR-WRITE: a line on stderr
#
# RUN: %S/write-to-stderr.sh 2>> %t.stderr-write
# RUN: FileCheck --check-prefix=STDERR-APPEND < %t.stderr-write %s
#
# STDERR-APPEND: a line on stderr
# STDERR-APPEND: a line on stderr


# Check combined redirect (&>).
#
# RUN: echo "not-present" > %t.combined
# RUN: %S/write-to-stdout-and-stderr.sh &> %t.combined
# RUN: FileCheck --check-prefix=COMBINED-WRITE < %t.combined %s
#
# COMBINED-WRITE-NOT: not-present
# COMBINED-WRITE: a line on stdout
# COMBINED-WRITE: a line on stderr
@


1.1.1.1
log
@Use the space freed up by sparc and zaurus to import LLVM.

ok hackroom@@
@
text
@@
