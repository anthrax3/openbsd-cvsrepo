head	1.1;
branch	1.1.1;
access;
symbols
	LLVM_4_0_0:1.1.1.1
	LLVM_4_0_0_RC1:1.1.1.1
	LLVM_3_9_1:1.1.1.1
	LLVM_3_8_1:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.09.03.22.46.59;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	piLU3CHugy63NlaI;

1.1.1.1
date	2016.09.03.22.46.59;	author pascal;	state Exp;
branches;
next	;
commitid	piLU3CHugy63NlaI;


desc
@@


1.1
log
@Initial revision
@
text
@{
   False leak under RegisterPass
   Memcheck:Leak
   ...
   fun:_ZN83_GLOBAL_*PassRegistrar12RegisterPassERKN4llvm8PassInfoE
   fun:_ZN4llvm8PassInfo12registerPassEv
}

# Python false positives according to
# http://svn.python.org/projects/python/trunk/Misc/README.valgrind

{
   ADDRESS_IN_RANGE/Invalid read of size 4
   Memcheck:Addr4
   obj:/usr/bin/python*
}

{
   ADDRESS_IN_RANGE/Invalid read of size 4
   Memcheck:Value4
   obj:/usr/bin/python*
}

{
   ADDRESS_IN_RANGE/Conditional jump or move depends on uninitialised value
   Memcheck:Cond
   obj:/usr/bin/python*
}

{
   We don't care if as leaks
   Memcheck:Leak
   obj:/usr/bin/as
}

{
   We don't care if python leaks
   Memcheck:Leak
   fun:malloc
   obj:/usr/bin/python*
}

{
   We don't care about anything ld.so does.
   Memcheck:Cond
   obj:/lib/ld*.so
}

@


1.1.1.1
log
@Use the space freed up by sparc and zaurus to import LLVM.

ok hackroom@@
@
text
@@
