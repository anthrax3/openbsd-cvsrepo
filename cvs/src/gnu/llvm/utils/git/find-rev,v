head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.4
	OPENBSD_6_1_BASE:1.1.1.1
	LLVM_4_0_0:1.1.1.1
	LLVM_4_0_0_RC1:1.1.1.1
	LLVM_3_9_1:1.1.1.1
	LLVM_3_8_1:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.09.03.22.46.59;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	piLU3CHugy63NlaI;

1.1.1.1
date	2016.09.03.22.46.59;	author pascal;	state Exp;
branches;
next	;
commitid	piLU3CHugy63NlaI;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/python

import os, sys, subprocess

def main():
    from optparse import OptionParser, OptionGroup
    parser = OptionParser("usage: %prog [options] <repo> <revision>")
    parser.add_option("", "--branch", dest="branch",
                      help="Ref for the branch to search [%default]",
                      action="store", default="git-svn")    
    (opts, args) = parser.parse_args()

    if len(args) != 2:
        parser.error("invalid number of arguments")

    repo,rev = args

    try:
        rev = int(rev)
    except:
        parser.error("invalid revision argument (not an integer)")

    os.chdir(repo)
    p = subprocess.Popen(['git', 'rev-list', opts.branch, '--pretty'],
                         stdout=subprocess.PIPE)

    bestRev = bestCommit = None
    lastCommit = None
    for ln in p.stdout:
        if ln.startswith('commit '):
            lastCommit = ln.split(' ',2)[1]
        elif ln.startswith('    git-svn-id: '):
            _,repo,_ = ln.strip().split(' ')
            _,lrev = repo.rsplit('@@',1)
            lrev = int(lrev)
            if lrev<=rev:
                if bestRev is None or lrev>bestRev:
                    assert lastCommit
                    bestCommit = lastCommit
                    bestRev = lrev
                    if lrev == rev:
                        break
    
    if bestCommit is not None:
        print bestCommit
        sys.exit(0)
    sys.exit(1)

if __name__=='__main__':
    main()
@


1.1.1.1
log
@Use the space freed up by sparc and zaurus to import LLVM.

ok hackroom@@
@
text
@@
