head	1.1;
branch	1.1.1;
access;
symbols
	LLVM_5_0_0:1.1.1.4
	OPENBSD_6_2:1.1.1.3.0.2
	OPENBSD_6_2_BASE:1.1.1.3
	OPENBSD_6_1:1.1.1.3.0.4
	OPENBSD_6_1_BASE:1.1.1.3
	LLVM_4_0_0:1.1.1.3
	LLVM_4_0_0_RC1:1.1.1.3
	LLVM_3_9_1:1.1.1.2
	LLVM_3_8_1:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.09.03.22.46.54;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	piLU3CHugy63NlaI;

1.1.1.1
date	2016.09.03.22.46.54;	author pascal;	state Exp;
branches;
next	1.1.1.2;
commitid	piLU3CHugy63NlaI;

1.1.1.2
date	2017.01.14.19.55.43;	author patrick;	state Exp;
branches;
next	1.1.1.3;
commitid	qMUxATnKgqN83Oct;

1.1.1.3
date	2017.01.24.08.32.59;	author patrick;	state Exp;
branches;
next	1.1.1.4;
commitid	so2WA7LCP6wbxtYl;

1.1.1.4
date	2017.10.04.20.27.34;	author patrick;	state Exp;
branches;
next	;
commitid	ufzi3t8MqoilCPqO;


desc
@@


1.1
log
@Initial revision
@
text
@This file is a list of the people responsible for ensuring that patches for a
particular part of LLVM are reviewed, either by themself or by someone else.
They are also the gatekeepers for their part of LLVM, with the final word on
what goes in or not.

The list is sorted by surname and formatted to allow easy grepping and
beautification by scripts.  The fields are: name (N), email (E), web-address
(W), PGP key ID and fingerprint (P), description (D), and snail-mail address
(S). Each entry should contain at least the (N), (E) and (D) fields.

N: Joe Abbey
E: jabbey@@arxan.com
D: LLVM Bitcode (lib/Bitcode/* include/llvm/Bitcode/*)

N: Owen Anderson
E: resistor@@mac.com
D: SelectionDAG (lib/CodeGen/SelectionDAG/*)

N: Rafael Avila de Espindola
E: rafael.espindola@@gmail.com
D: Gold plugin (tools/gold/*)

N: Justin Bogner
E: mail@@justinbogner.com
D: InstrProfiling and related parts of ProfileData

N: Chandler Carruth
E: chandlerc@@gmail.com
E: chandlerc@@google.com
D: Config, ADT, Support, inlining & related passes, SROA/mem2reg & related passes, CMake, library layering

N: Evan Cheng
E: evan.cheng@@apple.com
D: parts of code generator not covered by someone else

N: Eric Christopher
E: echristo@@gmail.com
D: Debug Information, autotools/configure/make build, inline assembly

N: Greg Clayton
E: gclayton@@apple.com
D: LLDB

N: Marshall Clow
E: mclow.lists@@gmail.com
D: libc++

N: Peter Collingbourne
E: peter@@pcc.me.uk
D: llgo

N: Quentin Colombet
E: qcolombet@@apple.com
D: Register allocators

N: Duncan P. N. Exon Smith
E: dexonsmith@@apple.com
D: Branch weights and BlockFrequencyInfo

N: Hal Finkel
E: hfinkel@@anl.gov
D: BBVectorize, the loop reroller, alias analysis and the PowerPC target

N: Dan Gohman
E: sunfish@@mozilla.com
D: WebAssembly Backend (lib/Target/WebAssembly/*)

N: Renato Golin
E: renato.golin@@linaro.org
D: ARM Linux support

N: Venkatraman Govindaraju
E: venkatra@@cs.wisc.edu
D: Sparc Backend (lib/Target/Sparc/*)

N: Tobias Grosser
E: tobias@@grosser.es
D: Polly

N: James Grosbach
E: grosbach@@apple.com
D: MC layer

N: Justin Holewinski
E: jholewinski@@nvidia.com
D: NVPTX Target (lib/Target/NVPTX/*)

N: Lang Hames
E: lhames@@gmail.com
D: MCJIT, RuntimeDyld and JIT event listeners

N: Galina Kistanova
E: gkistanova@@gmail.com
D: LLVM Buildbot

N: Anton Korobeynikov
E: anton@@korobeynikov.info
D: Exception handling, Windows codegen, ARM EABI

N: Benjamin Kramer
E: benny.kra@@gmail.com
D: DWARF Parser

N: Sergei Larin
E: slarin@@codeaurora.org
D: VLIW Instruction Scheduling, Packetization

N: Chris Lattner
E: sabre@@nondot.org
W: http://nondot.org/~sabre/
D: Everything not covered by someone else

N: David Majnemer
E: david.majnemer@@gmail.com
D: IR Constant Folder, InstCombine

N: Dylan McKay
E: dylanmckay34@@gmail.com
D: AVR Backend

N: Tim Northover
E: t.p.northover@@gmail.com
D: AArch64 backend, misc ARM backend

N: Diego Novillo
E: dnovillo@@google.com
D: SampleProfile and related parts of ProfileData

N: Jakob Olesen
E: stoklund@@2pi.dk
D: TableGen

N: Richard Osborne
E: richard@@xmos.com
D: XCore Backend

N: Krzysztof Parzyszek
E: kparzysz@@codeaurora.org
D: Hexagon Backend

N: Paul Robinson
E: paul_robinson@@playstation.sony.com
D: Sony PlayStationÂ®4 support

N: Chad Rosier
E: mcrosier@@codeaurora.org
D: Fast-Isel

N: Nadav Rotem
E: nrotem@@apple.com
D: X86 Backend, Loop Vectorizer

N: Daniel Sanders
E: daniel.sanders@@imgtec.com
D: MIPS Backend (lib/Target/Mips/*)

N: Duncan Sands
E: baldrick@@free.fr
D: DragonEgg

N: Kostya Serebryany
E: kcc@@google.com
D: AddressSanitizer, ThreadSanitizer (LLVM parts)

N: Michael Spencer
E: bigcheesegs@@gmail.com
D: Windows parts of Support, Object, ar, nm, objdump, ranlib, size

N: Alexei Starovoitov
E: alexei.starovoitov@@gmail.com
D: BPF backend

N: Tom Stellard
E: thomas.stellard@@amd.com
E: mesa-dev@@lists.freedesktop.org
D: Release manager for the 3.5 and 3.6 branches, R600 Backend, libclc

N: Evgeniy Stepanov
E: eugenis@@google.com
D: MemorySanitizer (LLVM part)

N: Andrew Trick
E: atrick@@apple.com
D: IndVar Simplify, Loop Strength Reduction, Instruction Scheduling

N: Ulrich Weigand
E: uweigand@@de.ibm.com
D: SystemZ Backend

N: Bill Wendling
E: isanbard@@gmail.com
D: libLTO, IR Linker

N: Peter Zotov
E: whitequark@@whitequark.org
D: OCaml bindings

N: Andrey Churbanov
E: andrey.churbanov@@intel.com
D: OpenMP runtime library
@


1.1.1.1
log
@Use the space freed up by sparc and zaurus to import LLVM.

ok hackroom@@
@
text
@@


1.1.1.2
log
@Import LLVM 3.9.1 including clang and lld.
@
text
@d15 8
a25 1
D: SelectionDAG (lib/CodeGen/SelectionDAG/*)
d38 1
a38 1
D: Debug Information, inline assembly
a43 4
N: Sanjoy Das
E: sanjoy@@playingwithpointers.com
D: IndVar Simplify, Scalar Evolution

d90 1
a90 5
D: MCJIT, RuntimeDyld and JIT event listeners, Orcish Warchief

N: Teresa Johnson
E: tejohnson@@google.com
D: Gold plugin (tools/gold/*)
a140 4
N: Jacques Pienaar
E: jpienaar@@google.com
D: Lanai Backend

d150 1
a150 1
E: nadav.rotem@@me.com
d184 1
a184 1
D: Loop Strength Reduction, Instruction Scheduling
a192 4

N: Hans Wennborg
E: hans@@chromium.org
D: Release management (x.y.0 releases)
@


1.1.1.3
log
@Import LLVM 4.0.0 rc1 including clang and lld to help the current
development effort on OpenBSD/arm64.
@
text
@d7 1
a7 1
beautification by scripts. The fields are: name (N), email (E), web-address
a19 4
N: Alex Bradbury
E: asb@@lowrisc.org
D: RISC-V backend (lib/Target/RISCV/*)

d47 1
a47 1
D: llgo, libLTO (lib/LTO/* tools/lto/*)
d51 1
a51 5
D: Loop Strength Reduction, Register allocators

N: Simon Dardis
E: simon.dardis@@imgtec.com
D: MIPS Backend (lib/Target/Mips/*)
a104 4
N: Michael Kuperstein
E: mkuper@@google.com
D: Loop Vectorizer

a113 4
N: Robert Lytton
E: robert@@xmos.com
D: XCore Backend

d134 4
d154 8
a186 4
N: Craig Topper
E: craig.topper@@gmail.com
D: X86 Backend

d189 1
a189 1
D: Instruction Scheduling
d195 3
a197 3
N: Teresa Johnson
E: tejohnson@@google.com
D: IR Linker
d203 1
a203 1
N: whitequark
@


1.1.1.4
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@d8 6
a13 3
(W), PGP key ID and fingerprint (P), description (D), snail-mail address
(S) and (I) IRC handle. Each entry should contain at least the (N), (E) and
(D) fields.
a23 5
N: Matthias Braun
E: matze@@braunis.de
I: MatzeB
D: Instruction Scheduling

a36 4
N: Andrey Churbanov
E: andrey.churbanov@@intel.com
D: OpenMP runtime library

d51 1
a51 1
D: llgo, libLTO (lib/LTO/* tools/lto/*), LLVM Bitcode (lib/Bitcode/* include/llvm/Bitcode/*)
d67 1
a67 1
D: The loop reroller, alias analysis and the PowerPC target
d99 1
a99 1
D: Gold plugin (tools/gold/*) and IR Linker
d135 1
a135 1
E: me@@dylanmckay.io
d183 3
a185 2
E: tstellar@@redhat.com
D: Stable release management (x.y.[1-9] releases), AMDGPU Backend, libclc
a192 1
E: craig.topper@@intel.com
d195 4
d203 4
d214 4
@


