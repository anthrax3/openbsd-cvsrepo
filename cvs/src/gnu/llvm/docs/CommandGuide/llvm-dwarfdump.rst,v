head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	LLVM_4_0_0:1.1.1.1
	LLVM_4_0_0_RC1:1.1.1.1
	LLVM_3_9_1:1.1.1.1
	LLVM_3_8_1:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.09.03.22.46.59;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	piLU3CHugy63NlaI;

1.1.1.1
date	2016.09.03.22.46.59;	author pascal;	state Exp;
branches;
next	;
commitid	piLU3CHugy63NlaI;


desc
@@


1.1
log
@Initial revision
@
text
@llvm-dwarfdump - print contents of DWARF sections
=================================================

SYNOPSIS
--------

:program:`llvm-dwarfdump` [*options*] [*filenames...*]

DESCRIPTION
-----------

:program:`llvm-dwarfdump` parses DWARF sections in the object files
and prints their contents in human-readable form.

OPTIONS
-------

.. option:: -debug-dump=section

  Specify the DWARF section to dump.
  For example, use ``abbrev`` to dump the contents of ``.debug_abbrev`` section,
  ``loc.dwo`` to dump the contents of ``.debug_loc.dwo`` etc.
  See ``llvm-dwarfdump --help`` for the complete list of supported sections.
  Use ``all`` to dump all DWARF sections. It is the default.

EXIT STATUS
-----------

:program:`llvm-dwarfdump` returns 0 if the input files were parsed and dumped
successfully. Otherwise, it returns 1.
@


1.1.1.1
log
@Use the space freed up by sparc and zaurus to import LLVM.

ok hackroom@@
@
text
@@
