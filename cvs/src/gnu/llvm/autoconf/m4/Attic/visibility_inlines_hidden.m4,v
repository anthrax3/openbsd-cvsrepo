head	1.2;
access;
symbols
	LLVM_3_8_1:1.1.1.1 LLVM:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2017.01.14.20.03.37;	author patrick;	state dead;
branches;
next	1.1;
commitid	g3tLqf8knavlReOK;

1.1
date	2016.09.03.22.46.58;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	piLU3CHugy63NlaI;

1.1.1.1
date	2016.09.03.22.46.58;	author pascal;	state Exp;
branches;
next	;
commitid	piLU3CHugy63NlaI;


desc
@@


1.2
log
@Merge LLVM 3.9.1
@
text
@#
# Determine if the compiler accepts -fvisibility-inlines-hidden
#
# This macro is specific to LLVM.
#
AC_DEFUN([AC_CXX_USE_VISIBILITY_INLINES_HIDDEN],
[AC_CACHE_CHECK([for compiler -fvisibility-inlines-hidden option],
                [llvm_cv_cxx_visibility_inlines_hidden],
[ AC_LANG_PUSH([C++])
  oldcxxflags="$CXXFLAGS"
  CXXFLAGS="$CXXFLAGS -O0 -fvisibility-inlines-hidden -Werror"
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
    [template <typename T> struct X { void __attribute__((noinline)) f() {} };],
    [X<int>().f();])],
    [llvm_cv_cxx_visibility_inlines_hidden=yes],[llvm_cv_cxx_visibility_inlines_hidden=no])
  CXXFLAGS="$oldcxxflags"
  AC_LANG_POP([C++])
])
if test "$llvm_cv_cxx_visibility_inlines_hidden" = yes ; then
  AC_SUBST([ENABLE_VISIBILITY_INLINES_HIDDEN],[1])
else
  AC_SUBST([ENABLE_VISIBILITY_INLINES_HIDDEN],[0])
fi
])
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Use the space freed up by sparc and zaurus to import LLVM.

ok hackroom@@
@
text
@@
