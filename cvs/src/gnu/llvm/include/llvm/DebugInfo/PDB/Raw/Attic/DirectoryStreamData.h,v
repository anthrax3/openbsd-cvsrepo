head	1.2;
access;
symbols
	LLVM_3_9_1:1.1.1.1 LLVM:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.2
date	2017.01.24.08.39.06;	author patrick;	state dead;
branches;
next	1.1;
commitid	wUhrDWmTVlrk8aou;

1.1
date	2017.01.14.19.55.56;	author patrick;	state Exp;
branches
	1.1.1.1;
next	;
commitid	qMUxATnKgqN83Oct;

1.1.1.1
date	2017.01.14.19.55.56;	author patrick;	state Exp;
branches;
next	;
commitid	qMUxATnKgqN83Oct;


desc
@@


1.2
log
@Merge LLVM 4.0.0 rc1
@
text
@//===- DirectoryStreamData.h ---------------------------------- *- C++ --*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_DEBUGINFO_PDB_RAW_DIRECTORYSTREAMDATA_H
#define LLVM_DEBUGINFO_PDB_RAW_DIRECTORYSTREAMDATA_H

#include "llvm/ADT/ArrayRef.h"
#include "llvm/DebugInfo/PDB/Raw/IPDBStreamData.h"
#include "llvm/DebugInfo/PDB/Raw/PDBFile.h"
#include "llvm/Support/Endian.h"

namespace llvm {
namespace pdb {
class IPDBFile;

class DirectoryStreamData : public IPDBStreamData {
public:
  DirectoryStreamData(const PDBFile &File) : File(File) {}

  virtual uint32_t getLength() { return File.getNumDirectoryBytes(); }
  virtual llvm::ArrayRef<llvm::support::ulittle32_t> getStreamBlocks() {
    return File.getDirectoryBlockArray();
  }

private:
  const PDBFile &File;
};
}
}

#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import LLVM 3.9.1 including clang and lld.
@
text
@@
