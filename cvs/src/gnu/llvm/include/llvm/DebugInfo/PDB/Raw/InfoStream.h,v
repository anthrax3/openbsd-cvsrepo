head	1.1;
branch	1.1.1;
access;
symbols
	LLVM_4_0_0:1.1.1.2
	LLVM_4_0_0_RC1:1.1.1.2
	LLVM_3_9_1:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.1
date	2017.01.14.19.55.56;	author patrick;	state Exp;
branches
	1.1.1.1;
next	;
commitid	qMUxATnKgqN83Oct;

1.1.1.1
date	2017.01.14.19.55.56;	author patrick;	state Exp;
branches;
next	1.1.1.2;
commitid	qMUxATnKgqN83Oct;

1.1.1.2
date	2017.01.24.08.33.18;	author patrick;	state Exp;
branches;
next	;
commitid	so2WA7LCP6wbxtYl;


desc
@@


1.1
log
@Initial revision
@
text
@//===- InfoStream.h - PDB Info Stream (Stream 1) Access ---------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_DEBUGINFO_PDB_RAW_PDBINFOSTREAM_H
#define LLVM_DEBUGINFO_PDB_RAW_PDBINFOSTREAM_H

#include "llvm/ADT/StringMap.h"
#include "llvm/DebugInfo/PDB/PDBTypes.h"
#include "llvm/DebugInfo/PDB/Raw/MappedBlockStream.h"
#include "llvm/DebugInfo/PDB/Raw/NameMap.h"
#include "llvm/DebugInfo/PDB/Raw/RawConstants.h"

#include "llvm/Support/Endian.h"
#include "llvm/Support/Error.h"

namespace llvm {
namespace pdb {
class InfoStreamBuilder;
class PDBFile;

class InfoStream {
  friend class InfoStreamBuilder;

  struct HeaderInfo {
    support::ulittle32_t Version;
    support::ulittle32_t Signature;
    support::ulittle32_t Age;
    PDB_UniqueId Guid;
  };

public:
  InfoStream(std::unique_ptr<MappedBlockStream> Stream);

  Error reload();
  Error commit();

  PdbRaw_ImplVer getVersion() const;
  uint32_t getSignature() const;
  uint32_t getAge() const;
  PDB_UniqueId getGuid() const;

  uint32_t getNamedStreamIndex(llvm::StringRef Name) const;
  iterator_range<StringMapConstIterator<uint32_t>> named_streams() const;

private:
  std::unique_ptr<MappedBlockStream> Stream;

  // PDB file format version.  We only support VC70.  See the enumeration
  // `PdbRaw_ImplVer` for the other possible values.
  uint32_t Version;

  // A 32-bit signature unique across all PDBs.  This is generated with
  // a call to time() when the PDB is written, but obviously this is not
  // universally unique.
  uint32_t Signature;

  // The number of times the PDB has been written.  Might also be used to
  // ensure that the PDB matches the executable.
  uint32_t Age;

  // Due to the aforementioned limitations with `Signature`, this is a new
  // signature present on VC70 and higher PDBs which is guaranteed to be
  // universally unique.
  PDB_UniqueId Guid;

  NameMap NamedStreams;
};
}
}

#endif
@


1.1.1.1
log
@Import LLVM 3.9.1 including clang and lld.
@
text
@@


1.1.1.2
log
@Import LLVM 4.0.0 rc1 including clang and lld to help the current
development effort on OpenBSD/arm64.
@
text
@a13 1
#include "llvm/DebugInfo/MSF/MappedBlockStream.h"
d15 1
d30 7
d38 1
a38 1
  InfoStream(std::unique_ptr<msf::MappedBlockStream> Stream);
d41 1
d52 1
a52 1
  std::unique_ptr<msf::MappedBlockStream> Stream;
@

