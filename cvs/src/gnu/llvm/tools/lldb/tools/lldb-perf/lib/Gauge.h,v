head     1.1;
branch   1.1.1;
access   ;
symbols  LLVM_5_0_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @ * @;
expand   @o@;


1.1
date     2017.10.04.20.27.36;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        ufzi3t8MqoilCPqO;

1.1.1.1
date     2017.10.04.20.27.36;  author patrick;  state Exp;
branches ;
next     ;
commitid        ufzi3t8MqoilCPqO;


desc
@@



1.1
log
@Initial revision
@
text
@//===-- Gauge.h -------------------------------------------------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#ifndef PerfTestDriver_Gauge_h
#define PerfTestDriver_Gauge_h

#include <functional>
#include <string>

#include "Results.h"

namespace lldb_perf {

template <class T> class Gauge {
public:
  typedef T ValueType;

  Gauge() {}

  virtual ~Gauge() {}

  virtual void Start() = 0;

  virtual ValueType Stop() = 0;

  virtual ValueType GetStartValue() const = 0;

  virtual ValueType GetStopValue() const = 0;

  virtual ValueType GetDeltaValue() const = 0;
};

template <class T>
Results::ResultSP GetResult(const char *description, T value);

template <> Results::ResultSP GetResult(const char *description, double value);

template <>
Results::ResultSP GetResult(const char *description, uint64_t value);

template <>
Results::ResultSP GetResult(const char *description, std::string value);
}

#endif
@


1.1.1.1
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@@
