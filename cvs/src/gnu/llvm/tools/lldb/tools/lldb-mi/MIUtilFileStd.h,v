head     1.1;
branch   1.1.1;
access   ;
symbols  LLVM_5_0_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @ * @;
expand   @o@;


1.1
date     2017.10.04.20.27.36;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        ufzi3t8MqoilCPqO;

1.1.1.1
date     2017.10.04.20.27.36;  author patrick;  state Exp;
branches ;
next     ;
commitid        ufzi3t8MqoilCPqO;


desc
@@



1.1
log
@Initial revision
@
text
@//===-- MIUtilFileStd.h -----------------------------------------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#pragma once

// In-house headers:
#include "MICmnBase.h"
#include "MIUtilString.h"

//++
//============================================================================
// Details: MI common code utility class. File handling.
//--
class CMIUtilFileStd : public CMICmnBase {
  // Static:
public:
  static char GetSlash();

  // Methods:
public:
  /* ctor */ CMIUtilFileStd();
  //
  bool CreateWrite(const CMIUtilString &vFileNamePath, bool &vwrbNewCreated);
  bool Write(const CMIUtilString &vData);
  bool Write(const char *vpData, const MIuint vCharCnt);
  void Close();
  bool IsOk() const;
  bool IsFileExist(const CMIUtilString &vFileNamePath) const;
  const CMIUtilString &GetLineReturn() const;
  static CMIUtilString StripOffFileName(const CMIUtilString &vDirectoryPath);

  // Overridden:
public:
  // From CMICmnBase
  /* dtor */ ~CMIUtilFileStd() override;

  // Attributes:
private:
  CMIUtilString m_fileNamePath;
  FILE *m_pFileHandle;
  CMIUtilString m_constCharNewLine;
  bool m_bFileError; // True = have a file error ATM, false = all ok
};
@


1.1.1.1
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@@
