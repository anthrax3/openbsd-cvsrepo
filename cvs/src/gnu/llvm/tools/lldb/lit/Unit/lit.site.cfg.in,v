head     1.1;
branch   1.1.1;
access   ;
symbols  LLVM_5_0_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @# @;
expand   @o@;


1.1
date     2017.10.04.20.27.40;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        ufzi3t8MqoilCPqO;

1.1.1.1
date     2017.10.04.20.27.40;  author patrick;  state Exp;
branches ;
next     ;
commitid        ufzi3t8MqoilCPqO;


desc
@@



1.1
log
@Initial revision
@
text
@@@LIT_SITE_CFG_IN_HEADER@@

config.test_exec_root = "@@LLVM_BINARY_DIR@@" 
config.llvm_src_root = "@@LLVM_SOURCE_DIR@@"
config.llvm_obj_root = "@@LLVM_BINARY_DIR@@"
config.llvm_tools_dir = "@@LLVM_TOOLS_DIR@@"
config.llvm_libs_dir = "@@LLVM_LIBS_DIR@@"
config.llvm_build_mode = "@@LLVM_BUILD_MODE@@"
config.lit_tools_dir = "@@LLVM_LIT_TOOLS_DIR@@"
config.lldb_obj_root = "@@LLDB_BINARY_DIR@@"
config.lldb_src_root = "@@LLDB_SOURCE_DIR@@"
config.target_triple = "@@TARGET_TRIPLE@@"
config.python_executable = "@@PYTHON_EXECUTABLE@@"

# Support substitution of the tools and libs dirs with user parameters. This is
# used when we can't determine the tool dir at configuration time.
try:
    config.llvm_tools_dir = config.llvm_tools_dir % lit_config.params
    config.llvm_libs_dir = config.llvm_libs_dir % lit_config.params
    config.llvm_build_mode = config.llvm_build_mode % lit_config.params
except KeyError as e:
    key, = e.args
    lit_config.fatal("unable to find %r parameter, use '--param=%s=VALUE'" % (key,key))

# Let the main config do the real work.
lit_config.load_config(config, "@@LLDB_SOURCE_DIR@@/lit/Unit/lit.cfg")
@


1.1.1.1
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@@
