head     1.1;
branch   1.1.1;
access   ;
symbols  LLVM_5_0_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @# @;
expand   @o@;


1.1
date     2017.10.04.20.27.38;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        ufzi3t8MqoilCPqO;

1.1.1.1
date     2017.10.04.20.27.38;  author patrick;  state Exp;
branches ;
next     ;
commitid        ufzi3t8MqoilCPqO;


desc
@@



1.1
log
@Initial revision
@
text
@"""
Objective-C runtime wrapper for use by LLDB Python formatters

part of The LLVM Compiler Infrastructure
This file is distributed under the University of Illinois Open Source
License. See LICENSE.TXT for details.
"""


class AttributesDictionary:

    def __init__(self, allow_reset=True):
        # need to do it this way to prevent endless recursion
        self.__dict__['_dictionary'] = {}
        self.__dict__['_allow_reset'] = allow_reset

    def __getattr__(self, name):
        if not self._check_exists(name):
            return None
        value = self._dictionary[name]
        return value

    def _set_impl(self, name, value):
        self._dictionary[name] = value

    def _check_exists(self, name):
        return name in self._dictionary

    def __setattr__(self, name, value):
        if self._allow_reset:
            self._set_impl(name, value)
        else:
            self.set_if_necessary(name, value)

    def set_if_necessary(self, name, value):
        if not self._check_exists(name):
            self._set_impl(name, value)
            return True
        return False

    def __len__(self):
        return len(self._dictionary)
@


1.1.1.1
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@@
