head     1.1;
branch   1.1.1;
access   ;
symbols  LLVM_5_0_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @# @;
expand   @o@;


1.1
date     2017.10.04.20.27.38;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        ufzi3t8MqoilCPqO;

1.1.1.1
date     2017.10.04.20.27.38;  author patrick;  state Exp;
branches ;
next     ;
commitid        ufzi3t8MqoilCPqO;


desc
@@



1.1
log
@Initial revision
@
text
@import sys
import os
import lldb


def check_has_dir_in_path(dirname):
    return sys.path.__contains__(dirname)


def ensure_has_dir_in_path(dirname):
    dirname = os.path.abspath(dirname)
    if not (check_has_dir_in_path(dirname)):
        sys.path.append(dirname)


def do_import(debugger, modname):
    if (len(modname) > 4 and modname[-4:] == '.pyc'):
        modname = modname[:-4]
    if (len(modname) > 3 and modname[-3:] == '.py'):
        modname = modname[:-3]
    debugger.HandleCommand("script import " + modname)


def pyimport_cmd(debugger, args, result, dict):
    """Import a Python module given its full path"""
    print 'WARNING: obsolete feature - use native command "command script import"'
    if args == "":
        return "no module path given"
    if not (os.sep in args):
        modname = args
        ensure_has_dir_in_path('.')
    else:
        endofdir = args.rfind(os.sep)
        modname = args[endofdir + 1:]
        args = args[0:endofdir]
        ensure_has_dir_in_path(args)
    do_import(debugger, modname)
    return None
@


1.1.1.1
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@@
