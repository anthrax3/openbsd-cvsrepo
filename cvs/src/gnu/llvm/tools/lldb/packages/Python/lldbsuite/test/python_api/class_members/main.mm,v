head     1.1;
branch   1.1.1;
access   ;
symbols  LLVM_5_0_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @.\" @;
expand   @o@;


1.1
date     2017.10.04.20.27.42;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        ufzi3t8MqoilCPqO;

1.1.1.1
date     2017.10.04.20.27.42;  author patrick;  state Exp;
branches ;
next     ;
commitid        ufzi3t8MqoilCPqO;


desc
@@



1.1
log
@Initial revision
@
text
@//===-- main.cpp ------------------------------------------------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#import <Foundation/Foundation.h>

class Base {
public:
    int foo(int x, int y) { return 1; }
    char bar(int x, char y) { return 2; }
    void dat() {}
    static int sfunc(char, int, float) { return 3; }
};

class Derived: public Base {
protected:
    int dImpl() { return 1; }
public:
    float baz(float b) { return b + 1.0; }
};

@@interface Thingy: NSObject {
}
- (id)init;
- (id)fooWithBar: (int)bar andBaz:(id)baz;
@@end

@@implementation Thingy {
}
- (id)init {
    return (self = [super init]);
}
- (id)fooWithBar: (int)bar andBaz:(id)baz {
    return nil;
}
@@end

int main() {
    Derived d;
    Thingy *thingy = [[Thingy alloc] init];
    return 0; // set breakpoint here
}
@


1.1.1.1
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@@
