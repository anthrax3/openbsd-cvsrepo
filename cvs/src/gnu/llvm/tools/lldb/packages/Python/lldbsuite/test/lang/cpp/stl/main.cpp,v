head     1.1;
branch   1.1.1;
access   ;
symbols  LLVM_5_0_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @// @;
expand   @o@;


1.1
date     2017.10.04.20.27.40;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        ufzi3t8MqoilCPqO;

1.1.1.1
date     2017.10.04.20.27.40;  author patrick;  state Exp;
branches ;
next     ;
commitid        ufzi3t8MqoilCPqO;


desc
@@



1.1
log
@Initial revision
@
text
@//===-- main.cpp ------------------------------------------------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
#include <cstdio>
#include <iostream>
#include <string>
#include <map>
int main (int argc, char const *argv[])
{
    std::string hello_world ("Hello World!");
    std::cout << hello_world << std::endl;
    std::cout << hello_world.length() << std::endl;
    std::cout << hello_world[11] << std::endl;

    std::map<std::string, int> associative_array;
    std::cout << "size of upon construction associative_array: " << associative_array.size() << std::endl;
    associative_array[hello_world] = 1;
    associative_array["hello"] = 2;
    associative_array["world"] = 3;

    std::cout << "size of associative_array: " << associative_array.size() << std::endl;
    printf("associative_array[\"hello\"]=%d\n", associative_array["hello"]);

    printf("before returning....\n"); // Set break point at this line.
}
@


1.1.1.1
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@@
