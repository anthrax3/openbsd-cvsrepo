head     1.1;
branch   1.1.1;
access   ;
symbols  LLVM_5_0_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @ * @;
expand   @o@;


1.1
date     2017.10.04.20.27.41;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        ufzi3t8MqoilCPqO;

1.1.1.1
date     2017.10.04.20.27.41;  author patrick;  state Exp;
branches ;
next     ;
commitid        ufzi3t8MqoilCPqO;


desc
@@



1.1
log
@Initial revision
@
text
@#include <stdio.h>

#define INLINE inline __attribute__((always_inline))

int
func_not_inlined (void)
{
    printf ("Called func_not_inlined.\n");
    return 0;
}

INLINE int
func_inlined (void)
{
    static int func_inline_call_count = 0;
    printf ("Called func_inlined.\n");
    ++func_inline_call_count;
    printf ("Returning func_inlined call count: %d.\n", func_inline_call_count);
    return func_inline_call_count; // Set break point at this line.
}

extern int func_inlined (void);

int
main (int argc, char **argv)
{
  printf ("Starting...\n");

  int (*func_ptr) (void);
  func_ptr = func_inlined;

  int a = func_inlined();
  printf("First call to func_inlined() returns: %d.\n", a);

  func_not_inlined ();

  func_ptr ();

  printf("Last call to func_inlined() returns: %d.\n", func_inlined ());
  return 0;
}


@


1.1.1.1
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@@
