head     1.1;
branch   1.1.1;
access   ;
symbols  LLVM_5_0_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @// @;
expand   @o@;


1.1
date     2017.10.04.20.27.40;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        ufzi3t8MqoilCPqO;

1.1.1.1
date     2017.10.04.20.27.40;  author patrick;  state Exp;
branches ;
next     ;
commitid        ufzi3t8MqoilCPqO;


desc
@@



1.1
log
@Initial revision
@
text
@#import <Foundation/Foundation.h>
#import "InternalDefiner.h"

@@interface Container : NSObject {
@@public
    InternalDefiner *_definer;
}

-(id)init;
@@end

@@implementation Container

-(id)init
{
    if (self = [super init])
    {
        _definer = [[InternalDefiner alloc] initWithFoo:4 andBar:5];
    }
    return self;
}

@@end

@@interface InheritContainer : InternalDefiner 
@@property (nonatomic, strong) NSMutableArray *filteredDataSource;
-(id)init;
@@end

@@implementation InheritContainer

-(id)init
{
    if (self = [super initWithFoo:2 andBar:3])
    {
        self.filteredDataSource = [NSMutableArray arrayWithObjects:@@"hello", @@"world", nil];
    }
    return self;
}

@@end

int main(int argc, const char * argv[])
{
    @@autoreleasepool {
        Container *j = [[Container alloc] init];
        InheritContainer *k = [[InheritContainer alloc] init];

        printf("ivar value = %u\n", (unsigned)j->_definer->foo); // breakpoint1
        printf("ivar value = %u\n", (unsigned)k->foo);
    }   
    return 0;
}

@


1.1.1.1
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@@
