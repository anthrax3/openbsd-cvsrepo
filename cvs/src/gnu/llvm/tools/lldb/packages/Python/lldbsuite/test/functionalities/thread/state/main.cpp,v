head     1.1;
branch   1.1.1;
access   ;
symbols  LLVM_5_0_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @// @;
expand   @o@;


1.1
date     2017.10.04.20.27.41;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        ufzi3t8MqoilCPqO;

1.1.1.1
date     2017.10.04.20.27.41;  author patrick;  state Exp;
branches ;
next     ;
commitid        ufzi3t8MqoilCPqO;


desc
@@



1.1
log
@Initial revision
@
text
@//===-- main.cpp ------------------------------------------------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

// This test is intended to verify that thread states are properly maintained
// when transitional actions are performed in the debugger.  Most of the logic
// is in the test script.  This program merely provides places where the test
// can create the intended states.

#include <chrono>
#include <thread>

volatile int g_test = 0;

int addSomething(int a)
{
    return a + g_test;
}

int doNothing()
{
    int temp = 0;   // Set first breakpoint here

    while (!g_test && temp < 5)
    {
        ++temp;
        std::this_thread::sleep_for(std::chrono::seconds(2));
    }

    return temp;    // Set second breakpoint here
}

int main ()
{
    int result = doNothing();

    int i = addSomething(result);

    return 0;
}
@


1.1.1.1
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@@
