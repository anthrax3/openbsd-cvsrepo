head     1.1;
branch   1.1.1;
access   ;
symbols  LLVM_5_0_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @# @;
expand   @o@;


1.1
date     2017.10.04.20.27.41;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        ufzi3t8MqoilCPqO;

1.1.1.1
date     2017.10.04.20.27.41;  author patrick;  state Exp;
branches ;
next     ;
commitid        ufzi3t8MqoilCPqO;


desc
@@



1.1
log
@Initial revision
@
text
@import lldb

counter = 0


class ftsp:

    def __init__(self, valobj, dict):
        self.valobj = valobj

    def num_children(self):
        if self.char.IsValid():
            return 5
        return 0

    def get_child_index(self, name):
        return 0

    def get_child_at_index(self, index):
        if index == 0:
            return self.x.Cast(self.char)
        if index == 4:
            return self.valobj.CreateValueFromExpression(
                str(index), '(char)(' + str(self.count) + ')')
        return self.x.CreateChildAtOffset(str(index),
                                          index,
                                          self.char)

    def update(self):
        self.x = self.valobj.GetChildMemberWithName('x')
        self.char = self.valobj.GetType().GetBasicType(lldb.eBasicTypeChar)
        global counter
        self.count = counter
        counter = counter + 1
        return True  # important: if we return False here, or fail to return, the test will fail


def __lldb_init_module(debugger, dict):
    global counter
    counter = 0
@


1.1.1.1
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@@
