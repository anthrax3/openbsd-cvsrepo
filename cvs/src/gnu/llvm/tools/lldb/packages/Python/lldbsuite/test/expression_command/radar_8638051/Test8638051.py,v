head     1.1;
branch   1.1.1;
access   ;
symbols  LLVM_5_0_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @# @;
expand   @o@;


1.1
date     2017.10.04.20.27.40;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        ufzi3t8MqoilCPqO;

1.1.1.1
date     2017.10.04.20.27.40;  author patrick;  state Exp;
branches ;
next     ;
commitid        ufzi3t8MqoilCPqO;


desc
@@



1.1
log
@Initial revision
@
text
@"""
Test the robustness of lldb expression parser.
"""

from __future__ import print_function


import os
import time
import lldb
from lldbsuite.test.lldbtest import *


class Radar8638051TestCase(TestBase):

    mydir = TestBase.compute_mydir(__file__)

    def test_expr_commands(self):
        """The following expression commands should not crash."""
        self.build()

        self.runCmd("file a.out", CURRENT_EXECUTABLE_SET)

        self.runCmd("breakpoint set -n c")

        self.runCmd("run", RUN_SUCCEEDED)

        self.expect("expression val",
                    startstr="(int) $0 = 1")
        # (int) $0 = 1

        self.expect("expression *(&val)",
                    startstr="(int) $1 = 1")
        # (int) $1 = 1

        # rdar://problem/8638051
        # lldb expression command: Could this crash be avoided
        self.expect("expression &val",
                    startstr="(int *) $2 = ")
        # (int *) $2 = 0x....
@


1.1.1.1
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@@
