head     1.1;
branch   1.1.1;
access   ;
symbols  LLVM_5_0_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @# @;
expand   @o@;


1.1
date     2017.10.04.20.27.40;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        ufzi3t8MqoilCPqO;

1.1.1.1
date     2017.10.04.20.27.40;  author patrick;  state Exp;
branches ;
next     ;
commitid        ufzi3t8MqoilCPqO;


desc
@@



1.1
log
@Initial revision
@
text
@"""
Interprocess mutex based on file locks
"""

import fcntl
import os


class Lock:

    def __init__(self, filename):
        self.filename = filename
        # This will create it if it does not exist already
        unbuffered = 0
        self.handle = open(filename, 'a+', unbuffered)

    def acquire(self):
        fcntl.flock(self.handle, fcntl.LOCK_EX)

    # will throw IOError if unavailable
    def try_acquire(self):
        fcntl.flock(self.handle, fcntl.LOCK_NB | fcntl.LOCK_EX)

    def release(self):
        fcntl.flock(self.handle, fcntl.LOCK_UN)

    def __del__(self):
        self.handle.close()
@


1.1.1.1
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@@
