head	1.1;
branch	1.1.1;
access;
symbols
	LLVM_4_0_0:1.1.1.2
	LLVM_4_0_0_RC1:1.1.1.2
	LLVM_3_9_1:1.1.1.1
	LLVM_3_8_1:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.09.03.22.46.55;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	piLU3CHugy63NlaI;

1.1.1.1
date	2016.09.03.22.46.55;	author pascal;	state Exp;
branches;
next	1.1.1.2;
commitid	piLU3CHugy63NlaI;

1.1.1.2
date	2017.01.24.08.33.02;	author patrick;	state Exp;
branches;
next	;
commitid	so2WA7LCP6wbxtYl;


desc
@@


1.1
log
@Initial revision
@
text
@from clang.cindex import CursorKind
from clang.cindex import Index
from clang.cindex import SourceLocation
from clang.cindex import SourceRange
from clang.cindex import TokenKind
from nose.tools import eq_
from nose.tools import ok_

from .util import get_tu

def test_token_to_cursor():
    """Ensure we can obtain a Cursor from a Token instance."""
    tu = get_tu('int i = 5;')
    r = tu.get_extent('t.c', (0, 9))
    tokens = list(tu.get_tokens(extent=r))

    assert len(tokens) == 5
    assert tokens[1].spelling == 'i'
    assert tokens[1].kind == TokenKind.IDENTIFIER

    cursor = tokens[1].cursor
    assert cursor.kind == CursorKind.VAR_DECL
    assert tokens[1].cursor == tokens[2].cursor

def test_token_location():
    """Ensure Token.location works."""

    tu = get_tu('int foo = 10;')
    r = tu.get_extent('t.c', (0, 11))

    tokens = list(tu.get_tokens(extent=r))
    eq_(len(tokens), 4)

    loc = tokens[1].location
    ok_(isinstance(loc, SourceLocation))
    eq_(loc.line, 1)
    eq_(loc.column, 5)
    eq_(loc.offset, 4)

def test_token_extent():
    """Ensure Token.extent works."""
    tu = get_tu('int foo = 10;')
    r = tu.get_extent('t.c', (0, 11))

    tokens = list(tu.get_tokens(extent=r))
    eq_(len(tokens), 4)

    extent = tokens[1].extent
    ok_(isinstance(extent, SourceRange))

    eq_(extent.start.offset, 4)
    eq_(extent.end.offset, 7)
@


1.1.1.1
log
@Use the space freed up by sparc and zaurus to import LLVM.

ok hackroom@@
@
text
@@


1.1.1.2
log
@Import LLVM 4.0.0 rc1 including clang and lld to help the current
development effort on OpenBSD/arm64.
@
text
@d17 1
a17 1
    assert len(tokens) == 4
@

