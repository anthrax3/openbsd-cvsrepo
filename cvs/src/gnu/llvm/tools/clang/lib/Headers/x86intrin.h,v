head	1.1;
branch	1.1.1;
access;
symbols
	LLVM_5_0_0:1.1.1.3
	OPENBSD_6_2:1.1.1.2.0.2
	OPENBSD_6_2_BASE:1.1.1.2
	OPENBSD_6_1:1.1.1.2.0.4
	OPENBSD_6_1_BASE:1.1.1.2
	LLVM_4_0_0:1.1.1.2
	LLVM_4_0_0_RC1:1.1.1.2
	LLVM_3_9_1:1.1.1.2
	LLVM_3_8_1:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2016.09.03.22.46.57;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	piLU3CHugy63NlaI;

1.1.1.1
date	2016.09.03.22.46.57;	author pascal;	state Exp;
branches;
next	1.1.1.2;
commitid	piLU3CHugy63NlaI;

1.1.1.2
date	2017.01.14.19.55.50;	author patrick;	state Exp;
branches;
next	1.1.1.3;
commitid	qMUxATnKgqN83Oct;

1.1.1.3
date	2017.10.04.20.27.46;	author patrick;	state Exp;
branches;
next	;
commitid	ufzi3t8MqoilCPqO;


desc
@@


1.1
log
@Initial revision
@
text
@/*===---- x86intrin.h - X86 intrinsics -------------------------------------===
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 *===-----------------------------------------------------------------------===
 */

#ifndef __X86INTRIN_H
#define __X86INTRIN_H

#include <ia32intrin.h>

#include <immintrin.h>

#include <mm3dnow.h>

#include <bmiintrin.h>

#include <bmi2intrin.h>

#include <lzcntintrin.h>

#include <popcntintrin.h>

#include <rdseedintrin.h>

#include <prfchwintrin.h>

#include <ammintrin.h>

#include <fma4intrin.h>

#include <xopintrin.h>

#include <tbmintrin.h>

#include <f16cintrin.h>

/* FIXME: LWP */

#endif /* __X86INTRIN_H */
@


1.1.1.1
log
@Use the space freed up by sparc and zaurus to import LLVM.

ok hackroom@@
@
text
@@


1.1.1.2
log
@Import LLVM 3.9.1 including clang and lld.
@
text
@a30 1
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__3dNOW__)
a31 1
#endif
a32 1
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__BMI__)
a33 1
#endif
a34 1
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__BMI2__)
a35 1
#endif
a36 1
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__LZCNT__)
a37 1
#endif
a38 1
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__POPCNT__)
a39 1
#endif
a40 1
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__RDSEED__)
a41 1
#endif
a42 1
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__PRFCHW__)
a43 1
#endif
a44 1
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__SSE4A__)
a45 1
#endif
a46 1
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__FMA4__)
a47 1
#endif
a48 1
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__XOP__)
a49 1
#endif
a50 1
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__TBM__)
a51 1
#endif
a52 1
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__F16C__)
a53 5
#endif

#if !defined(_MSC_VER) || __has_feature(modules) || defined(__MWAITX__)
#include <mwaitxintrin.h>
#endif
@


1.1.1.3
log
@Import LLVM 5.0.0 release including clang, lld and lldb.
@
text
@a74 4
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__LWP__)
#include <lwpintrin.h>
#endif

d83 1
a83 3
#if !defined(_MSC_VER) || __has_feature(modules) || defined(__CLZERO__)
#include <clzerointrin.h>
#endif
@


