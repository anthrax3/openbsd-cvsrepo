head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.2.0.2
	OPENBSD_6_2_BASE:1.1.1.2
	OPENBSD_6_1:1.1.1.2.0.4
	OPENBSD_6_1_BASE:1.1.1.2
	LLVM_4_0_0:1.1.1.2
	LLVM_4_0_0_RC1:1.1.1.2
	LLVM_3_9_1:1.1.1.2
	LLVM_3_8_1:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2016.09.03.22.46.57;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	piLU3CHugy63NlaI;

1.1.1.1
date	2016.09.03.22.46.57;	author pascal;	state Exp;
branches;
next	1.1.1.2;
commitid	piLU3CHugy63NlaI;

1.1.1.2
date	2017.01.14.19.55.50;	author patrick;	state Exp;
branches;
next	;
commitid	qMUxATnKgqN83Oct;


desc
@@


1.1
log
@Initial revision
@
text
@/*===---- tbmintrin.h - TBM intrinsics -------------------------------------===
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 *===-----------------------------------------------------------------------===
 */

#ifndef __X86INTRIN_H
#error "Never use <tbmintrin.h> directly; include <x86intrin.h> instead."
#endif

#ifndef __TBMINTRIN_H
#define __TBMINTRIN_H

/* Define the default attributes for the functions in this file. */
#define __DEFAULT_FN_ATTRS __attribute__((__always_inline__, __nodebug__, __target__("tbm")))

#define __bextri_u32(a, b) \
  ((unsigned int)__builtin_ia32_bextri_u32((unsigned int)(a), \
                                           (unsigned int)(b)))

static __inline__ unsigned int __DEFAULT_FN_ATTRS
__blcfill_u32(unsigned int a)
{
  return a & (a + 1);
}

static __inline__ unsigned int __DEFAULT_FN_ATTRS
__blci_u32(unsigned int a)
{
  return a | ~(a + 1);
}

static __inline__ unsigned int __DEFAULT_FN_ATTRS
__blcic_u32(unsigned int a)
{
  return ~a & (a + 1);
}

static __inline__ unsigned int __DEFAULT_FN_ATTRS
__blcmsk_u32(unsigned int a)
{
  return a ^ (a + 1);
}

static __inline__ unsigned int __DEFAULT_FN_ATTRS
__blcs_u32(unsigned int a)
{
  return a | (a + 1);
}

static __inline__ unsigned int __DEFAULT_FN_ATTRS
__blsfill_u32(unsigned int a)
{
  return a | (a - 1);
}

static __inline__ unsigned int __DEFAULT_FN_ATTRS
__blsic_u32(unsigned int a)
{
  return ~a | (a - 1);
}

static __inline__ unsigned int __DEFAULT_FN_ATTRS
__t1mskc_u32(unsigned int a)
{
  return ~a | (a + 1);
}

static __inline__ unsigned int __DEFAULT_FN_ATTRS
__tzmsk_u32(unsigned int a)
{
  return ~a & (a - 1);
}

#ifdef __x86_64__
#define __bextri_u64(a, b) \
  ((unsigned long long)__builtin_ia32_bextri_u64((unsigned long long)(a), \
                                                 (unsigned long long)(b)))

static __inline__ unsigned long long __DEFAULT_FN_ATTRS
__blcfill_u64(unsigned long long a)
{
  return a & (a + 1);
}

static __inline__ unsigned long long __DEFAULT_FN_ATTRS
__blci_u64(unsigned long long a)
{
  return a | ~(a + 1);
}

static __inline__ unsigned long long __DEFAULT_FN_ATTRS
__blcic_u64(unsigned long long a)
{
  return ~a & (a + 1);
}

static __inline__ unsigned long long __DEFAULT_FN_ATTRS
__blcmsk_u64(unsigned long long a)
{
  return a ^ (a + 1);
}

static __inline__ unsigned long long __DEFAULT_FN_ATTRS
__blcs_u64(unsigned long long a)
{
  return a | (a + 1);
}

static __inline__ unsigned long long __DEFAULT_FN_ATTRS
__blsfill_u64(unsigned long long a)
{
  return a | (a - 1);
}

static __inline__ unsigned long long __DEFAULT_FN_ATTRS
__blsic_u64(unsigned long long a)
{
  return ~a | (a - 1);
}

static __inline__ unsigned long long __DEFAULT_FN_ATTRS
__t1mskc_u64(unsigned long long a)
{
  return ~a | (a + 1);
}

static __inline__ unsigned long long __DEFAULT_FN_ATTRS
__tzmsk_u64(unsigned long long a)
{
  return ~a & (a - 1);
}
#endif

#undef __DEFAULT_FN_ATTRS

#endif /* __TBMINTRIN_H */
@


1.1.1.1
log
@Use the space freed up by sparc and zaurus to import LLVM.

ok hackroom@@
@
text
@@


1.1.1.2
log
@Import LLVM 3.9.1 including clang and lld.
@
text
@d39 1
a39 1
__blcfill_u32(unsigned int __a)
d41 1
a41 1
  return __a & (__a + 1);
d45 1
a45 1
__blci_u32(unsigned int __a)
d47 1
a47 1
  return __a | ~(__a + 1);
d51 1
a51 1
__blcic_u32(unsigned int __a)
d53 1
a53 1
  return ~__a & (__a + 1);
d57 1
a57 1
__blcmsk_u32(unsigned int __a)
d59 1
a59 1
  return __a ^ (__a + 1);
d63 1
a63 1
__blcs_u32(unsigned int __a)
d65 1
a65 1
  return __a | (__a + 1);
d69 1
a69 1
__blsfill_u32(unsigned int __a)
d71 1
a71 1
  return __a | (__a - 1);
d75 1
a75 1
__blsic_u32(unsigned int __a)
d77 1
a77 1
  return ~__a | (__a - 1);
d81 1
a81 1
__t1mskc_u32(unsigned int __a)
d83 1
a83 1
  return ~__a | (__a + 1);
d87 1
a87 1
__tzmsk_u32(unsigned int __a)
d89 1
a89 1
  return ~__a & (__a - 1);
d98 1
a98 1
__blcfill_u64(unsigned long long __a)
d100 1
a100 1
  return __a & (__a + 1);
d104 1
a104 1
__blci_u64(unsigned long long __a)
d106 1
a106 1
  return __a | ~(__a + 1);
d110 1
a110 1
__blcic_u64(unsigned long long __a)
d112 1
a112 1
  return ~__a & (__a + 1);
d116 1
a116 1
__blcmsk_u64(unsigned long long __a)
d118 1
a118 1
  return __a ^ (__a + 1);
d122 1
a122 1
__blcs_u64(unsigned long long __a)
d124 1
a124 1
  return __a | (__a + 1);
d128 1
a128 1
__blsfill_u64(unsigned long long __a)
d130 1
a130 1
  return __a | (__a - 1);
d134 1
a134 1
__blsic_u64(unsigned long long __a)
d136 1
a136 1
  return ~__a | (__a - 1);
d140 1
a140 1
__t1mskc_u64(unsigned long long __a)
d142 1
a142 1
  return ~__a | (__a + 1);
d146 1
a146 1
__tzmsk_u64(unsigned long long __a)
d148 1
a148 1
  return ~__a & (__a - 1);
@

