head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	LLVM_4_0_0:1.1.1.1
	LLVM_4_0_0_RC1:1.1.1.1
	LLVM_3_9_1:1.1.1.1
	LLVM_3_8_1:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2016.09.03.22.47.00;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	piLU3CHugy63NlaI;

1.1.1.1
date	2016.09.03.22.47.00;	author pascal;	state Exp;
branches;
next	;
commitid	piLU3CHugy63NlaI;


desc
@@


1.1
log
@Initial revision
@
text
@//===-- HexagonTargetStreamer.h - Hexagon Target Streamer ------*- C++ -*--===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#ifndef HEXAGONTARGETSTREAMER_H
#define HEXAGONTARGETSTREAMER_H

#include "llvm/MC/MCStreamer.h"

namespace llvm {
class HexagonTargetStreamer : public MCTargetStreamer {
public:
  HexagonTargetStreamer(MCStreamer &S) : MCTargetStreamer(S) {}
  virtual void EmitCodeAlignment(unsigned ByteAlignment,
                                 unsigned MaxBytesToEmit = 0){};
  virtual void emitFAlign(unsigned Size, unsigned MaxBytesToEmit){};
  virtual void EmitCommonSymbolSorted(MCSymbol *Symbol, uint64_t Size,
                                      unsigned ByteAlignment,
                                      unsigned AccessGranularity){};
  virtual void EmitLocalCommonSymbolSorted(MCSymbol *Symbol, uint64_t Size,
                                           unsigned ByteAlign,
                                           unsigned AccessGranularity){};
};
}

#endif
@


1.1.1.1
log
@Use the space freed up by sparc and zaurus to import LLVM.

ok hackroom@@
@
text
@@
