head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.2.0.4
	OPENBSD_6_1_BASE:1.1.1.2
	LLVM_4_0_0:1.1.1.2
	LLVM_4_0_0_RC1:1.1.1.2
	LLVM_3_9_1:1.1.1.2
	LLVM_3_8_1:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.09.03.22.47.00;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	piLU3CHugy63NlaI;

1.1.1.1
date	2016.09.03.22.47.00;	author pascal;	state Exp;
branches;
next	1.1.1.2;
commitid	piLU3CHugy63NlaI;

1.1.1.2
date	2017.01.14.19.56.04;	author patrick;	state Exp;
branches;
next	;
commitid	qMUxATnKgqN83Oct;


desc
@@


1.1
log
@Initial revision
@
text
@//===-- R600Intrinsics.td - R600 Instrinsic defs -------*- tablegen -*-----===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// R600 Intrinsic Definitions
//
//===----------------------------------------------------------------------===//

let TargetPrefix = "R600", isTarget = 1 in {
  class TextureIntrinsicFloatInput :
    Intrinsic<[llvm_v4f32_ty], [
      llvm_v4f32_ty, // Coord
      llvm_i32_ty, // offset_x
      llvm_i32_ty, // offset_y,
      llvm_i32_ty, // offset_z,
      llvm_i32_ty, // resource_id
      llvm_i32_ty, // samplerid
      llvm_i32_ty, // coord_type_x
      llvm_i32_ty, // coord_type_y
      llvm_i32_ty, // coord_type_z
      llvm_i32_ty // coord_type_w
    ], [IntrNoMem]>;
  class TextureIntrinsicInt32Input :
    Intrinsic<[llvm_v4i32_ty], [
      llvm_v4i32_ty, // Coord
      llvm_i32_ty, // offset_x
      llvm_i32_ty, // offset_y,
      llvm_i32_ty, // offset_z,
      llvm_i32_ty, // resource_id
      llvm_i32_ty, // samplerid
      llvm_i32_ty, // coord_type_x
      llvm_i32_ty, // coord_type_y
      llvm_i32_ty, // coord_type_z
      llvm_i32_ty // coord_type_w
    ], [IntrNoMem]>;

  def int_R600_load_input :
    Intrinsic<[llvm_float_ty], [llvm_i32_ty], [IntrNoMem]>;
  def int_R600_interp_input :
    Intrinsic<[llvm_float_ty], [llvm_i32_ty, llvm_i32_ty], [IntrNoMem]>;
  def int_R600_interp_const :
    Intrinsic<[llvm_v4f32_ty], [llvm_i32_ty], [IntrNoMem]>;
def int_R600_interp_xy :
    Intrinsic<[llvm_v2f32_ty], [llvm_i32_ty, llvm_float_ty, llvm_float_ty], [IntrNoMem]>;
def int_R600_interp_zw :
    Intrinsic<[llvm_v2f32_ty], [llvm_i32_ty, llvm_float_ty, llvm_float_ty], [IntrNoMem]>;
  def int_R600_load_texbuf :
    Intrinsic<[llvm_v4f32_ty], [llvm_i32_ty, llvm_i32_ty], [IntrNoMem]>;
  def int_R600_tex : TextureIntrinsicFloatInput;
  def int_R600_texc : TextureIntrinsicFloatInput;
  def int_R600_txl : TextureIntrinsicFloatInput;
  def int_R600_txlc : TextureIntrinsicFloatInput;
  def int_R600_txb : TextureIntrinsicFloatInput;
  def int_R600_txbc : TextureIntrinsicFloatInput;
  def int_R600_txf : TextureIntrinsicInt32Input;
  def int_R600_ldptr : TextureIntrinsicInt32Input;
  def int_R600_txq : TextureIntrinsicInt32Input;
  def int_R600_ddx : TextureIntrinsicFloatInput;
  def int_R600_ddy : TextureIntrinsicFloatInput;
  def int_R600_store_swizzle :
    Intrinsic<[], [llvm_v4f32_ty, llvm_i32_ty, llvm_i32_ty], []>;
  def int_R600_store_stream_output :
    Intrinsic<[], [llvm_v4f32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty], []>;
  def int_R600_store_pixel_depth :
      Intrinsic<[], [llvm_float_ty], []>;
  def int_R600_store_pixel_stencil :
      Intrinsic<[], [llvm_float_ty], []>;
  def int_R600_store_dummy :
      Intrinsic<[], [llvm_i32_ty], []>;
}
@


1.1.1.1
log
@Use the space freed up by sparc and zaurus to import LLVM.

ok hackroom@@
@
text
@@


1.1.1.2
log
@Import LLVM 3.9.1 including clang and lld.
@
text
@d14 62
a75 54
class TextureIntrinsicFloatInput : Intrinsic<[llvm_v4f32_ty], [
  llvm_v4f32_ty, // Coord
  llvm_i32_ty,   // offset_x
  llvm_i32_ty,   // offset_y,
  llvm_i32_ty,   // offset_z,
  llvm_i32_ty,   // resource_id
  llvm_i32_ty,   // samplerid
  llvm_i32_ty,   // coord_type_x
  llvm_i32_ty,   // coord_type_y
  llvm_i32_ty,   // coord_type_z
  llvm_i32_ty],  // coord_type_w
  [IntrNoMem]
>;

class TextureIntrinsicInt32Input : Intrinsic<[llvm_v4i32_ty], [
    llvm_v4i32_ty, // Coord
    llvm_i32_ty,   // offset_x
    llvm_i32_ty,   // offset_y,
    llvm_i32_ty,   // offset_z,
    llvm_i32_ty,   // resource_id
    llvm_i32_ty,   // samplerid
    llvm_i32_ty,   // coord_type_x
    llvm_i32_ty,   // coord_type_y
    llvm_i32_ty,   // coord_type_z
    llvm_i32_ty],  // coord_type_w
    [IntrNoMem]
>;

let TargetPrefix = "r600", isTarget = 1 in {

def int_r600_store_swizzle :
  Intrinsic<[], [llvm_v4f32_ty, llvm_i32_ty, llvm_i32_ty], []
>;

def int_r600_store_stream_output : Intrinsic<
  [], [llvm_v4f32_ty, llvm_i32_ty, llvm_i32_ty, llvm_i32_ty], []
>;

def int_r600_tex : TextureIntrinsicFloatInput;
def int_r600_texc : TextureIntrinsicFloatInput;
def int_r600_txl : TextureIntrinsicFloatInput;
def int_r600_txlc : TextureIntrinsicFloatInput;
def int_r600_txb : TextureIntrinsicFloatInput;
def int_r600_txbc : TextureIntrinsicFloatInput;
def int_r600_txf : TextureIntrinsicInt32Input;
def int_r600_txq : TextureIntrinsicInt32Input;
def int_r600_ddx : TextureIntrinsicFloatInput;
def int_r600_ddy : TextureIntrinsicFloatInput;

def int_r600_dot4 : Intrinsic<[llvm_float_ty],
  [llvm_v4f32_ty, llvm_v4f32_ty], [IntrNoMem]
>;

} // End TargetPrefix = "r600", isTarget = 1
@

