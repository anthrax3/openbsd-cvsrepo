head	1.1;
branch	1.1.1;
access;
symbols
	LLVM_4_0_0:1.1.1.1
	LLVM_4_0_0_RC1:1.1.1.1
	LLVM_3_9_1:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@// @;
expand	@o@;


1.1
date	2017.01.14.19.56.06;	author patrick;	state Exp;
branches
	1.1.1.1;
next	;
commitid	qMUxATnKgqN83Oct;

1.1.1.1
date	2017.01.14.19.56.06;	author patrick;	state Exp;
branches;
next	;
commitid	qMUxATnKgqN83Oct;


desc
@@


1.1
log
@Initial revision
@
text
@//===---- PPCCCState.cpp - CCState with PowerPC specific extensions ---------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#include "PPCCCState.h"
#include "PPCSubtarget.h"
#include "llvm/IR/Module.h"
using namespace llvm;

// Identify lowered values that originated from ppcf128 arguments and record
// this.
void PPCCCState::PreAnalyzeCallOperands(
    const SmallVectorImpl<ISD::OutputArg> &Outs) {
  for (const auto &I : Outs) {
    if (I.ArgVT == llvm::MVT::ppcf128)
      OriginalArgWasPPCF128.push_back(true);
    else
      OriginalArgWasPPCF128.push_back(false);
  }
}

void PPCCCState::PreAnalyzeFormalArguments(
    const SmallVectorImpl<ISD::InputArg> &Ins) {
  for (const auto &I : Ins) {
    if (I.ArgVT == llvm::MVT::ppcf128) {
      OriginalArgWasPPCF128.push_back(true);
    } else {
      OriginalArgWasPPCF128.push_back(false);
    }
  }
}@


1.1.1.1
log
@Import LLVM 3.9.1 including clang and lld.
@
text
@@
