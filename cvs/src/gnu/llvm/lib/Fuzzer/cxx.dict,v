head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.6
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.4
	OPENBSD_6_1_BASE:1.1.1.1
	LLVM_4_0_0:1.1.1.1
	LLVM_4_0_0_RC1:1.1.1.1
	LLVM_3_9_1:1.1.1.1
	LLVM_3_8_1:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.09.03.22.47.02;	author pascal;	state Exp;
branches
	1.1.1.1;
next	;
commitid	piLU3CHugy63NlaI;

1.1.1.1
date	2016.09.03.22.47.02;	author pascal;	state Exp;
branches;
next	;
commitid	piLU3CHugy63NlaI;


desc
@@


1.1
log
@Initial revision
@
text
@"++"
"--"
"<<"
">>"
"+="
"-="
"*="
"/="
">>="
"<<="
"&="
"|="
"^="
"%="
"!="
"&&"
"||"
"=="
">="
"<="
"->"
"alignas"
"alignof"
"and"
"and_eq"
"asm"
"auto"
"bitand"
"bitor"
"bool"
"break"
"case"
"catch"
"char"
"char16_t"
"char32_t"
"class"
"compl"
"concept"
"const"
"constexpr"
"const_cast"
"continue"
"decltype"
"default"
"delete"
"do"
"double"
"dynamic_cast"
"else"
"enum"
"explicit"
"export"
"extern"
"false"
"float"
"for"
"friend"
"goto"
"if"
"inline"
"int"
"long"
"mutable"
"namespace"
"new"
"noexcept"
"not"
"not_eq"
"nullptr"
"operator"
"or"
"or_eq"
"private"
"protected"
"public"
"register"
"reinterpret_cast"
"requires"
"return"
"short"
"signed"
"sizeof"
"static"
"static_assert"
"static_cast"
"struct"
"switch"
"template"
"this"
"thread_local"
"throw"
"true"
"try"
"typedef"
"typeid"
"typename"
"union"
"unsigned"
"using"
"virtual"
"void"
"volatile"
"wchar_t"
"while"
"xor"
"xor_eq"
"if"
"elif"
"else"
"endif"
"defined"
"ifdef"
"ifndef"
"define"
"undef"
"include"
"line"
"error"
"pragma"
"override"
"final"
@


1.1.1.1
log
@Use the space freed up by sparc and zaurus to import LLVM.

ok hackroom@@
@
text
@@
