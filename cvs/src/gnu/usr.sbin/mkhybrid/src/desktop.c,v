head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.30
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.32
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.24
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.28
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.26
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.22
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.20
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.18
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.16
	OPENBSD_5_0:1.3.0.14
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.12
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.10
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.6
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.8
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.2.0.22
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.20
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.18
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.16
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.14
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.12
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.1.0.10
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2016.03.29.10.21.41;	author chl;	state Exp;
branches;
next	1.3;
commitid	PQEpB9bkA1g4U4ng;

1.3
date	2008.03.08.15.36.12;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.19.01.24.20;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2000.10.10.20.40.13;	author beck;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove unused variable

ok otto@@
@
text
@/*
**	make_desktop: create "Desktop DB" and "Desktop DF" files.
**
**	These are set up to prevent the Mac "rebuilding the desktop"
**	when the CD is inserted ???
**
**	I don't know if these files should be populated, but I've just
**	created these files in their initial states:
**
**	Desktop DB:	Initial size == volume's clump size
**			first block contents found by using od ...
**			rest of file seems to be padding
**			No resource fork
**
**	Desktop DF:	Empty
**
**	If the files already exist, then set correct type/creator/flags
**
**	James Pearson 11/8/97
**	Adapted from mkhfs routines for mkhybrid
*/

#ifdef APPLE_HYB

#include <string.h>
#include <err.h>
#include "hfs.h"

#define	DB	"Desktop DB"
#define DBFC	"DMGR"
#define DBT	"BTFL"

#define	DF	"Desktop DF"
#define DFT	"DTFL"

/* from "data.h" - libhfs routines */
void d_putw(unsigned char *, short);
void d_putl(unsigned char *, long);

extern hce_mem *hce;		/* libhfs/mkisofs extras */

int
make_desktop(hfsvol *vol, int end)
/* hfsvol  *vol;				   Mac volume */
{
	hfsfile		*hfp;			/* Mac file */
	hfsdirent	ent;			/* Mac finderinfo */
	unsigned short	clps;			/* clump size */
	unsigned short	blks;			/* blocks in a clump */
	unsigned char	*blk;			/* user data */

	/* set up default directory entries - not all these fields
	   are needed, but we'll set them up anyway ... */
	ent.rsize = 0;				/* resource size == 0 */
	strcpy(ent.creator, DBFC);		/* creator */
	strcpy(ent.type, DBT);			/* type */
	ent.crdate = ent.mddate = time(0);	/* date is now */
	ent.fdflags = HFS_FNDR_ISINVISIBLE;	/* invisible files */

	/* clear the DB file */
	blk = hce->hfs_ce + hce->hfs_ce_size*HFS_BLOCKSZ;
	blks = hce->hfs_dt_size;
	clps = blks*HFS_BLOCKSZ;

	memset(blk, 0, clps);

	/* create "Desktop DB" (if it doesn't exist) */
	if(hfs_create(vol, DB, ent.type, ent.creator) == 0)
	{
	    /* DB file size from hce_mem info */
	    /* set up "Desktop DB" data - following found by od'ing
	       the "Desktop DB" file */
	    d_putw(blk+8, 0x100);
	    d_putw(blk+10, 0x3);

	    d_putw(blk+32, 0x200);
	    d_putw(blk+34, 0x25);

	    d_putl(blk+36, blks);
	    d_putl(blk+40, blks - 1);

	    d_putw(blk+48, clps);
	    d_putw(blk+50, 0xff);

	    d_putw(blk+120, 0x20a);
	    d_putw(blk+122, 0x100);

	    d_putw(blk+248, 0x8000);

	    d_putl(blk+504, 0x1f800f8);
	    d_putl(blk+508, 0x78000e);

	    /* entries for "Desktop DB" */
	    ent.dsize = clps;			/* size = clump size */
	
	    /* open file */
	    if((hfp = hfs_open(vol, DB)) == 0)
		err(1, hfs_error);

	    /* "write" file */
	    write_fork(hfp, clps);

	    /* set DB file attributes */
	    if (hfs_fsetattr(hfp, &ent) < 0)
		err(1, hfs_error);

	    /* find the real start of the file */
	    end += hce->hfs_ce_size;

	    /* close DB file */
	    if (hfs_close(hfp, end, 0) < 0)
		err(1, hfs_error);
	}
	else
	{
	    /* if it already exists, then make sure it has the correct
	       type/creator and flags */
	    if(hfs_setattr(vol, DB, &ent) < 0)
		err(1, hfs_error);
	}

	/* setup "Desktop DF" file as an empty file */
	strcpy(ent.type, DFT);			/* type */
	ent.dsize = 0;				/* empty */

	/* create DF file (if it doesn't exist) - no need to open it */
	hfs_create(vol, DF, ent.type, ent.creator);

	/* set DB file attributes */
	if (hfs_setattr(vol, DF, &ent) < 0)
	    err(1, hfs_error);
	return 0;
}
#endif /* APPLE_HYB */ 
@


1.3
log
@more mkhybrid prototypes cleanups.
okay otto@@
@
text
@a50 1
	int		i;
@


1.2
log
@Return 0 on success, rather than falling off the end of a function prototyped
as returning int.
@
text
@d26 1
d44 1
a44 1
/* hfsvol  *vol;				/* Mac volume */
d99 1
a99 1
		perr(hfs_error);
d106 1
a106 1
		perr(hfs_error);
d113 1
a113 1
		perr(hfs_error);
d120 1
a120 1
		perr(hfs_error);
d132 1
a132 1
	    perr(hfs_error);
@


1.1
log
@mkhybrid 1.12b5.1

Note, this normally makes a "mkisofs" which is the same binary, mkisofs
from here needs to be tested out prior to replacing our existing mkisofs
with this. (currently just installs mkhybrid)
@
text
@d132 1
@

