head	1.16;
access;
symbols
	OPENBSD_5_6:1.15.0.36
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.34
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.30
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.28
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.26
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.24
	OPENBSD_5_0:1.15.0.22
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.20
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.18
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.14
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.16
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.12
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.10
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.8
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.6
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.4
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.2
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.14.0.10
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.8
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.6
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.4
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.2
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.10.0.6
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@# @;


1.16
date	2014.09.17.18.49.49;	author matthieu;	state dead;
branches;
next	1.15;
commitid	M7i5giHIoz3DMlTU;

1.15
date	2006.03.22.18.43.53;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2004.01.26.04.49.11;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2004.01.13.19.44.20;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2003.08.13.23.43.56;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.08.11.19.26.29;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.09.15.02.23.35;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.14.03.21.39;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.12.04.02.23.56;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.11.19.02.48;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.01.01.01.40;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.26.04.00.35;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.25.17.27.56;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.15.21.08.51;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.15.03.38.25;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.02.19.48.11;	author millert;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Bye.
@
text
@divert(-1)
#
# Sendmail 8 configuration file for courtesan.com.
# This machine gets a lot of mail so we use a queue-only config and:
#	sendmail_flags="-L sm-mta -bd -qp1s"
# The queue group limits and confMIN_QUEUE_AGE keep things sane
# and prevent a sendmail DoS when thousands of messages (bounces)
# come in at once.
#

divert(0)dnl
VERSIONID(`$OpenBSD: courtesan.mc,v 1.15 2006/03/22 18:43:53 millert Exp $')
OSTYPE(openbsd)
dnl
dnl First, we override some default values
define(`confTRY_NULL_MX_LIST', `True')dnl
define(`confSMTP_LOGIN_MSG', `$j spamd IP-based SPAM blocker; $d')dnl
define(`confMAX_HOP', `20')dnl
define(`confMAX_MIME_HEADER_LENGTH', `256/128')dnl
dnl
dnl Just queue incoming messages, we have a queue runner for actual delivery
define(`confDELIVERY_MODE', `q')dnl
dnl
dnl Add X-Authentication-Warning: headers and disable EXPN and VRFY
define(`confPRIVACY_FLAGS', `authwarnings,needmailhelo,noexpn,novrfy,noetrn,noverb,nobodyreturn')dnl
dnl
dnl Some broken nameservers will return SERVFAIL (a temporary failure)
dnl on T_AAAA (IPv6) lookups.
define(`confBIND_OPTS', `WorkAroundBrokenAAAA')dnl
dnl
dnl Wait at least 15 minutes before trying to redeliver a message.
define(`confMIN_QUEUE_AGE', `15m')dnl
dnl
dnl TLS certificates for encrypted mail
define(`CERT_DIR', `MAIL_SETTINGS_DIR`'certs')dnl
define(`confCACERT_PATH', `CERT_DIR')dnl
define(`confCACERT', `CERT_DIR/mycert.pem')dnl
define(`confSERVER_CERT', `CERT_DIR/mycert.pem')dnl
define(`confSERVER_KEY', `CERT_DIR/mykey.pem')dnl
define(`confCLIENT_CERT', `CERT_DIR/mycert.pem')dnl
define(`confCLIENT_KEY', `CERT_DIR/mykey.pem')dnl
dnl
dnl Next, we define the features we want
FEATURE(nouucp, `reject')dnl
FEATURE(always_add_domain)dnl
FEATURE(use_cw_file)dnl
FEATURE(redirect)dnl
dnl
dnl Don't canonify everything, just bare hosts and things from courtesan.com
FEATURE(`nocanonify', `canonify_hosts')dnl
CANONIFY_DOMAIN(`courtesan.com')dnl
dnl
dnl All mail gets stamped as being from courtesan.com
MASQUERADE_AS(courtesan.com)dnl
FEATURE(masquerade_envelope)dnl
dnl
dnl Rewrite outgoing email addresses
FEATURE(genericstable, `hash -o /etc/mail/mailnames')dnl
FEATURE(generics_entire_domain)dnl
GENERICS_DOMAIN(`courtesan.com')dnl
dnl
dnl Virtual domains
FEATURE(stickyhost)dnl
FEATURE(virtusertable)dnl
dnl
dnl Spam blocking features
FEATURE(access_db)dnl
FEATURE(blacklist_recipients)dnl
FEATURE(dnsbl, `sbl.spamhaus.org', `Spam blocked - see http://www.spamhaus.org/')dnl
FEATURE(`dnsbl', `list.dsbl.org', `"550 Email rejected due to sending server misconfiguration - see http://dsbl.org/faq-listed"')dnl
FEATURE(`dnsbl', `relays.ordb.org', `"550 Email rejected due to sending server misconfiguration - see http://www.ordb.org/faq/\#why_rejected"')dnl
dnl FEATURE(`dnsbl', `bl.spamcop.net', `"Spam blocked - see: http://spamcop.net/bl.shtml?"$&{client_addr}')dnl
dnl FEATURE(dnsbl, `ipwhois.rfc-ignorant.org',`"550 Mail from " $&{client_addr} " refused. Rejected for bad WHOIS info on IP of your SMTP server - see http://www.rfc-ignorant.org/"')dnl
dnl
dnl Simple queue group settings:
dnl	run at most 10 concurrent processes for initial submission
dnl	max of 5 queue runners, split into at most 15 recipients per envelope
define(`confMAX_QUEUE_CHILDREN', `20')dnl
define(`confMAX_RUNNERS_PER_QUEUE', `5')dnl
define(`confFAST_SPLIT', `10')dnl
QUEUE_GROUP(`mqueue', `P=/var/spool/mqueue, R=5, r=15, F=f')dnl
dnl
dnl Then, we enumerate which mailers we support
FEATURE(`no_default_msa')dnl
MAILER(local)dnl
MAILER(smtp)dnl
dnl
dnl We want to support IPv6
DAEMON_OPTIONS(`Family=inet, address=0.0.0.0, Name=MTA')dnl
DAEMON_OPTIONS(`Family=inet6, address=::, Name=MTA6, M=O')dnl
DAEMON_OPTIONS(`Family=inet, address=0.0.0.0, Port=587, Name=MSA, M=E')dnl
DAEMON_OPTIONS(`Family=inet6, address=::, Port=587, Name=MSA6, M=O, M=E')dnl
CLIENT_OPTIONS(`Family=inet6, Address=::')dnl
CLIENT_OPTIONS(`Family=inet, Address=0.0.0.0')dnl
dnl
dnl Finally, we have the local cf-style goo
LOCAL_CONFIG
#
#  Regular expression to reject:
#    * numeric-only localparts from aol.com and msn.com
#    * localparts starting with a digit from juno.com
#    * localparts longer than 20 characters from aol.com
#
Kcheckaddress regex -a@@MATCH
   ^([0-9]+<@@(aol|msn)\.com|[0-9][^<]*<@@juno\.com|.{20}[^<]+<@@aol\.com)\.?>

# Regex to catch sobig worm
#
KSobigWormMarker regex -f -aSOBIG multipart/mixed;boundary=_NextPart_000_........$

# Body regex to catch virii
# See http://web.abnormal.com/~thogard/sendmail/
#
Krv1 regex -aVirus-Detect1 (I send you this file in order to have your advice)
Krv2 regex -aVirus-Detect2 ^TVqQAAMAAAAEAAA
Krv3 regex -aVirus-Detect3 ^TVpQAAIAAAAEAA
Krv4 regex -aVirus-Detect4 ^3sSUDhYWiuS/z9goBJ
Krv5 regex -aVirus-Detect5 ^cnVuIGluI
Krv6 regex -aVirus-Detect6 attached.file.for.details
Krv7 regex -aVirus-Detect7 ^R0lGODl
Krv8 regex -aVirus-Detect8 7-bit.ASCII.encoding.and
# Collect all regex into a single sequence to be rejected
Ksv1 sequence rv1 rv2 rv3 rv4 rv5 rv6 rv7 rv8
Kbodyregex sequence sv1

#
#  Names that won't be allowed in a To: line (local-part and domains)
#
C{RejectToLocalparts}		friend you user
C{RejectToDomains}		public.com the-internet.com

LOCAL_RULESETS
#
# Header checks
#
HTo: $>CheckTo
HMessage-Id: $>CheckMessageId
HSubject: $>Check_Subject
HX-Spanska: $>Spanska
HContent-Type: $>Check_Content

#
# Melissa worm detection (done in Check_Subject)
# See http://www.cert.org/advisories/CA-99-04-Melissa-Macro-Virus.html
#
D{MPat}Important Message From
D{MMsg}This message may contain the Melissa virus; see http://www.cert.org/advisories/CA-99-04-Melissa-Macro-Virus.html

#
# ILOVEYOU worm detection (done in Check_Subject)
# See http://www.datafellows.com/v-descs/love.htm
#
D{ILPat}ILOVEYOU
D{ILMsg}This message may contain the ILOVEYOU virus; see http://www.datafellows.com/v-descs/love.htm

#
# Life stages worm detection (done in Check_Subject)
# See http://www.f-secure.com/v-descs/stages.htm
#
D{LSPat}Fw: Life stages
D{LSMsg}This message may contain the Life stages virus; see http://www.f-secure.com/v-descs/stages.htm

#
# W32/Badtrans worm detection (done in Check_Content)
# See see http://vil.nai.com/vil/virusSummary.asp?virus_k=99069
#
D{WPat1}boundary= \"====_ABC1234567890DEF_====\"
D{WPat2}boundary= \"====_ABC0987654321DEF_====\"
D{WMsg}This message may contain the W32/Badtrans@@MM virus; see http://vil.nai.com/vil/virusSummary.asp?virus_k=99069

#
# Reject mail based on regexp above
#
SLocal_check_mail
R$*				$: $>Parse0 $>3 $1
R$+				$: $(checkaddress $1 $)
R@@MATCH				$#error $: "553 Header error"

# Catch Sobig.F
SCheckContentType
R$+				$: $(SobigWormMarker $1 $)
RSOBIG				$#discard $: discard

#
# Reject some mail based on To: header
#
SCheckTo
R$={RejectToLocalparts}@@$*	$#error $: "553 Header error"
R$*@@$={RejectToDomains}		$#error $: "553 Header error"

#
# Enforce valid Message-Id to help stop spammers
#
SCheckMessageId
R< $+ @@ $+ >			$@@ OK
R$*				$#error $: 553 Header Error

#
# Happy99 worm detection
#
SSpanska
R$*				$#error $: "553 Your system is probably infected by the Happy99 worm; see http://www.symantec.com/avcenter/venc/data/happy99.worm.html"

#
# Check Subject line for worm/virus telltales
#
SCheck_Subject
R${MPat} $*			$#error $: 553 ${MMsg}
RRe: ${MPat} $*			$#error $: 553 ${MMsg}
R${ILPat}			$#error $: 553 ${ILMsg}
RRe: ${ILPat}			$#error $: 553 ${ILMsg}
R${LSPat}			$#error $: 553 ${LSMsg}
RRe: ${LSPat}			$#error $: 553 ${LSMsg}

#
# Check Content-Type header for worm/virus telltales
#
SCheck_Content
R$+ ${WPat1} $*			$#error $: 553 ${WMsg}
R$+ ${WPat2} $*			$#error $: 553 ${WMsg}
@


1.15
log
@Update to sendmail 8.13.6
@
text
@d12 1
a12 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.14 2004/01/26 04:49:11 millert Exp $')
@


1.14
log
@Make welcome banner match spamd's (is it chicken or is it fish?).
@
text
@d5 1
a5 1
#	sendmail_flags="-L sm-mta -bd -q1s"
d12 1
a12 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.13 2004/01/13 19:44:20 millert Exp $')
d110 15
@


1.13
log
@sync with reality
@
text
@d12 1
a12 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.12 2003/08/13 23:43:56 millert Exp $')
d17 1
a17 1
define(`confSMTP_LOGIN_MSG', `$m Sendmail $v/$Z/courtesan ready at $b')dnl
@


1.12
log
@Correct comments about queue runner.
@
text
@d5 1
a5 3
#	sendmail_flags="-L sm-mta -bd"
# There is a separate sendmail for queue control started as:
#	/usr/sbin/sendmail -L sm-queue -qp
d12 1
a12 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.11 2003/08/11 19:26:29 millert Exp $')
d25 1
a25 1
define(`confPRIVACY_FLAGS', `authwarnings,noexpn,novrfy')dnl
d31 2
a32 2
dnl Wait at least 27 minutes before trying to redeliver a message.
define(`confMIN_QUEUE_AGE', `27m')dnl
d107 4
d163 5
@


1.11
log
@Convert to queue groups and queuing-only config w/ a queue runner.
This keeps sendmail from DoSing my machine when thousands of messages
come in (generally mailing list bounces).
@
text
@d5 3
a7 1
#	sendmail_flags="-L sm-mta -bd -q1s"
d14 1
a14 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.10 2002/09/15 02:23:35 millert Exp $')
@


1.10
log
@update to sendmail-8.12.6
@
text
@d4 5
d12 1
a12 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.9 2002/01/14 03:21:39 millert Exp $')
d21 5
a25 4
dnl Deliver interactively so we don't end up with lots of messages
dnl waiting on a procmail lock.
define(`confDELIVERY_MODE', `interactive')dnl
define(`confSAFE_QUEUE', `Interactive')dnl
d31 3
d48 6
d56 2
d69 13
a81 4
dnl FEATURE(dnsbl, `inputs.orbz.org', `Open spam relay - see http://www.orbz.org/sender.php')dnl
dnl FEATURE(dnsbl, `rbl.maps.vix.com', `Rejected - see http://www.mail-abuse.org/rbl/')dnl
dnl FEATURE(dnsbl, `dul.maps.vix.com', `Dialup - see http://www.mail-abuse.org/dul/')dnl
dnl FEATURE(dnsbl, `relays.mail-abuse.org', `Open spam relay - see http://www.mail-abuse.org/rss/')dnl
@


1.9
log
@update to sendmail-8.12.2
@
text
@d7 1
a7 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.8 2001/12/04 02:23:56 millert Exp $')
d15 5
@


1.8
log
@sync with reality
@
text
@d7 1
a7 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.7 2001/09/11 19:02:48 millert Exp $')
d47 1
@


1.7
log
@merge in sendmail 8.12.0 with BSD Makefiles and mdoc man pages
@
text
@d7 1
a7 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.6 2001/08/01 01:01:40 millert Exp $')
d20 9
d52 3
a54 2
MAILER(local)
MAILER(smtp)
d59 4
d83 46
a130 1
HTo: $>CheckTo
a137 1
HMessage-Id: $>CheckMessageId
a141 1
LOCAL_RULESETS
d143 18
a160 1
# Reject mail based on regexp above
d162 3
a164 4
SLocal_check_mail
R$*				$: $>Parse0 $>3 $1
R$+				$: $(checkaddress $1 $)
R@@MATCH				$#error $: "553 Header error"
@


1.6
log
@update to sendmail 8.11.5
@
text
@d7 1
a7 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.5 2001/07/26 04:00:35 millert Exp $')
d15 4
@


1.5
log
@add generics_entire_domain and GENERICS_DOMAIN
@
text
@d7 1
a7 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.4 2001/07/25 17:27:56 millert Exp $')
d34 3
a36 3
FEATURE(dnsbl, `rbl.maps.vix.com', `Rejected - see http://www.mail-abuse.org/rbl/')dnl
FEATURE(dnsbl, `dul.maps.vix.com', `Dialup - see http://www.mail-abuse.org/dul/')dnl
FEATURE(dnsbl, `relays.mail-abuse.org', `Open spam relay - see http://www.mail-abuse.org/rss/')dnl
@


1.4
log
@Sync with reality:
o Use a genericstable instead of the local mailnametable hack
o Add IPv6 support.
@
text
@d7 1
a7 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.3 2001/01/15 21:08:51 millert Exp $')
d24 2
@


1.3
log
@sendmail 8.11.2 with BSD Makefiles
@
text
@d7 1
a7 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.2 2000/05/15 03:38:25 millert Exp $')
d23 1
a23 1
FEATURE(mailnametable)dnl
a34 1
dnl FEATURE(dnsbl, `relays.orbs.org', `Open spam relay - see http://www.orbs.org/')dnl
d39 4
@


1.2
log
@Update to reality
@
text
@d7 1
a7 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.1 2000/04/02 19:48:11 millert Exp $')
d24 5
@


1.1
log
@Remove sendmail's `Build' scaffolding and add real Makefiles
praliases should be in section 1, not 8
Use arc4random(3) instead of random(3)
Add some sample OpenBSD .mc files
@
text
@d6 2
a7 1
VERSIONID(`$OpenBSD: courtesan.mc,v 1.4 1996/06/10 19:09:49 millert Exp $')
d24 1
d27 4
@

