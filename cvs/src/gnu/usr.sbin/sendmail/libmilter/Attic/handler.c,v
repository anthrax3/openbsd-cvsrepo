head	1.13;
access;
symbols
	OPENBSD_5_6:1.12.0.6
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.10
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.8
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.6
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.4
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.10.0.18
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.16
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.12
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.14
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.10
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.8
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.6
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.4
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.2
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.9.0.10
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.8
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.6
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.8.0.6
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	SENDMAIL_8_12_0:1.1.1.3
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	SENDMAIL_8_11_2:1.1.1.2
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	SENDMAIL_8_10_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2014.09.17.18.49.50;	author matthieu;	state dead;
branches;
next	1.12;
commitid	M7i5giHIoz3DMlTU;

1.12
date	2014.02.07.21.24.59;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2011.05.17.15.54.23;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2007.02.04.13.17.35;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2004.06.24.03.59.25;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.03.17.31.21;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.01.01.19.59.21;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.06.03.17.25.46;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.14.03.21.40;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.01.17.18.29;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.11.19.02.49;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.15.21.09.02;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.02.19.05.58;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.02.19.05.58;	author millert;	state Exp;
branches
	1.1.1.1.4.1;
next	1.1.1.2;

1.1.1.2
date	2001.01.15.20.52.43;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2001.09.11.18.55.52;	author millert;	state Exp;
branches;
next	;

1.1.1.1.4.1
date	2001.05.31.00.28.50;	author miod;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Bye.
@
text
@/*
 *  Copyright (c) 1999-2003, 2006 Proofpoint, Inc. and its suppliers.
 *	All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 *
 */

#include <sm/gen.h>
SM_RCSID("@@(#)$Sendmail: handler.c,v 8.40 2013/11/22 20:51:36 ca Exp $")

#include "libmilter.h"

#if !_FFR_WORKERS_POOL
/*
**  HANDLE_SESSION -- Handle a connected session in its own context
**
**	Parameters:
**		ctx -- context structure
**
**	Returns:
**		MI_SUCCESS/MI_FAILURE
*/

int
mi_handle_session(ctx)
	SMFICTX_PTR ctx;
{
	int ret;

	if (ctx == NULL)
		return MI_FAILURE;
	ctx->ctx_id = (sthread_t) sthread_get_id();

	/*
	**  Detach so resources are free when the thread returns.
	**  If we ever "wait" for threads, this call must be removed.
	*/

	if (pthread_detach(ctx->ctx_id) != 0)
		ret = MI_FAILURE;
	else
		ret = mi_engine(ctx);
	mi_clr_ctx(ctx);
	ctx = NULL;
	return ret;
}
#endif /* !_FFR_WORKERS_POOL */
@


1.12
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.11
log
@Update to sendmail 8.14.5
@
text
@d2 1
a2 1
 *  Copyright (c) 1999-2003, 2006 Sendmail, Inc. and its suppliers.
d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: handler.c,v 8.39 2008/11/25 01:14:16 ca Exp $")
@


1.10
log
@Update to sendmail-8.14.0.  OK mbalmer@@
@
text
@d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: handler.c,v 8.38 2006/11/02 02:38:22 ca Exp $")
d46 1
a46 18
	if (ValidSocket(ctx->ctx_sd))
	{
		(void) closesocket(ctx->ctx_sd);
		ctx->ctx_sd = INVALID_SOCKET;
	}
	if (ctx->ctx_reply != NULL)
	{
		free(ctx->ctx_reply);
		ctx->ctx_reply = NULL;
	}
	if (ctx->ctx_privdata != NULL)
	{
		smi_log(SMI_LOG_WARN,
			"%s: private data not NULL",
			ctx->ctx_smfi->xxfi_name);
	}
	mi_clr_macros(ctx, 0);
	free(ctx);
@


1.9
log
@Update to sendmail.8.13.0
@
text
@d2 1
a2 1
 *  Copyright (c) 1999-2003 Sendmail, Inc. and its suppliers.
d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: handler.c,v 8.36 2003/09/08 21:27:14 yuri Exp $")
d16 1
a16 1

d67 1
@


1.8
log
@Update to Sendmail 8.12.8; fixes a buffer overflow in the envelope
comments processing which may allow an attacker to gain root privileges.
@
text
@d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: handler.c,v 8.30.2.4 2003/01/23 22:28:36 ca Exp $")
@


1.7
log
@update to sendmail 8.12.7
@
text
@d2 1
a2 1
 *  Copyright (c) 1999-2002 Sendmail, Inc. and its suppliers.
d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: handler.c,v 8.30.2.2 2002/12/18 23:15:35 ca Exp $")
@


1.6
log
@Update to sendmail-8.12.4
@
text
@d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: handler.c,v 8.30 2002/04/29 15:06:48 ca Exp $")
d38 2
a39 2
	**  detach so resources are free when the thread returns
	**  if we ever "wait" for threads, this call must be removed
@


1.5
log
@update to sendmail-8.12.2
@
text
@d2 1
a2 1
 *  Copyright (c) 1999-2000 Sendmail, Inc. and its suppliers.
d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: handler.c,v 8.29 2001/11/15 00:17:15 msk Exp $")
d41 1
d43 3
a45 2
		return MI_FAILURE;
	ret = mi_engine(ctx);
@


1.4
log
@Update to sendmail 8.12.1.

A potential security problem has been uncovered in 8.12.0 which might
be exploited locally by malicious users to gain access to the client
mail queue.  However, as long as the MTA accepts local connections,
the possible consequences of this potential local exploit are small.
Notice: some operating systems don't provide a way to completely drop
privileges from a set-group-ID program.  In that case sendmail refuses
to run if unsafe options are given.
@
text
@d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: handler.c,v 8.26 2001/09/11 04:04:45 gshapiro Exp $")
d46 1
a46 1
		(void) close(ctx->ctx_sd);
@


1.3
log
@merge in sendmail 8.12.0 with BSD Makefiles and mdoc man pages
@
text
@d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: handler.c,v 8.24 2000/12/29 19:45:55 gshapiro Exp $")
@


1.2
log
@sendmail 8.11.2 with BSD Makefiles
@
text
@d11 2
a12 3
#ifndef lint
static char id[] = "@@(#)$Sendmail: handler.c,v 8.19.4.3 2000/12/29 19:45:39 gshapiro Exp $";
#endif /* ! lint */
a13 1
#if _FFR_MILTER
a64 1
#endif /* _FFR_MILTER */
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
static char id[] = "@@(#)$Sendmail: handler.c,v 8.19 2000/02/11 00:12:29 ca Exp $";
d18 1
d20 1
a20 1
**  HANDLE_SESSION -- Handle a connected session in it's own context
d37 1
a37 1
	ctx->ctx_id = pthread_self();
d46 5
a50 2
	if (ctx->ctx_fd >= 0)
		(void) close(ctx->ctx_fd);
d52 1
d54 2
@


1.1.1.1
log
@stock sendmail 8.10.0 with $Id -> $Sendmail
@
text
@@


1.1.1.1.4.1
log
@Pull in patch from current:
Errata(028):
The signal handlers in sendmail contain code that is unsafe in the
context of a signal handler.  This leads to potentially serious race
conditions.  At the moment this is a theoretical attack only and can
only be exploited on the local host (if at all).
Fix(millert):
Update to sendmail 8.11.4:
8.11.4 revamps signal handling within the MTA in order to reduce
the likelihood of a race condition that can lead to heap
corruption as described in Michal Zalewski's advisory.  The
problems discussed in the advisory are not currently known to
be exploitable but we recommend upgrading to 8.11.4 in case a
method is found to exploit the signal handling race condition.
8.11.4 also fixes other bugs found since the release of 8.11.3.

See the RELEASE_NOTES file for more details.
@
text
@d12 1
a12 1
static char id[] = "@@(#)$Sendmail: handler.c,v 8.19.4.3 2000/12/29 19:45:39 gshapiro Exp $";
a17 1

d19 1
a19 1
**  HANDLE_SESSION -- Handle a connected session in its own context
d36 1
a36 1
	ctx->ctx_id = (sthread_t) sthread_get_id();
d45 2
a46 5
	if (ValidSocket(ctx->ctx_sd))
	{
		(void) close(ctx->ctx_sd);
		ctx->ctx_sd = INVALID_SOCKET;
	}
a47 1
	{
a48 2
		ctx->ctx_reply = NULL;
	}
@


1.1.1.2
log
@sendmail 8.11.2
@
text
@d12 1
a12 1
static char id[] = "@@(#)$Id: handler.c,v 8.19.4.3 2000/12/29 19:45:39 gshapiro Exp $";
a17 1

d19 1
a19 1
**  HANDLE_SESSION -- Handle a connected session in its own context
d36 1
a36 1
	ctx->ctx_id = (sthread_t) sthread_get_id();
d45 2
a46 5
	if (ValidSocket(ctx->ctx_sd))
	{
		(void) close(ctx->ctx_sd);
		ctx->ctx_sd = INVALID_SOCKET;
	}
a47 1
	{
a48 2
		ctx->ctx_reply = NULL;
	}
@


1.1.1.3
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@d11 3
a13 2
#include <sm/gen.h>
SM_RCSID("@@(#)$Sendmail: handler.c,v 8.24 2000/12/29 19:45:55 gshapiro Exp $")
d15 1
d67 1
@


