head	1.5;
access;
symbols
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.32
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.30
	OPENBSD_5_0:1.2.0.28
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.26
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.24
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.20
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.22
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.18
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.16
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.14
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.12
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.1.1.0.14
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.12
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.8
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.10
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.6
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.4
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.2
	OPENBSD_3_0_BASE:1.1.1.1
	SENDMAIL_8_12_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.5
date	2014.09.17.18.49.50;	author matthieu;	state dead;
branches;
next	1.4;
commitid	M7i5giHIoz3DMlTU;

1.4
date	2014.02.07.21.24.59;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2012.12.26.11.44.12;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.16.00.21.29;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Bye.
@
text
@/*
 * Copyright (c) 1998-2001, 2004 Proofpoint, Inc. and its suppliers.
 *	All rights reserved.
 * Copyright (c) 1983, 1995-1997 Eric P. Allman.  All rights reserved.
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 *
 *	$Sendmail: clock.h,v 1.14 2013/11/22 20:51:31 ca Exp $
 */

/*
**  CLOCK.H -- for co-ordinating timed events
*/

#ifndef _SM_CLOCK_H
# define _SM_CLOCK_H 1

# include <sm/signal.h>
# if SM_CONF_SETITIMER
#  include <sys/time.h>
# endif /* SM_CONF_SETITIMER */

/*
**  STRUCT SM_EVENT -- event queue.
**
**	Maintained in sorted order.
**
**	We store the pid of the process that set this event to insure
**	that when we fork we will not take events intended for the parent.
*/

struct sm_event
{
# if SM_CONF_SETITIMER
	struct timeval	ev_time;	/* time of the call (microseconds) */
# else /* SM_CONF_SETITIMER */
	time_t		ev_time;	/* time of the call (seconds) */
# endif /* SM_CONF_SETITIMER */
	void		(*ev_func)__P((int));
					/* function to call */
	int		ev_arg;		/* argument to ev_func */
	pid_t		ev_pid;		/* pid that set this event */
	struct sm_event	*ev_link;	/* link to next item */
};

typedef struct sm_event	SM_EVENT;

/* functions */
extern void	sm_clrevent __P((SM_EVENT *));
extern void	sm_clear_events __P((void));
extern SM_EVENT	*sm_seteventm __P((int, void(*)__P((int)), int));
extern SM_EVENT	*sm_sigsafe_seteventm __P((int, void(*)__P((int)), int));
extern SIGFUNC_DECL	sm_tick __P((int));

/*
**  SM_SETEVENT -- set an event to happen at a specific time in seconds.
**
**	Translates the seconds into milliseconds and calls sm_seteventm()
**	to get a specific event to happen in the future at a specific time.
**
**	Parameters:
**		t -- intvl until next event occurs (seconds).
**		f -- function to call on event.
**		a -- argument to func on event.
**
**	Returns:
**		result of sm_seteventm().
**
**	Side Effects:
**		Any that sm_seteventm() have.
*/

#define sm_setevent(t, f, a) sm_seteventm((int)((t) * 1000), (f), (a))
#define sm_sigsafe_setevent(t, f, a) sm_sigsafe_seteventm((int)((t) * 1000), (f), (a))

#endif /* _SM_CLOCK_H */
@


1.4
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.3
log
@Update to sendmail 8.14.6
@
text
@d2 1
a2 1
 * Copyright (c) 1998-2001, 2004 Sendmail, Inc. and its suppliers.
d12 1
a12 1
 *	$Sendmail: clock.h,v 1.13 2011/11/03 03:13:24 ca Exp $
@


1.2
log
@Update to sendmail-8.13.2
@
text
@d12 1
a12 1
 *	$Sendmail: clock.h,v 1.12 2004/08/03 19:57:21 ca Exp $
d62 1
a62 1
**	Translates the seconds into millseconds and calls sm_seteventm()
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * Copyright (c) 1998-2001 Sendmail, Inc. and its suppliers.
d12 1
a12 1
 *	$Sendmail: clock.h,v 1.11 2001/05/14 23:25:37 gshapiro Exp $
d55 2
a56 3
extern SM_EVENT	*sm_setevent __P((time_t, void(*)(), int));
extern SM_EVENT	*sm_seteventm __P((int, void(*)(), int));
extern SM_EVENT	*sm_sigsafe_seteventm __P((int, void(*)(), int));
@


1.1.1.1
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@@
