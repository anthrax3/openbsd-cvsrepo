head	1.8;
access;
symbols
	OPENBSD_5_6:1.7.0.6
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.38
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.36
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.34
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.32
	OPENBSD_5_0:1.6.0.30
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.28
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.26
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.22
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.24
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.20
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.18
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.16
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.14
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.12
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.10
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.8
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.6
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.5.0.12
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.10
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	SENDMAIL_8_12_0:1.1.1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	SENDMAIL_8_11_2:1.1.1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	SENDMAIL_8_10_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2014.09.17.18.49.50;	author matthieu;	state dead;
branches;
next	1.7;
commitid	M7i5giHIoz3DMlTU;

1.7
date	2014.02.07.21.24.59;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2004.06.24.03.59.25;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.11.19.02.49;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.01.01.01.40;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.15.21.09.02;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.07.19.20.34;	author millert;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2000.04.02.19.05.49;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.02.19.05.49;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.01.15.20.52.20;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches;
next	;

1.2.4.1
date	2001.05.31.00.28.28;	author miod;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Bye.
@
text
@/*
 * Copyright (c) 1998-2001 Proofpoint, Inc. and its suppliers.
 *	All rights reserved.
 * Copyright (c) 1983, 1995-1997 Eric P. Allman.  All rights reserved.
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 *
 *
 *	$Sendmail: sendmail.h,v 8.69 2013/11/22 20:51:30 ca Exp $
 */

/*
**  SENDMAIL.H -- Global definitions for sendmail.
*/

#include <stdio.h>
#include <sm/bitops.h>
#include <sm/io.h>
#include <sm/string.h>
#include "conf.h"

/**********************************************************************
**  Table sizes, etc....
**	There shouldn't be much need to change these....
**********************************************************************/
#ifndef MAXMAILERS
# define MAXMAILERS	25	/* maximum mailers known to system */
#endif /* ! MAXMAILERS */

/*
**  Flags passed to safefile/safedirpath.
*/

#define SFF_ANYFILE	0L		/* no special restrictions */
#define SFF_MUSTOWN	0x00000001L	/* user must own this file */
#define SFF_NOSLINK	0x00000002L	/* file cannot be a symbolic link */
#define SFF_ROOTOK	0x00000004L	/* ok for root to own this file */
#define SFF_RUNASREALUID 0x00000008L	/* if no ctladdr, run as real uid */
#define SFF_NOPATHCHECK	0x00000010L	/* don't bother checking dir path */
#define SFF_SETUIDOK	0x00000020L	/* set-user-ID files are ok */
#define SFF_CREAT	0x00000040L	/* ok to create file if necessary */
#define SFF_REGONLY	0x00000080L	/* regular files only */
#define SFF_SAFEDIRPATH	0x00000100L	/* no writable directories allowed */
#define SFF_NOHLINK	0x00000200L	/* file cannot have hard links */
#define SFF_NOWLINK	0x00000400L	/* links only in non-writable dirs */
#define SFF_NOGWFILES	0x00000800L	/* disallow world writable files */
#define SFF_NOWWFILES	0x00001000L	/* disallow group writable files */
#define SFF_OPENASROOT	0x00002000L	/* open as root instead of real user */
#define SFF_NOLOCK	0x00004000L	/* don't lock the file */
#define SFF_NOGRFILES	0x00008000L	/* disallow g readable files */
#define SFF_NOWRFILES	0x00010000L	/* disallow o readable files */
#define SFF_NOTEXCL	0x00020000L	/* creates don't need to be exclusive */
#define SFF_EXECOK	0x00040000L	/* executable files are ok (E_SM_ISEXEC) */
#define SFF_NBLOCK	0x00080000L	/* use a non-blocking lock */
#define SFF_NORFILES	(SFF_NOGRFILES|SFF_NOWRFILES)

/* pseudo-flags */
#define SFF_NOLINK	(SFF_NOHLINK|SFF_NOSLINK)

/* functions */
extern int	safefile __P((char *, UID_T, GID_T, char *, long, int, struct stat *));
extern int	safedirpath __P((char *, UID_T, GID_T, char *, long, int, int));
extern int	safeopen __P((char *, int, int, long));
extern SM_FILE_T*safefopen __P((char *, int, int, long));
extern int	dfopen __P((char *, int, int, long));
extern bool	filechanged __P((char *, int, struct stat *));

/*
**  DontBlameSendmail options
**
**	Hopefully nobody uses these.
*/

#define DBS_SAFE					0
#define DBS_ASSUMESAFECHOWN				1
#define DBS_GROUPWRITABLEDIRPATHSAFE			2
#define DBS_GROUPWRITABLEFORWARDFILESAFE		3
#define DBS_GROUPWRITABLEINCLUDEFILESAFE		4
#define DBS_GROUPWRITABLEALIASFILE			5
#define DBS_WORLDWRITABLEALIASFILE			6
#define DBS_FORWARDFILEINUNSAFEDIRPATH			7
#define DBS_MAPINUNSAFEDIRPATH				8
#define DBS_LINKEDALIASFILEINWRITABLEDIR		9
#define DBS_LINKEDCLASSFILEINWRITABLEDIR		10
#define DBS_LINKEDFORWARDFILEINWRITABLEDIR		11
#define DBS_LINKEDINCLUDEFILEINWRITABLEDIR		12
#define DBS_LINKEDMAPINWRITABLEDIR			13
#define DBS_LINKEDSERVICESWITCHFILEINWRITABLEDIR	14
#define DBS_FILEDELIVERYTOHARDLINK			15
#define DBS_FILEDELIVERYTOSYMLINK			16
#define DBS_WRITEMAPTOHARDLINK				17
#define DBS_WRITEMAPTOSYMLINK				18
#define DBS_WRITESTATSTOHARDLINK			19
#define DBS_WRITESTATSTOSYMLINK				20
#define DBS_FORWARDFILEINGROUPWRITABLEDIRPATH		21
#define DBS_INCLUDEFILEINGROUPWRITABLEDIRPATH		22
#define DBS_CLASSFILEINUNSAFEDIRPATH			23
#define DBS_ERRORHEADERINUNSAFEDIRPATH			24
#define DBS_HELPFILEINUNSAFEDIRPATH			25
#define DBS_FORWARDFILEINUNSAFEDIRPATHSAFE		26
#define DBS_INCLUDEFILEINUNSAFEDIRPATHSAFE		27
#define DBS_RUNPROGRAMINUNSAFEDIRPATH			28
#define DBS_RUNWRITABLEPROGRAM				29
#define DBS_INCLUDEFILEINUNSAFEDIRPATH			30
#define DBS_NONROOTSAFEADDR				31
#define DBS_TRUSTSTICKYBIT				32
#define DBS_DONTWARNFORWARDFILEINUNSAFEDIRPATH		33
#define DBS_INSUFFICIENTENTROPY				34
#define DBS_GROUPREADABLESASLDBFILE			35
#define DBS_GROUPWRITABLESASLDBFILE			36
#define DBS_GROUPWRITABLEFORWARDFILE			37
#define DBS_GROUPWRITABLEINCLUDEFILE			38
#define DBS_WORLDWRITABLEFORWARDFILE			39
#define DBS_WORLDWRITABLEINCLUDEFILE			40
#define DBS_GROUPREADABLEKEYFILE			41
#if _FFR_GROUPREADABLEAUTHINFOFILE
# define DBS_GROUPREADABLEAUTHINFOFILE			42
#endif /* _FFR_GROUPREADABLEAUTHINFOFILE */

/* struct defining such things */
struct dbsval
{
	char		*dbs_name;	/* name of DontBlameSendmail flag */
	unsigned char	dbs_flag;	/* numeric level */
};

/* Flags for submitmode */
#define SUBMIT_UNKNOWN	0x0000	/* unknown agent type */
#define SUBMIT_MTA	0x0001	/* act like a message transfer agent */
#define SUBMIT_MSA	0x0002	/* act like a message submission agent */

@


1.7
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.6
log
@Update to sendmail.8.13.0
@
text
@d2 1
a2 1
 * Copyright (c) 1998-2001 Sendmail, Inc. and its suppliers.
d13 1
a13 1
 *	$Sendmail: sendmail.h,v 8.68 2002/07/01 22:18:53 gshapiro Exp $
@


1.5
log
@merge in sendmail 8.12.0 with BSD Makefiles and mdoc man pages
@
text
@d13 1
a13 1
 *	$Sendmail: sendmail.h,v 8.67 2001/09/08 01:20:57 gshapiro Exp $
d58 1
@


1.4
log
@update to sendmail 8.11.5
@
text
@d2 1
a2 1
 * Copyright (c) 1998-2000 Sendmail, Inc. and its suppliers.
d13 1
a13 1
 *	$Sendmail: sendmail.h,v 8.34.4.8 2001/06/01 05:06:51 gshapiro Exp $
d20 4
a23 6
#if SFIO
# include <sfio/stdio.h>
#else /* SFIO */
# include <stdio.h>
#endif /* SFIO */
#include <string.h>
a24 3
#include "sendmail/errstring.h"
#include "sendmail/useful.h"

a34 39
**  Data structure for bit maps.
**
**	Each bit in this map can be referenced by an ascii character.
**	This is 256 possible bits, or 32 8-bit bytes.
*/

#define BITMAPBITS	256	/* number of bits in a bit map */
#define BYTEBITS	8	/* number of bits in a byte */
#define BITMAPBYTES	(BITMAPBITS / BYTEBITS)	/* number of bytes in bit map */

/* internal macros */
#define _BITWORD(bit)	((bit) / (BYTEBITS * sizeof (int)))
#define _BITBIT(bit)	((unsigned int)1 << ((bit) % (BYTEBITS * sizeof (int))))

typedef unsigned int	BITMAP256[BITMAPBYTES / sizeof (int)];

/* properly case and truncate bit */
#define bitidx(bit)		((unsigned int) (bit) & 0xff)

/* test bit number N */
#define bitnset(bit, map)	((map)[_BITWORD(bit)] & _BITBIT(bit))

/* set bit number N */
#define setbitn(bit, map)	(map)[_BITWORD(bit)] |= _BITBIT(bit)

/* clear bit number N */
#define clrbitn(bit, map)	(map)[_BITWORD(bit)] &= ~_BITBIT(bit)

/* clear an entire bit map */
#define clrbitmap(map)		memset((char *) map, '\0', BITMAPBYTES)


/*
**  Utility macros
*/

/* return number of bytes left in a buffer */
#define SPACELEFT(buf, ptr)	(sizeof buf - ((ptr) - buf))
/*
d44 1
a44 1
#define SFF_SETUIDOK	0x00000020L	/* setuid files are ok */
d67 1
d76 1
d105 1
a105 1
#define DBS_RUNPROGRAMINUNSAFEDIRPATH			28 /* Not used yet */
d112 10
a121 9
#if _FFR_UNSAFE_SASL
# define DBS_GROUPREADABLESASLFILE			35
#endif /* _FFR_UNSAFE_SASL */
#if _FFR_UNSAFE_WRITABLE_INCLUDE
# define DBS_GROUPWRITABLEFORWARDFILE			36
# define DBS_GROUPWRITABLEINCLUDEFILE			37
# define DBS_WORLDWRITABLEFORWARDFILE			38
# define DBS_WORLDWRITABLEINCLUDEFILE			39
#endif /* _FFR_UNSAFE_WRITABLE_INCLUDE */
d126 2
a127 2
	char	*dbs_name;	/* name of DontBlameSendmail flag */
	u_char	dbs_flag;	/* numeric level */
d130 4
a133 14
#if _FFR_DPRINTF
extern void	dprintf __P((const char *, ...));
extern int	dflush __P((void));
#else /* _FFR_DPRINTF */
#define dprintf		printf
#define dflush()	fflush(stdout)
#endif /* _FFR_DPRINTF */

extern int	sm_snprintf __P((char *, size_t, const char *, ...));
extern int	sm_vsnprintf __P((char *, size_t, const char *, va_list));
extern char	*quad_to_string __P((QUAD_T));

extern size_t	strlcpy __P((char *, const char *, size_t));
extern size_t	strlcat __P((char *, const char *, size_t));
@


1.3
log
@sendmail 8.11.2 with BSD Makefiles
@
text
@d13 1
a13 1
 *	$Sendmail: sendmail.h,v 8.34.4.7 2000/10/09 16:15:26 gshapiro Exp $
a110 1
extern FILE	*safefopen __P((char *, int, int, long));
@


1.2
log
@Update to sendmail-8.10.1
@
text
@d13 1
a13 1
 *	$Sendmail: sendmail.h,v 8.34 2000/03/16 22:05:28 gshapiro Exp $
d20 3
d24 1
d56 3
d154 1
d156 1
a156 1
#define DBS_GROUPREADABLESASLFILE			34
d158 6
d180 2
a181 4
#if !HASSNPRINTF
extern int	snprintf __P((char *, size_t, const char *, ...));
extern int	vsnprintf __P((char *, size_t, const char *, va_list));
#endif /* !HASSNPRINTF */
d186 1
@


1.2.4.1
log
@Pull in patch from current:
Errata(028):
The signal handlers in sendmail contain code that is unsafe in the
context of a signal handler.  This leads to potentially serious race
conditions.  At the moment this is a theoretical attack only and can
only be exploited on the local host (if at all).
Fix(millert):
Update to sendmail 8.11.4:
8.11.4 revamps signal handling within the MTA in order to reduce
the likelihood of a race condition that can lead to heap
corruption as described in Michal Zalewski's advisory.  The
problems discussed in the advisory are not currently known to
be exploitable but we recommend upgrading to 8.11.4 in case a
method is found to exploit the signal handling race condition.
8.11.4 also fixes other bugs found since the release of 8.11.3.

See the RELEASE_NOTES file for more details.
@
text
@d13 1
a13 1
 *	$Sendmail: sendmail.h,v 8.34.4.7 2000/10/09 16:15:26 gshapiro Exp $
a19 3
#if SFIO
# include <sfio/stdio.h>
#else /* SFIO */
a20 1
#endif /* SFIO */
a51 3
/* properly case and truncate bit */
#define bitidx(bit)		((unsigned int) (bit) & 0xff)

a146 1
#define DBS_INSUFFICIENTENTROPY				34
d148 1
a148 1
# define DBS_GROUPREADABLESASLFILE			35
a149 6
#if _FFR_UNSAFE_WRITABLE_INCLUDE
# define DBS_GROUPWRITABLEFORWARDFILE			36
# define DBS_GROUPWRITABLEINCLUDEFILE			37
# define DBS_WORLDWRITABLEFORWARDFILE			38
# define DBS_WORLDWRITABLEINCLUDEFILE			39
#endif /* _FFR_UNSAFE_WRITABLE_INCLUDE */
d166 4
a169 2
extern int	sm_snprintf __P((char *, size_t, const char *, ...));
extern int	sm_vsnprintf __P((char *, size_t, const char *, va_list));
a173 1

@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
 *	$Sendmail: sendmail.h,v 8.33 2000/02/17 21:30:34 ca Exp $
d89 2
d93 2
a95 6

/* flags that are actually specific to safeopen/safefopen/dfopen */
#define SFF_OPENASROOT	0x00002000L	/* open as root instead of real user */
#define SFF_NOLOCK	0x00004000L	/* don't lock the file */
#define SFF_NOTEXCL	0x00010000L	/* creates don't need to be exclusive */
#define SFF_EXECOK	0x00020000L	/* executable files are ok (E_SM_ISEXEC) */
@


1.1.1.1
log
@stock sendmail 8.10.0 with $Id -> $Sendmail
@
text
@@


1.1.1.2
log
@sendmail 8.11.2
@
text
@d13 1
a13 1
 *	$Id: sendmail.h,v 8.34.4.7 2000/10/09 16:15:26 gshapiro Exp $
a19 3
#if SFIO
# include <sfio/stdio.h>
#else /* SFIO */
a20 1
#endif /* SFIO */
a51 3
/* properly case and truncate bit */
#define bitidx(bit)		((unsigned int) (bit) & 0xff)

a88 2
#define SFF_OPENASROOT	0x00002000L	/* open as root instead of real user */
#define SFF_NOLOCK	0x00004000L	/* don't lock the file */
a90 2
#define SFF_NOTEXCL	0x00020000L	/* creates don't need to be exclusive */
#define SFF_EXECOK	0x00040000L	/* executable files are ok (E_SM_ISEXEC) */
d93 6
a148 1
#define DBS_INSUFFICIENTENTROPY				34
d150 1
a150 1
# define DBS_GROUPREADABLESASLFILE			35
a151 6
#if _FFR_UNSAFE_WRITABLE_INCLUDE
# define DBS_GROUPWRITABLEFORWARDFILE			36
# define DBS_GROUPWRITABLEINCLUDEFILE			37
# define DBS_WORLDWRITABLEFORWARDFILE			38
# define DBS_WORLDWRITABLEINCLUDEFILE			39
#endif /* _FFR_UNSAFE_WRITABLE_INCLUDE */
d168 4
a171 2
extern int	sm_snprintf __P((char *, size_t, const char *, ...));
extern int	sm_vsnprintf __P((char *, size_t, const char *, va_list));
a175 1

@


1.1.1.3
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@d2 1
a2 1
 * Copyright (c) 1998-2001 Sendmail, Inc. and its suppliers.
d13 1
a13 1
 *	$Sendmail: sendmail.h,v 8.67 2001/09/08 01:20:57 gshapiro Exp $
d20 6
a25 4
#include <stdio.h>
#include <sm/bitops.h>
#include <sm/io.h>
#include <sm/string.h>
d27 3
d40 39
d88 1
a88 1
#define SFF_SETUIDOK	0x00000020L	/* set-user-ID files are ok */
d111 1
a111 1
extern SM_FILE_T*safefopen __P((char *, int, int, long));
a119 1

d148 1
a148 1
#define DBS_RUNPROGRAMINUNSAFEDIRPATH			28
d155 9
a163 10
#define DBS_GROUPREADABLESASLDBFILE			35
#define DBS_GROUPWRITABLESASLDBFILE			36
#define DBS_GROUPWRITABLEFORWARDFILE			37
#define DBS_GROUPWRITABLEINCLUDEFILE			38
#define DBS_WORLDWRITABLEFORWARDFILE			39
#define DBS_WORLDWRITABLEINCLUDEFILE			40
#define DBS_GROUPREADABLEKEYFILE			41
#if _FFR_GROUPREADABLEAUTHINFOFILE
# define DBS_GROUPREADABLEAUTHINFOFILE			42
#endif /* _FFR_GROUPREADABLEAUTHINFOFILE */
d168 2
a169 2
	char		*dbs_name;	/* name of DontBlameSendmail flag */
	unsigned char	dbs_flag;	/* numeric level */
d172 14
a185 4
/* Flags for submitmode */
#define SUBMIT_UNKNOWN	0x0000	/* unknown agent type */
#define SUBMIT_MTA	0x0001	/* act like a message transfer agent */
#define SUBMIT_MSA	0x0002	/* act like a message submission agent */
@


