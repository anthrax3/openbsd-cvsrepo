head	1.5;
access;
symbols
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.48
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.46
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.44
	OPENBSD_5_0:1.2.0.42
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.40
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.38
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.34
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.36
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.32
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.30
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.28
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.26
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.24
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.22
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.20
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.18
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.16
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.14
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.12
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.8
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.10
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.6
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	SENDMAIL_8_12_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.5
date	2014.09.17.18.49.51;	author matthieu;	state dead;
branches;
next	1.4;
commitid	M7i5giHIoz3DMlTU;

1.4
date	2014.02.07.21.24.59;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2013.06.12.21.27.22;	author jca;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.01.17.18.29;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Bye.
@
text
@/*
 * Copyright (c) 2000-2001, 2013 Proofpoint, Inc. and its suppliers.
 *      All rights reserved.
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 */

#include <sm/gen.h>
SM_RCSID("@@(#)$Sendmail: fget.c,v 1.26 2013/11/22 20:51:42 ca Exp $")
#include <stdlib.h>
#include <string.h>
#include <sm/io.h>
#include <sm/assert.h>
#include "local.h"

/*
**  SM_IO_FGETS -- get a string from a file
**
**  Read at most n-1 characters from the given file.
**  Stop when a newline has been read, or the count ('n') runs out.
**
**	Parameters:
**		fp -- the file to read from
**		timeout -- time to complete reading the string in milliseconds
**		buf -- buffer to place read string in
**		n -- size of 'buf'
**
**	Returns:
**		success: number of characters
**		failure: -1
**		timeout: -1 and errno set to EAGAIN
**
**	Side Effects:
**		may move the file pointer
*/

int
sm_io_fgets(fp, timeout, buf, n)
	register SM_FILE_T *fp;
	int timeout;
	char *buf;
	register int n;
{
	int len, r;
	char *s;
	unsigned char *p, *t;

	SM_REQUIRE_ISA(fp, SmFileMagic);
	if (n <= 0)		/* sanity check */
		return -1;

	s = buf;
	n--;			/* leave space for NUL */
	r = 0;
	while (n > 0)
	{
		/* If the buffer is empty, refill it. */
		if ((len = fp->f_r) <= 0)
		{

			/*
			**  Timeout is only passed if we can't get the data
			**  from the buffer (which is counted as immediately).
			*/

			if (sm_refill(fp, timeout) != 0)
			{
				/* EOF/error: stop with partial or no line */
				if (s == buf)
					return -1;
				break;
			}
			len = fp->f_r;
		}
		p = fp->f_p;

		/*
		**  Scan through at most n bytes of the current buffer,
		**  looking for '\n'.  If found, copy up to and including
		**  newline, and stop.  Otherwise, copy entire chunk
		**  and loop.
		*/

		if (len > n)
			len = n;
		t = (unsigned char *) memchr((void *) p, '\n', len);
		if (t != NULL)
		{
			len = ++t - p;
			r += len;
			fp->f_r -= len;
			fp->f_p = t;
			(void) memcpy((void *) s, (void *) p, len);
			s[len] = 0;
			return r;
		}
		fp->f_r -= len;
		fp->f_p += len;
		(void) memcpy((void *) s, (void *) p, len);
		s += len;
		r += len;
		n -= len;
	}
	*s = 0;
	return r;
}
@


1.4
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.3
log
@Update to sendmail-8.14.7

Verbatim sources, with s/$Id/$Sendmail/ patches, local build system and
config tweaks kept.
tested and ok millert@@ ajacoutot@@
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001, 2013 Sendmail, Inc. and its suppliers.
d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: fget.c,v 1.25 2013/03/12 15:24:50 ca Exp $")
@


1.2
log
@Update to sendmail 8.12.1.

A potential security problem has been uncovered in 8.12.0 which might
be exploited locally by malicious users to gain access to the client
mail queue.  However, as long as the MTA accepts local connections,
the possible consequences of this potential local exploit are small.
Notice: some operating systems don't provide a way to completely drop
privileges from a set-group-ID program.  In that case sendmail refuses
to run if unsafe options are given.
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001 Sendmail, Inc. and its suppliers.
d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: fget.c,v 1.24 2001/09/11 04:04:48 gshapiro Exp $")
d36 3
a38 3
**		success: returns value of 'buf'
**		failure: NULL (no characters were read)
**		timeout: NULL and errno set to EAGAIN
d44 1
a44 1
char *
d51 3
a53 3
	register int len;
	register char *s;
	register unsigned char *p, *t;
d57 1
a57 1
		return NULL;
d61 1
d77 1
a77 1
					return NULL;
d97 1
d102 1
a102 1
			return buf;
d108 1
d112 1
a112 1
	return buf;
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: fget.c,v 1.22 2001/08/27 18:54:14 gshapiro Exp $")
@


1.1.1.1
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@@
