head	1.5;
access;
symbols
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.30
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.28
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.26
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.24
	OPENBSD_5_0:1.3.0.22
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.20
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.18
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.14
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.16
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.12
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.10
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.8
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.6
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.2.0.20
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.18
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.16
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.14
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.12
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.8
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.10
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.6
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	SENDMAIL_8_12_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.5
date	2014.09.17.18.49.51;	author matthieu;	state dead;
branches;
next	1.4;
commitid	M7i5giHIoz3DMlTU;

1.4
date	2014.02.07.21.24.59;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.22.18.43.54;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.01.17.18.29;	author millert;	state Exp;
branches
	1.2.16.1
	1.2.18.1
	1.2.20.1;
next	1.1;

1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches;
next	;

1.2.16.1
date	2006.03.24.05.42.48;	author brad;	state Exp;
branches;
next	;

1.2.18.1
date	2006.03.24.05.56.17;	author brad;	state Exp;
branches;
next	;

1.2.20.1
date	2006.03.25.01.49.37;	author brad;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Bye.
@
text
@/*
 * Copyright (c) 2000-2001, 2005, 2006 Proofpoint, Inc. and its suppliers.
 *      All rights reserved.
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 */

#include <sm/gen.h>
SM_RCSID("@@(#)$Sendmail: fflush.c,v 1.46 2013/11/22 20:51:42 ca Exp $")
#include <unistd.h>
#include <errno.h>
#include <sm/time.h>
#include <signal.h>
#include <fcntl.h>
#include <string.h>
#include <sm/io.h>
#include <sm/assert.h>
#include <sm/setjmp.h>
#include "local.h"
#include <sm/conf.h>

/*
**  SM_IO_FLUSH -- flush the buffer for a 'fp' to the "file"
**
**  Flush a single file. We don't allow this function to flush
**  all open files when fp==NULL any longer.
**
**	Parameters:
**		fp -- the file pointer buffer to flush
**		timeout -- time to complete the flush
**
**	Results:
**		Failure: SM_IO_EOF and sets errno
**		Success: 0 (zero)
*/

int
sm_io_flush(fp, timeout)
	register SM_FILE_T *fp;
	int SM_NONVOLATILE timeout;
{
	int fd;
	struct timeval to;

	SM_REQUIRE_ISA(fp, SmFileMagic);

	if ((fp->f_flags & (SMWR | SMRW)) == 0)
	{
		/*
		**  The file is not opened for writing, so it cannot be flushed
		**  (writable means SMWR [write] or SMRW [read/write].
		*/

		errno = EBADF;
		return SM_IO_EOF;
	}

	SM_CONVERT_TIME(fp, fd, timeout, &to);

	/* Now do the flush */
	return sm_flush(fp, (int *) &timeout);
}

/*
**  SM_FLUSH -- perform the actual flush
**
**  Assumes that 'fp' has been validated before this function called.
**
**	Parameters:
**		fp -- file pointer to be flushed
**		timeout -- max time allowed for flush (milliseconds)
**
**	Results:
**		Success: 0 (zero)
**		Failure: SM_IO_EOF and errno set
**
**	Side Effects:
**		timeout will get updated with the time remaining (if any)
*/

int
sm_flush(fp, timeout)
	register SM_FILE_T *fp;
	int *timeout;
{
	register unsigned char *p;
	register int n, t;
	int fd;

	SM_REQUIRE_ISA(fp, SmFileMagic);

	t = fp->f_flags;
	if ((t & SMWR) == 0)
		return 0;

	if (t & SMSTR)
	{
		*fp->f_p = '\0';
		return 0;
	}

	if ((p = fp->f_bf.smb_base) == NULL)
		return 0;

	n = fp->f_p - p;		/* write this much */

	if ((fd = sm_io_getinfo(fp, SM_IO_WHAT_FD, NULL)) == -1)
	{
		/* can't get an fd, likely internal 'fake' fp */
		errno = 0;
		fd = -1;
	}

	/*
	**  Set these immediately to avoid problems with longjmp and to allow
	**  exchange buffering (via setvbuf) in user write function.
	*/

	fp->f_p = p;
	fp->f_w = t & (SMLBF|SMNBF) ? 0 : fp->f_bf.smb_size; /* implies SMFBF */

	for (; n > 0; n -= t, p += t)
	{
		errno = 0; /* needed to ensure EOF correctly found */

		/* Call the file type's write function */
		t = (*fp->f_write)(fp, (char *)p, n);
		if (t <= 0)
		{
			if (t == 0 && errno == 0)
				break; /* EOF found */

			if (IS_IO_ERROR(fd, t, *timeout))
			{
				fp->f_flags |= SMERR;

				/* errno set by fp->f_write */
				return SM_IO_EOF;
			}
			SM_IO_WR_TIMEOUT(fp, fd, *timeout);
			t = 0;
		}
	}
	return 0;
}
@


1.4
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.3
log
@Update to sendmail 8.13.6
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001, 2005, 2006 Sendmail, Inc. and its suppliers.
d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: fflush.c,v 1.45 2006/03/03 22:25:00 ca Exp $")
@


1.2
log
@Update to sendmail 8.12.1.

A potential security problem has been uncovered in 8.12.0 which might
be exploited locally by malicious users to gain access to the client
mail queue.  However, as long as the MTA accepts local connections,
the possible consequences of this potential local exploit are small.
Notice: some operating systems don't provide a way to completely drop
privileges from a set-group-ID program.  In that case sendmail refuses
to run if unsafe options are given.
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001 Sendmail, Inc. and its suppliers.
d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: fflush.c,v 1.43 2001/09/11 04:04:48 gshapiro Exp $")
d19 1
a19 1
#include <sys/time.h>
d148 1
@


1.2.20.1
log
@Apply the patch for the async signals race condition in Sendmail.
@
text
@a147 1
			t = 0;
@


1.2.18.1
log
@Apply the patch for the async signals race condition in Sendmail.
@
text
@a147 1
			t = 0;
@


1.2.16.1
log
@Apply the patch for the async signals race condition in Sendmail.
@
text
@a147 1
			t = 0;
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: fflush.c,v 1.41 2001/05/15 16:55:27 ca Exp $")
@


1.1.1.1
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@@
