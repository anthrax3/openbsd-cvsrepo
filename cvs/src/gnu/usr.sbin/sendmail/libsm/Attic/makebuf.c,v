head	1.5;
access;
symbols
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.48
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.46
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.44
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.42
	OPENBSD_5_0:1.3.0.40
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.38
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.36
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.32
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.34
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.30
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.28
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.26
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.24
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.22
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.20
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.18
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.16
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.14
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.6
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.8
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	SENDMAIL_8_12_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.5
date	2014.09.17.18.49.51;	author matthieu;	state dead;
branches;
next	1.4;
commitid	M7i5giHIoz3DMlTU;

1.4
date	2014.02.07.21.24.59;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.14.03.21.40;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.01.17.18.29;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Bye.
@
text
@/*
 * Copyright (c) 2000-2001 Proofpoint, Inc. and its suppliers.
 *      All rights reserved.
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 */

#include <sm/gen.h>
SM_RCSID("@@(#)$Sendmail: makebuf.c,v 1.27 2013/11/22 20:51:43 ca Exp $")
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <sm/io.h>
#include <sm/heap.h>
#include <sm/conf.h>
#include "local.h"

/*
**  SM_MAKEBUF -- make a buffer for the file
**
**	Parameters:
**		fp -- the file to be buffered
**
**	Returns:
**		nothing
**
**	Allocate a file buffer, or switch to unbuffered I/O.
**	By default tty devices default to line buffered.
*/

void
sm_makebuf(fp)
	register SM_FILE_T *fp;
{
	register void *p;
	register int flags;
	size_t size;
	int couldbetty;

	if (fp->f_flags & SMNBF)
	{
		fp->f_bf.smb_base = fp->f_p = fp->f_nbuf;
		fp->f_bf.smb_size = 1;
		return;
	}
	flags = sm_whatbuf(fp, &size, &couldbetty);
	if ((p = sm_malloc(size)) == NULL)
	{
		fp->f_flags |= SMNBF;
		fp->f_bf.smb_base = fp->f_p = fp->f_nbuf;
		fp->f_bf.smb_size = 1;
		return;
	}
	if (!Sm_IO_DidInit)
		sm_init();
	flags |= SMMBF;
	fp->f_bf.smb_base = fp->f_p = p;
	fp->f_bf.smb_size = size;
	if (couldbetty && isatty(fp->f_file))
		flags |= SMLBF;
	fp->f_flags |= flags;
}

/*
**  SM_WHATBUF -- determine proper buffer for a file (internal)
**
**  Plus it fills in 'bufsize' for recommended buffer size and
**  fills in flag to indicate if 'fp' could be a tty (nothing
**  to do with "betty" :-) ).
**
**	Parameters:
**		fp -- file pointer to be buffered
**		bufsize -- new buffer size (a return)
**		couldbetty -- could be a tty (returns)
**
**	Returns:
**		Success:
**		on error:
**			SMNPT -- not seek opimized
**			SMOPT -- seek opimized
*/

int
sm_whatbuf(fp, bufsize, couldbetty)
	register SM_FILE_T *fp;
	size_t *bufsize;
	int *couldbetty;
{
	struct stat st;

	if (fp->f_file < 0 || fstat(fp->f_file, &st) < 0)
	{
		*couldbetty = 0;
		*bufsize = SM_IO_BUFSIZ;
		return SMNPT;
	}

	/* could be a tty iff it is a character device */
	*couldbetty = S_ISCHR(st.st_mode);
	if (st.st_blksize == 0)
	{
		*bufsize = SM_IO_BUFSIZ;
		return SMNPT;
	}

#if SM_IO_MAX_BUF_FILE > 0
	if (S_ISREG(st.st_mode) && st.st_blksize > SM_IO_MAX_BUF_FILE)
		st.st_blksize = SM_IO_MAX_BUF_FILE;
#endif /* SM_IO_MAX_BUF_FILE > 0 */

#if SM_IO_MAX_BUF > 0 || SM_IO_MIN_BUF > 0
	if (!S_ISREG(st.st_mode))
	{
# if SM_IO_MAX_BUF > 0
		if (st.st_blksize > SM_IO_MAX_BUF)
			st.st_blksize = SM_IO_MAX_BUF;
#  if SM_IO_MIN_BUF > 0
		else
#  endif /* SM_IO_MIN_BUF > 0 */
# endif /* SM_IO_MAX_BUF > 0 */
# if SM_IO_MIN_BUF > 0
		if (st.st_blksize < SM_IO_MIN_BUF)
			st.st_blksize = SM_IO_MIN_BUF;
# endif /* SM_IO_MIN_BUF > 0 */
	}
#endif /* SM_IO_MAX_BUF > 0 || SM_IO_MIN_BUF > 0 */

	/*
	**  Optimise fseek() only if it is a regular file.  (The test for
	**  sm_std_seek is mainly paranoia.)  It is safe to set _blksize
	**  unconditionally; it will only be used if SMOPT is also set.
	*/

	if ((fp->f_flags & SMSTR) == 0)
	{
		*bufsize = st.st_blksize;
		fp->f_blksize = st.st_blksize;
	}
	else
		*bufsize = SM_IO_BUFSIZ;
	if ((st.st_mode & S_IFMT) == S_IFREG &&
	    fp->f_seek == sm_stdseek)
		return SMOPT;
	else
		return SMNPT;
}
@


1.4
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.3
log
@update to sendmail-8.12.2
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001 Sendmail, Inc. and its suppliers.
d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: makebuf.c,v 1.26 2001/10/31 16:04:08 ca Exp $")
@


1.2
log
@Update to sendmail 8.12.1.

A potential security problem has been uncovered in 8.12.0 which might
be exploited locally by malicious users to gain access to the client
mail queue.  However, as long as the MTA accepts local connections,
the possible consequences of this potential local exploit are small.
Notice: some operating systems don't provide a way to completely drop
privileges from a set-group-ID program.  In that case sendmail refuses
to run if unsafe options are given.
@
text
@d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: makebuf.c,v 1.23 2001/09/11 04:04:48 gshapiro Exp $")
d113 22
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: makebuf.c,v 1.21 2001/08/27 13:03:48 ca Exp $")
@


1.1.1.1
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@@
