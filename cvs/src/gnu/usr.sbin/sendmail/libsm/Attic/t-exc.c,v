head	1.4;
access;
symbols
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.50
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.48
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.46
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.44
	OPENBSD_5_0:1.2.0.42
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.40
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.38
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.34
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.36
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.32
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.30
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.28
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.26
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.24
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.22
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.20
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.18
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.16
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.14
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.12
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.8
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.10
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.6
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	SENDMAIL_8_12_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.4
date	2014.09.17.18.49.51;	author matthieu;	state dead;
branches;
next	1.3;
commitid	M7i5giHIoz3DMlTU;

1.3
date	2014.02.07.21.24.59;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.01.17.18.29;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Bye.
@
text
@/*
 * Copyright (c) 2000-2001 Proofpoint, Inc. and its suppliers.
 *	All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 */

#include <sm/gen.h>
SM_IDSTR(id, "@@(#)$Sendmail: t-exc.c,v 1.21 2013/11/22 20:51:43 ca Exp $")

#include <string.h>
#include <sm/heap.h>
#include <sm/io.h>
#include <sm/test.h>

const SM_EXC_TYPE_T EtypeTest1 =
{
	SmExcTypeMagic,
	"E:test1",
	"i",
	sm_etype_printf,
	"test1 exception argv[0]=%0",
};

const SM_EXC_TYPE_T EtypeTest2 =
{
	SmExcTypeMagic,
	"E:test2",
	"i",
	sm_etype_printf,
	"test2 exception argv[0]=%0",
};

int
main(argc, argv)
	int argc;
	char **argv;
{
	void *p;
	int volatile x;
	char *unknown, *cant;

	sm_test_begin(argc, argv, "test exception handling");

	/*
	**  SM_TRY
	*/

	cant = "can't happen";
	x = 0;
	SM_TRY
		x = 1;
	SM_END_TRY
	SM_TEST(x == 1);

	/*
	**  SM_FINALLY-0
	*/

	x = 0;
	SM_TRY
		x = 1;
	SM_FINALLY
		x = 2;
	SM_END_TRY
	SM_TEST(x == 2);

	/*
	**  SM_FINALLY-1
	*/

	x = 0;
	SM_TRY
		SM_TRY
			x = 1;
			sm_exc_raisenew_x(&EtypeTest1, 17);
		SM_FINALLY
			x = 2;
			sm_exc_raisenew_x(&EtypeTest2, 42);
		SM_END_TRY
	SM_EXCEPT(exc, "E:test2")
		(void) sm_io_fprintf(smioout, SM_TIME_DEFAULT,
			 "got exception test2: can't happen\n");
	SM_EXCEPT(exc, "E:test1")
		SM_TEST(x == 2 && exc->exc_argv[0].v_int == 17);
		if (!(x == 2 && exc->exc_argv[0].v_int == 17))
		{
			(void) sm_io_fprintf(smioout, SM_TIME_DEFAULT,
				"can't happen: x=%d argv[0]=%d\n",
				x, exc->exc_argv[0].v_int);
		}
	SM_EXCEPT(exc, "*")
	{
		unknown = "unknown exception: ";
		SM_TEST(strcmp(unknown, cant) == 0);
	}
	SM_END_TRY

	x = 3;
	SM_TRY
		x = 4;
		sm_exc_raisenew_x(&EtypeTest1, 94);
	SM_FINALLY
		x = 5;
		sm_exc_raisenew_x(&EtypeTest2, 95);
	SM_EXCEPT(exc, "E:test2")
	{
		unknown = "got exception test2: ";
		SM_TEST(strcmp(unknown, cant) == 0);
	}
	SM_EXCEPT(exc, "E:test1")
		SM_TEST(x == 5 && exc->exc_argv[0].v_int == 94);
		if (!(x == 5 && exc->exc_argv[0].v_int == 94))
		{
			(void) sm_io_fprintf(smioout, SM_TIME_DEFAULT,
				"can't happen: x=%d argv[0]=%d\n",
				x, exc->exc_argv[0].v_int);
		}
	SM_EXCEPT(exc, "*")
	{
		unknown = "unknown exception: ";
		SM_TEST(strcmp(unknown, cant) == 0);
	}
	SM_END_TRY

	SM_TRY
		sm_exc_raisenew_x(&SmEtypeErr, "test %d", 0);
	SM_EXCEPT(exc, "*")
#if DEBUG
		(void) sm_io_fprintf(smioout, SM_TIME_DEFAULT,
			"test 0 got an exception, as expected:\n");
		sm_exc_print(exc, smioout);
#endif /* DEBUG */
		return sm_test_end();
	SM_END_TRY

	p = sm_malloc_x((size_t)(-1));
	(void) sm_io_fprintf(smioout, SM_TIME_DEFAULT,
		"sm_malloc_x unexpectedly succeeded, returning %p\n", p);
	unknown = "sm_malloc_x unexpectedly succeeded";
	SM_TEST(strcmp(unknown, cant) == 0);
	return sm_test_end();
}
@


1.3
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.2
log
@Update to sendmail 8.12.1.

A potential security problem has been uncovered in 8.12.0 which might
be exploited locally by malicious users to gain access to the client
mail queue.  However, as long as the MTA accepts local connections,
the possible consequences of this potential local exploit are small.
Notice: some operating systems don't provide a way to completely drop
privileges from a set-group-ID program.  In that case sendmail refuses
to run if unsafe options are given.
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001 Sendmail, Inc. and its suppliers.
d11 1
a11 1
SM_IDSTR(id, "@@(#)$Sendmail: t-exc.c,v 1.20 2001/09/11 04:04:49 gshapiro Exp $")
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
SM_IDSTR(id, "@@(#)$Sendmail: t-exc.c,v 1.18 2001/07/05 22:46:35 gshapiro Exp $")
@


1.1.1.1
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@@
