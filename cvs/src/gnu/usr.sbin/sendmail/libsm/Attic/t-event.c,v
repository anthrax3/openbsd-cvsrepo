head	1.8;
access;
symbols
	OPENBSD_5_6:1.7.0.6
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.30
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.28
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.26
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.24
	OPENBSD_5_0:1.6.0.22
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.20
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.18
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.14
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.16
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.12
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.10
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.8
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.6
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.4
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.4.0.10
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.8
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	SENDMAIL_8_12_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.8
date	2014.09.17.18.49.51;	author matthieu;	state dead;
branches;
next	1.7;
commitid	M7i5giHIoz3DMlTU;

1.7
date	2014.02.07.21.24.59;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.22.18.43.54;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2004.12.16.00.21.30;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.03.17.25.46;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.18.00.49.27;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.01.17.18.29;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Bye.
@
text
@/*
 * Copyright (c) 2001-2002, 2004 Proofpoint, Inc. and its suppliers.
 *      All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 */

#include <sm/gen.h>
SM_RCSID("@@(#)$Sendmail: t-event.c,v 1.14 2013/11/22 20:51:43 ca Exp $")

#include <stdio.h>

#include <stdlib.h>
#include <unistd.h>
# include <sys/wait.h>
#if SM_CONF_SETITIMER
# include <sm/time.h>
#endif /* SM_CONF_SETITIMER */

#include <sm/clock.h>
#include <sm/test.h>

static void	evcheck __P((int));
static void	ev1 __P((int));

static int check;

static void
evcheck(arg)
	int arg;
{
	SM_TEST(arg == 3);
	SM_TEST(check == 0);
	check++;
}

static void
ev1(arg)
	int arg;
{
	SM_TEST(arg == 1);
}

/* define as x if you want debug output */
#define DBG_OUT(x)

int
main(argc, argv)
	int argc;
	char *argv[];
{
	SM_EVENT *ev;

	sm_test_begin(argc, argv, "test event handling");
	fprintf(stdout, "This test may hang. If there is no output within twelve seconds, abort it\nand recompile with -DSM_CONF_SETITIMER=%d\n",
		SM_CONF_SETITIMER == 0 ? 1 : 0);
	sleep(1);
	SM_TEST(1 == 1);
	DBG_OUT(fprintf(stdout, "We're back, test 1 seems to work.\n"));
	ev = sm_seteventm(1000, ev1, 1);
	sleep(1);
	SM_TEST(2 == 2);
	DBG_OUT(fprintf(stdout, "We're back, test 2 seems to work.\n"));

	/* schedule an event in 9s */
	ev = sm_seteventm(9000, ev1, 2);
	sleep(1);

	/* clear the event before it can fire */
	sm_clrevent(ev);
	SM_TEST(3 == 3);
	DBG_OUT(fprintf(stdout, "We're back, test 3 seems to work.\n"));

	/* schedule an event in 1s */
	check = 0;
	ev = sm_seteventm(1000, evcheck, 3);
	sleep(2);

	/* clear the event */
	sm_clrevent(ev);
	SM_TEST(4 == 4);
	SM_TEST(check == 1);
	DBG_OUT(fprintf(stdout, "We're back, test 4 seems to work.\n"));

	return sm_test_end();
}
@


1.7
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.6
log
@Update to sendmail 8.13.6
@
text
@d2 1
a2 1
 * Copyright (c) 2001-2002, 2004 Sendmail, Inc. and its suppliers.
d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: t-event.c,v 1.13 2005/06/14 23:07:20 ca Exp $")
@


1.5
log
@Update to sendmail-8.13.2
@
text
@d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: t-event.c,v 1.12 2004/08/03 20:50:32 ca Exp $")
d19 1
a19 1
# include <sys/time.h>
@


1.4
log
@Update to sendmail-8.12.4
@
text
@d2 1
a2 1
 * Copyright (c) 2001-2002 Sendmail, Inc. and its suppliers.
d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: t-event.c,v 1.11 2002/04/25 01:50:25 ca Exp $")
d25 2
a26 1
int check;
d28 3
a30 1
void
d39 1
a39 1
void
@


1.3
log
@update to sendmail 8.12.3
@
text
@d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: t-event.c,v 1.9 2002/03/19 00:26:21 ca Exp $")
@


1.2
log
@Update to sendmail 8.12.1.

A potential security problem has been uncovered in 8.12.0 which might
be exploited locally by malicious users to gain access to the client
mail queue.  However, as long as the MTA accepts local connections,
the possible consequences of this potential local exploit are small.
Notice: some operating systems don't provide a way to completely drop
privileges from a set-group-ID program.  In that case sendmail refuses
to run if unsafe options are given.
@
text
@d2 1
a2 1
 * Copyright (c) 2001 Sendmail, Inc. and its suppliers.
d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: t-event.c,v 1.7 2001/09/11 04:04:49 gshapiro Exp $")
d17 1
a17 1
#include <sys/wait.h>
d54 1
a54 1
	fprintf(stdout, "this test may hang. If there is no output within twelve seconds, abort it\nand recompile with -DSM_CONF_SETITIMER=%d\n",
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: t-event.c,v 1.5 2001/09/05 20:02:02 gshapiro Exp $")
@


1.1.1.1
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@@
