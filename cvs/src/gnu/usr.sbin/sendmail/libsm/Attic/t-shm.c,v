head	1.8;
access;
symbols
	OPENBSD_5_6:1.7.0.6
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.34
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.32
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.30
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.28
	OPENBSD_5_0:1.6.0.26
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.24
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.22
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.18
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.20
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.16
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.14
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.12
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.10
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.8
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.6
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.4
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.2
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.3.0.8
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	SENDMAIL_8_12_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.8
date	2014.09.17.18.49.51;	author matthieu;	state dead;
branches;
next	1.7;
commitid	M7i5giHIoz3DMlTU;

1.7
date	2014.02.07.21.25.00;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2005.04.08.16.00.50;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2004.12.16.00.21.30;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2004.06.24.03.59.26;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.18.00.49.27;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.01.17.18.29;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Bye.
@
text
@/*
 * Copyright (c) 2000-2002, 2004, 2005 Proofpoint, Inc. and its suppliers.
 *      All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 */

#include <sm/gen.h>
SM_RCSID("@@(#)$Sendmail: t-shm.c,v 1.23 2013/11/22 20:51:43 ca Exp $")

#include <stdio.h>

#if SM_CONF_SHM
# include <stdlib.h>
# include <unistd.h>
# include <sys/wait.h>

# include <sm/heap.h>
# include <sm/string.h>
# include <sm/test.h>
# include <sm/shm.h>

# define SHMSIZE	1024
# define SHM_MAX	6400000
# define T_SHMKEY	21


/*
**  SHMINTER -- interactive testing of shared memory
**
**	Parameters:
**		owner -- create segment.
**
**	Returns:
**		0 on success
**		< 0 on failure.
*/

int shminter __P((bool));

int
shminter(owner)
	bool owner;
{
	int *shm, shmid;
	int i, t;

	shm = (int *) sm_shmstart(T_SHMKEY, SHMSIZE, 0, &shmid, owner);
	if (shm == (int *) 0)
	{
		perror("shminit failed");
		return -1;
	}

	while ((t = getchar()) != EOF)
	{
		switch (t)
		{
		  case 'c':
			*shm = 0;
			break;
		  case 'i':
			++*shm;
			break;
		  case 'd':
			--*shm;
			break;
		  case 's':
			sleep(1);
			break;
		  case 'l':
			t = *shm;
			for (i = 0; i < SHM_MAX; i++)
			{
				++*shm;
			}
			if (*shm != SHM_MAX + t)
				fprintf(stderr, "error: %d != %d\n",
					*shm, SHM_MAX + t);
			break;
		  case 'v':
			printf("shmval: %d\n", *shm);
			break;
		  case 'S':
			i = sm_shmsetowner(shmid, getuid(), getgid(), 0644);
			printf("sm_shmsetowner=%d\n", i);
			break;
		}
	}
	return sm_shmstop((void *) shm, shmid, owner);
}


/*
**  SHMBIG -- testing of shared memory
**
**	Parameters:
**		owner -- create segment.
**		size -- size of segment.
**
**	Returns:
**		0 on success
**		< 0 on failure.
*/

int shmbig __P((bool, int));

int
shmbig(owner, size)
	bool owner;
	int size;
{
	int *shm, shmid;
	int i;

	shm = (int *) sm_shmstart(T_SHMKEY, size, 0, &shmid, owner);
	if (shm == (int *) 0)
	{
		perror("shminit failed");
		return -1;
	}

	for (i = 0; i < size / sizeof(int); i++)
		shm[i] = i;
	for (i = 0; i < size / sizeof(int); i++)
	{
		if (shm[i] != i)
		{
			fprintf(stderr, "failed at %d: %d", i, shm[i]);
		}
	}

	return sm_shmstop((void *) shm, shmid, owner);
}


/*
**  SHMTEST -- test of shared memory
**
**	Parameters:
**		owner -- create segment.
**
**	Returns:
**		0 on success
**		< 0 on failure.
*/

# define MAX_CNT	10

int shmtest __P((int));

int
shmtest(owner)
	int owner;
{
	int *shm, shmid;
	int cnt = 0;

	shm = (int *) sm_shmstart(T_SHMKEY, SHMSIZE, 0, &shmid, owner);
	if (shm == (int *) 0)
	{
		perror("shminit failed");
		return -1;
	}

	if (owner)
	{
		int r;

		r = sm_shmsetowner(shmid, getuid(), getgid(), 0660);
		SM_TEST(r == 0);
		*shm = 1;
		while (*shm == 1 && cnt++ < MAX_CNT)
			sleep(1);
		SM_TEST(cnt <= MAX_CNT);

		/* release and re-acquire the segment */
		r = sm_shmstop((void *) shm, shmid, owner);
		SM_TEST(r == 0);
		shm = (int *) sm_shmstart(T_SHMKEY, SHMSIZE, 0, &shmid, owner);
		SM_TEST(shm != (int *) 0);
	}
	else
	{
		while (*shm != 1 && cnt++ < MAX_CNT)
			sleep(1);
		SM_TEST(cnt <= MAX_CNT);
		*shm = 2;

		/* wait a momemt so the segment is still in use */
		sleep(2);
	}
	return sm_shmstop((void *) shm, shmid, owner);
}

int
main(argc, argv)
	int argc;
	char *argv[];
{
	bool interactive = false;
	bool owner = false;
	int big = -1;
	int ch;
	int r = 0;
	int status;
	extern char *optarg;

# define OPTIONS	"b:io"
	while ((ch = getopt(argc, argv, OPTIONS)) != -1)
	{
		switch ((char) ch)
		{
		  case 'b':
			big = atoi(optarg);
			break;

		  case 'i':
			interactive = true;
			break;

		  case 'o':
			owner = true;
			break;

		  default:
			break;
		}
	}

	if (interactive)
		r = shminter(owner);
	else if (big > 0)
		r = shmbig(true, big);
	else
	{
		pid_t pid;
		extern int SmTestNumErrors;

		if ((pid = fork()) < 0)
		{
			perror("fork failed\n");
			return -1;
		}

		sm_test_begin(argc, argv, "test shared memory");
		if (pid == 0)
		{
			/* give the parent the chance to setup data */
			sleep(1);
			r = shmtest(false);
		}
		else
		{
			r = shmtest(true);
			(void) wait(&status);
		}
		SM_TEST(r == 0);
		if (SmTestNumErrors > 0)
			printf("add -DSM_CONF_SHM=0 to confENVDEF in devtools/Site/site.config.m4\nand start over.\n");
		return sm_test_end();
	}
	return r;
}
#else /* SM_CONF_SHM */
int
main(argc, argv)
	int argc;
	char *argv[];
{
	printf("No support for shared memory configured on this machine\n");
	return 0;
}
#endif /* SM_CONF_SHM */
@


1.7
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.6
log
@update to sendmail 8.13.4
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2002, 2004, 2005 Sendmail, Inc. and its suppliers.
d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: t-shm.c,v 1.22 2005/01/14 02:14:10 ca Exp $")
@


1.5
log
@Update to sendmail-8.13.2
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2002, 2004 Sendmail, Inc. and its suppliers.
d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: t-shm.c,v 1.20 2004/08/03 20:51:36 ca Exp $")
d86 4
d172 2
@


1.4
log
@Update to sendmail.8.13.0
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2002 Sendmail, Inc. and its suppliers.
d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: t-shm.c,v 1.19 2004/04/20 23:14:21 ca Exp $")
d147 2
@


1.3
log
@update to sendmail 8.12.3
@
text
@d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: t-shm.c,v 1.18 2002/01/31 04:11:41 ca Exp $")
d48 1
a48 1
	int i, j, t;
a76 1
				j += i;
@


1.2
log
@Update to sendmail 8.12.1.

A potential security problem has been uncovered in 8.12.0 which might
be exploited locally by malicious users to gain access to the client
mail queue.  However, as long as the MTA accepts local connections,
the possible consequences of this potential local exploit are small.
Notice: some operating systems don't provide a way to completely drop
privileges from a set-group-ID program.  In that case sendmail refuses
to run if unsafe options are given.
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001 Sendmail, Inc. and its suppliers.
d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: t-shm.c,v 1.17 2001/09/11 04:04:49 gshapiro Exp $")
d233 1
d254 2
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: t-shm.c,v 1.15 2001/08/27 23:00:05 gshapiro Exp $")
@


1.1.1.1
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@@
