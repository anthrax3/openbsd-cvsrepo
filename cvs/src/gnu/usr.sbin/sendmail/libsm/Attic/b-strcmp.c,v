head	1.6;
access;
symbols
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.4.0.30
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.28
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.26
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.24
	OPENBSD_5_0:1.4.0.22
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.20
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.18
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.14
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.16
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.12
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.10
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.8
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.6
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.4
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.2.0.14
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.12
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.8
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.10
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.6
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	SENDMAIL_8_12_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.6
date	2014.09.17.18.49.51;	author matthieu;	state dead;
branches;
next	1.5;
commitid	M7i5giHIoz3DMlTU;

1.5
date	2014.02.07.21.24.59;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.22.18.43.54;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2004.12.16.00.21.30;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.01.17.18.29;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Bye.
@
text
@/*
 * Copyright (c) 2000-2001, 2004 Proofpoint, Inc. and its suppliers.
 *      All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 */

#include <sm/gen.h>
SM_RCSID("@@(#)$Sendmail: b-strcmp.c,v 1.15 2013/11/22 20:51:42 ca Exp $")
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sm/time.h>
#include <sm/string.h>

#define toseconds(x, y)	(x.tv_sec - y.tv_sec)
#define SIZE	512
#define LOOPS	4000000L	/* initial number of loops */
#define MAXTIME	30L	/* "maximum" time to run single test */

void fatal __P((char *));
void purpose __P((void));
int main __P((int, char *[]));

void
fatal(str)
	char *str;
{
	perror(str);
	exit(1);
}

void
purpose()
{
	printf("This program benchmarks the performance differences between\n");
	printf("strcasecmp() and sm_strcasecmp().\n");
	printf("These tests may take several minutes to complete.\n");
}

int
main(argc, argv)
	int argc;
	char *argv[];
{
	long a;
	int k;
	bool doit = false;
	long loops;
	long j;
	long one, two;
	struct timeval t1, t2;
	char src1[SIZE], src2[SIZE];

# define OPTIONS	"d"
	while ((k = getopt(argc, argv, OPTIONS)) != -1)
	{
		switch ((char) k)
		{
		  case 'd':
			doit = true;
			break;

		  default:
			break;
		}
	}

	if (!doit)
	{
		purpose();
		printf("If you want to run it, specify -d as option.\n");
		return 0;
	}

	/* Run-time comments to the user */
	purpose();
	printf("\n");
	for (k = 0; k < 3; k++)
	{
		switch (k)
		{
		  case 0:
			(void) sm_strlcpy(src1, "1234567890", SIZE);
			(void) sm_strlcpy(src2, "1234567890", SIZE);
			break;
		  case 1:
			(void) sm_strlcpy(src1, "1234567890", SIZE);
			(void) sm_strlcpy(src2, "1234567891", SIZE);
			break;
		  case 2:
			(void) sm_strlcpy(src1, "1234567892", SIZE);
			(void) sm_strlcpy(src2, "1234567891", SIZE);
			break;
		}
		printf("Test %d: strcasecmp(%s, %s) versus sm_strcasecmp()\n",
			k, src1, src2);
		loops = LOOPS;
		for (;;)
		{
			j = 0;
			if (gettimeofday(&t1, NULL) < 0)
				fatal("gettimeofday");
			for (a = 0; a < loops; a++)
				j += strcasecmp(src1, src2);
			if (gettimeofday(&t2, NULL) < 0)
				fatal("gettimeofday");
			one = toseconds(t2, t1);
			printf("\tstrcasecmp() result: %ld seconds [%ld]\n",
				one, j);

			j = 0;
			if (gettimeofday(&t1, NULL) < 0)
				fatal("gettimeofday");
			for (a = 0; a < loops; a++)
				j += sm_strcasecmp(src1, src2);
			if (gettimeofday(&t2, NULL) < 0)
				fatal("gettimeofday");
			two = toseconds(t2, t1);
			printf("\tsm_strcasecmp() result: %ld seconds [%ld]\n",
				two, j);

			if (abs(one - two) > 2)
				break;
			loops += loops;
			if (loops < 0L || one > MAXTIME)
			{
				printf("\t\t** results too close: no decision\n");
				break;
			}
			else
			{
				printf("\t\t** results too close redoing test %ld times **\n",
					loops);
			}
		}
	}

	printf("\n\n");
	printf("Interpreting the results:\n");
	printf("\tFor differences larger than 2 seconds, the lower value is\n");
	printf("\tbetter and that function should be used for performance\n");
	printf("\treasons.\n\n");
	printf("This program will re-run the tests when the difference is\n");
	printf("less than 2 seconds.\n");
	printf("The result will vary depending on the compiler optimization\n");	printf("level used. Compiling the sendmail libsm library with a\n");
	printf("better optimization level can change the results.\n");
	return 0;
}
@


1.5
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.4
log
@Update to sendmail 8.13.6
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001, 2004 Sendmail, Inc. and its suppliers.
d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: b-strcmp.c,v 1.14 2005/06/14 23:07:20 ca Exp $")
@


1.3
log
@Update to sendmail-8.13.2
@
text
@d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: b-strcmp.c,v 1.13 2004/08/03 20:07:59 ca Exp $")
d16 1
a16 1
#include <sys/time.h>
@


1.2
log
@Update to sendmail 8.12.1.

A potential security problem has been uncovered in 8.12.0 which might
be exploited locally by malicious users to gain access to the client
mail queue.  However, as long as the MTA accepts local connections,
the possible consequences of this potential local exploit are small.
Notice: some operating systems don't provide a way to completely drop
privileges from a set-group-ID program.  In that case sendmail refuses
to run if unsafe options are given.
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001 Sendmail, Inc. and its suppliers.
d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: b-strcmp.c,v 1.12 2001/09/11 04:04:47 gshapiro Exp $")
d23 4
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
SM_RCSID("@@(#)$Sendmail: b-strcmp.c,v 1.10 2001/08/31 17:49:28 gshapiro Exp $")
@


1.1.1.1
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@@
