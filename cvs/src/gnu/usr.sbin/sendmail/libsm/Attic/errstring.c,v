head	1.7;
access;
symbols
	OPENBSD_5_6:1.6.0.6
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.38
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.36
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.34
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.32
	OPENBSD_5_0:1.5.0.30
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.28
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.26
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.22
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.24
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.20
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.18
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.16
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.14
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.12
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.10
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.8
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.6
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.4
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.6
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.8
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	SENDMAIL_8_12_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.7
date	2014.09.17.18.49.51;	author matthieu;	state dead;
branches;
next	1.6;
commitid	M7i5giHIoz3DMlTU;

1.6
date	2014.02.07.21.24.59;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2004.06.24.03.59.26;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.17.17.31.39;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.14.03.21.40;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.01.17.18.29;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Bye.
@
text
@/*
 * Copyright (c) 2001, 2003 Proofpoint, Inc. and its suppliers.
 *	All rights reserved.
 * Copyright (c) 1983, 1995-1997 Eric P. Allman.  All rights reserved.
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 */

#include <sm/gen.h>
SM_RCSID("@@(#)$Sendmail: errstring.c,v 1.20 2013/11/22 20:51:42 ca Exp $")

#include <errno.h>
#include <stdio.h>	/* sys_errlist, on some platforms */

#include <sm/io.h>	/* sm_snprintf */
#include <sm/string.h>
#include <sm/errstring.h>

#if NAMED_BIND
# include <netdb.h>
#endif

#if LDAPMAP
# include <lber.h>
# include <ldap.h>			/* for LDAP error codes */
#endif /* LDAPMAP */

/*
**  Notice: this file is used by libmilter. Please try to avoid
**	using libsm specific functions.
*/

/*
**  SM_ERRSTRING -- return string description of error code
**
**	Parameters:
**		errnum -- the error number to translate
**
**	Returns:
**		A string description of errnum.
**
**	Note: this may point to a local (static) buffer.
*/

const char *
sm_errstring(errnum)
	int errnum;
{
	char *ret;


	switch (errnum)
	{
	  case EPERM:
		/* SunOS gives "Not owner" -- this is the POSIX message */
		return "Operation not permitted";

	/*
	**  Error messages used internally in sendmail.
	*/

	  case E_SM_OPENTIMEOUT:
		return "Timeout on file open";

	  case E_SM_NOSLINK:
		return "Symbolic links not allowed";

	  case E_SM_NOHLINK:
		return "Hard links not allowed";

	  case E_SM_REGONLY:
		return "Regular files only";

	  case E_SM_ISEXEC:
		return "Executable files not allowed";

	  case E_SM_WWDIR:
		return "World writable directory";

	  case E_SM_GWDIR:
		return "Group writable directory";

	  case E_SM_FILECHANGE:
		return "File changed after open";

	  case E_SM_WWFILE:
		return "World writable file";

	  case E_SM_GWFILE:
		return "Group writable file";

	  case E_SM_GRFILE:
		return "Group readable file";

	  case E_SM_WRFILE:
		return "World readable file";

	/*
	**  DNS error messages.
	*/

#if NAMED_BIND
	  case HOST_NOT_FOUND + E_DNSBASE:
		return "Name server: host not found";

	  case TRY_AGAIN + E_DNSBASE:
		return "Name server: host name lookup failure";

	  case NO_RECOVERY + E_DNSBASE:
		return "Name server: non-recoverable error";

	  case NO_DATA + E_DNSBASE:
		return "Name server: no data known";
#endif /* NAMED_BIND */

	/*
	**  libsmdb error messages.
	*/

	  case SMDBE_MALLOC:
		return "Memory allocation failed";

	  case SMDBE_GDBM_IS_BAD:
		return "GDBM is not supported";

	  case SMDBE_UNSUPPORTED:
		return "Unsupported action";

	  case SMDBE_DUPLICATE:
		return "Key already exists";

	  case SMDBE_BAD_OPEN:
		return "Database open failed";

	  case SMDBE_NOT_FOUND:
		return "Key not found";

	  case SMDBE_UNKNOWN_DB_TYPE:
		return "Unknown database type";

	  case SMDBE_UNSUPPORTED_DB_TYPE:
		return "Support for database type not compiled into this program";

	  case SMDBE_INCOMPLETE:
		return "DB sync did not finish";

	  case SMDBE_KEY_EMPTY:
		return "Key is empty";

	  case SMDBE_KEY_EXIST:
		return "Key already exists";

	  case SMDBE_LOCK_DEADLOCK:
		return "Locker killed to resolve deadlock";

	  case SMDBE_LOCK_NOT_GRANTED:
		return "Lock unavailable";

	  case SMDBE_LOCK_NOT_HELD:
		return "Lock not held by locker";

	  case SMDBE_RUN_RECOVERY:
		return "Database panic, run recovery";

	  case SMDBE_IO_ERROR:
		return "I/O error";

	  case SMDBE_READ_ONLY:
		return "Database opened read-only";

	  case SMDBE_DB_NAME_TOO_LONG:
		return "Name too long";

	  case SMDBE_INVALID_PARAMETER:
		return "Invalid parameter";

	  case SMDBE_ONLY_SUPPORTS_ONE_CURSOR:
		return "Only one cursor allowed";

	  case SMDBE_NOT_A_VALID_CURSOR:
		return "Invalid cursor";

	  case SMDBE_OLD_VERSION:
		return "Berkeley DB file is an old version, recreate it";

	  case SMDBE_VERSION_MISMATCH:
		return "Berkeley DB version mismatch between include file and library";

#if LDAPMAP

	/*
	**  LDAP URL error messages.
	*/

	/* OpenLDAP errors */
# ifdef LDAP_URL_ERR_MEM
	  case E_LDAPURLBASE + LDAP_URL_ERR_MEM:
		return "LDAP URL can't allocate memory space";
# endif /* LDAP_URL_ERR_MEM */

# ifdef LDAP_URL_ERR_PARAM
	  case E_LDAPURLBASE + LDAP_URL_ERR_PARAM:
		return "LDAP URL parameter is bad";
# endif /* LDAP_URL_ERR_PARAM */

# ifdef LDAP_URL_ERR_BADSCHEME
	  case E_LDAPURLBASE + LDAP_URL_ERR_BADSCHEME:
		return "LDAP URL doesn't begin with \"ldap[si]://\"";
# endif /* LDAP_URL_ERR_BADSCHEME */

# ifdef LDAP_URL_ERR_BADENCLOSURE
	  case E_LDAPURLBASE + LDAP_URL_ERR_BADENCLOSURE:
		return "LDAP URL is missing trailing \">\"";
# endif /* LDAP_URL_ERR_BADENCLOSURE */

# ifdef LDAP_URL_ERR_BADURL
	  case E_LDAPURLBASE + LDAP_URL_ERR_BADURL:
		return "LDAP URL is bad";
# endif /* LDAP_URL_ERR_BADURL */

# ifdef LDAP_URL_ERR_BADHOST
	  case E_LDAPURLBASE + LDAP_URL_ERR_BADHOST:
		return "LDAP URL host port is bad";
# endif /* LDAP_URL_ERR_BADHOST */

# ifdef LDAP_URL_ERR_BADATTRS
	  case E_LDAPURLBASE + LDAP_URL_ERR_BADATTRS:
		return "LDAP URL bad (or missing) attributes";
# endif /* LDAP_URL_ERR_BADATTRS */

# ifdef LDAP_URL_ERR_BADSCOPE
	  case E_LDAPURLBASE + LDAP_URL_ERR_BADSCOPE:
		return "LDAP URL scope string is invalid (or missing)";
# endif /* LDAP_URL_ERR_BADSCOPE */

# ifdef LDAP_URL_ERR_BADFILTER
	  case E_LDAPURLBASE + LDAP_URL_ERR_BADFILTER:
		return "LDAP URL bad or missing filter";
# endif /* LDAP_URL_ERR_BADFILTER */

# ifdef LDAP_URL_ERR_BADEXTS
	  case E_LDAPURLBASE + LDAP_URL_ERR_BADEXTS:
		return "LDAP URL bad or missing extensions";
# endif /* LDAP_URL_ERR_BADEXTS */

	/* Sun LDAP errors */
# ifdef LDAP_URL_ERR_NOTLDAP
	  case E_LDAPURLBASE + LDAP_URL_ERR_NOTLDAP:
		return "LDAP URL doesn't begin with \"ldap://\"";
# endif /* LDAP_URL_ERR_NOTLDAP */

# ifdef LDAP_URL_ERR_NODN
	  case E_LDAPURLBASE + LDAP_URL_ERR_NODN:
		return "LDAP URL has no DN (required)";
# endif /* LDAP_URL_ERR_NODN */

#endif /* LDAPMAP */
	}

#if LDAPMAP

	/*
	**  LDAP error messages.
	*/

	if (errnum >= E_LDAPBASE)
		return ldap_err2string(errnum - E_LDAPBASE);
#endif /* LDAPMAP */

	ret = strerror(errnum);
	if (ret == NULL)
	{
		static char buf[30];

		(void) sm_snprintf(buf, sizeof buf, "Error %d", errnum);
		return buf;
	}
	return ret;
}
@


1.6
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.5
log
@Update to sendmail.8.13.0
@
text
@d2 1
a2 1
 * Copyright (c) 2001, 2003 Sendmail, Inc. and its suppliers.
d14 1
a14 1
SM_RCSID("@@(#)$Sendmail: errstring.c,v 1.19 2003/12/10 03:53:05 gshapiro Exp $")
@


1.4
log
@Update to sendmail-8.12.10.  This includes a fix for a buffer overflow
in address parsing.  That fix (but not all of sendmail-8.12.10) has
been applied to OpenBSD 3.4 and the 3.2 and 3.2 -stable branches.
@
text
@d14 1
a14 1
SM_RCSID("@@(#)$Sendmail: errstring.c,v 1.12.2.4 2003/06/24 17:16:09 ca Exp $")
d192 70
d264 2
a269 1
#if LDAPMAP
@


1.3
log
@update to sendmail-8.12.2
@
text
@d2 1
a2 1
 * Copyright (c) 2001 Sendmail, Inc. and its suppliers.
d14 1
a14 1
SM_RCSID("@@(#)$Sendmail: errstring.c,v 1.12 2001/10/03 16:09:32 ca Exp $")
d45 2
d55 1
d189 3
@


1.2
log
@Update to sendmail 8.12.1.

A potential security problem has been uncovered in 8.12.0 which might
be exploited locally by malicious users to gain access to the client
mail queue.  However, as long as the MTA accepts local connections,
the possible consequences of this potential local exploit are small.
Notice: some operating systems don't provide a way to completely drop
privileges from a set-group-ID program.  In that case sendmail refuses
to run if unsafe options are given.
@
text
@d14 1
a14 1
SM_RCSID("@@(#)$Sendmail: errstring.c,v 1.11 2001/09/25 21:25:00 gshapiro Exp $")
d31 5
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
SM_RCSID("@@(#)$Sendmail: errstring.c,v 1.8 2001/08/27 12:59:34 ca Exp $")
d46 2
d192 9
a200 1
	return strerror(errnum);
@


1.1.1.1
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@@
