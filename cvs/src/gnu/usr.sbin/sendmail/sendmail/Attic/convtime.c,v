head	1.6;
access;
symbols
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.4.0.50
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.48
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.46
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.44
	OPENBSD_5_0:1.4.0.42
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.40
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.38
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.34
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.36
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.32
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.30
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.28
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.26
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.24
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.22
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.20
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.18
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.16
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.14
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.12
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.10
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	SENDMAIL_8_12_0:1.1.1.3
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	SENDMAIL_8_11_2:1.1.1.2
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	SENDMAIL_8_10_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2014.09.17.18.49.51;	author matthieu;	state dead;
branches;
next	1.5;
commitid	M7i5giHIoz3DMlTU;

1.5
date	2014.02.07.21.25.00;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.01.17.18.29;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.11.19.02.49;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.15.21.09.08;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.02.19.05.44;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.02.19.05.44;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.01.15.20.52.12;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2001.09.11.18.55.50;	author millert;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Bye.
@
text
@/*
 * Copyright (c) 1998-2001 Proofpoint, Inc. and its suppliers.
 *	All rights reserved.
 * Copyright (c) 1983, 1995-1997 Eric P. Allman.  All rights reserved.
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 *
 */

#include <sendmail.h>

SM_RCSID("@@(#)$Sendmail: convtime.c,v 8.40 2013/11/22 20:51:55 ca Exp $")

/*
**  CONVTIME -- convert time
**
**	Takes a time as an ascii string with a trailing character
**	giving units:
**	  s -- seconds
**	  m -- minutes
**	  h -- hours
**	  d -- days (default)
**	  w -- weeks
**	For example, "3d12h" is three and a half days.
**
**	Parameters:
**		p -- pointer to ascii time.
**		units -- default units if none specified.
**
**	Returns:
**		time in seconds.
**
**	Side Effects:
**		none.
*/

time_t
convtime(p, units)
	char *p;
	int units;
{
	register time_t t, r;
	register char c;
	bool pos = true;

	r = 0;
	if (sm_strcasecmp(p, "now") == 0)
		return NOW;
	if (*p == '-')
	{
		pos = false;
		++p;
	}
	while (*p != '\0')
	{
		t = 0;
		while ((c = *p++) != '\0' && isascii(c) && isdigit(c))
			t = t * 10 + (c - '0');
		if (c == '\0')
		{
			c = units;
			p--;
		}
		else if (strchr("wdhms", c) == NULL)
		{
			usrerr("Invalid time unit `%c'", c);
			c = units;
		}
		switch (c)
		{
		  case 'w':		/* weeks */
			t *= 7;
			/* FALLTHROUGH */

		  case 'd':		/* days */
			/* FALLTHROUGH */
		  default:
			t *= 24;
			/* FALLTHROUGH */

		  case 'h':		/* hours */
			t *= 60;
			/* FALLTHROUGH */

		  case 'm':		/* minutes */
			t *= 60;
			/* FALLTHROUGH */

		  case 's':		/* seconds */
			break;
		}
		r += t;
	}

	return pos ? r : -r;
}
/*
**  PINTVL -- produce printable version of a time interval
**
**	Parameters:
**		intvl -- the interval to be converted
**		brief -- if true, print this in an extremely compact form
**			(basically used for logging).
**
**	Returns:
**		A pointer to a string version of intvl suitable for
**			printing or framing.
**
**	Side Effects:
**		none.
**
**	Warning:
**		The string returned is in a static buffer.
*/

#define PLURAL(n)	((n) == 1 ? "" : "s")

char *
pintvl(intvl, brief)
	time_t intvl;
	bool brief;
{
	static char buf[256];
	register char *p;
	int wk, dy, hr, mi, se;

	if (intvl == 0 && !brief)
		return "zero seconds";
	if (intvl == NOW)
		return "too long";

	/* decode the interval into weeks, days, hours, minutes, seconds */
	se = intvl % 60;
	intvl /= 60;
	mi = intvl % 60;
	intvl /= 60;
	hr = intvl % 24;
	intvl /= 24;
	if (brief)
	{
		dy = intvl;
		wk = 0;
	}
	else
	{
		dy = intvl % 7;
		intvl /= 7;
		wk = intvl;
	}

	/* now turn it into a sexy form */
	p = buf;
	if (brief)
	{
		if (dy > 0)
		{
			(void) sm_snprintf(p, SPACELEFT(buf, p), "%d+", dy);
			p += strlen(p);
		}
		(void) sm_snprintf(p, SPACELEFT(buf, p), "%02d:%02d:%02d",
				   hr, mi, se);
		return buf;
	}

	/* use the verbose form */
	if (wk > 0)
	{
		(void) sm_snprintf(p, SPACELEFT(buf, p), ", %d week%s", wk,
				   PLURAL(wk));
		p += strlen(p);
	}
	if (dy > 0)
	{
		(void) sm_snprintf(p, SPACELEFT(buf, p), ", %d day%s", dy,
				   PLURAL(dy));
		p += strlen(p);
	}
	if (hr > 0)
	{
		(void) sm_snprintf(p, SPACELEFT(buf, p), ", %d hour%s", hr,
				   PLURAL(hr));
		p += strlen(p);
	}
	if (mi > 0)
	{
		(void) sm_snprintf(p, SPACELEFT(buf, p), ", %d minute%s", mi,
				   PLURAL(mi));
		p += strlen(p);
	}
	if (se > 0)
	{
		(void) sm_snprintf(p, SPACELEFT(buf, p), ", %d second%s", se,
				   PLURAL(se));
		p += strlen(p);
	}

	return (buf + 2);
}
@


1.5
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.4
log
@Update to sendmail 8.12.1.

A potential security problem has been uncovered in 8.12.0 which might
be exploited locally by malicious users to gain access to the client
mail queue.  However, as long as the MTA accepts local connections,
the possible consequences of this potential local exploit are small.
Notice: some operating systems don't provide a way to completely drop
privileges from a set-group-ID program.  In that case sendmail refuses
to run if unsafe options are given.
@
text
@d2 1
a2 1
 * Copyright (c) 1998-2001 Sendmail, Inc. and its suppliers.
d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: convtime.c,v 8.39 2001/09/11 04:05:13 gshapiro Exp $")
@


1.3
log
@merge in sendmail 8.12.0 with BSD Makefiles and mdoc man pages
@
text
@d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: convtime.c,v 8.36 2001/02/13 22:32:08 ca Exp $")
d101 1
a101 1
/*
@


1.2
log
@sendmail 8.11.2 with BSD Makefiles
@
text
@d2 1
a2 1
 * Copyright (c) 1998, 1999 Sendmail, Inc. and its suppliers.
d14 1
a14 3
#ifndef lint
static char id[] = "@@(#)$Sendmail: convtime.c,v 8.25 1999/06/16 21:11:26 ca Exp $";
#endif /* ! lint */
d16 1
a16 1
#include <sendmail.h>
d48 1
d51 1
a51 1
	if (strcasecmp(p, "now") == 0)
d53 5
d99 1
a99 1
	return r;
d106 1
a106 1
**		brief -- if TRUE, print this in an extremely compact form
d161 1
a161 1
			(void) snprintf(p, SPACELEFT(buf, p), "%d+", dy);
d164 2
a165 2
		(void) snprintf(p, SPACELEFT(buf, p), "%02d:%02d:%02d",
			hr, mi, se);
d172 2
a173 1
		(void) snprintf(p, SPACELEFT(buf, p), ", %d week%s", wk, PLURAL(wk));
d178 2
a179 1
		(void) snprintf(p, SPACELEFT(buf, p), ", %d day%s", dy, PLURAL(dy));
d184 2
a185 1
		(void) snprintf(p, SPACELEFT(buf, p), ", %d hour%s", hr, PLURAL(hr));
d190 2
a191 1
		(void) snprintf(p, SPACELEFT(buf, p), ", %d minute%s", mi, PLURAL(mi));
d196 2
a197 1
		(void) snprintf(p, SPACELEFT(buf, p), ", %d second%s", se, PLURAL(se));
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@stock sendmail 8.10.0 with $Id -> $Sendmail
@
text
@@


1.1.1.2
log
@sendmail 8.11.2
@
text
@d15 1
a15 1
static char id[] = "@@(#)$Id: convtime.c,v 8.25 1999/06/16 21:11:26 ca Exp $";
@


1.1.1.3
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@d2 1
a2 1
 * Copyright (c) 1998-2001 Sendmail, Inc. and its suppliers.
d14 4
a19 2
SM_RCSID("@@(#)$Sendmail: convtime.c,v 8.36 2001/02/13 22:32:08 ca Exp $")

a49 1
	bool pos = true;
d52 1
a52 1
	if (sm_strcasecmp(p, "now") == 0)
a53 5
	if (*p == '-')
	{
		pos = false;
		++p;
	}
d95 1
a95 1
	return pos ? r : -r;
d102 1
a102 1
**		brief -- if true, print this in an extremely compact form
d157 1
a157 1
			(void) sm_snprintf(p, SPACELEFT(buf, p), "%d+", dy);
d160 2
a161 2
		(void) sm_snprintf(p, SPACELEFT(buf, p), "%02d:%02d:%02d",
				   hr, mi, se);
d168 1
a168 2
		(void) sm_snprintf(p, SPACELEFT(buf, p), ", %d week%s", wk,
				   PLURAL(wk));
d173 1
a173 2
		(void) sm_snprintf(p, SPACELEFT(buf, p), ", %d day%s", dy,
				   PLURAL(dy));
d178 1
a178 2
		(void) sm_snprintf(p, SPACELEFT(buf, p), ", %d hour%s", hr,
				   PLURAL(hr));
d183 1
a183 2
		(void) sm_snprintf(p, SPACELEFT(buf, p), ", %d minute%s", mi,
				   PLURAL(mi));
d188 1
a188 2
		(void) sm_snprintf(p, SPACELEFT(buf, p), ", %d second%s", se,
				   PLURAL(se));
@


