head	1.6;
access;
symbols
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.4.0.50
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.48
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.46
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.44
	OPENBSD_5_0:1.4.0.42
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.40
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.38
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.34
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.36
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.32
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.30
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.28
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.26
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.24
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.22
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.20
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.18
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.16
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.14
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.12
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.10
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	SENDMAIL_8_12_0:1.1.1.3
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	SENDMAIL_8_11_2:1.1.1.2
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	SENDMAIL_8_10_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2014.09.17.18.49.52;	author matthieu;	state dead;
branches;
next	1.5;
commitid	M7i5giHIoz3DMlTU;

1.5
date	2014.02.07.21.25.00;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.01.17.18.30;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.11.19.02.50;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.15.21.09.10;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.02.19.05.48;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.02.19.05.48;	author millert;	state Exp;
branches
	1.1.1.1.4.1;
next	1.1.1.2;

1.1.1.2
date	2001.01.15.20.52.17;	author millert;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2001.09.11.18.55.51;	author millert;	state Exp;
branches;
next	;

1.1.1.1.4.1
date	2001.05.31.00.31.43;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Bye.
@
text
@/*
 * Copyright (c) 1999-2000 Proofpoint, Inc. and its suppliers.
 *	All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 *
 * Contributed by Exactis.com, Inc.
 *
 */

#include <sm/gen.h>
SM_RCSID("@@(#)$Sendmail: shmticklib.c,v 8.15 2013/11/22 20:51:56 ca Exp $")

#if _FFR_SHM_STATUS
# include <sys/types.h>
# include <sys/ipc.h>
# include <sys/shm.h>

# include "statusd_shm.h"

/*
**  SHMTICK -- increment a shared memory variable
**
**	Parameters:
**		inc_me -- identity of shared memory segment
**		what -- which variable to increment
**
**	Returns:
**		none
*/

void
shmtick(inc_me, what)
	int inc_me;
	int what;
{
	static int shmid = -1;
	static STATUSD_SHM *sp = (STATUSD_SHM *)-1;
	static unsigned int cookie = 0;

	if (shmid < 0)
	{
		int size = sizeof(STATUSD_SHM);

		shmid = shmget(STATUSD_SHM_KEY, size, 0);
		if (shmid < 0)
			return;
	}
	if ((unsigned long *) sp == (unsigned long *)-1)
	{
		sp = (STATUSD_SHM *) shmat(shmid, NULL, 0);
		if ((unsigned long *) sp == (unsigned long *) -1)
			return;
	}
	if (sp->magic != STATUSD_MAGIC)
	{
		/*
		**  possible race condition, wait for
		**  statusd to initialize.
		*/

		return;
	}
	if (what >= STATUSD_LONGS)
		what = STATUSD_LONGS - 1;
	if (inc_me >= STATUSD_LONGS)
		inc_me = STATUSD_LONGS - 1;

	if (sp->ul[STATUSD_COOKIE] != cookie)
	{
		cookie = sp->ul[STATUSD_COOKIE];
		++(sp->ul[inc_me]);
	}
	++(sp->ul[what]);
}
#endif /* _FFR_SHM_STATUS */
@


1.5
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.4
log
@Update to sendmail 8.12.1.

A potential security problem has been uncovered in 8.12.0 which might
be exploited locally by malicious users to gain access to the client
mail queue.  However, as long as the MTA accepts local connections,
the possible consequences of this potential local exploit are small.
Notice: some operating systems don't provide a way to completely drop
privileges from a set-group-ID program.  In that case sendmail refuses
to run if unsafe options are given.
@
text
@d2 1
a2 1
 * Copyright (c) 1999-2000 Sendmail, Inc. and its suppliers.
d14 1
a14 1
SM_RCSID("@@(#)$Sendmail: shmticklib.c,v 8.14 2001/09/11 04:05:16 gshapiro Exp $")
@


1.3
log
@merge in sendmail 8.12.0 with BSD Makefiles and mdoc man pages
@
text
@d14 1
a14 1
SM_RCSID("@@(#)$Sendmail: shmticklib.c,v 8.11 2000/09/04 19:13:19 ca Exp $")
d23 1
a23 1
/*
@


1.2
log
@sendmail 8.11.2 with BSD Makefiles
@
text
@d13 2
a14 3
#ifndef lint
static char id[] = "@@(#)$Sendmail: shmticklib.c,v 8.6 2000/02/26 01:32:27 gshapiro Exp $";
#endif /* ! lint */
a16 5
# if SFIO
#  include <sfio/stdio.h>
# else /* !SFIO */
#  include <stdio.h>
# endif /* SFIO */
d51 1
a51 1
	if ((unsigned long *)sp == (unsigned long *)-1)
d53 2
a54 2
		sp = (STATUSD_SHM *)shmat(shmid, NULL, 0);
		if ((unsigned long *)sp == (unsigned long *)-1)
@


1.1
log
@Initial revision
@
text
@d18 3
d22 1
@


1.1.1.1
log
@stock sendmail 8.10.0 with $Id -> $Sendmail
@
text
@@


1.1.1.1.4.1
log
@Pull in patch from current:
Errata(028):
The signal handlers in sendmail contain code that is unsafe in the
context of a signal handler.  This leads to potentially serious race
conditions.  At the moment this is a theoretical attack only and can
only be exploited on the local host (if at all).
Fix(millert):
Update to sendmail 8.11.4:
8.11.4 revamps signal handling within the MTA in order to reduce
the likelihood of a race condition that can lead to heap
corruption as described in Michal Zalewski's advisory.  The
problems discussed in the advisory are not currently known to
be exploitable but we recommend upgrading to 8.11.4 in case a
method is found to exploit the signal handling race condition.
8.11.4 also fixes other bugs found since the release of 8.11.3.

See the RELEASE_NOTES file for more details.
@
text
@a17 3
# if SFIO
#  include <sfio/stdio.h>
# else /* !SFIO */
a18 1
# endif /* SFIO */
@


1.1.1.2
log
@sendmail 8.11.2
@
text
@d14 1
a14 1
static char id[] = "@@(#)$Id: shmticklib.c,v 8.6 2000/02/26 01:32:27 gshapiro Exp $";
a17 3
# if SFIO
#  include <sfio/stdio.h>
# else /* !SFIO */
a18 1
# endif /* SFIO */
@


1.1.1.3
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@d13 3
a15 2
#include <sm/gen.h>
SM_RCSID("@@(#)$Sendmail: shmticklib.c,v 8.11 2000/09/04 19:13:19 ca Exp $")
d18 5
d57 1
a57 1
	if ((unsigned long *) sp == (unsigned long *)-1)
d59 2
a60 2
		sp = (STATUSD_SHM *) shmat(shmid, NULL, 0);
		if ((unsigned long *) sp == (unsigned long *) -1)
@


