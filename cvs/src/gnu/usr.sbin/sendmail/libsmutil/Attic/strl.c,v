head	1.3;
access;
symbols
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	SENDMAIL_8_11_2:1.1.1.2
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	SENDMAIL_8_10_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2001.09.11.18.59.19;	author millert;	state dead;
branches;
next	1.2;

1.2
date	2001.01.15.21.09.04;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.02.19.05.41;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.02.19.05.41;	author millert;	state Exp;
branches
	1.1.1.1.4.1;
next	1.1.1.2;

1.1.1.2
date	2001.01.15.20.52.07;	author millert;	state Exp;
branches;
next	;

1.1.1.1.4.1
date	2001.05.31.00.29.29;	author miod;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove unused files
@
text
@/*
 * Copyright (c) 1999-2000 Sendmail, Inc. and its suppliers.
 *	All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 *
 */

#ifndef lint
static char id[] = "@@(#)$Sendmail: strl.c,v 8.5.14.2 2000/09/17 17:04:24 gshapiro Exp $";
#endif /* ! lint */

#include <sendmail.h>

#if !HASSTRL
/*
**  strlcpy -- copy string obeying length and '\0' terminate it
**
**		terminates with '\0' if len > 0
**
**	Parameters:
**		dst -- "destination" string.
**		src -- "from" string.
**		len -- length of space available in "destination" string.
**
**	Returns:
**		total length of the string tried to create (=strlen(src))
**		if this is greater than len then an overflow would have
**		occurred.
*/

size_t
strlcpy(dst, src, len)
	register char *dst;
	register const char *src;
	size_t len;
{
	register size_t i;

	if (len-- <= 0)
		return strlen(src);
	for (i = 0; i < len && (dst[i] = src[i]) != 0; i++)
		continue;
	dst[i] = '\0';
	if (src[i] == '\0')
		return i;
	else
		return i + strlen(src + i);
}
/*
**  strlcat -- catenate strings obeying length and '\0' terminate it
**
**		strlcat will append at most len - strlen(dst) - 1 chars.
**		terminates with '\0' if len > 0
**
**	Parameters:
**		dst -- "destination" string.
**		src -- "from" string.
**		len -- max. length of "destination" string.
**
**	Returns:
**		total length of the string tried to create
**		(= initial length of dst + length of src)
**		if this is greater than len then an overflow would have
**		occurred.
*/

size_t
strlcat(dst, src, len)
	register char *dst;
	register const char *src;
	size_t len;
{
	register size_t i, j, o;

	o = strlen(dst);
	if (len < o + 1)
		return o + strlen(src);
	len -= o + 1;
	for (i = 0, j = o; i < len && (dst[j] = src[i]) != 0; i++, j++)
		continue;
	dst[j] = '\0';
	if (src[i] == '\0')
		return j;
	else
		return j + strlen(src + i);
}

#endif /* !HASSTRL */
@


1.2
log
@sendmail 8.11.2 with BSD Makefiles
@
text
@@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * Copyright (c) 1999 Sendmail, Inc. and its suppliers.
d12 1
a12 1
static char id[] = "@@(#)$Sendmail: strl.c,v 8.5 1999/12/29 22:13:46 ca Exp $";
d80 1
a80 1
	  return o + strlen(src);
@


1.1.1.1
log
@stock sendmail 8.10.0 with $Id -> $Sendmail
@
text
@@


1.1.1.1.4.1
log
@Pull in patch from current:
Errata(028):
The signal handlers in sendmail contain code that is unsafe in the
context of a signal handler.  This leads to potentially serious race
conditions.  At the moment this is a theoretical attack only and can
only be exploited on the local host (if at all).
Fix(millert):
Update to sendmail 8.11.4:
8.11.4 revamps signal handling within the MTA in order to reduce
the likelihood of a race condition that can lead to heap
corruption as described in Michal Zalewski's advisory.  The
problems discussed in the advisory are not currently known to
be exploitable but we recommend upgrading to 8.11.4 in case a
method is found to exploit the signal handling race condition.
8.11.4 also fixes other bugs found since the release of 8.11.3.

See the RELEASE_NOTES file for more details.
@
text
@d2 1
a2 1
 * Copyright (c) 1999-2000 Sendmail, Inc. and its suppliers.
d12 1
a12 1
static char id[] = "@@(#)$Sendmail: strl.c,v 8.5.14.2 2000/09/17 17:04:24 gshapiro Exp $";
d80 1
a80 1
		return o + strlen(src);
@


1.1.1.2
log
@sendmail 8.11.2
@
text
@d2 1
a2 1
 * Copyright (c) 1999-2000 Sendmail, Inc. and its suppliers.
d12 1
a12 1
static char id[] = "@@(#)$Id: strl.c,v 8.5.14.2 2000/09/17 17:04:24 gshapiro Exp $";
d80 1
a80 1
		return o + strlen(src);
@

