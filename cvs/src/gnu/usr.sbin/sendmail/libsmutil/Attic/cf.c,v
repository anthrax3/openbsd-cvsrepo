head	1.7;
access;
symbols
	OPENBSD_5_6:1.6.0.6
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.38
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.36
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.34
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.32
	OPENBSD_5_0:1.5.0.30
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.28
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.26
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.22
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.24
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.20
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.18
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.16
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.14
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.12
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.10
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.8
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.6
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.4
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.4.0.6
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	SENDMAIL_8_12_0:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.7
date	2014.09.17.18.49.51;	author matthieu;	state dead;
branches;
next	1.6;
commitid	M7i5giHIoz3DMlTU;

1.6
date	2014.02.07.21.25.00;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2004.06.24.03.59.26;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.01.19.59.22;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.06.03.17.25.46;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.01.17.18.29;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.11.18.55.49;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.09.11.18.55.49;	author millert;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Bye.
@
text
@/*
 * Copyright (c) 2000-2002 Proofpoint, Inc. and its suppliers.
 *	All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 *
 */

#include <sendmail.h>
SM_RCSID("@@(#)$Sendmail: cf.c,v 8.20 2013/11/22 20:51:50 ca Exp $")
#include <sendmail/pathnames.h>

/*
**  GETCFNAME -- return the name of the .cf file to use.
**
**	Some systems (e.g., NeXT) determine this dynamically.
**
**	For others: returns submit.cf or sendmail.cf depending
**		on the modes.
**
**	Parameters:
**		opmode -- operation mode.
**		submitmode -- submit mode.
**		cftype -- may request a certain cf file.
**		conffile -- if set, return it.
**
**	Returns:
**		name of .cf file.
*/

char *
getcfname(opmode, submitmode, cftype, conffile)
	int opmode;
	int submitmode;
	int cftype;
	char *conffile;
{
#if NETINFO
	char *cflocation;
#endif /* NETINFO */

	if (conffile != NULL)
		return conffile;

	if (cftype == SM_GET_SUBMIT_CF ||
	    ((submitmode != SUBMIT_UNKNOWN ||
	      opmode == MD_DELIVER ||
	      opmode == MD_ARPAFTP ||
	      opmode == MD_SMTP) &&
	     cftype != SM_GET_SENDMAIL_CF))
	{
		struct stat sbuf;
		static char cf[MAXPATHLEN];

#if NETINFO
		cflocation = ni_propval("/locations", NULL, "sendmail",
					"submit.cf", '\0');
		if (cflocation != NULL)
			(void) sm_strlcpy(cf, cflocation, sizeof cf);
		else
#endif /* NETINFO */
			(void) sm_strlcpyn(cf, sizeof cf, 2, _DIR_SENDMAILCF,
					   "submit.cf");
		if (cftype == SM_GET_SUBMIT_CF || stat(cf, &sbuf) == 0)
			return cf;
	}
#if NETINFO
	cflocation = ni_propval("/locations", NULL, "sendmail",
				"sendmail.cf", '\0');
	if (cflocation != NULL)
		return cflocation;
#endif /* NETINFO */
	return _PATH_SENDMAILCF;
}
@


1.6
log
@Update to sendmail 8.14.8.  This touches a lot of files due to the
Sendmail, Inc -> Proofpoint name change.  See RELEASE_NOTES for
actual changes.
@
text
@@


1.5
log
@Update to sendmail.8.13.0
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2002 Sendmail, Inc. and its suppliers.
d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: cf.c,v 8.19 2002/09/24 20:40:59 ca Exp $")
@


1.4
log
@update to sendmail 8.12.7
@
text
@d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: cf.c,v 8.18.2.1 2002/09/24 21:48:23 ca Exp $")
@


1.3
log
@Update to sendmail-8.12.4
@
text
@d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: cf.c,v 8.18 2002/05/25 00:09:16 gshapiro Exp $")
d40 3
a46 11
#if NETINFO
	{
		char *cflocation;

		cflocation = ni_propval("/locations", NULL, "sendmail",
					"sendmail.cf", '\0');
		if (cflocation != NULL)
			return cflocation;
	}
#endif /* NETINFO */

d57 9
a65 2
		(void) sm_strlcpyn(cf, sizeof cf, 2, _DIR_SENDMAILCF,
				   "submit.cf");
d69 6
@


1.2
log
@Update to sendmail 8.12.1.

A potential security problem has been uncovered in 8.12.0 which might
be exploited locally by malicious users to gain access to the client
mail queue.  However, as long as the MTA accepts local connections,
the possible consequences of this potential local exploit are small.
Notice: some operating systems don't provide a way to completely drop
privileges from a set-group-ID program.  In that case sendmail refuses
to run if unsafe options are given.
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001 Sendmail, Inc. and its suppliers.
d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: cf.c,v 8.16 2001/09/11 04:04:55 gshapiro Exp $")
d63 1
a63 1
		static char cf[PATH_MAX];
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: cf.c,v 8.14 2001/05/02 00:42:46 ca Exp $")
@


1.1.1.1
log
@sendmail 8.12.0 with $Id tags converted to $Sendmail
@
text
@@
