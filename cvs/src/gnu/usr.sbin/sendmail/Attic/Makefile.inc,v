head	1.21;
access;
symbols
	OPENBSD_5_6:1.20.0.4
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.19.0.8
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.4
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.2
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.17.0.28
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.26
	OPENBSD_5_0:1.17.0.24
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.22
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.20
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.16
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.18
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.14
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.12
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.10
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.17.0.8
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.17.0.6
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.4
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.17.0.2
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.16.0.6
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.4
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.2
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.12.0.4
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2;
locks; strict;
comment	@# @;


1.21
date	2014.09.17.18.49.49;	author matthieu;	state dead;
branches;
next	1.20;
commitid	M7i5giHIoz3DMlTU;

1.20
date	2014.04.13.08.35.27;	author brad;	state Exp;
branches;
next	1.19;

1.19
date	2013.01.09.22.17.58;	author matthieu;	state Exp;
branches;
next	1.18;

1.18
date	2012.08.21.14.05.59;	author jsg;	state Exp;
branches;
next	1.17;

1.17
date	2006.02.04.09.46.23;	author mbalmer;	state Exp;
branches;
next	1.16;

1.16
date	2004.06.24.03.59.23;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2004.05.17.14.52.58;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2004.05.11.19.40.56;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2003.08.22.19.17.22;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.27.21.22.14;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.02.19.06.18.10;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.07.20.17.30.26;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.21.00.44.06;	author hugh;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.09.21.25.33;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.01.20.18.19;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.11.19.02.47;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2000.09.03.18.41.12;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.18.00.04.20;	author itojun;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.15.16.16.38;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.04.18.08.27;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.02.19.48.09;	author millert;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Bye.
@
text
@#	$OpenBSD: Makefile.inc,v 1.20 2014/04/13 08:35:27 brad Exp $

.include <bsd.own.mk>
.include <bsd.obj.mk>

ENVDEF+= -DNEWDB -DMAP_REGEX
ENVDEF+= -DNETINET6 -DNEEDSGETIPNODE -DSM_CONF_SHM
.if (${YP:L} == "yes")
ENVDEF+=-DNIS
.endif

.if defined(WANT_LIBSMDB)
LDADD+= -lsmdb
.if exists(${.CURDIR}/../libsmdb/${__objdir})
DPADD+= ${.CURDIR}/../libsmdb/${__objdir}/libsmdb.a
LDFLAGS+=-L${.CURDIR}/../libsmdb/${__objdir}
.else
DPADD+= ${.CURDIR}/../libsmdb/libsmdb.a
LDFLAGS+=-L${.CURDIR}/../libsmdb
.endif
.endif

.if defined(WANT_LIBSMUTIL)
LDADD+= -lsmutil
.if exists(${.CURDIR}/../libsmutil/${__objdir})
DPADD+= ${.CURDIR}/../libsmutil/${__objdir}/libsmutil.a
LDFLAGS+=-L${.CURDIR}/../libsmutil/${__objdir}
.else
DPADD+= ${.CURDIR}/../libsmutil/libsmutil.a
LDFLAGS+=-L${.CURDIR}/../libsmutil
.endif
.endif

.if defined(WANT_LIBSM)
LDADD+= -lsm
.if exists(${.CURDIR}/../libsm/${__objdir})
DPADD+= ${.CURDIR}/../libsm/${__objdir}/libsm.a
LDFLAGS+=-L${.CURDIR}/../libsm/${__objdir}
.else
DPADD+= ${.CURDIR}/../libsm/libsm.a
LDFLAGS+=-L${.CURDIR}/../libsm
.endif
.endif

# To build with LDAP map support define WANT_LDAP in /etc/mk.conf (unsupported)
.if defined(WANT_LDAP)
.if !defined(LIB) || (${LIB} != "milter")
ENVDEF+= -DLDAPMAP
LDADD+=-lldap -llber -lsasl2
CFLAGS+=-I/usr/local/include
LDFLAGS+=-L/usr/local/lib
.endif
.endif

CFLAGS+=${ENVDEF} -I${.CURDIR}/../sendmail -I${.CURDIR}/../include
@


1.20
log
@Clean up last bits of TCP_WRAPPERS and ELF_TOOLCHAIN.

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.19 2013/01/09 22:17:58 matthieu Exp $
@


1.19
log
@In the WANT_LDAP=yes case, always link libsasl2
(libdap depends on it). ok millert@@ ajacoutot@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.18 2012/08/21 14:05:59 jsg Exp $
a41 8
.endif
.endif

.if defined(WANT_LIBWRAP)
.if (${TCP_WRAPPERS:L} == "yes")
ENVDEF+=-DTCPWRAPPERS
DPADD+= ${LIBWRAP}
LDADD+= -lwrap
@


1.18
log
@remove -DSM_OMIT_BOGUS_WARNINGS which was intended to remove spurious
gcc warnings over ten years ago but now causes warnings while
preventing none.  vax never used this define, so gcc 2.95 is fine
without it as well.

ok guenther@@ millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.17 2006/02/04 09:46:23 mbalmer Exp $
d57 1
a57 1
LDADD+=-lldap -llber
@


1.17
log
@Don't link libmilter against libldap and liblber if WANT_LDAP is defined
in /etc/mk.conf.

Fixes PR 4928

ok millert
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.16 2004/06/24 03:59:23 millert Exp $
a5 3
.if (${MACHINE_ARCH} != "vax")
ENVDEF+=-DSM_OMIT_BOGUS_WARNINGS
.endif
@


1.16
log
@Update to sendmail.8.13.0
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.15 2004/05/17 14:52:58 millert Exp $
d58 1
d63 1
@


1.15
log
@WHoops, only define _FFR_QUEUERETURN_DSN once.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.14 2004/05/11 19:40:56 millert Exp $
a10 1
ENVDEF+= -D_FFR_QUEUERETURN_DSN
@


1.14
log
@Build sendmail with -D_FFR_QUEUERETURN_DSN to enable confTO_QUEUERETURN_DSN.
This allows you to expire DSNs much faster than normal messages
which is useful for keeping the queue clean of spam bounces.
Requested by Chuck Yerkes.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.13 2003/08/22 19:17:22 millert Exp $
d11 1
a11 1
ENVDEF+= -D_FFR_QUEUERETURN_DSN -D_FFR_QUEUERETURN_DSN
@


1.13
log
@Enable support for DSN-specific timeouts.  This allows you to junk
bounces faster than normal messages so they don't clutter up the
queue so much.  Requested by Chuck Yerkes
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.12 2003/02/27 21:22:14 millert Exp $
d11 1
a11 1
ENVDEF+= -D_FFR_QUEUERETURN_DSN
@


1.12
log
@Change things back such that defining WANT_LIBMILTER in mk.conf
will build with libmilter support since that appears to be what
people do (though it was not actually intended to work that way).

Also add WANT_SMTPAUTH for SASL support and WANT_LDAP for LDAP map support.
These last two from Chuck Yerkes.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.11 2003/02/19 06:18:10 millert Exp $
d11 1
@


1.11
log
@Give milter the ghost of a chance of working; still not supported in any way.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.10 2002/07/20 17:30:26 millert Exp $
d54 8
@


1.10
log
@Fix up WANT_LIBMILTER stuff for people who want to use it; downsj@@downsj.com
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 2002/01/21 00:44:06 hugh Exp $
a44 12
.endif
.endif

.if defined(WANT_LIBMILTER)
ENVDEF+=-DMILTER -D_FFR_MILTER_ROOT_UNSAFE
LDADD+= -lmilter
.if exists(${.CURDIR}/../libmilter/${__objdir})
DPADD+= ${.CURDIR}/../libmilter/${__objdir}/libmilter.a
LDFLAGS+=-L${.CURDIR}/../libmilter/${__objdir}
.else
DPADD+= ${.CURDIR}/../libmilter/libmilter.a
LDFLAGS+=-L${.CURDIR}/../libmilter
@


1.9
log
@Particularly egregious pair of changes to get recent sendmail
working on vax. It's most likely this only succeeds because the
rearranged code doesn't trip a compiler bug.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.8 2002/01/09 21:25:33 millert Exp $
d49 1
@


1.8
log
@Add -DSM_CONF_SHM to allow the SharedMemoryKey option to be used (off by
default).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2001/10/01 20:18:19 millert Exp $
d6 4
a9 1
ENVDEF+= -DSM_OMIT_BOGUS_WARNINGS -DNEWDB -DMAP_REGEX
@


1.7
log
@Enable the volatiles that keep gcc from complaining about variables
that may possibly be clobbered by longjmp().
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 2001/09/11 19:02:47 millert Exp $
d7 1
a7 1
ENVDEF+= -DNETINET6 -DNEEDSGETIPNODE
@


1.6
log
@merge in sendmail 8.12.0 with BSD Makefiles and mdoc man pages
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 2000/09/03 18:41:12 espie Exp $
d6 1
a6 1
ENVDEF+= -DNEWDB -DMAP_REGEX
@


1.5
log
@Boring...  Add :L modifier to all tweakable variables tests.

Closes PR 1246
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 2000/06/18 00:04:20 itojun Exp $
a11 8
.if defined(WANT_LIBWRAP)
.if (${TCP_WRAPPERS:L} == "yes")
ENVDEF+=-DTCPWRAPPERS
DPADD+= ${LIBWRAP}
LDADD+= -lwrap
.endif
.endif

d31 30
@


1.4
log
@enable IPv6 support in sendmail.  by default, listens AF_INET only
(need DaemonPortOptions line to listen to AF_INET6 socket)

default address family handling is from 8.11.0beta3.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 2000/05/15 16:16:38 millert Exp $
d8 1
a8 1
.if (${YP} == "yes")
d13 1
a13 1
.if (${TCP_WRAPPERS} == "yes")
@


1.3
log
@ENVDEF= -> ENVDEF+= -- missed in last commit.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.2 2000/04/04 18:08:27 millert Exp $
d7 1
a7 2
# XXX - IPv6 support breaks IPv4 support since we don't do RFC2553
#ENVDEF+= -DNETINET6 -DNEEDSGETIPNODE
@


1.2
log
@Clarify IPv6 comment
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1 2000/04/02 19:48:09 millert Exp $
d6 1
a6 1
ENVDEF= -DNEWDB -DMAP_REGEX
@


1.1
log
@Remove sendmail's `Build' scaffolding and add real Makefiles
praliases should be in section 1, not 8
Use arc4random(3) instead of random(3)
Add some sample OpenBSD .mc files
@
text
@d1 1
a1 1
#	$OpenBSD$
d7 1
a7 1
# XXX - adding IPv6 support seems to break IPv4 support in OpenBSD
@

