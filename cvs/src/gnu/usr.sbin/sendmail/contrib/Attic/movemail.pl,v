head	1.2;
access;
symbols
	OPENBSD_5_6:1.1.1.1.0.58
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.56
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.52
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.50
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.48
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.46
	OPENBSD_5_0:1.1.1.1.0.44
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.42
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.40
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.36
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.38
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.34
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.32
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.30
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.28
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.26
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.24
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.22
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.20
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.18
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.16
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.14
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.10
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.12
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.8
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.6
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.4
	OPENBSD_3_0_BASE:1.1.1.1
	SENDMAIL_8_12_0:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.2
	OPENBSD_2_9_BASE:1.1.1.1
	SENDMAIL_8_11_2:1.1.1.1
	SENDMAIL_INC:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.09.17.18.49.50;	author matthieu;	state dead;
branches;
next	1.1;
commitid	M7i5giHIoz3DMlTU;

1.1
date	2001.01.15.20.52.41;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.01.15.20.52.41;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bye.
@
text
@#!/usr/bin/perl -w
#
# Move old mail messages between queues by calling re-mqueue.pl.
#
# movemail.pl [config-script]
#
# Default config script is /usr/local/etc/movemail.conf.
#
# Graeme Hewson <graeme.hewson@@oracle.com>, June 2000
#

use strict;

# Load external program as subroutine to avoid
# compilation overhead on each call

sub loadsub {
    my $fn = shift
    	or die "Filename not specified";
    my $len = (stat($fn))[7]
    	or die "Can't stat $fn: $!";
    open PROG, "< $fn"
    	or die "Can't open $fn: $!";
    my $prog;
    read PROG, $prog, $len
    	or die "Can't read $fn: $!";
    close PROG;
    eval join "",
	'return sub { my @@ARGV = @@_; $0 = $fn; no strict;',
    	"$prog",
	'};';
}

my $progname = $0;
my $lastage = -1;
my $LOCK_EX = 2;
my $LOCK_NB = 4;

# Load and eval config script

my $conffile = shift || "/usr/local/etc/movemail.conf";
my $len = (stat($conffile))[7]
    or die "Can't stat $conffile: $!";
open CONF, "< $conffile"
    or die "Can't open $conffile: $!";
my $conf;
read CONF, $conf, $len
    or die "Can't read $conffile: $!";
close CONF;
use vars qw(@@queues $subqbase @@ages $remqueue $lockfile);
eval $conf;

if ($#queues < 1) {
    print "$progname: there must be at least two queues\n";
    exit 1;
}

if ($#ages != ($#queues - 1)) {
    print "$progname: wrong number of ages (should be one less than number of queues)\n";
    exit 1;
}

# Get lock or exit quietly.  Useful when running from cron.

if ($lockfile) {
    open LOCK, ">>$lockfile"
	or die "Can't open lock file: $!";
    unless (flock LOCK, $LOCK_EX|$LOCK_NB) {
	close LOCK;
	exit 0;
    }
}

my $remsub = loadsub($remqueue);

# Go through directories in reverse order so as to check spool files only once

for (my $n = $#queues - 1; $n >= 0; $n--) {
    unless ($ages[$n] =~ /^\d+$/) {
	print "$progname: invalid number $ages[$n] in ages array\n";
	exit 1;
    }
    unless ($lastage < 0 || $ages[$n] < $lastage) {
	print "$progname: age $lastage is not > previous value $ages[$n]\n";
	exit 1;
    }
    $lastage = $ages[$n];
    if ($subqbase) {
	my $subdir;
	opendir(DIR, $queues[$n])
	    or die "Can't open $queues[$n]: $!";
	foreach $subdir ( grep { /^$subqbase/ } readdir DIR) {
	    &$remsub("$queues[$n]/$subdir", "$queues[$n+1]/$subdir",
		$ages[$n]);
	}
	closedir(DIR);
    } else {
	# Not using subdirectories
	&$remsub($queues[$n], $queues[$n+1], $ages[$n]);
    }
}

if ($lockfile) {
    unlink $lockfile;
    close LOCK;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@sendmail 8.11.2
@
text
@@
