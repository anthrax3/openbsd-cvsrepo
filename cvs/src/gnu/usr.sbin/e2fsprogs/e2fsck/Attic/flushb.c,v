head	1.2;
access;
symbols
	OPENBSD_2_3:1.1.1.1.0.4
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.2
	OPENBSD_2_2_BASE:1.1.1.1
	E2FSPROGS110:1.1.1.1
	E2FSPROGS:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	98.07.07.18.21.11;	author art;	state dead;
branches;
next	1.1;

1.1
date	97.06.14.07.18.49;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.06.14.07.18.49;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.2
log
@old, big, not compiled and not used, die
@
text
@/*
 * flushb.c --- This routine flushes the disk buffers for a disk
 */

#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <stdlib.h>
#include <fcntl.h>
#include <sys/ioctl.h>

#ifdef HAVE_LINUX_FS_H
#include <linux/fs.h>
#endif

#ifdef __STDC__
#define NOARGS void
#else
#define NOARGS
#define const
#endif

const char *progname;

static void usage(NOARGS)
{
	fprintf(stderr, "Usage: %s disk\n", progname);
	exit(1);
}	
	
int main(int argc, char **argv)
{
	int	fd;
	
	progname = argv[0];
	if (argc != 2)
		usage();

	fd = open(argv[1], O_RDONLY, 0);
	if (fd < 0) {
		perror("open");
		exit(1);
	}
	/*
	 * Note: to reread the partition table, use the ioctl
	 * BLKRRPART instead of BLKFSLBUF.
	 */
#ifdef BLKFLSBUF
	if (ioctl(fd, BLKFLSBUF, 0) < 0) {
		perror("ioctl BLKFLSBUF");
		exit(1);
	}
	return 0;
#else
	fprintf(stderr,
		"BLKFLSBUF ioctl not supported!  Can't flush buffers.\n");
	return 1;
#endif
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Initial import of (unmodifed) e2fsprogs 1.10.
@
text
@@
