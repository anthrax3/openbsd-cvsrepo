head	1.86;
access;
symbols
	OPENBSD_6_0:1.83.0.4
	OPENBSD_6_0_BASE:1.83
	OPENBSD_5_9:1.83.0.2
	OPENBSD_5_9_BASE:1.83
	OPENBSD_5_8:1.78.0.4
	OPENBSD_5_8_BASE:1.78
	OPENBSD_5_7:1.77.0.2
	OPENBSD_5_7_BASE:1.77
	OPENBSD_5_6:1.71.0.4
	OPENBSD_5_6_BASE:1.71
	OPENBSD_5_5:1.69.0.4
	OPENBSD_5_5_BASE:1.69
	OPENBSD_5_4:1.66.0.2
	OPENBSD_5_4_BASE:1.66
	OPENBSD_5_3:1.62.0.2
	OPENBSD_5_3_BASE:1.62
	OPENBSD_5_2:1.59.0.2
	OPENBSD_5_2_BASE:1.59
	OPENBSD_5_1_BASE:1.55
	OPENBSD_5_1:1.55.0.2
	OPENBSD_5_0:1.53.0.2
	OPENBSD_5_0_BASE:1.53
	OPENBSD_4_9:1.51.0.2
	OPENBSD_4_9_BASE:1.51
	OPENBSD_4_8:1.44.0.2
	OPENBSD_4_8_BASE:1.44
	OPENBSD_4_7:1.35.0.2
	OPENBSD_4_7_BASE:1.35
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4;
locks; strict;
comment	@# @;


1.86
date	2017.02.16.12.18.38;	author nicm;	state Exp;
branches;
next	1.85;
commitid	9JPgA7ybwe3HudvI;

1.85
date	2017.01.24.21.50.22;	author nicm;	state Exp;
branches;
next	1.84;
commitid	RhpGrb29XR7z4pyo;

1.84
date	2017.01.23.10.09.43;	author nicm;	state Exp;
branches;
next	1.83;
commitid	anZBbATBZNigju2F;

1.83
date	2015.12.08.01.10.31;	author nicm;	state Exp;
branches;
next	1.82;
commitid	Q7y3PTVPjE0eQDqD;

1.82
date	2015.11.13.08.09.28;	author nicm;	state Exp;
branches;
next	1.81;
commitid	3vFd8TIqn7NVGuk0;

1.81
date	2015.10.27.13.23.24;	author nicm;	state Exp;
branches;
next	1.80;
commitid	g6GdEJXfBNprXHEK;

1.80
date	2015.09.11.14.41.50;	author nicm;	state Exp;
branches;
next	1.79;
commitid	ufD4awhmzmSoxn7X;

1.79
date	2015.08.29.08.30.54;	author nicm;	state Exp;
branches;
next	1.78;
commitid	RrlCW4OYH7he0yBf;

1.78
date	2015.04.27.16.25.57;	author nicm;	state Exp;
branches;
next	1.77;
commitid	0WBWxxZyxaAFVhmn;

1.77
date	2015.02.09.23.18.19;	author nicm;	state Exp;
branches;
next	1.76;
commitid	ioNz7xwAGnQamDDi;

1.76
date	2014.10.27.22.40.29;	author nicm;	state Exp;
branches;
next	1.75;
commitid	zhFgIWiwvjDPT6BS;

1.75
date	2014.10.22.23.11.41;	author nicm;	state Exp;
branches;
next	1.74;
commitid	rjYMtvWWeOUV78xG;

1.74
date	2014.10.20.23.01.51;	author nicm;	state Exp;
branches;
next	1.73;
commitid	SOqNlOPkAlwdgWzB;

1.73
date	2014.10.20.22.57.46;	author nicm;	state Exp;
branches;
next	1.72;
commitid	DssG58kd71Zj9kpF;

1.72
date	2014.10.20.22.44.30;	author nicm;	state Exp;
branches;
next	1.71;
commitid	eaLamSccGV2UFQVr;

1.71
date	2014.04.16.21.02.41;	author nicm;	state Exp;
branches;
next	1.70;

1.70
date	2014.03.31.21.34.08;	author nicm;	state Exp;
branches;
next	1.69;

1.69
date	2014.01.28.23.07.09;	author nicm;	state Exp;
branches;
next	1.68;

1.68
date	2014.01.27.23.57.35;	author nicm;	state Exp;
branches;
next	1.67;

1.67
date	2014.01.22.14.43.42;	author nicm;	state Exp;
branches;
next	1.66;

1.66
date	2013.03.25.10.09.05;	author nicm;	state Exp;
branches;
next	1.65;

1.65
date	2013.03.24.09.54.10;	author nicm;	state Exp;
branches;
next	1.64;

1.64
date	2013.03.24.09.31.38;	author nicm;	state Exp;
branches;
next	1.63;

1.63
date	2013.03.24.09.30.41;	author nicm;	state Exp;
branches;
next	1.62;

1.62
date	2013.01.18.02.16.21;	author nicm;	state Exp;
branches;
next	1.61;

1.61
date	2012.09.03.09.57.57;	author nicm;	state Exp;
branches;
next	1.60;

1.60
date	2012.09.03.09.32.38;	author nicm;	state Exp;
branches;
next	1.59;

1.59
date	2012.07.08.16.04.38;	author nicm;	state Exp;
branches;
next	1.58;

1.58
date	2012.07.08.15.24.08;	author nicm;	state Exp;
branches;
next	1.57;

1.57
date	2012.06.18.13.16.42;	author nicm;	state Exp;
branches;
next	1.56;

1.56
date	2012.03.17.22.35.09;	author nicm;	state Exp;
branches;
next	1.55;

1.55
date	2011.08.26.10.53.16;	author nicm;	state Exp;
branches;
next	1.54;

1.54
date	2011.08.25.10.52.23;	author nicm;	state Exp;
branches;
next	1.53;

1.53
date	2011.06.05.11.19.03;	author nicm;	state Exp;
branches;
next	1.52;

1.52
date	2011.06.05.10.53.05;	author nicm;	state Exp;
branches;
next	1.51;

1.51
date	2011.01.08.00.48.54;	author nicm;	state Exp;
branches;
next	1.50;

1.50
date	2011.01.04.02.03.41;	author nicm;	state Exp;
branches;
next	1.49;

1.49
date	2011.01.04.00.42.46;	author nicm;	state Exp;
branches;
next	1.48;

1.48
date	2011.01.01.16.51.21;	author nicm;	state Exp;
branches;
next	1.47;

1.47
date	2010.12.30.23.16.18;	author nicm;	state Exp;
branches;
next	1.46;

1.46
date	2010.10.23.13.04.34;	author nicm;	state Exp;
branches;
next	1.45;

1.45
date	2010.09.11.16.19.22;	author nicm;	state Exp;
branches;
next	1.44;

1.44
date	2010.06.29.03.30.13;	author nicm;	state Exp;
branches;
next	1.43;

1.43
date	2010.06.21.21.44.09;	author nicm;	state Exp;
branches;
next	1.42;

1.42
date	2010.05.26.16.44.32;	author nicm;	state Exp;
branches;
next	1.41;

1.41
date	2010.05.05.23.24.23;	author nicm;	state Exp;
branches;
next	1.40;

1.40
date	2010.05.04.17.28.16;	author nicm;	state Exp;
branches;
next	1.39;

1.39
date	2010.05.04.08.48.06;	author nicm;	state Exp;
branches;
next	1.38;

1.38
date	2010.05.03.16.06.32;	author nicm;	state Exp;
branches;
next	1.37;

1.37
date	2010.04.06.21.35.44;	author nicm;	state Exp;
branches;
next	1.36;

1.36
date	2010.03.22.19.07.52;	author nicm;	state Exp;
branches;
next	1.35;

1.35
date	2010.01.31.11.11.28;	author nicm;	state Exp;
branches;
next	1.34;

1.34
date	2010.01.07.20.52.18;	author nicm;	state Exp;
branches;
next	1.33;

1.33
date	2009.12.08.07.49.31;	author nicm;	state Exp;
branches;
next	1.32;

1.32
date	2009.12.03.17.44.02;	author nicm;	state Exp;
branches;
next	1.31;

1.31
date	2009.12.01.18.42.38;	author nicm;	state Exp;
branches;
next	1.30;

1.30
date	2009.11.18.17.02.17;	author nicm;	state Exp;
branches;
next	1.29;

1.29
date	2009.11.18.13.16.33;	author nicm;	state Exp;
branches;
next	1.28;

1.28
date	2009.11.04.22.44.53;	author nicm;	state Exp;
branches;
next	1.27;

1.27
date	2009.11.04.21.04.43;	author nicm;	state Exp;
branches;
next	1.26;

1.26
date	2009.11.04.20.50.11;	author nicm;	state Exp;
branches;
next	1.25;

1.25
date	2009.10.26.17.46.33;	author nicm;	state Exp;
branches;
next	1.24;

1.24
date	2009.10.22.19.41.51;	author nicm;	state Exp;
branches;
next	1.23;

1.23
date	2009.10.21.20.11.47;	author nicm;	state Exp;
branches;
next	1.22;

1.22
date	2009.10.11.10.04.27;	author nicm;	state Exp;
branches;
next	1.21;

1.21
date	2009.10.10.17.19.38;	author nicm;	state Exp;
branches;
next	1.20;

1.20
date	2009.10.10.15.03.01;	author nicm;	state Exp;
branches;
next	1.19;

1.19
date	2009.10.06.07.19.32;	author nicm;	state Exp;
branches;
next	1.18;

1.18
date	2009.09.24.14.17.09;	author nicm;	state Exp;
branches;
next	1.17;

1.17
date	2009.09.23.06.18.47;	author nicm;	state Exp;
branches;
next	1.16;

1.16
date	2009.09.20.19.15.01;	author nicm;	state Exp;
branches;
next	1.15;

1.15
date	2009.08.31.20.46.19;	author nicm;	state Exp;
branches;
next	1.14;

1.14
date	2009.08.25.12.18.51;	author nicm;	state Exp;
branches;
next	1.13;

1.13
date	2009.08.11.17.18.35;	author nicm;	state Exp;
branches;
next	1.12;

1.12
date	2009.08.08.21.52.43;	author nicm;	state Exp;
branches;
next	1.11;

1.11
date	2009.07.30.16.32.12;	author nicm;	state Exp;
branches;
next	1.10;

1.10
date	2009.07.22.20.56.58;	author nicm;	state Exp;
branches;
next	1.9;

1.9
date	2009.07.19.13.21.40;	author nicm;	state Exp;
branches;
next	1.8;

1.8
date	2009.07.17.18.45.08;	author nicm;	state Exp;
branches;
next	1.7;

1.7
date	2009.07.14.06.30.45;	author nicm;	state Exp;
branches;
next	1.6;

1.6
date	2009.07.13.17.47.46;	author nicm;	state Exp;
branches;
next	1.5;

1.5
date	2009.07.09.15.47.49;	author nicm;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.25.07.42.41;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.24.23.32.18;	author nicm;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.24.22.49.56;	author nicm;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.01.22.58.49;	author nicm;	state Exp;
branches;
next	;


desc
@@


1.86
log
@Merge clear-history into capture-pane.
@
text
@# $OpenBSD: Makefile,v 1.85 2017/01/24 21:50:22 nicm Exp $

PROG=	tmux
SRCS=	alerts.c \
	arguments.c \
	attributes.c \
	cfg.c \
	client.c \
	cmd-attach-session.c \
	cmd-bind-key.c \
	cmd-break-pane.c \
	cmd-capture-pane.c \
	cmd-choose-buffer.c \
	cmd-choose-client.c \
	cmd-choose-tree.c \
	cmd-command-prompt.c \
	cmd-confirm-before.c \
	cmd-copy-mode.c \
	cmd-detach-client.c \
	cmd-display-message.c \
	cmd-display-panes.c \
	cmd-find-window.c \
	cmd-if-shell.c \
	cmd-join-pane.c \
	cmd-kill-pane.c \
	cmd-kill-server.c \
	cmd-kill-session.c \
	cmd-kill-window.c \
	cmd-list-buffers.c \
	cmd-list-clients.c \
	cmd-list-keys.c \
	cmd-list-panes.c \
	cmd-list-sessions.c \
	cmd-list-windows.c \
	cmd-list.c \
	cmd-load-buffer.c \
	cmd-lock-server.c \
	cmd-move-window.c \
	cmd-new-session.c \
	cmd-new-window.c \
	cmd-paste-buffer.c \
	cmd-pipe-pane.c \
	cmd-refresh-client.c \
	cmd-rename-session.c \
	cmd-rename-window.c \
	cmd-resize-pane.c \
	cmd-respawn-pane.c \
	cmd-respawn-window.c \
	cmd-rotate-window.c \
	cmd-run-shell.c \
	cmd-save-buffer.c \
	cmd-select-layout.c \
	cmd-select-pane.c \
	cmd-select-window.c \
	cmd-send-keys.c \
	cmd-set-buffer.c \
	cmd-set-environment.c \
	cmd-set-hook.c \
	cmd-set-option.c \
	cmd-show-environment.c \
	cmd-show-messages.c \
	cmd-show-options.c \
	cmd-source-file.c \
	cmd-split-window.c \
	cmd-string.c \
	cmd-swap-pane.c \
	cmd-swap-window.c \
	cmd-switch-client.c \
	cmd-unbind-key.c \
	cmd-wait-for.c \
	cmd.c \
	cmd-find.c \
	cmd-queue.c \
	colour.c \
	control.c \
	control-notify.c \
	environ.c \
	format.c \
	grid-view.c \
	grid.c \
	hooks.c \
	input-keys.c \
	input.c \
	job.c \
	key-bindings.c \
	key-string.c \
	layout-custom.c \
	layout-set.c \
	layout.c \
	log.c \
	names.c \
	notify.c \
	options-table.c \
	options.c \
	paste.c \
	proc.c \
	procname.c \
	pty.c \
	resize.c \
	screen-redraw.c \
	screen-write.c \
	screen.c \
	server-client.c \
	server-fn.c \
	server.c \
	session.c \
	signal.c \
	status.c \
	style.c \
	tmux.c \
	tty-acs.c \
	tty-keys.c \
	tty-term.c \
	tty.c \
	utf8.c \
	window-choose.c \
	window-clock.c \
	window-copy.c \
	window.c \
	xmalloc.c \
	xterm-keys.c

CDIAGFLAGS+= -Wno-long-long -Wall -W -Wnested-externs -Wformat=2
CDIAGFLAGS+= -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations
CDIAGFLAGS+= -Wwrite-strings -Wshadow -Wpointer-arith -Wsign-compare
CDIAGFLAGS+= -Wundef -Wbad-function-cast -Winline -Wcast-align

LDADD=  -lutil -lcurses -levent
DPADD=  ${LIBUTIL} ${LIBCURSES} ${LIBEVENT}

.include <bsd.prog.mk>
@


1.85
log
@Fixed keys for choose mode, and remove the last mode keys bits.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.84 2017/01/23 10:09:43 nicm Exp $
a15 1
	cmd-clear-history.c \
@


1.84
log
@Open /dev/ptm before pledge() and save it to be used for PTMGET later
(this means inlining forkpty()).

ok deraadt
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.83 2015/12/08 01:10:31 nicm Exp $
a91 1
	mode-key.c \
@


1.83
log
@Add hooks infrastructure, basic commands (set-hook, show-hooks) and a
couple of not very useful client hooks. This will eventually let
commands be run at various points and on notifications. Joint work with
Thomas Adam.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.82 2015/11/13 08:09:28 nicm Exp $
d100 1
@


1.82
log
@Long overdue change to the way we store cells in the grid: now, instead
of storing a full grid_cell with UTF-8 data and everything, store a new
type grid_cell_entry. This can either be the cell itself (for ASCII
cells), or an offset into an extended array (per line) for UTF-8
data.

This avoid a large (8 byte) overhead on non-UTF-8 cells (by far the
majority for most users) without the complexity of the shadow array we
had before. Grid memory without any UTF-8 is about half.

The disadvantage that cells can no longer be modified in place and need
to be copied out of the grid and back but it turned out to be lot less
complicated than I expected.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.81 2015/10/27 13:23:24 nicm Exp $
d59 1
d82 1
@


1.81
log
@Break the common process set up, event loop and imsg dispatch code
between server and client out into a separate internal API. This will
make it easier to add another process.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.80 2015/09/11 14:41:50 nicm Exp $
a78 1
	grid-cell.c \
@


1.80
log
@Merge delete-buffer into cmd-set-buffer.c and change the paste buffer
API so it has one paste_free() rather than free_top and free_name
(everywhere that uses it already has the right pointer).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.79 2015/08/29 08:30:54 nicm Exp $
d97 1
@


1.79
log
@Move alerts onto events rather than checking every loop.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.78 2015/04/27 16:25:57 nicm Exp $
a19 1
	cmd-delete-buffer.c \
@


1.78
log
@Rewrite of the target resolution internals to be simpler and more
consistent but with much less duplication, but keeping the same internal
API. Also adds more readable aliases for some of the special tokens used
in targets (eg "{start}" instead of "^"). Some behaviours may have
changed, for example prefix matches now happen before fnmatch.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.77 2015/02/09 23:18:19 nicm Exp $
d4 2
a5 1
SRCS=	arguments.c \
a104 1
	server-window.c \
@


1.77
log
@Merge clock-mode command into copy-mode.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.76 2014/10/27 22:40:29 nicm Exp $
d72 1
@


1.76
log
@Merge linkw and movew which are virtually identical.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.75 2014/10/22 23:11:41 nicm Exp $
a15 1
	cmd-clock-mode.c \
@


1.75
log
@Merge unlink-window into kill-window.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.74 2014/10/20 23:01:51 nicm Exp $
a30 1
	cmd-link-window.c \
@


1.74
log
@Move suspend-client code into detach-client.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.73 2014/10/20 22:57:46 nicm Exp $
a71 1
	cmd-unlink-window.c \
@


1.73
log
@Move tiny has-session function into cmd-new-session.c.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.72 2014/10/20 22:44:30 nicm Exp $
a67 1
	cmd-suspend-client.c \
@


1.72
log
@Move list-commands into list-keys.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.71 2014/04/16 21:02:41 nicm Exp $
a24 1
	cmd-has-session.c \
@


1.71
log
@Remove the choose-list command to prepare for some later choose-* work.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.70 2014/03/31 21:34:08 nicm Exp $
a34 1
	cmd-list-commands.c \
@


1.70
log
@Having three *clock* files is ridiculous, remove clock.c.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.69 2014/01/28 23:07:09 nicm Exp $
a13 1
	cmd-choose-list.c \
@


1.69
log
@Allow replacing each of the many sets of separate foo-{fg,bg,attr}
options with a single foo-style option. For example:

    set -g status-fg yellow
    set -g status-bg red
    set -g status-attr blink

Becomes:

    set -g status-style fg=yellow,bg=red,blink

The -a flag to set can be used to add to rather than replace a style. So:

    set -g status-bg red

Becomes:

    set -ag status-style bg=red

Currently this is fully backwards compatible (all *-{fg,bg,attr} options
remain) but the plan is to deprecate them over time.

From Tiago Cunha.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.68 2014/01/27 23:57:35 nicm Exp $
a7 1
	clock.c \
@


1.68
log
@Merge start-server into kill-server.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.67 2014/01/22 14:43:42 nicm Exp $
d116 1
@


1.67
log
@Merge server-info into show-messages and remove some not useful output.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.66 2013/03/25 10:09:05 nicm Exp $
a70 1
	cmd-start-server.c \
@


1.66
log
@Add a wait-for command which blocks a client on a named channel until it
is woken up again (with wait-for -S). From Thiago Padilha.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.65 2013/03/24 09:54:10 nicm Exp $
a62 1
	cmd-server-info.c \
@


1.65
log
@Add a command queue to standardize and simplify commands that call other
commands and allow a command to block execution of subsequent
commands. This allows run-shell and if-shell to be synchronous which has
been much requested.

Each client has a default command queue and commands are consumed one at
a time from it. A command may suspend execution from the queue by
returning CMD_RETURN_WAIT and then resume it by calling cmd_continue() -
for example run-shell does this from the callback that is fired after
the job is freed.

When the command queue becomes empty, command clients are automatically
exited (unless attaching). A callback is also fired - this is used for
nested commands in, for example, if-shell which can block execution of
the client's cmdq until a new cmdq becomes empty.

Also merge all the old error/info/print functions together and lose the
old curclient/cmdclient distinction - a cmdq is bound to one client (or
none if in the configuration file), this is a command client if
c->session is NULL otherwise an attached client.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.64 2013/03/24 09:31:38 nicm Exp $
d80 1
@


1.64
log
@Merge send-prefix into send-keys.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.63 2013/03/24 09:30:41 nicm Exp $
d81 1
@


1.63
log
@Merge show-buffer into save-buffer.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.62 2013/01/18 02:16:21 nicm Exp $
a62 1
	cmd-send-prefix.c \
@


1.62
log
@Rather than having two grids for each pane, one for ASCII and one for
UTF-8, collapse the two together. Simplifies the code at the expense of
more memory (which can probably be reduced again later).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.61 2012/09/03 09:57:57 nicm Exp $
a67 1
	cmd-show-buffer.c \
@


1.61
log
@add cmd-choose-list to allow arbitrary options to be selected. From
Thomas Adam.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.60 2012/09/03 09:32:38 nicm Exp $
d88 1
a88 1
	grid-utf8.c \
@


1.60
log
@Send notifications to control clients. Also don't redraw client when
suspended.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.59 2012/07/08 16:04:38 nicm Exp $
d15 1
@


1.59
log
@Add choose-tree command to show windows and sessions in the same
list. Change choose-window and -session to use the same code. From
Thomas Adam.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.58 2012/07/08 15:24:08 nicm Exp $
d84 1
@


1.58
log
@Sort SRCS list.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.57 2012/06/18 13:16:42 nicm Exp $
d15 1
a15 2
	cmd-choose-session.c \
	cmd-choose-window.c \
@


1.57
log
@Add a skeleton mode to tmux (called "control mode") that let's tmux
commands be sent and output received on stdout. This can be used to
integrate with other terminal emulators and should allow some other
things to be made simpler later. More to come so doesn't do much yet and
deliberately not documented.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.56 2012/03/17 22:35:09 nicm Exp $
d4 40
a43 12
SRCS=	arguments.c attributes.c cfg.c client.c clock.c \
	cmd-attach-session.c cmd-bind-key.c \
	cmd-break-pane.c cmd-choose-session.c cmd-choose-window.c \
	cmd-clear-history.c cmd-clock-mode.c cmd-command-prompt.c \
	cmd-confirm-before.c cmd-copy-mode.c \
	cmd-choose-buffer.c cmd-delete-buffer.c cmd-detach-client.c \
	cmd-find-window.c cmd-has-session.c cmd-kill-pane.c \
	cmd-kill-server.c cmd-kill-session.c cmd-kill-window.c \
	cmd-link-window.c cmd-list-buffers.c \
	cmd-list-clients.c cmd-list-commands.c cmd-list-keys.c \
	cmd-list-sessions.c cmd-list-windows.c cmd-list-panes.c \
	cmd-list.c cmd-load-buffer.c cmd-join-pane.c \
d45 3
a47 1
	cmd-move-window.c cmd-new-session.c cmd-new-window.c \
d49 80
a128 22
	cmd-refresh-client.c cmd-respawn-pane.c \
	cmd-rename-session.c cmd-rename-window.c cmd-resize-pane.c \
	cmd-respawn-window.c cmd-rotate-window.c cmd-save-buffer.c \
	cmd-select-layout.c cmd-select-pane.c cmd-select-window.c \
	cmd-send-keys.c cmd-send-prefix.c cmd-server-info.c cmd-set-buffer.c \
	cmd-set-option.c cmd-show-buffer.c \
	cmd-show-messages.c cmd-show-options.c \
	cmd-source-file.c cmd-split-window.c cmd-start-server.c cmd-string.c \
	cmd-run-shell.c cmd-suspend-client.c cmd-swap-pane.c cmd-swap-window.c \
	cmd-switch-client.c cmd-unbind-key.c cmd-unlink-window.c \
	cmd-set-environment.c cmd-show-environment.c cmd-choose-client.c \
	cmd-display-message.c cmd-display-panes.c cmd-if-shell.c \
	cmd-pipe-pane.c cmd-capture-pane.c cmd.c \
	colour.c environ.c grid-view.c grid-utf8.c grid.c input-keys.c \
	input.c key-bindings.c key-string.c format.c control.c \
	layout-custom.c layout-set.c layout.c log.c job.c notify.c \
	mode-key.c names.c options.c options-table.c paste.c procname.c \
	resize.c screen-redraw.c screen-write.c screen.c session.c status.c \
	signal.c server-fn.c server.c server-client.c server-window.c \
	tmux.c tty-acs.c tty-keys.c tty-term.c tty.c utf8.c \
	window-choose.c window-clock.c window-copy.c window.c \
	xterm-keys.c xmalloc.c
@


1.56
log
@Add notify hooks for various events, the functions are currently empty
stubs but will be filled in for control mode later. From George Nachman.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.55 2011/08/26 10:53:16 nicm Exp $
d33 1
a33 1
	input.c key-bindings.c key-string.c format.c \
@


1.55
log
@Add initial framework for more powerful formatting of command output and
use it for list-{panes,windows,sessions}. This allows more descriptive
replacements (such as #{session_name}) and conditionals.

Later this will be used for status_replace and list-keys and other
places.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.54 2011/08/25 10:52:23 nicm Exp $
d34 1
a34 1
	layout-custom.c layout-set.c layout.c log.c job.c \
@


1.54
log
@-lm is no longer needed, from Tiago Cunha.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.53 2011/06/05 11:19:03 nicm Exp $
d33 1
a33 1
	input.c key-bindings.c key-string.c \
@


1.53
log
@Add a respawn-pane command, from Marcel Partap.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.52 2011/06/05 10:53:05 nicm Exp $
d47 2
a48 2
LDADD=  -lutil -lcurses -levent -lm
DPADD=  ${LIBUTIL} ${LIBCURSES} ${LIBEVENT} ${LIBM}
@


1.52
log
@Get rid of the layout string code which tries to walk through the layout
hierarchy and instead just look at what panes are actually in the window.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.51 2011/01/08 00:48:54 nicm Exp $
d19 1
a19 1
	cmd-refresh-client.c \
@


1.51
log
@Accept colours of the hex form #ffffff and translate to the nearest from
the xterm(1) 256-colour set.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.50 2011/01/04 02:03:41 nicm Exp $
d34 1
a34 1
	layout-custom.c layout-set.c layout-string.c layout.c log.c job.c \
@


1.50
log
@Now that parsing is common, merge some of the small, related commands
together to use the same code.

Also add some arguments (such as -n and -p) to some commands to match
existing commands.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.49 2011/01/04 00:42:46 nicm Exp $
d47 2
a48 2
LDADD=  -lutil -lcurses -levent
DPADD=  ${LIBUTIL} ${LIBCURSES} ${LIBEVENT}
@


1.49
log
@Clean up and simplify tmux command argument parsing.

Originally, tmux commands were parsed in the client process into a
struct with the command data which was then serialised and sent to the
server to be executed. The parsing was later moved into the server (an
argv was sent from the client), but the parse step and intermediate
struct was kept.

This change removes that struct and the separate parse step. Argument
parsing and printing is now common to all commands (in arguments.c) with
each command left with just an optional check function (to validate the
arguments at parse time), the exec function and a function to set up any
key bindings (renamed from the old init function).

This is overall more simple and consistent.

There should be no changes to any commands behaviour or syntax although
as this touches every command please watch for any unexpected changes.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.48 2011/01/01 16:51:21 nicm Exp $
d12 1
a12 1
	cmd-last-pane.c cmd-last-window.c cmd-link-window.c cmd-list-buffers.c \
d16 1
a16 1
	cmd-lock-server.c cmd-lock-client.c cmd-lock-session.c \
d18 2
a19 2
	cmd-next-layout.c cmd-next-window.c cmd-paste-buffer.c \
	cmd-previous-layout.c cmd-previous-window.c cmd-refresh-client.c \
d24 2
a25 2
	cmd-set-option.c cmd-set-window-option.c cmd-show-buffer.c \
	cmd-show-messages.c cmd-show-options.c cmd-show-window-options.c \
@


1.48
log
@Move the user-visible parts of all options (names, types, limit, default
values) together into one set of tables in options-table.c. Also clean
up and simplify cmd-set-options.c and move a common print function into
option-table.c.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.47 2010/12/30 23:16:18 nicm Exp $
d4 1
a4 1
SRCS=	attributes.c cfg.c client.c clock.c \
d10 1
a10 1
	cmd-find-window.c cmd-generic.c cmd-has-session.c cmd-kill-pane.c \
@


1.47
log
@Change from a per-session stack of buffers to one global stack which is
much more convenient and also simplifies lot of code. This renders
copy-buffer useless and makes buffer-limit now a server option.

By Tiago Cunha.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.46 2010/10/23 13:04:34 nicm Exp $
d35 1
a35 1
	mode-key.c names.c options.c paste.c procname.c \
@


1.46
log
@Add a last-pane command (bound to ; by default). Requested ages ago by
somebody whose name I have forgotten.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.45 2010/09/11 16:19:22 nicm Exp $
d8 1
a8 1
	cmd-confirm-before.c cmd-copy-buffer.c cmd-copy-mode.c \
@


1.45
log
@Use UTF-8 line drawing characters on UTF-8 terminals. Fixes some stupid
terminals (I'm looking at you, putty) which disable the vt100 ACS mode
switching sequences in UTF-8 mode.

Also on terminals without ACS at all, use ASCII equivalents where
obvious.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.44 2010/06/29 03:30:13 nicm Exp $
d12 1
a12 1
	cmd-last-window.c cmd-link-window.c cmd-list-buffers.c \
@


1.44
log
@Custom layouts. list-windows command displays the layout as a string (such as
"bb62,159x48,0,0{79x48,0,0,79x48,80,0}") and it can be applied to another
window (with the same number of panes or fewer) using select-layout.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.43 2010/06/21 21:44:09 nicm Exp $
d38 1
a38 1
	tmux.c tty-keys.c tty-term.c tty.c utf8.c \
@


1.43
log
@Add a choose-buffer command for easier use of the paste buffer stack.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.42 2010/05/26 16:44:32 nicm Exp $
d34 1
a34 1
	layout-set.c layout-string.c layout.c log.c job.c \
@


1.42
log
@Move imsg into libutil and add a man page.

Minor bump for libutil.

Previous versions of this diff and man page looked at by various people.

"you should just commit" deraadt
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.41 2010/05/05 23:24:23 nicm Exp $
d9 1
a9 1
	cmd-delete-buffer.c cmd-detach-client.c \
@


1.41
log
@Identical behaviour to select-prompt can now be obtained with
command-prompt, so remove select-prompt and change ' to be bound to
command-prompt -p index "select-window -t :%%".
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.40 2010/05/04 17:28:16 nicm Exp $
d33 1
a33 1
	imsg.c imsg-buffer.c input.c key-bindings.c key-string.c \
@


1.40
log
@Put this back in with the initialisation in the right order.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.39 2010/05/04 08:48:06 nicm Exp $
d22 5
a26 6
	cmd-select-layout.c cmd-select-pane.c \
	cmd-select-prompt.c cmd-select-window.c cmd-send-keys.c \
	cmd-send-prefix.c cmd-server-info.c cmd-set-buffer.c cmd-set-option.c \
	cmd-set-window-option.c cmd-show-buffer.c cmd-show-messages.c \
	cmd-show-options.c cmd-show-window-options.c cmd-source-file.c \
	cmd-split-window.c cmd-start-server.c cmd-string.c cmd-if-shell.c \
d30 1
a30 1
	cmd-display-message.c cmd-display-panes.c \
@


1.39
log
@Revert last change, it appears to be broken somehow.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.37 2010/04/06 21:35:44 nicm Exp $
d38 1
a38 1
	server-fn.c server.c server-client.c server-window.c \
@


1.38
log
@Make signal handler setup/teardown two common functions instead of six,
and reset SIGCHLD after fork to fix problems with some shells. From
Romain Francois.
@
text
@d38 1
a38 1
	server-fn.c server.c server-client.c server-window.c signal.c \
@


1.37
log
@Merge copy mode and output mode, dropping the latter. Idea and code from
Micah Cowan.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.36 2010/03/22 19:07:52 nicm Exp $
d38 1
a38 1
	server-fn.c server.c server-client.c server-window.c \
@


1.36
log
@Support up, down, left, right movement through panes with -UDLR flags to
select-pane.

Also REMOVE the up- and down-pane commands: equivalent behaviour is now
available using -t :.+ and -t :.-.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.35 2010/01/31 11:11:28 nicm Exp $
d40 1
a40 1
	window-choose.c window-clock.c window-copy.c window-more.c window.c \
@


1.35
log
@Fix DPADD, from Brad.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.34 2010/01/07 20:52:18 nicm Exp $
d9 1
a9 1
	cmd-delete-buffer.c cmd-detach-client.c cmd-down-pane.c \
d31 1
a31 1
	cmd-up-pane.c cmd-display-message.c cmd-display-panes.c \
@


1.34
log
@New command, join-pane, to split and move an existing pane into the space (like
splitw then movep, or the reverse of breakp).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.33 2009/12/08 07:49:31 nicm Exp $
d49 1
a49 1
DPADD=  ${LIBUTIL}
@


1.33
log
@Permit panes to be referred to as "top", "bottom", "top-left" etc, if the right
pane can be identified.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2009/12/03 17:44:02 nicm Exp $
d15 1
a15 1
	cmd-list.c cmd-load-buffer.c \
@


1.32
log
@Eliminate duplicate code and ease the passage for server-wide options by adding
a -w flag to set-option and show-options and making setw and showw aliases to
set -w and show -w.

Note: setw and showw are still there, but now aliases for set -w and show -w.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2009/12/01 18:42:38 nicm Exp $
d35 1
a35 1
	layout-set.c layout.c log.c job.c \
@


1.31
log
@New command, capture-pane, which copies the entire pane contents to a paste
buffer. From Jonathan Alvarado.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2009/11/18 17:02:17 nicm Exp $
d36 1
a36 1
	mode-key.c names.c options-cmd.c options.c paste.c procname.c \
@


1.30
log
@Cleanup by moving various (mostly horrible) little bits handling UTF-8 grid
data into functions in a new file, grid-utf8.c, and use sizeof intead of
UTF8_DATA.

Also nuke trailing whitespace from tmux.1, reminded by jmc.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2009/11/18 13:16:33 nicm Exp $
d32 1
a32 1
	cmd-pipe-pane.c cmd.c \
@


1.29
log
@Add a per-client log of status line messages displayed while that client
exists. A new message-limit session option sets the maximum number of entries
and a command, show-messages, shows the log (bound to ~ by default).

This (and prompt history) might be better as a single global log but until
there are global options it is easier for them to be per client.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2009/11/04 22:44:53 nicm Exp $
d33 1
a33 1
	colour.c environ.c grid-view.c grid.c input-keys.c \
@


1.28
log
@Bye-bye buffer*.c.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2009/11/04 21:04:43 nicm Exp $
d25 1
a25 1
	cmd-set-window-option.c cmd-show-buffer.c \
@


1.27
log
@Switch jobs over to use a bufferevent.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2009/11/04 20:50:11 nicm Exp $
d4 2
a5 2
SRCS=	attributes.c buffer-poll.c buffer.c cfg.c \
	client.c clock.c cmd-attach-session.c cmd-bind-key.c \
@


1.26
log
@Initial changes to move tmux to libevent.

This moves the client-side loops are pretty much fully over to event-based only
(tmux.c and client.c) but server-side (server.c and friends) treats libevent as
a sort of clever poll, waking up after every event to run various things.

Moving the server stuff over to bufferevents and timers and so on will come
later.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2009/10/26 17:46:33 nicm Exp $
d38 1
a38 1
	server-fn.c server.c server-client.c server-window.c server-job.c \
@


1.25
log
@Rewrite xterm-keys code (both input and output) so that works (doesn't always
output the same modifiers, accepts all the possible input keys) and is more
understandable.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2009/10/22 19:41:51 nicm Exp $
d48 1
a48 1
LDADD=  -lutil -lcurses
@


1.24
log
@Split the server code handling clients, jobs and windows off into separate
files from server.c (merging server-msg.c into the client file) and rather than
iterating over each set after poll(), allow a callback to be specified when the
fd is added and just walk once over the returned pollfds calling each callback
where needed.

More to come, getting this in so it is tested.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2009/10/21 20:11:47 nicm Exp $
d41 1
a41 1
	xmalloc.c
@


1.23
log
@Client tidying: get rid of client_ctx struct in favour of two variables in
client.c, and move the functions in client-fn.c into other files.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2009/10/11 10:04:27 nicm Exp $
d37 5
a41 4
	resize.c screen-redraw.c screen-write.c screen.c server-fn.c \
	server-msg.c server.c session.c status.c tmux.c tty-keys.c tty-term.c \
	tty.c utf8.c window-choose.c window-clock.c \
	window-copy.c window-more.c window.c xmalloc.c
@


1.22
log
@Add a pipe-pane command to allow a pane to be piped to a shell command, for
example:

	pipe-pane 'cat >~/out'

No arguments stops outputing and closes the pipe; the -o flag toggles a pipe
and on and off (useful for key bindings).

Suggested by espie@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2009/10/10 17:19:38 nicm Exp $
d4 1
a4 1
SRCS=	attributes.c buffer-poll.c buffer.c cfg.c client-fn.c \
@


1.21
log
@Split list-panes off from list-windows.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2009/10/10 15:03:01 nicm Exp $
d31 2
a32 1
	cmd-up-pane.c cmd-display-message.c cmd-display-panes.c cmd.c \
@


1.20
log
@Rather than running status-left, status-right and window title #() with popen
immediately every redraw, queue them up and run them in the background,
starting each once every status-interval. The actual status line uses the
output from the last run.

This brings several advantages:

- tmux itself may be called from inside #() without causing the server to hang;
- likewise, sleep or similar doesn't cause the server to block;
- commands aren't run excessively often when redrawing;
- commands shared by status-left and status-right, or used multiple times, will
  only be run once.

run-shell and if-shell still use system()/popen() but will be changed over to
use this too later.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2009/10/06 07:19:32 nicm Exp $
d14 2
a15 1
	cmd-list-sessions.c cmd-list-windows.c cmd-list.c cmd-load-buffer.c \
@


1.19
log
@Remove scroll mode which is now redundant, copy mode should be used instead.

The = key binding now does nothing.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2009/09/24 14:17:09 nicm Exp $
d33 1
a33 1
	layout-set.c layout.c log.c \
@


1.18
log
@New lock-client and lock-session commands to lock an individual client or all
clients attached to a session respectively.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2009/09/23 06:18:47 nicm Exp $
d21 1
a21 1
	cmd-scroll-mode.c cmd-select-layout.c cmd-select-pane.c \
d38 1
a38 1
	window-copy.c window-more.c window-scroll.c window.c xmalloc.c
@


1.17
log
@Remove the internal tmux locking and instead detach each client and run the
command specified by a new option "lock-command" (by default "lock -np") in
each client.

This means each terminal has to be unlocked individually but simplifies the
code and allows the system password to be used to unlock.

Note that the set-password command is gone, so it will need to be removed from
configuration files, and the -U command line flag has been removed.

This is the third protocol version change so again it is best to stop the tmux
server before upgrading.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2009/09/20 19:15:01 nicm Exp $
d15 2
a16 1
	cmd-lock-server.c cmd-move-window.c cmd-new-session.c cmd-new-window.c \
@


1.16
log
@run-shell command to run a shell command without opening a window, sending
stdout to output mode.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2009/08/31 20:46:19 nicm Exp $
d23 1
a23 1
	cmd-set-password.c cmd-set-window-option.c cmd-show-buffer.c \
@


1.15
log
@Add a new display-panes command, with two options (display-panes-colour and
display-panes-time), which displays a visual indication of the number of each
pane.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2009/08/25 12:18:51 nicm Exp $
d26 1
a26 1
	cmd-suspend-client.c cmd-swap-pane.c cmd-swap-window.c \
@


1.14
log
@Add a choose-client command and extend choose-{session,window} to accept a
template. After a choice is made, %% (or %1) in the template is replaced by the
name of the session, window or client suitable for -t and the result executed
as a command. So, for example, "choose-window "killw -t '%%'"" will kill the
selected window.

The defaults if no template is given are (as now) select-window for
choose-window, switch-client for choose-session, and detach-client for
choose-client (now bound to D).
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2009/08/11 17:18:35 nicm Exp $
d29 1
a29 1
	cmd-up-pane.c cmd-display-message.c cmd.c \
@


1.13
log
@Switch tmux to use imsg. This is the last major change to make the
client-server protocol more resilient and make the protocol versioning work
properly. In future, the only things requiring a protocol version bump will be
changes in the message structs, and (when both client and server have this
change) mixing different versions should nicely report an error message.

As a side effect this also makes the code tidier, fixes a problem with the way
errors reported during server startup were handled, and supports fd passing
(which will be used in future).

Looked over by eric@@, thanks.

Please note that mixing a client with this change with an older server or vice
versa may cause tmux to crash or hang - tmux should be completely exited before
upgrading.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2009/08/08 21:52:43 nicm Exp $
d28 1
a28 1
	cmd-set-environment.c cmd-show-environment.c \
@


1.12
log
@Infrastructure and commands to manage the environment for processes started
within tmux.

There is a global environment, copied from the external environment when the
server is started and each sesssion has an (initially empty) session
environment which overrides it.

New commands set-environment and show-environment manipulate or display the
environments.

A new session option, update-environment, is a space-separated list of
variables which are updated from the external environment into the session
environment every time a new session is created - the default is DISPLAY.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2009/07/30 16:32:12 nicm Exp $
d31 2
a32 1
	input.c key-bindings.c key-string.c layout-set.c layout.c log.c \
@


1.11
log
@There aren't many client message types or code to handle them so get rid of the
lookup table and use a switch, merge the tiny handler functions into it, and
move the whole lot to client.c.

Also change client_msg_dispatch to consume as many messages as possible and
move the call to it to the right place so it checks for signals afterwards.

Prompted by suggestions from eric@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2009/07/22 20:56:58 nicm Exp $
d28 1
d30 1
a30 1
	colour.c grid-view.c grid.c input-keys.c \
@


1.10
log
@tty_write is relatively short and the only function left in tty-write.c so move
it into tty.c.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2009/07/19 13:21:40 nicm Exp $
d5 1
a5 1
	client-msg.c client.c clock.c cmd-attach-session.c cmd-bind-key.c \
@


1.9
log
@Improved layout code.

Each window now has a tree of layout cells associated with it. In this tree,
each node is either a horizontal or vertical cell containing a list of other
cells running from left-to-right or top-to-bottom, or a leaf cell which is
associated with a pane.

The major functional changes are:

- panes may now be split arbitrarily both horizontally (splitw -h, C-b %) and
  vertically (splitw -v, C-b ");
- panes may be resized both horizontally and vertically (resizep -L/-R/-U/-D,
  bound to C-b left/right/up/down and C-b M-left/right/up/down);
- layouts are now applied and then may be modified by resizing or splitting
  panes, rather than being fixed and reapplied when the window is resized or
  panes are added;
- manual-vertical layout is no longer necessary, and active-only layout is gone
  (but may return in future);
- the main-pane layouts now reduce the size of the main pane to fit all panes
  if possible.

Thanks to all who tested.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2009/07/17 18:45:08 nicm Exp $
d34 1
a34 1
	tty-write.c tty.c utf8.c window-choose.c window-clock.c \
@


1.8
log
@- New command display-message (alias display) to display a message in the
  status line (bound to "i" and displays the current window and time by
  default). The same substitutions are applied as for status-left/right.
- Add support for including the window index (#I), pane index (#P) and window
  name (#W) in the message, and status-left or status-right.
- Bump protocol version.

From Tiago Cunha, thanks!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2009/07/14 06:30:45 nicm Exp $
d30 1
a30 1
	input.c key-bindings.c key-string.c layout-manual.c layout.c log.c \
@


1.7
log
@Since tmux doesn't actually need ncurses, use -lcurses/curses.h
instead. Pointed out by millert a while ago.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2009/07/13 17:47:46 nicm Exp $
d28 2
a29 1
	cmd-up-pane.c cmd.c colour.c grid-view.c grid.c input-keys.c \
@


1.6
log
@Tidy up and improve target (-t) argument parsing:

- move the code back into cmd.c and merge with the existing functions where
  possible;
- accept "-tttyp0" as well as "-t/dev/ttyp0" for clients;
- when looking up session names, try an exact match first, and if that fails
  look for it as an fnmatch pattern and then as the start of a name - if more
  that one session matches an error is given; so if there is one session called
  "mysession", -tmysession, -tmysess, -tmysess* are equivalent but if there
  is also "mysession2", the last two are errors;
- similarly for windows, if the argument is not a valid index or exact window
  name match, try it against the window names as an fnmatch pattern and a
  prefix.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2009/07/09 15:47:49 nicm Exp $
d41 1
a41 1
LDADD=  -lutil -lncurses
@


1.5
log
@New command, if-shell (alias if). Executes the tmux command in the second
argument if the shell command in the first succeeds, for example:

       if "[ -e ~/.tmux.conf.alt ]" "source .tmux.conf.alt"

Written by Tiago Cunha, many thanks.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2009/06/25 07:42:41 espie Exp $
d4 1
a4 1
SRCS=	arg.c attributes.c buffer-poll.c buffer.c cfg.c client-fn.c \
@


1.4
log
@diagflags for diags
okay nicm@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2009/06/01 22:58:49 nicm Exp $
d25 1
a25 1
	cmd-split-window.c cmd-start-server.c cmd-string.c \
@


1.3
log
@Remove some cruft from the Makefile.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2009/06/24 22:49:56 nicm Exp $
d36 4
a39 4
CFLAGS+= -Wno-long-long -Wall -W -Wnested-externs -Wformat=2
CFLAGS+= -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations
CFLAGS+= -Wwrite-strings -Wshadow -Wpointer-arith -Wsign-compare
CFLAGS+= -Wundef -Wbad-function-cast -Winline -Wcast-align
@


1.2
log
@Change find-window and monitor-content to use fnmatch(3). For convenience and
compatibility, *s are implicitly added at the start and end of the pattern.

Also display the line number and the entire line in the results, and lose the
nasty section_string function and the now empty util.c file.

Initially from Tiago Cunha.
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.1 2009/06/01 22:58:49 nicm Exp $

.PATH:	${.CURDIR}/..
a42 2

MAN=	tmux.1
@


1.1
log
@Import tmux, a terminal multiplexor allowing (among other things) a single
terminal to be switched between several different windows and programs
displayed on one terminal be detached from one terminal and moved to another.

ok deraadt pirofti
@
text
@d1 1
a1 1
# $OpenBSD$
d35 1
a35 1
	tty-write.c tty.c utf8.c util.c window-choose.c window-clock.c \
@

