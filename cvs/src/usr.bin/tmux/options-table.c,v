head	1.93;
access;
symbols
	OPENBSD_6_2_BASE:1.93
	OPENBSD_6_1:1.86.0.4
	OPENBSD_6_1_BASE:1.86
	OPENBSD_6_0:1.73.0.2
	OPENBSD_6_0_BASE:1.73
	OPENBSD_5_9:1.71.0.2
	OPENBSD_5_9_BASE:1.71
	OPENBSD_5_8:1.61.0.4
	OPENBSD_5_8_BASE:1.61
	OPENBSD_5_7:1.53.0.2
	OPENBSD_5_7_BASE:1.53
	OPENBSD_5_6:1.50.0.4
	OPENBSD_5_6_BASE:1.50
	OPENBSD_5_5:1.45.0.4
	OPENBSD_5_5_BASE:1.45
	OPENBSD_5_4:1.38.0.2
	OPENBSD_5_4_BASE:1.38
	OPENBSD_5_3:1.32.0.2
	OPENBSD_5_3_BASE:1.32
	OPENBSD_5_2:1.29.0.2
	OPENBSD_5_2_BASE:1.29
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.2
	OPENBSD_5_0:1.12.0.2
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3;
locks; strict;
comment	@ * @;


1.93
date	2017.08.17.08.37.38;	author nicm;	state Exp;
branches;
next	1.92;
commitid	iXSWXJ2fx6ySmOhr;

1.92
date	2017.08.16.11.46.08;	author nicm;	state Exp;
branches;
next	1.91;
commitid	D6TWvLdZGPuZ8ZML;

1.91
date	2017.07.26.16.14.08;	author nicm;	state Exp;
branches;
next	1.90;
commitid	k72TGidrA3MD3pGJ;

1.90
date	2017.06.23.15.36.52;	author nicm;	state Exp;
branches;
next	1.89;
commitid	OmJmrU8DMv4xU3mr;

1.89
date	2017.06.03.17.43.01;	author nicm;	state Exp;
branches;
next	1.88;
commitid	WCdl60UOFCCqt4oc;

1.88
date	2017.05.30.21.44.59;	author nicm;	state Exp;
branches;
next	1.87;
commitid	ai2b3hkAsUowPSMm;

1.87
date	2017.05.29.20.41.29;	author nicm;	state Exp;
branches;
next	1.86;
commitid	egdoKGss5gQYOqpS;

1.86
date	2017.01.24.20.15.32;	author nicm;	state Exp;
branches;
next	1.85;
commitid	OhhGixV64mirqDj8;

1.85
date	2017.01.24.20.05.15;	author nicm;	state Exp;
branches;
next	1.84;
commitid	DW4XRbRG0YgMui4Q;

1.84
date	2017.01.24.19.59.19;	author nicm;	state Exp;
branches;
next	1.83;
commitid	qkc1IobTNIhHitel;

1.83
date	2017.01.24.19.53.37;	author nicm;	state Exp;
branches;
next	1.82;
commitid	APEyI6NiCN6S4KhZ;

1.82
date	2017.01.16.14.52.25;	author nicm;	state Exp;
branches;
next	1.81;
commitid	DhrjePH0tXykfoeE;

1.81
date	2017.01.16.14.49.14;	author nicm;	state Exp;
branches;
next	1.80;
commitid	4TgBXjnsq23XHMH4;

1.80
date	2017.01.15.20.48.41;	author nicm;	state Exp;
branches;
next	1.79;
commitid	osUO2wUOqrqm0Q8V;

1.79
date	2017.01.15.20.16.22;	author nicm;	state Exp;
branches;
next	1.78;
commitid	z3UST82m4AZl5FwM;

1.78
date	2017.01.12.15.36.35;	author nicm;	state Exp;
branches;
next	1.77;
commitid	TxelVequscBivd6R;

1.77
date	2017.01.11.14.56.44;	author nicm;	state Exp;
branches;
next	1.76;
commitid	OX4JTH65GquvrMVB;

1.76
date	2016.12.30.13.49.34;	author nicm;	state Exp;
branches;
next	1.75;
commitid	qy8XCafle3ImBUi8;

1.75
date	2016.10.13.21.37.03;	author nicm;	state Exp;
branches;
next	1.74;
commitid	ZCNRzNzyBFHddYXj;

1.74
date	2016.10.03.22.52.11;	author nicm;	state Exp;
branches;
next	1.73;
commitid	brRovAmeQVyBbZ4S;

1.73
date	2016.05.04.21.29.47;	author nicm;	state Exp;
branches;
next	1.72;
commitid	JcCWCLGZfhLngRPL;

1.72
date	2016.04.29.15.00.48;	author nicm;	state Exp;
branches;
next	1.71;
commitid	z5NrpOKjZoYhx6Qr;

1.71
date	2016.01.19.15.59.12;	author nicm;	state Exp;
branches;
next	1.70;
commitid	P3qmSOx6KrDBsb0c;

1.70
date	2015.12.12.18.32.24;	author nicm;	state Exp;
branches;
next	1.69;
commitid	q7iDAcShsJWlLYhr;

1.69
date	2015.11.24.09.34.55;	author nicm;	state Exp;
branches;
next	1.68;
commitid	7H0ObHzXstG7tLHE;

1.68
date	2015.11.22.18.28.01;	author tim;	state Exp;
branches;
next	1.67;
commitid	LIvsufdSwNJM2Y5g;

1.67
date	2015.11.20.12.01.19;	author nicm;	state Exp;
branches;
next	1.66;
commitid	qNEZpcD0RcTrAsAp;

1.66
date	2015.11.12.11.09.11;	author nicm;	state Exp;
branches;
next	1.65;
commitid	tEN3cHiOuN3KscbT;

1.65
date	2015.11.12.08.19.18;	author nicm;	state Exp;
branches;
next	1.64;
commitid	mFF91VThKNYQup8T;

1.64
date	2015.11.11.23.23.33;	author nicm;	state Exp;
branches;
next	1.63;
commitid	UDT9ROGWpISBYjbt;

1.63
date	2015.09.25.23.30.24;	author nicm;	state Exp;
branches;
next	1.62;
commitid	z1s7IR0iXfjnOTdp;

1.62
date	2015.08.28.12.31.55;	author nicm;	state Exp;
branches;
next	1.61;
commitid	TVJDgAOZtMm4s2XM;

1.61
date	2015.07.20.15.50.04;	author nicm;	state Exp;
branches;
next	1.60;
commitid	XjcnBmI1AcHx5t2a;

1.60
date	2015.05.12.15.29.29;	author nicm;	state Exp;
branches;
next	1.59;
commitid	pHyo7O6edHQdopKa;

1.59
date	2015.05.12.15.27.46;	author nicm;	state Exp;
branches;
next	1.58;
commitid	p5bGRCMzjTiUkjhK;

1.58
date	2015.05.11.10.58.22;	author nicm;	state Exp;
branches;
next	1.57;
commitid	5SSq34D86Ou4hNiy;

1.57
date	2015.05.06.08.35.39;	author nicm;	state Exp;
branches;
next	1.56;
commitid	7XqxdN1FHegvjfQk;

1.56
date	2015.04.29.15.59.08;	author nicm;	state Exp;
branches;
next	1.55;
commitid	8yIyhuBaxmohYzMx;

1.55
date	2015.04.19.21.34.21;	author nicm;	state Exp;
branches;
next	1.54;
commitid	wug6ctIOfhVMeWQp;

1.54
date	2015.04.19.21.05.27;	author nicm;	state Exp;
branches;
next	1.53;
commitid	ksfuI8mTVk7XPyr3;

1.53
date	2015.02.06.15.09.34;	author nicm;	state Exp;
branches;
next	1.52;
commitid	PGKGPybMMWclhLSu;

1.52
date	2015.01.21.12.20.56;	author sthen;	state Exp;
branches;
next	1.51;
commitid	Ubzm4271VmOTK0GW;

1.51
date	2014.11.05.23.15.11;	author nicm;	state Exp;
branches;
next	1.50;
commitid	mPOFk7MKvspTVFch;

1.50
date	2014.04.17.12.57.28;	author nicm;	state Exp;
branches;
next	1.49;

1.49
date	2014.04.17.11.38.35;	author nicm;	state Exp;
branches;
next	1.48;

1.48
date	2014.04.17.07.55.43;	author nicm;	state Exp;
branches;
next	1.47;

1.47
date	2014.04.17.07.36.45;	author nicm;	state Exp;
branches;
next	1.46;

1.46
date	2014.03.31.21.41.35;	author nicm;	state Exp;
branches;
next	1.45;

1.45
date	2014.02.23.00.53.06;	author nicm;	state Exp;
branches;
next	1.44;

1.44
date	2014.01.28.23.11.44;	author nicm;	state Exp;
branches;
next	1.43;

1.43
date	2014.01.28.23.07.09;	author nicm;	state Exp;
branches;
next	1.42;

1.42
date	2013.10.10.12.26.36;	author nicm;	state Exp;
branches;
next	1.41;

1.41
date	2013.10.10.11.56.50;	author nicm;	state Exp;
branches;
next	1.40;

1.40
date	2013.10.10.11.50.20;	author nicm;	state Exp;
branches;
next	1.39;

1.39
date	2013.10.05.13.56.48;	author nicm;	state Exp;
branches;
next	1.38;

1.38
date	2013.06.23.13.10.46;	author nicm;	state Exp;
branches;
next	1.37;

1.37
date	2013.06.02.07.52.15;	author nicm;	state Exp;
branches;
next	1.36;

1.36
date	2013.03.27.11.17.12;	author nicm;	state Exp;
branches;
next	1.35;

1.35
date	2013.03.25.15.59.57;	author nicm;	state Exp;
branches;
next	1.34;

1.34
date	2013.03.24.09.21.27;	author nicm;	state Exp;
branches;
next	1.33;

1.33
date	2013.03.21.16.15.52;	author nicm;	state Exp;
branches;
next	1.32;

1.32
date	2013.01.17.00.11.22;	author nicm;	state Exp;
branches;
next	1.31;

1.31
date	2013.01.15.22.55.29;	author nicm;	state Exp;
branches;
next	1.30;

1.30
date	2012.11.27.13.52.23;	author nicm;	state Exp;
branches;
next	1.29;

1.29
date	2012.04.29.17.20.01;	author nicm;	state Exp;
branches;
next	1.28;

1.28
date	2012.04.23.22.23.14;	author nicm;	state Exp;
branches;
next	1.27;

1.27
date	2012.04.01.13.18.38;	author nicm;	state Exp;
branches;
next	1.26;

1.26
date	2012.03.20.11.23.12;	author nicm;	state Exp;
branches;
next	1.25;

1.25
date	2012.03.20.11.01.00;	author nicm;	state Exp;
branches;
next	1.24;

1.24
date	2012.03.17.21.40.53;	author nicm;	state Exp;
branches;
next	1.23;

1.23
date	2012.02.29.21.10.51;	author nicm;	state Exp;
branches;
next	1.22;

1.22
date	2012.02.25.12.57.42;	author nicm;	state Exp;
branches;
next	1.21;

1.21
date	2012.02.15.18.44.49;	author nicm;	state Exp;
branches;
next	1.20;

1.20
date	2012.01.29.09.37.02;	author nicm;	state Exp;
branches;
next	1.19;

1.19
date	2012.01.21.08.40.09;	author nicm;	state Exp;
branches;
next	1.18;

1.18
date	2012.01.20.19.51.28;	author nicm;	state Exp;
branches;
next	1.17;

1.17
date	2012.01.20.19.15.40;	author nicm;	state Exp;
branches;
next	1.16;

1.16
date	2011.11.15.23.24.04;	author nicm;	state Exp;
branches;
next	1.15;

1.15
date	2011.11.05.09.06.31;	author nicm;	state Exp;
branches;
next	1.14;

1.14
date	2011.10.27.22.54.06;	author nicm;	state Exp;
branches;
next	1.13;

1.13
date	2011.08.24.10.29.57;	author nicm;	state Exp;
branches;
next	1.12;

1.12
date	2011.07.30.18.01.26;	author nicm;	state Exp;
branches;
next	1.11;

1.11
date	2011.07.03.19.07.54;	author nicm;	state Exp;
branches;
next	1.10;

1.10
date	2011.05.20.19.17.39;	author nicm;	state Exp;
branches;
next	1.9;

1.9
date	2011.05.20.19.03.58;	author nicm;	state Exp;
branches;
next	1.8;

1.8
date	2011.05.18.20.24.29;	author nicm;	state Exp;
branches;
next	1.7;

1.7
date	2011.05.08.20.34.12;	author nicm;	state Exp;
branches;
next	1.6;

1.6
date	2011.05.08.19.53.06;	author nicm;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.18.19.49.05;	author nicm;	state Exp;
branches;
next	1.4;

1.4
date	2011.04.09.20.00.29;	author nicm;	state Exp;
branches;
next	1.3;

1.3
date	2011.01.13.13.38.57;	author nicm;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.03.23.35.21;	author nicm;	state Exp;
branches;
next	1.1;

1.1
date	2011.01.01.16.51.21;	author nicm;	state Exp;
branches;
next	;


desc
@@


1.93
log
@Add monitor-bell window option to match the activity and silence
options, from Brad Town.
@
text
@/* $OpenBSD: options-table.c,v 1.92 2017/08/16 11:46:08 nicm Exp $ */

/*
 * Copyright (c) 2011 Nicholas Marriott <nicholas.marriott@@gmail.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER
 * IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>

#include <string.h>
#include <paths.h>

#include "tmux.h"

/*
 * This file has a tables with all the server, session and window
 * options. These tables are the master copy of the options with their real
 * (user-visible) types, range limits and default values. At start these are
 * copied into the runtime global options trees (which only has number and
 * string types). These tables are then used to look up the real type when the
 * user sets an option or its value needs to be shown.
 */

/* Choice option type lists. */
static const char *options_table_mode_keys_list[] = {
	"emacs", "vi", NULL
};
static const char *options_table_clock_mode_style_list[] = {
	"12", "24", NULL
};
static const char *options_table_status_keys_list[] = {
	"emacs", "vi", NULL
};
static const char *options_table_status_justify_list[] = {
	"left", "centre", "right", NULL
};
static const char *options_table_status_position_list[] = {
	"top", "bottom", NULL
};
static const char *options_table_bell_action_list[] = {
	"none", "any", "current", "other", NULL
};
static const char *options_table_visual_bell_list[] = {
	"off", "on", "both", NULL
};
static const char *options_table_pane_status_list[] = {
	"off", "top", "bottom", NULL
};
static const char *options_table_set_clipboard_list[] = {
	"off", "external", "on", NULL
};

/* Top-level options. */
const struct options_table_entry options_table[] = {
	{ .name = "buffer-limit",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_SERVER,
	  .minimum = 1,
	  .maximum = INT_MAX,
	  .default_num = 50
	},

	{ .name = "command-alias",
	  .type = OPTIONS_TABLE_ARRAY,
	  .scope = OPTIONS_TABLE_SERVER,
	  .default_str = "split-pane=split-window,"
			 "splitp=split-window,"
			 "server-info=show-messages -JT,"
			 "info=show-messages -JT,"
			 "choose-window=choose-tree -w,"
			 "choose-session=choose-tree -s",
	  .separator = ","
	},

	{ .name = "default-terminal",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_SERVER,
	  .default_str = "screen"
	},

	{ .name = "escape-time",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_SERVER,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 500
	},

	{ .name = "exit-unattached",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_SERVER,
	  .default_num = 0
	},

	{ .name = "focus-events",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_SERVER,
	  .default_num = 0
	},

	{ .name = "history-file",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_SERVER,
	  .default_str = ""
	},

	{ .name = "message-limit",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_SERVER,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 100
	},

	{ .name = "set-clipboard",
	  .type = OPTIONS_TABLE_CHOICE,
	  .scope = OPTIONS_TABLE_SERVER,
	  .choices = options_table_set_clipboard_list,
	  .default_num = 1
	},

	{ .name = "terminal-overrides",
	  .type = OPTIONS_TABLE_ARRAY,
	  .scope = OPTIONS_TABLE_SERVER,
	  .default_str = "xterm*:XT:Ms=\\E]52;%p1%s;%p2%s\\007"
			 ":Cs=\\E]12;%p1%s\\007:Cr=\\E]112\\007"
			 ":Ss=\\E[%p1%d q:Se=\\E[2 q,screen*:XT",
	  .separator = ","
	},

	{ .name = "user-keys",
	  .type = OPTIONS_TABLE_ARRAY,
	  .scope = OPTIONS_TABLE_SERVER,
	  .default_str = "",
	  .separator = ","
	},

	{ .name = "activity-action",
	  .type = OPTIONS_TABLE_CHOICE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .choices = options_table_bell_action_list,
	  .default_num = ALERT_OTHER
	},

	{ .name = "assume-paste-time",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_SESSION,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 1,
	},

	{ .name = "base-index",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_SESSION,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 0
	},

	{ .name = "bell-action",
	  .type = OPTIONS_TABLE_CHOICE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .choices = options_table_bell_action_list,
	  .default_num = ALERT_ANY
	},

	{ .name = "default-command",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = ""
	},

	{ .name = "default-shell",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = _PATH_BSHELL
	},

	{ .name = "destroy-unattached",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0
	},

	{ .name = "detach-on-destroy",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 1
	},

	{ .name = "display-panes-active-colour",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 1
	},

	{ .name = "display-panes-colour",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 4
	},

	{ .name = "display-panes-time",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_SESSION,
	  .minimum = 1,
	  .maximum = INT_MAX,
	  .default_num = 1000
	},

	{ .name = "display-time",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_SESSION,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 750
	},

	{ .name = "history-limit",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_SESSION,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 2000
	},

	{ .name = "key-table",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = "root"
	},

	{ .name = "lock-after-time",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_SESSION,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 0
	},

	{ .name = "lock-command",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = "lock -np"
	},

	{ .name = "message-attr",
	  .type = OPTIONS_TABLE_ATTRIBUTES,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0,
	  .style = "message-style"
	},

	{ .name = "message-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 3,
	  .style = "message-style"
	},

	{ .name = "message-command-attr",
	  .type = OPTIONS_TABLE_ATTRIBUTES,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0,
	  .style = "message-command-style"
	},

	{ .name = "message-command-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0,
	  .style = "message-command-style"
	},

	{ .name = "message-command-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 3,
	  .style = "message-command-style"
	},

	{ .name = "message-command-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = "bg=black,fg=yellow"
	},

	{ .name = "message-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0,
	  .style = "message-style"
	},

	{ .name = "message-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = "bg=yellow,fg=black"
	},

	{ .name = "mouse",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0
	},

	{ .name = "prefix",
	  .type = OPTIONS_TABLE_KEY,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = '\002',
	},

	{ .name = "prefix2",
	  .type = OPTIONS_TABLE_KEY,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = KEYC_NONE,
	},

	{ .name = "renumber-windows",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0
	},

	{ .name = "repeat-time",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_SESSION,
	  .minimum = 0,
	  .maximum = SHRT_MAX,
	  .default_num = 500
	},

	{ .name = "set-titles",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0
	},

	{ .name = "set-titles-string",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = "#S:#I:#W - \"#T\" #{session_alerts}"
	},

	{ .name = "silence-action",
	  .type = OPTIONS_TABLE_CHOICE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .choices = options_table_bell_action_list,
	  .default_num = ALERT_OTHER
	},

	{ .name = "status",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 1
	},

	{ .name = "status-attr",
	  .type = OPTIONS_TABLE_ATTRIBUTES,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0,
	  .style = "status-style"
	},

	{ .name = "status-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 2,
	  .style = "status-style"
	},

	{ .name = "status-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0,
	  .style = "status-style"
	},

	{ .name = "status-interval",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_SESSION,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 15
	},

	{ .name = "status-justify",
	  .type = OPTIONS_TABLE_CHOICE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .choices = options_table_status_justify_list,
	  .default_num = 0
	},

	{ .name = "status-keys",
	  .type = OPTIONS_TABLE_CHOICE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .choices = options_table_status_keys_list,
	  .default_num = MODEKEY_EMACS
	},

	{ .name = "status-left",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = "[#S] "
	},

	{ .name = "status-left-attr",
	  .type = OPTIONS_TABLE_ATTRIBUTES,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0,
	  .style = "status-left-style"
	},

	{ .name = "status-left-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 8,
	  .style = "status-left-style"
	},

	{ .name = "status-left-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 8,
	  .style = "status-left-style"
	},

	{ .name = "status-left-length",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_SESSION,
	  .minimum = 0,
	  .maximum = SHRT_MAX,
	  .default_num = 10
	},

	{ .name = "status-left-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = "default"
	},

	{ .name = "status-position",
	  .type = OPTIONS_TABLE_CHOICE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .choices = options_table_status_position_list,
	  .default_num = 1
	},

	{ .name = "status-right",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = " \"#{=21:pane_title}\" %H:%M %d-%b-%y"
	},

	{ .name = "status-right-attr",
	  .type = OPTIONS_TABLE_ATTRIBUTES,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0,
	  .style = "status-right-style"
	},

	{ .name = "status-right-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 8,
	  .style = "status-right-style"
	},

	{ .name = "status-right-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 8,
	  .style = "status-right-style"
	},

	{ .name = "status-right-length",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_SESSION,
	  .minimum = 0,
	  .maximum = SHRT_MAX,
	  .default_num = 40
	},

	{ .name = "status-right-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = "default"
	},

	{ .name = "status-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = "bg=green,fg=black"
	},

	{ .name = "update-environment",
	  .type = OPTIONS_TABLE_ARRAY,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID "
			 "SSH_CONNECTION WINDOWID XAUTHORITY"
	},

	{ .name = "visual-activity",
	  .type = OPTIONS_TABLE_CHOICE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .choices = options_table_visual_bell_list,
	  .default_num = VISUAL_OFF
	},

	{ .name = "visual-bell",
	  .type = OPTIONS_TABLE_CHOICE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .choices = options_table_visual_bell_list,
	  .default_num = VISUAL_OFF
	},

	{ .name = "visual-silence",
	  .type = OPTIONS_TABLE_CHOICE,
	  .scope = OPTIONS_TABLE_SESSION,
	  .choices = options_table_visual_bell_list,
	  .default_num = VISUAL_OFF
	},

	{ .name = "word-separators",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_str = " -_@@"
	},

	{ .name = "aggressive-resize",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 0
	},

	{ .name = "allow-rename",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 1
	},

	{ .name = "alternate-screen",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 1
	},

	{ .name = "automatic-rename",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 1
	},

	{ .name = "automatic-rename-format",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "#{?pane_in_mode,[tmux],#{pane_current_command}}"
			 "#{?pane_dead,[dead],}"
	},

	{ .name = "clock-mode-colour",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 4
	},

	{ .name = "clock-mode-style",
	  .type = OPTIONS_TABLE_CHOICE,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .choices = options_table_clock_mode_style_list,
	  .default_num = 1
	},

	{ .name = "force-height",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 0
	},

	{ .name = "force-width",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 0
	},

	{ .name = "main-pane-height",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .minimum = 1,
	  .maximum = INT_MAX,
	  .default_num = 24
	},

	{ .name = "main-pane-width",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .minimum = 1,
	  .maximum = INT_MAX,
	  .default_num = 80
	},

	{ .name = "mode-attr",
	  .type = OPTIONS_TABLE_ATTRIBUTES,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 0,
	  .style = "mode-style"
	},

	{ .name = "mode-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 3,
	  .style = "mode-style"
	},

	{ .name = "mode-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 0,
	  .style = "mode-style"
	},

	{ .name = "mode-keys",
	  .type = OPTIONS_TABLE_CHOICE,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .choices = options_table_mode_keys_list,
	  .default_num = MODEKEY_EMACS
	},

	{ .name = "mode-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "bg=yellow,fg=black"
	},

	{ .name = "monitor-activity",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 0
	},

	{ .name = "monitor-bell",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 1
	},

	{ .name = "monitor-silence",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 0
	},

	{ .name = "other-pane-height",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 0
	},

	{ .name = "other-pane-width",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 0
	},

	{ .name = "pane-active-border-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 8,
	  .style = "pane-active-border-style"
	},

	{ .name = "pane-active-border-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 2,
	  .style = "pane-active-border-style"
	},

	{ .name = "pane-active-border-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "fg=green"
	},

	{ .name = "pane-base-index",
	  .type = OPTIONS_TABLE_NUMBER,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .minimum = 0,
	  .maximum = USHRT_MAX,
	  .default_num = 0
	},

	{ .name = "pane-border-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 8,
	  .style = "pane-border-style"
	},

	{ .name = "pane-border-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 8,
	  .style = "pane-border-style"
	},

	{ .name = "pane-border-format",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "#{?pane_active,#[reverse],}#{pane_index}#[default] "
			 "\"#{pane_title}\""
	},

	{ .name = "pane-border-status",
	  .type = OPTIONS_TABLE_CHOICE,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .choices = options_table_pane_status_list,
	  .default_num = 0
	},

	{ .name = "pane-border-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "default"
	},

	{ .name = "remain-on-exit",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 0
	},

	{ .name = "synchronize-panes",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 0
	},

	{ .name = "window-active-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "default"
	},

	{ .name = "window-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "default"
	},

	{ .name = "window-status-activity-attr",
	  .type = OPTIONS_TABLE_ATTRIBUTES,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = GRID_ATTR_REVERSE,
	  .style = "window-status-activity-style"
	},

	{ .name = "window-status-activity-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 8,
	  .style = "window-status-activity-style"
	},

	{ .name = "window-status-activity-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 8,
	  .style = "window-status-activity-style"
	},

	{ .name = "window-status-activity-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "reverse"
	},

	{ .name = "window-status-attr",
	  .type = OPTIONS_TABLE_ATTRIBUTES,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 0,
	  .style = "window-status-style"
	},

	{ .name = "window-status-bell-attr",
	  .type = OPTIONS_TABLE_ATTRIBUTES,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = GRID_ATTR_REVERSE,
	  .style = "window-status-bell-style"
	},

	{ .name = "window-status-bell-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 8,
	  .style = "window-status-bell-style"
	},

	{ .name = "window-status-bell-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 8,
	  .style = "window-status-bell-style"
	},

	{ .name = "window-status-bell-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "reverse"
	},

	{ .name = "window-status-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 8,
	  .style = "window-status-style"
	},

	{ .name = "window-status-current-attr",
	  .type = OPTIONS_TABLE_ATTRIBUTES,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 0,
	  .style = "window-status-current-style"
	},

	{ .name = "window-status-current-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 8,
	  .style = "window-status-current-style"
	},

	{ .name = "window-status-current-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 8,
	  .style = "window-status-current-style"
	},

	{ .name = "window-status-current-format",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "#I:#W#{?window_flags,#{window_flags}, }"
	},

	{ .name = "window-status-current-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "default"
	},

	{ .name = "window-status-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 8,
	  .style = "window-status-style"
	},

	{ .name = "window-status-format",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "#I:#W#{?window_flags,#{window_flags}, }"
	},

	{ .name = "window-status-last-attr",
	  .type = OPTIONS_TABLE_ATTRIBUTES,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 0,
	  .style = "window-status-last-style"
	},

	{ .name = "window-status-last-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 8,
	  .style = "window-status-last-style"
	},

	{ .name = "window-status-last-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 8,
	  .style = "window-status-last-style"
	},

	{ .name = "window-status-last-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "default"
	},

	{ .name = "window-status-separator",
	  .type = OPTIONS_TABLE_STRING,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = " "
	},

	{ .name = "window-status-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_str = "default"
	},

	{ .name = "wrap-search",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 1
	},

	{ .name = "xterm-keys",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_WINDOW,
	  .default_num = 1
	},

	{ .name = NULL }
};
@


1.92
log
@Rename BELL_* values to ALERT_* now they are used by more than bells,
based on a diff from Brad Town.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.91 2017/07/26 16:14:08 nicm Exp $ */
d656 6
@


1.91
log
@Make bell, activity and silence alerting more consistent:

- remove the bell-on-alert option;

- add activity-action and silence-action options with the same possible
  values as the existing bell-action;

- add "both" value for the visual-bell, visual-activity and
  visual-silence options to trigger both a bell and a message.

This means all three work the same way. Based on changes from Yvain Thonnart.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.90 2017/06/23 15:36:52 nicm Exp $ */
d153 1
a153 1
	  .default_num = BELL_OTHER
d176 1
a176 1
	  .default_num = BELL_ANY
d361 1
a361 1
	  .default_num = BELL_OTHER
@


1.90
log
@Add user-keys option to allow user-defined keys to be set, from Dan
Aloni.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.89 2017/06/03 17:43:01 nicm Exp $ */
d54 3
d149 7
a178 6
	{ .name = "bell-on-alert",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0
	},

d357 7
d516 1
a516 1
	  .type = OPTIONS_TABLE_FLAG,
d518 2
a519 1
	  .default_num = 0
d523 1
a523 1
	  .type = OPTIONS_TABLE_FLAG,
d525 2
a526 1
	  .default_num = 0
d530 1
a530 1
	  .type = OPTIONS_TABLE_FLAG,
d532 2
a533 1
	  .default_num = 0
@


1.89
log
@Make set-clipboard a three-state option so tmux itself can ignore the
sequencess.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.88 2017/05/30 21:44:59 nicm Exp $ */
d136 7
@


1.88
log
@Rewrite of choose mode, both to simplify and tidy the code and to add
some modern features.

Now the common code is in mode-tree.c, which provides an API used by the
three modes now separated into window-{buffer,client,tree}.c. Buffer
mode shows buffers, client mode clients and tree mode a tree of
sessions, windows and panes.

Each mode has a common set of key bindings plus a few that are specific
to the mode. Other changes are:

- each mode has a preview pane: for buffers this is the buffer content
  (very useful), for others it is a preview of the pane;

- items may be sorted in different ways ('O' key);

- multiple items may be tagged and an operation applied to all of them
  (for example, to delete multiple buffers at once);

- in tree mode a command may be run on the selected item (session,
  window, pane) or on tagged items (key ':');

- displayed items may be filtered in tree mode by using a format (this
  is used to implement find-window) (key 'f');

- the custom format (-F) for the display is no longer available;

- shortcut keys change from 0-9, a-z, A-Z which was always a bit weird
  with keys used for other uses to 0-9, M-a to M-z.

Now that the code is simpler, other improvements will come later.

Primary key bindings for each mode are documented under the commands in
the man page (choose-buffer, choose-client, choose-tree).

Parts written by Thomas Adam.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.87 2017/05/29 20:41:29 nicm Exp $ */
d57 3
d124 1
a124 1
	  .type = OPTIONS_TABLE_FLAG,
d126 1
@


1.87
log
@Store a copy of the old status line, will be needed soon for new choose mode.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.86 2017/01/24 20:15:32 nicm Exp $ */
d65 1
a65 1
	  .default_num = 20
d74 3
a76 1
			 "info=show-messages -JT",
@


1.86
log
@Make update-environment an array as well.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.85 2017/01/24 20:05:15 nicm Exp $ */
d128 1
a128 1
	                 ":Cs=\\E]12;%p1%s\\007:Cr=\\E]112\\007"
d488 1
a488 1
	                 "SSH_CONNECTION WINDOWID XAUTHORITY"
d543 1
a543 1
	                 "#{?pane_dead,[dead],}"
d701 1
a701 1
	                 "\"#{pane_title}\""
@


1.85
log
@Convert terminal-overrides to an array option.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.84 2017/01/24 19:59:19 nicm Exp $ */
d485 1
a485 1
	  .type = OPTIONS_TABLE_STRING,
a488 1

@


1.84
log
@server-info can become an alias rather than a command.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.83 2017/01/24 19:53:37 nicm Exp $ */
d125 1
a125 1
	  .type = OPTIONS_TABLE_STRING,
d129 2
a130 1
			 ":Ss=\\E[%p1%d q:Se=\\E[2 q,screen*:XT"
@


1.83
log
@Add support for custom command aliases, this is an array option which
contains items of the form "alias=command". This is consulted when an
unknown command is parsed.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.82 2017/01/16 14:52:25 nicm Exp $ */
d72 4
a75 1
	                 "splitp=split-window"
@


1.82
log
@Revert WIP parts of previous I didn't mean to commit yet.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.80 2017/01/15 20:48:41 nicm Exp $ */
d66 7
@


1.81
log
@getopt() has a struct option so just return to using options_entry.
@
text
@a67 7
	{ .name = "command-alias",
	  .type = OPTIONS_TABLE_ARRAY,
	  .scope = OPTIONS_TABLE_SERVER,
	  .default_str = "split-pane=split-window,"
	                 "splitp=split-window"
	},

@


1.80
log
@Major tidy up and rework of options tree and set-option/show-options
commands this pushes more of the code into options.c and ties it more
closely to the options table rather than having an unnecessary
split. Also add support for array options (will be used later). Only
(intentional) user visible change is that show-options output is now
passed through vis(3) with VIS_DQ so quotes are escaped.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.79 2017/01/15 20:16:22 nicm Exp $ */
d66 7
@


1.79
log
@Remove unused quiet option.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.78 2017/01/12 15:36:35 nicm Exp $ */
d58 1
a58 1
/* Server options. */
a897 97

/* Populate an options tree from a table. */
void
options_table_populate_tree(enum options_table_scope scope, struct options *oo)
{
	const struct options_table_entry	*oe;

	for (oe = options_table; oe->name != NULL; oe++) {
		if (oe->scope == OPTIONS_TABLE_NONE)
			fatalx("no scope for %s", oe->name);
		if (oe->scope != scope)
			continue;
		switch (oe->type) {
		case OPTIONS_TABLE_STRING:
			options_set_string(oo, oe->name, 0, "%s",
			    oe->default_str);
			break;
		case OPTIONS_TABLE_STYLE:
			options_set_style(oo, oe->name, 0, oe->default_str);
			break;
		default:
			options_set_number(oo, oe->name, oe->default_num);
			break;
		}
	}
}

/* Print an option using its type from the table. */
const char *
options_table_print_entry(const struct options_table_entry *oe,
    struct options_entry *o, int no_quotes)
{
	static char	 out[BUFSIZ];
	const char	*s;

	*out = '\0';
	switch (oe->type) {
	case OPTIONS_TABLE_STRING:
		if (no_quotes)
			xsnprintf(out, sizeof out, "%s", o->str);
		else
			xsnprintf(out, sizeof out, "\"%s\"", o->str);
		break;
	case OPTIONS_TABLE_NUMBER:
		xsnprintf(out, sizeof out, "%lld", o->num);
		break;
	case OPTIONS_TABLE_KEY:
		s = key_string_lookup_key(o->num);
		xsnprintf(out, sizeof out, "%s", s);
		break;
	case OPTIONS_TABLE_COLOUR:
		s = colour_tostring(o->num);
		xsnprintf(out, sizeof out, "%s", s);
		break;
	case OPTIONS_TABLE_ATTRIBUTES:
		s = attributes_tostring(o->num);
		xsnprintf(out, sizeof out, "%s", s);
		break;
	case OPTIONS_TABLE_FLAG:
		if (o->num)
			strlcpy(out, "on", sizeof out);
		else
			strlcpy(out, "off", sizeof out);
		break;
	case OPTIONS_TABLE_CHOICE:
		s = oe->choices[o->num];
		xsnprintf(out, sizeof out, "%s", s);
		break;
	case OPTIONS_TABLE_STYLE:
		s = style_tostring(&o->style);
		xsnprintf(out, sizeof out, "%s", s);
		break;
	}
	return (out);
}

/* Find an option. */
int
options_table_find(const char *optstr, const struct options_table_entry **oe)
{
	const struct options_table_entry	*oe_loop;

	for (oe_loop = options_table; oe_loop->name != NULL; oe_loop++) {
		if (strncmp(oe_loop->name, optstr, strlen(optstr)) != 0)
			continue;

		/* If already found, ambiguous. */
		if (*oe != NULL)
			return (-1);
		*oe = oe_loop;

		/* Bail now if an exact match. */
		if (strcmp(oe_loop->name, optstr) == 0)
			break;
	}
	return (0);
}
@


1.78
log
@Simplify appending to string options.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.77 2017/01/11 14:56:44 nicm Exp $ */
a105 6
	},

	{ .name = "quiet",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_SERVER,
	  .default_num = 0
@


1.77
log
@Some tidying and tweaks to options code.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.76 2016/12/30 13:49:34 nicm Exp $ */
d918 2
a919 1
			options_set_string(oo, oe->name, "%s", oe->default_str);
d922 1
a922 1
			options_set_style(oo, oe->name, oe->default_str, 0);
@


1.76
log
@Change the xterm-keys option to default to on, so that tmux will
generate xterm(1) escape sequences for function keys with modifiers.

With the option off most of these keys are ignored by default, except
for ctrl + arrows which use a variant that nothing else seems to use and
I don't remember why we chose. The xterm escape sequences are now the
most common.

Prompted by a question from mpi@@.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.75 2016/10/13 21:37:03 nicm Exp $ */
d950 2
a951 2
		xsnprintf(out, sizeof out, "%s",
		    key_string_lookup_key(o->num));
@


1.75
log
@Remove the set-remain-on-exit option, it was always a hack and can now
be done with hooks instead.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.74 2016/10/03 22:52:11 nicm Exp $ */
d899 1
a899 1
	  .default_num = 0
@


1.74
log
@Remove some dead code in cmd-move-window.c and make a load of local
functions static.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.73 2016/05/04 21:29:47 nicm Exp $ */
a320 6
	},

	{ .name = "set-remain-on-exit",
	  .type = OPTIONS_TABLE_FLAG,
	  .scope = OPTIONS_TABLE_SESSION,
	  .default_num = 0
@


1.73
log
@Fix up a couple of long lines.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.72 2016/04/29 15:00:48 nicm Exp $ */
d36 1
a36 1
const char *options_table_mode_keys_list[] = {
d39 1
a39 1
const char *options_table_clock_mode_style_list[] = {
d42 1
a42 1
const char *options_table_status_keys_list[] = {
d45 1
a45 1
const char *options_table_status_justify_list[] = {
d48 1
a48 1
const char *options_table_status_position_list[] = {
d51 1
a51 1
const char *options_table_bell_action_list[] = {
d54 1
a54 1
const char *options_table_pane_status_list[] = {
@


1.72
log
@Add option to include status text in the pane borders. If
pane-border-status is set to "top" or "bottom" (rather than "off"),
every pane has a permanent top or bottom border containing the text from
pane-border-format.

Based on a diff sent long ago by Jonathan Slenders, mostly rewritten and
simplified by me.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.71 2016/01/19 15:59:12 nicm Exp $ */
d702 2
a703 1
	  .default_str = "#{?pane_active,#[reverse],}#{pane_index}#[default] \"#{pane_title}\""
@


1.71
log
@I no longer use my SourceForge address so replace it.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.70 2015/12/12 18:32:24 nicm Exp $ */
d54 3
d697 13
@


1.70
log
@Add key-table option to set the default key table for a session, allows
different key bindings for different sessions and a few other things.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.69 2015/11/24 09:34:55 nicm Exp $ */
d4 1
a4 1
 * Copyright (c) 2011 Nicholas Marriott <nicm@@users.sourceforge.net>
@


1.69
log
@Don't allow options in table without scope set.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.68 2015/11/22 18:28:01 tim Exp $ */
d212 6
@


1.68
log
@If display-time is set to 0, show status messages until a key is pressed;
OK nicm@@
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.67 2015/11/20 12:01:19 nicm Exp $ */
d895 2
@


1.67
log
@Instead of separate tables for different types of options, give each
option a scope type (server, session, window) in one table.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.66 2015/11/12 11:09:11 nicm Exp $ */
d201 1
a201 1
	  .minimum = 1,
@


1.66
log
@Nuke the utf8 and status-utf8 options and make tmux only a UTF-8
terminal. We still support non-UTF-8 terminals outside tmux, but inside
it is always UTF-8 (as when the utf8 and status-utf8 options were on).
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.65 2015/11/12 08:19:18 nicm Exp $ */
d56 1
a56 1
const struct options_table_entry server_options_table[] = {
d59 1
d67 1
d73 1
d81 1
d87 1
d93 1
d99 1
d107 1
d113 1
d119 1
a124 5
	{ .name = NULL }
};

/* Session options. */
const struct options_table_entry session_options_table[] = {
d127 1
d135 1
d143 1
d150 1
d156 1
d162 1
d168 1
d174 1
d180 1
d186 1
d192 1
d200 1
d208 1
d216 1
d224 1
d230 1
d237 1
d244 1
d251 1
d258 1
d265 1
d271 1
d278 1
d284 1
d290 1
d296 1
d302 1
d308 1
d316 1
d322 1
d328 1
d334 1
d340 1
d347 1
d354 1
d361 1
d369 1
d376 1
d383 1
d389 1
d396 1
d403 1
d410 1
d418 1
d424 1
d431 1
d437 1
d444 1
d451 1
d458 1
d466 1
d472 1
d478 1
d486 1
d492 1
d498 1
d504 1
a507 5
	{ .name = NULL }
};

/* Window options. */
const struct options_table_entry window_options_table[] = {
d510 1
d516 1
d522 1
d528 1
d534 1
d541 1
d547 1
d554 1
d562 1
d570 1
d578 1
d586 1
d593 1
d600 1
d607 1
d614 1
d620 1
d626 1
d634 1
d642 1
d650 1
d657 1
d664 1
d670 1
d678 1
d685 1
d692 1
d698 1
d704 1
d710 1
d716 1
d722 1
d729 1
d736 1
d743 1
d749 1
d756 1
d763 1
d770 1
d777 1
d783 1
d790 1
d797 1
d804 1
d811 1
d817 1
d823 1
d830 1
d836 1
d843 1
d850 1
d857 1
d863 1
d869 1
d875 1
d881 1
d890 1
a890 2
options_table_populate_tree(
    const struct options_table_entry *table, struct options *oo)
d894 3
a896 1
	for (oe = table; oe->name != NULL; oe++) {
d962 1
a962 3
options_table_find(
    const char *optstr, const struct options_table_entry **table,
    const struct options_table_entry **oe)
a963 5
	static const struct options_table_entry	*tables[] = {
		server_options_table,
		window_options_table,
		session_options_table
	};
a964 1
	u_int					 i;
d966 12
a977 15
	for (i = 0; i < nitems(tables); i++) {
		for (oe_loop = tables[i]; oe_loop->name != NULL; oe_loop++) {
			if (strncmp(oe_loop->name, optstr, strlen(optstr)) != 0)
				continue;

			/* If already found, ambiguous. */
			if (*oe != NULL)
				return (-1);
			*oe = oe_loop;
			*table = tables[i];

			/* Bail now if an exact match. */
			if (strcmp((*oe)->name, optstr) == 0)
				break;
		}
@


1.65
log
@Default history-file should be "" not NULL, from Greg Onufe.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.64 2015/11/11 23:23:33 nicm Exp $ */
a418 5
	{ .name = "status-utf8",
	  .type = OPTIONS_TABLE_FLAG,
	  .default_num = 0 /* overridden in main() */
	},

a619 5
	},

	{ .name = "utf8",
	  .type = OPTIONS_TABLE_FLAG,
	  .default_num = 0 /* overridden in main() */
@


1.64
log
@Drop mouse-utf8 option and always turn on UTF-8 mouse if the client says
it supports UTF-8.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.63 2015/09/25 23:30:24 nicm Exp $ */
d88 1
a88 1
	  .default_str = NULL
@


1.63
log
@Adding colors=256 to *256color* was always pretty stupid and now it
won't work (without adding setaf@@:setab@@ too).
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.62 2015/08/28 12:31:55 nicm Exp $ */
a254 5
	  .type = OPTIONS_TABLE_FLAG,
	  .default_num = 0
	},

	{ .name = "mouse-utf8",
@


1.62
log
@Remove the lock-server option which is a bit redundant, it isn't that
different without it.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.61 2015/07/20 15:50:04 nicm Exp $ */
d110 1
a110 2
	  .default_str = "*256col*:colors=256"
	                 ",xterm*:XT:Ms=\\E]52;%p1%s;%p2%s\\007"
@


1.61
log
@Add an option (history-file) for a file to save/restore command prompt
history, from Olof-Joachim Frahm.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.60 2015/05/12 15:29:29 nicm Exp $ */
a206 5
	},

	{ .name = "lock-server",
	  .type = OPTIONS_TABLE_FLAG,
	  .default_num = 1
@


1.60
log
@Add a session_alerts format which is a list of all the alerts in the
current session in symbolic form (something like "0!,4~,5!"). Use this
in the default set-titles-string. Prompted by a request from Jan ONDREJ.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.59 2015/05/12 15:27:46 nicm Exp $ */
d84 5
@


1.59
log
@Add bell-action "other" to pass through bells in all windows except the
current, suggested by Jan ONDREJ.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.58 2015/05/11 10:58:22 nicm Exp $ */
d299 1
a299 1
	  .default_str = "#S:#I:#W - \"#T\""
@


1.58
log
@Left the c0-* options behind in the table.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.57 2015/05/06 08:35:39 nicm Exp $ */
d52 1
a52 1
	"none", "any", "current", NULL
@


1.57
log
@Add a format window_linked which is 1 if a window has been linked
multiple times, also remove the default space in window_flags and use a
conditional to add it in window-status-format (this means additional
flags can be added in the option without extra spaces). From Thomas Adam
with tweaks by me.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.56 2015/04/29 15:59:08 nicm Exp $ */
a485 14
	},

	{ .name = "c0-change-trigger",
	  .type = OPTIONS_TABLE_NUMBER,
	  .default_num = 250,
	  .minimum = 0,
	  .maximum = USHRT_MAX
	},

	{ .name = "c0-change-interval",
	  .type = OPTIONS_TABLE_NUMBER,
	  .default_num = 100,
	  .minimum = 1,
	  .maximum = USHRT_MAX
@


1.56
log
@If default-terminal is set to "screen" or "screen-*", emulate screen's
historical (incorrect) behaviour for SGR 3 and send smso
(standout). Previously, we would send sitm (italics) if the terminal
outside had it and smso otherwise. This was acceptably until recently
because xterm's terminfo entry lacked sitm, so most users got smso.

People who want italics should set default-terminal to the forthcoming
"tmux" entry (and be prepared to deal with it being missing on older
hosts).

As a side-effect this changes default-terminal to be a server rather
than a session option.

suggested by and ok naddy
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.55 2015/04/19 21:34:21 nicm Exp $ */
d740 1
a740 1
	  .default_str = "#I:#W#F"
d756 1
a756 1
	  .default_str = "#I:#W#F"
@


1.55
log
@Rewrite of tmux mouse support which was a mess. Instead of having
options for "mouse-this" and "mouse-that", mouse events may be bound as
keys and there is one option "mouse" that turns on mouse support
entirely (set -g mouse on).

See the new MOUSE SUPPORT section of the man page for description of the
key names and new flags (-t= to specify the pane or window under mouse
as a target, and send-keys -M to pass through a mouse event).

The default builtin bindings for the mouse are:

    bind -n   MouseDown1Pane select-pane -t=; send-keys -M
    bind -n MouseDown1Status select-window -t=
    bind -n   MouseDrag1Pane copy-mode -M
    bind -n MouseDrag1Border resize-pane -M

To get the effect of turning mode-mouse off, do:

    unbind -n MouseDrag1Pane
    unbind -temacs-copy MouseDrag1Pane

The old mouse options are now gone, set-option -q may be used to
suppress warnings if mixing configuration files.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.54 2015/04/19 21:05:27 nicm Exp $ */
d64 5
a148 5
	},

	{ .name = "default-terminal",
	  .type = OPTIONS_TABLE_STRING,
	  .default_str = "screen"
@


1.54
log
@Support setting the default window and pane background colours (window
and active pane via window-style and window-active-style options, an
individual pane by a new select-pane -P flag). From J Raynor.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.53 2015/02/06 15:09:34 nicm Exp $ */
a38 3
const char *options_table_mode_mouse_list[] = {
	"off", "on", "copy-mode", NULL
};
d255 1
a255 11
	{ .name = "mouse-resize-pane",
	  .type = OPTIONS_TABLE_FLAG,
	  .default_num = 0
	},

	{ .name = "mouse-select-pane",
	  .type = OPTIONS_TABLE_FLAG,
	  .default_num = 0
	},

	{ .name = "mouse-select-window",
a562 6
	},

	{ .name = "mode-mouse",
	  .type = OPTIONS_TABLE_CHOICE,
	  .choices = options_table_mode_mouse_list,
	  .default_num = 0
@


1.53
log
@Move pane border options to window options rather than session, from Marc Finet.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.52 2015/01/21 12:20:56 sthen Exp $ */
d669 10
@


1.52
log
@In options-table.c r1.51 an extra space was added to the default status-right,
overrunning status-right-length with long window titles. Allow for the extra
space so the last digit of the year isn't lost.  ok nicm@@
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.51 2014/11/05 23:15:11 nicm Exp $ */
a277 34
	{ .name = "pane-active-border-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .default_num = 8,
	  .style = "pane-active-border-style"
	},

	{ .name = "pane-active-border-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .default_num = 2,
	  .style = "pane-active-border-style"
	},

	{ .name = "pane-active-border-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .default_str = "fg=green"
	},

	{ .name = "pane-border-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .default_num = 8,
	  .style = "pane-border-style"
	},

	{ .name = "pane-border-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .default_num = 8,
	  .style = "pane-border-style"
	},

	{ .name = "pane-border-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .default_str = "default"
	},

d615 17
d637 17
@


1.51
log
@Do not put a space between status-left/status-right and the window list,
instead move the space into the defaults for the options (so status-left
now defaults to "[#S] ". From Balazs Kezes.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.50 2014/04/17 12:57:28 nicm Exp $ */
d434 1
a434 1
	  .default_str = " \"#{=22:pane_title}\" %H:%M %d-%b-%y"
@


1.50
log
@Wrap some long lines.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.49 2014/04/17 11:38:35 nicm Exp $ */
d393 1
a393 1
	  .default_str = "[#S]"
d434 1
a434 1
	  .default_str = "\"#{=22:pane_title}\" %H:%M %d-%b-%y"
@


1.49
log
@Remove some unnecessary includes and fix a typo.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.48 2014/04/17 07:55:43 nicm Exp $ */
d531 2
a532 1
	  .default_str = "#{?pane_in_mode,[tmux],#{pane_current_command}}#{?pane_dead,[dead],}"
@


1.48
log
@Remove the "info" message mechanism, this was only used for about five
mostly useless and annoying messages. Change those commands to silence
on success like all the others. Still accept the -q command line flag
and "quiet" server option for now.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.47 2014/04/17 07:36:45 nicm Exp $ */
d31 2
a32 2
 * string types). These tables are then used to loop up the real type when
 * the user sets an option or its value needs to be shown.
@


1.47
log
@Remove the monitor-content option and associated bits and bobs. It's
never worked very well. If there is a big demand for it to return, will
consider better ways to do it.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.46 2014/03/31 21:41:35 nicm Exp $ */
d93 1
a93 1
	  .default_num = 0 /* overridden in main() */
@


1.46
log
@Make message-limit a server option.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.45 2014/02/23 00:53:06 nicm Exp $ */
a493 5
	{ .name = "visual-content",
	  .type = OPTIONS_TABLE_FLAG,
	  .default_num = 0
	},

a626 5
	{ .name = "monitor-content",
	  .type = OPTIONS_TABLE_STRING,
	  .default_str = ""
	},

a725 23
	},

	{ .name = "window-status-content-attr",
	  .type = OPTIONS_TABLE_ATTRIBUTES,
	  .default_num = GRID_ATTR_REVERSE,
	  .style = "window-status-content-style"
	},

	{ .name = "window-status-content-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .default_num = 8,
	  .style = "window-status-content-style"
	},

	{ .name = "window-status-content-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .default_num = 8,
	  .style = "window-status-content-style"
	},

	{ .name = "window-status-content-style",
	  .type = OPTIONS_TABLE_STYLE,
	  .default_str = "reverse"
@


1.45
log
@Change terminal-overrides to a server option (now that we have them), it
doesn't make much sense as a session option.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.44 2014/01/28 23:11:44 nicm Exp $ */
d84 7
a250 7
	},

	{ .name = "message-limit",
	  .type = OPTIONS_TABLE_NUMBER,
	  .minimum = 0,
	  .maximum = INT_MAX,
	  .default_num = 20
@


1.44
log
@Fix missing argument, stupid last minute changes...
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.43 2014/01/28 23:07:09 nicm Exp $ */
d94 8
a474 8
	},

	{ .name = "terminal-overrides",
	  .type = OPTIONS_TABLE_STRING,
	  .default_str = "*256col*:colors=256"
	                 ",xterm*:XT:Ms=\\E]52;%p1%s;%p2%s\\007"
	                 ":Cs=\\E]12;%p1%s\\007:Cr=\\E]112\\007"
			 ":Ss=\\E[%p1%d q:Se=\\E[2 q,screen*:XT"
@


1.43
log
@Allow replacing each of the many sets of separate foo-{fg,bg,attr}
options with a single foo-style option. For example:

    set -g status-fg yellow
    set -g status-bg red
    set -g status-attr blink

Becomes:

    set -g status-style fg=yellow,bg=red,blink

The -a flag to set can be used to add to rather than replace a style. So:

    set -g status-bg red

Becomes:

    set -ag status-style bg=red

Currently this is fully backwards compatible (all *-{fg,bg,attr} options
remain) but the plan is to deprecate them over time.

From Tiago Cunha.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.42 2013/10/10 12:26:36 nicm Exp $ */
d859 1
a859 1
			options_set_style(oo, oe->name, oe->default_str);
@


1.42
log
@Alter how tmux handles the working directory to internally use file
descriptors rather than strings.

- Each session still has a current working directory.

- New sessions still get their working directory from the client that
  created them or its attached session if any.

- New windows are created by default in the session working directory.

- The -c flag to new, neww, splitw allows the working directory to be
  overridden.

- The -c flag to attach let's the session working directory be changed.

- The default-path option has been removed.

To get the equivalent to default-path '.', do:

        bind c neww -c $PWD

To get the equivalent of default-path '~', do:

        bind c neww -c ~

This also changes the client identify protocol to be a set of messages rather
than one as well as some other changes that should make it easier to make
backwards-compatible protocol changes in future.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.41 2013/10/10 11:56:50 nicm Exp $ */
d199 2
a200 1
	  .default_num = 0
d205 2
a206 1
	  .default_num = 3
d211 2
a212 1
	  .default_num = 0
d217 2
a218 1
	  .default_num = 0
d223 7
a229 1
	  .default_num = 3
d234 2
a235 1
	  .default_num = 0
d245 5
d272 2
a273 1
	  .default_num = 8
d278 7
a284 1
	  .default_num = 2
d289 2
a290 1
	  .default_num = 8
d295 7
a301 1
	  .default_num = 8
d348 2
a349 1
	  .default_num = 0
d354 2
a355 1
	  .default_num = 2
d360 2
a361 1
	  .default_num = 0
d390 2
a391 1
	  .default_num = 0
d396 2
a397 1
	  .default_num = 8
d402 2
a403 1
	  .default_num = 8
d413 5
d431 2
a432 1
	  .default_num = 0
d437 2
a438 1
	  .default_num = 8
d443 2
a444 1
	  .default_num = 8
d454 10
d594 2
a595 1
	  .default_num = 0
d600 2
a601 1
	  .default_num = 3
d606 2
a607 1
	  .default_num = 0
d622 5
d682 2
a683 1
	  .default_num = GRID_ATTR_REVERSE
d688 2
a689 1
	  .default_num = 8
d694 13
a706 1
	  .default_num = 8
d711 2
a712 1
	  .default_num = GRID_ATTR_REVERSE
d717 2
a718 1
	  .default_num = 8
d723 13
a735 1
	  .default_num = 8
d740 2
a741 1
	  .default_num = GRID_ATTR_REVERSE
d746 2
a747 1
	  .default_num = 8
d752 2
a753 1
	  .default_num = 8
d756 3
a758 8
	{ .name = "window-status-attr",
	  .type = OPTIONS_TABLE_ATTRIBUTES,
	  .default_num = 0
	},

	{ .name = "window-status-bg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .default_num = 8
d763 2
a764 1
	  .default_num = 0
d769 2
a770 1
	  .default_num = 8
d775 2
a776 1
	  .default_num = 8
d784 16
d802 2
a803 1
	  .default_num = 0
d808 2
a809 1
	  .default_num = 8
d814 2
a815 1
	  .default_num = 8
d818 3
a820 3
	{ .name = "window-status-fg",
	  .type = OPTIONS_TABLE_COLOUR,
	  .default_num = 8
d823 1
a823 1
	{ .name = "window-status-format",
d825 1
a825 1
	  .default_str = "#I:#W#F"
d828 3
a830 3
	{ .name = "window-status-separator",
	  .type = OPTIONS_TABLE_STRING,
	  .default_str = " "
d854 2
a855 1
		if (oe->default_str != NULL)
d857 5
a861 1
		else
d863 2
d907 4
@


1.41
log
@Add automatic-rename-format option allowing automatic rename to use
something other than pane_current_command.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.40 2013/10/10 11:50:20 nicm Exp $ */
a126 5
	},

	{ .name = "default-path",
	  .type = OPTIONS_TABLE_STRING,
	  .default_str = "~"
@


1.40
log
@Add length limit operator for formats.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.39 2013/10/05 13:56:48 nicm Exp $ */
d483 5
@


1.39
log
@Change the default for the default-path option to ~. This is a quick
change to turn off the KERN_PROC_CWD code which is unpredictable. Later
it will go away and there may be other changes to how this works.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.38 2013/06/23 13:10:46 nicm Exp $ */
d390 1
a390 1
	  .default_str = "\"#22T\" %H:%M %d-%b-%y"
@


1.38
log
@Focus events can cause trouble if left on and they can't be turned off
during idle periods (like the other states are) because we'd miss
events. So add a server option to control them. Defaults to off.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.37 2013/06/02 07:52:15 nicm Exp $ */
d131 1
a131 1
	  .default_str = ""
@


1.37
log
@The actual terminfo entries we ended up with for cursor changes are Cs,
Ce, Ss and Se (not Cc, Ce, Cs, Csr). So use and document these instead
of the ones we were using earlier.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.36 2013/03/27 11:17:12 nicm Exp $ */
d75 5
@


1.36
log
@Remove tmux's (already minimal) 88 colour support. Such terminals are
few and unnecessary.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.35 2013/03/25 15:59:57 nicm Exp $ */
d419 2
a420 2
	                 ":Cc=\\E]12;%p1%s\\007:Cr=\\E]112\\007"
			 ":Cs=\\E[%p1%d q:Csr=\\E[2 q,screen*:XT"
@


1.35
log
@Revert the command-prefix change which breaks sequences of commands.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.34 2013/03/24 09:21:27 nicm Exp $ */
d417 1
a417 1
	  .default_str = "*88col*:colors=88,*256col*:colors=256"
@


1.34
log
@Add option command-prefix which is automatically prepended to any
command (apart from a naked default-shell). The default is "exec ".
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.33 2013/03/21 16:15:52 nicm Exp $ */
a502 5
	},

	{ .name = "command-prefix",
	  .type = OPTIONS_TABLE_STRING,
	  .default_str = "exec "
@


1.33
log
@Add -v to set and setw to show only option value.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.32 2013/01/17 00:11:22 nicm Exp $ */
a479 1

d503 5
@


1.32
log
@Remove the layout undo/redo code which never really worked.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.31 2013/01/15 22:55:29 nicm Exp $ */
d749 2
a750 2
options_table_print_entry(
    const struct options_table_entry *oe, struct options_entry *o)
d758 4
a761 1
		xsnprintf(out, sizeof out, "\"%s\"", o->str);
d767 2
a768 1
		xsnprintf(out, sizeof out, "%s", key_string_lookup_key(o->num));
@


1.31
log
@If timing between keys is less than (by default) 1 millisecond, assume
the text is being pasted. assume-paste-time option changes the value (0
disables). Based on a diff from Marcin Kulik.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.30 2012/11/27 13:52:23 nicm Exp $ */
a517 7
	},

	{ .name = "layout-history-limit",
	  .type = OPTIONS_TABLE_NUMBER,
	  .minimum = 1,
	  .maximum = USHRT_MAX,
	  .default_num = 20
@


1.30
log
@Add window-status-last-* options, from Boris Faure.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.29 2012/04/29 17:20:01 nicm Exp $ */
d94 7
@


1.29
log
@Add a flag to move-window to renumber the windows in a session (closing
any gaps) and add an option to do this automatically each time a window
is killed. From Thomas Adam.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.28 2012/04/23 22:23:14 nicm Exp $ */
d687 15
@


1.28
log
@Add window-status-separator option, from Thomas Adam.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.27 2012/04/01 13:18:38 nicm Exp $ */
d275 5
@


1.27
log
@Add a layout history which can be stepped through with select-layout -u
and -U commands (bound to 'u' and 'U' by default).
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.26 2012/03/20 11:23:12 nicm Exp $ */
d692 5
@


1.26
log
@50 is a too low trigger default on larger terminals, bump to 250.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.25 2012/03/20 11:01:00 nicm Exp $ */
d506 7
@


1.25
log
@Add a simple form of output rate limiting by counting the number of
certain C0 sequences (linefeeds, backspaces, carriage returns) and if it
exceeds a threshold (current default 50/millisecond), start to redraw
the pane every 100 milliseconds instead of making each change as it
comes. Two configuration options - c0-change-trigger and
c0-change-interval.

This makes tmux much more responsive under very fast output (for example
yes(1) or accidentally cat'ing a large file) but may not be perfect on
all terminals and connections - feedback very welcome, particularly
where this change has a negative rather than positive effect (making it
off by default is a possibility).

After much experimentation based originally on a request Robin Lee
Powell (which ended with a completely different solution), this idea
from discussion with Ailin Nemui.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.24 2012/03/17 21:40:53 nicm Exp $ */
d471 1
a471 1
	  .default_num = 50,
@


1.24
log
@Add a wrap-search option to turn off wrapping of searches in copy
mode. From Jacobo de Vera.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.23 2012/02/29 21:10:51 nicm Exp $ */
d466 15
@


1.23
log
@Remove accidentally committed option.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.22 2012/02/25 12:57:42 nicm Exp $ */
d670 5
@


1.22
log
@Allow a single option to be specified to show-options to show just that
option.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.21 2012/02/15 18:44:49 nicm Exp $ */
a568 7
	  .default_num = 0
	},

	{ .name = "rate-limit",
	  .type = OPTIONS_TABLE_NUMBER,
	  .minimum = 0,
	  .maximum = UINT_MAX,
@


1.21
log
@Sort some entries, from Ben Boeckel.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.20 2012/01/29 09:37:02 nicm Exp $ */
d572 7
d741 33
@


1.20
log
@Add an option to move the status line to the top of the screen,
requested by many.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.19 2012/01/21 08:40:09 nicm Exp $ */
d587 1
a587 1
	{ .name = "window-status-bell-attr",
d592 1
a592 1
	{ .name = "window-status-bell-bg",
d597 1
a597 1
	{ .name = "window-status-bell-fg",
d602 1
a602 1
	{ .name = "window-status-content-attr",
d607 1
a607 1
	{ .name = "window-status-content-bg",
d612 1
a612 1
	{ .name = "window-status-content-fg",
d617 1
a617 1
	{ .name = "window-status-activity-attr",
d622 1
a622 1
	{ .name = "window-status-activity-bg",
d627 1
a627 1
	{ .name = "window-status-activity-fg",
@


1.19
log
@Drop the ability to have a list of keys in the prefix in favour of two
separate options, prefix and prefix2. This simplifies the code and gets
rid the data options type which was only used for this one option.

Also add a -2 flag to send-prefix to send the secondary prefix key,
fixing a cause of minor irritation.

People who want three prefix keys are out of luck :-).
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.18 2012/01/20 19:51:28 nicm Exp $ */
d51 3
d363 6
@


1.18
log
@Add some trivial additional status line attributes from jwcxz at users
dot sourceforge dot net.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.17 2012/01/20 19:15:40 nicm Exp $ */
d265 7
a271 2
	  .type = OPTIONS_TABLE_KEYS,
	  /* set in main() */
d691 2
a692 4
	static char				 out[BUFSIZ];
	const char				*s;
	struct keylist				*keylist;
	u_int					 i;
d702 2
a703 8
	case OPTIONS_TABLE_KEYS:
		keylist = o->data;
		for (i = 0; i < ARRAY_LENGTH(keylist); i++) {
			s = key_string_lookup_key(ARRAY_ITEM(keylist, i));
			strlcat(out, s, sizeof out);
			if (i != ARRAY_LENGTH(keylist) - 1)
				strlcat(out, ",", sizeof out);
		}
@


1.17
log
@Add an option to disable the window rename escape sequence, from Romain
Francoise.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.16 2011/11/15 23:24:04 nicm Exp $ */
d573 1
a573 1
	{ .name = "window-status-alert-attr",
d578 1
a578 1
	{ .name = "window-status-alert-bg",
d583 31
a613 1
	{ .name = "window-status-alert-fg",
@


1.16
log
@Move word-separators to be a session rather than window option, from Ben
Boeckel.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.15 2011/11/05 09:06:31 nicm Exp $ */
d437 5
@


1.15
log
@Option to change status line (message) background when using vi keys and
in command mode. From Ben Boeckel.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.14 2011/10/27 22:54:06 nicm Exp $ */
d424 5
a620 5
	},

	{ .name = "word-separators",
	  .type = OPTIONS_TABLE_STRING,
	  .default_str = " -_@@"
@


1.14
log
@Add screen*:XT to terminal-overrides for tmux-in-tmux, from Romain
Francoise.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.13 2011/08/24 10:29:57 nicm Exp $ */
d193 15
@


1.13
log
@Add pane-base-index option, from Ben Barbour.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.12 2011/07/30 18:01:26 nicm Exp $ */
d379 1
a379 1
			 ":Cs=\\E[%p1%d q:Csr=\\E[2 q"
@


1.12
log
@Extend the mode-mouse option to add a third choice which means the mouse
does not enter copy mode. Patch from SF bug 3374493.

In future the mode-mouse option is likely to die and be broken into
several smaller options.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.11 2011/07/03 19:07:54 nicm Exp $ */
d523 7
@


1.11
log
@Add an option to trigger the terminal bell when there is an alert, from
Marco Beck.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.10 2011/05/20 19:17:39 nicm Exp $ */
d39 3
d490 2
a491 1
	  .type = OPTIONS_TABLE_FLAG,
@


1.10
log
@Support DECSCUSR sequence to set the cursor style with two new
terminfo(5) extensions, Cs and Csr. Written by Ailin Nemui.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.9 2011/05/20 19:03:58 nicm Exp $ */
d99 5
@


1.9
log
@Support xterm(1) cursor colour change sequences through terminfo(5) Cc
(set) and Cr (reset) extensions. Originally by Sean Estabrooks, tweaked
by me and Ailin Nemui.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.8 2011/05/18 20:24:29 nicm Exp $ */
d371 1
@


1.8
log
@Support setting the xterm clipboard when copying from copy mode using
the xterm escape sequence for the purpose (if xterm is configured to
allow it).

Written by and much discussed Ailin Nemui, guidance on
xterm/termcap/terminfo from Thomas Dickey.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.7 2011/05/08 20:34:12 nicm Exp $ */
d369 2
a370 1
	  		 ",xterm*:XT:Ms=\\E]52;%p1%s;%p2%s\\007"
d376 1
a376 1
	                    "SSH_CONNECTION WINDOWID XAUTHORITY"
@


1.7
log
@Add a new option, mouse-resize-pane. When on, panes may be resized by
dragging their borders. From hsim at gmx.li.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.6 2011/05/08 19:53:06 nicm Exp $ */
d78 5
d368 2
a369 1
	  .default_str = "*88col*:colors=88,*256col*:colors=256,xterm*:XT"
@


1.6
log
@Use the tsl and fsl terminfo(5) capabilities to update terminal title
and automatically fill them in on terminals with the XT capability
(which means their title setting is xterm-compatible). From hsim at
gmx.li.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.5 2011/04/18 19:49:05 nicm Exp $ */
d194 5
@


1.5
log
@Add an option (mouse-select-window) which allows the mouse to be used by
clicking on the status line, written by hsim at gmx dot li.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.4 2011/04/09 20:00:29 nicm Exp $ */
d358 1
a358 1
	  .default_str = "*88col*:colors=88,*256col*:colors=256"
@


1.4
log
@Since buffers are now global, bump the default buffer-limit a bit higher
to 20 rather than 9.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.3 2011/01/13 13:38:57 nicm Exp $ */
d197 5
@


1.3
log
@The maximum history-limit was accidentally reduced, fix it back to INT_MAX.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.2 2011/01/03 23:35:21 nicm Exp $ */
d58 1
a58 1
	  .default_num = 9
@


1.2
log
@Support for UTF-8 mouse input (\033[1005h). This was added in xterm 262
and supports larger terminals than the older way.

If the new mouse-utf8 option is on, UTF-8 mouse input is enabled for all
UTF-8 terminals. The option defaults to on if LANG etc are set in the
same manner as the utf8 option.

With help and based on code from hsim at gmx.li.
@
text
@d1 1
a1 1
/* $OpenBSD: options-table.c,v 1.1 2011/01/01 16:51:21 nicm Exp $ */
d153 1
a153 1
	  .maximum = SHRT_MAX,
@


1.1
log
@Move the user-visible parts of all options (names, types, limit, default
values) together into one set of tables in options-table.c. Also clean
up and simplify cmd-set-options.c and move a common print function into
option-table.c.
@
text
@d1 1
a1 1
/* $OpenBSD: options.c,v 1.5 2009/09/22 12:38:10 nicm Exp $ */
d197 5
@

