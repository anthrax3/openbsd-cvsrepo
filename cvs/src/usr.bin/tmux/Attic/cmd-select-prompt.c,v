head	1.8;
access;
symbols
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2010.05.05.23.24.23;	author nicm;	state dead;
branches;
next	1.7;

1.7
date	2009.11.13.19.53.29;	author nicm;	state Exp;
branches;
next	1.6;

1.6
date	2009.08.13.23.44.18;	author nicm;	state Exp;
branches;
next	1.5;

1.5
date	2009.07.26.12.58.44;	author nicm;	state Exp;
branches;
next	1.4;

1.4
date	2009.07.17.06.13.27;	author nicm;	state Exp;
branches;
next	1.3;

1.3
date	2009.07.15.17.39.00;	author nicm;	state Exp;
branches;
next	1.2;

1.2
date	2009.07.13.23.11.35;	author nicm;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.01.22.58.49;	author nicm;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Identical behaviour to select-prompt can now be obtained with
command-prompt, so remove select-prompt and change ' to be bound to
command-prompt -p index "select-window -t :%%".
@
text
@/* $OpenBSD: cmd-select-prompt.c,v 1.7 2009/11/13 19:53:29 nicm Exp $ */

/*
 * Copyright (c) 2008 Nicholas Marriott <nicm@@users.sourceforge.net>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER
 * IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>

#include <stdlib.h>

#include "tmux.h"

/*
 * Prompt for window index and select it.
 */

int	cmd_select_prompt_exec(struct cmd *, struct cmd_ctx *);

int	cmd_select_prompt_callback(void *, const char *);

const struct cmd_entry cmd_select_prompt_entry = {
	"select-prompt", NULL,
	CMD_TARGET_CLIENT_USAGE,
	0, "",
	cmd_target_init,
	cmd_target_parse,
	cmd_select_prompt_exec,
	cmd_target_free,
	cmd_target_print
};

int
cmd_select_prompt_exec(struct cmd *self, struct cmd_ctx *ctx)
{
	struct cmd_target_data	*data = self->data;
	struct client		*c;

	if ((c = cmd_find_client(ctx, data->target)) == NULL)
		return (-1);

	if (c->prompt_string != NULL)
		return (0);

	status_prompt_set(c, "index ", cmd_select_prompt_callback, NULL, c, 0);

	return (0);
}

int
cmd_select_prompt_callback(void *data, const char *s)
{
	struct client	*c = data;
	const char	*errstr;
	char		 msg[128];
	u_int		 idx;

	if (s == NULL || *s == '\0')
		return (0);

	idx = strtonum(s, 0, UINT_MAX, &errstr);
	if (errstr != NULL) {
		xsnprintf(msg, sizeof msg, "Index %s: %s", errstr, s);
		status_message_set(c, "%s", msg);
		return (0);
	}

	if (winlink_find_by_index(&c->session->windows, idx) == NULL) {
		xsnprintf(msg, sizeof msg,
		    "Window not found: %s:%d", c->session->name, idx);
		status_message_set(c, "%s", msg);
		return (0);
	}

	if (session_select(c->session, idx) == 0)
		server_redraw_session(c->session);
	recalculate_sizes();

	return (0);
}
@


1.7
log
@Get rid of the ugly CMD_CHFLAG macro and use a const string (eg "dDU") in the
command entry structs and a couple of functions to check/set the flags.
@
text
@d1 1
a1 1
/* $OpenBSD: cmd-select-prompt.c,v 1.6 2009/08/13 23:44:18 nicm Exp $ */
@


1.6
log
@Switch the prompt code to return an empty string when the user enters no
response and reserve NULL for an explicit cancel. Change all callbacks to treat
them the same so no functional change.

Also add cancel key bindings to emacs mode which were missing.
@
text
@d1 1
a1 1
/* $OpenBSD: cmd-select-prompt.c,v 1.5 2009/07/26 12:58:44 nicm Exp $ */
d36 1
a36 1
	0, 0,
@


1.5
log
@Make all messages sent between the client and server fixed size.

This is the first of two changes to make the protocol more resilient and less
sensitive to other changes in the code, particularly with commands. The client
now packs argv into a buffer and sends it to the server for parsing, rather
than doing it itself and sending the parsed command data.

As a side-effect this also removes a lot of now-unused command marshalling
code.

Mixing a server without this change and a client with or vice versa will cause
tmux to hang or crash, please ensure that tmux is entirely killed before
upgrading.
@
text
@d1 1
a1 1
/* $OpenBSD: cmd-select-prompt.c,v 1.4 2009/07/17 06:13:27 nicm Exp $ */
d69 1
a69 1
	if (s == NULL)
@


1.4
log
@Memory could be leaked if a second prompt or message appeared while another was
still present, so add a separate prompt free callback and make the _clear
function responsible for calling it if necessary (rather than the individual
prompt callbacks). Also make both messages and prompts clear any existing when
a new is set.

In addition, the screen could be modified while the prompt is there, restore
the redraw-entire-screen behaviour on prompt clear; add a comment as a
reminder.
@
text
@d1 1
a1 1
/* $OpenBSD: cmd-select-prompt.c,v 1.3 2009/07/15 17:39:00 nicm Exp $ */
a39 2
	cmd_target_send,
	cmd_target_recv,
@


1.3
log
@Make status_message_set a variadic printf-like function. No functional change -
helpful for a couple of things coming soon.
@
text
@d1 1
a1 1
/* $OpenBSD: cmd-select-prompt.c,v 1.2 2009/07/13 23:11:35 nicm Exp $ */
d58 1
a58 1
	status_prompt_set(c, "index ", cmd_select_prompt_callback, c, 0);
@


1.2
log
@Having fixed flags for single-character getopt options is a bit hard to
maintain and is only going to get worse as more are used. So instead, add a new
uint64_t member to cmd_entry which is a bitmask of upper and lowercase options
accepted by the command.

This means new single character options can be used without the need to add it
explicitly to the list.
@
text
@d1 1
a1 1
/* $OpenBSD: cmd-select-prompt.c,v 1.1 2009/06/01 22:58:49 nicm Exp $ */
d77 1
a77 1
		status_message_set(c, msg);
d84 1
a84 1
		status_message_set(c, msg);
@


1.1
log
@Import tmux, a terminal multiplexor allowing (among other things) a single
terminal to be switched between several different windows and programs
displayed on one terminal be detached from one terminal and moved to another.

ok deraadt pirofti
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d36 1
a36 1
	0,
@

