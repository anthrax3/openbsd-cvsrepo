head	1.7;
access;
symbols
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.5.0.18
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.14
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.16
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.8
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.12
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.10
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.4
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2017.03.22.07.16.54;	author nicm;	state Exp;
branches;
next	1.6;
commitid	YlKgZy2nlCejSvNQ;

1.6
date	2017.02.16.10.53.25;	author nicm;	state Exp;
branches;
next	1.5;
commitid	LqXOE9qmWQgnS4l6;

1.5
date	2012.03.17.21.45.25;	author nicm;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.14.18.56.21;	author nicm;	state Exp;
branches;
next	1.3;

1.3
date	2009.11.26.21.22.31;	author nicm;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.02.11.14.08;	author ray;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.01.22.58.49;	author nicm;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Add support for the strikethrough attribute (SGR 9), using the new smxx
terminfo capability. This means there are now nine attribute bits, so
anything above 0xff uses an extended cell.
@
text
@/* $OpenBSD: attributes.c,v 1.6 2017/02/16 10:53:25 nicm Exp $ */

/*
 * Copyright (c) 2009 Joshua Elsasser <josh@@elsasser.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER
 * IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>

#include <string.h>

#include "tmux.h"

const char *
attributes_tostring(int attr)
{
	static char	buf[128];
	size_t		len;

	if (attr == 0)
		return ("none");

	len = xsnprintf(buf, sizeof buf, "%s%s%s%s%s%s%s%s",
	    (attr & GRID_ATTR_BRIGHT) ? "bright," : "",
	    (attr & GRID_ATTR_DIM) ? "dim," : "",
	    (attr & GRID_ATTR_UNDERSCORE) ? "underscore," : "",
	    (attr & GRID_ATTR_BLINK)? "blink," : "",
	    (attr & GRID_ATTR_REVERSE) ? "reverse," : "",
	    (attr & GRID_ATTR_HIDDEN) ? "hidden," : "",
	    (attr & GRID_ATTR_ITALICS) ? "italics," : "",
	    (attr & GRID_ATTR_STRIKETHROUGH) ? "strikethrough," : "");
	if (len > 0)
		buf[len - 1] = '\0';

	return (buf);
}

int
attributes_fromstring(const char *str)
{
	const char	delimiters[] = " ,|";
	int		attr;
	size_t		end;

	if (*str == '\0' || strcspn(str, delimiters) == 0)
		return (-1);
	if (strchr(delimiters, str[strlen(str) - 1]) != NULL)
		return (-1);

	if (strcasecmp(str, "default") == 0 || strcasecmp(str, "none") == 0)
		return (0);

	attr = 0;
	do {
		end = strcspn(str, delimiters);
		if ((end == 6 && strncasecmp(str, "bright", end) == 0) ||
		    (end == 4 && strncasecmp(str, "bold", end) == 0))
			attr |= GRID_ATTR_BRIGHT;
		else if (end == 3 && strncasecmp(str, "dim", end) == 0)
			attr |= GRID_ATTR_DIM;
		else if (end == 10 && strncasecmp(str, "underscore", end) == 0)
			attr |= GRID_ATTR_UNDERSCORE;
		else if (end == 5 && strncasecmp(str, "blink", end) == 0)
			attr |= GRID_ATTR_BLINK;
		else if (end == 7 && strncasecmp(str, "reverse", end) == 0)
			attr |= GRID_ATTR_REVERSE;
		else if (end == 6 && strncasecmp(str, "hidden", end) == 0)
			attr |= GRID_ATTR_HIDDEN;
		else if (end == 7 && strncasecmp(str, "italics", end) == 0)
			attr |= GRID_ATTR_ITALICS;
		else if (end == 13 && strncasecmp(str, "strikethrough", end) == 0)
			attr |= GRID_ATTR_STRIKETHROUGH;
		else
			return (-1);
		str += end + strspn(str + end, delimiters);
	} while (*str != '\0');

	return (attr);
}
@


1.6
log
@Style nits.
@
text
@d1 1
a1 1
/* $OpenBSD: attributes.c,v 1.5 2012/03/17 21:45:25 nicm Exp $ */
d26 1
a26 1
attributes_tostring(u_char attr)
d34 1
a34 1
	len = xsnprintf(buf, sizeof buf, "%s%s%s%s%s%s%s",
d41 2
a42 1
	    (attr & GRID_ATTR_ITALICS) ? "italics," : "");
d53 1
a53 1
	u_char		attr;
d82 2
@


1.5
log
@Use snprintf for constructing attribute string, from Tim Ruehsen.
@
text
@d1 1
a1 1
/* $OpenBSD: attributes.c,v 1.4 2010/05/14 18:56:21 nicm Exp $ */
d35 7
a41 7
		attr & GRID_ATTR_BRIGHT ? "bright," : "",
		attr & GRID_ATTR_DIM ? "dim," : "",
		attr & GRID_ATTR_UNDERSCORE ? "underscore," : "",
		attr & GRID_ATTR_BLINK ? "blink," : "",
		attr & GRID_ATTR_REVERSE ? "reverse," : "",
		attr & GRID_ATTR_HIDDEN ? "hidden," : "",
		attr & GRID_ATTR_ITALICS ? "italics," : "");
@


1.4
log
@Accept (and document) "none" instead of "default" for attributes as it
is clearer and avoids confusion with default colours.
@
text
@d1 1
a1 1
/* $OpenBSD: attributes.c,v 1.3 2009/11/26 21:22:31 nicm Exp $ */
d29 1
d34 10
a43 17
	buf[0] = '\0';
	if (attr & GRID_ATTR_BRIGHT)
		strlcat(buf, "bright,", sizeof (buf));
	if (attr & GRID_ATTR_DIM)
		strlcat(buf, "dim,", sizeof (buf));
	if (attr & GRID_ATTR_UNDERSCORE)
		strlcat(buf, "underscore,", sizeof (buf));
	if (attr & GRID_ATTR_BLINK)
		strlcat(buf, "blink,", sizeof (buf));
	if (attr & GRID_ATTR_REVERSE)
		strlcat(buf, "reverse,", sizeof (buf));
	if (attr & GRID_ATTR_HIDDEN)
		strlcat(buf, "hidden,", sizeof (buf));
	if (attr & GRID_ATTR_ITALICS)
		strlcat(buf, "italics,", sizeof (buf));
	if (*buf != '\0')
		*(strrchr(buf, ',')) = '\0';
@


1.3
log
@Rename a variable to something more helpful.
@
text
@d1 1
a1 1
/* $OpenBSD: attributes.c,v 1.2 2009/06/02 11:14:08 ray Exp $ */
d31 1
a31 1
		return ("default");
d66 1
a66 1
	if (strcasecmp(str, "default") == 0)
@


1.2
log
@Don't dereference NULL if buf winds up being empty. Can't happen
right now according to NicM but better safe than sorry.

OK nicm@@
@
text
@d1 1
a1 1
/* $OpenBSD: attributes.c,v 1.1 2009/06/01 22:58:49 nicm Exp $ */
d26 1
a26 1
attributes_tostring(u_char ch)
d30 1
a30 1
	if (ch == 0)
d34 1
a34 1
	if (ch & GRID_ATTR_BRIGHT)
d36 1
a36 1
	if (ch & GRID_ATTR_DIM)
d38 1
a38 1
	if (ch & GRID_ATTR_UNDERSCORE)
d40 1
a40 1
	if (ch & GRID_ATTR_BLINK)
d42 1
a42 1
	if (ch & GRID_ATTR_REVERSE)
d44 1
a44 1
	if (ch & GRID_ATTR_HIDDEN)
d46 1
a46 1
	if (ch & GRID_ATTR_ITALICS)
d48 1
a48 1
	if (*buf)
d58 1
a58 1
	u_char		ch;
d69 1
a69 1
	ch = 0;
d74 1
a74 1
			ch |= GRID_ATTR_BRIGHT;
d76 1
a76 1
			ch |= GRID_ATTR_DIM;
d78 1
a78 1
			ch |= GRID_ATTR_UNDERSCORE;
d80 1
a80 1
			ch |= GRID_ATTR_BLINK;
d82 1
a82 1
			ch |= GRID_ATTR_REVERSE;
d84 1
a84 1
			ch |= GRID_ATTR_HIDDEN;
d86 1
a86 1
			ch |= GRID_ATTR_ITALICS;
d92 1
a92 1
	return (ch);
@


1.1
log
@Import tmux, a terminal multiplexor allowing (among other things) a single
terminal to be switched between several different windows and programs
displayed on one terminal be detached from one terminal and moved to another.

ok deraadt pirofti
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d48 2
a49 1
	*(strrchr(buf, ',')) = '\0';
@

