head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.4
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.12.0.4
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.9.0.26
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.18
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.22
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.20
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.16
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.14
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.12
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.28
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.24
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.22
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.20
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.18
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.16
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.14
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2016.10.27.12.53.54;	author schwarze;	state Exp;
branches;
next	1.12;
commitid	6uqlKxuAhXczoNJY;

1.12
date	2016.01.18.20.31.36;	author schwarze;	state Exp;
branches;
next	1.11;
commitid	CruL45OqV6nTFDTk;

1.11
date	2015.10.09.01.37.06;	author deraadt;	state Exp;
branches;
next	1.10;
commitid	sbrB3Q5CNxcwZpfU;

1.10
date	2015.10.05.13.30.30;	author deraadt;	state Exp;
branches;
next	1.9;
commitid	rSXobTeKTvip1j7I;

1.9
date	2009.10.27.23.59.36;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.10.22.20.45;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.03.02.56.07;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.02.16.21.27.45;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.19.19.02.13;	author mpech;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.12.05.16.59;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.01.15.23.42.21;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.32.14;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.02;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.02;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@obvious case of s/LC_ALL/LC_CTYPE/, noticed by Jan Stary
@
text
@/*	$OpenBSD: colrm.c,v 1.12 2016/01/18 20:31:36 schwarze Exp $	*/
/*	$NetBSD: colrm.c,v 1.4 1995/09/02 05:51:37 jtc Exp $	*/

/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>

#include <err.h>
#include <errno.h>
#include <limits.h>
#include <locale.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <wchar.h>

#define	TAB	8

void usage(void);

int
main(int argc, char *argv[])
{
	char	 *line, *p;
	ssize_t	  linesz;
	wchar_t	  wc;
	u_long	  column, newcol, start, stop;
	int	  ch, len, width;

	setlocale(LC_CTYPE, "");

	if (pledge("stdio", NULL) == -1)
		err(1, "pledge");

	while ((ch = getopt(argc, argv, "")) != -1)
		switch(ch) {
		case '?':
		default:
			usage();
		}
	argc -= optind;
	argv += optind;

	start = stop = 0;
	switch(argc) {
	case 2:
		stop = strtol(argv[1], &p, 10);
		if (stop <= 0 || *p)
			errx(1, "illegal column -- %s", argv[1]);
		/* FALLTHROUGH */
	case 1:
		start = strtol(argv[0], &p, 10);
		if (start <= 0 || *p)
			errx(1, "illegal column -- %s", argv[0]);
		break;
	case 0:
		break;
	default:
		usage();
	}

	if (stop && start > stop)
		err(1, "illegal start and stop columns");

	line = NULL;
	while (getline(&line, &linesz, stdin) != -1) {
		column = 0;
		width = 0;
		for (p = line; *p != '\0'; p += len) {
			len = 1;
			switch (*p) {
			case '\n':
				putchar('\n');
				continue;
			case '\b':
				/*
				 * Pass it through if the previous character
				 * was in scope, still represented by the
				 * current value of "column".
				 * Allow an optional second backspace
				 * after a double-width character.
				 */
				if (start == 0 || column < start ||
				    (stop > 0 &&
				     column > stop + (width > 1))) {
					putchar('\b');
					if (width > 1 && p[1] == '\b')
						putchar('\b');
				} 
				if (width > 1 && p[1] == '\b')
					p++;
				column -= width;
				continue;
			case '\t':
				newcol = (column + TAB) & ~(TAB - 1);
				if (start == 0 || newcol < start) {
					putchar('\t');
					column = newcol;
				} else
					/*
					 * Expand tabs that intersect or
					 * follow deleted columns.
					 */
					while (column < newcol)
						if (++column < start ||
						    (stop > 0 &&
						     column > stop))
				 			putchar(' ');
				continue;
			default:
				break;
			}

			/*
			 * Handle the three cases of invalid bytes,
			 * non-printable, and printable characters.
			 */

			if ((len = mbtowc(&wc, p, MB_CUR_MAX)) == -1) {
				(void)mbtowc(NULL, NULL, MB_CUR_MAX);
				len = 1;
				width = 1;
			} else if ((width = wcwidth(wc)) == -1)
				width = 1;

			/*
			 * If the character completely fits before or
			 * after the cut, keep it; otherwise, skip it.
			 */

			if ((start == 0 || column + width < start ||
			    (stop > 0 && column + (width > 0) > stop)))
			    	fwrite(p, 1, len, stdout);

			/*
			 * If the cut cuts the character in half
			 * and no backspace follows,
			 * print a blank for correct columnation.
			 */

			else if (width > 1 && p[len] != '\b' &&
			    (start == 0 || column + 1 < start ||
			    (stop > 0 && column + width > stop)))
				putchar(' ');

			column += width;
		}
	}
	if (ferror(stdin))
		err(1, "stdin");
	if (ferror(stdout))
		err(1, "stdout");
	return 0;
}

void
usage(void)
{
	(void)fprintf(stderr, "usage: colrm [start [stop]]\n");
	exit(1);
}
@


1.12
log
@UTF-8 support:
Cut by display columns rather than by character positions because
the latter would be useless in the presence of combining zero-width
characters.  Similarly, let tab advance to display columns rather
than to character positions.

For compatibility with nroff and man(1) output, let backspace back
up one character rather than on display column.  But for compatibility
with POSIX fold(1), *if* two backspaces follow a double-width character,
ignore the second one.

Fix some bugs while here:  Delete backspaces that immediately follow
deleted characters.  Expand tabs intersecting deletions, such that
part of the blanks can be removed.  Expand tabs following deletions,
or they would no longer align with adjacent lines without tabs.

OK jmc@@ on a previous version of the manual.
No opposition when shown on tech@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: colrm.c,v 1.11 2015/10/09 01:37:06 deraadt Exp $	*/
d58 1
a58 1
	setlocale(LC_ALL, "");
@


1.11
log
@Change all tame callers to namechange to pledge(2).
@
text
@d1 1
a1 1
/*	$OpenBSD: colrm.c,v 1.10 2015/10/05 13:30:30 deraadt Exp $	*/
d38 1
d43 1
a46 1
void check(FILE *);
d52 7
a58 3
	u_long column, start, stop;
	int ch;
	char *p;
d93 82
a174 18
	for (column = 0;;) {
		switch (ch = getchar()) {
		case EOF:
			check(stdin);
			break;
		case '\b':
			if (column)
				--column;
			break;
		case '\n':
			column = 0;
			break;
		case '\t':
			column = (column + TAB) & ~(TAB - 1);
			break;
		default:
			++column;
			break;
a175 4

		if ((!start || column < start || (stop && column > stop)) &&
		    putchar(ch) == EOF)
			check(stdout);
d177 5
a181 9
}

void
check(FILE *stream)
{
	if (feof(stream))
		exit(0);
	if (ferror(stream))
		err(1, "%s", stream == stdin ? "stdin" : "stdout");
@


1.10
log
@tame "stdio rpath" or tame "stdio" suffices for all of these programs.
fairly easy to audit by running nm and noticing nothing beyond base
stdio except for fopen/freopen.  Then review all callpaths to those
functions, and place the tame() calls.
ok sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: colrm.c,v 1.9 2009/10/27 23:59:36 deraadt Exp $	*/
d55 2
a56 2
	if (tame("stdio", NULL) == -1)
		err(1, "tame");
@


1.9
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: colrm.c,v 1.8 2003/06/10 22:20:45 deraadt Exp $	*/
d54 3
@


1.8
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: colrm.c,v 1.7 2003/06/03 02:56:07 millert Exp $	*/
a31 13

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1991, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)colrm.c	8.2 (Berkeley) 5/4/95";
#endif
static char rcsid[] = "$OpenBSD: colrm.c,v 1.7 2003/06/03 02:56:07 millert Exp $";
#endif /* not lint */
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: colrm.c,v 1.6 2002/02/16 21:27:45 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: colrm.c,v 1.6 2002/02/16 21:27:45 millert Exp $";
d62 1
a62 3
main(argc, argv)
	int argc;
	char *argv[];
d125 1
a125 2
check(stream)
	FILE *stream;
d134 1
a134 1
usage()
@


1.6
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: colrm.c,v 1.5 2001/11/19 19:02:13 mpech Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d43 1
a43 1
static char rcsid[] = "$OpenBSD: colrm.c,v 1.5 2001/11/19 19:02:13 mpech Exp $";
@


1.5
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: colrm.c,v 1.4 2001/07/12 05:16:59 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: colrm.c,v 1.4 2001/07/12 05:16:59 deraadt Exp $";
d62 2
a63 2
void check __P((FILE *));
void usage __P((void));
@


1.4
log
@first pass at a -Wall cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: colrm.c,v 1.3 1997/01/15 23:42:21 millert Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: colrm.c,v 1.3 1997/01/15 23:42:21 millert Exp $";
d70 2
a71 2
	register u_long column, start, stop;
	register int ch;
@


1.3
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: colrm.c,v 1.2 1996/06/26 05:32:14 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: colrm.c,v 1.2 1996/06/26 05:32:14 deraadt Exp $";
d124 1
a124 1
		if ((!start || column < start || stop && column > stop) &&
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: colrm.c,v 1.4 1995/09/02 05:51:37 jtc Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: colrm.c,v 1.4 1995/09/02 05:51:37 jtc Exp $";
d74 1
a74 1
	while ((ch = getopt(argc, argv, "")) != EOF)
@


1.1
log
@Initial revision
@
text
@d1 1
d47 1
a47 1
static char rcsid[] = "$NetBSD: colrm.c,v 1.4 1995/09/02 05:51:37 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
