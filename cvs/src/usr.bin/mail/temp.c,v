head	1.17;
access;
symbols
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.26
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.18
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.22
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.20
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.16
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.14
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.12
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.10
	OPENBSD_5_0:1.15.0.8
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.6
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.14.0.28
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.24
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.22
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.20
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.18
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.16
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.14
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.12
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.10
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.8
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.13.0.6
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.4
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.13.0.2
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.11.0.6
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.4
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.10.0.10
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.10.0.8
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.10.0.6
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.10.0.4
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.10.0.2
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2016.07.28.21.37.45;	author tedu;	state Exp;
branches;
next	1.16;
commitid	mWujHdKL90lJ6y6i;

1.16
date	2015.10.16.17.56.07;	author mmcc;	state Exp;
branches;
next	1.15;
commitid	y3aqfd1wS5RZj9kl;

1.15
date	2009.10.27.23.59.40;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.03.02.56.11;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2002.01.24.23.01.19;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2001.11.21.15.26.39;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2000.08.02.04.10.48;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	97.11.14.00.23.59;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	97.07.24.17.27.13;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.07.24.16.23.39;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.07.14.00.24.31;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.07.13.21.21.17;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.03.29.03.01.47;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.10.28.00.42.21;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.09.16.02.26.09;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.11.12.53.51;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.39;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.39;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@these programs probably do not need to use TMPDIR. ok florian
@
text
@/*	$OpenBSD: temp.c,v 1.16 2015/10/16 17:56:07 mmcc Exp $	*/
/*	$NetBSD: temp.c,v 1.5 1996/06/08 19:48:42 christos Exp $	*/

/*
 * Copyright (c) 1980, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "rcv.h"
#include "extern.h"

/*
 * Mail -- a mail program
 *
 * Give names to all the temporary files that we will need.
 */

char *tmpdir;

void
tinit(void)
{
	char *cp;

	tmpdir = _PATH_TMP;
	if ((tmpdir = strdup(tmpdir)) == NULL)
		err(1, "strdup");

	/* Strip trailing '/' if necessary */
	cp = tmpdir + strlen(tmpdir) - 1;
	while (cp > tmpdir && *cp == '/') {
		*cp = '\0';
		cp--;
	}

	/*
	 * It's okay to call savestr in here because main will
	 * do a spreserve() after us.
	 */
	if (myname != NULL) {
		if (getuserid(myname) == UID_MAX)
			errx(1, "\"%s\" is not a user of this system", myname);
	} else {
		if ((cp = username()) == NULL) {
			myname = "nobody";
			if (rcvmode)
				exit(1);
		} else
			myname = savestr(cp);
	}
	if ((cp = getenv("HOME")) == NULL || *cp == '\0' ||
	    strlen(cp) >= PATHSIZE)
		homedir = NULL;
	else
		homedir = savestr(cp);
	if (debug)
		printf("user = %s, homedir = %s\n", myname,
		    homedir ? homedir : "NONE");
}
@


1.16
log
@Modernize allocation by:

 * removing unneeded casts of void* return values
 * replacing varied and creative error messages with the allocation
   function's name
 * replacing errx() with err() so that the errno string is reported

ok beck@@, jung@@, millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.15 2009/10/27 23:59:40 deraadt Exp $	*/
d49 1
a49 2
	if ((tmpdir = getenv("TMPDIR")) == NULL || *tmpdir == '\0')
		tmpdir = _PATH_TMP;
@


1.15
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.14 2003/06/03 02:56:11 millert Exp $	*/
d52 1
a52 1
		errx(1, "Out of memory");
@


1.14
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.13 2002/01/24 23:01:19 millert Exp $	*/
a31 8

#ifndef lint
#if 0
static const char sccsid[] = "@@(#)temp.c	8.1 (Berkeley) 6/6/93";
#else
static const char rcsid[] = "$OpenBSD: temp.c,v 1.13 2002/01/24 23:01:19 millert Exp $";
#endif
#endif /* not lint */
@


1.13
log
@Fix `necesary' typos; Alexander Yurchenko

Alas many of these were introduced by yours truly as necessary
just doesn't look right to me for some reason ;-)
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.12 2001/11/21 15:26:39 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: temp.c,v 1.12 2001/11/21 15:26:39 millert Exp $";
@


1.12
log
@o ANSIfy
o Style nits
o Use const to silent stupid -Wall warnings
o strnc{py,at} -> strlc{py,at}
o Use strpbrk() instead of homegrown anyof()
o Use NULL instead of #defines with 0 cast to a pointer
This still could use a proper audit
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.11 2000/08/02 04:10:48 millert Exp $	*/
d41 1
a41 1
static const char rcsid[] = "$OpenBSD: temp.c,v 1.11 2000/08/02 04:10:48 millert Exp $";
d66 1
a66 1
	/* Strip trailing '/' if necesary */
@


1.11
log
@$HOME paranoia: never use getenv("HOME") w/o checking for NULL and non-zero
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.10 1997/11/14 00:23:59 millert Exp $	*/
d39 1
a39 1
static char sccsid[] = "@@(#)temp.c	8.1 (Berkeley) 6/6/93";
d41 1
a41 1
static char rcsid[] = "$OpenBSD: temp.c,v 1.10 1997/11/14 00:23:59 millert Exp $";
d54 1
a54 1
char	*tmpdir;
d57 1
a57 1
tinit()
d78 1
a78 1
		if (getuserid(myname) < 0)
@


1.10
log
@NetBSD changes (mostly comsmetic):
    replace panic() with calls to err()/errx()
    use S_IS* instead of doing by hand with S_IF*.
    Use TIMESPEC_TO_TIMEVAL() and gettimeofday instead of time(2)
    Use _POSIX_VDISABLE, not 0
    Kill register
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.9 1997/07/24 17:27:13 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: temp.c,v 1.9 1997/07/24 17:27:13 millert Exp $";
d88 5
a92 3
	if ((cp = getenv("HOME")) == NULL || strlen(getenv("HOME")) >= PATHSIZE)
		cp = ".";
	homedir = savestr(cp);
d94 2
a95 1
		printf("user = %s, homedir = %s\n", myname, homedir);
@


1.9
log
@tempnam(3) goes bye bye.
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.8 1997/07/24 16:23:39 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: temp.c,v 1.8 1997/07/24 16:23:39 millert Exp $";
d59 1
a59 1
	register char *cp;
d64 1
a64 1
		panic("Out of memory");
@


1.8
log
@Replace 3 tempnam()'s with mkstemp.  The two left look tricky.
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.7 1997/07/14 00:24:31 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: temp.c,v 1.7 1997/07/14 00:24:31 millert Exp $";
a53 2
char	*tempMail;
char	*tempEdit;
a71 3

	tempMail  = tempnam(tmpdir, "Rs");
	tempEdit  = tempnam(tmpdir, "Re");
@


1.7
log
@NOSTR -> NULL
Use sigsetjmp/siglongjmp instead of sigjmp/longjmp for portability.
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.6 1997/07/13 21:21:17 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: temp.c,v 1.6 1997/07/13 21:21:17 millert Exp $";
a54 1
char	*tempQuit;
a55 2
char	*tempResid;
char	*tempMesg;
a75 2
	tempResid = tempnam(tmpdir, "Rq");
	tempQuit  = tempnam(tmpdir, "Rm");
a76 1
	tempMesg  = tempnam(tmpdir, "Rx");
@


1.6
log
@Merge in NetBSD and 4.4BSD-lite2 changes as well as some of my own.
 - handle long lines safely (from NetBSD)
 - use puts/fputs and putchar/putc when it makes sense
 - use err/errx and warn/warnx when it makes sense
 - make return() and sizeof() style consisten
 - some more buffer safety
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.5 1997/03/29 03:01:47 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: temp.c,v 1.5 1997/03/29 03:01:47 millert Exp $";
d88 1
a88 1
	if (myname != NOSTR) {
d92 1
a92 1
		if ((cp = username()) == NOSTR) {
d99 1
a99 1
	if ((cp = getenv("HOME")) == NOSTR || strlen(getenv("HOME")) >= PATHSIZE)
@


1.5
log
@Use ``mail.local -H'' to do dot locking so we can have mode 755 mail
spool, change an occurrence of tempnam() to mkstemp(), change some
longs and shorts to ints.  Mail is now usable again.
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.4 1996/10/28 00:42:21 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: temp.c,v 1.4 1996/10/28 00:42:21 millert Exp $";
a45 1
#include <errno.h>
d89 2
a90 5
		if (getuserid(myname) < 0) {
			printf("\"%s\" is not a user of this system\n",
			    myname);
			exit(1);
		}
@


1.4
log
@Ignore $HOME if > MAXPATHLEN
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.3 1996/09/16 02:26:09 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: temp.c,v 1.3 1996/09/16 02:26:09 deraadt Exp $";
d67 1
a67 1
	if ((tmpdir = getenv("TMPDIR")) == NULL) {
d69 8
@


1.3
log
@_PATH_TMP -> _PATH_TMPFILE; avoid /tmp//fooXXXX where possible too
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.2 1996/06/11 12:53:51 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: temp.c,v 1.2 1996/06/11 12:53:51 deraadt Exp $";
d95 1
a95 1
	if ((cp = getenv("HOME")) == NOSTR)
@


1.2
log
@from christos;
- Fix PR/105: Implement dot locking protocol and check return value of flock.
- Fix PR/2247: Don't call unknown users "ubluit". Issue an error message.
- Fix/add prototypes.
- Fix warnings.
- Use POSIX signal mask calls.
@
text
@d1 1
a1 1
/*	$OpenBSD: temp.c,v 1.5 1996/06/08 19:48:42 christos Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: temp.c,v 1.5 1996/06/08 19:48:42 christos Exp $";
d71 5
a75 5
	tempMail  = tempnam (tmpdir, "Rs");
	tempResid = tempnam (tmpdir, "Rq");
	tempQuit  = tempnam (tmpdir, "Rm");
	tempEdit  = tempnam (tmpdir, "Re");
	tempMesg  = tempnam (tmpdir, "Rx");
@


1.1
log
@Initial revision
@
text
@d1 3
d38 5
a42 2
static char sccsid[] = "from: @@(#)temp.c	8.1 (Berkeley) 6/6/93";
static char rcsid[] = "$Id: temp.c,v 1.4 1994/11/28 20:03:40 jtc Exp $";
a65 1
	int len;
d89 2
a90 3
			myname = "ubluit";
			if (rcvmode) {
				printf("Who are you!?\n");
a91 1
			}
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
