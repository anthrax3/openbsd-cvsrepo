head	1.17;
access;
symbols
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.2
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.26
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.18
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.22
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.20
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.16
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.14
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.12
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.10
	OPENBSD_5_0:1.15.0.8
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.6
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.14.0.28
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.24
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.22
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.20
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.18
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.16
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.14
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.12
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.10
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.8
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.13.0.6
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.4
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.13.0.2
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.12.0.14
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_9:1.12.0.12
	OPENBSD_2_8:1.12.0.10
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.12.0.8
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.12.0.6
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.12.0.4
	OPENBSD_2_5_BASE:1.12
	OPENBSD_2_4:1.12.0.2
	OPENBSD_2_4_BASE:1.12
	OPENBSD_2_3:1.9.0.4
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2016.07.19.06.43.27;	author deraadt;	state Exp;
branches;
next	1.16;
commitid	B2XC0go4gk9SNttR;

1.16
date	2015.11.11.01.12.10;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	nVtGolYSsQ6VkRrW;

1.15
date	2009.10.27.23.59.40;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.03.02.56.11;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2001.11.21.15.26.39;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	98.06.12.17.51.50;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	98.06.12.17.15.24;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	98.05.04.05.37.53;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	97.07.30.06.32.41;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.07.14.00.24.31;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.07.13.21.21.18;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.06.16.20.57.06;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.06.02.17.00.51;	author dm;	state Exp;
branches;
next	1.4;

1.4
date	97.05.30.08.51.45;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.10.26.05.11.05;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.11.12.53.53;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.39;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.39;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Cleanup close(open idioms.
ok krw
@
text
@/*	$OpenBSD: v7.local.c,v 1.16 2015/11/11 01:12:10 deraadt Exp $	*/
/*	$NetBSD: v7.local.c,v 1.8 1997/05/13 06:15:58 mikel Exp $	*/

/*
 * Copyright (c) 1980, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Mail -- a mail program
 *
 * Version 7
 *
 * Local routines that are installation dependent.
 */

#include "rcv.h"
#include <stdlib.h>
#include <fcntl.h>
#include "extern.h"

/*
 * Locate the user's mailbox file (ie, the place where new, unread
 * mail is queued).
 */
void
findmail(char *user, char *buf, int buflen)
{
	char *mbox;
	struct stat sb;

	/* Ignore $MAIL if it is not owned by the invoking user */
	if ((mbox = getenv("MAIL")) && stat(mbox, &sb) == 0 &&
	    sb.st_uid != getuid() && sb.st_uid != geteuid())
		mbox = NULL;

	if (mbox)
		(void)strlcpy(buf, mbox, buflen);
	else
		(void)snprintf(buf, buflen, "%s/%s", _PATH_MAILDIR, user);
}

/*
 * Get rid of the queued mail.
 */
void
demail(void)
{
	int fd;

	if (value("keep") != NULL || rm(mailname) < 0) {
		fd = open(mailname, O_CREAT | O_TRUNC | O_WRONLY, 0600);
		if (fd != -1)
			close(fd);
	}
}

/*
 * Discover user login name.
 */
char *
username(void)
{
	char *np;
	uid_t uid;

	if ((np = getenv("USER")) != NULL)
		return(np);
	if ((np = getenv("LOGNAME")) != NULL)
		return(np);
	if ((np = getname(uid = getuid())) != NULL)
		return(np);
	if ((np = getlogin()) != NULL)
		return(np);
	printf("Cannot associate a name with uid %u\n", (unsigned)uid);
	return(NULL);
}
@


1.16
log
@creat() -> open equiv; from Frederic Nowak
@
text
@d1 1
a1 1
/*	$OpenBSD: v7.local.c,v 1.15 2009/10/27 23:59:40 deraadt Exp $	*/
d73 1
d75 5
a79 2
	if (value("keep") != NULL || rm(mailname) < 0)
		(void)close(open(mailname, O_CREAT | O_TRUNC | O_WRONLY, 0600));
@


1.15
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: v7.local.c,v 1.14 2003/06/03 02:56:11 millert Exp $	*/
d75 1
a75 1
		(void)close(creat(mailname, 0600));
@


1.14
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: v7.local.c,v 1.13 2001/11/21 15:26:39 millert Exp $	*/
a31 8

#ifndef lint
#if 0
static const char sccsid[] = "@@(#)v7.local.c	8.1 (Berkeley) 6/6/93";
#else
static const char rcsid[] = "$OpenBSD: v7.local.c,v 1.13 2001/11/21 15:26:39 millert Exp $";
#endif
#endif /* not lint */
@


1.13
log
@o ANSIfy
o Style nits
o Use const to silent stupid -Wall warnings
o strnc{py,at} -> strlc{py,at}
o Use strpbrk() instead of homegrown anyof()
o Use NULL instead of #defines with 0 cast to a pointer
This still could use a proper audit
@
text
@d1 1
a1 1
/*	$OpenBSD: v7.local.c,v 1.12 1998/06/12 17:51:50 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: v7.local.c,v 1.12 1998/06/12 17:51:50 millert Exp $";
@


1.12
log
@Don't call truncate() directly; have rm() do it if we get EPERM on unlink()
In popen.c, findchild() may return NULL so catch that case.
@
text
@d1 1
a1 1
/*	$OpenBSD: v7.local.c,v 1.11 1998/06/12 17:15:24 millert Exp $	*/
d39 1
a39 1
static char sccsid[] = "@@(#)v7.local.c	8.1 (Berkeley) 6/6/93";
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v7.local.c,v 1.11 1998/06/12 17:15:24 millert Exp $";
d63 1
a63 3
findmail(user, buf, buflen)
	char *user, *buf;
	int buflen;
d73 3
a75 4
	if (mbox) {
		(void)strncpy(buf, mbox, buflen - 1);
		buf[buflen - 1] = '\0';
	} else
d83 1
a83 1
demail()
d94 1
a94 1
username()
d104 2
@


1.11
log
@Properly delete messages that the user has deleted in his/her spool.
I fudged up the logic when I replaced an unlink with a truncate.
@
text
@d1 1
a1 1
/*	$OpenBSD: v7.local.c,v 1.10 1998/05/04 05:37:53 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v7.local.c,v 1.10 1998/05/04 05:37:53 millert Exp $";
d89 1
a89 1
	if (value("keep") != NULL || truncate(mailname, 0) == -1)
@


1.10
log
@Never remove a mail spool, as we may not have proper prics, just truncate.  Also block signals in a few critical areas
@
text
@d1 1
a1 1
/*	$OpenBSD: v7.local.c,v 1.9 1997/07/30 06:32:41 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v7.local.c,v 1.9 1997/07/30 06:32:41 millert Exp $";
d89 2
a90 2
	if (value("keep") != NULL)
		(void)truncate(mailname, 0);
@


1.9
log
@Fix one possible oflow (not exploitable) and do a wee bit of KNF.
Much more remains to be done.
@
text
@d1 1
a1 1
/*	$OpenBSD: v7.local.c,v 1.8 1997/07/14 00:24:31 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v7.local.c,v 1.8 1997/07/14 00:24:31 millert Exp $";
d89 2
a90 2
	if (value("keep") != NULL || rm(mailname) < 0)
		(void)close(creat(mailname, 0600));
@


1.8
log
@NOSTR -> NULL
Use sigsetjmp/siglongjmp instead of sigjmp/longjmp for portability.
@
text
@d1 1
a1 1
/*	$OpenBSD: v7.local.c,v 1.7 1997/07/13 21:21:18 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v7.local.c,v 1.7 1997/07/13 21:21:18 millert Exp $";
d68 1
d70 6
a75 3
	if (!(mbox = getenv("MAIL")))
		(void)snprintf(buf, buflen, "%s/%s", _PATH_MAILDIR, user);
	else {
d78 2
a79 1
	}
@


1.7
log
@Merge in NetBSD and 4.4BSD-lite2 changes as well as some of my own.
 - handle long lines safely (from NetBSD)
 - use puts/fputs and putchar/putc when it makes sense
 - use err/errx and warn/warnx when it makes sense
 - make return() and sizeof() style consisten
 - some more buffer safety
@
text
@d1 1
a1 1
/*	$OpenBSD: v7.local.c,v 1.6 1997/06/16 20:57:06 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v7.local.c,v 1.6 1997/06/16 20:57:06 millert Exp $";
d84 1
a84 1
	if (value("keep") != NOSTR || rm(mailname) < 0)
d97 1
a97 1
	if ((np = getenv("USER")) != NOSTR)
d99 1
a99 1
	if ((np = getenv("LOGNAME")) != NOSTR)
d101 1
a101 1
	if ((np = getname(uid = getuid())) != NOSTR)
d104 1
a104 1
	return(NOSTR);
@


1.6
log
@Use buflen, not sizeof(buf) as buf is a pointer.
@
text
@d1 2
a2 2
/*	$OpenBSD: v7.local.c,v 1.5 1997/06/02 17:00:51 dm Exp $	*/
/*	$NetBSD: v7.local.c,v 1.7 1996/06/08 19:48:44 christos Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v7.local.c,v 1.5 1997/06/02 17:00:51 dm Exp $";
d85 1
a85 1
		close(creat(mailname, 0600));
d98 1
a98 1
		return np;
d100 1
a100 1
		return np;
d102 1
a102 1
		return np;
d104 1
a104 1
	return NOSTR;
@


1.5
log
@buflen != sizeof (char *)
@
text
@d1 1
a1 1
/*	$OpenBSD: v7.local.c,v 1.4 1997/05/30 08:51:45 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v7.local.c,v 1.4 1997/05/30 08:51:45 deraadt Exp $";
d70 1
a70 1
		(void)snprintf(buf, sizeof buf, "%s/%s", _PATH_MAILDIR, user);
@


1.4
log
@overflows abound
@
text
@d1 1
a1 1
/*	$OpenBSD: v7.local.c,v 1.2 1996/06/11 12:53:53 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v7.local.c,v 1.2 1996/06/11 12:53:53 deraadt Exp $";
d72 2
a73 2
		(void)strncpy(buf, mbox, sizeof buf - 1);
		buf[sizeof buf - 1] = '\0';
@


1.3
log
@honor $LOGNAME
@
text
@d63 1
a63 1
findmail(user, buf)
d65 1
d70 5
a74 3
		(void)sprintf(buf, "%s/%s", _PATH_MAILDIR, user);
	else
		(void)strcpy(buf, mbox);
d103 1
a103 1
	printf("Cannot associate a name with uid %d\n", uid);
@


1.2
log
@from christos;
- Fix PR/105: Implement dot locking protocol and check return value of flock.
- Fix PR/2247: Don't call unknown users "ubluit". Issue an error message.
- Fix/add prototypes.
- Fix warnings.
- Use POSIX signal mask calls.
@
text
@d1 1
a1 1
/*	$OpenBSD: v7.local.c,v 1.7 1996/06/08 19:48:44 christos Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v7.local.c,v 1.7 1996/06/08 19:48:44 christos Exp $";
d95 2
@


1.1
log
@Initial revision
@
text
@d1 3
d38 5
a42 2
static char sccsid[] = "from: @@(#)v7.local.c	8.1 (Berkeley) 6/6/93";
static char rcsid[] = "$Id: v7.local.c,v 1.6 1994/06/29 05:09:48 deraadt Exp $";
d92 1
d96 4
a99 1
	return getname(getuid());
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
