head	1.5;
access;
symbols
	OPENBSD_5_2:1.4.0.44
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.42
	OPENBSD_5_0:1.4.0.40
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.38
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.36
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.32
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.34
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.30
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.28
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.26
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.24
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.22
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.20
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.18
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.16
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.14
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	PMDB:1.1.1.1
	PMBD_4_1:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2012.08.30.15.53.47;	author kettenis;	state dead;
branches;
next	1.4;

1.4
date	2002.03.15.18.04.41;	author art;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.15.17.49.51;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.15.16.41.06;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.15.16.30.32;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.03.15.16.30.32;	author art;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Move pmdb to the attic.

It's unfinished.  It will never be finished.
It's unfinishable.  deraadt@@
@
text
@/*	$OpenBSD: symbol.h,v 1.4 2002/03/15 18:04:41 art Exp $	*/
/*
 * Copyright (c) 2002 Artur Grabowski <art@@openbsd.org>
 * All rights reserved. 
 *
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met: 
 *
 * 1. Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer. 
 * 2. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission. 
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL  DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

#include <sys/param.h>

struct sym_table {
	TAILQ_ENTRY(sym_table) st_list;
	char st_fname[MAXPATHLEN];
	int st_flags;
	reg st_offs;
};

/* Flags in st_flags */
#define ST_EXEC		0x01	/* this is the executable */

struct sym_ops {
	struct sym_table *(*sop_open)(const char *);
	void (*sop_close)(struct sym_table *);
	char *(*sop_name_and_off)(struct sym_table *, reg, reg *);
	int (*sop_lookup)(struct pstate *, const char *, reg *);
	void (*sop_update)(struct pstate *);
};

void sym_init_exec(struct pstate *, const char *);
void sym_destroy(struct pstate *);
void sym_update(struct pstate *);
char *sym_name_and_offset(struct pstate *, reg, char *, size_t, reg *);
int sym_lookup(struct pstate *, const char *, reg *);
char *sym_print(struct pstate *, reg, char *, size_t);

/* Internal for symbol handlers only. */
struct sym_table *st_open(struct pstate *, const char *, reg);

#ifdef PMDB_ELF
int sym_check_elf(const char *, struct pstate *);
#endif
#ifdef PMDB_AOUT
int sym_check_aout(const char *, struct pstate *);
#endif

int cmd_sym_load(int, char **, void *);
@


1.4
log
@Add a command 'sym_load' to load a symbol table at some offset.
We are in a desperate need of a better command line interface, the top level
is starting to get crowded.
@
text
@d1 1
a1 1
/*	$OpenBSD: symbol.h,v 1.3 2002/03/15 17:49:51 art Exp $	*/
@


1.3
log
@Move the linking offset from the symbol format dependent structs
to struct sym_table.
Allow callers to specify linking offset to st_open.
@
text
@d1 1
a1 1
/*	$OpenBSD: symbol.h,v 1.2 2002/03/15 16:41:06 jason Exp $	*/
d63 2
@


1.2
log
@s/$PMDB$/$OpenBSD$/
@
text
@d1 1
a1 1
/*	$OpenBSD: symbol.h,v 1.7 2002/03/07 14:27:08 art Exp $	*/
d33 1
d55 1
a55 1
struct sym_table *st_open(struct pstate *, const char *);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$PMDB: symbol.h,v 1.7 2002/03/07 14:27:08 art Exp $	*/
@


1.1.1.1
log
@Import pmdb 4.1.

(see http://www.blahonga.org/~art/openbsd/pmdb.html for more info).

The development repository now moves here out from my local repository.
@
text
@@
