head	1.7;
access;
symbols
	OPENBSD_5_2:1.6.0.42
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.40
	OPENBSD_5_0:1.6.0.38
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.36
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.34
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.30
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.32
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.28
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.26
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.24
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.22
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.20
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.18
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.16
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.14
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.12
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.10
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.8
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.6
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	PMDB:1.1.1.1
	PMBD_4_1:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2012.08.30.15.53.47;	author kettenis;	state dead;
branches;
next	1.6;

1.6
date	2002.07.22.02.54.23;	author art;	state Exp;
branches;
next	1.5;

1.5
date	2002.07.22.01.20.50;	author art;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.19.21.32.10;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.17.18.39.33;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.15.16.41.06;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.15.16.30.33;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.03.15.16.30.33;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Move pmdb to the attic.

It's unfinished.  It will never be finished.
It's unfinishable.  deraadt@@
@
text
@/*	$OpenBSD: sparc64.c,v 1.6 2002/07/22 02:54:23 art Exp $	*/
/*
 * Copyright (c) 2002 Artur Grabowski <art@@openbsd.org>
 * All rights reserved. 
 *
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met: 
 *
 * 1. Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer. 
 * 2. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission. 
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL  DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

#include <sys/param.h>
#include <sys/ptrace.h>
#include <machine/reg.h>
#include <machine/frame.h>
#include "pmdb.h"

static const char *md_reg_names[] = {
	"%pc", "%npc", /* %y */
	"%o0", "%o1", "%o2", "%o3", "%o4", "%o5", "%o6", "%o7",
	"%i0", "%i1", "%i2", "%i3", "%i4", "%i5", "%i6", "%i7",
	"%g0", "%g1", "%g2", "%g3", "%g4", "%g5", "%g6", "%g7",
	"%l0", "%l1", "%l2", "%l3", "%l4", "%l5", "%l6", "%l7",
};

struct md_def md_def = { md_reg_names, 34, 0 };

void
md_def_init(void)
{
	/* no need to do anything */
}

int
md_getframe(struct pstate *ps, int frame, struct md_frame *fram)
{
	struct frame64 fr;
	struct reg r;
	reg fp, pc;
	reg *outs;
	int i;

	if (process_getregs(ps, &r))
		return (-1);

	if (frame == 0) {
		pc = r.r_pc;
		fp = r.r_out[6] + BIAS;
		/*
		 * XXX - we need some kind of heuristics here to decide
		 * if the function has done a save or not and then pick
		 * the in registers. the problem is just that there are
		 * no in registers in PT_GETREGS.
		 */
		outs = (reg *)&r.r_out;
		goto out;
	}

	fp = r.r_out[6] + BIAS;
	pc = r.r_out[7];

	for (i = 1; i < frame; i++) {
		/* Too low or unaligned frame pointer? */
		if (fp < 8192 || (fp & 7) != 0)
			return (-1);

		if (process_read(ps, fp, &fr, sizeof(fr)) < 0)
			return (-1);

		fp = (unsigned long)v9next_frame((&fr));
		pc = fr.fr_pc;

		/* Too low or unaligned pc ? */
		if ((pc < 8192) || (pc & 3) != 0)
			return (-1);

		outs = (reg *)&fr.fr_arg;
	}

out:
	fram->pc = pc;
	fram->fp = fp;

	fram->nargs = 6;	/* XXX - don't know the real number */
	for (i = 0; i < 6; i++) {
		fram->args[i] = fr.fr_arg[i];
	}

	return (0);
}

int
md_getregs(struct pstate *ps, reg *regs)
{
	struct reg r;
	int i;

	if (process_getregs(ps, &r))
		return (-1);

	regs[0] = r.r_pc;
	regs[1] = r.r_npc;

	for (i = 0; i < 8; i++) {
		regs[2 + i] = r.r_out[i];
		regs[10 + i] = r.r_in[i];
		regs[18 + i] = r.r_global[i];
		regs[26 + i] = r.r_local[i];
	}

	return (0);
}
@


1.6
log
@Use process_getregs everywhere.
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64.c,v 1.5 2002/07/22 01:20:50 art Exp $	*/
@


1.5
log
@Support for reading from core files.
From Jean-Francois Brousseau <krapht@@secureops.com>
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64.c,v 1.4 2002/03/19 21:32:10 fgsch Exp $	*/
d58 1
a58 1
	if (ptrace(PT_GETREGS, ps->ps_pid, (caddr_t)&r, 0) != 0)
d113 1
a113 1
	if (ptrace(PT_GETREGS, ps->ps_pid, (caddr_t)&r, 0) != 0)
@


1.4
log
@a bit of style.
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64.c,v 1.3 2002/03/17 18:39:33 art Exp $	*/
d82 1
a82 1
		if (read_from_pid(ps->ps_pid, fp, &fr, sizeof(fr)) < 0)
@


1.3
log
@Update to match new registers in struct reg
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64.c,v 1.2 2002/03/15 16:41:06 jason Exp $	*/
d83 2
a84 1
			return -1;
d104 1
a104 1
	return 0;
d114 2
a115 1
		return -1;
d118 1
a124 2
	for (i = 0; i < 8; i++) {
	}
d126 2
a127 2
	return 0;
}@


1.2
log
@s/$PMDB$/$OpenBSD$/
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64.c,v 1.6 2002/03/07 01:10:52 art Exp $	*/
d36 1
d38 1
d41 1
a41 1
struct md_def md_def = { md_reg_names, 18, 0 };
d118 3
a122 1
		regs[10 + i] = r.r_global[i];
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$PMDB: sparc64.c,v 1.6 2002/03/07 01:10:52 art Exp $	*/
@


1.1.1.1
log
@Import pmdb 4.1.

(see http://www.blahonga.org/~art/openbsd/pmdb.html for more info).

The development repository now moves here out from my local repository.
@
text
@@
