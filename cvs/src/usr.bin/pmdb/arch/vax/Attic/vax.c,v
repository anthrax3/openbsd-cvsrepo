head	1.6;
access;
symbols
	OPENBSD_5_2:1.5.0.42
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.40
	OPENBSD_5_0:1.5.0.38
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.36
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.34
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.30
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.32
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.28
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.26
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.24
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.22
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.20
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.18
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.16
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.14
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.12
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.10
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3;
locks; strict;
comment	@ * @;


1.6
date	2012.08.30.15.53.47;	author kettenis;	state dead;
branches;
next	1.5;

1.5
date	2002.07.22.02.54.23;	author art;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.22.01.20.50;	author art;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.19.21.43.05;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.19.21.32.10;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.19.21.01.49;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Move pmdb to the attic.

It's unfinished.  It will never be finished.
It's unfinishable.  deraadt@@
@
text
@/*	$OpenBSD: vax.c,v 1.5 2002/07/22 02:54:23 art Exp $	*/
/*
 * Copyright (c) 2002 Federico Schwindt <fgsch@@openbsd.org>
 * All rights reserved. 
 *
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met: 
 *
 * 1. Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer. 
 * 2. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission. 
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL  DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

#include <sys/param.h>
#include <sys/ptrace.h>
#include <machine/reg.h>
#include <machine/frame.h>
#include "pmdb.h"

static const char *md_reg_names[] = {
	"%r0", "%r1", "%r2", "%r3", "%r4", "%r5", "%r6", "%r7", "%r8",
	"%r9", "%r10", "%r11", "%ap", "%fp", "%sp", "%pc", "%ps"
};

struct md_def md_def = { md_reg_names, 17, 16 };

void
md_def_init(void)
{
	/* no need to do anything */
}

int
md_getframe(struct pstate *ps, int frame, struct md_frame *fram)
{
	struct callsframe fr;
	struct reg r;
	int count;

	if (process_getregs(ps, &r))
		return (-1);

	fr.ca_fp = r.fp;
	fr.ca_pc = r.pc;
	for (count = 0; count < frame; count++) {
		if (process_read(ps, fr.ca_fp, &fr, sizeof(fr)) < 0)
			return (-1);

		if (fr.ca_pc < 0x1000)
			return (-1);
	}

	fram->pc = fr.ca_pc;
	fram->fp = fr.ca_fp;

	return (0);
}

int
md_getregs(struct pstate *ps, reg *regs)
{
	struct reg r;

	if (process_getregs(ps, &r))
		return (-1);

	memcpy(regs, &r, sizeof(r));

	return (0);
}
@


1.5
log
@Use process_getregs everywhere.
@
text
@d1 1
a1 1
/*	$OpenBSD: vax.c,v 1.4 2002/07/22 01:20:50 art Exp $	*/
@


1.4
log
@Support for reading from core files.
From Jean-Francois Brousseau <krapht@@secureops.com>
@
text
@d1 1
a1 1
/*	$OpenBSD: vax.c,v 1.3 2002/03/19 21:43:05 fgsch Exp $	*/
d53 1
a53 1
	if (ptrace(PT_GETREGS, ps->ps_pid, (caddr_t)&r, 0) != 0)
d77 1
a77 1
	if (ptrace(PT_GETREGS, ps->ps_pid, (caddr_t)&r, 0) != 0)
@


1.3
log
@if pc is below 0x1000, stop; now trace shows up to start().
@
text
@d1 1
a1 1
/*	$OpenBSD: vax.c,v 1.2 2002/03/19 21:32:10 fgsch Exp $	*/
d59 1
a59 1
		if (read_from_pid(ps->ps_pid, fr.ca_fp, &fr, sizeof(fr)) < 0)
@


1.2
log
@a bit of style.
@
text
@d1 1
a1 1
/*	$OpenBSD: vax.c,v 1.1 2002/03/19 21:01:49 fgsch Exp $	*/
d60 3
@


1.1
log
@vax support.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d66 1
a66 1
	return 0;
d75 1
a75 1
		return -1;
d79 1
a79 1
	return 0;
@

