head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.10
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.8
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.4
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.12.0.10
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.6
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.16
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.14
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.12
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.10
	OPENBSD_5_0:1.11.0.8
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.6
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.4
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.18
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.14
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.12
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.10
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.8
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.6
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.9.0.4
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.16
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.14
	OPENBSD_2_8:1.3.0.12
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.10
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.8
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.6
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.4
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2015.10.09.01.37.07;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	sbrB3Q5CNxcwZpfU;

1.13
date	2015.10.05.13.24.39;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	Z9IMi8teCFkiwTXu;

1.12
date	2013.11.26.13.18.55;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2009.10.27.23.59.37;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2005.12.27.19.19.55;	author moritz;	state Exp;
branches;
next	1.9;

1.9
date	2005.03.08.23.30.50;	author cloder;	state Exp;
branches;
next	1.8;

1.8
date	2004.07.01.19.15.56;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.03.03.09.39;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.10.22.20.46;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.03.02.56.07;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.19.19.02.13;	author mpech;	state Exp;
branches;
next	1.3;

1.3
date	98.01.22.17.41.09;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.32.48;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.07;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.07;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Change all tame callers to namechange to pledge(2).
@
text
@/*	$OpenBSD: expand.c,v 1.13 2015/10/05 13:24:39 deraadt Exp $	*/
/*	$NetBSD: expand.c,v 1.5 1995/09/02 06:19:46 jtc Exp $	*/

/*
 * Copyright (c) 1980, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <unistd.h>
#include <err.h>

/*
 * expand - expand tabs to equivalent spaces
 */
int	nstops;
int	tabstops[100];

static void getstops(char *);
static void usage(void);

int
main(int argc, char *argv[])
{
	int c, column;
	int n;

	if (pledge("stdio rpath", NULL) == -1)
		err(1, "pledge");

	/* handle obsolete syntax */
	while (argc > 1 && argv[1][0] == '-' &&
	    isdigit((unsigned char)argv[1][1])) {
		getstops(&argv[1][1]);
		argc--; argv++;
	}

	while ((c = getopt (argc, argv, "t:")) != -1) {
		switch (c) {
		case 't':
			getstops(optarg);
			break;
		case '?':
		default:
			usage();
			/* NOTREACHED */
		}
	}
	argc -= optind;
	argv += optind;

	do {
		if (argc > 0) {
			if (freopen(argv[0], "r", stdin) == NULL)
				err(1, "%s", argv[0]);
			argc--, argv++;
		}
		column = 0;
		while ((c = getchar()) != EOF) {
			switch (c) {
			case '\t':
				if (nstops == 0) {
					do {
						putchar(' ');
						column++;
					} while (column & 07);
					continue;
				}
				if (nstops == 1) {
					do {
						putchar(' ');
						column++;
					} while (((column - 1) %
					    tabstops[0]) != (tabstops[0] - 1));
					continue;
				}
				for (n = 0; n < nstops; n++)
					if (tabstops[n] > column)
						break;
				if (n == nstops) {
					putchar(' ');
					column++;
					continue;
				}
				while (column < tabstops[n]) {
					putchar(' ');
					column++;
				}
				continue;

			case '\b':
				if (column)
					column--;
				putchar('\b');
				continue;

			default:
				putchar(c);
				column++;
				continue;

			case '\n':
				putchar(c);
				column = 0;
				continue;
			}
		}
	} while (argc > 0);
	exit(0);
}

static void
getstops(char *cp)
{
	int i;

	nstops = 0;
	for (;;) {
		i = 0;
		while (*cp >= '0' && *cp <= '9')
			i = i * 10 + *cp++ - '0';
		if (i <= 0 || i > 256) {
bad:
			errx(1, "Bad tab stop spec");
		}
		if (nstops > 0 && i <= tabstops[nstops-1])
			goto bad;
		if (nstops >= sizeof(tabstops) / sizeof(tabstops[0]))
			errx(1, "Too many tab stops");
		tabstops[nstops++] = i;
		if (*cp == 0)
			break;
		if (*cp != ',' && *cp != ' ')
			goto bad;
		cp++;
	}
}

static void
usage(void)
{
	extern char *__progname;
	fprintf (stderr, "usage: %s [-t tablist] [file ...]\n", __progname);
	exit(1);
}
@


1.13
log
@tame "stdio rpath" works.  (Someone could refactor the processing loop
to handle the stdin case without rpath, but it looks a bit invasive.
ok sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: expand.c,v 1.12 2013/11/26 13:18:55 deraadt Exp $	*/
d54 2
a55 2
	if (tame("stdio rpath", NULL) == -1)
		err(1, "tame");
@


1.12
log
@unsigned char casts for ctype
ok krw
@
text
@d1 1
a1 1
/*	$OpenBSD: expand.c,v 1.11 2009/10/27 23:59:37 deraadt Exp $	*/
d53 3
@


1.11
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: expand.c,v 1.10 2005/12/27 19:19:55 moritz Exp $	*/
d55 2
a56 1
	while (argc > 1 && argv[1][0] == '-' && isdigit(argv[1][1])) {
@


1.10
log
@fix possible overflow in the tabstops[] array. ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: expand.c,v 1.9 2005/03/08 23:30:50 cloder Exp $	*/
a31 13

#ifndef lint
static const char copyright[] =
"@@(#) Copyright (c) 1980, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static const char sccsid[] = "@@(#)expand.c	8.1 (Berkeley) 6/9/93";
#endif
static const char rcsid[] = "$OpenBSD: expand.c,v 1.9 2005/03/08 23:30:50 cloder Exp $";
#endif /* not lint */
@


1.9
log
@Sweeping the tree for printf(s) where printf("%s",s) should be used.
This is a regression introduced during conversion from perror(3) to err(3)
@
text
@d1 1
a1 1
/*	$OpenBSD: expand.c,v 1.8 2004/07/01 19:15:56 mickey Exp $	*/
d43 1
a43 1
static const char rcsid[] = "$OpenBSD: expand.c,v 1.8 2004/07/01 19:15:56 mickey Exp $";
d163 2
@


1.8
log
@use err/errx and __progname; -Wall
@
text
@d1 1
a1 1
/*	$OpenBSD: expand.c,v 1.7 2003/07/03 03:09:39 deraadt Exp $	*/
d43 1
a43 1
static const char rcsid[] = "$OpenBSD: expand.c,v 1.7 2003/07/03 03:09:39 deraadt Exp $";
d90 1
a90 1
				err(1, argv[0]);
@


1.7
log
@protos
@
text
@d1 1
a1 1
/*	$OpenBSD: expand.c,v 1.6 2003/06/10 22:20:46 deraadt Exp $	*/
d34 1
a34 1
static char copyright[] =
d41 1
a41 1
static char sccsid[] = "@@(#)expand.c	8.1 (Berkeley) 6/9/93";
d43 1
a43 1
static char rcsid[] = "$OpenBSD: expand.c,v 1.6 2003/06/10 22:20:46 deraadt Exp $";
d50 1
d89 2
a90 4
			if (freopen(argv[0], "r", stdin) == NULL) {
				perror(argv[0]);
				exit(1);
			}
d159 1
a159 2
			fprintf(stderr, "Bad tab stop spec\n");
			exit(1);
d175 2
a176 1
	(void)fprintf (stderr, "usage: expand [-t tablist] [file ...]\n");
@


1.6
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: expand.c,v 1.5 2003/06/03 02:56:07 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: expand.c,v 1.5 2003/06/03 02:56:07 millert Exp $";
d57 2
a58 2
static void getstops();
static void usage();
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: expand.c,v 1.4 2001/11/19 19:02:13 mpech Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: expand.c,v 1.4 2001/11/19 19:02:13 mpech Exp $";
d61 1
a61 3
main(argc, argv)
	int argc;
	char *argv[];
d109 2
a110 1
					} while (((column - 1) % tabstops[0]) != (tabstops[0] - 1));
d149 1
a149 2
getstops(cp)
	char *cp;
d175 1
a175 1
usage()
@


1.4
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: expand.c,v 1.3 1998/01/22 17:41:09 deraadt Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d43 1
a43 1
static char rcsid[] = "$OpenBSD: expand.c,v 1.3 1998/01/22 17:41:09 deraadt Exp $";
@


1.3
log
@expand(1) cannot treat argument correctly; shigio@@wafu.netgate.net
@
text
@d1 1
a1 1
/*	$OpenBSD: expand.c,v 1.2 1996/06/26 05:32:48 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: expand.c,v 1.2 1996/06/26 05:32:48 deraadt Exp $";
d69 2
a70 2
	register int c, column;
	register int n;
d155 1
a155 1
	register char *cp;
d157 1
a157 1
	register int i;
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: expand.c,v 1.5 1995/09/02 06:19:46 jtc Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: expand.c,v 1.5 1995/09/02 06:19:46 jtc Exp $";
d73 1
a73 1
	while (argc > 1 && argv[1][0] && isdigit(argv[1][1])) {
@


1.1
log
@Initial revision
@
text
@d1 1
d47 1
a47 1
static char rcsid[] = "$NetBSD: expand.c,v 1.5 1995/09/02 06:19:46 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
