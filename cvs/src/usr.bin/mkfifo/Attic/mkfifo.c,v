head	1.6;
access;
symbols
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.8
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	99.04.18.19.41.46;	author millert;	state dead;
branches;
next	1.5;

1.5
date	98.09.26.09.04.43;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.08.30.07.04.33;	author etheisen;	state Exp;
branches;
next	1.3;

1.3
date	96.08.28.07.31.51;	author etheisen;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.37.11;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.47;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.47;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@mkfifo has been merged into mknod
@
text
@/*	$OpenBSD: mkfifo.c,v 1.5 1998/09/26 09:04:43 deraadt Exp $	*/
/*	$NetBSD: mkfifo.c,v 1.7 1994/12/23 07:16:56 jtc Exp $	*/

/*
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1990, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)mkfifo.c	8.2 (Berkeley) 1/5/94";
#endif
static char rcsid[] = "$OpenBSD: mkfifo.c,v 1.5 1998/09/26 09:04:43 deraadt Exp $";
#endif /* not lint */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h>
#include <errno.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <err.h>

static void usage();

int
main(argc, argv)
	int argc;
	char *argv[];
{
	int ch, exitval;
	void * set;
	mode_t mode;

	setlocale (LC_ALL, "");

	/* The default mode is the value of the bitwise inclusive or of
	   S_IRUSR, S_IWUSR, S_IRGRP, S_IWGRP, S_IROTH, and S_IWOTH
	   modified by the file creation mask */
	mode = 0666 & ~umask(0);

	while ((ch = getopt(argc, argv, "m:")) != -1)
		switch(ch) {
		case 'm':
			if (!(set = setmode(optarg))) {
				errx(1, "invalid file mode.");
				/* NOTREACHED */
			}

			/*
			 * In symbolic mode strings, the + and - operators are
			 * interpreted relative to an assumed initial mode of
			 * a=rw.
			 */
			mode = getmode (set, 0666);
			free(set);
			break;
		case '?':
		default:
			usage();
		}
	argc -= optind;
	argv += optind;
	if (argv[0] == NULL)
		usage();

	for (exitval = 0; *argv; ++argv) {
		if (mkfifo(*argv, mode) < 0) {
			warn("%s", *argv);
			exitval = 1;
		}
	}
	exit(exitval);
}

void
usage()
{
	(void)fprintf(stderr, "usage: mkfifo [-m mode] fifoname ...\n");
	exit(1);
}
@


1.5
log
@more setmode() leaks -- kill 'em all
@
text
@d1 1
a1 1
/*	$OpenBSD: mkfifo.c,v 1.4 1996/08/30 07:04:33 etheisen Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mkfifo.c,v 1.4 1996/08/30 07:04:33 etheisen Exp $";
@


1.4
log
@Backout socket creation change as it didn't prove usefull.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mkfifo.c,v 1.2 1996/06/26 05:37:11 deraadt Exp $";
d85 6
a90 3
			/* In symbolic mode strings, the + and - operators are
			   interpreted relative to an assumed initial mode of
			   a=rw. */
d92 1
@


1.3
log
@mkfifo now generates AF_UNIX sockets as well as fifos.  Use the -s opt to
generate sockets.
@
text
@d1 1
a1 1
/*	$OpenBSD: mkfifo.c,v 1.2 1996/06/26 05:37:11 deraadt Exp $	*/
a55 2
#include <sys/socket.h>
#include <sys/un.h>
a61 2
int mksocket;

a69 2
	int sock;
	struct sockaddr_un name;
d78 1
a78 1
	while ((ch = getopt(argc, argv, "m:s")) != -1)
a89 3
		case 's':
			mksocket = 1;
			break;
d99 2
a100 19
	if (mksocket) {
		for (exitval = 0; *argv; ++argv) {
			if ((sock = socket(AF_UNIX, SOCK_DGRAM, 0)) < 0)
				goto error;

			name.sun_family = AF_UNIX;
			strncpy(name.sun_path, *argv, sizeof(name.sun_path)-1);
			name.sun_path[sizeof(name.sun_path) - 1];
			if (bind(sock, (struct sockaddr *)&name,
			      SUN_LEN(&name)) < 0)
				goto error;

			if (chmod(*argv, mode) < 0) {
				unlink(*argv);
				goto error;
			}

			continue;
error:
a104 8
	else {
		for (exitval = 0; *argv; ++argv) {
			if (mkfifo(*argv, mode) < 0) {
				warn("%s", *argv);
				exitval = 1;
			}
		}
	}
d111 1
a111 1
	(void)fprintf(stderr, "usage: mkfifo [-m mode] [-s] filename ...\n");
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: mkfifo.c,v 1.7 1994/12/23 07:16:56 jtc Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mkfifo.c,v 1.7 1994/12/23 07:16:56 jtc Exp $";
d56 2
d64 2
d74 2
d84 1
a84 1
	while ((ch = getopt(argc, argv, "m:")) != -1)
d96 3
d108 19
a126 2
	for (exitval = 0; *argv; ++argv) {
		if (mkfifo(*argv, mode) < 0) {
d131 8
d145 1
a145 1
	(void)fprintf(stderr, "usage: mkfifo [-m mode] fifoname ...\n");
@


1.1
log
@Initial revision
@
text
@d1 1
d47 1
a47 1
static char rcsid[] = "$NetBSD: mkfifo.c,v 1.7 1994/12/23 07:16:56 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
