head	1.24;
access;
symbols
	OPENBSD_6_2_BASE:1.24
	OPENBSD_6_1:1.24.0.8
	OPENBSD_6_1_BASE:1.24
	OPENBSD_6_0:1.24.0.4
	OPENBSD_6_0_BASE:1.24
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.22.0.4
	OPENBSD_5_8_BASE:1.22
	OPENBSD_5_7:1.21.0.2
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.19.0.6
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.4
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.18.0.4
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.2
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.17.0.6
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.4
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.15.0.4
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.2
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.14.0.8
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.10
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.6
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.4
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.2
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.13.0.8
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.6
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.4
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.2
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.12.0.4
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.2
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8;
locks; strict;
comment	@ * @;


1.24
date	2015.12.14.20.02.07;	author mmcc;	state Exp;
branches;
next	1.23;
commitid	knZg7AThw4F5hT9N;

1.23
date	2015.12.07.18.50.06;	author mmcc;	state Exp;
branches;
next	1.22;
commitid	vDhClsSElrQbmYvf;

1.22
date	2015.03.16.13.26.52;	author millert;	state Exp;
branches;
next	1.21;
commitid	IWNRLhjSibcEQ5d9;

1.21
date	2015.01.10.13.48.02;	author tedu;	state Exp;
branches;
next	1.20;
commitid	fEKdbP2GB4w2Blvu;

1.20
date	2014.12.01.06.36.04;	author deraadt;	state Exp;
branches;
next	1.19;
commitid	1N4D8AaCy2x3MRHz;

1.19
date	2013.11.26.13.21.16;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2012.12.29.01.32.44;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2011.07.08.01.20.24;	author tedu;	state Exp;
branches;
next	1.16;

1.16
date	2011.03.04.03.11.23;	author tedu;	state Exp;
branches;
next	1.15;

1.15
date	2010.04.05.03.03.55;	author tedu;	state Exp;
branches;
next	1.14;

1.14
date	2007.09.02.15.19.32;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2006.02.09.09.54.47;	author otto;	state Exp;
branches;
next	1.12;

1.12
date	2004.10.03.19.23.02;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2004.05.07.14.51.42;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.25.21.36.00;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2004.01.19.16.12.04;	author otto;	state Exp;
branches;
next	1.8;

1.8
date	2003.07.02.21.04.10;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.25.17.28.00;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.25.15.02.36;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.24.18.45.30;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.23.22.05.23;	author tedu;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.23.00.55.09;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.22.22.38.50;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.22.22.20.07;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Use long long rather than off_t for line_no to ensure that it's always
64 bits.

ok kettenis@@
@
text
@/*	$OpenBSD: grep.h,v 1.23 2015/12/07 18:50:06 mmcc Exp $	*/

/*-
 * Copyright (c) 1999 James Howard and Dag-Erling Coïdan Smørgrav
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>

#include <limits.h>
#include <regex.h>
#include <stdint.h>
#include <stdio.h>
#include <zlib.h>

#define VER_MAJ 0
#define VER_MIN 9

#define BIN_FILE_BIN	0
#define BIN_FILE_SKIP	1
#define BIN_FILE_TEXT	2

typedef struct {
	size_t		 len;
	long long	 line_no;
	off_t		 off;
	char		*file;
	char		*dat;
} str_t;

typedef struct {
	unsigned char	*pattern;
	int		 patternLen;
	int		 qsBc[UCHAR_MAX + 1];
	/* flags */
	int		 bol;
	int		 eol;
	int		 wmatch;
	int		 reversedSearch;
} fastgrep_t;

/* Flags passed to regcomp() and regexec() */
extern int	 cflags, eflags;

/* Command line flags */
extern int	 Aflag, Bflag, Eflag, Fflag, Hflag, Lflag,
		 Rflag, Zflag,
		 bflag, cflag, hflag, iflag, lflag, nflag, oflag, qflag, sflag,
		 vflag, wflag, xflag;
extern int	 binbehave;

extern int	 first, matchall, patterns, tail, file_err;
extern char    **pattern;
extern fastgrep_t *fg_pattern;
extern regex_t	*r_pattern;

/* For regex errors  */
#define RE_ERROR_BUF 512
extern char	 re_error[RE_ERROR_BUF + 1];	/* Seems big enough */

/* util.c */
int		 procfile(char *fn);
int		 grep_tree(char **argv);
void		*grep_malloc(size_t size);
void		*grep_calloc(size_t nmemb, size_t size);
void		*grep_realloc(void *ptr, size_t size);
void		*grep_reallocarray(void *ptr, size_t nmemb, size_t size);
void		 printline(str_t *line, int sep, regmatch_t *pmatch);
int		 fastcomp(fastgrep_t *, const char *);
void		 fgrepcomp(fastgrep_t *, const unsigned char *);

/* queue.c */
void		 initqueue(void);
void		 enqueue(str_t *x);
void		 printqueue(void);
void		 clearqueue(void);

/* mmfile.c */
typedef struct mmfile {
	int	 fd;
	size_t	 len;
	char	*base, *end, *ptr;
} mmf_t;

mmf_t		*mmopen(char *fn, char *mode);
void		 mmclose(mmf_t *mmf);
char		*mmfgetln(mmf_t *mmf, size_t *l);

/* file.c */
struct file;
typedef struct file file_t;

file_t		*grep_fdopen(int fd, char *mode);
file_t		*grep_open(char *path, char *mode);
int		 grep_bin_file(file_t *f);
char		*grep_fgetln(file_t *f, size_t *l);
void		 grep_close(file_t *f);

/* binary.c */
int		 bin_file(FILE * f);
int		 gzbin_file(gzFile * f);
int		 mmbin_file(mmf_t *f);

@


1.23
log
@Represent line numbers with off_t rather than int. This prevents
overflow on huge inputs. ok millert@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.22 2015/03/16 13:26:52 millert Exp $	*/
d46 1
a46 1
	off_t		 line_no;
@


1.22
log
@Include limits.h, not sys/limits.h and include stdint.h for SIZE_MAX.
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.21 2015/01/10 13:48:02 tedu Exp $	*/
d46 1
a46 1
	int		 line_no;
@


1.21
log
@1. They're flags, not counters. Set to one instead of incrementing.
2. The G flag is useless and never checked. Remove it.
ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.20 2014/12/01 06:36:04 deraadt Exp $	*/
a29 1
#include <sys/limits.h>
d31 1
d33 1
@


1.20
log
@use reallocarray()
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.19 2013/11/26 13:21:16 deraadt Exp $	*/
d66 1
a66 1
extern int	 Aflag, Bflag, Eflag, Fflag, Gflag, Hflag, Lflag,
@


1.19
log
@unsigned char casts for ctype
ok krw
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.18 2012/12/29 01:32:44 millert Exp $	*/
d87 1
@


1.18
log
@Fix exit status when there is an error reading a file.
Reported by Jeramey Crawford, fix adapted from FreeBSD.
OK guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.17 2011/07/08 01:20:24 tedu Exp $	*/
d89 1
a89 1
void		 fgrepcomp(fastgrep_t *, const char *);
@


1.17
log
@add support for -o to only print the match.
reminded this was useful by ajcoutot
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.16 2011/03/04 03:11:23 tedu Exp $	*/
d72 1
a72 1
extern int	 first, matchall, patterns, tail;
@


1.16
log
@add -H (opposite of -h) to always print name. ok deraadt millert
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.15 2010/04/05 03:03:55 tedu Exp $	*/
d68 1
a68 1
		 bflag, cflag, hflag, iflag, lflag, nflag, qflag, sflag,
d87 1
a87 1
void		 printline(str_t *line, int sep);
@


1.15
log
@remove some non-POSIX standard non-GNU defacto standard options, mostly
relating to symlinks that you can get with find.  And a bonus fts flag fix.
With a small tweak by guenther.  ok deraadt guenther jmc millert nicm
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.14 2007/09/02 15:19:32 deraadt Exp $	*/
d66 1
a66 1
extern int	 Aflag, Bflag, Eflag, Fflag, Gflag, Lflag,
@


1.14
log
@use calloc() to avoid malloc(n * m) overflows; checked by djm canacar jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.13 2006/02/09 09:54:47 otto Exp $	*/
d66 2
a67 2
extern int	 Aflag, Bflag, Eflag, Fflag, Gflag, Hflag, Lflag, Pflag,
		 Sflag, Rflag, Zflag,
@


1.13
log
@delint; remove redundant vars and functions; ok jaredy@@
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.12 2004/10/03 19:23:02 otto Exp $	*/
d85 1
@


1.12
log
@Remove block based mmap optimization. There are newline problems
(PR 3940, 3941) which can be fixed, but if a match starts at the
end of a block and continues into the next block, no match will be
found.  Measurements by millert@@ showed that the improvements of
this optimization are non-measurable anyway. Diff from Alexander Taler.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.11 2004/05/07 14:51:42 millert Exp $	*/
d72 1
a72 1
extern int	 first, lead, matchall, patterns, tail;
d88 1
a88 1
int		 fgrepcomp(fastgrep_t *, const char *);
a94 1
int		 countqueue(void);
a105 2
long		 mmtell(mmf_t *mmf);
void		 mmrewind(mmf_t *mmf);
a113 1
long		 grep_tell(file_t *f);
@


1.11
log
@Add a new past path for fgrep that is just a simplified version of
fastcomp.  This makes fgrep faster and fixes the -w flag w/ fgrep.
Also remove free_patterns() since calling free right before exit
is silly.  Problem noticed by espie@@
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.10 2004/01/25 21:36:00 millert Exp $	*/
d70 1
a70 2
extern int	 binbehave, boleol;
extern size_t	 maxPatternLen;
@


1.10
log
@Previously, in -w mode, for each match on a line grep would check
to see if the match was on a word boundary.  However, this missed
lines where the first match was not on a word boundary but a
subsequent match was.  Problem originally spotted by miod@@

We fix this by using the [[:<:]] and [[:>:]] character classes for
the slow path and by checking the word boundaries in grep_search()
for the fast path instead of doing the checks after running
regexec() or grep_search().

With this change, grep passes the new regress tests 15 and 16.
problem originally spotted by espie@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.9 2004/01/19 16:12:04 otto Exp $	*/
d89 1
@


1.9
log
@Use off_t for file sizes, and don't forget to print a ':' when using
the -b option.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.8 2003/07/02 21:04:10 deraadt Exp $	*/
d58 1
a86 1
unsigned char	*grep_strdup(const char *);
@


1.8
log
@protos
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.7 2003/06/25 17:28:00 millert Exp $	*/
d46 1
a46 1
	int		 off;
@


1.7
log
@o remove useless cast to int from gzread() call
o maxPatternLen should be size_t since that's what it is compared against
o remove useless casts of NULL to various pointer types
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.6 2003/06/25 15:02:36 millert Exp $	*/
d95 1
@


1.6
log
@Function prototypes that take no args should have (void) as the parameter.
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.5 2003/06/24 18:45:30 tedu Exp $	*/
d69 2
a70 1
extern int	 binbehave, boleol, maxPatternLen;
@


1.5
log
@actually do fgrep.  -G -F and -E are now mutally exclusive, and override
the program name as expected.  ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.4 2003/06/23 22:05:23 tedu Exp $	*/
d90 1
a90 1
void		 initqueue();
d92 2
a93 2
void		 printqueue();
void		 clearqueue();
@


1.4
log
@faster grep for simple patterns.  derived from a patch by sean farley.
this makes searching for constant strings much faster by avoiding regex.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.3 2003/06/23 00:55:09 tedu Exp $	*/
d65 2
a66 1
extern int	 Aflag, Bflag, Hflag, Lflag, Pflag, Sflag, Rflag, Zflag,
@


1.3
log
@better detetection/handling of binary files.
make -a do the right thing, doc and implement -U, -I.
add --help and --mmap for compatibility.
some other minor fixes.

some from NetBSD.  ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: grep.h,v 1.2 2003/06/22 22:38:50 deraadt Exp $	*/
d30 1
d51 10
d66 1
a66 1
		 bflag, cflag, hflag, lflag, nflag, qflag, sflag,
d68 1
a68 1
extern int	 binbehave;
d72 1
d84 1
d86 1
@


1.2
log
@proper $OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d38 4
d55 1
a55 1
		 aflag, bflag, cflag, hflag, lflag, nflag, qflag, sflag,
d57 1
@


1.1
log
@freegrep 0.16
@
text
@d1 2
@

