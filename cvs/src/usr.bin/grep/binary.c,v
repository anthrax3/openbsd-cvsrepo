head	1.18;
access;
symbols
	OPENBSD_6_2:1.18.0.18
	OPENBSD_6_2_BASE:1.18
	OPENBSD_6_1:1.18.0.16
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.12
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.8
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.10
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.6
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.4
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.17.0.10
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.8
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.6
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.4
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.16.0.4
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.2
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.15.0.18
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.20
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.16
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.14
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.12
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.10
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.8
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.6
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.4
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.2
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.14.0.2
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.12.0.2
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8;
locks; strict;
comment	@ * @;


1.18
date	2013.11.12.22.50.42;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2011.06.20.18.14.01;	author stsp;	state Exp;
branches;
next	1.16;

1.16
date	2010.07.02.20.48.48;	author nicm;	state Exp;
branches;
next	1.15;

1.15
date	2005.04.25.08.21.20;	author otto;	state Exp;
branches;
next	1.14;

1.14
date	2005.02.07.08.47.18;	author otto;	state Exp;
branches;
next	1.13;

1.13
date	2004.09.15.22.35.36;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2004.05.06.20.18.51;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2004.05.06.19.42.16;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.12.29.21.20.55;	author canacar;	state Exp;
branches;
next	1.9;

1.9
date	2003.09.18.22.29.30;	author beck;	state Exp;
branches;
next	1.8;

1.8
date	2003.09.07.07.53.44;	author tedu;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.25.17.28.00;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.25.04.03.47;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.23.00.55.09;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.22.22.38.50;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.22.22.24.13;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.22.22.21.50;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.22.22.20.07;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.18
log
@simple prototype repairs
@
text
@/*	$OpenBSD: binary.c,v 1.17 2011/06/20 18:14:01 stsp Exp $	*/

/*-
 * Copyright (c) 1999 James Howard and Dag-Erling Coïdan Smørgrav
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <ctype.h>
#include <err.h>
#include <stdio.h>
#include <string.h>
#include <zlib.h>

#include "grep.h"

static int
isbinary(const char *buf, size_t n)
{
	return (memchr(buf, '\0', n) != NULL);
}

int
bin_file(FILE *f)
{
	char		buf[BUFSIZ];
	size_t		m;
	int		ret = 0;

	if (fseek(f, 0L, SEEK_SET) == -1)
		return 0;

	if ((m = fread(buf, 1, BUFSIZ, f)) == 0)
		return 0;

	if (isbinary(buf, m))
		ret = 1;

	rewind(f);
	return ret;
}

#ifndef NOZ
int
gzbin_file(gzFile *f)
{
	char		buf[BUFSIZ];
	int		m;
	int		ret = 0;

	if (gzseek(f, (z_off_t)0, SEEK_SET) == -1)
		return 0;

	if ((m = gzread(f, buf, BUFSIZ)) <= 0)
		return 0;

	if (isbinary(buf, m))
		ret = 1;

	if (gzrewind(f) != 0)
		err(1, "gzbin_file");
	return ret;
}
#endif

#ifndef SMALL
int
mmbin_file(mmf_t *f)
{
	/* XXX knows too much about mmf internals */
	return isbinary(f->base, f->len < BUFSIZ ? f->len : BUFSIZ);
}
#endif
@


1.17
log
@Switch binary file detection from !(isprint() || isspace()) to checking
for embedded NULs. Matches GNU and FreeBSD grep, and avoids problems with
e.g. latin1-encoded files being treated as binary in the UTF-8 locale once
grep calls setlocale() (which it does not, yet).
OK millert@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.16 2010/07/02 20:48:48 nicm Exp $	*/
d37 1
a37 1
int
@


1.16
log
@Do not include mmap support with -DSMALL.

ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.15 2005/04/25 08:21:20 otto Exp $	*/
d32 1
d37 5
a41 1
#define	isbinary(ch)	(!isprint((ch)) && !isspace((ch)) && (ch) != '\b')
d47 1
a47 1
	size_t		i, m;
d56 2
a57 5
	for (i = 0; i < m; i++)
		if (isbinary(buf[i])) {
			ret = 1;
			break;
		}
d68 1
a68 1
	int		i, m;
d77 2
a78 5
	for (i = 0; i < m; i++)
		if (isbinary(buf[i])) {
			ret = 1;
			break;
		}
a89 2
	int i;

d91 1
a91 4
	for (i = 0; i < BUFSIZ && i < f->len; i++)
		if (isbinary(f->base[i]))
			return 1;
	return 0;
@


1.15
log
@- use size_t where appropriate.
- check for <= 0 in gzread; it returns -1 on error.
From christos@@netbsd; ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.14 2005/02/07 08:47:18 otto Exp $	*/
d87 1
d99 1
@


1.14
log
@Due to a braindead zlib, the test for seekability of a gzstream using
gzseek(f, 0L, SEEK_CUR) does not work as expected. Instead test the
underlying stream and remember that. This repairs echo foo | gzip | zgrep foo.
Problem spotted by Han Boetes in PR 4089; ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.13 2004/09/15 22:35:36 deraadt Exp $	*/
d42 1
a42 1
	int		i, m;
d48 1
a48 1
	if ((m = (int)fread(buf, 1, BUFSIZ, f)) == 0)
d72 1
a72 1
	if ((m = gzread(f, buf, BUFSIZ)) == 0)
@


1.13
log
@cast offset value correctly for gzseek
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.12 2004/05/06 20:18:51 otto Exp $	*/
d30 1
d45 1
a45 1
	if (isatty(fileno(f)) || fseek(f, 0L, SEEK_SET) == -1)
d81 2
a82 1
	gzrewind(f);
@


1.12
log
@Don't fseek() on stdin if it is a terminal. It does not fail, but
what's more more important, it does not work either.

ok millert@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.11 2004/05/06 19:42:16 millert Exp $	*/
d68 1
a68 1
	if (gzseek(f, 0L, SEEK_SET) == -1)
@


1.11
log
@Treat ^H as non-binary.  OK hshoexer@@, brad@@ and deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.10 2003/12/29 21:20:55 canacar Exp $	*/
d44 1
a44 1
	if (fseek(f, 0L, SEEK_SET) == -1)
@


1.10
log
@fix zgrep failure when the uncompressed file begins with a newline
also, search from the beginning if a stream or compressed file is
identified as 'binary'.
ok millert@@, reported by tedu@@, tested by jose@@
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.9 2003/09/18 22:29:30 beck Exp $	*/
d35 2
d51 1
a51 1
		if (!isprint(buf[i]) && !isspace(buf[i])) {
d75 1
a75 1
		if (!isprint(buf[i]) && !isspace(buf[i])) {
d92 1
a92 1
		if (!isprint(f->base[i]) && !isspace(f->base[i]))
@


1.9
log
@make this test look for spaces as well, to match other cases
ok fgs@@ ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.8 2003/09/07 07:53:44 tedu Exp $	*/
d40 1
d49 4
a52 2
		if (!isprint(buf[i]) && !isspace(buf[i]))
			return 1;
d55 1
a55 1
	return 0;
d64 1
d73 4
a76 2
		if (!isprint(buf[i]) && !isspace(buf[i]))
			return 1;
d79 1
a79 1
	return 0;
a91 1
	mmrewind(f);
@


1.8
log
@extend ascii test for more accuracy.  ok deraadt@@ pb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.7 2003/06/25 17:28:00 millert Exp $	*/
d69 1
a69 1
		if (!isprint(buf[i]))
@


1.7
log
@o remove useless cast to int from gzread() call
o maxPatternLen should be size_t since that's what it is compared against
o remove useless casts of NULL to various pointer types
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.6 2003/06/25 04:03:47 tedu Exp $	*/
a34 2
#define BUFFER_SIZE 32

d38 1
a38 1
	char		buf[BUFFER_SIZE];
d44 1
a44 1
	if ((m = (int)fread(buf, 1, BUFFER_SIZE, f)) == 0)
d59 1
a59 1
	char		buf[BUFFER_SIZE];
d65 1
a65 1
	if ((m = gzread(f, buf, BUFFER_SIZE)) == 0)
d83 1
a83 1
	for (i = 0; i < BUFFER_SIZE && i < f->len; i++)
@


1.6
log
@backwards args to gzseek
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.5 2003/06/23 00:55:09 tedu Exp $	*/
d67 1
a67 1
	if ((m = (int)gzread(f, buf, BUFFER_SIZE)) == 0)
@


1.5
log
@better detetection/handling of binary files.
make -a do the right thing, doc and implement -U, -I.
add --help and --mmap for compatibility.
some other minor fixes.

some from NetBSD.  ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.4 2003/06/22 22:38:50 deraadt Exp $	*/
d64 1
a64 1
	if (gzseek(f, SEEK_SET, 0) == -1)
@


1.4
log
@proper $OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d86 1
a86 1
		if (!isprint(f->base[i]))
@


1.3
log
@-DNOZ flag to be used by install media for removing z*grep support, if
needed.  (and knf)
@
text
@d1 2
a26 2
 *
 *	$Id$
@


1.2
log
@correct fseek() parameters
@
text
@d26 1
a26 1
 *	$Id: binary.c,v 1.1 2003/06/22 22:20:07 deraadt Exp $
d57 1
d77 1
d83 1
a83 1
	
@


1.1
log
@freegrep 0.16
@
text
@d26 1
a26 1
 *	$Id$
d43 1
a43 1
	if (fseek(f, SEEK_SET, 0) == -1)
@

