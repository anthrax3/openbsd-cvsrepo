head	1.43;
access;
symbols
	OPENBSD_6_2_BASE:1.43
	OPENBSD_6_1:1.43.0.12
	OPENBSD_6_1_BASE:1.43
	OPENBSD_6_0:1.43.0.8
	OPENBSD_6_0_BASE:1.43
	OPENBSD_5_9:1.43.0.4
	OPENBSD_5_9_BASE:1.43
	OPENBSD_5_8:1.43.0.6
	OPENBSD_5_8_BASE:1.43
	OPENBSD_5_7:1.43.0.2
	OPENBSD_5_7_BASE:1.43
	OPENBSD_5_6:1.42.0.10
	OPENBSD_5_6_BASE:1.42
	OPENBSD_5_5:1.42.0.8
	OPENBSD_5_5_BASE:1.42
	OPENBSD_5_4:1.42.0.4
	OPENBSD_5_4_BASE:1.42
	OPENBSD_5_3:1.42.0.2
	OPENBSD_5_3_BASE:1.42
	OPENBSD_5_2:1.41.0.6
	OPENBSD_5_2_BASE:1.41
	OPENBSD_5_1_BASE:1.41
	OPENBSD_5_1:1.41.0.4
	OPENBSD_5_0:1.41.0.2
	OPENBSD_5_0_BASE:1.41
	OPENBSD_4_9:1.39.0.2
	OPENBSD_4_9_BASE:1.39
	OPENBSD_4_8:1.38.0.2
	OPENBSD_4_8_BASE:1.38
	OPENBSD_4_7:1.36.0.4
	OPENBSD_4_7_BASE:1.36
	OPENBSD_4_6:1.36.0.6
	OPENBSD_4_6_BASE:1.36
	OPENBSD_4_5:1.36.0.2
	OPENBSD_4_5_BASE:1.36
	OPENBSD_4_4:1.35.0.6
	OPENBSD_4_4_BASE:1.35
	OPENBSD_4_3:1.35.0.4
	OPENBSD_4_3_BASE:1.35
	OPENBSD_4_2:1.35.0.2
	OPENBSD_4_2_BASE:1.35
	OPENBSD_4_1:1.33.0.2
	OPENBSD_4_1_BASE:1.33
	OPENBSD_4_0:1.32.0.2
	OPENBSD_4_0_BASE:1.32
	OPENBSD_3_9:1.31.0.4
	OPENBSD_3_9_BASE:1.31
	OPENBSD_3_8:1.31.0.2
	OPENBSD_3_8_BASE:1.31
	OPENBSD_3_7:1.30.0.2
	OPENBSD_3_7_BASE:1.30
	OPENBSD_3_6:1.26.0.2
	OPENBSD_3_6_BASE:1.26
	OPENBSD_3_5:1.23.0.2
	OPENBSD_3_5_BASE:1.23
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.1.0.6
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.4
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@.\" @;


1.43
date	2015.01.13.04.45.34;	author daniel;	state Exp;
branches;
next	1.42;
commitid	4cqt3p9qA4U75Duj;

1.42
date	2013.01.17.21.29.14;	author jmc;	state Exp;
branches;
next	1.41;

1.41
date	2011.07.08.01.20.24;	author tedu;	state Exp;
branches;
next	1.40;

1.40
date	2011.03.04.03.11.22;	author tedu;	state Exp;
branches;
next	1.39;

1.39
date	2010.09.03.11.09.28;	author jmc;	state Exp;
branches;
next	1.38;

1.38
date	2010.04.05.06.30.59;	author jmc;	state Exp;
branches;
next	1.37;

1.37
date	2010.04.05.03.03.55;	author tedu;	state Exp;
branches;
next	1.36;

1.36
date	2009.02.08.17.15.10;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2007.05.31.19.20.10;	author jmc;	state Exp;
branches;
next	1.34;

1.34
date	2007.05.30.04.41.34;	author jmc;	state Exp;
branches;
next	1.33;

1.33
date	2007.02.13.21.48.20;	author kili;	state Exp;
branches;
next	1.32;

1.32
date	2006.03.07.12.23.50;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2005.06.05.19.40.22;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2005.01.06.00.28.53;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2004.10.04.21.34.17;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2004.09.28.21.08.47;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2004.09.28.20.51.15;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2004.04.17.20.10.55;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2004.04.03.10.45.11;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2004.04.02.18.40.09;	author otto;	state Exp;
branches;
next	1.23;

1.23
date	2004.03.15.08.54.27;	author tedu;	state Exp;
branches;
next	1.22;

1.22
date	2004.01.19.16.26.03;	author otto;	state Exp;
branches;
next	1.21;

1.21
date	2003.12.11.20.48.06;	author mcbride;	state Exp;
branches;
next	1.20;

1.20
date	2003.10.20.05.02.58;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2003.09.27.14.14.40;	author mcbride;	state Exp;
branches;
next	1.18;

1.18
date	2003.08.20.20.34.53;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2003.08.11.18.49.09;	author tedu;	state Exp;
branches;
next	1.16;

1.16
date	2003.07.17.18.49.59;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2003.07.15.10.56.24;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.07.10.19.16.22;	author dhartmei;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.24.04.43.53;	author tedu;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.23.18.14.33;	author tedu;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.23.02.02.41;	author tedu;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.23.00.55.09;	author tedu;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.22.22.42.00;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.22.22.38.50;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.22.22.23.45;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.22.22.20.07;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.10.09.12.10;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.25.14.53.03;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.31.19.40.44;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.09.02.22.33;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.21.23.12.00;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.43
log
@An article on medium.com highlighted that grep
was available in v4.

To quote Ken Thompson, grep appeared "sometime
before the 4th edition."

ok schwarze@@
@
text
@.\"	$OpenBSD: grep.1,v 1.42 2013/01/17 21:29:14 jmc Exp $
.\" Copyright (c) 1980, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)grep.1	8.3 (Berkeley) 4/18/94
.\"
.Dd $Mdocdate: January 17 2013 $
.Dt GREP 1
.Os
.Sh NAME
.Nm grep , egrep , fgrep ,
.Nm zgrep , zegrep , zfgrep
.Nd file pattern searcher
.Sh SYNOPSIS
.Nm grep
.Bk -words
.Op Fl abcEFGHhIiLlnoqRsUVvwxZ
.Op Fl A Ar num
.Op Fl B Ar num
.Op Fl C Ns Op Ar num
.Op Fl e Ar pattern
.Op Fl f Ar file
.Op Fl -binary-files Ns = Ns Ar value
.Op Fl -context Ns Op = Ns Ar num
.Op Fl -line-buffered
.Op Ar pattern
.Op Ar
.Ek
.Sh DESCRIPTION
The
.Nm grep
utility searches any given input files,
selecting lines that match one or more patterns.
By default, a pattern matches an input line if the regular expression
(RE) in the pattern matches the input line
without its trailing newline.
An empty expression matches every line.
Each input line that matches at least one of the patterns is written
to the standard output.
If no file arguments are specified, the standard input is used.
.Pp
.Nm grep
is used for simple patterns and
basic regular expressions
.Pq BREs ;
.Nm egrep
can handle extended regular expressions
.Pq EREs .
See
.Xr re_format 7
for more information on regular expressions.
.Nm fgrep
is quicker than both
.Nm grep
and
.Nm egrep ,
but can only handle fixed patterns
(i.e. it does not interpret regular expressions).
Patterns may consist of one or more lines,
allowing any of the pattern lines to match a portion of the input.
.Pp
.Nm zgrep ,
.Nm zegrep ,
and
.Nm zfgrep
act like
.Nm grep ,
.Nm egrep ,
and
.Nm fgrep ,
respectively, but accept input files compressed with the
.Xr compress 1
or
.Xr gzip 1
compression utilities.
.Pp
The following options are available:
.Bl -tag -width indent
.It Fl A Ar num
Print
.Ar num
lines of trailing context after each match.
See also the
.Fl B
and
.Fl C
options.
.It Fl a
Treat all files as ASCII text.
Normally
.Nm
will simply print
.Dq Binary file ... matches
if files contain binary characters.
Use of this option forces
.Nm
to output lines matching the specified pattern.
.It Fl B Ar num
Print
.Ar num
lines of leading context before each match.
See also the
.Fl A
and
.Fl C
options.
.It Fl b
The offset in bytes of a matched pattern is
displayed in front of the respective matched line.
.It Fl C Ns Op Ar num
Print
.Ar num
lines of leading and trailing context surrounding each match.
The default is 2 and is equivalent to
.Fl A
.Ar 2
.Fl B
.Ar 2 .
Note:
no whitespace may be given between the option and its argument.
.It Fl c
Only a count of selected lines is written to standard output.
.It Fl E
Interpret
.Ar pattern
as an extended regular expression
(i.e. force
.Nm grep
to behave as
.Nm egrep ) .
.It Fl e Ar pattern
Specify a pattern used during the search of the input:
an input line is selected if it matches any of the specified patterns.
This option is most useful when multiple
.Fl e
options are used to specify multiple patterns,
or when a pattern begins with a dash
.Pq Sq - .
.It Fl F
Interpret
.Ar pattern
as a set of fixed strings
(i.e. force
.Nm grep
to behave as
.Nm fgrep ) .
.It Fl f Ar file
Read one or more newline separated patterns from
.Ar file .
Empty pattern lines match every input line.
Newlines are not considered part of a pattern.
If
.Ar file
is empty, nothing is matched.
.It Fl G
Interpret
.Ar pattern
as a basic regular expression
(i.e. force
.Nm grep
to behave as traditional
.Nm grep ) .
.It Fl H
Always print filename headers
.Pq i.e. filenames
with output lines.
.It Fl h
Never print filename headers
.Pq i.e. filenames
with output lines.
.It Fl I
Ignore binary files.
.It Fl i
Perform case insensitive matching.
By default,
.Nm grep
is case sensitive.
.It Fl L
Only the names of files not containing selected lines are written to
standard output.
Pathnames are listed once per file searched.
If the standard input is searched, the string
.Dq (standard input)
is written.
.It Fl l
Only the names of files containing selected lines are written to
standard output.
.Nm grep
will only search a file until a match has been found,
making searches potentially less expensive.
Pathnames are listed once per file searched.
If the standard input is searched, the string
.Dq (standard input)
is written.
.It Fl n
Each output line is preceded by its relative line number in the file,
starting at line 1.
The line number counter is reset for each file processed.
This option is ignored if
.Fl c ,
.Fl L ,
.Fl l ,
or
.Fl q
is
specified.
.It Fl o
Print each match, but only the match, not the entire line.
.It Fl q
Quiet mode:
suppress normal output.
.Nm grep
will only search a file until a match has been found,
making searches potentially less expensive.
.It Fl R
Recursively search subdirectories listed.
.It Fl s
Silent mode.
Nonexistent and unreadable files are ignored
(i.e. their error messages are suppressed).
.It Fl U
Search binary files, but do not attempt to print them.
.It Fl V
Display version information.
All other options are ignored.
.It Fl v
Selected lines are those
.Em not
matching any of the specified patterns.
.It Fl w
The expression is searched for as a word (as if surrounded by
.Sq [[:<:]]
and
.Sq [[:>:]] ;
see
.Xr re_format 7 ) .
.It Fl x
Only input lines selected against an entire fixed string or regular
expression are considered to be matching lines.
.It Fl Z
Force
.Nm grep
to behave as
.Nm zgrep .
.It Fl Fl binary-files Ns = Ns Ar value
Controls searching and printing of binary files.
Options are
.Ar binary ,
the default: search binary files but do not print them;
.Ar without-match :
do not search binary files;
and
.Ar text :
treat all files as text.
.Sm off
.It Fl Fl context Op = Ar num
.Sm on
Print
.Ar num
lines of leading and trailing context.
The default is 2.
.It Fl Fl line-buffered
Force output to be line buffered.
By default, output is line buffered when standard output is a terminal
and block buffered otherwise.
.El
.Sh EXIT STATUS
The
.Nm grep
utility exits with one of the following values:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Li 0
One or more lines were selected.
.It Li 1
No lines were selected.
.It Li \*(Gt1
An error occurred.
.El
.Sh EXAMPLES
To find all occurrences of the word
.Sq patricia
in a file:
.Pp
.Dl $ grep 'patricia' myfile
.Pp
To find all occurrences of the pattern
.Ql .Pp
at the beginning of a line:
.Pp
.Dl $ grep '^\e.Pp' myfile
.Pp
The apostrophes ensure the entire expression is evaluated by
.Nm grep
instead of by the user's shell.
The caret
.Ql ^
matches the null string at the beginning of a line,
and the
.Ql \e
escapes the
.Ql \&. ,
which would otherwise match any character.
.Pp
To find all lines in a file which do not contain the words
.Sq foo
or
.Sq bar :
.Pp
.Dl $ grep -v -e 'foo' -e 'bar' myfile
.Pp
A simple example of an extended regular expression:
.Pp
.Dl $ egrep '19|20|25' calendar
.Pp
Peruses the file
.Sq calendar
looking for either 19, 20, or 25.
.Sh SEE ALSO
.Xr ed 1 ,
.Xr ex 1 ,
.Xr gzip 1 ,
.Xr sed 1 ,
.Xr re_format 7
.Sh STANDARDS
The
.Nm
utility is compliant with the
.St -p1003.1-2008
specification.
.Pp
The flags
.Op Fl AaBbCGHhILoRUVwZ
are extensions to that specification, and the behaviour of the
.Fl f
flag when used with an empty pattern file is left undefined.
.Pp
All long options are provided for compatibility with
GNU versions of this utility.
.Pp
Historic versions of the
.Nm grep
utility also supported the flags
.Op Fl ruy .
This implementation supports those options;
however, their use is strongly discouraged.
.Sh HISTORY
The
.Nm grep
command first appeared in
.At v4 .
@


1.42
log
@remove uesless Pp;
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.41 2011/07/08 01:20:24 tedu Exp $
d31 1
a31 1
.Dd $Mdocdate: July 8 2011 $
d375 1
a375 1
.At v6 .
@


1.41
log
@add support for -o to only print the match.
reminded this was useful by ajcoutot
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.40 2011/03/04 03:11:22 tedu Exp $
d31 1
a31 1
.Dd $Mdocdate: March 4 2011 $
a289 1
.Pp
@


1.40
log
@add -H (opposite of -h) to always print name. ok deraadt millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.39 2010/09/03 11:09:28 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: September 3 2010 $
d41 1
a41 1
.Op Fl abcEFGHhIiLlnqRsUVvwxZ
d231 2
d358 1
a358 1
.Op Fl AaBbCGHhILRUVwZ
@


1.39
log
@add an EXIT STATUS section for /usr/bin;
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.38 2010/04/05 06:30:59 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: April 5 2010 $
d41 1
a41 1
.Op Fl abcEFGhIiLlnqRsUVvwxZ
d187 4
d356 1
a356 1
.Op Fl AaBbCGhILRUVwZ
@


1.38
log
@make this page read a little better;
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.37 2010/04/05 03:03:55 tedu Exp $
d286 1
a286 1
.Pp
@


1.37
log
@remove some non-POSIX standard non-GNU defacto standard options, mostly
relating to symlinks that you can get with find.  And a bonus fts flag fix.
With a small tweak by guenther.  ok deraadt guenther jmc millert nicm
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.36 2009/02/08 17:15:10 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: February 8 2009 $
d64 1
d286 1
a286 2
If no file arguments are specified, the standard input is used.
.Sh RETURN VALUES
d291 1
a291 1
.Bl -tag -width flag -compact
@


1.36
log
@bump the posix reference in STANDARDS to IEEE Std 1003.1-2008, with a few
updates to follow;
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.35 2007/05/31 19:20:10 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: May 31 2007 $
d41 1
a41 1
.Op Fl abcEFGHhIiLlnoPqRSsUVvwxZ
a185 6
.It Fl H
If
.Fl R
is specified, follow symbolic links only if they were explicitly listed
on the command line.
The default is not to follow symbolic links.
a225 7
.It Fl o
Always print filename headers with output lines.
.It Fl P
If
.Fl R
is specified, no symbolic links are followed.
This is the default.
a233 5
.It Fl S
If
.Fl R
is specified, all symbolic links are followed.
The default is not to follow symbolic links.
d352 1
a352 1
.Op Fl AaBbCGHhILoPRSUVwZ
@


1.35
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.34 2007/05/30 04:41:34 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate$
d366 1
a366 1
.St -p1003.1-2004
@


1.34
log
@- use a consistent text for STANDARDS
- note which options are extensions to POSIX
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.33 2007/02/13 21:48:20 kili Exp $
d31 1
a31 1
.Dd July 3, 1999
@


1.33
log
@
- Be explicit on command line checking, instead of relying on patterns,
  which may be NULL (e.g. -e '').
- let add_pattern() decide how to deal with empty patterns, don't do
  magic in read_patterns().

This unbreaks stuff like grep -e '', and makes grep -f <file> more
POSIX compliant. Semantics for grep -f /dev/null (or any other empty
file) may be questionable, but this case isn't specified by POSIX,
and matching nothing at all seems to be sane.

Thanks to otto@@, who mentioned potential problems related to the
-x option with the first patch i sent.

ok jaredy@@ (some time ago), otto@@, millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.32 2006/03/07 12:23:50 jmc Exp $
d364 1
a364 1
.Nm grep
@


1.32
log
@-nv is a valid combination; confirmed by otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.31 2005/06/05 19:40:22 jmc Exp $
d173 1
d175 3
d371 3
a373 1
are extensions to that specification.
@


1.31
log
@s/-p1003.1-2003/-p1003.1-2004/g
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.30 2005/01/06 00:28:53 jmc Exp $
a223 1
.Fl q ,
d225 1
a225 1
.Fl v
@


1.30
log
@clarify what -a does;
prod and ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.29 2004/10/04 21:34:17 jmc Exp $
d363 1
a363 1
.St -p1003.1-2003
@


1.29
log
@remove the section on extended regular expressions, and point
people instead to re_format.7: there is now a list of EREs there;
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.28 2004/09/28 21:08:47 jmc Exp $
d113 8
@


1.28
log
@when stdin is searched, -L and -l print `(standard input)', not `-';

from alexander taler (pr #3937);
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.27 2004/09/28 20:51:15 jmc Exp $
d67 2
a68 4
.Xr ex 1 -
or
.Xr ed 1 -style
regular expressions.
d70 5
a74 6
can handle extended regular expressions;
for a discussion of extended regular expressions, see
.Xr re_format 7 ;
for a list of extended regular expression special characters, see
.Sx EXTENDED REGULAR EXPRESSIONS ,
below.
a305 29
.Sh EXTENDED REGULAR EXPRESSIONS
The following characters are interpreted by
.Nm egrep :
.Pp
.Bl -tag -width flag -compact
.It Cm ^
Align the match from the beginning of the line.
.It Cm $
Align the match from the end of the line.
.It Cm \&|
Add another pattern (see example below).
.It Cm \&.
Match any single character.
.It Cm \&?
Match 1 or less sequential repetitions of the pattern.
.It Cm +
Match 1 or more sequential repetitions of the pattern.
.It Cm *
Match 0 or more sequential repetitions of the pattern.
.It Cm {}
Match specified number of sequential repetitions of the pattern.
.It Cm []
Match any characters enclosed in the brackets.
.It Cm ()
Delimits a subexpression.
.It Cm \e
Escape special characters which have meaning to
.Nm egrep .
.El
a349 1
.Xr regex 3 ,
@


1.27
log
@various fixes to make this page a bit clearer and hopefully a bit
more helpful;

this includes some ideas/fixes from otto and jared;
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.26 2004/04/17 20:10:55 jmc Exp $
d198 2
a199 2
If the standard input is searched, the pathname
.Sq -
d208 2
a209 2
If the standard input is searched, the pathname
.Sq -
@


1.26
log
@-w uses [[:<:]] and [[:>:]], not \< and \>,
and it's documented in re_format(7), not ex(1);

from jared yanovich;
ok beck@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.25 2004/04/03 10:45:11 jmc Exp $
d35 2
a36 1
.Nm grep, egrep, fgrep, zgrep, zegrep, zfgrep
d40 8
a47 2
.Op Fl AB Ar num
.Op Fl CEFGHILPRSUVZabchilnoqsvwx
a48 1
.Op Fl -binary-files Ns = Ns Ar value
a49 2
.Op Fl e Ar pattern
.Op Fl f Ar file
d52 1
d56 5
a60 5
utilities search the given input files selecting lines that match one
or more patterns.
By default, a pattern matches an input line if any regular expression
(RE) in the pattern matches the input line without its trailing
newline.
a64 1
The
d66 2
a67 2
utility is used for simple patterns and
.Xr ex 1
d69 2
a70 3
.Xr ed 1
style regular expressions.
The
d72 6
a77 3
utility can handle extended regular expressions and multi-line
patterns.
The
d79 9
a87 4
utility is quick but can handle only fixed patterns consisting of one
or more lines, allowing any of the pattern lines to match a portion of
the input.
The
d92 1
a92 1
utilities act like
d96 2
a97 2
.Nm fgrep
respectively but accept input files compressed with the
d109 7
d120 13
a132 3
.It Fl C
Print 2 lines of leading and trailing context after each match.
Equivalent to
d137 4
d142 4
a145 1
Force
d148 9
a156 1
.Nm egrep .
d158 4
a161 1
Force
d164 5
a168 1
.Nm fgrep .
d170 4
a173 1
Force
d175 2
a176 2
to behave as
.Nm grep .
d182 5
d189 5
d199 1
a199 1
.Sq Fl
a200 40
.It Fl P
If
.Fl R
is specified, no symbolic links are followed.
.It Fl R
Recursively search subdirectories listed.
.It Fl S
If
.Fl R
is specified, all symbolic links are followed.
.It Fl U
Search binary files, but do not attempt to print them.
.It Fl V
Display version information.
.It Fl Z
Force
.Nm grep
to behave as
.Nm zgrep .
.It Fl a
Treat all files as text.
.It Fl b
The offset in bytes of a matched pattern is
displayed in front of the respective matched line.
.It Fl c
Only a count of selected lines is written to standard output.
.It Fl e Ar expression
Specify a pattern used during the search of the input.
Multiple
.Fl e
options can be used to specify multiple patterns; an input line is
selected if it matches any of the specified patterns.
.It Fl f Ar pattern_file
Read one or more newline separated patterns from
.Ar pattern_file .
Newlines are not considered part of a pattern.
.It Fl h
Never print filename headers with output lines.
.It Fl i
Perform case insensitive matching.
d204 3
d217 1
d219 1
d221 1
a221 1
.Fl q
d226 5
d232 12
a243 1
Suppress normal output.
d246 7
a252 1
Nonexistent and unreadable files are ignored.
d258 5
a262 2
The expression is searched for as a word (as if surrounded by `[[:<:]]'
and `[[:>:]]', see
d267 15
d288 1
a288 13
Default is 2.
.Sm off
.It Fl Fl binary-files No = Ar value
.Sm on
Controls searching and printing of binary files.
Options are
.Ar binary ,
the default, search binary files but do not print them;
.Ar without-match ,
do not search binary files;
and
.Ar text ,
treat all files as text.
d306 1
a306 1
.It Li >1
d314 3
a316 1
.It Cm \&$
a317 2
.It Cm \&^
Align the match from the beginning of the line.
d320 2
d324 1
a324 1
.It Cm \&+
d326 1
a326 1
.It Cm \&*
d328 1
a328 1
.It Cm \&{}
d330 5
a334 4
.It Cm \&[]
Match any single character or range of characters
enclosed in the brackets.
.It Cm \&\e
d336 1
a336 2
.Nm egrep ,
the set of `$.^[]|?+*{}()\e'.
d339 3
a341 1
To find all occurrences of the word patricia in a file:
d343 1
a343 1
.Dl grep patricia myfile
d346 1
a346 1
.Ql \&.Pp
d349 1
a349 1
.Dl grep '^\e.Pp'
d353 1
a353 2
instead of by the
user's shell.
d355 1
a355 1
.Ql \&^
d358 1
a358 1
.Ql \&\e
d360 1
a360 1
.Ql \&.
d363 4
a366 1
To find all lines in a file which do not contain the words foo or bar:
d368 1
a368 1
.Dl grep -v -e foo -e bar myfile
d372 1
a372 1
.Dl egrep '19|20|25' calendar
d374 3
a376 2
Peruses the file calendar looking for either 19, 20
or 25.
d380 1
a382 1
.Xr regexp 3 ,
d384 20
d407 1
a407 1
command appeared in
@


1.25
log
@remove unnecessary .Sm macros (oops, this is my fault it ever
made it into the tree);
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.24 2004/04/02 18:40:09 otto Exp $
d208 3
a210 3
The expression is searched for as a word (as if surrounded by `\e<'
and `\e>', see
.Xr ex 1 ) .
@


1.24
log
@Document --line-buffered
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.23 2004/03/15 08:54:27 tedu Exp $
a232 1
.Sm off
a233 1
.Sm on
@


1.23
log
@simpler special character list.  provoked by Patrick Latifi ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.22 2004/01/19 16:26:03 otto Exp $
d43 1
d233 6
@


1.22
log
@-b reports offsets in bytes.

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.21 2003/12/11 20:48:06 mcbride Exp $
d273 1
a273 1
the set of {$,.,^,[,],|,?,+,*,{,},(,)}.
@


1.21
log
@Document use of [pattern] without -e, give example of -v with multiple
patterns.

ok deraadt@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.20 2003/10/20 05:02:58 jmc Exp $
d159 1
a159 1
The block number on the disk in which a matched pattern is located is
@


1.20
log
@typos from Jared Yanovich;
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.19 2003/09/27 14:14:40 mcbride Exp $
d45 1
d298 4
@


1.19
log
@Correct wording on -C option.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.18 2003/08/20 20:34:53 millert Exp $
d125 1
a125 1
is specified, follow symbolic links only if they were explictly listed
@


1.18
log
@Add curly braces {} to the list of special characters in egrep mode.
From Piotr Domagalski, closes PR 3405
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.17 2003/08/11 18:49:09 tedu Exp $
d101 1
a101 1
Print 2 lines of trailing context after each match.
@


1.17
log
@typo, pr3396 from piotr domagalski
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.16 2003/07/17 18:49:59 millert Exp $
d264 2
d272 1
a272 1
the set of {$,.,^,[,],|,?,+,*,(,)}.
@


1.16
log
@Make it clear what -C does w/o having to read the description of -A/-B.
Lack of clarity pointed out by Sam Smith, different fix suggested by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.15 2003/07/15 10:56:24 jmc Exp $
d191 1
a191 1
.Fl s
@


1.15
log
@- .Ql Li -> .Ql (Ql already provides literal font)
- remove a .Pp
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.14 2003/07/10 19:16:22 dhartmei Exp $
d101 1
@


1.14
log
@restore grep -v semantics, print lines that don't match any (mismatch all)
patterns. ok tedu@@, millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.13 2003/06/24 04:43:53 tedu Exp $
a90 1
.Pp
d287 1
a287 1
.Ql Li \&^
d290 1
a290 1
.Ql Li \&\e
d292 1
a292 1
.Ql Li \&.
@


1.13
log
@clarify operation of -f.  spotted by jmc@@, new text by James Howard
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.12 2003/06/23 18:14:33 tedu Exp $
d204 1
a204 2
matching the specified
patterns.
@


1.12
log
@document two long options without short equivs.
ok and help jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.11 2003/06/23 02:02:41 tedu Exp $
d169 3
a171 6
The pattern is read from the specified file.
Trailing newlines in the pattern file are ignored.
.Pf ( Nm Egrep
and
.Nm fgrep
only).
@


1.11
log
@spelling
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.10 2003/06/23 00:55:09 tedu Exp $
d41 2
d216 19
@


1.10
log
@better detetection/handling of binary files.
make -a do the right thing, doc and implement -U, -I.
add --help and --mmap for compatibility.
some other minor fixes.

some from NetBSD.  ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.9 2003/06/22 22:42:00 millert Exp $
d77 1
a77 1
utilities acts like
d82 1
a82 1
respectively but accepts input files compressed with the
@


1.9
log
@3 clause UCB license
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.8 2003/06/22 22:38:50 deraadt Exp $
d40 1
a40 1
.Op Fl CEFGHLPRSVZabchilnoqsvwx
d125 2
d144 2
d154 1
a154 1
Do not search in binary files.
@


1.8
log
@proper $OpenBSD$
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d13 1
a13 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.7
log
@tweaks by jmc and i
@
text
@d1 1
@


1.6
log
@freegrep 0.16
@
text
@d38 1
a38 1
.Nm grep, egrep, fgrep. zgrep
d76 10
a85 2
.Nm zgrep 
utility acts like grep, but accepts input files compressed with the
d95 1
a95 1
Print 
d99 2
a100 2
Print 
.Ar num 
d103 1
a103 1
Equivalent to 
d109 4
a112 4
Force 
.Nm grep 
to behave as 
.Nm egrep.
d114 1
a114 1
Force 
d116 2
a117 2
to behave as 
.Nm fgrep.
d119 1
a119 1
Force 
d121 2
a122 2
to behave as 
.Nm grep.
d124 1
a124 1
If 
d136 1
a136 1
If 
d142 1
a142 1
If 
d159 3
a161 2
.It Fl e Ar expression 
Specify a pattern used during the search of the input. Multiple
d165 3
a167 3
.It Fl f Ar pattern_file 
The pattern is read from the specified file. Trailing newlines in the
pattern file are ignored.
d178 3
a180 2
standard output. Pathnames are listed once per file searched. If the
standard input is searched, the pathname
d199 2
a200 1
Silent mode.  Nonexistent and unreadable files are ignored.
d216 1
a216 1
.Pp
d265 1
a265 1
The apostrophes assure the entire expression is evaluated by
a287 1
.Xr re_format 7 ,
d289 2
a290 1
.Xr regexp 3
@


1.5
log
@- section reorder
- COMPATIBILITY merge
- macro cleanup
- kill whitespace at EOL
- new sentence, new line

ssh pages ok markus@@
@
text
@d1 2
a2 4
.\"	$OpenBSD: grep.1,v 1.4 2003/04/25 14:53:03 jmc Exp $
.\"
.\" Copyright (c) 2000 Carson Harding. All rights reserved.
.\" This code was written and contributed to OpenBSD by Carson Harding.
d12 7
a18 3
.\" 3. Neither the name of the author, or the names of contributors may be
.\"    used to endorse or promote products derived from this software without
.\"    specific prior written permission.
d20 1
a20 1
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
d23 1
a23 1
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
d32 3
a34 1
.Dd May 10, 2001
d38 2
a39 2
.Nm grep , egrep , fgrep
.Nd print lines matching a pattern
d42 5
a46 13
.Bk -words
.Op Fl E | Fl F
.Op Fl bchilnqsvwxz
.Oo
.Fl RXH
.Op Fl L | Fl P
.Oc
.Op Fl e Ar pattern_list
.Op Fl f Ar pattern_file
.Op Ar pattern
.Op Ar file
.Ar ...
.Ek
d49 9
a57 9
.Nm
utility searches for lines that contain the specified pattern
or patterns.
By default
.Nm
prints lines containing matches to the standard output.
If no input files are specified,
.Nm
expects to read its input from the standard input.
d59 8
d68 3
a70 3
is equivalent to
.Nm grep
.Fl E ;
d72 10
a81 3
is equivalent to
.Nm grep
.Fl F .
d83 1
a83 7
The patterns are regular expressions, or in the case of
.Nm fgrep ,
fixed strings.
More than one pattern may be specified on the command-line,
either by repeated use of the
.Fl e
flag, or by separating patterns with newlines:
d85 15
a99 16
.Bd -literal -offset indent
grep \'Ishmael
Ahab' mobydick.txt
.Ed
.Pp
is the same as:
.Pp
.Dl grep -e Ishmael -e Ahab mobydick.txt
.Pp
Note that many regular expression special characters also have special
meaning to the shell.
It is best to enclose the regular expression in quotation marks.
Note also that a null pattern ("" or a newline alone) matches all input.
.Sh OPTIONS
The options available are:
.Bl -tag -width file Ds
d101 4
a104 2
Use extended regular expressions, as if the program was invoked as
.Nm egrep .
d106 38
a143 3
Patterns are fixed strings, not regular expressions, as if the
program was invoked as
.Nm fgrep .
d145 1
a145 8
Does nothing.
In other greps this flag tells grep to treat the input as ASCII and turns off
attempts to determine whether the input file is a binary file.
This
.Nm grep
does not (yet) do that check, so behaves as if
.Fl a
is always specified.
d147 2
a148 1
Prepend the byte-offset of the beginning of the line containing the match.
d150 3
a152 3
Print only a count of the matches found.
.It Fl e Ar pattern_list
The argument to
d154 9
a162 10
is a list of patterns to search for.
.Fl e
may be used multiple times, each instance of which may have
one or more patterns separated by new-lines.
.It Fl f Ar pattern_file
The argument to
.Fl f
is the name of a file from which to read patterns.
.Fl f
may be more than once.
d164 1
a164 2
Suppress the prefixing of file names to matching lines when multiple
files are searched.
d166 1
a166 1
Ignore case in comparisons.
d168 5
a172 4
Print only a list of the names of files in which matches were found.
If the input is the standard input,
.Nm
prints "(standard input)".
d174 12
a185 2
Prefix matching lines with their line number in the file in which
they occur.
d187 1
a187 10
Be quiet about errors accessing files, only return program status.
The status returned is 0 if there was a match, 1 if there were no
matches, even if there were errors accessing files.
(Without the
.Fl q
flag, if there was an error
accessing a file
.Nm
would return a status of 2 even
if it found matches.)
d189 1
a189 4
Suppress errors about accessing files.
Note that unlike
.Fl q
the program is not quiet: matches are still output.
d191 4
a194 2
Invert the sense of the match: return all lines that do not
contain the pattern.
d196 3
a198 3
The pattern is considered a word.
A matching pattern in a line must not be immediately bordered by a letter,
a number, or an underscore ('_').
d200 3
a202 50
Match the line exactly.
If a regular expression (invoked as
.Nm grep ,
or
.Nm egrep )
the pattern must match the whole line (as if
the pattern was enclosed in ^ and $).
If invoked as
.Nm fgrep ,
the string must match the entire line.
.It Fl z
When the
.Fl l
flag is also specified, print an ASCII NUL character (0) following
the file name, rather than a newline.
Like the
.Fl print0
option to
.Nm find ,
this may be used to pass file names containing unusual characters
to programs such as
.Nm xargs
with the
.Fl 0
flag.
.El
.Sh FILESYSTEM TRAVERSAL OPTIONS
The following options control recursive searchs:
.Bl -tag -width file Ds
.It Fl R
Recursively descend through any specified directory arguments.
.It Fl H
If the
.Fl R
option is also specified, symbolic links on the command
line are followed.
(Symbolic links encountered in the tree traversal are not followed.)
.It Fl L
If the
.Fl R
option is also specified, all symbolic links are followed.
.It Fl P
If the
.Fl R
option is also specified, no symbolic links are followed.
.It Fl X
If the
.Fl R
option is also specified, searches are confined to the device on
which the search started (file system mount points are not crossed).
d204 1
a204 6
.Sh EXAMPLES
To print all occurrences of the word Ishmael in mobydick.txt:
.Dl grep Ishmael mobydick.txt
.Pp
To merely count all the lines in which the word Ishmael occurs:
.Dl grep -c Ishmael mobydick.txt
a205 12
To print all occurrences of either of the words Ishmael or Ahab in
mobydick.txt:
.Dl grep 'Ishmael|Ahab' mobydick.txt
.Pp
To print all occurrences of the word whale in mobydick.txt, whether
or not it is capitalised, and where it appears alone and not as part
of a compound:
.Dl grep -iw whale mobydick.txt
.Pp
To find all the empty lines and print the line numbers for where they occur:
.Dl grep -nv \&. mobydick.txt
.Sh DIAGNOSTICS
d207 1
a207 1
.Nm
d211 6
a216 6
.It 0
One or more matching lines was found.
.It 1
No matches were found.
.It 2
An error occurred (whether or not matches were found).
d218 3
d222 51
a272 7
Note that when the
.Fl q
flag is used, file access errors do not cause an exit value of 2,
and in the absence of other errors (a bad regular expression)
the exit value is determined only by whether or not matches
were found.
(XX Should -s do the same??)
d274 4
d279 1
a279 1
.Xr re_format 7
d281 1
a281 1
A
a284 7
This version is a re-implementation from the POSIX specification and
inspection of the operation of several implementations of
.Nm grep .
.Sh NOTES
.Nm grep
has no limits on input line length (other than imposed by available
memory).
@


1.4
log
@add missing .El's for .Bl macros;
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.3 2003/03/31 19:40:44 jmc Exp $
d14 1
a14 1
.\" 3. Neither the name of the author, or the names of contributors may be 
d38 1
d50 1
d54 3
a56 2
utility searches for lines that contain the specified pattern 
or patterns. By default
d58 2
a59 2
prints lines containing matches to the standard output. If no input files
are specified,
d74 3
a76 2
fixed strings. More than one pattern may be specified on the 
command-line, either by repeated use of the
d79 6
a84 5

.Nm grep 
\'Ishmael
 Ahab' mobydick.txt

d86 3
a88 4

.Nm
-e Ishmael -e Ahab mobydick.txt

d90 3
a92 3
meaning to the shell. It is best to enclose the regular expression 
in quotation marks. Note also that a null pattern ("" or a newline alone)
matches all input.
a93 1
.Pp
d98 1
a98 1
.Nm egrep.
d102 1
a102 1
.Nm fgrep.
d104 4
a107 3
Does nothing. In other greps this flag tells grep to treat the input
as ASCII and turns off attempts to determine whether the input file is a 
binary file. This
d117 1
a117 1
The argument to 
d119 1
a119 1
is a list of patterns to search for. 
d140 1
a140 1
Prefix matching lines with their line number in the file in which 
d145 2
a146 1
matches, even if there were errors accessing files. (Without the
d148 2
a149 2
flag, if there was an error 
accessing a file 
d154 2
a155 1
Suppress errors about accessing files. Note that unlike
d162 3
a164 2
The pattern is considered a word. A matching pattern in a line must not
be immediately bordered by a letter, a number, or an underscore ('_').
d166 2
a167 1
Match the line exactly. If a regular expression (invoked as
d172 3
a174 2
the pattern was enclosed in ^ and $). If invoked as
.Nm fgrep,
d180 2
a181 1
the file name, rather than a newline. Like the 
d185 1
a185 1
this may be used to pass file names containing unusual characters 
a192 1
.Pp
d198 2
a199 2
If the 
.Fl R 
d201 2
a202 2
line are followed.  (Symbolic links encountered in the tree
traversal are not followed.)
d208 1
a208 1
If the 
d212 2
a213 2
If the 
.Fl R 
a217 1
.Pp
d224 1
a224 1
To print all occurrences of either of the words Ishmael or Ahab in 
a235 1
.Pp
d250 2
a251 2
.Fl q 
flag is used, file access errors do not cause an exit value of 2, 
d254 2
a255 1
were found. (XX Should -s do the same??)
d264 2
a265 2
This version is a re-implementation from the POSIX specification and 
inspection of the operation of several implementations of 
@


1.3
log
@ascii -> ASCII
@
text
@d1 1
a1 1
.\"	$OpenBSD: grep.1,v 1.2 2002/11/09 02:22:33 fgsch Exp $
d240 1
@


1.2
log
@more SEE ALSO fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d102 1
a102 1
as ascii and turns off attempts to determine whether the input file is a 
@


1.1
log
@complete grep clone by harding@@motd.ca; everything is there, but it is
slow because libc regexp is slow.  Anyone out there have the balls to sit
down and optimize libc regexp?
@
text
@a247 1
.Xr re_format 7 ,
d249 1
@

