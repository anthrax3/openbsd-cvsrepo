head	1.9;
access;
symbols
	OPENBSD_4_8:1.8.0.36
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.32
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.34
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.30
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.28
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.26
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.24
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.22
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.20
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.18
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.16
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.14
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.12
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.10
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.8
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.16
	OPENBSD_2_8:1.4.0.14
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.12
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.9
date	2010.10.18.20.54.00;	author deraadt;	state dead;
branches;
next	1.8;

1.8
date	2002.02.16.21.27.54;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.04.22.16.15;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.02.22.56.52;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.04.29.18.12.37;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.09.16.11.01.15;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.04.01.07.34.59;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.39.39;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.12.16.11.46.44;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@sup is no longer used. reminded by pirofti and jmc
@
text
@/*	$OpenBSD: errmsg.c,v 1.8 2002/02/16 21:27:54 millert Exp $	*/

/*
 * Copyright (c) 1991 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator   or   Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the rights
 * to redistribute these changes.
 */
/*****************************************************************
 * HISTORY
 * 04-Mar-85  Rudy Nedved (ern) at Carnegie-Mellon University
 *	Create a CMU version of the BBN errmsg routine from scratch. It
 *	differs from the BBN errmsg routine in the fact that it uses a
 *	negative value to indicate using the current errno value...the
 *	BBN uses a negative OR zero value.
 */

#include "supcdefs.h"
#include "supextern.h"

#ifndef HAS_STRERROR
static char *itoa(char *, unsigned int);

static char *itoa(p, n)
	char *p;
	unsigned int n;
{
	if (n >= 10)
		p = itoa(p, n/10);
	*p++ = (n % 10) + '0';
	return(p);
}
#endif

const char *errmsg(cod)
	int cod;
{
#ifndef HAS_STRERROR
	extern int	errno;
	extern int	sys_nerr;
	extern char	*sys_errlist[];
	static char unkmsg[] = "Unknown error ";
	static char unk[sizeof(unkmsg)+11];		/* trust us */

	if (cod < 0) cod = errno;

	if((cod >= 0) && (cod < sys_nerr))
	    return(sys_errlist[cod]);

	strlcpy(unk,unkmsg,sizeof unk);
	*itoa(&unk[sizeof(unkmsg)-1],cod) = '\0';

	return(unk);
#else
	return strerror(cod < 0 ? errno : cod);
#endif
}
@


1.8
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: errmsg.c,v 1.7 2001/05/04 22:16:15 millert Exp $	*/
@


1.7
log
@o kill register
o lots of KNF
o passes -Wall
o fix some [ug]id_t vs. int issues
o use strlcpy/strlcat in favor of strncpy/strncat
o use mem* routines everywhere instead of old b* ones
o marked several questionable things for later fixing
o kill ci.c and cvt.c -- we don't use them
o kill read_line.c since it requires fgetln() (bad for portability)
o kill salloc.c since it is the same as strup()
o Replaced some #ifdef __OpenBSD__ with better tests
o remaining problems: malloc return values are rarely checked, select misuse
@
text
@d1 1
a1 1
/*	$OpenBSD: errmsg.c,v 1.6 2001/05/02 22:56:52 millert Exp $	*/
d40 1
a40 1
static char *itoa __P((char *, unsigned int));
@


1.6
log
@Sync with NetBSD.  Notable changes:
 o Add libwrap support to supfilesrv, conditioned by #ifdef LIBWRAP
   (on by default). <bouyer@@netbsd.org>
 o Renamed '-l' (the 'live' mode) to '-d' and '-l' is now used to
   enable logging of successfull connections. <bouyer@@netbsd.org>
 o Don't botch varargs: the are not always an array of void * in the stack...
   Write a separate function to convert a list of function parameters to
   explain why execv failed. <christos@@netbsd.org>
 o When in compress mode, don't overwrite the destination file directly,
   write a temp file and use rename when it is done. (From James Mathiesen
   <james@@deshaw.com>)
 o Rename errno variable to error to avoid collision with errno.h and remove
   explicit extern of errno (we get it from errno.h) <mycroft@@netbsd.org>
 o Cleanup unsigned char vs. char
 o Add -u flag, that prevents sup from attempting to restore a and m times
   on the received files.
 o Replace the provided read_line function with calls to the fparseln function
   in libutil.  Maintain compatibility on machines without fparseln through
   the NEED_READ_LINE define.
 o Rename login() to suplogin() to avoid name collition in util.h
 o If rmdir() fails, chmod the path to have r/w/x perms and run "rm -rf"
 o avoid last.temp filename collision by using rel-suffix
 o When creating directories, make sure you remove previous non-directories
   before doing so, otherwise sup fails.
 o Add -q flag to supscan for quiet operation.
@
text
@d1 1
a1 1
/*	$OpenBSD: errmsg.c,v 1.5 2001/04/29 18:12:37 millert Exp $	*/
d39 2
a40 2
#if !defined(__NetBSD__) && !defined(__OpenBSD__)
static char *itoa __P((char *, unsigned));
d42 3
a44 3
static char *itoa(p,n)
char *p;
unsigned n;
d46 4
a49 4
    if (n >= 10)
	p =itoa(p,n/10);
    *p++ = (n%10)+'0';
    return(p);
d54 1
a54 1
int cod;
d56 1
a56 1
#if !defined(__NetBSD__) && !defined(__OpenBSD__)
d68 1
a68 2
	strncpy(unk,unkmsg,sizeof unk-1);
	unk[sizeof unk-1] = '\0';
@


1.5
log
@If errmsg() is passed a negative argument return strerror(errno)
Noticed while diffing against NetBSD version
@
text
@d1 1
a1 1
/*	$OpenBSD: errmsg.c,v 1.4 1997/09/16 11:01:15 deraadt Exp $	*/
d53 1
a53 1
char *errmsg(cod)
@


1.4
log
@strcpy whacking; ci.c and expand.c need more work
@
text
@d1 1
a1 1
/*	$OpenBSD: errmsg.c,v 1.3 1997/04/01 07:34:59 todd Exp $	*/
d74 1
a74 1
	return strerror(cod);
@


1.3
log
@This merges in the latest NetBSD sup source.
- removed $Log: ...$ tags to not waste space in the repository
- now doesn't segfault on the alpha!

Note:
To compile sup on systems other than *BSD, you'll need a copy of
vis.c, vis.h, daemon.c, and sys/cdefs.h.  At least the first two
(for OSF/1).

From NetBSD changelog description (for credit where due):
.... 1996/12/23 19:42:05  christos
- add missing prototypes.
- fix function call inconsistencies
- fix int <-> long and pointer conversions
It should run now on 64 bit machines...

....  1996/12/31 18:08:00  christos
64 bit patches (mostly long -> time_t) from Matthew Jacob (?)
sup now works on the alpha!
@
text
@d1 1
a1 1
/*	$OpenBSD: errmsg.c,v 1.2 1996/06/26 05:39:39 deraadt Exp $	*/
d68 2
a69 1
	strcpy(unk,unkmsg);
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d36 5
a40 3
extern int	errno;
extern int	sys_nerr;
extern char	*sys_errlist[];
d51 1
d56 4
d72 3
@


1.1
log
@add sup to the tree
@
text
@d1 2
@
