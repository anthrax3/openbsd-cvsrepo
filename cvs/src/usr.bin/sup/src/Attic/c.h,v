head	1.4;
access;
symbols
	OPENBSD_4_8:1.3.0.38
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.34
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.36
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.32
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.30
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.28
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.26
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.24
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.22
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.20
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.18
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.16
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.14
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.12
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.10
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.8
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.6
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2010.10.18.20.54.00;	author deraadt;	state dead;
branches;
next	1.3;

1.3
date	2001.04.29.18.14.09;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.39.38;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.12.16.11.46.41;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@sup is no longer used. reminded by pirofti and jmc
@
text
@/*	$OpenBSD: c.h,v 1.3 2001/04/29 18:14:09 millert Exp $	*/

/*
 * Copyright (c) 1991 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator   or   Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the rights
 * to redistribute these changes.
 */
/*
 * Standard C macros
 *
 **********************************************************************
 * HISTORY
 * 02-Feb-86  Glenn Marcy (gm0w) at Carnegie-Mellon University
 *	Added check to allow multiple or recursive inclusion of this
 *	file.  Added bool enum from machine/types.h for regular users
 *	that want a real boolean type.
 *
 * 29-Dec-85  Glenn Marcy (gm0w) at Carnegie-Mellon University
 *	Also change spacing of MAX and MIN to coincide with that of
 *	sys/param.h.
 *
 * 19-Nov-85  Glenn Marcy (gm0w) at Carnegie-Mellon University
 *	Changed the number of tabs between TRUE, FALSE and their
 *	respective values to match those in sys/types.h.
 *
 * 17-Dec-84  Glenn Marcy (gm0w) at Carnegie-Mellon University
 *	Only define TRUE and FALSE if not defined.  Added caseE macro
 *	for using enumerated types in switch statements.
 *
 * 23-Apr-81  Mike Accetta (mja) at Carnegie-Mellon University
 *	Added "sizeofS" and "sizeofA" macros which expand to the size
 *	of a string constant and array respectively.
 *
 **********************************************************************
 */

#ifndef	_C_INCLUDE_
#define	_C_INCLUDE_

#define ABS(x) ((x)>=0?(x):-(x))
#define	MIN(a,b) (((a)<(b))?(a):(b))
#define	MAX(a,b) (((a)>(b))?(a):(b))

#ifndef	FALSE
#define FALSE	0
#endif
#ifndef	TRUE
#define TRUE	1
#endif

#define	CERROR		(-1)

#ifndef	bool
typedef enum	{ false = 0, true = 1 } bool;
#endif

#define	sizeofS(string)	(sizeof(string) - 1)
#define sizeofA(array)	(sizeof(array)/sizeof(array[0]))

#define caseE(enum_type)	case (int)(enum_type)

#endif /* _C_INCLUDE_ */
@


1.3
log
@Add comment chars to (or just remove) bare words after #endif/#else for ANSI.
Noticed while diffing against NetBSD version
@
text
@d1 1
a1 1
/*	$OpenBSD: c.h,v 1.2 1996/06/26 05:39:38 deraadt Exp $	*/
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d65 1
a65 1
#endif	FALSE
d68 1
a68 1
#endif	TRUE
d74 1
a74 1
#endif	bool
d81 1
a81 1
#endif	_C_INCLUDE_
@


1.1
log
@add sup to the tree
@
text
@d1 2
@
