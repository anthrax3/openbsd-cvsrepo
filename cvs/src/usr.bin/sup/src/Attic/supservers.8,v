head	1.9;
access;
symbols
	OPENBSD_4_8:1.8.0.32
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.28
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.30
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.26
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.24
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.22
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.20
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.18
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.16
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.14
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.12
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.10
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.8
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.6
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.4
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.2
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.7.0.6
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.4
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.8
	OPENBSD_2_8:1.6.0.6
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.4
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@# @;


1.9
date	2010.10.18.20.54.00;	author deraadt;	state dead;
branches;
next	1.8;

1.8
date	2003.03.18.08.44.09;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.02.22.56.54;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	99.06.05.01.21.41;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	98.09.07.16.44.33;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	97.10.12.00.26.23;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	97.04.01.07.35.50;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.39.57;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.12.16.11.47.02;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@sup is no longer used. reminded by pirofti and jmc
@
text
@.\"	$OpenBSD: supservers.8,v 1.8 2003/03/18 08:44:09 jmc Exp $
.\"
.\" Copyright (c) 1992 Carnegie Mellon University
.\" All Rights Reserved.
.\"
.\" Permission to use, copy, modify and distribute this software and its
.\" documentation is hereby granted, provided that both the copyright
.\" notice and this permission notice appear in all copies of the
.\" software, derivative works or modified versions, and any portions
.\" thereof, and that both notices appear in supporting documentation.
.\"
.\" CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
.\" CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
.\" ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
.\"
.\" Carnegie Mellon requests users of this software to return to
.\"
.\"  Software Distribution Coordinator  or  Software_Distribution@@CS.CMU.EDU
.\"  School of Computer Science
.\"  Carnegie Mellon University
.\"  Pittsburgh PA 15213-3890
.\"
.\" any improvements or extensions that they make and grant Carnegie Mellon
.\" the rights to redistribute these changes.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\" HISTORY
.\"
.\" Revision 1.3  92/08/11  12:08:50  mrt
.\" 	Documented -C switch
.\" 	[92/08/11            mrt]
.\"
.TH SUPSERVERS 8 1/16/86
.CM 1
.SH "NAME"
supfilesrv, supscan \- sup server processes
.SH "SYNOPSIS"
supfilesrv
[
.I
-d
] [
.I
-l
] [
.I
-q
] [
.I
-N
] [
.I
-P
] [
.I -C MaxChildren
] [
.I -O lockdir
]
.br
supscan [
.I
-v
] [
.I
-s
] [
.I
collection
] [
.I
basedir
]
.SH "DESCRIPTION"
.I
Supfilesrv
is the server processes used to interact with
.I
sup
client processes via the IP/TCP network protocol.
This server
normally is expected to be running on server machines at all times.
Each machine with files of interest to users on other machines is
expected to be a file server and should run
.I
supfilesrv.

A file server machine will service requests for both "private" and
"system" file collections.
No special action is necessary to support
private collections, as the client user is expected to supply all
necessary information.
For system collections, if the base directory
is not the default (see FILES below), an entry must be put into
the directory list file; this entry is a single text line containing
the name of the collection, one or more spaces, and the name of the
base directory for that collection.

Each collection should have
an entry in the host list file; this entry is a single text line
containing the name of the collection, one or more spaces, and
the name of the host machine acting as file server for that collection.

Details of setting up a file collection for the file server are
described in the manual entry for
.I
sup(1).

.I
Supfilesrv
generally runs as a network server process that listens for connections,
and for each connection (double-)forks a process to handle the interaction
with the client.
However, with the -d flag, no forking will take place:
the server will listen for a network connection, handle it, and exit.
This is useful for debugging the servers in "live" mode rather than as
daemons.

For debugging purposes, the -P "debugging ports" flag can be used.
It will cause the selection of an alternate, non-privileged set of
TCP ports instead of the usual ports, which are reserved for the
active server processes.  The -N "network debugging" flag can be used
to produce voluminous messages describing the network communication
progress and status. The more -N switches that you use the more output
you get. Use 3 (separated by spaces: -N -N -N) to get a complete record
of all network messages. Log messages are printed by
.I syslog
on
.I daemon.log .
To suppress
log messages, the -q "quiet" flag can be used.

.I supfilesrv
uses libwrap style access control (the /etc/hosts.allow and /etc/hosts.deny
files) with service name "supfilesrv". The -l "log" flag turn on loggin of
accepted connections (denied connections are always logged).

Normally the
.I supfilesrv
will only respond to 3 requests simultaneously, forking a child
process for each client. If it gets additional requests it will respond
with the error FSSETUPBUSY. The -C MaxChildren switch can be used
to increase (or decrease) this number.


The -O lockdir switch is used to make
.I supfilesrv
allow only one active connection at a time from any client IP address.
This is accomplished by each serving process obtaining exclusive lock,
and writing its process ID into a file in "lockdir" where the filename
is the dotted decimal IP address of the connecting host. Any
connections from a client where a lock can not be obtained on such a file
will be rejected, limiting any client host to one connection at a time
to this sup server. This is useful for preventing problems where
clients running
.I sup
on a regular basis manage to time requests so that a second request
comes in before the first one completes.

.SH "SUPSCAN"
It is possible to pre-compile a list of the files in a collection
to make
.I
supfilesrv
service that collection much faster.  This can be done by running
.I
supscan
on the desired collection on the repository machine.  This produces a
list of all the files in the collection at the time of the
.I
supscan;
subsequent upgrades will be based on this list of files rather than
actually scanning the disk at the time of the upgrade.  Of course,
the upgrade will consequently bring the client machine up to the status
of the repository machine as of the time of the
.I
supscan
rather than as of the time of the upgrade; hence, if
.I
supscan
is used, it should be run periodically on the
collection.
This facility is useful for extremely large file collections
that are upgraded many times per day, such as the CMU UNIX system
software.  The "verbose" flag
.I
-v
will cause
.I
supscan
to produce output messages as it scans the files in the collection.
The "system" flag
.I
-s
will cause
.I
supscan
to scan all system collections residing on the current host.
The
.I
basedir
parameter must be specified if the collection is a private
collection whose base directory is not the default.
.SH "FILES"
.TP
/usr
default base directory for a collection
.TP
/usr/lib/supfiles/coll.dir
directory list file for file server
.TP
/usr/lib/supfiles/coll.host
host list file for system sups.
.TP
<base-directory>/sup/<collection>/*
files used by file server (see
.I
sup(1))
.TP
<base-directory>/sup/<collection>/list
list file used by
.I
supscan
to create file list
.TP
<base-directory>/sup/<collection>/scan
file list created by
.I
supscan
from list file
.i0
.DT
.PP
.SH "SEE ALSO"
sup(1)
.br
.I
The SUP Software Upgrade Protocol,
S.
A.
Shafer, CMU Computer Science Dept., 1985.
.SH "DIAGNOSTICS"
The file server places log messages on the
standard and diagnostic output files.
The process name and process
id number generally accompany each message for diagnostic purposes.
.SH "HISTORY"
.TP
31-July-92 Mary Thompson (mrt) at Carnegie Mellon University
Removed references to supnameserver which has not existed for
a long time. Update a few file names. Added -C switch.
.TP
21-May-87  Glenn Marcy (gm0w) at Carnegie-Mellon University
Updated documentation for 4.3; changed /usr/cmu to /usr/cs.
.TP
15-Jan-86  Glenn Marcy (gm0w) at Carnegie-Mellon University
Updated documentation; -s switch to supscan.
.TP
23-May-85  Steven Shafer (sas) at Carnegie-Mellon University
Supscan created and documented; also -N flag.
.TP
04-Apr-85  Steven Shafer (sas) at Carnegie-Mellon University
Created.
@


1.8
log
@ip address -> IP address;
rtadvd.conf(5): positve -> positive;

ok miod@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: supservers.8,v 1.7 2001/05/02 22:56:54 millert Exp $
@


1.7
log
@Sync with NetBSD.  Notable changes:
 o Add libwrap support to supfilesrv, conditioned by #ifdef LIBWRAP
   (on by default). <bouyer@@netbsd.org>
 o Renamed '-l' (the 'live' mode) to '-d' and '-l' is now used to
   enable logging of successfull connections. <bouyer@@netbsd.org>
 o Don't botch varargs: the are not always an array of void * in the stack...
   Write a separate function to convert a list of function parameters to
   explain why execv failed. <christos@@netbsd.org>
 o When in compress mode, don't overwrite the destination file directly,
   write a temp file and use rename when it is done. (From James Mathiesen
   <james@@deshaw.com>)
 o Rename errno variable to error to avoid collision with errno.h and remove
   explicit extern of errno (we get it from errno.h) <mycroft@@netbsd.org>
 o Cleanup unsigned char vs. char
 o Add -u flag, that prevents sup from attempting to restore a and m times
   on the received files.
 o Replace the provided read_line function with calls to the fparseln function
   in libutil.  Maintain compatibility on machines without fparseln through
   the NEED_READ_LINE define.
 o Rename login() to suplogin() to avoid name collition in util.h
 o If rmdir() fails, chmod the path to have r/w/x perms and run "rm -rf"
 o avoid last.temp filename collision by using rel-suffix
 o When creating directories, make sure you remove previous non-directories
   before doing so, otherwise sup fails.
 o Add -q flag to supscan for quiet operation.
@
text
@d1 1
a1 1
.\"	$OpenBSD: supservers.8,v 1.6 1999/06/05 01:21:41 aaron Exp $
d146 1
a146 1
allow only one active connection at a time from any client ip address.
d149 1
a149 1
is the dotted decimal ip address of the connecting host. Any
@


1.6
log
@- remove trailing white space
- remove arguments from .Os macros
- remove arguments from .Nm macros, where appropriate
- some more Dq/Sq/Ql insanity
- still lots to do in the usr.bin tree... :/
@
text
@d1 1
a1 1
.\"	$OpenBSD: supservers.8,v 1.5 1998/09/07 16:44:33 aaron Exp $
d40 3
d112 1
a112 1
However, with the -l flag, no forking will take place:
d131 4
d207 1
a207 1
/usr/cs/lib/supfiles/coll.dir
d210 1
a210 1
/usr/cs/lib/supfiles/coll.host
@


1.5
log
@More man page fixes. Particularly fix uses of it's/its, affect/effect,
then/than and such. Other miscellaneous problems fixed across these source
files.
@
text
@d1 1
a1 1
.\"	$OpenBSD: supservers.8,v 1.4 1997/10/12 00:26:23 beck Exp $
d11 1
a11 1
.\" 
d31 1
a31 1
.\" 
d39 1
a39 1
.I 
d42 1
a42 1
.I 
d45 1
a45 1
.I 
d48 1
a48 1
.I 
d54 1
a54 1
] 
d57 1
a57 1
.I 
d60 1
a60 1
.I 
d63 1
a63 1
.I 
d66 1
a66 1
.I 
d70 1
a70 1
.I 
d73 1
a73 1
.I 
d80 1
a80 1
.I 
d82 1
a82 1
 
d101 1
a101 1
.I 
d104 1
a104 1
.I 
d121 1
a121 1
of all network messages. Log messages are printed by 
d123 1
a123 1
on 
d129 1
a129 1
Normally the 
d137 1
a137 1
The -O lockdir switch is used to make 
d154 1
a154 1
.I 
d157 1
a157 1
.I 
d161 1
a161 1
.I 
d167 1
a167 1
.I 
d170 1
a170 1
.I 
d177 1
a177 1
.I 
d180 1
a180 1
.I 
d184 1
a184 1
.I 
d187 1
a187 1
.I 
d191 1
a191 1
.I 
d208 1
a208 1
.I 
d213 1
a213 1
.I 
d219 1
a219 1
.I 
d228 1
a228 1
.I 
@


1.4
log
@	Documentation for -O switch on supfilesrv.
@
text
@d1 1
a1 1
.\"	$OpenBSD: supservers.8,v 1.3 1997/04/01 07:35:50 todd Exp $
d141 1
a141 1
and writing it's process ID into a file in "lockdir" where the filename
@


1.3
log
@This merges in the latest NetBSD sup source.
- removed $Log: ...$ tags to not waste space in the repository
- now doesn't segfault on the alpha!

Note:
To compile sup on systems other than *BSD, you'll need a copy of
vis.c, vis.h, daemon.c, and sys/cdefs.h.  At least the first two
(for OSF/1).

From NetBSD changelog description (for credit where due):
.... 1996/12/23 19:42:05  christos
- add missing prototypes.
- fix function call inconsistencies
- fix int <-> long and pointer conversions
It should run now on 64 bit machines...

....  1996/12/31 18:08:00  christos
64 bit patches (mostly long -> time_t) from Matthew Jacob (?)
sup now works on the alpha!
@
text
@d1 1
a1 1
.\"	$OpenBSD: supservers.8,v 1.2 1996/06/26 05:39:57 deraadt Exp $
d52 3
a54 1
]
d135 15
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD$
a26 6
.\" $Log: supservers.8,v $
.\" Revision 1.1  1995/12/16 11:47:02  deraadt
.\" add sup to the tree
.\"
.\" Revision 1.1.1.1  1993/05/21 14:52:16  cgd
.\" initial import of CMU's SUP to NetBSD
@


1.1
log
@add sup to the tree
@
text
@d1 2
d28 3
@
