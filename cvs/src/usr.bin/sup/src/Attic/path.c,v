head	1.7;
access;
symbols
	OPENBSD_4_8:1.6.0.30
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.8
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.16
	OPENBSD_2_8:1.4.0.14
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.12
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2010.10.18.20.54.00;	author deraadt;	state dead;
branches;
next	1.6;

1.6
date	2003.04.15.07.21.09;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.04.22.16.15;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.09.16.11.01.15;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.04.01.07.35.13;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.39.44;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.12.16.11.46.48;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@sup is no longer used. reminded by pirofti and jmc
@
text
@/*	$OpenBSD: path.c,v 1.6 2003/04/15 07:21:09 deraadt Exp $	*/

/*
 * Copyright (c) 1991 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator   or   Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the rights
 * to redistribute these changes.
 */
/*  path  --  break filename into directory and file
 *
 *  path (filename,direc,file,filen);
 *  char *filename,*direc,*file;
 *  int filen;
 *  filename is input; direc and file are output (user-supplied).
 *  file will not have any trailing /; direc might.
 *  filen is the length of the file buffer.
 *  Note these rules:
 *  1.  trailing / are ignored (except as first character)
 *  2.  x/y is x;y where y contains no / (x may contain /)
 *  3.  /y  is /;y where y contains no /
 *  4.  y   is .;y where y contains no /
 *  5.      is .;. (null filename)
 *  6.  /   is /;. (the root directory)
 *
 * Algorithm is this:
 *  1.  delete trailing / except in first position
 *  2.  if any /, find last one; change to null; y++
 *      else y = x;		(x is direc; y is file)
 *  3.  if y is null, y = .
 *  4.  if x equals y, x = .
 *      else if x is null, x = /
 *
 *  HISTORY
 * 20-Nov-79  Steven Shafer (sas) at Carnegie-Mellon University
 *	Copied verbatim from PDP-11.  Still as messy as ever.
 *	Some people have asked for a modification (I think that's a better
 *	idea than a new routine) which will change the directory name
 *	into an absolute pathname if it isn't one already.  The change
 *	involves doing a getwd() and prepending that if appropriate, with
 *	a "/" in between that and the directory part of the path.
 *	If you want to be cute, you can also resolve ".."s at that time.
 *
 * XXX - this is horrible code (millert)
 */
#include "supcdefs.h"
#include "supextern.h"

void
path(original, direc, direclen, file, filen)
	char *original, *direc;
	int direclen;
	char *file;
	int filen;
{
	char *y;
	/* x is direc */
	char *p;

	/* copy and note the end */
	p = original;
	y = direc;
	while ((*y++ = *p++) != '\0')
		;	/* copy string */
	/* y now points to first char after null */
	--y;		/* y now points to null */
	--y;		/* y now points to last char of string before null */

	/* chop off trailing / except as first character */
	while (y>direc && *y == '/')
		--y;	/* backpedal past / */
	/* y now points to char before first trailing / or null */
	*(++y) = 0;				/* chop off end of string */
	/* y now points to null */

	/* find last /, if any.  If found, change to null and bump y */
	while (y>direc && *y != '/')
		--y;
	/* y now points to / or direc.  Note *direc may be / */
	if (*y == '/')
		*y++ = 0;

	/* find file name part */
	if (*y)
		strlcpy(file, y, filen);
	else
		strlcpy(file, ".", filen);

	/* find directory part */
	if (direc == y)
		strlcpy(direc, ".", direclen);
	else if (*direc == 0)
		strlcpy(direc, "/", direclen);
	/* else direc already has proper value */
}
@


1.6
log
@a bit of string cleaning
@
text
@d1 1
a1 1
/*	$OpenBSD: path.c,v 1.5 2001/05/04 22:16:15 millert Exp $	*/
@


1.5
log
@o kill register
o lots of KNF
o passes -Wall
o fix some [ug]id_t vs. int issues
o use strlcpy/strlcat in favor of strncpy/strncat
o use mem* routines everywhere instead of old b* ones
o marked several questionable things for later fixing
o kill ci.c and cvt.c -- we don't use them
o kill read_line.c since it requires fgetln() (bad for portability)
o kill salloc.c since it is the same as strup()
o Replaced some #ifdef __OpenBSD__ with better tests
o remaining problems: malloc return values are rarely checked, select misuse
@
text
@d1 1
a1 1
/*	$OpenBSD: path.c,v 1.4 1997/09/16 11:01:15 deraadt Exp $	*/
d67 4
a70 2
path(original, direc, file, filen)
	char *original, *direc, *file;
d104 1
a104 1
		strcpy(file, ".");
d108 1
a108 1
		strcpy(direc, ".");
d110 1
a110 1
		strcpy(direc, "/");
@


1.4
log
@strcpy whacking; ci.c and expand.c need more work
@
text
@d1 1
a1 1
/*	$OpenBSD: path.c,v 1.3 1997/04/01 07:35:13 todd Exp $	*/
d61 1
d67 3
a69 3
path (original,direc,file, filen)
char *original,*direc,*file;
int filen;
d71 1
a71 1
	register char *y;
d73 1
a73 1
	register char *p;
d78 2
a79 1
	while ((*y++ = *p++) != '\0') ;		/* copy string */
d81 2
a82 2
	--y;	/* y now points to null */
	--y;	/* y now points to last char of string before null */
d85 2
a86 1
	while (y>direc && *y == '/') --y;	/* backpedal past / */
d92 2
a93 1
	while (y>direc && *y != '/') --y;
d95 1
a95 1
	if (*y == '/') {
a96 1
	}
d99 4
a102 3
	if (*y)  strncpy (file,y, filen-1);
	else     strncpy (file,".", filen-1);
	file[filen-1] = '\0';
d105 4
a108 2
	if (direc == y)        strcpy (direc,".");
	else if (*direc == 0)  strcpy (direc,"/");
@


1.3
log
@This merges in the latest NetBSD sup source.
- removed $Log: ...$ tags to not waste space in the repository
- now doesn't segfault on the alpha!

Note:
To compile sup on systems other than *BSD, you'll need a copy of
vis.c, vis.h, daemon.c, and sys/cdefs.h.  At least the first two
(for OSF/1).

From NetBSD changelog description (for credit where due):
.... 1996/12/23 19:42:05  christos
- add missing prototypes.
- fix function call inconsistencies
- fix int <-> long and pointer conversions
It should run now on 64 bit machines...

....  1996/12/31 18:08:00  christos
64 bit patches (mostly long -> time_t) from Matthew Jacob (?)
sup now works on the alpha!
@
text
@d1 1
a1 1
/*	$OpenBSD: path.c,v 1.2 1996/06/26 05:39:44 deraadt Exp $	*/
d29 1
a29 1
 *  path (filename,direc,file);
d31 1
d34 1
a34 1
 *
d66 1
a66 1
path (original,direc,file)
d68 1
d96 3
a98 2
	if (*y)  strcpy (file,y);
	else     strcpy (file,".");
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d61 2
d64 1
d75 1
a75 1
	while (*y++ = *p++) ;		/* copy string */
@


1.1
log
@add sup to the tree
@
text
@d1 2
@
