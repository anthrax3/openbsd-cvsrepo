head	1.9;
access;
symbols
	OPENBSD_4_8:1.8.0.30
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.26
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.28
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.24
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.22
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.20
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.18
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.16
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.14
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.9
date	2010.10.18.20.54.00;	author deraadt;	state dead;
branches;
next	1.8;

1.8
date	2003.05.10.17.52.17;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.19.19.39.39;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.25.16.54.11;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.02.22.56.54;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.04.29.21.52.17;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.04.01.07.35.52;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.39.57;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.12.16.11.47.02;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@sup is no longer used. reminded by pirofti and jmc
@
text
@/*	$OpenBSD: sysent.h,v 1.8 2003/05/10 17:52:17 miod Exp $	*/

/*
 * Copyright (c) 1991 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator   or   Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the rights
 * to redistribute these changes.
 */
/*
 **********************************************************************
 * HISTORY
 * Revision 2.4  89/12/05  16:02:00  mrt
 * 	Removed include of sys/features.h as it is no longer
 * 	exported or needed.
 * 	[89/12/05            mrt]
 * 
 * Revision 2.3  89/01/20  15:44:24  gm0w
 * 	Added externs to the non-STDC case for functions that do not
 * 	have int return values.
 * 	[88/12/17            gm0w]
 * 
 * Revision 2.2  88/12/14  23:35:52  mja
 * 	Created.
 * 	[88/01/06            jjk]
 * 
 **********************************************************************
 */

#ifndef _SYSENT_H_
#define _SYSENT_H_ 1

#if 0
#include <sys/types.h>
#include <sys/time.h>
extern int access(const char *, int);
extern int acct(const char *);
extern int brk(void *);
extern int sbrk(int);
extern int chdir(const char *);
extern int chmod(const char *, int);
extern int fchmod(int, int);
extern int chown(const char *, int, int);
extern int fchown(int, int, int);
extern int chroot(const char *);
extern int close(int);
extern int creat(const char *, int);
extern int dup(int);
extern int dup2(int, int);
extern int execve(const char *, const char **, const char **);
extern void _exit(int);
extern int fcntl(int, int, int);
extern int flock(int, int);
extern int fork(void);
extern int fsync(int);
extern int getdtablesize(void);
extern gid_t getgid(void);
extern gid_t getegid(void);
extern int getgroups(int, int *);
extern long gethostid(void);
extern int sethostid(long);
extern int gethostname(char *, size_t);
extern int sethostname(const char *, int);
extern int getpagesize(void);
extern int getpgrp(int);
extern int getpid(void);
extern int getppid(void);
extern uid_t getuid(void);
extern uid_t geteuid(void);
extern int ioctl(int, unsigned long, void *);
extern int kill(int, int);
extern int killpg(int, int);
extern int link(const char *, const char *);
extern off_t lseek(int, off_t, int);
extern int mkdir(const char *, int);
extern int mknod(const char *, int, int);
extern int mount(const char *, const char *, int);
extern int umount(const char *);
extern int open(const char *, int, int);
extern int pipe(int *);
extern int profil(void *, int, int, int);
extern int ptrace(int, int, int *, int);
extern int quota(int, int, int, void *);
extern int read(int, void *, int);
extern int readlink(const char *, void *, int);
extern int reboot(int);
extern int rename(const char *, const char *);
extern int rmdir(const char *);
extern int select(int, fd_set *, fd_set *, fd_set *, struct timeval *);
extern int setgroups(int, int *);
extern int setpgrp(int, int);
extern int setquota(const char *, const char *);
extern int setregid(gid_t, gid_t);
extern int setreuid(uid_t, uid_t);
extern int symlink(const char *, const char *);
extern void sync(void);
extern int syscall(int, ...);
extern int truncate(const char *, off_t);
extern int ftruncate(int, off_t);
extern int umask(int);
extern int unlink(const char *);
extern void vhangup(void);
extern int write(int, void *, int);

#ifndef	_VICEIOCTL
#include <sys/viceioctl.h>
#endif	/* not _VICEIOCTL */
extern int icreate(int, int, int, int, int, int);
extern int iinc(int, int, long);
extern int idec(int, int, long);
extern int iopen(int, int, int);
extern int iread(int, int, int, int, void *, int);
extern int iwrite(int, int, int, int, void *, int);
extern int pioctl(const char *, unsigned long, struct ViceIoctl *, int);
extern int setpag(void);
#endif
#endif	/* not _SYSENT_H_ */
@


1.8
log
@Do not let userland access the swapon system call anymore (nothing uses it
anyway).
ok deraadt@@ weingart@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysent.h,v 1.7 2002/02/19 19:39:39 millert Exp $	*/
@


1.7
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysent.h,v 1.6 2001/07/25 16:54:11 deraadt Exp $	*/
a111 1
extern int swapon(const char *);
@


1.6
log
@do not use vfork() unsafely
@
text
@d1 1
a1 1
/*	$OpenBSD: sysent.h,v 1.5 2001/05/02 22:56:54 millert Exp $	*/
a49 1
#if defined(__STDC__)
a134 8
#else	/* defined(__STDC__) */
extern gid_t getgid();
extern gid_t getegid();
extern long gethostid();
extern uid_t getuid();
extern uid_t geteuid();
extern off_t lseek();
#endif	/* __STDC__ */
@


1.5
log
@Sync with NetBSD.  Notable changes:
 o Add libwrap support to supfilesrv, conditioned by #ifdef LIBWRAP
   (on by default). <bouyer@@netbsd.org>
 o Renamed '-l' (the 'live' mode) to '-d' and '-l' is now used to
   enable logging of successfull connections. <bouyer@@netbsd.org>
 o Don't botch varargs: the are not always an array of void * in the stack...
   Write a separate function to convert a list of function parameters to
   explain why execv failed. <christos@@netbsd.org>
 o When in compress mode, don't overwrite the destination file directly,
   write a temp file and use rename when it is done. (From James Mathiesen
   <james@@deshaw.com>)
 o Rename errno variable to error to avoid collision with errno.h and remove
   explicit extern of errno (we get it from errno.h) <mycroft@@netbsd.org>
 o Cleanup unsigned char vs. char
 o Add -u flag, that prevents sup from attempting to restore a and m times
   on the received files.
 o Replace the provided read_line function with calls to the fparseln function
   in libutil.  Maintain compatibility on machines without fparseln through
   the NEED_READ_LINE define.
 o Rename login() to suplogin() to avoid name collition in util.h
 o If rmdir() fails, chmod the path to have r/w/x perms and run "rm -rf"
 o avoid last.temp filename collision by using rel-suffix
 o When creating directories, make sure you remove previous non-directories
   before doing so, otherwise sup fails.
 o Add -q flag to supscan for quiet operation.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysent.h,v 1.4 2001/04/29 21:52:17 millert Exp $	*/
a120 1
extern int vfork(void);
@


1.4
log
@Add a bunch of old revision history comments that we are missing to
make diffing easier.  No code changes...
@
text
@d1 1
a1 1
/*	$OpenBSD: sysent.h,v 1.3 1997/04/01 07:35:52 todd Exp $	*/
d80 1
a80 1
extern int gethostname(char *, int);
d137 1
a137 1
#else defined(__STDC__)
@


1.3
log
@This merges in the latest NetBSD sup source.
- removed $Log: ...$ tags to not waste space in the repository
- now doesn't segfault on the alpha!

Note:
To compile sup on systems other than *BSD, you'll need a copy of
vis.c, vis.h, daemon.c, and sys/cdefs.h.  At least the first two
(for OSF/1).

From NetBSD changelog description (for credit where due):
.... 1996/12/23 19:42:05  christos
- add missing prototypes.
- fix function call inconsistencies
- fix int <-> long and pointer conversions
It should run now on 64 bit machines...

....  1996/12/31 18:08:00  christos
64 bit patches (mostly long -> time_t) from Matthew Jacob (?)
sup now works on the alpha!
@
text
@d1 1
a1 1
/*	$OpenBSD: sysent.h,v 1.2 1996/06/26 05:39:57 deraadt Exp $	*/
d28 16
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a27 23
 **********************************************************************
 * HISTORY
 * $Log: sysent.h,v $
 * Revision 1.1  1995/12/16 11:47:02  deraadt
 * add sup to the tree
 *
 * Revision 1.1.1.1  1993/05/21 14:52:19  cgd
 * initial import of CMU's SUP to NetBSD
 *
 * Revision 2.4  89/12/05  16:02:00  mrt
 * 	Removed include of sys/features.h as it is no longer
 * 	exported or needed.
 * 	[89/12/05            mrt]
 * 
 * Revision 2.3  89/01/20  15:44:24  gm0w
 * 	Added externs to the non-STDC case for functions that do not
 * 	have int return values.
 * 	[88/12/17            gm0w]
 * 
 * Revision 2.2  88/12/14  23:35:52  mja
 * 	Created.
 * 	[88/01/06            jjk]
 * 
@


1.1
log
@add sup to the tree
@
text
@d1 2
d31 3
@
