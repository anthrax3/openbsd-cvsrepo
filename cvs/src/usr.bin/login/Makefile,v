head	1.21;
access;
symbols
	OPENBSD_6_2:1.21.0.58
	OPENBSD_6_2_BASE:1.21
	OPENBSD_6_1:1.21.0.60
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.56
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.52
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.54
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.46
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.21.0.50
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.48
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.21.0.44
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.21.0.42
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.40
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.38
	OPENBSD_5_0:1.21.0.36
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.21.0.34
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.21.0.32
	OPENBSD_4_8_BASE:1.21
	OPENBSD_4_7:1.21.0.28
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.21.0.30
	OPENBSD_4_6_BASE:1.21
	OPENBSD_4_5:1.21.0.26
	OPENBSD_4_5_BASE:1.21
	OPENBSD_4_4:1.21.0.24
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.21.0.22
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.21.0.20
	OPENBSD_4_2_BASE:1.21
	OPENBSD_4_1:1.21.0.18
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.16
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.21.0.14
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.21.0.12
	OPENBSD_3_8_BASE:1.21
	OPENBSD_3_7:1.21.0.10
	OPENBSD_3_7_BASE:1.21
	OPENBSD_3_6:1.21.0.8
	OPENBSD_3_6_BASE:1.21
	OPENBSD_3_5:1.21.0.6
	OPENBSD_3_5_BASE:1.21
	OPENBSD_3_4:1.21.0.4
	OPENBSD_3_4_BASE:1.21
	OPENBSD_3_3:1.21.0.2
	OPENBSD_3_3_BASE:1.21
	OPENBSD_3_2:1.20.0.6
	OPENBSD_3_2_BASE:1.20
	OPENBSD_3_1:1.20.0.4
	OPENBSD_3_1_BASE:1.20
	OPENBSD_3_0:1.20.0.2
	OPENBSD_3_0_BASE:1.20
	OPENBSD_2_9_BASE:1.15
	OPENBSD_2_9:1.15.0.4
	OPENBSD_2_8:1.15.0.2
	OPENBSD_2_8_BASE:1.15
	OPENBSD_2_7:1.14.0.2
	OPENBSD_2_7_BASE:1.14
	OPENBSD_2_6:1.13.0.8
	OPENBSD_2_6_BASE:1.13
	OPENBSD_2_5:1.13.0.6
	OPENBSD_2_5_BASE:1.13
	OPENBSD_2_4:1.13.0.4
	OPENBSD_2_4_BASE:1.13
	OPENBSD_2_3:1.13.0.2
	OPENBSD_2_3_BASE:1.13
	OPENBSD_2_2:1.10.0.2
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.9.0.2
	OPENBSD_2_1_BASE:1.9
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.21
date	2002.10.16.01.08.56;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2001.06.25.05.51.25;	author art;	state Exp;
branches;
next	1.19;

1.19
date	2001.06.13.20.37.24;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2001.05.29.22.18.57;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2001.05.29.21.39.26;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2001.05.25.12.17.55;	author hin;	state Exp;
branches;
next	1.15;

1.15
date	2000.09.03.18.41.18;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2000.03.01.18.33.56;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	98.03.26.23.47.29;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	98.03.26.20.38.08;	author art;	state Exp;
branches;
next	1.11;

1.11
date	98.03.26.20.28.04;	author art;	state Exp;
branches;
next	1.10;

1.10
date	97.09.21.11.49.39;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	97.04.19.21.26.26;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.03.26.00.35.29;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.11.09.20.17.14;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	96.07.31.17.44.23;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.07.31.12.21.42;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.06.26.05.35.59;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.02.15.05.02.24;	author etheisen;	state Exp;
branches;
next	1.2;

1.2
date	95.12.16.22.20.27;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.34;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.34;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Remove the setuid bit from /usr/bin/login.  If login is run by a user
with a non-zero euid, it will now exec "su -L -l".  The only things
that need to do this are shells with a "login" builtin and the emulation
that su(1) now does is good enough for this purpose.
@
text
@#	$OpenBSD: Makefile,v 1.20 2001/06/25 05:51:25 art Exp $

PROG=	login
SRCS=	login.c failedlogin.c
DPADD=	${LIBUTIL}
LDADD=	-lutil

.include <bsd.prog.mk>
@


1.20
log
@The need to to statically link this on alpha seemed to be
some kind of transient problem.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2001/06/13 20:37:24 millert Exp $
a6 3

BINOWN=	root
BINMODE=4555
@


1.19
log
@Link login(1) static for now until a dynamic linking bug is fixed.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2001/05/29 22:18:57 millert Exp $
a6 4

.if (${MACHINE_ARCH} == "alpha")
LDSTATIC=	${STATIC}
.endif
@


1.18
log
@Don't want -Wall
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2001/05/29 21:39:26 millert Exp $
d7 4
@


1.17
log
@BSD auth support.  k5login.c and klogin.c are no longer used but will
remain for the time being until Kerberos support is up to snuff.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2001/05/25 12:17:55 hin Exp $
a6 1
CFLAGS+= -Wall -Wno-unused
@


1.16
log
@Correct and comment out krb5. This is not working at the moment, but we want
to use bsd_auth instead.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2000/09/03 18:41:18 espie Exp $
d5 1
a6 1
DPADD=	${LIBUTIL}
a8 22
.include <bsd.own.mk>	# For SKEY, KERBEROS and KERBEROS5

.if (${SKEY:L} == "yes")
CFLAGS+=-DSKEY
LDADD+=	-lskey
DPADD+=	${LIBSKEY}
.endif

#.if (${KERBEROS5:L} == "yes")
#CFLAGS+= -DKERBEROS5
#SRCS+=	k5login.c
#LDADD+=	-lkrb5 -lcrypto
#DPADD+=	${LIBKRB5} ${LIBCRYPTO}
#.endif

.if (${KERBEROS:L} == "yes")
CFLAGS+= -DKERBEROS
SRCS+=	klogin.c
LDADD+=	-lkafs -lkrb -ldes
DPADD+=	${LIBKRB} ${LIBDES} ${LIBKAFS}
.endif

a10 1
INSTALLFLAGS=-fschg
@


1.15
log
@Boring...  Add :L modifier to all tweakable variables tests.

Closes PR 1246
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2000/03/01 18:33:56 deraadt Exp $
d17 8
a24 6
.if (${KERBEROS5:L} == "yes")
CFLAGS+= -DKERBEROS5
SRCS+=	k5login.c
LDADD+=	-lkrb5 -lcrypto
DPADD+=	${LIBKRB5} ${LIBCRYPTO}
.elif (${KERBEROS:L} == "yes")
@


1.14
log
@order kerberos libraries properly
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 1998/03/26 23:47:29 deraadt Exp $
d11 1
a11 1
.if (${SKEY} == "yes")
d17 1
a17 1
.if (${KERBEROS5} == "yes")
d22 1
a22 1
.elif (${KERBEROS} == "yes")
@


1.13
log
@cleanup after art
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1998/03/26 20:38:08 art Exp $
d25 1
a25 1
LDADD+=	-lkrb -ldes -lkafs
@


1.12
log
@-Wall for suid-root.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 1998/03/26 20:28:04 art Exp $
d26 1
a26 1
DPADD+=	${LIBKRB} ${LIBDES}
@


1.11
log
@fix cleaning up of bad environment variables (LD_* and IFS),
-Wall cleanup and add ability to fetch AFS-tokens for those who
happen to have AFS.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 1997/09/21 11:49:39 deraadt Exp $
d7 1
@


1.10
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 1997/04/19 21:26:26 millert Exp $
d24 1
a24 1
LDADD+=	-lkrb -ldes
@


1.9
log
@Changed ``defined(KERBEROS)'' to ``(${KERBEROS} == "yes")''
Same change doen for SKEY, YP, and KERBEROS5.  This allows
people to override those setting in /etc/mk.conf.
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile,v 1.8 1997/03/26 00:35:29 deraadt Exp $
#	$NetBSD: Makefile,v 1.10 1994/12/23 06:52:56 jtc Exp $
@


1.8
log
@no libcrypt, fix DPADD
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1996/11/09 20:17:14 millert Exp $
d11 1
a11 1
.if defined(SKEY)
d17 1
a17 1
.if defined(KERBEROS5)
d22 1
a22 1
.elif defined(KERBEROS)
@


1.7
log
@Adds support for logging and reporting on failed login attempts
via sparse file /var/log/failedlogin.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1996/07/31 17:44:23 deraadt Exp $
a5 1
#LDADD=	-lutil -lcrypt
a6 1
#DPADD=	${LIBUTIL} ${LIBCRYPT}
@


1.6
log
@login_fbtab() in libutil
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1996/07/31 12:21:42 deraadt Exp $
d5 1
a5 1
SRCS=	login.c
@


1.5
log
@fbtab support from wietse
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1996/06/26 05:35:59 deraadt Exp $
d5 1
a5 1
SRCS=	login.c login_fbtab.c
@


1.4
log
@rcsid
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 1994/12/23 06:52:56 jtc Exp $
d5 1
a5 1
SRCS=	login.c
@


1.3
log
@libcrypt no longer a link dependancy.
@
text
@d1 1
a2 2
#	from: @@(#)Makefile	8.1 (Berkeley) 7/19/93
#	$Id$
@


1.2
log
@Make it possible to build without SKEY support
Add support for building with kerberosIV
@
text
@d2 2
a3 1
#	@@(#)Makefile	8.1 (Berkeley) 7/19/93
d7 4
a10 2
LDADD=	-lutil -lcrypt
DPADD=	${LIBUTIL} ${LIBCRYPT}
@


1.1
log
@Initial revision
@
text
@d6 10
a15 3
DPADD=	${LIBUTIL} ${LIBCRYPT} ${LIBSKEY}
LDADD=	-lutil -lcrypt -lskey
CFLAGS+= -DSKEY
d18 1
d20 1
a21 2
LDADD+=	-lkrb5 -lcrypto
CFLAGS+= -DKERBEROS5
d23 1
d25 1
a26 2
LDADD+=	-lkrb -ldes
CFLAGS+= -DKERBEROS
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
