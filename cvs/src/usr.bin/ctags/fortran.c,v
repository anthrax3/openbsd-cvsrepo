head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.16
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.12
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.8
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.10
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.6
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.8.0.6
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.4
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.2
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2013.11.26.13.18.55;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2012.03.04.04.05.15;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2009.10.27.23.59.37;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.12.20.58.09;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.03.02.56.07;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.45;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.07.25.19.28.30;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.32.29;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.04;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.04;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@unsigned char casts for ctype
ok krw
@
text
@/*	$OpenBSD: fortran.c,v 1.8 2012/03/04 04:05:15 fgsch Exp $	*/
/*	$NetBSD: fortran.c,v 1.3 1995/03/26 20:14:08 glass Exp $	*/

/*
 * Copyright (c) 1987, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <ctype.h>
#include <limits.h>
#include <stdio.h>
#include <string.h>

#include "ctags.h"

static void takeprec(void);

char *lbp;				/* line buffer pointer */

int
PF_funcs(void)
{
	bool	pfcnt;			/* pascal/fortran functions found */
	char	*cp;
	char	tok[MAXTOKEN];

	for (pfcnt = NO;;) {
		lineftell = ftell(inf);
		if (!fgets(lbuf, sizeof(lbuf), inf))
			return (pfcnt);
		++lineno;
		lbp = lbuf;
		if (*lbp == '%')	/* Ratfor escape to fortran */
			++lbp;
		for (; isspace((unsigned char)*lbp); ++lbp)
			continue;
		if (!*lbp)
			continue;
		switch (*lbp | ' ') {	/* convert to lower-case */
		case 'c':
			if (cicmp("complex") || cicmp("character"))
				takeprec();
			break;
		case 'd':
			if (cicmp("double")) {
				for (; isspace((unsigned char)*lbp); ++lbp)
					continue;
				if (!*lbp)
					continue;
				if (cicmp("precision"))
					break;
				continue;
			}
			break;
		case 'i':
			if (cicmp("integer"))
				takeprec();
			break;
		case 'l':
			if (cicmp("logical"))
				takeprec();
			break;
		case 'r':
			if (cicmp("real"))
				takeprec();
			break;
		}
		for (; isspace((unsigned char)*lbp); ++lbp)
			continue;
		if (!*lbp)
			continue;
		switch (*lbp | ' ') {
		case 'f':
			if (cicmp("function"))
				break;
			continue;
		case 'p':
			if (cicmp("program") || cicmp("procedure"))
				break;
			continue;
		case 's':
			if (cicmp("subroutine"))
				break;
		default:
			continue;
		}
		for (; isspace((unsigned char)*lbp); ++lbp)
			continue;
		if (!*lbp)
			continue;
		for (cp = lbp + 1; *cp && intoken(*cp); ++cp)
			continue;
		if ((cp = lbp + 1))
			continue;
		*cp = EOS;
		(void)strlcpy(tok, lbp, sizeof tok);	/* possible trunc */
		get_line();			/* process line for ex(1) */
		pfnote(tok, lineno);
		pfcnt = YES;
	}
	/*NOTREACHED*/
}

/*
 * cicmp --
 *	do case-independent strcmp
 */
int
cicmp(char *cp)
{
	int	len;
	char	*bp;

	for (len = 0, bp = lbp; *cp && (*cp &~ ' ') == (*bp++ &~ ' ');
	    ++cp, ++len)
		continue;
	if (!*cp) {
		lbp += len;
		return (YES);
	}
	return (NO);
}

static void
takeprec(void)
{
	for (; isspace((unsigned char)*lbp); ++lbp)
		continue;
	if (*lbp == '*') {
		for (++lbp; isspace((unsigned char)*lbp); ++lbp)
			continue;
		if (!isdigit((unsigned char)*lbp))
			--lbp;			/* force failure */
		else
			while (isdigit((unsigned char)*++lbp))
				continue;
	}
}
@


1.8
log
@In preparation for getline and getdelim additions to libc, rename getline()
occurrences to get_line().
Based on a diff from Jan Klemkow <j-dot-klemkow-at-wemelug-dot-de> to tech.
@
text
@d1 1
a1 1
/*	$OpenBSD: fortran.c,v 1.7 2009/10/27 23:59:37 deraadt Exp $	*/
d59 1
a59 1
		for (; isspace(*lbp); ++lbp)
d70 1
a70 1
				for (; isspace(*lbp); ++lbp)
d92 1
a92 1
		for (; isspace(*lbp); ++lbp)
d111 1
a111 1
		for (; isspace(*lbp); ++lbp)
d151 1
a151 1
	for (; isspace(*lbp); ++lbp)
d154 1
a154 1
		for (++lbp; isspace(*lbp); ++lbp)
d156 1
a156 1
		if (!isdigit(*lbp))
d159 1
a159 1
			while (isdigit(*++lbp))
@


1.7
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: fortran.c,v 1.6 2003/06/12 20:58:09 deraadt Exp $	*/
d121 1
a121 1
		getline();			/* process line for ex(1) */
@


1.6
log
@de-register and ansification; millert ok
@
text
@d1 1
a1 1
/*	$OpenBSD: fortran.c,v 1.5 2003/06/03 02:56:07 millert Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)fortran.c	8.3 (Berkeley) 4/2/94";
#else
static char rcsid[] = "$OpenBSD: fortran.c,v 1.5 2003/06/03 02:56:07 millert Exp $";
#endif
#endif /* not lint */
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: fortran.c,v 1.4 2002/02/16 21:27:45 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: fortran.c,v 1.4 2002/02/16 21:27:45 millert Exp $";
d53 1
a53 1
PF_funcs()
d141 1
a141 2
cicmp(cp)
	char	*cp;
d157 1
a157 1
takeprec()
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: fortran.c,v 1.3 2000/07/25 19:28:30 deraadt Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: fortran.c,v 1.3 2000/07/25 19:28:30 deraadt Exp $";
@


1.3
log
@deal with a number of overflows pointed out by fuzz; in most cases, we truncate the symbol in question
@
text
@d1 1
a1 1
/*	$OpenBSD: fortran.c,v 1.2 1996/06/26 05:32:29 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: fortran.c,v 1.2 1996/06/26 05:32:29 deraadt Exp $";
d52 1
a52 1
static void takeprec __P((void));
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: fortran.c,v 1.3 1995/03/26 20:14:08 glass Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: fortran.c,v 1.3 1995/03/26 20:14:08 glass Exp $";
d129 1
a129 1
		if (cp = lbp + 1)
d132 1
a132 1
		(void)strcpy(tok, lbp);
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: fortran.c,v 1.3 1995/03/26 20:14:08 glass Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
