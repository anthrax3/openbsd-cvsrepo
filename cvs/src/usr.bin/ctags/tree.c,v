head	1.13;
access;
symbols
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.4
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.10.0.26
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.18
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.22
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.20
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.18
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.14
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.12
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.10
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.8
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.6
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.4
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.7.0.4
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2015.09.29.03.19.24;	author guenther;	state Exp;
branches;
next	1.12;
commitid	yKdJafwKaYfM4gkS;

1.12
date	2015.08.22.04.23.07;	author semarie;	state Exp;
branches;
next	1.11;
commitid	nKkX9hiLkqgWZnkH;

1.11
date	2015.08.20.22.32.41;	author deraadt;	state Exp;
branches;
next	1.10;
commitid	0Dp7Dy9FuNZesYo2;

1.10
date	2009.10.27.23.59.37;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.11.18.52.14;	author otto;	state Exp;
branches;
next	1.8;

1.8
date	2005.04.18.13.21.03;	author pat;	state Exp;
branches;
next	1.7;

1.7
date	2004.06.02.14.58.46;	author tom;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.12.20.58.09;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.03.02.56.07;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.45;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.07.25.19.28.30;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.32.31;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.04;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.04;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Delete the final, inscrutable NOSTRICT and VARARGS lint comments

ok millert@@
@
text
@/*	$OpenBSD: tree.c,v 1.12 2015/08/22 04:23:07 semarie Exp $	*/
/*	$NetBSD: tree.c,v 1.4 1995/03/26 20:14:11 glass Exp $	*/

/*
 * Copyright (c) 1987, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <err.h>
#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/dirent.h>

#include "ctags.h"

bool	in_preload = NO;

static void	add_node(NODE *, NODE *);
static void	free_tree(NODE *);

/*
 * pfnote --
 *	enter a new node in the tree
 */
void
pfnote(char *name, int ln)
{
	NODE	*np;
	char	*fp;
	char	nbuf[1+MAXNAMLEN+1];

	if (!(np = malloc(sizeof(NODE)))) {
		warnx("too many entries to sort");
		put_entries(head);
		free_tree(head);
		if (!(head = np = malloc(sizeof(NODE))))
			err(1, NULL);
	}
	if (!xflag && !strcmp(name, "main")) {
		if (!(fp = strrchr(curfile, '/')))
			fp = curfile;
		else
			++fp;
		(void)snprintf(nbuf, sizeof nbuf, "M%s", fp);
		fp = strrchr(nbuf, '.');
		if (fp && !fp[2])
			*fp = EOS;
		name = nbuf;
	}
	if (!(np->entry = strdup(name)))
		err(1, NULL);
	np->file = curfile;
	np->lno = ln;
	np->left = np->right = 0;
	np->been_warned = NO;
	np->dynfile = in_preload;
	if (!(np->pat = strdup(lbuf)))
		err(1, NULL);
	if (!head)
		head = np;
	else
		add_node(np, head);
}

static void
add_node(NODE *node, NODE *cur_node)
{
	int	dif;

	dif = strcmp(node->entry, cur_node->entry);
	if (!dif) {
		if (node->file == cur_node->file) {
			if (!wflag)
				fprintf(stderr, "Duplicate entry in file %s, "
				    "line %d: %s\nSecond entry ignored\n",
				    node->file, lineno, node->entry);
			return;
		}
		if (!cur_node->been_warned)
			if (!wflag)
				fprintf(stderr, "Duplicate entry in files %s "
				    "and %s: %s (Warning only)\n",
				    node->file, cur_node->file, node->entry);
		cur_node->been_warned = YES;
	}
	else if (dif < 0)
		if (cur_node->left)
			add_node(node, cur_node->left);
		else
			cur_node->left = node;
	else if (cur_node->right)
		add_node(node, cur_node->right);
	else
		cur_node->right = node;
}

static void
free_tree(NODE *node)
{
	if (node) {
		free_tree(node->left);
		free_tree(node->right);

		free(node->entry);
		free(node->pat);
		if (node->dynfile == YES)
			free(node->file);
		free(node);
	}
}
@


1.12
log
@system(3) call remove for updating (ctags -u)

done by changing the logic behind updating, by parsing and preloading the tags
file at startup.

"looks good" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tree.c,v 1.11 2015/08/20 22:32:41 deraadt Exp $	*/
a57 1
	/*NOSTRICT*/
a61 1
		/*NOSTRICT*/
@


1.11
log
@Do not cast result of malloc/calloc/realloc* if stdlib.h is in scope
ok krw millert
@
text
@d1 1
a1 1
/*	$OpenBSD: tree.c,v 1.10 2009/10/27 23:59:37 deraadt Exp $	*/
d42 2
d84 1
d134 2
@


1.10
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: tree.c,v 1.9 2006/02/11 18:52:14 otto Exp $	*/
d57 1
a57 1
	if (!(np = (NODE *)malloc(sizeof(NODE)))) {
d62 1
a62 1
		if (!(head = np = (NODE *)malloc(sizeof(NODE))))
@


1.9
log
@Initialize been_warned. From Benjamin Pineau in PR 5007.
@
text
@d1 1
a1 1
/*	$OpenBSD: tree.c,v 1.8 2005/04/18 13:21:03 pat Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)tree.c	8.3 (Berkeley) 4/2/94";
#else
static char rcsid[] = "$OpenBSD: tree.c,v 1.8 2005/04/18 13:21:03 pat Exp $";
#endif
#endif /* not lint */
@


1.8
log
@fix a potential use after free and plug some memory leaks.
While here, do a bit a formatting.

ok otto deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: tree.c,v 1.7 2004/06/02 14:58:46 tom Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: tree.c,v 1.7 2004/06/02 14:58:46 tom Exp $";
d89 1
@


1.7
log
@Don't want text in err() call following malloc failures.

ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tree.c,v 1.6 2003/06/12 20:58:09 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: tree.c,v 1.6 2003/06/12 20:58:09 deraadt Exp $";
d106 3
a108 1
				fprintf(stderr, "Duplicate entry in file %s, line %d: %s\nSecond entry ignored\n", node->file, lineno, node->entry);
d113 3
a115 1
				fprintf(stderr, "Duplicate entry in files %s and %s: %s (Warning only)\n", node->file, cur_node->file, node->entry);
d132 6
a137 3
	while (node) {
		if (node->right)
			free_tree(node->right);
a138 1
		node = node->left;
@


1.6
log
@de-register and ansification; millert ok
@
text
@d1 1
a1 1
/*	$OpenBSD: tree.c,v 1.5 2003/06/03 02:56:07 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: tree.c,v 1.5 2003/06/03 02:56:07 millert Exp $";
d71 1
a71 1
			err(1, "out of space");
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: tree.c,v 1.4 2002/02/16 21:27:45 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: tree.c,v 1.4 2002/02/16 21:27:45 millert Exp $";
d58 1
a58 3
pfnote(name, ln)
	char	*name;
	int	ln;
d98 1
a98 3
add_node(node, cur_node)
	NODE	*node,
		*cur_node;
d126 1
a126 2
free_tree(node)
	NODE	*node;
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: tree.c,v 1.3 2000/07/25 19:28:30 deraadt Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: tree.c,v 1.3 2000/07/25 19:28:30 deraadt Exp $";
@


1.3
log
@deal with a number of overflows pointed out by fuzz; in most cases, we truncate the symbol in question
@
text
@d1 1
a1 1
/*	$OpenBSD: tree.c,v 1.2 1996/06/26 05:32:31 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: tree.c,v 1.2 1996/06/26 05:32:31 deraadt Exp $";
d54 2
a55 2
static void	add_node __P((NODE *, NODE *));
static void	free_tree __P((NODE *));
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: tree.c,v 1.4 1995/03/26 20:14:11 glass Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: tree.c,v 1.4 1995/03/26 20:14:11 glass Exp $";
d50 1
d68 1
a68 1
	char	nbuf[MAXTOKEN];
d84 1
a84 1
		(void)sprintf(nbuf, "M%s", fp);
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: tree.c,v 1.4 1995/03/26 20:14:11 glass Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
