head	1.33;
access;
symbols
	OPENBSD_6_1:1.33.0.6
	OPENBSD_6_1_BASE:1.33
	OPENBSD_6_0:1.33.0.4
	OPENBSD_6_0_BASE:1.33
	OPENBSD_5_9:1.33.0.2
	OPENBSD_5_9_BASE:1.33
	OPENBSD_5_8:1.28.0.4
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.27.0.2
	OPENBSD_5_7_BASE:1.27
	OPENBSD_5_6:1.27.0.6
	OPENBSD_5_6_BASE:1.27
	OPENBSD_5_5:1.27.0.4
	OPENBSD_5_5_BASE:1.27
	OPENBSD_5_4:1.26.0.8
	OPENBSD_5_4_BASE:1.26
	OPENBSD_5_3:1.26.0.6
	OPENBSD_5_3_BASE:1.26
	OPENBSD_5_2:1.26.0.4
	OPENBSD_5_2_BASE:1.26
	OPENBSD_5_1_BASE:1.26
	OPENBSD_5_1:1.26.0.2
	OPENBSD_5_0:1.25.0.2
	OPENBSD_5_0_BASE:1.25
	OPENBSD_4_9:1.24.0.2
	OPENBSD_4_9_BASE:1.24
	OPENBSD_4_8:1.19.0.2
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.18.0.4
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.18.0.6
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.2
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.16.0.6
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.4
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.2
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.13.0.16
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.14
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.12
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.10
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.8
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.6
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.11.0.6
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.4
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.10.0.4
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_8:1.9.0.4
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.33
date	2015.12.31.14.01.26;	author lum;	state Exp;
branches;
next	1.32;
commitid	jDgwzzIvhb3v2wzm;

1.32
date	2015.10.25.15.38.19;	author zhuk;	state Exp;
branches;
next	1.31;
commitid	h5sypWQ1eUvWB1fQ;

1.31
date	2015.10.15.23.46.20;	author schwarze;	state Exp;
branches;
next	1.30;
commitid	vsYsJdTdjVf06tum;

1.30
date	2015.08.22.06.46.00;	author jmc;	state Exp;
branches;
next	1.29;
commitid	zNtW8m2WlKKcefuk;

1.29
date	2015.08.22.04.23.07;	author semarie;	state Exp;
branches;
next	1.28;
commitid	nKkX9hiLkqgWZnkH;

1.28
date	2015.03.13.19.58.41;	author jmc;	state Exp;
branches;
next	1.27;
commitid	OcwhWBKGs3Yn7EeA;

1.27
date	2014.02.01.23.36.30;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2012.01.15.20.06.40;	author schwarze;	state Exp;
branches;
next	1.25;

1.25
date	2011.05.02.11.14.11;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2010.11.04.14.32.28;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2010.11.03.19.39.38;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	2010.10.19.16.54.15;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2010.10.01.07.06.16;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2010.09.29.07.44.56;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2010.07.15.20.51.38;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2009.02.10.19.24.17;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2009.02.08.17.15.09;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2007.05.31.19.20.09;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.30.04.41.33;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2007.03.15.22.41.17;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.10.09.12.10;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.03.02.56.07;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.13.08.33.47;	author mpech;	state Exp;
branches;
next	1.10;

1.10
date	2000.11.10.05.10.23;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.03.05.20.09.21;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.03.04.22.19.22;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.07.21.01.25.43;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	99.07.04.11.53.52;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.06.05.01.21.22;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.02.27.17.01.27;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	98.09.23.04.32.38;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.32.27;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.04;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.04;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.33
log
@add mg to SEE ALSO. ok jmc@@
@
text
@.\"	$OpenBSD: ctags.1,v 1.32 2015/10/25 15:38:19 zhuk Exp $
.\"	$NetBSD: ctags.1,v 1.4 1995/03/26 20:14:04 glass Exp $
.\"
.\" Copyright (c) 1987, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)ctags.1	8.1 (Berkeley) 6/6/93
.\"
.Dd $Mdocdate: October 25 2015 $
.Dt CTAGS 1
.Os
.Sh NAME
.Nm ctags
.Nd create a tags file
.Sh SYNOPSIS
.Nm ctags
.Op Fl aBdFuvwx
.Op Fl f Ar tagsfile
.Ar
.Sh DESCRIPTION
.Nm
makes a tags file from the specified C, Pascal, Fortran,
YACC, lex, and Lisp sources.
A tags file gives the locations of specified objects in a group of files.
Each line of the tags file contains the object name, the file in which it
is defined, and a search pattern for the object definition, separated by
whitespace.
.Pp
Using the
.Ar tags
file,
a text editor such as
.Xr ex 1
or
.Xr vi 1
can quickly locate these object definitions.
Indexed objects include subroutines, typedefs, defines, structs,
enums, and unions.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl a
Append to
.Ar tags
file.
.It Fl B
Use backward searching patterns
.Pq Li ?...? .
.It Fl d
Create tags for
.Li #defines
that don't take arguments;
.Li #defines
that take arguments are tagged automatically.
.It Fl F
Use forward searching patterns
.Pq Li /.../
(the default).
.It Fl f Ar tagsfile
Places the tag descriptions in a file called
.Ar tagsfile .
The default behaviour is to place them in a file called
.Ar tags .
.It Fl u
Update the specified files in the
.Ar tags
file; that is, all
references to them are regenerated, keeping only the other values in the
file.
.It Fl v
An index of the form expected by vgrind
is produced on the standard output.
This listing contains the object name, file name, and page number (assuming
64 line pages).
Since the output will be sorted into lexicographic order,
it may be desired to run the output through
.Xr sort 1 .
Sample use:
.Bd -literal -offset indent
$ ctags -v files | sort -f > index
$ vgrind -x index
.Ed
.It Fl w
Suppress warning diagnostics.
.It Fl x
.Nm
produces a list of object
names, the line number and file name on which each is defined, as well
as the text of that line and prints this on the standard output.
This is a simple index which can be printed out as an off-line readable
function index.
.El
.Pp
Files whose names end in
.Dq \&.c
or
.Dq \&.h
are assumed to be C
source files and are searched for C style routine and macro definitions.
Files whose names end in
.Dq \&.y
are assumed to be
.Xr yacc 1
source files.
Files whose names end in
.Dq \&.l
are assumed to be Lisp files if their
first non-blank character is
.Ql \&; ,
.Ql \&( ,
or
.Ql \&[ ,
otherwise, they are
treated as lex files.
Other files are first examined to see if they
contain any Pascal or Fortran routine definitions and, if not, are
searched for C style definitions.
.Pp
The tag
.Li main
is treated specially in C programs.
The tag formed is created by prepending
.Sq M
to the name of the file, with the
trailing
.Dq \&.c
and any leading pathname components removed.
This makes use of
.Nm
practical in directories with more than one program.
.Pp
Yacc and lex files each have a special tag.
.Ar yyparse
is the start
of the second section of the yacc file, and
.Ar yylex
is the start of
the second section of the lex file.
.Sh FILES
.Bl -tag -width tags -compact
.It Pa tags
default output tags file
.El
.Sh EXIT STATUS
.Ex -std ctags
.Pp
Duplicate objects are not considered errors.
.Sh SEE ALSO
.Xr mg 1 ,
.Xr vi 1
.Sh STANDARDS
The
.Nm
utility is compliant with the
.St -p1003.1-2008
specification,
though its presence is optional.
.Pp
The flags
.Op Fl BdFuvw
are extensions to that specification.
.Pp
Support for Pascal, YACC, lex, and Lisp source files
is an
.St -p1003.1-2008
extension.
The standard notes that
.Nm
is
.Qo
not required to accommodate these languages,
although implementors are encouraged to do so
.Qc .
.Sh HISTORY
The
.Nm
command appeared in
.Bx 2 .
.Sh BUGS
Recognition of functions, subroutines, and procedures for FORTRAN
and Pascal is done in a very simple-minded way.
No attempt
is made to deal with block structure; if you have two Pascal procedures
in different blocks with the same name you lose.
.Nm
doesn't
understand about Pascal types.
.Pp
The method of deciding whether to look for C, Pascal or FORTRAN
functions is a hack.
.Pp
.Nm
relies on the input being well formed, and any syntactical
errors will completely confuse it.
It also finds some legal syntax confusing; for example,
since it doesn't understand
.Li #ifdef Ns 's
(incidentally, that's a feature, not a bug), any code with unbalanced
braces inside
.Li #ifdef Ns 's
will cause it to become somewhat disoriented.
In a similar fashion, multiple line changes within a definition will
cause it to enter the last line of the object, rather than the first, as
the searching pattern.
The last line of multiple line
.Li typedef Ns 's
will similarly be noted.
@


1.32
log
@Decapitalize yyparse tag name here.

okay jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.31 2015/10/15 23:46:20 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: October 15 2015 $
d173 1
@


1.31
log
@Do not abuse .Nm for emphasis;
patch from Michael Reed <m dot reed at mykolab dot com>.
Also drop .Tn while here.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.30 2015/08/22 06:46:00 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: August 22 2015 $
d157 1
a157 1
.Ar Yyparse
@


1.30
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.29 2015/08/22 04:23:07 semarie Exp $
d127 1
a127 1
.Tn YACC
d203 1
a203 7
Recognition of
.Nm functions ,
.Nm subroutines ,
and
.Nm procedures
for
.Tn FORTRAN
d212 1
a212 2
The method of deciding whether to look for C, Pascal or
.Tn FORTRAN
@


1.29
log
@system(3) call remove for updating (ctags -u)

done by changing the logic behind updating, by parsing and preloading the tags
file at startup.

"looks good" deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.28 2015/03/13 19:58:41 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: March 13 2015 $
d91 2
a92 2
file, that is, all
references to them are regenerated, keeping only the others values in the
@


1.28
log
@remove the first comma from constructs like ", and," and ", or,": you can use
"and" and "or" to join sentence clauses, and you can use commas, but both hinders
reading;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.27 2014/02/01 23:36:30 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: February 1 2014 $
d92 1
a92 1
references to them are deleted, and the new values are appended to the
a93 4
(Beware: this option is implemented in a way which is rather
slow; it is usually faster to simply rebuild the
.Ar tags
file.)
@


1.27
log
@note which languages are extensions; ok millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.26 2012/01/15 20:06:40 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: January 15 2012 $
d144 1
a144 1
contain any Pascal or Fortran routine definitions, and, if not, are
@


1.26
log
@Document what remains of the 2BSD heritage.
All facts found on the CSRG CD 1 in the 2bsd directory.
Feedback and ok jmc@@, ok sobrado@@.

Note the large number of 3BSD -> 2BSD changes.
Kirk McKusick asked Cynthia Livingston (cael@@, of USENIX, who converted
most manuals from man(7) to mdoc(7) for the 4.3BSD-Net/2 release and
added lots of historical information around that time) what happened
in this respect, and she answered that she often wrote "appeared
in 3BSD" when she was unsure of when a utility was added.
Thanks to Kirk and Cynthia for that clarification.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.25 2011/05/02 11:14:11 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 2 2011 $
d189 12
@


1.25
log
@no need to escape `|'; as discussed with schwartze
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.24 2010/11/04 14:32:28 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: November 4 2010 $
d193 1
a193 1
.Bx 3.0 .
@


1.24
log
@- fix a comma oopsie
- Tn for "YACC" is silly
- since ex(1) and vi(1) are the same page, let's not list them both in SEE ALSO
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.23 2010/11/03 19:39:38 millert Exp $
d33 1
a33 1
.Dd $Mdocdate: November 3 2010 $
d108 2
a109 2
$ ctags \-v files \&| sort \-f > index
$ vgrind \-x index
@


1.23
log
@POSIX specifies that ctags create tags for typedefs, structs, unions,
and enums by default.  The -t flag becomes a no-op for backwards
compat only.  OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.22 2010/10/19 16:54:15 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: October 19 2010 $
d46 2
a47 3
makes a tags file from the specified, C Pascal, Fortran,
.Tn YACC ,
lex, and Lisp sources.
a176 1
.Xr ex 1 ,
@


1.22
log
@no more vgrind(1); ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.21 2010/10/01 07:06:16 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: October 1 2010 $
d41 1
a41 1
.Op Fl aBdFtuvwx
d46 1
a46 4
makes a tags file for
.Xr ex 1
from the specified C,
Pascal, Fortran,
d48 1
a48 1
lex, and lisp sources.
d57 1
d59 2
d62 1
a62 3
Depending upon the options provided to
.Nm ctags ,
objects will consist of subroutines, typedefs, defines, structs,
a88 2
.It Fl t
Create tags for typedefs, structs, unions, and enums.
d136 1
a136 1
are assumed to be lisp files if their
d189 1
a189 1
.Op Fl BdFtuvw
@


1.21
log
@more EXIT STATUS tweaks; from Daniel Dickman
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.20 2010/09/29 07:44:56 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: September 29 2010 $
d104 1
a104 2
An index of the form expected by
.Xr vgrind 1
@


1.20
log
@various EXIT STATUS fixes; from Daniel Dickman
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.19 2010/07/15 20:51:38 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: July 15 2010 $
d180 2
@


1.19
log
@More delimiters that need quoting inside macros, hunted down by jmc@@,
who asked me to commit because he is just running out of the door.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.18 2009/02/10 19:24:17 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: February 10 2009 $
d178 2
a179 4
.Sh DIAGNOSTICS
.Nm
exits with a value of 1 if an error occurred, 0 otherwise.
Duplicate objects are not considered errors.
@


1.18
log
@STANDARDS:
mark these utilities as being either optional (SD/FR/UP); or as
being compliant only with XPG4 (XSI); strip.1 and talk.1 are tweaked
purely for consistency;

thanks otto for feedback
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.17 2009/02/08 17:15:09 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: February 8 2009 $
d144 1
a144 1
.Ql ( ,
d146 1
a146 1
.Ql [ ,
@


1.17
log
@bump the posix reference in STANDARDS to IEEE Std 1003.1-2008, with a few
updates to follow;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.16 2007/05/31 19:20:09 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d190 2
a191 1
specification.
@


1.16
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.15 2007/05/30 04:41:33 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d189 1
a189 1
.St -p1003.1-2004
@


1.15
log
@- use a consistent text for STANDARDS
- note which options are extensions to POSIX
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.14 2007/03/15 22:41:17 jmc Exp $
d33 1
a33 1
.Dd June 6, 1993
@


1.14
log
@simplify synopsis/usage() and sort options;
from Igor Sobrado
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.13 2003/06/10 09:12:10 jmc Exp $
d185 10
@


1.13
log
@- section reorder
- COMPATIBILITY merge
- macro cleanup
- kill whitespace at EOL
- new sentence, new line

ssh pages ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.12 2003/06/03 02:56:07 millert Exp $
d41 1
a41 1
.Op Fl BFadtuwvx
d43 1
a43 1
.Ar name ...
a68 7
.It Fl B
Use backward searching patterns
.Pq Li ?...? .
.It Fl F
Use forward searching patterns
.Pq Li /.../
(the default).
d73 3
d82 4
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.11 2002/02/13 08:33:47 mpech Exp $
a172 4
.Sh DIAGNOSTICS
.Nm
exits with a value of 1 if an error occurred, 0 otherwise.
Duplicate objects are not considered errors.
d178 4
@


1.11
log
@When you give command examples and etc., in a manual page prefix them with:
$ command
or
# command

deraadt@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.10 2000/11/10 05:10:23 aaron Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.10
log
@- Section shuffling: comply to the section ordering outlined in mdoc(7).
- Some .Nm trimming.
- .Sh AUTHOR -> .Sh AUTHORS
- Other miscellaneous fixes here and there.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.9 2000/03/05 20:09:21 aaron Exp $
d118 2
a119 2
ctags \-v files \&| sort \-f > index
vgrind \-x index
@


1.9
log
@Various improvements, including a few HISTORY sections added from FreeBSD.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.8 2000/03/04 22:19:22 aaron Exp $
d177 4
a185 4
.Sh DIAGNOSTICS
.Nm
exits with a value of 1 if an error occurred, 0 otherwise.
Duplicate objects are not considered errors.
d189 5
d197 1
a197 1
.Nm subroutines
a229 5
.Sh HISTORY
The
.Nm
command appeared in
.Bx 3.0 .
@


1.8
log
@In Unix land we prefer "whitespace" to "white space" or "white-space". At
least, this is the impression I get from looking at a lot of Perl docs.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.7 1999/07/21 01:25:43 deraadt Exp $
d60 1
d70 2
d102 2
a103 1
file.  (Beware: this option is implemented in a way which is rather
d110 4
a113 3
is produced on the standard output.  This listing
contains the object name, file name, and page number (assuming 64
line pages).  Since the output will be sorted into lexicographic order,
d127 2
a128 2
as the text of that line and prints this on the standard output.  This
is a simple index which can be printed out as an off-line readable
d133 1
a133 1
.Nm \&.c
d135 1
a135 1
.Nm \&.h
d139 1
a139 1
.Nm \&.y
d144 1
a144 1
.Nm \&.l
d146 5
a150 1
first non-blank character is `;', `(', or `[',
d152 2
a153 1
treated as lex files.  Other files are first examined to see if they
d159 3
a161 3
is treated specially in C programs.  The tag formed
is created by prepending
.Ar M
d164 3
a166 3
.Nm \&.c
and any leading pathname components removed.  This
makes use of
d168 1
a168 2
practical in directories with more than one
program.
d197 2
a198 1
and Pascal is done in a very simple-minded way.  No attempt
d211 3
a213 2
errors will completely confuse it.  It also finds some legal syntax
confusing; for example, since it doesn't understand
d221 2
a222 1
the searching pattern.  The last line of multiple line
@


1.7
log
@use .Ar on later .It Fl lines
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.6 1999/07/04 11:53:52 aaron Exp $
d59 1
a59 1
white-space.
@


1.6
log
@correct use of .Nm; some other formatting nits
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.5 1999/06/05 01:21:22 aaron Exp $
d87 1
a87 1
.It Fl f
@


1.5
log
@- remove trailing white space
- remove arguments from .Os macros
- remove arguments from .Nm macros, where appropriate
- some more Dq/Sq/Ql insanity
- still lots to do in the usr.bin tree... :/
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.4 1999/02/27 17:01:27 deraadt Exp $
d49 1
a49 1
.Nm ctags
d119 1
a119 1
.Nm ctags
d157 1
a157 1
.Nm ctags
d174 1
a174 1
.Nm ctags
d182 1
a182 1
.Nm functions  ,
d191 1
a191 1
.Nm ctags
d199 1
a199 1
.Nm ctags
@


1.4
log
@typo; helbig@@Informatik.BA-Stuttgart.DE
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.3 1998/09/23 04:32:38 aaron Exp $
d39 1
a39 1
.Os BSD 4
d216 1
a216 1
command appeared in 
@


1.3
log
@usr.bin/ man page repairs, a - e
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.2 1996/06/26 05:32:27 deraadt Exp $
d188 1
a188 1
and Pascal is done is a very simple-minded way.  No attempt
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD: ctags.1,v 1.4 1995/03/26 20:14:04 glass Exp $
d49 1
a49 1
.Nm Ctags
d68 1
a68 1
enums and unions.
d71 1
a71 1
use backward searching patterns
d74 1
a74 1
use forward searching patterns
d78 1
a78 1
append to
d82 1
a82 1
create tags for
d93 1
a93 1
create tags for typedefs, structs, unions, and enums.
d95 1
a95 1
update the specified files in the
d117 1
a117 1
suppress warning diagnostics.
d174 1
a174 1
.Nm Ctags
d188 1
a188 1
and Pascal is done is a very simpleminded way.  No attempt
d191 1
a191 1
.Nm Ctags
d199 1
a199 1
.Nm Ctags
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
