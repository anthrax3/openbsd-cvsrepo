head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.16
	OPENBSD_5_0:1.3.0.14
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.12
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.10
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.6
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.8
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_3_BASE:1.2;
locks; strict;
comment	@.\" @;


1.4
date	2012.04.12.11.51.12;	author pirofti;	state dead;
branches;
next	1.3;

1.3
date	2008.04.11.20.45.52;	author stefan;	state Exp;
branches;
next	1.2;

1.2
date	2007.10.20.18.23.35;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.07.17.58.51;	author otto;	state Exp;
branches;
next	;


desc
@@


1.4
log
@tedu(tm) pcc.

Message sent. Okay deraadt@@.
@
text
@.\"	$OpenBSD: ccom.1,v 1.3 2008/04/11 20:45:52 stefan Exp $
."\
.\" Copyright (c) 2007 Jeremy C. Reed <reed@@reedmedia.net>
.\" Permission to use, copy, modify, and/or distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR AND CONTRIBUTORS DISCLAIM
.\" ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL AUTHOR AND
.\" CONTRIBUTORS BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
.\" DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
.\" PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
.\" ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
.\" THIS SOFTWARE.
.Dd September 14, 2007
.Dt CCOM 1
.Os
.Sh NAME
.Nm ccom
.Nd C compiler
.Sh SYNOPSIS
.Nm
.Op Fl gs
.Op Fl W Ar flags
.Op Fl X Ar flags
.Op Fl x Ar optimizations
.Op Fl Z Ar flags
.Op infile
.Op outfile
.Sh DESCRIPTION
The
.Nm
utility provides a C compiler.
The frontend is usually
.Xr pcc 1 .
It is
.Em not
intended to be run directly.
.Pp
.Nm
reads the C source from
.Ar infile
or standard input and writes the assembler source
to
.Ar outfile
or to standard output.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl g
Enable debugging.
.\" built into binary, explain stabs?
.It Fl k
Generate PIC code.
.It Fl s
Print statistics to standard error when complete.
This includes:
name table entries, name string size, permanent allocated memory,
temporary allocated memory, lost memory, argument list unions,
dimension/function unions, struct/union/enum blocks, inline node count,
inline control blocks, and permanent symtab entries.
.\" TODO: explain units for above?
.It Fl v
Display version.
.It Fl W Ar flags
Report warnings.
(Do some basic checks.)
.Em NOTE!
.Em These are subject to change RSN!
.Ar flags
is one or more of the following:
.Bl -tag -width Ds
.It Sy error
Report all warnings as errors.
.It Sy implicit
Implies
.Sy implicit-function-declaration
and
.Sy implicit-int .
.It Sy implicit-function-declaration
Report if no prototype was declared for a function.
.It Sy implicit-int
TODO
.It Sy missing-prototypes
TODO
.It Sy strict-prototypes
TODO
.It Sy W
Enable all warnings.
.El
.\"
.It Fl X Ar flags
C specific debugging where
.Ar flags
is one or more of the following:
.Bl -tag -width Ds
.It Sy b
Building of parse trees
.It Sy d
Declarations (using multiple
.Sy d
flags gives more output)
.It Sy e
Pass1 trees at exit
.It Sy i
Initializations
.It Sy n
Memory allocations
.It Sy o
Turn off optimisations
.It Sy p
Prototypes
.It Sy s
Inlining
.It Sy t
Type conversions
.It Sy x
Target-specific flag, used in machine-dependent code
.El
.\"
.It Fl x Ar optimizations
.Ar optimizations
is one of the following:
.\" TODO: reword this, since multiple terms don't go with one -x switch??
.Bl -tag -width deljumps
.It Sy deljumps
Delete redundant jumps and dead code.
.It Sy ssa
Convert statements into SSA form for optimization.
Not yet finished.
.It Sy tailcall
Currently not implemented.
.It Sy temps
Setting this flag allows variables to be put into registers, for further
optimization by the register allocator.
.El
The
.Fl x
flag can be passed multiple times to set different options.
.\"
.It Fl Z Ar flags
Code generator (pass2) specific debugging where
.Ar flags
is one or more of the following:
.Bl -tag -width Ds
.It Sy b
Basic block and SSA building
.It Sy c
Code printout
.It Sy e
Trees when entering pass2
.It Sy f
Instruction matcher, may provide much output
.It Sy n
Memory allocation
.It Sy o
Instruction generator
.It Sy r
Register allocator
.It Sy s
Shape matching in instruction generator
.It Sy t
Type matching in instruction generator
.It Sy u
Sethi-Ullman computations
.It Sy x
Target-specific flag, used in machine-dependent code
.El
.El
.Sh SEE ALSO
.Xr as 1 ,
.Xr cpp 1 ,
.Xr pcc 1
.Sh HISTORY
The
.Nm
compiler is based on the original Portable C Compiler by S. C. Johnson,
written in the late 70's.
Even though much of the compiler has been rewritten, some of the
basics still remain.
About 50% of the frontend code and 80% of the backend code has been
rewritten.
Most is written by Anders Magnusson, with the exception of
the data-flow analysis part and the SSA conversion code which is
written by Peter A Jonsson, and the Mips port that were written as
part of a project by undergraduate students at Lulea University of
Technology.
.Pp
This product includes software developed or owned by Caldera
International, Inc.
@


1.3
log
@Sync with master repo. Reminded by otto@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ccom.1,v 1.2 2007/10/20 18:23:35 otto Exp $
@


1.2
log
@sync with ragge's repo
@
text
@d1 1
a1 1
.\"	$OpenBSD: ccom.1,v 1.6 2007/10/19 18:43:07 gmcgarry Exp $
d4 2
a5 2
.\" Permission to use, copy, modify, and/or distribute this software for any 
.\" purpose with or without fee is hereby granted, provided that the above 
d7 8
a14 8
.\" 
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR AND CONTRIBUTORS DISCLAIM 
.\" ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED 
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL AUTHOR AND 
.\" CONTRIBUTORS BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL 
.\" DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR 
.\" PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 
.\" ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF 
d17 1
a17 1
.Dt ccom 1
a30 1
.Pp
d37 3
a39 1
It is \fBnot\fR intended to be run directly.
d69 2
a70 1
NOTE!  These are subject to change RSN!
d74 2
d82 1
a82 1
Report if no prototype for function.
d89 2
d101 1
a101 1
Declarations (multiple
d124 1
a124 1
is one or more of the following:
d130 2
a131 1
Convert statements into SSA form for optimization.  Not yet finished.
d135 1
a135 1
Setting this flag allows variables to be put into registers, for further 
d138 3
d144 1
a144 1
.Ar flags 
d168 1
a168 1
Target-specific flag, used in machine-dependent code 
d178 2
a179 2
compiler is based on the original Portable C Compiler by S. C.
Johnson, written in the late 70's.
d187 1
a187 1
part of a project by undergraduate students at Lulea University of 
@


1.1
log
@reorg pcc tree; requested by and ok deraadt@@; ok ragge@@
@
text
@d1 1
a1 3
.\"	$Id: ccom.1,v 1.4 2007/10/03 08:05:04 otto Exp $
.\"	$NetBSD$
.\"	$OpenBSD: ccom.1,v 1.4 2007/10/03 08:05:04 otto Exp $
d53 2
d102 8
d137 4
d145 2
@

