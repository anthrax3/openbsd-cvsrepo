head	1.6;
access;
symbols
	ragge20070915:1.1.1.1 ragge:1.1.1;
locks; strict;
comment	@.\" @;


1.6
date	2007.10.07.17.58.51;	author otto;	state dead;
branches;
next	1.5;

1.5
date	2007.10.03.08.05.03;	author otto;	state Exp;
branches;
next	1.4;

1.4
date	2007.10.01.18.51.02;	author otto;	state Exp;
branches;
next	1.3;

1.3
date	2007.09.27.19.56.48;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2007.09.15.22.04.38;	author ray;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.15.18.12.32;	author otto;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.09.15.18.12.32;	author otto;	state Exp;
branches;
next	;


desc
@@


1.6
log
@reorg pcc tree; requested by and ok deraadt@@; ok ragge@@
@
text
@.\"	$Id: cc.1,v 1.5 2007/10/03 08:05:03 otto Exp $
.\"	$NetBSD$
.\"	$OpenBSD: cc.1,v 1.5 2007/10/03 08:05:03 otto Exp $
."\
.\" Copyright (c) 2007 Jeremy C. Reed <reed@@reedmedia.net>
.\" 
.\" Permission to use, copy, modify, and/or distribute this software for any 
.\" purpose with or without fee is hereby granted, provided that the above 
.\" copyright notice and this permission notice appear in all copies.
.\" 
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR AND CONTRIBUTORS DISCLAIM 
.\" ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED 
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL AUTHOR AND 
.\" CONTRIBUTORS BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL 
.\" DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR 
.\" PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 
.\" ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF 
.\" THIS SOFTWARE.
.\"
.Dd September 14, 2007
.Dt cc 1
.Os
.Sh NAME
.Nm cc
.Nd front-end to the C compiler
.Sh SYNOPSIS
.Nm
.Op Fl cEgkLMPOStvxX
.Op Fl fPIC
.Op Fl fpic
.Op Fl nostartfiles
.Op Fl nostdinc
.Op Fl nostdlib
.Op Fl pg
.Op Fl pthread
.Op Fl static
.Op Fl B Ar prefix
.Op Fl D Ar macro[=value]
.Op Fl d Ar option
.Op Fl I Ar directory
.Op Fl include Ar path
.Op Fl isystem Ar path
.Op Fl o Ar outfile
.Op Fl Wl Ar flags
.Op Ar
.Pp
.Sh DESCRIPTION
The
.Nm
utility provides a front-end to the
.Dq portable C compiler.
Multiple files may be given on the command line.
Unrecognized options are all sent directly to
.Xr ld 1 .
.Pp
.\" Brief description of its syntax:
Filenames that end with
.Sy .c
are passed via
.Xr cpp 1 ->
.Xr ccom 1 ->
.Xr as 1 ->
.Xr ld 1 .
.Pp
Filenames that end with
.Sy .i
are passed via
.Xr ccom 1 ->
.Xr as 1 ->
.Xr ld 1 .
.Pp
Filenames that end with
.Sy .s
are passed via
.Xr as 1 ->
.Xr ld 1 .
.Pp
Filenames that end with
.Sy .o
are passed directly to
.Xr ld 1 .
.Pp
.\"
The options are as follows:
.Bl -tag -width Ds
.It Fl B Ar prefix
Define alternate prefix path for
.Xr cpp 1 ,
.Xr ccom 1 ,
.Xr as 1 ,
or
.Xr ld 1
executables.
.\" TODO: provide an example of -B
.It Fl C
Passed to the
.Xr cpp 1
preprocessor to not discard comments.
.It Fl c
Only compile or assemble and then stop.
Do not link.
The resulting object output is saved
as a filename with a
.Dq .o
suffix unless
.Fl o
option is used.
Note: cannot be combined with
.Fl o
if multiple files are given.
.It Fl D Ar macro[=value]
Passed to the
.Xr cpp 1
preprocessor to define
.Ar macro .
.It Fl d Ar option
Passed to the
.Xr as 1
assembler.
.\" TODO: what is as -dfoo for?
.It Fl E
Stop after preprocessing with
.Xr cpp 1 .
Do not compile, assemble, or link.
Output is sent to standard output unless the
.Fl o
option is used.
.It Fl fPIC
Generate PIC code.
.\" TODO: document about avoiding machine-specific maximum size?
.It Fl fpic
Tells C compiler to generate PIC code
and tells assembler that PIC code has been generated.
.\" TODO: document difference between PIC and pic
.\" other -f GCC compatibility flags are ignored for now
.It Fl g
Send
.Fl g
flag to
.Xr ccom 1
to create debug output.
This unsets the
.Fl O
option.
.It Fl I Ar path
Passed to the
.Xr cpp 1
preprocessor to add header search directory to override system defaults.
.It Fl include Ar file
Tells the
.Xr cpp 1  
preprocessor to include the
.Ar file
during preprocessing.
.It Fl isystem Ar path
Defines
.Ar path
as a system header directory for the
.Xr cpp 1
preprocessor.
.It Fl k
Generate PIC code.
See
.Fl fpic
option.
.It Fl L
.\" TODO
.It Fl M
Pass
.Fl M
flag to
.Xr cpp 1
to generate dependencies for
.Xr make 1 .
.It Fl nostartfiles
.\" TODO
.It Fl nostdinc
.\" TODO
.It Fl nostdlib
.\" TODO
.\" implies -nostartfiles ??
.It Fl O
Enable optimizations.
Currently passes
.Fl xdeljumps
and
.Fl xtemps
to
.Xr ccom 1 .
Note: this is unset if
.Fl g
option is set.
.It Fl o Ar outfile
Save result to
.Ar outfile .
.It Fl P
TODO: what is this?
.\" TODO: Looks like it does cpp only, but I couldn't get it to work for me.
.It Fl pg
Not implemented.
.It Fl pthread
Defines
.Sy _PTHREADS
preprocessor directive for
.Xr cpp 1 .
Uses
.Sy -lpthread
for
.Xr ld 1 linker.
.It Fl S
Stop after compilation by
.Xr ccom 1 .
Do not assemble and do not link.
The resulting assembler-language output is saved
as a filename with a
.Dq .s
suffix unless the
.Fl o
option is used.
Note: cannot be combined with
.Fl o
if multiple files are given.
.It Fl static
Do not use dynamic linkage.
By default, it will link using the dynamic linker options
and/or shared objects for the platform.
.It Fl t
Passes
.Fl t
to
.Xr cpp 1
for traditional C preprocessor syntax.
.It Fl U Ar macro
Passes to the 
.Xr cpp 1
preprocessor to remove the initial macro definition.
.It Fl v
Outputs the version of
.Nm
and shows what commands will be ran with their command line arguments.
.It Fl Wl Ar flags
Options for the linker
.\" what is ignored? llist?
.It Fl X
TODO
.It Fl x
TODO
.El
.Sh Predefined Macros  
A few
macros are predefined by
.Nm
went sent to
.Xr cpp 1 .
.Bl -diag
.\" TODO:
.\" .It __ASSEMBLER__
.\" Defined if suffix is .S -- why not with .s? what does this mean?
.It __PCC__
Set to the major version of
.Xr pcc 1 .
These macros can be used to select code based on
.Xr pcc 1
compatibility.
See
.Fl v
option.
.It __PCC_MINOR__
Set to the minor version.
.It __PCC_MINORMINOR__
Set to the minor-minor version -- the number after the minor version.
.It _PTHREADS
Defined when
.Fl pthread
switch is used.
.El
.Pp
Also system- and/or machine-dependent macros may also be predefined;
for example:
.Dv __NetBSD__ ,
.Dv __ELF__ ,
and
.Dv __i386__ .
.Sh SEE ALSO
.Xr as 1 ,
.Xr ccom 1 ,
.Xr cpp 1 ,
.Xr ld 1
.Sh HISTORY
The
.Nm
command comes from the original Portable C Compiler by S. C.
Johnson, written in the late 70's.
.Pp
This product includes software developed or owned by Caldera
International, Inc.
@


1.5
log
@pull from ragge's repo: man page diffs from Igor Sobrado
@
text
@d1 1
a1 1
.\"	$Id: cc.1,v 1.7 2007/10/02 19:32:29 reed Exp $
d3 1
a3 1
.\"	$OpenBSD$
@


1.4
log
@pull fro ragge's repo:
-C support for cc and deljumps optimization; both by Stefan Kempf
@
text
@d1 3
a3 1
.\"	$OpenBSD: cc.1,v 1.3 2007/09/27 19:56:48 otto Exp $
d28 1
a28 2
.Op Fl CcdEgkLMPOStvxX
.Op Fl B Ar prefix
d30 2
a31 2
.Op Fl include Ar path
.Op Fl isystem Ar path
a33 2
.Op Fl nostartfiles
.Op Fl o Ar outfile
d37 7
d45 1
a45 1
.Op Ar infile ...
d95 4
a98 2
.lt Fl C
Do not discard comments in the preprocessor.
d111 5
a120 5
.It Fl D Ar macro[=value]
Passed to the
.Xr cpp 1
preprocessor to define
.Ar macro .
d125 6
a134 3
.It Fl fPIC
Generate PIC code.
.\" TODO: document about avoiding machine-specific maximum size?
d145 10
a154 2
.It Fl include Ar path
.\" TODO
d156 5
a160 1
.\" TODO
a165 4
.It Fl I Ar path
Passed to the
.Xr cpp 1
preprocessor to add header search directory to override system defaults.
d175 2
a181 10
.It Fl nostartfiles
.\" TODO
.It Fl o Ar outfile
Save result to
.Ar outfile .
.It Fl P
TODO: what is this?
.\" TODO: Looks like it does cpp only, but I couldn't get it to work for me.
.It Fl pg
Not implemented.
d185 2
d193 8
a209 4
.It Fl static
Do not use dynamic linkage.
By default, it will link using the dynamic linker options
and/or shared objects for the platform.
d223 4
d234 1
a234 1
Passed to the 
a240 4
.It Fl x
TODO
.It Fl X
TODO
d244 4
@


1.3
log
@pullup of manual pages from ragge's repo
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d26 1
a26 1
.Op Fl cdEgkLMPOStvxX
d89 2
@


1.2
log
@$OpenBSD$

Requested by otto.
@
text
@d1 2
a2 2
.\" $OpenBSD$
.\"
d26 14
a39 2
.Op Fl TODO
.Op infile...
d44 2
a45 1
utility provides a front-end to the PCC C compiler.
d60 7
a76 2
.\" TODO: document when -D__ASSEMBLER__ ??
.\" TODO:  document __PCC__, __PCC_MINOR__, and __PCC_MINORMINOR__
d92 6
d101 10
a110 2
.It Fl d
Sent to assembler. TODO?
d115 4
d121 1
a121 3
See
.Fl k
option.
d129 3
d137 8
a144 2
Tells C compiler to generate PIC code
and tells assembler that PIC code has been generated.
d166 1
d170 5
a174 1
.\" TODO: sets -xtemps for ccom??
d195 6
d210 4
a224 1
.\" TODO: DIUC options?
d226 35
d264 2
a265 1
.Xr cpp 1
a273 1

@


1.1
log
@Initial revision
@
text
@d1 2
@


1.1.1.1
log
@Import ragge's version of PCC into our tree, so we can hack on it more
easy. ok deraadt@@ miod@@
@
text
@@
