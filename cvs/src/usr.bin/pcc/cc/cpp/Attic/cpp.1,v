head	1.5;
access;
symbols;
locks; strict;
comment	@.\" @;


1.5
date	2007.10.07.17.58.51;	author otto;	state dead;
branches;
next	1.4;

1.4
date	2007.10.03.08.05.04;	author otto;	state Exp;
branches;
next	1.3;

1.3
date	2007.09.27.19.56.48;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2007.09.15.21.48.06;	author ray;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.15.20.56.54;	author otto;	state Exp;
branches;
next	;


desc
@@


1.5
log
@reorg pcc tree; requested by and ok deraadt@@; ok ragge@@
@
text
@.\"	$Id: cpp.1,v 1.4 2007/10/03 08:05:04 otto Exp $
.\"	$NetBSD$
.\"	$OpenBSD: cpp.1,v 1.4 2007/10/03 08:05:04 otto Exp $
."\
.\" Copyright (c) 2007 Jeremy C. Reed <reed@@reedmedia.net>
.\" 
.\" Permission to use, copy, modify, and/or distribute this software for any 
.\" purpose with or without fee is hereby granted, provided that the above 
.\" copyright notice and this permission notice appear in all copies.
.\" 
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR AND CONTRIBUTORS DISCLAIM 
.\" ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED 
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL AUTHOR AND 
.\" CONTRIBUTORS BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL 
.\" DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR 
.\" PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 
.\" ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF 
.\" THIS SOFTWARE.
.\"
.Dd September 17, 2007
.Dt cpp 1
.Os
.Sh NAME
.Nm cpp
.Nd C preprocessor
.Sh SYNOPSIS
.Nm
.\" TODO also document -Dvar and below without spaces?
.Op Fl CdMt
.Op Fl D Ar macro[=value]
.Op Fl I Ar path
.Op Fl i Ar file
.Op Fl S Ar path
.Op Fl U Ar macro
.Op Ar infile | -
.Op Ar outfile
.Pp
.Sh DESCRIPTION
The
.Nm
utility is a macro preprocessor used by the
.Xr pcc 1
compiler.
It is used to include header files,
expand macro definitions,
and perform conditional compilation.
.Pp
The 
.Ar infile
input file is optional.
If not provided or the file name is
.Qq -
(dash),
.Nm
reads its initial file from standard input.
The
.Ar outfile
output file is also optional.
It writes by default to standard output.
.Pp
.\" TODO: document MAXARG  250 args to a macro, limited by char value
.\" TODO: Include order:
.\" For "..." files, first search "current" dir, then as <...> files.
.\" For <...> files, first search -I directories, then system directories.
.\"
The options are as follows:
.Bl -tag -width Ds
.It Fl C
Do not discard comments.
.It Fl D Ar macro[=value]
Fake a definition at the beginning by using
.Do #define
.Ar macro=value Dc .
If
.Ar value
is not set on command-line, then defines as 1.
.\" TODO: show example
.It Fl dM
Print list of
.Dq #define
statements to standard output for all defined macros other than
builtin macros (see below).
The normal results of preprocessing are not outputted.
.\" TODO this doesn't show predefined macros
.\" other -d options are ignored
.It Fl I Ar path
Add
.Ar path
to the list of directories containing needed header files.
This may be used to override system include directories
(see
.Fl S
option).
.Fl I
may be specified multiple times.
.It Fl i Ar file
Include a file at the beginning by using
.Do #include
.Ar file Dc .
.\" Note: I did not use the .In macro above
.It Fl M
Generate dependencies for
.Xr make 1 .
.\" TODO: explain and show example?
.It Fl S Ar path
Add
.Ar path
to the list of system directories containing needed header files.
.Fl S
may be specified multiple times.
Note:
.Nm
does not have a default include directory defined.
.\" TODO: explain difference between -I and -S
.\" The directories listed by -I are searched first?
.It Fl t
Traditional cpp syntax.
Do not define the
.Dv __TIME__ ,
.Dv __DATE__ ,
and
.Dv __STDC__
macros.
.\"
.It Fl U Ar macro
Undefine a macro at the beginning by using
.Do #undef
.Ar macro Dc .
.It Fl v
Display version.
.It Fl V
Verbose debugging output.
.Fl V
can be repeated for further details.
.\" -V only available if cpp source built with CPP_DEBUG, which is the default.
.It Fl ?
Show command line usage for
.Nm .
.El
.Sh Builtin Macros
A few macros are interpreted inside the
.Nm cpp
program:
.Bl -diag
.It __DATE__
Expands to the date in abbreviated month, day, and year format from
.Xr ctime 3
in quotes.
.\" TODO: is that ctime(3) format output change according to locale?
.It __FILE__
Expands to the name of the current input file in quotes.
When read from standard input, it expands to
.Qq Ao stdin Ac .
.It __LINE__
Expands to the line number of the current line containing the macro.
.It __STDC__
Expands to the constant 1.
This means the compiler conforms to ISO Standard C.
.It __TIME__
Expands to the time in hour, minutes, and seconds from
.Xr ctime 3
in quotes.
.El
.Pp
Also see the
.Fl t
option.
.Sh EXIT STATUS
The
.Nm
utility exits with one of the following values:
.Bl -tag -width Ds
.It 0
Successfully finished.
.It 1
An error occurred.
.El
.Sh SEE ALSO
.Xr as 1 ,
.Xr ccom 1 ,
.Xr pcc 1
.\"
.Sh HISTORY
The
.Nm
command comes from the original Portable C Compiler by S. C.
Johnson, written in the late 70's.
The code originates from the V6 preprocessor with some additions
from V7 cpp and ansi/c99 support.
.Pp
A lot of the PCC code was rewritten by Anders Magnusson.
.Pp
This product includes software developed or owned by Caldera
International, Inc.
@


1.4
log
@pull from ragge's repo: man page diffs from Igor Sobrado
@
text
@d1 1
a1 1
.\"	$Id: cpp.1,v 1.6 2007/10/02 19:59:00 reed Exp $
d3 1
a3 1
.\"	$OpenBSD$
@


1.3
log
@pullup of manual pages from ragge's repo
@
text
@d1 2
d29 2
a30 3
.Op Fl Cdt
.Op Fl D Ar var=val
.Op Fl U Ar var
d32 1
d34 1
d70 8
d86 1
a86 14
.It Fl D Ar macro[=value]
Fake a definition at the beginning by using
.Do #define
.Ar macro=value Dc .
If
.Ar value
is not set on command-line, then defines as 1.
.\" TODO: show example
.It Fl i Ar file
Include a file at the beginning by using
.Do #include
.Ar file Dc .
.\" Note: I did not use the .In macro above
.It Fl I Ar directory
d88 2
a89 2
.Ar directory
to the list of system directories containing needed header files.
d96 5
d105 1
a105 1
.It Fl S Ar directory
d107 1
a107 1
.Ar directory
d130 2
d133 1
a133 1
.Fl v
d135 1
a135 1
.\" -v only available if cpp source built with CPP_DEBUG, which is the default.
@


1.2
log
@$OpenBSD$

OK otto.
@
text
@d1 16
a16 1
.\" $OpenBSD$
d18 172
a189 1
.\" Placeholder
@


1.1
log
@"un"configure, to make it possible to build in obj dir. No need to run
configure any more.
@
text
@d1 2
@

