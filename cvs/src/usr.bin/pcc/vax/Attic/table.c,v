head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.18
	OPENBSD_5_0:1.3.0.16
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.14
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.12
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.8
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.10
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.6
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.4
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2012.04.12.11.51.13;	author pirofti;	state dead;
branches;
next	1.3;

1.3
date	2007.10.29.16.38.55;	author ragge;	state Exp;
branches;
next	1.2;

1.2
date	2007.10.27.14.19.18;	author ragge;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.07.17.58.52;	author otto;	state Exp;
branches;
next	;


desc
@@


1.4
log
@tedu(tm) pcc.

Message sent. Okay deraadt@@.
@
text
@/*	$OpenBSD: table.c,v 1.3 2007/10/29 16:38:55 ragge Exp $	*/
/*
 * Copyright(C) Caldera International Inc. 2001-2002. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * Redistributions of source code and documentation must retain the above
 * copyright notice, this list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditionsand the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 * 	This product includes software developed or owned by Caldera
 *	International, Inc.
 * Neither the name of Caldera International, Inc. nor the names of other
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * USE OF THE SOFTWARE PROVIDED FOR UNDER THIS LICENSE BY CALDERA
 * INTERNATIONAL, INC. AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL CALDERA INTERNATIONAL, INC. BE LIABLE
 * FOR ANY DIRECT, INDIRECT INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OFLIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
 * POSSIBILITY OF SUCH DAMAGE.
 */

# include "pass2.h"

# define WPTR TPTRTO|TINT|TLONG|TFLOAT|TDOUBLE|TPOINT|TUNSIGNED|TULONG
# define AWD SNAME|SOREG|SCON|STARNM|STARREG
/* tbl */
# define ANYSIGNED TPOINT|TINT|TLONG|TSHORT|TCHAR
# define ANYUSIGNED TUNSIGNED|TULONG|TUSHORT|TUCHAR
# define ANYFIXED ANYSIGNED|ANYUSIGNED
# define TWORD TINT|TUNSIGNED|TPOINT|TLONG|TULONG
/* tbl */
# define TBREG TLONGLONG|TULONGLONG|TDOUBLE

struct optab  table[] = {
/* First entry must be an empty entry */
{ -1, FOREFF, SANY, TANY, SANY, TANY, 0, 0, "", },

{ PCONV,	INAREG|INAREG,
	SAREG|AWD,	TCHAR|TSHORT,
	SANY,	TPOINT,
		NAREG|NASL,	RESC1,
		"	cvtZLl	AL,A1\n", },

{ PCONV,	INAREG|INAREG,
	SAREG|AWD,	TUCHAR|TUSHORT,
	SANY,	TPOINT,
		NAREG|NASL,	RESC1,
		"	movzZLl	AL,A1\n", },

{ SCONV,	INBREG|FORCC,
	SAREG,	TDOUBLE,
	SANY,	TDOUBLE,
		0,	RLEFT,
		"", },

{ SCONV,	INBREG|FORCC,
	SAREG|AWD,	TANY,
	SANY,	TFLOAT|TDOUBLE,
		NAREG|NASL,	RESC1|RESCC,
		"	cvtZLd	AL,A1\n", },

{ SCONV,	INAREG|FORCC,
	SAREG|AWD,	TFLOAT|TDOUBLE,
	SANY,	ANYFIXED,
		NAREG|NASL,	RESC1|RESCC,
		"	cvtZLZF	AL,A1\n", },

{ SCONV,	INAREG|FORCC,
	SAREG|SNAME|SCON|STARNM,	TANY,
	SANY,	ANYUSIGNED,
		NAREG|NASL,	RESC1|RESCC,
		"	movzZRl	AL,A1\n", },

{ SCONV,	INAREG|FORCC,
	SSOREG,	TANY,
	SANY,	ANYUSIGNED,
		NAREG|NASL,	RESC1|RESCC,
		"	movzZRl	AL,A1\n", },

{ SCONV,	INAREG|FORCC,
	SAREG|SNAME|SCON|STARNM,	TANY,
	SANY,	TANY,
		NAREG|NASL,	RESC1|RESCC,
		"	cvtZRl	AL,A1\n", },

{ SCONV,	INAREG|FORCC,
	SSOREG,	TANY,
	SANY,	TANY,
		NAREG|NASL,	RESC1|RESCC,
		"	cvtZRl	AL,A1\n", },

{ GOTO,	FOREFF,
	SCON,	TANY,
	SANY,	TANY,
		0,	RNOP,
		"	ZJ\n", },

{ GOTO,	FOREFF,
	SAREG,	TANY,
	SANY,	TANY,
		0,	RNOP,
		"	jmp	(AL)\n", },

{ STARG,	INTEMP,
	SCON|SAREG,	TANY,
	SANY,	TANY,
		NTEMP+2*NAREG,	RESC3,
		"ZS", },

#if 0
{ STASG,	FORARG,
	SNAME|SOREG,	TANY,
	SCON|SAREG,	TANY,
		0,	RNULL,
		"	subl2	ZT,sp\nZS", },
#endif

{ ADDROF,	INAREG,
	SNAME,	TANY,
	SAREG,	TANY,
		NAREG,	RESC1,
		"	movab	AL,A1\n", },

{ STASG,	FOREFF,
	SNAME|SOREG,	TANY,
	SCON|SAREG,	TANY,
		0,	RNOP,
		"ZS", },

{ STASG,	INAREG,
	SNAME|SOREG,	TANY,
	SCON,	TANY,
		NAREG,	RESC1,
		"ZS	movl	AR,A1\n", },

{ STASG,	INAREG,
	SNAME|SOREG,	TANY,
	SAREG,	TANY,
		0,	RRIGHT,
		"	pushl	AR\nZS	movl	(sp)+,AR\n", },

{ FLD,	INAREG|INAREG,
	SANY,	TANY,
	SFLD,	ANYSIGNED,
		NAREG|NASR,	RESC1,
		"	extv	H,S,AR,A1\n", },

{ FLD,	INAREG|INAREG,
	SANY,	TANY,
	SFLD,	ANYUSIGNED,
		NAREG|NASR,	RESC1,
		"	extzv	H,S,AR,A1\n", },

#if 0
{ FLD,	FORARG,
	SANY,	TANY,
	SFLD,	ANYSIGNED,
		0,	RNULL,
		"	extv	H,S,AR,-(sp)\n", },

{ FLD,	FORARG,
	SANY,	TANY,
	SFLD,	ANYUSIGNED,
		0,	RNULL,
		"	extzv	H,S,AR,-(sp)\n", },
#endif

{ OPLOG,	FORCC,
	SAREG|AWD,	TWORD,
	SAREG|AWD,	TWORD,
		0,	RESCC,
		"	cmpl	AL,AR\n", },

{ OPLOG,	FORCC,
	SAREG|AWD,	TSHORT|TUSHORT,
	SAREG|AWD,	TSHORT|TUSHORT,
		0,	RESCC,
		"	cmpw	AL,AR\n", },

{ OPLOG,	FORCC,
	SAREG|AWD,	TCHAR|TUCHAR,
	SAREG|AWD,	TCHAR|TUCHAR,
		0,	RESCC,
		"	cmpb	AL,AR\n", },

{ OPLOG,	FORCC,
	SAREG|AWD,	TSHORT|TUSHORT,
	SSCON,	TANY,
		0,	RESCC,
		"	cmpw	AL,AR\n", },

{ OPLOG,	FORCC,
	SAREG|AWD,	TCHAR|TUCHAR,
	SCCON,	TANY,
		0,	RESCC,
		"	cmpb	AL,AR\n", },

{ OPLOG,	FORCC,
	SAREG|AWD,	TDOUBLE,
	SAREG|AWD,	TDOUBLE,
		0,	RESCC,
		"	cmpd	AL,AR\n", },

{ OPLOG,	FORCC,
	SAREG|AWD,	TFLOAT|TDOUBLE,
	SAREG|AWD,	TFLOAT|TDOUBLE,
		0,	RESCC,
		"	cmpf	AL,AR\n", },

{ CCODES,	INAREG|INAREG,
	SANY,	TANY,
	SANY,	TANY,
		NAREG,	RESC1,
		"	movl	$1,A1\nZN", },

/*
 * Subroutine calls.
 */

{ CALL,		FOREFF,
	SCON,	TANY,
	SANY,	TANY,
		0,	0,
		"	calls	ZC,CL\n", },

{ UCALL,	FOREFF,
	SCON,	TANY,
	SANY,	TANY,
		0,	0,
		"	calls	$0,CL\n", },

{ CALL,		INAREG,
	SCON,	TANY,
	SANY,	TANY,
		NAREG|NASL,	RESC1, /* should be register 0 */
		"	calls	ZC,CL\n", },

{ UCALL,	INAREG,
	SCON,	TANY,
	SANY,	TANY,
		NAREG|NASL,	RESC1, /* should be register 0 */
		"	calls	$0,CL\n", },

{ CALL,		INAREG|FOREFF,
	SAREG,	TANY,
	SANY,	TANY,
		NAREG|NASL,	RESC1,	/* should be 0 */
		"	calls	ZC,(AL)\n", },

{ UCALL,	INAREG|FOREFF,
	SAREG,	TANY,
	SANY,	TWORD|TCHAR|TUCHAR|TSHORT|TUSHORT|TFLOAT|TDOUBLE,
		NAREG|NASL,	RESC1,	/* should be 0 */
		"	calls	ZC,(AL)\n", },

{ UCALL,	INAREG|FOREFF,
	SNAME,	TANY,
	SANY,	TANY,
		NAREG|NASL,	RESC1,	/* really reg 0 */
		"	calls	ZC,*AL\n", },

{ UCALL,	INAREG|FOREFF,
	SSOREG,	TANY,
	SANY,	TANY,
		NAREG|NASL,	RESC1,	/* really reg 0 */
		"	calls	ZC,*AL\n", },

/*
 * Function arguments
 */
{ FUNARG,	FOREFF,
	SCON|SAREG|SNAME|SOREG,	TWORD|TPOINT,
	SANY,	TWORD|TPOINT,
		0,	RNULL,
		"	pushl AL\n" },

#if 0
{ ASG RS,	INAREG|FOREFF|FORCC,
	SAREG,	TWORD,
	SCON,	TINT,
		0,	RLEFT|RESCC,
		"	extzv	AR,ZU,AL,AL\n", },

{ ASG RS,	INAREG|FOREFF|FORCC,
	SAREG,	TWORD,
	SAREG,	ANYFIXED,
		NAREG,	RLEFT|RESCC,
		"	subl3	AR,$32,A1\n	extzv	AR,A1,AL,AL\n", },

{ ASG RS,	INAREG|FOREFF|FORCC,
	SAREG,	TWORD,
	SAREG|AWD,	TWORD,
		NAREG,	RLEFT|RESCC,
		"	subl3	AR,$32,A1\n	extzv	AR,A1,AL,AL\n", },
#endif

{ RS,	INAREG|INAREG|FORCC,
	SAREG,	TWORD,
	SCON,	TINT,
		NAREG|NASL,	RESC1|RESCC,
		"	extzv	AR,ZU,AL,A1\n", },

#if 0
{ ASG LS,	INAREG|FOREFF|FORCC,
	SAREG|AWD,	TWORD,
	SAREG|AWD,	ANYSIGNED|ANYUSIGNED,
		0,	RLEFT|RESCC,
		"	ashl	AR,AL,AL\n", },
#endif

{ LS,	INAREG|INAREG|FORCC,
	SAREG|AWD,	TWORD,
	SAREG|AWD,	ANYSIGNED|ANYUSIGNED,
		NAREG|NASL|NASR,	RESC1|RESCC,
		"	ashl	AR,AL,A1\n", },

#if 0
{ INCR,	FOREFF,
	SAREG|AWD,	TANY,
	SANY,	TANY,
		0,	RLEFT,
		"	ZE\n", },

{ DECR,	FOREFF,
	SAREG|AWD,	TANY,
	SCON,	TANY,
		0,	RLEFT,
		"	ZE\n", },

{ INCR,	INAREG|INAREG,
	SAREG|AWD,	TANY,
	SCON,	TANY,
		NAREG,	RESC1,
		"	ZD\n", },

{ DECR,	INAREG|INAREG,
	SAREG|AWD,	TANY,
	SCON,	TANY,
		NAREG,	RESC1,
		"	ZD\n", },
#endif

{ ASSIGN,	INBREG|FOREFF,
	SBREG|AWD,	TBREG,
	SBREG|AWD,	TBREG,
		0,	RDEST,
		"	movq AR,AL\n", },

{ ASSIGN,	INAREG|FOREFF|FORCC,
	SAREG|AWD,	TANY,
	SAREG|AWD,	TANY,
		0,	RDEST|RESCC,
		"	ZA\n", },

{ ASSIGN,	INAREG|FOREFF|FORCC,
	SFLD,	TANY,
	SAREG|AWD,	TWORD,
		0,	RDEST|RESCC,
		"	insv	AR,H,S,AL\n", },

{ ASSIGN,	INAREG|FOREFF|FORCC,
	SAREG|AWD,	TWORD,
	SFLD,	ANYSIGNED,
		0,	RDEST|RESCC,
		"	extv	H,S,AR,AL\n", },

{ ASSIGN,	INAREG|FOREFF|FORCC,
	SAREG|AWD,	TWORD,
	SFLD,	ANYUSIGNED,
		0,	RDEST|RESCC,
		"	extzv	H,S,AR,AL\n", },

/* dummy UNARY MUL entry to get U* to possibly match OPLTYPE */
{ UMUL,	FOREFF,
	SCC,	TANY,
	SCC,	TANY,
		0,	RNULL,
		"	HELP HELP HELP\n", },

#if 0
{ REG,	FORARG,
	SANY,	TANY,
	SAREG,	TDOUBLE|TFLOAT,
		0,	RNULL,
		"	movZR	AR,-(sp)\n", },
#endif

{ REG,	INTEMP,
	SANY,	TANY,
	SAREG,	TDOUBLE,
		2*NTEMP,	RESC1,
		"	movd	AR,A1\n", },

{ REG,	INTEMP,
	SANY,	TANY,
	SAREG,	TANY,
		NTEMP,	RESC1,
		"	movZF	AR,A1\n", },

{ OPLEAF,	FOREFF,
	SANY,	TANY,
	SAREG|AWD,	TANY,
		0,	RLEFT,
		"", },

{ OPLTYPE,	INAREG|INAREG,
	SANY,	TANY,
	SANY,	TFLOAT|TDOUBLE,
		2*NAREG|NASR,	RESC1,
		"	ZA\n", },

{ OPLTYPE,	INAREG|INAREG,
	SANY,	TANY,
	SANY,	TANY,
		NAREG|NASR,	RESC1,
		"	ZA\n", },

{ OPLTYPE,	FORCC,
	SANY,	TANY,
	SANY,	TANY,
		0,	RESCC,
		"	tstZR	AR\n", },

#if 0
{ OPLTYPE,	FORARG,
	SANY,	TANY,
	SANY,	TWORD,
		0,	RNULL,
		"	pushl	AR\n", },

{ OPLTYPE,	FORARG,
	SANY,	TANY,
	SANY,	TCHAR|TSHORT,
		0,	RNULL,
		"	cvtZRl	AR,-(sp)\n", },

{ OPLTYPE,	FORARG,
	SANY,	TANY,
	SANY,	TUCHAR|TUSHORT,
		0,	RNULL,
		"	movzZRl	AR,-(sp)\n", },

{ OPLTYPE,	FORARG,
	SANY,	TANY,
	SANY,	TDOUBLE,
		0,	RNULL,
		"	movd	AR,-(sp)\n", },

{ OPLTYPE,	FORARG,
	SANY,	TANY,
	SANY,	TFLOAT,
		0,	RNULL,
		"	cvtfd	AR,-(sp)\n", },
#endif

{ UMINUS,	INAREG|FORCC,
	SAREG|AWD,	TINT|TUNSIGNED|TLONG|TULONG|TDOUBLE,
	SANY,	TANY,
		NAREG|NASL,	RESC1|RESCC,
		"	mnegZL	AL,A1\n", },

{ COMPL,	INAREG|FORCC,
	SAREG|AWD,	TINT|TUNSIGNED,
	SANY,	TANY,
		NAREG|NASL,	RESC1|RESCC,
		"	mcomZL	AL,A1\n", },

{ COMPL,	INAREG|FORCC,
	SAREG|AWD,	ANYSIGNED|ANYUSIGNED,
	SANY,	TANY,
		NAREG|NASL,	RESC1|RESCC,
		"	cvtZLl	AL,A1\n	mcoml	A1,A1\n", },

{ AND,	FORCC,
	SAREG|AWD,	TWORD,
	SCON,	TWORD,
		0,	RESCC,
		"	bitl	ZZ,AL\n", },

{ AND,	FORCC,
	SAREG|AWD,	TSHORT|TUSHORT,
	SSCON,	TWORD,
		0,	RESCC,
		"	bitw	ZZ,AL\n", },

{ AND,	FORCC,
	SAREG|AWD,	TCHAR|TUCHAR,
	SCCON,	TWORD,
		0,	RESCC,
		"	bitb	ZZ,AL\n", },

#if 0
{ ASG AND,	INAREG|FOREFF|FORCC,
	SAREG,	ANYFIXED,
	SCON,	TWORD,
		0,	RLEFT|RESCC,
		"	bicl2	AR,AL\n", },

{ ASG OPMUL,	INAREG|FOREFF|FORCC,
	SAREG|AWD,	TINT|TUNSIGNED|TLONG|TULONG,
	SAREG|AWD,	TINT|TUNSIGNED|TLONG|TULONG,
		0,	RLEFT|RESCC,
		"	OL2	AR,AL\n", },
#endif

{ OPMUL,	INAREG|INAREG|FORCC,
	SAREG,	TINT|TUNSIGNED|TLONG|TULONG,
	SAREG|AWD,	TINT|TUNSIGNED|TLONG|TULONG,
		0,	RLEFT|RESCC,
		"	OL2	AR,AL\n", },

{ OPMUL,	INAREG|INAREG|FORCC,
	SAREG|AWD,	TINT|TUNSIGNED|TLONG|TULONG,
	SAREG|AWD,	TINT|TUNSIGNED|TLONG|TULONG,
		NAREG|NASL|NASR,	RESC1|RESCC,
		"	OL3	AR,AL,A1\n", },

#if 0
{ ASG MOD,	INAREG|INAREG|FOREFF|FORCC,
	SAREG,	TINT|TUNSIGNED|TLONG|TULONG,
	SAREG|AWD,	TINT|TUNSIGNED|TLONG|TULONG,
		NAREG,	RLEFT|RESCC,
		"	divl3	AR,AL,A1\n	mull2	AR,A1\n	subl2	A1,AL\n", },
#endif

{ MOD,	INAREG|INAREG,
	SAREG|AWD,	TINT|TUNSIGNED|TLONG|TULONG,
	SAREG|AWD,	TINT|TUNSIGNED|TLONG|TULONG,
		NAREG,	RESC1,
		"	divl3	AR,AL,A1\n	mull2	AR,A1\n	subl3	A1,AL,A1\n", },

#if 0
{ ASG PLUS,	INAREG|FOREFF|FORCC,
	SAREG|AWD,	ANYSIGNED|ANYUSIGNED,
	SONE,	TINT|TLONG,
		0,	RLEFT|RESCC,
		"	incZL	AL\n", },

{ ASG MINUS,	INAREG|FOREFF|FORCC,
	SAREG|AWD,	ANYSIGNED|ANYUSIGNED,
	SONE,	TINT|TLONG,
		0,	RLEFT|RESCC,
		"	decZL	AL\n", },
#endif

{ PLUS,	INAREG|INAREG|FORCC,
	SAREG,	ANYFIXED,
	SONE,	TWORD,
		0,	RLEFT|RESCC,
		"	incZL	AL\n", },

{ MINUS,	INAREG|INAREG|FORCC,
	SAREG,	ANYFIXED,
	SONE,	TWORD,
		0,	RLEFT|RESCC,
		"	decZL	AL\n", },

#if 0
{ ASG OPSIMP,	INAREG|FOREFF|FORCC,
	SAREG|AWD,	TWORD,
	SAREG|AWD,	TWORD,
		0,	RLEFT|RESCC,
		"	OL2	AR,AL\n", },

{ ASG OPSIMP,	INAREG|FOREFF|FORCC,
	AWD,	TSHORT|TUSHORT,
	SAREG|AWD,	TSHORT|TUSHORT,
		0,	RLEFT|RESCC,
		"	OW2	AR,AL\n", },

{ ASG OPSIMP,	INAREG|FOREFF|FORCC,
	AWD,	TSHORT|TUSHORT,
	SSCON,	TWORD,
		0,	RLEFT|RESCC,
		"	OW2	AR,AL\n", },

{ ASG OPSIMP,	INAREG|FOREFF|FORCC,
	AWD,	TCHAR|TUCHAR,
	SAREG|AWD,	TCHAR|TUCHAR,
		0,	RLEFT|RESCC,
		"	OB2	AR,AL\n", },

{ ASG OPSIMP,	INAREG|FOREFF|FORCC,
	AWD,	TCHAR|TUCHAR,
	SCCON,	TWORD,
		0,	RLEFT|RESCC,
		"	OB2	AR,AL\n", },
#endif

{ OPSIMP,	INAREG|INAREG|FORCC,
	SAREG,	ANYFIXED,
	SAREG|AWD,	TWORD,
		0,	RLEFT|RESCC,
		"	OL2	AR,AL\n", },

{ OPSIMP,	INAREG|INAREG|FORCC,
	SAREG|AWD,	TWORD,
	SAREG|AWD,	TWORD,
		NAREG|NASL|NASR,	RESC1|RESCC,
		"	OL3	AR,AL,A1\n", },

#if 0
{ ASG OPFLOAT,	INAREG|FOREFF|FORCC,
	SAREG|AWD,	TDOUBLE,
	SAREG|AWD,	TDOUBLE,
		0,	RLEFT|RESCC,
		"	OD2	AR,AL\n", },

{ ASG OPFLOAT,	INAREG|FOREFF|FORCC,
	SAREG|AWD,	TFLOAT,
	SAREG|AWD,	TFLOAT,
		0,	RLEFT|RESCC,
		"	OF2	AR,AL\n", },

{ ASG OPFLOAT,	INAREG|FOREFF|FORCC,
	SAREG|AWD,	TDOUBLE,
	SAREG|AWD,	TFLOAT,
		NAREG|NASR,	RLEFT|RESCC,
		"	cvtfd	AR,A1\n	OD2	A1,AL\n", },

{ ASG OPFLOAT,	INAREG|INAREG|FOREFF|FORCC,
	SAREG|AWD,	TFLOAT,
	SAREG|AWD,	TDOUBLE,
		NAREG,	RLEFT|RESC1|RESCC,
		"	cvtfd	AL,A1\n	OD2	AR,A1\n	cvtdf	A1,AL\n", },
#endif

{ OPFLOAT,	INAREG|INAREG|FORCC,
	SAREG,	TDOUBLE,
	SAREG|AWD,	TDOUBLE,
		0,	RLEFT|RESCC,
		"	OD2	AR,AL\n", },

{ OPFLOAT,	INAREG|INAREG|FORCC,
	SAREG|AWD,	TDOUBLE,
	SAREG|AWD,	TDOUBLE,
		NAREG|NASL|NASR,	RESC1|RESCC,
		"	OD3	AR,AL,A1\n", },

{ OPFLOAT,	INAREG|INAREG|FORCC,
	SAREG|AWD,	TFLOAT,
	SAREG|AWD,	TDOUBLE,
		NAREG|NASL,	RESC1|RESCC,
		"	cvtfd	AL,A1\n	OD2	AR,A1\n", },

{ OPFLOAT,	INAREG|INAREG|FORCC,
	SAREG|AWD,	TDOUBLE,
	SAREG|AWD,	TFLOAT,
		NAREG|NASR,	RESC1|RESCC,
		"	cvtfd	AR,A1\n	OD3	A1,AL,A1\n", },

{ OPFLOAT,	INAREG|INAREG|FORCC,
	SAREG|AWD,	TFLOAT,
	SAREG|AWD,	TFLOAT,
		NAREG|NASL|NASR,	RESC1|RESCC,
		"	OF3	AR,AL,A1\n	cvtfd	A1,A1\n", },

	/* Default actions for hard trees ... */

# define DF(x) FORREW,SANY,TANY,SANY,TANY,REWRITE,x,""

{ UMUL, DF( UMUL ), },

{ ASSIGN, DF(ASSIGN), },

{ STASG, DF(STASG), },

{ OPLEAF, DF(NAME), },

{ OPLOG,	FORCC,
	SANY,	TANY,
	SANY,	TANY,
		REWRITE,	BITYPE,
		"", },

{ OPUNARY, DF(UMINUS), },

{ OPANY, DF(BITYPE), },

{ FREE,	FREE,	FREE,	FREE,	FREE,	FREE,	FREE,	FREE,	"help; I'm in trouble\n" }
};
@


1.3
log
@From master repo:
> calls argument numbers are in registers, not bytes.
> If a jump is to the return label, emit ret insn instead.
> Add ADDROF table entry.
> Remove some unused entries.
> Do a Z call for emitted GOTOs.
> Only create constants for function names, they are called by name anyway.
@
text
@d1 1
a1 1
/*	$OpenBSD: table.c,v 1.2 2007/10/27 14:19:18 ragge Exp $	*/
@


1.2
log
@Sync with master repo: At least compiles now.
@
text
@d1 1
a1 1
/*	$OpenBSD: table.c,v 1.1 2007/10/07 17:58:52 otto Exp $	*/
a105 20
#if 0
{ INIT,	FOREFF,
	SCON,	TANY,
	SANY,	TWORD,
		0,	RNOP,
		"	.long	CL\n", },

{ INIT,	FOREFF,
	SCON,	TANY,
	SANY,	TSHORT|TUSHORT,
		0,	RNOP,
		"	.word	CL\n", },

{ INIT,	FOREFF,
	SCON,	TANY,
	SANY,	TCHAR|TUCHAR,
		0,	RNOP,
		"	.byte	CL\n", },
#endif

d110 1
a110 1
		"	jbr	LL\n", },
d132 6
d258 6
a284 6
{ FUNARG,	FOREFF,
	SNCON,	TWORD|TPOINT,
	SANY,	TWORD|TPOINT,
		0,	RNULL,
		"	pushab AL\n" },

@


1.1
log
@reorg pcc tree; requested by and ok deraadt@@; ok ragge@@
@
text
@d1 1
a1 1
/*	$OpenBSD: table.c,v 1.2 2007/09/15 22:04:38 ray Exp $	*/
d36 1
a36 1
# include "mfile2"
d46 1
d49 2
d52 1
a52 1
PCONV,	INAREG|INTAREG,
d56 1
a56 1
		"	cvtZLl	AL,A1\n",
d58 1
a58 1
PCONV,	INAREG|INTAREG,
d62 1
a62 1
		"	movzZLl	AL,A1\n",
d64 1
a64 1
SCONV,	INTAREG|FORCC,
d68 1
a68 1
		"",
d70 1
a70 1
SCONV,	INTAREG|FORCC,
d74 1
a74 1
		"	cvtZLd	AL,A1\n",
d76 1
a76 1
SCONV,	INTAREG|FORCC,
d80 1
a80 1
		"	cvtZLZF	AL,A1\n",
d82 1
a82 1
SCONV,	INTAREG|FORCC,
d86 1
a86 1
		"	movzZRl	AL,A1\n",
d88 1
a88 1
SCONV,	INTAREG|FORCC,
d92 1
a92 1
		"	movzZRl	AL,A1\n",
d94 1
a94 1
SCONV,	INTAREG|FORCC,
d98 1
a98 1
		"	cvtZRl	AL,A1\n",
d100 1
a100 1
SCONV,	INTAREG|FORCC,
d104 1
a104 1
		"	cvtZRl	AL,A1\n",
d106 2
a107 2

INIT,	FOREFF,
d111 1
a111 1
		"	.long	CL\n",
d113 1
a113 1
INIT,	FOREFF,
d117 1
a117 1
		"	.word	CL\n",
d119 1
a119 1
INIT,	FOREFF,
d123 2
a124 3
		"	.byte	CL\n",

	/* for the use of fortran only */
d126 1
a126 1
GOTO,	FOREFF,
d130 1
a130 1
		"	jbr	CL\n",
d132 1
a132 1
GOTO,	FOREFF,
d136 1
a136 1
		"	jmp	(AL)\n",
d138 1
a138 1
STARG,	INTEMP,
d142 1
a142 1
		"ZS",
d144 2
a145 1
STASG,	FORARG,
d149 2
a150 1
		"	subl2	ZT,sp\nZS",
d152 1
a152 1
STASG,	FOREFF,
d156 1
a156 1
		"ZS",
d158 1
a158 1
STASG,	INAREG,
d162 1
a162 1
		"ZS	movl	AR,A1\n",
d164 1
a164 1
STASG,	INAREG,
d168 1
a168 1
		"	pushl	AR\nZS	movl	(sp)+,AR\n",
d170 1
a170 1
FLD,	INAREG|INTAREG,
d174 1
a174 1
		"	extv	H,S,AR,A1\n",
d176 1
a176 1
FLD,	INAREG|INTAREG,
d180 1
a180 1
		"	extzv	H,S,AR,A1\n",
d182 2
a183 1
FLD,	FORARG,
d187 1
a187 1
		"	extv	H,S,AR,-(sp)\n",
d189 1
a189 1
FLD,	FORARG,
d193 2
a194 1
		"	extzv	H,S,AR,-(sp)\n",
d196 1
a196 1
OPLOG,	FORCC,
d200 1
a200 1
		"	cmpl	AL,AR\nZP",
d202 1
a202 1
OPLOG,	FORCC,
d206 1
a206 1
		"	cmpw	AL,AR\nZP",
d208 1
a208 1
OPLOG,	FORCC,
d212 1
a212 1
		"	cmpb	AL,AR\nZP",
d214 1
a214 1
OPLOG,	FORCC,
d218 1
a218 1
		"	cmpw	AL,AR\nZP",
d220 1
a220 1
OPLOG,	FORCC,
d224 1
a224 1
		"	cmpb	AL,AR\nZP",
d226 1
a226 1
OPLOG,	FORCC,
d230 1
a230 1
		"	cmpd	AL,AR\nZP",
d232 1
a232 1
OPLOG,	FORCC,
d236 1
a236 1
		"	cmpf	AL,AR\nZP",
d238 1
a238 1
CCODES,	INAREG|INTAREG,
d242 5
a246 1
		"	movl	$1,A1\nZN",
d248 1
a248 1
UNARY CALL,	INTAREG,
d250 19
a268 1
	SANY,	TWORD|TCHAR|TUCHAR|TSHORT|TUSHORT|TFLOAT|TDOUBLE,
d270 1
a270 1
		"	calls	ZC,CL\n",
d272 1
a272 1
UNARY CALL,	INTAREG,
d276 1
a276 1
		"	calls	ZC,(AL)\n",
d278 1
a278 1
UNARY CALL,	INAREG|INTAREG,
d282 1
a282 1
		"	calls	ZC,*AL\n",
d284 1
a284 1
UNARY CALL,	INAREG|INTAREG,
d288 10
a297 1
		"	calls	ZC,*AL\n",
d299 8
a306 1
ASG RS,	INAREG|FOREFF|FORCC,
d310 1
a310 1
		"	extzv	AR,ZU,AL,AL\n",
d312 1
a312 1
ASG RS,	INAREG|FOREFF|FORCC,
d316 1
a316 1
		"	subl3	AR,$32,A1\n	extzv	AR,A1,AL,AL\n",
d318 1
a318 1
ASG RS,	INAREG|FOREFF|FORCC,
d322 2
a323 1
		"	subl3	AR,$32,A1\n	extzv	AR,A1,AL,AL\n",
d325 1
a325 1
RS,	INAREG|INTAREG|FORCC,
d329 1
a329 1
		"	extzv	AR,ZU,AL,A1\n",
d331 2
a332 1
ASG LS,	INAREG|FOREFF|FORCC,
d336 2
a337 1
		"	ashl	AR,AL,AL\n",
d339 1
a339 1
LS,	INAREG|INTAREG|FORCC,
d343 1
a343 1
		"	ashl	AR,AL,A1\n",
d345 2
a346 1
INCR,	FOREFF,
d350 1
a350 1
		"	ZE\n",
d352 1
a352 1
DECR,	FOREFF,
d356 1
a356 1
		"	ZE\n",
d358 1
a358 1
INCR,	INAREG|INTAREG,
d362 1
a362 1
		"	ZD\n",
d364 1
a364 1
DECR,	INAREG|INTAREG,
d368 8
a375 1
		"	ZD\n",
d377 1
a377 1
ASSIGN,	INAREG|FOREFF|FORCC,
d380 2
a381 2
		0,	RLEFT|RRIGHT|RESCC,
		"	ZA\n",
d383 1
a383 1
ASSIGN,	INAREG|FOREFF|FORCC,
d386 2
a387 2
		0,	RRIGHT|RESCC,
		"	insv	AR,H,S,AL\n",
d389 1
a389 1
ASSIGN,	INAREG|FOREFF|FORCC,
d392 2
a393 2
		0,	RLEFT|RESCC,
		"	extv	H,S,AR,AL\n",
d395 1
a395 1
ASSIGN,	INAREG|FOREFF|FORCC,
d398 2
a399 2
		0,	RLEFT|RESCC,
		"	extzv	H,S,AR,AL\n",
d402 1
a402 1
UNARY MUL,	FOREFF,
d406 1
a406 1
		"	HELP HELP HELP\n",
d408 2
a409 1
REG,	FORARG,
d413 2
a414 1
		"	movZR	AR,-(sp)\n",
d416 1
a416 1
REG,	INTEMP,
d420 1
a420 1
		"	movd	AR,A1\n",
d422 1
a422 1
REG,	INTEMP,
d426 1
a426 1
		"	movZF	AR,A1\n",
d428 1
a428 1
OPLEAF,	FOREFF,
d432 1
a432 1
		"",
d434 1
a434 1
OPLTYPE,	INAREG|INTAREG,
d438 1
a438 1
		"	ZA\n",
d440 1
a440 1
OPLTYPE,	INAREG|INTAREG,
d444 1
a444 1
		"	ZA\n",
d446 1
a446 1
OPLTYPE,	FORCC,
d450 1
a450 1
		"	tstZR	AR\n",
d452 2
a453 1
OPLTYPE,	FORARG,
d457 1
a457 1
		"	pushl	AR\n",
d459 1
a459 1
OPLTYPE,	FORARG,
d463 1
a463 1
		"	cvtZRl	AR,-(sp)\n",
d465 1
a465 1
OPLTYPE,	FORARG,
d469 1
a469 1
		"	movzZRl	AR,-(sp)\n",
d471 1
a471 1
OPLTYPE,	FORARG,
d475 1
a475 1
		"	movd	AR,-(sp)\n",
d477 1
a477 1
OPLTYPE,	FORARG,
d481 2
a482 1
		"	cvtfd	AR,-(sp)\n",
d484 1
a484 1
UNARY MINUS,	INTAREG|FORCC,
d488 1
a488 1
		"	mnegZL	AL,A1\n",
d490 1
a490 1
COMPL,	INTAREG|FORCC,
d494 1
a494 1
		"	mcomZL	AL,A1\n",
d496 1
a496 1
COMPL,	INTAREG|FORCC,
d500 1
a500 1
		"	cvtZLl	AL,A1\n	mcoml	A1,A1\n",
d502 1
a502 1
AND,	FORCC,
d506 1
a506 1
		"	bitl	ZZ,AL\n",
d508 1
a508 1
AND,	FORCC,
d512 1
a512 1
		"	bitw	ZZ,AL\n",
d514 1
a514 1
AND,	FORCC,
d518 1
a518 1
		"	bitb	ZZ,AL\n",
d520 2
a521 1
ASG AND,	INAREG|FOREFF|FORCC,
d525 1
a525 1
		"	bicl2	AR,AL\n",
d527 1
a527 1
ASG OPMUL,	INAREG|FOREFF|FORCC,
d531 2
a532 1
		"	OL2	AR,AL\n",
d534 2
a535 2
OPMUL,	INAREG|INTAREG|FORCC,
	STAREG,	TINT|TUNSIGNED|TLONG|TULONG,
d538 1
a538 1
		"	OL2	AR,AL\n",
d540 1
a540 1
OPMUL,	INAREG|INTAREG|FORCC,
d544 1
a544 1
		"	OL3	AR,AL,A1\n",
d546 2
a547 1
ASG MOD,	INAREG|INTAREG|FOREFF|FORCC,
d551 2
a552 1
		"	divl3	AR,AL,A1\n	mull2	AR,A1\n	subl2	A1,AL\n",
d554 1
a554 1
MOD,	INAREG|INTAREG,
d558 1
a558 1
		"	divl3	AR,AL,A1\n	mull2	AR,A1\n	subl3	A1,AL,A1\n",
d560 2
a561 1
ASG PLUS,	INAREG|FOREFF|FORCC,
d565 1
a565 1
		"	incZL	AL\n",
d567 1
a567 1
ASG MINUS,	INAREG|FOREFF|FORCC,
d571 2
a572 1
		"	decZL	AL\n",
d574 2
a575 2
PLUS,	INAREG|INTAREG|FORCC,
	STAREG,	ANYFIXED,
d578 1
a578 1
		"	incZL	AL\n",
d580 2
a581 2
MINUS,	INAREG|INTAREG|FORCC,
	STAREG,	ANYFIXED,
d584 1
a584 1
		"	decZL	AL\n",
d586 2
a587 1
ASG OPSIMP,	INAREG|FOREFF|FORCC,
d591 1
a591 1
		"	OL2	AR,AL\n",
d593 1
a593 1
ASG OPSIMP,	INAREG|FOREFF|FORCC,
d597 1
a597 1
		"	OW2	AR,AL\n",
d599 1
a599 1
ASG OPSIMP,	INAREG|FOREFF|FORCC,
d603 1
a603 1
		"	OW2	AR,AL\n",
d605 1
a605 1
ASG OPSIMP,	INAREG|FOREFF|FORCC,
d609 1
a609 1
		"	OB2	AR,AL\n",
d611 1
a611 1
ASG OPSIMP,	INAREG|FOREFF|FORCC,
d615 2
a616 1
		"	OB2	AR,AL\n",
d618 2
a619 2
OPSIMP,	INAREG|INTAREG|FORCC,
	STAREG,	ANYFIXED,
d622 1
a622 1
		"	OL2	AR,AL\n",
d624 1
a624 1
OPSIMP,	INAREG|INTAREG|FORCC,
d628 1
a628 1
		"	OL3	AR,AL,A1\n",
d630 2
a631 1
ASG OPFLOAT,	INAREG|FOREFF|FORCC,
d635 1
a635 1
		"	OD2	AR,AL\n",
d637 1
a637 1
ASG OPFLOAT,	INAREG|FOREFF|FORCC,
d641 1
a641 1
		"	OF2	AR,AL\n",
d643 1
a643 1
ASG OPFLOAT,	INAREG|FOREFF|FORCC,
d647 1
a647 1
		"	cvtfd	AR,A1\n	OD2	A1,AL\n",
d649 1
a649 1
ASG OPFLOAT,	INAREG|INTAREG|FOREFF|FORCC,
d653 2
a654 1
		"	cvtfd	AL,A1\n	OD2	AR,A1\n	cvtdf	A1,AL\n",
d656 2
a657 2
OPFLOAT,	INAREG|INTAREG|FORCC,
	STAREG,	TDOUBLE,
d660 1
a660 1
		"	OD2	AR,AL\n",
d662 1
a662 1
OPFLOAT,	INAREG|INTAREG|FORCC,
d666 1
a666 1
		"	OD3	AR,AL,A1\n",
d668 1
a668 1
OPFLOAT,	INAREG|INTAREG|FORCC,
d672 1
a672 1
		"	cvtfd	AL,A1\n	OD2	AR,A1\n",
d674 1
a674 1
OPFLOAT,	INAREG|INTAREG|FORCC,
d678 1
a678 1
		"	cvtfd	AR,A1\n	OD3	A1,AL,A1\n",
d680 1
a680 1
OPFLOAT,	INAREG|INTAREG|FORCC,
d684 1
a684 1
		"	OF3	AR,AL,A1\n	cvtfd	A1,A1\n",
d690 1
a690 3
UNARY MUL, DF( UNARY MUL ),

INCR, DF(INCR),
d692 1
a692 1
DECR, DF(INCR),
d694 1
a694 1
ASSIGN, DF(ASSIGN),
d696 1
a696 1
STASG, DF(STASG),
d698 1
a698 3
OPLEAF, DF(NAME),

OPLOG,	FORCC,
d702 1
a702 10
		"",

OPLOG,	DF(NOT),

COMOP, DF(COMOP),

INIT, DF(INIT),

OPUNARY, DF(UNARY MINUS),

d704 1
a704 1
ASG OPANY, DF(ASG PLUS),
d706 1
a706 1
OPANY, DF(BITYPE),
d708 2
a709 1
FREE,	FREE,	FREE,	FREE,	FREE,	FREE,	FREE,	FREE,	"help; I'm in trouble\n" };
@

