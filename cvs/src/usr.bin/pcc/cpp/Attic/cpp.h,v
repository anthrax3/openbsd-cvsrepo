head	1.8;
access;
symbols
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5;
locks; strict;
comment	@ * @;


1.8
date	2012.04.12.11.51.12;	author pirofti;	state dead;
branches;
next	1.7;

1.7
date	2009.12.17.17.52.54;	author ragge;	state Exp;
branches;
next	1.6;

1.6
date	2008.08.17.18.40.13;	author ragge;	state Exp;
branches;
next	1.5;

1.5
date	2007.10.21.18.58.02;	author otto;	state Exp;
branches;
next	1.4;

1.4
date	2007.10.12.21.40.49;	author stefan;	state Exp;
branches;
next	1.3;

1.3
date	2007.10.12.18.14.14;	author stefan;	state Exp;
branches;
next	1.2;

1.2
date	2007.10.12.07.22.44;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.07.17.58.51;	author otto;	state Exp;
branches;
next	;


desc
@@


1.8
log
@tedu(tm) pcc.

Message sent. Okay deraadt@@.
@
text
@/*	$OpenBSD: cpp.h,v 1.7 2009/12/17 17:52:54 ragge Exp $	*/

/*
 * Copyright (c) 2004 Anders Magnusson (ragge@@ludd.luth.se).
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <stdio.h> /* for obuf */

#include "../config.h"

typedef unsigned char usch;
#ifdef YYTEXT_POINTER
extern char *yytext;
#else
extern char yytext[];
#endif
extern usch *stringbuf;

extern	int	trulvl;
extern	int	flslvl;
extern	int	elflvl;
extern	int	elslvl;
extern	int	tflag, Cflag, Pflag;
extern	int	Mflag, dMflag;
extern	usch	*Mfile;
extern	int	ofd;

/* args for lookup() */
#define FIND    0
#define ENTER   1

/* buffer used internally */
#ifndef CPPBUF
#if defined(__pdp11__)
#define CPPBUF  BUFSIZ
#elif defined(WIN32)
/* winxp seems to fail > 26608 bytes */
#define CPPBUF	16384
#else
#define CPPBUF	65536
#endif
#endif

#define	NAMEMAX	CPPBUF	/* currently pushbackbuffer */

/* definition for include file info */
struct includ {
	struct includ *next;
	usch *fname;	/* current fn, changed if #line found */
	usch *orgfn;	/* current fn, not changed */
	int lineno;
	int infil;
	usch *curptr;
	usch *maxread;
	usch *ostr;
	usch *buffer;
	usch bbuf[NAMEMAX+CPPBUF+1];
} *ifiles;

/* Symbol table entry  */
struct symtab {
	usch *namep;    
	usch *value;    
	usch *file;
	int line;
};

struct initar {
	struct initar *next;
	int type;
	char *str;
};

/*
 * Struct used in parse tree evaluation.
 * op is one of:
 *	- number type (NUMBER, UNUMBER)
 *	- zero (0) if divided by zero.
 */
struct nd {
	int op;
	union {
		long long val;
		unsigned long long uval;
	} n;
};

#define nd_val n.val
#define nd_uval n.uval

struct recur;	/* not used outside cpp.c */
int subst(struct symtab *, struct recur *);
struct symtab *lookup(usch *namep, int enterf);
usch *gotident(struct symtab *nl);
int slow;	/* scan slowly for new tokens */

int pushfile(usch *fname);
void popfile(void);
void prtline(void);
int yylex(void);
int sloscan(void);
void cunput(int);
int curline(void);
char *curfile(void);
void setline(int);
void setfile(char *);
int yyparse(void);
void yyerror(char *);
void unpstr(usch *);
usch *savstr(usch *str);
void savch(int c);
void mainscan(void);
void putch(int);
void putstr(usch *s);
void line(void);
usch *sheap(char *fmt, ...);
void xwarning(usch *);
void xerror(usch *);
#ifdef HAVE_CPP_VARARG_MACRO_GCC
#define warning(...) xwarning(sheap(__VA_ARGS__))
#define error(...) xerror(sheap(__VA_ARGS__))
#else
#define warning printf
#define error printf
#endif
void expmac(struct recur *);
int cinput(void);
void getcmnt(void);
@


1.7
log
@Update from master repo.  Many bugfixes + significant speedyps.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpp.h,v 1.6 2008/08/17 18:40:13 ragge Exp $	*/
@


1.6
log
@Updates from master repo.  Can now compile both userland and kernel.
(with some patches...)
@
text
@d1 1
a1 1
/*	$OpenBSD: cpp.h,v 1.5 2007/10/21 18:58:02 otto Exp $	*/
d57 1
a57 1
#ifdef __pdp11__
d59 3
d67 1
a67 1
#define	NAMEMAX	64 /* max len of identifier */
d124 1
@


1.5
log
@Pull from ragge's repo:
More fixes to cpp arithmetic, sanitychecked by otto and stefan.
@
text
@d1 1
a1 1
/*	$OpenBSD: cpp.h,v 1.4 2007/10/12 21:40:49 stefan Exp $	*/
d46 1
a46 1
extern	int	tflag, Cflag;
d75 1
d138 1
d141 4
d146 2
@


1.4
log
@Fix broken build. Reported by Gregory McGarry on pcc-list.
ok otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpp.h,v 1.3 2007/10/12 18:14:14 stefan Exp $	*/
d93 8
a100 1
struct val {
a103 11
	} v;
	int type;
};

struct nd {
	union {
		struct {
			struct nd *left;
			struct nd *right;
		} t;
		struct val v;
a104 1
	int op;
d107 2
a108 8
#define nd_left n.t.left
#define nd_right n.t.right
#define nd_val n.v.v.val
#define nd_uval n.v.v.uval
#define nd_type n.v.type

struct nd *mknode(int, struct nd *, struct nd *);
struct nd *mknum(struct val);
@


1.3
log
@From master repo:
> Add zero checks when dividing or taking modulo. ok otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpp.h,v 1.2 2007/10/12 07:22:44 otto Exp $	*/
d146 1
a146 1
void warning(usch *);
d148 1
@


1.2
log
@rewrite of constant expression evaluation; taking into account
signed vs unsigned and shortcutting of && and ||
ok ragge@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpp.h,v 1.1 2007/10/07 17:58:51 otto Exp $	*/
d146 1
@


1.1
log
@reorg pcc tree; requested by and ok deraadt@@; ok ragge@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cpp.h,v 1.4 2007/09/18 07:16:01 otto Exp $	*/
d92 28
@

