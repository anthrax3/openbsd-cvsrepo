head	1.23;
access;
symbols
	OPENBSD_5_5:1.22.0.10
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.22.0.6
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.22.0.4
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.22.0.2
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.10
	OPENBSD_5_0:1.21.0.8
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.21.0.6
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.21.0.4
	OPENBSD_4_8_BASE:1.21
	OPENBSD_4_7:1.21.0.2
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.20.0.10
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.20.0.6
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.20.0.4
	OPENBSD_4_4_BASE:1.20
	OPENBSD_4_3:1.20.0.2
	OPENBSD_4_3_BASE:1.20
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.18.0.16
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.14
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.12
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.10
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.18.0.8
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.18.0.6
	OPENBSD_3_6_BASE:1.18
	OPENBSD_3_5:1.18.0.4
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	OPENBSD_3_3:1.15.0.4
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.15.0.2
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.16
	OPENBSD_2_8:1.8.0.14
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.12
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.10
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.8
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.6
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6;
locks; strict;
comment	@ * @;


1.23
date	2014.07.10.14.26.16;	author tedu;	state dead;
branches;
next	1.22;
commitid	Hzb21S9Xr5CMEb0F;

1.22
date	2012.02.24.06.19.00;	author guenther;	state Exp;
branches;
next	1.21;

1.21
date	2009.10.27.23.59.41;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2007.09.27.17.08.58;	author sobrado;	state Exp;
branches;
next	1.19;

1.19
date	2007.04.14.21.44.06;	author sobrado;	state Exp;
branches;
next	1.18;

1.18
date	2003.06.03.02.56.14;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2003.04.06.04.15.31;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2003.04.05.17.18.26;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2002.06.18.23.49.15;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2002.06.12.06.07.16;	author mpech;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.09.21.11.22;	author hin;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.19.19.39.38;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.16.21.27.50;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2001.11.19.19.02.15;	author mpech;	state Exp;
branches;
next	1.9;

1.9
date	2001.07.18.17.17.39;	author pvalchev;	state Exp;
branches;
next	1.8;

1.8
date	97.07.25.21.05.36;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	97.04.04.18.41.31;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.09.16.16.38.28;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	96.08.22.20.33.22;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.07.30.20.34.55;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.07.19.21.57.33;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.37.39;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.02.03.12.12.00;	author dm;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Snakes. Why'd it have to be snakes?
@
text
@/*	$OpenBSD: main.c,v 1.22 2012/02/24 06:19:00 guenther Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdarg.h>
#include <libgen.h>
#include "defs.h"

#define NHOSTS 100

/*
 * Remote distribution program.
 */

char	*distfile = NULL;
#define _RDIST_TMP	"rdistXXXXXXXXXX"
char	tempfile[sizeof _PATH_TMP + sizeof _RDIST_TMP - 1];
char	*tempname;

int	debug;		/* debugging flag */
int	nflag;		/* NOP flag, just print commands without executing */
int	qflag;		/* Quiet. Don't print messages */
int	options;	/* global options */
int	iamremote;	/* act as remote server for transferring files */

FILE	*fin = NULL;	/* input file pointer */
int	rem = -1;	/* file descriptor to remote source/sink process */
char	host[MAXHOSTNAMELEN]; /* host name */
int	nerrs;		/* number of errors while sending/receiving */
char	user[MAXLOGNAME]; /* user's name */
char	homedir[MAXPATHLEN]; /* user's home directory */
uid_t	userid;		/* user's user ID */
gid_t	groupid;	/* user's group ID */

struct	passwd *pw;	/* pointer to static area used by getpwent */
struct	group *gr;	/* pointer to static area used by getgrent */

static void usage(void);
static void docmdargs(int, char *[]);

int
main(argc, argv)
	int argc;
	char *argv[];
{
	char *arg;
	int cmdargs = 0;
	char *dhosts[NHOSTS], **hp = dhosts;

	pw = getpwuid(userid = getuid());
	if (pw == NULL) {
		fprintf(stderr, "%s: Who are you?\n", argv[0]);
		exit(1);
	}
	strlcpy(user, pw->pw_name, sizeof user);
	strlcpy(homedir, pw->pw_dir, sizeof homedir);
	groupid = pw->pw_gid;
	gethostname(host, sizeof(host));
	strlcpy(tempfile, _PATH_TMP, sizeof tempfile);
	strlcat(tempfile, _RDIST_TMP, sizeof tempfile);
	tempname = basename(tempfile);

	while (--argc > 0) {
		if ((arg = *++argv)[0] != '-')
			break;
		if (!strcmp(arg, "-Server"))
			iamremote++;
		else while (*++arg)
			switch (*arg) {
			case 'f':
				if (--argc <= 0)
					usage();
				distfile = *++argv;
				if (distfile[0] == '-' && distfile[1] == '\0')
					fin = stdin;
				break;

			case 'm':
				if (--argc <= 0)
					usage();
				if (hp >= &dhosts[NHOSTS-2]) {
					fprintf(stderr, "rdist: too many destination hosts\n");
					exit(1);
				}
				*hp++ = *++argv;
				break;

			case 'd':
				if (--argc <= 0)
					usage();
				define(*++argv);
				break;

			case 'D':
				debug++;
				break;

			case 'c':
				cmdargs++;
				break;

			case 'n':
				if (options & VERIFY) {
					printf("rdist: -n overrides -v\n");
					options &= ~VERIFY;
				}
				nflag++;
				break;

			case 'q':
				qflag++;
				break;

			case 'b':
				options |= COMPARE;
				break;

			case 'R':
				options |= REMOVE;
				break;

			case 'v':
				if (nflag) {
					printf("rdist: -n overrides -v\n");
					break;
				}
				options |= VERIFY;
				break;

			case 'w':
				options |= WHOLE;
				break;

			case 'y':
				options |= YOUNGER;
				break;

			case 'h':
				options |= FOLLOW;
				break;

			case 'i':
				options |= IGNLNKS;
				break;

			default:
				usage();
			}
	}
	*hp = NULL;

#if	defined(DIRECT_RCMD)
	seteuid(userid);
#else	/* DIRECT_RCMD */
	if (!iamremote && getuid() != geteuid()) {
		error("This version of rdist should not be installed setuid.\n");
		exit(1);
	}
#endif	/* DIRECT_RCMD */

	if (mktemp(tempfile) == NULL)
		fatal("cannot get temp file\n");

	if (iamremote) {
		server();
		exit(nerrs != 0);
	}

	if (cmdargs)
		docmdargs(argc, argv);
	else {
		if (fin == NULL) {
			if (distfile == NULL) {
				if ((fin = fopen("distfile","r")) == NULL)
					fin = fopen("Distfile", "r");
			} else
				fin = fopen(distfile, "r");
			if (fin == NULL) {
				perror(distfile ? distfile : "distfile");
				exit(1);
			}
		}
		yyparse();
		if (nerrs == 0)
			docmds(dhosts, argc, argv);
	}

	exit(nerrs != 0);
}

static void
usage()
{
	printf(
	    "usage: rdist [-bhinqRvwy] [-d var=value] [-f distfile] [-m host] [name ...]\n"
	    "       rdist [-bhinqRvwy] -c name ...  [login@@]host[:dest]\n");
	exit(1);
}

/*
 * rcp like interface for distributing files.
 */
static void
docmdargs(nargs, args)
	int nargs;
	char *args[];
{
	struct namelist *nl, *prev;
	char *cp;
	struct namelist *files, *hosts;
	struct subcmd *cmds;
	char *dest;
	static struct namelist tnl = { NULL, NULL };
	int i;

	if (nargs < 2)
		usage();

	prev = NULL;
	for (i = 0; i < nargs - 1; i++) {
		nl = makenl(args[i]);
		if (prev == NULL)
			files = prev = nl;
		else {
			prev->n_next = nl;
			prev = nl;
		}
	}

	cp = args[i];
	if ((dest = strchr(cp, ':')) != NULL)
		*dest++ = '\0';
	tnl.n_name = cp;
	hosts = expand(&tnl, E_ALL);
	if (nerrs)
		exit(1);

	if (dest == NULL || *dest == '\0')
		cmds = NULL;
	else {
		cmds = makesubcmd(INSTALL);
		cmds->sc_options = options;
		cmds->sc_name = dest;
	}

	if (debug) {
		printf("docmdargs()\nfiles = ");
		prnames(files);
		printf("hosts = ");
		prnames(hosts);
	}
	insert(NULL, files, hosts, cmds);
	docmds(NULL, 0, NULL);
}

/*
 * Print a list of NAME blocks (mostly for debugging).
 */
void
prnames(nl)
	struct namelist *nl;
{
	printf("( ");
	while (nl != NULL) {
		printf("%s ", nl->n_name);
		nl = nl->n_next;
	}
	printf(")\n");
}
@


1.22
log
@Correct the spelling of "transferred" and "transferring"

from Tobias Ulmer (tobiasu at tmux.org); ok jmc@@, krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.21 2009/10/27 23:59:41 deraadt Exp $	*/
@


1.21
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.20 2007/09/27 17:08:58 sobrado Exp $	*/
d51 1
a51 1
int	iamremote;	/* act as remote server for transfering files */
@


1.20
log
@"mailling" -> "mailing", from Jung's list; while here, some spacing fixes

ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.19 2007/04/14 21:44:06 sobrado Exp $	*/
a30 11

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1983, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
/* from: static char sccsid[] = "@@(#)main.c	8.1 (Berkeley) 6/9/93"; */
static char *rcsid = "$OpenBSD: main.c,v 1.19 2007/04/14 21:44:06 sobrado Exp $";
#endif /* not lint */
@


1.19
log
@sorts the options in both the synopsis and usage()

ok by jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.18 2003/06/03 02:56:14 millert Exp $	*/
d40 1
a40 1
static char *rcsid = "$OpenBSD: main.c,v 1.18 2003/06/03 02:56:14 millert Exp $";
d211 2
a212 2
			if(distfile == NULL) {
				if((fin = fopen("distfile","r")) == NULL)
@


1.18
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.17 2003/04/06 04:15:31 millert Exp $	*/
d40 1
a40 1
static char *rcsid = "$OpenBSD: main.c,v 1.17 2003/04/06 04:15:31 millert Exp $";
d232 3
a234 2
	printf("Usage: rdist [-nqbhirvwyD] [-f distfile] [-d var=value] [-m host] [file ...]\n");
	printf("or: rdist [-nqbhirvwyD] -c source [...] machine[:dest]\n");
@


1.17
log
@o use MAXHOSTNAMELEN, MAXPATHLEN and MAXLOGNAME instead of arbitrary sizes
o tempfile[] was 2 bytes larger than it needs to be since sizeof(foo)
  already includes a byte for the NUL.
krw@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.16 2003/04/05 17:18:26 deraadt Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d40 1
a40 1
static char *rcsid = "$OpenBSD: main.c,v 1.16 2003/04/05 17:18:26 deraadt Exp $";
@


1.16
log
@string fixes; ok henning miod
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.15 2002/06/18 23:49:15 deraadt Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.15 2002/06/18 23:49:15 deraadt Exp $";
d59 1
a59 1
char	tempfile[sizeof _PATH_TMP + sizeof _RDIST_TMP + 1];
d70 1
a70 1
char	host[32];	/* host name */
d72 2
a73 2
char	user[40];	/* user's name */
char	homedir[128];	/* user's home directory */
@


1.15
log
@pull in missing includes
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.14 2002/06/12 06:07:16 mpech Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.14 2002/06/12 06:07:16 mpech Exp $";
d72 1
a72 1
char	user[10];	/* user's name */
d97 2
a98 2
	strcpy(user, pw->pw_name);
	strcpy(homedir, pw->pw_dir);
d101 2
a102 2
	strcpy(tempfile, _PATH_TMP);
	strcat(tempfile, _RDIST_TMP);
@


1.14
log
@a real pid_t cleanup.

espie@@ ok for make/,
deraadt@@ one extra eye,
millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.13 2002/06/09 21:11:22 hin Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.13 2002/06/09 21:11:22 hin Exp $";
d48 1
@


1.13
log
@Remove private unused version of warn().
Replave private basename() with the real one.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.12 2002/02/19 19:39:38 millert Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.12 2002/02/19 19:39:38 millert Exp $";
d73 2
a74 2
int	userid;		/* user's user ID */
int	groupid;	/* user's group ID */
@


1.12
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.11 2002/02/16 21:27:50 millert Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.11 2002/02/16 21:27:50 millert Exp $";
d102 1
a102 1
	tempname = xbasename(tempfile);
a308 27
}

void
warn(const char *fmt, ...)
{
	extern int yylineno;
	va_list ap;

	va_start(ap, fmt);
	(void)fprintf(stderr, "rdist: line %d: Warning: ", yylineno);
	(void)vfprintf(stderr, fmt, ap);
	(void)fprintf(stderr, "\n");
	va_end(ap);
}

/*
 * Private version of basename()
 */
char *xbasename(path)
	char *path;
{
	char *cp;

	if (cp = strrchr(path, '/'))
		return(cp+1);
	else
		return(path);
@


1.11
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.10 2001/11/19 19:02:15 mpech Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.10 2001/11/19 19:02:15 mpech Exp $";
d47 1
a310 6
#ifdef __STDC__
#include <stdarg.h>
#else
#include <varargs.h>
#endif

a311 1
#ifdef __STDC__
a312 5
#else
warn(fmt, va_alist)
	char *fmt;
        va_dcl
#endif
d316 1
a316 1
#ifdef __STDC__
a317 3
#else
	va_start(ap);
#endif
@


1.10
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.9 2001/07/18 17:17:39 pvalchev Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.9 2001/07/18 17:17:39 pvalchev Exp $";
d78 2
a79 2
static void usage __P((void));
static void docmdargs __P((int, char *[]));
@


1.9
log
@-Wall cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.8 1997/07/25 21:05:36 mickey Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.8 1997/07/25 21:05:36 mickey Exp $";
d86 1
a86 1
	register char *arg;
d247 2
a248 2
	register struct namelist *nl, *prev;
	register char *cp;
d300 1
a300 1
	register struct namelist *nl;
d344 1
a344 1
	register char *cp;
@


1.8
log
@#if __STDC__ --> #ifdef __STDC__
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.7 1997/04/04 18:41:31 deraadt Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.7 1997/04/04 18:41:31 deraadt Exp $";
d87 1
a87 1
	int cmdargs = 0, fd;
@


1.7
log
@when mktemp() is hard to fix, use 10 X
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.6 1996/09/16 16:38:28 millert Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.6 1996/09/16 16:38:28 millert Exp $";
d310 1
a310 1
#if __STDC__
d317 1
a317 1
#if __STDC__
d327 1
a327 1
#if __STDC__
@


1.6
log
@/tmp// -> /tmp
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.5 1996/08/22 20:33:22 millert Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.5 1996/08/22 20:33:22 millert Exp $";
d56 1
a56 1
#define _RDIST_TMP	"rdistXXXXXX"
@


1.5
log
@NetBSD changes: use POSIX regex routines and fix more buff oflow
Can't use mkstemp() so go back to mktemp and open(2) with sane flags.
Now uses rcmdsh and fixes memory leak in NetBSD POSIX regex support
(leak fixed by Charles Amos <amos@@umiacs.umd.edu>).
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.4 1996/07/30 20:34:55 millert Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.4 1996/07/30 20:34:55 millert Exp $";
d56 1
a56 1
#define _RDIST_TMP	"/rdistXXXXXX"
@


1.4
log
@use mkstemp() instead of mktemp() to close temp file race.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.3 1996/07/19 21:57:33 millert Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.3 1996/07/19 21:57:33 millert Exp $";
d87 1
a87 1
	int cmdargs = 0;
d200 3
@


1.3
log
@oldrdist now uses rsh so doesn't need to be setuid.
Incorporates some changes from Chris Siebenmann <cks@@utcc.utoronto.ca>
and rdist 6.1.2.  Also fixes at least one possible core dump and
uses strr?chr() instead of r?index().
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.2 1996/06/26 05:37:39 deraadt Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.2 1996/06/26 05:37:39 deraadt Exp $";
a199 1
	mktemp(tempfile);
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: main.c,v 1.1 1996/02/03 12:12:00 dm Exp $";
d101 1
a101 4
	if ((tempname = rindex(tempfile, '/')) != 0)
		tempname++;
	else
		tempname = tempfile;
d192 1
d194 6
d216 1
a216 1
			if(fin == NULL) {
d268 1
a268 1
	if ((dest = index(cp, ':')) != NULL)
d334 14
@


1.1
log
@rdist 6.1.1
@
text
@d1 2
d44 1
a44 1
static char *rcsid = "$Id: main.c,v 1.1.1.1 1995/10/18 08:45:59 deraadt Exp $";
@
