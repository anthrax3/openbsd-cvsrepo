head	1.64;
access;
symbols
	OPENBSD_6_2:1.64.0.4
	OPENBSD_6_2_BASE:1.64
	OPENBSD_6_1:1.63.0.8
	OPENBSD_6_1_BASE:1.63
	OPENBSD_6_0:1.63.0.4
	OPENBSD_6_0_BASE:1.63
	OPENBSD_5_9:1.63.0.2
	OPENBSD_5_9_BASE:1.63
	OPENBSD_5_8:1.62.0.8
	OPENBSD_5_8_BASE:1.62
	OPENBSD_5_7:1.62.0.2
	OPENBSD_5_7_BASE:1.62
	OPENBSD_5_6:1.62.0.4
	OPENBSD_5_6_BASE:1.62
	OPENBSD_5_5:1.61.0.4
	OPENBSD_5_5_BASE:1.61
	OPENBSD_5_4:1.60.0.2
	OPENBSD_5_4_BASE:1.60
	OPENBSD_5_3:1.59.0.10
	OPENBSD_5_3_BASE:1.59
	OPENBSD_5_2:1.59.0.8
	OPENBSD_5_2_BASE:1.59
	OPENBSD_5_1_BASE:1.59
	OPENBSD_5_1:1.59.0.6
	OPENBSD_5_0:1.59.0.4
	OPENBSD_5_0_BASE:1.59
	OPENBSD_4_9:1.59.0.2
	OPENBSD_4_9_BASE:1.59
	OPENBSD_4_8:1.57.0.2
	OPENBSD_4_8_BASE:1.57
	OPENBSD_4_7:1.56.0.2
	OPENBSD_4_7_BASE:1.56
	OPENBSD_4_6:1.55.0.6
	OPENBSD_4_6_BASE:1.55
	OPENBSD_4_5:1.55.0.2
	OPENBSD_4_5_BASE:1.55
	OPENBSD_4_4:1.50.0.6
	OPENBSD_4_4_BASE:1.50
	OPENBSD_4_3:1.50.0.4
	OPENBSD_4_3_BASE:1.50
	OPENBSD_4_2:1.50.0.2
	OPENBSD_4_2_BASE:1.50
	OPENBSD_4_1:1.48.0.2
	OPENBSD_4_1_BASE:1.48
	OPENBSD_4_0:1.46.0.2
	OPENBSD_4_0_BASE:1.46
	OPENBSD_3_9:1.43.0.2
	OPENBSD_3_9_BASE:1.43
	OPENBSD_3_8:1.38.0.4
	OPENBSD_3_8_BASE:1.38
	OPENBSD_3_7:1.38.0.2
	OPENBSD_3_7_BASE:1.38
	OPENBSD_3_6:1.37.0.2
	OPENBSD_3_6_BASE:1.37
	OPENBSD_3_5:1.35.0.2
	OPENBSD_3_5_BASE:1.35
	OPENBSD_3_4:1.34.0.2
	OPENBSD_3_4_BASE:1.34
	OPENBSD_3_3:1.29.0.2
	OPENBSD_3_3_BASE:1.29
	OPENBSD_3_2:1.25.0.2
	OPENBSD_3_2_BASE:1.25
	OPENBSD_3_1:1.23.0.4
	OPENBSD_3_1_BASE:1.23
	OPENBSD_3_0:1.23.0.2
	OPENBSD_3_0_BASE:1.23
	OPENBSD_2_9_BASE:1.21
	OPENBSD_2_9:1.21.0.2
	OPENBSD_2_8:1.19.0.2
	OPENBSD_2_8_BASE:1.19
	OPENBSD_2_7:1.16.0.2
	OPENBSD_2_7_BASE:1.16
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.64
date	2017.06.15.13.48.42;	author bcallah;	state Exp;
branches;
next	1.63;
commitid	cJah5U98w19KunxL;

1.63
date	2015.09.14.20.06.58;	author schwarze;	state Exp;
branches;
next	1.62;
commitid	r87YNrjEWwl7OkJ0;

1.62
date	2014.04.14.07.00.47;	author jmc;	state Exp;
branches;
next	1.61;

1.61
date	2014.01.12.09.33.32;	author jmc;	state Exp;
branches;
next	1.60;

1.60
date	2013.07.16.00.07.52;	author schwarze;	state Exp;
branches;
next	1.59;

1.59
date	2010.10.21.13.20.51;	author jmc;	state Exp;
branches;
next	1.58;

1.58
date	2010.09.19.21.30.04;	author jmc;	state Exp;
branches;
next	1.57;

1.57
date	2010.03.22.20.40.44;	author espie;	state Exp;
branches;
next	1.56;

1.56
date	2009.10.14.17.19.47;	author sthen;	state Exp;
branches;
next	1.55;

1.55
date	2009.02.08.17.15.10;	author jmc;	state Exp;
branches;
next	1.54;

1.54
date	2008.08.22.01.06.31;	author jmc;	state Exp;
branches;
next	1.53;

1.53
date	2008.08.21.21.02.28;	author espie;	state Exp;
branches;
next	1.52;

1.52
date	2008.08.16.12.26.07;	author espie;	state Exp;
branches;
next	1.51;

1.51
date	2008.08.16.12.21.46;	author espie;	state Exp;
branches;
next	1.50;

1.50
date	2007.05.31.19.20.12;	author jmc;	state Exp;
branches;
next	1.49;

1.49
date	2007.05.30.04.41.34;	author jmc;	state Exp;
branches;
next	1.48;

1.48
date	2006.12.12.21.16.18;	author jmc;	state Exp;
branches;
next	1.47;

1.47
date	2006.12.12.09.24.22;	author grunk;	state Exp;
branches;
next	1.46;

1.46
date	2006.08.29.18.40.49;	author mbalmer;	state Exp;
branches;
next	1.45;

1.45
date	2006.03.23.10.52.23;	author jmc;	state Exp;
branches;
next	1.44;

1.44
date	2006.03.20.20.27.45;	author espie;	state Exp;
branches;
next	1.43;

1.43
date	2005.09.30.20.34.26;	author jaredy;	state Exp;
branches;
next	1.42;

1.42
date	2005.09.07.13.59.02;	author jmc;	state Exp;
branches;
next	1.41;

1.41
date	2005.09.07.13.22.24;	author jmc;	state Exp;
branches;
next	1.40;

1.40
date	2005.09.06.15.50.19;	author espie;	state Exp;
branches;
next	1.39;

1.39
date	2005.09.06.15.33.21;	author espie;	state Exp;
branches;
next	1.38;

1.38
date	2005.03.02.10.12.15;	author espie;	state Exp;
branches;
next	1.37;

1.37
date	2004.05.25.20.24.24;	author jmc;	state Exp;
branches;
next	1.36;

1.36
date	2004.05.25.18.41.17;	author espie;	state Exp;
branches;
next	1.35;

1.35
date	2004.02.17.19.28.31;	author miod;	state Exp;
branches;
next	1.34;

1.34
date	2003.06.29.11.04.03;	author espie;	state Exp;
branches;
next	1.33;

1.33
date	2003.06.27.21.22.52;	author jmc;	state Exp;
branches;
next	1.32;

1.32
date	2003.06.10.09.12.10;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2003.06.03.02.56.10;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	2003.04.14.06.39.24;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2003.02.18.07.43.36;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2003.02.16.17.16.45;	author espie;	state Exp;
branches;
next	1.27;

1.27
date	2003.01.07.18.34.13;	author mpech;	state Exp;
branches;
next	1.26;

1.26
date	2003.01.05.10.10.44;	author pvalchev;	state Exp;
branches;
next	1.25;

1.25
date	2002.04.28.14.37.12;	author espie;	state Exp;
branches;
next	1.24;

1.24
date	2002.04.18.18.57.23;	author espie;	state Exp;
branches;
next	1.23;

1.23
date	2001.09.29.11.56.18;	author espie;	state Exp;
branches;
next	1.22;

1.22
date	2001.09.27.11.40.33;	author espie;	state Exp;
branches;
next	1.21;

1.21
date	2000.11.10.05.10.33;	author aaron;	state Exp;
branches;
next	1.20;

1.20
date	2000.11.09.17.52.20;	author aaron;	state Exp;
branches;
next	1.19;

1.19
date	2000.07.27.17.44.33;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2000.07.24.23.08.25;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2000.07.06.04.06.55;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	2000.04.17.02.32.43;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	2000.04.12.21.47.48;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	2000.03.23.21.39.54;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	2000.03.23.21.10.17;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	2000.03.18.01.06.55;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2000.03.11.15.54.44;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2000.03.10.19.07.20;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.01.11.14.06.11;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	99.11.17.15.31.53;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	99.09.14.08.21.37;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	99.09.06.13.07.17;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	98.09.26.19.55.02;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	97.02.12.23.32.31;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.36.13;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.02.57.00;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.35;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.64
log
@Add -E flag (make warnings fatal), following the behavior of GNU m4 1.4.9+
Help and direction millert@@ espie@@ anton@@ deraadt@@

ok espie@@
@
text
@.\"	@@(#) $OpenBSD: m4.1,v 1.63 2015/09/14 20:06:58 schwarze Exp $
.\"
.\" Copyright (c) 1989, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Ozan Yigit at York University.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: September 14 2015 $
.Dt M4 1
.Os
.Sh NAME
.Nm m4
.Nd macro language processor
.Sh SYNOPSIS
.Nm
.Op Fl EgPs
.Oo
.Sm off
.Fl D Ar name Op No = Ar value
.Sm on
.Oc
.Op Fl d Ar flags
.Op Fl I Ar dirname
.Op Fl o Ar filename
.Op Fl t Ar macro
.Op Fl U Ns Ar name
.Op Ar
.Sh DESCRIPTION
The
.Nm
utility is a macro processor that can be used as a front end to any
language (e.g., C, ratfor, fortran, lex, and yacc).
If no input files are given,
.Nm
reads from the standard input,
otherwise files specified on the command line are
processed in the given order.
Input files can be regular files, files in the m4 include paths, or a
single dash
.Pq Sq - ,
denoting standard input.
.Nm
writes
the processed text to the standard output, unless told otherwise.
.Pp
Macro calls have the form name(argument1[, argument2, ..., argumentN]).
.Pp
There cannot be any space following the macro name and the open
parenthesis
.Pq Sq \&( .
If the macro name is not followed by an open
parenthesis it is processed with no arguments.
.Pp
Macro names consist of a leading alphabetic or underscore
possibly followed by alphanumeric or underscore characters, e.g.,
valid macro names match the pattern
.Dq [a-zA-Z_][a-zA-Z0-9_]* .
.Pp
In arguments to macros, leading unquoted space, tab, and newline
.Pq Sq \en
characters are ignored.
To quote strings, use left and right single quotes
.Pq e.g., Sq \ \&this is a string with a leading space .
You can change the quote characters with the
.Ic changequote
built-in macro.
.Pp
Most built-ins don't make any sense without arguments, and hence are not
recognized as special when not followed by an open parenthesis.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl D Ns Ar name Ns Op = Ns Ar value
Define the symbol
.Ar name
to have some value (or
.Dv NULL ) .
.It Fl d Ar "flags"
Set trace flags.
.Ar flags
may hold the following:
.Bl -tag -width Ds
.It Ar a
print macro arguments.
.It Ar c
print macro expansion over several lines.
.It Ar e
print result of macro expansion.
.It Ar f
print filename location.
.It Ar l
print line number.
.It Ar q
quote arguments and expansion with the current quotes.
.It Ar t
start with all macros traced.
.It Ar x
number macro expansions.
.It Ar V
turn on all options.
.El
.Pp
By default, trace is set to
.Qq eq .
.It Fl E
Set warnings to be fatal.
When a single
.Fl E
flag is specified, if warnings are issued, execution continues but
.Nm
will exit with a non-zero exit status.
When multiple
.Fl E
flags are specified, execution will halt upon issuing the first warning and
.Nm
will exit with a non-zero exit status.
This behaviour matches GNU-m4 1.4.9 and later.
.It Fl g
Activate GNU-m4 compatibility mode.
In this mode, translit handles simple character
ranges (e.g., a-z), regular expressions mimic emacs behavior,
multiple m4wrap calls are handled as a stack,
the number of diversions is unlimited,
empty names for macro definitions are allowed,
and eval understands
.Sq 0rbase:value
numbers.
.It Fl I Ar "dirname"
Add directory
.Ar dirname
to the include path.
.It Fl o Ar filename
Send trace output to
.Ar filename .
.It Fl P
Prefix all built-in macros with
.Sq m4_ .
For example, instead of writing
.Ic define ,
use
.Ic m4_define .
.It Fl s
Output line synchronization directives, suitable for
.Xr cpp 1 .
.It Fl t Ar macro
Turn tracing on for
.Ar macro .
.It Fl "U" Ns Ar "name"
Undefine the symbol
.Ar name .
.El
.Sh SYNTAX
.Nm
provides the following built-in macros.
They may be redefined, losing their original meaning.
Return values are null unless otherwise stated.
.Bl -tag -width changequote
.It Fn builtin name
Calls a built-in by its
.Fa name ,
overriding possible redefinitions.
.It Fn changecom startcomment endcomment
Changes the start comment and end comment sequences.
Comment sequences may be up to five characters long.
The default values are the hash sign
and the newline character.
.Bd -literal -offset indent
# This is a comment
.Ed
.Pp
With no arguments, comments are turned off.
With one single argument, the end comment sequence is set
to the newline character.
.It Fn changequote beginquote endquote
Defines the open quote and close quote sequences.
Quote sequences may be up to five characters long.
The default values are the backquote character and the quote
character.
.Bd -literal -offset indent
`Here is a quoted string'
.Ed
.Pp
With no arguments, the default quotes are restored.
With one single argument, the close quote sequence is set
to the newline character.
.It Fn decr arg
Decrements the argument
.Fa arg
by 1.
The argument
.Fa arg
must be a valid numeric string.
.It Fn define name value
Define a new macro named by the first argument
.Fa name
to have the
value of the second argument
.Fa value .
Each occurrence of
.Sq $n
(where
.Ar n
is 0 through 9) is replaced by the
.Ar n Ns 'th
argument.
.Sq $0
is the name of the calling macro.
Undefined arguments are replaced by a null string.
.Sq $#
is replaced by the number of arguments;
.Sq $*
is replaced by all arguments comma separated;
.Sq $@@
is the same as
.Sq $*
but all arguments are quoted against further expansion.
.It Fn defn name ...
Returns the quoted definition for each argument.
This can be used to rename
macro definitions (even for built-in macros).
.It Fn divert num
There are 10 output queues (numbered 0-9).
At the end of processing
.Nm
concatenates all the queues in numerical order to produce the
final output.
Initially the output queue is 0.
The divert
macro allows you to select a new output queue (an invalid argument
passed to divert causes output to be discarded).
.It Ic divnum
Returns the current output queue number.
.It Ic dnl
Discard input characters up to and including the next newline.
.It Fn dumpdef name ...
Prints the names and definitions for the named items, or for everything
if no arguments are passed.
.It Fn errprint msg
Prints the first argument on the standard error output stream.
.It Fn esyscmd cmd
Passes its first argument to a shell and returns the shell's standard output.
Note that the shell shares its standard input and standard error with
.Nm .
.It Fn eval expr[,radix[,minimum]]
Computes the first argument as an arithmetic expression using 32-bit
arithmetic.
Operators are the standard C ternary, arithmetic, logical,
shift, relational, bitwise, and parentheses operators.
You can specify
octal, decimal, and hexadecimal numbers as in C.
The optional second argument
.Fa radix
specifies the radix for the result and the optional third argument
.Fa minimum
specifies the minimum number of digits in the result.
.It Fn expr expr
This is an alias for
.Ic eval .
.It Fn format formatstring arg1 ...
Returns
.Fa formatstring
with escape sequences substituted with
.Fa arg1
and following arguments, in a way similar to
.Xr printf 3 .
This built-in is only available in GNU-m4 compatibility mode, and the only
parameters implemented are there for autoconf compatibility:
left-padding flag, an optional field width, a maximum field width,
*-specified field widths, and the %s and %c data type.
.It Fn ifdef name yes no
If the macro named by the first argument is defined then return the second
argument, otherwise the third.
If there is no third argument, the value is
.Dv NULL .
The word
.Qq unix
is predefined.
.It Fn ifelse a b yes ...
If the first argument
.Fa a
matches the second argument
.Fa b
then
.Fn ifelse
returns
the third argument
.Fa yes .
If the match fails the three arguments are
discarded and the next three arguments are used until there is
zero or one arguments left, either this last argument or
.Dv NULL
is returned if no other matches were found.
.It Fn include name
Returns the contents of the file specified in the first argument.
If the file is not found as is, look through the include path:
first the directories specified with
.Fl I
on the command line, then the environment variable
.Ev M4PATH ,
as a colon-separated list of directories.
Include aborts with an error message if the file cannot be included.
.It Fn incr arg
Increments the argument by 1.
The argument must be a valid numeric string.
.It Fn index string substring
Returns the index of the second argument in the first argument (e.g.,
.Ic index(the quick brown fox jumped, fox)
returns 16).
If the second
argument is not found index returns \-1.
.It Fn indir macro arg1 ...
Indirectly calls the macro whose name is passed as the first argument,
with the remaining arguments passed as first, ... arguments.
.It Fn len arg
Returns the number of characters in the first argument.
Extra arguments
are ignored.
.It Fn m4exit code
Immediately exits with the return value specified by the first argument,
0 if none.
.It Fn m4wrap todo
Allows you to define what happens at the final
.Dv EOF ,
usually for cleanup purposes (e.g.,
.Ic m4wrap("cleanup(tempfile)")
causes the macro cleanup to be
invoked after all other processing is done).
.Pp
Multiple calls to
.Fn m4wrap
get inserted in sequence at the final
.Dv EOF .
.It Fn maketemp template
Like
.Ic mkstemp .
.It Fn mkstemp template
Invokes
.Xr mkstemp 3
on the first argument, and returns the modified string.
This can be used to create unique
temporary file names.
.It Fn paste file
Includes the contents of the file specified by the first argument without
any macro processing.
Aborts with an error message if the file cannot be
included.
.It Fn patsubst string regexp replacement
Substitutes a regular expression in a string with a replacement string.
Usual substitution patterns apply: an ampersand
.Pq Sq \&&
is replaced by the string matching the regular expression.
The string
.Sq \e# ,
where
.Sq #
is a digit, is replaced by the corresponding back-reference.
.It Fn popdef arg ...
Restores the
.Ic pushdef Ns ed
definition for each argument.
.It Fn pushdef macro def
Takes the same arguments as
.Ic define ,
but it saves the definition on a
stack for later retrieval by
.Fn popdef .
.It Fn regexp string regexp replacement
Finds a regular expression in a string.
If no further arguments are given,
it returns the first match position or \-1 if no match.
If a third argument
is provided, it returns the replacement string, with sub-patterns replaced.
.It Fn shift arg1 ...
Returns all but the first argument, the remaining arguments are
quoted and pushed back with commas in between.
The quoting
nullifies the effect of the extra scan that will subsequently be
performed.
.It Fn sinclude file
Similar to
.Ic include ,
except it ignores any errors.
.It Fn spaste file
Similar to
.Fn paste ,
except it ignores any errors.
.It Fn substr string offset length
Returns a substring of the first argument starting at the offset specified
by the second argument and the length specified by the third argument.
If no third argument is present it returns the rest of the string.
.It Fn syscmd cmd
Passes the first argument to the shell.
Nothing is returned.
.It Ic sysval
Returns the return value from the last
.Ic syscmd .
.It Fn traceon arg ...
Enables tracing of macro expansions for the given arguments, or for all
macros if no argument is given.
.It Fn traceoff arg ...
Disables tracing of macro expansions for the given arguments, or for all
macros if no argument is given.
.It Fn translit string mapfrom mapto
Transliterate the characters in the first argument from the set
given by the second argument to the set given by the third.
You cannot use
.Xr tr 1
style abbreviations.
.It Fn undefine name1 ...
Removes the definition for the macros specified by its arguments.
.It Fn undivert arg ...
Flushes the named output queues (or all queues if no arguments).
.It Ic unix
A pre-defined macro for testing the OS platform.
.It Ic __line__
Returns the current file's line number.
.It Ic __file__
Returns the current file's name.
.El
.Sh EXIT STATUS
.Ex -std m4
.Pp
But note that the
.Ic m4exit
macro can modify the exit status, as can the
.Fl E
flag.
.Sh STANDARDS
The
.Nm
utility is compliant with the
.St -p1003.1-2008
specification.
.Pp
The flags
.Op Fl dEgIPot
and the macros
.Ic builtin ,
.Ic esyscmd ,
.Ic expr ,
.Ic format ,
.Ic indir ,
.Ic paste ,
.Ic patsubst ,
.Ic regexp ,
.Ic spaste ,
.Ic unix ,
.Ic __line__ ,
and
.Ic __file__
are extensions to that specification.
.Pp
.Ic maketemp
is not supposed to be a synonym for
.Ic mkstemp ,
but instead to be an insecure temporary file name creation function.
It is marked by
.St -p1003.1-2008
as being obsolescent and should not be used if portability is a concern.
.Pp
The output format of
.Ic traceon
and
.Ic dumpdef
are not specified in any standard,
are likely to change and should not be relied upon.
The current format of tracing is closely modelled on
.Nm gnu-m4 ,
to allow
.Nm autoconf
to work.
.Pp
The built-ins
.Ic pushdef
and
.Ic popdef
handle macro definitions as a stack.
However,
.Ic define
interacts with the stack in an undefined way.
In this implementation,
.Ic define
replaces the top-most definition only.
Other implementations may erase all definitions on the stack instead.
.Pp
All built-ins do expand without arguments in many other
.Nm .
.Pp
Many other
.Nm
have dire size limitations with respect to buffer sizes.
.Sh AUTHORS
.An -nosplit
.An Ozan Yigit Aq Mt oz@@sis.yorku.ca
and
.An Richard A. O'Keefe Aq Mt ok@@goanna.cs.rmit.OZ.AU .
.Pp
GNU-m4 compatibility extensions by
.An Marc Espie Aq Mt espie@@cvs.openbsd.org .
@


1.63
log
@Avoid .Ns right after .Pf, it's pointless.
In some cases, do additional cleanup in the immediate vicinity.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.62 2014/04/14 07:00:47 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: April 14 2014 $
d41 1
a41 1
.Op Fl gPs
d130 13
d450 3
a452 1
macro can modify the exit status.
d461 1
a461 1
.Op Fl dgIPot
@


1.62
log
@update STANDARDS somewhat, and some macro simplification;
ok millert sobrado
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.61 2014/01/12 09:33:32 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: January 12 2014 $
d98 1
a98 3
.It Fl D Ns Ar name Ns Oo
.Pf = Ns Ar value
.Oc
@


1.61
log
@expand the "eval" description a little; from wiz@@netbsd
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.60 2013/07/16 00:07:52 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: July 16 2013 $
a49 1
.Bk -words
a52 1
.Ek
d88 1
a88 3
.Po e.g.,\ \&
.Sq "\ this is a string with a leading space"
.Pc .
d443 1
a443 1
utility is mostly compliant with the
d448 1
a448 1
.Op Fl dgIot
d469 3
a471 1
The change causes no known compatibility issues.
d473 3
a475 1
The output format of tracing and of
@


1.60
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.59 2010/10/21 13:20:51 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: October 21 2010 $
d262 1
a262 1
.It Fn eval expr
d269 4
a272 2
The second argument (if any)
specifies the radix for the result and the third argument (if any)
@


1.59
log
@more EXIT STATUS bits; from Daniel Dickman
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.58 2010/09/19 21:30:04 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: September 19 2010 $
d504 1
a504 1
.An Ozan Yigit Aq oz@@sis.yorku.ca
d506 1
a506 1
.An Richard A. O'Keefe Aq ok@@goanna.cs.rmit.OZ.AU .
d509 1
a509 1
.An Marc Espie Aq espie@@cvs.openbsd.org .
@


1.58
log
@more wacky macro fixing;
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.57 2010/03/22 20:40:44 espie Exp $
d33 1
a33 1
.Dd $Mdocdate: March 22 2010 $
d436 6
@


1.57
log
@add more gnum4 support: regexps do weird things with empty patterns (this
is required for newer autoconf).
fix the tokenizer for gnu extensions, allowing digits out of range is
ridiculous.
add POSIX2008 mkstemp and document it (also documenting that mktemp is
safe, not posix...)
tidy the manpage, do extra .Nm m4 -> .Nm.
okay otto@@, miod@@, jmc@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.56 2009/10/14 17:19:47 sthen Exp $
d33 1
a33 1
.Dd $Mdocdate: October 14 2009 $
d77 1
a77 1
.Pq Sq ( .
@


1.56
log
@Support the -P option from gnu m4, which prefixes builtins with the
string m4_. Feedback from jmc@@, Tobias Ulmer, Matthew Dempsky - thanks!
ok espie@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.55 2009/02/08 17:15:10 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: February 8 2009 $
d40 1
a40 1
.Nm m4
d57 1
a57 1
.Nm m4
d61 1
a61 1
.Nm m4
d69 1
a69 1
.Nm m4
d171 1
a171 1
.Nm m4
d242 1
a242 1
.Nm m4
d261 1
a261 1
.Nm m4 .
d350 3
d439 1
a439 1
utility is compliant with the
d461 6
d491 1
a491 1
.Nm m4 .
@


1.55
log
@bump the posix reference in STANDARDS to IEEE Std 1003.1-2008, with a few
updates to follow;
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.54 2008/08/22 01:06:31 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: August 22 2008 $
d41 1
a41 1
.Op Fl gs
d153 7
@


1.54
log
@kill trailing whitespace;
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.53 2008/08/21 21:02:28 espie Exp $
d33 1
a33 1
.Dd $Mdocdate: August 21 2008 $
d430 1
a430 1
.St -p1003.1-2004
@


1.53
log
@Document new gnu extensions, okay jmc@@, otto@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.52 2008/08/16 12:26:07 espie Exp $
d33 1
a33 1
.Dd $Mdocdate: August 16 2008 $
d277 1
a277 1
left-padding flag, an optional field width, a maximum field width, 
@


1.52
log
@fix
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.50 2007/05/31 19:20:12 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d141 5
a145 1
and the number of diversions is unlimited.
d275 4
a278 3
This built-in is only available in GNU-m4 compatibility mode, and the
left-padding flag, an optional field width and the %s data type
are the only supported parameters.
@


1.51
log
@argument parsing should only skip spaces outside of parenthesis.
Inside matching parenthesis, keep spaces as is (use chrsave instead of
pbstr, since there's no way it can be a further macro expansion).
Fixes a long-standing issue with autoconf (   --option -> --option),
matches other m4 than gnum4

okay millert@@, fries@@
@
text
@d141 1
a141 5
the number of diversions is unlimited,
empty names for macro definitions are allowed,
and eval understands 
.Sq 0rbase:value 
numbers.
d271 3
a273 3
This built-in is only available in GNU-m4 compatibility mode, and the only
parameters implemented are there for autoconf compatibility:
left-padding flag, an optional field width, a maximum field width, *-specified field widths, and the %s and %c data type.
@


1.50
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.49 2007/05/30 04:41:34 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d141 5
a145 1
and the number of diversions is unlimited.
d275 3
a277 3
This built-in is only available in GNU-m4 compatibility mode, and the
left-padding flag, an optional field width and the %s data type
are the only supported parameters.
@


1.49
log
@- use a consistent text for STANDARDS
- note which options are extensions to POSIX
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.48 2006/12/12 21:16:18 jmc Exp $
d33 1
a33 1
.Dd January 26, 1993
@


1.48
log
@tweak previous, and update usage(); ok grunk
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.47 2006/12/12 09:24:22 grunk Exp $
d422 1
d424 1
a424 1
is expected to be
d426 19
a444 9
compliant,
along with a few extensions taken from
.Nm gnu-m4 .
.Pp
Flags
.Fl I ,
.Fl d ,
.Fl t
are non-standard.
a467 14
.Pp
For portability, one should not use the macros
.Ic builtin ,
.Ic esyscmd ,
.Ic expr ,
.Ic format ,
.Ic indir ,
.Ic paste ,
.Ic patsubst ,
.Ic regexp ,
.Ic spaste ,
.Ic unix ,
.Ic __line__ ,
.Ic __file__ .
@


1.47
log
@mention the fact that m4 also accepts files via cmdline

ok espie@@ jmc@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.46 2006/08/29 18:40:49 mbalmer Exp $
d62 2
a63 1
reads from the standard input, otherwise the files from command line are
@


1.46
log
@fix a typo.  it's esyscmd, not esycmd.

ok jmc
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.45 2006/03/23 10:52:23 jmc Exp $
d53 1
d60 1
d62 9
a70 2
reads from the standard input and writes
the processed text to the standard output.
@


1.45
log
@kill whitespace at eol;
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.44 2006/03/20 20:27:45 espie Exp $
d450 1
a450 1
.Ic esycmd ,
@


1.44
log
@add limited support for format builtin in gnu-m4 mode, because I'm fed
up of patching it away in various autoconf derivatives.

okay miod@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.43 2005/09/30 20:34:26 jaredy Exp $
d255 2
a256 2
Returns 
.Fa formatstring 
d261 2
a262 2
This built-in is only available in GNU-m4 compatibility mode, and the 
left-padding flag, an optional field width and the %s data type 
@


1.43
log
@deploy .An -nosplit; ok jmc
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.42 2005/09/07 13:59:02 jmc Exp $
d254 10
d452 1
@


1.42
log
@tweaks;
ok espie@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.41 2005/09/07 13:22:24 jmc Exp $
d458 1
@


1.41
log
@sort options and sync usage()
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.40 2005/09/06 15:50:19 espie Exp $
d162 1
a162 1
The default values are the pound sign
d403 4
a406 2
follows the Single Unix 3 specification, along with a few extensions taken
from
@


1.40
log
@less diff in -g/not -g.
mentioned by otto@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.39 2005/09/06 15:33:21 espie Exp $
d41 6
d48 1
a48 1
.Op Fl t Ar name
d50 2
a51 5
.Op Fl g
.Op Fl s
.Oo
.Fl D Ns Ar name Ns Op Ar =value
.Oc
d53 1
a53 1
.Op Fl I Ar dirname
d93 1
a93 1
.Ar =value
a98 7
.It Fl "U" Ns Ar "name"
Undefine the symbol
.Ar name .
.It Fl I Ar "dirname"
Add directory
.Ar dirname
to the include path.
a125 6
.It Fl o Ar filename
Send trace output to
.Ar filename .
.It Fl t Ar macro
Turn tracing on for
.Ar macro .
d132 7
d142 6
@


1.39
log
@finally make our m4 SusV3-compliant.

- changecom and changequote have a simple definition (that matches gnu-m4,
coincidentally, so we no longer need two distinct modes for these)

- off-by-one bug in -s, this finally works.

- reorder main parser loop, so that we can use alphabetic constructs in
quotes/comments.

- rename putback to pushback, this matches comments, and makes more sense.

- more uniform (and updated) description of changequote/changecom.

- new, systematic regression tests of comments/quotes.

- framework to test -s: one perl script to reconstitute `full' files with
all line numbers, so that we can verify the output without needing a
complete match.

okay otto@@, fries@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.38 2005/03/02 10:12:15 espie Exp $
d138 1
a138 2
In this mode, changequote with
two empty parameters deactivates quotes, translit handles simple character
@


1.38
log
@let m4wrap handle multiple wraps, both in normal and gnu-mode.
based on Noah Misch's bug report.
okay otto, jmc.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.37 2004/05/25 20:24:24 jmc Exp $
d158 3
a160 3
Change the start and end comment sequences.
The default is the pound sign
.Pq Sq #
d162 7
a168 2
With no arguments comments are turned off.
The maximum length for a comment marker is five characters.
d170 11
a180 4
Defines the quote symbols to be the first and second arguments.
The symbols may be up to five characters long.
If no arguments are
given it restores the default open and close single quotes.
d401 1
a401 1
follows the Single Unix 2 specification, along with a few extensions taken
a404 8
The
.Fl s
option
.Po
.Xr cpp 1 's
#line directives
.Pc
is currently not supported.
@


1.37
log
@kill whitespace;
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.36 2004/05/25 18:41:17 espie Exp $
d141 1
d298 5
@


1.36
log
@name parameters for built-ins, so that we get less awkward phrasing.
Leave out the changed description of changecom/changequote for later.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.35 2004/02/17 19:28:31 miod Exp $
d153 2
a154 2
Calls a built-in by its 
.Fa name , 
d169 2
a170 2
Decrements the argument 
.Fa arg 
d172 1
a172 1
The argument 
d176 2
a177 2
Define a new macro named by the first argument 
.Fa name 
d248 1
a248 1
If the first argument 
d250 1
a250 1
matches the second argument 
@


1.35
log
@Change the maketemp() description into what it really does.
ok espie@@ jmc@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.34 2003/06/29 11:04:03 espie Exp $
d151 6
a156 4
.Bl -tag -width changequotexxx
.It Ic builtin
Calls a built-in by its name, overriding possible redefinitions.
.It Ic changecom
d163 1
a163 1
.It Ic changequote
d168 13
a180 6
.It Ic decr
Decrements the argument by 1.
The argument must be a valid numeric string.
.It Ic define
Define a new macro named by the first argument to have the
value of the second argument.
d199 1
a199 1
.It Ic defn
d203 1
a203 1
.It Ic divert
d217 1
a217 1
.It Ic dumpdef
d220 1
a220 1
.It Ic errprint
d222 1
a222 1
.It Ic esyscmd
d226 1
a226 1
.It Ic eval
d236 1
a236 1
.It Ic expr
d239 1
a239 1
.It Ic ifdef
d247 7
a253 3
.It Ic ifelse
If the first argument matches the second argument then
.Ic ifelse
d255 2
a256 1
the third argument.
d262 1
a262 1
.It Ic include
d271 1
a271 1
.It Ic incr
d274 1
a274 1
.It Ic index
d280 1
a280 1
.It Ic indir
d283 1
a283 1
.It Ic len
d287 1
a287 1
.It Ic m4exit
d290 1
a290 1
.It Ic m4wrap
d297 1
a297 1
.It Ic maketemp
d303 1
a303 1
.It Ic paste
d308 1
a308 1
.It Ic patsubst
d318 1
a318 1
.It Ic popdef
d322 1
a322 1
.It Ic pushdef
d327 2
a328 2
.Ic popdef .
.It Ic regexp
d334 1
a334 1
.It Ic shift
d340 1
a340 1
.It Ic sinclude
d344 1
a344 1
.It Ic spaste
d346 1
a346 1
.Ic paste ,
d348 1
a348 1
.It Ic substr
d352 1
a352 1
.It Ic syscmd
d358 1
a358 1
.It Ic traceon
d361 1
a361 1
.It Ic traceoff
d364 1
a364 1
.It Ic translit
d370 1
a370 1
.It Ic undefine
d372 1
a372 1
.It Ic undivert
@


1.34
log
@Explain in more details how define interacts with pushdef/popdef, and
how that varies from an m4 implementation to another.
ok jmc@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.33 2003/06/27 21:22:52 jmc Exp $
d284 3
a286 4
Translates the string
.Dq XXXXX
in the first argument with the current process
ID leaving other characters alone.
@


1.33
log
@- replace .Ql with .Sq; this was also causing a problem with postscript
- escape ampersand
- missing full stop

fixes from wiz@@netbsd
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.32 2003/06/10 09:12:10 jmc Exp $
d397 13
@


1.32
log
@- section reorder
- COMPATIBILITY merge
- macro cleanup
- kill whitespace at EOL
- new sentence, new line

ssh pages ok markus@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.31 2003/06/03 02:56:10 millert Exp $
d64 1
a64 1
.Pq Ql ( .
d74 1
a74 1
.Pq Ql \en
d76 4
a79 3
To quote strings, use left and right single
quotes (e.g.,
.Ql "\ this is a string with a leading space" ) .
d157 1
a157 1
.Pq Ql #
d173 1
a173 1
.Ql $n
d179 1
a179 1
.Ql $0
d182 1
a182 1
.Ql $#
d184 1
a184 1
.Ql $*
d186 1
a186 1
.Ql $@@
d188 1
a188 1
.Ql $*
d216 1
a216 1
.Nm
d298 1
a298 1
.Pq Ql &
d301 1
a301 1
.Ql \e# ,
d303 1
a303 1
.Ql #
@


1.31
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 2
a2 2
.\"	@@(#) $OpenBSD: m4.1,v 1.30 2003/04/14 06:39:24 jmc Exp $
.\" 
d32 1
a32 1
.\" 
d104 1
a104 1
.Ar flags 
d127 1
a127 1
By default, trace is set to 
d133 1
a133 1
Turn tracing on for 
d367 1
a367 1
.Sh COMPATIBILITY
d370 1
a370 1
from 
d387 3
a389 3
The output format of tracing and of 
.Ic dumpdef 
are not specified in any standard, 
d391 2
a392 2
The current format of tracing is closely modelled on 
.Nm gnu-m4 , 
d394 1
a394 1
.Nm autoconf 
d410 1
a410 1
All built-ins do expand without arguments in many other 
d417 6
a422 2
Ozan Yigit <oz@@sis.yorku.ca> and Richard A. O'Keefe (ok@@goanna.cs.rmit.OZ.AU).
GNU-m4 compatibility extensions by Marc Espie <espie@@cvs.openbsd.org>.
@


1.30
log
@built in -> built-in;

from NetBSD (Igor Sobrado);
smrsh(8) passed on to sendmail people;

ok millert@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.29 2003/02/18 07:43:36 jmc Exp $
d17 1
a17 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.29
log
@copyrights added;

these are all Regents of the University of California
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.28 2003/02/16 17:16:45 espie Exp $
d414 1
a414 1
All builtins do expand without arguments in many other 
@


1.28
log
@Forgot to document -o, somehow.
@
text
@d1 4
a4 1
.\"	@@(#) $OpenBSD: m4.1,v 1.27 2003/01/07 18:34:13 mpech Exp $
d6 2
d9 28
@


1.27
log
@.Sq -> .Ql
Make sence.
Spotted by jmc@@acn.waw.pl

pvalchev@@, millert@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.26 2003/01/05 10:10:44 pvalchev Exp $
d14 1
d100 3
@


1.26
log
@Grammar and typo fixes, general language improvements
from jmc@@prioris.mini.pw.edu.pl with changes by me
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.25 2002/04/28 14:37:12 espie Exp $
d48 1
a48 1
.Sq \ this is a string with a leading space ) .
@


1.25
log
@Implement -s.
Triggered by recent FreeBSD changes.

- emits #line directives at every file change (like FreeBSD)
- maintains a synch_lineno variable to verify when the output gets out
of synch with the input, so that it can emit #line to re-synch as well
(unlike FreeBSD)

To do: either handle \end-of-line, or recognize when a macro expansion
is in progress, so that line synch don't perturb cpp on multi-line
expansions.

With this, we should have a fully POSIX-compliant m4.

ok miod@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.24 2002/04/18 18:57:23 espie Exp $
d180 1
a180 1
Pass its first argument to a shell and returns the shell's standard output.
d233 1
a233 1
Indirectly calls the macro whose name is passed as the first arguments,
@


1.24
log
@correct description of undefine, both according to the code, and to
single unix.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.23 2001/09/29 11:56:18 espie Exp $
d15 1
d108 3
@


1.23
log
@document tracing and compatibility with other m4.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.22 2001/09/27 11:40:33 espie Exp $
d320 1
a320 1
Removes the definition for the macro specified by the first argument.
@


1.22
log
@traceon/traceoff built-ins.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.21 2000/11/10 05:10:33 aaron Exp $
d12 2
d71 30
d330 49
@


1.21
log
@- Section shuffling: comply to the section ordering outlined in mdoc(7).
- Some .Nm trimming.
- .Sh AUTHOR -> .Sh AUTHORS
- Other miscellaneous fixes here and there.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.20 2000/11/09 17:52:20 aaron Exp $
d275 6
@


1.20
log
@Change all option list specifications to ".Bl -tag -width Ds". Most man
pages just needed their -width parameter tweaked to "Ds", which provides
a nice width of 6 constant characters. For consistency more than anything.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.19 2000/07/27 17:44:33 espie Exp $
d278 1
a278 2
You cannot
use
d292 1
a292 1
.Sh AUTHOR
@


1.19
log
@Handle unlimited diverts for m4 -g.

Problem with autoconf noticed by d@@
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.18 2000/07/24 23:08:25 espie Exp $
d54 1
a54 1
.Bl -tag -width "-Dname[=value]xxx"
@


1.18
log
@Implement esyscmd
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.17 2000/07/06 04:06:55 aaron Exp $
d73 2
a74 1
ranges (e.g., a-z) and regular expressions mimic emacs behavior.
@


1.17
log
@Insert more missing .El directives. Our troff really should identify these and
spit out a warning.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.16 2000/04/17 02:32:43 aaron Exp $
d142 4
@


1.16
log
@Move some misplaced periods outside of the parentheses.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.15 2000/04/12 21:47:48 aaron Exp $
d74 1
@


1.15
log
@Trailing whitespace begone!
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.14 2000/03/23 21:39:54 aaron Exp $
d206 1
a206 1
invoked after all other processing is done.)
@


1.14
log
@More pedantic man page formatting insanity, lalala
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.13 2000/03/23 21:10:17 aaron Exp $
d66 1
a66 1
Add directory 
d71 1
a71 1
In this mode, changequote with 
d209 1
a209 1
.Dq XXXXX 
d222 1
a222 1
.Pq Ql & 
@


1.13
log
@Fix some formatting problems I missed before.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.12 2000/03/18 01:06:55 espie Exp $
d242 2
a243 1
it returns the first match position or \-1 if no match. If a third argument
@


1.12
log
@Last needed m4 changes to bootstrap autoconf without gnu-m4.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.11 2000/03/11 15:54:44 espie Exp $
d70 2
a71 1
Activate GNU-m4 compatibility mode.  In this mode, changequote with 
d240 3
a242 2
Finds a regular expression in a string.  If no further arguments are given,
it returns the first match position or -1 if no match. If a third argument
@


1.11
log
@Add a few builtins for greater compatibility with gnu-m4, and extended
functionality.
* regular expressions,
* line-number reporting
* `meta'-macros, builtin and indir.

Reviewed by pjanzen@@, tested by fries@@ and a few others.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.10 2000/03/10 19:07:20 aaron Exp $
d12 1
d50 1
a50 1
Some built-ins don't make any sense without arguments, and hence are not
d69 4
@


1.10
log
@Various cleanups and standardization.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.9 2000/01/11 14:06:11 espie Exp $
d74 2
d184 3
d213 10
d233 4
d274 4
d280 2
a281 1
Ozan Yigit <oz@@sis.yorku.ca> and Richard A. O'Keefe (ok@@goanna.cs.rmit.OZ.AU)
@


1.9
log
@Don't recognize built-ins in contexts where they don't make sense.
Namely, it doesn't help to try and expand include if it's not followed
by parenthesis and a filename.

This should make applications like sendmail m4 scripts more sturdy for
unquoted machine names that happen to collide with built-ins.

The only drawback is that our m4 may now do intelligent things with scripts
that don't work on other systems.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.8 1999/11/17 15:31:53 espie Exp $
d29 3
a31 1
parenthesis '('.  If the macro name is not followed by an open
d36 2
a37 1
valid macro names match the pattern [a-zA-Z_][a-zA-Z0-9_]*.
d39 7
a45 4
In arguments to macros, leading unquoted space, tab and newline
characters are ignored.  To quote strings, use left and right single
quotes (e.g., ` this is a string with a leading space').  You can change
the quote characters with the
d59 2
a60 1
to have some value (or NULL).
d70 3
a72 3
provides the following built-in macros.  They may be
redefined, losing their original meaning.
Return values are NULL unless otherwise stated.
d75 6
a80 4
Change the start and end comment sequences.  The default is
the pound sign `#' and the newline character.  With no arguments
comments are turned off.  The maximum length for a comment marker is
five characters.
d83 2
a84 1
The symbols may be up to five characters long.  If no arguments are
d87 2
a88 1
Decrements the argument by 1.  The argument must be a valid numeric string.
d91 19
a109 6
value of the second argument.  Each occurrence of $n (where n
is 0 through 9) is replaced by the n'th argument.  $0 is the name
of the calling macro.  Undefined arguments are replaced by a
NULL string.  $# is replaced by the number of arguments; $*
is replaced by all arguments comma separated; $@@ is the same
as $* but all arguments are quoted against further expansion.
d111 2
a112 1
Returns the quoted definition for each argument.  This can be used to rename
d119 3
a121 1
final output.  Initially the output queue is 0.  The divert
d135 8
a142 5
arithmetic.  Operators are the standard C ternary, arithmetic, logical,
shift, relational, bitwise, and parentheses operators.  You can specify
octal, decimal, and hexadecimal numbers as in C.  The second argument (if
any) specifies the radix for the result and the third argument (if
any) specifies the minimum number of digits in the result.
d148 6
a153 2
argument, otherwise the third.  If there is no third argument,
the value is NULL.  The word `unix' is predefined.
d158 2
a159 1
the third argument.  If the match fails the three arguments are
d161 3
a163 2
zero or one arguments left, either this last argument or NULL is
returned if no other matches were found.
d170 1
a170 1
.Va M4PATH ,
d174 2
a175 1
Increments the argument by 1.  The argument must be a valid numeric string.
d178 4
a181 2
index(the quick brown fox jumped, fox) returns 16).  If the second
argument is not found index returns -1.
d183 2
a184 1
Returns the number of characters in the first argument.  Extra arguments
d190 5
a194 2
Allows you to define what happens at the final EOF, usually for cleanup
purposes (e.g., m4wrap("cleanup(tempfile)") causes the macro cleanup to be
d197 5
a201 2
Translates the string XXXXX in the first argument with the current process
ID leaving other characters alone.  This can be used to create unique
d205 2
a206 1
any macro processing.  Aborts with an error message if the file cannot be
d220 2
a221 1
quoted and pushed back with commas in between.  The quoting
d237 2
a238 1
Passes the first argument to the shell.  Nothing is returned.
d244 2
a245 1
given by the second argument to the set given by the third.  You cannot
@


1.8
log
@Typo
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.7 1999/09/14 08:21:37 espie Exp $
d33 2
a34 2
possibly followed by alphanumeric or underscore characters, therefore
valid macro names match this pattern [a-zA-Z_][a-zA-Z0-9_]*.
d37 1
a37 1
characters are ignored.  To quote strings use left and right single
d42 3
@


1.7
log
@Implement -I option and M4PATH environment variable
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.6 1999/09/06 13:07:17 espie Exp $
d26 1
a26 1
Macro calls have the form name(argument1[, argument2, ...,] argumentN).
@


1.6
log
@Typo
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.5 1998/09/26 19:55:02 aaron Exp $
d16 1
d54 4
a57 1
.El
d127 6
@


1.5
log
@usr.bin/ man page fixes, f-m.
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.4 1997/02/12 23:32:31 deraadt Exp $
d138 1
a138 1
purposes (e.g., m4wrap("cleanup(tempfile)") causes the macro cleanup to
@


1.4
log
@typo, msaitoh@@spa.is.uec.ac.jp
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.3 1996/06/26 05:36:13 deraadt Exp $
d5 1
a5 1
.Dt m4 1
d28 2
a29 2
parentheses '('.  If the macro name is not followed by an open
parentheses it is processed with no arguments.
d38 3
a40 1
the quote characters with the changequote built-in macro.
d60 1
a60 1
.It changecom
d65 1
a65 1
.It changequote
d69 1
a69 1
.It decr
d71 1
a71 1
.It define
d79 1
a79 1
.It defn
d82 1
a82 1
.It divert
d90 1
a90 1
.It divnum
d92 1
a92 1
.It dnl
d94 1
a94 1
.It dumpdef
d97 1
a97 1
.It errprint
d99 1
a99 1
.It eval
d106 4
a109 3
.It expr
This is an alias for eval.
.It ifdef
d113 4
a116 2
.It ifelse
If the first argument matches the second argument then ifelse returns
d121 1
a121 1
.It include
d124 1
a124 1
.It incr
d126 1
a126 1
.It index
d130 1
a130 1
.It len
d133 1
a133 1
.It m4exit
d136 1
a136 1
.It m4wrap
d140 1
a140 1
.It maketemp
d144 1
a144 1
.It paste
d148 11
a158 6
.It popdef
Restores the pushdef'ed definition for each argument.
.It pushdef
Takes the same arguments as define, but it saves the definition on a
stack for later retrieval by popdef.
.It shift
d163 9
a171 5
.It sinclude
Similar to include, except it ignores any errors.
.It spaste
Similar to paste, except it ignores any errors.
.It substr
d175 1
a175 1
.It syscmd
d177 4
a180 3
.It sysval
Returns the return value from the last syscmd.
.It translit
d186 1
a186 1
.It undefine
d188 1
a188 1
.It undivert
d190 1
a190 1
.It unix
@


1.3
log
@rcsid
@
text
@d1 1
a1 1
.\"	@@(#) $OpenBSD: m4.1,v 1.2 1995/12/14 02:57:00 deraadt Exp $
d156 1
a156 1
Similar to spaste, except it ignores any errors.
@


1.2
log
@fix a typo
@
text
@d1 1
a2 1
.\"	@@(#) $Id: m4.1,v 1.4 1995/10/19 07:52:46 jtc Exp $
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
.\"	@@(#) $Id: m4.1,v 1.3 1993/10/30 00:28:46 glass Exp $
d55 1
a55 1
redefined, loosing their original meaning.
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
