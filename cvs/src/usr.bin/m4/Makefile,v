head	1.16;
access;
symbols
	OPENBSD_6_2:1.16.0.4
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.13.0.14
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.10
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.6
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.8
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.12.0.10
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.6
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.4
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.32
	OPENBSD_5_0:1.11.0.30
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.28
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.26
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.22
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.24
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.20
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.18
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.16
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.14
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.12
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.10
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.8
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.6
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.10.0.8
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.6
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.8.0.4
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.16
date	2017.07.09.14.04.50;	author espie;	state Exp;
branches;
next	1.15;
commitid	i8DtF0Rg0dQwEQr5;

1.15
date	2017.07.04.08.39.57;	author espie;	state Exp;
branches;
next	1.14;
commitid	NNhHCsVgQRJ30itb;

1.14
date	2017.06.17.01.55.16;	author bcallah;	state Exp;
branches;
next	1.13;
commitid	6LkPbuwFnKUakZt4;

1.13
date	2014.05.12.19.11.19;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2012.04.12.17.00.11;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2004.05.12.21.17.03;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2002.04.26.13.13.41;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2002.04.22.21.45.00;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.18.14.55.52;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2001.07.18.13.28.47;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.02.23.51.52;	author smurph;	state Exp;
branches;
next	1.5;

1.5
date	99.11.17.15.34.13;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	99.09.14.08.21.32;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	97.09.21.11.49.47;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.36.10;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.35;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@have bsd.prog.mk/bsd.lib.mk generate .y -> .c/.h rules without intermediate
files. This fixes up parallel builds in the default case.
FreeBSD does something similar.

okay millert@@
@
text
@#	$OpenBSD: Makefile,v 1.15 2017/07/04 08:39:57 espie Exp $

# -DEXTENDED 
# 	if you want the paste & spaste macros.

PROG=	m4
CFLAGS+=-DEXTENDED -I.
CDIAGFLAGS=-W -Wall -Wstrict-prototypes -pedantic \
	-Wno-unused -Wno-char-subscripts -Wno-sign-compare

LDADD= -lm -lutil
DPADD= ${LIBM} ${LIBUTIL}

SRCS=	eval.c expr.c look.c main.c misc.c gnum4.c trace.c tokenizer.l parser.y
MAN=	m4.1

.include <bsd.prog.mk>
@


1.15
log
@generate the parser directly instead of fucking around
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2017/06/17 01:55:16 bcallah Exp $
a15 7

parser.c parser.h: parser.y
	${YACC} -o parser.c -d ${.ALLSRC}

tokenizer.o: parser.h

CLEANFILES+=parser.c parser.h tokenizer.o
@


1.14
log
@Don't need to link with -ll or -ly.
ok millert@@ (who spotted and provided the -ll removal bits)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2014/05/12 19:11:19 espie Exp $
d18 1
a18 1
	${YACC} -d ${.ALLSRC} && mv y.tab.c parser.c && mv y.tab.h parser.h
@


1.13
log
@adjust to ohash being in libutil now, and to the interface changes.
fix potential integer overflows in memory allocation (mostly for pedagogical
purposes, these are unlikely to overflow in practice)
move the rest of lst.lib stuff into its own directory.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2012/04/12 17:00:11 espie Exp $
d11 2
a12 2
LDADD= -ly -ll -lm -lutil
DPADD= ${LIBY} ${LIBL} ${LIBM} ${LIBUTIL}
@


1.12
log
@new m4 -g stuff:
- expr(`4**3')
- include(`hey I am not there') keeps going.

work with Baptiste Daroussin, who had the idea but didn't nail all details
right.

okay otto@@, miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2004/05/12 21:17:03 espie Exp $
d11 2
a12 2
LDADD= -ly -ll -lm
DPADD= ${LIBY} ${LIBL} ${LIBM}
@


1.11
log
@replace hand-made expr() parser with a lex/yacc affair that is shorter,
easier to understand and extend, and better conformant to Single Unix 3
(especially doing all arithmetic as int32_t).

Comments and approval millert@@, otto@@, fries@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2002/04/26 13:13:41 espie Exp $
d11 2
a12 2
LDADD= -ly -ll
DPADD= ${LIBY} ${LIBL}
@


1.10
log
@prototype mismatch, ansi conversion rules...
add -pedantic to flags.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2002/04/22 21:45:00 miod Exp $
d7 1
a7 1
CFLAGS+=-DEXTENDED
d11 4
a14 1
SRCS=	eval.c expr.c look.c main.c misc.c gnum4.c trace.c
d16 7
@


1.9
log
@Do not hardcode mvme88k-specific compilation flags here, especially since
the new flags happen to be no different from those set in <sys.mk>
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2001/09/18 14:55:52 espie Exp $
d8 1
a8 1
CDIAGFLAGS=-W -Wall -Wstrict-prototypes \
@


1.8
log
@Tracing facilities. Same style as gnu-m4, because it's mostly used for
autoconf right now.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2001/07/18 13:28:47 espie Exp $
a9 4
# No optimization for m88k
.if (${MACHINE_ARCH} == "m88k")
CFLAGS+=-O0
.endif
@


1.7
log
@CDIAGFLAGS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2001/01/02 23:51:52 smurph Exp $
d15 1
a15 1
SRCS=	eval.c expr.c look.c main.c misc.c gnum4.c
@


1.6
log
@m88k doesn't like optimization on m4.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1999/11/17 15:34:13 espie Exp $
d7 2
a8 2
CFLAGS+=-DEXTENDED 
CFLAGS+=-W -Wall -Wstrict-prototypes \
@


1.5
log
@Turn warnings on,
Add missing prototypes,
Make local functions static,
Sort extern.h by file,
Constify all char * that can be,
Copy temp file name so that eval does not modify its arguments.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1999/09/14 08:21:32 espie Exp $
d10 5
@


1.4
log
@Implement -I option and M4PATH environment variable
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1997/09/21 11:49:47 deraadt Exp $
d7 3
a9 1
CFLAGS+=-DEXTENDED
@


1.3
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1996/06/26 05:36:10 deraadt Exp $
d8 1
a8 1
SRCS=	eval.c expr.c look.c main.c misc.c
@


1.2
log
@rcsid
@
text
@d1 1
a1 2
#	$OpenBSD$

@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#	@@(#)Makefile	8.1 (Berkeley) 6/6/93
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
