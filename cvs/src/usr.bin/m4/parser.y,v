head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.20
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.22
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.18
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.14
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.16
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.8
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.12
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.10
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.6
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.4
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.2
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.14
	OPENBSD_5_0:1.6.0.12
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.10
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.8
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.4
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.3.0.12
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.10
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.8
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.6
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.2.0.6
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2012.04.12.17.00.11;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2008.08.21.21.00.14;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2008.08.16.12.23.50;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2008.08.16.12.21.46;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.20.23.10.19;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.22.19.21.34;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.12.21.17.03;	author espie;	state Exp;
branches;
next	;


desc
@@


1.7
log
@new m4 -g stuff:
- expr(`4**3')
- include(`hey I am not there') keeps going.

work with Baptiste Daroussin, who had the idea but didn't nail all details
right.

okay otto@@, miod@@
@
text
@%{
/* $OpenBSD: parser.y,v 1.6 2008/08/21 21:00:14 espie Exp $ */
/*
 * Copyright (c) 2004 Marc Espie <espie@@cvs.openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#include <math.h>
#include <stdint.h>
#define YYSTYPE	int32_t
extern int32_t end_result;
extern int yylex(void);
extern int yyerror(const char *);
%}
%token NUMBER
%token ERROR
%left LOR
%left LAND
%left '|'
%left '^'
%left '&'
%left EQ NE
%left '<' LE '>' GE
%left LSHIFT RSHIFT
%left '+' '-'
%left '*' '/' '%'
%right EXPONENT
%right UMINUS UPLUS '!' '~'

%%

top	: expr { end_result = $1; }
	;
expr 	: expr '+' expr { $$ = $1 + $3; }
     	| expr '-' expr { $$ = $1 - $3; }
	| expr EXPONENT expr { $$ = pow($1, $3); }
     	| expr '*' expr { $$ = $1 * $3; }
	| expr '/' expr {
		if ($3 == 0) {
			yyerror("division by zero");
			exit(1);
		}
		$$ = $1 / $3;
	}
	| expr '%' expr { 
		if ($3 == 0) {
			yyerror("modulo zero");
			exit(1);
		}
		$$ = $1 % $3;
	}
	| expr LSHIFT expr { $$ = $1 << $3; }
	| expr RSHIFT expr { $$ = $1 >> $3; }
	| expr '<' expr { $$ = $1 < $3; }
	| expr '>' expr { $$ = $1 > $3; }
	| expr LE expr { $$ = $1 <= $3; }
	| expr GE expr { $$ = $1 >= $3; }
	| expr EQ expr { $$ = $1 == $3; }
	| expr NE expr { $$ = $1 != $3; }
	| expr '&' expr { $$ = $1 & $3; }
	| expr '^' expr { $$ = $1 ^ $3; }
	| expr '|' expr { $$ = $1 | $3; }
	| expr LAND expr { $$ = $1 && $3; }
	| expr LOR expr { $$ = $1 || $3; }
	| '(' expr ')' { $$ = $2; }
	| '-' expr %prec UMINUS { $$ = -$2; }
	| '+' expr %prec UPLUS  { $$ = $2; }
	| '!' expr { $$ = !$2; }
	| '~' expr { $$ = ~$2; }
	| NUMBER
	;
%%

@


1.6
log
@gnu extension: 0rN:az   for  baseN numbers.

okay otto@@
@
text
@d2 1
a2 1
/* $OpenBSD: parser.y,v 1.5 2008/08/16 12:23:50 espie Exp $ */
d18 1
d37 1
d46 1
@


1.5
log
@not yet, committed too much
@
text
@d2 1
a2 1
/* $OpenBSD: parser.y,v 1.3 2006/01/20 23:10:19 espie Exp $ */
d25 1
@


1.4
log
@argument parsing should only skip spaces outside of parenthesis.
Inside matching parenthesis, keep spaces as is (use chrsave instead of
pbstr, since there's no way it can be a further macro expansion).
Fixes a long-standing issue with autoconf (   --option -> --option),
matches other m4 than gnum4

okay millert@@, fries@@
@
text
@a24 1
%token ERROR
@


1.3
log
@use stdint.h where appropriate. okay millert@@
@
text
@d2 1
a2 1
/* $OpenBSD: parser.y,v 1.2 2004/06/22 19:21:34 otto Exp $ */
d25 1
@


1.2
log
@Do not generate floating point exception followed by a core dump
on div or mod by zero, print error message instead.

ok espie@@
@
text
@d2 1
a2 1
/* $OpenBSD: parser.y,v 1.1 2004/05/12 21:17:03 espie Exp $ */
d18 1
@


1.1
log
@replace hand-made expr() parser with a lex/yacc affair that is shorter,
easier to understand and extend, and better conformant to Single Unix 3
(especially doing all arithmetic as int32_t).

Comments and approval millert@@, otto@@, fries@@
@
text
@d2 1
a2 1
/* $OpenBSD$ */
d43 14
a56 2
	| expr '/' expr { $$ = $1 / $3; }
	| expr '%' expr { $$ = $1 % $3; }
@

