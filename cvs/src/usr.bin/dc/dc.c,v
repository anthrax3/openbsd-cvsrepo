head	1.18;
access;
symbols
	OPENBSD_6_1:1.18.0.4
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.2
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.13.0.6
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.11.0.20
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.16
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.14
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.12
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.10
	OPENBSD_5_0:1.11.0.8
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.6
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.4
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.12
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.8
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.6
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.4
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.6.0.4
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5;
locks; strict;
comment	@ * @;


1.18
date	2016.07.17.17.30.47;	author otto;	state Exp;
branches;
next	1.17;
commitid	avgRkgA94D8QxaYB;

1.17
date	2015.11.03.04.58.58;	author mmcc;	state Exp;
branches;
next	1.16;
commitid	te2vovqZZuWxZq6g;

1.16
date	2015.10.10.19.28.54;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	U920W7iXGRn2x9qj;

1.15
date	2015.10.09.01.37.07;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	sbrB3Q5CNxcwZpfU;

1.14
date	2015.10.03.18.39.13;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	QNj4OIez4WjXmymr;

1.13
date	2014.11.26.18.34.51;	author millert;	state Exp;
branches;
next	1.12;
commitid	9QOFSShUOtA0kQLF;

1.12
date	2014.05.20.01.25.23;	author guenther;	state Exp;
branches;
next	1.11;

1.11
date	2009.10.27.23.59.37;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2007.07.29.17.12.18;	author sobrado;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.25.07.49.56;	author otto;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.24.21.13.45;	author otto;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.15.19.11.59;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2004.10.18.07.49.00;	author otto;	state Exp;
branches;
next	1.5;

1.5
date	2004.01.13.08.17.41;	author otto;	state Exp;
branches;
next	1.4;

1.4
date	2003.12.01.09.13.24;	author otto;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.19.19.06.29;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.19.19.00.36;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.19.17.58.25;	author otto;	state Exp;
branches;
next	;


desc
@@


1.18
log
@getopt(3) can be called twice (once for bc and once for dc), so reinit getopt
ok deraadt@@
@
text
@/*	$OpenBSD: dc.c,v 1.17 2015/11/03 04:58:58 mmcc Exp $	*/

/*
 * Copyright (c) 2003, Otto Moerbeek <otto@@drijf.net>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/stat.h>
#include <err.h>
#include <errno.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "extern.h"

static __dead void	usage(void);

extern char		*__progname;

static __dead void
usage(void)
{
	(void)fprintf(stderr, "usage: %s [-x] [-e expression] [file]\n",
	    __progname);
	exit(1);
}

int
dc_main(int argc, char *argv[])
{
	int		ch;
	bool		extended_regs = false;
	FILE		*file;
	struct source	src;
	char		*buf, *p;
	struct stat	st;

	if ((buf = strdup("")) == NULL)
		err(1, NULL);
	/* accept and ignore a single dash to be 4.4BSD dc(1) compatible */
	optind = 1;
	optreset = 1;
	while ((ch = getopt(argc, argv, "e:x-")) != -1) {
		switch (ch) {
		case 'e':
			p = buf;
			if (asprintf(&buf, "%s %s", buf, optarg) == -1)
				err(1, NULL);
			free(p);
			break;
		case 'x':
			extended_regs = true;
			break;
		case '-':
			break;
		default:
			usage();
		}
	}
	argc -= optind;
	argv += optind;

	init_bmachine(extended_regs);
	(void)setvbuf(stdout, NULL, _IOLBF, 0);
	(void)setvbuf(stderr, NULL, _IOLBF, 0);

	if (argc > 1)
		usage();
	if (buf[0] != '\0') {
		src_setstring(&src, buf);
		reset_bmachine(&src);
		eval();
		free(buf);
		if (argc == 0)
			return (0);
	}
	if (argc == 1) {
		file = fopen(argv[0], "r");
		if (file == NULL)
			err(1, "cannot open file %s", argv[0]);

		if (pledge("stdio", NULL) == -1)
			err(1, "pledge");

		if (fstat(fileno(file), &st) == -1)
			err(1, "%s", argv[0]);
		if (S_ISDIR(st.st_mode))
			errc(1, EISDIR, "%s", argv[0]);
		src_setstream(&src, file);
		reset_bmachine(&src);
		eval();
		(void)fclose(file);
		/*
		 * BSD and Solaris dc(1) continue with stdin after processing
		 * the file given as the argument. We follow GNU dc(1).
		 */
		 return (0);
	}

	if (pledge("stdio", NULL) == -1)
		err(1, "pledge");

	src_setstream(&src, stdin);
	reset_bmachine(&src);
	eval();

	return (0);
}
@


1.17
log
@Surround pledge calls with blank lines.
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.16 2015/10/10 19:28:54 deraadt Exp $	*/
d53 2
@


1.16
log
@Rather than invoking fork/execve of dc(1) on a pipe, compile in the dc(1)
code directly and use it as a subfunction.  This refactoring allows use of
pledge "stdio rpath proc tty" in the main bc(1) process before fork, pledge
"stdio rpath tty" after fork, and fully reduced to "stdio" in the dc(1)
child.

This requires two recent to the kernel code (allowing sigsuspend(),
and kill() self as pid 0).
ok otto
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.15 2015/10/09 01:37:07 deraadt Exp $	*/
d91 1
d94 1
d109 1
d112 1
@


1.15
log
@Change all tame callers to namechange to pledge(2).
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.14 2015/10/03 18:39:13 deraadt Exp $	*/
d41 1
a41 1
main(int argc, char *argv[])
a48 3

	if (pledge("stdio rpath", NULL) == -1)
		err(1, "pledge");
@


1.14
log
@Now that dc(1) no longer supports !command with popen(), we can start
off with tame "stdio rpath".  Once the (optional) file is opened, a
further drop down to tame "stdio" works.
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.13 2014/11/26 18:34:51 millert Exp $	*/
d50 2
a51 2
	if (tame("stdio rpath", NULL) == -1)
		err(1, "tame");
d94 2
a95 2
		if (tame("stdio", NULL) == -1)
			err(1, "tame");
d110 2
a111 2
	if (tame("stdio", NULL) == -1)
		err(1, "tame");
@


1.13
log
@Prefer setvbuf() to setlinebuf() for portability; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.12 2014/05/20 01:25:23 guenther Exp $	*/
d50 2
d94 2
d110 2
@


1.12
log
@Use errc/warnc to simplify code.
Also, in 'ftp', always put the error message last, after the hostname/ipaddr.

ok jsing@@ krw@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.11 2009/10/27 23:59:37 deraadt Exp $	*/
d75 2
a76 2
	(void)setlinebuf(stdout);
	(void)setlinebuf(stderr);
@


1.11
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.10 2007/07/29 17:12:18 sobrado Exp $	*/
d94 2
a95 4
		if (S_ISDIR(st.st_mode)) {
			errno = EISDIR;
			err(1, "%s", argv[0]);
		}
@


1.10
log
@sync the command usage with its synopsis

ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.9 2006/03/25 07:49:56 otto Exp $	*/
a17 4

#ifndef lint
static const char rcsid[] = "$OpenBSD: dc.c,v 1.9 2006/03/25 07:49:56 otto Exp $";
#endif /* not lint */
@


1.9
log
@Use fstat(3) instead of stat(3) as a matter of principle. We don't
like race conditions, even if the effects of these are void and empty.
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.8 2006/03/24 21:13:45 otto Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: dc.c,v 1.8 2006/03/24 21:13:45 otto Exp $";
d39 2
a40 1
	(void)fprintf(stderr, "usage: %s [-x] [-e expr] [file]\n", __progname);
@


1.8
log
@For those of us (including me) who can't type: show an error message if
the argument is a dir. ok tom@@

commit #1000 in slighlty less than 1000 days of commit access :-)
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.7 2006/01/15 19:11:59 otto Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: dc.c,v 1.7 2006/01/15 19:11:59 otto Exp $";
d92 4
a95 1
		if (stat(argv[0], &st) == -1)
a100 4

		file = fopen(argv[0], "r");
		if (file == NULL)
			err(1, "cannot open file %s", argv[0]);
@


1.7
log
@delint wrt return values, including some missing BN return
values checks.
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.6 2004/10/18 07:49:00 otto Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: dc.c,v 1.6 2004/10/18 07:49:00 otto Exp $";
d23 1
d25 1
d51 2
d92 7
@


1.6
log
@Implement command line evaluation of expressions by implementing the -e option.
ok weingart@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.5 2004/01/13 08:17:41 otto Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: dc.c,v 1.5 2004/01/13 08:17:41 otto Exp $";
d37 1
a37 1
	fprintf(stderr, "usage: %s [-x] [-e expr] [file]\n", __progname);
d74 2
a75 2
	setlinebuf(stdout);
	setlinebuf(stderr);
d94 1
a94 1
		fclose(file);
@


1.5
log
@Add missing include. From espie@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.4 2003/12/01 09:13:24 otto Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: dc.c,v 1.4 2003/12/01 09:13:24 otto Exp $";
d25 1
d37 1
a37 1
	fprintf(stderr, "usage: %s [-x] [file]\n", __progname);
d48 1
d50 2
d53 1
a53 1
	while ((ch = getopt(argc, argv, "x-")) != -1) {
d55 6
d79 9
a87 1
	else if (argc == 1) {
d95 5
a100 4
	/*
	 * BSD dc and Solaris dc continue with stdin after processing
	 * the file given as the argument.
	 */
d105 1
a105 1
	return 0;
@


1.4
log
@Allow for more registers using a 2 byte index. This feature is
enabled by supplying the -x option on the command line. Allows long
variable names in bc(1) (to appear soon). If no -x option is given,
behave exactly as before.
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.3 2003/09/19 19:06:29 deraadt Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: dc.c,v 1.3 2003/09/19 19:06:29 deraadt Exp $";
d24 1
@


1.3
log
@blanks
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.2 2003/09/19 19:00:36 deraadt Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: dc.c,v 1.2 2003/09/19 19:00:36 deraadt Exp $";
d24 1
a24 2
#include <stdlib.h>
#include <string.h>
d35 1
a35 1
	fprintf(stderr, "usage: %s [file]\n", __progname);
d42 2
d47 14
a60 2
	if (argc > 2)
		usage();
d62 1
a62 1
	init_bmachine();
d65 5
a69 2
	if (argc == 2 && strcmp(argv[1], "-") != 0) {
		file = fopen(argv[1], "r");
d71 1
a71 1
			err(1, "cannot open file %s", argv[1]);
@


1.2
log
@spaces
@
text
@d1 1
a1 1
/*	$OpenBSD: dc.c,v 1.1 2003/09/19 17:58:25 otto Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: dc.c,v 1.1 2003/09/19 17:58:25 otto Exp $";
a47 1

@


1.1
log
@A complete, BSD licensed rewrite of dc(1), using the bn(3) big number routines.

ok toby@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD$";
d31 1
a31 1
extern char 		*__progname;
@

