head	1.8;
access;
symbols
	OPENBSD_6_0:1.8.0.8
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.4
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.6
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.10
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.8
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.5.0.28
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.26
	OPENBSD_5_0:1.5.0.24
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.22
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.20
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.16
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.18
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.14
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.12
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.10
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.8
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.6
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.4
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3;
locks; strict;
comment	@ * @;


1.8
date	2015.02.16.20.53.34;	author jca;	state Exp;
branches;
next	1.7;
commitid	B2pYYUIr8jLmV0VS;

1.7
date	2012.11.07.11.06.14;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2012.11.06.16.00.05;	author otto;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.16.08.09.25;	author otto;	state Exp;
branches;
next	1.4;

1.4
date	2006.01.15.19.11.59;	author otto;	state Exp;
branches;
next	1.3;

1.3
date	2003.12.01.09.13.24;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.19.19.05.47;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.19.17.58.25;	author otto;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Include bn.h and err.h from <openssl/...>, not the old <ssl/...> location.

Remove unneeded ssl.h includes.  Also built-checked against openssl-1.0.1e.

ok otto@@
@
text
@/*	$OpenBSD: bcode.h,v 1.7 2012/11/07 11:06:14 otto Exp $	*/

/*
 * Copyright (c) 2003, Otto Moerbeek <otto@@drijf.net>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <openssl/bn.h>


struct number {
	BIGNUM	*number;
	u_int	scale;
};

enum stacktype {
	BCODE_NONE,
	BCODE_NUMBER,
	BCODE_STRING
};

enum bcode_compare {
	BCODE_EQUAL,
	BCODE_NOT_EQUAL,
	BCODE_LESS,
	BCODE_NOT_LESS,
	BCODE_GREATER,
	BCODE_NOT_GREATER
};

struct array;

struct value {
	union {
		struct number	*num;
		char		*string;
	} u;
	struct array	*array;
	enum stacktype	type;
};

struct array {
	struct value	*data;
	size_t		size;
};

struct stack {
	struct value	*stack;
	ssize_t		sp;
	size_t		size;
};

struct source;

struct vtable {
	int	(*readchar)(struct source *);
	void	(*unreadchar)(struct source *);
	char	*(*readline)(struct source *);
	void	(*free)(struct source *);
};

struct source {
	struct vtable	*vtable;
	union {
			FILE *stream;
			struct {
				u_char *buf;
				size_t pos;
			} string;
	} u;
	int		lastchar;
};

void			init_bmachine(bool);
void			reset_bmachine(struct source *);
u_int			bmachine_scale(void);
void			scale_number(BIGNUM *, int);
void			normalize(struct number *, u_int);
void			eval(void);
void			pn(const char *, const struct number *);
void			pbn(const char *, const BIGNUM *);
void			negate(struct number *);
void			split_number(const struct number *, BIGNUM *, BIGNUM *);
void			bmul_number(struct number *, struct number *,
			    struct number *, u_int scale);
@


1.7
log
@fix fractional number exponentiation, especially for negative exponents
@
text
@d1 1
a1 1
/*	$OpenBSD: bcode.h,v 1.6 2012/11/06 16:00:05 otto Exp $	*/
d20 1
a20 1
#include <ssl/bn.h>
@


1.6
log
@use BN_set_negative() and BN_is_negative() instead of subtracting or
comparing to zero
@
text
@d1 1
a1 1
/*	$OpenBSD: bcode.h,v 1.5 2006/01/16 08:09:25 otto Exp $	*/
d88 1
d97 1
a97 1
			    struct number *);
@


1.5
log
@delint; use size_t as stack size and ssize_t as stack pointer.
@
text
@d1 1
a1 1
/*	$OpenBSD: bcode.h,v 1.4 2006/01/15 19:11:59 otto Exp $	*/
a96 2

extern BIGNUM		zero;
@


1.4
log
@delint wrt return values, including some missing BN return
values checks.
@
text
@d1 1
a1 1
/*	$OpenBSD: bcode.h,v 1.3 2003/12/01 09:13:24 otto Exp $	*/
d61 2
a62 2
	int		sp;
	int		size;
@


1.3
log
@Allow for more registers using a 2 byte index. This feature is
enabled by supplying the -x option on the command line. Allows long
variable names in bc(1) (to appear soon). If no -x option is given,
behave exactly as before.
@
text
@d1 1
a1 1
/*	$OpenBSD: bcode.h,v 1.2 2003/09/19 19:05:47 otto Exp $	*/
d69 1
a69 1
	int	(*unreadchar)(struct source *);
@


1.2
log
@Add missing copyright.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d86 1
a86 1
void			init_bmachine(void);
@


1.1
log
@A complete, BSD licensed rewrite of dc(1), using the bn(3) big number routines.

ok toby@@ deraadt@@
@
text
@d1 18
@

