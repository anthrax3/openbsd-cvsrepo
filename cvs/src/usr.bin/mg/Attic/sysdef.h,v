head	1.20;
access;
symbols
	OPENBSD_5_7:1.19.0.2
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.16.0.26
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.24
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.20
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.18
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.16
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.14
	OPENBSD_5_0:1.16.0.12
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.10
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.8
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.4
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.6
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.2
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.15.0.10
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.8
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.6
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.4
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.2
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.13.0.4
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.2
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.11.0.14
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.12
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.10
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.8
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.11.0.6
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.4
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6;
locks; strict;
comment	@ * @;


1.20
date	2015.03.19.21.22.15;	author bcallah;	state dead;
branches;
next	1.19;
commitid	GbEBL4CfPvDkB8hj;

1.19
date	2014.11.16.04.16.41;	author guenther;	state Exp;
branches;
next	1.18;
commitid	a9yG0qCw9VEW27qI;

1.18
date	2014.11.16.01.01.28;	author guenther;	state Exp;
branches;
next	1.17;
commitid	0B1gyyx4qoSR1A9U;

1.17
date	2014.11.13.21.36.23;	author florian;	state Exp;
branches;
next	1.16;
commitid	hn552QYOpWpuadxy;

1.16
date	2008.09.15.16.11.35;	author kjell;	state Exp;
branches;
next	1.15;

1.15
date	2006.08.01.22.16.03;	author jason;	state Exp;
branches;
next	1.14;

1.14
date	2006.05.03.22.19.41;	author kjell;	state Exp;
branches;
next	1.13;

1.13
date	2005.06.14.18.14.40;	author kjell;	state Exp;
branches;
next	1.12;

1.12
date	2005.04.03.02.09.28;	author db;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.21.04.16.23;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.14.22.54.35;	author vincent;	state Exp;
branches;
next	1.9;

1.9
date	2001.05.24.03.05.26;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.04.22.00.36;	author art;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.29.01.58.10;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.13.06.12.17;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2000.02.27.05.55.30;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.26.23.22.44;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.26.22.53.16;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.25.19.13.21;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.25.19.08.51;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Clean up the includes in mg.
This does the following:
Moves all POSIX headers from sysdef.h into the individual .c files so that
each file now only includes what it needs. All headers are properly sorted.
Moves the remainder of sysdef.h to other files (mostly def.h) and deletes
sysdef.h now that it's no longer contains anything.
Tweak a comment that references sysdef.h so that it no longer does that.
ok florian@@
@
text
@/*	$OpenBSD: sysdef.h,v 1.19 2014/11/16 04:16:41 guenther Exp $	*/

/* This file is in the public domain. */

/*
 *		POSIX system header file
 */
#include <sys/types.h>
#include <sys/queue.h>
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#include <errno.h>
#include <signal.h>
#include <time.h>		/* for struct timespec */

#define	KBLOCK		8192	/* Kill grow.			 */

typedef int	RSIZE;		/* Type for file/region sizes	 */
typedef short	KCHAR;		/* Type for internal keystrokes	 */

struct fileinfo {
	uid_t		fi_uid;
	gid_t		fi_gid;
	mode_t		fi_mode;
	struct timespec	fi_mtime;	/* Last modified time */
};
@


1.19
log
@Stop using <sys/param.h>; replace MAXPATHLEN with PATH_MAX, stop using MAX(),
and pull in <limits.h> for *_MAX constants.

inspired on a diff from Kamil Rytarowski (n54 (at) gmx.com)
ok bcallah@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdef.h,v 1.18 2014/11/16 01:01:28 guenther Exp $	*/
@


1.18
log
@pull in <time.h> for struct timespec

diff from Kamil Rytarowski (n54 (at) gmx.com)
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdef.h,v 1.17 2014/11/13 21:36:23 florian Exp $	*/
d8 1
a8 1
#include <sys/param.h>
@


1.17
log
@Nuke GOOD define and just exit(0) on success. While there remove
unused MALLOCROUND define.
No binary change.
From Martin Natano (natano AT natano DOT net).
OK lum@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdef.h,v 1.16 2008/09/15 16:11:35 kjell Exp $	*/
d16 1
@


1.16
log
@Enable dirty buffer detection in mg.
Emulate the emacs behavior: after suspend/resume, buffer switch,
or at save time, warn (prompt) the user if the file has been modified
on disk in the interim.
This has already saved my butt numerous times.
ok phessler
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdef.h,v 1.15 2006/08/01 22:16:03 jason Exp $	*/
a17 1
#define	GOOD		0	/* Good exit status.		 */
a20 2

#define MALLOCROUND(m)	(m+=7,m&=~7)	/* round up to 8 byte boundary	 */
@


1.15
log
@* move sys/queue.h inclusion to sysdef.h (it's system specific)
* add <signal.h> to sysdef.h (needed for sig_atomic_t on linux, and
we get it by accident on OpenBSD)
* remove <signal.h> from tty.c/spawn.c (not needed now that it's in sysdef.h)
ok beck
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdef.h,v 1.14 2006/05/03 22:19:41 kjell Exp $	*/
d29 1
@


1.14
log
@Do some KNF, clean up some unused junk that has lying around for 40-odd
cvs revisions, and fix a few comments to match reality
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdef.h,v 1.13 2005/06/14 18:14:40 kjell Exp $	*/
d9 1
d15 1
@


1.13
log
@Add explicit public domain notices to all public domain files.
ok millert@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdef.h,v 1.12 2005/04/03 02:09:28 db Exp $	*/
a16 1
#define	SYMBLINK	1	/* Handle symbolic links.	 */
@


1.12
log
@This is a no binary change which does:

- spelling, punctuation fixes
- variable declaration lineup
- use parentheses for return and sizeof
- K&R function declarations -> ANSI
- other minor code beautification

ok henning@@
@
text
@d1 3
a3 1
/*	$OpenBSD: sysdef.h,v 1.11 2002/02/21 04:16:23 deraadt Exp $	*/
@


1.11
log
@remove a wrapper around getenv()
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdef.h,v 1.10 2002/02/14 22:54:35 vincent Exp $	*/
d13 3
a15 3
#define	KBLOCK	8192		/* Kill grow.			 */
#define	GOOD	0		/* Good exit status.		 */
#define SYMBLINK	1	/* Handle symbolic links	 */
d20 1
a20 1
#define MALLOCROUND(m)	(m+=7,m&=~7)	/* round up to 8 byte boundry	 */
@


1.10
log
@ some programs now need the errno definition and sys/params, so put them in
there.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdef.h,v 1.9 2001/05/24 03:05:26 mickey Exp $	*/
a15 1
#define	MAXPATH	PATH_MAX	/* Maximum length of path for chdir */
a21 2
#define	gettermtype()	getenv("TERM")	/* determine terminal type	 */

d23 2
a25 2
	uid_t		fi_uid;
	gid_t short	fi_gid;
@


1.9
log
@spaces
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdef.h,v 1.8 2001/05/04 22:00:36 art Exp $	*/
d6 1
d11 1
@


1.8
log
@Cleanups in filename and buffer name handling.
Mostly just using libc instead of rolling our own.
@
text
@d1 1
a1 1
/*	$OpenBSD: sysdef.h,v 1.7 2001/01/29 01:58:10 niklas Exp $	*/
d16 2
a17 2
typedef int     RSIZE;		/* Type for file/region sizes	 */
typedef short   KCHAR;		/* Type for internal keystrokes	 */
d24 3
a26 3
	mode_t          fi_mode;
	uid_t           fi_uid;
	gid_t short     fi_gid;
@


1.7
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a18 10
/*
 * Macros used by the buffer name making code.
 * Start at the end of the file name, scan to the left
 * until BDC1 (or BDC2, if defined) is reached. The buffer
 * name starts just to the right of that location, and
 * stops at end of string (or at the next BDC3 character,
 * if defined). BDC2 and BDC3 are mainly for VMS.
 */
#define	BDC1	'/'			/* Buffer names.		 */

a20 1
#define	fncmp		strcmp		/* file name comparison		 */
@


1.6
log
@The start of KNF + -Wall.  The code has been run through indent but
needs hand fixup.  I stopped at keymap.c...
@
text
@d1 2
@


1.5
log
@use rmdir, not unlinkdir hack
@
text
@d9 4
a12 4
#define	KBLOCK	8192			/* Kill grow.			*/
#define	GOOD	0			/* Good exit status.		*/
#define SYMBLINK	1		/* Handle symbolic links	*/  
#define	MAXPATH	PATH_MAX		/* Maximum length of path for chdir */
d14 2
a15 2
typedef int	RSIZE;			/* Type for file/region sizes	*/
typedef short	KCHAR;			/* Type for internal keystrokes	*/
d25 1
a25 1
#define	BDC1	'/'			/* Buffer names.		*/
d27 1
a27 1
#define MALLOCROUND(m)	(m+=7,m&=~7)	/* round up to 8 byte boundry	*/
d29 2
a30 2
#define	fncmp		strcmp		/* file name comparison		*/
#define	gettermtype()	getenv("TERM")	/* determine terminal type	*/
d33 3
a35 3
	mode_t fi_mode;
	uid_t fi_uid;
	gid_t short fi_gid;
@


1.4
log
@Use uid_t, gid_t and mode_t where applicable.
Pull in changes from the BSD-specific sysdef.h and fileio.c:
kill bogus unlinkdir() and rename() kludges since we have rmdir(2) and rename(2)
define SYMBLINK since we have symlinks
TODO: merge BSD spawn.c and ttyio.c
@
text
@a29 1
#define	unlinkdir(fn)	rmdir(fn)	/* unlink directory		*/
@


1.3
log
@change WINDOW -> MGWIN to avoid curses type conflict
convert to terminfo in tty*.c
add support for some keypad function keys (arrows, pgup, pgdown)
@
text
@d11 2
a12 1
#define	MAXPATH	256			/* Maximum length of path for chdir */
d30 1
d34 3
a36 3
	unsigned short fi_mode;
	unsigned short fi_uid;
	unsigned short fi_gid;
@


1.2
log
@further pruning
@
text
@d2 1
a2 1
 *		System V system header file
@


1.1
log
@initial import of mg2a
@
text
@d5 3
d13 1
a13 1
typedef long	RSIZE;			/* Type for file/region sizes	*/
a28 3
#define bcopy(s,d,n)	memcpy(d,s,n)	/* memory-to-memory copy	*/
#define bzero(s,n)	memset(s,0,n)	/* clear memory */
char *getenv();
a29 2
char *getcwd();
#define getwd(cwd)	getcwd(cwd,NFILEN) /* get current working dir	*/
@

