head	1.105;
access;
symbols
	OPENBSD_6_0:1.104.0.2
	OPENBSD_6_0_BASE:1.104
	OPENBSD_5_9:1.101.0.2
	OPENBSD_5_9_BASE:1.101
	OPENBSD_5_8:1.90.0.4
	OPENBSD_5_8_BASE:1.90
	OPENBSD_5_7:1.89.0.2
	OPENBSD_5_7_BASE:1.89
	OPENBSD_5_6:1.88.0.4
	OPENBSD_5_6_BASE:1.88
	OPENBSD_5_5:1.85.0.4
	OPENBSD_5_5_BASE:1.85
	OPENBSD_5_4:1.84.0.2
	OPENBSD_5_4_BASE:1.84
	OPENBSD_5_3:1.75.0.2
	OPENBSD_5_3_BASE:1.75
	OPENBSD_5_2:1.68.0.2
	OPENBSD_5_2_BASE:1.68
	OPENBSD_5_1_BASE:1.58
	OPENBSD_5_1:1.58.0.2
	OPENBSD_5_0:1.53.0.2
	OPENBSD_5_0_BASE:1.53
	OPENBSD_4_9:1.52.0.2
	OPENBSD_4_9_BASE:1.52
	OPENBSD_4_8:1.46.0.2
	OPENBSD_4_8_BASE:1.46
	OPENBSD_4_7:1.45.0.2
	OPENBSD_4_7_BASE:1.45
	OPENBSD_4_6:1.45.0.4
	OPENBSD_4_6_BASE:1.45
	OPENBSD_4_5:1.42.0.2
	OPENBSD_4_5_BASE:1.42
	OPENBSD_4_4:1.40.0.2
	OPENBSD_4_4_BASE:1.40
	OPENBSD_4_3:1.35.0.2
	OPENBSD_4_3_BASE:1.35
	OPENBSD_4_2:1.32.0.2
	OPENBSD_4_2_BASE:1.32
	OPENBSD_4_1:1.31.0.2
	OPENBSD_4_1_BASE:1.31
	OPENBSD_4_0:1.28.0.2
	OPENBSD_4_0_BASE:1.28
	OPENBSD_3_9:1.25.0.2
	OPENBSD_3_9_BASE:1.25
	OPENBSD_3_8:1.22.0.4
	OPENBSD_3_8_BASE:1.22
	OPENBSD_3_7:1.22.0.2
	OPENBSD_3_7_BASE:1.22
	OPENBSD_3_6:1.20.0.2
	OPENBSD_3_6_BASE:1.20
	OPENBSD_3_5:1.19.0.4
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.19.0.2
	OPENBSD_3_4_BASE:1.19
	OPENBSD_3_3:1.16.0.2
	OPENBSD_3_3_BASE:1.16
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.10.0.4
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_8:1.7.0.4
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.2
	OPENBSD_2_7_BASE:1.7;
locks; strict;
comment	@.\" @;


1.105
date	2016.07.28.21.37.45;	author tedu;	state Exp;
branches;
next	1.104;
commitid	mWujHdKL90lJ6y6i;

1.104
date	2016.04.14.17.05.32;	author lum;	state Exp;
branches;
next	1.103;
commitid	SjhPISg2Q1dkB5Xg;

1.103
date	2016.03.17.21.56.12;	author lum;	state Exp;
branches;
next	1.102;
commitid	6PTm12C6kc4HwzLN;

1.102
date	2016.03.16.18.27.00;	author lum;	state Exp;
branches;
next	1.101;
commitid	Psr7hmsRkiwFbGIf;

1.101
date	2016.01.02.10.39.19;	author lum;	state Exp;
branches;
next	1.100;
commitid	cWRm8x2aZlyBJTgu;

1.100
date	2015.12.30.16.53.17;	author lum;	state Exp;
branches;
next	1.99;
commitid	lQHxqBWKtcmWLr8r;

1.99
date	2015.12.29.19.44.32;	author lum;	state Exp;
branches;
next	1.98;
commitid	zQwbtQmO8Wf9dGsD;

1.98
date	2015.12.24.09.07.47;	author lum;	state Exp;
branches;
next	1.97;
commitid	bbpWLjeo17Iha7wQ;

1.97
date	2015.12.22.15.33.16;	author lum;	state Exp;
branches;
next	1.96;
commitid	RMdGaC6FrbWKTgpw;

1.96
date	2015.12.21.09.04.52;	author lum;	state Exp;
branches;
next	1.95;
commitid	YQoAhIcLzCNYWJxs;

1.95
date	2015.11.18.17.41.09;	author reyk;	state Exp;
branches;
next	1.94;
commitid	LVscszjFZ62dNyRz;

1.94
date	2015.10.12.07.55.52;	author lum;	state Exp;
branches;
next	1.93;
commitid	4UIye7PfkXyWQjMp;

1.93
date	2015.09.26.15.03.15;	author lum;	state Exp;
branches;
next	1.92;
commitid	0ywCmEETZEbQQnyp;

1.92
date	2015.09.24.07.07.59;	author lum;	state Exp;
branches;
next	1.91;
commitid	ilbGNsJo2VDLtO5r;

1.91
date	2015.09.09.19.03.13;	author lum;	state Exp;
branches;
next	1.90;
commitid	IS6wC6QAALqBPKZh;

1.90
date	2015.03.17.15.20.38;	author jmc;	state Exp;
branches;
next	1.89;
commitid	VHdTbu4xEuId1Y1P;

1.89
date	2014.11.03.14.53.22;	author jmc;	state Exp;
branches;
next	1.88;
commitid	mcDcgZRGV2JhCKj1;

1.88
date	2014.04.02.20.32.00;	author lum;	state Exp;
branches;
next	1.87;

1.87
date	2014.03.27.07.30.25;	author jmc;	state Exp;
branches;
next	1.86;

1.86
date	2014.03.26.22.02.06;	author lum;	state Exp;
branches;
next	1.85;

1.85
date	2013.12.19.19.09.27;	author lum;	state Exp;
branches;
next	1.84;

1.84
date	2013.06.03.05.10.59;	author lum;	state Exp;
branches;
next	1.83;

1.83
date	2013.06.02.10.09.21;	author lum;	state Exp;
branches;
next	1.82;

1.82
date	2013.06.02.09.53.42;	author lum;	state Exp;
branches;
next	1.81;

1.81
date	2013.06.01.17.33.49;	author jmc;	state Exp;
branches;
next	1.80;

1.80
date	2013.06.01.14.47.07;	author lum;	state Exp;
branches;
next	1.79;

1.79
date	2013.05.31.18.03.44;	author lum;	state Exp;
branches;
next	1.78;

1.78
date	2013.05.27.19.28.51;	author jmc;	state Exp;
branches;
next	1.77;

1.77
date	2013.05.27.18.16.32;	author lum;	state Exp;
branches;
next	1.76;

1.76
date	2013.05.22.19.23.45;	author lum;	state Exp;
branches;
next	1.75;

1.75
date	2012.12.28.16.12.50;	author naddy;	state Exp;
branches;
next	1.74;

1.74
date	2012.12.27.18.51.52;	author florian;	state Exp;
branches;
next	1.73;

1.73
date	2012.12.04.10.54.20;	author florian;	state Exp;
branches;
next	1.72;

1.72
date	2012.11.27.19.46.46;	author jasper;	state Exp;
branches;
next	1.71;

1.71
date	2012.11.13.22.03.44;	author florian;	state Exp;
branches;
next	1.70;

1.70
date	2012.10.22.08.31.42;	author florian;	state Exp;
branches;
next	1.69;

1.69
date	2012.10.12.21.13.47;	author jasper;	state Exp;
branches;
next	1.68;

1.68
date	2012.07.11.19.56.13;	author sobrado;	state Exp;
branches;
next	1.67;

1.67
date	2012.06.21.17.55.10;	author lum;	state Exp;
branches;
next	1.66;

1.66
date	2012.06.20.07.25.50;	author jmc;	state Exp;
branches;
next	1.65;

1.65
date	2012.06.19.21.29.39;	author jmc;	state Exp;
branches;
next	1.64;

1.64
date	2012.06.18.13.55.24;	author lum;	state Exp;
branches;
next	1.63;

1.63
date	2012.06.18.11.35.31;	author lum;	state Exp;
branches;
next	1.62;

1.62
date	2012.06.14.17.21.22;	author lum;	state Exp;
branches;
next	1.61;

1.61
date	2012.06.07.15.15.04;	author lum;	state Exp;
branches;
next	1.60;

1.60
date	2012.05.25.15.41.09;	author lum;	state Exp;
branches;
next	1.59;

1.59
date	2012.04.11.17.51.10;	author lum;	state Exp;
branches;
next	1.58;

1.58
date	2012.02.09.09.00.14;	author lum;	state Exp;
branches;
next	1.57;

1.57
date	2011.11.28.07.58.23;	author lum;	state Exp;
branches;
next	1.56;

1.56
date	2011.11.28.04.41.39;	author lum;	state Exp;
branches;
next	1.55;

1.55
date	2011.09.02.02.37.52;	author lum;	state Exp;
branches;
next	1.54;

1.54
date	2011.08.31.14.34.28;	author lum;	state Exp;
branches;
next	1.53;

1.53
date	2011.08.01.12.15.23;	author lum;	state Exp;
branches;
next	1.52;

1.52
date	2011.02.02.05.27.55;	author lum;	state Exp;
branches;
next	1.51;

1.51
date	2011.02.02.05.21.36;	author lum;	state Exp;
branches;
next	1.50;

1.50
date	2011.01.18.17.37.32;	author jmc;	state Exp;
branches;
next	1.49;

1.49
date	2011.01.18.16.25.40;	author kjell;	state Exp;
branches;
next	1.48;

1.48
date	2011.01.17.03.12.06;	author kjell;	state Exp;
branches;
next	1.47;

1.47
date	2010.10.07.17.08.58;	author sobrado;	state Exp;
branches;
next	1.46;

1.46
date	2010.03.26.19.30.40;	author jmc;	state Exp;
branches;
next	1.45;

1.45
date	2009.06.23.19.45.10;	author nicm;	state Exp;
branches;
next	1.44;

1.44
date	2009.06.05.06.29.44;	author jmc;	state Exp;
branches;
next	1.43;

1.43
date	2009.06.04.23.56.50;	author kjell;	state Exp;
branches;
next	1.42;

1.42
date	2008.11.06.14.04.48;	author sobrado;	state Exp;
branches;
next	1.41;

1.41
date	2008.09.15.16.13.35;	author kjell;	state Exp;
branches;
next	1.40;

1.40
date	2008.06.29.08.28.01;	author sobrado;	state Exp;
branches;
next	1.39;

1.39
date	2008.06.15.21.01.55;	author jmc;	state Exp;
branches;
next	1.38;

1.38
date	2008.06.15.07.53.58;	author kjell;	state Exp;
branches;
next	1.37;

1.37
date	2008.06.15.07.31.41;	author kjell;	state Exp;
branches;
next	1.36;

1.36
date	2008.05.29.19.58.15;	author sobrado;	state Exp;
branches;
next	1.35;

1.35
date	2008.01.10.21.56.24;	author jmc;	state Exp;
branches;
next	1.34;

1.34
date	2008.01.10.20.13.34;	author kjell;	state Exp;
branches;
next	1.33;

1.33
date	2008.01.10.20.12.45;	author kjell;	state Exp;
branches;
next	1.32;

1.32
date	2007.05.31.19.20.13;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2007.02.20.04.26.26;	author cloder;	state Exp;
branches;
next	1.30;

1.30
date	2007.02.20.04.10.32;	author cloder;	state Exp;
branches;
next	1.29;

1.29
date	2006.12.29.17.07.32;	author reyk;	state Exp;
branches;
next	1.28;

1.28
date	2006.09.02.20.06.48;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2006.07.17.15.31.23;	author kjell;	state Exp;
branches;
next	1.26;

1.26
date	2006.05.08.19.28.21;	author kjell;	state Exp;
branches;
next	1.25;

1.25
date	2005.10.11.19.57.17;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2005.10.11.04.53.56;	author kjell;	state Exp;
branches;
next	1.23;

1.23
date	2005.10.11.04.36.55;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2005.03.12.09.12.56;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2005.03.10.16.47.34;	author henning;	state Exp;
branches;
next	1.20;

1.20
date	2004.07.26.16.25.10;	author mjc;	state Exp;
branches;
next	1.19;

1.19
date	2003.09.02.18.50.06;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2003.06.10.09.12.11;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2003.05.05.22.05.57;	author vincent;	state Exp;
branches;
next	1.16;

1.16
date	2003.01.06.17.04.09;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2003.01.05.09.50.40;	author pvalchev;	state Exp;
branches;
next	1.14;

1.14
date	2002.09.28.01.14.02;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.10.19.53.18;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.21.04.21.17;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.08.00.51.55;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2001.04.11.10.48.40;	author bjc;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.29.01.58.08;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	2000.11.10.05.10.35;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.12.21.47.49;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.10.19.07.21;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.02.29.20.35.19;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.29.19.49.48;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.28.14.59.54;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.25.19.10.22;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.25.19.08.49;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.105
log
@these programs probably do not need to use TMPDIR. ok florian
@
text
@.\"	$OpenBSD: mg.1,v 1.104 2016/04/14 17:05:32 lum Exp $
.\" This file is in the public domain.
.\"
.Dd $Mdocdate: April 14 2016 $
.Dt MG 1
.Os
.Sh NAME
.Nm mg
.Nd emacs-like text editor
.Sh SYNOPSIS
.Nm mg
.Op Fl nR
.Op Fl f Ar mode
.Op + Ns Ar number
.Op Ar
.Sh DESCRIPTION
.Nm
is intended to be a small, fast, and portable editor for
people who can't (or don't want to) run emacs for one
reason or another, or are not familiar with the
.Xr vi 1
editor.
It is compatible with emacs because there shouldn't
be any reason to learn more editor types than emacs or
.Xr vi 1 .
.Pp
The options are as follows:
.Bl -tag -width Ds
.It + Ns Ar number
Go to the line specified by number (do not insert
a space between the
.Sq +
sign and the number).
If a negative number is specified, the line number counts
backwards from the end of the file i.e. +-1 will be the last
line of the file, +-2 will be second last, and so on.
.It Fl f Ar mode
Run the mode command for all buffers created from
arguments on the command line, including the
scratch buffer and all files.
.It Fl n
Turn off backup file generation.
.It Fl R
Files specified on the command line will be opened read-only.
.El
.Sh WINDOWS AND BUFFERS
When a file is loaded into
.Nm ,
it is stored in a
.Em buffer .
This buffer may be displayed on the screen in more than one window.
At present, windows may only be split horizontally, so each window is
delineated by a modeline at the bottom.
If changes are made to a buffer, it will be reflected in all open windows.
.Pp
If a file is changed outside
.Nm
and its buffer is about to be changed,
.Nm
prompts if the change should go ahead (y), not go ahead (n) or if the buffer
should be reverted (r) to the latest file on disk.
.Pp
If a buffer name begins and ends with an asterisk, the buffer is considered
throwaway; i.e. the user will not be prompted to save changes when
the buffer is killed.
.Sh POINT AND MARK
The current cursor location in
.Nm
is called the
.Em point
(or
.Em dot ) .
It is possible to define a window-specific region of text by setting a second
location, called the
.Em mark .
The
.Em region
is the text between point and mark inclusive.
Deleting the character at the mark position leaves
the mark at the point of deletion.
.Pp
Note: The point and mark are window-specific in
.Nm ,
not buffer-specific, as in other emacs flavours.
.Sh BACKUP FILES
Backup files have a
.Sq ~
character appended to the file name and
are created in the current working directory by default.
Whether to create backup files or not can be toggled with the
make-backup-files command.
The backup file location can either be in the current
working directory, or all backups can be moved to a
.Pa ~/.mg.d
directory where files retain their path name to retain uniqueness.
Use the backup-to-home-directory to alternate between these two locations.
Further, if any application creates backup files in
.Pa /tmp ,
these can be left with the leave-tmpdir-backups command.
.Sh TAGS
.Nm
supports tag files created by
.Xr ctags 1 ,
allowing the user to quickly locate various object definitions.
Note though that emacs uses etags, not ctags.
.Sh CSCOPE
.Nm
supports navigating source code using cscope.
However,
.Nm
requires cscope and cscope-indexer executables to be present in
.Ev PATH
for it to work.
.Sh DEFAULT KEY BINDINGS
Normal editing commands are very similar to GNU Emacs.
In the following examples, C-x means Control-x, and M-x means Meta-x,
where the Meta key may be either a special key on the keyboard
or the ALT key; otherwise ESC followed by the key X works as well.
.Pp
.Bl -tag -width xxxxxxxxxxxx -offset indent -compact
.It C-SPC
set-mark-command
.It C-a
beginning-of-line
.It C-b
backward-char
.It C-c s c
cscope-find-functions-calling-this-function
.It C-c s d
cscope-find-global-definition
.It C-c s e
cscope-find-egrep-pattern
.It C-c s f
cscope-find-this-file
.It C-c s i
cscope-find-files-including-file
.It C-c s n
cscope-next-symbol
.It C-c s p
cscope-prev-symbol
.It C-c s s
cscope-find-this-symbol
.It C-c s t
cscope-find-this-text-string
.It C-d
delete-char
.It C-e
end-of-line
.It C-f
forward-char
.It C-g
keyboard-quit
.It C-h C-h
help-help
.It C-h a
apropos
.It C-h b
describe-bindings
.It C-h c
describe-key-briefly
.It C-j
newline-and-indent
.It C-k
kill-line
.It C-l
recenter
.It RET
newline
.It C-n
next-line
.It C-o
open-line
.It C-p
previous-line
.It C-q
quoted-insert
.It C-r
isearch-backward
.It C-s
isearch-forward
.It C-t
transpose-chars
.It C-u
universal-argument
.It C-v
scroll-up
.It C-w
kill-region
.It C-x C-b
list-buffers
.It C-x C-c
save-buffers-kill-emacs
.It C-x C-f
find-file
.It C-x C-g
keyboard-quit
.It C-x C-l
downcase-region
.It C-x C-o
delete-blank-lines
.It C-x C-q
toggle-read-only
.It C-x C-r
find-file-read-only
.It C-x C-s
save-buffer
.It C-x C-u
upcase-region
.It C-x C-v
find-alternate-file
.It C-x C-w
write-file
.It C-x C-x
exchange-point-and-mark
.It C-x (
start-kbd-macro
.It C-x \&)
end-kbd-macro
.It C-x 0
delete-window
.It C-x 1
delete-other-windows
.It C-x 2
split-window-vertically
.It C-x 4 C-f
find-file-other-window
.It C-x 4 C-g
keyboard-quit
.It C-x 4 b
switch-to-buffer-other-window
.It C-x 4 f
find-file-other-window
.It C-x =
what-cursor-position
.It C-x ^
enlarge-window
.It C-x `
next-error
.It C-x b
switch-to-buffer
.It C-x d
dired
.It C-x e
call-last-kbd-macro
.It C-x f
set-fill-column
.It C-x g
goto-line
.It C-x h
mark-whole-buffer
.It C-x i
insert-file
.It C-x k
kill-buffer
.It C-x n
other-window
.It C-x o
other-window
.It C-x p
previous-window
.It C-x s
save-some-buffers
.It C-x u
undo
.It C-y
yank
.It C-z
suspend-emacs
.It M-C-v
scroll-other-window
.It M-SPC
just-one-space
.It M-!
shell-command
.It M-.
find-tag
.It M-*
pop-tag-mark
.It M-%
query-replace
.It M-<
beginning-of-buffer
.It M->
end-of-buffer
.It M-\e
delete-horizontal-space
.It M-^
join-line
.It M-b
backward-word
.It M-c
capitalize-word
.It M-d
kill-word
.It M-f
forward-word
.It M-h
mark-paragraph
.It M-l
downcase-word
.It M-m
back-to-indentation
.It M-q
fill-paragraph
.It M-r
search-backward
.It M-s
search-forward
.It M-t
transpose-words
.It M-u
upcase-word
.It M-v
scroll-down
.It M-w
copy-region-as-kill
.It M-x
execute-extended-command
.It M-{
backward-paragraph
.It M-|
shell-command-on-region
.It M-}
forward-paragraph
.It M-~
not-modified
.It M-DEL
backward-kill-word
.It C-_
undo
.It )
blink-and-insert
.It DEL
delete-backward-char
.El
.Pp
For a complete description of
.Nm
commands, see
.Sx MG COMMANDS .
To see the active keybindings at any time, type
.Dq M-x describe-bindings .
.Sh MG COMMANDS
Commands are invoked by
.Dq M-x ,
or by binding to a key.
Many commands take an optional numerical parameter,
.Va n .
This parameter is set either by
M-<n> (where
.Va n
is the numerical argument) before the command, or by
one or more invocations of the universal argument, usually bound to C-u.
When invoked in this manner, the value of the numeric parameter to
be passed is displayed in the minibuffer before the M-x.
One common use of the parameter is in mode toggles (e.g.\&
make-backup-files).
If no parameter is supplied, the mode is toggled to its
alternate state.
If a positive parameter is supplied, the mode is forced to on.
Otherwise, it is forced to off.
.\"
.Bl -tag -width xxxxx
.It apropos
Help Apropos.
Prompt the user for a string, open the *help* buffer,
and list all
.Nm
commands that contain that string.
.It audible-bell
Toggle the audible system bell.
.It auto-execute
Register an auto-execute hook; that is, specify a filename pattern
(conforming to the shell's filename globbing rules) and an associated
function to execute when a file matching the specified pattern
is read into a buffer.
.It auto-fill-mode
Toggle auto-fill mode (sometimes called mail-mode) in the current buffer,
where text inserted past the fill column is automatically wrapped
to a new line.
Can be set globally with set-default-mode.
.It auto-indent-mode
Toggle indent mode in the current buffer,
where indentation is preserved after a newline.
Can be set globally with set-default-mode.
.It back-to-indentation
Move the dot to the first non-whitespace character on the current line.
.It backup-to-home-directory
Save backup copies to a
.Pa ~/.mg.d
directory instead of working directory.
Requires make-backup-files to be on.
.It backward-char
Move cursor backwards one character.
.It backward-kill-word
Kill text backwards by
.Va n
words.
.It backward-paragraph
Move cursor backwards
.Va n
paragraphs.
Paragraphs are delimited by <NL><NL> or <NL><TAB> or <NL><SPACE>.
.It backward-word
Move cursor backwards by the specified number of words.
.It beginning-of-buffer
Move cursor to the top of the buffer.
.It beginning-of-line
Move cursor to the beginning of the line.
.It blink-and-insert
Self-insert a character, then search backwards and blink its
matching delimiter.
For delimiters other than
parenthesis, brackets, and braces, the character itself
is used as its own match.
.It bsmap-mode
Toggle bsmap mode, where DEL and C-h are swapped.
.It c-mode
Toggle a KNF-compliant mode for editing C program files.
.It call-last-kbd-macro
Invoke the keyboard macro.
.It capitalize-word
Capitalize
.Va n
words; i.e. convert the first character of the word to
upper case, and subsequent letters to lower case.
.It cd
Change the global working directory.
See also global-wd-mode.
.It column-number-mode
Toggle whether the column number is displayed in the modeline.
.It copy-region-as-kill
Copy all of the characters in the region to the kill buffer,
clearing the mark afterwards.
This is a bit like a kill-region followed by a yank.
.It count-matches
Count the number of lines matching the supplied regular expression.
.It count-non-matches
Count the number of lines not matching the supplied regular expression.
.It cscope-find-this-symbol
List the matches for the given symbol.
.It cscope-find-global-definition
List global definitions for the given literal.
.It cscope-find-called-functions
List functions called from the given function.
.It cscope-find-functions-calling-this-function
List functions calling the given function.
.It cscope-find-this-text-string
List locations matching the given text string.
.It cscope-find-egrep-pattern
List locations matching the given extended regular expression pattern.
.It cscope-find-this-file
List filenames matching the given filename.
.It cscope-find-files-including-file
List files that #include the given filename.
.It cscope-next-symbol
Navigate to the next match.
.It cscope-prev-symbol
Navigate to the previous match.
.It cscope-next-file
Navigate to the next file.
.It cscope-prev-file
Navigate to the previous file.
.It cscope-create-list-of-files-to-index
Create cscope's List and Index in the given directory.
.It define-key
Prompts the user for a named keymap (mode),
a key, and an
.Nm
command, then creates a keybinding in the appropriate
map.
.It delete-backward-char
Delete backwards
.Va n
characters.
Like delete-char, this actually does a kill if presented
with an argument.
.It delete-blank-lines
Delete blank lines around dot.
If dot is sitting on a blank line, this command
deletes all the blank lines above and below the current line.
Otherwise, it deletes all of the blank lines after the current line.
.It delete-char
Delete
.Va n
characters forward.
If any argument is present, it kills rather than deletes,
saving the result in the kill buffer.
.It delete-horizontal-space
Delete any whitespace around the dot.
.It delete-leading-space
Delete leading whitespace on the current line.
.It delete-trailing-space
Delete trailing whitespace on the current line.
.It delete-matching-lines
Delete all lines after dot that contain a string matching
the supplied regular expression.
.It delete-non-matching-lines
Delete all lines after dot that contain a string matching
the supplied regular expression.
.It delete-other-windows
Make the current window the only window visible on the screen.
.It delete-window
Delete current window.
.It describe-bindings
List all global and local keybindings, putting the result in
the *help* buffer.
.It describe-key-briefly
Read a key from the keyboard, and look it up in the keymap.
Display the name of the function currently bound to the key.
.It diff-buffer-with-file
View the differences between buffer and its associated file.
.It digit-argument
Process a numerical argument for keyboard-invoked functions.
.It downcase-region
Set all characters in the region to lower case.
.It downcase-word
Set characters to lower case, starting at the dot, and ending
.Va n
words away.
.It emacs-version
Return an
.Nm
version string.
.It end-kbd-macro
Stop defining a keyboard macro.
.It end-of-buffer
Move cursor to the end of the buffer.
.It end-of-line
Move cursor to the end of the line.
.It enlarge-window
Enlarge the current window by shrinking either the window above
or below it.
.It eval-current-buffer
Evaluate the current buffer as a series of
.Nm
commands.
Useful for testing
.Nm
startup files.
.It eval-expression
Get one line from the user, and run it.
Useful for testing expressions in
.Nm
startup files.
.It exchange-point-and-mark
Swap the values of "dot" and "mark" in the current window.
Return an error if no mark is set.
.It execute-extended-command
Invoke an extended command; i.e. M-x.
Call the message line routine to read in the command name and apply
autocompletion to it.
When it comes back, look the name up in the symbol table and run the
command if it is found, passing arguments as necessary.
Print an error if there is anything wrong.
.It fill-paragraph
Justify a paragraph, wrapping text at the current fill column.
.It find-file
Select a file for editing.
First check if the file can be found
in another buffer; if it is there, just switch to that buffer.
If the file cannot be found, create a new buffer, read in the
file from disk, and switch to the new buffer.
.It find-file-read-only
Same as find-file, except the new buffer is set to read-only.
.It find-alternate-file
Replace the current file with an alternate one.
Semantics for finding the replacement file are the same as
find-file, except the current buffer is killed before the switch.
If the kill fails, or is aborted, revert to the original file.
.It find-file-other-window
Opens the specified file in a second buffer.
Splits the current window if necessary.
.It find-tag
Jump to definition of tag at dot.
.It forward-char
Move cursor forwards (or backwards, if
.Va n
is negative)
.Va n
characters.
Returns an error if the end of buffer is reached.
.It forward-paragraph
Move forward
.Va n
paragraphs.
Paragraphs are delimited by <NL><NL> or <NL><TAB> or <NL><SPACE>.
.It forward-word
Move the cursor forward by the specified number of words.
.It global-set-key
Bind a key in the global (fundamental) key map.
.It global-unset-key
Unbind a key from the global (fundamental) key map; i.e. set it to 'rescan'.
.It global-wd-mode
Toggle global working-directory mode.
When enabled,
.Nm
defaults to opening files (and executing commands like compile and grep)
relative to the global working directory.
When disabled, a working directory is set for each buffer.
.It goto-line
Go to a specific line.
If an argument is present, then
it is the line number, else prompt for a line number to use.
.It help-help
Prompts for one of (a)propos, (b)indings, des(c)ribe key briefly.
.It insert
Insert a string, mainly for use from macros.
.It insert-buffer
Insert the contents of another buffer at dot.
.It insert-file
Insert a file into the current buffer at dot.
.It insert-with-wrap
Insert the bound character with word wrap.
Check to see if we're past the fill column, and if so,
justify this line.
.It isearch-backward
Use incremental searching, initially in the reverse direction.
isearch ignores any explicit arguments.
If invoked during macro definition or evaluation, the non-incremental
search-backward is invoked instead.
.It isearch-forward
Use incremental searching, initially in the forward direction.
isearch ignores any explicit arguments.
If invoked during macro definition or evaluation, the non-incremental
search-forward is invoked instead.
.It join-line
Join the current line to the previous.
If called with an argument,
join the next line to the current one.
.It just-one-space
Delete any whitespace around dot, then insert a space.
.It keyboard-quit
Abort the current action.
.It kill-buffer
Dispose of a buffer, by name.
If the buffer name does not start and end with an asterisk,
prompt the user if the buffer
has been changed.
.It kill-line
Kill line.
If called without an argument, it kills from dot to the end
of the line, unless it is at the end of the line, when it kills the
newline.
If called with an argument of 0, it kills from the start of the
line to dot.
If called with a positive argument, it kills from dot
forward over that number of newlines.
If called with a negative argument
it kills any text before dot on the current line, then it kills back
abs(n) lines.
.It kill-paragraph
Delete
.Va n
paragraphs starting with the current one.
.It kill-region
Kill the currently defined region.
.It kill-word
Delete forward
.Va n
words.
.It leave-tmpdir-backups
Modifies the behaviour of backup-to-home-directory.
Backup files that would normally reside in
.Pa /tmp
are left there and not moved to the
.Pa ~/.mg.d
directory.
.It line-number-mode
Toggle whether the line number is displayed in the modeline.
.It list-buffers
Display the list of available buffers.
.It load
Prompt the user for a filename, and then execute commands
from that file.
.It local-set-key
Bind a key mapping in the local (topmost) mode.
.It local-unset-key
Unbind a key mapping in the local (topmost) mode.
.It make-backup-files
Toggle generation of backup files.
.It make-directory
Prompt the user for a path or directory name which is then created.
.It mark-paragraph
Mark
.Va n
paragraphs.
.It mark-whole-buffer
Marks whole buffer as a region by putting dot at the beginning and mark
at the end of buffer.
.It meta-key-mode
When disabled, the meta key can be used to insert extended-ascii (8-bit)
characters.
When enabled, the meta key acts as usual.
.It negative-argument
Process a negative argument for keyboard-invoked functions.
.It newline
Insert a newline into the current buffer.
.It newline-and-indent
Insert a newline, then enough tabs and spaces to duplicate the indentation
of the previous line.
Assumes tabs are every eight characters.
.It next-line
Move forward
.Va n
lines.
.\" .It no-tab-mode
.\" Toggle notab mode.
.\" In this mode, spaces are inserted rather than tabs.
.It not-modified
Turn off the modified flag in the current buffer.
.It open-line
Open up some blank space.
Essentially, insert
.Va n
newlines, then back up over them.
.It other-window
The command to make the next (down the screen) window the current
window.
There are no real errors, although the command does nothing if
there is only 1 window on the screen.
.It overwrite-mode
Toggle overwrite mode in the current buffer,
where typing overwrites existing characters rather than inserting them.
Can be set globally with set-default-mode.
.It prefix-region
Inserts a prefix string before each line of a region.
The prefix string is settable by using 'set-prefix-string'.
.It previous-line
Move backwards
.Va n
lines.
.It previous-window
This command makes the previous (up the screen) window the
current window.
There are no errors, although the command does not do
a lot if there is only 1 window.
.It pop-tag-mark
Return to position where find-tag was previously invoked.
.It push-shell
Suspend
.Nm
and switch to alternate screen, if available.
.It pwd
Display current (global) working directory in the status area.
.It query-replace
Query Replace.
Search and replace strings selectively, prompting after each match.
.It replace-string
Replace string globally without individual prompting.
.It query-replace-regexp
Replace strings selectively.
Does a search and replace operation using regular
expressions for both patterns.
.It quoted-insert
Insert the next character verbatim into the current buffer; i.e. ignore
any function bound to that key.
.It re-search-again
Perform a regular expression search again, using the same search
string and direction as the last search command.
.It re-search-backward
Search backwards using a regular expression.
Get a search string from the user, and search, starting at dot
and proceeding toward the front of the buffer.
If found, dot is left
pointing at the first character of the pattern [the last character that
was matched].
.It re-search-forward
Search forward using a regular expression.
Get a search string from the user and search for it starting at dot.
If found, move dot to just after the matched characters.
display does all
the hard stuff.
If not found, it just prints a message.
.It recenter
Reposition dot in the current window.
By default, the dot is centered.
If given a positive argument (n), the display is repositioned to line
n.
If
.Va n
is negative, it is that line from the bottom.
.It redraw-display
Refresh the display.
Recomputes all window sizes in case something has changed.
.It revert-buffer
Revert the current buffer to the latest file on disk.
.It save-buffer
Save the contents of the current buffer if it has been changed,
optionally creating a backup copy.
.It save-buffers-kill-emacs
Offer to save modified buffers and quit
.Nm .
.It save-some-buffers
Look through the list of buffers, offering to save any buffer that
has been changed.
Buffers that are not associated with files (such
as *scratch*, *grep*, *compile*) are ignored.
.It scroll-down
Scroll backwards
.Va n
pages.
A two-line overlap between pages is
assumed.
If given a repeat argument, scrolls back lines, not pages.
.It scroll-one-line-down
Scroll the display down
.Va n
lines without changing the cursor position.
.It scroll-one-line-up
Scroll the display
.Va n
lines up without moving the cursor position.
.It scroll-other-window
Scroll the next window in the window list window forward
.Va n
pages.
.It scroll-up
Scroll forward one page.
A two-line overlap between pages is
assumed.
If given a repeat argument, scrolls back lines, not pages.
.It search-again
Search again, using the same search string and direction as the last
search command.
.It search-backward
Reverse search.
Get a search string from the user, and search, starting
at dot and proceeding toward the front of the buffer.
If found, dot is
left pointing at the first character of the pattern (the last character
that was matched).
.It search-forward
Search forward.
Get a search string from the user, and search for it
starting at dot.
If found, dot gets moved to just after the matched
characters, if not found, print a message.
.It self-insert-command
Insert a character.
.It sentence-end-double-space
Toggle double or single spaces for end of sentences.
Double is the default.
Currently only affects fill-paragraph.
.It set-case-fold-search
Set case-fold searching, causing case not to matter
in regular expression searches.
This is the default.
.It set-default-mode
Append the supplied mode to the list of default modes
used by subsequent buffer creation.
Built in modes include: fill, indent and overwrite.
.It set-fill-column
Prompt the user for a fill column.
Used by auto-fill-mode.
.It set-mark-command
Sets the mark in the current window to the current dot location.
.It set-prefix-string
Sets the prefix string to be used by the 'prefix-region' command.
.It shell-command
Execute external command from mini-buffer.
.It shell-command-on-region
Provide the text in region to the shell command as input.
.It shrink-window
Shrink current window by one line.
The window immediately below is expanded to pick up the slack.
If only one window is present, this command has no effect.
.It split-window-vertically
Split the current window.
A window smaller than 3 lines cannot be split.
.It start-kbd-macro
Start defining a keyboard macro.
Macro definition is ended by invoking end-kbd-macro.
.It suspend-emacs
Suspend
.Nm
and switch back to alternate screen, if in use.
.It switch-to-buffer
Prompt and switch to a new buffer in the current window.
.It switch-to-buffer-other-window
Switch to buffer in another window.
.It toggle-read-only
Toggle the read-only flag on the current buffer.
.It transpose-chars
Transpose the two characters in front of and under dot,
then move forward one character.
Treat newline characters the same as any other.
.It transpose-paragraphs
Transpose adjacent paragraphs.
If multiple iterations are requested, the current paragraph will
be moved
.Va n
paragraphs forward.
.It transpose-words
Transpose adjacent words.
.It undo
Undo the most recent action.
If invoked again without an intervening command,
move the undo pointer to the previous action and undo it.
.It undo-boundary
Add an undo boundary.
This is not usually done interactively.
.It undo-boundary-toggle
Toggle whether undo boundaries are generated.
Undo boundaries are often disabled before operations that should
be considered atomically undoable.
.It undo-enable
Toggle whether undo information is kept.
.It undo-list
Show the undo records for the current buffer in a new buffer.
.It universal-argument
Repeat the next command 4 times.
Usually bound to C-u.
This command may be stacked; e.g.\&
C-u C-u C-f moves the cursor forward 16 characters.
.It upcase-region
Upper case region.
Change all of the lower case characters in the region to
upper case.
.It upcase-word
Move the cursor forward by the specified number of words.
As it moves, convert any characters to upper case.
.It visible-bell
Toggle the visible bell.
If this toggle is on, the modeline will flash.
.It visit-tags-table
Record name of the tags file to be used for subsequent find-tag.
.It what-cursor-position
Display a bunch of useful information about the current location of
dot.
The character under the cursor (in octal), the current line, row,
and column, and approximate position of the cursor in the file (as a
percentage) is displayed.
The column position assumes an infinite
position display; it does not truncate just because the screen does.
.It write-file
Ask for a file name and write the contents of the current buffer to
that file.
Update the remembered file name and clear the buffer
changed flag.
.It yank
Yank text from kill-buffer.
Unlike emacs, the
.Nm
kill buffer consists only
of the most recent kill.
It is not a ring.
.El
.Sh MG DIRED KEY BINDINGS
Specific key bindings are available in dired mode.
.Pp
.Bl -tag -width xxxxxxxxxxxxxxxxxx -offset indent -compact
.It DEL
dired-unmark-backward
.It RET, e, f and C-m
dired-find-file
.It SPC
dired-next-line
.It !
dired-shell-command
.It +
dired-create-directory
.It a
dired-find-alternate-file
.It c
dired-do-copy
.It d and C-d
dired-flag-file-deletion
.It g
dired-revert
.It n
dired-next-line
.It o
dired-find-file-other-window
.It p
dired-previous-line
.It q
quit-window
.It r
dired-do-rename
.It u
dired-unmark
.It x
dired-do-flagged-delete
.It C-v
dired-scroll-down
.It M-v
dired-scroll-up
.El
.Sh MG DIRED COMMANDS
The following are a list of the commands specific to dired mode:
.Bl -tag -width Ds
.It dired-create-directory
Create a directory.
.It dired-do-copy
Copy the file listed on the current line of the dired buffer.
.It dired-do-flagged-delete
Delete the files that have been flagged for deletion.
.It dired-do-rename
Rename the file listed on the current line of the dired buffer.
.It dired-find-alternate-file
Replace the current dired buffer with an alternate one as specified
by the position of the cursor in the dired buffer.
.It dired-find-file
Open the file on the current line of the dired buffer.
If the cursor is on a directory it will be opened in dired mode.
.It dired-flag-file-deletion
Flag the file listed on the current line for deletion.
This is indicated in the buffer by putting a D at the left margin.
No files are actually deleted until the function dired-do-flagged-delete
is executed.
.It dired-find-file-other-window
Open the file on the current line of the dired buffer in a
different window.
.It dired-next-line
Move the cursor to the next line.
.It dired-other-window
This function works just like dired, except that it puts the
dired buffer in another window.
.It dired-previous-line
Move the cursor to the previous line.
.It dired-revert
Refresh the dired buffer.
.It dired-scroll-down
Scroll down the dired buffer.
.It dired-scroll-up
Scroll up the dired buffer.
.It dired-unmark
Remove the deletion flag for the file on the current line.
.It dired-unmark-backward
Remove the deletion flag from the file listed on the previous line
of the dired buffer, then move up to that line.
.It quit-window
Close the current dired buffer.
.El
.Sh CONFIGURATION FILES
There are two configuration files,
.Pa .mg
and
.Pa .mg-TERM .
Here,
.Ev TERM
represents the name of the terminal type; e.g. if the terminal type
is set to
.Dq vt100 ,
.Nm
will use
.Pa .mg-vt100
as a startup file.
The terminal type startup file is used first.
.Pp
The startup file format is a list of commands, one per line, as used for
interactive evaluation.
Strings that are normally entered by the user at any subsequent prompts
may be specified after the command name; e.g.:
.Bd -literal -offset indent
global-set-key ")" self-insert-command
global-set-key "\e^x\e^f" find-file
global-set-key "\ee[Z" backward-char
set-default-mode fill
set-fill-column 72
auto-execute *.c c-mode
.Ed
.Pp
Comments can be added to the startup files by placing
.Dq \;
or
.Dq #
as the first character of a line.
.Sh FILES
.Bl -tag -width /usr/share/doc/mg/tutorial -compact
.It Pa ~/.mg
normal startup file
.It Pa ~/.mg-TERM
terminal-specific startup file
.It Pa ~/.mg.d
alternative backup file location
.It Pa /usr/share/doc/mg/tutorial
concise tutorial
.El
.Sh SEE ALSO
.Xr ctags 1 ,
.Xr vi 1
.Sh CAVEATS
Since it is written completely in C, there is currently no
language in which extensions can be written;
however, keys can be rebound and certain parameters can be changed
in startup files.
.Pp
In order to use 8-bit characters (such as German umlauts), the Meta key
needs to be disabled via the
.Dq meta-key-mode
command.
.Pp
Multi-byte character sets, such as UTF-8, are not supported.
@


1.104
log
@Add 'sentence-end-double-space'.

If you prefer "lighter" punctuation and one space between sentences,
for example:

Mr and Mrs Jones are from the UK. They arrived today.

over more liberal use of full stops and double spaces between
sentences:

Mr. and Mrs. Jones are from the U.K.  They arrived today.

then toggling 'sentence-end-double-space' will make mg's
fill-paragraph function format text using one space instead of two
(the default) between sentences. However, be careful, should you have
a double spaced document and accidentally "format" it to have single
spaces, then you may have a problem. mg won't be able to revert the
formatting for you (unless you have a previous version of the text in
the "undo" history, or are using mg's backup facility and haven't
opened and saved multiple times!).

Comments from schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.103 2016/03/17 21:56:12 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: March 17 2016 $
d97 2
a98 2
Further, if any application creates backup files in the
.Ev TMPDIR ,
d664 2
a665 2
Backup files that would normally reside in the system
.Ev TMPDIR
@


1.103
log
@Show modes for buffers more clearly. ok jasper@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.102 2016/03/16 18:27:00 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: March 16 2016 $
d841 4
@


1.102
log
@notab mode is not enabled at the moment.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.101 2016/01/02 10:39:19 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: January 2 2016 $
d378 1
a378 1
Toggle auto-fill mode (sometimes called mail-mode),
d381 1
d383 3
a385 1
Toggle indent mode, where indentation is preserved after a newline.
d723 3
a725 2
Toggle overwrite mode, where typing in a buffer overwrites
existing characters rather than inserting them.
@


1.101
log
@Add dired-find-alternate-file.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.100 2015/12/30 16:53:17 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: December 30 2015 $
d844 1
a844 1
Built in modes include: fill, indent, overwrite, and notab.
@


1.100
log
@Widen the dired command list. ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.99 2015/12/29 19:44:32 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: December 29 2015 $
d955 2
d993 3
@


1.99
log
@Add transpose-words, ok jasper@@.
Limited to one iteration until 'undo' is looked into.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.98 2015/12/24 09:07:47 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: December 24 2015 $
d944 1
a944 1
.Bl -tag -width xxxxxxxxxxxx -offset indent -compact
@


1.98
log
@Add -R option to allow files specified on the command line to be
opened read-only. ok jasper@@ phessler@@ and man page advice from jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.97 2015/12/22 15:33:16 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: December 22 2015 $
d309 2
d886 2
@


1.97
log
@Remove commands that are not implemented, at the moment. Added by
accident in previous diff.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.96 2015/12/21 09:04:52 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: December 21 2015 $
d12 1
a12 1
.Op Fl n
d43 2
@


1.96
log
@Add RET to dired-find-file. ok jasper@@
(and jasper@@ ok'd recent tutorial diff, forgot to mention)
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.95 2015/11/18 17:41:09 reyk Exp $
d4 1
a4 1
.Dd $Mdocdate: November 18 2015 $
a306 2
.It M-t
transpose-words
a881 6
.It transpose-words
Transpose adjacent words.
If multiple iterations are requested, the current word will
be moved
.Va n
words forward.
@


1.95
log
@Remove "space-to-tabstop" from the manpage - it is not enabled,
ifdef'ed with NOTAB, and doesn't seem to work.

OK lum@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.94 2015/10/12 07:55:52 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: October 12 2015 $
d307 2
d884 6
d949 2
a960 2
.It e, f and C-m
dired-find-file
@


1.94
log
@Correctly mark-up some recent additions. ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.93 2015/09/26 15:03:15 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: September 26 2015 $
a855 3
.It space-to-tabstop
Insert enough spaces to reach the next tab-stop position.
By default, tab-stops occur every 8 characters.
@


1.93
log
@Add transpose-paragraphs. ok jasper@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.92 2015/09/24 07:07:59 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: September 24 2015 $
d678 3
a680 1
Mark n paragraphs.
d882 3
a884 1
be moved n paragraphs forward.
@


1.92
log
@Add mark-paragraph. ok jasper@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.91 2015/09/09 19:03:13 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: September 9 2015 $
d877 4
@


1.91
log
@mg doesn't support 'dired-do-delete'. Change description to the
supported function.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.90 2015/03/17 15:20:38 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: March 17 2015 $
d295 2
d677 2
@


1.90
log
@correct command name; from kaspars bankovskis
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.89 2014/11/03 14:53:22 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: November 3 2014 $
d982 1
a982 1
No files are actually deleted until the function dired-do-deletions
@


1.89
log
@comment out no-tab-mode, since mg is currently compiled without it;

From: Kaspars Bankovskis
ok lum
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.88 2014/04/02 20:32:00 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: April 2 2014 $
d89 1
a89 1
make-backup-file command.
@


1.88
log
@Add the '#' character as a comment character in the startup file.
Include ';' and '#' into man page.  ok deraadt@@ phessler@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.87 2014/03/27 07:30:25 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: March 27 2014 $
d694 3
a696 3
.It no-tab-mode
Toggle notab mode.
In this mode, spaces are inserted rather than tabs.
@


1.87
log
@new-line -> newline;
not sure whether it's worth flattening the other few examples of
this in our pages, but since it's used multiple times here without
hyphen, at least keeps this page consistent;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.86 2014/03/26 22:02:06 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: March 26 2014 $
d1036 6
@


1.86
log
@Previously, C-t (transpose two chars) did not behave the same as
Emacs.  This diff makes mg behave more so. Though new-line characters
are treated as any other.

Difference from emacs observed and reported by deraadt@@. First diff
tested and ridiculed by deraadt@@. Second diff not tested and not
ridiculed by deraadt@@ but at least email responded to.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.85 2013/12/19 19:09:27 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: December 19 2013 $
d872 1
a872 1
Treat new-line characters the same as any other.
@


1.85
log
@Amend dired-unmark-backward to fit with recent change and
include DEL in DIRED KEY BINDINGS.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.84 2013/06/03 05:10:59 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: June 3 2013 $
d870 3
a872 5
Transpose the two characters on either side of dot.
If dot is at the end of the line, transpose the two characters before it.
Return with an error if dot is at the beginning of line;
it seems to be a bit pointless to
make this work.
@


1.84
log
@Add the 'g' character and dired-revert to refresh the dired buffer.
ok jmc@@ for man page.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.83 2013/06/02 10:09:21 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: June 2 2013 $
d932 2
d1005 2
a1006 2
Remove the deletion flag from the file listed on the current line
of the dired buffer, then move up one line.
@


1.83
log
@Add the 'quit-window' dired command and receive a basic English lesson
from jmc@@ again.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.82 2013/06/02 09:53:42 lum Exp $
d944 2
d994 2
@


1.82
log
@Rename the dired-* commands to be like the emacs equivalents.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.81 2013/06/01 17:33:49 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: June 1 2013 $
d950 2
d1001 2
@


1.81
log
@new sentence, new line;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.80 2013/06/01 14:47:07 lum Exp $
d939 1
a939 1
dired-copy-file
d941 1
a941 1
dired-flag-file-deleted
d951 1
a951 1
dired-rename-file
d953 1
a953 1
dired-unflag
d955 1
a955 1
dired-do-deletions
a963 5
.It dired-backup-unflag
Remove the deletion flag from the file listed on the current line
of the dired buffer, then move up one line.
.It dired-copy-file
Copy the file listed on the current line of the dired buffer.
d966 3
a968 1
.It dired-do-deletions
d970 2
d975 1
a975 4
.It dired-find-file-other-window
Open the file on the current line of the dired buffer in a
different window.
.It dired-flag-file-deleted
d980 3
a989 2
.It dired-rename-file
Rename the file listed on the current line of the dired buffer.
d994 1
a994 1
.It dired-unflag
d996 3
@


1.80
log
@Add dired key bindings. ok and advice jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.79 2013/05/31 18:03:44 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: May 31 2013 $
d903 2
a904 1
Toggle the visible bell. If this toggle is on, the modeline will flash.
@


1.79
log
@Make the system bell toggleable via 'audible-bell', and if switched
off, make available an alternative 'visible-bell'.

ok florian@@ jasper@@ Feedback Sunil Nimmagadda.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.78 2013/05/27 19:28:51 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: May 27 2013 $
d926 33
@


1.78
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.77 2013/05/27 18:16:32 lum Exp $
d364 2
d902 2
@


1.77
log
@Add dired commands. ok and suggestions jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.76 2013/05/22 19:23:45 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: May 22 2013 $
d922 1
d929 2
a932 2
.It dired-copy-file
Copy the file listed on the current line of the dired buffer.
d937 1
a937 1
If the cursor is on a directory it will be opened in dired mode. 
@


1.76
log
@Shuffle shell-command-on-region around to give shell-command.
ok florian@@ jasper@@
Testing Sunil Nimmagadda
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.75 2012/12/28 16:12:50 naddy Exp $
d4 1
a4 1
.Dd $Mdocdate: December 28 2012 $
d922 38
@


1.75
log
@Respect locale for ctype purposes, e.g. display ISO Latin 1 characters;
ok stsp@@ reyk@@

Document that multi-byte character sets are not supported; from stsp@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.74 2012/12/27 18:51:52 florian Exp $
d4 1
a4 1
.Dd $Mdocdate: December 27 2012 $
d271 2
d840 2
@


1.74
log
@diff-buffer-with-file
input gsoares@@, Sunil Nimmagadda, jasper@@
ok jasper@@, benno@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.73 2012/12/04 10:54:20 florian Exp $
d4 1
a4 1
.Dd $Mdocdate: December 4 2012 $
d971 2
@


1.73
log
@Bring back column numbers and make them configurable, off by default
to not kill slow serial lines.
Committing my independently written, slightly different version, as
requested by jasper@@.

OK jasper@@, OK reyk@@ for jasper@@'s version of the diff
"Sure, if you think so then." deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.72 2012/11/27 19:46:46 jasper Exp $
d4 1
a4 1
.Dd $Mdocdate: November 27 2012 $
d498 2
@


1.72
log
@- add 'make-directory' (not bound to any shortcut).

feedback from florian@@ lum@@
ok florian@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.71 2012/11/13 22:03:44 florian Exp $
d4 1
a4 1
.Dd $Mdocdate: November 13 2012 $
d417 2
@


1.71
log
@Column numbers are gone for good.
"yes" deraadt, input jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.70 2012/10/22 08:31:42 florian Exp $
d4 1
a4 1
.Dd $Mdocdate: October 22 2012 $
d665 2
@


1.70
log
@Add (r)evert prompt to "File changed on disk; really edit the buffer"
prompt.

input, ok lum@@, man bit ok jmc@@, ok benno@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.69 2012/10/12 21:13:47 jasper Exp $
d4 1
a4 1
.Dd $Mdocdate: October 12 2012 $
d653 1
a653 1
Toggle whether line and column numbers are displayed in the modeline.
@


1.69
log
@- implement "revert-buffer", which reverts the current buffer to what's on disk
- split gotoline() into the argument handling part and the part that actually
  goes to the specified line number so it can be re-used by revertbuffer()

input/ok florian@@ haesbaert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.68 2012/07/11 19:56:13 sobrado Exp $
d4 1
a4 1
.Dd $Mdocdate: July 11 2012 $
d53 7
@


1.68
log
@fix three typos.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.67 2012/06/21 17:55:10 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: June 21 2012 $
d755 2
@


1.67
log
@Shuffle leave-tmpdir-backups up to correct place in alphabetic order.
(the command name changed at one point from move-... -> leave-...)
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.66 2012/06/20 07:25:50 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: June 20 2012 $
d392 2
a393 2
matching delimeter.
For delimeters other than
d439 1
a439 1
Nagivate to the next file.
@


1.66
log
@make a list format more nicely; ok lum
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.65 2012/06/19 21:29:39 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: June 19 2012 $
d638 7
a664 7
.It leave-tmpdir-backups
Modifies the behaviour of backup-to-home-directory.
Backup files that would normally reside in the system
.Ev TMPDIR
are left there and not moved to the
.Pa ~/.mg.d
directory.
@


1.65
log
@various small markup fixes; ok lum
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.64 2012/06/18 13:55:24 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: June 18 2012 $
d111 1
a111 1
.Bl -tag -width xxxxxxxxxx -compact
@


1.64
log
@Add a BACKUP FILES section.
Suggested by jmc@@
He will review further.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.63 2012/06/18 11:35:31 lum Exp $
d77 3
a79 1
Backup files have a '~' character appended to the file name and
d84 3
a86 2
working directory, or all backups can be moved to a '~/.mg.d' directory
where files retain their path name to retain uniqueness.
d88 2
a89 1
Further, if any application creates backup files in the TMPDIR,
d369 3
a371 1
Save backup copies to a ~/.mg.d directory instead of working directory.
d660 5
a664 2
Backup files that would normally reside in the system TMPDIR are
left there and not moved to the ~/.mg.d directory.
d906 1
a906 1
.Pa .mg ,
d911 1
a911 1
represents the name of the terminal type; e.g., if the terminal type
@


1.63
log
@Add ~/.mg.d to FILES. Reviewed by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.62 2012/06/14 17:21:22 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: June 14 2012 $
d76 11
@


1.62
log
@Allow mg to save backup files to a users home directory.
Suggestions from eric@@ and Sunil Nimmagadda.
Remarks deraadt@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.61 2012/06/07 15:15:04 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: June 7 2012 $
d918 2
@


1.61
log
@Add some cscope support to mg. From Sunil Nimmagadda.  Due to some
structural limitations in mg, mg doesn't behave exactly the same as
emacs cscope (see the README) but is still very usable.

man page bits reviewed by jmc@@, otherwise tested and reviewed by
myself.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.60 2012/05/25 15:41:09 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: May 25 2012 $
d353 3
d641 4
@


1.60
log
@Be consistent on how we describe key-strokes: UP-low (c-H -> C-h)
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.59 2012/04/11 17:51:10 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: April 11 2012 $
d82 8
d103 18
d398 26
@


1.59
log
@Add:
 1. C-x h to mark whole buffer.
 2. M-| to pipe current region to external command.
From Sunil Nimmagadda.

Feedback from deraadt@@ and myself. ok for man page amendments from jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.58 2012/02/09 09:00:14 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: February 9 2012 $
d297 1
a297 1
one or more invocations of the universal argument, usually bound to C-U.
d351 1
a351 1
Toggle bsmap mode, where DEL and c-H are swapped.
@


1.58
log
@typo. ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.57 2011/11/28 07:58:23 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: November 28 2011 $
d199 2
d265 2
d579 3
d744 2
@


1.57
log
@jmc's suggested text for the ctags man page update was slighty
different in the committed version. Change to his original text,
requested by him.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.56 2011/11/28 04:41:39 lum Exp $
d723 1
a723 1
Set case-fold searching, causing case nopt to matter
@


1.56
log
@Add some ctags support to mg. From Sunil Nimmagadda.

Man page review and suggestions from jmc@@

Revewied and tested by myself, and ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.55 2011/09/02 02:37:52 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: September 2 2011 $
d78 1
a78 1
supports tags file created by
d80 2
a81 2
allowing user to quickly locate various object definitions.
Note that emacs uses etags, not ctags.
@


1.55
log
@Add email address for diffs and remove plural man pages. ok jmc@@

Also tweak man page from jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.54 2011/08/31 14:34:28 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: August 31 2011 $
d76 6
d221 4
d474 2
d621 2
d793 2
d854 1
@


1.54
log
@Remove 2nd person. ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.53 2011/08/01 12:15:23 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: August 1 2011 $
d829 1
a829 1
.Bl -tag -width ~/.mg-TERM -compact
@


1.53
log
@Change Gnu to GNU in man page (also, while here, in README and in a comment)
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.52 2011/02/02 05:27:55 lum Exp $
d4 1
a4 1
.Dd $Mdocdate: February 2 2011 $
d79 1
a79 1
where the Meta key may be either a special key on your keyboard
d450 3
a452 3
First check if you can find the file
in another buffer; if you can find it, just switch to the buffer.
If you cannot find the file, create a new buffer, read in the
d778 1
a778 1
As you move, convert any characters to upper case.
d807 1
a807 1
represents the name of your terminal type; e.g., if your terminal type
d841 2
a842 2
language in which you can write extensions;
however, you can rebind keys and change certain parameters
@


1.52
log
@Put correct path for tutorial into man page. oops.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.51 2011/02/02 05:21:36 lum Exp $
d77 1
a77 1
Normal editing commands are very similar to Gnu Emacs.
@


1.51
log
@Move mg(1) tutorial file into a release, instead of languishing in src.
ok nick@@ schwarze@@ miod@@ kjell@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.50 2011/01/18 17:37:32 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: January 18 2011 $
d834 1
a834 1
.It Pa /usr/share/mg/tutorial
@


1.50
log
@new sentence, new line;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.49 2011/01/18 16:25:40 kjell Exp $
d834 2
@


1.49
log
@Add join-line, bound to M-^
Join the current line to the previous.

original diff by Henri Kemppainen. minor mod to add undo boundaries.
Thanks!
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.48 2011/01/17 03:12:06 kjell Exp $
d4 1
a4 1
.Dd $Mdocdate: January 17 2011 $
d516 2
a517 1
Join the current line to the previous.  If called with an argument,
@


1.48
log
@Add back-to-indentation. (M-m)
Move the dot to the first non-whitespace character on the current line.
from Henri Kemppainen . ok theo
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.47 2010/10/07 17:08:58 sobrado Exp $
d4 1
a4 1
.Dd $Mdocdate: October 7 2010 $
d223 2
d515 3
@


1.47
log
@use an upper case "C" in "Control" for consistency; use the same
capitalization for keys in Control and Meta for both key bindings
and descriptions.

ok kjell@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.46 2010/03/26 19:30:40 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: March 26 2010 $
d233 2
d309 2
@


1.46
log
@dispense with some wacky escape sequences;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.45 2009/06/23 19:45:10 nicm Exp $
d4 1
a4 1
.Dd $Mdocdate: June 23 2009 $
d78 1
a78 1
In the following examples, C-x means control-X, and M-x means Meta-X,
@


1.45
log
@Escape ) to make "C-x )" spaced correctly in key list.

"if it formats correctly, go for it" jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.44 2009/06/05 06:29:44 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: June 5 2009 $
d812 2
a813 2
global-set-key "\\^x\\^f" find-file
global-set-key "\\e[Z" backward-char
@


1.44
log
@the the
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.43 2009/06/04 23:56:50 kjell Exp $
d4 1
a4 1
.Dd $Mdocdate: June 4 2009 $
d161 1
a161 1
.It C-x )
@


1.43
log
@If a buffer is created with a name that starts and ends with an askerisk
(e.g. *scratch*, *Completions*, *grep*) it is considered throwaway; i.e.
the user will NOT be prompted to save changes when the buffer is killed.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.42 2008/11/06 14:04:48 sobrado Exp $
d4 1
a4 1
.Dd $Mdocdate: November 6 2008 $
d55 1
a55 1
throwaway; i.e. the user will not be prompted to save changes when the
@


1.42
log
@add a description for the recently added c-mode.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.41 2008/09/15 16:13:35 kjell Exp $
d4 1
a4 1
.Dd $Mdocdate: September 15 2008 $
d53 4
d515 2
a516 1
Prompt the user if the buffer
@


1.41
log
@Expose the undo commands as proper mg functions.
This should have no functional change on undo, but it does facilitate
testing undo behavior.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.40 2008/06/29 08:28:01 sobrado Exp $
d4 1
a4 1
.Dd $Mdocdate: June 29 2008 $
d328 2
@


1.40
log
@documentation tweaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.39 2008/06/15 21:01:55 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: June 15 2008 $
d739 9
@


1.39
log
@first pass: it would be nice if mg users read over this page and sent us
any fixes;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.38 2008/06/15 07:53:58 kjell Exp $
d348 3
a350 1
a key, and an mg command, then creates a keybinding in the appropriate
d400 3
a402 1
Return an mg version string.
d408 1
a408 1
Move cursor to the end of the line
d413 3
a415 1
Evaluate the current buffer as a series of mg commands.
d469 1
a469 1
Unbind a key from the global (fundamental) key map; i.e. set it to 'rescan'
d486 1
a486 1
Insert the contents of another buffer at dot
d593 3
a595 1
Suspend mg and switch to alternate screen, if available.
d634 1
a634 1
is negative, it is that line from the bottom
d642 2
a643 1
Offer to save modified buffers and quit mg.
d663 1
a663 1
lines up without moving the cursor position
d703 1
a703 1
Sets the mark in the current window to the current dot location
d720 3
a722 1
Suspend mg and switch back to alternate screen, if in use.
d749 1
a749 1
upper case
d768 3
a770 1
Unlike emacs, the mg kill buffer consists only
@


1.38
log
@Typos, forgotten word
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.37 2008/06/15 07:31:41 kjell Exp $
d57 1
a57 1
.Em point 
d278 1
a278 1
One common use of the parameter is in mode toggles (e.g.
d302 1
a302 1
Toggle indent mode, where identation is preserved after a newline.
d347 1
a347 1
Prompts the user for a named keymap (mode), 
d434 1
a434 1
If you cannot find the file, create a new buffer, read in the 
d441 1
a441 1
'find-file', except the current buffer is killed before the switch.
d457 1
a457 1
Paragraphs are delimited by <NL><NL> or <NL><TAB> or <NL><SPACE>
d469 1
a469 1
relative to the global working directory
d476 1
a476 1
prompts for one of (a)propos, (b)indings, des(c)ribe key briefly
d490 1
a490 1
If invoked during macro definition or evaluation, the non-incremental 
d495 1
a495 1
If invoked during macro definition or evaluation, the non-incremental 
d522 1
a522 1
Kill the currently defined region
d528 1
a528 1
Toggle whether line and column numbers are displayed in the modeline
d545 1
a545 1
Process a negative argument for keyboard-invoked functions
d572 1
a572 1
Toggle overwrite mode, where typing in a buffer overwrites 
d609 1
a609 1
If found dot is left
d621 1
a621 1
by default, The dot is centered.
d720 1
a720 1
If dot is at the end of the line transpose the two characters before it.
d722 1
a722 1
 it seems to be a bit pointless to
d733 1
a733 1
This command may be stacked; e.g.
@


1.37
log
@How about we actually document the 230-odd functions that make up
mg now? Keymaps, too.
I've guaranteed to have mucked up somewhere in here, but really -
this man page can't really get less useful.
Modes to come.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.36 2008/05/29 19:58:15 sobrado Exp $
d4 1
a4 1
.Dd $Mdocdate: May 29 2008 $
d783 2
a784 2
global-set-key "\^x\^f" find-file
global-set-key "\e[Z" backward-char
d801 2
a802 1
however, you can rebind keys and change certain parameters.
@


1.36
log
@add a detailed synopsis to mg(1); synchronize with usage.

tweaks by jmc@@

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.35 2008/01/10 21:56:24 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: January 10 2008 $
d57 3
a59 1
.Em point .
d74 1
a74 1
In the following examples, ^X means control-X, and M-X means Meta-X,
d78 133
a210 19
.Bl -tag -width xxxxx -compact
.It ^F
Forward character.
.It ^B
Backwards character.
.It ^N
Next line.
.It ^P
Previous line.
.It ^A
Start of line.
.It ^E
End of line.
.It ^D
Delete current character.
.It ^S
Interactive search forward.
.It ^R
Interactive search backwards.
d212 1
a212 25
Interactive search-and-replace.
.It ^O
Open a new line at cursor position.
.It ^T
Transpose characters.
.It ^U
Repeat next command 4 times
(can be cascaded i.e. ^U^U^F will move 16 characters forward).
.Pp
.It ^K
Kill to end of line (placing into kill buffer).
.It ^Y
Yank kill buffer into current location.
.It ^SPC
Set mark.
.It ^W
Kill region
(cuts from previously set mark to current location, into kill buffer).
.It M-W
Copy region (into kill buffer).
.Pp
.It ^V
Next page.
.It M-V
Previous page.
d214 1
a214 1
Start of buffer.
d216 41
a256 14
End of buffer.
.Pp
.It ^X^C
Save buffers and quit.
.It ^X-O
Next window.
.It ^X-N
Next window.
.It ^X-P
Previous window.
.It ^X-U
Undo.
.It ^_
Undo.
d259 5
a263 1
For a complete set of key bindings, type
d265 1
a265 1
.Sh COMMANDS
d278 483
a760 1
.\" A complete list of commands is given in mg(5)
d782 4
a785 1
auto-fill-mode
d787 1
a787 1
global-set-key "\e^x\e^f" find-file
d799 1
a799 6
.Nm
differs from other emacs implementations primarily in not having many
special modes for tasks other than straight editing, and in not having
special modes that support various programming languages.
.Pp
Since it is written completely in C, there is no
@


1.35
log
@kill trailing whitespace;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.34 2008/01/10 20:13:34 kjell Exp $
d12 4
a15 2
.Op Ar options
.Op Ar file ...
d29 1
a29 1
.It Ar +number
d37 1
a37 1
.It Fl f Ar <mode>
@


1.34
log
@This file is in the public domain. ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.33 2008/01/10 20:12:45 kjell Exp $
d192 1
a192 1
special modes that support various programming languages. 
@


1.33
log
@Greatly improve this man page. ok jmc@@
@
text
@d1 2
a2 1
.\"	$OpenBSD: mg.1,v 1.32 2007/05/31 19:20:13 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: May 31 2007 $
@


1.32
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.31 2007/02/20 04:26:26 cloder Exp $
d3 1
a3 1
.Dd $Mdocdate$
d16 1
a16 1
people who can't (or don't want to) run the real emacs for one
d28 3
a30 1
a space between the "+" sign and the number).
d41 27
a67 1
.Sh KEY BINDINGS
d137 1
a137 1
For more key bindings, type
d139 15
a153 4
.Sh CONFIGURATION AND COMMANDS
Amongst other major differences, the
.Nm
configuration files are much simpler than real emacs.
d168 1
d170 3
a172 1
interactive evaluation, e.g.:
a177 38
.Pp
Here's another example sequence that you may find useful.
By default,
.Dq ()
and
.Dq []
are recognized as brackets, so bracket matching can be done.
The following defines
.Dq {}
as brackets, and turns on the mode that causes
the cursor to "blink" to show you matching brackets.
.Bd -literal -offset indent
global-set-key } blink-matching-paren-hack
blink-matching-paren
set-default-mode blink
.Ed
.Pp
More complicated key mappings are also possible, though there are some
internal limitations compared to regular emacs.
An example of how to map control characters and sequences follows,
illustrating the Gosling-like line scrolling characters.
.Bd -literal -offset indent
global-set-key "\\^Z" scroll-one-line-up
global-set-key "\\ez" scroll-one-line-down
global-set-key "\\^_" suspend-emacs
.Ed
.Pp
In order to use 8-bit characters, the Meta key needs to be disabled.
This is required to read high bit characters like German umlauts.
ESC can be used instead of the Meta key \(en see the
.Sx KEY BINDINGS
section for details.
Execute the following command or add it to
.Pa .mg
to disable the Meta keys on startup:
.Bd -literal -offset indent
meta-key-mode
.Ed
d189 4
a192 5
differs primarily in not having special modes for tasks other than
straight editing, e.g., mail and news, and in not having special modes that
support various programming languages.
It does have text justification
and auto-fill mode.
d194 7
a200 5
language in which you can write extensions.
However, you can rebind keys and change some parameters.
There are no limits to line length or format.
Command, buffer, and file name completion and listing can
be done using the spacebar and tab keys.
@


1.31
log
@Back out -h doc after discussion with theo
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.30 2007/02/20 04:10:32 cloder Exp $
d3 1
a3 1
.Dd February 25, 2000
@


1.30
log
@Document -h option.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.29 2006/12/29 17:07:32 reyk Exp $
a35 2
.It Fl h
Display usage synopsis and exit.
@


1.29
log
@mention meta-key-mode in mg(1) to enable 8-bit character input. this
is required if you need to type characters like german umlauts. the mg
documentation is still very incomplete and will need some more work.

also split the manpage into sections to make it a bit more readable.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.28 2006/09/02 20:06:48 jmc Exp $
d36 2
@


1.28
log
@various improvements from deanna phillips; tweaked by myself
ok kjell
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.27 2006/07/17 15:31:23 kjell Exp $
d39 1
a39 1
.Pp
d111 1
a111 14
.Pp
.Nm
differs primarily in not having special modes for tasks other than
straight editing, e.g., mail and news, and in not having special modes that
support various programming languages.
It does have text justification
and auto-fill mode.
Since it is written completely in C, there is no
language in which you can write extensions.
However, you can rebind keys and change some parameters.
There are no limits to line length or format.
Command, buffer, and file name completion and listing can
be done using the spacebar and tab keys.
.Pp
d162 12
d183 13
@


1.27
log
@These bugs were fixed long ago.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.26 2006/05/08 19:28:21 kjell Exp $
d123 1
a123 3
be done using the spacebar and
.Ql \&? ,
respectively.
d142 7
a148 2
See the manual for a full list of the commands that can
go in the files.
@


1.26
log
@minor man page tweaks. From han boetes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.25 2005/10/11 19:57:17 jmc Exp $
a180 13
.Sh BUGS
When you type
.Ql \&?
to list possible file names, buffer names, etc.,
a help buffer is created for the possibilities.
In Gnu Emacs,
this buffer goes away the next time you type a real command.
In
.Nm mg ,
you must use "^X-1" to get rid of it.
.Pp
The undo feature has minor differences compared to the same feature in
Gnu Emacs.
@


1.25
log
@bit more consistency in the list of key bindings;
ok kjell@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.24 2005/10/11 04:53:56 kjell Exp $
d78 1
a78 1
.It ^@@
d96 1
a96 1
Quit (you will be asked if you want to save files).
d104 2
@


1.24
log
@fix undo BUGS entry. ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.23 2005/10/11 04:36:55 deraadt Exp $
a24 1
.Pp
d47 1
a47 1
Forward character
d49 1
a49 1
Backwards character
d51 1
a51 1
Next line
d53 1
a53 1
Previous line
d55 1
a55 1
Start of line
d57 1
a57 1
End of line
d59 1
a59 1
delete current character
d61 1
a61 1
interactive search forward
d63 1
a63 1
interactive search backwards
d65 1
a65 1
interactive search-and-replace.
d67 1
a67 1
Open a new line at cursor position
d69 1
a69 1
transpose characters
d72 1
a72 1
(can be cascaded i.e. ^U^U^F will move 16 characters forward)
d75 1
a75 1
kill to end of line (placing into kill buffer)
d77 1
a77 1
yank kill buffer into current location
d79 1
a79 1
set mark
d81 2
a82 2
kill region
(cuts from previously set mark to current location, into kill buffer)
d84 1
a84 1
copy region (into kill buffer)
d87 1
a87 1
Next page
d89 1
a89 1
Previous page
d91 1
a91 1
start of buffer
d93 1
a93 1
end of buffer
d96 1
a96 1
Quit (you will be asked if you want to save files)
@


1.23
log
@document a few more things; kjell ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.22 2005/03/12 09:12:56 jmc Exp $
d191 1
a191 1
The undo feature has a minor difference compared to the same feature in
a192 3
When the end of the undo records list is reached,
.Nm mg
will not stop and inform the user for one undo keystroke before continuing.
@


1.22
log
@- tweak synopsis
- avoid line splits
- minor tweaks
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.21 2005/03/10 16:47:34 henning Exp $
d65 2
d73 1
a73 1
(can be cascaded i.e. ^u^u^f will move 16 characters forward)
@


1.21
log
@add -n command line switch to disable backup file generation, handy
when you use mg for your mail from within mutt etc
from PR3930, Carson Harding <harding@@motd.ca>, Thanks!
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.20 2004/07/26 16:25:10 mjc Exp $
d12 1
a12 2
.Op Ar files
.Op Ar ...
d70 2
a71 1
Repeat next command 4 times (can be cascaded, ie. ^u^u^f will move 16 characters forward)
d80 2
a81 1
kill region (cuts from previously set mark to current location, into kill buffer)
@


1.20
log
@document behaviour of mg +-number file
ok vincent@@
better wording from jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.19 2003/09/02 18:50:06 jmc Exp $
d27 1
a27 1
.Bl -tag -width xxxxx -compact
d38 2
@


1.19
log
@escape punctuation;
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.18 2003/06/10 09:12:11 jmc Exp $
d31 3
@


1.18
log
@- section reorder
- COMPATIBILITY merge
- macro cleanup
- kill whitespace at EOL
- new sentence, new line

ssh pages ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.17 2003/05/05 22:05:57 vincent Exp $
d115 1
a115 1
.Ql ? ,
d174 1
a174 1
.Ql ?
@


1.17
log
@document the new -f <mode> command line option.

ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.16 2003/01/06 17:04:09 deraadt Exp $
d155 3
a157 3
internal limitations compared to regular emacs.  An example of how to map
control characters and sequences follows, illustrating the Gosling-like
line scrolling characters.
d184 2
a185 1
Gnu Emacs.  When the end of the undo records list is reached,
a187 1

@


1.16
log
@support +number; rewritten from buggy code by mjc@@bitz.ca, vincent ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.15 2003/01/05 09:50:40 pvalchev Exp $
d11 2
a12 1
.Op Ar options files
d25 1
a25 1
At present time only one option is supported:
d31 4
@


1.15
log
@Grammar fixes from jmc@@prioris.mini.pw.edu.pl
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.14 2002/09/28 01:14:02 deraadt Exp $
d11 2
a12 1
.Op Ar
d23 8
@


1.14
log
@doc that undo is a teeny bit different
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.13 2002/05/10 19:53:18 deraadt Exp $
d113 1
a113 1
represents the name of you terminal type; e.g., if your terminal type
d140 1
a140 1
More complicated key mappings are also possible, though there are are some
@


1.13
log
@doc error; soeren@@thing.dk
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.12 2002/02/21 04:21:17 deraadt Exp $
d168 6
@


1.12
log
@document undo
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.11 2002/02/08 00:51:55 deraadt Exp $
d167 1
a167 1
you must use "M-x 1" to get rid of it.
@


1.11
log
@more docs...
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.10 2001/04/11 10:48:40 bjc Exp $
d82 2
@


1.10
log
@"Amonst" -> "Amongst"
@
text
@d1 1
a1 1
.\"	$OpenBSD: mg.1,v 1.9 2001/01/29 01:58:08 niklas Exp $
d29 1
a29 1
.It ^f
d31 1
a31 1
.It ^b
d33 1
a33 1
.It ^n
d35 1
a35 1
.It ^p
d37 1
a37 1
.It ^a
d39 1
a39 1
.It ^e
d41 1
a41 1
.It ^d
d43 1
a43 1
.It ^s
d45 1
a45 1
.It ^r
d47 1
a47 1
.It ^o
d49 1
a49 1
.It ^t
d51 1
a51 1
.It ^u
d54 1
a54 1
.It ^k
d56 1
a56 1
.It ^y
d60 1
a60 1
.It ^w
d62 1
a62 1
.It M-w
d65 1
a65 1
.It ^v
d67 1
a67 1
.It M-v
d74 1
a74 1
.It ^x^c
d76 6
d136 10
@


1.9
log
@$OpenBSD$
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d96 1
a96 1
Amonst other major differences, the
@


1.8
log
@- Section shuffling: comply to the section ordering outlined in mdoc(7).
- Some .Nm trimming.
- .Sh AUTHOR -> .Sh AUTHORS
- Other miscellaneous fixes here and there.
@
text
@d1 2
@


1.7
log
@Trailing whitespace begone!
@
text
@d130 1
a130 1
.Bl -tag -width xxxx -compact
@


1.6
log
@Various cleanups and standardization.
@
text
@d97 1
a97 1
There are two configuration files, 
@


1.5
log
@some key binding examples
@
text
@d16 2
a17 1
editor.  It is compatible with emacs because there shouldn't
d21 2
a22 2
Normal editing commands are very similar to Gnu Emacs.  In the
following examples, ^X means control-X, and M-X means Meta-X,
d82 8
a89 5
support various programming languages.  It does have text justification
and auto-fill mode.  Since it is written completely in C, there is no
language in which you can write extensions.  However, you can rebind
keys and change some parameters.  There are no limits to line length
or format.  Command, buffer, and file name completion and listing can
d109 2
a110 2
as a startup file.  The terminal type startup file is used
first.
d114 2
a115 1
Here's another example sequence that you may find useful.  By default,
d142 2
a143 1
a help buffer is created for the possibilities.  In Gnu Emacs,
@


1.4
log
@some binding information
@
text
@d106 1
a106 6
first.  If either of these files does not exist, 
.Nm
will look for a file by the same name (but without the leading
dot) in
.Pa /usr/local/lib/mg .
.Pp
d125 1
a125 1
.Bl -tag -width /usr/local/lib/mg -compact
a129 2
.It Pa /usr/local/lib/mg
directory for system-wide startup files
@


1.3
log
@Lots of obvious clean-up, but needs more work.
@
text
@d20 61
a80 3
Normal editing commands should be identical to Gnu Emacs.  It differs
primarily in not having special modes for tasks other than straight
editing, e.g., mail and news, and in not having special modes that
d82 1
a82 1
and auto-fill mode.  It is written directly in C, so there is no
d90 1
a90 4
The one major difference is in configuration files.  Gnu Emacs uses
a configuration file 
.Pa .emacs ,
which is written in Lisp.
d92 1
a92 2
uses its own configuration files, which contain extend mode Emacs
commands (i.e., commands that you could type after doing m-x).
d113 1
a113 26
go in the files. The most commonly  
used ones are probably key binding.  The following example is
part of a configuration file used to set make
.Nm
respond to the keypad on a Microport SV/AT system.  The normal
keys send a sequence of the form <ESC> [ <letter>.  I also
want to use keys prefixed by <ESC> as having different meaning.
In order to deal with multi-character sequences, the initial
subsequences must be defined as prefixes.  To allow for this,
three prefixes are left undefined in the initial setup.  They
are called "extra prefix 1", etc.
.Bd -literal -offset indent
;allow normal pad
global-set-key ^[[ "extra prefix 1"
;allow prefixed pad
global-set-key ^[^[ "extra prefix 2"
global-set-key ^[^[[ "extra prefix 3"
;keypad
global-set-key ^[[A previous-line
global-set-key ^[[H scroll-down
...etc

;escaped keypad
global-set-key ^[^[[A exchange-point-and-mark
global-set-key ^[^[[H beginning-of-buffer
.Ed
d148 1
a148 1
you must use "m-x 1" to get rid of it.
@


1.2
log
@mandoc, but needs much more fleshing out
@
text
@d9 1
a9 1
.Op files
d12 2
a13 2
is intented intended to be a small, fast, and portable editor for
people who can't (or don't want to) run real emacs thing for one
d22 1
a22 1
editing, e.g. mail and news, and in not having special modes that
d25 1
a25 1
language in which you can write extensions.  However you can rebind
d28 3
a30 2
be done using space and ? respectively.
.Pp
d34 1
a34 1
.IR .emacs ,
d38 1
a38 1
commands (i.e. commands that you could type after doing m-x).
d40 1
a40 1
.IR .mg ,
d42 6
a47 3
.IR .mg-TERM .
TERM here represents the name of you terminal type.  E.g. if
your terminal type is set to vt100,
d50 1
a50 1
.I .mg-vt100
d56 1
a56 1
.IR /usr/local/lib/mg .
d86 8
a93 3
Here's another example sequence that you may find useful.  By default ()
and [] are recognized as brackets, so bracket matching can be done.
The following defines {} as brackets, and turns on the mode that causes
d100 10
a109 7
.Pp
.Sh ARGUMENTS
.Nm
does not take any options.  The only arguments you can pass it are
file names.  It will do a find-file on each one, reading it into
a buffer.  It will leave the last buffer on the screen.
.Sh "SEE ALSO"
d112 3
a114 1
When you type ? to list possible file names, buffer names, etc.,
d118 1
a118 1
.Nm ,
a119 11
.Sh FILES
.Pp
.Bl -tag -width /etc/passwd -compact
.It ~/.mg
normal startup file
.It ~/.mg-TERM
terminal-specific startup file
.It /usr/local/lib/mg
Directory for system-wide startup files.  (Files in
this directory do not have the leading dot).
.El
@


1.1
log
@initial import of mg2a
@
text
@d1 19
a19 17
.TH MG 1
.SH NAME
mg \- Micro Gnu emacs
.SH SYNOPSIS
.B mg
[
.I files
]
.SH DESCRIPTION
.B Mg
is intended as a micro version of Gnu Emacs.  It is intended primarily
for use on PC's of various kinds, where it may not be practical to
run Gnu Emacs because of its size.  However it is also useful on
larger systems for some purposes.  Because it is about 1/10 the size
of Gnu Emacs, it starts much faster, and is much less likely to
cause paging.
.LP
d29 2
a30 10
.LP
.B Mg
is close enough to Gnu Emacs that you can learn it the same way:
using the program
.BR teach-emacs .
.B Teach-emacs
will invoke Gnu Emacs, however the features that it teaches should
work identically on
.BR mg .
.LP
d35 1
a35 1
.B Mg
d44 1
a44 1
.B mg
d49 1
a49 1
.B mg
d53 1
a53 1
.LP
d58 1
a58 1
.B mg
d66 16
a81 27
.br
  ;allow normal pad
.br
  global-set-key ^[[ "extra prefix 1"
.br
  ;allow prefixed pad
.br
  global-set-key ^[^[ "extra prefix 2"
.br
  global-set-key ^[^[[ "extra prefix 3"
.br
  ;keypad
.br
  global-set-key ^[[A previous-line
.br
  global-set-key ^[[H scroll-down
.br
  ...etc
.br
  ;escaped keypad
.br
  global-set-key ^[^[[A exchange-point-and-mark
.br
  global-set-key ^[^[[H beginning-of-buffer
.br
  ...etc
.LP
d86 8
a93 8
.br
  global-set-key } blink-matching-paren-hack
.br
  blink-matching-paren
.br
  set-default-mode blink
.SH ARGUMENTS
.B Mg
d96 4
a99 11
a buffer.  It will leave the last buffer on the screen.  If you call
.B mg
from
.BR vnews ,
both the original article and your reply will be in separate buffers.
The original article will be showing.  Use "c-x b" to switch to the
buffer for your reply.
.SH "SEE ALSO"
.BR gnuemacs (1),
.BR teach-emacs (1)
.SH BUGS
d104 1
a104 1
.BR mg ,
d106 11
a116 10
.SH FILES
.LP
.mg -  normal startup file
.LP
.mg-TERM - terminal-specific startup file
.LP
/usr/local/lib/mg - directory for system-wide startup files.  Files in
this directory do not have the leading dot.
.LP
/usr/doc/mg.doc - full manual
@

