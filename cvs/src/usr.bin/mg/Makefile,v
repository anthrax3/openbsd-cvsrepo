head	1.33;
access;
symbols
	OPENBSD_6_1:1.33.0.2
	OPENBSD_6_1_BASE:1.33
	OPENBSD_6_0:1.31.0.4
	OPENBSD_6_0_BASE:1.31
	OPENBSD_5_9:1.31.0.2
	OPENBSD_5_9_BASE:1.31
	OPENBSD_5_8:1.30.0.4
	OPENBSD_5_8_BASE:1.30
	OPENBSD_5_7:1.29.0.2
	OPENBSD_5_7_BASE:1.29
	OPENBSD_5_6:1.28.0.8
	OPENBSD_5_6_BASE:1.28
	OPENBSD_5_5:1.28.0.6
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.28.0.2
	OPENBSD_5_4_BASE:1.28
	OPENBSD_5_3:1.27.0.4
	OPENBSD_5_3_BASE:1.27
	OPENBSD_5_2:1.27.0.2
	OPENBSD_5_2_BASE:1.27
	OPENBSD_5_1_BASE:1.25
	OPENBSD_5_1:1.25.0.2
	OPENBSD_5_0:1.24.0.4
	OPENBSD_5_0_BASE:1.24
	OPENBSD_4_9:1.24.0.2
	OPENBSD_4_9_BASE:1.24
	OPENBSD_4_8:1.22.0.8
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.4
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.6
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.2
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.21.0.2
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.19.0.6
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.4
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.19.0.2
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.18.0.4
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.2
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.15.0.4
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.2
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.13.0.6
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.12.0.4
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5;
locks; strict;
comment	@# @;


1.33
date	2016.09.16.17.17.40;	author tedu;	state Exp;
branches;
next	1.32;
commitid	g9Ro3DaY4DSbeipm;

1.32
date	2016.09.11.15.03.33;	author natano;	state Exp;
branches;
next	1.31;
commitid	E8WAKupnhvIqbvjm;

1.31
date	2015.09.29.03.50.58;	author tedu;	state Exp;
branches;
next	1.30;
commitid	KMkv8HOCSeVDpOgx;

1.30
date	2015.03.17.18.08.52;	author bcallah;	state Exp;
branches;
next	1.29;
commitid	ZNG0kOG8IxZdy28m;

1.29
date	2015.01.05.21.45.10;	author lum;	state Exp;
branches;
next	1.28;
commitid	PDeRXDTXbFvpxbz8;

1.28
date	2013.05.31.18.03.43;	author lum;	state Exp;
branches;
next	1.27;

1.27
date	2012.06.18.07.13.26;	author jasper;	state Exp;
branches;
next	1.26;

1.26
date	2012.06.07.15.15.04;	author lum;	state Exp;
branches;
next	1.25;

1.25
date	2011.11.28.04.41.39;	author lum;	state Exp;
branches;
next	1.24;

1.24
date	2011.02.02.05.21.36;	author lum;	state Exp;
branches;
next	1.23;

1.23
date	2011.01.18.17.35.42;	author lum;	state Exp;
branches;
next	1.22;

1.22
date	2008.12.17.10.27.33;	author sobrado;	state Exp;
branches;
next	1.21;

1.21
date	2008.06.13.18.51.02;	author kjell;	state Exp;
branches;
next	1.20;

1.20
date	2008.06.12.01.58.44;	author kjell;	state Exp;
branches;
next	1.19;

1.19
date	2006.12.16.17.00.03;	author kjell;	state Exp;
branches;
next	1.18;

1.18
date	2005.11.22.05.02.44;	author kjell;	state Exp;
branches;
next	1.17;

1.17
date	2005.11.20.04.16.34;	author kjell;	state Exp;
branches;
next	1.16;

1.16
date	2005.11.19.22.05.45;	author kjell;	state Exp;
branches;
next	1.15;

1.15
date	2005.03.10.18.27.47;	author henning;	state Exp;
branches;
next	1.14;

1.14
date	2005.03.09.19.12.57;	author henning;	state Exp;
branches;
next	1.13;

1.13
date	2003.05.05.11.12.07;	author vincent;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.29.12.41.42;	author vincent;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.20.22.30.54;	author vincent;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.14.03.07.33;	author vincent;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.23.04.22.45;	author art;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.24.10.58.33;	author art;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.24.09.47.33;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2000.09.01.14.59.08;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2000.02.28.23.45.21;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.27.17.29.50;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.26.22.53.16;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.25.19.09.47;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.25.19.08.45;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.33
log
@like the sparc port, ancient wisdom is ancient. consign to the archives.
ok beck
@
text
@# $OpenBSD: Makefile,v 1.32 2016/09/11 15:03:33 natano Exp $

PROG=	mg

LDADD+=	-lcurses -lutil
DPADD+=	${LIBCURSES} ${LIBUTIL}

# (Common) compile-time options:
#
#	REGEX		-- create regular expression functions.
#	STARTUPFILE	-- look for and handle initialization file.
#
CFLAGS+=-Wall -DREGEX

SRCS=	autoexec.c basic.c bell.c buffer.c cinfo.c dir.c display.c \
	echo.c extend.c file.c fileio.c funmap.c help.c kbd.c keymap.c \
	line.c macro.c main.c match.c modes.c paragraph.c \
	re_search.c region.c search.c spawn.c tty.c ttyio.c ttykbd.c \
	undo.c util.c version.c window.c word.c yank.c

#
# More or less standalone extensions.
#
SRCS+=	cmode.c cscope.c dired.c grep.c tags.c

afterinstall:
	${INSTALL} -d -o root -g wheel ${DESTDIR}${DOCDIR}/mg
	${INSTALL} ${INSTALL_COPY} -o ${DOCOWN} -g ${DOCGRP} -m ${DOCMODE} \
	    ${.CURDIR}/tutorial ${DESTDIR}${DOCDIR}/mg

.include <bsd.prog.mk>
@


1.32
log
@Install mg tutorial with correct permissions. ok deraadt
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2015/09/29 03:50:58 tedu Exp $
d24 1
a24 1
SRCS+=	cmode.c cscope.c dired.c grep.c tags.c theo.c
@


1.31
log
@rename random.c to util.c so it doesn't look scary. (util.c repo copied)
ok deraadt guenther
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2015/03/17 18:08:52 bcallah Exp $
d27 3
a29 3
	${INSTALL} -d ${DESTDIR}${DOCDIR}/mg
	${INSTALL} -m ${DOCMODE} -c ${.CURDIR}/tutorial \
		${DESTDIR}${DOCDIR}/mg
@


1.30
log
@It is impossible to build mg without both -DFKEYS and -DXKEYS. So let's
enforce that and remove the options.
Mostly mechanical diff from unifdef with bonus removal of comments that no
longer have any relevance.
ok florian@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2015/01/05 21:45:10 lum Exp $
d17 1
a17 1
	line.c macro.c main.c match.c modes.c paragraph.c random.c \
d19 1
a19 1
	undo.c version.c window.c word.c yank.c
@


1.29
log
@As pointed out by Kaspars Bankovskis on tech@@, there is no ifdef for
STARTUP.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2013/05/31 18:03:43 lum Exp $
a9 1
#	FKEYS		-- add support for function key sequences.
d11 1
a11 3
#	STARTUPFILE		-- look for and handle initialization file.
#	XKEYS		-- use termcap function key definitions.
#				note: XKEYS and bsmap mode do _not_ get along.
d13 1
a13 1
CFLAGS+=-Wall -DFKEYS -DREGEX -DXKEYS
@


1.28
log
@Make the system bell toggleable via 'audible-bell', and if switched
off, make available an alternative 'visible-bell'.

ok florian@@ jasper@@ Feedback Sunil Nimmagadda.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2012/06/18 07:13:26 jasper Exp $
d12 1
a12 1
#	STARTUP		-- look for and handle initialization file.
@


1.27
log
@- explicitly use DOCMODE instead of NONBINMODE

ok lum@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2012/06/07 15:15:04 lum Exp $
d18 1
a18 1
SRCS=	autoexec.c basic.c buffer.c cinfo.c dir.c display.c \
@


1.26
log
@Add some cscope support to mg. From Sunil Nimmagadda.  Due to some
structural limitations in mg, mg doesn't behave exactly the same as
emacs cscope (see the README) but is still very usable.

man page bits reviewed by jmc@@, otherwise tested and reviewed by
myself.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2011/11/28 04:41:39 lum Exp $
d31 1
a31 1
	${INSTALL} -m ${NONBINMODE} -c ${.CURDIR}/tutorial \
@


1.25
log
@Add some ctags support to mg. From Sunil Nimmagadda.

Man page review and suggestions from jmc@@

Revewied and tested by myself, and ok deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2011/02/02 05:21:36 lum Exp $
d27 1
a27 1
SRCS+=	cmode.c dired.c grep.c tags.c theo.c
@


1.24
log
@Move mg(1) tutorial file into a release, instead of languishing in src.
ok nick@@ schwarze@@ miod@@ kjell@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2011/01/18 17:35:42 lum Exp $
d5 2
a6 2
LDADD+=	-lcurses
DPADD+=	${LIBCURSES}
d27 1
a27 1
SRCS+=	cmode.c dired.c grep.c theo.c
@


1.23
log
@Add missing prototypes and move dired.c to "extensions" in Makefile.
ok kjell@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2008/12/17 10:27:33 sobrado Exp $
d28 5
@


1.22
log
@sort CFLAGS, SRCS and the list of compile-time options; while here,
add some missing full stops.

ok kjell@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2008/06/13 18:51:02 kjell Exp $
d18 1
a18 1
SRCS=	autoexec.c basic.c buffer.c cinfo.c dir.c dired.c display.c \
d27 1
a27 1
SRCS+=	cmode.c grep.c theo.c
@


1.21
log
@Remove mail-mode. It was a buggy reimplementation of auto-fill-mode.
If you use this, change your habits (and .mg) to use the following
commands instead:

mail-mode => auto-fill-mode
mail-set-margin => set-fill-column

ok henning@@. Will also "fix" debian bug #460189
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2008/06/12 01:58:44 kjell Exp $
a9 1
#	STARTUP		-- look for and handle initialization file
d11 4
a14 3
#	XKEYS		-- use termcap function key definitions. Warning -
#				XKEYS and bsmap mode do _not_ get along.
#	REGEX		-- create regular expression functions
d16 1
a16 1
CFLAGS+=-Wall -DXKEYS -DFKEYS -DREGEX
d18 5
a22 6
SRCS=	cinfo.c fileio.c spawn.c ttyio.c tty.c ttykbd.c \
	basic.c dir.c dired.c file.c line.c match.c paragraph.c \
	random.c region.c search.c version.c window.c word.c \
	buffer.c display.c echo.c extend.c help.c kbd.c keymap.c \
	macro.c main.c modes.c re_search.c funmap.c undo.c autoexec.c \
	yank.c
d27 1
a27 1
SRCS+=	grep.c theo.c cmode.c
@


1.20
log
@Introduce a basic c-mode to mg.

The intent of this mode is NOT to copy emacs's monster cc-mode.
It is intended to handle basic KNF-format C, assisting
with indentation (to catch obvious typos), and strip
trailing whitespace. It is NOT enabled unless you ask for it (c-mode).

Basically, tab on start-of-line whitespace acts like tab.
Otherwise, tab indents.

Please try it out and let me know where it falls down.

Feedback Reyk, phessler. "hack in tree" from henning, theo
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2006/12/16 17:00:03 kjell Exp $
d28 1
a28 1
SRCS+=	grep.c theo.c mail.c cmode.c
@


1.19
log
@Get rid of PREFIXREGION ifdef, since we always enable it anyway.
no binary change.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2005/11/22 05:02:44 kjell Exp $
d28 1
a28 1
SRCS+=	grep.c theo.c mail.c
@


1.18
log
@Move kill-related commands to their own file.
This will help move to a kill-ring.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2005/11/20 04:16:34 kjell Exp $
a13 1
#	PREFIXREGION	-- enable function "prefix-region"
d16 1
a16 1
CFLAGS+=-Wall -DPREFIXREGION -DXKEYS -DFKEYS -DREGEX
@


1.17
log
@Kill the NO_BACKUP #ifdef
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2005/11/19 22:05:45 kjell Exp $
d23 2
a24 1
	macro.c main.c modes.c re_search.c funmap.c undo.c autoexec.c
@


1.16
log
@Remove DO_METAKEY here, too. Noted by Han Boetes.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2005/03/10 18:27:47 henning Exp $
a13 1
#	NO_BACKUP	-- disable "make-backup-files"
@


1.15
log
@fix more BACKUP/NOBACKUP/NO_BACKUP confusion, again no binary change.
spotted by jmc@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2005/03/09 19:12:57 henning Exp $
a9 1
#	DO_METAKEY	-- if bit 7 is set for a key, treat like a META key
d18 1
a18 1
CFLAGS+=-Wall -DDO_METAKEY -DPREFIXREGION -DXKEYS -DFKEYS -DREGEX
@


1.14
log
@remove useless -DBACKUP from CFLAGS and change the comment for BACKUP
to NOBACKUP what the code actually uses (and reverse the descr too of course)
spotted by jmc@@ quite some time ago, no binary change.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.13 2003/05/05 11:12:07 vincent Exp $
d15 1
a15 1
#	NOBACKUP	-- disable "make-backup-files"
@


1.13
log
@add a mail-mode, to do automatic line-wrapping.

(at the same time, change the command line parsing to support a
 -f <mode> that is slightly different from the one in gnu emacs,
we apply it to all buffers created from command line arguments,
so you can use "mg -f mail-mode" as your editor. manpage change
coming soon)

ok henning
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2002/05/29 12:41:42 vincent Exp $
d15 1
a15 1
#	BACKUP		-- enable "make-backup-files"
d19 1
a19 1
CFLAGS+=-Wall -DDO_METAKEY -DPREFIXREGION -DXKEYS -DFKEYS -DBACKUP -DREGEX
@


1.12
log
@ add an "auto-execute" feature, that allows binding function calls to
certain patterns. for example, `auto-execute "*.c" auto-indent-mode'.

 ok art@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2002/02/20 22:30:54 vincent Exp $
d30 1
a30 1
SRCS+=	grep.c theo.c
@


1.11
log
@ Add undo code to mg.

 needs further hacking.

 ok `whole bunch of people on icb'@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2002/02/14 03:07:33 vincent Exp $
d25 1
a25 1
	macro.c main.c modes.c re_search.c funmap.c undo.c
@


1.10
log
@ the "theo-mode" is said to be a 'standalone' extension in main.c, be
 coherent.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2001/06/23 04:22:45 art Exp $
d25 1
a25 1
	macro.c main.c modes.c re_search.c funmap.c
@


1.9
log
@Add "M-x theo". Just like "M-x doctor" in emacs... Well, almost.

More beer!
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2001/05/24 10:58:33 art Exp $
d25 1
a25 1
	macro.c main.c modes.c re_search.c funmap.c theo.c
d30 1
a30 1
SRCS+=	grep.c
@


1.8
log
@Add a compile/grep/id-utils mode.

The only pollution this code introduces in the rest of thed code is a call to
an init function in main(). In the future we might want to load extensions
like this dynamically.

Of course I did the test compile in the compile mode.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2001/05/24 09:47:33 art Exp $
d25 1
a25 1
	macro.c main.c modes.c re_search.c funmap.c
@


1.7
log
@Break out function -> name mappings to an own file.
Add a possibility to dynamically extend the function table.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.6 2000/09/01 14:59:08 millert Exp $
d26 5
@


1.6
log
@More -Wall anmd KNF, from op2@@tomahawk.SQUiSH.org
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.5 2000/02/28 23:45:21 millert Exp $
d25 1
a25 1
	macro.c main.c modes.c re_search.c
@


1.5
log
@Use POSIX extended regular expressions.
Reverse regex searching does not yet work.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2000/02/27 17:29:50 millert Exp $
d19 1
a19 1
CFLAGS+=-DDO_METAKEY -DPREFIXREGION -DXKEYS -DFKEYS -DBACKUP -DREGEX
@


1.4
log
@Don't define -DDO_METAKEY twice
@
text
@d1 1
a1 1
# $OpenBSD$
d19 1
a19 1
CFLAGS+=-DDO_METAKEY -DPREFIXREGION -DXKEYS -DFKEYS -DBACKUP
d25 1
a25 1
	macro.c main.c modes.c regex.c re_search.c
@


1.3
log
@change WINDOW -> MGWIN to avoid curses type conflict
convert to terminfo in tty*.c
add support for some keypad function keys (arrows, pgup, pgdown)
@
text
@d1 3
a3 3
# Makefile for MicroEMACS.
# Is there a better way to do the rebuilds, other than using
# the links?
d19 1
a19 3
CDEFS	=  -DDO_METAKEY
CDEFS+=	-DDO_METAKEY -DPREFIXREGION -DXKEYS -DFKEYS -DBACKUP
CFLAGS+=$(CDEFS)
a25 1
PROG=	mg
@


1.2
log
@make it minimally compile; millert
@
text
@d12 1
d20 1
a20 1
CDEFS+=	-DDO_METAKEY -DPREFIXREGION -DXKEYS -DBACKUP
@


1.1
log
@initial import of mg2a
@
text
@d5 3
a7 5
SYS	= sysv
LIBS	= 
# CDEFS gets defines, and gets passed to lint. CFLAGS gets flags, and doesn't
# get passed to lint.
#
d18 10
a27 113
#CDEFS	=  -DDO_METAKEY
CDEFS	=  -DDO_METAKEY -DPREFIXREGION
CFLAGS	= $(CDEFS)
CFLAGSNOO =  $(CDEFS)

# Objects which only depend on the "standard" includes
OBJS	= basic.o dir.o dired.o file.o line.o match.o paragraph.o \
	  random.o region.o search.o version.o window.o word.o

# Those with unique requirements
IND	= buffer.o display.o echo.o extend.o help.o kbd.o keymap.o \
	  macro.o main.o modes.o regex.o re_search.o

# System dependent objects
OOBJS = cinfo.o spawn.o ttyio.o tty.o ttykbd.o

OBJ = $(OBJS) $(IND) $(OOBJS) fileio.o

OSRCS	= cinfo.c fileio.c spawn.c ttyio.c tty.c ttykbd.c
SRCS	= basic.c dir.c dired.c file.c line.c match.c paragraph.c \
	  random.c region.c search.c version.c window.c word.c \
	  buffer.c display.c echo.c extend.c help.c kbd.c keymap.c \
	  macro.c main.c modes.c regex.c re_search.c

OINCS =	ttydef.h sysdef.h chrdef.h
INCS =	def.h

mg:	$(OBJ)
	cc $(CFLAGS) -o mg $(OBJ) $(LIBS)

tar:
	tar -c -X tar.exclude -f mg.tar .

# strip mg once you're satisfied it'll run -- makes it much smaller
strip:
	strip mg

lint: $(SRCS) $(OSRCS) $(INCS) $(OINCS)
	lint -ahbz $(CDEFS) $(SRCS) $(OSRCS)

# routines that can't be compiled optimized
# region causes the optimizer to blow up
# region.o:	region.c
#	cc $(CFLAGSNOO) -c region.c

# echo blows up when compiled optimized.
# echo.o:		echo.c
# 	cc $(CFLAGSNOO) -c echo.c

$(OBJ):		$(INCS) $(OINCS)


dir.r search.o:	$(INCS) $(OINCS)

regex.o re_search.o:	$(INCS) $(OINCS) regex.h

kbd.o:	$(INCS) $(OINCS) macro.h kbd.h key.h

macro.o main.o:	$(INCS) $(OINCS) macro.h

buffer.o display.o keymap.o help.o modes.o dired.o fileio.o: \
	$(INCS) $(OINCS) kbd.h

extend.o:	$(INCS) $(OINCS) kbd.h macro.h key.h

help.o:	$(INCS) $(OINCS) kbd.h key.h macro.h

echo.o:	$(INCS) $(OINCS) key.h macro.h

$(OOBJS):	$(INCS) $(OINCS)

# sysdef.h:	sys/$(SYS)/sysdef.h	# Update links, if needed.
#	rm -f sysdef.h
#	ln sys/$(SYS)/sysdef.h .

# ttydef.h:	sys/default/ttydef.h
#	rm -f ttydef.h
#	ln sys/default/ttydef.h .

# chrdef.h:	sys/default/chrdef.h
#	rm -f chrdef.h
#	ln sys/default/chrdef.h .

# fileio.c:	sys/$(SYS)/fileio.c
#	rm -f fileio.c
#	ln sys/$(SYS)/fileio.c .

# spawn.c:	sys/$(SYS)/spawn.c
#	rm -f spawn.c
#	ln sys/$(SYS)/spawn.c .

# tty.c:		sys/default/tty.c
#	rm -f tty.c
#	ln sys/default/tty.c .

# ttyio.c:	sys/$(SYS)/ttyio.c
# 	rm -f ttyio.c
#	ln sys/$(SYS)/ttyio.c .

# ttykbd.c:	sys/default/ttykbd.c
# 	rm -f ttykbd.c
#	ln sys/default/ttykbd.c .

# cinfo.c:	sys/default/cinfo.c
# 	rm -f cinfo.c
# 	ln sys/default/cinfo.c .

# port: $(SRCS) $(INCS)
# 	rm -f port
#	tar cfb port 1 $?

# clean:;	rm -f $(OBJ) $(OSRCS) $(OINCS)
clean:;	rm -f $(OBJ)
d29 1
@

