head	1.18;
access;
symbols
	OPENBSD_6_2:1.18.0.12
	OPENBSD_6_2_BASE:1.18
	OPENBSD_6_1:1.18.0.10
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.6
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.4
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.16.0.8
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.12
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.10
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.6
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.4
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.2
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.28
	OPENBSD_5_0:1.14.0.26
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.24
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.22
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.18
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.20
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.16
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.14
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.12
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.10
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.8
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.6
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.4
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.12.0.4
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.2
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.10.0.6
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.4
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5;
locks; strict;
comment	@ * @;


1.18
date	2015.03.19.21.22.15;	author bcallah;	state Exp;
branches;
next	1.17;
commitid	GbEBL4CfPvDkB8hj;

1.17
date	2015.03.17.18.08.52;	author bcallah;	state Exp;
branches;
next	1.16;
commitid	ZNG0kOG8IxZdy28m;

1.16
date	2012.04.12.04.47.59;	author lum;	state Exp;
branches;
next	1.15;

1.15
date	2012.03.28.17.35.03;	author lum;	state Exp;
branches;
next	1.14;

1.14
date	2005.06.14.18.14.40;	author kjell;	state Exp;
branches;
next	1.13;

1.13
date	2005.04.03.02.09.28;	author db;	state Exp;
branches;
next	1.12;

1.12
date	2004.07.08.22.15.42;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.20.03.08.55;	author cloder;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.21.04.16.23;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2001.05.24.03.05.27;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.23.22.12.10;	author art;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.29.01.58.10;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	2000.09.01.14.59.09;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2000.04.13.06.12.18;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.12.00.42.16;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.27.16.10.19;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.26.22.53.16;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.25.19.08.52;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Clean up the includes in mg.
This does the following:
Moves all POSIX headers from sysdef.h into the individual .c files so that
each file now only includes what it needs. All headers are properly sorted.
Moves the remainder of sysdef.h to other files (mostly def.h) and deletes
sysdef.h now that it's no longer contains anything.
Tweak a comment that references sysdef.h so that it no longer does that.
ok florian@@
@
text
@/*	$OpenBSD: ttykbd.c,v 1.17 2015/03/17 18:08:52 bcallah Exp $	*/

/* This file is in the public domain. */

/*
 * Name:	MG 2a
 *		Terminfo keyboard driver using key files
 * Created:	22-Nov-1987 Mic Kaczmarczik (mic@@emx.cc.utexas.edu)
 */

#include <sys/queue.h>
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <term.h>

#include "def.h"
#include "kbd.h"

/*
 * Get keyboard character.  Very simple if you use keymaps and keys files.
 */

char	*keystrings[] = {NULL};

/*
 * Turn on function keys using keypad_xmit, then load a keys file, if
 * available.  The keys file is located in the same manner as the startup
 * file is, depending on what startupfile() does on your system.
 */
void
ttykeymapinit(void)
{
	char	*cp;

	/* Bind keypad function keys. */
	if (key_left)
		dobindkey(fundamental_map, "backward-char", key_left);
	if (key_right)
		dobindkey(fundamental_map, "forward-char", key_right);
	if (key_up)
		dobindkey(fundamental_map, "previous-line", key_up);
	if (key_down)
		dobindkey(fundamental_map, "next-line", key_down);
	if (key_beg)
		dobindkey(fundamental_map, "beginning-of-line", key_beg);
	else if (key_home)
		dobindkey(fundamental_map, "beginning-of-line", key_home);
	if (key_end)
		dobindkey(fundamental_map, "end-of-line", key_end);
	if (key_npage)
		dobindkey(fundamental_map, "scroll-up", key_npage);
	if (key_ppage)
		dobindkey(fundamental_map, "scroll-down", key_ppage);
	if (key_dc)
		dobindkey(fundamental_map, "delete-char", key_dc);

	if ((cp = getenv("TERM"))) {
		if (((cp = startupfile(cp)) != NULL) && (load(cp) != TRUE))
			ewprintf("Error reading key initialization file");
	}
	if (keypad_xmit)
		/* turn on keypad */
		putpad(keypad_xmit, 1);
}

/*
 * Clean up the keyboard -- called by tttidy()
 */
void
ttykeymaptidy(void)
{
	if (keypad_local)
		/* turn off keypad */
		putpad(keypad_local, 1);
}

@


1.17
log
@It is impossible to build mg without both -DFKEYS and -DXKEYS. So let's
enforce that and remove the options.
Mostly mechanical diff from unifdef with bonus removal of comments that no
longer have any relevance.
ok florian@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ttykbd.c,v 1.16 2012/04/12 04:47:59 lum Exp $	*/
d11 6
a18 2

#include <term.h>
@


1.16
log
@Remove the conditional directives NO_MACRO and NO_STARTUP.
They have not compiled for numerous years.
ok kjell@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ttykbd.c,v 1.15 2012/03/28 17:35:03 lum Exp $	*/
a13 1
#ifdef	XKEYS
a15 1
#ifdef  FKEYS
a17 3
 * Bob was right -- the old XKEYS code is not the right solution.
 * FKEYS code is not useful other than to help debug FKEYS code in
 * extend.c.
a20 1
#endif /* FKEYS */
a31 1
#ifdef FKEYS
a52 1
#endif /* FKEYS */
a73 8
#else

void
ttykeymapinit(void)
{
}

#endif /* XKEYS */
@


1.15
log
@The Delete key should delete the character to the right of the cursor.

Posted to tech@@ by Han Boetes from a bug report submitted to debian by
Peter De Wachter (Bug#661732), via Trent W. Buck.

No objections from tech@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ttykbd.c,v 1.14 2005/06/14 18:14:40 kjell Exp $	*/
a61 1
#ifndef	NO_STARTUP
a65 1
#endif /* !NO_STARTUP */
@


1.14
log
@Add explicit public domain notices to all public domain files.
ok millert@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ttykbd.c,v 1.13 2005/04/03 02:09:28 db Exp $	*/
d58 2
@


1.13
log
@This is a no binary change which does:

- spelling, punctuation fixes
- variable declaration lineup
- use parentheses for return and sizeof
- K&R function declarations -> ANSI
- other minor code beautification

ok henning@@
@
text
@d1 3
a3 1
/*	$OpenBSD: ttykbd.c,v 1.12 2004/07/08 22:15:42 deraadt Exp $	*/
@


1.12
log
@make lint happier; vincent ok
@
text
@d1 1
a1 1
/*	$OpenBSD: ttykbd.c,v 1.11 2003/05/20 03:08:55 cloder Exp $	*/
d19 1
a19 1
 * FKEYS code is not usefull other than to help debug FKEYS code in
@


1.11
log
@Finish KNF of prototypes.  That should be all of them.
OK vincent@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ttykbd.c,v 1.10 2002/02/21 04:16:23 deraadt Exp $	*/
d78 7
@


1.10
log
@remove a wrapper around getenv()
@
text
@d1 1
a1 1
/*	$OpenBSD: ttykbd.c,v 1.9 2001/05/24 03:05:27 mickey Exp $	*/
d32 1
a32 1
ttykeymapinit()
d73 1
a73 1
ttykeymaptidy()
@


1.9
log
@spaces
@
text
@d1 1
a1 1
/*	$OpenBSD: ttykbd.c,v 1.8 2001/05/23 22:12:10 art Exp $	*/
d59 1
a59 1
	if ((cp = gettermtype())) {
@


1.8
log
@Use 'fundamental_map' where 'map_table[0].p_map' or 'name_map("fundamental")'
were used.
@
text
@d1 1
a1 1
/*	$OpenBSD: ttykbd.c,v 1.7 2001/01/29 01:58:10 niklas Exp $	*/
d23 1
a23 1
char           *keystrings[] = {NULL};
@


1.7
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d39 1
a39 1
		dobindkey(map_table[0].p_map, "backward-char", key_left);
d41 1
a41 1
		dobindkey(map_table[0].p_map, "forward-char", key_right);
d43 1
a43 1
		dobindkey(map_table[0].p_map, "previous-line", key_up);
d45 1
a45 1
		dobindkey(map_table[0].p_map, "next-line", key_down);
d47 1
a47 1
		dobindkey(map_table[0].p_map, "beginning-of-line", key_beg);
d49 1
a49 1
		dobindkey(map_table[0].p_map, "beginning-of-line", key_home);
d51 1
a51 1
		dobindkey(map_table[0].p_map, "end-of-line", key_end);
d53 1
a53 1
		dobindkey(map_table[0].p_map, "scroll-up", key_npage);
d55 1
a55 1
		dobindkey(map_table[0].p_map, "scroll-down", key_ppage);
@


1.6
log
@More -Wall anmd KNF, from op2@@tomahawk.SQUiSH.org
@
text
@d1 2
@


1.5
log
@The start of KNF + -Wall.  The code has been run through indent but
needs hand fixup.  I stopped at keymap.c...
@
text
@d7 3
a9 2
#include	"def.h"
#include	"kbd.h"
d11 1
a11 1
#include	<term.h>
d22 1
a22 1
#endif
d29 1
a29 2
extern int      ttputc();

d32 2
a33 2
	extern int      dobindkey();	/* XXX */
	char           *cp;
d54 2
a55 1
#endif
d57 2
a58 4
	if (cp = gettermtype()) {
		extern char    *startupfile();
		if (((cp = startupfile(cp)) != NULL)
		    && (load(cp) != TRUE))
d61 3
a63 2
#endif
	if (keypad_xmit)	/* turn on keypad	 */
d70 1
a72 1

d74 2
a75 1
		putpad(keypad_local, 1);	/* turn off keypad	 */
d78 1
a78 1
#endif
@


1.4
log
@If no 'begin' key on keypad, use 'home' instead since PC keyboards
have 'home', not 'begin'.
@
text
@d20 1
a20 1
char	*keystrings[] = { NULL } ;
d28 1
a28 1
extern	int	ttputc();
d32 2
a33 2
	extern int dobindkey();	/* XXX */
	char *cp;
d57 1
a57 1
		extern char *startupfile();
d59 1
a59 1
			&& (load(cp) != TRUE))
d63 1
a63 1
	if (keypad_xmit)			/* turn on keypad	*/
d74 1
a74 1
		putpad(keypad_local, 1);	/* turn off keypad	*/
@


1.3
log
@Move dobindkey() into extend.c where it belongs.
@
text
@d46 2
@


1.2
log
@change WINDOW -> MGWIN to avoid curses type conflict
convert to terminfo in tty*.c
add support for some keypad function keys (arrows, pgup, pgdown)
@
text
@a12 1
#include        "key.h"
a20 34

int
dobindkey(str, func)
	char *str;
	char *func;
{
	int i;
	extern int bindkey(); /* XXX */

	for (i = 0; *str && i < MAXKEY; i++) {
		/* XXX - how to convert numbers? */
		if (*str != '\\')
			key.k_chars[i] = *str;
		else {
			switch(*++str) {
			case 't': case 'T':
				key.k_chars[i] = '\t';
				break;
			case 'n': case 'N':
				key.k_chars[i] = '\n';
				break;
			case 'r': case 'R':
				key.k_chars[i] = '\r';
				break;
			case 'e': case 'E':
				key.k_chars[i] = CCHR('[');
				break;
			}
		}
		str++;
	}
	key.k_count = i;
	return(bindkey(&map_table[0].p_map, func, key.k_chars, key.k_count));
}
d32 1
d37 1
a37 3
		dobindkey(key_left, "backward-char");
	if (key_left)
		dobindkey(key_left, "backward-char");
d39 1
a39 1
		dobindkey(key_right, "forward-char");
d41 1
a41 1
		dobindkey(key_up, "previous-line");
d43 1
a43 1
		dobindkey(key_down, "next-line");
d45 1
a45 1
		dobindkey(key_beg, "beginning-of-line");
d47 1
a47 1
		dobindkey(key_end, "end-of-line");
d49 1
a49 1
		dobindkey(key_npage, "scroll-up");
d51 1
a51 1
		dobindkey(key_ppage, "scroll-down");
@


1.1
log
@initial import of mg2a
@
text
@d3 1
a3 1
 *		Termcap keyboard driver using key files
d8 1
d10 1
d12 2
a20 1
#ifdef FKEYS
d22 34
d59 3
a61 3
 * Turn on function keys using KS, then load a keys file, if available.
 * The keys file is located in the same manner as the startup file is,
 * depending on what startupfile() does on your system.
d67 22
a88 1
	extern	char *KS;
a89 2
	char *cp, *startupfile();

d91 1
d97 2
a98 2
	if (KS && *KS)			/* turn on keypad	*/
		putpad(KS, 1);
a105 1
	extern	char *KE;
d107 2
a108 2
	if (KE && *KE)
		putpad(KE, 1);	/* turn off keypad		*/
@

