head	1.53;
access;
symbols
	OPENBSD_6_2:1.53.0.4
	OPENBSD_6_2_BASE:1.53
	OPENBSD_6_1:1.53.0.6
	OPENBSD_6_1_BASE:1.53
	OPENBSD_6_0:1.53.0.2
	OPENBSD_6_0_BASE:1.53
	OPENBSD_5_9:1.52.0.2
	OPENBSD_5_9_BASE:1.52
	OPENBSD_5_8:1.49.0.4
	OPENBSD_5_8_BASE:1.49
	OPENBSD_5_7:1.47.0.4
	OPENBSD_5_7_BASE:1.47
	OPENBSD_5_6:1.47.0.8
	OPENBSD_5_6_BASE:1.47
	OPENBSD_5_5:1.47.0.6
	OPENBSD_5_5_BASE:1.47
	OPENBSD_5_4:1.47.0.2
	OPENBSD_5_4_BASE:1.47
	OPENBSD_5_3:1.45.0.2
	OPENBSD_5_3_BASE:1.45
	OPENBSD_5_2:1.40.0.2
	OPENBSD_5_2_BASE:1.40
	OPENBSD_5_1_BASE:1.35
	OPENBSD_5_1:1.35.0.2
	OPENBSD_5_0:1.34.0.4
	OPENBSD_5_0_BASE:1.34
	OPENBSD_4_9:1.34.0.2
	OPENBSD_4_9_BASE:1.34
	OPENBSD_4_8:1.32.0.8
	OPENBSD_4_8_BASE:1.32
	OPENBSD_4_7:1.32.0.4
	OPENBSD_4_7_BASE:1.32
	OPENBSD_4_6:1.32.0.6
	OPENBSD_4_6_BASE:1.32
	OPENBSD_4_5:1.32.0.2
	OPENBSD_4_5_BASE:1.32
	OPENBSD_4_4:1.31.0.2
	OPENBSD_4_4_BASE:1.31
	OPENBSD_4_3:1.27.0.4
	OPENBSD_4_3_BASE:1.27
	OPENBSD_4_2:1.27.0.2
	OPENBSD_4_2_BASE:1.27
	OPENBSD_4_1:1.26.0.2
	OPENBSD_4_1_BASE:1.26
	OPENBSD_4_0:1.24.0.2
	OPENBSD_4_0_BASE:1.24
	OPENBSD_3_9:1.23.0.2
	OPENBSD_3_9_BASE:1.23
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.9.0.10
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.8
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.6
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.53
date	2016.04.14.17.05.32;	author lum;	state Exp;
branches;
next	1.52;
commitid	SjhPISg2Q1dkB5Xg;

1.52
date	2015.12.29.19.44.32;	author lum;	state Exp;
branches;
next	1.51;
commitid	zQwbtQmO8Wf9dGsD;

1.51
date	2015.09.26.15.03.15;	author lum;	state Exp;
branches;
next	1.50;
commitid	0ywCmEETZEbQQnyp;

1.50
date	2015.09.24.07.07.59;	author lum;	state Exp;
branches;
next	1.49;
commitid	ilbGNsJo2VDLtO5r;

1.49
date	2015.03.19.21.22.15;	author bcallah;	state Exp;
branches;
next	1.48;
commitid	GbEBL4CfPvDkB8hj;

1.48
date	2015.03.16.13.47.48;	author bcallah;	state Exp;
branches;
next	1.47;
commitid	gSveQVkxMLs6vRqK;

1.47
date	2013.05.31.18.03.44;	author lum;	state Exp;
branches;
next	1.46;

1.46
date	2013.05.22.19.23.45;	author lum;	state Exp;
branches;
next	1.45;

1.45
date	2012.12.27.18.51.52;	author florian;	state Exp;
branches;
next	1.44;

1.44
date	2012.12.04.10.54.20;	author florian;	state Exp;
branches;
next	1.43;

1.43
date	2012.11.27.19.46.46;	author jasper;	state Exp;
branches;
next	1.42;

1.42
date	2012.11.20.13.10.16;	author florian;	state Exp;
branches;
next	1.41;

1.41
date	2012.10.12.21.13.46;	author jasper;	state Exp;
branches;
next	1.40;

1.40
date	2012.06.14.17.21.22;	author lum;	state Exp;
branches;
next	1.39;

1.39
date	2012.06.07.15.15.04;	author lum;	state Exp;
branches;
next	1.38;

1.38
date	2012.04.12.04.47.59;	author lum;	state Exp;
branches;
next	1.37;

1.37
date	2012.04.11.17.51.10;	author lum;	state Exp;
branches;
next	1.36;

1.36
date	2012.03.14.13.56.35;	author lum;	state Exp;
branches;
next	1.35;

1.35
date	2011.11.28.04.41.39;	author lum;	state Exp;
branches;
next	1.34;

1.34
date	2011.01.18.16.25.40;	author kjell;	state Exp;
branches;
next	1.33;

1.33
date	2011.01.17.03.12.06;	author kjell;	state Exp;
branches;
next	1.32;

1.32
date	2008.09.15.16.13.35;	author kjell;	state Exp;
branches;
next	1.31;

1.31
date	2008.06.14.08.46.30;	author kjell;	state Exp;
branches;
next	1.30;

1.30
date	2008.06.11.23.18.33;	author kjell;	state Exp;
branches;
next	1.29;

1.29
date	2008.06.10.23.23.53;	author kjell;	state Exp;
branches;
next	1.28;

1.28
date	2008.06.10.00.19.31;	author kjell;	state Exp;
branches;
next	1.27;

1.27
date	2007.05.28.17.52.17;	author kjell;	state Exp;
branches;
next	1.26;

1.26
date	2006.12.21.18.06.02;	author kjell;	state Exp;
branches;
next	1.25;

1.25
date	2006.12.16.17.00.03;	author kjell;	state Exp;
branches;
next	1.24;

1.24
date	2006.06.01.09.00.50;	author kjell;	state Exp;
branches;
next	1.23;

1.23
date	2005.12.20.06.17.36;	author kjell;	state Exp;
branches;
next	1.22;

1.22
date	2005.12.13.06.01.27;	author kjell;	state Exp;
branches;
next	1.21;

1.21
date	2005.11.20.18.47.11;	author kjell;	state Exp;
branches;
next	1.20;

1.20
date	2005.11.20.04.17.25;	author kjell;	state Exp;
branches;
next	1.19;

1.19
date	2005.11.20.04.16.34;	author kjell;	state Exp;
branches;
next	1.18;

1.18
date	2005.11.19.20.14.38;	author kjell;	state Exp;
branches;
next	1.17;

1.17
date	2005.11.18.20.56.52;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2005.11.07.23.32.20;	author kjell;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.14.15.45.38;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2005.05.30.13.13.50;	author jason;	state Exp;
branches;
next	1.13;

1.13
date	2005.05.27.08.08.18;	author cloder;	state Exp;
branches;
next	1.12;

1.12
date	2005.04.28.07.23.56;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2005.04.03.02.09.28;	author db;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.09.16.20.48;	author jfb;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.29.12.41.42;	author vincent;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.29.12.33.36;	author vincent;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.16.15.10.11;	author vincent;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.11.13.02.56;	author vincent;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.20.22.30.54;	author vincent;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.08.21.21.11;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.24.13.00.45;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.24.10.49.10;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.24.09.47.34;	author art;	state Exp;
branches;
next	;


desc
@@


1.53
log
@Add 'sentence-end-double-space'.

If you prefer "lighter" punctuation and one space between sentences,
for example:

Mr and Mrs Jones are from the UK. They arrived today.

over more liberal use of full stops and double spaces between
sentences:

Mr. and Mrs. Jones are from the U.K.  They arrived today.

then toggling 'sentence-end-double-space' will make mg's
fill-paragraph function format text using one space instead of two
(the default) between sentences. However, be careful, should you have
a double spaced document and accidentally "format" it to have single
spaces, then you may have a problem. mg won't be able to revert the
formatting for you (unless you have a previous version of the text in
the "undo" history, or are using mg's backup facility and haven't
opened and saved multiple times!).

Comments from schwarze@@
@
text
@/*	$OpenBSD: funmap.c,v 1.52 2015/12/29 19:44:32 lum Exp $	*/

/* This file is in the public domain */

#include <sys/queue.h>
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "def.h"
#include "funmap.h"
#include "kbd.h"

/*
 * If the function is NULL, it must be listed with the
 * same name in the map_table.
 */

struct funmap {
	PF		 fn_funct;
	const		 char *fn_name;
	struct funmap	*fn_next;
};

static struct funmap *funs;

static struct funmap functnames[] = {
	{apropos_command, "apropos",},
	{toggleaudiblebell, "audible-bell",},
	{auto_execute, "auto-execute",},
	{fillmode, "auto-fill-mode",},
	{indentmode, "auto-indent-mode",},
	{backtoindent, "back-to-indentation",},
	{backuptohomedir, "backup-to-home-directory",},
	{backchar, "backward-char",},
	{delbword, "backward-kill-word",},
	{gotobop, "backward-paragraph",},
	{backword, "backward-word",},
	{gotobob, "beginning-of-buffer",},
	{gotobol, "beginning-of-line",},
	{showmatch, "blink-and-insert",},
	{bsmap, "bsmap-mode",},
	{NULL, "c-x 4 prefix",},
	{NULL, "c-x prefix",},
	{executemacro, "call-last-kbd-macro",},
	{capword, "capitalize-word",},
	{changedir, "cd",},
	{clearmark, "clear-mark",},
	{colnotoggle, "column-number-mode",},
	{copyregion, "copy-region-as-kill",},
#ifdef	REGEX
	{cntmatchlines, "count-matches",},
	{cntnonmatchlines, "count-non-matches",},
#endif /* REGEX */
	{cscreatelist, "cscope-create-list-of-files-to-index",},
	{csfuncalled, "cscope-find-called-functions",},
	{csegrep, "cscope-find-egrep-pattern",},
	{csfindinc, "cscope-find-files-including-file",},
	{cscallerfuncs, "cscope-find-functions-calling-this-function",},
	{csdefinition, "cscope-find-global-definition",},
	{csfindfile, "cscope-find-this-file",},
	{cssymbol, "cscope-find-this-symbol",},
	{csfindtext, "cscope-find-this-text-string",},
	{csnextfile, "cscope-next-file",},
	{csnextmatch, "cscope-next-symbol",},
	{csprevfile, "cscope-prev-file",},
	{csprevmatch, "cscope-prev-symbol",},
	{redefine_key, "define-key",},
	{backdel, "delete-backward-char",},
	{deblank, "delete-blank-lines",},
	{forwdel, "delete-char",},
	{delwhite, "delete-horizontal-space",},
	{delleadwhite, "delete-leading-space",},
#ifdef	REGEX
	{delmatchlines, "delete-matching-lines",},
	{delnonmatchlines, "delete-non-matching-lines",},
#endif /* REGEX */
	{onlywind, "delete-other-windows",},
	{deltrailwhite, "delete-trailing-space",},
	{delwind, "delete-window",},
	{wallchart, "describe-bindings",},
	{desckey, "describe-key-briefly",},
	{diffbuffer, "diff-buffer-with-file",},
	{digit_argument, "digit-argument",},
	{lowerregion, "downcase-region",},
	{lowerword, "downcase-word",},
	{showversion, "emacs-version",},
	{finishmacro, "end-kbd-macro",},
	{gotoeob, "end-of-buffer",},
	{gotoeol, "end-of-line",},
	{enlargewind, "enlarge-window",},
	{NULL, "esc prefix",},
	{evalbuffer, "eval-current-buffer",},
	{evalexpr, "eval-expression",},
	{swapmark, "exchange-point-and-mark",},
	{extend, "execute-extended-command",},
	{fillpara, "fill-paragraph",},
	{filevisitalt, "find-alternate-file",},
	{filevisit, "find-file",},
	{poptofile, "find-file-other-window",},
	{filevisitro, "find-file-read-only",},
	{findtag, "find-tag",},
	{forwchar, "forward-char",},
	{gotoeop, "forward-paragraph",},
	{forwword, "forward-word",},
	{bindtokey, "global-set-key",},
	{unbindtokey, "global-unset-key",},
	{globalwdtoggle, "global-wd-mode",},
	{gotoline, "goto-line",},
	{help_help, "help-help",},
	{indent, "indent-current-line",},
	{insert, "insert",},
	{bufferinsert, "insert-buffer",},
	{fileinsert, "insert-file",},
	{fillword, "insert-with-wrap",},
	{backisearch, "isearch-backward",},
	{forwisearch, "isearch-forward",},
	{joinline, "join-line",},
	{justone, "just-one-space",},
	{ctrlg, "keyboard-quit",},
	{killbuffer_cmd, "kill-buffer",},
	{killline, "kill-line",},
	{killpara, "kill-paragraph",},
	{killregion, "kill-region",},
	{delfword, "kill-word",},
	{toggleleavetmp, "leave-tmpdir-backups",},
	{linenotoggle, "line-number-mode",},
	{listbuffers, "list-buffers",},
	{evalfile, "load",},
	{localbind, "local-set-key",},
	{localunbind, "local-unset-key",},
	{makebkfile, "make-backup-files",},
	{makedir, "make-directory",},
	{markpara, "mark-paragraph",},
	{markbuffer, "mark-whole-buffer",},
	{do_meta, "meta-key-mode",},	/* better name, anyone? */
	{negative_argument, "negative-argument",},
	{enewline, "newline",},
	{lfindent, "newline-and-indent",},
	{forwline, "next-line",},
#ifdef NOTAB
	{notabmode, "no-tab-mode",},
#endif /* NOTAB */
	{notmodified, "not-modified",},
	{openline, "open-line",},
	{nextwind, "other-window",},
	{overwrite_mode, "overwrite-mode",},
	{poptag, "pop-tag-mark",},
	{prefixregion, "prefix-region",},
	{backline, "previous-line",},
	{prevwind, "previous-window",},
	{spawncli, "push-shell",},
	{showcwdir, "pwd",},
	{queryrepl, "query-replace",},
#ifdef REGEX
	{re_queryrepl, "query-replace-regexp",},
#endif /* REGEX */
	{quote, "quoted-insert",},
#ifdef REGEX
	{re_searchagain, "re-search-again",},
	{re_backsearch, "re-search-backward",},
	{re_forwsearch, "re-search-forward",},
#endif /* REGEX */
	{reposition, "recenter",},
	{redraw, "redraw-display",},
#ifdef REGEX
	{replstr, "replace-string",},
#endif /* REGEX */
	{revertbuffer, "revert-buffer",},
	{filesave, "save-buffer",},
	{quit, "save-buffers-kill-emacs",},
	{savebuffers, "save-some-buffers",},
	{backpage, "scroll-down",},
	{back1page, "scroll-one-line-down",},
	{forw1page, "scroll-one-line-up",},
	{pagenext, "scroll-other-window",},
	{forwpage, "scroll-up",},
	{searchagain, "search-again",},
	{backsearch, "search-backward",},
	{forwsearch, "search-forward",},
	{selfinsert, "self-insert-command",},
	{sentencespace, "sentence-end-double-space",},
#ifdef REGEX
	{setcasefold, "set-case-fold-search",},
#endif /* REGEX */
	{set_default_mode, "set-default-mode",},
	{setfillcol, "set-fill-column",},
	{setmark, "set-mark-command",},
	{setprefix, "set-prefix-string",},
	{shellcommand, "shell-command",},
	{piperegion, "shell-command-on-region",},
	{shrinkwind, "shrink-window",},
#ifdef NOTAB
	{space_to_tabstop, "space-to-tabstop",},
#endif /* NOTAB */
	{splitwind, "split-window-vertically",},
	{definemacro, "start-kbd-macro",},
	{spawncli, "suspend-emacs",},
	{usebuffer, "switch-to-buffer",},
	{poptobuffer, "switch-to-buffer-other-window",},
	{togglereadonly, "toggle-read-only" },
	{twiddle, "transpose-chars",},
	{transposepara, "transpose-paragraphs",},
	{transposeword, "transpose-words",},
	{undo, "undo",},
	{undo_add_boundary, "undo-boundary",},
	{undo_boundary_enable, "undo-boundary-toggle",},
	{undo_enable, "undo-enable",},
	{undo_dump, "undo-list",},
	{universal_argument, "universal-argument",},
	{upperregion, "upcase-region",},
	{upperword, "upcase-word",},
	{togglevisiblebell, "visible-bell",},
	{tagsvisit, "visit-tags-table",},
	{showcpos, "what-cursor-position",},
	{filewrite, "write-file",},
	{yank, "yank",},
	{NULL, NULL,}
};

void
funmap_init(void)
{
	struct funmap *fn;

	for (fn = functnames; fn->fn_name != NULL; fn++) {
		fn->fn_next = funs;
		funs = fn;
	}
}

int
funmap_add(PF fun, const char *fname)
{
	struct funmap *fn;

	if ((fn = malloc(sizeof(*fn))) == NULL)
		return (FALSE);

	fn->fn_funct = fun;
	fn->fn_name = fname;
	fn->fn_next = funs;

	funs = fn;
	return (TRUE);
}

/*
 * Translate from function name to function pointer.
 */
PF
name_function(const char *fname)
{
	struct funmap *fn;

	for (fn = funs; fn != NULL; fn = fn->fn_next) {
		if (strcmp(fn->fn_name, fname) == 0)
			return (fn->fn_funct);
	}
	return (NULL);
}

const char *
function_name(PF fun)
{
	struct funmap *fn;

	for (fn = funs; fn != NULL; fn = fn->fn_next) {
		if (fn->fn_funct == fun)
			return (fn->fn_name);
	}
	return (NULL);
}

/*
 * List possible function name completions.
 */
struct list *
complete_function_list(const char *fname)
{
	struct funmap	*fn;
	struct list	*head, *el;
	int		 len;

	len = strlen(fname);
	head = NULL;
	for (fn = funs; fn != NULL; fn = fn->fn_next) {
		if (memcmp(fname, fn->fn_name, len) == 0) {
			if ((el = malloc(sizeof(*el))) == NULL) {
				free_file_list(head);
				return (NULL);
			}
			el->l_name = strdup(fn->fn_name);
			el->l_next = head;
			head = el;
		}
	}
	return (head);
}
@


1.52
log
@Add transpose-words, ok jasper@@.
Limited to one iteration until 'undo' is looked into.
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.51 2015/09/26 15:03:15 lum Exp $	*/
d183 1
@


1.51
log
@Add transpose-paragraphs. ok jasper@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.50 2015/09/24 07:07:59 lum Exp $	*/
d204 1
@


1.50
log
@Add mark-paragraph. ok jasper@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.49 2015/03/19 21:22:15 bcallah Exp $	*/
d203 1
@


1.49
log
@Clean up the includes in mg.
This does the following:
Moves all POSIX headers from sysdef.h into the individual .c files so that
each file now only includes what it needs. All headers are properly sorted.
Moves the remainder of sysdef.h to other files (mostly def.h) and deletes
sysdef.h now that it's no longer contains anything.
Tweak a comment that references sysdef.h so that it no longer does that.
ok florian@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.48 2015/03/16 13:47:48 bcallah Exp $	*/
d135 1
@


1.48
log
@Change the internal name of the newline function to deconflict with a
function of the same name in term.h. This is the first step towards
cleaning up mg's includes. No user-visible changes.
ok florian@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.47 2013/05/31 18:03:44 lum Exp $	*/
d5 6
d12 1
a13 1
#include "funmap.h"
@


1.47
log
@Make the system bell toggleable via 'audible-bell', and if switched
off, make available an alternative 'visible-bell'.

ok florian@@ jasper@@ Feedback Sunil Nimmagadda.
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.46 2013/05/22 19:23:45 lum Exp $	*/
d132 1
a132 1
	{newline, "newline",},
@


1.46
log
@Shuffle shell-command-on-region around to give shell-command.
ok florian@@ jasper@@
Testing Sunil Nimmagadda
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.45 2012/12/27 18:51:52 florian Exp $	*/
d24 1
d204 1
@


1.45
log
@diff-buffer-with-file
input gsoares@@, Sunil Nimmagadda, jasper@@
ok jasper@@, benno@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.44 2012/12/04 10:54:20 florian Exp $	*/
d182 1
@


1.44
log
@Bring back column numbers and make them configurable, off by default
to not kill slow serial lines.
Committing my independently written, slightly different version, as
requested by jasper@@.

OK jasper@@, OK reyk@@ for jasper@@'s version of the diff
"Sure, if you think so then." deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.43 2012/11/27 19:46:46 jasper Exp $	*/
d77 1
@


1.43
log
@- add 'make-directory' (not bound to any shortcut).

feedback from florian@@ lum@@
ok florian@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.42 2012/11/20 13:10:16 florian Exp $	*/
d43 1
@


1.42
log
@keep functnames sorted
ok jasper, lum
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.41 2012/10/12 21:13:46 jasper Exp $	*/
d125 1
@


1.41
log
@- implement "revert-buffer", which reverts the current buffer to what's on disk
- split gotoline() into the argument handling part and the part that actually
  goes to the specified line number so it can be re-used by revertbuffer()

input/ok florian@@ haesbaert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.40 2012/06/14 17:21:22 lum Exp $	*/
d24 1
a24 1
	{auto_execute, "auto-execute", },
d48 13
a66 1
	{deltrailwhite, "delete-trailing-space",},
d72 1
a80 1
	{globalwdtoggle, "global-wd-mode",},
d90 1
d92 1
d94 1
a94 2
	{filevisitalt, "find-alternate-file",},
	{poptofile, "find-file-other-window",},
d100 1
d103 1
a129 1
	{indent, "indent-current-line",},
d138 1
a141 1
	{poptag, "pop-tag-mark",},
a142 2
	{findtag, "find-tag",},
	{tagsvisit, "visit-tags-table",},
a145 1
	{replstr, "replace-string",},
d156 4
d191 5
a195 5
	{undo, "undo", },
	{undo_enable, "undo-enable", },
	{undo_boundary_enable, "undo-boundary-toggle", },
	{undo_add_boundary, "undo-boundary", },
	{undo_dump, "undo-list", },
d199 1
a202 14
	{cssymbol, "cscope-find-this-symbol",},
	{csdefinition, "cscope-find-global-definition",},
	{csfuncalled, "cscope-find-called-functions",},
	{cscallerfuncs, "cscope-find-functions-calling-this-function",},
	{csfindtext, "cscope-find-this-text-string",},
	{csegrep, "cscope-find-egrep-pattern",},
	{csfindfile, "cscope-find-this-file",},
	{csfindinc, "cscope-find-files-including-file",},
	{csnextmatch, "cscope-next-symbol",},
	{csprevmatch, "cscope-prev-symbol",},
	{csnextfile, "cscope-next-file",},
	{csprevfile, "cscope-prev-file",},
	{cscreatelist, "cscope-create-list-of-files-to-index",},
	{revertbuffer, "revert-buffer",},
@


1.40
log
@Allow mg to save backup files to a users home directory.
Suggestions from eric@@ and Sunil Nimmagadda.
Remarks deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.39 2012/06/07 15:15:04 lum Exp $	*/
d199 2
a200 1
	{cscreatelist, "cscope-create-list-of-files-to-index"},
@


1.39
log
@Add some cscope support to mg. From Sunil Nimmagadda.  Due to some
structural limitations in mg, mg doesn't behave exactly the same as
emacs cscope (see the README) but is still very usable.

man page bits reviewed by jmc@@, otherwise tested and reviewed by
myself.
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.38 2012/04/12 04:47:59 lum Exp $	*/
d28 1
d103 1
@


1.38
log
@Remove the conditional directives NO_MACRO and NO_STARTUP.
They have not compiled for numerous years.
ok kjell@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.37 2012/04/11 17:51:10 lum Exp $	*/
d185 13
@


1.37
log
@Add:
 1. C-x h to mark whole buffer.
 2. M-| to pipe current region to external command.
From Sunil Nimmagadda.

Feedback from deraadt@@ and myself. ok for man page amendments from jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.36 2012/03/14 13:56:35 lum Exp $	*/
a37 1
#ifndef NO_MACRO
a38 1
#endif /* !NO_MACRO */
a65 1
#ifndef NO_MACRO
a66 1
#endif /* !NO_MACRO */
a71 1
#ifndef NO_STARTUP
a73 1
#endif /* !NO_STARTUP */
a103 1
#ifndef NO_STARTUP
a104 1
#endif /* !NO_STARTUP */
a167 1
#ifndef NO_MACRO
a168 1
#endif /* !NO_MACRO */
@


1.36
log
@Remove the NO_HELP conditional directives. If defined, mg will not compile and
has not done so for numerous years. Not hard to fix, but just remove anyway.
ok kjell@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.35 2011/11/28 04:41:39 lum Exp $	*/
d116 1
d170 1
@


1.35
log
@Add some ctags support to mg. From Sunil Nimmagadda.

Man page review and suggestions from jmc@@

Revewied and tested by myself, and ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.34 2011/01/18 16:25:40 kjell Exp $	*/
a22 1
#ifndef	NO_HELP
a23 1
#endif /* !NO_HELP */
a61 1
#ifndef NO_HELP
a63 1
#endif /* !NO_HELP */
a92 1
#ifndef NO_HELP
a93 1
#endif /* !NO_HELP */
@


1.34
log
@Add join-line, bound to M-^
Join the current line to the previous.

original diff by Henri Kemppainen. minor mod to add undo boundaries.
Thanks!
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.33 2011/01/17 03:12:06 kjell Exp $	*/
d138 1
d140 2
@


1.33
log
@Add back-to-indentation. (M-m)
Move the dot to the first non-whitespace character on the current line.
from Henri Kemppainen . ok theo
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.32 2008/09/15 16:13:35 kjell Exp $	*/
d106 1
@


1.32
log
@Expose the undo commands as proper mg functions.
This should have no functional change on undo, but it does facilitate
testing undo behavior.
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.31 2008/06/14 08:46:30 kjell Exp $	*/
d29 1
@


1.31
log
@We do not need a whole MODE for blinking one character.

both emacsen automatically blink, so mg should too. This can be
overridden in your ~/.mg by adding, e.g.

global-set-key ")" self-insert-command

So, I've eliminated blink mode, and renamed "blink-matching-paren-hack"
to "blink-and-insert". It's not just for parens anyway.

While I'm here, set up an empty (rescan) target for backtab, so I can
bind something convenient to it; e.g.

global-set-key "\e[Z" backward-char

Finally, remove all references to Scribd.
Theo doesn't hate this, though I would hesitate to call it an ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.30 2008/06/11 23:18:33 kjell Exp $	*/
d184 3
@


1.30
log
@Add delete-leading-space, delete-trailing-space,
indent-current-line utility functions for stripping leading/trailing
whitespace, and setting a fixed indent respectively.
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.29 2008/06/10 23:23:53 kjell Exp $	*/
d35 1
a35 2
	{blinkparen, "blink-matching-paren",},
	{showmatch, "blink-matching-paren-hack",},
@


1.29
log
@Add a clear-mark function.
Use it to clear the region it is copied (M-w), or yanked (C-w).
This matches xemacs behavior, is not horribly different from gnu
emacs, and way less wrong than the current behavior.
Noticed by Han Boetes. ok otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.28 2008/06/10 00:19:31 kjell Exp $	*/
d56 2
d124 2
a125 1
	{indent, "newline-and-indent",},
@


1.28
log
@Remove copyright notices and put these files back into the public domain.
ok art
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.27 2007/05/28 17:52:17 kjell Exp $	*/
d45 1
@


1.27
log
@Add a global-wd-mode command, which toggles between the current
behavior (every buffer maintains its own cwd) and the old behavior of
one global working directory. This makes it slightly easier to hack
on things like kernel code, where compilation, etc, are initiated from
a different directory than you are working in.
While here, fix setting/handling of global wd.
@
text
@d1 4
a4 24
/*	$OpenBSD: funmap.c,v 1.26 2006/12/21 18:06:02 kjell Exp $	*/
/*
 * Copyright (c) 2001 Artur Grabowski <art@@openbsd.org>.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
@


1.26
log
@Eliminate BSMAP #ifdef (we didn't define it). This exposes bsmap-mode,
which swaps ^H and DEL.

ok jason@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.25 2006/12/16 17:00:03 kjell Exp $	*/
d92 1
@


1.25
log
@Get rid of PREFIXREGION ifdef, since we always enable it anyway.
no binary change.
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.24 2006/06/01 09:00:50 kjell Exp $	*/
a56 1
#ifdef BSMAP
a57 1
#endif /* BSMAP */
@


1.24
log
@Display line number in the mg statusbar.  Yes, it seems like a fugly
way to do it, but all the clever and pretty ways utterly failed.
Basic use seems fine. We'll turdshine the special cases later.

If it bothers you, use M-x line-number-mode, or put same in your ~/.mg
file to disable.

ok cloder, jason
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.23 2005/12/20 06:17:36 kjell Exp $	*/
a150 1
#ifdef PREFIXREGION
a151 1
#endif /* PREFIXREGION */
a186 1
#ifdef PREFIXREGION
a187 1
#endif /* PREFIXREGION */
@


1.23
log
@Clean up the ugly casted frees. In one case, this meant eliminating a nasty
struct/union/casting nightmare when building the list of names for filename
completion. In particular, be consistent about strduping and freeing
the list data.
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.22 2005/12/13 06:01:27 kjell Exp $	*/
d131 1
@


1.22
log
@More name-clash delinting
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.21 2005/11/20 18:47:11 kjell Exp $	*/
d276 1
a276 1
	struct list		*head, *el;
d287 1
a287 1
			el->l_name = fn->fn_name;
@


1.21
log
@#ifdef NO_DIR can go too. From Han Boetes.
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.20 2005/11/20 04:17:25 kjell Exp $	*/
d72 1
a72 1
	{define_key, "define-key",},
d149 1
a149 1
	{overwrite, "overwrite-mode",},
d169 1
a169 1
	{refresh, "redraw-display",},
@


1.20
log
@Don't bind help to a null function
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.19 2005/11/20 04:16:34 kjell Exp $	*/
a65 1
#ifndef NO_DIR
a66 1
#endif /* !NO_DIR */
a155 1
#ifndef NO_DIR
a156 1
#endif /* !NO_DIR */
@


1.19
log
@Kill the NO_BACKUP #ifdef
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.18 2005/11/19 20:14:38 kjell Exp $	*/
a117 1
	{NULL, "help",},
@


1.18
log
@Goodbye NO_METAKEY
(#ifdef is for emacs developers)
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.17 2005/11/18 20:56:52 deraadt Exp $	*/
a139 1
#ifndef NO_BACKUP
a140 1
#endif /* !NO_BACKUP */
@


1.17
log
@greedy use of typedef struct was making code harder to read; ok kjell cloder
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.16 2005/11/07 23:32:20 kjell Exp $	*/
a142 1
#ifdef DO_METAKEY
a143 1
#endif /* DO_METAKEY */
@


1.16
log
@Move most of the dired hooks into dired.c.  While here, enable some
dired functions that were written, but not bound to keys. No other
functional change.

Tested by Han Boetes.
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.15 2005/10/14 15:45:38 deraadt Exp $	*/
d281 1
a281 1
LIST *
d285 1
a285 1
	LIST		*head, *el;
@


1.15
log
@more replstr into the #ifdef
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.14 2005/05/30 13:13:50 jason Exp $	*/
a89 12
#ifndef NO_DIRED
	{dired, "dired",},
	{d_undelbak, "dired-backup-unflag",},
	{d_copy, "dired-copy-file",},
	{d_expunge, "dired-do-deletions",},
	{d_findfile, "dired-find-file",},
	{d_ffotherwindow, "dired-find-file-other-window",},
	{d_del, "dired-flag-file-deleted",},
	{d_otherwindow, "dired-other-window",},
	{d_rename, "dired-rename-file",},
	{d_undel, "dired-unflag",},
#endif /* !NO_DIRED */
@


1.14
log
@add find-alternate-file command and binding for ^X^V; ok cloder
(you're welcome kjell)
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.13 2005/05/27 08:08:18 cloder Exp $	*/
d179 1
a180 1
#ifdef REGEX
@


1.13
log
@Add emacs-style replace-string function that does not prompt you
to confirm replacements.
OK jason, deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.12 2005/04/28 07:23:56 otto Exp $	*/
d121 1
@


1.12
log
@Get rid of unused arg to complete_function_list(). Han Boetes.
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.11 2005/04/03 02:09:28 db Exp $	*/
d178 1
@


1.11
log
@This is a no binary change which does:

- spelling, punctuation fixes
- variable declaration lineup
- use parentheses for return and sizeof
- K&R function declarations -> ANSI
- other minor code beautification

ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.10 2005/03/09 16:20:48 jfb Exp $	*/
d292 1
a292 1
complete_function_list(const char *fname, int c)
@


1.10
log
@fix mg's behaviour with regards to files on which we do not have
write access.  diff originally from vincent@@ and forgotten for
a while.

ok rohee@@, "toss it in, i'll bitch if it doesn't work" henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.9 2002/05/29 12:41:42 vincent Exp $	*/
d46 1
a46 1
	{ auto_execute, "auto-execute", },
d223 2
a224 2
	{ undo, "undo", },
	{ undo_dump, "undo-list", },
d231 1
a231 1
	{NULL, NULL,},
d251 1
a251 1
		return FALSE;
d258 1
a258 1
	return TRUE;
d271 1
a271 1
			return fn->fn_funct;
d273 1
a273 1
	return NULL;
d283 1
a283 1
			return fn->fn_name;
d285 1
a285 1
	return NULL;
d289 1
a289 1
 * list possible function name completions.
d294 3
a296 3
	struct funmap *fn;
	LIST *head, *el;
	int len;
d304 1
a304 1
				return NULL;
d311 1
a311 2

	return head;
a312 3



@


1.9
log
@ add an "auto-execute" feature, that allows binding function calls to
certain patterns. for example, `auto-execute "*.c" auto-indent-mode'.

 ok art@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.8 2002/05/29 12:33:36 vincent Exp $	*/
d140 1
a140 1
	{killbuffer, "kill-buffer",},
@


1.8
log
@ add an entry for "find-file-read-only" and one for toggle-read-only,
which was missing for an unknown reason.

 ok art@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.7 2002/03/16 15:10:11 vincent Exp $	*/
d46 1
@


1.7
log
@ map undo_dump to the "undo-list" command.
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.6 2002/03/11 13:02:56 vincent Exp $	*/
d119 1
d220 1
@


1.6
log
@  * Move to ANSI function definitions.
  * Add a whole lot of consts where I thought it made sense

   no ok, but no objections either...
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.5 2002/02/20 22:30:54 vincent Exp $	*/
d221 1
@


1.5
log
@ Add undo code to mg.

 needs further hacking.

 ok `whole bunch of people on icb'@@
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.4 2002/02/08 21:21:11 deraadt Exp $	*/
d35 2
a36 2
	PF		fn_funct;
	char		*fn_name;
d242 1
a242 1
funmap_add(PF fun, char *fname)
d261 1
a261 1
name_function(char *fname)
d272 1
a272 1
char *
d288 1
a288 1
complete_function_list(char *fname, int c)
@


1.4
log
@more gosmacs
@
text
@d1 1
a1 1
/*	$OpenBSD: funmap.c,v 1.3 2001/05/24 13:00:45 art Exp $	*/
d220 1
@


1.3
log
@add blobs.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a169 1
#ifdef GOSMACS
a170 1
#endif /* GOSEMACS */
a190 1
#ifdef GOSMACS
a192 1
#endif /* GOSMACS */
@


1.2
log
@No need for the extra prefixes here anymore.
@
text
@d1 24
@


1.1
log
@Break out function -> name mappings to an own file.
Add a possibility to dynamically extend the function table.
@
text
@a92 5
	{NULL, "extra prefix 1",},
	{NULL, "extra prefix 2",},
	{NULL, "extra prefix 3",},
	{NULL, "extra prefix 4",},
	{NULL, "extra prefix 5",},
@

