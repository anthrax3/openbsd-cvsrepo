head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.8
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.6
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.2
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.8.0.10
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.12
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.4
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.8
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.6
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.5.0.66
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.64
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.62
	OPENBSD_5_0:1.5.0.60
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.58
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.56
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.52
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.54
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.50
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.48
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.46
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.44
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.42
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.40
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.38
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.36
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.34
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.32
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.30
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.28
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.26
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.24
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.22
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.20
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.18
	OPENBSD_2_8:1.5.0.16
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.14
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.9
date	2016.05.26.21.24.16;	author millert;	state Exp;
branches;
next	1.8;
commitid	KlonlQiiKkMayl63;

1.8
date	2013.04.15.16.34.19;	author guenther;	state Exp;
branches;
next	1.7;

1.7
date	2013.04.13.19.31.58;	author guenther;	state Exp;
branches;
next	1.6;

1.6
date	2013.04.10.02.57.20;	author guenther;	state Exp;
branches;
next	1.5;

1.5
date	97.04.08.02.44.05;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.02.21.18.34.57;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.12.08.14.32.39;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.42.57;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.52;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.52;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Use "cc -E" instead of "cpp".  OK deraadt@@ natano@@
@
text
@#	$OpenBSD: Makefile,v 1.8 2013/04/15 16:34:19 guenther Exp $

PROG=	which
MAN=	which.1 whereis.1
LINKS=	${BINDIR}/which ${BINDIR}/whereis

check_path_in_man:
	@@echo "Checking path expansion in whereis.1"; \
	stdpath=`printf '#include <paths.h>\n_PATH_STDPATH\n' | \
	${CC} -E -P ${CPPFLAGS} - | \
	sed -n 's/^[    ]*"\(.*\)".*/.D1 \1/p'` ; \
	fgrep -xq "$$stdpath" ${.CURDIR}/whereis.1 && { touch $@@; exit 0; }; \
	echo "Update the expansion of _PATH_STDPATH in ${.CURDIR}/whereis.1"; \
	exit 1

all: check_path_in_man
CLEANFILES = check_path_in_man

.include <bsd.prog.mk>
@


1.8
log
@Tweak check rule to match change to the manpage formatting
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2013/04/13 19:31:58 guenther Exp $
d10 1
a10 1
	${CPP} ${CPPFLAGS} - | \
@


1.7
log
@My clever "expand _PATH_STDPATH in whereis.1" logic broke the build if
you forgot to make obj first.  Switch to putting the path in the manpage
and just verifying at build-time whether it's correct.

Problem pointed out by rpe@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1997/04/08 02:44:05 millert Exp $
d8 1
d11 1
a11 1
	sed -n 's/^[    ]*"\(.*\)".*/.Pa \1 ./p'` ; \
@


1.6
log
@Get the standard path from _PATH_STDPATH instead of
sysctl({CTL_USER,USER_CS_PATH}).  Expand that into the manpage
too.

_PATH_STDPATH suggested by miod@@
Corrections from schwarze@@ and jmc@@
ok millert@@ miod@@ schwarze@@ jmc@@
@
text
@a2 3
whereis_MAN = ${.OBJDIR}/whereis.1
man_depends = ${.OBJDIR}/whereis.d

d4 1
a4 1
MAN=	which.1 ${whereis_MAN}
d7 1
a7 1
${whereis_MAN}: ${.CURDIR}/whereis.1 /usr/include/paths.h
d9 5
a13 9
		${CPP} ${CPPFLAGS} -MD -MT '$${.OBJDIR}/whereis.1' \
		-MF ${man_depends} - | \
		sed -n 's/^[ 	]*"\(.*\)".*/\1/p'` ; \
	sed "s!_PATH_STDPATH!$${stdpath}!" < ${.CURDIR}/whereis.1 >$@@

CLEANFILES = ${whereis_MAN}
cleandir: cleanlocaldepend
cleanlocaldepend:
	rm -f ${man_depends}
d15 2
a16 3
.if exists(${man_depends})
. include "${man_depends}"
.endif
@


1.5
log
@which(1) and whereis(1) are now the same program (hard linked).
@
text
@d1 4
a4 1
#	$OpenBSD: Makefile,v 1.4 1997/02/21 18:34:57 millert Exp $
d7 1
a7 1
MAN=	which.1 whereis.1
d9 16
@


1.4
log
@which(1) is now a binary that works in any shell since csh(1) has a
which built-in.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1996/12/08 14:32:39 downsj Exp $
d4 2
@


1.3
log
@install -> ${INSTALL}, -c -> ${COPY}
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1996/06/26 05:42:57 deraadt Exp $
d3 1
a3 5
MAN=	which.1

beforeinstall:
	${INSTALL} ${COPY} -o ${BINOWN} -g ${BINGRP} -m ${BINMODE} \
	    ${.CURDIR}/which.csh ${DESTDIR}${BINDIR}/which
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1.1.1 1995/10/18 08:46:52 deraadt Exp $
d6 1
a6 1
	install -c -o ${BINOWN} -g ${BINGRP} -m ${BINMODE} \
@


1.1
log
@Initial revision
@
text
@d1 1
a1 2
#	from: @@(#)Makefile	5.5 (Berkeley) 7/1/90
#	$Id: Makefile,v 1.3 1994/12/22 12:31:36 cgd Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
