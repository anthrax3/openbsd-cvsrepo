head	1.20;
access;
symbols
	OPENBSD_3_3:1.15.0.2
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.13.0.6
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.13.0.4
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9_BASE:1.13
	OPENBSD_2_9:1.13.0.2
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.20
date	2003.07.14.02.21.37;	author deraadt;	state dead;
branches;
next	1.19;

1.19
date	2003.07.13.18.44.02;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2003.06.10.09.12.10;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.03.02.56.07;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2003.03.31.07.52.56;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.03.11.08.11.08;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2002.06.19.03.26.21;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2000.11.10.05.10.25;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	2000.08.12.02.32.49;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.08.12.01.32.16;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.03.23.21.10.15;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.03.07.21.11.07;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.12.04.19.04.52;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.07.04.11.53.53;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.06.05.01.21.24;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	98.09.23.04.32.39;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	98.08.30.22.45.17;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.02.07.10.17.38;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.32.41;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.06;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.06;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@toast this piece of junk
@
text
@.\"	$OpenBSD: error.1,v 1.19 2003/07/13 18:44:02 jmc Exp $
.\"	$NetBSD: error.1,v 1.3 1995/09/02 06:15:20 jtc Exp $
.\"
.\" Copyright (c) 1980, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)error.1	8.1 (Berkeley) 6/6/93
.\"
.Dd June 6, 1993
.Dt ERROR 1
.Os
.Sh NAME
.Nm error
.Nd analyze and disperse compiler error messages
.Sh SYNOPSIS
.Nm error
.Op Fl STnqsv
.Op Fl I Ar ignorefile
.Op Fl t Ar suffixlist
.Op Ar name
.Sh DESCRIPTION
The
.Nm
utility analyzes and optionally disperses the diagnostic error messages
produced by a number of compilers and language processors to the source
file and line where the errors occurred.
It can replace the painful,
traditional methods of scribbling abbreviations of errors on paper, and
permits error messages and source code to be viewed simultaneously
without machinations of multiple windows in a screen editor.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl S
Show the errors in unsorted order (as they come from the error file).
.It Fl T
Terse output.
.It Fl n
Do
.Em not
touch any files; all error messages are sent to the
standard output.
.It Fl q
The user is queried whether or not to touch the file.
A
.Sq y
or
.Sq n
to the question is necessary to continue.
Absence of the
.Fl q
option implies that all referenced files
(except those referring to discarded error messages)
are to be touched.
.It Fl s
Print out statistics regarding the error categorization.
Not too useful.
.It Fl v
After all files have been touched,
overlay the visual editor
.Xr \&vi 1
with it set up to edit all files touched,
and positioned in the first touched file at the first error.
If
.Xr \&vi 1
can't be found, try
.Xr \&ex 1
or
.Xr \&ed 1
from standard places.
.It Fl I Ar ignorefile
Specifies a file containing a list of functions to ignore.
.It Fl t Ar suffixlist
Take the following argument as a suffix list.
Files whose suffixes do not appear in the suffix list are not touched.
The suffix list is dot separated, and
.Sq \&*
wildcards work.
Thus the suffix list:
.Pp
.Dl ".c.y.foo*.h"
.Pp
allows
.Nm
to touch files ending with
.Dq \&.c ,
.Dq \&.y ,
.Dq \&.foo\&* ,
and
.Dq \&.h .
.El
.Pp
.Nm
looks at the error messages,
either from the specified file
.Ar name
or from the standard input,
and attempts to determine which
language processor produced each error message,
the source file and line number to which the error message refers,
if the error message is to be ignored or not,
and inserts the (possibly slightly modified) error message into
the source file as a comment on the line preceding to which the
line the error message refers.
Error messages which can't be categorized by language processor
or content are not inserted into any file,
but are sent to the standard output.
.Nm
touches source files only after all input has been read.
.Pp
.Nm
is intended to be run
with its standard input
connected via a pipe to the error message source.
Some language processors put error messages on their standard error file;
others put their messages on the standard output.
Hence, both error sources should be piped together into
.Nm error .
For example, when using the
.Xr csh 1
syntax,
.Pp
.Dl make \-s lint \&| error \-q \-v
.Pp
will analyze all the error messages produced
by whatever programs
.Xr make 1
runs when making lint.
.Pp
.Nm
knows about the error messages produced by:
.Xr as 1 ,
.Xr cc 1 ,
.Xr ccom ,
.Xr cpp 1 ,
.Xr f77 1 ,
.Xr ld 1 ,
.Xr lint 1 ,
.Xr make 1 ,
.Xr pc ,
.Xr pi ,
.Xr yacc 1 ,
and DEC Western Research Modula\-2.
.Pp
.Nm
knows a standard format for error messages produced by
the language processors,
so is sensitive to changes in these formats.
For all languages except Pascal,
error messages are restricted to be on one line.
Some error messages refer to more than one line in more than
one file;
.Nm
will duplicate the error message and insert it at
all of the places referenced.
.Pp
.Nm
will do one of six things with error messages.
.Bl -tag -width synchronize
.It Em synchronize
Some language processors produce short errors describing
which file it is processing.
.Nm
uses these to determine the file name for languages that
don't include the file name in each error message.
These synchronization messages are consumed entirely by
.Nm error .
.It Em discard
Error messages from
.Xr lint 1
that refer to one of the two
.Xr lint 1
libraries,
.Pa /usr/libdata/lint/llib-lc
and
.Pa /usr/libdata/lint/llib-port ,
are discarded,
to prevent accidentally touching these libraries.
Again, these error messages are consumed entirely by
.Nm error .
.It Em nullify
Error messages from
.Xr lint 1
can be nullified if they refer to a specific function,
which is known to generate diagnostics which are not interesting.
Nullified error messages are not inserted into the source file,
but are written to the standard output.
The names of functions to ignore are taken from
either the file named
.Pa .errorrc
in the user's home directory,
or from the file named by the
.Fl I
option.
If the file does not exist,
no error messages are nullified.
If the file does exist, there must be one function
name per line.
.It Em not file specific
Error messages that can't be intuited are grouped together,
and written to the standard output before any files are touched.
They will not be inserted into any source file.
.It Em file specific
Error messages that refer to a specific file,
but to no specific line,
are written to the standard output when
that file is touched.
.It Em true errors
Error messages that can be intuited are candidates for
insertion into the file to which they refer.
.El
.Pp
Only true error messages are candidates for inserting into
the file they refer to.
Other error messages are consumed entirely by
.Nm
or are written to the standard output.
.Nm
inserts the error messages into the source file on the line
preceding the line the language processor found in error.
Each error message is turned into a one line comment for the
language,
and is internally flagged
with the string
.Dq ###
at the beginning of the error,
and
.Dq %%%
at the end of the error.
This makes pattern searching for errors easier with an editor,
and allows the messages to be easily removed.
In addition, each error message contains the source line number
for the line the message refers to.
A reasonably formatted source program can be recompiled
with the error messages still in it,
without having the error messages themselves cause future errors.
For poorly formatted source programs in free format languages,
such as C or Pascal,
it is possible to insert a comment into another comment,
which can wreak havoc with a future compilation.
To avoid this, programs with comments and source
on the same line should be formatted
so that language statements appear before comments.
.Pp
.Nm
catches interrupt and terminate signals,
and if in the insertion phase,
will orderly terminate what it is doing.
.Sh FILES
.Bl -tag -width ~/.errorrc -compact
.It Pa ~/.errorrc
function names to ignore for
.Xr lint 1
error messages
.It Pa /dev/tty
user's teletype
.El
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.0 .
.Sh AUTHORS
Robert Henry
.Sh BUGS
Opens the teletype directly to do user querying.
.Pp
Source files with links make a new copy of the file with
only one link to it.
.Pp
Changing a language processor's format of error messages
may cause
.Nm
to not understand the error message.
.Pp
.Nm error ,
since it is purely mechanical,
will not filter out subsequent errors caused by
.Dq floodgating
initiated by one syntactically trivial error.
Humans are still much better at discarding these related errors.
.Pp
Pascal error messages belong after the lines affected
(error puts them before).
The alignment of the
.Sq \e
marking the point of error is also disturbed by
.Nm error .
.Pp
.Nm
was designed for work on
.Tn CRT Ns s
at reasonably high speed.
It is less pleasant on slow speed terminals, and has never been
used on hardcopy terminals.
@


1.19
log
@fix a list;
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.18 2003/06/10 09:12:10 jmc Exp $
@


1.18
log
@- section reorder
- COMPATIBILITY merge
- macro cleanup
- kill whitespace at EOL
- new sentence, new line

ssh pages ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.17 2003/06/03 02:56:07 millert Exp $
d183 1
a183 1
.Bl -tag -width Em synchronize
@


1.17
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.16 2003/03/31 07:52:56 jmc Exp $
a281 2
.Sh AUTHORS
Robert Henry
d287 2
@


1.16
log
@error(1): users's -> user's
crunchgen(1): progam -> program
	      homegrown -> home-grown

from NetBSD (Igor Sobrado) via tedu@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.15 2003/03/11 08:11:08 jmc Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.15
log
@files with dead .Xr's;

left .Xr, but removed man page number
as suggested by mpech@@

more help and ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.14 2002/06/19 03:26:21 millert Exp $
d219 1
a219 1
in the users's home directory,
@


1.14
log
@Poach a commit; error(1) groks yacc output now...
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.13 2000/11/10 05:10:25 aaron Exp $
d162 1
a162 1
.Xr ccom 1 ,
d168 2
a169 2
.Xr pc 1 ,
.Xr pi 1 ,
@


1.13
log
@- Section shuffling: comply to the section ordering outlined in mdoc(7).
- Some .Nm trimming.
- .Sh AUTHOR -> .Sh AUTHORS
- Other miscellaneous fixes here and there.
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.12 2000/08/12 02:32:49 aaron Exp $
d160 1
a160 1
.Xr make 1 ,
d162 1
d164 1
a164 2
.Xr ccom 1 ,
.Xr as 1 ,
d167 2
d170 1
a170 2
.Xr pc 1 ,
.Xr f77 1 ,
@


1.12
log
@- Convert to using getopt().
- Sync man page options with actual program/usage.
- KNF.
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.11 2000/08/12 01:32:16 aaron Exp $
d285 2
d290 1
a290 2
command
appeared in
a291 2
.Sh AUTHOR
Robert Henry
@


1.11
log
@Fix missing pluralization.
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.10 2000/03/23 21:10:15 aaron Exp $
d45 2
a46 4
.Op Fl n
.Op Fl s
.Op Fl q
.Op Fl v
a47 1
.Op Fl I Ar ignorefile
d62 4
d83 3
d99 2
a118 5
.It Fl s
Print out statistics regarding the error categorization.
Not too useful.
.It Fl I Ar ignorefile
Specifies a file containing a list of functions to ignore.
@


1.10
log
@Fix some formatting problems I missed before.
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.9 2000/03/07 21:11:07 aaron Exp $
d230 1
a230 1
Error message that refer to a specific file,
@


1.9
log
@Various cleanup.
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.8 1999/12/04 19:04:52 aaron Exp $
d57 2
a58 1
file and line where the errors occurred.  It can replace the painful,
d311 2
a312 1
(error puts them before).  The alignment of the
@


1.8
log
@Document the -I option; some minor formatting fixes as well.
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.7 1999/07/04 11:53:53 aaron Exp $
d70 1
a70 3
The user is
.Ar queried
whether s/he wants to touch the file.
d107 3
a109 3
.Sq \&.c ,
.Sq \&.y ,
.Sq \&.foo\&* ,
d111 1
a111 1
.Sq \&.h .
d113 1
a113 3
Print out
.Em statistics
regarding the error categorization.
d168 2
a169 2
and
.Em DEC Western Research Modula\-2 .
@


1.7
log
@correct use of .Nm; some other formatting nits
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.6 1999/06/05 01:21:24 aaron Exp $
d53 1
d55 1
a55 1
analyzes and optionally disperses the diagnostic error messages
d62 1
a62 1
Options are:
d73 5
a77 1
A ``y'' or ``n'' to the question is necessary to continue.
d99 3
a101 1
The suffix list is dot separated, and ``*'' wildcards work.
d108 6
a113 1
to touch files ending with ``.c'', ``.y'', ``.foo*'' and ``.h''.
d119 2
d163 1
a163 1
.Xr \&cc 1 ,
d166 2
a167 2
.Xr \&as 1 ,
.Xr \&ld 1 ,
d169 2
a170 2
.Xr \&pi 1 ,
.Xr \&pc 1 ,
d253 6
a258 3
with the string ``###'' at
the beginning of the error,
and ``%%%'' at the end of the error.
d308 2
a309 1
will not filter out subsequent errors caused by `floodgating'
d314 3
a316 2
(error puts them before).  The alignment of the `\\' marking
the point of error is also disturbed by
@


1.6
log
@- remove trailing white space
- remove arguments from .Os macros
- remove arguments from .Nm macros, where appropriate
- some more Dq/Sq/Ql insanity
- still lots to do in the usr.bin tree... :/
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.5 1998/09/23 04:32:39 aaron Exp $
d53 1
a53 1
.Nm error
d100 1
a100 1
.Nm error
d109 1
a109 1
.Nm error
d124 1
a124 1
.Nm error
d127 1
a127 1
.Nm error
d146 1
a146 1
.Nm error
d160 1
a160 1
.Nm error
d168 1
a168 1
.Nm error
d172 1
a172 1
.Nm error
d178 1
a178 1
.Nm error
d231 1
a231 1
.Nm error
d233 1
a233 1
.Nm error
d257 1
a257 1
.Nm error
d272 1
a272 1
.Nm error
d286 1
a286 1
.Nm error
d300 1
a300 1
.Nm error
@


1.5
log
@usr.bin/ man page repairs, a - e
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.4 1998/08/30 22:45:17 deraadt Exp $
d39 1
a39 1
.Os BSD 4
@


1.4
log
@man page fixes; aaron@@ug.cs.dal.ca
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.3 1997/02/07 10:17:38 deraadt Exp $
d51 1
a51 1
.Op name
d53 1
a53 1
.Nm Error
d91 1
a91 1
.It Fl t
d109 1
a109 1
.Nm Error
d116 2
a117 2
determines the source file and line number to which the error message refers,
determines if the error message is to be ignored or not,
d124 1
a124 1
.Nm Error
d127 1
a127 1
.Nm Error
d146 1
a146 1
.Nm Error
d160 1
a160 1
.Nm Error
d164 1
a164 2
For all languages except
.Em Pascal ,
d167 1
a167 1
one files;
d172 1
a172 1
.Nm Error
d178 1
a178 1
.Nm Error
d191 1
a191 1
.Pa /usr/libdata/lint/llib-port
d233 1
a233 1
.Nm Error
d257 1
a257 1
.Nm Error
a278 1
.Pp
d289 1
a289 1
.Nm Error ,
d300 1
a300 1
.Nm Error
d302 1
a302 1
.Tn CRT Ns 's
@


1.3
log
@typo, msaitoh@@spa.is.uec.ac.jp
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.2 1996/06/26 05:32:41 deraadt Exp $
d194 1
a194 1
to prevent accidently touching these libraries.
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD: error.1,v 1.3 1995/09/02 06:15:20 jtc Exp $
d101 1
a101 1
to touch files ending with ``.c'', ``.y'', ``.foo*'' and ``.y''.
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
