head	1.15;
access;
symbols
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.12
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.8
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.10
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.6
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.4
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.14.0.4
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.2
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.13.0.8
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.6
	OPENBSD_5_0:1.13.0.4
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.10
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.6
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.4
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.2
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.10.0.22
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.20
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.18
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.16
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.14
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.12
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.10
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.8
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.6
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2013.10.27.18.31.24;	author guenther;	state Exp;
branches;
next	1.14;

1.14
date	2012.12.05.23.20.26;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2010.09.01.14.43.34;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2009.10.27.23.59.42;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2007.10.03.14.35.48;	author weingart;	state Exp;
branches;
next	1.10;

1.10
date	2002.07.05.05.39.42;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.06.01.01.40.38;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.16.21.27.51;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.05.09.50.31;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.24.19.19.59;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.24.19.17.47;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.18.22.26.00;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.17.02.23.59;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.38.41;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.02;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.02;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@If a constant string needs a name, use a static const array instead of a
pointer or non-const array, as that minimizes the symbols, maximizes the
placement into read-only memory, and avoids warnings from gcc -Wformat=2
when they're used as format strings.

ok deraadt@@
@
text
@/*	$OpenBSD: rpc_tblout.c,v 1.14 2012/12/05 23:20:26 deraadt Exp $	*/
/*	$NetBSD: rpc_tblout.c,v 1.3 1995/06/24 15:00:15 pk Exp $	*/

/*
 * Copyright (c) 2010, Oracle America, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 *     * Neither the name of the "Oracle America, Inc." nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 *   FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *   COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *   GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 *   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * rpc_tblout.c, Dispatch table outputter for the RPC protocol compiler
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "rpc_parse.h"
#include "rpc_util.h"

#define TABSIZE		8
#define TABCOUNT	5
#define TABSTOP		(TABSIZE*TABCOUNT)

static char tabstr[TABCOUNT+1] = "\t\t\t\t\t";

static const char tbl_hdr[] = "struct rpcgen_table %s_table[] = {\n";
static const char tbl_end[] = "};\n";

static const char null_entry[] = "\n\t(char *(*)())0,\n\
\t(xdrproc_t) xdr_void,\t\t\t0,\n\
\t(xdrproc_t) xdr_void,\t\t\t0,\n";

static const char tbl_nproc[] = "int %s_nproc =\n\tsizeof(%s_table)/sizeof(%s_table[0]);\n\n";

static void write_table(definition *);
static void printit(char *, char *);

void
write_tables()
{
	definition *def;
	list *l;

	fprintf(fout, "\n");
	for (l = defined; l != NULL; l = l->next) {
		def = (definition *) l->val;
		if (def->def_kind == DEF_PROGRAM)
			write_table(def);
	}
}

static void
write_table(def)
	definition *def;
{
	version_list *vp;
	proc_list *proc;
	int current;
	int expected;
	char progvers[100];
	int warning;

	for (vp = def->def.pr.versions; vp != NULL; vp = vp->next) {
		warning = 0;
		snprintf(progvers, sizeof progvers, "%s_%s",
		    locase(def->def_name), vp->vers_num);
		/* print the table header */
		fprintf(fout, tbl_hdr, progvers);

		if (nullproc(vp->procs)) {
			expected = 0;
		} else {
			expected = 1;
			fprintf(fout, null_entry);
		}
		for (proc = vp->procs; proc != NULL; proc = proc->next) {
			current = atoi(proc->proc_num);
			if (current != expected++) {
				fprintf(fout,
				    "\n/*\n * WARNING: table out of order\n */\n");
				if (warning == 0) {
					fprintf(stderr,
					    "WARNING %s table is out of order\n",
					    progvers);
					warning = 1;
					nonfatalerrors = 1;
				}
				expected = current + 1;
			}
			fprintf(fout, "\n\t(char *(*)())RPCGEN_ACTION(");

			/* routine to invoke */
			if (!newstyle)
				pvname_svc(proc->proc_name, vp->vers_num);
			else {
				if (newstyle)
					fprintf(fout, "_");   /* calls internal func */
				pvname(proc->proc_name, vp->vers_num);
			}
			fprintf(fout, "),\n");

			/* argument info */
			if (proc->arg_num > 1)
				printit((char*) NULL, proc->args.argname);
			else
				/* do we have to do something special for newstyle */
				printit(proc->args.decls->decl.prefix,
				    proc->args.decls->decl.type);
			/* result info */
			printit(proc->res_prefix, proc->res_type);
		}

		/* print the table trailer */
		fprintf(fout, tbl_end);
		fprintf(fout, tbl_nproc, progvers, progvers, progvers);
	}
}

static void
printit(prefix, type)
	char *prefix;
	char *type;
{
	int len, tabs;

	len = fprintf(fout, "\txdr_%s,", stringfix(type));
	/* account for leading tab expansion */
	len += TABSIZE - 1;
	/* round up to tabs required */
	tabs = (TABSTOP - len + TABSIZE - 1)/TABSIZE;
	fprintf(fout, "%s", &tabstr[TABCOUNT-tabs]);

	if (streq(type, "void")) {
		fprintf(fout, "0");
	} else {
		fprintf(fout, "sizeof (");
		/* XXX: should "follow" be 1 ??? */
		ptype(prefix, type, 0);
		fprintf(fout, ")");
	}
	fprintf(fout, ",\n");
}
@


1.14
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_tblout.c,v 1.13 2010/09/01 14:43:34 millert Exp $	*/
d50 2
a51 2
static char tbl_hdr[] = "struct rpcgen_table %s_table[] = {\n";
static char tbl_end[] = "};\n";
d53 1
a53 1
static char null_entry[] = "\n\t(char *(*)())0,\n\
d57 1
a57 1
static char tbl_nproc[] = "int %s_nproc =\n\tsizeof(%s_table)/sizeof(%s_table[0]);\n\n";
@


1.13
log
@Oracle has re-licensed sunrpc under a three-clause BSD license.
Update our sources appropriately.  OK deraadt@@ jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_tblout.c,v 1.12 2009/10/27 23:59:42 deraadt Exp $	*/
a37 1
#include <sys/cdefs.h>
@


1.12
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_tblout.c,v 1.11 2007/10/03 14:35:48 weingart Exp $	*/
d3 1
d5 1
a5 7
 * Sun RPC is a product of Sun Microsystems, Inc. and is provided for
 * unrestricted use provided that this legend is included on all tape
 * media and as a part of the software program in whole or part.  Users
 * may copy or modify Sun RPC without charge, but are not authorized
 * to license or distribute it to anyone else except as part of a product or
 * program developed by the user or with the express written consent of
 * Sun Microsystems, Inc.
d7 3
a9 3
 * SUN RPC IS PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND INCLUDING THE
 * WARRANTIES OF DESIGN, MERCHANTIBILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE OR TRADE PRACTICE.
d11 9
a19 3
 * Sun RPC is provided with no support and without any obligation on the
 * part of Sun Microsystems, Inc. to assist in its use, correction,
 * modification or enhancement.
d21 12
a32 11
 * SUN MICROSYSTEMS, INC. SHALL HAVE NO LIABILITY WITH RESPECT TO THE
 * INFRINGEMENT OF COPYRIGHTS, TRADE SECRETS OR ANY PATENTS BY SUN RPC
 * OR ANY PART THEREOF.
 *
 * In no event will Sun Microsystems, Inc. be liable for any lost revenue
 * or profits or other special, indirect and consequential damages, even if
 * Sun has been advised of the possibility of such damages.
 *
 * Sun Microsystems, Inc.
 * 2550 Garcia Avenue
 * Mountain View, California  94043
@


1.11
log
@Some -Wall cleanup to help fix other bugs.
ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_tblout.c,v 1.10 2002/07/05 05:39:42 deraadt Exp $	*/
a31 4

#ifndef lint
static const char sccsid[] = "@@(#)rpc_tblout.c 1.4 89/02/22 (C) 1988 SMI";
#endif
@


1.10
log
@allocation mischecks by cloder@@acm.org; lots of other cleanup by me
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_tblout.c,v 1.9 2002/06/01 01:40:38 deraadt Exp $	*/
d34 1
a34 1
static char sccsid[] = "@@(#)rpc_tblout.c 1.4 89/02/22 (C) 1988 SMI";
@


1.9
log
@cleanups
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_tblout.c,v 1.8 2002/02/16 21:27:51 millert Exp $	*/
d42 1
d153 1
a153 1
 	len = fprintf(fout, "\txdr_%s,", stringfix(type));
@


1.8
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_tblout.c,v 1.7 2001/12/05 09:50:31 deraadt Exp $	*/
d70 1
a70 1
	f_print(fout, "\n");
d91 1
a91 1
		s_print(progvers, "%s_%s",
d94 1
a94 1
		f_print(fout, tbl_hdr, progvers);
d100 1
a100 1
			f_print(fout, null_entry);
d105 1
a105 1
				f_print(fout,
d108 1
a108 1
					f_print(stderr,
d116 1
a116 1
			f_print(fout, "\n\t(char *(*)())RPCGEN_ACTION(");
d123 1
a123 1
					f_print(fout, "_");   /* calls internal func */
d126 1
a126 1
			f_print(fout, "),\n");
d140 2
a141 2
		f_print(fout, tbl_end);
		f_print(fout, tbl_nproc, progvers, progvers, progvers);
d157 1
a157 1
	f_print(fout, "%s", &tabstr[TABCOUNT-tabs]);
d160 1
a160 1
		f_print(fout, "0");
d162 1
a162 1
		f_print(fout, "sizeof (");
d165 1
a165 1
		f_print(fout, ")");
d167 1
a167 1
	f_print(fout, ",\n");
@


1.7
log
@KNF, and remove part of the TLI garbage
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_tblout.c,v 1.5 2001/11/24 19:17:47 deraadt Exp $	*/
d61 2
a62 2
static void write_table __P((definition *));
static void printit __P((char *, char *));
@


1.6
log
@argh!  i messed something up!
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_tblout.c,v 1.4 2001/07/18 22:26:00 deraadt Exp $	*/
d56 2
a57 2
 \t(xdrproc_t) xdr_void,\t\t\t0,\n\
 \t(xdrproc_t) xdr_void,\t\t\t0,\n";
d61 2
a62 2
static write_table __P((definition *));
static printit __P((char *, char *));
d67 1
a68 1
	definition *def;
d73 1
a73 1
		if (def->def_kind == DEF_PROGRAM) {
a74 1
		}
d78 1
a78 1
static
d106 1
a106 1
			"\n/*\n * WARNING: table out of order\n */\n");
d109 1
a109 1
				    "WARNING %s table is out of order\n",
d119 2
a120 2
			if ( !newstyle)
			  pvname_svc(proc->proc_name, vp->vers_num);
d122 3
a124 3
			  if( newstyle )
			    f_print( fout, "_");   /* calls internal func */
			  pvname(proc->proc_name, vp->vers_num);
d129 6
a134 6
			if( proc->arg_num > 1 )
			  printit((char*) NULL, proc->args.argname );
			else  
			  /* do we have to do something special for newstyle */
			  printit( proc->args.decls->decl.prefix,
				  proc->args.decls->decl.type );
d145 1
a145 1
static
d150 1
a150 3
	int len;
	int tabs;

d162 1
a162 1
		f_print(fout, "sizeof ( ");
@


1.5
log
@half finished KNF
@
text
@d56 2
a57 2
\t(xdrproc_t) xdr_void,\t\t\t0,\n\
\t(xdrproc_t) xdr_void,\t\t\t0,\n";
d61 2
a62 2
static void write_table __P((definition *));
static void printit __P((char *, char *));
d67 1
a68 1
	list *l;
d73 1
a73 1
		if (def->def_kind == DEF_PROGRAM)
d75 1
d79 1
a79 1
static void
d107 1
a107 1
				    "\n/*\n * WARNING: table out of order\n */\n");
d110 1
a110 1
					    "WARNING %s table is out of order\n",
d120 2
a121 2
			if (!newstyle)
				pvname_svc(proc->proc_name, vp->vers_num);
d123 3
a125 3
				if (newstyle)
					f_print(fout, "_");   /* calls internal func */
				pvname(proc->proc_name, vp->vers_num);
d130 2
a131 2
			if (proc->arg_num > 1)
				printit((char*) NULL, proc->args.argname);
d133 3
a135 3
				/* do we have to do something special for newstyle */
				printit(proc->args.decls->decl.prefix,
				    proc->args.decls->decl.type);
d146 1
a146 1
static void
d151 3
a153 1
	int len, tabs;
d165 1
a165 1
		f_print(fout, "sizeof (");
@


1.4
log
@Uhmm, nope, this broke everything
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_tblout.c,v 1.2 1996/06/26 05:38:41 deraadt Exp $	*/
d56 2
a57 2
 \t(xdrproc_t) xdr_void,\t\t\t0,\n\
 \t(xdrproc_t) xdr_void,\t\t\t0,\n";
d61 2
a62 2
static write_table __P((definition *));
static printit __P((char *, char *));
d67 1
a68 1
	definition *def;
d73 1
a73 1
		if (def->def_kind == DEF_PROGRAM) {
a74 1
		}
d78 1
a78 1
static
d106 1
a106 1
			"\n/*\n * WARNING: table out of order\n */\n");
d109 1
a109 1
				    "WARNING %s table is out of order\n",
d119 2
a120 2
			if ( !newstyle)
			  pvname_svc(proc->proc_name, vp->vers_num);
d122 3
a124 3
			  if( newstyle )
			    f_print( fout, "_");   /* calls internal func */
			  pvname(proc->proc_name, vp->vers_num);
d129 2
a130 2
			if( proc->arg_num > 1 )
			  printit((char*) NULL, proc->args.argname );
d132 3
a134 3
			  /* do we have to do something special for newstyle */
			  printit( proc->args.decls->decl.prefix,
				  proc->args.decls->decl.type );
d145 1
a145 1
static
d150 1
a150 3
	int len;
	int tabs;

d162 1
a162 1
		f_print(fout, "sizeof ( ");
@


1.3
log
@-Wall cleanup; ok deraadt
@
text
@a41 1
#include <stdlib.h>
a42 1
#include "rpc_scan.h"
d61 2
a62 2
static void write_table __P((definition *));
static void printit __P((char *, char *));
d79 1
a79 1
static void
d146 1
a146 1
static void
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_tblout.c,v 1.3 1995/06/24 15:00:15 pk Exp $	*/
d42 1
d44 1
d63 2
a64 2
static write_table __P((definition *));
static printit __P((char *, char *));
d81 1
a81 1
static
d148 1
a148 1
static
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
