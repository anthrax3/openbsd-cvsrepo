head	1.17;
access;
symbols
	OPENBSD_6_2:1.17.0.2
	OPENBSD_6_2_BASE:1.17
	OPENBSD_6_1:1.17.0.4
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.22
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.14
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.18
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.16
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.12
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.10
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.8
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.6
	OPENBSD_5_0:1.15.0.4
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.2
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.14.0.12
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.8
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.10
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.6
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.4
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.2
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.13.0.18
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.16
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.14
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.12
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.10
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.8
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.6
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.11.0.4
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2017.01.21.08.33.07;	author krw;	state Exp;
branches;
next	1.16;
commitid	l2fu419jw6ah0BY2;

1.16
date	2015.08.20.22.32.41;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	0Dp7Dy9FuNZesYo2;

1.15
date	2010.09.01.14.43.34;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2007.10.03.15.12.13;	author weingart;	state Exp;
branches;
next	1.13;

1.13
date	2003.07.09.03.35.21;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.25.21.09.26;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2002.07.05.05.39.42;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.01.01.40.38;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.16.21.27.51;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.12.05.09.50.31;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.24.19.19.59;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.24.19.17.47;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.18.22.26.00;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.17.02.23.59;	author pvalchev;	state Exp;
branches;
next	1.3;

1.3
date	97.10.11.21.10.42;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.38.42;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.02;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.02;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Nuke whitespace foolish enough to expose itself during the great
"warning:" rectification.
@
text
@/*	$OpenBSD: rpc_util.h,v 1.16 2015/08/20 22:32:41 deraadt Exp $	*/
/*	$NetBSD: rpc_util.h,v 1.3 1995/06/11 21:50:10 pk Exp $	*/

/*
 * Copyright (c) 2010, Oracle America, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 *     * Neither the name of the "Oracle America, Inc." nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 *   FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *   COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *   GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 *   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*      @@(#)rpc_util.h  1.5  90/08/29  (C) 1987 SMI   */

/*
 * rpc_util.h, Useful definitions for the RPC protocol compiler
 */

struct list {
	definition *val;
	struct list *next;
};
typedef struct list list;

#define PUT 1
#define GET 2

/*
 * Global variables
 */
#define MAXLINESIZE 1024
extern char curline[MAXLINESIZE];
extern char *where;
extern int linenum;

extern char *infilename;
extern FILE *fout;
extern FILE *fin;

extern list *defined;


extern bas_type *typ_list_h;
extern bas_type *typ_list_t;

/*
 * All the option flags
 */
extern int inetdflag;
extern int pmflag;
extern int tblflag;
extern int logflag;
extern int newstyle;
extern int Cflag;     /* C++ flag */
extern int tirpcflag; /* flag for generating tirpc code */
extern int doinline; /* if this is 0, then do not generate inline code */
extern int callerflag;

/*
 * Other flags related with inetd jumpstart.
 */
extern int indefinitewait;
extern int exitnow;
extern int timerflag;

extern int nonfatalerrors;

/*
 * rpc_util routines
 */
void storeval(list **, definition *);

#define STOREVAL(list,item)	\
	storeval(list,item)

definition *findval(list *, char *, int (*)(definition *, char *));

#define FINDVAL(list,item,finder) \
	findval(list, item, finder)

void crash(void);
char *fixtype(char *);
char *stringfix(char *);
char *locase(char *);
void pvname_svc(char *, char *);
void pvname(char *, char *);
void ptype(char *, char *, int);
int isvectordef(char *, relation);
int streq(char *, char *);
void error(char *);
void tabify(FILE *, int);
void record_open(char *);
bas_type *find_type(char *);
char *make_argname(char *, char *);
/*
 * rpc_cout routines
 */
void emit(definition *);

/*
 * rpc_hout routines
 */
void print_datadef(definition *);
void print_funcdef(definition *);

/*
 * rpc_svcout routines
 */
void write_most(char *, int, int);
void write_rest(void);
void write_programs(char *);
void write_svc_aux(int);
void write_inetd_register(char *);
void write_netid_register(char *);
void write_nettype_register(char *);
int nullproc(proc_list *);

/*
 * rpc_clntout routines
 */
void write_stubs(void);
void printarglist(proc_list *, char *, char *);


/*
 * rpc_tblout routines
 */
void write_tables(void);

/*
 * rpc_sample routines
 */
void write_sample_svc(definition *);
int write_sample_clnt(definition *);
void write_sample_clnt_main(void);

void add_type(int len, char *type);

void pdeclaration(char *, declaration *, int, char *);
void add_sample_msg(void);
@


1.16
log
@Do not cast result of malloc/calloc/realloc* if stdlib.h is in scope
ok krw millert
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_util.h,v 1.15 2010/09/01 14:43:34 millert Exp $	*/
d38 1
a38 1
 * rpc_util.h, Useful definitions for the RPC protocol compiler 
d51 1
a51 1
 * Global variables 
d91 1
a91 1
 * rpc_util routines 
d118 1
a118 1
 * rpc_cout routines 
d123 1
a123 1
 * rpc_hout routines 
d129 1
a129 1
 * rpc_svcout routines 
@


1.15
log
@Oracle has re-licensed sunrpc under a three-clause BSD license.
Update our sources appropriately.  OK deraadt@@ jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_util.h,v 1.14 2007/10/03 15:12:13 weingart Exp $	*/
a39 3

#define alloc(size)		(void *)malloc((unsigned)(size))
#define ALLOC(object)   (object *) malloc(sizeof(object))
@


1.14
log
@nullproc() is used in more than one file.

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_util.h,v 1.13 2003/07/09 03:35:21 deraadt Exp $	*/
d3 1
d5 1
a5 7
 * Sun RPC is a product of Sun Microsystems, Inc. and is provided for
 * unrestricted use provided that this legend is included on all tape
 * media and as a part of the software program in whole or part.  Users
 * may copy or modify Sun RPC without charge, but are not authorized
 * to license or distribute it to anyone else except as part of a product or
 * program developed by the user or with the express written consent of
 * Sun Microsystems, Inc.
d7 3
a9 3
 * SUN RPC IS PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND INCLUDING THE
 * WARRANTIES OF DESIGN, MERCHANTIBILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE OR TRADE PRACTICE.
d11 9
a19 3
 * Sun RPC is provided with no support and without any obligation on the
 * part of Sun Microsystems, Inc. to assist in its use, correction,
 * modification or enhancement.
d21 12
a32 11
 * SUN MICROSYSTEMS, INC. SHALL HAVE NO LIABILITY WITH RESPECT TO THE
 * INFRINGEMENT OF COPYRIGHTS, TRADE SECRETS OR ANY PATENTS BY SUN RPC
 * OR ANY PART THEREOF.
 *
 * In no event will Sun Microsystems, Inc. be liable for any lost revenue
 * or profits or other special, indirect and consequential damages, even if
 * Sun has been advised of the possibility of such damages.
 *
 * Sun Microsystems, Inc.
 * 2550 Garcia Avenue
 * Mountain View, California  94043
@


1.13
log
@protos
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_util.h,v 1.12 2003/06/25 21:09:26 deraadt Exp $	*/
d139 2
@


1.12
log
@protos
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_util.h,v 1.11 2002/07/05 05:39:42 deraadt Exp $	*/
d73 1
a73 1
extern int pmflag;   
d160 2
@


1.11
log
@allocation mischecks by cloder@@acm.org; lots of other cleanup by me
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_util.h,v 1.10 2002/06/01 01:40:38 deraadt Exp $	*/
d94 1
a94 1
void storeval();
d99 1
a99 1
definition *findval();
@


1.10
log
@cleanups
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_util.h,v 1.9 2002/02/16 21:27:51 millert Exp $	*/
d157 3
@


1.9
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_util.h,v 1.8 2001/12/05 09:50:31 deraadt Exp $	*/
a40 3

#define s_print	(void) sprintf
#define f_print (void) fprintf
@


1.8
log
@KNF, and remove part of the TLI garbage
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_util.h,v 1.6 2001/11/24 19:17:47 deraadt Exp $	*/
d107 14
a120 14
void crash __P((void));
char *fixtype __P((char *));
char *stringfix __P((char *));
char *locase __P((char *));
void pvname_svc __P((char *, char *));
void pvname __P((char *, char *));
void ptype __P((char *, char *, int));
int isvectordef __P((char *, relation));
int streq __P((char *, char *));
void error __P((char *));
void tabify __P((FILE *, int));
void record_open __P((char *));
bas_type *find_type __P((char *));
char *make_argname __P((char *, char *));
d124 1
a124 1
void emit __P((definition *));
d129 2
a130 2
void print_datadef __P((definition *));
void print_funcdef __P((definition *));
d135 7
a141 7
void write_most __P((char *, int, int));
void write_rest __P((void));
void write_programs __P((char *));
void write_svc_aux __P((int));
void write_inetd_register __P((char *));
void write_netid_register __P((char *));
void write_nettype_register __P((char *));
d145 2
a146 2
void write_stubs __P((void));
void printarglist __P((proc_list *, char *, char *));
d152 1
a152 1
void write_tables __P((void));
d157 3
a159 3
void write_sample_svc __P((definition *));
int write_sample_clnt __P((definition *));
void write_sample_clnt_main __P((void));
@


1.7
log
@argh!  i messed something up!
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_util.h,v 1.5 2001/07/18 22:26:00 deraadt Exp $	*/
d107 1
@


1.6
log
@half finished KNF
@
text
@a106 1
void crash __P((void));
@


1.5
log
@Uhmm, nope, this broke everything
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_util.h,v 1.3 1997/10/11 21:10:42 deraadt Exp $	*/
d107 1
@


1.4
log
@-Wall cleanup; ok deraadt
@
text
@a106 1
void reinitialize __P((void));
a115 1
void crash __P((void));
a119 1
void add_type __P((int, char *));
a123 3
void emit_inline __P((declaration *, int));
void emit_single_in_line __P((declaration *, int, relation));
char *upcase __P((char *));
a129 3
void pxdrfuncdecl __P((char *, int));
void pprocdef __P((proc_list *, version_list *, char *, int, int));
void pdeclaration __P((char *, declaration *, int, char *));
a136 1
int nullproc __P((proc_list *));
a137 1
void write_msg_out __P((void));
a157 1
void add_sample_msg __P((void));
@


1.3
log
@s/inline/doinline/; christos
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_util.h,v 1.2 1996/06/26 05:38:42 deraadt Exp $	*/
d107 1
d117 1
d122 1
d127 3
d136 3
d146 1
d148 1
d169 1
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: rpc_util.h,v 1.3 1995/06/11 21:50:10 pk Exp $	*/
d82 1
a82 1
extern int inline; /* if this is 0, then do not generate inline code */
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
