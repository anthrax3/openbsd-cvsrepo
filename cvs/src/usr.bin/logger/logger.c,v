head	1.17;
access;
symbols
	OPENBSD_6_1:1.17.0.4
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.2
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.14.0.4
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.6
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.4
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.11.0.16
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.14
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.12
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.10
	OPENBSD_5_0:1.11.0.8
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.6
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.4
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.12
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.8
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.6
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.4
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.3.0.20
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2016.03.28.18.18.52;	author chl;	state Exp;
branches;
next	1.16;
commitid	qpqe6XaYrHJj5YFn;

1.16
date	2015.10.09.01.37.08;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	sbrB3Q5CNxcwZpfU;

1.15
date	2015.10.05.23.59.11;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	393pRZq2mwG40r2n;

1.14
date	2015.04.18.18.28.37;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	6b2lLILbgCR1fvia;

1.13
date	2013.11.27.13.32.02;	author okan;	state Exp;
branches;
next	1.12;

1.12
date	2013.11.26.13.19.07;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2009.10.27.23.59.40;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2007.04.09.13.54.12;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2007.03.15.23.09.51;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.15.03.08.34;	author dhill;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.10.22.20.47;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.03.02.56.10;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.16.21.27.48;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.19.19.02.15;	author mpech;	state Exp;
branches;
next	1.3;

1.3
date	97.01.15.23.42.45;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.35.58;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.33;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.33;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@remove unused variable

ok millert@@
@
text
@/*	$OpenBSD: logger.c,v 1.16 2015/10/09 01:37:08 deraadt Exp $	*/
/*	$NetBSD: logger.c,v 1.4 1994/12/22 06:27:00 jtc Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <errno.h>
#include <unistd.h>
#include <limits.h>
#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <err.h>

#define	SYSLOG_NAMES
#include <syslog.h>

int	decode(char *, CODE *);
int	pencode(char *);
void	usage(void);

/*
 * logger -- read and log utility
 *
 *	Reads from an input and arranges to write the result on the system
 *	log.
 */
int
main(int argc, char *argv[])
{
	int ch, logflags, pri;
	char *tag, buf[1024];

	tag = NULL;
	pri = LOG_NOTICE;
	logflags = 0;
	while ((ch = getopt(argc, argv, "f:ip:st:")) != -1)
		switch(ch) {
		case 'f':		/* file to log */
			if (freopen(optarg, "r", stdin) == NULL) {
				(void)fprintf(stderr, "logger: %s: %s.\n",
				    optarg, strerror(errno));
				exit(1);
			}
			break;
		case 'i':		/* log process id also */
			logflags |= LOG_PID;
			break;
		case 'p':		/* priority */
			pri = pencode(optarg);
			break;
		case 's':		/* log to standard error */
			logflags |= LOG_PERROR;
			break;
		case 't':		/* tag */
			tag = optarg;
			break;
		case '?':
		default:
			usage();
		}
	argc -= optind;
	argv += optind;

	/* setup for logging */
	openlog(tag ? tag : getlogin(), logflags, 0);
	(void) fclose(stdout);

	if (pledge("stdio", NULL) == -1)
		err(1, "pledge");

	/* log input line if appropriate */
	if (argc > 0) {
		char *p, *endp;
		size_t len;

		for (p = buf, endp = buf + sizeof(buf) - 2; *argv;) {
			len = strlen(*argv);
			if (p + len > endp && p > buf) {
				syslog(pri, "%s", buf);
				p = buf;
			}
			if (len > sizeof(buf) - 1)
				syslog(pri, "%s", *argv++);
			else {
				if (p != buf)
					*p++ = ' ';
				bcopy(*argv++, p, len);
				*(p += len) = '\0';
			}
		}
		if (p != buf)
			syslog(pri, "%s", buf);
	} else
		while (fgets(buf, sizeof(buf), stdin) != NULL)
			syslog(pri, "%s", buf);
	exit(0);
}

/*
 *  Decode a symbolic name to a numeric value
 */
int
pencode(char *s)
{
	char *save;
	int fac, lev;

	for (save = s; *s && *s != '.'; ++s);
	if (*s) {
		*s = '\0';
		fac = decode(save, facilitynames);
		if (fac < 0) {
			(void)fprintf(stderr,
			    "logger: unknown facility name: %s.\n", save);
			exit(1);
		}
		*s++ = '.';
	}
	else {
		fac = 0;
		s = save;
	}
	lev = decode(s, prioritynames);
	if (lev < 0) {
		(void)fprintf(stderr,
		    "logger: unknown priority name: %s.\n", save);
		exit(1);
	}
	return ((lev & LOG_PRIMASK) | (fac & LOG_FACMASK));
}

int
decode(char *name, CODE *codetab)
{
	CODE *c;

	if (isdigit((unsigned char)*name)) {
		const char *errstr;
		int n = strtonum(name, 0, INT_MAX, &errstr);
		if (!errstr)
			return (n);
	}

	for (c = codetab; c->c_name; c++)
		if (!strcasecmp(name, c->c_name))
			return (c->c_val);

	return (-1);
}

void
usage(void)
{
	(void)fprintf(stderr,
	    "usage: logger [-is] [-f file] [-p pri] [-t tag] [message ...]\n");
	exit(1);
}
@


1.16
log
@Change all tame callers to namechange to pledge(2).
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.15 2015/10/05 23:59:11 deraadt Exp $	*/
a162 1
	int n;
@


1.15
log
@During getopt(), an optional file may be opened.  After that, tame "stdio"
works.

Time for some commentary!  tame became possible because syslog(3) in
openbsd uses a system call -- sendsyslog(2) -- which does not require
an elaborate dance opening an AF_UNIX socket and using connect() or
send() to deliver to a "/dev/log" unix socket in the filesystem.
sendsyslog(2) was invented to ensure the stack-protector's
__stack_smash_handler() can gaurantee delivery of failure messages to
syslogd(8) in harsh conditions -- such as file descriptor exhaustion
or inside chroot(2).  Now it also works in tame(2)'d proceses, since
sendsyslog(2) is always allowed.  Our syslog(3) needs no elaborate
socket code, therefore piles of software does not have an inate need
for socket(2), connect(2), send(2), nor access to the filesystem.
syslog(3) remains fully compatible otherwise.

How does the stack protector report an error in fully capsicum'd
program?  Or in some other Linux protection mechanism, if someone
protectes a program too far and takes sockets away, how do they see
the stack protector working?

You can have nice things when the underlying rules change.
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.14 2015/04/18 18:28:37 deraadt Exp $	*/
d96 2
a97 2
	if (tame("stdio", NULL) == -1)
		err(1, "tame");
@


1.14
log
@Convert many atoi() calls to strtonum(), adding range checks and failure
handling along the way.
Reviews by Brendan MacDonell, Jeremy Devenport, florian, doug, millert
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.13 2013/11/27 13:32:02 okan Exp $	*/
d40 1
d95 3
@


1.13
log
@remove erroneous char cast to switch expression processing getopt(3);
not used in any cases.

ok deraadt@@, guenther@@, millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.12 2013/11/26 13:19:07 deraadt Exp $	*/
d35 1
d159 1
d162 6
a167 2
	if (isdigit((unsigned char)*name))
		return (atoi(name));
@


1.12
log
@unsigned char casts for ctype
ok krw
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.11 2009/10/27 23:59:40 deraadt Exp $	*/
d63 1
a63 1
		switch((char)ch) {
@


1.11
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.10 2007/04/09 13:54:12 jmc Exp $	*/
d160 1
a160 1
	if (isdigit(*name))
@


1.10
log
@spacing tweak in usage(); from Igor Sobrado
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.9 2007/03/15 23:09:51 jmc Exp $	*/
a31 13

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1983, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)logger.c	8.1 (Berkeley) 6/6/93";
#endif
static char rcsid[] = "$OpenBSD: logger.c,v 1.9 2007/03/15 23:09:51 jmc Exp $";
#endif /* not lint */
@


1.9
log
@simplify synopsis/usage() and sort options;
from Igor Sobrado
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.8 2006/03/15 03:08:34 dhill Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: logger.c,v 1.8 2006/03/15 03:08:34 dhill Exp $";
d187 1
a187 1
	    "usage: logger [-is] [-f file] [-p pri] [-t tag] [message ... ]\n");
@


1.8
log
@Both strlen and sizeof return a size_t.  This also fixes a signed/unsigned
comparison.

ok ray@@ moritz@@
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.7 2003/06/10 22:20:47 deraadt Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: logger.c,v 1.7 2003/06/10 22:20:47 deraadt Exp $";
d187 1
a187 1
	    "logger: [-is] [-f file] [-p pri] [-t tag] [ message ... ]\n");
@


1.7
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.6 2003/06/03 02:56:10 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: logger.c,v 1.6 2003/06/03 02:56:10 millert Exp $";
d110 1
a110 1
		int len;
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.5 2002/02/16 21:27:48 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: logger.c,v 1.5 2002/02/16 21:27:48 millert Exp $";
d67 1
a67 3
main(argc, argv)
	int argc;
	char *argv[];
d139 1
a139 2
pencode(s)
	char *s;
d169 1
a169 3
decode(name, codetab)
	char *name;
	CODE *codetab;
d184 1
a184 1
usage()
@


1.5
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.4 2001/11/19 19:02:15 mpech Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d43 1
a43 1
static char rcsid[] = "$OpenBSD: logger.c,v 1.4 2001/11/19 19:02:15 mpech Exp $";
@


1.4
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.3 1997/01/15 23:42:45 millert Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: logger.c,v 1.3 1997/01/15 23:42:45 millert Exp $";
d60 3
a62 3
int	decode __P((char *, CODE *));
int	pencode __P((char *));
void	usage __P((void));
@


1.3
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.2 1996/06/26 05:35:58 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: logger.c,v 1.2 1996/06/26 05:35:58 deraadt Exp $";
d115 1
a115 1
		register char *p, *endp;
d146 1
a146 1
	register char *s;
d180 1
a180 1
	register CODE *c;
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: logger.c,v 1.4 1994/12/22 06:27:00 jtc Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: logger.c,v 1.4 1994/12/22 06:27:00 jtc Exp $";
d81 1
a81 1
	while ((ch = getopt(argc, argv, "f:ip:st:")) != EOF)
@


1.1
log
@Initial revision
@
text
@d1 1
d47 1
a47 1
static char rcsid[] = "$NetBSD: logger.c,v 1.4 1994/12/22 06:27:00 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
