head	1.10;
access;
symbols
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.14
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.10
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.6
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.8
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.4
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.8.0.28
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.24
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.22
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.20
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.18
	OPENBSD_5_0:1.8.0.16
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.14
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.12
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.8
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.10
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.6
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.4
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.2
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.7.0.26
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.24
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.22
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.20
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.18
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.16
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.14
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.12
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.10
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.8
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.6
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.4
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.4
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.10
date	2014.07.16.20.06.27;	author okan;	state Exp;
branches;
next	1.9;
commitid	EH3G9Uvsm0Q07c0P;

1.9
date	2014.07.02.00.12.34;	author dlg;	state Exp;
branches;
next	1.8;
commitid	zNbAzxmEBZMksTSx;

1.8
date	2007.12.15.03.43.41;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.27.06.16.50;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2000.09.03.18.41.20;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	99.06.23.18.48.12;	author art;	state Exp;
branches;
next	1.4;

1.4
date	97.09.21.11.51.52;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.05.22.11.35.41;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.03.02.51.20;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.50;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.50;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.10
log
@zap trailing newlines; "go for it" deraadt
@
text
@#	$OpenBSD: Makefile,v 1.9 2014/07/02 00:12:34 dlg Exp $

PROG=	vmstat

CPPFLAGS+= -D_LIBKVM
SRCS=	dkstats.c vmstat.c
MAN=	vmstat.8
DPADD=	${LIBKVM}
LDADD=	-lkvm

.include <bsd.prog.mk>
@


1.9
log
@info about pools is currently given to userland by copying each
pools struct out. however, struct pool in the kernel contains lots
of things that userland probably isnt interested in, like actual
mutexes, and probably shouldnt get easy access to, like pointers
to kernel memory via all the lists/trees.

this implements a kinfo_pool structure that has only the data that
userland needs to know about. it cuts the sysctl code over to
building it from struct pool as required and copying that out
instead, and cuts userland over to only handling kinfo_pool.

the only problem with this is vmstat, which can read kernel images
via kvm, which needs some understanding of struct pool. to cope,
the struct pool definition is guarded by if defined(_KERNEL) ||
defined(_LIBKVM) as inspired by sysctl which needs to do the same
thing sometimes. struct pool itself is generally not visible to
userland though, which is good.

matthew@@ suggested struct kinfo_pool instead of struct pool_info.
the kinfo prefix has precedent.
lots of people liked this.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2007/12/15 03:43:41 deraadt Exp $
a11 1

@


1.8
log
@change over last few bits to use sysctl(3) if possible, and make this
not setgid kmem (hurray!)
ok tedu, tested jsg
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2001/06/27 06:16:50 art Exp $
d5 1
@


1.7
log
@UVM is no longer an option
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2000/09/03 18:41:20 espie Exp $
a8 2
BINGRP=	kmem
BINMODE=2555
@


1.6
log
@Boring...  Add :L modifier to all tweakable variables tests.

Closes PR 1246
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1999/06/23 18:48:12 art Exp $
a13 3
.if (${UVM:L} == "yes")
CFLAGS+=-DUVM
.endif
@


1.5
log
@make it work with UVM. XXX - not done yet.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1997/09/21 11:51:52 deraadt Exp $
d14 1
a14 1
.if (${UVM} == "yes")
@


1.4
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1996/05/22 11:35:41 deraadt Exp $
d13 4
@


1.3
log
@libutil
@
text
@d1 1
a1 3
#	$OpenBSD$
#	$NetBSD: Makefile,v 1.15 1996/05/10 23:19:25 thorpej Exp $
#	@@(#)Makefile	8.1 (Berkeley) 6/6/93
@


1.2
log
@Working disk statistics; NetBSD PR 2160
@
text
@d2 1
a2 1
#	$NetBSD: Makefile,v 1.14 1995/05/07 22:15:57 cgd Exp $
a5 3
.if (${MACHINE_ARCH} == "m68k")
CFLAGS+=-D${MACHINE}
.endif
a6 1
CFLAGS+=-I${.CURDIR}/../../sys/arch
@


1.1
log
@Initial revision
@
text
@d1 1
d9 1
d11 1
d13 2
a16 2
DPADD=	names.c ${LIBKVM}
LDADD=	-lkvm
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
