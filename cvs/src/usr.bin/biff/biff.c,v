head	1.15;
access;
symbols
	OPENBSD_6_2:1.15.0.4
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.6
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.2
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.11.0.26
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.18
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.22
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.20
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.16
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.14
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.12
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.10
	OPENBSD_5_0:1.11.0.8
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.6
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.4
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.14
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.10
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.8
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.6
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.4
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.2
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.9.0.14
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.12
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.10
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.6
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.4
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2016.07.07.09.26.25;	author semarie;	state Exp;
branches;
next	1.14;
commitid	DbA6uRBlp6EdWuFA;

1.14
date	2015.12.29.19.04.46;	author gsoares;	state Exp;
branches;
next	1.13;
commitid	k2UzU75zoPNqkN7K;

1.13
date	2015.10.12.20.03.24;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	jQhjRTEnBfKeCTAG;

1.12
date	2015.10.12.05.59.43;	author deraadt;	state Exp;
branches;
next	1.11;
commitid	ZTZ6sjWmBXKmpbH4;

1.11
date	2009.10.27.23.59.36;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2007.02.20.13.41.19;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.10.22.20.45;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.03.02.56.06;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.27.44;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.30.16.00.11;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.12.07.20.10.09;	author deraadt;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	98.07.22.09.25.28;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.01.15.23.42.14;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.31.41;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.44.56;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.44.56;	author deraadt;	state Exp;
branches;
next	;

1.5.6.1
date	2000.10.06.21.16.11;	author jason;	state Exp;
branches;
next	;


desc
@@


1.15
log
@biff, mesg, vi: only consider ACCESSPERMS for setting tty mode.

it explicitly removes any S_ISUID|S_ISGID|S_ISTXT bits, instead of letting
pledge(2) silenciously remove them.

ok beck@@ deraadt@@
@
text
@/*	$OpenBSD: biff.c,v 1.14 2015/12/29 19:04:46 gsoares Exp $	*/
/*	$NetBSD: biff.c,v 1.3 1995/03/26 02:34:22 glass Exp $	*/

/*
 * Copyright (c) 1980, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/stat.h>

#include <err.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

static void usage(void);

int
main(int argc, char *argv[])
{
	struct stat sb;
	int ch;
	char *name;

	if (pledge("stdio rpath fattr", NULL) == -1)
		err(2, "pledge");

	while ((ch = getopt(argc, argv, "")) != -1)
		switch(ch) {
		case '?':
		default:
			usage();
		}
	argc -= optind;
	argv += optind;

	if ((name = ttyname(STDERR_FILENO)) == NULL)
		err(2, "tty");

	if (stat(name, &sb))
		err(2, "stat");

	sb.st_mode &= ACCESSPERMS;

	if (*argv == NULL) {
		(void)printf("is %s\n", sb.st_mode & S_IXUSR ? "y" : "n");
		exit(sb.st_mode & S_IXUSR ? 0 : 1);
	}

	switch(argv[0][0]) {
	case 'n':
		if (chmod(name, sb.st_mode & ~S_IXUSR) < 0)
			err(2, "%s", name);
		break;
	case 'y':
		if (chmod(name, sb.st_mode | S_IXUSR) < 0)
			err(2, "%s", name);
		break;
	default:
		usage();
	}
	exit(sb.st_mode & S_IXUSR ? 0 : 1);
}

static void
usage(void)
{
	(void)fprintf(stderr, "usage: biff [n | y]\n");
	exit(2);
}
@


1.14
log
@fix exit status on pledge(2) failure.

OK tb@@ jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.13 2015/10/12 20:03:24 deraadt Exp $	*/
d69 2
@


1.13
log
@these callers of ttyname() no longer need to pledge "tty"
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.12 2015/10/12 05:59:43 deraadt Exp $	*/
d53 1
a53 1
		err(1, "pledge");
@


1.12
log
@biff pledges to only do "stdio rpath fattr tty".  (very small program..
the actual order of use is tty, rpath, stdio or fattr)
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.11 2009/10/27 23:59:36 deraadt Exp $	*/
d52 1
a52 1
	if (pledge("stdio rpath fattr tty", NULL) == -1)
@


1.11
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.10 2007/02/20 13:41:19 jmc Exp $	*/
d52 2
@


1.10
log
@sort options; from Igor Sobrado
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.9 2003/06/10 22:20:45 deraadt Exp $	*/
a31 14

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1980, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)biff.c	8.1 (Berkeley) 6/6/93";
#else
static char rcsid[] = "$OpenBSD: biff.c,v 1.9 2003/06/10 22:20:45 deraadt Exp $";
#endif
#endif /* not lint */
@


1.9
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.8 2003/06/03 02:56:06 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: biff.c,v 1.8 2003/06/03 02:56:06 millert Exp $";
d105 1
a105 1
	(void)fprintf(stderr, "usage: biff [y | n]\n");
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.7 2002/02/16 21:27:44 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: biff.c,v 1.7 2002/02/16 21:27:44 millert Exp $";
d60 1
a60 3
main(argc, argv)
	int argc;
	char *argv[];
d103 1
a103 1
usage()
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.6 2000/06/30 16:00:11 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d43 1
a43 1
static char rcsid[] = "$OpenBSD: biff.c,v 1.6 2000/06/30 16:00:11 millert Exp $";
@


1.6
log
@warnx?/errx? paranoia (use "%s" not a bare string unless it is a
constant).  These are not security holes but it is worth fixing
them anyway both for robustness and so folks looking for examples
in the tree are not misled into doing something potentially dangerous.
Furthermore, it is a bad idea to assume that pathnames will not
include '%' in them and that error routines don't return strings
with '%' in them (especially in light of the possibility of locales).
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.5 1998/12/07 20:10:09 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: biff.c,v 1.5 1998/12/07 20:10:09 deraadt Exp $";
d61 1
a61 1
static void usage __P((void));
@


1.5
log
@Wall
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.4 1998/07/22 09:25:28 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: biff.c,v 1.4 1998/07/22 09:25:28 deraadt Exp $";
d96 1
a96 1
			err(2, name);
d100 1
a100 1
			err(2, name);
@


1.5.6.1
log
@Pull in patch from current (even more to come):
Fix (millert):
warnx?/errx? paranoia (use "%s" not a bare string unless it is a
constant).  These are not security holes but it is worth fixing
them anyway both for robustness and so folks looking for examples
in the tree are not misled into doing something potentially dangerous.
Furthermore, it is a bad idea to assume that pathnames will not
include '%' in them and that error routines don't return strings
with '%' in them (especially in light of the possibility of locales).
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.6 2000/06/30 16:00:11 millert Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: biff.c,v 1.6 2000/06/30 16:00:11 millert Exp $";
d96 1
a96 1
			err(2, "%s", name);
d100 1
a100 1
			err(2, "%s", name);
@


1.4
log
@use S_IXUSR instead of 0100; noted by form
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.3 1997/01/15 23:42:14 millert Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: biff.c,v 1.3 1997/01/15 23:42:14 millert Exp $";
d63 1
@


1.3
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.2 1996/06/26 05:31:41 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: biff.c,v 1.2 1996/06/26 05:31:41 deraadt Exp $";
d88 2
a89 2
		(void)printf("is %s\n", sb.st_mode&0100 ? "y" : "n");
		exit(sb.st_mode & 0100 ? 0 : 1);
d94 1
a94 1
		if (chmod(name, sb.st_mode & ~0100) < 0)
d98 1
a98 1
		if (chmod(name, sb.st_mode | 0100) < 0)
d104 1
a104 1
	exit(sb.st_mode & 0100 ? 0 : 1);
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: biff.c,v 1.3 1995/03/26 02:34:22 glass Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: biff.c,v 1.3 1995/03/26 02:34:22 glass Exp $";
d72 1
a72 1
	while ((ch = getopt(argc, argv, "")) != EOF)
@


1.1
log
@Initial revision
@
text
@d1 1
d47 1
a47 1
static char rcsid[] = "$NetBSD: biff.c,v 1.3 1995/03/26 02:34:22 glass Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
