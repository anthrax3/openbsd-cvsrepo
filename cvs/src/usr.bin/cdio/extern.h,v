head	1.15;
access;
symbols
	OPENBSD_6_1:1.15.0.30
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.28
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.24
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.26
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.18
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.22
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.20
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.16
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.14
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.12
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.10
	OPENBSD_5_0:1.15.0.8
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.6
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.14.0.6
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.2
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.12.0.2
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.8.0.8
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.6
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.2.0.16
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.14
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.12
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.10
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2;
locks; strict;
comment	@ * @;


1.15
date	2010.03.01.02.09.44;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2008.08.30.10.41.38;	author fgsch;	state Exp;
branches;
next	1.13;

1.13
date	2008.08.13.12.21.19;	author av;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.30.23.35.39;	author av;	state Exp;
branches;
next	1.11;

1.11
date	2008.06.22.21.04.01;	author av;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.08.21.01.24;	author av;	state Exp;
branches;
next	1.9;

1.9
date	2008.04.30.17.10.55;	author fgsch;	state Exp;
branches;
next	1.8;

1.8
date	2006.08.26.14.10.21;	author krw;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.26.03.48.50;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2006.06.15.23.49.58;	author mjc;	state Exp;
branches;
next	1.5;

1.5
date	2006.06.01.07.12.18;	author mjc;	state Exp;
branches;
next	1.4;

1.4
date	2006.06.01.06.32.17;	author mjc;	state Exp;
branches;
next	1.3;

1.3
date	2006.05.31.01.14.41;	author mjc;	state Exp;
branches;
next	1.2;

1.2
date	2002.04.18.22.17.04;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2002.04.18.20.18.31;	author espie;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Add printing of current profile and feature information to 'info'
command with -v. Make a second -v cause printing of raw feature
data and a full list of profiles. A few minor tweaks to the feature
bitmap handling. Helps in debugging media problems in cdio.

Suggestions from fgsch@@, man page fixes from jmc@@ as usual.

ok beck@@ deraadt@@
@
text
@/* $OpenBSD: extern.h,v 1.14 2008/08/30 10:41:38 fgsch Exp $ */
/*
 * Copyright (c) 2002 Marc Espie.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE OPENBSD PROJECT AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENBSD
 * PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/queue.h>

struct cd_toc_entry;
struct track_info {
	off_t sz;
	off_t off;
	u_int blklen;
	int   fd;
	char *file;
	SLIST_ENTRY(track_info) track_list;
	char type;
	int   speed; 
};
SLIST_HEAD(track_head, track_info) tracks;

/* Read/Write speed */
#define DRIVE_SPEED_MAX		0xfffe
#define DRIVE_SPEED_OPTIMAL	0xffff	/* automatically adjusted by drive */

/* Convert writing speed into Kbytes/sec (1x - 75 frames per second) */
#define CD_SPEED_TO_KBPS(x, blksz)	((x) * 75 * (blksz) / 1024)

/*
 * It's maximum possible speed for CD (audio track).
 * Data tracks theoretically can be written at 436x but in practice I
 * believe, 380x will be never reached.
 * NOTE: this value must never be changed to a bigger value, it can cause
 * DRIVE_SPEED_MAX overrun.
 */
#define CD_MAX_SPEED		380

/* MMC feature codes */
#define MMC_FEATURE_CDRW_CAV	0x27	/* Constant Angular Velocity */
#define MMC_FEATURE_CD_TAO	0x2d	/* Track-At-Once writing mode */
#define MMC_FEATURE_CDRW_WRITE	0x37	/* media is CD-RW and can be written */

#define MMC_FEATURE_MAX		0x0110

/* Media types */
#define MEDIATYPE_UNKNOWN	0
#define MEDIATYPE_CDR		1
#define MEDIATYPE_CDRW		2

extern unsigned long 	entry2time(struct cd_toc_entry *);
extern unsigned long 	entry2frames(struct cd_toc_entry *);
extern int              open_cd(char *, int);
extern char ** 		cddb(const char *, int, struct cd_toc_entry *, char *);
extern unsigned long 	cddb_discid(int, struct cd_toc_entry *);
extern void		free_names(char **);
extern int		get_media_type(void);
extern int		get_media_capabilities(u_int8_t *, int);
extern int		blank(void);
extern int		unit_ready(void);
extern int		synchronize_cache(void);
extern int		close_session(void);
extern int		get_disc_size(off_t *);
extern int		get_nwa(int *);
extern int		writetao(struct track_head *);
extern int		writetrack(struct track_info *, int);
extern int		mode_sense_write(unsigned char []);
extern int		mode_select_write(unsigned char []);
extern int		cdrip(char *);
extern int		cdplay(char *);

#define VERSION "2.1"
#define WAVHDRLEN 44
@


1.14
log
@use a bitmap to store the features. simplify the code a bit and allow for
future work.  ok av@@ a similar diff.
@
text
@d1 1
a1 1
/* $OpenBSD: extern.h,v 1.13 2008/08/13 12:21:19 av Exp $ */
d77 1
a77 1
extern int		get_media_capabilities(int *, int);
@


1.13
log
@Old drives (reported Giovanni Bechis <bigionews@@snb.it>) don't report CD-RW
write feature. Add additional check for media type before blanking.
The patch fixes problem for Giovanni.
ok fgsch
@
text
@d1 1
a1 1
/* $OpenBSD: extern.h,v 1.12 2008/06/30 23:35:39 av Exp $ */
a41 5
/* Media capabilities (bitmask) */
#define MEDIACAP_TAO		0x01	/* Track-At-Once writing mode */
#define MEDIACAP_CDRW_WRITE	0x02	/* media is CD-RW and can be written */
#define MEDIACAP_CDRW_CAV	0x04	/* Constant Angular Velocity */

d58 8
a65 3
/*
 * Media types
 */
d77 1
a77 1
extern int		get_media_capabilities(int *cap);
@


1.12
log
@set speed for writing tracks in TAO.
ok and tweaks by fgsch
manual page by jmc
@
text
@d1 1
a1 1
/* $OpenBSD: extern.h,v 1.11 2008/06/22 21:04:01 av Exp $ */
d63 7
d76 1
@


1.11
log
@Automatically distinguish between CD-DA track and WAVE audio file writing them
in TAO mode. For WAVE files we should skip header.

ok and comments by fgsch
@
text
@d1 1
a1 1
/* $OpenBSD: extern.h,v 1.10 2008/06/08 21:01:24 av Exp $ */
d38 1
d42 20
a61 3
/* Media capabilities */
#define MEDIACAP_TAO			0x01
#define MEDIACAP_CDRW_WRITE		0x02
@


1.10
log
@add ability to determine media capabilities (what we can do with media).
ok fgsch
@
text
@d1 1
a1 1
/* $OpenBSD: extern.h,v 1.9 2008/04/30 17:10:55 fgsch Exp $ */
d32 1
@


1.9
log
@add two missing prototypes.
@
text
@d1 1
a1 1
/* $OpenBSD: extern.h,v 1.8 2006/08/26 14:10:21 krw Exp $ */
d40 4
d50 1
@


1.8
log
@/* $OpenBSD $*/ -> /* $OpenBSD$ */
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d56 2
@


1.7
log
@print updates on the same line, per second, as we go along writing, in
the following form:
    track 01 'd' 00328891/00328891 100%
checked lots, but nobody replied to my mail...
@
text
@d1 1
a1 1
/* $OpenBSD $*/
@


1.6
log
@put fd into track's struct so we can fail earlier
'looks good' pat@@
@
text
@d53 1
a53 1
extern int		writetrack(struct track_info *);
@


1.5
log
@add checks for disc size before we set out trying to burn 4gb
onto an unsuspecting cdr
@
text
@d33 1
@


1.4
log
@better command line usage as suggested by deraadt@@
ok @@deraadt
@
text
@d49 1
d57 1
@


1.3
log
@add rewritable blanking and track-at-once burning support

ok deraadt@@
@
text
@d27 2
d30 8
d41 1
d50 2
a51 2
extern int		writetao(int, char *[]);
extern int		writetrack(char *, u_int, u_int, char);
@


1.2
log
@Reuse cddb code to support FreeBSD new cdid command.
(who knows ? scripts might use it).
ok fgs@@, pval@@
@
text
@d34 9
@


1.1
log
@Add cddb support.
@
text
@d32 1
@

