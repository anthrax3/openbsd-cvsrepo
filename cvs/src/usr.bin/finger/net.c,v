head	1.13;
access;
symbols
	OPENBSD_6_0:1.13.0.8
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.4
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.6
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.12.0.22
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.20
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.16
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.14
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.12
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.10
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.18
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.14
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.12
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.10
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.8
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.6
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.4
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.2
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.10.0.8
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.6
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.4
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.2
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.7.0.12
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.10
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.8
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.6
	OPENBSD_2_8:1.7.0.4
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.2
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.6.0.6
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2015.01.16.06.40.07;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	Uu5nFG3wCl0LACBb;

1.12
date	2009.10.27.23.59.38;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2006.01.23.17.29.22;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2004.03.15.02.50.29;	author tedu;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.03.02.56.08;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.13.15.47.10;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	99.12.11.10.05.04;	author itojun;	state Exp;
branches;
next	1.6;

1.6
date	98.07.10.15.45.16;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	97.05.30.23.35.52;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	97.04.23.19.17.29;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.01.17.07.12.33;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.33.18;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.14;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.14;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@/*	$OpenBSD: net.c,v 1.12 2009/10/27 23:59:38 deraadt Exp $	*/

/*
 * Copyright (c) 1989 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Tony Nardo of the Johns Hopkins University/Applied Physics Lab.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <unistd.h>
#include <err.h>
#include "finger.h"
#include "extern.h"

void
netfinger(name)
	char *name;
{
	FILE *fp;
	int c, lastc;
	int s;
	char *host;
	struct addrinfo hints, *res0, *res;
	int error;
	char hbuf[NI_MAXHOST];

	lastc = 0;
	if (!(host = strrchr(name, '@@')))
		return;
	*host++ = '\0';
	memset(&hints, 0, sizeof(hints));
	hints.ai_family = PF_UNSPEC;
	hints.ai_socktype = SOCK_STREAM;
	error = getaddrinfo(host, "finger", &hints, &res0);
	if (error) {
		warnx("%s", gai_strerror(error));
		return;
	}

	s = -1;
	for (res = res0; res; res = res->ai_next) {
		if ((s = socket(res->ai_family, res->ai_socktype,
				res->ai_protocol)) < 0) {
			continue;
		}
		if (connect(s, res->ai_addr, res->ai_addrlen) < 0) {
			(void)close(s);
			s = -1;
			continue;
		}

		break;
	}

	if (s < 0) {
		perror("finger");
		freeaddrinfo(res0);
		return;
	}

	/* have network connection; identify the host connected with */
	if (getnameinfo(res->ai_addr, res->ai_addrlen, hbuf, sizeof(hbuf),
	    NULL, 0, NI_NUMERICHOST) != 0) {
		strlcpy(hbuf, "(invalid)", sizeof hbuf);
	}
	(void)printf("[%s/%s]\n", host, hbuf);

	freeaddrinfo(res0);

	/* -l flag for remote fingerd  */
	if (lflag)
		write(s, "/W ", 3);
	/* send the name followed by <CR><LF> */
	(void)write(s, name, strlen(name));
	(void)write(s, "\r\n", 2);

	/*
	 * Read from the remote system; once we're connected, we assume some
	 * data.  If none arrives, we hang until the user interrupts.
	 *
	 * If we see a <CR> or a <CR> with the high bit set, treat it as
	 * a newline; if followed by a newline character, only output one
	 * newline.
	 *
	 * Otherwise, all high bits are stripped; if it isn't printable and
	 * it isn't a space, we can simply set the 7th bit.  Every ASCII
	 * character with bit 7 set is printable.
	 */
	if ((fp = fdopen(s, "r")) != NULL)
		while ((c = getc(fp)) != EOF) {
			c &= 0x7f;
			if (c == '\r') {
				if (lastc == '\r')
					continue;
				c = '\n';
				lastc = '\r';
			} else {
				if (!isprint(c) && !isspace(c))
					c |= 0x40;
				if (lastc != '\r' || c != '\n')
					lastc = c;
				else {
					lastc = '\n';
					continue;
				}
			}
			putchar(c);
		}
	if (lastc != '\n')
		putchar('\n');
	(void)fclose(fp);
}
@


1.12
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: net.c,v 1.11 2006/01/23 17:29:22 millert Exp $	*/
a34 1
#include <sys/param.h>
@


1.11
log
@Include <sys/param.h> instead of <sys/types.h> so we get MAXHOSTNAMELEN
@
text
@d1 1
a1 1
/*	$OpenBSD: net.c,v 1.10 2004/03/15 02:50:29 tedu Exp $	*/
a33 5

#ifndef lint
/*static char sccsid[] = "from: @@(#)net.c	5.5 (Berkeley) 6/1/90";*/
static const char rcsid[] = "$OpenBSD: net.c,v 1.10 2004/03/15 02:50:29 tedu Exp $";
#endif /* not lint */
@


1.10
log
@Wall, commons, little knf
@
text
@d1 1
a1 1
/*	$OpenBSD: net.c,v 1.9 2003/06/03 02:56:08 millert Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: net.c,v 1.9 2003/06/03 02:56:08 millert Exp $";
d40 1
a40 1
#include <sys/types.h>
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: net.c,v 1.8 2003/03/13 15:47:10 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: net.c,v 1.8 2003/03/13 15:47:10 deraadt Exp $";
@


1.8
log
@a few more strlcpy
@
text
@d1 1
a1 1
/*	$OpenBSD: net.c,v 1.7 1999/12/11 10:05:04 itojun Exp $	*/
d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: net.c,v 1.7 1999/12/11 10:05:04 itojun Exp $";
@


1.7
log
@IPv6 support for finger client.
@
text
@d1 1
a1 1
/*	$OpenBSD: net.c,v 1.6 1998/07/10 15:45:16 mickey Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: net.c,v 1.6 1998/07/10 15:45:16 mickey Exp $";
d105 2
a106 2
			NULL, 0, NI_NUMERICHOST) != 0) {
		strcpy(hbuf, "(invalid)");
@


1.6
log
@err/warn
@
text
@d1 1
a1 1
/*	$OpenBSD: net.c,v 1.5 1997/05/30 23:35:52 kstailey Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: net.c,v 1.5 1997/05/30 23:35:52 kstailey Exp $";
a62 3
	struct hostent *hp;
	struct servent *sp;
	struct sockaddr_in sin;
d65 3
d73 14
a86 5
	if (inet_aton(host, &sin.sin_addr) == 0) {
		hp = gethostbyname(host);
		if (hp == 0) {
			warnx("unknown host: %s", host);
			return;
d88 7
a94 8
		sin.sin_family = hp->h_addrtype;
		bcopy(hp->h_addr, (char *)&sin.sin_addr, hp->h_length);
		host = hp->h_name;
	} else
		sin.sin_family = AF_INET;
	if (!(sp = getservbyname("finger", "tcp"))) {
		warnx("tcp/finger: unknown service\n");
		return;
d96 4
a99 3
	sin.sin_port = sp->s_port;
	if ((s = socket(sin.sin_family, SOCK_STREAM, 0)) < 0) {
		perror("finger: socket");
d104 3
a106 5
	(void)printf("[%s]\n", host);
	if (connect(s, (struct sockaddr *)&sin, sizeof(sin)) < 0) {
		perror("finger: connect");
		(void)close(s);
		return;
d108 3
@


1.5
log
@Integrate changed from NetBSD being careful not to step on our important
stuff (like the -M flag and things.)
@
text
@d1 1
a1 1
/*	$OpenBSD: net.c,v 1.4 1997/04/23 19:17:29 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: net.c,v 1.4 1997/04/23 19:17:29 millert Exp $";
d53 1
d76 1
a76 2
			(void)fprintf(stderr,
			    "finger: unknown host: %s\n", host);
d85 1
a85 1
		(void)fprintf(stderr, "finger: tcp/finger: unknown service\n");
@


1.4
log
@Treat "finger@@" like "finger@@localhost" to act more like
traditional finger.  Noticed by Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: net.c,v 1.3 1997/01/17 07:12:33 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: net.c,v 1.3 1997/01/17 07:12:33 millert Exp $";
d52 3
d56 1
d60 3
a62 4
	extern int lflag;
	register FILE *fp;
	register int c, lastc;
	struct hostent *hp, def;
d66 1
a66 1
	char *alist[1], *host;
d68 1
d71 1
a71 3
	*host++ = NULL;
	if (*host == NULL)
		host = "localhost";
d120 2
a121 2
	 */ 
	if (fp = fdopen(s, "r"))
@


1.3
log
@r?index -> strr?chr
@
text
@d1 1
a1 1
/*	$OpenBSD: net.c,v 1.2 1996/06/26 05:33:18 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: net.c,v 1.2 1996/06/26 05:33:18 deraadt Exp $";
d68 2
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: net.c,v 1.1.1.1 1995/10/18 08:45:14 deraadt Exp $";
d63 1
a63 1
	char *alist[1], *host, *rindex();
d65 1
a65 1
	if (!(host = rindex(name, '@@')))
@


1.1
log
@Initial revision
@
text
@d1 2
d41 1
a41 1
static char rcsid[] = "$Id: net.c,v 1.6 1995/05/21 15:06:52 mycroft Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
