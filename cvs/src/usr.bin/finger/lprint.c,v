head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.8
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.6
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.4
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.10.0.22
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.20
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.20
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.16
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.14
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.12
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.10
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.8
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.6
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.4
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.2
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.8.0.6
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.4
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.5.0.8
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.16
	OPENBSD_2_8:1.4.0.14
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.12
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2015.03.15.00.41.28;	author millert;	state Exp;
branches;
next	1.11;
commitid	IbVxlqGw2UipKdDr;

1.11
date	2014.10.17.20.19.15;	author millert;	state Exp;
branches;
next	1.10;
commitid	dqUOeTefOdI0Aqwp;

1.10
date	2009.10.27.23.59.38;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2005.08.23.13.43.53;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2004.03.15.02.50.29;	author tedu;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.10.22.20.46;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.03.02.56.08;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.12.05.17.04;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.05.30.23.35.52;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.08.27.22.38.23;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.33.17;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.14;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.14;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@tzfile.h is an internal header that should never have been installed.
What's worse, the tzfile.h that gets installed is over 20 years old
and doesn't match the real tzfile.h in libc/time.  This makes the
tree safe for /usr/include/tzfile.h removal.  The TM_YEAR_BASE
define has been moved to time.h temporarily until its usage is
replaced by 1900 in the tree.  Actual removal of tzfile.h is pending
a ports build.  Based on a diff from deraadt@@
@
text
@/*	$OpenBSD: lprint.c,v 1.11 2014/10/17 20:19:15 millert Exp $	*/

/*
 * Copyright (c) 1989 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Tony Nardo of the Johns Hopkins University/Applied Physics Lab.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/file.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <stdio.h>
#include <string.h>
#include <time.h>
#include <ctype.h>
#include <paths.h>
#include <vis.h>
#include "finger.h"
#include "extern.h"

#define	LINE_LEN	80
#define	TAB_LEN		8		/* 8 spaces between tabs */
#define	_PATH_PLAN	".plan"
#define	_PATH_PROJECT	".project"

void
lflag_print(void)
{
	PERSON *pn;

	for (pn = phead;;) {
		lprint(pn);
		if (!pplan) {
			(void)show_text(pn->dir, _PATH_PROJECT, "Project:");
			if (!show_text(pn->dir, _PATH_PLAN, "Plan:"))
				(void)printf("No Plan.\n");
		}
		if (!(pn = pn->next))
			break;
		putchar('\n');
	}
}

void
lprint(PERSON *pn)
{
	struct tm *delta;
	WHERE *w;
	int cpr, len, maxlen;
	struct tm *tp;
	int oddfield;
	char *t, *tzn;

	cpr = 0;
	/*
	 * long format --
	 *	login name
	 *	real name
	 *	home directory
	 *	shell
	 *	office, office phone, home phone if available
	 *	mail status
	 */
	(void)printf("Login: %-15s\t\t\tName: %s\nDirectory: %-25s",
	    pn->name, pn->realname, pn->dir);
	(void)printf("\tShell: %-s\n", *pn->shell ? pn->shell : _PATH_BSHELL);

	/*
	 * try and print office, office phone, and home phone on one line;
	 * if that fails, do line filling so it looks nice.
	 */
#define	OFFICE_TAG		"Office"
#define	OFFICE_PHONE_TAG	"Office Phone"
	oddfield = 0;
	if (pn->office && pn->officephone &&
	    strlen(pn->office) + strlen(pn->officephone) +
	    sizeof(OFFICE_TAG) + 2 <= 5 * TAB_LEN) {
		(void)snprintf(tbuf, sizeof(tbuf), "%s: %s, %s",
		    OFFICE_TAG, pn->office, prphone(pn->officephone));
		oddfield = demi_print(tbuf, oddfield);
	} else {
		if (pn->office) {
			(void)snprintf(tbuf, sizeof(tbuf), "%s: %s",
			    OFFICE_TAG, pn->office);
			oddfield = demi_print(tbuf, oddfield);
		}
		if (pn->officephone) {
			(void)snprintf(tbuf, sizeof(tbuf), "%s: %s",
			    OFFICE_PHONE_TAG, prphone(pn->officephone));
			oddfield = demi_print(tbuf, oddfield);
		}
	}
	if (pn->homephone) {
		(void)snprintf(tbuf, sizeof(tbuf), "%s: %s",
		    "Home Phone", prphone(pn->homephone));
		oddfield = demi_print(tbuf, oddfield);
	}
	if (oddfield)
		putchar('\n');

	/*
	 * long format con't:
	 * if logged in
	 *	terminal
	 *	idle time
	 *	if messages allowed
	 *	where logged in from
	 * if not logged in
	 *	when last logged in
	 */
	/* find out longest device name for this user for formatting */
	for (w = pn->whead, maxlen = -1; w != NULL; w = w->next)
		if ((len = strlen(w->tty)) > maxlen)
			maxlen = len;
	/* find rest of entries for user */
	for (w = pn->whead; w != NULL; w = w->next) {
		switch (w->info) {
		case LOGGEDIN:
			tp = localtime(&w->loginat);
			t = asctime(tp);
			tzn = tp->tm_zone;
			cpr = printf("On since %.16s (%s) on %s",
			    t, tzn, w->tty);
			/*
			 * idle time is tough; if have one, print a comma,
			 * then spaces to pad out the device name, then the
			 * idle time.  Follow with a comma if a remote login.
			 */
			delta = gmtime(&w->idletime);
			if (delta->tm_yday || delta->tm_hour || delta->tm_min) {
				cpr += printf("%-*s idle ",
				    (int)(maxlen - strlen(w->tty) + 1), ",");
				if (delta->tm_yday > 0) {
					cpr += printf("%d day%s ",
					   delta->tm_yday,
					   delta->tm_yday == 1 ? "" : "s");
				}
				cpr += printf("%d:%02d",
				    delta->tm_hour, delta->tm_min);
				if (*w->host) {
					putchar(',');
					++cpr;
				}
			}
			if (!w->writable)
				cpr += printf(" (messages off)");
			break;
		case LASTLOG:
			if (w->loginat == 0) {
				(void)printf("Never logged in.");
				break;
			}
			tp = localtime(&w->loginat);
			t = asctime(tp);
			tzn = tp->tm_zone;
			if (now - w->loginat > SIXMONTHS)
				cpr =
				    printf("Last login %.16s %.4s (%s) on %s",
				    t, t + 20, tzn, w->tty);
			else
				cpr = printf("Last login %.16s (%s) on %s",
				    t, tzn, w->tty);
			break;
		}
		if (*w->host) {
			if (LINE_LEN < (cpr + 6 + strlen(w->host)))
				(void)printf("\n   ");
			(void)printf(" from %s", w->host);
		}
		putchar('\n');
	}
	if (pn->mailrecv == -1)
		printf("No Mail.\n");
	else if (pn->mailrecv > pn->mailread) {
		tp = localtime(&pn->mailrecv);
		t = asctime(tp);
		tzn = tp->tm_zone;
		printf("New mail received %.16s %.4s (%s)\n", t, t + 20, tzn);
		tp = localtime(&pn->mailread);
		t = asctime(tp);
		tzn = tp->tm_zone;
		printf("     Unread since %.16s %.4s (%s)\n", t, t + 20, tzn);
	} else {
		tp = localtime(&pn->mailread);
		t = asctime(tp);
		tzn = tp->tm_zone;
		printf("Mail last read %.16s %.4s (%s)\n", t, t + 20, tzn);
	}
}

int
demi_print(char *str, int oddfield)
{
	static int lenlast;
	int lenthis, maxlen;

	lenthis = strlen(str);
	if (oddfield) {
		/*
		 * We left off on an odd number of fields.  If we haven't
		 * crossed the midpoint of the screen, and we have room for
		 * the next field, print it on the same line; otherwise,
		 * print it on a new line.
		 *
		 * Note: we insist on having the right hand fields start
		 * no less than 5 tabs out.
		 */
		maxlen = 5 * TAB_LEN;
		if (maxlen < lenlast)
			maxlen = lenlast;
		if (((((maxlen / TAB_LEN) + 1) * TAB_LEN) +
		    lenthis) <= LINE_LEN) {
			while(lenlast < (4 * TAB_LEN)) {
				putchar('\t');
				lenlast += TAB_LEN;
			}
			(void)printf("\t%s\n", str);	/* force one tab */
		} else {
			(void)printf("\n%s", str);	/* go to next line */
			oddfield = !oddfield;	/* this'll be undone below */
		}
	} else
		(void)printf("%s", str);
	oddfield = !oddfield;			/* toggle odd/even marker */
	lenlast = lenthis;
	return (oddfield);
}

int
show_text(char *directory, char *file_name, char *header)
{
	int ch, lastc;
	FILE *fp;

	lastc = 0;
	(void)snprintf(tbuf, sizeof(tbuf), "%s/%s", directory, file_name);
	if ((fp = fopen(tbuf, "r")) == NULL)
		return (0);
	(void)printf("%s\n", header);
	while ((ch = getc(fp)) != EOF)
		vputc(lastc = ch);
	if (lastc != '\n')
		(void)putchar('\n');
	(void)fclose(fp);
	return (1);
}

void
vputc(int ch)
{
	char visout[5], *s2;

	ch = toascii(ch);
	vis(visout, ch, VIS_SAFE|VIS_NOSLASH, 0);
	for (s2 = visout; *s2; s2++)
		(void)putchar(*s2);
}
@


1.11
log
@Instead of doing strvis() of gecos string on output, do it when
storing them in struct person since they are only used for output.
Uses reallocarray() for overflow detection. OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: lprint.c,v 1.10 2009/10/27 23:59:38 deraadt Exp $	*/
a38 1
#include <tzfile.h>
d183 1
a183 1
			if (now - w->loginat > SECSPERDAY * DAYSPERNYEAR / 2)
@


1.10
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: lprint.c,v 1.9 2005/08/23 13:43:53 espie Exp $	*/
a80 1
	struct storage *mem = NULL;
d93 1
a93 1
	    vs(&mem, pn->name), vs(&mem, pn->realname), pn->dir);
d106 2
a107 3
		(void)snprintf(tbuf, sizeof(tbuf),
		    "%s: %s, %s", OFFICE_TAG, vs(&mem, pn->office),
		    vs(&mem, prphone(pn->officephone)));
d111 2
a112 2
			(void)snprintf(tbuf, sizeof(tbuf),
			    "%s: %s", OFFICE_TAG, vs(&mem, pn->office));
d116 2
a117 3
			(void)snprintf(tbuf, sizeof(tbuf),
			    "%s: %s", OFFICE_PHONE_TAG,
			    vs(&mem, prphone(pn->officephone)));
d122 2
a123 2
		(void)snprintf(tbuf, sizeof(tbuf), "%s: %s", "Home Phone",
		    vs(&mem, prphone(pn->homephone)));
a125 1
	free_storage(mem);
@


1.9
log
@use vis() consistently in field printing.

Replace vs() with a version that logs its memory usage, so that it
can be cleaned up after each entry.

okay millert@@, delegated by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: lprint.c,v 1.8 2004/03/15 02:50:29 tedu Exp $	*/
a33 5

#ifndef lint
/*static char sccsid[] = "from: @@(#)lprint.c	5.13 (Berkeley) 10/31/90";*/
static const char rcsid[] = "$OpenBSD: lprint.c,v 1.8 2004/03/15 02:50:29 tedu Exp $";
#endif /* not lint */
@


1.8
log
@Wall, commons, little knf
@
text
@d1 1
a1 1
/*	$OpenBSD: lprint.c,v 1.7 2003/06/10 22:20:46 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: lprint.c,v 1.7 2003/06/10 22:20:46 deraadt Exp $";
d86 1
d99 1
a99 1
	    pn->name, pn->realname, pn->dir);
d113 2
a114 2
		    "%s: %s, %s", OFFICE_TAG, pn->office,
		    prphone(pn->officephone));
d119 1
a119 1
			    "%s: %s", OFFICE_TAG, pn->office);
d125 1
a125 1
			    prphone(pn->officephone));
d131 1
a131 1
		    prphone(pn->homephone));
d134 1
@


1.7
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: lprint.c,v 1.6 2003/06/03 02:56:08 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: lprint.c,v 1.6 2003/06/03 02:56:08 millert Exp $";
d261 1
a261 1
	return(oddfield);
d273 1
a273 1
		return(0);
d280 1
a280 1
	return(1);
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: lprint.c,v 1.5 2001/07/12 05:17:04 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: lprint.c,v 1.5 2001/07/12 05:17:04 deraadt Exp $";
d60 1
a60 1
lflag_print()
d78 1
a78 2
lprint(pn)
	PERSON *pn;
d227 1
a227 3
demi_print(str, oddfield)
	char *str;
	int oddfield;
d265 1
a265 2
show_text(directory, file_name, header)
	char *directory, *file_name, *header;
d284 1
a284 2
vputc(ch)
	int ch;
@


1.5
log
@first pass at a -Wall cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: lprint.c,v 1.4 1997/05/30 23:35:52 kstailey Exp $	*/
d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: lprint.c,v 1.4 1997/05/30 23:35:52 kstailey Exp $";
@


1.4
log
@Integrate changed from NetBSD being careful not to step on our important
stuff (like the -M flag and things.)
@
text
@d1 1
a1 1
/*	$OpenBSD: lprint.c,v 1.3 1996/08/27 22:38:23 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: lprint.c,v 1.3 1996/08/27 22:38:23 deraadt Exp $";
d172 1
a172 1
				    maxlen - strlen(w->tty) + 1, ",");
@


1.3
log
@vis
@
text
@d1 1
a1 1
/*	$OpenBSD: lprint.c,v 1.2 1996/06/26 05:33:17 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: lprint.c,v 1.2 1996/06/26 05:33:17 deraadt Exp $";
d51 1
d56 1
d63 1
d66 1
a66 2
	extern int pplan;
	register PERSON *pn;
d81 1
d83 1
a83 1
	register PERSON *pn;
d85 3
a87 4
	extern time_t now;
	register struct tm *delta;
	register WHERE *w;
	register int cpr, len, maxlen;
d90 1
a90 2
	time_t time();
	char *t, *tzn, *prphone();
d92 1
d100 1
d116 2
a117 1
		(void)sprintf(tbuf, "%s: %s, %s", OFFICE_TAG, pn->office,
d122 2
a123 1
			(void)sprintf(tbuf, "%s: %s", OFFICE_TAG, pn->office);
d127 2
a128 1
			(void)sprintf(tbuf, "%s: %s", OFFICE_PHONE_TAG,
d134 1
a134 1
		(void)sprintf(tbuf, "%s: %s", "Home Phone",
d142 2
a143 1
	 * long format con't: * if logged in
d231 1
d271 1
d275 2
a276 2
	register int ch, lastc;
	register FILE *fp;
d278 2
a279 1
	(void)sprintf(tbuf, "%s/%s", directory, file_name);
d291 1
d293 1
a293 1
	register int ch;
d295 1
a295 1
	char visout[4], *s2;
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: lprint.c,v 1.1.1.1 1995/10/18 08:45:14 deraadt Exp $";
d53 1
d284 1
a284 1
	int meta;
d286 4
a289 13
	if (!isascii(ch)) {
		(void)putchar('M');
		(void)putchar('-');
		ch = toascii(ch);
		meta = 1;
	} else
		meta = 0;
	if (isprint(ch) || !meta && (ch == ' ' || ch == '\t' || ch == '\n'))
		(void)putchar(ch);
	else {
		(void)putchar('^');
		(void)putchar(ch == '\177' ? '?' : ch | 0100);
	}
@


1.1
log
@Initial revision
@
text
@d1 2
d41 1
a41 1
static char rcsid[] = "$Id: lprint.c,v 1.4 1994/12/24 16:33:51 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
