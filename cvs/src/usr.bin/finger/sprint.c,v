head	1.16;
access;
symbols
	OPENBSD_6_2:1.16.0.10
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.8
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.4
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.13.0.22
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.20
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.16
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.14
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.12
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.10
	OPENBSD_5_0:1.13.0.8
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.6
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.4
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.12.0.10
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.6
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.4
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.2
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.11.0.10
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.8
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.6
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.4
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.10.0.6
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.4
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.6.0.10
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.8
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.6
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.10
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.8
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.6
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2015.08.20.22.32.41;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	0Dp7Dy9FuNZesYo2;

1.15
date	2015.03.15.00.41.28;	author millert;	state Exp;
branches;
next	1.14;
commitid	IbVxlqGw2UipKdDr;

1.14
date	2014.10.17.20.19.15;	author millert;	state Exp;
branches;
next	1.13;
commitid	dqUOeTefOdI0Aqwp;

1.13
date	2009.10.27.23.59.38;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2007.09.02.15.19.32;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2005.08.23.13.43.53;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2004.03.15.02.50.29;	author tedu;	state Exp;
branches;
next	1.9;

1.9
date	2003.07.10.00.06.50;	author david;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.10.22.20.46;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.03.02.56.08;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.31.20.11.30;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.07.10.15.45.18;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	97.06.02.21.33.27;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	97.05.30.23.35.52;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.33.18;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.14;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.14;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Do not cast result of malloc/calloc/realloc* if stdlib.h is in scope
ok krw millert
@
text
@/*	$OpenBSD: sprint.c,v 1.15 2015/03/15 00:41:28 millert Exp $	*/

/*
 * Copyright (c) 1989 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Tony Nardo of the Johns Hopkins University/Applied Physics Lab.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/time.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <err.h>
#include "finger.h"
#include "extern.h"

void
sflag_print(void)
{
	PERSON *pn;
	WHERE *w;
	int cnt;
	char *p;
	PERSON **list;

	list = sort();
	/*
	 * short format --
	 *	login name
	 *	real name
	 *	terminal name (the XX of ttyXX)
	 *	if terminal writeable (add an '*' to the terminal name
	 *		if not)
	 *	if logged in show idle time and day logged in, else
	 *		show last login date and time.  If > 6 months,
	 *		show year instead of time.  If < 6 days,
	 *		show day name instead of month & day.
	 *	if -h given
	 *		remote host
	 *	else if -o given (overriding -h) (default)
	 *		office location
	 *		office phone
	 */
#define NAME_WIDTH	8
#define	MAXREALNAME	20
#define	MAXHOSTNAME	20
	(void)printf("%-*.*s %-*s %s %s\n",
	    NAME_WIDTH, UT_NAMESIZE, "Login", MAXREALNAME,
	    "Name", "Tty  Idle  Login Time  ",
	    (oflag) ? "Office     Office Phone" : "Where");
	for (cnt = 0; cnt < entries; ++cnt) {
		pn = list[cnt];
		for (w = pn->whead; w != NULL; w = w->next) {
			(void)printf("%-*.*s %-*.*s ",
			    NAME_WIDTH, UT_NAMESIZE, pn->name,
			    MAXREALNAME, MAXREALNAME,
			    pn->realname ? pn->realname : "");
			if (!w->loginat) {
				(void)printf("  *     *  No logins   ");
				goto office;
			}
			(void)putchar(w->info == LOGGEDIN && !w->writable ?
			    '*' : ' ');
			if (*w->tty)
				(void)printf("%-2.2s ",
				    w->tty[0] != 't' || w->tty[1] != 't' ||
				    w->tty[2] != 'y' ? w->tty : w->tty + 3);
			else
				(void)printf("   ");
			if (w->info == LOGGEDIN) {
				stimeprint(w);
				(void)printf("  ");
			} else
				(void)printf("    *  ");
			p = ctime(&w->loginat);

			if (now - w->loginat < SECSPERDAY * 6)
				(void)printf("   %.3s", p);
			else
				(void)printf("%.6s", p + 4);
			if (now - w->loginat >= SIXMONTHS)
				(void)printf(" %.4s ", p + 20);
			else
				(void)printf(" %.5s", p + 11);
office:
			putchar(' ');
			if (oflag) {
				if (pn->office)
					(void)printf("%-10.10s", pn->office);
				else if (pn->officephone)
					(void)printf("%-10.10s", " ");
				if (pn->officephone)
					(void)printf(" %-.15s",
					    prphone(pn->officephone));
			} else
				(void)printf("%.*s", MAXHOSTNAME, w->host);
			putchar('\n');
		}
	}
}

PERSON **
sort(void)
{
	PERSON *pn, **lp;
	PERSON **list;

	if (!(list = calloc((u_int)entries, sizeof(PERSON *))))
		err(1, "malloc");
	for (lp = list, pn = phead; pn != NULL; pn = pn->next)
		*lp++ = pn;
	(void)qsort(list, entries, sizeof(PERSON *), psort);
	return (list);
}

int
psort(const void *p, const void *t)
{
	return (strcmp((*(PERSON **)p)->name, (*(PERSON **)t)->name));
}

void
stimeprint(WHERE *w)
{
	struct tm *delta;

	delta = gmtime(&w->idletime);
	if (!delta->tm_yday) {
		if (!delta->tm_hour) {
			if (!delta->tm_min)
				(void)printf("    -");
			else
				(void)printf("%5d", delta->tm_min);
		 } else {
			(void)printf("%2d:%02d",
			    delta->tm_hour, delta->tm_min);
		 }
	} else
		(void)printf("%4dd", delta->tm_yday);
}
@


1.15
log
@tzfile.h is an internal header that should never have been installed.
What's worse, the tzfile.h that gets installed is over 20 years old
and doesn't match the real tzfile.h in libc/time.  This makes the
tree safe for /usr/include/tzfile.h removal.  The TM_YEAR_BASE
define has been moved to time.h temporarily until its usage is
replaced by 1900 in the tree.  Actual removal of tzfile.h is pending
a ports build.  Based on a diff from deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sprint.c,v 1.14 2014/10/17 20:19:15 millert Exp $	*/
d135 1
a135 1
	if (!(list = (PERSON **)calloc((u_int)entries, sizeof(PERSON *))))
@


1.14
log
@Instead of doing strvis() of gecos string on output, do it when
storing them in struct person since they are only used for output.
Uses reallocarray() for overflow detection. OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sprint.c,v 1.13 2009/10/27 23:59:38 deraadt Exp $	*/
a36 1
#include <tzfile.h>
d103 2
a104 1
			if (now - w->loginat < SECSPERDAY * (DAYSPERWEEK - 1))
d108 1
a108 1
			if (now - w->loginat >= SECSPERDAY * DAYSPERNYEAR / 2)
@


1.13
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: sprint.c,v 1.12 2007/09/02 15:19:32 deraadt Exp $	*/
a52 1
	struct storage *mem;
a81 1
			mem =  NULL;
d83 1
a83 1
			    NAME_WIDTH, UT_NAMESIZE, vs(&mem, pn->name),
d85 1
a85 1
			    pn->realname ? vs(&mem, pn->realname) : "");
d116 1
a116 2
					(void)printf("%-10.10s",
					    vs(&mem, pn->office));
d121 1
a121 1
					    vs(&mem, prphone(pn->officephone)));
a124 1
			free_storage(mem);
@


1.12
log
@use calloc() to avoid malloc(n * m) overflows; checked by djm canacar jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: sprint.c,v 1.11 2005/08/23 13:43:53 espie Exp $	*/
a33 5

#ifndef lint
/*static char sccsid[] = "from: @@(#)sprint.c	5.8 (Berkeley) 12/4/90";*/
static const char rcsid[] = "$OpenBSD: sprint.c,v 1.11 2005/08/23 13:43:53 espie Exp $";
#endif /* not lint */
@


1.11
log
@use vis() consistently in field printing.

Replace vs() with a version that logs its memory usage, so that it
can be cleaned up after each entry.

okay millert@@, delegated by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sprint.c,v 1.10 2004/03/15 02:50:29 tedu Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: sprint.c,v 1.10 2004/03/15 02:50:29 tedu Exp $";
d144 1
a144 1
	if (!(list = (PERSON **)malloc((u_int)(entries * sizeof(PERSON *)))))
@


1.10
log
@Wall, commons, little knf
@
text
@d1 1
a1 1
/*	$OpenBSD: sprint.c,v 1.9 2003/07/10 00:06:50 david Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: sprint.c,v 1.9 2003/07/10 00:06:50 david Exp $";
d58 1
d88 1
d90 1
a90 1
			    NAME_WIDTH, UT_NAMESIZE, vs(pn->name),
d92 1
a92 1
			    pn->realname ? vs(pn->realname) : "");
d124 1
a124 1
					    vs(pn->office));
d129 1
a129 1
					    vs(prphone(pn->officephone)));
d133 1
@


1.9
log
@add missing includes
ok deraadt@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sprint.c,v 1.8 2003/06/10 22:20:46 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: sprint.c,v 1.8 2003/06/10 22:20:46 deraadt Exp $";
d146 1
a146 1
	return(list);
d152 1
a152 1
	return(strcmp((*(PERSON **)p)->name, (*(PERSON **)t)->name));
d161 2
a162 2
	if (!delta->tm_yday)
		if (!delta->tm_hour)
d167 1
a167 1
		else
d170 2
a171 1
	else
@


1.8
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: sprint.c,v 1.7 2003/06/03 02:56:08 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: sprint.c,v 1.7 2003/06/03 02:56:08 millert Exp $";
d45 1
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: sprint.c,v 1.6 2001/01/31 20:11:30 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: sprint.c,v 1.6 2001/01/31 20:11:30 deraadt Exp $";
d50 1
a50 1
sflag_print()
d135 1
a135 1
sort()
d149 1
a149 2
psort(p, t)
	const void *p, *t;
d155 1
a155 2
stimeprint(w)
	WHERE *w;
@


1.6
log
@constrain to 8 character login prints, unless longer, for now
@
text
@d1 1
a1 1
/*	$OpenBSD: sprint.c,v 1.5 1998/07/10 15:45:18 mickey Exp $	*/
d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: sprint.c,v 1.5 1998/07/10 15:45:18 mickey Exp $";
@


1.5
log
@err/warn
@
text
@d1 1
a1 1
/*	$OpenBSD: sprint.c,v 1.4 1997/06/02 21:33:27 kstailey Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: sprint.c,v 1.4 1997/06/02 21:33:27 kstailey Exp $";
d80 1
d83 2
a84 1
	(void)printf("%-*s %-*s %s %s\n", UT_NAMESIZE, "Login", MAXREALNAME,
d90 3
a92 2
			(void)printf("%-*.*s %-*.*s ", UT_NAMESIZE, UT_NAMESIZE,
			    vs(pn->name), MAXREALNAME, MAXREALNAME,
@


1.4
log
@do strvis()ing in sprint.c
@
text
@d1 1
a1 1
/*	$OpenBSD: sprint.c,v 1.3 1997/05/30 23:35:52 kstailey Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: sprint.c,v 1.3 1997/05/30 23:35:52 kstailey Exp $";
d49 1
d141 2
a142 4
	if (!(list = (PERSON **)malloc((u_int)(entries * sizeof(PERSON *))))) {
		(void)fprintf(stderr, "finger: out of space.\n");
		exit(1);
	}
@


1.3
log
@Integrate changed from NetBSD being careful not to step on our important
stuff (like the -M flag and things.)
@
text
@d1 1
a1 1
/*	$OpenBSD: sprint.c,v 1.2 1996/06/26 05:33:18 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: sprint.c,v 1.2 1996/06/26 05:33:18 deraadt Exp $";
d88 2
a89 2
			    pn->name, MAXREALNAME, MAXREALNAME,
			    pn->realname ? pn->realname : "");
d120 2
a121 1
					(void)printf("%-10.10s", pn->office);
d126 1
a126 1
						    prphone(pn->officephone));
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: sprint.c,v 1.1.1.1 1995/10/18 08:45:14 deraadt Exp $";
d48 1
d50 1
d52 1
a52 2
extern int entries;

d55 5
a59 8
	extern time_t now;
	register PERSON *pn;
	register WHERE *w;
	register int cnt;
	register char *p;
	PERSON **list, **sort();
	time_t time();
	char *ctime(), *prphone();
d70 8
a77 4
	 *		show last login date and time.  If > 6 moths,
	 *		show year instead of time.
	 *	office location
	 *	office phone
d80 4
a83 2
	(void)printf("%-*s %-*s %s\n", UT_NAMESIZE, "Login", MAXREALNAME,
	    "Name", "Tty  Idle  Login Time   Office     Office Phone");
d108 4
a111 1
			(void)printf("%.6s", p + 4);
d113 1
a113 1
				(void)printf("  %.4s", p + 20);
d116 12
a127 7
office:			if (pn->office)
				(void)printf(" %-10.10s", pn->office);
			else if (pn->officephone)
				(void)printf(" %-10.10s", " ");
			if (pn->officephone)
				(void)printf(" %-.15s",
				    prphone(pn->officephone));
d136 1
a136 1
	register PERSON *pn, **lp;
a137 2
	int psort();
	char *malloc();
d149 1
d151 1
a151 1
	PERSON **p, **t;
d153 1
a153 1
	return(strcmp((*p)->name, (*t)->name));
d156 1
d160 1
a160 1
	register struct tm *delta;
@


1.1
log
@Initial revision
@
text
@d1 2
d41 1
a41 1
static char rcsid[] = "$Id: sprint.c,v 1.3 1993/10/26 20:54:41 mycroft Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
