head	1.20;
access;
symbols
	OPENBSD_6_2_BASE:1.20
	OPENBSD_6_1:1.20.0.10
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.6
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.2
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.4
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.19.0.2
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.17.0.12
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.10
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.6
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.4
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.2
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.4
	OPENBSD_5_0:1.16.0.2
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.15.0.16
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.14
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.10
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.12
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.8
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.6
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.6
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.4
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.2
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.13.0.2
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.12.0.2
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.2.0.18
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.16
	OPENBSD_2_8:1.2.0.14
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.12
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.10
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.8
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2;
locks; strict;
comment	@ * @;


1.20
date	2015.05.06.07.53.29;	author mpi;	state Exp;
branches;
next	1.19;
commitid	Q6ompHwEqgonty8G;

1.19
date	2015.01.19.01.53.18;	author deraadt;	state Exp;
branches;
next	1.18;
commitid	mxxIIZRu7wmyiSNE;

1.18
date	2014.09.17.01.56.54;	author dlg;	state Exp;
branches;
next	1.17;
commitid	dV1NkTNsF7KrC3AE;

1.17
date	2012.06.05.18.52.53;	author brynet;	state Exp;
branches;
next	1.16;

1.16
date	2011.04.10.03.20.59;	author guenther;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.29.00.56.56;	author otto;	state Exp;
branches;
next	1.14;

1.14
date	2005.12.04.23.10.06;	author tedu;	state Exp;
branches;
next	1.13;

1.13
date	2005.06.08.22.36.43;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2004.10.07.06.26.12;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2004.06.13.18.49.02;	author otto;	state Exp;
branches;
next	1.10;

1.10
date	2004.05.09.22.14.15;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.07.07.21.36.52;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.15.16.24.44;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.13.21.52.25;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.07.15.17.20.36;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.12.06.07.16;	author mpech;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.17.19.42.33;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.27.55;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.08.22.07.16.28;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	97.08.14.14.00.23;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Display thread IDs instead of the name of the process's owner when "-H"
is used.

The rationnal is that when you're looking at threads you're generally
already filtereing by PID and this allow you to see which thread is a
pig.

Written some time ago with mikeb@@

ok sthen@@, krw@@, guenther@@
@
text
@/* $OpenBSD: machine.h,v 1.19 2015/01/19 01:53:18 deraadt Exp $	 */

/*
 *  Top users/processes display for Unix
 *  Version 3
 *
 * Copyright (c) 1984, 1989, William LeFebvre, Rice University
 * Copyright (c) 1989, 1990, 1992, William LeFebvre, Northwestern University
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS EMPLOYER BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  This file defines the interface between top and the machine-dependent
 *  module.  It is NOT machine dependent and should not need to be changed
 *  for any specific machine.
 */

/*
 * the statics struct is filled in by machine_init
 */
struct statics {
	char          **procstate_names;
	char          **cpustate_names;
	char          **memory_names;
	char          **order_names;
};

/*
 * the system_info struct is filled in by a machine dependent routine.
 */

struct system_info {
	pid_t           last_pid;
	double          load_avg[NUM_AVERAGES];
	int             p_total;
	int             p_active;	/* number of procs considered
					 * "active" */
	int            *procstates;
	int64_t        *cpustates;
	int            *memory;
};

/*
 * cpu_states is an array of percentages * 10.  For example, the (integer)
 * value 105 is 10.5% (or .105).
 */

/*
 * the process_select struct tells get_process_info what processes we
 * are interested in seeing
 */

struct process_select {
	int             idle;	/* show idle processes */
	int             system;	/* show system processes */
	int             threads;	/* show threads */
	uid_t           uid;	/* only this uid (unless uid == -1) */
	uid_t           huid;	/* hide this uid (unless huid == -1) */
	pid_t           pid;	/* only this pid (unless pid == -1) */
	char           *command;/* only this command (unless == NULL) */
};

/* prototypes */
extern int      display_init(struct statics *);

/* machine.c */
extern int      machine_init(struct statics *);
extern char    *format_header(char *, int);
extern void     get_system_info(struct system_info *);
extern caddr_t
get_process_info(struct system_info *, struct process_select *,
		 int (*) (const void *, const void *));
extern char    *format_next_process(caddr_t, char *(*)(uid_t), pid_t *, int);
extern uid_t    proc_owner(pid_t);

extern struct kinfo_proc	*getprocs(int, int, int *);

int		getncpu(void);
int		getfscale(void);
@


1.19
log
@like in ps(1), fetch the FSCALE value using sysctl rather than using
the header version
ok guenther
@
text
@d1 1
a1 1
/* $OpenBSD: machine.h,v 1.18 2014/09/17 01:56:54 dlg Exp $	 */
d87 1
a87 1
extern char    *format_header(char *);
d92 1
a92 1
extern char    *format_next_process(caddr_t, char *(*)(uid_t), pid_t *);
@


1.18
log
@if there are more than 8 cpus, default to combined cpu stats (like
you passed -1 on the command line).

ok kettenis@@ tedu@@
@
text
@d1 1
a1 1
/* $OpenBSD: machine.h,v 1.17 2012/06/05 18:52:53 brynet Exp $	 */
d98 1
@


1.17
log
@Add support for hiding a user's processes in top.

feedback & ok lum@@
@
text
@d1 1
a1 1
/* $OpenBSD: machine.h,v 1.16 2011/04/10 03:20:59 guenther Exp $	 */
d96 2
@


1.16
log
@Switch back from KERN_PROC2/kinfo_proc2 to KERN_PROC/kinfo_proc now
that we've got name we want for the API we want

"ZAP!" deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: machine.h,v 1.15 2007/05/29 00:56:56 otto Exp $	 */
d77 1
@


1.15
log
@Instead of using hand-crafted redraws minimizing screen updates, use curses.
Enables nice things like process highlighting without hurting the brain.
ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: machine.h,v 1.14 2005/12/04 23:10:06 tedu Exp $	 */
d94 1
a94 1
extern struct kinfo_proc2	*getprocs(int, int, int *);
@


1.14
log
@support for toggling thread viewing.
ok brad, hints from jmc
@
text
@d1 1
a1 1
/* $OpenBSD: machine.h,v 1.13 2005/06/08 22:36:43 millert Exp $	 */
d91 1
a91 1
extern char    *format_next_process(caddr_t, char *(*)(uid_t));
@


1.13
log
@Multi-cpu support for top.  Each cpu now gets its own stats line.
Based on work by todd@@ at the hackathon.
@
text
@d1 1
a1 1
/* $OpenBSD: machine.h,v 1.12 2004/10/07 06:26:12 otto Exp $	 */
d75 1
@


1.12
log
@introduce -p option and p command to only show a single process.
From Patrick Latifi. ok deraadt@@ millert@@
@
text
@d1 1
a1 1
/* $OpenBSD: machine.h,v 1.11 2004/06/13 18:49:02 otto Exp $	 */
d58 1
a58 1
	int            *cpustates;
@


1.11
log
@Typos in comments and a redundant prototype. From Brian Poole via jmc@@
ok jmc@@
@
text
@d1 1
a1 1
/* $OpenBSD: machine.h,v 1.10 2004/05/09 22:14:15 deraadt Exp $	 */
d76 1
d92 2
@


1.10
log
@spaces
@
text
@d1 1
a1 1
/* $OpenBSD: machine.h,v 1.9 2003/07/07 21:36:52 deraadt Exp $	 */
a89 1
extern int      proc_compate(const void *, const void *);
@


1.9
log
@protos
@
text
@d1 1
a1 1
/* $OpenBSD: machine.h,v 1.8 2003/06/15 16:24:44 millert Exp $	 */
d86 1
a86 1
extern caddr_t 
@


1.8
log
@use uid_t and fix some sign compare warnings; OK krw@@ and deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: machine.h,v 1.7 2003/06/13 21:52:25 deraadt Exp $	 */
d89 1
a89 1
extern char    *format_next_process(caddr_t, char *(*) ());
@


1.7
log
@readable code
@
text
@d1 1
a1 1
/* $OpenBSD: machine.h,v 1.6 2002/07/15 17:20:36 deraadt Exp $	 */
d75 1
a75 1
	int             uid;	/* only this uid (unless uid == -1) */
d91 1
a91 1
extern int      proc_owner(pid_t);
@


1.6
log
@license change from William LeFebvre <wnl@@groupsys.com>; top is now BSD
licensed.  this same license will show up on his next release as well.
@
text
@d1 1
a1 1
/*	$OpenBSD: machine.h,v 1.5 2002/06/12 06:07:16 mpech Exp $	*/
d40 5
a44 8
struct statics
{
    char **procstate_names;
    char **cpustate_names;
    char **memory_names;
#ifdef ORDER
    char **order_names;
#endif
d51 9
a59 9
struct system_info
{
    pid_t  last_pid;
    double load_avg[NUM_AVERAGES];
    int    p_total;
    int    p_active;     /* number of procs considered "active" */
    int    *procstates;
    int    *cpustates;
    int    *memory;
d62 3
a64 2
/* cpu_states is an array of percentages * 10.  For example, 
   the (integer) value 105 is 10.5% (or .105).
d72 5
a76 6
struct process_select
{
    int idle;		/* show idle processes */
    int system;		/* show system processes */
    int uid;		/* only this uid (unless uid == -1) */
    char *command;	/* only this command (unless == NULL) */
d80 1
a80 1
extern int display_init(struct statics *);
d83 9
a91 8
extern int machine_init(struct statics *);
extern char *format_header(char *);
extern void get_system_info(struct system_info *);
extern caddr_t get_process_info(struct system_info *, struct process_select *,
    int (*)(const void *, const void *));
extern char *format_next_process(caddr_t, char *(*)());
extern int proc_compate(const void *, const void *);
extern int proc_owner(pid_t);
@


1.5
log
@a real pid_t cleanup.

espie@@ ok for make/,
deraadt@@ one extra eye,
millert@@ ok
@
text
@d1 29
a29 1
/*	$OpenBSD: machine.h,v 1.4 2002/02/17 19:42:33 millert Exp $	*/
@


1.4
log
@Manual cleanup of remaining userland __P use (excluding packages maintained outside the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: machine.h,v 1.3 2002/02/16 21:27:55 millert Exp $	*/
d28 1
a28 1
    int    last_pid;
@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: machine.h,v 1.2 1997/08/22 07:16:28 downsj Exp $	*/
d61 3
a63 4
extern caddr_t get_process_info __P((struct system_info *,
				     struct process_select *,
				     int (*)(const void *, const void *)));
extern char *format_next_process __P((caddr_t, char *(*)()));
@


1.2
log
@First sweep.  Prototype, type fixes, long fixes, mostly compiles with
-Wall.
@
text
@d1 1
a1 1
/*	$OpenBSD: machine.h,v 1.1 1997/08/14 14:00:23 downsj Exp $	*/
d55 1
a55 1
extern int display_init __P((struct statics *));
d58 3
a60 3
extern int machine_init __P((struct statics *));
extern char *format_header __P((char *));
extern void get_system_info __P((struct system_info *));
d65 2
a66 2
extern int proc_compate __P((const void *, const void *));
extern int proc_owner __P((pid_t));
@


1.1
log
@top 3.4, with a few changes.  Still needs more work.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d54 2
a55 1
/* routines defined by the machine dependent module */
d57 10
a66 5
char *format_header();
char *format_next_process();

/* non-int routines typically used by the machine dependent module */
char *printable();
@
