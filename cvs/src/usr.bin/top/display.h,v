head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.22
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.20
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.16
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.12
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.14
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.6
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.10
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.8
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.4
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.2
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.11.0.20
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.18
	OPENBSD_5_0:1.11.0.16
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.14
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.12
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.8
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.10
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.6
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.4
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.2
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.7.0.4
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.2
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.18
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.16
	OPENBSD_2_8:1.2.0.14
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.12
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.10
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.8
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2;
locks; strict;
comment	@ * @;


1.12
date	2013.01.14.21.33.59;	author guenther;	state Exp;
branches;
next	1.11;

1.11
date	2007.11.22.11.01.04;	author otto;	state Exp;
branches;
next	1.10;

1.10
date	2007.07.27.13.59.27;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2007.05.29.00.56.56;	author otto;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.04.06.58.12;	author otto;	state Exp;
branches;
next	1.7;

1.7
date	2005.06.08.22.36.43;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.13.04.29.59;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.12.22.30.23;	author pvalchev;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.15.17.20.36;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.27.55;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.08.22.07.16.27;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	97.08.14.14.00.21;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.12
log
@When showing threads, say so.  Fix up some comments and names at the same time.

original diff by zhuk@@
ok jsing@@ mpi@@ zhuk@@
@
text
@/*	$OpenBSD: display.h,v 1.11 2007/11/22 11:01:04 otto Exp $	*/

/*
 *  Top users/processes display for Unix
 *  Version 3
 *
 * Copyright (c) 1984, 1989, William LeFebvre, Rice University
 * Copyright (c) 1989, 1990, 1992, William LeFebvre, Northwestern University
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS EMPLOYER BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* constants needed for display.c */

#define  MT_standout  1
#define  MT_delayed   2

/* prototypes */
int display_resize(void);
void i_loadave(int, double *);
void u_loadave(int, double *);
void i_timeofday(time_t *);
void i_procstates(int, int *, int);
void u_procstates(int, int *);
void i_cpustates(int64_t *);
void u_cpustates(int64_t *);
void i_memory(int *);
void u_memory(int *);
void i_message(void);
void u_message(void);
void i_header(char *);
void u_header(char *);
void i_process(int, char *, int);
void u_process(int, char *, int);
void u_endscreen(void);
void display_header(int);
void new_message(int, const char *, ...);
void clear_message(void);
int readline(char *, int);
char *printable(char *);
void show_help(void);
void anykey(void);

#define putr() do { if (!smart_terminal) if (putchar('\r') == EOF) exit(1); } \
	while (0)
#define putn() do { if (!smart_terminal) if (putchar('\n') == EOF) exit(1); } \
	while (0)
@


1.11
log
@Diff from Mark Lumsden: cleanup of reading strings and numbers, to
make sure command line args and interactive reading of numbers use the
same code. More concrete, interactive use of 'd' and 'n' now also
interpret 'max', 'infinite' and 'all' and handle non-numbers
correctly. tested by a few
@
text
@d1 1
a1 1
/*	$OpenBSD: display.h,v 1.10 2007/07/27 13:59:27 deraadt Exp $	*/
d41 1
a41 1
void i_procstates(int, int *);
@


1.10
log
@u_endscreen()'s argument is entirely unused; inspired by zinovik@@cs.karelia.ru
@
text
@d1 1
a1 1
/*	$OpenBSD: display.h,v 1.9 2007/05/29 00:56:56 otto Exp $	*/
d57 1
a57 1
int readline(char *, int, int);
@


1.9
log
@Instead of using hand-crafted redraws minimizing screen updates, use curses.
Enables nice things like process highlighting without hurting the brain.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: display.h,v 1.8 2006/03/04 06:58:12 otto Exp $	*/
d53 1
a53 1
void u_endscreen(int);
@


1.8
log
@Show the CPU state %'s on first display as well. "looks good" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: display.h,v 1.7 2005/06/08 22:36:43 millert Exp $	*/
d37 29
a65 22
extern int display_resize(void);
extern void i_loadave(int, double *);
extern void u_loadave(int, double *);
extern void i_timeofday(time_t *);
extern void i_procstates(int, int *);
extern void u_procstates(int, int *);
extern void i_cpustates(int64_t *);
extern void u_cpustates(int64_t *);
extern void i_memory(int *);
extern void u_memory(int *);
extern void i_message(void);
extern void u_message(void);
extern void i_header(char *);
extern void u_header(char *);
extern void i_process(int, char *);
extern void u_process(int, char *);
extern void u_endscreen(int);
extern void display_header(int);
extern void new_message(int, const char *, ...);
extern void clear_message(void);
extern int readline(char *, int, int);
extern char *printable(char *);
@


1.7
log
@Multi-cpu support for top.  Each cpu now gets its own stats line.
Based on work by todd@@ at the hackathon.
@
text
@d1 1
a1 1
/*	$OpenBSD: display.h,v 1.6 2003/06/13 04:29:59 pvalchev Exp $	*/
a44 1
extern void z_cpustates(void);
@


1.6
log
@use proper varargs(3), as opposed to a hack; ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: display.h,v 1.5 2003/06/12 22:30:23 pvalchev Exp $	*/
d43 2
a44 2
extern void i_cpustates(int *);
extern void u_cpustates(int *);
@


1.5
log
@cleanup; ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: display.h,v 1.4 2002/07/15 17:20:36 deraadt Exp $	*/
a32 2
/* "type" argument for new_message function */

d56 1
a56 1
extern void new_message(); /* XXX */
@


1.4
log
@license change from William LeFebvre <wnl@@groupsys.com>; top is now BSD
licensed.  this same license will show up on his next release as well.
@
text
@d1 1
a1 1
/*	$OpenBSD: display.h,v 1.3 2002/02/16 21:27:55 millert Exp $	*/
d58 1
a58 1
extern void new_message();	/* XXX */
@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 29
a29 1
/*	$OpenBSD: display.h,v 1.2 1997/08/22 07:16:27 downsj Exp $	*/
@


1.2
log
@First sweep.  Prototype, type fixes, long fixes, mostly compiles with
-Wall.
@
text
@d1 1
a1 1
/*	$OpenBSD: display.h,v 1.1 1997/08/14 14:00:21 downsj Exp $	*/
d11 19
a29 19
extern int display_resize __P((void));
extern void i_loadave __P((int, double *));
extern void u_loadave __P((int, double *));
extern void i_timeofday __P((time_t *));
extern void i_procstates __P((int, int *));
extern void u_procstates __P((int, int *));
extern void i_cpustates __P((int *));
extern void u_cpustates __P((int *));
extern void z_cpustates __P((void));
extern void i_memory __P((int *));
extern void u_memory __P((int *));
extern void i_message __P((void));
extern void u_message __P((void));
extern void i_header __P((char *));
extern void u_header __P((char *));
extern void i_process __P((int, char *));
extern void u_process __P((int, char *));
extern void u_endscreen __P((int));
extern void display_header __P((int));
d31 3
a33 3
extern void clear_message __P((void));
extern int readline __P((char *, int, int));
extern char *printable __P((char *));
@


1.1
log
@top 3.4, with a few changes.  Still needs more work.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d10 24
@
