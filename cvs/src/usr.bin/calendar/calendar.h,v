head	1.15;
access;
symbols
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.4
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.14.0.4
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.13.0.16
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.20
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.18
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.14
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.12
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.10
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.8
	OPENBSD_5_0:1.13.0.6
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.4
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.2
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.12.0.18
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.20
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.16
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.14
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.12
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.10
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.8
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.6
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.11.0.2
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.10
	OPENBSD_2_8:1.4.0.8
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.6
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.4
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.2.0.4
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.1.0.4
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.15
date	2015.12.07.18.46.35;	author espie;	state Exp;
branches;
next	1.14;
commitid	IuVQXdcoW2Zw8wMf;

1.14
date	2015.03.15.00.41.28;	author millert;	state Exp;
branches;
next	1.13;
commitid	IbVxlqGw2UipKdDr;

1.13
date	2010.04.28.18.20.15;	author jsg;	state Exp;
branches;
next	1.12;

1.12
date	2005.08.09.12.32.58;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2004.12.10.20.47.30;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2004.12.10.15.00.27;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.03.02.56.06;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.16.21.27.44;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.27.18.19.20;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.26.20.38.55;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.03.15.53.00;	author pjanzen;	state Exp;
branches;
next	1.4;

1.4
date	98.12.13.07.31.07;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	98.11.08.04.31.13;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	98.03.30.06.59.24;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.12.05.06.04.38;	author millert;	state Exp;
branches;
next	;


desc
@@


1.15
log
@tweak the code a bit and add a -w option to display day of week.
okay jmc@@, millert@@
@
text
@/*	$OpenBSD: calendar.h,v 1.14 2015/03/15 00:41:28 millert Exp $	*/

/*
 * Copyright (c) 1989, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */


extern struct passwd *pw;
extern int doall;
extern int daynames;
extern int bodun_always;
extern time_t f_time;
extern struct tm *tp;
extern char *calendarFile;
extern char *calendarHome;
extern char *optarg;

struct fixs {
	char *name;
	int len;
};

#define PRINT_DATE_BASE_LEN 35

struct event {
	time_t	when;
	char	print_date[PRINT_DATE_BASE_LEN+1];
	char	**desc;
	char	*ldesc;
	struct event	*next;
};

struct match {
	time_t	when;
	char	print_date[PRINT_DATE_BASE_LEN];
	int	bodun;
	int	var;
	struct match	*next;
};

struct specialev {
	char *name;
	int nlen;
	char *uname;
	int ulen;
	int (*getev)(int);
};

void	 cal(void);
void	 closecal(FILE *);
int	 getday(char *);
int	 getdayvar(char *);
int	 getfield(char *, char **, int *);
int	 getmonth(char *);
int	 pesach(int);
int	 easter(int);
int	 paskha(int);
void	 insert(struct event **, struct event *);
struct match	*isnow(char *, int);
FILE	*opencal(void);
void	 settime(time_t *);
time_t	 Mktime(char *);
void	 usage(void);
int	 foy(int);
void	 variable_weekday(int *, int, int);
void	 setnnames(void);

/* some flags */
#define	F_ISMONTH	0x01 /* month (Januar ...) */
#define	F_ISDAY		0x02 /* day of week (Sun, Mon, ...) */
/*#define	F_ISDAYVAR	0x04  variables day of week, like SundayLast */
#define	F_SPECIAL	0x08 /* Events that occur once a year but don't track
			      * calendar time--e.g.  Easter or easter depending
			      * days */

#define	SECSPERDAY	(24 * 60 * 60)
#define	isleap(y) (((y) % 4) == 0 && (((y) % 100) != 0 || ((y) % 400) == 0))

extern int f_dayAfter;	/* days after current date */
extern int f_dayBefore;	/* days before current date */
extern int f_SetdayAfter; /* calendar invoked with -A */

/* Special events; see also setnnames() in day.c */
/* '=' is not a valid character in a special event name */
#define PESACH "pesach"
#define PESACHLEN (sizeof(PESACH) - 1)
#define EASTER "easter"
#define EASTERNAMELEN (sizeof(EASTER) - 1)
#define PASKHA "paskha"
#define PASKHALEN (sizeof(PASKHA) - 1)

/* calendars */
extern enum calendars { GREGORIAN = 0, JULIAN, LUNAR } calendar;
extern u_long julian;

#define NUMEV 3	/* Total number of such special events */
extern struct specialev spev[NUMEV];

/* For calendar -a, specify a maximum time (in seconds) to spend parsing
 * each user's calendar files.  This prevents them from hanging calendar
 * (e.g. by using named pipes)
 */
#define USERTIMEOUT 20
@


1.14
log
@tzfile.h is an internal header that should never have been installed.
What's worse, the tzfile.h that gets installed is over 20 years old
and doesn't match the real tzfile.h in libc/time.  This makes the
tree safe for /usr/include/tzfile.h removal.  The TM_YEAR_BASE
define has been moved to time.h temporarily until its usage is
replaced by 1900 in the tree.  Actual removal of tzfile.h is pending
a ports build.  Based on a diff from deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: calendar.h,v 1.13 2010/04/28 18:20:15 jsg Exp $	*/
d35 1
d48 2
d52 1
a52 1
	char	print_date[31];
d60 1
a60 1
	char	print_date[30];
@


1.13
log
@shuffle extern decl of header[] so gcc4 doesn't complain about
incomplete types.

ok deraadt@@ 'Looks acceptable' miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: calendar.h,v 1.12 2005/08/09 12:32:58 mickey Exp $	*/
d97 3
@


1.12
log
@handle -A0 correctly; from koen@@egelink.nl
@
text
@d1 1
a1 1
/*	$OpenBSD: calendar.h,v 1.11 2004/12/10 20:47:30 mickey Exp $	*/
a36 1
extern struct iovec header[];
@


1.11
log
@define pesach (by gauss) and fix judaic calendar
@
text
@d1 1
a1 1
/*	$OpenBSD: calendar.h,v 1.10 2004/12/10 15:00:27 mickey Exp $	*/
d101 1
@


1.10
log
@allow calendar files in julian
@
text
@d1 1
a1 1
/*	$OpenBSD: calendar.h,v 1.9 2003/06/03 02:56:06 millert Exp $	*/
d78 1
d104 2
d115 1
a115 1
#define NUMEV 2	/* Total number of such special events */
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: calendar.h,v 1.8 2002/02/16 21:27:44 millert Exp $	*/
d107 4
@


1.8
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: calendar.h,v 1.7 2001/09/27 18:19:20 mickey Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.7
log
@some fixes and cleanups some from dfa@@solo.ee, some pointed
out by pjanzen@@ .
@
text
@d1 1
a1 1
/*	$OpenBSD: calendar.h,v 1.6 2001/09/26 20:38:55 mickey Exp $	*/
d73 1
a73 1
	int (*getev) __P((int));
d76 17
a92 17
void	 cal __P((void));
void	 closecal __P((FILE *));
int	 getday __P((char *));
int	 getdayvar __P((char *));
int	 getfield __P((char *, char **, int *));
int	 getmonth __P((char *));
int	 easter __P((int));
int	 paskha __P((int));
void	 insert __P((struct event **, struct event *));
struct match	*isnow __P((char *, int));
FILE	*opencal __P((void));
void	 settime __P((time_t *));
time_t	 Mktime __P((char *));
void	 usage __P((void));
int	 foy __P((int));
void	 variable_weekday __P((int *, int, int));
void	 setnnames __P((void));
@


1.6
log
@special procesing for cyrillic calendars (.ru, .ua, .by for now).
does not affect any existing behaviour for everything else.
old idea expressed by form@@; millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: calendar.h,v 1.5 2001/09/03 15:53:00 pjanzen Exp $	*/
d63 1
a63 1
	char	prefix[30];
@


1.5
log
@- Prevent users from hanging or killing 'calendar -a', at the cost of
one additional fork() per user who has a calendar file.  Side effect is
that root runs much less code.
- Use login caps so we don't, for example, give a user more processes than
he's allowed.
- tmpfile() rather than mkstemp() means never leaving junk behind.
- Don't let 'calendar -a' take more than a day.

Reviewed by millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: calendar.h,v 1.4 1998/12/13 07:31:07 pjanzen Exp $	*/
d39 1
d63 1
d85 1
a85 1
struct match	*isnow __P((char *));
@


1.4
log
@Show periodic events the correct number of times.
Calculate special events (Easter) correctly regardless of which year
they occur in (thus fixing user/562).
Keep locales and special event names from propogating from one user
to the next during "calendar -a".
Set up a framework to handle special events other than Easter (for instance,
Jewish events, eventually).
Various other fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: calendar.h,v 1.3 1998/11/08 04:31:13 pjanzen Exp $	*/
d43 1
d112 6
@


1.3
log
@Sort output by date; include framework for showing periodic events more than
once
@
text
@d1 1
a1 1
/*	$OpenBSD: calendar.h,v 1.2 1998/03/30 06:59:24 deraadt Exp $	*/
d39 1
d53 2
a54 1
	char	*desc;
d59 12
a70 2
	int year, month, day, var;
	struct match *next;
d79 2
a80 3
int	 geteaster __P((char *, int));
int      getpaskha __P((char *, int));
int      easter __P((int));
d84 2
a85 2
void	 settime __P((time_t));
time_t   Mktime __P((char *));
d87 3
a89 1
void     setnnames __P((void));
d94 4
a97 2
#define	F_ISDAYVAR	0x04 /* variables day of week, like SundayLast */
#define	F_EASTER	0x08 /* Easter or easter depending days */
d101 10
@


1.2
log
@Y2K fixes from Andreas.Gunnarsson@@emw.ericsson.se; culled from various places
@
text
@d1 1
a1 1
/*	$OpenBSD: calendar.h,v 1.1 1996/12/05 06:04:38 millert Exp $	*/
d44 17
d70 2
a71 1
int	 isnow __P((char *, int *, int *, int *));
a85 5

struct fixs {
	char *name;
	int len;
};
@


1.1
log
@FreeBSD calendar(1) + OpenBSD changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: $	*/
d66 2
a67 2
extern f_dayAfter; /* days after current date */
extern f_dayBefore; /* days bevore current date */
@

