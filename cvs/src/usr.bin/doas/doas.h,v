head	1.12;
access;
symbols
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4;
locks; strict;
comment	@ * @;


1.12
date	2016.10.05.17.40.25;	author tedu;	state Exp;
branches;
next	1.11;
commitid	LX6l0SvyemQxMchQ;

1.11
date	2016.10.05.17.36.53;	author tedu;	state Exp;
branches;
next	1.10;
commitid	82M7dxXP7itRBRZW;

1.10
date	2016.09.15.00.58.23;	author deraadt;	state Exp;
branches;
next	1.9;
commitid	jUUEan3Kanf6WvvC;

1.9
date	2016.09.02.18.12.30;	author tedu;	state Exp;
branches;
next	1.8;
commitid	6VZ1JPJuzXuXcUz8;

1.8
date	2016.06.19.19.29.43;	author martijn;	state Exp;
branches;
next	1.7;
commitid	vJP1y2NiYr0CmjHu;

1.7
date	2016.06.16.17.40.30;	author tedu;	state Exp;
branches;
next	1.6;
commitid	kwCFU8ML8KNeONv7;

1.6
date	2016.06.07.16.49.23;	author tedu;	state Exp;
branches;
next	1.5;
commitid	CRAPRajOEq58XUlb;

1.5
date	2016.06.05.00.46.34;	author djm;	state Exp;
branches;
next	1.4;
commitid	zmRA0Q6jBCGEttFd;

1.4
date	2015.07.24.06.36.42;	author zhuk;	state Exp;
branches;
next	1.3;
commitid	yfM2cEfXpqdeoUpn;

1.3
date	2015.07.21.11.04.06;	author zhuk;	state Exp;
branches;
next	1.2;
commitid	H7gCQhORmxwF32W8;

1.2
date	2015.07.18.07.49.16;	author bcallah;	state Exp;
branches;
next	1.1;
commitid	DWKbam7Z9ncW1hgO;

1.1
date	2015.07.16.20.44.21;	author tedu;	state Exp;
branches;
next	;
commitid	XJUTPk2EaAhf0EJC;


desc
@@


1.12
log
@move yyparse decl next to yyfp
@
text
@/* $OpenBSD: doas.h,v 1.11 2016/10/05 17:36:53 tedu Exp $ */
/*
 * Copyright (c) 2015 Ted Unangst <tedu@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

struct rule {
	int action;
	int options;
	const char *ident;
	const char *target;
	const char *cmd;
	const char **cmdargs;
	const char **envlist;
};

extern struct rule **rules;
extern int nrules;
extern int parse_errors;

char **prepenv(struct rule *);

#define PERMIT	1
#define DENY	2

#define NOPASS		0x1
#define KEEPENV		0x2
#define PERSIST		0x4
@


1.11
log
@as a result of the env rework, arraylen() is only used in parse.y.
move it there and make it static.
@
text
@d1 1
a1 1
/* $OpenBSD: doas.h,v 1.10 2016/09/15 00:58:23 deraadt Exp $ */
a32 2

int yyparse(void);
@


1.10
log
@use static in the right places to seperate modules better
ok tedu
@
text
@d1 1
a1 1
/* $OpenBSD: doas.h,v 1.9 2016/09/02 18:12:30 tedu Exp $ */
a30 2

size_t arraylen(const char **);
@


1.9
log
@add support for the verified auth ioctls using 'persist' rules.
ok deraadt henning
@
text
@d1 17
a17 1
/* $OpenBSD: doas.h,v 1.8 2016/06/19 19:29:43 martijn Exp $ */
d29 1
a29 1
extern int nrules, maxrules;
d35 2
@


1.8
log
@Move the RB_ code from doas.h to env.c, and limit the environment interface to a
simple prepenv function.

OK tedu@@
@
text
@d1 1
a1 1
/* $OpenBSD: doas.h,v 1.7 2016/06/16 17:40:30 tedu Exp $ */
d25 1
@


1.7
log
@the environment handling code was showing its age. just because environ
is a char** array doesn't mean we must exclusively operate on such.
convert to a red-black tree, manipulate as desired, then flatten to array.
potentially overkill for the current operations, but reading the tea leaves
i see that more manipulations are desired.
ok tb
(and some thought provoking disagreement from martijn)
@
text
@d1 1
a1 17
/* $OpenBSD: doas.h,v 1.6 2016/06/07 16:49:23 tedu Exp $ */

#include <sys/tree.h>

struct envnode {
	RB_ENTRY(envnode) node;
	const char *key;
	const char *value;
};

struct env {
	RB_HEAD(envtree, envnode) root;
	u_int count;
};

RB_PROTOTYPE(envtree, envnode, node, envcmp)

d18 1
a18 3
struct env *createenv(char **);
struct env *filterenv(struct env *, struct rule *);
char **flattenenv(struct env *);
@


1.6
log
@revert recent changes to allow setenv. everybody now has an idea about
how to do things better, so let's take a step back and reconsider.
@
text
@d1 16
a16 1
/* $OpenBSD: doas.h,v 1.4 2015/07/24 06:36:42 zhuk Exp $ */
d33 4
@


1.5
log
@add a doas.conf setenv directive that allows setting environment
variables explicitly and by copying existing environment variables
of a different name. E.g.

permit nopass setenv { PS1=$SUDO_PS1 FOO=bar } keepenv :wheel

ok tedu@@ benno@@
@
text
@a10 1
	const char **setenvlist;
a23 1
#define SETENV		0x4
@


1.4
log
@Further improve syntax error reporting in doas:

  - teach parser to recover after error, allowing to report many errors
    instead of the first one only;
  - fix remaining error printouts without exact position.

Some ideas were taken from diff sent by dlg@@ earlier, thanks!

okay tedu@@, dlg@@
@
text
@d1 1
a1 1
/* $OpenBSD: doas.h,v 1.3 2015/07/21 11:04:06 zhuk Exp $ */
d11 1
d25 1
@


1.3
log
@Add argument matching support to doas.

Input and generic support from many. Final okay from tedu@@.
@
text
@d1 1
a1 1
/* $OpenBSD: doas.h,v 1.2 2015/07/18 07:49:16 bcallah Exp $ */
d15 1
@


1.2
log
@Add RCS ID.
ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d9 1
@


1.1
log
@import doas. still subject to changes, large and small.
@
text
@d1 1
@

