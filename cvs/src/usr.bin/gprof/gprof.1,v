head	1.24;
access;
symbols
	OPENBSD_6_2_BASE:1.24
	OPENBSD_6_1:1.24.0.4
	OPENBSD_6_1_BASE:1.24
	OPENBSD_6_0:1.22.0.20
	OPENBSD_6_0_BASE:1.22
	OPENBSD_5_9:1.22.0.16
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.22.0.18
	OPENBSD_5_8_BASE:1.22
	OPENBSD_5_7:1.22.0.10
	OPENBSD_5_7_BASE:1.22
	OPENBSD_5_6:1.22.0.14
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.22.0.12
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.22.0.8
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.22.0.6
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.22.0.4
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.2
	OPENBSD_5_0:1.21.0.6
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.21.0.4
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.21.0.2
	OPENBSD_4_8_BASE:1.21
	OPENBSD_4_7:1.20.0.10
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.20.0.12
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.20.0.8
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.20.0.6
	OPENBSD_4_4_BASE:1.20
	OPENBSD_4_3:1.20.0.4
	OPENBSD_4_3_BASE:1.20
	OPENBSD_4_2:1.20.0.2
	OPENBSD_4_2_BASE:1.20
	OPENBSD_4_1:1.18.0.16
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.14
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.12
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.10
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.18.0.8
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.18.0.6
	OPENBSD_3_6_BASE:1.18
	OPENBSD_3_5:1.18.0.4
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	OPENBSD_3_3:1.17.0.2
	OPENBSD_3_3_BASE:1.17
	OPENBSD_3_2:1.16.0.6
	OPENBSD_3_2_BASE:1.16
	OPENBSD_3_1:1.16.0.4
	OPENBSD_3_1_BASE:1.16
	OPENBSD_3_0:1.16.0.2
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9_BASE:1.15
	OPENBSD_2_9:1.15.0.2
	OPENBSD_2_8:1.14.0.4
	OPENBSD_2_8_BASE:1.14
	OPENBSD_2_7:1.14.0.2
	OPENBSD_2_7_BASE:1.14
	OPENBSD_2_6:1.12.0.2
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.10.0.2
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.7.0.4
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.24
date	2016.10.06.07.17.06;	author jmc;	state Exp;
branches;
next	1.23;
commitid	iRkzWKaBOmzlQ8QA;

1.23
date	2016.09.21.05.57.32;	author jmc;	state Exp;
branches;
next	1.22;
commitid	gCpGjBNsOBB1PMje;

1.22
date	2011.12.23.17.00.47;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2010.05.25.06.43.56;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2007.05.31.19.20.10;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2007.04.14.11.16.28;	author sobrado;	state Exp;
branches;
next	1.18;

1.18
date	2003.06.03.02.56.08;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2003.03.11.08.11.08;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2001.05.01.17.58.02;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	2000.11.09.17.52.13;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	2000.03.07.21.11.09;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	2000.03.05.00.28.53;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	99.07.04.11.53.54;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	99.06.05.01.21.27;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	98.11.18.02.11.15;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	98.09.26.19.54.50;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	98.09.07.16.44.33;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	97.09.18.14.12.33;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.07.17.09.05.58;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.07.17.07.39.54;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.10.15.23.55.56;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.33.50;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.02.52.38;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.20;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.20;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.24
log
@remove some Xr that had no section numbers (since we don;t have the pages);
from a diff from anton lindqvist;
@
text
@.\"	$OpenBSD: gprof.1,v 1.23 2016/09/21 05:57:32 jmc Exp $
.\"	$NetBSD: gprof.1,v 1.6 1995/11/21 22:24:55 jtc Exp $
.\"
.\" Copyright (c) 1983, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)gprof.1	8.1 (Berkeley) 6/6/93
.\"
.Dd $Mdocdate: September 21 2016 $
.Dt GPROF 1
.Os
.Sh NAME
.Nm gprof
.Nd display call graph profile data
.Sh SYNOPSIS
.Nm gprof
.Op Fl abcsz
.Op Fl C Ar count
.Op Fl E Ar name
.Op Fl e Ar name
.Op Fl F Ar name
.Op Fl f Ar name
.Op Fl k Ar from-name to-name
.Op Ar a.out Op Ar gmon.out ...
.Sh DESCRIPTION
.Nm
produces an execution profile of C, Pascal, or Fortran77 programs.
The effect of called routines is incorporated in the profile of each caller.
The profile data is taken from the call graph profile file
.Pf ( Pa gmon.out
default) which is created by programs
that are compiled with the
.Fl pg
option of
.Xr cc 1 .
The
.Fl pg
option also links in versions of the library routines
that are compiled for profiling.
.Nm
reads the given object file (the default is
.Pa a.out )
and establishes the relation between its symbol table
and the call graph profile from
.Pa gmon.out .
If more than one profile file is specified,
the
.Nm
output shows the sum of the profile information in the given profile files.
.Pp
.Nm
calculates the amount of time spent in each routine.
Next, these times are propagated along the edges of the call graph.
Cycles are discovered, and calls into a cycle are made to share the time
of the cycle.
The first listing shows the functions
sorted according to the time they represent
including the time of their call graph descendants.
Below each function entry is shown its (direct) call graph children,
and how their times are propagated to this function.
A similar display above the function shows how this function's time and the
time of its descendants is propagated to its (direct) call graph parents.
.Pp
Cycles are also shown, with an entry for the cycle as a whole and
a listing of the members of the cycle and their contributions to the
time and call counts of the cycle.
.Pp
Second, a flat profile is given.
This listing gives the total execution times, the call counts,
the time in milliseconds the call spent in the routine itself, and
the time in milliseconds the call spent in the routine itself including
its descendants.
.Pp
Finally, an index of the function names is provided.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl a
Suppresses the printing of statically declared functions.
If this option is given, all relevant information about the static function
(e.g., time samples, calls to other functions, calls from other functions)
belongs to the function loaded just before the static function in the
.Pa a.out
file.
.It Fl b
Suppresses the printing of a description of each field in the profile.
.It Fl C Ar count
Find a minimal set of arcs that can be broken to eliminate all cycles with
.Ar count
or more members.
Caution: the algorithm used to break cycles is exponential,
so using this option may cause
.Nm
to run for a very long time.
.It Fl c
The static call graph of the program is discovered by a heuristic
that examines the text space of the object file.
Static-only parents or children are shown
with call counts of 0.
.It Fl E Ar name
Suppresses the printing of the graph profile entry for routine
.Ar name
and its descendants,
excluding the time spent in
.Ar name
and its descendants from the total and percentage time computations.
For example,
.Fl E
.Ar mcount
.Fl E
.Ar mcleanup
is the default.
.It Fl e Ar name
Suppresses the printing of the graph profile entry for routine
.Ar name
and its descendants
(unless they have other ancestors that aren't suppressed).
More than one
.Fl e
option may be given.
Only one
.Ar name
may be given with each
.Fl e
option.
.It Fl F Ar name
Prints the graph profile entry of only the routine
.Ar name
and its descendants,
using only the times of the printed routines
in total time and percentage computations.
More than one
.Fl F
option may be given.
Only one
.Ar name
may be given with each
.Fl F
option.
The
.Fl F
option
overrides
the
.Fl E
option.
.It Fl f Ar name
Prints the graph profile entry of only the specified routine
.Ar name
and its descendants.
More than one
.Fl f
option may be given.
Only one
.Ar name
may be given with each
.Fl f
option.
.It Fl k Ar from-name Ar to-name
Will delete any arcs from routine
.Ar from-name
to routine
.Ar to-name .
This can be used to break undesired cycles.
More than one
.Fl k
option may be given.
Only one pair of routine names may be given with each
.Fl k
option.
.It Fl s
A profile file
.Pa gmon.sum
is produced that represents
the sum of the profile information in all the specified profile files.
This summary profile file may be given to later
executions of
.Nm
(probably also with a
.Fl s )
to accumulate profile data across several runs of an
.Pa a.out
file.
.It Fl z
Displays routines that have zero usage (as shown by call counts
and accumulated time).
This is useful with the
.Fl c
option for discovering which routines were never called.
.El
.Sh ENVIRONMENT
.Bl -tag -width PROFDIR
.It Ev PROFDIR
Directory to place profiling information in a file named
.Pa pid.progname .
If it is set to a null value, no profiling information is output.
Otherwise, profiling information is placed in the file
.Pa gmon.out .
.El
.Sh FILES
.Bl -tag -width gmon.sum -compact
.It Pa a.out
namelist and text space
.It Pa gmon.out
dynamic call graph and profile
.It Pa gmon.sum
summarized dynamic call graph and profile
.El
.Sh SEE ALSO
.Xr cc 1 ,
.Xr profil 2 ,
.Xr moncontrol 3
.Rs
.%T "An Execution Profiler for Modular Programs"
.%A S. Graham
.%A P. Kessler
.%A M. McKusick
.%J "Software - Practice and Experience"
.%V 13
.%P pp. 671-685
.%D 1983
.Re
.Rs
.%T "gprof: A Call Graph Execution Profiler"
.%A S. Graham
.%A P. Kessler
.%A M. McKusick
.%J "Proceedings of the SIGPLAN '82 Symposium on Compiler Construction, SIGPLAN Notices"
.%V 17
.%N 6
.%P pp. 120-126
.%D June 1982
.Re
.Sh HISTORY
The
.Nm
profiler
appeared in
.Bx 4.2 .
.Sh BUGS
The granularity of the sampling is shown, but remains
statistical at best.
We assume that the time for each execution of a function
can be expressed by the total time for the function divided
by the number of times the function is called.
Thus the time propagated along the call graph arcs to the function's
parents is directly proportional to the number of times that
arc is traversed.
.Pp
Parents that are not themselves profiled will have the time of
their profiled children propagated to them, but they will appear
to be spontaneously invoked in the call graph listing, and will
not have their time propagated further.
Similarly, signal catchers, even though profiled, will appear
to be spontaneous (although for more obscure reasons).
Any profiled children of signal catchers should have their times
propagated properly, unless the signal catcher was invoked during
the execution of the profiling routine, in which case all is lost.
.Pp
The profiled program must call
.Xr exit 3
or return normally for the profiling information to be saved
in the
.Pa gmon.out
file.
@


1.23
log
@fix the signposting for -EeFf by partially rewriting the descriptions;
diff from guenther, tweaked by me;

ok guenther
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.22 2011/12/23 17:00:47 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: December 23 2011 $
d59 1
a59 4
.Xr cc 1 ,
.Xr pc ,
and
.Xr f77 .
d92 1
a92 3
Second, a flat profile is given,
similar to that provided by
.Xr prof .
@


1.22
log
@some spelling fixes, found using freebsd's "igor" document verifier;
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.21 2010/05/25 06:43:56 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 25 2010 $
a40 1
.Bk -words
a48 1
.Ek
d132 2
a133 3
(and its descendants) as
.Fl e ,
above, and also excludes the time spent in
d135 2
a136 2
(and its descendants) from the total and percentage time computations.
(For example,
d141 1
a141 1
is the default.)
d145 1
a145 1
and all its descendants
d158 2
a159 3
and its descendants (as
.Fl f ,
above) and also uses only the times of the printed routines
@


1.21
log
@no more f77;
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.20 2007/05/31 19:20:10 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d87 1
a87 1
including the time of their call graph descendents.
d91 1
a91 1
time of its descendents is propagated to its (direct) call graph parents.
d103 1
a103 1
its descendents.
@


1.20
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.19 2007/04/14 11:16:28 sobrado Exp $
d33 1
a33 1
.Dd $Mdocdate$
d64 1
a64 1
.Xr f77 1 .
@


1.19
log
@adds a detailed list of flags and arguments to the synopsis of gprof;
while here, alphabetically sorts the options list and slightly improves
the name of the arguments to -k

ok by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.18 2003/06/03 02:56:08 millert Exp $
d33 1
a33 1
.Dd June 6, 1993
@


1.18
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.17 2003/03/11 08:11:08 jmc Exp $
d41 8
a48 1
.Op options
d50 1
a117 5
.It Fl c
The static call graph of the program is discovered by a heuristic
that examines the text space of the object file.
Static-only parents or children are shown
with call counts of 0.
d126 5
a130 13
.It Fl e Ar name
Suppresses the printing of the graph profile entry for routine
.Ar name
and all its descendants
(unless they have other ancestors that aren't suppressed).
More than one
.Fl e
option may be given.
Only one
.Ar name
may be given with each
.Fl e
option.
d145 2
a146 2
.It Fl f Ar name
Prints the graph profile entry of only the specified routine
d148 2
a149 1
and its descendants.
d151 1
a151 1
.Fl f
d156 1
a156 1
.Fl f
d180 13
a192 1
.It Fl k Ar fromname Ar toname
d194 1
a194 1
.Ar fromname
d196 1
a196 1
.Ar toname .
@


1.17
log
@files with dead .Xr's;

left .Xr, but removed man page number
as suggested by mpech@@

more help and ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.16 2001/05/01 17:58:02 aaron Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.16
log
@Remove completely redundant introductory sentences in ENVIRONMENT sections.
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.15 2000/11/09 17:52:13 aaron Exp $
d58 1
a58 1
.Xr pc 1 ,
d95 1
a95 1
.Xr prof 1 .
@


1.15
log
@Change all option list specifications to ".Bl -tag -width Ds". Most man
pages just needed their -width parameter tweaked to "Ds", which provides
a nice width of 6 constant characters. For consistency more than anything.
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.14 2000/03/07 21:11:09 aaron Exp $
a220 2
The following environment variables affect the execution of
.Nm gprof :
@


1.14
log
@Various cleanup.
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.13 2000/03/05 00:28:53 aaron Exp $
d104 1
a104 1
.Bl -tag -width Fl
@


1.13
log
@Finish standardizing options list introduction.
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.12 1999/07/04 11:53:54 aaron Exp $
d67 1
a67 1
.Pa a.out)
d95 1
a95 1
.Xr prof  1  .
d144 1
a144 1
.Fl e  ,
d221 2
d225 1
a225 3
If the environment variable
.Ev PROFDIR
is set, profiling information is placed in that directory in a file named
@


1.12
log
@correct use of .Nm; some other formatting nits
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.11 1999/06/05 01:21:27 aaron Exp $
d103 1
a103 1
The following options are available:
@


1.11
log
@- remove trailing white space
- remove arguments from .Os macros
- remove arguments from .Nm macros, where appropriate
- some more Dq/Sq/Ql insanity
- still lots to do in the usr.bin tree... :/
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.10 1998/11/18 02:11:15 aaron Exp $
d48 1
a48 1
.Nm gprof
d65 1
a65 1
.Nm gprof
d73 1
a73 1
.Nm gprof
d76 1
a76 1
.Nm gprof
d125 1
a125 1
.Nm gprof
d207 1
a207 1
.Nm gprof
d267 1
a267 1
.Nm gprof
@


1.10
log
@remove empty reference to non-existent prof(1) page
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.9 1998/09/26 19:54:50 aaron Exp $
d39 1
a39 1
.Os BSD 4.2
d124 1
a124 1
so using this option may cause 
d127 1
a127 1
.It Fl e Ar name 
d140 1
a140 1
.It Fl E Ar name 
d154 1
a154 1
.It Fl f Ar name 
d166 1
a166 1
.It Fl F Ar name 
d188 1
a188 1
.It Fl k Ar fromname Ar toname 
@


1.9
log
@usr.bin/ man page fixes, f-m.
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.8 1998/09/07 16:44:33 aaron Exp $
a241 1
.Xr prof 1 ,
@


1.8
log
@More man page fixes. Particularly fix uses of it's/its, affect/effect,
then/than and such. Other miscellaneous problems fixed across these source
files.
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.7 1997/09/18 14:12:33 deraadt Exp $
d48 1
a48 1
.Nm Gprof
d65 1
a65 1
.Nm Gprof
d76 1
a76 1
.Nm Gprof
d206 3
a208 1
executions of gprof (probably also with a
d234 1
a234 1
The namelist and text space.
d236 1
a236 1
Dynamic call graph and profile.
d238 1
a238 1
Summarized dynamic call graph and profile.
d241 2
a242 1
.Xr moncontrol 3 ,
d244 1
a244 2
.Xr cc 1 ,
.Xr prof 1
@


1.7
log
@environment variables
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.6 1997/07/17 09:05:58 deraadt Exp $
d68 1
a68 1
and establishes the relation between it's symbol table
@


1.6
log
@Xr fix
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.5 1997/07/17 07:39:54 deraadt Exp $
d221 1
a221 1
If the environmental variable
@


1.5
log
@fix Xr
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.4 1996/10/15 23:55:56 deraadt Exp $
d239 1
a239 1
.Xr monitor 3 ,
@


1.4
log
@spelling error; from explorer
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.3 1996/06/26 05:33:50 deraadt Exp $
d291 1
a291 1
.Xr exit  2
@


1.3
log
@rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD: gprof.1,v 1.6 1995/11/21 22:24:55 jtc Exp $
d97 2
a98 2
the time in milleseconds the call spent in the routine itself, and
the time in milleseconds the call spent in the routine itself including
@


1.2
log
@from netbsd; Describe PROFDIR environment variable
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: gprof.1,v 1.5 1995/04/19 07:15:57 cgd Exp $
d216 11
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
