head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.32
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.28
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.24
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.26
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.18
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.22
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.20
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.16
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.12
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.10
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2009.10.27.23.59.38;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.25.19.06.36;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.04.16.24.45;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.08.16.46.35;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.20.03.37.40;	author tholo;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.25.16.30.55;	author danh;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.22.05.18.30;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.10.02.02.59.50;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.33.52;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.20;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.20;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.10
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@/*	$OpenBSD: i386.c,v 1.9 2006/03/25 19:06:36 espie Exp $	*/
/*	$NetBSD: i386.c,v 1.5 1995/04/19 07:16:04 cgd Exp $	*/

/*-
 * Copyright (c) 1996 SigmaSoft, Th. Lockert
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "gprof.h"

#define	iscall(off)	((*(u_char *)&textspace[off]) == 0xE8)

void
findcall(nltype *parentp, unsigned long p_lowpc, unsigned long p_highpc)
{
	unsigned long pc;
	long len;
	nltype *childp;
	unsigned long destpc;
	int off;

	if (textspace == 0)
		return;
	if (p_lowpc < s_lowpc)
		p_lowpc = s_lowpc;
	if (p_highpc > s_highpc)
		p_highpc = s_highpc;
#	ifdef DEBUG
		if ( debug & CALLDEBUG ) {
			printf( "[findcall] %s: 0x%x to 0x%x\n" ,
				parentp -> name , p_lowpc , p_highpc );
		}
#	endif /* DEBUG */
	for (pc = p_lowpc; pc < p_highpc; pc += len) {
		off = pc - s_lowpc;
		len = 1;
		if (iscall(off)) {
			destpc = *(unsigned long *)&textspace[off + 1] + off + 5;
#			ifdef DEBUG
				if ( debug & CALLDEBUG ) {
					printf( "[findcall]\t0x%x:calls" , pc - textspace );
					printf( "\tdestpc 0x%x" , destpc );
				}
#			endif /* DEBUG */
			if (destpc >= s_lowpc && destpc <= s_highpc) {
				childp = nllookup(destpc);
#				ifdef DEBUG
					if ( debug & CALLDEBUG ) {
						printf( " childp->name %s" , childp -> name );
						printf( " childp->value 0x%x\n" ,
							childp -> value );
					}
#				endif /* DEBUG */
				if (childp != NULL && childp->value == destpc) {
					addarc(parentp, childp, 0L);
					len += 4;
					continue;
				}
			}
#			ifdef DEBUG
				if ( debug & CALLDEBUG ) {
					printf( "\tbut it's a botch\n" );
				}
#			endif /* DEBUG */
		}
	}
}
@


1.9
log
@add missing prototypes all over the place, u_long -> unsigned long (userland
code).

okay kettenis@@, comments by ray@@
@
text
@d1 1
a1 1
/*	$OpenBSD: i386.c,v 1.8 2003/06/04 16:24:45 deraadt Exp $	*/
a27 4

#ifndef lint
static char rcsid[] = "$OpenBSD: i386.c,v 1.8 2003/06/04 16:24:45 deraadt Exp $";
#endif /* not lint */
@


1.8
log
@term 3 & 4 from tholo after permission
@
text
@d1 1
a1 1
/*	$OpenBSD: i386.c,v 1.7 2002/05/08 16:46:35 art Exp $	*/
d30 1
a30 1
static char rcsid[] = "$OpenBSD: i386.c,v 1.7 2002/05/08 16:46:35 art Exp $";
d38 1
a38 4
findcall( parentp , p_lowpc , p_highpc )
    nltype		*parentp;
    unsigned long	p_lowpc;
    unsigned long	p_highpc;
d62 1
a62 1
			destpc = *(u_long *)&textspace[off + 1] + off + 5;
@


1.7
log
@Split out symbol handling into a separate file.
Implement symbol handling for ELF (based on FreeBSD).
Implement dummy support for alpha, hppa, powerpc and sparc64.

Tested during the last 2 months on various archs (never comitted because
other stuff got in the way).
Some fixups to i386 support from mickey@@

This lets us switch all elf archs to this gprof.
@
text
@d1 1
a1 1
/*	$OpenBSD: i386.c,v 1.6 2002/04/20 03:37:40 tholo Exp $	*/
a15 2
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
d30 1
a30 1
static char rcsid[] = "$OpenBSD: i386.c,v 1.6 2002/04/20 03:37:40 tholo Exp $";
@


1.6
log
@Add missing copyright
@
text
@d1 1
a1 1
/*	$OpenBSD: i386.c,v 1.5 2002/03/25 16:30:55 danh Exp $	*/
d32 1
a32 1
static char rcsid[] = "$OpenBSD: i386.c,v 1.5 2002/03/25 16:30:55 danh Exp $";
d37 1
a37 1
#define	iscall(pc)	((*pc) == 0xE8)
d45 1
a45 1
	unsigned char *pc;
d49 1
d63 2
a64 1
	for (pc = textspace + p_lowpc - N_TXTADDR(xbuf) ; pc < textspace + p_highpc - N_TXTADDR(xbuf) ; pc += len) {
d66 2
a67 2
		if (iscall(pc)) {
			destpc = *(unsigned long *)(pc + 1) + (pc - textspace + N_TXTADDR(xbuf)) + 5;
@


1.5
log
@change the extra text following preprocessor directives into comments.
patch from David Krause <openbsd@@davidkrause.com>

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: i386.c,v 1.4 2001/03/22 05:18:30 mickey Exp $	*/
d4 27
d32 1
a32 1
static char rcsid[] = "$OpenBSD: i386.c,v 1.4 2001/03/22 05:18:30 mickey Exp $";
a38 3
/*
 * gprof -c isn't currently supported...
 */
@


1.4
log
@_wall, err/warn; dummy hppa part, like others
@
text
@d1 1
a1 1
/*	$OpenBSD: i386.c,v 1.3 1996/10/02 02:59:50 tholo Exp $	*/
d5 1
a5 1
static char rcsid[] = "$OpenBSD: i386.c,v 1.3 1996/10/02 02:59:50 tholo Exp $";
d37 1
a37 1
#	endif DEBUG
d47 1
a47 1
#			endif DEBUG
d56 1
a56 1
#				endif DEBUG
d67 1
a67 1
#			endif DEBUG
@


1.3
log
@Support for call graph detection using the -c options on i386
@
text
@d1 1
a1 1
/*	$OpenBSD: i386.c,v 1.2 1996/06/26 05:33:52 deraadt Exp $	*/
d5 1
a5 1
static char rcsid[] = "$OpenBSD: i386.c,v 1.2 1996/06/26 05:33:52 deraadt Exp $";
d15 1
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: i386.c,v 1.5 1995/04/19 07:16:04 cgd Exp $	*/
d5 1
a5 1
static char rcsid[] = "$OpenBSD: i386.c,v 1.5 1995/04/19 07:16:04 cgd Exp $";
d10 2
d20 49
@


1.1
log
@Initial revision
@
text
@d1 1
d5 1
a5 1
static char rcsid[] = "$NetBSD: i386.c,v 1.5 1995/04/19 07:16:04 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
