head	1.27;
access;
symbols
	OPENBSD_6_1:1.25.0.6
	OPENBSD_6_1_BASE:1.25
	OPENBSD_6_0:1.25.0.2
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.23.0.4
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.19.0.2
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.17.0.4
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.15.0.12
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.8
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.6
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.4
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.2
	OPENBSD_5_0:1.14.0.2
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.13.0.4
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.2
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4;
locks; strict;
comment	@ * @;


1.27
date	2017.04.29.12.43.55;	author schwarze;	state dead;
branches;
next	1.26;
commitid	7BLUwozNEzUO8xfK;

1.26
date	2017.04.24.23.06.09;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	2CfzvK3gmiJH7vY0;

1.25
date	2016.07.15.18.02.32;	author schwarze;	state Exp;
branches;
next	1.24;
commitid	NgDdzKtKRT5DJZ6U;

1.24
date	2015.10.06.18.30.43;	author schwarze;	state Exp;
branches;
next	1.23;
commitid	hxQV8O1pNUaef4ir;

1.23
date	2015.04.19.13.59.37;	author schwarze;	state Exp;
branches;
next	1.22;
commitid	aS3h5dIgZk0f7675;

1.22
date	2015.04.18.17.01.28;	author schwarze;	state Exp;
branches;
next	1.21;
commitid	GslLZJxifCkaUipL;

1.21
date	2015.04.02.22.06.17;	author schwarze;	state Exp;
branches;
next	1.20;
commitid	Rfx1oTaH3hZ7Zcyf;

1.20
date	2015.04.02.21.03.18;	author schwarze;	state Exp;
branches;
next	1.19;
commitid	lmErjWY2O9ooA6RY;

1.19
date	2014.12.01.08.05.02;	author schwarze;	state Exp;
branches;
next	1.18;
commitid	dkxNPoJe0koFMMLd;

1.18
date	2014.11.28.19.25.03;	author schwarze;	state Exp;
branches;
next	1.17;
commitid	1m1y3OocNVYDnyZE;

1.17
date	2014.04.20.16.44.44;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2014.03.21.22.17.01;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2011.09.18.15.54.48;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2011.04.24.16.22.02;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2010.07.31.23.42.04;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2010.05.23.22.45.00;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2010.05.16.00.54.03;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2010.05.14.01.54.37;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2010.04.25.16.32.19;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2010.03.26.01.22.05;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2009.10.19.10.20.24;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2009.09.21.21.11.37;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2009.08.22.23.17.40;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.23.22.43.30;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.18.23.34.53;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.14.23.00.57;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2009.04.06.20.30.40;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.27
log
@Parser unification: use nice ohashes for all three request and macro tables;
no functional change, minus two source files, minus 200 lines of code.
@
text
@/*	$OpenBSD: man_hash.c,v 1.26 2017/04/24 23:06:09 schwarze Exp $ */
/*
 * Copyright (c) 2008, 2009, 2010 Kristaps Dzonsons <kristaps@@bsd.lv>
 * Copyright (c) 2015, 2017 Ingo Schwarze <schwarze@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#include <sys/types.h>

#include <assert.h>
#include <ctype.h>
#include <limits.h>
#include <string.h>

#include "mandoc.h"
#include "roff.h"
#include "man.h"
#include "libmandoc.h"
#include "libman.h"

#define	HASH_DEPTH	 6

#define	HASH_ROW(x) do { \
		if (isupper((unsigned char)(x))) \
			(x) -= 65; \
		else \
			(x) -= 97; \
		(x) *= HASH_DEPTH; \
	} while (/* CONSTCOND */ 0)

/*
 * Lookup table is indexed first by lower-case first letter (plus one
 * for the period, which is stored in the last row), then by lower or
 * uppercase second letter.  Buckets correspond to the index of the
 * macro (the integer value of the enum stored as a char to save a bit
 * of space).
 */
static	unsigned char	 table[26 * HASH_DEPTH];


void
man_hash_init(void)
{
	int		 i, j, x;

	if (*table != '\0')
		return;

	memset(table, UCHAR_MAX, sizeof(table));

	for (i = 0; i < (int)(MAN_MAX - MAN_TH); i++) {
		x = *roff_name[MAN_TH + i];

		assert(isalpha((unsigned char)x));

		HASH_ROW(x);

		for (j = 0; j < HASH_DEPTH; j++)
			if (UCHAR_MAX == table[x + j]) {
				table[x + j] = (unsigned char)i;
				break;
			}

		assert(j < HASH_DEPTH);
	}
}

enum roff_tok
man_hash_find(const char *tmp)
{
	int		 x, y, i;

	if ('\0' == (x = tmp[0]))
		return TOKEN_NONE;
	if ( ! (isalpha((unsigned char)x)))
		return TOKEN_NONE;

	HASH_ROW(x);

	for (i = 0; i < HASH_DEPTH; i++) {
		if (UCHAR_MAX == (y = table[x + i]))
			return TOKEN_NONE;

		if (strcmp(tmp, roff_name[MAN_TH + y]) == 0)
			return MAN_TH + y;
	}

	return TOKEN_NONE;
}
@


1.26
log
@Continue parser unification:
* Make enum rofft an internal interface as enum roff_tok in "roff.h".
* Represent mdoc and man macros in enum roff_tok.
* Make TOKEN_NONE a proper enum value and use it throughout.
* Put the prologue macros first in the macro tables.
* Unify mdoc_macroname[] and man_macroname[] into roff_name[].
@
text
@d1 1
a1 1
/*	$OpenBSD: man_hash.c,v 1.25 2016/07/15 18:02:32 schwarze Exp $ */
@


1.25
log
@add missing prototypes, no code change;
noticed by Christos Zoulas with -Wmissing-prototypes
@
text
@d1 1
a1 1
/*	$OpenBSD: man_hash.c,v 1.24 2015/10/06 18:30:43 schwarze Exp $ */
d4 1
a4 1
 * Copyright (c) 2015 Ingo Schwarze <schwarze@@openbsd.org>
d61 2
a62 2
	for (i = 0; i < (int)MAN_MAX; i++) {
		x = man_macronames[i][0];
d78 1
a78 1
int
a81 1
	int		 tok;
d94 2
a95 3
		tok = y;
		if (0 == strcmp(tmp, man_macronames[tok]))
			return tok;
@


1.24
log
@modernize style: "return" is not a function; ok cmp(1)
@
text
@d1 1
a1 1
/*	$OpenBSD: man_hash.c,v 1.23 2015/04/19 13:59:37 schwarze Exp $ */
d25 1
d28 1
@


1.23
log
@Decouple the token code for "no request or macro" from the individual
high-level parsers to allow further unification of functions that
only need to recognize this code, but that don't care about different
high-level macrosets beyond that.
@
text
@d1 1
a1 1
/*	$OpenBSD: man_hash.c,v 1.22 2015/04/18 17:01:28 schwarze Exp $ */
d4 1
d83 1
a83 1
		return(TOKEN_NONE);
d85 1
a85 1
		return(TOKEN_NONE);
d91 1
a91 1
			return(TOKEN_NONE);
d95 1
a95 1
			return(tok);
d98 1
a98 1
	return(TOKEN_NONE);
@


1.22
log
@Move mdoc_hash_init() and man_hash_init() to libmandoc.h
and call them from mparse_alloc() and choose_parser(),
preparing unified allocation of struct roff_man.
@
text
@d1 1
a1 1
/*	$OpenBSD: man_hash.c,v 1.21 2015/04/02 22:06:17 schwarze Exp $ */
a57 2
	assert(MAN_MAX < UCHAR_MAX);

d82 1
a82 1
		return(MAN_MAX);
d84 1
a84 1
		return(MAN_MAX);
d90 1
a90 1
			return(MAN_MAX);
d97 1
a97 1
	return(MAN_MAX);
@


1.21
log
@Second step towards parser unification:
Replace struct mdoc_node and struct man_node by a unified struct roff_node.
To be able to use the tok member for both mdoc(7) and man(7) without
defining all the macros in roff.h, sacrifice a tiny bit of type safety
and make tok an int rather than an enum.
Almost mechanical, no functional change.
Written on the Eurostar from Bruxelles to London on the way to p2k15.
@
text
@d1 1
a1 1
/*	$OpenBSD: man_hash.c,v 1.20 2015/04/02 21:03:18 schwarze Exp $ */
a47 4
/*
 * XXX - this hash has global scope, so if intended for use as a library
 * with multiple callers, it will need re-invocation protection.
 */
d52 3
@


1.20
log
@First step towards parser unification:
Replace enum mdoc_type and enum man_type by a unified enum roff_type.
Almost mechanical, no functional change.
Written on the ICE train from Frankfurt to Bruxelles on the way to p2k15.
@
text
@d1 1
a1 1
/*	$OpenBSD: man_hash.c,v 1.19 2014/12/01 08:05:02 schwarze Exp $ */
d78 1
a78 1
enum mant
d82 1
a82 1
	enum mant	 tok;
d95 1
a95 1
		tok = (enum mant)y;
@


1.19
log
@header cleanup:
* add missing forward declarations
* remove needless header inclusions
* some style unification
@
text
@d1 1
a1 1
/*	$OpenBSD: man_hash.c,v 1.18 2014/11/28 19:25:03 schwarze Exp $ */
d24 1
@


1.18
log
@Add some missing OpenBSD RCS markers
and a few missing <sys/types.h> inclusions; no code change.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a24 1
#include "mandoc.h"
@


1.17
log
@KNF: case (FOO):  ->  case FOO, remove /* LINTED */ and /* ARGSUSED */,
remove trailing whitespace and blanks before tabs, improve some indenting;
no functional change
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.16 2014/03/21 22:17:01 schwarze Exp $ */
@


1.16
log
@The files mandoc.c and mandoc.h contained both specialised low-level
functions used for multiple languages (mdoc, man, roff), for example
mandoc_escape(), mandoc_getarg(), mandoc_eos(), and generic auxiliary
functions.  Split the auxiliaries out into their own file and header.
While here, do some #include cleanup.
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.15 2011/09/18 15:54:48 schwarze Exp $ */
d47 1
d59 1
a59 2
	assert(/* LINTED */ 
			MAN_MAX < UCHAR_MAX);
a76 1

@


1.15
log
@sync to version 1.11.7 from kristaps@@
main new feature: support the roff(7) .tr request
plus various bugfixes and some refactoring

regressions are so minor that it's better to get this in
and fix them in the tree
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.14 2011/04/24 16:22:02 schwarze Exp $ */
a21 1
#include <stdlib.h>
@


1.14
log
@Merge version 1.11.1:
Again lots of cleanup and maintenance work by kristaps@@.
- simplify error reporting: less function pointers, more mandoc_[v]msg
- main: split document parsing out of main.c into read.c
- roff, mdoc, man: improved recognition of control characters
- roff: better handling of if/else stack overflows
- roff: add some predefined strings for backward compatibility
- mdoc, man: empty sections are not errors
- mdoc: move delimiter handling to libmdoc
- some header restructuring and some minor features and fixes
This merge causes two minor regressions
that i will fix in separate commits right afterwards.
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.13 2010/07/31 23:42:04 schwarze Exp $ */
d29 1
a29 1
#define	HASH_DEPTH	 8
d32 1
a32 1
		if (isupper((u_char)(x))) \
d46 1
a46 1
static	u_char		 table[26 * HASH_DEPTH];
d65 1
a65 1
		assert(isalpha((u_char)x));
d71 1
a71 1
				table[x + j] = (u_char)i;
d88 1
a88 1
	if ( ! (isalpha((u_char)x)))
@


1.13
log
@Correct Copyright lines in the rarely touched files:
* add missing years (only where substantial changes were committed)
* update Kristaps' email address in the remaining places
No code changes.
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.12 2010/05/23 22:45:00 schwarze Exp $ */
d25 1
@


1.12
log
@Unified error and warning message system for all of mandoc,
featuring three message levels, as agreed during the mandoc hackathon:
* FATAL parser failure, cannot produce any output from this input file:
  eventually, we hope to convert most of these to ERRORs.
* ERROR, meaning mandoc cannot cope fully with the input syntax and will
  probably lose information or produce structurally garbled output;
  it will try to produce output anyway but exit non-zero at the end,
  which is eventually intended to make the ports infrastructure happy.
* WARNING, meaning you should clean up the input file, but output
  is probably mostly OK, so this will not cause error-exit at the end.
This commit is mostly just converting the old system to the new one; before
the classification will become really reliable, we must check all messages.

In particular,
* set up a new central message string table in main.c
* drop the old message string tables from man.c and mdoc.c
* get rid of the piece-meal merr enums in libman and libmdoc
* reduce number of error/warning functions from 16 to 6 (still a lot...)

While here, handle a few problems more gracefully:
* allow .Rv and .Ex to work without a prior .Nm
* allow .An to ignore extra arguments
* allow undeclared columns in .Bl -column

Written by kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.11 2010/05/16 00:54:03 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2008, 2009 Kristaps Dzonsons <kristaps@@kth.se>
@


1.11
log
@In theory, Kristaps never intended to write a roff parser,
but in practice, most real legacy man(7)uals are using so much
low level roff that we can't really get away without at least
partially handling some roff instructions.

As doing this in man(7) only has become messy and as even some
mdoc(7) pages need it, start a minimal partial roff preprocessor.
As a first step, move handling of .am[i], .de[i] and .ig there.
Do not use the roff preprocessor for new manuals!

Now that we have three main parser libraries - roff, man and mdoc -
each one having its own error handling is becoming messy, too.
Thus, start unifying message handling in one central place,
introducing a new generic function mmsg().

coded by kristaps@@
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.10 2010/05/14 01:54:37 schwarze Exp $ */
d25 1
@


1.10
log
@merge 1.9.24, keeping local patches; some changes:
* preserve multiple consecutive space characters in input
* do not restrict .Cd and .Rv to certain sections (requested by Joerg)
* do not run lookup() on quoted words
* enum return types for mdoc_args and mdoc_argv
* fix auto-closing of LINK tag in -Txhtml (from Daniel Friesel)
* various lint and manual fixes
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.9 2010/04/25 16:32:19 schwarze Exp $ */
d30 1
a30 3
		if ('.' == (x)) \
			(x) = 26; \
		else if (isupper((u_char)(x))) \
d44 1
a44 1
static	u_char		 table[27 * HASH_DEPTH];
d63 1
a63 1
		assert(isalpha((u_char)x) || '.' == x);
d86 1
a86 1
	if ( ! (isalpha((u_char)x) || '.' == x))
@


1.9
log
@Implement roff conditional instructions .if .ie .el, in man(7) only for now;
fixing OpenBSD::PackageName(3p) and friends for espie@@.
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.8 2010/03/26 01:22:05 schwarze Exp $ */
d59 2
a60 1
	assert(/* CONSTCOND */ MAN_MAX < UCHAR_MAX);
d62 1
a62 1
	for (i = 0; i < MAN_MAX; i++) {
@


1.8
log
@merge 1.9.17, keeping local patches

* much improved pod2man support and low-level roff robustness
* have -Tlint imply -Wall and -fstrict
* use fewer macros and more enum in libman
* and various bug fixes
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.7 2009/10/19 10:20:24 schwarze Exp $ */
d27 1
a27 1
#define	HASH_DEPTH	 6
@


1.7
log
@sync to 1.9.6: u_char lives in <sys/types.h>
noticed by uqs at spoerlein dot net on FreeBSD,
where <stdlib.h> does not include <sys/types.h>
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.6 2009/09/21 21:11:37 schwarze Exp $ */
d20 1
d27 20
a46 1
static	u_char		table[26 * 6];
d59 2
a62 2
		assert((x >= 65 && x <= 90) ||
				(x >= 97 && x <= 122));
d64 1
a64 2
		x -= (x <= 90) ? 65 : 97;
		x *= 6;
d66 3
a68 1
		for (j = 0; j < 6; j++)
d73 2
a74 1
		assert(j < 6);
d78 2
a79 1
int
d82 2
a83 1
	int		 x, i, tok;
d85 1
a85 1
	if (0 == (x = tmp[0]))
d87 1
a87 1
	if ( ! ((x >= 65 && x <= 90) || (x >= 97 && x <= 122)))
d90 1
a90 2
	x -= (x <= 90) ? 65 : 97;
	x *= 6;
d92 2
a93 2
	for (i = 0; i < 6; i++) {
		if (UCHAR_MAX == (tok = table[x + i]))
d95 2
@


1.6
log
@sync to 1.9.5: lookup hashes are now static tables
shortening the code, and, according to kristaps@@, speeding it up
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.5 2009/08/22 23:17:40 schwarze Exp $ */
d17 2
@


1.5
log
@another large chunk of -man updates,
among others regarding .DT, .HP, .RS, .RE, .SH, .SS, and scoping,
now in sync vith release 1.9.1
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.4 2009/06/23 22:43:30 schwarze Exp $ */
d18 1
d24 1
d26 4
a29 1
/* ARGUSED */
d31 1
a31 10
man_hash_free(void *htab)
{

	free(htab);
}


/* ARGUSED */
void *
man_hash_alloc(void)
a32 1
	int		*htab;
d35 1
a35 7
	/* Initialised to -1. */

	htab = malloc(26 * 6 * sizeof(int));
	if (NULL == htab)
		return(NULL);
	for (i = 0; i < 26 * 6; i++)
		htab[i] = -1;
a38 1

d46 2
a47 2
			if (-1 == htab[x + j]) {
				htab[x + j] = i;
a49 1

a51 2

	return((void *)htab);
a53 1

d55 1
a55 1
man_hash_find(const void *arg, const char *tmp)
a57 3
	const int	*htab;

	htab = (const int *)arg;
d68 1
a68 1
		if (-1 == (tok = htab[x + i]))
a75 1

@


1.4
log
@sync to 1.7.20: fix .br support in -man
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.3 2009/06/18 23:34:53 schwarze Exp $ */
d42 1
a42 1
	htab = malloc(26 * 5 * sizeof(int));
d45 1
a45 1
	for (i = 0; i < 26 * 5; i++)
d55 1
a55 1
		x *= 5;
d57 1
a57 1
		for (j = 0; j < 5; j++)
d63 1
a63 1
		assert(j < 5);
d84 1
a84 1
	x *= 5;
d86 1
a86 1
	for (i = 0; i < 5; i++) {
@


1.3
log
@sync to 1.7.19: improved comment handling
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.2 2009/06/14 23:00:57 schwarze Exp $ */
d40 3
a42 1
	htab = calloc(26 * 5, sizeof(int));
d45 2
d58 1
a58 1
			if (0 == htab[x + j]) {
d87 1
a87 1
		if (0 == (tok = htab[x + i]))
@


1.2
log
@sync to 1.7.16: comments, whitespace and spelling fixes; no functional change
@
text
@d1 1
a1 1
/*	$Id: man_hash.c,v 1.8 2009/06/10 20:18:43 kristaps Exp $ */
d44 1
a44 1
	for (i = 1; i < MAN_MAX; i++) {
@


1.1
log
@Initial check-in of mandoc for formatting manuals. ok deraadt@@
@
text
@d1 1
a1 1
/* $Id: man_hash.c,v 1.6 2009/04/05 16:34:22 kristaps Exp $ */
d3 1
a3 1
 * Copyright (c) 2008, 2009 Kristaps Dzonsons <kristaps@@openbsd.org>
d6 2
a7 3
 * purpose with or without fee is hereby granted, provided that the
 * above copyright notice and this permission notice appear in all
 * copies.
d9 7
a15 8
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
 * AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
@

