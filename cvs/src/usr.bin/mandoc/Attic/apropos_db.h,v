head	1.12;
access;
symbols
	OPENBSD_5_4:1.11.0.6
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.4
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.2
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2;
locks; strict;
comment	@ * @;


1.12
date	2013.12.31.00.40.19;	author schwarze;	state dead;
branches;
next	1.11;

1.11
date	2012.04.15.11.54.47;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2011.12.19.02.26.33;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2011.11.28.00.16.38;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2011.11.27.23.11.32;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2011.11.26.16.41.35;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2011.11.18.01.10.03;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.17.14.52.32;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2011.11.16.13.23.27;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.13.11.07.10;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.13.10.40.52;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.13.10.28.38;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Replace the Berkeley-DB based mandocdb(8) by an SQLite3-based version,
aiming for more flexible development and optimization options.
Kristaps started this during the summer 2012, i did some very heavy
bugfixing during t2k13 and finally, during the last few days,
got it to a state where it is ripe for in-tree development.
Beware, neither the user interfaces nor the database formats
are expected to be stable just yet.

Will not be installed or activated until further discussion.
No functional change to mandoc(1).

"As long as it remains off until we decide the cost, fine." deraadt@@
@
text
@/*	$Id: apropos_db.h,v 1.11 2012/04/15 11:54:47 schwarze Exp $ */
/*
 * Copyright (c) 2011, 2012 Kristaps Dzonsons <kristaps@@bsd.lv>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#ifndef APROPOS_H
#define APROPOS_H

enum	restype {
	RESTYPE_MAN, /* man(7) file */
	RESTYPE_MDOC, /* mdoc(7) file */
	RESTYPE_CAT /* pre-formatted file */
};

struct	res {
	enum restype	 type; /* input file type */
	char		*file; /* file in file-system */
	char		*cat; /* category (3p, 3, etc.) */
	char		*title; /* title (FOO, etc.) */
	char		*arch; /* arch (or empty string) */
	char		*desc; /* description (from Nd) */
	unsigned int	 rec; /* record in index */
	/*
	 * The index volume.  This indexes into the array of directories
	 * searched for manual page databases.
	 */
	unsigned int	 volume;
	/*
	 * The following fields are used internally.
	 *
	 * Maintain a binary tree for checking the uniqueness of `rec'
	 * when adding elements to the results array.
	 * Since the results array is dynamic, use offset in the array
	 * instead of a pointer to the structure.
	 */
	int		 lhs;
	int		 rhs;
	int		 matched; /* expression is true */
	int		*matches; /* partial truth evaluations */
};

struct	opts {
	const char	*arch; /* restrict to architecture */
	const char	*cat; /* restrict to manual section */
};

__BEGIN_DECLS

struct	expr;

int		 apropos_search(int, char **, const struct opts *,
			const struct expr *, size_t, 
			void *, size_t *, struct res **,
			void (*)(struct res *, size_t, void *));
struct	expr	*exprcomp(int, char *[], size_t *);
void		 exprfree(struct expr *);
void	 	 resfree(struct res *, size_t);
struct	expr	*termcomp(int, char *[], size_t *);

__END_DECLS

#endif /*!APROPOS_H*/
@


1.11
log
@Simplify by not pre-filtering the result vector for satisfied matches:
we can do this in the frontend; from kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: apropos_db.h,v 1.10 2011/12/19 02:26:33 schwarze Exp $ */
@


1.10
log
@Improvements from kristaps@@:
(1) Make the database format simpler and smaller by
- storing the file type as a single character and
- storing paths relative to the dir containing the database.
The latter allows to move trees around.
Both together typically save 15-25% of the index size.
(2) Make sure apropos(1) "any" really covers all search keys.
(3) Make manpath_parseline() static, drop manpath_parseconf() completely.
@
text
@d1 1
a1 1
/*	$Id: apropos_db.h,v 1.9 2011/11/28 00:16:38 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
d39 12
d62 3
a64 2
int	 	 apropos_search(int, char **, const struct opts *,
			const struct expr *, size_t, void *,
d68 1
@


1.9
log
@Implement whatis(1) as a special apropos(1) mode as a part of
the mandoc(1) binary; not yet enabled for the general public.
Intended to replace src/usr.bin/whatis at a later time.
Coded by kristaps@@, with a few tweaks by me.

To test this:
 $ mandocdb  # unless you have already done so earlier
 $ sudo ln -s /usr/bin/mandoc /usr/bin/whatis.m
 $ whatis.m mandoc apropos whatis
 $ whatis.m man
@
text
@d1 1
a1 1
/*	$Id: apropos_db.h,v 1.8 2011/11/27 23:11:32 schwarze Exp $ */
d20 6
d27 1
a27 1
	char		*type; /* file type: mdoc, man or cat */
@


1.8
log
@Save the manual type (mdoc, man, or cat) in the index file
of the mandoc databases, as suggested by kristaps@@.
Given the well-structured code, this is surprisingly simple.

This changes the mandoc.index database format.
Run "sudo mandocdb" to regenerate your databases.
@
text
@d1 1
a1 1
/*	$Id: apropos_db.h,v 1.7 2011/11/26 16:41:35 schwarze Exp $ */
d49 1
@


1.7
log
@Resync to bsd.lv, most code from kristaps@@.
In particular, support the MANPATH environment variable
and don't confuse index record numbers when working with
multiple mandoc databases at once.
Besides, remove lots of gratuitious code and whitespace differences.
@
text
@d1 1
a1 1
/*	$Id: apropos_db.h,v 1.6 2011/11/18 01:10:03 schwarze Exp $ */
d21 1
@


1.6
log
@Support parenthised subexpressions in apropos(1);
written by kristaps@@, massive conflict resolution by me.
Lightly tested, putting it in for polishing it in-tree.
This concludes p2k11 for me, thanks robert@@!
@
text
@d1 1
a1 1
/*	$Id: apropos_db.h,v 1.5 2011/11/17 14:52:32 schwarze Exp $ */
d27 5
d43 2
a44 2
int	 	 apropos_search(int, char **, const struct opts *, 
			const struct expr *, size_t, void *, 
@


1.5
log
@Minimal man.conf(5) _whatdb support for mandocdb(8) and apropos(1),
and add the standard options -M and -m to apropos(1).
Including a bugfix to prevent mandocdb(8) from leaking
database file descriptors.
@
text
@d1 1
a1 1
/*	$Id: apropos_db.h,v 1.4 2011/11/16 13:23:27 schwarze Exp $ */
d20 1
a20 1
struct	rec {
a26 11
	/*
	 * By the time the apropos_search() callback is called, these
	 * are superfluous.
	 * Maintain a binary tree for checking the uniqueness of `rec'
	 * when adding elements to the results array.
	 * Since the results array is dynamic, use offset in the array
	 * instead of a pointer to the structure.
	 */
	int		 lhs;
	int		 rhs;
	int		*matches;
d38 1
a38 1
void	 	 apropos_search(int, char **, const struct opts *, 
d40 1
a40 1
			void (*)(struct rec *, size_t, void *));
@


1.4
log
@Support multiple search terms, and logical operations -a and -o
to combine them.  The default remains -o; usual precedence applies.
No explicit grouping by parentheses yet.
from kristaps@@
@
text
@d1 1
a1 1
/*	$Id: apropos_db.h,v 1.3 2011/11/13 11:07:10 schwarze Exp $ */
d49 1
a49 1
void	 	 apropos_search(const struct opts *, 
@


1.3
log
@Rewrite the expression parser for a more concise syntax:

 apropos [search_type[,...]=]substring
 apropos search_type[,...][,i]~regex

... and expression evaluation must take the search type into account.

This allows to:
* drop the global -I option and
* drop the enum match, just using a boolean int.

"go ahead" kristaps@@
@
text
@d1 1
a1 1
/*	$Id: apropos_db.h,v 1.2 2011/11/13 10:40:52 schwarze Exp $ */
d37 1
d50 1
a50 1
			const struct expr *, void *, 
d52 1
a52 2

struct	expr	*exprcomp(int, char *[]);
@


1.2
log
@Inventing new keywords for mostly the same thing when a well-established
set of keywords already exists is a bad idea, so reuse the mdoc(7)
macro names as apropos(1) search types.  This is a gain in brevity
as well.  Some time ago, kristaps@@ agreed in principle.

The search type bit field constants are used by both mandocdb(8) and
apropos(1) and should better stay in sync, so give them their own
header file.
@
text
@d1 1
a1 1
/*	$Id: apropos_db.h,v 1.1 2011/11/13 10:28:38 schwarze Exp $ */
d52 1
a52 1
struct	expr	*exprcomp(int, char *[], int);
@


1.1
log
@Split the common code to be reused by other mandocdb clients,
for example the future man.cgi, out of apropos.c (which still
contains the apropos(1) main program, command line handling, and
the terminal output formatter) into apropos_db.{h,c} (which now
contains the database searching backend code).

... and actually commit the two new files.  Oops.
@
text
@d1 1
a1 1
/*	$Id: apropos.h,v 1.1 2011/11/09 01:24:23 kristaps Exp $ */
a18 14

#define TYPE_NAME	  0x01
#define TYPE_FUNCTION	  0x02
#define TYPE_UTILITY	  0x04
#define TYPE_INCLUDES	  0x08
#define TYPE_VARIABLE	  0x10
#define TYPE_STANDARD	  0x20
#define TYPE_AUTHOR	  0x40
#define TYPE_CONFIG	  0x80
#define TYPE_DESC	  0x100
#define TYPE_XREF	  0x200
#define TYPE_PATH	  0x400
#define TYPE_ENV	  0x800
#define TYPE_ERR	  0x1000
@

