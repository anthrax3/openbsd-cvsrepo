head	1.23;
access;
symbols
	OPENBSD_4_9:1.21.0.2
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.13.0.2
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2;
locks; strict;
comment	@.\" @;


1.23
date	2011.04.24.16.22.02;	author schwarze;	state dead;
branches;
next	1.22;

1.22
date	2011.03.20.23.36.42;	author schwarze;	state Exp;
branches;
next	1.21;

1.21
date	2011.01.09.13.16.48;	author schwarze;	state Exp;
branches;
next	1.20;

1.20
date	2011.01.04.22.28.17;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2010.12.22.00.33.25;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2010.12.07.00.08.52;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2010.11.29.02.26.45;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2010.10.23.17.11.31;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2010.08.20.00.53.35;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2010.08.18.02.46.37;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2010.07.13.01.09.12;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2010.06.27.21.54.42;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2010.05.26.02.55.16;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2010.05.14.01.54.37;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2010.04.04.13.41.23;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2010.03.29.22.56.52;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2010.02.18.02.11.26;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2009.10.20.10.15.04;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2009.08.22.20.14.37;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2009.08.09.17.20.17;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2009.07.08.00.20.13;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.14.23.00.57;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2009.04.06.20.30.40;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Merge version 1.11.1:
Again lots of cleanup and maintenance work by kristaps@@.
- simplify error reporting: less function pointers, more mandoc_[v]msg
- main: split document parsing out of main.c into read.c
- roff, mdoc, man: improved recognition of control characters
- roff: better handling of if/else stack overflows
- roff: add some predefined strings for backward compatibility
- mdoc, man: empty sections are not errors
- mdoc: move delimiter handling to libmdoc
- some header restructuring and some minor features and fixes
This merge causes two minor regressions
that i will fix in separate commits right afterwards.
@
text
@.\"	$Id: man.3,v 1.22 2011/03/20 23:36:42 schwarze Exp $
.\"
.\" Copyright (c) 2009, 2010, 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: March 20 2011 $
.Dt MAN 3
.Os
.Sh NAME
.Nm man ,
.Nm man_addeqn ,
.Nm man_addspan ,
.Nm man_alloc ,
.Nm man_endparse ,
.Nm man_free ,
.Nm man_meta ,
.Nm man_node ,
.Nm man_parseln ,
.Nm man_reset
.Nd man macro compiler library
.Sh SYNOPSIS
.In mandoc.h
.In man.h
.Vt extern const char * const * man_macronames;
.Ft int
.Fo man_addeqn
.Fa "struct man *man"
.Fa "const struct eqn *eqn"
.Fc
.Ft int
.Fo man_addspan
.Fa "struct man *man"
.Fa "const struct tbl_span *span"
.Fc
.Ft "struct man *"
.Fo man_alloc
.Fa "struct regset *regs"
.Fa "void *data"
.Fa "mandocmsg msgs"
.Fc
.Ft int
.Fn man_endparse "struct man *man"
.Ft void
.Fn man_free "struct man *man"
.Ft "const struct man_meta *"
.Fn man_meta "const struct man *man"
.Ft "const struct man_node *"
.Fn man_node "const struct man *man"
.Ft int
.Fo man_parseln
.Fa "struct man *man"
.Fa "int line"
.Fa "char *buf"
.Fc
.Ft void
.Fn man_reset "struct man *man"
.Sh DESCRIPTION
The
.Nm
library parses lines of
.Xr man 7
input into an abstract syntax tree (AST).
.Pp
In general, applications initiate a parsing sequence with
.Fn man_alloc ,
parse each line in a document with
.Fn man_parseln ,
close the parsing session with
.Fn man_endparse ,
operate over the syntax tree returned by
.Fn man_node
and
.Fn man_meta ,
then free all allocated memory with
.Fn man_free .
The
.Fn man_reset
function may be used in order to reset the parser for another input
sequence.
.Pp
Beyond the full set of macros defined in
.Xr man 7 ,
the
.Nm
library also accepts the following macro:
.Pp
.Bl -tag -width Ds -compact
.It PD
Has no effect.
Handled as a current-scope line macro.
.El
.Ss Types
.Bl -ohang
.It Vt struct man
An opaque type.
Its values are only used privately within the library.
.It Vt struct man_node
A parsed node.
See
.Sx Abstract Syntax Tree
for details.
.El
.Ss Functions
If
.Fn man_addeqn ,
.Fn man_addspan ,
.Fn man_parseln ,
or
.Fn man_endparse
return 0, calls to any function but
.Fn man_reset
or
.Fn man_free
will raise an assertion.
.Bl -ohang
.It Fn man_addeqn
Add an equation to the parsing stream.
Returns 0 on failure, 1 on success.
.It Fn man_addspan
Add a table span to the parsing stream.
Returns 0 on failure, 1 on success.
.It Fn man_alloc
Allocates a parsing structure.
The
.Fa data
pointer is passed to
.Fa msgs .
Always returns a valid pointer.
The pointer must be freed with
.Fn man_free .
.It Fn man_reset
Reset the parser for another parse routine.
After its use,
.Fn man_parseln
behaves as if invoked for the first time.
.It Fn man_free
Free all resources of a parser.
The pointer is no longer valid after invocation.
.It Fn man_parseln
Parse a nil-terminated line of input.
This line should not contain the trailing newline.
Returns 0 on failure, 1 on success.
The input buffer
.Fa buf
is modified by this function.
.It Fn man_endparse
Signals that the parse is complete.
Returns 0 on failure, 1 on success.
.It Fn man_node
Returns the first node of the parse.
.It Fn man_meta
Returns the document's parsed meta-data.
.El
.Ss Variables
The following variables are also defined:
.Bl -ohang
.It Va man_macronames
An array of string-ified token names.
.El
.Ss Abstract Syntax Tree
The
.Nm
functions produce an abstract syntax tree (AST) describing input in a
regular form.
It may be reviewed at any time with
.Fn man_nodes ;
however, if called before
.Fn man_endparse ,
or after
.Fn man_endparse
or
.Fn man_parseln
fail, it may be incomplete.
.Pp
This AST is governed by the ontological rules dictated in
.Xr man 7
and derives its terminology accordingly.
.Pp
The AST is composed of
.Vt struct man_node
nodes with element, root and text types as declared by the
.Va type
field.
Each node also provides its parse point (the
.Va line ,
.Va sec ,
and
.Va pos
fields), its position in the tree (the
.Va parent ,
.Va child ,
.Va next
and
.Va prev
fields) and some type-specific data.
.Pp
The tree itself is arranged according to the following normal form,
where capitalised non-terminals represent nodes.
.Pp
.Bl -tag -width "ELEMENTXX" -compact
.It ROOT
\(<- mnode+
.It mnode
\(<- ELEMENT | TEXT | BLOCK
.It BLOCK
\(<- HEAD BODY
.It HEAD
\(<- mnode*
.It BODY
\(<- mnode*
.It ELEMENT
\(<- ELEMENT | TEXT*
.It TEXT
\(<- [[:alpha:]]*
.El
.Pp
The only elements capable of nesting other elements are those with
next-lint scope as documented in
.Xr man 7 .
.Sh EXAMPLES
The following example reads lines from stdin and parses them, operating
on the finished parse tree with
.Fn parsed .
This example does not error-check nor free memory upon failure.
.Bd -literal -offset indent
struct regset regs;
struct man *man;
struct man_node *node;
char *buf;
size_t len;
int line;

bzero(&regs, sizeof(struct regset));
line = 1;
man = man_alloc(&regs, NULL, NULL);
buf = NULL;
alloc_len = 0;

while ((len = getline(&buf, &alloc_len, stdin)) >= 0) {
    if (len && buflen[len - 1] = '\en')
        buf[len - 1] = '\e0';
    if ( ! man_parseln(man, line, buf))
        errx(1, "man_parseln");
    line++;
}

free(buf);

if ( ! man_endparse(man))
    errx(1, "man_endparse");
if (NULL == (node = man_node(man)))
    errx(1, "man_node");

parsed(man, node);
man_free(man);
.Ed
.Pp
To compile this, execute
.Pp
.Dl % cc main.c libman.a libmandoc.a
.Pp
where
.Pa main.c
is the example file.
.Sh SEE ALSO
.Xr mandoc 1 ,
.Xr man 7
.Sh AUTHORS
The
.Nm
library was written by
.An Kristaps Dzonsons Aq kristaps@@bsd.lv .
@


1.22
log
@Import the foundation for eqn(7) support.
Written by kristaps@@.

For now, i'm adding one line to each of the four frontends
to just pass the input text through to the output,
not yet interpreting any of then eqn keywords.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.21 2011/01/09 13:16:48 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: January 9 2011 $
@


1.21
log
@Make sure coding errors cannot make us miss fatal parsing errors
by assert(3)ing valid parser state in the main parsing functions;
from kristaps@@.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.20 2011/01/04 22:28:17 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: January 4 2011 $
d22 2
d37 5
d116 1
d127 3
@


1.20
log
@Merge kristaps@@' cleaner tbl integration, removing mine;
there are still a few bugs, but fixing these will be easier in tree.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.19 2010/12/22 00:33:25 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: December 22 2010 $
d108 10
d128 2
a129 2
Returns NULL on failure.
If non-NULL, the pointer must be freed with
a147 5
Note that if
.Fn man_endparse
is called subsequent to
.Fn man_node ,
the resulting tree is incomplete.
a150 5
Note that if
.Fn man_parseln
or
.Fn man_endparse
return 0, the tree will be incomplete.
a152 5
If this information has not yet been supplied or
.Fn man_parseln
or
.Fn man_endparse
return 0, the data will be incomplete.
@


1.19
log
@More small -Thtml improvements by kristaps@@,
in particular, use <B>, <I> and <U> where appropriate.
Provide relative widths for header and footer lines.
Manuals: More concise short descriptions of output modes.
Correct a few places still talking about CSS2 to say CSS1.
Code examples should use .Dl, not .D1.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.18 2010/12/07 00:08:52 schwarze Exp $
d3 1
a3 1
.\" Copyright (c) 2009-2010 Kristaps Dzonsons <kristaps@@bsd.lv>
d17 1
a17 1
.Dd $Mdocdate: December 7 2010 $
d34 5
d109 3
@


1.18
log
@Complete the merge of bsd.lv version 1.10.7:
No more functional changes, just sync ordering, comments and white space.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.17 2010/11/29 02:26:45 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: November 29 2010 $
d257 1
a257 1
.D1 % cc main.c libman.a libmandoc.a
@


1.17
log
@Now that we have proper .de support in the roff(7) library,
it is time to remove the .Sp, .Vb, and .Ve kludge
that was added to the man(7) library to build Perl manuals.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.16 2010/10/23 17:11:31 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: October 23 2010 $
d88 2
a89 1
Has no effect.  Handled as a current-scope line macro.
@


1.16
log
@sync library manuals to bsd.lv
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.15 2010/08/20 00:53:35 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: August 20 2010 $
d84 1
a84 1
library also accepts the following macros:
a88 17
.It Sp
A synonym for
.Sq sp 0.5v
.Pq part of the standard preamble for Perl documentation .
Handled as a line macro.
.It Vb
A synonym for
.Sq nf
.Pq part of the standard preamble for Perl documentation .
Handled as a current-scope line macro.
.It Ve
A synonym for
.Sq fi ,
closing
.Sq Vb
.Pq part of the standard preamble for Perl documentation .
Handled as a current-scope line macro.
@


1.15
log
@Implement a simple, consistent user interface for error handling.
We now have sufficient practical experience to know what we want,
so this is intended to be final:
- provide -Wlevel (warning, error or fatal) to select what you care about
- provide -Wstop to stop after parsing a file with warnings you care about
- provide consistent exit status codes for those warnings you care about
- fully document what warnings, errors and fatal errors mean
- remove all other cruft from the user interface, less is more:
- remove all -f knobs along with the whole -f option
- remove the old -Werror because calling warnings "fatal" is silly
- always finish parsing each file, unless fatal errors prevent that
This commit also includes a couple of related simplifications behind
the scenes regarding error handling.
Feedback and OK  kristaps@@;  Joerg Sonnenberger (NetBSD) and
Sascha Wildner (DragonFly BSD) agree with the general direction.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.14 2010/08/18 02:46:37 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: August 18 2010 $
a78 3
See the
.Sx EXAMPLES
section for a full example.
a106 33
.Pp
Furthermore, the following escapes are accepted to allow
.Xr pod2man 1
documents to be correctly formatted:
\e*(-- (dash),
\e*(PI (pi),
\e*(L" (left double-quote),
\e*(R" (right double-quote),
\e*(C` (left single-quote),
\e*(C' (right single-quote),
\e*(Aq (apostrophe),
\e*^ (hat),
\e*, (comma),
\e*~ (tilde),
\e*/ (forward slash),
\e*: (umlaut),
\e*8 (beta),
\e*o (degree),
\e*(D- (Eth),
\e*(d- (eth),
\e*(Th (Thorn),
and
\e*(th (thorn).
.Sh REFERENCE
This section further defines the
.Sx Types ,
.Sx Functions
and
.Sx Variables
available to programmers.
Following that, the
.Sx Abstract Syntax Tree
section documents the output tree.
a107 5
Both functions (see
.Sx Functions )
and variables (see
.Sx Variables )
may use the following types:
d110 1
a110 2
An opaque type defined in
.Pa man.c .
a111 3
.It Vt mandocmsg
A function callback type defined in
.Pa mandoc.h .
a113 2
Defined in
.Pa man.h .
a118 1
Function descriptions follow:
d271 5
a275 1
Please see
d277 1
a277 1
in the source archive for a rigorous reference.
@


1.14
log
@Remove the standard pod2man \*(C+ pre-predefined string ("C++").
It is always defined in the preamble using .ds when used in manuals.
Since we now support .ds, it is no longer necessary to provide it.
Triggered by a bug report from Thomas Jeunet, patch by kristaps@@.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.13 2010/07/13 01:09:12 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 13 2010 $
a37 1
.Fa "int pflags"
a173 4
The
.Fa pflags
arguments are defined in
.Pa man.h .
d296 1
a296 1
man = man_alloc(&regs, NULL, 0, NULL);
@


1.13
log
@Merge release 1.10.4 (all code by kristaps@@), providing four new features:
1) Proper .Bk support: allow output line breaks at input line breaks,
but keep input lines together in the output, finally fixing
synopses like aucat(1), mail(1) and tmux(1).
2) Mostly finished -Tps (PostScript) output.
3) Implement -Thtml output for .Nm blocks and .Bk -words.
4) Allow iterative interpolation of user-defined roff(7) strings.
Also contains some minor bugfixes and some performance improvements.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.12 2010/06/27 21:54:42 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 27 2010 $
a118 1
\e*(C+ (C++),
@


1.12
log
@Full .nr nS support, unbreaking the kernel manuals.

Kristaps coded this from scratch after reading my .nr patch;
it is simpler and more powerful.

Registers live in struct regset in regs.h, struct man and struct mdoc
contain pointers to it.  The nS register is cleared when parsing .Sh.
Frontends respect the MDOC_SYNPRETTY flag set in mdoc node_alloc.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.11 2010/05/26 02:55:16 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: May 26 2010 $
a31 1
.In regs.h
@


1.11
log
@sync manuals
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.18 2010/05/25 22:16:59 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: May 25 2010 $
d32 1
d36 6
a41 1
.Fn man_alloc "void *data" "int pflags" "mandocmsg msgs"
d51 5
a55 1
.Fn man_parseln "struct man *man" "int line" "char *buf"
d294 1
d301 1
d303 1
a303 1
man = man_alloc(NULL, 0, NULL);
@


1.10
log
@merge 1.9.24, keeping local patches; some changes:
* preserve multiple consecutive space characters in input
* do not restrict .Cd and .Rv to certain sections (requested by Joerg)
* do not run lookup() on quoted words
* enum return types for mdoc_args and mdoc_argv
* fix auto-closing of LINK tag in -Txhtml (from Daniel Friesel)
* various lint and manual fixes
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.9 2010/04/04 13:41:23 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: April 4 2010 $
a22 1
.Nm man_parseln ,
d24 2
d27 1
a27 2
.Nm man_meta ,
.Nm man_free ,
d31 1
d35 3
a37 3
.Fn man_alloc "void *data" "int pflags" "const struct man_cb *cb"
.Ft void
.Fn man_reset "struct man *man"
d40 2
a41 2
.Ft int
.Fn man_parseln "struct man *man" "int line" "char *buf"
a43 2
.Ft "const struct man_meta *"
.Fn man_meta "const struct man *man"
d45 3
a47 1
.Fn man_endparse "struct man *man"
d53 1
a53 3
input (and
.Em only
man) into an abstract syntax tree (AST).
d70 2
a71 1
sequence.  See the
a81 12
.It am
.It ami
.It de
.It dei
.It ig
Instructional macros in the original roff language.  Blocks begun by
these macros end with
.Sq ..
and may begin anywhere, although they may not break the next-line
scoping rules specified in
.Xr man 7 .
These blocks are discarded.
a88 2
.It UC
Has no effect.  Handled as a current-scope line macro.
d132 2
a133 1
available to programmers.  Following that, the
d147 3
a149 3
.It Vt struct man_cb
A set of message callbacks defined in
.Pa man.h .
d151 2
a152 1
A parsed node.  Defined in
d162 2
a163 1
Allocates a parsing structure.  The
d165 2
a166 3
pointer is passed to callbacks in
.Fa cb ,
which are documented further in the header file.
d171 2
a172 1
Returns NULL on failure.  If non-NULL, the pointer must be freed with
d175 2
a176 1
Reset the parser for another parse routine.  After its use,
d180 2
a181 2
Free all resources of a parser.  The pointer is no longer valid after
invocation.
d183 4
a186 2
Parse a nil-terminated line of input.  This line should not contain the
trailing newline.  Returns 0 on failure, 1 on success.  The input buffer
d190 2
a191 1
Signals that the parse is complete.  Note that if
d195 2
a196 1
the resulting tree is incomplete.  Returns 0 on failure, 1 on success.
d198 2
a199 1
Returns the first node of the parse.  Note that if
d205 2
a206 2
Returns the document's parsed meta-data.  If this information has not
yet been supplied or
d222 2
a223 1
regular form.  It may be reviewed at any time with
d233 1
a233 2
This AST is governed by the ontological
rules dictated in
d239 1
a239 2
nodes with element, root and text types as declared
by the
d241 2
a242 1
field.  Each node also provides its parse point (the
d313 4
d323 1
a323 1
utility was written by
@


1.9
log
@Adding the pod2man(1) special characters to mandoc_char(7) was a bad idea.
The mandoc_char(7) manual is supposed to document standard characters
for man(7) and mdoc(7), and these are not standard in any sense.
So move the documentation to an implementation-specific manual.

noticed by kristaps@@  and merged in 1.9.22
ok jmc@@  who also noticed that \*(TH broke the nroff -Tps build
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.8 2010/03/29 22:56:52 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: March 29 2010 $
a19 2
.
.
a29 2
.
.
a46 2
.
.
a54 1
.
a73 1
.
a79 1
.
a93 1
.
a95 1
.
a100 1
.
a102 1
.
a107 1
.
a139 2
.
.
a148 2
.
.
a155 1
.
a159 1
.
a162 1
.
a169 2
.
.
a172 1
.
a184 1
.
a188 1
.
a191 1
.
a196 1
.
a202 1
.
a216 2
.
.
a219 1
.
a222 2
.
.
a235 1
.
a240 1
.
a258 1
.
a278 1
.
a282 2
.
.
a317 2
.
.
a320 2
.
.
@


1.8
log
@merge 1.9.19, keeping local patches
 * scoping fixes for roff instructions
 * accept apostroph in place of dot as a macro control character
 * accept tabs between the control character and the macro name
 * check that man(7) .TH titles use capital letters
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.7 2010/02/18 02:11:26 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: February 18 2010 $
d130 24
@


1.7
log
@sync to release 1.9.15:
 * corrected .Vt handling (spotted by Joerg Sonnenberger)
 * corrected .Xr argument handling (based on my patch)
 * removed \\ escape sequence (because it is for low-level roff only)
 * warn about trailing whitespace (suggested by jmc@@)
 * -Txhtml support
 * and some general cleanup and doc improvements
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.6 2009/10/20 10:15:04 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: October 20 2009 $
d20 2
a21 1
.\" SECTION
d23 1
d32 2
a33 1
.\" SECTION
d51 2
a52 1
.\" SECTION
d55 1
a55 1
.Nm man
d61 1
a61 1
.\" PARAGRAPH
d81 8
a88 1
.\" PARAGRAPH
d90 43
d141 2
a142 1
.\" SUBSECTION
d150 1
a150 1
.\" LIST-ITEM
d155 1
a155 1
.\" LIST-ITEM
d159 1
a159 1
.\" LIST-ITEM
d167 2
a168 1
.\" SUBSECTION
d172 1
a172 1
.\" LIST-ITEM
d185 1
a185 1
.\" LIST-ITEM
d190 1
a190 1
.\" LIST-ITEM
d194 1
a194 1
.\" LIST-ITEM
d200 1
a200 1
.\" LIST-ITEM
d207 1
a207 1
.\" LIST-ITEM
d222 2
a223 1
.\" SUBSECTION
d227 1
a227 1
.\" LIST-ITEM
d231 2
a232 1
.\" SUBSECTION
d246 1
a246 1
.\" PARAGRAPH
d252 1
a252 1
.\" PARAGRAPH
d271 1
a271 1
.\" PARAGRAPH
a276 1
.\" LIST-ITEM
d292 1
a292 1
.\" PARAGRAPH
d297 2
a298 1
.\" SECTION
d334 2
a335 1
.\" SECTION
d339 2
a340 1
.\" SECTION
@


1.6
log
@sync to 1.9.7: use .In instead of .Fd #include
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.5 2009/08/22 20:14:37 schwarze Exp $
d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@kth.se>
d17 1
a17 1
.Dd $Mdocdate: August 22 2009 $
d94 1
a94 1
.Bl -ohang -offset "XXXX"
d115 1
a115 1
.Bl -ohang -offset "XXXX"
d169 1
a169 1
.Bl -ohang -offset "XXXX"
d218 1
a218 1
.Bl -tag -width "ELEMENTXX" -compact -offset "XXXX"
d245 2
a246 5
Note that, if the last line of the file isn't newline-terminated, this
will truncate the file's last character (see
.Xr fgetln 3 ) .
Further, this example does not error-check nor free memory upon failure.
.Bd -literal -offset "XXXX"
d255 2
d258 6
a263 5
while ((buf = fgetln(fp, &len))) {
	buf[len - 1] = '\\0';
	if ( ! man_parseln(man, line, buf))
		errx(1, "man_parseln");
	line++;
d266 2
d269 1
a269 1
	errx(1, "man_endparse");
d271 1
a271 1
	errx(1, "man_node");
d285 1
a285 1
.An Kristaps Dzonsons Aq kristaps@@kth.se .
@


1.5
log
@Kristaps@@ significantly overhauled libman.
I'm committing this in one large chunk because in contrast to -mdoc, -man
is mostly untested in OpenBSD anyway, so any fallout can be fixed in-tree.
Among others, improved support for .IP, .HP, and .TP.
Now in sync with release 1.9.0.
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.4 2009/08/09 17:20:17 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: August 9 2009 $
d32 1
a32 1
.Fd #include <man.h>
@


1.4
log
@sync to 1.8.2: remove trailing whitespace
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.3 2009/07/08 00:20:13 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 8 2009 $
d223 7
a229 1
\(<- ELEMENT | TEXT
@


1.3
log
@sync to 1.7.23: fixed const-nesses
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.2 2009/06/14 23:00:57 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 14 2009 $
d52 1
a52 1
library parses lines of 
d61 1
a61 1
parse each line in a document with 
d66 1
a66 1
.Fn man_node 
d79 1
a79 1
This section further defines the 
d81 1
a81 1
.Sx Functions 
d85 1
a85 1
.Sx Abstract Syntax Tree 
d108 1
a108 1
See 
d121 2
a122 2
.Fa cb , 
which are documented further in the header file.  
d131 1
a131 1
Reset the parser for another parse routine.  After its use, 
d141 1
a141 1
trailing newline.  Returns 0 on failure, 1 on success.  The input buffer 
d146 1
a146 1
Signals that the parse is complete.  Note that if 
d153 1
a153 1
Returns the first node of the parse.  Note that if 
d160 1
a160 1
yet been supplied or 
d176 1
a176 1
The 
d184 1
a184 1
.Fn man_endparse 
d187 1
a187 1
fail, it may be incomplete.  
d193 1
a193 1
and derives its terminology accordingly.  
d196 1
a196 1
The AST is composed of 
d209 1
a209 1
.Va next 
d211 1
a211 1
.Va prev 
d237 1
a237 1
on the finished parse tree with 
d240 1
a240 1
will truncate the file's last character (see 
d276 1
a276 1
utility was written by 
@


1.2
log
@sync to 1.7.16: comments, whitespace and spelling fixes; no functional change
@
text
@d1 1
a1 1
.\"	$Id: man.3,v 1.5 2009/06/11 07:26:35 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate$
d43 1
a43 1
.Fn man_node "struct man *man"
d45 1
a45 1
.Fn man_meta "struct man *man"
@


1.1
log
@Initial check-in of mandoc for formatting manuals. ok deraadt@@
@
text
@d1 1
a1 1
.\" $Id: man.3,v 1.1 2009/03/27 14:56:15 kristaps Exp $
d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@openbsd.org>
d6 10
a15 3
.\" purpose with or without fee is hereby granted, provided that the
.\" above copyright notice and this permission notice appear in all
.\" copies.
a16 9
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
.\" WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
.\" AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
.\" DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
.\" PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
.\" TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
.\" PERFORMANCE OF THIS SOFTWARE.
.\" 
d18 1
a18 1
.Dt man 3
d277 1
a277 1
.An Kristaps Dzonsons Aq kristaps@@openbsd.org .
@

