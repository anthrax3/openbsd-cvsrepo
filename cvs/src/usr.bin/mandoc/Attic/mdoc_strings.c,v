head	1.20;
access;
symbols
	OPENBSD_4_9:1.19.0.4
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.19.0.2
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.7.0.4
	OPENBSD_4_6_BASE:1.7;
locks; strict;
comment	@ * @;


1.20
date	2011.04.21.22.59.54;	author schwarze;	state dead;
branches;
next	1.19;

1.19
date	2010.07.31.23.42.04;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2010.05.23.22.45.00;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2010.05.15.22.22.16;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2010.05.15.12.30.59;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2010.05.14.14.47.44;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2010.05.14.01.54.37;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2010.03.02.00.13.57;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2009.12.23.22.30.17;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2009.12.22.23.58.00;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2009.10.27.21.40.07;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2009.08.22.22.11.24;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2009.07.08.00.04.10;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2009.06.21.20.21.09;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2009.06.19.07.20.19;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.18.01.19.02;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.15.03.42.51;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.15.01.36.23;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.14.23.00.57;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2009.04.06.20.30.40;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Merge version 1.10.10:
lots of cleanup and maintenance work by kristaps@@.
- move some main.c globals into struct curparse
- move mandoc_*alloc to mandoc.h such that all code can use them
- make mandoc_isdelim available to formatting frontends
- dissolve mdoc_strings.c, move the code where it is used
- make all error reporting functions void, their return values were useless
- and various minor cleanups and fixes
@
text
@/*	$Id: mdoc_strings.c,v 1.19 2010/07/31 23:42:04 schwarze Exp $ */
/*
 * Copyright (c) 2008, 2009, 2010 Kristaps Dzonsons <kristaps@@bsd.lv>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#include <sys/types.h>

#include <assert.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <time.h>

#include "mandoc.h"
#include "libmdoc.h"

static	const char * const secnames[SEC__MAX] = {
	NULL,
	"NAME",
	"LIBRARY",
	"SYNOPSIS",
	"DESCRIPTION",
	"IMPLEMENTATION NOTES",
	"RETURN VALUES",
	"ENVIRONMENT",
	"FILES",
	"EXIT STATUS",
	"EXAMPLES",
	"DIAGNOSTICS",
	"COMPATIBILITY",
	"ERRORS",
	"SEE ALSO",
	"STANDARDS",
	"HISTORY",
	"AUTHORS",
	"CAVEATS",
	"BUGS",
	"SECURITY CONSIDERATIONS",
	NULL
};

/* 
 * FIXME: this is repeated in print_text() (html.c) and term_word()
 * (term.c).
 */
enum mdelim
mdoc_iscdelim(char p)
{

	switch (p) {
	case('('):
		/* FALLTHROUGH */
	case('['):
		return(DELIM_OPEN);
	case('|'):
		return(DELIM_MIDDLE);
	case('.'):
		/* FALLTHROUGH */
	case(','):
		/* FALLTHROUGH */
	case(';'):
		/* FALLTHROUGH */
	case(':'):
		/* FALLTHROUGH */
	case('?'):
		/* FALLTHROUGH */
	case('!'):
		/* FALLTHROUGH */
	case(')'):
		/* FALLTHROUGH */
	case(']'):
		return(DELIM_CLOSE);
	default:
		break;
	}

	return(DELIM_NONE);
}


enum mdelim
mdoc_isdelim(const char *p)
{

	if ('\0' == p[0])
		return(DELIM_NONE);
	if ('\0' == p[1])
		return(mdoc_iscdelim(p[0]));

	/*
	 * XXX; account for groff bubu where the \*(Ba reserved string
	 * is treated in exactly the same way as the vertical bar.  This
	 * is the only function that checks for this.
	 */
	return(strcmp(p, "\\*(Ba") ? DELIM_NONE : DELIM_MIDDLE);
}


enum mdoc_sec 
mdoc_str2sec(const char *p)
{
	int		 i;

	for (i = 0; i < (int)SEC__MAX; i++) 
		if (secnames[i] && 0 == strcmp(p, secnames[i]))
			return((enum mdoc_sec)i);

	return(SEC_CUSTOM);
}


/* FIXME: move this into an editable .in file. */
size_t
mdoc_macro2len(enum mdoct macro)
{

	switch (macro) {
	case(MDOC_Ad):
		return(12);
	case(MDOC_Ao):
		return(12);
	case(MDOC_An):
		return(12);
	case(MDOC_Aq):
		return(12);
	case(MDOC_Ar):
		return(12);
	case(MDOC_Bo):
		return(12);
	case(MDOC_Bq):
		return(12);
	case(MDOC_Cd):
		return(12);
	case(MDOC_Cm):
		return(10);
	case(MDOC_Do):
		return(10);
	case(MDOC_Dq):
		return(12);
	case(MDOC_Dv):
		return(12);
	case(MDOC_Eo):
		return(12);
	case(MDOC_Em):
		return(10);
	case(MDOC_Er):
		return(12);
	case(MDOC_Ev):
		return(15);
	case(MDOC_Fa):
		return(12);
	case(MDOC_Fl):
		return(10);
	case(MDOC_Fo):
		return(16);
	case(MDOC_Fn):
		return(16);
	case(MDOC_Ic):
		return(10);
	case(MDOC_Li):
		return(16);
	case(MDOC_Ms):
		return(6);
	case(MDOC_Nm):
		return(10);
	case(MDOC_No):
		return(12);
	case(MDOC_Oo):
		return(10);
	case(MDOC_Op):
		return(14);
	case(MDOC_Pa):
		return(32);
	case(MDOC_Pf):
		return(12);
	case(MDOC_Po):
		return(12);
	case(MDOC_Pq):
		return(12);
	case(MDOC_Ql):
		return(16);
	case(MDOC_Qo):
		return(12);
	case(MDOC_So):
		return(12);
	case(MDOC_Sq):
		return(12);
	case(MDOC_Sy):
		return(6);
	case(MDOC_Sx):
		return(16);
	case(MDOC_Tn):
		return(10);
	case(MDOC_Va):
		return(12);
	case(MDOC_Vt):
		return(12);
	case(MDOC_Xr):
		return(10);
	default:
		break;
	};
	return(0);
}
@


1.19
log
@Correct Copyright lines in the rarely touched files:
* add missing years (only where substantial changes were committed)
* update Kristaps' email address in the remaining places
No code changes.
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.18 2010/05/23 22:45:00 schwarze Exp $ */
@


1.18
log
@Unified error and warning message system for all of mandoc,
featuring three message levels, as agreed during the mandoc hackathon:
* FATAL parser failure, cannot produce any output from this input file:
  eventually, we hope to convert most of these to ERRORs.
* ERROR, meaning mandoc cannot cope fully with the input syntax and will
  probably lose information or produce structurally garbled output;
  it will try to produce output anyway but exit non-zero at the end,
  which is eventually intended to make the ports infrastructure happy.
* WARNING, meaning you should clean up the input file, but output
  is probably mostly OK, so this will not cause error-exit at the end.
This commit is mostly just converting the old system to the new one; before
the classification will become really reliable, we must check all messages.

In particular,
* set up a new central message string table in main.c
* drop the old message string tables from man.c and mdoc.c
* get rid of the piece-meal merr enums in libman and libmdoc
* reduce number of error/warning functions from 16 to 6 (still a lot...)

While here, handle a few problems more gracefully:
* allow .Rv and .Ex to work without a prior .Nm
* allow .An to ignore extra arguments
* allow undeclared columns in .Bl -column

Written by kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.17 2010/05/15 22:22:16 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2008 Kristaps Dzonsons <kristaps@@kth.se>
@


1.17
log
@mdoc_isdelim now returns enum mdelim, not int any more;
noticed by kristaps@@ using lint
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.16 2010/05/15 12:30:59 schwarze Exp $ */
d25 1
@


1.16
log
@Distinguish OPEN, MIDDLE and CLOSE delimiters (using an enum).
Only OPEN are drawn before the beginning of a macro;
this is new, before this, MIDDLE ('|') were drawn in front, too.
Only CLOSE are pushed after the end of a macro (as before).
ok kristaps@@

This allows us to finally enable handling of leading punctuation
without regressions.
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.15 2010/05/14 14:47:44 schwarze Exp $ */
d96 1
a96 1
		return(0);
@


1.15
log
@Merge 1.9.25, keeping local patches;
this does not merge kristaps' end-of-sentences handling yet,
i will check that separately.  This one includes:
* handle \*(Ba as a delimiter
* introduce ARGS_PEND for .Bl -column .It end-of-line special casing
* section ordering: expect EXIT STATUS at the right place
* line break fixes in SYNOPSIS
* allow literal contexts to have arbitrary line lengths
* the input file column number can not be used to identify the beginning
  of a line because white space is allowed after the initial '.'
* proper leading spaces in -man -Tascii mode
* do not let Lb break lines in -mdoc -Thtml LIBRARY
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.14 2010/05/14 01:54:37 schwarze Exp $ */
d56 1
a56 1
int
a60 2
	case('|'):
		/* FALLTHROUGH */
d64 3
a66 1
		return(1);
d82 1
a82 1
		return(2);
d87 1
a87 1
	return(0);
d91 1
a91 1
int
d105 1
a105 1
	return(0 == strcmp(p, "\\*(Ba"));
@


1.14
log
@merge 1.9.24, keeping local patches; some changes:
* preserve multiple consecutive space characters in input
* do not restrict .Cd and .Rv to certain sections (requested by Joerg)
* do not run lookup() on quoted words
* enum return types for mdoc_args and mdoc_argv
* fix auto-closing of LINK tag in -Txhtml (from Daniel Friesel)
* various lint and manual fixes
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.13 2010/03/02 00:13:57 schwarze Exp $ */
d27 23
a49 30
/* FIXME: this file is poorly named. */

struct mdoc_secname {
	const char	*name;	/* Name of section. */
	enum mdoc_sec	 sec;	/* Corresponding section. */
};

#define	SECNAME_MAX	(20)

static	const struct mdoc_secname secnames[SECNAME_MAX] = {
	{ "NAME", SEC_NAME },
	{ "LIBRARY", SEC_LIBRARY },
	{ "SYNOPSIS", SEC_SYNOPSIS },
	{ "DESCRIPTION", SEC_DESCRIPTION },
	{ "IMPLEMENTATION NOTES", SEC_IMPLEMENTATION },
	{ "EXIT STATUS", SEC_EXIT_STATUS },
	{ "RETURN VALUES", SEC_RETURN_VALUES },
	{ "ENVIRONMENT", SEC_ENVIRONMENT },
	{ "FILES", SEC_FILES },
	{ "EXAMPLES", SEC_EXAMPLES },
	{ "DIAGNOSTICS", SEC_DIAGNOSTICS },
	{ "COMPATIBILITY", SEC_COMPATIBILITY },
	{ "ERRORS", SEC_ERRORS },
	{ "SEE ALSO", SEC_SEE_ALSO },
	{ "STANDARDS", SEC_STANDARDS },
	{ "HISTORY", SEC_HISTORY },
	{ "AUTHORS", SEC_AUTHORS },
	{ "CAVEATS", SEC_CAVEATS },
	{ "BUGS", SEC_BUGS },
	{ "SECURITY CONSIDERATIONS", SEC_SECURITY }
a51 1

d61 1
a61 1
	case('|'): /* FIXME! */
d95 1
a95 1
	if (0 == *p)
d97 9
a105 3
	if (0 != *(p + 1))
		return(0);
	return(mdoc_iscdelim(*p));
d110 1
a110 1
mdoc_atosec(const char *p)
d114 3
a116 3
	for (i = 0; i < SECNAME_MAX; i++) 
		if (0 == strcmp(p, secnames[i].name))
			return(secnames[i].sec);
@


1.13
log
@Distinguish opening and closing delimiters, and close out block
macros after closing delimiters only, not after opening ones.  Besides,
neither roff nor old nor new groff consider braces { } as delimiters.

This fixes some frequent misrenderings by mandoc,
for example ".Ql (" being rendered as "`'(" instead of "`('".
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.12 2009/12/23 22:30:17 schwarze Exp $ */
d60 4
d69 1
a69 1
	case('|'):
d126 1
a126 1
mdoc_macro2len(int macro)
@


1.12
log
@sync to 1.9.13: minor fixes:

correctness/functionality:
 - bugfix: properly ignore lines with only a dot in -man
 - bugfix: .Bl -ohang doesn't allow -width, warn about this
 - improve date string handling by new function mandoc_a2time
 - some HTML improvements
 - significant documentation additions in man.7 and mdoc.7

portability:
 - replace __dead by __attribute__((noreturn))
 - bugfix: correct .Dx rendering
 - some more library names for NetBSD

simplicity:
 - replace hand-rolled putchar(3)-loops by fwrite(3)
 - replace single-character printf(3) by putchar(3)
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.11 2009/12/22 23:58:00 schwarze Exp $ */
d67 4
a82 2
	case('('):
		/* FALLTHROUGH */
a84 2
	case('['):
		/* FALLTHROUGH */
d86 1
a86 5
		/* FALLTHROUGH */
	case('{'):
		/* FALLTHROUGH */
	case('}'):
		return(1);
@


1.11
log
@sync to 1.9.12, mostly portability and refactoring:

correctness/functionality:
- bugfix: do not die when overstep hits the right margin
- new option: -fign-escape
- and various HTML features

portability:
- replace bzero(3) by memset(3), which is ANSI C
- replace err(3)/warn(3) by perror(3)/exit(3), which is ANSI C
- iuse argv[0] instead of __progname
- add time.h to various files for FreeBSD compilation

simplicity:
- do not allocate header/footer data dynamically in *_term.c
- provide and use malloc frontends that error out on failure

for full changelogs, see http://bsd.lv/cgi-bin/cvsweb.cgi/
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.10 2009/10/27 21:40:07 schwarze Exp $ */
a120 22
}


time_t
mdoc_atotime(const char *p)
{
	struct tm	 tm;
	char		*pp;

	memset(&tm, 0, sizeof(struct tm));

	if (0 == strcmp(p, "$" "Mdocdate$"))
		return(time(NULL));
	if ((pp = strptime(p, "$" "Mdocdate: %b %d %Y $", &tm)) && 0 == *pp)
		return(mktime(&tm));
	/* XXX - this matches "June 1999", which is wrong. */
	if ((pp = strptime(p, "%b %d %Y", &tm)) && 0 == *pp)
		return(mktime(&tm));
	if ((pp = strptime(p, "%b %d, %Y", &tm)) && 0 == *pp)
		return(mktime(&tm));

	return(0);
@


1.10
log
@sync to 1.9.11: adapt printing of dates to groff conventions,
NetBSD portability fixes and some minor bugfixes and feature enhancements;
also checked that my hyphenation code still works on top of this
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.9 2009/08/22 22:11:24 schwarze Exp $ */
d130 1
a130 1
	bzero(&tm, sizeof(struct tm));
@


1.9
log
@sync to 1.9.1: sync mdoc manual structure to man manual structure
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.8 2009/07/08 00:04:10 schwarze Exp $ */
d23 1
@


1.8
log
@sync to 1.7.21: unified escape sequence validation for mdoc and man
checking is still incomplete, but a bit better, in particular for man
now in sync with 1.7.22: the only 1.7.22 diff was already in
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.7 2009/06/21 20:21:09 schwarze Exp $ */
d33 1
a33 1
#define	SECNAME_MAX	(18)
d41 1
d55 1
@


1.7
log
@sync to 1.7.19: bzero(PTR, ...) is simpler than memset(PTR, 0, ...)
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.6 2009/06/19 07:20:19 schwarze Exp $ */
a19 1
#include <ctype.h>
a56 76
size_t
mdoc_isescape(const char *p)
{
	size_t		 c;
	
	if ('\\' != *p++)
		return(0);

	switch (*p) {
	case ('\\'):
		/* FALLTHROUGH */
	case ('\''):
		/* FALLTHROUGH */
	case ('`'):
		/* FALLTHROUGH */
	case ('q'):
		/* FALLTHROUGH */
	case ('-'):
		/* FALLTHROUGH */
	case ('~'):
		/* FALLTHROUGH */
	case ('^'):
		/* FALLTHROUGH */
	case ('%'):
		/* FALLTHROUGH */
	case ('0'):
		/* FALLTHROUGH */
	case (' '):
		/* FALLTHROUGH */
	case ('|'):
		/* FALLTHROUGH */
	case ('&'):
		/* FALLTHROUGH */
	case ('.'):
		/* FALLTHROUGH */
	case (':'):
		/* FALLTHROUGH */
	case ('e'):
		return(2);
	case ('*'):
		if (0 == *++p || ! isgraph((u_char)*p))
			return(0);
		switch (*p) {
		case ('('):
			if (0 == *++p || ! isgraph((u_char)*p))
				return(0);
			return(4);
		case ('['):
			for (c = 3, p++; *p && ']' != *p; p++, c++)
				if ( ! isgraph((u_char)*p))
					break;
			return(*p == ']' ? c : 0);
		default:
			break;
		}
		return(3);
	case ('('):
		if (0 == *++p || ! isgraph((u_char)*p))
			return(0);
		if (0 == *++p || ! isgraph((u_char)*p))
			return(0);
		return(4);
	case ('['):
		break;
	default:
		return(0);
	}

	for (c = 3, p++; *p && ']' != *p; p++, c++)
		if ( ! isgraph((u_char)*p))
			break;

	return(*p == ']' ? c : 0);
}


d143 1
@


1.6
log
@sync to 1.7.19: more elegant section handling
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.5 2009/06/18 01:19:02 schwarze Exp $ */
d204 1
a204 1
	(void)memset(&tm, 0, sizeof(struct tm));
@


1.5
log
@sync to 1.7.16: make a couple of macros callable, reserve "|",
and some tweaks to .Lk
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.4 2009/06/15 03:42:51 schwarze Exp $ */
d27 1
a27 4
/*
 * Various string-literal operations:  converting scalars to and from
 * strings, etc.
 */
d30 2
a31 3
	const char	*name;
	int		 flag;
#define	MSECNAME_META	(1 << 0)
d34 1
a34 1
/* Section names corresponding to mdoc_sec. */
d36 19
a54 22
static	const struct mdoc_secname secnames[] = {
	{ "PROLOGUE", MSECNAME_META },
	{ "BODY", MSECNAME_META },
	{ "NAME", 0 },
	{ "LIBRARY", 0 },
	{ "SYNOPSIS", 0 },
	{ "DESCRIPTION", 0 },
	{ "IMPLEMENTATION NOTES", 0 },
	{ "RETURN VALUES", 0 },
	{ "ENVIRONMENT", 0 },
	{ "FILES", 0 },
	{ "EXAMPLES", 0 },
	{ "DIAGNOSTICS", 0 },
	{ "COMPATIBILITY", 0 },
	{ "ERRORS", 0 },
	{ "SEE ALSO", 0 },
	{ "STANDARDS", 0 },
	{ "HISTORY", 0 },
	{ "AUTHORS", 0 },
	{ "CAVEATS", 0 },
	{ "BUGS", 0 },
	{ NULL, 0 }
d188 1
a188 2
	const struct mdoc_secname *n;
	int			   i;
d190 3
a192 4
	for (i = 0, n = secnames; n->name; n++, i++)
		if ( ! (n->flag & MSECNAME_META))
			if (0 == strcmp(p, n->name))
				return((enum mdoc_sec)i);
@


1.4
log
@fix Mdocdate broken in rev 1.2;
noticed by and patch from cnst@@, thanks!
ok sthen@@
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.3 2009/06/15 01:36:23 schwarze Exp $ */
d146 2
@


1.3
log
@sync to 1.7.16: implement \~ and \^ escapes, and repair \(ss
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.2 2009/06/14 23:00:57 schwarze Exp $ */
d213 1
a213 1
	if (0 == strcmp(p, "$Mdocdate: June 14 2009 $"))
d215 1
a215 1
	if ((pp = strptime(p, "$Mdocdate: June 14 2009 $", &tm)) && 0 == *pp)
@


1.2
log
@sync to 1.7.16: comments, whitespace and spelling fixes; no functional change
@
text
@d1 1
a1 1
/*	$Id: mdoc_strings.c,v 1.4 2009/06/12 12:40:44 kristaps Exp $ */
d84 4
d213 1
a213 1
	if (0 == strcmp(p, "$Mdocdate: April 6 2009 $"))
d215 1
a215 1
	if ((pp = strptime(p, "$Mdocdate: April 6 2009 $", &tm)) && 0 == *pp)
@


1.1
log
@Initial check-in of mandoc for formatting manuals. ok deraadt@@
@
text
@d1 1
a1 1
/* $Id: mdoc_strings.c,v 1.1 2009/03/31 13:50:19 kristaps Exp $ */
d6 2
a7 3
 * purpose with or without fee is hereby granted, provided that the
 * above copyright notice and this permission notice appear in all
 * copies.
d9 7
a15 8
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
 * AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
d209 1
a209 1
	if (0 == strcmp(p, "$Mdocdate$"))
d211 1
a211 1
	if ((pp = strptime(p, "$Mdocdate: %b %d %Y $", &tm)) && 0 == *pp)
@

