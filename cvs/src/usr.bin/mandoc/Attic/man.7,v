head	1.28;
access;
symbols
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4;
locks; strict;
comment	@.\" @;


1.28
date	2010.07.19.21.29.36;	author schwarze;	state dead;
branches;
next	1.27;

1.27
date	2010.06.06.18.08.41;	author schwarze;	state Exp;
branches;
next	1.26;

1.26
date	2010.05.26.02.55.16;	author schwarze;	state Exp;
branches;
next	1.25;

1.25
date	2010.05.23.20.57.16;	author schwarze;	state Exp;
branches;
next	1.24;

1.24
date	2010.05.15.15.37.53;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2010.05.14.19.52.43;	author schwarze;	state Exp;
branches;
next	1.22;

1.22
date	2010.05.14.14.47.44;	author schwarze;	state Exp;
branches;
next	1.21;

1.21
date	2010.05.14.01.54.37;	author schwarze;	state Exp;
branches;
next	1.20;

1.20
date	2010.04.07.23.15.05;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2010.03.29.22.56.52;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2010.03.26.01.22.05;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2010.03.25.23.23.01;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2010.02.18.02.11.26;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2009.12.24.02.08.14;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2009.12.23.22.30.17;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2009.10.27.21.40.07;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2009.10.21.19.13.50;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2009.09.18.22.46.14;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2009.08.22.23.17.39;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2009.08.22.20.14.37;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2009.08.22.16.41.45;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2009.08.09.17.20.17;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2009.07.18.21.03.18;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2009.07.06.23.54.56;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.23.22.50.29;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.18.23.34.53;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.14.23.00.57;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2009.04.06.20.30.40;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.28
log
@J. C. Roberts noted that Kristaps' man.7 is already better than the
old groff_man.7 we currently install.  As a first step, move the new
manual where it belongs, not changing any content except the OpenBSD
marker.  The plan is, after some polishing, to install man.7 and not
install groff_man.7 any longer.

jmc@@, sobrado@@ and kristaps@@ agree
@
text
@.\"	$Id: man.7,v 1.27 2010/06/06 18:08:41 schwarze Exp $
.\"
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: June 6 2010 $
.Dt MAN 7
.Os
.Sh NAME
.Nm man
.Nd man language reference
.Sh DESCRIPTION
The
.Nm man
language was historically used to format
.Ux
manuals.
This reference document describes its syntax, structure, and usage.
.Pp
.Bf -emphasis
Do not use
.Nm
to write your manuals.
.Ef
Use the
.Xr mdoc 7
language, instead.
.Pp
An
.Nm
document follows simple rules:  lines beginning with the control
character
.Sq \&.
are parsed for macros.
Other lines are interpreted within the scope of
prior macros:
.Bd -literal -offset indent
\&.SH Macro lines change control state.
Other lines are interpreted within the current state.
.Ed
.Sh INPUT ENCODING
.Nm
documents may contain only graphable 7-bit ASCII characters, the
space character, and the tabs character.
All manuals must have
.Ux
line termination.
.Pp
Blank lines are acceptable; where found, the output will assert a
vertical space.
.Ss Comments
Text following a
.Sq \e\*" ,
whether in a macro or free-form text line, is ignored to the end of
line.
A macro line with only a control character and comment escape,
.Sq \&.\e" ,
is also ignored.
Macro lines with only a control character and optionally whitespace are
stripped from input.
.Ss Special Characters
Special characters may occur in both macro and free-form lines.
Sequences begin with the escape character
.Sq \e
followed by either an open-parenthesis
.Sq \&(
for two-character sequences; an open-bracket
.Sq \&[
for n-character sequences (terminated at a close-bracket
.Sq \&] ) ;
or a single one-character sequence.
See
.Xr mandoc_char 7
for a complete list.
Examples include
.Sq \e(em
.Pq em-dash
and
.Sq \ee
.Pq back-slash .
.Ss Text Decoration
Terms may be text-decorated using the
.Sq \ef
escape followed by an indicator: B (bold), I, (italic), R (Roman), or P
(revert to previous mode):
.Pp
.D1 \efBbold\efR \efIitalic\efP
.Pp
A numerical representation 3, 2, or 1 (bold, italic, and Roman,
respectively) may be used instead.
A text decoration is only valid, if specified in free-form text, until
the next macro invocation; if specified within a macro, it's only valid
until the macro closes scope.
Note that macros like
.Sx \&BR
open and close a font scope with each argument.
.Pp
Text may also be sized with the
.Sq \es
escape, whose syntax is one of
.Sq \es+-n
for one-digit numerals;
.Sq \es(+-nn
or
.Sq \es+-(nn
for two-digit numerals; and
.Sq \es[+-N] ,
.Sq \es+-[N] ,
.Sq \es'+-N' ,
or
.Sq \es+-'N'
for arbitrary-digit numerals:
.Pp
.D1 \es+1bigger\es-1
.D1 \es[+10]much bigger\es[-10]
.D1 \es+(10much bigger\es-(10
.D1 \es+'100'much much bigger\es-'100'
.Pp
Both
.Sq \es
and
.Sq \ef
attributes are forgotten when entering or exiting a macro block.
.Ss Whitespace
Whitespace consists of the space character.
In free-form lines, whitespace is preserved within a line; un-escaped
trailing spaces are stripped from input (unless in a literal context).
Blank free-form lines, which may include spaces, are permitted and
rendered as an empty line.
.Pp
In macro lines, whitespace delimits arguments and is discarded.
If arguments are quoted, whitespace within the quotes is retained.
.Ss Dates
The
.Sx \&TH
macro is the only
.Nm
macro that requires a date.
The form for this date is the ISO-8601
standard
.Cm YYYY-MM-DD .
.Ss Scaling Widths
Many macros support scaled widths for their arguments, such as
stipulating a two-inch paragraph indentation with the following:
.Bd -literal -offset indent
\&.HP 2i
.Ed
.Pp
The syntax for scaled widths is
.Sq Li [+-]?[0-9]*.[0-9]*[:unit:]? ,
where a decimal must be preceded or proceeded by at least one digit.
Negative numbers, while accepted, are truncated to zero.
The following scaling units are accepted:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It c
centimetre
.It i
inch
.It P
pica (~1/6 inch)
.It p
point (~1/72 inch)
.It f
synonym for
.Sq u
.It v
default vertical span
.It m
width of rendered
.Sq m
.Pq em
character
.It n
width of rendered
.Sq n
.Pq en
character
.It u
default horizontal span
.It M
mini-em (~1/100 em)
.El
.Pp
Using anything other than
.Sq m ,
.Sq n ,
.Sq u ,
or
.Sq v
is necessarily non-portable across output media.
.Pp
If a scaling unit is not provided, the numerical value is interpreted
under the default rules of
.Sq v
for vertical spaces and
.Sq u
for horizontal ones.
.Em Note :
this differs from
.Xr mdoc 7 ,
which, if a unit is not provided, will instead interpret the string as
literal text.
.Ss Sentence Spacing
When composing a manual, make sure that your sentences end at the end of
a line.
By doing so, front-ends will be able to apply the proper amount of
spacing after the end of sentence (unescaped) period, exclamation mark,
or question mark followed by zero or more non-sentence closing
delimiters (
.Ns Sq \&) ,
.Sq \&] ,
.Sq \&' ,
.Sq \&" ) .
.Sh MANUAL STRUCTURE
Each
.Nm
document must contain contains at least the
.Sx \&TH
macro describing the document's section and title.
It may occur anywhere in the document, although conventionally, it
appears as the first macro.
.Pp
Beyond
.Sx \&TH ,
at least one macro or text node must appear in the document.
Documents are generally structured as follows:
.Bd -literal -offset indent
\&.TH FOO 1 2009-10-10
\&.
\&.SH NAME
\efBfoo\efR \e(en a description goes here
\&.\e\*q The next is for sections 2 & 3 only.
\&.\e\*q .SH LIBRARY
\&.
\&.SH SYNOPSIS
\efBfoo\efR [\efB\e-options\efR] arguments...
\&.
\&.SH DESCRIPTION
The \efBfoo\efR utility processes files...
\&.
\&.\e\*q .SH IMPLEMENTATION NOTES
\&.\e\*q The next is for sections 2, 3, & 9 only.
\&.\e\*q .SH RETURN VALUES
\&.\e\*q The next is for sections 1, 6, 7, & 8 only.
\&.\e\*q .SH ENVIRONMENT
\&.\e\*q .SH FILES
\&.\e\*q The next is for sections 1 & 8 only.
\&.\e\*q .SH EXIT STATUS
\&.\e\*q .SH EXAMPLES
\&.\e\*q The next is for sections 1, 4, 6, 7, & 8 only.
\&.\e\*q .SH DIAGNOSTICS
\&.\e\*q The next is for sections 2, 3, & 9 only.
\&.\e\*q .SH ERRORS
\&.\e\*q .SH SEE ALSO
\&.\e\*q .BR foo ( 1 )
\&.\e\*q .SH STANDARDS
\&.\e\*q .SH HISTORY
\&.\e\*q .SH AUTHORS
\&.\e\*q .SH CAVEATS
\&.\e\*q .SH BUGS
\&.\e\*q .SH SECURITY CONSIDERATIONS
.Ed
.Pp
The sections in a
.Nm
document are conventionally ordered as they appear above.
Sections should be composed as follows:
.Bl -ohang -offset indent
.It Em NAME
The name(s) and a short description of the documented material.
The syntax for this is generally as follows:
.Pp
.D1 \efBname\efR \e(en description
.It Em LIBRARY
The name of the library containing the documented material, which is
assumed to be a function in a section 2 or 3 manual.
For functions in the C library, this may be as follows:
.Pp
.D1 Standard C Library (libc, -lc)
.It Em SYNOPSIS
Documents the utility invocation syntax, function call syntax, or device
configuration.
.Pp
For the first, utilities (sections 1, 6, and 8), this is
generally structured as follows:
.Pp
.D1 \efBname\efR [-\efBab\efR] [-\efBc\efR\efIarg\efR] \efBpath\efR...
.Pp
For the second, function calls (sections 2, 3, 9):
.Pp
.D1 \&.B char *name(char *\efIarg\efR);
.Pp
And for the third, configurations (section 4):
.Pp
.D1 \&.B name* at cardbus ? function ?
.Pp
Manuals not in these sections generally don't need a
.Em SYNOPSIS .
.It Em DESCRIPTION
This expands upon the brief, one-line description in
.Em NAME .
It usually contains a break-down of the options (if documenting a
command).
.It Em IMPLEMENTATION NOTES
Implementation-specific notes should be kept here.
This is useful when implementing standard functions that may have side
effects or notable algorithmic implications.
.It Em RETURN VALUES
This section is the dual of
.Em EXIT STATUS ,
which is used for commands.
It documents the return values of functions in sections 2, 3, and 9.
.It Em ENVIRONMENT
Documents any usages of environment variables, e.g.,
.Xr environ 7 .
.It Em FILES
Documents files used.
It's helpful to document both the file and a short description of how
the file is used (created, modified, etc.).
.It Em EXIT STATUS
Command exit status for section 1, 6, and 8 manuals.
This section is the dual of
.Em RETURN VALUES ,
which is used for functions.
Historically, this information was described in
.Em DIAGNOSTICS ,
a practise that is now discouraged.
.It Em EXAMPLES
Example usages.
This often contains snippets of well-formed,
well-tested invocations.
Make doubly sure that your examples work properly!
.It Em DIAGNOSTICS
Documents error conditions.
This is most useful in section 4 manuals.
Historically, this section was used in place of
.Em EXIT STATUS
for manuals in sections 1, 6, and 8; however, this practise is
discouraged.
.It Em ERRORS
Documents error handling in sections 2, 3, and 9.
.It Em SEE ALSO
References other manuals with related topics.
This section should exist for most manuals.
.Pp
.D1 \&.BR bar \&( 1 \&),
.Pp
Cross-references should conventionally be ordered
first by section, then alphabetically.
.It Em STANDARDS
References any standards implemented or used, such as
.Pp
.D1 IEEE Std 1003.2 (\e(lqPOSIX.2\e(rq)
.Pp
If not adhering to any standards, the
.Em HISTORY
section should be used.
.It Em HISTORY
The history of any manual without a
.Em STANDARDS
section should be described in this section.
.It Em AUTHORS
Credits to authors, if applicable, should appear in this section.
Authors should generally be noted by both name and an e-mail address.
.It Em CAVEATS
Explanations of common misuses and misunderstandings should be explained
in this section.
.It Em BUGS
Extant bugs should be described in this section.
.It Em SECURITY CONSIDERATIONS
Documents any security precautions that operators should consider.
.El
.Sh MACRO SYNTAX
Macros are one to three three characters in length and begin with a
control character ,
.Sq \&. ,
at the beginning of the line.
The
.Sq \(aq
macro control character is also accepted.
An arbitrary amount of whitespace (spaces or tabs) may sit between the
control character and the macro name.
Thus, the following are equivalent:
.Bd -literal -offset indent
\&.PP
\&.\ \ \ PP
.Ed
.Pp
The
.Nm
macros are classified by scope: line scope or block scope.
Line macros are only scoped to the current line (and, in some
situations, the subsequent line).
Block macros are scoped to the current line and subsequent lines until
closed by another block macro.
.Ss Line Macros
Line macros are generally scoped to the current line, with the body
consisting of zero or more arguments.
If a macro is scoped to the next line and the line arguments are empty,
the next line, which must be text, is used instead.
Thus:
.Bd -literal -offset indent
\&.I
foo
.Ed
.Pp
is equivalent to
.Sq \&.I foo .
If next-line macros are invoked consecutively, only the last is used.
If a next-line macro is followed by a non-next-line macro, an error is
raised (unless in the case of
.Sx \&br ,
.Sx \&sp ,
or
.Sx \&na ) .
.Pp
The syntax is as follows:
.Bd -literal -offset indent
\&.YO \(lBbody...\(rB
\(lBbody...\(rB
.Ed
.Pp
.Bl -column -compact -offset indent "MacroX" "ArgumentsX" "ScopeXXXXX" "CompatX"
.It Em Macro Ta Em Arguments Ta Em Scope     Ta Em Notes
.It Sx \&AT  Ta    <=1       Ta    current   Ta    \&
.It Sx \&B   Ta    n         Ta    next-line Ta    \&
.It Sx \&BI  Ta    n         Ta    current   Ta    \&
.It Sx \&BR  Ta    n         Ta    current   Ta    \&
.It Sx \&DT  Ta    0         Ta    current   Ta    \&
.It Sx \&I   Ta    n         Ta    next-line Ta    \&
.It Sx \&IB  Ta    n         Ta    current   Ta    \&
.It Sx \&IR  Ta    n         Ta    current   Ta    \&
.\" .It Sx \&PD  Ta    n         Ta    current   Ta    compat
.It Sx \&R   Ta    n         Ta    next-line Ta    \&
.It Sx \&RB  Ta    n         Ta    current   Ta    \&
.It Sx \&RI  Ta    n         Ta    current   Ta    \&
.It Sx \&SB  Ta    n         Ta    next-line Ta    \&
.It Sx \&SM  Ta    n         Ta    next-line Ta    \&
.It Sx \&TH  Ta    >1, <6    Ta    current   Ta    \&
.It Sx \&UC  Ta    <=1       Ta    current   Ta    \&
.It Sx \&br  Ta    0         Ta    current   Ta    compat
.It Sx \&fi  Ta    0         Ta    current   Ta    compat
.It Sx \&i   Ta    n         Ta    current   Ta    compat
.It Sx \&na  Ta    0         Ta    current   Ta    compat
.It Sx \&nf  Ta    0         Ta    current   Ta    compat
.It Sx \&r   Ta    0         Ta    current   Ta    compat
.It Sx \&sp  Ta    1         Ta    current   Ta    compat
.\" .It Sx \&Sp  Ta    <1        Ta    current   Ta    compat
.\" .It Sx \&Vb  Ta    <1        Ta    current   Ta    compat
.\" .It Sx \&Ve  Ta    0         Ta    current   Ta    compat
.El
.Pp
Macros marked as
.Qq compat
are included for compatibility with the significant corpus of existing
manuals that mix dialects of roff.
These macros should not be used for portable
.Nm
manuals.
.Ss Block Macros
Block macros are comprised of a head and body.
Like for in-line macros, the head is scoped to the current line and, in
one circumstance, the next line (the next-line stipulations as in
.Sx Line Macros
apply here as well).
.Pp
The syntax is as follows:
.Bd -literal -offset indent
\&.YO \(lBhead...\(rB
\(lBhead...\(rB
\(lBbody...\(rB
.Ed
.Pp
The closure of body scope may be to the section, where a macro is closed
by
.Sx \&SH ;
sub-section, closed by a section or
.Sx \&SS ;
part, closed by a section, sub-section, or
.Sx \&RE ;
or paragraph, closed by a section, sub-section, part,
.Sx \&HP ,
.Sx \&IP ,
.Sx \&LP ,
.Sx \&P ,
.Sx \&PP ,
or
.Sx \&TP .
No closure refers to an explicit block closing macro.
.Pp
As a rule, block macros may not be nested; thus, calling a block macro
while another block macro scope is open, and the open scope is not
implicitly closed, is syntactically incorrect.
.Pp
.Bl -column -compact -offset indent "MacroX" "ArgumentsX" "Head ScopeX" "sub-sectionX" "compatX"
.It Em Macro Ta Em Arguments Ta Em Head Scope Ta Em Body Scope  Ta Em Notes
.It Sx \&HP  Ta    <2        Ta    current    Ta    paragraph   Ta    \&
.It Sx \&IP  Ta    <3        Ta    current    Ta    paragraph   Ta    \&
.It Sx \&LP  Ta    0         Ta    current    Ta    paragraph   Ta    \&
.It Sx \&P   Ta    0         Ta    current    Ta    paragraph   Ta    \&
.It Sx \&PP  Ta    0         Ta    current    Ta    paragraph   Ta    \&
.It Sx \&RE  Ta    0         Ta    current    Ta    none        Ta    compat
.It Sx \&RS  Ta    1         Ta    current    Ta    part        Ta    compat
.It Sx \&SH  Ta    >0        Ta    next-line  Ta    section     Ta    \&
.It Sx \&SS  Ta    >0        Ta    next-line  Ta    sub-section Ta    \&
.It Sx \&TP  Ta    n         Ta    next-line  Ta    paragraph   Ta    \&
.El
.Pp
Macros marked
.Qq compat
are as mentioned in
.Sx Line Macros .
.Pp
If a block macro is next-line scoped, it may only be followed by in-line
macros for decorating text.
.Sh REFERENCE
This section is a canonical reference to all macros, arranged
alphabetically.
For the scoping of individual macros, see
.Sx MACRO SYNTAX .
.Ss \&AT
Sets the volume for the footer for compatibility with man pages from
.Tn AT&T UNIX
releases.
The optional arguments specify which release it is from.
.Ss \&B
Text is rendered in bold face.
.Pp
See also
.Sx \&I ,
.Sx \&R ,
.Sx \&b ,
.Sx \&i ,
and
.Sx \&r .
.Ss \&BI
Text is rendered alternately in bold face and italic.
Thus,
.Sq .BI this word and that
causes
.Sq this
and
.Sq and
to render in bold face, while
.Sq word
and
.Sq that
render in italics.
Whitespace between arguments is omitted in output.
.Pp
Examples:
.Pp
.D1 \&.BI bold italic bold italic
.Pp
The output of this example will be emboldened
.Dq bold
and italicised
.Dq italic ,
with spaces stripped between arguments.
.Pp
See also
.Sx \&IB ,
.Sx \&BR ,
.Sx \&RB ,
.Sx \&RI ,
and
.Sx \&IR .
.Ss \&BR
Text is rendered alternately in bold face and roman (the default font).
Whitespace between arguments is omitted in output.
.Pp
See
.Sx \&BI
for an equivalent example.
.Pp
See also
.Sx \&BI ,
.Sx \&IB ,
.Sx \&RB ,
.Sx \&RI ,
and
.Sx \&IR .
.Ss \&DT
Has no effect.
Included for compatibility.
.Ss \&HP
Begin a paragraph whose initial output line is left-justified, but
subsequent output lines are indented, with the following syntax:
.Bd -filled -offset indent
.Pf \. Sx \&HP
.Op Cm width
.Ed
.Pp
The
.Cm width
argument must conform to
.Sx Scaling Widths .
If specified, it's saved for later paragraph left-margins; if unspecified, the
saved or default width is used.
.Pp
See also
.Sx \&IP ,
.Sx \&LP ,
.Sx \&P ,
.Sx \&PP ,
and
.Sx \&TP .
.Ss \&I
Text is rendered in italics.
.Pp
See also
.Sx \&B ,
.Sx \&R ,
.Sx \&b ,
.Sx \&i ,
and
.Sx \&r .
.Ss \&IB
Text is rendered alternately in italics and bold face.  Whitespace
between arguments is omitted in output.
.Pp
See
.Sx \&BI
for an equivalent example.
.Pp
See also
.Sx \&BI ,
.Sx \&BR ,
.Sx \&RB ,
.Sx \&RI ,
and
.Sx \&IR .
.Ss \&IP
Begin an indented paragraph with the following syntax:
.Bd -filled -offset indent
.Pf \. Sx \&IP
.Op Cm head Op Cm width
.Ed
.Pp
The
.Cm width
argument defines the width of the left margin and is defined by
.Sx Scaling Widths ,
It's saved for later paragraph left-margins; if unspecified, the saved or
default width is used.
.Pp
The
.Cm head
argument is used as a leading term, flushed to the left margin.
This is useful for bulleted paragraphs and so on.
.Pp
See also
.Sx \&HP ,
.Sx \&LP ,
.Sx \&P ,
.Sx \&PP ,
and
.Sx \&TP .
.Ss \&IR
Text is rendered alternately in italics and roman (the default font).
Whitespace between arguments is omitted in output.
.Pp
See
.Sx \&BI
for an equivalent example.
.Pp
See also
.Sx \&BI ,
.Sx \&IB ,
.Sx \&BR ,
.Sx \&RB ,
and
.Sx \&RI .
.Ss \&LP
Begin an undecorated paragraph.
The scope of a paragraph is closed by a subsequent paragraph,
sub-section, section, or end of file.
The saved paragraph left-margin width is re-set to the default.
.Pp
See also
.Sx \&HP ,
.Sx \&IP ,
.Sx \&P ,
.Sx \&PP ,
and
.Sx \&TP .
.Ss \&P
Synonym for
.Sx \&LP .
.Pp
See also
.Sx \&HP ,
.Sx \&IP ,
.Sx \&LP ,
.Sx \&PP ,
and
.Sx \&TP .
.Ss \&PP
Synonym for
.Sx \&LP .
.Pp
See also
.Sx \&HP ,
.Sx \&IP ,
.Sx \&LP ,
.Sx \&P ,
and
.Sx \&TP .
.Ss \&R
Text is rendered in roman (the default font).
.Pp
See also
.Sx \&I ,
.Sx \&B ,
.Sx \&b ,
.Sx \&i ,
and
.Sx \&r .
.Ss \&RB
Text is rendered alternately in roman (the default font) and bold face.
Whitespace between arguments is omitted in output.
.Pp
See
.Sx \&BI
for an equivalent example.
.Pp
See also
.Sx \&BI ,
.Sx \&IB ,
.Sx \&BR ,
.Sx \&RI ,
and
.Sx \&IR .
.Ss \&RE
Explicitly close out the scope of a prior
.Sx \&RS .
.Ss \&RI
Text is rendered alternately in roman (the default font) and italics.
Whitespace between arguments is omitted in output.
.Pp
See
.Sx \&BI
for an equivalent example.
.Pp
See also
.Sx \&BI ,
.Sx \&IB ,
.Sx \&BR ,
.Sx \&RB ,
and
.Sx \&IR .
.Ss \&RS
Begin a part setting the left margin.
The left margin controls the offset, following an initial indentation,
to un-indented text such as that of
.Sx \&PP .
This has the following syntax:
.Bd -filled -offset indent
.Pf \. Sx \&Rs
.Op Cm width
.Ed
.Pp
The
.Cm width
argument must conform to
.Sx Scaling Widths .
If not specified, the saved or default width is used.
.Ss \&SB
Text is rendered in small size (one point smaller than the default font)
bold face.
.Ss \&SH
Begin a section.
The scope of a section is only closed by another section or the end of
file.
The paragraph left-margin width is re-set to the default.
.Ss \&SM
Text is rendered in small size (one point smaller than the default
font).
.Ss \&SS
Begin a sub-section.
The scope of a sub-section is closed by a subsequent sub-section,
section, or end of file.
The paragraph left-margin width is re-set to the default.
.Ss \&TH
Sets the title of the manual page with the following syntax:
.Bd -filled -offset indent
.Pf \. Sx \&TH
.Cm title section
.Op Cm date Op Cm source Op Cm volume
.Ed
.Pp
At least the upper-case document title
.Cm title
and numeric manual section
.Cm section
arguments must be provided.
The
.Cm date
argument should be formatted as described in
.Sx Dates ,
but will be printed verbatim if it is not.
If the date is not specified, the current date is used.
The
.Cm source
string specifies the organisation providing the utility.
The
.Cm volume
string replaces the default rendered volume, which is dictated by the
manual section.
.Pp
Examples:
.Pp
.D1 \&.TH CVS 5 "1992-02-12" GNU
.Ss \&TP
Begin a paragraph where the head, if exceeding the indentation width, is
followed by a newline; if not, the body follows on the same line after a
buffer to the indentation width.
Subsequent output lines are indented.
The syntax is as follows:
.Bd -filled -offset indent
.Pf \. Sx \&TP
.Op Cm width
.Ed
.Pp
The
.Cm width
argument must conform to
.Sx Scaling Widths .
If specified, it's saved for later paragraph left-margins; if
unspecified, the saved or default width is used.
.Pp
See also
.Sx \&HP ,
.Sx \&IP ,
.Sx \&LP ,
.Sx \&P ,
and
.Sx \&PP .
.\" .
.\" .
.\" .Ss \&PD
.\" Has no effect.  Included for compatibility.
.\" .
.\" .
.Ss \&UC
Sets the volume for the footer for compatibility with man pages from
BSD releases.
The optional first argument specifies which release it is from.
.Ss \&br
Breaks the current line.
Consecutive invocations have no further effect.
.Pp
See also
.Sx \&sp .
.Ss \&fi
End literal mode begun by
.Sx \&nf .
.Ss \&i
Italicise arguments.
Synonym for
.Sx \&I .
.Pp
See also
.Sx \&B ,
.Sx \&I ,
.Sx \&R .
.Sx \&b ,
and
.Sx \&r .
.Ss \&na
Don't align to the right margin.
.Ss \&nf
Begin literal mode: all subsequent free-form lines have their end of
line boundaries preserved.
May be ended by
.Sx \&fi .
.Ss \&r
Fonts and styles (bold face, italics) reset to roman (default font).
.Pp
See also
.Sx \&B ,
.Sx \&I ,
.Sx \&R ,
.Sx \&b ,
and
.Sx \&i .
.Ss \&sp
Insert vertical spaces into output with the following syntax:
.Bd -filled -offset indent
.Pf \. Sx \&sp
.Op Cm height
.Ed
.Pp
Insert
.Cm height
spaces, which must conform to
.Sx Scaling Widths .
If 0, this is equivalent to the
.Sx \&br
macro.
Defaults to 1, if unspecified.
.Pp
See also
.Sx \&br .
.\" .Ss \&Sp
.\" A synonym for
.\" .Sx \&sp
.\" .Cm 0.5v .
.\" .
.\" .Ss \&Vb
.\" A synonym for
.\" .Sx \&nf .
.\" Accepts an argument (the height of the formatted space) which is
.\" disregarded.
.\" .
.\" .Ss \&Ve
.\" A synonym for
.\" .Sx \&fi .
.\" .
.Sh COMPATIBILITY
This section documents areas of questionable portability between
implementations of the
.Nm
language.
.Pp
.Bl -dash -compact
.It
In quoted literals, GNU troff allowed pair-wise double-quotes to produce
a standalone double-quote in formatted output.
It is not known whether this behaviour is exhibited by other formatters.
.It
The
.Sx \&sp
macro does not accept negative values in mandoc.
In GNU troff, this would result in strange behaviour.
.It
The
.Sq \(aq
macro control character, in GNU troff (and prior troffs) suppresses a
newline before macro output; in mandoc, it is an alias for the standard
.Sq \&.
control character.
.El
.Sh SEE ALSO
.Xr mandoc 1 ,
.Xr mandoc_char 7
.Sh AUTHORS
The
.Nm
reference was written by
.An Kristaps Dzonsons Aq kristaps@@bsd.lv .
.Sh CAVEATS
Do not use this language.
Use
.Xr mdoc 7 ,
instead.
@


1.27
log
@Merge bsd.lv release 1.10.0,
which is mostly the post-hackathon release,
bringing in the OpenBSD changes to bsd.lv,
but which also has a few additional minor fixes:

* .Lb is an in-line macro, not in_line_eoln
* .Bt, .Ud now warn when discarding arguments
* allow bad -man dates to flow verbatim into the front-ends
- so far all reported by Ulrich Spoerlein
* .Ar, .Fl and .Li starting with closing punctuation emit an empty element
* empty .Li macros print nothing, but may cause spacing
* proper EOS handling for .Bt, .Ex, .Rv, and .Ud.
* cleanup: collapse posts_xr into posts_wtext (which is the same)
* efficiency: very simple table lookup for roff.c
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.26 2010/05/26 02:55:16 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: May 26 2010 $
@


1.26
log
@sync manuals
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.25 2010/05/23 20:57:16 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: May 23 2010 $
d812 3
a814 2
.Sx Dates :
if it does not conform, the current date is used instead.
@


1.25
log
@implement .AT and .UC; from Joerg Sonnenberger
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.24 2010/05/15 15:37:53 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: May 15 2010 $
d437 1
d452 1
a452 1
.\" .It Sx \&UC  Ta    n         Ta    current   Ta    compat
@


1.24
log
@more end-of-sentence (EOS) handling:
* recognize the end of quoted sentences, and of those in parantheses
* detect EOS in append_delims, so it works after all macros
by kristaps@@
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.23 2010/05/14 19:52:43 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: May 14 2010 $
d459 1
a459 1
.\" .It Sx \&Sp  Ta    0         Ta    current   Ta    compat
d532 5
d855 4
a858 2
.\" .Ss \&UC
.\" Has no effect.  Included for compatibility.
@


1.23
log
@Integrate kristaps@@' end-of-sentence (EOS) framework
which is simpler and more powerful than mine, and remove mine.

* man(7) now has EOS handling, too
* put EOS detection into its own function in libmandoc
* use node and termp flags to communicate the EOS condition
* no more EOS pseudo-macro
* no more non-printable EOS marker character on the formatter level

This slightly breaks EOS detection after trailing punctuation
in mdoc(7) macros, but that will be restored soon.
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.22 2010/05/14 14:47:44 schwarze Exp $
d219 7
a225 2
spacing after the end of sentence (unescaped) period, exclamation, or question
mark.
@


1.22
log
@Merge 1.9.25, keeping local patches;
this does not merge kristaps' end-of-sentences handling yet,
i will check that separately.  This one includes:
* handle \*(Ba as a delimiter
* introduce ARGS_PEND for .Bl -column .It end-of-line special casing
* section ordering: expect EXIT STATUS at the right place
* line break fixes in SYNOPSIS
* allow literal contexts to have arbitrary line lengths
* the input file column number can not be used to identify the beginning
  of a line because white space is allowed after the initial '.'
* proper leading spaces in -man -Tascii mode
* do not let Lb break lines in -mdoc -Thtml LIBRARY
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.21 2010/05/14 01:54:37 schwarze Exp $
d215 6
@


1.21
log
@merge 1.9.24, keeping local patches; some changes:
* preserve multiple consecutive space characters in input
* do not restrict .Cd and .Rv to certain sections (requested by Joerg)
* do not run lookup() on quoted words
* enum return types for mdoc_args and mdoc_argv
* fix auto-closing of LINK tag in -Txhtml (from Daniel Friesel)
* various lint and manual fixes
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.20 2010/04/07 23:15:05 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: April 7 2010 $
d28 2
a29 2
manuals.  This reference document describes its syntax, structure, and
usage.
d45 2
a46 1
are parsed for macros.  Other lines are interpreted within the scope of
d55 2
a56 1
space character, and the tabs character.  All manuals must have
d66 2
a67 1
line.  A macro line with only a control character and comment escape,
d69 3
a71 2
is also ignored.  Macro lines with only a control character and
optionally whitespace are stripped from input.
d82 2
a83 1
or a single one-character sequence.  See
d85 2
a86 1
for a complete list.  Examples include
d101 4
a104 3
respectively) may be used instead.  A text decoration is only valid, if
specified in free-form text, until the next macro invocation; if
specified within a macro, it's only valid until the macro closes scope.
d142 2
a143 2
In macro lines, whitespace delimits arguments and is discarded.  If
arguments are quoted, whitespace within the quotes is retained.
d149 2
a150 1
macro that requires a date.  The form for this date is the ISO-8601
d163 2
a164 2
Negative numbers, while accepted, are truncated to zero.  The following
scaling units are accepted:
d220 3
a222 3
macro describing the document's section and title.  It may occur
anywhere in the document, although conventionally, it appears as the
first macro.
d226 2
a227 2
at least one macro or text node must appear in the document.  Documents
are generally structured as follows:
a242 2
\&.\e\*q The next is for sections 1 & 8 only.
\&.\e\*q .SH EXIT STATUS
d248 2
d267 2
a268 2
document are conventionally ordered as they appear above.  Sections
should be composed as follows:
d271 2
a272 2
The name(s) and a short description of the documented material.  The
syntax for this is generally as follows:
d277 2
a278 2
assumed to be a function in a section 2 or 3 manual.  For functions in
the C library, this may be as follows:
d306 3
a308 11
Implementation-specific notes should be kept here.  This is useful when
implementing standard functions that may have side effects or notable
algorithmic implications.
.It Em EXIT STATUS
Command exit status for section 1, 6, and 8 manuals.  This section is
the dual of
.Em RETURN VALUES ,
which is used for functions.  Historically, this information was
described in
.Em DIAGNOSTICS ,
a practise that is now discouraged.
d312 2
a313 2
which is used for commands.  It documents the return values of functions
in sections 2, 3, and 9.
d318 11
a328 2
Documents files used.  It's helpful to document both the file and a
short description of how the file is used (created, modified, etc.).
d330 4
a333 3
Example usages.  This often contains snippets of well-formed,
well-tested invocations.  Make doubly sure that your examples work
properly!
d335 2
a336 1
Documents error conditions.  This is most useful in section 4 manuals.
d344 2
a345 2
References other manuals with related topics.  This section should exist
for most manuals.
d378 2
a379 1
at the beginning of the line.  The
d381 4
a384 3
macro control character is also accepted.  An arbitrary amount of
whitespace (spaces or tabs) may sit between the control character and
the macro name.  Thus, the following are equivalent:
d392 5
a396 4
macros are classified by scope: line scope or block scope.  Line
macros are only scoped to the current line (and, in some situations,
the subsequent line).  Block macros are scoped to the current line and
subsequent lines until closed by another block macro.
d399 4
a402 3
consisting of zero or more arguments.  If a macro is scoped to the next
line and the line arguments are empty, the next line, which must be
text, is used instead.  Thus:
d456 2
a457 2
manuals that mix dialects of roff.  These macros should not be used for
portable
d461 3
a463 3
Block macros are comprised of a head and body.  Like for in-line macros,
the head is scoped to the current line and, in one circumstance, the
next line (the next-line stipulations as in
d518 2
a519 1
alphabetically.  For the scoping of individual macros, see
d532 2
a533 1
Text is rendered alternately in bold face and italic.  Thus,
d543 2
a544 1
render in italics.  Whitespace between arguments is omitted in output.
d579 2
a580 1
Has no effect.  Included for compatibility.
d644 2
a645 2
argument is used as a leading term, flushed to the left margin.  This is
useful for bulleted paragraphs and so on.
d670 4
a673 3
Begin an undecorated paragraph.  The scope of a paragraph is closed by a
subsequent paragraph, sub-section, section, or end of file.  The saved
paragraph left-margin width is re-set to the default.
d748 3
a750 3
Begin a part setting the left margin.  The left margin controls the
offset, following an initial indentation, to un-indented text such as
that of
d767 4
a770 3
Begin a section.  The scope of a section is only closed by another
section or the end of file.  The paragraph left-margin width is re-set
to the default.
d775 4
a778 3
Begin a sub-section.  The scope of a sub-section is closed by a
subsequent sub-section, section, or end of file.  The paragraph
left-margin width is re-set to the default.
d791 2
a792 1
arguments must be provided.  The
d796 2
a797 1
if it does not conform, the current date is used instead.  The
d799 2
a800 1
string specifies the organisation providing the utility.  The
d811 2
a812 1
buffer to the indentation width.  Subsequent output lines are indented.
d842 2
a843 1
Breaks the current line.  Consecutive invocations have no further effect.
d851 2
a852 1
Italicise arguments.  Synonym for
d866 2
a867 1
line boundaries preserved.  May be ended by
d892 2
a893 1
macro.  Defaults to 1, if unspecified.
d921 2
a922 2
a standalone double-quote in formatted output.  It is not known whether
this behaviour is exhibited by other formatters.
d926 2
a927 2
macro does not accept negative values in mandoc.  In GNU troff, this
would result in strange behaviour.
d945 2
a946 1
Do not use this language.  Use
@


1.20
log
@Merge the good parts of 1.9.23,
avoid the bad parts of 1.9.23, and keep local patches.

Input in general:
 * Basic handling of roff-style font escapes \f, \F.
 * Quoted punctuation does not count as punctuation.

mdoc(7) parser:
 * Make .Pf callable; noted by Claus Assmann.
 * Let .Bd and .Bl ignore unknown arguments; noted by deraadt@@.
 * Do not warn when .Er is used outside certain sections.
 * Replace mdoc_node_free[list] by mdoc_node_delete.
 * Replace #define by enum for rew*() return values.

man(7) parser:
 * When .TH is missing, use default section and date.

Output in general:
 * Curly braces do not count as punctuation.
 * No space after .Fl w/o args when a macro follows on the same line.

HTML output:
 * Unify PAIR_*_INIT macros, introduce new PAIR_ID_INIT().
 * Print whitespace after, not before .Vt .Fn .Ft .Fo.

Checked that all manuals in base still build.
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.19 2010/03/29 22:56:52 schwarze Exp $
d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@kth.se>
d17 1
a17 1
.Dd $Mdocdate: March 29 2010 $
a19 2
.
.
a22 2
.
.
a29 1
.
a38 1
.
a50 2
.
.
a56 1
.
a59 2
.
.
a67 2
.
.
a85 2
.
.
a127 2
.
.
d129 8
a136 6
Unless specifically escaped, consecutive blocks of whitespace are pruned
from input.  These are later re-added, if applicable, by a front-end
utility such as
.Xr mandoc 1 .
.
.
a144 2
.
.
a150 1
.
a156 1
.
a194 1
.
a206 2
.
.
a214 1
.
a308 1
.
a313 1
.
a316 1
.
a319 1
.
a323 1
.
a329 1
.
a331 1
.
a339 1
.
a347 1
.
a351 1
.
a354 1
.
a357 1
.
a359 1
.
a361 1
.
a362 2
.
.
a375 1
.
a382 2
.
.
a391 1
.
a407 1
.
a436 1
.
a444 2
.
.
a457 1
.
a474 1
.
a478 1
.
a493 1
.
a497 1
.
a500 2
.
.
a504 2
.
.
a514 2
.
.
a544 2
.
.
a559 2
.
.
a561 2
.
.
a583 2
.
.
a593 2
.
.
a608 2
.
.
a634 2
.
.
a649 2
.
.
a661 2
.
.
a672 2
.
.
a683 2
.
.
a693 2
.
.
a708 2
.
.
a711 2
.
.
a726 2
.
.
a742 2
.
.
a745 2
.
.
a749 2
.
.
a752 2
.
.
a756 2
.
.
a782 2
.
.
a814 2
.
.
a819 2
.
.
a822 2
.
.
a833 2
.
.
a835 2
.
.
a839 2
.
.
a849 2
.
.
a866 1
.
a881 1
.
a886 1
.
a892 7
.
.It
Blocks of whitespace are stripped from macro and free-form text lines
(except when in literal mode) in mandoc.  This is not the case for GNU
troff: for maximum portability, whitespace sensitive blocks should be
enclosed in literal contexts.
.
a897 1
.
a905 2
.
.
a908 2
.
.
d913 1
a913 3
.An Kristaps Dzonsons Aq kristaps@@kth.se .
.
.
a917 1
.
@


1.19
log
@merge 1.9.19, keeping local patches
 * scoping fixes for roff instructions
 * accept apostroph in place of dot as a macro control character
 * accept tabs between the control character and the macro name
 * check that man(7) .TH titles use capital letters
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.18 2010/03/26 01:22:05 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: March 26 2010 $
a442 1
.Sx \&Sp ,
@


1.18
log
@merge 1.9.17, keeping local patches

* much improved pod2man support and low-level roff robustness
* have -Tlint imply -Wall and -fstrict
* use fewer macros and more enum in libman
* and various bug fixes
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.17 2010/03/25 23:23:01 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: March 25 2010 $
d406 5
a410 3
at the beginning of the line.  An arbitrary amount of whitespace may
sit between the control character and the macro name.  Thus, the
following are equivalent:
d1004 1
d1011 1
d1017 1
d1023 8
@


1.17
log
@merge 1.9.16, keeping local patches

This is mostly cleanup by kristaps@@ after my rather hackish patch
to tolerate the non-text macros .na, .sp, .br in next-line scope;
plus some nesting issues fixed by him, all in man(7).
This survived a full  cd /usr/src; make man.
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.16 2010/02/18 02:11:26 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: February 18 2010 $
d441 1
d452 27
a478 24
.Bl -column -compact -offset indent "MacroX" "ArgumentsX" "ScopeXXXXX"
.It Em Macro Ta Em Arguments Ta Em Scope
.It Sx \&B   Ta    n         Ta    next-line
.It Sx \&BI  Ta    n         Ta    current
.It Sx \&BR  Ta    n         Ta    current
.It Sx \&DT  Ta    0         Ta    current
.It Sx \&I   Ta    n         Ta    next-line
.It Sx \&IB  Ta    n         Ta    current
.It Sx \&IR  Ta    n         Ta    current
.It Sx \&PD  Ta    n         Ta    current
.It Sx \&R   Ta    n         Ta    next-line
.It Sx \&RB  Ta    n         Ta    current
.It Sx \&RI  Ta    n         Ta    current
.It Sx \&SB  Ta    n         Ta    next-line
.It Sx \&SM  Ta    n         Ta    next-line
.It Sx \&TH  Ta    >1, <6    Ta    current
.It Sx \&UC  Ta    n         Ta    current
.It Sx \&br  Ta    0         Ta    current
.It Sx \&fi  Ta    0         Ta    current
.It Sx \&i   Ta    n         Ta    current
.It Sx \&na  Ta    0         Ta    current
.It Sx \&nf  Ta    0         Ta    current
.It Sx \&r   Ta    0         Ta    current
.It Sx \&sp  Ta    1         Ta    current
d482 7
a488 14
The
.Sx \&PD ,
.Sx \&RS ,
.Sx \&RE ,
.Sx \&UC ,
.Sx \&br ,
.Sx \&fi ,
.Sx \&i ,
.Sx \&na ,
.Sx \&nf ,
.Sx \&r ,
and
.Sx \&sp
macros should not be used.  They're included for compatibility.
d494 3
a496 2
next line (the next-line stipulations for line macros apply here as
well).
d524 17
a540 12
.Bl -column "MacroX" "ArgumentsX" "Head ScopeX" "sub-sectionX" -compact -offset indent
.It Em Macro Ta Em Arguments Ta Em Head Scope Ta Em Body Scope
.It Sx \&HP  Ta    <2        Ta    current    Ta    paragraph
.It Sx \&IP  Ta    <3        Ta    current    Ta    paragraph
.It Sx \&LP  Ta    0         Ta    current    Ta    paragraph
.It Sx \&P   Ta    0         Ta    current    Ta    paragraph
.It Sx \&PP  Ta    0         Ta    current    Ta    paragraph
.It Sx \&RE  Ta    0         Ta    current    Ta    none
.It Sx \&RS  Ta    1         Ta    current    Ta    part
.It Sx \&SH  Ta    >0        Ta    next-line  Ta    section
.It Sx \&SS  Ta    >0        Ta    next-line  Ta    sub-section
.It Sx \&TP  Ta    n         Ta    next-line  Ta    paragraph
d542 6
d551 1
a551 11
macros (excluding
.Sx \&DT ,
.Sx \&PD ,
.Sx \&TH ,
.Sx \&UC ,
.Sx \&br ,
.Sx \&na ,
.Sx \&sp ,
.Sx \&nf ,
and
.Sx \&fi ) .
d906 8
a913 8
.
.
.Ss \&PD
Has no effect.  Included for compatibility.
.
.
.Ss \&UC
Has no effect.  Included for compatibility.
d981 15
d998 4
a1001 3
This section documents compatibility with other roff implementations, at
this time limited to
.Xr groff 1 .
d1005 3
a1007 5
The
.Xr groff 1
.Sx \&i
macro will italicise all subsequent text if a line argument is not
provided.  This behaviour is not implemented.
d1009 4
a1012 3
In quoted literals, groff allowed pair-wise double-quotes to produce a
standalone double-quote in formatted output.  This idiosyncratic
behaviour is no longer applicable.
d1016 2
a1017 5
macro does not accept negative numbers.
.It
Blocks of whitespace are stripped from both macro and free-form text
lines (except when in literal mode), while groff would retain whitespace
in free-form text lines.
@


1.16
log
@sync to release 1.9.15:
 * corrected .Vt handling (spotted by Joerg Sonnenberger)
 * corrected .Xr argument handling (based on my patch)
 * removed \\ escape sequence (because it is for low-level roff only)
 * warn about trailing whitespace (suggested by jmc@@)
 * -Txhtml support
 * and some general cleanup and doc improvements
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.15 2009/12/24 02:08:14 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: December 24 2009 $
d426 2
a427 2
line and the line arguments are empty, the next line is used instead,
else the general syntax is used.  Thus:
d436 9
a444 3
If next-line macros are invoked consecutively, only the last is used; in
other words, if a next-line macro is preceded by a block macro, it is
ignored.
d497 4
a500 2
next line; the body is scoped to subsequent lines and is closed out by a
subsequent block macro invocation.
@


1.15
log
@sync to 1.9.14: rewrite escape sequence handling:
- new function a2roffdeco
- font modes (\f) only affect the current stack point
- implement scaling (\s)
- implement space suppression (\c)
- implement non-breaking space (\~) in -Tascii
- many manual improvements
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.14 2009/12/23 22:30:17 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: December 23 2009 $
d105 1
a105 1
(revert to previous mode):  
d298 1
a298 1
configuration. 
d313 1
a313 1
Manuals not in these sections generally don't need a 
d316 1
a316 1
This expands upon the brief, one-line description in 
d364 1
a364 1
for most manuals.  
d507 1
a507 1
or paragraph, closed by a section, sub-section, part, 
d566 1
a566 1
Text is rendered alternately in bold face and italic.  Thus, 
d572 1
a572 1
to render in bold face, while 
d822 1
a822 1
If not specified, the saved or default width is used. 
d963 1
a963 1
Insert 
@


1.14
log
@sync to 1.9.13: minor fixes:

correctness/functionality:
 - bugfix: properly ignore lines with only a dot in -man
 - bugfix: .Bl -ohang doesn't allow -width, warn about this
 - improve date string handling by new function mandoc_a2time
 - some HTML improvements
 - significant documentation additions in man.7 and mdoc.7

portability:
 - replace __dead by __attribute__((noreturn))
 - bugfix: correct .Dx rendering
 - some more library names for NetBSD

simplicity:
 - replace hand-rolled putchar(3)-loops by fwrite(3)
 - replace single-character printf(3) by putchar(3)
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.13 2009/10/27 21:40:07 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: October 27 2009 $
a69 8
.Pp
The
.Sq \ec
escape is common in historical
.Nm
documents; if encountered at the end of a word, it ensures that the
subsequent word isn't off-set by whitespace.
.
d104 39
a142 2
escape followed by an indicator: B (bold), I, (italic), or P and R
(Roman, or reset).
d922 2
a923 2
Italicise arguments.  If no arguments are specified, all subsequent text
is italicised.
d979 8
a986 1
.Bl -hyphen
d993 1
a993 1
.Sq sp
@


1.13
log
@sync to 1.9.11: adapt printing of dates to groff conventions,
NetBSD portability fixes and some minor bugfixes and feature enhancements;
also checked that my hyphenation code still works on top of this
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.12 2009/10/21 19:13:50 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: October 21 2009 $
d85 1
a85 1
is also ignored.  Macro lines with only a control charater and
d122 11
d184 1
a184 2
is necessarily non-portable across output media.  See 
.Sx COMPATIBILITY .
d215 1
a215 1
\&.TH FOO 1 "13 Aug 2009"
d242 1
a242 1
\&.\e\*q \efBbar\efR(1)
d255 2
a256 2
.Bl -tag -width Ds -offset Ds
.It NAME
d261 1
a261 1
.It LIBRARY
d267 1
a267 1
.It SYNOPSIS
d278 1
a278 1
.D1 \. Ns Sx \&B No char *name(char *\efIarg\efR);
d282 1
a282 1
.D1 \. Ns Sx \&B No name* at cardbus ? function ?
d284 8
a291 5
Manuals not in these sections generally don't need a SYNOPSIS.
.It DESCRIPTION
This expands upon the brief, one-line description in NAME.  It usually
contains a break-down of the options (if documenting a command).
.It IMPLEMENTATION NOTES
d295 75
a369 14
.It EXIT STATUS
.It RETURN VALUES
.It ENVIRONMENT
.It FILES
.It EXAMPLES
.It DIAGNOSTICS
.It ERRORS
.It SEE ALSO
.It STANDARDS
.It HISTORY
.It AUTHORS
.It CAVEATS
.It BUGS
.It SECURITY CONSIDERATIONS
d407 3
a409 2
If next-line macros are invoked consecutively, only the last is used.
If a next-line macro is proceded by a block macro, it is ignored.
d523 1
d526 10
d548 20
d571 14
d587 2
d592 3
a594 2
.Bd -literal -offset indent
\&.HP [width]
d596 16
a612 5
.Pp
If scaling width
.Va width
is specified, it's saved for later paragraph left-margins; if
unspecified, the saved or default width is used.
d615 10
d628 14
d643 4
a646 3
Begin a paragraph with the following syntax:
.Bd -literal -offset indent
\&.IP [head [width]]
d648 21
a669 8
.Pp
This follows the behaviour of the
.Sx \&TP
except for the macro syntax (all arguments on the line, instead of
having next-line scope).  If
.Va width
is specified, it's saved for later paragraph left-margins; if
unspecified, the saved or default width is used.
d673 14
d691 10
d704 10
d717 10
d729 10
d742 14
d759 2
d764 14
d783 4
a786 3
A scaling width may be specified as following:
.Bd -literal -offset indent
\&.RS [width]
d788 7
a795 4
.Pp
If
.Va width
is not specified, the saved or default width is used. 
d799 2
d805 2
d810 2
d816 2
d820 4
a823 2
.Bd -literal -offset indent
\&.TH title section [date [source [volume]]]
a824 1
.
d826 4
a829 4
At least the 
.Va title
and
.Va section
d831 5
a835 7
.Va date
argument should be formatted as
.Qq %b [%d] %Y
format, described in
.Xr strptime 3 .
The
.Va source
d837 9
a845 2
.Va volume
replaces the default rendered volume as dictated by the manual section.
d850 4
a853 5
.
.Pp
The indentation scaling width may be set as follows:
.Bd -literal -offset indent
\&.TP [width]
a854 1
.
d856 5
a860 3
If
.Va width
is specified, it's saved for later paragraph left-margins; if
d862 10
d874 2
d878 2
d882 5
d890 2
d895 10
d907 2
d913 2
d917 10
d928 11
a938 2
Insert n spaces, where n is the macro's positive numeric argument.  If
0, this is equivalent to the
d940 4
a943 1
macro.
@


1.12
log
@sync to 1.9.9, featuring:
 * -Thtml output mode
 * roff scaling units
 * and some minor fixes
for full changelogs, see http://bsd.lv/cgi-bin/cvsweb.cgi/
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.11 2009/09/18 22:46:14 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: September 18 2009 $
d240 57
d350 1
d369 1
d432 1
d588 2
@


1.11
log
@sync to 1.9.2: Add .UC libman macro for compatibility, has no effect.
Correct .UC and .DT to not print their arguments.
Document that .UC and .DT should not be used.
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.10 2009/08/22 23:17:39 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: August 22 2009 $
d122 67
d194 1
a194 1
.Sq TH
d201 1
a201 1
.Sq TH ,
d247 6
a252 5
sit between the control character and the macro name.  Thus,
.Sq .PP
and
.Sq \&.\ \ \ PP
are equivalent.
d286 21
a306 21
.It    B     Ta    n         Ta    next-line
.It    BI    Ta    n         Ta    current
.It    BR    Ta    n         Ta    current
.It    DT    Ta    0         Ta    current
.It    I     Ta    n         Ta    next-line
.It    IB    Ta    n         Ta    current
.It    IR    Ta    n         Ta    current
.It    R     Ta    n         Ta    next-line
.It    RB    Ta    n         Ta    current
.It    RI    Ta    n         Ta    current
.It    SB    Ta    n         Ta    next-line
.It    SM    Ta    n         Ta    next-line
.It    TH    Ta    >1, <6    Ta    current
.It    UC    Ta    n         Ta    current
.It    br    Ta    0         Ta    current
.It    fi    Ta    0         Ta    current
.It    i     Ta    n         Ta    current
.It    na    Ta    0         Ta    current
.It    nf    Ta    0         Ta    current
.It    r     Ta    0         Ta    current
.It    sp    Ta    1         Ta    current
d311 9
a319 9
.Sq RS ,
.Sq RE ,
.Sq UC ,
.Sq br ,
.Sq fi ,
.Sq i ,
.Sq na ,
.Sq nf ,
.Sq r ,
d321 1
a321 1
.Sq sp
d339 1
a339 1
.Sq SH ;
d341 1
a341 1
.Sq SS ;
d343 1
a343 1
.Sq RE ;
d345 5
a349 5
.Sq HP ,
.Sq IP ,
.Sq LP ,
.Sq P ,
.Sq PP ,
d351 1
a351 1
.Sq TP .
d357 10
a366 10
.It   HP     Ta    <2        Ta    current    Ta    paragraph
.It   IP     Ta    <3        Ta    current    Ta    paragraph
.It   LP     Ta    0         Ta    current    Ta    paragraph
.It   P      Ta    0         Ta    current    Ta    paragraph
.It   PP     Ta    0         Ta    current    Ta    paragraph
.It   RE     Ta    0         Ta    current    Ta    none
.It   RS     Ta    1         Ta    current    Ta    part
.It   SH     Ta    >0        Ta    next-line  Ta    section
.It   SS     Ta    >0        Ta    next-line  Ta    sub-section
.It   TP     Ta    n         Ta    next-line  Ta    paragraph
d372 7
a378 7
.Sq DT ,
.Sq TH ,
.Sq UC ,
.Sq br ,
.Sq na ,
.Sq sp ,
.Sq nf ,
d380 1
a380 1
.Sq fi ) .
d388 1
a388 24
.
.Ss Definitions
In this reference, a numerical width may be either a standalone natural
number (such as 3, 4, 10, etc.) or a natural number followed by a width
multiplier 
.Qq n ,
corresponding to the width of the formatted letter n, or
.Qq m ,
corresponding to the width of the formatted letter m.  The latter is the
default, if unspecified.  Thus,
.Bd -literal -offset indent
\&.HP 12n
.Ed
.
.Pp
indicates an offset of 12 
.Qq n
.Ns -sized
letters.
.
.
.Ss Macro Reference
.Bl -tag -width Ds
.It B
d390 1
a390 1
.It BI
d402 1
a402 1
.It BR
d405 1
a405 1
.It DT
d407 1
a407 1
.It HP
d415 1
a415 1
If 
d419 1
a419 1
.It I
d421 1
a421 1
.It IB
d424 1
a424 1
.It IP
d432 1
a432 1
.Sq TP
d438 1
a438 1
.It IR
d441 1
a441 1
.It LP, P, PP
d445 7
a451 1
.It R
d453 1
a453 1
.It RB
d456 1
a456 1
.It RE
d458 2
a459 2
.Sq RS .
.It RI
d462 1
a462 1
.It RS
d466 2
a467 2
.Sq PP .
The width may be specified as following:
d476 1
a476 1
.It SB
d479 1
a479 1
.It SH
d483 1
a483 1
.It SM
d486 1
a486 1
.It SS
d490 1
a490 1
.It TH
d512 1
a512 1
.It TP
d518 1
a518 1
The indentation width may be set as follows:
d524 1
a524 3
Where
.Va width
must be a properly-formed numeric width.  If
d528 1
a528 1
.It UC
d530 1
a530 1
.It br
d532 1
a532 1
.It fi
d534 2
a535 2
.Sq nf .
.It i
d538 1
a538 1
.It na
d540 1
a540 1
.It nf
d543 2
a544 2
.Sq fi .
.It r
d546 1
a546 1
.It sp
d549 1
a549 1
.Sq br
a550 1
.El
@


1.10
log
@another large chunk of -man updates,
among others regarding .DT, .HP, .RS, .RE, .SH, .SS, and scoping,
now in sync vith release 1.9.1
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.9 2009/08/22 20:14:37 schwarze Exp $
d231 1
d245 1
d254 1
a254 3
macros aren't historically part of
.Nm
and should not be used.  They're included for compatibility.
d306 1
d361 1
a361 1
Re-set the tab spacing to 0.5 inches.
d479 2
d490 1
a490 1
Don't alignment the right margin.
@


1.9
log
@Kristaps@@ significantly overhauled libman.
I'm committing this in one large chunk because in contrast to -mdoc, -man
is mostly untested in OpenBSD anyway, so any fallout can be fixed in-tree.
Among others, improved support for .IP, .HP, and .TP.
Now in sync with release 1.9.0.
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.8 2009/08/22 16:41:45 schwarze Exp $
d23 2
a24 2
. Nm man
. Nd man language reference
d29 1
a29 1
. Nm man
d31 1
a31 1
. Ux
d34 3
a36 2
. Pp
. Bf -emphasis
d38 1
a38 1
.  Nm
d40 1
a40 1
. Ef
d42 1
a42 1
. Xr mdoc 7
d44 2
a45 1
. Pp
d47 1
a47 1
. Nm
d50 1
a50 1
. Sq \&.
d53 1
a53 1
. Bd -literal -offset indent
d56 1
a56 1
. Ed
d60 1
a60 1
. Nm
d63 1
a63 1
. Ux
d65 2
a66 1
. Pp
d69 2
a70 1
. Pp
d72 1
a72 1
. Sq \ec
d74 1
a74 1
. Nm
d79 1
a79 1
. Ss Comments
d81 1
a81 1
.  Sq \e\*" ,
d84 1
a84 1
.  Sq \&.\e" ,
d89 1
a89 1
. Ss Special Characters
d92 1
a92 1
.  Sq \e
d94 1
a94 1
.  Sq \&(
d96 1
a96 1
.  Sq \&[
d98 1
a98 1
.  Sq \&] ) ;
d100 1
a100 1
.  Xr mandoc_char 7
d102 2
a103 2
.  Sq \e(em
.  Pq em-dash
d105 2
a106 2
.  Sq \ee
.  Pq back-slash .
d109 1
a109 1
. Ss Text Decoration
d111 1
a111 1
.  Sq \ef
d116 1
a116 1
. Ss Whitespace
d120 1
a120 1
.  Xr mandoc 1 .
d125 1
a125 1
. Nm
d127 1
a127 1
. Sq \&TH
d131 2
a132 1
. Pp
d134 1
a134 1
. Sq \&TH ,
d137 1
a137 1
. Bd -literal -offset indent
d141 3
a143 1
foo \e- a description goes here
d149 1
a149 1
The \efBfoo\efR utility does...
d151 4
d156 1
d160 1
d162 1
d171 2
a172 1
. Ed
d178 1
a178 1
. Sq \&. ,
d181 1
a181 1
. Sq \&.PP
d183 1
a183 1
. Sq \&.\ \ \ \&PP
d185 2
a186 1
. Pp
d188 2
a189 2
. Nm
macros are classified by scope: line scope or block scope.  Line-scoped
d195 7
a201 6
. Ss Line Macros
Line-macros are scoped to the current line, with the body consisting of
zero or more arguments.  If a macro is next-line scoped and the line
arguments are empty, the next line is used instead.  Thus:
.  Bd -literal -offset indent
\&.RI
d203 3
a205 2
.  Ed
.  Pp
d207 4
a210 4
.  Sq \&.RI foo .
.\" PARAGRAPH
Consecutive next-line invocations are disallowed.
.  Bd -literal -offset indent
d213 37
a249 32
.  Ed
.  Pp
.  Bl -column -compact -offset indent "MacroX" "ArgumentsX" "ScopeXXXXX"
.   It Em Macro Ta Em Arguments Ta Em Scope
.   It  \&B     Ta    n         Ta    next-line
.   It  \&BI    Ta    n         Ta    current
.   It  \&BR    Ta    n         Ta    current
.   It  \&I     Ta    n         Ta    next-line
.   It  \&IB    Ta    n         Ta    current
.   It  \&IR    Ta    n         Ta    current
.   It  \&R     Ta    n         Ta    next-line
.   It  \&RB    Ta    n         Ta    current
.   It  \&RI    Ta    n         Ta    current
.   It  \&SB    Ta    n         Ta    next-line
.   It  \&SM    Ta    n         Ta    next-line
.   It  \&TH    Ta    >1, <6    Ta    current
.   It  \&br    Ta    0         Ta    current
.   It  \&fi    Ta    0         Ta    current
.   It  \&i     Ta    n         Ta    current
.   It  \&na    Ta    0         Ta    current
.   It  \&nf    Ta    0         Ta    current
.   It  \&r     Ta    0         Ta    current
.   It  \&sp    Ta    1         Ta    current
.  El
.  Pp
The lower-case 
.  Sq \&br ,
.  Sq \&fi ,
.  Sq \&i ,
.  Sq \&na ,
.  Sq \&nf ,
.  Sq \&r ,
d251 1
a251 1
.  Sq \&sp
d253 1
a253 1
.  Nm
d257 6
a262 6
. Ss Block Macros
Block macros are comprised of a head and body.  The head is scoped to
the current line and, in one circumstance, the next line; the body is
scoped to subsequent lines and is closed out by a subsequent block macro
invocation.
.  Bd -literal -offset indent
d266 36
a301 2
.  Ed
.  Pp
d304 6
a309 5
.  Sq br ,
.  Sq na ,
.  Sq sp ,
.  Sq nf ,
.  Sq fi ,
d311 1
a311 13
.  Sq TH ) .
.  Pp
.  Bl -column "MacroX" "Arguments" "ScopeXXXX" -compact -offset indent
.   It Em Macro Ta Em Arguments Ta Em Scope
.   It \&HP     Ta    <2        Ta    current
.   It \&IP     Ta    <3        Ta    current
.   It \&LP     Ta    0         Ta    current
.   It \&P      Ta    0         Ta    current
.   It \&PP     Ta    0         Ta    current
.   It \&SH     Ta    >0        Ta    current
.   It \&SS     Ta    >0        Ta    current
.   It \&TP     Ta    n         Ta    next-line
.  El
d317 1
a317 1
. Sx MACRO SYNTAX .
d320 1
a320 1
. Ss Terms
d324 1
a324 1
.  Qq n ,
d326 1
a326 1
.  Qq m ,
d329 1
a329 1
.  Bd -literal -offset indent
d331 3
a333 2
.  Ed
.  Pp
d335 2
a336 2
.  Qq n
.  Ns -sized
d340 3
a342 3
. Ss Macro Reference
.  Bl -tag -width Ds
.   It \&B
d344 1
a344 1
.   It \&BI
d346 1
a346 1
.    Sq \&.BI this word and that
d348 1
a348 1
.    Sq this
d350 1
a350 1
.    Sq and
d352 1
a352 1
.    Sq word
d354 1
a354 1
.    Sq that
d356 1
a356 1
.   It \&BR
d359 3
a361 1
.   It \&HP
d364 1
a364 1
.    Bd -literal -offset indent
d366 3
a368 2
.    Ed
.    Pp
d370 1
a370 1
.    Va width
d373 1
a373 1
.   It \&I
d375 1
a375 1
.   It \&IB
d378 1
a378 1
.   It \&IP
d380 1
a380 1
.    Bd -literal -offset indent
d382 3
a384 2
.    Ed
.    Pp
d386 1
a386 1
.    Sq \&TP
d389 1
a389 1
.    Va width
d392 1
a392 1
.   It \&IR
d395 1
a395 1
.   It \&LP, \&P, \&PP
d399 1
a399 1
.   It \&R
d401 1
a401 1
.   It \&RB
d404 4
a407 1
.   It \&RI
d410 15
a424 1
.   It \&SB
d427 1
a427 1
.   It \&SH
d431 1
a431 1
.   It \&SM
d434 1
a434 1
.   It \&SS
d438 1
a438 1
.   It \&TH
d440 5
a444 4
.    Bd -literal -offset indent
\&.TH title section date source volume
.    Ed
.    Pp
d446 1
a446 1
.    Va title
d448 1
a448 1
.    Va section
d450 1
a450 1
.    Va date
d452 1
a452 1
.    Qq %b [%d] %Y
d454 1
a454 1
.    Xr strptime 3 .
d456 1
a456 1
.    Va source
d458 1
a458 1
.    Va volume
d460 1
a460 1
.   It \&TP
d464 2
a465 1
.    Pp
d467 1
a467 1
.    Bd -literal -offset indent
d469 3
a471 2
.    Ed
.    Pp
d473 1
a473 1
.    Va width
d475 1
a475 1
.    Va width
d478 1
a478 1
.   It \&br
d480 1
a480 1
.   It \&fi
d482 2
a483 2
.    Sq \&nf .
.   It \&i
d486 3
a488 3
.   It \&na
No alignment to the right margin.
.   It \&nf
d491 2
a492 2
.    Sq \&fi .
.   It \&r
d494 1
a494 1
.   It \&sp
d497 1
a497 1
.    Sq br
d499 1
a499 1
.  El
d505 3
a507 3
. Xr groff 1 .
. Bl -hyphen
.  It
d511 1
a511 1
.  It
d513 1
a513 1
.   Sq \&sp
d515 1
a515 1
.  It
d519 1
a519 1
. El
d523 2
a524 2
. Xr mandoc 1 ,
. Xr mandoc_char 7
d529 1
a529 1
. Nm
d531 1
a531 1
. An Kristaps Dzonsons Aq kristaps@@kth.se .
d536 1
a536 1
. Xr mdoc 7 ,
@


1.8
log
@sync to 1.8.5: clean up sections describing escape sequences
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.7 2009/08/09 17:20:17 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: August 9 2009 $
d20 2
a21 1
.\" SECTION
d23 4
a26 3
.Nm man
.Nd man language reference
.\" SECTION
d29 1
a29 1
.Nm man
d31 1
a31 1
.Ux
d34 2
a35 2
.Pp
.Bf -emphasis
d37 1
a37 1
.Nm
d39 1
a39 1
.Ef
d41 1
a41 1
.Xr mdoc 7
d43 1
a43 2
.\" PARAGRAPH
.Pp
d45 1
a45 1
.Nm
d48 1
a48 1
.Sq \&.
d51 1
a51 1
.Bd -literal -offset indent
d54 3
a56 2
.Ed
.\" SECTION
d58 1
a58 1
.Nm
d61 1
a61 1
.Ux
d63 1
a63 1
.Pp
d66 1
a66 1
.Pp
d68 1
a68 1
.Sq \ec
d70 1
a70 1
.Nm
d73 3
a75 2
.\" SUB-SECTION
.Ss Comments
d77 1
a77 1
.Sq \e" ,
d80 6
a85 4
.Sq \&.\e" ,
is also ignored.
.\" SUB-SECTION
.Ss Special Characters
d88 1
a88 1
.Sq \e
d90 1
a90 1
.Sq \&(
d92 1
a92 1
.Sq \&[
d94 1
a94 1
.Sq \&] ) ;
d96 1
a96 1
.Xr mandoc_char 7
d98 2
a99 2
.Sq \e(em
.Pq em-dash
d101 5
a105 4
.Sq \ee
.Pq back-slash .
.\" SUB-SECTION----------------------
.Ss Text Decoration
d107 1
a107 1
.Sq \ef
d110 3
a112 2
.\" SUB-SECTION----------------------
.Ss Whitespace
d116 4
a119 3
.Xr mandoc 1 .
.\" SECTION
.Sh STRUCTURE
d121 1
a121 1
.Nm
d123 1
a123 1
.Sq \&.TH
d127 34
a160 6
.Pp
Beyond the
.Sq \&.TH ,
at least one macro or text node must appear in the document.
.\" SECTION
.Sh SYNTAX
d163 1
a163 1
.Sq \&. ,
d166 1
a166 1
.Sq \&.PP
d168 1
a168 1
.Sq \&.\ \ \ \&PP
d170 1
a170 8
.Pp
All
.Nm
macros follow the same structural rules:
.Bd -literal -offset indent
\&.YO \(lBbody...\(rB
.Ed
.Pp
d172 12
a183 21
.Dq body
consists of zero or more arguments to the macro.
.Pp
.Nm
has a primitive notion of multi-line scope for the following macros:
.Sq \&.TM ,
.Sq \&.SM ,
.Sq \&.SB ,
.Sq \&.BI ,
.Sq \&.IB ,
.Sq \&.BR ,
.Sq \&.RB ,
.Sq \&.R ,
.Sq \&.B ,
.Sq \&.I ,
.Sq \&.IR
and
.Sq \&.RI .
When these macros are invoked without arguments, the subsequent line is
considered a continuation of the macro.  Thus:
.Bd -literal -offset indent
d186 2
a187 2
.Ed
.Pp
d189 242
a430 57
.Sq \&.RI foo .
If two consecutive lines exhibit the latter behaviour,
an error is raised.  Thus, the following is not acceptable:
.Bd -literal -offset indent
\&.RI
\&.I
Hello, world.
.Ed
.Pp
The
.Sq \&.TP
macro is similar, but does not need an empty argument line to trigger
the behaviour.
.\" SECTION
.Sh MACROS
This section contains a complete list of all
.Nm
macros and corresponding number of arguments.
.Pp
.Bl -column "MacroX" "Arguments" -compact -offset indent
.It Em Macro Ta Em Arguments
.It \&.TH    Ta    >1, <6
.It \&.SH    Ta    >0
.It \&.SS    Ta    >0
.It \&.TP    Ta    n
.It \&.LP    Ta    0
.It \&.PP    Ta    0
.It \&.P     Ta    0
.It \&.IP    Ta    <3
.It \&.HP    Ta    <2
.It \&.SM    Ta    n
.It \&.SB    Ta    n
.It \&.BI    Ta    n
.It \&.IB    Ta    n
.It \&.BR    Ta    n
.It \&.RB    Ta    n
.It \&.R     Ta    n
.It \&.B     Ta    n
.It \&.I     Ta    n
.It \&.IR    Ta    n
.It \&.RI    Ta    n
.El
.Pp
Although not historically part of the
.Nm
system, the following macros are also supported:
.Pp
.Bl -column "MacroX" "Arguments" -compact -offset indent
.It Em Macro Ta Em Arguments
.It \&.br    Ta    0
.It \&.i     Ta    n
.El
.Pp
These follow the same calling conventions as the above
.Nm
macros.
.\" SECTION
d432 19
a450 4
See
.Xr mdoc 7
for groff compatibility notes.
.\" SECTION
d452 4
a455 3
.Xr mandoc 1 ,
.Xr mandoc_char 7
.\" SECTION
d458 5
a462 4
.Nm
utility was written by
.An Kristaps Dzonsons Aq kristaps@@kth.se .
.\" SECTION
d465 1
a465 1
.Xr mdoc 7 ,
d467 1
@


1.7
log
@sync to 1.8.2: remove trailing whitespace
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.6 2009/07/18 21:03:18 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 18 2009 $
d73 6
a78 8
Anything following a
.Sq \e"
delimiter is considered a comment (unless the
.Sq \e
itself has been escaped) and is ignored to the end of line.
Furthermore, a macro line with only a control character
.Sq \. ,
optionally followed by whitespace, is ignored.
d81 2
a82 1
Special character sequences begin with the escape character
d90 11
a100 7
or a single one-character sequence.
.Pp
Characters may alternatively be escaped by a slash-asterisk,
.Sq \e* ,
with the same combinations as described above.
.Pp
Terms may also be text-decorated using the
d102 3
a104 3
escape followed by a text-decoration letter: B (bold), I, (italic), or P
and R (Roman, or reset).
.\" SUB-SECTION
@


1.6
log
@sync to 1.8.0: lots of minor changes
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.5 2009/07/06 23:54:56 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 6 2009 $
d28 1
a28 1
language was historically used to format 
d33 2
a34 2
.Bf Em
Do not use 
d36 1
a36 1
to write your manuals.  
d46 1
a46 1
character 
d60 1
a60 1
line termination.  
d74 2
a75 2
.Sq \e" 
delimiter is considered a comment (unless the 
d85 1
a85 1
followed by either an open-parenthesis 
d117 1
a117 1
Beyond the 
d132 1
a132 1
All 
d136 1
a136 1
\&.YO \(lBbody...\(rB 
d144 1
a144 1
has a primitive notion of multi-line scope for the following macros: 
d155 1
a155 1
.Sq \&.IR 
d160 2
a161 2
.Bd -literal -offset indent 
\&.RI 
d165 1
a165 1
is equivalent to 
d169 3
a171 3
.Bd -literal -offset indent 
\&.RI 
\&.I 
d181 1
a181 1
This section contains a complete list of all 
d235 1
a235 1
utility was written by 
@


1.5
log
@sync to 1.7.21:
document the \fX escapes
document white space handling
explain global STRUCTURE before explaining SYNTAX details
point to mdoc(7) for groff COMPATIBILITY
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.4 2009/06/23 22:50:29 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 23 2009 $
d30 2
a31 2
manuals.  This reference document describes the syntax and structure of
this language.
d33 2
a34 2
.Em \&Do not
use 
d36 3
a38 1
to write your manuals.  Use the
d58 1
a58 5
space character
.Sq \  ,
and tabs
.Sq \et . 
All manuals must have
a59 1
.Sq \en
@


1.4
log
@sync to 1.7.20: -man documents must contain .TH and may contain tab characters
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.3 2009/06/18 23:34:53 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 18 2009 $
d98 25
a122 1
with the same combinations as described above.  This form is deprecated.  
a182 13
.Sh STRUCTURE
Each
.Nm
document must contain contains at least the
.Sq \&.TH
macro describing the document's section and title.  It may occur
anywhere in the document, although conventionally, it appears as the
first macro.
.Pp
Beyond the 
.Sq \&.TH ,
at least one macro or text node must appear in the document.
.\" SECTION
d225 5
@


1.3
log
@sync to 1.7.19: improved comment handling
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.2 2009/06/14 23:00:57 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 14 2009 $
d55 1
a55 1
documents may contain only graphable 7-bit ASCII characters and the
d57 3
a59 1
.Sq \  .
d100 1
a100 1
.Sh STRUCTURE
d158 14
a171 1
.\" PARAGRAPH
@


1.2
log
@sync to 1.7.16: comments, whitespace and spelling fixes; no functional change
@
text
@d1 1
a1 1
.\"	$Id: man.7,v 1.12 2009/06/11 07:26:35 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate$
d72 10
@


1.1
log
@Initial check-in of mandoc for formatting manuals. ok deraadt@@
@
text
@d1 1
a1 1
.\" $Id: man.7,v 1.8 2009/04/05 16:34:22 kristaps Exp $
d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@openbsd.org>
d6 10
a15 3
.\" purpose with or without fee is hereby granted, provided that the
.\" above copyright notice and this permission notice appear in all
.\" copies.
a16 9
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
.\" WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
.\" AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
.\" DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
.\" PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
.\" TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
.\" PERFORMANCE OF THIS SOFTWARE.
.\" 
d18 1
a18 1
.Dt man 7
d198 1
a198 1
.An Kristaps Dzonsons Aq kristaps@@openbsd.org .
@

