head	1.7;
access;
symbols
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4;
locks; strict;
comment	@.\" @;


1.7
date	2011.04.24.16.22.02;	author schwarze;	state dead;
branches;
next	1.6;

1.6
date	2011.01.04.22.28.17;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2010.08.20.00.53.35;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2010.07.13.01.09.13;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.03.15.59.05;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.27.21.54.42;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.26.02.55.16;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Merge version 1.11.1:
Again lots of cleanup and maintenance work by kristaps@@.
- simplify error reporting: less function pointers, more mandoc_[v]msg
- main: split document parsing out of main.c into read.c
- roff, mdoc, man: improved recognition of control characters
- roff: better handling of if/else stack overflows
- roff: add some predefined strings for backward compatibility
- mdoc, man: empty sections are not errors
- mdoc: move delimiter handling to libmdoc
- some header restructuring and some minor features and fixes
This merge causes two minor regressions
that i will fix in separate commits right afterwards.
@
text
@.\"	$Id: roff.3,v 1.6 2011/01/04 22:28:17 schwarze Exp $
.\"
.\" Copyright (c) 2010, 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: January 4 2011 $
.Dt ROFF 3
.Os
.Sh NAME
.Nm roff ,
.Nm roff_alloc ,
.Nm roff_endparse ,
.Nm roff_free ,
.Nm roff_parseln ,
.Nm roff_reset ,
.Nm roff_span
.Nd roff macro compiler library
.Sh SYNOPSIS
.In mandoc.h
.In roff.h
.Ft "struct roff *"
.Fo roff_alloc
.Fa "struct regset *regs"
.Fa "void *data"
.Fa "mandocmsg msgs"
.Fc
.Ft void
.Fn roff_endparse "struct roff *roff"
.Ft void
.Fn roff_free "struct roff *roff"
.Ft "enum rofferr"
.Fo roff_parseln
.Fa "struct roff *roff"
.Fa "int line"
.Fa "char **bufp"
.Fa "size_t *bufsz"
.Fa "int pos"
.Fa "int *offs"
.Fc
.Ft void
.Fn roff_reset "struct roff *roff"
.Ft "const struct tbl_span *"
.Fn roff_span "const struct roff *roff"
.Sh DESCRIPTION
The
.Nm
library processes lines of
.Xr roff 7
input.
.Pp
In general, applications initiate a parsing sequence with
.Fn roff_alloc ,
parse each line in a document with
.Fn roff_parseln ,
close the parsing session with
.Fn roff_endparse ,
and finally free all allocated memory with
.Fn roff_free .
The
.Fn roff_reset
function may be used in order to reset the parser for another input
sequence.
.Pp
The
.Fn roff_parseln
function should be invoked before passing a line into the
.Xr mdoc 3
or
.Xr man 3
libraries.
.Pp
See the
.Sx EXAMPLES
section for a full example.
.Sh REFERENCE
This section further defines the
.Sx Types
and
.Sx Functions
available to programmers.
.Ss Types
Functions (see
.Sx Functions )
may use the following types:
.Bl -ohang
.It Vt "enum rofferr"
Instructions for further processing to the caller of
.Fn roff_parseln .
.It Vt struct roff
An opaque type defined in
.Pa roff.c .
Its values are only used privately within the library.
.It Vt mandocmsg
A function callback type defined in
.Pa mandoc.h .
.El
.Ss Functions
Function descriptions follow:
.Bl -ohang
.It Fn roff_alloc
Allocates a parsing structure.
The
.Fa data
pointer is passed to
.Fa msgs .
Returns NULL on failure.
If non-NULL, the pointer must be freed with
.Fn roff_free .
.It Fn roff_reset
Reset the parser for another parse routine.
After its use,
.Fn roff_parseln
behaves as if invoked for the first time.
.It Fn roff_free
Free all resources of a parser.
The pointer is no longer valid after invocation.
.It Fn roff_parseln
Parse a nil-terminated line of input.
The character array
.Fa bufp
may be modified or reallocated within this function.
In the latter case,
.Fa bufsz
will be modified accordingly.
The
.Fa offs
pointer will be modified if the line start during subsequent processing
of the line is not at the zeroth index.
This line should not contain the trailing newline.
Returns 0 on failure, 1 on success.
.It Fn roff_endparse
Signals that the parse is complete.
.It Fn roff_span
If
.Fn roff_parseln
returned
.Va ROFF_TBL ,
return the last parsed table row.
Returns NULL otherwise.
.El
.Sh EXAMPLES
See
.Pa main.c
in the source distribution for an example of usage.
.Sh SEE ALSO
.Xr mandoc 1 ,
.Xr man 3 ,
.Xr mdoc 3 ,
.Xr roff 7
.Sh AUTHORS
The
.Nm
library was written by
.An Kristaps Dzonsons Aq kristaps@@bsd.lv .
.Sh BUGS
The implementation of user-defined strings needs improvement:
.Bl -dash
.It
String values are taken literally and are not interpreted.
.It
Parsing of quoted strings is incomplete.
.It
The stings are stored internally using a singly linked list,
which is fine for small numbers of strings,
but ineffient when handling many strings.
.El
@


1.6
log
@Merge kristaps@@' cleaner tbl integration, removing mine;
there are still a few bugs, but fixing these will be easier in tree.
@
text
@d1 1
a1 1
.\"	$Id: roff.3,v 1.5 2010/08/20 00:53:35 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: August 20 2010 $
@


1.5
log
@Implement a simple, consistent user interface for error handling.
We now have sufficient practical experience to know what we want,
so this is intended to be final:
- provide -Wlevel (warning, error or fatal) to select what you care about
- provide -Wstop to stop after parsing a file with warnings you care about
- provide consistent exit status codes for those warnings you care about
- fully document what warnings, errors and fatal errors mean
- remove all other cruft from the user interface, less is more:
- remove all -f knobs along with the whole -f option
- remove the old -Werror because calling warnings "fatal" is silly
- always finish parsing each file, unless fatal errors prevent that
This commit also includes a couple of related simplifications behind
the scenes regarding error handling.
Feedback and OK  kristaps@@;  Joerg Sonnenberger (NetBSD) and
Sascha Wildner (DragonFly BSD) agree with the general direction.
@
text
@d1 1
a1 1
.\"	$Id: roff.3,v 1.4 2010/07/13 01:09:13 schwarze Exp $
d3 1
a3 1
.\" Copyright (c) 2010 Kristaps Dzonsons <kristaps@@bsd.lv>
d17 1
a17 1
.Dd $Mdocdate: July 13 2010 $
d26 2
a27 1
.Nm roff_reset
d38 1
a38 1
.Ft int
d53 2
d144 7
a150 1
Returns 0 on failure, 1 on success.
@


1.4
log
@Merge release 1.10.4 (all code by kristaps@@), providing four new features:
1) Proper .Bk support: allow output line breaks at input line breaks,
but keep input lines together in the output, finally fixing
synopses like aucat(1), mail(1) and tmux(1).
2) Mostly finished -Tps (PostScript) output.
3) Implement -Thtml output for .Nm blocks and .Bk -words.
4) Allow iterative interpolation of user-defined roff(7) strings.
Also contains some minor bugfixes and some performance improvements.
@
text
@d1 1
a1 1
.\"	$Id: roff.3,v 1.3 2010/07/03 15:59:05 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 3 2010 $
d34 1
a35 1
.Fa "void *data"
a113 4
The
.Fa pflags
arguments are defined in
.Pa roff.h .
@


1.3
log
@Rudimentary implementation of user-defined strings;
no time for more refinement right now.
In particular, fixes terminfo(3) and mdoc.samples(7).
ok kristaps@@, who will add the HTML frontend bits
@
text
@d1 1
a1 1
.\"	$Id: roff.3,v 1.2 2010/06/27 21:54:42 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 27 2010 $
a29 1
.In regs.h
a51 9
.In regs.h
.Ft "char *"
.Fn roff_setstr "const char *name" "const char *string"
.Ft "char *"
.Fn roff_getstr "const char *name"
.Ft "char *"
.Fn roff_getstrn "const char *name" "size_t len"
.Ft void
.Fn roff_freestr void
a146 46
.Sh USER-DEFINED STRINGS
Strings defined by the
.Xr roff 7
.Sx \&ds
instruction are saved using the
.Fn roff_setstr
function and retrieved using the
.Fn roff_getstr
and
.Fn roff_getstrn
functions.
.Pp
These functions take the name of the string to be accessed
as their first argument.
While
.Fn roff_getstr
requires the name to be null-terminated,
.Fn roff_getstrn
accepts non-terminated strings, but requires the length of the name
to be specified.
.Pp
The second argument to
.Fn roff_setstr
is the new value of the string.
It will be copied to internal storage, so both pointers to constant
strings and pointers to volatile storage are acceptable.
.Pp
All of these functions return a pointer to the new value of the string
in internal storage, which should be considered read-only, so use
.Xr strdup 3
on it as appropriate.
The read functions return NULL when a string of the specified name
is not available or empty, and
.Fn roff_setstr
returns NULL when memory allocation fails.
In the latter case, the string will remain unset.
.Pp
The function
.Fn roff_freestr
clears all user-defined strings.
It always succeeds.
Both
.Fn roff_reset
and
.Fn roff_free
call it.
@


1.2
log
@Full .nr nS support, unbreaking the kernel manuals.

Kristaps coded this from scratch after reading my .nr patch;
it is simpler and more powerful.

Registers live in struct regset in regs.h, struct man and struct mdoc
contain pointers to it.  The nS register is cleared when parsing .Sh.
Frontends respect the MDOC_SYNPRETTY flag set in mdoc node_alloc.
@
text
@d1 1
a1 1
.\"	$Id: roff.3,v 1.1 2010/05/26 02:55:16 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: May 26 2010 $
d53 9
d157 46
d217 12
@


1.1
log
@sync manuals
@
text
@d1 1
a1 1
.\"	$Id: roff.3,v 1.1 2010/05/25 22:16:59 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate: May 25 2010 $
d30 1
d33 5
a37 1
.Fn roff_alloc "mandocmsg msgs" "void *data"
@

