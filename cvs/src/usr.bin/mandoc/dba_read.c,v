head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.6
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4;
locks; strict;
comment	@ * @;


1.4
date	2016.08.17.20.46.06;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	aP4FWZWOwFZQHMsk;

1.3
date	2016.08.17.18.58.31;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	Z0puZ8Gnf2jwwdFT;

1.2
date	2016.08.04.09.33.53;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	yE2VyFhBbQbFLYiv;

1.1
date	2016.08.01.10.32.39;	author schwarze;	state Exp;
branches;
next	;
commitid	UE9YpFybzQeyHuWW;


desc
@@


1.4
log
@When the content of a manual page does not specify a section, the
empty string got added to the list of sections, breaking the database
format slightly and causing the page to not be considered part of
any section, not even if a section could be deduced from the directory
or from the file name.
Bug found due to the bogus pcredemo(3) "manual" in the pcre-8.38p0 package.
@
text
@/*	$OpenBSD: dba_read.c,v 1.3 2016/08/17 18:58:31 schwarze Exp $ */
/*
 * Copyright (c) 2016 Ingo Schwarze <schwarze@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Function to read the mandoc database from disk into RAM,
 * such that data can be added or removed.
 * The interface is defined in "dba.h".
 * This file is seperate from dba.c because this also uses "dbm.h".
 */
#include <regex.h>
#include <stdint.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#include "mandoc_aux.h"
#include "mansearch.h"
#include "dba_array.h"
#include "dba.h"
#include "dbm.h"


struct dba *
dba_read(const char *fname)
{
	struct dba		*dba;
	struct dba_array	*page;
	struct dbm_page		*pdata;
	struct dbm_macro	*mdata;
	const char		*cp;
	int32_t			 im, ip, iv, npages;

	if (dbm_open(fname) == -1)
		return NULL;
	npages = dbm_page_count();
	dba = dba_new(npages < 128 ? 128 : npages);
	for (ip = 0; ip < npages; ip++) {
		pdata = dbm_page_get(ip);
		page = dba_page_new(dba->pages, pdata->arch,
		    pdata->desc, pdata->file + 1, *pdata->file);
		for (cp = pdata->name; *cp != '\0'; cp = strchr(cp, '\0') + 1)
			dba_page_add(page, DBP_NAME, cp);
		for (cp = pdata->sect; *cp != '\0'; cp = strchr(cp, '\0') + 1)
			dba_page_add(page, DBP_SECT, cp);
		if ((cp = pdata->arch) != NULL)
			while (*(cp = strchr(cp, '\0') + 1) != '\0')
				dba_page_add(page, DBP_ARCH, cp);
		cp = pdata->file;
		while (*(cp = strchr(cp, '\0') + 1) != '\0')
			dba_page_add(page, DBP_FILE, cp);
	}
	for (im = 0; im < MACRO_MAX; im++) {
		for (iv = 0; iv < dbm_macro_count(im); iv++) {
			mdata = dbm_macro_get(im, iv);
			dba_macro_new(dba, im, mdata->value, mdata->pp);
		}
	}
	dbm_close();
	return dba;
}
@


1.3
log
@When reading back a mandoc.db(5) file in order to apply incremental
changes, do not prepend a stray NAME_FILE (0x10) byte to the first
names of pages.
Bug found while investigating another issue reported by sthen@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: dba_read.c,v 1.2 2016/08/04 09:33:53 schwarze Exp $ */
d51 2
a52 2
		page = dba_page_new(dba->pages, NULL, pdata->sect,
		    pdata->arch, pdata->desc, pdata->file + 1, *pdata->file);
d55 1
a55 2
		cp = pdata->sect;
		while (*(cp = strchr(cp, '\0') + 1) != '\0')
@


1.2
log
@Fix an assertion failure that happened when trying to add a page
with makewhatis -d to a completely empty database.
Reported by Mark Patruck <mark at wrapped dot cx>, thanks!
@
text
@d1 1
a1 1
/*	$OpenBSD: dba_read.c,v 1.1 2016/08/01 10:32:39 schwarze Exp $ */
d51 1
a51 1
		page = dba_page_new(dba->pages, pdata->name, pdata->sect,
d53 1
a53 2
		cp = pdata->name;
		while (*(cp = strchr(cp, '\0') + 1) != '\0')
@


1.1
log
@Remove the dependency on SQLite without loss of functionality.
Drop the obsolete names_check() now that we deleted MLINKS.
Run "doas makewhatis" after compiling and installing this.

Earlier version tested by jmc@@ and jturner@@;
"commit it all" deraadt@@   "commit and dodge" krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d48 1
a48 1
	dba = dba_new(npages);
@

