head	1.108;
access;
symbols
	OPENBSD_6_1:1.108.0.4
	OPENBSD_6_1_BASE:1.108
	OPENBSD_6_0:1.88.0.4
	OPENBSD_6_0_BASE:1.88
	OPENBSD_5_9:1.88.0.2
	OPENBSD_5_9_BASE:1.88
	OPENBSD_5_8:1.83.0.4
	OPENBSD_5_8_BASE:1.83
	OPENBSD_5_7:1.79.0.2
	OPENBSD_5_7_BASE:1.79
	OPENBSD_5_6:1.58.0.4
	OPENBSD_5_6_BASE:1.58
	OPENBSD_5_5:1.56.0.6
	OPENBSD_5_5_BASE:1.56
	OPENBSD_5_4:1.56.0.2
	OPENBSD_5_4_BASE:1.56
	OPENBSD_5_3:1.54.0.4
	OPENBSD_5_3_BASE:1.54
	OPENBSD_5_2:1.54.0.2
	OPENBSD_5_2_BASE:1.54
	OPENBSD_5_1_BASE:1.53
	OPENBSD_5_1:1.53.0.2
	OPENBSD_5_0:1.45.0.2
	OPENBSD_5_0_BASE:1.45
	OPENBSD_4_9:1.43.0.2
	OPENBSD_4_9_BASE:1.43
	OPENBSD_4_8:1.36.0.2
	OPENBSD_4_8_BASE:1.36
	OPENBSD_4_7:1.21.0.2
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.7.0.4
	OPENBSD_4_6_BASE:1.7;
locks; strict;
comment	@.\" @;


1.108
date	2017.03.27.18.51.20;	author schwarze;	state Exp;
branches;
next	1.107;
commitid	JqFqgeIEdKKOK5xo;

1.107
date	2017.03.27.15.16.46;	author schwarze;	state Exp;
branches;
next	1.106;
commitid	Ga2FJ8lw4rNV3Gk2;

1.106
date	2017.03.27.14.39.56;	author schwarze;	state Exp;
branches;
next	1.105;
commitid	p0lCaWItBdLEVQPl;

1.105
date	2017.03.21.18.25.32;	author schwarze;	state Exp;
branches;
next	1.104;
commitid	WJHCaOqIkH7p6oKu;

1.104
date	2017.03.20.14.30.43;	author schwarze;	state Exp;
branches;
next	1.103;
commitid	lGiuKmlBSWhrnJ1c;

1.103
date	2017.03.18.19.50.58;	author schwarze;	state Exp;
branches;
next	1.102;
commitid	0QxAquELPZ9V1aPr;

1.102
date	2017.03.08.19.40.46;	author schwarze;	state Exp;
branches;
next	1.101;
commitid	MFP1D6xkezB4aUfh;

1.101
date	2017.03.06.17.25.24;	author schwarze;	state Exp;
branches;
next	1.100;
commitid	T3Lyz7zZ1p6Y3Qbz;

1.100
date	2017.03.04.17.17.17;	author schwarze;	state Exp;
branches;
next	1.99;
commitid	BCz6IPQbjor2y8Ln;

1.99
date	2017.03.03.14.21.41;	author schwarze;	state Exp;
branches;
next	1.98;
commitid	XiReG6k6LbJGRsK6;

1.98
date	2017.02.10.15.44.31;	author schwarze;	state Exp;
branches;
next	1.97;
commitid	jWIgaURhUN1Qo7t2;

1.97
date	2017.01.31.19.43.23;	author schwarze;	state Exp;
branches;
next	1.96;
commitid	b8BS30do8KRqWpFC;

1.96
date	2017.01.28.23.26.55;	author schwarze;	state Exp;
branches;
next	1.95;
commitid	7sT9Hxn0lUNOlacH;

1.95
date	2017.01.21.02.32.37;	author schwarze;	state Exp;
branches;
next	1.94;
commitid	H1dhlaGorsQMuPzi;

1.94
date	2017.01.12.17.29.34;	author schwarze;	state Exp;
branches;
next	1.93;
commitid	br53AOBoaygejdCJ;

1.93
date	2017.01.10.12.54.27;	author schwarze;	state Exp;
branches;
next	1.92;
commitid	vzXxeQWxUqXTMW9w;

1.92
date	2017.01.08.00.10.22;	author schwarze;	state Exp;
branches;
next	1.91;
commitid	W4clzDItIfTolc66;

1.91
date	2017.01.06.01.33.48;	author schwarze;	state Exp;
branches;
next	1.90;
commitid	9hMtF6MbTBTKmMHP;

1.90
date	2016.12.28.18.30.56;	author jmc;	state Exp;
branches;
next	1.89;
commitid	e98KTYSJ6HG1nDoV;

1.89
date	2016.12.28.17.21.17;	author schwarze;	state Exp;
branches;
next	1.88;
commitid	KjwyCoopqjkm90wM;

1.88
date	2015.11.05.17.47.53;	author schwarze;	state Exp;
branches;
next	1.87;
commitid	WbqcnWX758pHZNHM;

1.87
date	2015.10.30.19.03.36;	author schwarze;	state Exp;
branches;
next	1.86;
commitid	B2ZxW3H5UgZIgEOi;

1.86
date	2015.09.26.17.12.45;	author jmc;	state Exp;
branches;
next	1.85;
commitid	TVOqpEQjF9VcjYWD;

1.85
date	2015.09.26.12.54.39;	author schwarze;	state Exp;
branches;
next	1.84;
commitid	tsN4aQcHOyYf05oI;

1.84
date	2015.09.14.15.35.47;	author schwarze;	state Exp;
branches;
next	1.83;
commitid	rmmzXNvCXUtwzubE;

1.83
date	2015.04.03.08.45.27;	author schwarze;	state Exp;
branches;
next	1.82;
commitid	kemTcQbhPNWTnazN;

1.82
date	2015.03.29.21.12.00;	author bentley;	state Exp;
branches;
next	1.81;
commitid	kvreILdjfOFt57KH;

1.81
date	2015.03.27.17.02.52;	author jmc;	state Exp;
branches;
next	1.80;
commitid	fvmtJjuTdj9A67oz;

1.80
date	2015.03.27.16.35.57;	author schwarze;	state Exp;
branches;
next	1.79;
commitid	zbinBoGMzcgILjo3;

1.79
date	2015.02.23.13.30.02;	author schwarze;	state Exp;
branches;
next	1.78;
commitid	0JG7TLVmNW4cori6;

1.78
date	2015.02.16.19.02.32;	author schwarze;	state Exp;
branches;
next	1.77;
commitid	FIU2ZPmmtKgDK48N;

1.77
date	2015.02.16.16.18.02;	author schwarze;	state Exp;
branches;
next	1.76;
commitid	Za7hVfBo928Vx64a;

1.76
date	2015.02.10.07.40.27;	author schwarze;	state Exp;
branches;
next	1.75;
commitid	nVmIsJsGBuGhuY2h;

1.75
date	2015.01.29.00.33.14;	author schwarze;	state Exp;
branches;
next	1.74;
commitid	9zTrpiF37UnMIPmt;

1.74
date	2015.01.20.22.02.15;	author jmc;	state Exp;
branches;
next	1.73;
commitid	Ij24qhRJgds2ZGZs;

1.73
date	2015.01.20.21.12.46;	author schwarze;	state Exp;
branches;
next	1.72;
commitid	yL1piccWr1moLOpy;

1.72
date	2015.01.15.04.26.06;	author schwarze;	state Exp;
branches;
next	1.71;
commitid	TgtfgXU8Rz8XgmeH;

1.71
date	2015.01.14.22.02.00;	author schwarze;	state Exp;
branches;
next	1.70;
commitid	3rgOerOpi4Q1Co7V;

1.70
date	2014.12.28.14.39.08;	author schwarze;	state Exp;
branches;
next	1.69;
commitid	6ZLiZAxCS3hyLbh4;

1.69
date	2014.12.15.17.36.47;	author schwarze;	state Exp;
branches;
next	1.68;
commitid	UaZi5OHpa4G8cCG0;

1.68
date	2014.12.02.11.31.46;	author schwarze;	state Exp;
branches;
next	1.67;
commitid	GWuTZns9GGFzCuYv;

1.67
date	2014.11.25.03.44.35;	author bentley;	state Exp;
branches;
next	1.66;
commitid	RgCwQkszdyTfWUcM;

1.66
date	2014.11.11.02.43.11;	author schwarze;	state Exp;
branches;
next	1.65;
commitid	7h4OpsiyzbJtK17w;

1.65
date	2014.10.30.15.05.05;	author jmc;	state Exp;
branches;
next	1.64;
commitid	BnKtSKVRiyDlS9Wn;

1.64
date	2014.10.30.00.05.02;	author schwarze;	state Exp;
branches;
next	1.63;
commitid	dxVoXRJjO1zZjAXI;

1.63
date	2014.10.07.18.17.05;	author schwarze;	state Exp;
branches;
next	1.62;
commitid	ovhOTvwzuIxZwsAn;

1.62
date	2014.09.03.05.17.08;	author schwarze;	state Exp;
branches;
next	1.61;
commitid	D4HCUw9YYVx6NSQl;

1.61
date	2014.08.30.18.04.52;	author schwarze;	state Exp;
branches;
next	1.60;
commitid	YrTLlLm4kYlZaLCQ;

1.60
date	2014.08.27.00.06.08;	author schwarze;	state Exp;
branches;
next	1.59;
commitid	52PkSro00emV8qcw;

1.59
date	2014.08.08.16.25.15;	author schwarze;	state Exp;
branches;
next	1.58;
commitid	S6iAH73D08yaW5pR;

1.58
date	2014.06.23.22.03.03;	author schwarze;	state Exp;
branches;
next	1.57;
commitid	mNHAIlMcJWrRtGuy;

1.57
date	2014.06.20.22.58.41;	author schwarze;	state Exp;
branches;
next	1.56;
commitid	ktgkM223FL3EC6E8;

1.56
date	2013.07.13.19.27.46;	author schwarze;	state Exp;
branches;
next	1.55;

1.55
date	2013.03.06.06.54.14;	author jmc;	state Exp;
branches;
next	1.54;

1.54
date	2012.05.24.23.33.23;	author schwarze;	state Exp;
branches;
next	1.53;

1.53
date	2011.12.25.20.15.54;	author schwarze;	state Exp;
branches;
next	1.52;

1.52
date	2011.11.13.14.38.57;	author jmc;	state Exp;
branches;
next	1.51;

1.51
date	2011.11.13.13.05.23;	author schwarze;	state Exp;
branches;
next	1.50;

1.50
date	2011.10.09.21.37.04;	author schwarze;	state Exp;
branches;
next	1.49;

1.49
date	2011.10.09.17.59.56;	author schwarze;	state Exp;
branches;
next	1.48;

1.48
date	2011.09.26.14.49.03;	author jmc;	state Exp;
branches;
next	1.47;

1.47
date	2011.09.18.10.25.28;	author schwarze;	state Exp;
branches;
next	1.46;

1.46
date	2011.09.17.14.45.22;	author schwarze;	state Exp;
branches;
next	1.45;

1.45
date	2011.05.31.22.44.48;	author schwarze;	state Exp;
branches;
next	1.44;

1.44
date	2011.05.29.21.22.18;	author schwarze;	state Exp;
branches;
next	1.43;

1.43
date	2011.01.09.15.24.57;	author schwarze;	state Exp;
branches;
next	1.42;

1.42
date	2010.12.22.00.33.25;	author schwarze;	state Exp;
branches;
next	1.41;

1.41
date	2010.12.19.09.22.35;	author schwarze;	state Exp;
branches;
next	1.40;

1.40
date	2010.09.26.22.39.38;	author jmc;	state Exp;
branches;
next	1.39;

1.39
date	2010.09.26.19.54.35;	author schwarze;	state Exp;
branches;
next	1.38;

1.38
date	2010.08.20.00.53.35;	author schwarze;	state Exp;
branches;
next	1.37;

1.37
date	2010.08.18.01.35.01;	author schwarze;	state Exp;
branches;
next	1.36;

1.36
date	2010.07.25.18.05.54;	author schwarze;	state Exp;
branches;
next	1.35;

1.35
date	2010.07.13.01.09.13;	author schwarze;	state Exp;
branches;
next	1.34;

1.34
date	2010.06.29.15.49.52;	author schwarze;	state Exp;
branches;
next	1.33;

1.33
date	2010.06.29.14.41.28;	author schwarze;	state Exp;
branches;
next	1.32;

1.32
date	2010.06.26.17.56.43;	author schwarze;	state Exp;
branches;
next	1.31;

1.31
date	2010.06.10.22.50.10;	author schwarze;	state Exp;
branches;
next	1.30;

1.30
date	2010.06.08.00.11.47;	author schwarze;	state Exp;
branches;
next	1.29;

1.29
date	2010.05.14.01.54.37;	author schwarze;	state Exp;
branches;
next	1.28;

1.28
date	2010.05.13.20.34.29;	author schwarze;	state Exp;
branches;
next	1.27;

1.27
date	2010.04.13.08.52.23;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2010.04.13.06.52.12;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2010.04.08.16.47.28;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2010.03.29.22.56.52;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2010.03.26.01.22.05;	author schwarze;	state Exp;
branches;
next	1.22;

1.22
date	2010.03.25.23.23.01;	author schwarze;	state Exp;
branches;
next	1.21;

1.21
date	2010.02.18.02.11.26;	author schwarze;	state Exp;
branches;
next	1.20;

1.20
date	2009.12.24.02.08.14;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2009.12.22.23.58.00;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2009.10.27.21.40.07;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2009.10.21.19.13.50;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2009.09.18.22.46.14;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2009.09.18.22.41.24;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2009.08.22.23.17.40;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2009.08.22.16.03.14;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2009.08.22.14.56.03;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2009.08.09.20.40.18;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2009.08.09.17.20.17;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2009.07.18.20.50.37;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2009.07.12.22.44.45;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2009.06.23.23.40.59;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2009.06.21.20.03.11;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.17.22.37.04;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.14.23.39.43;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.14.23.00.57;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2009.04.11.17.15.47;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2009.04.06.20.30.40;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.108
log
@simplify the SYNOPSIS as well, just like the option lists;
suggested by and OK jmc@@
@
text
@.\"	$OpenBSD: mandoc.1,v 1.107 2017/03/27 15:16:46 schwarze Exp $
.\"
.\" Copyright (c) 2009, 2010, 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
.\" Copyright (c) 2012, 2014-2017 Ingo Schwarze <schwarze@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: March 27 2017 $
.Dt MANDOC 1
.Os
.Sh NAME
.Nm mandoc
.Nd format manual pages
.Sh SYNOPSIS
.Nm mandoc
.Op Fl ac
.Op Fl I Cm os Ns = Ns Ar name
.Op Fl K Ar encoding
.Op Fl mdoc | man
.Op Fl O Ar options
.Op Fl T Ar output
.Op Fl W Ar level
.Op Ar
.Sh DESCRIPTION
The
.Nm
utility formats
.Ux
manual pages for display.
.Pp
By default,
.Nm
reads
.Xr mdoc 7
or
.Xr man 7
text from stdin and produces
.Fl T Cm locale
output.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl a
If the standard output is a terminal device and
.Fl c
is not specified, use
.Xr more 1
to paginate the output, just like
.Xr man 1
would.
.It Fl c
Copy the formatted manual pages to the standard output without using
.Xr more 1
to paginate them.
This is the default.
It can be specified to override
.Fl a .
.It Fl I Cm os Ns = Ns Ar name
Override the default operating system
.Ar name
for the
.Xr mdoc 7
.Ic \&Os
and for the
.Xr man 7
.Ic \&TH
macro.
.It Fl K Ar encoding
Specify the input encoding.
The supported
.Ar encoding
arguments are
.Cm us-ascii ,
.Cm iso-8859-1 ,
and
.Cm utf-8 .
If not specified, autodetection uses the first match in the following
list:
.Bl -enum
.It
If the first three bytes of the input file are the UTF-8 byte order
mark (BOM, 0xefbbbf), input is interpreted as
.Cm utf-8 .
.It
If the first or second line of the input file matches the
.Sy emacs
mode line format
.Pp
.D1 .\e" -*- Oo ...; Oc coding: Ar encoding ; No -*-
.Pp
then input is interpreted according to
.Ar encoding .
.It
If the first non-ASCII byte in the file introduces a valid UTF-8
sequence, input is interpreted as
.Cm utf-8 .
.It
Otherwise, input is interpreted as
.Cm iso-8859-1 .
.El
.It Fl mdoc | man
With
.Fl mdoc ,
all input files are interpreted as
.Xr mdoc 7 .
With
.Fl man ,
all input files are interpreted as
.Xr man 7 .
By default, the input language is automatically detected for each file:
if the the first macro is
.Ic \&Dd
or
.Ic \&Dt ,
the
.Xr mdoc 7
parser is used; otherwise, the
.Xr man 7
parser is used.
With other arguments,
.Fl m
is silently ignored.
.It Fl O Ar options
Comma-separated output options.
.It Fl T Ar output
Output format.
See
.Sx Output Formats
for available formats.
Defaults to
.Fl T Cm locale .
.It Fl W Ar level
Specify the minimum message
.Ar level
to be reported on the standard error output and to affect the exit status.
The
.Ar level
can be
.Cm warning ,
.Cm error ,
or
.Cm unsupp ;
.Cm all
is an alias for
.Cm warning .
By default,
.Nm
is silent.
See
.Sx EXIT STATUS
and
.Sx DIAGNOSTICS
for details.
.Pp
The special option
.Fl W Cm stop
tells
.Nm
to exit after parsing a file that causes warnings or errors of at least
the requested level.
No formatted output will be produced from that file.
If both a
.Ar level
and
.Cm stop
are requested, they can be joined with a comma, for example
.Fl W Cm error , Ns Cm stop .
.It Ar file
Read input from zero or more files.
If unspecified, reads from stdin.
If multiple files are specified,
.Nm
will halt with the first failed parse.
.El
.Pp
The options
.Fl fhklw
are also supported and are documented in man(1).
In
.Fl f
and
.Fl k
mode,
.Nm
also supports the options
.Fl CMmOSs
described in the
.Xr apropos 1
manual.
The options
.Fl fkl
are mutually exclusive and override each other.
.Ss Output Formats
The
.Nm
utility accepts the following
.Fl T
arguments, which correspond to output modes:
.Bl -tag -width "-T markdown"
.It Fl T Cm ascii
Produce 7-bit ASCII output.
See
.Sx ASCII Output .
.It Fl T Cm html
Produce HTML5, CSS1, and MathML output.
See
.Sx HTML Output .
.It Fl T Cm lint
Parse only: produce no output.
Implies
.Fl W Cm warning .
.It Fl T Cm locale
Encode output using the current locale.
This is the default.
See
.Sx Locale Output .
.It Fl T Cm man
Produce
.Xr man 7
format output.
See
.Sx Man Output .
.It Fl T Cm markdown
Produce output in
.Sy markdown
format.
See
.Sx Markdown Output .
.It Fl T Cm pdf
Produce PDF output.
See
.Sx PDF Output .
.It Fl T Cm ps
Produce PostScript output.
See
.Sx PostScript Output .
.It Fl T Cm tree
Produce an indented parse tree.
See
.Sx Syntax tree output .
.It Fl T Cm utf8
Encode output in the UTF\-8 multi-byte format.
See
.Sx UTF\-8 Output .
.It Fl T Cm xhtml
This is a synonym for
.Fl T Cm html .
.El
.Pp
If multiple input files are specified, these will be processed by the
corresponding filter in-order.
.Ss ASCII Output
Output produced by
.Fl T Cm ascii
is rendered in standard 7-bit ASCII documented in
.Xr ascii 7 .
.Pp
Font styles are applied by using back-spaced encoding such that an
underlined character
.Sq c
is rendered as
.Sq _ Ns \e[bs] Ns c ,
where
.Sq \e[bs]
is the back-space character number 8.
Emboldened characters are rendered as
.Sq c Ns \e[bs] Ns c .
.Pp
The special characters documented in
.Xr mandoc_char 7
are rendered best-effort in an ASCII equivalent.
.Pp
Output width is limited to 78 visible columns unless literal input lines
exceed this limit.
.Pp
The following
.Fl O
arguments are accepted:
.Bl -tag -width Ds
.It Cm indent Ns = Ns Ar indent
The left margin for normal text is set to
.Ar indent
blank characters instead of the default of five for
.Xr mdoc 7
and seven for
.Xr man 7 .
Increasing this is not recommended; it may result in degraded formatting,
for example overfull lines or ugly line breaks.
.It Cm width Ns = Ns Ar width
The output width is set to
.Ar width ,
which will normalise to \(>=58.
.El
.Ss HTML Output
Output produced by
.Fl T Cm html
conforms to HTML5 using optional self-closing tags.
Default styles use only CSS1.
Equations rendered from
.Xr eqn 7
blocks use MathML.
.Pp
The
.Pa mandoc.css
file documents style-sheet classes available for customising output.
If a style-sheet is not specified with
.Fl O Cm style ,
.Fl T Cm html
defaults to simple output (via an embedded style-sheet)
readable in any graphical or text-based web
browser.
.Pp
Special characters are rendered in decimal-encoded UTF\-8.
.Pp
The following
.Fl O
arguments are accepted:
.Bl -tag -width Ds
.It Cm fragment
Omit the <!DOCTYPE> declaration and the <html>, <head>, and <body>
elements and only emit the subtree below the <body> element.
The
.Cm style
argument will be ignored.
This is useful when embedding manual content within existing documents.
.It Cm includes Ns = Ns Ar fmt
The string
.Ar fmt ,
for example,
.Ar ../src/%I.html ,
is used as a template for linked header files (usually via the
.Ic \&In
macro).
Instances of
.Sq \&%I
are replaced with the include filename.
The default is not to present a
hyperlink.
.It Cm man Ns = Ns Ar fmt
The string
.Ar fmt ,
for example,
.Ar ../html%S/%N.%S.html ,
is used as a template for linked manuals (usually via the
.Ic \&Xr
macro).
Instances of
.Sq \&%N
and
.Sq %S
are replaced with the linked manual's name and section, respectively.
If no section is included, section 1 is assumed.
The default is not to
present a hyperlink.
.It Cm style Ns = Ns Ar style.css
The file
.Ar style.css
is used for an external style-sheet.
This must be a valid absolute or
relative URI.
.El
.Ss Locale Output
Locale-depending output encoding is triggered with
.Fl T Cm locale .
This is the default.
.Pp
This option is not available on all systems: systems without locale
support, or those whose internal representation is not natively UCS-4,
will fall back to
.Fl T Cm ascii .
See
.Sx ASCII Output
for font style specification and available command-line arguments.
.Ss Man Output
Translate input format into
.Xr man 7
output format.
This is useful for distributing manual sources to legacy systems
lacking
.Xr mdoc 7
formatters.
.Pp
If
.Xr mdoc 7
is passed as input, it is translated into
.Xr man 7 .
If the input format is
.Xr man 7 ,
the input is copied to the output, expanding any
.Xr roff 7
.Ic so
requests.
The parser is also run, and as usual, the
.Fl W
level controls which
.Sx DIAGNOSTICS
are displayed before copying the input to the output.
.Ss Markdown Output
Translate
.Xr mdoc 7
input to the
.Sy markdown
format conforming to
.Lk http://daringfireball.net/projects/markdown/syntax.text\
 "John Gruber's 2004 specification" .
The output also almost conforms to the
.Lk http://commonmark.org/ CommonMark
specification.
.Pp
The character set used for the markdown output is ASCII.
Non-ASCII characters are encoded as HTML entities.
Since that is not possible in literal font contexts, because these
are rendered as code spans and code blocks in the markdown output,
non-ASCII characters are transliterated to ASCII approximations in
these contexts.
.Pp
Markdown is a very weak markup language, so all semantic markup is
lost, and even part of the presentational markup may be lost.
Do not use this as an intermediate step in converting to HTML;
instead, use
.Fl T Cm html
directly.
.Pp
The
.Xr man 7 ,
.Xr tbl 7 ,
and
.Xr eqn 7
input languages are not supported by
.Fl T Cm markdown
output mode.
.Ss PDF Output
PDF-1.1 output may be generated by
.Fl T Cm pdf .
See
.Sx PostScript Output
for
.Fl O
arguments and defaults.
.Ss PostScript Output
PostScript
.Qq Adobe-3.0
Level-2 pages may be generated by
.Fl T Cm ps .
Output pages default to letter sized and are rendered in the Times font
family, 11-point.
Margins are calculated as 1/9 the page length and width.
Line-height is 1.4m.
.Pp
Special characters are rendered as in
.Sx ASCII Output .
.Pp
The following
.Fl O
arguments are accepted:
.Bl -tag -width Ds
.It Cm paper Ns = Ns Ar name
The paper size
.Ar name
may be one of
.Ar a3 ,
.Ar a4 ,
.Ar a5 ,
.Ar legal ,
or
.Ar letter .
You may also manually specify dimensions as
.Ar NNxNN ,
width by height in millimetres.
If an unknown value is encountered,
.Ar letter
is used.
.El
.Ss UTF\-8 Output
Use
.Fl T Cm utf8
to force a UTF\-8 locale.
See
.Sx Locale Output
for details and options.
.Ss Syntax tree output
Use
.Fl T Cm tree
to show a human readable representation of the syntax tree.
It is useful for debugging the source code of manual pages.
The exact format is subject to change, so don't write parsers for it.
.Pp
The first paragraph shows meta data found in the
.Xr mdoc 7
prologue, on the
.Xr man 7
.Ic \&TH
line, or the fallbacks used.
.Pp
In the tree dump, each output line shows one syntax tree node.
Child nodes are indented with respect to their parent node.
The columns are:
.Pp
.Bl -enum -compact
.It
For macro nodes, the macro name; for text and
.Xr tbl 7
nodes, the content.
There is a special format for
.Xr eqn 7
nodes.
.It
Node type (text, elem, block, head, body, body-end, tail, tbl, eqn).
.It
Flags:
.Bl -dash -compact
.It
An opening parenthesis if the node is an opening delimiter.
.It
An asterisk if the node starts a new input line.
.It
The input line number (starting at one).
.It
A colon.
.It
The input column number (starting at one).
.It
A closing parenthesis if the node is a closing delimiter.
.It
A full stop if the node ends a sentence.
.It
BROKEN if the node is a block broken by another block.
.It
NOSRC if the node is not in the input file,
but automatically generated from macros.
.It
NOPRT if the node is not supposed to generate output
for any output format.
.El
.El
.Pp
The following
.Fl O
argument is accepted:
.Bl -tag -width Ds
.It Cm noval
Skip validation and show the unvalidated syntax tree.
This can help to find out whether a given behaviour is caused by
the parser or by the validator.
Meta data is not available in this case.
.El
.Sh ENVIRONMENT
.Bl -tag -width MANPAGER
.It Ev MANPAGER
Any non-empty value of the environment variable
.Ev MANPAGER
is used instead of the standard pagination program,
.Xr more 1 ;
see
.Xr man 1
for details.
Only used if
.Fl a
or
.Fl l
is specified.
.It Ev PAGER
Specifies the pagination program to use when
.Ev MANPAGER
is not defined.
If neither PAGER nor MANPAGER is defined,
.Xr more 1
.Fl s
is used.
Only used if
.Fl a
or
.Fl l
is specified.
.El
.Sh EXIT STATUS
The
.Nm
utility exits with one of the following values, controlled by the message
.Ar level
associated with the
.Fl W
option:
.Pp
.Bl -tag -width Ds -compact
.It 0
No warnings or errors occurred, or those that did were ignored because
they were lower than the requested
.Ar level .
.It 2
At least one warning occurred, but no error, and
.Fl W Cm warning
was specified.
.It 3
At least one parsing error occurred,
but no unsupported feature was encountered, and
.Fl W Cm error
or
.Fl W Cm warning
was specified.
.It 4
At least one unsupported feature was encountered, and
.Fl W Cm unsupp ,
.Fl W Cm error
or
.Fl W Cm warning
was specified.
.It 5
Invalid command line arguments were specified.
No input files have been read.
.It 6
An operating system error occurred, for example exhaustion
of memory, file descriptors, or process table entries.
Such errors cause
.Nm
to exit at once, possibly in the middle of parsing or formatting a file.
.El
.Pp
Note that selecting
.Fl T Cm lint
output mode implies
.Fl W Cm warning .
.Sh EXAMPLES
To page manuals to the terminal:
.Pp
.Dl $ mandoc \-W all,stop mandoc.1 2\*(Gt&1 | less
.Dl $ mandoc mandoc.1 mdoc.3 mdoc.7 | less
.Pp
To produce HTML manuals with
.Pa mandoc.css
as the style-sheet:
.Pp
.Dl $ mandoc \-T html -O style=mandoc.css mdoc.7 \*(Gt mdoc.7.html
.Pp
To check over a large set of manuals:
.Pp
.Dl $ mandoc \-T lint \(gafind /usr/src -name \e*\e.[1-9]\(ga
.Pp
To produce a series of PostScript manuals for A4 paper:
.Pp
.Dl $ mandoc \-T ps \-O paper=a4 mdoc.7 man.7 \*(Gt manuals.ps
.Pp
Convert a modern
.Xr mdoc 7
manual to the older
.Xr man 7
format, for use on systems lacking an
.Xr mdoc 7
parser:
.Pp
.Dl $ mandoc \-T man foo.mdoc \*(Gt foo.man
.Sh DIAGNOSTICS
Messages displayed by
.Nm
follow this format:
.Pp
.D1 Nm Ns : Ar file : Ns Ar line : Ns Ar column : level : message : macro args
.Pp
Line and column numbers start at 1.
Both are omitted for messages referring to an input file as a whole.
Macro names and arguments are omitted where meaningless.
Fatal messages about invalid command line arguments
or operating system errors, for example when memory is exhausted,
may also omit the
.Ar file
and
.Ar level
fields.
.Pp
Message levels have the following meanings:
.Bl -tag -width "warning"
.It Cm unsupp
An input file uses unsupported low-level
.Xr roff 7
features.
The output may be incomplete and/or misformatted,
so using GNU troff instead of
.Nm
to process the file may be preferable.
.It Cm error
An input file contains invalid syntax that cannot be safely interpreted.
By discarding part of the input or inserting missing tokens,
the parser is able to continue, and the error does not prevent
generation of formatted output, but typically, preparing that
output involves information loss, broken document structure
or unintended formatting, no matter whether
.Nm
or GNU troff is used.
In many cases, the output of
.Nm
and GNU troff is identical, but in some,
.Nm
is more resilient than GNU troff with respect to malformed input.
.Pp
Non-existent or unreadable input files are also reported on the
.Cm error
level.
In that case, the parser cannot even be started and no output
is produced from those input files.
.It Cm warning
An input file uses obsolete, discouraged or non-portable syntax.
All the same, the meaning of the input is unambiguous and a correct
rendering can be produced.
Documents causing warnings may render poorly when using other
formatting tools instead of
.Nm .
.El
.Pp
Messages of the
.Cm warning ,
.Cm error ,
and
.Cm unsupp
levels except those about non-existent or unreadable input files
are hidden unless their level, or a lower level, is requested using a
.Fl W
option or
.Fl T Cm lint
output mode.
.Ss Warnings related to the document prologue
.Bl -ohang
.It Sy "missing manual title, using UNTITLED"
.Pq mdoc
A
.Ic \&Dt
macro has no arguments, or there is no
.Ic \&Dt
macro before the first non-prologue macro.
.It Sy "missing manual title, using \(dq\(dq"
.Pq man
There is no
.Ic \&TH
macro, or it has no arguments.
.It Sy "lower case character in document title"
.Pq mdoc , man
The title is still used as given in the
.Ic \&Dt
or
.Ic \&TH
macro.
.It Sy "missing manual section, using \(dq\(dq"
.Pq mdoc , man
A
.Ic \&Dt
or
.Ic \&TH
macro lacks the mandatory section argument.
.It Sy "unknown manual section"
.Pq mdoc
The section number in a
.Ic \&Dt
line is invalid, but still used.
.It Sy "missing date, using today's date"
.Pq mdoc, man
The document was parsed as
.Xr mdoc 7
and it has no
.Ic \&Dd
macro, or the
.Ic \&Dd
macro has no arguments or only empty arguments;
or the document was parsed as
.Xr man 7
and it has no
.Ic \&TH
macro, or the
.Ic \&TH
macro has less than three arguments or its third argument is empty.
.It Sy "cannot parse date, using it verbatim"
.Pq mdoc , man
The date given in a
.Ic \&Dd
or
.Ic \&TH
macro does not follow the conventional format.
.It Sy "missing Os macro, using \(dq\(dq"
.Pq mdoc
The default or current system is not shown in this case.
.It Sy "duplicate prologue macro"
.Pq mdoc
One of the prologue macros occurs more than once.
The last instance overrides all previous ones.
.It Sy "late prologue macro"
.Pq mdoc
A
.Ic \&Dd
or
.Ic \&Os
macro occurs after some non-prologue macro, but still takes effect.
.It Sy "skipping late title macro"
.Pq mdoc
The
.Ic \&Dt
macro appears after the first non-prologue macro.
Traditional formatters cannot handle this because
they write the page header before parsing the document body.
Even though this technical restriction does not apply to
.Nm ,
traditional semantics is preserved.
The late macro is discarded including its arguments.
.It Sy "prologue macros out of order"
.Pq mdoc
The prologue macros are not given in the conventional order
.Ic \&Dd ,
.Ic \&Dt ,
.Ic \&Os .
All three macros are used even when given in another order.
.El
.Ss Warnings regarding document structure
.Bl -ohang
.It Sy ".so is fragile, better use ln(1)"
.Pq roff
Including files only works when the parser program runs with the correct
current working directory.
.It Sy "no document body"
.Pq mdoc , man
The document body contains neither text nor macros.
An empty document is shown, consisting only of a header and a footer line.
.It Sy "content before first section header"
.Pq mdoc , man
Some macros or text precede the first
.Ic \&Sh
or
.Ic \&SH
section header.
The offending macros and text are parsed and added to the top level
of the syntax tree, outside any section block.
.It Sy "first section is not NAME"
.Pq mdoc
The argument of the first
.Ic \&Sh
macro is not
.Sq NAME .
This may confuse
.Xr makewhatis 8
and
.Xr apropos 1 .
.It Sy "NAME section without Nm before Nd"
.Pq mdoc
The NAME section does not contain any
.Ic \&Nm
child macro before the first
.Ic \&Nd
macro.
.It Sy "NAME section without description"
.Pq mdoc
The NAME section lacks the mandatory
.Ic \&Nd
child macro.
.It Sy "description not at the end of NAME"
.Pq mdoc
The NAME section does contain an
.Ic \&Nd
child macro, but other content follows it.
.It Sy "bad NAME section content"
.Pq mdoc
The NAME section contains plain text or macros other than
.Ic \&Nm
and
.Ic \&Nd .
.It Sy "missing comma before name"
.Pq mdoc
The NAME section contains an
.Ic \&Nm
macro that is neither the first one nor preceded by a comma.
.It Sy "missing description line, using \(dq\(dq"
.Pq mdoc
The
.Ic \&Nd
macro lacks the required argument.
The title line of the manual will end after the dash.
.It Sy "description line outside NAME section"
.Pq mdoc
An
.Ic \&Nd
macro appears outside the NAME section.
The arguments are printed anyway and the following text is used for
.Xr apropos 1 ,
but none of that behaviour is portable.
.It Sy "sections out of conventional order"
.Pq mdoc
A standard section occurs after another section it usually precedes.
All section titles are used as given,
and the order of sections is not changed.
.It Sy "duplicate section title"
.Pq mdoc
The same standard section title occurs more than once.
.It Sy "unexpected section"
.Pq mdoc
A standard section header occurs in a section of the manual
where it normally isn't useful.
.It Sy "unusual Xr order"
.Pq mdoc
In the SEE ALSO section, an
.Ic \&Xr
macro with a lower section number follows one with a higher number,
or two
.Ic \&Xr
macros referring to the same section are out of alphabetical order.
.It Sy "unusual Xr punctuation"
.Pq mdoc
In the SEE ALSO section, punctuation between two
.Ic \&Xr
macros differs from a single comma, or there is trailing punctuation
after the last
.Ic \&Xr
macro.
.It Sy "AUTHORS section without An macro"
.Pq mdoc
An AUTHORS sections contains no
.Ic \&An
macros, or only empty ones.
Probably, there are author names lacking markup.
.El
.Ss "Warnings related to macros and nesting"
.Bl -ohang
.It Sy "obsolete macro"
.Pq mdoc
See the
.Xr mdoc 7
manual for replacements.
.It Sy "macro neither callable nor escaped"
.Pq mdoc
The name of a macro that is not callable appears on a macro line.
It is printed verbatim.
If the intention is to call it, move it to its own input line;
otherwise, escape it by prepending
.Sq \e& .
.It Sy "skipping paragraph macro"
In
.Xr mdoc 7
documents, this happens
.Bl -dash -compact
.It
at the beginning and end of sections and subsections
.It
right before non-compact lists and displays
.It
at the end of items in non-column, non-compact lists
.It
and for multiple consecutive paragraph macros.
.El
In
.Xr man 7
documents, it happens
.Bl -dash -compact
.It
for empty
.Ic \&P ,
.Ic \&PP ,
and
.Ic \&LP
macros
.It
for
.Ic \&IP
macros having neither head nor body arguments
.It
for
.Ic \&br
or
.Ic \&sp
right after
.Ic \&SH
or
.Ic \&SS
.El
.It Sy "moving paragraph macro out of list"
.Pq mdoc
A list item in a
.Ic \&Bl
list contains a trailing paragraph macro.
The paragraph macro is moved after the end of the list.
.It Sy "skipping no-space macro"
.Pq mdoc
An input line begins with an
.Ic \&Ns
macro.
The macro is ignored.
.It Sy "blocks badly nested"
.Pq mdoc
If two blocks intersect, one should completely contain the other.
Otherwise, rendered output is likely to look strange in any output
format, and rendering in SGML-based output formats is likely to be
outright wrong because such languages do not support badly nested
blocks at all.
Typical examples of badly nested blocks are
.Qq Ic \&Ao \&Bo \&Ac \&Bc
and
.Qq Ic \&Ao \&Bq \&Ac .
In these examples,
.Ic \&Ac
breaks
.Ic \&Bo
and
.Ic \&Bq ,
respectively.
.It Sy "nested displays are not portable"
.Pq mdoc
A
.Ic \&Bd ,
.Ic \&D1 ,
or
.Ic \&Dl
display occurs nested inside another
.Ic \&Bd
display.
This works with
.Nm ,
but fails with most other implementations.
.It Sy "moving content out of list"
.Pq mdoc
A
.Ic \&Bl
list block contains text or macros before the first
.Ic \&It
macro.
The offending children are moved before the beginning of the list.
.It Sy "fill mode already enabled, skipping"
.Pq man
A
.Ic \&fi
request occurs even though the document is still in fill mode,
or already switched back to fill mode.
It has no effect.
.It Sy "fill mode already disabled, skipping"
.Pq man
An
.Ic \&nf
request occurs even though the document already switched to no-fill mode
and did not switch back to fill mode yet.
It has no effect.
.It Sy "line scope broken"
.Pq man
While parsing the next-line scope of the previous macro,
another macro is found that prematurely terminates the previous one.
The previous, interrupted macro is deleted from the parse tree.
.El
.Ss "Warnings related to missing arguments"
.Bl -ohang
.It Sy "skipping empty request"
.Pq roff , eqn
The macro name is missing from a macro definition request,
or an
.Xr eqn 7
control statement or operation keyword lacks its required argument.
.It Sy "conditional request controls empty scope"
.Pq roff
A conditional request is only useful if any of the following
follows it on the same logical input line:
.Bl -dash -compact
.It
The
.Sq \e{
keyword to open a multi-line scope.
.It
A request or macro or some text, resulting in a single-line scope.
.It
The immediate end of the logical line without any intervening whitespace,
resulting in next-line scope.
.El
Here, a conditional request is followed by trailing whitespace only,
and there is no other content on its logical input line.
Note that it doesn't matter whether the logical input line is split
across multiple physical input lines using
.Sq \e
line continuation characters.
This is one of the rare cases
where trailing whitespace is syntactically significant.
The conditional request controls a scope containing whitespace only,
so it is unlikely to have a significant effect,
except that it may control a following
.Ic \&el
clause.
.It Sy "skipping empty macro"
.Pq mdoc
The indicated macro has no arguments and hence no effect.
.It Sy "empty block"
.Pq mdoc , man
A
.Ic \&Bd ,
.Ic \&Bk ,
.Ic \&Bl ,
.Ic \&D1 ,
.Ic \&Dl ,
.Ic \&RS ,
or
.Ic \&UR
block contains nothing in its body and will produce no output.
.It Sy "empty argument, using 0n"
.Pq mdoc
The required width is missing after
.Ic \&Bd
or
.Ic \&Bl
.Fl offset
or
.Fl width.
.It Sy "missing display type, using -ragged"
.Pq mdoc
The
.Ic \&Bd
macro is invoked without the required display type.
.It Sy "list type is not the first argument"
.Pq mdoc
In a
.Ic \&Bl
macro, at least one other argument precedes the type argument.
The
.Nm
utility copes with any argument order, but some other
.Xr mdoc 7
implementations do not.
.It Sy "missing -width in -tag list, using 8n"
.Pq mdoc
Every
.Ic \&Bl
macro having the
.Fl tag
argument requires
.Fl width ,
too.
.It Sy "missing utility name, using \(dq\(dq"
.Pq mdoc
The
.Ic \&Ex Fl std
macro is called without an argument before
.Ic \&Nm
has first been called with an argument.
.It Sy "missing function name, using \(dq\(dq"
.Pq mdoc
The
.Ic \&Fo
macro is called without an argument.
No function name is printed.
.It Sy "empty head in list item"
.Pq mdoc
In a
.Ic \&Bl
.Fl diag ,
.Fl hang ,
.Fl inset ,
.Fl ohang ,
or
.Fl tag
list, an
.Ic \&It
macro lacks the required argument.
The item head is left empty.
.It Sy "empty list item"
.Pq mdoc
In a
.Ic \&Bl
.Fl bullet ,
.Fl dash ,
.Fl enum ,
or
.Fl hyphen
list, an
.Ic \&It
block is empty.
An empty list item is shown.
.It Sy "missing font type, using \efR"
.Pq mdoc
A
.Ic \&Bf
macro has no argument.
It switches to the default font.
.It Sy "unknown font type, using \efR"
.Pq mdoc
The
.Ic \&Bf
argument is invalid.
The default font is used instead.
.It Sy "nothing follows prefix"
.Pq mdoc
A
.Ic \&Pf
macro has no argument, or only one argument and no macro follows
on the same input line.
This defeats its purpose; in particular, spacing is not suppressed
before the text or macros following on the next input line.
.It Sy "empty reference block"
.Pq mdoc
An
.Ic \&Rs
macro is immediately followed by an
.Ic \&Re
macro on the next input line.
Such an empty block does not produce any output.
.It Sy "missing section argument"
.Pq mdoc
An
.Ic \&Xr
macro lacks its second, section number argument.
The first argument, i.e. the name, is printed, but without subsequent
parentheses.
.It Sy "missing -std argument, adding it"
.Pq mdoc
An
.Ic \&Ex
or
.Ic \&Rv
macro lacks the required
.Fl std
argument.
The
.Nm
utility assumes
.Fl std
even when it is not specified, but other implementations may not.
.It Sy "missing option string, using \(dq\(dq"
.Pq man
The
.Ic \&OP
macro is invoked without any argument.
An empty pair of square brackets is shown.
.It Sy "missing resource identifier, using \(dq\(dq"
.Pq man
The
.Ic \&UR
macro is invoked without any argument.
An empty pair of angle brackets is shown.
.It Sy "missing eqn box, using \(dq\(dq"
.Pq eqn
A diacritic mark or a binary operator is found,
but there is nothing to the left of it.
An empty box is inserted.
.El
.Ss "Warnings related to bad macro arguments"
.Bl -ohang
.It Sy "unterminated quoted argument"
.Pq roff
Macro arguments can be enclosed in double quote characters
such that space characters and macro names contained in the quoted
argument need not be escaped.
The closing quote of the last argument of a macro can be omitted.
However, omitting it is not recommended because it makes the code
harder to read.
.It Sy "duplicate argument"
.Pq mdoc
A
.Ic \&Bd
or
.Ic \&Bl
macro has more than one
.Fl compact ,
more than one
.Fl offset ,
or more than one
.Fl width
argument.
All but the last instances of these arguments are ignored.
.It Sy "skipping duplicate argument"
.Pq mdoc
An
.Ic \&An
macro has more than one
.Fl split
or
.Fl nosplit
argument.
All but the first of these arguments are ignored.
.It Sy "skipping duplicate display type"
.Pq mdoc
A
.Ic \&Bd
macro has more than one type argument; the first one is used.
.It Sy "skipping duplicate list type"
.Pq mdoc
A
.Ic \&Bl
macro has more than one type argument; the first one is used.
.It Sy "skipping -width argument"
.Pq mdoc
A
.Ic \&Bl
.Fl column ,
.Fl diag ,
.Fl ohang ,
.Fl inset ,
or
.Fl item
list has a
.Fl width
argument.
That has no effect.
.It Sy "wrong number of cells"
In a line of a
.Ic \&Bl Fl column
list, the number of tabs or
.Ic \&Ta
macros is less than the number expected from the list header line
or exceeds the expected number by more than one.
Missing cells remain empty, and all cells exceeding the number of
columns are joined into one single cell.
.It Sy "unknown AT&T UNIX version"
.Pq mdoc
An
.Ic \&At
macro has an invalid argument.
It is used verbatim, with
.Qq "AT&T UNIX "
prefixed to it.
.It Sy "comma in function argument"
.Pq mdoc
An argument of an
.Ic \&Fa
or
.Ic \&Fn
macro contains a comma; it should probably be split into two arguments.
.It Sy "parenthesis in function name"
.Pq mdoc
The first argument of an
.Ic \&Fc
or
.Ic \&Fn
macro contains an opening or closing parenthesis; that's probably wrong,
parentheses are added automatically.
.It Sy "invalid content in Rs block"
.Pq mdoc
An
.Ic \&Rs
block contains plain text or non-% macros.
The bogus content is left in the syntax tree.
Formatting may be poor.
.It Sy "invalid Boolean argument"
.Pq mdoc
An
.Ic \&Sm
macro has an argument other than
.Cm on
or
.Cm off .
The invalid argument is moved out of the macro, which leaves the macro
empty, causing it to toggle the spacing mode.
.It Sy "unknown font, skipping request"
.Pq man , tbl
A
.Xr roff 7
.Ic \&ft
request or a
.Xr tbl 7
.Ic \&f
layout modifier has an unknown
.Ar font
argument.
.It Sy "odd number of characters in request"
.Pq roff
A
.Ic \&tr
request contains an odd number of characters.
The last character is mapped to the blank character.
.El
.Ss "Warnings related to plain text"
.Bl -ohang
.It Sy "blank line in fill mode, using .sp"
.Pq mdoc
The meaning of blank input lines is only well-defined in non-fill mode:
In fill mode, line breaks of text input lines are not supposed to be
significant.
However, for compatibility with groff, blank lines in fill mode
are replaced with
.Ic \&sp
requests.
.It Sy "tab in filled text"
.Pq mdoc , man
The meaning of tab characters is only well-defined in non-fill mode:
In fill mode, whitespace is not supposed to be significant
on text input lines.
As an implementation dependent choice, tab characters on text lines
are passed through to the formatters in any case.
Given that the text before the tab character will be filled,
it is hard to predict which tab stop position the tab will advance to.
.It Sy "whitespace at end of input line"
.Pq mdoc , man , roff
Whitespace at the end of input lines is almost never semantically
significant \(em but in the odd case where it might be, it is
extremely confusing when reviewing and maintaining documents.
.It Sy "new sentence, new line"
.Pq mdoc
A new sentence starts in the middle of a text line.
Start it on a new input line to help formatters produce correct spacing.
.It Sy "bad comment style"
.Pq roff
Comment lines start with a dot, a backslash, and a double-quote character.
The
.Nm
utility treats the line as a comment line even without the backslash,
but leaving out the backslash might not be portable.
.It Sy "invalid escape sequence"
.Pq roff
An escape sequence has an invalid opening argument delimiter, lacks the
closing argument delimiter, or the argument has too few characters.
If the argument is incomplete,
.Ic \e*
and
.Ic \en
expand to an empty string,
.Ic \eB
to the digit
.Sq 0 ,
and
.Ic \ew
to the length of the incomplete argument.
All other invalid escape sequences are ignored.
.It Sy "undefined string, using \(dq\(dq"
.Pq roff
If a string is used without being defined before,
its value is implicitly set to the empty string.
However, defining strings explicitly before use
keeps the code more readable.
.El
.Ss "Warnings related to tables"
.Bl -ohang
.It Sy "tbl line starts with span"
.Pq tbl
The first cell in a table layout line is a horizontal span
.Pq Sq Cm s .
Data provided for this cell is ignored, and nothing is printed in the cell.
.It Sy "tbl column starts with span"
.Pq tbl
The first line of a table layout specification
requests a vertical span
.Pq Sq Cm ^ .
Data provided for this cell is ignored, and nothing is printed in the cell.
.It Sy "skipping vertical bar in tbl layout"
.Pq tbl
A table layout specification contains more than two consecutive vertical bars.
A double bar is printed, all additional bars are discarded.
.El
.Ss "Errors related to tables"
.Bl -ohang
.It Sy "non-alphabetic character in tbl options"
.Pq tbl
The table options line contains a character other than a letter,
blank, or comma where the beginning of an option name is expected.
The character is ignored.
.It Sy "skipping unknown tbl option"
.Pq tbl
The table options line contains a string of letters that does not
match any known option name.
The word is ignored.
.It Sy "missing tbl option argument"
.Pq tbl
A table option that requires an argument is not followed by an
opening parenthesis, or the opening parenthesis is immediately
followed by a closing parenthesis.
The option is ignored.
.It Sy "wrong tbl option argument size"
.Pq tbl
A table option argument contains an invalid number of characters.
Both the option and the argument are ignored.
.It Sy "empty tbl layout"
.Pq tbl
A table layout specification is completely empty,
specifying zero lines and zero columns.
As a fallback, a single left-justified column is used.
.It Sy "invalid character in tbl layout"
.Pq tbl
A table layout specification contains a character that can neither
be interpreted as a layout key character nor as a layout modifier,
or a modifier precedes the first key.
The invalid character is discarded.
.It Sy "unmatched parenthesis in tbl layout"
.Pq tbl
A table layout specification contains an opening parenthesis,
but no matching closing parenthesis.
The rest of the input line, starting from the parenthesis, has no effect.
.It Sy "tbl without any data cells"
.Pq tbl
A table does not contain any data cells.
It will probably produce no output.
.It Sy "ignoring data in spanned tbl cell"
.Pq tbl
A table cell is marked as a horizontal span
.Pq Sq Cm s
or vertical span
.Pq Sq Cm ^
in the table layout, but it contains data.
The data is ignored.
.It Sy "ignoring extra tbl data cells"
.Pq tbl
A data line contains more cells than the corresponding layout line.
The data in the extra cells is ignored.
.It Sy "data block open at end of tbl"
.Pq tbl
A data block is opened with
.Cm T{ ,
but never closed with a matching
.Cm T} .
The remaining data lines of the table are all put into one cell,
and any remaining cells stay empty.
.El
.Ss "Errors related to roff, mdoc, and man code"
.Bl -ohang
.It Sy "input stack limit exceeded, infinite loop?"
.Pq roff
Explicit recursion limits are implemented for the following features,
in order to prevent infinite loops:
.Bl -dash -compact
.It
expansion of nested escape sequences
including expansion of strings and number registers,
.It
expansion of nested user-defined macros,
.It
and
.Ic \&so
file inclusion.
.El
When a limit is hit, the output is incorrect, typically losing
some content, but the parser can continue.
.It Sy "skipping bad character"
.Pq mdoc , man , roff
The input file contains a byte that is not a printable
.Xr ascii 7
character.
The message mentions the character number.
The offending byte is replaced with a question mark
.Pq Sq \&? .
Consider editing the input file to replace the byte with an ASCII
transliteration of the intended character.
.It Sy "skipping unknown macro"
.Pq mdoc , man , roff
The first identifier on a request or macro line is neither recognized as a
.Xr roff 7
request, nor as a user-defined macro, nor, respectively, as an
.Xr mdoc 7
or
.Xr man 7
macro.
It may be mistyped or unsupported.
The request or macro is discarded including its arguments.
.It Sy "skipping insecure request"
.Pq roff
An input file attempted to run a shell command
or to read or write an external file.
Such attempts are denied for security reasons.
.It Sy "skipping item outside list"
.Pq mdoc , eqn
An
.Ic \&It
macro occurs outside any
.Ic \&Bl
list, or an
.Xr eqn 7
.Ic above
delimiter occurs outside any pile.
It is discarded including its arguments.
.It Sy "skipping column outside column list"
.Pq mdoc
A
.Ic \&Ta
macro occurs outside any
.Ic \&Bl Fl column
block.
It is discarded including its arguments.
.It Sy "skipping end of block that is not open"
.Pq mdoc , man , eqn , tbl , roff
Various syntax elements can only be used to explicitly close blocks
that have previously been opened.
An
.Xr mdoc 7
block closing macro, a
.Xr man 7
.Ic \&RE
or
.Ic \&UE
macro, an
.Xr eqn 7
right delimiter or closing brace, or the end of an equation, table, or
.Xr roff 7
conditional request is encountered but no matching block is open.
The offending request or macro is discarded.
.It Sy "fewer RS blocks open, skipping"
.Pq man
The
.Ic \&RE
macro is invoked with an argument, but less than the specified number of
.Ic \&RS
blocks is open.
The
.Ic \&RE
macro is discarded.
.It Sy "inserting missing end of block"
.Pq mdoc , tbl
Various
.Xr mdoc 7
macros as well as tables require explicit closing by dedicated macros.
A block that doesn't support bad nesting
ends before all of its children are properly closed.
The open child nodes are closed implicitly.
.It Sy "appending missing end of block"
.Pq mdoc , man , eqn , tbl , roff
At the end of the document, an explicit
.Xr mdoc 7
block, a
.Xr man 7
next-line scope or
.Ic \&RS
or
.Ic \&UR
block, an equation, table, or
.Xr roff 7
conditional or ignore block is still open.
The open block is closed implicitly.
.It Sy "escaped character not allowed in a name"
.Pq roff
Macro, string and register identifiers consist of printable,
non-whitespace ASCII characters.
Escape sequences and characters and strings expressed in terms of them
cannot form part of a name.
The first argument of an
.Ic \&am ,
.Ic \&as ,
.Ic \&de ,
.Ic \&ds ,
.Ic \&nr ,
or
.Ic \&rr
request, or any argument of an
.Ic \&rm
request, or the name of a request or user defined macro being called,
is terminated by an escape sequence.
In the cases of
.Ic \&as ,
.Ic \&ds ,
and
.Ic \&nr ,
the request has no effect at all.
In the cases of
.Ic \&am ,
.Ic \&de ,
.Ic \&rr ,
and
.Ic \&rm ,
what was parsed up to this point is used as the arguments to the request,
and the rest of the input line is discarded including the escape sequence.
When parsing for a request or a user-defined macro name to be called,
only the escape sequence is discarded.
The characters preceding it are used as the request or macro name,
the characters following it are used as the arguments to the request or macro.
.It Sy "NOT IMPLEMENTED: Bd -file"
.Pq mdoc
For security reasons, the
.Ic \&Bd
macro does not support the
.Fl file
argument.
By requesting the inclusion of a sensitive file, a malicious document
might otherwise trick a privileged user into inadvertently displaying
the file on the screen, revealing the file content to bystanders.
The argument is ignored including the file name following it.
.It Sy "skipping display without arguments"
.Pq mdoc
A
.Ic \&Bd
block macro does not have any arguments.
The block is discarded, and the block content is displayed in
whatever mode was active before the block.
.It Sy "missing list type, using -item"
.Pq mdoc
A
.Ic \&Bl
macro fails to specify the list type.
.It Sy "missing manual name, using \(dq\(dq"
.Pq mdoc
The first call to
.Ic \&Nm ,
or any call in the NAME section, lacks the required argument.
.It Sy "uname(3) system call failed, using UNKNOWN"
.Pq mdoc
The
.Ic \&Os
macro is called without arguments, and the
.Xr uname 3
system call failed.
As a workaround,
.Nm
can be compiled with
.Sm off
.Fl D Cm OSNAME=\(dq\e\(dq Ar string Cm \e\(dq\(dq .
.Sm on
.It Sy "unknown standard specifier"
.Pq mdoc
An
.Ic \&St
macro has an unknown argument and is discarded.
.It Sy "skipping request without numeric argument"
.Pq roff , eqn
An
.Ic \&it
request or an
.Xr eqn 7
.Ic \&size
or
.Ic \&gsize
statement has a non-numeric or negative argument or no argument at all.
The invalid request or statement is ignored.
.It Sy "NOT IMPLEMENTED: .so with absolute path or \(dq..\(dq"
.Pq roff
For security reasons,
.Nm
allows
.Ic \&so
file inclusion requests only with relative paths
and only without ascending to any parent directory.
By requesting the inclusion of a sensitive file, a malicious document
might otherwise trick a privileged user into inadvertently displaying
the file on the screen, revealing the file content to bystanders.
.Nm
only shows the path as it appears behind
.Ic \&so .
.It Sy ".so request failed"
.Pq roff
Servicing a
.Ic \&so
request requires reading an external file, but the file could not be
opened.
.Nm
only shows the path as it appears behind
.Ic \&so .
.It Sy "skipping all arguments"
.Pq mdoc , man , eqn , roff
An
.Xr mdoc 7
.Ic \&Bt ,
.Ic \&Ed ,
.Ic \&Ef ,
.Ic \&Ek ,
.Ic \&El ,
.Ic \&Lp ,
.Ic \&Pp ,
.Ic \&Re ,
.Ic \&Rs ,
or
.Ic \&Ud
macro, an
.Ic \&It
macro in a list that don't support item heads, a
.Xr man 7
.Ic \&LP ,
.Ic \&P ,
or
.Ic \&PP
macro, an
.Xr eqn 7
.Ic \&EQ
or
.Ic \&EN
macro, or a
.Xr roff 7
.Ic \&br ,
.Ic \&fi ,
or
.Ic \&nf
request or
.Sq \&..
block closing request is invoked with at least one argument.
All arguments are ignored.
.It Sy "skipping excess arguments"
.Pq mdoc , man , roff
A macro or request is invoked with too many arguments:
.Bl -dash -offset 2n -width 2n -compact
.It
.Ic \&Fo ,
.Ic \&PD ,
.Ic \&RS ,
.Ic \&UR ,
.Ic \&ft ,
or
.Ic \&sp
with more than one argument
.It
.Ic \&An
with another argument after
.Fl split
or
.Fl nosplit
.It
.Ic \&RE
with more than one argument or with a non-integer argument
.It
.Ic \&OP
or a request of the
.Ic \&de
family with more than two arguments
.It
.Ic \&Dt
with more than three arguments
.It
.Ic \&TH
with more than five arguments
.It
.Ic \&Bd ,
.Ic \&Bk ,
or
.Ic \&Bl
with invalid arguments
.El
The excess arguments are ignored.
.El
.Ss Unsupported features
.Bl -ohang
.It Sy "input too large"
.Pq mdoc , man
Currently,
.Nm
cannot handle input files larger than its arbitrary size limit
of 2^31 bytes (2 Gigabytes).
Since useful manuals are always small, this is not a problem in practice.
Parsing is aborted as soon as the condition is detected.
.It Sy "unsupported control character"
.Pq roff
An ASCII control character supported by other
.Xr roff 7
implementations but not by
.Nm
was found in an input file.
It is replaced by a question mark.
.It Sy "unsupported roff request"
.Pq roff
An input file contains a
.Xr roff 7
request supported by GNU troff or Heirloom troff but not by
.Nm ,
and it is likely that this will cause information loss
or considerable misformatting.
.It Sy "eqn delim option in tbl"
.Pq eqn , tbl
The options line of a table defines equation delimiters.
Any equation source code contained in the table will be printed unformatted.
.It Sy "unsupported table layout modifier"
.Pq tbl
A table layout specification contains an
.Sq Cm m
modifier.
The modifier is discarded.
.It Sy "ignoring macro in table"
.Pq tbl , mdoc , man
A table contains an invocation of an
.Xr mdoc 7
or
.Xr man 7
macro or of an undefined macro.
The macro is ignored, and its arguments are handled
as if they were a text line.
.El
.Sh SEE ALSO
.Xr apropos 1 ,
.Xr man 1 ,
.Xr eqn 7 ,
.Xr man 7 ,
.Xr mandoc_char 7 ,
.Xr mdoc 7 ,
.Xr roff 7 ,
.Xr tbl 7
.Sh HISTORY
The
.Nm
utility first appeared in
.Ox 4.8 .
The option
.Fl I
appeared in
.Ox 5.2 ,
and
.Fl aCcfhKklMSsw
in
.Ox 5.7 .
.Sh AUTHORS
.An -nosplit
The
.Nm
utility was written by
.An Kristaps Dzonsons Aq Mt kristaps@@bsd.lv
and is maintained by
.An Ingo Schwarze Aq Mt schwarze@@openbsd.org .
@


1.107
log
@For some options that are rarely needed in mandoc(1),
delete the descriptions and point to man(1) instead.
Inspired by apropos.1 rev. 1.35.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.106 2017/03/27 14:39:56 schwarze Exp $
d26 1
a26 1
.Op Fl acfhkl
d30 1
a30 1
.Op Fl O Ar option
d133 1
a133 1
.It Fl O Ar option
@


1.106
log
@Simplify: mention at one place that -fkl override each other,
rather than stating it separately for each option.
Suggested, OKed, and tweaked by jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.105 2017/03/21 18:25:32 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: March 21 2017 $
a67 7
.It Fl f
A synonym for
.Xr whatis 1 .
.It Fl h
Display only the SYNOPSIS lines.
Implies
.Fl c .
a110 6
.It Fl k
A synonym for
.Xr apropos 1 .
.It Fl l
A synonym for
.Fl a .
d186 3
d196 1
a196 1
.Fl CMmOSsw
@


1.105
log
@simplify .Nd; to display manuals, use man(1) instead;
OK jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.104 2017/03/20 14:30:43 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: March 20 2017 $
a70 5
This overrides any earlier
.Fl k
and
.Fl l
options.
a120 5
This overrides any earlier
.Fl f
and
.Fl l
options.
a123 5
Also reverts any earlier
.Fl f
and
.Fl k
options.
d210 3
@


1.104
log
@Silently ignore invalid -m input formats rather than erroring out.
As observed by Jan Stary <hans at stare dot cz>, this is useful such
that after 'alias man="man -m $HOME/man"', 'man -l foo.1' still works.
Simplify and shorten the description of -m, and use .Ic for macros.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.103 2017/03/18 19:50:58 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: March 18 2017 $
d23 1
a23 1
.Nd format and display UNIX manuals
@


1.103
log
@Correct description of MANPATH, and a few more improvements
to the ENVIRONMENT section; OK jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.102 2017/03/08 19:40:46 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: March 8 2017 $
d29 1
a29 1
.Op Fl m Ns Ar format
d47 1
a47 3
text from stdin, implying
.Fl m Ns Cm andoc ,
and produces
d85 1
a85 1
.Sq \&Os
d88 1
a88 1
.Sq \&TH
d139 22
a160 7
.It Fl m Ns Ar format
Input format.
See
.Sx Input Formats
for available formats.
Defaults to
.Fl m Ns Cm andoc .
a224 43
.Ss Input Formats
The
.Nm
utility accepts
.Xr mdoc 7
and
.Xr man 7
input with
.Fl m Ns Cm doc
and
.Fl m Ns Cm an ,
respectively.
The
.Xr mdoc 7
format is
.Em strongly
recommended;
.Xr man 7
should only be used for legacy manuals.
.Pp
A third option,
.Fl m Ns Cm andoc ,
which is also the default, determines encoding on-the-fly: if the first
non-comment macro is
.Sq \&Dd
or
.Sq \&Dt ,
the
.Xr mdoc 7
parser is used; otherwise, the
.Xr man 7
parser is used.
.Pp
If multiple
files are specified with
.Fl m Ns Cm andoc ,
each has its file-type determined this way.
If multiple files are
specified and
.Fl m Ns Cm doc
or
.Fl m Ns Cm an
is specified, then this format is used exclusively.
d364 1
a364 1
.Sq \&In
d377 1
a377 1
.Sq \&Xr
d423 1
a423 1
.Sq so
@


1.102
log
@Document that -T markdown produces ASCII output, and the implied
limitations.  Of course, we could write UTF-8 output instead,
but even the CommonMark specification doesn't require parsers
to support that, so portability would be doubtful.

While here, provide a link to the CommonMark specification.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.101 2017/03/06 17:25:24 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: March 6 2017 $
d614 10
a623 2
will be used instead of the standard pagination program,
.Xr more 1 .
d631 6
a636 1
will be used.
@


1.101
log
@Using .Nd only makes sense in the NAME section.
Warn if that macro occurs elsewhere.
Triggered by a question from Dag-Erling Smoergrav <des @@ FreeBSD>.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.100 2017/03/04 17:17:17 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: March 4 2017 $
d468 10
@


1.100
log
@Make the description of -K autodetection easer to understand.
Basic idea suggested by jmc@@, OK jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.99 2017/03/03 14:21:41 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: March 3 2017 $
d911 8
@


1.99
log
@new -mdoc -Tmarkdown output mode; OK millert@@ reyk@@ tb@@;
thanks to reyk@@ and to Vsevolod at FreeBSD for suggesting it
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.98 2017/02/10 15:44:31 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: February 10 2017 $
d101 9
a109 7
If not specified, autodetection uses the first match:
.Bl -tag -width iso-8859-1
.It Cm utf-8
if the first three bytes of the input file
are the UTF-8 byte order mark (BOM, 0xefbbbf)
.It Ar encoding
if the first or second line of the input file matches the
d114 10
a123 4
.It Cm utf-8
if the first non-ASCII byte in the file introduces a valid UTF-8 sequence
.It Cm iso-8859-1
otherwise
@


1.98
log
@In -Ttree output mode, show the BROKEN node flag and
provide a -Onoval output option to show the unvalidated tree.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.97 2017/01/31 19:43:23 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 31 2017 $
d253 1
a253 1
.Bl -tag -width "-T locale"
d277 6
d452 24
@


1.97
log
@add missing HISTORY information
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.96 2017/01/28 23:26:55 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 28 2017 $
d541 2
d549 11
@


1.96
log
@Add a warning "new sentence, new line".
This does not attempt to pinpoint each and every offender, but
instead tries very hard to avoid false positives: Currently, there
are only two false positives in the whole OpenBSD base system.
Only do this in mdoc(7), not in man(7), because manuals written
in man(7) typically have much worse problems than this.
OK jmc@@ on a previous version of the patch
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.95 2017/01/21 02:32:37 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 21 2017 $
d1839 13
@


1.95
log
@bug was fixed, delete the BUGS section
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.94 2017/01/12 17:29:34 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 12 2017 $
d1360 4
@


1.94
log
@show meta data for -Ttree output
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.93 2017/01/10 12:54:27 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 10 2017 $
a1842 9
.Sh BUGS
In
.Fl T Cm html ,
the maximum size of an element attribute is determined by
.Dv BUFSIZ ,
which is usually 1024 bytes.
Be aware of this when setting long link
formats such as
.Fl O Cm style Ns = Ns Ar really/long/link .
@


1.93
log
@Introduce flags NODE_NOSRC and NODE_NOPRT for AST nodes.
Use them to mark generated nodes and nodes that shall not produce output.
Let -Ttree output mode display these new flags.
Use NODE_NOSRC for .Ar, .Mt, and .Pa default arguments.
Use NODE_NOPRT for .Dd, .Dt, and .Os.

These will help to make handling of text production macros more rigorous.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.92 2017/01/08 00:10:22 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 8 2017 $
d501 9
a509 1
Each output line shows one syntax tree node.
@


1.92
log
@Stricter validation of the NAME section, in particular:
- require a comma between names
- reject all other text nodes
- reject all empty Nm below NAME, not only in the leading position
- reject Nm after Nd
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.91 2017/01/06 01:33:48 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 6 2017 $
d532 6
@


1.91
log
@sort options list; the same as jmc@@ did in man.1 rev. 1.18
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.90 2016/12/28 18:30:56 jmc Exp $
d4 1
a4 1
.\" Copyright (c) 2012, 2014, 2015 Ingo Schwarze <schwarze@@openbsd.org>
d18 1
a18 1
.Dd $Mdocdate: December 28 2016 $
d812 1
a812 1
.It Sy "NAME section without name"
d816 3
a818 1
child macro.
d835 5
d1632 2
a1633 2
.Ic \&Nm
lacks the required argument.
@


1.90
log
@spelling fix;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.89 2016/12/28 17:21:17 schwarze Exp $
d78 4
a91 4
.It Fl h
Display only the SYNOPSIS lines.
Implies
.Fl c .
@


1.89
log
@Make the second, section number argument of .Xr mandatory.
In fact, we have been requiring it for many years.
The only reason to not warn when it was missing
was excessive traditionalism - it was optional in 4.4BSD.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.88 2015/11/05 17:47:53 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: November 5 2015 $
d1156 1
a1156 1
parantheses.
@


1.88
log
@simplify: use one stylesheet rather than two; from bentley@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.87 2015/10/30 19:03:36 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: October 30 2015 $
d1150 7
@


1.87
log
@If a .Bd block has no arguments at all, drop the block and only keep
its contents.  Removing a gratuitious difference to groff output
found after a related bug report from krw@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.86 2015/09/26 17:12:45 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: September 26 2015 $
d352 1
a352 1
.Pa example.style.css
d604 1
a604 1
.Ar style.css
d607 1
a607 1
.Dl $ mandoc \-T html -O style=style.css mdoc.7 \*(Gt mdoc.7.html
@


1.86
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.85 2015/09/26 12:54:39 schwarze Exp $
d1603 7
@


1.85
log
@briefly document -T tree output
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.84 2015/09/14 15:35:47 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: September 14 2015 $
d500 1
a500 1
The exact format is subject to change, don't write parsers for it.
d509 2
a510 1
nodes, the content.  There is a special format for
@


1.84
log
@Remove the warning about children of .Vt blocks because actually,
.Vt type global_variable No = Dv defined_constant ;
is the best way to specify in the SYNOPSIS how a global variable
is initialized in the rare case where that matters.
Issue noticed by jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.83 2015/04/03 08:45:27 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: April 3 2015 $
d287 2
d495 38
@


1.83
log
@No need to hardcode /usr/bin/ as the path to more(1); helps portability.
We don't hardcode the paths to gunzip(1) and cmp(1) either.
Discussed with ajacoutot@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.82 2015/03/29 21:12:00 bentley Exp $
d18 1
a18 1
.Dd $Mdocdate: March 29 2015 $
a936 7
.It Sy ".Vt block has child macro"
.Pq mdoc
The
.Ic \&Vt
macro supports plain text arguments only.
Formatting may be ugly and semantic searching
for the affected content might not work.
@


1.82
log
@Escape punctuation characters that have a different meaning in -Tpdf.

~, `, and ' get translated to non-ASCII characters by most troff
implementations when generating PostScript/PDF output. When the original
ASCII character is meant, it needs to be manually escaped.

discussed with jmc@@ schwarze@@; ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.81 2015/03/27 17:02:52 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: March 27 2015 $
d505 2
a506 1
.Pa /usr/bin/more Fl s
@


1.81
log
@refering -> referring;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.80 2015/03/27 16:35:57 schwarze Exp $
d569 1
a569 1
.Dl $ mandoc \-T lint `find /usr/src -name \e*\e.[1-9]`
@


1.80
log
@Modernize documentation by inserting blanks between option letters
and option arguments, except for -m because "-m an" and "-m andoc"
look just too weird.  Of course, the traditional form without the
blank will continue to work.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.79 2015/02/23 13:30:02 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: February 23 2015 $
d816 1
a816 1
macros refering to the same section are out of alphabetical order.
@


1.79
log
@improve NAME section diagnostics;
confusing messages reported by Jan Stary <hans at stare dot cz>
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.78 2015/02/16 19:02:32 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: February 16 2015 $
d27 2
a28 4
.Sm off
.Op Fl I Cm os Li = Ar name
.Sm on
.Op Fl K Ns Ar encoding
d30 3
a32 3
.Op Fl O Ns Ar option
.Op Fl T Ns Ar output
.Op Fl W Ns Ar level
d50 1
a50 1
.Fl T Ns Cm locale
d78 1
a78 3
.Sm off
.It Fl I Cm os Li = Ar name
.Sm on
d92 1
a92 1
.It Fl K Ns Ar encoding
d140 1
a140 1
.It Fl O Ns Ar option
d142 1
a142 1
.It Fl T Ns Ar output
d148 2
a149 2
.Fl T Ns Cm locale .
.It Fl W Ns Ar level
d173 1
a173 1
.Fl W Ns Cm stop
d184 1
a184 1
.Fl W Ns Cm error , Ns Cm stop .
d253 2
a254 2
.Bl -tag -width "-Tlocale"
.It Fl T Ns Cm ascii
d258 1
a258 1
.It Fl T Ns Cm html
d262 1
a262 1
.It Fl T Ns Cm lint
d265 2
a266 2
.Fl W Ns Cm warning .
.It Fl T Ns Cm locale
d271 1
a271 1
.It Fl T Ns Cm man
d277 1
a277 1
.It Fl T Ns Cm pdf
d281 1
a281 1
.It Fl T Ns Cm ps
d285 1
a285 1
.It Fl T Ns Cm tree
d287 1
a287 1
.It Fl T Ns Cm utf8
d291 1
a291 1
.It Fl T Ns Cm xhtml
d293 1
a293 1
.Fl T Ns Cm html .
d300 1
a300 1
.Fl T Ns Cm ascii
d342 1
a342 1
.Fl T Ns Cm html
d353 2
a354 2
.Fl O Ns Ar style ,
.Fl T Ns Cm html
d410 1
a410 1
.Fl T Ns Cm locale .
d416 1
a416 1
.Fl T Ns Cm ascii .
d446 1
a446 1
.Fl T Ns Cm pdf .
d456 1
a456 1
.Fl T Ns Cm ps .
d488 1
a488 1
.Fl T Ns Cm utf8
d524 1
a524 1
.Fl W Ns Cm warning
d529 1
a529 1
.Fl W Ns Cm error
d531 1
a531 1
.Fl W Ns Cm warning
d535 2
a536 2
.Fl W Ns Cm unsupp ,
.Fl W Ns Cm error
d538 1
a538 1
.Fl W Ns Cm warning
d552 1
a552 1
.Fl T Ns Cm lint
d554 1
a554 1
.Fl W Ns Cm warning .
d558 1
a558 1
.Dl $ mandoc \-Wall,stop mandoc.1 2\*(Gt&1 | less
d565 1
a565 1
.Dl $ mandoc \-Thtml -Ostyle=style.css mdoc.7 \*(Gt mdoc.7.html
d569 1
a569 1
.Dl $ mandoc \-Tlint `find /usr/src -name \e*\e.[1-9]`
d573 1
a573 1
.Dl $ mandoc \-Tps \-Opaper=a4 mdoc.7 man.7 \*(Gt manuals.ps
d583 1
a583 1
.Dl $ mandoc \-Tman foo.mdoc \*(Gt foo.man
d650 1
a650 1
.Fl T Ns Cm lint
d1766 1
d1775 1
a1775 1
.Fl T Ns Cm html ,
d1781 1
a1781 1
.Fl O Ns Cm style Ns = Ns Ar really/long/link .
@


1.78
log
@clean up post_dt() validation function;
improved diagnostics, minus six lines of code
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.77 2015/02/16 16:18:02 schwarze Exp $
d774 1
a774 1
.It Sy "bad NAME section contents"
d776 11
a786 1
The last node in the NAME section is not an
d788 5
a792 5
macro, or any preceding macro is not
.Ic \&Nm ,
or the NAME section is completely empty.
This may confuse
.Xr makewhatis 8
d794 1
a794 1
.Xr apropos 1 .
@


1.77
log
@Delete the -V option.  It serves no purpose but keeps confusing people.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.76 2015/02/10 07:40:27 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: February 10 2015 $
d1689 3
@


1.76
log
@Explain all WARNING, ERROR, and UNSUPP messages in the DIAGNOSTICS section.
Feedback provided by jmc@@ some time ago helped me to get this much
more concise than my initial attempt.
"i'm fine with it going in" jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.75 2015/01/29 00:33:14 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 29 2015 $
d26 1
a26 1
.Op Fl acfhklV
a152 2
.It Fl V
Print version and exit.
@


1.75
log
@Radical cleanup of COMPATIBILITY sections:
Remove lots of lies, dozens of irrelevant implementation details,
and all references to groff versions older than 1.17.  Move relevant
information to the pages where it belongs, and out of mandoc(1) in
particular.  Add some missing general remarks to roff(7), where it
fits the character and purpose of the page much better.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.74 2015/01/20 22:02:15 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: January 20 2015 $
d658 1091
@


1.74
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.73 2015/01/20 21:12:46 schwarze Exp $
a323 3
If no equivalent is found,
.Sq \&?
is used instead.
d344 1
a344 1
which will normalise to \(>=60.
a657 81
.Sh COMPATIBILITY
This section summarises
.Nm
compatibility with GNU troff.
Each input and output format is separately noted.
.Ss ASCII Compatibility
.Bl -bullet -compact
.It
Unrenderable unicode codepoints specified with
.Sq \e[uNNNN]
escapes are printed as
.Sq \&?
in mandoc.
In GNU troff, these raise an error.
.It
The
.Sq \&Bd \-literal
and
.Sq \&Bd \-unfilled
macros of
.Xr mdoc 7
in
.Fl T Ns Cm ascii
are synonyms, as are \-filled and \-ragged.
.It
In historic GNU troff, the
.Sq \&Pa
.Xr mdoc 7
macro does not underline when scoped under an
.Sq \&It
in the FILES section.
This behaves correctly in
.Nm .
.It
A list or display following the
.Sq \&Ss
.Xr mdoc 7
macro in
.Fl T Ns Cm ascii
does not assert a prior vertical break, just as it doesn't with
.Sq \&Sh .
.It
The
.Sq \&na
.Xr man 7
macro in
.Fl T Ns Cm ascii
has no effect.
.It
Words aren't hyphenated.
.El
.Ss HTML Compatibility
.Bl -bullet -compact
.It
The
.Sq \efP
escape will revert the font to the previous
.Sq \ef
escape, not to the last rendered decoration, which is now dictated by
CSS instead of hard-coded.
It also will not span past the current scope,
for the same reason.
Note that in
.Sx ASCII Output
mode, this will work fine.
.It
The
.Xr mdoc 7
.Sq \&Bl \-hang
and
.Sq \&Bl \-tag
list types render similarly (no break following overreached left-hand
side) due to the expressive constraints of HTML.
.It
The
.Xr man 7
.Sq IP
and
.Sq TP
lists render similarly.
.El
d659 2
d671 4
a674 2
.An Kristaps Dzonsons Aq Mt kristaps@@bsd.lv .
.Sh CAVEATS
d676 1
a676 3
.Fl T Ns Cm html
and
.Fl T Ns Cm xhtml ,
a682 17
.Pp
Nesting elements within next-line element scopes of
.Fl m Ns Cm an ,
such as
.Sq br
within an empty
.Sq B ,
will confuse
.Fl T Ns Cm html
and
.Fl T Ns Cm xhtml
and cause them to forget the formatting of the prior next-line scope.
.Pp
The
.Sq \(aq
control character is an alias for the standard macro control character
and does not emit a line-break as stipulated in GNU troff.
@


1.73
log
@Split the -Werror message level into -Werror (broken manual, probably
using mandoc is better than using groff) and -Wunsupp (manual using
unsupported low-level roff(7) feature, probably using groff is better
than using mandoc).  Once this feature is complete, it is intended
to help porting, making the decision whether to USE_GROFF easier.

As a first step, distinguish four classes of roff(7) requests:
1. Supported (currently 24 requests)
2. Currently ignored because unimportant (120)  ->  no message
3. Ignored for good because insecure (14)  ->  -Werror
4. Currently unsupported (68)  ->  these trigger the new -Wunsupp messages
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.72 2015/01/15 04:26:06 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 15 2015 $
d543 1
a543 1
At least on unsupported feature was encountered, and
@


1.72
log
@Fatal errors no longer exist.
If a file can be opened, mandoc will produce some output;
at worst, the output may be almost empty.
Simplifies error handling and frees a message type for future use.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.71 2015/01/14 22:02:00 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 14 2015 $
d162 2
a163 1
.Cm warning
d165 1
a165 1
.Cm error ;
d536 9
a544 1
At least one parsing error occurred, and
d613 8
d622 1
a622 4
An input file contains syntax that cannot be safely interpreted,
either because it is invalid or because
.Nm
does not implement it yet.
d627 8
a634 1
or unintended formatting.
d651 2
a652 1
.Cm warning
d654 1
a654 1
.Cm error
@


1.71
log
@To get rid of SYSERR entries in enum mandocerr, downgrade problems with
missing and unreadable files from SYSERR to ERROR.
Needed for upcoming work.
As a bonus, this minimally simplifies code and documentation.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.70 2014/12/28 14:39:08 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: December 28 2014 $
d162 1
a162 2
.Cm warning ,
.Cm error ,
d164 2
a165 4
.Cm fatal .
The default is
.Fl W Ns Cm fatal ;
.Fl W Ns Cm all
d167 4
a170 1
.Fl W Ns Cm warning .
d535 1
a535 1
At least one parsing error occurred, but no fatal error, and
a539 2
.It 4
A fatal parsing error occurred.
a603 3
.It Cm fatal
The parser is unable to parse a given input file at all.
No formatted output is produced from that input file.
@


1.70
log
@mdoc(7) already uses the mandoc(1) -Ios argument in the footer line
when .Os has no argument, so do the same for man(7) when .TH has less
than four arguments; there is no reason to treat both differently.
Issue found following a question from Thomas Klausner <wiz at NetBSD>.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.69 2014/12/15 17:36:47 schwarze Exp $
d4 1
a4 1
.\" Copyright (c) 2012, 2014 Ingo Schwarze <schwarze@@openbsd.org>
d18 1
a18 1
.Dd $Mdocdate: December 15 2014 $
d546 2
a547 2
An operating system error occurred, for example memory exhaustion or an
error accessing input files.
a605 3
.It Cm syserr
Opening or reading an input file failed, so the parser cannot
even be started and no output is produced from that input file.
d619 6
d638 2
a639 1
levels are hidden unless their level, or a lower level, is requested using a
@


1.69
log
@Merge from bsd.lv: text about HTML written by kristaps@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.68 2014/12/02 11:31:46 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: December 2 2014 $
d88 3
@


1.68
log
@Switch the default output mode from -Tascii to -Tlocale.
This doesn't change anything unless LC_CTYPE is set,
but it helps when running with LC_TYPE=something.UTF-8.

OK tedu@@  and earlier positive feedback from:
bentley@@ deraadt@@ naddy@@ stsp@@  uqs@@freebsd wiz@@netbsd
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.67 2014/11/25 03:44:35 bentley Exp $
d18 1
a18 1
.Dd $Mdocdate: November 25 2014 $
d261 1
a261 1
Produce CSS1/HTML5 output.
d349 4
@


1.67
log
@"Aq foo" is not the same as "<foo>". Don't use it to mark up HTML.

ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.66 2014/11/11 02:43:11 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: November 11 2014 $
d52 1
a52 1
.Fl T Ns Cm ascii
d149 1
a149 1
.Fl T Ns Cm ascii .
a257 1
This is the default.
d270 1
d302 2
a303 2
.Fl T Ns Cm ascii ,
which is the default, is rendered in standard 7-bit ASCII documented in
d412 2
@


1.66
log
@Let -h imply -c (that is, not use the pager).
Usually, -h output is short, so the pager is just a nuisance.
Also, traditional man(1) does not use a pager for -h.
Triggered by a remark of deraadt@@ on ICB.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.65 2014/10/30 15:05:05 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: October 30 2014 $
d367 2
a368 10
Omit the
.Aq !DOCTYPE
declaration and the
.Aq html ,
.Aq head ,
and
.Aq body
elements and only emit the subtree below the
.Aq body
element.
@


1.65
log
@mandoc.1: fix a macro error in previous
main.c: add -K to usage() and wrap nicely

ok schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.64 2014/10/30 00:05:02 schwarze Exp $
d92 1
a92 1
.Fl a .
@


1.64
log
@support UTF-8 and ISO-8859-1 input by integrating modified parts
of kristaps@@' version of the preconv(1) utility into mandoc(1);
positive feedback from bentley@@ and no concern raised when shown on tech@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.63 2014/10/07 18:17:05 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: October 7 2014 $
d30 1
a30 1
.Op Fl K Na Ar encoding
@


1.63
log
@Switch HTML output to polyglot HTML5; have only one single -Thml mode.
Replace hard-coded widths and alignments with a minimal embedded stylesheet.
Do not use <p> because it cannot appear inside block macros.
Remove the "summary" attribute because it is not HTML5.

Written by kristaps@@ some months ago, finished during EuroBSDCon.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.62 2014/09/03 05:17:08 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: September 3 2014 $
d30 1
d93 25
@


1.62
log
@Implement the traditional -h option for man(1): show the SYNOPSIS only.
As usual, we get mandoc -h and apropos -h for free.
Try stuff like "apropos -h In=dirent" or "apropos -h Fa=timespec".

Only useful for terminal output, so -Tps, -Tpdf, -Thtml ignore -h for now.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.61 2014/08/30 18:04:52 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 30 2014 $
d236 1
a236 1
Produce strict CSS1/HTML-4.01 output.
d268 2
a269 3
Produce strict CSS1/XHTML-1.0 output.
See
.Sx XHTML Output .
d322 1
a322 1
conforms to HTML-4.01 strict.
d330 2
a331 1
defaults to simple output readable in any graphical or text-based web
a473 9
.Ss XHTML Output
Output produced by
.Fl T Ns Cm xhtml
conforms to XHTML-1.0 strict.
.Pp
See
.Sx HTML Output
for details; beyond generating XHTML tags instead of HTML tags, these
output modes are identical.
d664 1
a664 1
.Ss HTML/XHTML Compatibility
@


1.61
log
@Introduce a man(1) -l option as an alias for mandoc -a.
Basically, this does the same as man -l in Linux man-db.
The point is that now all functionality of the combined tool
is reachable from the man(1) command name:
apropos = man -k, whatis = man -f, mandoc = man -cl.

Originally suggested by Carsten dot Kunze at arcor dot de,
current maintainer of the Heirloom Documentation Tools.

While here, add various missing information to the usage()
and to the manuals.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.60 2014/08/27 00:06:08 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 27 2014 $
d26 1
a26 1
.Op Fl acfklV
d88 4
@


1.60
log
@Add an implementation of man(1) into the /usr/bin/mandoc binary and
provide a unified set of command line options for mandoc(1), man(1),
apropos(1), and whatis(1), each option doing the same for all four.
Not adding any completely new options, only extending exiting ones
from one tool to the others.  New options are:
* apropos & whatis -acfkw  (in the past, these were man(1) only)
* apropos & whatis -a -IOTW  (in the past, mandoc(1) only)
* mandoc -ac  (in the past, man(1) only)
* man -IOTW  (in the past, mandoc(1) only)

Before we can decide whether or not we want to replace src/usr.bin/man
with this implementation, considerable bugfixing, testing, and
performance measurements are needed, which i'd rather do in the tree
than outside.  Note that these bugs only affect the new man(1) mode,
existing mandoc(1), apropos(1), and whatis(1) is fine.

The new functionality in mandoc(1), apropos(1), and whatis(1)
is fully enabled.  To play with the new man(1), you can try:
# mv /usr/bin/man /usr/bin/oman
# ln -s /usr/bin/mandoc /usr/bin/man

Positive feedback about the general direction from sthen@@ and jmc@@,
and deraadt@@ is not against it.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.59 2014/08/08 16:25:15 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: August 8 2014 $
d26 1
a26 1
.Op Fl acV
d54 1
a54 1
The arguments are as follows:
d71 8
d88 16
d164 12
@


1.59
log
@Remove redundant verbiage in the style of "a file is a file,
a line is a line, a column is a column"; suggested by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.58 2014/06/23 22:03:03 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: June 23 2014 $
d26 1
a26 1
.Op Fl V
d56 15
d443 15
@


1.58
log
@Below DIAGNOSTICS, document the SYSERR message level;
jmc@@ wondered what it meant and agrees with this patch.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.57 2014/06/20 22:58:41 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: June 20 2014 $
d499 3
a501 1
Standard error messages reporting parsing errors are prefixed by
d503 1
a503 1
.D1 Nm Ns : Ar file : Ns Ar line : Ns Ar column : level :
d505 7
a511 18
where the fields have the following meanings:
.Bl -tag -width "column"
.It Ar file
The name of the input file causing the message.
.It Ar line
The line number in that input file.
Line numbering starts at 1.
.It Ar column
The column number in that input file.
Column numbering starts at 1.
If the issue is caused by a word, the column number usually
points to the first character of the word.
.It Ar level
The message level, printed in capital letters.
.El
.Pp
The
.Ar line
d513 2
a514 2
.Ar column
fields are omitted when meaningless.
a551 6
.Pp
The
.Nm
utility may also print messages related to invalid command line arguments
or operating system errors, for example when memory is exhausted.
Such messages may not carry the prefix described above.
@


1.57
log
@As suggested by jmc@@, only include line and column numbers into messages
when they are meaningful, to avoid confusing stuff like this:
$ mandoc /dev/null
mandoc: /dev/null:0:1: FATAL: not a manual
Instead, just say:
mandoc: /dev/null: FATAL: not a manual

Another example this applies to is documents having a prologue,
but lacking a body.  Do not throw a FATAL error for these; instead,
issue a warning and show the empty document, in the man(7) case with
the same amount of blank lines as groff does.  Also downgrade mdoc(7)
documents having content before the first .Sh from FATAL to WARNING.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.56 2013/07/13 19:27:46 schwarze Exp $
d4 1
d18 1
a18 1
.Dd $Mdocdate: July 13 2013 $
d527 3
d565 1
a565 2
or operating system errors, for example when memory is exhausted or
input files cannot be read.
@


1.56
log
@For citing the names and email addresses of authors,
consistently use the style ".An name Aq Mt email".

Triggered by a question from Jan Stary <hans at stare dot cz>,
ok jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.55 2013/03/06 06:54:14 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: March 6 2013 $
d500 1
a500 3
.Sm off
.D1 Ar file : line : column : \ level :
.Sm on
d518 6
d563 1
a563 1
Such messages do not carry the prefix described above.
@


1.55
log
@legancy -> legacy; From: Chris Hettrick
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.54 2012/05/24 23:33:23 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: May 24 2012 $
d652 1
a652 2
.An Kristaps Dzonsons ,
.Mt kristaps@@bsd.lv .
@


1.54
log
@Support -Ios='OpenBSD 5.1' to override uname(3) as the source of the
default value for the mdoc(7) .Os macro.
Needed for man.cgi on the OpenBSD website.

Problem with man.cgi first noticed by deraadt@@;
beck@@ and deraadt@@ agree with the way to solve the issue.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.53 2011/12/25 20:15:54 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: December 25 2011 $
d349 1
a349 1
This is useful for distributing manual sources to legancy systems
@


1.53
log
@State default usage before listing arguments of a utility;
from kristaps@@, ok jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.52 2011/11/13 14:38:57 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: November 13 2011 $
d26 3
d55 9
@


1.52
log
@overful -> overfull;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.51 2011/11/13 13:05:23 schwarze Exp $
d37 13
a111 12
.Pp
By default,
.Nm
reads
.Xr mdoc 7
or
.Xr man 7
text from stdin, implying
.Fl m Ns Cm andoc ,
and produces
.Fl T Ns Cm ascii
output.
@


1.51
log
@Make the default left text margin configurable from the command line,
just like the default right margin already is.  This may be useful for
people with expensive screen real estate.  Besides, it helps automated
man(7) to mdoc(7) output comparisons to validate -Tman output.
ok kristaps@@ on an earlier version
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.50 2011/10/09 21:37:04 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: October 9 2011 $
d245 1
a245 1
for example overful lines or ugly line breaks.
@


1.50
log
@A bit more precision and nicer wording in the descriptions
of -Ofragment and -Tman; using input from jmc@@ and kristaps@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.49 2011/10/09 17:59:56 schwarze Exp $
d237 9
@


1.49
log
@Sync to version 1.12.0; all code by kristaps@@:
Implement .Rv in -Tman.
Let -man -Tman work a bit like cat(1).
Add the -Ofragment option to -T[x]html.
Minor fixes in -T[x]html.
Lots of apropos(1) and -Tman code cleanup.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.48 2011/09/26 14:49:03 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: September 26 2011 $
d263 10
a272 1
Do not emit doctype, html, and body elements.
d275 1
a275 1
argument shall be unused.
d335 2
a336 2
.Xr man 7 ;
if the input format is
d338 1
a338 2
it is parsed and re-outputted.
In either case, the
d341 6
a346 1
macros are processed prior to producing output.
@


1.48
log
@retain alphabetical order for the -Toutput list, and use a width
specifier that makes it look nicer;

ok schwarze kristaps
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.47 2011/09/18 10:25:28 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: September 18 2011 $
d179 1
a179 1
Produce output in
d181 3
a183 3
format; only useful when applied to
.Fl m Ns Cm doc
input.
d262 6
d314 20
@


1.47
log
@sync to version 1.11.5:
adding an implementation of the eqn(7) language
by kristaps@@

So far, only .EQ/.EN blocks are handled, in-line equations are not, and
rendering is not yet very pretty, but the parser is fairly complete.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.46 2011/09/17 14:45:22 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: September 17 2011 $
d160 1
a160 9
.Bl -tag -width Ds
.It Fl T Ns Cm utf8
Encode output in the UTF\-8 multi-byte format.
See
.Sx UTF\-8 Output .
.It Fl T Ns Cm locale
Encode output using the current locale.
See
.Sx Locale Output .
d174 4
d194 4
a205 17
.Ss UTF\-8 Output
Use
.Fl T Ns Cm utf8
to force a UTF\-8 locale.
See
.Sx Locale Output
for details and options.
.Ss Locale Output
Locale-depending output encoding is triggered with
.Fl T Ns Cm locale .
This option is not available on all systems: systems without locale
support, or those whose internal representation is not natively UCS-4,
will fall back to
.Fl T Ns Cm ascii .
See
.Sx ASCII Output
for font style specification and available command-line arguments.
d298 18
d350 4
a353 3
.Ss PDF Output
PDF-1.1 output may be generated by
.Fl T Ns Cm pdf .
d355 2
a356 4
.Sx PostScript Output
for
.Fl O
arguments and defaults.
@


1.46
log
@Initial, incomplete support for -Tman
to convert mdoc(7) documents to the man(7) language.
This is work in progress and will be developed in tree.
It does already handle the cat(1) manual,
but will hardly handle all your fancy manuals yet.
go ahead  kristaps@@ jmc@@ millert@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.45 2011/05/31 22:44:48 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: May 31 2011 $
d581 1
d591 2
a592 1
.An Kristaps Dzonsons Aq kristaps@@bsd.lv .
@


1.45
log
@Minor fixes by kristaps@@, based on issues reported by jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.44 2011/05/29 21:22:18 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: May 29 2011 $
d182 6
d426 10
@


1.44
log
@Merge release 1.11.3, almost all code by kristaps@@:
* Unicode output support (no Unicode input yet, though).
* Refactoring: completely handle predefined strings in roff.c.
- New function mandoc_escape() replaces a2roffdeco() and mandoc_special().
- Start using mandoc_getarg() in mdoc_argv.c.
- Clean up parsing of delimiters in mdoc(7).
* And many minor fixes and lots of cleanup.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.43 2011/01/09 15:24:57 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: January 9 2011 $
d30 1
a30 1
.Op Ar file...
d162 1
a162 1
Encode output in the UTF-8 multi-byte format.
d164 1
a164 1
.Xr UTF-8 Output .
d166 1
a166 2
Encode output using the current
.Xr locale 1 .
d200 1
a200 1
.Ss UTF-8 Output
d203 1
a203 1
to force a UTF-8 locale.
d267 1
a267 1
Special characters are rendered in decimal-encoded UTF-8.
@


1.43
log
@Add and install tbl(7);
written by kristaps@@, looked over by jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.42 2010/12/22 00:33:25 schwarze Exp $
d3 1
a3 1
.\" Copyright (c) 2009, 2010 Kristaps Dzonsons <kristaps@@bsd.lv>
d17 1
a17 1
.Dd $Mdocdate: December 22 2010 $
d161 9
d201 17
d238 3
d492 7
d509 1
a509 1
In GNU troff, the
a533 2
.It
Sentences are unilaterally monospaced.
@


1.42
log
@More small -Thtml improvements by kristaps@@,
in particular, use <B>, <I> and <U> where appropriate.
Provide relative widths for header and footer lines.
Manuals: More concise short descriptions of output modes.
Correct a few places still talking about CSS2 to say CSS1.
Code examples should use .Dl, not .D1.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.41 2010/12/19 09:22:35 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: December 19 2010 $
d534 3
a536 1
.Xr mdoc 7
@


1.41
log
@Significant improvements to -Thtml by kristaps@@:
Use less <DIV>, use more <H1>, <H2>, <P>, <BR>, <PRE>, <UL>, <OL>, <DL> etc.
Triggered by input from Will Backman.
Remove CSS2 note in mandoc.1, which is no longer true.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.40 2010/09/26 22:39:38 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: September 26 2010 $
d162 1
a162 2
Produce 7-bit ASCII output, backspace-encoded for bold and underline
styles.
d167 1
a167 1
Produce strict HTML-4.01 output, with a sane default style.
d185 1
a185 1
Produce strict XHTML-1.0 output, with a sane default style.
a229 5
Font styles and page structure are applied using CSS2.
By default, no font style is applied to any text,
although CSS2 is hard-coded to format
the basic structure of output.
.Pp
d232 6
a237 3
file documents the range of styles applied to output and, if used, will
cause rendered documents to appear as they do in
.Fl T Ns Cm ascii .
d376 2
a377 2
.D1 $ mandoc \-Wall,stop mandoc.1 2\*(Gt&1 | less
.D1 $ mandoc mandoc.1 mdoc.3 mdoc.7 | less
d383 1
a383 1
.D1 $ mandoc \-Thtml -Ostyle=style.css mdoc.7 \*(Gt mdoc.7.html
d391 1
a391 1
.D1 $ mandoc \-Tps \-Opaper=a4 mdoc.7 man.7 \*(Gt manuals.ps
a563 6
The
.Sq i
macro in
.Fl m Ns Cm an
should italicise all subsequent text if a line argument is not provided.
This behaviour is not implemented.
@


1.40
log
@new sentence, new line;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.39 2010/09/26 19:54:35 schwarze Exp $
a543 9
The
.Fl T Ns Cm html
and
.Fl T Ns Cm xhtml
CSS2 styling used for
.Fl m Ns Cm doc
input lists does not render properly in older browsers, such as Internet
Explorer 6 and earlier.
.Pp
@


1.39
log
@sync to bsd.lv:
do not talk about \s, it is ignored anyway
do not .Xr groff(1) any longer, just talk about GNU troff
because in the long run, groff may not even be installed
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.38 2010/08/20 00:53:35 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: August 20 2010 $
d456 2
a457 2
input files cannot be read.  Such messages do not carry the prefix
described above.
@


1.38
log
@Implement a simple, consistent user interface for error handling.
We now have sufficient practical experience to know what we want,
so this is intended to be final:
- provide -Wlevel (warning, error or fatal) to select what you care about
- provide -Wstop to stop after parsing a file with warnings you care about
- provide consistent exit status codes for those warnings you care about
- fully document what warnings, errors and fatal errors mean
- remove all other cruft from the user interface, less is more:
- remove all -f knobs along with the whole -f option
- remove the old -Werror because calling warnings "fatal" is silly
- always finish parsing each file, unless fatal errors prevent that
This commit also includes a couple of related simplifications behind
the scenes regarding error handling.
Feedback and OK  kristaps@@;  Joerg Sonnenberger (NetBSD) and
Sascha Wildner (DragonFly BSD) agree with the general direction.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.37 2010/08/18 01:35:01 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: August 18 2010 $
d461 1
a461 2
compatibility with
.Xr groff 1 .
d476 1
a476 3
In
.Xr groff 1 ,
the
a562 11
.Pp
The
.Fl T Ns Cm html
and
.Fl T Ns Cm xhtml
output modes don't render the
.Sq \es
font size escape documented in
.Xr mdoc 7
and
.Xr man 7 .
@


1.37
log
@Remove mandoc(1) compatibility notes that are no longer relevant;
from kristaps@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.36 2010/07/25 18:05:54 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 25 2010 $
a25 1
.Op Fl f Ns Ar option
d29 1
a29 1
.Op Fl W Ns Ar err
a38 5
.It Fl f Ns Ar option
Comma-separated compiler options.
See
.Sx Compiler Options
for details.
d57 13
a69 3
.It Fl W Ns Ar err
Comma-separated warning options.
Use
d71 21
a91 8
to print warnings,
.Fl W Ns Cm error
for warnings to be considered errors and cause utility
termination.
Multiple
.Fl W
arguments may be comma-separated, such as
.Fl W Ns Cm error , Ns Cm all .
a110 2
.Pp
.Ex -std mandoc
a153 33
.Ss Compiler Options
Default
.Xr mdoc 7
and
.Xr man 7
compilation behaviour may be overridden with the
.Fl f
flag.
.Bl -tag -width Ds
.It Fl f Ns Cm ign-errors
When parsing multiple files, don't halt when one errors out.
Useful with
.Fl T Ns Cm lint
over a large set of manuals passed on the command line.
.It Fl f Ns Cm ign-escape
Ignore invalid escape sequences.
This is the default, but the option can be used to override an earlier
.Fl f Ns Cm strict .
.It Fl f Ns Cm ign-scope
When rewinding the scope of a block macro, forces the compiler to ignore
scope violations.
This can seriously mangle the resulting tree.
.Pq mdoc only
.It Fl f Ns Cm no-ign-escape
Do not ignore invalid escape sequences.
.It Fl f Ns Cm no-ign-macro
Do not ignore unknown macros at the start of input lines.
.It Fl f Ns Cm strict
Implies
.Fl f Ns Cm no-ign-escape
and
.Fl f Ns Cm no-ign-macro .
.El
d174 1
a174 3
.Fl W Ns Cm all
and
.Fl f Ns Cm strict .
d335 41
d379 1
a379 1
.D1 $ mandoc \-Wall,error \-fstrict mandoc.1 2\*(Gt&1 | less
d390 1
a390 1
.Dl $ mandoc \-Tlint \-fign-errors `find /usr/src -name \e*\e.[1-9]`
d395 63
@


1.36
log
@Sync to bsd.lv; in particular, pull in lots of bug fixes.
new features:
* support the .in macro in man(7)
* support minimal PDF output
* support .Sm in mdoc(7) HTML output
* support .Vb and .nf in man(7) HTML output
* complete the mdoc(7) manual
bug fixes:
* do not let mdoc(7) .Pp produce a newline before/after .Sh; reported by jmc@@
* avoid double blank lines related to man(7) .sp and .br
* let man(7) .nf and .fi flush the line; reported by jsg@@ and naddy@@
* let "\ " produce a non-breaking space; reported by deraadt@@
* discard \m colour escape sequences; reported by J.C. Roberts
* map undefined 1-character-escapes to the literal character itself
maintenance:
* express mdoc(7) arguments in terms of an enum for additional type-safety
* simplify mandoc_special() and a2roffdeco()
* use strcspn in term_word() in place of a manual loop
* minor optimisations in the -Tps and -Thtml formatting frontends
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.35 2010/07/13 01:09:13 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 13 2010 $
a383 5
.Sq \e~
special character doesn't produce expected behaviour in
.Fl T Ns Cm ascii .
.It
The
a419 5
.It
In normal mode (not a literal block), blocks of spaces aren't preserved,
so double spaces following sentence closure are reduced to a single space;
.Xr groff 1
retains spaces.
@


1.35
log
@Merge release 1.10.4 (all code by kristaps@@), providing four new features:
1) Proper .Bk support: allow output line breaks at input line breaks,
but keep input lines together in the output, finally fixing
synopses like aucat(1), mail(1) and tmux(1).
2) Mostly finished -Tps (PostScript) output.
3) Implement -Thtml output for .Nm blocks and .Bk -words.
4) Allow iterative interpolation of user-defined roff(7) strings.
Also contains some minor bugfixes and some performance improvements.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.34 2010/06/29 15:49:52 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 29 2010 $
d195 4
d338 8
@


1.34
log
@sync to bsd.lv version 1.10.3:
* support -Tps -Opaper=a4 and -Opaper=letter
* lots of mandoc.1 manual improvements
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.33 2010/06/29 14:41:28 schwarze Exp $
d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@bsd.lv>
d305 4
a308 2
Output pages are US-letter sized and rendered in fixed, 10-point Courier
font.
d321 4
a324 1
.Ar a4
d327 6
@


1.33
log
@framework for glyph width encoding; from kristaps@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.32 2010/06/26 17:56:43 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 26 2010 $
a53 3
See
.Sx Output Options
for details.
d139 33
d177 1
a177 2
arguments (see
.Sx OUTPUT ) :
d209 27
a235 4
.Ss Compiler Options
Default compiler behaviour may be overridden with the
.Fl f
flag.
d237 4
a240 23
.It Fl f Ns Cm ign-errors
When parsing multiple files, don't halt when one errors out.
Useful with
.Fl T Ns Cm lint
over a large set of manuals passed on the command line.
.It Fl f Ns Cm ign-escape
Ignore invalid escape sequences.
This is the default, but the option can be used to override an earlier
.Fl f Ns Cm strict .
.It Fl f Ns Cm ign-scope
When rewinding the scope of a block macro, forces the compiler to ignore
scope violations.
This can seriously mangle the resulting tree.
.Pq mdoc only
.It Fl f Ns Cm no-ign-escape
Do not ignore invalid escape sequences.
.It Fl f Ns Cm no-ign-macro
Do not ignore unknown macros at the start of input lines.
.It Fl f Ns Cm strict
Implies
.Fl f Ns Cm no-ign-escape
and
.Fl f Ns Cm no-ign-macro .
d242 10
a251 1
.Ss Output Options
d253 8
a260 4
.Fl T Ns Ar html
and
.Fl T Ns Ar xhtml
modes accept the following
d262 1
a262 1
arguments:
a299 100
.Pp
The
.Fl T Ns Ar ascii
mode accepts the following
.Fl O
argument:
.Bl -tag -width Ds
.It Cm width Ns = Ns Ar width
The output width is set to
.Ar width ,
which will normalise to \(>=60.
.El
.Sh OUTPUT
This section documents output details of
.Nm .
In general, output conforms to the traditional manual style of a header,
a body composed of sections and sub-sections, and a footer.
.Pp
The text style of output characters (non-macro characters, punctuation,
and white-space) is dictated by context.
.Pp
White-space is generally stripped from input.
This can be changed with
character escapes (specified in
.Xr mandoc_char 7 )
or literal modes (specified in
.Xr mdoc 7
and
.Xr man 7 ) .
.Pp
If non-macro punctuation is set apart from words, such as in the phrase
.Dq to be \&, or not to be ,
it's processed by
.Nm ,
regardless of output format, according to the following rules:  opening
punctuation
.Po
.Sq \&( ,
.Sq \&[ ,
and
.Sq \&{
.Pc
is not followed by a space; closing punctuation
.Po
.Sq \&. ,
.Sq \&, ,
.Sq \&; ,
.Sq \&: ,
.Sq \&? ,
.Sq \&! ,
.Sq \&) ,
.Sq \&]
and
.Sq \&}
.Pc
is not preceded by white-space.
.Pp
If the input is
.Xr mdoc 7 ,
however, these rules are also applied to macro arguments when appropriate.
.Ss ASCII Output
Output produced by
.Fl T Ns Cm ascii ,
which is the default, is rendered in standard 7-bit ASCII documented in
.Xr ascii 7 .
.Pp
Font styles are applied by using back-spaced encoding such that an
underlined character
.Sq c
is rendered as
.Sq _ Ns \e[bs] Ns c ,
where
.Sq \e[bs]
is the back-space character number 8.
Emboldened characters are rendered as
.Sq c Ns \e[bs] Ns c .
.Pp
The special characters documented in
.Xr mandoc_char 7
are rendered best-effort in an ASCII equivalent.
.Pp
Output width is limited to 78 visible columns unless literal input lines
exceed this limit.
.Ss HTML Output
Output produced by
.Fl T Ns Cm html
conforms to HTML-4.01 strict.
.Pp
Font styles and page structure are applied using CSS2.
By default, no font style is applied to any text,
although CSS2 is hard-coded to format
the basic structure of output.
.Pp
The
.Pa example.style.css
file documents the range of styles applied to output and, if used, will
cause rendered documents to appear as they do in
.Fl T Ns Cm ascii .
.Pp
Special characters are rendered in decimal-encoded UTF-8.
d305 18
a322 2
Output pages are US-letter sized (215.9 x 279.4 mm) and rendered in
fixed, 10-point Courier font.
d347 4
@


1.32
log
@merge release 1.10.2
* bug fixes:
- interaction of ASCII_HYPH with special chars (found by Ulrich Spoerlein)
- handling of roff conditionals (found by Ulrich Spoerlein)
- .Bd -offset will no more default to 6n
* maintenance:
- more caching of .Bd and .Bl arguments for efficiency
- deconstify man(7) validation routines
- add FreeBSD library names (provided by Ulrich Spoerlein)
* start PostScript font-switching
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.31 2010/06/10 22:50:10 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 10 2010 $
d214 3
a216 1
modes accept the following output options:
d218 1
a218 1
.It Fl O Ns Cm includes Ns = Ns Ar fmt
d231 1
a231 1
.It Fl O Ns Cm man Ns = Ns Ar fmt
d247 1
a247 1
.It Fl O Ns Cm style Ns = Ns Ar style.css
d257 3
a259 1
mode accepts the following output option:
d261 1
a261 1
.It Fl O Ns Cm width Ns = Ns Ar width
d355 3
a357 1
PostScript Level 2 pages may be generated by
@


1.31
log
@minimal initial -Tps support, from kristaps@@ GSOC
so far, monospace without font decoration,
but it already has page headers and footers
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.30 2010/06/08 00:11:47 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 8 2010 $
d351 1
a351 1
PostScript Level 1 pages may be generated by
@


1.30
log
@Merge more bits that will be going into 1.10.1:

Clean up vertical spacing in the SYNOPSIS, making the code much more
systematic; this doesn't solve all SYNOPSIS problems yet, in particular
not those related to keeps, indentation and the low-level .nr roff
instruction, but it's a nice step forward and i couldn't find relevant
regressions.  (from kristaps)

Besides,
* make the output width configurable (default: -Owidth=80) (kristaps)
* use mmap with MAP_SHARED (from Joerg Sonnenberger)
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.29 2010/05/14 01:54:37 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: May 14 2010 $
d166 4
d350 5
@


1.29
log
@merge 1.9.24, keeping local patches; some changes:
* preserve multiple consecutive space characters in input
* do not restrict .Cd and .Rv to certain sections (requested by Joerg)
* do not run lookup() on quoted words
* enum return types for mdoc_args and mdoc_argv
* fix auto-closing of LINK tag in -Txhtml (from Daniel Friesel)
* various lint and manual fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.28 2010/05/13 20:34:29 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: May 13 2010 $
d206 1
a206 1
For the time being, only
d210 1
a210 1
accept output options:
d247 10
@


1.28
log
@Remove the command line option -fno-ign-chars.
This option was not useful, you never want mandoc to die
just because there is an invalid character in the input file,
neither in production nor when linting: a warning is sufficient.
This was particularly annoying because it was part of -fstrict
and could not be switched off.
"less is more" kristaps@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.27 2010/04/13 08:52:23 jmc Exp $
d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@kth.se>
d17 1
a17 1
.Dd $Mdocdate: April 13 2010 $
d457 1
a457 1
.An Kristaps Dzonsons Aq kristaps@@kth.se .
@


1.27
log
@zap all the (rather useless) dot lines; ok kristaps
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.26 2010/04/13 06:52:12 jmc Exp $
a194 2
.It Fl f Ns Cm no-ign-chars
Do not ignore disallowed characters.
d201 1
a201 2
.Fl f Ns Cm no-ign-escape ,
.Fl f Ns Cm no-ign-macro ,
d203 1
a203 1
.Fl f Ns Cm no-ign-chars .
@


1.26
log
@- sort everything
- prefer Cm to Ar for stuff like -Tascii
- fix wonky ellipsis
- standard $ prompt
- update usage()

kristaps has these diffs rolled in already
ok schwarze kristaps
@
text
@d1 1
a1 1
.\"	$OpenBSD: mandoc.1,v 1.25 2010/04/08 16:47:28 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: April 8 2010 $
a19 2
.
.
a22 2
.
.
a31 2
.
.
a38 1
.
a44 1
.
a51 1
.
a56 1
.
a63 1
.
a65 1
.
a77 1
.
a84 1
.
a96 1
.
a98 2
.
.
a117 1
.
a130 1
.
a141 2
.
.
a148 1
.
a155 1
.
a159 1
.
a165 1
.
a167 1
.
a172 1
.
a175 2
.
.
a179 1
.
a185 1
.
a189 1
.
a194 1
.
a196 1
.
a198 1
.
a200 1
.
a207 2
.
.
a250 2
.
.
a294 1
.
a298 2
.
.
a321 2
.
.
a338 2
.
.
a347 2
.
.
a349 1
.
a352 1
.
a360 1
.
a362 2
.
.
a368 2
.
.
a375 1
.
a385 1
.
a396 1
.
a404 1
.
a411 1
.
a413 1
.
a418 1
.
a421 2
.
.
a443 1
.
a451 2
.
.
a455 1
.
a460 2
.
.
a469 1
.
a480 1
.
a491 1
.
a503 1
.
a510 1
.
@


1.25
log
@first pass at cleaning this page up:

- add openbsd rcsid
- new sentence, new line
- > -> \*(Gt

ok schwarze
diff sent to kristaps; this commit includes a tweak from kristaps to
keep the page up to date
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d17 1
a17 1
.Dd $Mdocdate: March 29 2010 $
d29 2
a30 1
.Op Fl f Ns Ar option...
d32 1
a32 1
.Op Fl O Ns Ar option...
d34 2
a35 3
.Op Fl V
.Op Fl W Ns Ar err...
.Op Ar infile...
d47 1
a47 1
.It Fl f Ns Ar option...
d59 1
a59 1
.Fl m Ns Ar andoc .
d61 1
a61 1
.It Fl O Ns Ar option...
d73 1
a73 1
.Fl T Ns Ar ascii .
d78 1
a78 1
.It Fl W Ns Ar err...
d81 1
a81 1
.Fl W Ns Ar all
d83 1
a83 1
.Fl W Ns Ar error
d89 1
a89 1
.Fl W Ns Ar error,all .
d91 2
a92 3
.It Ar infile...
Read input from zero or more
.Ar infile .
d107 1
a107 1
.Fl m Ns Ar andoc ,
d109 1
a109 1
.Fl T Ns Ar ascii
d124 1
a124 1
.Fl m Ns Ar doc
d126 1
a126 1
.Fl m Ns Ar an ,
d138 1
a138 1
.Fl m Ns Ar andoc ,
d153 1
a153 1
.Fl m Ns Ar andoc ,
d157 1
a157 1
.Fl m Ns Ar doc
d159 1
a159 1
.Fl m Ns Ar an
d172 1
a172 1
.It Fl T Ns Ar ascii
d179 1
a179 1
.It Fl T Ns Ar html
d184 11
a194 1
.It Fl T Ns Ar xhtml
a197 10
.
.It Fl T Ns Ar tree
Produce an indented parse tree.
.
.It Fl T Ns Ar lint
Parse only: produce no output.
Implies
.Fl W Ns Ar all
and
.Fl f Ns Ar strict .
d211 12
a222 1
.It Fl f Ns Ar ign-scope
d228 2
a229 4
.It Fl f Ns Ar ign-escape
Ignore invalid escape sequences.
This is the default, but the option can be used to override an earlier
.Fl f Ns Ar strict .
d231 2
a232 2
.It Fl f Ns Ar no-ign-escape
Don't ignore invalid escape sequences.
d234 1
a234 1
.It Fl f Ns Ar no-ign-macro
d237 1
a237 4
.It Fl f Ns Ar no-ign-chars
Do not ignore disallowed characters.
.
.It Fl f Ns Ar strict
d239 2
a240 2
.Fl f Ns Ar no-ign-escape ,
.Fl f Ns Ar no-ign-macro
d242 1
a242 7
.Fl f Ns Ar no-ign-chars .
.
.It Fl f Ns Ar ign-errors
When parsing multiple files, don't halt when one errors out.
Useful with
.Fl T Ns Ar lint
over a large set of manuals passed on the command line.
d251 1
a251 1
accepts output options:
d253 1
a253 7
.It Fl O Ns Ar style=style.css
The file
.Ar style.css
is used for an external style-sheet.
This must be a valid absolute or
relative URI.
.It Fl O Ns Ar includes=fmt
d266 1
a266 1
.It Fl O Ns Ar man=fmt
d282 6
d344 1
a344 1
.Fl T Ns Ar ascii ,
d369 1
a369 1
.Fl T Ns Ar html
d381 1
a381 1
.Fl T Ns Ar ascii .
d388 1
a388 1
.Fl T Ns Ar xhtml
d401 2
a402 2
.D1 % mandoc \-Wall,error \-fstrict mandoc.1 2\*(Gt&1 | less
.D1 % mandoc mandoc.1 mdoc.3 mdoc.7 | less
d409 1
a409 1
.D1 % mandoc \-Thtml -Ostyle=style.css mdoc.7 \*(Gt mdoc.7.html
d414 1
a414 1
.Dl % mandoc \-Tlint \-fign-errors `find /usr/src -name \e*\e.[1-9]`
d431 1
a431 1
.Fl T Ns Ar ascii .
d441 1
a441 1
.Fl T Ns Ar ascii
d457 1
a457 1
A list or display following
d461 1
a461 1
.Fl T Ns Ar ascii
d470 1
a470 1
.Fl T Ns Ar ascii
d534 1
a534 1
.Fl T Ns Ar html
d536 1
a536 1
.Fl T Ns Ar xhtml
d538 1
a538 1
.Fl m Ns Ar doc
d544 1
a544 1
.Fl T Ns Ar html
d546 1
a546 1
.Fl T Ns Ar xhtml ,
d551 2
a552 2
formats, e.g.,
.Fl O Ns Ar style=really/long/link .
d556 1
a556 1
.Fl T Ns Ar html
d558 1
a558 1
.Fl T Ns Ar xhtml
d568 1
a568 1
.Fl m Ns Ar an ,
d574 1
a574 1
.Fl T Ns Ar html
d576 1
a576 1
.Fl T Ns Ar xhtml
d583 1
a583 1
.Fl m Ns Ar an
@


1.24
log
@merge 1.9.19, keeping local patches
 * scoping fixes for roff instructions
 * accept apostroph in place of dot as a macro control character
 * accept tabs between the control character and the macro name
 * check that man(7) .TH titles use capital letters
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.23 2010/03/26 01:22:05 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: March 26 2010 $
d43 2
a44 1
manual pages for display.  The arguments are as follows:
d48 2
a49 1
Comma-separated compiler options.  See
d54 2
a55 1
Input format.  See
d57 2
a58 1
for available formats.  Defaults to
d62 2
a63 1
Comma-separated output options.  See
d68 2
a69 1
Output format.  See
d71 2
a72 1
for available formats.  Defaults to
d79 2
a80 1
Comma-separated warning options.  Use
d85 2
a86 1
termination.  Multiple
d94 2
a95 1
If unspecified, reads from stdin.  If multiple files are specified,
d128 2
a129 1
respectively.  The
d155 2
a156 1
each has its file-type determined this way.  If multiple files are
d175 3
a177 1
styles.  This is the default.  See
d181 2
a182 1
Produce strict HTML-4.01 output, with a sane default style.  See
d186 2
a187 1
Produce strict XHTML-1.0 output, with a sane default style.  See
d214 2
a215 1
scope violations.  This can seriously mangle the resulting tree.
d240 2
a241 1
Don't halt when encountering parse errors.  Useful with
d257 2
a258 1
is used for an external style-sheet.  This must be a valid absolute or
d267 2
a268 1
macro).  Instances of
d270 2
a271 1
are replaced with the include filename.  The default is not to present a
d280 2
a281 1
macro).  Instances of
d286 2
a287 1
If no section is included, section 1 is assumed.  The default is not to
d301 2
a302 1
White-space is generally stripped from input.  This can be changed with
d356 2
a357 1
is the back-space character number 8.  Emboldened characters are rendered as
d373 3
a375 2
Font styles and page structure are applied using CSS2.  By default, no
font style is applied to any text, although CSS2 is hard-coded to format
d402 1
a402 1
.D1 % mandoc \-Wall,error \-fstrict mandoc.1 2>&1 | less
d410 1
a410 1
.D1 % mandoc \-Thtml -Ostyle=style.css mdoc.7 > mdoc.7.html
d453 2
a454 1
in the FILES section.  This behaves correctly in
d496 4
a499 2
CSS instead of hard-coded.  It also will not span past the current
scope, for the same reason.  Note that in
d522 1
d524 1
a524 2
.Xr mdoc 7 ,
.Xr man 7
d550 2
a551 1
which is usually 1024 bytes.  Be aware of this when setting long link
@


1.23
log
@merge 1.9.17, keeping local patches

* much improved pod2man support and low-level roff robustness
* have -Tlint imply -Wall and -fstrict
* use fewer macros and more enum in libman
* and various bug fixes
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.22 2010/03/25 23:23:01 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: March 25 2010 $
d513 1
d524 1
d536 1
d549 1
d557 5
@


1.22
log
@merge 1.9.16, keeping local patches

This is mostly cleanup by kristaps@@ after my rather hackish patch
to tolerate the non-text macros .na, .sp, .br in next-line scope;
plus some nesting issues fixed by him, all in man(7).
This survived a full  cd /usr/src; make man.
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.21 2010/02/18 02:11:26 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: February 18 2010 $
d179 4
d232 2
d536 1
a536 1
.Fl m Ar Ns an ,
d545 8
a552 1
and cause it to forget the formatting.
@


1.21
log
@sync to release 1.9.15:
 * corrected .Vt handling (spotted by Joerg Sonnenberger)
 * corrected .Xr argument handling (based on my patch)
 * removed \\ escape sequence (because it is for low-level roff only)
 * warn about trailing whitespace (suggested by jmc@@)
 * -Txhtml support
 * and some general cleanup and doc improvements
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.20 2009/12/24 02:08:14 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: December 24 2009 $
d505 2
a506 2
input lists does not render properly in brain-dead browsers, such as
Internet Explorer 6 and earlier.
d528 12
@


1.20
log
@sync to 1.9.14: rewrite escape sequence handling:
- new function a2roffdeco
- font modes (\f) only affect the current stack point
- implement scaling (\s)
- implement space suppression (\c)
- implement non-breaking space (\~) in -Tascii
- many manual improvements
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.19 2009/12/22 23:58:00 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: December 22 2009 $
d170 4
d238 1
a238 1
for example, 
d249 1
a249 1
for example, 
d267 1
a267 1
a body composed of sections and sub-sections, and a footer.  
d314 1
a314 1
Output produced by 
d340 1
a340 1
comforms to HTML-4.01 strict.
d355 11
d397 1
a397 1
The 
d399 1
a399 1
special character doesn't produce expected behaviour in 
d403 1
a403 1
The 
d405 1
a405 1
and 
d414 1
a414 1
In 
d455 1
a455 1
.Ss HTML Compatibility
d464 1
a464 1
scope, for the same reason.  Note that in 
d501 2
d509 3
a511 1
.Fl T Ns Ar html ,
d520 3
a522 1
output mode doesn't render the
@


1.19
log
@sync to 1.9.12, mostly portability and refactoring:

correctness/functionality:
- bugfix: do not die when overstep hits the right margin
- new option: -fign-escape
- and various HTML features

portability:
- replace bzero(3) by memset(3), which is ANSI C
- replace err(3)/warn(3) by perror(3)/exit(3), which is ANSI C
- iuse argv[0] instead of __progname
- add time.h to various files for FreeBSD compilation

simplicity:
- do not allocate header/footer data dynamically in *_term.c
- provide and use malloc frontends that error out on failure

for full changelogs, see http://bsd.lv/cgi-bin/cvsweb.cgi/
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.18 2009/10/27 21:40:07 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: October 27 2009 $
d99 1
a99 1
and prints 78-column backspace-encoded output to stdout as if
d101 1
a101 1
were provided.
a106 41
.Ss Punctuation and Spacing
If punctuation is set apart from words, such as in the phrase
.Dq to be \&, or not to be ,
it's processed by
.Nm
according to the following rules:  opening punctuation
.Po
.Sq \&( ,
.Sq \&[ ,
and
.Sq \&{
.Pc
is not followed by a space; closing punctuation
.Po
.Sq \&. ,
.Sq \&, ,
.Sq \&; ,
.Sq \&: ,
.Sq \&? ,
.Sq \&! ,
.Sq \&) ,
.Sq \&]
and
.Sq \&}
.Pc
is not preceded by whitespace.
.
.Pp
If the input is
.Xr mdoc 7 ,
these rules are also applied to macro arguments when appropriate.
.
.Pp
White-space, in non-literal (normal) mode, is stripped from input and
replaced on output by a single space.  Thus, if you wish to preserve multiple
spaces, they must be space-escaped or used in a literal display mode, e.g.,
.Sq \&Bd \-literal
in
.Xr mdoc 7 .
.
.
d157 2
a158 1
arguments:
d163 2
a164 1
styles.  This is the default.
d167 2
a168 1
Produce strict HTML-4.01 output, with a sane default style.
d220 1
d224 1
a224 1
is the only mode with output options:
d258 93
d363 1
a363 1
.D1 % mandoc \-Thtml -ostyle=style.css mdoc.7 > mdoc.7.html
d379 1
a379 1
.Ss ASCII output
d439 2
a440 1
.Ss HTML output
d444 10
d469 2
a470 1
.\" SECTION
d482 1
d484 7
d496 11
a506 2
formats with
.Fl O Ns Ar man=fmt .
@


1.18
log
@sync to 1.9.11: adapt printing of dates to groff conventions,
NetBSD portability fixes and some minor bugfixes and feature enhancements;
also checked that my hyphenation code still works on top of this
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.17 2009/10/21 19:13:50 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: October 21 2009 $
d230 5
@


1.17
log
@sync to 1.9.9, featuring:
 * -Thtml output mode
 * roff scaling units
 * and some minor fixes
for full changelogs, see http://bsd.lv/cgi-bin/cvsweb.cgi/
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.16 2009/09/18 22:46:14 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: September 18 2009 $
d31 1
a31 1
.Op Fl o Ns Ar option...
d57 1
a57 1
.It Fl o Ns Ar option...
d258 1
a258 1
.It Fl o Ns Ar style=style.css
d263 1
a263 1
.It Fl o Ns Ar includes=fmt
d274 1
a274 1
.It Fl o Ns Ar man=fmt
d416 1
a416 1
.Fl o Ns Ar man=fmt .
@


1.16
log
@sync to 1.9.2: Add .UC libman macro for compatibility, has no effect.
Correct .UC and .DT to not print their arguments.
Document that .UC and .DT should not be used.
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.15 2009/09/18 22:41:24 schwarze Exp $
a28 1
.Op Fl V
d31 3
a34 1
.Op Fl T Ns Ar output
d47 1
a47 1
Override default compiler behaviour.  See
d57 5
d72 1
a72 1
Configure warning messages.  Use
d205 3
d253 36
a288 10
.Pp
As with the
.Fl W
flag, multiple
.Fl f
options may be grouped and delimited with a comma.  Using
.Fl f Ns Ar ign-scope,no-ign-escape ,
for example, will try to ignore scope and not ignore character-escape
errors.
.
d298 6
d377 20
d402 1
a402 1
.\" SECTION
d408 9
@


1.15
log
@fix typo (overriden -> overridden); from jmc@@; included in 1.9.2
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.14 2009/08/22 23:17:40 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: August 22 2009 $
a318 2
and
.Sq \&Dt
d320 1
a320 1
macros in
d322 1
a322 1
have no effect.
@


1.14
log
@another large chunk of -man updates,
among others regarding .DT, .HP, .RS, .RE, .SH, .SS, and scoping,
now in sync vith release 1.9.1
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.13 2009/08/22 16:03:14 schwarze Exp $
d212 1
a212 1
Default compiler behaviour may be overriden with the
@


1.13
log
@sync to 1.8.5: note that \~ does not work;
noticed by <uqs at spoerlein dot net>
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.12 2009/08/22 14:56:03 schwarze Exp $
d20 2
a21 1
.\" SECTION
d25 2
a26 1
.\" SECTION
d35 2
a36 1
.\" SECTION
d43 1
a44 1
.\" ITEM
d49 1
a49 1
.\" ITEM
d55 1
a55 1
.\" ITEM
d61 1
a61 1
.\" ITEM
d64 1
a64 1
.\" ITEM
d75 1
a75 1
.\" ITEM
d83 1
a83 1
.\" PARAGRAPH
d96 1
a96 1
.\" PARAGRAPH
d99 2
a100 1
.\" SUB-SECTION
d127 1
d132 1
d135 2
a136 4
replaced on output by a single space.  Thus, if you wish to preserve
multiple spaces, they must be space-escaped
.Sq \e\
or used in a literal display mode, e.g.,
d140 2
a141 1
.\" SUB-SECTION
d160 1
d174 1
d185 2
a186 12
.\" .Pp
.\" The following escape sequences are recognised, although the per-format
.\" compiler may not allow certain sequences.
.\" .Bl -tag -width Ds -offset XXXX
.\" .It \efX
.\" sets the font mode to X (B, I, R or P, where P resets the font)
.\" .It \eX, \e(XX, \e[XN]
.\" queries the special-character table for a corresponding symbol
.\" .It \e*X, \e*(XX, \e*[XN]
.\" deprecated special-character format
.\" .El
.\" SUB-SECTION
d193 1
d198 1
d201 1
d205 1
d209 2
a210 1
.\" SUB-SECTION
d215 1
d221 1
d224 1
d227 1
d230 1
d237 1
d243 1
a243 1
.\" PARAGRAPH
d253 2
a254 1
.\" SECTION
d257 1
a257 1
.\" PARAGRAPH
d261 1
a261 1
.\" PARAGRAPH
d264 1
a264 1
.\" PARAGRAPH
d267 2
a268 1
.\" SECTION
d274 4
a277 1
.Pp
a278 1
.\" LIST-ITEM
d282 25
a306 2
special character doesn't produce expected behaviour.
.\" LIST-ITEM
d310 3
d315 1
d317 9
a325 4
The \-literal and \-unfilled
.Sq \&Bd
displays types are synonyms, as are \-filled and \-ragged.
.\" LIST-ITEM
d328 1
a328 1
.\" LIST-ITEM
d331 6
a336 1
so double spaces following sentence closure are reduced to a single space.
@


1.12
log
@sync to 1.8.4: add option -fign-errors to check several manual pages
without stopping at errors
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.11 2009/08/09 20:40:18 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: August 9 2009 $
d266 6
d281 1
d284 1
d287 1
a287 2
so double spaces following sentence closure are reduced to a single space
.Pq Dq French spacing .
@


1.11
log
@sync to 1.8.3: quote macro names without a preceding dot
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.10 2009/08/09 17:20:17 schwarze Exp $
d230 4
d252 6
@


1.10
log
@sync to 1.8.2: remove trailing whitespace
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.9 2009/07/18 20:50:37 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 18 2009 $
d133 1
a133 1
.Sq \&.Bd \-literal
d160 1
a160 1
.Sq \&.Dd
d162 1
a162 1
.Sq \&.Dt ,
d258 1
a258 1
.Sq \&.Ss
d260 1
a260 1
.Sq \&.Sh .
d263 1
a263 1
.Sq \&.Bd
@


1.9
log
@sync to 1.8.0: support .Bl -hang
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.8 2009/07/12 22:44:45 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 12 2009 $
d37 1
a37 1
utility formats 
d43 1
a43 1
Override default compiler behaviour.  See 
d66 1
a66 1
.Fl W Ns Ar error 
d68 1
a68 1
termination.  Multiple 
d82 3
a84 3
By default, 
.Nm 
reads 
d104 2
a105 2
.Sq \&( , 
.Sq \&[ , 
d108 1
a108 1
.Pc 
d111 8
a118 8
.Sq \&. , 
.Sq \&, , 
.Sq \&; , 
.Sq \&: , 
.Sq \&? , 
.Sq \&! , 
.Sq \&) , 
.Sq \&] 
d121 1
a121 1
.Pc 
d131 4
a134 4
.Sq \e\ 
or used in a literal display mode, e.g., 
.Sq \&.Bd \-literal 
in 
d152 1
a152 1
recommended; 
d159 1
a159 1
non-comment macro is 
d163 1
a163 1
the 
d170 2
a171 2
files are specified with 
.Fl m Ns Ar andoc , 
d225 1
a225 1
Implies 
d227 1
a227 1
.Fl f Ns Ar no-ign-macro 
d229 1
a229 1
.Fl f Ns Ar no-ign-chars . 
d250 1
a250 1
This section summarises 
d252 1
a252 1
compatibility with 
d256 1
a256 1
.It 
d262 1
a262 1
The \-literal and \-unfilled 
d281 1
a281 1
utility was written by 
@


1.8
log
@sync to 1.7.23: Fewer knobs: provide -Wall -Werror but not -Wsyntax -Wcompat.
The simplification of the internal code has already been done before,
this is just the user interface adjustment.
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.7 2009/06/23 23:40:59 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 23 2009 $
a282 8
.\" SECTION
.Sh CAVEATS
The 
.Nm
utility doesn't yet know how to display \-hang lists.
.Pp
Other macros still aren't supported by virtue of nobody complaining
about their absence.
@


1.7
log
@sync to 1.7.20: Document whitespace handling.
Currently, mandoc(1) produces French spacing, which is a bug and needs
to be fixed, but document it anyway for the time being.
While here, fix a few typos, also reported upstream.
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.6 2009/06/21 20:03:11 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 21 2009 $
d63 1
a63 1
Print warning messages.  May be set to 
d65 1
a65 5
for all warnings, 
.Ar compat
for groff/troff-compatibility warnings, or
.Ar syntax
for syntax warnings.  If
d67 1
a67 1
is specified, warnings are considered errors and cause utility
@


1.6
log
@sync to 1.7.19: update and reorder COMPATIBILITY and CAVEATS
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.5 2009/06/17 22:37:04 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 17 2009 $
d101 1
a101 1
.Ss Punctuation
d106 1
a106 1
according to the following rules.  Opening punctuation
d113 1
a113 1
is not followed by a space. Closing punctuation
d131 9
a264 1
.\" LIST-ITEM
a268 1
.\" LIST-ITEM
d271 4
@


1.5
log
@use standard Ds (eight char) indents for tab lists documenting options;
ok kristaps@@
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.4 2009/06/14 23:39:43 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: June 14 2009 $
d244 22
d270 1
a270 1
.\" 
d280 1
a280 10
utility in
.Fl T Ns Ar ascii
mode doesn't yet know how to display the following:
.Pp
.Bl -bullet -compact
.It
The \-hang 
.Sq \&.Bl
list is not yet supported.
.El
d283 1
a283 22
about their absence.  Please report any omissions: this is a work in
progress.
.Pp
The following list documents differences between traditional
.Xr nroff 1
output and
.Nm :
.Pp
.Bl -bullet -compact
.It 
A list of display following
.Sq \&.Ss
does not assert a prior vertical break, just as it doesn't with
.Sq \&.Sh .
.It
Special characters don't follow the current font style.
.\" LIST-ITEM
.It
The \-literal and \-unfilled 
.Sq \&.Bd
displays types are synonyms, as are \-filled and \-ragged.
.El
@


1.4
log
@sync to 1.7.16: support -V command line option
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.3 2009/06/14 23:00:57 schwarze Exp $
d40 1
a40 1
.Bl -tag -width XXXXXXXXXXXX
d191 1
a191 1
.Bl -tag -width XXXXXXXXXXXX 
d208 1
a208 1
.Bl -tag -width XXXXXXXXXXXXXXXXXXXX 
@


1.3
log
@sync to 1.7.16: comments, whitespace and spelling fixes; no functional change
@
text
@d1 1
a1 1
.\"	$Id: mandoc.1,v 1.18 2009/06/11 07:26:35 kristaps Exp $
d17 1
a17 1
.Dd $Mdocdate$
d27 1
d58 3
@


1.2
log
@uppercase Dt, ok jmc
@
text
@d1 1
a1 1
.\" $Id: mandoc.1,v 1.1 2009/04/06 20:30:40 kristaps Exp $
d3 1
a3 1
.\" Copyright (c) 2009 Kristaps Dzonsons <kristaps@@openbsd.org>
d6 2
a7 3
.\" purpose with or without fee is hereby granted, provided that the
.\" above copyright notice and this permission notice appear in all
.\" copies.
d9 7
a15 8
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
.\" WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
.\" AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
.\" DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
.\" PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
.\" TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
.\" PERFORMANCE OF THIS SOFTWARE.
d17 1
a17 1
.Dd $Mdocdate: April 6 2009 $
d122 1
a122 1
is not preceeded by whitespace.
d249 1
a249 1
.An Kristaps Dzonsons Aq kristaps@@openbsd.org .
@


1.1
log
@Initial check-in of mandoc for formatting manuals. ok deraadt@@
@
text
@d1 1
a1 1
.\" $Id: mandoc.1,v 1.13 2009/04/05 16:34:22 kristaps Exp $
d19 2
a20 2
.Dd $Mdocdate$
.Dt mandoc 1
@

