head	1.58;
access;
symbols
	OPENBSD_6_2:1.58.0.4
	OPENBSD_6_2_BASE:1.58
	OPENBSD_6_1:1.57.0.8
	OPENBSD_6_1_BASE:1.57
	OPENBSD_6_0:1.57.0.4
	OPENBSD_6_0_BASE:1.57
	OPENBSD_5_9:1.57.0.2
	OPENBSD_5_9_BASE:1.57
	OPENBSD_5_8:1.55.0.4
	OPENBSD_5_8_BASE:1.55
	OPENBSD_5_7:1.49.0.2
	OPENBSD_5_7_BASE:1.49
	OPENBSD_5_6:1.44.0.4
	OPENBSD_5_6_BASE:1.44
	OPENBSD_5_5:1.41.0.4
	OPENBSD_5_5_BASE:1.41
	OPENBSD_5_4:1.40.0.6
	OPENBSD_5_4_BASE:1.40
	OPENBSD_5_3:1.40.0.4
	OPENBSD_5_3_BASE:1.40
	OPENBSD_5_2:1.40.0.2
	OPENBSD_5_2_BASE:1.40
	OPENBSD_5_1_BASE:1.38
	OPENBSD_5_1:1.38.0.2
	OPENBSD_5_0:1.37.0.2
	OPENBSD_5_0_BASE:1.37
	OPENBSD_4_9:1.34.0.2
	OPENBSD_4_9_BASE:1.34
	OPENBSD_4_8:1.25.0.2
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4;
locks; strict;
comment	@ * @;


1.58
date	2017.04.24.23.06.09;	author schwarze;	state Exp;
branches;
next	1.57;
commitid	2CfzvK3gmiJH7vY0;

1.57
date	2015.11.07.13.57.55;	author schwarze;	state Exp;
branches;
next	1.56;
commitid	UKwSq7JMt0q6KNpK;

1.56
date	2015.10.22.21.53.49;	author schwarze;	state Exp;
branches;
next	1.55;
commitid	b31415iHGGouYvkz;

1.55
date	2015.04.23.16.17.04;	author schwarze;	state Exp;
branches;
next	1.54;
commitid	DWHgiJTn6DvDpekX;

1.54
date	2015.04.18.17.50.02;	author schwarze;	state Exp;
branches;
next	1.53;
commitid	sjmmdLSx1e3Vat0h;

1.53
date	2015.04.18.16.04.40;	author schwarze;	state Exp;
branches;
next	1.52;
commitid	6MYJ7cd8mhJ77AGH;

1.52
date	2015.04.02.23.47.43;	author schwarze;	state Exp;
branches;
next	1.51;
commitid	RJFkOLiS9gBqEEDl;

1.51
date	2015.04.02.22.06.17;	author schwarze;	state Exp;
branches;
next	1.50;
commitid	Rfx1oTaH3hZ7Zcyf;

1.50
date	2015.04.02.21.03.18;	author schwarze;	state Exp;
branches;
next	1.49;
commitid	lmErjWY2O9ooA6RY;

1.49
date	2015.01.24.02.41.32;	author schwarze;	state Exp;
branches;
next	1.48;
commitid	TIJT04XdY4be3Or5;

1.48
date	2014.12.24.18.03.34;	author schwarze;	state Exp;
branches;
next	1.47;
commitid	pA0fllLbjk8z3ZlT;

1.47
date	2014.11.28.19.25.03;	author schwarze;	state Exp;
branches;
next	1.46;
commitid	1m1y3OocNVYDnyZE;

1.46
date	2014.11.28.05.51.29;	author schwarze;	state Exp;
branches;
next	1.45;
commitid	9LYX9vvoCC2fp5xR;

1.45
date	2014.11.27.14.31.29;	author deraadt;	state Exp;
branches;
next	1.44;
commitid	je75OeVgCvwQD2St;

1.44
date	2014.06.20.22.58.41;	author schwarze;	state Exp;
branches;
next	1.43;
commitid	ktgkM223FL3EC6E8;

1.43
date	2014.03.30.19.47.32;	author schwarze;	state Exp;
branches;
next	1.42;

1.42
date	2014.03.22.00.56.07;	author schwarze;	state Exp;
branches;
next	1.41;

1.41
date	2013.10.17.20.51.29;	author schwarze;	state Exp;
branches;
next	1.40;

1.40
date	2012.06.02.20.07.09;	author schwarze;	state Exp;
branches;
next	1.39;

1.39
date	2012.02.26.19.41.27;	author schwarze;	state Exp;
branches;
next	1.38;

1.38
date	2011.10.09.17.59.56;	author schwarze;	state Exp;
branches;
next	1.37;

1.37
date	2011.04.24.16.22.02;	author schwarze;	state Exp;
branches;
next	1.36;

1.36
date	2011.03.20.23.36.42;	author schwarze;	state Exp;
branches;
next	1.35;

1.35
date	2011.03.07.01.35.33;	author schwarze;	state Exp;
branches;
next	1.34;

1.34
date	2011.01.16.02.56.47;	author schwarze;	state Exp;
branches;
next	1.33;

1.33
date	2011.01.04.22.28.17;	author schwarze;	state Exp;
branches;
next	1.32;

1.32
date	2010.12.27.23.57.13;	author schwarze;	state Exp;
branches;
next	1.31;

1.31
date	2010.12.19.07.53.12;	author schwarze;	state Exp;
branches;
next	1.30;

1.30
date	2010.11.29.02.26.45;	author schwarze;	state Exp;
branches;
next	1.29;

1.29
date	2010.11.29.00.12.02;	author schwarze;	state Exp;
branches;
next	1.28;

1.28
date	2010.10.23.15.49.30;	author schwarze;	state Exp;
branches;
next	1.27;

1.27
date	2010.10.15.20.45.03;	author schwarze;	state Exp;
branches;
next	1.26;

1.26
date	2010.08.20.00.53.35;	author schwarze;	state Exp;
branches;
next	1.25;

1.25
date	2010.07.25.18.05.54;	author schwarze;	state Exp;
branches;
next	1.24;

1.24
date	2010.06.27.21.54.42;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2010.06.06.18.08.41;	author schwarze;	state Exp;
branches;
next	1.22;

1.22
date	2010.05.23.22.45.00;	author schwarze;	state Exp;
branches;
next	1.21;

1.21
date	2010.05.23.20.57.16;	author schwarze;	state Exp;
branches;
next	1.20;

1.20
date	2010.05.20.00.58.02;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2010.05.16.00.54.03;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2010.05.15.18.06.02;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2010.05.14.19.52.43;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2010.05.13.20.34.29;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2010.04.25.16.32.19;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2010.03.26.01.22.05;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2010.03.02.01.00.39;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2009.12.22.23.58.00;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2009.10.27.21.40.07;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2009.10.19.21.08.58;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2009.09.18.22.46.14;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2009.08.22.23.17.40;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2009.08.22.20.14.37;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2009.08.22.15.15.37;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2009.07.07.00.54.46;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.23.22.31.26;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.18.23.34.53;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.14.23.00.57;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2009.04.06.20.30.40;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.58
log
@Continue parser unification:
* Make enum rofft an internal interface as enum roff_tok in "roff.h".
* Represent mdoc and man macros in enum roff_tok.
* Make TOKEN_NONE a proper enum value and use it throughout.
* Put the prologue macros first in the macro tables.
* Unify mdoc_macroname[] and man_macroname[] into roff_name[].
@
text
@/*	$OpenBSD: man.h,v 1.57 2015/11/07 13:57:55 schwarze Exp $ */
/*
 * Copyright (c) 2009, 2010, 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
 * Copyright (c) 2014, 2015 Ingo Schwarze <schwarze@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHORS DISCLAIM ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

struct	roff_man;

const struct mparse	*man_mparse(const struct roff_man *);
void			 man_validate(struct roff_man *);
@


1.57
log
@In private header files, __BEGIN_DECLS and __END_DECLS are pointless.
Because these work slightly differently on different systems,
they are becoming a maintenance burden in the portable version,
so delete them.

Besides, one of the chief design goals of the mandoc toolbox is to
make sure that nothing related to documentation requires C++.
Consequently, linking mandoc against any kind of C++ program would
defeat the purpose and is not supported.
I don't understand why kristaps@@ added them in the first place.
@
text
@d1 1
a1 1
/*	$OpenBSD: man.h,v 1.56 2015/10/22 21:53:49 schwarze Exp $ */
a17 44

#define	MAN_br   0
#define	MAN_TH   1
#define	MAN_SH   2
#define	MAN_SS   3
#define	MAN_TP   4
#define	MAN_LP   5
#define	MAN_PP   6
#define	MAN_P    7
#define	MAN_IP   8
#define	MAN_HP   9
#define	MAN_SM  10
#define	MAN_SB  11
#define	MAN_BI  12
#define	MAN_IB  13
#define	MAN_BR  14
#define	MAN_RB  15
#define	MAN_R   16
#define	MAN_B   17
#define	MAN_I   18
#define	MAN_IR  19
#define	MAN_RI  20
#define	MAN_sp  21
#define	MAN_nf  22
#define	MAN_fi  23
#define	MAN_RE  24
#define	MAN_RS  25
#define	MAN_DT  26
#define	MAN_UC  27
#define	MAN_PD  28
#define	MAN_AT  29
#define	MAN_in  30
#define	MAN_ft  31
#define	MAN_OP  32
#define	MAN_EX  33
#define	MAN_EE  34
#define	MAN_UR  35
#define	MAN_UE  36
#define	MAN_ll  37
#define	MAN_MAX 38

/* Names of macros. */
extern	const char *const *man_macronames;

@


1.56
log
@move man(7) validation into the dedicated validation phase, too
@
text
@d1 1
a1 1
/*	$OpenBSD: man.h,v 1.55 2015/04/23 16:17:04 schwarze Exp $ */
a61 1
__BEGIN_DECLS
a66 2

__END_DECLS
@


1.55
log
@Unify mdoc_deroff() and man_deroff() into a common function deroff().
No functional change except that for mdoc(7), it now skips leading
escape sequences just like it already did for man(7).
Escape sequences rarely occur in mdoc(7) code and if they do,
skipping them is an improvement in this context.
Minus 30 lines of code.
@
text
@d1 1
a1 1
/*	$OpenBSD: man.h,v 1.54 2015/04/18 17:50:02 schwarze Exp $ */
d66 2
a67 1
const struct mparse   *man_mparse(const struct roff_man *);
@


1.54
log
@Delete the wrapper functions mdoc_meta(), man_meta(), mdoc_node(),
man_node() from the mandoc(3) semi-public interface and the internal
wrapper functions print_mdoc() and print_man() from the HTML formatters.
Minus 60 lines of code, no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: man.h,v 1.53 2015/04/18 16:04:40 schwarze Exp $ */
a66 1
void man_deroff(char **, const struct roff_node *);
@


1.53
log
@Replace the structs mdoc and man by a unified struct roff_man.
Almost completely mechanical, no functional change.
Written on the train from Exeter to London returning from p2k15.
@
text
@d1 1
a1 1
/*	$OpenBSD: man.h,v 1.52 2015/04/02 23:47:43 schwarze Exp $ */
a65 2
const struct roff_node *man_node(const struct roff_man *);
const struct roff_meta *man_meta(const struct roff_man *);
@


1.52
log
@Third step towards parser unification:
Replace struct mdoc_meta and struct man_meta by a unified struct roff_meta.
Written of the train from London to Exeter on the way to p2k15.
@
text
@d1 1
a1 1
/*	$OpenBSD: man.h,v 1.51 2015/04/02 22:06:17 schwarze Exp $ */
d64 1
a64 1
struct	man;
d66 3
a68 3
const struct roff_node *man_node(const struct man *);
const struct roff_meta *man_meta(const struct man *);
const struct mparse   *man_mparse(const struct man *);
@


1.51
log
@Second step towards parser unification:
Replace struct mdoc_node and struct man_node by a unified struct roff_node.
To be able to use the tok member for both mdoc(7) and man(7) without
defining all the macros in roff.h, sacrifice a tiny bit of type safety
and make tok an int rather than an enum.
Almost mechanical, no functional change.
Written on the Eurostar from Bruxelles to London on the way to p2k15.
@
text
@d1 1
a1 1
/*	$OpenBSD: man.h,v 1.50 2015/04/02 21:03:18 schwarze Exp $ */
a58 9
struct	man_meta {
	char		*msec; /* `TH' section (1, 3p, etc.) */
	char		*date; /* `TH' normalised date */
	char		*vol; /* `TH' volume */
	char		*title; /* `TH' title (e.g., FOO) */
	char		*source; /* `TH' source (e.g., GNU) */
	int		 hasbody; /* document is not empty */
};

d67 1
a67 1
const struct man_meta *man_meta(const struct man *);
@


1.50
log
@First step towards parser unification:
Replace enum mdoc_type and enum man_type by a unified enum roff_type.
Almost mechanical, no functional change.
Written on the ICE train from Frankfurt to Bruxelles on the way to p2k15.
@
text
@d1 1
a1 1
/*	$OpenBSD: man.h,v 1.49 2015/01/24 02:41:32 schwarze Exp $ */
d4 1
a4 1
 * Copyright (c) 2014 Ingo Schwarze <schwarze@@openbsd.org>
d10 1
a10 1
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
d12 1
a12 1
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
d19 39
a57 41
enum	mant {
	MAN_br = 0,
	MAN_TH,
	MAN_SH,
	MAN_SS,
	MAN_TP,
	MAN_LP,
	MAN_PP,
	MAN_P,
	MAN_IP,
	MAN_HP,
	MAN_SM,
	MAN_SB,
	MAN_BI,
	MAN_IB,
	MAN_BR,
	MAN_RB,
	MAN_R,
	MAN_B,
	MAN_I,
	MAN_IR,
	MAN_RI,
	MAN_sp,
	MAN_nf,
	MAN_fi,
	MAN_RE,
	MAN_RS,
	MAN_DT,
	MAN_UC,
	MAN_PD,
	MAN_AT,
	MAN_in,
	MAN_ft,
	MAN_OP,
	MAN_EX,
	MAN_EE,
	MAN_UR,
	MAN_UE,
	MAN_ll,
	MAN_MAX
};
d68 1
a68 24
struct	man_node {
	struct man_node	*parent; /* parent AST node */
	struct man_node	*child; /* first child AST node */
	struct man_node	*next; /* sibling AST node */
	struct man_node	*prev; /* prior sibling AST node */
	int		 nchild; /* number children */
	int		 line;
	int		 pos;
	enum mant	 tok; /* tok or MAN__MAX if none */
	int		 flags;
#define	MAN_VALID	(1 << 0) /* has been validated */
#define	MAN_EOS		(1 << 2) /* at sentence boundary */
#define	MAN_LINE	(1 << 3) /* first macro/text on line */
	enum roff_type	 type; /* AST node type */
	char		*string; /* TEXT node argument */
	struct man_node	*head; /* BLOCK node HEAD ptr */
	struct man_node *tail; /* BLOCK node TAIL ptr */
	struct man_node	*body; /* BLOCK node BODY ptr */
	const struct tbl_span *span; /* TBL */
	const struct eqn *eqn; /* EQN */
	int		 aux; /* decoded node data, type-dependent */
};

/* Names of macros.  Index is enum mant. */
d75 1
a75 1
const struct man_node *man_node(const struct man *);
d78 1
a78 1
void man_deroff(char **, const struct man_node *);
@


1.49
log
@Strangely, ignoring the roff(7) .na request was implemented in the man(7)
parser.  Simplify the code by moving it into the roff(7) parser, also
making it work for mdoc(7).
@
text
@d1 1
a1 1
/*	$OpenBSD: man.h,v 1.48 2014/12/24 18:03:34 schwarze Exp $ */
a60 11
enum	man_type {
	MAN_TEXT,
	MAN_ELEM,
	MAN_ROOT,
	MAN_BLOCK,
	MAN_HEAD,
	MAN_BODY,
	MAN_TBL,
	MAN_EQN
};

d83 1
a83 1
	enum man_type	 type; /* AST node type */
@


1.48
log
@For .RS, we need to save the information how much we actually indented
because negative indents can get truncated, in which case we no longer
know how to restore the original indent at the end of the block.
This also solves another case of effectively infinite output found
by jsg@@ with afl, triggered by very large negative indents.
@
text
@d1 1
a1 1
/*	$OpenBSD: man.h,v 1.47 2014/11/28 19:25:03 schwarze Exp $ */
a40 1
	MAN_na,
@


1.47
log
@Add some missing OpenBSD RCS markers
and a few missing <sys/types.h> inclusions; no code change.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d102 1
@


1.46
log
@Simplify by making many functions in the man(7) parser void,
and some cleanup; no functional change, minus 70 lines.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.45 2014/11/27 14:31:29 deraadt Exp $ */
@


1.45
log
@remove unneccessary inclusion protection; ok schwarze
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.44 2014/06/20 22:58:41 schwarze Exp $ */
a68 1
	MAN_TAIL,
@


1.44
log
@As suggested by jmc@@, only include line and column numbers into messages
when they are meaningful, to avoid confusing stuff like this:
$ mandoc /dev/null
mandoc: /dev/null:0:1: FATAL: not a manual
Instead, just say:
mandoc: /dev/null: FATAL: not a manual

Another example this applies to is documents having a prologue,
but lacking a body.  Do not throw a FATAL error for these; instead,
issue a warning and show the empty document, in the man(7) case with
the same amount of blank lines as groff does.  Also downgrade mdoc(7)
documents having content before the first .Sh from FATAL to WARNING.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.43 2014/03/30 19:47:32 schwarze Exp $ */
a17 2
#ifndef MAN_H
#define MAN_H
a117 2

#endif /*!MAN_H*/
@


1.43
log
@Implement the roff(7) .ll (line length) request.
Found by naddy@@ in the textproc/enchant(1) port.
Of course, do not use this in new manuals.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.42 2014/03/22 00:56:07 schwarze Exp $ */
d82 1
@


1.42
log
@If a man(7) NAME section contains macros, avoid truncated or empty
entries for .Nd in mandocdb(8), instead use the macro content
recursively.  This improves indexing of more than 200 manuals
in Xenocara, i.e. more than 15%, in particular GL and some Xkb.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.41 2013/10/17 20:51:29 schwarze Exp $ */
d60 1
@


1.41
log
@Implement the .UR/.UE block (uniform resource identifier) introduced in the
man-ext macros by Eric S. Raymond, enabled by default in groff_man(7).
Usual disclaimer: You don't write new man(7) code, so you are not going
to use these, either.
Improves e.g. the bzr(1) and etherape(1) manuals.
Thanks to naddy@@ for bringing these to my attention.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.40 2012/06/02 20:07:09 schwarze Exp $ */
d4 1
d115 1
@


1.40
log
@Minimal implementation of .EX and .EE for GNU compatibility.
Do not use this, it is not portable and only defined in esr's man-ext.
For example, sox(1) wants these macros.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.39 2012/02/26 19:41:27 schwarze Exp $ */
d57 2
@


1.39
log
@Support .OP, one of the extended man macros; from kristaps@@.
Do not use this GNU extension, we take it for compatibility only.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.38 2011/10/09 17:59:56 schwarze Exp $ */
d55 2
@


1.38
log
@Sync to version 1.12.0; all code by kristaps@@:
Implement .Rv in -Tman.
Let -man -Tman work a bit like cat(1).
Add the -Ofragment option to -T[x]html.
Minor fixes in -T[x]html.
Lots of apropos(1) and -Tman code cleanup.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.37 2011/04/24 16:22:02 schwarze Exp $ */
d54 1
@


1.37
log
@Merge version 1.11.1:
Again lots of cleanup and maintenance work by kristaps@@.
- simplify error reporting: less function pointers, more mandoc_[v]msg
- main: split document parsing out of main.c into read.c
- roff, mdoc, man: improved recognition of control characters
- roff: better handling of if/else stack overflows
- roff: add some predefined strings for backward compatibility
- mdoc, man: empty sections are not errors
- mdoc: move delimiter handling to libmdoc
- some header restructuring and some minor features and fixes
This merge causes two minor regressions
that i will fix in separate commits right afterwards.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.36 2011/03/20 23:36:42 schwarze Exp $ */
d108 1
@


1.36
log
@Import the foundation for eqn(7) support.
Written by kristaps@@.

For now, i'm adding one line to each of the four frontends
to just pass the input text through to the output,
not yet interpreting any of then eqn keywords.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.35 2011/03/07 01:35:33 schwarze Exp $ */
a19 3
/* 
 * What follows is a list of ALL possible macros. 
 */
a56 3
/* 
 * Type of a syntax node. 
 */
d64 1
a68 3
/* 
 * Information from prologue. 
 */
a76 3
/* 
 * Single node in tree-linked AST. 
 */
d93 1
d99 1
a99 4
/*
 * Names of macros.  Index is enum mant.  Indexing into this returns
 * the normalised name, e.g., man_macronames[MAN_SH] -> "SH".
 */
a104 9

void	 	  man_free(struct man *);
struct	man	 *man_alloc(struct regset *, void *, mandocmsg);
void		  man_reset(struct man *);
int	 	  man_parseln(struct man *, int, char *, int);
int		  man_endparse(struct man *);
int		  man_addspan(struct man *,
			const struct tbl_span *);
int		  man_addeqn(struct man *, const struct eqn *);
@


1.35
log
@Clean up date handling,
as a first step to get rid of the frequent petty warnings in this area:
 - always store dates as strings, not as seconds since the Epoch
 - for input, try the three most common formats everywhere
 - for unrecognized format, just pass the date though verbatim
 - when there is no date at all, still use the current date
Originally triggered by a one-line patch from Tim van der Molen,
<tbvdm at xs4all dot nl>, which is included here.
Feedback and OK on manual parts from jmc@@.
"please check this in" kristaps@@
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.34 2011/01/16 02:56:47 schwarze Exp $ */
d70 2
a71 1
	MAN_TBL
d106 1
d126 1
@


1.34
log
@If the first character of a free-form text input line is whitespace,
then it will start a new output line;
from kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.33 2011/01/04 22:28:17 schwarze Exp $ */
d78 1
a78 2
	time_t		 date; /* `TH' normalised date */
	char		*rawdate; /* raw `TH' date */
@


1.33
log
@Merge kristaps@@' cleaner tbl integration, removing mine;
there are still a few bugs, but fixing these will be easier in tree.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.32 2010/12/27 23:57:13 schwarze Exp $ */
d100 1
@


1.32
log
@Remove two #defines that are unused since the *_action.c removal;
from kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.31 2010/12/19 07:53:12 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2009, 2010 Kristaps Dzonsons <kristaps@@bsd.lv>
a55 2
	MAN_TS,
	MAN_TE,
d69 2
a70 1
	MAN_BODY
a84 4
union man_data {
	struct tbl	*TS;
};

d104 1
a104 1
	union man_data	 data;
d122 2
@


1.31
log
@Remove `i' and `r' macro handlers.  These macros, originally part of the
me package, aren't recognised by "groff -mandoc" so we don't need to do
so either.  Besides, they are not used in base or Xenocara, and only at
two or three places in one single port, which are probably typos.
From kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.30 2010/11/29 02:26:45 schwarze Exp $ */
a103 1
#define	MAN_ACTED	(1 << 1) /* has been acted upon */
@


1.30
log
@Now that we have proper .de support in the roff(7) library,
it is time to remove the .Sp, .Vb, and .Ve kludge
that was added to the man(7) library to build Perl manuals.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.29 2010/11/29 00:12:02 schwarze Exp $ */
a45 1
	MAN_i,
a48 1
	MAN_r,
@


1.29
log
@Implement the roff .ft (change font) request for man(7).
Of course, we don't want to encourage low-level physical markup,
but pod2man(1) writes such requests, so Perl manuals contain them,
and some Xenocara and lots and lots of ports manuals use them as well.
In base and Xenocara, this will reduce mandoc -Tlint ERROR noise;
in ports, it will improve rendering of many manuals.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.28 2010/10/23 15:49:30 schwarze Exp $ */
a55 3
	MAN_Sp,
	MAN_Vb,
	MAN_Ve,
@


1.28
log
@sync comments to bsd.lv; no functional change
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.45 2010/10/04 07:01:02 kristaps Exp $ */
d63 1
@


1.27
log
@Minimal glue to integrate tbl into the mandoc man(7) parser and formatter.
The output dosn't look nice yet, escape handling is still missing,
but will follow soon.
"move forward aggressively :-)" deraadt@@
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.26 2010/08/20 00:53:35 schwarze Exp $ */
d20 3
a22 2
#include <time.h>

d66 3
d78 3
d82 6
a87 6
	char		*msec;
	time_t		 date;
	char		*rawdate;
	char		*vol;
	char		*title;
	char		*source;
d90 7
d98 5
a102 5
	struct man_node	*parent;
	struct man_node	*child;
	struct man_node	*next;
	struct man_node	*prev;
	int		 nchild;
d105 1
a105 1
	enum mant	 tok;
d107 8
a114 10
#define	MAN_VALID	(1 << 0)
#define	MAN_ACTED	(1 << 1)
#define	MAN_EOS		(1 << 2)
	enum man_type	 type;
	char		*string;
	struct man_node	*head;
	struct man_node	*body;
	union {
		struct tbl *TS;
	} data;
d117 4
@


1.26
log
@Implement a simple, consistent user interface for error handling.
We now have sufficient practical experience to know what we want,
so this is intended to be final:
- provide -Wlevel (warning, error or fatal) to select what you care about
- provide -Wstop to stop after parsing a file with warnings you care about
- provide consistent exit status codes for those warnings you care about
- fully document what warnings, errors and fatal errors mean
- remove all other cruft from the user interface, less is more:
- remove all -f knobs along with the whole -f option
- remove the old -Werror because calling warnings "fatal" is silly
- always finish parsing each file, unless fatal errors prevent that
This commit also includes a couple of related simplifications behind
the scenes regarding error handling.
Feedback and OK  kristaps@@;  Joerg Sonnenberger (NetBSD) and
Sascha Wildner (DragonFly BSD) agree with the general direction.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.25 2010/07/25 18:05:54 schwarze Exp $ */
d60 2
d100 3
@


1.25
log
@Sync to bsd.lv; in particular, pull in lots of bug fixes.
new features:
* support the .in macro in man(7)
* support minimal PDF output
* support .Sm in mdoc(7) HTML output
* support .Vb and .nf in man(7) HTML output
* complete the mdoc(7) manual
bug fixes:
* do not let mdoc(7) .Pp produce a newline before/after .Sh; reported by jmc@@
* avoid double blank lines related to man(7) .sp and .br
* let man(7) .nf and .fi flush the line; reported by jsg@@ and naddy@@
* let "\ " produce a non-breaking space; reported by deraadt@@
* discard \m colour escape sequences; reported by J.C. Roberts
* map undefined 1-character-escapes to the literal character itself
maintenance:
* express mdoc(7) arguments in terms of an enum for additional type-safety
* simplify mandoc_special() and a2roffdeco()
* use strcspn in term_word() in place of a manual loop
* minor optimisations in the -Tps and -Thtml formatting frontends
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.24 2010/06/27 21:54:42 schwarze Exp $ */
a99 3
#define	MAN_IGN_MACRO	 (1 << 0)
#define	MAN_IGN_ESCAPE	 (1 << 2)

d107 1
a107 1
struct	man	 *man_alloc(struct regset *, void *, int, mandocmsg);
@


1.24
log
@Full .nr nS support, unbreaking the kernel manuals.

Kristaps coded this from scratch after reading my .nr patch;
it is simpler and more powerful.

Registers live in struct regset in regs.h, struct man and struct mdoc
contain pointers to it.  The nS register is cleared when parsing .Sh.
Frontends respect the MDOC_SYNPRETTY flag set in mdoc node_alloc.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.23 2010/06/06 18:08:41 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2009 Kristaps Dzonsons <kristaps@@bsd.lv>
d59 1
@


1.23
log
@Merge bsd.lv release 1.10.0,
which is mostly the post-hackathon release,
bringing in the OpenBSD changes to bsd.lv,
but which also has a few additional minor fixes:

* .Lb is an in-line macro, not in_line_eoln
* .Bt, .Ud now warn when discarding arguments
* allow bad -man dates to flow verbatim into the front-ends
- so far all reported by Ulrich Spoerlein
* .Ar, .Fl and .Li starting with closing punctuation emit an empty element
* empty .Li macros print nothing, but may cause spacing
* proper EOS handling for .Bt, .Ex, .Rv, and .Ud.
* cleanup: collapse posts_xr into posts_wtext (which is the same)
* efficiency: very simple table lookup for roff.c
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.22 2010/05/23 22:45:00 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2009 Kristaps Dzonsons <kristaps@@kth.se>
d109 1
a109 1
struct	man	 *man_alloc(void *, int, mandocmsg);
@


1.22
log
@Unified error and warning message system for all of mandoc,
featuring three message levels, as agreed during the mandoc hackathon:
* FATAL parser failure, cannot produce any output from this input file:
  eventually, we hope to convert most of these to ERRORs.
* ERROR, meaning mandoc cannot cope fully with the input syntax and will
  probably lose information or produce structurally garbled output;
  it will try to produce output anyway but exit non-zero at the end,
  which is eventually intended to make the ports infrastructure happy.
* WARNING, meaning you should clean up the input file, but output
  is probably mostly OK, so this will not cause error-exit at the end.
This commit is mostly just converting the old system to the new one; before
the classification will become really reliable, we must check all messages.

In particular,
* set up a new central message string table in main.c
* drop the old message string tables from man.c and mdoc.c
* get rid of the piece-meal merr enums in libman and libmdoc
* reduce number of error/warning functions from 16 to 6 (still a lot...)

While here, handle a few problems more gracefully:
* allow .Rv and .Ex to work without a prior .Nm
* allow .An to ignore extra arguments
* allow undeclared columns in .Bl -column

Written by kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.21 2010/05/23 20:57:16 schwarze Exp $ */
d74 1
@


1.21
log
@implement .AT and .UC; from Joerg Sonnenberger
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.20 2010/05/20 00:58:02 schwarze Exp $ */
a102 5
struct	man_cb {
	int	(*man_warn)(void *, int, int, const char *);
	int	(*man_err)(void *, int, int, const char *);
};

d108 1
a108 1
struct	man	 *man_alloc(void *, int, const struct man_cb *);
@


1.20
log
@Support nested roff instructions:
* allow roff_parseln() to be re-run
* allow roff_parseln() to manipulate the line buffer offset
* support the offset in the man and mdoc libraries
* adapt .if, .ie, .el, .ig, .am* and .de* support
* interpret some instructions even in conditional-negative context
Coded by kristaps during the last day of the mandoc hackathon.

To avoid regressions in the OpenBSD tree, commit this together
with some small local additions:
* detect roff block end "\}" even on macro lines
* actually implement the ".if n" conditional
* ignore .ds, .rm and .tr in libroff

Also back my old .if/.ie/.el-handling out of libman, reverting:
man.h 1.15 man.c 1.25 man_macro.c 1.15 man_validate.c 1.19
man_action.c 1.15 man_term.c 1.28 man_html.c 1.9.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.19 2010/05/16 00:54:03 schwarze Exp $ */
d58 2
a59 1
	MAN_MAX,
@


1.19
log
@In theory, Kristaps never intended to write a roff parser,
but in practice, most real legacy man(7)uals are using so much
low level roff that we can't really get away without at least
partially handling some roff instructions.

As doing this in man(7) only has become messy and as even some
mdoc(7) pages need it, start a minimal partial roff preprocessor.
As a first step, move handling of .am[i], .de[i] and .ig there.
Do not use the roff preprocessor for new manuals!

Now that we have three main parser libraries - roff, man and mdoc -
each one having its own error handling is becoming messy, too.
Thus, start unifying message handling in one central place,
introducing a new generic function mmsg().

coded by kristaps@@
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.18 2010/05/15 18:06:02 schwarze Exp $ */
a57 3
	MAN_if,
	MAN_ie,
	MAN_el,
a90 1
#define	MAN_USE 	(1 << 3)
d114 1
a114 1
int	 	  man_parseln(struct man *, int, char *buf);
@


1.18
log
@removed restriction on integer manual sections in -man;
by kristaps@@
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.17 2010/05/14 19:52:43 schwarze Exp $ */
a57 6
	MAN_de,
	MAN_dei,
	MAN_am,
	MAN_ami,
	MAN_ig,
	MAN_dot,
@


1.17
log
@Integrate kristaps@@' end-of-sentence (EOS) framework
which is simpler and more powerful than mine, and remove mine.

* man(7) now has EOS handling, too
* put EOS detection into its own function in libmandoc
* use node and termp flags to communicate the EOS condition
* no more EOS pseudo-macro
* no more non-printable EOS marker character on the formatter level

This slightly breaks EOS detection after trailing punctuation
in mdoc(7) macros, but that will be restored soon.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.16 2010/05/13 20:34:29 schwarze Exp $ */
d80 1
a80 1
	int		 msec;
@


1.16
log
@Remove the command line option -fno-ign-chars.
This option was not useful, you never want mandoc to die
just because there is an invalid character in the input file,
neither in production nor when linting: a warning is sufficient.
This was particularly annoying because it was part of -fstrict
and could not be switched off.
"less is more" kristaps@@
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.15 2010/04/25 16:32:19 schwarze Exp $ */
d99 2
a100 1
#define	MAN_USE 	(1 << 2)
@


1.15
log
@Implement roff conditional instructions .if .ie .el, in man(7) only for now;
fixing OpenBSD::PackageName(3p) and friends for espie@@.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.14 2010/03/26 01:22:05 schwarze Exp $ */
a106 1
#define	MAN_IGN_CHARS	 (1 << 1)
@


1.14
log
@merge 1.9.17, keeping local patches

* much improved pod2man support and low-level roff robustness
* have -Tlint imply -Wall and -fstrict
* use fewer macros and more enum in libman
* and various bug fixes
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.13 2010/03/02 01:00:39 schwarze Exp $ */
d64 3
d99 1
@


1.13
log
@Accept the non-standard macros .Sp (similar to .sp)
and .Vb/.Ve (similar to .nf/.fi) in man(7) mode.
These are not intended to be used manually, but they allow us to
properly render man(7) code autogenerated by pod2man(1),
making Perl and OpenSSL happy in our tree.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.12 2009/12/22 23:58:00 schwarze Exp $ */
d22 44
a65 36
#define	MAN_br	 	 0
#define	MAN_TH		 1
#define	MAN_SH		 2
#define	MAN_SS		 3
#define	MAN_TP		 4
#define	MAN_LP		 5
#define	MAN_PP		 6
#define	MAN_P		 7
#define	MAN_IP		 8
#define	MAN_HP		 9
#define	MAN_SM		 10
#define	MAN_SB		 11
#define	MAN_BI		 12
#define	MAN_IB		 13
#define	MAN_BR		 14
#define	MAN_RB		 15
#define	MAN_R		 16
#define	MAN_B		 17
#define	MAN_I		 18
#define	MAN_IR		 19
#define	MAN_RI		 20
#define	MAN_na		 21
#define	MAN_i		 22
#define	MAN_sp		 23
#define	MAN_nf		 24
#define	MAN_fi		 25
#define	MAN_r		 26
#define	MAN_RE		 27
#define	MAN_RS		 28
#define	MAN_DT		 29
#define	MAN_UC		 30
#define	MAN_PD		 31
#define	MAN_Sp		 32
#define	MAN_Vb		 33
#define	MAN_Ve		 34
#define	MAN_MAX	 	 35
d92 1
a92 1
	int		 tok;
@


1.12
log
@sync to 1.9.12, mostly portability and refactoring:

correctness/functionality:
- bugfix: do not die when overstep hits the right margin
- new option: -fign-escape
- and various HTML features

portability:
- replace bzero(3) by memset(3), which is ANSI C
- replace err(3)/warn(3) by perror(3)/exit(3), which is ANSI C
- iuse argv[0] instead of __progname
- add time.h to various files for FreeBSD compilation

simplicity:
- do not allocate header/footer data dynamically in *_term.c
- provide and use malloc frontends that error out on failure

for full changelogs, see http://bsd.lv/cgi-bin/cvsweb.cgi/
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.11 2009/10/27 21:40:07 schwarze Exp $ */
d54 4
a57 1
#define	MAN_MAX	 	 32
@


1.11
log
@sync to 1.9.11: adapt printing of dates to groff conventions,
NetBSD portability fixes and some minor bugfixes and feature enhancements;
also checked that my hyphenation code still works on top of this
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.10 2009/10/19 21:08:58 schwarze Exp $ */
d108 1
a108 1
int		  man_reset(struct man *);
@


1.10
log
@sync to 1.9.7: the same function was declared in two different headers;
spotted by Ulrich Spoerlein, uqs at spoerlein dot net
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.9 2009/09/18 22:46:14 schwarze Exp $ */
d53 2
a54 1
#define	MAN_MAX	 	 31
@


1.9
log
@sync to 1.9.2: Add .UC libman macro for compatibility, has no effect.
Correct .UC and .DT to not print their arguments.
Document that .UC and .DT should not be used.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.8 2009/08/22 23:17:40 schwarze Exp $ */
a109 1
int		  man_valid_post(struct man *);
@


1.8
log
@another large chunk of -man updates,
among others regarding .DT, .HP, .RS, .RE, .SH, .SS, and scoping,
now in sync vith release 1.9.1
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.7 2009/08/22 20:14:37 schwarze Exp $ */
d52 2
a53 1
#define	MAN_MAX	 	 30
@


1.7
log
@Kristaps@@ significantly overhauled libman.
I'm committing this in one large chunk because in contrast to -mdoc, -man
is mostly untested in OpenBSD anyway, so any fallout can be fixed in-tree.
Among others, improved support for .IP, .HP, and .TP.
Now in sync with release 1.9.0.
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.6 2009/08/22 15:15:37 schwarze Exp $ */
d49 4
a52 1
#define	MAN_MAX	 	 27
@


1.6
log
@sync to 1.8.4: support .sp in -man
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.5 2009/07/07 00:54:46 schwarze Exp $ */
d46 4
a49 1
#define	MAN_MAX	 	 24
d54 4
a57 1
	MAN_ROOT
d82 2
@


1.5
log
@sync to 1.7.21: provide WESCAPE and MAN_IGN_ESCAPE,
to be used soon in man_validate.c
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.4 2009/06/23 22:31:26 schwarze Exp $ */
d45 2
a46 1
#define	MAN_MAX	 	 23
@


1.4
log
@sync to 1.7.20: root and text validation for -man
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.3 2009/06/18 23:34:53 schwarze Exp $ */
d79 1
@


1.3
log
@sync to 1.7.19: improved comment handling
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.2 2009/06/14 23:00:57 schwarze Exp $ */
d66 1
d77 2
a78 1
#define	MAN_IGN_MACRO	 (1 << 0) /* Ignore unknown macros. */
@


1.2
log
@sync to 1.7.16: comments, whitespace and spelling fixes; no functional change
@
text
@d1 1
a1 1
/*	$Id: man.h,v 1.12 2009/06/10 20:18:43 kristaps Exp $ */
d22 1
a22 1
#define	MAN___	 	 0
d43 3
a45 4
#define	MAN_br		 21
#define	MAN_na		 22
#define	MAN_i		 23
#define	MAN_MAX	 	 24
@


1.1
log
@Initial check-in of mandoc for formatting manuals. ok deraadt@@
@
text
@d1 1
a1 1
/* $Id: man.h,v 1.10 2009/04/05 16:34:22 kristaps Exp $ */
d3 1
a3 1
 * Copyright (c) 2009 Kristaps Dzonsons <kristaps@@openbsd.org>
d6 2
a7 3
 * purpose with or without fee is hereby granted, provided that the
 * above copyright notice and this permission notice appear in all
 * copies.
d9 7
a15 8
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
 * AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
@

