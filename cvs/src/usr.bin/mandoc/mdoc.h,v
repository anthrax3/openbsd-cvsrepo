head	1.70;
access;
symbols
	OPENBSD_6_2_BASE:1.70
	OPENBSD_6_1:1.69.0.8
	OPENBSD_6_1_BASE:1.69
	OPENBSD_6_0:1.69.0.4
	OPENBSD_6_0_BASE:1.69
	OPENBSD_5_9:1.69.0.2
	OPENBSD_5_9_BASE:1.69
	OPENBSD_5_8:1.67.0.4
	OPENBSD_5_8_BASE:1.67
	OPENBSD_5_7:1.61.0.2
	OPENBSD_5_7_BASE:1.61
	OPENBSD_5_6:1.54.0.4
	OPENBSD_5_6_BASE:1.54
	OPENBSD_5_5:1.49.0.4
	OPENBSD_5_5_BASE:1.49
	OPENBSD_5_4:1.48.0.4
	OPENBSD_5_4_BASE:1.48
	OPENBSD_5_3:1.48.0.2
	OPENBSD_5_3_BASE:1.48
	OPENBSD_5_2:1.47.0.2
	OPENBSD_5_2_BASE:1.47
	OPENBSD_5_1_BASE:1.46
	OPENBSD_5_1:1.46.0.4
	OPENBSD_5_0:1.46.0.2
	OPENBSD_5_0_BASE:1.46
	OPENBSD_4_9:1.43.0.2
	OPENBSD_4_9_BASE:1.43
	OPENBSD_4_8:1.32.0.2
	OPENBSD_4_8_BASE:1.32
	OPENBSD_4_7:1.18.0.2
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.7.0.4
	OPENBSD_4_6_BASE:1.7;
locks; strict;
comment	@ * @;


1.70
date	2017.04.24.23.06.09;	author schwarze;	state Exp;
branches;
next	1.69;
commitid	2CfzvK3gmiJH7vY0;

1.69
date	2015.11.07.13.57.55;	author schwarze;	state Exp;
branches;
next	1.68;
commitid	UKwSq7JMt0q6KNpK;

1.68
date	2015.10.20.02.00.49;	author schwarze;	state Exp;
branches;
next	1.67;
commitid	v6RrmxwM663z4mTF;

1.67
date	2015.04.23.16.17.04;	author schwarze;	state Exp;
branches;
next	1.66;
commitid	DWHgiJTn6DvDpekX;

1.66
date	2015.04.18.17.50.02;	author schwarze;	state Exp;
branches;
next	1.65;
commitid	sjmmdLSx1e3Vat0h;

1.65
date	2015.04.18.16.04.40;	author schwarze;	state Exp;
branches;
next	1.64;
commitid	6MYJ7cd8mhJ77AGH;

1.64
date	2015.04.02.23.47.43;	author schwarze;	state Exp;
branches;
next	1.63;
commitid	RJFkOLiS9gBqEEDl;

1.63
date	2015.04.02.22.06.17;	author schwarze;	state Exp;
branches;
next	1.62;
commitid	Rfx1oTaH3hZ7Zcyf;

1.62
date	2015.04.02.21.03.18;	author schwarze;	state Exp;
branches;
next	1.61;
commitid	lmErjWY2O9ooA6RY;

1.61
date	2015.02.12.12.20.47;	author schwarze;	state Exp;
branches;
next	1.60;
commitid	SViaEKzwzmf0o0kW;

1.60
date	2015.02.05.00.13.34;	author schwarze;	state Exp;
branches;
next	1.59;
commitid	yNql0K85SrSgftGW;

1.59
date	2015.01.31.00.11.51;	author schwarze;	state Exp;
branches;
next	1.58;
commitid	qr0IBCEkFSkiYkBc;

1.58
date	2014.12.18.03.09.42;	author schwarze;	state Exp;
branches;
next	1.57;
commitid	gf4J2ZJoC3QosoVG;

1.57
date	2014.11.28.19.25.03;	author schwarze;	state Exp;
branches;
next	1.56;
commitid	1m1y3OocNVYDnyZE;

1.56
date	2014.11.27.14.31.29;	author deraadt;	state Exp;
branches;
next	1.55;
commitid	je75OeVgCvwQD2St;

1.55
date	2014.08.08.15.03.24;	author schwarze;	state Exp;
branches;
next	1.54;
commitid	IC4m7PBMv8EruQl8;

1.54
date	2014.07.02.03.47.07;	author schwarze;	state Exp;
branches;
next	1.53;
commitid	p4pNII1v0bYCswy0;

1.53
date	2014.04.20.16.44.44;	author schwarze;	state Exp;
branches;
next	1.52;

1.52
date	2014.03.31.00.02.45;	author dlg;	state Exp;
branches;
next	1.51;

1.51
date	2014.03.30.19.47.32;	author schwarze;	state Exp;
branches;
next	1.50;

1.50
date	2014.03.23.12.44.18;	author schwarze;	state Exp;
branches;
next	1.49;

1.49
date	2013.12.24.19.10.34;	author schwarze;	state Exp;
branches;
next	1.48;

1.48
date	2012.11.16.17.16.29;	author schwarze;	state Exp;
branches;
next	1.47;

1.47
date	2012.07.10.14.35.57;	author schwarze;	state Exp;
branches;
next	1.46;

1.46
date	2011.04.24.16.22.02;	author schwarze;	state Exp;
branches;
next	1.45;

1.45
date	2011.03.20.23.36.42;	author schwarze;	state Exp;
branches;
next	1.44;

1.44
date	2011.03.07.01.35.33;	author schwarze;	state Exp;
branches;
next	1.43;

1.43
date	2011.01.30.17.41.59;	author schwarze;	state Exp;
branches;
next	1.42;

1.42
date	2011.01.04.22.28.17;	author schwarze;	state Exp;
branches;
next	1.41;

1.41
date	2010.12.29.00.47.30;	author schwarze;	state Exp;
branches;
next	1.40;

1.40
date	2010.12.27.23.57.13;	author schwarze;	state Exp;
branches;
next	1.39;

1.39
date	2010.12.26.21.04.19;	author schwarze;	state Exp;
branches;
next	1.38;

1.38
date	2010.12.21.23.57.31;	author schwarze;	state Exp;
branches;
next	1.37;

1.37
date	2010.12.21.23.46.18;	author schwarze;	state Exp;
branches;
next	1.36;

1.36
date	2010.12.19.09.22.35;	author schwarze;	state Exp;
branches;
next	1.35;

1.35
date	2010.10.23.15.49.30;	author schwarze;	state Exp;
branches;
next	1.34;

1.34
date	2010.10.16.13.38.29;	author schwarze;	state Exp;
branches;
next	1.33;

1.33
date	2010.08.20.00.53.35;	author schwarze;	state Exp;
branches;
next	1.32;

1.32
date	2010.07.25.18.05.54;	author schwarze;	state Exp;
branches;
next	1.31;

1.31
date	2010.07.13.01.09.13;	author schwarze;	state Exp;
branches;
next	1.30;

1.30
date	2010.06.29.17.10.29;	author schwarze;	state Exp;
branches;
next	1.29;

1.29
date	2010.06.27.21.54.42;	author schwarze;	state Exp;
branches;
next	1.28;

1.28
date	2010.06.26.17.56.43;	author schwarze;	state Exp;
branches;
next	1.27;

1.27
date	2010.06.06.20.30.08;	author schwarze;	state Exp;
branches;
next	1.26;

1.26
date	2010.05.24.00.00.10;	author schwarze;	state Exp;
branches;
next	1.25;

1.25
date	2010.05.23.22.45.00;	author schwarze;	state Exp;
branches;
next	1.24;

1.24
date	2010.05.20.00.58.02;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2010.05.15.18.25.51;	author schwarze;	state Exp;
branches;
next	1.22;

1.22
date	2010.05.14.19.52.43;	author schwarze;	state Exp;
branches;
next	1.21;

1.21
date	2010.05.14.14.47.44;	author schwarze;	state Exp;
branches;
next	1.20;

1.20
date	2010.05.13.20.34.29;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2010.04.02.12.39.47;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2010.03.02.00.38.59;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2010.02.26.12.12.24;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2009.12.22.23.58.00;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2009.10.27.21.40.07;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2009.10.21.19.13.50;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2009.08.22.22.11.24;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2009.08.09.22.05.01;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2009.07.26.01.59.46;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2009.07.18.19.44.38;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2009.07.12.22.35.08;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2009.07.12.18.28.29;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2009.06.23.23.02.54;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2009.06.21.20.17.32;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.19.07.20.19;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.18.23.34.53;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.18.22.16.56;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.14.23.00.57;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2009.04.06.20.30.40;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.70
log
@Continue parser unification:
* Make enum rofft an internal interface as enum roff_tok in "roff.h".
* Represent mdoc and man macros in enum roff_tok.
* Make TOKEN_NONE a proper enum value and use it throughout.
* Put the prologue macros first in the macro tables.
* Unify mdoc_macroname[] and man_macroname[] into roff_name[].
@
text
@/*	$OpenBSD: mdoc.h,v 1.69 2015/11/07 13:57:55 schwarze Exp $ */
/*
 * Copyright (c) 2008, 2009, 2010, 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
 * Copyright (c) 2014, 2015 Ingo Schwarze <schwarze@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHORS DISCLAIM ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

enum	mdocargt {
	MDOC_Split, /* -split */
	MDOC_Nosplit, /* -nospli */
	MDOC_Ragged, /* -ragged */
	MDOC_Unfilled, /* -unfilled */
	MDOC_Literal, /* -literal */
	MDOC_File, /* -file */
	MDOC_Offset, /* -offset */
	MDOC_Bullet, /* -bullet */
	MDOC_Dash, /* -dash */
	MDOC_Hyphen, /* -hyphen */
	MDOC_Item, /* -item */
	MDOC_Enum, /* -enum */
	MDOC_Tag, /* -tag */
	MDOC_Diag, /* -diag */
	MDOC_Hang, /* -hang */
	MDOC_Ohang, /* -ohang */
	MDOC_Inset, /* -inset */
	MDOC_Column, /* -column */
	MDOC_Width, /* -width */
	MDOC_Compact, /* -compact */
	MDOC_Std, /* -std */
	MDOC_Filled, /* -filled */
	MDOC_Words, /* -words */
	MDOC_Emphasis, /* -emphasis */
	MDOC_Symbolic, /* -symbolic */
	MDOC_Nested, /* -nested */
	MDOC_Centred, /* -centered */
	MDOC_ARG_MAX
};

/*
 * An argument to a macro (multiple values = `-column xxx yyy').
 */
struct	mdoc_argv {
	enum mdocargt	  arg; /* type of argument */
	int		  line;
	int		  pos;
	size_t		  sz; /* elements in "value" */
	char		**value; /* argument strings */
};

/*
 * Reference-counted macro arguments.  These are refcounted because
 * blocks have multiple instances of the same arguments spread across
 * the HEAD, BODY, TAIL, and BLOCK node types.
 */
struct	mdoc_arg {
	size_t		  argc;
	struct mdoc_argv *argv;
	unsigned int	  refcnt;
};

enum	mdoc_list {
	LIST__NONE = 0,
	LIST_bullet, /* -bullet */
	LIST_column, /* -column */
	LIST_dash, /* -dash */
	LIST_diag, /* -diag */
	LIST_enum, /* -enum */
	LIST_hang, /* -hang */
	LIST_hyphen, /* -hyphen */
	LIST_inset, /* -inset */
	LIST_item, /* -item */
	LIST_ohang, /* -ohang */
	LIST_tag, /* -tag */
	LIST_MAX
};

enum	mdoc_disp {
	DISP__NONE = 0,
	DISP_centered, /* -centered */
	DISP_ragged, /* -ragged */
	DISP_unfilled, /* -unfilled */
	DISP_filled, /* -filled */
	DISP_literal /* -literal */
};

enum	mdoc_auth {
	AUTH__NONE = 0,
	AUTH_split, /* -split */
	AUTH_nosplit /* -nosplit */
};

enum	mdoc_font {
	FONT__NONE = 0,
	FONT_Em, /* Em, -emphasis */
	FONT_Li, /* Li, -literal */
	FONT_Sy /* Sy, -symbolic */
};

struct	mdoc_bd {
	const char	 *offs; /* -offset */
	enum mdoc_disp	  type; /* -ragged, etc. */
	int		  comp; /* -compact */
};

struct	mdoc_bl {
	const char	 *width; /* -width */
	const char	 *offs; /* -offset */
	enum mdoc_list	  type; /* -tag, -enum, etc. */
	int		  comp; /* -compact */
	size_t		  ncols; /* -column arg count */
	const char	**cols; /* -column val ptr */
	int		  count; /* -enum counter */
};

struct	mdoc_bf {
	enum mdoc_font	  font; /* font */
};

struct	mdoc_an {
	enum mdoc_auth	  auth; /* -split, etc. */
};

struct	mdoc_rs {
	int		  quote_T; /* whether to quote %T */
};

/*
 * Consists of normalised node arguments.  These should be used instead
 * of iterating through the mdoc_arg pointers of a node: defaults are
 * provided, etc.
 */
union	mdoc_data {
	struct mdoc_an	  An;
	struct mdoc_bd	  Bd;
	struct mdoc_bf	  Bf;
	struct mdoc_bl	  Bl;
	struct roff_node *Es;
	struct mdoc_rs	  Rs;
};

/* Names of macro args.  Index is enum mdocargt. */
extern	const char *const *mdoc_argnames;

void		 mdoc_validate(struct roff_man *);
@


1.69
log
@In private header files, __BEGIN_DECLS and __END_DECLS are pointless.
Because these work slightly differently on different systems,
they are becoming a maintenance burden in the portable version,
so delete them.

Besides, one of the chief design goals of the mandoc toolbox is to
make sure that nothing related to documentation requires C++.
Consequently, linking mandoc against any kind of C++ program would
defeat the purpose and is not supported.
I don't understand why kristaps@@ added them in the first place.
@
text
@d1 1
a1 1
/*	$OpenBSD: mdoc.h,v 1.68 2015/10/20 02:00:49 schwarze Exp $ */
a18 125
#define	MDOC_Ap    0
#define	MDOC_Dd    1
#define	MDOC_Dt    2
#define	MDOC_Os    3
#define	MDOC_Sh    4
#define	MDOC_Ss    5
#define	MDOC_Pp    6
#define	MDOC_D1    7
#define	MDOC_Dl    8
#define	MDOC_Bd    9
#define	MDOC_Ed   10
#define	MDOC_Bl   11
#define	MDOC_El   12
#define	MDOC_It   13
#define	MDOC_Ad   14
#define	MDOC_An   15
#define	MDOC_Ar   16
#define	MDOC_Cd   17
#define	MDOC_Cm   18
#define	MDOC_Dv   19
#define	MDOC_Er   20
#define	MDOC_Ev   21
#define	MDOC_Ex   22
#define	MDOC_Fa   23
#define	MDOC_Fd   24
#define	MDOC_Fl   25
#define	MDOC_Fn   26
#define	MDOC_Ft   27
#define	MDOC_Ic   28
#define	MDOC_In   29
#define	MDOC_Li   30
#define	MDOC_Nd   31
#define	MDOC_Nm   32
#define	MDOC_Op   33
#define	MDOC_Ot   34
#define	MDOC_Pa   35
#define	MDOC_Rv   36
#define	MDOC_St   37
#define	MDOC_Va   38
#define	MDOC_Vt   39
#define	MDOC_Xr   40
#define	MDOC__A   41
#define	MDOC__B   42
#define	MDOC__D   43
#define	MDOC__I   44
#define	MDOC__J   45
#define	MDOC__N   46
#define	MDOC__O   47
#define	MDOC__P   48
#define	MDOC__R   49
#define	MDOC__T   50
#define	MDOC__V   51
#define	MDOC_Ac   52
#define	MDOC_Ao   53
#define	MDOC_Aq   54
#define	MDOC_At   55
#define	MDOC_Bc   56
#define	MDOC_Bf   57
#define	MDOC_Bo   58
#define	MDOC_Bq   59
#define	MDOC_Bsx  60
#define	MDOC_Bx   61
#define	MDOC_Db   62
#define	MDOC_Dc   63
#define	MDOC_Do   64
#define	MDOC_Dq   65
#define	MDOC_Ec   66
#define	MDOC_Ef   67
#define	MDOC_Em   68
#define	MDOC_Eo   69
#define	MDOC_Fx   70
#define	MDOC_Ms   71
#define	MDOC_No   72
#define	MDOC_Ns   73
#define	MDOC_Nx   74
#define	MDOC_Ox   75
#define	MDOC_Pc   76
#define	MDOC_Pf   77
#define	MDOC_Po   78
#define	MDOC_Pq   79
#define	MDOC_Qc   80
#define	MDOC_Ql   81
#define	MDOC_Qo   82
#define	MDOC_Qq   83
#define	MDOC_Re   84
#define	MDOC_Rs   85
#define	MDOC_Sc   86
#define	MDOC_So   87
#define	MDOC_Sq   88
#define	MDOC_Sm   89
#define	MDOC_Sx   90
#define	MDOC_Sy   91
#define	MDOC_Tn   92
#define	MDOC_Ux   93
#define	MDOC_Xc   94
#define	MDOC_Xo   95
#define	MDOC_Fo   96
#define	MDOC_Fc   97
#define	MDOC_Oo   98
#define	MDOC_Oc   99
#define	MDOC_Bk  100
#define	MDOC_Ek  101
#define	MDOC_Bt  102
#define	MDOC_Hf  103
#define	MDOC_Fr  104
#define	MDOC_Ud  105
#define	MDOC_Lb  106
#define	MDOC_Lp  107
#define	MDOC_Lk  108
#define	MDOC_Mt  109
#define	MDOC_Brq 110
#define	MDOC_Bro 111
#define	MDOC_Brc 112
#define	MDOC__C  113
#define	MDOC_Es  114
#define	MDOC_En  115
#define	MDOC_Dx  116
#define	MDOC__Q  117
#define	MDOC_br  118
#define	MDOC_sp  119
#define	MDOC__U  120
#define	MDOC_Ta  121
#define	MDOC_ll  122
#define	MDOC_MAX 123

a151 3
/* Names of macros. */
extern	const char *const *mdoc_macronames;

a153 1

@


1.68
log
@In order to become able to generate syntax tree nodes on the roff(7)
level, validation must be separated from parsing and rewinding.
This first big step moves calling of the mdoc(7) post_*() functions
out of the parser loop into their own mdoc_validate() pass, while
using a new mdoc_state() module to make syntax tree state handling
available to both the parser loop and the validation pass.
@
text
@d1 1
a1 1
/*	$OpenBSD: mdoc.h,v 1.67 2015/04/23 16:17:04 schwarze Exp $ */
a282 1
__BEGIN_DECLS
a284 2

__END_DECLS
@


1.67
log
@Unify mdoc_deroff() and man_deroff() into a common function deroff().
No functional change except that for mdoc(7), it now skips leading
escape sequences just like it already did for man(7).
Escape sequences rarely occur in mdoc(7) code and if they do,
skipping them is an improvement in this context.
Minus 30 lines of code.
@
text
@d1 1
a1 1
/*	$OpenBSD: mdoc.h,v 1.66 2015/04/18 17:50:02 schwarze Exp $ */
d282 6
@


1.66
log
@Delete the wrapper functions mdoc_meta(), man_meta(), mdoc_node(),
man_node() from the mandoc(3) semi-public interface and the internal
wrapper functions print_mdoc() and print_man() from the HTML formatters.
Minus 60 lines of code, no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: mdoc.h,v 1.65 2015/04/18 16:04:40 schwarze Exp $ */
a281 8

__BEGIN_DECLS

struct	roff_man;

void mdoc_deroff(char **, const struct roff_node *);

__END_DECLS
@


1.65
log
@Replace the structs mdoc and man by a unified struct roff_man.
Almost completely mechanical, no functional change.
Written on the train from Exeter to London returning from p2k15.
@
text
@d1 1
a1 1
/*	$OpenBSD: mdoc.h,v 1.64 2015/04/02 23:47:43 schwarze Exp $ */
a286 2
const struct roff_node *mdoc_node(const struct roff_man *);
const struct roff_meta *mdoc_meta(const struct roff_man *);
@


1.64
log
@Third step towards parser unification:
Replace struct mdoc_meta and struct man_meta by a unified struct roff_meta.
Written of the train from London to Exeter on the way to p2k15.
@
text
@d1 1
a1 1
/*	$OpenBSD: mdoc.h,v 1.63 2015/04/02 22:06:17 schwarze Exp $ */
d285 1
a285 1
struct	mdoc;
d287 2
a288 2
const struct roff_node *mdoc_node(const struct mdoc *);
const struct roff_meta *mdoc_meta(const struct mdoc *);
@


1.63
log
@Second step towards parser unification:
Replace struct mdoc_node and struct man_node by a unified struct roff_node.
To be able to use the tok member for both mdoc(7) and man(7) without
defining all the macros in roff.h, sacrifice a tiny bit of type safety
and make tok an int rather than an enum.
Almost mechanical, no functional change.
Written on the Eurostar from Bruxelles to London on the way to p2k15.
@
text
@d1 1
a1 1
/*	$OpenBSD: mdoc.h,v 1.62 2015/04/02 21:03:18 schwarze Exp $ */
a174 10
struct	mdoc_meta {
	char		 *msec; /* `Dt' section (1, 3p, etc.) */
	char		 *vol; /* `Dt' volume (implied) */
	char		 *arch; /* `Dt' arch (i386, etc.) */
	char		 *date; /* `Dd' normalised date */
	char		 *title; /* `Dt' title (FOO, etc.) */
	char		 *os; /* `Os' system (OpenBSD, etc.) */
	char		 *name; /* leading `Nm' name */
};

d288 1
a288 1
const struct mdoc_meta *mdoc_meta(const struct mdoc *);
@


1.62
log
@First step towards parser unification:
Replace enum mdoc_type and enum man_type by a unified enum roff_type.
Almost mechanical, no functional change.
Written on the ICE train from Frankfurt to Bruxelles on the way to p2k15.
@
text
@d1 1
a1 1
/*	$OpenBSD: mdoc.h,v 1.61 2015/02/12 12:20:47 schwarze Exp $ */
d19 124
a142 126
enum	mdoct {
	MDOC_Ap = 0,
	MDOC_Dd,
	MDOC_Dt,
	MDOC_Os,
	MDOC_Sh,
	MDOC_Ss,
	MDOC_Pp,
	MDOC_D1,
	MDOC_Dl,
	MDOC_Bd,
	MDOC_Ed,
	MDOC_Bl,
	MDOC_El,
	MDOC_It,
	MDOC_Ad,
	MDOC_An,
	MDOC_Ar,
	MDOC_Cd,
	MDOC_Cm,
	MDOC_Dv,
	MDOC_Er,
	MDOC_Ev,
	MDOC_Ex,
	MDOC_Fa,
	MDOC_Fd,
	MDOC_Fl,
	MDOC_Fn,
	MDOC_Ft,
	MDOC_Ic,
	MDOC_In,
	MDOC_Li,
	MDOC_Nd,
	MDOC_Nm,
	MDOC_Op,
	MDOC_Ot,
	MDOC_Pa,
	MDOC_Rv,
	MDOC_St,
	MDOC_Va,
	MDOC_Vt,
	MDOC_Xr,
	MDOC__A,
	MDOC__B,
	MDOC__D,
	MDOC__I,
	MDOC__J,
	MDOC__N,
	MDOC__O,
	MDOC__P,
	MDOC__R,
	MDOC__T,
	MDOC__V,
	MDOC_Ac,
	MDOC_Ao,
	MDOC_Aq,
	MDOC_At,
	MDOC_Bc,
	MDOC_Bf,
	MDOC_Bo,
	MDOC_Bq,
	MDOC_Bsx,
	MDOC_Bx,
	MDOC_Db,
	MDOC_Dc,
	MDOC_Do,
	MDOC_Dq,
	MDOC_Ec,
	MDOC_Ef,
	MDOC_Em,
	MDOC_Eo,
	MDOC_Fx,
	MDOC_Ms,
	MDOC_No,
	MDOC_Ns,
	MDOC_Nx,
	MDOC_Ox,
	MDOC_Pc,
	MDOC_Pf,
	MDOC_Po,
	MDOC_Pq,
	MDOC_Qc,
	MDOC_Ql,
	MDOC_Qo,
	MDOC_Qq,
	MDOC_Re,
	MDOC_Rs,
	MDOC_Sc,
	MDOC_So,
	MDOC_Sq,
	MDOC_Sm,
	MDOC_Sx,
	MDOC_Sy,
	MDOC_Tn,
	MDOC_Ux,
	MDOC_Xc,
	MDOC_Xo,
	MDOC_Fo,
	MDOC_Fc,
	MDOC_Oo,
	MDOC_Oc,
	MDOC_Bk,
	MDOC_Ek,
	MDOC_Bt,
	MDOC_Hf,
	MDOC_Fr,
	MDOC_Ud,
	MDOC_Lb,
	MDOC_Lp,
	MDOC_Lk,
	MDOC_Mt,
	MDOC_Brq,
	MDOC_Bro,
	MDOC_Brc,
	MDOC__C,
	MDOC_Es,
	MDOC_En,
	MDOC_Dx,
	MDOC__Q,
	MDOC_br,
	MDOC_sp,
	MDOC__U,
	MDOC_Ta,
	MDOC_ll,
	MDOC_MAX
};
a174 33
/*
 * Section (named/unnamed) of `Sh'.   Note that these appear in the
 * conventional order imposed by mdoc.7.  In the case of SEC_NONE, no
 * section has been invoked (this shouldn't happen).  SEC_CUSTOM refers
 * to other sections.
 */
enum	mdoc_sec {
	SEC_NONE = 0,
	SEC_NAME, /* NAME */
	SEC_LIBRARY, /* LIBRARY */
	SEC_SYNOPSIS, /* SYNOPSIS */
	SEC_DESCRIPTION, /* DESCRIPTION */
	SEC_CONTEXT, /* CONTEXT */
	SEC_IMPLEMENTATION, /* IMPLEMENTATION NOTES */
	SEC_RETURN_VALUES, /* RETURN VALUES */
	SEC_ENVIRONMENT,  /* ENVIRONMENT */
	SEC_FILES, /* FILES */
	SEC_EXIT_STATUS, /* EXIT STATUS */
	SEC_EXAMPLES, /* EXAMPLES */
	SEC_DIAGNOSTICS, /* DIAGNOSTICS */
	SEC_COMPATIBILITY, /* COMPATIBILITY */
	SEC_ERRORS, /* ERRORS */
	SEC_SEE_ALSO, /* SEE ALSO */
	SEC_STANDARDS, /* STANDARDS */
	SEC_HISTORY, /* HISTORY */
	SEC_AUTHORS, /* AUTHORS */
	SEC_CAVEATS, /* CAVEATS */
	SEC_BUGS, /* BUGS */
	SEC_SECURITY, /* SECURITY */
	SEC_CUSTOM,
	SEC__MAX
};

a206 10
/*
 * Indicates that a BODY's formatting has ended, but the scope is still
 * open.  Used for syntax-broken blocks.
 */
enum	mdoc_endbody {
	ENDBODY_NOT = 0,
	ENDBODY_SPACE, /* is broken: append a space */
	ENDBODY_NOSPACE /* is broken: don't append a space */
};

d283 1
a283 1
	struct mdoc_node *Es;
d287 1
a287 38
/*
 * Single node in tree-linked AST.
 */
struct	mdoc_node {
	struct mdoc_node *parent; /* parent AST node */
	struct mdoc_node *child; /* first child AST node */
	struct mdoc_node *last; /* last child AST node */
	struct mdoc_node *next; /* sibling AST node */
	struct mdoc_node *prev; /* prior sibling AST node */
	int		  nchild; /* number children */
	int		  line; /* parse line */
	int		  pos; /* parse column */
	enum mdoct	  tok; /* tok or MDOC__MAX if none */
	int		  flags;
#define	MDOC_VALID	 (1 << 0) /* has been validated */
#define	MDOC_ENDED	 (1 << 1) /* gone past body end mark */
#define	MDOC_EOS	 (1 << 2) /* at sentence boundary */
#define	MDOC_LINE	 (1 << 3) /* first macro/text on line */
#define	MDOC_SYNPRETTY	 (1 << 4) /* SYNOPSIS-style formatting */
#define	MDOC_BROKEN	 (1 << 5) /* must validate parent when ending */
#define	MDOC_DELIMO	 (1 << 6)
#define	MDOC_DELIMC	 (1 << 7)
	enum roff_type	  type; /* AST node type */
	enum mdoc_sec	  sec; /* current named section */
	union mdoc_data	 *norm; /* normalised args */
	int		  prev_font; /* before entering this node */
	/* FIXME: these can be union'd to shave a few bytes. */
	struct mdoc_arg	 *args; /* BLOCK/ELEM */
	struct mdoc_node *head; /* BLOCK */
	struct mdoc_node *body; /* BLOCK/ENDBODY */
	struct mdoc_node *tail; /* BLOCK */
	char		 *string; /* TEXT */
	const struct tbl_span *span; /* TBL */
	const struct eqn *eqn; /* EQN */
	enum mdoc_endbody end; /* BODY */
};

/* Names of macros.  Index is enum mdoct. */
d297 1
a297 1
const struct mdoc_node *mdoc_node(const struct mdoc *);
d299 1
a299 1
void mdoc_deroff(char **, const struct mdoc_node *);
@


1.61
log
@Delete the mdoc_node.pending pointer and the function calculating
it, make_pending(), which was the most difficult function of the
whole mdoc(7) parser.  After almost five years of maintaining this
hellhole, i just noticed the pointer isn't needed after all.

Blocks are always rewound in the reverse order they were opened;
that even holds for broken blocks.  Consequently, it is sufficient
to just mark broken blogs with the flag MDOC_BROKEN and breaking
blocks with the flag MDOC_ENDED.  When rewinding, instead of iterating
the pending pointers, just iterate from each broken block to its
parents, rewinding all that are MDOC_ENDED and stopping after
processing the first ancestor that it not MDOC_BROKEN.  For ENDBODY
markers, use the mdoc_node.body pointer in place of the former
mdoc_node.pending.

This also fixes an assertion failure found by jsg@@ with afl,
test case #467 (Bo Bl It Bd Bc It), where (surprise surprise)
the pending pointer got corrupted.

Improved functionality, minus one function, minus one struct field,
minus 50 lines of code.
@
text
@d1 1
a1 1
/*	$OpenBSD: mdoc.h,v 1.60 2015/02/05 00:13:34 schwarze Exp $ */
d10 1
a10 1
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
d12 1
a12 1
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
a176 12
enum	mdoc_type {
	MDOC_TEXT,
	MDOC_ELEM,
	MDOC_HEAD,
	MDOC_TAIL,
	MDOC_BODY,
	MDOC_BLOCK,
	MDOC_TBL,
	MDOC_EQN,
	MDOC_ROOT
};

d354 1
a354 1
	enum mdoc_type	  type; /* AST node type */
@


1.60
log
@Simplify by deleting the "lastline" member of struct mdoc_node.
Minus one struct member, minus 17 lines of code, no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: mdoc.h,v 1.59 2015/01/31 00:11:51 schwarze Exp $ */
d4 1
d359 1
a359 1
#define	MDOC_BREAK	 (1 << 1) /* has broken another block */
d363 1
a363 1
#define	MDOC_ENDED	 (1 << 5) /* rendering has been ended */
a371 1
	struct mdoc_node *pending; /* BLOCK */
d373 1
a373 1
	struct mdoc_node *body; /* BLOCK */
@


1.59
log
@Use relative offsets instead of absolute pointers for the terminal
font stack.  The latter fail after the stack is grown with realloc().
Fixing an assertion failure found by jsg@@ with afl some time ago
(test case number 51).
@
text
@d1 1
a1 1
/*	$OpenBSD: mdoc.h,v 1.58 2014/12/18 03:09:42 schwarze Exp $ */
a354 1
	int		  lastline; /* the node ends on this line */
@


1.58
log
@The code is already careful to not add items to lists that were
already closed.  In this respect, also consider lists closed
that have broken another block, their closure pending until the
end of the broken block.  This avoids syntax tree corruption
leading to a NULL pointer access found by jsg@@ with afl.
@
text
@d1 1
a1 1
/*	$OpenBSD: mdoc.h,v 1.57 2014/11/28 19:25:03 schwarze Exp $ */
d369 1
a369 1
	const void	 *prev_font; /* before entering this node */
@


1.57
log
@Add some missing OpenBSD RCS markers
and a few missing <sys/types.h> inclusions; no code change.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d359 1
@


1.56
log
@remove unneccessary inclusion protection; ok schwarze
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.55 2014/08/08 15:03:24 schwarze Exp $ */
@


1.55
log
@Partial implementation of .Bd -centered.

In groff, .Bd -centered operates in fill mode, which is relatively
hard to implement, while this implementation operates in non-fill
mode so far.  As long as you pay attention that your lines do not
overflow, it works.  To make sure that rendering is the same for
mandoc and groff, it is recommended to insert .br between lines
for now.  This implementation will need improvement later.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.54 2014/07/02 03:47:07 schwarze Exp $ */
a16 2
#ifndef MDOC_H
#define MDOC_H
a395 2

#endif /*!MDOC_H*/
@


1.54
log
@Implement the obsolete macros .En .Es .Fr .Ot for backward compatibility,
since this is hardly more complicated than explicitly ignoring them
as we did in the past.  Of course, do not use them!
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.53 2014/04/20 16:44:44 schwarze Exp $ */
d283 1
a283 1
	DISP_centred, /* -centered */
@


1.53
log
@KNF: case (FOO):  ->  case FOO, remove /* LINTED */ and /* ARGSUSED */,
remove trailing whitespace and blanks before tabs, improve some indenting;
no functional change
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.52 2014/03/31 00:02:45 dlg Exp $ */
d341 1
@


1.52
log
@recognise the CONTEXT section. we consider it only applicable to
section 9 manpages for now.

requested by schwartz@@ pre 5.5
tweaks by jmc@@ schwartz@@
ok schwartz@@
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.51 2014/03/30 19:47:32 schwarze Exp $ */
d190 1
a190 1
/* 
d219 1
a219 1
	SEC_CUSTOM, 
d233 2
a234 2
/* 
 * An argument to a macro (multiple values = `-column xxx yyy'). 
d237 1
a237 1
	enum mdocargt  	  arg; /* type of argument */
d249 1
a249 1
struct 	mdoc_arg {
d337 1
a337 1
	struct mdoc_an 	  An;
d344 2
a345 2
/* 
 * Single node in tree-linked AST. 
@


1.51
log
@Implement the roff(7) .ll (line length) request.
Found by naddy@@ in the textproc/enchant(1) port.
Of course, do not use this in new manuals.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.50 2014/03/23 12:44:18 schwarze Exp $ */
d202 1
@


1.50
log
@If an .Nd block contains macros, avoid fragmented entries in mandocdb(8),
instead use the .Nd content recursively.
Improves a couple of index entries in base.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.49 2013/12/24 19:10:34 schwarze Exp $ */
d143 1
@


1.49
log
@When deciding whether two consecutive macros are on the same input line,
we have to compare the line where the first one *ends* (not where it begins)
to the line where the second one starts.
This fixes the bug that .Bk allowed output line breaks right after block
macros spanning more than one input line, even when the next macro follows
on the same line.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.48 2012/11/16 17:16:29 schwarze Exp $ */
d392 1
@


1.48
log
@Improve formatting of badly nested font blocks.
The basic idea is to already pop the font at the end marker
instead of allowing it to linger until the final end of the block.

This requires a few preliminaries:
* For each block, save a pointer to the previous font
  to be used in case the block breaks another and gets extended.
* That requires making node information writable during rendering.
* Now fonts may get popped in the wrong order; hence, after the stack
  has already been rewound further by some block that began earlier,
  ignore popping a font that was put on the stack later.
* To be able to exploit all this for font blocks, tie processing
  to their body, not their block, which is more logical anyway.

Triggered by florian@@ reporting vaguely similar issues with list blocks.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.47 2012/07/10 14:35:57 schwarze Exp $ */
d354 1
@


1.47
log
@* implement -Tman .Bl -item -inset -diag -ohang -dash -hyphen -enum .It
* fix -Tman .Bl -bullet .It
* adjust the -Tascii .Bl -bullet -dash -hyphen .It
default and minimum width to new groff standards,
it changed from 4n (in groff 1.15) to 2n (in groff 1.21)
* same for -Tascii -enum, it changed from 5n to 2n
* use -hang formatting for -Tascii -enum -width 2n
* for -Tascii -enum, the default is -width 3n
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.46 2011/04/24 16:22:02 schwarze Exp $ */
d366 1
@


1.46
log
@Merge version 1.11.1:
Again lots of cleanup and maintenance work by kristaps@@.
- simplify error reporting: less function pointers, more mandoc_[v]msg
- main: split document parsing out of main.c into read.c
- roff, mdoc, man: improved recognition of control characters
- roff: better handling of if/else stack overflows
- roff: add some predefined strings for backward compatibility
- mdoc, man: empty sections are not errors
- mdoc: move delimiter handling to libmdoc
- some header restructuring and some minor features and fixes
This merge causes two minor regressions
that i will fix in separate commits right afterwards.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.45 2011/03/20 23:36:42 schwarze Exp $ */
d314 1
@


1.45
log
@Import the foundation for eqn(7) support.
Written by kristaps@@.

For now, i'm adding one line to each of the four frontends
to just pass the input text through to the output,
not yet interpreting any of then eqn keywords.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.44 2011/03/07 01:35:33 schwarze Exp $ */
a19 3
/* 
 * What follows is a list of ALL possible macros. 
 */
a145 3
/* 
 * What follows is a list of ALL possible macro arguments. 
 */
d147 27
a173 27
	MDOC_Split,
	MDOC_Nosplit,
	MDOC_Ragged,
	MDOC_Unfilled,
	MDOC_Literal,
	MDOC_File,
	MDOC_Offset,
	MDOC_Bullet,
	MDOC_Dash,
	MDOC_Hyphen,
	MDOC_Item,
	MDOC_Enum,
	MDOC_Tag,
	MDOC_Diag,
	MDOC_Hang,
	MDOC_Ohang,
	MDOC_Inset,
	MDOC_Column,
	MDOC_Width,
	MDOC_Compact,
	MDOC_Std,
	MDOC_Filled,
	MDOC_Words,
	MDOC_Emphasis,
	MDOC_Symbolic,
	MDOC_Nested,
	MDOC_Centred,
a176 3
/* 
 * Type of a syntax node. 
 */
d191 3
a193 1
 * conventional order imposed by mdoc.7.
d196 22
a217 22
	SEC_NONE = 0, /* No section, yet. */
	SEC_NAME,
	SEC_LIBRARY,
	SEC_SYNOPSIS,
	SEC_DESCRIPTION,
	SEC_IMPLEMENTATION,
	SEC_RETURN_VALUES,
	SEC_ENVIRONMENT, 
	SEC_FILES,
	SEC_EXIT_STATUS,
	SEC_EXAMPLES,
	SEC_DIAGNOSTICS,
	SEC_COMPATIBILITY,
	SEC_ERRORS,
	SEC_SEE_ALSO,
	SEC_STANDARDS,
	SEC_HISTORY,
	SEC_AUTHORS,
	SEC_CAVEATS,
	SEC_BUGS,
	SEC_SECURITY,
	SEC_CUSTOM, /* User-defined. */
a220 3
/* 
 * Information from prologue. 
 */
a262 3
/*
 * Normalised `Bl' list type.
 */
d265 11
a275 11
	LIST_bullet,
	LIST_column,
	LIST_dash,
	LIST_diag,
	LIST_enum,
	LIST_hang,
	LIST_hyphen,
	LIST_inset,
	LIST_item,
	LIST_ohang,
	LIST_tag,
a278 3
/*
 * Normalised `Bd' display type.
 */
d281 5
a285 5
	DISP_centred,
	DISP_ragged,
	DISP_unfilled,
	DISP_filled,
	DISP_literal
a287 3
/*
 * Normalised `An' splitting argument. 
 */
d290 2
a291 2
	AUTH_split,
	AUTH_nosplit
a293 3
/*
 * Normalised `Bf' font type.
 */
d296 3
a298 3
	FONT_Em,
	FONT_Li,
	FONT_Sy
a300 3
/*
 * Normalised arguments for `Bd'.
 */
a306 3
/*
 * Normalised arguments for `Bl'.
 */
a315 3
/*
 * Normalised arguments for `Bf'.
 */
a319 3
/*
 * Normalised arguments for `An'.
 */
d360 2
d377 1
a377 4
/*
 * Names of macros.  Index is enum mdoct.  Indexing into this returns
 * the normalised name, e.g., mdoc_macronames[MDOC_Sh] -> "Sh".
 */
d380 1
a380 5
/*
 * Names of macro args.  Index is enum mdocargt.  Indexing into this
 * returns the normalised name, e.g., mdoc_argnames[MDOC_File] ->
 * "file".
 */
a386 4
void	 	  mdoc_free(struct mdoc *);
struct	mdoc	 *mdoc_alloc(struct regset *, void *, mandocmsg);
void		  mdoc_reset(struct mdoc *);
int	 	  mdoc_parseln(struct mdoc *, int, char *, int);
a388 5
int		  mdoc_endparse(struct mdoc *);
int		  mdoc_addspan(struct mdoc *,
			const struct tbl_span *);
int		  mdoc_addeqn(struct mdoc *,
			const struct eqn *);
@


1.44
log
@Clean up date handling,
as a first step to get rid of the frequent petty warnings in this area:
 - always store dates as strings, not as seconds since the Epoch
 - for input, try the three most common formats everywhere
 - for unrecognized format, just pass the date though verbatim
 - when there is no date at all, still use the current date
Originally triggered by a one-line patch from Tim van der Molen,
<tbvdm at xs4all dot nl>, which is included here.
Feedback and OK on manual parts from jmc@@.
"please check this in" kristaps@@
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.43 2011/01/30 17:41:59 schwarze Exp $ */
d194 1
d405 1
d435 2
@


1.43
log
@Like in groff, if .%B is specified, quote .%T; from kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.42 2011/01/04 22:28:17 schwarze Exp $ */
d234 1
a234 1
	time_t		  date; /* `Dd' normalised date */
@


1.42
log
@Merge kristaps@@' cleaner tbl integration, removing mine;
there are still a few bugs, but fixing these will be easier in tree.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.41 2010/12/29 00:47:30 schwarze Exp $ */
d358 1
a358 1
	struct mdoc_node *child_J; /* pointer to %J */
@


1.41
log
@Reorg by Kristaps:  In libmdoc, replace the union of pointers to structs
of macro-specific data by a pointer to a union of structs, which makes the
code simpler and more robust at the expense of a small memory overhead.
Merging was somewhat difficult because we mustn't break tbl(1) support
which the bsd.lv version does not yet have.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.40 2010/12/27 23:57:13 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2008, 2009, 2010 Kristaps Dzonsons <kristaps@@bsd.lv>
a145 2
	MDOC_TS,
	MDOC_TE,
d193 1
a371 1
	struct tbl	 *TS;
d403 1
d431 2
@


1.40
log
@Remove two #defines that are unused since the *_action.c removal;
from kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.39 2010/12/26 21:04:19 schwarze Exp $ */
d367 6
a372 6
union mdoc_data {
	struct mdoc_an 	 *An;
	struct mdoc_bd	 *Bd;
	struct mdoc_bf	 *Bf;
	struct mdoc_bl	 *Bl;
	struct mdoc_rs	 *Rs;
d397 1
a405 1
	union mdoc_data	  data;
@


1.39
log
@Behave more like groff (both old and new): Specifying both .%T and .%J in
an .Rs block causes the title to be quoted instead of underlined, such
that journal title and article title appear visually different.
Original diff from kristaps@@, simplified by me, tweaked again by kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.38 2010/12/21 23:57:31 schwarze Exp $ */
a390 1
#define	MDOC_ACTED	 (1 << 1) /* has been acted upon */
@


1.38
log
@Migrate .An to use a pointer to its data, like everybody else.
In preparation for a simpler ref-counted system for node data.
From kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.37 2010/12/21 23:46:18 schwarze Exp $ */
d358 4
d372 1
@


1.37
log
@Vertical spacing improvements from kristaps@@, small tweaks by me:
Add a "last child" member to struct mdoc_node.
Remove .Pp or .Lp if it is the first or last child of an .Sh or .Ss body.
Thus, no need to do the same in the front-ends any longer.
Tolerate some cases of .Pp inside .Bl.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.36 2010/12/19 09:22:35 schwarze Exp $ */
d364 1
a364 1
	struct mdoc_an 	  An;
@


1.36
log
@Significant improvements to -Thtml by kristaps@@:
Use less <DIV>, use more <H1>, <H2>, <P>, <BR>, <PRE>, <UL>, <OL>, <DL> etc.
Triggered by input from Will Backman.
Remove CSS2 note in mandoc.1, which is no longer true.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.35 2010/10/23 15:49:30 schwarze Exp $ */
d377 1
@


1.35
log
@sync comments to bsd.lv; no functional change
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.105 2010/10/04 07:01:02 kristaps Exp $ */
d288 2
a289 1
	LIST_tag
@


1.34
log
@Support tbl(1) code embedded into mdoc(7) input files.
Very similar to what i have done in man(7) yesterday.
Allows to build cpu(4) on HPPA, wi(4), and phantasia(6).
Now we are able to build all tbl code in base.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.33 2010/08/20 00:53:35 schwarze Exp $ */
d20 2
a21 6
/*
 * This library implements a validating scanner/parser for ``mdoc'' roff
 * macro documents, a.k.a. BSD manual page documents.  The mdoc.c file
 * drives the parser, while macro.c describes the macro ontologies.
 * validate.c pre- and post-validates parsed macros, and action.c
 * performs actions on parsed and validated macros.
a22 3

/* What follows is a list of ALL possible macros. */

d151 3
a153 2
/* What follows is a list of ALL possible macro arguments. */

d185 3
a187 1
/* Type of a syntax node. */
d198 4
a201 1
/* Section (named/unnamed) of `Sh'. */
d203 1
a203 1
	SEC_NONE,		/* No section, yet. */
d224 1
a224 1
	SEC_CUSTOM,		/* User-defined. */
d228 3
a230 1
/* Information from prologue. */
d232 7
a238 7
	char		 *msec;
	char		 *vol;
	char		 *arch;
	time_t		  date;
	char		 *title;
	char		 *os;
	char		 *name;
d241 3
a243 1
/* An argument to a macro (multiple values = `It -column'). */
d245 1
a245 1
	enum mdocargt  	  arg;
d248 2
a249 2
	size_t		  sz;
	char		**value;
d252 5
d263 4
d269 2
a270 2
	ENDBODY_SPACE,
	ENDBODY_NOSPACE
d273 3
d291 3
d303 3
d312 3
d322 3
d331 3
d343 3
d350 3
d357 16
a372 1
/* Node in AST. */
d392 8
a399 15
	struct mdoc_arg	 *args; 	/* BLOCK/ELEM */
	struct mdoc_node *pending;	/* BLOCK */
	struct mdoc_node *head;		/* BLOCK */
	struct mdoc_node *body;		/* BLOCK */
	struct mdoc_node *tail;		/* BLOCK */
	char		 *string;	/* TEXT */
	enum mdoc_endbody end;		/* BODY */

	union {
		struct mdoc_an	 An;
		struct mdoc_bd	*Bd;
		struct mdoc_bf	*Bf;
		struct mdoc_bl	*Bl;
		struct tbl	*TS;
	} data;
d402 5
a406 1
/* See mdoc.3 for documentation. */
d408 5
a412 1
extern	const char *const *mdoc_macronames;
a417 2

/* See mdoc.3 for documentation. */
@


1.33
log
@Implement a simple, consistent user interface for error handling.
We now have sufficient practical experience to know what we want,
so this is intended to be final:
- provide -Wlevel (warning, error or fatal) to select what you care about
- provide -Wstop to stop after parsing a file with warnings you care about
- provide consistent exit status codes for those warnings you care about
- fully document what warnings, errors and fatal errors mean
- remove all other cruft from the user interface, less is more:
- remove all -f knobs along with the whole -f option
- remove the old -Werror because calling warnings "fatal" is silly
- always finish parsing each file, unless fatal errors prevent that
This commit also includes a couple of related simplifications behind
the scenes regarding error handling.
Feedback and OK  kristaps@@;  Joerg Sonnenberger (NetBSD) and
Sascha Wildner (DragonFly BSD) agree with the general direction.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.32 2010/07/25 18:05:54 schwarze Exp $ */
d153 2
d350 5
a354 4
		struct mdoc_an  An;
		struct mdoc_bd *Bd;
		struct mdoc_bf *Bf;
		struct mdoc_bl *Bl;
@


1.32
log
@Sync to bsd.lv; in particular, pull in lots of bug fixes.
new features:
* support the .in macro in man(7)
* support minimal PDF output
* support .Sm in mdoc(7) HTML output
* support .Vb and .nf in man(7) HTML output
* complete the mdoc(7) manual
bug fixes:
* do not let mdoc(7) .Pp produce a newline before/after .Sh; reported by jmc@@
* avoid double blank lines related to man(7) .sp and .br
* let man(7) .nf and .fi flush the line; reported by jsg@@ and naddy@@
* let "\ " produce a non-breaking space; reported by deraadt@@
* discard \m colour escape sequences; reported by J.C. Roberts
* map undefined 1-character-escapes to the literal character itself
maintenance:
* express mdoc(7) arguments in terms of an enum for additional type-safety
* simplify mandoc_special() and a2roffdeco()
* use strcspn in term_word() in place of a manual loop
* minor optimisations in the -Tps and -Thtml formatting frontends
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.31 2010/07/13 01:09:13 schwarze Exp $ */
a354 4
#define	MDOC_IGN_SCOPE	 (1 << 0) /* Ignore scope violations. */
#define	MDOC_IGN_ESCAPE	 (1 << 1) /* Ignore bad escape sequences. */
#define	MDOC_IGN_MACRO	 (1 << 2) /* Ignore unknown macros. */

d367 1
a367 1
struct	mdoc	 *mdoc_alloc(struct regset *, void *, int, mandocmsg);
@


1.31
log
@Merge release 1.10.4 (all code by kristaps@@), providing four new features:
1) Proper .Bk support: allow output line breaks at input line breaks,
but keep input lines together in the output, finally fixing
synopses like aucat(1), mail(1) and tmux(1).
2) Mostly finished -Tps (PostScript) output.
3) Implement -Thtml output for .Nm blocks and .Bk -words.
4) Allow iterative interpolation of user-defined roff(7) strings.
Also contains some minor bugfixes and some performance improvements.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.30 2010/06/29 17:10:29 schwarze Exp $ */
d158 30
a187 29
/* FIXME: make this into an enum. */
#define	MDOC_Split	 0
#define	MDOC_Nosplit	 1
#define	MDOC_Ragged	 2
#define	MDOC_Unfilled	 3
#define	MDOC_Literal	 4
#define	MDOC_File	 5
#define	MDOC_Offset	 6
#define	MDOC_Bullet	 7
#define	MDOC_Dash	 8
#define	MDOC_Hyphen	 9
#define	MDOC_Item	 10
#define	MDOC_Enum	 11
#define	MDOC_Tag	 12
#define	MDOC_Diag	 13
#define	MDOC_Hang	 14
#define	MDOC_Ohang	 15
#define	MDOC_Inset	 16
#define	MDOC_Column	 17
#define	MDOC_Width	 18
#define	MDOC_Compact	 19
#define	MDOC_Std	 20
#define	MDOC_Filled	 21
#define	MDOC_Words	 22
#define	MDOC_Emphasis	 23
#define	MDOC_Symbolic	 24
#define	MDOC_Nested	 25
#define	MDOC_Centred	 26
#define	MDOC_ARG_MAX	 27
d240 1
a240 1
	int	  	  arg;
@


1.30
log
@Support for badly nested blocks, written around the time of
the Rostock mandoc hackathon and tested and polished since,
supporting constructs like:

.Ao Bo    Ac    Bc        (exp breaking exp)
.Aq Bo    eol   Bc        (imp breaking exp)
.Ao Bq    Ac    eol       (exp breaking imp)
.Ao Bo So Bc    Ac  Sc    (double break, inner before outer)
.Ao Bo So Ac    Bc  Sc    (double break, outer before inner)
.Ao Bo    Ac So Bc  Sc    (broken breaker)
.Ao Bo So Bc Do Ac  Sc Dc (broken double breaker)

There are still two known issues which are tricky:

1) Breaking two identical explicit blocks (Ao Bo Bo Ac or Aq Bo Bo eol)
fails outright, triggering a bogus syntax error.
2) Breaking a block by two identical explicit blocks (Ao Ao Bo Ac Ac Bc
or Ao Ao Bq Ac Ac eol) still has a minor rendering error left:
"<ao1 <ao2 [bo ac2> ac1> bc]>" should not have the final ">".

We can fix these later in the tree, let's not grow this diff too large.

"get it in" kristaps@@
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.29 2010/06/27 21:54:42 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2008, 2009 Kristaps Dzonsons <kristaps@@bsd.lv>
d255 1
a255 1
	ENDBODY_NOSPACE,
d282 13
d306 10
d347 4
a350 2
		struct mdoc_bl Bl;
		struct mdoc_bd Bd;
@


1.29
log
@Full .nr nS support, unbreaking the kernel manuals.

Kristaps coded this from scratch after reading my .nr patch;
it is simpler and more powerful.

Registers live in struct regset in regs.h, struct man and struct mdoc
contain pointers to it.  The nS register is cleared when parsing .Sh.
Frontends respect the MDOC_SYNPRETTY flag set in mdoc node_alloc.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.28 2010/06/26 17:56:43 schwarze Exp $ */
d252 6
d311 1
d321 1
@


1.28
log
@merge release 1.10.2
* bug fixes:
- interaction of ASCII_HYPH with special chars (found by Ulrich Spoerlein)
- handling of roff conditionals (found by Ulrich Spoerlein)
- .Bd -offset will no more default to 6n
* maintenance:
- more caching of .Bd and .Bl arguments for efficiency
- deconstify man(7) validation routines
- add FreeBSD library names (provided by Ulrich Spoerlein)
* start PostScript font-switching
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.27 2010/06/06 20:30:08 schwarze Exp $ */
d158 1
d304 1
d307 1
d337 1
a337 1
struct	mdoc	 *mdoc_alloc(void *, int, mandocmsg);
@


1.27
log
@Merge bsd.lv version 1.10.1 (to be released soon).

The main step forward is that this now has *much* better .Bl -column
support, now supporting many manuals that previously errored out
without producing any output.

Other fixes include:
* do not die from multiple list types, use the first and warn
* in .Bl without a type, default to -item
* various tweaks to .Dt
* fix .In, .Fd, .Ft, .Fn and .Fo formatting
* some documentation fixes and additions
* and fix a couple of bugs reported by Ulrich Spoerlein:
* better support for roff block-end "\}" without a preceding dot
* .In must not break the line outside SYNOPSIS
* spelling in some error messages

While merging, fix one regression in .In spacing
that needs to go to bsd.lv, too.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.26 2010/05/24 00:00:10 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2008, 2009 Kristaps Dzonsons <kristaps@@kth.se>
d266 22
d313 2
a314 1
		enum mdoc_list list; /* for `Bl' nodes */
@


1.26
log
@Increase performance by saving the list type in struct mdoc_node.
This will eventually be used so that mdoc_macro can know whether to
dump list line arguments into the body (`Bl -column' overflowing).
Remove a2list() and arg_listtype() because of this.

From kristaps@@.

While merging, fix a regression in mdoc_term.c, print_bvspace():
The bsd.lv version of this broke vertical spacing in .Bl -column.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.25 2010/05/23 22:45:00 schwarze Exp $ */
d152 1
@


1.25
log
@Unified error and warning message system for all of mandoc,
featuring three message levels, as agreed during the mandoc hackathon:
* FATAL parser failure, cannot produce any output from this input file:
  eventually, we hope to convert most of these to ERRORs.
* ERROR, meaning mandoc cannot cope fully with the input syntax and will
  probably lose information or produce structurally garbled output;
  it will try to produce output anyway but exit non-zero at the end,
  which is eventually intended to make the ports infrastructure happy.
* WARNING, meaning you should clean up the input file, but output
  is probably mostly OK, so this will not cause error-exit at the end.
This commit is mostly just converting the old system to the new one; before
the classification will become really reliable, we must check all messages.

In particular,
* set up a new central message string table in main.c
* drop the old message string tables from man.c and mdoc.c
* get rid of the piece-meal merr enums in libman and libmdoc
* reduce number of error/warning functions from 16 to 6 (still a lot...)

While here, handle a few problems more gracefully:
* allow .Rv and .Ex to work without a prior .Nm
* allow .An to ignore extra arguments
* allow undeclared columns in .Bl -column

Written by kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.24 2010/05/20 00:58:02 schwarze Exp $ */
d250 15
d288 4
@


1.24
log
@Support nested roff instructions:
* allow roff_parseln() to be re-run
* allow roff_parseln() to manipulate the line buffer offset
* support the offset in the man and mdoc libraries
* adapt .if, .ie, .el, .ig, .am* and .de* support
* interpret some instructions even in conditional-negative context
Coded by kristaps during the last day of the mandoc hackathon.

To avoid regressions in the OpenBSD tree, commit this together
with some small local additions:
* detect roff block end "\}" even on macro lines
* actually implement the ".if n" conditional
* ignore .ds, .rm and .tr in libroff

Also back my old .if/.ie/.el-handling out of libman, reverting:
man.h 1.15 man.c 1.25 man_macro.c 1.15 man_validate.c 1.19
man_action.c 1.15 man_term.c 1.28 man_html.c 1.9.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.23 2010/05/15 18:25:51 schwarze Exp $ */
a278 7
/* Call-backs for parse messages. */

struct	mdoc_cb {
	int	(*mdoc_err)(void *, int, int, const char *);
	int	(*mdoc_warn)(void *, int, int, const char *);
};

d291 1
a291 1
struct	mdoc	 *mdoc_alloc(void *, int, const struct mdoc_cb *);
@


1.23
log
@allow non-numeric manual sections in -mdoc;
while here, allow LIBRARY in section 9;
by kristaps@@
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.22 2010/05/14 19:52:43 schwarze Exp $ */
d300 1
a300 1
int	 	  mdoc_parseln(struct mdoc *, int, char *buf);
@


1.22
log
@Integrate kristaps@@' end-of-sentence (EOS) framework
which is simpler and more powerful than mine, and remove mine.

* man(7) now has EOS handling, too
* put EOS detection into its own function in libmandoc
* use node and termp flags to communicate the EOS condition
* no more EOS pseudo-macro
* no more non-printable EOS marker character on the formatter level

This slightly breaks EOS detection after trailing punctuation
in mdoc(7) macros, but that will be restored soon.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.21 2010/05/14 14:47:44 schwarze Exp $ */
d226 1
a226 1
	int		  msec;
@


1.21
log
@Merge 1.9.25, keeping local patches;
this does not merge kristaps' end-of-sentences handling yet,
i will check that separately.  This one includes:
* handle \*(Ba as a delimiter
* introduce ARGS_PEND for .Bl -column .It end-of-line special casing
* section ordering: expect EXIT STATUS at the right place
* line break fixes in SYNOPSIS
* allow literal contexts to have arbitrary line lengths
* the input file column number can not be used to identify the beginning
  of a line because white space is allowed after the initial '.'
* proper leading spaces in -man -Tascii mode
* do not let Lb break lines in -mdoc -Thtml LIBRARY
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.20 2010/05/13 20:34:29 schwarze Exp $ */
a151 1
	MDOC_eos,
@


1.20
log
@Remove the command line option -fno-ign-chars.
This option was not useful, you never want mandoc to die
just because there is an invalid character in the input file,
neither in production nor when linting: a warning is sufficient.
This was particularly annoying because it was part of -fstrict
and could not be switched off.
"less is more" kristaps@@
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.19 2010/04/02 12:39:47 schwarze Exp $ */
a205 1
	SEC_EXIT_STATUS,
d209 1
d221 2
a222 1
	SEC_CUSTOM		/* User-defined. */
d253 8
a260 8
	struct mdoc_node *parent;
	struct mdoc_node *child;
	struct mdoc_node *next;
	struct mdoc_node *prev;
	int		  nchild;
	int		  line;
	int		  pos;
	enum mdoct	  tok;
d262 6
a267 5
#define	MDOC_VALID	 (1 << 0)
#define	MDOC_ACTED	 (1 << 1)
	enum mdoc_type	  type;
	enum mdoc_sec	  sec;

@


1.19
log
@merge 1.9.22, keeping local patches
* convert mdoc tokens from #define to enum
* fix a segfault with .Xo/.Xc in explicit blocks
* Thorn is \*(Th, not \*(TH; noticed by Joerg Sonnenberger
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.18 2010/03/02 00:38:59 schwarze Exp $ */
a276 1
#define	MDOC_IGN_CHARS	 (1 << 3) /* Ignore disallowed chars. */
@


1.18
log
@Proper inter-sentence spacing for mdoc(7).
When a text line or a non-block macro line in the source code ends
in any of ".!?", consider that an end of sentence (EOS).
This makes Jason's rule "new sentence, new line" even more important.
Let the parser detect the EOS and insert a token into the AST.
Let the -Tascii frontend render the EOS token as a double space before
the next word.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.17 2010/02/26 12:12:24 schwarze Exp $ */
d30 125
a154 123
#define	MDOC_Ap		 0
#define	MDOC_Dd		 1
#define	MDOC_Dt		 2
#define	MDOC_Os		 3
#define	MDOC_Sh		 4
#define	MDOC_Ss		 5
#define	MDOC_Pp		 6
#define	MDOC_D1		 7
#define	MDOC_Dl		 8
#define	MDOC_Bd		 9
#define	MDOC_Ed		 10
#define	MDOC_Bl		 11
#define	MDOC_El		 12
#define	MDOC_It		 13
#define	MDOC_Ad		 14
#define	MDOC_An		 15
#define	MDOC_Ar		 16
#define	MDOC_Cd		 17
#define	MDOC_Cm		 18
#define	MDOC_Dv		 19
#define	MDOC_Er		 20
#define	MDOC_Ev		 21
#define	MDOC_Ex		 22
#define	MDOC_Fa		 23
#define	MDOC_Fd		 24
#define	MDOC_Fl		 25
#define	MDOC_Fn		 26
#define	MDOC_Ft		 27
#define	MDOC_Ic		 28
#define	MDOC_In		 29
#define	MDOC_Li		 30
#define	MDOC_Nd		 31
#define	MDOC_Nm		 32
#define	MDOC_Op		 33
#define	MDOC_Ot		 34
#define	MDOC_Pa		 35
#define	MDOC_Rv		 36
#define	MDOC_St		 37
#define	MDOC_Va		 38
#define	MDOC_Vt		 39
#define	MDOC_Xr		 40
#define	MDOC__A		 41
#define	MDOC__B		 42
#define	MDOC__D		 43
#define	MDOC__I		 44
#define	MDOC__J		 45
#define	MDOC__N		 46
#define	MDOC__O		 47
#define	MDOC__P		 48
#define	MDOC__R		 49
#define	MDOC__T		 50
#define	MDOC__V		 51
#define MDOC_Ac		 52
#define MDOC_Ao		 53
#define MDOC_Aq		 54
#define MDOC_At		 55
#define MDOC_Bc		 56
#define MDOC_Bf		 57
#define MDOC_Bo		 58
#define MDOC_Bq		 59
#define MDOC_Bsx	 60
#define MDOC_Bx		 61
#define MDOC_Db		 62
#define MDOC_Dc		 63
#define MDOC_Do		 64
#define MDOC_Dq		 65
#define MDOC_Ec		 66
#define MDOC_Ef		 67
#define MDOC_Em		 68
#define MDOC_Eo		 69
#define MDOC_Fx		 70
#define MDOC_Ms		 71
#define MDOC_No		 72
#define MDOC_Ns		 73
#define MDOC_Nx		 74
#define MDOC_Ox		 75
#define MDOC_Pc		 76
#define MDOC_Pf		 77
#define MDOC_Po		 78
#define MDOC_Pq		 79
#define MDOC_Qc		 80
#define MDOC_Ql		 81
#define MDOC_Qo		 82
#define MDOC_Qq		 83
#define MDOC_Re		 84
#define MDOC_Rs		 85
#define MDOC_Sc		 86
#define MDOC_So		 87
#define MDOC_Sq		 88
#define MDOC_Sm		 89
#define MDOC_Sx		 90
#define MDOC_Sy		 91
#define MDOC_Tn		 92
#define MDOC_Ux		 93
#define MDOC_Xc		 94
#define MDOC_Xo		 95
#define	MDOC_Fo		 96
#define	MDOC_Fc		 97
#define	MDOC_Oo		 98
#define	MDOC_Oc		 99
#define	MDOC_Bk		 100
#define	MDOC_Ek		 101
#define	MDOC_Bt		 102
#define	MDOC_Hf		 103
#define	MDOC_Fr		 104
#define	MDOC_Ud		 105
#define	MDOC_Lb		 106
#define	MDOC_Lp		 107
#define	MDOC_Lk		 108
#define	MDOC_Mt		 109
#define	MDOC_Brq	 110
#define	MDOC_Bro	 111
#define	MDOC_Brc	 112
#define	MDOC__C	 	 113
#define	MDOC_Es	 	 114
#define	MDOC_En	 	 115
#define	MDOC_Dx	 	 116
#define	MDOC__Q	 	 117
#define MDOC_br		 118
#define MDOC_sp		 119
#define MDOC__U		 120
#define MDOC_eos	 121
#define MDOC_MAX	 122
d259 1
a259 1
	int		  tok;
d267 1
a270 1
	struct mdoc_node *pending;	/* BLOCK */
@


1.17
log
@Support .It .Xo.
The trick is to not switch from the .It header to the body at EOL, but,
in case an explicit block macro follows, at the end of the block.
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.16 2009/12/22 23:58:00 schwarze Exp $ */
d151 2
a152 1
#define	MDOC_MAX	 121
@


1.16
log
@sync to 1.9.12, mostly portability and refactoring:

correctness/functionality:
- bugfix: do not die when overstep hits the right margin
- new option: -fign-escape
- and various HTML features

portability:
- replace bzero(3) by memset(3), which is ANSI C
- replace err(3)/warn(3) by perror(3)/exit(3), which is ANSI C
- iuse argv[0] instead of __progname
- add time.h to various files for FreeBSD compilation

simplicity:
- do not allocate header/footer data dynamically in *_term.c
- provide and use malloc frontends that error out on failure

for full changelogs, see http://bsd.lv/cgi-bin/cvsweb.cgi/
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.15 2009/10/27 21:40:07 schwarze Exp $ */
d267 1
@


1.15
log
@sync to 1.9.11: adapt printing of dates to groff conventions,
NetBSD portability fixes and some minor bugfixes and feature enhancements;
also checked that my hyphenation code still works on top of this
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.14 2009/10/21 19:13:50 schwarze Exp $ */
d295 1
a295 1
int		  mdoc_reset(struct mdoc *);
@


1.14
log
@sync to 1.9.9, featuring:
 * -Thtml output mode
 * roff scaling units
 * and some minor fixes
for full changelogs, see http://bsd.lv/cgi-bin/cvsweb.cgi/
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.13 2009/08/22 22:11:24 schwarze Exp $ */
a19 2
#include <time.h>

d150 2
a151 1
#define	MDOC_MAX	 120
@


1.13
log
@sync to 1.9.1: sync mdoc manual structure to man manual structure
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.12 2009/08/09 22:05:01 schwarze Exp $ */
d182 2
a183 1
#define	MDOC_ARG_MAX	 26
@


1.12
log
@sync to 1.8.4: remove superfluous FIXMEs
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.11 2009/07/26 01:59:46 schwarze Exp $ */
d203 1
d205 1
a205 1
	SEC_ENVIRONMENT,
d217 1
@


1.11
log
@sync to 1.8.1: support .br and .sp
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.10 2009/07/18 19:44:38 schwarze Exp $ */
a260 1
	/* FIXME: union/struct this with #defines. */
d274 1
a274 1
/* FIXME: unify somehow with man_cb. */
@


1.10
log
@sync to 1.8.0: move mdoc_a2att, mdoc_a2st, and mdoc_a2lib to libmdoc
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.9 2009/07/12 22:35:08 schwarze Exp $ */
d150 3
a152 1
#define	MDOC_MAX	 118
@


1.9
log
@sync to 1.7.23: pass warning code to mdoc_pwarn() instead of warning message
define additional warning macro mdoc_nwarn()
remove obsolete warning functions mdoc_warn(), pwarn(), vwarn(), nwarn()
remove various now unused "enum mdoc_warn" and "enum mwarn"
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.8 2009/07/12 18:28:29 schwarze Exp $ */
a296 4

const char	 *mdoc_a2att(const char *);
const char	 *mdoc_a2lib(const char *);
const char	 *mdoc_a2st(const char *);
@


1.8
log
@sync to 1.7.23: first step to get rid of enum mdoc_warn:
unify manwarn() and mdocwarn() into mwarn()
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.7 2009/06/23 23:02:54 schwarze Exp $ */
a180 6

/* Warnings are either syntax or groff-compatibility. */
enum	mdoc_warn {
	WARN_SYNTAX,
	WARN_COMPAT
};
@


1.7
log
@sync to 1.7.20: like for the -man case, add an nchild counter to the -mdoc
nodes, simplifying the validation code; no functional change
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.6 2009/06/21 20:17:32 schwarze Exp $ */
d282 1
a282 2
	int	(*mdoc_warn)(void *, int, int, 
			enum mdoc_warn, const char *);
@


1.6
log
@sync to 1.7.19: make the declarations more readable
by purging interspersed comments; manual pages are available...
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.5 2009/06/19 07:20:19 schwarze Exp $ */
d255 1
@


1.5
log
@sync to 1.7.19: more elegant section handling
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.4 2009/06/18 23:34:53 schwarze Exp $ */
d278 1
d285 2
a286 1
/* Global table of macro names (`Bd', `Ed', etc.). */
a287 2

/* Global table of argument names (`column', `tag', etc.). */
d294 2
a295 1
/* Free memory allocated with mdoc_alloc. */
a296 2

/* Allocate a new parser instance. */
a297 2

/* Gets system ready for another parse. */
a298 2

/* Parse a single line in a stream (boolean retval). */
a299 2

/* Get result first node (after mdoc_endparse!). */
a300 2

/* Get result meta-information (after mdoc_endparse!). */
a301 2

/* Signal end of parse sequence (boolean retval). */
a302 2

/* The following are utility functions. */
@


1.4
log
@sync to 1.7.19: improved comment handling
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.3 2009/06/18 22:16:56 schwarze Exp $ */
d201 20
a220 21
	SEC_PROLOGUE 		= 0,
	SEC_BODY		= 1,
	SEC_NAME		= 2,
	SEC_LIBRARY		= 3,
	SEC_SYNOPSIS		= 4,
	SEC_DESCRIPTION		= 5,
	SEC_IMPLEMENTATION	= 6,
	SEC_RETURN_VALUES	= 7,
	SEC_ENVIRONMENT		= 8,
	SEC_FILES		= 9,
	SEC_EXAMPLES		= 10,
	SEC_DIAGNOSTICS		= 11,
	SEC_COMPATIBILITY	= 12,
	SEC_ERRORS		= 13,
	SEC_SEE_ALSO		= 14,
	SEC_STANDARDS		= 15,
	SEC_HISTORY		= 16,
	SEC_AUTHORS		= 17,
	SEC_CAVEATS		= 18,
	SEC_BUGS		= 19,
	SEC_CUSTOM
@


1.3
log
@complete sync to 1.7.17: garbage collect unused functions
mdoc_msg, mdoc_pmsg, mdoc_vmsg, and mdoc_nwarn
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.2 2009/06/14 23:00:57 schwarze Exp $ */
d32 1
a32 1
#define	MDOC___	 	 0
d139 12
a150 13
#define	MDOC_Ap		 107
#define	MDOC_Lp		 108
#define	MDOC_Lk		 109
#define	MDOC_Mt		 110
#define	MDOC_Brq	 111
#define	MDOC_Bro	 112
#define	MDOC_Brc	 113
#define	MDOC__C	 	 114
#define	MDOC_Es	 	 115
#define	MDOC_En	 	 116
#define	MDOC_Dx	 	 117
#define	MDOC__Q	 	 118
#define	MDOC_MAX	 119
@


1.2
log
@sync to 1.7.16: comments, whitespace and spelling fixes; no functional change
@
text
@d1 1
a1 1
/*	$Id: mdoc.h,v 1.57 2009/06/10 20:18:43 kristaps Exp $ */
a280 1
	void	(*mdoc_msg)(void *, int, int, const char *);
@


1.1
log
@Initial check-in of mandoc for formatting manuals. ok deraadt@@
@
text
@d1 1
a1 1
/* $Id: mdoc.h,v 1.54 2009/03/31 13:50:19 kristaps Exp $ */
d3 1
a3 1
 * Copyright (c) 2008, 2009 Kristaps Dzonsons <kristaps@@openbsd.org>
d6 2
a7 3
 * purpose with or without fee is hereby granted, provided that the
 * above copyright notice and this permission notice appear in all
 * copies.
d9 7
a15 8
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
 * AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
@

