head	1.73;
access;
symbols
	OPENBSD_6_1:1.62.0.8
	OPENBSD_6_1_BASE:1.62
	OPENBSD_6_0:1.62.0.4
	OPENBSD_6_0_BASE:1.62
	OPENBSD_5_9:1.62.0.2
	OPENBSD_5_9_BASE:1.62
	OPENBSD_5_8:1.59.0.4
	OPENBSD_5_8_BASE:1.59
	OPENBSD_5_7:1.55.0.2
	OPENBSD_5_7_BASE:1.55
	OPENBSD_5_6:1.45.0.4
	OPENBSD_5_6_BASE:1.45
	OPENBSD_5_5:1.41.0.4
	OPENBSD_5_5_BASE:1.41
	OPENBSD_5_4:1.36.0.6
	OPENBSD_5_4_BASE:1.36
	OPENBSD_5_3:1.36.0.4
	OPENBSD_5_3_BASE:1.36
	OPENBSD_5_2:1.36.0.2
	OPENBSD_5_2_BASE:1.36
	OPENBSD_5_1_BASE:1.34
	OPENBSD_5_1:1.34.0.2
	OPENBSD_5_0:1.30.0.2
	OPENBSD_5_0_BASE:1.30
	OPENBSD_4_9:1.29.0.2
	OPENBSD_4_9_BASE:1.29
	OPENBSD_4_8:1.27.0.2
	OPENBSD_4_8_BASE:1.27
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.3.0.4
	OPENBSD_4_6_BASE:1.3;
locks; strict;
comment	@ * @;


1.73
date	2017.06.17.14.55.02;	author schwarze;	state Exp;
branches;
next	1.72;
commitid	NjfD9WWGgFCUSOhr;

1.72
date	2017.06.14.17.50.43;	author schwarze;	state Exp;
branches;
next	1.71;
commitid	SAEkKP1XAbzvhv7H;

1.71
date	2017.06.12.18.55.42;	author schwarze;	state Exp;
branches;
next	1.70;
commitid	S6KuOKZjNULZvGWe;

1.70
date	2017.06.07.20.01.07;	author schwarze;	state Exp;
branches;
next	1.69;
commitid	B6wPKgdcS05gKT67;

1.69
date	2017.06.07.17.38.08;	author schwarze;	state Exp;
branches;
next	1.68;
commitid	Lq4DRasN5AQvZkGt;

1.68
date	2017.06.07.02.13.52;	author schwarze;	state Exp;
branches;
next	1.67;
commitid	ZvJNTmgKz5kmLi93;

1.67
date	2017.06.04.22.43.50;	author schwarze;	state Exp;
branches;
next	1.66;
commitid	HuVlLkzV75UMAm6A;

1.66
date	2017.06.04.18.48.09;	author schwarze;	state Exp;
branches;
next	1.65;
commitid	fpj9KjlTsoEq4jSE;

1.65
date	2017.05.08.15.33.43;	author schwarze;	state Exp;
branches;
next	1.64;
commitid	wam7mxa5wtd9m7Af;

1.64
date	2017.05.07.17.30.58;	author schwarze;	state Exp;
branches;
next	1.63;
commitid	pfMPALNhm77dpGFF;

1.63
date	2017.05.04.22.07.44;	author schwarze;	state Exp;
branches;
next	1.62;
commitid	hU9bJPcS66QLg54n;

1.62
date	2015.11.07.13.57.55;	author schwarze;	state Exp;
branches;
next	1.61;
commitid	UKwSq7JMt0q6KNpK;

1.61
date	2015.10.13.22.57.49;	author schwarze;	state Exp;
branches;
next	1.60;
commitid	jXIG8UzKLXm2Z9i6;

1.60
date	2015.09.21.13.24.32;	author schwarze;	state Exp;
branches;
next	1.59;
commitid	hh1XsHF4k03QJZSt;

1.59
date	2015.07.17.22.35.36;	author schwarze;	state Exp;
branches;
next	1.58;
commitid	Ik50obX3Gy0LFoMQ;

1.58
date	2015.04.29.18.32.57;	author schwarze;	state Exp;
branches;
next	1.57;
commitid	Jraw3F5Czk5tAif5;

1.57
date	2015.04.04.17.46.58;	author schwarze;	state Exp;
branches;
next	1.56;
commitid	exqqP0KNSHrSyO21;

1.56
date	2015.04.02.23.47.43;	author schwarze;	state Exp;
branches;
next	1.55;
commitid	RJFkOLiS9gBqEEDl;

1.55
date	2015.01.31.00.11.52;	author schwarze;	state Exp;
branches;
next	1.54;
commitid	qr0IBCEkFSkiYkBc;

1.54
date	2014.12.23.13.48.15;	author schwarze;	state Exp;
branches;
next	1.53;
commitid	gQAVpbNdyny1vBnL;

1.53
date	2014.12.19.17.10.42;	author schwarze;	state Exp;
branches;
next	1.52;
commitid	VKTVyFrMsLBbKLQJ;

1.52
date	2014.12.02.10.07.17;	author schwarze;	state Exp;
branches;
next	1.51;
commitid	G1dK13T4nePhhgx3;

1.51
date	2014.12.01.08.05.02;	author schwarze;	state Exp;
branches;
next	1.50;
commitid	dkxNPoJe0koFMMLd;

1.50
date	2014.11.27.14.31.29;	author deraadt;	state Exp;
branches;
next	1.49;
commitid	je75OeVgCvwQD2St;

1.49
date	2014.10.28.17.35.42;	author schwarze;	state Exp;
branches;
next	1.48;
commitid	pNwmOla3ZQwLgu2f;

1.48
date	2014.10.26.17.11.18;	author schwarze;	state Exp;
branches;
next	1.47;
commitid	d5isKf7CwbLlT0IO;

1.47
date	2014.09.17.20.17.55;	author schwarze;	state Exp;
branches;
next	1.46;
commitid	5cyqfhVs69W4jFo5;

1.46
date	2014.09.03.05.17.08;	author schwarze;	state Exp;
branches;
next	1.45;
commitid	D4HCUw9YYVx6NSQl;

1.45
date	2014.04.20.16.44.44;	author schwarze;	state Exp;
branches;
next	1.44;

1.44
date	2014.04.08.07.13.01;	author schwarze;	state Exp;
branches;
next	1.43;

1.43
date	2014.03.30.21.27.59;	author schwarze;	state Exp;
branches;
next	1.42;

1.42
date	2014.03.30.19.47.32;	author schwarze;	state Exp;
branches;
next	1.41;

1.41
date	2013.12.25.00.39.13;	author schwarze;	state Exp;
branches;
next	1.40;

1.40
date	2013.12.24.23.04.29;	author schwarze;	state Exp;
branches;
next	1.39;

1.39
date	2013.12.22.23.33.52;	author schwarze;	state Exp;
branches;
next	1.38;

1.38
date	2013.08.21.21.19.47;	author schwarze;	state Exp;
branches;
next	1.37;

1.37
date	2013.08.08.20.07.24;	author schwarze;	state Exp;
branches;
next	1.36;

1.36
date	2012.05.28.13.00.51;	author schwarze;	state Exp;
branches;
next	1.35;

1.35
date	2012.05.27.01.01.24;	author schwarze;	state Exp;
branches;
next	1.34;

1.34
date	2011.11.13.13.30.42;	author schwarze;	state Exp;
branches;
next	1.33;

1.33
date	2011.11.13.13.05.23;	author schwarze;	state Exp;
branches;
next	1.32;

1.32
date	2011.09.19.22.36.11;	author schwarze;	state Exp;
branches;
next	1.31;

1.31
date	2011.09.18.10.25.28;	author schwarze;	state Exp;
branches;
next	1.30;

1.30
date	2011.05.29.21.22.18;	author schwarze;	state Exp;
branches;
next	1.29;

1.29
date	2011.01.09.14.30.48;	author schwarze;	state Exp;
branches;
next	1.28;

1.28
date	2011.01.04.22.28.17;	author schwarze;	state Exp;
branches;
next	1.27;

1.27
date	2010.07.31.21.43.07;	author schwarze;	state Exp;
branches;
next	1.26;

1.26
date	2010.07.25.18.05.54;	author schwarze;	state Exp;
branches;
next	1.25;

1.25
date	2010.07.13.01.09.13;	author schwarze;	state Exp;
branches;
next	1.24;

1.24
date	2010.06.29.14.41.28;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2010.06.27.01.24.02;	author schwarze;	state Exp;
branches;
next	1.22;

1.22
date	2010.06.26.19.08.00;	author schwarze;	state Exp;
branches;
next	1.21;

1.21
date	2010.06.26.17.56.43;	author schwarze;	state Exp;
branches;
next	1.20;

1.20
date	2010.06.10.22.50.10;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2010.05.15.21.09.53;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2010.05.14.19.52.43;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2010.05.14.14.47.44;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2010.04.23.00.23.47;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2010.04.13.22.41.48;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2010.03.26.01.22.07;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2009.12.24.02.08.14;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2009.10.21.19.13.51;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2009.10.19.09.16.58;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2009.09.21.20.28.43;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2009.08.22.18.10.02;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2009.08.22.17.04.48;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2009.08.09.21.59.41;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2009.08.09.18.43.29;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2009.07.26.23.39.54;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2009.07.18.20.50.38;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.15.01.07.46;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.14.23.00.57;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2009.04.06.20.30.40;	author kristaps;	state Exp;
branches;
next	;


desc
@@


1.73
log
@tables leak tab settings to subsequent text
@
text
@/*	$OpenBSD: term.h,v 1.72 2017/06/14 17:50:43 schwarze Exp $ */
/*
 * Copyright (c) 2008, 2009, 2010, 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
 * Copyright (c) 2011-2015, 2017 Ingo Schwarze <schwarze@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHORS DISCLAIM ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

enum	termenc {
	TERMENC_ASCII,
	TERMENC_LOCALE,
	TERMENC_UTF8
};

enum	termtype {
	TERMTYPE_CHAR,
	TERMTYPE_PS,
	TERMTYPE_PDF
};

enum	termfont {
	TERMFONT_NONE = 0,
	TERMFONT_BOLD,
	TERMFONT_UNDER,
	TERMFONT_BI,
	TERMFONT__MAX
};

struct	eqn;
struct	roff_meta;
struct	roff_node;
struct	tbl_span;
struct	termp;

typedef void	(*term_margin)(struct termp *, const struct roff_meta *);

struct	termp_tbl {
	int		  width;	/* width in fixed chars */
	int		  decimal;	/* decimal point position */
};

struct	termp_col {
	int		 *buf;		/* Output buffer. */
	size_t		  maxcols;	/* Allocated bytes in buf. */
	size_t		  lastcol;	/* Last byte in buf. */
	size_t		  col;		/* Byte in buf to be written. */
	size_t		  rmargin;	/* Current right margin. */
	size_t		  offset;	/* Current left margin. */
};

struct	termp {
	struct rofftbl	  tbl;		/* Table configuration. */
	struct termp_col *tcols;	/* Array of table columns. */
	struct termp_col *tcol;		/* Current table column. */
	size_t		  maxtcol;	/* Allocated table columns. */
	size_t		  lasttcol;	/* Last column currently used. */
	size_t		  line;		/* Current output line number. */
	size_t		  defindent;	/* Default indent for text. */
	size_t		  defrmargin;	/* Right margin of the device. */
	size_t		  lastrmargin;	/* Right margin before the last ll. */
	size_t		  maxrmargin;	/* Max right margin. */
	size_t		  col;		/* Byte position in buf. */
	size_t		  viscol;	/* Chars on current line. */
	size_t		  trailspace;	/* See term_flushln(). */
	size_t		  minbl;	/* Minimum blanks before next field. */
	int		  synopsisonly; /* Print the synopsis only. */
	int		  mdocstyle;	/* Imitate mdoc(7) output. */
	int		  ti;		/* Temporary indent for one line. */
	int		  skipvsp;	/* Vertical space to skip. */
	int		  flags;
#define	TERMP_SENTENCE	 (1 << 0)	/* Space before a sentence. */
#define	TERMP_NOSPACE	 (1 << 1)	/* No space before words. */
#define	TERMP_NONOSPACE	 (1 << 2)	/* No space (no autounset). */
#define	TERMP_NBRWORD	 (1 << 3)	/* Make next word nonbreaking. */
#define	TERMP_KEEP	 (1 << 4)	/* Keep words together. */
#define	TERMP_PREKEEP	 (1 << 5)	/* ...starting with the next one. */
#define	TERMP_BACKAFTER	 (1 << 6)	/* Back up after next character. */
#define	TERMP_BACKBEFORE (1 << 7)	/* Back up before next character. */
#define	TERMP_NOBREAK	 (1 << 8)	/* See term_flushln(). */
#define	TERMP_BRTRSP	 (1 << 9)	/* See term_flushln(). */
#define	TERMP_BRIND	 (1 << 10)	/* See term_flushln(). */
#define	TERMP_HANG	 (1 << 11)	/* See term_flushln(). */
#define	TERMP_NOPAD	 (1 << 12)	/* See term_flushln(). */
#define	TERMP_NOSPLIT	 (1 << 13)	/* Do not break line before .An. */
#define	TERMP_SPLIT	 (1 << 14)	/* Break line before .An. */
#define	TERMP_NONEWLINE	 (1 << 15)	/* No line break in nofill mode. */
#define	TERMP_BRNEVER	 (1 << 16)	/* Don't even break at maxrmargin. */
#define	TERMP_NOBUF	 (1 << 17)	/* Bypass output buffer. */
#define	TERMP_NEWMC	 (1 << 18)	/* No .mc printed yet. */
#define	TERMP_ENDMC	 (1 << 19)	/* Next break ends .mc mode. */
#define	TERMP_MULTICOL	 (1 << 20)	/* Multiple column mode. */
	enum termtype	  type;		/* Terminal, PS, or PDF. */
	enum termenc	  enc;		/* Type of encoding. */
	enum termfont	  fontl;	/* Last font set. */
	enum termfont	 *fontq;	/* Symmetric fonts. */
	int		  fontsz;	/* Allocated size of font stack */
	int		  fonti;	/* Index of font stack. */
	term_margin	  headf;	/* invoked to print head */
	term_margin	  footf;	/* invoked to print foot */
	void		(*letter)(struct termp *, int);
	void		(*begin)(struct termp *);
	void		(*end)(struct termp *);
	void		(*endline)(struct termp *);
	void		(*advance)(struct termp *, size_t);
	void		(*setwidth)(struct termp *, int, int);
	size_t		(*width)(const struct termp *, int);
	int		(*hspan)(const struct termp *,
				const struct roffsu *);
	const void	 *argf;		/* arg for headf/footf */
	const char	 *mc;		/* Margin character. */
	struct termp_ps	 *ps;
};


const char	 *ascii_uc2str(int);

void		  roff_term_pre(struct termp *, const struct roff_node *);

void		  term_eqn(struct termp *, const struct eqn *);
void		  term_tbl(struct termp *, const struct tbl_span *);
void		  term_free(struct termp *);
void		  term_setcol(struct termp *, size_t);
void		  term_newln(struct termp *);
void		  term_vspace(struct termp *);
void		  term_word(struct termp *, const char *);
void		  term_flushln(struct termp *);
void		  term_begin(struct termp *, term_margin,
			term_margin, const struct roff_meta *);
void		  term_end(struct termp *);

void		  term_setwidth(struct termp *, const char *);
int		  term_hspan(const struct termp *, const struct roffsu *);
int		  term_hen(const struct termp *, const struct roffsu *);
int		  term_vspan(const struct termp *, const struct roffsu *);
size_t		  term_strlen(const struct termp *, const char *);
size_t		  term_len(const struct termp *, size_t);

void		  term_tab_set(const struct termp *, const char *);
void		  term_tab_iset(size_t);
size_t		  term_tab_next(size_t);

void		  term_fontpush(struct termp *, enum termfont);
void		  term_fontpop(struct termp *);
void		  term_fontpopq(struct termp *, int);
void		  term_fontrepl(struct termp *, enum termfont);
void		  term_fontlast(struct termp *);
@


1.72
log
@improve rounding rules for scaling units
in horizontal orientation in the terminal formatter
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.71 2017/06/12 18:55:42 schwarze Exp $ */
d149 1
@


1.71
log
@Implement automatic line breaking
inside individual table cells that contain text blocks.
This cures overlong lines in various Xenocara manuals.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.70 2017/06/07 20:01:07 schwarze Exp $ */
d143 1
@


1.70
log
@Prepare the terminal driver for filling multiple columns in parallel,
second step: make the per-column byte pointer persistent across
term_flushln() calls, such that a subsequent call can continue at
the point where the previous call left.  If more than one column
is in use, return from term_flushln() when the column is full,
rather than breaking the output line.

No functional change, because nothing sets up multiple columns yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.69 2017/06/07 17:38:08 schwarze Exp $ */
d55 1
a72 1
	size_t		  lastcol;	/* Bytes in buf. */
d101 1
d132 1
@


1.69
log
@Prepare the terminal driver for filling multiple columns in parallel,
first step: split column data out of the terminal state struct into
a new column state struct and use an array of such column state
structs.  No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.68 2017/06/07 02:13:52 schwarze Exp $ */
d55 1
d65 1
d74 1
a74 1
	size_t		  trailspace;	/* See termp_flushln(). */
@


1.68
log
@The \h escape sequence provides another method for moving backwards,
and after that, previously written output gets overwritten, but
overwriting with blanks does *not* erase previously written content.
Yes, manual pages exist that are crazy enough to rely on that...
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.67 2017/06/04 22:43:50 schwarze Exp $ */
d52 7
d60 4
a63 4
	enum termtype	  type;
	struct rofftbl	  tbl;		/* table configuration */
	int		  synopsisonly; /* print the synopsis only */
	int		  mdocstyle;	/* imitate mdoc(7) output */
a67 1
	size_t		  rmargin;	/* Current right margin. */
a68 2
	size_t		  maxcols;	/* Max size of buf. */
	size_t		  offset;	/* Margin offest. */
d74 2
d99 1
a99 1
	int		 *buf;		/* Output buffer. */
@


1.67
log
@Implement the roff(7) .mc (right margin character) request.
The Tcl/Tk manual pages use this extensively.
Delete the TERM_MAXMARGIN hack, it breaks .mc inside .nf;
instead, implement a proper TERMP_BRNEVER flag.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.66 2017/06/04 18:48:09 schwarze Exp $ */
d65 2
a66 1
	size_t		  col;		/* Bytes in buf. */
@


1.66
log
@Make term_flushln() simpler and more robust:
Eliminate the "overstep" state variable.
The information is already contained in "viscol".
Minus 60 lines of code, no functional change intended.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.65 2017/05/08 15:33:43 schwarze Exp $ */
a38 2
#define	TERM_MAXMARGIN	  100000 /* FIXME */

d88 4
d110 1
@


1.65
log
@Basic implementation of the roff(7) .ti (temporary indent) request.
Needed by about four dozen ports (thanks to naddy@@ for the research).
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.64 2017/05/07 17:30:58 schwarze Exp $ */
d70 1
a70 1
	int		  overstep;	/* See termp_flushln(). */
d85 2
a86 2
#define	TERMP_DANGLE	 (1 << 11)	/* See term_flushln(). */
#define	TERMP_HANG	 (1 << 12)	/* See term_flushln(). */
@


1.64
log
@Basic implementation of the roff(7) .ta (define tab stops) request.
This is the first feature made possible by the parser reorganization.
Improves the formatting of the SYNOPSIS in many Xenocara GL manuals.
Also important for ports, as reported by many, including naddy@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.63 2017/05/04 22:07:44 schwarze Exp $ */
d71 1
@


1.63
log
@Start roff formatter modules for HTML and termininal output,
used by both the mdoc and man formatters, with the ultimate
goal of reducing code duplication between the two macro formatters.
Made possible by the parser unification.
Add the first formatting function (for the .br request).
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.62 2015/11/07 13:57:55 schwarze Exp $ */
a66 1
	size_t		  tabwidth;	/* Distance of tab positions. */
d131 3
@


1.62
log
@In private header files, __BEGIN_DECLS and __END_DECLS are pointless.
Because these work slightly differently on different systems,
they are becoming a maintenance burden in the portable version,
so delete them.

Besides, one of the chief design goals of the mandoc toolbox is to
make sure that nothing related to documentation requires C++.
Consequently, linking mandoc against any kind of C++ program would
defeat the purpose and is not supported.
I don't understand why kristaps@@ added them in the first place.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.61 2015/10/13 22:57:49 schwarze Exp $ */
d4 1
a4 1
 * Copyright (c) 2011-2015 Ingo Schwarze <schwarze@@openbsd.org>
d41 1
d43 2
d112 1
a112 2
struct	tbl_span;
struct	eqn;
d114 1
a114 1
const char	 *ascii_uc2str(int);
@


1.61
log
@Major character table cleanup:
* Use ohash(3) rather than a hand-rolled hash table.
* Make the character table static in the chars.c module:
There is no need to pass a pointer around, we most certainly
never want to use two different character tables concurrently.
* No need to keep the characters in a separate file chars.in;
that merely encourages downstream porters to mess with them.
* Sort the characters to agree with the mandoc_chars(7) manual page.
* Specify Unicode codepoints in hex, not decimal (that's the detail
that originally triggered this patch).
No functional change, minus 100 LOC, and i don't see a performance change.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.60 2015/09/21 13:24:32 schwarze Exp $ */
a107 1
__BEGIN_DECLS
a135 2

__END_DECLS
@


1.60
log
@Trailing whitespace is significant when determining the width of a tag
in mdoc(7) .Bl -tag and man(7) .TP, but not in man(7) .IP.
Quirk reported by Jan Stary <hans at stare dot cz> on ports@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.59 2015/07/17 22:35:36 schwarze Exp $ */
a88 1
	const struct mchars *symtab;	/* Character table. */
@


1.59
log
@Initial, still somewhat experimental implementation to leverage
less(1) -T and :t ctags(1)-like functionality to jump to the
definitions of various terms inside manual pages.
To be polished in the tree, so bear with me and report issues.

Technically, if less(1) is used as a pager, information is collected
by the mdoc(7) terminal formatter, first stored using the ohash
library, then ultimately written to a temporary file which is passed
to less via -T.  No change intended for other output formatters or
when running without a pager.

Based on an idea from Kristaps using feedback from many, in particular
phessler@@ nicm@@ millert@@ halex@@ doug@@ kspillner@@ deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.58 2015/04/29 18:32:57 schwarze Exp $ */
d80 7
a86 6
#define	TERMP_BRIND	 (1 << 9)	/* See term_flushln(). */
#define	TERMP_DANGLE	 (1 << 10)	/* See term_flushln(). */
#define	TERMP_HANG	 (1 << 11)	/* See term_flushln(). */
#define	TERMP_NOSPLIT	 (1 << 12)	/* Do not break line before .An. */
#define	TERMP_SPLIT	 (1 << 13)	/* Break line before .An. */
#define	TERMP_NONEWLINE	 (1 << 14)	/* No line break in nofill mode. */
@


1.58
log
@Replace the kludge for the \z escape sequence by an actual
implementation.  As a side effect, minus ten lines of code.

As another side effect, this also fixes the assertion failure that
used to be triggered by "\z\o'ab'c" at the beginning of an output
line, found by jsg@@ with afl (test case 022/Apr27).
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.57 2015/04/04 17:46:58 schwarze Exp $ */
d56 1
@


1.57
log
@Rounding rules for horizontal scaling widths are more complicated.
There is a first rounding to basic units on the input side.
After that, rounding rules differ between requests and macros.
Requests round to the nearest possible character position.
Macros round to the next character position to the left.

Implement that by changing the return value of term_hspan()
to basic units and leaving the second scaling and rounding stage
to the formatters instead of doing it in the terminal handler.

Improves for example argtable2(3).
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.56 2015/04/02 23:47:43 schwarze Exp $ */
d70 8
a77 7
#define	TERMP_SENTENCE	 (1 << 1)	/* Space before a sentence. */
#define	TERMP_NOSPACE	 (1 << 2)	/* No space before words. */
#define	TERMP_NONOSPACE	 (1 << 3)	/* No space (no autounset). */
#define	TERMP_NBRWORD	 (1 << 4)	/* Make next word nonbreaking. */
#define	TERMP_KEEP	 (1 << 5)	/* Keep words together. */
#define	TERMP_PREKEEP	 (1 << 6)	/* ...starting with the next one. */
#define	TERMP_SKIPCHAR	 (1 << 7)	/* Skip the next character. */
@


1.56
log
@Third step towards parser unification:
Replace struct mdoc_meta and struct man_meta by a unified struct roff_meta.
Written of the train from London to Exeter on the way to p2k15.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.55 2015/01/31 00:11:52 schwarze Exp $ */
d98 1
a98 1
	void		(*setwidth)(struct termp *, int, size_t);
d100 1
a100 1
	double		(*hspan)(const struct termp *,
@


1.55
log
@Use relative offsets instead of absolute pointers for the terminal
font stack.  The latter fail after the stack is grown with realloc().
Fixing an assertion failure found by jsg@@ with afl some time ago
(test case number 51).
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.54 2014/12/23 13:48:15 schwarze Exp $ */
d4 1
a4 1
 * Copyright (c) 2011, 2012, 2013, 2014 Ingo Schwarze <schwarze@@openbsd.org>
d10 1
a10 1
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
d12 1
a12 1
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
d41 1
d44 1
a44 1
typedef void	(*term_margin)(struct termp *, const void *);
d121 1
a121 1
			term_margin, const void *);
@


1.54
log
@support negative horizontal widths in man(7);
minus twenty lines of code in spite of enhanced functionality
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.53 2014/12/19 17:10:42 schwarze Exp $ */
a128 1
const enum termfont *term_fontq(struct termp *);
d131 1
a131 1
void		  term_fontpopq(struct termp *, const enum termfont *);
@


1.53
log
@Enforcing an arbitrary, implementation dependent, undocumented limit
by calling assert() when valid user input exceeds it is a bad idea.
Allocate the terminal font stack dynamically instead of crashing
above 10 entries.  Issue found by jsg@@ with afl.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.52 2014/12/02 10:07:17 schwarze Exp $ */
d124 2
a125 4
size_t		  term_hspan(const struct termp *,
			const struct roffsu *);
size_t		  term_vspan(const struct termp *,
			const struct roffsu *);
@


1.52
log
@Fix the implementation and documentation of \c (continue text input line).
In particular, make it work in no-fill mode, too.
Reminded by Carsten dot Kunze at arcor dot de (Heirloom roff).
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.51 2014/12/01 08:05:02 schwarze Exp $ */
d87 2
a88 1
	enum termfont	  fontq[10];	/* Symmetric fonts. */
d131 1
a131 2
enum termfont	  term_fonttop(struct termp *);
const void	 *term_fontq(struct termp *);
d134 1
a134 1
void		  term_fontpopq(struct termp *, const void *);
@


1.51
log
@header cleanup:
* add missing forward declarations
* remove needless header inclusions
* some style unification
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.50 2014/11/27 14:31:29 deraadt Exp $ */
d82 1
@


1.50
log
@remove unneccessary inclusion protection; ok schwarze
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.49 2014/10/28 17:35:42 schwarze Exp $ */
a17 3
__BEGIN_DECLS

struct	termp;
d41 2
d102 5
@


1.49
log
@Make the character table available to libroff so it can check the
validity of character escape names and warn about unknown ones.
This requires mchars_spec2cp() to report unknown names again.
Fortunately, that doesn't require changing the calling code because
according to groff, invalid character escapes should not produce
output anyway, and now that we warn about them, that's fine.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.48 2014/10/26 17:11:18 schwarze Exp $ */
a17 3
#ifndef TERM_H
#define TERM_H

a133 2

#endif /*!TERM_H*/
@


1.48
log
@Improve -Tascii output for Unicode escape sequences: For the first 512
code points, provide ASCII approximations.  This is already much better
than what groff does, which prints nothing for most code points.

A few minor fixes while here:
* Handle Unicode escape sequences in the ASCII range.
* In case of errors, use the REPLACEMENT CHARACTER U+FFFD for -Tutf8
and the string "<?>" for -Tascii output.
* Handle all one-character escape sequences in mchars_spec2{cp,str}()
and remove the workarounds on the higher level.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.47 2014/09/17 20:17:55 schwarze Exp $ */
d88 1
a88 1
	struct mchars	 *symtab;	/* Encoded-symbol table. */
@


1.47
log
@simplify handling of .An -[no]split for terminal output:
delete one static function, one flag #define, and 25 lines of code;
no functional change
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.46 2014/09/03 05:17:08 schwarze Exp $ */
d106 2
@


1.46
log
@Implement the traditional -h option for man(1): show the SYNOPSIS only.
As usual, we get mandoc -h and apropos -h for free.
Try stuff like "apropos -h In=dirent" or "apropos -h Fa=timespec".

Only useful for terminal output, so -Tps, -Tpdf, -Thtml ignore -h for now.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d84 2
a85 3
#define	TERMP_NOSPLIT	 (1 << 12)	/* See termp_an_pre/post(). */
#define	TERMP_SPLIT	 (1 << 13)	/* See termp_an_pre/post(). */
#define	TERMP_ANPREC	 (1 << 14)	/* See termp_an_pre(). */
@


1.45
log
@KNF: case (FOO):  ->  case FOO, remove /* LINTED */ and /* ARGSUSED */,
remove trailing whitespace and blanks before tabs, improve some indenting;
no functional change
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.44 2014/04/08 07:13:01 schwarze Exp $ */
d57 1
@


1.44
log
@Add a new term_flushln() flag TERMP_BRIND (if break, then indent)
to control indentation of continuation lines in TERMP_NOBREAK mode.
In the past, this was always on; continue using it
for .Bl, .Nm, .Fn, .Fo, and .HP, but no longer for .IP and .TP.

I looked at this because sthen@@ reported the issue in a manual
of a Perl module from ports, but it affects base, too: This patch
reduces groff-mandoc differences in base by more than 15%.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.43 2014/03/30 21:27:59 schwarze Exp $ */
d114 1
a114 1
void		  term_begin(struct termp *, term_margin, 
d119 1
a119 1
size_t		  term_hspan(const struct termp *, 
@


1.43
log
@Support relative arguments to .ll (increase or decrease line length).
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.42 2014/03/30 19:47:32 schwarze Exp $ */
d80 6
a85 5
#define	TERMP_DANGLE	 (1 << 9)	/* See term_flushln(). */
#define	TERMP_HANG	 (1 << 10)	/* See term_flushln(). */
#define	TERMP_NOSPLIT	 (1 << 11)	/* See termp_an_pre/post(). */
#define	TERMP_SPLIT	 (1 << 12)	/* See termp_an_pre/post(). */
#define	TERMP_ANPREC	 (1 << 13)	/* See termp_an_pre(). */
@


1.42
log
@Implement the roff(7) .ll (line length) request.
Found by naddy@@ in the textproc/enchant(1) port.
Of course, do not use this in new manuals.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.41 2013/12/25 00:39:13 schwarze Exp $ */
d98 1
a98 1
	void		(*setwidth)(struct termp *, size_t);
d117 1
a117 1
void		  term_setwidth(struct termp *, size_t);
@


1.41
log
@Do not break output lines in .Fn function arguments in SYNOPSIS mode.
Following an idea from Franco Fichtner, but implemented more cleanly.
This reduces groff-mandoc-differences in base by a fantastic 7.5%.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.40 2013/12/24 23:04:29 schwarze Exp $ */
d4 1
a4 1
 * Copyright (c) 2011, 2012, 2013 Ingo Schwarze <schwarze@@openbsd.org>
d60 1
d98 1
d117 1
@


1.40
log
@Delete the unused flag TERMP_IGNDELIM
and the empty callback termp_igndelim_pre().
Sort the remaining termp flags.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.39 2013/12/22 23:33:52 schwarze Exp $ */
d74 1
@


1.39
log
@Polishing the worms in my favourite can, term_flushln().

The TERMP_TWOSPACE flag i introduced in August 2009 was idiosyncratic
and served only a very narrow purpose.  Replace it by a more intuitive
and more general termp attribute "trailspace", to be used together
with TERMP_NOBREAK, to request a minimum amount of whitespace at
the end of the current column.  Adapt all code to the new interface.

No functional change intended;
code reviews to confirm that are welcome *eg*.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.38 2013/08/21 21:19:47 schwarze Exp $ */
d73 7
a79 5
#define	TERMP_NOBREAK	 (1 << 4)	/* See term_flushln(). */
#define	TERMP_IGNDELIM	 (1 << 6)	/* Delims like regulars. */
#define	TERMP_NONOSPACE	 (1 << 7)	/* No space (no autounset). */
#define	TERMP_DANGLE	 (1 << 8)	/* See term_flushln(). */
#define	TERMP_HANG	 (1 << 9)	/* See term_flushln(). */
a82 3
#define	TERMP_KEEP	 (1 << 14)	/* Keep words together. */
#define	TERMP_PREKEEP	 (1 << 15)	/* ...starting with the next one. */
#define	TERMP_SKIPCHAR	 (1 << 16)	/* Skip the next character. */
@


1.38
log
@Move the last column-counting members of struct termp (col and maxcols)
from int to size_t, to match some existing ones (offset, *rmargin, viscol).
Move some related local variables from int to size_t as well.

Needed as a preparation to make a generalized adjbuf() function available
beyond the file term.c, i.e. in mandoc.c.
Also saves a couple of ugly casts.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.37 2013/08/08 20:07:24 schwarze Exp $ */
d4 1
d67 1
a77 1
#define	TERMP_TWOSPACE	 (1 << 10)	/* See term_flushln(). */
@


1.37
log
@Implement the roff(7) font-escape sequence \f(BI "bold+italic".
This improves the formatting of about 40 base manuals
and reduces groff-mandoc formatting differences in base by about 5%.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.36 2012/05/28 13:00:51 schwarze Exp $ */
d61 1
a61 1
	int		  maxcols;	/* Max size of buf. */
d64 1
a64 1
	int		  col;		/* Bytes in buf. */
@


1.36
log
@Implement the roff \z escape sequence, intended to output the next
character without advancing the cursor position; implement it to
simply skip the next character, as it will usually be overwritten.

With this change, the pod2man(1) preamble user-defined string \*:,
intended to render as a diaeresis or umlaut diacritic above the
preceding character, is rendered in a slightly less ugly way,
though still not correctly.  It was rendered as "z.." and is now
rendered as ".".

Given that the definition of \*: uses elaborate manual \h positioning,
there is little chance for mandoc(1) to ever render it correctly,
but at least we can refrain from printing out a spurious "z", and
we can make the \z do something semi-reasonable for easier cases.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.35 2012/05/27 01:01:24 schwarze Exp $ */
d40 1
@


1.35
log
@Fix the vertical spacing around tbl(7) instances in man(7).

Groff forces the document author to manually request sufficient spacing
after .TE - that is, at least .sp 1v after a table with the "box" option
and at least .sp 2v after a table with the "doublebox" option - or else
it clobbers the box.  I consider that insane, so i'm not imitating groff
in that respect.  Instead, i add at least as much vertical space as groff,
or more where required to avoid clobbering the box.

Consequently, output will be identical for input that looks sane with
groff, and mandoc will make output look better for input that looks bad
with groff.

As a side effect, having identical output for portable input
makes it possible to set up the first regression tests for tbl(7).
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.34 2011/11/13 13:30:42 schwarze Exp $ */
d81 1
@


1.34
log
@Support -man -Omdoc to format man(7) manuals in mdoc(7) output style;
so far, this is only accepting the option,
i will commit the (few) formatting tweaks separately.

This is intentionally undocumented for two reasons:
(1) We dream of making it the default at some point, so the option
    will hopefully go away again.
(2) It is not needed for production, but mostly for automated man(7)
    to mdoc(7) output comparisons, to help -Tman development.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.33 2011/11/13 13:05:23 schwarze Exp $ */
d66 1
@


1.33
log
@Make the default left text margin configurable from the command line,
just like the default right margin already is.  This may be useful for
people with expensive screen real estate.  Besides, it helps automated
man(7) to mdoc(7) output comparisons to validate -Tman output.
ok kristaps@@ on an earlier version
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.32 2011/09/19 22:36:11 schwarze Exp $ */
d55 1
@


1.32
log
@Remove the terminal frontend flag TERMP_NOLPAD.

In columnated contexts (.Bl -column, .Bl -tag, .IP, .TP, .HP etc.), do not
pad after writing a column.  Instead, always pad before writing content.

In itself, this change avoids:
 - writing trailing whitespace in some situations
 - with .fi/.nf in .HP, breaking lines that were already padded

It allows several bugfixes included in this patch:
 - Do not count backspace as a character with positive width.
 - Set up proper indentation when encountering .fi/.nf in .HP.
 - Adjust the .HP indentation width to what groff does.
 - Never unlimit the right margin unless in the final column.

This reduces the groff/mandoc-differences in base by nearly 20%,
from 89k to 72k lines of diffs.

ok kristaps@@
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.31 2011/09/18 10:25:28 schwarze Exp $ */
d55 1
@


1.31
log
@sync to version 1.11.5:
adding an implementation of the eqn(7) language
by kristaps@@

So far, only .EQ/.EN blocks are handled, in-line equations are not, and
rendering is not yet very pretty, but the parser is fairly complete.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.30 2011/05/29 21:22:18 schwarze Exp $ */
a66 1
#define	TERMP_NOLPAD	 (1 << 3)	/* See term_flushln(). */
@


1.30
log
@Merge release 1.11.3, almost all code by kristaps@@:
* Unicode output support (no Unicode input yet, though).
* Refactoring: completely handle predefined strings in roff.c.
- New function mandoc_escape() replaces a2roffdeco() and mandoc_special().
- Start using mandoc_getarg() in mdoc_argv.c.
- Clean up parsing of delimiters in mdoc(7).
* And many minor fixes and lots of cleanup.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.29 2011/01/09 14:30:48 schwarze Exp $ */
d99 1
@


1.29
log
@Sync tbl handling to bsd.lv release 1.10.9:
* .T} can be followed by a delimiter, then more data.
* Do not limit table column widths (improves terminfo(5)).
* Let numerical cells respect explicitly specified minimum cell widths.
* Let terminal output survive missing data cells.
* Parse and ignore arguments in parentheses on layout cell specifications.
* Move tbl_calc() into out.c such that it can be used by all frontends.
* Give tables an HTML class.
* Some cleanup in tbl -Thtml code.
All code by kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.28 2011/01/04 22:28:17 schwarze Exp $ */
d25 3
a27 1
	TERMENC_ASCII
a46 29
struct	termp_ps {
	int		  flags;
#define	PS_INLINE	 (1 << 0)	/* we're in a word */
#define	PS_MARGINS	 (1 << 1)	/* we're in the margins */
#define	PS_NEWPAGE	 (1 << 2)	/* new page, no words yet */
	size_t		  pscol;	/* visible column (AFM units) */
	size_t		  psrow;	/* visible row (AFM units) */
	char		 *psmarg;	/* margin buf */
	size_t		  psmargsz;	/* margin buf size */
	size_t		  psmargcur;	/* cur index in margin buf */
	char		  last;		/* character buffer */
	enum termfont	  lastf;	/* last set font */
	size_t		  scale;	/* font scaling factor */
	size_t		  pages;	/* number of pages shown */
	size_t		  lineheight;	/* line height (AFM units) */
	size_t		  top;		/* body top (AFM units) */
	size_t		  bottom;	/* body bottom (AFM units) */
	size_t		  height;	/* page height (AFM units */
	size_t		  width;	/* page width (AFM units) */
	size_t		  left;		/* body left (AFM units) */
	size_t		  header;	/* header pos (AFM units) */
	size_t		  footer;	/* footer pos (AFM units) */
	size_t		  pdfbytes; 	/* current output byte */
	size_t		  pdflastpg;	/* byte of last page mark */
	size_t		  pdfbody;	/* start of body object */
	size_t		 *pdfobjs;	/* table of object offsets */
	size_t		  pdfobjsz;	/* size of pdfobjs */
};

d58 1
a58 1
	size_t		  maxcols;	/* Max size of buf. */
d61 1
a61 1
	size_t		  col;		/* Bytes in buf. */
d79 1
a79 1
	char		 *buf;		/* Output buffer. */
d81 1
a81 1
	void		 *symtab;	/* Encoded-symbol table. */
d87 1
a87 1
	void		(*letter)(struct termp *, char);
d92 1
a92 1
	size_t		(*width)(const struct termp *, char);
d96 1
a96 3
	union {
		struct termp_ps ps;
	} engine;
a98 1
struct termp	 *term_alloc(enum termenc);
@


1.28
log
@Merge kristaps@@' cleaner tbl integration, removing mine;
there are still a few bugs, but fixing these will be easier in tree.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.27 2010/07/31 21:43:07 schwarze Exp $ */
d81 1
a81 1
	struct termp_tbl *tbl;		/* table configuration */
@


1.27
log
@Merge bsd.lv version 1.10.5: last larger batch of bug fixes before release.
NOT including Kristaps' .Bd -literal changes which cause regressions.
Features:
* -Tpdf now fully working
Bugfixes:
* proper handling of quoted strings by .ds in roff(7)
* allow empty .Dd
* make .Sm start no-spacing after the first output word
* underline .Ad
* minor fixes in -Thtml
and some optimisations in terminal output.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.26 2010/07/25 18:05:54 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2008, 2009, 2010 Kristaps Dzonsons <kristaps@@bsd.lv>
d74 5
d81 2
a82 1
	size_t		  defrmargin;	/* Right margin of the device.. */
d129 1
@


1.26
log
@Sync to bsd.lv; in particular, pull in lots of bug fixes.
new features:
* support the .in macro in man(7)
* support minimal PDF output
* support .Sm in mdoc(7) HTML output
* support .Vb and .nf in man(7) HTML output
* complete the mdoc(7) manual
bug fixes:
* do not let mdoc(7) .Pp produce a newline before/after .Sh; reported by jmc@@
* avoid double blank lines related to man(7) .sp and .br
* let man(7) .nf and .fi flush the line; reported by jsg@@ and naddy@@
* let "\ " produce a non-breaking space; reported by deraadt@@
* discard \m colour escape sequences; reported by J.C. Roberts
* map undefined 1-character-escapes to the literal character itself
maintenance:
* express mdoc(7) arguments in terms of an enum for additional type-safety
* simplify mandoc_special() and a2roffdeco()
* use strcspn in term_word() in place of a manual loop
* minor optimisations in the -Tps and -Thtml formatting frontends
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.25 2010/07/13 01:09:13 schwarze Exp $ */
d67 5
a71 3
	size_t		  pdfbytes;
	size_t		  pdflastpg;
	size_t		  pdfbody;
@


1.25
log
@Merge release 1.10.4 (all code by kristaps@@), providing four new features:
1) Proper .Bk support: allow output line breaks at input line breaks,
but keep input lines together in the output, finally fixing
synopses like aucat(1), mail(1) and tmux(1).
2) Mostly finished -Tps (PostScript) output.
3) Implement -Thtml output for .Nm blocks and .Bk -words.
4) Allow iterative interpolation of user-defined roff(7) strings.
Also contains some minor bugfixes and some performance improvements.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.24 2010/06/29 14:41:28 schwarze Exp $ */
d30 2
a31 1
	TERMTYPE_PS
d67 3
@


1.24
log
@framework for glyph width encoding; from kristaps@@
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.23 2010/06/27 01:24:02 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2008, 2009 Kristaps Dzonsons <kristaps@@bsd.lv>
d45 1
a45 1
	int		  psstate;	/* state of ps output */
d48 3
a50 2
	size_t		  pscol;	/* visible column (points) */
	size_t		  psrow;	/* visible row (points) */
d56 1
d58 8
a65 8
	size_t		  lineheight;	/* each line's height (points) */
	size_t		  top;		/* body top (points) */
	size_t		  bottom;	/* body bottom (points) */
	size_t		  height;	/* total height (points) */
	size_t		  width;	/* total width (points) */
	size_t		  left;		/* body left (points) */
	size_t		  header;	/* header position (points) */
	size_t		  footer;	/* footer position (points) */
d108 2
@


1.23
log
@Basic implementation of .Bk/.Ek.
OK and one stylistic tweak by kristaps@@.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.22 2010/06/26 19:08:00 schwarze Exp $ */
d36 2
a37 1
	TERMFONT_UNDER
d48 2
a49 2
	size_t		  pscol;	/* visible column */
	size_t		  psrow;	/* visible row */
d52 1
a52 2
	size_t		  psmargcur;	/* current pos in margin buf */
	size_t	 	  pspage;	/* current page */
d55 9
@


1.22
log
@As a first step towards variable-width font support,
move all width calculations in term_*.c, *_width().
From kristaps.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.21 2010/06/26 17:56:43 schwarze Exp $ */
d81 2
@


1.21
log
@merge release 1.10.2
* bug fixes:
- interaction of ASCII_HYPH with special chars (found by Ulrich Spoerlein)
- handling of roff conditionals (found by Ulrich Spoerlein)
- .Bd -offset will no more default to 6n
* maintenance:
- more caching of .Bd and .Bl arguments for efficiency
- deconstify man(7) validation routines
- add FreeBSD library names (provided by Ulrich Spoerlein)
* start PostScript font-switching
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.20 2010/06/10 22:50:10 schwarze Exp $ */
d94 1
d111 6
a116 2
size_t		  term_hspan(const struct roffsu *);
size_t		  term_vspan(const struct roffsu *);
@


1.20
log
@minimal initial -Tps support, from kristaps@@ GSOC
so far, monospace without font decoration,
but it already has page headers and footers
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.19 2010/05/15 21:09:53 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2008, 2009 Kristaps Dzonsons <kristaps@@kth.se>
d53 2
@


1.19
log
@More systematic output width handling by Joerg Sonnenberger:
* save and restore the output width when switching to MANT_LITERAL
* add an argument to ascii_alloc to specify the output width
* set the default output width to 80 minus 2 characters
* OpenBSD local: set the output width to 65 characters for -man
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.18 2010/05/14 19:52:43 schwarze Exp $ */
d22 2
d28 5
d41 14
d56 1
d85 11
d98 2
d104 3
@


1.18
log
@Integrate kristaps@@' end-of-sentence (EOS) framework
which is simpler and more powerful than mine, and remove mine.

* man(7) now has EOS handling, too
* put EOS detection into its own function in libmandoc
* use node and termp flags to communicate the EOS condition
* no more EOS pseudo-macro
* no more non-printable EOS marker character on the formatter level

This slightly breaks EOS detection after trailing punctuation
in mdoc(7) macros, but that will be restored soon.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.17 2010/05/14 14:47:44 schwarze Exp $ */
d35 1
@


1.17
log
@Merge 1.9.25, keeping local patches;
this does not merge kristaps' end-of-sentences handling yet,
i will check that separately.  This one includes:
* handle \*(Ba as a delimiter
* introduce ARGS_PEND for .Bl -column .It end-of-line special casing
* section ordering: expect EXIT STATUS at the right place
* line break fixes in SYNOPSIS
* allow literal contexts to have arbitrary line lengths
* the input file column number can not be used to identify the beginning
  of a line because white space is allowed after the initial '.'
* proper leading spaces in -man -Tascii mode
* do not let Lb break lines in -mdoc -Thtml LIBRARY
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.16 2010/04/23 00:23:47 schwarze Exp $ */
d44 1
@


1.16
log
@Handle literal tab characters both in literal context (.Bd -literal)
and outside.  In literal context, tab stops are at each eigth column;
outside, they are at each fifth column.

Use tabwidth = 5 as the default and temporarily switch to 8 in termp_bd_pre().
This requires to move the term_flushln() of the final line of a display from
termp_bd_post() to termp_bd_pre(); the former still needs term_newln()
to handle the final lines of non-literal displays.

Handling inside term_flushln() is tricky because a tab collapses with
inter-word spacing, but not with another tab.

Missing feature reported independently by jmc@@ and deraadt@@.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.15 2010/04/13 22:41:48 schwarze Exp $ */
d31 2
@


1.15
log
@Fix rendering of multiple successive .It macros without intervening text;
another problem reported by jmc@@.

The physical output line may contain output from more than one buffer.
Thus, to decide whether a line break is needed, it's insufficient to
only look at the number of bytes in the current output buffer.
Keep track of the number of characters already written, too.
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.14 2010/03/26 01:22:07 schwarze Exp $ */
d37 1
@


1.14
log
@merge 1.9.17, keeping local patches

* much improved pod2man support and low-level roff robustness
* have -Tlint imply -Wall and -fstrict
* use fewer macros and more enum in libman
* and various bug fixes
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.13 2009/12/24 02:08:14 schwarze Exp $ */
d38 1
@


1.13
log
@sync to 1.9.14: rewrite escape sequence handling:
- new function a2roffdeco
- font modes (\f) only affect the current stack point
- implement scaling (\s)
- implement space suppression (\c)
- implement non-breaking space (\~) in -Tascii
- many manual improvements
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.12 2009/10/21 19:13:51 schwarze Exp $ */
d38 1
@


1.12
log
@sync to 1.9.9, featuring:
 * -Thtml output mode
 * roff scaling units
 * and some minor fixes
for full changelogs, see http://bsd.lv/cgi-bin/cvsweb.cgi/
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.11 2009/10/19 09:16:58 schwarze Exp $ */
d26 6
a49 2
	int		  bold;
	int		  under;
d53 3
d65 8
@


1.11
log
@sync to 1.9.5: partial rewrite of special character and predefined string
tables and the supporting infrastructure, mostly in preparation for
HTML output support
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.10 2009/09/21 20:28:43 schwarze Exp $ */
d55 3
@


1.10
log
@sync to 1.9.5: remove TERMP_STYLE bit field in favour of recursion-friendly
integer flags, simplifying and shortening the code
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.9 2009/08/22 18:10:02 schwarze Exp $ */
d23 1
a23 3
	TERMENC_ASCII,
	TERMENC_LATIN1,		/* Not implemented. */
	TERMENC_UTF8		/* Not implemented. */
a49 5

void		 *term_ascii2htab(void);
const char	 *term_a2ascii(void *, const char *, size_t, size_t *);
const char	 *term_a2res(void *, const char *, size_t, size_t *);
void		  term_asciifree(void *);
@


1.9
log
@sync to 1.9.0: move indentation size into *term.c files,
improving -man indentation
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.8 2009/08/22 17:04:48 schwarze Exp $ */
a34 3
#define	TERMP_STYLE	  0x3		/* Style mask. */
#define	TERMP_BOLD	 (1 << 0)	/* Styles... */
#define	TERMP_UNDER	 (1 << 1)
d46 2
@


1.8
log
@sync to 1.8.5: partial rewrite of the handling of escape sequences:
distinguish special characters and predefined strings,
and add and fix several escape sequences
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.7 2009/08/09 21:59:41 schwarze Exp $ */
a18 5

/* FIXME - clean up tabs. */

#define	INDENT		  5
#define	HALFINDENT	  3
@


1.7
log
@sync to 1.8.4: full .An -[no]split support
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.6 2009/08/09 18:43:29 schwarze Exp $ */
d61 1
@


1.6
log
@multiple spacing fixes for .Bl -hang, -tag, -inset and -diag
ok kristaps@@ and included in 1.8.3
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.5 2009/07/26 23:39:54 schwarze Exp $ */
d51 3
@


1.5
log
@sync to 1.8.1: remove superfluous NOSPACE in bd post,
and remove unused TERMP_LITERAL
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.4 2009/07/18 20:50:38 schwarze Exp $ */
d50 1
@


1.4
log
@sync to 1.8.0: support .Bl -hang
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.3 2009/06/15 01:07:46 schwarze Exp $ */
d44 2
a45 3
#define	TERMP_NOLPAD	 (1 << 3)	/* See termp_newline(). */
#define	TERMP_NOBREAK	 (1 << 4)	/* See termp_newline(). */
#define	TERMP_LITERAL	 (1 << 5)	/* Literal words. */
d48 2
a49 2
#define	TERMP_DANGLE	 (1 << 8)	/* See termp_newline(). */
#define	TERMP_HANG	 (1 << 9)	/* See termp_newline(). */
@


1.3
log
@sync to 1.7.16: adapt INDENT to groff conventions
@
text
@d1 1
a1 1
/*	$Id: term.h,v 1.37 2009/06/10 20:18:44 kristaps Exp $ */
d40 11
a50 10
#define	TERMP_NOSPACE	 (1 << 0)	/* No space before words. */
#define	TERMP_NOLPAD	 (1 << 1)	/* No leftpad before flush. */
#define	TERMP_NOBREAK	 (1 << 2)	/* No break after flush. */
#define	TERMP_LITERAL	 (1 << 3)	/* Literal words. */
#define	TERMP_IGNDELIM	 (1 << 4)	/* Delims like regulars. */
#define	TERMP_NONOSPACE	 (1 << 5)	/* No space (no autounset). */
#define	TERMP_NONOBREAK	 (1 << 7)	/* Don't newln NOBREAK. */
#define	TERMP_STYLE	  0x0300	/* Style mask. */
#define	TERMP_BOLD	 (1 << 8)	/* Styles... */
#define	TERMP_UNDER	 (1 << 9)
@


1.2
log
@sync to 1.7.16: comments, whitespace and spelling fixes; no functional change
@
text
@d22 2
a23 1
#define	INDENT		  6
@


1.1
log
@Initial check-in of mandoc for formatting manuals. ok deraadt@@
@
text
@d1 1
a1 1
/* $Id: term.h,v 1.34 2009/03/26 14:38:11 kristaps Exp $ */
d3 1
a3 1
 * Copyright (c) 2008, 2009 Kristaps Dzonsons <kristaps@@openbsd.org>
d6 2
a7 3
 * purpose with or without fee is hereby granted, provided that the
 * above copyright notice and this permission notice appear in all
 * copies.
d9 7
a15 8
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
 * AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
@

