head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	2017.06.06.15.00.56;	author schwarze;	state Exp;
branches;
next	1.6;
commitid	LdhzICSunbnL2oyB;

1.6
date	2017.06.04.22.43.50;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	HuVlLkzV75UMAm6A;

1.5
date	2017.05.08.15.33.43;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	wam7mxa5wtd9m7Af;

1.4
date	2017.05.07.17.30.58;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	pfMPALNhm77dpGFF;

1.3
date	2017.05.05.15.16.26;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	sNJdFUhzoVfGBx2p;

1.2
date	2017.05.05.13.17.04;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	GvSRKa33jIoa4JAJ;

1.1
date	2017.05.05.02.06.17;	author schwarze;	state Exp;
branches;
next	;
commitid	JMX1RJlA2uFuu13l;


desc
@@


1.7
log
@Minimal implementation of the roff(7) .ce request (center a number
of input lines without filling).
Contrary to groff, high-level macros abort .ce mode for now.
@
text
@/*	$OpenBSD: roff_validate.c,v 1.6 2017/06/04 22:43:50 schwarze Exp $ */
/*
 * Copyright (c) 2010, 2017 Ingo Schwarze <schwarze@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#include <sys/types.h>

#include <assert.h>
#include <stddef.h>

#include "mandoc.h"
#include "roff.h"
#include "libmandoc.h"
#include "roff_int.h"

#define	ROFF_VALID_ARGS struct roff_man *man, struct roff_node *n

typedef	void	(*roff_valid_fp)(ROFF_VALID_ARGS);

static	void	  roff_valid_ft(ROFF_VALID_ARGS);

static	const roff_valid_fp roff_valids[ROFF_MAX] = {
	NULL,  /* br */
	NULL,  /* ce */
	roff_valid_ft,  /* ft */
	NULL,  /* ll */
	NULL,  /* mc */
	NULL,  /* sp */
	NULL,  /* ta */
	NULL,  /* ti */
};


void
roff_validate(struct roff_man *man)
{
	struct roff_node	*n;

	n = man->last;
	assert(n->tok < ROFF_MAX);
	if (roff_valids[n->tok] != NULL)
		(*roff_valids[n->tok])(man, n);
}

static void
roff_valid_ft(ROFF_VALID_ARGS)
{
	char	*cp;

	if (n->child == NULL) {
		man->next = ROFF_NEXT_CHILD;
		roff_word_alloc(man, n->line, n->pos, "P");
		man->last = n;
		return;
	}

	cp = n->child->string;
	switch (*cp) {
	case '1':
	case '2':
	case '3':
	case '4':
	case 'I':
	case 'P':
	case 'R':
		if (cp[1] == '\0')
			return;
		break;
	case 'B':
		if (cp[1] == '\0' || (cp[1] == 'I' && cp[2] == '\0'))
			return;
		break;
	case 'C':
		if (cp[1] == 'W' && cp[2] == '\0')
			return;
		break;
	default:
		break;
	}

	mandoc_vmsg(MANDOCERR_FT_BAD, man->parse,
	    n->line, n->pos, "ft %s", cp);
	roff_node_delete(man, n);
}
@


1.6
log
@Implement the roff(7) .mc (right margin character) request.
The Tcl/Tk manual pages use this extensively.
Delete the TERM_MAXMARGIN hack, it breaks .mc inside .nf;
instead, implement a proper TERMP_BRNEVER flag.
@
text
@d1 1
a1 1
/*	$OpenBSD: roff_validate.c,v 1.5 2017/05/08 15:33:43 schwarze Exp $ */
d35 1
@


1.5
log
@Basic implementation of the roff(7) .ti (temporary indent) request.
Needed by about four dozen ports (thanks to naddy@@ for the research).
@
text
@d1 1
a1 1
/*	$OpenBSD: roff_validate.c,v 1.4 2017/05/07 17:30:58 schwarze Exp $ */
d37 1
@


1.4
log
@Basic implementation of the roff(7) .ta (define tab stops) request.
This is the first feature made possible by the parser reorganization.
Improves the formatting of the SYNOPSIS in many Xenocara GL manuals.
Also important for ports, as reported by many, including naddy@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: roff_validate.c,v 1.3 2017/05/05 15:16:26 schwarze Exp $ */
d39 1
@


1.3
log
@Move .sp to the roff modules.  Enough infrastructure is in place
now that this actually saves code: -70 LOC.
@
text
@d1 1
a1 1
/*	$OpenBSD: roff_validate.c,v 1.2 2017/05/05 13:17:04 schwarze Exp $ */
d38 1
@


1.2
log
@move .ll to the roff modules
@
text
@d1 1
a1 1
/*	$OpenBSD: roff_validate.c,v 1.1 2017/05/05 02:06:17 schwarze Exp $ */
d37 1
@


1.1
log
@Move handling of the roff(7) .ft request from the man(7)
modules to the new roff(7) modules.  As a side effect,
mdoc(7) now handles .ft, too.  Of course, do not use that.
@
text
@d1 1
a1 1
/*	$OpenBSD: roff_html.c,v 1.1 2017/05/04 22:07:44 schwarze Exp $ */
d36 1
@

