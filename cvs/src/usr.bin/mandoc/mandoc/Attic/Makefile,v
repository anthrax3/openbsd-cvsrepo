head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2011.07.14.12.26.36;	author schwarze;	state dead;
branches;
next	1.1;

1.1
date	2011.07.10.02.37.22;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Revert build system complication, for two reasons:
(1) Simply linking the future utilities (mandoc, mandocdb, apropos, whatis)
into a common binary inspecting its process name to find out what it
should do (as suggested by deraadt@@) does not require the large code
changes i feared at first, but can be done in a few lines.
(2) As reported by dhill@@, we already had the first build system problem
before even enabling this: Building without "make obj", the mandoc binary
name clashes with the new mandoc subdirectory, breaking the build.

Please use "cvs up -dP" when updating!
@
text
@#	$OpenBSD: Makefile,v 1.1 2011/07/10 02:37:22 schwarze Exp $

PROG=		mandoc
BINDIR=		/usr/bin

CFLAGS+=	-DVERSION=\"1.11.3\"
LDFLAGS+=	-L../lib
LDADD+=		-lmandoc
DPADD+=		../lib/libmandoc.a

.PATH:		${.CURDIR}/..

SRCS=	main.c tree.c \
	term.c term_ascii.c term_ps.c \
	mdoc_term.c man_term.c tbl_term.c \
	html.c out.c mdoc_html.c man_html.c tbl_html.c

.include <bsd.prog.mk>
@


1.1
log
@The mandoc directory will soon grow subdirs mandocdb/ and apropos/
and these new utilities will use the mandoc libraries, so prepare
the build system to build the parsing and utility libraries separately
from the main program and formatters.  Not yet linked to the build.
No objections from deraadt@@ on adding directories for this purpose.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.56 2011/05/29 21:22:18 schwarze Exp $
@

