head	1.22;
access;
symbols
	OPENBSD_6_1:1.22.0.2
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.21.0.2
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.17.0.4
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.10.0.12
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.8
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.6
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.4
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.7.0.4
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.2
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2;
locks; strict;
comment	@ * @;


1.22
date	2017.03.03.14.21.41;	author schwarze;	state Exp;
branches;
next	1.21;
commitid	XiReG6k6LbJGRsK6;

1.21
date	2016.07.15.19.31.53;	author schwarze;	state Exp;
branches;
next	1.20;
commitid	glSmVicTuUrr6wIu;

1.20
date	2016.07.08.22.27.58;	author schwarze;	state Exp;
branches;
next	1.19;
commitid	bqbNrcG3yxfhXOgx;

1.19
date	2015.11.07.13.57.55;	author schwarze;	state Exp;
branches;
next	1.18;
commitid	UKwSq7JMt0q6KNpK;

1.18
date	2015.10.13.22.57.49;	author schwarze;	state Exp;
branches;
next	1.17;
commitid	jXIG8UzKLXm2Z9i6;

1.17
date	2015.04.18.16.04.40;	author schwarze;	state Exp;
branches;
next	1.16;
commitid	6MYJ7cd8mhJ77AGH;

1.16
date	2015.03.27.21.17.16;	author schwarze;	state Exp;
branches;
next	1.15;
commitid	r1NPkDobCJs0RcWM;

1.15
date	2014.12.31.16.50.54;	author schwarze;	state Exp;
branches;
next	1.14;
commitid	d4vqwNunQKF1TkjN;

1.14
date	2014.12.01.08.05.02;	author schwarze;	state Exp;
branches;
next	1.13;
commitid	dkxNPoJe0koFMMLd;

1.13
date	2014.11.27.14.31.29;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	je75OeVgCvwQD2St;

1.12
date	2014.10.28.17.35.42;	author schwarze;	state Exp;
branches;
next	1.11;
commitid	pNwmOla3ZQwLgu2f;

1.11
date	2014.04.20.16.44.44;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2011.10.09.17.59.56;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2011.09.17.14.45.22;	author schwarze;	state Exp;
branches;
next	1.8;

1.8
date	2011.05.29.21.22.18;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2010.07.25.18.05.54;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2010.06.29.15.49.52;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2010.06.10.22.50.10;	author schwarze;	state Exp;
branches;
next	1.4;

1.4
date	2010.06.08.00.11.47;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.15.21.09.53;	author schwarze;	state Exp;
branches;
next	1.2;

1.2
date	2010.02.18.02.11.26;	author schwarze;	state Exp;
branches;
next	1.1;

1.1
date	2009.10.21.19.13.50;	author schwarze;	state Exp;
branches;
next	;


desc
@@


1.22
log
@new -mdoc -Tmarkdown output mode; OK millert@@ reyk@@ tb@@;
thanks to reyk@@ and to Vsevolod at FreeBSD for suggesting it
@
text
@/*	$OpenBSD: main.h,v 1.21 2016/07/15 19:31:53 schwarze Exp $ */
/*
 * Copyright (c) 2009, 2010, 2011 Kristaps Dzonsons <kristaps@@bsd.lv>
 * Copyright (c) 2014, 2015 Ingo Schwarze <schwarze@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHORS DISCLAIM ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

struct	roff_man;
struct	manoutput;

/*
 * Definitions for main.c-visible output device functions, e.g., -Thtml
 * and -Tascii.  Note that ascii_alloc() is named as such in
 * anticipation of latin1_alloc() and so on, all of which map into the
 * terminal output routines with different character settings.
 */

void		 *html_alloc(const struct manoutput *);
void		  html_mdoc(void *, const struct roff_man *);
void		  html_man(void *, const struct roff_man *);
void		  html_free(void *);

void		  tree_mdoc(void *, const struct roff_man *);
void		  tree_man(void *, const struct roff_man *);

void		  man_mdoc(void *, const struct roff_man *);
void		  man_man(void *, const struct roff_man *);

void		 *locale_alloc(const struct manoutput *);
void		 *utf8_alloc(const struct manoutput *);
void		 *ascii_alloc(const struct manoutput *);
void		  ascii_free(void *);

void		 *pdf_alloc(const struct manoutput *);
void		 *ps_alloc(const struct manoutput *);
void		  pspdf_free(void *);

void		  terminal_mdoc(void *, const struct roff_man *);
void		  terminal_man(void *, const struct roff_man *);
void		  terminal_sepline(void *);

void		  markdown_mdoc(void *, const struct roff_man *);
@


1.21
log
@To remove the const qualifier from a pointer to an object - either
because we know it is actually mutable or because we are passing
it to a function that doesn't accept a const object but won't
actually attempt to modify it - simply casting from (const type *)
to (type *) is legal C and clearly expresses the intent.
So get rid of the obfuscating UNCONST macro.
Basic idea discussed with guenther@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.h,v 1.20 2016/07/08 22:27:58 schwarze Exp $ */
d52 2
@


1.20
log
@ISO C99 7.19.2.5 doesn't like mixing putchar(3) and putwchar(3) on
the same stream, and actually, it fails spectacularly on glibc.
Portability issue pointed out by Svyatoslav Mishyn <juef at openmailbox
dot org> after testing on Void Linux.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.h,v 1.19 2015/11/07 13:57:55 schwarze Exp $ */
a17 2

#define	UNCONST(a)	((void *)(uintptr_t)(const void *)(a))
@


1.19
log
@In private header files, __BEGIN_DECLS and __END_DECLS are pointless.
Because these work slightly differently on different systems,
they are becoming a maintenance burden in the portable version,
so delete them.

Besides, one of the chief design goals of the mandoc toolbox is to
make sure that nothing related to documentation requires C++.
Consequently, linking mandoc against any kind of C++ program would
defeat the purpose and is not supported.
I don't understand why kristaps@@ added them in the first place.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.h,v 1.18 2015/10/13 22:57:49 schwarze Exp $ */
a45 1
void		  ascii_sepline(void *);
d53 1
@


1.18
log
@Major character table cleanup:
* Use ohash(3) rather than a hand-rolled hash table.
* Make the character table static in the chars.c module:
There is no need to pass a pointer around, we most certainly
never want to use two different character tables concurrently.
* No need to keep the characters in a separate file chars.in;
that merely encourages downstream porters to mess with them.
* Sort the characters to agree with the mandoc_chars(7) manual page.
* Specify Unicode codepoints in hex, not decimal (that's the detail
that originally triggered this patch).
No functional change, minus 100 LOC, and i don't see a performance change.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.h,v 1.17 2015/04/18 16:04:40 schwarze Exp $ */
a20 2
__BEGIN_DECLS

a53 2

__END_DECLS
@


1.17
log
@Replace the structs mdoc and man by a unified struct roff_man.
Almost completely mechanical, no functional change.
Written on the train from Exeter to London returning from p2k15.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.h,v 1.16 2015/03/27 21:17:16 schwarze Exp $ */
a22 1
struct	mchars;
d33 1
a33 2
void		 *html_alloc(const struct mchars *,
			const struct manoutput *);
d44 3
a46 6
void		 *locale_alloc(const struct mchars *,
			const struct manoutput *);
void		 *utf8_alloc(const struct mchars *,
			const struct manoutput *);
void		 *ascii_alloc(const struct mchars *,
			const struct manoutput *);
d50 2
a51 4
void		 *pdf_alloc(const struct mchars *,
			const struct manoutput *);
void		 *ps_alloc(const struct mchars *,
			const struct manoutput *);
@


1.16
log
@Actually use the new man.conf(5) "output" directive.
Additional functionality, yet minus 45 lines of code.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.h,v 1.15 2014/12/31 16:50:54 schwarze Exp $ */
d24 1
a24 2
struct	mdoc;
struct	man;
d36 2
a37 2
void		  html_mdoc(void *, const struct mdoc *);
void		  html_man(void *, const struct man *);
d40 2
a41 2
void		  tree_mdoc(void *, const struct mdoc *);
void		  tree_man(void *, const struct man *);
d43 2
a44 2
void		  man_mdoc(void *, const struct mdoc *);
void		  man_man(void *, const struct man *);
d61 2
a62 2
void		  terminal_mdoc(void *, const struct mdoc *);
void		  terminal_man(void *, const struct man *);
@


1.15
log
@When showing more than one formatted manual page, insert horizontal lines
between pages.  Suggested by Theo Buehler <theo at math dot ethz dot ch>.
Even in UTF-8 output mode, do not use fancy line drawing characters such
that you can easily use /^--- to skip to the next manual in your pager.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.h,v 1.14 2014/12/01 08:05:02 schwarze Exp $ */
d4 1
a4 1
 * Copyright (c) 2014 Ingo Schwarze <schwarze@@openbsd.org>
d10 1
a10 1
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
d12 1
a12 1
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
d26 1
d35 2
a36 1
void		 *html_alloc(const struct mchars *, char *);
d47 6
a52 3
void		 *locale_alloc(const struct mchars *, char *);
void		 *utf8_alloc(const struct mchars *, char *);
void		 *ascii_alloc(const struct mchars *, char *);
d56 4
a59 2
void		 *pdf_alloc(const struct mchars *, char *);
void		 *ps_alloc(const struct mchars *, char *);
@


1.14
log
@header cleanup:
* add missing forward declarations
* remove needless header inclusions
* some style unification
@
text
@d1 1
a1 1
/*	$OpenBSD: main.h,v 1.13 2014/11/27 14:31:29 deraadt Exp $ */
d4 1
d49 1
@


1.13
log
@remove unneccessary inclusion protection; ok schwarze
@
text
@d1 1
a1 1
/*	$OpenBSD: main.h,v 1.12 2014/10/28 17:35:42 schwarze Exp $ */
d18 2
d22 1
a24 3

#define	UNCONST(a)	((void *)(uintptr_t)(const void *)(a))

@


1.12
log
@Make the character table available to libroff so it can check the
validity of character escape names and warn about unknown ones.
This requires mchars_spec2cp() to report unknown names again.
Fortunately, that doesn't require changing the calling code because
according to groff, invalid character escapes should not produce
output anyway, and now that we warn about them, that's fine.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a16 2
#ifndef	MAIN_H
#define	MAIN_H
a56 2

#endif /*!MAIN_H*/
@


1.11
log
@KNF: case (FOO):  ->  case FOO, remove /* LINTED */ and /* ARGSUSED */,
remove trailing whitespace and blanks before tabs, improve some indenting;
no functional change
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.10 2011/10/09 17:59:56 schwarze Exp $ */
d35 1
a35 2
void		 *html_alloc(char *);
void		 *xhtml_alloc(char *);
d46 3
a48 3
void		 *locale_alloc(char *);
void		 *utf8_alloc(char *);
void		 *ascii_alloc(char *);
d51 2
a52 2
void		 *pdf_alloc(char *);
void		 *ps_alloc(char *);
@


1.10
log
@Sync to version 1.12.0; all code by kristaps@@:
Implement .Rv in -Tman.
Let -man -Tman work a bit like cat(1).
Add the -Ofragment option to -T[x]html.
Minor fixes in -T[x]html.
Lots of apropos(1) and -Tman code cleanup.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.9 2011/09/17 14:45:22 schwarze Exp $ */
d28 1
a28 1
/* 
@


1.9
log
@Initial, incomplete support for -Tman
to convert mdoc(7) documents to the man(7) language.
This is work in progress and will be developed in tree.
It does already handle the cat(1) manual,
but will hardly handle all your fancy manuals yet.
go ahead  kristaps@@ jmc@@ millert@@ deraadt@@
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.8 2011/05/29 21:22:18 schwarze Exp $ */
d45 1
@


1.8
log
@Merge release 1.11.3, almost all code by kristaps@@:
* Unicode output support (no Unicode input yet, though).
* Refactoring: completely handle predefined strings in roff.c.
- New function mandoc_escape() replaces a2roffdeco() and mandoc_special().
- Start using mandoc_getarg() in mdoc_argv.c.
- Clean up parsing of delimiters in mdoc(7).
* And many minor fixes and lots of cleanup.
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.7 2010/07/25 18:05:54 schwarze Exp $ */
d43 2
@


1.7
log
@Sync to bsd.lv; in particular, pull in lots of bug fixes.
new features:
* support the .in macro in man(7)
* support minimal PDF output
* support .Sm in mdoc(7) HTML output
* support .Vb and .nf in man(7) HTML output
* complete the mdoc(7) manual
bug fixes:
* do not let mdoc(7) .Pp produce a newline before/after .Sh; reported by jmc@@
* avoid double blank lines related to man(7) .sp and .br
* let man(7) .nf and .fi flush the line; reported by jsg@@ and naddy@@
* let "\ " produce a non-breaking space; reported by deraadt@@
* discard \m colour escape sequences; reported by J.C. Roberts
* map undefined 1-character-escapes to the literal character itself
maintenance:
* express mdoc(7) arguments in terms of an enum for additional type-safety
* simplify mandoc_special() and a2roffdeco()
* use strcspn in term_word() in place of a manual loop
* minor optimisations in the -Tps and -Thtml formatting frontends
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.6 2010/06/29 15:49:52 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2009, 2010 Kristaps Dzonsons <kristaps@@bsd.lv>
d44 2
@


1.6
log
@sync to bsd.lv version 1.10.3:
* support -Tps -Opaper=a4 and -Opaper=letter
* lots of mandoc.1 manual improvements
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.5 2010/06/10 22:50:10 schwarze Exp $ */
d3 1
a3 1
 * Copyright (c) 2009 Kristaps Dzonsons <kristaps@@kth.se>
d47 1
d49 1
a49 1
void		  ps_free(void *);
@


1.5
log
@minimal initial -Tps support, from kristaps@@ GSOC
so far, monospace without font decoration,
but it already has page headers and footers
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.4 2010/06/08 00:11:47 schwarze Exp $ */
d47 1
a47 1
void		 *ps_alloc(void);
@


1.4
log
@Merge more bits that will be going into 1.10.1:

Clean up vertical spacing in the SYNOPSIS, making the code much more
systematic; this doesn't solve all SYNOPSIS problems yet, in particular
not those related to keeps, indentation and the low-level .nr roff
instruction, but it's a nice step forward and i couldn't find relevant
regressions.  (from kristaps)

Besides,
* make the output width configurable (default: -Owidth=80) (kristaps)
* use mmap with MAP_SHARED (from Joerg Sonnenberger)
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.3 2010/05/15 21:09:53 schwarze Exp $ */
d45 5
a51 1
void		  terminal_free(void *);
@


1.3
log
@More systematic output width handling by Joerg Sonnenberger:
* save and restore the output width when switching to MANT_LITERAL
* add an argument to ascii_alloc to specify the output width
* set the default output width to 80 minus 2 characters
* OpenBSD local: set the output width to 65 characters for -man
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.2 2010/02/18 02:11:26 schwarze Exp $ */
d25 3
d44 1
a44 1
void		 *ascii_alloc(size_t);
@


1.2
log
@sync to release 1.9.15:
 * corrected .Vt handling (spotted by Joerg Sonnenberger)
 * corrected .Xr argument handling (based on my patch)
 * removed \\ escape sequence (because it is for low-level roff only)
 * warn about trailing whitespace (suggested by jmc@@)
 * -Txhtml support
 * and some general cleanup and doc improvements
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.1 2009/10/21 19:13:50 schwarze Exp $ */
d41 1
a41 1
void		 *ascii_alloc(void);
@


1.1
log
@sync to 1.9.9, featuring:
 * -Thtml output mode
 * roff scaling units
 * and some minor fixes
for full changelogs, see http://bsd.lv/cgi-bin/cvsweb.cgi/
@
text
@d1 1
a1 1
/*	$Id: main.h,v 1.1 2009/10/13 10:57:25 kristaps Exp $ */
d33 1
@

