head	1.2;
access;
symbols
	OPENBSD_5_6:1.1.0.62
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.60
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.56
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.54
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.52
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.50
	OPENBSD_5_0:1.1.0.48
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.46
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.44
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.40
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.42
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.38
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.36
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.34
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.32
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.30
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.28
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.26
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.24
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.22
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.20
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.18
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.16
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.14
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.12
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.10
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.8
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.6
	OPENBSD_2_8:1.1.0.4
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2014.11.20.08.50.53;	author bentley;	state dead;
branches;
next	1.1;
commitid	DAfFYTGOAzdEQS6z;

1.1
date	99.11.26.22.49.09;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove the vi perl api.

There have been various build errors for coming on two years now.
It doesn't work and nobody has expressed any interest in saving it.

From natano; ok millert@@
@
text
@TYPEMAP
# Grr can't let it end in OBJ 'cause xsubpp would
# s/OBJ$/REF/ that for the DESTROY function
VI	T_VIOBJNOMUNGE
VI::OPT	T_VIOBJREF
VI::MAP	T_VIOBJREF
VI::MARK	T_VIOBJREF
AVREF	T_AVREFREF

INPUT
T_AVREFREF
	if (SvROK($arg) && SvTYPE(SvRV($arg)) == SVt_PVAV) 
	    $var = (AV *)SvRV($arg);
	else
	    croak(\"$var is not a reference to an array\")
T_VIOBJNOMUNGE
	if (sv_isa($arg, \"VI\")) {
	    IV tmp = SvIV((SV*)SvRV($arg));
	    $var = ($type) tmp;
	    if (!tmp)
		croak(\"screen no longer exists\");
	}
	else
	    croak(\"$var is not of type ${ntype}\")
T_VIOBJREF
	if (sv_isa($arg, \"${ntype}\")) {
	    IV tmp = SvIV((SV*)SvRV($arg));
	    if (sv_isa((SV *)tmp, \"VI\")) {
	    	IV tmp2 = SvIV((SV*)SvRV((SV *)tmp));
	    	$var = ($type) tmp2;
	    	if (!tmp2)
		    croak(\"screen no longer exists\");
	    }
	    else
	    	croak(\"$var is not of type ${ntype}\");
	}
	else
	    croak(\"$var is not of type ${ntype}\")

OUTPUT
T_VIOBJNOMUNGE
	newVIrv($arg, $var);
@


1.1
log
@o Update README files etc. from nvi-1.79 so they have the correct info
o make port.h empty since we there is nothing we lack
o include <sys/param.h>, not <sys/types.h> in files that use MIN/MAX macros
o add perl api support since we have libperl (off by default)
@
text
@@

