head	1.7;
access;
symbols
	OPENBSD_5_8:1.6.0.62
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.54
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.58
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.56
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.52
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.50
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.48
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.46
	OPENBSD_5_0:1.6.0.44
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.42
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.40
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.36
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.38
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.34
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.32
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.30
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.28
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.26
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.24
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.22
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.20
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.18
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.16
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.14
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.12
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.10
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.8
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.6
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.4
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@# @;


1.7
date	2016.01.06.22.45.59;	author millert;	state dead;
branches;
next	1.6;
commitid	AFyv4mtPtgO4xRcm;

1.6
date	2001.01.29.01.58.25;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	99.11.26.22.49.08;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	99.03.06.20.27.43;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.03.06.20.19.23;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.07.24.16.15.03;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	96.05.22.11.33.18;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@We don't use configure so this file is full of lies and we are
better off without it.
@
text
@#	$OpenBSD: README,v 1.6 2001/01/29 01:58:25 niklas Exp $

#	@@(#)README	8.26 (Berkeley) 10/19/96

Nvi uses the GNU autoconf program for configuration and compilation.  You
should enter:

	configure
	make

and nvi will configure the system and build one or two binaries:  nvi and
tknvi.  You can use any path to the configure script, e.g., to build for
an x86 architecture, I suggest that you do:

	mkdir build.x86
	cd build.x86
	../build/configure
	make

There are options that you can specify to the configure command.  See
the next section for a description of these options.

If you want to rebuild or reconfigure nvi, for example, because you change
your mind as to the curses library that you want to use, create a new
directory and reconfigure it using "configure" and whatever options you
choose, don't try to selectively edit the files.

By default, nvi is installed as "vi", with hard links to "ex" and "view".
To install them using different names, use the configure program options.
For example, to install them as "nvi", "nex" and "nview", use:

	configure --program-prefix=n

See the section below on installation for details.

Note, if you're building nvi on a LynxOS system, you should read the
README.LynxOS file in this directory for additional build instructions
that are specific to that operating system.

If you have trouble with this procedure, send email to the addresses
listed in ../README.  In that email, please provide a complete script
of the output for all of the above commands that you entered.

=-=-=-=-=-=-=
NVI'S OPTIONS TO THE CONFIGURE PROGRAM
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

There are many options that you can enter to the configuration program.
To see a complete list of the options, enter "configure --help".  Only
a few of them are nvi specific.  These options are as follows:

  --disable-curses        DON'T use the nvi-provided curses routines.
  --disable-db            DON'T use the nvi-provided DB routines.
  --disable-re            DON'T use the nvi-provided RE routines.
  --enable-debug          Build a debugging version.
  --enable-perlinterp     Include a Perl interpreter in vi.
  --enable-tclinterp      Include a Tk/Tcl interpreter in vi.
  --enable-tknvi          Build a Tk/Tcl front-end for vi.

disable-curses:
	By default, nvi loads its own implementation of the curses
	routines (which are a stripped-down version of the 4.4BSD curses
	library).  If you have your own curses library implementation and
	you want to use it instead, enter:

	--disable-curses

	as an argument to configure, and the curses routines will be taken
	from whatever libraries you load.  Note: System V based curses
	implementations are usually broken.  See the last section of this
	README for further information about nvi and the curses library.

disable-db:
	By default, nvi loads its own versions of the Berkeley DB routines
	(which are a stripped-down version of DB 1.85).  If you have your
	own version of the Berkeley DB routines and you want to use them
	instead, enter:

	--disable-db

	as an argument to configure, and the DB routines will be taken
	from whatever libraries you load.  Make sure that the DB routines
	you use are at least version 1.85 or later.

disable-re:
	By default, nvi loads its own versions of the POSIX 1003.2 Regular
	Expression routines (which are Henry Spencer's implementation).
	If your C library contains an implementation of the POSIX 1003.2
	RE routines (note, this is NOT the same as the historic UNIX RE
	routines), and you want to use them instead, enter:

	--disable-re

	as an argument to configure, and the RE routines will be taken
	from whatever libraries you load.  Please ensure that your RE
	routines implement Henry Spencer's extensions for doing vi-style
	"word" searches.

enable-debug:
	If you want to build nvi with no optimization (i.e. without -O
	as a compiler flag), with -g as a compiler flag, and with DEBUG
	defined during compilation, enter:

	--enable-debug

	as an argument to configure.

enable-perlinterp:
	If you have the Perl 5 libraries and you want to compile in the
	Perl interpreter, enter:

	--enable-perlinterp

	as an argument to configure.  (Note: this is NOT possible with
	Perl 4, or even with Perl 5 versions earlier than 5.002.)

enable-tclinterp:
	If you have the Tk/Tcl libraries and you want to compile in the
	Tcl/Tk interpreter, enter:

	--enable-tclinterp

	as an argument to configure.  If your Tk/Tcl include files and
	libraries aren't in the standard library and include locations,
	see the next section of this README file for more information.

enable-tknvi:
	If you have the Tk/Tcl libraries and you want to build the Tcl/Tk
	nvi front-end, enter:

	--enable-tknvi

	as an argument to configure.  If your Tk/Tcl include files and
	libraries aren't in the standard library and include locations,
	see the next section of this README file for more information.

=-=-=-=-=-=-=
ADDING OR CHANGING COMPILERS, OR COMPILE OR LOAD LINE FLAGS
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

If you want to use a specific compiler, specify the CC environment
variable before running configure.  For example:

	env CC=gcc configure

Using anything other than the native compiler will almost certainly
mean that you'll want to check the compile and load line flags, too.

If you want to specify additional load line flags, specify the ADDLDFLAGS
environment variable before running configure.  For example:

	env ADDLDFLAGS="-Q" configure

would specify the -Q flag in the load line when the nvi programs are
loaded.

If you don't want configure to use the default load line flags for the
system, specify the LDFLAGS environment variable before running configure.
For example:

	env LDFLAGS="-32" configure

will cause configure to set the load line flags to "-32", and not set
them based on the current system.

If you want to specify additional compile line flags, specify the
ADDCPPFLAGS environment variable before running configure.  For example:

	env ADDCPPFLAGS="-I../foo" configure

would cause the compiler to be passed the -I../foo flag when compiling
test programs during configuration as well as when building nvi object
files.

If you don't want configure to use the default compile line flags for the
system, specify the CPPFLAGS environment variable before running configure.
For example:

	env CPPFLAGS="-I.." configure

will cause configure to use "-I.." as the compile line flags instead of
the default values.

=-=-=-=-=-=-=
ADDING LIBRARIES AND INCLUDE FILES
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

If the Tk/Tcl or any other include files or libraries are in non-standard
places on your system, you will need to specify the directory path where
they can be found.

If you want to specify additional library paths, set the ADDLIBS environment
variable before running configure.  For example:

	env ADDLIBS="-L/a/b -L/e/f -ldb" configure

would specify two additional directories to search for libraries, /a/b
and /e/f, and one additional library to load, "db".

If you want to specify additional include paths, specify the ADDCPPFLAGS
environment variable before running configure.  For example:

	env ADDCPPFLAGS="-I/usr/local/include" LIBS="-ldb" configure

would search /usr/local/include for include files, as well as load the db
library as described above.

As a final example, let's say that you've downloaded ncurses from the net
and you've built it in a directory named ncurses which is at the same
level in the filesystem hierarchy as nvi.  You would enter something like:

	env ADDCPPFLAGS="-I../../ncurses/include" \
	    ADDLIBS="-L../../ncurses/libraries" configure

to cause nvi to look for the curses include files and the curses library
in the ncurses environment.

Notes:
	Make sure that you prepend -L to any library directory names, and
	that you prepend -I to any include file directory names!  Also,
	make sure that you quote the paths as shown above, i.e. with
	single or double quotes around the values you're specifying for
	ADDCPPFLAGS and ADDLIBS.

	=-=-=-=-=-=
	You should NOT need to add any libraries or include files to load
	the Perl5 interpreter.  The configure script will obtain that
	information directly from the Perl5 program.  This means that the
	configure script must be able to find perl in its path.  It looks
	for "perl5" first, and then "perl".  If you're building a Perl
	interpreter and neither is found, it's a fatal error.

	=-=-=-=-=-=
	You do not need to specify additional libraries to load Tk/Tcl,
	Perl or curses, as the nvi configuration script adds the
	appropriate libraries to the load line whenever you specify
	--enable-tknvi or other Perl or Tk/Tcl related option, or build
	the Tk/Tcl or curses version of nvi.  The library names that are
	automatically loaded are as follows:

	for Perl:	-lperl
	for Tk/Tcl:	-ltk -ltcl -lm
	for curses:	-lcurses

	In addition, the configure script loads:

		... the X libraries when loading the Tk/Tcl libraries,
		    if they exist.

		... the -ltermcap or -ltermlib libraries when loading
		    any curses library, if they exist.

	=-=-=-=-=-=
	The env command is available on most systems, and simply sets one
	or more environment variables before running a command.  If the
	env command is not available to you, you can set the environment
	variables in your shell before running configure.  For example,
	in sh or ksh, you could do:

		ADDLIBS="-L/a/b -L/e/f -ldb" configure

	and in csh or tcsh, you could do:

		setenv ADDLIBS "-L/a/b -L/e/f -ldb"
		configure

	See your shell manual page for further information.

=-=-=-=-=-=-=
INSTALLING NVI
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Nvi installs the following files into the following locations, with
the following default values:

Variables:		Default value:
prefix			/usr/local
exec_prefix		$(prefix)
bindir			$(prefix)/bin
datadir			$(prefix)/share
mandir			$(prefix)/man

File(s):		Default location
----------------------------------------
vi			$(bindir)/vi
vi.1			$(mandir)/man1/vi.1
vi.0			$(mandir)/cat1/vi.0
Perl scripts		$(datadir)/vi/perl/
Tcl scripts		$(datadir)/vi/tcl/
Message Catalogs	$(datadir)/vi/catalog/

Notes:
	There are two hard links to the vi program, named ex and view.
	Similarly, there are two hard links to the unformatted vi manual
	page, named ex.1 and view.1, and two hard links to the formatted
	manual page, named ex.0 and view.0.  These links are created when
	the program and man pages are installed.

	If you want to install vi, ex, view and the man pages as nvi, nex,
	nview, use the configure option --program-prefix=n.  Other, more
	complex transformations are possible -- use configure --help to
	see more options.

	To move the entire installation tree somewhere besides /usr/local,
	change the value of both "exec_prefix" and "prefix".  To move the
	binaries to a different place, change the value of "bindir".
	Similarly, to put the datafiles (the message catalogs, Perl and
	Tcl scripts) or the man pages in a different place, change the
	value of "datadir" or "mandir".  These values can be changed as
	part of configuration:

		configure --exec_prefix=/usr/contrib --prefix=/usr/share

	or when doing the install itself:

		make exec_prefix=/usr/contrib prefix=/usr/contrib install

	The datafile directory (e.g., /usr/local/share/vi by default) is
	completely removed and then recreated as part of the installation
	process.

=-=-=-=-=-=-=
NVI AND THE CURSES LIBRARY
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

The major portability problem for nvi is selecting a curses library.
Unfortunately, it is common to find broken versions of curses -- the
original System V curses was broken, resulting in all vendors whose
implementations are derived from System V having broken implementations
in turn.

For this reason, BY DEFAULT, nvi uses the stripped-down curses library
that's included in its distribution.  Of course, it would be preferable
to use the vendor's curses library, or one of the newer implementations
of curses, e.g., ncurses.

To use the vendor's curses library, specify the:

	--disable-curses

argument to the configure command.  If you use the vendor's or other
curses library, and you see any of the following symptoms:

	+ Core dumps in curses routines.
	+ Missing routines when compiling.
	+ Repainting the wrong characters on the screen.
	+ Displaying inverse video in the wrong places.
	+ Failure to reset your terminal to the correct modes on exit.

you have a broken curses implementation, and you should reconfigure nvi
to use another curses library or the curses library provided with nvi.

There are two alternative sources for curses libraries:

#1: Compile the 4BSD curses library from any of the recent BSD
    releases: FreeBSD, NetBSD or 4.4BSD-Lite release 2.  These
    libraries should be able to support nvi.

#2: Retrieve and build the ncurses library.  This library is not
    recommended unreservedly, at least for now, for two reasons.
    First, it can't be built on any system where the compiler
    doesn't support function prototypes.  Second, it currently has
    a few bugs in its support for nvi.  It mostly works, but it's
    still not quite right.

One final note.  If you see the following symptoms:

	+ Line-by-line screen repainting instead of scrolling.

it usually means that your termcap or terminfo information is insufficient
for the terminal.
@


1.6
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD$
@


1.5
log
@o Update README files etc. from nvi-1.79 so they have the correct info
o make port.h empty since we there is nothing we lack
o include <sys/param.h>, not <sys/types.h> in files that use MIN/MAX macros
o add perl api support since we have libperl (off by default)
@
text
@d1 2
@


1.4
log
@back out changes that should not have escaped my local tree
@
text
@d1 1
a1 1
#	@@(#)README	8.24 (Berkeley) 6/20/96
d274 8
a281 2
File(s):		Location
			Default Location
d283 6
a288 14
vi			$(exec_prefix)/$(bindir)/vi
			/usr/local/bin/vi

vi.0			$(prefix)/$(mandir)/cat1/vi.0
			/usr/local/man/cat1/vi.0

Message Catalogs	$(prefix)/$(datadir)/vi/catalog/
			/usr/local/share/vi/catalog/

Perl5 scripts		$(prefix)/$(datadir)/vi/perl/
			/usr/local/share/vi/perl/

Tcl scripts		$(prefix)/$(datadir)/vi/tcl/
			/usr/local/share/vi/tcl/
d292 4
a295 3
	Similarly, there are two hard links to the vi manual page, named
	ex.0 and view.0.  These links are created when the program and
	man pages are installed.
a301 4
	The default value for both "exec_prefix" and "prefix" is the
	directory /usr/local.  The default values for "bindir", "datadir"
	and "mandir" are bin, share and man, respectively.

d304 5
a308 6
	binaries to a different place in the "exec_prefix" directory tree,
	change the value of "bindir".  Similarly, to put the datafiles
	(the message catalogs, Perl5 and Tcl scripts) or the man pages in
	a different place in the "prefix" directory tree, change the value
	of "datadir" or "mandir".  These values can be changed as part of
	configuration:
a318 3

	The mandir directory must have another directory named "cat1"
	beneath it for the man pages to successfully install.
@


1.3
log
@add missing reference to infocmp
@
text
@d1 1
a1 1
#	@@(#)README	8.26 (Berkeley) 10/19/96
d274 14
a287 6
Variables:		Default value:
prefix			/usr/local
exec_prefix		$(prefix)
bindir			$(prefix)/bin
datadir			$(prefix)/share
mandir			$(prefix)/man
d289 2
a290 8
File(s):		Default location
----------------------------------------
vi			$(bindir)/vi
vi.1			$(mandir)/man1/vi.1
vi.0			$(mandir)/cat1/vi.0
Perl scripts		$(datadir)/vi/perl/
Tcl scripts		$(datadir)/vi/tcl/
Message Catalogs	$(datadir)/vi/catalog/
d294 3
a296 4
	Similarly, there are two hard links to the unformatted vi manual
	page, named ex.1 and view.1, and two hard links to the formatted
	manual page, named ex.0 and view.0.  These links are created when
	the program and man pages are installed.
d303 4
d309 6
a314 5
	binaries to a different place, change the value of "bindir".
	Similarly, to put the datafiles (the message catalogs, Perl and
	Tcl scripts) or the man pages in a different place, change the
	value of "datadir" or "mandir".  These values can be changed as
	part of configuration:
d325 3
@


1.2
log
@bring vi/ex up to 1.71
@
text
@d1 1
a1 1
#	@@(#)README	8.24 (Berkeley) 6/20/96
d274 8
a281 2
File(s):		Location
			Default Location
d283 6
a288 14
vi			$(exec_prefix)/$(bindir)/vi
			/usr/local/bin/vi

vi.0			$(prefix)/$(mandir)/cat1/vi.0
			/usr/local/man/cat1/vi.0

Message Catalogs	$(prefix)/$(datadir)/vi/catalog/
			/usr/local/share/vi/catalog/

Perl5 scripts		$(prefix)/$(datadir)/vi/perl/
			/usr/local/share/vi/perl/

Tcl scripts		$(prefix)/$(datadir)/vi/tcl/
			/usr/local/share/vi/tcl/
d292 4
a295 3
	Similarly, there are two hard links to the vi manual page, named
	ex.0 and view.0.  These links are created when the program and
	man pages are installed.
a301 4
	The default value for both "exec_prefix" and "prefix" is the
	directory /usr/local.  The default values for "bindir", "datadir"
	and "mandir" are bin, share and man, respectively.

d304 5
a308 6
	binaries to a different place in the "exec_prefix" directory tree,
	change the value of "bindir".  Similarly, to put the datafiles
	(the message catalogs, Perl5 and Tcl scripts) or the man pages in
	a different place in the "prefix" directory tree, change the value
	of "datadir" or "mandir".  These values can be changed as part of
	configuration:
a318 3

	The mandir directory must have another directory named "cat1"
	beneath it for the man pages to successfully install.
@


1.1
log
@new vi
@
text
@d1 1
a1 1
#	@@(#)README	8.20 (Berkeley) 5/12/96
d11 1
a11 1
an x86 architecture, you might do:
a17 3
If you're only building nvi for a single architecture, you can just use
the path ./configure, and build it in this directory.

d22 3
a24 5
your mind as to the curses library that you want to use, enter:

	make distclean

and then reconfigure using "configure" and whatever options you choose.
d34 4
d136 1
a136 1
ADDING OR CHANGING COMPILE OR LOAD LINE FLAGS
d139 8
d150 1
a150 1
	env ADDLDFLAGS="-Q" ./configure
d159 1
a159 1
	env LDFLAGS="-32" ./configure
d167 1
a167 1
	env ADDCPPFLAGS="-I../foo" ./configure
d177 1
a177 1
	env CPPFLAGS="-I.." ./configure
d193 1
a193 1
	env ADDLIBS="-L/a/b -L/e/f -ldb" ./configure
d201 1
a201 1
	env ADDCPPFLAGS="-I/usr/local/include" LIBS="-ldb" ./configure
d211 1
a211 1
	    ADDLIBS="-L../../ncurses/libraries" ./configure
d258 1
a258 1
		ADDLIBS="-L/a/b -L/e/f -ldb" ./configure
d263 1
a263 1
		./configure
@
