head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.8
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.6
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.2
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.7.0.4
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.6.0.54
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.52
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.48
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.46
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.44
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.42
	OPENBSD_5_0:1.6.0.40
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.38
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.36
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.32
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.34
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.30
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.28
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.26
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.24
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.22
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.20
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.18
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.16
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.14
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.12
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.10
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.8
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_8:1.4.0.14
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.12
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.9
date	2016.05.27.09.18.12;	author martijn;	state Exp;
branches;
next	1.8;
commitid	01nAnartGL7onLD3;

1.8
date	2016.05.02.18.24.25;	author martijn;	state Exp;
branches;
next	1.7;
commitid	ruCZ2IKF0FB0ebCr;

1.7
date	2014.11.06.10.48.52;	author bentley;	state Exp;
branches;
next	1.6;
commitid	ELEZXFZ7jYF35pM3;

1.6
date	2002.02.16.21.27.57;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.29.01.58.46;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	97.09.23.07.12.46;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	96.08.16.17.58.42;	author michaels;	state Exp;
branches;
next	1.2;

1.2
date	96.07.24.16.16.00;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	96.05.22.11.36.22;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Revert CHAR_T removal. Some signedness flaws were introduced.
Found the hard way by jca@@
@
text
@/*	$OpenBSD: cl_extern.h,v 1.7 2014/11/06 10:48:52 bentley Exp $	*/

int cl_addstr(SCR *, const char *, size_t);
int cl_attr(SCR *, scr_attr_t, int);
int cl_baud(SCR *, u_long *);
int cl_bell(SCR *);
int cl_clrtoeol(SCR *);
int cl_cursor(SCR *, size_t *, size_t *);
int cl_deleteln(SCR *);
int cl_ex_adjust(SCR *, exadj_t);
int cl_insertln(SCR *);
int cl_keyval(SCR *, scr_keyval_t, CHAR_T *, int *);
int cl_move(SCR *, size_t, size_t);
int cl_refresh(SCR *, int);
int cl_rename(SCR *, char *, int);
int cl_suspend(SCR *, int *);
void cl_usage(void);
int sig_init(GS *, SCR *);
int cl_event(SCR *, EVENT *, u_int32_t, int);
int cl_screen(SCR *, u_int32_t);
int cl_quit(GS *);
int cl_getcap(SCR *, char *, char **);
int cl_term_init(SCR *);
int cl_term_end(GS *);
int cl_fmap(SCR *, seq_t, CHAR_T *, size_t, CHAR_T *, size_t);
int cl_optchange(SCR *, int, char *, u_long *);
int cl_omesg(SCR *, CL_PRIVATE *, int);
int cl_ssize(SCR *, int, size_t *, size_t *, int *);
int cl_putchar(int);
@


1.8
log
@Remove CHAR_T in favor of native types.

schwarze@@ agrees with the direction.
Few tweaks and OK tb@@
@
text
@d12 1
a12 1
int cl_keyval(SCR *, scr_keyval_t, unsigned char *, int *);
d25 1
a25 1
int cl_fmap(SCR *, seq_t, char *, size_t, char *, size_t);
@


1.7
log
@Remove old curses support in vi.

ok nicm@@ millert@@ plus a comment tweak from nicm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cl_extern.h,v 1.6 2002/02/16 21:27:57 millert Exp $	*/
d12 1
a12 1
int cl_keyval(SCR *, scr_keyval_t, CHAR_T *, int *);
d25 1
a25 1
int cl_fmap(SCR *, seq_t, CHAR_T *, size_t, CHAR_T *, size_t);
@


1.6
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: cl_extern.h,v 1.5 2001/01/29 01:58:46 niklas Exp $	*/
a2 29
#ifndef HAVE_CURSES_ADDNSTR
int addnstr(char *, int);
#endif
#ifndef HAVE_CURSES_BEEP
void beep(void);
#endif
#ifndef HAVE_CURSES_FLASH
void flash(void);
#endif
#ifndef HAVE_CURSES_IDLOK
void idlok(WINDOW *, int);
#endif
#ifndef HAVE_CURSES_KEYPAD
int keypad(void *, int);
#endif
#ifndef HAVE_CURSES_NEWTERM
void *newterm(const char *, FILE *, FILE *);
#endif
#ifndef HAVE_CURSES_SETUPTERM
void setupterm(char *, int, int *);
#endif
#ifdef HAVE_CURSES_TIGETSTR
char *tigetstr();
#else
char *tigetstr(char *);
#endif
#ifndef HAVE_CURSES_TIGETSTR
int tigetnum(char *);
#endif
a28 3
#ifdef USE_OCURSES
void cl_putchar(int);
#else
a29 1
#endif
@


1.5
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
int addnstr __P((char *, int));
d7 1
a7 1
void beep __P((void));
d10 1
a10 1
void flash __P((void));
d13 1
a13 1
void idlok __P((WINDOW *, int));
d16 1
a16 1
int keypad __P((void *, int));
d19 1
a19 1
void *newterm __P((const char *, FILE *, FILE *));
d22 1
a22 1
void setupterm __P((char *, int, int *));
d27 1
a27 1
char *tigetstr __P((char *));
d30 1
a30 1
int tigetnum __P((char *));
d32 26
a57 26
int cl_addstr __P((SCR *, const char *, size_t));
int cl_attr __P((SCR *, scr_attr_t, int));
int cl_baud __P((SCR *, u_long *));
int cl_bell __P((SCR *));
int cl_clrtoeol __P((SCR *));
int cl_cursor __P((SCR *, size_t *, size_t *));
int cl_deleteln __P((SCR *));
int cl_ex_adjust __P((SCR *, exadj_t));
int cl_insertln __P((SCR *));
int cl_keyval __P((SCR *, scr_keyval_t, CHAR_T *, int *));
int cl_move __P((SCR *, size_t, size_t));
int cl_refresh __P((SCR *, int));
int cl_rename __P((SCR *, char *, int));
int cl_suspend __P((SCR *, int *));
void cl_usage __P((void));
int sig_init __P((GS *, SCR *));
int cl_event __P((SCR *, EVENT *, u_int32_t, int));
int cl_screen __P((SCR *, u_int32_t));
int cl_quit __P((GS *));
int cl_getcap __P((SCR *, char *, char **));
int cl_term_init __P((SCR *));
int cl_term_end __P((GS *));
int cl_fmap __P((SCR *, seq_t, CHAR_T *, size_t, CHAR_T *, size_t));
int cl_optchange __P((SCR *, int, char *, u_long *));
int cl_omesg __P((SCR *, CL_PRIVATE *, int));
int cl_ssize __P((SCR *, int, size_t *, size_t *, int *));
d59 1
a59 1
void cl_putchar __P((int));
d61 1
a61 1
int cl_putchar __P((int));
@


1.4
log
@Make building with ocurses/termcap and curses/termlib conditional on
USE_OCURSES being defined, and define it for now.  This switches nvi back
to use BSD curses.
@
text
@d1 2
@


1.3
log
@nvi 1.73
@
text
@d56 3
d60 1
@


1.2
log
@bring vi/ex up to 1.71
@
text
@d42 1
a42 1
int cl_rename __P((SCR *));
@


1.1
log
@new vi
@
text
@d22 3
a24 1
#ifndef HAVE_CURSES_TIGETSTR
d56 1
a56 1
void cl_putchar __P((int));
@
