head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.12
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.10
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.6
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.6.0.22
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.20
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.16
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.14
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.12
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.10
	OPENBSD_5_0:1.6.0.8
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.16
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.12
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.10
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.8
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.6
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.4
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.4.0.18
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.16
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.14
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2015.03.29.01.04.23;	author bcallah;	state Exp;
branches;
next	1.7;
commitid	KcEgXMM3P7dpQPm7;

1.7
date	2014.11.12.04.28.41;	author bentley;	state Exp;
branches;
next	1.6;
commitid	06bi6U3x4gFFf2G1;

1.6
date	2009.10.27.23.59.47;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.22.03.09.15;	author ray;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.57;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.29.01.58.46;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.05.22.11.36.16;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.44;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.44;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Remove SA_INTERRUPT, HISTORIC_PRACTICE, and HISTORICAL_PRACTICE using
unifdef. It seems clear that no one was using these (SA_INTERRUPT didn't
even build the other way). Tweak comments as appropriate.

ok brynet@@
@
text
@/*	$OpenBSD: ex_z.c,v 1.7 2014/11/12 04:28:41 bentley Exp $	*/

/*-
 * Copyright (c) 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 * Copyright (c) 1993, 1994, 1995, 1996
 *	Keith Bostic.  All rights reserved.
 *
 * See the LICENSE file for redistribution information.
 */

#include "config.h"

#include <sys/types.h>
#include <sys/queue.h>

#include <bitstring.h>
#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "../common/common.h"

/*
 * ex_z -- :[line] z [^-.+=] [count] [flags]
 *	Adjust window.
 *
 * PUBLIC: int ex_z(SCR *, EXCMD *);
 */
int
ex_z(SCR *sp, EXCMD *cmdp)
{
	MARK mark_abs;
	recno_t cnt, equals, lno;
	int eofcheck;

	NEEDFILE(sp, cmdp);

	/*
	 * !!!
	 * If no count specified, use either two times the size of the
	 * scrolling region, or the size of the window option.  POSIX
	 * 1003.2 claims that the latter is correct, but historic ex/vi
	 * documentation and practice appear to use the scrolling region.
	 * I'm using the window size as it means that the entire screen
	 * is used instead of losing a line to roundoff.  Note, we drop
	 * a line from the cnt if using the window size to leave room for
	 * the next ex prompt.
	 */
	if (FL_ISSET(cmdp->iflags, E_C_COUNT))
		cnt = cmdp->count;
	else
		cnt = O_VAL(sp, O_WINDOW) - 1;

	equals = 0;
	eofcheck = 0;
	lno = cmdp->addr1.lno;

	switch (FL_ISSET(cmdp->iflags,
	    E_C_CARAT | E_C_DASH | E_C_DOT | E_C_EQUAL | E_C_PLUS)) {
	case E_C_CARAT:		/* Display cnt * 2 before the line. */
		eofcheck = 1;
		if (lno > cnt * 2)
			cmdp->addr1.lno = (lno - cnt * 2) + 1;
		else
			cmdp->addr1.lno = 1;
		cmdp->addr2.lno = (cmdp->addr1.lno + cnt) - 1;
		break;
	case E_C_DASH:		/* Line goes at the bottom of the screen. */
		cmdp->addr1.lno = lno > cnt ? (lno - cnt) + 1 : 1;
		cmdp->addr2.lno = lno;
		break;
	case E_C_DOT:		/* Line goes in the middle of the screen. */
		/*
		 * !!!
		 * Historically, the "middleness" of the line overrode the
		 * count, so that "3z.19" or "3z.20" would display the first
		 * 12 lines of the file, i.e. (N - 1) / 2 lines before and
		 * after the specified line.
		 */
		eofcheck = 1;
		cnt = (cnt - 1) / 2;
		cmdp->addr1.lno = lno > cnt ? lno - cnt : 1;
		cmdp->addr2.lno = lno + cnt;

		/*
		 * !!!
		 * Historically, z. set the absolute cursor mark.
		 */
		mark_abs.lno = sp->lno;
		mark_abs.cno = sp->cno;
		(void)mark_set(sp, ABSMARK1, &mark_abs, 1);
		break;
	case E_C_EQUAL:		/* Center with hyphens. */
		/*
		 * !!!
		 * Strangeness.  The '=' flag is like the '.' flag (see the
		 * above comment, it applies here as well) but with a special
		 * little hack.  Print out lines of hyphens before and after
		 * the specified line.  Additionally, the cursor remains set
		 * on that line.
		 */
		eofcheck = 1;
		cnt = (cnt - 1) / 2;
		cmdp->addr1.lno = lno > cnt ? lno - cnt : 1;
		cmdp->addr2.lno = lno - 1;
		if (ex_pr(sp, cmdp))
			return (1);
		(void)ex_puts(sp, "----------------------------------------\n");
		cmdp->addr2.lno = cmdp->addr1.lno = equals = lno;
		if (ex_pr(sp, cmdp))
			return (1);
		(void)ex_puts(sp, "----------------------------------------\n");
		cmdp->addr1.lno = lno + 1;
		cmdp->addr2.lno = (lno + cnt) - 1;
		break;
	default:
		/* If no line specified, move to the next one. */
		if (F_ISSET(cmdp, E_ADDR_DEF))
			++lno;
		/* FALLTHROUGH */
	case E_C_PLUS:		/* Line goes at the top of the screen. */
		eofcheck = 1;
		cmdp->addr1.lno = lno;
		cmdp->addr2.lno = (lno + cnt) - 1;
		break;
	}

	if (eofcheck) {
		if (db_last(sp, &lno))
			return (1);
		if (cmdp->addr2.lno > lno)
			cmdp->addr2.lno = lno;
	}

	if (ex_pr(sp, cmdp))
		return (1);
	if (equals)
		sp->lno = equals;
	return (0);
}
@


1.7
log
@Ansify vi.

ok bcallah@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ex_z.c,v 1.6 2009/10/27 23:59:47 deraadt Exp $	*/
a53 3
#ifdef HISTORIC_PRACTICE
		cnt = O_VAL(sp, O_SCROLL) * 2;
#else
a54 1
#endif
@


1.6
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: ex_z.c,v 1.5 2006/04/22 03:09:15 ray Exp $	*/
d32 1
a32 3
ex_z(sp, cmdp)
	SCR *sp;
	EXCMD *cmdp;
@


1.5
log
@Removes unused variables and rename variables shadowing external
variables.  No binary change.

Found by lint.

OK otto@@ and jaredy@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ex_z.c,v 1.4 2002/02/16 21:27:57 millert Exp $	*/
a12 4

#ifndef lint
static const char sccsid[] = "@@(#)ex_z.c	10.10 (Berkeley) 3/6/96";
#endif /* not lint */
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: ex_z.c,v 1.3 2001/01/29 01:58:46 niklas Exp $	*/
d40 1
a40 1
	MARK abs;
d101 3
a103 3
		abs.lno = sp->lno;
		abs.cno = sp->cno;
		(void)mark_set(sp, ABSMARK1, &abs, 1);
@


1.3
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d33 1
a33 1
 * PUBLIC: int ex_z __P((SCR *, EXCMD *));
@


1.2
log
@new vi
@
text
@d1 2
@


1.1
log
@Initial revision
@
text
@d4 2
d7 1
a7 27
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
d10 2
d13 1
a13 1
static char sccsid[] = "@@(#)ex_z.c	8.8 (Berkeley) 8/17/94";
a17 1
#include <sys/time.h>
a20 1
#include <signal.h>
a23 5
#include <termios.h>

#include "compat.h"
#include <db.h>
#include <regex.h>
d25 1
a25 2
#include "vi.h"
#include "excmd.h"
d29 1
d31 1
a31 1
 *	Adjust window.
d34 1
a34 1
ex_z(sp, ep, cmdp)
d36 1
a36 2
	EXF *ep;
	EXCMDARG *cmdp;
d42 2
d55 1
a55 1
	if (F_ISSET(cmdp, E_COUNT))
d68 3
a70 3
	switch (F_ISSET(cmdp,
	    E_F_CARAT | E_F_DASH | E_F_DOT | E_F_EQUAL | E_F_PLUS)) {
	case E_F_CARAT:		/* Display cnt * 2 before the line. */
d78 1
a78 1
	case E_F_DASH:		/* Line goes at the bottom of the screen. */
d82 1
a82 1
	case E_F_DOT:		/* Line goes in the middle of the screen. */
d101 1
a101 1
		(void)mark_set(sp, ep, ABSMARK1, &abs, 1);
d103 1
a103 1
	case E_F_EQUAL:		/* Center with hyphens. */
d116 1
a116 1
		if (ex_pr(sp, ep, cmdp))
d118 1
a118 2
		(void)ex_printf(EXCOOKIE,
		    "%s", "----------------------------------------\n");
d120 1
a120 1
		if (ex_pr(sp, ep, cmdp))
d122 1
a122 2
		(void)ex_printf(EXCOOKIE,
		    "%s", "----------------------------------------\n");
d128 1
a128 1
		if (F_ISSET(cmdp, E_ADDRDEF))
d131 1
a131 1
	case E_F_PLUS:		/* Line goes at the top of the screen. */
d139 1
a139 1
		if (file_lline(sp, ep, &lno))
d145 1
a145 1
	if (ex_pr(sp, ep, cmdp))
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
