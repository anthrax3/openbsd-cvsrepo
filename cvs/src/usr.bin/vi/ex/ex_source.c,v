head	1.10;
access;
symbols
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.8
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.8
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.6
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.14
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.12
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.34
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.30
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.28
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.26
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.24
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.22
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.20
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.18
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.16
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.14
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.12
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.10
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.8
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.14
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.12
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.10
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.8
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2015.12.07.20.39.19;	author mmcc;	state Exp;
branches;
next	1.9;
commitid	gtDERb7QyXwKGs62;

1.9
date	2014.11.12.04.28.41;	author bentley;	state Exp;
branches;
next	1.8;
commitid	06bi6U3x4gFFf2G1;

1.8
date	2013.05.03.20.43.25;	author kili;	state Exp;
branches;
next	1.7;

1.7
date	2009.10.27.23.59.47;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.02.16.21.27.57;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.29.01.58.44;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.08.16.17.58.37;	author michaels;	state Exp;
branches;
next	1.3;

1.3
date	96.07.24.16.15.55;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.05.22.11.36.07;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.43;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.43;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Remove needless type casts and corresponding type parameters from
allocation macros. No binary change.

ok tb@@
@
text
@/*	$OpenBSD: ex_source.c,v 1.9 2014/11/12 04:28:41 bentley Exp $	*/

/*-
 * Copyright (c) 1992, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 * Copyright (c) 1992, 1993, 1994, 1995, 1996
 *	Keith Bostic.  All rights reserved.
 *
 * See the LICENSE file for redistribution information.
 */

#include "config.h"

#include <sys/types.h>
#include <sys/queue.h>
#include <sys/stat.h>

#include <bitstring.h>
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "../common/common.h"

/*
 * ex_sourcefd -- :source already opened file
 *	Execute ex commands from the given file descriptor
 *
 * PUBLIC: int ex_sourcefd(SCR *, EXCMD *, int);
 */
int
ex_sourcefd(SCR *sp, EXCMD *cmdp, int fd)
{
	struct stat sb;
	int len;
	char *bp, *name;

	name = cmdp->argv[0]->bp;
	if (fstat(fd, &sb))
		goto err;

	/*
	 * XXX
	 * I'd like to test to see if the file is too large to malloc.  Since
	 * we don't know what size or type off_t's or size_t's are, what the
	 * largest unsigned integral type is, or what random insanity the local
	 * C compiler will perpetrate, doing the comparison in a portable way
	 * is flatly impossible.  So, put an fairly unreasonable limit on it,
	 * I don't want to be dropping core here.
	 */
#define	MEGABYTE	1048576
	if (sb.st_size > MEGABYTE) {
		errno = ENOMEM;
		goto err;
	}

	MALLOC(sp, bp, (size_t)sb.st_size + 1);
	if (bp == NULL) {
		(void)close(fd);
		return (1);
	}
	bp[sb.st_size] = '\0';

	/* Read the file into memory. */
	len = read(fd, bp, (int)sb.st_size);
	(void)close(fd);
	if (len == -1 || len != sb.st_size) {
		if (len != sb.st_size)
			errno = EIO;
		free(bp);
err:		msgq_str(sp, M_SYSERR, name, "%s");
		return (1);
	}

	/* Put it on the ex queue. */
	return (ex_run_str(sp, name, bp, (size_t)sb.st_size, 1, 1));
}

/*
 * ex_source -- :source file
 *	Execute ex commands from a file.
 *
 * PUBLIC: int ex_source(SCR *, EXCMD *);
 */
int
ex_source(SCR *sp, EXCMD *cmdp)
{
	char *name;
	int fd;

	name = cmdp->argv[0]->bp;
	if ((fd = open(name, O_RDONLY, 0)) >= 0)
		return (ex_sourcefd(sp, cmdp, fd));

	msgq_str(sp, M_SYSERR, name, "%s");
	return (1);
}
@


1.9
log
@Ansify vi.

ok bcallah@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ex_source.c,v 1.8 2013/05/03 20:43:25 kili Exp $	*/
d61 1
a61 1
	MALLOC(sp, bp, char *, (size_t)sb.st_size + 1);
@


1.8
log
@Use open(2) / fstat(2) instead of stat(2) / open(2) for checking
proper permissions of "local" .exrc or .nexrc files.

With some hints and fixes from deraadt@@ and tobias@@.

ok millert@@ tobias@@

(more tweaks suggested by millert@@ and some cleanup will be done
in separate diffs)
@
text
@d1 1
a1 1
/*	$OpenBSD: ex_source.c,v 1.7 2009/10/27 23:59:47 deraadt Exp $	*/
d36 1
a36 4
ex_sourcefd(sp, cmdp, fd)
	SCR *sp;
	EXCMD *cmdp;
	int fd;
d90 1
a90 3
ex_source(sp, cmdp)
	SCR *sp;
	EXCMD *cmdp;
@


1.7
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: ex_source.c,v 1.6 2002/02/16 21:27:57 millert Exp $	*/
d30 2
a31 2
 * ex_source -- :source file
 *	Execute ex commands from a file.
d33 1
a33 1
 * PUBLIC: int ex_source(SCR *, EXCMD *);
d36 1
a36 1
ex_source(sp, cmdp)
d39 1
d42 1
a42 1
	int fd, len;
d46 1
a46 1
	if ((fd = open(name, O_RDONLY, 0)) < 0 || fstat(fd, &sb))
d84 22
@


1.6
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: ex_source.c,v 1.5 2001/01/29 01:58:44 niklas Exp $	*/
a12 4

#ifndef lint
static const char sccsid[] = "@@(#)ex_source.c	10.12 (Berkeley) 8/10/96";
#endif /* not lint */
@


1.5
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
a37 1
 * PUBLIC: int ex_source __P((SCR *, EXCMD *));
@


1.4
log
@nvi 1.73
@
text
@d1 2
@


1.3
log
@bring vi/ex up to 1.71
@
text
@d13 1
a13 1
static const char sccsid[] = "@@(#)ex_source.c	10.11 (Berkeley) 6/30/96";
d65 1
a65 1
	MALLOC(sp, bp, char *, (size_t)sb.st_size);
@


1.2
log
@new vi
@
text
@d13 1
a13 1
static const char sccsid[] = "@@(#)ex_source.c	10.10 (Berkeley) 4/22/96";
d65 1
a65 2
	/* See ex.h for a discussion of SEARCH_TERMINATION. */
	MALLOC(sp, bp, char *, (size_t)sb.st_size + SEARCH_TERMINATION);
@


1.1
log
@Initial revision
@
text
@d4 2
d7 1
a7 27
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
d10 2
d13 1
a13 1
static char sccsid[] = "@@(#)ex_source.c	8.7 (Berkeley) 8/17/94";
d18 1
a18 1
#include <sys/time.h>
d21 2
a23 1
#include <signal.h>
d25 3
a27 5
#include <termios.h>

#include "compat.h"
#include <db.h>
#include <regex.h>
d29 1
a29 2
#include "vi.h"
#include "excmd.h"
d34 2
d38 1
a38 1
ex_source(sp, ep, cmdp)
d40 1
a40 2
	EXF *ep;
	EXCMDARG *cmdp;
d42 44
a85 1
	return (ex_cfile(sp, ep, cmdp->argv[0]->bp, 0));
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
