head	1.18;
access;
symbols
	OPENBSD_6_2_BASE:1.18
	OPENBSD_6_1:1.18.0.6
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.2
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.14.0.4
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.11.0.6
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.4
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.9.0.32
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.30
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.28
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.26
	OPENBSD_5_0:1.9.0.24
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.22
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.20
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.16
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.18
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.14
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.12
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.10
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.8
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.6
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.4
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.7.0.16
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.14
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.12
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.10
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.8
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.16
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.14
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.18
date	2016.05.27.09.18.11;	author martijn;	state Exp;
branches;
next	1.17;
commitid	01nAnartGL7onLD3;

1.17
date	2016.05.02.18.24.25;	author martijn;	state Exp;
branches;
next	1.16;
commitid	ruCZ2IKF0FB0ebCr;

1.16
date	2016.01.30.21.23.50;	author martijn;	state Exp;
branches;
next	1.15;
commitid	coLzsk3wkJh1a1Ez;

1.15
date	2016.01.06.22.27.39;	author millert;	state Exp;
branches;
next	1.14;
commitid	WTL2xUDqwK7LLJKC;

1.14
date	2015.03.27.04.11.25;	author brynet;	state Exp;
branches;
next	1.13;
commitid	xTl6pibBNLW0U9wQ;

1.13
date	2014.11.20.08.50.53;	author bentley;	state Exp;
branches;
next	1.12;
commitid	DAfFYTGOAzdEQS6z;

1.12
date	2014.11.14.20.26.12;	author tedu;	state Exp;
branches;
next	1.11;
commitid	WFlGLZb3PUIUZTHF;

1.11
date	2013.12.01.20.22.34;	author krw;	state Exp;
branches;
next	1.10;

1.10
date	2013.11.28.22.12.40;	author krw;	state Exp;
branches;
next	1.9;

1.9
date	2006.01.08.21.05.39;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2005.10.17.19.12.16;	author otto;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.27.57;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.29.01.58.29;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.10.16.01.18.15;	author michaels;	state Exp;
branches;
next	1.4;

1.4
date	96.08.16.17.58.20;	author michaels;	state Exp;
branches;
next	1.3;

1.3
date	96.07.24.16.15.18;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.05.22.11.34.00;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.37;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.37;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Revert CHAR_T removal. Some signedness flaws were introduced.
Found the hard way by jca@@
@
text
@/*	$OpenBSD: gs.h,v 1.16 2016/01/30 21:23:50 martijn Exp $	*/

/*-
 * Copyright (c) 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 * Copyright (c) 1993, 1994, 1995, 1996
 *	Keith Bostic.  All rights reserved.
 *
 * See the LICENSE file for redistribution information.
 *
 *	@@(#)gs.h	10.34 (Berkeley) 9/24/96
 */

#define	TEMPORARY_FILE_STRING	"/tmp"	/* Default temporary file name. */

/*
 * File reference structure (FREF).  The structure contains the name of the
 * file, along with the information that follows the name.
 *
 * !!!
 * The read-only bit follows the file name, not the file itself.
 */
struct _fref {
	TAILQ_ENTRY(_fref) q;		/* Linked list of file references. */
	char	*name;			/* File name. */
	char	*tname;			/* Backing temporary file name. */

	recno_t	 lno;			/* 1-N: file cursor line. */
	size_t	 cno;			/* 0-N: file cursor column. */

#define	FR_CURSORSET	0x0001		/* If lno/cno values valid. */
#define	FR_DONTDELETE	0x0002		/* Don't delete the temporary file. */
#define	FR_EXNAMED	0x0004		/* Read/write renamed the file. */
#define	FR_NAMECHANGE	0x0008		/* If the name changed. */
#define	FR_NEWFILE	0x0010		/* File doesn't really exist yet. */
#define	FR_RECOVER	0x0020		/* File is being recovered. */
#define	FR_TMPEXIT	0x0040		/* Modified temporary file, no exit. */
#define	FR_TMPFILE	0x0080		/* If file has no name. */
#define	FR_UNLOCKED	0x0100		/* File couldn't be locked. */
	u_int16_t flags;
};

/* Action arguments to scr_exadjust(). */
typedef enum { EX_TERM_CE, EX_TERM_SCROLL } exadj_t;

/* Screen attribute arguments to scr_attr(). */
typedef enum { SA_ALTERNATE, SA_INVERSE } scr_attr_t;

/* Key type arguments to scr_keyval(). */
typedef enum { KEY_VEOF, KEY_VERASE, KEY_VKILL, KEY_VWERASE } scr_keyval_t;

/*
 * GS:
 *
 * Structure that describes global state of the running program.
 */
struct _gs {
	int	 id;			/* Last allocated screen id. */
	TAILQ_HEAD(_dqh, _scr) dq;	/* Displayed screens. */
	TAILQ_HEAD(_hqh, _scr) hq;	/* Hidden screens. */

	SCR	*ccl_sp;		/* Colon command-line screen. */

	void	*cl_private;		/* Curses support private area. */

					/* File references. */
	TAILQ_HEAD(_frefh, _fref) frefq;

#define	GO_COLUMNS	0		/* Global options: columns. */
#define	GO_LINES	1		/* Global options: lines. */
#define	GO_SECURE	2		/* Global options: secure. */
#define	GO_TERM		3		/* Global options: terminal type. */
	OPTION	 opts[GO_TERM + 1];

	MSGH	 msgq;			/* User message list. */
#define	DEFAULT_NOPRINT	'\1'		/* Emergency non-printable character. */
	CHAR_T	 noprint;		/* Cached, unprintable character. */

	char	*tmp_bp;		/* Temporary buffer. */
	size_t	 tmp_blen;		/* Temporary buffer size. */

	/*
	 * Ex command structures (EXCMD).  Defined here because ex commands
	 * exist outside of any particular screen or file.
	 */
#define	EXCMD_RUNNING(gp)	(LIST_FIRST(&(gp)->ecq)->clen != 0)
	LIST_HEAD(_excmdh, _excmd) ecq;	/* Ex command linked list. */
	EXCMD	 excmd;			/* Default ex command structure. */
	char	 *if_name;		/* Current associated file. */
	recno_t	  if_lno;		/* Current associated line number. */

	char	*c_option;		/* Ex initial, command-line command. */

#ifdef DEBUG
	FILE	*tracefp;		/* Trace file pointer. */
#endif

	EVENT	*i_event;		/* Array of input events. */
	size_t	 i_nelem;		/* Number of array elements. */
	size_t	 i_cnt;			/* Count of events. */
	size_t	 i_next;		/* Offset of next event. */

	CB	*dcbp;			/* Default cut buffer pointer. */
	CB	 dcb_store;		/* Default cut buffer storage. */
	LIST_HEAD(_cuth, _cb) cutq;	/* Linked list of cut buffers. */

#define	MAX_BIT_SEQ	128		/* Max + 1 fast check character. */
	LIST_HEAD(_seqh, _seq) seqq;	/* Linked list of maps, abbrevs. */
	bitstr_t bit_decl(seqb, MAX_BIT_SEQ);

#define	MAX_FAST_KEY	254		/* Max fast check character.*/
#define	KEY_LEN(sp, ch)							\
	((unsigned char)(ch) <= MAX_FAST_KEY ?				\
	    (sp)->gp->cname[(unsigned char)(ch)].len :			\
	    v_key_len((sp), (ch)))
#define	KEY_NAME(sp, ch)						\
	((unsigned char)(ch) <= MAX_FAST_KEY ?				\
	    (sp)->gp->cname[(unsigned char)(ch)].name :			\
	    v_key_name((sp), (ch)))
	struct {
		CHAR_T	 name[MAX_CHARACTER_COLUMNS + 1];
		u_int8_t len;
	} cname[MAX_FAST_KEY + 1];	/* Fast lookup table. */

#define	KEY_VAL(sp, ch)							\
	((unsigned char)(ch) <= MAX_FAST_KEY ? 				\
	    (sp)->gp->special_key[(unsigned char)(ch)] :		\
	    (unsigned char)(ch) > (sp)->gp->max_special ? 0 :		\
	    v_key_val((sp),(ch)))
	CHAR_T	 max_special;		/* Max special character. */
	u_char				/* Fast lookup table. */
	    special_key[MAX_FAST_KEY + 1];

/* Flags. */
#define	G_ABBREV	0x0001		/* If have abbreviations. */
#define	G_BELLSCHED	0x0002		/* Bell scheduled. */
#define	G_INTERRUPTED	0x0004		/* Interrupted. */
#define	G_RECOVER_SET	0x0008		/* Recover system initialized. */
#define	G_SCRIPTED	0x0010		/* Ex script session. */
#define	G_SCRWIN	0x0020		/* Scripting windows running. */
#define	G_SNAPSHOT	0x0040		/* Always snapshot files. */
#define	G_SRESTART	0x0080		/* Screen restarted. */
#define	G_TMP_INUSE	0x0100		/* Temporary buffer in use. */
	u_int32_t flags;

	/* Screen interface functions. */
					/* Add a string to the screen. */
	int	(*scr_addstr)(SCR *, const char *, size_t);
					/* Toggle a screen attribute. */
	int	(*scr_attr)(SCR *, scr_attr_t, int);
					/* Terminal baud rate. */
	int	(*scr_baud)(SCR *, u_long *);
					/* Beep/bell/flash the terminal. */
	int	(*scr_bell)(SCR *);
					/* Display a busy message. */
	void	(*scr_busy)(SCR *, const char *, busy_t);
					/* Clear to the end of the line. */
	int	(*scr_clrtoeol)(SCR *);
					/* Return the cursor location. */
	int	(*scr_cursor)(SCR *, size_t *, size_t *);
					/* Delete a line. */
	int	(*scr_deleteln)(SCR *);
					/* Get a keyboard event. */
	int	(*scr_event)(SCR *, EVENT *, u_int32_t, int);
					/* Ex: screen adjustment routine. */
	int	(*scr_ex_adjust)(SCR *, exadj_t);
	int	(*scr_fmap)		/* Set a function key. */
(SCR *, seq_t, CHAR_T *, size_t, CHAR_T *, size_t);
					/* Get terminal key value. */
	int	(*scr_keyval)(SCR *, scr_keyval_t, CHAR_T *, int *);
					/* Insert a line. */
	int	(*scr_insertln)(SCR *);
					/* Handle an option change. */
	int	(*scr_optchange)(SCR *, int, char *, u_long *);
					/* Move the cursor. */
	int	(*scr_move)(SCR *, size_t, size_t);
					/* Message or ex output. */
	void	(*scr_msg)(SCR *, mtype_t, char *, size_t);
					/* Refresh the screen. */
	int	(*scr_refresh)(SCR *, int);
					/* Rename the file. */
	int	(*scr_rename)(SCR *, char *, int);
					/* Set the screen type. */
	int	(*scr_screen)(SCR *, u_int32_t);
					/* Suspend the editor. */
	int	(*scr_suspend)(SCR *, int *);
					/* Print usage message. */
	void	(*scr_usage)(void);
};
@


1.17
log
@Remove CHAR_T in favor of native types.

schwarze@@ agrees with the direction.
Few tweaks and OK tb@@
@
text
@d77 1
a77 1
	char	 noprint;		/* Cached, unprintable character. */
d121 1
a121 1
		char	 name[MAX_CHARACTER_COLUMNS + 1];
d130 1
a130 1
	char	 max_special;		/* Max special character. */
d168 1
a168 1
(SCR *, seq_t, char *, size_t, char *, size_t);
d170 1
a170 1
	int	(*scr_keyval)(SCR *, scr_keyval_t, unsigned char *, int *);
@


1.16
log
@replace progname variable in gs structure with getprogname

OK zhuk@@ and tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: gs.h,v 1.15 2016/01/06 22:27:39 millert Exp $	*/
d77 1
a77 1
	CHAR_T	 noprint;		/* Cached, unprintable character. */
d121 1
a121 1
		CHAR_T	 name[MAX_CHARACTER_COLUMNS + 1];
d130 1
a130 1
	CHAR_T	 max_special;		/* Max special character. */
d168 1
a168 1
(SCR *, seq_t, CHAR_T *, size_t, CHAR_T *, size_t);
d170 1
a170 1
	int	(*scr_keyval)(SCR *, scr_keyval_t, CHAR_T *, int *);
@


1.15
log
@Remove the message catalog DB.  This removes the msg_open() and
msg_close() functions along with the msgcat command.
From Martijn van Duren
@
text
@d1 1
a1 1
/*	$OpenBSD: gs.h,v 1.14 2015/03/27 04:11:25 brynet Exp $	*/
a57 2
	char	*progname;		/* Programe name. */

@


1.14
log
@Some vi cleanup, unifdef's some signal blocking code that has never been
enabled in our tree, also removes some stragglers from a global struct
referencing nonexistent Tcl/TK and "IP support". And finally.. deletes
an empty file missed by earlier cleanup by bentley@@.

Inspired by and ok bcallah@@
@
text
@d1 1
a1 1
/*	$OpenBSD: gs.h,v 1.13 2014/11/20 08:50:53 bentley Exp $	*/
a76 1
	DB	*msg;			/* Message catalog DB. */
@


1.13
log
@Remove the vi perl api.

There have been various build errors for coming on two years now.
It doesn't work and nobody has expressed any interest in saving it.

From natano; ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: gs.h,v 1.12 2014/11/14 20:26:12 tedu Exp $	*/
a66 2
	void	*ip_private;		/* IP support private area. */
	void	*tk_private;		/* Tk/Tcl support private area. */
a192 18

/*
 * XXX
 * Block signals if there are asynchronous events.  Used to keep DB system calls
 * from being interrupted and not restarted, as that will result in consistency
 * problems.  This should be handled by DB.
 */
#ifdef BLOCK_SIGNALS
#include <signal.h>
extern sigset_t	__sigblockset;
#define	SIGBLOCK \
	(void)sigprocmask(SIG_BLOCK, &__sigblockset, NULL)
#define	SIGUNBLOCK \
	(void)sigprocmask(SIG_UNBLOCK, &__sigblockset, NULL);
#else
#define	SIGBLOCK
#define	SIGUNBLOCK
#endif
@


1.12
log
@from natano:
The 'tcl' command in vi does nothing, except to print the message
"Vi was not loaded with a Tcl interpreter". Printing the standard
message for unknown commands would be equally descriptive with the
benefit of reducing code size.
@
text
@d1 1
a1 1
/*	$OpenBSD: gs.h,v 1.11 2013/12/01 20:22:34 krw Exp $	*/
a64 2

	void	*perl_interp;		/* Perl interpreter. */
@


1.11
log
@Change the file reference queue from CIRCLEQ to TAILQ.

vi is now CIRCLEQ free!

ok zhuk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: gs.h,v 1.10 2013/11/28 22:12:40 krw Exp $	*/
a66 1
	void	*tcl_interp;		/* Tcl_Interp *: Tcl interpreter. */
@


1.10
log
@Convert the display screens and hidden screens CIRCLEQ's to TAILQ's.

ok pelikan@@ zhuk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: gs.h,v 1.9 2006/01/08 21:05:39 miod Exp $	*/
d24 1
a24 1
	CIRCLEQ_ENTRY(_fref) q;		/* Linked list of file references. */
d74 1
a74 1
	CIRCLEQ_HEAD(_frefh, _fref) frefq;
@


1.9
log
@Explicit braces around macro fields and logical operations, gets rid of 148
warnings, no functional change.

From Ray Lai.
@
text
@d1 1
a1 1
/*	$OpenBSD: gs.h,v 1.8 2005/10/17 19:12:16 otto Exp $	*/
d61 2
a62 2
	CIRCLEQ_HEAD(_dqh, _scr) dq;	/* Displayed screens. */
	CIRCLEQ_HEAD(_hqh, _scr) hq;	/* Hidden screens. */
@


1.8
log
@Use queue macros instead of directly accessing fields. ok pat@@ "put it
in" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: gs.h,v 1.7 2002/02/16 21:27:57 millert Exp $	*/
d122 2
a123 1
	    sp->gp->cname[(unsigned char)ch].len : v_key_len(sp, ch))
d126 2
a127 1
	    sp->gp->cname[(unsigned char)ch].name : v_key_name(sp, ch))
d135 3
a137 2
	    sp->gp->special_key[(unsigned char)ch] :			\
	    (unsigned char)(ch) > sp->gp->max_special ? 0 : v_key_val(sp,ch))
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: gs.h,v 1.6 2001/01/29 01:58:29 niklas Exp $	*/
d94 1
a94 1
#define	EXCMD_RUNNING(gp)	((gp)->ecq.lh_first->clen != 0)
@


1.6
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d153 1
a153 1
	int	(*scr_addstr) __P((SCR *, const char *, size_t));
d155 1
a155 1
	int	(*scr_attr) __P((SCR *, scr_attr_t, int));
d157 1
a157 1
	int	(*scr_baud) __P((SCR *, u_long *));
d159 1
a159 1
	int	(*scr_bell) __P((SCR *));
d161 1
a161 1
	void	(*scr_busy) __P((SCR *, const char *, busy_t));
d163 1
a163 1
	int	(*scr_clrtoeol) __P((SCR *));
d165 1
a165 1
	int	(*scr_cursor) __P((SCR *, size_t *, size_t *));
d167 1
a167 1
	int	(*scr_deleteln) __P((SCR *));
d169 1
a169 1
	int	(*scr_event) __P((SCR *, EVENT *, u_int32_t, int));
d171 1
a171 1
	int	(*scr_ex_adjust) __P((SCR *, exadj_t));
d173 1
a173 1
	    __P((SCR *, seq_t, CHAR_T *, size_t, CHAR_T *, size_t));
d175 1
a175 1
	int	(*scr_keyval) __P((SCR *, scr_keyval_t, CHAR_T *, int *));
d177 1
a177 1
	int	(*scr_insertln) __P((SCR *));
d179 1
a179 1
	int	(*scr_optchange) __P((SCR *, int, char *, u_long *));
d181 1
a181 1
	int	(*scr_move) __P((SCR *, size_t, size_t));
d183 1
a183 1
	void	(*scr_msg) __P((SCR *, mtype_t, char *, size_t));
d185 1
a185 1
	int	(*scr_refresh) __P((SCR *, int));
d187 1
a187 1
	int	(*scr_rename) __P((SCR *, char *, int));
d189 1
a189 1
	int	(*scr_screen) __P((SCR *, u_int32_t));
d191 1
a191 1
	int	(*scr_suspend) __P((SCR *, int *));
d193 1
a193 1
	void	(*scr_usage) __P((void));
@


1.5
log
@nvi 1.78:
        + Fix bugs when both the leftright scrolling and number edit options
          were on.
        + Fix bug where splitting in the middle of the screen could repaint
          incorrectly.
        + Fix first-nul in input bug, where random garbage was inserted.
        + Correct search and mark-as-motion-command bug, it's a line mode
          action if the search starts at or before the first non<blank>.
        + Fix bug autoindent bug, where ^D could shift too far in the line.
        + Fix core dump where ! command called from the .exrc file.
        + Add the -S command-line option, which initializes vi to have the
          secure edit option preset.
@
text
@d1 2
@


1.4
log
@nvi 1.73
@
text
@d9 1
a9 1
 *	@@(#)gs.h	10.33 (Berkeley) 7/12/96
d142 4
a145 4
#define	G_SCRIPT	0x0010		/* Scripting windows running. */
#define	G_SNAPSHOT	0x0020		/* Always snapshot files. */
#define	G_SRESTART	0x0040		/* Screen restarted. */
#define	G_STDIN_TTY	0x0080		/* Standard input is a tty. */
@


1.3
log
@bring vi/ex up to 1.71
@
text
@d9 1
a9 1
 *	@@(#)gs.h	10.32 (Berkeley) 6/18/96
d185 1
a185 1
	int	(*scr_rename) __P((SCR *));
@


1.2
log
@new vi
@
text
@d9 1
a9 1
 *	@@(#)gs.h	10.29 (Berkeley) 4/15/96
d41 1
a41 1
/* Action argument to scr_exadjust(). */
d44 2
a45 2
/* Screen attribute argument to scr_attr(). */
typedef enum { SA_INVERSE } scr_attr_t;
d47 1
a47 1
/* Key type argument to scr_keyval(). */
d49 1
a49 1
 
d68 1
a69 1
	void	*xaw_private;		/* XAW support private area. */
d159 1
a159 1
	void	(*scr_busy) __P((SCR *, char const *, busy_t));
@


1.1
log
@Initial revision
@
text
@d4 2
d7 1
a7 15
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
d9 8
a16 11
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
d18 2
a19 1
 *	@@(#)gs.h	8.39 (Berkeley) 7/23/94
d21 19
d41 14
d56 3
d62 1
a62 3
	mode_t	 origmode;		/* Original terminal mode. */
	struct termios
		 original_termios;	/* Original terminal values. */
d64 17
d82 2
d86 11
a96 1
	size_t	 tmp_blen;		/* Size of temporary buffer. */
d98 1
a98 1
	sigset_t blockset;		/* Signal mask. */
d104 4
a107 2
/* INFORMATION SHARED BY ALL SCREENS. */
	IBUF	*tty;			/* Key input buffer. */
d119 2
a120 2
	((ch) <= MAX_FAST_KEY ?						\
	    sp->gp->cname[ch].len : __key_len(sp, ch))
d122 2
a123 2
	((ch) <= MAX_FAST_KEY ?						\
	    sp->gp->cname[ch].name : __key_name(sp, ch))
d130 3
a132 2
	((ch) <= MAX_FAST_KEY ? sp->gp->special_key[ch] :		\
	    (ch) > sp->gp->max_special ? 0 : __key_val(sp, ch))
d137 1
a137 8
/* Interrupt macros. */
#define	INTERRUPTED(sp)							\
	(F_ISSET((sp), S_INTERRUPTED) || F_ISSET((sp)->gp, G_SIGINT))
#define	CLR_INTERRUPT(sp) {						\
	F_CLR((sp), S_INTERRUPTED | S_INTERRUPTIBLE);			\
	F_CLR((sp)->gp, G_SIGINT);					\
}

d140 52
a191 10
#define	G_RECOVER_SET	0x0004		/* Recover system initialized. */
#define	G_SETMODE	0x0008		/* Tty mode changed. */
#define	G_SIGALRM	0x0010		/* SIGALRM arrived. */
#define	G_SIGINT	0x0020		/* SIGINT arrived. */
#define	G_SIGWINCH	0x0040		/* SIGWINCH arrived. */
#define	G_SNAPSHOT	0x0080		/* Always snapshot files. */
#define	G_STDIN_TTY	0x0100		/* Standard input is a tty. */
#define	G_TERMIOS_SET	0x0200		/* Termios structure is valid. */
#define	G_TMP_INUSE	0x0400		/* Temporary buffer in use. */
	u_int16_t flags;
d194 17
a210 1
extern GS *__global_list;		/* List of screens. */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
