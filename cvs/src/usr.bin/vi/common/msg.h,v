head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.70
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.68
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.64
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.60
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.62
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.54
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.58
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.56
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.52
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.50
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.48
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.46
	OPENBSD_5_0:1.3.0.44
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.42
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.40
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.36
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.38
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.34
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.32
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.30
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.28
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.26
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.24
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.22
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.20
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.18
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.16
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.14
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.12
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.10
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.8
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2001.01.29.01.58.31;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.05.22.11.34.08;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.38;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.38;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@$OpenBSD$
@
text
@/*	$OpenBSD$	*/

/*-
 * Copyright (c) 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 * Copyright (c) 1993, 1994, 1995, 1996
 *	Keith Bostic.  All rights reserved.
 *
 * See the LICENSE file for redistribution information.
 *
 *	@@(#)msg.h	10.10 (Berkeley) 5/10/96
 */

/*
 * Common messages (continuation or confirmation).
 */
typedef enum {
	CMSG_CONF, CMSG_CONT, CMSG_CONT_EX,
	CMSG_CONT_R, CMSG_CONT_S, CMSG_CONT_Q } cmsg_t;

/*
 * Message types.
 *
 * !!!
 * In historical vi, O_VERBOSE didn't exist, and O_TERSE made the error
 * messages shorter.  In this implementation, O_TERSE has no effect and
 * O_VERBOSE results in informational displays about common errors, for
 * naive users.
 *
 * M_NONE	Display to the user, no reformatting, no nothing.
 *
 * M_BERR	Error: M_ERR if O_VERBOSE, else bell.
 * M_ERR	Error: Display in inverse video.
 * M_INFO	 Info: Display in normal video.
 * M_SYSERR	Error: M_ERR, using strerror(3) message.
 * M_VINFO	 Info: M_INFO if O_VERBOSE, else ignore.
 *
 * The underlying message display routines only need to know about M_NONE,
 * M_ERR and M_INFO -- all the other message types are converted into one
 * of them by the message routines.
 */
typedef enum {
	M_NONE = 1, M_BERR, M_ERR, M_INFO, M_SYSERR, M_VINFO } mtype_t;

/*
 * There are major problems with error messages being generated by routines
 * preparing the screen to display error messages.  It's possible for the
 * editor to generate messages before we have a screen in which to display
 * them, or during the transition between ex (and vi startup) and a true vi.
 * There's a queue in the global area to hold them.
 *
 * If SC_EX/SC_VI is set, that's the mode that the editor is in.  If the flag
 * S_SCREEN_READY is set, that means that the screen is prepared to display
 * messages.
 */
typedef struct _msgh MSGH;	/* MSGS list head structure. */
LIST_HEAD(_msgh, _msg);
struct _msg {
	LIST_ENTRY(_msg) q;	/* Linked list of messages. */
	mtype_t	 mtype;		/* Message type: M_NONE, M_ERR, M_INFO. */
	char	*buf;		/* Message buffer. */
	size_t	 len;		/* Message length. */
};

/* Flags to msgq_status(). */
#define	MSTAT_SHOWLAST	0x01	/* Show the line number of the last line. */
#define	MSTAT_TRUNCATE	0x02	/* Truncate the file name if it's too long. */
@


1.2
log
@new vi
@
text
@d1 2
@


1.1
log
@Initial revision
@
text
@d4 2
d7 1
a7 27
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
d9 1
a9 1
 *	@@(#)msg.h	8.13 (Berkeley) 8/8/94
d13 7
d25 1
a25 1
 * O_VERBOSE results in informational displays about common errors for
d28 2
d35 4
d40 2
a41 1
enum msgtype { M_BERR, M_ERR, M_INFO, M_SYSERR, M_VINFO };
d43 12
a54 1
typedef struct _msgh MSGH;	/* MESG list head structure. */
a55 1

d58 2
a59 2
	char	*mbuf;		/* Message buffer. */
	size_t	 blen;		/* Message buffer length. */
a60 4

#define	M_EMPTY		0x01	/* No message. */
#define	M_INV_VIDEO	0x02	/* Inverse video. */
	u_int8_t flags;
d63 3
a65 16
/*
 * Define MSG_CATALOG for the Makefile compile command
 * line to enable message catalogs.
 */
#ifdef MSG_CATALOG
#define	M(number, fmt)	number
char	*get_msg __P((SCR *, char *));
#else
#define	M(number, fmt)	fmt
#endif

/* Messages. */
void	msg_app __P((GS *, SCR *, int, char *, size_t));
int	msg_rpt __P((SCR *, int));
int	msg_status __P((SCR *, EXF *, recno_t, int));
void	msgq __P((SCR *, enum msgtype, const char *, ...));
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
