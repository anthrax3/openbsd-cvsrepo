head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.64
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.60
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.62
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.54
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.58
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.56
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.52
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.50
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.48
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.46
	OPENBSD_5_0:1.3.0.44
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.42
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.40
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.36
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.38
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.34
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.32
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.30
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.28
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.26
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.24
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.22
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.20
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.18
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.16
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.14
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.12
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.10
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.8
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.3
date	2001.01.29.01.58.38;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.05.22.11.35.13;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.40;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.40;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@$OpenBSD$
@
text
@#	$OpenBSD$

#	@@(#)gdb.script	8.5 (Berkeley) 5/4/96

# display the VI screen map
# usage dmap(sp)
define	dmap
	set $h = ((VI_PRIVATE *)$arg0->vi_private)->h_smap
	set $t = ((VI_PRIVATE *)$arg0->vi_private)->t_smap
	while ($h <= $t)
		printf "lno: %2d; soff %d coff %d ", \
		    (int)$h->lno, (int)$h->soff, (int)$h->coff
		if ($h->c_ecsize == 0)
			printf "flushed\n"
		else
			printf "\n\tsboff %d; scoff %d\n", \
			    (int)$h->c_sboff, (int)$h->c_scoff
			printf "\teboff %d; eclen %d; ecsize %d\n", \
			    (int)$h->c_eboff, (int)$h->c_eclen, \
			    (int)$h->c_ecsize
		end
		set $h = $h + 1
	end
end

# display the tail of the VI screen map
define	tmap
	set $h = ((VI_PRIVATE *)$arg0->vi_private)->h_smap
	set $t = ((VI_PRIVATE *)$arg0->vi_private)->t_smap
	while ($t >= $h)
		printf "lno: %2d; soff %d coff %d ", \
		    (int)$t->lno, (int)$t->soff, (int)$t->coff
		if ($t->c_ecsize == 0)
			printf "flushed\n"
		else
			printf "\n\tsboff %d; scoff %d\n", \
			    (int)$t->c_sboff, (int)$t->c_scoff
			printf "\teboff %d; eclen %d; ecsize %d\n", \
			    (int)$t->c_eboff, (int)$t->c_eclen, \
			    (int)$t->c_ecsize
		end
		set $t = $t - 1
	end
end

# display the private structures
define	clp
	print *((CL_PRIVATE *)sp->gp->cl_private)
end
define	vip
	print *((VI_PRIVATE *)sp->vi_private)
end
define	exp
	print *((EX_PRIVATE *)sp->ex_private)
end

# display the marks
define	markp
	set $h = sp->ep->marks.next
	set $t = &sp->ep->marks
	while ($h != 0 && $h != $t)
		printf "key %c lno: %d cno: %d flags: %x\n", \
		    ((MARK *)$h)->name, ((MARK *)$h)->lno, \
		    ((MARK *)$h)->cno, ((MARK *)$h)->flags
		set $h = ((MARK *)$h)->next
	end
end

# display the tags
define	tagp
	set $h = sp->taghdr.next
	set $t = &sp->taghdr
	while ($h != 0 && $h != $t)
		printf "tag: %s lno %d cno %d\n", ((TAG *)$h)->frp->fname, \
		    ((TAG *)$h)->lno, ((TAG *)$h)->cno
		set $h= ((TAG *)$h)->next
	end
end
@


1.2
log
@new vi
@
text
@d1 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	@@(#)gdb.script	8.3 (Berkeley) 8/16/94
d3 1
a3 1
# display the SVI screen map
d6 2
a7 2
	set $h = ((SVI_PRIVATE *)$arg0->svi_private)->h_smap
	set $t = ((SVI_PRIVATE *)$arg0->svi_private)->t_smap
d9 2
a10 1
		printf "lno: %d; off %d ", (int)$h->lno, (int)$h->off
d24 1
a24 1
# display the tail of the SVI screen map
d26 2
a27 2
	set $h = ((SVI_PRIVATE *)$arg0->svi_private)->h_smap
	set $t = ((SVI_PRIVATE *)$arg0->svi_private)->t_smap
d29 2
a30 1
		printf "lno: %d; off %d ", (int)$t->lno, (int)$t->off
d45 3
a50 3
define	svp
	print *((SVI_PRIVATE *)sp->svi_private)
end
a52 3
end
define	sxp
	print *((SEX_PRIVATE *)sp->sex_private)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
