head	1.22;
access;
symbols
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.22.0.8
	OPENBSD_6_0_BASE:1.22
	OPENBSD_5_9:1.22.0.4
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.22.0.6
	OPENBSD_5_8_BASE:1.22
	OPENBSD_5_7:1.22.0.2
	OPENBSD_5_7_BASE:1.22
	OPENBSD_5_6:1.21.0.6
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.4
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.18.0.4
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.2
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.17.0.4
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.2
	OPENBSD_5_0:1.15.0.2
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.14.0.4
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.2
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.8.0.4
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.0.46
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.44
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.42
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.40
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.38
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.36
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.34
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.32
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.30
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.28
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.26
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.24
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.22
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.20
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.18
	OPENBSD_2_8:1.1.0.16
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.14
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.12
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.10
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.8
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.6
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.4
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@# @;


1.22
date	2015.01.21.08.43.55;	author ratchov;	state Exp;
branches;
next	1.21;
commitid	SYQcoS9jhSKqSJDL;

1.21
date	2013.11.21.08.15.46;	author ratchov;	state Exp;
branches;
next	1.20;

1.20
date	2013.11.19.07.24.57;	author ratchov;	state Exp;
branches;
next	1.19;

1.19
date	2013.11.12.06.47.34;	author ratchov;	state Exp;
branches;
next	1.18;

1.18
date	2012.11.23.07.03.28;	author ratchov;	state Exp;
branches;
next	1.17;

1.17
date	2011.12.09.14.36.42;	author ratchov;	state Exp;
branches;
next	1.16;

1.16
date	2011.10.17.21.09.11;	author ratchov;	state Exp;
branches;
next	1.15;

1.15
date	2011.04.27.21.20.36;	author ratchov;	state Exp;
branches;
next	1.14;

1.14
date	2010.07.31.08.48.01;	author ratchov;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.04.06.15.28;	author ratchov;	state Exp;
branches;
next	1.12;

1.12
date	2010.01.13.10.02.52;	author ratchov;	state Exp;
branches;
next	1.11;

1.11
date	2010.01.10.21.47.41;	author ratchov;	state Exp;
branches;
next	1.10;

1.10
date	2009.09.27.11.51.20;	author ratchov;	state Exp;
branches;
next	1.9;

1.9
date	2009.07.25.08.44.27;	author ratchov;	state Exp;
branches;
next	1.8;

1.8
date	2009.06.04.19.05.09;	author jsg;	state Exp;
branches;
next	1.7;

1.7
date	2008.10.28.21.57.39;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2008.10.27.18.02.14;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2008.10.27.00.26.33;	author ratchov;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.26.08.49.43;	author ratchov;	state Exp;
branches;
next	1.3;

1.3
date	2008.08.14.09.58.55;	author ratchov;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.23.07.15.46;	author ratchov;	state Exp;
branches;
next	1.1;

1.1
date	97.01.02.22.12.26;	author kstailey;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Simplify internals and rewrite file header parsing code:
- remove -M, -t, -w, -C, -x flags that don't make sense anymore
- make "-j off" the default (sndiod already does the job)
- don't limit the number of played/recorded files.
- add support for floating-point encoded files.
- add support for apple .aiff and sun/next .au files
@
text
@#	$OpenBSD: Makefile,v 1.21 2013/11/21 08:15:46 ratchov Exp $

PROG=	aucat
SRCS=	abuf.c afile.c aucat.c dsp.c utils.c
MAN=	aucat.1
CFLAGS+=-DDEBUG -I${.CURDIR}/../../lib/libsndio
COPTS+=	-Wall -Wstrict-prototypes -Wmissing-prototypes -Wpointer-arith -Wundef
LDADD+=	-lsndio
.include <bsd.prog.mk>
@


1.21
log
@use -Wmissing-prototypes
@
text
@d1 1
a1 1
#	$OpenBSD$
d4 1
a4 2
SRCS=	aucat.c abuf.c aparams.c aproc.c dev.c midi.c file.c headers.c \
	siofile.c miofile.c pipe.c wav.c dbg.c
@


1.20
log
@move -Wxxx flags from CFALGS to COPTS

suggested by deraadt
@
text
@d8 1
a8 1
COPTS+=	-Wall -Wstrict-prototypes -Wpointer-arith -Wundef
@


1.19
log
@remove bogus legacy server-specific bits that cause confusion
@
text
@d7 2
a8 1
CFLAGS+= -Wall -Wstrict-prototypes -Wundef -DDEBUG -I${.CURDIR}/../../lib/libsndio
@


1.18
log
@Remplace aucat server by a new sndiod daemon aimed to be simpler
smaller and faster than aucat. It's a drop in replacement with the
following exceptions that don't affect the default setup:
  - The sample rate and the encoding are a per-device parameters
    thus -r and -e options must precede the corresponding -f option
  - MIDI thru boxes are dynamically created and no -M option
    is required anymore, so -M was removed.
  - MIDI ports are exposed with a new ``midi/N'' name, rather
    than abusing MIDI thru boxes.
with help from armani@@, ok deraadt@@
@
text
@d5 1
a5 1
	siofile.c miofile.c sock.c pipe.c listen.c opt.c wav.c dbg.c
@


1.17
log
@add a new sndiod audio/midi daemon and hide aucat server-specific
options.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2011/10/17 21:09:11 ratchov Exp $
a8 2
LINKS=  ${BINDIR}/aucat ${BINDIR}/sndiod
MLINKS = aucat.1 sndiod.1
@


1.16
log
@Remove midicat since aucat can now be used instead of midicat
with almost the same syntax (roughly an extra -M option).
Thru boxes are created with aucat, and corresponding MIDI port
names have the "aucat" prefix instead of "midithru". The old
device name will still work some time for backward compatibility.

ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2011/04/27 21:20:36 ratchov Exp $
d9 2
@


1.15
log
@move amsg.h containing protocol defs from aucat side to libsndio side.

requested by deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2010/07/31 08:48:01 ratchov Exp $
d6 1
a6 2
MAN=	aucat.1 midicat.1
LINKS=  ${BINDIR}/aucat ${BINDIR}/midicat
@


1.14
log
@remove 2 years old compatibility mode
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2010/06/04 06:15:28 ratchov Exp $
d8 1
a8 1
CFLAGS+= -Wall -Wstrict-prototypes -Wundef -DDEBUG
@


1.13
log
@Allow the audio device to be opened only while it's actually used.
This is necessary for uaudio devices, for instance to start aucat
before the device is plugged. Or to unplug a device whithout
having to restart aucat when another device is plugged.  This is
controlled with the new -a option.

Allow multiple audio devices to be used concurently, i.e.
multiple ``-f devname'' options to be used; -f options must follow
per-device options, which is what we do for other options.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2010/01/13 10:02:52 ratchov Exp $
d5 1
a5 1
	siofile.c miofile.c sock.c pipe.c listen.c opt.c wav.c legacy.c dbg.c
@


1.12
log
@Rename s/safile/siofile/g, missed when libsa was renamed to
libsndio. Fixes crashes in full-duplex mode on vax and hp300.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2010/01/10 21:47:41 ratchov Exp $
d8 1
a8 1
CFLAGS+= -Wall -Wstrict-prototypes -Wundef
@


1.11
log
@Add traces to help tracking subtle timing bugs often causing
underuns and overruns; such bugs are hard to debug with ktrace
or a debugger. They are also handy to debug or monitor code
using aucat.

To enable traces, compile aucat with ``make DEBUG=-DDEBUG'' and
use the -d option multiple times.

ok jakemsr
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2009/09/27 11:51:20 ratchov Exp $
d5 1
a5 1
	safile.c miofile.c sock.c pipe.c listen.c opt.c wav.c legacy.c dbg.c
@


1.10
log
@remove all debug traces
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2009/07/25 08:44:27 ratchov Exp $
d5 1
a5 1
	safile.c miofile.c sock.c pipe.c listen.c opt.c wav.c legacy.c 
@


1.9
log
@Currently midi capable programs can control midi hardware, but
cannot cooperate with other programs.  The aim of this change is
to allow any program to send midi data to other programs as they
were midi hardware. For instance, this change should solve the
longstanding problem of using a midi sequencer with software
synthesizers. More precisely:

 - new midicat(1) utility (actually hardlink to aucat(1)).
   it creates software midi thru boxes, allowing programs
   to send midi messages to other programs as they were
   midi(4) hardware.

 - new midi api in libsndio (see mio_open(3)), to access
   midi(4) devices and midicat(1) sockets in a uniform way.

 - new device naming scheme <service>:<unit>[.<option>],
   common to audio and midi.

 - new sndio(7) manual describing concepts and naming

The current audio device naming still works, but people having
scripts or configuration files containing device names could read
the sndio(7) man page and slowly start updating device names.

discussed with jakemsr@@ and deraadt@@, help form jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2009/06/04 19:05:09 jsg Exp $
d8 1
a8 1
CFLAGS+= -DDEBUG -Wall -Wstrict-prototypes -Wundef
@


1.8
log
@don't trust the compiler to generate warnings we care about,
remove -Werror.
ok ratchov@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2008/10/28 21:57:39 miod Exp $
d4 4
a7 2
SRCS=	aucat.c abuf.c aparams.c aproc.c dev.c file.c headers.c \
	safile.c sock.c pipe.c listen.c wav.c legacy.c 
@


1.7
log
@Use -Werror unconditionnaly again.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2008/10/27 18:02:14 miod Exp $
d6 1
a6 1
CFLAGS+= -DDEBUG -Wall -Wstrict-prototypes -Werror -Wundef
@


1.6
log
@No -Werror on m88k, hairy gcc bug generates false ``variable might be used
uninitialized'' warnings. To be removed when the compiler bug is fixed
eventually.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2008/10/27 00:26:33 ratchov Exp $
d6 1
a6 5
CFLAGS+= -DDEBUG -Wall -Wstrict-prototypes -Wundef
# false warnings on 64 bit variables for which no toolchain fix is available yet
.if ${MACHINE_ARCH} != "m88k"
CFLAGS+= -Werror
.endif
@


1.5
log
@rename libsa to libsndio
requested by many, "just go for it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2008/10/26 08:49:43 ratchov Exp $
d6 5
a10 1
CFLAGS+= -DDEBUG -Wall -Wstrict-prototypes -Werror -Wundef
@


1.4
log
@add minimal server capability to aucat(1). When started in server
mode, it listens on an unix socket and mixes/demultiplexes any number
of full-duplex streams, doing necessary format conversions and
resampling on the fly.

programs can use the new libsa(3) library to play and record audio.
The library provides a very simple API to connect to the audio server;
if aucat(1) isn't running, it uses the audio(4) driver transparently
instead.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2008/08/14 09:58:55 ratchov Exp $
d7 1
a7 1
LDADD+=	-lsa
@


1.3
log
@move all device related stuff from aucat.c to a new dev.c file.
The new dev_xxx() routines expose a "high level" self-contained
interface to the device. At initialization, the device is opened
and two chains of aproc structures are created:

 * a playback chain that exposes a (initially) empty mix
   aproc to which the rest of the code can attach new
   streams to be played

 * record chain that exposes a (initially) empty sub aproc
   to which the rest of the code can attach new stream to
   to record

The rest of the code, has just to use dev_attach() routine to
attach streams. While we're at it, add a ``devops'' structure
containing pointers to the device-specific routines. This will
allow later to add support for other type of device than the
Sun API.

Also, write the .wav headers in file_del(), so put all header
related data in the file strucuture. This allows to close() the
file, as soon as wpipe_xxx() aproc terminates. This will be
useful for the server, because it will need to close() descripts
of closed connections immediately.

add mix_pushzero() routine to fill the mixer with silence. It
will be used to avoid the mixer to underrun when there are no
input streams. Since we always have at least one input stream
there's no behaviour change.

ok jakemsr
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2008/05/23 07:15:46 ratchov Exp $
d5 1
a5 1
	dev_sun.c legacy.c
d7 1
a7 1

@


1.2
log
@add support for:
 - recording, full-duplex operation
 - format conversions and resampling on the fly
 - mixing on the fly of multiple inputs of different formats
 - up to 16 channels, simplistic "routing" of channel ranges
 - more linear encodings (in raw and wav files)
the old behaviour is fully preserved if none of the new -i and -o
options are used.

code and fixes from jakemsr@@ and eric@@, suggestions by others.
ok "go ahead" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d4 2
a5 2
SRCS=	aucat.c abuf.c aparams.c aproc.c dev_sun.c file.c headers.c \
	legacy.c
@


1.1
log
@new utility for playing sound files
@
text
@d4 3
@

