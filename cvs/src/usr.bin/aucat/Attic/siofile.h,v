head	1.7;
access;
symbols
	OPENBSD_5_6:1.6.0.12
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.10
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.6
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.8
	OPENBSD_5_0:1.5.0.6
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.4
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.01.21.08.43.55;	author ratchov;	state dead;
branches;
next	1.6;
commitid	SYQcoS9jhSKqSJDL;

1.6
date	2012.04.11.06.05.43;	author ratchov;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.02.11.54.26;	author ratchov;	state Exp;
branches;
next	1.4;

1.4
date	2010.04.06.20.07.01;	author ratchov;	state Exp;
branches;
next	1.3;

1.3
date	2010.04.03.17.59.17;	author ratchov;	state Exp;
branches;
next	1.2;

1.2
date	2010.04.03.17.40.33;	author ratchov;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.13.10.02.52;	author ratchov;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Simplify internals and rewrite file header parsing code:
- remove -M, -t, -w, -C, -x flags that don't make sense anymore
- make "-j off" the default (sndiod already does the job)
- don't limit the number of played/recorded files.
- add support for floating-point encoded files.
- add support for apple .aiff and sun/next .au files
@
text
@/*	$OpenBSD: siofile.h,v 1.6 2012/04/11 06:05:43 ratchov Exp $	*/
/*
 * Copyright (c) 2008 Alexandre Ratchov <alex@@caoua.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#ifndef SIOFILE_H
#define SIOFILE_H

struct fileops;
struct siofile;
struct aparams;
struct aproc;

struct siofile *siofile_new(struct fileops *, char *, unsigned int *,
    struct aparams *, struct aparams *, unsigned int *, unsigned int *);
struct aproc *rsio_new(struct file *f);
struct aproc *wsio_new(struct file *f);

extern struct fileops siofile_ops;

#endif /* !defined(SIOFILE_H) */
@


1.6
log
@Use "unsigned int" rather than "unsigned". No object change.
suggested by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: siofile.h,v 1.5 2010/05/02 11:54:26 ratchov Exp $	*/
@


1.5
log
@Clean up device handling code to clarify different initialization phases
and different device states. Split initialization in two phases:
first global variables are initialized then the audio hardware is opened.
Allow devices that don't support full-duplex to work in play-only or
record-only mode, even if ``-m play'' or ``-m rec'' are not specified.
@
text
@d1 1
a1 1
/*	$OpenBSD: siofile.h,v 1.4 2010/04/06 20:07:01 ratchov Exp $	*/
d25 2
a26 2
struct siofile *siofile_new(struct fileops *, char *, unsigned *,
    struct aparams *, struct aparams *, unsigned *, unsigned *);
@


1.4
log
@aucat (server):

  - make the ``-m mode'' option per subdevice, allowing
    subdevices to be play-only or rec-only even if the
    server is full-duplex

  - add ``monitoring'' mode (with ``-m mon''). This is a
    record-only stream from which played streams can be
    recorded (kind of ``record what you hear'').

  - allow MIDI devices to be subscribed to the controlling
    MIDI port of the server, ie what midicat does (with -f
    option), but using the -q option.

  - add flow control to the protocol, and serialize clock
    ticks (sio_onmove() calls) and data chunks.  This should
    fix certain full-duplex programs, broken with ``magic''
    block/buffer size combinations.

  - enable 3 block latency which is the minimum theoretical.
    Make -z and -b options correspond to device parameters.

  - make sio_getcap(3) the same for aucat and sun backends,
    ie return whatever is supported (``everything'' in the
    aucat case, since everything is actulally supported).

aucat (player):

  - enable ``-m mode'' option  to select between monitoring
    and recording when ``-o file'' is used.

  - plug MIDI code to non-server codepath. The MIDI control
    device is specified with the ``-q device'' option, as in
    server mode.

  - impliment lseek()'ing within files (controlled
    through MIDI). Necessary to use aucat with a MIDI
    sequencer.

midicat (thrubox):

  - rename ``-f'' flag to ``-q'', so it has the
    same name as in aucat (-f is still working)

ok jakemsr@@, tweaks from jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: siofile.h,v 1.3 2010/04/03 17:59:17 ratchov Exp $	*/
d25 1
a25 1
struct siofile *siofile_new(struct fileops *, char *, unsigned,
@


1.3
log
@backout last change, committed by mistake, sorry...
@
text
@d1 1
a1 1
/*	$OpenBSD: siofile.h,v 1.1 2010/01/13 10:02:52 ratchov Exp $	*/
d23 1
d25 1
a25 1
struct siofile *siofile_new(struct fileops *, char *,
d27 2
@


1.2
log
@doc fixes from jmc
@
text
@a22 1
struct aproc;
d24 1
a24 1
struct siofile *siofile_new(struct fileops *, char *, unsigned,
a25 2
struct aproc *rsio_new(struct file *f);
struct aproc *wsio_new(struct file *f);
@


1.1
log
@Rename s/safile/siofile/g, missed when libsa was renamed to
libsndio. Fixes crashes in full-duplex mode on vax and hp300.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d23 1
d25 1
a25 1
struct siofile *siofile_new(struct fileops *, char *,
d27 2
@

