head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.32
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.34
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.30
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.26
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.28
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.20
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.24
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.22
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.18
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.16
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.14
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.12
	OPENBSD_5_0:1.10.0.10
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.8
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.6
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.4
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.9.0.4
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.2
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.8.0.14
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.12
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.10
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.8
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.6
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.4
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.2
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.12
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.10
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.10
date	2009.04.24.18.54.34;	author chl;	state Exp;
branches;
next	1.9;

1.9
date	2008.05.08.01.40.57;	author chl;	state Exp;
branches;
next	1.8;

1.8
date	2005.01.31.17.21.13;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2004.06.03.03.14.20;	author tedu;	state Exp;
branches;
next	1.6;

1.6
date	2003.11.09.20.13.57;	author otto;	state Exp;
branches;
next	1.5;

1.5
date	2003.03.04.03.19.26;	author ian;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.27.14.22.46;	author ian;	state Exp;
branches;
next	1.3;

1.3
date	97.02.09.22.49.21;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.30.15;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.10;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.10;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.10
log
@file update to 4.24

The '-i' switch is now enabled so file(1) can output mime type strings.

ok ian@@
builk ports build test on amd64 by jasper@@

ok ray@@ gilles@@ on a almost identical diff
builk ports build test on sparc64 on this almost identical diff by ajacoutot@@
also tested by landry@@
@
text
@#	$OpenBSD: images,v 1.9 2008/05/08 01:40:57 chl Exp $

#------------------------------------------------------------------------------
# images:  file(1) magic for image formats (see also "iff", and "c-lang" for
# XPM bitmaps)
#
# originally from jef@@helios.ee.lbl.gov (Jef Poskanzer),
# additions by janl@@ifi.uio.no as well as others. Jan also suggested
# merging several one- and two-line files into here.
#
# little magic: PCX (first byte is 0x0a)

# Targa - matches `povray', `ppmtotga' and `xv' outputs
# by Philippe De Muyter <phdm@@macqel.be>
# at 2, byte ImgType must be 1, 2, 3, 9, 10 or 11
# at 1, byte CoMapType must be 1 if ImgType is 1 or 9, 0 otherwise
# at 3, leshort Index is 0 for povray, ppmtotga and xv outputs
# `xv' recognizes only a subset of the following (RGB with pixelsize = 24)
# `tgatoppm' recognizes a superset (Index may be anything)
1	belong&0xfff7ffff	0x01010000	Targa image data - Map
>2	byte&8			8		- RLE
>12	leshort			>0		%hd x
>14	leshort			>0		%hd
1	belong&0xfff7ffff	0x00020000	Targa image data - RGB
>2	byte&8			8		- RLE
>12	leshort			>0		%hd x
>14	leshort			>0		%hd
1	belong&0xfff7ffff	0x00030000	Targa image data - Mono
>2	byte&8			8		- RLE
>12	leshort			>0		%hd x
>14	leshort			>0		%hd

# PBMPLUS images
# The next byte following the magic is always whitespace.
0	search/1	P1		Netpbm PBM image text
!:mime	image/x-portable-bitmap
0	search/1	P2		Netpbm PGM image text
!:mime	image/x-portable-greymap
0	search/1	P3		Netpbm PPM image text
!:mime	image/x-portable-pixmap
0	string		P4		Netpbm PBM "rawbits" image data
!:mime	image/x-portable-bitmap
0	string		P5		Netpbm PGM "rawbits" image data
!:mime	image/x-portable-greymap
0	string		P6		Netpbm PPM "rawbits" image data
!:mime	image/x-portable-pixmap
0	string		P7		Netpbm PAM image file
!:mime	image/x-portable-pixmap

# From: bryanh@@giraffe-data.com (Bryan Henderson)
0	string		\117\072	Solitaire Image Recorder format
>4	string		\013		MGI Type 11
>4	string		\021		MGI Type 17
0	string		.MDA		MicroDesign data
>21	byte		48		version 2
>21	byte		51		version 3
0	string		.MDP		MicroDesign page data
>21	byte		48		version 2
>21	byte		51		version 3

# NIFF (Navy Interchange File Format, a modification of TIFF) images
# [GRR:  this *must* go before TIFF]
0	string		IIN1		NIFF image data
!:mime	image/x-niff

# Tag Image File Format, from Daniel Quinlan (quinlan@@yggdrasil.com)
# The second word of TIFF files is the TIFF version number, 42, which has
# never changed.  The TIFF specification recommends testing for it.
0	string		MM\x00\x2a	TIFF image data, big-endian
!:mime	image/tiff
0	string		II\x2a\x00	TIFF image data, little-endian
!:mime	image/tiff

# PNG [Portable Network Graphics, or "PNG's Not GIF"] images
# (Greg Roelofs, newt@@uchicago.edu)
# (Albert Cahalan, acahalan@@cs.uml.edu)
#
# 137 P N G \r \n ^Z \n [4-byte length] H E A D [HEAD data] [HEAD crc] ...
#
0	string		\x89PNG		PNG image data,
!:mime	image/png
>4	belong		!0x0d0a1a0a	CORRUPTED,
>4	belong		0x0d0a1a0a
>>16	belong		x		%ld x
>>20	belong		x		%ld,
>>24	byte		x		%d-bit
>>25	byte		0		grayscale,
>>25	byte		2		\b/color RGB,
>>25	byte		3		colormap,
>>25	byte		4		gray+alpha,
>>25	byte		6		\b/color RGBA,
#>>26	byte		0		deflate/32K,
>>28	byte		0		non-interlaced
>>28	byte		1		interlaced
1	string		PNG		PNG image data, CORRUPTED

# possible GIF replacements; none yet released!
# (Greg Roelofs, newt@@uchicago.edu)
#
# GRR 950115:  this was mine ("Zip GIF"):
0	string		GIF94z		ZIF image (GIF+deflate alpha)
!:mime	image/x-unknown
#
# GRR 950115:  this is Jeremy Wohl's Free Graphics Format (better):
#					
0	string		FGF95a		FGF image (GIF+deflate beta)
!:mime	image/x-unknown
#
# GRR 950115:  this is Thomas Boutell's Portable Bitmap Format proposal
# (best; not yet implemented):
#					
0	string		PBF		PBF image (deflate compression)
!:mime	image/x-unknown

# GIF
0	string		GIF8		GIF image data
!:mime	image/gif
>4	string		7a		\b, version 8%s,
>4	string		9a		\b, version 8%s,
>6	leshort		>0		%hd x
>8	leshort		>0		%hd
#>10	byte		&0x80		color mapped,
#>10	byte&0x07	=0x00		2 colors
#>10	byte&0x07	=0x01		4 colors
#>10	byte&0x07	=0x02		8 colors
#>10	byte&0x07	=0x03		16 colors
#>10	byte&0x07	=0x04		32 colors
#>10	byte&0x07	=0x05		64 colors
#>10	byte&0x07	=0x06		128 colors
#>10	byte&0x07	=0x07		256 colors

# ITC (CMU WM) raster files.  It is essentially a byte-reversed Sun raster,
# 1 plane, no encoding.
0	string		\361\0\100\273	CMU window manager raster image data
>4	lelong		>0		%d x
>8	lelong		>0		%d,
>12	lelong		>0		%d-bit

# Magick Image File Format
0	string		id=ImageMagick	MIFF image data

# Artisan
0	long		1123028772	Artisan image data
>4	long		1		\b, rectangular 24-bit
>4	long		2		\b, rectangular 8-bit with colormap
>4	long		3		\b, rectangular 32-bit (24-bit with matte)

# FIG (Facility for Interactive Generation of figures), an object-based format
0	search/1	#FIG		FIG image text
>5	string		x		\b, version %.3s

# PHIGS
0	string		ARF_BEGARF		PHIGS clear text archive
0	string		@@(#)SunPHIGS		SunPHIGS
# version number follows, in the form m.n
>40	string		SunBin			binary
>32	string		archive			archive

# GKS (Graphics Kernel System)
0	string		GKSM		GKS Metafile
>24	string		SunGKS		\b, SunGKS

# CGM image files
0	string		BEGMF		clear text Computer Graphics Metafile
# XXX - questionable magic
#0	beshort&0xffe0	0x0020		binary Computer Graphics Metafile
#0	beshort		0x3020		character Computer Graphics Metafile

# MGR bitmaps  (Michael Haardt, u31b3hs@@pool.informatik.rwth-aachen.de)
0	string	yz	MGR bitmap, modern format, 8-bit aligned
0	string	zz	MGR bitmap, old format, 1-bit deep, 16-bit aligned
0	string	xz	MGR bitmap, old format, 1-bit deep, 32-bit aligned
0	string	yx	MGR bitmap, modern format, squeezed

# Fuzzy Bitmap (FBM) images
0	string		%bitmap\0	FBM image data
>30	long		0x31		\b, mono
>30	long		0x33		\b, color

# facsimile data
1	string		PC\ Research,\ Inc	group 3 fax data
>29	byte		0		\b, normal resolution (204x98 DPI)
>29	byte		1		\b, fine resolution (204x196 DPI)
# From: Herbert Rosmanith <herp@@wildsau.idv.uni.linz.at>
0	string		Sfff		structured fax file


# PC bitmaps (OS/2, Windows BMP files)  (Greg Roelofs, newt@@uchicago.edu)
0	string		BM		PC bitmap data
!:mime	image/x-ms-bmp
>14	leshort		12		\b, OS/2 1.x format
>>18	leshort		x		\b, %d x
>>20	leshort		x		%d
>14	leshort		64		\b, OS/2 2.x format
>>18	leshort		x		\b, %d x
>>20	leshort		x		%d
>14	leshort		40		\b, Windows 3.x format
>>18	lelong		x		\b, %d x
>>22	lelong		x		%d x
>>28	leshort		x		%d
# Too simple - MPi
#0	string		IC		PC icon data
#0	string		PI		PC pointer image data
#0	string		CI		PC color icon data
#0	string		CP		PC color pointer image data
# Conflicts with other entries [BABYL]
#0	string		BA		PC bitmap array data

# XPM icons (Greg Roelofs, newt@@uchicago.edu)
# note possible collision with C/REXX entry in c-lang; currently commented out
0	search/1	/*\ XPM\ */	X pixmap image text

# Utah Raster Toolkit RLE images (janl@@ifi.uio.no)
0	leshort		0xcc52		RLE image data,
>6	leshort		x		%d x
>8	leshort		x		%d
>2	leshort		>0		\b, lower left corner: %d
>4	leshort		>0		\b, lower right corner: %d
>10	byte&0x1	=0x1		\b, clear first
>10	byte&0x2	=0x2		\b, no background
>10	byte&0x4	=0x4		\b, alpha channel
>10	byte&0x8	=0x8		\b, comment
>11	byte		>0		\b, %d color channels
>12	byte		>0		\b, %d bits per pixel
>13	byte		>0		\b, %d color map channels

# image file format (Robert Potter, potter@@cs.rochester.edu)
0	string		Imagefile\ version-	iff image data
# this adds the whole header (inc. version number), informative but longish
>10	string		>\0		%s

# Sun raster images, from Daniel Quinlan (quinlan@@yggdrasil.com)
0	belong		0x59a66a95	Sun raster image data
>4	belong		>0		\b, %d x
>8	belong		>0		%d,
>12	belong		>0		%d-bit,
#>16	belong		>0		%d bytes long,
>20	belong		0		old format,
#>20	belong		1		standard,
>20	belong		2		compressed,
>20	belong		3		RGB,
>20	belong		4		TIFF,
>20	belong		5		IFF,
>20	belong		0xffff		reserved for testing,
>24	belong		0		no colormap
>24	belong		1		RGB colormap
>24	belong		2		raw colormap
#>28	belong		>0		colormap is %d bytes long

# SGI image file format, from Daniel Quinlan (quinlan@@yggdrasil.com)
#
# See
#	http://reality.sgi.com/grafica/sgiimage.html
#
0	beshort		474		SGI image data
#>2	byte		0		\b, verbatim
>2	byte		1		\b, RLE
#>3	byte		1		\b, normal precision
>3	byte		2		\b, high precision
>4	beshort		x		\b, %d-D
>6	beshort		x		\b, %d x
>8	beshort		x		%d
>10	beshort		x		\b, %d channel
>10	beshort		!1		\bs
>80	string		>0		\b, "%s"

0	string		IT01		FIT image data
>4	belong		x		\b, %d x
>8	belong		x		%d x
>12	belong		x		%d
#
0	string		IT02		FIT image data
>4	belong		x		\b, %d x
>8	belong		x		%d x
>12	belong		x		%d
#
2048	string		PCD_IPI		Kodak Photo CD image pack file
>0xe02	byte&0x03	0x00		, landscape mode
>0xe02	byte&0x03	0x01		, portrait mode
>0xe02	byte&0x03	0x02		, landscape mode
>0xe02	byte&0x03	0x03		, portrait mode
0	string		PCD_OPA		Kodak Photo CD overview pack file

# FITS format.  Jeff Uphoff <juphoff@@tarsier.cv.nrao.edu>
# FITS is the Flexible Image Transport System, the de facto standard for
# data and image transfer, storage, etc., for the astronomical community.
# (FITS floating point formats are big-endian.)
0	string	SIMPLE\ \ =	FITS image data
>109	string	8		\b, 8-bit, character or unsigned binary integer
>108	string	16		\b, 16-bit, two's complement binary integer
>107	string	\ 32		\b, 32-bit, two's complement binary integer
>107	string	-32		\b, 32-bit, floating point, single precision
>107	string	-64		\b, 64-bit, floating point, double precision

# other images
0	string	This\ is\ a\ BitMap\ file	Lisp Machine bit-array-file
#0	string		=!!		Bennet Yee's "face" format

# From SunOS 5.5.1 "/etc/magic" - appeared right before Sun raster image
# stuff.
#
0	beshort		0x1010		PEX Binary Archive

# DICOM medical imaging data
128	string	DICM			DICOM medical imaging data
!:mime	application/dicom

# XWD - X Window Dump file.
#   As described in /usr/X11R6/include/X11/XWDFile.h
#   used by the xwd program.
#   Bradford Castalia, idaeim, 1/01
4	belong	7			XWD X Window Dump image data
>100	string	>\0			\b, "%s"
>16	belong	x			\b, %dx
>20	belong	x			\b%dx
>12	belong	x			\b%d

# PDS - Planetary Data System
#   These files use Parameter Value Language in the header section.
#   Unfortunately, there is no certain magic, but the following
#   strings have been found to be most likely.
0	string	NJPL1I00		PDS (JPL) image data
2	string	NJPL1I			PDS (JPL) image data
0	string	CCSD3ZF			PDS (CCSD) image data
2	string	CCSD3Z			PDS (CCSD) image data
0	string	PDS_			PDS image data
0	string	LBLSIZE=		PDS (VICAR) image data

# pM8x: ATARI STAD compressed bitmap format
#
# from Oskar Schirmer <schirmer@@scara.com> Feb 2, 2001
# p M 8 5/6 xx yy zz data...
# Atari ST STAD bitmap is always 640x400, bytewise runlength compressed.
# bytes either run horizontally (pM85) or vertically (pM86). yy is the
# most frequent byte, xx and zz are runlength escape codes, where xx is
# used for runs of yy.
#
0	string	pM85		Atari ST STAD bitmap image data (hor)
>5	byte	0x00		(white background)
>5	byte	0xFF		(black background)
0	string	pM86		Atari ST STAD bitmap image data (vert)
>5	byte	0x00		(white background)
>5	byte	0xFF		(black background)

# Gürkan Sengün <gurkan@@linuks.mine.nu>, www.linuks.mine.nu
# http://www.atarimax.com/jindroush.atari.org/afmtatr.html
0	leshort	0x0296		Atari ATR image

# XXX:
# This is bad magic 0x5249 == 'RI' conflicts with RIFF and other
# magic.
# SGI RICE image file <mpruett@@sgi.com>
#0	beshort	0x5249		RICE image
#>2	beshort	x		v%d
#>4	beshort	x		(%d x
#>6	beshort	x		%d)
#>8	beshort	0		8 bit
#>8	beshort	1		10 bit
#>8	beshort	2		12 bit
#>8	beshort	3		13 bit
#>10	beshort	0		4:2:2
#>10	beshort	1		4:2:2:4
#>10	beshort	2		4:4:4
#>10	beshort	3		4:4:4:4
#>12	beshort	1		RGB
#>12	beshort	2		CCIR601
#>12	beshort	3		RP175
#>12	beshort	4		YUV

#------------------------------------------------------------------------------
#
# Marco Schmidt (marcoschmidt@@users.sourceforge.net) -- an image  file format
# for the EPOC operating system, which is used with PDAs like those from Psion
#
# see http://huizen.dds.nl/~frodol/psiconv/html/Index.html for a description
# of various EPOC file formats

0	string \x37\x00\x00\x10\x42\x00\x00\x10\x00\x00\x00\x00\x39\x64\x39\x47 EPOC MBM image file

# PCX image files
# From: Dan Fandrich <dan@@coneharvesters.com>
0	beshort		0x0a00	PCX ver. 2.5 image data
0	beshort		0x0a02	PCX ver. 2.8 image data, with palette
0	beshort		0x0a03	PCX ver. 2.8 image data, without palette
0	beshort		0x0a04	PCX for Windows image data
0	beshort		0x0a05	PCX ver. 3.0 image data
>4	leshort		x      bounding box [%hd,
>6	leshort		x      %hd] -
>8	leshort		x      [%hd,
>10	leshort		x      %hd],
>65	byte		>1	%d planes each of
>3	byte		x	%hhd-bit
>68	byte		0	image,
>68	byte		1	colour,
>68	byte		2	grayscale,
>68	byte		>2	image,
>68	byte		<0	image,
>12	leshort		>0	%hd x
>>14	leshort		x      %hd dpi,
>2	byte		0	uncompressed
>2	byte		1	RLE compressed

# Adobe Photoshop
0	string		8BPS Adobe Photoshop Image
!:mime	image/vnd.adobe.photoshop

# XV thumbnail indicator (ThMO)
0	string		P7\ 332		XV thumbnail image data

# NITF is defined by United States MIL-STD-2500A
0	string	NITF	National Imagery Transmission Format
>25	string	>\0	dated %.14s

# GEM Image: Version 1, Headerlen 8 (Wolfram Kleff)
0	belong		0x00010008	GEM Image data
>12	beshort		x		%d x
>14	beshort		x		%d,
>4	beshort		x		%d planes,
>8	beshort		x		%d x
>10	beshort		x		%d pixelsize

# GEM Metafile (Wolfram Kleff)
0	lelong		0x0018FFFF	GEM Metafile data
>4	leshort		x		version %d

#
# SMJPEG. A custom Motion JPEG format used by Loki Entertainment
# Software Torbjorn Andersson <d91tan@@Update.UU.SE>.
#
0	string	\0\nSMJPEG	SMJPEG
>8	belong	x		%d.x data
# According to the specification you could find any number of _TXT
# headers here, but I can't think of any way of handling that. None of
# the SMJPEG files I tried it on used this feature. Even if such a
# file is encountered the output should still be reasonable.
>16	string	_SND		\b,
>>24	beshort	>0		%d Hz
>>26	byte	8		8-bit
>>26	byte	16		16-bit
>>28	string	NONE		uncompressed
# >>28	string	APCM		ADPCM compressed
>>27	byte	1		mono
>>28	byte	2		stereo
# Help! Isn't there any way to avoid writing this part twice?
>>32	string	_VID		\b,
# >>>48	string	JFIF		JPEG
>>>40	belong	>0		%d frames
>>>44	beshort	>0		(%d x
>>>46	beshort	>0		%d)
>16	string	_VID		\b,
# >>32	string	JFIF		JPEG
>>24	belong	>0		%d frames
>>28	beshort	>0		(%d x
>>30	beshort	>0		%d)

0	string	Paint\ Shop\ Pro\ Image\ File	Paint Shop Pro Image File

# "thumbnail file" (icon)
# descended from "xv", but in use by other applications as well (Wolfram Kleff)
0       string          P7\ 332         XV "thumbnail file" (icon) data

# taken from fkiss: (<yav@@mte.biglobe.ne.jp> ?)
0       string          KiSS            KISS/GS
>4      byte            16              color
>>5     byte            x               %d bit
>>8     leshort         x               %d colors
>>10    leshort         x               %d groups
>4      byte            32              cell
>>5     byte            x               %d bit
>>8     leshort         x               %d x
>>10    leshort         x               %d
>>12    leshort         x               +%d
>>14    leshort         x               +%d

# Webshots (www.webshots.com), by John Harrison
0       string          C\253\221g\230\0\0\0 Webshots Desktop .wbz file

# Hercules DASD image files
# From Jan Jaeger <jj@@septa.nl>
0       string  CKD_P370        Hercules CKD DASD image file
>8      long    x               \b, %d heads per cylinder
>12     long    x               \b, track size %d bytes
>16     byte    x               \b, device type 33%2.2X

0       string  CKD_C370        Hercules compressed CKD DASD image file
>8      long    x               \b, %d heads per cylinder
>12     long    x               \b, track size %d bytes
>16     byte    x               \b, device type 33%2.2X

0       string  CKD_S370        Hercules CKD DASD shadow file
>8      long    x               \b, %d heads per cylinder
>12     long    x               \b, track size %d bytes
>16     byte    x               \b, device type 33%2.2X

# Squeak images and programs - etoffi@@softhome.net
0	string		\146\031\0\0	Squeak image data
0	search/1	'From\040Squeak	Squeak program text

# partimage: file(1) magic for PartImage files (experimental, incomplete)
# Author: Hans-Joachim Baader <hjb@@pro-linux.de>
0		string	PaRtImAgE-VoLuMe	PartImage
>0x0020		string	0.6.1		file version %s
>>0x0060	lelong	>-1		volume %ld
#>>0x0064 8 byte identifier
#>>0x007c reserved
>>0x0200	string	>\0		type %s
>>0x1400	string	>\0		device %s,
>>0x1600	string	>\0		original filename %s,
# Some fields omitted
>>0x2744	lelong	0		not compressed
>>0x2744	lelong	1		gzip compressed
>>0x2744	lelong	2		bzip2 compressed
>>0x2744	lelong	>2		compressed with unknown algorithm
>0x0020		string	>0.6.1		file version %s
>0x0020		string	<0.6.1		file version %s

# DCX is multi-page PCX, using a simple header of up to 1024
# offsets for the respective PCX components.
# From: Joerg Wunsch <joerg_wunsch@@uriah.heep.sax.de>
0	lelong	987654321	DCX multi-page PCX image data

# Simon Walton <simonw@@matteworld.com>
# Kodak Cineon format for scanned negatives
# http://www.kodak.com/US/en/motion/support/dlad/
0	lelong  0xd75f2a80	Cineon image data
>200	belong  >0		\b, %ld x
>204	belong  >0		%ld


# Bio-Rad .PIC is an image format used by microscope control systems
# and related image processing software used by biologists.
# From: Vebjorn Ljosa <vebjorn@@ljosa.com>
54	leshort 12345		Bio-Rad .PIC Image File
>0	leshort >0		%hd x
>2	leshort >0		%hd,
>4	leshort =1		1 image in file
>4	leshort >1		%hd images in file

# From Jan "Yenya" Kasprzak <kas@@fi.muni.cz>
# The description of *.mrw format can be found at
# http://www.dalibor.cz/minolta/raw_file_format.htm
0	string	\000MRM			Minolta Dimage camera raw image data

# From: stephane.loeuillet@@tiscali.f
# http://www.djvuzone.org/
0	string	AT&TFORM		DjVu Image file
!:mime	image/vnd.djvu

# From Marc Espie
0	lelong	20000630		OpenEXR image data

# From: Tom Hilinski <tom.hilinski@@comcast.net>
# http://www.unidata.ucar.edu/packages/netcdf/
0	string	CDF\001			NetCDF Data Format data

#-----------------------------------------------------------------------
# Hierarchical Data Format, used to facilitate scientific data exchange
# specifications at http://hdf.ncsa.uiuc.edu/
0	belong	0x0e031301	Hierarchical Data Format (version 4) data
!:mime	application/x-hdf
0	string	\211HDF\r\n\032	Hierarchical Data Format (version 5) data
!:mime	application/x-hdf

# From: Tobias Burnus <burnus@@net-b.de>
# Xara (for a while: Corel Xara) is a graphic package, see
# http://www.xara.com/ for Windows and as GPL application for Linux
0	string	XARA\243\243	Xara graphics file

# http://www.cartesianinc.com/Tech/
0	string	CPC\262		Cartesian Perceptual Compression image
!:mime	image/x-cpi

# From Albert Cahalan <acahalan@@gmail.com>
# puredigital used it for the CVS disposable camcorder
#8       lelong  4       ZBM bitmap image data
#>4      leshort x       %u x
#>6      leshort x       %u

# From Albert Cahalan <acahalan@@gmail.com>
# uncompressed 5:6:5 HighColor image for OLPC XO firmware icons
0       string C565     OLPC firmware icon image data
>4      leshort x       %u x
>6      leshort x       %u

# Applied Images - Image files from Cytovision
# Gustavo Junior Alves <gjalves@@gjalves.com.br>
0	string	\xce\xda\xde\xfa	Cytovision Metaphases file
0	string	\xed\xad\xef\xac	Cytovision Karyotype file
0	string	\x0b\x00\x03\x00	Cytovision FISH Probe file
0	string	\xed\xfe\xda\xbe	Cytovision FLEX file
0	string	\xed\xab\xed\xfe	Cytovision FLEX file
0	string	\xad\xfd\xea\xad	Cytovision RATS file
@


1.9
log
@Update file to 4.21.

tested by ian@@ sthen@@

OK ian@@, "move ahead with it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: images,v 1.8 2005/01/31 17:21:13 espie Exp $
d4 2
a5 1
# images:  file(1) magic for image formats (see also "iff")
d35 6
a40 3
0	string		P1		Netpbm PBM image text
0	string		P2		Netpbm PGM image text
0	string		P3		Netpbm PPM image text
d42 1
d44 1
d46 1
d48 1
d62 1
d64 1
d70 1
d72 1
d81 1
d97 18
d117 1
d149 1
a149 1
0	string		#FIG		FIG image text
d166 2
a167 2
0	beshort&0xffe0	0x0020		binary Computer Graphics Metafile
0	beshort		0x3020		character Computer Graphics Metafile
d188 1
a188 1
# PC bitmaps (OS/2, Windoze BMP files)  (Greg Roelofs, newt@@uchicago.edu)
d190 1
d211 1
a211 1
0	string		/*\ XPM\ */	X pixmap image text
d297 1
a297 1
0	string		=!!		Bennet Yee's "face" format
d306 1
d405 1
d495 3
a497 3
# Squeak images and - etoffi@@softhome.net
0 string \146\031\0\0  Squeak image data
0 string 'From\040Squeak  Squeak program text
d547 1
a547 3

# From: Jason Bacon <bacon@@smithers.neuro.mcw.edu>
0	beshort	0x3020			character Computer Graphics Metafile
d560 1
d562 1
d566 1
a566 1
# http://www.xara.com/ for Windows and as GPL application for
d568 25
@


1.8
log
@recognize OpenEXR images.
okay ian Darwin.
@
text
@d1 1
a1 1
#	$OpenBSD: images,v 1.7 2004/06/03 03:14:20 tedu Exp $
d264 1
a264 1
0	string		!!		Bennet Yee's "face" format
a270 6
# Visio drawings
03000	string	Visio\ (TM)\ Drawing	%s

# Tgif files
0	string	\%TGIF\ x 		Tgif file version %s

d311 4
d516 1
d518 15
@


1.7
log
@merge in new magic from file 4.09.  Mostly from Bruno Rohee
@
text
@d1 1
a1 1
#	$OpenBSD$
d518 1
@


1.6
log
@Typos in comments from Jared Yanovich <jjy2+ at pitt dot edu>
@
text
@d1 1
d21 2
d25 2
d29 2
d168 5
a172 4
0	string		IC		PC icon data
0	string		PI		PC pointer image data
0	string		CI		PC color icon data
0	string		CP		PC color pointer image data
d218 2
a219 1
# See:
d221 1
a221 1
#	ftp://ftp.sgi.com/graphics/SGIIMAGESPEC
d280 1
a280 1
# XWD - X-Windows Dump file.
d284 1
a284 1
4	belong	7			XWD X-Windows Dump image data
d370 148
@


1.5
log
@Interim JPEG size support; PNG and other lesser image formats added.
@
text
@d210 1
a210 2
#
# See
d212 1
a212 1
#
@


1.4
log
@Add Photoshop sub-type to JPEG.
@
text
@d10 14
a23 1
# no magic: Targa
d27 18
a44 6
0	string		P1		PBM image text
0	string		P2		PGM image text
0	string		P3		PPM image text
0	string		P4		PBM "rawbits" image data
0	string		P5		PGM "rawbits" image data
0	string		P6		PPM "rawbits" image data
d57 1
d63 13
a75 11
>16	belong		x		%ld x
>20	belong		x		%ld,
>24	byte		x		%d-bit
>25	byte		0		grayscale,
>25	byte		2		\b/color RGB,
>25	byte		3		colormap,
>25	byte		4		gray+alpha,
>25	byte		6		\b/color RGBA,
#>26	byte		0		deflate/32K,
>28	byte		0		non-interlaced
>28	byte		1		interlaced
d82 1
a82 1
>8	leshort		>0		%hd,
d145 2
a147 15
# JPEG images
# SunOS 5.5.1 had
#
#	0	string		\377\330\377\340	JPEG file
#	0	string		\377\330\377\356	JPG file
#
# both of which turn into "JPEG image data" here.
#
0	beshort		0xffd8		JPEG image data
>6	string		JFIF		\b, JFIF standard
# Contributed by wizdumb@@leet.org
>24	string	Photoshop	\b, Made in Adobe Photoshop

# HSI is Handmade Software's proprietary JPEG encoding scheme
0	string		hsi1		JPEG image data, HSI proprietary
d210 4
a213 1
# file://sgi.com/graphics/SGIIMAGESPEC
d237 4
d262 100
@


1.3
log
@Updated from NetBSD.
@
text
@d128 3
@


1.2
log
@update from netbsd
@
text
@d56 8
a63 8
>10	byte&0x07	=0x00		2 colors
>10	byte&0x07	=0x01		4 colors
>10	byte&0x07	=0x02		8 colors
>10	byte&0x07	=0x03		16 colors
>10	byte&0x07	=0x04		32 colors
>10	byte&0x07	=0x05		64 colors
>10	byte&0x07	=0x06		128 colors
>10	byte&0x07	=0x07		256 colors
d119 7
d232 5
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
# images:  file(1) magic for image formats (see also "c-lang" for XPM bitmaps)
d9 2
a10 6
# XXX - byte order for GIF and TIFF fields?
# [GRR:  TIFF allows both byte orders; GIF is little-endian]
#

# [GRR:  what the hell is this doing in here?]
0	string		xbtoa		btoa'd file
d12 8
a19 7
# PBMPLUS
0	string		P1		PBM file
0	string		P2		PGM file
0	string		P3		PPM file
0	string		P4		PBM "rawbits" file
0	string		P5		PGM "rawbits" file
0	string		P6		PPM "rawbits" file
d22 1
a22 2
# this *must* go before TIFF
0	string		IIN1		NIFF raster data
d24 5
a28 5
# TIFF images
0	string		MM		TIFF file, big-endian
>2	beshort		>0		- version %d
0	string		II		TIFF file, little-endian
>2	leshort		>0		- version %d
d35 1
a35 1
0	string		\x89PNG		PNG image,
d50 3
a52 3
0	string		GIF		GIF image
>3	string		87a		- version %s,
>3	string		89a		- version %s,
a55 2
# GRR 950330:  the following is not accurate for most GIFs:
#>10	byte		&0x40		interlaced,
d65 19
a83 12
# Miscellany
0	long		1123028772	Artisan image file
>4	long		1	rectangular 24-bit image
>4	long		2	rectangular 8-bit image with colormap
>4	long		3	rectangular 32-bit image (24-bit with matte)
0	string		\361\0\100\273	CMU window manager bitmap
0	string		#FIG		FIG graphics savefile text
>6	string		2.1		Version 2.1
>6	string		2.0		Version 2.0
0	string		GKSM		GKS Metafile
8	string		ILBM		IFF ILBM file
0	string		ARF_BEGARF	PHIGS clear text archive
d85 2
a86 3
# More miscellany from Daniel Quinlan (quinlan@@yggdrasil.com)
0	string	This\ is\ a\ BitMap\ file	Lisp Machine bit-array-file
0	string		!!			Bennet Yee's "face" format
d91 6
d98 1
a98 1
# these should be beshort, but not sure
d102 15
a116 14

# From: <u31b3hs@@pool.informatik.rwth-aachen.de> (Michael Haardt)
0	string          yz      MGR bitmap, modern format, 8 bit aligned
0	string          zz      MGR bitmap, old format, 1 bit deep, 16 bit aligned
0	string          xz      MGR bitmap, old format, 1 bit deep, 32 bit aligned
0	string          yx      MGR bitmap, modern format, squeezed

0	string		%bitmap		FBM pixmap
>30	long		0x31		(mono)
>30	long		0x33		(color)

4	string		Research,	Digifax-G3-File
>29	byte		1		, fine resolution
>29	byte		0		, normal resolution
d119 4
a122 4
0	beshort		0xffd8		JPEG image
>6	string		JFIF		- JFIF standard
# from cameron@@cs.unsw.oz.au (Cameron Simpson):
0	string		hsi1		JPEG image - HSI encoded (proprietary)
d125 35
a159 46
0	string		BM		bitmap
>14	byte		12		(OS/2 1.x format)
>14	byte		64		(OS/2 2.x format)
>14	byte		40		(Windows 3.x format)
0	string		IC		icon
0	string		PI		pointer
0	string		CI		color icon
0	string		CP		color pointer
0	string		BA		bitmap array

# Utah Raster Toolkit RLE images (two versions)
#
# From <janl@@ifi.uio.no>
# I made this with the help of the man page for rle(5). Ihey missing
# from the magic numbers I have:
0	beshort		0xcc52		Utah Raster Toolkit RLE
>2	beshort		>0		lower left corner: %d
>4	beshort		>0		lower right corner: %d
>6	beshort		>0		%d x
>8	beshort		>0		%d
>10	byte&0x1	=0x1		CLEARFIRST
>10	byte&0x2	=0x2		NO_BACKGROUND
>10	byte&0x4	=0x4		ALPHA
>10	byte&0x8	=0x8		COMMENT
>11	byte		>0		%d colour channels
>12	byte		>0		%d bits per pixel
>13	byte		>0		%d colour map channels
#
# RLE images (Disaster prone simpleton, m91dps@@ecs.ox.ac.uk)
# Here's a magic file entry for rle images. 24-bit images tend to produce
# foo.rle size 42x42, 3 comps each 8 bits
# (for arbitary, prossibly different values of 42).
# freely redistribuable under the GPL
# [GRR:  which endianness?  big?]
0	short		0xcc55		RLE image data
>6	short		>0		%d x
>8	short		>0		%d,
>2	short		>0		x offset by %d,
>4	short		>0		y offset by %d,
>11	byte		=0		colour map
>11	byte		>1		%d comps each
>12	byte		=1		1 bit
>12	byte		>1		%d bits

# FBM images, culled from xli source (d. p. simpleton, m91dps@@ecs.ox.ac.uk)
0       string          %bitmap         fbm image data
d166 3
a168 6
# Sun rasterfiles, from Daniel Quinlan (quinlan@@yggdrasil.com)
#
# XXX - Does the Sun 386i use the same byte order?
#
0	belong		0x59a66a95	Sun raster image
>4	belong		>0		%d x
a170 1
# this is almost the same as the file length (what about compressed?)
a172 1
# no need to complain if it is standard
a181 1
# this doesn't impart much useful information (or does it?)
d184 8
a191 4
# Daniel Quinlan (quinlan@@yggdrasil.com) -- from an SGI machine
# There may be a byte swapped version of SGI imagelib images, but
# I haven't seen any evidence of programs that support it.
0	beshort		000732		SGI imagelib image
d194 5
a198 2
#
0	string		IT01		FIT image file
d203 1
a203 1
0	string		IT02		FIT image file
d211 1
a211 1
# Jeff Uphoff <juphoff@@tarsier.cv.nrao.edu>
d214 11
a224 6
# FITS format.
0	string	SIMPLE\ \ =	FITS
>107	string	-32		32 bits per pixel, IEEE big endian float
>107	string	\ 32		32 bits per pixel, unsigned integer
>108	string	16		16 bits per pixel, unsigned integer
>109	string	8		8 bits per pixel, unsigned integer
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
