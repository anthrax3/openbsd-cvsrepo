head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.32
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.30
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.26
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.28
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.20
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.24
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.22
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.18
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.16
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.14
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.12
	OPENBSD_5_0:1.5.0.10
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.8
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.6
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.16
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.14
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.12
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.10
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.8
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.2.0.28
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.26
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.24
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.22
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.20
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.18
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.16
	OPENBSD_2_8:1.2.0.14
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.12
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.10
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.8
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.5
date	2009.04.24.18.54.34;	author chl;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.08.01.40.57;	author chl;	state Exp;
branches;
next	1.3;

1.3
date	2004.06.03.03.14.20;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	97.09.30.02.45.11;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.11;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.11;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@file update to 4.24

The '-i' switch is now enabled so file(1) can output mime type strings.

ok ian@@
builk ports build test on amd64 by jasper@@

ok ray@@ gilles@@ on a almost identical diff
builk ports build test on sparc64 on this almost identical diff by ajacoutot@@
also tested by landry@@
@
text
@#	$OpenBSD: lisp,v 1.4 2008/05/08 01:40:57 chl Exp $

#------------------------------------------------------------------------------
# lisp:  file(1) magic for lisp programs
#
# various lisp types, from Daniel Quinlan (quinlan@@yggdrasil.com)

# updated by Joerg Jenderek
# GRR: This lot is too weak
#0	string	;;			
# windows INF files often begin with semicolon and use CRLF as line end
# lisp files are mainly created on unix system with LF as line end
#>2	search/2048	!\r		Lisp/Scheme program text
#>2	search/2048	\r		Windows INF file

0	search/256	(if\ 			Lisp/Scheme program text
0	search/256	(setq\ 			Lisp/Scheme program text
0	search/256	(defvar\ 		Lisp/Scheme program text
0	search/256	(defparam\ 		Lisp/Scheme program text
0	search/256	(defun\  		Lisp/Scheme program text
0	search/256	(autoload\ 		Lisp/Scheme program text
0	search/256	(custom-set-variables\ 	Lisp/Scheme program text

# Emacs 18 - this is always correct, but not very magical.
0	string	\012(			Emacs v18 byte-compiled Lisp data
!:mime	application/x-elc
# Emacs 19+ - ver. recognition added by Ian Springer
# Also applies to XEmacs 19+ .elc files; could tell them apart with regexs
# - Chris Chittleborough <cchittleborough@@yahoo.com.au>
0	string	;ELC	
>4	byte	>18			
>4	byte    <32			Emacs/XEmacs v%d byte-compiled Lisp data
!:mime	application/x-elc		

# Files produced by CLISP Common Lisp From: Bruno Haible <haible@@ilog.fr>
0	string	(SYSTEM::VERSION\040'	CLISP byte-compiled Lisp program
0	long	0x70768BD2		CLISP memory image data
0	long	0xD28B7670		CLISP memory image data, other endian

# Files produced by GNU gettext
0	long	0xDE120495		GNU-format message catalog data
0	long	0x950412DE		GNU-format message catalog data

#.com and .bin for MIT scheme 
0	string	\372\372\372\372	MIT scheme (library?)

# From: David Allouche <david@@allouche.net>
0	search/1	\<TeXmacs|	TeXmacs document text
!:mime	text/texmacs
@


1.4
log
@Update file to 4.21.

tested by ian@@ sthen@@

OK ian@@, "move ahead with it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: lisp,v 1.3 2004/06/03 03:14:20 tedu Exp $
d9 2
a10 1
0	string	;;			
d13 2
a14 2
>2	search/2048	!\r		Lisp/Scheme program text
>2	search/2048	\r		Windows INF file
d26 1
d28 4
a31 4
# Also applies to XEmacs 19+ .elc files; could tell them apart if we had regexp
# support or similar - Chris Chittleborough <cchittleborough@@yahoo.com.au>
0	string	;ELC			
>4	byte	>19			
d33 1
d36 1
a36 1
0	string	(SYSTEM::VERSION\040'	CLISP byte-compiled Lisp program text
d48 2
a49 1
0	string	\<TeXmacs|	TeXmacs document text
@


1.3
log
@merge in new magic from file 4.09.  Mostly from Bruno Rohee
@
text
@d1 1
a1 1
#	$OpenBSD$
d8 14
a21 2
# This is a guess, but a good one.
0	string	;;			Lisp/Scheme program text
@


1.2
log
@Add clist types, jimw@@fornost.turner.com
@
text
@d1 1
d7 2
d10 1
d12 9
a20 4
0	string	\012(			byte-compiled Emacs-Lisp program data
# Emacs 19
0	string	;ELC\023\000\000\000	byte-compiled Emacs-Lisp program data
# clisp types, from Jim Wise (jimw@@fornost.turner.com)
d23 11
a33 1
0	long	0xD28B7670		CLISP memory image data, other
@


1.1
log
@Initial revision
@
text
@d11 4
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
