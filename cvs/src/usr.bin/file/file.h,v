head	1.30;
access;
symbols
	OPENBSD_6_2_BASE:1.30
	OPENBSD_6_1:1.30.0.6
	OPENBSD_6_1_BASE:1.30
	OPENBSD_6_0:1.30.0.2
	OPENBSD_6_0_BASE:1.30
	OPENBSD_5_9:1.29.0.2
	OPENBSD_5_9_BASE:1.29
	OPENBSD_5_8:1.29.0.4
	OPENBSD_5_8_BASE:1.29
	OPENBSD_5_7:1.24.0.2
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.24.0.4
	OPENBSD_5_6_BASE:1.24
	OPENBSD_5_5:1.23.0.6
	OPENBSD_5_5_BASE:1.23
	OPENBSD_5_4:1.23.0.2
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.22.0.14
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.22.0.12
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.10
	OPENBSD_5_0:1.22.0.8
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.22.0.6
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.22.0.4
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.2
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.20.0.4
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.19.0.4
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.2
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.18.0.2
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.17.0.2
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.16.0.12
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.10
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.8
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.6
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.4
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.2
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.15.0.2
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.12.0.2
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.7.0.10
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.8
	OPENBSD_2_8:1.7.0.6
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.4
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.30
date	2016.06.12.21.10.42;	author nicm;	state Exp;
branches;
next	1.29;
commitid	eEdc0QR7KzYo80HU;

1.29
date	2015.04.27.13.52.17;	author nicm;	state Exp;
branches;
next	1.28;
commitid	hZDBTMiQdWyr3asB;

1.28
date	2015.04.27.13.48.06;	author nicm;	state Exp;
branches;
next	1.27;
commitid	b1svYA2Ojd7TjGJa;

1.27
date	2015.04.27.13.41.45;	author nicm;	state Exp;
branches;
next	1.26;
commitid	2EKcnUf9L3xLVo15;

1.26
date	2015.04.24.16.47.32;	author nicm;	state Exp;
branches;
next	1.25;
commitid	AfcBhllyOgpBXu9w;

1.25
date	2015.04.24.16.24.11;	author nicm;	state Exp;
branches;
next	1.24;
commitid	4VUU04TZM8ebPiy4;

1.24
date	2014.05.18.17.50.11;	author espie;	state Exp;
branches;
next	1.23;

1.23
date	2013.04.17.15.01.26;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2009.10.27.23.59.37;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2009.08.27.16.26.43;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2009.04.24.18.54.34;	author chl;	state Exp;
branches;
next	1.19;

1.19
date	2008.05.08.01.40.56;	author chl;	state Exp;
branches;
next	1.18;

1.18
date	2007.11.26.09.28.34;	author martynas;	state Exp;
branches;
next	1.17;

1.17
date	2007.07.09.16.39.48;	author dim;	state Exp;
branches;
next	1.16;

1.16
date	2004.05.19.02.32.35;	author tedu;	state Exp;
branches
	1.16.10.1
	1.16.12.1;
next	1.15;

1.15
date	2003.11.09.20.13.57;	author otto;	state Exp;
branches;
next	1.14;

1.14
date	2003.07.02.21.04.10;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.13.18.31.14;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.03.11.21.26.26;	author ian;	state Exp;
branches;
next	1.11;

1.11
date	2003.03.03.22.24.08;	author ian;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.05.13.46.44;	author itojun;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2002.02.17.19.42.30;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.16.21.27.46;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	99.09.26.20.47.28;	author ian;	state Exp;
branches;
next	1.6;

1.6
date	98.10.13.07.51.51;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.07.10.15.05.21;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	97.07.25.21.05.26;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	97.02.09.23.58.23;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.32.57;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.09;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.09;	author deraadt;	state Exp;
branches;
next	;

1.10.2.1
date	2003.03.12.02.14.16;	author margarida;	state Exp;
branches;
next	;

1.16.10.1
date	2007.07.09.17.32.51;	author ckuethe;	state Exp;
branches;
next	;

1.16.12.1
date	2007.07.09.17.32.48;	author ckuethe;	state Exp;
branches;
next	;


desc
@@


1.30
log
@Remove old unused prototype, from Ilya Kaliman.
@
text
@/* $OpenBSD: file.h,v 1.29 2015/04/27 13:52:17 nicm Exp $ */

/*
 * Copyright (c) 2015 Nicholas Marriott <nicm@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER
 * IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef FILE_H
#define FILE_H

/* Bytes to read if can't use the whole file. */
#define FILE_READ_SIZE (256 * 1024)

/* User to drop privileges to in child process. */
#define FILE_USER "_file"

/* text.c */
const char	*text_get_type(const void *, size_t);
const char	*text_try_words(const void *, size_t, int);

#endif /* FILE_H */
@


1.29
log
@Use a systrace(4) sandbox with a short whitelist of allowed syscalls for
the file(1) child process. Based on similar code in ssh sandbox-systrace.c.
Idea and help from deraadt@@.
@
text
@d1 1
a1 1
/* $OpenBSD: file.h,v 1.28 2015/04/27 13:48:06 nicm Exp $ */
a26 3

/* sandbox.c */
int		 sandbox_fork(const char *);
@


1.28
log
@Add a _file user and use for privsep, ok deraadt
@
text
@d1 1
a1 1
/* $OpenBSD: file.h,v 1.27 2015/04/27 13:41:45 nicm Exp $ */
d27 3
@


1.27
log
@Add simple privilege separation to file(1). Two processes, file
descriptors and a few other bits are opened in parent and passed to
child using imsg. Child currently drops to "nobody" but this will change.
@
text
@d1 1
a1 1
/* $OpenBSD: file.h,v 1.26 2015/04/24 16:47:32 nicm Exp $ */
d26 1
a26 1
#define FILE_USER "nobody"
@


1.26
log
@Trying to drop privileges means we can't handle ARG_MAX arguments, so
remove it for now.
@
text
@d1 1
a1 1
/* $OpenBSD: file.h,v 1.25 2015/04/24 16:24:11 nicm Exp $ */
d24 3
@


1.25
log
@New implementation of the file(1) utility. This is a simplified,
modernised version with a nearly complete magic(5) parser but omits some
of the complex builtin tests (notably ELF) and has a reduced set of
options.

ok deraadt
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a23 3

/* User to drop to if run as root. */
#define FILE_USER "nobody"
@


1.24
log
@use reallocarray
okay ian@@, chl@@
@
text
@d1 2
a2 28
/*	$OpenBSD: file.h,v 1.23 2013/04/17 15:01:26 deraadt Exp $ */
/*
 * Copyright (c) Ian F. Darwin 1986-1995.
 * Software written by Ian F. Darwin and others;
 * maintained 1995-present by Christos Zoulas and others.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice immediately at the beginning of the file, without modification,
 *    this list of conditions, and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *  
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
d4 13
a16 2
 * file.h - definitions for file(1) program
 * @@(#)$Id: file.h,v 1.23 2013/04/17 15:01:26 deraadt Exp $
d19 2
a20 336
#ifndef __file_h__
#define __file_h__

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <stdio.h>	/* Include that here, to make sure __P gets defined */
#include <errno.h>
#include <fcntl.h>	/* For open and flags */
#ifdef HAVE_STDINT_H
#include <stdint.h>
#endif
#ifdef HAVE_INTTYPES_H
#include <inttypes.h>
#endif
#include <regex.h>
#include <sys/types.h>
/* Do this here and now, because struct stat gets re-defined on solaris */
#include <sys/stat.h>
#include <stdarg.h>

#define ENABLE_CONDITIONALS

#ifndef MAGIC
#define MAGIC "/etc/magic"
#endif

#ifdef __EMX__
#define PATHSEP	';'
#else
#define PATHSEP	':'
#endif

#define private static
#ifndef protected
#define protected
#endif
#define public

#ifndef __GNUC_PREREQ__
#ifdef __GNUC__
#define	__GNUC_PREREQ__(x, y)						\
	((__GNUC__ == (x) && __GNUC_MINOR__ >= (y)) ||			\
	 (__GNUC__ > (x)))
#else
#define	__GNUC_PREREQ__(x, y)	0
#endif
#endif

#ifndef MIN
#define	MIN(a,b)	(((a) < (b)) ? (a) : (b))
#endif

#ifndef MAX
#define	MAX(a,b)	(((a) > (b)) ? (a) : (b))
#endif

#ifndef HOWMANY
# define HOWMANY (256 * 1024)	/* how much of the file to look at */
#endif
#define MAXMAGIS 8192		/* max entries in any one magic file
				   or directory */
#define MAXDESC	64		/* max leng of text description/MIME type */
#define MAXstring 32		/* max leng of "string" types */

#define MAGICNO		0xF11E041C
#define VERSIONNO	5
#define FILE_MAGICSIZE	(32 * 6)

#define	FILE_LOAD	0
#define FILE_CHECK	1
#define FILE_COMPILE	2

struct magic {
	/* Word 1 */
	uint16_t cont_level;	/* level of ">" */
	uint8_t flag;
#define INDIR		0x01	/* if '(...)' appears */
#define OFFADD		0x02	/* if '>&' or '>...(&' appears */
#define INDIROFFADD	0x04	/* if '>&(' appears */
#define UNSIGNED	0x08	/* comparison is unsigned */
#define NOSPACE		0x10	/* suppress space character before output */
#define BINTEST		0x20	/* test is for a binary type (set only
                                   for top-level tests) */
#define TEXTTEST	0	/* for passing to file_softmagic */

	uint8_t dummy1;

	/* Word 2 */
	uint8_t reln;		/* relation (0=eq, '>'=gt, etc) */
	uint8_t vallen;		/* length of string value, if any */
	uint8_t type;		/* comparison type (FILE_*) */
	uint8_t in_type;	/* type of indirection */
#define 			FILE_INVALID	0
#define 			FILE_BYTE	1
#define				FILE_SHORT	2
#define				FILE_DEFAULT	3
#define				FILE_LONG	4
#define				FILE_STRING	5
#define				FILE_DATE	6
#define				FILE_BESHORT	7
#define				FILE_BELONG	8
#define				FILE_BEDATE	9
#define				FILE_LESHORT	10
#define				FILE_LELONG	11
#define				FILE_LEDATE	12
#define				FILE_PSTRING	13
#define				FILE_LDATE	14
#define				FILE_BELDATE	15
#define				FILE_LELDATE	16
#define				FILE_REGEX	17
#define				FILE_BESTRING16	18
#define				FILE_LESTRING16	19
#define				FILE_SEARCH	20
#define				FILE_MEDATE	21
#define				FILE_MELDATE	22
#define				FILE_MELONG	23
#define				FILE_QUAD	24
#define				FILE_LEQUAD	25
#define				FILE_BEQUAD	26
#define				FILE_QDATE	27
#define				FILE_LEQDATE	28
#define				FILE_BEQDATE	29
#define				FILE_QLDATE	30
#define				FILE_LEQLDATE	31
#define				FILE_BEQLDATE	32
#define				FILE_FLOAT	33
#define				FILE_BEFLOAT	34
#define				FILE_LEFLOAT	35
#define				FILE_DOUBLE	36
#define				FILE_BEDOUBLE	37
#define				FILE_LEDOUBLE	38
#define				FILE_NAMES_SIZE	39/* size of array to contain all names */

#define IS_STRING(t) \
	((t) == FILE_STRING || \
	 (t) == FILE_PSTRING || \
	 (t) == FILE_BESTRING16 || \
	 (t) == FILE_LESTRING16 || \
	 (t) == FILE_REGEX || \
	 (t) == FILE_SEARCH || \
	 (t) == FILE_DEFAULT)

#define FILE_FMT_NONE 0
#define FILE_FMT_NUM  1 /* "cduxXi" */
#define FILE_FMT_STR  2 /* "s" */
#define FILE_FMT_QUAD 3 /* "ll" */
#define FILE_FMT_FLOAT 4 /* "eEfFgG" */
#define FILE_FMT_DOUBLE 5 /* "eEfFgG" */

	/* Word 3 */
	uint8_t in_op;		/* operator for indirection */
	uint8_t mask_op;	/* operator for mask */
#ifdef ENABLE_CONDITIONALS
	uint8_t cond;		/* conditional type */
	uint8_t dummy2;	
#else
	uint8_t dummy2;	
	uint8_t dummy3;	
#endif

#define				FILE_OPS	"&|^+-*/%"
#define				FILE_OPAND	0
#define				FILE_OPOR	1
#define				FILE_OPXOR	2
#define				FILE_OPADD	3
#define				FILE_OPMINUS	4
#define				FILE_OPMULTIPLY	5
#define				FILE_OPDIVIDE	6
#define				FILE_OPMODULO	7
#define				FILE_OPS_MASK	0x07 /* mask for above ops */
#define				FILE_UNUSED_1	0x08
#define				FILE_UNUSED_2	0x10
#define				FILE_UNUSED_3	0x20
#define				FILE_OPINVERSE	0x40
#define				FILE_OPINDIRECT	0x80

#ifdef ENABLE_CONDITIONALS
#define				COND_NONE	0
#define				COND_IF		1
#define				COND_ELIF	2
#define				COND_ELSE	3
#endif /* ENABLE_CONDITIONALS */

	/* Word 4 */
	uint32_t offset;	/* offset to magic number */
	/* Word 5 */
	int32_t in_offset;	/* offset from indirection */
	/* Word 6 */
	uint32_t lineno;	/* line number in magic file */
	/* Word 7,8 */
	union {
		uint64_t _mask;	/* for use with numeric and date types */
		struct {
			uint32_t _count;	/* repeat/line count */
			uint32_t _flags;	/* modifier flags */
		} _s;		/* for use with string types */
	} _u;
#define num_mask _u._mask
#define str_range _u._s._count
#define str_flags _u._s._flags

	/* Words 9-16 */
	union VALUETYPE {
		uint8_t b;
		uint16_t h;
		uint32_t l;
		uint64_t q;
		uint8_t hs[2];	/* 2 bytes of a fixed-endian "short" */
		uint8_t hl[4];	/* 4 bytes of a fixed-endian "long" */
		uint8_t hq[8];	/* 8 bytes of a fixed-endian "quad" */
		char s[MAXstring];	/* the search string or regex pattern */
		float f;
		double d;
	} value;		/* either number or string */
	/* Words 17..31 */
	char desc[MAXDESC];	/* description */
	/* Words 32..47 */
	char mimetype[MAXDESC]; /* MIME type */
};

#define BIT(A)   (1 << (A))
#define STRING_COMPACT_BLANK		BIT(0)
#define STRING_COMPACT_OPTIONAL_BLANK	BIT(1)
#define STRING_IGNORE_LOWERCASE		BIT(2)
#define STRING_IGNORE_UPPERCASE		BIT(3)
#define REGEX_OFFSET_START		BIT(4)
#define CHAR_COMPACT_BLANK		'B'
#define CHAR_COMPACT_OPTIONAL_BLANK	'b'
#define CHAR_IGNORE_LOWERCASE		'c'
#define CHAR_IGNORE_UPPERCASE		'C'
#define CHAR_REGEX_OFFSET_START		's'
#define STRING_IGNORE_CASE		(STRING_IGNORE_LOWERCASE|STRING_IGNORE_UPPERCASE)
#define STRING_DEFAULT_RANGE		100


/* list of magic entries */
struct mlist {
	struct magic *magic;		/* array of magic entries */
	uint32_t nmagic;			/* number of entries in array */
	int mapped;  /* allocation type: 0 => apprentice_file
		      *                  1 => apprentice_map + malloc
		      *                  2 => apprentice_map + mmap */
	struct mlist *next, *prev;
};

struct magic_set {
	struct mlist *mlist;
	struct cont {
		size_t len;
		struct level_info {
			int32_t off;
			int got_match;
#ifdef ENABLE_CONDITIONALS
			int last_match;
			int last_cond;	/* used for error checking by parse() */
#endif
		} *li;
	} c;
	struct out {
		char *buf;		/* Accumulation buffer */
		char *pbuf;		/* Printable buffer */
	} o;
	uint32_t offset;
	int error;
	int flags;
	int haderr;
	const char *file;
	size_t line;			/* current magic line number */

	/* data for searches */
	struct {
		const char *s;		/* start of search in original source */
		size_t s_len;		/* length of search region */
		size_t offset;		/* starting offset in source: XXX - should this be off_t? */
		size_t rm_len;		/* match length */
	} search;

	/* FIXME: Make the string dynamically allocated so that e.g.
	   strings matched in files can be longer than MAXstring */
	union VALUETYPE ms_value;	/* either number or string */
};

/* Type for Unicode characters */
typedef unsigned long unichar;

struct stat;
protected const char *file_fmttime(uint64_t, int);
protected int file_buffer(struct magic_set *, int, const char *, const void *,
    size_t);
protected int file_fsmagic(struct magic_set *, const char *, struct stat *);
protected int file_pipe2file(struct magic_set *, int, const void *, size_t);
protected int file_printf(struct magic_set *, const char *, ...);
protected int file_reset(struct magic_set *);
protected int file_tryelf(struct magic_set *, int, const unsigned char *,
    size_t);
protected int file_zmagic(struct magic_set *, int, const char *,
    const unsigned char *, size_t);
protected int file_ascmagic(struct magic_set *, const unsigned char *, size_t);
protected int file_is_tar(struct magic_set *, const unsigned char *, size_t);
protected int file_softmagic(struct magic_set *, const unsigned char *, size_t, int);
protected struct mlist *file_apprentice(struct magic_set *, const char *, int);
protected uint64_t file_signextend(struct magic_set *, struct magic *,
    uint64_t);
protected void file_delmagic(struct magic *, int type, size_t entries);
protected void file_badread(struct magic_set *);
protected void file_badseek(struct magic_set *);
protected void file_oomem(struct magic_set *, size_t);
protected void file_oomem2(struct magic_set *, size_t, size_t);
protected void file_error(struct magic_set *, int, const char *, ...);
protected void file_magerror(struct magic_set *, const char *, ...);
protected void file_magwarn(struct magic_set *, const char *, ...);
protected void file_mdump(struct magic *);
protected void file_showstr(FILE *, const char *, size_t);
protected size_t file_mbswidth(const char *);
protected const char *file_getbuffer(struct magic_set *);
protected ssize_t sread(int, void *, size_t, int);
protected int file_check_mem(struct magic_set *, unsigned int);
protected int file_looks_utf8(const unsigned char *, size_t, unichar *, size_t *);

#ifndef COMPILE_ONLY
extern const char *file_names[];
extern const size_t file_nnames;
#endif

#ifndef HAVE_STRERROR
extern int sys_nerr;
extern char *sys_errlist[];
#define strerror(e) \
	(((e) >= 0 && (e) < sys_nerr) ? sys_errlist[(e)] : "Unknown error")
#endif

#ifndef HAVE_STRTOUL
#define strtoul(a, b, c)	strtol(a, b, c)
#endif
d22 2
a23 6
#ifndef HAVE_VASPRINTF
int vasprintf(char **ptr, const char *format_string, va_list vargs);
#endif
#ifndef HAVE_ASPRINTF
int asprintf(char **ptr, const char *format_string, ...);
#endif
d25 2
a26 3
#if defined(HAVE_MMAP) && defined(HAVE_SYS_MMAN_H) && !defined(QUICK)
#define QUICK
#endif
d28 3
a30 3
#ifndef O_BINARY
#define O_BINARY	0
#endif
d32 1
a32 1
#endif /* __file_h__ */
@


1.23
log
@variety of fixes to correct large time_t code.  it is quite broken upstream.
ok chl
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.22 2009/10/27 23:59:37 deraadt Exp $ */
d31 1
a31 1
 * @@(#)$Id: file.h,v 1.22 2009/10/27 23:59:37 deraadt Exp $
d343 1
@


1.22
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.21 2009/08/27 16:26:43 deraadt Exp $ */
d31 1
a31 1
 * @@(#)$Id: file.h,v 1.21 2009/08/27 16:26:43 deraadt Exp $
d322 1
a322 1
protected const char *file_fmttime(uint32_t, int);
@


1.21
log
@Appease gcc2 (I wish people would write in C, rather than "latest crap
gcc added")
ok millert miod
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.20 2009/04/24 18:54:34 chl Exp $ */
d31 1
a31 1
 * @@(#)$Id: file.h,v 1.20 2009/04/24 18:54:34 chl Exp $
a383 8

#if defined(__GNUC__) && (__GNUC__ >= 3)
static const char *rcsid(const char *) __attribute__((__used__));
#endif
#define FILE_RCSID(id) \
static const char *rcsid(const char *p) { \
	return rcsid(p = id); \
}
@


1.20
log
@file update to 4.24

The '-i' switch is now enabled so file(1) can output mime type strings.

ok ian@@
builk ports build test on amd64 by jasper@@

ok ray@@ gilles@@ on a almost identical diff
builk ports build test on sparc64 on this almost identical diff by ajacoutot@@
also tested by landry@@
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.19 2008/05/08 01:40:56 chl Exp $ */
d31 1
a31 1
 * @@(#)$Id: file.h,v 1.19 2008/05/08 01:40:56 chl Exp $
d385 1
a385 1
#ifdef __GNUC__
@


1.19
log
@Update file to 4.21.

tested by ian@@ sthen@@

OK ian@@, "move ahead with it" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.18 2007/11/26 09:28:34 martynas Exp $ */
d31 1
a31 1
 * @@(#)$Id: file.h,v 1.18 2007/11/26 09:28:34 martynas Exp $
d54 1
d88 4
d95 3
a97 2
#define MAXMAGIS 8192		/* max entries in /etc/magic */
#define MAXDESC	64		/* max leng of text description */
d101 2
a102 2
#define VERSIONNO	4
#define FILE_MAGICSIZE	(32 * 4)
a110 1
	uint8_t nospflag;	/* suppress space character */
d112 10
a121 4
#define INDIR		1	/* if '(...)' appears */
#define OFFADD		2	/* if '>&' or '>...(&' appears */
#define INDIROFFADD	4	/* if '>&(' appears */
#define	UNSIGNED	8	/* comparison is unsigned */
d126 2
a127 2
	uint8_t type;		/* int, short, long or string. */
	uint8_t in_type;	/* type of indirrection */
d161 7
a167 1
#define				FILE_NAMES_SIZE	33/* size of array to contain all names */
d182 2
d190 1
a190 1
	uint8_t dummy1;	
a191 1
	uint8_t dummy1;	
d193 1
d234 1
a234 1
#define str_count _u._s._count
d247 2
d252 2
d268 1
d295 2
a296 8
		/* Accumulation buffer */
		char *buf;
		char *ptr;
		size_t left;
		size_t size;
		/* Printable buffer */
		char *pbuf;
		size_t psize;
d313 2
d318 3
d335 1
a335 1
protected int file_softmagic(struct magic_set *, const unsigned char *, size_t);
d352 1
d370 5
a374 2
#ifndef HAVE_SNPRINTF
int snprintf(char *, size_t, const char *, ...);
d385 3
@


1.18
log
@typos;  ok jmc@@
sys/netinet/in_pcb.c and sys/net/bridgestp.c ok henning@@
sys/dev/pci/bktr/* ok jakemsr@@
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.17 2007/07/09 16:39:48 dim Exp $ */
d31 1
a31 1
 * @@(#)$Id: file.h,v 1.17 2007/07/09 16:39:48 dim Exp $
d43 1
d50 2
d55 2
d73 14
d88 1
a88 1
# define HOWMANY 65536		/* how much of the file to look at */
d90 1
a90 1
#define MAXMAGIS 4096		/* max entries in /etc/magic */
d95 1
a95 1
#define VERSIONNO	2
d107 5
a111 3
#define INDIR	1		/* if '>(...)' appears,  */
#define	UNSIGNED 2		/* comparison is unsigned */
#define OFFADD	4		/* if '>&' appears,  */
d117 1
d120 1
d135 31
d169 4
d175 2
d186 14
a199 1
#define				FILE_OPINVERSE	0x80
d203 1
a203 1
	uint32_t in_offset;	/* offset from indirection */
d205 13
a217 5
	uint32_t mask;	/* mask before comparison with value */
	/* Word 7 */
	uint32_t dummy3;
	/* Word 8 */
	uint32_t dummp4;
d223 1
a223 2
		char s[MAXstring];
		char *buf;
d226 2
d234 5
a238 4
#define STRING_IGNORE_LOWERCASE		BIT(0)
#define STRING_COMPACT_BLANK		BIT(1)
#define STRING_COMPACT_OPTIONAL_BLANK	BIT(2)
#define CHAR_IGNORE_LOWERCASE		'c'
d241 4
d258 38
a295 18
    struct mlist *mlist;
    struct cont {
	size_t len;
	int32_t *off;
    } c;
    struct out {
	/* Accumulation buffer */
	char *buf;
	char *ptr;
	size_t left;
	size_t size;
	/* Printable buffer */
	char *pbuf;
	size_t psize;
    } o;
    int error;
    int flags;
    int haderr;
d299 3
a301 2
protected char *file_fmttime(uint32_t, int);
protected int file_buffer(struct magic_set *, const void *, size_t);
d306 4
a309 2
protected int file_tryelf(struct magic_set *, int, const unsigned char *, size_t);
protected int file_zmagic(struct magic_set *, const unsigned char *, size_t);
d314 2
a315 1
protected uint32_t file_signextend(struct magic_set *, struct magic *, uint32_t);
d319 1
a319 1
protected void file_oomem(struct magic_set *);
d321 2
a322 1
protected void file_magwarn(const char *, ...);
d327 22
d354 4
a361 1
#else
@


1.17
log
@Fix possible heap overflow in file(1), aka CVE-2007-1536.

When writing data into a buffer in the file_printf() function, the
length of the unused portion of the buffer is not correctly tracked,
resulting in a buffer overflow when processing certain files.

Adapted from FreeBSD's SA-07:04.file fix, with ok and some minor
tweaks from canacar@@ and ray@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.16 2004/05/19 02:32:35 tedu Exp $ */
d31 1
a31 1
 * @@(#)$Id: file.h,v 1.16 2004/05/19 02:32:35 tedu Exp $
d86 1
a86 1
	uint8_t nospflag;	/* supress space character */
@


1.16
log
@big update to file 4.09.  ok ian@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d31 1
a31 1
 * @@(#)$Id: file.h,v 1.60 2004/03/22 19:12:15 christos Exp $
d180 1
a180 1
	size_t len;
@


1.16.10.1
log
@Backport security fix.
Original commit by: dim@@openbsd.org
Original commit message:
Fix possible heap overflow in file(1), aka CVE-2007-1536.

When writing data into a buffer in the file_printf() function, the
length of the unused portion of the buffer is not correctly tracked,
resulting in a buffer overflow when processing certain files.

Adapted from FreeBSD's SA-07:04.file fix, with ok and some minor
tweaks from canacar@@ and ray@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.17 2007/07/09 16:39:48 dim Exp $ */
d31 1
a31 1
 * @@(#)$Id: file.h,v 1.17 2007/07/09 16:39:48 dim Exp $
d180 1
a180 1
	size_t left;
@


1.16.12.1
log
@Backport security fix.
Original commit by: dim@@openbsd.org
Original commit message:
Fix possible heap overflow in file(1), aka CVE-2007-1536.

When writing data into a buffer in the file_printf() function, the
length of the unused portion of the buffer is not correctly tracked,
resulting in a buffer overflow when processing certain files.

Adapted from FreeBSD's SA-07:04.file fix, with ok and some minor
tweaks from canacar@@ and ray@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.17 2007/07/09 16:39:48 dim Exp $ */
d31 1
a31 1
 * @@(#)$Id: file.h,v 1.17 2007/07/09 16:39:48 dim Exp $
d180 1
a180 1
	size_t left;
@


1.15
log
@Typos in comments from Jared Yanovich <jjy2+ at pitt dot edu>
@
text
@d1 1
a1 2
/*	$OpenBSD: file.h,v 1.14 2003/07/02 21:04:10 deraadt Exp $	*/

a2 2
 * file.h - definitions for file(1) program
 *
d29 4
d41 1
a42 1
#include <stdio.h>
d45 2
a46 1
#elif defined(HAVE_INTTYPES_H)
d49 18
d69 1
a69 1
# define HOWMANY 8192		/* how much of the file to look at */
d71 2
a72 2
#define MAXMAGIS 5000		/* max entries in /etc/magic */
#define MAXDESC	50		/* max leng of text description */
d75 8
d84 4
a87 1
	short flag;		
d90 48
a137 21
#define ADD	4		/* if '>&' appears,  */
	short cont_level;	/* level of ">" */
	struct {
		int8_t type;	/* byte short long */
		int32_t offset;	/* offset from indirection */
	} in;
	int32_t offset;		/* offset to magic number */
	unsigned char reln;	/* relation (0=eq, '>'=gt, etc) */
	int8_t type;		/* int, short, long or string. */
	char vallen;		/* length of string value, if any */
#define 			BYTE	1
#define				SHORT	2
#define				LONG	4
#define				STRING	5
#define				DATE	6
#define				BESHORT	7
#define				BELONG	8
#define				BEDATE	9
#define				LESHORT	10
#define				LELONG	11
#define				LEDATE	12
d139 2
a140 2
		unsigned char b;
		unsigned short h;
d143 3
a145 2
		unsigned char hs[2];	/* 2 bytes of a fixed-endian "short" */
		unsigned char hl[4];	/* 2 bytes of a fixed-endian "long" */
d147 1
a147 2
	uint32_t mask;	/* mask before comparison with value */
	char nospflag;		/* suppress space character */
d151 18
a168 17
extern int   apprentice(char *, int);
extern int   ascmagic(unsigned char *, int);
extern void  ckfputs(const char *, FILE *);
struct stat;
extern int   fsmagic(const char *, struct stat *);
extern int   is_compress(const unsigned char *, int *);
extern int   is_tar(unsigned char *, int);
extern void  mdump(struct magic *);
extern void  process(const char *, int);
extern void  showstr(FILE *, const char *, int);
extern int   softmagic(unsigned char *, int);
extern int   tryit(unsigned char *, int, int);
extern int   zmagic(unsigned char *, int);
extern void  ckfprintf(FILE *, const char *, ...);
extern uint32_t signextend(struct magic *, uint32_t);
extern int internatmagic(unsigned char *, int);
extern void tryelf(int, unsigned char *, int);
d170 20
d191 34
a224 40
extern int errno;		/* Some unixes don't define this..	*/

extern char *progname;		/* the program name 			*/
extern char *magicfile;		/* name of the magic file		*/
extern int lineno;		/* current line number in magic file	*/

extern struct magic *magic;	/* array of magic entries		*/
extern int nmagic;		/* number of valid magic[]s 		*/


extern int debug;		/* enable debugging?			*/
extern int zflag;		/* process compressed files?		*/
extern int lflag;		/* follow symbolic links?		*/

extern int optind;		/* From getopt(3)			*/
extern char *optarg;

#if defined(sun) || defined(__sun__) || defined (__sun)
# if defined(__svr4) || defined (__SVR4) || defined(__svr4__)
#  define SOLARIS
# else
#  define SUNOS
# endif
#endif


#if !defined(__STDC__) || defined(SUNOS) || defined(__convex__)
extern int sys_nerr;
extern char *sys_errlist[];
#define strerror(e) \
	(((e) >= 0 && (e) < sys_nerr) ? sys_errlist[(e)] : "Unknown error")
#define strtoul(a, b, c)	strtol(a, b, c)
#endif

#ifndef MAXPATHLEN
#define	MAXPATHLEN	512
#endif

int	pipe2file(int, void *, size_t);
void	error(const char *, ...);
@


1.14
log
@protos
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.13 2003/06/13 18:31:14 deraadt Exp $	*/
d89 1
a89 1
	char nospflag;		/* supress space character */
@


1.13
log
@ian gives permission for 3/4 removal
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.12 2003/03/11 21:26:26 ian Exp $	*/
d149 3
@


1.12
log
@Replace TPUM license with standard BSD-style license
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.11 2003/03/03 22:24:08 ian Exp $	*/
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    This product includes software developed by Ian F. Darwin and others.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.11
log
@Bring in readelf.c from Christos' version 3.41 to head off a local
stack attack noted by iDefense, and for more complete 64-bit ELF support.
Add hand-made config.h to avoid running configure but still be able
to use Christos' code.  In print.c add error(...)-->err(1,...) wrapper.
Tested on i386, sparc64, macppc.
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.10 2002/06/05 13:46:44 itojun Exp $	*/
d6 30
a35 22
 * Copyright (c) Ian F. Darwin, 1987.
 * Written by Ian F. Darwin.
 *
 * This software is not subject to any license of the American Telephone
 * and Telegraph Company or of the Regents of the University of California.
 *
 * Permission is granted to anyone to use this software for any purpose on
 * any computer system, and to alter it and redistribute it freely, subject
 * to the following restrictions:
 *
 * 1. The author is not responsible for the consequences of use of this
 *    software, no matter how awful, even if they arise from flaws in it.
 *
 * 2. The origin of this software must not be misrepresented, either by
 *    explicit claim or by omission.  Since few users ever read sources,
 *    credits must appear in the documentation.
 *
 * 3. Altered versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.  Since few users
 *    ever read sources, credits must appear in the documentation.
 *
 * 4. This notice may not be removed or altered.
@


1.10
log
@use types in inttypes.h directly
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.9 2002/02/17 19:42:30 millert Exp $	*/
d33 12
d106 1
a106 1
extern void tryelf(int, char *, int);
@


1.10.2.1
log
@Pull patch from current.
Fix by ian@@
Bring in readelf.c from Christos' version 3.41 to head off a local
stack attack noted by iDefense, and for more complete 64-bit ELF support.
Add hand-made config.h to avoid running configure but still be able
to use Christos' code.  In print.c add error(...)-->err(1,...) wrapper.
Tested on i386, sparc64, macppc.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.11 2003/03/03 22:24:08 ian Exp $	*/
a32 12
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <errno.h>
#include <stdio.h>
#ifdef HAVE_STDINT_H
#include <stdint.h>
#elif defined(HAVE_INTTYPES_H)
#include <inttypes.h>
#endif

d94 1
a94 1
extern void tryelf(int, unsigned char *, int);
@


1.9
log
@Manual cleanup of remaining userland __P use (excluding packages maintained outside the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.8 2002/02/16 21:27:46 millert Exp $	*/
a32 4
typedef int8_t int8;
typedef int32_t int32;
typedef u_int32_t uint32;

d47 2
a48 2
		int8 type;	/* byte short long */
		int32 offset;	/* offset from indirection */
d50 1
a50 1
	int32 offset;		/* offset to magic number */
d52 1
a52 1
	int8 type;		/* int, short, long or string. */
d68 1
a68 1
		uint32 l;
d73 1
a73 1
	uint32 mask;	/* mask before comparison with value */
d92 1
a92 1
extern uint32 signextend(struct magic *, unsigned int32);
@


1.8
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.7 1999/09/26 20:47:28 ian Exp $	*/
a80 11

#include <stdio.h>	/* Include that here, to make sure __P gets defined */

#ifndef __P
# ifdef __STDC__ || __cplusplus
#  define __P(a) a
# else
#  define __P(a) ()
#  define const
# endif
#endif
@


1.7
log
@Increase MAXMAGIS again, and change the reallocation - don't need to
skimp on memory as much as when this code was written! (Thanks Theo).
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.6 1998/10/13 07:51:51 deraadt Exp $	*/
d93 3
a95 3
extern int   apprentice		__P((char *, int));
extern int   ascmagic		__P((unsigned char *, int));
extern void  ckfputs		__P((const char *, FILE *));
d97 13
a109 13
extern int   fsmagic		__P((const char *, struct stat *));
extern int   is_compress	__P((const unsigned char *, int *));
extern int   is_tar		__P((unsigned char *, int));
extern void  mdump		__P((struct magic *));
extern void  process		__P((const char *, int));
extern void  showstr		__P((FILE *, const char *, int));
extern int   softmagic		__P((unsigned char *, int));
extern int   tryit		__P((unsigned char *, int, int));
extern int   zmagic		__P((unsigned char *, int));
extern void  ckfprintf		__P((FILE *, const char *, ...));
extern uint32 signextend	__P((struct magic *, unsigned int32));
extern int internatmagic	__P((unsigned char *, int));
extern void tryelf		__P((int, char *, int));
@


1.6
log
@unsigned char fix; rahnds
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.5 1998/07/10 15:05:21 mickey Exp $	*/
d40 1
a40 1
#define MAXMAGIS 1000		/* max entries in /etc/magic */
@


1.5
log
@err/warn
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.4 1997/07/25 21:05:26 mickey Exp $	*/
d33 1
d51 1
a51 1
		char type;	/* byte short long */
d56 1
a56 1
	char type;		/* int, short, long or string. */
@


1.4
log
@#if __STDC__ --> #ifdef __STDC__
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.3 1997/02/09 23:58:23 millert Exp $	*/
a93 1
extern void  error		__P((const char *, ...));
a98 1
extern void  magwarn		__P((const char *, ...));
@


1.3
log
@Updates file(1) to version 3.22 by way to NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.2 1996/06/26 05:32:57 deraadt Exp $	*/
d84 1
a84 1
# if __STDC__ || __cplusplus
@


1.2
log
@rcsid
@
text
@d1 2
a2 1
/* * @@(#)$OpenBSD: file.h,v 1.1.1.1 1995/10/18 08:45:09 deraadt Exp $*/
d30 6
d47 1
d51 1
a51 1
		long offset;	/* offset from indirection */
d53 1
a53 1
	long offset;		/* offset to magic number */
d71 1
a71 1
		unsigned long l;
d76 1
a76 1
	unsigned long mask;	/* mask before comparison with value */
d108 3
a110 2
extern unsigned long signextend	__P((struct magic *, unsigned long));

d130 10
a139 1
#if !defined(__STDC__) || defined(sun) || defined(__sun__) || defined(__convex__)
d150 2
@


1.1
log
@Initial revision
@
text
@d1 1
a3 1
 * @@(#)$Id: file.h,v 1.7 1995/05/21 00:13:30 christos Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
