head	1.3;
access;
symbols
	OPENBSD_5_7:1.2.0.20
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.24
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.22
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.18
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.16
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.14
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.12
	OPENBSD_5_0:1.2.0.10
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.8
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.3
date	2015.04.24.16.24.11;	author nicm;	state dead;
branches;
next	1.2;
commitid	4VUU04TZM8ebPiy4;

1.2
date	2009.04.26.14.17.45;	author chl;	state Exp;
branches;
next	1.1;

1.1
date	2009.04.24.18.54.34;	author chl;	state Exp;
branches;
next	;


desc
@@


1.3
log
@New implementation of the file(1) utility. This is a simplified,
modernised version with a nearly complete magic(5) parser but omits some
of the complex builtin tests (notably ELF) and has a reduced set of
options.

ok deraadt
@
text
@/*	$OpenBSD: file_opts.h,v 1.2 2009/04/26 14:17:45 chl Exp $ */
/*
 * Table of command-line options
 *
 * The first column specifies the short name, if any, or 0 if none.
 * The second column specifies the long name.
 * The third column specifies whether it takes a parameter.
 * The fourth column is the documentation.
 *
 * N.B. The long options' order must correspond to the code in file.c,
 * and OPTSTRING must be kept up-to-date with the short options.
 * Pay particular attention to the numbers of long-only options in the
 * switch statement!
 */

OPT_LONGONLY("help", 0, "                 display this help and exit\n")
OPT('v', "version", 0, "              output version information and exit\n")
OPT('m', "magic-file", 1, " LIST      use LIST as a colon-separated list of magic\n"
    "                               number files\n")
OPT('z', "uncompress", 0, "           try to look inside compressed files\n")
OPT('b', "brief", 0, "                do not prepend filenames to output lines\n")
OPT('c', "checking-printout", 0, "    print the parsed form of the magic file, use in\n"
    "                               conjunction with -m to debug a new magic file\n"
    "                               before installing it\n")
OPT('e', "exclude", 1, " TEST         exclude TEST from the list of test to be\n"
    "                               performed for file. Valid tests are:\n"
    "                               ascii, apptype, compress, elf, soft, tar, tokens, troff\n")
OPT('f', "files-from", 1, " FILE      read the filenames to be examined from FILE\n")
OPT('F', "separator", 1, " STRING     use string as separator instead of `:'\n")
OPT('i', "mime", 0, "                 output MIME type strings (--mime-type and\n"
    "                               --mime-encoding)\n")
OPT_LONGONLY("mime-type", 0, "            output the MIME type\n")
OPT_LONGONLY("mime-encoding", 0, "        output the MIME encoding\n")
OPT('k', "keep-going", 0, "           don't stop at the first match\n")
#ifdef S_IFLNK
OPT('L', "dereference", 0, "          follow symlinks (default)\n")
OPT('h', "no-dereference", 0, "       don't follow symlinks\n")
#endif
OPT('n', "no-buffer", 0, "            do not buffer output\n")
OPT('N', "no-pad", 0, "               do not pad output\n")
OPT('0', "print0", 0, "               terminate filenames with ASCII NUL\n")
#if defined(HAVE_UTIME) || defined(HAVE_UTIMES)
OPT('p', "preserve-date", 0, "        preserve access times on files\n")
#endif
OPT('r', "raw", 0, "                  don't translate unprintable chars to \\ooo\n")
OPT('s', "special-files", 0, "        treat special (block/char devices) files as\n"
    "                             ordinary ones\n")
OPT('C', "compile", 0, "              compile file specified by -m\n")
OPT('d', "debug", 0, "                print debugging messages\n")
@


1.2
log
@add missing $OpenBSD$ tags

ok ian@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
@


1.1
log
@file update to 4.24

The '-i' switch is now enabled so file(1) can output mime type strings.

ok ian@@
builk ports build test on amd64 by jasper@@

ok ray@@ gilles@@ on a almost identical diff
builk ports build test on sparc64 on this almost identical diff by ajacoutot@@
also tested by landry@@
@
text
@d1 1
@

