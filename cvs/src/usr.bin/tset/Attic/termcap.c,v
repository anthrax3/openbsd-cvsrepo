head	1.8;
access;
symbols
	OPENBSD_5_4:1.7.0.16
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.14
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.12
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.12
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.8
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.6
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.4
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.3.0.8
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.6
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2013.09.18.16.21.29;	author millert;	state dead;
branches;
next	1.7;

1.7
date	2009.10.27.23.59.46;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2007.03.20.03.56.13;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.03.02.56.20;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.04.22.03.55;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.16.06.14.31;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2000.08.02.04.10.50;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	98.11.16.03.08.41;	author millert;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Remove "tset -S" compatibility I added years ago.  Most converted
terminfo entries for most terminals are too large to fit within the
1023 bytes allowed for termcap.  We're better off without it.
OK espie@@ jmc@@
@
text
@/*	$OpenBSD: termcap.c,v 1.7 2009/10/27 23:59:46 deraadt Exp $	*/
/*	$NetBSD: termcap.c,v 1.7 1995/06/05 19:45:52 pk Exp $	*/

/*
 * Copyright (c) 1980, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#define	PVECSIZ		32	/* max number of names in path */
#define	_PATH_DEF	".termcap /usr/share/misc/termcap"

#include <sys/param.h>
#include <sys/types.h>
#include <stdio.h>
#include <ctype.h>
#include <err.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

/*
 * Get an entry for terminal name in buffer bp from the termcap file.
 */
int
tcgetent(bp, name)
	char *bp;
	const char *name;
{
	char  *p;
	char  *cp;
	char  *dummy;
	char **fname;
	char  *home;
	int    i;
	char   pathbuf[MAXPATHLEN];	/* holds raw path of filenames */
	char  *pathvec[PVECSIZ];	/* to point to names in pathbuf */
	char **pvec;			/* holds usable tail of path vector */
	char  *termpath;

	fname = pathvec;
	pvec = pathvec;

	if (!issetugid()) {
		cp = getenv("TERMCAP");
		/*
		 * TERMCAP can have one of two things in it. It can be the name
		 * of a file to use instead of /usr/share/misc/termcap. In this
		 * case it better start with a "/". Or it can be an entry to
		 * use so we don't have to read the file. In this case it
		 * has to already have the newlines crunched out.  If TERMCAP
		 * does not hold a file name then a path of names is searched
		 * instead.  The path is found in the TERMPATH variable, or
		 * becomes "$HOME/.termcap /usr/share/misc/termcap" if no
		 * TERMPATH exists.
		 */
		if (!cp || *cp != '/') { /* no TERMCAP or it holds an entry */
			if ((termpath = getenv("TERMPATH")) != NULL)
				strlcpy(pathbuf, termpath, sizeof(pathbuf));
			else {
				if ((home = getenv("HOME")) != NULL &&
				    *home != '\0' &&
				    strlen(home) + sizeof(_PATH_DEF) <
				    sizeof(pathbuf)) {
					snprintf(pathbuf, sizeof pathbuf,
					    "%s/%s", home, _PATH_DEF);
				} else {
					strlcpy(pathbuf, _PATH_DEF,
					    sizeof(pathbuf));
				}
			}
		} else {		/* user-defined path in TERMCAP */
			/* still can be tokenized */
			strlcpy(pathbuf, cp, sizeof(pathbuf));
		}
		*fname++ = pathbuf;	/* tokenize path into vector of names */
	}

	/* split pathbuf into a vector of paths */
	p = pathbuf;
	while (*++p)
		if (*p == ' ' || *p == ':') {
			*p = '\0';
			while (*++p)
				if (*p != ' ' && *p != ':')
					break;
			if (*p == '\0')
				break;
			*fname++ = p;
			if (fname >= pathvec + PVECSIZ) {
				fname--;
				break;
			}
		}
	*fname = (char *) 0;			/* mark end of vector */
	if (cp && *cp && *cp != '/')
		if (cgetset(cp) < 0)
			return (-2);

	dummy = NULL;
	i = cgetent(&dummy, pathvec, (char *)name);
	
	if (i == 0 && bp != NULL) {
		strlcpy(bp, dummy, 1024);
		if ((cp = strrchr(bp, ':')) != NULL)
			if (cp[1] != '\0')
				cp[1] = '\0';
	}
	else if (i == 0 && bp == NULL)
		bp = dummy;
	else if (dummy != NULL)
		free(dummy);

	/* no tc reference loop return code in libterm XXX */
	if (i == -3)
		return (-1);
	return (i + 1);
}

/*
 * Output termcap entry to stdout, quoting characters that would give the
 * shell problems and omitting empty fields.
 */
void
wrtermcap(bp)
	char *bp;
{
	int ch;
	char *p;
	char *t, *sep;

	/* Find the end of the terminal names. */
	if ((t = strchr(bp, ':')) == NULL)
		err(1, "termcap names not colon terminated");
	*t++ = '\0';

	/* Output terminal names that don't have whitespace. */
	sep = "";
	while ((p = strsep(&bp, "|")) != NULL)
		if (*p != '\0' && strpbrk(p, " \t") == NULL) {
			(void)printf("%s%s", sep, p);
			sep = "|";
		}
	(void)putchar(':');

	/*
	 * Output fields, transforming any dangerous characters.  Skip
	 * empty fields or fields containing only whitespace.
	 */
	while ((p = strsep(&t, ":")) != NULL) {
		while (isspace(*p))
			++p;
		if (*p == '\0')
			continue;
		while ((ch = *p++) != '\0')
			switch(ch) {
			case '\033':
				(void)printf("\\E");
			case  ' ':		/* No spaces. */
				(void)printf("\\040");
				break;
			case '!':		/* No csh history chars. */
				(void)printf("\\041");
				break;
			case ',':		/* No csh history chars. */
				(void)printf("\\054");
				break;
			case '"':		/* No quotes. */
				(void)printf("\\042");
				break;
			case '\'':		/* No quotes. */
				(void)printf("\\047");
				break;
			case '`':		/* No quotes. */
				(void)printf("\\140");
				break;
			case '\\':		/* Anything following is OK. */
			case '^':
				(void)putchar(ch);
				if ((ch = *p++) == '\0')
					break;
				/* FALLTHROUGH */
			default:
				(void)putchar(ch);
		}
		(void)putchar(':');
	}
}
@


1.7
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: termcap.c,v 1.6 2007/03/20 03:56:13 tedu Exp $	*/
@


1.6
log
@remove some bogus *p tests from charles longeau
ok deraadt millert
@
text
@d1 1
a1 1
/*	$OpenBSD: termcap.c,v 1.5 2003/06/03 02:56:20 millert Exp $	*/
a31 4

#ifndef lint
static char rcsid[] = "$OpenBSD: termcap.c,v 1.5 2003/06/03 02:56:20 millert Exp $";
#endif /* not lint */
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: termcap.c,v 1.4 2003/04/04 22:03:55 deraadt Exp $	*/
d34 1
a34 1
static char rcsid[] = "$OpenBSD: termcap.c,v 1.4 2003/04/04 22:03:55 deraadt Exp $";
d178 1
a178 1
		while ((ch = *p) != '\0' && isspace(ch))
d180 1
a180 1
		if (ch == '\0')
@


1.4
log
@easy snprintf; tedu ok
@
text
@d1 1
a1 1
/*	$OpenBSD: termcap.c,v 1.3 2001/07/16 06:14:31 pvalchev Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d34 1
a34 1
static char rcsid[] = "$OpenBSD: termcap.c,v 1.3 2001/07/16 06:14:31 pvalchev Exp $";
@


1.3
log
@-Wall cleanup; ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: termcap.c,v 1.2 2000/08/02 04:10:50 millert Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: termcap.c,v 1.2 2000/08/02 04:10:50 millert Exp $";
d96 2
a97 2
					sprintf(pathbuf, "%s/%s", home,
					    _PATH_DEF);
@


1.2
log
@$HOME paranoia: never use getenv("HOME") w/o checking for NULL and non-zero
@
text
@d1 1
a1 1
/*	$OpenBSD: termcap.c,v 1.1 1998/11/16 03:08:41 millert Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: termcap.c,v 1.1 1998/11/16 03:08:41 millert Exp $";
d48 1
a70 1
	char  *ttype;
d165 1
a165 1
		err("termcap names not colon terminated");
@


1.1
log
@ncurses tset plus hacks to make $TERMCAP still get set
@
text
@d1 1
a1 1
/*	$OpenBSD: termcap.c,v 1.3 1998/11/04 21:21:24 millert Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: termcap.c,v 1.3 1998/11/04 21:21:24 millert Exp $";
d93 1
@

