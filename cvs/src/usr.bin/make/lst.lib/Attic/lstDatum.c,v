head	1.9;
access;
symbols
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.4.0.4
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2000.06.23.16.15.50;	author espie;	state dead;
branches;
next	1.8;

1.8
date	2000.06.17.14.34.06;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.10.01.41.06;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.26.16.21.33;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	99.12.18.21.53.33;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	98.12.05.00.06.31;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	96.11.30.21.09.12;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.36.45;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.45;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.45;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Trivial consequences of the previous list changes:

- audit code for Lst_Datum, it's never applied to an empty pointer,
so check can be removed -> turn into a macro,
- Lst_First, Lst_Last can become macro as well
- specialized version of Lst_Succ (Lst_Adv) to use in loops where it cannot
fail,
- Lst_Open can no longer fail. Trim down corresponding code.

Reviewed millert@@, miod@@
@
text
@/*	$OpenBSD: lstDatum.c,v 1.8 2000/06/17 14:34:06 espie Exp $	*/
/*	$NetBSD: lstDatum.c,v 1.5 1996/11/06 17:59:35 christos Exp $	*/

/*
 * Copyright (c) 1988, 1989, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Adam de Boor.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)lstDatum.c	8.1 (Berkeley) 6/6/93";
#else
static char rcsid[] = "$OpenBSD: lstDatum.c,v 1.8 2000/06/17 14:34:06 espie Exp $";
#endif
#endif /* not lint */

/*-
 * LstDatum.c --
 *	Return the datum associated with a list node.
 */

#include	"lstInt.h"

/*-
 *-----------------------------------------------------------------------
 * Lst_Datum --
 *	Return the datum stored in the given node.
 *
 * Results:
 *	The datum or (ick!) NULL if the node is invalid.
 *
 * Side Effects:
 *	None.
 *
 *-----------------------------------------------------------------------
 */
void *
Lst_Datum(ln)
    LstNode	ln;
{
    if (ln != NULL)
	return ln->datum;
    else
	return NULL;
}

@


1.8
log
@This patch moves the definition of lists and list nodes to lst.h.
C is not well-suited for opaque data structures.

Then it proceeds by removing a lot of non-sensical casts and white space.

There are two motivations behind this change:
* small functions like Lst_First can now be redefined as macros safely
(otherwise, the cast would mean that you might write Lst_First(5) and
find out about it rather late)
* the size of the Lst data structure is exposed to user code. This will
be used to allocate lists statically, instead of malloc/free them like
crazy.
@
text
@d1 1
a1 1
/*	$OpenBSD: lstDatum.c,v 1.7 2000/06/10 01:41:06 espie Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: lstDatum.c,v 1.7 2000/06/10 01:41:06 espie Exp $";
@


1.7
log
@Clean-up patch: use `void *' instead of old-fashioned ClientData/Address.
@
text
@d1 1
a1 1
/*	$OpenBSD: lstDatum.c,v 1.6 2000/03/26 16:21:33 espie Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: lstDatum.c,v 1.6 2000/03/26 16:21:33 espie Exp $";
d73 1
a73 1
	return ((ListNode)ln)->datum;
@


1.6
log
@Remove idiotic, braindead casts T* -> void*
They serve no purpose, except hiding potential bugs.

In particular, remove (ClientData) cast from macro, showing potentially
troublesome use of Hashes to store time_t.
@
text
@d1 1
a1 1
/*	$OpenBSD: lstDatum.c,v 1.5 1999/12/18 21:53:33 espie Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: lstDatum.c,v 1.5 1999/12/18 21:53:33 espie Exp $";
d68 1
a68 1
ClientData
@


1.5
log
@NIL, NILGNODE, etc, are only glorified NULL.
Get rid of them.

Get rid of list.h, nothing uses it anyway.
@
text
@d1 1
a1 1
/*	$OpenBSD: lstDatum.c,v 1.4 1998/12/05 00:06:31 espie Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: lstDatum.c,v 1.4 1998/12/05 00:06:31 espie Exp $";
d69 1
a69 1
Lst_Datum (ln)
d72 4
a75 5
    if (ln != NULL) {
	return (((ListNode)ln)->datum);
    } else {
	return ((ClientData) NULL);
    }
@


1.4
log
@Modifications from netbsd:
- don't interfere with MACHINE/MACHINE_ARCH defines for bootstrap
- type clean-up, time_t, and printing `unknown' ints
- fix TARGET/MEMBER bug in archive rules
- memmove...
- cleaner Error handler.
- reentrant brk_string
- .MAKE env variable
- preliminary scaffolding for .NOPATH

Other improvements:
- efree
- shellneed streamlined
- display Stop in .CURDIR after an error.
- document most features and misfeatures.
- add a few OpenBSD notes to the tutorial.
@
text
@d1 1
a1 1
/*	$OpenBSD: lstDatum.c,v 1.2 1996/06/26 05:36:45 deraadt Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: lstDatum.c,v 1.2 1996/06/26 05:36:45 deraadt Exp $";
d61 1
a61 1
 *	The datum or (ick!) NIL if the node is invalid.
d72 1
a72 1
    if (ln != NILLNODE) {
d75 1
a75 1
	return ((ClientData) NIL);
@


1.3
log
@Sync with NetBSD:
- Merge in FreeBSD and Lite2 changes.
- Fix bug where a non-archive target with a .a suffix would always
  be considered to be out of date, since it does not have a TOC.
- Fix NetBSD PR #2930: declare missing variable.
@
text
@@


1.2
log
@rcsid
@
text
@d1 2
a2 2
/*	$OpenBSD: lstDatum.c,v 1.4 1995/06/14 15:20:54 christos Exp $	*/
/*	$NetBSD: lstDatum.c,v 1.4 1995/06/14 15:20:54 christos Exp $	*/
d5 2
a6 2
 * Copyright (c) 1988, 1989, 1990 The Regents of the University of California.
 * All rights reserved.
d42 1
a42 1
static char sccsid[] = "@@(#)lstDatum.c	5.3 (Berkeley) 6/1/90";
d44 1
a44 1
static char rcsid[] = "$OpenBSD: lstDatum.c,v 1.4 1995/06/14 15:20:54 christos Exp $";
@


1.1
log
@Initial revision
@
text
@d1 1
d44 1
a44 1
static char rcsid[] = "$NetBSD: lstDatum.c,v 1.4 1995/06/14 15:20:54 christos Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
