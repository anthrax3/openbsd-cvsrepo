head	1.19;
access;
symbols
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.4
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.18.0.24
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.16
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.20
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.18
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.14
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.12
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.10
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.8
	OPENBSD_5_0:1.18.0.6
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.18.0.4
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.18.0.2
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.17.0.8
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.10
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.6
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.4
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.2
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.16.0.2
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.14.0.12
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.10
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.8
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.6
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.4
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.2
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.12.0.8
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.6
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.4
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.4
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.4.0.4
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2015.10.14.13.50.22;	author espie;	state Exp;
branches;
next	1.18;
commitid	N2KJxs0d4DGFAkuD;

1.18
date	2010.07.19.19.46.44;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2007.09.16.09.46.14;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	2007.07.30.09.51.53;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2007.07.29.13.49.54;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.07.13.11.36;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.03.02.56.12;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.29.12.53.46;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2001.05.23.12.34.56;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2001.05.03.13.41.21;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2000.09.14.13.32.09;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2000.06.17.14.34.07;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.10.01.41.07;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	99.12.19.00.04.26;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	99.12.18.21.53.33;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	98.12.05.00.06.32;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	96.11.30.21.09.15;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.36.48;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.45;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.45;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@make sure we use stdbool.h
Mostly diff by Daniel Dickman, who told me to commit in his stead,
as he's tied up at work.
@
text
@/*	$OpenBSD: lstFindFrom.c,v 1.18 2010/07/19 19:46:44 espie Exp $	*/
/*	$NetBSD: lstFindFrom.c,v 1.6 1996/11/06 17:59:40 christos Exp $ */

/*
 * Copyright (c) 1988, 1989, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Adam de Boor.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*-
 * LstFindFrom.c --
 *	Find a node on a list from a given starting point. Used by Lst_Find.
 */

#include	"lstInt.h"
#include	<stddef.h>

/*-
 *-----------------------------------------------------------------------
 * Lst_FindFrom --
 *	Search for a node starting and ending with the given one on the
 *	given list using the passed datum and comparison function to
 *	determine when it has been found.
 *
 * Results:
 *	The found node or NULL
 *-----------------------------------------------------------------------
 */
LstNode
Lst_FindFrom(LstNode ln, FindProc cProc, void *d)
{
	LstNode tln;

	for (tln = ln; tln != NULL; tln = tln->nextPtr)
		if (!(*cProc)(tln->datum, d))
			return tln;

	return NULL;
}

@


1.18
log
@Correct $OpenBSD$ stuff
@
text
@d1 1
a1 1
/*	$OpenBSD: lstFindFrom.c,v 1.17 2007/09/16 09:46:14 espie Exp $	*/
d61 1
a61 1
		if ((*cProc)(tln->datum, d) == 0)
@


1.17
log
@remove dead code: #define RECHECK is always on
@
text
@d1 1
a1 2
/*	$OpenPackages$ */
/*	$OpenBSD: lstFindFrom.c,v 1.14 2004/04/07 13:11:36 espie Exp $	*/
@


1.16
log
@everywhere except in Var_Parse, we always add/append variables to the
VAR_GLOBAL context, so make it the common case: rename the basic functions
to Var_Set_with_ctxt/Var_Append_with_ctxt, define Var_Set and Var_Append
as macros that specify VAR_GLOBAL, and use these.

okay miod@@
@
text
@@


1.15
log
@reindent, no code change
@
text
@@


1.14
log
@ISO function declarations, trim a few comments, rename a few variables to
more explicit/more consistent names.

okay otto@@
@
text
@d2 1
a2 1
/*	$OpenBSD: lstFindFrom.c,v 1.13 2003/06/03 02:56:12 millert Exp $	*/
d59 1
a59 1
    LstNode		tln;
d61 3
a63 3
    for (tln = ln; tln != NULL; tln = tln->nextPtr)
	if ((*cProc)(tln->datum, d) == 0)
	    return tln;
d65 1
a65 1
    return NULL;
@


1.13
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d2 1
a2 1
/*	$OpenBSD: lstFindFrom.c,v 1.12 2001/05/29 12:53:46 espie Exp $	*/
d57 1
a57 4
Lst_FindFrom(ln, cProc, d)
    LstNode		ln;
    FindProc		cProc;
    void		*d;
@


1.12
log
@Take includes out of lst.h, re-add what's needed to separate files.
Removes remaining lint stuff from lst.lib.
@
text
@d2 1
a2 1
/*	$OpenBSD: lstFindFrom.c,v 1.4 1998/12/05 00:06:32 espie Exp $	*/
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.11
log
@Mostly clean-up:
- cut up those huge include files into separate interfaces for all modules.
Put the interface documentation there, and not with the implementation.
- light-weight includes for needed concrete types (lst_t.h, timestamp_t.h).
- cut out some more logically separate parts: cmd_exec, varname, parsevar,
timestamp.
- put all error handling functions together, so that we will be able to
clean them up.
- more systematic naming: functioni  to handle interval, function to handle
string.
- put the init/end code apart to minimize coupling.
- kill weird types like ReturnStatus and Boolean. Use standard bool (with a
fallback for non-iso systems)
- better interface documentation for lots of subsystems.

As a result, make compilation goes somewhat faster (5%, even considering
the largish BSD copyrights to read). The corresponding preprocessed
source goes down from 1,5M to 1M.

A few minor code changes as well: Parse_DoVar is no longer destructive.
Parse_IsVar functionality is folded into Parse_DoVar (as it knows what an
assignment is), a few more interval handling functions. Avoid calling
XXX_End when they do nothing, just #define XXX_End   to nothing.

Parse_DoVar is slightly more general: it will handle compound assignments
as long as they make sense, e.g., VAR +!= cmd
will work.  As a side effect, VAR++=value now triggers an error
(two + in assignment).
- this stuff doesn't occur in portable Makefiles.
- writing VAR++ = value or VAR+ +=value  disambiguates it.
- this is a good thing, it uncovered a bug in bsd.port.mk.

Tested by naddy@@. Okayed millert@@. I'll handle the fallback if there is
any. This went through a full make build anyways, including isakmpd
(without mickey's custom binutils, as he didn't see fit to share it with me).
@
text
@d47 1
a47 9

#ifndef lint
#if 0
static char sccsid[] = "@@(#)lstFindFrom.c	8.1 (Berkeley) 6/6/93";
#else
UNUSED
static char *rcsid = "$OpenBSD: lstFindFrom.c,v 1.4 1998/12/05 00:06:32 espie Exp $";
#endif
#endif /* not lint */
@


1.10
log
@Synch with my current work.
Numerous changes:
- generate can build several tables
- style cleanup
- statistics code
- use variable names throughout (struct Name)
- recursive variables everywhere
- faster parser (pass buffer along instead of allocating multiple copies)
- correct parser. Handles comments everywhere, and ; correctly
- more string intervals
- simplified dir.c, less recursion.
- extended for loops
- sinclude()
- finished removing extra junk from Lst_*
- handles ${@@D} and friends in a simpler way
- cleaned up and modular VarModifiers handling.
- recognizes some gnu Makefile usages and errors out about them.

Additionally, some extra functionality is defined by FEATURES. The set of
functionalities is currently hardcoded to OpenBSD defaults, but this may
include support for some NetBSD extensions, like ODE modifiers.

Backed by miod@@ and millert@@, who finally got sick of my endless patches...
@
text
@@


1.9
log
@Some systematic clean-up.
- UNUSED macro that expands to __attribute__((unused)) for gcc
- move rcsid around so that they can be tagged UNUSED.
- activate -Wunused.
- use UNUSED instead of kludgy junk for function arguments.
- add extern to all extern prototypes.
- update comments in lst.h.
- clean up var.c a little bit, constifying arguments, updating comments...
@
text
@d1 3
a3 2
/*	$OpenBSD: lstFindFrom.c,v 1.8 2000/06/17 14:34:07 espie Exp $	*/
/*	$NetBSD: lstFindFrom.c,v 1.6 1996/11/06 17:59:40 christos Exp $	*/
d47 1
d53 1
a53 1
static char *rcsid = "$OpenBSD: lstFindFrom.c,v 1.8 2000/06/17 14:34:07 espie Exp $";
a56 1

d60 3
a62 3
 *	Search for a node through a list, starting with the given node,
 *	using the comparison function and passed datum to determine when 
 *	it has been found.
d65 1
a65 4
 *	The node if found, or NULL
 *
 * Side Effects:
 *	Whatever cProc incurs.
d70 3
a72 3
    LstNode    	ln;
    FindProc	cProc;
    void	*d;
d74 1
a74 1
    LstNode	tln;
d77 1
a77 1
	if ((*cProc)(tln->datum, d) == 0) 
d79 1
d82 1
@


1.8
log
@This patch moves the definition of lists and list nodes to lst.h.
C is not well-suited for opaque data structures.

Then it proceeds by removing a lot of non-sensical casts and white space.

There are two motivations behind this change:
* small functions like Lst_First can now be redefined as macros safely
(otherwise, the cast would mean that you might write Lst_First(5) and
find out about it rather late)
* the size of the Lst data structure is exposed to user code. This will
be used to allocate lists statically, instead of malloc/free them like
crazy.
@
text
@d1 1
a1 1
/*	$OpenBSD: lstFindFrom.c,v 1.7 2000/06/10 01:41:07 espie Exp $	*/
d40 6
d50 2
a51 1
static char *rcsid = "$OpenBSD: lstFindFrom.c,v 1.7 2000/06/10 01:41:07 espie Exp $";
a54 6
/*-
 * LstFindFrom.c --
 *	Find a node on a list from a given starting point. Used by Lst_Find.
 */

#include	"lstInt.h"
@


1.7
log
@Clean-up patch: use `void *' instead of old-fashioned ClientData/Address.
@
text
@d1 1
a1 1
/*	$OpenBSD: lstFindFrom.c,v 1.6 1999/12/19 00:04:26 espie Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: lstFindFrom.c,v 1.6 1999/12/19 00:04:26 espie Exp $";
d75 1
a75 1
    ListNode	tln;
d77 1
a77 1
    for (tln = (ListNode)ln; tln != NULL; tln = tln->nextPtr)
d79 1
a79 1
	    return (LstNode)tln;
@


1.6
log
@Rearrange Lst_Find interface to conform better with other functions.
@
text
@d1 1
a1 1
/*	$OpenBSD: lstFindFrom.c,v 1.5 1999/12/18 21:53:33 espie Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: lstFindFrom.c,v 1.5 1999/12/18 21:53:33 espie Exp $";
d73 1
a73 1
    ClientData 	d;
@


1.5
log
@NIL, NILGNODE, etc, are only glorified NULL.
Get rid of them.

Get rid of list.h, nothing uses it anyway.
@
text
@d1 1
a1 1
/*	$OpenBSD: lstFindFrom.c,v 1.4 1998/12/05 00:06:32 espie Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: lstFindFrom.c,v 1.4 1998/12/05 00:06:32 espie Exp $";
d58 3
a60 3
 *	Search for a node starting and ending with the given one on the
 *	given list using the passed datum and comparison function to
 *	determine when it has been found.
d63 1
a63 1
 *	The found node or NULL
d66 1
a66 2
 *	None.
 *
d70 4
a73 5
Lst_FindFrom (l, ln, d, cProc)
    Lst		      	l;
    register LstNode    ln;
    register ClientData d;
    register int	(*cProc) __P((ClientData, ClientData));
d75 1
a75 2
    register ListNode	tln;
    Boolean		found = FALSE;
d77 4
a80 20
    if (!LstValid (l) || LstIsEmpty (l) || !LstNodeValid (ln, l)) {
	return (NULL);
    }

    tln = (ListNode)ln;

    do {
	if ((*cProc) (tln->datum, d) == 0) {
	    found = TRUE;
	    break;
	} else {
	    tln = tln->nextPtr;
	}
    } while (tln != (ListNode)ln && tln != NULL);

    if (found) {
	return ((LstNode)tln);
    } else {
	return (NULL);
    }
a81 1

@


1.4
log
@Modifications from netbsd:
- don't interfere with MACHINE/MACHINE_ARCH defines for bootstrap
- type clean-up, time_t, and printing `unknown' ints
- fix TARGET/MEMBER bug in archive rules
- memmove...
- cleaner Error handler.
- reentrant brk_string
- .MAKE env variable
- preliminary scaffolding for .NOPATH

Other improvements:
- efree
- shellneed streamlined
- display Stop in .CURDIR after an error.
- document most features and misfeatures.
- add a few OpenBSD notes to the tutorial.
@
text
@d1 1
a1 1
/*	$OpenBSD: lstFindFrom.c,v 1.2 1996/06/26 05:36:48 deraadt Exp $	*/
d44 1
a44 1
static char *rcsid = "$OpenBSD: lstFindFrom.c,v 1.2 1996/06/26 05:36:48 deraadt Exp $";
d63 1
a63 1
 *	The found node or NILLNODE
d81 1
a81 1
	return (NILLNODE);
d93 1
a93 1
    } while (tln != (ListNode)ln && tln != NilListNode);
d98 1
a98 1
	return (NILLNODE);
@


1.3
log
@Sync with NetBSD:
- Merge in FreeBSD and Lite2 changes.
- Fix bug where a non-archive target with a .a suffix would always
  be considered to be out of date, since it does not have a TOC.
- Fix NetBSD PR #2930: declare missing variable.
@
text
@@


1.2
log
@rcsid
@
text
@d1 2
a2 2
/*	$OpenBSD: lstFindFrom.c,v 1.5 1995/06/14 15:21:09 christos Exp $	*/
/*	$NetBSD: lstFindFrom.c,v 1.5 1995/06/14 15:21:09 christos Exp $	*/
d5 2
a6 2
 * Copyright (c) 1988, 1989, 1990 The Regents of the University of California.
 * All rights reserved.
d41 5
a45 2
/* from: static char sccsid[] = "@@(#)lstFindFrom.c	5.3 (Berkeley) 6/1/90"; */
static char *rcsid = "$OpenBSD: lstFindFrom.c,v 1.1.1.1 1995/10/18 08:45:45 deraadt Exp $";
d79 1
a79 1
    
d83 1
a83 1
    
d85 1
a85 1
    
d94 1
a94 1
    
@


1.1
log
@Initial revision
@
text
@d1 1
d42 1
a42 1
static char *rcsid = "$Id: lstFindFrom.c,v 1.5 1995/06/14 15:21:09 christos Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
