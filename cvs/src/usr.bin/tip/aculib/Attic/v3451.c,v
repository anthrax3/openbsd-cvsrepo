head	1.11;
access;
symbols
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.16
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.12
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.10
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.18
	OPENBSD_2_8:1.4.0.16
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2010.06.29.16.41.57;	author nicm;	state dead;
branches;
next	1.10;

1.10
date	2009.10.27.23.59.45;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.17.19.17.13;	author moritz;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.03.02.56.18;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.07.06.56.50;	author hugh;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.24.18.38.58;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.26.06.07.28;	author pvalchev;	state Exp;
branches;
next	1.4;

1.4
date	97.04.02.01.47.07;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.40.55;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.12.27;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.18;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.18;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Bye-bye acu which even UUCP-using naddy agrees "was obsolete 20 years ago" :-).
@
text
@/*	$OpenBSD: v3451.c,v 1.10 2009/10/27 23:59:45 deraadt Exp $	*/
/*	$NetBSD: v3451.c,v 1.6 1997/02/11 09:24:20 mrg Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Routines for calling up on a Vadic 3451 Modem
 */
#include "tip.h"

static	jmp_buf Sjbuf;

static void	vawrite(char *, int);
static int	expect(char *);
static void	alarmtr(int);
static int	notin(char *, char *);
static int	prefix(char *, char *);

int
v3451_dialer(char *num, char *acu)
{
	sig_t func;
	int ok;
	int slow = number(value(BAUDRATE)) < 1200;
	char phone[50];
	struct termios cntrl;

	/*
	 * Get in synch
	 */
	vawrite("I\r", 1 + slow);
	vawrite("I\r", 1 + slow);
	vawrite("I\r", 1 + slow);
	vawrite("\005\r", 2 + slow);
	if (!expect("READY")) {
		printf("can't synchronize with vadic 3451\n");
#ifdef ACULOG
		logent(value(HOST), num, "vadic", "can't synch up");
#endif
		return (0);
	}
	tcgetattr(FD, &cntrl);
	term.c_cflag |= HUPCL;
	tcsetattr(FD, TCSANOW, &cntrl);
	sleep(1);
	vawrite("D\r", 2 + slow);
	if (!expect("NUMBER?")) {
		printf("Vadic will not accept dial command\n");
#ifdef ACULOG
		logent(value(HOST), num, "vadic", "will not accept dial");
#endif
		return (0);
	}
	(void)snprintf(phone, sizeof phone, "%s\r", num);
	vawrite(phone, 1 + slow);
	if (!expect(phone)) {
		printf("Vadic will not accept phone number\n");
#ifdef ACULOG
		logent(value(HOST), num, "vadic", "will not accept number");
#endif
		return (0);
	}
	func = signal(SIGINT,SIG_IGN);
	/*
	 * You cannot interrupt the Vadic when its dialing;
	 * even dropping DTR does not work (definitely a
	 * brain damaged design).
	 */
	vawrite("\r", 1 + slow);
	vawrite("\r", 1 + slow);
	if (!expect("DIALING:")) {
		printf("Vadic failed to dial\n");
#ifdef ACULOG
		logent(value(HOST), num, "vadic", "failed to dial");
#endif
		return (0);
	}
	if (boolean(value(VERBOSE)))
		printf("\ndialing...");
	ok = expect("ON LINE");
	signal(SIGINT, func);
	if (!ok) {
		printf("call failed\n");
#ifdef ACULOG
		logent(value(HOST), num, "vadic", "call failed");
#endif
		return (0);
	}
	tcflush(FD, TCIOFLUSH);
	return (1);
}

void
v3451_disconnect(void)
{
	close(FD);
}

void
v3451_abort(void)
{
	close(FD);
}

static void
vawrite(char *cp, int delay)
{
	for (; *cp; sleep(delay), cp++)
		write(FD, cp, 1);
}

static int
expect(char *cp)
{
	char buf[300];
	char *rp = buf;
	int timeout = 30, online = 0;

	if (strcmp(cp, "\"\"") == 0)
		return (1);
	*rp = 0;
	/*
	 * If we are waiting for the Vadic to complete
	 * dialing and get a connection, allow more time
	 * Unfortunately, the Vadic times out 24 seconds after
	 * the last digit is dialed
	 */
	online = strcmp(cp, "ON LINE") == 0;
	if (online)
		timeout = number(value(DIALTIMEOUT));
	signal(SIGALRM, alarmtr);
	if (setjmp(Sjbuf))
		return (0);
	alarm(timeout);
	while (notin(cp, buf) && rp < buf + sizeof (buf) - 1) {
		if (online && notin("FAILED CALL", buf) == 0)
			return (0);
		if (read(FD, rp, 1) < 0) {
			alarm(0);
			return (0);
		}
		if (*rp &= 0177)
			rp++;
		*rp = '\0';
	}
	alarm(0);
	return (1);
}

/*ARGSUSED*/
static void
alarmtr(int signo)
{
	longjmp(Sjbuf, 1);
}

static int
notin(char *sh, char *lg)
{
	for (; *lg; lg++)
		if (prefix(sh, lg))
			return (0);
	return (1);
}

static int
prefix(char *s1, char *s2)
{
	char c;

	while ((c = *s1++) == *s2++)
		if (c == '\0')
			return (1);
	return (c == '\0');
}
@


1.10
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: v3451.c,v 1.9 2006/03/17 19:17:13 moritz Exp $	*/
@


1.9
log
@ansification and correct prototypes. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: v3451.c,v 1.8 2003/06/03 02:56:18 millert Exp $	*/
a31 7

#ifndef lint
#if 0
static char sccsid[] = "@@(#)v3451.c	8.1 (Berkeley) 6/6/93";
#endif
static const char rcsid[] = "$OpenBSD: v3451.c,v 1.8 2003/06/03 02:56:18 millert Exp $";
#endif /* not lint */
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: v3451.c,v 1.7 2002/05/07 06:56:50 hugh Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: v3451.c,v 1.7 2002/05/07 06:56:50 hugh Exp $";
d47 5
a51 2
static	int expect(), notin(), prefix();
static	void vawrite(), alarmtr();
d54 1
a54 3
v3451_dialer(num, acu)
	char *num;
	char *acu;
d128 1
a128 1
v3451_disconnect()
a129 1

d134 1
a134 1
v3451_abort()
a135 1

d140 1
a140 3
vawrite(cp, delay)
	char *cp;
	int delay;
a141 1

d147 1
a147 2
expect(cp)
	char *cp;
d184 1
d186 1
a186 1
alarmtr()
d192 1
a192 2
notin(sh, lg)
	char *sh, *lg;
a193 1

d201 1
a201 2
prefix(s1, s2)
	char *s1, *s2;
@


1.7
log
@Carefully applied -Wall fixups from <panda@@omatis.com>.
Also a little KNF.
@
text
@d1 1
a1 1
/*	$OpenBSD: v3451.c,v 1.6 2001/10/24 18:38:58 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: v3451.c,v 1.6 2001/10/24 18:38:58 millert Exp $";
@


1.6
log
@kill register
@
text
@d1 1
a1 1
/*	$OpenBSD: v3451.c,v 1.5 2001/09/26 06:07:28 pvalchev Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v3451.c,v 1.5 2001/09/26 06:07:28 pvalchev Exp $";
@


1.5
log
@Wall cleanup w/ some fixes; ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: v3451.c,v 1.4 1997/04/02 01:47:07 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v3451.c,v 1.4 1997/04/02 01:47:07 millert Exp $";
d56 1
a56 1
	register char *num;
d146 1
a146 1
	register char *cp;
d156 1
a156 1
	register char *cp;
d159 1
a159 1
	register char *rp = buf;
d212 1
a212 1
	register char *s1, *s2;
d214 1
a214 1
	register char c;
@


1.4
log
@Merge in good changes from NetBSD:
    Compile in strcict ansi (some day I'll get around to -Wall)
    use set* functions instead of modifying the lvalue
    Change a few sprintf() to snprintf() where it coudl possibly matter.
    Replace zzhack stuff with something saner to make tip work on alpha
@
text
@d1 1
a1 1
/*	$OpenBSD: v3451.c,v 1.3 1996/06/26 05:40:55 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v3451.c,v 1.3 1996/06/26 05:40:55 deraadt Exp $";
d54 1
d61 1
a61 1
	int slow = number(value(BAUDRATE)) < 1200, rw = 2;
a63 3
#ifdef ACULOG
	char line[80];
#endif
d130 1
d137 1
d154 1
a154 1
static
d210 1
a210 1
static
@


1.3
log
@rcsid
@
text
@d1 2
a2 2
/*	$OpenBSD: v3451.c,v 1.4 1995/10/29 00:49:59 pk Exp $	*/
/*	$NetBSD: v3451.c,v 1.4 1995/10/29 00:49:59 pk Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: v3451.c,v 1.4 1995/10/29 00:49:59 pk Exp $";
d51 3
a65 2
	static int expect();
	static void vawrite();
d93 1
a93 2
	strcpy(phone, num);
	strcat(phone, "\r");
a160 2
	static int notin();
	static void alarmtr();
a202 1
	static int prefix();
@


1.2
log
@from netbsd:
Convert to termios (from Scott Reynolds; PR#1621).
8-bit patches (from Matthieu Herrb; PR#1384).
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: v3451.c,v 1.4 1995/10/29 00:49:59 pk Exp $";
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: v3451.c,v 1.3 1994/12/08 09:31:48 jtc Exp $	*/
d40 1
a40 1
static char rcsid[] = "$NetBSD: v3451.c,v 1.3 1994/12/08 09:31:48 jtc Exp $";
d58 1
d79 3
a81 1
	ioctl(FD, TIOCHPCL, 0);
d127 1
a127 1
	ioctl(FD, TIOCFLUSH, &rw);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
