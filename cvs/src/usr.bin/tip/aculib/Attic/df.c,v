head	1.11;
access;
symbols
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.16
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.12
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.10
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2010.06.29.16.41.57;	author nicm;	state dead;
branches;
next	1.10;

1.10
date	2009.10.27.23.59.45;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.17.19.17.13;	author moritz;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.17.14.43.06;	author moritz;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.03.02.56.18;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.07.06.56.50;	author hugh;	state Exp;
branches;
next	1.5;

1.5
date	2001.10.24.18.38.58;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.26.06.07.28;	author pvalchev;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.40.52;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.12.24;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.17;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.17;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Bye-bye acu which even UUCP-using naddy agrees "was obsolete 20 years ago" :-).
@
text
@/*	$OpenBSD: df.c,v 1.10 2009/10/27 23:59:45 deraadt Exp $	*/
/*	$NetBSD: df.c,v 1.4 1995/10/29 00:49:51 pk Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Dial the DF02-AC or DF03-AC
 */

#include "tip.h"

static jmp_buf Sjbuf;

static int	df_dialer(char *, char *, int);
static void	alrm_timeout(int);

int
df02_dialer(char *num, char *acu)
{
	return (df_dialer(num, acu, 0));
}

int
df03_dialer(char *num, char *acu)
{
	return (df_dialer(num, acu, 1));
}

static int
df_dialer(char *num, char *acu, int df03)
{
	int f = FD;
	struct termios cntrl;
	int speed = 0;
	char c = '\0';

	tcgetattr(f, &cntrl);
	cntrl.c_cflag |= HUPCL;
	tcsetattr(f, TCSANOW, &cntrl);
	if (setjmp(Sjbuf)) {
		printf("connection timed out\r\n");
		df_disconnect();
		return (0);
	}
	if (boolean(value(VERBOSE)))
		printf("\ndialing...");
	fflush(stdout);
#ifdef TIOCMSET
	if (df03) {
		int st = TIOCM_ST;	/* secondary Transmit flag */

		tcgetattr(f, &cntrl);
		speed = cfgetospeed(&cntrl);
		if (speed != B1200) {	/* must dial at 1200 baud */
			cfsetospeed(&cntrl, B1200);
			cfsetispeed(&cntrl, B1200);
			tcsetattr(f, TCSAFLUSH, &cntrl);
			ioctl(f, TIOCMBIC, &st); /* clear ST for 300 baud */
		} else
			ioctl(f, TIOCMBIS, &st); /* set ST for 1200 baud */
	}
#endif
	signal(SIGALRM, alrm_timeout);
	alarm(5 * strlen(num) + 10);
	tcflush(f, TCIOFLUSH);
	write(f, "\001", 1);
	sleep(1);
	write(f, "\002", 1);
	write(f, num, strlen(num));
	read(f, &c, 1);
#ifdef TIOCMSET
	if (df03 && speed != B1200) {
		cfsetospeed(&cntrl, speed);
		cfsetispeed(&cntrl, speed);
		tcsetattr(f, TCSAFLUSH, &cntrl);
	}
#endif
	return (c == 'A');
}

void
df_disconnect(void)
{
	write(FD, "\001", 1);
	sleep(1);
	tcflush(FD, TCIOFLUSH);
}

void
df_abort(void)
{
	df_disconnect();
}

/*ARGSUSED*/
static void
alrm_timeout(int signo)
{
	longjmp(Sjbuf, 1);
}
@


1.10
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: df.c,v 1.9 2006/03/17 19:17:13 moritz Exp $	*/
@


1.9
log
@ansification and correct prototypes. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: df.c,v 1.8 2006/03/17 14:43:06 moritz Exp $	*/
a31 7

#ifndef lint
#if 0
static char sccsid[] = "@@(#)df.c	8.1 (Berkeley) 6/6/93";
#endif
static const char rcsid[] = "$OpenBSD: df.c,v 1.8 2006/03/17 14:43:06 moritz Exp $";
#endif /* not lint */
@


1.8
log
@big prototype cleanup:

o make more functions static
o add all the prototypes to tip.h
o consistently declare functions in the cmd table

testing and ok dhill@@
@
text
@d1 1
a1 1
/*	$OpenBSD: df.c,v 1.7 2003/06/03 02:56:18 millert Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: df.c,v 1.7 2003/06/03 02:56:18 millert Exp $";
d47 3
a49 3
static void alrm_timeout(int);
static int df_dialer(char *, char *, int);
static void df_disconnect(void);
d52 1
a52 2
df02_dialer(num, acu)
	char *num, *acu;
a53 1

d58 1
a58 2
df03_dialer(num, acu)
	char *num, *acu;
a59 1

d63 2
a64 4
int
df_dialer(num, acu, df03)
	char *num, *acu;
	int df03;
d124 1
a124 1
df_abort()
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: df.c,v 1.6 2002/05/07 06:56:50 hugh Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: df.c,v 1.6 2002/05/07 06:56:50 hugh Exp $";
d47 3
a49 3
static void timeout();
static int df_dialer(char *num, char *acu, int df03);
static void df_disconnect();
d103 1
a103 1
	signal(SIGALRM, timeout);
d122 1
a122 1
df_disconnect()
a128 1

a131 1

d135 1
a135 1

d137 1
a137 1
timeout()
a138 1

@


1.6
log
@Carefully applied -Wall fixups from <panda@@omatis.com>.
Also a little KNF.
@
text
@d1 1
a1 1
/*	$OpenBSD: df.c,v 1.5 2001/10/24 18:38:58 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: df.c,v 1.5 2001/10/24 18:38:58 millert Exp $";
@


1.5
log
@kill register
@
text
@d1 1
a1 1
/*	$OpenBSD: df.c,v 1.4 2001/09/26 06:07:28 pvalchev Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: df.c,v 1.4 2001/09/26 06:07:28 pvalchev Exp $";
d52 2
@


1.4
log
@Wall cleanup w/ some fixes; ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: df.c,v 1.3 1996/06/26 05:40:52 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: df.c,v 1.3 1996/06/26 05:40:52 deraadt Exp $";
d74 1
a74 1
	register int f = FD;
@


1.3
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: df.c,v 1.4 1995/10/29 00:49:51 pk Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: df.c,v 1.4 1995/10/29 00:49:51 pk Exp $";
d53 1
d61 1
d69 1
d76 1
a76 1
	int speed = 0, rw = 2;
d123 1
a125 2
	int rw = 2;

d132 1
@


1.2
log
@from netbsd:
Convert to termios (from Scott Reynolds; PR#1621).
8-bit patches (from Matthieu Herrb; PR#1384).
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: df.c,v 1.4 1995/10/29 00:49:51 pk Exp $";
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: df.c,v 1.3 1994/12/08 09:31:38 jtc Exp $	*/
d40 1
a40 1
static char rcsid[] = "$NetBSD: df.c,v 1.3 1994/12/08 09:31:38 jtc Exp $";
d71 1
a71 1
	struct sgttyb buf;
d75 3
a77 1
	ioctl(f, TIOCHPCL, 0);		/* make sure it hangs up when done */
d90 6
a95 5
		ioctl(f, TIOCGETP, &buf);
		if (buf.sg_ospeed != B1200) {	/* must dial at 1200 baud */
			speed = buf.sg_ospeed;
			buf.sg_ospeed = buf.sg_ispeed = B1200;
			ioctl(f, TIOCSETP, &buf);
d103 1
a103 1
	ioctl(f, TIOCFLUSH, &rw);
d110 4
a113 3
	if (df03 && speed) {
		buf.sg_ispeed = buf.sg_ospeed = speed;
		ioctl(f, TIOCSETP, &buf);
d125 1
a125 1
	ioctl(FD, TIOCFLUSH, &rw);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
