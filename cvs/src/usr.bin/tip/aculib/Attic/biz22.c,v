head	1.15;
access;
symbols
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.13.0.16
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.12
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.10
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.8
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.6
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.4
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.2
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.11.0.12
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.10
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.18
	OPENBSD_2_8:1.4.0.16
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2010.06.29.16.41.57;	author nicm;	state dead;
branches;
next	1.14;

1.14
date	2009.10.27.23.59.45;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.17.19.17.13;	author moritz;	state Exp;
branches;
next	1.12;

1.12
date	2006.03.17.14.43.06;	author moritz;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.03.02.56.18;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.05.20.07.37;	author avsm;	state Exp;
branches;
next	1.9;

1.9
date	2003.04.04.21.50.00;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.07.06.56.50;	author hugh;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.24.18.38.58;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.26.06.07.28;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.12.05.17.24;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.04.02.01.47.05;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.40.51;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.12.22;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.17;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.17;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Bye-bye acu which even UUCP-using naddy agrees "was obsolete 20 years ago" :-).
@
text
@/*	$OpenBSD: biz22.c,v 1.14 2009/10/27 23:59:45 deraadt Exp $	*/
/*	$NetBSD: biz22.c,v 1.6 1997/02/11 09:24:11 mrg Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "tip.h"

#define DISCONNECT_CMD	"\20\04"	/* disconnection string */

static	int dialtimeout = 0;
static	jmp_buf timeoutbuf;

static int	biz_dialer(char *, char *);
static void	sigALRM(int);
static int	cmd(char *);
static int	detect(char *);

/*
 * Dial up on a BIZCOMP Model 1022 with either
 * 	tone dialing (mod = "V")
 *	pulse dialing (mod = "W")
 */
static int
biz_dialer(char *num, char *mod)
{
	int connected = 0;
	char cbuf[40];

	if (boolean(value(VERBOSE)))
		printf("\nstarting call...");
	/*
	 * Disable auto-answer and configure for tone/pulse
	 *  dialing
	 */
	if (cmd("\02K\r")) {
		printf("can't initialize bizcomp...");
		return (0);
	}
	(void)strlcpy(cbuf, "\02.\r", sizeof cbuf);
	cbuf[1] = *mod;
	if (cmd(cbuf)) {
		printf("can't set dialing mode...");
		return (0);
	}
	(void)snprintf(cbuf, sizeof(cbuf), "\02D%s\r", num);
	write(FD, cbuf, strlen(cbuf));
	if (!detect("7\r")) {
		printf("can't get dial tone...");
		return (0);
	}
	if (boolean(value(VERBOSE)))
		printf("ringing...");
	/*
	 * The reply from the BIZCOMP should be:
	 *	2 \r or 7 \r	failure
	 *	1 \r		success
	 */
	connected = detect("1\r");
#ifdef ACULOG
	if (dialtimeout) {
		char line[80];

		(void)snprintf(line, sizeof line, "%ld second dial timeout",
			number(value(DIALTIMEOUT)));
		logent(value(HOST), num, "biz1022", line);
	}
#endif
	if (dialtimeout)
		biz22_disconnect();	/* insurance */
	return (connected);
}

int
biz22w_dialer(char *num, char *acu)
{
	return (biz_dialer(num, "W"));
}

int
biz22f_dialer(char *num, char *acu)
{
	return (biz_dialer(num, "V"));
}

void
biz22_disconnect(void)
{
	write(FD, DISCONNECT_CMD, sizeof(DISCONNECT_CMD)-1);
	sleep(2);
	tcflush(FD, TCIOFLUSH);
}

void
biz22_abort(void)
{
	write(FD, "\02", 1);
}

/*ARGSUSED*/
static void
sigALRM(int signo)
{
	dialtimeout = 1;
	longjmp(timeoutbuf, 1);
}

static int
cmd(char *s)
{
	sig_t f;
	char c;

	write(FD, s, strlen(s));
	f = signal(SIGALRM, sigALRM);
	if (setjmp(timeoutbuf)) {
		biz22_abort();
		signal(SIGALRM, f);
		return (1);
	}
	alarm(number(value(DIALTIMEOUT)));
	read(FD, &c, 1);
	alarm(0);
	signal(SIGALRM, f);
	c &= 0177;
	return (c != '\r');
}

static int
detect(char *s)
{
	sig_t f;
	char c;

	f = signal(SIGALRM, sigALRM);
	dialtimeout = 0;
	while (*s) {
		if (setjmp(timeoutbuf)) {
			biz22_abort();
			break;
		}
		alarm(number(value(DIALTIMEOUT)));
		read(FD, &c, 1);
		alarm(0);
		c &= 0177;
		if (c != *s++)
			return (0);
	}
	signal(SIGALRM, f);
	return (dialtimeout == 0);
}
@


1.14
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: biz22.c,v 1.13 2006/03/17 19:17:13 moritz Exp $	*/
@


1.13
log
@ansification and correct prototypes. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: biz22.c,v 1.12 2006/03/17 14:43:06 moritz Exp $	*/
a31 7

#ifndef lint
#if 0
static char sccsid[] = "@@(#)biz22.c	8.1 (Berkeley) 6/6/93";
#endif
static const char rcsid[] = "$OpenBSD: biz22.c,v 1.12 2006/03/17 14:43:06 moritz Exp $";
#endif /* not lint */
@


1.12
log
@big prototype cleanup:

o make more functions static
o add all the prototypes to tip.h
o consistently declare functions in the cmd table

testing and ok dhill@@
@
text
@d1 1
a1 1
/*	$OpenBSD: biz22.c,v 1.11 2003/06/03 02:56:18 millert Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: biz22.c,v 1.11 2003/06/03 02:56:18 millert Exp $";
a43 1
static	void sigALRM();
d47 4
a50 2
static	int cmd(), detect();
void	biz22_disconnect();
d58 1
a58 2
biz_dialer(num, mod)
	char *num, *mod;
d108 1
a108 2
biz22w_dialer(num, acu)
	char *num, *acu;
a109 1

d114 1
a114 2
biz22f_dialer(num, acu)
	char *num, *acu;
a115 1

d120 1
a120 1
biz22_disconnect()
d128 1
a128 1
biz22_abort()
a129 1

d133 1
d135 1
a135 1
sigALRM()
d142 1
a142 2
cmd(s)
	char *s;
d163 1
a163 2
detect(s)
	char *s;
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: biz22.c,v 1.10 2003/05/05 20:07:37 avsm Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: biz22.c,v 1.10 2003/05/05 20:07:37 avsm Exp $";
d45 1
a45 1
static	int timeout = 0;
d94 1
a94 1
	if (timeout) {
d102 1
a102 1
	if (timeout)
d141 1
a141 2

	timeout = 1;
d175 1
a175 1
	timeout = 0;
d189 1
a189 1
	return (timeout == 0);
@


1.10
log
@dont write too much data when disconnecting in biz22, also use sizeof
in biz31 for consistency.
millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: biz22.c,v 1.9 2003/04/04 21:50:00 deraadt Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: biz22.c,v 1.9 2003/04/04 21:50:00 deraadt Exp $";
@


1.9
log
@some easy string fixes; tdeval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: biz22.c,v 1.8 2002/05/07 06:56:50 hugh Exp $	*/
d41 1
a41 1
static const char rcsid[] = "$OpenBSD: biz22.c,v 1.8 2002/05/07 06:56:50 hugh Exp $";
d130 1
a130 1
	write(FD, DISCONNECT_CMD, 4);
@


1.8
log
@Carefully applied -Wall fixups from <panda@@omatis.com>.
Also a little KNF.
@
text
@d1 1
a1 1
/*	$OpenBSD: biz22.c,v 1.7 2001/10/24 18:38:58 millert Exp $	*/
d41 1
a41 1
static const char rcsid[] = "$OpenBSD: biz22.c,v 1.7 2001/10/24 18:38:58 millert Exp $";
d77 1
a77 1
	(void)strcpy(cbuf, "\02.\r");
d101 1
a101 1
		(void)sprintf(line, "%ld second dial timeout",
@


1.7
log
@kill register
@
text
@d1 1
a1 1
/*	$OpenBSD: biz22.c,v 1.6 2001/09/26 06:07:28 pvalchev Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: biz22.c,v 1.6 2001/09/26 06:07:28 pvalchev Exp $";
@


1.6
log
@Wall cleanup w/ some fixes; ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: biz22.c,v 1.5 2001/07/12 05:17:24 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: biz22.c,v 1.5 2001/07/12 05:17:24 deraadt Exp $";
d64 1
a64 1
	register int connected = 0;
d152 1
a152 1
	register char *s;
d174 1
a174 1
	register char *s;
@


1.5
log
@first pass at a -Wall cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: biz22.c,v 1.4 1997/04/02 01:47:05 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: biz22.c,v 1.4 1997/04/02 01:47:05 millert Exp $";
d52 2
a53 1
static int cmd(), detect();
d102 1
a102 1
			(long)number(value(DIALTIMEOUT)));
d111 1
d119 1
d127 1
d135 1
@


1.4
log
@Merge in good changes from NetBSD:
    Compile in strcict ansi (some day I'll get around to -Wall)
    use set* functions instead of modifying the lvalue
    Change a few sprintf() to snprintf() where it coudl possibly matter.
    Replace zzhack stuff with something saner to make tip work on alpha
@
text
@d1 1
a1 1
/*	$OpenBSD: biz22.c,v 1.3 1996/06/26 05:40:51 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: biz22.c,v 1.3 1996/06/26 05:40:51 deraadt Exp $";
d100 2
a101 2
		(void)sprintf(line, "%d second dial timeout",
			number(value(DIALTIMEOUT)));
a125 2
	int rw = 2;

@


1.3
log
@rcsid
@
text
@d1 2
a2 2
/*	$OpenBSD: biz22.c,v 1.4 1995/10/29 00:49:47 pk Exp $	*/
/*	$NetBSD: biz22.c,v 1.4 1995/10/29 00:49:47 pk Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: biz22.c,v 1.4 1995/10/29 00:49:47 pk Exp $";
d52 2
a64 1
	static int cmd(), detect();
d76 1
a76 1
	strcpy(cbuf, "\02.\r");
d82 1
a82 3
	strcpy(cbuf, "\02D");
	strcat(cbuf, num);
	strcat(cbuf, "\r");
d100 1
a100 1
		sprintf(line, "%d second dial timeout",
@


1.2
log
@from netbsd:
Convert to termios (from Scott Reynolds; PR#1621).
8-bit patches (from Matthieu Herrb; PR#1384).
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: biz22.c,v 1.4 1995/10/29 00:49:47 pk Exp $";
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: biz22.c,v 1.3 1994/12/08 09:31:31 jtc Exp $	*/
d40 1
a40 1
static char rcsid[] = "$NetBSD: biz22.c,v 1.3 1994/12/08 09:31:31 jtc Exp $";
d130 1
a130 1
	ioctl(FD, TIOCFLUSH, &rw);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
