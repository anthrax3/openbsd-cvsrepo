head	1.38;
access;
symbols
	OPENBSD_5_6:1.37.0.20
	OPENBSD_5_6_BASE:1.37
	OPENBSD_5_5:1.37.0.18
	OPENBSD_5_5_BASE:1.37
	OPENBSD_5_4:1.37.0.14
	OPENBSD_5_4_BASE:1.37
	OPENBSD_5_3:1.37.0.12
	OPENBSD_5_3_BASE:1.37
	OPENBSD_5_2:1.37.0.10
	OPENBSD_5_2_BASE:1.37
	OPENBSD_5_1_BASE:1.37
	OPENBSD_5_1:1.37.0.8
	OPENBSD_5_0:1.37.0.6
	OPENBSD_5_0_BASE:1.37
	OPENBSD_4_9:1.37.0.4
	OPENBSD_4_9_BASE:1.37
	OPENBSD_4_8:1.37.0.2
	OPENBSD_4_8_BASE:1.37
	OPENBSD_4_7:1.25.0.2
	OPENBSD_4_7_BASE:1.25
	OPENBSD_4_6:1.23.0.10
	OPENBSD_4_6_BASE:1.23
	OPENBSD_4_5:1.23.0.6
	OPENBSD_4_5_BASE:1.23
	OPENBSD_4_4:1.23.0.4
	OPENBSD_4_4_BASE:1.23
	OPENBSD_4_3:1.23.0.2
	OPENBSD_4_3_BASE:1.23
	OPENBSD_4_2:1.22.0.2
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.21.0.2
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.19.0.2
	OPENBSD_4_0_BASE:1.19
	OPENBSD_3_9:1.16.0.6
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.4
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.2
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.15.0.2
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.16
	OPENBSD_2_8:1.4.0.14
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.12
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.38
date	2015.02.07.10.07.15;	author deraadt;	state dead;
branches;
next	1.37;
commitid	PXiaGXVynCsWpGYh;

1.37
date	2010.07.03.03.33.12;	author nicm;	state Exp;
branches;
next	1.36;

1.36
date	2010.07.02.07.40.03;	author nicm;	state Exp;
branches;
next	1.35;

1.35
date	2010.07.02.05.52.48;	author nicm;	state Exp;
branches;
next	1.34;

1.34
date	2010.07.01.21.47.09;	author nicm;	state Exp;
branches;
next	1.33;

1.33
date	2010.07.01.21.28.01;	author nicm;	state Exp;
branches;
next	1.32;

1.32
date	2010.07.01.20.24.19;	author chl;	state Exp;
branches;
next	1.31;

1.31
date	2010.06.29.23.38.05;	author nicm;	state Exp;
branches;
next	1.30;

1.30
date	2010.06.29.23.32.52;	author nicm;	state Exp;
branches;
next	1.29;

1.29
date	2010.06.29.23.10.56;	author nicm;	state Exp;
branches;
next	1.28;

1.28
date	2010.06.29.21.34.50;	author nicm;	state Exp;
branches;
next	1.27;

1.27
date	2010.06.29.17.42.35;	author nicm;	state Exp;
branches;
next	1.26;

1.26
date	2010.06.29.16.41.56;	author nicm;	state Exp;
branches;
next	1.25;

1.25
date	2009.12.12.18.14.00;	author nicm;	state Exp;
branches;
next	1.24;

1.24
date	2009.10.27.23.59.44;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2007.11.26.09.28.34;	author martynas;	state Exp;
branches;
next	1.22;

1.22
date	2007.05.15.19.42.05;	author moritz;	state Exp;
branches;
next	1.21;

1.21
date	2006.11.07.07.16.15;	author ray;	state Exp;
branches;
next	1.20;

1.20
date	2006.11.06.19.37.21;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2006.05.25.08.41.52;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2006.03.17.14.43.06;	author moritz;	state Exp;
branches;
next	1.17;

1.17
date	2006.03.16.19.32.46;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2004.11.07.09.48.08;	author otto;	state Exp;
branches;
next	1.15;

1.15
date	2004.05.26.18.17.59;	author deraadt;	state Exp;
branches
	1.15.2.1;
next	1.14;

1.14
date	2003.06.03.02.56.18;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.29.22.58.56;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.07.06.56.50;	author hugh;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.10.23.22.10;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2001.09.26.06.07.28;	author pvalchev;	state Exp;
branches;
next	1.9;

1.9
date	2001.09.24.17.43.15;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.17.22.41.26;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.10.00.14.17;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.09.19.30.49;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.09.17.58.41;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.09.01.23.24.24;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.04.02.01.47.02;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.40.43;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.16;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.16;	author deraadt;	state Exp;
branches;
next	;

1.15.2.1
date	2004.11.13.23.56.37;	author brad;	state Exp;
branches;
next	;


desc
@@


1.38
log
@remove unused cu(1) support in tip; it is supplied as a seperate
simpler binary written by nicm since 5.4
ok jsing dlg
@
text
@/*	$OpenBSD: cu.c,v 1.37 2010/07/03 03:33:12 nicm Exp $	*/
/*	$NetBSD: cu.c,v 1.5 1997/02/11 09:24:05 mrg Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <err.h>
#include <paths.h>
#include <util.h>

#include "tip.h"

static void	cuusage(void);

/*
 * Botch the interface to look like cu's
 */
void
cumain(int argc, char *argv[])
{
	int ch, i, parity, baudrate;
	const char *errstr;
	static char sbuf[12];
	char *device;

	if (argc < 2)
		cuusage();
	vsetnum(BAUDRATE, DEFBR);
	parity = 0;	/* none */

	/*
	 * Convert obsolecent -### speed to modern -s### syntax which
	 * getopt() can handle.
	 */
	for (i = 1; i < argc; i++) {
		if (argv[i][0] == '-') {
			switch (argv[i][1]) {
			case '0': case '1': case '2': case '3': case '4':
			case '5': case '6': case '7': case '8': case '9':
				ch = snprintf(sbuf, sizeof(sbuf), "-s%s",
				    &argv[i][1]);
				if (ch <= 0 || ch >= sizeof(sbuf)) {
					errx(3, "invalid speed: %s",
					    &argv[i][1]);
				}
				argv[i] = sbuf;
				break;
			case '-':
				/* if we get "--" stop processing args */
				if (argv[i][2] == '\0')
					goto getopt;
				break;
			}
		}
	}

getopt:
	while ((ch = getopt(argc, argv, "l:s:htoe")) != -1) {
		switch (ch) {
		case 'l':
			if (vgetstr(DEVICE) != NULL) {
				fprintf(stderr,
				    "%s: cannot specify multiple -l options\n",
				    __progname);
				exit(3);
			}
			if (strchr(optarg, '/'))
				vsetstr(DEVICE, optarg);
			else {
				if (asprintf(&device,
				    "%s%s", _PATH_DEV, optarg) == -1)
					err(3, "asprintf");
				vsetstr(DEVICE, device);
			}
			break;
		case 's':
			baudrate = (int)strtonum(optarg, 0, INT_MAX, &errstr);
			if (errstr)
				errx(3, "speed is %s: %s", errstr, optarg);
			vsetnum(BAUDRATE, baudrate);
			break;
		case 'h':
			vsetnum(LECHO, 1);
			vsetnum(HALFDUPLEX, 1);
			break;
		case 't':
			/* Was for a hardwired dial-up connection. */
			break;
		case 'o':
			if (parity != 0)
				parity = 0;	/* -e -o */
			else
				parity = 1;	/* odd */
			break;
		case 'e':
			if (parity != 0)
				parity = 0;	/* -o -e */
			else
				parity = -1;	/* even */
			break;
		default:
			cuusage();
			break;
		}
	}
	argc -= optind;
	argv += optind;

	switch (argc) {
	case 1:
		/* Was phone number but now ignored. */
	case 0:
		break;
	default:
		cuusage();
		break;
	}

	signal(SIGINT, cleanup);
	signal(SIGQUIT, cleanup);
	signal(SIGHUP, cleanup);
	signal(SIGTERM, cleanup);
	signal(SIGCHLD, SIG_DFL);

	/*
	 * The "cu" host name is used to define the
	 * attributes of the generic dialer.
	 */
	snprintf(sbuf, sizeof(sbuf), "cu%d", vgetnum(BAUDRATE));
	FD = hunt(sbuf);
	setbuf(stdout, NULL);

	loginit();

	switch (parity) {
	case -1:
		setparity("even");
		break;
	case 1:
		setparity("odd");
		break;
	default:
		setparity("none");
		break;
	}
	vsetnum(VERBOSE, 0);
	if (ttysetup(vgetnum(BAUDRATE))) {
		fprintf(stderr, "%s: unsupported speed %d\n",
		    __progname, vgetnum(BAUDRATE));
		(void)uu_unlock(uucplock);
		exit(3);
	}
	con();
}

static void
cuusage(void)
{
	fprintf(stderr, "usage: cu [-eho] [-l line] [-s speed | -speed]\n");
	exit(8);
}
@


1.37
log
@Changed vinit to clear the values but forgot to move it before they are set by
command line parsing.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.36 2010/07/02 07:40:03 nicm Exp $	*/
@


1.36
log
@Clear table and set defaults manually, also move table into value.c.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.35 2010/07/02 05:52:48 nicm Exp $	*/
a149 2

	vinit();
@


1.35
log
@Rewrite hunt() to put the "rotary action" into it rather than remote.c, and so
it isn't so stupid (returning a char * as a long which goes into an int to use
as a flag, ugh).
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.34 2010/07/01 21:47:09 nicm Exp $	*/
d151 2
d157 1
a157 1
	(void)snprintf(sbuf, sizeof(sbuf), "cu%d", vgetnum(BAUDRATE));
d160 1
d162 1
a162 1
	vinit();
@


1.34
log
@Nix some warnings.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.33 2010/07/01 21:28:01 nicm Exp $	*/
d156 1
a156 9
	if ((i = hunt(sbuf)) == 0) {
		printf("all ports busy\n");
		exit(3);
	}
	if (i == -1) {
		printf("link down\n");
		(void)uu_unlock(uucplock);
		exit(3);
	}
@


1.33
log
@Change variable get/set macros to have better names and drop boolean/character
ones.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.32 2010/07/01 20:24:19 chl Exp $	*/
d155 1
a155 1
	(void)snprintf(sbuf, sizeof(sbuf), "cu%ld", vgetnum(BAUDRATE));
d181 1
a181 1
		fprintf(stderr, "%s: unsupported speed %ld\n",
@


1.32
log
@remove unused variables
add missing headers needed for uu_unlock()

ok nicm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.31 2010/06/29 23:38:05 nicm Exp $	*/
d50 1
d54 1
a54 1
	setnumber(value(BAUDRATE), DEFBR);
d87 1
a87 1
			if (value(DEVICE) != NULL) {
d94 1
a94 1
				value(DEVICE) = optarg;
d96 1
a96 1
				if (asprintf(&value(DEVICE),
d99 1
d106 1
a106 1
			setnumber(value(BAUDRATE), baudrate);
d109 2
a110 2
			setboolean(value(LECHO), 1);
			setboolean(value(HALFDUPLEX), 1);
d155 1
a155 1
	(void)snprintf(sbuf, sizeof(sbuf), "cu%ld", number(value(BAUDRATE)));
d179 2
a180 2
	setboolean(value(VERBOSE), 0);
	if (ttysetup(number(value(BAUDRATE)))) {
d182 1
a182 1
		    __progname, number(value(BAUDRATE)));
@


1.31
log
@Add new read-only vtable entries for device and connection string and use those
instead of variables.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.30 2010/06/29 23:32:52 nicm Exp $	*/
d35 1
@


1.30
log
@Since dial-up is no longer supported, no need to store a phone number, or
accept one to cu(1).
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.29 2010/06/29 23:10:56 nicm Exp $	*/
a51 1
	DV = NULL;
d85 1
a85 1
			if (DV != NULL) {
d92 4
a95 3
				DV = optarg;
			else
				if (asprintf(&DV, "%s%s", _PATH_DEV, optarg) == -1)
d97 1
@


1.29
log
@For every variable which has a value table entry with IREMOTE, remove the
remote variable and always use the value from the vtable. This then allows the
IREMOTE flag to be removed.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.28 2010/06/29 21:34:50 nicm Exp $	*/
d133 1
a133 2
		PN = argv[0];
		break;
d188 1
a188 2
	fprintf(stderr, "usage: cu [-eho] [-l line] "
	    "[-s speed | -speed] [phone-number]\n");
@


1.28
log
@Merge v_type and v_access into one v_flags member in value_t, get rid of TRUE
and FALSE, and rename the other flags to have a V_ prefix.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.27 2010/06/29 17:42:35 nicm Exp $	*/
d46 1
a46 1
	int ch, i, parity;
d53 1
a53 1
	BR = DEFBR;
d99 1
a99 1
			BR = (int)strtonum(optarg, 0, INT_MAX, &errstr);
d102 1
d106 1
a106 1
			HD = 1;
d152 1
a152 1
	(void)snprintf(sbuf, sizeof(sbuf), "cu%ld", BR);
d177 1
a177 1
	if (ttysetup(BR)) {
d179 1
a179 1
		    __progname, BR);
@


1.27
log
@Now that there is no dial-up support, all connections are hardwired so drop the
flag and ignore the -t option to cu(1).
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.26 2010/06/29 16:41:56 nicm Exp $	*/
d104 2
a105 2
			setboolean(value(LECHO), TRUE);
			HD = TRUE;
d175 1
a175 1
	setboolean(value(VERBOSE), FALSE);
@


1.26
log
@Bye-bye acu which even UUCP-using naddy agrees "was obsolete 20 years ago" :-).
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.25 2009/12/12 18:14:00 nicm Exp $	*/
d108 1
a108 1
			HW = 1;
d176 1
a176 1
	if (HW && ttysetup(BR)) {
a182 6
	if (!HW && ttysetup(BR)) {
		fprintf(stderr, "%s: unsupported speed %ld\n",
		    __progname, BR);
		(void)uu_unlock(uucplock);
		exit(3);
	}
d188 1
a188 1
	fprintf(stderr, "usage: cu [-ehot] [-l line] "
@


1.25
log
@tip is not setuid or setgid anymore and there are no PRIV/EXPR commands, so
remove the code.

ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.24 2009/10/27 23:59:44 deraadt Exp $	*/
d52 1
a52 1
	CU = DV = NULL;
d83 1
a83 1
	while ((ch = getopt(argc, argv, "a:l:s:htoe")) != -1) {
a84 5
		case 'a':
			if (optarg[0] == '\0')
				errx(3, "invalid acu: \"\"");
			CU = optarg;
			break;
d108 1
a108 1
			HW = 1, DU = -1;
d182 1
a182 5
	if (con()) {
		printf("Connect failed\n");
		(void)uu_unlock(uucplock);
		exit(1);
	}
d194 1
a194 1
	fprintf(stderr, "usage: cu [-ehot] [-a acu] [-l line] "
@


1.24
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.23 2007/11/26 09:28:34 martynas Exp $	*/
a167 1
	user_uid();
a183 1
		daemon_uid();
a188 1
		daemon_uid();
a194 1
		daemon_uid();
@


1.23
log
@typos;  ok jmc@@
sys/netinet/in_pcb.c and sys/net/bridgestp.c ok henning@@
sys/dev/pci/bktr/* ok jakemsr@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.22 2007/05/15 19:42:05 moritz Exp $	*/
a31 7

#ifndef lint
#if 0
static char sccsid[] = "@@(#)cu.c	8.1 (Berkeley) 6/6/93";
#endif
static const char rcsid[] = "$OpenBSD: cu.c,v 1.22 2007/05/15 19:42:05 moritz Exp $";
#endif /* not lint */
@


1.22
log
@Remove useless NOxxx defines and use NULL instead.
No binary change.

OK ray@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.21 2006/11/07 07:16:15 ray Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: cu.c,v 1.21 2006/11/07 07:16:15 ray Exp $";
d100 1
a100 1
				    "%s: cannot specificy multiple -l options\n",
@


1.21
log
@Ensure that CU and DV have length > 0, so buf[strlen(buf) - 1] can
be safely called later.
Add check for asprintf.
Use _PATH_DEV, suggested by jaredy@@.

OK jaredy@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.20 2006/11/06 19:37:21 millert Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: cu.c,v 1.20 2006/11/06 19:37:21 millert Exp $";
d59 1
a59 1
	CU = DV = NOSTR;
@


1.20
log
@Replace -### with -s### pre-getopt() and use strtonum()
instead of strtol() when parsing the speed string.  Closes PR 5222.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.19 2006/05/25 08:41:52 jmc Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: cu.c,v 1.19 2006/05/25 08:41:52 jmc Exp $";
d40 3
d93 2
d107 2
a108 1
				asprintf(&DV, "/dev/%s", optarg);
@


1.19
log
@- split tip.1 into tip.1 and cu.1
- big tidy up whilst here

ok mk fkr
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.18 2006/03/17 14:43:06 moritz Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: cu.c,v 1.18 2006/03/17 14:43:06 moritz Exp $";
d51 1
a51 2
	long l;
	char *cp;
d59 29
a87 1
	while ((ch = getopt(argc, argv, "a:l:s:htoe0123456789")) != -1) {
d105 3
a107 7
			l = strtol(optarg, &cp, 10);
			if (*cp != '\0' || l < 0 || l >= INT_MAX) {
				fprintf(stderr, "%s: unsupported speed %s\n",
				    __progname, optarg);
				exit(3);
			}
			BR = (int)l;
a126 7
			break;
		case '0': case '1': case '2': case '3': case '4':
		case '5': case '6': case '7': case '8': case '9':
			if (CU)
				CU[strlen(CU)-1] = ch;
			if (DV)
				DV[strlen(DV)-1] = ch;
@


1.18
log
@big prototype cleanup:

o make more functions static
o add all the prototypes to tip.h
o consistently declare functions in the cmd table

testing and ok dhill@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.17 2006/03/16 19:32:46 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: cu.c,v 1.17 2006/03/16 19:32:46 deraadt Exp $";
d192 2
a193 2
	fprintf(stderr, "usage: cu [-ehot] [-a acu] [-l line] [-s speed] [-#] "
	    "[phone-number]\n");
@


1.17
log
@first pass of cleanup of this mess; ok dhill
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.16 2004/11/07 09:48:08 otto Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: cu.c,v 1.16 2004/11/07 09:48:08 otto Exp $";
d42 1
a42 2
void	cleanup();
void	cuusage();
d189 1
a189 1
void
@


1.16
log
@Do not ignore SIGCHLD, repairing hangs after a subshell is executed
via ~! or ~C. While there, fix description of fd's available to the
command executed by ~C in man page and comments. This has been wrong
since at least 4.4BSD... Spotted by Hugo Villeneuve. PR 3971.  ok
and help millert@@; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.15 2004/05/26 18:17:59 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: cu.c,v 1.15 2004/05/26 18:17:59 deraadt Exp $";
d49 1
a49 3
cumain(argc, argv)
	int argc;
	char *argv[];
d62 1
a62 1
		switch(ch) {
d175 1
a175 1
	if (connect()) {
d191 1
a191 1
cuusage()
@


1.15
log
@if one process is killed, kill the other ourself; various ok
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.14 2003/06/03 02:56:18 millert Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: cu.c,v 1.14 2003/06/03 02:56:18 millert Exp $";
d138 1
a138 1
	signal(SIGCHLD, SIG_IGN);
@


1.15.2.1
log
@MFC:
Fix by otto@@

Do not ignore SIGCHLD, repairing hangs after a subshell is executed
via ~! or ~C. While there, fix description of fd's available to the
command executed by ~C in man page and comments. This has been wrong
since at least 4.4BSD... Spotted by Hugo Villeneuve. PR 3971.

ok deraadt@@ otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.15 2004/05/26 18:17:59 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: cu.c,v 1.15 2004/05/26 18:17:59 deraadt Exp $";
d138 1
a138 1
	signal(SIGCHLD, SIG_DFL);
@


1.14
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.13 2002/05/29 22:58:56 millert Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: cu.c,v 1.13 2002/05/29 22:58:56 millert Exp $";
d138 1
@


1.13
log
@Don't hard-code a list of allowed baud rates.  Instead, accept
anything but check the return value of tcsetattr() and error out
if it fails.  This way we accept any baud rate the serial driver
will support.  mickey@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.12 2002/05/07 06:56:50 hugh Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: cu.c,v 1.12 2002/05/07 06:56:50 hugh Exp $";
@


1.12
log
@Carefully applied -Wall fixups from <panda@@omatis.com>.
Also a little KNF.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.11 2002/02/10 23:22:10 miod Exp $	*/
d41 1
a41 1
static const char rcsid[] = "$OpenBSD: cu.c,v 1.11 2002/02/10 23:22:10 miod Exp $";
d86 1
a86 2
			if (*cp != '\0' || l < 0 || l >= INT_MAX ||
			    speed((int)l) == 0) {
d173 7
a179 2
	if (HW)
		ttysetup(speed(BR));
d186 7
a192 2
	if (!HW)
		ttysetup(speed(BR));
@


1.11
log
@Correctly handle pority settings on commandline.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.10 2001/09/26 06:07:28 pvalchev Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cu.c,v 1.10 2001/09/26 06:07:28 pvalchev Exp $";
@


1.10
log
@Wall cleanup w/ some fixes; ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.9 2001/09/24 17:43:15 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cu.c,v 1.9 2001/09/24 17:43:15 millert Exp $";
d57 1
a57 1
	int ch, i;
d66 1
d102 4
a105 1
			setparity("odd");
d108 4
a111 1
			setparity("even");
d162 11
a172 1
	setparity("none");
@


1.9
log
@Use setboolean for -h flag instead of casting things by hand.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.8 2001/09/17 22:41:26 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cu.c,v 1.8 2001/09/17 22:41:26 deraadt Exp $";
d114 1
a114 1
			cuusage;
@


1.8
log
@ensure that DV has a /dev/ in it
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.7 2001/09/10 00:14:17 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cu.c,v 1.7 2001/09/10 00:14:17 millert Exp $";
d94 1
a94 1
			value(LECHO) = (char *)TRUE;
d156 1
a156 1
	setboolean(value(VERBOSE), 0);
@


1.7
log
@remove bogus #include <getopt.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.6 2001/09/09 19:30:49 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cu.c,v 1.6 2001/09/09 19:30:49 millert Exp $";
d72 10
a81 1
			DV = optarg;
@


1.6
log
@implement some more command line options for cu and use getopt(3)
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.5 2001/09/09 17:58:41 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cu.c,v 1.5 2001/09/09 17:58:41 millert Exp $";
a44 1
#include <getopt.h>
@


1.5
log
@Add ~v escape to print all variables and their values.
In cu, the phone number argument is optional.
However, *some* argument must be specified and this is not currently
obvious from the man page or usage warning.
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.4 1997/09/01 23:24:24 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cu.c,v 1.4 1997/09/01 23:24:24 deraadt Exp $";
d45 1
d48 1
d58 3
a60 1
	register int i;
d63 2
a64 4
	if (argc < 2) {
		printf("usage: cu [phone-number] [-t] [-s speed] [-a acu] [-l line] [-#]\n");
		exit(8);
	}
d67 2
a68 10
	for (; argc > 1; argv++, argc--) {
		if (argv[1][0] != '-')
			PN = argv[1];
		else switch (argv[1][1]) {

		case 't':
			HW = 1, DU = -1;
			--argc;
			continue;

d70 4
a73 1
			CU = argv[2]; ++argv; --argc;
a74 1

d76 5
a80 3
			if (argc < 3 || speed(atoi(argv[2])) == 0) {
				fprintf(stderr, "cu: unsupported speed %s\n",
					argv[2]);
d83 8
a90 1
			BR = atoi(argv[2]); ++argv; --argc;
d92 5
a96 3

		case 'l':
			DV = argv[2]; ++argv; --argc;
a97 1

d101 1
a101 1
				CU[strlen(CU)-1] = argv[1][1];
d103 1
a103 1
				DV[strlen(DV)-1] = argv[1][1];
a104 1

d106 1
a106 1
			printf("Bad flag %s", argv[1]);
d110 14
d159 8
@


1.4
log
@Wall pass, and oflow fix from eivind@@bitbox.follo.net
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.3 1997/04/02 01:47:02 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cu.c,v 1.3 1997/04/02 01:47:02 millert Exp $";
d60 1
a60 1
		printf("usage: cu telno [-t] [-s speed] [-a acu] [-l line] [-#]\n");
@


1.3
log
@Merge in good changes from NetBSD:
    Compile in strcict ansi (some day I'll get around to -Wall)
    use set* functions instead of modifying the lvalue
    Change a few sprintf() to snprintf() where it coudl possibly matter.
    Replace zzhack stuff with something saner to make tip work on alpha
@
text
@d1 1
a1 1
/*	$OpenBSD: cu.c,v 1.2 1996/06/26 05:40:43 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cu.c,v 1.2 1996/06/26 05:40:43 deraadt Exp $";
d51 1
d53 1
d114 1
a114 1
	(void)snprintf(sbuf, sizeof(sbuf), "cu%d", BR);
@


1.2
log
@rcsid
@
text
@d1 2
a2 2
/*	$OpenBSD: cu.c,v 1.3 1994/12/08 09:30:48 jtc Exp $	*/
/*	$NetBSD: cu.c,v 1.3 1994/12/08 09:30:48 jtc Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cu.c,v 1.3 1994/12/08 09:30:48 jtc Exp $";
d112 1
a112 1
	(void)sprintf(sbuf, "cu%d", BR);
d127 1
a127 1
	boolean(value(VERBOSE)) = 0;
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: cu.c,v 1.3 1994/12/08 09:30:48 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
