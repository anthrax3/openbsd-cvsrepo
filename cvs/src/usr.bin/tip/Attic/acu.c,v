head	1.18;
access;
symbols
	OPENBSD_4_7:1.17.0.2
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.16.0.6
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.2
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.15.0.6
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.13.0.2
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.12.0.2
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.10.0.8
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.6
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.4
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.2
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.6
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.18
date	2010.06.29.16.41.56;	author nicm;	state dead;
branches;
next	1.17;

1.17
date	2009.10.27.23.59.44;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2008.11.09.12.34.47;	author tobias;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.15.19.42.05;	author moritz;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.12.21.20.40;	author ray;	state Exp;
branches;
next	1.13;

1.13
date	2006.10.18.21.18.59;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2006.03.17.14.43.06;	author moritz;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.16.19.32.46;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2004.05.26.18.17.58;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.03.02.56.18;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.07.06.56.50;	author hugh;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.24.18.38.58;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.11.00.05.53;	author krw;	state Exp;
branches;
next	1.5;

1.5
date	2000.04.20.06.19.33;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.09.01.23.24.23;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.04.02.01.47.01;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.40.40;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.16;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.16;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Bye-bye acu which even UUCP-using naddy agrees "was obsolete 20 years ago" :-).
@
text
@/*	$OpenBSD: acu.c,v 1.17 2009/10/27 23:59:44 deraadt Exp $	*/
/*	$NetBSD: acu.c,v 1.4 1996/12/29 10:34:03 cgd Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "tip.h"

static acu_t *acu = NULL;
static int conflag;
static void acuabort(int);
static acu_t *acutype(char *);
static jmp_buf jmpbuf;
/*
 * Establish connection for tip
 *
 * If DU is true, we should dial an ACU whose type is AT.
 * The phone numbers are in PN, and the call unit is in CU.
 *
 * If the PN is an '@@', then we consult the PHONES file for
 *   the phone numbers.  This file is /etc/phones, unless overridden
 *   by an exported shell variable.
 *
 * The data base files must be in the format:
 *	host-name[ \t]*phone-number
 *   with the possibility of multiple phone numbers
 *   for a single host acting as a rotary (in the order
 *   found in the file).
 */
char *
con(void)
{
	char *cp = PN;
	char *phnum, string[256];
	FILE *fp;
	volatile int tried = 0;

	if (!DU) {		/* regular connect message */
		if (CM != NULL)
			parwrite(FD, CM, size(CM));
		logent(value(HOST), "", DV, "call completed");
		return (NULL);
	}
	/*
	 * @@ =>'s use data base in PHONES environment variable
	 *        otherwise, use /etc/phones
	 */
	signal(SIGINT, acuabort);
	signal(SIGQUIT, acuabort);
	if (setjmp(jmpbuf)) {
		signal(SIGINT, SIG_IGN);
		signal(SIGQUIT, SIG_IGN);
		printf("\ncall aborted\n");
		logent(value(HOST), "", "", "call aborted");
		if (acu != NULL) {
			setboolean(value(VERBOSE), FALSE);
			if (conflag)
				disconnect(NULL);
			else
				(*acu->acu_abort)();
		}
		return ("interrupt");
	}
	if ((acu = acutype(AT)) == NULL)
		return ("unknown ACU type");
	if (*cp != '@@') {
		while (*cp) {
			phnum = cp;
			cp += strcspn(cp, ",");
			if (*cp != '\0')
				*cp++ = '\0';

			if (strlen(phnum) == 0)
				continue;

			conflag = (*acu->acu_dialer)(phnum, CU);
			if (conflag)
				break;

			logent(value(HOST), phnum, acu->acu_name, "call failed");
			tried++;
		}
	} else {
		if ((fp = fopen(PH, "r")) == NULL) {
			printf("%s: ", PH);
			return ("can't open phone number file");
		}
		while (fgets(string, sizeof(string), fp) != NULL) {
			cp = &string[strcspn(string, " \t\n")];
			if (*cp != '\0')
				*cp++ = '\0';

			if (strcmp(string, value(HOST)) != 0)
				continue;

			cp += strspn(cp, " \t\n");
			phnum = cp;
			*(cp + strcspn(cp, ",\n")) = '\0';

			if (strlen(phnum) == 0)
				continue;

			conflag = (*acu->acu_dialer)(phnum, CU);
			if (conflag)
				break;

			logent(value(HOST), phnum, acu->acu_name, "call failed");
			tried++;
		}
		fclose(fp);
	}
	if (conflag) {
		if (CM != NULL)
			parwrite(FD, CM, size(CM));
		logent(value(HOST), phnum, acu->acu_name, "call completed");
		return (NULL);
	} else if (!tried) {
		logent(value(HOST), "", acu->acu_name, "missing phone number");
		return ("missing phone number");
	} else {
		(*acu->acu_abort)();
		return ("call failed");
	}
}

void
disconnect(char *reason)
{
	if (!conflag) {
		logent(value(HOST), "", DV, "call terminated");
		return;
	}
	if (reason == NULL) {
		logent(value(HOST), "", acu->acu_name, "call terminated");
		if (boolean(value(VERBOSE)))
			printf("\r\ndisconnecting...");
	} else
		logent(value(HOST), "", acu->acu_name, reason);
	(*acu->acu_disconnect)();
}

static void
acuabort(int s)
{
	signal(s, SIG_IGN);
	longjmp(jmpbuf, 1);
}

static acu_t *
acutype(char *s)
{
	acu_t *p;
	extern acu_t acutable[];

	for (p = acutable; p->acu_name != '\0'; p++)
		if (!strcmp(s, p->acu_name))
			return (p);
	return (NULL);
}
@


1.17
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.16 2008/11/09 12:34:47 tobias Exp $	*/
@


1.16
log
@typo fixed (overriden -> overridden)

ok espie, jmc
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.15 2007/05/15 19:42:05 moritz Exp $	*/
a31 7

#ifndef lint
#if 0
static char sccsid[] = "@@(#)acu.c	8.1 (Berkeley) 6/6/93";
#endif
static const char rcsid[] = "$OpenBSD: acu.c,v 1.15 2007/05/15 19:42:05 moritz Exp $";
#endif /* not lint */
@


1.15
log
@Remove useless NOxxx defines and use NULL instead.
No binary change.

OK ray@@
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.14 2007/05/12 21:20:40 ray Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: acu.c,v 1.14 2007/05/12 21:20:40 ray Exp $";
d54 1
a54 1
 *   the phone numbers.  This file is /etc/phones, unless overriden
@


1.14
log
@Prevent core dump if strpbrk() returns NULL.  Reported to bugs@@ by
Pav Lucistnik <pav at FreeBSD>, thanks!

OK otto@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.13 2006/10/18 21:18:59 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: acu.c,v 1.13 2006/10/18 21:18:59 deraadt Exp $";
d42 1
a42 1
static acu_t *acu = NOACU;
d72 1
a72 1
		if (CM != NOSTR)
d75 1
a75 1
		return (NOSTR);
d88 1
a88 1
		if (acu != NOACU) {
d91 1
a91 1
				disconnect(NOSTR);
d97 1
a97 1
	if ((acu = acutype(AT)) == NOACU)
d117 1
a117 1
		if ((fp = fopen(PH, "r")) == NOFILE) {
d121 1
a121 1
		while (fgets(string, sizeof(string), fp) != NOSTR) {
d146 1
a146 1
		if (CM != NOSTR)
d149 1
a149 1
		return (NOSTR);
d166 1
a166 1
	if (reason == NOSTR) {
d191 1
a191 1
	return (NOACU);
@


1.13
log
@do not name FILE * variables "fd" since it is confusing
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.12 2006/03/17 14:43:06 moritz Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: acu.c,v 1.12 2006/03/17 14:43:06 moritz Exp $";
d102 1
a102 1
			cp = strpbrk(cp, ",");
@


1.12
log
@big prototype cleanup:

o make more functions static
o add all the prototypes to tip.h
o consistently declare functions in the cmd table

testing and ok dhill@@
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.11 2006/03/16 19:32:46 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: acu.c,v 1.11 2006/03/16 19:32:46 deraadt Exp $";
d68 1
a68 1
	FILE *fd;
d117 1
a117 1
		if ((fd = fopen(PH, "r")) == NOFILE) {
d121 1
a121 1
		while (fgets(string, sizeof(string), fd) != NOSTR) {
d143 1
a143 1
		fclose(fd);
@


1.11
log
@first pass of cleanup of this mess; ok dhill
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.10 2004/05/26 18:17:58 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: acu.c,v 1.10 2004/05/26 18:17:58 deraadt Exp $";
d44 2
a45 2
static void acuabort();
static acu_t *acutype();
@


1.10
log
@if one process is killed, kill the other ourself; various ok
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.9 2003/06/03 02:56:18 millert Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: acu.c,v 1.9 2003/06/03 02:56:18 millert Exp $";
d64 1
a64 1
connect()
d139 1
a139 1
			
d160 1
a160 2
disconnect(reason)
	char *reason;
d170 1
a170 1
	} else 
d183 1
a183 2
acutype(s)
	char *s;
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.8 2002/05/07 06:56:50 hugh Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: acu.c,v 1.8 2002/05/07 06:56:50 hugh Exp $";
d177 1
a177 1
acuabort(s)
@


1.8
log
@Carefully applied -Wall fixups from <panda@@omatis.com>.
Also a little KNF.
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.7 2001/10/24 18:38:58 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: acu.c,v 1.7 2001/10/24 18:38:58 millert Exp $";
@


1.7
log
@kill register
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.6 2001/08/11 00:05:53 krw Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: acu.c,v 1.6 2001/08/11 00:05:53 krw Exp $";
@


1.6
log
@Fixup example files, man pages and phones parsing.

Make '/etc/remote' a working example, with some lengthy comments that
might help people trying to use it.

Remove untruths and beef up documentation for tip(1), remote(5) and
phones(5). In particular remove last reference to the 'cu' tip
interface since we use the 'cu' that comes with uucp, improve
documentation on phone numbers and flesh out documentation on
acu/modems supported. Document PHONES and REMOTE environment
variables.

Cleanup parsing of /etc/phones (so our example can be used) and ignore
lines with empty phone numbers instead of aborting the scan of the
file. This makes /etc/phones parsing consistant with ':pn:' capability
parsing. Don't try to dial empty phone numbers in either case.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.5 2000/04/20 06:19:33 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: acu.c,v 1.5 2000/04/20 06:19:33 deraadt Exp $";
d70 1
a70 1
	register char *cp = PN;
d189 1
a189 1
	register char *s;
d191 1
a191 1
	register acu_t *p;
@


1.5
log
@avoid naming something pwrite()
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.4 1997/09/01 23:24:23 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: acu.c,v 1.4 1997/09/01 23:24:23 deraadt Exp $";
d105 3
a107 3
			for (phnum = cp; *cp && *cp != ','; cp++)
				;
			if (*cp)
d109 9
a117 10
			
			if ((conflag = (*acu->acu_dialer)(phnum, CU))) {
				if (CM != NOSTR)
					parwrite(FD, CM, size(CM));
				logent(value(HOST), phnum, acu->acu_name,
					"call completed");
				return (NOSTR);
			} else
				logent(value(HOST), phnum, acu->acu_name,
					"call failed");
d126 5
a130 8
			for (cp = string; !any(*cp, " \t\n"); cp++)
				;
			if (*cp == '\n') {
				fclose(fd);
				return ("unrecognizable host name");
			}
			*cp++ = '\0';
			if (strcmp(string, value(HOST)))
d132 11
a142 10
			while (any(*cp, " \t"))
				cp++;
			if (*cp == '\n') {
				fclose(fd);
				return ("missing phone number");
			}
			for (phnum = cp; *cp && *cp != ',' && *cp != '\n'; cp++)
				;
			if (*cp)
				*cp++ = '\0';
d144 1
a144 10
			if ((conflag = (*acu->acu_dialer)(phnum, CU))) {
				fclose(fd);
				if (CM != NOSTR)
					parwrite(FD, CM, size(CM));
				logent(value(HOST), phnum, acu->acu_name,
					"call completed");
				return (NOSTR);
			} else
				logent(value(HOST), phnum, acu->acu_name,
					"call failed");
d149 6
a154 1
	if (!tried)
d156 2
a157 1
	else
d159 2
a160 1
	return (tried ? "call failed" : "missing phone number");
@


1.4
log
@Wall pass, and oflow fix from eivind@@bitbox.follo.net
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.3 1997/04/02 01:47:01 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: acu.c,v 1.3 1997/04/02 01:47:01 millert Exp $";
d77 1
a77 1
			pwrite(FD, CM, size(CM));
d112 1
a112 1
					pwrite(FD, CM, size(CM));
d150 1
a150 1
					pwrite(FD, CM, size(CM));
@


1.3
log
@Merge in good changes from NetBSD:
    Compile in strcict ansi (some day I'll get around to -Wall)
    use set* functions instead of modifying the lvalue
    Change a few sprintf() to snprintf() where it coudl possibly matter.
    Replace zzhack stuff with something saner to make tip work on alpha
@
text
@d1 1
a1 1
/*	$OpenBSD: acu.c,v 1.2 1996/06/26 05:40:40 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: acu.c,v 1.2 1996/06/26 05:40:40 deraadt Exp $";
d73 1
a73 1
	int tried = 0;
d110 1
a110 1
			if (conflag = (*acu->acu_dialer)(phnum, CU)) {
d147 1
a147 1
			if (conflag = (*acu->acu_dialer)(phnum, CU)) {
d168 1
@


1.2
log
@rcsid
@
text
@d1 2
a2 2
/*	$OpenBSD: acu.c,v 1.3 1994/12/08 09:30:39 jtc Exp $	*/
/*	$NetBSD: acu.c,v 1.3 1994/12/08 09:30:39 jtc Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: acu.c,v 1.3 1994/12/08 09:30:39 jtc Exp $";
d93 1
a93 1
			boolean(value(VERBOSE)) = FALSE;
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: acu.c,v 1.3 1994/12/08 09:30:39 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
