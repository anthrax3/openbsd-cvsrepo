head	1.13;
access;
symbols
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.16
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.12
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.10
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.8
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.6
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.4
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.2
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.10.0.12
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.10
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.6.0.16
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.14
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.12
	OPENBSD_2_8:1.6.0.10
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.8
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.6
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2010.06.29.20.09.39;	author nicm;	state dead;
branches;
next	1.12;

1.12
date	2009.10.27.23.59.45;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.16.19.32.46;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.03.02.56.18;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.06.12.06.07.16;	author mpech;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.29.09.23.25;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.07.06.56.50;	author hugh;	state Exp;
branches;
next	1.6;

1.6
date	98.07.13.02.11.44;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.09.01.23.24.27;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.08.24.23.22.22;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.04.02.01.47.04;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.40.49;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.17;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.17;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Use the libutil implementation of UUCP locking.
@
text
@/*	$OpenBSD: uucplock.c,v 1.12 2009/10/27 23:59:45 deraadt Exp $	*/
/*	$NetBSD: uucplock.c,v 1.7 1997/02/11 09:24:08 mrg Exp $	*/

/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/file.h>
#include <sys/dir.h>
#include <stdio.h>
#include <string.h>
#include <signal.h>
#include <unistd.h>
#include <stdlib.h>
#include <errno.h>
#include "pathnames.h"

/*
 * uucp style locking routines
 * return: 0 - success
 *	  -1 - failure
 */

int
uu_lock(char *ttyname)
{
	int fd, len;
	char tbuf[sizeof(_PATH_LOCKDIRNAME) + MAXNAMLEN];
	char text_pid[81];
	pid_t pid;

	(void)snprintf(tbuf, sizeof tbuf, _PATH_LOCKDIRNAME, ttyname);
	fd = open(tbuf, O_RDWR|O_CREAT|O_EXCL, 0660);
	if (fd < 0) {
		/*
		 * file is already locked
		 * check to see if the process holding the lock still exists
		 */
		fd = open(tbuf, O_RDWR, 0);
		if (fd < 0) {
			perror(tbuf);
			fprintf(stderr, "Can't open lock file.\n");
			return(-1);
		}
		len = read(fd, text_pid, sizeof(text_pid)-1);
		if (len<=0) {
			perror(tbuf);
			(void)close(fd);
			fprintf(stderr, "Can't read lock file.\n");
			return(-1);
		}
		text_pid[len] = 0;
		pid = atol(text_pid);

		if (kill(pid, 0) == 0 || errno != ESRCH) {
			(void)close(fd);	/* process is still running */
			return(-1);
		}
		/*
		 * The process that locked the file isn't running, so
		 * we'll lock it ourselves
		 */
		fprintf(stderr, "Stale lock on %s PID=%ld... overriding.\n",
			ttyname, (long)pid);
		if (lseek(fd, (off_t)0, SEEK_SET) < 0) {
			perror(tbuf);
			(void)close(fd);
			fprintf(stderr, "Can't seek lock file.\n");
			return(-1);
		}
		/* fall out and finish the locking process */
	}
	pid = getpid();
	(void)snprintf(text_pid, sizeof text_pid, "%10ld\n", (long)pid);
	len = strlen(text_pid);
	if (write(fd, text_pid, len) != len) {
		(void)close(fd);
		(void)unlink(tbuf);
		perror("lock write");
		return(-1);
	}
	(void)close(fd);
	return(0);
}

int
uu_unlock(char *ttyname)
{
	char tbuf[sizeof(_PATH_LOCKDIRNAME) + MAXNAMLEN];

	(void)snprintf(tbuf, sizeof tbuf, _PATH_LOCKDIRNAME, ttyname);
	return(unlink(tbuf));
}
@


1.12
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: uucplock.c,v 1.11 2006/03/16 19:32:46 deraadt Exp $	*/
@


1.11
log
@first pass of cleanup of this mess; ok dhill
@
text
@d1 1
a1 1
/*	$OpenBSD: uucplock.c,v 1.10 2003/06/03 02:56:18 millert Exp $	*/
a31 7

#ifndef lint
#if 0
static char sccsid[] = "@@(#)uucplock.c	8.1 (Berkeley) 6/6/93";
#endif
static const char rcsid[] = "$OpenBSD: uucplock.c,v 1.10 2003/06/03 02:56:18 millert Exp $";
#endif /* not lint */
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: uucplock.c,v 1.9 2002/06/12 06:07:16 mpech Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: uucplock.c,v 1.9 2002/06/12 06:07:16 mpech Exp $";
d51 1
a51 1
/* 
d54 1
a54 1
 * 	  -1 - failure
d58 1
a58 2
uu_lock(ttyname)
	char *ttyname;
d79 1
a79 1
		if(len<=0) {
d120 1
a120 2
uu_unlock(ttyname)
	char *ttyname;
@


1.9
log
@a real pid_t cleanup.

espie@@ ok for make/,
deraadt@@ one extra eye,
millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: uucplock.c,v 1.8 2002/05/29 09:23:25 deraadt Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: uucplock.c,v 1.8 2002/05/29 09:23:25 deraadt Exp $";
@


1.8
log
@more snprintf
@
text
@d1 1
a1 1
/*	$OpenBSD: uucplock.c,v 1.7 2002/05/07 06:56:50 hugh Exp $	*/
d41 1
a41 1
static const char rcsid[] = "$OpenBSD: uucplock.c,v 1.7 2002/05/07 06:56:50 hugh Exp $";
d101 2
a102 2
		fprintf(stderr, "Stale lock on %s PID=%d... overriding.\n",
			ttyname, pid);
@


1.7
log
@Carefully applied -Wall fixups from <panda@@omatis.com>.
Also a little KNF.
@
text
@d1 1
a1 1
/*	$OpenBSD: uucplock.c,v 1.6 1998/07/13 02:11:44 millert Exp $	*/
d41 1
a41 1
static const char rcsid[] = "$OpenBSD: uucplock.c,v 1.6 1998/07/13 02:11:44 millert Exp $";
d65 1
a65 1
	int fd, pid;
d68 1
a68 1
	int len;
d112 1
a112 1
	(void)sprintf(text_pid, "%10d\n", pid);
@


1.6
log
@ftpd: sleep for an indeterminate amount for non-existant logins
      to simulate a crypt, like login does.
Use SEEK_* not L_* and kill some 0L's used in lseek while we're there.
@
text
@d1 1
a1 1
/*	$OpenBSD: uucplock.c,v 1.5 1997/09/01 23:24:27 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: uucplock.c,v 1.5 1997/09/01 23:24:27 deraadt Exp $";
@


1.5
log
@Wall pass, and oflow fix from eivind@@bitbox.follo.net
@
text
@d1 1
a1 1
/*	$OpenBSD: uucplock.c,v 1.4 1997/08/24 23:22:22 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: uucplock.c,v 1.4 1997/08/24 23:22:22 deraadt Exp $";
d103 1
a103 1
		if (lseek(fd, (off_t)0, L_SET) < 0) {
@


1.4
log
@avoid oflow
@
text
@d1 1
a1 1
/*	$OpenBSD: uucplock.c,v 1.3 1997/04/02 01:47:04 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: uucplock.c,v 1.3 1997/04/02 01:47:04 millert Exp $";
d44 3
d49 1
d51 1
a51 3
#include <sys/types.h>
#include <sys/file.h>
#include <sys/dir.h>
d61 1
d124 1
@


1.3
log
@Merge in good changes from NetBSD:
    Compile in strcict ansi (some day I'll get around to -Wall)
    use set* functions instead of modifying the lvalue
    Change a few sprintf() to snprintf() where it coudl possibly matter.
    Replace zzhack stuff with something saner to make tip work on alpha
@
text
@d1 1
a1 1
/*	$OpenBSD: uucplock.c,v 1.2 1996/06/26 05:40:49 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: uucplock.c,v 1.2 1996/06/26 05:40:49 deraadt Exp $";
d67 1
a67 1
	(void)sprintf(tbuf, _PATH_LOCKDIRNAME, ttyname);
d126 1
a126 1
	(void)sprintf(tbuf, _PATH_LOCKDIRNAME, ttyname);
@


1.2
log
@rcsid
@
text
@d1 2
a2 2
/*	$OpenBSD: uucplock.c,v 1.6 1995/09/26 06:02:14 jtc Exp $	*/
/*	$NetBSD: uucplock.c,v 1.6 1995/09/26 06:02:14 jtc Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: uucplock.c,v 1.6 1995/09/26 06:02:14 jtc Exp $";
d109 1
a109 1
	sprintf(text_pid, "%10d\n", pid);
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: uucplock.c,v 1.6 1995/09/26 06:02:14 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
