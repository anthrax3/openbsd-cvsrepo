head	1.20;
access;
symbols
	OPENBSD_5_7:1.19.0.16
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.19.0.20
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.18
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.14
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.12
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.10
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.8
	OPENBSD_5_0:1.19.0.6
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.19.0.4
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.19.0.2
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.13.0.16
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.12
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.10
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.8
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.6
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.4
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.2
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.10.0.12
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.10
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.16
	OPENBSD_2_8:1.6.0.14
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.12
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.10
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.8
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.6
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2015.04.24.18.05.21;	author nicm;	state dead;
branches;
next	1.19;
commitid	rYO6EyDAuDX1Hb8y;

1.19
date	2010.07.03.03.38.22;	author nicm;	state Exp;
branches;
next	1.18;

1.18
date	2010.07.02.05.52.48;	author nicm;	state Exp;
branches;
next	1.17;

1.17
date	2010.07.01.21.28.01;	author nicm;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.29.20.09.39;	author nicm;	state Exp;
branches;
next	1.15;

1.15
date	2010.06.29.17.42.35;	author nicm;	state Exp;
branches;
next	1.14;

1.14
date	2009.10.27.23.59.44;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.17.19.39.46;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2006.03.17.14.43.06;	author moritz;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.16.19.32.46;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.03.02.56.18;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.07.06.56.50;	author hugh;	state Exp;
branches;
next	1.8;

1.8
date	2001.10.24.18.38.58;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.17.22.21.09;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.09.01.23.24.24;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.04.20.23.29.32;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.10.15.23.47.21;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.40.43;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.12.14;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.16;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.16;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Remove tip(1), superseded by cu(1).

ok deraadt sthen bmercer
@
text
@/*	$OpenBSD: hunt.c,v 1.19 2010/07/03 03:38:22 nicm Exp $	*/
/*	$NetBSD: hunt.c,v 1.6 1997/04/20 00:02:10 mellon Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <util.h>

#include "tip.h"

static jmp_buf	deadline;
static int	deadflag;

static void	dead(int);

/*ARGSUSED*/
static void
dead(int signo)
{
	deadflag = 1;
	longjmp(deadline, 1);
}

/* Find and open the host. Returns the fd, or exits on error. */
int
hunt(char *hosts)
{
	char   	       *copy, *last, *host, *device;
	struct termios	tio;
	int		fd, tried;
	sig_t		old_alrm;

	if (hosts == NULL) {
		hosts = getenv("HOST");
		if (hosts == NULL)
			errx(3, "no host specified");
	}

	if ((copy = strdup(hosts)) == NULL)
		err(1, "strdup");
	last = copy;

	old_alrm = signal(SIGALRM, dead);

	tried = 0;
	while ((host = strsep(&last, ",")) != NULL) {
		device = getremote(host);

		uucplock = strrchr(device, '/');
		if (uucplock == NULL)
			uucplock = strdup(device);
		else
			uucplock = strdup(uucplock + 1);
		if (uucplock == NULL)
			err(1, "strdup");
		if (uu_lock(uucplock) != UU_LOCK_OK)
			continue;

		deadflag = 0;
		if (setjmp(deadline) == 0) {
			alarm(10);

			fd = open(device,
			    O_RDWR | (vgetnum(DC) ? O_NONBLOCK : 0));
			if (fd < 0)
				perror(device);
		}
		alarm(0);

		tried++;
		if (fd >= 0 && !deadflag) {
			tcgetattr(fd, &tio);
			if (!vgetnum(DC))
				tio.c_cflag |= HUPCL;
			if (tcsetattr(fd, TCSAFLUSH, &tio) != 0)
				errx(1, "tcsetattr");

			if (ioctl(fd, TIOCEXCL) != 0)
				errx(1, "ioctl");

			signal(SIGALRM, old_alrm);
			return (fd);
		}

		uu_unlock(uucplock);
		free(uucplock);
	}
	free(copy);

	signal(SIGALRM, old_alrm);
	if (tried == 0) {
		printf("all ports busy\n");
		exit(3);
	}
	printf("link down\n");
	exit(3);
}
@


1.19
log
@When open() fails, warn using the device name, not the host name.
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.18 2010/07/02 05:52:48 nicm Exp $	*/
@


1.18
log
@Rewrite hunt() to put the "rotary action" into it rather than remote.c, and so
it isn't so stupid (returning a char * as a long which goes into an int to use
as a flag, ugh).
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.17 2010/07/01 21:28:01 nicm Exp $	*/
d92 1
a92 1
				perror(host);
@


1.17
log
@Change variable get/set macros to have better names and drop boolean/character
ones.
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.16 2010/06/29 20:09:39 nicm Exp $	*/
d37 2
a38 2
static	jmp_buf deadline;
static	int deadfl;
d46 1
a46 1
	deadfl = 1;
d50 3
a52 2
long
hunt(char *name)
d54 16
a69 2
	char *cp;
	sig_t f;
d71 5
a75 4
	f = signal(SIGALRM, dead);
	while ((cp = getremote(name))) {
		deadfl = 0;
		uucplock = strrchr(cp, '/');
d77 1
a77 1
			uucplock = cp;
d79 3
a81 1
			uucplock++;
d85 1
d88 5
a92 1
			FD = open(cp, O_RDWR | (vgetnum(DC) ? O_NONBLOCK : 0));
a94 6
		if (FD < 0) {
			perror(cp);
			deadfl = 1;
		}
		if (!deadfl) {
			struct termios cntrl;
d96 3
a98 1
			tcgetattr(FD, &cntrl);
d100 9
a108 5
				cntrl.c_cflag |= HUPCL;
			tcsetattr(FD, TCSAFLUSH, &cntrl);
			ioctl(FD, TIOCEXCL, 0);
			signal(SIGALRM, SIG_DFL);
			return ((long)cp);
d111 9
a119 1
		(void)uu_unlock(uucplock);
d121 2
a122 2
	signal(SIGALRM, f);
	return (deadfl ? -1 : (long)cp);
@


1.16
log
@Use the libutil implementation of UUCP locking.
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.15 2010/06/29 17:42:35 nicm Exp $	*/
d69 1
a69 2
			FD = open(cp, (O_RDWR |
			    (boolean(value(DC)) ? O_NONBLOCK : 0)));
d80 1
a80 1
			if (!boolean(value(DC)))
@


1.15
log
@Now that there is no dial-up support, all connections are hardwired so drop the
flag and ignore the -t option to cu(1).
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.14 2009/10/27 23:59:44 deraadt Exp $	*/
d33 2
d64 1
a64 1
		if (uu_lock(uucplock) < 0)
@


1.14
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.13 2006/03/17 19:39:46 deraadt Exp $	*/
a61 1

d64 1
a64 9
		/*
		 * Straight through call units, such as the BIZCOMP,
		 * VADIC and the DF, must indicate they're hardwired in
		 *  order to get an open file descriptor placed in FD.
		 * Otherwise, as for a DN-11, the open will have to
		 *  be done in the "open" routine.
		 */
		if (!HW)
			break;
d86 1
@


1.13
log
@more cleanups; ok moritz
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.12 2006/03/17 14:43:06 moritz Exp $	*/
a31 7

#ifndef lint
#if 0
static char sccsid[] = "@@(#)hunt.c	8.1 (Berkeley) 6/6/93";
#endif
static const char rcsid[] = "$OpenBSD: hunt.c,v 1.12 2006/03/17 14:43:06 moritz Exp $";
#endif /* not lint */
@


1.12
log
@big prototype cleanup:

o make more functions static
o add all the prototypes to tip.h
o consistently declare functions in the cmd table

testing and ok dhill@@
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.11 2006/03/16 19:32:46 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: hunt.c,v 1.11 2006/03/16 19:32:46 deraadt Exp $";
d47 1
@


1.11
log
@first pass of cleanup of this mess; ok dhill
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.10 2003/06/03 02:56:18 millert Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: hunt.c,v 1.10 2003/06/03 02:56:18 millert Exp $";
a41 2
extern char *getremote(char *);

d45 3
a47 1
void
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.9 2002/05/07 06:56:50 hugh Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: hunt.c,v 1.9 2002/05/07 06:56:50 hugh Exp $";
d42 1
a42 1
extern char *getremote();
d48 1
a48 1
dead()
d55 1
a55 2
hunt(name)
	char *name;
d83 1
a83 1
				       (boolean(value(DC)) ? O_NONBLOCK : 0)));
@


1.9
log
@Carefully applied -Wall fixups from <panda@@omatis.com>.
Also a little KNF.
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.8 2001/10/24 18:38:58 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: hunt.c,v 1.8 2001/10/24 18:38:58 millert Exp $";
@


1.8
log
@kill register
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.7 2001/09/17 22:21:09 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: hunt.c,v 1.7 2001/09/17 22:21:09 deraadt Exp $";
@


1.7
log
@handle names without / in them
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.6 1997/09/01 23:24:24 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: hunt.c,v 1.6 1997/09/01 23:24:24 deraadt Exp $";
d62 1
a62 1
	register char *cp;
@


1.6
log
@Wall pass, and oflow fix from eivind@@bitbox.follo.net
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.5 1997/04/20 23:29:32 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: hunt.c,v 1.5 1997/04/20 23:29:32 millert Exp $";
d68 6
a73 1
		uucplock = strrchr(cp, '/')+1;
@


1.5
log
@Incorporate some NetBSD changes:
tip.c
    getchar() returns an int [important since EOF == -1] (thorpej)
    Set CLOCAL if dc flag is set (mellon)
tip.h
    Change booleans from char to short so that comparisons against negative
    values work as expected on systems with unsigned chars. (thorpej)
    Add boolean for dc flag (mellon)
hunt.c
    Set O_NONBLOCK if dc flag set. Don't set HUPCL if dc flag is set. (mellon)
remote.c
    Add boolean for dc flag (mellon)
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.4 1996/10/15 23:47:21 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: hunt.c,v 1.4 1996/10/15 23:47:21 millert Exp $";
d66 1
a66 1
	while (cp = getremote(name)) {
@


1.4
log
@Possible buf oflow + index -> strchr.
@
text
@d1 2
a2 2
/*	$OpenBSD: hunt.c,v 1.3 1996/06/26 05:40:43 deraadt Exp $	*/
/*	$NetBSD: hunt.c,v 1.5 1995/10/29 00:49:40 pk Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: hunt.c,v 1.3 1996/06/26 05:40:43 deraadt Exp $";
d82 2
a83 1
			FD = open(cp, O_RDWR);
d94 2
a95 1
			cntrl.c_cflag |= HUPCL;
@


1.3
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: hunt.c,v 1.5 1995/10/29 00:49:40 pk Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: hunt.c,v 1.5 1995/10/29 00:49:40 pk Exp $";
a46 1
extern char *rindex();
d68 1
a68 1
		uucplock = rindex(cp, '/')+1;
@


1.2
log
@from netbsd:
Convert to termios (from Scott Reynolds; PR#1621).
8-bit patches (from Matthieu Herrb; PR#1384).
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: hunt.c,v 1.5 1995/10/29 00:49:40 pk Exp $";
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: hunt.c,v 1.4 1994/12/24 17:56:27 cgd Exp $	*/
d40 1
a40 1
static char rcsid[] = "$NetBSD: hunt.c,v 1.4 1994/12/24 17:56:27 cgd Exp $";
d90 5
a95 1
			ioctl(FD, TIOCHPCL, 0);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
