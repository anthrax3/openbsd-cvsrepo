head	1.24;
access;
symbols
	OPENBSD_5_7:1.23.0.16
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.23.0.20
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.23.0.18
	OPENBSD_5_5_BASE:1.23
	OPENBSD_5_4:1.23.0.14
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.23.0.12
	OPENBSD_5_3_BASE:1.23
	OPENBSD_5_2:1.23.0.10
	OPENBSD_5_2_BASE:1.23
	OPENBSD_5_1_BASE:1.23
	OPENBSD_5_1:1.23.0.8
	OPENBSD_5_0:1.23.0.6
	OPENBSD_5_0_BASE:1.23
	OPENBSD_4_9:1.23.0.4
	OPENBSD_4_9_BASE:1.23
	OPENBSD_4_8:1.23.0.2
	OPENBSD_4_8_BASE:1.23
	OPENBSD_4_7:1.21.0.2
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.18.0.16
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.12
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.18.0.10
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.18.0.8
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.6
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.18.0.4
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.2
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.16
	OPENBSD_2_8:1.6.0.14
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.12
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.10
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.8
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.6
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.24
date	2015.04.24.18.05.21;	author nicm;	state dead;
branches;
next	1.23;
commitid	rYO6EyDAuDX1Hb8y;

1.23
date	2010.07.01.21.28.01;	author nicm;	state Exp;
branches;
next	1.22;

1.22
date	2010.06.29.21.34.50;	author nicm;	state Exp;
branches;
next	1.21;

1.21
date	2010.02.07.20.16.47;	author nicm;	state Exp;
branches;
next	1.20;

1.20
date	2009.12.12.13.38.09;	author nicm;	state Exp;
branches;
next	1.19;

1.19
date	2009.10.27.23.59.45;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2006.05.31.07.03.08;	author jason;	state Exp;
branches;
next	1.17;

1.17
date	2006.03.17.19.42.47;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2006.03.17.19.39.46;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2006.03.17.17.43.15;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2006.03.17.14.43.06;	author moritz;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.16.19.32.46;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2005.04.11.19.59.07;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2004.05.26.18.17.59;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.03.02.56.18;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.07.06.56.50;	author hugh;	state Exp;
branches;
next	1.8;

1.8
date	2001.10.24.18.38.58;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.04.23.35.59;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.09.01.23.24.27;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.08.23.00.03.46;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.04.02.01.47.04;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.40.48;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.12.17;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.17;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.17;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Remove tip(1), superseded by cu(1).

ok deraadt sthen bmercer
@
text
@/*	$OpenBSD: tipout.c,v 1.23 2010/07/01 21:28:01 nicm Exp $	*/
/*	$NetBSD: tipout.c,v 1.5 1996/12/29 10:34:12 cgd Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>

#include <poll.h>

#include "tip.h"

/*
 * tip
 *
 * lower fork of tip -- handles passive side
 *  reading from the remote host
 */

static void	tipout_wait(void);
static void	tipout_script(void);
static void	tipout_write(char *, size_t);
static void	tipout_sighandler(int);

volatile sig_atomic_t tipout_die;

/*
 * TIPOUT wait state routine --
 *   sent by TIPIN when it wants to possess the remote host
 */
static void
tipout_wait(void)
{
	write(tipin_fd, &ccc, 1);
	read(tipin_fd, &ccc, 1);
}

/*
 * Scripting command interpreter --
 *  accepts script file name over the pipe and acts accordingly
 */
static void
tipout_script(void)
{
	char c, line[256];
	char *pline = line;
	char reply;

	read(tipin_fd, &c, 1);
	while (c != '\n' && pline - line < sizeof(line)) {
		*pline++ = c;
		read(tipin_fd, &c, 1);
	}
	*pline = '\0';
	if (vgetnum(SCRIPT) && fscript != NULL)
		fclose(fscript);
	if (pline == line) {
		vsetnum(SCRIPT, 0);
		reply = 'y';
	} else {
		if ((fscript = fopen(line, "a")) == NULL)
			reply = 'n';
		else {
			reply = 'y';
			vsetnum(SCRIPT, 1);
		}
	}
	write(tipin_fd, &reply, 1);
}

/*
 * Write remote input out to stdout (and script file if enabled).
 */
static void
tipout_write(char *buf, size_t len)
{
	char *cp;

	for (cp = buf; cp < buf + len; cp++)
		*cp &= STRIP_PAR;

	write(STDOUT_FILENO, buf, len);

	if (vgetnum(SCRIPT) && fscript != NULL) {
		if (!vgetnum(BEAUTIFY))
			fwrite(buf, 1, len, fscript);
		else {
			for (cp = buf; cp < buf + len; cp++) {
				if ((*cp >= ' ' && *cp <= '~') ||
				    any(*cp, vgetstr(EXCEPTIONS)))
				    putc(*cp, fscript);
			}
		}
	}
}

/* ARGSUSED */
static void
tipout_sighandler(int signo)
{
	tipout_die = 1;
}

/*
 * ****TIPOUT   TIPOUT****
 */
void
tipout(void)
{
	struct pollfd pfds[2];
	char buf[BUFSIZ], ch;
	ssize_t len;
	int flag;

	signal(SIGINT, SIG_IGN);
	signal(SIGQUIT, SIG_IGN);

	tipout_die = 0;
	signal(SIGTERM, tipout_sighandler);
	signal(SIGHUP, tipout_sighandler);

	pfds[0].fd = tipin_fd;
	pfds[0].events = POLLIN;

	pfds[1].fd = FD;
	pfds[1].events = POLLIN;

	while (!tipout_die) {
		if (poll(pfds, 2, INFTIM) == -1) {
			if (errno == EINTR || errno == EAGAIN)
				continue;
			goto fail;
		}

		if (pfds[0].revents & (POLLHUP|POLLERR))
			goto fail;
		if (pfds[0].revents & POLLIN) {
			switch (read(tipin_fd, &ch, 1)) {
			case 0:
				goto fail;
			case -1:
				if (errno == EINTR || errno == EAGAIN)
					break;
				goto fail;
			default:
				switch (ch) {
				case 'W':	/* wait state */
					tipout_wait();
					break;
				case 'S':	/* script file */
					tipout_script();
					break;
				case 'B':	/* toggle beautify */
					flag = !vgetnum(BEAUTIFY);
					vsetnum(BEAUTIFY, flag);
					break;
				}
				break;
			}
		}

		if (pfds[1].revents & (POLLHUP|POLLERR))
			goto fail;
		if (pfds[1].revents & POLLIN) {
			switch (len = read(FD, buf, BUFSIZ)) {
			case 0:
				goto fail;
			case -1:
				if (errno == EINTR || errno == EAGAIN)
					continue;
				goto fail;
			default:
				tipout_write(buf, len);
				break;
			}
		}
	}

fail:
	if (vgetnum(SCRIPT) && fscript != NULL)
		fclose(fscript);
	kill(tipin_pid, SIGTERM);
	exit(0);
}
@


1.23
log
@Change variable get/set macros to have better names and drop boolean/character
ones.
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.22 2010/06/29 21:34:50 nicm Exp $	*/
@


1.22
log
@Merge v_type and v_access into one v_flags member in value_t, get rid of TRUE
and FALSE, and rename the other flags to have a V_ prefix.
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.21 2010/02/07 20:16:47 nicm Exp $	*/
d81 1
a81 1
	if (boolean(value(SCRIPT)) && fscript != NULL)
d84 1
a84 1
		setboolean(value(SCRIPT), 0);
d91 1
a91 1
			setboolean(value(SCRIPT), 1);
d110 2
a111 2
	if (boolean(value(SCRIPT)) && fscript != NULL) {
		if (!boolean(value(BEAUTIFY)))
d116 2
a117 2
				    any(*cp, value(EXCEPTIONS)))
					putc(*cp, fscript);
d180 2
a181 2
					flag = !boolean(value(BEAUTIFY));
					setboolean(value(BEAUTIFY), flag);
d206 1
a206 1
	if (boolean(value(SCRIPT)) && fscript != NULL)
@


1.21
log
@Change tipout to use poll(2) instead of the ghastly setup with signals/longjmp.

Tested/briefly read by mk@@, blambert@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.20 2009/12/12 13:38:09 nicm Exp $	*/
d84 1
a84 1
		setboolean(value(SCRIPT), FALSE);
d91 1
a91 1
			setboolean(value(SCRIPT), TRUE);
@


1.20
log
@Use a socketpair instead of a pair of pipes.

looks ok to millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.19 2009/10/27 23:59:45 deraadt Exp $	*/
d33 4
d46 4
a49 1
static	jmp_buf sigbuf;
d51 1
a51 4
static void	intIOT(int);
static void	intEMT(int);
static void	intTERM(int);
static void	intSYS(int);
d55 1
a55 1
 *   sent by TIPIN when it wants to posses the remote host
a56 1
/*ARGSUSED*/
d58 1
a58 1
intIOT(int signo)
a61 1
	longjmp(sigbuf, 1);
a67 1
/*ARGSUSED*/
d69 1
a69 1
intEMT(int signo)
a94 1
	longjmp(sigbuf, 1);
d97 3
d101 1
a101 1
intTERM(int signo)
d103 18
a120 5
	if (boolean(value(SCRIPT)) && fscript != NULL)
		fclose(fscript);
	if (signo && tipin_pid)
		kill(tipin_pid, signo);
	exit(0);
d123 1
a123 1
/*ARGSUSED*/
d125 1
a125 1
intSYS(int signo)
d127 1
a127 2
	setboolean(value(BEAUTIFY), !boolean(value(BEAUTIFY)));
	longjmp(sigbuf, 1);
d136 4
a139 5
	char buf[BUFSIZ];
	char *cp;
	ssize_t scnt;
	size_t cnt;
	sigset_t mask, omask;
d143 42
a184 18
	signal(SIGEMT, intEMT);		/* attention from TIPIN */
	signal(SIGTERM, intTERM);	/* time to go signal */
	signal(SIGIOT, intIOT);		/* scripting going on signal */
	signal(SIGHUP, intTERM);	/* for dial-ups */
	signal(SIGSYS, intSYS);		/* beautify toggle */
	(void) setjmp(sigbuf);
	sigprocmask(SIG_BLOCK, NULL, &omask);
	for (;;) {
		sigprocmask(SIG_SETMASK, &omask, NULL);
		scnt = read(FD, buf, BUFSIZ);
		if (scnt <= 0) {
			/* lost carrier */
			if (scnt == 0 || (scnt < 0 && errno == EIO)) {
				sigemptyset(&mask);
				sigaddset(&mask, SIGTERM);
				sigprocmask(SIG_BLOCK, &mask, NULL);
				intTERM(0);
				/*NOTREACHED*/
a185 1
			continue;
d187 14
a200 14
		cnt = scnt;
		sigemptyset(&mask);
		sigaddset(&mask, SIGEMT);
		sigaddset(&mask, SIGTERM);
		sigaddset(&mask, SIGIOT);
		sigaddset(&mask, SIGSYS);
		sigprocmask(SIG_BLOCK, &mask, NULL);
		for (cp = buf; cp < buf + cnt; cp++)
			*cp &= STRIP_PAR;
		write(STDOUT_FILENO, buf, cnt);
		if (boolean(value(SCRIPT)) && fscript != NULL) {
			if (!boolean(value(BEAUTIFY))) {
				fwrite(buf, 1, cnt, fscript);
				continue;
a201 4
			for (cp = buf; cp < buf + cnt; cp++)
				if ((*cp >= ' ' && *cp <= '~') ||
				    any(*cp, value(EXCEPTIONS)))
					putc(*cp, fscript);
d204 6
@


1.19
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.18 2006/05/31 07:03:08 jason Exp $	*/
d57 2
a58 2
	write(repdes[1],&ccc,1);
	read(fildes[0], &ccc,1);
d74 1
a74 1
	read(fildes[0], &c, 1);
d77 1
a77 1
		read(fildes[0], &c, 1);
d93 1
a93 1
	write(repdes[1], &reply, 1);
@


1.18
log
@don't spin if the tty (think ucom) goes away
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.17 2006/03/17 19:42:47 deraadt Exp $	*/
a31 7

#ifndef lint
#if 0
static char sccsid[] = "@@(#)tipout.c	8.1 (Berkeley) 6/6/93";
#endif
static const char rcsid[] = "$OpenBSD: tipout.c,v 1.17 2006/03/17 19:42:47 deraadt Exp $";
#endif /* not lint */
@


1.17
log
@handle ssize_t vs size_t
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.16 2006/03/17 19:39:46 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: tipout.c,v 1.16 2006/03/17 19:39:46 deraadt Exp $";
d148 1
a148 1
			if (scnt < 0 && errno == EIO) {
@


1.16
log
@more cleanups; ok moritz
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.15 2006/03/17 17:43:15 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: tipout.c,v 1.15 2006/03/17 17:43:15 deraadt Exp $";
d130 1
d145 2
a146 2
		cnt = read(FD, buf, BUFSIZ);
		if (cnt <= 0) {
d148 1
a148 1
			if (cnt < 0 && errno == EIO) {
d157 1
@


1.15
log
@ARGSUSED is good on signal handlers
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.14 2006/03/17 14:43:06 moritz Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: tipout.c,v 1.14 2006/03/17 14:43:06 moritz Exp $";
d130 1
a130 1
	int cnt;
@


1.14
log
@big prototype cleanup:

o make more functions static
o add all the prototypes to tip.h
o consistently declare functions in the cmd table

testing and ok dhill@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.13 2006/03/16 19:32:46 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: tipout.c,v 1.13 2006/03/16 19:32:46 deraadt Exp $";
d60 1
d73 1
d114 1
@


1.13
log
@first pass of cleanup of this mess; ok dhill
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.12 2005/04/11 19:59:07 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: tipout.c,v 1.12 2005/04/11 19:59:07 deraadt Exp $";
d51 5
d60 1
a60 1
void
a62 1

d72 1
a72 1
void
d102 1
a102 1
void
d112 1
a112 1
void
a114 1

@


1.12
log
@use STDERR_FILENO; ok cloder
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.11 2004/05/26 18:17:59 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: tipout.c,v 1.11 2004/05/26 18:17:59 deraadt Exp $";
d41 1
d56 1
a56 1
intIOT()
d69 1
a69 1
intEMT()
a100 1

d109 1
a109 1
intSYS()
d120 1
a120 1
tipout()
@


1.11
log
@if one process is killed, kill the other ourself; various ok
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.10 2003/06/03 02:56:18 millert Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: tipout.c,v 1.10 2003/06/03 02:56:18 millert Exp $";
d158 1
a158 1
		write(1, buf, cnt);
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.9 2002/05/07 06:56:50 hugh Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: tipout.c,v 1.9 2002/05/07 06:56:50 hugh Exp $";
d98 1
a98 1
intTERM()
d103 2
d145 1
a145 1
				intTERM();
@


1.9
log
@Carefully applied -Wall fixups from <panda@@omatis.com>.
Also a little KNF.
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.8 2001/10/24 18:38:58 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: tipout.c,v 1.8 2001/10/24 18:38:58 millert Exp $";
@


1.8
log
@kill register
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.7 2001/09/04 23:35:59 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: tipout.c,v 1.7 2001/09/04 23:35:59 millert Exp $";
@


1.7
log
@Replace the deprecated BSD sigsetmask/sigblock/sigpause functions with their POSIX counterparts.
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.6 1997/09/01 23:24:27 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: tipout.c,v 1.6 1997/09/01 23:24:27 deraadt Exp $";
d75 1
a75 1
	register char *pline = line;
d125 2
a126 3
	register char *cp;
	register int cnt;
	extern int errno;
@


1.6
log
@Wall pass, and oflow fix from eivind@@bitbox.follo.net
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.5 1997/08/23 00:03:46 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: tipout.c,v 1.5 1997/08/23 00:03:46 millert Exp $";
d128 1
a128 1
	int omask;
d138 3
a140 1
	for (omask = 0;; sigsetmask(omask)) {
d145 3
a147 1
				sigblock(sigmask(SIGTERM));
d153 6
a158 2
#define	ALLSIGS	sigmask(SIGEMT)|sigmask(SIGTERM)|sigmask(SIGIOT)|sigmask(SIGSYS)
		omask = sigblock(ALLSIGS);
@


1.5
log
@Avoid buf oflow.  From Warner Losh <imp@@rover.village.org>
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.4 1997/04/02 01:47:04 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: tipout.c,v 1.4 1997/04/02 01:47:04 millert Exp $";
d121 1
@


1.4
log
@Merge in good changes from NetBSD:
    Compile in strcict ansi (some day I'll get around to -Wall)
    use set* functions instead of modifying the lvalue
    Change a few sprintf() to snprintf() where it coudl possibly matter.
    Replace zzhack stuff with something saner to make tip work on alpha
@
text
@d1 1
a1 1
/*	$OpenBSD: tipout.c,v 1.3 1996/06/26 05:40:48 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: tipout.c,v 1.3 1996/06/26 05:40:48 deraadt Exp $";
d79 1
a79 1
	while (c != '\n') {
@


1.3
log
@rcsid
@
text
@d1 2
a2 2
/*	$OpenBSD: tipout.c,v 1.4 1995/10/29 00:49:45 pk Exp $	*/
/*	$NetBSD: tipout.c,v 1.4 1995/10/29 00:49:45 pk Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: tipout.c,v 1.4 1995/10/29 00:49:45 pk Exp $";
d87 1
a87 1
		boolean(value(SCRIPT)) = FALSE;
d94 1
a94 1
			boolean(value(SCRIPT)) = TRUE;
d114 1
a114 1
	boolean(value(BEAUTIFY)) = !boolean(value(BEAUTIFY));
@


1.2
log
@from netbsd:
Convert to termios (from Scott Reynolds; PR#1621).
8-bit patches (from Matthieu Herrb; PR#1384).
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: tipout.c,v 1.4 1995/10/29 00:49:45 pk Exp $";
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: tipout.c,v 1.3 1994/12/08 09:31:12 jtc Exp $	*/
d40 1
a40 1
static char rcsid[] = "$NetBSD: tipout.c,v 1.3 1994/12/08 09:31:12 jtc Exp $";
d150 1
a150 1
			*cp &= 0177;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
