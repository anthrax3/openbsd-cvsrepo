head	1.4;
access;
symbols
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	VIM42:1.1.1.1
	VIM:1.1.1;
locks; strict;
comment	@# @;


1.4
date	98.02.23.12.07.27;	author downsj;	state dead;
branches;
next	1.3;

1.3
date	96.09.22.01.18.20;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.09.21.06.23.50;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.09.07.21.40.28;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.09.07.21.40.28;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.4
log
@This belongs in ports.
@
text
@/*	$OpenBSD: cmdline.pro,v 1.3 1996/09/22 01:18:20 downsj Exp $	*/
/* cmdline.c */
void add_to_history __PARMS((int histype, char_u *new_entry));
char_u *getcmdline __PARMS((int firstc, long count));
int put_on_cmdline __PARMS((char_u *str, int len, int redraw));
void alloc_cmdbuff __PARMS((int len));
int realloc_cmdbuff __PARMS((int len));
void redrawcmdline __PARMS((void));
void compute_cmdrow __PARMS((void));
int do_cmdline __PARMS((char_u *cmdline, int sourcing, int repeating));
int autowrite __PARMS((BUF *buf, int forceit));
void autowrite_all __PARMS((void));
int do_ecmd __PARMS((int fnum, char_u *fname, char_u *sfname, char_u *command, linenr_t newlnum, int flags));
void check_arg_idx __PARMS((void));
void gotocmdline __PARMS((int clr));
int check_fname __PARMS((void));
int getfile __PARMS((int fnum, char_u *fname, char_u *sfname, int setpm, linenr_t lnum, int forceit));
char_u *ExpandOne __PARMS((char_u *str, char_u *orig, int options, int mode));
void tilde_replace __PARMS((char_u *orig_pat, int num_files, char_u **files));
char_u *addstar __PARMS((char_u *fname, int len));
int do_source __PARMS((register char_u *fname, int check_other));
void prepare_viminfo_history __PARMS((int len));
int read_viminfo_history __PARMS((char_u *line, FILE *fp));
void finish_viminfo_history __PARMS((void));
void write_viminfo_history __PARMS((FILE *fp));
void do_exmode __PARMS((void));
@


1.3
log
@Add ex mode to vim, from eric@@rainbow.uchicago.edu via mool@@oce.nl.
@
text
@d1 1
a1 1
/*	$OpenBSD: cmdline.pro,v 1.2 1996/09/21 06:23:50 downsj Exp $	*/
@


1.2
log
@update to vim 4.4beta
@
text
@d1 1
a1 1
/*	$OpenBSD: cmdline.pro,v 1.1.1.1 1996/09/07 21:40:28 downsj Exp $	*/
d26 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d11 1
a11 1
int autowrite __PARMS((BUF *buf));
d13 1
a13 1
int do_ecmd __PARMS((int fnum, char_u *fname, char_u *sfname, char_u *command, int hide, linenr_t newlnum, int set_help));
d17 1
a17 1
int getfile __PARMS((int fnum, char_u *fname, char_u *sfname, int setpm, linenr_t lnum));
d19 1
@


1.1.1.1
log
@Initial import of vim 4.2.

This is meant to replace nvi in the tree.  Vim, in general, works better,
provides more features, and does not suffer from the license problems
being imposed upon nvi.

On the other hand, vim lacks a non-visual ex mode, in addition to open mode.

This includes the GUI (X11) code, but doesn't try to compile it.

@
text
@@
