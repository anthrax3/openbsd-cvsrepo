head	1.4;
access;
symbols
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	VIM42:1.1.1.1
	VIM:1.1.1;
locks; strict;
comment	@# @;


1.4
date	98.02.23.12.07.18;	author downsj;	state dead;
branches;
next	1.3;

1.3
date	96.10.14.03.55.52;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.09.21.06.23.40;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.09.07.21.40.31;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.09.07.21.40.31;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.4
log
@This belongs in ports.
@
text
@*vim_os2.txt*   For Vim version 4.5.  Last modification: 1996 Sep 17

This file contains the particularities for the OS/2 version of Vim.


NOTE

This OS/2 port works well for me and a couple of other OS/2 users; however,
since I haven't had much feedback, that either means no (OS/2-specific) bugs
exist (besides the ones mentioned below), or no one has yet created a
situation in which any bugs are apparent.  Report any problems or other
comments to paul@@wau.mis.ah.nl (email valid up to at least November 1996,
after that try paul@@wurtel.demon.nl, paul@@murphy.nl, or paulS@@toecompst.nl).
Textmode/notextmode, binary mode, and FAT handling all seem to work well,
which would seem to be the most likely places for trouble.

A known problem is that files opened by Vim are inherited by other programs
that are started via a shell escape from within Vim.  This specifically means
that Vim won't be able to remove the swap file(s) associated with buffers open
at the time the other program was started, until the other program is stopped.
At that time, the swap file may be removed, but if Vim could not do that the
first time, it won't be removed at all. You'll get warnings that some other
Vim session may be editing the file when you start Vim up again on that file.
This can be reproduced with ":!start epm". Now quit Vim, and start Vim again
with the file that was in the buffer at the time epm was started.  I'm working
on this!

A second problem is that Vim doesn't understand the situation when using it
when accessing the OS/2 system via the network, e.g. using telnet from a Unix
system, and then starting Vim. This will be looked into as soon as I get my
network running with OS/2... In the meantime any help will be appreciated.


PREREQUISITES

To run Vim, you need the emx runtime environment (at least rev. 0.9b).  This
is generally available as (ask Archie about it):

    emxrt.zip     emx runtime package

I've included a copy of emx.dll, which should be copied to one of the
directories listed in your LIBPATH. Emx is GPL'ed, but the emx.dll library is
not (read COPYING.EMX to find out what that means to you).

This emx.dll is from the emxfix04.zip package, which unfortunately has a bug,
eh, I mean a POSIX feature, in select().  Versions of Vim before 3.27 will
appear to hang when starting (actually, while processing vimrc). Hit return a
couple of times until Vim starts working if this happens.  Next, get an up to
date version of Vim!


HELP AND VIMRC FILE

The VIM environment variable is used to find the location of the help files
and the system .vimrc. Place an entry such as this in CONFIG.SYS:

SET VIM=c:/local/lib/vim

and copy all the vim_*.txt files and .vimrc to that directory. Vim will then
be able to find them.

Note: .vimrc may also be called _vimrc to accommodate those who have chosen to
install OS/2 on a FAT file system. Vim first tries to find .vimrc and if that
fails, looks for _vimrc in the same place.

If you're using network drives with OS/2, then you can install Vim on a
network drive (including .vimrc; this is then called the "system" vimrc file),
and then use a personal copy of .vimrc (the "user" vimrc file). This should be
located in a directory indicated by the HOME environment variable.


ENVIRONMENT VARIABLES IN FILE NAMES

This HOME environment variable is also used when using ~ in file names, so
":e ~/textfile" will edit the file "textfile" in the directory referred to by
HOME.  Additionally you can use other environment variables in file names, as
as ":n $SRC/*.c".

The HOME environment variable is also used to locate the .viminfo file
(see |viminfo_file|).  There is no support yet for .viminfo on FAT file
systems yet, sorry.  You could try the -i startup flag (as in "vim -i
$HOME/_viminfo") however.

If the HOME environment variable is not set, the value "C:/" is used as a
default.


BACKSLASHES

Using slashes ('/') and backslashes ('\') can be a bit of a problem (see
vim_dos.txt for more explanation), but in almost all cases Vim does "The Right
Thing".  Vim itself uses backslashes in file names, but will happily accept
forward slashes if they are entered (in fact, often that works better!).


TEMP FILES

Temporary files (for filtering) are put in the first directory in the next
list that exists and where a file can be created:
	$TMP
	$TEMP
	C:\TMP
	C:\TEMP
	current directory


TERMINAL SETTING

Use "os2ansi" as the TERM environment variable (or don't set it at all, as the
default is the correct value). You can set term to os2ansi in the .vimrc, in
case you need TERM to be a different value for other applications.  The
problem is that OS/2 ANSI emulation is quite limited (it doesn't have insert /
delete line, for example).

If you want to use a different value for TERM (because of other programs, for
example), make sure that the termcap entry for that TERM value has the
appropriate key mappings. The termcap.dat distributed with emx does not always
have them.  Here are some suitable values to add to the termcap entry of your
choice; these allow the cursor keys and the named function keys (such as
pagedown) to work.

	:ku=\316H:kd=\316P:kl=\316K:kr=\316M:%i=\316t:#4=\316s:\
	:kD=\316S:kI=\316R:kN=\316Q:kP=\316I:kh=\316G:@@7=\316O:\
	:k1=\316;:k2=\316<:k3=\316=:k4=\316>:k5=\316?:k6=\316@@:\
	:k7=\316A:k8=\316B:k9=\316C:k;=\316D:


Paul Slootman

vim:ts=8:tw=78:
@


1.3
log
@Backout a previous change that didn't work, and update to version 4.5.
@
text
@@


1.2
log
@update to vim 4.4beta
@
text
@d1 1
a1 1
*vim_os2.txt*   For Vim version 4.4.  Last modification: 1996 July 20
d10 4
a13 4
exist (besides the one mentioned below), or no one has yet created a situation
in which any bugs are apparent.  Report any problems or other comments to
paul@@wau.mis.ah.nl (email valid up to at least September 1996, after that try
paul@@wurtel.hobby.nl, paul@@murphy.nl, or paulS@@toecompst.nl).
d28 5
d45 5
a49 4
This emx.dll is from the emxfix04.zip package, which unfortunately has a bug
in select().  Versions of Vim before 3.27 will appear to hang when starting
(actually, while processing vimrc). Hit return a couple of times until Vim
starts working if this happens.  Next, get an up to date version of Vim!
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
*vim_os2.txt*   For Vim version 4.2.  Last modification: 1996 June 13
d6 1
a6 21
Note: This OS/2 port works well for me and a couple of other OS/2 users;
      however, since I haven't had much feedback, that either means no
      (OS/2-specific) bugs exist (besides the one mentioned below), or no one
      has yet created a situation in which any bugs are apparent.  Report any
      problems or other comments to paul@@wau.mis.ah.nl (email valid up to at
      least September 1996, after that try paul@@wurtel.hobby.nl,
      paul@@murphy.nl, or paulS@@toecompst.nl).  Textmode/notextmode, binary
      mode, and FAT handling all seem to work well, which would seem to be the
      most likely places for trouble.

      A known problem is that files opened by Vim are inherited by other
      programs that are started via a shell escape from within Vim.
      This specifically means that Vim won't be able to remove the swap
      file(s) associated with buffers open at the time the other program was
      started, until the other program is stopped. At that time, the swap file
      may be removed, but if Vim could not do that the first time, it won't be
      removed at all. You'll get warnings that some other Vim session may be
      editing the file when you start Vim up again on that file.  This can be
      reproduced with ":!start epm". Now quit Vim, and start Vim again with
      the file that was in the buffer at the time epm was started.  I'm
      working on this!
d8 19
a27 1
Prerequisites:
d29 4
a32 2
- To run Vim, you need the emx runtime environment (at least rev. 0.9b).  This
  is generally available as (ask Archie about it):
d36 11
a46 8
  I've included a copy of emx.dll, which should be copied to one of the
  directories listed in your LIBPATH. Emx is GPL'ed, but the emx.dll library
  is not (read COPYING.EMX to find out what that means to you).

  This emx.dll is from the emxfix04.zip package, which unfortunately has a bug
  in select().  Versions of Vim before 3.27 will appear to hang when starting
  (actually, while processing vimrc). Hit return a couple of times until Vim
  starts working if this happens.  Next, get an up to date version of Vim!
d65 3
d73 5
d81 3
d88 14
@


1.1.1.1
log
@Initial import of vim 4.2.

This is meant to replace nvi in the tree.  Vim, in general, works better,
provides more features, and does not suffer from the license problems
being imposed upon nvi.

On the other hand, vim lacks a non-visual ex mode, in addition to open mode.

This includes the GUI (X11) code, but doesn't try to compile it.

@
text
@@
