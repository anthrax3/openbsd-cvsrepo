head	1.30;
access;
symbols
	OPENBSD_6_2_BASE:1.30
	OPENBSD_6_1:1.30.0.4
	OPENBSD_6_1_BASE:1.30
	OPENBSD_6_0:1.28.0.4
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.28.0.2
	OPENBSD_5_9_BASE:1.28
	OPENBSD_5_8:1.27.0.4
	OPENBSD_5_8_BASE:1.27
	OPENBSD_5_7:1.26.0.2
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.23.0.4
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.22.0.4
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.19.0.2
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.15.0.10
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.8
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.6
	OPENBSD_5_0:1.15.0.4
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.2
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.14.0.2
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.13.0.8
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.10
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.6
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.4
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.2
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.12.0.10
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.8
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.6
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.11.0.6
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.4
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.6.0.8
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.6
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.5.0.10
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.8
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.6
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.30
date	2016.09.15.01.01.08;	author dlg;	state Exp;
branches;
next	1.29;
commitid	SH0rHlfoxqPDqFgT;

1.29
date	2016.08.27.04.07.42;	author guenther;	state Exp;
branches;
next	1.28;
commitid	0Te5wXjdrYMz6HhF;

1.28
date	2015.08.24.15.55.53;	author bluhm;	state Exp;
branches;
next	1.27;
commitid	Obl0gbh0sMuq3wbf;

1.27
date	2015.04.22.18.07.32;	author bluhm;	state Exp;
branches;
next	1.26;
commitid	UWkN0vO8AyQ3xrjn;

1.26
date	2015.02.12.01.49.02;	author claudio;	state Exp;
branches;
next	1.25;
commitid	EszVZ4RtthRFw1UZ;

1.25
date	2015.01.20.18.26.57;	author deraadt;	state Exp;
branches;
next	1.24;
commitid	qRSGCXxt7yQIBAcS;

1.24
date	2015.01.16.06.40.10;	author deraadt;	state Exp;
branches;
next	1.23;
commitid	Uu5nFG3wCl0LACBb;

1.23
date	2014.07.10.14.08.13;	author deraadt;	state Exp;
branches;
next	1.22;
commitid	WOTzjOemH7mT7A3L;

1.22
date	2013.11.09.20.04.13;	author guenther;	state Exp;
branches;
next	1.21;

1.21
date	2013.10.22.16.40.28;	author guenther;	state Exp;
branches;
next	1.20;

1.20
date	2013.08.18.16.32.24;	author guenther;	state Exp;
branches;
next	1.19;

1.19
date	2013.04.23.23.32.46;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2013.04.18.15.43.22;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2013.04.16.22.19.14;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2013.03.20.15.23.37;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2010.10.30.23.06.05;	author bluhm;	state Exp;
branches;
next	1.14;

1.14
date	2010.04.28.18.22.11;	author jsg;	state Exp;
branches;
next	1.13;

1.13
date	2007.12.19.01.47.00;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2005.03.25.17.01.04;	author jaredy;	state Exp;
branches;
next	1.11;

1.11
date	2004.03.13.22.02.13;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.03.02.56.13;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.02.01.01.51.31;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.16.21.27.50;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.19.19.02.15;	author mpech;	state Exp;
branches;
next	1.6;

1.6
date	99.12.08.12.30.17;	author itojun;	state Exp;
branches;
next	1.5;

1.5
date	97.06.29.21.46.06;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.06.29.20.52.42;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.06.29.20.18.04;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.37.26;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.51;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.51;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.30
log
@dont #define _KERNEL around some #includes

the data structures are now readable without _KERNEL needing to be defined.

ok deraadt@@

there's probably a lot more of these that can be cleaned up if
anyone is interested in looking into it.
@
text
@/*	$OpenBSD: unix.c,v 1.29 2016/08/27 04:07:42 guenther Exp $	*/
/*	$NetBSD: unix.c,v 1.13 1995/10/03 21:42:48 thorpej Exp $	*/

/*-
 * Copyright (c) 1983, 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Display protocol blocks in the unix domain.
 */
#include <sys/socket.h>
#include <sys/socketvar.h>
#include <sys/protosw.h>
#include <sys/mbuf.h>
#include <sys/sysctl.h>
#include <sys/time.h>
#include <sys/un.h>
#include <sys/unpcb.h>
#include <sys/ucred.h>
#include <sys/file.h>

#include <netinet/in.h>

#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <kvm.h>
#include "netstat.h"

static	const char *socktype[] =
    { "#0", "stream", "dgram", "raw", "rdm", "seqpacket" };

void
unixdomainpr(struct kinfo_file *kf)
{
	static int first = 1;

	/* XXX should fix kinfo_file instead but not now */
	if (kf->so_pcb == -1)
		kf->so_pcb = 0;

	if (first) {
		printf("Active UNIX domain sockets\n");
		printf("%-*.*s %-6.6s %-6.6s %-6.6s %*.*s %*.*s %*.*s %*.*s Addr\n",
		    PLEN, PLEN, "Address", "Type", "Recv-Q", "Send-Q",
		    PLEN, PLEN, "Inode", PLEN, PLEN, "Conn",
		    PLEN, PLEN, "Refs", PLEN, PLEN, "Nextref");
		first = 0;
	}

	printf("%#*llx%s %-6.6s %6llu %6llu %#*llx%s %#*llx%s %#*llx%s %#*llx%s",
	    FAKE_PTR(kf->so_pcb), socktype[kf->so_type],
	    kf->so_rcv_cc, kf->so_snd_cc,
	    FAKE_PTR(kf->v_un),
	    FAKE_PTR(kf->unp_conn),
	    FAKE_PTR(kf->unp_refs),
	    FAKE_PTR(kf->unp_nextref));
	if (kf->unp_path[0] != '\0')
		printf(" %.*s", KI_UNPPATHLEN, kf->unp_path);
	putchar('\n');
}

/*
 * Dump the contents of a UNIX PCB
 */
void
unpcb_dump(u_long off)
{
	struct unpcb unp;

	if (off == 0)
		return;
	kread(off, &unp, sizeof(unp));

	if (vflag)
		socket_dump((u_long)unp.unp_socket);

#define	p(fmt, v, sep) printf(#v " " fmt sep, unp.v);
#define	pll(fmt, v, sep) printf(#v " " fmt sep, (long long) unp.v);
#define	pull(fmt, v, sep) printf(#v " " fmt sep, (unsigned long long) unp.v);
#define	pp(fmt, v, sep) printf(#v " " fmt sep, unp.v);
	printf("unpcb %#lx\n ", off);
	pp("%p", unp_socket, "\n ");
	pp("%p", unp_vnode, ", ");
	pull("%llu", unp_ino, "\n ");
	pp("%p", unp_conn, ", ");
	printf("unp_refs %p, ", SLIST_FIRST(&unp.unp_refs));
	printf("unp_nextref %p\n ", SLIST_NEXT(&unp, unp_nextref));
	pp("%p", unp_addr, "\n ");
	p("%#.8x", unp_flags, "\n ");
	p("%u", unp_connid.uid, ", ");
	p("%u", unp_connid.gid, ", ");
	p("%d", unp_connid.pid, "\n ");
	pll("%lld", unp_ctime.tv_sec, ", ");
	p("%ld", unp_ctime.tv_nsec, "\n");
#undef p
#undef pp
}
@


1.29
log
@Pull in <sys/time.h> for struct timespec and timeval

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.28 2015/08/24 15:55:53 bluhm Exp $	*/
a43 1
#define _KERNEL
a45 1
#undef _KERNEL
@


1.28
log
@Remove obsolete fields in struct unpcb.  In the past they were used
for flow control with unix domain sockets, this is now done by
filling the send buffer with fake data counters.
OK naddy@@;  no fallout in a bulk build
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.27 2015/04/22 18:07:32 bluhm Exp $	*/
d41 1
@


1.27
log
@Expand SLIST macro of unix pcb members before printing the pointer.
Fixes a gcc warning.  No binary change.
Found by and OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.26 2015/02/12 01:49:02 claudio Exp $	*/
a119 2
	p("%d", unp_cc, ", ");
	p("%d", unp_mbcnt, "\n ");
@


1.26
log
@Switch the printing of open sockets from ugly KVM internals to use
kvm_getfiles. This allows to run netstat without any extra privileges
and removes another setgid program from base..
There is still kvm reader code in there which is used for debugging
purposes (crashdump). netstat should still behave mostly the same.
deraadt@@ and sthen@@ agree that it is time to get this puppy in.
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.25 2015/01/20 18:26:57 deraadt Exp $	*/
d113 2
a114 2
	pp("%p", unp_refs, ", ");
	pp("%p", unp_nextref, "\n ");
@


1.25
log
@Adjust <sys/param.h> comments regarding use of use of MSIZE, or
delete <sys/param.h> if now possible
ok guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.24 2015/01/16 06:40:10 deraadt Exp $	*/
a55 21
static	void unixdomainpr(const struct kinfo_file *, u_long);

void
unixpr(kvm_t *kvmd, u_long pcbaddr)
{
	struct kinfo_file *kf;
	int i, fcnt;

	kf = kvm_getfiles(kvmd, KERN_FILE_BYFILE, 0, sizeof(*kf), &fcnt);
	if (kf == NULL) {
		printf("Out of memory (file table).\n");
		return;
	}
	for (i = 0; i < fcnt; i++) {
		if (kf[i].f_count != 0 && kf[i].f_type == DTYPE_SOCKET &&
		    kf[i].so_family == AF_LOCAL && (kf[i].so_pcb != 0 ||
		    kf[i].unp_path[0] != '\0'))
			unixdomainpr(&kf[i], pcbaddr);
	}
}

d59 2
a60 2
static void
unixdomainpr(const struct kinfo_file *kf, u_long pcbaddr)
d64 3
a66 5
	if (Pflag) {
		if (pcbaddr == kf->f_data)
			socket_dump(pcbaddr);
		return;
	}
a76 1
#define	FAKE_PTR(p)	(PLEN - ((p) ? 0 : 2)), p, ((p) ? "" : "x0")
d78 1
a78 1
	    FAKE_PTR(kf->f_data), socktype[kf->so_type],
d101 3
d107 2
a108 2
#define	pp(fmt, v, sep) printf(#v " " fmt sep, hideroot ? 0 : unp.v);
	printf("unpcb %#lx\n ", hideroot ? 0 : off);
@


1.24
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.23 2014/07/10 14:08:13 deraadt Exp $	*/
a35 2
#include <sys/param.h>	/* MSIZE */
#include <sys/protosw.h>
d38 1
@


1.23
log
@#define _KERNEL hack requires ucred.h now as well
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.22 2013/11/09 20:04:13 guenther Exp $	*/
d36 1
a36 1
#include <sys/param.h>
@


1.22
log
@kinfo_file returns the socket buffer counts in uint64_ts, so we need to
update the printf format for them.  While here, delete a now unused variable.

problem pointed out by Scott McEachern (scott (at) blackstaff.ca)
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.21 2013/10/22 16:40:28 guenther Exp $	*/
d45 1
@


1.21
log
@- add UNIX-domain socket info to struct kinfo_file2
- convert netstat from kvm_getfiles() to kvm_getfile2() using that
- delete kvm_getfiles() and KERN_FILE as no longer used (bump libkvm's major)
- rename kvm_getfile2() to kvm_getfiles(), kinfo_file2 to kinfo_file
  and KERN_FILE2 to KERN_FILE.

ok deraadt@@, millert@@
ports scan sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.20 2013/08/18 16:32:24 guenther Exp $	*/
a61 1
	struct socket sock, *so = &sock;
d101 1
a101 1
	printf("%#*llx%s %-6.6s %6ld %6ld %#*llx%s %#*llx%s %#*llx%s %#*llx%s",
@


1.20
log
@Fix calls to printf-like functions which passed a non-fixed string
as the format and no variable args.
Replace "%#0.*X" with "%#.*X": the zero-fill flag is ignored/implied
on numeric conversions when a precision is specified.

ok jung@@ millert@@ krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.19 2013/04/23 23:32:46 deraadt Exp $	*/
a44 2
struct uio;
struct proc;
d46 1
d56 1
a56 5
static	void unixdomainpr(struct socket *, caddr_t, u_long);

static struct	file *file, *fileNFILE;
static int	fcnt;
extern	kvm_t *kvmd;
d59 1
a59 1
unixpr(u_long off, u_long pcbaddr)
d61 1
a61 1
	struct file *fp;
d63 1
a63 2
	char *filebuf;
	struct protosw *unixsw = (struct protosw *)off;
d65 2
a66 2
	filebuf = kvm_getfiles(kvmd, KERN_FILE, 0, &fcnt);
	if (filebuf == NULL) {
d70 5
a74 11
	file = (struct file *)(filebuf + sizeof(fp));
	fileNFILE = file + fcnt;
	for (fp = file; fp < fileNFILE; fp++) {
		if (fp->f_count == 0 || fp->f_type != DTYPE_SOCKET)
			continue;
		if (kread((u_long)fp->f_data, so, sizeof (*so)))
			continue;
		/* kludge */
		if (so->so_proto >= unixsw && so->so_proto <= unixsw + 2)
			if (so->so_pcb)
				unixdomainpr(so, fp->f_data, pcbaddr);
d78 1
a78 1
static	char *socktype[] =
d82 1
a82 1
unixdomainpr(struct socket *so, caddr_t soaddr, u_long pcbaddr)
a83 3
	struct unpcb unpcb, *unp = &unpcb;
	struct mbuf mbuf, *m;
	struct sockaddr_un *sa = NULL;
d87 1
a87 1
		if (pcbaddr == (u_long)soaddr)
a91 9
	if (kread((u_long)so->so_pcb, unp, sizeof (*unp)))
		return;
	if (unp->unp_addr) {
		m = &mbuf;
		if (kread((u_long)unp->unp_addr, m, sizeof (*m)))
			m = NULL;
		sa = (struct sockaddr_un *)(m->m_dat);
	} else
		m = NULL;
d100 11
a110 11
	printf("%*p %-6.6s %6ld %6ld %*p %*p %*p %*p",
	    PLEN, hideroot ? 0 : soaddr,
	    socktype[so->so_type], so->so_rcv.sb_cc, so->so_snd.sb_cc,
	    PLEN, hideroot ? 0 : unp->unp_vnode,
	    PLEN, hideroot ? 0 : unp->unp_conn,
	    PLEN, hideroot ? 0 : unp->unp_refs,
	    PLEN, hideroot ? 0 : unp->unp_nextref);
	if (m)
		printf(" %.*s",
		    (int)(m->m_len - (int)(sizeof(*sa) - sizeof(sa->sun_path))),
		    sa->sun_path);
@


1.19
log
@create a method to print the unp_ino (ino_t) properly once it becomes
bigger
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.18 2013/04/18 15:43:22 deraadt Exp $	*/
d162 1
a162 1
	p("%#0.8x", unp_flags, "\n ");
@


1.18
log
@improve time_t printing; ok claudio
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.17 2013/04/16 22:19:14 deraadt Exp $	*/
d152 1
d157 1
a157 1
	p("%u", unp_ino, "\n ");
@


1.17
log
@handle long long tv_sec; ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.16 2013/03/20 15:23:37 deraadt Exp $	*/
d150 2
a151 1
#define	p(fmt, cast, v, sep) printf(#v " " fmt sep, cast unp.v);
d156 1
a156 1
	p("%u", , unp_ino, "\n ");
d161 8
a168 8
	p("%#0.8x", , unp_flags, "\n ");
	p("%u", , unp_connid.uid, ", ");
	p("%u", , unp_connid.gid, ", ");
	p("%d", , unp_connid.pid, "\n ");
	p("%d", , unp_cc, ", ");
	p("%d", , unp_mbcnt, "\n ");
	p("%lld", (long long), unp_ctime.tv_sec, ", ");
	p("%ld", , unp_ctime.tv_nsec, "\n");
@


1.16
log
@As non-root, whenever netstat is about to print out a kernel pointer...
print 0x0 instead.  Hides a lot stuff people don't need to see.
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.15 2010/10/30 23:06:05 bluhm Exp $	*/
d150 1
a150 1
#define	p(fmt, v, sep) printf(#v " " fmt sep, unp.v);
d155 1
a155 1
	p("%u", unp_ino, "\n ");
d160 8
a167 8
	p("%#0.8x", unp_flags, "\n ");
	p("%u", unp_connid.uid, ", ");
	p("%u", unp_connid.gid, ", ");
	p("%d", unp_connid.pid, "\n ");
	p("%d", unp_cc, ", ");
	p("%d", unp_mbcnt, "\n ");
	p("%d", unp_ctime.tv_sec, ", ");
	p("%ld", unp_ctime.tv_nsec, "\n");
@


1.15
log
@Print socket structure internals when netstat -P pcbaddr is called
with -v.  Also netstat -P supports more than TCP now.
ok markus@@ jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.14 2010/04/28 18:22:11 jsg Exp $	*/
d125 6
a130 3
	    PLEN, soaddr, socktype[so->so_type], so->so_rcv.sb_cc,
	    so->so_snd.sb_cc, PLEN, unp->unp_vnode, PLEN, unp->unp_conn,
	    PLEN, unp->unp_refs, PLEN, unp->unp_nextref);
d151 4
a154 3
	printf("unpcb %#lx\n ", off);
	p("%p", unp_socket, "\n ");
	p("%p", unp_vnode, ", ");
d156 4
a159 4
	p("%p", unp_conn, ", ");
	p("%p", unp_refs, ", ");
	p("%p", unp_nextref, "\n ");
	p("%p", unp_addr, "\n ");
d169 1
@


1.14
log
@Rename nfiles so as not to collide with sys/file.h,
makes gcc4 happy.

ok deraadt@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.13 2007/12/19 01:47:00 deraadt Exp $	*/
d57 1
a57 1
static	void unixdomainpr(struct socket *, caddr_t);
d64 1
a64 1
unixpr(u_long off)
d86 1
a86 1
				unixdomainpr(so, fp->f_data);
d94 1
a94 1
unixdomainpr(struct socket *so, caddr_t soaddr)
d101 6
d133 32
@


1.13
log
@delete rcsid crud
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.12 2005/03/25 17:01:04 jaredy Exp $	*/
d60 1
a60 1
static int	nfiles;
d71 1
a71 1
	filebuf = kvm_getfiles(kvmd, KERN_FILE, 0, &nfiles);
d77 1
a77 1
	fileNFILE = file + nfiles;
@


1.12
log
@kill unneeded (char *) casts.  ok millert, otto
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.11 2004/03/13 22:02:13 deraadt Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "from: @@(#)unix.c	8.1 (Berkeley) 6/6/93";
#else
static char *rcsid = "$OpenBSD: unix.c,v 1.11 2004/03/13 22:02:13 deraadt Exp $";
#endif
#endif /* not lint */
@


1.11
log
@some NULL vs 0 and knf; parts from nimadeus@@pandora.be
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.10 2003/06/03 02:56:13 millert Exp $	*/
d37 1
a37 1
static char *rcsid = "$OpenBSD: unix.c,v 1.10 2003/06/03 02:56:13 millert Exp $";
d79 1
a79 1
	filebuf = (char *)kvm_getfiles(kvmd, KERN_FILE, 0, &nfiles);
d89 1
a89 1
		if (kread((u_long)fp->f_data, (char *)so, sizeof (*so)))
d109 1
a109 1
	if (kread((u_long)so->so_pcb, (char *)unp, sizeof (*unp)))
d113 1
a113 1
		if (kread((u_long)unp->unp_addr, (char *)m, sizeof (*m)))
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.9 2003/02/01 01:51:31 deraadt Exp $	*/
d37 1
a37 1
static char *rcsid = "$OpenBSD: unix.c,v 1.9 2003/02/01 01:51:31 deraadt Exp $";
d80 1
a80 1
	if (filebuf == 0) {
d114 1
a114 1
			m = (struct mbuf *)0;
d117 1
a117 1
		m = (struct mbuf *)0;
d120 1
a120 2
		printf(
"%-*.*s %-6.6s %-6.6s %-6.6s %*.*s %*.*s %*.*s %*.*s Addr\n",
@


1.9
log
@ansi
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.8 2002/02/16 21:27:50 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char *rcsid = "$OpenBSD: unix.c,v 1.8 2002/02/16 21:27:50 millert Exp $";
@


1.8
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.7 2001/11/19 19:02:15 mpech Exp $	*/
d41 1
a41 1
static char *rcsid = "$OpenBSD: unix.c,v 1.7 2001/11/19 19:02:15 mpech Exp $";
d76 1
a76 2
unixpr(off)
	u_long	off;
d106 1
a106 3
unixdomainpr(so, soaddr)
	struct socket *so;
	caddr_t soaddr;
@


1.7
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.6 1999/12/08 12:30:17 itojun Exp $	*/
d41 1
a41 1
static char *rcsid = "$OpenBSD: unix.c,v 1.6 1999/12/08 12:30:17 itojun Exp $";
d69 1
a69 1
static	void unixdomainpr __P((struct socket *, caddr_t));
@


1.6
log
@add IPv6 support from KAME.  cleanup type matches with printf() format.
KAME_SCOPEID should be enabled after KAME get{addr,name}info(3) merge.
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.5 1997/06/29 21:46:06 millert Exp $	*/
d41 1
a41 1
static char *rcsid = "$OpenBSD: unix.c,v 1.5 1997/06/29 21:46:06 millert Exp $";
d79 1
a79 1
	register struct file *fp;
d108 1
a108 1
	register struct socket *so;
@


1.5
log
@Use correct spacing on both 32bit and 64bit machines.
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.4 1997/06/29 20:52:42 millert Exp $	*/
d41 1
a41 1
static char *rcsid = "$OpenBSD: unix.c,v 1.4 1997/06/29 20:52:42 millert Exp $";
d113 1
a113 1
	struct sockaddr_un *sa;
d140 1
a140 1
		    m->m_len - (int)(sizeof(*sa) - sizeof(sa->sun_path)),
@


1.4
log
@Make fields line up nicely for 64-bit addresses.  Should probably #if
some things based on sizeof(long).
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.3 1997/06/29 20:18:04 millert Exp $	*/
d41 1
a41 1
static char *rcsid = "$OpenBSD: unix.c,v 1.3 1997/06/29 20:18:04 millert Exp $";
d63 1
d128 4
a131 3
"%-18.18s %-6.6s %-6.6s %-6.6s %18.18s %18.18s %18.18s %18.18s Addr\n",
		    "Address", "Type", "Recv-Q", "Send-Q",
		    "Inode", "Conn", "Refs", "Nextref");
d134 4
a137 4
	printf("%18p %-6.6s %6ld %6ld %18p %18p %18p %18p",
	    soaddr, socktype[so->so_type], so->so_rcv.sb_cc, so->so_snd.sb_cc,
	    unp->unp_vnode, unp->unp_conn,
	    unp->unp_refs, unp->unp_nextref);
@


1.3
log
@Mostly clean -Wall + 64bit issues.
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.2 1996/06/26 05:37:26 deraadt Exp $	*/
d41 1
a41 1
static char *rcsid = "$OpenBSD: unix.c,v 1.2 1996/06/26 05:37:26 deraadt Exp $";
d127 1
a127 1
"%-8.8s %-6.6s %-6.6s %-6.6s %8.8s %8.8s %8.8s %8.8s Addr\n",
d132 1
a132 1
	printf("%8p %-6.6s %6ld %6ld %8p %8p %8p %8p",
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: unix.c,v 1.13 1995/10/03 21:42:48 thorpej Exp $	*/
d41 1
a41 1
static char *rcsid = "$OpenBSD: unix.c,v 1.13 1995/10/03 21:42:48 thorpej Exp $";
d132 1
a132 1
	printf("%8x %-6.6s %6d %6d %8x %8x %8x %8x",
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char *rcsid = "$NetBSD: unix.c,v 1.13 1995/10/03 21:42:48 thorpej Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
