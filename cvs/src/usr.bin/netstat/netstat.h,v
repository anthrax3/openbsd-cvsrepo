head	1.71;
access;
symbols
	OPENBSD_6_2:1.71.0.2
	OPENBSD_6_2_BASE:1.71
	OPENBSD_6_1:1.70.0.6
	OPENBSD_6_1_BASE:1.70
	OPENBSD_6_0:1.70.0.2
	OPENBSD_6_0_BASE:1.70
	OPENBSD_5_9:1.69.0.2
	OPENBSD_5_9_BASE:1.69
	OPENBSD_5_8:1.68.0.6
	OPENBSD_5_8_BASE:1.68
	OPENBSD_5_7:1.68.0.2
	OPENBSD_5_7_BASE:1.68
	OPENBSD_5_6:1.66.0.6
	OPENBSD_5_6_BASE:1.66
	OPENBSD_5_5:1.66.0.4
	OPENBSD_5_5_BASE:1.66
	OPENBSD_5_4:1.65.0.2
	OPENBSD_5_4_BASE:1.65
	OPENBSD_5_3:1.64.0.2
	OPENBSD_5_3_BASE:1.64
	OPENBSD_5_2:1.62.0.4
	OPENBSD_5_2_BASE:1.62
	OPENBSD_5_1_BASE:1.62
	OPENBSD_5_1:1.62.0.2
	OPENBSD_5_0:1.60.0.2
	OPENBSD_5_0_BASE:1.60
	OPENBSD_4_9:1.58.0.2
	OPENBSD_4_9_BASE:1.58
	OPENBSD_4_8:1.56.0.2
	OPENBSD_4_8_BASE:1.56
	OPENBSD_4_7:1.53.0.2
	OPENBSD_4_7_BASE:1.53
	OPENBSD_4_6:1.50.0.4
	OPENBSD_4_6_BASE:1.50
	OPENBSD_4_5:1.49.0.2
	OPENBSD_4_5_BASE:1.49
	OPENBSD_4_4:1.47.0.4
	OPENBSD_4_4_BASE:1.47
	OPENBSD_4_3:1.47.0.2
	OPENBSD_4_3_BASE:1.47
	OPENBSD_4_2:1.43.0.2
	OPENBSD_4_2_BASE:1.43
	OPENBSD_4_1:1.39.0.4
	OPENBSD_4_1_BASE:1.39
	OPENBSD_4_0:1.39.0.2
	OPENBSD_4_0_BASE:1.39
	OPENBSD_3_9:1.35.0.4
	OPENBSD_3_9_BASE:1.35
	OPENBSD_3_8:1.35.0.2
	OPENBSD_3_8_BASE:1.35
	OPENBSD_3_7:1.31.0.2
	OPENBSD_3_7_BASE:1.31
	OPENBSD_3_6:1.28.0.2
	OPENBSD_3_6_BASE:1.28
	OPENBSD_3_5:1.27.0.2
	OPENBSD_3_5_BASE:1.27
	OPENBSD_3_4:1.25.0.2
	OPENBSD_3_4_BASE:1.25
	OPENBSD_3_3:1.22.0.4
	OPENBSD_3_3_BASE:1.22
	OPENBSD_3_2:1.22.0.2
	OPENBSD_3_2_BASE:1.22
	OPENBSD_3_1:1.21.0.2
	OPENBSD_3_1_BASE:1.21
	OPENBSD_3_0:1.19.0.2
	OPENBSD_3_0_BASE:1.19
	OPENBSD_2_9_BASE:1.16
	OPENBSD_2_9:1.16.0.2
	OPENBSD_2_8:1.15.0.2
	OPENBSD_2_8_BASE:1.15
	OPENBSD_2_7:1.14.0.2
	OPENBSD_2_7_BASE:1.14
	OPENBSD_2_6:1.11.0.8
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.11.0.6
	OPENBSD_2_5_BASE:1.11
	OPENBSD_2_4:1.11.0.4
	OPENBSD_2_4_BASE:1.11
	OPENBSD_2_3:1.11.0.2
	OPENBSD_2_3_BASE:1.11
	OPENBSD_2_2:1.10.0.2
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.71
date	2017.08.12.03.21.02;	author benno;	state Exp;
branches;
next	1.70;
commitid	fnpEGPaVcvCK3SUD;

1.70
date	2016.07.20.19.57.54;	author bluhm;	state Exp;
branches;
next	1.69;
commitid	iB1JO3v9iwYOTdxI;

1.69
date	2015.09.11.19.35.37;	author mpi;	state Exp;
branches;
next	1.68;
commitid	VObusOUb029PxhGP;

1.68
date	2015.02.12.01.49.02;	author claudio;	state Exp;
branches;
next	1.67;
commitid	EszVZ4RtthRFw1UZ;

1.67
date	2015.02.09.12.25.03;	author claudio;	state Exp;
branches;
next	1.66;
commitid	83gy3puTH63xWYWh;

1.66
date	2013.10.22.16.40.28;	author guenther;	state Exp;
branches;
next	1.65;

1.65
date	2013.03.20.15.23.37;	author deraadt;	state Exp;
branches;
next	1.64;

1.64
date	2012.12.05.23.20.25;	author deraadt;	state Exp;
branches;
next	1.63;

1.63
date	2012.08.22.00.11.57;	author tedu;	state Exp;
branches;
next	1.62;

1.62
date	2011.11.01.17.30.04;	author mikeb;	state Exp;
branches;
next	1.61;

1.61
date	2011.11.01.00.00.01;	author mikeb;	state Exp;
branches;
next	1.60;

1.60
date	2011.07.09.00.45.40;	author henning;	state Exp;
branches;
next	1.59;

1.59
date	2011.03.15.13.10.31;	author jsing;	state Exp;
branches;
next	1.58;

1.58
date	2010.10.30.23.06.05;	author bluhm;	state Exp;
branches;
next	1.57;

1.57
date	2010.10.11.12.33.36;	author claudio;	state Exp;
branches;
next	1.56;

1.56
date	2010.06.29.03.09.29;	author blambert;	state Exp;
branches;
next	1.55;

1.55
date	2010.05.23.10.12.42;	author chl;	state Exp;
branches;
next	1.54;

1.54
date	2010.03.23.16.26.01;	author claudio;	state Exp;
branches;
next	1.53;

1.53
date	2009.11.22.22.22.14;	author tedu;	state Exp;
branches;
next	1.52;

1.52
date	2009.11.05.20.50.14;	author michele;	state Exp;
branches;
next	1.51;

1.51
date	2009.10.04.16.08.37;	author michele;	state Exp;
branches;
next	1.50;

1.50
date	2009.05.07.15.51.53;	author claudio;	state Exp;
branches;
next	1.49;

1.49
date	2009.01.27.13.49.21;	author claudio;	state Exp;
branches;
next	1.48;

1.48
date	2008.09.16.15.48.13;	author gollo;	state Exp;
branches;
next	1.47;

1.47
date	2008.01.03.21.01.40;	author claudio;	state Exp;
branches;
next	1.46;

1.46
date	2007.12.19.08.49.23;	author claudio;	state Exp;
branches;
next	1.45;

1.45
date	2007.12.14.18.35.46;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	2007.12.11.20.14.45;	author deraadt;	state Exp;
branches;
next	1.43;

1.43
date	2007.07.25.11.50.47;	author claudio;	state Exp;
branches;
next	1.42;

1.42
date	2007.06.19.05.30.19;	author ray;	state Exp;
branches;
next	1.41;

1.41
date	2007.06.04.12.20.24;	author henning;	state Exp;
branches;
next	1.40;

1.40
date	2007.03.23.10.59.38;	author pyr;	state Exp;
branches;
next	1.39;

1.39
date	2006.08.29.21.51.13;	author claudio;	state Exp;
branches;
next	1.38;

1.38
date	2006.07.05.00.40.22;	author brad;	state Exp;
branches;
next	1.37;

1.37
date	2006.05.27.19.24.01;	author claudio;	state Exp;
branches;
next	1.36;

1.36
date	2006.05.27.19.16.37;	author claudio;	state Exp;
branches;
next	1.35;

1.35
date	2005.06.15.10.53.23;	author markus;	state Exp;
branches;
next	1.34;

1.34
date	2005.04.12.14.11.49;	author reyk;	state Exp;
branches;
next	1.33;

1.33
date	2005.03.30.08.23.47;	author jaredy;	state Exp;
branches;
next	1.32;

1.32
date	2005.03.25.17.01.04;	author jaredy;	state Exp;
branches;
next	1.31;

1.31
date	2005.02.10.14.25.08;	author itojun;	state Exp;
branches;
next	1.30;

1.30
date	2005.02.10.05.28.58;	author itojun;	state Exp;
branches;
next	1.29;

1.29
date	2005.01.14.15.00.44;	author mcbride;	state Exp;
branches;
next	1.28;

1.28
date	2004.06.06.16.55.31;	author cedric;	state Exp;
branches;
next	1.27;

1.27
date	2003.12.15.07.11.31;	author mcbride;	state Exp;
branches;
next	1.26;

1.26
date	2003.10.17.21.04.59;	author mcbride;	state Exp;
branches;
next	1.25;

1.25
date	2003.06.26.21.59.11;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2003.06.25.21.18.55;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2003.06.03.02.56.13;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	2002.06.07.21.58.38;	author itojun;	state Exp;
branches;
next	1.21;

1.21
date	2002.02.17.19.42.31;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2002.02.16.21.27.50;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2001.08.26.09.42.04;	author brian;	state Exp;
branches;
next	1.18;

1.18
date	2001.07.05.08.47.44;	author jjbg;	state Exp;
branches;
next	1.17;

1.17
date	2001.05.18.02.41.38;	author provos;	state Exp;
branches;
next	1.16;

1.16
date	2000.12.13.15.52.58;	author camield;	state Exp;
branches;
next	1.15;

1.15
date	2000.06.30.20.04.01;	author itojun;	state Exp;
branches;
next	1.14;

1.14
date	2000.01.21.03.24.06;	author angelos;	state Exp;
branches;
next	1.13;

1.13
date	99.12.08.12.30.17;	author itojun;	state Exp;
branches;
next	1.12;

1.12
date	99.10.29.03.26.40;	author angelos;	state Exp;
branches;
next	1.11;

1.11
date	98.02.26.10.06.11;	author peter;	state Exp;
branches;
next	1.10;

1.10
date	97.07.23.04.38.34;	author denny;	state Exp;
branches;
next	1.9;

1.9
date	97.07.04.04.31.32;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.06.29.21.46.04;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.06.29.20.18.02;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.06.18.01.52.27;	author angelos;	state Exp;
branches;
next	1.5;

1.5
date	97.02.21.09.09.53;	author angelos;	state Exp;
branches;
next	1.4;

1.4
date	96.08.16.09.29.34;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.37.24;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.05.10.13.02.36;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.51;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.51;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.71
log
@add option -l to show only listening sockets (for tcp)
feedback and ok awhile ago bluhm@@ job@@
@
text
@/*	$OpenBSD: netstat.h,v 1.70 2016/07/20 19:57:54 bluhm Exp $	*/
/*	$NetBSD: netstat.h,v 1.6 1996/05/07 02:55:05 thorpej Exp $	*/

/*
 * Copyright (c) 1992, 1993
 *	Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)netstat.h	8.2 (Berkeley) 1/4/94
 */

#include <kvm.h>

/* What is the max length of a pointer printed with %p (including 0x)? */
#define PLEN	(LONG_BIT / 4 + 2)

/* a bit of magic to print addresses as they should */
#define	FAKE_PTR(p)	(PLEN - ((p) ? 0 : 2)), p, ((p) ? "" : "x0")

int	Aflag;		/* show addresses of protocol control block */
int	aflag;		/* show all sockets (including servers) */
int	Bflag;		/* show TCP send and receive buffer sizes */
int	bflag;		/* show bytes instead of packets */
int	dflag;		/* show i/f dropped packets */
int	Fflag;		/* show routes whose gateways are in specified AF */
int	gflag;		/* show group (multicast) routing or stats */
int	hflag;		/* print human numbers */
int	iflag;		/* show interfaces */
int	lflag;		/* show only listening sockets (only servers), */
			/* with -g, show routing table with use and ref */
int	mflag;		/* show memory stats */
int	nflag;		/* show addresses numerically */
int	pflag;		/* show given protocol */
int	Pflag;		/* show given PCB */
int	qflag;		/* only display non-zero values for output */
int	rflag;		/* show routing tables (or routing stats) */
int	sflag;		/* show protocol statistics */
int	tflag;		/* show i/f watchdog timers */
int	vflag;		/* be verbose */
int	Wflag;		/* show net80211 protocol statistics */

int	interval;	/* repeat interval for i/f stats */

char	*interface;	/* desired i/f for stats, or NULL for all i/fs */

int	af;		/* address family */

extern	char *__progname; /* program name, from crt0.o */

int	kread(u_long addr, void *buf, int size);
char	*plural(u_int64_t);
char	*plurales(u_int64_t);
char	*pluralys(u_int64_t);

void	protopr(kvm_t *, u_long, u_int, int);

struct kinfo_file;
void	netdomainpr(struct kinfo_file *, int);
void	unixdomainpr(struct kinfo_file *);

void	socket_dump(u_long);
void	unpcb_dump(u_long);

void	tcp_stats(char *);
void	udp_stats(char *);
void	ip_stats(char *);
void	div_stats(char *);
void	icmp_stats(char *);
void	igmp_stats(char *);
void	pim_stats(char *);
void	ah_stats(char *);
void	esp_stats(char *);
void	ipip_stats(char *);
void	carp_stats (char *);
void	pfsync_stats (char *);
void	pflow_stats (char *);
void	etherip_stats(char *);
void	ipcomp_stats(char *);

void	net80211_ifstats(char *);

void	mbpr(void);

void	hostpr(u_long, u_long);
void	impstats(u_long, u_long);

void	rt_stats(void);
void	pr_rthdr(int, int);
void	pr_encaphdr(void);
void	pr_family(int);

void	ip6_stats(char *);
void	icmp6_stats(char *);
void	pim6_stats(char *);
void	div6_stats(char *);
void	rip6_stats(char *);
void	mroute6pr(void);
void	mrt6_stats(void);

struct in6_addr;
struct sockaddr_in6;
void	inet6print(struct in6_addr *, int, const char *);
char	*routename6(struct sockaddr_in6 *);
char	*netname6(struct sockaddr_in6 *, struct sockaddr_in6 *);

size_t	get_sysctl(const int *, u_int, char **);
void	p_rttables(int, u_int);
void	p_flags(int, char *);
void	p_addr(struct sockaddr *, struct sockaddr *, int);
void	p_gwaddr(struct sockaddr *, int);
void	p_sockaddr(struct sockaddr *, struct sockaddr *, int, int);
char	*routename(struct sockaddr *);
char	*routename4(in_addr_t);
char	*netname(struct sockaddr *, struct sockaddr *);
char	*netname4(in_addr_t, in_addr_t);
char	*mpls_op(u_int32_t);
void	routepr(u_long, u_long, u_long, u_long, u_int);

void	nsprotopr(u_long, char *);

void	intpr(int, int);

void	mroutepr(void);
void	mrt_stats(void);
@


1.70
log
@To tune the TCP SYN cache we need more information.  Print the
relevant counters with netstat -s -p tcp.
OK henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.69 2015/09/11 19:35:37 mpi Exp $	*/
d52 2
a53 1
int	lflag;		/* show routing table with use and ref */
@


1.69
log
@Remove never called functions to dump per-ifp IPv6 statistics now that
the kernel buffers are gone.

ok claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.68 2015/02/12 01:49:02 claudio Exp $	*/
d75 1
@


1.68
log
@Switch the printing of open sockets from ugly KVM internals to use
kvm_getfiles. This allows to run netstat without any extra privileges
and removes another setgid program from base..
There is still kvm reader code in there which is used for debugging
purposes (crashdump). netstat should still behave mostly the same.
deraadt@@ and sthen@@ agree that it is time to get this puppy in.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.67 2015/02/09 12:25:03 claudio Exp $	*/
a113 1
void	ip6_ifstats(char *);
a114 1
void	icmp6_ifstats(char *);
@


1.67
log
@Get rid of another KVM reader and convert the multicast output to use
the new sysctls. Looks good deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.66 2013/10/22 16:40:28 guenther Exp $	*/
d40 3
a71 2
extern int hideroot;

d76 9
a84 1
void	protopr(u_long, char *, int, u_int, u_long);
a102 3
void	socket_dump(u_long);
void	unpcb_dump(u_long);

a112 2
struct in6_addr;
struct sockaddr_in6;
d122 4
a144 2

void	unixpr(kvm_t *, u_long);
@


1.66
log
@- add UNIX-domain socket info to struct kinfo_file2
- convert netstat from kvm_getfiles() to kvm_getfile2() using that
- delete kvm_getfiles() and KERN_FILE as no longer used (bump libkvm's major)
- rename kvm_getfile2() to kvm_getfiles(), kinfo_file2 to kinfo_file
  and KERN_FILE2 to KERN_FILE.

ok deraadt@@, millert@@
ports scan sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.65 2013/03/20 15:23:37 deraadt Exp $	*/
d116 1
a116 1
void	mroute6pr(u_long, u_long);
d121 1
d140 1
a140 1
void	mroutepr(u_long, u_long, u_long);
@


1.65
log
@As non-root, whenever netstat is about to print out a kernel pointer...
print 0x0 instead.  Hides a lot stuff people don't need to see.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.64 2012/12/05 23:20:25 deraadt Exp $	*/
d35 2
d137 1
a137 1
void	unixpr(u_long, u_long);
@


1.64
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.63 2012/08/22 00:11:57 tedu Exp $	*/
d67 1
@


1.63
log
@-h flag to print human numbers in conjunction with -w -b
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.62 2011/11/01 17:30:04 mikeb Exp $	*/
a33 2

#include <sys/cdefs.h>
@


1.62
log
@Do some cleanup and improve the manpage. From Andreas Bartelt; ok henning, jmc
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.61 2011/11/01 00:00:01 mikeb Exp $	*/
d47 1
@


1.61
log
@List sockets existing only in the specified or current routing domain.
Prompted by the mail from Andreas Bartelt, tested by Andreas and me.
ok henning
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.60 2011/07/09 00:45:40 henning Exp $	*/
d119 1
a119 1
void	p_rttables(int, u_int, int);
@


1.60
log
@rmove rotten netatalk bits
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.59 2011/03/15 13:10:31 jsing Exp $	*/
d73 1
a73 1
void	protopr(u_long, char *, int, u_long);
@


1.59
log
@Add a -B flag to netstat which displays buffer sizes for TCP sockets.

With feedback from bluhm@@

ok bluhm@@ sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.57 2010/10/11 12:33:36 claudio Exp $	*/
a138 4

void	atalkprotopr(u_long, char *, int, u_long);
void	ddp_stats(char *);
char	*atalk_print(const struct sockaddr *, int);
@


1.58
log
@Print socket structure internals when netstat -P pcbaddr is called
with -v.  Also netstat -P supports more than TCP now.
ok markus@@ jmc@@
@
text
@d42 1
@


1.57
log
@Do similar changes to netstat as done to route(8). Try to show the
most expected rtable when doing a netstat -rn.
OK henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.56 2010/06/29 03:09:29 blambert Exp $	*/
d72 1
a72 1
void	protopr(u_long, char *, int);
d91 2
a92 1
void	tcp_dump(u_long);
d134 1
a134 1
void	unixpr(u_long);
d139 1
a139 1
void	atalkprotopr(u_long, char *, int);
@


1.56
log
@Allow selecting both address family and protocol by passing the address family
directly to the appropriate print functions.

Found by jdixon@@, tested jdixon@@ and weerd@@, ok krw@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.55 2010/05/23 10:12:42 chl Exp $	*/
d117 1
a117 1
void	p_rttables(int, u_int);
@


1.55
log
@remove unused function

from tobias@@ (loooooong time ago)

ok henning@@ claudio@@ tobias@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.54 2010/03/23 16:26:01 claudio Exp $	*/
d72 1
a72 2
void	protopr(u_long, char *);
void	ip6protopr(u_long, char *);
a88 2
void	protopr(u_long, char *);

a104 1
void	ip6protopr(u_long, char *);
d138 1
a138 1
void	atalkprotopr(u_long, char *);
@


1.54
log
@Sync with show.c of route(8). OK michele@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.53 2009/11/22 22:22:14 tedu Exp $	*/
a144 1
char	*atalk_print2(const struct sockaddr *, const struct sockaddr *, int);
@


1.53
log
@don't repeat the banner if not a tty.
add a -c count option to netstat.
tweak spacing to not smear fields in vmstat.
ok deraadt sthen
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.52 2009/11/05 20:50:14 michele Exp $	*/
d130 1
@


1.52
log
@IPv6 support for divert sockets.

tested by phessler@@ pyr@@
ok claudio@@
"go ahead" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.51 2009/10/04 16:08:37 michele Exp $	*/
d134 1
a134 1
void	intpr(int);
@


1.51
log
@Add (again) support for divert sockets. They allow you to:

- queue packets from pf(4) to a userspace application
- reinject packets from the application into the kernel stack.

The divert socket can be bound to a special "divert port" and will
receive every packet diverted to that port by pf(4).

The pf syntax is pretty simple, e.g.:

pass on em0 inet proto tcp from any to any port 80 divert-packet port 1

A lot of discussion have happened since my last commit that resulted
in many changes and improvements.
I would *really* like to thank everyone who took part in the discussion
especially canacar@@ who spotted out which are the limitations of this approach.

OpenBSD divert(4) is meant to be compatible with software running on
top of FreeBSD's divert sockets even though they are pretty different and will
become even more with time.

discusses with many, but mainly reyk@@ canacar@@ deraadt@@ dlg@@ claudio@@ beck@@
tested by reyk@@ and myself
ok reyk@@ claudio@@ beck@@
manpage help and ok by jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.50 2009/05/07 15:51:53 claudio Exp $	*/
d114 1
@


1.50
log
@Make the kvm routing table code grok multiple routing tables and do not
default to table 0 by default. Makes debugging alternate tables possible.
OK jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.49 2009/01/27 13:49:21 claudio Exp $	*/
d77 1
@


1.49
log
@Fix some interger overflows when accounting the used mbuf memory percentage
and while there use a better type for the plural{,es}() functions.
OK henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.48 2008/09/16 15:48:13 gollo Exp $	*/
d128 1
a128 1
void	routepr(u_long, u_long, u_long, u_long);
@


1.48
log
@netstat statistics for pflow(4) via pseudo family

ok cluadio@@ henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.47 2008/01/03 21:01:40 claudio Exp $	*/
d69 2
a70 2
char	*plural(int);
char	*plurales(int);
@


1.47
log
@Make if.c kvm free by fetching the interface stats via sysctl like in systat
and ospfd. What is not yet covered is the -d and -t flags to show interface
queue drops and the if_timer.
OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.46 2007/12/19 08:49:23 claudio Exp $	*/
d85 1
@


1.46
log
@Remove the kvm code in rt_stats() and use the sysctl code all the time.
While there remove the ugly rflag checks and make it more consistent with
the rest of the code. Another step in making netstat setgid free.
OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.45 2007/12/14 18:35:46 deraadt Exp $	*/
d131 1
a131 1
void	intpr(int, u_long);
@


1.45
log
@remove 21 nlist variables, and instead use sysctl to query the kernel
turn on INET6 the default (remove the #ifdef's)
ok claudio reyk
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.44 2007/12/11 20:14:45 deraadt Exp $	*/
d99 1
a99 1
void	rt_stats(int, u_long);
@


1.44
log
@mbuf stats are always gotten via sysctl(), so remove old nlist stuff
ok claudio pyr
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.43 2007/07/25 11:50:47 claudio Exp $	*/
a72 1
#ifdef INET6
d74 14
a87 13
#endif
void	tcp_stats(u_long, char *);
void	udp_stats(u_long, char *);
void	ip_stats(u_long, char *);
void	icmp_stats(u_long, char *);
void	igmp_stats(u_long, char *);
void	pim_stats(u_long, char *);
void	ah_stats(u_long, char *);
void	esp_stats(u_long, char *);
void	ipip_stats(u_long, char *);
void	carp_stats (u_long, char *);
void	pfsync_stats (u_long, char *);
void	etherip_stats(u_long, char *);
a88 1
void	ipcomp_stats(u_long, char *);
a103 1
#ifdef INET6
d107 1
a107 1
void	ip6_stats(u_long, char *);
d109 1
a109 1
void	icmp6_stats(u_long, char *);
d111 4
a114 4
void	pim6_stats(u_long, char *);
void	rip6_stats(u_long, char *);
void	mroute6pr(u_long, u_long, u_long);
void	mrt6_stats(u_long, u_long);
a116 1
#endif /*INET6*/
a129 3
void	spp_stats(u_long, char *);
void	idp_stats(u_long, char *);
void	nserr_stats(u_long, char *);
d135 2
a136 11
void	esis_stats(u_long, char *);
void	clnp_stats(u_long, char *);
void	cltp_stats(u_long, char *);
void	iso_protopr(u_long, char *);
void	iso_protopr1(u_long, int);
void	tp_protopr(u_long, char *);
void	tp_inproto(u_long);
void	tp_stats(u_long, char *);

void	mroutepr(u_long, u_long, u_long, u_long);
void	mrt_stats(u_long, u_long);
d139 1
a139 1
void	ddp_stats(u_long, char *);
@


1.43
log
@Make it possible to show alternate routing tables in netstat. This mostly
comes from route(8) which already had the -T option.  OK henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.42 2007/06/19 05:30:19 ray Exp $	*/
d95 1
a95 1
void	mbpr(u_long, u_long, u_long);
@


1.42
log
@net80211_ifstats() is called in main.c but there was no prototype.

OK markus and itojun
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.41 2007/06/04 12:20:24 henning Exp $	*/
d121 1
a121 1
void	p_rttables(int);
@


1.41
log
@remove IPX support, agreed by many
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.40 2007/03/23 10:59:38 pyr Exp $	*/
d90 2
@


1.40
log
@Add a new flag -F to netstat restricting route display in conjuction
with -r to routes in the same address family as the destination.
ok henning@@, claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.39 2006/08/29 21:51:13 claudio Exp $	*/
a101 2
char	*ns_phost(struct sockaddr *);
char	*ipx_phost(struct sockaddr *);
a127 1
char	*ipx_print(struct sockaddr *);
a133 5

void	ipxprotopr(u_long, char *);
void	spx_stats(u_long, char *);
void	ipx_stats(u_long, char *);
void	ipxerr_stats(u_long, char *);
@


1.39
log
@Fix KVM snooping code of netstat that got broken by the multiple table
"support". This makes netstat -A work again. OK markus@@ henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.38 2006/07/05 00:40:22 brad Exp $	*/
d44 1
@


1.38
log
@remove duplicate prototype for the intpr function.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.37 2006/05/27 19:24:01 claudio Exp $	*/
d130 1
a130 1
void	routepr(u_long);
@


1.37
log
@Kill upHex and use %X instead. Crazy old code found by deraadt.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.36 2006/05/27 19:16:37 claudio Exp $	*/
a95 2

void	intpr(int, u_long);
@


1.36
log
@Moving netstat from kvm snooping to retrieving the routing tables via
sysctl. Most code is stolen from route -- which was stolen from netstat.
kvm snooping code is still in and useable. Put it in deraadt@@ henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.35 2005/06/15 10:53:23 markus Exp $	*/
a104 1
void	upHex(char *);
@


1.35
log
@add -P for dumping PCB infos, similar to netbsd; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.34 2005/04/12 14:11:49 reyk Exp $	*/
d99 2
a100 1
void	pr_rthdr(int);
a102 1
void	rt_stats(u_long);
d120 1
a120 1
char	*netname6(struct sockaddr_in6 *, struct in6_addr *);
d123 9
a131 3
char	*routename(in_addr_t);
char	*netname(in_addr_t, in_addr_t);
char	*ns_print(struct sockaddr *);
@


1.34
log
@add '-W interface' for 802.11 wireless statistics of the net80211 stack.

ok dlg@@ deraadt@@ jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.33 2005/03/30 08:23:47 jaredy Exp $	*/
d50 1
d89 2
@


1.33
log
@kill -S; ok henning
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.32 2005/03/25 17:01:04 jaredy Exp $	*/
d55 1
@


1.32
log
@kill unneeded (char *) casts.  ok millert, otto
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.31 2005/02/10 14:25:08 itojun Exp $	*/
a51 1
int	Sflag;		/* show source address in routing table */
@


1.31
log
@backout previous; i committed to wrong repository (i meant to commit kame)
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.29 2005/01/14 15:00:44 mcbride Exp $	*/
d66 1
a66 1
int	kread(u_long addr, char *buf, int size);
@


1.30
log
@dccp support
@
text
@a75 3
#ifdef DCCP
void	dccp_stats(u_long, char *);
#endif
@


1.29
log
@Allow netstat to print PIM statistics.

From Pavlin Radoslavov <pavlin@@icir.org>

ok deraadt@@ brad@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.28 2004/06/06 16:55:31 cedric Exp $	*/
d76 3
@


1.28
log
@Add new '-S' flag to display the source selector part of the routing table
entry. "netstat -nrSf inet". ok deraadt@@ mcbride@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.27 2003/12/15 07:11:31 mcbride Exp $	*/
d79 1
@


1.27
log
@Add initial support for pf state synchronization over the network.
Implemented as an in-kernel multicast IP protocol.

Turn it on like this:

# ifconfig pfsync0 up syncif fxp0

There is not yet any authentication on this protocol, so the syncif
must be on a trusted network. ie, a crossover cable between the two
firewalls.

NOTABLE CHANGES:
- A new index based on a unique (creatorid, stateid) tuple has been
  added to the state tree.
- Updates now appear on the pfsync(4) interface; multiple updates may
  be compressed into a single update.
- Applications which use bpf on pfsync(4) will need modification;
  packets on pfsync no longer contains regular pf_state structs,
  but pfsync_state structs which contain no pointers.

Much more to come.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.26 2003/10/17 21:04:59 mcbride Exp $	*/
d52 1
@


1.26
log
@Common Address Redundancy Protocol

Allows multiple hosts to share an IP address, providing high availability
and load balancing.

Based on code by mickey@@, with additional help from markus@@
and Marco_Pfatschbacher@@genua.de

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.25 2003/06/26 21:59:11 deraadt Exp $	*/
d82 1
@


1.25
log
@more proto fixes
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.24 2003/06/25 21:18:55 deraadt Exp $	*/
d81 1
@


1.24
log
@add proto
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.23 2003/06/03 02:56:13 millert Exp $	*/
d143 1
a143 1
void	tp_stats(caddr_t, caddr_t);
@


1.23
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.22 2002/06/07 21:58:38 itojun Exp $	*/
d93 1
a93 1
void	pr_encaphdr();
@


1.22
log
@print rip6stat
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.21 2002/02/17 19:42:31 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.21
log
@Manual cleanup of remaining userland __P use (excluding packages maintained outside the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.20 2002/02/16 21:27:50 millert Exp $	*/
d113 1
@


1.20
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.19 2001/08/26 09:42:04 brian Exp $	*/
d154 1
a154 2
char	*atalk_print2 __P((const struct sockaddr *,
		const struct sockaddr *, int));
@


1.19
log
@Add a -q to silence zero-output lines and fix some whitespace and text nits.

Submitted by:	Sam Smith <S@@mSmith.net>
Ok:		theo
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.18 2001/07/05 08:47:44 jjbg Exp $	*/
d69 3
a71 3
int	kread __P((u_long addr, char *buf, int size));
char	*plural __P((int));
char	*plurales __P((int));
d73 1
a73 1
void	protopr __P((u_long, char *));
d75 1
a75 1
void	ip6protopr __P((u_long, char *));
d77 11
a87 11
void	tcp_stats __P((u_long, char *));
void	udp_stats __P((u_long, char *));
void	ip_stats __P((u_long, char *));
void	icmp_stats __P((u_long, char *));
void	igmp_stats __P((u_long, char *));
void	ah_stats __P((u_long, char *));
void	esp_stats __P((u_long, char *));
void	ipip_stats __P((u_long, char *));
void	etherip_stats __P((u_long, char *));
void	protopr __P((u_long, char *));
void	ipcomp_stats __P((u_long, char *));
d91 2
a92 2
void	hostpr __P((u_long, u_long));
void	impstats __P((u_long, u_long));
d94 1
a94 1
void	intpr __P((int, u_long));
d96 7
a102 7
void	pr_rthdr __P((int));
void	pr_encaphdr __P(());
void	pr_family __P((int));
void	rt_stats __P((u_long));
char	*ns_phost __P((struct sockaddr *));
char	*ipx_phost __P((struct sockaddr *));
void	upHex __P((char *));
d107 10
a116 10
void	ip6protopr __P((u_long, char *));
void	ip6_stats __P((u_long, char *));
void	ip6_ifstats __P((char *));
void	icmp6_stats __P((u_long, char *));
void	icmp6_ifstats __P((char *));
void	pim6_stats __P((u_long, char *));
void	mroute6pr __P((u_long, u_long, u_long));
void	mrt6_stats __P((u_long, u_long));
char	*routename6 __P((struct sockaddr_in6 *));
char	*netname6 __P((struct sockaddr_in6 *, struct in6_addr *));
d119 35
a153 35
char	*routename __P((in_addr_t));
char	*netname __P((in_addr_t, in_addr_t));
char	*ns_print __P((struct sockaddr *));
char	*ipx_print __P((struct sockaddr *));
void	routepr __P((u_long));

void	nsprotopr __P((u_long, char *));
void	spp_stats __P((u_long, char *));
void	idp_stats __P((u_long, char *));
void	nserr_stats __P((u_long, char *));

void	ipxprotopr __P((u_long, char *));
void	spx_stats __P((u_long, char *));
void	ipx_stats __P((u_long, char *));
void	ipxerr_stats __P((u_long, char *));

void	intpr __P((int, u_long));

void	unixpr __P((u_long));

void	esis_stats __P((u_long, char *));
void	clnp_stats __P((u_long, char *));
void	cltp_stats __P((u_long, char *));
void	iso_protopr __P((u_long, char *));
void	iso_protopr1 __P((u_long, int));
void	tp_protopr __P((u_long, char *));
void	tp_inproto __P((u_long));
void	tp_stats __P((caddr_t, caddr_t));

void	mroutepr __P((u_long, u_long, u_long, u_long));
void	mrt_stats __P((u_long, u_long));

void	atalkprotopr __P((u_long, char *));
void	ddp_stats __P((u_long, char *));
char	*atalk_print __P((const struct sockaddr *, int));
@


1.18
log
@IPComp support. angelos@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.17 2001/05/18 02:41:38 provos Exp $	*/
d54 1
@


1.17
log
@adapt to use pool
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.16 2000/12/13 15:52:58 camield Exp $	*/
d86 1
@


1.16
log
@Bytecounter stats. (-b switch)
From NetBSD. ok itojun@@
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.15 2000/06/30 20:04:01 itojun Exp $	*/
d87 1
a87 1
void	mbpr(u_long);
@


1.15
log
@split netstat -an -f inet and netstat -an -f inet6, for consistency.
Suggested by: fgs
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.14 2000/01/21 03:24:06 angelos Exp $	*/
d46 1
@


1.14
log
@ip4 -> ipip
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.13 1999/12/08 12:30:17 itojun Exp $	*/
d72 3
@


1.13
log
@add IPv6 support from KAME.  cleanup type matches with printf() format.
KAME_SCOPEID should be enabled after KAME get{addr,name}info(3) merge.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.12 1999/10/29 03:26:40 angelos Exp $	*/
d79 1
a79 1
void	ip4_stats __P((u_long, char *));
@


1.12
log
@etherip statistics
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.11 1998/02/26 10:06:11 peter Exp $	*/
d49 1
d90 1
a90 1
void	pr_rthdr __P(());
d97 15
@


1.11
log
@* netstat -r [-n] now prints netmasks for network routes (in XXX/24 format).

* beginnings of a -v (verbose) option.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.10 1997/07/23 04:38:34 denny Exp $	*/
d79 1
@


1.10
log
@Add AppleTalk support. TODO: route.c does not handle netranges.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.9 1997/07/04 04:31:32 millert Exp $	*/
d55 1
@


1.9
log
@Base PLEN on the value of LONG_BIT instead of assuming based
on MAX size of long and int.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.8 1997/06/29 21:46:04 millert Exp $	*/
d126 6
@


1.8
log
@Use correct spacing on both 32bit and 64bit machines.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.7 1997/06/29 20:18:02 millert Exp $	*/
d41 2
a42 6
/* What is the max length of a pointer printed with %p? */
#if (UINT_MAX == ULONG_MAX)
#define PLEN	10
#else
#define PLEN	18
#endif
@


1.7
log
@Mostly clean -Wall + 64bit issues.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.6 1997/06/18 01:52:27 angelos Exp $	*/
d40 7
@


1.6
log
@Be a bit more verbose for AF_ENCAP "routing" entries.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.5 1997/02/21 09:09:53 angelos Exp $	*/
d92 2
a93 2
char	*routename __P((u_int32_t));
char	*netname __P((u_int32_t, u_int32_t));
@


1.5
log
@netstat now understands SIPP-AH/SIPP-ESP (IPsec) and ENCAP protocols.
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.3 1996/06/26 05:37:24 deraadt Exp $	*/
d85 1
@


1.4
log
@ipx.
@
text
@d72 3
@


1.3
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: netstat.h,v 1.6 1996/05/07 02:55:05 thorpej Exp $	*/
d85 1
d91 1
d98 5
@


1.2
log
@if_name/if_unit -> if_xname/if_softc
network list is a TAILQ
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: netstat.h,v 1.5 1995/10/03 21:42:45 thorpej Exp $	*/
a54 1
int	unit;		/* unit number for above */
d58 1
a58 1
char	*prog;		/* program name */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

