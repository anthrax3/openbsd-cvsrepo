head	1.22;
access;
symbols
	OPENBSD_6_0:1.22.0.4
	OPENBSD_6_0_BASE:1.22
	OPENBSD_5_9:1.22.0.2
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.21.0.10
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.2
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.21.0.6
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.4
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.20.0.16
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.14
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.12
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.10
	OPENBSD_5_0:1.20.0.8
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.6
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.4
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.19.0.26
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.22
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.20
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.18
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.16
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.19.0.14
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.19.0.12
	OPENBSD_4_0_BASE:1.19
	OPENBSD_3_9:1.19.0.10
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.19.0.8
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.19.0.6
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.19.0.4
	OPENBSD_3_6_BASE:1.19
	OPENBSD_3_5:1.19.0.2
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	OPENBSD_3_3:1.15.0.4
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.15.0.2
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.11.0.8
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.6
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.4
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.10.0.6
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.10.0.4
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.10.0.2
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.22
date	2016.02.01.07.29.25;	author mestre;	state Exp;
branches;
next	1.21;
commitid	Pn9SmnrokNcgT1A4;

1.21
date	2013.12.11.14.28.20;	author naddy;	state Exp;
branches;
next	1.20;

1.20
date	2009.10.27.23.59.44;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2004.03.02.21.04.42;	author tedu;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.10.00.06.51;	author david;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.10.22.20.52;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.03.02.56.17;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2002.06.21.06.16.44;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2002.06.20.19.25.55;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.20.10.18.29;	author form;	state Exp;
branches;
next	1.12;

1.12
date	2002.06.20.06.13.56;	author form;	state Exp;
branches;
next	1.11;

1.11
date	2000.06.30.16.00.21;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	99.03.23.17.00.38;	author millert;	state Exp;
branches
	1.10.6.1;
next	1.9;

1.9
date	99.03.23.02.19.32;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	99.03.03.20.43.30;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	98.12.20.23.54.08;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.08.31.08.00.46;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.08.18.04.02.14;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.04.28.22.13.26;	author pjanzen;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.40.22;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.21.41.25;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.12;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.12;	author deraadt;	state Exp;
branches;
next	;

1.10.6.1
date	2000.10.06.21.16.16;	author jason;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Remove unused headers and sort the remaining
Remove lint-style comments
Swap hardcoded string on usage() for __progname

OK tb@@
@
text
@/*	$OpenBSD: init_disp.c,v 1.21 2013/12/11 14:28:20 naddy Exp $	*/
/*	$NetBSD: init_disp.c,v 1.6 1994/12/09 02:14:17 jtc Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Initialization code for the display package,
 * as well as the signal handling routines.
 */

#include <sys/ioctl.h>

#include <err.h>
#include <stdlib.h>
#include <termios.h>
#include <unistd.h>

#include "talk.h"

/*
 * Set up curses, catch the appropriate signals,
 * and build the various windows.
 */
void
init_display(void)
{
	struct sigaction sa;

	if (initscr() == NULL)
		errx(1, "Terminal type unset or lacking necessary features.");
	(void) sigaction(SIGTSTP, NULL, &sa);
	sigaddset(&sa.sa_mask, SIGALRM);
	(void) sigaction(SIGTSTP, &sa, NULL);
	curses_initialized = 1;
	clear();
	refresh();
	noecho();
	cbreak();
	signal(SIGINT, sig_sent);
	signal(SIGPIPE, sig_sent);
	signal(SIGWINCH, sig_winch);
	/* curses takes care of ^Z */
	my_win.x_nlines = LINES / 2;
	my_win.x_ncols = COLS;
	my_win.x_win = newwin(my_win.x_nlines, my_win.x_ncols, 0, 0);
	scrollok(my_win.x_win, smooth_scroll);
	wclear(my_win.x_win);

	his_win.x_nlines = LINES / 2 - 1;
	his_win.x_ncols = COLS;
	his_win.x_win = newwin(his_win.x_nlines, his_win.x_ncols,
	    my_win.x_nlines+1, 0);
	scrollok(his_win.x_win, smooth_scroll);
	wclear(his_win.x_win);

	line_win = newwin(1, COLS, my_win.x_nlines, 0);
#if defined(NCURSES_VERSION) || defined(whline)
	whline(line_win, '-', COLS);
#else
	box(line_win, '-', '-');
#endif
	wrefresh(line_win);
	/* let them know we are working on it */
	current_state = "No connection yet";
}

/*
 * Trade edit characters with the other talk. By agreement
 * the first three characters each talk transmits after
 * connection are the three edit characters.
 */
void
set_edit_chars(void)
{
	u_char buf[3];
	int cc;
	struct termios tty;
	
	tcgetattr(STDIN_FILENO, &tty);
	buf[0] = my_win.cerase = (tty.c_cc[VERASE] == (u_char)_POSIX_VDISABLE)
	    ? CERASE : tty.c_cc[VERASE];
	buf[1] = my_win.kill = (tty.c_cc[VKILL] == (u_char)_POSIX_VDISABLE)
	    ? CKILL : tty.c_cc[VKILL];
	buf[2] = my_win.werase = (tty.c_cc[VWERASE] == (u_char)_POSIX_VDISABLE)
	    ? CWERASE : tty.c_cc[VWERASE];
	cc = write(sockt, buf, sizeof(buf));
	if (cc != sizeof(buf) )
		quit("Lost the connection", 1);
	cc = read(sockt, buf, sizeof(buf));
	if (cc != sizeof(buf) )
		quit("Lost the connection", 1);
	his_win.cerase = buf[0];
	his_win.kill = buf[1];
	his_win.werase = buf[2];
}

void
sig_sent(int dummy)
{

	quit("Connection closing.  Exiting", 0);
}

void
sig_winch(int dummy)
{

	gotwinch = 1;
}

/*
 * All done talking...hang up the phone and reset terminal thingy's
 */
void
quit(char *warning, int do_perror)
{

	if (curses_initialized) {
		wmove(his_win.x_win, his_win.x_nlines-1, 0);
		wclrtoeol(his_win.x_win);
		wrefresh(his_win.x_win);
		endwin();
	}
	if (invitation_waiting)
		send_delete();
	if (warning) {
		if (do_perror)
			warn("%s", warning);
		else
			warnx("%s", warning);
	}
	exit(0);
}

/*
 * If we get SIGWINCH, recompute both window sizes and refresh things.
 */
void
resize_display(void)
{
	struct winsize ws;

	if (ioctl(STDIN_FILENO, TIOCGWINSZ, &ws) < 0 ||
	    (ws.ws_row == LINES && ws.ws_col == COLS))
		return;

	/* Update curses' internal state with new window size. */
	resizeterm(ws.ws_row, ws.ws_col);

	/*
	 * Resize each window but wait to refresh the screen until
	 * everything has been drawn so the cursor is in the right spot.
	 */
	my_win.x_nlines = LINES / 2;
	my_win.x_ncols = COLS;
	wresize(my_win.x_win, my_win.x_nlines, my_win.x_ncols);
	mvwin(my_win.x_win, 0, 0);
	clearok(my_win.x_win, TRUE);

	his_win.x_nlines = LINES / 2 - 1;
	his_win.x_ncols = COLS;
	wresize(his_win.x_win, his_win.x_nlines, his_win.x_ncols);
	mvwin(his_win.x_win, my_win.x_nlines + 1, 0);
	clearok(his_win.x_win, TRUE);

	wresize(line_win, 1, COLS);
	mvwin(line_win, my_win.x_nlines, 0);
#if defined(NCURSES_VERSION) || defined(whline)
	whline(line_win, '-', COLS);
#else
	wmove(line_win, my_win.x_nlines, 0);
	box(line_win, '-', '-');
#endif

	/* Now redraw the screen. */
	wrefresh(his_win.x_win);
	wrefresh(line_win);
	wrefresh(my_win.x_win);
}
@


1.21
log
@remove unused include dating from the pre-termios code and accidentally
reintroduced with the 4.4lite merge 19 years ago
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.20 2009/10/27 23:59:44 deraadt Exp $	*/
a37 1
#include "talk.h"
d39 1
d44 2
@


1.20
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.19 2004/03/02 21:04:42 tedu Exp $	*/
a39 1
#include <sys/ioctl_compat.h>
@


1.19
log
@use socklen_t and better socket() checks.  from Andrey Matveev
-Wall for good measure
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.18 2003/07/10 00:06:51 david Exp $	*/
a31 7

#ifndef lint
#if 0
static char sccsid[] = "@@(#)init_disp.c	8.2 (Berkeley) 2/16/94";
#endif
static const char rcsid[] = "$OpenBSD: init_disp.c,v 1.18 2003/07/10 00:06:51 david Exp $";
#endif /* not lint */
@


1.18
log
@add missing includes
ok deraadt@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.17 2003/06/10 22:20:52 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.17 2003/06/10 22:20:52 deraadt Exp $";
@


1.17
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.16 2003/06/03 02:56:17 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.16 2003/06/03 02:56:17 millert Exp $";
d49 1
@


1.16
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.15 2002/06/21 06:16:44 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.15 2002/06/21 06:16:44 millert Exp $";
d57 1
a57 1
init_display()
d105 1
a105 1
set_edit_chars()
d130 1
a130 2
sig_sent(dummy)
	int dummy;
d137 1
a137 2
sig_winch(dummy)
	int dummy;
d147 1
a147 3
quit(warning, do_perror)
	char *warning;
	int do_perror;
d171 1
a171 1
resize_display()
@


1.15
log
@o Resize nicely when we receive SIGWINCH
o Also change some 0-2 to *_FILENO
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.14 2002/06/20 19:25:55 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.14 2002/06/20 19:25:55 millert Exp $";
@


1.14
log
@Add a -s option to enable the smooth scrolling in revision 1.10
The default behavior remains unchanged.
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.13 2002/06/20 10:18:29 form Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.13 2002/06/20 10:18:29 form Exp $";
a52 1
#include <signal.h>
d77 1
d115 1
a115 1
	tcgetattr(0, &tty);
d141 8
d173 46
@


1.13
log
@undo last commit; deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.11 2000/06/30 16:00:21 millert Exp $";
d82 1
a82 1
	scrollok(my_win.x_win, FALSE);
d89 1
a89 1
	scrollok(his_win.x_win, FALSE);
@


1.12
log
@scrolling support.
ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.11 2000/06/30 16:00:21 millert Exp $	*/
d82 1
a82 1
	scrollok(my_win.x_win, TRUE);
d89 1
a89 1
	scrollok(his_win.x_win, TRUE);
@


1.11
log
@warnx?/errx? paranoia (use "%s" not a bare string unless it is a
constant).  These are not security holes but it is worth fixing
them anyway both for robustness and so folks looking for examples
in the tree are not misled into doing something potentially dangerous.
Furthermore, it is a bad idea to assume that pathnames will not
include '%' in them and that error routines don't return strings
with '%' in them (especially in light of the possibility of locales).
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.10 1999/03/23 17:00:38 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.10 1999/03/23 17:00:38 millert Exp $";
d82 1
a82 1
	scrollok(my_win.x_win, FALSE);
d89 1
a89 1
	scrollok(his_win.x_win, FALSE);
@


1.10
log
@Don't bother calling nl() in init_display, just do the '\r' -> '\n' conversion
ourselves in display().  Since we don't use the curses input routines we
have to do the conversion by hand.  This is cheap because input processing
is done on a per-character basis.  Closes PR 783.
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.9 1999/03/23 02:19:32 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.9 1999/03/23 02:19:32 millert Exp $";
d160 1
a160 1
			warn(warning);
d162 1
a162 1
			warnx(warning);
@


1.10.6.1
log
@Pull in patch from current (even more to come):
Fix (millert):
warnx?/errx? paranoia (use "%s" not a bare string unless it is a
constant).  These are not security holes but it is worth fixing
them anyway both for robustness and so folks looking for examples
in the tree are not misled into doing something potentially dangerous.
Furthermore, it is a bad idea to assume that pathnames will not
include '%' in them and that error routines don't return strings
with '%' in them (especially in light of the possibility of locales).
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.11 2000/06/30 16:00:21 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.11 2000/06/30 16:00:21 millert Exp $";
d160 1
a160 1
			warn("%s", warning);
d162 1
a162 1
			warnx("%s", warning);
@


1.9
log
@Use cbreak(), not crmode() since crmode is just #define'd to cbreak
anyway.  Add a call to nl() after the cbreak().  This would fix PR #783
except that ncurses does not set ICRNL/ONLCR in nl() like I think it
should.  PR #783 will be fixed once that issue is resolved so consider
this part one of two...
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.8 1999/03/03 20:43:30 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.8 1999/03/03 20:43:30 millert Exp $";
a75 1
	nl();
@


1.8
log
@Print fatal errors to stderr after curses has finished instead of printing to the curses window which disapears immediately for terminals that can restore the screen.
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.7 1998/12/20 23:54:08 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.7 1998/12/20 23:54:08 millert Exp $";
d75 2
a76 1
	crmode();
@


1.7
log
@add some parens for clarity
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.6 1998/08/31 08:00:46 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.6 1998/08/31 08:00:46 deraadt Exp $";
d124 1
a124 1
		p_error("Lost the connection");
d127 1
a127 1
		p_error("Lost the connection");
d138 1
a138 2
	message("Connection closing. Exiting");
	quit();
d145 3
a147 1
quit()
d158 6
@


1.6
log
@s/CKILL/VKILL/, a todd miller bug special apparently
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.5 1998/08/18 04:02:14 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.5 1998/08/18 04:02:14 millert Exp $";
d116 1
a116 1
	buf[0] = my_win.cerase = tty.c_cc[VERASE] == (u_char)_POSIX_VDISABLE
d118 1
a118 1
	buf[1] = my_win.kill = tty.c_cc[VKILL] == (u_char)_POSIX_VDISABLE
d120 1
a120 1
	buf[2] = my_win.werase = tty.c_cc[VWERASE] == (u_char)_POSIX_VDISABLE
@


1.5
log
@Some changes inspired by FreeBSD...
 o Kill annoying spaces at the end of lines
 o sigaction, not sigvec
 o warn/err where sensible
 o hstrerror() not herror()
 o defaults for erase, kill, and werase if not set
 o kill a needless refresh() after the beeps that was messing up the screen
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.4 1998/04/28 22:13:26 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.4 1998/04/28 22:13:26 pjanzen Exp $";
d111 1
a111 1
	char buf[3];
d119 1
a119 1
	    ? CKILL : tty.c_cc[CKILL];
@


1.4
log
@NetBSD-based -Wall cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.3 1996/06/26 05:40:22 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.3 1996/06/26 05:40:22 deraadt Exp $";
d57 1
a57 1
/* 
d64 1
a64 1
	struct sigvec sigv;
d68 3
a70 3
	(void) sigvec(SIGTSTP, (struct sigvec *)0, &sigv);
	sigv.sv_mask |= sigmask(SIGALRM);
	(void) sigvec(SIGTSTP, &sigv, (struct sigvec *)0);
d93 1
a93 1
#ifdef NCURSES_VERSION
d116 6
a121 9
	my_win.cerase = tty.c_cc[VERASE];
	my_win.kill = tty.c_cc[VKILL];
	if (tty.c_cc[VWERASE] == (unsigned char) -1)
		my_win.werase = '\027';	 /* control W */
	else
		my_win.werase = tty.c_cc[VWERASE];
	buf[0] = my_win.cerase;
	buf[1] = my_win.kill;
	buf[2] = my_win.werase;
@


1.3
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: init_disp.c,v 1.6 1994/12/09 02:14:17 jtc Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: init_disp.c,v 1.6 1994/12/09 02:14:17 jtc Exp $";
d49 1
d52 2
a53 1

d55 1
a55 3
#include <signal.h>
#include <err.h>
#include "talk.h"
d61 1
a63 1
	void sig_sent();
d108 1
d137 2
a138 1
sig_sent()
d148 1
@


1.2
log
@Use beep() with ncurses
Use hline() with ncurses
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: init_disp.c,v 1.6 1994/12/09 02:14:17 jtc Exp $";
@


1.1
log
@Initial revision
@
text
@d92 3
d96 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
