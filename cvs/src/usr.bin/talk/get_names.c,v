head	1.21;
access;
symbols
	OPENBSD_6_2:1.21.0.10
	OPENBSD_6_2_BASE:1.21
	OPENBSD_6_1:1.21.0.8
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.4
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.20.0.6
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.19.0.18
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.16
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.12
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.10
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.8
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.6
	OPENBSD_5_0:1.19.0.4
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.19.0.2
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.18.0.4
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.18.0.2
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.17.0.8
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.4
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.2
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.16.0.6
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.4
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.2
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.15.0.12
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.10
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.8
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.6
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.4
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.2
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.11.0.4
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.8.0.4
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_8:1.6.0.10
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.8
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.6
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.21
date	2016.02.01.07.29.25;	author mestre;	state Exp;
branches;
next	1.20;
commitid	Pn9SmnrokNcgT1A4;

1.20
date	2015.01.16.06.40.13;	author deraadt;	state Exp;
branches;
next	1.19;
commitid	Uu5nFG3wCl0LACBb;

1.19
date	2010.08.12.23.31.29;	author tedu;	state Exp;
branches;
next	1.18;

1.18
date	2009.10.27.23.59.44;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2008.05.31.21.10.36;	author sobrado;	state Exp;
branches;
next	1.16;

1.16
date	2006.10.29.22.18.32;	author otto;	state Exp;
branches;
next	1.15;

1.15
date	2004.03.02.21.04.42;	author tedu;	state Exp;
branches;
next	1.14;

1.14
date	2003.10.01.06.32.44;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2003.07.10.00.06.51;	author david;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.03.02.56.17;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.06.21.06.16.44;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.20.19.25.55;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.19.19.02.16;	author mpech;	state Exp;
branches;
next	1.8;

1.8
date	2001.03.09.03.19.52;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.31.00.24.51;	author hugh;	state Exp;
branches;
next	1.6;

1.6
date	98.08.18.04.02.13;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.04.28.22.13.25;	author pjanzen;	state Exp;
branches;
next	1.4;

1.4
date	97.02.01.19.38.26;	author jkatz;	state Exp;
branches;
next	1.3;

1.3
date	97.01.17.07.13.28;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.40.22;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.12;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.12;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Remove unused headers and sort the remaining
Remove lint-style comments
Swap hardcoded string on usage() for __progname

OK tb@@
@
text
@/*	$OpenBSD: get_names.c,v 1.20 2015/01/16 06:40:13 deraadt Exp $	*/
/*	$NetBSD: get_names.c,v 1.4 1994/12/09 02:14:16 jtc Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/socket.h>

#include <err.h>
#include <limits.h>
#include <pwd.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "talk.h"

extern	CTL_MSG msg;

/*
 * Determine the local and remote user, tty, and machines
 */
void
get_names(int argc, char *argv[])
{
	char hostname[HOST_NAME_MAX+1];
	char *his_name, *my_name;
	char *my_machine_name, *his_machine_name;
	char *his_tty;
	char *cp;
	char *names;

	if (argc > 1 && !strcmp(argv[1], "-H")) {
		argv[1] = argv[0];
		++argv;
		--argc;
		high_print = 1;
	}

	if (argc > 1 && !strcmp(argv[1], "-s")) {
		argv[1] = argv[0];
		++argv;
		--argc;
		smooth_scroll = TRUE;
	}

	if ((argc < 2 ) || ('@@' == argv[1][0])) {
		extern char *__progname;
		fprintf(stderr, "usage: %s [-Hs] person [ttyname]\n", __progname);
		exit(1);
	}
	if (!isatty(STDIN_FILENO))
		errx(1, "standard input must be a tty, not a pipe or a file");

	if ((my_name = getlogin()) == NULL) {
		struct passwd *pw;

		if ((pw = getpwuid(getuid())) == NULL)
			errx(1, "you don't exist in the passwd file.");
		my_name = pw->pw_name;
	}
	gethostname(hostname, sizeof (hostname));
	my_machine_name = hostname;
	/* check for, and strip out, the machine name of the target */
	names = strdup(argv[1]);
	if (names == NULL)
		errx(1, "out of memory");
	for (cp = names; *cp && !strchr("@@:!.", *cp); cp++)
		;
	if (*cp == '\0') {
		/* this is a local to local talk */
		his_name = names;
		his_machine_name = my_machine_name;
	} else {
		if (*cp++ == '@@') {
			/* user@@host */
			his_name = names;
			his_machine_name = cp;
		} else {
			/* host.user or host!user or host:user */
			his_name = cp;
			his_machine_name = names;
		}
		*--cp = '\0';
	}
	if (argc > 2)
		his_tty = argv[2];	/* tty name is arg 2 */
	else
		his_tty = "";
	get_addrs(my_machine_name, his_machine_name);
	/*
	 * Initialize the message template.
	 */
	msg.vers = TALK_VERSION;
	msg.addr.sa_family = htons(AF_INET);
	msg.ctl_addr.sa_family = htons(AF_INET);
	msg.id_num = htonl(0);
	strncpy(msg.l_name, my_name, NAME_SIZE);
	msg.l_name[NAME_SIZE - 1] = '\0';
	strncpy(msg.r_name, his_name, NAME_SIZE);
	msg.r_name[NAME_SIZE - 1] = '\0';
	strncpy(msg.r_tty, his_tty, TTY_SIZE);
	msg.r_tty[TTY_SIZE - 1] = '\0';
	free(names);
}
@


1.20
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.19 2010/08/12 23:31:29 tedu Exp $	*/
d33 4
a36 1
#include "talk.h"
d39 1
d41 2
a42 1
#include <limits.h>
d74 2
a75 1
		fprintf(stderr, "usage: talk [-Hs] person [ttyname]\n");
@


1.19
log
@some inconsequential cleanups.  ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.18 2009/10/27 23:59:44 deraadt Exp $	*/
a33 1
#include <sys/param.h>
d37 1
d47 1
a47 1
	char hostname[MAXHOSTNAMELEN];
@


1.18
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.17 2008/05/31 21:10:36 sobrado Exp $	*/
d45 1
a45 3
get_names(argc, argv)
	int argc;
	char *argv[];
@


1.17
log
@synchronize usage and synopsis.
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.16 2006/10/29 22:18:32 otto Exp $	*/
a31 7

#ifndef lint
#if 0
static char sccsid[] = "@@(#)get_names.c	8.1 (Berkeley) 6/6/93";
#endif
static const char rcsid[] = "$OpenBSD: get_names.c,v 1.16 2006/10/29 22:18:32 otto Exp $";
#endif /* not lint */
@


1.16
log
@Plug a mem leak. Found in one of my trees. Forgat where it came from; most
likely from a NetBSD Coverity fix. ok ray@@
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.15 2004/03/02 21:04:42 tedu Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: get_names.c,v 1.15 2004/03/02 21:04:42 tedu Exp $";
d78 1
a78 2
		fprintf(stderr, "usage: talk [-Hs] user [ttyname]\n"
				"       talk [-Hs] user@@hostname [ttyname]\n");
@


1.15
log
@use socklen_t and better socket() checks.  from Andrey Matveev
-Wall for good measure
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.14 2003/10/01 06:32:44 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: get_names.c,v 1.14 2003/10/01 06:32:44 deraadt Exp $";
d134 1
@


1.14
log
@handle failed strdup; reported by jjy2+@@pitt.edu
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.13 2003/07/10 00:06:51 david Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: get_names.c,v 1.13 2003/07/10 00:06:51 david Exp $";
@


1.13
log
@add missing includes
ok deraadt@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.12 2003/06/03 02:56:17 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: get_names.c,v 1.12 2003/06/03 02:56:17 millert Exp $";
d96 2
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.11 2002/06/21 06:16:44 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: get_names.c,v 1.11 2002/06/21 06:16:44 millert Exp $";
d43 1
@


1.11
log
@o Resize nicely when we receive SIGWINCH
o Also change some 0-2 to *_FILENO
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.10 2002/06/20 19:25:55 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: get_names.c,v 1.10 2002/06/20 19:25:55 millert Exp $";
@


1.10
log
@Add a -s option to enable the smooth scrolling in revision 1.10
The default behavior remains unchanged.
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.9 2001/11/19 19:02:16 mpech Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: get_names.c,v 1.9 2001/11/19 19:02:16 mpech Exp $";
d85 1
a85 1
	if (!isatty(0))
@


1.9
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.8 2001/03/09 03:19:52 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: get_names.c,v 1.8 2001/03/09 03:19:52 deraadt Exp $";
d73 7
d81 2
a82 2
		fprintf(stderr, "usage: talk user [ttyname]\n"
				"       talk user@@hostname [ttyname]\n");
@


1.8
log
@exit(-#) is wrong
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.7 2000/12/31 00:24:51 hugh Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: get_names.c,v 1.7 2000/12/31 00:24:51 hugh Exp $";
d63 1
a63 1
	register char *cp;
@


1.7
log
@Redress PR 1547. Provide an option to pass high characters without
escaping, and turn it off by default. Checked by angelos@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.6 1998/08/18 04:02:13 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: get_names.c,v 1.6 1998/08/18 04:02:13 millert Exp $";
d76 1
a76 1
		exit(-1);
@


1.6
log
@Some changes inspired by FreeBSD...
 o Kill annoying spaces at the end of lines
 o sigaction, not sigvec
 o warn/err where sensible
 o hstrerror() not herror()
 o defaults for erase, kill, and werase if not set
 o kill a needless refresh() after the beeps that was messing up the screen
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.5 1998/04/28 22:13:25 pjanzen Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: get_names.c,v 1.5 1998/04/28 22:13:25 pjanzen Exp $";
d65 7
@


1.5
log
@NetBSD-based -Wall cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.4 1997/02/01 19:38:26 jkatz Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: get_names.c,v 1.4 1997/02/01 19:38:26 jkatz Exp $";
d67 2
a68 6
		printf("Usage: talk user [ttyname]\n");
		printf("       talk user@@hostname [ttyname]\n");
		exit(-1);
	}
	if (!isatty(0)) {
		printf("Standard input must be a tty, not a pipe or a file\n");
d71 2
d77 2
a78 4
		if ((pw = getpwuid(getuid())) == NULL) {
			printf("You don't exist. Go away.\n");
			exit(-1);
		}
@


1.4
log
@Catches luser/typo when "@@" is the first character of first argument
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.3 1997/01/17 07:13:28 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: get_names.c,v 1.3 1997/01/17 07:13:28 millert Exp $";
d44 1
a45 2
#include <sys/socket.h>
#include <protocols/talkd.h>
d47 1
a47 2
#include <string.h>
#include "talk.h"
a48 2
char	*getlogin();
char	*ttyname();
d54 1
d62 1
a62 1
	char *my_tty, *his_tty;
d66 1
a66 1
	if (argc < 2 ) {
a72 6
		exit(-1);
	}

	if ('@@' == argv[1][0]) {
		printf("Usage: talk user [ttyname]\n");
		printf("       talk user@@hostname [ttyname]\n");
@


1.3
log
@r?index -> strr?chr
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.2 1996/06/26 05:40:22 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: get_names.c,v 1.2 1996/06/26 05:40:22 deraadt Exp $";
d71 1
d78 7
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: get_names.c,v 1.4 1994/12/09 02:14:16 jtc Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: get_names.c,v 1.4 1994/12/09 02:14:16 jtc Exp $";
a52 1
char	*rindex();
d90 1
a90 1
	for (cp = names; *cp && !index("@@:!.", *cp); cp++)
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: get_names.c,v 1.4 1994/12/09 02:14:16 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
