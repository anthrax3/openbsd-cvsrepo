head	1.8;
access;
symbols
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.8
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.4
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.6
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.5.0.10
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5;
locks; strict;
comment	@# @;


1.8
date	2014.09.05.10.36.39;	author espie;	state Exp;
branches;
next	1.7;
commitid	7G7srodegDhZP43v;

1.7
date	2014.03.19.02.16.22;	author afresh1;	state Exp;
branches;
next	1.6;

1.6
date	2014.03.06.08.58.43;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2012.07.09.10.52.26;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2012.07.09.10.34.52;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2012.07.04.12.39.34;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2012.06.28.18.24.42;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2012.06.24.13.44.53;	author espie;	state Exp;
branches;
next	;


desc
@@


1.8
log
@recognize install-wrapper as a valid install program
@
text
@# ex:ts=8 sw=4:
# $OpenBSD: Install.pm,v 1.7 2014/03/19 02:16:22 afresh1 Exp $
#
# Copyright (c) 2007-2010 Steven Mestdagh <steven@@openbsd.org>
# Copyright (c) 2012 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
use strict;
use warnings;

package LT::Mode::Install;
our @@ISA = qw(LT::Mode);

use LT::Util;
use LT::Trace;
use Getopt::Std;
use File::Basename;

sub help
{
	print <<"EOH";

Usage: $0 --mode=install [cp|install] [parameters] source dest
Install executables/libraries.
EOH
}

sub run
{
	my ($class, $ltprog) = @@_;
	# we just parse the options in order to find the actual arguments
	my @@argvcopy = @@ARGV;
	my %install_opts;
	tsay {"ltprog[-1]  = $$ltprog[-1]"};
	if ($$ltprog[-1] =~ m/install([.-](sh|check|wrapper))?$/) {
		getopts('BbCcdf:g:m:o:pSs', \%install_opts);
		if (@@ARGV < 2 && (!defined $install_opts{'d'} && @@ARGV == 1)) {
			die "Wrong number of arguments for install\n";
		}
	} elsif ($$ltprog[-1] =~ m/cp$/) {
		getopts('HLPRfipr', \%install_opts);
		if (@@ARGV < 2) {
			die "Wrong number of arguments for install\n";
		}
	} else {
		die "Unsupported install program $$ltprog[-1]\n";
	}
	my @@instopts = @@argvcopy[0 .. (@@argvcopy - @@ARGV - 1)];
	my $dst = pop @@ARGV;
	my @@src = @@ARGV;
	my $dstdir;
	if (-d $dst) {
		$dstdir = $dst;
	} else {
		# dst is not a directory, i.e. a file
		if (@@src > 1) {
			# XXX not really libtool's task to check this
			die "Multiple source files combined with file destination.\n";
		} else {
			$dstdir = dirname($dst);
		}
	}
	foreach my $s (@@src) {
		my $dstfile = basename($s);
		# resolve symbolic links, so we don't try to test later
		# whether the symlink is a program wrapper etc.
		if (-l $s) {
			$s = readlink($s) or die "Cannot readlink $s: $!\n";
		}
		my $srcdir = dirname($s);
		my $srcfile = basename($s);
		tsay {"srcdir = $srcdir\nsrcfile = $srcfile"};
		tsay {"dstdir = $dstdir\ndstfile = $dstfile"};
		if ($srcfile =~ m/^\S+\.la$/) {
			require LT::LaFile;
			LT::LaFile->install($s, $dstdir, $ltprog, \@@instopts, $install_opts{'s'});
		} elsif (-f "$srcdir/$ltdir/$srcfile" && is_wrapper($s)) {
			require LT::Program;
			LT::Program->install($s, $dst, $ltprog, \@@instopts);
		} else {
			LT::Exec->install(@@$ltprog, @@instopts, $s, $dst);
		}
	}
	if (defined $install_opts{d}) {
		LT::Exec->install(@@$ltprog, @@instopts, @@ARGV);
	}
}

sub is_wrapper
{
	my $program = shift;

	open(my $pw, '<', $program) or die "Cannot open $program: $!\n";
	my $line = <$pw>;
	# if the first line isn't a shell, don't even bother
	return 0 unless $line =~ m/^\#\!/;
	my $i = 0;
	while (my $line = <$pw>) {
		return 1 if $line =~ m/wrapper\sfor/;
		last if $i++ > 10;
	}
	return 0;
}

1;
@


1.7
log
@Remove lexical $_ from libtool in preparation for perl 5.18

OK and additional changes from espie@@
@
text
@d2 1
a2 1
# $OpenBSD: Install.pm,v 1.6 2014/03/06 08:58:43 ajacoutot Exp $
d45 1
a45 1
	if ($$ltprog[-1] =~ m/install([.-](sh|check))?$/) {
@


1.6
log
@Also accept "install-check" as an install script. This part will
probably be reworked and simplified in the future anyway...

ok espie@@
@
text
@d2 1
a2 1
# $OpenBSD: Install.pm,v 1.5 2012/07/09 10:52:26 espie Exp $
d104 1
a104 1
	my $_ = <$pw>;
d106 1
a106 1
	return 0 unless m/^\#\!/;
d108 2
a109 2
	while (<$pw>) {
		return 1 if m/wrapper\sfor/;
@


1.5
log
@implement help-all
@
text
@d2 1
a2 1
# $OpenBSD: Install.pm,v 1.4 2012/07/09 10:34:52 espie Exp $
d45 1
a45 1
	if ($$ltprog[-1] =~ m/install([.-]sh)?$/) {
@


1.4
log
@framework for handling  help better
@
text
@d2 1
a2 1
# $OpenBSD: Install.pm,v 1.3 2012/07/04 12:39:34 espie Exp $
d28 9
@


1.3
log
@- start cleaning up options handling: put things into a separate package
that encapsulates accesses to Getopt::Long (which is badly suited for us
actually)
- simplify LT::Trace syntax
- implement --tag checks that mimic actual libtool
- add libtool comp support, as per libtool2
(but keep implicit modes as per libtool1)
- prevent shell code in nm execution

okay jasper@@, steven@@
@
text
@d2 1
a2 1
# $OpenBSD: Install.pm,v 1.2 2012/06/28 18:24:42 espie Exp $
d22 1
@


1.2
log
@a few minor cleanup and performance tweaks (is_wrapper doesn't need to
scan large binary files)
okay jasper@@
@
text
@d2 1
a2 1
# $OpenBSD: Install.pm,v 1.1 2012/06/24 13:44:53 espie Exp $
d24 1
d34 1
a34 1
	LT::Trace::debug {"ltprog[-1]  = $$ltprog[-1]\n"};
d72 2
a73 2
		LT::Trace::debug {"srcdir = $srcdir\nsrcfile = $srcfile\n"};
		LT::Trace::debug {"dstdir = $dstdir\ndstfile = $dstfile\n"};
d84 1
a84 1
	if (defined $install_opts{'d'}) {
@


1.1
log
@clean-up the mess: move modes into separate files,
this makes dependencies more apparent.
This should also speed libtool up a bit, since it won't load all the code
all the time, but only the parts that are actually needed (to wit "compile
mode" which is much smaller).

okay jasper@@
@
text
@d2 1
a2 1
# $OpenBSD$
d59 1
a59 1
			$dstdir = dirname $dst;
d63 1
a63 1
		my $dstfile = basename $s;
d69 2
a70 2
		my $srcdir = dirname $s;
		my $srcfile = basename $s;
a89 1
#	my $self = shift;
d93 9
a101 1
	return grep { m/wrapper\sfor/ } <$pw>;
@

