head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2012.07.13.11.56.12;	author espie;	state dead;
branches;
next	1.5;

1.5
date	2012.07.12.19.21.00;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2012.07.12.09.43.34;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2012.07.10.16.41.00;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2012.07.10.15.53.26;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2012.07.08.10.42.25;	author espie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@move stuff around some more, do not load link parts unless we are actually
linking.

(and always load basic linker class when we're actually linking)


Start making a proper "library stash class".
@
text
@# $OpenBSD: Linker.pm,v 1.5 2012/07/12 19:21:00 espie Exp $

# Copyright (c) 2007-2010 Steven Mestdagh <steven@@openbsd.org>
# Copyright (c) 2012 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;
use feature qw(say);

package LT::Linker;
use LT::Trace;
use LT::Util;
use File::Basename;
use Cwd qw(abs_path);

sub new
{
	my $class = shift;
	bless {}, $class;
}

sub create_symlinks
{
	my ($self, $dir, $libs) = @@_;
	if (! -d $dir) {
		mkdir($dir) or die "Cannot mkdir($dir) : $!\n";
	}

	foreach my $l (values %$libs) {
		my $f = $l->{fullpath};
		next if !defined $f;
		next if $f =~ m/\.a$/;
		my $libnames = [];
		if (defined $l->{lafile}) {
			require LT::LaFile;
			my $lainfo = LT::LaFile->parse($l->{lafile});
			my $librarynames = $lainfo->stringize('library_names');
			@@$libnames = split /\s/, $librarynames;
			$libnames = reverse_zap_duplicates_ref($libnames);
		} else {
			push @@$libnames, basename($f);
		}	
		foreach my $libfile (@@$libnames) {
			my $link = "$dir/$libfile";
			tsay {"ln -s $f $link"};
			next if -f $link;
			my $p = abs_path($f);
			if (!symlink($p, $link)) {
				die "Cannot create symlink($p, $link): $!\n"
				    unless  $!{EEXIST};
			}
		}
	}
	return $dir;
}

sub common1
{
	my ($self, $parser, $gp, $deplibs, $libdirs, $dirs, $libs) = @@_;

	$parser->resolve_la($deplibs, $libdirs);
	my $orderedlibs = [];
	my $staticlibs = [];
	my $args = $parser->parse_linkargs2($gp, $orderedlibs, $staticlibs, $dirs, 
	    $libs);
	tsay {"staticlibs = \n", join("\n", @@$staticlibs)};
	tsay {"orderedlibs = @@$orderedlibs"};
	$orderedlibs = reverse_zap_duplicates_ref($orderedlibs);
	tsay {"final orderedlibs = @@$orderedlibs"};
	return ($staticlibs, $orderedlibs, $args);
}

sub infer_libparameter
{
	my ($self, $a, $k) = @@_;
	my $lib = basename($a);
	if ($lib =~ m/^lib(.*)\.so(\.\d+){2}$/) {
		$lib = $1;
	} elsif ($lib =~ m/^lib(.*)\.so$/) {
		say "warning: library filename $a has no version number";
		$lib = $1;
	} else {
		say "warning: cannot derive -l flag from library filename $a, assuming hash key -l$k";
		$lib = $k;
	}
	return "-l$lib";
}

1;


@


1.5
log
@common code for deducing libraries.
Still fucks up order somehow...
@
text
@d1 1
a1 1
# $OpenBSD: Linker.pm,v 1.4 2012/07/12 09:43:34 espie Exp $
@


1.4
log
@simplify yet a bit more
@
text
@d1 1
a1 1
# $OpenBSD: Linker.pm,v 1.3 2012/07/10 16:41:00 espie Exp $
d84 17
@


1.3
log
@ouch, Rresolved and libsearchdirs no longer live in main, so make them
part of $gp as they should be...

Oh, and create an actual linker object for later.
@
text
@d1 1
a1 1
# $OpenBSD: Linker.pm,v 1.2 2012/07/10 15:53:26 espie Exp $
d69 15
@


1.2
log
@move some shit around to (more or less) where it belongs
@
text
@d1 1
a1 1
# $OpenBSD: Linker.pm,v 1.1 2012/07/08 10:42:25 espie Exp $
d28 6
a33 2
# XXX ?
our (@@Rresolved, @@libsearchdirs);
@


1.1
log
@a few big changes
- start using our options parser for main libtool options
- put link related stuff into their own module.
Long term, some unification should happen.
- shortdie for cases where we  know libtool is not at fault.
@
text
@d1 1
a1 1
# $OpenBSD$
d28 2
@

