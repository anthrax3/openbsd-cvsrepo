head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.12
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.14
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.10
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.6
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.8
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4;
locks; strict;
comment	@# @;


1.7
date	2014.04.20.17.34.26;	author zhuk;	state Exp;
branches;
next	1.6;

1.6
date	2014.04.16.10.31.27;	author zhuk;	state Exp;
branches;
next	1.5;

1.5
date	2012.11.09.10.51.47;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2012.07.10.09.51.32;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2012.07.06.11.30.41;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2012.07.04.12.39.34;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2012.06.19.09.30.44;	author espie;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Style improvement based on espie@@'s feedback: provide and use
LT::UList->new() instead of calling tie() manually. As a bonus, few
extra lines in actual code go away.

okay espie@@ who still thinks that I test things _before_ commit
@
text
@# $OpenBSD: Archive.pm,v 1.6 2014/04/16 10:31:27 zhuk Exp $

# Copyright (c) 2007-2010 Steven Mestdagh <steven@@openbsd.org>
# Copyright (c) 2012 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;
use feature qw(say switch state);

package LT::Archive;
use LT::Trace;
use LT::Exec;
use LT::UList;
use LT::Util;
use File::Path;

sub extract
{
	my ($self, $dir, $archive) = @@_;

	if (! -d $dir) {
		tsay {"mkdir -p $dir"};
		File::Path::mkpath($dir);
	}
	LT::Exec->chdir($dir)->link('ar', 'x', $archive);
}

sub get_objlist
{
	my ($self, $a) = @@_;

	open(my $arh, '-|', 'ar', 't', $a);
	my @@o = <$arh>;
	close $arh;
	map { chomp; } @@o;
	return @@o;
}

sub get_symbollist
{
	my ($self, $filepath, $regex, $objlist) = @@_;

	if (@@$objlist == 0) {
		die "get_symbollist: object list is empty\n";
	}

	tsay {"generating symbol list in file: $filepath"};
	tsay {"object list is @@$objlist" };
	my $symbols = LT::UList->new;
	open(my $sh, '-|', 'nm', '--', @@$objlist) or 
	    die "Error running nm on object list @@$objlist\n";
	my $c = 0;
	while (my $line = <$sh>) {
		chomp $line;
		tsay {"$c: $line"};
		if ($line =~ m/\S+\s+[BCDEGRST]\s+(.*)/) {
			my $s = $1;
			if ($s =~ m/$regex/) {
				push @@$symbols, $s;
				tsay {"matched"};
			}
		}
		$c++;
	}
	open(my $fh, '>', $filepath) or die "Cannot open $filepath\n";
	print $fh map { "$_\n" } sort @@$symbols;
}

1;
@


1.6
log
@Make directory ordering in our libtool stable. Fixes quiet a few issues
ajacoutot@@, me and probably others were seeing. No fallout in bulk build.

Input from espie@@ and ajacoutot@@.
Prodding by ajacoutot@@
Bulk test by jasper@@
@
text
@d1 1
a1 1
# $OpenBSD: Archive.pm,v 1.5 2012/11/09 10:51:47 espie Exp $
d61 1
a61 2
	my $symbols = [];
	tie (@@$symbols, 'LT::UList');
@


1.5
log
@fix get_symbollist: output completely empty file if no symbol.
output slightly more debug info
@
text
@d1 1
a1 1
# $OpenBSD: Archive.pm,v 1.4 2012/07/10 09:51:32 espie Exp $
d25 1
d62 1
a77 2
	$symbols = reverse_zap_duplicates_ref($symbols);
	@@$symbols = sort @@$symbols;
d79 1
a79 1
	print $fh map { "$_\n" } @@$symbols;
@


1.4
log
@more config, sort stuff for easier spotting
@
text
@d1 1
a1 1
# $OpenBSD: Archive.pm,v 1.3 2012/07/06 11:30:41 espie Exp $
d59 1
d79 1
a79 1
	print $fh join("\n", @@$symbols), "\n";
@


1.3
log
@add my copyright, since I'm going to do yet MORE changes...
@
text
@d1 1
a1 1
# $OpenBSD: Archive.pm,v 1.2 2012/07/04 12:39:34 espie Exp $
d26 1
@


1.2
log
@- start cleaning up options handling: put things into a separate package
that encapsulates accesses to Getopt::Long (which is badly suited for us
actually)
- simplify LT::Trace syntax
- implement --tag checks that mimic actual libtool
- add libtool comp support, as per libtool2
(but keep implicit modes as per libtool1)
- prevent shell code in nm execution

okay jasper@@, steven@@
@
text
@d1 1
a1 1
# $OpenBSD: Archive.pm,v 1.1 2012/06/19 09:30:44 espie Exp $
d4 1
@


1.1
log
@add libtool to base, okay deraadt@@, jasper@@, millert@@...
(as requested by matthieu@@ so we can work on xenocara).
@
text
@d1 1
a1 1
# $OpenBSD: Archive.pm,v 1.2 2011/11/14 22:12:08 jasper Exp $
d31 1
a31 1
		LT::Trace::debug {"mkdir -p $dir\n"};
d56 1
a56 1
	LT::Trace::debug {"generating symbol list in file: $filepath\n"};
d58 2
a59 1
	open(my $sh, '-|', 'nm', @@$objlist) or die "Error running nm on object list\n";
d63 1
a63 1
		LT::Trace::debug {"$c: $line\n"};
d68 1
a68 1
				LT::Trace::debug {"matched\n"};
@

