head	1.4;
access;
symbols
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.22
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.18
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.14
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.16
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.12
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.10
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4;
locks; strict;
comment	@# @;


1.4
date	2012.07.08.09.36.40;	author jasper;	state Exp;
branches;
next	1.3;

1.3
date	2012.07.06.11.30.41;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2012.07.04.12.39.34;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2012.06.19.09.30.44;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@- remove some unneeded quotes
@
text
@# $OpenBSD: Trace.pm,v 1.3 2012/07/06 11:30:41 espie Exp $

# Copyright (c) 2007-2010 Steven Mestdagh <steven@@openbsd.org>
# Copyright (c) 2012 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;
use feature qw(say state);

package LT::Trace;
use Exporter 'import';
our @@EXPORT = qw(tprint tsay);

sub print(&)
{
	my $val = shift;
	if (defined $ENV{TRACE_LIBTOOL}) {
		state $trace_file;
		if (!defined $trace_file) {
			open $trace_file, '>>', $ENV{TRACE_LIBTOOL};
		}
		if (defined $trace_file) {
			print $trace_file (&$val);
		}
	}
}

my $trace_level = 0;

sub set
{
	my $class = shift;
	$trace_level = shift;
}

sub tprint(&;$)
{
	my ($args, $level) = @@_;

	$level = 1 if !defined $level;

	if ($trace_level >= $level) {
		print (&$args);
	}
}

sub tsay(&;$)
{
	my ($args, $level) = @@_;

	$level = 1 if !defined $level;

	if ($trace_level >= $level) {
		say (&$args);
	}
}

1;
@


1.3
log
@add my copyright, since I'm going to do yet MORE changes...
@
text
@d1 1
a1 1
# $OpenBSD: Trace.pm,v 1.2 2012/07/04 12:39:34 espie Exp $
d29 1
a29 1
	if (defined $ENV{'TRACE_LIBTOOL'}) {
d32 1
a32 1
			open $trace_file, '>>', $ENV{'TRACE_LIBTOOL'};
@


1.2
log
@- start cleaning up options handling: put things into a separate package
that encapsulates accesses to Getopt::Long (which is badly suited for us
actually)
- simplify LT::Trace syntax
- implement --tag checks that mimic actual libtool
- add libtool comp support, as per libtool2
(but keep implicit modes as per libtool1)
- prevent shell code in nm execution

okay jasper@@, steven@@
@
text
@d1 1
a1 1
# $OpenBSD: Trace.pm,v 1.1 2012/06/19 09:30:44 espie Exp $
d4 1
@


1.1
log
@add libtool to base, okay deraadt@@, jasper@@, millert@@...
(as requested by matthieu@@ so we can work on xenocara).
@
text
@d1 1
a1 1
# $OpenBSD$
d19 1
a19 1
use feature qw(say switch state);
d22 2
d39 9
a47 1
sub debug(&;$)
d53 1
a53 1
	if (defined $main::D && $main::D >= $level) {
d55 11
@

