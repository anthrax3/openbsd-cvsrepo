head	1.13;
access;
symbols
	OPENBSD_6_0:1.12.0.20
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.16
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.18
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.10
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.14
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.12
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.8
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.6
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.4
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.2
	OPENBSD_5_0:1.11.0.12
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.10
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.8
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.4
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.6
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.2
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.10.0.2
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.8.0.12
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.10
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.1.0.18
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.16
	OPENBSD_2_8:1.1.0.14
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.12
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.10
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.8
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.6
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.13
date	2016.09.03.11.41.10;	author tedu;	state Exp;
branches;
next	1.12;
commitid	NacWFWgKwtkfLhFL;

1.12
date	2011.09.22.10.41.04;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2008.08.07.17.37.37;	author sobrado;	state Exp;
branches;
next	1.10;

1.10
date	2008.07.27.13.15.31;	author sobrado;	state Exp;
branches;
next	1.9;

1.9
date	2008.07.05.21.00.38;	author sobrado;	state Exp;
branches;
next	1.8;

1.8
date	2005.06.26.18.20.26;	author otto;	state Exp;
branches;
next	1.7;

1.7
date	2003.09.05.04.46.35;	author tedu;	state Exp;
branches;
next	1.6;

1.6
date	2003.07.17.20.06.01;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.07.11.02.31.18;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.03.21.08.36;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2002.12.08.16.07.54;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.16.21.27.45;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.07.06.20.22.56;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.13
log
@start pulling apart some function pointers that take too many parameters
because of excessive code sharing. compression and decompression are not
entirely similar, they should share less.
ok joerg millert
@
text
@/*	$OpenBSD: compress.h,v 1.12 2011/09/22 10:41:04 deraadt Exp $	*/

/*
 * Copyright (c) 1997 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include <sys/stat.h>

struct z_info {
	u_int32_t mtime;	/* timestamp */
	u_int32_t crc;		/* crc */
	u_int32_t hlen;		/* header length */
	u_int64_t total_in;	/* # bytes in */
	u_int64_t total_out;	/* # bytes out */
};

/*
 * making it any bigger does not affect perfomance very much.
 * actually this value is just a little bit better than 8192.
 */
#define Z_BUFSIZE 16384

enum program_mode {
	MODE_COMP,
	MODE_DECOMP,
	MODE_CAT
} pmode;

/*
 * exit codes for compress
 */
#define	SUCCESS	0
#define	FAILURE	1
#define	WARNING	2

extern char null_magic[];

extern void *z_ropen(int, char *, int);
extern void *z_wopen(int, char *, int, u_int32_t);
extern FILE *zopen(const char *, const char *,int);
extern int zread(void *, char *, int);
extern int zwrite(void *, const char *, int);
extern int z_close(void *, struct z_info *, const char *, struct stat *);


extern void *gz_ropen(int, char *, int);
extern void *gz_wopen(int, char *, int, u_int32_t);
extern int gz_read(void *, char *, int);
extern int gz_write(void *, const char *, int);
extern int gz_close(void *, struct z_info *, const char *, struct stat *);
extern int gz_flush(void *, int);

extern void *null_ropen(int, char *, int);
extern void *null_wopen(int, char *, int, u_int32_t);
extern int null_read(void *, char *, int);
extern int null_write(void *, const char *, int);
extern int null_close(void *, struct z_info *, const char *, struct stat *);
extern int null_flush(void *, int);

extern void setfile(const char *, int, struct stat *);   
@


1.12
log
@Remove the rcsid which were intentionally skipped in the "purge of 2009"
because the -V command printed them... gut the -V (and -L, while there)
to be silent.
ok miod jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: compress.h,v 1.11 2008/08/07 17:37:37 sobrado Exp $	*/
d61 2
a62 1
extern void *z_open(int, const char *, char *, int, u_int32_t, int);
d69 2
a70 1
extern void *gz_open(int, const char *, char *, int, u_int32_t, int);
d76 2
a77 7
extern void *lzh_open(int, const char *, char *, int, u_int32_t, int);
extern int lzh_read(void *, char *, int);
extern int lzh_write(void *, const char *, int);
extern int lzh_close(void *, struct z_info *);
extern int lzh_flush(void *, int);

extern void *null_open(int, const char *, char *, int, u_int32_t, int);
@


1.11
log
@spacing.
@
text
@d1 1
a1 1
/*	$OpenBSD: compress.h,v 1.10 2008/07/27 13:15:31 sobrado Exp $	*/
a58 2
extern const char main_rcsid[], z_rcsid[], gz_rcsid[], pkzip_rcsid[],
    pack_rcsid[], lzh_rcsid[], null_rcsid[];
@


1.10
log
@an enum specifier is more elegant than a set of #defines;
storing the program mode variable (pmode) as a global let us have
a more consistent prototype for usage().

changes suggested by pyr@@.

ok pyr@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compress.h,v 1.9 2008/07/05 21:00:38 sobrado Exp $	*/
d47 3
a49 3
    MODE_COMP,
    MODE_DECOMP,
    MODE_CAT
@


1.9
log
@each utility must have its own usage and an unique set of options.

diff written by millert based on a previous one by me;
millert's diff has a much better style and adds support for different
sets of options for each utility.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compress.h,v 1.8 2005/06/26 18:20:26 otto Exp $	*/
d46 5
a50 6
/*
 * program modes
 */
#define MODE_COMP	0
#define MODE_DECOMP	1
#define MODE_CAT	2
@


1.8
log
@be a bit more carefull not writing to the stream after the timestamps
have been set. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compress.h,v 1.7 2003/09/05 04:46:35 tedu Exp $	*/
d45 7
@


1.7
log
@add a null compressor from canacar@@ that lets gzcat work with uncompressed
files.
also introduce SMALLness that removes null and Z compressors to save floppy
space.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compress.h,v 1.6 2003/07/17 20:06:01 millert Exp $	*/
d30 2
d61 1
a61 1
extern int z_close(void *, struct z_info *);
d67 1
a67 1
extern int gz_close(void *, struct z_info *);
d79 1
a79 1
extern int null_close(void *, struct z_info *);
d81 2
@


1.6
log
@o implement -l, -n and -N (including setting outfile + mtime)
o make -v behave like GNU gzip for compress/decompress stats
o write a full gzip header w/ mtime and file name
o for -t/-l just don't write data instead of writing to /dev/null
o exit code is now more consistent with GNU gzip
o a crc error on decompress no longer causes unlink(outfile)
mickey@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: compress.h,v 1.5 2003/07/11 02:31:18 millert Exp $	*/
d52 2
a53 1
    pack_rcsid[], lzh_rcsid[];
d73 6
@


1.5
log
@Move magic number checking into main.c and make it work when
decompressing from a pipe.  Currently assumes that magic numbers
are 2 bytes but this is relatively easy to change as needed in the
future.  Discussed w/ mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compress.h,v 1.4 2003/06/03 21:08:36 mickey Exp $	*/
d30 8
d44 7
d54 1
a54 2
extern int z_check_header(int, struct stat *, const char *);
extern void *z_open(int, const char *, int, int);
d58 2
a59 1
extern int zclose(void *);
d61 1
a61 2
extern int gz_check_header(int, struct stat *, const char *);
extern void *gz_open(int, const char *, int, int);
d64 1
a64 1
extern int gz_close(void *);
d67 1
a67 2
extern int lzh_check_header(int, struct stat *, const char *);
extern void *lzh_open(int, const char *, int, int);
d70 1
a70 1
extern int lzh_close(void *);
@


1.4
log
@three four kills
@
text
@d1 1
a1 1
/*	$OpenBSD: compress.h,v 1.3 2002/12/08 16:07:54 mickey Exp $	*/
d40 1
a40 1
extern void *z_open(int, const char *, int);
d47 1
a47 1
extern void *gz_open(int, const char *, int);
d54 1
a54 1
extern void *lzh_open(int, const char *, int);
@


1.3
log
@grop long option names, like gzip.
add most of the gzip's options (a few unimplemented yet).
some cleaning, etc.
millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: compress.h,v 1.2 2002/02/16 21:27:45 millert Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.2
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: compress.h,v 1.1 1997/07/06 20:22:56 mickey Exp $	*/
d21 2
a22 2
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR 
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
d35 4
d41 3
d50 1
d57 7
@


1.1
log
@do gzip
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 12
a48 12
extern int z_check_header __P((int, struct stat *, const char *));
extern void *z_open __P((int, const char *, int));
extern FILE *zopen __P((const char *, const char *,int));
extern int zread __P((void *, char *, int));
extern int zwrite __P((void *, const char *, int));
extern int zclose __P((void *));
extern int gz_check_header __P((int, struct stat *, const char *));
extern void *gz_open __P((int, const char *, int));
extern int gz_read __P((void *, char *, int));
extern int gz_write __P((void *, const char *, int));
extern int gz_close __P((void *));
extern int gz_flush __P((void *, int));
@

