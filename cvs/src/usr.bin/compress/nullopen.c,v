head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.2
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.18
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.10
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.14
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.12
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.8
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.26
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.24
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.22
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.18
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.20
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.16
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.14
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.12
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.10
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2016.09.03.11.41.10;	author tedu;	state Exp;
branches;
next	1.5;
commitid	NacWFWgKwtkfLhFL;

1.5
date	2015.08.20.22.32.41;	author deraadt;	state Exp;
branches;
next	1.4;
commitid	0Dp7Dy9FuNZesYo2;

1.4
date	2011.09.22.10.41.04;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2005.06.26.18.20.26;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.22.18.49.35;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.05.06.08.15;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@start pulling apart some function pointers that take too many parameters
because of excessive code sharing. compression and decompression are not
entirely similar, they should share less.
ok joerg millert
@
text
@/*	$OpenBSD: nullopen.c,v 1.4 2011/09/22 10:41:04 deraadt Exp $	*/

/*
 * Copyright (c) 2003 Can Erkin Acar
 * Copyright (c) 1997 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include <sys/types.h>
#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <unistd.h>
#include "compress.h"

typedef struct {
	off_t 	  total_in;
	off_t 	  total_out;
	int   	  fd;
	int       gotmagic;
	char	  mode;
} null_stream;

char null_magic[2];


void *
null_ropen(int fd, char *name, int gotmagic)
{
	null_stream *s;

	if (fd < 0)
		return NULL;

	if ((s = calloc(1, sizeof(null_stream))) == NULL)
		return NULL;

	s->fd = fd;
	s->gotmagic = gotmagic;
	s->total_in = s->total_out = 0;
	s->mode = 'r';

	return s;
}

void *
null_wopen(int fd, char *name, int bits, u_int32_t mtime)
{
	null_stream *s;

	if (fd < 0)
		return NULL;

	if ((s = calloc(1, sizeof(null_stream))) == NULL)
		return NULL;

	s->fd = fd;
	s->gotmagic = 0;
	s->total_in = s->total_out = 0;
	s->mode = 'w';

	return s;
}

int
null_close(void *cookie, struct z_info *info, const char *name, struct stat *sb)
{
	null_stream *s = (null_stream*) cookie;
	int err = 0;

	if (s == NULL)
		return -1;


	if (info != NULL) {
		info->mtime = 0;
		info->crc =  (u_int32_t)-1;
		info->hlen = 0;
		info->total_in = (off_t) s->total_in;
		info->total_out = (off_t) s->total_out;
	}

	setfile(name, s->fd, sb);
	err = close(s->fd);

	free(s);

	return err;
}

int
null_flush(void *cookie, int flush)
{
	null_stream *s = (null_stream*)cookie;

	if (s == NULL || s->mode != 'w') {
		errno = EBADF;
		return (-1);
	}

	return 0;
}

int
null_read(void *cookie, char *buf, int len)
{
	null_stream *s = (null_stream*)cookie;

	if (s == NULL) {
		errno = EBADF;
		return (-1);
	}
	if (s->gotmagic) {
		if (len < 2) {
			errno = EBADF;
			return (-1);
		}

		buf[0] = null_magic[0];
		buf[1] = null_magic[1];
		s->gotmagic = 0;

		return (2);
	}

	return read(s->fd, buf, len);
}

int
null_write(void *cookie, const char *buf, int len)
{
	null_stream *s = (null_stream*)cookie;

	if (s == NULL) {
		errno = EBADF;
		return (-1);
	}

	return write(s->fd, buf, len);
}
@


1.5
log
@Do not cast result of malloc/calloc/realloc* if stdlib.h is in scope
ok krw millert
@
text
@d50 1
a50 2
null_open(int fd, const char *mode, char *name, int bits,
    u_int32_t mtime, int gotmagic)
d54 1
a54 1
	if (fd < 0 || !mode)
d57 17
a73 2
	if ((mode[0] != 'r' && mode[0] != 'w') || mode[1] != '\0') {
		errno = EINVAL;
a74 1
	}
d80 1
a80 1
	s->gotmagic = gotmagic;
d82 1
a82 1
	s->mode = mode[0];
@


1.4
log
@Remove the rcsid which were intentionally skipped in the "purge of 2009"
because the -V command printed them... gut the -V (and -L, while there)
to be silent.
ok miod jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: nullopen.c,v 1.3 2005/06/26 18:20:26 otto Exp $	*/
d63 1
a63 1
	if ((s = (null_stream *) calloc(1, sizeof(null_stream))) == NULL)
@


1.3
log
@be a bit more carefull not writing to the stream after the timestamps
have been set. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: nullopen.c,v 1.2 2004/01/22 18:49:35 millert Exp $	*/
a29 3

const char null_rcsid[] =
    "$OpenBSD: nullopen.c,v 1.2 2004/01/22 18:49:35 millert Exp $";
@


1.2
log
@Remove 3 unused variables.
@
text
@d1 1
a1 1
/*	$OpenBSD: nullopen.c,v 1.1 2003/09/05 06:08:15 deraadt Exp $	*/
d32 1
a32 1
    "$OpenBSD: nullopen.c,v 1.1 2003/09/05 06:08:15 deraadt Exp $";
d78 1
a78 1
null_close(void *cookie, struct z_info *info)
d95 1
@


1.1
log
@we kind of need this new file from canacar
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d32 1
a32 1
    "$OpenBSD$";
a105 3
	size_t len;
	int done = 0;
	int err;
@

