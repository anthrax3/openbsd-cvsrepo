head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.12
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.10
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.6
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.24
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.20
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.18
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.16
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.14
	OPENBSD_5_0:1.6.0.12
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.10
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.8
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.4
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.5.0.6
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.4
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4;
locks; strict;
comment	@# @;


1.8
date	2015.04.09.19.37.35;	author millert;	state Exp;
branches;
next	1.7;
commitid	P0viPGRk5dIgWYOz;

1.7
date	2014.05.07.21.42.50;	author zhuk;	state Exp;
branches;
next	1.6;

1.6
date	2008.08.20.09.22.02;	author mpf;	state Exp;
branches;
next	1.5;

1.5
date	2007.05.20.00.27.27;	author jsg;	state Exp;
branches;
next	1.4;

1.4
date	2003.07.29.07.42.45;	author otto;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.11.02.32.02;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.23.19.04.24;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.23.16.10.42;	author millert;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Both more and less accept options beginning with '+'.
From Tim van der Molen
@
text
@#!/bin/sh -
#
# $OpenBSD: zmore,v 1.7 2014/05/07 21:42:50 zhuk Exp $
#
# Copyright (c) 2003 Todd C. Miller <Todd.Miller@@courtesan.com>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Sponsored in part by the Defense Advanced Research Projects
# Agency (DARPA) and Air Force Research Laboratory, Air Force
# Materiel Command, USAF, under agreement number F39502-99-1-0512.
#

# Pull out any command line flags so we can pass them to more/less
flags=
while test $# -ne 0; do
	case "$1" in
		--)
			shift
			break
			;;
		-*|+*)
			flags="$flags $1"
			shift
			;;
		*)
			break
			;;
	esac
done

if [ `basename $0` == "zless" ] ; then
	pager=less
else
	pager=more
fi

# No files means read from stdin
if [ $# -eq 0 ]; then
	compress -cdf 2>&1 | $pager $flags
	exit 0
fi

oterm=`stty -g 2>/dev/null`
while test $# -ne 0; do
	compress -cdf "$1" 2>&1 | $pager $flags
	prev="$1"
	shift
	if tty -s && test -n "$oterm" -a $# -gt 0; then
		#echo -n "--More--(Next file: $1)"
		echo -n "$prev (END) - Next: $1 "
		trap "stty $oterm 2>/dev/null" 0 1 2 3 13 15
		stty cbreak -echo 2>/dev/null
		REPLY=`dd bs=1 count=1 2>/dev/null`
		stty $oterm 2>/dev/null
		trap - 0 1 2 3 13 15
		echo
		case "$REPLY" in
			s)
				shift
				;;
			e|q)
				break
				;;
		esac
	fi
done
exit 0
@


1.7
log
@When you want more, you say "more".  When you want less, you say "less".
When you don't get what you asked for, you get angry.
When you add a tiny bit, it should be "more" or "less" still,
  or you'll get angry.
So lets make zmore(1) call more(1) and zless(1) call less(1),
  as it's supposed to be.

okay and input from ingo@@, no objections from author AKA millert@@
@
text
@d3 1
a3 1
# $OpenBSD: zmore,v 1.6 2008/08/20 09:22:02 mpf Exp $
d32 1
a32 1
		-*)
@


1.6
log
@Use and report errors that inflate(3) can return, instead of
aborting silently, and pretending everything went alright.
This lets gzip(1) (especially gzip -t) detect truncated archives
and curruptions that violate the structure of the zlib format.
Unquiet compress(1) in zless/zmore, so the user has a chance
to see errors on corrupted archives.
OK millert@@, markus@@
@
text
@d3 1
a3 1
# $OpenBSD: zmore,v 1.5 2007/05/20 00:27:27 jsg Exp $
d43 1
a43 1
	pager=${PAGER-less}
d45 1
a45 1
	pager=${PAGER-more}
@


1.5
log
@Add support for zmore being called as zless,
same behaviour but pager defaults to less instead of more.
Incorporating feedback from millert@@ and jmc@@

ok millert@@ simon@@
@
text
@d3 1
a3 1
# $OpenBSD: zmore,v 1.4 2003/07/29 07:42:45 otto Exp $
d50 1
a50 1
	compress -cdfq 2>&1 | $pager $flags
d56 1
a56 1
	compress -cdfq "$1" 2>&1 | $pager $flags
@


1.4
log
@Add $OpenBSD$
ok millert@@
@
text
@d3 1
a3 1
# $OpenBSD$
d42 6
d50 1
a50 1
	compress -cdfq 2>&1 | ${PAGER-more} $flags
d56 1
a56 1
	compress -cdfq "$1" 2>&1 | ${PAGER-more} $flags
@


1.3
log
@No longer need to assume -g when reading from stdin.
@
text
@d3 2
@


1.2
log
@Make zmore read from stdin when no files are specified and try to
ascertain wether or not we have a tty.  Also add a skeleton manual page.
@
text
@d1 1
a1 1
#!/bin/sh
a40 1
# XXX - cannot distinguish between gzip or compress, assume gzip
d42 1
a42 1
	compress -cdfgq 2>&1 | ${PAGER-more} $flags
@


1.1
log
@Add a simple zmore; man page and Makefile changes to be added later
@
text
@d40 2
d43 2
a44 2
	echo "usage: zmore filename ..."
	exit 1
d49 1
a49 1
	gzip -cdfq "$1" 2>&1 | ${PAGER-more} $flags
d52 18
a69 17
	test $# -eq 0 && break
	#echo -n "--More--(Next file: $1)"
	echo -n "$prev (END) - Next: $1 "
	trap "stty $oterm 2>/dev/null" 0 1 2 3 13 15
	stty cbreak -echo 2>/dev/null
	REPLY=`dd bs=1 count=1 2>/dev/null`
	stty $oterm 2>/dev/null
	trap - 0 1 2 3 13 15
	echo
	case "$REPLY" in
		s)
			shift
			;;
		e|q)
			break
			;;
	esac
@

