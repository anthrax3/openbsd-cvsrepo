head	1.17;
access;
symbols
	OPENBSD_6_2:1.17.0.6
	OPENBSD_6_2_BASE:1.17
	OPENBSD_6_1:1.17.0.8
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.4
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.14.0.6
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.12.0.22
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.20
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.16
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.14
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.12
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.10
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.24
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.20
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.18
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.16
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.14
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.12
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.10
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.8
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.6
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.5.0.10
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.8
	OPENBSD_2_8:1.5.0.6
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.4
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.17
date	2015.12.07.18.11.37;	author schwarze;	state Exp;
branches;
next	1.16;
commitid	isOH6Fckb2KfgYJ2;

1.16
date	2015.09.25.16.19.26;	author tedu;	state Exp;
branches;
next	1.15;
commitid	eMeNHtxKPFsUxFcN;

1.15
date	2015.09.23.22.01.30;	author millert;	state Exp;
branches;
next	1.14;
commitid	v8FftQ6aCZlbJxgF;

1.14
date	2015.02.08.23.40.34;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	yGZX28AeTChVE8eY;

1.13
date	2015.01.16.06.40.05;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	Uu5nFG3wCl0LACBb;

1.12
date	2009.10.27.23.59.35;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2004.05.09.03.20.45;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2004.03.08.19.02.00;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.07.10.00.06.50;	author david;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.10.22.20.44;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.04.16.24.45;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.02.16.21.27.43;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	99.08.21.18.02.29;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	99.08.20.09.20.39;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.08.19.22.17.38;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.06.29.20.29.34;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	96.06.23.04.22.36;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.17
log
@delete pointless setlocale(3) call;
forgotten to commit, OK deraadt@@ some time ago
@
text
@/*
 * Copyright (c) 1994 SigmaSoft, Th. Lockert <tholo@@sigmasoft.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>	/* MACHINE MACHINE_ARCH */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

static void __dead usage(void);

static int machine;

int
main(int argc, char *argv[])
{
	extern char *__progname;
	int short_form = 0, c;
	char *arch, *opts;

	machine = strcmp(__progname, "machine") == 0;
	if (machine) {
		arch = MACHINE;
		opts = "a";
		short_form = 1;
	} else {
		arch = MACHINE_ARCH;
		opts = "ks";
	}
	while ((c = getopt(argc, argv, opts)) != -1) {
		switch (c) {
		case 'a':
			arch = MACHINE_ARCH;
			break;
		case 'k':
			arch = MACHINE;
			break;
		case 's':
			short_form = 1;
			break;
		default:
			usage();
		}
	}
	if (optind != argc)
		usage();

	printf("%s%s\n", short_form ? "" : "OpenBSD.", arch);
	return (0);
}

static void __dead
usage(void)
{
	if (machine)
		fprintf(stderr, "usage: machine [-a]\n");
	else
		fprintf(stderr, "usage: arch [-ks]\n");
	exit(1);
}
@


1.16
log
@tidy up a bit more
@
text
@a27 1
#include <locale.h>
a42 2

	setlocale(LC_ALL, "");
@


1.15
log
@No need for err.h, avoid excess fputs() calls and return from main
instead of calling exit().  From Michael Reed.
@
text
@d34 1
a34 1
static void usage(void);
d56 1
a56 1
	while ((c = getopt(argc, argv, opts)) != -1)
a68 1
			/* NOTREACHED */
d70 2
a71 1
	if (optind != argc) {
d73 3
a75 6
		/* NOTREACHED */
	}
	if (!short_form)
		fputs("OpenBSD.", stdout);
	puts(arch);
	return 0;
d78 1
a78 1
static void
@


1.14
log
@in getopt() blocks, stop incrementing flag variable which are supposed
to just be 0/1
ok miod florian
@
text
@a27 1
#include <err.h>
d75 4
a78 7
	if (!short_form) {
		fputs("OpenBSD", stdout);
		fputc('.', stdout);
	}
	fputs(arch, stdout);
	fputc('\n', stdout);
	exit(0);
@


1.13
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d52 1
a52 1
		short_form++;
d66 1
a66 1
			short_form++;
@


1.12
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d26 1
a26 1
#include <sys/param.h>
@


1.11
log
@compress code
@
text
@a25 4
#ifndef lint
static char rcsid[] = "$OpenBSD: arch.c,v 1.10 2004/03/08 19:02:00 deraadt Exp $";
#endif /* not lint */

@


1.10
log
@knf
@
text
@d27 1
a27 1
static char rcsid[] = "$OpenBSD: arch.c,v 1.9 2003/07/10 00:06:50 david Exp $";
a45 4
	char *arch;
	char *opts;
	int c;
	int short_form = 0;
d47 2
@


1.9
log
@add missing includes
ok deraadt@@ tedu@@
@
text
@d27 1
a27 1
static char rcsid[] = "$OpenBSD: arch.c,v 1.8 2003/06/10 22:20:44 deraadt Exp $";
d65 12
a76 12
			case 'a':
				arch = MACHINE_ARCH;
				break;
			case 'k':
				arch = MACHINE;
				break;
			case 's':
				short_form++;
				break;
			default:
				usage();
				/* NOTREACHED */
@


1.8
log
@mostly ansi cleanup; pval ok
@
text
@d27 1
a27 1
static char rcsid[] = "$OpenBSD: arch.c,v 1.7 2003/06/04 16:24:45 deraadt Exp $";
d35 2
@


1.7
log
@term 3 & 4 from tholo after permission
@
text
@d27 1
a27 1
static char rcsid[] = "$OpenBSD: arch.c,v 1.6 2002/02/16 21:27:43 millert Exp $";
d42 1
a42 3
main(argc, argv)
	int argc;
	char *argv[];
d90 1
a90 1
usage()
@


1.6
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@a12 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by SigmaSoft, Th.  Lockert.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d27 1
a27 1
static char rcsid[] = "$OpenBSD: arch.c,v 1.5 1999/08/21 18:02:29 espie Exp $";
@


1.5
log
@Let arch compile again...
@
text
@d32 1
a32 1
static char rcsid[] = "$OpenBSD: arch.c,v 1.4 1999/08/20 09:20:39 millert Exp $";
d42 1
a42 1
static void usage __P((void));
@


1.4
log
@re-order includes and remove <sys/utsname.h> since we don't use uname()
Use __progname, not argv[0] for determining how we were called
Fix a typo
@
text
@d32 1
a32 1
static char rcsid[] = "$OpenBSD: arch.c,v 1.3 1999/08/19 22:17:38 niklas Exp $";
a50 1
	struct utsname uts;
@


1.3
log
@Merge arch and machine sources.  Add some options so it will
be easier to get at the ISA (instruction set architecture)
@
text
@d32 1
a32 1
static char rcsid[] = "$OpenBSD: arch.c,v 1.2 1996/06/29 20:29:34 tholo Exp $";
d35 4
a39 1
#include <locale.h>
a40 3
#include <sys/param.h>
#include <sys/utsname.h>
#include <err.h>
d56 1
d60 1
a60 1
	machine = strcmp (argv[0], "machine") == 0;
d82 1
a82 1
				/* NOTREASCHED */
@


1.2
log
@Include OS as part of output; add -k option like SunOS
@
text
@d32 1
a32 1
static char rcsid[] = "$OpenBSD: arch.c,v 1.1 1996/06/23 04:22:36 tholo Exp $";
d44 2
d53 1
d55 1
d59 10
a68 2
	arch = MACHINE_ARCH;
	while ((c = getopt(argc, argv, "k")) != -1)
d70 3
d76 3
d87 3
a89 3
	if (uname(&uts)) {
		err(1, NULL);
		/* NOTREACHED */
a90 2
	fputs(uts.sysname, stdout);
	fputc('.', stdout);
d99 4
a102 1
	fprintf(stderr, "usage: arch [-k]\n");
@


1.1
log
@Add arch(1)
@
text
@d32 1
a32 1
static char rcsid[] = "$OpenBSD$";
d35 3
d39 4
d49 28
a76 1
	puts(MACHINE_ARCH);
d78 7
@
