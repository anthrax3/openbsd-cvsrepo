head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.4
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.13.0.14
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.10
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.6
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.8
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.6.0.46
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.42
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.40
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.38
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.36
	OPENBSD_5_0:1.6.0.34
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.32
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.30
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.16
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.14
	OPENBSD_2_8:1.3.0.12
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.10
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.8
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.6
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.4
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2017.07.07.09.14.26;	author fcambus;	state Exp;
branches;
next	1.13;
commitid	Z3Nr3Tgp5JM9CAGX;

1.13
date	2014.07.22.07.30.24;	author jsg;	state Exp;
branches;
next	1.12;
commitid	5F2TXUtxGWuYgYJc;

1.12
date	2014.07.20.12.08.55;	author guenther;	state Exp;
branches;
next	1.11;
commitid	S3moNyJOYK9CLzJu;

1.11
date	2014.07.20.09.31.25;	author guenther;	state Exp;
branches;
next	1.10;
commitid	sgiDhU5W6KOMYLqU;

1.10
date	2014.07.20.08.12.46;	author guenther;	state Exp;
branches;
next	1.9;
commitid	qbZdS8s4KEeVt81G;

1.9
date	2014.07.20.07.35.04;	author guenther;	state Exp;
branches;
next	1.8;
commitid	2cOmMOs302nEGrCZ;

1.8
date	2014.07.20.06.24.19;	author guenther;	state Exp;
branches;
next	1.7;
commitid	rQULuZr296C7Ucp5;

1.7
date	2014.07.19.23.50.38;	author guenther;	state Exp;
branches;
next	1.6;
commitid	J1fNmylmVMpKGeua;

1.6
date	2003.06.03.02.56.18;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.07.20.41.21;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.19.19.02.16;	author mpech;	state Exp;
branches;
next	1.3;

1.3
date	98.03.12.04.57.45;	author art;	state Exp;
branches;
next	1.2;

1.2
date	96.03.27.19.33.11;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.15;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.15;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Remove unnecessary #ifdefs in telnet. No binary change.

OK deraadt@@, tedu@@
@
text
@/*	$OpenBSD: terminal.c,v 1.13 2014/07/22 07:30:24 jsg Exp $	*/
/*	$NetBSD: terminal.c,v 1.5 1996/02/28 21:04:17 thorpej Exp $	*/

/*
 * Copyright (c) 1988, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "telnet_locl.h"

#include <arpa/telnet.h>
#include <errno.h>
#include <unistd.h>

Ring		ttyoring, ttyiring;
unsigned char	ttyobuf[2*BUFSIZ], ttyibuf[BUFSIZ];

int termdata;			/* Debugging flag */

/*
 * initialize the terminal data structures.
 */

void
init_terminal(void)
{
	struct termios tc;

	ring_init(&ttyoring, ttyobuf, sizeof ttyobuf);
	ring_init(&ttyiring, ttyibuf, sizeof ttyibuf);

	tcgetattr(0, &tc);
	autoflush = (tc.c_lflag & NOFLSH) == 0;
}

/*
 *		Send as much data as possible to the terminal.
 *
 *		Return value:
 *			-1: No useful work done, data waiting to go out.
 *			 0: No data was waiting, so nothing was done.
 *			 1: All waiting data was written out.
 *			 n: All data - n was written out.
 */

int
ttyflush(int drop)
{
    int n, n0, n1;

    n0 = ring_full_count(&ttyoring);
    if ((n1 = n = ring_full_consecutive(&ttyoring)) > 0) {
	if (drop) {
	    tcflush(fileno(stdout), TCOFLUSH);
	    /* we leave 'n' alone! */
	} else {
	    n = write(tout, ttyoring.consume, n);
	}
    }
    if (n > 0) {
	if (termdata && n) {
	    Dump('>', ttyoring.consume, n);
	}
	/*
	 * If we wrote everything, and the full count is
	 * larger than what we wrote, then write the
	 * rest of the buffer.
	 */
	if (n1 == n && n0 > n) {
		n1 = n0 - n;
		if (!drop)
			n1 = write(tout, ttyoring.bottom, n1);
		if (n1 > 0)
			n += n1;
	}
	ring_consumed(&ttyoring, n);
    }
    if (n < 0) {
	if (errno == EPIPE)
		kill(0, SIGQUIT);
	return -1;
    }
    if (n == n0) {
	if (n0)
	    return -1;
	return 0;
    }
    return n0 - n + 1;
}


/*
 * These routines decides on what the mode should be (based on the values
 * of various global variables).
 */

int
getconnmode(void)
{
    int mode = 0;

    if (my_want_state_is_dont(TELOPT_ECHO))
	mode |= MODE_ECHO;

    if (localflow)
	mode |= MODE_FLOW;

    if ((eight & 1) || my_want_state_is_will(TELOPT_BINARY))
	mode |= MODE_INBIN;

    if (eight & 2)
	mode |= MODE_OUT8;
    if (his_want_state_is_will(TELOPT_BINARY))
	mode |= MODE_OUTBIN;

#ifdef	KLUDGELINEMODE
    if (kludgelinemode) {
	if (my_want_state_is_dont(TELOPT_SGA)) {
	    mode |= (MODE_TRAPSIG|MODE_EDIT);
	    if (dontlecho && (clocks.echotoggle > clocks.modenegotiated)) {
		mode &= ~MODE_ECHO;
	    }
	}
	return(mode);
    }
#endif
    if (my_want_state_is_will(TELOPT_LINEMODE))
	mode |= linemode;
    return(mode);
}

void
setconnmode(int force)
{
    int newmode;

    newmode = getconnmode()|(force?MODE_FORCE:0);

    TerminalNewMode(newmode);
}

void
setcommandmode(void)
{
    TerminalNewMode(-1);
}
@


1.13
log
@use ansi style function declarations
with suggestions from and ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: terminal.c,v 1.12 2014/07/20 12:08:55 guenther Exp $	*/
a42 28

# ifndef VDISCARD
cc_t termFlushChar;
# endif
# ifndef VLNEXT
cc_t termLiteralNextChar;
# endif
# ifndef VWERASE
cc_t termWerasChar;
# endif
# ifndef VREPRINT
cc_t termRprntChar;
# endif
# ifndef VSTART
cc_t termStartChar;
# endif
# ifndef VSTOP
cc_t termStopChar;
# endif
# ifndef VEOL
cc_t termForw1Char;
# endif
# ifndef VEOL2
cc_t termForw2Char;
# endif
# ifndef VSTATUS
cc_t termAytChar;
# endif
@


1.12
log
@Eliminate silly call() routine that fakes up internal calls as if
the user typed in undocumented arguments by splitting two functions
and doing normal (shock!) C calls.

Move extern declarations to externs.h
Eliminate another function cast
@
text
@d1 1
a1 1
/*	$OpenBSD: terminal.c,v 1.11 2014/07/20 09:31:25 guenther Exp $	*/
d77 1
a77 1
init_terminal()
a87 1

d98 2
a99 4

    int
ttyflush(drop)
    int drop;
d149 2
a150 3

    int
getconnmode()
d184 2
a185 3
    void
setconnmode(force)
    int force;
d194 2
a195 3

    void
setcommandmode()
@


1.11
log
@VSUSP and SIGTSTP are required by POSIX
@
text
@d1 1
a1 1
/*	$OpenBSD: terminal.c,v 1.10 2014/07/20 08:12:46 guenther Exp $	*/
a155 1
    extern int linemode;
a156 3
#ifdef	KLUDGELINEMODE
    extern int kludgelinemode;
#endif
@


1.10
log
@More encryption tentacles: intr_happened and intr_waiting vanish
Push more includes into .c files
Make ring.c only need ring.h
@
text
@d1 1
a1 1
/*	$OpenBSD: terminal.c,v 1.9 2014/07/20 07:35:04 guenther Exp $	*/
a48 3
# endif
# ifndef VSUSP
cc_t termSuspChar;
@


1.9
log
@Eliminate trivial wrappers TerminalWrite() and TerminalRead()
Replace TerminalFlushOutput() with tcflush().
Replace TerminalAutoFlush() with check of tty's NOFLSH flag as
	documented in the manpage.
Push <netdb.h> into .c files
@
text
@d1 1
a1 1
/*	$OpenBSD: terminal.c,v 1.8 2014/07/20 06:24:19 guenther Exp $	*/
d35 2
@


1.8
log
@ring_init() can't fail
KNF ring.h
@
text
@d1 1
a1 1
/*	$OpenBSD: terminal.c,v 1.7 2014/07/19 23:50:38 guenther Exp $	*/
d35 2
d80 2
d84 3
a86 1
	autoflush = TerminalAutoFlush();
d110 1
a110 1
	    TerminalFlushOutput();
d113 1
a113 1
	    n = TerminalWrite((char *)ttyoring.consume, n);
d128 1
a128 1
			n1 = TerminalWrite(ttyoring.bottom, n1);
@


1.7
log
@Flense the telnet code base of unwanted ifdefs: authentication/encryption
tn3270, sgtty, pre-POSIX and other ancient system support, etc.  Brings up
to date the manpage with what we support.

ok matthieu@@ beck@@ jmc@@ millert@@ deraadt@@ okan@@
@
text
@d1 1
a1 1
/*	$OpenBSD: terminal.c,v 1.6 2003/06/03 02:56:18 millert Exp $	*/
d75 1
a75 1
    void
d78 3
a80 7
    if (ring_init(&ttyoring, ttyobuf, sizeof ttyobuf) != 1) {
	exit(1);
    }
    if (ring_init(&ttyiring, ttyibuf, sizeof ttyibuf) != 1) {
	exit(1);
    }
    autoflush = TerminalAutoFlush();
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: terminal.c,v 1.5 2002/12/07 20:41:21 millert Exp $	*/
a39 1
#ifdef	USE_TERMIO
a69 4
#else
cc_t termForw2Char;
cc_t termAytChar;
#endif
a160 3
    if (In3270)
	return(MODE_FLOW);

a195 3
#ifdef ENCRYPTION
    static int enc_passwd = 0;
#endif
a199 16

#ifdef  ENCRYPTION
    if ((newmode & (MODE_ECHO|MODE_EDIT)) == MODE_EDIT) {
	if (my_want_state_is_will(TELOPT_ENCRYPT)
	    && (enc_passwd == 0) && !encrypt_output) {
	    encrypt_request_start(0, 0);
	    enc_passwd = 1;
	}
    } else {
	if (enc_passwd) {
	    encrypt_request_end();
	    enc_passwd = 0;
	}
    }
#endif

@


1.5
log
@Treat EPIPE writing to the terminal the same as SIGQUIT from the user.
Closes PR 3016.
@
text
@d1 1
a1 1
/*	$OpenBSD: terminal.c,v 1.4 2001/11/19 19:02:16 mpech Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: terminal.c,v 1.3 1998/03/12 04:57:45 art Exp $	*/
d141 3
a143 1
    if (n < 0)
d145 1
@


1.3
log
@encryption support from kth-krb 0.9.8 (kerberos only)
plus some tweaks for better binary/8-bit support.
@
text
@d1 1
a1 1
/*	$OpenBSD: terminal.c,v 1.2 1996/03/27 19:33:11 niklas Exp $	*/
d112 1
a112 1
    register int n, n0, n1;
d204 1
a204 1
    register int newmode;
@


1.2
log
@From NetBSD: merge of 960317
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
a37 16
#ifndef lint
#if 0
static char sccsid[] = "@@(#)terminal.c	8.2 (Berkeley) 2/16/95";
static char rcsid[] = "$NetBSD: terminal.c,v 1.5 1996/02/28 21:04:17 thorpej Exp $";
#else
static char rcsid[] = "$OpenBSD$";
#endif
#endif /* not lint */

#include <arpa/telnet.h>
#include <sys/types.h>

#include "ring.h"

#include "externs.h"
#include "types.h"
d120 1
a120 1
	    n = TerminalWrite(ttyoring.consume, n);
d176 1
a176 1
    if (my_want_state_is_will(TELOPT_BINARY))
d179 2
d205 3
d213 14
@


1.1
log
@Initial revision
@
text
@d1 3
d38 6
a43 2
/* from: static char sccsid[] = "@@(#)terminal.c	8.1 (Berkeley) 6/6/93"; */
static char *rcsid = "$Id: terminal.c,v 1.3 1994/02/25 03:00:47 cgd Exp $";
d151 2
a152 1
		n += n1;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

