head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.16
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.14
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.10
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.6
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.8
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.4
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.6.0.46
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.42
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.40
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.38
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.36
	OPENBSD_5_0:1.6.0.34
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.32
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.30
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.14
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.12
	OPENBSD_2_8:1.4.0.10
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.8
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.6
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2014.07.20.08.12.46;	author guenther;	state Exp;
branches;
next	1.8;
commitid	qbZdS8s4KEeVt81G;

1.8
date	2014.07.20.06.24.19;	author guenther;	state Exp;
branches;
next	1.7;
commitid	rQULuZr296C7Ucp5;

1.7
date	2014.07.19.23.50.38;	author guenther;	state Exp;
branches;
next	1.6;
commitid	J1fNmylmVMpKGeua;

1.6
date	2003.06.03.02.56.18;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.17.17.20.49;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.05.15.03.16.42;	author art;	state Exp;
branches;
next	1.3;

1.3
date	98.03.12.04.57.39;	author art;	state Exp;
branches;
next	1.2;

1.2
date	96.03.27.19.33.06;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.14;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.14;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@More encryption tentacles: intr_happened and intr_waiting vanish
Push more includes into .c files
Make ring.c only need ring.h
@
text
@/*	$OpenBSD: ring.h,v 1.8 2014/07/20 06:24:19 guenther Exp $	*/
/*	$NetBSD: ring.h,v 1.5 1996/02/28 21:04:09 thorpej Exp $	*/

/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)ring.h	8.1 (Berkeley) 6/6/93
 */

/*
 * This defines a structure for a ring buffer.
 *
 * The circular buffer has two parts:
 *(((
 *	full:	[consume, supply)
 *	empty:	[supply, consume)
 *]]]
 *
 */
typedef struct {
	unsigned char	*consume;	/* where data comes out of */
	unsigned char	*supply;	/* where data comes in to */
	unsigned char	*bottom;	/* lowest address in buffer */
	unsigned char	*top;		/* highest address+1 in buffer */
	unsigned char	*mark;		/* marker (user defined) */
	int		size;		/* size in bytes of buffer */
	unsigned long	consumetime;	/* help us keep straight full, empty, etc. */
	unsigned long	supplytime;
} Ring;

/* Here are some functions and macros to deal with the ring buffer */

/* Initialization routine */
void	ring_init(Ring *ring, unsigned char *buffer, int size);

/* Data movement routines */
void	ring_supply_data(Ring *ring, unsigned char *buffer, int count);

/* Buffer state transition routines */
void	ring_supplied(Ring *ring, int count);
void	ring_consumed(Ring *ring, int count);

/* Buffer state query routines */
int	ring_empty_count(Ring *ring);
int	ring_empty_consecutive(Ring *ring);
int	ring_full_count(Ring *ring);
int	ring_full_consecutive(Ring *ring);

/* Buffer urgent data handling */
void	ring_clear_mark(Ring *);
void	ring_mark(Ring *);
int	ring_at_mark(Ring *);

@


1.8
log
@ring_init() can't fail
KNF ring.h
@
text
@d1 1
a1 1
/*	$OpenBSD: ring.h,v 1.7 2014/07/19 23:50:38 guenther Exp $	*/
d52 2
a53 2
	u_long	consumetime;	/* help us keep straight full, empty, etc. */
	u_long	supplytime;
@


1.7
log
@Flense the telnet code base of unwanted ifdefs: authentication/encryption
tn3270, sgtty, pre-POSIX and other ancient system support, etc.  Brings up
to date the manpage with what we support.

ok matthieu@@ beck@@ jmc@@ millert@@ deraadt@@ okan@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ring.h,v 1.6 2003/06/03 02:56:18 millert Exp $	*/
d46 8
a53 8
    unsigned char	*consume,	/* where data comes out of */
			*supply,	/* where data comes in to */
			*bottom,	/* lowest address in buffer */
			*top,		/* highest address+1 in buffer */
			*mark;		/* marker (user defined) */
    int		size;		/* size in bytes of buffer */
    u_long	consumetime,	/* help us keep straight full, empty, etc. */
		supplytime;
d59 1
a59 2
extern int
	ring_init(Ring *ring, unsigned char *buffer, int count);
d62 1
a62 2
extern void
	ring_supply_data(Ring *ring, unsigned char *buffer, int count);
d65 2
a66 3
extern void
	ring_supplied(Ring *ring, int count),
	ring_consumed(Ring *ring, int count);
d69 9
a77 9
extern int
	ring_empty_count(Ring *ring),
	ring_empty_consecutive(Ring *ring),
	ring_full_count(Ring *ring),
	ring_full_consecutive(Ring *ring);

extern void
    ring_clear_mark(Ring *),
    ring_mark(Ring *);
a78 3

extern int
    ring_at_mark(Ring *);
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ring.h,v 1.5 2002/02/17 17:20:49 millert Exp $	*/
a50 4
#if    defined(ENCRYPTION)
    unsigned char	*clearto;       /* Data to this point is clear text */
    unsigned char	*encryyptedto;  /* Data is encrypted to here */
#endif
a64 4
#ifdef notdef
extern void
	ring_consume_data(Ring *ring, unsigned char *buffer, int count);
#endif
a76 7

#if    defined(ENCRYPTION)
extern void
	ring_encrypt (Ring *ring, void (*func)()),
	ring_clearto (Ring *ring);
#endif

@


1.5
log
@telnet used a P macro instead of __P -- g/c that too.
@
text
@d1 1
a1 1
/*	$OpenBSD: ring.h,v 1.4 1998/05/15 03:16:42 art Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@cleanup warnings.
@
text
@d1 1
a1 1
/*	$OpenBSD: ring.h,v 1.3 1998/03/12 04:57:39 art Exp $	*/
a38 3
#include <sys/cdefs.h>
#define P __P

d68 1
a68 1
	ring_init P((Ring *ring, unsigned char *buffer, int count));
d72 1
a72 1
	ring_supply_data P((Ring *ring, unsigned char *buffer, int count));
d75 1
a75 1
	ring_consume_data P((Ring *ring, unsigned char *buffer, int count));
d80 2
a81 2
	ring_supplied P((Ring *ring, int count)),
	ring_consumed P((Ring *ring, int count));
d85 4
a88 4
	ring_empty_count P((Ring *ring)),
	ring_empty_consecutive P((Ring *ring)),
	ring_full_count P((Ring *ring)),
	ring_full_consecutive P((Ring *ring));
d98 2
a99 2
    ring_clear_mark P((Ring *)),
    ring_mark P((Ring *));
d103 1
a103 1
    ring_at_mark P((Ring *));
@


1.3
log
@encryption support from kth-krb 0.9.8 (kerberos only)
plus some tweaks for better binary/8-bit support.
@
text
@d1 1
a1 1
/*	$OpenBSD: ring.h,v 1.2 1996/03/27 19:33:06 niklas Exp $	*/
d103 4
@


1.2
log
@From NetBSD: merge of 960317
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d58 4
d93 6
d101 2
a102 2
    ring_clear_mark(),
    ring_mark();
@


1.1
log
@Initial revision
@
text
@d1 3
a36 1
 *	$Id: ring.h,v 1.3 1994/02/25 03:00:36 cgd Exp $
d39 2
a40 9
#if defined(P)
# undef P
#endif

#if defined(__STDC__) || defined(LINT_ARGS)
# define	P(x)	x
#else
# define	P(x)	()
#endif
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

