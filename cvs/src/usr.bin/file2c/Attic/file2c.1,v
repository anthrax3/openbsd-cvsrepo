head	1.11;
access;
symbols
	OPENBSD_5_5:1.10.0.30
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.26
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.24
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.22
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.20
	OPENBSD_5_0:1.10.0.18
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.16
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.14
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.10
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.12
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.8
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.6
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.4
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.9.0.22
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.20
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.18
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.16
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.14
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.12
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.10
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.8
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.8.0.4
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_8:1.7.0.4
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.2
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.11
date	2014.03.25.21.03.00;	author millert;	state dead;
branches;
next	1.10;

1.10
date	2007.05.31.19.20.10;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.13.08.33.47;	author mpech;	state Exp;
branches;
next	1.8;

1.8
date	2001.01.29.01.57.58;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.07.21.11.08;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.07.04.11.53.54;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.07.02.20.11.45;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.06.05.01.21.24;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	98.11.04.22.36.40;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	98.09.26.19.54.43;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	96.08.26.07.47.06;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Remove file2c.  Nothing in the tree uses it and hexdump works as
well for most use cases.  OK deraadt@@, espie@@, gsoares@@
@
text
@.\" $OpenBSD: file2c.1,v 1.10 2007/05/31 19:20:10 jmc Exp $
.\"----------------------------------------------------------------------------
.\" "THE BEER-WARE LICENSE" (Revision 42):
.\" <phk@@freebsd.org> wrote this file.  As long as you retain this notice, you
.\" can do whatever you want with this file. If we meet some day, and you think
.\" this stuff is worth it, you can buy me a beer in return.  Poul-Henning Kamp
.\" ---------------------------------------------------------------------------
.\"
.\"
.Dd $Mdocdate: May 31 2007 $
.Dt FILE2C 1
.Os
.Sh NAME
.Nm file2c
.Nd convert file to c-source
.Sh SYNOPSIS
.Nm file2c
.Op Ar string
.Op Ar string
.Sh DESCRIPTION
The
.Nm
utility reads a file from the standard input and writes it to the standard
output, converting each
byte to its decimal representation on the fly.
.Pp
If the first
.Ar string
is present, it is printed before the data.
If the second
.Ar string
is present, it is printed after the data.
.Pp
This program is used to embed binary or other files into C source files,
for instance as a
.Li char[] .
.Sh EXAMPLES
The command:
.Bd -literal -offset indent
$ date | file2c 'const char date[] = {' ',0};'
.Ed
.Pp
will produce:
.Bd -literal -offset indent
const char date[] = {
83,97,116,32,74,97,110,32,50,56,32,49,54,58,50,56,58,48,53,
32,80,83,84,32,49,57,57,53,10
,0};
.Ed
.Sh SEE ALSO
.Xr hexdump 1 ,
.Xr od 1
@


1.10
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: file2c.1,v 1.9 2002/02/13 08:33:47 mpech Exp $
d10 1
a10 1
.Dd $Mdocdate$
@


1.9
log
@When you give command examples and etc., in a manual page prefix them with:
$ command
or
# command

deraadt@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: file2c.1,v 1.8 2001/01/29 01:57:58 niklas Exp $
d10 1
a10 1
.Dd January 28, 1995
@


1.8
log
@$OpenBSD$
@
text
@d1 1
a1 1
.\" $OpenBSD: file2c.1,v 1.7 2000/03/07 21:11:08 aaron Exp $
d40 1
a40 1
date | file2c 'const char date[] = {' ',0};'
@


1.7
log
@Various cleanup.
@
text
@d1 1
a8 1
.\" $Id: file2c.1,v 1.6 1999/07/04 11:53:54 aaron Exp $
@


1.6
log
@correct use of .Nm; some other formatting nits
@
text
@d8 1
a8 1
.\" $Id: file2c.1,v 1.5 1999/07/02 20:11:45 aaron Exp $
d23 2
a24 1
utility reads a file from stdin and writes it to stdout, converting each
d28 4
a31 3
.Op string
is present, it is printed before the data. If the second
.Op string
d35 3
a37 2
for instance as a char[].
.Sh EXAMPLE
d50 3
a52 2


@


1.5
log
@consistent .Dd usage; proper format is: .Dd Month DD, YYYY
@
text
@d8 1
a8 1
.\" $Id: file2c.1,v 1.4 1999/06/05 01:21:24 aaron Exp $
d22 1
a22 1
.Nm file2c
@


1.4
log
@- remove trailing white space
- remove arguments from .Os macros
- remove arguments from .Nm macros, where appropriate
- some more Dq/Sq/Ql insanity
- still lots to do in the usr.bin tree... :/
@
text
@d8 1
a8 1
.\" $Id: file2c.1,v 1.3 1998/11/04 22:36:40 aaron Exp $
d10 1
a10 1
.Dd Jan 28, 1995
@


1.3
log
@be really pedantic about punctuation following -mdoc macro'd text
@
text
@d8 1
a8 1
.\" $Id: file2c.1,v 1.2 1998/09/26 19:54:43 aaron Exp $
d26 3
a28 1
If the first 
a29 2
is present, it is printed before the data. If the second 
.Op string 
@


1.2
log
@usr.bin/ man page fixes, f-m.
@
text
@d8 1
a8 1
.\" $Id: file2c.1,v 1.1 1996/08/26 07:47:06 downsj Exp $
d15 1
a15 1
.Nd convert file to c-source.
@


1.1
log
@Add file2c from FreeBSD.
@
text
@d8 1
a8 1
.\" $Id: file2c.1,v 1.1 1995/01/29 00:49:49 phk Exp $
d18 2
a19 2
.Op "string"
.Op "string"
d28 1
a28 1
is present, it is printed before the data, if the second 
d32 1
a32 1
This program is used to embedd binary or other files into C source files,
@

