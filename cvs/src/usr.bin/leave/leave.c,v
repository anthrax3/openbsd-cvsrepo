head	1.17;
access;
symbols
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.4
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.13.0.6
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.4
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.12.0.16
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.14
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.12
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.10
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.26
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.22
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.20
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.18
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.16
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.14
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.12
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.10
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.8
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.6
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.4
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.5.0.6
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2015.10.09.01.37.08;	author deraadt;	state Exp;
branches;
next	1.16;
commitid	sbrB3Q5CNxcwZpfU;

1.16
date	2015.10.03.05.13.23;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	wrWENgQLeQHYdrRT;

1.15
date	2015.01.16.06.40.09;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	Uu5nFG3wCl0LACBb;

1.14
date	2014.11.26.18.34.51;	author millert;	state Exp;
branches;
next	1.13;
commitid	9QOFSShUOtA0kQLF;

1.13
date	2013.11.26.13.19.07;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2009.10.27.23.59.39;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2004.02.02.09.36.12;	author otto;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.10.22.20.47;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.03.02.56.09;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.06.12.06.07.15;	author mpech;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.27.47;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.19.19.02.14;	author mpech;	state Exp;
branches;
next	1.5;

1.5
date	2000.09.20.21.57.37;	author pjanzen;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.08.16.15.29;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	97.09.08.09.34.44;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.34.57;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.29;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Change all tame callers to namechange to pledge(2).
@
text
@/*	$OpenBSD: leave.c,v 1.16 2015/10/03 05:13:23 deraadt Exp $	*/
/*	$NetBSD: leave.c,v 1.4 1995/07/03 16:50:13 phil Exp $	*/

/*
 * Copyright (c) 1980, 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/time.h>
#include <ctype.h>
#include <err.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

static __dead void	usage(void);
static void		doalarm(u_int secs);

#define SECOND  1
#define MINUTE  (SECOND * 60)
#define	FIVEMIN	(5 * MINUTE)
#define HOUR    (MINUTE * 60)

/*
 * leave [[+]hhmm]
 *
 * Reminds you when you have to leave.
 * Leave prompts for input and goes away if you hit return.
 * It nags you like a mother hen.
 */
int
main(int argc, char *argv[])
{
	u_int secs;
	int hours, minutes;
	char c, *cp;
	struct tm *t;
	time_t now;
	int plusnow = 0, twentyfour;
	char buf[50];

	if (pledge("stdio proc", NULL) == -1)
		err(1, "pledge");

	if (setvbuf(stdout, NULL, _IOLBF, 0) != 0)
		errx(1, "Cannot set stdout to line buffered.");

	if (argc < 2) {
		(void)fputs("When do you have to leave? ", stdout);
		cp = fgets(buf, sizeof(buf), stdin);
		if (cp == NULL || *cp == '\n')
			exit(0);
	} else if (argc > 2)
		usage();
	else
		cp = argv[1];

	if (*cp == '+') {
		plusnow = 1;
		++cp;
	}

	for (hours = 0; (c = *cp) && c != '\n'; ++cp) {
		if (!isdigit((unsigned char)c))
			usage();
		hours = hours * 10 + (c - '0');
	}
	minutes = hours % 100;
	hours /= 100;
	/* determine 24 hours mode */
	twentyfour = hours > 12;

	if (minutes < 0 || minutes > 59)
		usage();
	if (plusnow)
		secs = (hours * HOUR) + (minutes * MINUTE);
	else {
		if (hours > 23)
			usage();
		(void)time(&now);
		t = localtime(&now);
		while (t->tm_hour > hours || 
		    (t->tm_hour == hours && t->tm_min >= minutes)) {
			if (twentyfour)
				hours += 24;
			else
				hours += 12;
		}

		secs = (hours - t->tm_hour) * HOUR;
		secs += (minutes - t->tm_min) * MINUTE;
	}
	doalarm(secs);
	exit(0);
}

static void
doalarm(u_int secs)
{
	int bother;
	time_t daytime;
	pid_t pid;

	switch (pid = fork()) {
	case 0:
		break;
	case -1:
		err(1, "Fork failed");
		/* NOTREACHED */
	default:
		(void)time(&daytime);
		daytime += secs;
		printf("Alarm set for %.16s. (pid %ld)\n",
		    ctime(&daytime), (long)pid);
		exit(0);
	}
	sleep(2);			/* let parent print set message */

	/*
	 * if write fails, we've lost the terminal through someone else
	 * causing a vhangup by logging in.
	 */
	if (secs >= FIVEMIN) {
		sleep(secs - FIVEMIN);
		if (puts("\a\aYou have to leave in 5 minutes.") == EOF)
			exit(0);
		secs = FIVEMIN;
	}

	if (secs >= MINUTE) {
		sleep(secs - MINUTE);
		if (puts("\a\aJust one more minute!") == EOF)
			exit(0);
	}

	for (bother = 10; bother--;) {
		sleep(MINUTE);
		if (puts("\a\aTime to leave!") == EOF)
			exit(0);
	}

	puts("\a\aThat was the last time I'll tell you.  Bye.");
	exit(0);
}

static __dead void
usage(void)
{
	fprintf(stderr, "usage: leave [[+]hhmm]\n");
	exit(1);
}
@


1.16
log
@leave does a fork, but other than that it is boring stdio.
tame "stdio proc" satisfies it.
ok doug
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.15 2015/01/16 06:40:09 deraadt Exp $	*/
d66 2
a67 2
	if (tame("stdio proc", NULL) == -1)
		err(1, "tame");
@


1.15
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.14 2014/11/26 18:34:51 millert Exp $	*/
d65 4
a68 1
	
@


1.14
log
@Prefer setvbuf() to setlinebuf() for portability; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.13 2013/11/26 13:19:07 deraadt Exp $	*/
a32 1
#include <sys/param.h>
@


1.13
log
@unsigned char casts for ctype
ok krw
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.12 2009/10/27 23:59:39 deraadt Exp $	*/
d67 1
a67 1
	if (setlinebuf(stdout) != 0)
@


1.12
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.11 2004/02/02 09:36:12 otto Exp $	*/
d86 1
a86 1
		if (!isdigit(c))
@


1.11
log
@Don't set alarms in the past + cleanup from NetBSD (minus the bugs there).
ok millert@@ hshoexer@@
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.10 2003/06/10 22:20:47 deraadt Exp $	*/
a31 13

#ifndef lint
static const char copyright[] =
"@@(#) Copyright (c) 1980, 1988, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)leave.c	8.1 (Berkeley) 6/6/93";
#endif
static const char rcsid[] = "$OpenBSD: leave.c,v 1.10 2003/06/10 22:20:47 deraadt Exp $";
#endif /* not lint */
@


1.10
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.9 2003/06/03 02:56:09 millert Exp $	*/
d34 1
a34 1
static char copyright[] =
d43 1
a43 1
static char rcsid[] = "$OpenBSD: leave.c,v 1.9 2003/06/03 02:56:09 millert Exp $";
d48 4
a52 3
#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>
d54 7
a60 2
void	usage(void);
void	doalarm(u_int secs);
d77 1
a77 1
	int plusnow;
d79 3
d84 1
a84 2
#define	MSG1	"When do you have to leave? "
		(void)write(STDOUT_FILENO, MSG1, sizeof(MSG1) - 1);
a95 4
	} else {
		plusnow = 0;
		(void)time(&now);
		t = localtime(&now);
d105 2
d111 1
a111 1
		secs = hours * 60 * 60 + minutes * 60;
d115 3
a117 1
		if (t->tm_hour > hours || 
d119 1
a119 2
			/* determine 24 hours mode */
		    	if (hours >= 13)
d125 2
a126 2
		secs = (hours - t->tm_hour) * 60 * 60;
		secs += (minutes - t->tm_min) * 60;
d132 1
a132 1
void
d139 7
a145 1
	if ((pid = fork())) {
d152 1
a152 1
	sleep((u_int)2);		/* let parent print set message */
a157 2
#define	FIVEMIN	(5 * 60)
#define	MSG2	"\07\07You have to leave in 5 minutes.\n"
d160 1
a160 1
		if (write(STDOUT_FILENO, MSG2, sizeof(MSG2) - 1) != sizeof(MSG2) - 1)
d165 3
a167 5
#define	ONEMIN	(60)
#define	MSG3	"\07\07Just one more minute!\n"
	if (secs >= ONEMIN) {
		sleep(secs - ONEMIN);
		if (write(STDOUT_FILENO, MSG3, sizeof(MSG3) - 1) != sizeof(MSG3) - 1)
a170 1
#define	MSG4	"\07\07Time to leave!\n"
d172 2
a173 2
		sleep((u_int)ONEMIN);
		if (write(STDOUT_FILENO, MSG4, sizeof(MSG4) - 1) != sizeof(MSG4) - 1)
d177 1
a177 2
#define	MSG5	"\07\07That was the last time I'll tell you.  Bye.\n"
	(void)write(STDOUT_FILENO, MSG5, sizeof(MSG5) - 1);
d181 1
a181 1
void
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.8 2002/06/12 06:07:15 mpech Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: leave.c,v 1.8 2002/06/12 06:07:15 mpech Exp $";
d64 1
a64 3
main(argc, argv)
	int argc;
	char **argv;
d126 1
a126 2
doalarm(secs)
	u_int secs;
d175 1
a175 1
usage()
@


1.8
log
@a real pid_t cleanup.

espie@@ ok for make/,
deraadt@@ one extra eye,
millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.7 2002/02/16 21:27:47 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d43 1
a43 1
static char rcsid[] = "$OpenBSD: leave.c,v 1.7 2002/02/16 21:27:47 millert Exp $";
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.6 2001/11/19 19:02:14 mpech Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: leave.c,v 1.6 2001/11/19 19:02:14 mpech Exp $";
d137 1
a137 1
	int pid;
d142 2
a143 2
		printf("Alarm set for %.16s. (pid %d)\n",
		    ctime(&daytime), pid);
@


1.6
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.5 2000/09/20 21:57:37 pjanzen Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: leave.c,v 1.5 2000/09/20 21:57:37 pjanzen Exp $";
d57 2
a58 2
void	usage __P((void));
void	doalarm __P((u_int secs));
@


1.5
log
@usage() if too many arguments
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.4 2000/05/08 16:15:29 espie Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: leave.c,v 1.4 2000/05/08 16:15:29 espie Exp $";
d72 3
a74 3
	register u_int secs;
	register int hours, minutes;
	register char c, *cp;
d135 1
a135 1
	register int bother;
@


1.4
log
@Fix 12 hours handling, so that you can say leave 1830 when it is 1800.
(Anything over 1300 is obviously 24 hours based, and interval arithmetic
is much simpler than the old code would make you believe...)
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.3 1997/09/08 09:34:44 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: leave.c,v 1.3 1997/09/08 09:34:44 deraadt Exp $";
d86 3
a88 1
	} else
@


1.3
log
@bring 12 hour semantics in line with man page; mikel
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.2 1996/06/26 05:34:57 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: leave.c,v 1.2 1996/06/26 05:34:57 deraadt Exp $";
d113 9
a121 5
		if (t->tm_hour >= 12)
			t->tm_hour -= 12;
		if (t->tm_hour > hours ||
		    (t->tm_hour == hours && minutes <= t->tm_min))
			hours += 12;
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: leave.c,v 1.4 1995/07/03 16:50:13 phil Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: leave.c,v 1.4 1995/07/03 16:50:13 phil Exp $";
d52 2
d57 3
d67 1
d75 2
a76 2
	struct tm *t, *localtime();
	time_t now, time();
d82 1
a82 1
		(void)write(1, MSG1, sizeof(MSG1) - 1);
d111 1
a111 2
		if (hours > 23 || t->tm_hour > hours ||
		    t->tm_hour == hours && minutes <= t->tm_min)
d113 5
d125 1
d130 1
a130 1
	time_t daytime, time();
a131 1
	char *ctime();
d133 1
a133 1
	if (pid = fork()) {
d150 1
a150 1
		if (write(1, MSG2, sizeof(MSG2) - 1) != sizeof(MSG2) - 1)
d159 1
a159 1
		if (write(1, MSG3, sizeof(MSG3) - 1) != sizeof(MSG3) - 1)
d166 1
a166 1
		if (write(1, MSG4, sizeof(MSG4) - 1) != sizeof(MSG4) - 1)
d171 1
a171 1
	(void)write(1, MSG5, sizeof(MSG5) - 1);
d175 1
@


1.1
log
@Initial revision
@
text
@d1 1
d47 1
a47 1
static char rcsid[] = "$NetBSD: leave.c,v 1.4 1995/07/03 16:50:13 phil Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
