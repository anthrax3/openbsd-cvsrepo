head	1.20;
access;
symbols
	OPENBSD_5_5:1.19.0.4
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.17.0.2
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.16.0.14
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.12
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.10
	OPENBSD_5_0:1.16.0.8
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.6
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.15.0.28
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.24
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.22
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.20
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.18
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.16
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.14
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.12
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.10
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.8
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.6
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.4
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.13.0.8
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.6
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.13.0.4
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.13.0.2
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_8:1.10.0.10
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.8
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.10.0.6
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.10.0.4
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.10.0.2
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.9.0.4
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2014.04.24.15.01.27;	author tedu;	state dead;
branches;
next	1.19;

1.19
date	2014.01.09.05.07.37;	author martynas;	state Exp;
branches;
next	1.18;

1.18
date	2013.11.27.13.32.02;	author okan;	state Exp;
branches;
next	1.17;

1.17
date	2013.04.16.18.57.39;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2009.10.27.23.59.43;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.03.02.56.15;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2003.04.30.21.30.38;	author vincent;	state Exp;
branches;
next	1.13;

1.13
date	2001.09.27.18.38.58;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2001.02.17.17.35.14;	author pjanzen;	state Exp;
branches;
next	1.11;

1.11
date	2001.01.31.20.12.49;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	98.04.26.17.01.02;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	97.06.20.10.00.01;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.04.13.02.30.34;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.04.13.02.21.16;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.03.26.18.02.37;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.01.15.23.43.10;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.08.30.15.15.26;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.08.30.11.10.32;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.39.00;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.04;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.04;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@I have not eaten for days.
And who says you will?
@
text
@/*	$OpenBSD: rwho.c,v 1.19 2014/01/09 05:07:37 martynas Exp $	*/

/*
 * Copyright (c) 1983 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/param.h>
#include <sys/file.h>
#include <dirent.h>
#include <protocols/rwhod.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <stdlib.h>
#include <time.h>
#include <utmp.h>
#include <vis.h>
#include <err.h>

DIR	*dirp;

struct	whod wd;
#define	NUSERS	1000
struct	myutmp {
	char	myhost[MAXHOSTNAMELEN];
	int	myidle;
	struct {
		char	out_line[9];		/* tty name + NUL */
		char	out_name[9];		/* user id + NUL */
		int32_t	out_time;		/* time on */
	} myutmp;
} myutmp[NUSERS];
int	nusers;

int utmpcmp(const void *, const void *);
__dead void usage(void);

#define	WHDRSIZE	(sizeof(wd) - sizeof(wd.wd_we))
/* 
 * this macro should be shared with ruptime.
 */
#define	down(w,now)	((now) - (w)->wd_recvtime > 11 * 60)

time_t	now;
int	aflg;

int
main(int argc, char **argv)
{
	int ch;
	struct dirent *dp;
	int cc, width;
	struct whod *w = &wd;
	struct whoent *we;
	struct myutmp *mp;
	int f, n, i;
	int nhosts = 0;

	while ((ch = getopt(argc, argv, "a")) != -1)
		switch(ch) {
		case 'a':
			aflg = 1;
			break;
		default:
			usage();
		}
	argc -= optind;
	argv += optind;
	if (argc != 0)
		usage();

	if (chdir(_PATH_RWHODIR) || (dirp = opendir(".")) == NULL)
		err(1, _PATH_RWHODIR);
	mp = myutmp;
	(void)time(&now);
	while ((dp = readdir(dirp))) {
		if (dp->d_ino == 0 || strncmp(dp->d_name, "whod.", 5))
			continue;
		f = open(dp->d_name, O_RDONLY);
		if (f < 0)
			continue;
		cc = read(f, &wd, sizeof(struct whod));
		if (cc < WHDRSIZE) {
			(void)close(f);
			continue;
		}
		nhosts++;
		if (down(w,now)) {
			(void)close(f);
			continue;
		}
		cc -= WHDRSIZE;
		we = w->wd_we;
		for (n = cc / sizeof(struct whoent); n > 0; n--) {
			if (aflg == 0 && we->we_idle >= 60*60) {
				we++;
				continue;
			}
			if (nusers >= NUSERS)
				errx(1, "too many users");
			strncpy(mp->myhost, w->wd_hostname,
			    sizeof(mp->myhost)-1);
			mp->myhost[sizeof(mp->myhost)-1] = '\0';
			mp->myidle = we->we_idle;
			/*
			 * Copy we->we_utmp by hand since the name and line
			 * variables in myutmp have room for NUL (unlike outmp).
			 */
			memcpy(mp->myutmp.out_line, we->we_utmp.out_line,
			    sizeof(mp->myutmp.out_line)-1);
			mp->myutmp.out_line[sizeof(mp->myutmp.out_line)-1] = 0;
			memcpy(mp->myutmp.out_name, we->we_utmp.out_name,
			    sizeof(mp->myutmp.out_name)-1);
			mp->myutmp.out_name[sizeof(mp->myutmp.out_name)-1] = 0;
			mp->myutmp.out_time = we->we_utmp.out_time;
			nusers++; we++; mp++;
		}
		(void)close(f);
	}
	if (nhosts == 0)
		errx(0, "no hosts in %s.", _PATH_RWHODIR);
	qsort(myutmp, nusers, sizeof(struct myutmp), utmpcmp);
	mp = myutmp;
	width = 0;
	for (i = 0; i < nusers; i++) {
		int j = strlen(mp->myhost) + 1 + strlen(mp->myutmp.out_line);
		if (j > width)
			width = j;
		mp++;
	}
	mp = myutmp;
	for (i = 0; i < nusers; i++) {
		char buf[BUFSIZ], vis_user[4 * sizeof(mp->myutmp.out_name) + 1];
		time_t t;

		(void)snprintf(buf, sizeof(buf), "%s:%s", mp->myhost,
		    mp->myutmp.out_line);
		strnvis(vis_user, mp->myutmp.out_name, sizeof vis_user,
		    VIS_CSTYLE);
		t = mp->myutmp.out_time;		/* XXX 2038 */
		printf("%-*.*s %-*s %.12s",
		   UT_NAMESIZE, UT_NAMESIZE, vis_user, width, buf,
		   ctime(&t)+4);
		mp->myidle /= 60;
		if (mp->myidle) {
			if (aflg) {
				if (mp->myidle >= 100*60)
					mp->myidle = 100*60 - 1;
				if (mp->myidle >= 60)
					printf(" %2d", mp->myidle / 60);
				else
					printf("   ");
			} else
				printf(" ");
			printf(":%02d", mp->myidle % 60);
		}
		printf("\n");
		mp++;
	}
	exit(0);
}

int
utmpcmp(const void *v1, const void *v2)
{
	int rc;
	const struct myutmp *u1 = (struct myutmp *)v1;
	const struct myutmp *u2 = (struct myutmp *)v2;

	rc = strncmp(u1->myutmp.out_name, u2->myutmp.out_name, 8);
	if (rc)
		return (rc);
	rc = strncmp(u1->myhost, u2->myhost, 8);
	if (rc)
		return (rc);
	return (strncmp(u1->myutmp.out_line, u2->myutmp.out_line, 8));
}

void
usage(void)
{
	extern char *__progname;

	fprintf(stderr, "usage: %s [-a]\n", __progname);
	exit(1);
}
@


1.19
log
@Switch to string copy rather than memcpy so we stop past '\0' and
don't copy over the garbage from the source buffer (like, leaking
the canary).  OK millert@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.18 2013/11/27 13:32:02 okan Exp $	*/
@


1.18
log
@remove erroneous char cast to switch expression processing getopt(3);
not used in any cases.

ok deraadt@@, guenther@@, millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.17 2013/04/16 18:57:39 deraadt Exp $	*/
d127 1
a127 1
			memcpy(mp->myhost, w->wd_hostname,
@


1.17
log
@cannot inspect out_name via a time_t pointer; ok guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.16 2009/10/27 23:59:43 deraadt Exp $	*/
d86 1
a86 1
		switch((char)ch) {
@


1.16
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.15 2003/06/03 02:56:15 millert Exp $	*/
d160 1
d166 1
d169 1
a169 1
		   ctime((time_t *)&mp->myutmp.out_time)+4);
@


1.15
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.14 2003/04/30 21:30:38 vincent Exp $	*/
a30 14

#ifndef lint
static const char copyright[] =
"@@(#) Copyright (c) 1983 The Regents of the University of California.\n\
 All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static const char sccsid[] = "from: @@(#)rwho.c	5.5 (Berkeley) 6/1/90";
#else
static const char rcsid[] = "$OpenBSD: rwho.c,v 1.14 2003/04/30 21:30:38 vincent Exp $";
#endif
#endif /* not lint */
@


1.14
log
@strvis -> strnvis, and add a place for the NUL byte that was missing

ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.13 2001/09/27 18:38:58 millert Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d42 1
a42 1
static const char rcsid[] = "$OpenBSD: rwho.c,v 1.13 2001/09/27 18:38:58 millert Exp $";
@


1.13
log
@o Add an extra byte for out_line and out_name in struct myutmp so we
  can treat these as normal C strings.  Fixes PR 2092
o KNF and ANSI fixes
o Avoid strncpy() since well-meaning folks will try to convert to strlcpy()
  even when it is not sensible to do so.
o Document the fact that the rwho protocol only supports up to 8 chars
  for a username.
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.12 2001/02/17 17:35:14 pjanzen Exp $	*/
d46 1
a46 1
static const char rcsid[] = "$OpenBSD: rwho.c,v 1.12 2001/02/17 17:35:14 pjanzen Exp $";
d177 1
a177 1
		char buf[BUFSIZ], vis_user[4 * sizeof(mp->myutmp.out_name)];
d181 2
a182 1
		strvis(vis_user, mp->myutmp.out_name, VIS_CSTYLE);
@


1.12
log
@Take prototypes from <time.h>; use errx.
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.11 2001/01/31 20:12:49 deraadt Exp $	*/
d37 1
a37 1
char copyright[] =
d43 5
a47 2
/*static char sccsid[] = "from: @@(#)rwho.c	5.5 (Berkeley) 6/1/90";*/
static char rcsid[] = "$OpenBSD: rwho.c,v 1.11 2001/01/31 20:12:49 deraadt Exp $";
d71 5
a75 1
	struct	outmp myutmp;
d79 2
a80 1
int	utmpcmp __P((struct myutmp *, struct myutmp *));
d82 1
a82 1
#define	WHDRSIZE	(sizeof (wd) - sizeof (wd.wd_we))
a90 7
void
usage()
{
	fprintf(stderr, "usage: rwho [-a]\n");
	exit(1);
}

d92 1
a92 3
main(argc, argv)
	int argc;
	char **argv;
a93 2
	extern char *optarg;
	extern int optind;
d97 3
a99 3
	register struct whod *w = &wd;
	register struct whoent *we;
	register struct myutmp *mp;
a107 1
		case '?':
d116 2
a117 4
	if (chdir(_PATH_RWHODIR) || (dirp = opendir(".")) == NULL) {
		perror(_PATH_RWHODIR);
		exit(1);
	}
d126 1
a126 1
		cc = read(f, (char *)&wd, sizeof (struct whod));
d128 1
a128 1
			(void) close(f);
d133 1
a133 1
			(void) close(f);
d138 1
a138 1
		for (n = cc / sizeof (struct whoent); n > 0; n--) {
d145 1
a145 2
			mp->myutmp = we->we_utmp; mp->myidle = we->we_idle;
			(void) strncpy(mp->myhost, w->wd_hostname,
d148 12
d162 1
a162 1
		(void) close(f);
d166 1
a166 2
	qsort((char *)myutmp, nusers, sizeof (struct myutmp),
	    (int (*)())utmpcmp);
d177 3
a179 2
		char buf[BUFSIZ], vis_user[4*UT_NAMESIZE];
		(void)snprintf(buf, sizeof buf, "%s:%s", mp->myhost,
d183 1
a183 2
		   UT_NAMESIZE, UT_NAMESIZE, vis_user,
		   width, buf,
d205 1
a205 2
utmpcmp(u1, u2)
	struct myutmp *u1, *u2;
d208 2
d218 9
@


1.11
log
@make aware of UT_NAMESIZE
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.10 1998/04/26 17:01:02 deraadt Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: rwho.c,v 1.10 1998/04/26 17:01:02 deraadt Exp $";
d47 1
d56 1
a79 1
char	*ctime();
a103 1
	time_t time();
d149 2
a150 4
			if (nusers >= NUSERS) {
				printf("too many users\n");
				exit(1);
			}
d179 1
a179 2
		   width,
		   buf,
@


1.10
log
@catch "rwho foo" as illegal; ru@@ucb.crimea.ua
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.9 1997/06/20 10:00:01 deraadt Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: rwho.c,v 1.9 1997/06/20 10:00:01 deraadt Exp $";
d55 1
d175 1
a175 1
		char buf[BUFSIZ], vis_user[4*8];
d179 2
a180 2
		printf("%-8.8s %-*s %.12s",
		   vis_user,
@


1.9
log
@Wall
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.8 1997/04/13 02:30:34 deraadt Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: rwho.c,v 1.8 1997/04/13 02:30:34 deraadt Exp $";
d81 7
d112 1
a112 2
			fprintf(stderr, "usage: rwho [-a]\n");
			exit(1);
d114 5
@


1.8
log
@vis usernames; bitblt is paranoid
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.7 1997/04/13 02:21:16 deraadt Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: rwho.c,v 1.7 1997/04/13 02:21:16 deraadt Exp $";
d56 1
@


1.7
log
@buf oflow; bitblt
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.6 1997/03/26 18:02:37 deraadt Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: rwho.c,v 1.6 1997/03/26 18:02:37 deraadt Exp $";
d55 1
d162 1
a162 1
		char buf[BUFSIZ];
d165 1
d167 1
a167 1
		   mp->myutmp.out_name,
@


1.6
log
@bail like ruptime; netbsd
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.5 1997/01/15 23:43:10 millert Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: rwho.c,v 1.5 1997/01/15 23:43:10 millert Exp $";
d162 2
a163 1
		(void)sprintf(buf, "%s:%s", mp->myhost, mp->myutmp.out_line);
@


1.5
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.4 1996/08/30 15:15:26 deraadt Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: rwho.c,v 1.4 1996/08/30 15:15:26 deraadt Exp $";
d94 1
d123 1
d147 2
@


1.4
log
@fix warnings
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.3 1996/08/30 11:10:32 deraadt Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: rwho.c,v 1.3 1996/08/30 11:10:32 deraadt Exp $";
d95 1
a95 1
	while ((ch = getopt(argc, argv, "a")) != EOF)
@


1.3
log
@buf oflow
@
text
@d1 1
a1 1
/*	$OpenBSD: rwho.c,v 1.2 1996/06/26 05:39:00 deraadt Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: rwho.c,v 1.2 1996/06/26 05:39:00 deraadt Exp $";
d145 2
a146 1
	qsort((char *)myutmp, nusers, sizeof (struct myutmp), utmpcmp);
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: rwho.c,v 1.1.1.1 1995/10/18 08:46:04 deraadt Exp $";
d53 2
a58 1
int	utmpcmp();
d67 2
d75 1
a75 1
char	*ctime(), *strcpy();
d79 1
d111 1
a111 1
	while (dp = readdir(dirp)) {
d138 3
a140 1
			(void) strcpy(mp->myhost, w->wd_hostname);
d182 1
@


1.1
log
@Initial revision
@
text
@d1 2
d44 1
a44 1
static char rcsid[] = "$Id: rwho.c,v 1.4 1994/12/24 17:38:21 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
