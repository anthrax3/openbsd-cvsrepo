head	1.50;
access;
symbols
	OPENBSD_6_2:1.50.0.2
	OPENBSD_6_2_BASE:1.50
	OPENBSD_6_1:1.49.0.4
	OPENBSD_6_1_BASE:1.49
	OPENBSD_6_0:1.48.0.2
	OPENBSD_6_0_BASE:1.48
	OPENBSD_5_9:1.47.0.2
	OPENBSD_5_9_BASE:1.47
	OPENBSD_5_8:1.46.0.4
	OPENBSD_5_8_BASE:1.46
	OPENBSD_5_7:1.44.0.2
	OPENBSD_5_7_BASE:1.44
	OPENBSD_5_6:1.43.0.4
	OPENBSD_5_6_BASE:1.43
	OPENBSD_5_5:1.36.0.16
	OPENBSD_5_5_BASE:1.36
	OPENBSD_5_4:1.36.0.12
	OPENBSD_5_4_BASE:1.36
	OPENBSD_5_3:1.36.0.10
	OPENBSD_5_3_BASE:1.36
	OPENBSD_5_2:1.36.0.8
	OPENBSD_5_2_BASE:1.36
	OPENBSD_5_1_BASE:1.36
	OPENBSD_5_1:1.36.0.6
	OPENBSD_5_0:1.36.0.4
	OPENBSD_5_0_BASE:1.36
	OPENBSD_4_9:1.36.0.2
	OPENBSD_4_9_BASE:1.36
	OPENBSD_4_8:1.35.0.4
	OPENBSD_4_8_BASE:1.35
	OPENBSD_4_7:1.35.0.2
	OPENBSD_4_7_BASE:1.35
	OPENBSD_4_6:1.32.0.6
	OPENBSD_4_6_BASE:1.32
	OPENBSD_4_5:1.32.0.2
	OPENBSD_4_5_BASE:1.32
	OPENBSD_4_4:1.29.0.4
	OPENBSD_4_4_BASE:1.29
	OPENBSD_4_3:1.29.0.2
	OPENBSD_4_3_BASE:1.29
	OPENBSD_4_2:1.28.0.2
	OPENBSD_4_2_BASE:1.28
	OPENBSD_4_1:1.25.0.2
	OPENBSD_4_1_BASE:1.25
	OPENBSD_4_0:1.23.0.8
	OPENBSD_4_0_BASE:1.23
	OPENBSD_3_9:1.23.0.6
	OPENBSD_3_9_BASE:1.23
	OPENBSD_3_8:1.23.0.4
	OPENBSD_3_8_BASE:1.23
	OPENBSD_3_7:1.23.0.2
	OPENBSD_3_7_BASE:1.23
	OPENBSD_3_6:1.22.0.4
	OPENBSD_3_6_BASE:1.22
	OPENBSD_3_5:1.22.0.2
	OPENBSD_3_5_BASE:1.22
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	OPENBSD_3_3:1.16.0.10
	OPENBSD_3_3_BASE:1.16
	OPENBSD_3_2:1.16.0.8
	OPENBSD_3_2_BASE:1.16
	OPENBSD_3_1:1.16.0.6
	OPENBSD_3_1_BASE:1.16
	OPENBSD_3_0:1.16.0.4
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9_BASE:1.16
	OPENBSD_2_9:1.16.0.2
	OPENBSD_2_8:1.15.0.2
	OPENBSD_2_8_BASE:1.15
	OPENBSD_2_7:1.14.0.2
	OPENBSD_2_7_BASE:1.14
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.50
date	2017.07.19.21.28.19;	author jmc;	state Exp;
branches;
next	1.49;
commitid	t6bOJFd8gTPdt8f5;

1.49
date	2016.10.26.00.46.01;	author schwarze;	state Exp;
branches;
next	1.48;
commitid	URGCiqSFwIfNkthl;

1.48
date	2016.03.17.05.27.10;	author bentley;	state Exp;
branches;
next	1.47;
commitid	0afdJPZPXUfvItJV;

1.47
date	2015.11.04.21.28.27;	author tedu;	state Exp;
branches;
next	1.46;
commitid	9OljUYNxYoGFLTQ8;

1.46
date	2015.07.18.09.33.00;	author jmc;	state Exp;
branches;
next	1.45;
commitid	aH1OF2IXXENNlMOh;

1.45
date	2015.07.17.20.38.57;	author jasper;	state Exp;
branches;
next	1.44;
commitid	gIxBwsB4DhHv7II6;

1.44
date	2014.10.22.23.23.22;	author schwarze;	state Exp;
branches;
next	1.43;
commitid	Y6YMZF9uE5RtI2rY;

1.43
date	2014.05.27.17.45.02;	author jmc;	state Exp;
branches;
next	1.42;

1.42
date	2014.05.27.07.00.44;	author jmc;	state Exp;
branches;
next	1.41;

1.41
date	2014.05.26.17.08.58;	author jmc;	state Exp;
branches;
next	1.40;

1.40
date	2014.05.26.15.33.17;	author jmc;	state Exp;
branches;
next	1.39;

1.39
date	2014.05.26.15.04.12;	author jmc;	state Exp;
branches;
next	1.38;

1.38
date	2014.05.26.14.52.13;	author jmc;	state Exp;
branches;
next	1.37;

1.37
date	2014.05.26.14.42.32;	author jmc;	state Exp;
branches;
next	1.36;

1.36
date	2010.09.03.11.09.29;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2010.01.10.10.53.33;	author jmc;	state Exp;
branches;
next	1.34;

1.34
date	2009.08.07.06.37.50;	author jmc;	state Exp;
branches;
next	1.33;

1.33
date	2009.08.07.03.30.56;	author djm;	state Exp;
branches;
next	1.32;

1.32
date	2009.02.08.17.15.10;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2008.10.07.21.51.37;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	2008.09.01.06.13.14;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2007.10.16.20.19.27;	author sobrado;	state Exp;
branches;
next	1.28;

1.28
date	2007.05.31.19.20.15;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2007.05.30.04.41.34;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2007.03.20.06.07.57;	author ray;	state Exp;
branches;
next	1.25;

1.25
date	2006.10.26.20.19.12;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2006.10.24.11.46.53;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2004.10.04.21.37.49;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2004.01.31.13.04.41;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2004.01.29.21.19.04;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2004.01.23.23.08.47;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2004.01.02.09.50.28;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2003.09.02.18.50.06;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.03.02.56.16;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2000.11.09.17.52.37;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	2000.10.06.23.53.52;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	2000.04.15.02.15.13;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	2000.03.11.21.40.08;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	2000.03.10.20.17.52;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.03.06.03.17.39;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.03.05.00.28.55;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.03.04.22.19.26;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.07.04.12.00.04;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.07.02.20.11.45;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	98.12.28.11.35.17;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.09.27.16.57.52;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	97.05.30.07.49.28;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.03.26.02.43.17;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.39.08;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.05;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.05;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.50
log
@remove some spacing; ok schwarze
@
text
@.\"	$OpenBSD: sed.1,v 1.49 2016/10/26 00:46:01 schwarze Exp $
.\"
.\" Copyright (c) 1992, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	from: @@(#)sed.1	8.2 (Berkeley) 12/30/93
.\"
.Dd $Mdocdate: October 26 2016 $
.Dt SED 1
.Os
.Sh NAME
.Nm sed
.Nd stream editor
.Sh SYNOPSIS
.Nm sed
.Op Fl aEnru
.Op Fl i Ns Op Ar extension
.Ar command
.Op Ar
.Nm sed
.Op Fl aEnru
.Op Fl e Ar command
.Op Fl f Ar command_file
.Op Fl i Ns Op Ar extension
.Op Ar
.Sh DESCRIPTION
The
.Nm
utility reads the specified files, or the standard input if no files
are specified, modifying the input as specified by a list of commands.
The input is then written to the standard output.
.Pp
A single command may be specified as the first argument to
.Nm sed .
Multiple commands may be specified
separated by newlines or semicolons,
or by using the
.Fl e
or
.Fl f
options.
All commands are applied to the input in the order they are specified
regardless of their origin.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl a
The files listed as parameters for the
.Ic w
function or flag are created (or truncated) before any processing begins,
by default.
The
.Fl a
option causes
.Nm
to delay opening each file until a command containing the related
.Ic w
function or flag is applied to a line of input.
.It Fl E
Interpret regular expressions using POSIX extended regular expression syntax.
The default behaviour is to use POSIX basic regular expression syntax.
.It Fl e Ar command
Append the editing commands specified by the
.Ar command
argument
to the list of commands.
.It Fl f Ar command_file
Append the editing commands found in the file
.Ar command_file
to the list of commands.
The editing commands should each be listed on a separate line.
.It Fl i Ns Op Ar extension
Edit files in place, saving backups with the specified
.Ar extension .
If a zero length
.Ar extension
is given, no backup will be saved.
It is not recommended to give a zero length
.Ar extension
when in place editing files, as it risks corruption or partial content
in situations where disk space is exhausted, etc.
.It Fl r
An alias for
.Fl E ,
for compatibility with GNU sed.
.It Fl n
By default, each line of input is echoed to the standard output after
all of the commands have been applied to it.
The
.Fl n
option suppresses this behavior.
.It Fl u
Force output to be line buffered,
printing each line as it becomes available.
By default, output is line buffered when standard output is a terminal
and block buffered otherwise.
See
.Xr setvbuf 3
for a more detailed explanation.
.El
.Pp
The form of a
.Nm
command is as follows:
.Pp
.Dl [address[,address]]function[arguments]
.Pp
Whitespace may be inserted before the first address and the function
portions of the command.
.Pp
Normally,
.Nm
cyclically copies a line of input, not including its terminating newline
character, into a
.Em pattern space ,
(unless there is something left after a
.Ic D
function),
applies all of the commands with addresses that select that pattern space,
copies the pattern space to the standard output, appending a newline, and
deletes the pattern space.
.Pp
Some of the functions use a
.Em hold space
to save all or part of the pattern space for subsequent retrieval.
.Sh SED ADDRESSES
An address is not required, but if specified must be a number (that counts
input lines
cumulatively across input files), a dollar character
.Pq Ql $
that addresses the last line of input, or a context address
(which consists of a regular expression preceded and followed by a
delimiter).
.Pp
A command line with no addresses selects every pattern space.
.Pp
A command line with one address selects all of the pattern spaces
that match the address.
.Pp
A command line with two addresses selects the inclusive range from
the first pattern space that matches the first address through the next
pattern space that matches the second.
(If the second address is a number less than or equal to the line number
first selected, only that line is selected.)
Starting at the first line following the selected range,
.Nm
starts looking again for the first address.
.Pp
Editing commands can be applied to non-selected pattern spaces by use
of the exclamation character
.Pq Ql \&!
function.
.Sh SED REGULAR EXPRESSIONS
By default,
.Nm
regular expressions are basic regular expressions
.Pq BREs .
Extended regular expressions are supported using the
.Fl E
and
.Fl r
options.
See
.Xr re_format 7
for more information on regular expressions.
In addition,
.Nm
has the following two additions to BREs:
.Pp
.Bl -enum -compact
.It
In a context address, any character other than a backslash
.Pq Ql \e
or newline character may be used to delimit the regular expression.
The opening delimiter should be preceded by a backslash
unless it is a slash.
Putting a backslash character before the delimiting character
causes the character to be treated literally.
For example, in the context address \exabc\exdefx, the RE delimiter
is an
.Sq x
and the second
.Sq x
stands for itself, so that the regular expression is
.Dq abcxdef .
.Pp
.It
The escape sequence \en matches a newline character embedded in the
pattern space.
You can't, however, use a literal newline character in an address or
in the substitute command.
.El
.Pp
One special feature of
.Nm
regular expressions is that they can default to the last regular
expression used.
If a regular expression is empty, i.e., just the delimiter characters
are specified, the last regular expression encountered is used instead.
The last regular expression is defined as the last regular expression
used as part of an address or substitute command, and at run-time, not
compile-time.
For example, the command
.Dq /abc/s//XXX/
will substitute
.Dq XXX
for the pattern
.Dq abc .
.Sh SED FUNCTIONS
In the following list of commands, the maximum number of permissible
addresses for each command is indicated by [0addr], [1addr], or [2addr],
representing zero, one, or two addresses.
.Pp
The argument
.Ar text
consists of one or more lines.
To embed a newline in the text, precede it with a backslash.
Other backslashes in text are deleted and the following character
taken literally.
.Pp
The
.Ic r
and
.Ic w
functions,
as well as the
.Cm w
flag to the
.Ic s
function,
take an optional
.Ar file
parameter,
which should be separated from the function or flag by whitespace.
Files are created
(or their contents truncated)
before any input processing begins.
.Pp
The
.Ic b ,
.Ic r ,
.Ic s ,
.Ic t ,
.Ic w ,
.Ic y ,
and
.Ic \&:
functions all accept additional arguments.
The synopses below indicate which arguments have to be separated from
the function letters by whitespace characters.
.Pp
Functions can be combined to form a
.Em function list ,
a list of
.Nm
functions each followed by a newline, as follows:
.Bd -literal -offset indent
{ function
  function
  ...
  function
}
.Ed
.Pp
The braces can be preceded and followed by whitespace.
The functions can be preceded by whitespace as well.
.Pp
Functions and function lists may be preceded by an exclamation mark,
in which case they are applied only to lines that are
.Em not
selected by the addresses.
.Bl -tag -width Ds
.It [2addr] Ar function-list
Execute
.Ar function-list
only when the pattern space is selected.
.It Xo [1 addr] Ic a Ns \e
.br
.Ar text
.Xc
Write
.Ar text
to standard output immediately before each attempt to read a line of input,
whether by executing the
.Ic N
function or by beginning a new cycle.
.It [2addr] Ns Ic b Bq Ar label
Branch to the
.Ic \&:
function with the specified
.Ar label .
If the label is not specified, branch to the end of the script.
.It Xo [2addr] Ic c Ns \e
.br
.Ar text
.Xc
Delete the pattern space.
With 0 or 1 address or at the end of a 2-address range,
.Ar text
is written to the standard output.
.It [2addr] Ns Ic d
Delete the pattern space and start the next cycle.
.It [2addr] Ns Ic D
Delete the initial segment of the pattern space through the first
newline character and start the next cycle.
.It [2addr] Ns Ic g
Replace the contents of the pattern space with the contents of the
hold space.
.It [2addr] Ns Ic G
Append a newline character followed by the contents of the hold space
to the pattern space.
.It [2addr] Ns Ic h
Replace the contents of the hold space with the contents of the
pattern space.
.It [2addr] Ns Ic H
Append a newline character followed by the contents of the pattern space
to the hold space.
.It Xo [1addr] Ic i Ns \e
.br
.Ar text
.Xc
Write
.Ar text
to the standard output.
.It [2addr] Ns Ic l
(The letter ell.)
Write the pattern space to the standard output in a visually unambiguous
form.
This form is as follows:
.Pp
.Bl -tag -width "carriage-returnXX" -offset indent -compact
.It backslash
\e\e
.It alert
\ea
.It backspace
\eb
.It form-feed
\ef
.It carriage-return
\er
.It tab
\et
.It vertical tab
\ev
.El
.Pp
Non-printable characters are written as three-digit octal numbers (with a
preceding backslash) for each byte in the character (most significant byte
first).
Long lines are folded, with the point of folding indicated by displaying
a backslash followed by a newline.
The end of each line is marked with a
.Ql $ .
.It [2addr] Ns Ic n
Write the pattern space to the standard output if the default output has
not been suppressed, and replace the pattern space with the next line of
input.
.It [2addr] Ns Ic N
Append the next line of input to the pattern space, using an embedded
newline character to separate the appended material from the original
contents.
Note that the current line number changes.
.It [2addr] Ns Ic p
Write the pattern space to standard output.
.It [2addr] Ns Ic P
Write the pattern space, up to the first newline character,
to the standard output.
.It [1addr] Ns Ic q
Branch to the end of the script and quit without starting a new cycle.
.It [1addr] Ns Ic r Ar file
Copy the contents of
.Ar file
to the standard output immediately before the next attempt to read a
line of input.
If
.Ar file
cannot be read for any reason, it is silently ignored and no error
condition is set.
.It [2addr] Ns Ic s Ns / Ns Ar RE Ns / Ns Ar replacement Ns / Ns Ar flags
Substitute the
.Ar replacement
string for the first instance of the regular expression
.Ar RE
in the pattern space.
Any character other than backslash or newline can be used instead of
a slash to delimit the regular expression and the replacement.
Within the regular expression and the replacement,
the regular expression delimiter itself can be used as
a literal character if it is preceded by a backslash.
.Pp
An ampersand
.Pq Ql &
appearing in the replacement is replaced by the string matching the
regular expression.
The special meaning of
.Ql &
in this context can be suppressed by preceding it by a backslash.
The string
.Ql \e# ,
where
.Ql #
is a digit, is replaced by the text matched
by the corresponding backreference expression (see
.Xr re_format 7 ) .
.Pp
A line can be split by substituting a newline character into it.
To specify a newline character in the replacement string, precede it with
a backslash.
.Pp
The value of
.Ar flags
in the substitute function is zero or more of the following:
.Bl -tag -width "XXXXXX" -offset indent
.It Ar N
Make the substitution only for the
.Ar N Ap th
occurrence of the regular expression in the pattern space, where
.Ar N
is a positive integer starting with
.Cm 1 No ... Cm 9 .
.It Cm g
Make the substitution for all non-overlapping matches of the
regular expression, not just the first one.
.It Cm p
Write the pattern space to standard output if a replacement was made.
If the replacement string is identical to that which it replaces, it
is still considered to have been a replacement.
.It Cm w Ar file
Append the pattern space to
.Ar file
if a replacement was made.
If the replacement string is identical to that which it replaces, it
is still considered to have been a replacement.
.El
.It [2addr] Ns Ic t Bq Ar label
Branch to the
.Ic \&:
function bearing the
.Ar label
if any substitutions have been made since the
most recent reading of an input line or execution of a
.Ic t
function.
If no label is specified, branch to the end of the script.
.It [2addr] Ns Ic w Ar file
Append the pattern space to the
.Ar file .
.It [2addr] Ns Ic x
Swap the contents of the pattern and hold spaces.
.It [2addr] Ns Ic y Ns / Ns Ar string1 Ns / Ns Ar string2 Ns /
Replace all occurrences of characters in
.Ar string1
in the pattern space with the corresponding characters from
.Ar string2 .
Any character other than a backslash or newline can be used instead of
a slash to delimit the strings.
Within
.Ar string1
and
.Ar string2 ,
a backslash followed by any character other than a newline is that literal
character, and a backslash followed by an
.Sq n
is replaced by a newline character.
.It [0addr] Ns Ic \&: Ns Ar label
This function does nothing; it bears a
.Ar label
to which the
.Ic b
and
.Ic t
commands may branch.
.It [1addr] Ns Ic =
Write the line number to the standard output followed by a newline character.
.It [0addr]
Empty lines are ignored.
.It [0addr] Ns Ic #
The
.Ql #
and the remainder of the line are ignored (treated as a comment), with
the single exception that if the first two characters in the file are
.Ql #n ,
the default output is suppressed.
This is the same as specifying the
.Fl n
option on the command line.
.El
.Sh ENVIRONMENT
.Bl -tag -width COLUMNS
.It Ev COLUMNS
If set to a positive integer,
output from the
.Ic l
function is formatted to the given width in columns.
Otherwise,
.Nm
defaults to the terminal with, or 80 columns if the output is not a terminal.
.El
.Sh EXIT STATUS
.Ex -std sed
.Sh EXAMPLES
The following simulates the
.Xr cat 1
.Fl s
command,
squeezing excess empty lines from standard input:
.Bd -literal -offset indent
$ sed -n '
# Write non-empty lines.
/./ {
    p
    d
    }
# Write a single empty line, then look for more empty lines.
/^$/    p
# Get the next line, discard the held <newline> (empty line),
# and look for more empty lines.
:Empty
/^$/    {
    N
    s/.//
    b Empty
    }
# Write the non-empty line before going back to search
# for the first in a set of empty lines.
    p
\&'
.Ed
.Sh SEE ALSO
.Xr awk 1 ,
.Xr ed 1 ,
.Xr grep 1 ,
.Xr re_format 7
.Sh STANDARDS
The
.Nm
utility is compliant with the
.St -p1003.1-2008
specification.
.Pp
The flags
.Op Fl aEiru
are extensions to that specification.
.Pp
The use of newlines to separate multiple commands on the command line
is non-portable;
the use of newlines to separate multiple commands within a command file
.Pq Fl f Ar command_file
is portable.
.Sh HISTORY
A
.Nm
command appeared in
.At v7 .
.Sh CAVEATS
The use of semicolons to separate multiple commands
is not permitted for the following commands:
.Ic a , b , c ,
.Ic i , r , t ,
.Ic w , \&: ,
and
.Ic # .
@


1.49
log
@make it clear that the s/// numeric flag can contain
more than one digit but cannot start with zero;
feedback and OK jmc@@, OK jca@@, OK millert@@ on an earlier version
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.48 2016/03/17 05:27:10 bentley Exp $
d35 1
a35 1
.Dd $Mdocdate: March 17 2016 $
a307 1
.Pp
a323 1
.Pp
a348 1
.Pp
@


1.48
log
@Switch (non-curses, non-ksh) programs that use COLUMNS to a single idiom.

Previously behaviors were all over the map. This changes them to
use COLUMNS first, and either terminal width or a hardcoded value
(typically 80) as appropriate.

ok deraadt@@; man bits ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.47 2015/11/04 21:28:27 tedu Exp $
d35 1
a35 1
.Dd $Mdocdate: November 4 2015 $
d445 7
a451 3
.It Cm 0 No ... Cm 9
Make the substitution only for the N'th occurrence of the regular
expression in the pattern space.
@


1.47
log
@replace setbuf with setvbuf, from Frederic Nowak
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.46 2015/07/18 09:33:00 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: July 18 2015 $
d514 11
@


1.46
log
@various fixes; ok jasper
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.45 2015/07/17 20:38:57 jasper Exp $
d35 1
a35 1
.Dd $Mdocdate: July 17 2015 $
d125 1
a125 1
.Xr setbuf 3
@


1.45
log
@add -i flag to sed to do in-place editing; mostly based on freebsd

feedback/ok deraadt@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.44 2014/10/22 23:23:22 schwarze Exp $
d35 1
a35 1
.Dd $Mdocdate: October 22 2014 $
d44 1
d99 2
a100 2
.It Fl i Ar extension
Edit files in-place, saving backups with the specified
d102 1
a102 1
If a zero-length
d105 1
a105 1
It is not recommended to give a zero-length
d107 1
a107 1
when in-place editing files, as you risk corruption or partial content
a524 6
.Pp
The
.Fl i
option is a non-standard
.Fx
extension and may not be available on other operating systems.
@


1.44
log
@make the description of the syntax of function lists agree
with our actual implementation, which also agrees with POSIX;
triggered by guenther@@'s answer to a question from chrisz@@;
ok chrisz@@ guenther@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.43 2014/05/27 17:45:02 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: May 27 2014 $
d50 1
d98 10
d524 6
d563 1
a563 1
.Op Fl aEru
@


1.43
log
@paste in an EXAMPLES section, from posix spec;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.42 2014/05/27 07:00:44 jmc Exp $
d271 1
a271 1
functions separated by newlines, as follows:
d280 2
a281 7
The
.Ql {
can be preceded or followed by whitespace.
The function can be preceded by whitespace as well.
The terminating
.Ql }
must be preceded by a newline or optional whitespace.
@


1.42
log
@there is no need to xref regex(3) and setbuf(3) in SEE ALSO - re_format(7)
is enough;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.41 2014/05/26 17:08:58 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: May 26 2014 $
d510 28
@


1.41
log
@tweak the text for -a and function lists;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.40 2014/05/26 15:33:17 jmc Exp $
a513 2
.Xr regex 3 ,
.Xr setbuf 3 ,
@


1.40
log
@rework the SED FUNCTIONS text;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.39 2014/05/26 15:04:12 jmc Exp $
d74 2
a75 2
.Ql w
functions are created (or truncated) before any processing begins,
d82 2
a83 2
.Ql w
function is applied to a line of input.
d267 3
a269 3
Two or more functions form a
.Em function list .
This is a list of
@


1.39
log
@the `P' function was crying out for a comma;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.38 2014/05/26 14:52:13 jmc Exp $
d237 1
a237 1
.Sq r
d239 14
a252 6
.Sq w
functions take an optional file parameter, which should be separated
from the function letter by whitespace.
Each file given as an argument to
.Nm
is created (or its contents truncated) before any input processing begins.
d255 6
a260 7
.Sq b ,
.Sq r ,
.Sq s ,
.Sq t ,
.Sq w ,
.Sq y ,
.Ql \&! ,
d262 1
a262 1
.Ql \&:
d264 1
a264 1
The following synopses indicate which arguments have to be separated from
d267 2
a268 1
Two of the functions take a function-list.
d288 1
a288 1
Functions and function-lists may be preceded by an exclamation mark,
@


1.38
log
@posix does not count `!' as a separate function, and neither should we;
instead, move the description of this mechanism into the general SED
FUNCTIONS section;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.37 2014/05/26 14:42:32 jmc Exp $
d382 2
a383 2
Write the pattern space, up to the first newline character to the
standard output.
@


1.37
log
@remove the ugly hack that saw two It macros used to render one item; replace
with other ugly hack (.br): at least this way we can whack a ton of Pp, and
it feels not quite as wrong;

while here, fix Em abuse by using Ic for functions and Ar for argument names;
i also fixed up the text of "s" a little to make it read better;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.36 2010/09/03 11:09:29 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: September 3 2010 $
d279 5
a476 4
.It [2addr] Ns Ic \&! Ns Ar function , [2addr] Ns Ic \&! Ns Ar function-list
Apply the function or function-list only to the lines that are
.Em not
selected by the address(es).
@


1.36
log
@add an EXIT STATUS section for /usr/bin;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.35 2010/01/10 10:53:33 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: January 10 2010 $
d132 1
a132 1
.Sq D
d230 1
a230 1
.Em text
d279 2
a280 3
.Pp
.Bl -tag -width "XXXXXXXX" -compact
.It [2addr] Em function-list
d282 1
a282 1
.Em function-list
d284 4
a287 3
.Pp
.It [1addr] Ns Em a Ns \e
.It Em text
d290 1
a290 1
.Em text
d293 1
a293 1
.Sq N
d295 1
a295 2
.Pp
.It [2addr] Ns Em b Ns [label]
d297 3
a299 2
.Sq \&:
function with the specified label.
d301 4
a304 3
.Pp
.It [2addr] Ns Em c Ns \e
.It Em text
d308 1
a308 1
.Em text
d310 1
a310 2
.Pp
.It [2addr] Ns Em d
d312 1
a312 2
.Pp
.It [2addr] Ns Em D
d315 1
a315 2
.Pp
.It [2addr] Ns Em g
d318 1
a318 2
.Pp
.It [2addr] Ns Em G
d321 1
a321 2
.Pp
.It [2addr] Ns Em h
d324 1
a324 2
.Pp
.It [2addr] Ns Em H
d327 4
a330 3
.Pp
.It [1addr] Ns Em i Ns \e
.It Em text
d333 1
a333 1
.Em text
d335 1
a335 2
.Pp
.It [2addr] Ns Em l
d365 1
a365 2
.Pp
.It [2addr] Ns Em n
d369 1
a369 2
.Pp
.It [2addr] Ns Em N
d374 1
a374 2
.Pp
.It [2addr] Ns Em p
d376 1
a376 2
.Pp
.It [2addr] Ns Em P
d379 1
a379 2
.Pp
.It [1addr] Ns Em q
d381 1
a381 2
.Pp
.It [1addr] Ns Em r file
d383 1
a383 1
.Em file
d387 1
a387 1
.Em file
d390 6
a395 4
.Pp
.It [2addr] Ns Em s Ns /re/replacement/flags
Substitute the replacement string for the first instance of the regular
expression in the pattern space.
d397 3
a399 2
a slash to delimit the RE and the replacement.
Within the RE and the replacement, the RE delimiter itself can be used as
d404 2
a405 1
appearing in the replacement is replaced by the string matching the RE.
d422 1
a422 1
.Em flags
d425 1
a425 1
.It 0 ... 9
d428 1
a428 1
.It g
d431 1
a431 1
.It p
d435 1
a435 1
.It w Em file
d437 1
a437 1
.Em file
d442 1
a442 2
.Pp
.It [2addr] Ns Em t Ns [label]
d444 4
a447 2
.Ql \&:
function bearing the label if any substitutions have been made since the
d449 1
a449 1
.Sq t
d452 1
a452 2
.Pp
.It [2addr] Ns Em w file
d454 2
a455 3
.Em file .
.Pp
.It [2addr] Ns Em x
d457 1
a457 2
.Pp
.It [2addr] Ns Em y Ns /string1/string2/
d459 1
a459 1
.Em string1
d461 1
a461 1
.Em string2 .
d465 1
a465 1
.Em string1
d467 1
a467 1
.Em string2 ,
d472 1
a472 6
.Pp
.Sm off
.It Xo [2addr] Em !function No ,\ \&[2addr]
.Em !function-list
.Xc
.Sm on
d476 5
a480 4
.Pp
.It [0addr] Ns Em \&: Ns label
This function does nothing; it bears a label to which the
.Sq b
d482 1
a482 1
.Sq t
d484 1
a484 2
.Pp
.It [1addr] Ns Em =
a485 1
.Pp
d488 1
a488 2
.Pp
.It [0addr] Ns Em #
d532 3
a534 3
.Cm a , b , c ,
.Cm i , r , t ,
.Cm w , \&: ,
d536 1
a536 1
.Cm # .
@


1.35
log
@remove references to docs we no longer install;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.34 2009/08/07 06:37:50 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: August 7 2009 $
d515 1
a515 1
.Pp
@


1.34
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.33 2009/08/07 03:30:56 djm Exp $
a523 3
.Pp
"SED \(em A Non-interactive Text Editor",
.Pa /usr/share/doc/usd/15.sed/ .
@


1.33
log
@add -E flag to compile regular expressions using the extended POSIX
syntax. The -E flag is compatible with the other BSDs and OSX. -r is
also provided as an alias for compatibility with GNU sed.

feedback from jmc@@ and millert@@
ok millert@@ pyr@@ henning@@ marco@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.32 2009/02/08 17:15:10 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: February 8 2009 $
d43 1
a43 1
.Op Fl Eanru
a71 5
.It Fl E
Interpret regular expressions using the POSIX extended regular expression
syntax (documented in
.Xr re_format 7 ).
The default behaviour is to use the POSIX basic regular expression syntax.
d84 3
d98 3
a100 3
is an alias for
.Fl E
(enable POSIX extended regular exressions) for compatibility with GNU sed.
d169 1
a169 1
The
d173 5
@


1.32
log
@bump the posix reference in STANDARDS to IEEE Std 1003.1-2008, with a few
updates to follow;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.31 2008/10/07 21:51:37 millert Exp $
d35 1
a35 1
.Dd $Mdocdate: October 7 2008 $
d43 1
a43 1
.Op Fl anu
d47 1
a47 1
.Op Fl anu
d72 5
d99 4
d532 1
a532 1
.Op Fl au
@


1.31
log
@The 'l' command should not encode newlines.  Also document that
backspace is escaped as \b.  OK phessler@@ and jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.30 2008/09/01 06:13:14 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: September 1 2008 $
d519 1
a519 1
.St -p1003.1-2004
@


1.30
log
@note that the opening delimiter of a context address should be preceded
by a backslash, if the delimiter is not a slash;

adapted from freebsd -r1.47 from yar;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.29 2007/10/16 20:19:27 sobrado Exp $
d35 1
a35 1
.Dd $Mdocdate: October 16 2007 $
d339 2
a342 2
.It newline
\en
@


1.29
log
@sync the synopsis and usage of commands

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.28 2007/05/31 19:20:15 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: May 31 2007 $
d178 3
a180 1
Also, putting a backslash character before the delimiting character
@


1.28
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.27 2007/05/30 04:41:34 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate$
d45 1
a45 1
.Op Ar file ...
d50 1
a50 1
.Op Ar file ...
@


1.27
log
@- use a consistent text for STANDARDS
- note which options are extensions to POSIX
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.26 2007/03/20 06:07:57 ray Exp $
d35 1
a35 1
.Dd December 30, 1993
@


1.26
log
@Add line-buffering flag (-u).

OK deraadt@@ and jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.25 2006/10/26 20:19:12 jmc Exp $
d522 1
a522 1
are extensions to the specification.
@


1.25
log
@- document that multiple commands may be newline or semicolon separated
- refer to latest posix revision
- note that -a and newline-separated multiple commands are non-portable
- note which commands do not permit being specified separated by semicolons

based around pr 5269, from tilo stritzky
much help/ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.24 2006/10/24 11:46:53 jmc Exp $
d43 1
a43 1
.Op Fl an
d47 1
a47 1
.Op Fl an
d100 8
d508 1
d520 3
a522 3
The flag
.Op Fl a
is an extension to the specification.
@


1.24
log
@+.Ex -std sed
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.23 2004/10/04 21:37:49 jmc Exp $
d60 3
a62 1
Multiple commands may be specified by using the
d507 2
a508 2
function is expected to be a superset of the
.St -p1003.2
d510 10
d525 8
@


1.23
log
@remove some incorrect apostrophes, and make the text referring to
re_format.7 slightly more consistent w/ other pages;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.22 2004/01/31 13:04:41 jmc Exp $
d492 1
a492 3
The
.Nm
utility exits 0 on success or >0 if an error occurred.
@


1.22
log
@make USD reference a little clearer;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.21 2004/01/29 21:19:04 jmc Exp $
d154 3
a156 1
regular expressions are basic regular expressions (BRE's; see
d158 1
a158 1
for more information).
d161 1
a161 1
has the following two additions to BRE's:
@


1.21
log
@- replace old-style macros
- mmultiple args do not need to be quoted
- uppercase .Sh args
- reference 15.sed usd
- some other tidy up
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.20 2004/01/23 23:08:47 jmc Exp $
d500 2
a501 1
.Pa /usr/share/doc/usd/15.sed/
@


1.20
log
@`Ns' implies `No', so `Ns No' -> `Ns'; (even simpler in adduser(8))
discussed with todd@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.19 2004/01/02 09:50:28 jmc Exp $
d103 1
a103 1
.sp
d105 1
a105 1
.sp
d113 1
a113 1
.Em "pattern space" ,
d122 1
a122 1
.Em "hold space"
d124 1
a124 1
.Sh "Sed Addresses"
d127 1
a127 1
cumulatively across input files), a dollar
d129 1
a129 1
character that addresses the last line of input, or a context address
d151 1
a151 1
.Sh "Sed Regular Expressions"
d154 1
a154 1
regular expressions are basic regular expressions (BRE's, see
d160 1
a160 1
.sp
d175 1
a175 1
.sp
d198 1
a198 1
.Sh "Sed Functions"
d253 2
a254 2
.sp
.Bl -tag -width "XXXXXX" -compact
d259 1
a259 1
.sp
d262 1
a262 1
.br
d269 1
a269 1
.sp
d275 1
a275 1
.sp
d278 1
a278 1
.br
d283 1
a283 1
.sp
d286 1
a286 1
.sp
d290 1
a290 1
.sp
d294 1
a294 1
.sp
d298 1
a298 1
.sp
d302 1
a302 1
.sp
d306 1
a306 1
.sp
d309 1
a309 1
.br
d313 1
a313 1
.sp
d319 1
a319 1
.sp
d344 1
a344 1
.sp
d349 1
a349 1
.sp
d355 1
a355 1
.sp
d358 1
a358 1
.sp
d362 1
a362 1
.sp
d365 1
a365 1
.sp
d375 1
a375 1
.sp
d406 1
a406 1
.It "0 ... 9"
d423 1
a423 1
.sp
d432 1
a432 1
.sp
d436 1
a436 1
.sp
d439 1
a439 1
.sp
d455 1
a455 1
.sp
d457 1
a457 1
.It Xo [2addr] Em !function No ,\ [2addr]
d464 2
a465 2
.sp
.It [0addr] Ns Em : Ns label
d471 1
a471 1
.sp
d474 1
a474 1
.sp
d477 1
a477 1
.sp
d499 2
@


1.19
log
@point people to re_format(7) for a description of basic regular
expressions, rather than regex(3);

from Greg A. Woods;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.18 2003/09/02 18:50:06 jmc Exp $
d260 1
a260 1
.It [1addr] Ns Em a Ns No \e
d270 1
a270 1
.It [2addr] Ns Em b Ns No [label]
d276 1
a276 1
.It [2addr] Ns Em c Ns No \e
d307 1
a307 1
.It [1addr] Ns Em i Ns No \e
d376 1
a376 1
.It [2addr] Ns Em s Ns No /re/replacement/flags
d424 1
a424 1
.It [2addr] Ns Em t Ns No [label]
d440 1
a440 1
.It [2addr] Ns Em y Ns No /string1/string2/
d465 1
a465 1
.It [0addr] Ns Em : Ns No label
@


1.18
log
@escape punctuation;
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.17 2003/06/03 02:56:16 millert Exp $
d155 1
a155 1
.Xr regex 3
@


1.17
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.16 2000/11/09 17:52:37 aaron Exp $
d149 1
a149 1
.Pq Ql !
d227 1
a227 1
.Ql ! ,
@


1.16
log
@Change all option list specifications to ".Bl -tag -width Ds". Most man
pages just needed their -width parameter tweaked to "Ds", which provides
a nice width of 6 constant characters. For consistency more than anything.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.15 2000/10/06 23:53:52 aaron Exp $
d17 1
a17 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.15
log
@Print commands in a prettier fashion.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.14 2000/04/15 02:15:13 aaron Exp $
d73 1
a73 1
.Bl -tag -width indent
@


1.14
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.13 2000/03/11 21:40:08 aaron Exp $
d259 4
a262 2
.It [2addr] function-list
Execute function-list only when the pattern space is selected.
d264 2
a265 2
.It [1addr]a\e
.It text
d274 1
a274 1
.It [2addr]b[label]
d280 2
a281 2
.It [2addr]c\e
.It text
d288 1
a288 1
.It [2addr]d
d291 1
a291 1
.It [2addr]D
d295 1
a295 1
.It [2addr]g
d299 1
a299 1
.It [2addr]G
d303 1
a303 1
.It [2addr]h
d307 1
a307 1
.It [2addr]H
d311 2
a312 2
.It [1addr]i\e
.It text
d318 1
a318 1
.It [2addr]l
d341 1
a341 1
Nonprintable characters are written as three-digit octal numbers (with a
d349 1
a349 1
.It [2addr]n
d354 1
a354 1
.It [2addr]N
d360 1
a360 1
.It [2addr]p
d363 1
a363 1
.It [2addr]P
d367 1
a367 1
.It [1addr]q
d370 1
a370 1
.It [1addr]r file
d380 1
a380 1
.It [2addr]s/regular expression/replacement/flags
d428 1
a428 1
.It [2addr]t [label]
d437 1
a437 1
.It [2addr]w Em file
d441 1
a441 1
.It [2addr]x
d444 1
a444 1
.It [2addr]y/string1/string2/
d460 5
a464 2
.It [2addr]!function
.It [2addr]!function-list
d469 1
a469 1
.It [0addr]:label
d476 2
a477 3
.It [1addr]=
Write the line number to the standard output followed by a newline
character.
d482 1
a482 1
.It [0addr]#
@


1.13
log
@Various cleanups and standardizations.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.12 2000/03/10 20:17:52 aaron Exp $
d398 1
a398 1
.Xr re_format 7 ).
@


1.12
log
@Various cleanups and standardization.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.11 2000/03/06 03:17:39 aaron Exp $
d191 1
a191 1
If a regular expression is empty, i.e. just the delimiter characters
@


1.11
log
@Some section re-ordering.
@
text
@d1 2
a2 1
.\"	$OpenBSD: sed.1,v 1.10 2000/03/05 00:28:55 aaron Exp $
@


1.10
log
@Finish standardizing options list introduction.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.9 2000/03/04 22:19:26 aaron Exp $
a497 5
.Sh HISTORY
A
.Nm
command appeared in
.At v7 .
d504 5
@


1.9
log
@In Unix land we prefer "whitespace" to "white space" or "white-space". At
least, this is the impression I get from looking at a lot of Perl docs.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.8 1999/07/04 12:00:04 aaron Exp $
d71 1
a71 1
The following options are available:
@


1.8
log
@better use of quotes
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.7 1999/07/02 20:11:45 aaron Exp $
d218 1
a218 1
from the function letter by white space.
d235 1
a235 1
the function letters by white space characters.
d251 2
a252 2
can be preceded by white space and can be followed by white space.
The function can be preceded by white space.
d255 1
a255 1
must be preceded by a newline or optional white space.
@


1.7
log
@consistent .Dd usage; proper format is: .Dd Month DD, YYYY
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.6 1998/12/28 11:35:17 deraadt Exp $
d56 1
a56 1
.Nm sed
d75 1
a75 1
.Dq w
d81 1
a81 1
.Nm sed
d83 1
a83 1
.Dq w
d104 1
a104 1
.Nm sed
d113 1
a113 1
.Nm sed
d118 1
a118 1
.Dq D
d131 1
a131 3
.Po
.Dq $
.Pc
d147 1
a147 1
.Nm sed
d152 1
a152 3
.Po
.Dq !
.Pc
d156 1
a156 1
.Nm sed
d161 1
a161 1
.Nm sed
d167 1
a167 3
.Po
.Dq \e
.Pc
d173 1
a173 1
.Dq x
d175 1
a175 1
.Dq x
d187 1
a187 1
.Nm sed
d214 1
a214 1
.Dq r
d216 1
a216 1
.Dq w
d220 1
a220 1
.Nm sed
d224 7
a230 7
.Dq b ,
.Dq r ,
.Dq s ,
.Dq t ,
.Dq w ,
.Dq y ,
.Dq ! ,
d232 1
a232 1
.Dq \&:
d239 1
a239 1
.Nm sed
d250 1
a250 1
.Dq {
d254 1
a254 1
.Dq }
d268 1
a268 1
.Dq N
d273 1
a273 1
.Dq \&:
d344 1
a344 1
.Dq $ .
d386 1
a386 3
.Po
.Dq &
.Pc
d389 1
a389 1
.Dq &
d392 1
a392 1
.Dq \e# ,
d394 1
a394 1
.Dq #
d427 1
a427 1
.Dq \&:
d430 1
a430 1
.Dq t
d453 3
a455 2
character, and a backslash followed by an ``n'' is replaced by a newline
character.
d465 1
a465 1
.Dq b
d467 1
a467 1
.Dq t
d479 1
a479 1
.Dq #
d482 1
a482 1
.Dq #n ,
d490 1
a490 1
.Nm sed
d500 1
a500 1
.Nm sed
d505 1
a505 1
.Nm sed
@


1.6
log
@use \& block on : in macro; ross
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.5 1998/09/27 16:57:52 aaron Exp $
d38 1
a38 1
.Dd December, 30, 1993
@


1.5
log
@usr.bin/ man page cleanups, n-s
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.4 1997/05/30 07:49:28 deraadt Exp $
d435 1
a435 1
.Dq :
@


1.4
log
@for i in `find . -name \*.[123456789] -exec grep '^.Dd ' {} /dev/null \; | \
	grep '"' | cut -d':' -f1`; do
sed -e '/^.Dd /s/"//g' -e '/^.Dd /s/\(^.Dd [A-Za-z]*\) \(.*\)$/\1, \2/' <$i >x
cat x > $i
done
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.3 1997/03/26 02:43:17 deraadt Exp $
d498 1
a498 1
utility exits 0 on success and >0 if an error occurs.
@


1.3
log
@show a backslash properly; david@@mono.org
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.2 1996/06/26 05:39:08 deraadt Exp $
d38 1
a38 1
.Dd "December 30, 1993"
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD: sed.1,v 1.1.1.1 1995/10/18 08:46:05 deraadt Exp $
d329 1
a329 1
\e
@


1.1
log
@Initial revision
@
text
@d1 1
a36 1
.\"	$Id: sed.1,v 1.5 1994/12/04 06:06:19 mycroft Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
