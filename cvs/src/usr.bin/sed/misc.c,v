head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.2
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.4
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.11.0.4
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.10.0.6
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.22
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.20
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.16
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.14
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.12
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.6
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.7.0.8
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.6
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.4
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.6.0.10
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.8
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.6
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.18
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2017.01.20.10.26.16;	author krw;	state Exp;
branches;
next	1.11;
commitid	Pe0EG0ahmNlf0T9t;

1.11
date	2015.10.26.14.08.47;	author mmcc;	state Exp;
branches;
next	1.10;
commitid	ksSlO3H6uvWUGQLY;

1.10
date	2014.10.08.04.19.08;	author deraadt;	state Exp;
branches;
next	1.9;
commitid	OuNVp736YkNFjTSK;

1.9
date	2009.10.27.23.59.43;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2008.10.08.17.26.47;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.09.00.23.57;	author tedu;	state Exp;
branches;
next	1.6;

1.6
date	2004.07.20.03.50.26;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.03.02.56.16;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.19.19.39.39;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.07.25.21.05.41;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.39.07;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.05;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.05;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Split error() into error() and warning() so error() can be marked __dead to
appease gcc.

ok procter@@ deraadt@@
@
text
@/*	$OpenBSD: misc.c,v 1.11 2015/10/26 14:08:47 mmcc Exp $	*/

/*-
 * Copyright (c) 1992 Diomidis Spinellis.
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Diomidis Spinellis of Imperial College, University of London.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>

#include <errno.h>
#include <regex.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdarg.h>

#include "defs.h"
#include "extern.h"

/*
 * malloc with result test
 */
void *
xmalloc(size_t size)
{
	void *p;

	if ((p = malloc(size)) == NULL)
		error(FATAL, "%s", strerror(errno));
	return (p);
}

void *
xreallocarray(void *o, size_t nmemb, size_t size)
{
	void *p;

	if ((p = reallocarray(o, nmemb, size)) == NULL)
		error(FATAL, "%s", strerror(errno));
	return (p);
}

/*
 * realloc with result test
 */
void *
xrealloc(void *p, size_t size)
{

	if ((p = realloc(p, size)) == NULL)
		error(FATAL, "%s", strerror(errno));
	return (p);
}

/*
 * Return a string for a regular expression error passed.  This is a overkill,
 * because of the silly semantics of regerror (we can never know the size of
 * the buffer).
 */
char *
strregerror(int errcode, regex_t *preg)
{
	static char *oe;
	size_t s;

	free(oe);
	s = regerror(errcode, preg, "", 0);
	oe = xmalloc(s);
	(void)regerror(errcode, preg, oe, s);
	return (oe);
}

/*
 * Error reporting function
 */
__dead void
error(int severity, const char *fmt, ...)
{
	va_list ap;

	va_start(ap, fmt);
	(void)fprintf(stderr, "sed: ");
	switch (severity) {
	case COMPILE:
		(void)fprintf(stderr, "%lu: %s: ", linenum, fname);
	}
	(void)vfprintf(stderr, fmt, ap);
	va_end(ap);
	(void)fprintf(stderr, "\n");
	exit(1);
}

void
warning(const char *fmt, ...)
{
	va_list ap;

	va_start(ap, fmt);
	(void)fprintf(stderr, "sed: ");
	(void)fprintf(stderr, "%lu: %s: ", linenum, fname);
	(void)vfprintf(stderr, fmt, ap);
	va_end(ap);
	(void)fprintf(stderr, "\n");
}
@


1.11
log
@Rename err() to error() to prevent confusion with the stdlib function.

Discussed with jca@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.10 2014/10/08 04:19:08 deraadt Exp $	*/
d104 1
a104 1
void
a111 1
	case WARNING:
a117 2
	if (severity == WARNING)
		return;
d119 13
a131 1
	/* NOTREACHED */
@


1.10
log
@add a xreallocarray() like the existing fatal xmalloc(), and use it to
detect potential integer.
ok doug
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.9 2009/10/27 23:59:43 deraadt Exp $	*/
d57 1
a57 1
		err(FATAL, "%s", strerror(errno));
d67 1
a67 1
		err(FATAL, "%s", strerror(errno));
d79 1
a79 1
		err(FATAL, "%s", strerror(errno));
d105 1
a105 1
err(int severity, const char *fmt, ...)
@


1.9
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.8 2008/10/08 17:26:47 millert Exp $	*/
d57 10
@


1.8
log
@Allow sed to handle arbitrarily long lines.  Also plug a memory
leak noticed in the process.  Closes PR 5303.  OK otto@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.7 2006/10/09 00:23:57 tedu Exp $	*/
a34 5

#ifndef lint
/* from: static char sccsid[] = "@@(#)misc.c	8.1 (Berkeley) 6/6/93"; */
static const char rcsid[] = "$OpenBSD: misc.c,v 1.7 2006/10/09 00:23:57 tedu Exp $";
#endif /* not lint */
@


1.7
log
@pretty.  the comma operator should not be used to cram two statements into
an if without braces, or worse, into a return.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.6 2004/07/20 03:50:26 deraadt Exp $	*/
d38 1
a38 1
static const char rcsid[] = "$OpenBSD: misc.c,v 1.6 2004/07/20 03:50:26 deraadt Exp $";
d57 1
a57 1
xmalloc(u_int size)
d70 1
a70 1
xrealloc(void *p, u_int size)
@


1.6
log
@ansi; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.5 2003/06/03 02:56:16 millert Exp $	*/
d38 1
a38 1
static char *rcsid = "$OpenBSD: misc.c,v 1.5 2003/06/03 02:56:16 millert Exp $";
a71 2
	if (p == NULL)			/* Compatibility hack. */
		return (xmalloc(size));
d89 1
a89 2
	if (oe != NULL)
		free(oe);
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.4 2002/02/19 19:39:39 millert Exp $	*/
d38 1
a38 1
static char *rcsid = "$OpenBSD: misc.c,v 1.4 2002/02/19 19:39:39 millert Exp $";
d57 1
a57 2
xmalloc(size)
	u_int size;
d70 1
a70 3
xrealloc(p, size)
	void *p;
	u_int size;
d86 1
a86 3
strregerror(errcode, preg)
	int errcode;
	regex_t *preg;
@


1.4
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.3 1997/07/25 21:05:41 mickey Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d38 1
a38 1
static char *rcsid = "$OpenBSD: misc.c,v 1.3 1997/07/25 21:05:41 mickey Exp $";
@


1.3
log
@#if __STDC__ --> #ifdef __STDC__
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.2 1996/06/26 05:39:07 deraadt Exp $	*/
d42 1
a42 1
static char *rcsid = "$OpenBSD: misc.c,v 1.2 1996/06/26 05:39:07 deraadt Exp $";
d52 1
a107 5
#ifdef __STDC__
#include <stdarg.h>
#else
#include <varargs.h>
#endif
a111 1
#ifdef __STDC__
a112 6
#else
err(severity, fmt, va_alist)
	int severity;
	char *fmt;
        va_dcl
#endif
d115 1
a115 1
#ifdef __STDC__
a116 3
#else
	va_start(ap);
#endif
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 1
a42 1
static char *rcsid = "$OpenBSD: misc.c,v 1.1.1.1 1995/10/18 08:46:05 deraadt Exp $";
d107 1
a107 1
#if __STDC__
d116 1
a116 1
#if __STDC__
d126 1
a126 1
#if __STDC__
@


1.1
log
@Initial revision
@
text
@d1 2
d42 1
a42 1
static char *rcsid = "$Id: misc.c,v 1.4 1994/02/03 23:44:54 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
