head	1.49;
access;
symbols
	OPENBSD_6_1:1.49.0.2
	OPENBSD_6_1_BASE:1.49
	OPENBSD_6_0:1.42.0.12
	OPENBSD_6_0_BASE:1.42
	OPENBSD_5_9:1.42.0.8
	OPENBSD_5_9_BASE:1.42
	OPENBSD_5_8:1.42.0.10
	OPENBSD_5_8_BASE:1.42
	OPENBSD_5_7:1.42.0.4
	OPENBSD_5_7_BASE:1.42
	OPENBSD_5_6:1.42.0.6
	OPENBSD_5_6_BASE:1.42
	OPENBSD_5_5:1.42.0.2
	OPENBSD_5_5_BASE:1.42
	OPENBSD_5_4:1.41.0.14
	OPENBSD_5_4_BASE:1.41
	OPENBSD_5_3:1.41.0.12
	OPENBSD_5_3_BASE:1.41
	OPENBSD_5_2:1.41.0.10
	OPENBSD_5_2_BASE:1.41
	OPENBSD_5_1_BASE:1.41
	OPENBSD_5_1:1.41.0.8
	OPENBSD_5_0:1.41.0.6
	OPENBSD_5_0_BASE:1.41
	OPENBSD_4_9:1.41.0.4
	OPENBSD_4_9_BASE:1.41
	OPENBSD_4_8:1.41.0.2
	OPENBSD_4_8_BASE:1.41
	OPENBSD_4_7:1.39.0.2
	OPENBSD_4_7_BASE:1.39
	OPENBSD_4_6:1.39.0.4
	OPENBSD_4_6_BASE:1.39
	OPENBSD_4_5:1.35.0.4
	OPENBSD_4_5_BASE:1.35
	OPENBSD_4_4:1.35.0.2
	OPENBSD_4_4_BASE:1.35
	OPENBSD_4_3:1.31.0.4
	OPENBSD_4_3_BASE:1.31
	OPENBSD_4_2:1.31.0.2
	OPENBSD_4_2_BASE:1.31
	OPENBSD_4_1:1.28.0.6
	OPENBSD_4_1_BASE:1.28
	OPENBSD_4_0:1.28.0.4
	OPENBSD_4_0_BASE:1.28
	OPENBSD_3_9:1.28.0.2
	OPENBSD_3_9_BASE:1.28
	OPENBSD_3_8:1.27.0.4
	OPENBSD_3_8_BASE:1.27
	OPENBSD_3_7:1.27.0.2
	OPENBSD_3_7_BASE:1.27
	OPENBSD_3_6:1.26.0.6
	OPENBSD_3_6_BASE:1.26
	OPENBSD_3_5:1.26.0.4
	OPENBSD_3_5_BASE:1.26
	OPENBSD_3_4:1.26.0.2
	OPENBSD_3_4_BASE:1.26
	OPENBSD_3_3:1.24.0.2
	OPENBSD_3_3_BASE:1.24
	OPENBSD_3_2:1.23.0.2
	OPENBSD_3_2_BASE:1.23
	OPENBSD_3_1:1.22.0.2
	OPENBSD_3_1_BASE:1.22
	OPENBSD_3_0:1.20.0.6
	OPENBSD_3_0_BASE:1.20
	OPENBSD_2_9_BASE:1.20
	OPENBSD_2_9:1.20.0.4
	OPENBSD_2_8:1.20.0.2
	OPENBSD_2_8_BASE:1.20
	OPENBSD_2_7:1.19.0.2
	OPENBSD_2_7_BASE:1.19
	OPENBSD_2_6:1.18.0.6
	OPENBSD_2_6_BASE:1.18
	OPENBSD_2_5:1.18.0.4
	OPENBSD_2_5_BASE:1.18
	OPENBSD_2_4:1.18.0.2
	OPENBSD_2_4_BASE:1.18
	OPENBSD_2_3:1.17.0.2
	OPENBSD_2_3_BASE:1.17
	OPENBSD_2_2:1.16.0.2
	OPENBSD_2_2_BASE:1.16
	OPENBSD_2_1:1.13.0.2
	OPENBSD_2_1_BASE:1.13
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.49
date	2017.01.21.08.33.07;	author krw;	state Exp;
branches;
next	1.48;
commitid	l2fu419jw6ah0BY2;

1.48
date	2017.01.20.04.03.53;	author krw;	state Exp;
branches;
next	1.47;
commitid	fvKilaTzh2Vbur5J;

1.47
date	2017.01.03.17.00.04;	author deraadt;	state Exp;
branches;
next	1.46;
commitid	9X2MbmZeyJX7O96R;

1.46
date	2016.12.28.17.48.04;	author deraadt;	state Exp;
branches;
next	1.45;
commitid	UIBQPJAx3NVjVFnr;

1.45
date	2016.09.27.12.32.26;	author fcambus;	state Exp;
branches;
next	1.44;
commitid	n9yNr5Kq5yeJnW1O;

1.44
date	2016.08.20.20.18.42;	author millert;	state Exp;
branches;
next	1.43;
commitid	F2AU4cYS2XzonLey;

1.43
date	2016.08.18.16.23.06;	author millert;	state Exp;
branches;
next	1.42;
commitid	ku5uVo6mFCThpOmQ;

1.42
date	2014.01.23.00.39.15;	author deraadt;	state Exp;
branches;
next	1.41;

1.41
date	2010.06.29.23.12.33;	author halex;	state Exp;
branches;
next	1.40;

1.40
date	2010.04.30.19.29.01;	author jsg;	state Exp;
branches;
next	1.39;

1.39
date	2009.05.05.19.35.30;	author martynas;	state Exp;
branches;
next	1.38;

1.38
date	2009.04.27.22.51.51;	author martynas;	state Exp;
branches;
next	1.37;

1.37
date	2009.04.26.21.26.03;	author martynas;	state Exp;
branches;
next	1.36;

1.36
date	2009.04.13.01.47.04;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2008.07.08.21.07.57;	author martynas;	state Exp;
branches;
next	1.34;

1.34
date	2008.06.25.21.15.19;	author martynas;	state Exp;
branches;
next	1.33;

1.33
date	2008.06.25.18.07.00;	author martynas;	state Exp;
branches;
next	1.32;

1.32
date	2008.06.16.12.03.51;	author martynas;	state Exp;
branches;
next	1.31;

1.31
date	2007.06.16.08.58.33;	author espie;	state Exp;
branches;
next	1.30;

1.30
date	2007.06.13.13.52.26;	author pyr;	state Exp;
branches;
next	1.29;

1.29
date	2007.06.06.19.15.33;	author pyr;	state Exp;
branches;
next	1.28;

1.28
date	2005.10.12.06.50.42;	author otto;	state Exp;
branches;
next	1.27;

1.27
date	2004.09.16.04.39.16;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	2003.08.11.21.23.58;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2003.06.03.02.56.08;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	2002.11.08.03.30.17;	author fgsch;	state Exp;
branches;
next	1.23;

1.23
date	2002.05.30.06.51.46;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2002.02.17.19.42.30;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	2002.02.16.21.27.46;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2000.06.21.19.22.54;	author itojun;	state Exp;
branches;
next	1.19;

1.19
date	99.12.08.12.57.06;	author itojun;	state Exp;
branches;
next	1.18;

1.18
date	98.07.07.17.26.39;	author art;	state Exp;
branches;
next	1.17;

1.17
date	98.02.17.23.22.53;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	97.09.04.04.37.14;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	97.07.25.21.56.19;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	97.06.10.19.39.53;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	97.04.23.20.33.04;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	97.04.16.05.02.46;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	97.04.10.00.17.08;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	97.03.21.20.59.28;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	97.03.14.04.32.14;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.02.05.04.55.15;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.02.03.01.05.37;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.02.03.01.02.36;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.01.25.21.42.30;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.12.17.02.11.46;	author michaels;	state Exp;
branches;
next	1.3;

1.3
date	96.09.03.18.00.05;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.33.35;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.17;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.17;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.49
log
@Nuke whitespace foolish enough to expose itself during the great
"warning:" rectification.
@
text
@/*	$OpenBSD: extern.h,v 1.48 2017/01/20 04:03:53 krw Exp $	*/
/*	$NetBSD: extern.h,v 1.17 1997/08/18 10:20:19 lukem Exp $	*/

/*
 * Copyright (C) 1997 and 1998 WIDE Project.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the project nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*-
 * Copyright (c) 1994 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)extern.h	8.3 (Berkeley) 10/9/94
 */

#include <sys/types.h>

void	abort_remote(FILE *);
void	abortpt(int);
void	abortrecv(int);
void	alarmtimer(int);
int	another(int *, char ***, const char *);
int	auto_fetch(int, char **, char *);
void	blkfree(char **);
void	cdup(int, char **);
void	cmdabort(int);
void	cmdscanner(int);
int	command(const char *, ...);
int	confirm(const char *, const char *);
int	connect_wait(int);
FILE   *dataconn(const char *);
int	foregroundproc(void);
int	fileindir(const char *, const char *);
struct cmd *getcmd(const char *);
int	getreply(int);
int	globulize(char **);
char   *gunique(const char *);
void	help(int, char **);
char   *hookup(char *, char *);
int	initconn(void);
void	intr(void);
int	isurl(const char *);
int	ftp_login(const char *, char *, char *);
void	lostpeer(void);
void	makeargv(void);
void	progressmeter(int, const char *);
char   *prompt(void);
void	proxtrans(const char *, const char *, const char *);
void	psabort(int);
void	psummary(int);
void	pswitch(int);
void	ptransfer(int);
void	recvrequest(const char *, const char *, const char *,
	    const char *, int, int);
char   *remglob(char **, int, char **);
off_t	remotesize(const char *, int);
time_t	remotemodtime(const char *, int);
void	reset(int, char **);
void	rmthelp(int, char **);
void	sethash(int, char **);
void	setpeer(int, char **);
void	setttywidth(int);
char   *slurpstring(void);

__dead void	usage(void);

void	cookie_get(const char *, const char *, int, char **);
void	cookie_load(void);

#ifndef SMALL
void	abortsend(int);
unsigned char complete(EditLine *, int);
void	controlediting(void);
void	domacro(int, char **);
void	list_vertical(StringList *);
void	parse_list(char **, char *);
char   *remglob2(char **, int, char **, FILE **ftemp, char *type);
int	ruserpass(const char *, char **, char **, char **);
void	sendrequest(const char *, const char *, const char *, int);
#endif /* !SMALL */

extern jmp_buf	abortprox;
extern int	abrtflag;
extern FILE    *cout;
extern int	data;
extern char    *home;
extern jmp_buf	jabort;
extern int	family;
extern int	proxy;
extern char	reply_string[];
extern off_t	restart_point;
extern int	keep_alive_timeout;
extern int	connect_timeout;
extern int	pipeout;
extern char	*action;

#ifndef SMALL
extern int	NCMDS;
#endif /* !SMALL */

extern char *__progname;		/* from crt0.o */

@


1.48
log
@Straggling __dead. Mark usage() as __dead and make gcc happier.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.47 2017/01/03 17:00:04 deraadt Exp $	*/
d7 1
a7 1
 * 
d19 1
a19 1
 * 
@


1.47
log
@Add a "-w connect_timeout" option in support of URL-fetching.  This allows
slow / failing connects to be identified.  The install script needs this
functionaly.
ok jca rpe millert
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.46 2016/12/28 17:48:04 deraadt Exp $	*/
d112 2
a113 1
void	usage(void);
@


1.46
log
@Split -DSMALL into -DNOSSL, so that a SSL-enabled version of ftp can
be built, which is still pretty small (in distrib/special/ftp-ssl).
Lots of testing by rpe.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.45 2016/09/27 12:32:26 fcambus Exp $	*/
d140 1
@


1.45
log
@Remove empty #ifdef and #ifndef blocks

OK natano@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.44 2016/08/20 20:18:42 millert Exp $	*/
d114 3
a120 2
void	cookie_get(const char *, const char *, int, char **);
void	cookie_load(void);
@


1.44
log
@Use connect(2) + a connect_wait() function instead of connect_sync(),
similar to the example in connect(2).  OK tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.43 2016/08/18 16:23:06 millert Exp $	*/
a103 2
#ifndef SMALL
#endif /* !SMALL */
@


1.43
log
@Move connect_sync() to util.c and use it when connecting via http
too.  OK sthen@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.42 2014/01/23 00:39:15 deraadt Exp $	*/
a64 1
#include <sys/socket.h>
d78 1
a78 1
int	connect_sync(int, const struct sockaddr *, socklen_t);
@


1.42
log
@Add -D shorttitle support, so that the progress meter can show some sort
of reason why it is processing a certain file.  This will be used by the
installer for that purpose.
ok krw rpe
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.41 2010/06/29 23:12:33 halex Exp $	*/
d65 1
d79 1
@


1.41
log
@fix output handling:
- if a remote file by the name '-' is retrieved, that does not imply
  it should go to standard output...
- make -o '' reset any previous -o action
- properly handle multiple -o 's

ok phessler@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.40 2010/04/30 19:29:01 jsg Exp $	*/
d141 1
@


1.40
log
@shuffle some things around to deal with incomplete types
gcc4 gets upset about.
based on suggestions from miod@@, ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.39 2009/05/05 19:35:30 martynas Exp $	*/
d140 1
@


1.39
log
@make it clean removing the ifdef SMALL maze.  separate cmds and
small stuff.  make it a fetcher.  shrinks quite a bit
agreed by millert@@, krw@@
ok theo, sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.38 2009/04/27 22:51:51 martynas Exp $	*/
a130 1
extern struct	cmd cmdtab[];
@


1.38
log
@remove uploading and macros support from install media;  to save
some space
discussed with theo, todd@@, millert@@
tested and looked over by sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.37 2009/04/26 21:26:03 martynas Exp $	*/
d66 3
a68 7
void    abort_remote(FILE *);
void    abortpt(int);
void    abortrecv(int);
#ifndef SMALL
void    abortsend(int);
#endif /* !SMALL */
void	account(int, char **);
a72 1
void	cd(int, char **);
a73 1
void	changetype(int, int);
a76 4
#ifndef SMALL
unsigned char complete(EditLine *, int);
void	controlediting(void);
#endif /* !SMALL */
a78 10
void	deletecmd(int, char **);
void	disconnect(int, char **);
void	do_chmod(int, char **);
void	do_umask(int, char **);
#ifndef SMALL
void	domacro(int, char **);
#endif /* !SMALL */
char   *domap(char *);
void	doproxy(int, char **);
char   *dotrans(char *);
a80 1
void	get(int, char **);
a81 1
int	getit(int, char **, int, const char *);
d87 1
a87 2
void	idle(int, char **);
int     initconn(void);
a89 2
void	list_vertical(StringList *);
void	lcd(int, char **);
a91 6
void	lpwd(int, char **);
void	ls(int, char **);
void	mabort(int);
#ifndef SMALL
void	macdef(int, char **);
#endif /* !SMALL */
d93 1
a93 12
void	makedir(int, char **);
void	mdelete(int, char **);
void	mget(int, char **);
void	mls(int, char **);
void	modtime(int, char **);
#ifndef SMALL
void	mput(int, char **);
#endif /* !SMALL */
char   *onoff(int);
void	newer(int, char **);
void	page(int, char **);
void    progressmeter(int, const char *);
d95 2
a96 3
void	proxabort(int);
void    proxtrans(const char *, const char *, const char *);
void    psabort(int);
d98 3
a100 11
void    pswitch(int);
void    ptransfer(int);
#ifndef SMALL
void	put(int, char **);
void	putit(int, char **, int);
#endif /* !SMALL */
void	pwd(int, char **);
void	quit(int, char **);
void	quote(int, char **);
void	quote1(const char *, int, char **);
void    recvrequest(const char *, const char *, const char *,
a101 1
void	reget(int, char **);
a103 1
char   *remglob2(char **, int, char **, FILE **ftemp, char *type);
d107 1
a107 7
void	removedir(int, char **);
void	renamefile(int, char **);
#ifndef SMALL
void	reput(int, char **);
#endif /* !SMALL */
void    reset(int, char **);
void	restart(int, char **);
a108 18
void	rmtstatus(int, char **);
#ifndef SMALL
void    sendrequest(const char *, const char *, const char *, int);
#endif /* !SMALL */
void	setascii(int, char **);
void	setbell(int, char **);
void	setbinary(int, char **);
void	setcase(int, char **);
void	setcr(int, char **);
#ifndef SMALL
void	setdebug(int, char **);
#endif /* !SMALL */
void	setedit(int, char **);
void	setepsv4(int, char **);
void	setform(int, char **);
void	setftmode(int, char **);
void	setgate(int, char **);
void	setglob(int, char **);
a109 3
void	setnmap(int, char **);
void	setntrans(int, char **);
void	setpassive(int, char **);
a110 9
void	setport(int, char **);
void	setpreserve(int, char **);
void	setprogress(int, char **);
void	setprompt(int, char **);
void	setrunique(int, char **);
void	setstruct(int, char **);
void	setsunique(int, char **);
void	settenex(int, char **);
void	settrace(int, char **);
a111 5
void	settype(int, char **);
void	setverbose(int, char **);
void	shell(int, char **);
void	site(int, char **);
void	sizecmd(int, char **);
a112 3
void	status(int, char **);
void	syst(int, char **);
int	togglevar(int, char **, int *, const char *);
a113 1
void	user(int, char **);
d116 4
a119 1
int	ruserpass(const char *, char **, char **, char **);
d121 2
a122 1
void	cookie_get(const char *, const char *, int, char **);
d124 3
a128 1

d140 3
d144 1
a144 1
extern int	keep_alive_timeout;
@


1.37
log
@figure out titles automatically by using remote file name.  remove
-T and just show titles by default for non-verbose transfers;
discussed with, ok theo, sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.36 2009/04/13 01:47:04 deraadt Exp $	*/
d69 1
d71 1
d93 1
d95 1
d120 1
d122 1
d129 1
d131 1
d143 1
d146 1
d162 1
d164 1
d169 1
d171 1
@


1.36
log
@add a "-T title" option to ftp; this is is used in progress bar mode to
show which filename is being used. ok krw, mdoc repair from jmc
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.35 2008/07/08 21:07:57 martynas Exp $	*/
d127 1
a127 1
void    progressmeter(int);
a212 1
extern char    *title;
@


1.35
log
@- add support for recursive transfers (but not for floppies), e.g.
'mget -cr 4.*' would recursively fetch (-r), and resume the previous
transfers (-c) of 4.X release directories
uses local matching (fnmatch), but only for recursive transfers.
current behavior is not changed in any way.
- while here, ifndef SMALL debugging stuff, this saves some space,
for floppies
- some debugging code was enabled for non-debugging mode, checks
assume debug is set to zero, but it's not initially set
- all "Confirm with" prompts are forced, remove redundant argument
- fix usage: -C and -c are not available for SMALL

discussed a year ago w/ pyr@@
looks good to millert@@
previous version looked good to pyr@@
man page tweaks & ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.34 2008/06/25 21:15:19 martynas Exp $	*/
d213 1
@


1.34
log
@in resume mode, pass -c to mget when {dir,file}hasglob, so that i'm
able to continue multiple transfers with -C;  ok millert@@
while here fix some comments (!SMALL vs. SMALL stuff), and add
missing
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.33 2008/06/25 18:07:00 martynas Exp $	*/
d85 1
a85 1
int	confirm(const char *, const char *, int);
d145 3
d163 1
d165 1
d203 1
@


1.33
log
@- fix -Wall (no behavior change, a || b && c = a || (b && c) anyway)
- use argv[0] for "Confirm with", as other confirm()s do
- fix confirm cases, pass force=1 for mdelete and mabort too, fixes
a bug when you end up deleting all files when you ^C, instead of
getting a confirmation
- add reput command, that will allow to continue transfer uploads
- add -c for mget and mput, that will allow to continue multiple
transfers
- fix a bug when you use restart command together with put.  the
progressmeter would start from zero, and eta would show fictional
time.  this actually allows reput/put -c to have correct progressmeter
too
- document everything
discussed with, suggestions, reminded to ifdef SMALL the code so
we're able to fit in floppies, and ok millert@@, and jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.32 2008/06/16 12:03:51 martynas Exp $	*/
d198 1
a198 1
#endif
@


1.32
log
@fix transfer interrupting when confirmrest mode is used.  change
confirm() to have a 'force' argument, so that ointer/oconf dance
is not needed, and to prevent further bugs like this;  ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.31 2007/06/16 08:58:33 espie Exp $	*/
d136 1
d149 1
@


1.31
log
@implement a `keep-alive' option that sends bytes over an inactive
connection. The FTP protocol provides us with a NOOP operation that
is perfectly suitable for that, and so far servers are happy with it.
Sending the command slowly is an idea I borrowed from spamd.
No change for people not using the option, so it can't break normal ftp.

okay beck@@, jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.30 2007/06/13 13:52:26 pyr Exp $	*/
d85 1
a85 1
int	confirm(const char *, const char *);
@


1.30
log
@Enable cookie support. This allows parsing of netscape-like cookie jars
and sending of appropriate cookies. No retrieval of new cookies is done.
Careful review and lots of input by millert and ray.

ok millert@@, ray@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.29 2007/06/06 19:15:33 pyr Exp $	*/
d211 1
@


1.29
log
@Remove the .netrc parser when compiling a SMALL binary.
there is no .netrc file on the install media and keeping the parser
shaves a good deal of bytes in the binary.
ok millert@@, "go on" deraadt@@, "makes sense" steven@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.28 2005/10/12 06:50:42 otto Exp $	*/
d194 2
@


1.28
log
@Fix mget directory traversal vulnerability. From NetBSD. CAN-2002-1345.
ok millert@@ deraadt@@, prodding by david@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.27 2004/09/16 04:39:16 deraadt Exp $	*/
a151 1
int	ruserpass(const char *, char **, char **, char **);
d191 4
@


1.27
log
@type corrections and other delinting
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.26 2003/08/11 21:23:58 millert Exp $	*/
d96 1
@


1.26
log
@The empty() function basically effects a poll, so replace it with
real poll().  Gets rid of another static select().  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.25 2003/06/03 02:56:08 millert Exp $	*/
d87 1
a87 1
void	delete(int, char **);
@


1.25
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.24 2002/11/08 03:30:17 fgsch Exp $	*/
a94 1
int     empty(fd_set *, int);
@


1.24
log
@http redirect support; adapted from NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.22 2002/02/17 19:42:30 millert Exp $	*/
d45 1
a45 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.23
log
@-4 and -6 options; kanai@@big.or.jp; itojun ok
@
text
@d115 1
a115 1
int	login(const char *, char *, char *);
@


1.22
log
@Manual cleanup of remaining userland __P use (excluding packages maintained outside the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.21 2002/02/16 21:27:46 millert Exp $	*/
d205 1
@


1.21
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.20 2000/06/21 19:22:54 itojun Exp $	*/
d144 2
a145 2
void    recvrequest __P((const char *, const char *, const char *,
	    const char *, int, int));
@


1.20
log
@add epsv4 command, which turns off epsv on ipv4 (off by dfeault)
automagicaslly disable epsv on ipv4, if epsv fails for single connection.
merge from netbsd-current.

req from fgs.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.19 1999/12/08 12:57:06 itojun Exp $	*/
d70 15
a84 15
void    abort_remote __P((FILE *));
void    abortpt __P((int));
void    abortrecv __P((int));
void    abortsend __P((int));
void	account __P((int, char **));
void	alarmtimer __P((int));
int	another __P((int *, char ***, const char *));
int	auto_fetch __P((int, char **, char *));
void	blkfree __P((char **));
void	cd __P((int, char **));
void	cdup __P((int, char **));
void	changetype __P((int, int));
void	cmdabort __P((int));
void	cmdscanner __P((int));
int	command __P((const char *, ...));
d86 2
a87 2
unsigned char complete __P((EditLine *, int));
void	controlediting __P((void));
d89 55
a143 55
int	confirm __P((const char *, const char *));
FILE   *dataconn __P((const char *));
void	delete __P((int, char **));
void	disconnect __P((int, char **));
void	do_chmod __P((int, char **));
void	do_umask __P((int, char **));
void	domacro __P((int, char **));
char   *domap __P((char *));
void	doproxy __P((int, char **));
char   *dotrans __P((char *));
int     empty __P((fd_set *, int));
int	foregroundproc __P((void));
void	get __P((int, char **));
struct cmd *getcmd __P((const char *));
int	getit __P((int, char **, int, const char *));
int	getreply __P((int));
int	globulize __P((char **));
char   *gunique __P((const char *));
void	help __P((int, char **));
char   *hookup __P((char *, char *));
void	idle __P((int, char **));
int     initconn __P((void));
void	intr __P((void));
int	isurl __P((const char *));
void	list_vertical __P((StringList *));
void	lcd __P((int, char **));
int	login __P((const char *, char *, char *));
void	lostpeer __P((void));
void	lpwd __P((int, char **));
void	ls __P((int, char **));
void	mabort __P((int));
void	macdef __P((int, char **));
void	makeargv __P((void));
void	makedir __P((int, char **));
void	mdelete __P((int, char **));
void	mget __P((int, char **));
void	mls __P((int, char **));
void	modtime __P((int, char **));
void	mput __P((int, char **));
char   *onoff __P((int));
void	newer __P((int, char **));
void	page __P((int, char **));
void    progressmeter __P((int));
char   *prompt __P((void));
void	proxabort __P((int));
void    proxtrans __P((const char *, const char *, const char *));
void    psabort __P((int));
void	psummary __P((int));
void    pswitch __P((int));
void    ptransfer __P((int));
void	put __P((int, char **));
void	pwd __P((int, char **));
void	quit __P((int, char **));
void	quote __P((int, char **));
void	quote1 __P((const char *, int, char **));
d146 50
a195 50
void	reget __P((int, char **));
char   *remglob __P((char **, int, char **));
off_t	remotesize __P((const char *, int));
time_t	remotemodtime __P((const char *, int));
void	removedir __P((int, char **));
void	renamefile __P((int, char **));
void    reset __P((int, char **));
void	restart __P((int, char **));
void	rmthelp __P((int, char **));
void	rmtstatus __P((int, char **));
int	ruserpass __P((const char *, char **, char **, char **));
void    sendrequest __P((const char *, const char *, const char *, int));
void	setascii __P((int, char **));
void	setbell __P((int, char **));
void	setbinary __P((int, char **));
void	setcase __P((int, char **));
void	setcr __P((int, char **));
void	setdebug __P((int, char **));
void	setedit __P((int, char **));
void	setepsv4 __P((int, char **));
void	setform __P((int, char **));
void	setftmode __P((int, char **));
void	setgate __P((int, char **));
void	setglob __P((int, char **));
void	sethash __P((int, char **));
void	setnmap __P((int, char **));
void	setntrans __P((int, char **));
void	setpassive __P((int, char **));
void	setpeer __P((int, char **));
void	setport __P((int, char **));
void	setpreserve __P((int, char **));
void	setprogress __P((int, char **));
void	setprompt __P((int, char **));
void	setrunique __P((int, char **));
void	setstruct __P((int, char **));
void	setsunique __P((int, char **));
void	settenex __P((int, char **));
void	settrace __P((int, char **));
void	setttywidth __P((int));
void	settype __P((int, char **));
void	setverbose __P((int, char **));
void	shell __P((int, char **));
void	site __P((int, char **));
void	sizecmd __P((int, char **));
char   *slurpstring __P((void));
void	status __P((int, char **));
void	syst __P((int, char **));
int	togglevar __P((int, char **, int *, const char *));
void	usage __P((void));
void	user __P((int, char **));
@


1.19
log
@ftp(1) from KAME, should be good for testing.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.18 1998/07/07 17:26:39 art Exp $	*/
d165 1
@


1.18
log
@fd_set is not a struct
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.17 1998/02/17 23:22:53 millert Exp $	*/
d4 29
d108 1
a108 1
char   *hookup __P((const char *, in_port_t));
d112 1
@


1.17
log
@Add a new option "-o filename" for autofetch mode.  Allows use of
"-" to mean stdout.  This replaces the old (unreliable) hueristic
of checking if stdout is a tty and if not make the output go to stdout.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.16 1997/09/04 04:37:14 millert Exp $	*/
d39 1
a39 1
struct fd_set;
d70 1
a70 1
int     empty __P((struct fd_set *, int));
@


1.16
log
@Updtaes from NetBSD (lukem)
    bugs fixed:
      * don't interpret '-' or '|' when a local filename is determined from
        the remote name (i.e, in mget, and in get with only one argument).
        This is implemented using an extra argument to recvrequest().
        Fixes a major security hole.
      * clean up memory leak when using globulize()
      * clean up a couple of comments
      * fix wording in TNF copyright

    features added:
      * support for TIS fwtk gate-ftp servers:
        * read defaults from $FTPSERVER && $FTPSERVERPORT
        * start in gate-ftp mode if invoked as 'gate-ftp'
        * toggle or set with 'gate [host [port]]'

Other changes:
    * use symbolic flags in access(2)
    * Use USHRT_MAX, not 0xffff
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.15 1997/07/25 21:56:19 millert Exp $	*/
d48 1
a48 1
int	auto_fetch __P((int, char **, int));
@


1.15
log
@Updates from NetBSD (lukem) include -Wall cleanup.
More -W* cleanup and in_port_t usage by me.
@
text
@d1 2
a2 2
/*	$OpenBSD: extern.h,v 1.14 1997/06/10 19:39:53 millert Exp $	*/
/*	$NetBSD: extern.h,v 1.16 1997/07/20 09:45:48 lukem Exp $	*/
d115 1
a115 1
	    const char *, int));
d137 1
@


1.14
log
@Disable progress meter if started as a bg process.  Also don't
print the progress meter if the ftp process is put in the bg
(but do print it when/if the process is foregrounded).
From Enami Tsugutomo <enami@@ba2.so-net.or.jp> with tweaks by me.
@
text
@d1 2
a2 2
/*	$OpenBSD: extern.h,v 1.13 1997/04/23 20:33:04 deraadt Exp $	*/
/*	$NetBSD: extern.h,v 1.15 1997/04/14 09:09:17 lukem Exp $	*/
a44 1
void    aborthttp __P((int));
d71 1
a71 1
int	foregroundproc __P(());
d79 1
a79 1
char   *hookup __P((const char *, int));
@


1.13
log
@allow "ftp -aV ftp://host/foo.tar.gz | tar xvfpz -" to work
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.12 1997/04/16 05:02:46 millert Exp $	*/
d72 1
@


1.12
log
@Sync with NetBSD (lukem):
 * differentiate between being connected, and being logged in
 * cleanup some text messages
 * support username & password ftp URLs (ftp://user:pass@@host/) in non-proxy
   situations; assume proxy supports it for proxy situations.
 * cd to / before performing any autofetch transfers
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.11 1997/04/10 00:17:08 millert Exp $	*/
d49 1
a49 1
int	auto_fetch __P((int, char **));
@


1.11
log
@Sync with NetBSD (lukem)
    * support $ftp_proxy for ftp:// transfers [bin/3245]
    * add "more" & "less" as synonyms for "page"
    * move editline setup code into controlediting(), and call appropriately.
      only setup setup terminal if going into interactive mode.
@
text
@d1 2
a2 2
/*	$OpenBSD: extern.h,v 1.10 1997/03/21 20:59:28 millert Exp $	*/
/*	$NetBSD: extern.h,v 1.14 1997/04/05 03:27:34 lukem Exp $	*/
d85 1
a85 1
int	login __P((const char *));
@


1.10
log
@Add in recent NetBSD changes we didn't already have:
    Always compile complete.c but ifdef out the bits if -DSMALL (christos)
    reset interactive mode correctly in auto_fetch() mget mode (lukem)
@
text
@d1 2
a2 2
/*	$OpenBSD: extern.h,v 1.9 1997/03/14 04:32:14 millert Exp $	*/
/*	$NetBSD: extern.h,v 1.13 1997/03/14 01:39:37 christos Exp $	*/
d59 1
@


1.9
log
@Sync with NetBSD and fix "get foo.txt /dev/tty" wrt progress meter
and setting times.
@
text
@d1 2
a2 2
/*	$OpenBSD: extern.h,v 1.8 1997/02/05 04:55:15 millert Exp $	*/
/*	$NetBSD: extern.h,v 1.12 1997/03/13 06:23:15 lukem Exp $	*/
d57 1
a57 1
#ifndef SMALLFTP
d59 1
a59 1
#endif /* !SMALLFTP */
@


1.8
log
@Include signal.h where reasonable and make signal handlers match
what signal(3)'s prototype says (and cast when not).
Also change MAXFOO+1 -> MAXFOO since MAXFOO includes the NULL.
Support $TMPDIR and use utime(3) not utimes(2) for portability's sake.
Don't spew "Passive mode enabled/disabled" unless verbose (this means
togglevar() needs to watch for a NULL 'message').
@
text
@d1 2
a2 2
/*	$NetBSD: extern.h,v 1.11 1997/02/01 10:44:58 lukem Exp $	*/
/*	$OpenBSD: extern.h,v 1.7 1997/02/03 01:05:37 millert Exp $	*/
d56 1
a56 1
int	command __P(());
d90 1
a90 1
void	makeargv __P(());
d99 1
d116 1
a116 1
char   *remglob __P((char **, int));
d157 1
a157 1
char   *slurpstring __P(());
@


1.7
log
@Add back ``-r'' option and fix strncpy() usage and other nits because
I'm anal.  Closer to KNF now.
@
text
@d2 1
a2 1
/*	$OpenBSD: extern.h,v 1.11 1997/02/01 10:44:58 lukem Exp $	*/
d42 4
a45 4
void    abortpt __P(());
void    abortrecv __P(());
void    abortsend __P(());
void    aborthttp __P(());
d54 1
a54 1
void	cmdabort __P(());
d81 1
a81 1
void	intr __P(());
d85 1
a85 1
void	lostpeer __P(());
d100 2
a101 2
char   *prompt __P(());
void	proxabort __P(());
d103 1
a103 1
void    psabort __P(());
d160 1
a160 1
void	usage __P(());
@


1.6
log
@Sync with NetBSD
@
text
@d2 1
@


1.5
log
@split cd() into two pieces, whoever was here last did a bad job
@
text
@d1 1
a1 2
/*      $OpenBSD: extern.h,v 1.4 1996/12/17 02:11:46 michaels Exp $      */
/*      $NetBSD: extern.h,v 1.4 1995/09/08 01:06:19 tls Exp $      */
a37 1
struct timeval;
d44 1
d46 3
a48 1
int	another __P((int *, char ***, char *));
a50 1
int	mcd __P((int, char **));
d56 5
a60 2
int	confirm __P((char *, char *));
FILE   *dataconn __P((char *));
a69 1
void	fatal __P((char *));
d71 2
a72 2
struct cmd *getcmd __P((char *));
int	getit __P((int, char **, int, char *));
d75 1
a75 1
char   *gunique __P((char *));
d77 1
a77 1
char   *hookup __P((char *, int));
d81 1
d83 1
a83 1
int	login __P((char *));
d85 1
d89 1
a89 1
void	makeargv __P((void));
d98 2
d101 1
a101 1
void    proxtrans __P((char *, char *, char *));
d103 1
d105 1
a105 1
void    ptransfer __P((char *, long, struct timeval *, struct timeval *));
d110 3
a112 2
void	quote1 __P((char *, int, char **));
void    recvrequest __P((char *, char *, char *, char *, int));
d115 2
d123 2
a124 2
int	ruserpass __P((char *, char **, char **, char **));
void    sendrequest __P((char *, char *, char *, int));
d131 1
d141 2
d149 1
d155 1
a155 1
char   *slurpstring __P((void));
d158 2
a159 1
void    tvsub __P((struct timeval *, struct timeval *, struct timeval *));
d161 1
a161 1
int	http_fetch __P((char *));
d166 1
a166 1
extern FILE	*cout;
d174 3
@


1.4
log
@if pathname given is a valid directory, cd to it at remote, also
assume empty pathname means cd to '/', like ncftp (?).
@
text
@d1 1
a1 1
/*      $OpenBSD: extern.h,v 1.2 1996/06/26 05:33:35 deraadt Exp $      */
d49 2
a50 1
int	cd __P((int, char **));
@


1.3
log
@http:// support for the command line fetches; useful for the ports subsystem
and other scripts. written by brian@@saturn.net (and then i clawed at it for
a bit..)
@
text
@d49 1
a49 1
void	cd __P((int, char **));
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*      $OpenBSD: extern.h,v 1.4 1995/09/08 01:06:19 tls Exp $      */
d145 1
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
