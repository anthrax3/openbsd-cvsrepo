head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.12
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.10
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.6
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.4
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.10.0.24
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.20
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.18
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.16
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.14
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.12
	OPENBSD_5_0:1.10.0.10
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.8
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.6
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.4
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.8.0.6
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.4
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.2
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.6.0.6
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.4
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.6
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.20
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.18
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.16
	OPENBSD_2_8:1.2.0.14
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.12
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.10
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.8
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.12
date	2015.05.20.23.39.55;	author schwarze;	state Exp;
branches;
next	1.11;
commitid	pyt6aC002Ee1ZI6x;

1.11
date	2014.10.08.04.01.10;	author doug;	state Exp;
branches;
next	1.10;
commitid	XXEbyxKssnS22KuB;

1.10
date	2009.05.05.19.35.30;	author martynas;	state Exp;
branches;
next	1.9;

1.9
date	2009.04.27.21.37.13;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2007.09.02.15.19.32;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2006.04.25.05.45.20;	author tedu;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.16.04.39.16;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2004.07.20.03.50.26;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2003.12.16.21.46.22;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.07.12.00.25.30;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.07.25.21.56.23;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.02.03.01.05.44;	author millert;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Remove clauses 3 and 4 from Christos Zoulas' BSD license.
This is safe because Christos did that himself in NetBSD in 2008.
No code change.
@
text
@/*	$OpenBSD: stringlist.c,v 1.11 2014/10/08 04:01:10 doug Exp $	*/
/*	$NetBSD: stringlist.c,v 1.2 1997/01/17 07:26:20 lukem Exp $	*/

/*
 * Copyright (c) 1994 Christos Zoulas
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef SMALL

#include <stdio.h>
#include <string.h>
#include <err.h>
#include <stdlib.h>

#include "stringlist.h"

#define _SL_CHUNKSIZE	20

/*
 * sl_init(): Initialize a string list
 */
StringList *
sl_init(void)
{
	StringList *sl = malloc(sizeof(StringList));
	if (sl == NULL)
		err(1, "stringlist");

	sl->sl_cur = 0;
	sl->sl_max = _SL_CHUNKSIZE;
	sl->sl_str = calloc(sl->sl_max, sizeof(char *));
	if (sl->sl_str == NULL)
		err(1, "stringlist");
	return sl;
}


/*
 * sl_add(): Add an item to the string list
 */
void
sl_add(StringList *sl, char *name)
{
	if (sl->sl_cur == sl->sl_max - 1) {
		sl->sl_max += _SL_CHUNKSIZE;
		sl->sl_str = reallocarray(sl->sl_str, sl->sl_max,
		    sizeof(char *));
		if (sl->sl_str == NULL)
			err(1, "stringlist");
	}
	sl->sl_str[sl->sl_cur++] = name;
}


/*
 * sl_free(): Free a stringlist
 */
void
sl_free(StringList *sl, int all)
{
	size_t i;

	if (sl == NULL)
		return;
	if (sl->sl_str) {
		if (all)
			for (i = 0; i < sl->sl_cur; i++)
				free(sl->sl_str[i]);
		free(sl->sl_str);
	}
	free(sl);
}

#endif /* !SMALL */

@


1.11
log
@userland reallocarray audit.

Replace malloc() and realloc() calls that may have integer overflow in the
multiplication of the arguments with reallocarray().

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stringlist.c,v 1.10 2009/05/05 19:35:30 martynas Exp $	*/
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Christos Zoulas.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.10
log
@make it clean removing the ifdef SMALL maze.  separate cmds and
small stuff.  make it a fetcher.  shrinks quite a bit
agreed by millert@@, krw@@
ok theo, sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stringlist.c,v 1.9 2009/04/27 21:37:13 deraadt Exp $	*/
d73 2
a74 1
		sl->sl_str = realloc(sl->sl_str, sl->sl_max * sizeof(char *));
@


1.9
log
@toast the rcsid strings which just get in the way
@
text
@d1 1
a1 1
/*	$OpenBSD: stringlist.c,v 1.8 2007/09/02 15:19:32 deraadt Exp $	*/
d35 2
d99 3
@


1.8
log
@use calloc() to avoid malloc(n * m) overflows; checked by djm canacar jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: stringlist.c,v 1.7 2006/04/25 05:45:20 tedu Exp $	*/
a33 4

#if defined(LIBC_SCCS) && !defined(lint) && !defined(SMALL)
static const char rcsid[] = "$OpenBSD: stringlist.c,v 1.7 2006/04/25 05:45:20 tedu Exp $";
#endif /* LIBC_SCCS and not lint and not SMALL */
@


1.7
log
@two strtol calls that were begging to be converted to strtonum
@
text
@d1 1
a1 1
/*	$OpenBSD: stringlist.c,v 1.6 2004/09/16 04:39:16 deraadt Exp $	*/
d36 1
a36 1
static const char rcsid[] = "$OpenBSD: stringlist.c,v 1.6 2004/09/16 04:39:16 deraadt Exp $";
d60 1
a60 1
	sl->sl_str = malloc(sl->sl_max * sizeof(char *));
@


1.6
log
@type corrections and other delinting
@
text
@d1 1
a1 1
/*	$OpenBSD: stringlist.c,v 1.5 2004/07/20 03:50:26 deraadt Exp $	*/
d36 1
a36 1
static char *rcsid = "$OpenBSD: stringlist.c,v 1.5 2004/07/20 03:50:26 deraadt Exp $";
@


1.5
log
@ansi; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: stringlist.c,v 1.4 2003/12/16 21:46:22 deraadt Exp $	*/
d36 1
a36 1
static char *rcsid = "$OpenBSD: stringlist.c,v 1.4 2003/12/16 21:46:22 deraadt Exp $";
a99 16
}


/*
 * sl_find(): Find a name in the string list
 */
char *
sl_find(StringList *sl, char *name)
{
	size_t i;

	for (i = 0; i < sl->sl_cur; i++)
		if (strcmp(sl->sl_str[i], name) == 0)
			return sl->sl_str[i];

	return NULL;
@


1.4
log
@for -DSMALL, do not include rcsid[]s
@
text
@d1 1
a1 1
/*	$OpenBSD: stringlist.c,v 1.3 2002/07/12 00:25:30 deraadt Exp $	*/
d36 1
a36 1
static char *rcsid = "$OpenBSD: stringlist.c,v 1.3 2002/07/12 00:25:30 deraadt Exp $";
d52 1
a52 1
sl_init()
d71 1
a71 3
sl_add(sl, name)
	StringList *sl;
	char *name;
d87 1
a87 3
sl_free(sl, all)
	StringList *sl;
	int all;
d107 1
a107 3
sl_find(sl, name)
	StringList *sl;
	char *name;
@


1.3
log
@malloc/strdup failure not handled; cloder@@acm.org
@
text
@d1 1
a1 1
/*	$OpenBSD: stringlist.c,v 1.2 1997/07/25 21:56:23 millert Exp $	*/
d35 3
a37 3
#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: stringlist.c,v 1.2 1997/07/25 21:56:23 millert Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.2
log
@Updates from NetBSD (lukem) include -Wall cleanup.
More -W* cleanup and in_port_t usage by me.
@
text
@d1 1
a1 1
/*	$OpenBSD: stringlist.c,v 1.1 1997/02/03 01:05:44 millert Exp $	*/
d36 1
a36 1
static char *rcsid = "$OpenBSD: stringlist.c,v 1.1 1997/02/03 01:05:44 millert Exp $";
d56 1
a56 1
		err(1, "stringlist: %m");
d62 1
a62 1
		err(1, "stringlist: %m");
d79 1
a79 1
			err(1, "stringlist: %m");
@


1.1
log
@Add back ``-r'' option and fix strncpy() usage and other nits because
I'm anal.  Closer to KNF now.
@
text
@d1 1
a1 1
/*	$OpenBSD: stringlist.c,v 1.2 1997/01/17 07:26:20 lukem Exp $	*/
d36 1
a36 1
static char *rcsid = "$OpenBSD: stringlist.c,v 1.2 1997/01/17 07:26:20 lukem Exp $";
d56 1
a56 1
		_err(1, "stringlist: %m");
d62 1
a62 1
		_err(1, "stringlist: %m");
d79 1
a79 1
			_err(1, "stringlist: %m");
@
