head	1.19;
access;
symbols
	OPENBSD_6_0:1.18.0.4
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.17.0.28
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.22
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.24
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.20
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.18
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.16
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.14
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.12
	OPENBSD_5_0:1.17.0.10
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.8
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.6
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.2
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.4
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.14.0.2
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.13.0.10
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.8
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.6
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.4
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.2
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.11.0.8
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.6
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.2
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.7.0.22
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.20
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.18
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.16
	OPENBSD_2_8:1.7.0.14
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.12
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.10
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.8
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.6
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.4
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2017.01.21.08.33.07;	author krw;	state Exp;
branches;
next	1.18;
commitid	l2fu419jw6ah0BY2;

1.18
date	2015.10.18.03.04.11;	author mmcc;	state Exp;
branches;
next	1.17;
commitid	QQdb0QX6CyUg58R7;

1.17
date	2009.05.05.19.35.30;	author martynas;	state Exp;
branches;
next	1.16;

1.16
date	2009.04.27.22.51.51;	author martynas;	state Exp;
branches;
next	1.15;

1.15
date	2009.04.27.21.37.13;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2008.08.22.08.52.35;	author sobrado;	state Exp;
branches;
next	1.13;

1.13
date	2006.05.16.23.43.16;	author ray;	state Exp;
branches;
next	1.12;

1.12
date	2006.04.25.05.45.20;	author tedu;	state Exp;
branches;
next	1.11;

1.11
date	2004.07.20.03.50.25;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.12.16.21.46.22;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.03.02.56.08;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2003.01.22.05.35.39;	author itojun;	state Exp;
branches;
next	1.7;

1.7
date	97.07.25.21.56.19;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.04.23.20.33.02;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.03.14.04.32.13;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.02.03.01.05.36;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.02.03.01.02.35;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.33.34;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.17;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.17;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Nuke whitespace foolish enough to expose itself during the great
"warning:" rectification.
@
text
@/*	$OpenBSD: domacro.c,v 1.18 2015/10/18 03:04:11 mmcc Exp $	*/
/*	$NetBSD: domacro.c,v 1.10 1997/07/20 09:45:45 lukem Exp $	*/

/*
 * Copyright (c) 1985, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef SMALL

#include <ctype.h>
#include <signal.h>
#include <stdio.h>
#include <string.h>

#include "ftp_var.h"

void
domacro(int argc, char *argv[])
{
	int i, j, count = 2, loopflg = 0;
	char *cp1, *cp2, line2[FTPBUFLEN];
	struct cmd *c;

	if (argc < 2 && !another(&argc, &argv, "macro name")) {
		fprintf(ttyout, "usage: %s macro-name\n", argv[0]);
		code = -1;
		return;
	}
	for (i = 0; i < macnum; ++i) {
		if (!strncmp(argv[1], macros[i].mac_name, 9)) {
			break;
		}
	}
	if (i == macnum) {
		fprintf(ttyout, "'%s' macro not found.\n", argv[1]);
		code = -1;
		return;
	}
	(void)strlcpy(line2, line, sizeof(line2));
TOP:
	cp1 = macros[i].mac_start;
	while (cp1 != macros[i].mac_end) {
		while (isspace((unsigned char)*cp1)) {
			cp1++;
		}
		cp2 = line;
		while (*cp1 != '\0') {
		      switch(*cp1) {
			    case '\\':
				 *cp2++ = *++cp1;
				 break;
			    case '$':
				 if (isdigit((unsigned char)*(cp1 + 1))) {
				    j = 0;
				    while (isdigit((unsigned char)*++cp1)) {
					  j = 10*j +  *cp1 - '0';
				    }
				    cp1--;
				    if (argc - 2 >= j) {
					(void)strlcpy(cp2, argv[j+1],
					    sizeof(line) - (cp2 - line));
					cp2 += strlen(argv[j+1]);
				    }
				    break;
				 }
				 if (*(cp1+1) == 'i') {
					loopflg = 1;
					cp1++;
					if (count < argc) {
					   (void)strlcpy(cp2, argv[count],
					       sizeof(line) - (cp2 - line));
					   cp2 += strlen(argv[count]);
					}
					break;
				}
				/* FALLTHROUGH */
			    default:
				*cp2++ = *cp1;
				break;
		      }
		      if (*cp1 != '\0') {
			 cp1++;
		      }
		}
		*cp2 = '\0';
		makeargv();
		c = getcmd(margv[0]);
		if (c == (struct cmd *)-1) {
			fputs("?Ambiguous command.\n", ttyout);
			code = -1;
		}
		else if (c == 0) {
			fputs("?Invalid command.\n", ttyout);
			code = -1;
		}
		else if (c->c_conn && !connected) {
			fputs("Not connected.\n", ttyout);
			code = -1;
		}
		else {
			if (verbose) {
				fputs(line, ttyout);
				fputc('\n', ttyout);
			}
			(*c->c_handler)(margc, margv);
			if (bell && c->c_bell) {
				(void)putc('\007', ttyout);
			}
			(void)strlcpy(line, line2, sizeof(line));
			makeargv();
			argc = margc;
			argv = margv;
		}
		if (cp1 != macros[i].mac_end) {
			cp1++;
		}
	}
	if (loopflg && ++count < argc) {
		goto TOP;
	}
}

#endif /* !SMALL */

@


1.18
log
@A whole buncha unsigned char casts for ctype function arguments.

ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.17 2009/05/05 19:35:30 martynas Exp $	*/
d74 1
a74 1
		   	    case '\\':
@


1.17
log
@make it clean removing the ifdef SMALL maze.  separate cmds and
small stuff.  make it a fetcher.  shrinks quite a bit
agreed by millert@@, krw@@
ok theo, sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.16 2009/04/27 22:51:51 martynas Exp $	*/
d68 1
a68 1
		while (isspace(*cp1)) {
d78 1
a78 1
				 if (isdigit(*(cp1+1))) {
d80 1
a80 1
				    while (isdigit(*++cp1)) {
@


1.16
log
@remove uploading and macros support from install media;  to save
some space
discussed with theo, todd@@, millert@@
tested and looked over by sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.15 2009/04/27 21:37:13 deraadt Exp $	*/
d149 1
@


1.15
log
@toast the rcsid strings which just get in the way
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.14 2008/08/22 08:52:35 sobrado Exp $	*/
d33 2
d147 2
@


1.14
log
@default file transfer type is binary, not ascii;
commands which toggle settings can take an explicit on or off argument
to force the setting appropiately, show these arguments in usage;
synchronize synopsis and usage of commands; spacing; KNF;
other minor documentation tweaks.

written with help by jmc@@

ok jmc@@ (documentation), martynas@@ (type usage and default file transfer type)
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.13 2006/05/16 23:43:16 ray Exp $	*/
a31 4

#if !defined(lint) && !defined(SMALL)
static const char rcsid[] = "$OpenBSD: domacro.c,v 1.13 2006/05/16 23:43:16 ray Exp $";
#endif /* not lint and not SMALL */
@


1.13
log
@Remove shadowing variables and properly use /* FALLTHROUGH */
comments.  No binary change.

Found by lint.

OK beck@@, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.12 2006/04/25 05:45:20 tedu Exp $	*/
d34 1
a34 1
static const char rcsid[] = "$OpenBSD: domacro.c,v 1.12 2006/04/25 05:45:20 tedu Exp $";
d52 1
a52 1
		fprintf(ttyout, "usage: %s macro_name\n", argv[0]);
@


1.12
log
@two strtol calls that were begging to be converted to strtonum
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.11 2004/07/20 03:50:25 deraadt Exp $	*/
d34 1
a34 1
static const char rcsid[] = "$OpenBSD: domacro.c,v 1.11 2004/07/20 03:50:25 deraadt Exp $";
d103 1
a103 1
				/* intentional drop through */
@


1.11
log
@ansi; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.10 2003/12/16 21:46:22 deraadt Exp $	*/
d34 1
a34 1
static char rcsid[] = "$OpenBSD: domacro.c,v 1.10 2003/12/16 21:46:22 deraadt Exp $";
@


1.10
log
@for -DSMALL, do not include rcsid[]s
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.9 2003/06/03 02:56:08 millert Exp $	*/
d34 1
a34 1
static char rcsid[] = "$OpenBSD: domacro.c,v 1.9 2003/06/03 02:56:08 millert Exp $";
d45 1
a45 3
domacro(argc, argv)
	int argc;
	char *argv[];
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.8 2003/01/22 05:35:39 itojun Exp $	*/
d33 3
a35 7
#ifndef lint
#if 0
static char sccsid[] = "@@(#)domacro.c	8.3 (Berkeley) 4/2/94";
#else
static char rcsid[] = "$OpenBSD: domacro.c,v 1.8 2003/01/22 05:35:39 itojun Exp $";
#endif
#endif /* not lint */
@


1.8
log
@line2 may overrun if line is too long (> 200).  be more careful on strcpy.
XXX strlen(argv[x]) should be checked before copies.
netbsd 1.18 -> 1.19, requested by David Krause
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.7 1997/07/25 21:56:19 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: domacro.c,v 1.7 1997/07/25 21:56:19 millert Exp $";
@


1.7
log
@Updates from NetBSD (lukem) include -Wall cleanup.
More -W* cleanup and in_port_t usage by me.
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.6 1997/04/23 20:33:02 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: domacro.c,v 1.6 1997/04/23 20:33:02 deraadt Exp $";
d58 1
a58 1
	char *cp1, *cp2, line2[200];
d76 1
a76 1
	(void)strcpy(line2, line);
d97 2
a98 1
					(void)strcpy(cp2, argv[j+1]);
d107 2
a108 1
					   (void)strcpy(cp2, argv[count]);
d146 1
a146 1
			(void)strcpy(line, line2);
@


1.6
log
@allow "ftp -aV ftp://host/foo.tar.gz | tar xvfpz -" to work
@
text
@d1 2
a2 2
/*	$OpenBSD: domacro.c,v 1.5 1997/03/14 04:32:13 millert Exp $	*/
/*	$NetBSD: domacro.c,v 1.9 1997/03/13 06:23:14 lukem Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: domacro.c,v 1.5 1997/03/14 04:32:13 millert Exp $";
d138 1
a138 1
				fputs("\n", ttyout);
@


1.5
log
@Sync with NetBSD and fix "get foo.txt /dev/tty" wrt progress meter
and setting times.
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.4 1997/02/03 01:05:36 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: domacro.c,v 1.4 1997/02/03 01:05:36 millert Exp $";
d62 1
a62 1
		printf("usage: %s macro_name\n", argv[0]);
d72 1
a72 1
		printf("'%s' macro not found.\n", argv[1]);
d124 1
a124 1
			puts("?Ambiguous command.");
d128 1
a128 1
			puts("?Invalid command.");
d132 1
a132 1
			puts("Not connected.");
d136 4
a139 2
			if (verbose)
				puts(line);
d142 1
a142 1
				(void)putchar('\007');
@


1.4
log
@Add back ``-r'' option and fix strncpy() usage and other nits because
I'm anal.  Closer to KNF now.
@
text
@d1 2
a2 2
/*	$OpenBSD: domacro.c,v 1.8 1997/01/19 14:19:08 lukem Exp $	*/
/*	$NetBSD: domacro.c,v 1.8 1997/01/19 14:19:08 lukem Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: domacro.c,v 1.8 1997/01/19 14:19:08 lukem Exp $";
d62 1
a62 1
		printf("Usage: %s macro_name.\n", argv[0]);
d124 1
a124 1
			puts("?Ambiguous command");
d128 1
a128 1
			puts("?Invalid command");
d136 1
a136 1
			if (verbose) {
a137 1
			}
@


1.3
log
@Sync with NetBSD
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: domacro.c,v 1.8 1997/01/19 14:19:08 lukem Exp $";
d76 1
a76 1
	(void) strcpy(line2, line);
d97 1
a97 1
					(void) strcpy(cp2, argv[j+1]);
d106 1
a106 1
					   (void) strcpy(cp2, argv[count]);
d124 1
a124 1
			printf("?Ambiguous command\n");
d128 1
a128 1
			printf("?Invalid command\n");
d132 1
a132 1
			printf("Not connected.\n");
d137 1
a137 1
				printf("%s\n", line);
d141 1
a141 1
				(void) putchar('\007');
d143 1
a143 1
			(void) strcpy(line, line2);
@


1.2
log
@rcsid
@
text
@d1 1
a1 2
/*      $OpenBSD: domacro.c,v 1.5 1995/09/08 01:06:14 tls Exp $      */
/*      $NetBSD: domacro.c,v 1.5 1995/09/08 01:06:14 tls Exp $      */
d40 1
a40 1
static char rcsid[] = "$OpenBSD: domacro.c,v 1.5 1995/09/08 01:06:14 tls Exp $";
d47 1
a47 1
#include <strings.h>
d136 1
a136 1
				printf("%s\n",line);
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: domacro.c,v 1.5 1995/09/08 01:06:14 tls Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
