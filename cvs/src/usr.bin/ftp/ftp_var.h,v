head	1.40;
access;
symbols
	OPENBSD_6_1_BASE:1.40
	OPENBSD_6_0:1.38.0.8
	OPENBSD_6_0_BASE:1.38
	OPENBSD_5_9:1.38.0.4
	OPENBSD_5_9_BASE:1.38
	OPENBSD_5_8:1.38.0.6
	OPENBSD_5_8_BASE:1.38
	OPENBSD_5_7:1.38.0.2
	OPENBSD_5_7_BASE:1.38
	OPENBSD_5_6:1.35.0.4
	OPENBSD_5_6_BASE:1.35
	OPENBSD_5_5:1.33.0.2
	OPENBSD_5_5_BASE:1.33
	OPENBSD_5_4:1.32.0.6
	OPENBSD_5_4_BASE:1.32
	OPENBSD_5_3:1.32.0.4
	OPENBSD_5_3_BASE:1.32
	OPENBSD_5_2:1.32.0.2
	OPENBSD_5_2_BASE:1.32
	OPENBSD_5_1_BASE:1.31
	OPENBSD_5_1:1.31.0.8
	OPENBSD_5_0:1.31.0.6
	OPENBSD_5_0_BASE:1.31
	OPENBSD_4_9:1.31.0.4
	OPENBSD_4_9_BASE:1.31
	OPENBSD_4_8:1.31.0.2
	OPENBSD_4_8_BASE:1.31
	OPENBSD_4_7:1.29.0.2
	OPENBSD_4_7_BASE:1.29
	OPENBSD_4_6:1.29.0.4
	OPENBSD_4_6_BASE:1.29
	OPENBSD_4_5:1.27.0.4
	OPENBSD_4_5_BASE:1.27
	OPENBSD_4_4:1.27.0.2
	OPENBSD_4_4_BASE:1.27
	OPENBSD_4_3:1.25.0.2
	OPENBSD_4_3_BASE:1.25
	OPENBSD_4_2:1.24.0.2
	OPENBSD_4_2_BASE:1.24
	OPENBSD_4_1:1.23.0.4
	OPENBSD_4_1_BASE:1.23
	OPENBSD_4_0:1.23.0.2
	OPENBSD_4_0_BASE:1.23
	OPENBSD_3_9:1.22.0.12
	OPENBSD_3_9_BASE:1.22
	OPENBSD_3_8:1.22.0.10
	OPENBSD_3_8_BASE:1.22
	OPENBSD_3_7:1.22.0.8
	OPENBSD_3_7_BASE:1.22
	OPENBSD_3_6:1.22.0.6
	OPENBSD_3_6_BASE:1.22
	OPENBSD_3_5:1.22.0.4
	OPENBSD_3_5_BASE:1.22
	OPENBSD_3_4:1.22.0.2
	OPENBSD_3_4_BASE:1.22
	OPENBSD_3_3:1.21.0.6
	OPENBSD_3_3_BASE:1.21
	OPENBSD_3_2:1.21.0.4
	OPENBSD_3_2_BASE:1.21
	OPENBSD_3_1:1.21.0.2
	OPENBSD_3_1_BASE:1.21
	OPENBSD_3_0:1.19.0.6
	OPENBSD_3_0_BASE:1.19
	OPENBSD_2_9_BASE:1.19
	OPENBSD_2_9:1.19.0.4
	OPENBSD_2_8:1.19.0.2
	OPENBSD_2_8_BASE:1.19
	OPENBSD_2_7:1.18.0.2
	OPENBSD_2_7_BASE:1.18
	OPENBSD_2_6:1.17.0.8
	OPENBSD_2_6_BASE:1.17
	OPENBSD_2_5:1.17.0.6
	OPENBSD_2_5_BASE:1.17
	OPENBSD_2_4:1.17.0.4
	OPENBSD_2_4_BASE:1.17
	OPENBSD_2_3:1.17.0.2
	OPENBSD_2_3_BASE:1.17
	OPENBSD_2_2:1.16.0.2
	OPENBSD_2_2_BASE:1.16
	OPENBSD_2_1:1.12.0.2
	OPENBSD_2_1_BASE:1.12
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.40
date	2017.01.21.08.33.07;	author krw;	state Exp;
branches;
next	1.39;
commitid	l2fu419jw6ah0BY2;

1.39
date	2016.12.28.17.48.04;	author deraadt;	state Exp;
branches;
next	1.38;
commitid	UIBQPJAx3NVjVFnr;

1.38
date	2015.02.09.08.24.21;	author tedu;	state Exp;
branches;
next	1.37;
commitid	Ab1pEJVaQayQbO7E;

1.37
date	2015.01.16.06.40.08;	author deraadt;	state Exp;
branches;
next	1.36;
commitid	Uu5nFG3wCl0LACBb;

1.36
date	2014.10.31.13.48.21;	author jsing;	state Exp;
branches;
next	1.35;
commitid	JZSdm092LMmDs9NJ;

1.35
date	2014.07.14.09.26.27;	author jsing;	state Exp;
branches;
next	1.34;
commitid	BJRfx2HJ6v6eQobV;

1.34
date	2014.07.11.03.31.52;	author lteo;	state Exp;
branches;
next	1.33;
commitid	TgWHWtjz2JHTa3XV;

1.33
date	2013.12.24.13.00.59;	author jca;	state Exp;
branches;
next	1.32;

1.32
date	2012.04.30.13.41.26;	author haesbaert;	state Exp;
branches;
next	1.31;

1.31
date	2010.07.02.22.01.10;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2010.04.30.19.29.01;	author jsg;	state Exp;
branches;
next	1.29;

1.29
date	2009.05.05.19.35.30;	author martynas;	state Exp;
branches;
next	1.28;

1.28
date	2009.04.27.22.51.51;	author martynas;	state Exp;
branches;
next	1.27;

1.27
date	2008.07.08.21.07.57;	author martynas;	state Exp;
branches;
next	1.26;

1.26
date	2008.06.25.21.15.19;	author martynas;	state Exp;
branches;
next	1.25;

1.25
date	2007.11.26.12.39.00;	author martynas;	state Exp;
branches;
next	1.24;

1.24
date	2007.06.13.13.52.26;	author pyr;	state Exp;
branches;
next	1.23;

1.23
date	2006.05.16.16.20.42;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2003.06.03.02.56.08;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	2002.02.16.21.27.46;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2001.10.27.10.31.27;	author heko;	state Exp;
branches;
next	1.19;

1.19
date	2000.06.21.19.22.54;	author itojun;	state Exp;
branches;
next	1.18;

1.18
date	99.12.08.12.57.06;	author itojun;	state Exp;
branches;
next	1.17;

1.17
date	97.12.17.16.03.04;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	97.10.02.04.22.01;	author imp;	state Exp;
branches;
next	1.15;

1.15
date	97.09.22.05.14.11;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	97.09.04.04.37.16;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	97.07.25.21.56.21;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	97.04.23.20.33.16;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	97.04.16.05.02.57;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	97.03.21.20.59.30;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	97.03.14.04.32.16;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.02.18.18.04.30;	author kstailey;	state Exp;
branches;
next	1.7;

1.7
date	97.02.03.01.05.41;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.02.03.01.02.40;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	96.11.09.19.59.35;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	96.10.31.14.36.56;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.33.37;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.03.15.55.47;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.17;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.17;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.40
log
@Nuke whitespace foolish enough to expose itself during the great
"warning:" rectification.
@
text
@/*	$OpenBSD: ftp_var.h,v 1.39 2016/12/28 17:48:04 deraadt Exp $	*/
/*	$NetBSD: ftp_var.h,v 1.18 1997/08/18 10:20:25 lukem Exp $	*/

/*
 * Copyright (C) 1997 and 1998 WIDE Project.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the project nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Copyright (c) 1985, 1989, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)ftp_var.h	8.4 (Berkeley) 10/9/94
 */

/*
 * FTP global variables.
 */

#include <sys/signal.h>
#include <limits.h>
#include <setjmp.h>

#ifndef SMALL
#include <histedit.h>
#endif /* !SMALL */

#include <tls.h>

#include "stringlist.h"
#include "extern.h"
#include "small.h"

#define HASHBYTES	1024
#define FTPBUFLEN	PATH_MAX + 200

#define STALLTIME	5	/* # of seconds of no xfer before "stalling" */

#define	FTP_PORT	21	/* default if ! getservbyname("ftp/tcp") */
#define	GATE_PORT	21	/* default if ! getservbyname("ftpgate/tcp") */
#define	HTTP_PORT	80	/* default if ! getservbyname("http/tcp") */
#define	HTTPS_PORT	443	/* default if ! getservbyname("https/tcp") */
#define	HTTP_USER_AGENT	"User-Agent: OpenBSD ftp"	/* User-Agent string sent to web server */

#define PAGER		"more"	/* default pager if $PAGER isn't set */

/*
 * Options and other state info.
 */
int	trace;			/* trace packets exchanged */
int	hash;			/* print # for each buffer transferred */
int	mark;			/* number of bytes between hashes */
int	sendport;		/* use PORT/LPRT cmd for each data connection */
int	verbose;		/* print messages coming back from server */
int	connected;		/* 1 = connected to server, -1 = logged in */
int	fromatty;		/* input is from a terminal */
int	interactive;		/* interactively prompt on m* cmds */
#ifndef SMALL
int	confirmrest;		/* confirm rest of current m* cmd */
int	debug;			/* debugging level */
int	bell;			/* ring bell on cmd completion */
char   *altarg;			/* argv[1] with no shell-like preprocessing  */
#endif /* !SMALL */
int	doglob;			/* glob local file names */
int	autologin;		/* establish user account on connection */
int	proxy;			/* proxy server connection active */
int	proxflag;		/* proxy connection exists */
int	gatemode;		/* use gate-ftp */
char   *gateserver;		/* server to use for gate-ftp */
int	sunique;		/* store files on server with unique name */
int	runique;		/* store local files with unique name */
int	mcase;			/* map upper to lower case for mget names */
int	ntflag;			/* use ntin ntout tables for name translation */
int	mapflag;		/* use mapin mapout templates on file names */
int	preserve;		/* preserve modification time on files */
int	progress;		/* display transfer progress bar */
int	code;			/* return/reply code for ftp command */
int	crflag;			/* if 1, strip car. rets. on ascii gets */
char	pasv[BUFSIZ];		/* passive port for proxy data connection */
int	passivemode;		/* passive mode enabled */
int	activefallback;		/* fall back to active mode if passive fails */
char	ntin[17];		/* input translation table */
char	ntout[17];		/* output translation table */
char	mapin[PATH_MAX];	/* input map template */
char	mapout[PATH_MAX];	/* output map template */
char	typename[32];		/* name of file transfer type */
int	type;			/* requested file transfer type */
int	curtype;		/* current file transfer type */
char	structname[32];		/* name of file transfer structure */
int	stru;			/* file transfer structure */
char	formname[32];		/* name of file transfer format */
int	form;			/* file transfer format */
char	modename[32];		/* name of file transfer mode */
int	mode;			/* file transfer mode */
char	bytename[32];		/* local byte size in ascii */
int	bytesize;		/* local byte size in binary */
int	anonftp;		/* automatic anonymous login */
int	dirchange;		/* remote directory changed by cd command */
unsigned int retry_connect;	/* retry connect if failed */
int	ttywidth;		/* width of tty */
int	epsv4;			/* use EPSV/EPRT on IPv4 connections */
int	epsv4bad;		/* EPSV doesn't work on the current server */

#ifndef SMALL
int	  editing;		/* command line editing enabled */
EditLine *el;			/* editline(3) status structure */
History  *hist;			/* editline(3) history structure */
char	 *cursor_pos;		/* cursor position we're looking for */
size_t	  cursor_argc;		/* location of cursor in margv */
size_t	  cursor_argo;		/* offset of cursor in margv[cursor_argc] */
int	  resume;		/* continue transfer */
char	 *srcaddr;		/* source address to bind to */
#endif /* !SMALL */

char	 *cookiefile;		/* cookie jar to use */

off_t	bytes;			/* current # of bytes read */
off_t	filesize;		/* size of file being transferred */
char   *direction;		/* direction transfer is occurring */

char   *hostname;		/* name of host connected to */
int	unix_server;		/* server is unix, can use binary for ascii */
int	unix_proxy;		/* proxy is unix, can use binary for ascii */

char *ftpport;			/* port number to use for ftp connections */
char *httpport;			/* port number to use for http connections */
#ifndef NOSSL
char *httpsport;		/* port number to use for https connections */
#endif /* !SMALL */
char *httpuseragent;		/* user agent for http(s) connections */
char *gateport;			/* port number to use for gateftp connections */

jmp_buf	toplevel;		/* non-local goto stuff for cmd scanner */

#ifndef SMALL
char	line[FTPBUFLEN];	/* input line buffer */
char	*argbase;		/* current storage point in arg buffer */
char	*stringbase;		/* current scan point in line buffer */
char	argbuf[FTPBUFLEN];	/* argument storage buffer */
StringList *marg_sl;		/* stringlist containing margv */
int	margc;			/* count of arguments on input line */
int	options;		/* used during socket creation */
#endif /* !SMALL */

#define margv (marg_sl->sl_str)	/* args parsed from input line */
int     cpend;                  /* flag: if != 0, then pending server reply */
int	mflag;			/* flag: if != 0, then active multi command */

/*
 * Format of command table.
 */
struct cmd {
	char	*c_name;	/* name of command */
	char	*c_help;	/* help string */
	char	 c_bell;	/* give bell when command completes */
	char	 c_conn;	/* must be connected to use command */
	char	 c_proxy;	/* proxy server may execute */
#ifndef SMALL
	char	*c_complete;	/* context sensitive completion list */
#endif /* !SMALL */
	void	(*c_handler)(int, char **); /* function to call */
};

struct macel {
	char mac_name[9];	/* macro name */
	char *mac_start;	/* start of macro in macbuf */
	char *mac_end;		/* end of macro in macbuf */
};

#ifndef SMALL
int macnum;			/* number of defined macros */
struct macel macros[16];
char macbuf[4096];
#endif /* !SMALL */

FILE	*ttyout;		/* stdout or stderr, depending on interactive */

extern struct cmd cmdtab[];

#ifndef NOSSL
extern struct tls_config *tls_config;
#endif /* !NOSSL */
@


1.39
log
@Split -DSMALL into -DNOSSL, so that a SSL-enabled version of ftp can
be built, which is still pretty small (in distrib/special/ftp-ssl).
Lots of testing by rpe.
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.38 2015/02/09 08:24:21 tedu Exp $	*/
d7 1
a7 1
 * 
d19 1
a19 1
 * 
@


1.38
log
@various defines always exist, so delete the ifdef test.
the socks support seems to be dead, since there are no other references.
also, redeclaring a standard function? that's a no-no.
custom compiles with gate-ftp servers don't need to be supported either.
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.37 2015/01/16 06:40:08 deraadt Exp $	*/
a158 1
char	 *cookiefile;		/* cookie jar to use */
d163 2
d175 1
a175 1
#ifndef SMALL
d228 1
a228 1
#ifndef SMALL
d230 1
a230 1
#endif /* !SMALL */
@


1.37
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.36 2014/10/31 13:48:21 jsing Exp $	*/
a75 5
#ifdef SOCKS
#include <socks.h>
int fclose(FILE *);
#endif

d88 1
a91 6
#ifndef	GATE_PORT
#define	GATE_PORT	21	/* default if ! getservbyname("ftpgate/tcp") */
#endif
#ifndef	GATE_SERVER
#define	GATE_SERVER	""	/* default server */
#endif
@


1.36
log
@Update ftp(1) to use libtls instead of libressl.
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.35 2014/07/14 09:26:27 jsing Exp $	*/
d68 2
a69 1
#include <sys/param.h>
d88 1
a88 1
#define FTPBUFLEN	MAXPATHLEN + 200
d142 2
a143 2
char	mapin[MAXPATHLEN];	/* input map template */
char	mapout[MAXPATHLEN];	/* output map template */
@


1.35
log
@Convert ftp(1) to libressl, rather than rolling in^W^Whand rolling libssl.

ok beck@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.34 2014/07/11 03:31:52 lteo Exp $	*/
d80 1
a80 1
#include <ressl.h>
d237 1
a237 1
extern struct ressl_config *ressl_config;
@


1.34
log
@Allow ftp(1) to change its User-Agent for HTTP(S) URL requests using a
-U command-line option.

feedback from deraadt@@, halex@@, and Adam Thompson
ok deraadt@@ sthen@@, man page changes ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.33 2013/12/24 13:00:59 jca Exp $	*/
d80 2
d237 1
a237 8
extern char	*ssl_ciphers;
extern char	*ssl_ca_file;
extern char	*ssl_ca_path;
extern int	 ssl_verify;
extern int	 ssl_verify_depth;
# ifndef	_PATH_SSL_CAFILE
#  define	_PATH_SSL_CAFILE "/etc/ssl/cert.pem"
# endif
@


1.33
log
@Add support for SSL/TLS server certificate validation, enabled by
default.  See the documentation for the `-S' switch.  This also allows
setting the preferred ciphers for the communication.  Documentation bits
ok'ed by jmc@@, ok beck@@ sthen@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.32 2012/04/30 13:41:26 haesbaert Exp $	*/
d184 1
@


1.32
log
@Add a -s flag to ftp(1) to let the user specify the source IP address
of the connection. This is useful for testing ftp(1) over VPN tunnels.

This -s flag is present in the other BSDs, including OS X.

All work was done by Lawrence Teo, thanks (-:.

ok myself mikeb
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.31 2010/07/02 22:01:10 deraadt Exp $	*/
d232 11
@


1.31
log
@#ifndef SMALL a few more things to save space on the ramdisks
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.30 2010/04/30 19:29:01 jsg Exp $	*/
d168 1
@


1.30
log
@shuffle some things around to deal with incomplete types
gcc4 gets upset about.
based on suggestions from miod@@, ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.29 2009/05/05 19:35:30 martynas Exp $	*/
d113 1
a114 1
#ifndef SMALL
d116 2
a118 1
int	bell;			/* ring bell on cmd completion */
a136 1
char   *altarg;			/* argv[1] with no shell-like preprocessing  */
d187 1
d189 1
a191 2
char	*argbase;		/* current storage point in arg buffer */
#ifndef SMALL
d193 2
d196 1
a196 1
int	margc;			/* count of arguments on input line */
a199 2

int	options;		/* used during socket creation */
@


1.29
log
@make it clean removing the ifdef SMALL maze.  separate cmds and
small stuff.  make it a fetcher.  shrinks quite a bit
agreed by millert@@, krw@@
ok theo, sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.28 2009/04/27 22:51:51 martynas Exp $	*/
d229 2
@


1.28
log
@remove uploading and macros support from install media;  to save
some space
discussed with theo, todd@@, millert@@
tested and looked over by sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.27 2008/07/08 21:07:57 martynas Exp $	*/
d82 1
d191 1
d193 1
@


1.27
log
@- add support for recursive transfers (but not for floppies), e.g.
'mget -cr 4.*' would recursively fetch (-r), and resume the previous
transfers (-c) of 4.X release directories
uses local matching (fnmatch), but only for recursive transfers.
current behavior is not changed in any way.
- while here, ifndef SMALL debugging stuff, this saves some space,
for floppies
- some debugging code was enabled for non-debugging mode, checks
assume debug is set to zero, but it's not initially set
- all "Confirm with" prompts are forced, remove redundant argument
- fix usage: -C and -c are not available for SMALL

discussed a year ago w/ pyr@@
looks good to millert@@
previous version looked good to pyr@@
man page tweaks & ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.26 2008/06/25 21:15:19 martynas Exp $	*/
d219 1
d223 1
@


1.26
log
@in resume mode, pass -c to mget when {dir,file}hasglob, so that i'm
able to continue multiple transfers with -C;  ok millert@@
while here fix some comments (!SMALL vs. SMALL stuff), and add
missing
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.25 2007/11/26 12:39:00 martynas Exp $	*/
d113 1
d115 1
@


1.25
log
@implement -C for continuing ftp, http(s), and file transfers
ok millert@@, pyr@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.24 2007/06/13 13:52:26 pyr Exp $	*/
d179 1
a179 1
#endif
@


1.24
log
@Enable cookie support. This allows parsing of netscape-like cookie jars
and sending of appropriate cookies. No retrieval of new cookies is done.
Careful review and lots of input by millert and ray.

ok millert@@, ray@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.23 2006/05/16 16:20:42 deraadt Exp $	*/
d164 1
@


1.23
log
@https URL support; rototilled by a few people including me; originally
from Rainer_Giedat@@genua.de
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.22 2003/06/03 02:56:08 millert Exp $	*/
d163 1
@


1.22
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.21 2002/02/16 21:27:46 millert Exp $	*/
d90 1
d175 3
@


1.21
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.20 2001/10/27 10:31:27 heko Exp $	*/
d45 1
a45 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.20
log
@Send User-Agent: OpenBSD ftp to WWW servers and proxies.

``User agents SHOULD include this field with requests'', from RFC 2616:
http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.43

Patch from and problem reported by Diana Eichert <deicher@@sandia.gov>
when using proxies with specific browser requirements. Tested by me with
the ports mirror-maker makefile / fetch-all script (with and without a
proxy).

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.19 2000/06/21 19:22:54 itojun Exp $	*/
d206 1
a206 1
	void	(*c_handler) __P((int, char **)); /* function to call */
@


1.19
log
@add epsv4 command, which turns off epsv on ipv4 (off by dfeault)
automagicaslly disable epsv on ipv4, if epsv fails for single connection.
merge from netbsd-current.

req from fgs.
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.18 1999/12/08 12:57:06 itojun Exp $	*/
d94 1
@


1.18
log
@ftp(1) from KAME, should be good for testing.
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.17 1997/12/17 16:03:04 millert Exp $	*/
d155 2
@


1.17
log
@By default, use passive mode and fall back to active as needed.
The user can specify active only with the -A flag, or use the
new FTPMODE envariable.
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.16 1997/10/02 04:22:01 imp Exp $	*/
d5 29
d109 1
a109 1
int	sendport;		/* use PORT cmd for each data connection */
d132 1
a132 1
char	pasv[64];		/* passive port for proxy data connection */
d173 3
a175 3
in_port_t ftpport;		/* port number to use for ftp connections */
in_port_t httpport;		/* port number to use for http connections */
in_port_t gateport;		/* port number to use for gateftp connections */
@


1.16
log
@Add prototype for fclose in socks case so we compile -DSOCKS
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.15 1997/09/22 05:14:11 millert Exp $	*/
d105 1
@


1.15
log
@socks5 support
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.14 1997/09/04 04:37:16 millert Exp $	*/
d52 1
@


1.14
log
@Updtaes from NetBSD (lukem)
    bugs fixed:
      * don't interpret '-' or '|' when a local filename is determined from
        the remote name (i.e, in mget, and in get with only one argument).
        This is implemented using an extra argument to recvrequest().
        Fixes a major security hole.
      * clean up memory leak when using globulize()
      * clean up a couple of comments
      * fix wording in TNF copyright

    features added:
      * support for TIS fwtk gate-ftp servers:
        * read defaults from $FTPSERVER && $FTPSERVERPORT
        * start in gate-ftp mode if invoked as 'gate-ftp'
        * toggle or set with 'gate [host [port]]'

Other changes:
    * use symbolic flags in access(2)
    * Use USHRT_MAX, not 0xffff
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.13 1997/07/25 21:56:21 millert Exp $	*/
d49 4
@


1.13
log
@Updates from NetBSD (lukem) include -Wall cleanup.
More -W* cleanup and in_port_t usage by me.
@
text
@d1 2
a2 2
/*	$OpenBSD: ftp_var.h,v 1.12 1997/04/23 20:33:16 deraadt Exp $	*/
/*	$NetBSD: ftp_var.h,v 1.17 1997/07/20 09:45:55 lukem Exp $	*/
d58 9
a66 2
#define	FTP_PORT	21	/* default if getservbyname("ftp/tcp") fails */
#define	HTTP_PORT	80	/* default if getservbyname("http/tcp") fails */
d87 2
d100 1
a100 1
char	*altarg;		/* argv[1] with no shell-like preprocessing  */
d134 1
a134 1
char	*hostname;		/* name of host connected to */
d137 1
d140 1
@


1.12
log
@allow "ftp -aV ftp://host/foo.tar.gz | tar xvfpz -" to work
@
text
@d1 2
a2 2
/*	$OpenBSD: ftp_var.h,v 1.11 1997/04/16 05:02:57 millert Exp $	*/
/*	$NetBSD: ftp_var.h,v 1.16 1997/04/14 09:09:23 lukem Exp $	*/
d109 1
a109 1
int	retry_connect;		/* retry connect if failed */
d117 2
a118 2
int	  cursor_argc;		/* location of cursor in margv */
int	  cursor_argo;		/* offset of cursor in margv[cursor_argc] */
d128 2
a129 2
int	ftpport;		/* port number to use for ftp connections */
int	httpport;		/* port number to use for http connections */
@


1.11
log
@Sync with NetBSD (lukem):
 * differentiate between being connected, and being logged in
 * cleanup some text messages
 * support username & password ftp URLs (ftp://user:pass@@host/) in non-proxy
   situations; assume proxy supports it for proxy situations.
 * cd to / before performing any autofetch transfers
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.10 1997/03/21 20:59:30 millert Exp $	*/
d169 2
@


1.10
log
@Add in recent NetBSD changes we didn't already have:
    Always compile complete.c but ifdef out the bits if -DSMALL (christos)
    reset interactive mode correctly in auto_fetch() mget mode (lukem)
@
text
@d1 2
a2 2
/*	$OpenBSD: ftp_var.h,v 1.9 1997/03/14 04:32:16 millert Exp $	*/
/*	$NetBSD: ftp_var.h,v 1.15 1997/03/14 01:39:38 christos Exp $	*/
d70 1
a70 1
int	connected;		/* connected to server */
@


1.9
log
@Sync with NetBSD and fix "get foo.txt /dev/tty" wrt progress meter
and setting times.
@
text
@d1 2
a2 2
/*	$OpenBSD: ftp_var.h,v 1.8 1997/02/18 18:04:30 kstailey Exp $	*/
/*	$NetBSD: ftp_var.h,v 1.14 1997/03/13 06:23:19 lukem Exp $	*/
d46 1
a46 1
#ifndef SMALLFTP
d48 1
a48 1
#endif /* !SMALLFTP */
d112 1
a112 1
#ifndef SMALLFTP
d119 1
a119 1
#endif /* !SMALLFTP */
d154 1
a154 1
#ifndef SMALLFTP
d156 1
a156 1
#endif /* !SMALLFTP */
@


1.8
log
@add -e command line option to suppress use of editline(3)\
this is useful for Emacs ange-ftp
@
text
@d1 2
a2 2
/*	$OpenBSD: ftp_var.h,v 1.7 1997/02/03 01:05:41 millert Exp $	*/
/*	$NetBSD: ftp_var.h,v 1.13 1997/02/01 10:45:05 lukem Exp $	*/
d60 1
a71 1
int	use_editline;		/* use the editline(3) routine for input */
@


1.7
log
@Add back ``-r'' option and fix strncpy() usage and other nits because
I'm anal.  Closer to KNF now.
@
text
@d1 1
a1 1
/*	$OpenBSD: ftp_var.h,v 1.13 1997/02/01 10:45:05 lukem Exp $	*/
d71 1
@


1.6
log
@Sync with NetBSD
@
text
@d1 1
a44 1
#include <stringlist.h>
d50 1
d108 1
@


1.5
log
@optional size argument to hash command
@
text
@d1 1
a1 2
/*      $OpenBSD: ftp_var.h,v 1.4 1996/10/31 14:36:56 mickey Exp $      */
/*      $NetBSD: ftp_var.h,v 1.7 1995/09/15 00:32:35 pk Exp $      */
d44 5
d52 8
d71 1
d83 2
d105 16
a120 2
int	anonftp;		/* force an anonftp login */
int	retry_connect;		/* retry connect if failed */
d125 2
a126 2

struct	servent *sp;		/* service spec for tcp/ftp */
d130 1
a130 1
char	line[200];		/* input line buffer */
d132 1
a132 1
char	argbuf[200];		/* argument storage buffer */
d134 1
d136 1
a136 2
char	**margv;		/* args parsed from input line */
int	margvlen;		/* how large margv is currently */
d148 6
a153 3
	char	c_bell;		/* give bell when command completes */
	char	c_conn;		/* must be connected to use command */
	char	c_proxy;	/* proxy server may execute */
@


1.4
log
@add -r<seconds> option to retry connection.
dunno how to do optional argument.
@
text
@d1 1
a1 1
/*      $OpenBSD: ftp_var.h,v 1.3 1996/06/26 05:33:37 deraadt Exp $      */
d53 1
@


1.3
log
@rcsid
@
text
@d1 1
a1 1
/*      $OpenBSD: ftp_var.h,v 1.7 1995/09/15 00:32:35 pk Exp $      */
d90 1
@


1.2
log
@add support for automatic anonftp fetches of host:path
add support for -p portnum
might need todo: -N for silence, better exit status for failures
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d88 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
