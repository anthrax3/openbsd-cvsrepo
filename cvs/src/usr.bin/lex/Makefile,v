head	1.17;
access;
symbols
	OPENBSD_6_1:1.16.0.6
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.2
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.11.0.12
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.4
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.8
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.6
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.10
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.8
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.6
	OPENBSD_5_0:1.10.0.4
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.9.0.28
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.24
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.26
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.22
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.20
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.18
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.16
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.14
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.12
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.10
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.8
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.8.0.6
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.5.0.8
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.6
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.17
date	2017.04.30.20.30.39;	author millert;	state Exp;
branches;
next	1.16;
commitid	acHYEn86roNdMCWE;

1.16
date	2016.03.30.06.38.46;	author jmc;	state Exp;
branches;
next	1.15;
commitid	LN9ijdk9SEnzWAbM;

1.15
date	2015.11.20.18.57.18;	author tedu;	state Exp;
branches;
next	1.14;
commitid	FOaXk5TwU5hRf4T1;

1.14
date	2015.11.19.23.46.55;	author tedu;	state Exp;
branches;
next	1.13;
commitid	hnIoa7AAM7XWeqSr;

1.13
date	2015.11.19.19.45.28;	author tedu;	state Exp;
branches;
next	1.12;
commitid	38jMRuogPecwpuCl;

1.12
date	2015.11.19.19.43.40;	author tedu;	state Exp;
branches;
next	1.11;
commitid	TCPdLh99ETkn9X6R;

1.11
date	2013.06.18.17.38.46;	author robert;	state Exp;
branches;
next	1.10;

1.10
date	2010.10.17.22.54.37;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2003.12.09.12.42.41;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.08.19.39.24;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.21.21.41.02;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.21.21.33.40;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	99.11.17.17.01.51;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.04.27.20.56.46;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.12.08.14.32.27;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.35.27;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.29;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Move FlexLexer.h from /usr/include/g++ to /usr/include.  It is not
a g++-specific header and this matches most other systems.  Needed
to use flex++ with clang.  OK espie@@ kettenis@@
@
text
@#	$OpenBSD: Makefile,v 1.16 2016/03/30 06:38:46 jmc Exp $
#
# By default, flex will be configured to generate 8-bit scanners only if the
# -8 flag is given.  If you want it to always generate 8-bit scanners, add
# "-DDEFAULT_CSIZE=256" to CFLAGS.  Note that doing so will double the size
# of all uncompressed scanners.
#
# If on your system you have trouble building flex due to 8-bit character
# problems, remove the -8 from FLEX_FLAGS and the "#define FLEX_8_BIT_CHARS"
# from the beginning of flexdef.h.
#
# To bootstrap lex, cp initscan.c to scan.c and run make.

PROG=   lex
CFLAGS+=-I. -I${.CURDIR} -DHAVE_CONFIG_H
SRCS= buf.c ccl.c dfa.c ecs.c filter.c gen.c main.c misc.c \
	  nfa.c options.c parse.y regex.c scan.l scanflags.c \
	  scanopt.c skel.c sym.c tables.c tables_shared.c \
	  tblcmp.c yylex.c

CLEANFILES+=skel.c parse.c parse.h
LDADD+=-lm

MAN = flex.1

LINKS=  ${BINDIR}/lex ${BINDIR}/flex \
		${BINDIR}/lex ${BINDIR}/flex++

VERSION="2.5.39"

parse.h parse.c: parse.y
	yacc -d -o parse.c ${.CURDIR}/parse.y

skel.c: flex.skl mkskel.sh flexint.h tables_shared.h
	sed -e 's/m4_/m4postproc_/g' -e 's/m4preproc_/m4_/g' \
		${.CURDIR}/flex.skl | m4 -I${.CURDIR} -P \
		-DFLEX_MAJOR_VERSION=`echo ${VERSION} | cut -f 1 -d .` \
		-DFLEX_MINOR_VERSION=`echo ${VERSION} | cut -f 2 -d .` \
		-DFLEX_SUBMINOR_VERSION=`echo ${VERSION} | cut -f 3 -d .` | \
		sed -e 's/m4postproc_/m4_/g' | \
		sh ${.CURDIR}/mkskel.sh  > ${.TARGET}

includes:
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 \
		${.CURDIR}/FlexLexer.h ${DESTDIR}/usr/include

.include <bsd.prog.mk>
@


1.16
log
@for some time now mandoc has not required MLINKS to function
correctly - logically complete that now by removing MLINKS from base;

authors need only to ensure there is an entry in NAME for any function/
util being added. MLINKS will still work, and remain for perl to ease
upgrades;

ok nicm (curses) bcook (ssl)
ok schwarze, who provided a lot of feedback and assistance
ok tb natano jung
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2015/11/20 18:57:18 tedu Exp $
a43 4
.if !exists(${DESTDIR}/usr/include/g++)
	${INSTALL} -d -o root -g bin -m 755 \
		${DESTDIR}/usr/include/g++
.endif
d45 1
a45 1
		${.CURDIR}/FlexLexer.h ${DESTDIR}/usr/include/g++/
@


1.15
log
@switch back to yaccing parse.y, it seems to work.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2015/11/19 23:46:55 tedu Exp $
a27 1
MLINKS= flex.1 lex.1 flex.1 flex++.1
@


1.14
log
@make sure parse.c depends on initparse.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2015/11/19 19:45:28 tedu Exp $
d21 1
a21 1
CLEANFILES+=skel.c parse.h
d32 2
a33 4
# Our yacc is too old to compile parse.y; use bootstrapped parse.c instead
parse.h parse.c: parse.y initparse.c initparse.h
	cp ${.CURDIR}/initparse.c parse.c
	cp ${.CURDIR}/initparse.h parse.h
@


1.13
log
@add back flex++.1 link noticed by sthen
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2015/11/19 19:43:40 tedu Exp $
d33 1
a33 1
parse.h parse.c: parse.y
@


1.12
log
@Update flex from ancient 2.5.4 to the recent 2.5.39.
This work was all done by Serguey Parkhomovsky. Thanks.
Some changes from upstream:
* Removed autotools cruft/localization/texinfo manual/etc
* Kept the old manpage, as the new manpage is content-free
* Used safe string handling functions and fixed several compiler warnings
* pledge(2). Flex 2.5.39 now forks/execs its filter chains and needs proc
  exec in addition to what was previously pledged
* Removed register keyword from all variable declarations
* renamed parse.c, parse.h, scan.c, skel.c with init prefix so compiling
  flex outside of obj by accident wouldn't clobber the bootstrap files
* Minor fixes (spelling, accessing buf[strlen(buf) - 1] for zero-length
  strings in initscan.c/scan.l, etc) that were already in our tree

This is a huge change, so it's going in the tree code bomb style.
I'm not excited about the growth in complexity (like now running m4
to _post_ process lexers) but hopefully this will be a one time update
and we will now take "ownership" of the code.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2013/06/18 17:38:46 robert Exp $
d28 1
a28 1
MLINKS= flex.1 lex.1
@


1.11
log
@make sure the target directory gets created in the includes target
and add a trailing / as well to avoid problems
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2010/10/17 22:54:37 schwarze Exp $
d14 9
a22 8
PROG=	lex
CFLAGS+=-I. -I${.CURDIR}
SRCS=	ccl.c dfa.c ecs.c gen.c main.c misc.c nfa.c parse.c sym.c tblcmp.c \
	yylex.c
OBJS+=	scan.o skel.o
CLEANFILES+=parse.c parse.h scan.c skel.c y.tab.c y.tab.h
LDADD=	-ll
DPADD=	${LIBL}
d26 5
a30 3
LINKS=	${BINDIR}/lex ${BINDIR}/flex \
	${BINDIR}/lex ${BINDIR}/flex++
MLINKS=	flex.1 lex.1 flex.1 flex++.1
d32 1
d34 2
a35 9
	${YACC} -d ${.ALLSRC}
	mv y.tab.c parse.c
	mv y.tab.h parse.h

skel.c:	flex.skl mkskel.sh
	sh ${.CURDIR}/mkskel.sh ${.CURDIR}/flex.skl > skel.c

scan.c: scan.l
	flex -t -p ${.CURDIR}/scan.l > scan.c
d37 8
a44 1
scan.o: parse.c
@


1.10
log
@Stop installing me(1) and ms(1) source code.
We will soon get rid of groff in base,
so there is no longer any way to use these files with base.
No opposition on tech@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2003/12/09 12:42:41 jmc Exp $
d7 1
a7 1
# 
d43 4
d48 1
a48 1
		${.CURDIR}/FlexLexer.h ${DESTDIR}/usr/include/g++
@


1.9
log
@install lex PSD;
the actual doc has been updated regarding current implementation of lex.
I also replaced the tables with displays, for simplicity and because of
formatting errors (unsupported macros);

sanity check and ok mickey@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2002/05/08 19:39:24 espie Exp $
a27 5

# This just gets installed verbatim
.if make(install)
SUBDIR+= PSD.doc
.endif
@


1.8
log
@includes should be installed during `make include', not later.
Fixes this for lex and binutils' bfd.

Also, do not install ansidecl.h, we don't really need it, bfd.h uses it,
and we installed it so that bfd worked, so let bfd.h include it directly.

prompted by mickey@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2001/11/21 21:41:02 espie Exp $
d28 5
@


1.7
log
@Fix the fix. Thanks obj/
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2001/11/21 21:33:40 espie Exp $
d42 1
a42 1
afterinstall:
@


1.6
log
@Not an implicit source. If it's ever used except to check the dependency,
you would get bitten.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1999/11/17 17:01:51 millert Exp $
d30 1
a30 1
	${YACC} -d parse.y
@


1.5
log
@Add missing MLINKs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1997/04/27 20:56:46 millert Exp $
d30 1
a30 1
	${YACC} -d ${.IMPSRC}
@


1.4
log
@COPY -> INSTALL_COPY and STRIP -> INSTALL_STRIP
This fixes namespace problems where STRIP is sometimes used as
the name of the strip(1) to use and other times used as
the flag to send install(1) when stripping (or not).
COPY doesn't have this problem (yet) but was poorly named.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1996/12/08 14:32:27 downsj Exp $
d27 1
a27 1
MLINKS=	flex.1 lex.1 
@


1.3
log
@install -> ${INSTALL}, -c -> ${COPY}
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1996/06/26 05:35:27 deraadt Exp $
d43 1
a43 1
	${INSTALL} ${COPY} -o ${BINOWN} -g ${BINGRP} -m 444 \
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1.1.1 1995/10/18 08:45:29 deraadt Exp $
d43 2
a44 2
	install -c -o ${BINOWN} -g ${BINGRP} -m 444 ${.CURDIR}/FlexLexer.h \
		${DESTDIR}/usr/include/g++
@


1.1
log
@Initial revision
@
text
@d1 1
a1 2
#	from: @@(#)Makefile	5.4 (Berkeley) 6/24/90
#	$Id: Makefile,v 1.11 1995/05/05 05:35:10 jtc Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
