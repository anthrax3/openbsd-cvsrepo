head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.10
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.8
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.3.0.78
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.70
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.74
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.72
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.68
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.66
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.64
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.62
	OPENBSD_5_0:1.3.0.60
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.58
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.56
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.52
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.54
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.50
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.48
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.46
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.44
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.42
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.40
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.38
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.36
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.34
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.32
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.30
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.28
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.26
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.24
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.22
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.20
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.11.19.23.48.06;	author tedu;	state Exp;
branches;
next	1.4;
commitid	rZzDGFbrz4xBKVFB;

1.4
date	2015.11.19.19.43.40;	author tedu;	state Exp;
branches;
next	1.3;
commitid	TCPdLh99ETkn9X6R;

1.3
date	96.10.26.21.50.30;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.35.29;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.29;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@burn down all the gratutious alloca() compatability that autofuck injected
to ensure nobody uses alloca by accident.
@
text
@/*	$OpenBSD: config.h,v 1.4 2015/11/19 19:43:40 tedu Exp $	*/

/* config.h.  Generated from conf.in by configure.  */
/* conf.in.  Generated from configure.ac by autoheader.  */

/* Define to 1 if you have the MacOS X function CFLocaleCopyCurrent in the
   CoreFoundation framework. */
/* #undef HAVE_CFLOCALECOPYCURRENT */

/* Define to 1 if you have the MacOS X function CFPreferencesCopyAppValue in
   the CoreFoundation framework. */
/* #undef HAVE_CFPREFERENCESCOPYAPPVALUE */

/* Define if the GNU dcgettext() function is already present or preinstalled.
   */
/* #undef HAVE_DCGETTEXT */

/* Define to 1 if you have the <dlfcn.h> header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you have the `dup2' function. */
#define HAVE_DUP2 1

/* Define to 1 if you have the `fork' function. */
#define HAVE_FORK 1

/* Define if the GNU gettext() function is already present or preinstalled. */
/* #undef HAVE_GETTEXT */

/* Define if you have the iconv() function and it works. */
#define HAVE_ICONV 1

/* Define to 1 if you have the <inttypes.h> header file. */
#define HAVE_INTTYPES_H 1

/* Define to 1 if you have the `isascii' function. */
#define HAVE_ISASCII 1

/* Define to 1 if you have the <libintl.h> header file. */
/* #undef HAVE_LIBINTL_H */

/* Define to 1 if you have the `m' library (-lm). */
#define HAVE_LIBM 1

/* pthread library */
#define HAVE_LIBPTHREAD 1

/* Define to 1 if you have the <limits.h> header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the <locale.h> header file. */
#define HAVE_LOCALE_H 1

/* Define to 1 if your system has a GNU libc compatible `malloc' function, and
   to 0 otherwise. */
#define HAVE_MALLOC 1

/* Define to 1 if you have the <malloc.h> header file. */
#define HAVE_MALLOC_H 1

/* Define to 1 if you have the <memory.h> header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `memset' function. */
#define HAVE_MEMSET 1

/* Define to 1 if you have the <netinet/in.h> header file. */
#define HAVE_NETINET_IN_H 1

/* Define to 1 if you have the `pow' function. */
#define HAVE_POW 1

/* Define to 1 if you have the <pthread.h> header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if your system has a GNU libc compatible `realloc' function,
   and to 0 otherwise. */
#define HAVE_REALLOC 1

/* Define to 1 if you have the `regcomp' function. */
#define HAVE_REGCOMP 1

/* Define to 1 if you have the <regex.h> header file. */
#define HAVE_REGEX_H 1

/* Define to 1 if you have the `setlocale' function. */
#define HAVE_SETLOCALE 1

/* Define to 1 if stdbool.h conforms to C99. */
#define HAVE_STDBOOL_H 1

/* Define to 1 if you have the <stddef.h> header file. */
#define HAVE_STDDEF_H 1

/* Define to 1 if you have the <stdint.h> header file. */
#define HAVE_STDINT_H 1

/* Define to 1 if you have the <stdlib.h> header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the `strchr' function. */
#define HAVE_STRCHR 1

/* Define to 1 if you have the <strings.h> header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the <string.h> header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `strtol' function. */
#define HAVE_STRTOL 1

/* Define to 1 if you have the <sys/stat.h> header file. */
#define HAVE_SYS_STAT_H 1

/* Define to 1 if you have the <sys/types.h> header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have <sys/wait.h> that is POSIX.1 compatible. */
#define HAVE_SYS_WAIT_H 1

/* Define to 1 if you have the <unistd.h> header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `vfork' function. */
#define HAVE_VFORK 1

/* Define to 1 if you have the <vfork.h> header file. */
/* #undef HAVE_VFORK_H */

/* Define to 1 if `fork' works. */
#define HAVE_WORKING_FORK 1

/* Define to 1 if `vfork' works. */
#define HAVE_WORKING_VFORK 1

/* Define to 1 if the system has the type `_Bool'. */
#define HAVE__BOOL 1

/* Define to the sub-directory in which libtool stores uninstalled libraries.
   */
#define LT_OBJDIR ".libs/"

/* Define to the m4 executable name. */
#define M4 "/usr/bin/m4"

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
/* #undef NO_MINUS_C_MINUS_O */

/* Name of package */
#define PACKAGE "flex"

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT "flex-help@@lists.sourceforge.net"

/* Define to the full name of this package. */
#define PACKAGE_NAME "the fast lexical analyser generator"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING "the fast lexical analyser generator 2.5.39"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "flex"

/* Define to the home page for this package. */
#define PACKAGE_URL ""

/* Define to the version of this package. */
#define PACKAGE_VERSION "2.5.39"

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at runtime.
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown */
/* #undef STACK_DIRECTION */

/* Define to 1 if you have the ANSI C header files. */
#define STDC_HEADERS 1

/* Version number of package */
#define VERSION "2.5.39"

/* Define to 1 if `lex' declares `yytext' as a `char *' by default, not a
   `char[]'. */
#define YYTEXT_POINTER 1

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to rpl_malloc if the replacement function should be used. */
/* #undef malloc */

/* Define to `int' if <sys/types.h> does not define. */
/* #undef pid_t */

/* Define to rpl_realloc if the replacement function should be used. */
/* #undef realloc */

/* Define to `unsigned int' if <sys/types.h> does not define. */
/* #undef size_t */

/* Define as `fork' if `vfork' does not work. */
/* #undef vfork */
@


1.4
log
@Update flex from ancient 2.5.4 to the recent 2.5.39.
This work was all done by Serguey Parkhomovsky. Thanks.
Some changes from upstream:
* Removed autotools cruft/localization/texinfo manual/etc
* Kept the old manpage, as the new manpage is content-free
* Used safe string handling functions and fixed several compiler warnings
* pledge(2). Flex 2.5.39 now forks/execs its filter chains and needs proc
  exec in addition to what was previously pledged
* Removed register keyword from all variable declarations
* renamed parse.c, parse.h, scan.c, skel.c with init prefix so compiling
  flex outside of obj by accident wouldn't clobber the bootstrap files
* Minor fixes (spelling, accessing buf[strlen(buf) - 1] for zero-length
  strings in initscan.c/scan.l, etc) that were already in our tree

This is a huge change, so it's going in the tree code bomb style.
I'm not excited about the growth in complexity (like now running m4
to _post_ process lexers) but hopefully this will be a one time update
and we will now take "ownership" of the code.
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.3 1996/10/26 21:50:30 tholo Exp $	*/
a4 19

/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
/* #undef CRAY_STACKSEG_END */

/* Define to 1 if using `alloca.c'. */
/* #undef C_ALLOCA */

/* Define to 1 if translation of program messages to the user's native
   language is requested. */
/* #undef ENABLE_NLS */

/* Define to 1 if you have `alloca', as a function or macro. */
#define HAVE_ALLOCA 1

/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).
   */
/* #undef HAVE_ALLOCA_H */
@


1.3
log
@Don't use <malloc.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.2 1996/06/26 05:35:29 deraadt Exp $	*/
d3 2
a4 2
/* config.h.  Generated automatically by configure.  */
/* $Header: /cvs/src/usr.bin/lex/config.h,v 1.2 1996/06/26 05:35:29 deraadt Exp $ */
d6 110
a115 2
/* Define to empty if the keyword does not work.  */
/* #undef const */
d117 2
a118 2
/* Define to `unsigned' if <sys/types.h> doesn't define.  */
/* #undef size_t */
d120 2
a121 2
/* Define if you have the ANSI C header files.  */
#define STDC_HEADERS 1
d123 2
a124 2
/* Define if you have the <malloc.h> header file.  */
/* #undef HAVE_MALLOC_H */
d126 1
a126 1
/* Define if you have the <string.h> header file.  */
d129 7
a135 1
/* Define if you have the <sys/types.h> header file.  */
d138 84
a221 2
/* Define if you have <alloca.h> and it should be used (not on Ultrix).  */
/* #undef HAVE_ALLOCA_H */
d223 2
a224 2
/* Define if platform-specific command line handling is necessary.  */
/* #undef NEED_ARGV_FIXUP */
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
/* $Header: /cvs/src/usr.bin/lex/config.h,v 1.1.1.1 1995/10/18 08:45:29 deraadt Exp $ */
d16 1
a16 1
#define HAVE_MALLOC_H 1
@


1.1
log
@Initial revision
@
text
@d1 2
d4 1
a4 1
/* $Header: /a/cvsroot/src/usr.bin/lex/config.h,v 1.1 1995/05/05 05:35:13 jtc Exp $ */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
