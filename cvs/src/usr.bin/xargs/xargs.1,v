head	1.28;
access;
symbols
	OPENBSD_6_1:1.28.0.12
	OPENBSD_6_1_BASE:1.28
	OPENBSD_6_0:1.28.0.10
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.28.0.6
	OPENBSD_5_9_BASE:1.28
	OPENBSD_5_8:1.28.0.8
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.28.0.2
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.28.0.4
	OPENBSD_5_6_BASE:1.28
	OPENBSD_5_5:1.27.0.4
	OPENBSD_5_5_BASE:1.27
	OPENBSD_5_4:1.26.0.12
	OPENBSD_5_4_BASE:1.26
	OPENBSD_5_3:1.26.0.10
	OPENBSD_5_3_BASE:1.26
	OPENBSD_5_2:1.26.0.8
	OPENBSD_5_2_BASE:1.26
	OPENBSD_5_1_BASE:1.26
	OPENBSD_5_1:1.26.0.6
	OPENBSD_5_0:1.26.0.4
	OPENBSD_5_0_BASE:1.26
	OPENBSD_4_9:1.26.0.2
	OPENBSD_4_9_BASE:1.26
	OPENBSD_4_8:1.25.0.2
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.24.0.2
	OPENBSD_4_7_BASE:1.24
	OPENBSD_4_6:1.22.0.6
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.2
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.21.0.6
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.21.0.4
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.21.0.2
	OPENBSD_4_2_BASE:1.21
	OPENBSD_4_1:1.19.0.4
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.19.0.2
	OPENBSD_4_0_BASE:1.19
	OPENBSD_3_9:1.17.0.2
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.13.0.10
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.8
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.6
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.10.0.10
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.8
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.6
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.4
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_8:1.9.0.4
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.4
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.28
date	2014.06.04.06.48.33;	author jmc;	state Exp;
branches;
next	1.27;
commitid	IzOMfhgT7jgzjwpA;

1.27
date	2013.08.14.06.32.30;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2010.09.03.11.09.29;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2010.03.25.01.03.57;	author schwarze;	state Exp;
branches;
next	1.24;

1.24
date	2010.02.04.23.12.48;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2009.10.22.12.35.53;	author sobrado;	state Exp;
branches;
next	1.22;

1.22
date	2009.02.08.17.15.10;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2007.05.31.19.20.20;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2007.05.30.04.41.35;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2006.08.12.07.10.56;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2006.07.24.14.43.59;	author bernd;	state Exp;
branches;
next	1.17;

1.17
date	2006.02.14.15.05.11;	author otto;	state Exp;
branches;
next	1.16;

1.16
date	2006.02.14.12.18.21;	author otto;	state Exp;
branches;
next	1.15;

1.15
date	2005.09.12.09.44.59;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2005.09.10.23.00.29;	author brad;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.12.17.55.01;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.12.01.09.23;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.03.02.56.24;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2000.11.09.17.52.49;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.03.14.14.58.27;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.01.20.07.18.25;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	99.08.18.13.09.45;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	98.10.30.00.24.44;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	97.12.13.20.05.55;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.06.26.05.44.02;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.11.06.56.57;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.11.06.48.05;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.00;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.00;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.28
log
@IL are marked xsi;
@
text
@.\"	$OpenBSD: xargs.1,v 1.27 2013/08/14 06:32:30 jmc Exp $
.\"	$FreeBSD: xargs.1,v 1.30 2003/05/21 21:07:28 ru Exp $$
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" John B. Roll Jr. and the Institute of Electrical and Electronics
.\" Engineers, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)xargs.1	8.1 (Berkeley) 6/6/93
.\"
.Dd $Mdocdate: August 14 2013 $
.Dt XARGS 1
.Os
.Sh NAME
.Nm xargs
.Nd construct argument list(s) and execute utility
.Sh SYNOPSIS
.Nm xargs
.Bk -words
.Op Fl 0oprt
.Op Fl E Ar eofstr
.Oo
.Fl I Ar replstr
.Op Fl R Ar replacements
.Oc
.Op Fl J Ar replstr
.Op Fl L Ar number
.Oo
.Fl n Ar number
.Op Fl x
.Oc
.Op Fl P Ar maxprocs
.Op Fl s Ar size
.Op Ar utility Op Ar argument ...
.Ek
.Sh DESCRIPTION
The
.Nm
utility reads space, tab, newline, and end-of-file delimited strings
from the standard input and executes the specified
.Ar utility
with the strings as
arguments.
.Pp
Any arguments specified on the command line are given to the
.Ar utility
upon each invocation, followed by some number of the arguments read
from standard input.
The
.Ar utility
is repeatedly executed one or more times until standard input
is exhausted.
.Pp
Spaces, tabs and newlines may be embedded in arguments using single
.Pq Ql '
or double
.Pq Ql \&"
quotes or backslashes
.Pq Ql \e .
Single quotes escape all non-single quote characters, excluding newlines,
up to the matching single quote.
Double quotes escape all non-double quote characters, excluding newlines,
up to the matching double quote.
Any single character, including newlines, may be escaped by a backslash.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl 0
Change
.Nm
to expect NUL
.Pq Ql \e0
characters as separators, instead of spaces and newlines.
The quoting mechanisms described above are not performed.
This option is expected to be used in concert with the
.Fl print0
function in
.Xr find 1 .
.It Fl E Ar eofstr
Use
.Ar eofstr
as a logical EOF marker.
.It Fl I Ar replstr
Execute
.Ar utility
for each input line, replacing one or more occurrences of
.Ar replstr
in up to
.Ar replacements
(or 5 if no
.Fl R
flag is specified) arguments to
.Ar utility
with the entire line of input.
The resulting arguments, after replacement is done, will not be allowed to grow
beyond 255 bytes; this is implemented by concatenating as much of the argument
containing
.Ar replstr
as possible, to the constructed arguments to
.Ar utility ,
up to 255 bytes.
The 255 byte limit does not apply to arguments to
.Ar utility
which do not contain
.Ar replstr ,
and furthermore, no replacement will be done on
.Ar utility
itself.
Implies
.Fl x .
.It Fl J Ar replstr
If this option is specified,
.Nm
will use the data read from standard input to replace the first occurrence of
.Ar replstr
instead of appending that data after all other arguments.
This option will not effect how many arguments will be read from input
.Pq Fl n ,
or the size of the command(s)
.Nm
will generate
.Pq Fl s .
The option just moves where those arguments will be placed in the command(s)
that are executed.
The
.Ar replstr
must show up as a distinct
.Ar argument
to
.Nm xargs .
It will not be recognized if, for instance, it is in the middle of a
quoted string.
Furthermore, only the first occurrence of the
.Ar replstr
will be replaced.
For example, the following command will copy the list of files and
directories which start with an uppercase letter in the current
directory to
.Pa destdir :
.Pp
.Dl "/bin/ls -1d [A-Z]* | xargs -J % cp -Rp % destdir"
.It Fl L Ar number
Call
.Ar utility
for every
.Ar number
of non-empty lines read.
A line ending in unescaped white space and the next non-empty line
are considered to form one single line.
If EOF is reached and fewer than
.Ar number
lines have been read then
.Ar utility
will be called with the available lines.
.It Fl n Ar number
Set the maximum number of arguments taken from standard input for each
invocation of
.Ar utility .
An invocation of
.Ar utility
will use less than
.Ar number
standard input arguments if the number of bytes accumulated (see the
.Fl s
option) exceeds the specified
.Ar size
or there are fewer than
.Ar number
arguments remaining for the last invocation of
.Ar utility .
The current default value for
.Ar number
is 5000.
.It Fl o
Reopen stdin as
.Pa /dev/tty
in the child process before executing the command.
This is useful if you want
.Nm
to run an interactive application.
.It Fl P Ar maxprocs
Parallel mode: run at most
.Ar maxprocs
invocations of
.Ar utility
at once.
.It Fl p
Echo each command to be executed and ask the user whether it should be
executed.
An affirmative response,
.Ql y
in the POSIX locale,
causes the command to be executed, any other response causes it to be
skipped.
No commands are executed if the process is not attached to a terminal.
.It Fl R Ar replacements
Specify the maximum number of arguments that
.Fl I
will do replacement in.
If
.Ar replacements
is negative, the number of arguments in which to replace is unbounded.
.It Fl r
Do not run the command if there are no arguments.
Normally the command is executed at least once
even if there are no arguments.
.It Fl s Ar size
Set the maximum number of bytes for the command line length provided to
.Ar utility .
The sum of the length of the utility name, the arguments passed to
.Ar utility
(including
.Dv NUL
terminators) and the current environment will be less than or equal to
this number.
The current default value for
.Ar size
is
.Dv ARG_MAX
- 4096.
.It Fl t
Echo the command to be executed to standard error immediately before it
is executed.
.It Fl x
Force
.Nm
to terminate immediately if a command line containing
.Ar number
arguments will not fit in the specified (or default) command line length.
.El
.Pp
If no
.Ar utility
is specified,
.Xr echo 1
is used.
.Pp
Undefined behavior may occur if
.Ar utility
reads from the standard input.
.Pp
The
.Nm
utility exits immediately (without processing any further input) if a
command line cannot be assembled,
.Ar utility
cannot be invoked, an invocation of
.Ar utility
is terminated by a signal,
or an invocation of
.Ar utility
exits with a value of 255.
.Sh EXIT STATUS
.Nm
exits with one of the following values:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It 0
All invocations of
.Ar utility
returned a zero exit status.
.It 123
One or more invocations of
.Ar utility
returned a nonzero exit status.
.It 124
The
.Ar utility
exited with a 255 exit status.
.It 125
The
.Ar utility
was killed or stopped by a signal.
.It 126
The
.Ar utility
was found but could not be executed.
.It 127
The
.Ar utility
could not be found.
.It 1
Some other error occurred.
.El
.Sh SEE ALSO
.Xr echo 1 ,
.Xr find 1 ,
.Xr execvp 3
.Sh STANDARDS
The
.Nm
utility is compliant with the
.St -p1003.1-2008
specification.
.Pp
The flags
.Op Fl IL
are marked by
.St -p1003.1-2008
as being an X/Open System Interfaces option.
.Pp
The flags
.Op Fl 0JoPRr
are extensions to
.St -p1003.1-2008 .
.Pp
The meanings of the 123, 124, and 125 exit values were taken from
.Tn GNU
.Nm xargs .
.Sh HISTORY
The
.Nm
command appeared in PWB
.Ux .
.Sh BUGS
If
.Ar utility
attempts to invoke another command such that the number of arguments or the
size of the environment is increased, it risks
.Xr execvp 3
failing with
.Er E2BIG .
@


1.27
log
@no longer any need to quote macro lines with >9 args;
From: Jan Stary
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.26 2010/09/03 11:09:29 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: September 3 2010 $
d323 4
a326 6
.Fl I
and
.Fl L
are compliant with the
.St -xpg4
specification.
d330 2
a331 1
are extensions to those specifications.
@


1.26
log
@add an EXIT STATUS section for /usr/bin;
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.25 2010/03/25 01:03:57 schwarze Exp $
d37 1
a37 1
.Dd $Mdocdate: March 25 2010 $
d42 1
a42 1
.Nd "construct argument list(s) and execute utility"
@


1.25
log
@Regarding -L, consider a line ending in unescaped white space and the next
non-empty line to form one single line, as required by XPG 4.
While here, use isblank(3) to identify white space instead of assuming
that only blank and tab are white space characters.

Geoff Clare <gwc at opengroup dot org> agrees that the standard for -L
should say "A line is considered to end with the first <newline>
unless the last character of the line is an *unescaped* <blank>;
an *unescaped* trailing <blank> signals continuation to the next
non-empty line, inclusive."  The word *unescaped* is missing from
the standard, but we regard that as a goof in the standard.

Bug noticed by, much feedback from, and "should go in now"  guenther@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.24 2010/02/04 23:12:48 schwarze Exp $
d37 1
a37 1
.Dd $Mdocdate: February 4 2010 $
d279 1
a279 1
.Sh DIAGNOSTICS
d283 1
a283 1
.Bl -tag -width Ds -compact
@


1.24
log
@xargs -I and -L are XPG4, not POSIX;  ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.23 2009/10/22 12:35:53 sobrado Exp $
d37 1
a37 1
.Dd $Mdocdate: October 22 2009 $
d173 3
a175 1
of lines read.
@


1.23
log
@use the UNIX-related macros (.At and .Ux) where appropriate.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.22 2009/02/08 17:15:10 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: February 8 2009 $
d321 8
d330 1
a330 1
are extensions to that specification.
@


1.22
log
@bump the posix reference in STANDARDS to IEEE Std 1003.1-2008, with a few
updates to follow;
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.21 2007/05/31 19:20:20 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: May 31 2007 $
d330 2
a331 1
command appeared in PWB UNIX.
@


1.21
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.20 2007/05/30 04:41:35 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate$
d317 1
a317 1
.St -p1003.1-2004
@


1.20
log
@- use a consistent text for STANDARDS
- note which options are extensions to POSIX
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.19 2006/08/12 07:10:56 jmc Exp $
d37 1
a37 1
.Dd May 7, 2001
@


1.19
log
@a variation of netbsd -r1.18:
PR/34182 from der Mouse -- clarify -0 option
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.18 2006/07/24 14:43:59 bernd Exp $
d316 7
a322 10
utility is expected to be
.St -p1003.2
compliant.
The
.Fl 0 , J , o , P ,
.Fl R ,
and
.Fl r
options are non-standard
extensions which may not be available on other operating systems.
@


1.18
log
@Use 'cp -R' instead of 'cp -r' in the example of the -J option.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.17 2006/02/14 15:05:11 otto Exp $
d100 2
a101 1
This is expected to be used in concert with the
@


1.17
log
@Put commas in right places, from Ray Lai.
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.16 2006/02/14 12:18:21 otto Exp $
d166 1
a166 1
.Dl "/bin/ls -1d [A-Z]* | xargs -J % cp -rp % destdir"
@


1.16
log
@Document that -0 is an non-standard extension (sad but true).
ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.15 2005/09/12 09:44:59 jmc Exp $
d319 2
a320 1
.Fl 0, J , o , P , R
@


1.15
log
@- add -r to usage()
- the description of -p uses `maxprocs' as the arg identifier,
as does usage(), so use it in SYNOPSIS too;
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.14 2005/09/10 23:00:29 brad Exp $
d319 1
a319 1
.Fl J , o , P , R
@


1.14
log
@Make xargs run [utility] program even when zero arguements are provided,
makes xargs POSIX compliant.

Original diff from jason@@, better diff provided by millert@@

Resolves PR 4262

ok deraadt@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.13 2003/06/12 17:55:01 jmc Exp $
d58 1
a58 1
.Op Fl P Ar maxjobs
@


1.13
log
@tweak;
ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.12 2003/06/12 01:09:23 millert Exp $
d46 1
a46 1
.Op Fl 0opt
d77 2
a78 1
is repeatedly executed until standard input is exhausted.
d226 4
d319 1
a319 1
.Fl J , o , P
d321 1
a321 1
.Fl R
@


1.12
log
@Sync with FreeBSD's xargs plus some fixes by me.  This makes us
POSIX-compliant and adds some useful extensions.  Most of the work
in FreeBSD was done by jmallett.
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.11 2003/06/03 02:56:24 millert Exp $
d44 2
a45 1
.Nm
d61 1
d165 1
a165 1
.Dl /bin/ls -1d [A-Z]* | xargs -J % cp -rp % destdir
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 2
a2 2
.\"	$OpenBSD: xargs.1,v 1.10 2000/11/09 17:52:49 aaron Exp $
.\"	$NetBSD: xargs.1,v 1.6 1994/11/14 06:51:40 jtc Exp $
d37 1
a37 1
.Dd June 6, 1993
d44 10
a53 4
.Nm xargs
.Op Fl 0
.Op Fl t
.Oo Op Fl x
d55 1
d57 1
d59 1
a59 1
.Op Ar utility Op Ar arguments ...
d63 1
a63 1
utility reads space, tab, newline, and end-of-file delimited arguments
d66 1
a66 1
with them as
d69 1
a69 2
The utility and any arguments specified on the command line are given
to the
d92 1
a92 1
Changes
d101 74
d177 2
a178 1
invocation of the utility.
d194 29
d224 1
a224 1
Set the maximum number of bytes for the command-line length provided to
d226 1
a226 1
The sum of the length of the utility name and the arguments passed to
d228 4
a231 1
(including null terminators) will be less than or equal to this number.
d245 1
a245 1
arguments will not fit in the specified (or default) command-line length.
d263 7
a269 3
cannot be invoked, an invocation of the utility is terminated by a signal,
or an invocation of the utility exits with a value of 255.
.Pp
d293 1
a293 1
was found but could not be invoked.
d303 2
a304 1
.Xr find 1
d311 10
d322 11
a332 2
The meaning of 123, 124, and 125 exit values were taken from GNU
.Nm xargs .
@


1.10
log
@Change all option list specifications to ".Bl -tag -width Ds". Most man
pages just needed their -width parameter tweaked to "Ds", which provides
a nice width of 6 constant characters. For consistency more than anything.
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.9 2000/03/14 14:58:27 aaron Exp $
d19 1
a19 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@Finish off cleanup usr.bin/ man pages.
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.8 2000/01/20 07:18:25 deraadt Exp $
d87 1
a87 1
.Bl -tag -width indent
@


1.8
log
@Default value for -s option is ARG_MAX - 4096, not - 2048; enami
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.7 1999/08/18 13:09:45 aaron Exp $
d155 1
a155 1
.Sh DIAGNOSTICS
@


1.7
log
@formatting
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.6 1998/10/30 00:24:44 aaron Exp $
d126 1
a126 1
- 2048.
@


1.6
log
@usr.bin/ man page fixes, t-z
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.5 1997/12/13 20:05:55 deraadt Exp $
d58 2
a59 2
.Nm xargs
utility reads space, tab, newline and end-of-file delimited arguments
d75 5
a79 3
(``\ '\ '')
.Ek
or double (``"'') quotes or backslashes (``\e'').
d90 1
a90 1
.Nm xargs
d92 1
a92 1
(``\\0'')
d97 1
a97 1
.Nm find .
d117 1
a117 1
Set the maximum number of bytes for the command line length provided to
d121 1
a121 3
(including
.Dv NULL
terminators) will be less than or equal to this number.
d132 1
a132 1
.Nm xargs
d135 1
a135 1
arguments will not fit in the specified (or default) command line length.
d149 1
a149 1
.Nm xargs
d153 1
a153 1
cannot be invoked, an invocation of the utility is terminated by a signal
d156 1
a156 1
.Nm xargs
d192 1
a192 1
.Nm xargs
d197 2
a198 1
The meaning of 123, 124, and 125 exit values were taken from GNU xargs.
@


1.5
log
@spelling; peter@@clari.net.au
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.4 1996/06/26 05:44:02 deraadt Exp $
d158 1
@


1.4
log
@rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD: xargs.1,v 1.6 1994/11/14 06:51:40 jtc Exp $
d91 1
a91 1
characters as seperators, instead of spaces and newlines.
@


1.3
log
@-print0 in find, not -0
@
text
@d1 1
@


1.2
log
@add -0 option, written by me
@
text
@d92 2
a93 2
.Fl 0
option in
@


1.1
log
@Initial revision
@
text
@d48 1
d85 10
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
