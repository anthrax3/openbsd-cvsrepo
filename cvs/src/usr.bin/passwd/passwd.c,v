head	1.27;
access;
symbols
	OPENBSD_6_2:1.27.0.6
	OPENBSD_6_2_BASE:1.27
	OPENBSD_6_1:1.27.0.8
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.27.0.4
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.27.0.2
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.26.0.8
	OPENBSD_5_8_BASE:1.26
	OPENBSD_5_7:1.26.0.2
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.26.0.4
	OPENBSD_5_6_BASE:1.26
	OPENBSD_5_5:1.25.0.20
	OPENBSD_5_5_BASE:1.25
	OPENBSD_5_4:1.25.0.16
	OPENBSD_5_4_BASE:1.25
	OPENBSD_5_3:1.25.0.14
	OPENBSD_5_3_BASE:1.25
	OPENBSD_5_2:1.25.0.12
	OPENBSD_5_2_BASE:1.25
	OPENBSD_5_1_BASE:1.25
	OPENBSD_5_1:1.25.0.10
	OPENBSD_5_0:1.25.0.8
	OPENBSD_5_0_BASE:1.25
	OPENBSD_4_9:1.25.0.6
	OPENBSD_4_9_BASE:1.25
	OPENBSD_4_8:1.25.0.4
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.25.0.2
	OPENBSD_4_7_BASE:1.25
	OPENBSD_4_6:1.24.0.10
	OPENBSD_4_6_BASE:1.24
	OPENBSD_4_5:1.24.0.6
	OPENBSD_4_5_BASE:1.24
	OPENBSD_4_4:1.24.0.4
	OPENBSD_4_4_BASE:1.24
	OPENBSD_4_3:1.24.0.2
	OPENBSD_4_3_BASE:1.24
	OPENBSD_4_2:1.23.0.8
	OPENBSD_4_2_BASE:1.23
	OPENBSD_4_1:1.23.0.6
	OPENBSD_4_1_BASE:1.23
	OPENBSD_4_0:1.23.0.4
	OPENBSD_4_0_BASE:1.23
	OPENBSD_3_9:1.23.0.2
	OPENBSD_3_9_BASE:1.23
	OPENBSD_3_8:1.19.0.2
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.18.0.8
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.18.0.6
	OPENBSD_3_6_BASE:1.18
	OPENBSD_3_5:1.18.0.4
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	OPENBSD_3_3:1.15.0.4
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.15.0.2
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.13.0.2
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.7.0.10
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.8
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.6
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.4
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.2
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.6.0.4
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.27
date	2015.11.26.19.01.47;	author deraadt;	state Exp;
branches;
next	1.26;
commitid	0NbTNVgy2y455HVw;

1.26
date	2014.05.19.15.05.13;	author tedu;	state Exp;
branches;
next	1.25;

1.25
date	2009.10.27.23.59.41;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2007.09.08.18.42.36;	author cloder;	state Exp;
branches;
next	1.23;

1.23
date	2006.01.22.06.04.28;	author biorn;	state Exp;
branches;
next	1.22;

1.22
date	2005.12.18.12.29.26;	author biorn;	state Exp;
branches;
next	1.21;

1.21
date	2005.12.12.22.54.20;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2005.09.28.00.13.02;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2005.05.01.02.51.08;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2003.08.04.07.29.22;	author hin;	state Exp;
branches;
next	1.17;

1.17
date	2003.07.10.00.06.51;	author david;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.03.02.56.14;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2002.06.28.22.28.17;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2002.05.10.06.52.03;	author hugh;	state Exp;
branches;
next	1.13;

1.13
date	2001.11.19.19.02.15;	author mpech;	state Exp;
branches;
next	1.12;

1.12
date	2001.08.19.20.29.23;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2001.07.07.00.10.49;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.26.20.16.43;	author hin;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.12.02.19.58;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2000.05.19.02.14.31;	author ericj;	state Exp;
branches;
next	1.7;

1.7
date	98.01.20.15.32.21;	author art;	state Exp;
branches;
next	1.6;

1.6
date	97.03.27.00.30.54;	author weingart;	state Exp;
branches;
next	1.5;

1.5
date	97.01.15.23.43.01;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.06.26.05.37.47;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.05.03.18.23.34;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.01.16.07.22.15;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.54;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.54;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.27
log
@Delete YP password related code.  As a result, these can also be
pledged.  Keep an eye out for regressions, because they could be
uncomfortable.
ok beck semarie
@
text
@/*	$OpenBSD: passwd.c,v 1.26 2014/05/19 15:05:13 tedu Exp $	*/

/*
 * Copyright (c) 1988 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <err.h>

extern int local_passwd(char *, int);
void usage(int retval);

int
main(int argc, char **argv)
{
	extern int optind;
	char *username;
	int ch;

	/* Process args and options */
	while ((ch = getopt(argc, argv, "")) != -1)
		switch (ch) {
		default:
			usage(1);
		}

	argc -= optind;
	argv += optind;

	username = getlogin();
	if (username == NULL) {
		fprintf(stderr, "passwd: who are you ??\n");
		exit(1);
	}

	switch (argc) {
	case 0:
		break;
	case 1:
		username = argv[0];
		break;
	default:
		usage(1);
	}

	exit(local_passwd(username, 0));
}

void
usage(int retval)
{
	fprintf(stderr, "usage: passwd [user]\n");
	exit(retval);
}
@


1.26
log
@kerberos leftovers
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.25 2009/10/27 23:59:41 deraadt Exp $	*/
a36 15
#include <rpcsvc/ypclnt.h>

/*
 * Note on configuration:
 *      Generally one would not use both Kerberos and YP
 *      to maintain passwords.
 *
 */

int use_kerberos;
int use_yp;

#ifdef YP
int force_yp;
#endif
a38 3
extern int yp_passwd(char *);
extern int krb5_passwd(int, char **);
extern int _yp_check(char **);
a46 12
#ifdef	YP
	int status = 0;
#endif
#ifdef	YP
	use_yp = _yp_check(NULL);
	if (use_yp) {
		char *dom;

		yp_get_default_domain(&dom);
		yp_unbind(dom);
	}
#endif
d49 1
a49 1
	while ((ch = getopt(argc, argv, "ly")) != -1)
a50 18
		case 'l':		/* change local password file */
			use_kerberos = 0;
			use_yp = 0;
			break;
		case 'y':		/* change YP password */
#ifdef	YP
			if (!use_yp) {
				fprintf(stderr, "passwd: YP not in use.\n");
				exit(1);
			}
			use_kerberos = 0;
			use_yp = 1;
			force_yp = 1;
			break;
#else
			fprintf(stderr, "passwd: YP not compiled in\n");
			exit(1);
#endif
a73 5
#ifdef	YP
	if (force_yp || ((status = local_passwd(username, 0)) && use_yp))
		exit(yp_passwd(username));
	exit(status);
#else
a74 1
#endif
d80 1
a80 1
	fprintf(stderr, "usage: passwd [-l | -y] [user]\n");
@


1.25
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.24 2007/09/08 18:42:36 cloder Exp $	*/
a38 4
#if defined(KRB5)
#include <sys/stat.h>
#endif

a67 12
#if defined(KRB5)
	char *ccfile;
	struct stat sb;

	if (!(ccfile = getenv("KRB5CCNAME")))
		if (asprintf(&ccfile, "/tmp/krb5cc_%u", (unsigned)getuid()) ==
		    -1)
			errx(1, "out of memory");

	if ((stat(ccfile, &sb) == 0) && (sb.st_uid == getuid()))
		use_kerberos = 1;
#endif
d79 1
a79 1
	while ((ch = getopt(argc, argv, "lyK")) != -1)
a84 10
		case 'K':
#if defined(KRB5)
			/* Skip programname and '-K' option */
			argc -= 2;
			argv += 2;
			exit(krb5_passwd(argc, argv));
#else
			errx(1, "KerberosV support not enabled");
			break;
#endif
a121 4
#if defined(KRB5)
	if (use_kerberos)
		exit(krb5_passwd(argc, argv));
#endif
d134 1
a134 1
	fprintf(stderr, "usage: passwd [-K | -l | -y] [user]\n");
@


1.24
log
@Fix lint warning about unreachable code.
OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.23 2006/01/22 06:04:28 biorn Exp $	*/
a30 11

#ifndef lint
char copyright[] =
"@@(#) Copyright (c) 1988 The Regents of the University of California.\n\
 All rights reserved.\n";
#endif /* not lint */

#ifndef lint
/*static const char sccsid[] = "from: @@(#)passwd.c	5.5 (Berkeley) 7/6/91";*/
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.23 2006/01/22 06:04:28 biorn Exp $";
#endif /* not lint */
@


1.23
log
@- drop privs before running krb5 code
- avoid calling krb5_get_init_creds_password(3) with principal == NULL
- try to change the kerberos password if there is a ticket file

help from millert@@, ok beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.22 2005/12/18 12:29:26 biorn Exp $	*/
d40 1
a40 1
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.22 2005/12/18 12:29:26 biorn Exp $";
d167 2
a169 1
	exit(local_passwd(username, 0));
@


1.22
log
@Indicate that the flags are exclusive, mention realm in the description
for K and remove an error case for kerberos that doesn't apply nowdays.

with jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.21 2005/12/12 22:54:20 jmc Exp $	*/
d40 1
a40 1
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.21 2005/12/12 22:54:20 jmc Exp $";
d50 4
d83 8
d92 1
a92 4
#if defined(KERBEROS5)
	extern char realm[];

	if (krb_get_lrealm(realm,1) == KSUCCESS)
d113 1
a113 1
#ifdef KRB5
d159 4
@


1.21
log
@sync usage();
from david leonard (pr #4939);
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.20 2005/09/28 00:13:02 deraadt Exp $	*/
d40 1
a40 1
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.20 2005/09/28 00:13:02 deraadt Exp $";
a143 9
#if defined(KERBEROS5)
		if (use_kerberos && strcmp(argv[0], username)) {
			(void)fprintf(stderr, "passwd: %s\n\t%s\n%s\n",
			    "to change another user's Kerberos password, do",
			    "\"passwd -K -u <user>\";",
			    "to change a user's local passwd, use \"passwd -l <user>\"");
			exit(1);
		}
#endif
d161 1
a161 1
	fprintf(stderr, "usage: passwd [-Kly] [user]\n");
@


1.20
log
@pull in protos from rpcsvc/ypclnt.h; issue noted by leonardo@@iken.com.br
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.19 2005/05/01 02:51:08 deraadt Exp $	*/
d40 1
a40 1
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.19 2005/05/01 02:51:08 deraadt Exp $";
d170 1
a170 2
	fprintf(stderr, "usage: passwd [-l] [-y] [-k [-n name] [-i instance] "
	    "[-r realm] [-u username[.instance][@@realm]] [user]\n");
@


1.19
log
@_yp_check() is a non-standard API.  it leaves the domain bound, and the
fd use for that too.  We are only using it to check if YP is alive, so,
unbind YP right after... this removes the reserved port socket
fd in the child..
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.18 2003/08/04 07:29:22 hin Exp $	*/
d40 1
a40 1
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.18 2003/08/04 07:29:22 hin Exp $";
d48 1
@


1.18
log
@Remove Kerberos 4 stuff.

ok deraadt@@ millert@@ henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.17 2003/07/10 00:06:51 david Exp $	*/
d40 1
a40 1
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.17 2003/07/10 00:06:51 david Exp $";
d87 6
@


1.17
log
@add missing includes
ok deraadt@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.16 2003/06/03 02:56:14 millert Exp $	*/
d40 1
a40 1
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.16 2003/06/03 02:56:14 millert Exp $";
a47 3
#ifdef KERBEROS
#include <kerberosIV/krb.h>
#endif
a64 1
extern int krb_passwd(int, char **);
d79 1
a79 1
#if defined(KERBEROS) || defined(KERBEROS5)
d90 1
a90 1
	while ((ch = getopt(argc, argv, "lykK")) != -1)
a95 10
		case 'k':		/* change Kerberos password */
#if defined(KERBEROS)
			use_kerberos = 1;
			use_yp = 0;
			exit(krb_passwd(argc, argv));
			break;
#else
			fprintf(stderr, "passwd: Kerberos not compiled in\n");
			exit(1);
#endif
d137 1
a137 1
#if defined(KERBEROS) || defined(KERBEROS5)
d141 1
a141 1
			    "\"passwd -k -u <user>\";",
a150 5

#if defined(KERBEROS) || defined(KERBEROS5)
	if (use_kerberos)
		exit(krb_passwd(argc, argv));
#endif
@


1.16
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.15 2002/06/28 22:28:17 deraadt Exp $	*/
d40 1
a40 1
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.15 2002/06/28 22:28:17 deraadt Exp $";
d44 1
@


1.15
log
@various cleanups; ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.14 2002/05/10 06:52:03 hugh Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d40 1
a40 1
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.14 2002/05/10 06:52:03 hugh Exp $";
@


1.14
log
@Fixups for -Wall from panda@@omatis.com in system/2634.
Checked by deraadt.
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.13 2001/11/19 19:02:15 mpech Exp $	*/
d44 1
a44 1
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.13 2001/11/19 19:02:15 mpech Exp $";
a68 1

d74 1
a74 2
void usage(int value);

d77 1
a77 3
main(argc, argv)
	int argc;
	char **argv;
d80 1
a81 1
	char *username;
d85 1
d116 2
a117 2
			argc-=2;
			argv+=2;
d119 1
a119 1
#else			
d149 2
a150 2
	
	switch(argc) {
d155 7
a161 7
	    if (use_kerberos && strcmp(argv[0], username)) {
		(void)fprintf(stderr, "passwd: %s\n\t%s\n%s\n",
			      "to change another user's Kerberos password, do",
			      "\"passwd -k -u <user>\";",
			      "to change a user's local passwd, use \"passwd -l <user>\"");
		exit(1);
	    }
d170 2
a171 2
        if (use_kerberos)
                exit(krb_passwd(argc, argv));
d183 1
a183 2
usage(retval)
	int retval;
d185 2
a186 1
	fprintf(stderr, "usage: passwd [-l] [-y] [-k [-n name] [-i instance] [-r realm] [-u username[.instance][@@realm]] [user]\n");
@


1.13
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.12 2001/08/19 20:29:23 millert Exp $	*/
d44 1
a44 1
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.12 2001/08/19 20:29:23 millert Exp $";
d74 1
d86 1
d88 1
@


1.12
log
@add missing #include <err.h> in non-KRB5 case
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.11 2001/07/07 00:10:49 millert Exp $	*/
d44 1
a44 1
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.11 2001/07/07 00:10:49 millert Exp $";
d83 1
a83 1
	register int ch;
@


1.11
log
@quiet some -Wall warnings for login_{l,}chpass
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.10 2001/06/26 20:16:43 hin Exp $	*/
d44 1
a44 1
static const char rcsid[] = "$OpenBSD: passwd.c,v 1.10 2001/06/26 20:16:43 hin Exp $";
d50 1
@


1.10
log
@Support for changing kerberos 5 passwords.
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.9 2000/12/12 02:19:58 millert Exp $	*/
d43 2
a44 2
/*static char sccsid[] = "from: @@(#)passwd.c	5.5 (Berkeley) 7/6/91";*/
static char rcsid[] = "$OpenBSD: passwd.c,v 1.9 2000/12/12 02:19:58 millert Exp $";
@


1.9
log
@Minor interface changes to allow code reuse in login_chpass(8) and
login_lchpass(8)
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.8 2000/05/19 02:14:31 ericj Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: passwd.c,v 1.8 2000/05/19 02:14:31 ericj Exp $";
d72 1
d96 1
a96 1
	while ((ch = getopt(argc, argv, "lyk")) != -1)
d103 1
a103 1
#if defined(KERBEROS) || defined(KERBEROS5)
d111 10
@


1.8
log
@Make usage() work as expected. deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.7 1998/01/20 15:32:21 art Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: passwd.c,v 1.7 1998/01/20 15:32:21 art Exp $";
d69 1
a69 1
extern int local_passwd(char *);
d163 1
a163 1
	if (force_yp || ((status = local_passwd(username)) && use_yp))
d167 1
a167 1
	exit(local_passwd(username));
@


1.7
log
@Use new method to change kerberos passwords.
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.6 1997/03/27 00:30:54 weingart Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: passwd.c,v 1.6 1997/03/27 00:30:54 weingart Exp $";
d72 1
a72 1
void usage(void);
d126 1
a126 2
			usage();
			exit(1);
d154 1
a154 2
		usage();
		exit(1);
d171 2
a172 1
usage(void)
d175 1
@


1.6
log
@Slight cleanup, more needed
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.5 1997/01/15 23:43:01 millert Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: passwd.c,v 1.5 1997/01/15 23:43:01 millert Exp $";
d71 1
a71 1
extern int krb_passwd(void);
d95 1
a95 1
	while ((ch = getopt(argc, argv, "lky")) != -1)
d105 1
d144 7
a150 7
		if (use_kerberos && strcmp(argv[0], username)) {
			(void)fprintf(stderr, "passwd: %s\n\t%s\n%s\n",
"to change another user's Kerberos password, do",
"\"kinit <user>; passwd; kdestroy\";",
"to change a user's local passwd, use \"passwd -l <user>\"");
			exit(1);
		}
d160 2
a161 2
	if (use_kerberos)
		exit(krb_passwd());
d163 1
d175 1
a175 1
	fprintf(stderr, "usage: passwd [-l] [-k] [-y] user\n");
@


1.5
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: passwd.c,v 1.4 1996/06/26 05:37:47 deraadt Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: passwd.c,v 1.4 1996/06/26 05:37:47 deraadt Exp $";
d68 8
a83 1
	char *basename;
d94 1
a94 4
	basename = strrchr(argv[0], '/');
	if (basename == NULL)
		basename = argv[0];
	
d170 2
a171 1
usage()
@


1.4
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: passwd.c,v 1.3 1996/05/03 18:23:34 tholo Exp $";
d91 1
a91 1
	while ((ch = getopt(argc, argv, "lky")) != EOF)
@


1.3
log
@Don't enable Kerberos password changing by default unless a local kerberos
domain has been defined in the configuration file
@
text
@d1 2
d44 1
a44 1
static char rcsid[] = "$Id: passwd.c,v 1.2 1996/01/16 07:22:15 deraadt Exp $";
@


1.2
log
@the yppasswd command is not needed. the user should always let the
passwd command figure out where their password is located. if they
really need to change a specific one, they can use the flags - bet
noone ever needs to use that.
@
text
@d42 1
a42 1
static char rcsid[] = "$Id: passwd.c,v 1.1.1.1 1995/10/18 08:45:54 deraadt Exp $";
d48 3
d75 2
d78 2
a79 2
#if defined(KERBEROS) || defined(KERBEROS5)
	use_kerberos = 1;
@


1.1
log
@Initial revision
@
text
@d42 1
a42 1
static char rcsid[] = "$Id: passwd.c,v 1.7 1995/02/12 17:45:56 phil Exp $";
a82 15
	if (strcmp(basename, "yppasswd") == 0) {
#ifdef YP
		if (!use_yp) {
			fprintf(stderr, "yppasswd: YP not in use.\n");
			exit (1);
		}
		use_kerberos = 0;
		use_yp = 1;
		force_yp = 1;
#else
		fprintf(stderr, "yppasswd: YP not compiled in\n");
		exit(1);
#endif
	}

@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
