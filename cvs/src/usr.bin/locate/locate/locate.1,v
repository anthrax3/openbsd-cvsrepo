head	1.29;
access;
symbols
	OPENBSD_6_1_BASE:1.29
	OPENBSD_6_0:1.29.0.4
	OPENBSD_6_0_BASE:1.29
	OPENBSD_5_9:1.29.0.2
	OPENBSD_5_9_BASE:1.29
	OPENBSD_5_8:1.28.0.24
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.28.0.16
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.28.0.20
	OPENBSD_5_6_BASE:1.28
	OPENBSD_5_5:1.28.0.18
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.28.0.14
	OPENBSD_5_4_BASE:1.28
	OPENBSD_5_3:1.28.0.12
	OPENBSD_5_3_BASE:1.28
	OPENBSD_5_2:1.28.0.10
	OPENBSD_5_2_BASE:1.28
	OPENBSD_5_1_BASE:1.28
	OPENBSD_5_1:1.28.0.8
	OPENBSD_5_0:1.28.0.6
	OPENBSD_5_0_BASE:1.28
	OPENBSD_4_9:1.28.0.4
	OPENBSD_4_9_BASE:1.28
	OPENBSD_4_8:1.28.0.2
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.27.0.6
	OPENBSD_4_7_BASE:1.27
	OPENBSD_4_6:1.27.0.8
	OPENBSD_4_6_BASE:1.27
	OPENBSD_4_5:1.27.0.4
	OPENBSD_4_5_BASE:1.27
	OPENBSD_4_4:1.27.0.2
	OPENBSD_4_4_BASE:1.27
	OPENBSD_4_3:1.25.0.4
	OPENBSD_4_3_BASE:1.25
	OPENBSD_4_2:1.25.0.2
	OPENBSD_4_2_BASE:1.25
	OPENBSD_4_1:1.22.0.12
	OPENBSD_4_1_BASE:1.22
	OPENBSD_4_0:1.22.0.10
	OPENBSD_4_0_BASE:1.22
	OPENBSD_3_9:1.22.0.8
	OPENBSD_3_9_BASE:1.22
	OPENBSD_3_8:1.22.0.6
	OPENBSD_3_8_BASE:1.22
	OPENBSD_3_7:1.22.0.4
	OPENBSD_3_7_BASE:1.22
	OPENBSD_3_6:1.22.0.2
	OPENBSD_3_6_BASE:1.22
	OPENBSD_3_5:1.21.0.2
	OPENBSD_3_5_BASE:1.21
	OPENBSD_3_4:1.20.0.2
	OPENBSD_3_4_BASE:1.20
	OPENBSD_3_3:1.18.0.2
	OPENBSD_3_3_BASE:1.18
	OPENBSD_3_2:1.17.0.8
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.17.0.6
	OPENBSD_3_1_BASE:1.17
	OPENBSD_3_0:1.17.0.4
	OPENBSD_3_0_BASE:1.17
	OPENBSD_2_9_BASE:1.17
	OPENBSD_2_9:1.17.0.2
	OPENBSD_2_8:1.15.0.2
	OPENBSD_2_8_BASE:1.15
	OPENBSD_2_7:1.14.0.2
	OPENBSD_2_7_BASE:1.14
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.29
date	2015.10.23.07.57.03;	author tedu;	state Exp;
branches;
next	1.28;
commitid	eptIRj1sULvwai3n;

1.28
date	2010.07.15.20.51.38;	author schwarze;	state Exp;
branches;
next	1.27;

1.27
date	2008.07.26.10.57.09;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2008.07.26.09.48.00;	author pyr;	state Exp;
branches;
next	1.25;

1.25
date	2007.06.25.13.12.51;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2007.05.31.19.20.12;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2007.04.13.13.14.16;	author sobrado;	state Exp;
branches;
next	1.22;

1.22
date	2004.04.08.20.08.59;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2003.09.25.18.06.23;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2003.09.02.18.50.06;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2003.06.03.02.56.10;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2003.01.02.23.26.18;	author henning;	state Exp;
branches;
next	1.17;

1.17
date	2000.11.10.05.10.31;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	2000.11.09.17.52.18;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	2000.07.06.04.06.54;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	2000.03.24.21.06.53;	author ian;	state Exp;
branches;
next	1.13;

1.13
date	2000.03.23.21.39.54;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	2000.03.08.03.11.31;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.03.05.00.28.53;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.07.03.02.11.08;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.06.05.01.21.31;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	98.12.16.02.38.49;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	98.09.26.19.54.59;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	98.08.12.07.25.33;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.10.20.00.52.56;	author michaels;	state Exp;
branches;
next	1.4;

1.4
date	96.09.15.16.50.38;	author michaels;	state Exp;
branches;
next	1.3;

1.3
date	96.08.16.22.00.12;	author michaels;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.35.52;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.33;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.33;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.29
log
@mmap is the default. it's effectively the only tested codepath. so burn down
the stdio code path.
pros: everything is simpler. how can anyone read code this heavily spliced
with ifdef?
cons: you can't pipe a database into locate. who does this???
ok deraadt
@
text
@.\"	$OpenBSD: locate.1,v 1.28 2010/07/15 20:51:38 schwarze Exp $
.\"
.\" Copyright (c) 1995 Wolfram Schneider <wosch@@FreeBSD.org>. Berlin.
.\" Copyright (c) 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)locate.1	8.1 (Berkeley) 6/6/93
.\"	$Id: locate.1,v 1.28 2010/07/15 20:51:38 schwarze Exp $
.\"
.Dd $Mdocdate: July 15 2010 $
.Dt LOCATE 1
.Os
.Sh NAME
.Nm locate
.Nd find filenames quickly
.Sh SYNOPSIS
.Nm locate
.Op Fl bciS
.Op Fl d Ar database
.Op Fl l Ar limit
.Ar pattern ...
.Sh DESCRIPTION
The
.Nm
utility searches a database for all pathnames which match the specified
.Ar pattern .
The database is recomputed periodically (usually weekly or daily),
and contains the pathnames
of all files which are publicly accessible.
.Pp
Shell globbing and quoting characters
.Pf ( Ql * ,
.Ql \&? ,
.Ql \e ,
.Ql \&[ ,
and
.Ql \&] )
may be used in
.Ar pattern ,
although they will have to be escaped from the shell.
Preceding any character with a backslash
.Pq Ql \e
eliminates any special meaning which it may have.
The matching differs in that no characters must be matched explicitly,
including slashes
.Pq Ql / .
.Pp
As a special case, a pattern containing no globbing characters
.Pq Dq foo
is matched as though it were
.Dq *foo* .
.Pp
Historically,
.Nm
stores only characters between 32 and 127.
The current implementation stores all characters except newline
.Pq Ql \en
and
NUL
.Pq Ql \e0 .
The 8-bit character support does not waste extra space for
plain
.Tn ASCII
file names.
Characters less than 32 or greater than 127 are stored as 2 bytes.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl b
For each entry in the database, perform the search on the last
component of path.
.It Fl c
Suppress normal output; instead print a count of matching file names.
.It Fl d Ar database
Search in
.Ar database
instead of the default file name database.
Multiple
.Fl d
options are allowed.
Each additional
.Fl d
option adds the specified database to the list
of databases to be searched.
.Pp
.Ar database
may be a colon-separated list of databases.
An empty database name is a reference to the default database.
.Pp
.Dl $ locate -d $HOME/lib/mydb: foo
.Pp
will first search for the string
.Dq foo
in
.Pa $HOME/lib/mydb
and then in
.Pa /var/db/locate.database .
.Pp
.Dl $ locate -d $HOME/lib/mydb::/cdrom/locate.database foo
.Pp
will first search for the string
.Dq foo
in
.Pa $HOME/lib/mydb
and then in
.Pa /var/db/locate.database
and then in
.Pa /cdrom/locate.database .
.Pp
.Dl $ locate -d db1 -d db2 -d db3 pattern
.Pp
is the same as
.Pp
.Dl $ locate -d db1:db2:db3 pattern
.Pp
or
.Pp
.Dl $ locate -d db1:db2 -d db3 pattern
.It Fl i
Ignore case distinctions in both the pattern and the database.
.It Fl l Ar limit
Limit output to a specific number of files and exit.
.It Fl S
Print some statistics about the database and exit.
.El
.Sh ENVIRONMENT
.Bl -tag -width LOCATE_PATH -compact
.It Ev LOCATE_PATH
Path to the locate database if set and not empty; ignored if the
.Fl d
option was specified.
.El
.Sh FILES
.Bl -tag -width /usr/libexec/locate.updatedb -compact
.It Pa /etc/weekly
script that starts the database rebuild
.It Pa /usr/libexec/locate.updatedb
script to update the locate database
.It Pa /var/db/locate.database
locate database
.El
.Sh SEE ALSO
.Xr find 1 ,
.Xr fnmatch 3 ,
.Xr locate.updatedb 8 ,
.Xr weekly 8
.Rs
.%A Woods, James A.
.%D 1983
.%T "Finding Files Fast"
.%J ";login"
.%V 8:1
.%P pp. 8-10
.Re
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.4 .
.Sh BUGS
.Nm
may fail to list some files that are present, or may
list files that have been removed from the system.
This is because
.Nm
only reports files that are present in a periodically reconstructed
database (typically rebuilt once a week by the
.Xr weekly 8
script).
Use
.Xr find 1
to locate files that are of a more transitory nature.
.Pp
The
.Nm
database is built by user
.Dq nobody
using
.Xr find 1 .
This will
skip directories which are not readable by user
.Dq nobody ,
group
.Dq nobody ,
or
the world.
E.g., if your home directory is not world-readable, your files will
.Em not
appear in the database.
.Pp
The
.Nm
database is not byte order independent.
It is not possible
to share the databases between machines with different byte order.
The current
.Nm
implementation understands databases in host byte order or
network byte order.
So a little-endian machine can't understand
a locate database which was built on a big-endian machine.
@


1.28
log
@More delimiters that need quoting inside macros, hunted down by jmc@@,
who asked me to commit because he is just running out of the door.
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.27 2008/07/26 10:57:09 jmc Exp $
d32 1
a32 1
.\"	$Id: locate.1,v 1.27 2008/07/26 10:57:09 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: July 26 2008 $
d42 1
a42 1
.Op Fl bcimSs
a142 16
.Pp
If
.Ql \-
is given as the
.Ar database
name, standard input will be read instead.
For example, you can compress your database
and use:
.Pp
.Dl $ zcat database.gz | locate -d - pattern
.Pp
This might be useful on machines with a fast CPU, little RAM and slow I/O.
.Sy Note:
You can only use
.Em one
pattern for stdin.
a146 8
.It Fl m
Use
.Xr mmap 2
instead of the
.Xr stdio 3
library.
This is the default behavior.
It performs better in most cases.
a148 5
.It Fl s
Use the
.Xr stdio 3
library instead of
.Xr mmap 2 .
@


1.27
log
@add -b to SYNOPSIS and usage();
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.26 2008/07/26 09:48:00 pyr Exp $
d32 1
a32 1
.\"	$Id: locate.1,v 1.26 2008/07/26 09:48:00 pyr Exp $
d59 1
a59 1
.Ql [ ,
@


1.26
log
@Add -b switch for matching on the last part of the path only.

ok landry@@, otto liked the idea and the original diff, ``do it'' deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.25 2007/06/25 13:12:51 jmc Exp $
d32 1
a32 1
.\"	$Id: locate.1,v 1.25 2007/06/25 13:12:51 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate$
d42 1
a42 1
.Op Fl cimSs
@


1.25
log
@some wording improvements for -d and -m; from Jacek Masiulaniec
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.24 2007/05/31 19:20:12 jmc Exp $
d32 1
a32 1
.\"	$Id: locate.1,v 1.24 2007/05/31 19:20:12 jmc Exp $
d93 3
@


1.24
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.23 2007/04/13 13:14:16 sobrado Exp $
d32 1
a32 1
.\"	$Id: locate.1,v 1.23 2007/04/13 13:14:16 sobrado Exp $
d109 1
a109 1
A single colon is a reference to the default database.
d167 1
a167 1
Usually faster in most cases.
@


1.23
log
@the ellipsis in the synopsis of this command is not an optional
argument.  the argument name for -l must be the same in the
synopsis and the options list.

written with help by jmc@@

ok by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.22 2004/04/08 20:08:59 jmc Exp $
d32 1
a32 1
.\"	$Id: locate.1,v 1.22 2004/04/08 20:08:59 jmc Exp $
d34 1
a34 1
.Dd June 6, 1993
@


1.22
log
@sort options and sync usage();
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.21 2003/09/25 18:06:23 jmc Exp $
d32 1
a32 1
.\"	$Id: locate.1,v 1.21 2003/09/25 18:06:23 jmc Exp $
d45 1
a45 1
.Ar pattern Op Ar ...
d158 2
a159 4
.It Fl l Ar number
Limit output to
.Ar number
of file names and exit.
@


1.21
log
@- indent and literal for examples
- sort FILES
- .Xr weekly 8
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.20 2003/09/02 18:50:06 jmc Exp $
d32 1
a32 1
.\"	$Id: locate.1,v 1.20 2003/09/02 18:50:06 jmc Exp $
d42 2
a43 1
.Op Fl Scims
a44 1
.Op Fl d Ar database
a92 2
.It Fl S
Print some statistics about the database and exit.
d170 2
@


1.20
log
@escape punctuation;
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.19 2003/06/03 02:56:10 millert Exp $
d32 1
a32 1
.\"	$Id: locate.1,v 1.19 2003/06/03 02:56:10 millert Exp $
d113 1
a113 1
$ locate -d $HOME/lib/mydb: foo
d122 1
a122 1
$ locate -d $HOME/lib/mydb::/cdrom/locate.database foo
d133 1
a133 1
$ locate -d db1 -d db2 -d db3 pattern
d137 1
a137 1
$ locate -d db1:db2:db3 pattern
d141 1
a141 1
$ locate -d db1:db2 -d db3 pattern
d151 1
a151 1
$ zcat database.gz | locate -d - pattern
d153 1
a153 2
This might be useful on machines with a fast CPU, little RAM and slow
I/O.
d187 4
a192 4
.It Pa /usr/libexec/locate.updatedb
script to update the locate database
.It Pa /etc/weekly
script that starts the database rebuild
d197 2
a198 1
.Xr locate.updatedb 8
d220 1
a220 1
.Pa /etc/weekly
d239 1
a239 1
e.g., if your home directory is not world-readable, your files will
@


1.19
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.18 2003/01/02 23:26:18 henning Exp $
d32 1
a32 1
.\"	$Id: locate.1,v 1.18 2003/01/02 23:26:18 henning Exp $
d57 1
a57 1
.Ql ? ,
@


1.18
log
@typo; jmc at prioris.mini.pw.edu.pl
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.17 2000/11/10 05:10:31 aaron Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
d32 1
a32 1
.\"	$Id: locate.1,v 1.17 2000/11/10 05:10:31 aaron Exp $
@


1.17
log
@- Section shuffling: comply to the section ordering outlined in mdoc(7).
- Some .Nm trimming.
- .Sh AUTHOR -> .Sh AUTHORS
- Other miscellaneous fixes here and there.
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.16 2000/11/09 17:52:18 aaron Exp $
d36 1
a36 1
.\"	$Id: locate.1,v 1.16 2000/11/09 17:52:18 aaron Exp $
d257 1
a257 1
a locate database which was built on an big-endian machine.
@


1.16
log
@Change all option list specifications to ".Bl -tag -width Ds". Most man
pages just needed their -width parameter tweaked to "Ds", which provides
a nice width of 6 constant characters. For consistency more than anything.
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.15 2000/07/06 04:06:54 aaron Exp $
d36 1
a36 1
.\"	$Id: locate.1,v 1.15 2000/07/06 04:06:54 aaron Exp $
d183 7
a197 7
.El
.Sh ENVIRONMENT
.Bl -tag -width LOCATE_PATH -compact
.It Ev LOCATE_PATH
Path to the locate database if set and not empty; ignored if the
.Fl d
option was specified.
@


1.15
log
@Insert more missing .El directives. Our troff really should identify these and
spit out a warning.
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.14 2000/03/24 21:06:53 ian Exp $
d36 1
a36 1
.\"	$Id: locate.1,v 1.14 2000/03/24 21:06:53 ian Exp $
d96 1
a96 1
.Bl -tag -width 10n indent
@


1.14
log
@Typo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.13 2000/03/23 21:39:54 aaron Exp $
d36 1
a36 1
.\"	$Id: locate.1,v 1.13 2000/03/23 21:39:54 aaron Exp $
d182 1
d211 5
a257 9
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.4 .
Many new features were
added in
.\".Fx 2.2 .
FreeBSD 2.2. \"I assume
@


1.13
log
@More pedantic man page formatting insanity, lalala
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.12 2000/03/08 03:11:31 aaron Exp $
d36 1
a36 1
.\"	$Id: locate.1,v 1.12 2000/03/08 03:11:31 aaron Exp $
d104 1
a104 1
instead the default file name database.
@


1.12
log
@Various cleanups and improvements.
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.11 2000/03/05 00:28:53 aaron Exp $
d36 1
a36 1
.\"	$Id: locate.1,v 1.11 2000/03/05 00:28:53 aaron Exp $
d114 2
a115 2
may be a colon-separated list of databases. A single colon is a reference
to the default database.
d174 3
a176 1
library. This is the default behavior. Usually faster in most cases.
d243 2
a244 1
database is not byte order independent. It is not possible
@


1.11
log
@Finish standardizing options list introduction.
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.10 1999/07/03 02:11:08 aaron Exp $
d36 1
a36 1
.\"	$Id: locate.1,v 1.10 1999/07/03 02:11:08 aaron Exp $
d51 1
d53 1
a53 1
searches a database for all pathnames which match the specified
d83 2
a84 2
stores only characters between 32 and 127.  The
current implementation stores all characters except newline
d92 2
a93 2
file names.  Characters less than 32 or greater than 127
are stored as 2 bytes.
d107 2
a108 1
options are allowed.  Each additional
d211 2
a212 1
list files that have been removed from the system.  This is because
d246 2
a247 1
network byte order.  So a little-endian machine can't understand
@


1.10
log
@remove redundant .Pp macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.9 1999/06/05 01:21:31 aaron Exp $
d36 1
a36 1
.\"	$Id: locate.1,v 1.9 1999/06/05 01:21:31 aaron Exp $
d94 1
a94 1
The following options are available:
@


1.9
log
@- remove trailing white space
- remove arguments from .Os macros
- remove arguments from .Nm macros, where appropriate
- some more Dq/Sq/Ql insanity
- still lots to do in the usr.bin tree... :/
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.8 1998/12/16 02:38:49 aaron Exp $
d36 1
a36 1
.\"	$Id: locate.1,v 1.8 1998/12/16 02:38:49 aaron Exp $
d51 1
a51 1
.Nm locate
d53 1
a53 1
.Ar pattern  .
a244 1
.Pp
d247 1
a247 1
.Nm locate
@


1.8
log
@more .Nm fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.7 1998/09/26 19:54:59 aaron Exp $
d36 1
a36 1
.\"	$Id: locate.1,v 1.7 1998/09/26 19:54:59 aaron Exp $
d40 1
a40 1
.Os BSD 4.4
d48 1
a48 1
.Op Fl d Ar database 
d54 1
a54 1
The database is recomputed periodically (usually weekly or daily), 
d58 7
a64 2
Shell globbing and quoting characters (``*'', ``?'', ``\e'', ``[''
and ``]'')
d66 1
a66 1
.Ar pattern  ,
d68 3
a70 2
Preceding any character with a backslash (``\e'') eliminates any special
meaning which it may have.
d72 7
a78 1
including slashes (``/'').
a79 3
As a special case, a pattern containing no globbing characters (``foo'')
is matched as though it were ``*foo*''.

d81 1
a81 1
.Nm locate
d83 9
a91 3
current implementation stores all characters except newline ('\\n') and
NUL ('\\0'). The 8-bit character support does not waste extra space for
plain ASCII file names.  Characters less than 32 or greater than 127
d93 1
a93 1

d104 1
a104 1
Multiple 
d106 1
a106 1
options are allowed.  Each additional 
d110 1
a110 1

d114 1
a114 1

d116 4
a119 2

will first search string ``foo'' in 
d121 1
a121 1
and then in 
d123 1
a123 1

d125 4
a128 2

will first search string ``foo'' in 
d130 1
a130 1
and then in 
d132 1
a132 1
and then in 
d134 11
a144 8


``$ locate -d db1 -d db2 -d db3 pattern'' is the same as

``$ locate -d db1:db2:db3 pattern'' or 

``$ locate -d db1:db2 -d db3 pattern''. 

d146 7
a152 5
.Ar - 
is given as the database name, standard input will be read instead.
For example, you can compress your database 
and use: 

d154 1
a154 1

d156 4
a159 2
I/O. Note: you can only use 
.Ar one
d164 1
a164 1
Limit output to 
d168 4
a171 4
Use 
.Xr mmap 2 
instead of the 
.Xr stdio 3 
d185 1
a185 1
script that usually starts the database rebuild
d190 2
a191 2
Path to the locate database if set and not empty, ignored if the 
.Fl d 
d208 1
a208 1
may fail to list some files that are present, or may 
d213 1
a213 1
.Pa /etc/weekly 
d218 1
a218 1

d227 1
a227 1
.Dq nobody , 
d232 2
a233 2
E.g. if your HOME directory is not world-readable, your files will
.Ar not
d235 1
a235 1

d243 1
a243 1
network byte order.  So a little-endian machine can understand
d245 1
a245 1

@


1.7
log
@usr.bin/ man page fixes, f-m.
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.6 1998/08/12 07:25:33 deraadt Exp $
d36 1
a36 1
.\"	$Id: locate.1,v 1.6 1998/08/12 07:25:33 deraadt Exp $
d45 1
a45 1
.Nm
@


1.6
log
@fix numerous grammer issues
@
text
@d1 1
a1 1
.\"	$OpenBSD: locate.1,v 1.5 1996/10/20 00:52:56 michaels Exp $
d36 1
a36 1
.\"	$Id: locate.1,v 1.5 1996/10/20 00:52:56 michaels Exp $
d49 1
a49 1
pattern ...
d71 4
a74 2
Historically, locate stores only characters between 32 and 127.  The
current implementation store all characters except newline ('\\n') and
d76 1
a76 1
plain ASCII file names.  Characters less than 32 or greather than 127
d82 1
a82 1
Print some statistic about the database and exit.
d131 1
a131 1
This might be useful on machines with a fast CPU and little RAM and slow
d157 1
a157 1
Script to update the locate database
d159 1
a159 1
Script that usually starts the database rebuild
d163 2
a164 2
.It Pa LOCATE_PATH
path to the locate database if set and not empty, ignored if the 
d223 1
a223 1
command appears in
@


1.5
log
@8-Bit character support.  From wosch@@freebsd.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d36 1
a36 1
.\"	$Id: locate.1,v 1.4 1996/09/15 16:50:38 michaels Exp $
d51 1
a51 1
.Nm Locate
d71 5
a75 5
Historically, locate store only characters between 32 and 127.  The
current implementation store any character except newline ('\\n') and
NUL ('\\0'). The 8-bit character support don't wast extra space for
plain ASCII file names. Characters less than 32 or greather than 127
are stored in 2 bytes.
d181 4
a184 3
to list files that have been removed from the system.  This is because
locate only reports files that are present in the database, which is
typically only regenerated once a week by the 
d186 2
a187 1
script.  Use
d191 1
d193 6
a198 5
database was built by user 
.Dq nobody .
.Xr find 1
skip directories,
which are not readable for user 
d203 2
a204 2
world. E.g. if your HOME directory ist not world-readable, all your
files are 
d206 1
a206 1
in the database.
d210 1
a210 1
database is not byte order independ. It is not possible
d212 1
a212 1
The current 
d214 3
a216 5
implementation understand databases in host byte order or
network byte order. So you can read on a FreeBSD/i386 machine 
(little endian)
a locate database which was built on SunOS/sparc machine
(big endian, net).
@


1.4
log
@Blind update of wosch@@FreeBSD's code:

optimized search algorithm
faster IO due mmap(2) [-m | -s]
better error check for damaged databases
support for databases in network byte order (SunOS/sparc)
optional case insensitve search [-i]
optional multiple databases
optional multiple pattern
new enviroment variable LOCATE_PATH for database(s)
[-S] print some statistic about the database
[-l number] limit output to number file names
[-c] suppress normal output; instead print a count of matching file names
fix prototypes/forward declarations/return type
@
text
@d36 1
a36 1
.\"	$Id: locate.1,v 1.4 1996/08/31 23:14:52 wosch Exp $
d70 6
@


1.3
log
@Better locate from wosch@@freebsd (Wolfram Schneider), sligthly modified.
@
text
@d1 3
d36 1
d43 1
a43 1
.Nd find files
d45 5
a49 2
.Ar locate
pattern
d54 2
a55 1
The database is recomputed periodically, and contains the pathnames
d70 74
d147 1
a147 1
The actual database
d150 9
d173 1
a173 1
.Nm Locate
d178 1
a178 1
.Nm /etc/weekly 
d182 28
d215 4
@


1.2
log
@rcsid
@
text
@a0 3
.\"	$OpenBSD: locate.1,v 1.4 1995/07/25 18:20:25 jtc Exp $
.\"	$NetBSD: locate.1,v 1.4 1995/07/25 18:20:25 jtc Exp $
.\"
d41 2
a42 2
.Nm locate
.Ar pattern
d63 1
a63 1
.Bl -tag -width /var/db/locate.database -compact
d65 3
d71 2
a72 1
.Xr fnmatch 3
d81 10
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
