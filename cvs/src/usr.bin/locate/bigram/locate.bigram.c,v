head	1.15;
access;
symbols
	OPENBSD_6_2:1.15.0.10
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.8
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.4
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.13.0.6
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.12.0.22
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.20
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.16
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.14
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.12
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.10
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.12
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.8
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.6
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.4
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.10.0.14
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.12
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.10
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.8
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.6
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.4
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.20
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.18
	OPENBSD_2_8:1.6.0.16
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.14
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.12
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.10
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.8
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.6
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.4
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2015.12.09.01.58.34;	author jsg;	state Exp;
branches;
next	1.14;
commitid	VSRVNfxYFjLxyQgh;

1.14
date	2015.11.15.07.44.38;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	PU562QkD03kw1ijl;

1.13
date	2015.01.16.06.40.09;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	Uu5nFG3wCl0LACBb;

1.12
date	2009.10.27.23.59.39;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2007.03.18.20.13.49;	author otto;	state Exp;
branches;
next	1.10;

1.10
date	2003.09.29.16.03.16;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.07.10.00.06.51;	author david;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.03.02.56.09;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.19.19.02.14;	author mpech;	state Exp;
branches;
next	1.6;

1.6
date	96.10.20.00.52.51;	author michaels;	state Exp;
branches;
next	1.5;

1.5
date	96.09.15.16.50.35;	author michaels;	state Exp;
branches;
next	1.4;

1.4
date	96.08.30.12.54.16;	author michaels;	state Exp;
branches;
next	1.3;

1.3
date	96.08.16.22.00.10;	author michaels;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.35.49;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.32;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.32;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@include unistd.h for pledge() and err.h for err.h for err()
@
text
@/*
 *	$OpenBSD: locate.bigram.c,v 1.14 2015/11/15 07:44:38 deraadt Exp $
 *
 * Copyright (c) 1995 Wolfram Schneider <wosch@@FreeBSD.org>. Berlin.
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * James A. Woods.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * 	$Id: locate.bigram.c,v 1.14 2015/11/15 07:44:38 deraadt Exp $
 */

/*
 *  bigram < sorted_file_names | sort -nr |
 *  	awk 'NR <= 128 { printf $2 }' > bigrams
 *
 * List bigrams for 'updatedb' script.
 * Use 'code' to encode a file using this output.
 */

#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#include <unistd.h>
#include <err.h>
#include "locate.h"

u_char buf1[PATH_MAX] = " ";
u_char buf2[PATH_MAX];
u_int bigram[UCHAR_MAX + 1][UCHAR_MAX + 1];

int
main(void)
{
	u_char *cp;
	u_char *oldpath = buf1, *path = buf2;
	u_int i, j;

	if (pledge("stdio", NULL) == -1)
		err(1, "pledge");

	while (fgets(path, sizeof(buf2), stdin) != NULL) {

		/*
		 * We don't need remove newline character '\n'.
		 * '\n' is less than ASCII_MIN and will be later
		 * ignored at output.
		 */


		/* skip longest common prefix */
		for (cp = path; *cp == *oldpath; cp++, oldpath++)
			if (*cp == '\0')
				break;

		while (*cp != '\0' && *(cp + 1) != '\0') {
			bigram[(u_char)*cp][(u_char)*(cp + 1)]++;
			cp += 2;
		}

		/* swap pointers */
		if (path == buf1) {
			path = buf2;
			oldpath = buf1;
		} else {
			path = buf1;
			oldpath = buf2;
		}
	}

	/* output, boundary check */
	for (i = ASCII_MIN; i <= ASCII_MAX; i++)
		for (j = ASCII_MIN; j <= ASCII_MAX; j++)
			if (bigram[i][j] != 0)
				(void)printf("%4u\t%c%c\n", bigram[i][j], i, j);

	exit(0);
}
@


1.14
log
@very simple pledges, stdio and rpath, very boring
@
text
@d2 1
a2 1
 *	$OpenBSD: locate.bigram.c,v 1.13 2015/01/16 06:40:09 deraadt Exp $
d35 1
a35 1
 * 	$Id: locate.bigram.c,v 1.13 2015/01/16 06:40:09 deraadt Exp $
d49 2
@


1.13
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d2 1
a2 1
 *	$OpenBSD: locate.bigram.c,v 1.12 2009/10/27 23:59:39 deraadt Exp $
d35 1
a35 1
 * 	$Id: locate.bigram.c,v 1.12 2009/10/27 23:59:39 deraadt Exp $
d61 3
@


1.12
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d2 1
a2 1
 *	$OpenBSD: locate.bigram.c,v 1.11 2007/03/18 20:13:49 otto Exp $
d35 1
a35 1
 * 	$Id: locate.bigram.c,v 1.11 2007/03/18 20:13:49 otto Exp $
d48 1
a48 1
#include <sys/param.h>			/* for MAXPATHLEN */
d51 2
a52 2
u_char buf1[MAXPATHLEN] = " ";
u_char buf2[MAXPATHLEN];
@


1.11
log
@It's not smart to use a space as a field separator when a space can
be part of a bigram. So switch to tab and as a bonus detect in
locate.code if the bigram array is too short. Problem seen by Han
Boetes and other people with too big mps3 collections; these typically
contain lots of file names with spaces in them. ok jasper@@
@
text
@d2 1
a2 1
 *	$OpenBSD: locate.bigram.c,v 1.10 2003/09/29 16:03:16 deraadt Exp $
d35 1
a35 1
 * 	$Id: locate.bigram.c,v 1.10 2003/09/29 16:03:16 deraadt Exp $
a36 14

#ifndef lint
#if 0
static char copyright[] =
"@@(#) Copyright (c) 1989, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#else
static char rcsid[] = "$OpenBSD: locate.bigram.c,v 1.10 2003/09/29 16:03:16 deraadt Exp $";
#endif
#endif /* not lint */

#ifndef lint
static char sccsid[] = "@@(#)locate.bigram.c	8.1 (Berkeley) 6/6/93";
#endif /* not lint */
@


1.10
log
@knf
@
text
@d2 1
a2 1
 *	$OpenBSD: locate.bigram.c,v 1.9 2003/07/10 00:06:51 david Exp $
d35 1
a35 1
 * 	$Id: locate.bigram.c,v 1.9 2003/07/10 00:06:51 david Exp $
d44 1
a44 1
static char rcsid[] = "$OpenBSD: locate.bigram.c,v 1.9 2003/07/10 00:06:51 david Exp $";
d109 1
a109 1
				(void)printf("%4u %c%c\n", bigram[i][j], i, j);
@


1.9
log
@add missing includes
ok deraadt@@ tedu@@
@
text
@d2 1
a2 1
 *	$OpenBSD: locate.bigram.c,v 1.8 2003/06/03 02:56:09 millert Exp $
d35 1
a35 1
 * 	$Id: locate.bigram.c,v 1.8 2003/06/03 02:56:09 millert Exp $
d44 1
a44 1
static char rcsid[] = "$OpenBSD: locate.bigram.c,v 1.8 2003/06/03 02:56:09 millert Exp $";
d53 1
a53 1
 *  bigram < sorted_file_names | sort -nr | 
d72 1
a72 1
  	u_char *cp;
d76 1
a76 1
     	while (fgets(path, sizeof(buf2), stdin) != NULL) {
d78 1
a78 1
		/* 
d96 1
a96 1
		if (path == buf1) { 
d103 1
a103 1
   	}
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d2 1
a2 1
 *	$OpenBSD: locate.bigram.c,v 1.7 2001/11/19 19:02:14 mpech Exp $
d35 1
a35 1
 * 	$Id: locate.bigram.c,v 1.7 2001/11/19 19:02:14 mpech Exp $
d44 1
a44 1
static char rcsid[] = "$OpenBSD: locate.bigram.c,v 1.7 2001/11/19 19:02:14 mpech Exp $";
d61 1
@


1.7
log
@kill more registers

millert@@ ok
@
text
@d2 1
a2 1
 *	$OpenBSD: locate.bigram.c,v 1.6 1996/10/20 00:52:51 michaels Exp $
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d35 1
a35 1
 * 	$Id: locate.bigram.c,v 1.6 1996/10/20 00:52:51 michaels Exp $
d44 1
a44 1
static char rcsid[] = "$OpenBSD: locate.bigram.c,v 1.6 1996/10/20 00:52:51 michaels Exp $";
@


1.6
log
@8-Bit character support.  From wosch@@freebsd.
@
text
@d2 1
a2 1
 *	$OpenBSD$
d39 1
a39 1
 * 	$Id: locate.bigram.c,v 1.5 1996/09/15 16:50:35 michaels Exp $
d48 1
a48 1
static char rcsid[] = "$OpenBSD$";
d75 3
a77 3
  	register u_char *cp;
	register u_char *oldpath = buf1, *path = buf2;
	register u_int i, j;
@


1.5
log
@Blind update of wosch@@FreeBSD's code:

optimized search algorithm
faster IO due mmap(2) [-m | -s]
better error check for damaged databases
support for databases in network byte order (SunOS/sparc)
optional case insensitve search [-i]
optional multiple databases
optional multiple pattern
new enviroment variable LOCATE_PATH for database(s)
[-S] print some statistic about the database
[-l number] limit output to number file names
[-c] suppress normal output; instead print a count of matching file names
fix prototypes/forward declarations/return type
@
text
@a0 2
/*	$OpenBSD$	*/

d2 3
d39 1
a39 1
 * 	$Id: locate.bigram.c,v 1.6 1996/08/31 14:51:15 wosch Exp $
d43 1
d47 3
a52 1
#if 0
a53 3
#else
static char rcsid[] = "$OpenBSD$";
#endif
d70 1
a70 1
u_int bigram[UCHAR_MAX][UCHAR_MAX];
d81 6
a86 13
	    	/* skip empty lines */
		if (*path == '\n')
			continue;

		/* Squelch characters that would botch the decoding. */
		for (cp = path; *cp != '\0'; cp++) {
			/* chop newline */
			if (*cp == '\n')
				*cp = '\0';
			/* range */
			else if (*cp < ASCII_MIN || *cp > ASCII_MAX)
				*cp = '?';
		}
d89 3
a91 1
		for (cp = path; *cp == *oldpath && *cp != '\0'; cp++, oldpath++);
d93 2
a94 2
		while (*cp != '\0' && *(cp+1) != '\0') {
			bigram[*cp][*(cp+1)]++;
d108 1
a108 1
	/* output, (paranoid) boundary check */
d112 1
a112 1
				printf("%4u %c%c\n", bigram[i][j], i, j);
@


1.4
log
@Bugs in code, NUL != NULL, from bde@@zeta.org.au (Bruce Evans)
@
text
@d1 2
a2 1
/*       $OpenBSD: locate.bigram.c,v 1.3 1996/08/16 22:00:10 michaels Exp $                                                            */ 
d37 2
d51 1
a51 1
static char rcsid[] = "$OpenBSD: locate.bigram.c,v 1.3 1996/08/16 22:00:10 michaels Exp $";
d56 2
a57 1
 *  bigram < text > bigrams
a64 1
#include <string.h>			/* memchr */
d69 1
a69 1
unsigned int bigram[UCHAR_MAX][UCHAR_MAX]; 
d71 2
a72 1
int main(void)
d76 3
a78 1
	register int i, j;
d80 1
a80 2
	while (fgets(path, sizeof(buf2), stdin) != NULL) {
		/* skip empty lines */
d85 1
a85 1
		for (cp = path; *cp != NUL; cp++) {
d88 1
a88 1
				*cp = NUL;
d93 1
d95 1
a95 5
		for (cp = path; *cp == *oldpath && *cp != NUL; cp++, oldpath++)
			;
		/*
		 * output post-residue bigrams only
		 */
d97 1
a97 2
		/* check later for boundary */
		while ( *cp != NUL && *(cp+1) != NUL ) {
d102 2
a103 1
		if ( path == buf1 ) {	/* swap pointers */
d106 1
a106 2
		}
		else {
d110 3
a112 3
	}
		
	/* output, boundary check */
d116 1
a116 2
				fprintf(stdout, "%4d %c%c\n",
					bigram[i][j], i, j);
d118 1
a118 1
	return 0;
@


1.3
log
@Better locate from wosch@@freebsd (Wolfram Schneider), sligthly modified.
@
text
@d1 1
a1 1
/*       $OpenBSD$                                                            */ 
d48 1
a48 1
static char rcsid[] = "$OpenBSD$";
d80 1
a80 1
		for (cp = path; *cp != NULL; cp++) {
d83 1
a83 1
				*cp = NULL;
d89 1
a89 1
		for (cp = path; *cp == *oldpath && *cp != NULL; cp++, oldpath++)
d96 1
a96 1
		while ( *cp != NULL && *(cp+1) != NULL ) {
@


1.2
log
@rcsid
@
text
@d1 1
a1 3
/*	$OpenBSD: locate.bigram.c,v 1.5 1995/09/01 23:48:13 thorpej Exp $	*/
/*	$NetBSD: locate.bigram.c,v 1.5 1995/09/01 23:48:13 thorpej Exp $	*/

d46 3
a48 1
static char sccsid[] = "@@(#)locate.bigram.c	8.2 (Berkeley) 4/28/95";
a49 1
static char rcsid[] = "$OpenBSD: locate.bigram.c,v 1.5 1995/09/01 23:48:13 thorpej Exp $";
d54 1
a54 1
 * 
d61 2
d64 3
a66 2
char buf1[MAXPATHLEN] = " ";	
char buf2[MAXPATHLEN];
d68 1
a68 1
main ( )
d70 18
a87 5
  	register char *cp;
	register char *oldpath = buf1, *path = buf2;

     	while ( fgets ( path, sizeof(buf2), stdin ) != NULL ) {

d89 2
a90 3
		for ( cp = path; *cp == *oldpath; cp++, oldpath++ )
			if ( *oldpath == '\0' )
				break;
d94 10
a103 4
		while ( *cp != '\0' && *(cp + 1) != '\0' ) {
			putchar ( *cp++ );
			putchar ( *cp++ );
			putchar ( '\n' );
d105 14
a118 6
		if ( path == buf1 )		/* swap pointers */
			path = buf2, oldpath = buf1;
		else
			path = buf1, oldpath = buf2;
   	}
	return (0);
@


1.1
log
@Initial revision
@
text
@d1 1
d50 1
a50 1
static char rcsid[] = "$NetBSD: locate.bigram.c,v 1.5 1995/09/01 23:48:13 thorpej Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
