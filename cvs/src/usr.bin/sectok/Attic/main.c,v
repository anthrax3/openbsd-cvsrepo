head	1.11;
access;
symbols
	OPENBSD_4_8:1.10.0.12
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.8
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.10
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.6
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.4
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.2
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.9.0.18
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.16
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.14
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.12
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.10
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6;
locks; strict;
comment	@ * @;


1.11
date	2010.10.17.08.43.20;	author djm;	state dead;
branches;
next	1.10;

1.10
date	2007.12.30.13.35.27;	author sobrado;	state Exp;
branches;
next	1.9;

1.9
date	2003.08.04.17.06.46;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.06.17.07.10.52;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.15.47.31;	author rees;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.02.16.22.40;	author rees;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.09.17.23.21;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.27.14.13.08;	author rees;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.26.16.10.01;	author rees;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.02.20.15.07;	author rees;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.27.19.41.45;	author rees;	state Exp;
branches;
next	;


desc
@@


1.11
log
@remove sectok(1); it hasn't been updated in years and doesn't work
with the current generation of tokens; ok markus@@ deraadt@@
@
text
@/*	$OpenBSD: main.c,v 1.10 2007/12/30 13:35:27 sobrado Exp $ */

/*
 * Smartcard commander.
 * Written by Jim Rees and others at University of Michigan.
 */

/*
 * copyright 2001
 * the regents of the university of michigan
 * all rights reserved
 *
 * permission is granted to use, copy, create derivative works
 * and redistribute this software and such derivative works
 * for any purpose, so long as the name of the university of
 * michigan is not used in any advertising or publicity
 * pertaining to the use or distribution of this software
 * without specific, written prior authorization.  if the
 * above copyright notice or any other identification of the
 * university of michigan is included in any copy of any
 * portion of this software, then the disclaimer below must
 * also be included.
 *
 * this software is provided as is, without representation
 * from the university of michigan as to its fitness for any
 * purpose, and without warranty by the university of
 * michigan of any kind, either express or implied, including
 * without limitation the implied warranties of
 * merchantability and fitness for a particular purpose. the
 * regents of the university of michigan shall not be liable
 * for any damages, including special, indirect, incidental, or
 * consequential damages, with respect to any claim arising
 * out of or in connection with the use of the software, even
 * if it has been or is hereafter advised of the possibility of
 * such damages.
 */

#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
#include <signal.h>
#include <limits.h>
#include <string.h>
#include <errno.h>
#include <sectok.h>

#include "sc.h"

#define MAXTOKENS 300
#define CARDIOSIZE 200

void    onintr(int sigraised);

int     port, fd = -1, cla, sleepytime;
volatile sig_atomic_t interrupted;
FILE   *cmdf;

static void
usage(void)
{
	fprintf(stderr,
	    "usage: sectok [-0123] [-f scriptfile] [-s sleeptime] [command [arg ...]]\n");
	exit(1);
}

int
main(int argc, char *argv[])
{
	char    buf[_POSIX2_LINE_MAX], *scriptfile = NULL, *tp, *tv[MAXTOKENS];
	int     i, tc;

	tp = getenv("SCPORT");
	if (tp)
		port = atoi(tp);

	while ((i = getopt(argc, argv, "0123f:s:h")) != -1) {
		switch (i) {
		case '0':
		case '1':
		case '2':
		case '3':
			port = i - '0';
			break;
		case 'f':
			scriptfile = optarg;
			break;
		case 's':
			sleepytime = atoi(optarg);
			break;
		case 'h':
		default:
			usage();
			break;
		}
	}

	if (optind != argc) {
		/* Dispatch from command line */
		dispatch(argc - optind, &argv[optind]);
		exit(0);
	}
	if (scriptfile != NULL) {
		cmdf = fopen(scriptfile, "r");
		if (cmdf == NULL) {
			perror(scriptfile);
			exit(2);
		}
	} else
		cmdf = stdin;

	/* Interactive mode, or script file */

	signal(SIGINT, onintr);
#ifdef __OpenBSD__
	siginterrupt(SIGINT, 1);
#endif

	/* The Main Loop */
	while (1) {
		fflush(stdout);
		interrupted = 0;
		if (sleepytime)
			usleep(sleepytime * 1000);
		if (cmdf == stdin) {
			fprintf(stderr, "sectok> ");
			fflush(stderr);
		}
		if (!fgets(buf, sizeof buf, cmdf)) {
			putchar('\n');
			if (interrupted)
				continue;
			else
				break;
		}
		if (cmdf != stdin)
			printf("sectok> %s", buf);

		for ((tp = strtok(buf, " \t\n\r")), tc = 0; tp;
		    (tp = strtok(NULL, " \t\n\r")), tc++) {
			if (tc < MAXTOKENS - 1)
				tv[tc] = tp;
		}
		tv[tc] = NULL;

		dispatch(tc, tv);
	}

	quit(0, NULL);
	return 0;
}

void
onintr(int sigraised)
{
	interrupted++;
}
@


1.10
log
@add missing arguments to synopsis; fix brackets; lowercase "usage:"

ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.9 2003/08/04 17:06:46 deraadt Exp $ */
@


1.9
log
@protos
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.8 2002/06/17 07:10:52 deraadt Exp $ */
d62 1
a62 1
	    "usage: sectok [-0123] [-f scriptfile] [-s sleeptime] [cmd] [args]\n");
@


1.8
log
@make this readable.  If I broke something, someone else gets to fix it now that we can read it
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.7 2002/03/14 15:47:31 rees Exp $ */
d58 1
a58 1
void
d67 1
a67 3
main(argc, argv)
	int     argc;
	char   *argv[];
@


1.7
log
@call siginterrupt() (from theo)
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.6 2001/10/02 16:22:40 rees Exp $ */
d9 28
a36 28
copyright 2001
the regents of the university of michigan
all rights reserved

permission is granted to use, copy, create derivative works 
and redistribute this software and such derivative works 
for any purpose, so long as the name of the university of 
michigan is not used in any advertising or publicity 
pertaining to the use or distribution of this software 
without specific, written prior authorization.  if the 
above copyright notice or any other identification of the 
university of michigan is included in any copy of any 
portion of this software, then the disclaimer below must 
also be included.

this software is provided as is, without representation 
from the university of michigan as to its fitness for any 
purpose, and without warranty by the university of 
michigan of any kind, either express or implied, including 
without limitation the implied warranties of 
merchantability and fitness for a particular purpose. the 
regents of the university of michigan shall not be liable 
for any damages, including special, indirect, incidental, or 
consequential damages, with respect to any claim arising 
out of or in connection with the use of the software, even 
if it has been or is hereafter advised of the possibility of 
such damages.
*/
d42 1
d52 1
a52 1
void onintr(int sigraised);
d54 3
a56 7
const char usage[] =
"Usage: sectok [-0123hf:s:]\n"
"    0 - 3         : specify card reader number\n"
"    f script_file : run commands from the script file\n"
"    s sleep_time  : set sleep between commands in the script\n"
"    h             : this message\n"
;
d58 7
a64 2
int port, fd = -1, cla, sleepytime, interrupted;
FILE *cmdf;
d67 3
a69 3
main(ac, av)
int ac;
char *av[];
d71 2
a72 2
    int i, tc;
    char buf[256], *scriptfile = NULL, *tp, *tv[MAXTOKENS];
d74 23
a96 23
    tp = getenv("SCPORT");
    if (tp)
	port = atoi(tp);

    while ((i = getopt(ac, av, "0123f:s:h")) != -1) {
	switch (i) {
	case '0':
	case '1':
	case '2':
	case '3':
	    port = i - '0';
	    break;
	case 'f':
	    scriptfile = optarg;
	    break;
	case 's':
	    sleepytime = atoi(optarg);
	    break;
	case 'h':
	case '?':
	    fputs(usage, stdout);
	    exit(0);
	    break;
a97 1
    }
d99 4
a102 11
    if (optind != ac) {
	/* Dispatch from command line */
	dispatch(ac - optind, &av[optind]);
	exit(0);
    }

    if (scriptfile != NULL) {
	cmdf = fopen(scriptfile, "r");
	if (cmdf == NULL) {
	    perror(scriptfile);
	    exit(2);
d104 8
a111 2
    } else
	cmdf = stdin;
d113 1
a113 1
    /* Interactive mode, or script file */
d115 1
a115 1
    signal(SIGINT, onintr);
d117 1
a117 1
    siginterrupt(SIGINT, 1);
d120 26
a145 10
    /* The Main Loop */
    while (1) {
	fflush(stdout);
	interrupted = 0;
	if (sleepytime)
	    usleep(sleepytime * 1000);
	if (cmdf == stdin) {
	    fprintf(stderr, "sectok> ");
	    fflush(stderr);
	}
d147 1
a147 6
	if (!fgets(buf, sizeof buf, cmdf)) {
	    putchar('\n');
	    if (interrupted)
		continue;
	    else
		break;
a148 11
	if (cmdf != stdin)
	    printf("sectok> %s", buf);

	for ((tp = strtok(buf, " \t\n\r")), tc = 0; tp; (tp = strtok(NULL, " \t\n\r")), tc++) {
	    if (tc < MAXTOKENS - 1)
		tv[tc] = tp;
	}
	tv[tc] = NULL;

	dispatch(tc, tv);
    }
d150 2
a151 2
    quit(0, NULL);
    return 0;
d154 2
a155 1
void onintr(int sigraised)
d157 1
a157 1
    interrupted++;
@


1.6
log
@add csearch
call sectok_close on exit
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.3 2001/10/02 16:12:57 rees Exp $ */
d116 3
d132 1
d135 1
a135 2
	    else {
		putchar('\n');
a136 1
	    }
@


1.5
log
@feed the line after eof, make it behave like other utils we have; rees@@ ok
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.4 2001/07/27 14:13:08 rees Exp $ */
d148 2
a149 1
    exit(0);
@


1.4
log
@fix acl on program files
add acl -x option
fix help command
add SCPORT ev
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.3 2001/07/26 16:10:01 rees Exp $ */
d131 2
a132 1
	    else
d134 1
@


1.3
log
@fid command now selects aids too
remove jselect
port numbers are now 0-based
print friendly aid names
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.2 2001/07/02 20:15:07 rees Exp $ */
d54 2
a55 2
"Usage: sectok [-1234hHf:s:]\n"
"    1 - 4         : specify card reader number\n"
d71 4
@


1.2
log
@libsectok functions now take status word instead of bytes
add create, delete, isearch
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.1 2001/06/27 19:41:45 rees Exp $ */
d72 1
a72 1
    while ((i = getopt(ac, av, "1234c:d:f:Hhs:")) != -1) {
d74 1
d78 1
a78 2
	case '4':
	    port = i - '1';
@


1.1
log
@sectok control program
@
text
@d1 1
a1 1
/* $Id: $ */
d43 1
d51 2
d61 1
a61 1
int fd = -1, cla, sleepytime;
d69 1
a69 1
    int i, port, tc;
d111 2
d116 1
d124 6
a129 2
	if (!fgets(buf, sizeof buf, cmdf))
	    break;
d143 5
@

