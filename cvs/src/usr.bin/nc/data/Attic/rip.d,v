head	1.3;
access;
symbols
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_8:1.1.0.18
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.16
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.14
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2002.02.19.22.25.26;	author ericj;	state dead;
branches;
next	1.2;

1.2
date	2001.01.29.01.58.11;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.09.05.08.55.37;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
remove old cruft
@
text
@#	$OpenBSD: rip.d,v 1.2 2001/01/29 01:58:11 niklas Exp $

# struct netinfo {
#	struct	sockaddr rip_dst;	/* destination net/host */
#	int	rip_metric;		/* cost of route */
# };
# struct rip {
#	u_char	rip_cmd;		/* request/response */
#	u_char	rip_vers;		/* protocol version # */
#	u_char	rip_res1[2];		/* pad to 32-bit boundary */
#	union {
#		struct	netinfo ru_nets[1];	/* variable length... */
#		char	ru_tracefile[1];	/* ditto ... */
#	} ripun;
#define	rip_nets	ripun.ru_nets
#define	rip_tracefile	ripun.ru_tracefile
#define	RIPCMD_REQUEST		1	/* want info */
#define	RIPCMD_RESPONSE		2	/* responding to request */
#define	RIPCMD_TRACEON		3	/* turn tracing on */
#define	RIPCMD_TRACEOFF		4	/* turn it off */
#define	HOPCNT_INFINITY		16	/* per Xerox NS */
#define	MAXPACKETSIZE		512	/* max broadcast size */

### RIP packet redux
### UDP send FROM clued-rtr/520 to target/520
2	# RIPCMD_RESPONSE
1	# version
0	# padding
0

# sockaddr-plus-metric  structs begin, as many as necessary...
0	# len
2	# AF_INET
0	# port
0
# addr bytes:
X
Y
Z
Q
0	# filler, out to 16 bytes [sizeof (sockaddr)] ...
0
0
0
0
0
0
0
0	# metric: net-order integer
0
0
1

## that's it
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD$
@


1.1
log
@nc is *hobbit*'s netcat; let the sysadm have the same tools the crackers
have, so that he may learn what the network is about and protect it better.
@
text
@d1 2
@

