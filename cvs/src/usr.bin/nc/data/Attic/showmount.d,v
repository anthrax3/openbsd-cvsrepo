head	1.3;
access;
symbols
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_8:1.1.0.18
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.16
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.14
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2002.02.19.22.25.26;	author ericj;	state dead;
branches;
next	1.2;

1.2
date	2001.01.29.01.58.12;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.09.05.08.55.38;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@
remove old cruft
@
text
@#	$OpenBSD: showmount.d,v 1.2 2001/01/29 01:58:12 niklas Exp $

# UDP mountd call.  Use as input to find mount daemons and avoid portmap.
# Useful proc numbers are 2, 5, and 6.
# UDP-scan around between 600-800 to find most mount daemons.
# Using this with "2", plugged into "nc -u -v -w 2 victim X-Y" will
# directly scan *and* dump the current exports when mountd is hit.
# combine stdout *and* stderr thru "strings" or something to clean it up

000	# XID: 4 trash bytes
001
002
003

000	# CALL: 0
000
000
000

000	# RPC version: 2
000
000
002

000	# mount: 100005
001
0x86
0xa5

000	# mount version: 1
000
000
001

000	# procedure number -- put what you need here:
000	#	2 = dump  [showmount -e]
000	#	5 = exportlist [showmount -a]
xxx	# "sed s/xxx/$1/ | data -g | nc ..."  or some such...

000	# port: junk
000
000
000

000	# auth trash
000
000
000

000	# auth trash
000
000
000

000	# auth trash
000
000
000

000	# extra auth trash?  probably not needed
000
000
000

# that's it!
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD$
@


1.1
log
@nc is *hobbit*'s netcat; let the sysadm have the same tools the crackers
have, so that he may learn what the network is about and protect it better.
@
text
@d1 2
@

