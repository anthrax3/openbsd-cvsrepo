head	1.6;
access;
symbols
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	LESS_458:1.1.1.3
	OPENBSD_5_5:1.4.0.12
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.8
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	LESS_444:1.1.1.2
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	LESS_381:1.1.1.1
	MARK_NUDELMAN:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.11.05.22.08.44;	author nicm;	state dead;
branches;
next	1.5;
commitid	yKv9Ck9ZDgwWTRTo;

1.5
date	2014.04.25.13.38.21;	author shadchin;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.16.18.12.09;	author shadchin;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.22.22.57.13;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.14.17.10.20;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2003.04.13.18.21.21;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.04.13.18.21.21;	author millert;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2011.09.16.17.47.06;	author shadchin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.04.25.13.33.48;	author shadchin;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Replace less with the cleaned-up fork of less 458 maintained by Garrett
D'Amore at https://github.com/gdamore/less-fork. This has significantly
less portability goop, has a tidied up code style, uses terminfo instead
of termcap, and is has stricter POSIX compliance.

Many of our local changes have been accepted upstream: substantial
remaining local changes are code to read help files from /usr/share
rather than compiling them in, man page and help improvements, and some
tweaks to the default options.

Review and testing by millert, ok deraadt
@
text
@/*
 * Copyright (C) 1984-2012  Mark Nudelman
 *
 * You may distribute under the terms of either the GNU General Public
 * License or the Less License, as specified in the README file.
 *
 * For more information, see the README file.
 */


/*
 * Macros to define the method of doing filename "globbing".
 * There are three possible mechanisms:
 *   1.	GLOB_LIST
 *	This defines a function that returns a list of matching filenames.
 *   2. GLOB_NAME
 *	This defines a function that steps thru the list of matching
 *	filenames, returning one name each time it is called.
 *   3. GLOB_STRING
 *	This defines a function that returns the complete list of
 *	matching filenames as a single space-separated string.
 */

#include <glob.h>

#define	GLOB_FLAGS			(GLOB_NOCHECK|GLOB_BRACE|GLOB_TILDE)
#define	DECL_GLOB_LIST(list)		glob_t list;  int i;
#define	GLOB_LIST(filename,list)	glob(filename,GLOB_FLAGS,0,&list)
#define	GLOB_LIST_FAILED(list)		0
#define	SCAN_GLOB_LIST(list,p)		i = 0;  i < list.gl_pathc;  i++
#define	INIT_GLOB_LIST(list,p)		p = list.gl_pathv[i]
#define	GLOB_LIST_DONE(list)		globfree(&list)
@


1.5
log
@Merge Less 458 plus local patches

ok guenther@@, ok jmc@@ for man bits
@
text
@@


1.4
log
@Merge in less 444 plus local changes

ok nicm@@
@
text
@d2 1
a2 1
 * Copyright (C) 1984-2011  Mark Nudelman
d7 1
a7 2
 * For more information about less, or for information on how to 
 * contact the author, see the README file.
@


1.3
log
@Tell glob() to do tilde and brace expansion too.
@
text
@d2 1
a2 1
 * Copyright (C) 1984-2002  Mark Nudelman
d27 1
a27 1
#define GLOB_FLAGS			(GLOB_NOCHECK|GLOB_BRACE|GLOB_TILDE)
@


1.2
log
@less uses the "lessecho" command to do globbing on systems that
don't have libc glob routines.  We have glob(3) but for some reason,
less only uses this on DOS w/ djgppc.  I have pared down lglob.h
to just have the glob(3) bits and to include glob.h itself.  This
removes the need for lessecho on OpenBSD.
@
text
@d27 1
d29 1
a29 1
#define	GLOB_LIST(filename,list)	glob(filename,GLOB_NOCHECK,0,&list)
@


1.1
log
@Initial revision
@
text
@d25 1
a25 11
#if OS2

#define	DECL_GLOB_LIST(list)		char **list;  char **pp;
#define	GLOB_LIST(filename,list)	list = _fnexplode(filename)
#define	GLOB_LIST_FAILED(list)		list == NULL
#define	SCAN_GLOB_LIST(list,p)		pp = list;  *pp != NULL;  pp++
#define	INIT_GLOB_LIST(list,p)		p = *pp
#define	GLOB_LIST_DONE(list)		_fnexplodefree(list)

#else
#if MSDOS_COMPILER==DJGPPC
a32 53

#else
#if MSDOS_COMPILER==MSOFTC || MSDOS_COMPILER==BORLANDC

#define	GLOB_FIRST_NAME(filename,fndp,h) h = _dos_findfirst(filename, ~_A_VOLID, fndp)
#define	GLOB_FIRST_FAILED(handle)	((handle) != 0)
#define	GLOB_NEXT_NAME(handle,fndp)		_dos_findnext(fndp)
#define	GLOB_NAME_DONE(handle)
#define	GLOB_NAME			name
#define	DECL_GLOB_NAME(fnd,drive,dir,fname,ext,handle) \
					struct find_t fnd;	\
					char drive[_MAX_DRIVE];	\
					char dir[_MAX_DIR];	\
					char fname[_MAX_FNAME];	\
					char ext[_MAX_EXT];	\
					int handle;
#else
#if MSDOS_COMPILER==WIN32C && defined(_MSC_VER)

#define	GLOB_FIRST_NAME(filename,fndp,h) h = _findfirst(filename, fndp)
#define	GLOB_FIRST_FAILED(handle)	((handle) == -1)
#define	GLOB_NEXT_NAME(handle,fndp)	_findnext(handle, fndp)
#define	GLOB_NAME_DONE(handle)		_findclose(handle)
#define	GLOB_NAME			name
#define	DECL_GLOB_NAME(fnd,drive,dir,fname,ext,handle) \
					struct _finddata_t fnd;	\
					char drive[_MAX_DRIVE];	\
					char dir[_MAX_DIR];	\
					char fname[_MAX_FNAME];	\
					char ext[_MAX_EXT];	\
					long handle;

#else
#if MSDOS_COMPILER==WIN32C && !defined(_MSC_VER) /* Borland C for Windows */

#define	GLOB_FIRST_NAME(filename,fndp,h) h = findfirst(filename, fndp, ~FA_LABEL)
#define	GLOB_FIRST_FAILED(handle)	((handle) != 0)
#define	GLOB_NEXT_NAME(handle,fndp)	findnext(fndp)
#define	GLOB_NAME_DONE(handle)
#define	GLOB_NAME			ff_name
#define	DECL_GLOB_NAME(fnd,drive,dir,fname,ext,handle) \
					struct ffblk fnd;	\
					char drive[MAXDRIVE];	\
					char dir[MAXDIR];	\
					char fname[MAXFILE];	\
					char ext[MAXEXT];	\
					int handle;

#endif
#endif
#endif
#endif
#endif
@


1.1.1.1
log
@Stock less-390 with some unneeded DOS/Windoze files removed
@
text
@@


1.1.1.2
log
@Import of Less 444

ok nicm@@
@
text
@d2 1
a2 1
 * Copyright (C) 1984-2011  Mark Nudelman
@


1.1.1.3
log
@Import of Less 458

ok guenther@@
@
text
@d2 1
a2 1
 * Copyright (C) 1984-2012  Mark Nudelman
d7 2
a8 1
 * For more information, see the README file.
d25 11
a35 1
#include <glob.h>
a36 1
#define	GLOB_FLAGS			(GLOB_NOCHECK|GLOB_BRACE|GLOB_TILDE)
d38 1
a38 1
#define	GLOB_LIST(filename,list)	glob(filename,GLOB_FLAGS,0,&list)
d43 53
@


