head	1.8;
access;
symbols
	OPENBSD_6_1:1.7.0.4
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.6.0.6
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5;
locks; strict;
comment	@# @;


1.8
date	2017.05.07.04.18.47;	author jsg;	state Exp;
branches;
next	1.7;
commitid	Km5xHAdCVWUIZRqG;

1.7
date	2016.09.04.18.05.34;	author beck;	state Exp;
branches;
next	1.6;
commitid	80XnkciDymj74Lm1;

1.6
date	2015.09.11.14.30.23;	author bcook;	state Exp;
branches;
next	1.5;
commitid	erFqA80i5nzJClSk;

1.5
date	2015.02.10.15.29.34;	author jsing;	state Exp;
branches;
next	1.4;
commitid	Wki7PREyQ9SXLiCS;

1.4
date	2014.12.03.22.16.02;	author bcook;	state Exp;
branches;
next	1.3;
commitid	pXF0B9KzK9mQREUH;

1.3
date	2014.09.10.16.51.42;	author jsing;	state Exp;
branches;
next	1.2;
commitid	dXdpW4OlRib7H7oO;

1.2
date	2014.09.01.20.54.37;	author doug;	state Exp;
branches;
next	1.1;
commitid	dBAy3m0UnXOh0qIH;

1.1
date	2014.08.26.17.47.24;	author jsing;	state Exp;
branches;
next	;
commitid	7A7DObXgY4Fni8xJ;


desc
@@


1.8
log
@Limit -Werror to gcc4 as was done in libcrypto/libssl/libtls to avoid
failed builds with different compilers.

ok jsing@@
@
text
@#	$OpenBSD: Makefile,v 1.7 2016/09/04 18:05:34 beck Exp $

.include <bsd.own.mk>

PROG=	openssl
LDADD=	-lssl -lcrypto
DPADD=	${LIBSSL} ${LIBCRYPTO}
MAN1=	openssl.1

CFLAGS+= -Wall
CFLAGS+= -Wformat
CFLAGS+= -Wformat-security
CFLAGS+= -Wimplicit
CFLAGS+= -Wreturn-type
#CFLAGS+= -Wshadow
CFLAGS+= -Wtrigraphs
CFLAGS+= -Wuninitialized
CFLAGS+= -Wunused
.if ${COMPILER_VERSION:L} == "gcc4"
CFLAGS+= -Werror
.endif
CFLAGS+= -DLIBRESSL_INTERNAL

SRCS=	apps.c apps_posix.c asn1pars.c ca.c certhash.c ciphers.c crl.c \
	crl2p7.c dgst.c dh.c dhparam.c dsa.c dsaparam.c ec.c ecparam.c enc.c \
	errstr.c gendh.c gendsa.c genpkey.c genrsa.c nseq.c ocsp.c \
	openssl.c passwd.c pkcs12.c pkcs7.c pkcs8.c pkey.c pkeyparam.c \
	pkeyutl.c prime.c rand.c req.c rsa.c rsautl.c s_cb.c s_client.c \
	s_server.c s_socket.c s_time.c sess_id.c smime.c speed.c spkac.c ts.c \
	verify.c version.c x509.c

.include <bsd.prog.mk>
@


1.7
log
@bye bye cms. send it to the attic
ok jsing@@
@
text
@d1 3
a3 1
#	$OpenBSD: Makefile,v 1.6 2015/09/11 14:30:23 bcook Exp $
d10 1
a10 1
CFLAGS+= -Wall -Werror
d19 3
a21 1

@


1.6
log
@Remove engine command and parameters from openssl(1).

We do not have any builtin or dynamic engines, meaning openssl(1) has
no way to use the engine command or parameters at all.

ok jsing@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2015/02/10 15:29:34 jsing Exp $
d20 1
a20 1
SRCS=	apps.c apps_posix.c asn1pars.c ca.c certhash.c ciphers.c cms.c crl.c \
@


1.5
log
@Introduce an openssl(1) certhash command.

This is effectively a reimplementation of the functionality provided by
the previously removed c_rehash Perl script. The c_rehash script had a
number of known issues, including the fact that it needs to run openssl(1)
multiple times and that it starts by removing all symlinks before
putting them back, creating atomicity issues/race conditions, even when
nothing has changed.

certhash is self-contained and is intended to be stable - no changes
should be made unless something has actually changed. This means it can
be run regularly in a production environment without causing certificate
lookup failures.

Further testing and improvements will happen in tree.

Discussed with tedu@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2014/12/03 22:16:02 bcook Exp $
d22 1
a22 1
	engine.c errstr.c gendh.c gendsa.c genpkey.c genrsa.c nseq.c ocsp.c \
@


1.4
log
@Move Windows OS-specific functions to make porting easier.

Several functions that need to be redefined for a Windows port are right
in the middle of other code that is relatively portable. This patch
isolates the functions that need Windows-specific implementations so
they can be built conditionally in the portable tree.

Add calls to BIO_sock_init() as-needed to openssl(1) so that socket IO works on
Windows. Sorry, these are no-op on other platforms.

ok jsing@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2014/09/10 16:51:42 jsing Exp $
d20 7
a26 7
SRCS=	apps.c apps_posix.c asn1pars.c ca.c ciphers.c cms.c crl.c crl2p7.c \
	dgst.c dh.c dhparam.c dsa.c dsaparam.c ec.c ecparam.c enc.c engine.c \
	errstr.c gendh.c gendsa.c genpkey.c genrsa.c nseq.c ocsp.c openssl.c \
	passwd.c pkcs12.c pkcs7.c pkcs8.c pkey.c pkeyparam.c pkeyutl.c prime.c \
	rand.c req.c rsa.c rsautl.c s_cb.c s_client.c s_server.c s_socket.c \
	s_time.c sess_id.c smime.c speed.c spkac.c ts.c verify.c version.c \
	x509.c
@


1.3
log
@Disable -Wshadow again, since it breaks builds on vax with gcc3.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2014/09/01 20:54:37 doug Exp $
d20 7
a26 6
SRCS=	apps.c asn1pars.c ca.c ciphers.c cms.c crl.c crl2p7.c dgst.c dh.c \
	dhparam.c dsa.c dsaparam.c ec.c ecparam.c enc.c engine.c errstr.c \
	gendh.c gendsa.c genpkey.c genrsa.c nseq.c ocsp.c openssl.c passwd.c \
	pkcs12.c pkcs7.c pkcs8.c pkey.c pkeyparam.c pkeyutl.c prime.c rand.c \
	req.c rsa.c rsautl.c s_cb.c s_client.c s_server.c s_socket.c s_time.c \
	sess_id.c smime.c speed.c spkac.c ts.c verify.c version.c x509.c
@


1.2
log
@Enable -Wshadow in openssl(1) and fix a few shadow warnings.

ok jsing@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2014/08/26 17:47:24 jsing Exp $
d13 1
a13 1
CFLAGS+= -Wshadow
@


1.1
log
@Move openssl(1) from /usr/sbin/openssl to /usr/bin/openssl, since it is not
a system/superuser binary. At the same time, move the source code from its
current lib/libssl/src/apps location to a more appropriate home under
usr.bin/openssl.

ok deraadt@@ miod@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d13 1
a13 1
#CFLAGS+= -Wshadow
@

