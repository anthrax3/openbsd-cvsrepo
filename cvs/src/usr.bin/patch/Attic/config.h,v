head	1.7;
access;
symbols
	OPENBSD_3_3:1.3.0.24
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.22
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.20
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.18
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2003.07.22.17.18.49;	author otto;	state dead;
branches;
next	1.6;

1.6
date	2003.07.21.14.32.21;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.07.21.14.00.41;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2003.07.18.02.00.09;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.09.22.05.45.26;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.11.21.27;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.55;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.55;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@More cleanup.
ok millert@@ tedu@@
@
text
@/*	$OpenBSD: config.h,v 1.6 2003/07/21 14:32:21 deraadt Exp $	*/

/*
 * config.h This file was produced by running the config.h.SH script, which
 * gets its values from config.sh, which is generally produced by running
 * Configure.
 * 
 * Feel free to modify any of this as the need arises.  Note, however, that
 * running config.h.SH again will wipe out any changes you've made. For a
 * more permanent change edit config.sh and rerun config.h.SH.
 * 
 */


/*
 * CPPSTDIN: This symbol contains the first part of the string which will
 * invoke the C preprocessor on the standard input and produce to standard
 * output.	 Typical value of "cc -E" or "/lib/cpp".
 */
/*
 * CPPMINUS: This symbol contains the second part of the string which will
 * invoke the C preprocessor on the standard input and produce to standard
 * output.  This symbol will have the value "-" if CPPSTDIN needs a minus to
 * specify standard input, otherwise the value is "".
 */
#define CPPSTDIN "/usr/bin/cpp"
#define CPPMINUS ""

/*
 * DIRHEADER: This definition indicates which directory library header to
 * use.
 */
#define DIRENT
@


1.6
log
@fix header
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.5 2003/07/21 14:00:41 deraadt Exp $	*/
@


1.5
log
@knf and other cleanup; ok otto
@
text
@d1 1
a1 1
/* $OpenBSD: config.h,v 1.4 2003/07/18 02:00:09 deraadt Exp $	 */
@


1.4
log
@remove junk; ok otto tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.3 1997/09/22 05:45:26 millert Exp $	*/
d3 9
a11 9
/* config.h
 * This file was produced by running the config.h.SH script, which
 * gets its values from config.sh, which is generally produced by
 * running Configure.
 *
 * Feel free to modify any of this as the need arises.  Note, however,
 * that running config.h.SH again will wipe out any changes you've made.
 * For a more permanent change edit config.sh and rerun config.h.SH.
 *
d15 4
a18 4
/* CPPSTDIN:
 *	This symbol contains the first part of the string which will invoke
 *	the C preprocessor on the standard input and produce to standard
 *	output.	 Typical value of "cc -E" or "/lib/cpp".
d20 5
a24 5
/* CPPMINUS:
 *	This symbol contains the second part of the string which will invoke
 *	the C preprocessor on the standard input and produce to standard
 *	output.  This symbol will have the value "-" if CPPSTDIN needs a minus
 *	to specify standard input, otherwise the value is "".
d29 3
a31 2
/* DIRHEADER:
 *	This definition indicates which directory library header to use.
a33 1

@


1.3
log
@Start of -Wall and cleaning up icky bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.2 1996/06/10 11:21:27 niklas Exp $	*/
a14 14
/* EUNICE:
 *	This symbol, if defined, indicates that the program is being compiled
 *	under the EUNICE package under VMS.  The program will need to handle
 *	things like files that don't go away the first time you unlink them,
 *	due to version numbering.  It will also need to compensate for lack
 *	of a respectable link() command.
 */
/* VMS:
 *	This symbol, if defined, indicates that the program is running under
 *	VMS.  It is currently only set in conjunction with the EUNICE symbol.
 */
#/*undef	EUNICE		/**/
#/*undef	VMS		/**/

a28 33
/* CHARSPRINTF:
 *	This symbol is defined if this system declares "char *sprintf()" in
 *	stdio.h.  The trend seems to be to declare it as "int sprintf()".  It
 *	is up to the package author to declare sprintf correctly based on the
 *	symbol.
 */
/* #	CHARSPRINTF 	/**/

/* FLEXFILENAMES:
 *	This symbol, if defined, indicates that the system supports filenames
 *	longer than 14 characters.
 */
#define	FLEXFILENAMES		/**/

/* index:
 *	This preprocessor symbol is defined, along with rindex, if the system
 *	uses the strchr and strrchr routines instead.
 */
/* rindex:
 *	This preprocessor symbol is defined, along with index, if the system
 *	uses the strchr and strrchr routines instead.
 */
#/*undef	index strchr	/* cultural */
#/*undef	rindex strrchr	/*  differences? */

/* VOIDSIG:
 *	This symbol is defined if this system declares "void (*signal())()" in
 *	signal.h.  The old way was to declare it as "int (*signal())()".  It
 *	is up to the package author to declare things correctly based on the
 *	symbol.
 */
#define	VOIDSIG 	/**/

a32 54

/* HAVE_UNISTD_H:
 *	This is defined if the system has unistd.h.
 */
#define	HAVE_UNISTD_H	/**/

/* Reg1:
 *	This symbol, along with Reg2, Reg3, etc. is either the word "register"
 *	or null, depending on whether the C compiler pays attention to this
 *	many register declarations.  The intent is that you don't have to
 *	order your register declarations in the order of importance, so you
 *	can freely declare register variables in sub-blocks of code and as
 *	function parameters.  Do not use Reg<n> more than once per routine.
 */

#define Reg1 register		/**/
#define Reg2 register		/**/
#define Reg3 register		/**/
#define Reg4 register		/**/
#define Reg5 register		/**/
#define Reg6 register		/**/
#define Reg7 		/**/
#define Reg8 		/**/
#define Reg9 		/**/
#define Reg10 		/**/
#define Reg11 		/**/
#define Reg12 		/**/
#define Reg13 		/**/
#define Reg14 		/**/
#define Reg15 		/**/
#define Reg16 		/**/

/* VOIDFLAGS:
 *	This symbol indicates how much support of the void type is given by this
 *	compiler.  What various bits mean:
 *
 *	    1 = supports declaration of void
 *	    2 = supports arrays of pointers to functions returning void
 *	    4 = supports comparisons between pointers to void functions and
 *		    addresses of void functions
 *
 *	The package designer should define VOIDUSED to indicate the requirements
 *	of the package.  This can be done either by #defining VOIDUSED before
 *	including config.h, or by defining defvoidused in Myinit.U.  If the
 *	level of void support necessary is not present, defines void to int.
 */
#ifndef VOIDUSED
#define VOIDUSED 7
#endif
#define VOIDFLAGS 7
#if (VOIDFLAGS & VOIDUSED) != VOIDUSED
#define void int		/* is void to be avoided? */
#define M_VOID		/* Xenix strikes again */
#endif
@


1.2
log
@Support the long options that FSF's patch version has.  $OpenBSD$ added
@
text
@d1 2
a2 1
/* *	$OpenBSD: config.h,v 1.1.1.1 1995/10/18 08:45:55 deraadt Exp $*/
@


1.1
log
@Initial revision
@
text
@d1 1
a10 1
 *	$Id: config.h,v 1.2 1993/08/02 17:55:15 mycroft Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
