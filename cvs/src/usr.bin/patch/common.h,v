head	1.29;
access;
symbols
	OPENBSD_6_1:1.29.0.8
	OPENBSD_6_1_BASE:1.29
	OPENBSD_6_0:1.29.0.6
	OPENBSD_6_0_BASE:1.29
	OPENBSD_5_9:1.29.0.2
	OPENBSD_5_9_BASE:1.29
	OPENBSD_5_8:1.29.0.4
	OPENBSD_5_8_BASE:1.29
	OPENBSD_5_7:1.28.0.2
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.26.0.36
	OPENBSD_5_6_BASE:1.26
	OPENBSD_5_5:1.26.0.34
	OPENBSD_5_5_BASE:1.26
	OPENBSD_5_4:1.26.0.30
	OPENBSD_5_4_BASE:1.26
	OPENBSD_5_3:1.26.0.28
	OPENBSD_5_3_BASE:1.26
	OPENBSD_5_2:1.26.0.26
	OPENBSD_5_2_BASE:1.26
	OPENBSD_5_1_BASE:1.26
	OPENBSD_5_1:1.26.0.24
	OPENBSD_5_0:1.26.0.22
	OPENBSD_5_0_BASE:1.26
	OPENBSD_4_9:1.26.0.20
	OPENBSD_4_9_BASE:1.26
	OPENBSD_4_8:1.26.0.18
	OPENBSD_4_8_BASE:1.26
	OPENBSD_4_7:1.26.0.14
	OPENBSD_4_7_BASE:1.26
	OPENBSD_4_6:1.26.0.16
	OPENBSD_4_6_BASE:1.26
	OPENBSD_4_5:1.26.0.12
	OPENBSD_4_5_BASE:1.26
	OPENBSD_4_4:1.26.0.10
	OPENBSD_4_4_BASE:1.26
	OPENBSD_4_3:1.26.0.8
	OPENBSD_4_3_BASE:1.26
	OPENBSD_4_2:1.26.0.6
	OPENBSD_4_2_BASE:1.26
	OPENBSD_4_1:1.26.0.4
	OPENBSD_4_1_BASE:1.26
	OPENBSD_4_0:1.26.0.2
	OPENBSD_4_0_BASE:1.26
	OPENBSD_3_9:1.25.0.10
	OPENBSD_3_9_BASE:1.25
	OPENBSD_3_8:1.25.0.8
	OPENBSD_3_8_BASE:1.25
	OPENBSD_3_7:1.25.0.6
	OPENBSD_3_7_BASE:1.25
	OPENBSD_3_6:1.25.0.4
	OPENBSD_3_6_BASE:1.25
	OPENBSD_3_5:1.25.0.2
	OPENBSD_3_5_BASE:1.25
	OPENBSD_3_4:1.24.0.2
	OPENBSD_3_4_BASE:1.24
	OPENBSD_3_3:1.10.0.18
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.16
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.14
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.12
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.10
	OPENBSD_2_8:1.10.0.8
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.6
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.10.0.4
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.10.0.2
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.9.0.6
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.9.0.4
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.29
date	2015.07.26.14.32.19;	author millert;	state Exp;
branches;
next	1.28;
commitid	09nDnpMEB9OxbzYE;

1.28
date	2014.11.25.10.26.07;	author tobias;	state Exp;
branches
	1.28.2.1;
next	1.27;
commitid	mZfOdiB135CQCOKt;

1.27
date	2014.11.22.15.49.28;	author tobias;	state Exp;
branches;
next	1.26;
commitid	vyatgew5pmIq3geU;

1.26
date	2006.03.11.19.41.30;	author otto;	state Exp;
branches
	1.26.36.1;
next	1.25;

1.25
date	2003.10.31.20.20.45;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	2003.08.15.08.00.51;	author otto;	state Exp;
branches;
next	1.23;

1.23
date	2003.08.10.21.28.48;	author otto;	state Exp;
branches;
next	1.22;

1.22
date	2003.08.01.20.30.48;	author otto;	state Exp;
branches;
next	1.21;

1.21
date	2003.07.31.14.10.21;	author otto;	state Exp;
branches;
next	1.20;

1.20
date	2003.07.28.19.15.34;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2003.07.28.18.35.36;	author otto;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.22.21.50.21;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2003.07.22.17.18.49;	author otto;	state Exp;
branches;
next	1.16;

1.16
date	2003.07.21.14.32.21;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2003.07.21.14.30.31;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2003.07.21.14.00.41;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2003.07.18.02.00.09;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.04.08.01.54.56;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2003.04.08.01.54.26;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	99.01.03.05.33.48;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	97.09.22.05.45.26;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.09.06.23.51.31;	author niklas;	state Exp;
branches;
next	1.7;

1.7
date	97.06.24.02.33.48;	author dgregor;	state Exp;
branches;
next	1.6;

1.6
date	97.01.17.15.47.51;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	96.09.24.04.19.25;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.09.24.02.58.53;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.06.25.23.06.36;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.11.21.26;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.55;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.55;	author deraadt;	state Exp;
branches;
next	;

1.26.36.1
date	2015.07.27.16.08.18;	author guenther;	state Exp;
branches;
next	;
commitid	ltV6h69MuIPDoBUT;

1.28.2.1
date	2015.07.27.16.10.54;	author krw;	state Exp;
branches;
next	;
commitid	7qowXgsHJsgQ1um1;


desc
@@


1.29
log
@Remove support for automatically checking files out of RCS.  The
behavior is confusing to users and even GNU patch no longer does
it by default.  OK krw@@ guenther@@
@
text
@/*	$OpenBSD: common.h,v 1.28 2014/11/25 10:26:07 tobias Exp $	*/

/*
 * patch - a program to apply diffs to original files
 * 
 * Copyright 1986, Larry Wall
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following condition is met:
 * 1. Redistributions of source code must retain the above copyright notice,
 * this condition and the following disclaimer.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * 
 * -C option added in 1998, original code by Marc Espie, based on FreeBSD
 * behaviour
 */

#include <sys/types.h>

#include <limits.h>
#include <stdbool.h>

#define DEBUGGING

/* constants */

#define MAXHUNKSIZE 100000	/* is this enough lines? */
#define INITHUNKMAX 125		/* initial dynamic allocation size */
#define MAXLINELEN 8192
#define BUFFERSIZE 1024
#define LINENUM_MAX LONG_MAX

#define ORIGEXT ".orig"
#define REJEXT ".rej"

/* handy definitions */

#define strNE(s1,s2) (strcmp(s1, s2))
#define strEQ(s1,s2) (!strcmp(s1, s2))
#define strnNE(s1,s2,l) (strncmp(s1, s2, l))
#define strnEQ(s1,s2,l) (!strncmp(s1, s2, l))

/* typedefs */

typedef long    LINENUM;	/* must be signed */

/* globals */

extern mode_t	filemode;

extern char	buf[MAXLINELEN];/* general purpose buffer */

extern bool	using_plan_a;	/* try to keep everything in memory */
extern bool	out_of_mem;	/* ran out of memory in plan a */

#define MAXFILEC 2

extern char	*filearg[MAXFILEC];
extern bool	ok_to_create_file;
extern char	*outname;
extern char	*origprae;

extern char	*TMPOUTNAME;
extern char	*TMPINNAME;
extern char	*TMPREJNAME;
extern char	*TMPPATNAME;
extern bool	toutkeep;
extern bool	trejkeep;

#ifdef DEBUGGING
extern int	debug;
#endif

extern bool	force;
extern bool	batch;
extern bool	verbose;
extern bool	reverse;
extern bool	noreverse;
extern bool	skip_rest_of_patch;
extern int	strippath;
extern bool	canonicalize;
/* TRUE if -C was specified on command line.  */
extern bool	check_only;
extern bool	warn_on_invalid_line;
extern bool	last_line_missing_eol;


#define CONTEXT_DIFF 1
#define NORMAL_DIFF 2
#define ED_DIFF 3
#define NEW_CONTEXT_DIFF 4
#define UNI_DIFF 5

extern int	diff_type;
extern char	*revision;	/* prerequisite revision, if any */
extern LINENUM	input_lines;	/* how long is input file in lines */

extern int	posix;

@


1.28
log
@Introduce strtolinenum to properly check line numbers while parsing:
no signs, no spaces, just digits, 0 <= x <= LONG_MAX

ok millert, otto
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.27 2014/11/22 15:49:28 tobias Exp $	*/
a42 4

#define RCSSUFFIX ",v"
#define CHECKOUT "co -l %s"
#define RCSDIFF "rcsdiff %s > /dev/null"
@


1.28.2.1
log
@Backport commit of 2015-07-26 14:32 by millert

Remove support for automatically checking files out of RCS.  The
behavior is confusing to users and even GNU patch no longer does
it by default.  OK krw@@ guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.28 2014/11/25 10:26:07 tobias Exp $	*/
d43 4
@


1.27
log
@Remove SCCS support.  For this to work, we would need "get", which we don't
even have in ports.  XSI functionality of POSIX, therefore optional.

ok deraadt, schwarze, tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.26 2006/03/11 19:41:30 otto Exp $	*/
d31 1
d42 1
@


1.26
log
@type police and assorted cleanup. From Lionel Fourquaux; ok ray@@
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.25 2003/10/31 20:20:45 millert Exp $	*/
a40 4

#define SCCSPREFIX "s."
#define GET "get -e %s"
#define SCCSDIFF "get -p %s | diff - %s >/dev/null"
@


1.26.36.1
log
@Backport commit of 2014-11-22 15:49 by tobias:
Remove SCCS support.  For this to work, we would need "get", which we don't     even have in ports.  XSI functionality of POSIX, therefore optional.

ok deraadt, schwarze, tedu
----------------------------
Backport commit of 2015-07-26 14:32 by millert
Remove support for automatically checking files out of RCS.  The                behavior is confusing to users and even GNU patch no longer does
it by default.  OK krw@@ guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.26 2006/03/11 19:41:30 otto Exp $	*/
d41 8
@


1.25
log
@o fairly major man page reorganization
o add --posix option for strict POSIX conformance
o change filename determination to match GNU patch
Tested by various people, including a full ports build by naddy@@
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.24 2003/08/15 08:00:51 otto Exp $	*/
d29 2
d66 1
a66 1
extern int	filemode;
@


1.24
log
@Add license from patch.c to original source files missing a license.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.23 2003/08/10 21:28:48 otto Exp $	*/
d113 1
@


1.23
log
@Do not add an extra newline at the end if the last line of the input
file contains no newline and the diff does not touch the last line.
Contributions from millert@@.

ok millert@@ tedu@@
@
text
@d1 27
a27 1
/*	$OpenBSD: common.h,v 1.22 2003/08/01 20:30:48 otto Exp $	*/
@


1.22
log
@- use stdbool.h instead of roll-your-own booleans
- fix some -Wall warnings
- fix asserts: in some cases remove them, in other cases they have
become Internal errors or detection of malformed patch files.
- fix some free() related code

ok millert@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.21 2003/07/31 14:10:21 otto Exp $	*/
d74 1
@


1.21
log
@Print a maximum of one invalid line number warning per patch in a patch file.
Thanks to espie@@ for spotting the problem.

ok millert@@ henning@@ espie@@
@
text
@d1 3
a3 1
/*	$OpenBSD: common.h,v 1.20 2003/07/28 19:15:34 deraadt Exp $	*/
a8 3
#define TRUE	1
#define FALSE	0

a33 1
typedef char    bool;
@


1.20
log
@minor knf and cleanups; otto ok
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.19 2003/07/28 18:35:36 otto Exp $	*/
d75 1
@


1.19
log
@More cleanup: sprinkled some const, removed ugly EXTERN/INTERN.h,
some rewriting of code to make it more readable and more KNF.

ok millert@@ tedu@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.18 2003/07/22 21:50:21 millert Exp $	*/
d40 1
a40 1
extern int 	filemode;
@


1.18
log
@Missed this in the rejname commit.
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.17 2003/07/22 17:18:49 otto Exp $	*/
a4 2
#include <stdio.h>

d40 1
a40 11
EXT int         Argc;		/* guess */
EXT char      **Argv;
EXT int         Argc_last;	/* for restarting plan_b */
EXT char      **Argv_last;

EXT struct stat filestat;	/* file statistics area */
EXT int filemode INIT(0644);

EXT char        buf[MAXLINELEN];/* general purpose buffer */
EXT FILE       *ofp INIT(NULL);	/* output file pointer */
EXT FILE       *rejfp INIT(NULL);	/* reject file pointer */
d42 1
a42 1
EXT int         myuid;		/* cache getuid return value */
d44 2
a45 2
EXT bool using_plan_a INIT(TRUE);	/* try to keep everything in memory */
EXT bool out_of_mem INIT(FALSE);/* ran out of memory in plan a */
a47 15
EXT int filec   INIT(0);	/* how many file arguments? */
EXT char       *filearg[MAXFILEC];
EXT bool ok_to_create_file INIT(FALSE);
EXT char       *bestguess INIT(NULL);	/* guess at correct filename */

EXT char       *outname INIT(NULL);

EXT char       *origprae INIT(NULL);

EXT char       *TMPOUTNAME;
EXT char       *TMPINNAME;
EXT char       *TMPREJNAME;
EXT char       *TMPPATNAME;
EXT bool toutkeep INIT(FALSE);
EXT bool trejkeep INIT(FALSE);
d49 12
a60 1
EXT LINENUM last_offset INIT(0);
d62 1
a62 1
EXT int debug   INIT(0);
d64 9
a72 9
EXT LINENUM maxfuzz INIT(2);
EXT bool force  INIT(FALSE);
EXT bool batch  INIT(FALSE);
EXT bool verbose INIT(TRUE);
EXT bool reverse INIT(FALSE);
EXT bool noreverse INIT(FALSE);
EXT bool skip_rest_of_patch INIT(FALSE);
EXT int strippath INIT(957);
EXT bool canonicalize INIT(FALSE);
d74 1
a74 1
EXT bool check_only  INIT(FALSE);
a81 1
EXT int diff_type INIT(0);
d83 4
a86 5
EXT bool do_defines INIT(FALSE);/* patch using ifdef, ifndef, etc. */
EXT char        if_defined[128];/* #ifdef xyzzy */
EXT char        not_defined[128];	/* #ifndef xyzzy */
EXT char        else_defined[] INIT("#else\n");	/* #else */
EXT char        end_defined[128];	/* #endif xyzzy */
a87 1
EXT char       *revision INIT(NULL);	/* prerequisite revision, if any */
@


1.17
log
@More cleanup.
ok millert@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.16 2003/07/21 14:32:21 deraadt Exp $	*/
a65 1
EXT char        rejname[128];
@


1.16
log
@fix header
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.15 2003/07/21 14:30:31 deraadt Exp $	*/
a4 4
#include "config.h"

/* shut lint up about the following when return value ignored */

a5 14
#include <string.h>
#include <assert.h>
#include <sys/types.h>
#include <sys/file.h>
#include <sys/stat.h>
#include <sys/param.h>
#include <ctype.h>
#include <paths.h>
#include <signal.h>
#include <stdlib.h>
#include <unistd.h>
#include <stdarg.h>
#include <libgen.h>
#include <errno.h>
a29 7
#define Null(t) ((t)0)
#define Nullch Null(char *)
#define Nullfp Null(FILE *)
#define Nulline Null(LINENUM)

#define Ctl(ch) ((ch) & 037)

d51 2
a52 2
EXT FILE       *ofp INIT(Nullfp);	/* output file pointer */
EXT FILE       *rejfp INIT(Nullfp);	/* reject file pointer */
d63 1
a63 1
EXT char       *bestguess INIT(Nullch);	/* guess at correct filename */
d65 1
a65 1
EXT char       *outname INIT(Nullch);
d68 1
a68 1
EXT char       *origprae INIT(Nullch);
d90 3
d107 1
a107 1
EXT char       *revision INIT(Nullch);	/* prerequisite revision, if any */
@


1.15
log
@remove a bit more junk
@
text
@d1 1
a1 1
/* $OpenBSD: common.h,v 1.14 2003/07/21 14:00:41 deraadt Exp $ */
@


1.14
log
@knf and other cleanup; ok otto
@
text
@d1 1
a1 1
/* $OpenBSD: common.h,v 1.13 2003/07/18 02:00:09 deraadt Exp $ */
d27 2
a28 9
/* AIX predefines these.  */
#ifdef TRUE
#undef TRUE
#endif
#ifdef FALSE
#undef FALSE
#endif
#define TRUE (1)
#define FALSE (0)
a63 1
typedef unsigned MEM;		/* what to feed malloc */
a129 7

#if !defined(S_ISDIR) && defined(S_IFDIR)
#define	S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)
#endif
#if !defined(S_ISREG) && defined(S_IFREG)
#define	S_ISREG(m) (((m) & S_IFMT) == S_IFREG)
#endif
@


1.13
log
@remove junk; ok otto tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.12 2003/04/08 01:54:56 deraadt Exp $ */
d37 2
a38 2
#define MAXHUNKSIZE 100000		/* is this enough lines? */
#define INITHUNKMAX 125			/* initial dynamic allocation size */
d69 3
a71 3
typedef char bool;
typedef long LINENUM;			/* must be signed */
typedef unsigned MEM;			/* what to feed malloc */
d75 4
a78 4
EXT int Argc;				/* guess */
EXT char **Argv;
EXT int Argc_last;			/* for restarting plan_b */
EXT char **Argv_last;
d80 1
a80 1
EXT struct stat filestat;		/* file statistics area */
d83 3
a85 3
EXT char buf[MAXLINELEN];		/* general purpose buffer */
EXT FILE *ofp INIT(Nullfp);		/* output file pointer */
EXT FILE *rejfp INIT(Nullfp);		/* reject file pointer */
d87 1
a87 1
EXT int myuid;				/* cache getuid return value */
d90 1
a90 1
EXT bool out_of_mem INIT(FALSE);	/* ran out of memory in plan a */
d93 2
a94 2
EXT int filec INIT(0);			/* how many file arguments? */
EXT char *filearg[MAXFILEC];
d96 1
a96 1
EXT char *bestguess INIT(Nullch);	/* guess at correct filename */
d98 2
a99 2
EXT char *outname INIT(Nullch);
EXT char rejname[128];
d101 1
a101 1
EXT char *origprae INIT(Nullch);
d103 4
a106 4
EXT char *TMPOUTNAME;
EXT char *TMPINNAME;
EXT char *TMPREJNAME;
EXT char *TMPPATNAME;
d112 1
a112 1
EXT int debug INIT(0);
d115 2
a116 2
EXT bool force INIT(FALSE);
EXT bool batch INIT(FALSE);
d131 5
a135 5
EXT bool do_defines INIT(FALSE);	/* patch using ifdef, ifndef, etc. */
EXT char if_defined[128];		/* #ifdef xyzzy */
EXT char not_defined[128];		/* #ifndef xyzzy */
EXT char else_defined[] INIT("#else\n");/* #else */
EXT char end_defined[128];		/* #endif xyzzy */
d137 1
a137 1
EXT char *revision INIT(Nullch);	/* prerequisite revision, if any */
@


1.12
log
@oh, and the false protos can go
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.11 2003/04/08 01:54:26 deraadt Exp $ */
a4 1
#define VOIDUSED 7
a8 15
#define Signal (void)signal
#define Unlink (void)unlink
#define Lseek (void)lseek
#define Fseek (void)fseek
#define Fstat (void)fstat
#define Pclose (void)pclose
#define Close (void)close
#define Fclose (void)fclose
#define Fflush (void)fflush
#define Snprintf (void)snprintf

/* NeXT declares malloc and realloc incompatibly from us in some of
   these files.  Temporarily redefine them to prevent errors.  */
#define malloc system_malloc
#define realloc system_realloc
d21 1
d23 1
a23 2
#undef malloc
#undef realloc
a49 1
#ifdef FLEXFILENAMES
a51 4
#else
#define ORIGEXT "~"
#define REJEXT "#"
#endif
a137 20

#include <errno.h>
#ifndef errno
extern int errno;
#endif

FILE *popen();
char *malloc();
char *realloc();
long atol();
char *getenv();
char *strrchr();
int  mkstemp();
#if 0				/* This can cause a prototype conflict.  */
#ifdef CHARSPRINTF
char *snprintf();
#else
int snprintf();
#endif
#endif
@


1.11
log
@Strcat and Strcpy are no longer used
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.10 1999/01/03 05:33:48 millert Exp $ */
a169 2
char *strcpy();
char *strcat();
@


1.10
log
@Use libc basename(3) and dirname(3) instead of defining our own.  Also clean up some nasty assumptions that basename() returns a pointer that lies within its argument
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.9 1997/09/22 05:45:26 millert Exp $ */
a19 2
#define Strcpy (void)strcpy
#define Strcat (void)strcat
@


1.9
log
@Start of -Wall and cleaning up icky bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.8 1997/09/06 23:51:31 niklas Exp $ */
d39 1
@


1.8
log
@I hate static buffer sizes!  Prolongue the max length of a line to 8K
(from 1K which a patch in ports/print/ghostscript5 had a line longer than).
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.7 1997/06/24 02:33:48 dgregor Exp $ */
d33 1
d35 1
d38 1
@


1.7
log
@*** empty log message ***
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.6 1997/01/17 15:47:51 millert Exp $ */
d53 1
a53 1
#define MAXLINELEN 1024
@


1.6
log
@rindex -> strrchr
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.5 1996/09/24 04:19:25 millert Exp $ */
d35 1
@


1.5
log
@sprintf -> snprintf except where guaranteed safe.
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.4 1996/09/24 02:58:53 millert Exp $ */
d169 1
a169 1
char *rindex();
@


1.4
log
@Use mkstemp().  Since temp files get re-used we use mkstemp() to make
us a "place holder" (and discard the fd) to protect from DOS attacks
and then just re-use that.
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.3 1996/06/25 23:06:36 deraadt Exp $ */
d19 1
a19 1
#define Sprintf (void)sprintf
a84 2
#define Mkstemp mkstemp

d173 1
a173 1
char *sprintf();
d175 1
a175 1
int sprintf();
@


1.3
log
@mktemp w/ open & fdopen
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.2 1996/06/10 11:21:26 niklas Exp $ */
a19 1
#define Mktemp (void)mktemp
d85 2
d172 1
a172 1
char *mktemp();
@


1.2
log
@Support the long options that FSF's patch version has.  $OpenBSD$ added
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.1.1.1 1995/10/18 08:45:55 deraadt Exp $ */
d32 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$Id: common.h,v 1.4 1994/12/24 17:30:18 cgd Exp $ */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
