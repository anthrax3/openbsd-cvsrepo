head	1.65;
access;
symbols
	OPENBSD_6_1:1.65.0.6
	OPENBSD_6_1_BASE:1.65
	OPENBSD_6_0:1.65.0.4
	OPENBSD_6_0_BASE:1.65
	OPENBSD_5_9:1.65.0.2
	OPENBSD_5_9_BASE:1.65
	OPENBSD_5_8:1.59.0.4
	OPENBSD_5_8_BASE:1.59
	OPENBSD_5_7:1.58.0.2
	OPENBSD_5_7_BASE:1.58
	OPENBSD_5_6:1.57.0.20
	OPENBSD_5_6_BASE:1.57
	OPENBSD_5_5:1.57.0.18
	OPENBSD_5_5_BASE:1.57
	OPENBSD_5_4:1.57.0.14
	OPENBSD_5_4_BASE:1.57
	OPENBSD_5_3:1.57.0.12
	OPENBSD_5_3_BASE:1.57
	OPENBSD_5_2:1.57.0.10
	OPENBSD_5_2_BASE:1.57
	OPENBSD_5_1_BASE:1.57
	OPENBSD_5_1:1.57.0.8
	OPENBSD_5_0:1.57.0.6
	OPENBSD_5_0_BASE:1.57
	OPENBSD_4_9:1.57.0.4
	OPENBSD_4_9_BASE:1.57
	OPENBSD_4_8:1.57.0.2
	OPENBSD_4_8_BASE:1.57
	OPENBSD_4_7:1.56.0.2
	OPENBSD_4_7_BASE:1.56
	OPENBSD_4_6:1.53.0.4
	OPENBSD_4_6_BASE:1.53
	OPENBSD_4_5:1.50.0.8
	OPENBSD_4_5_BASE:1.50
	OPENBSD_4_4:1.50.0.6
	OPENBSD_4_4_BASE:1.50
	OPENBSD_4_3:1.50.0.4
	OPENBSD_4_3_BASE:1.50
	OPENBSD_4_2:1.50.0.2
	OPENBSD_4_2_BASE:1.50
	OPENBSD_4_1:1.49.0.2
	OPENBSD_4_1_BASE:1.49
	OPENBSD_4_0:1.48.0.8
	OPENBSD_4_0_BASE:1.48
	OPENBSD_3_9:1.48.0.6
	OPENBSD_3_9_BASE:1.48
	OPENBSD_3_8:1.48.0.4
	OPENBSD_3_8_BASE:1.48
	OPENBSD_3_7:1.48.0.2
	OPENBSD_3_7_BASE:1.48
	OPENBSD_3_6:1.46.0.2
	OPENBSD_3_6_BASE:1.46
	OPENBSD_3_5:1.45.0.2
	OPENBSD_3_5_BASE:1.45
	OPENBSD_3_4:1.42.0.2
	OPENBSD_3_4_BASE:1.42;
locks; strict;
comment	@ * @;


1.65
date	2015.12.29.19.04.46;	author gsoares;	state Exp;
branches;
next	1.64;
commitid	k2UzU75zoPNqkN7K;

1.64
date	2015.10.26.12.52.27;	author tedu;	state Exp;
branches;
next	1.63;
commitid	iT29VK1nO9sccs6J;

1.63
date	2015.10.09.01.37.07;	author deraadt;	state Exp;
branches;
next	1.62;
commitid	sbrB3Q5CNxcwZpfU;

1.62
date	2015.10.05.20.15.00;	author millert;	state Exp;
branches;
next	1.61;
commitid	ploPtaulyei0HJ2S;

1.61
date	2015.10.05.15.42.54;	author semarie;	state Exp;
branches;
next	1.60;
commitid	JQSltXRWNTnJy4dm;

1.60
date	2015.10.05.15.16.23;	author deraadt;	state Exp;
branches;
next	1.59;
commitid	Zxtsj93XnoeGJvwQ;

1.59
date	2015.04.29.04.00.25;	author deraadt;	state Exp;
branches;
next	1.58;
commitid	bgNifxVaPtXhk3GY;

1.58
date	2015.01.16.06.40.07;	author deraadt;	state Exp;
branches;
next	1.57;
commitid	Uu5nFG3wCl0LACBb;

1.57
date	2010.07.16.23.27.58;	author ray;	state Exp;
branches;
next	1.56;

1.56
date	2010.02.21.15.24.01;	author sobrado;	state Exp;
branches;
next	1.55;

1.55
date	2009.11.09.13.34.59;	author sobrado;	state Exp;
branches;
next	1.54;

1.54
date	2009.10.27.23.59.37;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	2009.06.07.08.39.13;	author ray;	state Exp;
branches;
next	1.52;

1.52
date	2009.06.06.15.37.28;	author ray;	state Exp;
branches;
next	1.51;

1.51
date	2009.06.06.15.00.27;	author ray;	state Exp;
branches;
next	1.50;

1.50
date	2007.05.29.18.24.56;	author ray;	state Exp;
branches;
next	1.49;

1.49
date	2007.03.01.21.48.32;	author jmc;	state Exp;
branches;
next	1.48;

1.48
date	2004.12.09.18.56.10;	author millert;	state Exp;
branches;
next	1.47;

1.47
date	2004.12.07.11.53.29;	author espie;	state Exp;
branches;
next	1.46;

1.46
date	2004.06.20.18.47.45;	author otto;	state Exp;
branches;
next	1.45;

1.45
date	2004.03.16.00.40.34;	author millert;	state Exp;
branches;
next	1.44;

1.44
date	2004.01.07.17.18.32;	author otto;	state Exp;
branches;
next	1.43;

1.43
date	2003.10.07.23.37.27;	author millert;	state Exp;
branches;
next	1.42;

1.42
date	2003.09.07.22.05.30;	author millert;	state Exp;
branches;
next	1.41;

1.41
date	2003.09.07.18.50.58;	author jmc;	state Exp;
branches;
next	1.40;

1.40
date	2003.09.07.18.16.02;	author tedu;	state Exp;
branches;
next	1.39;

1.39
date	2003.09.06.05.25.22;	author tedu;	state Exp;
branches;
next	1.38;

1.38
date	2003.08.18.02.04.42;	author david;	state Exp;
branches;
next	1.37;

1.37
date	2003.07.29.18.38.47;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	2003.07.27.18.45.55;	author millert;	state Exp;
branches;
next	1.35;

1.35
date	2003.07.27.07.39.52;	author otto;	state Exp;
branches;
next	1.34;

1.34
date	2003.07.22.16.42.58;	author millert;	state Exp;
branches;
next	1.33;

1.33
date	2003.07.22.01.16.01;	author millert;	state Exp;
branches;
next	1.32;

1.32
date	2003.07.21.23.02.35;	author millert;	state Exp;
branches;
next	1.31;

1.31
date	2003.07.21.22.57.16;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	2003.07.21.21.59.58;	author henning;	state Exp;
branches;
next	1.29;

1.29
date	2003.07.21.21.57.22;	author millert;	state Exp;
branches;
next	1.28;

1.28
date	2003.07.09.00.39.25;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	2003.07.09.00.07.44;	author millert;	state Exp;
branches;
next	1.26;

1.26
date	2003.07.08.04.45.32;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2003.07.06.22.17.21;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	2003.07.06.22.02.36;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2003.07.06.20.48.59;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	2003.07.04.17.52.35;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	2003.07.04.17.50.24;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2003.07.04.17.37.07;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2003.07.04.02.54.36;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2003.06.27.17.08.45;	author david;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.26.22.04.45;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.26.21.03.08;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.26.18.19.29;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.26.07.20.12;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.26.04.52.26;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.26.00.20.48;	author tedu;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.25.23.04.53;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.25.22.22.34;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.25.22.14.43;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.25.21.43.49;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.25.19.56.57;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.25.17.49.22;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.25.07.26.59;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.25.03.37.32;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.25.03.02.33;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.25.01.23.38;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2003.06.25.01.20.52;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.65
log
@fix exit status on pledge(2) failure.

OK tb@@ jsg@@
@
text
@/*	$OpenBSD: diff.c,v 1.64 2015/10/26 12:52:27 tedu Exp $	*/

/*
 * Copyright (c) 2003 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F39502-99-1-0512.
 */

#include <sys/stat.h>

#include <ctype.h>
#include <err.h>
#include <errno.h>
#include <getopt.h>
#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>
#include <unistd.h>
#include <limits.h>

#include "diff.h"
#include "xmalloc.h"

int	 Nflag, Pflag, rflag, sflag, Tflag;
int	 diff_format, diff_context, status;
char	*start, *ifdefname, *diffargs, *label[2], *ignore_pats;
struct stat stb1, stb2;
struct excludes *excludes_list;
regex_t	 ignore_re;

#define	OPTIONS	"0123456789abC:cdD:efhI:iL:lnNPpqrS:sTtU:uwX:x:"
static struct option longopts[] = {
	{ "text",			no_argument,		0,	'a' },
	{ "ignore-space-change",	no_argument,		0,	'b' },
	{ "context",			optional_argument,	0,	'C' },
	{ "ifdef",			required_argument,	0,	'D' },
	{ "minimal",			no_argument,		0,	'd' },
	{ "ed",				no_argument,		0,	'e' },
	{ "forward-ed",			no_argument,		0,	'f' },
	{ "ignore-matching-lines",	required_argument,	0,	'I' },
	{ "ignore-case",		no_argument,		0,	'i' },
	{ "label",			required_argument,	0,	'L' },
	{ "new-file",			no_argument,		0,	'N' },
	{ "rcs",			no_argument,		0,	'n' },
	{ "unidirectional-new-file",	no_argument,		0,	'P' },
	{ "show-c-function",		no_argument,		0,	'p' },
	{ "brief",			no_argument,		0,	'q' },
	{ "recursive",			no_argument,		0,	'r' },
	{ "report-identical-files",	no_argument,		0,	's' },
	{ "starting-file",		required_argument,	0,	'S' },
	{ "expand-tabs",		no_argument,		0,	't' },
	{ "initial-tab",		no_argument,		0,	'T' },
	{ "unified",			optional_argument,	0,	'U' },
	{ "ignore-all-space",		no_argument,		0,	'w' },
	{ "exclude",			required_argument,	0,	'x' },
	{ "exclude-from",		required_argument,	0,	'X' },
	{ NULL,				0,			0,	'\0'}
};

__dead void usage(void);
void push_excludes(char *);
void push_ignore_pats(char *);
void read_excludes_file(char *file);
void set_argstr(char **, char **);

int
main(int argc, char **argv)
{
	char *ep, **oargv;
	long  l;
	int   ch, dflags, lastch, gotstdin, prevoptind, newarg;

	oargv = argv;
	gotstdin = 0;
	dflags = 0;
	lastch = '\0';
	prevoptind = 1;
	newarg = 1;
	while ((ch = getopt_long(argc, argv, OPTIONS, longopts, NULL)) != -1) {
		switch (ch) {
		case '0': case '1': case '2': case '3': case '4':
		case '5': case '6': case '7': case '8': case '9':
			if (newarg)
				usage();	/* disallow -[0-9]+ */
			else if (lastch == 'c' || lastch == 'u')
				diff_context = 0;
			else if (!isdigit(lastch) || diff_context > INT_MAX / 10)
				usage();
			diff_context = (diff_context * 10) + (ch - '0');
			break;
		case 'a':
			dflags |= D_FORCEASCII;
			break;
		case 'b':
			dflags |= D_FOLDBLANKS;
			break;
		case 'C':
		case 'c':
			diff_format = D_CONTEXT;
			if (optarg != NULL) {
				l = strtol(optarg, &ep, 10);
				if (*ep != '\0' || l < 0 || l >= INT_MAX)
					usage();
				diff_context = (int)l;
			} else
				diff_context = 3;
			break;
		case 'd':
			dflags |= D_MINIMAL;
			break;
		case 'D':
			diff_format = D_IFDEF;
			ifdefname = optarg;
			break;
		case 'e':
			diff_format = D_EDIT;
			break;
		case 'f':
			diff_format = D_REVERSE;
			break;
		case 'h':
			/* silently ignore for backwards compatibility */
			break;
		case 'I':
			push_ignore_pats(optarg);
			break;
		case 'i':
			dflags |= D_IGNORECASE;
			break;
		case 'L':
			if (label[0] == NULL)
				label[0] = optarg;
			else if (label[1] == NULL)
				label[1] = optarg;
			else
				usage();
			break;
		case 'N':
			Nflag = 1;
			break;
		case 'n':
			diff_format = D_NREVERSE;
			break;
		case 'p':
			dflags |= D_PROTOTYPE;
			break;
		case 'P':
			Pflag = 1;
			break;
		case 'r':
			rflag = 1;
			break;
		case 'q':
			diff_format = D_BRIEF;
			break;
		case 'S':
			start = optarg;
			break;
		case 's':
			sflag = 1;
			break;
		case 'T':
			Tflag = 1;
			break;
		case 't':
			dflags |= D_EXPANDTABS;
			break;
		case 'U':
		case 'u':
			diff_format = D_UNIFIED;
			if (optarg != NULL) {
				l = strtol(optarg, &ep, 10);
				if (*ep != '\0' || l < 0 || l >= INT_MAX)
					usage();
				diff_context = (int)l;
			} else
				diff_context = 3;
			break;
		case 'w':
			dflags |= D_IGNOREBLANKS;
			break;
		case 'X':
			read_excludes_file(optarg);
			break;
		case 'x':
			push_excludes(optarg);
			break;
		default:
			usage();
			break;
		}
		lastch = ch;
		newarg = optind != prevoptind;
		prevoptind = optind;
	}
	argc -= optind;
	argv += optind;

	if (pledge("stdio rpath tmppath", NULL) == -1)
		err(2, "pledge");

	/*
	 * Do sanity checks, fill in stb1 and stb2 and call the appropriate
	 * driver routine.  Both drivers use the contents of stb1 and stb2.
	 */
	if (argc != 2)
		usage();
	if (ignore_pats != NULL) {
		char buf[BUFSIZ];
		int error;

		if ((error = regcomp(&ignore_re, ignore_pats,
				     REG_NEWLINE | REG_EXTENDED)) != 0) {
			regerror(error, &ignore_re, buf, sizeof(buf));
			if (*ignore_pats != '\0')
				errx(2, "%s: %s", ignore_pats, buf);
			else
				errx(2, "%s", buf);
		}
	}
	if (strcmp(argv[0], "-") == 0) {
		fstat(STDIN_FILENO, &stb1);
		gotstdin = 1;
	} else if (stat(argv[0], &stb1) != 0)
		err(2, "%s", argv[0]);
	if (strcmp(argv[1], "-") == 0) {
		fstat(STDIN_FILENO, &stb2);
		gotstdin = 1;
	} else if (stat(argv[1], &stb2) != 0)
		err(2, "%s", argv[1]);
	if (gotstdin && (S_ISDIR(stb1.st_mode) || S_ISDIR(stb2.st_mode)))
		errx(2, "can't compare - to a directory");
	set_argstr(oargv, argv);
	if (S_ISDIR(stb1.st_mode) && S_ISDIR(stb2.st_mode)) {
		if (diff_format == D_IFDEF)
			errx(2, "-D option not supported with directories");
		diffdir(argv[0], argv[1], dflags);
	} else {
		if (S_ISDIR(stb1.st_mode)) {
			argv[0] = splice(argv[0], argv[1]);
			if (stat(argv[0], &stb1) < 0)
				err(2, "%s", argv[0]);
		}
		if (S_ISDIR(stb2.st_mode)) {
			argv[1] = splice(argv[1], argv[0]);
			if (stat(argv[1], &stb2) < 0)
				err(2, "%s", argv[1]);
		}
		print_status(diffreg(argv[0], argv[1], dflags), argv[0], argv[1],
		    "");
	}
	exit(status);
}

void
set_argstr(char **av, char **ave)
{
	size_t argsize;
	char **ap;

	argsize = 4 + *ave - *av + 1;
	diffargs = xmalloc(argsize);
	strlcpy(diffargs, "diff", argsize);
	for (ap = av + 1; ap < ave; ap++) {
		if (strcmp(*ap, "--") != 0) {
			strlcat(diffargs, " ", argsize);
			strlcat(diffargs, *ap, argsize);
		}
	}
}

/*
 * Read in an excludes file and push each line.
 */
void
read_excludes_file(char *file)
{
	FILE *fp;
	char *buf, *pattern;
	size_t len;

	if (strcmp(file, "-") == 0)
		fp = stdin;
	else if ((fp = fopen(file, "r")) == NULL)
		err(2, "%s", file);
	while ((buf = fgetln(fp, &len)) != NULL) {
		if (buf[len - 1] == '\n')
			len--;
		pattern = xmalloc(len + 1);
		memcpy(pattern, buf, len);
		pattern[len] = '\0';
		push_excludes(pattern);
	}
	if (strcmp(file, "-") != 0)
		fclose(fp);
}

/*
 * Push a pattern onto the excludes list.
 */
void
push_excludes(char *pattern)
{
	struct excludes *entry;

	entry = xmalloc(sizeof(*entry));
	entry->pattern = pattern;
	entry->next = excludes_list;
	excludes_list = entry;
}

void
push_ignore_pats(char *pattern)
{
	size_t len;

	if (ignore_pats == NULL)
		ignore_pats = xstrdup(pattern);
	else {
		/* old + "|" + new + NUL */
		len = strlen(ignore_pats) + strlen(pattern) + 2;
		ignore_pats = xreallocarray(ignore_pats, 1, len);
		strlcat(ignore_pats, "|", len);
		strlcat(ignore_pats, pattern, len);
	}
}

void
print_only(const char *path, size_t dirlen, const char *entry)
{
	if (dirlen > 1)
		dirlen--;
	printf("Only in %.*s: %s\n", (int)dirlen, path, entry);
}

void
print_status(int val, char *path1, char *path2, char *entry)
{
	switch (val) {
	case D_BINARY:
		printf("Binary files %s%s and %s%s differ\n",
		    path1, entry, path2, entry);
		break;
	case D_DIFFER:
		if (diff_format == D_BRIEF)
			printf("Files %s%s and %s%s differ\n",
			    path1, entry, path2, entry);
		break;
	case D_SAME:
		if (sflag)
			printf("Files %s%s and %s%s are identical\n",
			    path1, entry, path2, entry);
		break;
	case D_MISMATCH1:
		printf("File %s%s is a directory while file %s%s is a regular file\n",
		    path1, entry, path2, entry);
		break;
	case D_MISMATCH2:
		printf("File %s%s is a regular file while file %s%s is a directory\n",
		    path1, entry, path2, entry);
		break;
	case D_SKIPPED1:
		printf("File %s%s is not a regular file or directory and was skipped\n",
		    path1, entry);
		break;
	case D_SKIPPED2:
		printf("File %s%s is not a regular file or directory and was skipped\n",
		    path2, entry);
		break;
	}
}

__dead void
usage(void)
{
	(void)fprintf(stderr,
	    "usage: diff [-abdipTtw] [-c | -e | -f | -n | -q | -u] [-I pattern] [-L label]\n"
	    "            file1 file2\n"
	    "       diff [-abdipTtw] [-I pattern] [-L label] -C number file1 file2\n"
	    "       diff [-abditw] [-I pattern] -D string file1 file2\n"
	    "       diff [-abdipTtw] [-I pattern] [-L label] -U number file1 file2\n"
	    "       diff [-abdiNPprsTtw] [-c | -e | -f | -n | -q | -u] [-I pattern]\n"
	    "            [-L label] [-S name] [-X file] [-x pattern] dir1 dir2\n");

	exit(2);
}
@


1.64
log
@remove TMPDIR support. ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.63 2015/10/09 01:37:07 deraadt Exp $	*/
d215 1
a215 1
		err(1, "pledge");
@


1.63
log
@Change all tame callers to namechange to pledge(2).
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.62 2015/10/05 20:15:00 millert Exp $	*/
d214 2
a215 7
	if (getenv("TMPDIR")) {
		if (pledge("stdio rpath wpath cpath", NULL) == -1)
			err(1, "pledge");
	} else {
		if (pledge("stdio rpath tmppath", NULL) == -1)
			err(1, "pledge");
	}
@


1.62
log
@Remove the non-standard -l flag that pipes the output through pr(1).
Based on a diff from and OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.61 2015/10/05 15:42:54 semarie Exp $	*/
d215 2
a216 2
		if (tame("stdio rpath wpath cpath", NULL) == -1)
			err(1, "tame");
d218 2
a219 2
		if (tame("stdio rpath tmppath", NULL) == -1)
			err(1, "tame");
@


1.61
log
@use different tame requests if TMPDIR is in env:
- tmppath for when mktemp() operates in /tmp proper
- cpath+wpath for use of $TMPDIR

based on log-message from previous commit

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.60 2015/10/05 15:16:23 deraadt Exp $	*/
a28 1
#include <signal.h>
d39 1
a39 1
int	 lflag, Nflag, Pflag, rflag, sflag, Tflag;
a56 1
	{ "paginate",			no_argument,		0,	'l' },
a152 4
		case 'l':
			lflag = 1;
			signal(SIGPIPE, SIG_IGN);
			break;
d214 6
a219 8
	if (lflag == 0) {
		if (getenv("TMPDIR")) {
			if (tame("stdio rpath wpath cpath", NULL) == -1)
				err(1, "tame");
		} else {
			if (tame("stdio rpath tmppath", NULL) == -1)
				err(1, "tame");
		}
d221 1
a359 7
	case D_ONLY:
		print_only(path1, strlen(path1), entry);
		break;
	case D_COMMON:
		printf("Common subdirectories: %s%s and %s%s\n",
		    path1, entry, path2, entry);
		break;
d397 1
a397 1
	    "usage: diff [-abdilpTtw] [-c | -e | -f | -n | -q | -u] [-I pattern] [-L label]\n"
d399 4
a402 4
	    "       diff [-abdilpTtw] [-I pattern] [-L label] -C number file1 file2\n"
	    "       diff [-abdiltw] [-I pattern] -D string file1 file2\n"
	    "       diff [-abdilpTtw] [-I pattern] [-L label] -U number file1 file2\n"
	    "       diff [-abdilNPprsTtw] [-c | -e | -f | -n | -q | -u] [-I pattern]\n"
@


1.60
log
@If the -l flag is set, diff will fork/execve pr on a pipe.  But other
uses can tame "stdio wpath rpath cpath tmppath".  tmppath for when
mktemp() operates in /tmp proper, but cpath+wpath for use of $TMPDIR.
ok sthen millert
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.59 2015/04/29 04:00:25 deraadt Exp $	*/
d221 7
a227 2
		if (tame("stdio wpath rpath cpath tmppath", NULL) == -1)
			err(1, "tame");
@


1.59
log
@Change internal xrealloc() to a idiom-following xreallocarray().
This loses a "new size is 0" failure case.  Probably not relevant;
and since we develop this in OpenBSD, we'll catch that before someone
else imports this...
ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.58 2015/01/16 06:40:07 deraadt Exp $	*/
d220 4
@


1.58
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.57 2010/07/16 23:27:58 ray Exp $	*/
d340 1
a340 1
		ignore_pats = xrealloc(ignore_pats, 1, len);
@


1.57
log
@Simplify print_status by removing NULL handling.

OK nicm
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.56 2010/02/21 15:24:01 sobrado Exp $	*/
a22 1
#include <sys/param.h>
d35 1
@


1.56
log
@`-q' is an output option, hence it is mutually exclusive.

ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.55 2009/11/09 13:34:59 sobrado Exp $	*/
d268 1
a268 1
		    NULL);
d363 1
a363 1
		    path1, entry ? entry : "", path2, entry ? entry : "");
d367 1
a367 1
		    path1, entry ? entry : "", path2, entry ? entry : "");
d372 1
a372 2
			    path1, entry ? entry : "",
			    path2, entry ? entry : "");
d377 1
a377 2
			    path1, entry ? entry : "",
			    path2, entry ? entry : "");
d381 1
a381 1
		    path1, entry ? entry : "", path2, entry ? entry : "");
d385 1
a385 1
		    path1, entry ? entry : "", path2, entry ? entry : "");
d389 1
a389 1
		    path1, entry ? entry : "");
d393 1
a393 1
		    path2, entry ? entry : "");
@


1.55
log
@move mutually exclusive options (-c, -e, -f, -n and -u) to the right place.

ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.54 2009/10/27 23:59:37 deraadt Exp $	*/
d404 7
a410 7
	    "usage: diff [-abdilpqTtw] [-c | -e | -f | -n | -u] [-I pattern] [-L label] file1\n"
	    "            file2\n"
	    "       diff [-abdilpqTtw] [-I pattern] [-L label] -C number file1 file2\n"
	    "       diff [-abdilqtw] [-I pattern] -D string file1 file2\n"
	    "       diff [-abdilpqTtw] [-I pattern] [-L label] -U number file1 file2\n"
	    "       diff [-abdilNPpqrsTtw] [-c | -e | -f | -n | -u] [-I pattern] [-L label]\n"
	    "            [-S name] [-X file] [-x pattern] dir1 dir2\n");
@


1.54
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.53 2009/06/07 08:39:13 ray Exp $	*/
d404 2
a405 2
	    "usage: diff [-abdilpqTtw] [-I pattern] [-c | -e | -f | -n | -u]\n"
	    "            [-L label] file1 file2\n"
d409 2
a410 2
	    "       diff [-abdilNPpqrsTtw] [-I pattern] [-c | -e | -f | -n | -u]\n"
	    "            [-L label] [-S name] [-X file] [-x pattern] dir1 dir2\n");
@


1.53
log
@More cvs/diff/rcs convergence:
1. Mostly variable/function renaming, SIZE_T_MAX->SIZE_MAX, and
spacing.
2. One strchr -> strncspn.
3. diff had a weird thing where it set file[12] = ofile[12] but
never updated file or ofile, then if file and ofile were different
it freed it. I removed it.

OK millert
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.52 2009/06/06 15:37:28 ray Exp $	*/
a21 4

#ifndef lint
static const char rcsid[] = "$OpenBSD: diff.c,v 1.52 2009/06/06 15:37:28 ray Exp $";
#endif /* not lint */
@


1.52
log
@Oops, forgot to pass dflags to diffreg. Now the flags work again.

OK millert
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.51 2009/06/06 15:00:27 ray Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.51 2009/06/06 15:00:27 ray Exp $";
d45 1
a45 1
int	 format, context, status;
d107 2
a108 2
				context = 0;
			else if (!isdigit(lastch) || context > INT_MAX / 10)
d110 1
a110 1
			context = (context * 10) + (ch - '0');
d120 1
a120 1
			format = D_CONTEXT;
d125 1
a125 1
				context = (int)l;
d127 1
a127 1
				context = 3;
d133 1
a133 1
			format = D_IFDEF;
d137 1
a137 1
			format = D_EDIT;
d140 1
a140 1
			format = D_REVERSE;
d167 1
a167 1
			format = D_NREVERSE;
d179 1
a179 1
			format = D_BRIEF;
d195 1
a195 1
			format = D_UNIFIED;
d200 1
a200 1
				context = (int)l;
d202 1
a202 1
				context = 3;
d257 1
a257 1
		if (format == D_IFDEF)
d374 1
a374 1
		if (format == D_BRIEF)
@


1.51
log
@Pull changes from rcsdiff, similar to what was pulled into cvsdiff.

OK millert
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.50 2007/05/29 18:24:56 ray Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.50 2007/05/29 18:24:56 ray Exp $";
d259 1
a259 1
		diffdir(argv[0], argv[1]);
d271 1
a271 1
		print_status(diffreg(argv[0], argv[1], 0), argv[0], argv[1],
@


1.50
log
@Bring in some changes from rcsdiff:
1. Replace all the e*alloc functions with the x*alloc versions.
2. Whitespace syncs according to style.
3. Remove the __inline stuff.
4. Remove the min/max functions, using the MAX/MIN macros instead.

OK millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.49 2007/03/01 21:48:32 jmc Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.49 2007/03/01 21:48:32 jmc Exp $";
d44 1
a44 2
int	 aflag, bflag, dflag, iflag, lflag, Nflag, Pflag, pflag, rflag;
int	 sflag, tflag, Tflag, wflag;
d92 1
a92 1
	int   ch, lastch, gotstdin, prevoptind, newarg;
d96 1
a96 1

d113 1
a113 1
			aflag = 1;
d116 1
a116 1
			bflag = 1;
d130 1
a130 1
			dflag = 1;
d149 1
a149 1
			iflag = 1;
d170 1
a170 1
			pflag = 1;
d191 1
a191 1
			tflag = 1;
d205 1
a205 1
			wflag = 1;
@


1.49
log
@sort options/synopsis/usage();
from Igor Sobrado
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.48 2004/12/09 18:56:10 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.48 2004/12/09 18:56:10 millert Exp $";
d42 1
a277 35
void *
emalloc(size_t n)
{
	void *p;

	if ((p = malloc(n)) == NULL)
		err(2, NULL);
	return (p);
}

void *
erealloc(void *p, size_t n)
{
	void *q;

	if ((q = realloc(p, n)) == NULL)
		err(2, NULL);
	return (q);
}

int
easprintf(char **ret, const char *fmt, ...)
{
	int len;
	va_list ap;

	va_start(ap, fmt);
	len = vasprintf(ret, fmt, ap);
	va_end(ap);

	if (len == -1)
		err(2, NULL);
	return (len);
}

d285 1
a285 1
	diffargs = emalloc(argsize);
d312 1
a312 1
		pattern = emalloc(len + 1);
d329 1
a329 1
	entry = emalloc(sizeof(*entry));
d340 3
a342 6
	if (ignore_pats == NULL) {
		/* XXX: estrdup */
		len = strlen(pattern) + 1;
		ignore_pats = emalloc(len);
		strlcpy(ignore_pats, pattern, len);
	} else {
d345 1
a345 1
		ignore_pats = erealloc(ignore_pats, len);
@


1.48
log
@If the -L option is specified twice, use it for the second filename
like GNU diff does.  Adapted from a diff by YAMAMOTO Takashi
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.47 2004/12/07 11:53:29 espie Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.47 2004/12/07 11:53:29 espie Exp $";
d446 1
a446 1
	    "usage: diff [-abdilpqtTw] [-I pattern] [-c | -e | -f | -n | -u]\n"
d448 1
a448 1
	    "       diff [-abdilpqtTw] [-I pattern] [-L label] -C number file1 file2\n"
d450 3
a452 4
	    "       diff [-abdilpqtTw] [-I pattern] [-L label] -U number file1 file2\n"
	    "       diff [-abdilNPpqtTw] [-I pattern] [-c | -e | -f | -n | -u]\n"
	    "            [-L label] [-r] [-s] [-S name] [-X file] [-x pattern] dir1\n"
	    "            dir2\n");
@


1.47
log
@advancing argv twice doesn't make it better.
okay otto@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.46 2004/06/20 18:47:45 otto Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.46 2004/06/20 18:47:45 otto Exp $";
d46 1
a46 1
char	*start, *ifdefname, *diffargs, *label, *ignore_pats;
d152 6
a157 1
			label = optarg;
@


1.46
log
@Implement -I option: ignore changes matching a set of regexes.  From
Jared Yanovich, with twists from millert@@ and me. Testing by brad@@,
sturm@@ and pval@@. ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.45 2004/03/16 00:40:34 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.45 2004/03/16 00:40:34 millert Exp $";
d250 1
a250 1
	set_argstr(oargv + 1, argv);
@


1.45
log
@POSIX specifies that in directory mode device special files and
FIFOs shall be skipped.  Other types of files may be skipped too
(this is implementation-dependent).  In directory mode, just skip
anything that is not a regular file or directory.  OK tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.44 2004/01/07 17:18:32 otto Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.44 2004/01/07 17:18:32 otto Exp $";
d46 1
a46 1
char	*start, *ifdefname, *diffargs, *label;
d49 1
d51 1
a51 1
#define	OPTIONS	"0123456789abC:cdD:efhiL:lnNPpqrS:sTtU:uwX:x:"
d60 1
d83 1
d145 3
d225 13
d365 19
d441 8
a448 6
	    "usage: diff [-abdilpqtTw] [-c | -e | -f | -n | -u] [-L label] file1 file2\n"
	    "       diff [-abdilpqtTw] [-L label] -C number file1 file2\n"
	    "       diff [-abdilqtw] -D string file1 file2\n"
	    "       diff [-abdilpqtTw] [-L label] -U number file1 file2\n"
	    "       diff [-abdilNPpqtTw] [-c | -e | -f | -n | -u ] [-L label] [-r] [-s]\n"
	    "            [-S name] [-X file] [-x pattern] dir1 dir2\n");
@


1.44
log
@Implement -p option.

"works here" millert@@ ok miod@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.43 2003/10/07 23:37:27 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.43 2003/10/07 23:37:27 millert Exp $";
d387 8
@


1.43
log
@Fix printing of "Only in foo" when foo is "/" (trailing slash removal
was overzealous in this case).  Fix tested by Hugo Villeneuve and myself.
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.42 2003/09/07 22:05:30 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.42 2003/09/07 22:05:30 millert Exp $";
d43 1
a43 1
int	 aflag, bflag, dflag, iflag, lflag, Nflag, Pflag, rflag;
d50 1
a50 1
#define	OPTIONS	"0123456789abC:cdD:efhiL:lnNPqrS:sTtU:uwX:x:"
d65 1
d158 3
d395 2
a396 2
	    "usage: diff [-abdilqtTw] [-c | -e | -f | -n | -u] [-L label] file1 file2\n"
	    "       diff [-abdilqtTw] [-L label] -C number file1 file2\n"
d398 2
a399 2
	    "       diff [-abdilqtTw] [-L label] -U number file1 file2\n"
	    "       diff [-abdilNPqtTw] [-c | -e | -f | -n | -u ] [-L label] [-r] [-s]\n"
@


1.42
log
@Make -number be an error (similar to my change in grep.c); OK tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.41 2003/09/07 18:50:58 jmc Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.41 2003/09/07 18:50:58 jmc Exp $";
d342 8
d354 1
a354 3
		/* must strip off the trailing '/' */
		printf("Only in %.*s: %s\n", (int)(strlen(path1) - 1),
		    path1, entry);
@


1.41
log
@ - add -P to SYNOPSIS
 - remove "mutually exclusive" clause
 - -c produces 15 *'s, not a dozen
 - add -a to uage()
 - sync usage() with SYNOPSIS

ok tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.40 2003/09/07 18:16:02 tedu Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.40 2003/09/07 18:16:02 tedu Exp $";
d30 1
d88 1
a88 1
	int   ch, lastch, gotstdin;
d93 3
a95 1
	lastch = 0;
d100 5
a104 2
			if (!(lastch == 'c' || lastch == 'u' ||
			    (lastch >= '0' && lastch <= '9')))
d106 1
a106 3
			if (lastch == 'c' || lastch == 'u')
				context = 0;
			context = context * 10 + ch - '0';
d203 2
@


1.40
log
@try again at -u#.  ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.39 2003/09/06 05:25:22 tedu Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.39 2003/09/06 05:25:22 tedu Exp $";
d379 6
a384 6
	    "usage: diff [-bdilqtTw] [-c | -e | -f | -n | -u] [-L label] file1 file2\n"
	    "       diff [-bdilqtTw] [-L label] -C number file1 file2\n"
	    "       diff [-bdilqtw] -D string file1 file2\n"
	    "       diff [-bdilqtTw] [-L label] -U number file1 file2\n"
	    "       diff [-bdilNPqwtT] [-c | -e | -f | -n | -u ] [-L label] [-r] [-s] [-S name]\n"
	    "            [-X file] [-x pattern] dir1 dir2\n");
@


1.39
log
@restore undocumented -u# support for the old schoolers. :)
noticed by itojun@@, ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.38 2003/08/18 02:04:42 david Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.38 2003/08/18 02:04:42 david Exp $";
d49 1
a49 1
#define	OPTIONS	"abC:c::dD:efhiL:lnNPqrS:sTtU:u::wX:x:"
d87 1
a87 1
	int   ch, gotstdin;
d92 1
d95 9
d198 1
@


1.38
log
@fix spelling of --initial-tab
ok otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.37 2003/07/29 18:38:47 deraadt Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.37 2003/07/29 18:38:47 deraadt Exp $";
d49 1
a49 1
#define	OPTIONS	"abC:cdD:efhiL:lnNPqrS:sTtU:uwX:x:"
@


1.37
log
@clean
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.36 2003/07/27 18:45:55 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.36 2003/07/27 18:45:55 millert Exp $";
d69 1
a69 1
	{ "intial-tab",			no_argument,		0,	'T' },
@


1.36
log
@Correct computation of argsize when setting diffargs.
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.35 2003/07/27 07:39:52 otto Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.35 2003/07/27 07:39:52 otto Exp $";
d42 2
a43 2
int	 aflag, bflag, dflag, iflag, lflag, Nflag, Pflag, rflag, sflag, tflag, 
	 Tflag, wflag;
@


1.35
log
@- Use a heuristic to bound  memory and cpu usage, at the cost of
producing suboptimal diffs for large file containing lots of changes.
Switch heuristic off with -d/--minimal (GNU compatible). Some hints
from millert@@.
- Improve performance by reducing the number of realloc(3) calls.

ok millert@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.34 2003/07/22 16:42:58 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.34 2003/07/22 16:42:58 millert Exp $";
d210 1
a210 1
	set_argstr(oargv, argv);
d273 1
a273 1
	argsize = 4 + (char *)ave - (char *)av + 1;
@


1.34
log
@Add missing terminator to long options list.
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.33 2003/07/22 01:16:01 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.33 2003/07/22 01:16:01 millert Exp $";
d42 2
a43 2
int	 aflag, bflag, iflag, lflag, Nflag, Pflag, rflag, sflag, tflag, Tflag,
	 wflag;
d49 1
a49 1
#define	OPTIONS	"abC:cD:efhiL:lnNPqrS:sTtU:uwX:x:"
d55 1
d111 3
d368 5
a372 5
	    "usage: diff [-bilqtTw] [-c | -e | -f | -n | -u] [-L label] file1 file2\n"
	    "       diff [-bilqtTw] [-L label] -C number file1 file2\n"
	    "       diff [-bilqtw] -D string file1 file2\n"
	    "       diff [-bilqtTw] [-L label] -U number file1 file2\n"
	    "       diff [-bilNPqwtT] [-c | -e | -f | -n | -u ] [-L label] [-r] [-s] [-S name]\n"
@


1.33
log
@Implement the -L and -T options from GNU diff.
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.32 2003/07/21 23:02:35 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.32 2003/07/21 23:02:35 millert Exp $";
d73 1
@


1.32
log
@Don't print a trailing '/' in foo when printing "Only in foo: bar"
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.31 2003/07/21 22:57:16 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.31 2003/07/21 22:57:16 millert Exp $";
d42 2
a43 1
int	 aflag, bflag, iflag, lflag, Nflag, Pflag, rflag, sflag, tflag, wflag;
d45 1
a45 1
char	*start, *ifdefname, *diffargs;
d49 1
a49 1
#define	OPTIONS	"abC:cD:efhilnNPqrS:stU:uwX:x:"
d59 1
d68 1
d125 3
d153 3
d363 6
a368 6
	    "usage: diff [-biqtw] [-c | -e | -f | -n | -u ] file1 file2\n"
	    "       diff [-biqtw] -C number file1 file2\n"
	    "       diff [-biqtw] -D string file1 file2\n"
	    "       diff [-biqtw] -U number file1 file2\n"
	    "       diff [-biNPqwt] [-c | -e | -f | -n | -u ] [-r] [-s] [-S name]"
	    " [-X file]\n            [-x pattern] dir1 dir2\n");
@


1.31
log
@Fix printing of status when not in -l mode which was broken when the
-l support was added.
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.30 2003/07/21 21:59:58 henning Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.30 2003/07/21 21:59:58 henning Exp $";
d315 3
a317 1
		printf("Only in %s: %s\n", path1, entry);
@


1.30
log
@a little KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.29 2003/07/21 21:57:22 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.29 2003/07/21 21:57:22 millert Exp $";
d338 1
a338 1
		printf("File %s/%s is a directory while file %s/%s is a file\n",
d342 1
a342 1
		printf("File %s/%s is a file while file %s/%s is a directory\n",
@


1.29
log
@POSIX-compliant output when there are two paths w/ the same name but
one is a file and the other is a directory in -r mode (cosmetic).
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.28 2003/07/09 00:39:25 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.28 2003/07/09 00:39:25 millert Exp $";
d250 1
a250 1
	return(len);
@


1.28
log
@Unlink temp file as soon as it is opened and return a FILE * for
it so we don't have to worry about cleanup.  This means the quit()
signal handler and error/errorx can go away too.

Move splice() out of diffreg() and into diff.c where it belongs
since we don't want to be calling splice() for a directory diff.
Add a check for mismatched paths (one file, one dir) in diffreg.c.

deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.27 2003/07/09 00:07:44 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.27 2003/07/09 00:07:44 millert Exp $";
d337 6
a342 2
	case D_MISMATCH:
		printf("File %s/%s is a directory but file %s/%s is not\n",
@


1.27
log
@Re-implement -l flag; diff -l now works correctly in non-directory
mode (like GNU diff).
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.26 2003/07/08 04:45:32 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.26 2003/07/08 04:45:32 millert Exp $";
d33 1
d124 1
d188 1
a188 1
		error("%s", argv[0]);
d193 1
a193 1
		error("%s", argv[1]);
d195 1
a195 1
		errorx("can't compare - to a directory");
d199 1
a199 1
			errorx("-D option not supported with directories");
d202 10
a217 10
void
quit(int signo)
{
	if (tempfiles[0] != NULL)
		unlink(tempfiles[0]);
	if (tempfiles[1] != NULL)
		unlink(tempfiles[1]);
	_exit(status);
}

d224 1
a224 1
		error(NULL);
d234 1
a234 1
		error(NULL);
d249 1
a249 1
		error(NULL);
a252 30
__dead void
error(const char *fmt, ...)
{
	va_list ap;
	int sverrno = errno;

	if (tempfiles[0] != NULL)
		unlink(tempfiles[0]);
	if (tempfiles[1] != NULL)
		unlink(tempfiles[1]);
	errno = sverrno;
	va_start(ap, fmt);
	verr(2, fmt, ap);
	va_end(ap);
}

__dead void
errorx(const char *fmt, ...)
{
	va_list ap;

	if (tempfiles[0] != NULL)
		unlink(tempfiles[0]);
	if (tempfiles[1] != NULL)
		unlink(tempfiles[1]);
	va_start(ap, fmt);
	verrx(2, fmt, ap);
	va_end(ap);
}

d283 1
a283 1
		error("%s", file);
d336 4
@


1.26
log
@o Avoid a temp file if using stdin and stdin is redirected from a regular file
o Fix a double free in the temmp file case
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.25 2003/07/06 22:17:21 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.25 2003/07/06 22:17:21 millert Exp $";
d41 1
a41 1
int	 aflag, bflag, iflag, Nflag, Pflag, rflag, sflag, tflag, wflag;
d47 1
a47 1
#define	OPTIONS	"abC:cD:efhinNPqrS:stU:uwX:x:"
d56 1
d121 3
d194 1
a197 1
		set_argstr(oargv, argv);
d199 4
a202 2
	} else
		diffreg(argv[0], argv[1], 0);
d236 15
d336 30
@


1.25
log
@Add -q option from GNU diff
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.24 2003/07/06 22:02:36 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.24 2003/07/06 22:02:36 millert Exp $";
d179 1
a179 1
		stb1.st_mode = S_IFREG;
d184 1
a184 1
		stb2.st_mode = S_IFREG;
@


1.24
log
@Implement -P from GNU diff (like -N but only for files that are missing
from dir1).
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.23 2003/07/06 20:48:59 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diff.c,v 1.23 2003/07/06 20:48:59 millert Exp $";
d47 1
a47 1
#define	OPTIONS	"abC:cD:efhinNPrS:stU:uwX:x:"
d59 1
d132 3
d321 5
a325 5
	    "usage: diff [-bitw] [-c | -e | -f | -n | -u ] file1 file2\n"
	    "       diff [-bitw] -C number file1 file2\n"
	    "       diff [-bitw] -D string file1 file2\n"
	    "       diff [-bitw] -U number file1 file2\n"
	    "       diff [-biNPwt] [-c | -e | -f | -n | -u ] [-r] [-s] [-S name]"
@


1.23
log
@Some fairly major changes:
 o -N is implemented
 o -X is implemented
 o -x is implemented
 o diff.c has been rewritten and GNU long options are now supported
 o diffdir.c has been rewritten
    + no longer does fork + exec of /usr/bin/diff
    + can be called recursively (and will be for -r)
 o diff.h
    + don't include any .h files here any more, do it in the .c files
    + no Bell Labs code in this, gets a UCB copyright (the 32v sources
      only have a diff.c and there is nothing in common).
 o diffreg.c
    + most all remaining globals are now private to diffreg.c
    + files are only opened once
    + dynamically allocated objects are either freed or realloced
    + added missing UCB copyright (there were lots of UCB changes)
    + print correct thing when -s is specified
OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.22 2003/07/04 17:52:35 millert Exp $	*/
d24 1
a24 1
static const char rcsid[] = "$OpenBSD: diffdir.c,v 1.17 2003/07/04 17:50:24 millert Exp $";
d41 1
a41 1
int	 aflag, bflag, iflag, Nflag, rflag, sflag, tflag, wflag;
d47 1
a47 1
#define	OPTIONS	"abC:cD:efhinNrS:stU:uwX:x:"
d58 1
d125 3
d321 1
a321 1
	    "       diff [-biNwt] [-c | -e | -f | -n | -u ] [-r] [-s] [-S name]"
@


1.22
log
@Accept but ignore -h for backwards compat like GNU diff does.
Pointed out by espie@@.  Also remove other references to -h mode.
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.21 2003/07/04 17:50:24 millert Exp $	*/
d4 1
a4 2
 * Copyright (C) Caldera International Inc.  2001-2002.
 * All rights reserved.
d6 3
a8 15
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code and documentation must retain the above
 *    copyright notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed or owned by Caldera
 *	International, Inc.
 * 4. Neither the name of Caldera International, Inc. nor the names of other
 *    contributors may be used to endorse or promote products derived from
 *    this software without specific prior written permission.
d10 11
a20 12
 * USE OF THE SOFTWARE PROVIDED FOR UNDER THIS LICENSE BY CALDERA
 * INTERNATIONAL, INC. AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL CALDERA INTERNATIONAL, INC. BE LIABLE FOR ANY DIRECT,
 * INDIRECT INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
d23 8
d32 1
d34 1
a39 29
#include "pathnames.h"

#if 0
static char const sccsid[] = "@@(#)diff.c 4.7 5/11/89";
#endif

/*
 * diff - driver and subroutines
 */
int	opt;
int	aflag;			/* treat all files as text */
int	tflag;			/* expand tabs on output */
/* Algorithm related options. */
int	bflag;			/* ignore blanks in comparisons */
int	wflag;			/* totally ignore blanks in comparisons */
int	iflag;			/* ignore case in comparisons */
/* Options on hierarchical diffs. */
int	rflag;			/* recursively trace directories */
int	sflag;			/* announce files which are same */
char	*start;			/* do file only if name >= this */
/* Variable for -D D_IFDEF option. */
char	*ifdefname;		/* What we will print for #ifdef/#endif */
/* Variables for -c and -u context option. */
int	context;		/* lines of context to be printed */
/* State for exit status. */
int	status;
int	anychange;
/* Variables for diffdir. */
char	**diffargv;		/* option list to pass to recursive diffs */
d41 26
a66 8
/*
 * Input file names.
 * With diffdir, file1 and file2 are allocated MAXPATHLEN space,
 * and padded with a '/', and then efile1 and efile2 point after
 * the '/'.
 */
char	*file1, *file2, *efile1, *efile2;
struct	stat stb1, stb2;
d69 3
d76 3
a78 1
	int ch;
d80 2
a81 2
	status = 2;
	diffargv = argv;
d83 1
a83 1
	while ((ch = getopt(argc, argv, "abC:cD:efhinrS:stU:uw")) != -1) {
d86 1
a86 1
			aflag++;
d89 1
a89 1
			bflag++;
a91 5
			opt = D_CONTEXT;
			if (!isdigit(*optarg))
				usage();
			context = atoi(optarg);	/* XXX - use strtol */
			break;
d93 8
a100 2
			opt = D_CONTEXT;
			context = 3;
d103 1
a103 1
			opt = D_IFDEF;
d107 1
a107 1
			opt = D_EDIT;
d110 1
a110 1
			opt = D_REVERSE;
d116 4
a119 1
			iflag++;
d122 1
a122 1
			opt = D_NREVERSE;
d125 1
a125 1
			rflag++;
d131 1
a131 1
			sflag++;
d134 1
a134 1
			tflag++;
a136 5
			opt = D_UNIFIED;
			if (!isdigit(*optarg))
				usage();
			context = atoi(optarg);	/* XXX - use strtol */
			break;
d138 8
a145 2
			opt = D_UNIFIED;
			context = 3;
d148 7
a154 1
			wflag++;
d164 4
d169 2
a170 4
		errorx("two filename arguments required");
	file1 = argv[0];
	file2 = argv[1];
	if (!strcmp(file1, "-"))
d172 4
a175 3
	else if (stat(file1, &stb1) < 0)
		error("%s", file1);
	if (!strcmp(file2, "-"))
d177 13
a189 7
	else if (stat(file2, &stb2) < 0)
		error("%s", file2);
	if (S_ISDIR(stb1.st_mode) && S_ISDIR(stb2.st_mode))
		diffdir(argv);
	else
		diffreg();
	done(0);
d192 2
a193 16
int
min(int a, int b)
{

	return (a < b ? a : b);
}

int
max(int a, int b)
{

	return (a > b ? a : b);
}

__dead void
done(int sig)
d199 1
a199 3
	if (sig)
		_exit(status);
	exit(status);
d234 1
a234 1
	verr(status, fmt, ap);
d248 1
a248 1
	verrx(status, fmt, ap);
d252 57
d317 2
a318 2
	    "       diff [-biwt] [-c | -e | -f | -n | -u ] "
	    "[-r] [-s] [-S name]\n            dir1 dir2\n");
@


1.21
log
@Kill non-standard -l option as discussed with tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.20 2003/07/04 17:37:07 millert Exp $	*/
d93 1
a93 1
	while ((ch = getopt(argc, argv, "abC:cD:efinrS:stU:uw")) != -1) {
d121 3
d214 1
a214 1
		error("files too big, try -h");
d224 1
a224 1
		error("files too big, try -h");
@


1.20
log
@Kill diff -h, we don't use or want diffh.  Discussed w/ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.19 2003/07/04 02:54:36 millert Exp $	*/
a60 1
int	lflag;			/* long output format with header */
d93 1
a93 1
	while ((ch = getopt(argc, argv, "abC:cD:efilnrS:stU:uw")) != -1) {
a123 3
		case 'l':
			lflag++;
			break;
d259 1
a259 1
	    "usage: diff [-bitw] [-c | -e | -f | -h | -n | -u ] file1 file2\n"
d263 2
a264 2
	    "       diff [-biwt] [-c | -e | -f | -h | -n | -u ] "
	    "[-l] [-r] [-s] [-S name]\n            dir1 dir2\n");
@


1.19
log
@Some cosmetic fixes:
o get rid of now-unused tempfile variable
o move inifdef into diffreg.c (only used there)
o correct a comment
o use _PATH_DIFF, _PATH_DIFFH and _PATH_PR instead of variables set to them
o get rid of hack to look for pr and diff in /bin
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.18 2003/06/27 17:08:45 david Exp $	*/
a56 1
int	hflag;			/* -h, use halfhearted DIFFH */
d94 1
a94 1
	while ((ch = getopt(argc, argv, "abC:cD:efhilnrS:stU:uw")) != -1) {
a121 3
		case 'h':
			hflag++;
			break;
a167 2
	if (hflag && opt)
		errorx("-h doesn't support -D, -c, -C, -e, -f, -I, -n, -u or -U");
@


1.18
log
@kill a warning: include <string.h>
ok tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.17 2003/06/26 22:04:45 millert Exp $	*/
d66 1
a66 1
/* Variables for -D D_IFDEF option. */
a67 1
int	inifdef;
a72 1
char	*tempfile;		/* used when comparing against std input */
d78 2
a79 2
 * With diffdir, file1 and file2 are allocated BUFSIZ space,
 * and padded with a '/', and then efile0 and efile1 point after
a83 4

const char *diff = _PATH_DIFF;
const char *diffh = _PATH_DIFFH;
const char *pr = _PATH_PR;
@


1.17
log
@Remove cruft; We don't have the -I, -1 or -2 options anymore so we don't
need the associated scaffolding.  tedu@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.16 2003/06/26 21:03:08 millert Exp $	*/
d40 1
@


1.16
log
@Fix -r flag that was broken during getopt() conversion--whoops.
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.15 2003/06/26 18:19:29 millert Exp $	*/
d65 2
a66 5
/* Variables for -I D_IFDEF option. */
int	wantelses;		/* -E */
char	*ifdef1;		/* String for -1 */
char	*ifdef2;		/* String for -2 */
char	*endifname;		/* What we will print on next #endif */
a96 2
	ifdef1 = "FILE1";
	ifdef2 = "FILE2";
a118 1
			/* -Dfoo = -E -1 -2foo */
d120 1
a120 3
			ifdef1 = "";
			ifdef2 = optarg;
			wantelses++;
@


1.15
log
@Fix temp file handling.
o honor TMPDIR environment variable as per man page
o need 2 temp files if both file1 and file2 are devices
o add error() and errorx() which cleanup temp file and then
call err() and errx() respectively.

OK tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.14 2003/06/26 07:20:12 deraadt Exp $	*/
d149 1
a149 1
			opt = D_REVERSE;
@


1.14
log
@pretty code that prints usage
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.13 2003/06/26 04:52:26 millert Exp $	*/
d37 1
d39 1
a92 1
static void noroom(void);
d182 1
a182 1
		errx(1, "two filename arguments required");
d186 1
a186 1
		errx(1, "-h doesn't support -D, -c, -C, -e, -f, -I, -n, -u or -U");
d190 1
a190 1
		err(1, "%s", file1);
d194 1
a194 1
		err(1, "%s", file2);
d219 1
a219 1
	if (tempfiles[0])
d221 1
a221 1
	if (tempfiles[1])
d234 1
a234 1
		noroom();
d244 1
a244 1
		noroom();
d248 18
a265 2
static void
noroom(void)
d267 9
a275 2
	warn("files too big, try -h");
	done(0);
d289 1
a289 1
	exit(1);
@


1.13
log
@Fix temp file handling and deal with the case where we might need 2 temp files.
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.12 2003/06/26 00:20:48 tedu Exp $	*/
d257 2
a258 1
	(void)fprintf(stderr, "usage: diff [-bitw] [-c | -e | -f | -h | -n | -u ] file1 file2\n"
d262 2
a263 1
	    "       diff [-biwt] [-c | -e | -f | -h | -n | -u ] [-l] [-r] [-s] [-S name]\n            dir1 dir2\n");
@


1.12
log
@put all the flags and globals in diff.c, and declare externs in diff.h
ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.11 2003/06/25 23:04:53 millert Exp $	*/
d87 3
a89 3
char diff[] = _PATH_DIFF;
char diffh[] = _PATH_DIFFH;
char pr[] = _PATH_PR;
d218 4
a221 2
	if (tempfile)
		unlink(tempfile);
@


1.11
log
@Add a space after flags that take an argumnent in usage() since getopt()
supports that.
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.10 2003/06/25 22:22:34 millert Exp $	*/
d50 36
d104 1
a104 1
	while ((ch = getopt(argc, argv, "bC:cD:efhilnrS:stU:uw")) != -1) {
d106 3
@


1.10
log
@De-uglify usage
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.9 2003/06/25 22:14:43 millert Exp $	*/
d217 4
a220 4
	    "       diff [-bitw] -Cnumber file1 file2\n"
	    "       diff [-bitw] -Dstring file1 file2\n"
	    "       diff [-bitw] -Unumber file1 file2\n"
	    "       diff [-biwt] [-c | -e | -f | -h | -n | -u ] [-l] [-r] [-s] [-Sname]\n            dir1 dir2\n");
@


1.9
log
@Add unidiff support and try to pretty up usage() a bit
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.8 2003/06/25 21:43:49 millert Exp $	*/
d217 4
a220 4
	    "       diff [-biw] -Dstring file1 file2\n"
	    "       diff [-biwt] [-c | -e | -f | -h | -n | -u ] [-l] [-r] [-s] [-Sname]\n            dir1 dir2\n"
	    "       diff [-bitw] -Cnumber [file1 file2 | dir1 dir2]\n"
	    "       diff [-bitw] -Unumber [file1 file2 | dir1 dir2]\n");
@


1.8
log
@o use S_ISDIR instead of doing it by hand
o rename talloc -> emalloc and ralloc -> erealloc
o struct direct -> struct dirent (POSIX)
o kill remaining strcpy()
o fix unterminated string in setfile()
deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.7 2003/06/25 19:56:57 millert Exp $	*/
d68 1
a68 1
	while ((ch = getopt(argc, argv, "bC:cD:efhilnrS:stw")) != -1) {
d120 10
d146 1
a146 1
		errx(1, "-h doesn't support -D, -c, -C, -e, -f, -I or -n");
d216 5
a220 3
	(void)fprintf(stderr, "usage: diff [-c | -C lines | -e | -f | -h | -n ] [-biwt] file1 file2\n"
	    "usage: diff [-Dstring] [-biw] file1 file2\n"
	    "usage: diff [-l] [-r] [-s] [-c | -C lines | -e | -f | -h | -n ] [-biwt]\n            [-Sname] dir1 dir2\n");
@


1.7
log
@Fix getopt string for -D
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.6 2003/06/25 17:49:22 millert Exp $	*/
d145 1
a145 2
	if ((stb1.st_mode & S_IFMT) == S_IFDIR &&
	    (stb2.st_mode & S_IFMT) == S_IFDIR) {
d147 1
a147 1
	} else
d177 1
a177 1
talloc(size_t n)
d187 1
a187 1
ralloc(void *p, size_t n)
@


1.6
log
@o use getopt()
o use err/warn
o only call done() when needed (after mkstemp)
o add "-C lines" like GNU grep
OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.5 2003/06/25 07:26:59 tedu Exp $	*/
d68 1
a68 1
	while ((ch = getopt(argc, argv, "bC:cDefhilnrS:stw")) != -1) {
@


1.5
log
@remove silly signal catcher, and just use done.  ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.4 2003/06/25 03:37:32 deraadt Exp $	*/
d56 1
d61 1
a61 1
	char *argp;
d67 60
a126 98
	argc--, argv++;
	while (argc > 2 && argv[0][0] == '-') {
		argp = &argv[0][1];
		argv++, argc--;
		while (*argp)
			switch (*argp++) {
#ifdef notdef
			case 'I':
				opt = D_IFDEF;
				wantelses = 0;
				continue;
			case 'E':
				opt = D_IFDEF;
				wantelses = 1;
				continue;
			case '1':
				opt = D_IFDEF;
				ifdef1 = argp;
				*--argp = 0;
				continue;
#endif
			case 'D':
				/* -Dfoo = -E -1 -2foo */
				wantelses = 1;
				ifdef1 = "";
				/* fall through */
#ifdef notdef
			case '2':
#endif
				opt = D_IFDEF;
				ifdef2 = argp;
				*--argp = 0;
				continue;
			case 'e':
				opt = D_EDIT;
				continue;
			case 'f':
				opt = D_REVERSE;
				continue;
			case 'n':
				opt = D_NREVERSE;
				continue;
			case 'b':
				bflag = 1;
				continue;
			case 'w':
				wflag = 1;
				continue;
			case 'i':
				iflag = 1;
				continue;
			case 't':
				tflag = 1;
				continue;
			case 'c':
				opt = D_CONTEXT;
				if (isdigit(*argp)) {
					context = atoi(argp);
					while (isdigit(*argp))
						argp++;
					if (*argp) {
						fprintf(stderr,
						    "diff: -c: bad count\n");
						done(0);
					}
					argp = "";
				} else
					context = 3;
				continue;
			case 'h':
				hflag++;
				continue;
			case 'S':
				if (*argp == 0) {
					fprintf(stderr, "diff: use -Sstart\n");
					done(0);
				}
				start = argp;
				*--argp = 0;	/* don't pass it on */
				continue;
			case 'r':
				rflag++;
				continue;
			case 's':
				sflag++;
				continue;
			case 'l':
				lflag++;
				continue;
			default:
				fprintf(stderr, "diff: -%s: unknown option\n",
				    --argp);
				done(0);
			}
	}
	if (argc != 2) {
		fprintf(stderr, "diff: two filename arguments required\n");
		done(0);
d128 5
d135 2
a136 5
	if (hflag && opt) {
		fprintf(stderr,
		    "diff: -h doesn't support -e, -f, -n, -c, or -I\n");
		done(0);
	}
d139 2
a140 5
	else if (stat(file1, &stb1) < 0) {
		fprintf(stderr, "diff: ");
		perror(file1);
		done(0);
	}
d143 2
a144 5
	else if (stat(file2, &stb2) < 0) {
		fprintf(stderr, "diff: ");
		perror(file2);
		done(0);
	}
a150 2
	/* notreached */
	return (0);
d167 1
a167 1
void
d200 1
a200 1
	fprintf(stderr, "diff: files too big, try -h\n");
d202 10
@


1.4
log
@exit path signal race safe
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.3 2003/06/25 03:02:33 tedu Exp $	*/
a217 7
}

void
catchsig(int sigraised)
{
	/* print something? */
	done(0);
@


1.3
log
@cleanup.  ansi, headers, correct prototypes, some safer string and
tempfile functions, whitespace, ...
no functional improvements yet
@
text
@d1 1
a1 1
/*	$OpenBSD: diff.c,v 1.2 2003/06/25 01:23:38 deraadt Exp $	*/
d129 1
a129 1
						done();
d141 1
a141 1
					done();
d158 1
a158 1
				done();
d163 1
a163 1
		done();
d170 1
a170 1
		done();
d177 1
a177 1
		done();
d184 1
a184 1
		done();
d191 1
a191 1
	done();
d211 1
a211 1
done(void)
d215 2
d224 1
a224 1
	done();
d251 1
a251 1
	done();
@


1.2
log
@caldera licenses
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 2
a38 1
static	char sccsid[] = "@@(#)diff.c 4.7 5/11/89";
d43 4
d51 3
a53 3
char	diff[] = _PATH_DIFF;
char	diffh[] = _PATH_DIFFH;
char	pr[] = _PATH_PR;
d55 4
a58 3
main(argc, argv)
	int argc;
	char **argv;
d60 1
a60 1
	register char *argp;
d62 2
a63 1
	ifdef1 = "FILE1"; ifdef2 = "FILE2";
d70 2
a71 2
		while (*argp) switch(*argp++) {

d73 13
a85 13
		case 'I':
			opt = D_IFDEF;
			wantelses = 0;
			continue;
		case 'E':
			opt = D_IFDEF;
			wantelses = 1;
			continue;
		case '1':
			opt = D_IFDEF;
			ifdef1 = argp;
			*--argp = 0;
			continue;
d87 5
a91 5
		case 'D':
			/* -Dfoo = -E -1 -2foo */
			wantelses = 1;
			ifdef1 = "";
			/* fall through */
d93 1
a93 1
		case '2':
d95 46
a140 34
			opt = D_IFDEF;
			ifdef2 = argp;
			*--argp = 0;
			continue;
		case 'e':
			opt = D_EDIT;
			continue;
		case 'f':
			opt = D_REVERSE;
			continue;
		case 'n':
			opt = D_NREVERSE;
			continue;
		case 'b':
			bflag = 1;
			continue;
		case 'w':
			wflag = 1;
			continue;
		case 'i':
			iflag = 1;
			continue;
		case 't':
			tflag = 1;
			continue;
		case 'c':
			opt = D_CONTEXT;
			if (isdigit(*argp)) {
				context = atoi(argp);
				while (isdigit(*argp))
					argp++;
				if (*argp) {
					fprintf(stderr,
					    "diff: -c: bad count\n");
d143 15
a157 10
				argp = "";
			} else
				context = 3;
			continue;
		case 'h':
			hflag++;
			continue;
		case 'S':
			if (*argp == 0) {
				fprintf(stderr, "diff: use -Sstart\n");
a159 17
			start = argp;
			*--argp = 0;		/* don't pass it on */
			continue;
		case 'r':
			rflag++;
			continue;
		case 's':
			sflag++;
			continue;
		case 'l':
			lflag++;
			continue;
		default:
			fprintf(stderr, "diff: -%s: unknown option\n",
			    --argp);
			done();
		}
d192 2
d196 2
a197 16
char *
savestr(cp)
	register char *cp;
{
	register char *dp = malloc(strlen(cp)+1);

	if (dp == 0) {
		fprintf(stderr, "diff: ran out of memory\n");
		done();
	}
	strcpy(dp, cp);
	return (dp);
}

min(a,b)
	int a,b;
d203 2
a204 2
max(a,b)
	int a,b;
d210 2
a211 1
done()
d218 2
a219 2
char *
talloc(n)
d221 3
a223 1
	register char *p;
d225 8
a232 3
	if ((p = malloc((unsigned)n)) != NULL)
		return(p);
	noroom();
d235 2
a236 3
char *
ralloc(p,n)
char *p;
d238 1
a238 2
	register char *q;
	char *realloc();
d240 1
a240 1
	if ((q = realloc(p, (unsigned)n)) == NULL)
d242 1
a242 1
	return(q);
d245 2
a246 1
noroom()
@


1.1
log
@4.3reno diff.  This is free because of the Caldera license.  Nasty, but a
place to start.
@
text
@d1 36
@

