head	1.19;
access;
symbols
	OPENBSD_6_1:1.19.0.6
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.4
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.17.0.18
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.10
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.14
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.12
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.8
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.6
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.4
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.2
	OPENBSD_5_0:1.16.0.6
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.4
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.2
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.15.0.4
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.6
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.2
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.14.0.8
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.6
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.4
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.2
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.13.0.8
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.6
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.4
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.2
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.12.0.8
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.6
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.4
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.12.0.2
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.11.0.6
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.4
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_8:1.9.0.4
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.5.0.6
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.4
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.19
date	2015.10.22.04.08.17;	author deraadt;	state Exp;
branches;
next	1.18;
commitid	QBeY3I7rRJwbrova;

1.18
date	2015.10.10.20.04.28;	author doug;	state Exp;
branches;
next	1.17;
commitid	QyXzbpDXe1hL72Ii;

1.17
date	2011.09.28.19.27.18;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2010.06.13.17.58.19;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2008.10.06.20.38.33;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2007.01.29.19.40.06;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2004.12.30.01.52.48;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2002.12.19.21.24.28;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2001.09.08.00.12.40;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2000.11.21.14.08.22;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.12.08.23.09.45;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	99.12.04.00.12.25;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	99.04.20.17.31.30;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	99.04.18.17.06.30;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.03.03.01.56.01;	author angelos;	state Exp;
branches;
next	1.4;

1.4
date	97.08.25.16.17.12;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	97.01.20.19.43.22;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.07.04.20.56.07;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	96.07.04.20.34.43;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Until we understand the sitaution better, we should pledge() after
setlocale(), not before.  Not just here, but probably everywhere?
@
text
@/*	$OpenBSD: main.c,v 1.18 2015/10/10 20:04:28 doug Exp $	*/
/****************************************************************
Copyright (C) Lucent Technologies 1997
All Rights Reserved

Permission to use, copy, modify, and distribute this software and
its documentation for any purpose and without fee is hereby
granted, provided that the above copyright notice appear in all
copies and that both that the copyright notice and this
permission notice and warranty disclaimer appear in supporting
documentation, and that the name Lucent Technologies or any of
its entities not be used in advertising or publicity pertaining
to distribution of the software without specific, written prior
permission.

LUCENT DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.
IN NO EVENT SHALL LUCENT OR ANY OF ITS ENTITIES BE LIABLE FOR ANY
SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
THIS SOFTWARE.
****************************************************************/

const char	*version = "version 20110810";

#define DEBUG
#include <stdio.h>
#include <ctype.h>
#include <locale.h>
#include <stdlib.h>
#include <string.h>
#include <signal.h>
#include <unistd.h>
#include "awk.h"
#include "ytab.h"

extern	char	**environ;
extern	int	nfields;
extern	char	*__progname;

int	dbg	= 0;
Awkfloat	srand_seed = 1;
char	*cmdname;	/* gets argv[0] for error messages */
extern	FILE	*yyin;	/* lex input file */
char	*lexprog;	/* points to program argument if it exists */
extern	int errorflag;	/* non-zero if any syntax errors; set by yyerror */
int	compile_time = 2;	/* for error printing: */
				/* 2 = cmdline, 1 = compile, 0 = running */

#define	MAX_PFILE	20	/* max number of -f's */

char	*pfile[MAX_PFILE];	/* program filenames from -f's */
int	npfile = 0;	/* number of filenames */
int	curpfile = 0;	/* current filename */

int	safe	= 0;	/* 1 => "safe" mode */

int main(int argc, char *argv[])
{
	const char *fs = NULL;

	setlocale(LC_ALL, "");
	setlocale(LC_NUMERIC, "C"); /* for parsing cmdline & prog */

	if (pledge("stdio rpath wpath cpath proc exec", NULL) == -1) {
		fprintf(stderr, "%s: pledge: incorrect arguments\n",
		    cmdname);
		exit(1);
	}

	cmdname = __progname;
	if (argc == 1) {
		fprintf(stderr, "usage: %s [-safe] [-V] [-d[n]] [-F fs] "
		    "[-v var=value] [prog | -f progfile]\n\tfile ...\n",
		    cmdname);
		exit(1);
	}
	signal(SIGFPE, fpecatch);

	yyin = NULL;
	symtab = makesymtab(NSYMTAB);
	while (argc > 1 && argv[1][0] == '-' && argv[1][1] != '\0') {
		if (strcmp(argv[1], "--") == 0) {	/* explicit end of args */
			argc--;
			argv++;
			break;
		}
		switch (argv[1][1]) {
		case 's':
			if (strcmp(argv[1], "-safe") == 0)
				safe = 1;
			break;
		case 'f':	/* next argument is program filename */
			if (argv[1][2] != 0) {  /* arg is -fsomething */
				if (npfile >= MAX_PFILE - 1)
					FATAL("too many -f options"); 
				pfile[npfile++] = &argv[1][2];
			} else {		/* arg is -f something */
				argc--; argv++;
				if (argc <= 1)
					FATAL("no program filename");
				if (npfile >= MAX_PFILE - 1)
					FATAL("too many -f options"); 
				pfile[npfile++] = argv[1];
			}
			break;
		case 'F':	/* set field separator */
			if (argv[1][2] != 0) {	/* arg is -Fsomething */
				if (argv[1][2] == 't' && argv[1][3] == 0)	/* wart: t=>\t */
					fs = "\t";
				else if (argv[1][2] != 0)
					fs = &argv[1][2];
			} else {		/* arg is -F something */
				argc--; argv++;
				if (argc > 1 && argv[1][0] == 't' && argv[1][1] == 0)	/* wart: t=>\t */
					fs = "\t";
				else if (argc > 1 && argv[1][0] != 0)
					fs = &argv[1][0];
			}
			if (fs == NULL || *fs == '\0')
				WARNING("field separator FS is empty");
			break;
		case 'v':	/* -v a=1 to be done NOW.  one -v for each */
			if (argv[1][2] != 0) {  /* arg is -vsomething */
				if (isclvar(&argv[1][2]))
					setclvar(&argv[1][2]);
				else
					FATAL("invalid -v option argument: %s", &argv[1][2]);
			} else {		/* arg is -v something */
				argc--; argv++;
				if (argc <= 1)
					FATAL("no variable name");
				if (isclvar(argv[1]))
					setclvar(argv[1]);
				else
					FATAL("invalid -v option argument: %s", argv[1]);
			}
			break;
		case 'd':
			dbg = atoi(&argv[1][2]);
			if (dbg == 0)
				dbg = 1;
			printf("awk %s\n", version);
			break;
		case 'V':	/* added for exptools "standard" */
			printf("awk %s\n", version);
			exit(0);
			break;
		default:
			WARNING("unknown option %s ignored", argv[1]);
			break;
		}
		argc--;
		argv++;
	}

	if (safe) {
		if (pledge("stdio rpath", NULL) == -1) {
			fprintf(stderr, "%s: pledge: incorrect arguments\n",
			    cmdname);
			exit(1);
		}
	}

	/* argv[1] is now the first argument */
	if (npfile == 0) {	/* no -f; first argument is program */
		if (argc <= 1) {
			if (dbg)
				exit(0);
			FATAL("no program given");
		}
		   dprintf( ("program = |%s|\n", argv[1]) );
		lexprog = argv[1];
		argc--;
		argv++;
	}
	recinit(recsize);
	syminit();
	compile_time = 1;
	argv[0] = cmdname;	/* put prog name at front of arglist */
	   dprintf( ("argc=%d, argv[0]=%s\n", argc, argv[0]) );
	arginit(argc, argv);
	if (!safe)
		envinit(environ);
	yyparse();
	setlocale(LC_NUMERIC, ""); /* back to whatever it is locally */
	if (fs)
		*FS = qstring(fs, '\0');
	   dprintf( ("errorflag=%d\n", errorflag) );
	if (errorflag == 0) {
		compile_time = 0;
		run(winner);
	} else
		bracecheck();
	return(errorflag);
}

int pgetc(void)		/* get 1 character from awk program */
{
	int c;

	for (;;) {
		if (yyin == NULL) {
			if (curpfile >= npfile)
				return EOF;
			if (strcmp(pfile[curpfile], "-") == 0)
				yyin = stdin;
			else if ((yyin = fopen(pfile[curpfile], "r")) == NULL)
				FATAL("can't open file %s", pfile[curpfile]);
			lineno = 1;
		}
		if ((c = getc(yyin)) != EOF)
			return c;
		if (yyin != stdin)
			fclose(yyin);
		yyin = NULL;
		curpfile++;
	}
}

char *cursource(void)	/* current source file name */
{
	if (npfile > 0)
		return pfile[curpfile];
	else
		return NULL;
}
@


1.18
log
@Add pledge support in awk and make awk -safe actually safe.

awk -safe was introduced back in 1997 to stop awk from doing file output,
execute commands or access the environment.  The lexer rejected programs
when it saw awk commands that would write, exec or env.  Beyond that,
it wasn't safe from write/exec/env during program execution.

With pledge "stdio rpath", the kernel is now enforcing the awk -safe
mode restrictions at runtime (other than env).

Based on a diff by deraadt@@

ok deraadt@@ beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.17 2011/09/28 19:27:18 millert Exp $	*/
d64 3
a72 2
	setlocale(LC_ALL, "");
	setlocale(LC_NUMERIC, "C"); /* for parsing cmdline & prog */
@


1.17
log
@Update awk to Aug 10, 2011 version; naddy@@ reports no ports problems
from the update.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.16 2010/06/13 17:58:19 millert Exp $	*/
d35 1
d64 6
d157 9
@


1.16
log
@Update awk to May 23, 2010 version.  OK miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.15 2008/10/06 20:38:33 millert Exp $	*/
d26 1
a26 1
const char	*version = "version 20100523";
d43 1
d73 1
d88 12
a99 9
			argc--;
			argv++;
			if (npfile >= MAX_PFILE - 1)
				FATAL("too many -f options");
			if (argc <= 1)
				FATAL("no program filename");
			if (npfile >= MAX_PFILE - 1)
				FATAL("too many -f options"); 
			pfile[npfile++] = argv[1];
d118 14
a131 4
			if (argv[1][2] == '\0' && --argc > 1 && isclvar((++argv)[1]))
				setclvar(argv[1]);
			else if (argv[1][2] != '\0')
				setclvar(&argv[1][2]);
@


1.15
log
@Update awk to version 20071023; OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.14 2007/01/29 19:40:06 jmc Exp $	*/
d26 1
a26 1
const char	*version = "version 20071023";
d115 2
@


1.14
log
@sync usage(); spotted by Igor Sobrado
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.13 2004/12/30 01:52:48 millert Exp $	*/
d26 1
a26 1
const char	*version = "version 20041222";
a37 2
#define	MAX_PFILE	20

d50 2
d92 2
a114 4
			break;
		case 'm':	/* more memory: -mr=record, -mf=fields */
				/* no longer supported */
			WARNING("obsolete option %s ignored", argv[1]);
@


1.13
log
@Update to version 20041222; OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.12 2002/12/19 21:24:28 millert Exp $	*/
d66 2
a67 2
		fprintf(stderr, "usage: %s [-F fs] [-v var=value] [-safe] "
		    "[-mr n] [-mf n] [prog | -f progfile] file ...\n",
@


1.12
log
@Update to the One True Awk version 20021213
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.11 2001/09/08 00:12:40 millert Exp $	*/
d26 1
a26 1
const char	*version = "version 20021213";
d63 1
a63 1

d156 1
@


1.11
log
@Update to latest version of the One True Awk.  See the FIXES file
for details.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.10 2000/11/21 14:08:22 aaron Exp $	*/
d26 1
a26 1
char	*version = "version 20001115";
d60 1
a60 2
	char *fs = NULL, *marg;
	int temp;
d115 2
a116 13
				/* no longer needed */
			marg = argv[1];
			if (argv[1][3])
				temp = atoi(&argv[1][3]);
			else {
				argv++; argc--;
				temp = atoi(&argv[1][0]);
			}
			switch (marg[2]) {
			case 'r':	recsize = temp; break;
			case 'f':	nfields = temp; break;
			default: FATAL("unknown option %s\n", marg);
			}
@


1.10
log
@Sync usage() output with man page; mpech@@prosoft.org.lv
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.9 1999/12/08 23:09:45 millert Exp $	*/
d26 1
a26 1
char	*version = "version 19990620";
@


1.9
log
@June 6, 1999 version of the "one true awk"
Most of the changes are to avoid using a static buffer for error messages.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.8 1999/12/04 00:12:25 millert Exp $	*/
d67 3
a69 1
		fprintf(stderr, "Usage: %s [-f programfile | 'program'] [-Ffieldsep] [-v var=value] [-safe] [-mrn] [-mfn] [files]\n", cmdname);
@


1.8
log
@Fix 2 core dumps:
1) give an error if the user specifies > 20 -f options instead of oflowing
2) use snprintf in the ERROR macro to avoid an oflow
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.7 1999/04/20 17:31:30 millert Exp $	*/
d26 1
a26 1
char	*version = "version 19990416";
d88 1
a88 1
				ERROR "too many -f options" FATAL;
d90 1
a90 1
				ERROR "no program filename" FATAL;
d107 1
a107 1
				ERROR "field separator FS is empty" WARNING;
d125 1
a125 1
			default: ERROR "unknown option %s\n", marg FATAL;
d139 1
a139 1
			ERROR "unknown option %s ignored", argv[1] WARNING;
d150 1
a150 1
			ERROR "no program given" FATAL;
d188 1
a188 1
				ERROR "can't open file %s", pfile[curpfile] FATAL;
@


1.7
log
@April 16, 1999 version of the "one true awk"--64-bit fixes and more.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.6 1999/04/18 17:06:30 millert Exp $	*/
d38 2
d52 1
a52 1
char	*pfile[20];	/* program filenames from -f's */
d87 2
@


1.6
log
@March 5, 1999 version of the "one true awk"
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.5 1998/03/03 01:56:01 angelos Exp $	*/
d26 1
a26 1
char	*version = "version 990305";
d185 1
d194 8
@


1.5
log
@Document -safe option and update usage message.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.4 1997/08/25 16:17:12 kstailey Exp $	*/
d26 1
a26 1
char	*version = "version 970821";
d40 1
d63 1
a63 4
	if ((cmdname = strrchr(argv[0], '/')) != NULL)
		cmdname++;
	else
		cmdname = argv[0];
d129 4
@


1.4
log
@August 1997 version of "the one true awk"
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d67 1
a67 1
		fprintf(stderr, "Usage: %s [-f programfile | 'program'] [-Ffieldsep] [-v var=value] [files]\n", cmdname);
@


1.3
log
@Latest research awk from June 29, 1996
@
text
@d1 1
d3 1
a3 1
Copyright (C) AT&T and Lucent Technologies 1996
d11 13
a23 13
documentation, and that the names of AT&T or Lucent Technologies
or any of their entities not be used in advertising or publicity
pertaining to distribution of the software without specific,
written prior permission.

AT&T AND LUCENT DISCLAIM ALL WARRANTIES WITH REGARD TO THIS
SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS. IN NO EVENT SHALL AT&T OR LUCENT OR ANY OF THEIR
ENTITIES BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE
USE OR PERFORMANCE OF THIS SOFTWARE.
d26 1
a26 1
char	*version = "version June 29, 1996";
d36 1
a36 1
#include "awkgram.h"
d53 2
d67 1
a67 1
		fprintf(stderr, "Usage: %s [-f programfile | 'program'] [-Ffieldsep] [-v var=value] [-mf n] [-mr n] [files]\n", cmdname);
a69 1
	gs = newGstring();	/* for lex */
d74 1
a74 1
		if (strcmp((char *) argv[1], "--") == 0) {	/* explicit end of args */
d80 4
d94 1
a94 1
					fs = (char *) "\t";
d100 1
a100 1
					fs = (char *) "\t";
d112 1
d146 1
a146 1
		dprintf( ("program = |%s|\n", argv[1]) );
d155 1
a155 1
	dprintf( ("argc=%d, argv[0]=%s\n", argc, argv[0]) );
d157 2
a158 1
	envinit(environ);
d161 2
a162 2
		*FS = tostring(qstring(fs, '\0'));
	dprintf( ("errorflag=%d\n", errorflag) );
d179 1
a179 1
			if (strcmp((char *) pfile[curpfile], "-") == 0)
d181 1
a181 1
			else if ((yyin = fopen((char *) pfile[curpfile], "r")) == NULL)
@


1.2
log
@Set locale per IEEE 1003.2(1992)
@
text
@d25 1
a25 1
char	*version = "version May 27, 1996";
d30 1
a33 1
#include <locale.h>
@


1.1
log
@AT&T awk, by B. W. Kernighan, with fixes from 4.4BSD and by me
@
text
@d33 1
d56 2
@

