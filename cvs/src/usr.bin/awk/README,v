head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.24
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.20
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.16
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.18
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.10
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.14
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.12
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.8
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.6
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.6.0.28
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.26
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.24
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.20
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.22
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.18
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.16
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.14
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.12
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.10
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.8
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.6
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.4
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.5.0.8
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.6
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.8
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.8
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2011.09.28.19.27.18;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2004.12.30.01.52.48;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.19.21.24.28;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.08.00.12.40;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.04.18.17.06.29;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.08.25.16.17.08;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	96.07.04.20.34.37;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update awk to Aug 10, 2011 version; naddy@@ reports no ports problems
from the update.
@
text
@/*	$OpenBSD: README,v 1.6 2004/12/30 01:52:48 millert Exp $	*/
/****************************************************************
Copyright (C) Lucent Technologies 1997
All Rights Reserved

Permission to use, copy, modify, and distribute this software and
its documentation for any purpose and without fee is hereby
granted, provided that the above copyright notice appear in all
copies and that both that the copyright notice and this
permission notice and warranty disclaimer appear in supporting
documentation, and that the name Lucent Technologies or any of
its entities not be used in advertising or publicity pertaining
to distribution of the software without specific, written prior
permission.

LUCENT DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.
IN NO EVENT SHALL LUCENT OR ANY OF ITS ENTITIES BE LIABLE FOR ANY
SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
THIS SOFTWARE.
****************************************************************/

This is the version of awk described in "The AWK Programming Language",
by Al Aho, Brian Kernighan, and Peter Weinberger
(Addison-Wesley, 1988, ISBN 0-201-07981-X).

Changes, mostly bug fixes and occasional enhancements, are listed
in FIXES.  If you distribute this code further, please please please
distribute FIXES with it.  If you find errors, please report them
to bwk@@cs.princeton.edu.  Thanks.

The program itself is created by
	make
which should produce a sequence of messages roughly like this:

	yacc -d awkgram.y

conflicts: 43 shift/reduce, 85 reduce/reduce
	mv y.tab.c ytab.c
	mv y.tab.h ytab.h
	cc -c ytab.c
	cc -c b.c
	cc -c main.c
	cc -c parse.c
	cc maketab.c -o maketab
	./maketab >proctab.c
	cc -c proctab.c
	cc -c tran.c
	cc -c lib.c
	cc -c run.c
	cc -c lex.c
	cc ytab.o b.o main.o parse.o proctab.o tran.o lib.o run.o lex.o -lm

This produces an executable a.out; you will eventually want to
move this to some place like /usr/bin/awk.

If your system does not have yacc or bison (the GNU
equivalent), you must compile the pieces manually.  We have
included yacc output in ytab.c and ytab.h, and backup copies in
case you overwrite them.  We have also included a copy of
proctab.c so you do not need to run maketab.

NOTE: This version uses ANSI C, as you should also.  We have
compiled this without any changes using gcc -Wall and/or local C
compilers on a variety of systems, but new systems or compilers
may raise some new complaint; reports of difficulties are
welcome.

This also compiles with Visual C++ on all flavors of Windows,
*if* you provide versions of popen and pclose.  The file
missing95.c contains versions that can be used to get started
with, though the underlying support has mysterious properties,
the symptom of which can be truncated pipe output.  Beware.  The
file makefile.win gives hints on how to proceed; if you run
vcvars32.bat, it will set up necessary paths and parameters so
you can subsequently run nmake -f makefile.win.  Beware also that
when running on Windows under command.com, various quoting
conventions are different from Unix systems: single quotes won't
work around arguments, and various characters like % are
interpreted within double quotes.

This compiles without change on Macintosh OS X using gcc and
the standard developer tools.

This is also said to compile on Macintosh OS 9 systems, using the
file "buildmac" provided by Dan Allen (danallen@@microsoft.com),
to whom many thanks.

The version of malloc that comes with some systems is sometimes
astonishly slow.  If awk seems slow, you might try fixing that.
More generally, turning on optimization can significantly improve
awk's speed, perhaps by 1/3 for highest levels.
@


1.6
log
@Update to version 20041222; OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: README,v 1.5 2002/12/19 21:24:28 millert Exp $	*/
d33 1
a33 1
to bwk@@bell-labs.com.  Thanks.
@


1.5
log
@Update to the One True Awk version 20021213
@
text
@d1 1
a1 1
/*	$OpenBSD: README,v 1.4 2001/09/08 00:12:40 millert Exp $	*/
d60 1
a60 1
If your system is does not have yacc or bison (the GNU
d76 8
a83 2
the symptom of which can be truncated pipe output.  Beware.
The file makefile.win gives hints on how to proceed.
@


1.4
log
@Update to latest version of the One True Awk.  See the FIXES file
for details.
@
text
@d1 1
a1 1
/*	$OpenBSD: README,v 1.3 1999/04/18 17:06:29 millert Exp $	*/
d44 5
a48 5
	cc -O -c ytab.c
	cc -O -c b.c
	cc -O -c main.c
	cc -O -c parse.c
	cc -O maketab.c -o maketab
d50 6
a55 6
	cc -O -c proctab.c
	cc -O -c tran.c
	cc -O -c lib.c
	cc -O -c run.c
	cc -O -c lex.c
	cc -O ytab.o b.o main.o parse.o proctab.o tran.o lib.o run.o lex.o -lm
d72 1
a72 1
This also compiles with Visual C++ on Windows 95 and Windows NT,
d77 1
d79 4
a82 1
This is also said to compile on Macintosh systems, using the
d84 1
a84 2
to whom many thanks.  Dan also provided buildwin.bat, a simple
script for compiling on NT if you prefer.
d88 2
@


1.3
log
@March 5, 1999 version of the "one true awk"
@
text
@d1 1
a1 1
/*	$OpenBSD: README,v 1.2 1997/08/25 16:17:08 kstailey Exp $	*/
d41 1
a41 1
conflicts: 42 shift/reduce, 83 reduce/reduce
@


1.2
log
@August 1997 version of "the one true awk"
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d57 2
a58 2
This produces an executable a.out;  you will eventually
want to move this to some place like /usr/bin/awk.
d63 2
a64 1
case you overwrite them.
d72 10
a81 5
This also compiles with Visual C++ 4.1 on Windows 95 and
presumably Windows NT, *if* you provide versions of popen and
pclose.  The file missing95.c contains do-nothing versions that
can be used to get started with.  It is too much trouble to
figure out how to make these work for real.
a84 1

@


1.1
log
@AT&T awk, by B. W. Kernighan, with fixes from 4.4BSD and by me
@
text
@d1 1
d3 1
a3 1
Copyright (C) AT&T and Lucent Technologies 1996
d11 13
a23 13
documentation, and that the names of AT&T or Lucent Technologies
or any of their entities not be used in advertising or publicity
pertaining to distribution of the software without specific,
written prior permission.

AT&T AND LUCENT DISCLAIM ALL WARRANTIES WITH REGARD TO THIS
SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS. IN NO EVENT SHALL AT&T OR LUCENT OR ANY OF THEIR
ENTITIES BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE
USE OR PERFORMANCE OF THIS SOFTWARE.
d27 1
a27 1
by A. V. Aho, B. W. Kernighan, and P. J. Weinberger
d29 1
d37 1
a37 1
which should produce a longish sequence of messages roughly like this:
d39 1
a39 1
        yacc -d awkgram.y
d41 15
a55 19
conflicts: 43 shift/reduce, 85 reduce/reduce
        mv y.tab.c ytab.c
        mv y.tab.h ytab.h
        cc -O -c ytab.c
        cmp -s ytab.h prevytab.h || (cp ytab.h prevytab.h; echo change maketab)
change maketab
        cc -O -c b.c
        cc -O -c main.c
        cc -O -c parse.c
        cc -O maketab.c -o maketab
        ./maketab >proctab.c
        cc -O -c proctab.c
        cc -O -c tran.c
        cc -O -c lib.c
        cc -O -c run.c
        lex awklex.l
        mv lex.yy.c lexyy.c
        cc -O -c lexyy.c
        cc -O ytab.o lexyy.o b.o main.o parse.o proctab.o tran.o lib.o run.o   -lm
d60 16
a75 3
If your system is missing some of the components, e.g., yacc or lex,
you should be able to compile the pieces manually.  We have included
yacc output in ytab.c and ytab.h, and lex output in lexyy.c.
d77 2
a78 1
NOTE: This version uses ANSI C, as you should also.
a79 2
The version of malloc that comes with some systems (e.g., IRIX) is
astonishly slow.  If awk seems slow, you might try fixing that.
@
