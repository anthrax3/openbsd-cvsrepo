head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.6
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.2.0.38
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.42
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.40
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.36
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.34
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.32
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.30
	OPENBSD_5_0:1.2.0.28
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.26
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.24
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.20
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.22
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.18
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.16
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.14
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.12
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2015.08.13.19.13.28;	author miod;	state Exp;
branches;
next	1.4;
commitid	QZhVyD7WxxvCXibW;

1.4
date	2015.06.23.15.16.34;	author semarie;	state Exp;
branches;
next	1.3;
commitid	PQPTWpHw6X75ubEO;

1.3
date	2015.05.17.20.19.08;	author guenther;	state Exp;
branches;
next	1.2;
commitid	CuoIx9MPLElIHvnd;

1.2
date	2004.10.09.22.11.11;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.09.20.26.57;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Grow -P (POSIX output) and -t (POSIX output radix) support. Several 3rd-party
software depend upon this.

Requested by feinerer@@, ok millert@@; manpage bits ok jmc@@
@
text
@/*	$OpenBSD: util.h,v 1.4 2015/06/23 15:16:34 semarie Exp $	*/

/*
 * Placed in the public domain by Todd C. Miller <Todd.Miller@@courtesan.com>
 * on October 9, 2004.
 */

#define	MMAP(ptr, len, prot, flags, fd, off)	do {		\
	if ((ptr = mmap(NULL, len, prot, flags, fd, off)) == MAP_FAILED) { \
		usemmap = 0;						\
		if (errno != EINVAL)					\
			warn("mmap");					\
		else if ((ptr = malloc(len)) == NULL) {			\
			ptr = MAP_FAILED;				\
			warn("malloc");					\
		} else if (pread(fd, ptr, len, off) != len) {		\
			free(ptr);					\
			ptr = MAP_FAILED;				\
			warn("pread");					\
		}							\
	}								\
} while (0)

#define MUNMAP(addr, len)	do {					\
	if (usemmap)							\
		munmap(addr, len);					\
	else								\
		free(addr);						\
	addr = NULL;							\
} while (0)

extern int usemmap;
extern int dynamic_only;

struct xnlist {
	struct nlist nl;
	unsigned long n_size;
};
@


1.4
log
@This patch ensure that when an error is detected, the freed variables in
elf_symloadx() are reinitialised.

Else show_file() in nm.c will used these variables, even if they has
just been freed. (nm.c +689).

Problem found by afl.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: util.h,v 1.3 2015/05/17 20:19:08 guenther Exp $	*/
d34 5
@


1.3
log
@Add -D option for displaying the dynamic symbol table

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: util.h,v 1.2 2004/10/09 22:11:11 millert Exp $	*/
d29 1
@


1.2
log
@My MMAP/MUNMAP macros are too simple to copyright so place this in the
public domain.  OK mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: util.h,v 1.1 2004/10/09 20:26:57 mickey Exp $	*/
d32 1
@


1.1
log
@move out elf code into elf.c and generate 32 and 64 versions of it;
allow operation on size-mixed host-target as well as ensianess for
both a.out and elf (though a.out 64bit probably does not exist ;)
tested on hppa-sparc64-i386-vax intermixen
@
text
@d1 6
a6 1
/*	$OpenBSD$	*/
@

