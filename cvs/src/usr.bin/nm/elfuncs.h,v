head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.6
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.3.0.30
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.34
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.32
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.28
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.26
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.24
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.22
	OPENBSD_5_0:1.3.0.20
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.18
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.16
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.12
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.14
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.10
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.8
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.6
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.4
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2015.08.13.19.13.28;	author miod;	state Exp;
branches;
next	1.4;
commitid	QZhVyD7WxxvCXibW;

1.4
date	2015.06.23.15.02.58;	author semarie;	state Exp;
branches;
next	1.3;
commitid	Qfmm3ww0sj5ozCMw;

1.3
date	2006.09.30.14.34.13;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	2005.01.19.19.37.29;	author grange;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.09.20.26.57;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Grow -P (POSIX output) and -t (POSIX output radix) support. Several 3rd-party
software depend upon this.

Requested by feinerer@@, ok millert@@; manpage bits ok jmc@@
@
text
@/*	$OpenBSD: elfuncs.h,v 1.4 2015/06/23 15:02:58 semarie Exp $	*/

/*
 * Copyright (c) 2004 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

extern char *stab;

int	elf32_fix_header(Elf32_Ehdr *eh);
Elf32_Shdr*elf32_load_shdrs(const char *, FILE *, off_t, Elf32_Ehdr *);
Elf32_Phdr*elf32_load_phdrs(const char *, FILE *, off_t, Elf32_Ehdr *);
int	elf32_fix_shdrs(Elf32_Ehdr *eh, Elf32_Shdr *shdr);
int	elf32_fix_phdrs(Elf32_Ehdr *eh, Elf32_Phdr *phdr);
int	elf32_fix_sym(Elf32_Ehdr *eh, Elf32_Sym *sym);
int	elf32_size(Elf32_Ehdr *, Elf32_Shdr *, u_long *, u_long *, u_long *);
int	elf32_symloadx(const char *, FILE *, off_t, Elf32_Ehdr *, Elf32_Shdr *,
	    char *, long, struct xnlist **, struct xnlist ***, size_t *, int *,
	    const char *, const char *);
int	elf32_symload(const char *, FILE *, off_t, Elf32_Ehdr *, Elf32_Shdr *,
	    struct xnlist **, struct xnlist ***, size_t *, int *);

int	elf64_fix_header(Elf64_Ehdr *eh);
Elf64_Shdr*elf64_load_shdrs(const char *, FILE *, off_t, Elf64_Ehdr *);
Elf64_Phdr*elf64_load_phdrs(const char *, FILE *, off_t, Elf64_Ehdr *);
int	elf64_fix_shdrs(Elf64_Ehdr *eh, Elf64_Shdr *shdr);
int	elf64_fix_phdrs(Elf64_Ehdr *eh, Elf64_Phdr *phdr);
int	elf64_fix_sym(Elf64_Ehdr *eh, Elf64_Sym *sym);
int	elf64_size(Elf64_Ehdr *, Elf64_Shdr *, u_long *, u_long *, u_long *);
int	elf64_symloadx(const char *, FILE *, off_t, Elf64_Ehdr *, Elf64_Shdr *,
	    char *, long, struct xnlist **, struct xnlist ***, size_t *, int *,
	    const char *, const char *);
int	elf64_symload(const char *, FILE *, off_t, Elf64_Ehdr *, Elf64_Shdr *,
	    struct xnlist **, struct xnlist ***, size_t *, int *);
@


1.4
log
@corrects a read after bound that occurs in strcmp (line just
after the added bound check).

Found with afl.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: elfuncs.h,v 1.3 2006/09/30 14:34:13 kettenis Exp $	*/
d39 1
a39 1
	    char *, long, struct nlist **, struct nlist ***, size_t *, int *,
d42 1
a42 1
	    struct nlist **, struct nlist ***, size_t *, int *);
d52 1
a52 1
	    char *, long, struct nlist **, struct nlist ***, size_t *, int *,
d55 1
a55 1
	    struct nlist **, struct nlist ***, size_t *, int *);
@


1.3
log
@Some fixes for running nm on ELF binaries.
- Fix printing the symbol type of undefined symbols.
- Fall back onto the dynamic symbol table if the normal symbol table is not
  available (i.e. if the binary has been stripped).

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: elfuncs.h,v 1.2 2005/01/19 19:37:29 grange Exp $	*/
d39 1
a39 1
	    char *, struct nlist **, struct nlist ***, size_t *, int *,
d52 1
a52 1
	    char *, struct nlist **, struct nlist ***, size_t *, int *,
@


1.2
log
@Add elf{32,64}_load_phdrs() for loading program headers.

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: elfuncs.h,v 1.1 2004/10/09 20:26:57 mickey Exp $	*/
d38 3
d51 3
@


1.1
log
@move out elf code into elf.c and generate 32 and 64 versions of it;
allow operation on size-mixed host-target as well as ensianess for
both a.out and elf (though a.out 64bit probably does not exist ;)
tested on hppa-sparc64-i386-vax intermixen
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d33 1
d43 1
@

