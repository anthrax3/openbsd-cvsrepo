head	1.93;
access;
symbols
	OPENBSD_6_1_BASE:1.93
	OPENBSD_6_0:1.91.0.4
	OPENBSD_6_0_BASE:1.91
	OPENBSD_5_9:1.91.0.2
	OPENBSD_5_9_BASE:1.91
	OPENBSD_5_8:1.90.0.6
	OPENBSD_5_8_BASE:1.90
	OPENBSD_5_7:1.90.0.2
	OPENBSD_5_7_BASE:1.90
	OPENBSD_5_6:1.88.0.4
	OPENBSD_5_6_BASE:1.88
	OPENBSD_5_5:1.87.0.4
	OPENBSD_5_5_BASE:1.87
	OPENBSD_5_4:1.86.0.2
	OPENBSD_5_4_BASE:1.86
	OPENBSD_5_3:1.85.0.6
	OPENBSD_5_3_BASE:1.85
	OPENBSD_5_2:1.85.0.4
	OPENBSD_5_2_BASE:1.85
	OPENBSD_5_1_BASE:1.85
	OPENBSD_5_1:1.85.0.2
	OPENBSD_5_0:1.82.0.4
	OPENBSD_5_0_BASE:1.82
	OPENBSD_4_9:1.82.0.2
	OPENBSD_4_9_BASE:1.82
	OPENBSD_4_8:1.78.0.2
	OPENBSD_4_8_BASE:1.78
	OPENBSD_4_7:1.77.0.2
	OPENBSD_4_7_BASE:1.77
	OPENBSD_4_6:1.74.0.4
	OPENBSD_4_6_BASE:1.74
	OPENBSD_4_5:1.73.0.2
	OPENBSD_4_5_BASE:1.73
	OPENBSD_4_4:1.69.0.6
	OPENBSD_4_4_BASE:1.69
	OPENBSD_4_3:1.69.0.4
	OPENBSD_4_3_BASE:1.69
	OPENBSD_4_2:1.69.0.2
	OPENBSD_4_2_BASE:1.69
	OPENBSD_4_1:1.67.0.2
	OPENBSD_4_1_BASE:1.67
	OPENBSD_4_0:1.50.0.4
	OPENBSD_4_0_BASE:1.50
	OPENBSD_3_9:1.50.0.2
	OPENBSD_3_9_BASE:1.50
	OPENBSD_3_8:1.48.0.2
	OPENBSD_3_8_BASE:1.48
	OPENBSD_3_7:1.47.0.2
	OPENBSD_3_7_BASE:1.47
	OPENBSD_3_6:1.42.0.4
	OPENBSD_3_6_BASE:1.42
	OPENBSD_3_5:1.42.0.2
	OPENBSD_3_5_BASE:1.42
	OPENBSD_3_4:1.40.0.2
	OPENBSD_3_4_BASE:1.40
	OPENBSD_3_3:1.37.0.2
	OPENBSD_3_3_BASE:1.37
	OPENBSD_3_2:1.35.0.2
	OPENBSD_3_2_BASE:1.35
	OPENBSD_3_1:1.34.0.4
	OPENBSD_3_1_BASE:1.34
	OPENBSD_3_0:1.34.0.2
	OPENBSD_3_0_BASE:1.34
	OPENBSD_2_9_BASE:1.31
	OPENBSD_2_9:1.31.0.2
	OPENBSD_2_8:1.29.0.2
	OPENBSD_2_8_BASE:1.29
	OPENBSD_2_7:1.26.0.2
	OPENBSD_2_7_BASE:1.26
	OPENBSD_2_6:1.23.0.2
	OPENBSD_2_6_BASE:1.23
	OPENBSD_2_5:1.19.0.2
	OPENBSD_2_5_BASE:1.19
	OPENBSD_2_4:1.16.0.2
	OPENBSD_2_4_BASE:1.16
	OPENBSD_2_3:1.15.0.2
	OPENBSD_2_3_BASE:1.15
	OPENBSD_2_2:1.13.0.2
	OPENBSD_2_2_BASE:1.13
	OPENBSD_2_1:1.10.0.2
	OPENBSD_2_1_BASE:1.10
	OPENBSD_2_0:1.9.0.2
	OPENBSD_2_0_BASE:1.9
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.93
date	2017.01.03.22.19.31;	author jmc;	state Exp;
branches;
next	1.92;
commitid	Hsp3QLgn1cjXwBik;

1.92
date	2017.01.03.21.31.16;	author tedu;	state Exp;
branches;
next	1.91;
commitid	cr2jR3uz1Q8R6G8A;

1.91
date	2015.09.11.18.58.16;	author schwarze;	state Exp;
branches;
next	1.90;
commitid	4MGgaLoK56erjpAC;

1.90
date	2015.02.28.21.51.56;	author bentley;	state Exp;
branches;
next	1.89;
commitid	NNu2UZnsd5zmNVYD;

1.89
date	2014.12.03.19.39.57;	author jmc;	state Exp;
branches;
next	1.88;
commitid	0LxCoZHd3p2nYqvb;

1.88
date	2014.03.20.08.49.32;	author jmc;	state Exp;
branches;
next	1.87;

1.87
date	2014.01.20.05.07.48;	author schwarze;	state Exp;
branches;
next	1.86;

1.86
date	2013.03.14.20.30.41;	author halex;	state Exp;
branches;
next	1.85;

1.85
date	2012.01.05.13.16.10;	author sthen;	state Exp;
branches;
next	1.84;

1.84
date	2012.01.03.08.42.00;	author jmc;	state Exp;
branches;
next	1.83;

1.83
date	2012.01.02.23.19.45;	author pascal;	state Exp;
branches;
next	1.82;

1.82
date	2011.02.13.12.35.02;	author schwarze;	state Exp;
branches;
next	1.81;

1.81
date	2010.09.29.07.44.56;	author jmc;	state Exp;
branches;
next	1.80;

1.80
date	2010.09.20.07.03.10;	author jmc;	state Exp;
branches;
next	1.79;

1.79
date	2010.09.19.23.48.58;	author schwarze;	state Exp;
branches;
next	1.78;

1.78
date	2010.07.15.20.51.38;	author schwarze;	state Exp;
branches;
next	1.77;

1.77
date	2010.02.03.00.08.15;	author schwarze;	state Exp;
branches;
next	1.76;

1.76
date	2009.12.20.20.19.49;	author schwarze;	state Exp;
branches;
next	1.75;

1.75
date	2009.12.20.16.15.26;	author schwarze;	state Exp;
branches;
next	1.74;

1.74
date	2009.04.09.14.30.39;	author jmc;	state Exp;
branches;
next	1.73;

1.73
date	2009.02.08.17.33.01;	author jmc;	state Exp;
branches;
next	1.72;

1.72
date	2009.02.08.17.15.09;	author jmc;	state Exp;
branches;
next	1.71;

1.71
date	2009.01.28.08.09.36;	author jmc;	state Exp;
branches;
next	1.70;

1.70
date	2008.09.29.18.16.29;	author kili;	state Exp;
branches;
next	1.69;

1.69
date	2007.05.31.19.20.10;	author jmc;	state Exp;
branches;
next	1.68;

1.68
date	2007.05.30.04.41.34;	author jmc;	state Exp;
branches;
next	1.67;

1.67
date	2006.10.11.19.19.37;	author jmc;	state Exp;
branches;
next	1.66;

1.66
date	2006.10.11.19.16.27;	author jmc;	state Exp;
branches;
next	1.65;

1.65
date	2006.10.11.16.10.32;	author jmc;	state Exp;
branches;
next	1.64;

1.64
date	2006.10.11.13.03.31;	author jmc;	state Exp;
branches;
next	1.63;

1.63
date	2006.10.11.12.26.00;	author otto;	state Exp;
branches;
next	1.62;

1.62
date	2006.10.11.11.46.04;	author jmc;	state Exp;
branches;
next	1.61;

1.61
date	2006.10.11.10.03.28;	author jmc;	state Exp;
branches;
next	1.60;

1.60
date	2006.10.10.12.20.01;	author jmc;	state Exp;
branches;
next	1.59;

1.59
date	2006.10.10.10.55.05;	author jmc;	state Exp;
branches;
next	1.58;

1.58
date	2006.10.10.10.17.36;	author jmc;	state Exp;
branches;
next	1.57;

1.57
date	2006.10.05.07.52.30;	author otto;	state Exp;
branches;
next	1.56;

1.56
date	2006.10.05.07.41.04;	author jmc;	state Exp;
branches;
next	1.55;

1.55
date	2006.10.04.14.25.31;	author jmc;	state Exp;
branches;
next	1.54;

1.54
date	2006.10.02.08.05.32;	author jmc;	state Exp;
branches;
next	1.53;

1.53
date	2006.10.01.11.30.53;	author otto;	state Exp;
branches;
next	1.52;

1.52
date	2006.09.26.18.21.28;	author otto;	state Exp;
branches;
next	1.51;

1.51
date	2006.09.24.09.10.09;	author jmc;	state Exp;
branches;
next	1.50;

1.50
date	2005.12.27.12.24.37;	author jmc;	state Exp;
branches;
next	1.49;

1.49
date	2005.10.01.06.01.27;	author otto;	state Exp;
branches;
next	1.48;

1.48
date	2005.06.15.14.19.45;	author millert;	state Exp;
branches;
next	1.47;

1.47
date	2005.03.14.15.29.15;	author jmc;	state Exp;
branches;
next	1.46;

1.46
date	2005.03.14.15.25.38;	author jmc;	state Exp;
branches;
next	1.45;

1.45
date	2005.03.14.15.22.27;	author jmc;	state Exp;
branches;
next	1.44;

1.44
date	2005.03.13.00.17.19;	author jmc;	state Exp;
branches;
next	1.43;

1.43
date	2005.02.07.20.45.40;	author jaredy;	state Exp;
branches;
next	1.42;

1.42
date	2004.02.24.07.20.38;	author jmc;	state Exp;
branches;
next	1.41;

1.41
date	2004.01.23.19.38.13;	author millert;	state Exp;
branches;
next	1.40;

1.40
date	2003.09.02.18.50.06;	author jmc;	state Exp;
branches;
next	1.39;

1.39
date	2003.06.12.04.30.07;	author millert;	state Exp;
branches;
next	1.38;

1.38
date	2003.06.03.02.56.08;	author millert;	state Exp;
branches;
next	1.37;

1.37
date	2003.03.07.06.30.38;	author david;	state Exp;
branches;
next	1.36;

1.36
date	2002.11.14.02.57.27;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2002.05.17.15.04.32;	author millert;	state Exp;
branches;
next	1.34;

1.34
date	2001.08.22.23.43.13;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	2001.08.22.23.02.48;	author hugh;	state Exp;
branches;
next	1.32;

1.32
date	2001.08.22.16.50.50;	author heko;	state Exp;
branches;
next	1.31;

1.31
date	2001.03.14.22.08.33;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2000.11.10.05.10.26;	author aaron;	state Exp;
branches;
next	1.29;

1.29
date	2000.07.10.14.32.41;	author millert;	state Exp;
branches;
next	1.28;

1.28
date	2000.07.08.16.09.33;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	2000.06.07.15.25.30;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	2000.03.07.21.11.08;	author aaron;	state Exp;
branches;
next	1.25;

1.25
date	2000.03.06.03.15.59;	author aaron;	state Exp;
branches;
next	1.24;

1.24
date	99.12.04.22.42.31;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	99.10.07.19.15.24;	author aaron;	state Exp;
branches;
next	1.22;

1.22
date	99.06.05.01.21.25;	author aaron;	state Exp;
branches;
next	1.21;

1.21
date	99.05.26.03.29.58;	author aaron;	state Exp;
branches;
next	1.20;

1.20
date	99.05.02.16.34.33;	author aaron;	state Exp;
branches;
next	1.19;

1.19
date	99.03.17.17.36.30;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	99.02.24.10.25.45;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	98.11.11.23.01.43;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	98.09.26.19.54.43;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	97.11.13.08.30.33;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	97.11.04.08.19.32;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	97.08.27.08.57.55;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	97.06.17.05.53.44;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	97.06.17.05.35.44;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	96.12.23.04.58.09;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	96.09.01.07.26.45;	author tholo;	state Exp;
branches;
next	1.8;

1.8
date	96.09.01.04.56.25;	author tholo;	state Exp;
branches;
next	1.7;

1.7
date	96.09.01.04.30.16;	author tholo;	state Exp;
branches;
next	1.6;

1.6
date	96.08.31.22.40.19;	author tholo;	state Exp;
branches;
next	1.5;

1.5
date	96.06.26.05.33.08;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.06.11.11.33.31;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.05.28.12.31.18;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.15.01.11.16;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.13;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.13;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.93
log
@tweak previous;
@
text
@.\"	$OpenBSD: find.1,v 1.92 2017/01/03 21:31:16 tedu Exp $
.\" Copyright (c) 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	from: @@(#)find.1	8.1 (Berkeley) 6/6/93
.\"
.Dd $Mdocdate: January 3 2017 $
.Dt FIND 1
.Os
.Sh NAME
.Nm find
.Nd walk a file hierarchy
.Sh SYNOPSIS
.Nm find
.Op Fl dHhLXx
.Op Fl f Ar path
.Ar path ...
.Op Ar expression
.Sh DESCRIPTION
.Nm
recursively descends the directory tree for each
.Ar path
listed, evaluating an
.Ar expression
(composed of the
.Dq primaries
and
.Dq operators
listed below) in terms
of each file in the tree.
In the absence of an expression,
.Ic -print
is assumed.
If an expression is given,
but none of the primaries
.Ic -exec ,
.Ic -ls ,
.Ic -ok ,
.Ic -print ,
or
.Ic -print0
are specified, the given expression is effectively replaced by
.Cm \&( Ar given expression Cm \&)
.Ic -print .
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl d
Causes
.Nm
to visit directories in post-order
i.e. all entries in a directory will be acted on before the directory itself.
By default,
.Nm
visits directories in pre-order i.e. before their contents.
.It Fl f Ar path
Specifies a file hierarchy for
.Nm
to traverse.
File hierarchies may be specified without the
.Fl f
option if they are given immediately after any other options.
.It Fl H
Causes the file information and file type (see
.Xr stat 2 )
returned for each symbolic link encountered on the command line to be
those of the file referenced by the link, not the link itself.
If the referenced file does not exist, the file information and type will
be for the link itself.
File information of all symbolic links not on
the command line is that of the link itself.
.It Fl h
An alias for the
.Fl L
option.
This option exists for backwards compatibility.
.It Fl L
Causes the file information and file type (see
.Xr stat 2 )
returned for each symbolic link to be those of the file referenced by the
link, not the link itself.
If the referenced file does not exist, the file information and type will
be for the link itself.
.It Fl X
Permit
.Nm
to be safely used in conjunction with
.Xr xargs 1 .
If a file name contains any of the delimiting characters used by xargs,
a diagnostic message is displayed on standard error, and the file
is skipped.
The delimiting characters include single
.Pq Ql '
and double
.Pq Ql \&"
quotes, backslash
.Pq Ql \e ,
space, tab, and newline
.Pq Sq \en
characters.
Consider using
.Fl print0
instead.
.It Fl x
Prevents
.Nm
from descending into directories that have a device number different
than that of the file from which the descent began.
.El
.Pp
It is not an error to specify more than one of
the mutually exclusive options
.Fl H
and
.Fl L .
Where more than one of these options is specified,
the last option given overrides the others.
.Sh PRIMARIES
.Bl -tag -width Ds -compact
.It Ic -amin Ar n
True if the difference between the file last access time and the time
.Nm
was started, rounded up to the next full minute, is
.Ar n
minutes.
.Pp
.It Ic -anewer Ar file
True if the current file has a more recent last access time than
.Ar file .
.Pp
.It Ic -atime Ar n
True if the difference between the file last access time and the time
.Nm
was started, rounded up to the next full 24-hour period, is
.Ar n
24-hour periods.
.Pp
.It Ic -cmin Ar n
True if the difference between the time of last change of file status
information and the time
.Nm
was started, rounded up to the next full minute, is
.Ar n
minutes.
.Pp
.It Ic -cnewer Ar file
True if the current file has a more recent last change time than
.Ar file .
.Pp
.It Ic -ctime Ar n
True if the difference between the time of last change of file status
information and the time
.Nm
was started, rounded up to the next full 24-hour period, is
.Ar n
24-hour periods.
.Pp
.It Ic -delete
Delete found files and directories.
Always returns true.
This executes
from the current working directory as
.Nm
recurses down the tree.
It will not attempt to delete a filename with a
.Sq Pa /
character in its pathname relative to
.Sq Pa \&.
for security reasons.
Depth-first traversal processing is implied by this option.
The
.Ic -delete
primary will fail to delete a directory if it is not empty.
Following symlinks is incompatible with this option.
.Pp
.It Ic -depth
This primary always evaluates to true.
The same as specifying the
.Fl d
option.
.Pp
.It Ic -empty
True if the current file or directory is empty.
.Pp
.It Ic -exec Ar utility Oo Ar argument ... Oc \&;
.It Ic -exec Ar utility Oo Ar argument ... Oc {} +
Execute the specified
.Ar utility .
Optional arguments may be passed to the utility.
The expression must be terminated by a semicolon
.Pq Ql \&;
or a plus sign
.Pq Ql \&+ .
.Pp
If terminated by a semicolon, the
.Ar utility
is executed once per path.
If the string
.Qq {}
appears anywhere in the utility name or the
arguments it is replaced by the pathname of the current file.
.Pp
If terminated by a plus sign,
the pathnames for which the
primary is evaluated are aggregated into sets, and
.Ar utility
will be invoked once per set, similar to
.Xr xargs 1 .
If any invocation exits with a non-zero exit status, then
.Nm
will eventually do so as well, but this does not cause
.Nm
to exit early.
The string
.Qq {}
must appear, and must appear last.
Each set is limited to no more than 5,000 pathnames,
and is also limited such that the invocation of
.Ar utility
does not exceed
.Dv ARG_MAX .
.Pp
.It Ic -execdir Ar utility Oo Ar argument ... Oc \&;
Identical to the first form of the
.Ic -exec
primary with the exception that
.Ar utility
will be executed from the directory that holds
the current file.
The filename substituted for the string
.Qq {}
is not qualified.
.Pp
.It Xo
.Ic -flags
.Oo - Oc Ns Ar flags
.Xc
The
.Ar flags
are comma-separated symbolic file flags (see
.Xr chflags 1
for a list of valid flag names).
If the flags are preceded by a dash
.Pq Sq - ,
this primary evaluates to true if at least all specified
.Ar flags
are set in the file's flags.
If the flags are not preceded by a dash, this primary evaluates to true if the
flags specified exactly match those of the file.
.Pp
.It Ic -follow
This primary always evaluates to true.
The same as specifying the
.Fl L
option.
.Pp
.It Ic -fstype Ar type
True if the file is contained in a file system of type
.Ar type .
Two special file system types are recognized:
.Dq local
and
.Dq rdonly .
These do not describe actual file system types;
the former matches any file system physically mounted on the system where
.Nm
is being executed whereas the latter matches any file system which is
mounted read-only.
.Pp
.It Ic -group Ar gname
True if the file belongs to the group
.Ar gname .
If
.Ar gname
is numeric and there is no such group name, then
.Ar gname
is treated as a group ID.
.Pp
.It Ic -iname Ar pattern
Identical to the
.Ic -name
primary except that the matching is done in a case insensitive manner.
.Pp
.It Ic -inum Ar n
True if the file has inode number
.Ar n .
.Pp
.It Ic -links Ar n
True if the file has
.Ar n
links.
.Pp
.It Ic -ls
This primary always evaluates to true.
The following information for the current file is written to standard output:
its inode number, size in 512-byte blocks, file permissions, number of hard
links, owner, group, size in bytes, last modification time, and pathname.
If the file is a block or character special file, the major and minor numbers
will be displayed instead of the size in bytes.
If the file is a symbolic link, the pathname of the linked-to file will be
displayed preceded by
.Dq -> .
The format is identical to that produced by
.Dq ls -dils .
.Pp
.It Ic -maxdepth Ar n
True if the current search depth is less than or equal to what is specified in
.Ar n .
.Pp
.It Ic -mindepth Ar n
True if the current search depth is at least what is specified in
.Ar n .
.Pp
.It Ic -mmin Ar n
True if the difference between the file last modification time and the time
.Nm
was started, rounded up to the next full minute, is
.Ar n
minutes.
.Pp
.It Ic -mtime Ar n
True if the difference between the file last modification time and the time
.Nm
was started, rounded up to the next full 24-hour period, is
.Ar n
24-hour periods.
.Pp
.It Ic -name Ar pattern
True if the last component of the pathname being examined matches
.Ar pattern ,
which may use any of the special characters documented in
.Xr glob 7 .
.Pp
.It Ic -newer Ar file
True if the current file has a more recent last modification time than
.Ar file .
.Pp
.It Ic -nogroup
True if the file belongs to an unknown group.
.Pp
.It Ic -nouser
True if the file belongs to an unknown user.
.Pp
.It Ic -ok Ar utility Oo Ar argument ... Oc \&;
Identical to the
.Ic -exec
primary with the exception that
.Nm
requests user affirmation for the execution of
.Ar utility
by printing
a message to the terminal and reading a response.
If the response is other than
.Sq y
the command is not executed and the
value of the
.Ic ok
expression is false.
.Pp
.It Ic -path Ar pattern
True if the pathname being examined matches
.Ar pattern ,
which may use any of the special characters documented in
.Xr glob 7 .
Slashes
.Pq Ql /
are treated as normal characters and do not have to be
matched explicitly.
.Pp
.It Xo
.Ic -perm
.Oo - Oc Ns Ar mode
.Xc
The
.Ar mode
may be either symbolic (see
.Xr chmod 1 )
or an octal number.
If the mode is symbolic, a starting value of zero is assumed and the
mode sets or clears permissions without regard to the process's file mode
creation mask.
If the mode is octal, only bits 07777
.Pq Dv S_ISUID | S_ISGID | S_ISTXT | S_IRWXU | S_IRWXG | S_IRWXO
of the file's mode bits participate
in the comparison.
If the mode is preceded by a dash
.Pq Sq - ,
this primary evaluates to true
if at least all of the bits in the mode are set in the file's mode bits.
If the mode is not preceded by a dash, this primary evaluates to
true if the bits in the mode exactly match the file's mode bits.
Note, the first character of a symbolic mode may not be a dash.
.Pp
.It Ic -print
This primary always evaluates to true.
It prints the pathname of the current file to standard output, followed
by a newline
.Pq Ql \en
character.
.Pp
.It Ic -print0
This primary always evaluates to true.
It prints the pathname of the current file to standard output, followed
by a null character, suitable for use with the
.Fl 0
option to
.Xr xargs 1 .
.Pp
.It Ic -prune
This primary always evaluates to true.
It causes
.Nm
to not descend into the current file.
Note, the
.Ic -prune
primary has no effect if the
.Fl d
option was specified.
.Pp
.It Ic -size Ar n Ns Op Cm c
True if the file's size, rounded up, in 512-byte blocks is
.Ar n .
If
.Ar n
is followed by a
.Sq c ,
then the primary is true if the
file's size is
.Ar n
bytes.
.Pp
.It Ic -type Ar t
True if the file is of the specified type.
Possible file types are as follows:
.Pp
.Bl -tag -width flag -offset indent -compact
.It Cm b
block special
.It Cm c
character special
.It Cm d
directory
.It Cm f
regular file
.It Cm l
symbolic link
.It Cm p
FIFO
.It Cm s
socket
.El
.Pp
.It Ic -user Ar uname
True if the file belongs to the user
.Ar uname .
If
.Ar uname
is numeric and there is no such user name, then
.Ar uname
is treated as a user ID.
.Pp
.It Ic -xdev
This primary always evaluates to true.
The same as specifying the
.Fl x
option.
.El
.Pp
All primaries which take a numeric argument allow the number to be
preceded by a plus sign
.Pq Ql +
or a minus sign
.Pq Ql - .
A preceding plus sign means
.Dq more than n ,
a preceding minus sign means
.Dq less than n ,
and neither means
.Dq exactly n .
Exceptions are the primaries
.Ic mindepth
and
.Ic maxdepth .
.Sh OPERATORS
The primaries may be combined using the following operators.
The operators are listed in order of decreasing precedence.
.Pp
.Bl -tag -width "(expression)" -compact
.It Cm \&( Ar expression Cm \&)
This evaluates to true if the parenthesized expression evaluates to
true.
.Pp
.It Cm \&! Ar expression
This is the unary
.Tn NOT
operator.
It evaluates to true if the expression is false.
.Pp
.It Ar expression Cm -a Ar expression
.It Ar expression Cm -and Ar expression
.It Ar expression expression
The logical AND operator.
As it is implied by the juxtaposition of two expressions it does not
have to be specified.
The expression evaluates to true if both expressions are true.
The second expression is not evaluated if the first expression is false.
.Pp
.It Ar expression Cm -o Ar expression
.It Ar expression Cm -or Ar expression
The logical OR operator.
The expression evaluates to true if either the first or the second expression
is true.
The second expression is not evaluated if the first expression is true.
.El
.Pp
Operators, primaries, and arguments to primaries must be separate
arguments to
.Nm find ,
i.e. they should be separated by whitespace.
.Sh EXIT STATUS
The
.Nm
utility exits with a value of 0 on successful traversal of all path operands
or with a value >0 if an error occurred.
.Sh EXAMPLES
Print out a list of all the files whose names end in
.Dq \&.c :
.Pp
.Dl "$ find / -name '*.c'"
.Pp
Print out a list of all the files which are not both newer than
.Dq ttt
and owned by
.Dq wnj :
.Pp
.Dl "$ find / \e! \e( -newer ttt -user wnj \e)"
.Pp
Print out a list of all core files on local file systems:
.Pp
.Dl "$ find / \e! -fstype local -prune -o -name '*.core'"
.Pp
Find all files in
.Pa /usr/src
ending in a dot and single digit, but skip directory
.Pa /usr/src/gnu :
.Pp
.Dl "$ find /usr/src -path /usr/src/gnu -prune -o -name \e*.[0-9]"
.Pp
Find and remove all *.jpg and *.gif files under the current working
directory:
.Pp
.Dl "$ find . \e( -name \e*.jpg -o -name \e*.gif \e) -exec rm {} \e;"
or
.Dl "$ find . \e( -name \e*.jpg -o -name \e*.gif \e) -print0 | xargs -0r rm"
.Sh SEE ALSO
.Xr chflags 1 ,
.Xr chmod 1 ,
.Xr locate 1 ,
.Xr ls 1 ,
.Xr whereis 1 ,
.Xr which 1 ,
.Xr xargs 1 ,
.Xr stat 2 ,
.Xr fts 3 ,
.Xr glob 7 ,
.Xr symlink 7
.Sh STANDARDS
The
.Nm
utility is compliant with the
.St -p1003.1-2008
specification.
.Pp
The options
.Op Fl dfhXx ,
primaries
.Ic -amin ,
.Ic -anewer ,
.Ic -cmin ,
.Ic -cnewer ,
.Ic -delete ,
.Ic -empty ,
.Ic -execdir ,
.Ic -flags ,
.Ic -follow ,
.Ic -fstype ,
.Ic -iname ,
.Ic -inum ,
.Ic -ls ,
.Ic -maxdepth ,
.Ic -mindepth ,
.Ic -mmin ,
and
.Ic -print0 ,
and operators
.Fl or
and
.Fl and ,
are extensions to that specification.
.Pp
Historically, the
.Fl d ,
.Fl L ,
and
.Fl x
options were implemented using the primaries
.Ic -depth ,
.Ic -follow ,
and
.Ic -xdev .
These primaries always evaluated to true.
As they were really global variables that took effect before the traversal
began, some legal expressions could have unexpected results.
An example is the expression
.Dq -print -o -depth .
As
.Cm -print
always evaluates to true, the standard order of evaluation
implies that
.Cm -depth
would never be evaluated.
This is not the case.
.Pp
Historic implementations of the
.Ic -exec
and
.Ic -ok
primaries did not replace the string
.Qq {}
in the utility name or the
utility arguments if it had preceding or following non-whitespace characters.
This version replaces it no matter where in the utility name or arguments
it appears.
.Sh HISTORY
A
.Nm
command appeared in
.At v1 .
.Sh CAVEATS
The special characters used by
.Nm
are also special characters to many shell programs.
In particular, the characters
.Ql * ,
.Ql \&[ ,
.Ql \&] ,
.Ql \&? ,
.Ql \&( ,
.Ql \&) ,
.Ql \&! ,
.Ql \e ,
and
.Ql \&;
may have to be escaped from the shell.
.Pp
As file names may contain whitespace and shell metacharacters,
passing the output of
.Nm
to other programs requires some care:
.Pp
.Dl "$ find . -name \e*.jpg | xargs rm"
or
.Dl "$ rm `find . -name \e*.jpg`"
.Pp
would, given files
.Dq important\ .jpg
and
.Dq important ,
remove
.Dq important .
Use the
.Ic -print0
or
.Ic -exec
primaries instead.
.Pp
As there is no delimiter separating options and file names or file
names and the
.Ar expression ,
it is difficult to specify files named
.Dq -xdev
or
.Sq \&! .
These problems are handled by the
.Fl f
option and the
.Xr getopt 3
.Sq --
construct.
@


1.92
log
@add -delete option which can simplify the common case of wanting to delete
lots of files without the arcane -exec or error prone xargs.
code from freebsd.
ok millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.91 2015/09/11 18:58:16 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: September 11 2015 $
d186 1
a186 1
Delete found files and/or directories.
d193 1
a193 1
.Dq Pa /
d195 1
a195 1
.Dq Pa \&.
d202 1
@


1.91
log
@delete bogus escaping from ellipsis to forestall cargo cult effects
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.90 2015/02/28 21:51:56 bentley Exp $
d34 1
a34 1
.Dd $Mdocdate: February 28 2015 $
d185 17
d607 1
@


1.90
log
@Reduce usage of predefined strings in manpages.

Predefined strings are not very portable across troff implementations,
and they make the source much harder to read. Usually the intended
character can be written directly.

No output changes, except for two instances where the incorrect escape
was used in the first place.

tweaks + ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.89 2014/12/03 19:39:57 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: December 3 2014 $
d44 1
a44 1
.Ar path ...\&
@


1.89
log
@document -o and -a; requested by yon
i had to tweak their descriptions a little to make the text read nicely

while here, fix some minor issues:
- kill some unneeded Xo/Xc
- kill some unneeded Tn
- replace "\*Gt" with ">"
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.88 2014/03/20 08:49:32 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: March 20 2014 $
d392 1
a392 4
.Po
.Dv S_ISUID \*(Ba S_ISGID \*(Ba S_ISTXT \*(Ba
.Dv S_IRWXU \*(Ba S_IRWXG \*(Ba S_IRWXO
.Pc
@


1.88
log
@- use more portable -o in examples, requested by millert and sobrado
- tweak STANDARDS to make the note about -and and -or a little clearer
- remove some gnu clutter

ok millert sobrado
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.87 2014/01/20 05:07:48 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: January 20 2014 $
d194 2
a195 10
.It Xo
.Ic -exec Ar utility
.Op argument ...
.No ;
.Xc
.It Xo
.Ic -exec Ar utility
.Op argument ...
.No {} +
.Xc
d232 1
a232 5
.It Xo
.Ic -execdir Ar utility
.Op argument ...
.No ;
.Xc
d311 1
a311 1
.Dq -\*(Gt .
d353 1
a353 5
.It Xo
.Ic -ok Ar utility
.Op argument ...
.No ;
.Xc
d511 1
d514 1
a514 5
The
.Cm -and
operator is the logical
.Tn AND
operator.
d520 1
d522 1
a522 5
The
.Cm -or
operator is the logical
.Tn OR
operator.
d536 1
a536 1
or with a value \*(Gt0 if an error occurred.
@


1.87
log
@Obvious .Xr fixes, found while testing mandocdb(8).
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.86 2013/03/14 20:30:41 halex Exp $
d34 1
a34 1
.Dd $Mdocdate: March 14 2013 $
d574 1
a574 1
.Dl "$ find / \e! -fstype local -prune -or -name '*.core'"
d581 1
a581 1
.Dl "$ find /usr/src -path /usr/src/gnu -prune -or -name \e*.[0-9]"
d586 1
a586 1
.Dl "$ find . \e( -name \e*.jpg -or -name \e*.gif \e) -exec rm {} \e;"
d588 1
a588 1
.Dl "$ find . \e( -name \e*.jpg -or -name \e*.gif \e) -print0 | xargs -0r rm"
d609 2
a610 2
.Op Fl dfhXx
and primaries
d627 5
a631 1
.Ic -print0
a632 3
The
.Ic -iname
primary was inspired by GNU find.
a655 9
.Pp
The operator
.Cm -or
was implemented as
.Cm -o ,
and the operator
.Cm -and
was implemented as
.Cm -a .
@


1.86
log
@-follow is the same as -L, not -H
second occurance pointed out by Jeremie Courreges-Anglas, thanks!

ok guenther@@ on the first occurance
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.85 2012/01/05 13:16:10 sthen Exp $
d34 1
a34 1
.Dd $Mdocdate: January 5 2012 $
d116 1
a116 2
If a file name contains any of the delimiting characters used by
.Xr xargs ,
@


1.85
log
@-execdir only supports the first form of -exec with ; suffix, not the new
form with {} + suffix; make this clear in the manual. Text suggested by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.84 2012/01/03 08:42:00 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: January 3 2012 $
d276 1
a276 1
.Fl H
d636 1
a636 1
.Fl H ,
@


1.84
log
@- use more consistent markup
- reformat the list of primaries such that the two -exec items are
listed without vertical whitespace seperating them
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.83 2012/01/02 23:19:45 pascal Exp $
d34 1
a34 1
.Dd $Mdocdate: January 2 2012 $
d246 1
a246 1
Identical to the
@


1.83
log
@Add support for "find ... -exec foo {} \+".

From the manpage:

If terminated by a plus sign (``+''), the pathnames for which the
primary is evaluated are aggregated into sets, and utility will
be invoked once per set, similar to xargs(1).  If any invocation
exits with non-zero exit status, then find will eventually do so
as well, but this does not cause find to exit early.  The string
``{}'' must appear, and must appear last.  Each set is limited to
no more than 5,000 pathnames, and is also limited such that the
invocation of utility does not exceed ARG_MAX.

Code comes from NetBSD, written by John Hawkinson.  Tested by eivinde at
terraplane dot org and myself for quite some time.

ok miod@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.82 2011/02/13 12:35:02 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: February 13 2011 $
d147 1
a147 1
.Bl -tag -width Ds
d154 1
d158 1
d165 1
d173 1
d177 1
d185 1
d191 1
d194 1
d203 1
a203 2
.No {}
+
d221 1
a221 2
If terminated by a plus sign
.Pq Dq \&+ ,
d227 1
a227 1
If any invocation exits with non-zero exit status, then
d233 1
a233 1
.Dq {}
d240 1
d255 1
d272 1
d278 1
d291 1
d300 1
d305 1
d309 1
d314 1
d327 1
d331 1
d335 1
d342 1
d349 1
d355 1
d359 1
d362 1
d365 1
d385 1
d395 1
d422 1
d429 1
d437 1
d448 1
d460 1
d490 1
@


1.82
log
@As noticed by Clint Pachl <pachl at ecentryx dot com>,
it is easy to miss a blank character in an example,
so explicitely state that whitespace causes the issue;
while here, mention that shell metacharacters cause danger as well;
ok otto@@ sthen@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.81 2010/09/29 07:44:56 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: September 29 2010 $
d192 8
a199 3
True if the program named
.Ar utility
returns a zero value as its exit status.
d202 7
a208 1
.Pq Ql \&; .
d213 5
d219 5
a223 1
will be executed from the directory from which
d225 6
a230 3
was executed.
.Pp
Since
d232 2
a233 5
is executed every time a match is made,
it is often more efficient to pipe the output of
.Nm
to
.Xr xargs 1 .
@


1.81
log
@various EXIT STATUS fixes; from Daniel Dickman
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.80 2010/09/20 07:03:10 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: September 20 2010 $
d646 2
a647 1
Passing the output of
@


1.80
log
@oops! missing quote in previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.79 2010/09/19 23:48:58 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: September 19 2010 $
d503 5
@


1.79
log
@Shorten text pointing from -X to -print0.
Add pointer from -print0 to xargs(1).
Add an EXAMPLE to demonstrate \( ... -or ... \) -print0.
Stop advertising -print | xargs, which is dangerous.
Add a CAVEAT about passing find(1) output to other programs.

Mostly from joachimschipper dot nl;
using feedback from jmc@@ and sthen@@, and tweaked myself;
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.78 2010/07/15 20:51:38 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: July 15 2010 $
d530 1
a530 1
.Dl "$ find . \e( -name \e*.jpg -or -name \e*.gif \e) -exec rm {} \e;
@


1.78
log
@More delimiters that need quoting inside macros, hunted down by jmc@@,
who asked me to commit because he is just running out of the door.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.77 2010/02/03 00:08:15 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: February 3 2010 $
d129 1
a129 1
Alternatively, the
d131 1
a131 5
primary may be used in conjunction with the
.Fl 0
option to
.Xr xargs 1 ,
allowing all file names to be processed safely.
d385 4
a388 1
by a null character.
d527 2
a528 1
Find and remove all *.jpg files in the current working directory:
d530 1
a530 1
.Dl "$ find . -name \e*.jpg -exec rm {} \e;"
d532 1
a532 1
.Dl "$ find . -name \e*.jpg | xargs rm"
d640 20
@


1.77
log
@make it clear that -iname supports globbing;
refer to glob(7) for more precision;
add some relevant and remove some not so relevant .Xrs;
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.76 2009/12/20 20:19:49 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: December 20 2009 $
d630 1
a630 1
.Ql [ ,
d633 1
a633 1
.Ql ( ,
@


1.76
log
@Use the standard wording, requested by jmc@@.
Actually, this is much closer to the original submission by Daniel Dickmann.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.75 2009/12/20 16:15:26 schwarze Exp $
d274 3
a276 4
True if the last component of the pathname being examined
matches
.Ar pattern .
Case insensitive.
d316 3
a318 12
.Ar pattern .
Special shell pattern matching characters
.Pf ( Ql [ ,
.Ql \&] ,
.Ql * ,
and
.Ql \&? )
may be used as part of
.Ar pattern .
These characters may be matched explicitly by escaping them with a
backslash
.Pq Ql \e .
d347 3
a349 12
.Ar pattern .
Special shell pattern matching characters
.Pf ( Ql [ ,
.Ql \&] ,
.Ql * ,
and
.Ql \&? )
may be used as part of
.Ar pattern .
These characters may be matched explicitly by escaping them with a
backslash
.Pq Ql \e .
d537 1
d543 1
a543 3
.Xr getgrent 3 ,
.Xr getpwent 3 ,
.Xr strmode 3 ,
@


1.75
log
@find -LH was -L, but must be -H according to POSIX;
patch from Daniel Dickman <didickman at gmail dot com> via tech@@,
though i'm updating the manual in a different way;
ok millert@@  "looks good" deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.74 2009/04/09 14:30:39 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: April 9 2009 $
a98 3
This option overrides
.Fl L
given earlier on the command line.
a110 3
This option overrides
.Fl H
given earlier on the command line.
d142 8
@


1.74
log
@min/maxdepth do not observe +-;
reported by x, but different fix taken
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.73 2009/02/08 17:33:01 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: February 8 2009 $
d99 3
d114 3
@


1.73
log
@updates to IEEE Std 1003.1-2008;
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.72 2009/02/08 17:15:09 jmc Exp $
d469 4
@


1.72
log
@bump the posix reference in STANDARDS to IEEE Std 1003.1-2008, with a few
updates to follow;
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.71 2009/01/28 08:09:36 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: January 28 2009 $
a577 1
.Ic -path ,
@


1.71
log
@since -g is always overridden by -l in ls(1), the equivalent of the
-ls primary is better described as "ls -dils" than "ls -dgils";
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.70 2008/09/29 18:16:29 kili Exp $
d34 1
a34 1
.Dd $Mdocdate: September 29 2008 $
d557 1
a557 1
.St -p1003.1-2004
@


1.70
log
@
Add a missing `|' to the description of -perm.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.69 2007/05/31 19:20:10 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: May 31 2007 $
d288 1
a288 1
.Dq ls -dgils .
@


1.69
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.68 2007/05/30 04:41:34 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate$
d379 1
a379 1
.Dv S_ISUID \*(Ba S_ISGID \*(Ba S_ISTXT
@


1.68
log
@- use a consistent text for STANDARDS
- note which options are extensions to POSIX
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.67 2006/10/11 19:19:37 jmc Exp $
d34 1
a34 1
.Dd December 4, 1999
@


1.67
log
@hmm, slightly reword the previous to sound less like a susv3 cut/paste,
thus also avoiding a line split that was annoying me;
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.66 2006/10/11 19:16:27 jmc Exp $
d556 1
a556 1
utility syntax is a superset of the syntax specified by the
d558 1
a558 1
standard.
d581 1
a581 2
are extensions to
.St -p1003.1-2004 .
@


1.66
log
@some important information about how find(1) works was tucked away
under -print, and slightly inaccurate anway; move it up into
DESCRIPTION and correct it;

from otto and myself
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.65 2006/10/11 16:10:32 jmc Exp $
d69 1
a69 1
are specified, the given expression shall be effectively replaced by
@


1.65
log
@improve markup a wee bit;
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.64 2006/10/11 13:03:31 jmc Exp $
d61 11
a396 9
If neither
.Ic -exec ,
.Ic -ls ,
.Ic -ok ,
nor
.Ic -print0
is specified, the given expression shall be effectively replaced by
.Cm \&( Ns Ar given\& expression Ns Cm \&)
.Ic -print .
@


1.64
log
@a little macro cleanup;
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.63 2006/10/11 12:26:00 otto Exp $
d215 1
a215 2
.Op Fl
.Ar flags
d356 1
a356 2
.Op Fl
.Ar mode
d655 1
a655 1
.Dq \&! .
d660 1
a660 1
.Dq --
@


1.63
log
@Suggest to use xargs(1) and give an example; started by jmc, ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.62 2006/10/11 11:46:04 jmc Exp $
d369 4
a372 11
.Pf ( Dv S_ISUID
|
.Dv S_ISGID
|
.Dv S_ISTXT
|
.Dv S_IRWXU
|
.Dv S_IRWXG
|
.Dv S_IRWXO )
@


1.62
log
@in EXAMPLES:
- make the first example positive (we have enough using `!')
- remove second example (it is too similar to others)
- remove `-print' from all examples
- put the examples in a more logical order
- no need to escape dot, as otto points out i have been escaping
it needlessly for years ;(

ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.61 2006/10/11 10:03:28 jmc Exp $
d191 8
d545 2
@


1.61
log
@for -depth, -follow, and -xdev, note that they always evaluate to true;
ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.60 2006/10/10 12:20:01 jmc Exp $
d511 1
a511 1
Print out a list of all the files whose names do not end in
d514 1
a514 8
.Dl "$ find / \e! -name '*.c' -print"
.Pp
Print out a list of all the files owned by user
.Dq wnj
that are newer than the file
.Dq ttt :
.Pp
.Dl "$ find / -newer ttt -user wnj -print"
d521 1
a521 5
.Dl "$ find / \e! \e( -newer ttt -user wnj \e) -print"
.Pp
Find and remove all *.jpg files in the current working directory:
.Pp
.Dl "$ find . -name \e*\e.jpg -exec rm {} \e;"
d525 1
a525 1
.Dl "$ find / \e! -fstype local -prune -or -name '*.core' -print"
d532 5
a536 1
.Dl "$ find /usr/src -path /usr/src/gnu -prune -or -name \e*\e.[0-9]"
@


1.60
log
@get the spacing right for -ok too; i missed this in my previous commit.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.59 2006/10/10 10:55:05 jmc Exp $
d166 1
d223 1
d451 1
@


1.59
log
@get the spacing right for -exec and -execdir; ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.58 2006/10/10 10:17:36 jmc Exp $
d308 5
a312 1
.It Ic -ok Ar utility Op argument ... ;
@


1.58
log
@add an example of -exec {} and remove a less useful example; ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.57 2006/10/05 07:52:30 otto Exp $
d171 5
a175 1
.It Ic -exec Ar utility Op argument ... ;
d190 5
a194 1
.It Ic -execdir Ar utility Op argument ... ;
@


1.57
log
@-iname is a primary, not an option. ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.56 2006/10/05 07:41:04 jmc Exp $
d515 1
a515 5
Print out a list of all the files that are either owned by
.Dq wnj
or
that are newer than
.Dq ttt :
d517 1
a517 1
.Dl "$ find / \e( -newer ttt -or -user wnj \e) -print"
@


1.56
log
@document -depth and -xdev: although we have options which do the same,
they are not included in posix;

make the description of -follow match that of -depth and -xdev,
especially since its option equivalent is preferred;

ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.55 2006/10/04 14:25:31 jmc Exp $
d578 1
a578 1
option was inspired by GNU find.
@


1.55
log
@- bump latest posix version
- note additional primaries which are not posix conformant and,
conversely, one which was not previously conformant and now is

this was prompted by a mail to either freebsd or netbsd lists, but i
cannot for the life of me find it - thanks anyway!

ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.54 2006/10/02 08:05:32 jmc Exp $
d165 4
d214 3
a216 1
Follow symbolic links.
d436 4
@


1.54
log
@remove some unneccessary escaping;
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.53 2006/10/01 11:30:53 otto Exp $
d540 1
a540 1
.St -p1003.2
d543 3
a545 1
The options and primaries
d547 1
d549 1
d551 2
a556 1
.Ic -links ,
a557 1
.Ic -mmin ,
d560 2
a561 1
.Ic -execdir ,
d565 1
a565 1
.St -p1003.2 .
@


1.53
log
@rewrite the piece about separate arguments to not confuse jmc@@.
ok jmc@@ kettenis@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.52 2006/09/26 18:21:28 otto Exp $
d203 1
a203 1
.Pq Sq \- ,
d252 1
a252 1
.Dq \-> .
d254 1
a254 1
.Dq ls \-dgils .
d294 1
a294 1
.It Ic \&-ok Ar utility Op argument ... ;
d307 1
a307 1
.Ic \&ok
d355 1
a355 1
.Pq Sq \- ,
d436 1
a436 1
.Pq Ql \- .
d579 1
a579 1
.Dq \-print \-o \-depth .
d581 1
a581 1
.Cm \-print
d584 1
a584 1
.Cm \-depth
d591 1
a591 1
.Cm \-o ,
d595 1
a595 1
.Cm \-a .
d640 1
a640 1
.Dq \-\-
@


1.52
log
@clear up some confusion between operands and operators; with & ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.51 2006/09/24 09:10:09 jmc Exp $
d481 4
a484 5
All operators and primaries must be separate arguments to
.Nm find .
Primaries which themselves take arguments expect each argument
to be a separate argument to
.Nm find .
@


1.51
log
@do not suggest that !expression and (expression) (without spaces) is valid;

"from sander bos, with credit to peter bex"
ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.50 2005/12/27 12:24:37 jmc Exp $
d55 1
a55 1
.Dq operands
d76 3
a78 2
File hierarchies may also be specified as the operands immediately
following the options.
d481 1
a481 1
All operands and primaries must be separate arguments to
@


1.50
log
@move the BUGS section to CAVEATS, since both the points listed
are hardly bugs;

prompted by j. c. roberts;
ok krw millert ian
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.49 2005/10/01 06:01:27 otto Exp $
d447 1
a447 1
.It Cm \&( Ns Ar expression Ns Cm \&)
d451 1
a451 1
.It Cm \&! Ns Ar expression
@


1.49
log
@Fix description of -flags. Noted by Magnus Ehman in PR 4527. ok jmc@@ jaredy@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.48 2005/06/15 14:19:45 millert Exp $
d612 1
a612 1
.Sh BUGS
@


1.48
log
@no more whiteouts
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.47 2005/03/14 15:29:15 jmc Exp $
d203 3
a205 3
this primary evaluates to true if the file in question has at least
one of the file flags specified by
.Ar flags .
@


1.47
log
@make the OPERATORS list -compact: this avoids the nasty line split
between 2 list items that are logically linked;
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.46 2005/03/14 15:25:38 jmc Exp $
d42 1
a42 1
.Op Fl dHhLWXx
a98 4
.It Fl W
Let
.Nm
take whiteouts into account when scanning directories.
a404 3
.It Cm W
whiteout (currently, these won't even be visible without also specifying
.Fl W )
a641 5
.Pp
The
.Fl W
option is probably not the most elegant way to handle whiteouts.
It may be replaced by a more sophisticated algorithm eventually.
@


1.46
log
@add an example showing how to use -prune to skip a directory whilst
searching;

help from otto; requested by fgsch;
ok otto@@ fgsch@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.45 2005/03/14 15:22:27 jmc Exp $
d452 2
a453 1
.Bl -tag -width (expression)
@


1.45
log
@simplify the description of -d to avoid confusion;
ok otto@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.44 2005/03/13 00:17:19 jmc Exp $
d522 7
@


1.44
log
@maintain alphabetical order in primaries list;
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.43 2005/02/07 20:45:40 jaredy Exp $
d67 2
a68 3
to perform a depth-first traversal, i.e., directories
are visited in post-order and all entries in a directory will be acted
on before the directory itself.
d71 1
a71 4
visits directories in pre-order, i.e., before their contents.
Note, the default is
.Em not
a breadth-first traversal.
@


1.43
log
@rename "file" to "path" in usage, it's clearer

from Michael Knudsen <e@@molioner.dk>

ok jmc millert

and rearrange man page EXAMPLES while here
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.42 2004/02/24 07:20:38 jmc Exp $
d297 2
a300 2
.It Ic -nogroup
True if the file belongs to an unknown group.
@


1.42
log
@- remove double spaces in the examples
- `W' before `X'
- sync usage()

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.41 2004/01/23 19:38:13 millert Exp $
d43 2
a44 2
.Op Fl f Ar file
.Ar file Op Ar ...
d49 1
a49 1
.Ar file
d76 1
a76 1
.It Fl f Ar file
a495 3
The following examples are shown as given to the shell:
.Bl -tag -width findx
.It Li "$ find / \e! -name '*.c' -print"
d497 4
a500 2
.Dq \&.c .
.It Li "$ find / -newer ttt -user wnj -print"
d503 5
a507 4
that are newer
than the file
.Dq ttt .
.It Li "$ find / \e! \e( -newer ttt -user wnj \e) -print"
d511 4
a514 2
.Dq wnj .
.It Li "$ find / \e( -newer ttt -or -user wnj \e) -print"
d519 7
a525 4
.Dq ttt .
.It Li "$ find / \e! -fstype local -prune -or -name '*.core' -print"
Print out a list of all core files on local file systems.
.El
@


1.41
log
@Clarify find -X and Xr xargs(1).  Based on a diff from and OK by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.40 2003/09/02 18:50:06 jmc Exp $
d42 1
a42 1
.Op Fl dHhLXxW
d103 4
a136 4
.It Fl W
Let
.Nm
take whiteouts into account when scanning directories.
d498 1
a498 1
.It Li "$ find  /  \e!  -name  \*q*.c\*q  -print"
d501 1
a501 1
.It Li "$ find  /  -newer  ttt  -user  wnj  -print"
d507 1
a507 1
.It Li "$ find  /  \e!  \e(  -newer  ttt  -user  wnj  \e)  -print"
d512 1
a512 1
.It Li "$ find  /  \e(  -newer  ttt  -or  -user wnj  \e)  -print"
d518 1
a518 1
.It Li "$ find  /  \e!  -fstype  local  -prune  -or  -name '*.core' -print"
@


1.40
log
@escape punctuation;
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.39 2003/06/12 04:30:07 millert Exp $
d121 1
a121 1
As an alternative, the
d123 1
a123 1
function may be used safely in conjunction with the
d125 3
a127 2
argument to
.Xr xargs 1 .
d527 1
@


1.39
log
@Add an example using -prune at Theo's request.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.38 2003/06/03 02:56:08 millert Exp $
d287 1
a287 1
.Ql ? )
d323 1
a323 1
.Ql ? )
d616 1
a616 1
.Ql ? ,
d619 1
a619 1
.Ql ! ,
d631 1
a631 1
.Dq ! .
@


1.38
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.37 2003/03/07 06:30:38 david Exp $
d517 2
@


1.37
log
@spelling errors/typos
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.36 2002/11/14 02:57:27 deraadt Exp $
d16 1
a16 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.36
log
@use $ or # before commands in examples
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.35 2002/05/17 15:04:32 millert Exp $
d99 1
a99 1
This option exists for backwards compatability.
@


1.35
log
@The standard way to get info on symlinks is -L, not -h; Peter Werner
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.34 2001/08/22 23:43:13 deraadt Exp $
d501 1
a501 1
.It Li "find  /  \e!  -name  \*q*.c\*q  -print"
d504 1
a504 1
.It Li "find  /  -newer  ttt  -user  wnj  -print"
d510 1
a510 1
.It Li "find  /  \e!  \e(  -newer  ttt  -user  wnj  \e)  -print"
d515 1
a515 1
.It Li "find  /  \e(  -newer  ttt  -or  -user wnj  \e)  -print"
@


1.34
log
@expression is optional
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.33 2001/08/22 23:02:48 hugh Exp $
d46 1
a46 1
.Op Fl HdhXxW
a67 9
.It Fl H
Causes the file information and file type (see
.Xr stat 2 )
returned for each symbolic link encountered on the command line to be
those of the file referenced by the link, not the link itself.
If the referenced file does not exist, the file information and type will
be for the link itself.
File information of all symbolic links not on
the command line is that of the link itself.
d86 9
d96 5
@


1.33
log
@Since we're in pedant mode again, we might as well be thorough. It's
bad form to assume that the absence of an expression will default to
"-print", as one may still encounter versions of find where this is
not the case. The examples given are all careful to use an explicit
"-print", so follow their lead and mark the expression as a required
field even though find will run without one.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.32 2001/08/22 16:50:50 heko Exp $
d49 1
a49 1
.Ar expression
d62 3
@


1.32
log
@o Expression is an optional argument to find(1);
  noticed by Brian Poole <raj@@cerias.purdue.edu>
o File is not an optional argument
o The section name referenced in beginning of the manual page
  is "operators" so don't confuse people by speaking about
  "operands"
Ok aaron@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.30 2000/11/10 05:10:26 aaron Exp $
d49 1
a49 1
.Op Ar expression
d59 1
a59 1
.Dq operators
@


1.31
log
@formatting error; m@@procyon.com
@
text
@d48 2
a49 2
.Op Ar file ...
.Ar expression
d59 1
a59 1
.Dq operands
@


1.30
log
@- Section shuffling: comply to the section ordering outlined in mdoc(7).
- Some .Nm trimming.
- .Sh AUTHOR -> .Sh AUTHORS
- Other miscellaneous fixes here and there.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.29 2000/07/10 14:32:41 millert Exp $
d495 1
a495 1
.Dq .c .
@


1.29
log
@Xr chflags(1)
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.28 2000/07/08 16:09:33 millert Exp $
d597 5
a636 5
.Sh HISTORY
A
.Nm
command appeared in
.At v1 .
@


1.28
log
@Add a -flags option similar to -perm but for filke flags (ala
chflags).  Adapted from FreeBSD.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.27 2000/06/07 15:25:30 deraadt Exp $
d515 1
@


1.27
log
@-iname support; karls@@inet.no
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.26 2000/03/07 21:11:08 aaron Exp $
d194 17
@


1.26
log
@Various cleanup.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.25 2000/03/06 03:15:59 aaron Exp $
d216 5
d521 1
d533 3
@


1.25
log
@Add HISTORY sections; from FreeBSD.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.24 1999/12/04 22:42:31 millert Exp $
d530 1
a530 1
.Fl H
d603 2
a604 2
option is probably not the most elegant way to handle whiteouts. It may
be replaced by a more sophisticated algorithm eventually.
@


1.24
log
@o use nanosecond precision with the -newer option
o add -anewer and -cnewer options like GNU find.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.23 1999/10/07 19:15:24 aaron Exp $
d71 2
a72 1
be for the link itself.  File information of all symbolic links not on
d143 1
a143 1
.Ar file  .
d159 1
a159 1
.Ar file  .
d190 2
a191 2
the current file.  The filename substituted for
the string
d210 1
a210 1
.Ar gname  .
d218 1
a218 1
.Ar n  .
d255 1
a255 1
.Ar pattern  .
d263 1
a263 1
.Ar pattern  .
d269 1
a269 1
.Ar file  .
d291 1
a291 1
.Ar pattern  .
d299 1
a299 1
.Ar pattern  .
d315 1
a315 1
.Xr chmod  1  )
d372 1
a372 1
.Ar n  .
d407 1
a407 1
.Ar uname  .
d605 5
@


1.23
log
@Some Xr to find(1), locate(1), whatis(1), whereis(1), which(1), etc., as
appropriate.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.22 1999/06/05 01:21:25 aaron Exp $
d38 1
a38 1
.Dd August 31, 1996
d140 3
d156 3
@


1.22
log
@- remove trailing white space
- remove arguments from .Os macros
- remove arguments from .Nm macros, where appropriate
- some more Dq/Sq/Ql insanity
- still lots to do in the usr.bin tree... :/
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.21 1999/05/26 03:29:58 aaron Exp $
d488 2
@


1.21
log
@arguments to -perm option are `[-]mode', not `[-mode]'; from NetBSD
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.20 1999/05/02 16:34:33 aaron Exp $
d51 1
a51 1
.Nm find
d56 5
a60 1
(composed of the ``primaries'' and ``operands'' listed below) in terms
d67 2
a68 2
.Xr stat  2  )
returned for each symbolic link encountered on the command line to be 
d71 1
a71 1
be for the link itself.  File information of all symbolic links not on 
d75 3
a77 3
.Nm find
to perform a depth\-first traversal, i.e. directories
are visited in post\-order and all entries in a directory will be acted
d80 2
a81 2
.Nm find
visits directories in pre\-order, i.e. before their contents.
d83 2
a84 2
.Ar not
a breadth\-first traversal.
d87 1
a87 1
.Nm find
d93 1
a93 1
.Xr stat  2  ) ,
d107 9
a115 2
The delimiting characters include single (``''') and double (``"'')
quotes, backslash (``\e''), space, tab and newline (``\en'') characters.
d124 1
a124 1
.Nm 
d134 1
a134 1
.It Ic -amin Ar n 
d136 1
a136 1
.Nm find
d140 1
a140 1
.It Ic -atime Ar n 
d142 2
a143 2
.Nm find
was started, rounded up to the next full 24\-hour period, is
d145 2
a146 2
24\-hour periods.
.It Ic -cmin Ar n 
d149 1
a149 1
.Nm find
d153 1
a153 1
.It Ic -ctime Ar n 
d156 2
a157 2
.Nm find
was started, rounded up to the next full 24\-hour period, is
d159 1
a159 1
24\-hour periods.
d162 1
a162 1
.It Ic -exec Ar utility Op argument ... ; 
d167 5
a171 2
The expression must be terminated by a semicolon (`;').
If the string ``{}'' appears anywhere in the utility name or the
d175 1
a175 1
.Nm find
d177 2
a178 4
.It Ic -execdir Ar utility Op argument ... ; 
The
.Ic \&-execdir
primary is identical to the
d184 3
a186 1
the string ``{}'' is not qualified.
d189 1
a189 1
.It Ic -fstype Ar type 
d192 4
a195 1
Two special file system types are recognized: ``local'' and ``rdonly''.
d198 2
a199 2
.Nm find
is being executed, and the latter matches any file system which is
d201 1
a201 1
.It Ic -group Ar gname 
d209 1
a209 1
.It Ic -inum Ar n 
d212 1
a212 1
.It Ic -links Ar n 
d219 1
a219 1
its inode number, size in 512\-byte blocks, file permissions, number of hard
d223 5
a227 3
If the file is a symbolic link, the pathname of the linked\-to file will be
displayed preceded by ``\->''.
The format is identical to that produced by ``ls \-dgils''.
d234 1
a234 1
.It Ic -mmin Ar n 
d236 1
a236 1
.Nm find
d240 1
a240 1
.It Ic -mtime Ar n 
d242 2
a243 2
.Nm find
was started, rounded up to the next full 24\-hour period, is
d245 2
a246 17
24\-hour periods.
.It Ic \&-ok Ar utility Ns Op argument ... ; 
The
.Ic \&-ok
primary is identical to the
.Ic -exec
primary with the exception that
.Nm find
requests user affirmation for the execution of
.Ar utility
by printing
a message to the terminal and reading a response.
If the response is other than ``y'' the command is not executed and the
value of the
.Ic \&ok
expression is false.
.It Ic -name Ar pattern 
d249 6
a254 1
Special shell pattern matching characters (``['', ``]'', ``*'', and ``?'')
d258 3
a260 2
backslash (`\e').
.It Ic -newer Ar file 
d267 16
a282 1
.It Ic -path Ar pattern 
d285 6
a290 1
Special shell pattern matching characters (``['', ``]'', ``*'', and ``?'')
d294 5
a298 2
backslash (`\e').
Slashes (`/') are treated as normal characters and do not have to be
d327 3
a329 1
If the mode is preceded by a dash (``\-''), this primary evaluates to true
d331 1
a331 1
If the mode is not preceded by a dash (``\-''), this primary evaluates to
d333 1
a333 1
Note, the first character of a symbolic mode may not be a dash (``\-'').
d337 3
a339 1
by a newline (``\en'') character.
d347 1
a347 1
.Cm \&( Ns Ar given\& expression Ns Cm \&) 
d356 1
a356 1
.Nm find
d363 2
a364 2
.It Ic -size Ar n Ns Op Cm c 
True if the file's size, rounded up, in 512\-byte blocks is
d368 3
a370 1
is followed by a ``c'', then the primary is true if the
d374 1
a374 1
.It Ic -type Ar t 
d380 1
a380 1
whiteout (currently, these won't even be visible without also specifying 
d398 1
a398 1
.It Ic -user Ar uname 
d409 10
a418 3
preceded by a plus sign (``+'') or a minus sign (``\-'').
A preceding plus sign means ``more than n'', a preceding minus sign means
``less than n'', and neither means ``exactly n'' .
d422 2
a423 2
.Bl -tag -width (expression) 
.It Cm \&( Ns Ar expression Ns Cm \&) 
d427 1
a427 1
.It Cm \&! Ns Ar expression 
d433 2
a434 2
.It Ar expression Cm -and Ar expression 
.It Ar expression expression 
d445 1
a445 1
.It Ar expression Cm -or Ar expression 
d457 1
a457 1
.Nm find  .
d460 1
a460 1
.Nm find  .
d465 2
a466 1
Print out a list of all the files whose names do not end in ``.c''.
d468 5
a472 2
Print out a list of all the files owned by user ``wnj'' that are newer
than the file ``ttt''.
d474 4
a477 2
Print out a list of all the files which are not both newer than ``ttt''
and owned by ``wnj''.
d479 5
a483 2
Print out a list of all the files that are either owned by ``wnj'' or
that are newer than ``ttt''.
d496 1
a496 1
.Nm find
d532 8
a539 3
An example is the expression ``\-print \-o \-depth''.
As \-print always evaluates to true, the standard order of evaluation
implies that \-depth would never be evaluated.
d542 8
a549 2
The operator ``-or'' was implemented as ``\-o'', and the operator ``-and''
was implemented as ``\-a''.
d555 3
a557 1
primaries did not replace the string ``{}'' in the utility name or the
d563 1
a563 1
.Nm find
d565 12
a576 2
In particular, the characters ``*'', ``['', ``]'', ``?'', ``('', ``)'',
``!'', ``\e'' and ``;'' may have to be escaped from the shell.
d581 4
a584 1
it is difficult to specify files named ``-xdev'' or ``!''.
d589 2
a590 1
``--'' construct.
d594 1
a594 1
option is probably not the most elegant way to handle whiteouts, it may
@


1.20
log
@grammar; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.19 1999/03/17 17:36:30 espie Exp $
d267 5
a271 1
.It Ic -perm Op Fl Ns Ar mode 
@


1.19
log
@Add -W option so -type W gets a chance to work.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.18 1999/02/24 10:25:45 deraadt Exp $
d126 1
a126 1
was started, rounded up to the next full minutes period, is
d128 1
a128 1
minutes periods.
d139 1
a139 1
was started, rounded up to the next full minutes period, is
d141 1
a141 1
minutes periods.
d218 1
a218 1
was started, rounded up to the next full minutes period, is
d220 1
a220 1
minutes periods.
@


1.18
log
@-{a,c,m}min are extensions to posix
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.17 1998/11/11 23:01:43 aaron Exp $
d46 1
a46 1
.Op Fl HdhXx
d113 1
a113 1
.Nm find
d116 4
d337 2
a338 1
whiteout
d505 5
@


1.17
log
@remove redundant .Pp macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.16 1998/09/26 19:54:43 aaron Exp $
d438 2
d446 1
@


1.16
log
@usr.bin/ man page fixes, f-m.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.15 1997/11/13 08:30:33 deraadt Exp $
a59 1
.Pp
@


1.15
log
@Add the primaries -mmin, -amin, -cmin to find, similar to the GNU find; wosch
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.14 1997/11/04 08:19:32 deraadt Exp $
d51 1
a51 1
.Nm Find
d63 2
a64 4
The
.Fl H
option causes the file information and file type (see
.Xr stat  2  ) ,
d71 1
a71 3
The
.Fl d
option causes
d82 2
a83 4
.It Fl f
The
.Fl f
option specifies a file hierarchy for
d89 1
a89 3
The
.Fl h
option causes the file information and file type (see
d96 1
a96 3
The
.Fl X
option is a modification to permit
d104 2
a105 2
The delimiting characters include single (`` ' '') and double (`` " '')
quotes, backslash (``\e''), space, tab and newline characters.
d111 1
a111 1
.Xr xargs 1
d113 1
a113 3
The
.Fl x
option prevents
d153 1
a153 1
The expression must be terminated by a semicolon (``;'').
d156 1
a156 1
.Ar Utility
d166 1
a166 1
.Ar Utility
a177 1
the
d188 1
a188 1
is treated as a group id.
d231 3
a233 1
requests user affirmation for the execution of the utility by printing
d237 1
a237 1
.Ar \&ok
d246 1
a246 1
backslash (``\e'').
d261 2
a262 2
backslash (``\e'').
Slashes (``/'') are treated as normal characters and do not have to be
d271 1
a271 1
mode sets or clears permissions without regard to the process' file mode
d289 2
a290 2
If the mode is not preceded by a dash, this primary evaluates to true if
the bits in the mode exactly match the file's mode bits.
d295 1
a295 1
by a newline character.
d358 1
a358 1
is treated as a user id.
d364 1
a364 1
``less than n'' and neither means ``exactly n'' .
a407 1
.Pp
d427 1
a428 1
.Xr getgrent 3 ,
@


1.14
log
@clarify
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.13 1997/08/27 08:57:55 deraadt Exp $
d132 6
d144 7
d225 6
@


1.13
log
@execdir is an extension of course
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.12 1997/06/17 05:53:44 millert Exp $
d448 1
a448 1
.Fl s
d451 5
a455 2
options were implemented using the primaries ``\-depth'', ``\-follow'',
and ``\-xdev''.
@


1.12
log
@Back out last change.  Allowing no path to mean "." causes problems
with getopts vs. predicates.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.11 1997/06/17 05:35:44 millert Exp $
d431 1
a431 1
The options and the
d439 2
a440 1
.Ic -mindepth
d443 1
a443 1
primaries are extensions to
@


1.11
log
@If no paths are specified, use "."
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.10 1996/12/23 04:58:09 millert Exp $
d57 1
a57 2
of each file in the tree.  If no files are specified, the current
directory is used.
@


1.10
log
@Add -execdir support.
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.9 1996/09/01 07:26:45 tholo Exp $
d57 2
a58 1
of each file in the tree.
@


1.9
log
@Specify that new primaries -empty, -maxdepth and -mindepth are extensions
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.8 1996/09/01 04:56:25 tholo Exp $
d159 10
@


1.8
log
@Add support for -empty
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.7 1996/09/01 04:30:16 tholo Exp $
d422 1
d427 3
a429 1
.Ic -ls 
@


1.7
log
@Add support for -mindepth while at it
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.6 1996/08/31 22:40:19 tholo Exp $
d145 2
@


1.6
log
@Add support for -maxdepth option
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.5 1996/06/26 05:33:08 deraadt Exp $
d195 4
a198 1
True if the current search depth is less than what is specified in
@


1.5
log
@rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD: find.1,v 1.4 1996/06/11 11:33:31 deraadt Exp $
d38 1
a38 1
.Dd June 6, 1993
d194 3
@


1.4
log
@document that -print0 is an alternative to -X
@
text
@d1 1
a36 1
.\"	$Id: find.1,v 1.3 1996/05/28 12:31:18 deraadt Exp $
@


1.3
log
@support whiteouts; netbsd pr#2394; mike.long@@analog.com
@
text
@d36 1
a36 1
.\"	$Id: find.1,v 1.2 1996/01/15 01:11:16 deraadt Exp $
d116 6
@


1.2
log
@from netbsd:
Document the -follow option, per David Brownlee <abs@@mono.city.ac.uk>
in PR #1113.
@
text
@d36 1
a36 1
.\"	$Id: find.1,v 1.9 1996/01/14 03:52:44 thorpej Exp $
d301 2
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
.\"	$Id: find.1,v 1.8 1994/07/18 09:55:31 cgd Exp $
d151 2
a405 1
.Ic -inum ,
d408 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
