head	1.17;
access;
symbols
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.6
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.4
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.15.0.6
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.4
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.14
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.12
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.10
	OPENBSD_5_0:1.13.0.8
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.6
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.4
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.12.0.28
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.24
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.22
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.20
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.18
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.16
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.14
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.12
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.10
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.8
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.6
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_8:1.6.0.10
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.8
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.6
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2015.03.15.00.41.28;	author millert;	state Exp;
branches;
next	1.16;
commitid	IbVxlqGw2UipKdDr;

1.16
date	2015.01.16.06.40.07;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	Uu5nFG3wCl0LACBb;

1.15
date	2014.01.10.04.53.35;	author guenther;	state Exp;
branches;
next	1.14;

1.14
date	2013.04.23.18.08.40;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2009.10.27.23.59.38;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.07.06.22.35.59;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.26.07.27.29;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.03.02.56.08;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.16.21.27.46;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.07.12.05.17.03;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.02.05.07.55.36;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.10.04.01.05.25;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.05.18.19.02.57;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.06.30.23.47.44;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.06.17.20.58.45;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.33.11;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.13;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.13;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@tzfile.h is an internal header that should never have been installed.
What's worse, the tzfile.h that gets installed is over 20 years old
and doesn't match the real tzfile.h in libc/time.  This makes the
tree safe for /usr/include/tzfile.h removal.  The TM_YEAR_BASE
define has been moved to time.h temporarily until its usage is
replaced by 1900 in the tree.  Actual removal of tzfile.h is pending
a ports build.  Based on a diff from deraadt@@
@
text
@/*	$OpenBSD: ls.c,v 1.16 2015/01/16 06:40:07 deraadt Exp $	*/

/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/stat.h>

#include <err.h>
#include <errno.h>
#include <stdio.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#include <limits.h>
#include <utmp.h>
#include <pwd.h>
#include <grp.h>
#include <fts.h>
#include "find.h"
#include "extern.h"

/* Derived from the print routines in the ls(1) source code. */

static void printlink(char *);
static void printtime(time_t);

#define NAME_WIDTH	8
#define	DATELEN		64

void
printlong(char *name, char *accpath, struct stat *sb)
{
	char modep[15];

	(void)printf("%6llu %4lld ", (unsigned long long)sb->st_ino,
	    (long long)sb->st_blocks);
	(void)strmode(sb->st_mode, modep);
	(void)printf("%s %3u %-*.*s %-*.*s ", modep, sb->st_nlink, 
	    NAME_WIDTH, UT_NAMESIZE, user_from_uid(sb->st_uid, 0), 
	    NAME_WIDTH, UT_NAMESIZE, group_from_gid(sb->st_gid, 0));

	if (S_ISCHR(sb->st_mode) || S_ISBLK(sb->st_mode))
		(void)printf("%3d, %3d ", major(sb->st_rdev),
		    minor(sb->st_rdev));
	else
		(void)printf("%8lld ", (long long)sb->st_size);
	printtime(sb->st_mtime);
	(void)printf("%s", name);
	if (S_ISLNK(sb->st_mode))
		printlink(accpath);
	(void)putchar('\n');
}

static void
printtime(time_t ftime)
{
	char f_date[DATELEN];
	static time_t now;
	static int now_set = 0;

	if (! now_set) {
		now = time(NULL);
		now_set = 1;
	}

	/*
	 * convert time to string, and print
	 */
	if (strftime(f_date, sizeof(f_date),
	    (ftime + SIXMONTHS <= now || ftime > now) ? "%b %e  %Y" :
	    "%b %e %H:%M", localtime(&ftime)) == 0)
		f_date[0] = '\0';

	printf("%s ", f_date);
}

static void
printlink(char *name)
{
	int lnklen;
	char path[PATH_MAX];

	if ((lnklen = readlink(name, path, sizeof(path) - 1)) == -1) {
		warn("%s", name);
		return;
	}
	path[lnklen] = '\0';
	(void)printf(" -> %s", path);
}
@


1.16
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.15 2014/01/10 04:53:35 guenther Exp $	*/
a38 1
#include <tzfile.h>
a54 1
#define	SIXMONTHS	((DAYSPERNYEAR / 2) * SECSPERDAY)
@


1.15
log
@Copy changes from ls -l to find -ls: print future times with year and use
strftime() instead of parsing ctime()'s output.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.14 2013/04/23 18:08:40 deraadt Exp $	*/
a31 1
#include <sys/param.h>
d41 1
d109 1
a109 1
	char path[MAXPATHLEN];
@


1.14
log
@handle large ino_t; ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.13 2009/10/27 23:59:38 deraadt Exp $	*/
d55 2
d85 8
a92 2
	int i;
	char *longstring;
d94 7
a100 3
	longstring = ctime(&ftime);
	for (i = 4; i < 11; ++i)
		(void)putchar(longstring[i]);
d102 1
a102 10
#define	SIXMONTHS	((DAYSPERNYEAR / 2) * SECSPERDAY)
	if (ftime + SIXMONTHS > time(NULL))
		for (i = 11; i < 16; ++i)
			(void)putchar(longstring[i]);
	else {
		(void)putchar(' ');
		for (i = 20; i < 24; ++i)
			(void)putchar(longstring[i]);
	}
	(void)putchar(' ');
@


1.13
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.12 2003/07/06 22:35:59 deraadt Exp $	*/
d61 2
a62 1
	(void)printf("%6u %4lld ", sb->st_ino, (long long)sb->st_blocks);
@


1.12
log
@proto into scope
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.11 2003/06/26 07:27:29 deraadt Exp $	*/
a30 5

#ifndef lint
/*static char sccsid[] = "from: @@(#)ls.c	8.1 (Berkeley) 6/6/93";*/
static char rcsid[] = "$OpenBSD: ls.c,v 1.11 2003/06/26 07:27:29 deraadt Exp $";
#endif /* not lint */
@


1.11
log
@bring protypes into scope.  this requires some quirky handling, but in
the end everything is much clearer; ok tedu (itojun might like to see
how ifconfig looks after this)
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.10 2003/06/03 02:56:08 millert Exp $	*/
d34 1
a34 1
static char rcsid[] = "$OpenBSD: ls.c,v 1.10 2003/06/03 02:56:08 millert Exp $";
d50 3
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.9 2002/02/16 21:27:46 millert Exp $	*/
d34 1
a34 1
static char rcsid[] = "$OpenBSD: ls.c,v 1.9 2002/02/16 21:27:46 millert Exp $";
d48 2
d59 1
a59 4
printlong(name, accpath, sb)
	char *name;			/* filename to print */
	char *accpath;			/* current valid path to filename */
	struct stat *sb;		/* stat buffer */
d61 1
a61 1
	char modep[15], *user_from_uid(), *group_from_gid();
d82 1
a82 2
printtime(ftime)
	time_t ftime;
d104 1
a104 2
printlink(name)
	char *name;
@


1.9
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.8 2001/07/12 05:17:03 deraadt Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d34 1
a34 1
static char rcsid[] = "$OpenBSD: ls.c,v 1.8 2001/07/12 05:17:03 deraadt Exp $";
@


1.8
log
@first pass at a -Wall cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.7 2001/02/05 07:55:36 deraadt Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: ls.c,v 1.7 2001/02/05 07:55:36 deraadt Exp $";
d55 2
a56 2
static void printlink __P((char *));
static void printtime __P((time_t));
@


1.7
log
@short names by default; danh@@wzrd.com
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.6 1998/10/04 01:05:25 millert Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: ls.c,v 1.6 1998/10/04 01:05:25 millert Exp $";
d68 1
a68 1
	(void)printf("%6u %4qd ", sb->st_ino, sb->st_blocks);
d78 1
a78 1
		(void)printf("%8qd ", sb->st_size);
@


1.6
log
@Take sizeof correct variable in readlink; martin@@gbg.netman.se
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.5 1998/05/18 19:02:57 deraadt Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: ls.c,v 1.5 1998/05/18 19:02:57 deraadt Exp $";
d58 2
d70 3
a72 3
	(void)printf("%s %3u %-*s %-*s ", modep, sb->st_nlink, UT_NAMESIZE,
	    user_from_uid(sb->st_uid, 0), UT_NAMESIZE,
	    group_from_gid(sb->st_gid, 0));
@


1.5
log
@readlink len-1
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.4 1997/06/30 23:47:44 millert Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: ls.c,v 1.4 1997/06/30 23:47:44 millert Exp $";
d114 1
a114 1
	if ((lnklen = readlink(name, path, sizeof name-1)) == -1) {
@


1.4
log
@Fix printf format when listing inode number and #blocks to
unsigned and quad respectively to correspond to actual types.
Half from NetBSD (jtc).
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.3 1997/06/17 20:58:45 kstailey Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: ls.c,v 1.3 1997/06/17 20:58:45 kstailey Exp $";
d112 1
a112 1
	char path[MAXPATHLEN + 1];
d114 1
a114 1
	if ((lnklen = readlink(name, path, MAXPATHLEN)) == -1) {
@


1.3
log
@(foo *)NULL -> NULL
@
text
@d1 1
a1 1
/*	$OpenBSD: ls.c,v 1.2 1996/06/26 05:33:11 deraadt Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: ls.c,v 1.2 1996/06/26 05:33:11 deraadt Exp $";
d66 1
a66 1
	(void)printf("%6lu %4ld ", sb->st_ino, sb->st_blocks);
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: ls.c,v 1.1.1.1 1995/10/18 08:45:13 deraadt Exp $";
d96 1
a96 1
	if (ftime + SIXMONTHS > time((time_t *)NULL))
@


1.1
log
@Initial revision
@
text
@d1 2
d38 1
a38 1
static char rcsid[] = "$Id: ls.c,v 1.6 1994/12/24 16:30:51 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
