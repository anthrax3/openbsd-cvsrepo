head	1.22;
access;
symbols
	OPENBSD_6_2:1.22.0.6
	OPENBSD_6_2_BASE:1.22
	OPENBSD_6_1:1.22.0.4
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.21.0.4
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.20.0.6
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.19.0.4
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.18.0.8
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.4
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.2
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.17.0.4
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.2
	OPENBSD_5_0:1.16.0.2
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.15.0.26
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.24
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.20
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.22
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.18
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.16
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.14
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.12
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.10
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.8
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.6
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.4
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.2
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.12.0.6
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.4
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.11.0.6
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.4
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.8.0.8
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.6
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.4
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.22
date	2017.01.03.21.31.16;	author tedu;	state Exp;
branches;
next	1.21;
commitid	cr2jR3uz1Q8R6G8A;

1.21
date	2015.10.05.15.25.16;	author deraadt;	state Exp;
branches;
next	1.20;
commitid	uWZKXvI9OxOC3pzV;

1.20
date	2015.01.19.15.30.52;	author krw;	state Exp;
branches;
next	1.19;
commitid	NY1hHZats0xLzgJV;

1.19
date	2014.05.18.08.10.00;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2012.12.05.23.20.25;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2012.01.02.23.19.45;	author pascal;	state Exp;
branches;
next	1.16;

1.16
date	2011.04.21.01.14.21;	author jacekm;	state Exp;
branches;
next	1.15;

1.15
date	2004.09.15.18.43.45;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.26.07.27.29;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.03.02.56.08;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.16.21.27.46;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2000.07.08.16.09.33;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2000.06.07.15.25.30;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	99.12.04.22.42.31;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.11.13.08.30.32;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.12.23.04.58.08;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	96.10.24.03.46.03;	author tholo;	state Exp;
branches;
next	1.5;

1.5
date	96.09.01.04.56.25;	author tholo;	state Exp;
branches;
next	1.4;

1.4
date	96.09.01.04.30.15;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	96.08.31.22.40.18;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.33.07;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.13;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.13;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.22
log
@add -delete option which can simplify the common case of wanting to delete
lots of files without the arcane -exec or error prone xargs.
code from freebsd.
ok millert
@
text
@/*	$OpenBSD: extern.h,v 1.21 2015/10/05 15:25:16 deraadt Exp $ */
/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)extern.h	8.1 (Berkeley) 6/6/93
 */

void	 brace_subst(char *, char **, char *, int);
void	*emalloc(size_t);
void	*ereallocarray(void *, size_t, size_t);
PLAN	*find_create(char ***);
int	 find_execute(PLAN *, char **);
PLAN	*find_formplan(char **);
int	find_traverse(PLAN *, int (*)(PLAN *, void *), void *);
PLAN	*not_squish(PLAN *);
OPTION	*option(char *);
PLAN	*or_squish(PLAN *);
PLAN	*paren_squish(PLAN *);
int	plan_cleanup(PLAN *, void *);
struct stat;
void	 printlong(char *, char *, struct stat *);
int	 queryuser(char **);
void	 show_path(int);

PLAN	*c_amin(char *, char ***, int);
PLAN	*c_anewer(char *, char ***, int);
PLAN	*c_atime(char *, char ***, int);
PLAN	*c_cmin(char *, char ***, int);
PLAN	*c_cnewer(char *, char ***, int);
PLAN	*c_ctime(char *, char ***, int);
PLAN	*c_delete(char *, char ***, int);
PLAN	*c_depth(char *, char ***, int);
PLAN	*c_empty(char *, char ***, int);
PLAN	*c_exec(char *, char ***, int);
PLAN	*c_execdir(char *, char ***, int);
PLAN	*c_flags(char *, char ***, int);
PLAN	*c_follow(char *, char ***, int);
PLAN	*c_fstype(char *, char ***, int);
PLAN	*c_group(char *, char ***, int);
PLAN	*c_iname(char *, char ***, int);
PLAN	*c_inum(char *, char ***, int);
PLAN	*c_links(char *, char ***, int);
PLAN	*c_ls(char *, char ***, int);
PLAN	*c_maxdepth(char *, char ***, int);
PLAN	*c_mindepth(char *, char ***, int);
PLAN	*c_mmin(char *, char ***, int);
PLAN	*c_name(char *, char ***, int);
PLAN	*c_newer(char *, char ***, int);
PLAN	*c_nogroup(char *, char ***, int);
PLAN	*c_nouser(char *, char ***, int);
PLAN	*c_path(char *, char ***, int);
PLAN	*c_perm(char *, char ***, int);
PLAN	*c_print(char *, char ***, int);
PLAN	*c_print0(char *, char ***, int);
PLAN	*c_prune(char *, char ***, int);
PLAN	*c_size(char *, char ***, int);
PLAN	*c_type(char *, char ***, int);
PLAN	*c_user(char *, char ***, int);
PLAN	*c_xdev(char *, char ***, int);
PLAN	*c_openparen(char *, char ***, int);
PLAN	*c_closeparen(char *, char ***, int);
PLAN	*c_mtime(char *, char ***, int);
PLAN	*c_not(char *, char ***, int);
PLAN	*c_or(char *, char ***, int);

extern int ftsoptions, isdelete, isdepth, isoutput, isxargs;
extern int mayexecve;
@


1.21
log
@If expression omits -exec/execdir/-ok primaries, then find will never
enter the fork+execve codepath.  That allows use of "stdio getpw rpath"!
Use of -exec methods have been discouraged for years anyways, with
-print0/xargs -0 now considered safer practice.
ok guenther millert
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.20 2015/01/19 15:30:52 krw Exp $ */
d56 1
d91 1
a91 1
extern int ftsoptions, isdepth, isoutput, isxargs;
@


1.20
log
@Make some $OpenBSD$ lines prettier/standardier by eliminating
superflous '*' after '/*' and adding blank after terminating '$'.
Also eases parsing of the lines by simple awk scripts.

Aesthetic approval from tedu@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.19 2014/05/18 08:10:00 espie Exp $ */
d91 1
@


1.19
log
@use reallocarray
okay chl@@, tedu@@
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.18 2012/12/05 23:20:25 deraadt Exp $*/
@


1.18
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.17 2012/01/02 23:19:45 pascal Exp $*/
d34 2
a35 1
void	*emalloc(unsigned int);
@


1.17
log
@Add support for "find ... -exec foo {} \+".

From the manpage:

If terminated by a plus sign (``+''), the pathnames for which the
primary is evaluated are aggregated into sets, and utility will
be invoked once per set, similar to xargs(1).  If any invocation
exits with non-zero exit status, then find will eventually do so
as well, but this does not cause find to exit early.  The string
``{}'' must appear, and must appear last.  Each set is limited to
no more than 5,000 pathnames, and is also limited such that the
invocation of utility does not exceed ARG_MAX.

Code comes from NetBSD, written by John Hawkinson.  Tested by eivinde at
terraplane dot org and myself for quite some time.

ok miod@@
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.16 2011/04/21 01:14:21 jacekm Exp $*/
a31 2

#include <sys/cdefs.h>
@


1.16
log
@find: return exit code 1 if any path could not be traversed
matches posix and the manual, ok millert
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.15 2004/09/15 18:43:45 deraadt Exp $*/
d40 1
d45 1
@


1.15
log
@remove unused variable
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.14 2003/06/26 07:27:29 deraadt Exp $*/
d38 1
a38 1
void	 find_execute(PLAN *, char **);
@


1.14
log
@bring protypes into scope.  this requires some quirky handling, but in
the end everything is much clearer; ok tedu (itojun might like to see
how ifconfig looks after this)
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.13 2003/06/03 02:56:08 millert Exp $*/
d89 1
a89 1
extern int ftsoptions, isdeprecated, isdepth, isoutput, isxargs;
@


1.13
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.12 2002/02/16 21:27:46 millert Exp $*/
d49 39
a87 39
PLAN	*c_amin(char *);
PLAN	*c_anewer(char *);
PLAN	*c_atime(char *);
PLAN	*c_cmin(char *);
PLAN	*c_cnewer(char *);
PLAN	*c_ctime(char *);
PLAN	*c_depth(void);
PLAN	*c_empty(void);
PLAN	*c_exec(char ***, int);
PLAN	*c_execdir(char ***);
PLAN	*c_flags(char *);
PLAN	*c_follow(void);
PLAN	*c_fstype(char *);
PLAN	*c_group(char *);
PLAN	*c_iname(char *);
PLAN	*c_inum(char *);
PLAN	*c_links(char *);
PLAN	*c_ls(void);
PLAN	*c_maxdepth(char *);
PLAN	*c_mindepth(char *);
PLAN	*c_mmin(char *);
PLAN	*c_name(char *);
PLAN	*c_newer(char *);
PLAN	*c_nogroup(void);
PLAN	*c_nouser(void);
PLAN	*c_path(char *);
PLAN	*c_perm(char *);
PLAN	*c_print(void);
PLAN	*c_print0(void);
PLAN	*c_prune(void);
PLAN	*c_size(char *);
PLAN	*c_type(char *);
PLAN	*c_user(char *);
PLAN	*c_xdev(void);
PLAN	*c_openparen(void);
PLAN	*c_closeparen(void);
PLAN	*c_mtime(char *);
PLAN	*c_not(void);
PLAN	*c_or(void);
@


1.12
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.11 2000/07/08 16:09:33 millert Exp $*/
d14 1
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.11
log
@Add a -flags option similar to -perm but for filke flags (ala
chflags).  Adapted from FreeBSD.
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.10 2000/06/07 15:25:30 deraadt Exp $*/
d39 9
a47 9
void	 brace_subst __P((char *, char **, char *, int));
void	*emalloc __P((unsigned int));
PLAN	*find_create __P((char ***));
void	 find_execute __P((PLAN *, char **));
PLAN	*find_formplan __P((char **));
PLAN	*not_squish __P((PLAN *));
OPTION	*option __P((char *));
PLAN	*or_squish __P((PLAN *));
PLAN	*paren_squish __P((PLAN *));
d49 3
a51 3
void	 printlong __P((char *, char *, struct stat *));
int	 queryuser __P((char **));
void	 show_path __P((int));
d53 39
a91 39
PLAN	*c_amin __P((char *));
PLAN	*c_anewer __P((char *));
PLAN	*c_atime __P((char *));
PLAN	*c_cmin __P((char *));
PLAN	*c_cnewer __P((char *));
PLAN	*c_ctime __P((char *));
PLAN	*c_depth __P((void));
PLAN	*c_empty __P((void));
PLAN	*c_exec __P((char ***, int));
PLAN	*c_execdir __P((char ***));
PLAN	*c_flags __P((char *));
PLAN	*c_follow __P((void));
PLAN	*c_fstype __P((char *));
PLAN	*c_group __P((char *));
PLAN	*c_iname __P((char *));
PLAN	*c_inum __P((char *));
PLAN	*c_links __P((char *));
PLAN	*c_ls __P((void));
PLAN	*c_maxdepth __P((char *));
PLAN	*c_mindepth __P((char *));
PLAN	*c_mmin __P((char *));
PLAN	*c_name __P((char *));
PLAN	*c_newer __P((char *));
PLAN	*c_nogroup __P((void));
PLAN	*c_nouser __P((void));
PLAN	*c_path __P((char *));
PLAN	*c_perm __P((char *));
PLAN	*c_print __P((void));
PLAN	*c_print0 __P((void));
PLAN	*c_prune __P((void));
PLAN	*c_size __P((char *));
PLAN	*c_type __P((char *));
PLAN	*c_user __P((char *));
PLAN	*c_xdev __P((void));
PLAN	*c_openparen __P((void));
PLAN	*c_closeparen __P((void));
PLAN	*c_mtime __P((char *));
PLAN	*c_not __P((void));
PLAN	*c_or __P((void));
@


1.10
log
@-iname support; karls@@inet.no
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.9 1999/12/04 22:42:31 millert Exp $*/
d63 1
@


1.9
log
@o use nanosecond precision with the -newer option
o add -anewer and -cnewer options like GNU find.
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.8 1997/11/13 08:30:32 deraadt Exp $*/
d66 1
@


1.8
log
@Add the primaries -mmin, -amin, -cmin to find, similar to the GNU find; wosch
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.7 1996/12/23 04:58:08 millert Exp $*/
d54 1
d57 1
@


1.7
log
@Add -execdir support.
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.6 1996/10/24 03:46:03 tholo Exp $*/
d53 1
d55 1
d69 1
@


1.6
log
@Respond to SIGINFO; from PR #42
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.5 1996/09/01 04:56:25 tholo Exp $*/
d58 1
@


1.5
log
@Add support for -empty
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.4 1996/09/01 04:30:15 tholo Exp $*/
d51 1
@


1.4
log
@Add support for -mindepth while at it
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.3 1996/08/31 22:40:18 tholo Exp $*/
d55 1
@


1.3
log
@Add support for -maxdepth option
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.2 1996/06/26 05:33:07 deraadt Exp $*/
d62 2
a63 1
PLAN	*c_mdepth __P((char *));
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/* *      $OpenBSD: extern.h,v 1.1.1.1 1995/10/18 08:45:13 deraadt Exp $*/
d62 1
@


1.1
log
@Initial revision
@
text
@d1 1
a34 1
 *      $Id: extern.h,v 1.4 1993/12/30 21:15:18 jtc Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
