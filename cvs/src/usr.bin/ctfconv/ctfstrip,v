head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.2
	OPENBSD_6_2_BASE:1.8;
locks; strict;
comment	@# @;


1.8
date	2017.08.15.15.48.10;	author jasper;	state Exp;
branches;
next	1.7;
commitid	blJjllMcs6AnHNLo;

1.7
date	2017.08.14.20.09.17;	author jasper;	state Exp;
branches;
next	1.6;
commitid	GZCVLJGx3guoPOeB;

1.6
date	2017.08.13.15.28.51;	author visa;	state Exp;
branches;
next	1.5;
commitid	wCTFmP2G1W5wXkYL;

1.5
date	2017.08.12.19.51.17;	author jasper;	state Exp;
branches;
next	1.4;
commitid	x8IGpi8IkBsW1pFO;

1.4
date	2017.08.12.16.33.11;	author jasper;	state Exp;
branches;
next	1.3;
commitid	Z1Frx3oOoHZminFm;

1.3
date	2017.08.11.15.08.16;	author jasper;	state Exp;
branches;
next	1.2;
commitid	O2Evne5uaOTGsiQH;

1.2
date	2017.08.11.14.24.24;	author mpi;	state Exp;
branches;
next	1.1;
commitid	MbmN0ecukK7F3Gpe;

1.1
date	2017.08.11.14.21.24;	author mpi;	state Exp;
branches;
next	;
commitid	HNoIVWDtvWqMzsBQ;


desc
@@


1.8
log
@proper fix for previous and add missing quotes

from tb@@
ok visa@@ mpi@@
@
text
@#!/bin/sh
#
# $OpenBSD: ctfstrip,v 1.7 2017/08/14 20:09:17 jasper Exp $
#
# Copyright (c) 2017 Martin Pieuchot
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

set -o posix

cleanup() {
	rm -f ${TMPFILE}
	exit 1
}

trap "cleanup" 1 2 3 13 15

USAGE="usage: ${0##*/} [-S] [-o outfile] file"

for arg in "$@@"; do
	if [ -n "$OSET" ]; then
		OUTFILE="$arg"
		unset OSET
		shift
		continue
	fi
	case "$arg" in
	-o)	OSET=1; shift; continue;;
	-S)	STRIPFLAG=-g; shift; continue;;
	esac
	shift
	set -- "$@@" "$arg"
	INFILE="$arg"
done

if [ $# -eq 0 ]; then
	echo "${USAGE}" >&2
	exit 1
fi

LABEL="unknown"
TMPFILE=$(mktemp /tmp/.ctf.XXXXXXXXXX)

# Extract kernel version
if [ -z "${INFILE##bsd*}" ]; then
	LABEL=`what "$INFILE" | sed -n '$s/^   //p'`
fi

# If ctfstrip was passed a file that lacks useful debug sections, ctfconv will fail.
# So try to run ctfconv and silently fallback to plain strip(1) if that failed.
ctfconv -o ${TMPFILE} -l "${LABEL}" "${INFILE}" 2> /dev/null

if [ $? -eq 0 ]; then
        objcopy --add-section .SUNW_ctf=${TMPFILE} ${STRIPFLAG} "${INFILE}" "${OUTFILE}"
else
        strip ${STRIPFLAG} -o "${OUTFILE}" "$@@"
fi

rm -f ${TMPFILE}
@


1.7
log
@simplify LABEL extraction; from tb@@
@
text
@d3 1
a3 1
# $OpenBSD: ctfstrip,v 1.6 2017/08/13 15:28:51 visa Exp $
d42 1
a42 1
	set -- "$@@" "$INFILE"
d56 1
a56 1
	LABEL=`what $INFILE | sed -n '$s/^   //p'`
d61 1
a61 1
ctfconv -o ${TMPFILE} -l "${LABEL}" ${INFILE} 2> /dev/null
d64 1
a64 1
        objcopy --add-section .SUNW_ctf=${TMPFILE} ${STRIPFLAG} ${INFILE} ${OUTFILE}
d66 1
a66 1
        strip ${STRIPFLAG} $@@ -o ${OUTFILE} ${INFILE}
@


1.6
log
@Fix arguments that are passed to strip(1). In particular,
$INFILE should not appear twice.

OK mpi@@, jasper@@
@
text
@d3 1
a3 1
# $OpenBSD: ctfstrip,v 1.5 2017/08/12 19:51:17 jasper Exp $
d56 1
a56 1
	LABEL=`what $INFILE |tr -d '\n'|awk -F"${INFILE}	" '{ print $2 '\n' }'`
@


1.5
log
@make this properly portable:
- keep track of the argument inside the for loop to determine INFILE
- replace the builtin [[ with [ and adjust the tests
- use echo instead of the print builtin

from tb@@
@
text
@d3 1
a3 1
# $OpenBSD: ctfstrip,v 1.4 2017/08/12 16:33:11 jasper Exp $
d42 1
a42 1
	set -- "$@@" "$arg"
@


1.4
log
@fallback to strip(1) in case ctfconv(1) couldn't handle the file (i.e. when
the input file lacks useful debug sections).
adjust option handling accordingly to pass any flags not handled by
ctfstrip(1) down to strip(1).

help and ok mpi@@ tb@@
@
text
@d3 1
a3 1
# $OpenBSD: ctfstrip,v 1.3 2017/08/11 15:08:16 jasper Exp $
d43 1
d46 2
a47 2
if [[ $# == 0 ]]; then
	print -u2 "${USAGE}";
a52 1
INFILE=$(eval "echo \${$#}")
d55 1
a55 1
if [[ "$INFILE" == bsd* ]]; then
d63 1
a63 1
if [[ $? == 0 ]]; then
@


1.3
log
@- use mktemp to provide the tempfile name and clean it up properly
- set strict posix mode

ok mpi@@
@
text
@d3 1
a3 1
# $OpenBSD: ctfstrip,v 1.2 2017/08/11 14:24:24 mpi Exp $
d5 1
a5 1
# Copyright (c) 2017 Martin Pieuchot 
d30 10
a39 5
while getopts "o:S" opt; do
	case $opt in
	S)	STRIPFLAG=-g;;
	o)	OUTFILE="${OPTARG}";;
	*)	print -u2 "${USAGE}"; exit 1;;
d41 2
a43 1
shift $((OPTIND-1))
d52 1
d55 2
a56 2
if [[ "$1" == bsd* ]]; then
	LABEL=`what $1 |tr -d '\n'|awk -F"$1	" '{ print $2 '\n' }'`
d59 9
a67 3
ctfconv -o ${TMPFILE} -l "${LABEL}" $1 || cleanup

objcopy --add-section .SUNW_ctf=${TMPFILE} ${STRIPFLAG} $1 ${OUTFILE}
@


1.2
log
@CVS Id and license.
@
text
@d3 1
a3 1
# $OpenBSD$
d19 8
a26 2
# Turn off Strict Bourne shell mode.
set +o sh
d45 1
a45 1
TMPFILE=$1.rawctf
d47 1
a47 1
# Extract kernel verison
d52 1
a52 1
ctfconv -o ${TMPFILE} -l "${LABEL}" $1 || exit 2
@


1.1
log
@Import a tool for generating CTF data section (SUNW_ctf) based on DWARF
information.

ctfconv(1) support multiple CUs in order to work on binaries.  ctfstrip(1)
works like strip(1) but also insert a .SUNW_ctf section inside a binary.

ok deraadt@@, kettenis@@, jasper@@
@
text
@d2 16
@

