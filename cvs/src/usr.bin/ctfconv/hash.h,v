head	1.2;
access;
symbols
	OPENBSD_6_2_BASE:1.2;
locks; strict;
comment	@ * @;


1.2
date	2017.08.11.14.58.56;	author jasper;	state Exp;
branches;
next	1.1;
commitid	fbelSJsLxmyAHYP8;

1.1
date	2017.08.11.14.21.24;	author mpi;	state Exp;
branches;
next	;
commitid	HNoIVWDtvWqMzsBQ;


desc
@@


1.2
log
@add rcs ids
@
text
@/*	$OpenBSD$ */

/*
 * Copyright (c) 2017 Martin Pieuchot
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

struct hash;

struct hash_entry {
	const char *hkey;
};

struct hash *hash_init(unsigned);
void hash_delete(struct hash *);

void *hash_first(struct hash *, unsigned int *);
void *hash_next(struct hash *, unsigned int *);
struct hash_entry *hash_find(struct hash *, const char *, unsigned int *);
void *hash_remove(struct hash *, unsigned int);
void hash_insert(struct hash *, unsigned int, struct hash_entry *, const char *);
@


1.1
log
@Import a tool for generating CTF data section (SUNW_ctf) based on DWARF
information.

ctfconv(1) support multiple CUs in order to work on binaries.  ctfstrip(1)
works like strip(1) but also insert a .SUNW_ctf section inside a binary.

ok deraadt@@, kettenis@@, jasper@@
@
text
@d1 2
@

