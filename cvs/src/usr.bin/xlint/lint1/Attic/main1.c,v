head	1.13;
access;
symbols
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.2
	OPENBSD_5_0:1.11.0.22
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.20
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.18
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.14
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.16
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.12
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.10
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.8
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.6
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.4
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.2
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.3.0.16
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.14
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2012.04.08.16.27.00;	author jsg;	state dead;
branches;
next	1.12;

1.12
date	2011.09.21.18.08.07;	author jsg;	state Exp;
branches;
next	1.11;

1.11
date	2006.05.29.20.47.22;	author cloder;	state Exp;
branches;
next	1.10;

1.10
date	2006.05.28.23.50.54;	author cloder;	state Exp;
branches;
next	1.9;

1.9
date	2006.05.28.23.42.49;	author cloder;	state Exp;
branches;
next	1.8;

1.8
date	2005.12.10.17.51.49;	author cloder;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.29.19.38.09;	author cloder;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.23.18.21.43;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.20.17.42.49;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.19.03.35.27;	author cloder;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.27.59;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.44.16;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.02;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.02;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@tedu lint
ok tedu@@ guenther@@ krw@@ espie@@ deraadt@@
@
text
@/*	$OpenBSD: main1.c,v 1.12 2011/09/21 18:08:07 jsg Exp $	*/
/*	$NetBSD: main1.c,v 1.3 1995/10/02 17:29:56 jpo Exp $	*/

/*
 * Copyright (c) 1994, 1995 Jochen Pohl
 * All Rights Reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Jochen Pohl for
 *	The NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <err.h>

#include "lint1.h"

/* set yydebug to 1*/
int	yflag;

/* Print warnings for pointer casts. */
int	cflag;

/* Print various debug information. */
int	dflag;

/* Perform stricter checking of enum types and operations on enum types. */
int	eflag;

/* Print complete pathnames, not only the basename. */
int	Fflag = 1;

/* After an error or warning, print the actual text of the program source code */
int	fflag = 0;

/* Enable some extensions of gcc */
int	gflag;

/*
 * Apply a number of heuristic tests to attempt to intuit bugs, improve
 * style, and reduce waste.
 */
int	hflag;

/* Attempt to check portability to other dialects of C. */
int	pflag;

/*
 * In case of redeclarations/redefinitions print the location of the
 * previous declaration/definition.
 */
int	rflag;

/* Strict ANSI C mode. */
int	sflag;

/*
 * Complain about functions and external variables used and not defined,
 * or defined and not used.
 */
int	uflag = 1;

/* Complain about unused function arguments. */
int	vflag = 1;

/* Complain about structures which are never defined. */
int	zflag = 0;

static	void	usage(void);

int
main(int argc, char *argv[])
{
	int	c;

	while ((c = getopt(argc, argv, "abcdefghprstuvyzF")) != -1) {
		switch (c) {
		case 'a':	/* obsolete */	break;
		case 'b':	/* obsolete */	break;
		case 'c':	cflag = 1;	break;
		case 'd':	dflag = 1;	break;
		case 'e':	eflag = 1;	break;
		case 'F':	Fflag = 1;	break;
		case 'g':	gflag = 1;	break;
		case 'h':	hflag = 1;	break;
		case 'f':	fflag = 1;	break;
		case 'p':	pflag = 1;	break;
		case 'r':	rflag = 1;	break;
		case 's':	sflag = 1;	break;
		case 't':	/* obsolete */	break;
		case 'u':	uflag = 0;	break;
		case 'v':	vflag = 0;	break;
		case 'y':	yflag = 1;	break;
		case 'z':	zflag = 0;	break;
		case '?':	usage();
		}
	}
	argc -= optind;
	argv += optind;

	if (argc != 2)
		usage();

	/* open the input file */
	if ((yyin = fopen(argv[0], "r")) == NULL)
		err(1, "cannot open '%s'", argv[0]);

	/* initialize output */
	outopen(argv[1]);

#if YYDEBUG
	if (yflag)
		yydebug = 1;
#endif

	initmem();
	initdecl();
	initscan();
	initmtab();

	yyparse();

	/* Following warnings cannot be suppressed by LINTED */
	nowarn = 0;

	chkglsyms();

	outclose();

	return (nerr != 0);
}

static void
usage(void)
{
	(void)fprintf(stderr, "usage: lint1 [-abcdeghprstuvyzF] src dest\n");
	exit(1);
}

void
norecover(void)
{
	/* cannot recover from previous errors */
	error(224);
	exit(1);
}
@


1.12
log
@remove rcsids which escaped the purge of 2009
@
text
@d1 1
a1 1
/*	$OpenBSD: main1.c,v 1.11 2006/05/29 20:47:22 cloder Exp $	*/
@


1.11
log
@Get rid of -t (traditional C) option. Some corrections by moritz.
@
text
@d1 1
a1 1
/*	$OpenBSD: main1.c,v 1.10 2006/05/28 23:50:54 cloder Exp $	*/
a33 4

#ifndef lint
static char rcsid[] = "$OpenBSD: main1.c,v 1.10 2006/05/28 23:50:54 cloder Exp $";
#endif
@


1.10
log
@Kill the bflag, which was really just used to shut up a useless warning
regarding unreachable breaks, we committed a smarter fix for this a while
back, so the flag is not needed anymore. Lint will still accept and
silently ignore this flag for now.
@
text
@d1 1
a1 1
/*	$OpenBSD: main1.c,v 1.9 2006/05/28 23:42:49 cloder Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main1.c,v 1.9 2006/05/28 23:42:49 cloder Exp $";
a84 3
/* Traditional C mode. */
int	tflag;

d118 1
a118 1
		case 't':	tflag = 1;	break;
@


1.9
log
@Kill the -a option for lint, which controlled (inconsistently) warnings
regarding narrowing conversions. For now, lint still accepts and ignores
the -a option, but soon I will remove it utterly and change the default
LINTFLAGS.
@
text
@d1 1
a1 1
/*	$OpenBSD: main1.c,v 1.8 2005/12/10 17:51:49 cloder Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main1.c,v 1.8 2005/12/10 17:51:49 cloder Exp $";
a48 3
/* Print a warning if a break statement cannot be reached. */
int	bflag;

d110 1
a110 1
		case 'b':	bflag = 1;	break;
@


1.8
log
@Add a new lint flag '-f' which, for each warning or error, prints the
offending line from the corresponding source code file.  The general
idea is OK deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: main1.c,v 1.7 2005/11/29 19:38:09 cloder Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main1.c,v 1.7 2005/11/29 19:38:09 cloder Exp $";
a48 8
/*
 * Print warnings if an assignment of an integertype to another integertype
 * causes an implicit narrowing conversion. If aflag is 1, these warnings
 * are printed only if the source type is at least as wide as long. If aflag
 * is greather then 1, they are always printed.
 */
int	aflag;

d112 1
a112 1
		case 'a':	aflag++;	break;
@


1.7
log
@Typos in comments: explizit and implizit
@
text
@d1 1
a1 1
/*	$OpenBSD: main1.c,v 1.6 2005/11/23 18:21:43 deraadt Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main1.c,v 1.6 2005/11/23 18:21:43 deraadt Exp $";
d72 3
d118 1
a118 1
	while ((c = getopt(argc, argv, "abcdeghprstuvyzF")) != -1) {
d128 1
@


1.6
log
@adjust some default options (mostly, that lint always print full paths
in errors/warnings, so that compiling in dirs controlled by .PATH'd
Makefiles gives useful errors
@
text
@d1 1
a1 1
/*	$OpenBSD: main1.c,v 1.5 2005/11/20 17:42:49 deraadt Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main1.c,v 1.5 2005/11/20 17:42:49 deraadt Exp $";
d51 1
a51 1
 * causes an implizit narrowing conversion. If aflag is 1, these warnings
@


1.5
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: main1.c,v 1.4 2005/11/19 03:35:27 cloder Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main1.c,v 1.4 2005/11/19 03:35:27 cloder Exp $";
d70 1
a70 1
int	Fflag;
d106 1
a106 1
int	zflag = 1;
d149 1
d152 1
@


1.4
log
@knf. OK kjell, brad
@
text
@d1 1
a1 1
/*	$OpenBSD: main1.c,v 1.3 2002/02/16 21:27:59 millert Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main1.c,v 1.3 2002/02/16 21:27:59 millert Exp $";
d175 1
a175 1
	
@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: main1.c,v 1.2 1996/06/26 05:44:16 deraadt Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main1.c,v 1.2 1996/06/26 05:44:16 deraadt Exp $";
d111 1
a111 3
main(argc, argv)
	int	argc;
	char	*argv[];
d170 1
a170 1
usage()
d177 1
a177 1
norecover()
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: main1.c,v 1.3 1995/10/02 17:29:56 jpo Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main1.c,v 1.3 1995/10/02 17:29:56 jpo Exp $";
d108 1
a108 1
static	void	usage __P((void));
@


1.1
log
@Initial revision
@
text
@d1 1
d36 1
a36 1
static char rcsid[] = "$NetBSD: main1.c,v 1.3 1995/10/02 17:29:56 jpo Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
