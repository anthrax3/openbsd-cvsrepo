head	1.11;
access;
symbols
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.9.0.24
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.22
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.20
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.16
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.18
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.14
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.12
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.10
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.8
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.6
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.4
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.6.0.4
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2012.04.08.16.27.00;	author jsg;	state dead;
branches;
next	1.10;

1.10
date	2011.09.21.18.08.07;	author jsg;	state Exp;
branches;
next	1.9;

1.9
date	2005.12.10.18.58.50;	author martin;	state Exp;
branches;
next	1.8;

1.8
date	2005.12.10.18.51.54;	author martin;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.19.03.35.27;	author cloder;	state Exp;
branches;
next	1.6;

1.6
date	2004.11.29.06.20.03;	author jsg;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.26.02.28.24;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.19.19.39.39;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.27.59;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.44.10;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.01;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.01;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@tedu lint
ok tedu@@ guenther@@ krw@@ espie@@ deraadt@@
@
text
@/*	$OpenBSD: emit.c,v 1.10 2011/09/21 18:08:07 jsg Exp $	*/
/*	$NetBSD: emit.c,v 1.2 1995/07/03 21:24:00 cgd Exp $	*/

/*
 * Copyright (c) 1994, 1995 Jochen Pohl
 * All Rights Reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Jochen Pohl for
 *	The NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <err.h>

#include "lint.h"

/* name and handle of output file */
static	const	char *loname;
static	FILE	*lout;

/* output buffer data */
ob_t	ob;

static	void	outxbuf(void);


/*
 * initialize output
 */
void
outopen(const char *name)
{
	loname = name;

	/* open output file */
	if ((lout = fopen(name, "w")) == NULL)
		err(1, "cannot open '%s'", name);

	/* generate output buffer */
	ob.o_len = 1024;
	ob.o_end = (ob.o_buf = ob.o_nxt = xmalloc(ob.o_len)) + ob.o_len;
}

/*
 * flush output buffer and close file
 */
void
outclose(void)
{
	outclr();
	if (fclose(lout) == EOF)
		err(1, "cannot close '%s'", loname);
}

/*
 * resize output buffer
 */
static void
outxbuf(void)
{
	ptrdiff_t coffs;

	coffs = ob.o_nxt - ob.o_buf;
	ob.o_len *= 2;
	ob.o_end = (ob.o_buf = xrealloc(ob.o_buf, ob.o_len)) + ob.o_len;
	ob.o_nxt = ob.o_buf + coffs;
}

/*
 * reset output buffer
 * if it is not empty, it is flushed
 */
void
outclr(void)
{
	size_t	sz;

	if (ob.o_buf != ob.o_nxt) {
		outchar('\n');
		sz = ob.o_nxt - ob.o_buf;
		if (sz > ob.o_len)
			errx(1, "internal error: outclr() 1");
		if (fwrite(ob.o_buf, sz, 1, lout) != 1)
			err(1, "cannot write to %s", loname);
		ob.o_nxt = ob.o_buf;
	}
}

/*
 * write a character to the output buffer
 */
void
outchar(int c)
{
	if (ob.o_nxt == ob.o_end)
		outxbuf();
	*ob.o_nxt++ = (char)c;
}

/*
 * write a character to the output buffer, qouted if necessary
 */
void
outqchar(int c)
{
	if (isprint(c) && c != '\\' && c != '"' && c != '\'') {
		outchar(c);
	} else {
		outchar('\\');
		switch (c) {
		case '\\':
			outchar('\\');
			break;
		case '"':
			outchar('"');
			break;
		case '\'':
			outchar('\'');
			break;
		case '\b':
			outchar('b');
			break;
		case '\t':
			outchar('t');
			break;
		case '\n':
			outchar('n');
			break;
		case '\f':
			outchar('f');
			break;
		case '\r':
			outchar('r');
			break;
		case '\v':
			outchar('v');
			break;
		case '\a':
			outchar('a');
			break;
		default:
			outchar((((u_int)c >> 6) & 07) + '0');
			outchar((((u_int)c >> 3) & 07) + '0');
			outchar((c & 07) + '0');
			break;
		}
	}
}

/*
 * write a strint to the output buffer
 * the string must not contain any characters which
 * should be quoted
 */
void
outstrg(const char *s)
{
	while (*s != '\0') {
		if (ob.o_nxt == ob.o_end)
			outxbuf();
		*ob.o_nxt++ = *s++;
	}
}

/*
 * write an integer value to toe output buffer
 */
void
outint(int i)
{
	if ((ob.o_end - ob.o_nxt) < 12)
		outxbuf();
	snprintf(ob.o_nxt, ob.o_end - ob.o_nxt, "%d", i);
	ob.o_nxt += strlen(ob.o_nxt);
}

/*
 * write the name of a symbol to the output buffer
 * the name is preceded by its length
 */
void
outname(const char *name)
{
	if (name == NULL)
		errx(1, "internal error: outname() 1");
	outint((int)strlen(name));
	outstrg(name);
}

/*
 * write the name of the .c source
 */
void
outsrc(const char *name)
{
	outclr();
	outchar('S');
	outstrg(name);
}
@


1.10
log
@remove rcsids which escaped the purge of 2009
@
text
@d1 1
a1 1
/*	$OpenBSD: emit.c,v 1.9 2005/12/10 18:58:50 martin Exp $	*/
@


1.9
log
@how did this slip in, grr.
@
text
@d1 1
a1 1
/*	$OpenBSD: emit.c,v 1.8 2005/12/10 18:51:54 martin Exp $	*/
a33 4

#ifndef lint
static char rcsid[] = "$OpenBSD: emit.c,v 1.8 2005/12/10 18:51:54 martin Exp $";
#endif
@


1.8
log
@translate a bunch of comments from german to english

ok cloder@@
@
text
@d1 1
a1 1
/*	$OpenBSD: emit.c,v 1.7 2005/11/19 03:35:27 cloder Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: emit.c,v 1.7 2005/11/19 03:35:27 cloder Exp $";
d69 1
a69 1
	oa.o_len = 1024;
@


1.7
log
@knf. OK kjell, brad
@
text
@d1 1
a1 1
/*	$OpenBSD: emit.c,v 1.6 2004/11/29 06:20:03 jsg Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: emit.c,v 1.6 2004/11/29 06:20:03 jsg Exp $";
d64 1
a64 1
	/* Ausgabedatei oeffnen */
d68 2
a69 2
	/* Ausgabepuffer anlegen */
	ob.o_len = 1024;
@


1.6
log
@Spell precede correctly.
'looks fine' millert@@, krw@@. ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: emit.c,v 1.5 2003/04/26 02:28:24 deraadt Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: emit.c,v 1.5 2003/04/26 02:28:24 deraadt Exp $";
d60 1
a60 2
outopen(name)
	const	char *name;
d77 1
a77 1
outclose()
d88 1
a88 1
outxbuf()
d103 1
a103 1
outclr()
d122 1
a122 2
outchar(c)
	int	c;
d133 1
a133 2
outqchar(c)
	int	c;
d185 1
a185 2
outstrg(s)
	const	char *s;
d198 1
a198 2
outint(i)
	int	i;
d211 1
a211 2
outname(name)
	const	char *name;
d223 1
a223 2
outsrc(name)
	const	char *name;
@


1.5
log
@string cleaning; ok tdeval
@
text
@d1 1
a1 1
/*	$OpenBSD: emit.c,v 1.4 2002/02/19 19:39:39 millert Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: emit.c,v 1.4 2002/02/19 19:39:39 millert Exp $";
d213 1
a213 1
 * the name is preceeded by its length
@


1.4
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: emit.c,v 1.3 2002/02/16 21:27:59 millert Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: emit.c,v 1.3 2002/02/16 21:27:59 millert Exp $";
d205 1
a205 1
	if ((ob.o_end - ob.o_nxt) < 3 * sizeof (int))
d207 2
a208 1
	ob.o_nxt += sprintf(ob.o_nxt, "%d", i);
@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: emit.c,v 1.2 1996/06/26 05:44:10 deraadt Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: emit.c,v 1.2 1996/06/26 05:44:10 deraadt Exp $";
a166 1
#ifdef __STDC__
a167 3
#else
		case '\013':
#endif
a169 1
#ifdef __STDC__
a170 3
#else
		case '\007':
#endif
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: emit.c,v 1.2 1995/07/03 21:24:00 cgd Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: emit.c,v 1.2 1995/07/03 21:24:00 cgd Exp $";
d53 1
a53 1
static	void	outxbuf __P((void));
@


1.1
log
@Initial revision
@
text
@d1 1
d36 1
a36 1
static char rcsid[] = "$NetBSD: emit.c,v 1.2 1995/07/03 21:24:00 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
