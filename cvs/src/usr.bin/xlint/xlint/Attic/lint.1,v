head	1.28;
access;
symbols
	OPENBSD_5_1_BASE:1.27
	OPENBSD_5_1:1.27.0.4
	OPENBSD_5_0:1.27.0.2
	OPENBSD_5_0_BASE:1.27
	OPENBSD_4_9:1.26.0.14
	OPENBSD_4_9_BASE:1.26
	OPENBSD_4_8:1.26.0.12
	OPENBSD_4_8_BASE:1.26
	OPENBSD_4_7:1.26.0.8
	OPENBSD_4_7_BASE:1.26
	OPENBSD_4_6:1.26.0.10
	OPENBSD_4_6_BASE:1.26
	OPENBSD_4_5:1.26.0.6
	OPENBSD_4_5_BASE:1.26
	OPENBSD_4_4:1.26.0.4
	OPENBSD_4_4_BASE:1.26
	OPENBSD_4_3:1.26.0.2
	OPENBSD_4_3_BASE:1.26
	OPENBSD_4_2:1.24.0.2
	OPENBSD_4_2_BASE:1.24
	OPENBSD_4_1:1.22.0.4
	OPENBSD_4_1_BASE:1.22
	OPENBSD_4_0:1.22.0.2
	OPENBSD_4_0_BASE:1.22
	OPENBSD_3_9:1.18.0.2
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.17.0.8
	OPENBSD_3_8_BASE:1.17
	OPENBSD_3_7:1.17.0.6
	OPENBSD_3_7_BASE:1.17
	OPENBSD_3_6:1.17.0.4
	OPENBSD_3_6_BASE:1.17
	OPENBSD_3_5:1.17.0.2
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.12.0.10
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.8
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.6
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.4
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.7.0.4
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.6.0.6
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.28
date	2012.04.08.16.27.00;	author jsg;	state dead;
branches;
next	1.27;

1.27
date	2011.06.09.15.19.03;	author jsg;	state Exp;
branches;
next	1.26;

1.26
date	2007.09.05.19.31.21;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2007.09.05.16.32.17;	author fgsch;	state Exp;
branches;
next	1.24;

1.24
date	2007.05.31.19.20.20;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2007.03.20.16.16.44;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2006.05.29.20.47.22;	author cloder;	state Exp;
branches;
next	1.21;

1.21
date	2006.05.29.10.35.17;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2006.05.28.23.50.54;	author cloder;	state Exp;
branches;
next	1.19;

1.19
date	2006.05.28.23.42.49;	author cloder;	state Exp;
branches;
next	1.18;

1.18
date	2005.12.10.17.51.49;	author cloder;	state Exp;
branches;
next	1.17;

1.17
date	2004.01.23.23.08.47;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2003.09.22.05.04.53;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.09.19.10.45.08;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.09.18.09.54.34;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.10.09.12.13;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2001.02.09.14.37.34;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2001.02.09.03.23.07;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.07.06.04.06.58;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.04.15.02.15.13;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.03.14.21.31.42;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	98.10.30.00.24.44;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	97.09.07.01.14.57;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.07.17.07.40.29;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.10.08.01.20.58;	author michaels;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.44.30;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.03.11.41;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.04;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.04;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.28
log
@tedu lint
ok tedu@@ guenther@@ krw@@ espie@@ deraadt@@
@
text
@.\"	$OpenBSD: lint.1,v 1.27 2011/06/09 15:19:03 jsg Exp $
.\"	$NetBSD: lint.1,v 1.3 1995/10/23 13:45:31 jpo Exp $
.\"
.\" Copyright (c) 1994, 1995 Jochen Pohl
.\" All Rights Reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by Jochen Pohl for
.\"      The NetBSD Project.
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: June 9 2011 $
.Dt LINT 1
.Os
.Sh NAME
.Nm lint
.Nd a C program verifier
.Sh SYNOPSIS
.Nm lint
.Op Fl ceFfgHhprsVvxz
.Op Fl i | nu
.Op Fl D Ns Ar name Ns Op =def
.Op Fl I Ns Ar directory
.Op Fl L Ns Ar directory
.Op Fl l Ns Ar library
.Op Fl MD
.Op Fl o Ns Ar outputfile
.Op Fl U Ns Ar name
.Ar
.Nm lint
.Op Fl ceFfgHhprsVvz
.Fl C Ns Ar library
.Op Fl D Ns Ar name Ns Op =def
.Op Fl I Ns Ar directory
.Op Fl MD
.Op Fl U Ns Ar name
.Ar
.Sh DESCRIPTION
.Nm
attempts to detect features of the named C program files
that are likely to be bugs, non-portable, or wasteful.
It also performs stricter type checking than the C compiler.
.Nm
runs the C preprocessor as its first phase, with the
preprocessor symbol
.Sy lint
defined to allow certain questionable code to be altered
or skipped by
.Nm lint .
Therefore, this symbol should be thought of as a reserved
word for all code that is to be checked by
.Nm lint .
.Pp
Among the possible problems that are currently noted are
unreachable statements, loops not entered at the top,
variables declared and not used, and logical expressions
with constant values.
Function calls are checked for inconsistencies, such as
calls to functions that return values in some places and
not in others, functions called with varying numbers of
arguments, function calls that pass arguments of a type
other than the type the function expects to receive,
functions whose values are not used, and calls to functions
not returning values that use the non-existent return value
of the function.
.Pp
Filename arguments ending with
.Pa \&.c
are taken to be C source files.
Filename arguments with names ending with
.Pa \&.ln
are taken to be the result of an earlier invocation of
.Nm lint ,
with either the
.Fl i ,
.Fl o ,
or
.Fl C
option in effect.
The
.Pa \&.ln
files are analogous to the
.Pa \&.o
(object) files produced by
.Xr cc 1
from
.Pa \&.c
files.
.Nm
also accepts special libraries specified with the
.Fl l
option, which contain definitions of library routines and
variables.
.Pp
.Nm
takes all the
.Pa \&.c , \&.ln ,
and
.Pa llib-l Ns Ar library Ns Pa \&.ln
(lint library) files and processes them in command-line order.
By default,
.Nm
appends the standard C lint library
.Pq Pa llib-lc.ln ,
if it exists,
to the end of the list of files.
When the
.Fl i
option is used, the
.Pa \&.ln
files are ignored.
Also, when the
.Fl o
or
.Fl i
options are used, the
.Pa llib-l Ns Ar library Ns Pa \&.ln
files are ignored.
When the
.Fl i
option is
.Em omitted
the second pass of
.Nm
checks this list of files for mutual compatibility.
At this point, if a complaint stems not from a given source
file, but from one of its included files, the source filename
will be printed followed by a question mark.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl C Ns Ar library
Create a
.Nm
library with the name
.Pa llib-l Ns Ar library Ns Pa .ln .
This library is built from all
.Pa \&.c
and
.Pa \&.ln
input files.
After all global definitions of functions and
variables in these files are written to the newly created library,
.Nm
checks all input files, including libraries specified with the
.Fl l
option, for mutual compatibility.
.It Fl c
Complain about casts which have questionable portability.
.It Fl D Ns Ar name Ns Op =def
Define
.Ar name
for
.Xr cpp 1 ,
as if by a
.Li #define
directive.
If no definition is given,
.Ar name
is defined as 1.
.It Fl e
Complain about unusual operations on
.Sy enum Ns -Types
and combinations of
.Sy enum Ns -
and
.Sy integer Ns -Types.
.It Fl F
Print pathnames of files.
.Nm
normally prints the filename without the path.
.It Fl f
For each warning or error, print the offending line of the
corresponding source code file.
.It Fl g
Don't print warnings for some extensions of
.Xr gcc 1
to the C language.
Currently these are nonconstant initializers in
automatic aggregate initializations, arithmetic on pointer to void,
zero sized structures, subscripting of non-lvalue arrays, prototypes
overriding old style function declarations and long long
integer types.
The
.Fl g
flag also turns on the keywords
.Sy asm
and
.Sy inline
(alternate keywords with leading underscores for both
.Sy asm
and
.Sy inline
are always available).
.It Fl H
If a complaint stems from an included file
.Nm
prints the name of the included file instead of the source file name
followed by a question mark.
.It Fl h
Apply a number of heuristic tests to attempt to intuit
bugs, improve style, and reduce waste.
.It Fl I Ns Ar directory
Add
.Ar directory
to the list of directories in which to search for include files.
.It Fl i
Produce a
.Pa \&.ln
file for every
.Pa \&.c
file on the command line.
These
.Pa \&.ln
files are the product of
.Nm lint Ns 's
first pass only, and are not checked for compatibility
between functions.
.It Fl L Ns Ar directory
Search for lint libraries in
.Ar directory
and
.Ar directory Ns Pa /lint
before searching the standard place.
.It Fl l Ns Ar library
Include the lint library
.Pa llib-l Ns Ar library Ns Pa \&.ln .
.It Fl MD
Ignored, so the same flags can be passed to
.Nm lint
and
.Xr cpp 1 .
.It Fl n
Do not check compatibility against the standard library.
.It Fl o Ns Ar outputfile
Name the output file
.Ar outputfile .
The output file produced is the input that is given to
.Nm lint Ns 's
second pass.
The
.Fl o
option simply saves this file in the named output file.
If the
.Fl i
option is also used the files are not checked for compatibility.
To produce a
.Pa llib-l Ns Ar library Ns Pa \&.ln
without extraneous messages, use of the
.Fl u
option is suggested.
The
.Fl v
option is useful if the source file(s) for the lint library
are just external interfaces.
.It Fl p
Attempt to check portability of code to other dialects of C.
.It Fl r
In case of redeclarations report the position of the
previous declaration.
.It Fl s
Strict ANSI C mode.
Issue warnings and errors required by ANSI C.
Also do not produce warnings for constructs which behave
differently in traditional C and ANSI C.
With the
.Fl s
flag,
.Li __STRICT_ANSI__
is a predefined preprocessor macro.
.It Fl U Ns Ar name
Remove any initial definition of
.Ar name
for the preprocessor.
.It Fl u
Do not complain about functions and external variables used
and not defined, or defined and not used (this is suitable
for running
.Nm
on a subset of files comprising part of a larger program).
.It Fl V
Print the command lines constructed by the controller program to
run the C preprocessor and
.Nm lint Ns 's
first and second pass.
.It Fl v
Suppress complaints about unused arguments in functions.
.It Fl x
Report variables referred to by
.Sy extern
declarations, but never used.
.It Fl z
Do not complain about structures that are never defined
(for example, using a structure pointer without knowing
its contents).
.El
.Pp
.Sy Input Grammar
.Pp
.Nm lint Ns 's
first pass reads standard C source files.
.Nm
recognizes the following C comments as commands.
.Bl -tag -width Fl
.It Li /* ARGSUSED Ns Ar n Li */
Make
.Nm
check only the first
.Ar n
arguments for usage; a missing
.Ar n
is taken to be 0 (this option acts like the
.Fl v
option for the next function).
.It Li /* CONSTCOND */ No or Xo
.Li /* CONSTANTCOND */ No or
.Li /* CONSTANTCONDITION */
.Xc
Suppress complaints about constant operands for the next expression.
.It Li /*\ FALLTHRU\ */ No or Xo
.Li /* FALLTHROUGH */
.Xc
Suppress complaints about fall through to a
.Sy case
or
.Sy default
labelled statement.
This directive should be placed immediately preceding the label.
.It Li /* LINTLIBRARY */
At the beginning of a file, mark all functions and variables defined
in this file as
.Em used .
Also shut off complaints about unused function arguments.
.It Li /* LINTED Xo
.Op Ar comment
.Li */ No or
.Li /* NOSTRICT
.Op Ar comment
.Li */
.Xc
Suppress any intra-file warning except those dealing with
unused variables or functions.
This directive should be placed on the line immediately
preceding where the
.Nm
warning occurred.
.It Li /* LONGLONG */
Suppress complaints about use of long long integer types.
.It Li /* NORETURN */
Tell
.Nm
that the function will never return, which means any code
following a call to this function is unreachable.
This directive should be placed immediately preceding the function.
.It Li /* NOTREACHED */
At appropriate points, inhibit complaints about unreachable code.
This comment is typically placed just after calls to functions
like
.Xr exit 3 .
.It Li /* PRINTFLIKE Ns Ar n Li */
Make
.Nm
check the first
.Pq Ar n Ns -1
arguments as usual.
The
.Ar n Ns -th
argument is interpreted as a
.Sy printf
format string that is used to check the remaining arguments.
.It Li /* PROTOLIB Ns Ar n Li */
Cause
.Nm
to treat function declaration prototypes as function definitions
if
.Ar n
is non-zero.
This directive can only be used in conjunction with the
.Li /* LINTLIBRARY */
directive.
If
.Ar n
is zero, function prototypes will be treated normally.
.It Li /* SCANFLIKE Ns Ar n Li */
Make
.Nm
check the first
.Pq Ar n Ns -1
arguments as usual.
The
.Ar n Ns -th
argument is interpreted as a
.Sy scanf
format string that is used to check the remaining arguments.
.It Li /* VARARGS Ns Ar n Li */
Suppress the usual checking for variable numbers of arguments in
the following function declaration.
The data types of the first
.Ar n
arguments are checked; a missing
.Ar n
is taken to be 0.
.El
.Pp
The behavior of the
.Fl i
and the
.Fl o
options allows for incremental use of
.Nm
on a set of C source files.
Generally, one invokes
.Nm
once for each source file with the
.Fl i
option.
Each of these invocations produces a
.Pa \&.ln
file that corresponds to the
.Pa \&.c
file, and prints all messages that are about just that
source file.
After all the source files have been separately run through
.Nm lint ,
it is invoked once more (without the
.Fl i
option), listing all the
.Pa \&.ln
files with the needed
.Fl l Ns Ar library
options.
This will print all the inter-file inconsistencies.
This scheme works well with
.Xr make 1 ;
it allows
.Xr make 1
to be used to
.Nm
only the source files that have been modified since the last
time the set of source files were
.Nm lint Ns ed .
.Sh ENVIRONMENT
.Bl -tag -width Fl
.It Ev LIBDIR
the directory where the lint libraries specified by the
.Fl l Ns Ar library
option must exist.
If this environment variable is undefined, then the default path
.Pa /usr/libdata/lint
will be used to search for the libraries.
.It Ev TMPDIR
usually the path for temporary files can be redefined by setting
this environment variable.
.El
.Sh FILES
.Bl -tag -width /usr/libdata/lint/llib-lposix.ln -compact
.It Pa /usr/libexec/lint Ns Bq 12
programs
.It Pa /usr/libdata/lint/llib-lposix.ln
prebuilt POSIX C lint library
.It Pa /usr/libdata/lint/llib-lstdc.ln
prebuilt ANSI/ISO C lint library
.It Pa /tmp/lint*
temporaries
.El
.Sh SEE ALSO
.Xr cc 1 ,
.Xr cpp 1 ,
.Xr make 1
.Sh AUTHORS
Jochen Pohl
.Sh BUGS
The routines
.Xr exit 3 ,
.Xr longjmp 3
and other functions that do not return are not understood; this
causes various incorrect diagnostics.
.Pp
Static functions which are used only before their first
extern declaration are reported as unused.
.Pp
Libraries created by the
.Fl o
option will, when used in later
.Nm
runs, cause certain errors that were reported when the libraries
were created to be reported again, and cause line numbers and file
names from the original source used to create those libraries
to be reported in error messages.
For these reasons, it is recommended to use the
.Fl C
option to create lint libraries.
@


1.27
log
@Accept and ignore -M so we can pass the same CPPFLAGS to lint and cpp.
Makes the kernel lint target work again.

ok martynas@@, with input from guenther@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.26 2007/09/05 19:31:21 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: September 5 2007 $
@


1.26
log
@- use a consistent grammatical case for the C comments section
- remove useless brackets
- new sentence, new line
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.25 2007/09/05 16:32:17 fgsch Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d47 1
d56 1
d249 5
@


1.25
log
@Document NORETURN, add it to the directive list and rearrange the entries.
ok deraadt@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.24 2007/05/31 19:20:20 jmc Exp $
d320 1
a320 1
makes
d333 1
a333 1
suppress complaints about constant operands for the next expression.
d337 1
a337 1
suppress complaints about fall through to a
d355 1
a355 1
Suppresses any intra-file warning except those dealing with
d364 1
a364 1
tells
d367 2
a368 2
following a call to this function is unreachable.  This directive should
be placed immediately preceding the function.
d371 1
a371 1
(This comment is typically placed just after calls to functions
d373 1
a373 1
.Xr exit 3 ) .
d375 1
a375 1
makes
d386 1
a386 1
causes
d399 1
a399 1
makes
@


1.24
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.23 2007/03/20 16:16:44 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d363 6
@


1.23
log
@sort options; sync synopsis and usage();
from Igor Sobrado
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.22 2006/05/29 20:47:22 cloder Exp $
d33 1
a33 1
.Dd August 28, 1994
@


1.22
log
@Get rid of -t (traditional C) option. Some corrections by moritz.
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.21 2006/05/29 10:35:17 jmc Exp $
d41 2
a42 2
.Op Fl cefghprsvxzHFV
.Op Fl i Ns | Ns Fl nu
a43 1
.Op Fl U Ns Ar name
d48 1
d51 1
a51 1
.Op Fl cefghprsvzHFV
d151 16
d169 11
d187 4
d214 5
d222 4
a237 67
.It Fl n
Do not check compatibility against the standard library.
.It Fl p
Attempt to check portability of code to other dialects of C.
.It Fl r
In case of redeclarations report the position of the
previous declaration.
.It Fl s
Strict ANSI C mode.
Issue warnings and errors required by ANSI C.
Also do not produce warnings for constructs which behave
differently in traditional C and ANSI C.
With the
.Fl s
flag,
.Li __STRICT_ANSI__
is a predefined preprocessor macro.
.It Fl u
Do not complain about functions and external variables used
and not defined, or defined and not used (this is suitable
for running
.Nm
on a subset of files comprising part of a larger program).
.It Fl v
Suppress complaints about unused arguments in functions.
.It Fl x
Report variables referred to by
.Sy extern
declarations, but never used.
.It Fl z
Do not complain about structures that are never defined
(for example, using a structure pointer without knowing
its contents).
.It Fl C Ns Ar library
Create a
.Nm
library with the name
.Pa llib-l Ns Ar library Ns Pa .ln .
This library is built from all
.Pa \&.c
and
.Pa \&.ln
input files.
After all global definitions of functions and
variables in these files are written to the newly created library,
.Nm
checks all input files, including libraries specified with the
.Fl l
option, for mutual compatibility.
.It Fl D Ns Ar name Ns Op =def
Define
.Ar name
for
.Xr cpp 1 ,
as if by a
.Li #define
directive.
If no definition is given,
.Ar name
is defined as 1.
.It Fl I Ns Ar directory
Add
.Ar directory
to the list of directories in which to search for include files.
.It Fl l Ns Ar library
Include the lint library
.Pa llib-l Ns Ar library Ns Pa \&.ln .
d244 5
a248 9
.It Fl F
Print pathnames of files.
.Nm
normally prints the filename without the path.
.It Fl H
If a complaint stems from an included file
.Nm
prints the name of the included file instead of the source file name
followed by a question mark.
d270 15
d289 6
d300 10
@


1.21
log
@lint has two synopses, so remove -ab from the second one too;
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.20 2006/05/28 23:50:54 cloder Exp $
d41 1
a41 2
.Op Fl cefghprvxzHFV
.Op Fl s Ns | Ns Fl t
d51 1
a51 2
.Op Fl cefghprvzHFV
.Op Fl s Ns | Ns Fl t
a214 20
.It Fl t
Traditional C mode.
.Li __STDC__
is not predefined in this mode.
Warnings are printed for constructs not allowed in
traditional C.
Warnings for constructs which behave differently in
traditional C and ANSI C are suppressed.
Preprocessor macros describing the machine type (e.g.,
.Li sun3 )
and machine architecture (e.g.,
.Li m68k )
are defined without leading and trailing underscores.
The keywords
.Sy const ,
.Sy volatile
and
.Sy signed
are not available in traditional C mode (although the alternate
keywords with leading underscores still are).
@


1.20
log
@Kill the bflag, which was really just used to shut up a useless warning
regarding unreachable breaks, we committed a smarter fix for this a while
back, so the flag is not needed anymore. Lint will still accept and
silently ignore this flag for now.
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.19 2006/05/28 23:42:49 cloder Exp $
d52 1
a52 1
.Op Fl abcefghprvzHFV
@


1.19
log
@Kill the -a option for lint, which controlled (inconsistently) warnings
regarding narrowing conversions. For now, lint still accepts and ignores
the -a option, but soon I will remove it utterly and change the default
LINTFLAGS.
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.18 2005/12/10 17:51:49 cloder Exp $
d41 1
a41 1
.Op Fl bcefghprvxzHFV
a152 9
.It Fl b
Report
.Sy break
statements that cannot be reached.
This is not the default because, unfortunately, most
.Xr lex 1
and many
.Xr yacc 1
outputs produce many such complaints.
@


1.18
log
@Add a new lint flag '-f' which, for each warning or error, prints the
offending line from the corresponding source code file.  The general
idea is OK deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.17 2004/01/23 23:08:47 jmc Exp $
d41 1
a41 1
.Op Fl abcefghprvxzHFV
a152 12
.It Fl a
Report assignments of
.Sy long
values to variables that are not
.Sy long .
.It Fl aa
Additional to
.Fl a ,
report
.Em all
assignments of integer values to other integer values which
cause implicit narrowing conversion.
@


1.17
log
@`Ns' implies `No', so `Ns No' -> `Ns'; (even simpler in adduser(8))
discussed with todd@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.16 2003/09/22 05:04:53 jmc Exp $
d41 1
a41 1
.Op Fl abceghprvxzHFV
d52 1
a52 1
.Op Fl abceghprvzHFV
d183 3
@


1.16
log
@remove my (incorrect) BUGS addition;
from tholo@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.15 2003/09/19 10:45:08 jmc Exp $
d412 1
a412 1
.Pq Ar n Ns No -1
d415 1
a415 1
.Ar n Ns No -th
d436 1
a436 1
.Pq Ar n Ns No -1
d439 1
a439 1
.Ar n Ns No -th
d489 1
a489 1
.Nm lint Ns No ed .
@


1.15
log
@Replace an oops by myself - standard C library will be llib-lc.ln, not
llib-lstdc.ln. Also document that we do not have this library, and add
the lint libraries we have to FILES.

Thanks to Thorsten Locker for his help.
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.14 2003/09/18 09:54:34 jmc Exp $
a540 4
.Pp
The standard C lint library
.Pq Pa llib-lc.ln
does not yet exist.
@


1.14
log
@standard C lint library lives in llib-lstdc.ln, not llib-lc.ln;
from Andreas Kahari on misc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.13 2003/06/10 09:12:13 jmc Exp $
d125 2
a126 1
.Pq Pa llib-lstdc.ln
d504 1
a504 1
.Bl -tag -width /usr/libdata/lint/llib-lc.ln -compact
d507 4
a510 2
.It Pa /usr/libdata/lint/llib-l*.ln
various prebuilt lint libraries
d541 4
@


1.13
log
@- section reorder
- COMPATIBILITY merge
- macro cleanup
- kill whitespace at EOL
- new sentence, new line

ssh pages ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.12 2001/02/09 14:37:34 aaron Exp $
d125 1
a125 1
.Pq Pa llib-lc.ln
@


1.12
log
@Some mdoc fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.11 2001/02/09 03:23:07 aaron Exp $
d243 1
a243 1
.Li sun3 Ns )
d245 1
a245 1
.Li m68k Ns )
d248 1
a248 1
.Sy const Ns ,
@


1.11
log
@Fix some typos spotted by d@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.10 2000/07/06 04:06:58 aaron Exp $
d62 2
a63 3
that are likely to be bugs, to be non-portable, or to be
wasteful. It also performs stricter type checking than
the C compiler.
d78 9
a86 8
with constant values. Function calls are checked for
inconsistencies, such as calls to functions that return
values in some places and not in others, functions called
with varying numbers of arguments, function calls that
pass arguments of a type other than the type the function
expects to receive, functions whose values are not used,
and calls to functions not returning values that use
the non-existent return value of the function.
d90 2
a91 2
are taken to be C source files. Filename arguments with
names ending with
d97 1
a97 1
.Fl o
d100 2
a101 1
option in effect. The
d126 2
a127 1
to the end of the list of files. When the
d138 2
a139 1
files are ignored. When the
d145 4
a148 4
checks this list of files for mutual compatibility. At this point,
if a complaint stems not from a given source file, but from one of
its included files, the source filename will be printed followed by
a question mark.
d150 2
a151 2
.Sy Options
.Bl -tag -width Fl
d167 2
a168 2
statements that cannot be reached. This is not the default
because, unfortunately, most
d185 2
a186 1
to the C language. Currently these are nonconstant initializers in
d190 2
a191 1
integer types. The
d210 2
a211 1
file on the command line. These
d225 2
a226 1
Strict ANSI C mode. Issue warnings and errors required by ANSI C.
d228 2
a229 1
differently in traditional C and ANSI C. With the
d237 6
a242 4
is not predefined in this mode. Warnings are printed for constructs
not allowed in traditional C. Warnings for constructs which behave
differently in traditional C and ANSI C are suppressed. Preprocessor
macros describing the machine type (e.g.,
d246 2
a247 1
are defined without leading and trailing underscores. The keywords
d279 2
a280 1
input files. After all global definitions of functions and
d293 2
a294 1
directive. If no definition is given,
d324 2
a325 1
second pass. The
d327 2
a328 1
option simply saves this file in the named output file. If the
d335 2
a336 1
option is suggested. The
d380 2
a381 2
labelled statement. This directive should be placed immediately
preceding the label.
d395 5
a399 2
unused variables or functions. This directive should be placed
on the line immediately preceding where the lint warning occurred.
d412 2
a413 1
arguments as usual. The
d424 2
a425 2
is non-zero. This directive can only be used in conjunction with
the
d427 2
a428 1
directive. If
d436 2
a437 1
arguments as usual. The
d444 2
a445 1
the following function declaration. The data types of the first
d458 2
a459 1
on a set of C source files. Generally, one invokes
d463 2
a464 1
option. Each of these invocations produces a
d469 2
a470 2
source file. After all the source files have been separately
run through
d478 3
a480 2
options. this will print all the inter-file inconsistencies. This
scheme works well with
d494 2
a495 2
option must exist. If this environment variable is undefined,
then the default path
d534 2
a535 2
to be reported in error messages. For these reasons, it is recommended
to use the
@


1.10
log
@Insert more missing .El directives. Our troff really should identify these and
spit out a warning.
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.9 2000/04/15 02:15:13 aaron Exp $
d63 1
a63 1
wasteful. It also performs stricter type checking then does
@


1.9
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.8 2000/03/14 21:31:42 aaron Exp $
d484 1
@


1.8
log
@Suffix "i.e." and "e.g." with a comma. Just another really picky man page
commit, as we want our documentation to be as consistently formatted as
possible (it's getting there :-)).
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.7 1998/10/30 00:24:44 aaron Exp $
d387 1
a387 1
.Xr exit 3 ).
@


1.7
log
@usr.bin/ man page fixes, t-z
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.6 1997/09/07 01:14:57 deraadt Exp $
d232 1
a232 1
macros describing the machine type (e.g.
d234 1
a234 1
and machine architecture (e.g.
@


1.6
log
@fix some spelling errors
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.5 1997/07/17 07:40:29 deraadt Exp $
d38 1
a38 1
.Nd a C program verifier.
@


1.5
log
@fix Xr
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.4 1996/10/08 01:20:58 michaels Exp $
d252 1
a252 1
Report variables refferd to by
d380 1
a380 1
on the line immediately preceding where the lint warning occured.
d444 1
a444 1
source file. After all the source files have been separetely
@


1.4
log
@Attempt at cleanup.
@
text
@d1 1
a1 1
.\"	$OpenBSD: lint.1,v 1.3 1995/10/23 13:45:31 jpo Exp $
d387 1
a387 1
.Xr exit 2 ).
d492 1
a492 1
.Xr exit 2 ,
@


1.3
log
@rcsid
@
text
@d35 1
a35 1
.Os NetBSD
@


1.2
log
@update from netbsd
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: lint.1,v 1.2 1995/07/03 21:25:17 cgd Exp $
d43 1
a43 1
.Op Fl D Ns Ar name Ns Bq =def
d54 1
a54 1
.Op Fl D Ns Ar name Ns Bq =def
d179 1
a179 1
Print warnings instead of errors for some extensions of
d181 15
a195 4
to the C language.
Currently these are nonconstant initialzers in automatic aggregat
initialisations, arithmetic on pointer to void, zero sized
structures and subscripting of non-lvalue arrays.
d220 5
a224 1
differently in traditional C and ANSI C.
d228 14
a241 4
is not predefined in this mode. Warnings are printed for
constructs not allowed in traditional C. Warnings for constructs
which behave differently in traditional C and ANSI C are
suppressed.
d244 1
a244 1
and not defined, or defined and not used. (this is suitable
d263 1
a263 1
These library is built of all
d273 1
a273 1
.It Fl D Ns Ar name Ns Bq =def
d301 1
a301 1
If an complaint stems from an included file
d328 1
a328 1
Print the command lines constructred by the controller program to
d352 2
a353 2
.Li /* CONSTANDCOND */ No or
.Li /* CONSTANDCONDITION */
d377 1
a377 1
suppresses any intra-file warning except those dealing with
d380 2
d456 1
a456 1
.Xr make
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
