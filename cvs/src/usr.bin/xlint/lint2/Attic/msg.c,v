head	1.10;
access;
symbols
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.8.0.24
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.22
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.20
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.16
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.18
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.14
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.12
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.10
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.8
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.6
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.4
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2012.04.08.16.27.00;	author jsg;	state dead;
branches;
next	1.9;

1.9
date	2011.09.21.18.08.07;	author jsg;	state Exp;
branches;
next	1.8;

1.8
date	2005.12.10.20.26.10;	author cloder;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.20.18.23.59;	author cloder;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.20.17.09.55;	author cloder;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.14.03.03.52;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.19.19.39.39;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.27.59;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.44.25;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.04;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.04;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.10
log
@tedu lint
ok tedu@@ guenther@@ krw@@ espie@@ deraadt@@
@
text
@/*	$OpenBSD: msg.c,v 1.9 2011/09/21 18:08:07 jsg Exp $	*/
/*	$NetBSD: msg.c,v 1.2 1995/07/03 21:24:56 cgd Exp $	*/

/*
 * Copyright (c) 1994, 1995 Jochen Pohl
 * All Rights Reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Jochen Pohl for
 *	The NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <string.h>

#include <stdio.h>
#include <stdarg.h>

#include "lint2.h"


static	const	char *msgs[] = {
	"%s: %s used, but not defined",				      /* 0 */
	"%s: %s defined, but never used",			      /* 1 */
	"%s: %s declared, but never used or defined",		      /* 2 */
	"%s: %s multiply defined (%s)",				      /* 3 */
	"%s: %s used inconsistently (%s)",			      /* 4 */
	"%s: %s declared inconsistently (%s)",			      /* 5 */
	"%s: %s arg %d used inconsistently (%s)",		      /* 6 */
	"%s: %s called with varying # of args (%s)",		      /* 7 */
	"%s returns value which is always ignored",		      /* 8 */
	"%s returns value which is sometimes ignored",		      /* 9 */
	"%s: return value of %s is used, but none returned",	      /* 10 */
	"%s: %s arg %d declared inconsistently (%s)",		      /* 11 */
	"%s: %s declared with varying # of args (%s)",		      /* 12 */
	"%s: malformed format string to %s",			      /* 13 */
	"%s, arg %d to %s inconsistent with format",		      /* 14 */
	"%s: too few format args to %s",			      /* 15 */
	"%s: too many format args to %s",			      /* 16 */
	"%s: %s must be declared before use (%s)",		      /* 17 */
};

static	const	char *lbasename(const char *);

void
msg(int n, ...)
{
	va_list	ap;

	va_start(ap, n);

	(void)vprintf(msgs[n], ap);
	(void)printf("\n");

	va_end(ap);
}

/*
 * Return a pointer to the last component of a path.
 */
static const char *
lbasename(const char *path)
{
	const	char *cp, *cp1, *cp2;

	if (Fflag)
		return (path);

	cp = cp1 = cp2 = path;
	while (*cp != '\0') {
		if (*cp++ == '/') {
			cp2 = cp1;
			cp1 = cp;
		}
	}
	return (*cp1 == '\0' ? cp2 : cp1);
}

/*
 * Create a string which describes a position in a source file.
 */
const char *
mkpos(pos_t *posp)
{
	size_t	len;
	const	char *fn;
	static	char	*buf;
	static	size_t	blen = 0;
	int	qm, src, line;

	if (Hflag && posp->p_src != posp->p_isrc) {
		src = posp->p_isrc;
		line = posp->p_iline;
	} else {
		src = posp->p_src;
		line = posp->p_line;
	}
	qm = !Hflag && posp->p_src != posp->p_isrc;

	len = strlen(fn = lbasename(fnames[src]));
	len += 3 * sizeof (u_short) + 4;

	if (len > blen)
		buf = xrealloc(buf, blen = len);
	if (line != 0) {
		(void)snprintf(buf, blen, "%s%s:%hu",
			      fn, qm ? "?" : "", line);
	} else {
		(void)snprintf(buf, blen, "%s", fn);
	}

	return (buf);
}

@


1.9
log
@remove rcsids which escaped the purge of 2009
@
text
@d1 1
a1 1
/*	$OpenBSD: msg.c,v 1.8 2005/12/10 20:26:10 cloder Exp $	*/
@


1.8
log
@Make the style of these messages more like that of gcc messages.
@
text
@d1 1
a1 1
/*	$OpenBSD: msg.c,v 1.7 2005/11/20 18:23:59 cloder Exp $	*/
a33 4

#ifndef lint
static char rcsid[] = "$OpenBSD: msg.c,v 1.7 2005/11/20 18:23:59 cloder Exp $";
#endif
@


1.7
log
@Rename basename() to lbasename() to avoid conflict with basename(3).
@
text
@d1 1
a1 1
/*	$OpenBSD: msg.c,v 1.6 2005/11/20 17:09:55 cloder Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: msg.c,v 1.6 2005/11/20 17:09:55 cloder Exp $";
d48 8
a55 8
	"%s used( %s ), but not defined",			      /* 0 */
	"%s defined( %s ), but never used",			      /* 1 */
	"%s declared( %s ), but never used or defined",		      /* 2 */
	"%s multiply defined  \t%s  ::  %s",			      /* 3 */
	"%s value used inconsistently  \t%s  ::  %s",		      /* 4 */
	"%s value declared inconsistently  \t%s  ::  %s",	      /* 5 */
	"%s, arg %d used inconsistently  \t%s  ::  %s",		      /* 6 */
	"%s: variable # of args  \t%s  ::  %s",			      /* 7 */
d58 8
a65 8
	"%s value is used( %s ), but none returned",		      /* 10 */
	"%s, arg %d declared inconsistently  \t%s :: %s",	      /* 11 */
	"%s: variable # of args declared  \t%s  ::  %s",	      /* 12 */
	"%s: malformed format string  \t%s",			      /* 13 */
	"%s, arg %d inconsistent with format  \t%s",		      /* 14 */
	"%s: too few args for format  \t%s",			      /* 15 */
	"%s: too many args for format  \t%s",			      /* 16 */
	"%s function value must be declared before use  \t%s  ::  %s",/* 17 */
d131 1
a131 1
		(void)snprintf(buf, blen, "%s%s(%hu)",
@


1.6
log
@KNF. OK kjell, millert
@
text
@d1 1
a1 1
/*	$OpenBSD: msg.c,v 1.5 2003/04/14 03:03:52 deraadt Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: msg.c,v 1.5 2003/04/14 03:03:52 deraadt Exp $";
d68 1
a68 1
static	const	char *basename(const char *);
d87 1
a87 1
basename(const char *path)
d125 1
a125 1
	len = strlen(fn = basename(fnames[src]));
@


1.5
log
@string cleaning; my bugs found by millert and krw
@
text
@d1 1
a1 1
/*	$OpenBSD: msg.c,v 1.4 2002/02/19 19:39:39 millert Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: msg.c,v 1.4 2002/02/19 19:39:39 millert Exp $";
d87 1
a87 2
basename(path)
	const	char *path;
d108 1
a108 2
mkpos(posp)
	pos_t	*posp;
@


1.4
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: msg.c,v 1.3 2002/02/16 21:27:59 millert Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: msg.c,v 1.3 2002/02/16 21:27:59 millert Exp $";
d133 1
a133 1
		(void)sprintf(buf, "%s%s(%hu)",
d136 1
a136 1
		(void)sprintf(buf, "%s", fn);
@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: msg.c,v 1.2 1996/06/26 05:44:25 deraadt Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: msg.c,v 1.2 1996/06/26 05:44:25 deraadt Exp $";
a41 1
#ifdef __STDC__
a42 3
#else
#include <varargs.h>
#endif
a69 1
#ifdef __STDC__
a72 7
#else
void
msg(va_alist)
	va_dcl
	int	n;
{
#endif
a74 1
#ifdef __STDC__
a75 4
#else
	va_start(ap);
	n = va_arg(ap, int);
#endif
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: msg.c,v 1.2 1995/07/03 21:24:56 cgd Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: msg.c,v 1.2 1995/07/03 21:24:56 cgd Exp $";
d72 1
a72 1
static	const	char *basename __P((const char *));
@


1.1
log
@Initial revision
@
text
@d1 1
d36 1
a36 1
static char rcsid[] = "$NetBSD: msg.c,v 1.2 1995/07/03 21:24:56 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
