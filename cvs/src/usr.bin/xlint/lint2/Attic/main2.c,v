head	1.11;
access;
symbols
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.9.0.22
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.20
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.18
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.14
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.16
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.12
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.10
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2012.04.08.16.27.00;	author jsg;	state dead;
branches;
next	1.10;

1.10
date	2011.09.21.18.08.07;	author jsg;	state Exp;
branches;
next	1.9;

1.9
date	2006.05.29.20.47.22;	author cloder;	state Exp;
branches;
next	1.8;

1.8
date	2005.11.23.18.21.44;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.20.17.42.50;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.20.17.09.55;	author cloder;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.14.03.03.52;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.59;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.19.19.22.50;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.44.24;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.03;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.03;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@tedu lint
ok tedu@@ guenther@@ krw@@ espie@@ deraadt@@
@
text
@/*	$OpenBSD: main2.c,v 1.10 2011/09/21 18:08:07 jsg Exp $	*/
/*	$NetBSD: main2.c,v 1.2 1995/07/03 21:24:53 cgd Exp $	*/

/*
 * Copyright (c) 1994, 1995 Jochen Pohl
 * All Rights Reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Jochen Pohl for
 *	The NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "lint2.h"

/* warnings for symbols which are declared but not defined or used */
int	xflag;

/*
 * warnings for symbols which are used and not defined or defined
 * and not used
 */
int	uflag = 1;

/* Create a lint library in the current directory with name libname. */
int	Cflag;
const	char *libname;

int	pflag;

/*
 * warnings for (tentative) definitions of the same name in more than
 * one translation unit
 */
int	sflag;

/*
 * If a complaint stems from a included file, print the name of the included
 * file instead of the name spezified at the command line followed by '?'
 */
int	Hflag;

int	hflag;

/* Print full path names, not only the last component */
int	Fflag = 1;

/*
 * List of libraries (from -l flag). These libraries are read after all
 * other input files has been read and, for Cflag, after the new lint library
 * has been written.
 */
const	char	**libs;

static	void	usage(void);


int
main(int argc, char *argv[])
{
	int	c, i;
	size_t	len;
	char	*lname;

	libs = xcalloc(1, sizeof (char *));

	opterr = 0;
	while ((c = getopt(argc, argv, "hpstxuC:HFl:")) != -1) {
		switch (c) {
		case 's':
			sflag = 1;
			break;
		case 'u':
			uflag = 0;
			break;
		case 'x':
			xflag = 1;
			break;
		case 'p':
			pflag = 1;
			break;
		case 'C':
			len = strlen(optarg);
			lname = xmalloc(len + 10);
			(void)snprintf(lname, len + 10, "llib-l%s.ln", optarg);
			libname = lname;
			Cflag = 1;
			uflag = 0;
			break;
		case 'H':
			Hflag = 1;
			break;
		case 'h':
			hflag = 1;
			break;
		case 'F':
			Fflag = 1;
			break;
		case 'l':
			for (i = 0; libs[i] != NULL; i++) ;
			libs = xrealloc(libs, (i + 2) * sizeof (char *));
			libs[i] = xstrdup(optarg);
			libs[i + 1] = NULL;
			break;
		case '?':
			usage();
		}
	}

	argc -= optind;
	argv += optind;

	if (argc == 0)
		usage();

	initmem();

	/* initialize hash table */
	inithash();

	inittyp();

	for (i = 0; i < argc; i++)
		readfile(argv[i]);

	/* write the lint library */
	if (Cflag) {
		forall(mkstatic);
		outlib(libname);
	}

	/* read additional libraries */
	for (i = 0; libs[i] != NULL; i++)
		readfile(libs[i]);

	forall(mkstatic);

	mainused();

	/* perform all tests */
	forall(chkname);

	exit(0);
	/* NOTREACHED */
}

static void
usage(void)
{
	(void)fprintf(stderr,
		      "usage: lint2 -hpstxuHF -Clib -l lib ... src1 ...\n");
	exit(1);
}

@


1.10
log
@remove rcsids which escaped the purge of 2009
@
text
@d1 1
a1 1
/*	$OpenBSD: main2.c,v 1.9 2006/05/29 20:47:22 cloder Exp $	*/
@


1.9
log
@Get rid of -t (traditional C) option. Some corrections by moritz.
@
text
@d1 1
a1 1
/*	$OpenBSD: main2.c,v 1.8 2005/11/23 18:21:44 deraadt Exp $	*/
a33 4

#ifndef lint
static char rcsid[] = "$OpenBSD: main2.c,v 1.8 2005/11/23 18:21:44 deraadt Exp $";
#endif
@


1.8
log
@adjust some default options (mostly, that lint always print full paths
in errors/warnings, so that compiling in dirs controlled by .PATH'd
Makefiles gives useful errors
@
text
@d1 1
a1 1
/*	$OpenBSD: main2.c,v 1.7 2005/11/20 17:42:50 deraadt Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main2.c,v 1.7 2005/11/20 17:42:50 deraadt Exp $";
a66 2
int	tflag;

a101 3
			break;
		case 't':
			tflag = 1;
@


1.7
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: main2.c,v 1.6 2005/11/20 17:09:55 cloder Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main2.c,v 1.6 2005/11/20 17:09:55 cloder Exp $";
d78 1
a78 1
int	Fflag;
@


1.6
log
@KNF. OK kjell, millert
@
text
@d1 1
a1 1
/*	$OpenBSD: main2.c,v 1.5 2003/04/14 03:03:52 deraadt Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main2.c,v 1.5 2003/04/14 03:03:52 deraadt Exp $";
d136 1
a136 1
			libs = xrealloc(libs, (i + 2) * sizeof (char *)); 
d144 1
a144 1
	
@


1.5
log
@string cleaning; my bugs found by millert and krw
@
text
@d1 1
a1 1
/*	$OpenBSD: main2.c,v 1.4 2002/02/16 21:27:59 millert Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main2.c,v 1.4 2002/02/16 21:27:59 millert Exp $";
d91 1
a91 3
main(argc, argv)
	int	argc;
	char	*argv[];
d183 1
a183 1
usage()
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: main2.c,v 1.3 2001/11/19 19:22:50 deraadt Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main2.c,v 1.3 2001/11/19 19:22:50 deraadt Exp $";
d122 1
a122 1
			(void)sprintf(lname, "llib-l%s.ln", optarg);
@


1.3
log
@more than typo
@
text
@d1 1
a1 1
/*	$OpenBSD: main2.c,v 1.2 1996/06/26 05:44:24 deraadt Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main2.c,v 1.2 1996/06/26 05:44:24 deraadt Exp $";
d87 1
a87 1
static	void	usage __P((void));
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: main2.c,v 1.2 1995/07/03 21:24:53 cgd Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: main2.c,v 1.2 1995/07/03 21:24:53 cgd Exp $";
d62 1
a62 1
 * warnings for (tentative) definitions of the same name in more then
@


1.1
log
@Initial revision
@
text
@d1 1
d36 1
a36 1
static char rcsid[] = "$NetBSD: main2.c,v 1.2 1995/07/03 21:24:53 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
