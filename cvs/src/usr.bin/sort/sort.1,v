head	1.56;
access;
symbols
	OPENBSD_6_0:1.54.0.6
	OPENBSD_6_0_BASE:1.54
	OPENBSD_5_9:1.54.0.2
	OPENBSD_5_9_BASE:1.54
	OPENBSD_5_8:1.54.0.4
	OPENBSD_5_8_BASE:1.54
	OPENBSD_5_7:1.40.0.2
	OPENBSD_5_7_BASE:1.40
	OPENBSD_5_6:1.40.0.6
	OPENBSD_5_6_BASE:1.40
	OPENBSD_5_5:1.40.0.4
	OPENBSD_5_5_BASE:1.40
	OPENBSD_5_4:1.39.0.12
	OPENBSD_5_4_BASE:1.39
	OPENBSD_5_3:1.39.0.10
	OPENBSD_5_3_BASE:1.39
	OPENBSD_5_2:1.39.0.8
	OPENBSD_5_2_BASE:1.39
	OPENBSD_5_1_BASE:1.39
	OPENBSD_5_1:1.39.0.6
	OPENBSD_5_0:1.39.0.4
	OPENBSD_5_0_BASE:1.39
	OPENBSD_4_9:1.39.0.2
	OPENBSD_4_9_BASE:1.39
	OPENBSD_4_8:1.38.0.2
	OPENBSD_4_8_BASE:1.38
	OPENBSD_4_7:1.35.0.2
	OPENBSD_4_7_BASE:1.35
	OPENBSD_4_6:1.33.0.6
	OPENBSD_4_6_BASE:1.33
	OPENBSD_4_5:1.33.0.2
	OPENBSD_4_5_BASE:1.33
	OPENBSD_4_4:1.31.0.4
	OPENBSD_4_4_BASE:1.31
	OPENBSD_4_3:1.31.0.2
	OPENBSD_4_3_BASE:1.31
	OPENBSD_4_2:1.29.0.2
	OPENBSD_4_2_BASE:1.29
	OPENBSD_4_1:1.27.0.6
	OPENBSD_4_1_BASE:1.27
	OPENBSD_4_0:1.27.0.4
	OPENBSD_4_0_BASE:1.27
	OPENBSD_3_9:1.27.0.2
	OPENBSD_3_9_BASE:1.27
	OPENBSD_3_8:1.21.0.10
	OPENBSD_3_8_BASE:1.21
	OPENBSD_3_7:1.21.0.8
	OPENBSD_3_7_BASE:1.21
	OPENBSD_3_6:1.21.0.6
	OPENBSD_3_6_BASE:1.21
	OPENBSD_3_5:1.21.0.4
	OPENBSD_3_5_BASE:1.21
	OPENBSD_3_4:1.21.0.2
	OPENBSD_3_4_BASE:1.21
	OPENBSD_3_3:1.18.0.2
	OPENBSD_3_3_BASE:1.18
	OPENBSD_3_2:1.17.0.4
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.17.0.2
	OPENBSD_3_1_BASE:1.17
	OPENBSD_3_0:1.15.0.2
	OPENBSD_3_0_BASE:1.15
	OPENBSD_2_9_BASE:1.14
	OPENBSD_2_9:1.14.0.2
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.1.0.6
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.4
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@# @;


1.56
date	2016.10.17.02.58.29;	author lteo;	state Exp;
branches;
next	1.55;
commitid	kEu3EKgHsizuC8sq;

1.55
date	2016.10.11.13.08.20;	author schwarze;	state Exp;
branches;
next	1.54;
commitid	S21Pn2IadocFJipk;

1.54
date	2015.04.05.14.20.22;	author millert;	state Exp;
branches;
next	1.53;
commitid	ZHiL4RR3f8y3AIp0;

1.53
date	2015.04.05.13.56.04;	author millert;	state Exp;
branches;
next	1.52;
commitid	DXl00ApXT37Dgc6l;

1.52
date	2015.04.05.13.54.06;	author millert;	state Exp;
branches;
next	1.51;
commitid	sAAV09MVWRBezxxW;

1.51
date	2015.04.01.19.56.01;	author millert;	state Exp;
branches;
next	1.50;
commitid	i1j3SkI4vpXKtHfr;

1.50
date	2015.03.21.21.47.37;	author jmc;	state Exp;
branches;
next	1.49;
commitid	fNNDidXhuiq29i6P;

1.49
date	2015.03.21.21.30.58;	author jmc;	state Exp;
branches;
next	1.48;
commitid	3IqKTUARqdMyXYnD;

1.48
date	2015.03.21.21.19.25;	author jmc;	state Exp;
branches;
next	1.47;
commitid	Khx3Ds1vKl8icPRm;

1.47
date	2015.03.21.21.18.02;	author jmc;	state Exp;
branches;
next	1.46;
commitid	B2l0VRmWQ7yDDKlY;

1.46
date	2015.03.21.21.15.12;	author jmc;	state Exp;
branches;
next	1.45;
commitid	2Fd3SkunXa7JOIok;

1.45
date	2015.03.19.13.51.10;	author jmc;	state Exp;
branches;
next	1.44;
commitid	GJUUT6HXjsxOgtqo;

1.44
date	2015.03.19.13.36.01;	author jmc;	state Exp;
branches;
next	1.43;
commitid	D7Io7TkBJ8nrkB9s;

1.43
date	2015.03.19.13.11.05;	author jmc;	state Exp;
branches;
next	1.42;
commitid	t7TgP8YwOYMXOk1z;

1.42
date	2015.03.19.11.38.12;	author jmc;	state Exp;
branches;
next	1.41;
commitid	FmWLmy14rBPoaP0G;

1.41
date	2015.03.17.17.45.13;	author millert;	state Exp;
branches;
next	1.40;
commitid	XCfT2rs68MOcwt0o;

1.40
date	2013.08.24.22.18.05;	author jmc;	state Exp;
branches;
next	1.39;

1.39
date	2010.09.03.11.09.29;	author jmc;	state Exp;
branches;
next	1.38;

1.38
date	2010.06.28.15.28.52;	author jmc;	state Exp;
branches;
next	1.37;

1.37
date	2010.06.11.06.51.41;	author jmc;	state Exp;
branches;
next	1.36;

1.36
date	2010.05.27.20.32.41;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2009.12.22.19.47.02;	author schwarze;	state Exp;
branches;
next	1.34;

1.34
date	2009.08.16.09.41.08;	author sobrado;	state Exp;
branches;
next	1.33;

1.33
date	2009.02.08.17.15.10;	author jmc;	state Exp;
branches;
next	1.32;

1.32
date	2008.10.01.06.39.18;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2007.08.21.21.22.37;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	2007.08.21.20.29.25;	author millert;	state Exp;
branches;
next	1.29;

1.29
date	2007.05.31.19.20.16;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2007.05.30.04.41.34;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2005.10.28.23.18.17;	author dlg;	state Exp;
branches;
next	1.26;

1.26
date	2005.10.04.18.13.22;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2005.10.04.15.12.01;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2005.10.04.11.26.43;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2005.09.28.10.10.16;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2005.09.27.23.40.07;	author dlg;	state Exp;
branches;
next	1.21;

1.21
date	2003.07.14.12.56.07;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2003.06.03.02.56.16;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2003.03.31.18.28.50;	author tdeval;	state Exp;
branches;
next	1.18;

1.18
date	2002.11.09.02.22.33;	author fgsch;	state Exp;
branches;
next	1.17;

1.17
date	2002.02.10.15.50.15;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	2002.01.24.20.33.46;	author mickey;	state Exp;
branches;
next	1.15;

1.15
date	2001.05.01.17.58.04;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	2001.02.04.21.27.01;	author ericj;	state Exp;
branches;
next	1.13;

1.13
date	2000.11.09.17.52.39;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.18.05.24.12;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.07.06.04.06.56;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.12.21.47.50;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.03.24.21.41.09;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.03.11.21.40.03;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.05.00.28.55;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	2000.01.05.07.40.43;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	99.06.05.01.21.40;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.06.01.22.13.43;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	98.09.27.16.57.54;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	98.07.24.00.32.23;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	97.01.20.19.39.55;	author millert;	state Exp;
branches;
next	;


desc
@@


1.56
log
@/var/tmp -> /tmp

From Jan Stary.
"POSIX doesn't restrict us here" and ok schwarze@@
@
text
@.\"	$OpenBSD: sort.1,v 1.55 2016/10/11 13:08:20 schwarze Exp $
.\"
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)sort.1	8.1 (Berkeley) 6/6/93
.\"
.Dd $Mdocdate: October 11 2016 $
.Dt SORT 1
.Os
.Sh NAME
.Nm sort
.Nd sort, merge, or sequence check text and binary files
.Sh SYNOPSIS
.Nm sort
.Op Fl bCcdfgHhiMmnRrsuVz
.Op Fl k Ar field1 Ns Op , Ns Ar field2
.Op Fl o Ar output
.Op Fl S Ar size
.Op Fl T Ar dir
.Op Fl t Ar char
.Op Ar
.Sh DESCRIPTION
The
.Nm
utility sorts text and binary files by lines.
A line is a record separated from the subsequent record by a
newline (default) or NUL \'\\0\' character
.Po
.Fl z
option
.Pc .
A record can contain any printable or unprintable characters.
Comparisons are based on one or more sort keys extracted from
each line of input, and are performed lexicographically,
according to the current locale's collating rules and the
specified command-line options that can tune the actual
sorting behavior.
By default, if keys are not given,
.Nm
uses entire lines for comparison.
.Pp
If no
.Ar file
is specified, or if
.Ar file
is
.Sq - ,
the standard input is used.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl C, Fl Fl check=silent|quiet
Check that the single input file is sorted.
If it is, exit 0; if it's not, exit 1.
In either case, produce no output.
.It Fl c, Fl Fl check
Like
.Fl C ,
but additionally write a message to
.Em stderr
if the input file is not sorted.
.It Fl m , Fl Fl merge
Merge only; the input files are assumed to be pre-sorted.
If they are not sorted, the output order is undefined.
.It Fl o Ar output , Fl Fl output Ns = Ns Ar output
Write the output to the
.Ar output
file instead of the standard output.
This file can be the same as one of the input files.
.It Fl S Ar size , Fl Fl buffer-size Ns = Ns Ar size
Use a memory buffer no larger than
.Ar size .
The modifiers %, b, K, M, G, T, P, E, Z, and Y can be used.
If no memory limit is specified,
.Nm
may use up to about 90% of available memory.
If the input is too big to fit into the memory buffer,
temporary files are used.
.It Fl s
Stable sort; maintains the original record order of records that have
an equal key.
This is a non-standard feature, but it is widely accepted and used.
.It Fl T Ar dir , Fl Fl temporary-directory Ns = Ns Ar dir
Store temporary files in the directory
.Ar dir .
The default path is the value of the environment variable
.Ev TMPDIR
or
.Pa /tmp
if
.Ev TMPDIR
is not defined.
.It Fl u , Fl Fl unique
Unique: suppress all but one in each set of lines having equal keys.
This option implies a stable sort (see below).
If used with
.Fl C
or
.Fl c ,
.Nm
also checks that there are no lines with duplicate keys.
.El
.Pp
The following options override the default ordering rules.
If ordering options appear before the first
.Fl k
option, they apply globally to all sort keys.
When attached to a specific key (see
.Fl k ) ,
the ordering options override all global ordering options for that key.
Note that the ordering options intended to apply globally should not
appear after
.Fl k
or results may be unexpected.
.Bl -tag -width indent
.It Fl d , Fl Fl dictionary-order
Consider only blank spaces and alphanumeric characters in comparisons.
.It Fl f , Fl Fl ignore-case
Consider all lowercase characters that have uppercase
equivalents to be the same for purposes of comparison.
.It Fl g, Fl Fl general-numeric-sort, Fl Fl sort=general-numeric
Sort by general numerical value.
As opposed to
.Fl n ,
this option handles general floating points.
It has a more
permissive format than that allowed by
.Fl n
but it has a significant performance drawback.
.It Fl h, Fl Fl human-numeric-sort, Fl Fl sort=human-numeric
Sort by numerical value, but take into account the SI suffix,
if present.
Sorts first by numeric sign (negative, zero, or
positive); then by SI suffix (either empty, or `k' or `K', or one
of `MGTPEZY', in that order); and finally by numeric value.
The SI suffix must immediately follow the number.
For example, '12345K' sorts before '1M', because M is "larger" than K.
This sort option is useful for sorting the output of a single invocation
of 'df' command with
.Fl h
or
.Fl H
options (human-readable).
.It Fl i , Fl Fl ignore-nonprinting
Ignore all non-printable characters.
.It Fl M, Fl Fl month-sort, Fl Fl sort=month
Sort by month abbreviations.
Unknown strings are considered smaller than valid month names.
.It Fl n , Fl Fl numeric-sort, Fl Fl sort=numeric
An initial numeric string, consisting of optional blank space, optional
minus sign, and zero or more digits (including decimal point)
.\" with
.\" optional radix character and thousands
.\" separator
.\" (as defined in the current locale),
is sorted by arithmetic value.
Leading blank characters are ignored.
.It Fl R, Fl Fl random-sort, Fl Fl sort=random
Sort lines in random order.
This is a random permutation of the inputs with the exception that
equal keys sort together.
It is implemented by hashing the input keys and sorting the hash values.
The hash function is randomized with data from
.Xr arc4random_buf 3 ,
or by file content if one is specified via
.Fl Fl random-source .
If multiple sort fields are specified,
the same random hash function is used for all of them.
.It Fl r , Fl Fl reverse
Sort in reverse order.
.It Fl V, Fl Fl version-sort
Sort version numbers.
The input lines are treated as file names in form
PREFIX VERSION SUFFIX, where SUFFIX matches the regular expression
"(\.([A-Za-z~][A-Za-z0-9~]*)?)*".
The files are compared by their prefixes and versions (leading
zeros are ignored in version numbers, see example below).
If an input string does not match the pattern, then it is compared
using the byte compare function.
All string comparisons are performed in the C locale.
.Pp
For example:
.Bd -literal -offset indent
$ ls sort* | sort -V
sort-1.022.tgz
sort-1.23.tgz
sort-1.23.1.tgz
sort-1.024.tgz
sort-1.024.003.
sort-1.024.003.tgz
sort-1.024.07.tgz
sort-1.024.009.tgz
.Ed
.El
.Pp
The treatment of field separators can be altered using these options:
.Bl -tag -width indent
.It Fl b , Fl Fl ignore-leading-blanks
Ignore leading blank space when determining the start
and end of a restricted sort key (see
.Fl k ) .
If
.Fl b
is specified before the first
.Fl k
option, it applies globally to all key specifications.
Otherwise,
.Fl b
can be attached independently to each
.Ar field
argument of the key specifications.
Note that
.Fl b
should not appear after
.Fl k ,
and that it has no effect unless key fields are specified.
.It Xo
.Fl k Ar field1 Ns Op , Ns Ar field2 ,
.Fl Fl key Ns = Ns Ar field1 Ns Op , Ns Ar field2
.Xc
Define a restricted sort key that has the starting position
.Ar field1 ,
and optional ending position
.Ar field2
of a key field.
The
.Fl k
option may be specified multiple times,
in which case subsequent keys are compared after earlier keys compare equal.
The
.Fl k
option replaces the obsolete options
.Cm \(pl Ns Ar pos1
and
.Fl Ns Ar pos2 ,
but the old notation is also supported.
.It Fl t Ar char , Fl Fl field-separator Ns = Ns Ar char
Use
.Ar char
as the field separator character.
The initial
.Ar char
is not considered to be part of a field when determining key offsets.
Each occurrence of
.Ar char
is significant (for example,
.Dq Ar charchar
delimits an empty field).
If
.Fl t
is not specified, the default field separator is a sequence of
blank-space characters, and consecutive blank spaces do
.Em not
delimit an empty field; further, the initial blank space
.Em is
considered part of a field when determining key offsets.
To use NUL as field separator, use
.Fl t
\'\\0\'.
.It Fl z , Fl Fl zero-terminated
Use NUL as the record separator.
By default, records in the files are expected to be separated by
the newline characters.
With this option, NUL (\'\\0\') is used as the record separator character.
.El
.Pp
Other options:
.Bl -tag -width indent
.It Fl Fl batch-size Ns = Ns Ar num
Specify maximum number of files that can be opened by
.Nm
at once.
This option affects behavior when having many input files or using
temporary files.
The minimum value is 2.
The default value is 16.
.It Fl Fl compress-program Ns = Ns Ar program
Use
.Ar program
to compress temporary files.
When invoked with no arguments,
.Ar program
must compress standard input to standard output.
When called with the
.Fl d
option, it must decompress standard input to standard output.
If
.Ar program
fails,
.Nm
will exit with an error.
The
.Xr compress 1
and
.Xr gzip 1
utilities meet these requirements.
.It Fl Fl debug
Print some extra information about the sorting process to the
standard output.
.It Fl Fl files0-from Ns = Ns Ar filename
Take the input file list from the file
.Ar filename .
The file names must be separated by NUL
(like the output produced by the command
.Dq find ... -print0 ) .
.It Fl Fl heapsort
Try to use heap sort, if the sort specifications allow.
This sort algorithm cannot be used with
.Fl u
and
.Fl s .
.It Fl Fl help
Print the help text and exit.
.It Fl Fl mergesort , Fl H
Use mergesort.
This is a universal algorithm that can always be used,
but it is not always the fastest.
.It Fl Fl mmap
Try to use file memory mapping system call.
It may increase speed in some cases.
.It Fl Fl qsort
Try to use quick sort, if the sort specifications allow.
This sort algorithm cannot be used with
.Fl u
and
.Fl s .
.It Fl Fl radixsort
Try to use radix sort, if the sort specifications allow.
The radix sort can only be used for trivial locales (C and POSIX),
and it cannot be used for numeric or month sort.
Radix sort is very fast and stable.
.It Fl Fl random-source Ns = Ns Ar filename
For random sort, the contents of
.Ar filename
are used as the source of the
.Sq seed
data for the hash function.
Two invocations of random sort with the same seed data will use
produce the same result if the input is also identical.
By default, the
.Xr arc4random_buf 3
function is used instead.
.It Fl Fl version
Print the version and exit.
.El
.Pp
A field is defined as a maximal sequence of characters other than the
field separator and record separator
.Pq newline by default .
Initial blank spaces are included in the field unless
.Fl b
has been specified;
the first blank space of a sequence of blank spaces acts as the field
separator and is included in the field (unless
.Fl t
is specified).
For example, by default all blank spaces at the beginning of a line are
considered to be part of the first field.
.Pp
Fields are specified by the
.Fl k Ar field1 Ns Op , Ns Ar field2
option.
If
.Ar field2
is missing, the end of the key defaults to the end of the line.
.Pp
The arguments
.Ar field1
and
.Ar field2
have the form
.Em m.n
.Em (m,n > 0)
and can be followed by one or more of the modifiers
.Cm b , d , f , i ,
.Cm n , g , M
and
.Cm r ,
which correspond to the options discussed above.
When
.Cm b
is specified it applies only to
.Ar field1
or
.Ar field2
where it is specified while the rest of the modifiers
apply to the whole key field regardless if they are
specified only with
.Ar field1
or
.Ar field2
or both.
A
.Ar field1
position specified by
.Em m.n
is interpreted as the
.Em n Ns th
character from the beginning of the
.Em m Ns th
field.
A missing
.Em \&.n
in
.Ar field1
means
.Ql \&.1 ,
indicating the first character of the
.Em m Ns th
field; if the
.Fl b
option is in effect,
.Em n
is counted from the first non-blank character in the
.Em m Ns th
field;
.Em m Ns \&.1b
refers to the first non-blank character in the
.Em m Ns th
field.
.No 1\&. Ns Em n
refers to the
.Em n Ns th
character from the beginning of the line;
if
.Em n
is greater than the length of the line, the field is taken to be empty.
.Pp
.Em n Ns th
positions are always counted from the field beginning, even if the field
is shorter than the number of specified positions.
Thus, the key can really start from a position in a subsequent field.
.Pp
A
.Ar field2
position specified by
.Em m.n
is interpreted as the
.Em n Ns th
character (including separators) from the beginning of the
.Em m Ns th
field.
A missing
.Em \&.n
indicates the last character of the
.Em m Ns th
field;
.Em m
= \&0
designates the end of a line.
Thus the option
.Fl k Ar v.x,w.y
is synonymous with the obsolete option
.Cm \(pl Ns Ar v-\&1.x-\&1
.Fl Ns Ar w-\&1.y ;
when
.Em y
is omitted,
.Fl k Ar v.x,w
is synonymous with
.Cm \(pl Ns Ar v-\&1.x-\&1
.Fl Ns Ar w\&.0 .
The obsolete
.Cm \(pl Ns Ar pos1
.Fl Ns Ar pos2
option is still supported, except for
.Fl Ns Ar w\&.0b ,
which has no
.Fl k
equivalent.
.Sh ENVIRONMENT
.Bl -tag -width Fl
.It Ev GNUSORT_NUMERIC_COMPATIBILITY
If defined
.Fl t
will not override the locale numeric symbols, that is, thousand
separators and decimal separators.
By default, if we specify
.Fl t
with the same symbol as the thousand separator or decimal point,
the symbol will be treated as the field separator.
Older behavior was less definite: the symbol was treated as both field
separator and numeric separator, simultaneously.
This environment variable enables the old behavior.
.It Ev LANG
Used as a last resort to determine different kinds of locale-specific
behavior if neither the respective environment variable nor
.Ev LC_ALL
are set.
.It Ev LC_ALL
Locale settings that override all of the other locale settings.
This environment variable can be used to set all these settings
to the same value at once.
.It Ev LC_COLLATE
Locale settings to be used to determine the collation for
sorting records.
.It Ev LC_CTYPE
Locale settings to be used to case conversion and classification
of characters, that is, which characters are considered
whitespaces, etc.
.It Ev LC_MESSAGES
Locale settings that determine the language of output messages
that
.Nm
prints out.
.It Ev LC_NUMERIC
Locale settings that determine the number format used in numeric sort.
.It Ev LC_TIME
Locale settings that determine the month format used in month sort.
.It Ev TMPDIR
Path to the directory in which temporary files will be stored.
Note that
.Ev TMPDIR
may be overridden by the
.Fl T
option.
.El
.Sh FILES
.Bl -tag -width Pa -compact
.It Pa /tmp/.bsdsort.PID.*
Temporary files.
.El
.Sh EXIT STATUS
The
.Nm
utility exits with one of the following values:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It 0
Successfully sorted the input files or if used with
.Fl C
or
.Fl c ,
the input file already met the sorting criteria.
.It 1
On disorder (or non-uniqueness) with the
.Fl C
or
.Fl c
options.
.It 2
An error occurred.
.El
.Sh SEE ALSO
.Xr comm 1 ,
.Xr join 1 ,
.Xr uniq 1
.Sh STANDARDS
The
.Nm
utility is compliant with the
.St -p1003.1-2008
specification.
.Pp
The flags
.Op Fl gHhiMRSsTVz
are extensions to that specification.
.Pp
All long options are extensions to the specification.
Some are provided for compatibility with GNU
.Nm ,
others are specific to this implementation.
.Pp
Some implementations of
.Nm
honor the
.Fl b
option even when no key fields are specified.
This implementation follows historic practice and
.St -p1003.1-2008
in only honoring
.Fl b
when it precedes a key field.
.Pp
The historic practice of allowing the
.Fl o
option to appear after the
.Ar file
is supported for compatibility with older versions of
.Nm .
.Pp
The historic key notations
.Cm \(pl Ns Ar pos1
and
.Fl Ns Ar pos2
are supported for compatibility with older versions of
.Nm
but their use is highly discouraged.
.Sh HISTORY
A
.Nm
command appeared in
.At v3 .
.Sh AUTHORS
.An Gabor Kovesdan Aq Mt gabor@@FreeBSD.org
.An Oleg Moskalenko Aq Mt mom040267@@gmail.com
.Sh CAVEATS
This implementation of
.Nm
has no limits on input line length (other than imposed by available
memory) or any restrictions on bytes allowed within lines.
.Pp
The performance depends highly on locale settings,
efficient choice of sort keys and key complexity.
The fastest sort is with the C locale, on whole lines, with option
.Fl s .
In general, the C locale is the fastest, followed by single-byte
locales with multi-byte locales being the slowest.
The correct collation order respected in all cases.
For the key specification, the simpler to process the
lines the faster the search will be.
.Pp
When sorting by arithmetic value, using
.Fl n
results in much better performance than
.Fl g
so its use is encouraged whenever possible.
@


1.55
log
@missing .Fl macro, from Jan Stary
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.54 2015/04/05 14:20:22 millert Exp $
d35 1
a35 1
.Dd $Mdocdate: April 5 2015 $
d117 1
a117 1
.Pa /var/tmp
d548 1
a548 1
.It Pa /var/tmp/.bsdsort.PID.*
@


1.54
log
@Document that some sorts uses -b w/o key fields.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.53 2015/04/05 13:56:04 millert Exp $
d55 5
a59 1
newline (default) or NUL \'\\0\' character (-z option).
@


1.53
log
@The -b flag should only apply when key fields are specified.
If -b follows -k it has no effect.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.52 2015/04/05 13:54:06 millert Exp $
d587 11
@


1.52
log
@Do not permute command line arguments but still support the
obsolescent "-o outfile" after input files syntax.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.51 2015/04/01 19:56:01 millert Exp $
d35 1
a35 1
.Dd $Mdocdate: April 1 2015 $
a139 2
.It Fl b, Fl Fl ignore-leading-blanks
Ignore leading blank characters when comparing lines.
d236 5
@


1.51
log
@Use strtonum() to parse argument to --batch-size and document the
minimum value in the manual.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.50 2015/03/21 21:47:37 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: March 21 2015 $
d584 7
@


1.50
log
@typo/grammar fixes;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.49 2015/03/21 21:30:58 jmc Exp $
d296 1
@


1.49
log
@sort options, and generally shuffle around; do not give "file operands" its own
section;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.48 2015/03/21 21:19:25 jmc Exp $
d105 1
a105 1
and equal key.
d151 4
a154 3
this option handles general floating points, which have a much
permissive format than those allowed by
. Fl n ,
d502 1
a502 1
Older behavior was less definite; the symbol was treated as both field
d507 1
a507 1
behavior if neither the respective environment variable, nor
d511 1
a511 1
Locale settings that override all of the above locale settings.
@


1.48
log
@too late, alas, i found one more arc4random Fn that is better as Xr;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.47 2015/03/21 21:18:02 jmc Exp $
d66 8
a125 4
.It Fl Fl version
Print the version and exit.
.It Fl Fl help
Print the help text and exit.
a315 11
.It Fl Fl random-source Ns = Ns Ar filename
For random sort, the contents of
.Ar filename
are used as the source of the
.Sq seed
data for the hash function.
Two invocations of random sort with the same seed data will use
produce the same result if the input is also identical.
By default, the
.Xr arc4random_buf 3
function is used instead.
d325 9
a333 6
.It Fl Fl radixsort
Try to use radix sort, if the sort specifications allow.
The radix sort can only be used for trivial locales (C and POSIX),
and it cannot be used for numeric or month sort.
Radix sort is very fast and stable.
.It Fl H, Fl Fl mergesort
d337 3
d346 18
a363 22
.It Fl Fl heapsort
Try to use heap sort, if the sort specifications allow.
This sort algorithm cannot be used with
.Fl u
and
.Fl s .
.It Fl Fl mmap
Try to use file memory mapping system call.
It may increase speed in some cases.
.El
.Pp
The following operands are available:
.Bl -tag -width indent
.It Ar file
The pathname of a file to be sorted, merged, or checked.
If no
.Ar file
operands are specified, or if a
.Ar file
operand is
.Fl ,
the standard input is used.
@


1.47
log
@there is no real need to send readers to arc4random_buf(3) in SEE ALSO, but
in the one place where it is mentioned, use an Xr rather than Fn;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.46 2015/03/21 21:15:12 jmc Exp $
d321 1
a321 1
.Fn arc4random_buf
@


1.46
log
@sort ENVIRONMENT;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.45 2015/03/19 13:51:10 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: March 19 2015 $
d185 1
a185 1
.Fn arc4random_buf ,
d571 1
a571 2
.Xr uniq 1 ,
.Xr arc4random_buf 3
@


1.45
log
@standard sections, and a little more macro stuff;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.44 2015/03/19 13:36:01 jmc Exp $
d497 21
a533 9
.It Ev LC_ALL
Locale settings that override all of the above locale settings.
This environment variable can be used to set all these settings
to the same value at once.
.It Ev LANG
Used as a last resort to determine different kinds of locale-specific
behavior if neither the respective environment variable, nor
.Ev LC_ALL
are set.
a540 12
.It Ev GNUSORT_NUMERIC_COMPATIBILITY
If defined
.Fl t
will not override the locale numeric symbols, that is, thousand
separators and decimal separators.
By default, if we specify
.Fl t
with the same symbol as the thousand separator or decimal point,
the symbol will be treated as the field separator.
Older behavior was less definite; the symbol was treated as both field
separator and numeric separator, simultaneously.
This environment variable enables the old behavior.
@


1.44
log
@macro fixes;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.43 2015/03/19 13:11:05 jmc Exp $
d385 1
a385 3
.Sm off
.Fl k\ \& Ar field1 Op , Ar field2
.Sm on
d604 1
a604 1
.Sh NOTES
@


1.43
log
@update the note in STANDARDS about which options are extensions; also add -m
to SYNOPSIS and usage(), which i missed in previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.42 2015/03/19 11:38:12 jmc Exp $
d202 13
a214 12
.Bl -tag -width indent
.It Example:
.It $ ls sort* | sort -V
.It sort-1.022.tgz
.It sort-1.23.tgz
.It sort-1.23.1.tgz
.It sort-1.024.tgz
.It sort-1.024.003.
.It sort-1.024.003.tgz
.It sort-1.024.07.tgz
.It sort-1.024.009.tgz
.El
d328 1
a328 1
.Ar filename.
d604 2
a605 3
Gabor Kovesdan <gabor@@FreeBSD.org>
.br
Oleg Moskalenko <mom040267@@gmail.com>
@


1.42
log
@first run through this page. mainly getting SYNOPSIS and usage() orderly
(if perhaps not quite correct yet);
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.41 2015/03/17 17:45:13 millert Exp $
d35 1
a35 1
.Dd $Mdocdate$
d43 1
a43 1
.Op Fl bCcdfgHhiMnRrsuVz
d582 1
a582 1
.Op Fl ghRMSsTVz
@


1.41
log
@Initial import of FreeBSD sort.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d35 1
a35 1
.Dd July 3, 2012
d43 2
a44 4
.Op Fl bcCdfghiRMmnrsuVz
.Sm off
.Op Fl k\ \& Ar field1 Op , Ar field2
.Sm on
d46 1
a46 2
.Op Fl S Ar memsize
.Bk -words
a47 1
.Ek
d86 1
a86 1
.It Fl S Ar size, Fl Fl buffer-size Ns = Ns Ar size
d95 4
a117 4
.It Fl s
Stable sort; maintains the original record order of records that have
and equal key.
This is a non-standard feature, but it is widely accepted and used.
d233 2
a234 3
.Sm off
.Fl k\ \& Ar field1 Op , Ar field2 , Fl Fl key Ns = Ns Ar field1 Op , Ar field2
.Sm on
@


1.40
log
@use MB for megabytes instead of Mb;
From: Zeljko Jovanovic
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.39 2010/09/03 11:09:29 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: September 3 2010 $
d40 1
a40 1
.Nd sort, merge, or sequence check text files
d43 1
a43 1
.Op Fl bCcdfHimnrsuz
d48 1
a48 1
.Op Fl R Ar char
d57 9
a65 11
utility sorts text files by lines,
operating in one of three modes: sort, merge, or check.
In sort mode, the specified files are combined and sorted
by line.
Merge mode is the same as sort mode except that the input
files are assumed to be pre-sorted.
In check mode, a single input file is checked to ensure that
it is correctly sorted.
.Pp
Comparisons are based on one or more sort keys extracted
from each line of input, and are performed lexicographically.
d68 1
a68 1
regards each input line as a single field.
d72 1
a72 1
.It Fl C
d76 1
a76 1
.It Fl c
d82 1
a82 1
.It Fl m
d84 3
a86 8
This option is overridden by the
.Fl C
or
.Fl c
options,
if they are also present.
.It Fl o Ar output
The argument given is the name of an
d88 1
a88 1
file to be used instead of the standard output.
d90 13
a102 5
.It Fl T Ar dir
Use
.Ar dir
as the directory for temporary files.
The default is the contents of the environment variable
d108 2
a109 2
does not exist.
.It Fl u
d111 2
a112 1
If used with the
d115 3
a117 9
.Fl c
options, also check that there are no lines with duplicate keys.
.El
.Pp
The following options override the default ordering rules globally:
.Bl -tag -width indent
.It Fl H
Use a merge sort instead of a radix sort.
This option should be used for files larger than 60MB.
d119 7
a125 3
Enable stable sort.
Uses additional resources (see
.Xr sradixsort 3 ) .
d134 1
a134 2
the ordering options override
all global ordering options for that key.
d140 6
a145 7
.It Fl d
Only blank space and alphanumeric characters
.\" according
.\" to the current setting of LC_CTYPE
are used in making comparisons.
.It Fl f
Considers all lowercase characters that have uppercase
d147 23
a169 1
.It Fl i
d171 4
a174 1
.It Fl n
d182 36
a217 7
(The
.Fl n
option no longer implies the
.Fl b
option.)
.It Fl r
Reverse the sense of comparisons.
d222 5
a226 4
.It Fl b
Ignores leading blank space when determining the start
and end of a restricted sort key.
A
d228 1
a228 1
option specified before the first
d230 2
a231 4
option applies globally to all
.Fl k
options.
Otherwise, the
d233 1
a233 1
option can be attached independently to each
d235 16
a250 1
argument of the
d252 7
a258 14
option (see below).
Note that
.Fl b
should not appear after
.Fl k ,
and that it has no effect unless key fields are specified.
.It Fl R Ar char
.Ar char
is used as the record separator character.
This should be used with discretion;
.Fl R Aq Ar alphanumeric
usually produces undesirable results.
The default record separator is newline.
.It Fl t Ar char
d260 1
a260 1
is used as the field separator character.
d277 8
a284 2
.It Fl z
Uses the nul character as the record separator.
d287 1
a287 1
Sort keys are specified with:
d289 22
a310 10
.It Xo
.Sm off
.Fl k\ \& Ar field1 Op , Ar field2
.Sm on
.Xc
Designates the starting position,
.Ar field1 ,
and optional ending position,
.Ar field2 ,
of a key field.
d312 43
a354 7
.Fl k
option may be specified multiple times,
in which case subsequent keys are compared after earlier keys compare equal.
The
.Fl k
option replaces the obsolescent options
.Cm \(pl Ns Ar pos1
d356 4
a359 1
.Fl Ns Ar pos2 .
d392 2
a393 2
argument.
A missing
d395 1
a395 1
argument defaults to the end of a line.
d404 1
a404 1
and can be followed by one or more of the letters
d406 1
a406 1
.Cm n ,
d410 13
d459 5
d470 1
a470 1
character (including separators) of the
d483 1
a483 1
is synonymous with the obsolescent option
d493 1
a493 1
The obsolescent
d503 25
d529 1
a529 1
Path in which to store temporary files.
d535 12
d550 2
a551 8
.It Pa /var/tmp/sort.*
default temporary directories
.It Pa output Ns #PID
temporary name for
.Ar output
if
.Ar output
already exists
d560 5
a564 1
Normal behavior.
d566 1
a566 1
The input file is not sorted and
d570 1
a570 5
was given, or there are duplicate keys and
.Fl Cu
or
.Fl cu
was given.
d578 1
a578 1
.Xr radixsort 3
d587 1
a587 1
.Op Fl HRsTz
d589 13
d607 4
d612 1
d617 9
a625 8
To protect data
.Nm
.Fl o
calls
.Xr link 2
and
.Xr unlink 2 ,
and thus fails on protected directories.
d627 5
a631 22
The current sort command uses lexicographic radix sorting, which requires
that sort keys be kept in memory (as opposed to previous versions which
used quick and merge sorts and did not).
Thus performance depends highly on efficient choice of sort keys, and the
.Fl b
option and the
.Ar field2
argument of the
.Fl k
option should be used whenever possible.
Similarly,
.Nm
.Fl k1f
is equivalent to
.Nm
.Fl f
and may take twice as long.
.Sh BUGS
To sort files larger than 60MB, use
.Nm
.Fl H ;
files larger than 704MB must be sorted in smaller pieces, then merged.
@


1.39
log
@add an EXIT STATUS section for /usr/bin;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.38 2010/06/28 15:28:52 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: June 28 2010 $
d121 1
a121 1
This option should be used for files larger than 60Mb.
d461 1
a461 1
To sort files larger than 60Mb, use
d464 1
a464 1
files larger than 704Mb must be sorted in smaller pieces, then merged.
@


1.38
log
@move -H and -s to their own little section, since they did not belong in
the section they were in;

from Daniel Dickman
ok otto sobrado
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.37 2010/06/11 06:51:41 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: June 11 2010 $
a366 21
.Pp
The
.Nm
utility exits with one of the following values:
.Pp
.Bl -tag -width flag -compact
.It 0
Normal behavior.
.It 1
The input file is not sorted and
.Fl C
or
.Fl c
was given, or there are duplicate keys and
.Fl Cu
or
.Fl cu
was given.
.It 2
An error occurred.
.El
d387 21
@


1.37
log
@various fixes from Daniel Dickman:
- clarify sort's various modes of operation
- -m is overridden by -C and -c
- ordering options should not appear after -k
- give -k it's own little section (aw!)

discussed with, tweaked by, and ok sobrado millert otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.36 2010/05/27 20:32:41 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: May 27 2010 $
d117 11
a148 3
.It Fl H
Use a merge sort instead of a radix sort.
This option should be used for files larger than 60Mb.
a165 4
.It Fl s
Enable stable sort.
Uses additional resources (see
.Xr sradixsort 3 ) .
@


1.36
log
@"Pa Ar" produces wonky output, and makes no sense;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.35 2009/12/22 19:47:02 schwarze Exp $
d35 1
a35 1
.Dd $Mdocdate: December 22 2009 $
d40 1
a40 1
.Nd sort or merge text files
d57 9
a65 1
utility sorts text files by lines.
d81 1
a81 1
but write a message to
d86 6
d118 3
a120 3
When ordering options appear independent of key field
specifications, the requested field ordering rules are
applied globally to all sort keys.
d125 4
d183 1
a183 1
Note that the
d185 3
a187 21
option has no effect unless key fields are specified.
.It Xo
.Sm off
.Fl k\ \& Ar field1 Op , Ar field2
.Sm on
.Xc
Designates the starting position,
.Ar field1 ,
and optional ending position,
.Ar field2 ,
of a key field.
The
.Fl k
option may be specified multiple times,
in which case subsequent keys are compared after earlier keys compare equal.
The
.Fl k
option replaces the obsolescent options
.Cm \(pl Ns Ar pos1
and
.Fl Ns Ar pos2 .
d216 24
@


1.35
log
@implement -C (silent -c), required by POSIX.1-2008;
patch from Daniel Dickman <didickman at gmail dot com> tweaked by me;
"looks ok" millert@@, manual help and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.34 2009/08/16 09:41:08 sobrado Exp $
d35 1
a35 1
.Dd $Mdocdate: August 16 2009 $
d374 1
a374 1
.It Pa Ar output Ns #PID
@


1.34
log
@replace ".Ar file ..." with ".Ar" whenever possible.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.33 2009/02/08 17:15:10 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: February 8 2009 $
d43 1
a43 1
.Op Fl bcdfHimnrsuz
d66 4
d71 5
a75 10
Check that the single input file is sorted.
If the file is not sorted,
.Nm
produces the appropriate error messages and exits with code 1; otherwise,
.Nm
returns 0.
.Nm
.Fl c
produces no output, except the error messages on
.Em stderr .
d97 2
d100 1
a100 1
option, also check that there are no lines with duplicate keys.
d342 1
a342 1
utility shall exit with one of the following values:
d348 3
a350 1
On disorder (or non-uniqueness) with the
d352 5
a356 1
option.
@


1.33
log
@bump the posix reference in STANDARDS to IEEE Std 1003.1-2008, with a few
updates to follow;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.32 2008/10/01 06:39:18 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: October 1 2008 $
d53 1
a53 1
.Op Ar file ...
@


1.32
log
@-s not specified by posix; from Daniel Dickman
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.31 2007/08/21 21:22:37 millert Exp $
d35 1
a35 1
.Dd $Mdocdate: August 21 2007 $
d383 1
a383 1
.St -p1003.1-2004
@


1.31
log
@Fix up the -s description, with help from tom@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.30 2007/08/21 20:29:25 millert Exp $
d387 1
a387 1
.Op Fl HRTz
@


1.30
log
@Add a -s option to make the radix sort be a stable sort.  Based on
a diff from Eric Gouyer.  Closes PR 5553.  OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.29 2007/05/31 19:20:16 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate$
d140 3
a142 1
Enable stable sort. Use additional resources (see sradixsort(3)).
@


1.29
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.28 2007/05/30 04:41:34 jmc Exp $
d43 1
a43 1
.Op Fl bcdfHimnruz
d139 2
@


1.28
log
@- use a consistent text for STANDARDS
- note which options are extensions to POSIX
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.27 2005/10/28 23:18:17 dlg Exp $
d35 1
a35 1
.Dd June 6, 1993
@


1.27
log
@sort is part of posix so document it as such. more importantly list our
extensions so hopefully people moving scripts to other platforms wont get
too confused. this has been bothering me since -z was added.

big help from and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.26 2005/10/04 18:13:22 jmc Exp $
d378 2
a379 2
utility is expected to be compliant with the
.St -p1003.1-2001
d384 1
a384 1
are extensions to the specification.
@


1.26
log
@clarify behaviour of -u option;
ok otto@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.25 2005/10/04 15:12:01 jmc Exp $
d375 10
@


1.25
log
@document that -k may be specified multiple times,
and the effect of doing so;

ok otto@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.24 2005/10/04 11:26:43 jmc Exp $
d99 1
a99 1
option, check that there are no lines with duplicate keys.
@


1.24
log
@remove ellipsis following -k in synopsis; my last commit put this
in the wrong place, but i think it will be clearer to remove it
altogether and improve the description of -k (to follow);

ok otto@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.23 2005/09/28 10:10:16 jmc Exp $
d173 4
@


1.23
log
@sort options and sync usage();
some help from dlg@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.21 2003/07/14 12:56:07 jmc Exp $
a43 1
.Oo
d45 1
a45 3
.Fl k
.Ar field1 Op , Ar field2
.Ar ...
a46 1
.Oc
@


1.22
log
@add a -z option that allows you to split records on the nul character
('\0'). useful in combination with things like "find . -print0" and
"xargs -0". for dewi, a chump.

ok deraadt@@
@
text
@d43 1
a43 3
.Op Fl cmubdfinrzH
.Op Fl t Ar char
.Op Fl R Ar char
d45 5
a49 1
.Fl k Ar field1[,field2]
d51 3
a53 1
.Ar ...
d55 3
a57 3
.Op Fl o Ar output
.Op Ar file
.Ar ...
d123 3
a142 3
.It Fl H
Use a merge sort instead of a radix sort.
This option should be used for files larger than 60Mb.
d167 23
a208 19
.It Fl R Ar char
.Ar char
is used as the record separator character.
This should be used with discretion;
.Fl R Ar <alphanumeric>
usually produces undesirable results.
The default record separator is newline.
.It Fl k Ar field1[,field2]
Designates the starting position,
.Ar field1 ,
and optional ending position,
.Ar field2 ,
of a key field.
The
.Fl k
option replaces the obsolescent options
.Cm \(pl Ns Ar pos1
and
.Fl Ns Ar pos2 .
d240 3
a242 1
.Fl k Ar field1[,field2]
@


1.21
log
@- .Cm Fl -> .Fl
- fix list width
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.20 2003/06/03 02:56:16 millert Exp $
d43 1
a43 1
.Op Fl cmubdfinrH
d201 2
@


1.20
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.19 2003/03/31 18:28:50 tdeval Exp $
d47 1
a47 1
.Cm Fl k Ar field1[,field2]
d65 1
a65 1
.Bl -tag -width file Ds
@


1.19
log
@Sync positional arguments equivalence's description with reality.
ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.18 2002/11/09 02:22:33 fgsch Exp $
d17 1
a17 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.18
log
@more SEE ALSO fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.16 2002/01/24 20:33:46 mickey Exp $
d317 1
a317 1
.Fl Ns Ar w+1.0 .
@


1.17
log
@Typo.
@
text
@d365 2
a366 2
.Xr radixsort 3 ,
.Xr uniq 1
@


1.16
log
@fix the history refs
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.15 2001/05/01 17:58:04 aaron Exp $
d142 1
a142 1
This options should be used for files larger than 60Mb.
@


1.15
log
@Remove completely redundant introductory sentences in ENVIRONMENT sections.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.14 2001/02/04 21:27:01 ericj Exp $
d371 1
a371 1
.At v5 .
@


1.14
log
@
Bring in some recent fixup's from NetBSD. This allows lines longer than 65522
to be properly sorted. Many other cleanup's done, and depreciate register.
millert@@ and deraadt@@ ok.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.13 2000/11/09 17:52:39 aaron Exp $
a341 2
The following environment variables affect the execution of
.Nm sort :
@


1.13
log
@Change all option list specifications to ".Bl -tag -width Ds". Most man
pages just needed their -width parameter tweaked to "Ds", which provides
a nice width of 6 constant characters. For consistency more than anything.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.12 2000/10/18 05:24:12 aaron Exp $
d367 1
d375 13
a405 1
Lines longer than 65522 characters are discarded and processing continues.
a409 4
To protect data
.Nm
.Fl o
calls link and unlink, and thus fails in protected directories.
@


1.12
log
@- Section shuffling.
- Remove short lines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.11 2000/07/06 04:06:56 aaron Exp $
d69 1
a69 1
.Bl -tag -width file indent
@


1.11
log
@Insert more missing .El directives. Our troff really should identify these and
spit out a warning.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.10 2000/04/12 21:47:50 aaron Exp $
d61 1
a61 2
utility
sorts text files by lines.
d74 1
a74 2
produces the appropriate error messages and exits with code 1;
otherwise,
d86 2
a87 4
file to
be used instead of the standard output.
This file
can be the same as one of the input files.
d100 1
a100 2
Unique: suppress all but one in each set of lines
having equal keys.
d103 1
a103 2
option,
check that there are no lines with duplicate keys.
d119 1
a119 2
are used
in making comparisons.
d122 1
a122 2
equivalents to be the same for purposes of
comparison.
d126 2
a127 3
An initial numeric string, consisting of optional
blank space, optional minus sign, and zero or more
digits (including decimal point)
d135 1
a135 2
option no longer implies
the
d145 1
a145 2
The treatment of field separators can be altered using these
options:
d159 1
a159 2
option can be
attached independently to each
d166 1
a166 2
option
has no effect unless key fields are specified.
d172 1
a172 2
is not considered to be part of a field when determining
key offsets.
d213 1
a213 2
operands are specified, or if
a
d220 1
a220 2
A field is
defined as a maximal sequence of characters other than the
d233 1
a233 2
Fields are specified
by the
d270 1
a270 2
field;
if the
d274 1
a274 2
is counted from the first
non-blank character in the
d278 1
a278 2
refers to the first
non-blank character in the
d293 1
a293 2
is interpreted as
the
a367 10
.Sh BUGS
Lines longer than 65522 characters are discarded and processing continues.
To sort files larger than 60Mb, use
.Nm
.Fl H ;
files larger than 704Mb must be sorted in smaller pieces, then merged.
To protect data
.Nm
.Fl o
calls link and unlink, and thus fails in protected directories.
d375 2
a376 2
that sort keys be kept in memory (as opposed to previous versions which used quick
and merge sorts and did not).
d391 10
@


1.10
log
@Trailing whitespace begone!
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.9 2000/03/24 21:41:09 aaron Exp $
d373 1
@


1.9
log
@Correct the HISTORY section to note that this command appeared in Version 5
of AT&T UNIX, not Version 6. Verified by strings(1)'ing a .dsk file (PDP-11
executable) containing the v5 sources, obtainable at gatekeeper.dec.com in the
directory /pub/DEC/sim/software. Idea from NetBSD PR/4790.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.8 2000/03/11 21:40:03 aaron Exp $
d266 1
a266 1
.Cm n , 
@


1.8
log
@Various cleanups and standardizations.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.7 2000/03/05 00:28:55 aaron Exp $
d402 1
a402 1
.At v6 .
@


1.7
log
@Finish standardizing options list introduction.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.6 2000/01/05 07:40:43 pjanzen Exp $
d60 1
a60 1
.Nm sort
d64 3
a66 3
from each line of input, and are performed
lexicographically. By default, if keys are not given,
.Nm sort
d74 1
a74 1
.Nm sort
d77 1
a77 1
.Nm sort
d79 1
a79 1
.Nm sort
d95 2
a96 2
as the directory for temporary files.  The default is the contents
of the environment variable
d151 2
a152 2
Use a merge sort instead of a radix sort.  This option should be
used for files larger than 60Mb.
d182 2
a183 1
is used as the field separator character. The initial
d252 2
a253 1
argument. A missing
d347 15
d363 1
a363 1
If the following environment variable exists, it is utilized by
a387 13
.Sh RETURN VALUES
.Nm sort
exits with one of the following values:
.Pp
.Bl -tag -width flag -compact
.It 0
Normal behavior.
.It 1
On disorder (or non-uniqueness) with the
.Fl c
option.
.It 2
An error occurred.
d391 1
a391 1
.Nm sort
d395 1
a395 1
.Nm sort
d400 1
a400 1
.Nm sort
d415 1
a415 1
.Nm sort
d418 1
a418 1
.Nm sort
@


1.6
log
@clarify; suggestions from austin@@canuck.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.5 1999/06/05 01:21:40 aaron Exp $
d69 1
a69 1
The following options are available:
@


1.5
log
@- remove trailing white space
- remove arguments from .Os macros
- remove arguments from .Nm macros, where appropriate
- some more Dq/Sq/Ql insanity
- still lots to do in the usr.bin tree... :/
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.4 1999/06/01 22:13:43 aaron Exp $
d81 2
a82 1
produces no output.
d185 1
a185 1
key offsets (see below).
d193 6
a198 3
is not specified,
blank space characters are used as default field
separators.
d235 12
a246 8
defined as a minimal sequence of characters followed by a
field separator or a newline character.
By default, the first
blank space of a sequence of blank spaces acts as the field separator.
All blank spaces in a sequence of blank spaces are considered
as part of the next field; for example, all blank spaces at
the beginning of a line are considered to be part of the
first field.
d261 7
a267 3
followed by one or more of the options
.Fl b , d , f , i ,
.Fl n , r .
a271 1
.Em (m,n > 0)
d274 1
a274 1
character in the
d299 7
@


1.4
log
@s/line/record/; phil@@athenaeum.jellybaby.net
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.3 1998/09/27 16:57:54 aaron Exp $
d205 1
a205 1
and optional ending position, 
d301 1
a301 1
indicates the last character of the 
d304 1
a304 1
.Em m 
d317 1
a317 1
.Cm \(pl Ns Ar v-\&1.x-\&1 
@


1.3
log
@usr.bin/ man page cleanups, n-s
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.2 1998/07/24 00:32:23 deraadt Exp $
d201 1
a201 1
The default line separator is newline.
@


1.2
log
@put -H in synopsis; aaron@@ug.cs.dal.ca
@
text
@d1 1
a1 1
.\"	$OpenBSD: sort.1,v 1.1 1997/01/20 19:39:55 millert Exp $
d70 1
a70 1
.Bl -tag -width indent
d79 1
a79 1
.Nm Sort
d154 1
a154 1
The treatment of field separators can be altered using the
d180 1
a180 1
.Ar Char
d196 1
a196 1
.Ar Char
d218 3
a221 2
The pathname of a file to be sorted, merged, or checked.
If no file
d223 3
a225 1
a file operand is
d228 1
d275 1
a275 1
If the
d323 1
a323 1
.Fl Ns Ar w\&.0b,
d329 1
a329 1
.Nm sort .
d332 2
a333 5
.Nm Sort
uses the contents of the
.Ev TMPDIR
environment variable as the path in which to store
temporary files.  Note that
d341 1
a341 1
Default temporary directories.
d343 1
a343 1
Temporary name for
d347 1
a347 1
already exists.
d351 2
a352 2
.Xr uniq 1 ,
.Xr join 1
d354 3
a356 1
Sort exits with one of the following values:
d358 4
a361 4
.It Pa 0:
normal behavior.
.It Pa 1:
on disorder (or non-uniqueness) with the
d363 3
a365 3
option
.It Pa 2:
an error occurred.
d384 1
a384 1
and merge sorts and did not.)
@


1.1
log
@sort(1) from 4.4BSD-lite2 with minor tweaks and bug fixes by me.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d47 1
a47 1
.Op Fl cmubdfinr
@

