head	1.13;
access;
symbols
	OPENBSD_6_0:1.13.0.6
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.4
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.12.0.18
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.22
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.20
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.16
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.14
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.12
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.10
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.4
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.10.0.2
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.7.0.20
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.18
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.16
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.14
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.18
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.16
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.14
	OPENBSD_2_8:1.4.0.12
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.10
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.8
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.6
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.4
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2015.03.15.00.41.28;	author millert;	state Exp;
branches;
next	1.12;
commitid	IbVxlqGw2UipKdDr;

1.12
date	2009.10.27.23.59.36;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2009.03.05.20.53.13;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2008.12.16.05.25.55;	author guenther;	state Exp;
branches;
next	1.9;

1.9
date	2008.10.09.18.33.15;	author chl;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.19.19.16.04;	author tobias;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.01.01.01.28;	author avsm;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.03.02.56.06;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.27.19.02.40;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	98.03.30.06.59.34;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.06.17.20.49.56;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.31.59;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.00;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.00;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@tzfile.h is an internal header that should never have been installed.
What's worse, the tzfile.h that gets installed is over 20 years old
and doesn't match the real tzfile.h in libc/time.  This makes the
tree safe for /usr/include/tzfile.h removal.  The TM_YEAR_BASE
define has been moved to time.h temporarily until its usage is
replaced by 1900 in the tree.  Actual removal of tzfile.h is pending
a ports build.  Based on a diff from deraadt@@
@
text
@/*	$OpenBSD: util.c,v 1.12 2009/10/27 23:59:36 deraadt Exp $	*/
/*	$NetBSD: util.c,v 1.4 1995/03/26 04:55:35 glass Exp $	*/

/*-
 * Copyright (c) 1988, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>

#include <ctype.h>
#include <pwd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>

#include "chpass.h"

char *
ttoa(char *buf, size_t len, time_t tval)
{
	if (tval) {
		struct tm *tp = localtime(&tval);

		(void) strftime(buf, len, "%B %d, %Y", tp);
		buf[len - 1] = '\0';
	} else if (len > 0)
		*buf = '\0';
	return (buf);
}

int
atot(char *p, time_t *store)
{
	struct tm tm;
	char *t;

	if (!*p) {
		*store = 0;
		return (0);
	}
	(void) memset(&tm, 0, sizeof(tm));
	for (t = p; (t = strchr(t, ',')) != NULL; t++)
		*t = ' ';
	t = strptime(p, "%B %d %Y", &tm);
	if (t == NULL || (*t != '\0' && *t != '\n'))
		return 1;
	tm.tm_isdst = -1;
	*store = mktime(&tm);
	if (*store == (time_t) -1)
		return 1;
	return (0);
}

int
ok_shell(char *name, char **out)
{
	char *p, *sh;

	setusershell();
	while ((sh = getusershell()) != NULL) {
		if (!strcmp(name, sh))
			break;
		/* allow just shell name, but use "real" path */
		if ((p = strrchr(sh, '/')) && strcmp(name, p + 1) == 0)
			break;
	}
	if (sh && out)
		*out = strdup(sh);
	endusershell();
	return (sh != NULL);
}
@


1.12
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.11 2009/03/05 20:53:13 millert Exp $	*/
a40 1
#include <tzfile.h>
@


1.11
log
@Call endusershell() at the end of ok_shell(), making a copy of the
(possibly) expanded shell as needed.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.10 2008/12/16 05:25:55 guenther Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)util.c	8.4 (Berkeley) 4/2/94";
#else
static char rcsid[] = "$OpenBSD: util.c,v 1.10 2008/12/16 05:25:55 guenther Exp $";
#endif
#endif /* not lint */
@


1.10
log
@strptime() never sets tm_isdst, so set it to -1 before passing the
struct tm to mktime() so that the calculation will follow the local
DST rules

ok millert@@ otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.9 2008/10/09 18:33:15 chl Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: util.c,v 1.9 2008/10/09 18:33:15 chl Exp $";
d90 2
a91 2
char *
ok_shell(char *name)
d98 1
a98 1
			return (name);
d101 1
a101 1
			return (sh);
d103 4
a106 1
	return (NULL);
@


1.9
log
@remove unused variable

ok millert@@ jsing@@
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.8 2008/06/19 19:16:04 tobias Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: util.c,v 1.8 2008/06/19 19:16:04 tobias Exp $";
d83 1
@


1.8
log
@Moved the unset of TZ environment variable out of atot into main, removing
an unused static var and test out of atot.

With input by jsing and millert, ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.7 2003/07/01 01:01:28 avsm Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: util.c,v 1.7 2003/07/01 01:01:28 avsm Exp $";
a70 1
	time_t tval;
@


1.7
log
@- no need for pathnames.h, just use <paths.h> instead
- bump mktemp randomness slightly from 8 -> 10
millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.6 2003/06/03 02:56:06 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: util.c,v 1.6 2003/06/03 02:56:06 millert Exp $";
a69 1
	static struct tm *lt;
a76 5
	}
	if (!lt) {
		unsetenv("TZ");
		(void)time(&tval);
		lt = localtime(&tval);
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.5 2002/06/27 19:02:40 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: util.c,v 1.5 2002/06/27 19:02:40 deraadt Exp $";
a52 1
#include "pathnames.h"
@


1.5
log
@cleanup; mpech & millert ok
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.4 1998/03/30 06:59:34 deraadt Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: util.c,v 1.4 1998/03/30 06:59:34 deraadt Exp $";
@


1.4
log
@Y2K fixes from Andreas.Gunnarsson@@emw.ericsson.se; culled from various places
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.3 1997/06/17 20:49:56 kstailey Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: util.c,v 1.3 1997/06/17 20:49:56 kstailey Exp $";
d60 1
a60 4
ttoa(buf, len, tval)
	char *buf;
	size_t len;
	time_t tval;
d67 1
a67 2
	}
	else if (len > 0)
d70 1
a70 1
} 
d73 1
a73 3
atot(p, store)
	char *p;
	time_t *store;
d77 1
a78 1
	time_t tval;
d102 1
a102 2
ok_shell(name)
	char *name;
@


1.3
log
@(foo *)NULL -> NULL
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.2 1996/06/26 05:31:59 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: util.c,v 1.2 1996/06/26 05:31:59 deraadt Exp $";
a58 7
static int dmsize[] =
	{ -1, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
static char *months[] =
	{ "January", "February", "March", "April", "May", "June",
	  "July", "August", "September", "October", "November",
	  "December", NULL };

d60 3
a62 1
ttoa(tval)
d65 2
a66 2
	struct tm *tp;
	static char tbuf[50];
d68 2
a69 4
	if (tval) {
		tp = localtime(&tval);
		(void)sprintf(tbuf, "%s %d, %d", months[tp->tm_mon],
		    tp->tm_mday, tp->tm_year + TM_YEAR_BASE);
d71 3
a73 3
	else
		*tbuf = '\0';
	return (tbuf);
d82 2
a83 1
	char *t, **mp;
a84 1
	int day, month, year;
d95 9
a103 32
	if (!(t = strtok(p, " \t")))
		goto bad;
	for (mp = months;; ++mp) {
		if (!*mp)
			goto bad;
		if (!strncasecmp(*mp, t, 3)) {
			month = mp - months + 1;
			break;
		}
	}
	if (!(t = strtok(NULL, " \t,")) || !isdigit(*t))
		goto bad;
	day = atoi(t);
	if (!(t = strtok(NULL, " \t,")) || !isdigit(*t))
		goto bad;
	year = atoi(t);
	if (day < 1 || day > 31 || month < 1 || month > 12 || !year)
		goto bad;
	if (year < 100)
		year += TM_YEAR_BASE;
	if (year <= EPOCH_YEAR)
bad:		return (1);
	tval = isleap(year) && month > 2;
	for (--year; year >= EPOCH_YEAR; --year)
		tval += isleap(year) ?
		    DAYSPERLYEAR : DAYSPERNYEAR;
	while (--month)
		tval += dmsize[month];
	tval += day;
	tval = tval * HOURSPERDAY * MINSPERHOUR * SECSPERMIN;
	tval -= lt->tm_gmtoff;
	*store = tval;
d114 1
a114 1
	while (sh = getusershell()) {
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.4 1995/03/26 04:55:35 glass Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: util.c,v 1.4 1995/03/26 04:55:35 glass Exp $";
d112 1
a112 1
	if (!(t = strtok((char *)NULL, " \t,")) || !isdigit(*t))
d115 1
a115 1
	if (!(t = strtok((char *)NULL, " \t,")) || !isdigit(*t))
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: util.c,v 1.4 1995/03/26 04:55:35 glass Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
