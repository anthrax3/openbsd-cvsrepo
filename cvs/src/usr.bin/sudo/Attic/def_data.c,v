head	1.12;
access;
symbols
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.9.0.24
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.22
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.18
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.16
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.14
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.12
	OPENBSD_5_0:1.9.0.10
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.8
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.6
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.4
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.6.0.2
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.12
date	2015.07.03.21.51.54;	author millert;	state dead;
branches;
next	1.11;
commitid	8ra5qnWqy2bUhcZn;

1.11
date	2015.01.20.14.35.18;	author krw;	state Exp;
branches;
next	1.10;
commitid	w1edP6YoFEvUUm34;

1.10
date	2015.01.20.04.41.01;	author krw;	state Exp;
branches;
next	1.9;
commitid	4iV7KHZz26Tut4Vx;

1.9
date	2009.04.11.11.48.06;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2008.11.14.11.58.08;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2008.07.31.16.44.03;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2007.12.03.15.09.47;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2007.10.17.04.26.04;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2007.07.26.16.10.16;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2004.11.29.17.29.05;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.28.15.10.51;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.15.21.32.03;	author millert;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Remove sudo, it is now in ports.
@
text
@static struct def_values def_data_lecture[] = {
    { "never", never },
    { "once", once },
    { "always", always },
    { NULL, 0 },
};

static struct def_values def_data_listpw[] = {
    { "never", never },
    { "any", any },
    { "all", all },
    { "always", always },
    { NULL, 0 },
};

static struct def_values def_data_verifypw[] = {
    { "never", never },
    { "all", all },
    { "any", any },
    { "always", always },
    { NULL, 0 },
};

struct sudo_defs_types sudo_defs_table[] = {
    {
	"syslog", T_LOGFAC|T_BOOL,
	"Syslog facility if syslog is being used for logging: %s",
	NULL,
    }, {
	"syslog_goodpri", T_LOGPRI,
	"Syslog priority to use when user authenticates successfully: %s",
	NULL,
    }, {
	"syslog_badpri", T_LOGPRI,
	"Syslog priority to use when user authenticates unsuccessfully: %s",
	NULL,
    }, {
	"long_otp_prompt", T_FLAG,
	"Put OTP prompt on its own line",
	NULL,
    }, {
	"ignore_dot", T_FLAG,
	"Ignore '.' in $PATH",
	NULL,
    }, {
	"mail_always", T_FLAG,
	"Always send mail when sudo is run",
	NULL,
    }, {
	"mail_badpass", T_FLAG,
	"Send mail if user authentication fails",
	NULL,
    }, {
	"mail_no_user", T_FLAG,
	"Send mail if the user is not in sudoers",
	NULL,
    }, {
	"mail_no_host", T_FLAG,
	"Send mail if the user is not in sudoers for this host",
	NULL,
    }, {
	"mail_no_perms", T_FLAG,
	"Send mail if the user is not allowed to run a command",
	NULL,
    }, {
	"tty_tickets", T_FLAG,
	"Use a separate timestamp for each user/tty combo",
	NULL,
    }, {
	"lecture", T_TUPLE|T_BOOL,
	"Lecture user the first time they run sudo",
	def_data_lecture,
    }, {
	"lecture_file", T_STR|T_PATH|T_BOOL,
	"File containing the sudo lecture: %s",
	NULL,
    }, {
	"authenticate", T_FLAG,
	"Require users to authenticate by default",
	NULL,
    }, {
	"root_sudo", T_FLAG,
	"Root may run sudo",
	NULL,
    }, {
	"log_host", T_FLAG,
	"Log the hostname in the (non-syslog) log file",
	NULL,
    }, {
	"log_year", T_FLAG,
	"Log the year in the (non-syslog) log file",
	NULL,
    }, {
	"shell_noargs", T_FLAG,
	"If sudo is invoked with no arguments, start a shell",
	NULL,
    }, {
	"set_home", T_FLAG,
	"Set $HOME to the target user when starting a shell with -s",
	NULL,
    }, {
	"always_set_home", T_FLAG,
	"Always set $HOME to the target user's home directory",
	NULL,
    }, {
	"path_info", T_FLAG,
	"Allow some information gathering to give useful error messages",
	NULL,
    }, {
	"fqdn", T_FLAG,
	"Require fully-qualified hostnames in the sudoers file",
	NULL,
    }, {
	"insults", T_FLAG,
	"Insult the user when they enter an incorrect password",
	NULL,
    }, {
	"requiretty", T_FLAG,
	"Only allow the user to run sudo if they have a tty",
	NULL,
    }, {
	"env_editor", T_FLAG,
	"Visudo will honor the EDITOR environment variable",
	NULL,
    }, {
	"rootpw", T_FLAG,
	"Prompt for root's password, not the users's",
	NULL,
    }, {
	"runaspw", T_FLAG,
	"Prompt for the runas_default user's password, not the users's",
	NULL,
    }, {
	"targetpw", T_FLAG,
	"Prompt for the target user's password, not the users's",
	NULL,
    }, {
	"use_loginclass", T_FLAG,
	"Apply defaults in the target user's login class if there is one",
	NULL,
    }, {
	"set_logname", T_FLAG,
	"Set the LOGNAME and USER environment variables",
	NULL,
    }, {
	"stay_setuid", T_FLAG,
	"Only set the effective uid to the target user, not the real uid",
	NULL,
    }, {
	"preserve_groups", T_FLAG,
	"Don't initialize the group vector to that of the target user",
	NULL,
    }, {
	"loglinelen", T_UINT|T_BOOL,
	"Length at which to wrap log file lines (0 for no wrap): %d",
	NULL,
    }, {
	"timestamp_timeout", T_INT|T_BOOL,
	"Authentication timestamp timeout: %d minutes",
	NULL,
    }, {
	"passwd_timeout", T_UINT|T_BOOL,
	"Password prompt timeout: %d minutes",
	NULL,
    }, {
	"passwd_tries", T_UINT,
	"Number of tries to enter a password: %d",
	NULL,
    }, {
	"umask", T_MODE|T_BOOL,
	"Umask to use or 0777 to use user's: 0%o",
	NULL,
    }, {
	"logfile", T_STR|T_BOOL|T_PATH,
	"Path to log file: %s",
	NULL,
    }, {
	"mailerpath", T_STR|T_BOOL|T_PATH,
	"Path to mail program: %s",
	NULL,
    }, {
	"mailerflags", T_STR|T_BOOL,
	"Flags for mail program: %s",
	NULL,
    }, {
	"mailto", T_STR|T_BOOL,
	"Address to send mail to: %s",
	NULL,
    }, {
	"mailfrom", T_STR|T_BOOL,
	"Address to send mail from: %s",
	NULL,
    }, {
	"mailsub", T_STR,
	"Subject line for mail messages: %s",
	NULL,
    }, {
	"badpass_message", T_STR,
	"Incorrect password message: %s",
	NULL,
    }, {
	"timestampdir", T_STR|T_PATH,
	"Path to authentication timestamp dir: %s",
	NULL,
    }, {
	"timestampowner", T_STR,
	"Owner of the authentication timestamp dir: %s",
	NULL,
    }, {
	"exempt_group", T_STR|T_BOOL,
	"Users in this group are exempt from password and PATH requirements: %s",
	NULL,
    }, {
	"passprompt", T_STR,
	"Default password prompt: %s",
	NULL,
    }, {
	"passprompt_override", T_FLAG,
	"If set, passprompt will override system prompt in all cases.",
	NULL,
    }, {
	"runas_default", T_STR,
	"Default user to run commands as: %s",
	NULL,
    }, {
	"secure_path", T_STR|T_BOOL,
	"Value to override user's $PATH with: %s",
	NULL,
    }, {
	"editor", T_STR|T_PATH,
	"Path to the editor for use by visudo: %s",
	NULL,
    }, {
	"listpw", T_TUPLE|T_BOOL,
	"When to require a password for 'list' pseudocommand: %s",
	def_data_listpw,
    }, {
	"verifypw", T_TUPLE|T_BOOL,
	"When to require a password for 'verify' pseudocommand: %s",
	def_data_verifypw,
    }, {
	"noexec", T_FLAG,
	"Preload the dummy exec functions contained in 'noexec_file'",
	NULL,
    }, {
	"noexec_file", T_STR|T_PATH,
	"File containing dummy exec functions: %s",
	NULL,
    }, {
	"ignore_local_sudoers", T_FLAG,
	"If LDAP directory is up, do we ignore local sudoers file",
	NULL,
    }, {
	"closefrom", T_INT,
	"File descriptors >= %d will be closed before executing a command",
	NULL,
    }, {
	"closefrom_override", T_FLAG,
	"If set, users may override the value of `closefrom' with the -C option",
	NULL,
    }, {
	"setenv", T_FLAG,
	"Allow users to set arbitrary environment variables",
	NULL,
    }, {
	"env_reset", T_FLAG,
	"Reset the environment to a default set of variables",
	NULL,
    }, {
	"env_check", T_LIST|T_BOOL,
	"Environment variables to check for sanity:",
	NULL,
    }, {
	"env_delete", T_LIST|T_BOOL,
	"Environment variables to remove:",
	NULL,
    }, {
	"env_keep", T_LIST|T_BOOL,
	"Environment variables to preserve:",
	NULL,
    }, {
	"role", T_STR,
	"SELinux role to use in the new security context: %s",
	NULL,
    }, {
	"type", T_STR,
	"SELinux type to use in the new security context: %s",
	NULL,
    }, {
	"askpass", T_STR|T_PATH|T_BOOL,
	"Path to the askpass helper program: %s",
	NULL,
    }, {
	"env_file", T_STR|T_PATH|T_BOOL,
	"Path to the sudo-specific environment file: %s",
	NULL,
    }, {
	"sudoers_locale", T_STR,
	"Locale to use while parsing sudoers: %s",
	NULL,
    }, {
	"visiblepw", T_FLAG,
	"Allow sudo to prompt for a password even if it would be visisble",
	NULL,
    }, {
	"pwfeedback", T_FLAG,
	"Provide visual feedback at the password prompt when there is user input",
	NULL,
    }, {
	"fast_glob", T_FLAG,
	"Use faster globbing that is less accurate but does not access the filesystem",
	NULL,
    }, {
	"umask_override", T_FLAG,
	"The umask specified in sudoers will override the user's, even if it is more permissive",
	NULL,
    }, {
	NULL, 0, NULL
    }
};
@


1.11
log
@Revert some $OpenBSD$ additions about which there are doubts.

Suggested by deraadt@@
@
text
@@


1.10
log
@Missing $OpenBSD$'s.

ok deraadt@@
@
text
@a0 1
/*	$OpenBSD$	*/
@


1.9
log
@Update to sudo 1.7.1
@
text
@d1 1
@


1.8
log
@Upgrade to sudo 1.7.  See the WHATSNEW files for details.
@
text
@d306 12
@


1.7
log
@Update to sudo 1.6.9p17
@
text
@d190 4
d225 4
a228 1
	set_runaspw,
d254 8
d288 16
@


1.6
log
@update to sudo 1.6.9p9
@
text
@d267 8
@


1.5
log
@Update to sudo 1.6.9p6
@
text
@d214 4
@


1.4
log
@Update to sudo 1.6.9p1.  Note that the environment handling in sudo
1.6.9 has changed relative to older versions.  Sudo now starts
commands with a minimal environment containing the variables in the
env_keep and env_check lists.  This behavior is configurable in the
sudoers file.  Please see the "SECURITY NOTES" section in the sudo
manual.
@
text
@a149 4
	"env_reset", T_FLAG,
	"Reset the environment to a default set of variables",
	NULL,
    }, {
d239 12
a260 8
	NULL,
    }, {
	"ignore_local_sudoers", T_FLAG,
	"If LDAP directory is up, do we ignore local sudoers file",
	NULL,
    }, {
	"setenv", T_FLAG,
	"Allow users to set arbitrary environment variables",
@


1.3
log
@update to sudo 1.6.8p5
@
text
@d259 4
@


1.2
log
@Update to sudo 1.6.8p1
@
text
@d18 1
a19 1
    { "all", all },
@


1.1
log
@sudo on OpenBSD no longer runs configure.  You will have to manually
run "rm -f /usr/obj/usr.bin/sudo/*" or "make obj" will fail during
your first build.
@
text
@d1 23
a25 9
	"syslog_ifac", T_UINT,
	NULL
    }, {
	"syslog_igoodpri", T_UINT,
	NULL
    }, {
	"syslog_ibadpri", T_UINT,
	NULL
    }, {
d27 2
a28 1
	"Syslog facility if syslog is being used for logging: %s"
d31 2
a32 1
	"Syslog priority to use when user authenticates successfully: %s"
d35 2
a36 1
	"Syslog priority to use when user authenticates unsuccessfully: %s"
d39 2
a40 1
	"Put OTP prompt on its own line"
d43 2
a44 1
	"Ignore '.' in $PATH"
d47 2
a48 1
	"Always send mail when sudo is run"
d51 2
a52 1
	"Send mail if user authentication fails"
d55 2
a56 1
	"Send mail if the user is not in sudoers"
d59 2
a60 1
	"Send mail if the user is not in sudoers for this host"
d63 2
a64 1
	"Send mail if the user is not allowed to run a command"
d67 2
a68 1
	"Use a separate timestamp for each user/tty combo"
d70 7
a76 2
	"lecture", T_FLAG,
	"Lecture user the first time they run sudo"
d79 2
a80 1
	"Require users to authenticate by default"
d83 2
a84 1
	"Root may run sudo"
d87 2
a88 1
	"Log the hostname in the (non-syslog) log file"
d91 2
a92 1
	"Log the year in the (non-syslog) log file"
d95 2
a96 1
	"If sudo is invoked with no arguments, start a shell"
d99 2
a100 1
	"Set $HOME to the target user when starting a shell with -s"
d103 2
a104 1
	"Always set $HOME to the target user's home directory"
d107 2
a108 1
	"Allow some information gathering to give useful error messages"
d111 2
a112 1
	"Require fully-qualified hostnames in the sudoers file"
d115 2
a116 1
	"Insult the user when they enter an incorrect password"
d119 2
a120 1
	"Only allow the user to run sudo if they have a tty"
d123 2
a124 1
	"Visudo will honor the EDITOR environment variable"
d127 2
a128 1
	"Prompt for root's password, not the users's"
d131 2
a132 1
	"Prompt for the runas_default user's password, not the users's"
d135 2
a136 1
	"Prompt for the target user's password, not the users's"
d139 2
a140 1
	"Apply defaults in the target user's login class if there is one"
d143 2
a144 1
	"Set the LOGNAME and USER environment variables"
d147 2
a148 1
	"Only set the effective uid to the target user, not the real uid"
d151 2
a152 1
	"Reset the environment to a default set of variables"
d155 2
a156 1
	"Don't initialize the group vector to that of the target user"
d159 2
a160 1
	"Length at which to wrap log file lines (0 for no wrap): %d"
d163 2
a164 1
	"Authentication timestamp timeout: %d minutes"
d167 2
a168 1
	"Password prompt timeout: %d minutes"
d171 2
a172 1
	"Number of tries to enter a password: %d"
d175 2
a176 1
	"Umask to use or 0777 to use user's: 0%o"
d179 2
a180 1
	"Path to log file: %s"
d183 2
a184 1
	"Path to mail program: %s"
d187 2
a188 1
	"Flags for mail program: %s"
d191 2
a192 1
	"Address to send mail to: %s"
d195 2
a196 1
	"Subject line for mail messages: %s"
d199 2
a200 1
	"Incorrect password message: %s"
d203 2
a204 1
	"Path to authentication timestamp dir: %s"
d207 2
a208 1
	"Owner of the authentication timestamp dir: %s"
d211 2
a212 1
	"Users in this group are exempt from password and PATH requirements: %s"
d215 2
a216 1
	"Default password prompt: %s"
d219 3
a221 1
	"Default user to run commands as: %s"
d224 18
a241 1
	"Path to the editor for use by visudo: %s"
d244 2
a245 1
	"Environment variables to check for sanity:"
d248 2
a249 1
	"Environment variables to remove:"
d252 2
a253 10
	"Environment variables to preserve:"
    }, {
	"listpw_i", T_UINT,
	NULL
    }, {
	"verifypw_i", T_UINT,
	NULL
    }, {
	"listpw", T_PWFLAG,
	"When to require a password for 'list' pseudocommand: %s"
d255 3
a257 2
	"verifypw", T_PWFLAG,
	"When to require a password for 'verify' pseudocommand: %s"
@

