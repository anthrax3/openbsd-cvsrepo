head	1.26;
access;
symbols
	OPENBSD_4_1:1.25.0.2
	OPENBSD_4_1_BASE:1.25
	OPENBSD_4_0:1.24.0.2
	OPENBSD_4_0_BASE:1.24
	OPENBSD_3_9:1.23.0.4
	OPENBSD_3_9_BASE:1.23
	OPENBSD_3_8:1.23.0.2
	OPENBSD_3_8_BASE:1.23
	OPENBSD_3_7:1.21.0.2
	OPENBSD_3_7_BASE:1.21
	OPENBSD_3_6:1.16.0.6
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.16.0.4
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.15.0.2
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	SUDO_1_6_0:1.1.1.1
	COURTESAN:1.1.1;
locks; strict;
comment	@.\" @;


1.26
date	2007.07.26.16.10.16;	author millert;	state dead;
branches;
next	1.25;

1.25
date	2007.02.06.18.30.04;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2006.06.20.10.28.00;	author ray;	state Exp;
branches;
next	1.23;

1.23
date	2005.06.19.22.00.08;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	2005.05.31.21.13.43;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	2005.02.05.23.31.52;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2004.11.29.17.29.05;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2004.11.17.18.14.06;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2004.11.12.16.37.38;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2004.09.28.15.10.51;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2003.04.14.06.39.24;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.03.15.21.23.54;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.14.17.18.29;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2003.01.23.08.58.47;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2002.04.25.15.49.03;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.01.17.01.03.21;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.01.14.00.11.44;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.03.03.49.16;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.28.06.46.25;	author jufi;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2001.09.17.23.49.21;	author pjanzen;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.09.18.15.31;	author krw;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2000.03.27.03.44.39;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.01.28.01.10.20;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.24.04.22.53;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.01.18.21.49.02;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	99.11.18.16.29.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.11.18.16.29.01;	author millert;	state Exp;
branches;
next	;

1.6.2.1
date	2002.01.18.17.20.23;	author millert;	state Exp;
branches;
next	;

1.8.2.1
date	2002.01.18.16.14.46;	author millert;	state Exp;
branches;
next	;


desc
@@


1.26
log
@Update to sudo 1.6.9p1.  Note that the environment handling in sudo
1.6.9 has changed relative to older versions.  Sudo now starts
commands with a minimal environment containing the variables in the
env_keep and env_check lists.  This behavior is configurable in the
sudoers file.  Please see the "SECURITY NOTES" section in the sudo
manual.
@
text
@.\" Copyright (c) 1994-1996,1998-2004 Todd C. Miller <Todd.Miller@@courtesan.com>
.\" 
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\" 
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\" ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\" 
.\" Sponsored in part by the Defense Advanced Research Projects
.\" Agency (DARPA) and Air Force Research Laboratory, Air Force
.\" Materiel Command, USAF, under agreement number F39502-99-1-0512.
.\" 
.\" $Sudo: sudoers.pod,v 1.96 2004/09/06 20:45:27 millert Exp $
.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` 
.    ds C' 
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SUDOERS 5"
.TH SUDOERS 5 "June 20, 2005" "1.6.8p9" "MAINTENANCE COMMANDS"
.SH "NAME"
sudoers \- list of which users may execute what
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fIsudoers\fR file is composed of two types of entries: aliases
(basically variables) and user specifications (which specify who
may run what).
.PP
When multiple entries match for a user, they are applied in order.
Where there are conflicting values, the last match is used (which
is not necessarily the most specific match).
.PP
The \fIsudoers\fR grammar will be described below in Extended Backus-Naur
Form (\s-1EBNF\s0).  Don't despair if you don't know what \s-1EBNF\s0 is; it is
fairly simple, and the definitions below are annotated.
.Sh "Quick guide to \s-1EBNF\s0"
.IX Subsection "Quick guide to EBNF"
\&\s-1EBNF\s0 is a concise and exact way of describing the grammar of a language.
Each \s-1EBNF\s0 definition is made up of \fIproduction rules\fR.  E.g.,
.PP
.Vb 1
\& symbol ::= definition | alternate1 | alternate2 ...
.Ve
.PP
Each \fIproduction rule\fR references others and thus makes up a
grammar for the language.  \s-1EBNF\s0 also contains the following
operators, which many readers will recognize from regular
expressions.  Do not, however, confuse them with \*(L"wildcard\*(R"
characters, which have different meanings.
.ie n .IP "\*(C`?\*(C'" 8
.el .IP "\f(CW\*(C`?\*(C'\fR" 8
.IX Item "?"
Means that the preceding symbol (or group of symbols) is optional.
That is, it may appear once or not at all.
.ie n .IP "\*(C`*\*(C'" 8
.el .IP "\f(CW\*(C`*\*(C'\fR" 8
.IX Item "*"
Means that the preceding symbol (or group of symbols) may appear
zero or more times.
.ie n .IP "\*(C`+\*(C'" 8
.el .IP "\f(CW\*(C`+\*(C'\fR" 8
.IX Item "+"
Means that the preceding symbol (or group of symbols) may appear
one or more times.
.PP
Parentheses may be used to group symbols together.  For clarity,
we will use single quotes ('') to designate what is a verbatim character
string (as opposed to a symbol name).
.Sh "Aliases"
.IX Subsection "Aliases"
There are four kinds of aliases: \f(CW\*(C`User_Alias\*(C'\fR, \f(CW\*(C`Runas_Alias\*(C'\fR,
\&\f(CW\*(C`Host_Alias\*(C'\fR and \f(CW\*(C`Cmnd_Alias\*(C'\fR.
.PP
.Vb 4
\& Alias ::= 'User_Alias'  User_Alias (':' User_Alias)* |
\&           'Runas_Alias' Runas_Alias (':' Runas_Alias)* |
\&           'Host_Alias'  Host_Alias (':' Host_Alias)* |
\&           'Cmnd_Alias'  Cmnd_Alias (':' Cmnd_Alias)*
.Ve
.PP
.Vb 1
\& User_Alias ::= NAME '=' User_List
.Ve
.PP
.Vb 1
\& Runas_Alias ::= NAME '=' Runas_List
.Ve
.PP
.Vb 1
\& Host_Alias ::= NAME '=' Host_List
.Ve
.PP
.Vb 1
\& Cmnd_Alias ::= NAME '=' Cmnd_List
.Ve
.PP
.Vb 1
\& NAME ::= [A-Z]([A-Z][0-9]_)*
.Ve
.PP
Each \fIalias\fR definition is of the form
.PP
.Vb 1
\& Alias_Type NAME = item1, item2, ...
.Ve
.PP
where \fIAlias_Type\fR is one of \f(CW\*(C`User_Alias\*(C'\fR, \f(CW\*(C`Runas_Alias\*(C'\fR, \f(CW\*(C`Host_Alias\*(C'\fR,
or \f(CW\*(C`Cmnd_Alias\*(C'\fR.  A \f(CW\*(C`NAME\*(C'\fR is a string of uppercase letters, numbers,
and underscore characters ('_').  A \f(CW\*(C`NAME\*(C'\fR \fBmust\fR start with an
uppercase letter.  It is possible to put several alias definitions
of the same type on a single line, joined by a colon (':').  E.g.,
.PP
.Vb 1
\& Alias_Type NAME = item1, item2, item3 : NAME = item4, item5
.Ve
.PP
The definitions of what constitutes a valid \fIalias\fR member follow.
.PP
.Vb 2
\& User_List ::= User |
\&               User ',' User_List
.Ve
.PP
.Vb 4
\& User ::= '!'* username |
\&          '!'* '%'group |
\&          '!'* '+'netgroup |
\&          '!'* User_Alias
.Ve
.PP
A \f(CW\*(C`User_List\*(C'\fR is made up of one or more usernames, system groups
(prefixed with '%'), netgroups (prefixed with '+') and other aliases.
Each list item may be prefixed with one or more '!' operators.
An odd number of '!' operators negate the value of the item; an even
number just cancel each other out.
.PP
.Vb 2
\& Runas_List ::= Runas_User |
\&                Runas_User ',' Runas_List
.Ve
.PP
.Vb 5
\& Runas_User ::= '!'* username |
\&                '!'* '#'uid |
\&                '!'* '%'group |
\&                '!'* +netgroup |
\&                '!'* Runas_Alias
.Ve
.PP
A \f(CW\*(C`Runas_List\*(C'\fR is similar to a \f(CW\*(C`User_List\*(C'\fR except that it can
also contain uids (prefixed with '#') and instead of \f(CW\*(C`User_Alias\*(C'\fRes
it can contain \f(CW\*(C`Runas_Alias\*(C'\fRes.  Note that usernames and groups
are matched as strings.  In other words, two users (groups) with
the same uid (gid) are considered to be distinct.  If you wish to
match all usernames with the same uid (e.g. root and toor), you
can use a uid instead (#0 in the example given).
.PP
.Vb 2
\& Host_List ::= Host |
\&               Host ',' Host_List
.Ve
.PP
.Vb 5
\& Host ::= '!'* hostname |
\&          '!'* ip_addr |
\&          '!'* network(/netmask)? |
\&          '!'* '+'netgroup |
\&          '!'* Host_Alias
.Ve
.PP
A \f(CW\*(C`Host_List\*(C'\fR is made up of one or more hostnames, \s-1IP\s0 addresses,
network numbers, netgroups (prefixed with '+') and other aliases.
Again, the value of an item may be negated with the '!' operator.
If you do not specify a netmask with a network number, the netmask
of the host's ethernet interface(s) will be used when matching.
The netmask may be specified either in dotted quad notation (e.g.
255.255.255.0) or \s-1CIDR\s0 notation (number of bits, e.g. 24).  A hostname
may include shell-style wildcards (see the Wildcards section below),
but unless the \f(CW\*(C`hostname\*(C'\fR command on your machine returns the fully
qualified hostname, you'll need to use the \fIfqdn\fR option for wildcards
to be useful.
.PP
.Vb 2
\& Cmnd_List ::= Cmnd |
\&               Cmnd ',' Cmnd_List
.Ve
.PP
.Vb 3
\& commandname ::= filename |
\&                 filename args |
\&                 filename '""'
.Ve
.PP
.Vb 4
\& Cmnd ::= '!'* commandname |
\&          '!'* directory |
\&          '!'* "sudoedit" |
\&          '!'* Cmnd_Alias
.Ve
.PP
A \f(CW\*(C`Cmnd_List\*(C'\fR is a list of one or more commandnames, directories, and other
aliases.  A commandname is a fully qualified filename which may include
shell-style wildcards (see the Wildcards section below).  A simple
filename allows the user to run the command with any arguments he/she
wishes.  However, you may also specify command line arguments (including
wildcards).  Alternately, you can specify \f(CW""\fR to indicate that the command
may only be run \fBwithout\fR command line arguments.  A directory is a
fully qualified pathname ending in a '/'.  When you specify a directory
in a \f(CW\*(C`Cmnd_List\*(C'\fR, the user will be able to run any file within that directory
(but not in any subdirectories therein).
.PP
If a \f(CW\*(C`Cmnd\*(C'\fR has associated command line arguments, then the arguments
in the \f(CW\*(C`Cmnd\*(C'\fR must match exactly those given by the user on the command line
(or match the wildcards if there are any).  Note that the following
characters must be escaped with a '\e' if they are used in command
arguments: ',', ':', '=', '\e'.  The special command \f(CW"sudoedit"\fR
is used to permit a user to run \fBsudo\fR with the \fB\-e\fR flag (or
as \fBsudoedit\fR).  It may take command line arguments just as
a normal command does.
.Sh "Defaults"
.IX Subsection "Defaults"
Certain configuration options may be changed from their default
values at runtime via one or more \f(CW\*(C`Default_Entry\*(C'\fR lines.  These
may affect all users on any host, all users on a specific host, a
specific user, or commands being run as a specific user.
.PP
.Vb 4
\& Default_Type ::= 'Defaults' |
\&                  'Defaults' '@@' Host |
\&                  'Defaults' ':' User |
\&                  'Defaults' '>' RunasUser
.Ve
.PP
.Vb 1
\& Default_Entry ::= Default_Type Parameter_List
.Ve
.PP
.Vb 2
\& Parameter_List ::= Parameter |
\&                    Parameter ',' Parameter_List
.Ve
.PP
.Vb 4
\& Parameter ::= Parameter '=' Value |
\&               Parameter '+=' Value |
\&               Parameter '-=' Value |
\&               '!'* Parameter
.Ve
.PP
Parameters may be \fBflags\fR, \fBinteger\fR values, \fBstrings\fR, or \fBlists\fR.
Flags are implicitly boolean and can be turned off via the '!'
operator.  Some integer, string and list parameters may also be
used in a boolean context to disable them.  Values may be enclosed
in double quotes (\f(CW\*(C`"\*(C'\fR) when they contain multiple words.  Special
characters may be escaped with a backslash (\f(CW\*(C`\e\*(C'\fR).
.PP
Lists have two additional assignment operators, \f(CW\*(C`+=\*(C'\fR and \f(CW\*(C`\-=\*(C'\fR.
These operators are used to add to and delete from a list respectively.
It is not an error to use the \f(CW\*(C`\-=\*(C'\fR operator to remove an element
that does not exist in a list.
.PP
\&\fBFlags\fR:
.IP "long_otp_prompt" 12
.IX Item "long_otp_prompt"
When validating with a One Time Password scheme (\fBS/Key\fR or \fB\s-1OPIE\s0\fR),
a two-line prompt is used to make it easier to cut and paste the
challenge to a local window.  It's not as pretty as the default but
some people find it more convenient.  This flag is \fIoff\fR
by default.
.IP "ignore_dot" 12
.IX Item "ignore_dot"
If set, \fBsudo\fR will ignore '.' or '' (current dir) in the \f(CW\*(C`PATH\*(C'\fR
environment variable; the \f(CW\*(C`PATH\*(C'\fR itself is not modified.  This
flag is \fIoff\fR by default.  Currently, while it is possible
to set \fIignore_dot\fR in \fIsudoers\fR, its value is not used.  This option
should be considered read-only (it will be fixed in a future version
of \fBsudo\fR).
.IP "mail_always" 12
.IX Item "mail_always"
Send mail to the \fImailto\fR user every time a users runs \fBsudo\fR.
This flag is \fIoff\fR by default.
.IP "mail_badpass" 12
.IX Item "mail_badpass"
Send mail to the \fImailto\fR user if the user running sudo does not
enter the correct password.  This flag is \fIoff\fR by default.
.IP "mail_no_user" 12
.IX Item "mail_no_user"
If set, mail will be sent to the \fImailto\fR user if the invoking
user is not in the \fIsudoers\fR file.  This flag is \fIon\fR
by default.
.IP "mail_no_host" 12
.IX Item "mail_no_host"
If set, mail will be sent to the \fImailto\fR user if the invoking
user exists in the \fIsudoers\fR file, but is not allowed to run
commands on the current host.  This flag is \fIoff\fR by default.
.IP "mail_no_perms" 12
.IX Item "mail_no_perms"
If set, mail will be sent to the \fImailto\fR user if the invoking
user is allowed to use \fBsudo\fR but the command they are trying is not
listed in their \fIsudoers\fR file entry or is explicitly denied.
This flag is \fIoff\fR by default.
.IP "tty_tickets" 12
.IX Item "tty_tickets"
If set, users must authenticate on a per-tty basis.  Normally,
\&\fBsudo\fR uses a directory in the ticket dir with the same name as
the user running it.  With this flag enabled, \fBsudo\fR will use a
file named for the tty the user is logged in on in that directory.
This flag is \fIoff\fR by default.
.IP "authenticate" 12
.IX Item "authenticate"
If set, users must authenticate themselves via a password (or other
means of authentication) before they may run commands.  This default
may be overridden via the \f(CW\*(C`PASSWD\*(C'\fR and \f(CW\*(C`NOPASSWD\*(C'\fR tags.
This flag is \fIon\fR by default.
.IP "root_sudo" 12
.IX Item "root_sudo"
If set, root is allowed to run \fBsudo\fR too.  Disabling this prevents users
from \*(L"chaining\*(R" \fBsudo\fR commands to get a root shell by doing something
like \f(CW"sudo sudo /bin/sh"\fR.  Note, however, that turning off \fIroot_sudo\fR
will also prevent root and from running \fBsudoedit\fR.
Disabling \fIroot_sudo\fR provides no real additional security; it
exists purely for historical reasons.
This flag is \fIon\fR by default.
.IP "log_host" 12
.IX Item "log_host"
If set, the hostname will be logged in the (non\-syslog) \fBsudo\fR log file.
This flag is \fIoff\fR by default.
.IP "log_year" 12
.IX Item "log_year"
If set, the four-digit year will be logged in the (non\-syslog) \fBsudo\fR log file.
This flag is \fIoff\fR by default.
.IP "shell_noargs" 12
.IX Item "shell_noargs"
If set and \fBsudo\fR is invoked with no arguments it acts as if the
\&\fB\-s\fR flag had been given.  That is, it runs a shell as root (the
shell is determined by the \f(CW\*(C`SHELL\*(C'\fR environment variable if it is
set, falling back on the shell listed in the invoking user's
/etc/passwd entry if not).  This flag is \fIoff\fR by default.
.IP "set_home" 12
.IX Item "set_home"
If set and \fBsudo\fR is invoked with the \fB\-s\fR flag the \f(CW\*(C`HOME\*(C'\fR
environment variable will be set to the home directory of the target
user (which is root unless the \fB\-u\fR option is used).  This effectively
makes the \fB\-s\fR flag imply \fB\-H\fR.  This flag is \fIoff\fR by default.
.IP "always_set_home" 12
.IX Item "always_set_home"
If set, \fBsudo\fR will set the \f(CW\*(C`HOME\*(C'\fR environment variable to the home
directory of the target user (which is root unless the \fB\-u\fR option is used).
This effectively means that the \fB\-H\fR flag is always implied.
This flag is \fIoff\fR by default.
.IP "path_info" 12
.IX Item "path_info"
Normally, \fBsudo\fR will tell the user when a command could not be
found in their \f(CW\*(C`PATH\*(C'\fR environment variable.  Some sites may wish
to disable this as it could be used to gather information on the
location of executables that the normal user does not have access
to.  The disadvantage is that if the executable is simply not in
the user's \f(CW\*(C`PATH\*(C'\fR, \fBsudo\fR will tell the user that they are not
allowed to run it, which can be confusing.  This flag is \fIoff\fR by
default.
.IP "preserve_groups" 12
.IX Item "preserve_groups"
By default \fBsudo\fR will initialize the group vector to the list of
groups the target user is in.  When \fIpreserve_groups\fR is set, the
user's existing group vector is left unaltered.  The real and
effective group IDs, however, are still set to match the target
user.  This flag is \fIoff\fR by default.
.IP "fqdn" 12
.IX Item "fqdn"
Set this flag if you want to put fully qualified hostnames in the
\&\fIsudoers\fR file.  I.e., instead of myhost you would use myhost.mydomain.edu.
You may still use the short form if you wish (and even mix the two).
Beware that turning on \fIfqdn\fR requires \fBsudo\fR to make \s-1DNS\s0 lookups
which may make \fBsudo\fR unusable if \s-1DNS\s0 stops working (for example
if the machine is not plugged into the network).  Also note that
you must use the host's official name as \s-1DNS\s0 knows it.  That is,
you may not use a host alias (\f(CW\*(C`CNAME\*(C'\fR entry) due to performance
issues and the fact that there is no way to get all aliases from
\&\s-1DNS\s0.  If your machine's hostname (as returned by the \f(CW\*(C`hostname\*(C'\fR
command) is already fully qualified you shouldn't need to set
\&\fIfqdn\fR.  This flag is \fIoff\fR by default.
.IP "insults" 12
.IX Item "insults"
If set, \fBsudo\fR will insult users when they enter an incorrect
password.  This flag is \fIon\fR by default.
.IP "requiretty" 12
.IX Item "requiretty"
If set, \fBsudo\fR will only run when the user is logged in to a real
tty.  This will disallow things like \f(CW"rsh somehost sudo ls"\fR since
\&\fIrsh\fR\|(1) does not allocate a tty.  Because it is not possible to turn
off echo when there is no tty present, some sites may wish to set
this flag to prevent a user from entering a visible password.  This
flag is \fIoff\fR by default.
.IP "env_editor" 12
.IX Item "env_editor"
If set, \fBvisudo\fR will use the value of the \s-1EDITOR\s0 or \s-1VISUAL\s0
environment variables before falling back on the default editor list.
Note that this may create a security hole as it allows the user to
run any arbitrary command as root without logging.  A safer alternative
is to place a colon-separated list of editors in the \f(CW\*(C`editor\*(C'\fR
variable.  \fBvisudo\fR will then only use the \s-1EDITOR\s0 or \s-1VISUAL\s0 if
they match a value specified in \f(CW\*(C`editor\*(C'\fR.  This flag is \f(CW\*(C`on\*(C'\fR by
default.
.IP "rootpw" 12
.IX Item "rootpw"
If set, \fBsudo\fR will prompt for the root password instead of the password
of the invoking user.  This flag is \fIoff\fR by default.
.IP "runaspw" 12
.IX Item "runaspw"
If set, \fBsudo\fR will prompt for the password of the user defined by the
\&\fIrunas_default\fR option (defaults to \f(CW\*(C`root\*(C'\fR) instead of the
password of the invoking user.  This flag is \fIoff\fR by default.
.IP "targetpw" 12
.IX Item "targetpw"
If set, \fBsudo\fR will prompt for the password of the user specified by
the \fB\-u\fR flag (defaults to \f(CW\*(C`root\*(C'\fR) instead of the password of the
invoking user.  Note that this precludes the use of a uid not listed
in the passwd database as an argument to the \fB\-u\fR flag.
This flag is \fIoff\fR by default.
.IP "set_logname" 12
.IX Item "set_logname"
Normally, \fBsudo\fR will set the \f(CW\*(C`LOGNAME\*(C'\fR and \f(CW\*(C`USER\*(C'\fR environment variables
to the name of the target user (usually root unless the \fB\-u\fR flag is given).
However, since some programs (including the \s-1RCS\s0 revision control system)
use \f(CW\*(C`LOGNAME\*(C'\fR to determine the real identity of the user, it may be desirable
to change this behavior.  This can be done by negating the set_logname option.
.IP "stay_setuid" 12
.IX Item "stay_setuid"
Normally, when \fBsudo\fR executes a command the real and effective
UIDs are set to the target user (root by default).  This option
changes that behavior such that the real \s-1UID\s0 is left as the invoking
user's \s-1UID\s0.  In other words, this makes \fBsudo\fR act as a setuid
wrapper.  This can be useful on systems that disable some potentially
dangerous functionality when a program is run setuid.  Note, however,
that this means that sudo will run with the real uid of the invoking
user which may allow that user to kill \fBsudo\fR before it can log a
failure, depending on how your \s-1OS\s0 defines the interaction between
signals and setuid processes.
.IP "env_reset" 12
.IX Item "env_reset"
If set, \fBsudo\fR will reset the environment to only contain the
following variables: \f(CW\*(C`HOME\*(C'\fR, \f(CW\*(C`LOGNAME\*(C'\fR, \f(CW\*(C`PATH\*(C'\fR, \f(CW\*(C`SHELL\*(C'\fR, \f(CW\*(C`TERM\*(C'\fR,
and \f(CW\*(C`USER\*(C'\fR (in addition to the \f(CW\*(C`SUDO_*\*(C'\fR variables).
Of these, only \f(CW\*(C`TERM\*(C'\fR is copied unaltered from the old environment.
The other variables are set to default values (possibly modified
by the value of the \fIset_logname\fR option).  If \fBsudo\fR was compiled
with the \f(CW\*(C`SECURE_PATH\*(C'\fR option, its value will be used for the \f(CW\*(C`PATH\*(C'\fR
environment variable.
Other variables may be preserved with the \fIenv_keep\fR option.
.IP "use_loginclass" 12
.IX Item "use_loginclass"
If set, \fBsudo\fR will apply the defaults specified for the target user's
login class if one exists.  Only available if \fBsudo\fR is configured with
the \-\-with\-logincap option.  This flag is \fIoff\fR by default.
.IP "noexec" 12
.IX Item "noexec"
If set, all commands run via sudo will behave as if the \f(CW\*(C`NOEXEC\*(C'\fR
tag has been set, unless overridden by a \f(CW\*(C`EXEC\*(C'\fR tag.  See the
description of \fI\s-1NOEXEC\s0 and \s-1EXEC\s0\fR below as well as the \*(L"\s-1PREVENTING\s0 \s-1SHELL\s0 \s-1ESCAPES\s0\*(R" section at the end of this manual.  This flag is \fIoff\fR by default.
.IP "ignore_local_sudoers" 12
.IX Item "ignore_local_sudoers"
If set via \s-1LDAP\s0, parsing of \f(CW@@sysconfdir\fR@@/sudoers will be skipped.
This is intended for an Enterprises that wish to prevent the usage of local
sudoers files so that only \s-1LDAP\s0 is used.  This thwarts the efforts of
rogue operators who would attempt to add roles to \f(CW@@sysconfdir\fR@@/sudoers.
When this option is present, \f(CW@@sysconfdir\fR@@/sudoers does not even need to exist. 
Since this option tells sudo how to behave when no specific \s-1LDAP\s0 entries
have been matched, this sudoOption is only meaningful for the cn=defaults
section.  This flag is \fIoff\fR by default.
.PP
\&\fBIntegers\fR:
.IP "passwd_tries" 12
.IX Item "passwd_tries"
The number of tries a user gets to enter his/her password before
\&\fBsudo\fR logs the failure and exits.  The default is \f(CW\*(C`3\*(C'\fR.
.PP
\&\fBIntegers that can be used in a boolean context\fR:
.IP "loglinelen" 12
.IX Item "loglinelen"
Number of characters per line for the file log.  This value is used
to decide when to wrap lines for nicer log files.  This has no
effect on the syslog log file, only the file log.  The default is
\&\f(CW\*(C`80\*(C'\fR (use 0 or negate the option to disable word wrap).
.IP "timestamp_timeout" 12
.IX Item "timestamp_timeout"
Number of minutes that can elapse before \fBsudo\fR will ask for a
passwd again.  The default is \f(CW\*(C`5\*(C'\fR.  Set this to \f(CW0\fR to always
prompt for a password.
If set to a value less than \f(CW0\fR the user's timestamp will never
expire.  This can be used to allow users to create or delete their
own timestamps via \f(CW\*(C`sudo \-v\*(C'\fR and \f(CW\*(C`sudo \-k\*(C'\fR respectively.
.IP "passwd_timeout" 12
.IX Item "passwd_timeout"
Number of minutes before the \fBsudo\fR password prompt times out.
The default is \f(CW\*(C`5\*(C'\fR, set this to \f(CW0\fR for no password timeout.
.IP "umask" 12
.IX Item "umask"
Umask to use when running the command.  Negate this option or set
it to 0777 to preserve the user's umask.  The default is \f(CW\*(C`0022\*(C'\fR.
.PP
\&\fBStrings\fR:
.IP "mailsub" 12
.IX Item "mailsub"
Subject of the mail sent to the \fImailto\fR user. The escape \f(CW%h\fR
will expand to the hostname of the machine.
Default is \f(CW\*(C`*** SECURITY information for %h ***\*(C'\fR.
.IP "badpass_message" 12
.IX Item "badpass_message"
Message that is displayed if a user enters an incorrect password.
The default is \f(CW\*(C`Sorry, try again.\*(C'\fR unless insults are enabled.
.IP "timestampdir" 12
.IX Item "timestampdir"
The directory in which \fBsudo\fR stores its timestamp files.
The default is \fI/var/run/sudo\fR.
.IP "timestampowner" 12
.IX Item "timestampowner"
The owner of the timestamp directory and the timestamps stored therein.
The default is \f(CW\*(C`root\*(C'\fR.
.IP "passprompt" 12
.IX Item "passprompt"
The default prompt to use when asking for a password; can be overridden
via the \fB\-p\fR option or the \f(CW\*(C`SUDO_PROMPT\*(C'\fR environment variable.
The following percent (`\f(CW\*(C`%\*(C'\fR') escapes are supported:
.RS 12
.ie n .IP "%u" 8
.el .IP "\f(CW%u\fR" 8
.IX Item "%u"
expanded to the invoking user's login name
.ie n .IP "%U" 8
.el .IP "\f(CW%U\fR" 8
.IX Item "%U"
expanded to the login name of the user the command will
be run as (defaults to root)
.ie n .IP "%h" 8
.el .IP "\f(CW%h\fR" 8
.IX Item "%h"
expanded to the local hostname without the domain name
.ie n .IP "%H" 8
.el .IP "\f(CW%H\fR" 8
.IX Item "%H"
expanded to the local hostname including the domain name
(on if the machine's hostname is fully qualified or the \fIfqdn\fR
option is set)
.ie n .IP "\*(C`%%\*(C'" 8
.el .IP "\f(CW\*(C`%%\*(C'\fR" 8
.IX Item "%%"
two consecutive \f(CW\*(C`%\*(C'\fR characters are collaped into a single \f(CW\*(C`%\*(C'\fR character
.RE
.RS 12
.Sp
The default value is \f(CW\*(C`Password:\*(C'\fR.
.RE
.IP "runas_default" 12
.IX Item "runas_default"
The default user to run commands as if the \fB\-u\fR flag is not specified
on the command line.  This defaults to \f(CW\*(C`root\*(C'\fR.
Note that if \fIrunas_default\fR is set it \fBmust\fR occur before
any \f(CW\*(C`Runas_Alias\*(C'\fR specifications.
.IP "syslog_goodpri" 12
.IX Item "syslog_goodpri"
Syslog priority to use when user authenticates successfully.
Defaults to \f(CW\*(C`notice\*(C'\fR.
.IP "syslog_badpri" 12
.IX Item "syslog_badpri"
Syslog priority to use when user authenticates unsuccessfully.
Defaults to \f(CW\*(C`alert\*(C'\fR.
.IP "editor" 12
.IX Item "editor"
A colon (':') separated list of editors allowed to be used with
\&\fBvisudo\fR.  \fBvisudo\fR will choose the editor that matches the user's
\&\s-1USER\s0 environment variable if possible, or the first editor in the
list that exists and is executable.  The default is the path to vi
on your system.
.IP "noexec_file" 12
.IX Item "noexec_file"
Path to a shared library containing dummy versions of the \fIexecv()\fR,
\&\fIexecve()\fR and \fIfexecve()\fR library functions that just return an error.
This is used to implement the \fInoexec\fR functionality on systems that
support \f(CW\*(C`LD_PRELOAD\*(C'\fR or its equivalent.  Defaults to \fI/usr/libexec/sudo_noexec.so\fR.
.PP
\&\fBStrings that can be used in a boolean context\fR:
.IP "lecture" 12
.IX Item "lecture"
This option controls when a short lecture will be printed along with
the password prompt.  It has the following possible values:
.RS 12
.IP "never" 8
.IX Item "never"
Never lecture the user.
.IP "once" 8
.IX Item "once"
Only lecture the user the first time they run \fBsudo\fR.
.IP "always" 8
.IX Item "always"
Always lecture the user.
.RE
.RS 12
.Sp
If no value is specified, a value of \fIonce\fR is implied.
Negating the option results in a value of \fInever\fR being used.
The default value is \fIonce\fR.
.RE
.IP "lecture_file" 12
.IX Item "lecture_file"
Path to a file containing an alternate sudo lecture that will
be used in place of the standard lecture if the named file exists.
.IP "logfile" 12
.IX Item "logfile"
Path to the \fBsudo\fR log file (not the syslog log file).  Setting a path
turns on logging to a file; negating this option turns it off.
.IP "syslog" 12
.IX Item "syslog"
Syslog facility if syslog is being used for logging (negate to
disable syslog logging).  Defaults to \f(CW\*(C`authpriv\*(C'\fR.
.IP "mailerpath" 12
.IX Item "mailerpath"
Path to mail program used to send warning mail.
Defaults to the path to sendmail found at configure time.
.IP "mailerflags" 12
.IX Item "mailerflags"
Flags to use when invoking mailer. Defaults to \fB\-t\fR.
.IP "mailto" 12
.IX Item "mailto"
Address to send warning and error mail to.  The address should
be enclosed in double quotes (\f(CW\*(C`"\*(C'\fR) to protect against sudo
interpreting the \f(CW\*(C`@@\*(C'\fR sign.  Defaults to \f(CW\*(C`root\*(C'\fR.
.IP "exempt_group" 12
.IX Item "exempt_group"
Users in this group are exempt from password and \s-1PATH\s0 requirements.
This is not set by default.
.IP "verifypw" 12
.IX Item "verifypw"
This option controls when a password will be required when a user runs
\&\fBsudo\fR with the \fB\-v\fR flag.  It has the following possible values:
.RS 12
.IP "all" 8
.IX Item "all"
All the user's \fIsudoers\fR entries for the current host must have
the \f(CW\*(C`NOPASSWD\*(C'\fR flag set to avoid entering a password.
.IP "any" 8
.IX Item "any"
At least one of the user's \fIsudoers\fR entries for the current host
must have the \f(CW\*(C`NOPASSWD\*(C'\fR flag set to avoid entering a password.
.IP "never" 8
.IX Item "never"
The user need never enter a password to use the \fB\-v\fR flag.
.IP "always" 8
.IX Item "always"
The user must always enter a password to use the \fB\-v\fR flag.
.RE
.RS 12
.Sp
If no value is specified, a value of \fIall\fR is implied.
Negating the option results in a value of \fInever\fR being used.
The default value is \fIall\fR.
.RE
.IP "listpw" 12
.IX Item "listpw"
This option controls when a password will be required when a
user runs \fBsudo\fR with the \fB\-l\fR flag.  It has the following possible values:
.RS 12
.IP "all" 8
.IX Item "all"
All the user's \fIsudoers\fR entries for the current host must have
the \f(CW\*(C`NOPASSWD\*(C'\fR flag set to avoid entering a password.
.IP "any" 8
.IX Item "any"
At least one of the user's \fIsudoers\fR entries for the current host
must have the \f(CW\*(C`NOPASSWD\*(C'\fR flag set to avoid entering a password.
.IP "never" 8
.IX Item "never"
The user need never enter a password to use the \fB\-l\fR flag.
.IP "always" 8
.IX Item "always"
The user must always enter a password to use the \fB\-l\fR flag.
.RE
.RS 12
.Sp
If no value is specified, a value of \fIany\fR is implied.
Negating the option results in a value of \fInever\fR being used.
The default value is \fIany\fR.
.RE
.PP
\&\fBLists that can be used in a boolean context\fR:
.IP "env_check" 12
.IX Item "env_check"
Environment variables to be removed from the user's environment if
the variable's value contains \f(CW\*(C`%\*(C'\fR or \f(CW\*(C`/\*(C'\fR characters.  This can
be used to guard against printf-style format vulnerabilities in
poorly-written programs.  The argument may be a double\-quoted,
space-separated list or a single value without double\-quotes.  The
list can be replaced, added to, deleted from, or disabled by using
the \f(CW\*(C`=\*(C'\fR, \f(CW\*(C`+=\*(C'\fR, \f(CW\*(C`\-=\*(C'\fR, and \f(CW\*(C`!\*(C'\fR operators respectively.  The default
list of environment variables to check is printed when \fBsudo\fR is
run by root with the \fI\-V\fR option.
.IP "env_delete" 12
.IX Item "env_delete"
Environment variables to be removed from the user's environment.
The argument may be a double\-quoted, space-separated list or a
single value without double\-quotes.  The list can be replaced, added
to, deleted from, or disabled by using the \f(CW\*(C`=\*(C'\fR, \f(CW\*(C`+=\*(C'\fR, \f(CW\*(C`\-=\*(C'\fR, and
\&\f(CW\*(C`!\*(C'\fR operators respectively.  The default list of environment
variables to remove is printed when \fBsudo\fR is run by root with the
\&\fI\-V\fR option.  Note that many operating systems will remove potentially
dangerous variables from the environment of any setuid process (such
as \fBsudo\fR).
.IP "env_keep" 12
.IX Item "env_keep"
Environment variables to be preserved in the user's environment
when the \fIenv_reset\fR option is in effect.  This allows fine-grained
control over the environment \fBsudo\fR\-spawned processes will receive.
The argument may be a double\-quoted, space-separated list or a
single value without double\-quotes.  The list can be replaced, added
to, deleted from, or disabled by using the \f(CW\*(C`=\*(C'\fR, \f(CW\*(C`+=\*(C'\fR, \f(CW\*(C`\-=\*(C'\fR, and
\&\f(CW\*(C`!\*(C'\fR operators respectively.  This list has no default members.
.PP
When logging via \fIsyslog\fR\|(3), \fBsudo\fR accepts the following values
for the syslog facility (the value of the \fBsyslog\fR Parameter):
\&\fBauthpriv\fR (if your \s-1OS\s0 supports it), \fBauth\fR, \fBdaemon\fR, \fBuser\fR,
\&\fBlocal0\fR, \fBlocal1\fR, \fBlocal2\fR, \fBlocal3\fR, \fBlocal4\fR, \fBlocal5\fR,
\&\fBlocal6\fR, and \fBlocal7\fR.  The following syslog priorities are
supported: \fBalert\fR, \fBcrit\fR, \fBdebug\fR, \fBemerg\fR, \fBerr\fR, \fBinfo\fR,
\&\fBnotice\fR, and \fBwarning\fR.
.Sh "User Specification"
.IX Subsection "User Specification"
.Vb 2
\& User_Spec ::= User_List Host_List '=' Cmnd_Spec_List \e
\&               (':' Host_List '=' Cmnd_Spec_List)*
.Ve
.PP
.Vb 2
\& Cmnd_Spec_List ::= Cmnd_Spec |
\&                    Cmnd_Spec ',' Cmnd_Spec_List
.Ve
.PP
.Vb 1
\& Cmnd_Spec ::= Runas_Spec? Tag_Spec* Cmnd
.Ve
.PP
.Vb 1
\& Runas_Spec ::= '(' Runas_List ')'
.Ve
.PP
.Vb 1
\& Tag_Spec ::= ('NOPASSWD:' | 'PASSWD:' | 'NOEXEC:' | 'EXEC:')
.Ve
.PP
A \fBuser specification\fR determines which commands a user may run
(and as what user) on specified hosts.  By default, commands are
run as \fBroot\fR, but this can be changed on a per-command basis.
.PP
Let's break that down into its constituent parts:
.Sh "Runas_Spec"
.IX Subsection "Runas_Spec"
A \f(CW\*(C`Runas_Spec\*(C'\fR is simply a \f(CW\*(C`Runas_List\*(C'\fR (as defined above)
enclosed in a set of parentheses.  If you do not specify a
\&\f(CW\*(C`Runas_Spec\*(C'\fR in the user specification, a default \f(CW\*(C`Runas_Spec\*(C'\fR
of \fBroot\fR will be used.  A \f(CW\*(C`Runas_Spec\*(C'\fR sets the default for
commands that follow it.  What this means is that for the entry:
.PP
.Vb 1
\& dgb    boulder = (operator) /bin/ls, /bin/kill, /usr/bin/lprm
.Ve
.PP
The user \fBdgb\fR may run \fI/bin/ls\fR, \fI/bin/kill\fR, and
\&\fI/usr/bin/lprm\fR \*(-- but only as \fBoperator\fR.  E.g.,
.PP
.Vb 1
\& $ sudo -u operator /bin/ls.
.Ve
.PP
It is also possible to override a \f(CW\*(C`Runas_Spec\*(C'\fR later on in an
entry.  If we modify the entry like so:
.PP
.Vb 1
\& dgb    boulder = (operator) /bin/ls, (root) /bin/kill, /usr/bin/lprm
.Ve
.PP
Then user \fBdgb\fR is now allowed to run \fI/bin/ls\fR as \fBoperator\fR,
but  \fI/bin/kill\fR and \fI/usr/bin/lprm\fR as \fBroot\fR.
.Sh "Tag_Spec"
.IX Subsection "Tag_Spec"
A command may have zero or more tags associated with it.  There are
four possible tag values, \f(CW\*(C`NOPASSWD\*(C'\fR, \f(CW\*(C`PASSWD\*(C'\fR, \f(CW\*(C`NOEXEC\*(C'\fR, \f(CW\*(C`EXEC\*(C'\fR.
Once a tag is set on a \f(CW\*(C`Cmnd\*(C'\fR, subsequent \f(CW\*(C`Cmnd\*(C'\fRs in the
\&\f(CW\*(C`Cmnd_Spec_List\*(C'\fR, inherit the tag unless it is overridden by the
opposite tag (ie: \f(CW\*(C`PASSWD\*(C'\fR overrides \f(CW\*(C`NOPASSWD\*(C'\fR and \f(CW\*(C`EXEC\*(C'\fR
overrides \f(CW\*(C`NOEXEC\*(C'\fR).
.PP
\fI\s-1NOPASSWD\s0 and \s-1PASSWD\s0\fR
.IX Subsection "NOPASSWD and PASSWD"
.PP
By default, \fBsudo\fR requires that a user authenticate him or herself
before running a command.  This behavior can be modified via the
\&\f(CW\*(C`NOPASSWD\*(C'\fR tag.  Like a \f(CW\*(C`Runas_Spec\*(C'\fR, the \f(CW\*(C`NOPASSWD\*(C'\fR tag sets
a default for the commands that follow it in the \f(CW\*(C`Cmnd_Spec_List\*(C'\fR.
Conversely, the \f(CW\*(C`PASSWD\*(C'\fR tag can be used to reverse things.
For example:
.PP
.Vb 1
\& ray    rushmore = NOPASSWD: /bin/kill, /bin/ls, /usr/bin/lprm
.Ve
.PP
would allow the user \fBray\fR to run \fI/bin/kill\fR, \fI/bin/ls\fR, and
\&\fI/usr/bin/lprm\fR as root on the machine rushmore as \fBroot\fR without
authenticating himself.  If we only want \fBray\fR to be able to
run \fI/bin/kill\fR without a password the entry would be:
.PP
.Vb 1
\& ray    rushmore = NOPASSWD: /bin/kill, PASSWD: /bin/ls, /usr/bin/lprm
.Ve
.PP
Note, however, that the \f(CW\*(C`PASSWD\*(C'\fR tag has no effect on users who are
in the group specified by the exempt_group option.
.PP
By default, if the \f(CW\*(C`NOPASSWD\*(C'\fR tag is applied to any of the entries
for a user on the current host, he or she will be able to run
\&\f(CW\*(C`sudo \-l\*(C'\fR without a password.  Additionally, a user may only run
\&\f(CW\*(C`sudo \-v\*(C'\fR without a password if the \f(CW\*(C`NOPASSWD\*(C'\fR tag is present
for all a user's entries that pertain to the current host.
This behavior may be overridden via the verifypw and listpw options.
.PP
\fI\s-1NOEXEC\s0 and \s-1EXEC\s0\fR
.IX Subsection "NOEXEC and EXEC"
.PP
If sudo has been compiled with \fInoexec\fR support and the underlying
operating system support it, the \f(CW\*(C`NOEXEC\*(C'\fR tag can be used to prevent
a dynamically-linked executable from running further commands itself.
.PP
In the following example, user \fBaaron\fR may run \fI/usr/bin/more\fR
and \fI/usr/bin/vi\fR but shell escapes will be disabled.
.PP
.Vb 1
\& aaron  shanty = NOEXEC: /usr/bin/more, /usr/bin/vi
.Ve
.PP
See the \*(L"\s-1PREVENTING\s0 \s-1SHELL\s0 \s-1ESCAPES\s0\*(R" section below for more details
on how \fInoexec\fR works and whether or not it will work on your system.
.Sh "Wildcards"
.IX Subsection "Wildcards"
\&\fBsudo\fR allows shell-style \fIwildcards\fR (aka meta or glob characters)
to be used in pathnames as well as command line arguments in the
\&\fIsudoers\fR file.  Wildcard matching is done via the \fB\s-1POSIX\s0\fR
\&\fIfnmatch\fR\|(3) routine.  Note that these are \fInot\fR regular expressions.
.ie n .IP "\*(C`*\*(C'" 8
.el .IP "\f(CW\*(C`*\*(C'\fR" 8
.IX Item "*"
Matches any set of zero or more characters.
.ie n .IP "\*(C`?\*(C'" 8
.el .IP "\f(CW\*(C`?\*(C'\fR" 8
.IX Item "?"
Matches any single character.
.ie n .IP "\*(C`[...]\*(C'" 8
.el .IP "\f(CW\*(C`[...]\*(C'\fR" 8
.IX Item "[...]"
Matches any character in the specified range.
.ie n .IP "\*(C`[!...]\*(C'" 8
.el .IP "\f(CW\*(C`[!...]\*(C'\fR" 8
.IX Item "[!...]"
Matches any character \fBnot\fR in the specified range.
.ie n .IP "\*(C`\ex\*(C'" 8
.el .IP "\f(CW\*(C`\ex\*(C'\fR" 8
.IX Item "x"
For any character \*(L"x\*(R", evaluates to \*(L"x\*(R".  This is used to
escape special characters such as: \*(L"*\*(R", \*(L"?\*(R", \*(L"[\*(R", and \*(L"}\*(R".
.PP
Note that a forward slash ('/') will \fBnot\fR be matched by
wildcards used in the pathname.  When matching the command
line arguments, however, a slash \fBdoes\fR get matched by
wildcards.  This is to make a path like:
.PP
.Vb 1
\&    /usr/bin/*
.Ve
.PP
match \fI/usr/bin/who\fR but not \fI/usr/bin/X11/xterm\fR.
.PP
\&\s-1WARNING:\s0 a pathname with wildcards will \fBnot\fR match a user command
that consists of a relative path.  In other words, given the
following \fIsudoers\fR entry:
.PP
.Vb 1
\&    billy  workstation = /usr/bin/*
.Ve
.PP
user billy will be able to run any command in /usr/bin as root, such
as \fI/usr/bin/w\fR.  The following two command will be allowed (the first
assumes that \fI/usr/bin\fR is in the user's path):
.PP
.Vb 2
\&    $ sudo w
\&    $ sudo /usr/bin/w
.Ve
.PP
However, this will not:
.PP
.Vb 2
\&    $ cd /usr/bin
\&    $ sudo ./w
.Ve
.PP
For this reason you should only \fBgrant\fR access to commands using
wildcards and never \fBrestrict\fR access using them.  This limitation
will be removed in a future version of \fBsudo\fR.
.Sh "Exceptions to wildcard rules"
.IX Subsection "Exceptions to wildcard rules"
The following exceptions apply to the above rules:
.ie n .IP """""" 8
.el .IP "\f(CW``''\fR" 8
.IX Item """"""
If the empty string \f(CW""\fR is the only command line argument in the
\&\fIsudoers\fR entry it means that command is not allowed to be run
with \fBany\fR arguments.
.Sh "Other special characters and reserved words"
.IX Subsection "Other special characters and reserved words"
The pound sign ('#') is used to indicate a comment (unless it
occurs in the context of a user name and is followed by one or
more digits, in which case it is treated as a uid).  Both the
comment character and any text after it, up to the end of the line,
are ignored.
.PP
The reserved word \fB\s-1ALL\s0\fR is a built-in \fIalias\fR that always causes
a match to succeed.  It can be used wherever one might otherwise
use a \f(CW\*(C`Cmnd_Alias\*(C'\fR, \f(CW\*(C`User_Alias\*(C'\fR, \f(CW\*(C`Runas_Alias\*(C'\fR, or \f(CW\*(C`Host_Alias\*(C'\fR.
You should not try to define your own \fIalias\fR called \fB\s-1ALL\s0\fR as the
built-in alias will be used in preference to your own.  Please note
that using \fB\s-1ALL\s0\fR can be dangerous since in a command context, it
allows the user to run \fBany\fR command on the system.
.PP
An exclamation point ('!') can be used as a logical \fInot\fR operator
both in an \fIalias\fR and in front of a \f(CW\*(C`Cmnd\*(C'\fR.  This allows one to
exclude certain values.  Note, however, that using a \f(CW\*(C`!\*(C'\fR in
conjunction with the built-in \f(CW\*(C`ALL\*(C'\fR alias to allow a user to
run \*(L"all but a few\*(R" commands rarely works as intended (see \s-1SECURITY\s0
\&\s-1NOTES\s0 below).
.PP
Long lines can be continued with a backslash ('\e') as the last
character on the line.
.PP
Whitespace between elements in a list as well as special syntactic
characters in a \fIUser Specification\fR ('=', ':', '(', ')') is optional.
.PP
The following characters must be escaped with a backslash ('\e') when
used as part of a word (e.g. a username or hostname):
\&'@@', '!', '=', ':', ',', '(', ')', '\e'.
.SH "FILES"
.IX Header "FILES"
.Vb 3
\& /etc/sudoers           List of who can run what
\& /etc/group             Local groups file
\& /etc/netgroup          List of network groups
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Since the \fIsudoers\fR file is parsed in a single pass, order is
important.  In general, you should structure \fIsudoers\fR such that
the \f(CW\*(C`Host_Alias\*(C'\fR, \f(CW\*(C`User_Alias\*(C'\fR, and \f(CW\*(C`Cmnd_Alias\*(C'\fR specifications
come first, followed by any \f(CW\*(C`Default_Entry\*(C'\fR lines, and finally the
\&\f(CW\*(C`Runas_Alias\*(C'\fR and user specifications.  The basic rule of thumb
is you cannot reference an Alias that has not already been defined.
.PP
Below are example \fIsudoers\fR entries.  Admittedly, some of
these are a bit contrived.  First, we define our \fIaliases\fR:
.PP
.Vb 4
\& # User alias specification
\& User_Alias     FULLTIMERS = millert, mikef, dowdy
\& User_Alias     PARTTIMERS = bostley, jwfox, crawl
\& User_Alias     WEBMASTERS = will, wendy, wim
.Ve
.PP
.Vb 3
\& # Runas alias specification
\& Runas_Alias    OP = root, operator
\& Runas_Alias    DB = oracle, sybase
.Ve
.PP
.Vb 9
\& # Host alias specification
\& Host_Alias     SPARC = bigtime, eclipse, moet, anchor :\e
\&                SGI = grolsch, dandelion, black :\e
\&                ALPHA = widget, thalamus, foobar :\e
\&                HPPA = boa, nag, python
\& Host_Alias     CUNETS = 128.138.0.0/255.255.0.0
\& Host_Alias     CSNETS = 128.138.243.0, 128.138.204.0/24, 128.138.242.0
\& Host_Alias     SERVERS = master, mail, www, ns
\& Host_Alias     CDROM = orion, perseus, hercules
.Ve
.PP
.Vb 12
\& # Cmnd alias specification
\& Cmnd_Alias     DUMPS = /usr/bin/mt, /usr/sbin/dump, /usr/sbin/rdump,\e
\&                        /usr/sbin/restore, /usr/sbin/rrestore
\& Cmnd_Alias     KILL = /usr/bin/kill
\& Cmnd_Alias     PRINTING = /usr/sbin/lpc, /usr/bin/lprm
\& Cmnd_Alias     SHUTDOWN = /usr/sbin/shutdown
\& Cmnd_Alias     HALT = /usr/sbin/halt
\& Cmnd_Alias     REBOOT = /usr/sbin/reboot
\& Cmnd_Alias     SHELLS = /usr/bin/sh, /usr/bin/csh, /usr/bin/ksh, \e
\&                         /usr/local/bin/tcsh, /usr/bin/rsh, \e
\&                         /usr/local/bin/zsh
\& Cmnd_Alias     SU = /usr/bin/su
.Ve
.PP
Here we override some of the compiled in default values.  We want
\&\fBsudo\fR to log via \fIsyslog\fR\|(3) using the \fIauth\fR facility in all
cases.  We don't want to subject the full time staff to the \fBsudo\fR
lecture, user \fBmillert\fR need not give a password, and we don't
want to reset the \f(CW\*(C`LOGNAME\*(C'\fR or \f(CW\*(C`USER\*(C'\fR environment variables when
running commands as root.  Additionally, on the machines in the
\&\fI\s-1SERVERS\s0\fR \f(CW\*(C`Host_Alias\*(C'\fR, we keep an additional local log file and
make sure we log the year in each log line since the log entries
will be kept around for several years.
.PP
.Vb 6
\& # Override built-in defaults
\& Defaults               syslog=auth
\& Defaults>root          !set_logname
\& Defaults:FULLTIMERS    !lecture
\& Defaults:millert       !authenticate
\& Defaults@@SERVERS       log_year, logfile=/var/log/sudo.log
.Ve
.PP
The \fIUser specification\fR is the part that actually determines who may
run what.
.PP
.Vb 2
\& root           ALL = (ALL) ALL
\& %wheel         ALL = (ALL) ALL
.Ve
.PP
We let \fBroot\fR and any user in group \fBwheel\fR run any command on any
host as any user.
.PP
.Vb 1
\& FULLTIMERS     ALL = NOPASSWD: ALL
.Ve
.PP
Full time sysadmins (\fBmillert\fR, \fBmikef\fR, and \fBdowdy\fR) may run any
command on any host without authenticating themselves.
.PP
.Vb 1
\& PARTTIMERS     ALL = ALL
.Ve
.PP
Part time sysadmins (\fBbostley\fR, \fBjwfox\fR, and \fBcrawl\fR) may run any
command on any host but they must authenticate themselves first
(since the entry lacks the \f(CW\*(C`NOPASSWD\*(C'\fR tag).
.PP
.Vb 1
\& jack           CSNETS = ALL
.Ve
.PP
The user \fBjack\fR may run any command on the machines in the \fI\s-1CSNETS\s0\fR alias
(the networks \f(CW128.138.243.0\fR, \f(CW128.138.204.0\fR, and \f(CW128.138.242.0\fR).
Of those networks, only \f(CW128.138.204.0\fR has an explicit netmask (in
\&\s-1CIDR\s0 notation) indicating it is a class C network.  For the other
networks in \fI\s-1CSNETS\s0\fR, the local machine's netmask will be used
during matching.
.PP
.Vb 1
\& lisa           CUNETS = ALL
.Ve
.PP
The user \fBlisa\fR may run any command on any host in the \fI\s-1CUNETS\s0\fR alias
(the class B network \f(CW128.138.0.0\fR).
.PP
.Vb 2
\& operator       ALL = DUMPS, KILL, SHUTDOWN, HALT, REBOOT, PRINTING,\e
\&                sudoedit /etc/printcap, /usr/oper/bin/
.Ve
.PP
The \fBoperator\fR user may run commands limited to simple maintenance.
Here, those are commands related to backups, killing processes, the
printing system, shutting down the system, and any commands in the
directory \fI/usr/oper/bin/\fR.
.PP
.Vb 1
\& joe            ALL = /usr/bin/su operator
.Ve
.PP
The user \fBjoe\fR may only \fIsu\fR\|(1) to operator.
.PP
.Vb 1
\& pete           HPPA = /usr/bin/passwd [A-z]*, !/usr/bin/passwd root
.Ve
.PP
The user \fBpete\fR is allowed to change anyone's password except for
root on the \fI\s-1HPPA\s0\fR machines.  Note that this assumes \fIpasswd\fR\|(1)
does not take multiple usernames on the command line.
.PP
.Vb 1
\& bob            SPARC = (OP) ALL : SGI = (OP) ALL
.Ve
.PP
The user \fBbob\fR may run anything on the \fI\s-1SPARC\s0\fR and \fI\s-1SGI\s0\fR machines
as any user listed in the \fI\s-1OP\s0\fR \f(CW\*(C`Runas_Alias\*(C'\fR (\fBroot\fR and \fBoperator\fR).
.PP
.Vb 1
\& jim            +biglab = ALL
.Ve
.PP
The user \fBjim\fR may run any command on machines in the \fIbiglab\fR netgroup.
\&\fBSudo\fR knows that \*(L"biglab\*(R" is a netgroup due to the '+' prefix.
.PP
.Vb 1
\& +secretaries   ALL = PRINTING, /usr/bin/adduser, /usr/bin/rmuser
.Ve
.PP
Users in the \fBsecretaries\fR netgroup need to help manage the printers
as well as add and remove users, so they are allowed to run those
commands on all machines.
.PP
.Vb 1
\& fred           ALL = (DB) NOPASSWD: ALL
.Ve
.PP
The user \fBfred\fR can run commands as any user in the \fI\s-1DB\s0\fR \f(CW\*(C`Runas_Alias\*(C'\fR
(\fBoracle\fR or \fBsybase\fR) without giving a password.
.PP
.Vb 1
\& john           ALPHA = /usr/bin/su [!-]*, !/usr/bin/su *root*
.Ve
.PP
On the \fI\s-1ALPHA\s0\fR machines, user \fBjohn\fR may su to anyone except root
but he is not allowed to give \fIsu\fR\|(1) any flags.
.PP
.Vb 1
\& jen            ALL, !SERVERS = ALL
.Ve
.PP
The user \fBjen\fR may run any command on any machine except for those
in the \fI\s-1SERVERS\s0\fR \f(CW\*(C`Host_Alias\*(C'\fR (master, mail, www and ns).
.PP
.Vb 1
\& jill           SERVERS = /usr/bin/, !SU, !SHELLS
.Ve
.PP
For any machine in the \fI\s-1SERVERS\s0\fR \f(CW\*(C`Host_Alias\*(C'\fR, \fBjill\fR may run
any commands in the directory /usr/bin/ except for those commands
belonging to the \fI\s-1SU\s0\fR and \fI\s-1SHELLS\s0\fR \f(CW\*(C`Cmnd_Aliases\*(C'\fR.
.PP
.Vb 1
\& steve          CSNETS = (operator) /usr/local/op_commands/
.Ve
.PP
The user \fBsteve\fR may run any command in the directory /usr/local/op_commands/
but only as user operator.
.PP
.Vb 1
\& matt           valkyrie = KILL
.Ve
.PP
On his personal workstation, valkyrie, \fBmatt\fR needs to be able to
kill hung processes.
.PP
.Vb 1
\& WEBMASTERS     www = (www) ALL, (root) /usr/bin/su www
.Ve
.PP
On the host www, any user in the \fI\s-1WEBMASTERS\s0\fR \f(CW\*(C`User_Alias\*(C'\fR (will,
wendy, and wim), may run any command as user www (which owns the
web pages) or simply \fIsu\fR\|(1) to www.
.PP
.Vb 2
\& ALL            CDROM = NOPASSWD: /sbin/umount /CDROM,\e
\&                /sbin/mount -o nosuid\e,nodev /dev/cd0a /CDROM
.Ve
.PP
Any user may mount or unmount a CD-ROM on the machines in the \s-1CDROM\s0
\&\f(CW\*(C`Host_Alias\*(C'\fR (orion, perseus, hercules) without entering a password.
This is a bit tedious for users to type, so it is a prime candidate
for encapsulating in a shell script.
.SH "SECURITY NOTES"
.IX Header "SECURITY NOTES"
It is generally not effective to \*(L"subtract\*(R" commands from \f(CW\*(C`ALL\*(C'\fR
using the '!' operator.  A user can trivially circumvent this
by copying the desired command to a different name and then
executing that.  For example:
.PP
.Vb 1
\&    bill        ALL = ALL, !SU, !SHELLS
.Ve
.PP
Doesn't really prevent \fBbill\fR from running the commands listed in
\&\fI\s-1SU\s0\fR or \fI\s-1SHELLS\s0\fR since he can simply copy those commands to a
different name, or use a shell escape from an editor or other
program.  Therefore, these kind of restrictions should be considered
advisory at best (and reinforced by policy).
.SH "PREVENTING SHELL ESCAPES"
.IX Header "PREVENTING SHELL ESCAPES"
Once \fBsudo\fR executes a program, that program is free to do whatever
it pleases, including run other programs.  This can be a security
issue since it is not uncommon for a program to allow shell escapes,
which lets a user bypass \fBsudo\fR's restrictions.  Common programs
that permit shell escapes include shells (obviously), editors,
paginators, mail and terminal programs.
.PP
Many systems that support shared libraries have the ability to
override default library functions by pointing an environment
variable (usually \f(CW\*(C`LD_PRELOAD\*(C'\fR) to an alternate shared library.
On such systems, \fBsudo\fR's \fInoexec\fR functionality can be used to
prevent a program run by sudo from executing any other programs.
Note, however, that this applies only to native dynamically-linked
executables.  Statically-linked executables and foreign executables
running under binary emulation are not affected.
.PP
To tell whether or not \fBsudo\fR supports \fInoexec\fR, you can run
the following as root:
.PP
.Vb 1
\&    sudo -V | grep "dummy exec"
.Ve
.PP
If the resulting output contains a line that begins with:
.PP
.Vb 1
\&    File containing dummy exec functions:
.Ve
.PP
then \fBsudo\fR may be able to replace the exec family of functions
in the standard library with its own that simply return an error.
Unfortunately, there is no foolproof way to know whether or not
\&\fInoexec\fR will work at compile\-time.  \fINoexec\fR should work on
SunOS, Solaris, *BSD, Linux, \s-1IRIX\s0, Tru64 \s-1UNIX\s0, MacOS X, and HP-UX
11.x.  It is known \fBnot\fR to work on \s-1AIX\s0 and UnixWare.  \fINoexec\fR
is expected to work on most operating systems that support the
\&\f(CW\*(C`LD_PRELOAD\*(C'\fR environment variable.  Check your operating system's
manual pages for the dynamic linker (usually ld.so, ld.so.1, dyld,
dld.sl, rld, or loader) to see if \f(CW\*(C`LD_PRELOAD\*(C'\fR is supported.
.PP
To enable \fInoexec\fR for a command, use the \f(CW\*(C`NOEXEC\*(C'\fR tag as documented
in the User Specification section above.  Here is that example again:
.PP
.Vb 1
\& aaron  shanty = NOEXEC: /usr/bin/more, /usr/bin/vi
.Ve
.PP
This allows user \fBaaron\fR to run \fI/usr/bin/more\fR and \fI/usr/bin/vi\fR
with \fInoexec\fR enabled.  This will prevent those two commands from
executing other commands (such as a shell).  If you are unsure
whether or not your system is capable of supporting \fInoexec\fR you
can always just try it out and see if it works.
.PP
Note that disabling shell escapes is not a panacea.  Programs running
as root are still capable of many potentially hazardous operations
(such as changing or overwriting files) that could lead to unintended
privilege escalation.  In the specific case of an editor, a safer
approach is to give the user permission to run \fBsudoedit\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIrsh\fR\|(1), \fIsu\fR\|(1), \fIfnmatch\fR\|(3), sudo(8), visudo(8)
.SH "CAVEATS"
.IX Header "CAVEATS"
The \fIsudoers\fR file should \fBalways\fR be edited by the \fBvisudo\fR
command which locks the file and does grammatical checking. It is
imperative that \fIsudoers\fR be free of syntax errors since \fBsudo\fR
will not run with a syntactically incorrect \fIsudoers\fR file.
.PP
When using netgroups of machines (as opposed to users), if you
store fully qualified hostnames in the netgroup (as is usually the
case), you either need to have the machine's hostname be fully qualified
as returned by the \f(CW\*(C`hostname\*(C'\fR command or use the \fIfqdn\fR option in
\&\fIsudoers\fR.
.SH "BUGS"
.IX Header "BUGS"
If you feel you have found a bug in \fBsudo\fR, please submit a bug report
at http://www.sudo.ws/sudo/bugs/
.SH "SUPPORT"
.IX Header "SUPPORT"
Commercial support is available for \fBsudo\fR, see
http://www.sudo.ws/sudo/support.html for details.
.PP
Limited free support is available via the sudo-users mailing list,
see http://www.sudo.ws/mailman/listinfo/sudo\-users to subscribe or
search the archives.
.SH "DISCLAIMER"
.IX Header "DISCLAIMER"
\&\fBSudo\fR is provided ``\s-1AS\s0 \s-1IS\s0'' and any express or implied warranties,
including, but not limited to, the implied warranties of merchantability
and fitness for a particular purpose are disclaimed.  See the \s-1LICENSE\s0
file distributed with \fBsudo\fR or http://www.sudo.ws/sudo/license.html
for complete details.
@


1.25
log
@one more epoch -> Epoch and a grammar fix; ok millert
@
text
@@


1.24
log
@Typo.

From Alexander Hall (alexander at hakan dot beard dot se).
@
text
@d599 1
a599 1
Since this options tells sudo how to behave when no specific \s-1LDAP\s0 entries
@


1.23
log
@Update to sudo 1.6.8p9
@
text
@d523 1
a523 1
off echo when there is no tty present, some sites may with to set
@


1.22
log
@update to sudo 1.6.8p8
@
text
@d152 1
a152 1
.TH SUDOERS 5 "March 12, 2005" "1.6.8p8" "MAINTENANCE COMMANDS"
@


1.21
log
@Update to Sudo 1.6.8p7
@
text
@d20 1
a20 1
.\" $Sudo: sudoers.man.in,v 1.46 2004/09/06 20:46:28 millert Exp $
d152 1
a152 1
.TH SUDOERS 5 "February 5, 2005" "1.6.8p7" "MAINTENANCE COMMANDS"
@


1.20
log
@update to sudo 1.6.8p5
@
text
@d152 1
a152 1
.TH SUDOERS 5 "November 28, 2004" "1.6.8p5" "MAINTENANCE COMMANDS"
@


1.19
log
@Update to sudo 1.6.8p4
@
text
@d152 1
a152 1
.TH SUDOERS 5 "November 17, 2004" "1.6.8p4" "MAINTENANCE COMMANDS"
d731 2
d785 3
a787 1
The default value is `all'.
d811 3
a813 1
The default value is `any'.
@


1.18
log
@Update to sudo 1.6.8p2
@
text
@d152 1
a152 1
.TH SUDOERS 5 "November 11, 2004" "1.6.8p2" "MAINTENANCE COMMANDS"
@


1.17
log
@Update to sudo 1.6.8p1
@
text
@d152 1
a152 1
.TH SUDOERS 5 "September  6, 2004" "1.6.8" "MAINTENANCE COMMANDS"
@


1.16
log
@built in -> built-in;

from NetBSD (Igor Sobrado);
smrsh(8) passed on to sendmail people;

ok millert@@
@
text
@d1 1
a1 2
.\" Copyright (c) 1994-1996,1998-2003 Todd C. Miller <Todd.Miller@@courtesan.com>
.\" All rights reserved.
d3 3
a5 3
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
d7 8
a14 10
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission
.\"    from the author.
d16 3
a18 3
.\" 4. Products derived from this software may not be called "Sudo" nor
.\"    may "Sudo" appear in their names without specific prior written
.\"    permission from the author.
d20 2
a21 13
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
.\" INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
.\" THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
.\" EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
.\" PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
.\" OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\" WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
.\" OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
.\" ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\" 
.\" $Sudo: sudoers.man.in,v 1.24 2003/03/15 20:33:31 millert Exp $
.\" Automatically generated by Pod::Man v1.34, Pod::Parser v1.13
d152 1
a152 1
.TH SUDOERS 5 "March 13, 2003" "1.6.7" "MAINTENANCE COMMANDS"
d157 11
a167 6
The \fIsudoers\fR file is composed of two types of entries:
aliases (basically variables) and user specifications
(which specify who may run what).  The grammar of \fIsudoers\fR
will be described below in Extended Backus-Naur Form (\s-1EBNF\s0).
Don't despair if you don't know what \s-1EBNF\s0 is; it is fairly
simple, and the definitions below are annotated.
d263 5
a267 6
A \f(CW\*(C`User_List\*(C'\fR is made up of one or more usernames, uids
(prefixed with '#'), System groups (prefixed with '%'),
netgroups (prefixed with '+') and other aliases.  Each list
item may be prefixed with one or more '!' operators.  An odd number
of '!' operators negate the value of the item; an even number
just cancel each other out.
d284 5
a288 1
it can contain \f(CW\*(C`Runas_Alias\*(C'\fRes.
d310 1
a310 1
may include shell-style wildcards (see `Wildcards' section below),
d326 1
a326 1
.Vb 3
d329 1
d335 1
a335 1
shell-style wildcards (see `Wildcards' section below).  A simple
d348 4
a351 1
arguments: ',', ':', '=', '\e'.
d357 1
a357 3
specific user, or commands being run as a specific user.  When
multiple entries match, they are applied in order.  Where there are
conflicting values, the last value on a matching line takes effect.
d360 3
a362 3
\& Default_Type ::= 'Defaults' ||
\&                  'Defaults' '@@' Host ||
\&                  'Defaults' ':' User ||
d370 5
d376 4
a379 4
\& Parameter ::= Parameter '=' Value ||
\&               Parameter '+=' Value ||
\&               Parameter '-=' Value ||
\&               '!'* Parameter ||
a393 4
Note that since the \fIsudoers\fR file is parsed in order the best place
to put the Defaults section is after the Host, User, and Cmnd aliases
but before the user specifications.
.PP
d406 4
a409 1
flag is \fIon\fR by default.
d432 2
a433 2
listed in their \fIsudoers\fR file entry.  This flag is \fIoff\fR
by default.
a440 4
.IP "lecture" 12
.IX Item "lecture"
If set, a user will receive a short lecture the first time he/she
runs \fBsudo\fR.  This flag is \fIon\fR by default.
d451 4
a454 1
like \f(CW"sudo sudo /bin/sh"\fR.
d543 2
a544 2
\&\fIrunas_default\fR option (defaults to \f(CW\*(C`root\*(C'\fR) instead of the password
of the invoking user.  This flag is \fIoff\fR by default.
d549 3
a551 1
invoking user.  This flag is \fIoff\fR by default.
d587 15
d689 2
d706 6
d714 23
d744 1
a744 1
disable syslog logging).  Defaults to \f(CW\*(C`local2\*(C'\fR.
d843 7
a849 6
When logging via \fIsyslog\fR\|(3), \fBsudo\fR accepts the following values for the syslog
facility (the value of the \fBsyslog\fR Parameter): \fBauthpriv\fR (if your \s-1OS\s0
supports it), \fBauth\fR, \fBdaemon\fR, \fBuser\fR, \fBlocal0\fR, \fBlocal1\fR, \fBlocal2\fR,
\&\fBlocal3\fR, \fBlocal4\fR, \fBlocal5\fR, \fBlocal6\fR, and \fBlocal7\fR.  The following
syslog priorities are supported: \fBalert\fR, \fBcrit\fR, \fBdebug\fR, \fBemerg\fR,
\&\fBerr\fR, \fBinfo\fR, \fBnotice\fR, and \fBwarning\fR.
d853 2
a854 2
\& User_Spec ::= User_list Host_List '=' Cmnd_Spec_List \e
\&               (':' User_Spec)*
d863 1
a863 1
\& Cmnd_Spec ::= Runas_Spec? ('NOPASSWD:' | 'PASSWD:')? Cmnd
d870 4
d895 1
a895 1
\&    sudo -u operator /bin/ls.
d907 10
a916 1
.Sh "\s-1NOPASSWD\s0 and \s-1PASSWD\s0"
d918 1
d948 23
a970 6
.Sh "Wildcards (aka meta characters):"
.IX Subsection "Wildcards (aka meta characters):"
\&\fBsudo\fR allows shell-style \fIwildcards\fR to be used in pathnames
as well as command line arguments in the \fIsudoers\fR file.  Wildcard
matching is done via the \fB\s-1POSIX\s0\fR \f(CWfnmatch(3)\fR routine.  Note that
these are \fInot\fR regular expressions.
d1002 31
a1032 3
match \f(CW\*(C`/usr/bin/who\*(C'\fR but not \f(CW\*(C`/usr/bin/X11/xterm\*(C'\fR.
.Sh "Exceptions to wildcard rules:"
.IX Subsection "Exceptions to wildcard rules:"
d1040 2
a1041 2
.Sh "Other special characters and reserved words:"
.IX Subsection "Other special characters and reserved words:"
d1072 7
d1081 7
d1123 2
a1124 2
\& Cmnd_Alias     HALT = /usr/sbin/halt, /usr/sbin/fasthalt
\& Cmnd_Alias     REBOOT = /usr/sbin/reboot, /usr/sbin/fastboot
d1135 1
a1135 1
want to set the \f(CW\*(C`LOGNAME\*(C'\fR or \f(CW\*(C`USER\*(C'\fR environment variables when
d1195 2
a1196 2
\& operator       ALL = DUMPS, KILL, PRINTING, SHUTDOWN, HALT, REBOOT,\e
\&                /usr/oper/bin/
d1316 63
d1391 19
a1409 10
.SH "FILES"
.IX Header "FILES"
.Vb 3
\& /etc/sudoers           List of who can run what
\& /etc/group             Local groups file
\& /etc/netgroup          List of network groups
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIrsh\fR\|(1), \fIsu\fR\|(1), \fIfnmatch\fR\|(3), \fIsudo\fR\|(8), \fIvisudo\fR\|(8)
@


1.15
log
@update to what will soon be sudo 1.6.7
@
text
@d941 1
a941 1
The reserved word \fB\s-1ALL\s0\fR is a built in \fIalias\fR that always causes
d945 1
a945 1
built in alias will be used in preference to your own.  Please note
d952 1
a952 1
conjunction with the built in \f(CW\*(C`ALL\*(C'\fR alias to allow a user to
d1021 1
a1021 1
\& # Override built in defaults
@


1.14
log
@Pull in copyright info from the respective .pod files which gets lost
in the conversion from pod -> man (since it is just a comment).
This will probably get lost again the next time I update sudo but
all the copyright info is in the LICENSE file anyway...
@
text
@d1 1
a1 4
.\" Automatically generated by Pod::Man version 1.15
.\" Thu Apr 25 09:34:54 2002
.\" 
.\" Copyright (c) 1994-1996,1998-2001 Todd C. Miller <Todd.Miller@@courtesan.com>
d33 3
d38 1
a38 1
.\" ======================================================================
a50 6
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
a57 1

d63 3
a65 3
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
d85 4
a88 4
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
d97 2
a98 2
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
a103 1
.bd B 3
d163 1
a163 1
.\" ======================================================================
d165 2
a166 3
.IX Title "sudoers 5"
.TH sudoers 5 "1.6.6" "April 25, 2002" "MAINTENANCE COMMANDS"
.UC
d185 1
d191 2
a192 1
.Ip "\f(CW\*(C`?\*(C'\fR" 8
d196 2
a197 1
.Ip "\f(CW\*(C`*\*(C'\fR" 8
d201 2
a202 1
.Ip "\f(CW\*(C`+\*(C'\fR" 8
d221 1
d225 1
d229 1
d233 1
d237 1
d241 1
d247 1
d257 1
d264 1
d271 1
d283 1
d291 1
d300 1
d308 1
d313 1
a313 1
of the host's ethernet \fIinterface\fR\|(s) will be used when matching.
d325 1
d331 1
d337 1
d343 1
a343 1
wildcards).  Alternately, you can specify \f(CW\*(C`""\*(C'\fR to indicate that the command
d358 4
a361 4
may affect all users on any host, all users on a specific host,
or just a specific user.  When multiple entries match, they are
applied in order.  Where there are conflicting values, the last
value on a matching line takes effect.
d363 1
a363 1
.Vb 3
d365 1
d367 1
a367 1
\&                  'Defaults' '@@' Host
d369 1
d373 1
d380 1
d398 1
a398 1
.Ip "long_otp_prompt" 12
d405 1
a405 1
.Ip "ignore_dot" 12
d409 2
a410 2
flag is \fIoff\fR by default.
.Ip "mail_always" 12
d414 1
a414 1
.Ip "mail_badpass" 12
d418 1
a418 1
.Ip "mail_no_user" 12
d423 1
a423 1
.Ip "mail_no_host" 12
d428 1
a428 1
.Ip "mail_no_perms" 12
d434 1
a434 1
.Ip "tty_tickets" 12
d441 1
a441 1
.Ip "lecture" 12
d445 1
a445 1
.Ip "authenticate" 12
d451 1
a451 1
.Ip "root_sudo" 12
d455 1
a455 1
like \f(CW\*(C`"sudo sudo /bin/sh"\*(C'\fR.
d457 1
a457 1
.Ip "log_host" 12
d459 1
a459 1
If set, the hostname will be logged in the (non-syslog) \fBsudo\fR log file.
d461 1
a461 1
.Ip "log_year" 12
d463 1
a463 1
If set, the four-digit year will be logged in the (non-syslog) \fBsudo\fR log file.
d465 1
a465 1
.Ip "shell_noargs" 12
d472 1
a472 1
.Ip "set_home" 12
d478 1
a478 1
.Ip "always_set_home" 12
d484 1
a484 1
.Ip "path_info" 12
d494 1
a494 1
.Ip "preserve_groups" 12
d501 1
a501 1
.Ip "fqdn" 12
d515 1
a515 1
.Ip "insults" 12
d519 1
a519 1
.Ip "requiretty" 12
d522 1
a522 1
tty.  This will disallow things like \f(CW\*(C`"rsh somehost sudo ls"\*(C'\fR since
d524 1
a524 1
off echo when there is no tty present, some sites may wish to set
d527 1
a527 1
.Ip "env_editor" 12
d537 1
a537 1
.Ip "rootpw" 12
d541 1
a541 1
.Ip "runaspw" 12
d546 1
a546 1
.Ip "targetpw" 12
d551 1
a551 1
.Ip "set_logname" 12
d558 1
a558 1
.Ip "stay_setuid" 12
d570 1
a570 1
.Ip "env_reset" 12
d581 1
a581 1
.Ip "use_loginclass" 12
d585 1
a585 1
the \-\-with-logincap option.  This flag is \fIoff\fR by default.
d588 1
a588 1
.Ip "passwd_tries" 12
d594 1
a594 1
.Ip "loglinelen" 12
d600 1
a600 1
.Ip "timestamp_timeout" 12
d603 1
a603 1
passwd again.  The default is \f(CW\*(C`5\*(C'\fR.  Set this to \f(CW\*(C`0\*(C'\fR to always
d605 1
a605 1
If set to a value less than \f(CW\*(C`0\*(C'\fR the user's timestamp will never
d608 1
a608 1
.Ip "passwd_timeout" 12
d611 2
a612 2
The default is \f(CW\*(C`5\*(C'\fR, set this to \f(CW\*(C`0\*(C'\fR for no password timeout.
.Ip "umask" 12
d618 1
a618 1
.Ip "mailsub" 12
d620 1
a620 1
Subject of the mail sent to the \fImailto\fR user. The escape \f(CW\*(C`%h\*(C'\fR
d623 1
a623 1
.Ip "badpass_message" 12
d627 1
a627 1
.Ip "timestampdir" 12
d631 5
a635 1
.Ip "passprompt" 12
d638 32
a669 4
via the \fB\-p\fR option or the \f(CW\*(C`SUDO_PROMPT\*(C'\fR environment variable. Supports
two escapes: \*(L"%u\*(R" expands to the user's login name and \*(L"%h\*(R" expands
to the local hostname.  The default value is \f(CW\*(C`Password:\*(C'\fR.
.Ip "runas_default" 12
d673 1
a673 1
.Ip "syslog_goodpri" 12
d677 1
a677 1
.Ip "syslog_badpri" 12
d681 1
a681 1
.Ip "editor" 12
d690 1
a690 1
.Ip "logfile" 12
d694 1
a694 1
.Ip "syslog" 12
d697 2
a698 2
disable syslog logging).  Defaults to \f(CW\*(C`authpriv\*(C'\fR.
.Ip "mailerpath" 12
d702 1
a702 1
.Ip "mailerflags" 12
d705 1
a705 1
.Ip "mailto" 12
d710 1
a710 1
.Ip "exempt_group" 12
d714 1
a714 1
.Ip "verifypw" 12
d719 1
a719 1
.Ip "all" 8
d723 1
a723 1
.Ip "any" 8
d727 1
a727 1
.Ip "never" 8
d730 1
a730 1
.Ip "always" 8
d738 1
a738 1
.Ip "listpw" 12
d741 1
a741 2
user runs \fBsudo\fR with the \fB\-l\fR flag.  It has the 
following possible values:
d743 1
a743 1
.Ip "all" 8
d747 1
a747 1
.Ip "any" 8
d751 1
a751 1
.Ip "never" 8
d754 1
a754 1
.Ip "always" 8
d764 1
a764 1
.Ip "env_check" 12
d769 2
a770 2
poorly-written programs.  The argument may be a double-quoted,
space-separated list or a single value without double-quotes.  The
d775 1
a775 1
.Ip "env_delete" 12
d778 2
a779 2
The argument may be a double-quoted, space-separated list or a
single value without double-quotes.  The list can be replaced, added
d783 4
a786 2
\&\fI\-V\fR option.
.Ip "env_keep" 12
d791 2
a792 2
The argument may be a double-quoted, space-separated list or a
single value without double-quotes.  The list can be replaced, added
d808 1
d813 1
d817 1
d821 1
d838 1
d845 1
d852 1
d867 1
d876 1
d890 1
a890 1
matching is done via the \fB\s-1POSIX\s0\fR \f(CW\*(C`fnmatch(3)\*(C'\fR routine.  Note that
d892 2
a893 1
.Ip "\f(CW\*(C`*\*(C'\fR" 8
d896 2
a897 1
.Ip "\f(CW\*(C`?\*(C'\fR" 8
d900 2
a901 1
.Ip "\f(CW\*(C`[...]\*(C'\fR" 8
d904 2
a905 1
.Ip "\f(CW\*(C`[!...]\*(C'\fR" 8
d908 2
a909 1
.Ip "\f(CW\*(C`\ex\*(C'\fR" 8
d922 1
d927 4
a930 4
.if n .Ip "\f(CW""""\fR" 8
.el .Ip "\f(CW``''\fR" 8
.IX Item """""
If the empty string \f(CW\*(C`""\*(C'\fR is the only command line argument in the
d976 1
d982 1
d994 1
d1009 1
d1011 8
a1018 6
\&\fBsudo\fR to log via \fIsyslog\fR\|(3) using the \fIauth\fR facility in all cases.
We don't want to subject the full time staff to the \fBsudo\fR lecture,
and user \fBmillert\fR need not give a password.  In addition, on the
machines in the \fI\s-1SERVERS\s0\fR \f(CW\*(C`Host_Alias\*(C'\fR, we keep an additional
local log file and make sure we log the year in each log line since
the log entries will be kept around for several years.
d1020 1
a1020 1
.Vb 5
d1023 1
d1028 1
d1036 1
d1043 1
d1050 1
d1058 1
d1060 2
a1061 2
(the networks \f(CW\*(C`128.138.243.0\*(C'\fR, \f(CW\*(C`128.138.204.0\*(C'\fR, and \f(CW\*(C`128.138.242.0\*(C'\fR).
Of those networks, only \f(CW\*(C`128.138.204.0\*(C'\fR has an explicit netmask (in
d1069 1
d1071 1
a1071 1
(the class B network \f(CW\*(C`128.138.0.0\*(C'\fR).
d1077 1
d1086 1
d1092 1
d1100 1
d1107 1
d1114 1
d1122 1
d1129 1
d1136 1
d1143 1
d1151 1
d1158 1
d1165 1
d1174 2
a1175 1
Any user may mount or unmount a \s-1CD-ROM\s0 on the machines in the \s-1CDROM\s0
d1189 1
d1216 1
a1216 1
\&\fIrsh\fR\|(1), \fIsu\fR\|(1), \fIfnmatch\fR\|(3), \fIsudo\fR\|(8), \fIvisudo\fR\|(8).
@


1.13
log
@typos;
ok millert@@
@
text
@d3 33
@


1.12
log
@Update to sudo 1.6.6
@
text
@d215 1
a215 1
and the underscore characters ('_').  A \f(CW\*(C`NAME\*(C'\fR \fBmust\fR start with an
d382 1
a382 1
user allowed to use \fBsudo\fR but the command they are trying is not
d455 1
a455 1
\&\fIsudoers\fR file.  I.e.: instead of myhost you would use myhost.mydomain.edu.
d475 1
a475 1
of echo when there is no tty present, some sites may with to set
d660 2
a661 1
user runs \fBsudo\fR with the \fB\-l\fR.  It has the following possible values:
d688 1
a688 1
be used to guard against printf-style format vulnerabilties in
d693 1
a693 1
list of environment variable to check is printed when \fBsudo\fR is
d702 1
a702 1
variable to remove is printed when \fBsudo\fR is run by root with the
d750 1
a750 1
\& dgb    boulder = (operator) /bin/ls, /bin/kill, /usr/bin/who
d820 1
a820 1
line arguments, however, as slash \fBdoes\fR get matched by
d830 1
a830 1
.if n .Ip "\f(CW""""""""\fR" 8
d1091 1
a1091 1
\&\fIrsh\fR\|(1), \fIsudo\fR\|(8), \fIvisudo\fR\|(8), \fIsu\fR\|(1), \fIfnmatch\fR\|(3).
@


1.11
log
@update to sudo 1.6.5
@
text
@d2 1
a2 1
.\" Wed Jan 16 16:36:10 2002
d141 1
a141 1
.TH sudoers 5 "1.6.5" "January 16, 2002" "MAINTENANCE COMMANDS"
@


1.10
log
@sync with sudo 1.6.4-final
@
text
@d2 1
a2 1
.\" Sun Jan 13 11:37:06 2002
d141 1
a141 1
.TH sudoers 5 "1.6.4" "January 13, 2002" "MAINTENANCE COMMANDS"
@


1.9
log
@Update to sudo 1.6.4
@
text
@d2 1
a2 1
.\" Sun Dec 30 12:24:30 2001
d141 1
a141 1
.TH sudoers 5 "1.6.4" "December 30, 2001" "MAINTENANCE COMMANDS"
d516 5
a520 1
dangerous functionality when a program is run setuid.
@


1.8
log
@
semicolon -> colon
detected by mihaak@@lecturax.tmfweb.nl
@
text
@d1 6
a6 19
.rn '' }`
''' $RCSfile: sudoers.5,v $$Revision: 1.7 $$Date: 2001/09/17 23:49:21 $
'''
''' $Log: sudoers.5,v $
''' Revision 1.7  2001/09/17 23:49:21  pjanzen
''' Typo and grammar fixes, one from PR/2058 (Dennis Schwarz); ok millert@@
'''
''' Revision 1.6  2001/01/09 18:15:31  krw
''' Typos: 'eg.' -> 'e.g.'
'''
''' Revision 1.5  2000/03/27 03:44:39  millert
''' sudo 1.6.3; see http://www.courtesan.com/sudo/current.html for a list
''' of changes.
'''
''' Revision 1.5  2000/03/27 03:26:23  millert
''' Use 8 and 5 in the man page bodies as well.
'''
'''
.de Sh
d14 1
a14 1
.de Sp
d18 1
a18 1
.de Ip
d24 1
a24 1
.de Vb
d29 1
a29 1
.de Ve
d34 6
a39 6
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
d41 1
d43 8
a50 20
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
d53 4
a56 15
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
d58 8
a65 12
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaningful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
d67 2
a68 2
.nr % 0
.rr F
d70 4
a73 3
.TH sudoers 5 "1.6.3" "26/Mar/2000" "FILE FORMATS"
.UC
.if n .hy 0
d75 3
a77 12
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
d79 1
a79 1
.	\" fudge factors for nroff and troff
d81 5
a85 5
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
d88 5
a92 5
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
d94 1
a94 1
.	\" simple accents for nroff and troff
d96 6
a101 9
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
d104 6
a109 9
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
d111 1
a111 1
.	\" troff and (daisy-wheel) nroff accents
a113 4
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
d121 1
a121 3
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
d124 1
a124 1
.	\" for low resolution devices (crt and lpr)
d127 9
a135 15
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
d138 5
d146 1
d150 2
a151 2
will be described below in Extended Backus-Naur Form (EBNF).
Don't despair if you don't know what EBNF is; it is fairly
d154 2
a155 1
\s-1EBNF\s0 is a concise and exact way of describing the grammar of a language.
d166 2
a167 1
.Ip "\f(CW?\fR" 8
d170 2
a171 1
.Ip "\f(CW*\fR" 8
d174 2
a175 1
.Ip "\f(CW+\fR" 8
d183 3
a185 2
There are four kinds of aliases: \f(CWUser_Alias\fR, \f(CWRunas_Alias\fR,
\f(CWHost_Alias\fR and \f(CWCmnd_Alias\fR.
d188 4
a191 4
\& Alias ::= 'User_Alias' = User_Alias (':' User_Alias)* |
\&           'Runas_Alias' = Runas_Alias (':' Runas_Alias)* |
\&           'Host_Alias' = Host_Alias (':' Host_Alias)* |
\&           'Cmnd_Alias' = Cmnd_Alias (':' Cmnd_Alias)*
d197 1
a197 1
\& Runas_Alias ::= NAME '=' Runas_User_List
d213 3
a215 3
where \fIAlias_Type\fR is one of \f(CWUser_Alias\fR, \f(CWRunas_Alias\fR, \f(CWHost_Alias\fR,
or \f(CWCmnd_Alias\fR.  A \f(CWNAME\fR is a string of uppercase letters, numbers,
and the underscore characters ('_').  A \f(CWNAME\fR \fBmust\fR start with an
d228 1
a228 1
.Vb 5
a229 1
\&          '!'* '#'uid |
d234 5
a238 5
A \f(CWUser_List\fR is made up of one or more usernames, uids
(prefixed with \*(L'#'), System groups (prefixed with \*(L'%'),
netgroups (prefixed with \*(L'+') and other aliases.  Each list
item may be prefixed with one or more \*(L'!\*(R' operators.  An odd number
of \*(L'!\*(R' operators negate the value of the item; an even number
d252 3
a254 3
Likewise, a \f(CWRunas_List\fR has the same possible elements
as a \f(CWUser_List\fR, except that it can include a \f(CWRunas_Alias\fR,
instead of a \f(CWUser_Alias\fR.
d267 3
a269 3
A \f(CWHost_List\fR is made up of one or more hostnames, \s-1IP\s0 addresses,
network numbers, netgroups (prefixed with \*(L'+') and other aliases.
Again, the value of an item may be negated with the \*(L'!\*(R' operator.
d274 2
a275 2
may include shell-style wildcards (see `Wildcards\*(R' section below),
but unless the \f(CWhostname\fR command on your machine returns the fully
d293 1
a293 1
A \f(CWCmnd_List\fR is a list of one or more commandnames, directories, and other
d295 1
a295 1
shell-style wildcards (see `Wildcards\*(R' section below).  A simple
d297 2
a298 2
wishes.  However, you may also command line arguments (including wildcards).
Alternately, you can specify \f(CW""\fR to indicate that the command
d300 2
a301 2
fully qualified pathname ending in a \*(L'/\*(R'.  When you specify a directory
in a \f(CWCmnd_List\fR, the user will be able to run any file within that directory
d304 2
a305 2
If a \f(CWCmnd\fR has associated command line arguments, then the arguments
in the \f(CWCmnd\fR must match exactly those given by the user on the command line
d307 2
a308 2
characters must be escaped with a \*(L'\e\*(R' if they are used in command
arguments: \*(L',\*(R', \*(L':\*(R', \*(L'=\*(R', \*(L'\e\*(R'.
d310 1
d312 1
a312 1
values at runtime via one or more \f(CWDefault_Entry\fR lines.  These
d326 1
a326 1
.Vb 2
d328 2
d332 15
a346 6
Parameters may be \fBflags\fR, \fBinteger\fR values, or \fBstrings\fR.  Flags
are implicitly boolean and can be turned off via the \*(L'!\*(R' operator.
Some integer and string parameters may also be used in a boolean
context to disable them.  Values may be enclosed in double quotes
(\f(CW"\fR) when they contain multiple words.  Special characters may
be escaped with a backslash (\f(CW\e\fR).
d348 1
a348 1
\fBFlags\fR:
d350 1
d354 2
a355 1
some people find it more convenient.  This flag is off by default.
d357 4
a360 2
If set, \fBsudo\fR will ignore \*(L'.\*(R' or \*(L'\*(R' (current dir) in \f(CW$PATH\fR;
the \f(CW$PATH\fR itself is not modified.  This flag is off by default.
d362 1
d364 5
a368 1
This flag is off by default.
d370 1
d372 2
a373 1
user is not in the \fIsudoers\fR file.  This flag is on by default.
d375 1
d378 1
a378 1
commands on the current host.  This flag is off by default.
d380 1
d383 2
a384 1
listed in their \fIsudoers\fR file entry.  This flag is off by default.
d386 1
d388 1
a388 1
\fBsudo\fR uses a directory in the ticket dir with the same name as
d391 1
a391 1
This flag is off by default.
d393 1
d395 1
a395 1
runs \fBsudo\fR.  This flag is on by default.
d397 1
d400 2
a401 2
may be overridden via the \f(CWPASSWD\fR and \f(CWNOPASSWD\fR tags.
This flag is on by default.
d403 1
d406 2
a407 2
like \f(CW"sudo sudo /bin/sh"\fR.
This flag is on by default.
d409 1
d411 1
a411 1
This flag is off by default.
d413 1
d415 1
a415 1
This flag is off by default.
d417 1
d419 2
a420 2
\f(CW-s\fR flag had been given.  That is, it runs a shell as root (the
shell is determined by the \f(CWSHELL\fR environment variable if it is
d422 1
a422 1
/etc/passwd entry if not).  This flag is off by default.
d424 2
a425 1
If set and \fBsudo\fR is invoked with the \f(CW-s\fR flag the \f(CWHOME\fR
d427 8
a434 2
user (which is root unless the \f(CW-u\fR option is used).  This effectively
makes the \f(CW-s\fR flag imply \f(CW-H\fR.  This flag is off by default.
d436 1
d438 14
a451 6
found in their \f(CW$PATH\fR.  Some sites may wish to disable this as
it could be used to gather information on the location of executables
that the normal user does not have access to.  The disadvantage is
that if the executable is simply not in the user's \f(CW$PATH\fR, \fBsudo\fR
will tell the user that they are not allowed to run it, which can
be confusing.  This flag is off by default.
d453 1
d455 1
a455 1
\fIsudoers\fR file.  I.e.: instead of myhost you would use myhost.mydomain.edu.
d461 1
a461 1
you may not use a host alias (\f(CWCNAME\fR entry) due to performance
d463 1
a463 1
\s-1DNS\s0.  If your machine's hostname (as returned by the \f(CWhostname\fR
d465 1
a465 1
\fIfqfn\fR.  This flag is off by default.
d467 1
d469 1
a469 1
password.  This flag is off by default.
d471 1
d473 2
a474 2
tty.  This will disallow things like \f(CW"rsh somehost sudo ls"\fR since
\fIrsh\fR\|(1) does not allocate a tty.  Because it is not possible to turn
d477 1
a477 1
flag is off by default.
d479 9
a487 4
If set, \fBvisudo\fR will use the value of the \s-1EDITOR\s0 or \s-1VISUAL\s0 environment
falling back on the default editor.  Note that this may create a
security hole as most editors allow a user to get a shell (which
would be a root shell and not be logged).
d489 1
d491 1
a491 1
of the invoking user.
d493 1
d495 2
a496 2
\fIrunas_default\fR option (defaults to root) instead of the password
of the invoking user.
d498 1
d500 2
a501 2
the \f(CW-u\fR flag (defaults to root) instead of the password of the
invoking user.
d503 3
a505 2
Normally, \fBsudo\fR will set the \f(CWLOGNAME\fR and \f(CWUSER\fR environment variables
to the name of the target user (usually root unless the \f(CW-u\fR flag is given).
d507 1
a507 1
use \f(CWLOGNAME\fR to determine the real identity of the user, it may be desirable
d509 24
d534 1
a534 1
\fBIntegers\fR:
d536 1
d538 1
a538 1
\fBsudo\fR logs the failure and exits.  The default is 3.
d540 1
a540 1
\fBIntegers that can be used in a boolean context\fR:
d542 1
d546 1
a546 1
80 (use 0 or negate to disable word wrap).
d548 7
a554 2
Number of minutes that can elapse before \fBsudo\fR will ask for a passwd
again.  The default is 5.  Set this to 0 to always prompt for a password.
d556 1
d558 1
a558 1
The default is 5, set this to 0 for no password timeout.
d560 3
a562 2
Umask to use when running the root command.  Set this to 0777 to
not override the user's umask.  The default is 0022.
d564 1
a564 1
\fBStrings\fR:
d566 2
a567 1
Subject of the mail sent to the \fImailto\fR user. The escape \f(CW%h\fR
d569 1
a569 1
Default is \*(L"*** \s-1SECURITY\s0 information for \f(CW%h\fR ***\*(R".
d571 1
d573 1
a573 1
The default is \*(L"Sorry, try again.\*(R" unless insults are enabled.
d575 1
d577 1
a577 1
The default is \fI@@\s-1TIMEDIR\s0@@\fR.
d579 1
d581 1
a581 1
via the \f(CW-p\fR option or the \f(CWSUDO_PROMPT\fR environment variable. Supports
d583 1
a583 1
to the local hostname.  The default value is \*(L"Password:\*(R".
d585 3
a587 2
The default user to run commands as if the \f(CW-u\fR flag is not specified
on the command line.  This defaults to \*(L"root\*(R".
d589 1
d591 1
a591 1
Defaults to \*(L"notice\*(R".
d593 1
d595 1
a595 1
Defaults to \*(L"alert\*(R".
d597 6
a602 2
Path to the editor to be used by \fBvisudo\fR.  The default is the path
to vi on your system.
d604 1
a604 1
\fBStrings that can be used in a boolean context\fR:
d606 1
d610 1
d612 1
a612 1
disable syslog logging).  Defaults to \*(L"local2\*(R".
d614 1
d618 2
a619 1
Flags to use when invoking mailer. Defaults to \f(CW-t\fR.
d621 4
a624 1
Address to send warning and error mail to.  Defaults to \*(L"root\*(R".
d626 1
a628 5
.Ip "secure_path" 12
Path used for every command run from \fBsudo\fR.  If you don't trust the
people running \fBsudo\fR to have a sane \f(CWPATH\fR environment variable you may
want to use this.  Another use is if you want to have the \*(L"root path\*(R"
be separate from the \*(L"user path.\*(R"  This is not set by default.
d630 20
a649 2
This option controls when a password will be required when a
user runs \fBsudo\fR with \fB\-v\fR.  It has the following possible values:
d651 2
a652 20
.Vb 3
\&    all         All the user's I<sudoers> entries for the
\&                current host must have the C<NOPASSWD>
\&                flag set to avoid entering a password.
.Ve
.Vb 4
\&    any         At least one of the user's I<sudoers> entries
\&                for the current host must have the
\&                C<NOPASSWD> flag set to avoid entering a
\&                password.
.Ve
.Vb 2
\&    never       The user need never enter a password to use
\&                the B<-v> flag.
.Ve
.Vb 2
\&    always      The user must always enter a password to use
\&                the B<-v> flag.
.Ve
The default value is `all\*(R'.
d654 1
d657 17
d675 33
a707 20
.Vb 3
\&    all         All the user's I<sudoers> entries for the
\&                current host must have the C<NOPASSWD>
\&                flag set to avoid entering a password.
.Ve
.Vb 4
\&    any         At least one of the user's I<sudoers> entries
\&                for the current host must have the
\&                C<NOPASSWD> flag set to avoid entering a
\&                password.
.Ve
.Vb 2
\&    never       The user need never enter a password to use
\&                the B<-l> flag.
.Ve
.Vb 2
\&    always      The user must always enter a password to use
\&                the B<-l> flag.
.Ve
The default value is `any\*(R'.
d712 1
a712 1
\fBlocal3\fR, \fBlocal4\fR, \fBlocal5\fR, \fBlocal6\fR, and \fBlocal7\fR.  The following
d714 1
a714 1
\fBerr\fR, \fBinfo\fR, \fBnotice\fR, and \fBwarning\fR.
d716 1
a716 1
.PP
d718 1
a718 1
\& User_Spec ::= User_list Host_List '=' User_List Cmnd_Spec_List \e
d737 2
a738 1
A \f(CWRunas_Spec\fR is simply a \f(CWRunas_List\fR (as defined above)
d740 2
a741 2
\f(CWRunas_Spec\fR in the user specification, a default \f(CWRunas_Spec\fR
of \fBroot\fR will be used.  A \f(CWRunas_Spec\fR sets the default for
d748 1
a748 1
\fI/usr/bin/lprm\fR -- but only as \fBoperator\fR.  E.g.,
d753 1
a753 1
It is also possible to override a \f(CWRunas_Spec\fR later on in an
d762 1
d765 3
a767 3
\f(CWNOPASSWD\fR tag.  Like a \f(CWRunas_Spec\fR, the \f(CWNOPASSWD\fR tag sets
a default for the commands that follow it in the \f(CWCmnd_Spec_List\fR.
Conversely, the \f(CWPASSWD\fR tag can be used to reverse things.
d774 1
a774 1
\fI/usr/bin/lprm\fR as root on the machine rushmore as \fBroot\fR without
d781 1
a781 1
Note, however, that the \f(CWPASSWD\fR tag has no effect on users who are
d784 1
a784 1
By default, if the \f(CWNOPASSWD\fR tag is applied to any of the entries
d786 2
a787 2
\f(CWsudo -l\fR without a password.  Additionally, a user may only run
\f(CWsudo -v\fR without a password if the \f(CWNOPASSWD\fR tag is present
d791 2
a792 1
\fBsudo\fR allows shell-style \fIwildcards\fR to be used in pathnames
d794 1
a794 1
matching is done via the \fB\s-1POSIX\s0\fR \f(CWfnmatch(3)\fR routine.  Note that
d796 2
a797 1
.Ip "\f(CW*\fR" 8
d799 2
a800 1
.Ip "\f(CW?\fR" 8
d802 2
a803 1
.Ip "\f(CW[...]\fR" 8
d805 2
a806 1
.Ip "\f(CW[!...]\fR" 8
d808 2
a809 1
.Ip "\f(CW\ex\fR" 8
d821 1
a821 1
match \f(CW/usr/bin/who\fR but not \f(CW/usr/bin/X11/xterm\fR.
d823 1
d825 5
a829 3
.Ip \f(CW""\fR 8
If the empty string \f(CW""\fR is the only command line argument in the
\fIsudoers\fR entry it means that command is not allowed to be run
d832 1
d841 1
a841 1
use a \f(CWCmnd_Alias\fR, \f(CWUser_Alias\fR, \f(CWRunas_Alias\fR, or \f(CWHost_Alias\fR.
d847 4
a850 4
An exclamation point (\*(R'!') can be used as a logical \fInot\fR operator
both in an \fIalias\fR and in front of a \f(CWCmnd\fR.  This allows one to
exclude certain values.  Note, however, that using a \f(CW!\fR in
conjunction with the built in \f(CWALL\fR alias to allow a user to
d852 1
a852 1
\s-1NOTES\s0 below).
d854 1
a854 1
Long lines can be continued with a backslash (\*(R'\e') as the last
d858 1
a858 1
characters in a \fIUser Specification\fR ('=\*(R', \*(L':\*(R', \*(L'(\*(R', \*(L')') is optional.
d860 1
a860 1
The following characters must be escaped with a backslash (\*(R'\e') when
d862 1
a862 1
\&'@@\*(R', \*(L'!\*(R', \*(L'=\*(R', \*(L':\*(R', \*(L',\*(R', \*(L'(\*(R', \*(L')\*(R', \*(L'\e\*(R'.
d864 1
d905 1
a905 1
\fBsudo\fR to log via \fIsyslog\fR\|(3) using the \fIauth\fR facility in all cases.
d908 1
a908 1
machines in the \fISERVERS\fR \f(CWHost_Alias\fR, we keep an additional
d913 1
a913 1
\& # Override builtin defaults
d940 1
a940 1
(since the entry lacks the \f(CWNOPASSWD\fR tag).
d945 5
a949 5
The user \fBjack\fR may run any command on the machines in the \fICSNETS\fR alias
(the networks \f(CW128.138.243.0\fR, \f(CW128.138.204.0\fR, and \f(CW128.138.242.0\fR).
Of those networks, only <128.138.204.0> has an explicit netmask (in
CIDR notation) indicating it is a class C network.  For the other
networks in \fICSNETS\fR, the local machine's netmask will be used
d955 2
a956 2
The user \fBlisa\fR may run any command on any host in the \fICUNETS\fR alias
(the class B network \f(CW128.138.0.0\fR).
d976 1
a976 1
root on the \fIHPPA\fR machines.  Note that this assumes \fIpasswd\fR\|(1)
d982 2
a983 2
The user \fBbob\fR may run anything on the \fISPARC\fR and \fISGI\fR machines
as any user listed in the \fIOP\fR \f(CWRunas_Alias\fR (\fBroot\fR and \fBoperator\fR).
d989 1
a989 1
\fBSudo\fR knows that \*(L"biglab\*(R" is a netgroup due to the \*(L'+\*(R' prefix.
d1001 1
a1001 1
The user \fBfred\fR can run commands as any user in the \fIDB\fR \f(CWRunas_Alias\fR
d1007 1
a1007 1
On the \fIALPHA\fR machines, user \fBjohn\fR may su to anyone except root
d1014 1
a1014 1
in the \fISERVERS\fR \f(CWHost_Alias\fR (master, mail, www and ns).
d1019 1
a1019 1
For any machine in the \fISERVERS\fR \f(CWHost_Alias\fR, \fBjill\fR may run
d1021 1
a1021 1
belonging to the \fISU\fR and \fISHELLS\fR \f(CWCmnd_Aliases\fR.
d1038 1
a1038 1
On the host www, any user in the \fIWEBMASTERS\fR \f(CWUser_Alias\fR (will,
d1046 2
a1047 2
Any user may mount or unmount a CD\-ROM on the machines in the CDROM
\f(CWHost_Alias\fR (orion, perseus, hercules) without entering a password.
d1051 3
a1053 2
It is generally not effective to \*(L"subtract\*(R" commands from \f(CWALL\fR
using the \*(L'!\*(R' operator.  A user can trivially circumvent this
d1061 1
a1061 1
\fISU\fR or \fISHELLS\fR since he can simply copy those commands to a
d1066 1
d1075 2
a1076 2
as returned by the \f(CWhostname\fR command or use the \fIfqdn\fR option in
\fIsudoers\fR.
d1078 1
a1078 1
.PP
a1084 144
\fIsudo\fR\|(8), \fIvisudo\fR\|(8), \fIsu\fR\|(1), \fIfnmatch\fR\|(3).

.rn }` ''
.IX Title "sudoers 5"
.IX Name "sudoers - list of which users may execute what"

.IX Header "NAME"

.IX Header "DESCRIPTION"

.IX Subsection "Quick guide to \s-1EBNF\s0"

.IX Item "\f(CW?\fR"

.IX Item "\f(CW*\fR"

.IX Item "\f(CW+\fR"

.IX Subsection "Aliases"

.IX Subsection "Defaults"

.IX Item "long_otp_prompt"

.IX Item "ignore_dot"

.IX Item "mail_always"

.IX Item "mail_no_user"

.IX Item "mail_no_host"

.IX Item "mail_no_perms"

.IX Item "tty_tickets"

.IX Item "lecture"

.IX Item "authenticate"

.IX Item "root_sudo"

.IX Item "log_host"

.IX Item "log_year"

.IX Item "shell_noargs"

.IX Item "set_home"

.IX Item "path_info"

.IX Item "fqdn"

.IX Item "insults"

.IX Item "requiretty"

.IX Item "env_editor"

.IX Item "rootpw"

.IX Item "runaspw"

.IX Item "targetpw"

.IX Item "set_logname"

.IX Item "passwd_tries"

.IX Item "loglinelen"

.IX Item "timestamp_timeout"

.IX Item "passwd_timeout"

.IX Item "umask"

.IX Item "mailsub"

.IX Item "badpass_message"

.IX Item "timestampdir"

.IX Item "passprompt"

.IX Item "runas_default"

.IX Item "syslog_goodpri"

.IX Item "syslog_badpri"

.IX Item "editor"

.IX Item "logfile"

.IX Item "syslog"

.IX Item "mailerpath"

.IX Item "mailerflags"

.IX Item "mailto"

.IX Item "exempt_group"

.IX Item "secure_path"

.IX Item "verifypw"

.IX Item "listpw"

.IX Subsection "User Specification"

.IX Subsection "Runas_Spec"

.IX Subsection "\s-1NOPASSWD\s0 and \s-1PASSWD\s0"

.IX Subsection "Wildcards (aka meta characters):"

.IX Item "\f(CW*\fR"

.IX Item "\f(CW?\fR"

.IX Item "\f(CW[...]\fR"

.IX Item "\f(CW[!...]\fR"

.IX Item "\f(CW\ex\fR"

.IX Subsection "Exceptions to wildcard rules:"

.IX Item \f(CW""\fR

.IX Subsection "Other special characters and reserved words:"

.IX Header "EXAMPLES"

.IX Header "SECURITY NOTES"

.IX Header "CAVEATS"

.IX Header "FILES"

d1086 1
a1086 1

@


1.8.2.1
log
@update to sudo 1.6.5p1
@
text
@d1 19
a19 6
.\" Automatically generated by Pod::Man version 1.15
.\" Wed Jan 16 16:36:10 2002
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
d27 1
a27 1
.de Sp \" Vertical space (when we can't use .PP)
d31 1
a31 1
.de Ip \" List item
d37 1
a37 1
.de Vb \" Begin verbatim text
d42 1
a42 1
.de Ve \" End verbatim text
d47 6
a52 6
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
a53 1
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
d55 20
a74 8
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` 
.    ds C' 
d77 15
a91 4
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
d93 12
a104 8
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
d106 2
a107 2
.    nr % 0
.    rr F
d109 3
a111 4
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
d113 12
a124 3
.\"
.\" Accent mark definitions (@@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
d126 1
a126 1
.    \" fudge factors for nroff and troff
d128 5
a132 5
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
d135 5
a139 5
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
d141 1
a141 1
.    \" simple accents for nroff and troff
d143 9
a151 6
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
d154 9
a162 6
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
d164 1
a164 1
.    \" troff and (daisy-wheel) nroff accents
d167 4
d178 3
a180 1
.    \" corrections for vroff
d183 1
a183 1
.    \" for low resolution devices (crt and lpr)
d186 15
a200 9
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
a202 5
.\" ======================================================================
.\"
.IX Title "sudoers 5"
.TH sudoers 5 "1.6.5" "January 16, 2002" "MAINTENANCE COMMANDS"
.UC
a205 1
.IX Header "DESCRIPTION"
d209 2
a210 2
will be described below in Extended Backus-Naur Form (\s-1EBNF\s0).
Don't despair if you don't know what \s-1EBNF\s0 is; it is fairly
d213 1
a213 2
.IX Subsection "Quick guide to EBNF"
\&\s-1EBNF\s0 is a concise and exact way of describing the grammar of a language.
d224 1
a224 2
.Ip "\f(CW\*(C`?\*(C'\fR" 8
.IX Item "?"
d227 1
a227 2
.Ip "\f(CW\*(C`*\*(C'\fR" 8
.IX Item "*"
d230 1
a230 2
.Ip "\f(CW\*(C`+\*(C'\fR" 8
.IX Item "+"
d238 2
a239 3
.IX Subsection "Aliases"
There are four kinds of aliases: \f(CW\*(C`User_Alias\*(C'\fR, \f(CW\*(C`Runas_Alias\*(C'\fR,
\&\f(CW\*(C`Host_Alias\*(C'\fR and \f(CW\*(C`Cmnd_Alias\*(C'\fR.
d242 4
a245 4
\& Alias ::= 'User_Alias'  User_Alias (':' User_Alias)* |
\&           'Runas_Alias' Runas_Alias (':' Runas_Alias)* |
\&           'Host_Alias'  Host_Alias (':' Host_Alias)* |
\&           'Cmnd_Alias'  Cmnd_Alias (':' Cmnd_Alias)*
d251 1
a251 1
\& Runas_Alias ::= NAME '=' Runas_List
d267 3
a269 3
where \fIAlias_Type\fR is one of \f(CW\*(C`User_Alias\*(C'\fR, \f(CW\*(C`Runas_Alias\*(C'\fR, \f(CW\*(C`Host_Alias\*(C'\fR,
or \f(CW\*(C`Cmnd_Alias\*(C'\fR.  A \f(CW\*(C`NAME\*(C'\fR is a string of uppercase letters, numbers,
and the underscore characters ('_').  A \f(CW\*(C`NAME\*(C'\fR \fBmust\fR start with an
d282 1
a282 1
.Vb 4
d284 1
d289 5
a293 5
A \f(CW\*(C`User_List\*(C'\fR is made up of one or more usernames, uids
(prefixed with '#'), System groups (prefixed with '%'),
netgroups (prefixed with '+') and other aliases.  Each list
item may be prefixed with one or more '!' operators.  An odd number
of '!' operators negate the value of the item; an even number
d307 3
a309 3
A \f(CW\*(C`Runas_List\*(C'\fR is similar to a \f(CW\*(C`User_List\*(C'\fR except that it can
also contain uids (prefixed with '#') and instead of \f(CW\*(C`User_Alias\*(C'\fRes
it can contain \f(CW\*(C`Runas_Alias\*(C'\fRes.
d322 3
a324 3
A \f(CW\*(C`Host_List\*(C'\fR is made up of one or more hostnames, \s-1IP\s0 addresses,
network numbers, netgroups (prefixed with '+') and other aliases.
Again, the value of an item may be negated with the '!' operator.
d329 2
a330 2
may include shell-style wildcards (see `Wildcards' section below),
but unless the \f(CW\*(C`hostname\*(C'\fR command on your machine returns the fully
d348 1
a348 1
A \f(CW\*(C`Cmnd_List\*(C'\fR is a list of one or more commandnames, directories, and other
d350 1
a350 1
shell-style wildcards (see `Wildcards' section below).  A simple
d352 2
a353 2
wishes.  However, you may also specify command line arguments (including
wildcards).  Alternately, you can specify \f(CW\*(C`""\*(C'\fR to indicate that the command
d355 2
a356 2
fully qualified pathname ending in a '/'.  When you specify a directory
in a \f(CW\*(C`Cmnd_List\*(C'\fR, the user will be able to run any file within that directory
d359 2
a360 2
If a \f(CW\*(C`Cmnd\*(C'\fR has associated command line arguments, then the arguments
in the \f(CW\*(C`Cmnd\*(C'\fR must match exactly those given by the user on the command line
d362 2
a363 2
characters must be escaped with a '\e' if they are used in command
arguments: ',', ':', '=', '\e'.
a364 1
.IX Subsection "Defaults"
d366 1
a366 1
values at runtime via one or more \f(CW\*(C`Default_Entry\*(C'\fR lines.  These
d380 1
a380 1
.Vb 4
a381 2
\&               Parameter '+=' Value ||
\&               Parameter '-=' Value ||
d384 6
a389 15
Parameters may be \fBflags\fR, \fBinteger\fR values, \fBstrings\fR, or \fBlists\fR.
Flags are implicitly boolean and can be turned off via the '!'
operator.  Some integer, string and list parameters may also be
used in a boolean context to disable them.  Values may be enclosed
in double quotes (\f(CW\*(C`"\*(C'\fR) when they contain multiple words.  Special
characters may be escaped with a backslash (\f(CW\*(C`\e\*(C'\fR).
.PP
Lists have two additional assignment operators, \f(CW\*(C`+=\*(C'\fR and \f(CW\*(C`\-=\*(C'\fR.
These operators are used to add to and delete from a list respectively.
It is not an error to use the \f(CW\*(C`\-=\*(C'\fR operator to remove an element
that does not exist in a list.
.PP
Note that since the \fIsudoers\fR file is parsed in order the best place
to put the Defaults section is after the Host, User, and Cmnd aliases
but before the user specifications.
d391 1
a391 1
\&\fBFlags\fR:
a392 1
.IX Item "long_otp_prompt"
d396 1
a396 2
some people find it more convenient.  This flag is \fIoff\fR
by default.
d398 2
a399 4
.IX Item "ignore_dot"
If set, \fBsudo\fR will ignore '.' or '' (current dir) in the \f(CW\*(C`PATH\*(C'\fR
environment variable; the \f(CW\*(C`PATH\*(C'\fR itself is not modified.  This
flag is \fIoff\fR by default.
a400 1
.IX Item "mail_always"
d402 1
a402 5
This flag is \fIoff\fR by default.
.Ip "mail_badpass" 12
.IX Item "mail_badpass"
Send mail to the \fImailto\fR user if the user running sudo does not
enter the correct password.  This flag is \fIoff\fR by default.
a403 1
.IX Item "mail_no_user"
d405 1
a405 2
user is not in the \fIsudoers\fR file.  This flag is \fIon\fR
by default.
a406 1
.IX Item "mail_no_host"
d409 1
a409 1
commands on the current host.  This flag is \fIoff\fR by default.
a410 1
.IX Item "mail_no_perms"
d413 1
a413 2
listed in their \fIsudoers\fR file entry.  This flag is \fIoff\fR
by default.
a414 1
.IX Item "tty_tickets"
d416 1
a416 1
\&\fBsudo\fR uses a directory in the ticket dir with the same name as
d419 1
a419 1
This flag is \fIoff\fR by default.
a420 1
.IX Item "lecture"
d422 1
a422 1
runs \fBsudo\fR.  This flag is \fIon\fR by default.
a423 1
.IX Item "authenticate"
d426 2
a427 2
may be overridden via the \f(CW\*(C`PASSWD\*(C'\fR and \f(CW\*(C`NOPASSWD\*(C'\fR tags.
This flag is \fIon\fR by default.
a428 1
.IX Item "root_sudo"
d431 2
a432 2
like \f(CW\*(C`"sudo sudo /bin/sh"\*(C'\fR.
This flag is \fIon\fR by default.
a433 1
.IX Item "log_host"
d435 1
a435 1
This flag is \fIoff\fR by default.
a436 1
.IX Item "log_year"
d438 1
a438 1
This flag is \fIoff\fR by default.
a439 1
.IX Item "shell_noargs"
d441 2
a442 2
\&\fB\-s\fR flag had been given.  That is, it runs a shell as root (the
shell is determined by the \f(CW\*(C`SHELL\*(C'\fR environment variable if it is
d444 1
a444 1
/etc/passwd entry if not).  This flag is \fIoff\fR by default.
d446 1
a446 2
.IX Item "set_home"
If set and \fBsudo\fR is invoked with the \fB\-s\fR flag the \f(CW\*(C`HOME\*(C'\fR
d448 2
a449 8
user (which is root unless the \fB\-u\fR option is used).  This effectively
makes the \fB\-s\fR flag imply \fB\-H\fR.  This flag is \fIoff\fR by default.
.Ip "always_set_home" 12
.IX Item "always_set_home"
If set, \fBsudo\fR will set the \f(CW\*(C`HOME\*(C'\fR environment variable to the home
directory of the target user (which is root unless the \fB\-u\fR option is used).
This effectively means that the \fB\-H\fR flag is always implied.
This flag is \fIoff\fR by default.
a450 1
.IX Item "path_info"
d452 6
a457 14
found in their \f(CW\*(C`PATH\*(C'\fR environment variable.  Some sites may wish
to disable this as it could be used to gather information on the
location of executables that the normal user does not have access
to.  The disadvantage is that if the executable is simply not in
the user's \f(CW\*(C`PATH\*(C'\fR, \fBsudo\fR will tell the user that they are not
allowed to run it, which can be confusing.  This flag is \fIoff\fR by
default.
.Ip "preserve_groups" 12
.IX Item "preserve_groups"
By default \fBsudo\fR will initialize the group vector to the list of
groups the target user is in.  When \fIpreserve_groups\fR is set, the
user's existing group vector is left unaltered.  The real and
effective group IDs, however, are still set to match the target
user.  This flag is \fIoff\fR by default.
a458 1
.IX Item "fqdn"
d460 1
a460 1
\&\fIsudoers\fR file.  I.e.: instead of myhost you would use myhost.mydomain.edu.
d466 1
a466 1
you may not use a host alias (\f(CW\*(C`CNAME\*(C'\fR entry) due to performance
d468 1
a468 1
\&\s-1DNS\s0.  If your machine's hostname (as returned by the \f(CW\*(C`hostname\*(C'\fR
d470 1
a470 1
\&\fIfqdn\fR.  This flag is \fIoff\fR by default.
a471 1
.IX Item "insults"
d473 1
a473 1
password.  This flag is \fIon\fR by default.
a474 1
.IX Item "requiretty"
d476 2
a477 2
tty.  This will disallow things like \f(CW\*(C`"rsh somehost sudo ls"\*(C'\fR since
\&\fIrsh\fR\|(1) does not allocate a tty.  Because it is not possible to turn
d480 1
a480 1
flag is \fIoff\fR by default.
d482 4
a485 9
.IX Item "env_editor"
If set, \fBvisudo\fR will use the value of the \s-1EDITOR\s0 or \s-1VISUAL\s0
environment variables before falling back on the default editor list.
Note that this may create a security hole as it allows the user to
run any arbitrary command as root without logging.  A safer alternative
is to place a colon-separated list of editors in the \f(CW\*(C`editor\*(C'\fR
variable.  \fBvisudo\fR will then only use the \s-1EDITOR\s0 or \s-1VISUAL\s0 if
they match a value specified in \f(CW\*(C`editor\*(C'\fR.  This flag is \f(CW\*(C`on\*(C'\fR by
default.
a486 1
.IX Item "rootpw"
d488 1
a488 1
of the invoking user.  This flag is \fIoff\fR by default.
a489 1
.IX Item "runaspw"
d491 2
a492 2
\&\fIrunas_default\fR option (defaults to \f(CW\*(C`root\*(C'\fR) instead of the password
of the invoking user.  This flag is \fIoff\fR by default.
a493 1
.IX Item "targetpw"
d495 2
a496 2
the \fB\-u\fR flag (defaults to \f(CW\*(C`root\*(C'\fR) instead of the password of the
invoking user.  This flag is \fIoff\fR by default.
d498 2
a499 3
.IX Item "set_logname"
Normally, \fBsudo\fR will set the \f(CW\*(C`LOGNAME\*(C'\fR and \f(CW\*(C`USER\*(C'\fR environment variables
to the name of the target user (usually root unless the \fB\-u\fR flag is given).
d501 1
a501 1
use \f(CW\*(C`LOGNAME\*(C'\fR to determine the real identity of the user, it may be desirable
a502 28
.Ip "stay_setuid" 12
.IX Item "stay_setuid"
Normally, when \fBsudo\fR executes a command the real and effective
UIDs are set to the target user (root by default).  This option
changes that behavior such that the real \s-1UID\s0 is left as the invoking
user's \s-1UID\s0.  In other words, this makes \fBsudo\fR act as a setuid
wrapper.  This can be useful on systems that disable some potentially
dangerous functionality when a program is run setuid.  Note, however,
that this means that sudo will run with the real uid of the invoking
user which may allow that user to kill \fBsudo\fR before it can log a
failure, depending on how your \s-1OS\s0 defines the interaction between
signals and setuid processes.
.Ip "env_reset" 12
.IX Item "env_reset"
If set, \fBsudo\fR will reset the environment to only contain the
following variables: \f(CW\*(C`HOME\*(C'\fR, \f(CW\*(C`LOGNAME\*(C'\fR, \f(CW\*(C`PATH\*(C'\fR, \f(CW\*(C`SHELL\*(C'\fR, \f(CW\*(C`TERM\*(C'\fR,
and \f(CW\*(C`USER\*(C'\fR (in addition to the \f(CW\*(C`SUDO_*\*(C'\fR variables).
Of these, only \f(CW\*(C`TERM\*(C'\fR is copied unaltered from the old environment.
The other variables are set to default values (possibly modified
by the value of the \fIset_logname\fR option).  If \fBsudo\fR was compiled
with the \f(CW\*(C`SECURE_PATH\*(C'\fR option, its value will be used for the \f(CW\*(C`PATH\*(C'\fR
environment variable.
Other variables may be preserved with the \fIenv_keep\fR option.
.Ip "use_loginclass" 12
.IX Item "use_loginclass"
If set, \fBsudo\fR will apply the defaults specified for the target user's
login class if one exists.  Only available if \fBsudo\fR is configured with
the \-\-with-logincap option.  This flag is \fIoff\fR by default.
d504 1
a504 1
\&\fBIntegers\fR:
a505 1
.IX Item "passwd_tries"
d507 1
a507 1
\&\fBsudo\fR logs the failure and exits.  The default is \f(CW\*(C`3\*(C'\fR.
d509 1
a509 1
\&\fBIntegers that can be used in a boolean context\fR:
a510 1
.IX Item "loglinelen"
d514 1
a514 1
\&\f(CW\*(C`80\*(C'\fR (use 0 or negate the option to disable word wrap).
d516 2
a517 7
.IX Item "timestamp_timeout"
Number of minutes that can elapse before \fBsudo\fR will ask for a
passwd again.  The default is \f(CW\*(C`5\*(C'\fR.  Set this to \f(CW\*(C`0\*(C'\fR to always
prompt for a password.
If set to a value less than \f(CW\*(C`0\*(C'\fR the user's timestamp will never
expire.  This can be used to allow users to create or delete their
own timestamps via \f(CW\*(C`sudo \-v\*(C'\fR and \f(CW\*(C`sudo \-k\*(C'\fR respectively.
a518 1
.IX Item "passwd_timeout"
d520 1
a520 1
The default is \f(CW\*(C`5\*(C'\fR, set this to \f(CW\*(C`0\*(C'\fR for no password timeout.
d522 2
a523 3
.IX Item "umask"
Umask to use when running the command.  Negate this option or set
it to 0777 to preserve the user's umask.  The default is \f(CW\*(C`0022\*(C'\fR.
d525 1
a525 1
\&\fBStrings\fR:
d527 1
a527 2
.IX Item "mailsub"
Subject of the mail sent to the \fImailto\fR user. The escape \f(CW\*(C`%h\*(C'\fR
d529 1
a529 1
Default is \f(CW\*(C`*** SECURITY information for %h ***\*(C'\fR.
a530 1
.IX Item "badpass_message"
d532 1
a532 1
The default is \f(CW\*(C`Sorry, try again.\*(C'\fR unless insults are enabled.
a533 1
.IX Item "timestampdir"
d535 1
a535 1
The default is \fI/var/run/sudo\fR.
a536 1
.IX Item "passprompt"
d538 1
a538 1
via the \fB\-p\fR option or the \f(CW\*(C`SUDO_PROMPT\*(C'\fR environment variable. Supports
d540 1
a540 1
to the local hostname.  The default value is \f(CW\*(C`Password:\*(C'\fR.
d542 2
a543 3
.IX Item "runas_default"
The default user to run commands as if the \fB\-u\fR flag is not specified
on the command line.  This defaults to \f(CW\*(C`root\*(C'\fR.
a544 1
.IX Item "syslog_goodpri"
d546 1
a546 1
Defaults to \f(CW\*(C`notice\*(C'\fR.
a547 1
.IX Item "syslog_badpri"
d549 1
a549 1
Defaults to \f(CW\*(C`alert\*(C'\fR.
d551 2
a552 6
.IX Item "editor"
A colon (':') separated list of editors allowed to be used with
\&\fBvisudo\fR.  \fBvisudo\fR will choose the editor that matches the user's
\&\s-1USER\s0 environment variable if possible, or the first editor in the
list that exists and is executable.  The default is the path to vi
on your system.
d554 1
a554 1
\&\fBStrings that can be used in a boolean context\fR:
a555 1
.IX Item "logfile"
a558 1
.IX Item "syslog"
d560 1
a560 1
disable syslog logging).  Defaults to \f(CW\*(C`authpriv\*(C'\fR.
a561 1
.IX Item "mailerpath"
d565 1
a565 2
.IX Item "mailerflags"
Flags to use when invoking mailer. Defaults to \fB\-t\fR.
d567 1
a567 4
.IX Item "mailto"
Address to send warning and error mail to.  The address should
be enclosed in double quotes (\f(CW\*(C`"\*(C'\fR) to protect against sudo
interpreting the \f(CW\*(C`@@\*(C'\fR sign.  Defaults to \f(CW\*(C`root\*(C'\fR.
a568 1
.IX Item "exempt_group"
d571 5
d577 2
a578 20
.IX Item "verifypw"
This option controls when a password will be required when a user runs
\&\fBsudo\fR with the \fB\-v\fR flag.  It has the following possible values:
.RS 12
.Ip "all" 8
.IX Item "all"
All the user's \fIsudoers\fR entries for the current host must have
the \f(CW\*(C`NOPASSWD\*(C'\fR flag set to avoid entering a password.
.Ip "any" 8
.IX Item "any"
At least one of the user's \fIsudoers\fR entries for the current host
must have the \f(CW\*(C`NOPASSWD\*(C'\fR flag set to avoid entering a password.
.Ip "never" 8
.IX Item "never"
The user need never enter a password to use the \fB\-v\fR flag.
.Ip "always" 8
.IX Item "always"
The user must always enter a password to use the \fB\-v\fR flag.
.RE
.RS 12
d580 20
a599 2
The default value is `all'.
.RE
a600 1
.IX Item "listpw"
a602 17
.RS 12
.Ip "all" 8
.IX Item "all"
All the user's \fIsudoers\fR entries for the current host must have
the \f(CW\*(C`NOPASSWD\*(C'\fR flag set to avoid entering a password.
.Ip "any" 8
.IX Item "any"
At least one of the user's \fIsudoers\fR entries for the current host
must have the \f(CW\*(C`NOPASSWD\*(C'\fR flag set to avoid entering a password.
.Ip "never" 8
.IX Item "never"
The user need never enter a password to use the \fB\-l\fR flag.
.Ip "always" 8
.IX Item "always"
The user must always enter a password to use the \fB\-l\fR flag.
.RE
.RS 12
d604 20
a623 33
The default value is `any'.
.RE
.PP
\&\fBLists that can be used in a boolean context\fR:
.Ip "env_check" 12
.IX Item "env_check"
Environment variables to be removed from the user's environment if
the variable's value contains \f(CW\*(C`%\*(C'\fR or \f(CW\*(C`/\*(C'\fR characters.  This can
be used to guard against printf-style format vulnerabilties in
poorly-written programs.  The argument may be a double-quoted,
space-separated list or a single value without double-quotes.  The
list can be replaced, added to, deleted from, or disabled by using
the \f(CW\*(C`=\*(C'\fR, \f(CW\*(C`+=\*(C'\fR, \f(CW\*(C`\-=\*(C'\fR, and \f(CW\*(C`!\*(C'\fR operators respectively.  The default
list of environment variable to check is printed when \fBsudo\fR is
run by root with the \fI\-V\fR option.
.Ip "env_delete" 12
.IX Item "env_delete"
Environment variables to be removed from the user's environment.
The argument may be a double-quoted, space-separated list or a
single value without double-quotes.  The list can be replaced, added
to, deleted from, or disabled by using the \f(CW\*(C`=\*(C'\fR, \f(CW\*(C`+=\*(C'\fR, \f(CW\*(C`\-=\*(C'\fR, and
\&\f(CW\*(C`!\*(C'\fR operators respectively.  The default list of environment
variable to remove is printed when \fBsudo\fR is run by root with the
\&\fI\-V\fR option.
.Ip "env_keep" 12
.IX Item "env_keep"
Environment variables to be preserved in the user's environment
when the \fIenv_reset\fR option is in effect.  This allows fine-grained
control over the environment \fBsudo\fR\-spawned processes will receive.
The argument may be a double-quoted, space-separated list or a
single value without double-quotes.  The list can be replaced, added
to, deleted from, or disabled by using the \f(CW\*(C`=\*(C'\fR, \f(CW\*(C`+=\*(C'\fR, \f(CW\*(C`\-=\*(C'\fR, and
\&\f(CW\*(C`!\*(C'\fR operators respectively.  This list has no default members.
d628 1
a628 1
\&\fBlocal3\fR, \fBlocal4\fR, \fBlocal5\fR, \fBlocal6\fR, and \fBlocal7\fR.  The following
d630 1
a630 1
\&\fBerr\fR, \fBinfo\fR, \fBnotice\fR, and \fBwarning\fR.
d632 1
a632 1
.IX Subsection "User Specification"
d634 1
a634 1
\& User_Spec ::= User_list Host_List '=' Cmnd_Spec_List \e
d653 1
a653 2
.IX Subsection "Runas_Spec"
A \f(CW\*(C`Runas_Spec\*(C'\fR is simply a \f(CW\*(C`Runas_List\*(C'\fR (as defined above)
d655 2
a656 2
\&\f(CW\*(C`Runas_Spec\*(C'\fR in the user specification, a default \f(CW\*(C`Runas_Spec\*(C'\fR
of \fBroot\fR will be used.  A \f(CW\*(C`Runas_Spec\*(C'\fR sets the default for
d663 1
a663 1
\&\fI/usr/bin/lprm\fR \*(-- but only as \fBoperator\fR.  E.g.,
d668 1
a668 1
It is also possible to override a \f(CW\*(C`Runas_Spec\*(C'\fR later on in an
a676 1
.IX Subsection "NOPASSWD and PASSWD"
d679 3
a681 3
\&\f(CW\*(C`NOPASSWD\*(C'\fR tag.  Like a \f(CW\*(C`Runas_Spec\*(C'\fR, the \f(CW\*(C`NOPASSWD\*(C'\fR tag sets
a default for the commands that follow it in the \f(CW\*(C`Cmnd_Spec_List\*(C'\fR.
Conversely, the \f(CW\*(C`PASSWD\*(C'\fR tag can be used to reverse things.
d688 1
a688 1
\&\fI/usr/bin/lprm\fR as root on the machine rushmore as \fBroot\fR without
d695 1
a695 1
Note, however, that the \f(CW\*(C`PASSWD\*(C'\fR tag has no effect on users who are
d698 1
a698 1
By default, if the \f(CW\*(C`NOPASSWD\*(C'\fR tag is applied to any of the entries
d700 2
a701 2
\&\f(CW\*(C`sudo \-l\*(C'\fR without a password.  Additionally, a user may only run
\&\f(CW\*(C`sudo \-v\*(C'\fR without a password if the \f(CW\*(C`NOPASSWD\*(C'\fR tag is present
d705 1
a705 2
.IX Subsection "Wildcards (aka meta characters):"
\&\fBsudo\fR allows shell-style \fIwildcards\fR to be used in pathnames
d707 1
a707 1
matching is done via the \fB\s-1POSIX\s0\fR \f(CW\*(C`fnmatch(3)\*(C'\fR routine.  Note that
d709 1
a709 2
.Ip "\f(CW\*(C`*\*(C'\fR" 8
.IX Item "*"
d711 1
a711 2
.Ip "\f(CW\*(C`?\*(C'\fR" 8
.IX Item "?"
d713 1
a713 2
.Ip "\f(CW\*(C`[...]\*(C'\fR" 8
.IX Item "[...]"
d715 1
a715 2
.Ip "\f(CW\*(C`[!...]\*(C'\fR" 8
.IX Item "[!...]"
d717 1
a717 2
.Ip "\f(CW\*(C`\ex\*(C'\fR" 8
.IX Item "x"
d729 1
a729 1
match \f(CW\*(C`/usr/bin/who\*(C'\fR but not \f(CW\*(C`/usr/bin/X11/xterm\*(C'\fR.
a730 1
.IX Subsection "Exceptions to wildcard rules:"
d732 3
a734 5
.if n .Ip "\f(CW""""""""\fR" 8
.el .Ip "\f(CW``''\fR" 8
.IX Item """""
If the empty string \f(CW\*(C`""\*(C'\fR is the only command line argument in the
\&\fIsudoers\fR entry it means that command is not allowed to be run
a736 1
.IX Subsection "Other special characters and reserved words:"
d745 1
a745 1
use a \f(CW\*(C`Cmnd_Alias\*(C'\fR, \f(CW\*(C`User_Alias\*(C'\fR, \f(CW\*(C`Runas_Alias\*(C'\fR, or \f(CW\*(C`Host_Alias\*(C'\fR.
d751 4
a754 4
An exclamation point ('!') can be used as a logical \fInot\fR operator
both in an \fIalias\fR and in front of a \f(CW\*(C`Cmnd\*(C'\fR.  This allows one to
exclude certain values.  Note, however, that using a \f(CW\*(C`!\*(C'\fR in
conjunction with the built in \f(CW\*(C`ALL\*(C'\fR alias to allow a user to
d756 1
a756 1
\&\s-1NOTES\s0 below).
d758 1
a758 1
Long lines can be continued with a backslash ('\e') as the last
d762 1
a762 1
characters in a \fIUser Specification\fR ('=', ':', '(', ')') is optional.
d764 1
a764 1
The following characters must be escaped with a backslash ('\e') when
d766 1
a766 1
\&'@@', '!', '=', ':', ',', '(', ')', '\e'.
a767 1
.IX Header "EXAMPLES"
d808 1
a808 1
\&\fBsudo\fR to log via \fIsyslog\fR\|(3) using the \fIauth\fR facility in all cases.
d811 1
a811 1
machines in the \fI\s-1SERVERS\s0\fR \f(CW\*(C`Host_Alias\*(C'\fR, we keep an additional
d816 1
a816 1
\& # Override built in defaults
d843 1
a843 1
(since the entry lacks the \f(CW\*(C`NOPASSWD\*(C'\fR tag).
d848 5
a852 5
The user \fBjack\fR may run any command on the machines in the \fI\s-1CSNETS\s0\fR alias
(the networks \f(CW\*(C`128.138.243.0\*(C'\fR, \f(CW\*(C`128.138.204.0\*(C'\fR, and \f(CW\*(C`128.138.242.0\*(C'\fR).
Of those networks, only \f(CW\*(C`128.138.204.0\*(C'\fR has an explicit netmask (in
\&\s-1CIDR\s0 notation) indicating it is a class C network.  For the other
networks in \fI\s-1CSNETS\s0\fR, the local machine's netmask will be used
d858 2
a859 2
The user \fBlisa\fR may run any command on any host in the \fI\s-1CUNETS\s0\fR alias
(the class B network \f(CW\*(C`128.138.0.0\*(C'\fR).
d879 1
a879 1
root on the \fI\s-1HPPA\s0\fR machines.  Note that this assumes \fIpasswd\fR\|(1)
d885 2
a886 2
The user \fBbob\fR may run anything on the \fI\s-1SPARC\s0\fR and \fI\s-1SGI\s0\fR machines
as any user listed in the \fI\s-1OP\s0\fR \f(CW\*(C`Runas_Alias\*(C'\fR (\fBroot\fR and \fBoperator\fR).
d892 1
a892 1
\&\fBSudo\fR knows that \*(L"biglab\*(R" is a netgroup due to the '+' prefix.
d904 1
a904 1
The user \fBfred\fR can run commands as any user in the \fI\s-1DB\s0\fR \f(CW\*(C`Runas_Alias\*(C'\fR
d910 1
a910 1
On the \fI\s-1ALPHA\s0\fR machines, user \fBjohn\fR may su to anyone except root
d917 1
a917 1
in the \fI\s-1SERVERS\s0\fR \f(CW\*(C`Host_Alias\*(C'\fR (master, mail, www and ns).
d922 1
a922 1
For any machine in the \fI\s-1SERVERS\s0\fR \f(CW\*(C`Host_Alias\*(C'\fR, \fBjill\fR may run
d924 1
a924 1
belonging to the \fI\s-1SU\s0\fR and \fI\s-1SHELLS\s0\fR \f(CW\*(C`Cmnd_Aliases\*(C'\fR.
d941 1
a941 1
On the host www, any user in the \fI\s-1WEBMASTERS\s0\fR \f(CW\*(C`User_Alias\*(C'\fR (will,
d949 2
a950 2
Any user may mount or unmount a \s-1CD-ROM\s0 on the machines in the \s-1CDROM\s0
\&\f(CW\*(C`Host_Alias\*(C'\fR (orion, perseus, hercules) without entering a password.
d954 2
a955 3
.IX Header "SECURITY NOTES"
It is generally not effective to \*(L"subtract\*(R" commands from \f(CW\*(C`ALL\*(C'\fR
using the '!' operator.  A user can trivially circumvent this
d963 1
a963 1
\&\fI\s-1SU\s0\fR or \fI\s-1SHELLS\s0\fR since he can simply copy those commands to a
a967 1
.IX Header "CAVEATS"
d976 2
a977 2
as returned by the \f(CW\*(C`hostname\*(C'\fR command or use the \fIfqdn\fR option in
\&\fIsudoers\fR.
d979 1
a979 1
.IX Header "FILES"
d986 144
d1131 1
a1131 1
\&\fIrsh\fR\|(1), \fIsudo\fR\|(8), \fIvisudo\fR\|(8), \fIsu\fR\|(1), \fIfnmatch\fR\|(3).
@


1.7
log
@Typo and grammar fixes, one from PR/2058 (Dennis Schwarz); ok millert@@
@
text
@d2 1
a2 1
''' $RCSfile: sudoers.5,v $$Revision: 1.6 $$Date: 2001/01/09 18:15:31 $
d5 3
d271 1
a271 1
of the same type on a single line, joined by a semicolon (':').  E.g.,
@


1.6
log
@Typos: 'eg.' -> 'e.g.'
@
text
@d2 1
a2 1
''' $RCSfile: sudoers.5,v $$Revision: 1.5 $$Date: 2000/03/27 03:44:39 $
d5 3
d98 1
a98 1
.\"	in some meaninful fashion.
d203 1
a203 1
The \fIsudoers\fR file is composed two types of entries:
d207 2
a208 2
Don't despair if you don't know what EBNF is, it is fairly
simple and the definitions below are annotated.
d211 1
a211 1
Each \s-1EBNF\s0 definition is made up of \fIproduction rules\fR.  Eg.
d235 1
a235 1
There are four kinds of aliases: the \f(CWUser_Alias\fR, \f(CWRunas_Alias\fR,
d265 1
a265 1
or \f(CWCmnd_Alias\fR.  A \f(CWNAME\fR is a string of upper case letters, numbers,
d267 2
a268 2
upper case letter.  It is possible to put several alias definitions
of the same type on a single line, joined by a semicolon (':').  Eg.
d290 1
a290 1
of \*(L'!\*(R' operators negates the value of the item; an even number
d457 1
a457 1
\fIsudoers\fR file.  Ie: instead of myhost you would use myhost.mydomain.edu.
d514 1
a514 1
again.  The default is 5, set this to 0 to always prompt for a password.
d554 1
a554 1
turns on logging to a file, negating this option turns it off.
d564 1
a564 1
Address to send warning and erorr mail to.  Defaults to \*(L"root\*(R".
d575 1
a575 1
user runs \fBsudo\fR with the \fB\-v\fR.  It has the following possible values:
d646 1
a646 1
run as \fBroot\fR but this can be changed on a per-command basis.
d660 1
a660 1
\fI/usr/bin/lprm\fR -- but only as \fBoperator\fR.  Eg.
d692 1
a692 1
Note however, that the \f(CWPASSWD\fR tag has no effect on users who are
d758 1
a758 1
Whitespace between elements in a list as well as specicial syntactic
d948 1
a948 1
This is a bit tedious for users to type, so it is a prime candiate
@


1.6.2.1
log
@update to sudo 1.6.5p1
@
text
@d1 13
a13 6
.\" Automatically generated by Pod::Man version 1.15
.\" Wed Jan 16 16:36:10 2002
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
d21 1
a21 1
.de Sp \" Vertical space (when we can't use .PP)
d25 1
a25 1
.de Ip \" List item
d31 1
a31 1
.de Vb \" Begin verbatim text
d36 1
a36 1
.de Ve \" End verbatim text
d41 6
a46 6
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
a47 1
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
d49 20
a68 8
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` 
.    ds C' 
d71 15
a85 4
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
d87 12
a98 8
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
d100 2
a101 2
.    nr % 0
.    rr F
d103 3
a105 4
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
d107 12
a118 3
.\"
.\" Accent mark definitions (@@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
d120 1
a120 1
.    \" fudge factors for nroff and troff
d122 5
a126 5
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
d129 5
a133 5
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
d135 1
a135 1
.    \" simple accents for nroff and troff
d137 9
a145 6
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
d148 9
a156 6
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
d158 1
a158 1
.    \" troff and (daisy-wheel) nroff accents
d161 4
d172 3
a174 1
.    \" corrections for vroff
d177 1
a177 1
.    \" for low resolution devices (crt and lpr)
d180 15
a194 9
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
a196 5
.\" ======================================================================
.\"
.IX Title "sudoers 5"
.TH sudoers 5 "1.6.5" "January 16, 2002" "MAINTENANCE COMMANDS"
.UC
d200 1
a200 2
.IX Header "DESCRIPTION"
The \fIsudoers\fR file is composed of two types of entries:
d203 3
a205 3
will be described below in Extended Backus-Naur Form (\s-1EBNF\s0).
Don't despair if you don't know what \s-1EBNF\s0 is; it is fairly
simple, and the definitions below are annotated.
d207 2
a208 3
.IX Subsection "Quick guide to EBNF"
\&\s-1EBNF\s0 is a concise and exact way of describing the grammar of a language.
Each \s-1EBNF\s0 definition is made up of \fIproduction rules\fR.  E.g.,
d218 1
a218 2
.Ip "\f(CW\*(C`?\*(C'\fR" 8
.IX Item "?"
d221 1
a221 2
.Ip "\f(CW\*(C`*\*(C'\fR" 8
.IX Item "*"
d224 1
a224 2
.Ip "\f(CW\*(C`+\*(C'\fR" 8
.IX Item "+"
d232 2
a233 3
.IX Subsection "Aliases"
There are four kinds of aliases: \f(CW\*(C`User_Alias\*(C'\fR, \f(CW\*(C`Runas_Alias\*(C'\fR,
\&\f(CW\*(C`Host_Alias\*(C'\fR and \f(CW\*(C`Cmnd_Alias\*(C'\fR.
d236 4
a239 4
\& Alias ::= 'User_Alias'  User_Alias (':' User_Alias)* |
\&           'Runas_Alias' Runas_Alias (':' Runas_Alias)* |
\&           'Host_Alias'  Host_Alias (':' Host_Alias)* |
\&           'Cmnd_Alias'  Cmnd_Alias (':' Cmnd_Alias)*
d245 1
a245 1
\& Runas_Alias ::= NAME '=' Runas_List
d261 5
a265 5
where \fIAlias_Type\fR is one of \f(CW\*(C`User_Alias\*(C'\fR, \f(CW\*(C`Runas_Alias\*(C'\fR, \f(CW\*(C`Host_Alias\*(C'\fR,
or \f(CW\*(C`Cmnd_Alias\*(C'\fR.  A \f(CW\*(C`NAME\*(C'\fR is a string of uppercase letters, numbers,
and the underscore characters ('_').  A \f(CW\*(C`NAME\*(C'\fR \fBmust\fR start with an
uppercase letter.  It is possible to put several alias definitions
of the same type on a single line, joined by a colon (':').  E.g.,
d276 1
a276 1
.Vb 4
d278 1
d283 5
a287 5
A \f(CW\*(C`User_List\*(C'\fR is made up of one or more usernames, uids
(prefixed with '#'), System groups (prefixed with '%'),
netgroups (prefixed with '+') and other aliases.  Each list
item may be prefixed with one or more '!' operators.  An odd number
of '!' operators negate the value of the item; an even number
d301 3
a303 3
A \f(CW\*(C`Runas_List\*(C'\fR is similar to a \f(CW\*(C`User_List\*(C'\fR except that it can
also contain uids (prefixed with '#') and instead of \f(CW\*(C`User_Alias\*(C'\fRes
it can contain \f(CW\*(C`Runas_Alias\*(C'\fRes.
d316 3
a318 3
A \f(CW\*(C`Host_List\*(C'\fR is made up of one or more hostnames, \s-1IP\s0 addresses,
network numbers, netgroups (prefixed with '+') and other aliases.
Again, the value of an item may be negated with the '!' operator.
d323 2
a324 2
may include shell-style wildcards (see `Wildcards' section below),
but unless the \f(CW\*(C`hostname\*(C'\fR command on your machine returns the fully
d342 1
a342 1
A \f(CW\*(C`Cmnd_List\*(C'\fR is a list of one or more commandnames, directories, and other
d344 1
a344 1
shell-style wildcards (see `Wildcards' section below).  A simple
d346 2
a347 2
wishes.  However, you may also specify command line arguments (including
wildcards).  Alternately, you can specify \f(CW\*(C`""\*(C'\fR to indicate that the command
d349 2
a350 2
fully qualified pathname ending in a '/'.  When you specify a directory
in a \f(CW\*(C`Cmnd_List\*(C'\fR, the user will be able to run any file within that directory
d353 2
a354 2
If a \f(CW\*(C`Cmnd\*(C'\fR has associated command line arguments, then the arguments
in the \f(CW\*(C`Cmnd\*(C'\fR must match exactly those given by the user on the command line
d356 2
a357 2
characters must be escaped with a '\e' if they are used in command
arguments: ',', ':', '=', '\e'.
a358 1
.IX Subsection "Defaults"
d360 1
a360 1
values at runtime via one or more \f(CW\*(C`Default_Entry\*(C'\fR lines.  These
d374 1
a374 1
.Vb 4
a375 2
\&               Parameter '+=' Value ||
\&               Parameter '-=' Value ||
d378 6
a383 15
Parameters may be \fBflags\fR, \fBinteger\fR values, \fBstrings\fR, or \fBlists\fR.
Flags are implicitly boolean and can be turned off via the '!'
operator.  Some integer, string and list parameters may also be
used in a boolean context to disable them.  Values may be enclosed
in double quotes (\f(CW\*(C`"\*(C'\fR) when they contain multiple words.  Special
characters may be escaped with a backslash (\f(CW\*(C`\e\*(C'\fR).
.PP
Lists have two additional assignment operators, \f(CW\*(C`+=\*(C'\fR and \f(CW\*(C`\-=\*(C'\fR.
These operators are used to add to and delete from a list respectively.
It is not an error to use the \f(CW\*(C`\-=\*(C'\fR operator to remove an element
that does not exist in a list.
.PP
Note that since the \fIsudoers\fR file is parsed in order the best place
to put the Defaults section is after the Host, User, and Cmnd aliases
but before the user specifications.
d385 1
a385 1
\&\fBFlags\fR:
a386 1
.IX Item "long_otp_prompt"
d390 1
a390 2
some people find it more convenient.  This flag is \fIoff\fR
by default.
d392 2
a393 4
.IX Item "ignore_dot"
If set, \fBsudo\fR will ignore '.' or '' (current dir) in the \f(CW\*(C`PATH\*(C'\fR
environment variable; the \f(CW\*(C`PATH\*(C'\fR itself is not modified.  This
flag is \fIoff\fR by default.
a394 1
.IX Item "mail_always"
d396 1
a396 5
This flag is \fIoff\fR by default.
.Ip "mail_badpass" 12
.IX Item "mail_badpass"
Send mail to the \fImailto\fR user if the user running sudo does not
enter the correct password.  This flag is \fIoff\fR by default.
a397 1
.IX Item "mail_no_user"
d399 1
a399 2
user is not in the \fIsudoers\fR file.  This flag is \fIon\fR
by default.
a400 1
.IX Item "mail_no_host"
d403 1
a403 1
commands on the current host.  This flag is \fIoff\fR by default.
a404 1
.IX Item "mail_no_perms"
d407 1
a407 2
listed in their \fIsudoers\fR file entry.  This flag is \fIoff\fR
by default.
a408 1
.IX Item "tty_tickets"
d410 1
a410 1
\&\fBsudo\fR uses a directory in the ticket dir with the same name as
d413 1
a413 1
This flag is \fIoff\fR by default.
a414 1
.IX Item "lecture"
d416 1
a416 1
runs \fBsudo\fR.  This flag is \fIon\fR by default.
a417 1
.IX Item "authenticate"
d420 2
a421 2
may be overridden via the \f(CW\*(C`PASSWD\*(C'\fR and \f(CW\*(C`NOPASSWD\*(C'\fR tags.
This flag is \fIon\fR by default.
a422 1
.IX Item "root_sudo"
d425 2
a426 2
like \f(CW\*(C`"sudo sudo /bin/sh"\*(C'\fR.
This flag is \fIon\fR by default.
a427 1
.IX Item "log_host"
d429 1
a429 1
This flag is \fIoff\fR by default.
a430 1
.IX Item "log_year"
d432 1
a432 1
This flag is \fIoff\fR by default.
a433 1
.IX Item "shell_noargs"
d435 2
a436 2
\&\fB\-s\fR flag had been given.  That is, it runs a shell as root (the
shell is determined by the \f(CW\*(C`SHELL\*(C'\fR environment variable if it is
d438 1
a438 1
/etc/passwd entry if not).  This flag is \fIoff\fR by default.
d440 1
a440 2
.IX Item "set_home"
If set and \fBsudo\fR is invoked with the \fB\-s\fR flag the \f(CW\*(C`HOME\*(C'\fR
d442 2
a443 8
user (which is root unless the \fB\-u\fR option is used).  This effectively
makes the \fB\-s\fR flag imply \fB\-H\fR.  This flag is \fIoff\fR by default.
.Ip "always_set_home" 12
.IX Item "always_set_home"
If set, \fBsudo\fR will set the \f(CW\*(C`HOME\*(C'\fR environment variable to the home
directory of the target user (which is root unless the \fB\-u\fR option is used).
This effectively means that the \fB\-H\fR flag is always implied.
This flag is \fIoff\fR by default.
a444 1
.IX Item "path_info"
d446 6
a451 14
found in their \f(CW\*(C`PATH\*(C'\fR environment variable.  Some sites may wish
to disable this as it could be used to gather information on the
location of executables that the normal user does not have access
to.  The disadvantage is that if the executable is simply not in
the user's \f(CW\*(C`PATH\*(C'\fR, \fBsudo\fR will tell the user that they are not
allowed to run it, which can be confusing.  This flag is \fIoff\fR by
default.
.Ip "preserve_groups" 12
.IX Item "preserve_groups"
By default \fBsudo\fR will initialize the group vector to the list of
groups the target user is in.  When \fIpreserve_groups\fR is set, the
user's existing group vector is left unaltered.  The real and
effective group IDs, however, are still set to match the target
user.  This flag is \fIoff\fR by default.
a452 1
.IX Item "fqdn"
d454 1
a454 1
\&\fIsudoers\fR file.  I.e.: instead of myhost you would use myhost.mydomain.edu.
d460 1
a460 1
you may not use a host alias (\f(CW\*(C`CNAME\*(C'\fR entry) due to performance
d462 1
a462 1
\&\s-1DNS\s0.  If your machine's hostname (as returned by the \f(CW\*(C`hostname\*(C'\fR
d464 1
a464 1
\&\fIfqdn\fR.  This flag is \fIoff\fR by default.
a465 1
.IX Item "insults"
d467 1
a467 1
password.  This flag is \fIon\fR by default.
a468 1
.IX Item "requiretty"
d470 2
a471 2
tty.  This will disallow things like \f(CW\*(C`"rsh somehost sudo ls"\*(C'\fR since
\&\fIrsh\fR\|(1) does not allocate a tty.  Because it is not possible to turn
d474 1
a474 1
flag is \fIoff\fR by default.
d476 4
a479 9
.IX Item "env_editor"
If set, \fBvisudo\fR will use the value of the \s-1EDITOR\s0 or \s-1VISUAL\s0
environment variables before falling back on the default editor list.
Note that this may create a security hole as it allows the user to
run any arbitrary command as root without logging.  A safer alternative
is to place a colon-separated list of editors in the \f(CW\*(C`editor\*(C'\fR
variable.  \fBvisudo\fR will then only use the \s-1EDITOR\s0 or \s-1VISUAL\s0 if
they match a value specified in \f(CW\*(C`editor\*(C'\fR.  This flag is \f(CW\*(C`on\*(C'\fR by
default.
a480 1
.IX Item "rootpw"
d482 1
a482 1
of the invoking user.  This flag is \fIoff\fR by default.
a483 1
.IX Item "runaspw"
d485 2
a486 2
\&\fIrunas_default\fR option (defaults to \f(CW\*(C`root\*(C'\fR) instead of the password
of the invoking user.  This flag is \fIoff\fR by default.
a487 1
.IX Item "targetpw"
d489 2
a490 2
the \fB\-u\fR flag (defaults to \f(CW\*(C`root\*(C'\fR) instead of the password of the
invoking user.  This flag is \fIoff\fR by default.
d492 2
a493 3
.IX Item "set_logname"
Normally, \fBsudo\fR will set the \f(CW\*(C`LOGNAME\*(C'\fR and \f(CW\*(C`USER\*(C'\fR environment variables
to the name of the target user (usually root unless the \fB\-u\fR flag is given).
d495 1
a495 1
use \f(CW\*(C`LOGNAME\*(C'\fR to determine the real identity of the user, it may be desirable
a496 28
.Ip "stay_setuid" 12
.IX Item "stay_setuid"
Normally, when \fBsudo\fR executes a command the real and effective
UIDs are set to the target user (root by default).  This option
changes that behavior such that the real \s-1UID\s0 is left as the invoking
user's \s-1UID\s0.  In other words, this makes \fBsudo\fR act as a setuid
wrapper.  This can be useful on systems that disable some potentially
dangerous functionality when a program is run setuid.  Note, however,
that this means that sudo will run with the real uid of the invoking
user which may allow that user to kill \fBsudo\fR before it can log a
failure, depending on how your \s-1OS\s0 defines the interaction between
signals and setuid processes.
.Ip "env_reset" 12
.IX Item "env_reset"
If set, \fBsudo\fR will reset the environment to only contain the
following variables: \f(CW\*(C`HOME\*(C'\fR, \f(CW\*(C`LOGNAME\*(C'\fR, \f(CW\*(C`PATH\*(C'\fR, \f(CW\*(C`SHELL\*(C'\fR, \f(CW\*(C`TERM\*(C'\fR,
and \f(CW\*(C`USER\*(C'\fR (in addition to the \f(CW\*(C`SUDO_*\*(C'\fR variables).
Of these, only \f(CW\*(C`TERM\*(C'\fR is copied unaltered from the old environment.
The other variables are set to default values (possibly modified
by the value of the \fIset_logname\fR option).  If \fBsudo\fR was compiled
with the \f(CW\*(C`SECURE_PATH\*(C'\fR option, its value will be used for the \f(CW\*(C`PATH\*(C'\fR
environment variable.
Other variables may be preserved with the \fIenv_keep\fR option.
.Ip "use_loginclass" 12
.IX Item "use_loginclass"
If set, \fBsudo\fR will apply the defaults specified for the target user's
login class if one exists.  Only available if \fBsudo\fR is configured with
the \-\-with-logincap option.  This flag is \fIoff\fR by default.
d498 1
a498 1
\&\fBIntegers\fR:
a499 1
.IX Item "passwd_tries"
d501 1
a501 1
\&\fBsudo\fR logs the failure and exits.  The default is \f(CW\*(C`3\*(C'\fR.
d503 1
a503 1
\&\fBIntegers that can be used in a boolean context\fR:
a504 1
.IX Item "loglinelen"
d508 1
a508 1
\&\f(CW\*(C`80\*(C'\fR (use 0 or negate the option to disable word wrap).
d510 2
a511 7
.IX Item "timestamp_timeout"
Number of minutes that can elapse before \fBsudo\fR will ask for a
passwd again.  The default is \f(CW\*(C`5\*(C'\fR.  Set this to \f(CW\*(C`0\*(C'\fR to always
prompt for a password.
If set to a value less than \f(CW\*(C`0\*(C'\fR the user's timestamp will never
expire.  This can be used to allow users to create or delete their
own timestamps via \f(CW\*(C`sudo \-v\*(C'\fR and \f(CW\*(C`sudo \-k\*(C'\fR respectively.
a512 1
.IX Item "passwd_timeout"
d514 1
a514 1
The default is \f(CW\*(C`5\*(C'\fR, set this to \f(CW\*(C`0\*(C'\fR for no password timeout.
d516 2
a517 3
.IX Item "umask"
Umask to use when running the command.  Negate this option or set
it to 0777 to preserve the user's umask.  The default is \f(CW\*(C`0022\*(C'\fR.
d519 1
a519 1
\&\fBStrings\fR:
d521 1
a521 2
.IX Item "mailsub"
Subject of the mail sent to the \fImailto\fR user. The escape \f(CW\*(C`%h\*(C'\fR
d523 1
a523 1
Default is \f(CW\*(C`*** SECURITY information for %h ***\*(C'\fR.
a524 1
.IX Item "badpass_message"
d526 1
a526 1
The default is \f(CW\*(C`Sorry, try again.\*(C'\fR unless insults are enabled.
a527 1
.IX Item "timestampdir"
d529 1
a529 1
The default is \fI/var/run/sudo\fR.
a530 1
.IX Item "passprompt"
d532 1
a532 1
via the \fB\-p\fR option or the \f(CW\*(C`SUDO_PROMPT\*(C'\fR environment variable. Supports
d534 1
a534 1
to the local hostname.  The default value is \f(CW\*(C`Password:\*(C'\fR.
d536 2
a537 3
.IX Item "runas_default"
The default user to run commands as if the \fB\-u\fR flag is not specified
on the command line.  This defaults to \f(CW\*(C`root\*(C'\fR.
a538 1
.IX Item "syslog_goodpri"
d540 1
a540 1
Defaults to \f(CW\*(C`notice\*(C'\fR.
a541 1
.IX Item "syslog_badpri"
d543 1
a543 1
Defaults to \f(CW\*(C`alert\*(C'\fR.
d545 2
a546 6
.IX Item "editor"
A colon (':') separated list of editors allowed to be used with
\&\fBvisudo\fR.  \fBvisudo\fR will choose the editor that matches the user's
\&\s-1USER\s0 environment variable if possible, or the first editor in the
list that exists and is executable.  The default is the path to vi
on your system.
d548 1
a548 1
\&\fBStrings that can be used in a boolean context\fR:
a549 1
.IX Item "logfile"
d551 1
a551 1
turns on logging to a file; negating this option turns it off.
a552 1
.IX Item "syslog"
d554 1
a554 1
disable syslog logging).  Defaults to \f(CW\*(C`authpriv\*(C'\fR.
a555 1
.IX Item "mailerpath"
d559 1
a559 2
.IX Item "mailerflags"
Flags to use when invoking mailer. Defaults to \fB\-t\fR.
d561 1
a561 4
.IX Item "mailto"
Address to send warning and error mail to.  The address should
be enclosed in double quotes (\f(CW\*(C`"\*(C'\fR) to protect against sudo
interpreting the \f(CW\*(C`@@\*(C'\fR sign.  Defaults to \f(CW\*(C`root\*(C'\fR.
a562 1
.IX Item "exempt_group"
d565 5
d571 2
a572 20
.IX Item "verifypw"
This option controls when a password will be required when a user runs
\&\fBsudo\fR with the \fB\-v\fR flag.  It has the following possible values:
.RS 12
.Ip "all" 8
.IX Item "all"
All the user's \fIsudoers\fR entries for the current host must have
the \f(CW\*(C`NOPASSWD\*(C'\fR flag set to avoid entering a password.
.Ip "any" 8
.IX Item "any"
At least one of the user's \fIsudoers\fR entries for the current host
must have the \f(CW\*(C`NOPASSWD\*(C'\fR flag set to avoid entering a password.
.Ip "never" 8
.IX Item "never"
The user need never enter a password to use the \fB\-v\fR flag.
.Ip "always" 8
.IX Item "always"
The user must always enter a password to use the \fB\-v\fR flag.
.RE
.RS 12
d574 20
a593 2
The default value is `all'.
.RE
a594 1
.IX Item "listpw"
a596 17
.RS 12
.Ip "all" 8
.IX Item "all"
All the user's \fIsudoers\fR entries for the current host must have
the \f(CW\*(C`NOPASSWD\*(C'\fR flag set to avoid entering a password.
.Ip "any" 8
.IX Item "any"
At least one of the user's \fIsudoers\fR entries for the current host
must have the \f(CW\*(C`NOPASSWD\*(C'\fR flag set to avoid entering a password.
.Ip "never" 8
.IX Item "never"
The user need never enter a password to use the \fB\-l\fR flag.
.Ip "always" 8
.IX Item "always"
The user must always enter a password to use the \fB\-l\fR flag.
.RE
.RS 12
d598 20
a617 33
The default value is `any'.
.RE
.PP
\&\fBLists that can be used in a boolean context\fR:
.Ip "env_check" 12
.IX Item "env_check"
Environment variables to be removed from the user's environment if
the variable's value contains \f(CW\*(C`%\*(C'\fR or \f(CW\*(C`/\*(C'\fR characters.  This can
be used to guard against printf-style format vulnerabilties in
poorly-written programs.  The argument may be a double-quoted,
space-separated list or a single value without double-quotes.  The
list can be replaced, added to, deleted from, or disabled by using
the \f(CW\*(C`=\*(C'\fR, \f(CW\*(C`+=\*(C'\fR, \f(CW\*(C`\-=\*(C'\fR, and \f(CW\*(C`!\*(C'\fR operators respectively.  The default
list of environment variable to check is printed when \fBsudo\fR is
run by root with the \fI\-V\fR option.
.Ip "env_delete" 12
.IX Item "env_delete"
Environment variables to be removed from the user's environment.
The argument may be a double-quoted, space-separated list or a
single value without double-quotes.  The list can be replaced, added
to, deleted from, or disabled by using the \f(CW\*(C`=\*(C'\fR, \f(CW\*(C`+=\*(C'\fR, \f(CW\*(C`\-=\*(C'\fR, and
\&\f(CW\*(C`!\*(C'\fR operators respectively.  The default list of environment
variable to remove is printed when \fBsudo\fR is run by root with the
\&\fI\-V\fR option.
.Ip "env_keep" 12
.IX Item "env_keep"
Environment variables to be preserved in the user's environment
when the \fIenv_reset\fR option is in effect.  This allows fine-grained
control over the environment \fBsudo\fR\-spawned processes will receive.
The argument may be a double-quoted, space-separated list or a
single value without double-quotes.  The list can be replaced, added
to, deleted from, or disabled by using the \f(CW\*(C`=\*(C'\fR, \f(CW\*(C`+=\*(C'\fR, \f(CW\*(C`\-=\*(C'\fR, and
\&\f(CW\*(C`!\*(C'\fR operators respectively.  This list has no default members.
d622 1
a622 1
\&\fBlocal3\fR, \fBlocal4\fR, \fBlocal5\fR, \fBlocal6\fR, and \fBlocal7\fR.  The following
d624 1
a624 1
\&\fBerr\fR, \fBinfo\fR, \fBnotice\fR, and \fBwarning\fR.
d626 1
a626 1
.IX Subsection "User Specification"
d628 1
a628 1
\& User_Spec ::= User_list Host_List '=' Cmnd_Spec_List \e
d643 1
a643 1
run as \fBroot\fR, but this can be changed on a per-command basis.
d647 1
a647 2
.IX Subsection "Runas_Spec"
A \f(CW\*(C`Runas_Spec\*(C'\fR is simply a \f(CW\*(C`Runas_List\*(C'\fR (as defined above)
d649 2
a650 2
\&\f(CW\*(C`Runas_Spec\*(C'\fR in the user specification, a default \f(CW\*(C`Runas_Spec\*(C'\fR
of \fBroot\fR will be used.  A \f(CW\*(C`Runas_Spec\*(C'\fR sets the default for
d657 1
a657 1
\&\fI/usr/bin/lprm\fR \*(-- but only as \fBoperator\fR.  E.g.,
d662 1
a662 1
It is also possible to override a \f(CW\*(C`Runas_Spec\*(C'\fR later on in an
a670 1
.IX Subsection "NOPASSWD and PASSWD"
d673 3
a675 3
\&\f(CW\*(C`NOPASSWD\*(C'\fR tag.  Like a \f(CW\*(C`Runas_Spec\*(C'\fR, the \f(CW\*(C`NOPASSWD\*(C'\fR tag sets
a default for the commands that follow it in the \f(CW\*(C`Cmnd_Spec_List\*(C'\fR.
Conversely, the \f(CW\*(C`PASSWD\*(C'\fR tag can be used to reverse things.
d682 1
a682 1
\&\fI/usr/bin/lprm\fR as root on the machine rushmore as \fBroot\fR without
d689 1
a689 1
Note, however, that the \f(CW\*(C`PASSWD\*(C'\fR tag has no effect on users who are
d692 1
a692 1
By default, if the \f(CW\*(C`NOPASSWD\*(C'\fR tag is applied to any of the entries
d694 2
a695 2
\&\f(CW\*(C`sudo \-l\*(C'\fR without a password.  Additionally, a user may only run
\&\f(CW\*(C`sudo \-v\*(C'\fR without a password if the \f(CW\*(C`NOPASSWD\*(C'\fR tag is present
d699 1
a699 2
.IX Subsection "Wildcards (aka meta characters):"
\&\fBsudo\fR allows shell-style \fIwildcards\fR to be used in pathnames
d701 1
a701 1
matching is done via the \fB\s-1POSIX\s0\fR \f(CW\*(C`fnmatch(3)\*(C'\fR routine.  Note that
d703 1
a703 2
.Ip "\f(CW\*(C`*\*(C'\fR" 8
.IX Item "*"
d705 1
a705 2
.Ip "\f(CW\*(C`?\*(C'\fR" 8
.IX Item "?"
d707 1
a707 2
.Ip "\f(CW\*(C`[...]\*(C'\fR" 8
.IX Item "[...]"
d709 1
a709 2
.Ip "\f(CW\*(C`[!...]\*(C'\fR" 8
.IX Item "[!...]"
d711 1
a711 2
.Ip "\f(CW\*(C`\ex\*(C'\fR" 8
.IX Item "x"
d723 1
a723 1
match \f(CW\*(C`/usr/bin/who\*(C'\fR but not \f(CW\*(C`/usr/bin/X11/xterm\*(C'\fR.
a724 1
.IX Subsection "Exceptions to wildcard rules:"
d726 3
a728 5
.if n .Ip "\f(CW""""""""\fR" 8
.el .Ip "\f(CW``''\fR" 8
.IX Item """""
If the empty string \f(CW\*(C`""\*(C'\fR is the only command line argument in the
\&\fIsudoers\fR entry it means that command is not allowed to be run
a730 1
.IX Subsection "Other special characters and reserved words:"
d739 1
a739 1
use a \f(CW\*(C`Cmnd_Alias\*(C'\fR, \f(CW\*(C`User_Alias\*(C'\fR, \f(CW\*(C`Runas_Alias\*(C'\fR, or \f(CW\*(C`Host_Alias\*(C'\fR.
d745 4
a748 4
An exclamation point ('!') can be used as a logical \fInot\fR operator
both in an \fIalias\fR and in front of a \f(CW\*(C`Cmnd\*(C'\fR.  This allows one to
exclude certain values.  Note, however, that using a \f(CW\*(C`!\*(C'\fR in
conjunction with the built in \f(CW\*(C`ALL\*(C'\fR alias to allow a user to
d750 1
a750 1
\&\s-1NOTES\s0 below).
d752 1
a752 1
Long lines can be continued with a backslash ('\e') as the last
d755 2
a756 2
Whitespace between elements in a list as well as special syntactic
characters in a \fIUser Specification\fR ('=', ':', '(', ')') is optional.
d758 1
a758 1
The following characters must be escaped with a backslash ('\e') when
d760 1
a760 1
\&'@@', '!', '=', ':', ',', '(', ')', '\e'.
a761 1
.IX Header "EXAMPLES"
d802 1
a802 1
\&\fBsudo\fR to log via \fIsyslog\fR\|(3) using the \fIauth\fR facility in all cases.
d805 1
a805 1
machines in the \fI\s-1SERVERS\s0\fR \f(CW\*(C`Host_Alias\*(C'\fR, we keep an additional
d810 1
a810 1
\& # Override built in defaults
d837 1
a837 1
(since the entry lacks the \f(CW\*(C`NOPASSWD\*(C'\fR tag).
d842 5
a846 5
The user \fBjack\fR may run any command on the machines in the \fI\s-1CSNETS\s0\fR alias
(the networks \f(CW\*(C`128.138.243.0\*(C'\fR, \f(CW\*(C`128.138.204.0\*(C'\fR, and \f(CW\*(C`128.138.242.0\*(C'\fR).
Of those networks, only \f(CW\*(C`128.138.204.0\*(C'\fR has an explicit netmask (in
\&\s-1CIDR\s0 notation) indicating it is a class C network.  For the other
networks in \fI\s-1CSNETS\s0\fR, the local machine's netmask will be used
d852 2
a853 2
The user \fBlisa\fR may run any command on any host in the \fI\s-1CUNETS\s0\fR alias
(the class B network \f(CW\*(C`128.138.0.0\*(C'\fR).
d873 1
a873 1
root on the \fI\s-1HPPA\s0\fR machines.  Note that this assumes \fIpasswd\fR\|(1)
d879 2
a880 2
The user \fBbob\fR may run anything on the \fI\s-1SPARC\s0\fR and \fI\s-1SGI\s0\fR machines
as any user listed in the \fI\s-1OP\s0\fR \f(CW\*(C`Runas_Alias\*(C'\fR (\fBroot\fR and \fBoperator\fR).
d886 1
a886 1
\&\fBSudo\fR knows that \*(L"biglab\*(R" is a netgroup due to the '+' prefix.
d898 1
a898 1
The user \fBfred\fR can run commands as any user in the \fI\s-1DB\s0\fR \f(CW\*(C`Runas_Alias\*(C'\fR
d904 1
a904 1
On the \fI\s-1ALPHA\s0\fR machines, user \fBjohn\fR may su to anyone except root
d911 1
a911 1
in the \fI\s-1SERVERS\s0\fR \f(CW\*(C`Host_Alias\*(C'\fR (master, mail, www and ns).
d916 1
a916 1
For any machine in the \fI\s-1SERVERS\s0\fR \f(CW\*(C`Host_Alias\*(C'\fR, \fBjill\fR may run
d918 1
a918 1
belonging to the \fI\s-1SU\s0\fR and \fI\s-1SHELLS\s0\fR \f(CW\*(C`Cmnd_Aliases\*(C'\fR.
d935 1
a935 1
On the host www, any user in the \fI\s-1WEBMASTERS\s0\fR \f(CW\*(C`User_Alias\*(C'\fR (will,
d943 3
a945 3
Any user may mount or unmount a \s-1CD-ROM\s0 on the machines in the \s-1CDROM\s0
\&\f(CW\*(C`Host_Alias\*(C'\fR (orion, perseus, hercules) without entering a password.
This is a bit tedious for users to type, so it is a prime candidate
d948 2
a949 3
.IX Header "SECURITY NOTES"
It is generally not effective to \*(L"subtract\*(R" commands from \f(CW\*(C`ALL\*(C'\fR
using the '!' operator.  A user can trivially circumvent this
d957 1
a957 1
\&\fI\s-1SU\s0\fR or \fI\s-1SHELLS\s0\fR since he can simply copy those commands to a
a961 1
.IX Header "CAVEATS"
d970 2
a971 2
as returned by the \f(CW\*(C`hostname\*(C'\fR command or use the \fIfqdn\fR option in
\&\fIsudoers\fR.
d973 1
a973 1
.IX Header "FILES"
d980 144
d1125 1
a1125 1
\&\fIrsh\fR\|(1), \fIsudo\fR\|(8), \fIvisudo\fR\|(8), \fIsu\fR\|(1), \fIfnmatch\fR\|(3).
@


1.5
log
@sudo 1.6.3; see http://www.courtesan.com/sudo/current.html for a list
of changes.
@
text
@d2 6
a7 1
''' $RCSfile: sudoers.man.in,v $$Revision: 1.5 $$Date: 2000/03/27 03:26:23 $
a8 1
''' $Log: sudoers.man.in,v $
d321 2
a322 2
The netmask may be specified either in dotted quad notation (eg.
255.255.255.0) or \s-1CIDR\s0 notation (number of bits, eg. 24).  A hostname
d759 1
a759 1
used as part of a word (eg. a username or hostname):
@


1.4
log
@1.6.2p1
@
text
@d2 1
a2 1
''' $RCSfile: sudoers.man,v $$Revision: 1.23 $$Date: 2000/01/26 21:21:28 $
d4 3
a6 3
''' $Log: sudoers.man,v $
''' Revision 1.23  2000/01/26 21:21:28  millert
''' Expanded docs on sudoers 'defaults' options based on INSTALL file info.
d99 1
a99 1
.TH sudoers 5 "1.6.2" "26/Jan/2000" "FILE FORMATS"
d318 5
a322 1
255.255.255.0) or \s-1CIDR\s0 notation (number of bits, eg. 24).
d339 1
a339 1
aliases.  A commandname is a fully-qualified filename which may include
d391 1
a391 1
Send mail to the \fImailto\fR user every time a users runs sudo.
d402 1
a402 1
user allowed to use sudo but the command they are trying is not
d419 2
a420 2
If set, root is allowed to run sudo too.  Disabling this prevents users
from \*(L"chaining\*(R" sudo commands to get a root shell by doing something
d452 1
a452 1
Beware that turning on \fIfqdn\fR requires sudo to make \s-1DNS\s0 lookups
d462 1
a462 1
If set, sudo will insult users when they enter an incorrect
d465 1
a465 1
If set, sudo will only run when the user is logged in to a real
d471 22
d497 1
a497 1
sudo logs the failure and exits.  The default is 3.
d509 1
a509 1
Number of minutes before the sudo password prompt times out.
d525 1
a525 1
The default is either \f(CW/var/run/sudo\fR or \f(CW/tmp/sudo\fR.
d540 3
d545 3
d563 1
a563 1
people running sudo to have a sane \f(CWPATH\fR environment variable you may
d568 1
a568 1
user runs sudo with the \fB\-v\fR.  It has the following possible values:
d592 1
a592 1
user runs sudo with the \fB\-l\fR.  It has the following possible values:
d615 1
a615 1
When logging via \fIsyslog\fR\|(3), sudo accepts the following values for the syslog
d798 1
a798 1
sudo to log via \fIsyslog\fR\|(3) using the \fIauth\fR facility in all cases.
d964 2
a965 2
store fully-qualified hostnames in the netgroup (as is usually the
case), you either need to have the machine's hostname be fully-qualified
d1034 10
d1067 4
@


1.3
log
@sudo 1.6.2
@
text
@d2 1
a2 1
''' $RCSfile: sudoers.man,v $$Revision: 1.22 $$Date: 2000/01/24 03:57:49 $
d5 2
a6 2
''' Revision 1.22  2000/01/24 03:57:49  millert
''' Add netgroup caveat
d99 1
a99 1
.TH sudoers 5 "1.6.2" "23/Jan/2000" "FILE FORMATS"
d379 4
a382 1
Put \s-1OTP\s0 prompt on its own line
d384 2
a385 1
Ignore \*(L'.\*(R' in \f(CW$PATH\fR
d387 2
a388 1
Always send mail when sudo is run
d390 2
a391 1
Send mail if the user is not in sudoers
d393 3
a395 1
Send mail if the user is not in sudoers for this host
d397 3
a399 1
Send mail if the user is not allowed to run a command
d401 5
a405 1
Use a separate timestamp for each user/tty combo
d407 2
a408 1
Lecture user the first time they run sudo
d410 4
a413 1
Require users to authenticate by default
d415 4
a418 1
Root may run sudo
d420 2
a421 1
Log the hostname in the (non-syslog) log file
d423 2
a424 1
Log the year in the (non-syslog) log file
d426 5
a430 1
If sudo is invoked with no arguments, start a shell
d432 4
a435 1
Set \f(CW$HOME\fR to the target user when starting a shell with \f(CW-s\fR
d437 7
a443 1
Allow some information gathering to give useful error messages
d445 12
a456 1
Require fully-qualified hostnames in the sudoers file
d458 2
a459 1
Insult the user when they enter an incorrect password
d461 6
a466 1
Only allow the user to run sudo if they have a tty
d470 2
a471 1
Number of tries to enter a password
d475 4
a478 1
Length at which to wrap log file lines (use 0 or negate for no wrap)
d480 2
a481 1
Authentication timestamp timeout
d483 2
a484 1
Password prompt timeout
d486 2
a487 1
Umask to use or 0777 to use user's
d491 3
a493 1
Subject line for mail messages
d495 2
a496 1
Incorrect password message
d498 2
a499 1
Path to authentication timestamp dir
d501 4
a504 1
Default password prompt
d506 2
a507 1
Default user to run commands as
d509 2
a510 1
Syslog priority to use when user authenticates successfully
d512 2
a513 1
Syslog priority to use when user authenticates unsuccessfully
d517 2
a518 1
Syslog facility if syslog is being used for logging (negate to disable syslog)
d520 2
a521 1
Path to mail program
d523 1
a523 1
Flags for mail program
d525 1
a525 1
Address to send mail to
d527 2
a528 1
Users in this group are exempt from password and \s-1PATH\s0 requirements
d530 4
a533 1
Value to override user's \f(CW$PATH\fR with
d539 1
a539 1
\&    all         All the user's sudoers entries for the
d544 1
a544 1
\&    any         At least one of the user's sudoers entries
d563 1
a563 1
\&    all         All the user's sudoers entries for the
d568 1
a568 1
\&    any         At least one of the user's sudoers entries
@


1.2
log
@Repair duplicate word occurences; (as found by a Perl script sent to us from
Tom Christiansen <tchrist@@perl.com>).
@
text
@d2 1
a2 1
''' $RCSfile: sudoers.5,v $$Revision: 1.1.1.1 $$Date: 1999/11/18 16:29:01 $
d4 3
a6 6
''' $Log: sudoers.5,v $
''' Revision 1.1.1.1  1999/11/18 16:29:01  millert
''' sudo 1.6, now with a BSD license
'''
''' Revision 1.15  1999/11/16 05:23:41  millert
''' Add warning about using ALL in a command context.
d99 1
a99 1
.TH sudoers 5 "1.6" "15/Nov/1999" "FILE FORMATS"
d233 3
a235 3
\&           'Runas_Alias' (':' Runas_Alias)* |
\&           'Host_Alias' (':' Host_Alias)* |
\&           'Cmnd_Alias' (':' Cmnd_Alias)*
d458 48
d515 3
a517 5
.Vb 1
\& Runas_Spec ::= '(' Runas_List ')'
.Ve
.Vb 1
\& Cmnd_Spec ::= Runas_Spec? ('NOPASSWD:' | 'PASSWD:')? Cmnd
d524 4
a527 1
\& User_Spec ::= User_list Cmnd_Spec_List (':' User_Spec)*
d577 9
d854 6
d962 4
d986 1
a986 1
.IX Item "\f(CW""\fR"
@


1.1
log
@Initial revision
@
text
@d2 5
a6 1
''' $RCSfile: sudoers.man,v $$Revision: 1.15 $$Date: 1999/11/16 05:23:41 $
a7 1
''' $Log: sudoers.man,v $
d570 1
a570 1
The reserved word \fB\s-1ALL\s0\fR is a a built in \fIalias\fR that always causes
@


1.1.1.1
log
@sudo 1.6, now with a BSD license
@
text
@@
