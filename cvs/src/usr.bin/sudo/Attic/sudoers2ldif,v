head	1.5;
access;
symbols
	OPENBSD_5_7:1.4.0.18
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.22
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.20
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.16
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.14
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.12
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.10
	OPENBSD_5_0:1.4.0.8
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.6
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.10
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.8
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2015.07.03.21.51.54;	author millert;	state dead;
branches;
next	1.4;
commitid	8ra5qnWqy2bUhcZn;

1.4
date	2010.03.04.12.21.36;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2008.11.14.11.58.08;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2007.07.26.16.10.16;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2004.09.28.15.10.51;	author millert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove sudo, it is now in ports.
@
text
@#!/usr/bin/env perl
use strict;

#
# Converts a sudoers file to LDIF format in prepration for loading into
# the LDAP server.
#

# BUGS:
#   Does not yet handle multiple lines with : in them
#   Does not yet remove quotation marks from options
#   Does not yet escape + at the beginning of a dn
#   Does not yet handle line wraps correctly
#   Does not yet handle multiple roles with same name (needs tiebreaker)
#
# CAVEATS:
#   Sudoers entries can have multiple RunAs entries that override former ones,
#	with LDAP sudoRunAs{Group,User} applies to all commands in a sudoRole

my %RA;
my %UA;
my %HA;
my %CA;
my $base=$ENV{SUDOERS_BASE} or die "$0: Container SUDOERS_BASE undefined\n";
my @@options=();

my $did_defaults=0;

# parse sudoers one line at a time
while (<>){

  # remove comment
  s/#.*//;

  # line continuation
  $_.=<> while s/\\\s*$//s;

  # cleanup newline
  chomp;

  # ignore blank lines
  next if /^\s*$/;

  if (/^Defaults\s+/i) {
    my $opt=$';
    $opt=~s/\s+$//; # remove trailing whitespace
    push @@options,$opt;
  } elsif (/^(\S+)\s+(.+)=\s*(.*)/) {

    # Aliases or Definitions
    my ($p1,$p2,$p3)=($1,$2,$3);
    $p2=~s/\s+$//; # remove trailing whitespace
    $p3=~s/\s+$//; # remove trailing whitespace

    if ($p1 eq "User_Alias") {
      $UA{$p2}=$p3;
    } elsif ($p1 eq "Runas_Alias") {
      $RA{$p2}=$p3;
    } elsif ($p1 eq "Host_Alias") {
      $HA{$p2}=$p3;
    } elsif ($p1 eq "Cmnd_Alias") {
      $CA{$p2}=$p3;
    } else {
      if (!$did_defaults++){
        # do this once
        print "dn: cn=defaults,$base\n";
        print "objectClass: top\n";
        print "objectClass: sudoRole\n";
        print "cn: defaults\n";
     print "description: Default sudoOption's go here\n";
        print "sudoOption: $_\n" foreach @@options;
        print "\n";
      }
      # Definition
      my @@users=split /\s*,\s*/,$p1;
      my @@hosts=split /\s*,\s*/,$p2;
      my @@cmds= split /\s*,\s*/,$p3;
      @@options=();
      print "dn: cn=$users[0],$base\n";
      print "objectClass: top\n";
      print "objectClass: sudoRole\n";
      print "cn: $users[0]\n";
      # will clobber options
      print "sudoUser: $_\n"   foreach expand(\%UA,@@users);
      print "sudoHost: $_\n"   foreach expand(\%HA,@@hosts);
      foreach (@@cmds) {
	if (s/^\(([^\)]+)\)\s*//) {
	  my @@runas = split(/:\s*/, $1);
	  if (defined($runas[0])) {
	    print "sudoRunAsUser: $_\n" foreach expand(\%RA, split(/,\s*/, $runas[0]));
	  }
	  if (defined($runas[1])) {
	    print "sudoRunAsGroup: $_\n" foreach expand(\%RA, split(/,\s*/, $runas[1]));
	  }
	}
      }
      print "sudoCommand: $_\n" foreach expand(\%CA,@@cmds);
      print "sudoOption: $_\n" foreach @@options;
      print "\n";
    }

  } else {
    print "parse error: $_\n";
  }

}

#
# recursively expand hash elements
sub expand{
  my $ref=shift;
  my @@a=();

  # preen the line a little
  foreach (@@_){
    # if NOPASSWD: directive found, mark entire entry as not requiring
    s/NOPASSWD:\s*// && push @@options,"!authenticate";
    s/PASSWD:\s*// && push @@options,"authenticate";
    s/NOEXEC:\s*// && push @@options,"noexec";
    s/EXEC:\s*// && push @@options,"!noexec";
    s/SETENV:\s*// && push @@options,"setenv";
    s/NOSETENV:\s*// && push @@options,"!setenv";
    s/\w+://; # silently remove other directives
    s/\s+$//; # right trim
  }

  # do the expanding
  push @@a,$ref->{$_} ? expand($ref,split /\s*,\s*/,$ref->{$_}):$_ foreach @@_;
  @@a;
}


@


1.4
log
@Remove old $Sudo$ tags; the main sudo tree no longer lives in cvs.
@
text
@@


1.3
log
@Upgrade to sudo 1.7.  See the WHATSNEW files for details.
@
text
@a7 2
# $Sudo: sudoers2ldif,v 1.5 2007/12/08 00:09:28 millert Exp $
#
@


1.2
log
@Update to sudo 1.6.9p1.  Note that the environment handling in sudo
1.6.9 has changed relative to older versions.  Sudo now starts
commands with a minimal environment containing the variables in the
env_keep and env_check lists.  This behavior is configurable in the
sudoers file.  Please see the "SECURITY NOTES" section in the sudo
manual.
@
text
@d8 1
a8 1
# $Sudo: sudoers2ldif,v 1.2.2.1 2007/06/28 14:45:19 millert Exp $
d17 4
a20 2
#   Sudoers entries can have multiple Runas entries that override former ones,
#	with LDAP sudoRunas applies to all commands in a sudoRole
d22 1
d57 1
a57 1
    if      ($p1 eq "User_Alias") {
d59 2
a87 1
      my $runas = undef;
d90 7
a96 1
	  print "sudoRunas: $_\n" foreach expand(\%UA, split(/,\s*/, $1));
@


1.1
log
@Update to sudo 1.6.8p1
@
text
@d8 1
a8 1
# $Sudo: sudoers2ldif,v 1.2 2004/02/13 02:08:27 aaron Exp $
a12 1
#   Does not yet handle runas (xxx) syntax.
d17 2
d83 6
d113 2
@

