head	1.10;
access;
symbols
	OPENBSD_5_7:1.9.0.18
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.22
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.20
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.16
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.14
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.12
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.6
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.7.0.16
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.14
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.12
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.10
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.8
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.6
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SUDO_1_6_0:1.1.1.1
	COURTESAN:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2015.07.03.21.51.54;	author millert;	state dead;
branches;
next	1.9;
commitid	8ra5qnWqy2bUhcZn;

1.9
date	2010.03.04.12.21.36;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2008.11.14.11.58.08;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2004.09.28.15.10.51;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.19.21.57.17;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.03.03.49.16;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.27.03.44.38;	author millert;	state Exp;
branches
	1.4.6.1
	1.4.8.1;
next	1.3;

1.3
date	2000.01.24.04.22.53;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.12.10.06.45.11;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.11.18.16.29.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.11.18.16.29.01;	author millert;	state Exp;
branches;
next	;

1.4.6.1
date	2002.01.18.17.20.23;	author millert;	state Exp;
branches;
next	;

1.4.8.1
date	2002.01.18.16.14.46;	author millert;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Remove sudo, it is now in ports.
@
text
@/*
 * Copyright (c) 1999-2005, 2008
 *	Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F39502-99-1-0512.
 */

#ifndef _SUDO_DEFAULTS_H
#define _SUDO_DEFAULTS_H

#include <def_data.h>

struct list_member {
    char *value;
    struct list_member *next;
};

struct def_values {
    char *sval;		/* string value */
    int ival;		/* actually an enum */
};

enum list_ops {
    add,
    delete,
    freeall
};

/*
 * Structure describing compile-time and run-time options.
 */
struct sudo_defs_types {
    char *name;
    int type;
    char *desc;
    struct def_values *values;
    int (*callback) __P((char *));
    union {
	int flag;
	int ival;
	enum def_tupple tuple;
	char *str;
	mode_t mode;
	struct list_member *list;
    } sd_un;
};

/*
 * Four types of defaults: strings, integers, and flags.
 * Also, T_INT or T_STR may be ANDed with T_BOOL to indicate that
 * a value is not required.  Flags are boolean by nature...
 */
#undef T_INT
#define T_INT		0x001
#undef T_UINT
#define T_UINT		0x002
#undef T_STR
#define T_STR		0x003
#undef T_FLAG
#define T_FLAG		0x004
#undef T_MODE
#define T_MODE		0x005
#undef T_LIST
#define T_LIST		0x006
#undef T_LOGFAC
#define T_LOGFAC	0x007
#undef T_LOGPRI
#define T_LOGPRI	0x008
#undef T_TUPLE
#define T_TUPLE		0x009
#undef T_MASK
#define T_MASK		0x0FF
#undef T_BOOL
#define T_BOOL		0x100
#undef T_PATH
#define T_PATH		0x200

/*
 * Argument to update_defaults()
 */
#define SETDEF_GENERIC	0x01
#define	SETDEF_HOST	0x02
#define	SETDEF_USER	0x04
#define	SETDEF_RUNAS	0x08
#define	SETDEF_CMND	0x10
#define SETDEF_ALL	(SETDEF_GENERIC|SETDEF_HOST|SETDEF_USER|SETDEF_RUNAS|SETDEF_CMND)

/*
 * Prototypes
 */
void dump_default	__P((void));
int set_default		__P((char *, char *, int));
void init_defaults	__P((void));
int update_defaults	__P((int));
void list_options	__P((void));

extern struct sudo_defs_types sudo_defs_table[];

#endif /* _SUDO_DEFAULTS_H */
@


1.9
log
@Remove old $Sudo$ tags; the main sudo tree no longer lives in cvs.
@
text
@@


1.8
log
@Upgrade to sudo 1.7.  See the WHATSNEW files for details.
@
text
@a19 2
 *
 * $Sudo: defaults.h,v 1.33 2008/11/09 14:13:12 millert Exp $
@


1.7
log
@Update to sudo 1.6.8p1
@
text
@d2 2
a3 1
 * Copyright (c) 1999-2001 Todd C. Miller <Todd.Miller@@courtesan.com>
d21 1
a21 1
 * $Sudo: defaults.h,v 1.28 2004/02/13 21:36:43 millert Exp $
d95 10
d110 1
@


1.6
log
@sync w/ the sudo cvs tree and sudo 1.6.7p4
@
text
@a2 1
 * All rights reserved.
d4 11
a14 28
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * 4. Products derived from this software may not be called "Sudo" nor
 *    may "Sudo" appear in their names without specific prior written
 *    permission from the author.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d20 1
a20 1
 * $Sudo: defaults.h,v 1.24 2003/04/16 00:42:09 millert Exp $
d26 2
d33 5
d51 2
d56 1
d84 2
a85 2
#undef T_PWFLAG
#define T_PWFLAG	0x009
a91 17

/*
 * Indexes into sudo_defs_table
 */
#include <def_data.h>
#define I_LOGFAC	I_SYSLOG_IFAC
#define I_GOODPRI	I_SYSLOG_IGOODPRI
#define I_BADPRI	I_SYSLOG_IBADPRI 

/*
 * Macros for accessing sudo_defs_table.
 */
#define def_flag(_i)	(sudo_defs_table[(_i)].sd_un.flag)
#define def_ival(_i)	(sudo_defs_table[(_i)].sd_un.ival)
#define def_str(_i)	(sudo_defs_table[(_i)].sd_un.str)
#define def_list(_i)	(sudo_defs_table[(_i)].sd_un.list)
#define def_mode(_i)	(sudo_defs_table[(_i)].sd_un.mode)
@


1.5
log
@Update to sudo 1.6.4
@
text
@d34 5
a38 1
 * $Sudo: defaults.h,v 1.23 2001/12/14 19:54:56 millert Exp $
@


1.4
log
@sudo 1.6.3; see http://www.courtesan.com/sudo/current.html for a list
of changes.
@
text
@d2 1
a2 1
 * Copyright (c) 1999-2000 Todd C. Miller <Todd.Miller@@courtesan.com>
d34 1
a34 1
 * $Sudo: defaults.h,v 1.16 2000/03/22 23:40:09 millert Exp $
d40 11
d60 1
a61 1
	unsigned int ival;
d63 1
d74 2
d77 1
a77 1
#define T_STR		0x002
d79 1
a79 1
#define T_FLAG		0x003
d81 3
a83 1
#define T_MODE		0x004
d85 1
a85 1
#define T_LOGFAC	0x005
d87 1
a87 1
#define T_LOGPRI	0x006
d89 1
a89 1
#define T_PWFLAG	0x007
d100 4
a103 65

/* Integer versions of syslog options.  */
#define	I_LOGFAC	0	/* syslog facility */
#define	I_GOODPRI	1	/* syslog priority for successful auth */
#define	I_BADPRI	2	/* syslog priority for unsuccessful auth */

/* String versions of syslog options.  */
#define	I_LOGFACSTR	3	/* syslog facility */
#define	I_GOODPRISTR	4	/* syslog priority for successful auth */
#define	I_BADPRISTR	5	/* syslog priority for unsuccessful auth */

/* Booleans */
#define I_LONG_OTP_PROMPT	6
#define I_IGNORE_DOT		7
#define I_MAIL_ALWAYS		8
#define I_MAIL_NOUSER		9
#define I_MAIL_NOHOST		10
#define I_MAIL_NOPERMS		11
#define I_TTY_TICKETS		12
#define I_LECTURE		13
#define I_AUTHENTICATE		14
#define I_ROOT_SUDO		15
#define I_LOG_HOST		16
#define I_LOG_YEAR		17
#define I_SHELL_NOARGS		18
#define I_SET_HOME		19
#define I_PATH_INFO		20
#define I_FQDN			21
#define I_INSULTS		22
#define I_REQUIRETTY		23
#define I_ENV_EDITOR		24
#define I_ROOTPW		25
#define I_RUNASPW		26
#define I_TARGETPW		27
#define I_LOGINCLASS		28
#define I_LOGNAME		29

/* Integer values */
#define	I_LOGLEN	30	/* wrap log file line after N chars */
#define	I_TS_TIMEOUT	31	/* timestamp stale after N minutes */
#define	I_PW_TIMEOUT	32	/* exit if pass not entered in N minutes */
#define	I_PW_TRIES	33	/* exit after N bad password tries */
#define	I_UMASK		34	/* umask to use or 0777 to use user's */

/* Strings */
#define	I_LOGFILE	35	/* path to logfile (or NULL for none) */
#define	I_MAILERPATH	36	/* path to sendmail or other mailer */
#define	I_MAILERFLAGS	37	/* flags to pass to the mailer */
#define	I_MAILTO	38	/* who to send bitch mail to */
#define	I_MAILSUB	39	/* subject line of mail msg */
#define	I_BADPASS_MSG	40	/* what to say when passwd is wrong */
#define	I_TIMESTAMPDIR	41	/* path to timestamp dir */
#define	I_EXEMPT_GRP	42	/* no password or PATH override for these */
#define	I_PASSPROMPT	43	/* password prompt */
#define	I_RUNAS_DEF	44	/* default user to run commands as */
#define	I_SECURE_PATH	45	/* set $PATH to this if not NULL */
#define	I_EDITOR	46	/* path to editor used by visudo */

/* Integer versions of list/verify options */
#define I_LISTPW	47
#define I_VERIFYPW	48

/* String versions of list/verify options */
#define I_LISTPWSTR	49
#define I_VERIFYPWSTR	50
d111 1
@


1.4.6.1
log
@update to sudo 1.6.5p1
@
text
@d2 1
a2 1
 * Copyright (c) 1999-2001 Todd C. Miller <Todd.Miller@@courtesan.com>
d34 1
a34 1
 * $Sudo: defaults.h,v 1.23 2001/12/14 19:54:56 millert Exp $
a39 11
struct list_member {
    char *value;
    struct list_member *next;
};

enum list_ops {
    add,
    delete,
    freeall
};

a48 1
	int ival;
d50 1
a51 1
	struct list_member *list;
a61 2
#undef T_UINT
#define T_UINT		0x002
d63 1
a63 1
#define T_STR		0x003
d65 1
a65 1
#define T_FLAG		0x004
d67 1
a67 3
#define T_MODE		0x005
#undef T_LIST
#define T_LIST		0x006
d69 1
a69 1
#define T_LOGFAC	0x007
d71 1
a71 1
#define T_LOGPRI	0x008
d73 1
a73 1
#define T_PWFLAG	0x009
d84 65
a148 4
#include <def_data.h>
#define I_LOGFAC	I_SYSLOG_IFAC
#define I_GOODPRI	I_SYSLOG_IGOODPRI
#define I_BADPRI	I_SYSLOG_IBADPRI 
a155 1
#define def_list(_i)	(sudo_defs_table[(_i)].sd_un.list)
@


1.4.8.1
log
@update to sudo 1.6.5p1
@
text
@d2 1
a2 1
 * Copyright (c) 1999-2001 Todd C. Miller <Todd.Miller@@courtesan.com>
d34 1
a34 1
 * $Sudo: defaults.h,v 1.23 2001/12/14 19:54:56 millert Exp $
a39 11
struct list_member {
    char *value;
    struct list_member *next;
};

enum list_ops {
    add,
    delete,
    freeall
};

a48 1
	int ival;
d50 1
a51 1
	struct list_member *list;
a61 2
#undef T_UINT
#define T_UINT		0x002
d63 1
a63 1
#define T_STR		0x003
d65 1
a65 1
#define T_FLAG		0x004
d67 1
a67 3
#define T_MODE		0x005
#undef T_LIST
#define T_LIST		0x006
d69 1
a69 1
#define T_LOGFAC	0x007
d71 1
a71 1
#define T_LOGPRI	0x008
d73 1
a73 1
#define T_PWFLAG	0x009
d84 65
a148 4
#include <def_data.h>
#define I_LOGFAC	I_SYSLOG_IFAC
#define I_GOODPRI	I_SYSLOG_IGOODPRI
#define I_BADPRI	I_SYSLOG_IBADPRI 
a155 1
#define def_list(_i)	(sudo_defs_table[(_i)].sd_un.list)
@


1.3
log
@sudo 1.6.2
@
text
@d34 1
a34 1
 * $Sudo: defaults.h,v 1.12 2000/01/17 23:46:25 millert Exp $
d114 6
d122 5
a126 5
#define	I_LOGLEN	24	/* wrap log file line after N chars */
#define	I_TS_TIMEOUT	25	/* timestamp stale after N minutes */
#define	I_PW_TIMEOUT	26	/* exit if pass not entered in N minutes */
#define	I_PW_TRIES	27	/* exit after N bad password tries */
#define	I_UMASK		28	/* umask to use or 0777 to use user's */
d129 12
a140 11
#define	I_LOGFILE	29	/* path to logfile (or NULL for none) */
#define	I_MAILERPATH	30	/* path to sendmail or other mailer */
#define	I_MAILERFLAGS	31	/* flags to pass to the mailer */
#define	I_MAILTO	32	/* who to send bitch mail to */
#define	I_MAILSUB	33	/* subject line of mail msg */
#define	I_BADPASS_MSG	34	/* what to say when passwd is wrong */
#define	I_TIMESTAMPDIR	35	/* path to timestamp dir */
#define	I_EXEMPT_GRP	36	/* no password or PATH override for these */
#define	I_PASSPROMPT	37	/* password prompt */
#define	I_RUNAS_DEF	38	/* default user to run commands as */
#define	I_SECURE_PATH	39	/* set $PATH to this if not NULL */
d143 2
a144 2
#define I_LISTPW	40
#define I_VERIFYPW	41
d147 2
a148 2
#define I_LISTPWSTR	42
#define I_VERIFYPWSTR	43
@


1.2
log
@sudo 1.6.1
@
text
@d2 1
a2 1
 * Copyright (c) 1999 Todd C. Miller <Todd.Miller@@courtesan.com>
d34 1
a34 1
 * $Sudo: defaults.h,v 1.8 1999/12/02 20:31:24 millert Exp $
d46 1
a52 1
    char *desc;
d72 2
d108 6
a113 5
#define I_SET_HOME		18
#define I_PATH_INFO		19
#define I_FQDN			20
#define I_INSULTS		21
#define I_REQUIRETTY		22
d116 5
a120 5
#define	I_LOGLEN	23	/* wrap log file line after N chars */
#define	I_TS_TIMEOUT	24	/* timestamp stale after N minutes */
#define	I_PW_TIMEOUT	25	/* exit if pass not entered in N minutes */
#define	I_PW_TRIES	26	/* exit after N bad password tries */
#define	I_UMASK		27	/* umask to use or 0777 to use user's */
d123 19
a141 11
#define	I_LOGFILE	28	/* path to logfile (or NULL for none) */
#define	I_MAILERPATH	29	/* path to sendmail or other mailer */
#define	I_MAILERFLAGS	30	/* flags to pass to the mailer */
#define	I_MAILTO	31	/* who to send bitch mail to */
#define	I_MAILSUB	32	/* subject line of mail msg */
#define	I_BADPASS_MSG	33	/* what to say when passwd is wrong */
#define	I_TIMESTAMPDIR	34	/* path to timestamp dir */
#define	I_EXEMPT_GRP	35	/* no password or PATH override for these */
#define	I_PASSPROMPT	36	/* password prompt */
#define	I_RUNAS_DEF	37	/* default user to run commands as */
#define	I_SECURE_PATH	38	/* set $PATH to this if not NULL */
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
 * $Sudo: defaults.h,v 1.7 1999/10/11 16:24:02 millert Exp $
d106 5
a110 6
#define I_SHELL_NOARGS		18
#define I_SET_HOME		19
#define I_PATH_INFO		20
#define I_FQDN			21
#define I_INSULTS		22
#define I_REQUIRETTY		23
d113 5
a117 5
#define	I_LOGLEN	24	/* wrap log file line after N chars */
#define	I_TS_TIMEOUT	25	/* timestamp stale after N minutes */
#define	I_PW_TIMEOUT	26	/* exit if pass not entered in N minutes */
#define	I_PW_TRIES	27	/* exit after N bad password tries */
#define	I_UMASK		28	/* umask to use or 0777 to use user's */
d120 11
a130 11
#define	I_LOGFILE	29	/* path to logfile (or NULL for none) */
#define	I_MAILERPATH	30	/* path to sendmail or other mailer */
#define	I_MAILERFLAGS	31	/* flags to pass to the mailer */
#define	I_MAILTO	32	/* who to send bitch mail to */
#define	I_MAILSUB	33	/* subject line of mail msg */
#define	I_BADPASS_MSG	34	/* what to say when passwd is wrong */
#define	I_TIMESTAMPDIR	35	/* path to timestamp dir */
#define	I_EXEMPT_GRP	36	/* no password or PATH override for these */
#define	I_PASSPROMPT	37	/* password prompt */
#define	I_RUNAS_DEF	38	/* default user to run commands as */
#define	I_SECURE_PATH	39	/* set $PATH to this if not NULL */
@


1.1.1.1
log
@sudo 1.6, now with a BSD license
@
text
@@
