head	1.12;
access;
symbols
	OPENBSD_5_7:1.11.0.18
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.22
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.20
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.16
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.14
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.12
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.10
	OPENBSD_5_0:1.11.0.8
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.6
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.4
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.6
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.2
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.9.0.6
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.4
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.8.0.10
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.8
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.6
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.4
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.2
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.1.1.1.0.8
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	SUDO_1_6_0:1.1.1.1
	COURTESAN:1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2015.07.03.21.51.54;	author millert;	state dead;
branches;
next	1.11;
commitid	8ra5qnWqy2bUhcZn;

1.11
date	2010.03.04.12.21.36;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2008.11.14.11.58.08;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2007.07.26.16.10.15;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2004.09.28.15.10.50;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.04.19.21.57.17;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.03.19.15.34;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.03.15.21.23.53;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.25.15.49.03;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.08.15.44.25;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.03.03.49.16;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.11.18.16.29.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.11.18.16.29.01;	author millert;	state Exp;
branches
	1.1.1.1.6.1
	1.1.1.1.8.1;
next	;

1.1.1.1.6.1
date	2002.01.18.17.20.22;	author millert;	state Exp;
branches;
next	;

1.1.1.1.8.1
date	2002.01.18.16.14.44;	author millert;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Remove sudo, it is now in ports.
@
text
@/*
 * Copyright (c) 1996, 1998-2005, 2008
 *	Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F39502-99-1-0512.
 */

#ifndef _SUDO_COMPAT_H
#define _SUDO_COMPAT_H

/*
 * Macros that may be missing on some Operating Systems
 */

/* Deal with ANSI stuff reasonably.  */
#ifndef  __P
# if defined (__cplusplus) || defined (__STDC__)
#  define __P(args)		args
# else
#  define __P(args)		()
# endif
#endif /* __P */

/* Define away __attribute__ for non-gcc or old gcc */
#if !defined(__GNUC__) || __GNUC__ < 2 || __GNUC__ == 2 && __GNUC_MINOR__ < 5
# define __attribute__(x)
#endif

/* For silencing gcc warnings about rcsids */
#ifndef __unused
# if defined(__GNUC__) && (__GNUC__ > 2 || __GNUC__ == 2 && __GNUC_MINOR__ > 7)
#  define __unused	__attribute__((__unused__))
# else
#  define __unused
# endif
#endif

/* For catching format string mismatches */
#ifndef __printflike
# if defined(__GNUC__) && (__GNUC__ > 2 || __GNUC__ == 2 && __GNUC_MINOR__ >= 7)
#  define __printflike(f, v) 	__attribute__((__format__ (__printf__, f, v)))
# else
#  define __printflike(f, v)
# endif
#endif

/*
 * Some systems lack full limit definitions.
 */
#ifndef OPEN_MAX
# define OPEN_MAX	256
#endif

#ifndef INT_MAX
# define INT_MAX	0x7fffffff
#endif

#ifndef PATH_MAX
# ifdef MAXPATHLEN
#  define PATH_MAX		MAXPATHLEN
# else
#  ifdef _POSIX_PATH_MAX
#   define PATH_MAX		_POSIX_PATH_MAX
#  else
#   define PATH_MAX		1024
#  endif
# endif
#endif

#ifndef MAXHOSTNAMELEN
# define MAXHOSTNAMELEN		64
#endif

/*
 * Posix versions for those without...
 */
#ifndef _S_IFMT
# define _S_IFMT		S_IFMT
#endif /* _S_IFMT */
#ifndef _S_IFREG
# define _S_IFREG		S_IFREG
#endif /* _S_IFREG */
#ifndef _S_IFDIR
# define _S_IFDIR		S_IFDIR
#endif /* _S_IFDIR */
#ifndef _S_IFLNK
# define _S_IFLNK		S_IFLNK
#endif /* _S_IFLNK */
#ifndef S_ISREG
# define S_ISREG(m)		(((m) & _S_IFMT) == _S_IFREG)
#endif /* S_ISREG */
#ifndef S_ISDIR
# define S_ISDIR(m)		(((m) & _S_IFMT) == _S_IFDIR)
#endif /* S_ISDIR */

/*
 * Some OS's may not have this.
 */
#ifndef S_IRWXU
# define S_IRWXU		0000700		/* rwx for owner */
#endif /* S_IRWXU */

/*
 * These should be defined in <unistd.h> but not everyone has them.
 */
#ifndef STDIN_FILENO
# define	STDIN_FILENO	0
#endif
#ifndef STDOUT_FILENO
# define	STDOUT_FILENO	1
#endif
#ifndef STDERR_FILENO
# define	STDERR_FILENO	2
#endif

/*
 * These should be defined in <unistd.h> but not everyone has them.
 */
#ifndef SEEK_SET
# define	SEEK_SET	0
#endif
#ifndef SEEK_CUR
# define	SEEK_CUR	1
#endif
#ifndef SEEK_END
# define	SEEK_END	2
#endif

/*
 * BSD defines these in <sys/param.h> but others may not.
 */
#ifndef MIN
# define MIN(a,b) (((a)<(b))?(a):(b))
#endif
#ifndef MAX
# define MAX(a,b) (((a)>(b))?(a):(b))
#endif

/*
 * Simple isblank() macro and function for systems without it.
 */
#ifndef HAVE_ISBLANK
int isblank __P((int));
# define isblank(_x)	((_x) == ' ' || (_x) == '\t')
#endif

/*
 * Old BSD systems lack strchr(), strrchr(), memset() and memcpy()
 */
#if !defined(HAVE_STRCHR) && !defined(strchr)
# define strchr(_s, _c)	index(_s, _c)
#endif
#if !defined(HAVE_STRRCHR) && !defined(strrchr)
# define strrchr(_s, _c)	rindex(_s, _c)
#endif
#if !defined(HAVE_MEMCPY) && !defined(memcpy)
# define memcpy(_d, _s, _n)	(bcopy(_s, _d, _n))
#endif
#if !defined(HAVE_MEMSET) && !defined(memset)
# define memset(_s, _x, _n)	(bzero(_s, _n))
#endif

/*
 * NCR's SVr4 has _innetgr(3) instead of innetgr(3) for some reason.
 */
#ifdef HAVE__INNETGR
# define innetgr(n, h, u, d)	(_innetgr(n, h, u, d))
# define HAVE_INNETGR 1
#endif /* HAVE__INNETGR */

/*
 * On POSIX systems, O_NOCTTY is the default so some OS's may lack this define.
 */
#ifndef O_NOCTTY
# define O_NOCTTY	0
#endif /* O_NOCTTY */

/*
 * Emulate POSIX signals via sigvec(2)
 */
#ifndef HAVE_SIGACTION
# define SA_ONSTACK	SV_ONSTACK
# define SA_RESTART	SV_INTERRUPT		/* opposite effect */
# define SA_RESETHAND	SV_RESETHAND
# define sa_handler	sv_handler
# define sa_mask	sv_mask
# define sa_flags	sv_flags
typedef struct sigvec sigaction_t;
typedef int sigset_t;
int sigaction __P((int sig, const sigaction_t *act, sigaction_t *oact));
int sigemptyset __P((sigset_t *));
int sigfillset __P((sigset_t *));
int sigaddset __P((sigset_t *, int));
int sigdelset __P((sigset_t *, int));
int sigismember __P((sigset_t *, int));
int sigprocmask __P((int, const sigset_t *, sigset_t *));
#endif

/*
 * Extra sugar for POSIX signals to deal with the above emulation
 * as well as the fact that SunOS has a SA_INTERRUPT flag.
 */
#ifdef HAVE_SIGACTION
# ifndef HAVE_SIGACTION_T
typedef struct sigaction sigaction_t;
# endif
# ifndef SA_INTERRUPT
#  define SA_INTERRUPT	0
# endif
# ifndef SA_RESTART
#  define SA_RESTART	0
# endif
#endif

/*
 * If dirfd() does not exists, hopefully dd_fd does.
 */
#if !defined(HAVE_DIRFD) && defined(HAVE_DD_FD)
# define dirfd(_d)	((_d)->dd_fd)
# define HAVE_DIRFD
#endif

/*
 * Define futimes() in terms of futimesat() if needed.
 */
#if !defined(HAVE_FUTIMES) && defined(HAVE_FUTIMESAT)
# define futimes(_f, _tv)	futimesat(_f, NULL, _tv)
# define HAVE_FUTIMES
#endif

/*
 * If we lack getprogname(), emulate with __progname if possible.
 * Otherwise, add a prototype for use with our own getprogname.c.
 */
#ifndef HAVE_GETPROGNAME
# ifdef HAVE___PROGNAME
extern const char *__progname;
#  define getprogname()          (__progname)
# else
const char *getprogname __P((void));
#endif /* HAVE___PROGNAME */
#endif /* !HAVE_GETPROGNAME */

#ifndef timespecclear
# define timespecclear(ts)	(ts)->tv_sec = (ts)->tv_nsec = 0
#endif
#ifndef timespecisset
# define timespecisset(ts)	((ts)->tv_sec || (ts)->tv_nsec)
#endif
#ifndef timespecsub
# define timespecsub(minuend, subrahend, difference)			       \
    do {								       \
	    (difference)->tv_sec = (minuend)->tv_sec - (subrahend)->tv_sec;    \
	    (difference)->tv_nsec = (minuend)->tv_nsec - (subrahend)->tv_nsec; \
	    if ((difference)->tv_nsec < 0) {				       \
		    (difference)->tv_nsec += 1000000000L;		       \
		    (difference)->tv_sec--;				       \
	    }								       \
    } while (0)
#endif

#endif /* _SUDO_COMPAT_H */
@


1.11
log
@Remove old $Sudo$ tags; the main sudo tree no longer lives in cvs.
@
text
@@


1.10
log
@Upgrade to sudo 1.7.  See the WHATSNEW files for details.
@
text
@a19 2
 *
 * $Sudo: compat.h,v 1.90 2008/11/09 14:13:12 millert Exp $
@


1.9
log
@Update to sudo 1.6.9p1.  Note that the environment handling in sudo
1.6.9 has changed relative to older versions.  Sudo now starts
commands with a minimal environment containing the variables in the
env_keep and env_check lists.  This behavior is configurable in the
sudoers file.  Please see the "SECURITY NOTES" section in the sudo
manual.
@
text
@d2 2
a3 1
 * Copyright (c) 1996, 1998-2005 Todd C. Miller <Todd.Miller@@courtesan.com>
d21 1
a21 1
 * $Sudo: compat.h,v 1.76.2.4 2007/06/12 01:28:41 millert Exp $
d44 1
a44 1
 
d48 1
a48 1
#  define __unused      __attribute__((__unused__))
d57 1
a57 1
#  define __printflike(f, v)    __attribute__((__format__ (__printf__, f, v)))
d156 1
a156 1
 * Simple isblank() macro for systems without it.
d159 1
@


1.8
log
@Update to sudo 1.6.8p1
@
text
@d2 1
a2 1
 * Copyright (c) 1996, 1998-2004 Todd C. Miller <Todd.Miller@@courtesan.com>
d20 1
a20 1
 * $Sudo: compat.h,v 1.80 2004/09/10 16:31:15 millert Exp $
d39 23
a256 7

#ifndef HAVE_TIMESPEC
struct timespec {
    time_t	tv_sec;
    long	tv_nsec;
};
#endif /* !HAVE_TIMESPEC */
@


1.7
log
@sync w/ the sudo cvs tree and sudo 1.6.7p4
@
text
@d2 1
a2 2
 * Copyright (c) 1996, 1998-2003 Todd C. Miller <Todd.Miller@@courtesan.com>
 * All rights reserved.
d4 3
a6 3
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
d8 7
a14 24
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * 4. Products derived from this software may not be called "Sudo" nor
 *    may "Sudo" appear in their names without specific prior written
 *    permission from the author.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d20 1
a20 1
 * $Sudo: compat.h,v 1.67 2003/04/16 00:42:09 millert Exp $
d40 1
a40 1
 * Some systems (ie ISC V/386) do not define MAXPATHLEN even in param.h
d42 18
a59 2
#ifndef MAXPATHLEN
# define MAXPATHLEN		1024
a61 3
/*
 * Some systems do not define MAXHOSTNAMELEN.
 */
a66 8
 * 4.2BSD lacks FD_* macros (we only use FD_SET and FD_ZERO)
 */
#ifndef FD_SETSIZE
# define FD_SET(fd, fds)	((fds) -> fds_bits[0] |= (1 << (fd)))
# define FD_ZERO(fds)		((fds) -> fds_bits[0] = 0)
#endif /* !FD_SETSIZE */

/*
a95 7
 * In case this is not defined in <sys/types.h> or <sys/select.h>
 */
#ifndef howmany
# define howmany(x, y)	(((x) + ((y) - 1)) / (y))
#endif

/*
d207 1
a207 2
 * HP-UX 9.x has RLIMIT_* but no RLIM_INFINITY.
 * Using -1 works because we only check for RLIM_INFINITY and do not set it.
d209 11
a219 2
#ifndef RLIM_INFINITY
# define RLIM_INFINITY	(-1)
d234 25
@


1.6
log
@Sync with my sudo cvs repo:
 o update to sudo 1.6.7p2
 o use warn/err throughout
@
text
@d34 5
a38 1
 * $Sudo: compat.h,v 1.66 2003/04/02 18:25:19 millert Exp $
d218 1
a218 1
# ifndef SA_INTERRUPT 
d221 1
a221 1
# ifndef SA_RESTART 
@


1.5
log
@update to what will soon be sudo 1.6.7
@
text
@d34 1
a34 1
 * $Sudo: compat.h,v 1.65 2003/03/15 20:31:02 millert Exp $
d229 13
@


1.4
log
@Update to sudo 1.6.6
@
text
@d2 1
a2 1
 * Copyright (c) 1996, 1998-2002 Todd C. Miller <Todd.Miller@@courtesan.com>
d34 1
a34 1
 * $Sudo: compat.h,v 1.63 2002/01/25 18:38:22 millert Exp $
a168 26

/*
 * Emulate sete[ug]id() via setres[ug]id(2) or setre[ug]id(2)
 */
#ifndef HAVE_SETEUID
# ifdef __hpux
#  define seteuid(_EUID)	(setresuid((uid_t) -1, _EUID, (uid_t) -1))
# else
#  define seteuid(_EUID)	(setreuid((uid_t) -1, _EUID))
# endif /* __hpux */
#endif /* HAVE_SETEUID */
#ifndef HAVE_SETEGID
# ifdef __hpux
#  define setegid(_EGID)	(setresgid((gid_t) -1, _EGID, (gid_t) -1))
# else
#  define setegid(_EGID)	(setregid((gid_t) -1, _EGID))
# endif /* __hpux */
#endif /* HAVE_SETEGID */

/*
 * Emulate setreuid() for HP-UX via setresuid(2)
 */
#if !defined(HAVE_SETREUID) && defined(__hpux)
# define setreuid(_RUID, _EUID)	(setresuid(_RUID, _EUID, (uid_t) -1))
# define HAVE_SETREUID
#endif /* !HAVE_SETEUID && __hpux */
@


1.3
log
@sync with sudo 1.6.4rc2
@
text
@d34 1
a34 1
 * $Sudo: compat.h,v 1.62 2002/01/08 15:00:18 millert Exp $
d246 8
@


1.2
log
@Update to sudo 1.6.4
@
text
@d2 1
a2 1
 * Copyright (c) 1996, 1998-2000 Todd C. Miller <Todd.Miller@@courtesan.com>
d34 1
a34 1
 * $Sudo: compat.h,v 1.61 2002/01/02 22:37:19 millert Exp $
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * Copyright (c) 1996, 1998, 1999 Todd C. Miller <Todd.Miller@@courtesan.com>
d34 1
a34 1
 * $Sudo: compat.h,v 1.54 1999/10/08 01:12:49 millert Exp $
d148 24
a171 1
 * Emulate seteuid() for HP-UX via setresuid(2) and seteuid(2) for others.
d180 23
d210 37
@


1.1.1.1
log
@sudo 1.6, now with a BSD license
@
text
@@


1.1.1.1.6.1
log
@update to sudo 1.6.5p1
@
text
@d2 1
a2 1
 * Copyright (c) 1996, 1998-2002 Todd C. Miller <Todd.Miller@@courtesan.com>
d34 1
a34 1
 * $Sudo: compat.h,v 1.62 2002/01/08 15:00:18 millert Exp $
d148 1
a148 24
 * Simple isblank() macro for systems without it.
 */
#ifndef HAVE_ISBLANK
# define isblank(_x)	((_x) == ' ' || (_x) == '\t')
#endif

/*
 * Old BSD systems lack strchr(), strrchr(), memset() and memcpy()
 */
#if !defined(HAVE_STRCHR) && !defined(strchr)
# define strchr(_s, _c)	index(_s, _c)
#endif
#if !defined(HAVE_STRRCHR) && !defined(strrchr)
# define strrchr(_s, _c)	rindex(_s, _c)
#endif
#if !defined(HAVE_MEMCPY) && !defined(memcpy)
# define memcpy(_d, _s, _n)	(bcopy(_s, _d, _n))
#endif
#if !defined(HAVE_MEMSET) && !defined(memset)
# define memset(_s, _x, _n)	(bzero(_s, _n))
#endif

/*
 * Emulate sete[ug]id() via setres[ug]id(2) or setre[ug]id(2)
a156 23
#ifndef HAVE_SETEGID
# ifdef __hpux
#  define setegid(_EGID)	(setresgid((gid_t) -1, _EGID, (gid_t) -1))
# else
#  define setegid(_EGID)	(setregid((gid_t) -1, _EGID))
# endif /* __hpux */
#endif /* HAVE_SETEGID */

/*
 * Emulate setreuid() for HP-UX via setresuid(2)
 */
#if !defined(HAVE_SETREUID) && defined(__hpux)
# define setreuid(_RUID, _EUID)	(setresuid(_RUID, _EUID, (uid_t) -1))
# define HAVE_SETREUID
#endif /* !HAVE_SETEUID && __hpux */

/*
 * NCR's SVr4 has _innetgr(3) instead of innetgr(3) for some reason.
 */
#ifdef HAVE__INNETGR
# define innetgr(n, h, u, d)	(_innetgr(n, h, u, d))
# define HAVE_INNETGR 1
#endif /* HAVE__INNETGR */
a163 37

/*
 * Emulate POSIX signals via sigvec(2)
 */
#ifndef HAVE_SIGACTION
# define SA_ONSTACK	SV_ONSTACK
# define SA_RESTART	SV_INTERRUPT		/* opposite effect */
# define SA_RESETHAND	SV_RESETHAND
# define sa_handler	sv_handler
# define sa_mask	sv_mask
# define sa_flags	sv_flags
typedef struct sigvec sigaction_t;
typedef int sigset_t;
int sigaction __P((int sig, const sigaction_t *act, sigaction_t *oact));
int sigemptyset __P((sigset_t *));
int sigfillset __P((sigset_t *));
int sigaddset __P((sigset_t *, int));
int sigdelset __P((sigset_t *, int));
int sigismember __P((sigset_t *, int));
int sigprocmask __P((int, const sigset_t *, sigset_t *));
#endif

/*
 * Extra sugar for POSIX signals to deal with the above emulation
 * as well as the fact that SunOS has a SA_INTERRUPT flag.
 */
#ifdef HAVE_SIGACTION
# ifndef HAVE_SIGACTION_T
typedef struct sigaction sigaction_t;
# endif
# ifndef SA_INTERRUPT 
#  define SA_INTERRUPT	0
# endif
# ifndef SA_RESTART 
#  define SA_RESTART	0
# endif
#endif
@


1.1.1.1.8.1
log
@update to sudo 1.6.5p1
@
text
@d2 1
a2 1
 * Copyright (c) 1996, 1998-2002 Todd C. Miller <Todd.Miller@@courtesan.com>
d34 1
a34 1
 * $Sudo: compat.h,v 1.62 2002/01/08 15:00:18 millert Exp $
d148 1
a148 24
 * Simple isblank() macro for systems without it.
 */
#ifndef HAVE_ISBLANK
# define isblank(_x)	((_x) == ' ' || (_x) == '\t')
#endif

/*
 * Old BSD systems lack strchr(), strrchr(), memset() and memcpy()
 */
#if !defined(HAVE_STRCHR) && !defined(strchr)
# define strchr(_s, _c)	index(_s, _c)
#endif
#if !defined(HAVE_STRRCHR) && !defined(strrchr)
# define strrchr(_s, _c)	rindex(_s, _c)
#endif
#if !defined(HAVE_MEMCPY) && !defined(memcpy)
# define memcpy(_d, _s, _n)	(bcopy(_s, _d, _n))
#endif
#if !defined(HAVE_MEMSET) && !defined(memset)
# define memset(_s, _x, _n)	(bzero(_s, _n))
#endif

/*
 * Emulate sete[ug]id() via setres[ug]id(2) or setre[ug]id(2)
a156 23
#ifndef HAVE_SETEGID
# ifdef __hpux
#  define setegid(_EGID)	(setresgid((gid_t) -1, _EGID, (gid_t) -1))
# else
#  define setegid(_EGID)	(setregid((gid_t) -1, _EGID))
# endif /* __hpux */
#endif /* HAVE_SETEGID */

/*
 * Emulate setreuid() for HP-UX via setresuid(2)
 */
#if !defined(HAVE_SETREUID) && defined(__hpux)
# define setreuid(_RUID, _EUID)	(setresuid(_RUID, _EUID, (uid_t) -1))
# define HAVE_SETREUID
#endif /* !HAVE_SETEUID && __hpux */

/*
 * NCR's SVr4 has _innetgr(3) instead of innetgr(3) for some reason.
 */
#ifdef HAVE__INNETGR
# define innetgr(n, h, u, d)	(_innetgr(n, h, u, d))
# define HAVE_INNETGR 1
#endif /* HAVE__INNETGR */
a163 37

/*
 * Emulate POSIX signals via sigvec(2)
 */
#ifndef HAVE_SIGACTION
# define SA_ONSTACK	SV_ONSTACK
# define SA_RESTART	SV_INTERRUPT		/* opposite effect */
# define SA_RESETHAND	SV_RESETHAND
# define sa_handler	sv_handler
# define sa_mask	sv_mask
# define sa_flags	sv_flags
typedef struct sigvec sigaction_t;
typedef int sigset_t;
int sigaction __P((int sig, const sigaction_t *act, sigaction_t *oact));
int sigemptyset __P((sigset_t *));
int sigfillset __P((sigset_t *));
int sigaddset __P((sigset_t *, int));
int sigdelset __P((sigset_t *, int));
int sigismember __P((sigset_t *, int));
int sigprocmask __P((int, const sigset_t *, sigset_t *));
#endif

/*
 * Extra sugar for POSIX signals to deal with the above emulation
 * as well as the fact that SunOS has a SA_INTERRUPT flag.
 */
#ifdef HAVE_SIGACTION
# ifndef HAVE_SIGACTION_T
typedef struct sigaction sigaction_t;
# endif
# ifndef SA_INTERRUPT 
#  define SA_INTERRUPT	0
# endif
# ifndef SA_RESTART 
#  define SA_RESTART	0
# endif
#endif
@

