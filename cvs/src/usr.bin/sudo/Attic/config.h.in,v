head	1.31;
access;
symbols
	OPENBSD_5_7:1.30.0.18
	OPENBSD_5_7_BASE:1.30
	OPENBSD_5_6:1.30.0.22
	OPENBSD_5_6_BASE:1.30
	OPENBSD_5_5:1.30.0.20
	OPENBSD_5_5_BASE:1.30
	OPENBSD_5_4:1.30.0.16
	OPENBSD_5_4_BASE:1.30
	OPENBSD_5_3:1.30.0.14
	OPENBSD_5_3_BASE:1.30
	OPENBSD_5_2:1.30.0.12
	OPENBSD_5_2_BASE:1.30
	OPENBSD_5_1_BASE:1.30
	OPENBSD_5_1:1.30.0.10
	OPENBSD_5_0:1.30.0.8
	OPENBSD_5_0_BASE:1.30
	OPENBSD_4_9:1.30.0.6
	OPENBSD_4_9_BASE:1.30
	OPENBSD_4_8:1.30.0.4
	OPENBSD_4_8_BASE:1.30
	OPENBSD_4_7:1.30.0.2
	OPENBSD_4_7_BASE:1.30
	OPENBSD_4_6:1.29.0.4
	OPENBSD_4_6_BASE:1.29
	OPENBSD_4_5:1.27.0.2
	OPENBSD_4_5_BASE:1.27
	OPENBSD_4_4:1.25.0.2
	OPENBSD_4_4_BASE:1.25
	OPENBSD_4_3:1.24.0.2
	OPENBSD_4_3_BASE:1.24
	OPENBSD_4_2:1.18.0.2
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.16.0.10
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.8
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.6
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.4
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.2
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.14.0.4
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.2
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.10.0.2
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	SUDO_1_6_0:1.1.1.1
	COURTESAN:1.1.1;
locks; strict;
comment	@# @;


1.31
date	2015.07.03.21.51.54;	author millert;	state dead;
branches;
next	1.30;
commitid	8ra5qnWqy2bUhcZn;

1.30
date	2010.02.13.14.20.14;	author millert;	state Exp;
branches;
next	1.29;

1.29
date	2009.06.21.14.48.41;	author millert;	state Exp;
branches;
next	1.28;

1.28
date	2009.04.11.11.48.06;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	2008.12.09.22.20.32;	author millert;	state Exp;
branches;
next	1.26;

1.26
date	2008.11.14.11.58.08;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2008.07.31.16.44.03;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	2008.01.21.19.44.29;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2008.01.07.14.10.08;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	2007.12.21.01.16.52;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	2007.12.03.15.09.47;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2007.10.25.16.08.12;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2007.10.17.04.26.04;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2007.08.15.14.22.39;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2007.07.26.16.10.15;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2004.11.29.17.29.04;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2004.09.28.15.10.51;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2004.01.12.19.13.20;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2003.04.19.21.57.17;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2003.04.07.03.31.09;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.04.03.19.15.34;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.03.15.21.23.53;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.23.23.03.24;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.17.01.03.21;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.01.16.18.09.13;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.03.03.49.16;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2000.11.21.17.58.43;	author millert;	state Exp;
branches
	1.5.2.1
	1.5.4.1;
next	1.4;

1.4
date	2000.03.27.03.44.38;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.24.04.22.52;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.12.10.06.45.11;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.11.18.16.29.01;	author millert;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.11.18.16.29.01;	author millert;	state Exp;
branches;
next	;

1.5.2.1
date	2002.01.18.17.20.22;	author millert;	state Exp;
branches;
next	;

1.5.4.1
date	2002.01.18.16.14.45;	author millert;	state Exp;
branches;
next	;


desc
@@


1.31
log
@Remove sudo, it is now in ports.
@
text
@/* config.h.in.  Generated from configure.in by autoheader.  */

#ifndef _SUDO_CONFIG_H
#define _SUDO_CONFIG_H

/* Define to `signed' or nothing if compiler does not support a signed
   type qualifier. */
#undef __signed

/* Define to 1 if the `syslog' function returns a non-zero int to denote
   failure. */
#undef BROKEN_SYSLOG

/* Define to 1 if you want the insults from the "classic" version sudo. */
#undef CLASSIC_INSULTS

/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#undef CRAY_STACKSEG_END

/* Define to 1 if you want insults culled from the twisted minds of CSOps. */
#undef CSOPS_INSULTS

/* Define to 1 if using `alloca.c'. */
#undef C_ALLOCA

/* Define to 1 if you want sudo to display "command not allowed" instead of
   "command not found" when a command cannot be found. */
#undef DONT_LEAK_PATH_INFO

/* A colon-separated list of pathnames to be used as the editor for visudo. */
#undef EDITOR

/* Define to enable environment debugging. */
#undef ENV_DEBUG

/* Define to 1 if you want visudo to honor the EDITOR and VISUAL env
   variables. */
#undef ENV_EDITOR

/* If defined, users in this group need not enter a passwd (ie "sudo"). */
#undef EXEMPTGROUP

/* Define to 1 if you want to require fully qualified hosts in sudoers. */
#undef FQDN

/* Define to 1 if you want insults from the "Goon Show". */
#undef GOONS_INSULTS

/* Define to 1 if you want 2001-like insults. */
#undef HAL_INSULTS

/* Define to 1 if you use AFS. */
#undef HAVE_AFS

/* Define to 1 if you use AIX general authentication. */
#undef HAVE_AIXAUTH

/* Define to 1 if you have `alloca', as a function or macro. */
#undef HAVE_ALLOCA

/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).
   */
#undef HAVE_ALLOCA_H

/* Define to 1 if you have the `asprintf' function. */
#undef HAVE_ASPRINTF

/* Define to 1 if you have the `bigcrypt' function. */
#undef HAVE_BIGCRYPT

/* Define to 1 if you use BSD authentication. */
#undef HAVE_BSD_AUTH_H

/* Define to 1 to enable BSM auditing. */
#undef HAVE_BSM_AUDIT

/* Define to 1 if you have the `closefrom' function. */
#undef HAVE_CLOSEFROM

/* Define to 1 if you use OSF DCE. */
#undef HAVE_DCE

/* Define to 1 if your `DIR' contains dd_fd. */
#undef HAVE_DD_FD

/* Define to 1 if you have the `dgettext' function. */
#undef HAVE_DGETTEXT

/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.
   */
#undef HAVE_DIRENT_H

/* Define to 1 if you have the `dirfd' function or macro. */
#undef HAVE_DIRFD

/* Define to 1 if you have the `dispcrypt' function. */
#undef HAVE_DISPCRYPT

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* Define to 1 if your glob.h defines the GLOB_BRACE and GLOB_TILDE flags. */
#undef HAVE_EXTENDED_GLOB

/* Define to 1 if your system has the F_CLOSEM fcntl. */
#undef HAVE_FCNTL_CLOSEM

/* Define to 1 if you have the `flock' function. */
#undef HAVE_FLOCK

/* Define to 1 if you have the `fnmatch' function. */
#undef HAVE_FNMATCH

/* Define to 1 if you have the `freeifaddrs' function. */
#undef HAVE_FREEIFADDRS

/* Define to 1 if you have the `fstat' function. */
#undef HAVE_FSTAT

/* Define to 1 if you have the `futime' function. */
#undef HAVE_FUTIME

/* Define to 1 if you have the `futimes' function. */
#undef HAVE_FUTIMES

/* Define to 1 if you have the `futimesat' function. */
#undef HAVE_FUTIMESAT

/* Define to 1 if you use the FWTK authsrv daemon. */
#undef HAVE_FWTK

/* Define to 1 if you have the `getaddrinfo' function. */
#undef HAVE_GETADDRINFO

/* Define to 1 if you have the `getauthuid' function. (ULTRIX 4.x shadow
   passwords) */
#undef HAVE_GETAUTHUID

/* Define to 1 if you have the `getcwd' function. */
#undef HAVE_GETCWD

/* Define to 1 if you have the `getdomainname' function. */
#undef HAVE_GETDOMAINNAME

/* Define to 1 if you have the `getgroups' function. */
#undef HAVE_GETGROUPS

/* Define to 1 if you have the `getifaddrs' function. */
#undef HAVE_GETIFADDRS

/* Define to 1 if you have the `getprogname' function. */
#undef HAVE_GETPROGNAME

/* Define to 1 if you have the `getprpwnam' function. (SecureWare-style shadow
   passwords) */
#undef HAVE_GETPRPWNAM

/* Define to 1 if you have the `getpwanam' function. (SunOS 4.x shadow
   passwords) */
#undef HAVE_GETPWANAM

/* Define to 1 if you have the `getspnam' function (SVR4-style shadow
   passwords) */
#undef HAVE_GETSPNAM

/* Define to 1 if you have the `getspwuid' function. (HP-UX <= 9.X shadow
   passwords) */
#undef HAVE_GETSPWUID

/* Define to 1 if you have the `gettimeofday' function. */
#undef HAVE_GETTIMEOFDAY

/* Define to 1 if you have the `getuserattr' function. */
#undef HAVE_GETUSERATTR

/* Define to 1 if you have the `glob' function. */
#undef HAVE_GLOB

/* Define to 1 if you have the <gssapi/gssapi_krb5.h> header file. */
#undef HAVE_GSSAPI_GSSAPI_KRB5_H

/* Define to 1 if you have the `gss_krb5_ccache_name' function. */
#undef HAVE_GSS_KRB5_CCACHE_NAME

/* Define to 1 if your Kerberos is Heimdal. */
#undef HAVE_HEIMDAL

/* Define to 1 if <netinet/in.h> contains struct in6_addr. */
#undef HAVE_IN6_ADDR

/* Define to 1 if you have the `initgroups' function. */
#undef HAVE_INITGROUPS

/* Define to 1 if you have the `initprivs' function. */
#undef HAVE_INITPRIVS

/* Define to 1 if you have the `innetgr' function. */
#undef HAVE_INNETGR

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define if you have isblank(3). */
#undef HAVE_ISBLANK

/* Define to 1 if you have the `iscomsec' function. (HP-UX >= 10.x check for
   shadow enabled) */
#undef HAVE_ISCOMSEC

/* Define to 1 if you have the `issecure' function. (SunOS 4.x check for
   shadow enabled) */
#undef HAVE_ISSECURE

/* Define to 1 if you use Kerberos IV. */
#undef HAVE_KERB4

/* Define to 1 if you use Kerberos V. */
#undef HAVE_KERB5

/* Define to 1 if you have the `krb5_get_init_creds_opt_alloc' function. */
#undef HAVE_KRB5_GET_INIT_CREDS_OPT_ALLOC

/* Define to 1 if your `krb5_get_init_creds_opt_alloc' function takes two arguments. */
#undef HAVE_KRB5_GET_INIT_CREDS_OPT_FREE_TWO_ARGS

/* Define to 1 if you have the `krb5_init_secure_context' function. */
#undef HAVE_KRB5_INIT_SECURE_CONTEXT

/* Define to 1 if you have the `krb5_verify_user' function. */
#undef HAVE_KRB5_VERIFY_USER

/* Define to 1 if your LDAP needs <lber.h>. (OpenLDAP does not) */
#undef HAVE_LBER_H

/* Define to 1 if you use LDAP for sudoers. */
#undef HAVE_LDAP

/* Define to 1 if you have the `ldap_create' function. */
#undef HAVE_LDAP_CREATE

/* Define to 1 if you have the `ldap_initialize' function. */
#undef HAVE_LDAP_INITIALIZE

/* Define to 1 if you have the `ldap_sasl_bind_s' function. */
#undef HAVE_LDAP_SASL_BIND_S

/* Define to 1 if you have the `ldap_sasl_interactive_bind_s' function. */
#undef HAVE_LDAP_SASL_INTERACTIVE_BIND_S

/* Define to 1 if you have the `ldap_search_ext_s' function. */
#undef HAVE_LDAP_SEARCH_EXT_S

/* Define to 1 if you have the `ldap_ssl_client_init' function. */
#undef HAVE_LDAP_SSL_CLIENT_INIT

/* Define to 1 if you have the <ldap_ssl.h> header file. */
#undef HAVE_LDAP_SSL_H

/* Define to 1 if you have the `ldap_start_tls_s' function. */
#undef HAVE_LDAP_START_TLS_S

/* Define to 1 if you have the `ldap_start_tls_s_np' function. */
#undef HAVE_LDAP_START_TLS_S_NP

/* Define to 1 if you have the `ldap_str2dn' function. */
#undef HAVE_LDAP_STR2DN

/* Define to 1 if you have the `ldap_unbind_ext_s' function. */
#undef HAVE_LDAP_UNBIND_EXT_S

/* Define to 1 if you have the `ldapssl_init' function. */
#undef HAVE_LDAPSSL_INIT

/* Define to 1 if you have the `ldapssl_set_strength' function. */
#undef HAVE_LDAPSSL_SET_STRENGTH

/* Define to 1 if you have the `lockf' function. */
#undef HAVE_LOCKF

/* Define to 1 if you have the <login_cap.h> header file. */
#undef HAVE_LOGIN_CAP_H

/* Define if your compiler supports the "long long" type. */
#undef HAVE_LONG_LONG

/* Define to 1 if you have the `lrand48' function. */
#undef HAVE_LRAND48

/* Define to 1 if you have the <malloc.h> header file. */
#undef HAVE_MALLOC_H

/* Define to 1 if you have the `memchr' function. */
#undef HAVE_MEMCHR

/* Define to 1 if you have the `memcpy' function. */
#undef HAVE_MEMCPY

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define to 1 if you have the `memrchr' function. */
#undef HAVE_MEMRCHR

/* Define to 1 if you have the `memset' function. */
#undef HAVE_MEMSET

/* Define to 1 if you have the `mkstemp' function. */
#undef HAVE_MKSTEMP

/* Define to 1 if you have the <mps/ldap_ssl.h> header file. */
#undef HAVE_MPS_LDAP_SSL_H

/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */
#undef HAVE_NDIR_H

/* Define to 1 if you have the <netgroup.h> header file. */
#undef HAVE_NETGROUP_H

/* Define to 1 if you use NRL OPIE. */
#undef HAVE_OPIE

/* Define to 1 if you use PAM authentication. */
#undef HAVE_PAM

/* Define to 1 if you have the <pam/pam_appl.h> header file. */
#undef HAVE_PAM_PAM_APPL_H

/* Define to 1 if you have the <paths.h> header file. */
#undef HAVE_PATHS_H

/* Define to 1 if you have the <project.h> header file. */
#undef HAVE_PROJECT_H

/* Define to 1 if you have the `random' function. */
#undef HAVE_RANDOM

/* Define to 1 if you have the <sasl/sasl.h> header file. */
#undef HAVE_SASL_SASL_H

/* Define if your struct sockadr has an sa_len field. */
#undef HAVE_SA_LEN

/* Define to 1 if you use SecurID for authentication. */
#undef HAVE_SECURID

/* Define to 1 to enable SELinux RBAC support. */
#undef HAVE_SELINUX

/* Define to 1 if you have the `setenv' function. */
#undef HAVE_SETENV

/* Define to 1 if you have the `seteuid' function. */
#undef HAVE_SETEUID

/* Define to 1 if you have the `setlocale' function. */
#undef HAVE_SETLOCALE

/* Define to 1 if you have the `setresuid' function. */
#undef HAVE_SETRESUID

/* Define to 1 if you have the `setreuid' function. */
#undef HAVE_SETREUID

/* Define to 1 if you have the `setrlimit' function. */
#undef HAVE_SETRLIMIT

/* Define to 1 if you have the `setrlimit64' function. */
#undef HAVE_SETRLIMIT64

/* Define to 1 if you have the `setsid' function. */
#undef HAVE_SETSID

/* Define to 1 if you have the `set_auth_parameters' function. */
#undef HAVE_SET_AUTH_PARAMETERS

/* Define to 1 if you have the `sia_ses_init' function. */
#undef HAVE_SIA_SES_INIT

/* Define to 1 if you have the `sigaction' function. */
#undef HAVE_SIGACTION

/* Define to 1 if <signal.h> has the sigaction_t typedef. */
#undef HAVE_SIGACTION_T

/* Define to 1 if you use S/Key. */
#undef HAVE_SKEY

/* Define to 1 if your S/Key library has skeyaccess(). */
#undef HAVE_SKEYACCESS

/* Define to 1 if you have the `snprintf' function. */
#undef HAVE_SNPRINTF

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the `strcasecmp' function. */
#undef HAVE_STRCASECMP

/* Define to 1 if you have the `strchr' function. */
#undef HAVE_STRCHR

/* Define to 1 if you have the `strerror' function. */
#undef HAVE_STRERROR

/* Define to 1 if you have the `strftime' function. */
#undef HAVE_STRFTIME

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the `strlcat' function. */
#undef HAVE_STRLCAT

/* Define to 1 if you have the `strlcpy' function. */
#undef HAVE_STRLCPY

/* Define to 1 if you have the `strrchr' function. */
#undef HAVE_STRRCHR

/* Define to 1 if your struct stat has an st_mtim member */
#undef HAVE_ST_MTIM

/* Define to 1 if your struct stat uses an st__tim union */
#undef HAVE_ST__TIM

/* Define to 1 if your struct stat has an st_mtimespec member */
#undef HAVE_ST_MTIMESPEC

/* Define to 1 if you have the `sysconf' function. */
#undef HAVE_SYSCONF

/* Define to 1 if you have the <sys/bsdtypes.h> header file. */
#undef HAVE_SYS_BSDTYPES_H

/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.
   */
#undef HAVE_SYS_DIR_H

/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.
   */
#undef HAVE_SYS_NDIR_H

/* Define to 1 if you have the <sys/select.h> header file. */
#undef HAVE_SYS_SELECT_H

/* Define to 1 if you have the <sys/sockio.h> header file. */
#undef HAVE_SYS_SOCKIO_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <termios.h> header file and the `tcgetattr'
   function. */
#undef HAVE_TERMIOS_H

/* Define to 1 if you have the <termio.h> header file. */
#undef HAVE_TERMIO_H

/* Define to 1 if you have struct timespec in sys/time.h */
#undef HAVE_TIMESPEC

/* Define to 1 if you have a timespecsub macro or function that takes two
   arguments (not three) */
#undef HAVE_TIMESPECSUB2

/* Define to 1 if you have the `tzset' function. */
#undef HAVE_TZSET

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to 1 if you have the `unsetenv' function. */
#undef HAVE_UNSETENV

/* Define to 1 if you have the `utimes' function. */
#undef HAVE_UTIMES

/* Define to 1 if you have the <utime.h> header file. */
#undef HAVE_UTIME_H

/* Define to 1 if you have the `vasprintf' function. */
#undef HAVE_VASPRINTF

/* Define to 1 if you have the `vsnprintf' function. */
#undef HAVE_VSNPRINTF

/* Define to 1 if you have the `wait3' function. */
#undef HAVE_WAIT3

/* Define to 1 if you have the `waitpid' function. */
#undef HAVE_WAITPID

/* Define to 1 if you have the `_innetgr' function. */
#undef HAVE__INNETGR

/* Define to 1 if your crt0.o defines the __progname symbol for you. */
#undef HAVE___PROGNAME

/* Define to 1 if you want the hostname to be entered into the log file. */
#undef HOST_IN_LOG

/* Define to 1 if you want to ignore '.' and empty PATH elements */
#undef IGNORE_DOT_PATH

/* The message given when a bad password is entered. */
#undef INCORRECT_PASSWORD

/* The name of libvas.so */
#undef LIBVAS_SO

/* The syslog facility sudo will use. */
#undef LOGFAC

/* Define to SLOG_SYSLOG, SLOG_FILE, or SLOG_BOTH. */
#undef LOGGING

/* Define if sizeof(long) == sizeof(long long). */
#undef LONG_IS_QUAD

/* Define to 1 if you want a two line OTP (S/Key or OPIE) prompt. */
#undef LONG_OTP_PROMPT

/* The subject of the mail sent by sudo to the MAILTO user/address. */
#undef MAILSUBJECT

/* The user or email address that sudo mail is sent to. */
#undef MAILTO

/* The max number of chars per log file line (for line wrapping). */
#undef MAXLOGFILELEN

/* Define to the max length of a uid_t in string context (excluding the NUL).
   */
#undef MAX_UID_T_LEN

/* Define to 1 if you don't want sudo to prompt for a password by default. */
#undef NO_AUTHENTICATION

/* Define to 1 if you don't want users to get the lecture the first they user
   sudo. */
#undef NO_LECTURE

/* Define to 1 if you don't want to use sudo's PAM session support. */
#undef NO_PAM_SESSION

/* Define to avoid runing the mailer as root. */
#undef NO_ROOT_MAILER

/* Define to 1 if root should not be allowed to use sudo. */
#undef NO_ROOT_SUDO

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* The default password prompt. */
#undef PASSPROMPT

/* The passwd prompt timeout (in minutes). */
#undef PASSWORD_TIMEOUT

/* Define to 1 to replace politically incorrect insults with less offensive
   ones. */
#undef PC_INSULTS

/* The syslog priority sudo will use for unsuccessful attempts/errors. */
#undef PRI_FAILURE

/* The syslog priority sudo will use for successful attempts. */
#undef PRI_SUCCESS

/* Define to 1 if the `putenv' has a const argument.  */
#undef PUTENV_CONST

/* Define as the return type of signal handlers (`int' or `void'). */
#undef RETSIGTYPE

/* The user sudo should run commands as by default. */
#undef RUNAS_DEFAULT

/* Define to 1 to override the user's path with a built-in one. */
#undef SECURE_PATH

/* Define to 1 to send mail when the user is not allowed to run a command. */
#undef SEND_MAIL_WHEN_NOT_OK

/* Define to 1 to send mail when the user is not allowed to run sudo on this
   host. */
#undef SEND_MAIL_WHEN_NO_HOST

/* Define to 1 to send mail when the user is not in the sudoers file. */
#undef SEND_MAIL_WHEN_NO_USER

/* Define to 1 if you want sudo to start a shell if given no arguments. */
#undef SHELL_IF_NO_ARGS

/* Define to 1 if you want sudo to set $HOME in shell mode. */
#undef SHELL_SETS_HOME

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown */
#undef STACK_DIRECTION

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Define to 1 if the code in interfaces.c does not compile for you. */
#undef STUB_LOAD_INTERFACES

/* The umask that the root-run prog should use. */
#undef SUDO_UMASK

/* The number of minutes before sudo asks for a password again. */
#undef TIMEOUT

/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
#undef TIME_WITH_SYS_TIME

/* The number of tries a user gets to enter their password. */
#undef TRIES_FOR_PASSWORD

/* Define to 1 if the `unsetenv' function returns void instead of `int'. */
#undef UNSETENV_VOID

/* Define to 1 if you want to insult the user for entering an incorrect
   password. */
#undef USE_INSULTS

/* Define to 1 if you use GNU stow packaging. */
#undef USE_STOW

/* Define to 1 if you want a different ticket file for each tty. */
#undef USE_TTY_TICKETS

/* Define to 1 if using a non-unix group lookup implementation. */
#undef USING_NONUNIX_GROUPS

/* Define to avoid using the passwd/shadow file for authentication. */
#undef WITHOUT_PASSWD

/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define if your system lacks the dev_t type. */
#undef dev_t

/* Define to `int' if <sys/types.h> doesn't define. */
#undef gid_t

/* Define if your system lacks the ino_t type. */
#undef ino_t

/* Define to `int' if <sys/types.h> does not define. */
#undef mode_t

/* Define to `int' if <signal.h> does not define. */
#undef sig_atomic_t

/* Define if your system lacks the size_t type. */
#undef size_t

/* Define if your system lacks the ssize_t type. */
#undef ssize_t

/* Define to `int' if <sys/types.h> doesn't define. */
#undef uid_t

/* Define to the type of elements in the array set by `getgroups'.
   Usually this is either `int' or `gid_t'. */
#undef GETGROUPS_T

/* Define to empty if the keyword `volatile' does not work. Warning: valid
   code using `volatile' can become incorrect without. Disable with care. */
#undef volatile

/*
 * Macros to pull sec and nsec parts of mtime from struct stat.
 * We need to be able to convert between timeval and timespec
 * so the last 3 digits of tv_nsec are not significant.
 */
#ifdef HAVE_ST_MTIM
# ifdef HAVE_ST__TIM
#  define mtim_getsec(_x)	((_x).st_mtim.st__tim.tv_sec)
#  define mtim_getnsec(_x)	(((_x).st_mtim.st__tim.tv_nsec / 1000) * 1000)
# else
#  define mtim_getsec(_x)	((_x).st_mtim.tv_sec)
#  define mtim_getnsec(_x)	(((_x).st_mtim.tv_nsec / 1000) * 1000)
# endif
#else
# ifdef HAVE_ST_MTIMESPEC
#  define mtim_getsec(_x)	((_x).st_mtimespec.tv_sec)
#  define mtim_getnsec(_x)	(((_x).st_mtimespec.tv_nsec / 1000) * 1000)
# else
#  define mtim_getsec(_x)	((_x).st_mtime)
#  define mtim_getnsec(_x)	(0)
# endif /* HAVE_ST_MTIMESPEC */
#endif /* HAVE_ST_MTIM */

/*
 * Emulate a subset of waitpid() if we don't have it.
 */
#ifdef HAVE_WAITPID
# define sudo_waitpid(p, s, o)	waitpid(p, s, o)
#else
# ifdef HAVE_WAIT3
#  define sudo_waitpid(p, s, o)	wait3(s, o, NULL)
# endif
#endif

/* GNU stow needs /etc/sudoers to be a symlink. */
#ifdef USE_STOW
# define stat_sudoers	stat
#else
# define stat_sudoers	lstat
#endif

/* Macros to set/clear/test flags. */
#undef SET
#define SET(t, f)	((t) |= (f))
#undef CLR
#define CLR(t, f)	((t) &= ~(f))
#undef ISSET
#define ISSET(t, f)     ((t) & (f))

/* New ANSI-style OS defs for HP-UX and ConvexOS. */
#if defined(hpux) && !defined(__hpux)
# define __hpux		1
#endif /* hpux */

#if defined(convex) && !defined(__convex__)
# define __convex__	1
#endif /* convex */

/* BSD compatibility on some SVR4 systems. */
#ifdef __svr4__
# define BSD_COMP
#endif /* __svr4__ */

#endif /* _SUDO_CONFIG_H */
@


1.30
log
@Update to sudo 1.7.2p3
@
text
@@


1.29
log
@Upgrade to sudo 1.7.2
@
text
@d369 3
@


1.28
log
@Update to sudo 1.7.1
@
text
@d101 3
d517 3
d561 15
d658 3
@


1.27
log
@sync with sudo cvs repo
@
text
@d35 3
d76 3
d252 3
d261 3
d348 3
d478 3
d571 3
d624 3
@


1.26
log
@Upgrade to sudo 1.7.  See the WHATSNEW files for details.
@
text
@d357 2
a358 2
/* Define to 1 if you use SIA authentication. */
#undef HAVE_SIA
@


1.25
log
@Update to sudo 1.6.9p17
@
text
@d6 4
a66 6
/* Define to 1 if you have the `authenticate' function. */
#undef HAVE_AUTHENTICATE

/* Define to 1 if you have the `auth_challenge' function. */
#undef HAVE_AUTH_CHALLENGE

a94 3
/* Define to 1 if you have the <err.h> header file. */
#undef HAVE_ERR_H

d166 3
d172 6
d213 6
d231 3
d237 9
d252 6
a275 3
/* Define to 1 if you have the `lsearch' function. */
#undef HAVE_LSEARCH

d324 3
a332 3
/* Define to 1 if you have the <security/pam_appl.h> header file. */
#undef HAVE_SECURITY_PAM_APPL_H

a359 3
/* Define to 1 if you have the `sia_ses_init' function. */
#undef HAVE_SIA_SES_INIT

a365 3
/* Define to 1 if the system has the type `sig_atomic_t'. */
#undef HAVE_SIG_ATOMIC_T

a507 4
/* Define to the sub-directory in which libtool stores uninstalled libraries.
   */
#undef LT_OBJDIR

a613 4
/* Define to "void" if your compiler supports void pointers, else use "char".
   */
#undef VOID

a615 9

/* Path to the ldap.conf file */
#undef _PATH_LDAP_CONF

/* Path to the ldap.secret file */
#undef _PATH_LDAP_SECRET

/* The fully qualified pathname of sudo_noexec.so */
#undef _PATH_SUDO_NOEXEC
@


1.24
log
@update to sudo 1.6.9p12
@
text
@d308 3
d325 3
@


1.23
log
@Update to sudo 1.6.9p11
@
text
@d224 3
d233 3
d271 3
@


1.22
log
@update to sudo 1.6.9p10
@
text
@d377 3
d641 7
a647 2
# define mtim_getsec(_x)	((_x).st_mtim.tv_sec)
# define mtim_getnsec(_x)	(((_x).st_mtim.tv_nsec / 1000) * 1000)
@


1.21
log
@update to sudo 1.6.9p9
@
text
@d227 3
@


1.20
log
@Update to sudo 1.6.9p7
@
text
@d84 3
d620 4
@


1.19
log
@Update to sudo 1.6.9p6
@
text
@d174 3
@


1.18
log
@Update to sudo 1.6.9p4.  Basically IPv6 support and improved man pages.
@
text
@d486 3
@


1.17
log
@Update to sudo 1.6.9p1.  Note that the environment handling in sudo
1.6.9 has changed relative to older versions.  Sudo now starts
commands with a minimal environment containing the variables in the
env_keep and env_check lists.  This behavior is configurable in the
sudoers file.  Please see the "SECURITY NOTES" section in the sudo
manual.
@
text
@d127 3
@


1.16
log
@update to sudo 1.6.8p5
@
text
@d50 3
d63 1
a63 1
/* Define to 1 if you use AIX general authentication. */
d66 3
d97 6
d137 3
d165 3
d200 6
d227 3
d245 3
d251 3
d272 6
d284 3
d290 3
d308 3
d404 2
a405 2
/* Define to 1 if you have a timespecsub macro or function that takes
   two arguments (not three) */
d459 4
a488 3
/* Define to avoid using POSIX saved ids. */
#undef NO_SAVED_IDS

d533 3
a535 3
        STACK_DIRECTION > 0 => grows toward higher addresses
        STACK_DIRECTION < 0 => grows toward lower addresses
        STACK_DIRECTION = 0 => direction of growth unknown */
d550 3
a555 4
/* Define to 1 if you wish to use execv() instead of execvp() when running
   programs. */
#undef USE_EXECV

d573 2
a574 4
/* Enable non-POSIX extensions on AIX. */
#ifndef _ALL_SOURCE
# undef _ALL_SOURCE
#endif
d576 2
a577 4
/* Enable non-POSIX extensions on ConvexOS. */
#ifndef _CONVEX_SOURCE
# undef _CONVEX_SOURCE
#endif
d579 2
a580 4
/* Enable GNU extensions on systems that have them. */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE	1
#endif
d615 2
d620 1
a620 1
# define mtim_getnsec(_x)	((_x).st_mtim.tv_nsec)
d624 1
a624 1
#  define mtim_getnsec(_x)	((_x).st_mtimespec.tv_nsec)
a647 6

#ifdef USE_EXECV
# define EXECV	execv
#else
# define EXECV	execvp
#endif /* USE_EXECV */
@


1.15
log
@Update to sudo 1.6.8p1
@
text
@d147 2
a148 2
/* Define to 1 if you have the `getttimeofday' function. */
#undef HAVE_GETTTIMEOFDAY
d355 4
@


1.14
log
@Use closefrom() if it exists; from the sudo cvs repo
@
text
@d6 2
a7 2
/* Define if the `syslog' function returns a non-zero int to denote failure.
   */
d10 1
a10 1
/* Define if you want the insults from the "classic" version sudo. */
d18 1
a18 1
/* Define if you want insults culled from the twisted minds of CSOps. */
d24 1
a24 1
/* Define if you want sudo to display "command not allowed" instead of
d31 2
a32 1
/* Define if you want visudo to honor the EDITOR and VISUAL env variables. */
d38 1
a38 1
/* Define if you want to require fully qualified hosts in sudoers. */
d41 1
a41 1
/* Define if you want insults from the "Goon Show". */
d44 1
a44 1
/* Define if you want 2001-like insults. */
d47 1
a47 1
/* Define if you use AFS. */
d60 1
a60 1
/* Define if you use AIX general authentication. */
d66 1
a66 1
/* Define if you use BSD authentication. */
d72 1
a72 1
/* Define if you use OSF DCE. */
d75 3
d82 3
d94 1
a94 1
/* Define if you have the `fnmatch' function. */
d103 10
a112 1
/* Define if you use the FWTK authsrv daemon. */
d115 2
a116 2
/* Define if you have the `getauthuid' function. (ULTRIX 4.x shadow passwords)
   */
d131 1
a131 1
/* Define if you have the `getprpwnam' function. (SecureWare-style shadow
d135 2
a136 2
/* Define if you have the `getpwanam' function. (SunOS 4.x shadow passwords)
   */
d139 2
a140 1
/* Define if you have the `getspnam' function (SVR4-style shadow passwords) */
d143 1
a143 1
/* Define if you have the `getspwuid' function. (HP-UX <= 9.X shadow
d147 4
a150 1
/* Define if your Kerberos is Heimdal. */
d168 2
a169 2
/* Define if you have the `iscomsec' function. (HP-UX >= 10.x check for shadow
   enabled) */
d172 2
a173 2
/* Define if you have the `issecure' function. (SunOS 4.x check for shadow
   enabled) */
d176 1
a176 1
/* Define if you use Kerberos IV. */
d179 1
a179 1
/* Define if you use Kerberos V. */
d182 12
d227 1
a227 1
/* Define if you use NRL OPIE. */
d230 1
a230 1
/* Define if you use PAM. */
d233 3
d242 1
a242 1
/* Define if you use SecurID. */
d245 3
d260 1
a260 1
/* Define if you use SIA. */
d266 1
a266 1
/* Define if <signal.h> has the sigaction_t typedef. */
d272 1
a272 1
/* Define if you use S/Key. */
d275 1
a275 1
/* Define if your S/Key library has skeyaccess(). */
d314 6
d346 1
a346 1
/* Define if you have the <termios.h> header file and the `tcgetattr'
d353 3
d362 2
a363 2
/* Define to 1 if you have the `utime' function. */
#undef HAVE_UTIME
a367 3
/* Define if you have a POSIX utime() (uses struct utimbuf). */
#undef HAVE_UTIME_POSIX

d383 1
a383 1
/* Define if your crt0.o defines the __progname symbol for you. */
d386 1
a386 1
/* Define if you want the hostname to be entered into the log file. */
d389 1
a389 1
/* Define if you want to ignore '.' and empty $PATH elements */
d404 1
a404 1
/* Define if you want a two line OTP (S/Key or OPIE) prompt. */
d420 1
a420 1
/* Define if you don't want sudo to prompt for a password by default. */
d423 2
a424 2
/* Define if you don't want users to get the lecture the first they user sudo.
   */
d430 1
a430 1
/* Define if root should not be allowed to use sudo. */
d442 4
d458 1
a458 1
/* Define to override the user's path with a built-in one. */
d461 1
a461 1
/* Define to send mail when the user is not allowed to run a command. */
d464 2
a465 2
/* Define to send mail when the user is not allowed to run sudo on this host.
   */
d468 1
a468 1
/* Define to send mail when the user is not in the sudoers file. */
d471 1
a471 1
/* Define if you want sudo to start a shell if given no arguments. */
d474 1
a474 1
/* Define if you want sudo to set $HOME in shell mode. */
d488 1
a488 1
/* Define if the code in interfaces.c does not compile for you. */
d500 1
a500 1
/* Define if you wish to use execv() instead of execvp() when running
d504 2
a505 2
/* Define if you want to insult the user for entering an incorrect password.
   */
d508 1
a508 1
/* Define if you use stow packaging. */
d511 1
a511 1
/* Define if you want a different ticket file for each tty. */
d568 16
d595 1
a595 1
#ifdef HAVE_STOW
a600 7
/* Solaris doesn't use const qualifiers in PAM. */
#ifdef sun
# define PAM_CONST
#else
# define PAM_CONST	const
#endif

d602 1
a602 1
# define EXEC	execv
d604 1
a604 1
# define EXEC	execvp
d606 8
@


1.13
log
@sync w/ the sudo cvs tree and sudo 1.6.7p4
@
text
@d68 3
@


1.12
log
@Sync with sudo 1.6.7p3; fixes kerberos 5 compilation issues w/ MIT kerberos.
@
text
@d407 1
a407 1
/* Define to override the user's path with a builtin one. */
@


1.11
log
@Sync with my sudo cvs repo:
 o update to sudo 1.6.7p2
 o use warn/err throughout
@
text
@d127 3
@


1.10
log
@update to what will soon be sudo 1.6.7
@
text
@d78 3
d109 3
d332 3
@


1.9
log
@update to sudo 1.6.5p2
@
text
@d1 1
a1 1
/* config.h.in.  Generated automatically from configure.in by autoheader.  */
d21 1
a21 1
/* Define if using `alloca.c'. */
d49 1
a49 1
/* Define if you have `alloca', as a function or macro. */
d52 2
a53 1
/* Define if you have <alloca.h> and it should be used (not on Ultrix). */
d56 1
a56 1
/* Define if you have the `asprintf' function. */
d62 1
a62 1
/* Define if you have the `bigcrypt' function. */
d71 2
a72 1
/* Define if you have the <dirent.h> header file, and it defines `DIR'. */
d75 1
a75 1
/* Define if you have the `dispcrypt' function. */
d78 1
a78 1
/* Define if you have the `flock' function. */
d84 1
a84 1
/* Define if you have the `freeifaddrs' function. */
d87 1
a87 1
/* Define if you have the `fstat' function. */
d97 1
a97 1
/* Define if you have the `getcwd' function. */
d100 1
a100 1
/* Define if you have the `getdomainname' function. */
d103 1
a103 1
/* Define if you have the `getifaddrs' function. */
d121 1
a121 1
/* Define if you have the `initgroups' function. */
d124 1
a124 1
/* Define if you have the `initprivs' function. */
d127 1
a127 1
/* Define if you have the `innetgr' function. */
d130 1
a130 1
/* Define if you have the <inttypes.h> header file. */
d150 1
a150 1
/* Define if you have the `lockf' function. */
d153 1
a153 1
/* Define if you have the <login_cap.h> header file. */
d159 1
a159 1
/* Define if you have the `lsearch' function. */
d162 1
a162 1
/* Define if you have the <malloc.h> header file. */
d165 1
a165 1
/* Define if you have the `memchr' function. */
d168 1
a168 1
/* Define if you have the `memcpy' function. */
d171 1
a171 1
/* Define if you have the <memory.h> header file. */
d174 1
a174 1
/* Define if you have the `memset' function. */
d177 1
a177 1
/* Define if you have the <ndir.h> header file, and it defines `DIR'. */
d180 1
a180 1
/* Define if you have the <netgroup.h> header file. */
d189 1
a189 1
/* Define if you have the <paths.h> header file. */
d198 2
a199 2
/* Define if you have the `setegid' function. */
#undef HAVE_SETEGID
d201 1
a201 4
/* Define if you have the `seteuid' function. */
#undef HAVE_SETEUID

/* Define if you have the `setreuid' function. */
d204 1
a204 1
/* Define if you have the `setrlimit' function. */
d207 1
a207 1
/* Define if you have the `set_auth_parameters' function. */
d213 1
a213 1
/* Define if you have the `sigaction' function. */
d219 1
a219 1
/* Define if the system has the type `sig_atomic_t'. */
d228 1
a228 1
/* Define if you have the `snprintf' function. */
d231 1
a231 1
/* Define if you have the <stdint.h> header file. */
d234 1
a234 1
/* Define if you have the <stdlib.h> header file. */
d237 1
a237 1
/* Define if you have the `strcasecmp' function. */
d240 1
a240 1
/* Define if you have the `strchr' function. */
d243 1
a243 1
/* Define if you have the `strerror' function. */
d246 1
a246 1
/* Define if you have the `strftime' function. */
d249 1
a249 1
/* Define if you have the <strings.h> header file. */
d252 1
a252 1
/* Define if you have the <string.h> header file. */
d255 7
a261 1
/* Define if you have the `strrchr' function. */
d264 1
a264 1
/* Define if you have the `sysconf' function. */
d267 1
a267 1
/* Define if you have the <sys/bsdtypes.h> header file. */
d270 2
a271 1
/* Define if you have the <sys/dir.h> header file, and it defines `DIR'. */
d274 2
a275 1
/* Define if you have the <sys/ndir.h> header file, and it defines `DIR'. */
d278 1
a278 1
/* Define if you have the <sys/select.h> header file. */
d281 1
a281 1
/* Define if you have the <sys/sockio.h> header file. */
d284 1
a284 1
/* Define if you have the <sys/stat.h> header file. */
d287 1
a287 1
/* Define if you have the <sys/types.h> header file. */
d294 1
a294 1
/* Define if you have the <termio.h> header file. */
d297 1
a297 1
/* Define if you have the `tzset' function. */
d300 1
a300 1
/* Define if you have the <unistd.h> header file. */
d303 1
a303 1
/* Define if you have the `utime' function. */
d306 1
a306 1
/* Define if you have the <utime.h> header file. */
d312 1
a312 1
/* Define if you have the `vasprintf' function. */
d315 1
a315 1
/* Define if you have the `vsnprintf' function. */
d318 1
a318 1
/* Define if you have the `wait3' function. */
d321 1
a321 1
/* Define if you have the `waitpid' function. */
d324 1
a324 1
/* Define if you have the `_innetgr' function. */
d398 1
a398 1
/* Define to send mail when the user is not not allowed to run a command. */
d401 2
a402 2
/* Define to send mail when the user is not not allowed to run sudo on this
   host. */
d411 1
a411 1
/* Define if you want sudo to set /home/millert in shell mode. */
d422 1
a422 1
/* Define if you have the ANSI C header files. */
d445 3
a472 3
/* Define if you need to in order for stat and other things to work. */
#undef _POSIX_SOURCE

d513 7
@


1.8
log
@update to sudo 1.6.5
@
text
@d82 3
@


1.7
log
@update to sudo 1.6.4p2
@
text
@d358 3
@


1.6
log
@Update to sudo 1.6.4
@
text
@d361 3
@


1.5
log
@A few updates from the sudo developement tree:
- Add bsd authentication support (currently disabled)
- Always check setenv() return value
- Fix umask disabling
@
text
@d1 1
a1 40
/*
 * Copyright (c) 1996, 1998, 1999 Todd C. Miller <Todd.Miller@@courtesan.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * 4. Products derived from this software may not be called "Sudo" nor
 *    may "Sudo" appear in their names without specific prior written
 *    permission from the author.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * $Sudo: config.h.in,v 1.144 2000/03/07 04:29:42 millert Exp $
 */

/*
 * config.h -- You shouldn't edit this by hand unless you are
 *             NOT using configure.
 */
d6 3
a8 4
/* New ANSI-style OS defs.  */
#if defined(hpux) && !defined(__hpux)
#  define __hpux	1
#endif /* hpux */
d10 2
a11 3
#if defined(convex) && !defined(__convex__)
#  define __convex__	1
#endif /* convex */
d13 4
a16 6
/* Define if on AIX 3.
   System headers sometimes define this.
   We just want to avoid a redefinition error message.  */
#ifndef _ALL_SOURCE
#undef _ALL_SOURCE
#endif
d18 2
a19 6
/* Define if on ConvexOs.
   System headers sometimes define this.
   We just want to avoid a redefinition error message.  */
#ifndef _CONVEX_SOURCE
#undef _CONVEX_SOURCE
#endif
d21 2
a22 6
/* Define if needed to get POSIX functionality.
   System headers sometimes define this.
   We just want to avoid a redefinition error message.  */
#ifndef _POSIX_SOURCE
#undef _POSIX_SOURCE
#endif
d24 3
a26 6
/* Define if needed to get GNU extensions on Linux.
   System headers sometimes define this.
   We just want to avoid a redefinition error message.  */
#ifndef _GNU_SOURCE
#undef _GNU_SOURCE
#endif
d28 2
a29 2
/* Define to `int' if <sys/types.h> doesn't define.  */
#undef uid_t
d31 2
a32 2
/* Define to `int' if <sys/types.h> doesn't define.  */
#undef gid_t
d34 2
a35 2
/* Define to `int' if <sys/types.h> doesn't define.  */
#undef mode_t
d37 2
a38 2
/* Define to `unsigned' if <sys/types.h> doesn't define.  */
#undef size_t
d40 2
a41 2
/* Define to `int' if <sys/types.h> doesn't define.  */
#undef ssize_t
d43 2
a44 2
/* Define to `int' if <sys/types.h> doesn't define.  */
#undef dev_t
d46 2
a47 2
/* Define to `unsigned int' if <sys/types.h> doesn't define.  */
#undef ino_t
d49 2
a50 2
/* Define to be nil if C compiler doesn't support "const."  */
#undef const
d52 2
a53 2
/* Define if your compiler supports the "long long" type.  */
#undef HAVE_LONG_LONG
d55 2
a56 2
/* Define if sizeof(long) == sizeof(long long).  */
#undef LONG_IS_QUAD
d58 2
a59 6
/* Solaris doesn't use const qualifiers in PAM. */
#ifdef sun
#define PAM_CONST
#else
#define PAM_CONST	const
#endif
d61 2
a62 2
/* Define as the return type of signal handlers (int or void).  */
#undef RETSIGTYPE
d64 2
a65 2
/* Define if you have the ANSI C header files.  */
#undef STDC_HEADERS
d67 2
a68 2
/* Define if you want to use execv() instead of execvp().  */
#undef USE_EXECV
d70 2
a71 5
/* Define if you have POSIX signals.  */
#undef HAVE_SIGACTION
#ifdef HAVE_SIGACTION
#  define POSIX_SIGNALS
#endif /* HAVE_SIGACTION */
d73 2
a74 2
/* Define if you have tzset(3).  */
#undef HAVE_TZSET
d76 2
a77 2
/* Define if you have getcwd(3).  */
#undef HAVE_GETCWD
d79 1
a79 1
/* Define if you have fnmatch(3).  */
d82 5
a86 2
/* Define if you have lsearch(3).  */
#undef HAVE_LSEARCH
d88 3
a90 5
/* Define if you have strchr(3).  */
#undef HAVE_STRCHR
#if !defined(HAVE_STRCHR) && !defined(strchr)
#  define strchr	index
#endif
d92 2
a93 5
/* Define if you have strrchr(3).  */
#undef HAVE_STRRCHR
#if !defined(HAVE_STRRCHR) && !defined(strrchr)
#  define strrchr	rindex
#endif
d95 2
a96 2
/* Define if you have memchr(3).  */
#undef HAVE_MEMCHR
d98 2
a99 5
/* Define if you have memcpy(3).  */
#undef HAVE_MEMCPY
#if !defined(HAVE_MEMCPY) && !defined(memcpy)
#  define memcpy(D, S, L)	(bcopy(S, D, L))
#endif
d101 3
a103 5
/* Define if you have memset(3).  */
#undef HAVE_MEMSET
#if !defined(HAVE_MEMSET) && !defined(memset)
#  define memset(S, X, N)	(bzero(S, N))
#endif
d105 3
a107 2
/* Define if you have sysconf(3c).  */
#undef HAVE_SYSCONF
d109 2
a110 2
/* Define if you have putenv(3).  */
#undef HAVE_PUTENV
d112 3
a114 2
/* Define if you have setenv(3).  */
#undef HAVE_SETENV
d116 2
a117 2
/* Define if you have strcasecmp(3).  */
#undef HAVE_STRCASECMP
d119 2
a120 2
/* Define if you have tcgetattr(3).  */
#undef HAVE_TCGETATTR
d122 1
a122 1
/* Define if you have innetgr(3).  */
d125 13
a137 2
/* Define if you have initgroups(3).  */
#undef HAVE_INITGROUPS
d139 2
a140 2
/* Define if you have getdomainname(2).  */
#undef HAVE_GETDOMAINNAME
d142 2
a143 2
/* Define if you have utime(2).  */
#undef HAVE_UTIME
d145 2
a146 2
/* Define if you have a POSIX utime() (uses struct utimbuf) */
#undef HAVE_UTIME_POSIX
d148 2
a149 2
/* Define if you have bigcrypt(3).  */
#undef HAVE_BIGCRYPT
d151 2
a152 2
/* Define if you have set_auth_parameters(3).  */
#undef HAVE_SET_AUTH_PARAMETERS
d154 2
a155 2
/* Define if you have initprivs(3).  */
#undef HAVE_INITPRIVS
d157 2
a158 2
/* Define if you have dispcrypt(3).  */
#undef HAVE_DISPCRYPT
d160 2
a161 2
/* Define if you have getspnam(3).  [SVR4-style shadow passwords] */
#undef HAVE_GETSPNAM
d163 2
a164 2
/* Define if you have getprpwnam(3).  [SecureWare-style shadow passwords] */
#undef HAVE_GETPRPWNAM
d166 2
a167 2
/* Define if you have iscomsec(3).  [HP-UX >= 10.x check for shadow enabled] */
#undef HAVE_ISCOMSEC
d169 2
a170 2
/* Define if you have getspwuid(3).  [HP-UX <= 9.X shadow passwords] */
#undef HAVE_GETSPWUID
d172 2
a173 2
/* Define if you have getpwanam(3).  [SunOS 4.x shadow passwords] */
#undef HAVE_GETPWANAM
d175 2
a176 2
/* Define if you have issecure(3).  [SunOS 4.x check for shadow enabled] */
#undef HAVE_ISSECURE
d178 2
a179 2
/* Define if you have getauthuid(3).  [ULTRIX 4.x shadow passwords] */
#undef HAVE_GETAUTHUID
d181 2
a182 2
/* Define if you have seteuid(3).  */
#undef HAVE_SETEUID
d184 2
a185 2
/* Define if you have waitpid(2).  */
#undef HAVE_WAITPID
d187 2
a188 2
/* Define if you have wait3(2).  */
#undef HAVE_WAIT3
d190 2
a191 2
/* Define if you have strerror(3).  */
#undef HAVE_STRERROR
d193 2
a194 2
/* Define if you have lockf(3).  */
#undef HAVE_LOCKF
d196 2
a197 2
/* Define if you have flock(2).  */
#undef HAVE_FLOCK
d199 2
a200 2
/* Define if you have fstat(2).  */
#undef HAVE_FSTAT
d202 1
a202 1
/* Define if you have setrlimit(2).  */
d205 5
a209 2
/* Define if you have strftime(2).  */
#undef HAVE_STRFTIME
d211 2
a212 2
/* Define if you have snprintf(3).  */
#undef HAVE_SNPRINTF
d214 2
a215 2
/* Define if you have vsnprintf(3).  */
#undef HAVE_VSNPRINTF
d217 2
a218 2
/* Define if you have asprintf(3).  */
#undef HAVE_ASPRINTF
d220 2
a221 2
/* Define if you have vasprintf(3).  */
#undef HAVE_VASPRINTF
d223 2
a224 2
/* Define if you have the <malloc.h> header file.  */
#undef HAVE_MALLOC_H
d226 2
a227 2
/* Define if you have the <alloca.h> header file.  */
#undef HAVE_ALLOCA_H
d229 2
a230 2
/* Define if you have the <paths.h> header file.  */
#undef HAVE_PATHS_H
d232 2
a233 2
/* Define if you have the <string.h> header file.  */
#undef HAVE_STRING_H
d235 2
a236 4
/* Define if you have the <strings.h> header file but no <string.h>.  */
#ifndef HAVE_STRING_H
#undef HAVE_STRINGS_H
#endif /* !HAVE_STRING_H */
d238 2
a239 5
/* Define your flavor of dir entry header file.  */
#undef HAVE_DIRENT_H
#undef HAVE_SYS_NDIR_H
#undef HAVE_SYS_DIR_H
#undef HAVE_NDIR_H
d241 2
a242 2
/* Define if you have the <utime.h> header file.  */
#undef HAVE_UTIME_H
d244 2
a245 2
/* Define if you have the <unistd.h> header file.  */
#undef HAVE_UNISTD_H
d247 2
a248 2
/* Define if you have the <netgroup.h> header file.  */
#undef HAVE_NETGROUP_H
d250 2
a251 2
/* Define if you have the <termio.h> header file.  */
#undef HAVE_TERMIO_H
d253 2
a254 4
/* Define if you have the <termios.h> header file and tcgetattr(3).  */
#ifdef HAVE_TCGETATTR
#undef HAVE_TERMIOS_H
#endif /* HAVE_TCGETATTR */
d256 2
a257 2
/* Define if you have the <sys/sockio.h> header file.  */
#undef HAVE_SYS_SOCKIO_H
d259 1
a259 1
/* Define if you have the <sys/bsdtypes.h> header file.  */
d262 2
a263 2
/* Define if you have the <sys/select.h> header file.  */
#undef HAVE_SYS_SELECT_H
d265 2
a266 2
/* Define if your struct sockadr has an sa_len field.  */
#undef HAVE_SA_LEN
d268 2
a269 2
/* Define if you want visudo to honor EDITOR and VISUAL env variables.  */
#undef ENV_EDITOR
d271 2
a272 2
/* Define to avoid using the passwd/shadow file for authentication.  */
#undef WITHOUT_PASSWD
d274 2
a275 2
/* Define to void if your C compiler fully groks void, else char */
#undef VOID
d277 2
a278 2
/* Define to the max length of a uid_t in string context (excluding the NUL) */
#undef MAX_UID_T_LEN
d280 3
a282 3
/* Define if your syslog(3) does not guarantee the message will be logged */
/* and syslog(3) returns non-zero to denote failure */
#undef BROKEN_SYSLOG
d284 2
a285 2
/* Define if the code in interfaces.c does not compile for you.  */
#undef STUB_LOAD_INTERFACES
d287 2
a288 4
/*
 * Defaults for options.  These may be overridden via a "Defaults" line
 * in the sudoers file.
 */
d290 2
a291 2
/* Define if you a different ticket file for each tty.  */
#undef USE_TTY_TICKETS
d293 2
a294 2
/* Define if you want to insult the user for entering an incorrect password.  */
#undef USE_INSULTS
d296 2
a297 2
/* Define if you want the insults from the "classic" version sudo.  */
#undef CLASSIC_INSULTS
d299 2
a300 2
/* Define if you want 2001-like insults.  */
#undef HAL_INSULTS
d302 2
a303 2
/* Define if you want insults from the "Goon Show" */
#undef GOONS_INSULTS
d305 2
a306 2
/* Define if you want insults culled from the twisted minds of CSOps.  */
#undef CSOPS_INSULTS
d308 2
a309 2
/* Define to override the user's path with a builtin one.  */
#undef SECURE_PATH
d311 2
a312 2
/* Define if you want a two line OTP (skey/opie) prompt.  */
#undef LONG_OTP_PROMPT
d314 2
a315 2
/* The umask that the root-run prog should use */
#undef SUDO_UMASK
d317 1
a317 1
/* Define if you want the hostname to be entered into the log file */
d320 2
a321 2
/* Define to be the number of minutes before sudo asks for passwd again.  */
#undef TIMEOUT
d323 2
a324 2
/* Define to be the passwd prompt timeout (in minutes).  */
#undef PASSWORD_TIMEOUT
d326 2
a327 2
/* Define to be the number of tries the user gets to enter the passwd.  */
#undef TRIES_FOR_PASSWORD
d329 2
a330 2
/* Define to be the user sudo should run commands as by default.  */
#undef RUNAS_DEFAULT
d332 2
a333 2
/* Define if you want to require fully qualified hosts in sudoers.  */
#undef FQDN
d335 2
a336 2
/* If defined, users in this group need not enter a passwd (ie "sudo").  */
#undef EXEMPTGROUP
d338 2
a339 2
/* Define to the path of the editor visudo should use. */
#undef EDITOR
d341 2
a342 2
/* Define if root should not be allowed to use sudo.  */
#undef NO_ROOT_SUDO
d344 2
a345 2
/* Define to be the user that gets sudo mail.  */
#undef MAILTO
d347 3
a349 2
/* Define to be the subject of the mail sent to MAILTO by sudo.  */
#undef MAILSUBJECT
d351 2
a352 2
/* Define to be the message given for a bad password.  */
#undef INCORRECT_PASSWORD
d354 3
a356 2
/* Define to be the password prompt.  */
#undef PASSPROMPT
d358 2
a359 2
/* Define to SLOG_SYSLOG, SLOG_FILE, or SLOG_BOTH */
#undef LOGGING
d361 2
a362 2
/* Define to be the syslog facility to use.  */
#undef LOGFAC
d364 2
a365 2
/* Define to be the syslog priority to use for successful attemps.  */
#undef PRI_SUCCESS
d367 1
a367 1
/* Define to be the syslog priority to use for unsuccessful attemps/errors.  */
d370 2
a371 2
/* Define to be the max chars per log line (for line wrapping).  */
#undef MAXLOGFILELEN
d373 2
a374 2
/* Define if you want to ignore '.' and '' in $PATH */
#undef IGNORE_DOT_PATH
d376 2
a377 2
/* Define if you want "command not allowed" instead of "command not found" */
#undef DONT_LEAK_PATH_INFO
d379 2
a380 2
/* Define if you don't want users to get the lecture the first they user sudo */
#undef NO_LECTURE
d382 2
a383 2
/* Define SEND_MAIL_WHEN_NO_USER to send mail when user not in sudoers file */
#undef SEND_MAIL_WHEN_NO_USER
d385 2
a386 1
/* Define SEND_MAIL_WHEN_NO_HOST to send mail when not allowed on this host */
d389 2
a390 2
/* Define SEND_MAIL_WHEN_NOT_OK to send mail when not allowed to run command */
#undef SEND_MAIL_WHEN_NOT_OK
d392 1
a392 1
/* Define if you want sudo to start a shell if given no arguments.  */
d395 1
a395 1
/* Define if you want sudo to set $HOME in shell mode.  */
d398 30
a427 2
/* Define if you don't want sudo to prompt for a password by default.  */
#undef NO_AUTHENTICATION
d429 2
d432 6
a437 3
/*
 * Authentication methods.
 */
d439 4
a442 2
/* Define if you use S/Key.  */
#undef HAVE_SKEY
d444 4
a447 2
/* Define if you use NRL OPIE.  */
#undef HAVE_OPIE
d449 4
a452 2
/* Define if you use SecurID.  */
#undef HAVE_SECURID
d454 2
a455 2
/* Define if you use AIX general authentication.  */
#undef HAVE_AUTHENTICATE
d457 2
a458 5
/* Define if you use Kerberos IV or Kerberos V < 1.1.  */
#undef HAVE_KERB4
  
/* Define if you use Kerberos V version 1.1 or higher.  */
#undef HAVE_KERB5
d460 2
a461 2
/* Define if you use SIA.  */
#undef HAVE_SIA
d463 2
a464 2
/* Define if you use PAM.  */
#undef HAVE_PAM
d466 2
a467 2
/* Define if you use AFS.  */
#undef HAVE_AFS
d469 2
a470 2
/* Define if you use OSF DCE.  */
#undef HAVE_DCE
d472 2
a473 2
/* Define if you use the BSD login capabilities database.  */
#undef HAVE_LOGIN_CAP_H
d475 2
a476 2
/* Define if you use BSD authentication.  */
#undef HAVE_BSD_AUTH_H
d478 2
a479 2
/* Define if you use the FWTK authsrv daemon.  */
#undef HAVE_FWTK
d481 2
d484 3
a486 1
/**********  You probably don't want to modify anything below here  ***********/
d492 10
a501 1
#  define sudo_waitpid(p, s, o)		waitpid(p, s, o)
d503 1
a503 3
#  ifdef HAVE_WAIT3
#    define sudo_waitpid(p, s, o)	wait3(s, o, NULL)
#  endif
d507 1
a507 1
#  define EXEC	execv
d509 1
a509 1
#  define EXEC	execvp
d512 10
d523 1
a523 1
#  define BSD_COMP
@


1.5.2.1
log
@update to sudo 1.6.5p1
@
text
@d1 40
a40 1
/* config.h.in.  Generated automatically from configure.in by autoheader.  */
d45 4
a48 3
/* Define if the `syslog' function returns a non-zero int to denote failure.
   */
#undef BROKEN_SYSLOG
d50 3
a52 2
/* Define if you want the insults from the "classic" version sudo. */
#undef CLASSIC_INSULTS
d54 6
a59 4
/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#undef CRAY_STACKSEG_END
d61 6
a66 2
/* Define if you want insults culled from the twisted minds of CSOps. */
#undef CSOPS_INSULTS
d68 6
a73 2
/* Define if using `alloca.c'. */
#undef C_ALLOCA
d75 6
a80 3
/* Define if you want sudo to display "command not allowed" instead of
   "command not found" when a command cannot be found. */
#undef DONT_LEAK_PATH_INFO
d82 2
a83 2
/* A colon-separated list of pathnames to be used as the editor for visudo. */
#undef EDITOR
d85 2
a86 2
/* Define if you want visudo to honor the EDITOR and VISUAL env variables. */
#undef ENV_EDITOR
d88 2
a89 2
/* If defined, users in this group need not enter a passwd (ie "sudo"). */
#undef EXEMPTGROUP
d91 2
a92 2
/* Define if you want to require fully qualified hosts in sudoers. */
#undef FQDN
d94 2
a95 2
/* Define if you want insults from the "Goon Show". */
#undef GOONS_INSULTS
d97 2
a98 2
/* Define if you want 2001-like insults. */
#undef HAL_INSULTS
d100 2
a101 2
/* Define if you use AFS. */
#undef HAVE_AFS
d103 2
a104 2
/* Define if you have `alloca', as a function or macro. */
#undef HAVE_ALLOCA
d106 2
a107 2
/* Define if you have <alloca.h> and it should be used (not on Ultrix). */
#undef HAVE_ALLOCA_H
d109 2
a110 2
/* Define if you have the `asprintf' function. */
#undef HAVE_ASPRINTF
d112 6
a117 2
/* Define if you use AIX general authentication. */
#undef HAVE_AUTHENTICATE
d119 2
a120 2
/* Define if you have the `bigcrypt' function. */
#undef HAVE_BIGCRYPT
d122 2
a123 2
/* Define if you use BSD authentication. */
#undef HAVE_BSD_AUTH_H
d125 2
a126 2
/* Define if you use OSF DCE. */
#undef HAVE_DCE
d128 5
a132 2
/* Define if you have the <dirent.h> header file, and it defines `DIR'. */
#undef HAVE_DIRENT_H
d134 2
a135 2
/* Define if you have the `dispcrypt' function. */
#undef HAVE_DISPCRYPT
d137 2
a138 2
/* Define if you have the `flock' function. */
#undef HAVE_FLOCK
d140 1
a140 1
/* Define if you have the `fnmatch' function. */
d143 2
a144 2
/* Define if you have the `fstat' function. */
#undef HAVE_FSTAT
d146 5
a150 2
/* Define if you use the FWTK authsrv daemon. */
#undef HAVE_FWTK
d152 5
a156 3
/* Define if you have the `getauthuid' function. (ULTRIX 4.x shadow passwords)
   */
#undef HAVE_GETAUTHUID
d158 2
a159 2
/* Define if you have the `getcwd' function. */
#undef HAVE_GETCWD
d161 5
a165 2
/* Define if you have the `getdomainname' function. */
#undef HAVE_GETDOMAINNAME
d167 5
a171 2
/* Define if you have the `getifaddrs' function. */
#undef HAVE_GETIFADDRS
d173 2
a174 3
/* Define if you have the `getprpwnam' function. (SecureWare-style shadow
   passwords) */
#undef HAVE_GETPRPWNAM
d176 2
a177 3
/* Define if you have the `getpwanam' function. (SunOS 4.x shadow passwords)
   */
#undef HAVE_GETPWANAM
d179 2
a180 2
/* Define if you have the `getspnam' function (SVR4-style shadow passwords) */
#undef HAVE_GETSPNAM
d182 2
a183 6
/* Define if you have the `getspwuid' function. (HP-UX <= 9.X shadow
   passwords) */
#undef HAVE_GETSPWUID

/* Define if you have the `initgroups' function. */
#undef HAVE_INITGROUPS
d185 2
a186 2
/* Define if you have the `initprivs' function. */
#undef HAVE_INITPRIVS
d188 1
a188 1
/* Define if you have the `innetgr' function. */
d191 2
a192 2
/* Define if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H
d194 2
a195 2
/* Define if you have isblank(3). */
#undef HAVE_ISBLANK
d197 2
a198 3
/* Define if you have the `iscomsec' function. (HP-UX >= 10.x check for shadow
   enabled) */
#undef HAVE_ISCOMSEC
d200 2
a201 3
/* Define if you have the `issecure' function. (SunOS 4.x check for shadow
   enabled) */
#undef HAVE_ISSECURE
d203 2
a204 2
/* Define if you use Kerberos IV. */
#undef HAVE_KERB4
d206 2
a207 2
/* Define if you use Kerberos V. */
#undef HAVE_KERB5
d209 2
a210 2
/* Define if you have the `lockf' function. */
#undef HAVE_LOCKF
d212 2
a213 2
/* Define if you have the <login_cap.h> header file. */
#undef HAVE_LOGIN_CAP_H
d215 2
a216 2
/* Define if your compiler supports the "long long" type. */
#undef HAVE_LONG_LONG
d218 2
a219 2
/* Define if you have the `lsearch' function. */
#undef HAVE_LSEARCH
d221 2
a222 2
/* Define if you have the <malloc.h> header file. */
#undef HAVE_MALLOC_H
d224 2
a225 2
/* Define if you have the `memchr' function. */
#undef HAVE_MEMCHR
d227 2
a228 2
/* Define if you have the `memcpy' function. */
#undef HAVE_MEMCPY
d230 2
a231 2
/* Define if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H
d233 2
a234 2
/* Define if you have the `memset' function. */
#undef HAVE_MEMSET
d236 2
a237 2
/* Define if you have the <ndir.h> header file, and it defines `DIR'. */
#undef HAVE_NDIR_H
d239 2
a240 2
/* Define if you have the <netgroup.h> header file. */
#undef HAVE_NETGROUP_H
d242 2
a243 2
/* Define if you use NRL OPIE. */
#undef HAVE_OPIE
d245 2
a246 2
/* Define if you use PAM. */
#undef HAVE_PAM
d248 2
a249 2
/* Define if you have the <paths.h> header file. */
#undef HAVE_PATHS_H
d251 2
a252 2
/* Define if your struct sockadr has an sa_len field. */
#undef HAVE_SA_LEN
d254 2
a255 2
/* Define if you use SecurID. */
#undef HAVE_SECURID
d257 1
a257 10
/* Define if you have the `setegid' function. */
#undef HAVE_SETEGID

/* Define if you have the `seteuid' function. */
#undef HAVE_SETEUID

/* Define if you have the `setreuid' function. */
#undef HAVE_SETREUID

/* Define if you have the `setrlimit' function. */
d260 2
a261 2
/* Define if you have the `set_auth_parameters' function. */
#undef HAVE_SET_AUTH_PARAMETERS
d263 2
a264 2
/* Define if you use SIA. */
#undef HAVE_SIA
d266 2
a267 2
/* Define if you have the `sigaction' function. */
#undef HAVE_SIGACTION
d269 2
a270 2
/* Define if <signal.h> has the sigaction_t typedef. */
#undef HAVE_SIGACTION_T
d272 2
a273 2
/* Define if the system has the type `sig_atomic_t'. */
#undef HAVE_SIG_ATOMIC_T
d275 2
a276 2
/* Define if you use S/Key. */
#undef HAVE_SKEY
d278 2
a279 2
/* Define if your S/Key library has skeyaccess(). */
#undef HAVE_SKEYACCESS
d281 2
a282 2
/* Define if you have the `snprintf' function. */
#undef HAVE_SNPRINTF
d284 2
a285 2
/* Define if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H
d287 4
a290 2
/* Define if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H
d292 5
a296 2
/* Define if you have the `strcasecmp' function. */
#undef HAVE_STRCASECMP
d298 2
a299 2
/* Define if you have the `strchr' function. */
#undef HAVE_STRCHR
d301 2
a302 2
/* Define if you have the `strerror' function. */
#undef HAVE_STRERROR
d304 2
a305 2
/* Define if you have the `strftime' function. */
#undef HAVE_STRFTIME
d307 2
a308 2
/* Define if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H
d310 4
a313 2
/* Define if you have the <string.h> header file. */
#undef HAVE_STRING_H
d315 2
a316 2
/* Define if you have the `strrchr' function. */
#undef HAVE_STRRCHR
d318 1
a318 4
/* Define if you have the `sysconf' function. */
#undef HAVE_SYSCONF

/* Define if you have the <sys/bsdtypes.h> header file. */
d321 2
a322 2
/* Define if you have the <sys/dir.h> header file, and it defines `DIR'. */
#undef HAVE_SYS_DIR_H
d324 2
a325 2
/* Define if you have the <sys/ndir.h> header file, and it defines `DIR'. */
#undef HAVE_SYS_NDIR_H
d327 2
a328 2
/* Define if you have the <sys/select.h> header file. */
#undef HAVE_SYS_SELECT_H
d330 2
a331 2
/* Define if you have the <sys/sockio.h> header file. */
#undef HAVE_SYS_SOCKIO_H
d333 2
a334 2
/* Define if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H
d336 2
a337 2
/* Define if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H
d339 3
a341 3
/* Define if you have the <termios.h> header file and the `tcgetattr'
   function. */
#undef HAVE_TERMIOS_H
d343 2
a344 2
/* Define if you have the <termio.h> header file. */
#undef HAVE_TERMIO_H
d346 4
a349 2
/* Define if you have the `tzset' function. */
#undef HAVE_TZSET
d351 2
a352 2
/* Define if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H
d354 2
a355 2
/* Define if you have the `utime' function. */
#undef HAVE_UTIME
d357 2
a358 2
/* Define if you have the <utime.h> header file. */
#undef HAVE_UTIME_H
d360 2
a361 2
/* Define if you have a POSIX utime() (uses struct utimbuf). */
#undef HAVE_UTIME_POSIX
d363 2
a364 2
/* Define if you have the `vasprintf' function. */
#undef HAVE_VASPRINTF
d366 2
a367 2
/* Define if you have the `vsnprintf' function. */
#undef HAVE_VSNPRINTF
d369 2
a370 2
/* Define if you have the `wait3' function. */
#undef HAVE_WAIT3
d372 2
a373 2
/* Define if you have the `waitpid' function. */
#undef HAVE_WAITPID
d375 2
a376 2
/* Define if you have the `_innetgr' function. */
#undef HAVE__INNETGR
d378 1
a378 1
/* Define if you want the hostname to be entered into the log file. */
d381 5
a385 2
/* Define if you want to ignore '.' and empty $PATH elements */
#undef IGNORE_DOT_PATH
d387 2
a388 2
/* The message given when a bad password is entered. */
#undef INCORRECT_PASSWORD
d390 2
a391 2
/* The syslog facility sudo will use. */
#undef LOGFAC
d393 2
a394 2
/* Define to SLOG_SYSLOG, SLOG_FILE, or SLOG_BOTH. */
#undef LOGGING
d396 2
a397 2
/* Define if sizeof(long) == sizeof(long long). */
#undef LONG_IS_QUAD
d399 2
a400 2
/* Define if you want a two line OTP (S/Key or OPIE) prompt. */
#undef LONG_OTP_PROMPT
d402 2
a403 2
/* The subject of the mail sent by sudo to the MAILTO user/address. */
#undef MAILSUBJECT
d405 1
a405 1
/* The user or email address that sudo mail is sent to. */
d408 2
a409 2
/* The max number of chars per log file line (for line wrapping). */
#undef MAXLOGFILELEN
d411 2
a412 3
/* Define to the max length of a uid_t in string context (excluding the NUL).
   */
#undef MAX_UID_T_LEN
d414 2
a415 2
/* Define if you don't want sudo to prompt for a password by default. */
#undef NO_AUTHENTICATION
d417 2
a418 3
/* Define if you don't want users to get the lecture the first they user sudo.
   */
#undef NO_LECTURE
d420 2
a421 2
/* Define to avoid runing the mailer as root. */
#undef NO_ROOT_MAILER
d423 2
a424 8
/* Define if root should not be allowed to use sudo. */
#undef NO_ROOT_SUDO

/* Define to avoid using POSIX saved ids. */
#undef NO_SAVED_IDS

/* The default password prompt. */
#undef PASSPROMPT
d426 1
a426 4
/* The passwd prompt timeout (in minutes). */
#undef PASSWORD_TIMEOUT

/* The syslog priority sudo will use for unsuccessful attempts/errors. */
d429 2
a430 2
/* The syslog priority sudo will use for successful attempts. */
#undef PRI_SUCCESS
d432 2
a433 2
/* Define as the return type of signal handlers (`int' or `void'). */
#undef RETSIGTYPE
d435 2
a436 2
/* The user sudo should run commands as by default. */
#undef RUNAS_DEFAULT
d438 2
a439 2
/* Define to override the user's path with a builtin one. */
#undef SECURE_PATH
d441 2
a442 2
/* Define to send mail when the user is not not allowed to run a command. */
#undef SEND_MAIL_WHEN_NOT_OK
d444 1
a444 2
/* Define to send mail when the user is not not allowed to run sudo on this
   host. */
d447 2
a448 2
/* Define to send mail when the user is not in the sudoers file. */
#undef SEND_MAIL_WHEN_NO_USER
d450 1
a450 1
/* Define if you want sudo to start a shell if given no arguments. */
d453 1
a453 1
/* Define if you want sudo to set /home/millert in shell mode. */
d456 2
a457 7
/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
        STACK_DIRECTION > 0 => grows toward higher addresses
        STACK_DIRECTION < 0 => grows toward lower addresses
        STACK_DIRECTION = 0 => direction of growth unknown */
#undef STACK_DIRECTION
a458 2
/* Define if you have the ANSI C header files. */
#undef STDC_HEADERS
d460 3
a462 2
/* Define if the code in interfaces.c does not compile for you. */
#undef STUB_LOAD_INTERFACES
d464 2
a465 2
/* The umask that the root-run prog should use. */
#undef SUDO_UMASK
d467 2
a468 2
/* The number of minutes before sudo asks for a password again. */
#undef TIMEOUT
d470 2
a471 2
/* The number of tries a user gets to enter their password. */
#undef TRIES_FOR_PASSWORD
d473 2
a474 3
/* Define if you wish to use execv() instead of execvp() when running
   programs. */
#undef USE_EXECV
d476 5
a480 3
/* Define if you want to insult the user for entering an incorrect password.
   */
#undef USE_INSULTS
d482 2
a483 2
/* Define if you want a different ticket file for each tty. */
#undef USE_TTY_TICKETS
d485 2
a486 3
/* Define to "void" if your compiler supports void pointers, else use "char".
   */
#undef VOID
d488 2
a489 2
/* Define to avoid using the passwd/shadow file for authentication. */
#undef WITHOUT_PASSWD
d491 2
a492 4
/* Enable non-POSIX extensions on AIX. */
#ifndef _ALL_SOURCE
# undef _ALL_SOURCE
#endif
d494 2
a495 4
/* Enable non-POSIX extensions on ConvexOS. */
#ifndef _CONVEX_SOURCE
# undef _CONVEX_SOURCE
#endif
d497 2
a498 4
/* Enable GNU extensions on systems that have them. */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE	1
#endif
d500 2
a501 2
/* Define if you need to in order for stat and other things to work. */
#undef _POSIX_SOURCE
a502 14
/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define if your system lacks the dev_t type. */
#undef dev_t

/* Define to `int' if <sys/types.h> doesn't define. */
#undef gid_t

/* Define if your system lacks the ino_t type. */
#undef ino_t

/* Define to `int' if <sys/types.h> does not define. */
#undef mode_t
d504 1
a504 15
/* Define to `int' if <signal.h> does not define. */
#undef sig_atomic_t

/* Define if your system lacks the size_t type. */
#undef size_t

/* Define if your system lacks the ssize_t type. */
#undef ssize_t

/* Define to `int' if <sys/types.h> doesn't define. */
#undef uid_t

/* Define to empty if the keyword `volatile' does not work. Warning: valid
   code using `volatile' can become incorrect without. Disable with care. */
#undef volatile
d510 1
a510 10
# define sudo_waitpid(p, s, o)	waitpid(p, s, o)
#else
# ifdef HAVE_WAIT3
#  define sudo_waitpid(p, s, o)	wait3(s, o, NULL)
# endif
#endif

/* Solaris doesn't use const qualifiers in PAM. */
#ifdef sun
# define PAM_CONST
d512 3
a514 1
# define PAM_CONST	const
d518 1
a518 1
# define EXEC	execv
d520 1
a520 1
# define EXEC	execvp
a522 10
/* New ANSI-style OS defs for HP-UX and ConvexOS. */
#if defined(hpux) && !defined(__hpux)
# define __hpux		1
#endif /* hpux */

#if defined(convex) && !defined(__convex__)
# define __convex__	1
#endif /* convex */

/* BSD compatibility on some SVR4 systems. */
d524 1
a524 1
# define BSD_COMP
@


1.5.4.1
log
@update to sudo 1.6.5p1
@
text
@d1 40
a40 1
/* config.h.in.  Generated automatically from configure.in by autoheader.  */
d45 4
a48 3
/* Define if the `syslog' function returns a non-zero int to denote failure.
   */
#undef BROKEN_SYSLOG
d50 3
a52 2
/* Define if you want the insults from the "classic" version sudo. */
#undef CLASSIC_INSULTS
d54 6
a59 4
/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#undef CRAY_STACKSEG_END
d61 6
a66 2
/* Define if you want insults culled from the twisted minds of CSOps. */
#undef CSOPS_INSULTS
d68 6
a73 2
/* Define if using `alloca.c'. */
#undef C_ALLOCA
d75 6
a80 3
/* Define if you want sudo to display "command not allowed" instead of
   "command not found" when a command cannot be found. */
#undef DONT_LEAK_PATH_INFO
d82 2
a83 2
/* A colon-separated list of pathnames to be used as the editor for visudo. */
#undef EDITOR
d85 2
a86 2
/* Define if you want visudo to honor the EDITOR and VISUAL env variables. */
#undef ENV_EDITOR
d88 2
a89 2
/* If defined, users in this group need not enter a passwd (ie "sudo"). */
#undef EXEMPTGROUP
d91 2
a92 2
/* Define if you want to require fully qualified hosts in sudoers. */
#undef FQDN
d94 2
a95 2
/* Define if you want insults from the "Goon Show". */
#undef GOONS_INSULTS
d97 2
a98 2
/* Define if you want 2001-like insults. */
#undef HAL_INSULTS
d100 2
a101 2
/* Define if you use AFS. */
#undef HAVE_AFS
d103 2
a104 2
/* Define if you have `alloca', as a function or macro. */
#undef HAVE_ALLOCA
d106 2
a107 2
/* Define if you have <alloca.h> and it should be used (not on Ultrix). */
#undef HAVE_ALLOCA_H
d109 2
a110 2
/* Define if you have the `asprintf' function. */
#undef HAVE_ASPRINTF
d112 6
a117 2
/* Define if you use AIX general authentication. */
#undef HAVE_AUTHENTICATE
d119 2
a120 2
/* Define if you have the `bigcrypt' function. */
#undef HAVE_BIGCRYPT
d122 2
a123 2
/* Define if you use BSD authentication. */
#undef HAVE_BSD_AUTH_H
d125 2
a126 2
/* Define if you use OSF DCE. */
#undef HAVE_DCE
d128 5
a132 2
/* Define if you have the <dirent.h> header file, and it defines `DIR'. */
#undef HAVE_DIRENT_H
d134 2
a135 2
/* Define if you have the `dispcrypt' function. */
#undef HAVE_DISPCRYPT
d137 2
a138 2
/* Define if you have the `flock' function. */
#undef HAVE_FLOCK
d140 1
a140 1
/* Define if you have the `fnmatch' function. */
d143 2
a144 2
/* Define if you have the `fstat' function. */
#undef HAVE_FSTAT
d146 5
a150 2
/* Define if you use the FWTK authsrv daemon. */
#undef HAVE_FWTK
d152 5
a156 3
/* Define if you have the `getauthuid' function. (ULTRIX 4.x shadow passwords)
   */
#undef HAVE_GETAUTHUID
d158 2
a159 2
/* Define if you have the `getcwd' function. */
#undef HAVE_GETCWD
d161 5
a165 2
/* Define if you have the `getdomainname' function. */
#undef HAVE_GETDOMAINNAME
d167 5
a171 2
/* Define if you have the `getifaddrs' function. */
#undef HAVE_GETIFADDRS
d173 2
a174 3
/* Define if you have the `getprpwnam' function. (SecureWare-style shadow
   passwords) */
#undef HAVE_GETPRPWNAM
d176 2
a177 3
/* Define if you have the `getpwanam' function. (SunOS 4.x shadow passwords)
   */
#undef HAVE_GETPWANAM
d179 2
a180 2
/* Define if you have the `getspnam' function (SVR4-style shadow passwords) */
#undef HAVE_GETSPNAM
d182 2
a183 6
/* Define if you have the `getspwuid' function. (HP-UX <= 9.X shadow
   passwords) */
#undef HAVE_GETSPWUID

/* Define if you have the `initgroups' function. */
#undef HAVE_INITGROUPS
d185 2
a186 2
/* Define if you have the `initprivs' function. */
#undef HAVE_INITPRIVS
d188 1
a188 1
/* Define if you have the `innetgr' function. */
d191 2
a192 2
/* Define if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H
d194 2
a195 2
/* Define if you have isblank(3). */
#undef HAVE_ISBLANK
d197 2
a198 3
/* Define if you have the `iscomsec' function. (HP-UX >= 10.x check for shadow
   enabled) */
#undef HAVE_ISCOMSEC
d200 2
a201 3
/* Define if you have the `issecure' function. (SunOS 4.x check for shadow
   enabled) */
#undef HAVE_ISSECURE
d203 2
a204 2
/* Define if you use Kerberos IV. */
#undef HAVE_KERB4
d206 2
a207 2
/* Define if you use Kerberos V. */
#undef HAVE_KERB5
d209 2
a210 2
/* Define if you have the `lockf' function. */
#undef HAVE_LOCKF
d212 2
a213 2
/* Define if you have the <login_cap.h> header file. */
#undef HAVE_LOGIN_CAP_H
d215 2
a216 2
/* Define if your compiler supports the "long long" type. */
#undef HAVE_LONG_LONG
d218 2
a219 2
/* Define if you have the `lsearch' function. */
#undef HAVE_LSEARCH
d221 2
a222 2
/* Define if you have the <malloc.h> header file. */
#undef HAVE_MALLOC_H
d224 2
a225 2
/* Define if you have the `memchr' function. */
#undef HAVE_MEMCHR
d227 2
a228 2
/* Define if you have the `memcpy' function. */
#undef HAVE_MEMCPY
d230 2
a231 2
/* Define if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H
d233 2
a234 2
/* Define if you have the `memset' function. */
#undef HAVE_MEMSET
d236 2
a237 2
/* Define if you have the <ndir.h> header file, and it defines `DIR'. */
#undef HAVE_NDIR_H
d239 2
a240 2
/* Define if you have the <netgroup.h> header file. */
#undef HAVE_NETGROUP_H
d242 2
a243 2
/* Define if you use NRL OPIE. */
#undef HAVE_OPIE
d245 2
a246 2
/* Define if you use PAM. */
#undef HAVE_PAM
d248 2
a249 2
/* Define if you have the <paths.h> header file. */
#undef HAVE_PATHS_H
d251 2
a252 2
/* Define if your struct sockadr has an sa_len field. */
#undef HAVE_SA_LEN
d254 2
a255 2
/* Define if you use SecurID. */
#undef HAVE_SECURID
d257 1
a257 10
/* Define if you have the `setegid' function. */
#undef HAVE_SETEGID

/* Define if you have the `seteuid' function. */
#undef HAVE_SETEUID

/* Define if you have the `setreuid' function. */
#undef HAVE_SETREUID

/* Define if you have the `setrlimit' function. */
d260 2
a261 2
/* Define if you have the `set_auth_parameters' function. */
#undef HAVE_SET_AUTH_PARAMETERS
d263 2
a264 2
/* Define if you use SIA. */
#undef HAVE_SIA
d266 2
a267 2
/* Define if you have the `sigaction' function. */
#undef HAVE_SIGACTION
d269 2
a270 2
/* Define if <signal.h> has the sigaction_t typedef. */
#undef HAVE_SIGACTION_T
d272 2
a273 2
/* Define if the system has the type `sig_atomic_t'. */
#undef HAVE_SIG_ATOMIC_T
d275 2
a276 2
/* Define if you use S/Key. */
#undef HAVE_SKEY
d278 2
a279 2
/* Define if your S/Key library has skeyaccess(). */
#undef HAVE_SKEYACCESS
d281 2
a282 2
/* Define if you have the `snprintf' function. */
#undef HAVE_SNPRINTF
d284 2
a285 2
/* Define if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H
d287 4
a290 2
/* Define if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H
d292 5
a296 2
/* Define if you have the `strcasecmp' function. */
#undef HAVE_STRCASECMP
d298 2
a299 2
/* Define if you have the `strchr' function. */
#undef HAVE_STRCHR
d301 2
a302 2
/* Define if you have the `strerror' function. */
#undef HAVE_STRERROR
d304 2
a305 2
/* Define if you have the `strftime' function. */
#undef HAVE_STRFTIME
d307 2
a308 2
/* Define if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H
d310 4
a313 2
/* Define if you have the <string.h> header file. */
#undef HAVE_STRING_H
d315 2
a316 2
/* Define if you have the `strrchr' function. */
#undef HAVE_STRRCHR
d318 1
a318 4
/* Define if you have the `sysconf' function. */
#undef HAVE_SYSCONF

/* Define if you have the <sys/bsdtypes.h> header file. */
d321 2
a322 2
/* Define if you have the <sys/dir.h> header file, and it defines `DIR'. */
#undef HAVE_SYS_DIR_H
d324 2
a325 2
/* Define if you have the <sys/ndir.h> header file, and it defines `DIR'. */
#undef HAVE_SYS_NDIR_H
d327 2
a328 2
/* Define if you have the <sys/select.h> header file. */
#undef HAVE_SYS_SELECT_H
d330 2
a331 2
/* Define if you have the <sys/sockio.h> header file. */
#undef HAVE_SYS_SOCKIO_H
d333 2
a334 2
/* Define if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H
d336 2
a337 2
/* Define if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H
d339 3
a341 3
/* Define if you have the <termios.h> header file and the `tcgetattr'
   function. */
#undef HAVE_TERMIOS_H
d343 2
a344 2
/* Define if you have the <termio.h> header file. */
#undef HAVE_TERMIO_H
d346 4
a349 2
/* Define if you have the `tzset' function. */
#undef HAVE_TZSET
d351 2
a352 2
/* Define if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H
d354 2
a355 2
/* Define if you have the `utime' function. */
#undef HAVE_UTIME
d357 2
a358 2
/* Define if you have the <utime.h> header file. */
#undef HAVE_UTIME_H
d360 2
a361 2
/* Define if you have a POSIX utime() (uses struct utimbuf). */
#undef HAVE_UTIME_POSIX
d363 2
a364 2
/* Define if you have the `vasprintf' function. */
#undef HAVE_VASPRINTF
d366 2
a367 2
/* Define if you have the `vsnprintf' function. */
#undef HAVE_VSNPRINTF
d369 2
a370 2
/* Define if you have the `wait3' function. */
#undef HAVE_WAIT3
d372 2
a373 2
/* Define if you have the `waitpid' function. */
#undef HAVE_WAITPID
d375 2
a376 2
/* Define if you have the `_innetgr' function. */
#undef HAVE__INNETGR
d378 1
a378 1
/* Define if you want the hostname to be entered into the log file. */
d381 5
a385 2
/* Define if you want to ignore '.' and empty $PATH elements */
#undef IGNORE_DOT_PATH
d387 2
a388 2
/* The message given when a bad password is entered. */
#undef INCORRECT_PASSWORD
d390 2
a391 2
/* The syslog facility sudo will use. */
#undef LOGFAC
d393 2
a394 2
/* Define to SLOG_SYSLOG, SLOG_FILE, or SLOG_BOTH. */
#undef LOGGING
d396 2
a397 2
/* Define if sizeof(long) == sizeof(long long). */
#undef LONG_IS_QUAD
d399 2
a400 2
/* Define if you want a two line OTP (S/Key or OPIE) prompt. */
#undef LONG_OTP_PROMPT
d402 2
a403 2
/* The subject of the mail sent by sudo to the MAILTO user/address. */
#undef MAILSUBJECT
d405 1
a405 1
/* The user or email address that sudo mail is sent to. */
d408 2
a409 2
/* The max number of chars per log file line (for line wrapping). */
#undef MAXLOGFILELEN
d411 2
a412 3
/* Define to the max length of a uid_t in string context (excluding the NUL).
   */
#undef MAX_UID_T_LEN
d414 2
a415 2
/* Define if you don't want sudo to prompt for a password by default. */
#undef NO_AUTHENTICATION
d417 2
a418 3
/* Define if you don't want users to get the lecture the first they user sudo.
   */
#undef NO_LECTURE
d420 2
a421 2
/* Define to avoid runing the mailer as root. */
#undef NO_ROOT_MAILER
d423 2
a424 8
/* Define if root should not be allowed to use sudo. */
#undef NO_ROOT_SUDO

/* Define to avoid using POSIX saved ids. */
#undef NO_SAVED_IDS

/* The default password prompt. */
#undef PASSPROMPT
d426 1
a426 4
/* The passwd prompt timeout (in minutes). */
#undef PASSWORD_TIMEOUT

/* The syslog priority sudo will use for unsuccessful attempts/errors. */
d429 2
a430 2
/* The syslog priority sudo will use for successful attempts. */
#undef PRI_SUCCESS
d432 2
a433 2
/* Define as the return type of signal handlers (`int' or `void'). */
#undef RETSIGTYPE
d435 2
a436 2
/* The user sudo should run commands as by default. */
#undef RUNAS_DEFAULT
d438 2
a439 2
/* Define to override the user's path with a builtin one. */
#undef SECURE_PATH
d441 2
a442 2
/* Define to send mail when the user is not not allowed to run a command. */
#undef SEND_MAIL_WHEN_NOT_OK
d444 1
a444 2
/* Define to send mail when the user is not not allowed to run sudo on this
   host. */
d447 2
a448 2
/* Define to send mail when the user is not in the sudoers file. */
#undef SEND_MAIL_WHEN_NO_USER
d450 1
a450 1
/* Define if you want sudo to start a shell if given no arguments. */
d453 1
a453 1
/* Define if you want sudo to set /home/millert in shell mode. */
d456 2
a457 7
/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
        STACK_DIRECTION > 0 => grows toward higher addresses
        STACK_DIRECTION < 0 => grows toward lower addresses
        STACK_DIRECTION = 0 => direction of growth unknown */
#undef STACK_DIRECTION
a458 2
/* Define if you have the ANSI C header files. */
#undef STDC_HEADERS
d460 3
a462 2
/* Define if the code in interfaces.c does not compile for you. */
#undef STUB_LOAD_INTERFACES
d464 2
a465 2
/* The umask that the root-run prog should use. */
#undef SUDO_UMASK
d467 2
a468 2
/* The number of minutes before sudo asks for a password again. */
#undef TIMEOUT
d470 2
a471 2
/* The number of tries a user gets to enter their password. */
#undef TRIES_FOR_PASSWORD
d473 2
a474 3
/* Define if you wish to use execv() instead of execvp() when running
   programs. */
#undef USE_EXECV
d476 5
a480 3
/* Define if you want to insult the user for entering an incorrect password.
   */
#undef USE_INSULTS
d482 2
a483 2
/* Define if you want a different ticket file for each tty. */
#undef USE_TTY_TICKETS
d485 2
a486 3
/* Define to "void" if your compiler supports void pointers, else use "char".
   */
#undef VOID
d488 2
a489 2
/* Define to avoid using the passwd/shadow file for authentication. */
#undef WITHOUT_PASSWD
d491 2
a492 4
/* Enable non-POSIX extensions on AIX. */
#ifndef _ALL_SOURCE
# undef _ALL_SOURCE
#endif
d494 2
a495 4
/* Enable non-POSIX extensions on ConvexOS. */
#ifndef _CONVEX_SOURCE
# undef _CONVEX_SOURCE
#endif
d497 2
a498 4
/* Enable GNU extensions on systems that have them. */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE	1
#endif
d500 2
a501 2
/* Define if you need to in order for stat and other things to work. */
#undef _POSIX_SOURCE
a502 14
/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define if your system lacks the dev_t type. */
#undef dev_t

/* Define to `int' if <sys/types.h> doesn't define. */
#undef gid_t

/* Define if your system lacks the ino_t type. */
#undef ino_t

/* Define to `int' if <sys/types.h> does not define. */
#undef mode_t
d504 1
a504 15
/* Define to `int' if <signal.h> does not define. */
#undef sig_atomic_t

/* Define if your system lacks the size_t type. */
#undef size_t

/* Define if your system lacks the ssize_t type. */
#undef ssize_t

/* Define to `int' if <sys/types.h> doesn't define. */
#undef uid_t

/* Define to empty if the keyword `volatile' does not work. Warning: valid
   code using `volatile' can become incorrect without. Disable with care. */
#undef volatile
d510 1
a510 10
# define sudo_waitpid(p, s, o)	waitpid(p, s, o)
#else
# ifdef HAVE_WAIT3
#  define sudo_waitpid(p, s, o)	wait3(s, o, NULL)
# endif
#endif

/* Solaris doesn't use const qualifiers in PAM. */
#ifdef sun
# define PAM_CONST
d512 3
a514 1
# define PAM_CONST	const
d518 1
a518 1
# define EXEC	execv
d520 1
a520 1
# define EXEC	execvp
a522 10
/* New ANSI-style OS defs for HP-UX and ConvexOS. */
#if defined(hpux) && !defined(__hpux)
# define __hpux		1
#endif /* hpux */

#if defined(convex) && !defined(__convex__)
# define __convex__	1
#endif /* convex */

/* BSD compatibility on some SVR4 systems. */
d524 1
a524 1
# define BSD_COMP
@


1.4
log
@sudo 1.6.3; see http://www.courtesan.com/sudo/current.html for a list
of changes.
@
text
@d495 4
a498 1
#undef HAVE_LOGINCAP
@


1.3
log
@sudo 1.6.2
@
text
@d34 1
a34 1
 * $Sudo: config.h.in,v 1.143 2000/01/19 19:07:23 millert Exp $
d493 3
@


1.2
log
@sudo 1.6.1
@
text
@d34 1
a34 1
 * $Sudo: config.h.in,v 1.141 1999/12/09 04:04:42 millert Exp $
d254 2
a255 2
/* Define if you have ftruncate(2).  */
#undef HAVE_FTRUNCATE
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
 * $Sudo: config.h.in,v 1.139 1999/11/04 19:01:08 millert Exp $
d191 3
a302 3

/* Define if you have the <fnmatch.h> header file.  */
#undef HAVE_FNMATCH_H
@


1.1.1.1
log
@sudo 1.6, now with a BSD license
@
text
@@
