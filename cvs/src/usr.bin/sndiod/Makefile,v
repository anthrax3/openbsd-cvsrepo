head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2016.01.07.07.41.01;	author ratchov;	state Exp;
branches;
next	1.4;
commitid	pYtvupOMgjtQxXte;

1.4
date	2015.12.20.11.38.33;	author ratchov;	state Exp;
branches;
next	1.3;
commitid	PJvo9au8yzagFJ6z;

1.3
date	2013.11.21.08.15.46;	author ratchov;	state Exp;
branches;
next	1.2;

1.2
date	2013.11.19.07.24.57;	author ratchov;	state Exp;
branches;
next	1.1;

1.1
date	2012.11.23.07.03.28;	author ratchov;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Move sndiod man page to section 8.

suggested by deraadt, fixes from jmc, ok millert
@
text
@#	$OpenBSD: Makefile,v 1.3 2013/11/21 08:15:46 ratchov Exp $

PROG=	sndiod
SRCS=	abuf.c dev.c dsp.c fdpass.c file.c listen.c midi.c miofile.c \
	opt.c siofile.c sndiod.c sock.c utils.c
MAN=	sndiod.8
CFLAGS+=-DDEBUG -I${.CURDIR}/../../lib/libsndio
COPTS+=	-Wall -Wstrict-prototypes -Wmissing-prototypes -Wpointer-arith -Wundef
LDADD+=	-lsndio
.include <bsd.prog.mk>
@


1.4
log
@In case of a bug in sndiod, an attacker (a local user) could run
arbitrary code as user _sndio, i.e. get a second uid.

Mitigate the risk by implementing initial privilege separation as
follows. Break sndiod in two processes: a chroot()ed "worker" process
processing input, and a non-chroot()ed "helper" process opening
devices and passing descriptors to the worker.

With help from benno, claudio, semarie and gilles.

ok benno, semarie and tb
@
text
@d6 1
a6 1
MAN=	sndiod.1
@


1.3
log
@use -Wmissing-prototypes
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2013/11/19 07:24:57 ratchov Exp $
d4 1
a4 1
SRCS=	abuf.c dev.c dsp.c file.c listen.c midi.c miofile.c \
@


1.2
log
@move -Wxxx flags from CFALGS to COPTS

suggested by deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2012/11/23 07:03:28 ratchov Exp $
d8 1
a8 1
COPTS+=	-Wall -Wstrict-prototypes -Wpointer-arith -Wundef
@


1.1
log
@Remplace aucat server by a new sndiod daemon aimed to be simpler
smaller and faster than aucat. It's a drop in replacement with the
following exceptions that don't affect the default setup:
  - The sample rate and the encoding are a per-device parameters
    thus -r and -e options must precede the corresponding -f option
  - MIDI thru boxes are dynamically created and no -M option
    is required anymore, so -M was removed.
  - MIDI ports are exposed with a new ``midi/N'' name, rather
    than abusing MIDI thru boxes.
with help from armani@@, ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2011/12/09 14:36:42 ratchov Exp $
d4 2
a5 1
SRCS=	abuf.c dev.c dsp.c file.c listen.c midi.c miofile.c opt.c siofile.c sndiod.c sock.c utils.c
d7 2
a8 1
CFLAGS+= -Wall -Wstrict-prototypes -Wundef -DDEBUG -I${.CURDIR}/../../lib/libsndio
@

