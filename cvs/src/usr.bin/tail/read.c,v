head	1.20;
access;
symbols
	OPENBSD_6_1:1.20.0.4
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.17.0.4
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.16.0.4
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.14.0.22
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.20
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.16
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.14
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.12
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.10
	OPENBSD_5_0:1.14.0.8
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.6
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.4
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.13.0.8
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.4
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.2
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.12.0.2
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2017.03.26.19.55.07;	author martijn;	state Exp;
branches;
next	1.19;
commitid	A3wj5thVoXqC4ZOQ;

1.19
date	2017.02.01.20.21.19;	author tb;	state Exp;
branches;
next	1.18;
commitid	yWN2enVBEes6EZyb;

1.18
date	2017.02.01.16.21.12;	author martijn;	state Exp;
branches;
next	1.17;
commitid	X0S0hZ5n2sCTIU0P;

1.17
date	2015.11.19.17.50.04;	author tedu;	state Exp;
branches;
next	1.16;
commitid	nAQIOMPhgiIlY8Mk;

1.16
date	2015.03.26.21.26.43;	author tobias;	state Exp;
branches;
next	1.15;
commitid	SZww6nyjw8COp5IQ;

1.15
date	2015.02.06.23.21.59;	author millert;	state Exp;
branches;
next	1.14;
commitid	STdsVrA5MGLlnbLm;

1.14
date	2009.10.27.23.59.44;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2008.06.02.06.01.15;	author otto;	state Exp;
branches;
next	1.12;

1.12
date	2007.09.29.12.31.28;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2007.09.16.18.07.40;	author otto;	state Exp;
branches;
next	1.10;

1.10
date	2007.09.13.19.59.18;	author otto;	state Exp;
branches;
next	1.9;

1.9
date	2006.03.24.17.10.02;	author kjell;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.22.19.43.29;	author kjell;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.03.02.56.17;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.19.19.02.16;	author mpech;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.19.10.58.07;	author mpech;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.23.17.04.46;	author ericj;	state Exp;
branches;
next	1.3;

1.3
date	97.01.12.23.43.06;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.40.16;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.11;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.11;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Change a reallocarray+bzero into recallocarray.

OK tb@@ and deraadt@@
@
text
@/*	$OpenBSD: read.c,v 1.19 2017/02/01 20:21:19 tb Exp $	*/
/*	$NetBSD: read.c,v 1.4 1994/11/23 07:42:07 jtc Exp $	*/

/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Edward Sze-Tyan Wang.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/stat.h>

#include <err.h>
#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "extern.h"

/*
 * bytes -- read bytes to an offset from the end and display.
 *
 * This is the function that reads to a byte offset from the end of the input,
 * storing the data in a wrap-around buffer which is then displayed.  If the
 * rflag is set, the data is displayed in lines in reverse order, and this
 * routine has the usual nastiness of trying to find the newlines.  Otherwise,
 * it is displayed from the character closest to the beginning of the input to
 * the end.
 *
 * A non-zero return means an (non-fatal) error occurred.
 *
 */
int
bytes(struct tailfile *tf, off_t off)
{
	int ch;
	size_t len, tlen;
	char *ep, *p, *t;
	int wrap;
	char *sp;

	if (off > SIZE_MAX)
		errx(1, "offset too large");

	if ((sp = p = malloc(off)) == NULL)
		err(1, NULL);

	for (wrap = 0, ep = p + off; (ch = getc(tf->fp)) != EOF;) {
		*p = ch;
		if (++p == ep) {
			wrap = 1;
			p = sp;
		}
	}
	if (ferror(tf->fp)) {
		ierr(tf->fname);
		free(sp);
		return(1);
	}

	if (rflag) {
		for (t = p - 1, len = 0; t >= sp; --t, ++len)
			if (*t == '\n' && len) {
				WR(t + 1, len);
				len = 0;
			}
		if (wrap) {
			tlen = len;
			for (t = ep - 1, len = 0; t >= p; --t, ++len)
				if (*t == '\n') {
					if (len) {
						WR(t + 1, len);
						len = 0;
					}
					if (tlen) {
						WR(sp, tlen);
						tlen = 0;
					}
				}
			if (len)
				WR(t + 1, len);
			if (tlen)
				WR(sp, tlen);
		}
	} else {
		if (wrap && (len = ep - p))
			WR(p, len);
		if ((len = p - sp))
			WR(sp, len);
	}

	free(sp);
	return(0);
}

/*
 * lines -- read lines to an offset from the end and display.
 *
 * This is the function that reads to a line offset from the end of the input,
 * storing the data in an array of buffers which is then displayed.  If the
 * rflag is set, the data is displayed in lines in reverse order, and this
 * routine has the usual nastiness of trying to find the newlines.  Otherwise,
 * it is displayed from the line closest to the beginning of the input to
 * the end.
 *
 * A non-zero return means an (non-fatal) error occurred.
 *
 */
int
lines(struct tailfile *tf, off_t off)
{
	struct {
		size_t blen;
		size_t len;
		char *l;
	} *lines = NULL;
	int ch, rc = 0;
	char *p = NULL;
	int wrap;
	size_t cnt, lineno, nlineno, recno, blen, newsize;
	char *sp = NULL, *newp = NULL;

	if (off > SIZE_MAX)
		errx(1, "offset too large");

	lineno = blen = cnt = recno = wrap = 0;

	while ((ch = getc(tf->fp)) != EOF) {
		if (++cnt > blen) {
			newsize = blen + 1024;
			if ((newp = realloc(sp, newsize)) == NULL)
				err(1, NULL);
			sp = newp;
			blen = newsize;
			p = sp + cnt - 1;
		}
		*p++ = ch;
		if (recno >= lineno) {
			nlineno = (lineno + 1024) > off ?
			    (size_t) off : lineno + 1024;
			if ((lines = recallocarray(lines, lineno, nlineno,
			    sizeof(*lines))) == NULL)
				err(1, NULL);
			lineno = nlineno;
		}
		if (ch == '\n') {
			if (lines[recno].blen < cnt) {
				newsize = cnt + 256;
				if ((newp = realloc(lines[recno].l,
				    newsize)) == NULL)
					err(1, NULL);
				lines[recno].l = newp;
				lines[recno].blen = newsize;
			}
			memcpy(lines[recno].l, sp, (lines[recno].len = cnt));
			cnt = 0;
			p = sp;
			if (++recno == off) {
				wrap = 1;
				recno = 0;
			}
		}
	}
	if (ferror(tf->fp)) {
		ierr(tf->fname);
		rc = 1;
		goto done;
	}
	if (cnt) {
		lines[recno].l = sp;
		lines[recno].len = cnt;
		sp = NULL;
		if (++recno == off) {
			wrap = 1;
			recno = 0;
		}
	}

	if (rflag) {
		for (cnt = recno; cnt > 0; --cnt)
			WR(lines[cnt - 1].l, lines[cnt - 1].len);
		if (wrap)
			for (cnt = off; cnt > recno; --cnt)
				WR(lines[cnt - 1].l, lines[cnt - 1].len);
	} else {
		if (wrap)
			for (cnt = recno; cnt < off; ++cnt)
				WR(lines[cnt].l, lines[cnt].len);
		for (cnt = 0; cnt < recno; ++cnt)
			WR(lines[cnt].l, lines[cnt].len);
	}
done:
	for (cnt = 0; cnt < lineno; cnt++)
		free(lines[cnt].l);
	free(sp);
	free(lines);
	return(rc);
}
@


1.19
log
@Add a missing sizeof(*lines) factor to previous commit to ensure we zero
out enough of the lines array.  Problem found with malloc's 'J' option.

ok martijn
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.18 2017/02/01 16:21:12 martijn Exp $	*/
d169 2
a170 2
			lines = reallocarray(lines, nlineno, sizeof(*lines));
			if (lines == NULL)
a171 2
			bzero(lines + recno,
			    (nlineno - lineno) * sizeof(*lines));
@


1.18
log
@Don't allocate the buffer for the -n flag in one call.
Fixes an ENOMEM with an extremely large -n value and a small input.
Issue reported by Soner Tari

OK stsp@@
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.17 2015/11/19 17:50:04 tedu Exp $	*/
d172 2
a173 1
			bzero(lines + recno, nlineno - lineno);
@


1.17
log
@another try to allow tailing multiple files. maybe it works?
commit now to allow people to test.
from Martijn van Duren
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.16 2015/03/26 21:26:43 tobias Exp $	*/
d144 1
a144 1
	} *lines;
d148 1
a148 1
	size_t cnt, recno, blen, newsize;
d154 1
a154 4
	if ((lines = calloc(off, sizeof(*lines))) == NULL)
		err(1, NULL);

	blen = cnt = recno = wrap = 0;
d166 9
d222 1
a222 1
	for (cnt = 0; cnt < off; cnt++)
@


1.16
log
@Whitespace fix: Closing bracket belongs to if-block, not enclosing for
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.15 2015/02/06 23:21:59 millert Exp $	*/
d62 1
a62 1
bytes(FILE *fp, off_t off)
d76 1
a76 1
	for (wrap = 0, ep = p + off; (ch = getc(fp)) != EOF;) {
d83 2
a84 2
	if (ferror(fp)) {
		ierr();
d138 1
a138 1
lines(FILE *fp, off_t off)
d159 1
a159 1
	while ((ch = getc(fp)) != EOF) {
d187 2
a188 2
	if (ferror(fp)) {
		ierr();
@


1.15
log
@SIZE_MAX is standard, we should be using it in preference to the
obsolete SIZE_T_MAX.  OK miod@@ beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.14 2009/10/27 23:59:44 deraadt Exp $	*/
d94 1
a94 1
		}
@


1.14
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.13 2008/06/02 06:01:15 otto Exp $	*/
a37 1
#include <sys/limits.h>
d41 1
d70 1
a70 1
	if (off > SIZE_T_MAX)
d151 1
a151 1
	if (off > SIZE_T_MAX)
@


1.13
log
@fix double free which can happen if the last line has no newline;
from Matthew Dempsky; ok ray@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.12 2007/09/29 12:31:28 otto Exp $	*/
a34 7

#ifndef lint
#if 0
static char sccsid[] = "@@(#)read.c	8.1 (Berkeley) 6/6/93";
#endif
static char rcsid[] = "$OpenBSD: read.c,v 1.12 2007/09/29 12:31:28 otto Exp $";
#endif /* not lint */
@


1.12
log
@unneeded includes and whitespace police; from Igor Zinovik
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.11 2007/09/16 18:07:40 otto Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: read.c,v 1.11 2007/09/16 18:07:40 otto Exp $";
d202 1
@


1.11
log
@Another mem leak plugged. With help from Igor Zinovi. ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.10 2007/09/13 19:59:18 otto Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: read.c,v 1.10 2007/09/13 19:59:18 otto Exp $";
a47 2
#include <errno.h>
#include <fcntl.h>
@


1.10
log
@Plug mem leak. From Igor Zinovik; ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.9 2006/03/24 17:10:02 kjell Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: read.c,v 1.9 2006/03/24 17:10:02 kjell Exp $";
d154 1
a154 1
	int ch;
d198 2
a199 1
		return(1);
d223 6
a228 1
	return(0);
@


1.9
log
@ANSIfy. Ok ray@@
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.8 2006/03/22 19:43:29 kjell Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: read.c,v 1.8 2006/03/22 19:43:29 kjell Exp $";
d94 1
d128 2
@


1.8
log
@Clean up some lint and -Wall.
Changed many signed types ->size_t for consistency. Also, fix
some realloc usage.

Original from <jasonrcrawford at gmail.com> (ok ray@@)
Additions and additional cleanup to fix some off_t -> size_t issue by me.

"looks good" otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.7 2003/06/03 02:56:17 millert Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: read.c,v 1.7 2003/06/03 02:56:17 millert Exp $";
d71 1
a71 3
bytes(fp, off)
	FILE *fp;
	off_t off;
d144 1
a144 3
lines(fp, off)
	FILE *fp;
	off_t off;
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.6 2001/11/19 19:02:16 mpech Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: read.c,v 1.6 2001/11/19 19:02:16 mpech Exp $";
d45 1
d75 2
a76 1
	int ch, len, tlen;
d81 3
d151 2
a152 2
		u_int blen;
		u_int len;
d157 6
a162 2
	int blen, cnt, recno, wrap;
	char *sp = NULL;
d171 2
a172 1
			if ((sp = realloc(sp, blen += 1024)) == NULL)
d174 2
d181 3
a183 3
				lines[recno].blen = cnt + 256;
				if ((lines[recno].l = realloc(lines[recno].l,
				    lines[recno].blen)) == NULL)
d185 2
d211 2
a212 2
		for (cnt = recno - 1; cnt >= 0; --cnt)
			WR(lines[cnt].l, lines[cnt].len);
d214 2
a215 2
			for (cnt = off - 1; cnt >= recno; --cnt)
				WR(lines[cnt].l, lines[cnt].len);
@


1.6
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.5 2001/09/19 10:58:07 mpech Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d40 1
a40 1
static char rcsid[] = "$OpenBSD: read.c,v 1.5 2001/09/19 10:58:07 mpech Exp $";
@


1.5
log
@occured->occurred

idea from deraadt@@ via NetBSD
millert@@ ok

p.s. Next commit will fix a typo in the sys/
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.4 2000/06/23 17:04:46 ericj Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: read.c,v 1.4 2000/06/23 17:04:46 ericj Exp $";
d75 1
a75 1
	register FILE *fp;
d78 2
a79 2
	register int ch, len, tlen;
	register char *ep, *p, *t;
d146 1
a146 1
	register FILE *fp;
d154 2
a155 2
	register int ch;
	register char *p = NULL;
@


1.4
log
@Get rid of repeating error messages; From netbsd millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.3 1997/01/12 23:43:06 millert Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: read.c,v 1.3 1997/01/12 23:43:06 millert Exp $";
d70 1
a70 1
 * A non-zero return means an (non-fatal) error occured.
d141 1
a141 1
 * A non-zero return means an (non-fatal) error occured.
@


1.3
log
@Fix core dump and use libc err(3) instead of private one (which had
slightly different semantics).  Also clean up some gcc -Wall'isms.
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.2 1996/06/26 05:40:16 deraadt Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: read.c,v 1.2 1996/06/26 05:40:16 deraadt Exp $";
d69 3
d73 1
a73 1
void
d95 1
a95 1
		return;
d128 1
d140 3
d144 1
a144 1
void
d189 1
a189 1
		return;
d213 1
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: read.c,v 1.4 1994/11/23 07:42:07 jtc Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: read.c,v 1.4 1994/11/23 07:42:07 jtc Exp $";
d49 3
a52 2
#include <errno.h>
#include <unistd.h>
d56 2
d81 1
a81 1
		err(1, "%s", strerror(errno));
d122 1
a122 1
		if (len = p - sp)
d148 1
a148 1
	register char *p;
d150 1
a150 1
	char *sp;
d152 2
a153 2
	if ((lines = malloc(off * sizeof(*lines))) == NULL)
		err(1, "%s", strerror(errno));
a154 1
	sp = NULL;
d160 1
a160 1
				err(1, "%s", strerror(errno));
d169 1
a169 1
					err(1, "%s", strerror(errno));
d171 1
a171 1
			bcopy(sp, lines[recno].l, lines[recno].len = cnt);
@


1.1
log
@Initial revision
@
text
@d1 1
d44 1
a44 1
static char rcsid[] = "$NetBSD: read.c,v 1.4 1994/11/23 07:42:07 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
