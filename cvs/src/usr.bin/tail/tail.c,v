head	1.21;
access;
symbols
	OPENBSD_6_1:1.21.0.6
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.4
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.17.0.26
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.18
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.22
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.20
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.16
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.14
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.12
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.10
	OPENBSD_5_0:1.17.0.8
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.6
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.4
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.2
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.16.0.6
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.2
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.14.0.4
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.2
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.13.0.6
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.4
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.2
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.12.0.10
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.8
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.6
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.4
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.8
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.4
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.21
date	2016.02.03.12.23.57;	author halex;	state Exp;
branches;
next	1.20;
commitid	MaetFpjCuVbXkCZ1;

1.20
date	2015.11.19.17.50.04;	author tedu;	state Exp;
branches;
next	1.19;
commitid	nAQIOMPhgiIlY8Mk;

1.19
date	2015.10.09.01.37.09;	author deraadt;	state Exp;
branches;
next	1.18;
commitid	sbrB3Q5CNxcwZpfU;

1.18
date	2015.10.07.03.49.41;	author deraadt;	state Exp;
branches;
next	1.17;
commitid	6tjnRTmwDXYHKnJo;

1.17
date	2009.10.27.23.59.44;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2008.11.13.18.33.03;	author landry;	state Exp;
branches;
next	1.15;

1.15
date	2008.10.17.11.38.20;	author landry;	state Exp;
branches;
next	1.14;

1.14
date	2007.10.31.16.29.50;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.22.19.43.29;	author kjell;	state Exp;
branches;
next	1.12;

1.12
date	2004.02.16.19.48.21;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.10.22.20.52;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.03.02.56.17;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.04.08.00.04.06;	author dhartmei;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.16.21.27.54;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.19.19.02.16;	author mpech;	state Exp;
branches;
next	1.6;

1.6
date	2000.11.21.22.01.48;	author art;	state Exp;
branches;
next	1.5;

1.5
date	99.02.03.02.09.30;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.01.15.23.43.18;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.01.12.23.43.07;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.40.18;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.11;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.11;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.21
log
@fix off-by-one in argument parsing

ok martijn@@
@
text
@/*	$OpenBSD: tail.c,v 1.20 2015/11/19 17:50:04 tedu Exp $	*/

/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Edward Sze-Tyan Wang.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/stat.h>

#include <err.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "extern.h"

int fflag, rflag, rval;
int is_stdin;

static void obsolete(char **);
static void usage(void);

int
main(int argc, char *argv[])
{
	struct tailfile *tf;
	off_t off = 0;
	enum STYLE style;
	int ch;
	int i;
	char *p;

	if (pledge("stdio rpath", NULL) == -1)
		err(1, "pledge");

	/*
	 * Tail's options are weird.  First, -n10 is the same as -n-10, not
	 * -n+10.  Second, the number options are 1 based and not offsets,
	 * so -n+1 is the first line, and -c-1 is the last byte.  Third, the
	 * number options for the -r option specify the number of things that
	 * get displayed, not the starting point in the file.  The one major
	 * incompatibility in this version as compared to historical versions
	 * is that the 'r' option couldn't be modified by the -lbc options,
	 * i.e. it was always done in lines.  This version treats -rc as a
	 * number of characters in reverse order.  Finally, the default for
	 * -r is the entire file, not 10 lines.
	 */
#define	ARG(units, forward, backward) {					\
	if (style)							\
		usage();						\
	off = strtoll(optarg, &p, 10) * (units);			\
	if (*p)								\
		errx(1, "illegal offset -- %s", optarg);		\
	switch(optarg[0]) {						\
	case '+':							\
		if (off)						\
			off -= (units);					\
			style = (forward);				\
		break;							\
	case '-':							\
		off = -off;						\
		/* FALLTHROUGH */					\
	default:							\
		style = (backward);					\
		break;							\
	}								\
}

	obsolete(argv);
	style = NOTSET;
	while ((ch = getopt(argc, argv, "b:c:fn:r")) != -1)
		switch(ch) {
		case 'b':
			ARG(512, FBYTES, RBYTES);
			break;
		case 'c':
			ARG(1, FBYTES, RBYTES);
			break;
		case 'f':
			fflag = 1;
			break;
		case 'n':
			ARG(1, FLINES, RLINES);
			break;
		case 'r':
			rflag = 1;
			break;
		case '?':
		default:
			usage();
		}
	argc -= optind;
	argv += optind;

	/*
	 * If displaying in reverse, don't permit follow option, and convert
	 * style values.
	 */
	if (rflag) {
		if (fflag)
			usage();
		if (style == FBYTES)
			style = RBYTES;
		else if (style == FLINES)
			style = RLINES;
	}

	/*
	 * If style not specified, the default is the whole file for -r, and
	 * the last 10 lines if not -r.
	 */
	if (style == NOTSET) {
		if (rflag) {
			off = 0;
			style = REVERSE;
		} else {
			off = 10;
			style = RLINES;
		}
	}

	if ((tf = reallocarray(NULL, argc ? argc : 1, sizeof(*tf))) == NULL)
		err(1, "reallocarray");

	if (argc) {
		for (i = 0; *argv; i++) {
			tf[i].fname = *argv++;
			if ((tf[i].fp = fopen(tf[i].fname, "r")) == NULL ||
			    fstat(fileno(tf[i].fp), &(tf[i].sb))) {
				ierr(tf[i].fname);
				i--;
				continue;
			}
		}
		if (rflag)
			reverse(tf, i, style, off);
		else
			forward(tf, i, style, off);
	}
	else {
		if (pledge("stdio", NULL) == -1)
			err(1, "pledge");

		tf[0].fname = "stdin";
		tf[0].fp = stdin;
		is_stdin = 1;

		if (fstat(fileno(stdin), &(tf[0].sb))) {
			ierr(tf[0].fname);
			exit(1);
		}

		/*
		 * Determine if input is a pipe.  4.4BSD will set the SOCKET
		 * bit in the st_mode field for pipes.  Fix this then.
		 */
		if (lseek(fileno(tf[0].fp), (off_t)0, SEEK_CUR) == -1 &&
		    errno == ESPIPE) {
			errno = 0;
			fflag = 0;		/* POSIX.2 requires this. */
		}

		if (rflag)
			reverse(tf, 1, style, off);
		else
			forward(tf, 1, style, off);
	}
	exit(rval);
}

/*
 * Convert the obsolete argument form into something that getopt can handle.
 * This means that anything of the form [+-][0-9][0-9]*[lbc][fr] that isn't
 * the option argument for a -b, -c or -n option gets converted.
 */
static void
obsolete(char *argv[])
{
	char *ap, *p, *t;
	size_t len;
	char *start;

	while ((ap = *++argv)) {
		/* Return if "--" or not an option of any form. */
		if (ap[0] != '-') {
			if (ap[0] != '+')
				return;
		} else if (ap[1] == '-')
			return;

		switch(*++ap) {
		/* Old-style option. */
		case '0': case '1': case '2': case '3': case '4':
		case '5': case '6': case '7': case '8': case '9':

			/* Malloc space for dash, new option and argument. */
			len = strlen(*argv);
			if ((start = p = malloc(len + 4)) == NULL)
				err(1, NULL);
			*p++ = '-';

			/*
			 * Go to the end of the option argument.  Save off any
			 * trailing options (-3lf) and translate any trailing
			 * output style characters.
			 */
			t = *argv + len - 1;
			if (*t == 'f' || *t == 'r') {
				*p++ = *t;
				*t-- = '\0';
			}
			switch(*t) {
			case 'b':
				*p++ = 'b';
				*t = '\0';
				break;
			case 'c':
				*p++ = 'c';
				*t = '\0';
				break;
			case 'l':
				*t = '\0';
				/* FALLTHROUGH */
			case '0': case '1': case '2': case '3': case '4':
			case '5': case '6': case '7': case '8': case '9':
				*p++ = 'n';
				break;
			default:
				errx(1, "illegal option -- %s", *argv);
			}
			*p++ = *argv[0];
			(void)strlcpy(p, ap, start + len + 4 - p);
			*argv = start;
			continue;

		/*
		 * Options w/ arguments, skip the argument and continue
		 * with the next option.
		 */
		case 'b':
		case 'c':
		case 'n':
			if (!ap[1])
				++argv;
			/* FALLTHROUGH */
		/* Options w/o arguments, continue with the next option. */
		case 'f':
		case 'r':
			continue;

		/* Illegal option, return and let getopt handle it. */
		default:
			return;
		}
	}
}

static void
usage(void)
{
	(void)fprintf(stderr,
	    "usage: tail [-f | -r] "
	    "[-b number | -c number | -n number | -number] [file ...]\n");
	exit(1);
}
@


1.20
log
@another try to allow tailing multiple files. maybe it works?
commit now to allow people to test.
from Martijn van Duren
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.19 2015/10/09 01:37:09 deraadt Exp $	*/
d156 2
a157 1
		for (i = 0; (tf[i].fname = *argv++); i++) {
@


1.19
log
@Change all tame callers to namechange to pledge(2).
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.18 2015/10/07 03:49:41 deraadt Exp $	*/
a47 1
char *fname;
d56 1
a56 2
	struct stat sb;
	FILE *fp;
d59 2
a60 1
	int ch, first;
a124 3
	if (fflag && argc > 1)
		errx(1, "-f option only appropriate for a single file");

d152 9
a160 5
	if (*argv)
		for (first = 1; (fname = *argv++);) {
			if ((fp = fopen(fname, "r")) == NULL ||
			    fstat(fileno(fp), &sb)) {
				ierr();
a162 12
			if (argc > 1) {
				(void)printf("%s==> %s <==\n",
				    first ? "" : "\n", fname);
				first = 0;
				(void)fflush(stdout);
			}

			if (rflag)
				reverse(fp, style, off, &sb);
			else
				forward(fp, style, off, &sb);
			(void)fclose(fp);
d164 5
d173 2
a174 1
		fname = "stdin";
d177 2
a178 2
		if (fstat(fileno(stdin), &sb)) {
			ierr();
d186 1
a186 1
		if (lseek(fileno(stdin), (off_t)0, SEEK_CUR) == -1 &&
d193 1
a193 1
			reverse(stdin, style, off, &sb);
d195 1
a195 1
			forward(stdin, style, off, &sb);
@


1.18
log
@tame "stdio rpath" for when paths are specified; otherwise tame "stdio"
for the stdin case.
ok doug
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.17 2009/10/27 23:59:44 deraadt Exp $	*/
d64 2
a65 2
	if (tame("stdio rpath", NULL) == -1)
		err(1, "tame");
d177 2
a178 2
		if (tame("stdio", NULL) == -1)
			err(1, "tame");
@


1.17
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.16 2008/11/13 18:33:03 landry Exp $	*/
d64 3
d177 3
@


1.16
log
@Backout previous commit, there are still some issues with it.
ok sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.14 2007/10/31 16:29:50 jmc Exp $	*/
a33 13

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1991, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)tail.c	8.1 (Berkeley) 6/6/93";
#endif
static char rcsid[] = "$OpenBSD: tail.c,v 1.14 2007/10/31 16:29:50 jmc Exp $";
#endif /* not lint */
@


1.15
log
@Permit tail -f to follow multiple files, useful when you want to monitor
several logfiles in a single terminal. split forward() and move the
corresponding -rewritten- code to follow().
Closes PR 5092.

ok millert@@ gilles@@ sobrado@@
@
text
@d135 4
a164 18
	
	if (*argv) {
		if (fflag) {
			follow(argv, argc, style, off);
		}
		else {	
			for (first = 1; (fname = *argv++);) {
				if ((fp = fopen(fname, "r")) == NULL ||
				    fstat(fileno(fp), &sb)) {
					ierr();
					continue;
				}
				if (argc > 1) {
					(void)printf("%s==> %s <==\n",
					    first ? "" : "\n", fname);
					first = 0;
					(void)fflush(stdout);
				}
d166 6
a171 5
				if (rflag)
					reverse(fp, style, off, &sb);
				else
					forward(fp, style, off, &sb);
				(void)fclose(fp);
d173 12
a185 1
	}
@


1.14
log
@sync usage() w/ synopsis; from Pierre Riteau
ok sobrado
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.13 2006/03/22 19:43:29 kjell Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: tail.c,v 1.13 2006/03/22 19:43:29 kjell Exp $";
a134 4

	if (fflag && argc > 1)
		errx(1, "-f option only appropriate for a single file");

d161 24
a184 7

	if (*argv)
		for (first = 1; (fname = *argv++);) {
			if ((fp = fopen(fname, "r")) == NULL ||
			    fstat(fileno(fp), &sb)) {
				ierr();
				continue;
a185 12
			if (argc > 1) {
				(void)printf("%s==> %s <==\n",
				    first ? "" : "\n", fname);
				first = 0;
				(void)fflush(stdout);
			}

			if (rflag)
				reverse(fp, style, off, &sb);
			else
				forward(fp, style, off, &sb);
			(void)fclose(fp);
d187 1
@


1.13
log
@Clean up some lint and -Wall.
Changed many signed types ->size_t for consistency. Also, fix
some realloc usage.

Original from <jasonrcrawford at gmail.com> (ok ray@@)
Additions and additional cleanup to fix some off_t -> size_t issue by me.

"looks good" otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.12 2004/02/16 19:48:21 otto Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: tail.c,v 1.12 2004/02/16 19:48:21 otto Exp $";
d304 2
a305 1
	    "usage: tail [-f | -r] [-b # | -c # | -n #] [file ...]\n");
@


1.12
log
@make -b and -c work with large offsets; tweak from millert@@
ok henning@@ itojun@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.11 2003/06/10 22:20:52 deraadt Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: tail.c,v 1.11 2003/06/10 22:20:52 deraadt Exp $";
d222 1
a222 1
	int len;
@


1.11
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.10 2003/06/03 02:56:17 millert Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: tail.c,v 1.10 2003/06/03 02:56:17 millert Exp $";
d72 1
a72 1
	long off = 0;
d92 1
a92 1
	off = strtol(optarg, &p, 10) * (units);				\
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.9 2003/04/08 00:04:06 dhartmei Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: tail.c,v 1.9 2003/04/08 00:04:06 dhartmei Exp $";
d68 1
a68 3
main(argc, argv)
	int argc;
	char *argv[];
d219 1
a219 2
obsolete(argv)
	char *argv[];
d301 1
a301 1
usage()
@


1.9
log
@strlcpy conversion, increase buffer size by one char. ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.8 2002/02/16 21:27:54 millert Exp $	*/
d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d45 1
a45 1
static char rcsid[] = "$OpenBSD: tail.c,v 1.8 2002/02/16 21:27:54 millert Exp $";
@


1.8
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.7 2001/11/19 19:02:16 mpech Exp $	*/
d49 1
a49 1
static char rcsid[] = "$OpenBSD: tail.c,v 1.7 2001/11/19 19:02:16 mpech Exp $";
d247 1
a247 1
			if ((start = p = malloc(len + 3)) == NULL)
d281 1
a281 1
			(void)strcpy(p, ap);
@


1.7
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.6 2000/11/21 22:01:48 art Exp $	*/
d49 1
a49 1
static char rcsid[] = "$OpenBSD: tail.c,v 1.6 2000/11/21 22:01:48 art Exp $";
d68 2
a69 2
static void obsolete __P((char **));
static void usage __P((void));
@


1.6
log
@When doing tail -f from stdin don't reopen a local file named stdin.
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.5 1999/02/03 02:09:30 millert Exp $	*/
d49 1
a49 1
static char rcsid[] = "$OpenBSD: tail.c,v 1.5 1999/02/03 02:09:30 millert Exp $";
d228 1
a228 1
	register char *ap, *p, *t;
@


1.5
log
@Fix broken conversion of private err() function and make ierr() and oerr()
back into functions, not macros.  Also make functions that call mmap()
return an int so we can fall back to non-mmap (slow) version on mmap failure.
Noticable effects:
 o when you tail multiple files, if one of the files doesn't exist or
   is otherwise broken, keep on going to the next file.
 o it is now possible to tail files > 2gig, though it will be *very* slow
   since tail will be unable to use mmap()
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.4 1997/01/15 23:43:18 millert Exp $	*/
d49 1
a49 1
static char rcsid[] = "$OpenBSD: tail.c,v 1.4 1997/01/15 23:43:18 millert Exp $";
d66 1
d194 1
@


1.4
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.3 1997/01/12 23:43:07 millert Exp $	*/
d49 1
a49 1
static char rcsid[] = "$OpenBSD: tail.c,v 1.3 1997/01/12 23:43:07 millert Exp $";
d161 1
a161 1
	if (style == NOTSET)
d169 1
@


1.3
log
@Fix core dump and use libc err(3) instead of private one (which had
slightly different semantics).  Also clean up some gcc -Wall'isms.
@
text
@d1 1
a1 1
/*	$OpenBSD: tail.c,v 1.2 1996/06/26 05:40:18 deraadt Exp $	*/
d49 1
a49 1
static char rcsid[] = "$OpenBSD: tail.c,v 1.2 1996/06/26 05:40:18 deraadt Exp $";
d117 1
a117 1
	while ((ch = getopt(argc, argv, "b:c:fn:r")) != EOF)
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d49 1
a49 1
static char rcsid[] = "$OpenBSD: tail.c,v 1.4 1994/11/23 07:42:16 jtc Exp $";
d54 2
a56 1
#include <unistd.h>
d60 2
d77 1
a77 1
	long off;
d99 1
a99 1
		err(1, "illegal offset -- %s", optarg);			\
d142 1
a142 1
		err(1, "-f option only appropriate for a single file");
d171 1
a171 1
		for (first = 1; fname = *argv++;) {
d229 1
a229 1
	while (ap = *++argv) {
d245 1
a245 1
				err(1, "%s", strerror(errno));
d275 1
a275 1
				err(1, "illegal option -- %s", *argv);
@


1.1
log
@Initial revision
@
text
@d1 2
d49 1
a49 1
static char rcsid[] = "$NetBSD: tail.c,v 1.4 1994/11/23 07:42:16 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
