head	1.19;
access;
symbols
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.4
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.17.0.8
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.4
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.16.0.4
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.15.0.16
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.14
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.12
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.10
	OPENBSD_5_0:1.15.0.8
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.6
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.14.0.8
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.4
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.2
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.13.0.14
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.12
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.10
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.8
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.6
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.4
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.2
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.12.0.2
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.5.0.18
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.16
	OPENBSD_2_8:1.5.0.14
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.12
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.10
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.8
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.6
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2015.10.09.01.37.09;	author deraadt;	state Exp;
branches;
next	1.18;
commitid	sbrB3Q5CNxcwZpfU;

1.18
date	2015.10.06.13.49.33;	author deraadt;	state Exp;
branches;
next	1.17;
commitid	tJG0laTi1QBqV1av;

1.17
date	2014.06.03.20.57.23;	author millert;	state Exp;
branches;
next	1.16;
commitid	mzoY7O3FTBZ1GTZ6;

1.16
date	2013.11.27.13.32.02;	author okan;	state Exp;
branches;
next	1.15;

1.15
date	2009.10.27.23.59.46;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2008.07.09.19.41.56;	author sobrado;	state Exp;
branches;
next	1.13;

1.13
date	2004.09.15.22.12.19;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2004.05.09.03.20.20;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.26.16.03.43;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.10.22.20.53;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.03.02.56.20;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.16.21.27.55;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.09.02.03.28;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.19.19.02.17;	author mpech;	state Exp;
branches;
next	1.5;

1.5
date	97.07.25.21.14.04;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	97.07.25.21.05.45;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	97.01.15.23.43.24;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.41.51;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Change all tame callers to namechange to pledge(2).
@
text
@/*	$OpenBSD: tr.c,v 1.18 2015/10/06 13:49:33 deraadt Exp $	*/
/*	$NetBSD: tr.c,v 1.5 1995/08/31 22:13:48 jtc Exp $	*/

/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <err.h>

#include "extern.h"

static int string1[NCHARS] = {
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,		/* ASCII */
	0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
	0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
	0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
	0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
	0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
	0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,
	0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,
	0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f,
	0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
	0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f,
	0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97,
	0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f,
	0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,
	0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
	0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7,
	0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
	0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7,
	0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
	0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7,
	0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
	0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7,
	0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
	0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7,
	0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff,
}, string2[NCHARS];

STR s1 = { STRING1, NORMAL, 0, OOBCH, { 0, OOBCH }, NULL, NULL };
STR s2 = { STRING2, NORMAL, 0, OOBCH, { 0, OOBCH }, NULL, NULL };

static void setup(int *, char *, STR *, int);
static void usage(void);

int
main(int argc, char *argv[])
{
	int ch, cnt, lastch, *p;
	int cflag, dflag, sflag, isstring2;

	if (pledge("stdio", NULL) == -1)
		err(1, "pledge");

	cflag = dflag = sflag = 0;
	while ((ch = getopt(argc, argv, "Ccds")) != -1)
		switch(ch) {
		case 'C':
		case 'c':
			cflag = 1;
			break;
		case 'd':
			dflag = 1;
			break;
		case 's':
			sflag = 1;
			break;
		case '?':
		default:
			usage();
		}
	argc -= optind;
	argv += optind;

	switch(argc) {
	case 0:
	default:
		usage();
		/* NOTREACHED */
	case 1:
		isstring2 = 0;
		break;
	case 2:
		isstring2 = 1;
		break;
	}

	/*
	 * tr -ds [-Cc] string1 string2
	 * Delete all characters (or complemented characters) in string1.
	 * Squeeze all characters in string2.
	 */
	if (dflag && sflag) {
		if (!isstring2)
			usage();

		setup(string1, argv[0], &s1, cflag);
		setup(string2, argv[1], &s2, 0);

		for (lastch = OOBCH; (ch = getchar()) != EOF;)
			if (!string1[ch] && (!string2[ch] || lastch != ch)) {
				lastch = ch;
				(void)putchar(ch);
			}
		exit(0);
	}

	/*
	 * tr -d [-Cc] string1
	 * Delete all characters (or complemented characters) in string1.
	 */
	if (dflag) {
		if (isstring2)
			usage();

		setup(string1, argv[0], &s1, cflag);

		while ((ch = getchar()) != EOF)
			if (!string1[ch])
				(void)putchar(ch);
		exit(0);
	}

	/*
	 * tr -s [-Cc] string1
	 * Squeeze all characters (or complemented characters) in string1.
	 */
	if (sflag && !isstring2) {
		setup(string1, argv[0], &s1, cflag);

		for (lastch = OOBCH; (ch = getchar()) != EOF;)
			if (!string1[ch] || lastch != ch) {
				lastch = ch;
				(void)putchar(ch);
			}
		exit(0);
	}

	/*
	 * tr [-Ccs] string1 string2
	 * Replace all characters (or complemented characters) in string1 with
	 * the character in the same position in string2.  If the -s option is
	 * specified, squeeze all the characters in string2.
	 */
	if (!isstring2)
		usage();

	s1.str = (unsigned char *)argv[0];
	s2.str = (unsigned char *)argv[1];

	if (cflag)
		for (cnt = NCHARS, p = string1; cnt--;)
			*p++ = OOBCH;

	if (!next(&s2))
		errx(1, "empty string2");

	/* If string2 runs out of characters, use the last one specified. */
	ch = s2.lastch;
	if (sflag)
		while (next(&s1)) {
			string1[s1.lastch] = ch = s2.lastch;
			string2[ch] = 1;
			(void)next(&s2);
		}
	else
		while (next(&s1)) {
			string1[s1.lastch] = ch = s2.lastch;
			(void)next(&s2);
		}

	if (cflag)
		for (cnt = 0, p = string1; cnt < NCHARS; ++p, ++cnt)
			*p = *p == OOBCH ? ch : cnt;

	if (sflag)
		for (lastch = OOBCH; (ch = getchar()) != EOF;) {
			ch = string1[ch];
			if (!string2[ch] || lastch != ch) {
				lastch = ch;
				(void)putchar(ch);
			}
		}
	else
		while ((ch = getchar()) != EOF)
			(void)putchar(string1[ch]);
	exit (0);
}

static void
setup(int *string, char *arg, STR *str, int cflag)
{
	int cnt, *p;

	str->str = (unsigned char *)arg;
	bzero(string, NCHARS * sizeof(int));
	while (next(str))
		string[str->lastch] = 1;
	if (cflag)
		for (p = string, cnt = NCHARS; cnt--; ++p)
			*p = !*p;
}

static void
usage(void)
{
	fprintf(stderr,
	    "usage: tr [-Ccs] string1 string2\n"
	    "       tr [-Cc] -d string1\n"
	    "       tr [-Cc] -s string1\n"
	    "       tr [-Cc] -ds string1 string2\n");
	exit(1);
}
@


1.18
log
@only modifies data, stdin to stdout, so tame "stdout"
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.17 2014/06/03 20:57:23 millert Exp $	*/
d90 2
a91 2
	if (tame("stdio", NULL) == -1)
		err(1, "tame");
@


1.17
log
@Accept -C as an alias for -c.  The -C option should be locale-aware,
but we don't have collation support yet.  Man bits OK jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.16 2013/11/27 13:32:02 okan Exp $	*/
d89 3
@


1.16
log
@remove erroneous char cast to switch expression processing getopt(3);
not used in any cases.

ok deraadt@@, guenther@@, millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.15 2009/10/27 23:59:46 deraadt Exp $	*/
d91 1
a91 1
	while ((ch = getopt(argc, argv, "cds")) != -1)
d93 1
d124 1
a124 1
	 * tr -ds [-c] string1 string2
d144 1
a144 1
	 * tr -d [-c] string1
d160 1
a160 1
	 * tr -s [-c] string1
d175 1
a175 1
	 * tr [-cs] string1 string2
d243 4
a246 4
	    "usage: tr [-cs] string1 string2\n"
	    "       tr [-c] -d string1\n"
	    "       tr [-c] -s string1\n"
	    "       tr [-c] -ds string1 string2\n");
@


1.15
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.14 2008/07/09 19:41:56 sobrado Exp $	*/
d92 1
a92 1
		switch((char)ch) {
@


1.14
log
@documentation tweaks.
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.13 2004/09/15 22:12:19 deraadt Exp $	*/
a31 13

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1988, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)tr.c	8.2 (Berkeley) 5/4/95";
#endif
static char rcsid[] = "$OpenBSD: tr.c,v 1.13 2004/09/15 22:12:19 deraadt Exp $";
#endif /* not lint */
@


1.13
log
@signed and unsigned char wiggles
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.12 2004/05/09 03:20:20 deraadt Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: tr.c,v 1.12 2004/05/09 03:20:20 deraadt Exp $";
d254 5
a258 4
	fprintf(stderr, "usage:\ttr [-cs] string1 string2\n"
	    "\ttr [-c] -d string1\n"
	    "\ttr [-c] -s string1\n"
	    "\ttr [-c] -ds string1 string2\n");
@


1.12
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.11 2003/06/26 16:03:43 mickey Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: tr.c,v 1.11 2003/06/26 16:03:43 mickey Exp $";
d195 2
a196 2
	s1.str = argv[0];
	s2.str = argv[1];
d242 1
a242 1
	str->str = arg;
@


1.11
log
@print usage in one printf (instead of four)
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.10 2003/06/10 22:20:53 deraadt Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: tr.c,v 1.10 2003/06/10 22:20:53 deraadt Exp $";
d146 1
a146 1
		
d254 4
a257 4
	(void)fprintf(stderr, "usage:\ttr [-cs] string1 string2\n"
			      "\ttr [-c] -d string1\n"
			      "\ttr [-c] -s string1\n"
			      "\ttr [-c] -ds string1 string2\n");
@


1.10
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.9 2003/06/03 02:56:20 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: tr.c,v 1.9 2003/06/03 02:56:20 millert Exp $";
d254 4
a257 4
	(void)fprintf(stderr, "usage: tr [-cs] string1 string2\n");
	(void)fprintf(stderr, "       tr [-c] -d string1\n");
	(void)fprintf(stderr, "       tr [-c] -s string1\n");
	(void)fprintf(stderr, "       tr [-c] -ds string1 string2\n");
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.8 2002/02/16 21:27:55 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: tr.c,v 1.8 2002/02/16 21:27:55 millert Exp $";
d98 1
a98 3
main(argc, argv)
	int argc;
	char **argv;
d238 1
a238 5
setup(string, arg, str, cflag)
	int *string;
	char *arg;
	STR *str;
	int cflag;
d252 1
a252 1
usage()
@


1.8
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.7 2002/02/09 02:03:28 deraadt Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d43 1
a43 1
static char rcsid[] = "$OpenBSD: tr.c,v 1.7 2002/02/09 02:03:28 deraadt Exp $";
@


1.7
log
@fix "no characters" input case; tim@@robbins.dropbear.id.au
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.6 2001/11/19 19:02:17 mpech Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: tr.c,v 1.6 2001/11/19 19:02:17 mpech Exp $";
d98 2
a99 2
static void setup __P((int *, char *, STR *, int));
static void usage __P((void));
@


1.6
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.5 1997/07/25 21:14:04 mickey Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: tr.c,v 1.5 1997/07/25 21:14:04 mickey Exp $";
d212 1
@


1.5
log
@use err(3)
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.4 1997/07/25 21:05:45 mickey Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: tr.c,v 1.4 1997/07/25 21:05:45 mickey Exp $";
d106 1
a106 1
	register int ch, cnt, lastch, *p;
d249 1
a249 1
	register int cnt, *p;
@


1.4
log
@#if __STDC__ --> #ifdef __STDC__
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.3 1997/01/15 23:43:24 millert Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: tr.c,v 1.3 1997/01/15 23:43:24 millert Exp $";
d56 1
d209 1
a209 1
		err("empty string2");
a267 29
}

#ifdef __STDC__
#include <stdarg.h>
#else
#include <varargs.h>
#endif

void
#ifdef __STDC__
err(const char *fmt, ...)
#else
err(fmt, va_alist)
	char *fmt;
        va_dcl
#endif
{
	va_list ap;
#ifdef __STDC__
	va_start(ap, fmt);
#else
	va_start(ap);
#endif
	(void)fprintf(stderr, "tr: ");
	(void)vfprintf(stderr, fmt, ap);
	va_end(ap);
	(void)fprintf(stderr, "\n");
	exit(1);
	/* NOTREACHED */
@


1.3
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.2 1996/06/26 05:41:51 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: tr.c,v 1.2 1996/06/26 05:41:51 deraadt Exp $";
d269 1
a269 1
#if __STDC__
d276 1
a276 1
#if __STDC__
d285 1
a285 1
#if __STDC__
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.5 1995/08/31 22:13:48 jtc Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: tr.c,v 1.5 1995/08/31 22:13:48 jtc Exp $";
d109 1
a109 1
	while ((ch = getopt(argc, argv, "cds")) != EOF)
@


1.1
log
@Initial revision
@
text
@d1 1
d47 1
a47 1
static char rcsid[] = "$NetBSD: tr.c,v 1.5 1995/08/31 22:13:48 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
