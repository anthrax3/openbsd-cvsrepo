head	1.23;
access;
symbols
	OPENBSD_5_6:1.22.0.40
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.22.0.38
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.22.0.34
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.22.0.32
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.22.0.30
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.28
	OPENBSD_5_0:1.22.0.26
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.22.0.24
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.22.0.22
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.18
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.20
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.16
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.22.0.14
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.22.0.12
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.22.0.10
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.22.0.8
	OPENBSD_4_1_BASE:1.22
	OPENBSD_4_0:1.22.0.6
	OPENBSD_4_0_BASE:1.22
	OPENBSD_3_9:1.22.0.4
	OPENBSD_3_9_BASE:1.22
	OPENBSD_3_8:1.22.0.2
	OPENBSD_3_8_BASE:1.22
	OPENBSD_3_7:1.21.0.8
	OPENBSD_3_7_BASE:1.21
	OPENBSD_3_6:1.21.0.6
	OPENBSD_3_6_BASE:1.21
	OPENBSD_3_5:1.21.0.4
	OPENBSD_3_5_BASE:1.21
	OPENBSD_3_4:1.21.0.2
	OPENBSD_3_4_BASE:1.21
	OPENBSD_3_3:1.20.0.2
	OPENBSD_3_3_BASE:1.20
	OPENBSD_3_2:1.18.0.2
	OPENBSD_3_2_BASE:1.18
	OPENBSD_3_1:1.17.0.2
	OPENBSD_3_1_BASE:1.17
	OPENBSD_3_0:1.14.0.2
	OPENBSD_3_0_BASE:1.14
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_9:1.12.0.8
	OPENBSD_2_8:1.12.0.6
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.12.0.4
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.12.0.2
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.11.0.4
	OPENBSD_2_5_BASE:1.11
	OPENBSD_2_4:1.11.0.2
	OPENBSD_2_4_BASE:1.11
	OPENBSD_2_3:1.10.0.2
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.23
date	2014.10.09.03.40.35;	author tedu;	state dead;
branches;
next	1.22;
commitid	UkqFKbij1WuiC6sC;

1.22
date	2005.07.04.01.54.10;	author djm;	state Exp;
branches;
next	1.21;

1.21
date	2003.06.10.22.20.48;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2003.01.18.23.30.20;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2002.12.12.00.00.16;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2002.05.24.07.03.35;	author ericj;	state Exp;
branches;
next	1.17;

1.17
date	2002.01.09.18.19.28;	author ericj;	state Exp;
branches;
next	1.16;

1.16
date	2002.01.08.17.16.38;	author ericj;	state Exp;
branches;
next	1.15;

1.15
date	2002.01.08.04.59.24;	author ericj;	state Exp;
branches;
next	1.14;

1.14
date	2001.08.18.22.06.44;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2001.07.18.17.17.39;	author pvalchev;	state Exp;
branches;
next	1.12;

1.12
date	99.08.17.09.13.15;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	98.07.06.18.42.46;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	97.11.18.23.23.18;	author provos;	state Exp;
branches;
next	1.9;

1.9
date	97.09.11.11.03.14;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.02.06.13.02.43;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.01.15.23.42.54;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	96.08.06.18.17.22;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.08.05.11.11.41;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.07.02.06.37.57;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.37.15;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.21.11.40.09;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.48;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.48;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.23
log
@remove modstat
@
text
@/*	$OpenBSD: modstat.c,v 1.22 2005/07/04 01:54:10 djm Exp $	*/

/*
 * Copyright (c) 1993 Terrence R. Lambert.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Terrence R. Lambert.
 * 4. The name Terrence R. Lambert may not be used to endorse or promote
 *    products derived from this software without specific prior written
 *    permission.
 *
 * THIS SOFTWARE IS PROVIDED BY TERRENCE R. LAMBERT ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE TERRENCE R. LAMBERT BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include <sys/param.h>
#include <sys/ioctl.h>
#include <sys/conf.h>
#include <sys/mount.h>
#include <sys/lkm.h>

#include <a.out.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "pathnames.h"

#define POINTERSIZE	((int)(2 * sizeof(void*)))

static char *type_names[] = {
	"SYSCALL",
	"VFS",
	"DEV",
	"EXEC",
	"MISC"
};

static void
usage(void)
{
	extern char *__progname;

	(void)fprintf(stderr, "usage: %s [-i id] [-n name]\n", __progname);
	exit(1);
}

static int
dostat(int devfd, int modnum, char *modname)
{
	char name[MAXLKMNAME];
	struct lmc_stat	sbuf;

	bzero(&name, sizeof name);
	bzero(&sbuf, sizeof sbuf);
	sbuf.id = modnum;
	sbuf.name = name;

	if (modname != NULL) {
		if (strlen(modname) >= sizeof(name))
			return 4;
		strlcpy(sbuf.name, modname, sizeof(name));
	}

	if (ioctl(devfd, LMSTAT, &sbuf) == -1) {
		switch (errno) {
		case EINVAL:		/* out of range */
			return 2;
		case ENOENT:		/* no such entry */
			return 1;
		default:		/* other error (EFAULT, etc) */
			warn("LMSTAT");
			return 4;
		}
	}

	/* Decode this stat buffer... */
	printf("%-7s %3d %3ld %0*lx %04lx %0*lx %3ld %s\n",
	    type_names[sbuf.type], sbuf.id, sbuf.offset, POINTERSIZE,
	    (long)sbuf.area, (long)sbuf.size, POINTERSIZE,
	    (long)sbuf.private, (long)sbuf.ver, sbuf.name);

	return 0;
}

int
main(int argc, char *argv[])
{
	int c, modnum = -1;
	char *modname = NULL;
	char *endptr;
	int devfd;
	gid_t gid;

	while ((c = getopt(argc, argv, "i:n:")) != -1) {
		switch (c) {
		case 'i':
			modnum = (int)strtol(optarg, &endptr, 0);
			if (modnum < 0 || modnum > INT_MAX || *endptr != '\0')
				errx(1, "%s: not a valid number", optarg);
			break;
		case 'n':
			modname = optarg;
			break;
		default:
			usage();
			break;
		}
	}
	argc -= optind;
	argv += optind;

	if (argc != 0)
		usage();

	/*
	 * Open the virtual device device driver for exclusive use (needed
	 * to ioctl() to retrive the loaded module(s) status).
	 */
	if ((devfd = open(_PATH_LKM, O_RDONLY)) == -1)
		err(2, "%s", _PATH_LKM);

	gid = getgid();
	if (setresgid(gid, gid, gid) == -1)
		err(1, "setresgid");

	printf("Type     Id Off %-*s Size %-*s Rev Module Name\n",
	    POINTERSIZE, "Loadaddr", POINTERSIZE, "Info");

	if (modnum != -1 || modname != NULL) {
		if (dostat(devfd, modnum, modname))
			exit(3);
		exit(0);
	}

	/* Start at 0 and work up until we receive EINVAL. */
	for (modnum = 0; dostat(devfd, modnum, NULL) < 2; modnum++)
		;

	exit(0);
}
@


1.22
log
@make these use setres[ug]id for simple privilege dropping;
ok deraadt@@ millert@@ moritz@@
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.21 2003/06/10 22:20:48 deraadt Exp $	*/
@


1.21
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.20 2003/01/18 23:30:20 deraadt Exp $	*/
d117 1
d147 3
a149 2
	setegid(getgid());
	setgid(getgid());
@


1.20
log
@minor tweaking; andrushock@@korovino.net
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.19 2002/12/12 00:00:16 deraadt Exp $	*/
d111 1
a111 3
main(argc, argv)
	int argc;
	char *argv[];
@


1.19
log
@knf
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.18 2002/05/24 07:03:35 ericj Exp $	*/
d41 5
d48 1
d50 1
a50 5
#include <err.h>
#include <fcntl.h>
#include <string.h>
#include <a.out.h>
#include <errno.h>
d64 1
a64 1
usage()
d146 1
a146 1
		err(2, _PATH_LKM);
@


1.18
log
@
minor cleanup
get rid of statics
deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.17 2002/01/09 18:19:28 ericj Exp $	*/
d150 1
a150 1
		POINTERSIZE, "Loadaddr", POINTERSIZE, "Info");
d159 2
a160 2
 	for (modnum = 0; dostat(devfd, modnum, NULL) < 2; modnum++)
 		;
@


1.17
log
@
streams gone
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.16 2002/01/08 17:16:38 ericj Exp $	*/
a59 1
static int devfd;
d116 1
a123 1
			modnum = atoi(optarg);
@


1.16
log
@
atoi->strtoul
also, sbuf.private is a long
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.15 2002/01/08 04:59:24 ericj Exp $	*/
a56 1
	"STRMOD",
@


1.15
log
@
deal with 32 vs 64 bit pointers. from netbsd.
misc cleanup as well
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.14 2001/08/18 22:06:44 deraadt Exp $	*/
d61 1
d102 1
a102 1
	printf("%-7s %3d %3ld %0*lx %04lx %0*x %3ld %s\n",
a109 2
int devfd;

d117 1
d122 3
d126 1
a126 1
			break;	/* number */
d129 1
a129 1
			break;	/* name */
@


1.14
log
@a much needed cleanup; fgsch ok
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.13 2001/07/18 17:17:39 pvalchev Exp $	*/
d51 1
a51 7
void
usage()
{

	fprintf(stderr, "usage: modstat [-i moduleid] [-n modulename]\n");
	exit(1);
}
d62 11
a72 5
int
dostat(devfd, modnum, modname)
	int devfd;
	int modnum;
	char *modname;
d101 4
a104 4
	printf("%-7s %3d %3ld %08lx %04lx %8lx %3ld %s\n",
	    type_names[sbuf.type], sbuf.id, sbuf.offset,
	    (long)sbuf.area, (long)sbuf.size, (long)sbuf.private,
	    (long)sbuf.ver, sbuf.name);
d148 2
a149 1
	printf("Type     Id Off Loadaddr Size Info     Rev Module Name\n");
@


1.13
log
@-Wall cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.12 1999/08/17 09:13:15 millert Exp $	*/
d55 1
a55 2
	fprintf(stderr,
	    "usage: modstat [-i moduleid] [-n modulename]\n");
d74 1
a75 1
	char name[MAXLKMNAME] = "";
d77 1
d85 1
a85 1
		strcpy(sbuf.name, modname);
d100 1
a100 3
	/*
	 * Decode this stat buffer...
	 */
d102 3
a104 9
	    type_names[sbuf.type],
	    sbuf.id,		/* module id */
	    sbuf.offset,	/* offset into modtype struct */
	    (long)sbuf.area,		/* address module loaded at */
	    (long)sbuf.size,		/* size in pages(K) */
	    (long)sbuf.private,	/* kernel address of private area */
	    (long)sbuf.ver,		/* Version; always 1 for now */
	    sbuf.name		/* name from private area */
	);
a105 3
	/*
	 * Done (success).
	 */
a110 7
void
cleanup()
{

	close(devfd);
}

d116 1
a116 2
	int c;
	int modnum = -1;
a147 2
	atexit(cleanup);

a149 3
	/*
	 * Oneshot?
	 */
d156 1
a156 3
	/*
	 * Start at 0 and work up until "EINVAL".
	 */
@


1.12
log
@More <sys/file.h> vs. <fcntl.h> and open() flags fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.11 1998/07/06 18:42:46 deraadt Exp $	*/
d103 1
a103 1
	printf("%-7s %3d %3d %08x %04x %8x %3d %s\n",
d107 4
a110 4
	    sbuf.area,		/* address module loaded at */
	    sbuf.size,		/* size in pages(K) */
	    sbuf.private,	/* kernel address of private area */
	    sbuf.ver,		/* Version; always 1 for now */
@


1.11
log
@revoke privs after open
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.10 1997/11/18 23:23:18 provos Exp $	*/
a40 1
#include <sys/file.h>
d45 1
d161 1
a161 1
	if ((devfd = open(_PATH_LKM, O_RDONLY, 0)) == -1)
@


1.10
log
@check correct size of buffer. from felix@@mamba.pond.sub.org. pr #350
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.9 1997/09/11 11:03:14 deraadt Exp $	*/
d163 3
@


1.9
log
@needs unistd.h
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.8 1997/02/06 13:02:43 deraadt Exp $	*/
d83 1
a83 1
		if (strlen(modname) >= sizeof(sbuf.name))
@


1.8
log
@do not accidentally pass garbage module name to the kernel; found by Don.Lewis@@tsc.tdk.com
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.7 1997/01/15 23:42:54 millert Exp $	*/
a35 5
#include <stdio.h>
#include <stdlib.h>
#include <err.h>
#include <string.h>
#include <a.out.h>
d42 6
@


1.7
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.6 1996/08/06 18:17:22 deraadt Exp $	*/
d77 1
@


1.6
log
@fix usage, buf oflow, pretty usage
@
text
@d1 1
a1 1
/*	$OpenBSD: modstat.c,v 1.5 1996/08/05 11:11:41 mickey Exp $	*/
d136 1
a136 1
	while ((c = getopt(argc, argv, "i:n:")) != EOF) {
@


1.5
log
@fix formatting
@
text
@d1 2
a2 1
/* *	$OpenBSD: modstat.c,v 1.4 1996/07/02 06:37:57 deraadt Exp $*/
d55 1
a55 1
	    "usage: modstat [-i <module id>] [-n <module name>]\n");
d80 3
a82 1
	if (modname != NULL)
d84 1
d144 1
a144 1
		case '?':
a145 2
		default:
			printf("default!\n");
@


1.4
log
@simpler usage line
@
text
@d1 1
a1 1
/* *	$OpenBSD: modstat.c,v 1.3 1996/06/26 05:37:15 deraadt Exp $*/
d97 1
a97 1
	printf("%-7s %3d %3d %08x %04x %8x %3d s\n",
d162 1
a162 1
	printf("Type    Id  Off Loadaddr Size Info     Rev Module Name\n");
@


1.3
log
@rcsid
@
text
@d1 1
a1 1
/* *	$OpenBSD: modstat.c,v 1.2 1996/06/21 11:40:09 mickey Exp $*/
d53 2
a54 2
	fprintf(stderr, "usage:\n");
	fprintf(stderr, "modstat [-i <module id>] [-n <module name>]\n");
@


1.2
log
@updates according to the kernel chenges.
@
text
@d1 1
a32 1
 *	$Id: modstat.c,v 1.1.1.1 1995/10/18 08:45:48 deraadt Exp $
@


1.1
log
@Initial revision
@
text
@d32 1
a32 1
 *	$Id: modstat.c,v 1.6 1995/06/27 00:18:19 jtc Exp $
d74 4
a81 2
	sbuf.id = modnum;

d97 1
a97 1
	printf("%-7s %3d %3d %08x %04x %8x %3d %s\n",
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
