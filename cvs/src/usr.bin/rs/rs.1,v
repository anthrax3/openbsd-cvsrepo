head	1.19;
access;
symbols
	OPENBSD_6_0:1.18.0.4
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.16.0.10
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.6
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.4
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.15.0.16
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.14
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.12
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.10
	OPENBSD_5_0:1.15.0.8
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.6
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.13.0.12
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.8
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.6
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.4
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.2
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.12.0.8
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.6
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.19
date	2016.10.24.13.46.58;	author schwarze;	state Exp;
branches;
next	1.18;
commitid	exLg5RWnU06ZBxJ9;

1.18
date	2016.01.04.23.21.28;	author schwarze;	state Exp;
branches;
next	1.17;
commitid	RkF91OQHboyz9Raz;

1.17
date	2015.12.06.08.07.51;	author schwarze;	state Exp;
branches;
next	1.16;
commitid	znOWg3ehp4s3z031;

1.16
date	2014.01.20.05.07.48;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2009.10.15.07.38.09;	author sobrado;	state Exp;
branches;
next	1.14;

1.14
date	2009.10.14.20.51.47;	author sobrado;	state Exp;
branches;
next	1.13;

1.13
date	2007.05.31.19.20.15;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2005.05.15.13.21.11;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2005.05.15.13.19.14;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2005.05.15.01.36.13;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.07.14.12.51.48;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.03.02.56.15;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.13.08.33.47;	author mpech;	state Exp;
branches;
next	1.6;

1.6
date	2000.11.09.17.52.34;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.03.06.12.23.41;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.10.17.20.24.35;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.38.46;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.05.21.21.37.09;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.03;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.03;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Unify wording for LC_CTYPE in ENVIRONMENT:
* Consistently use "character encoding locale" as suggested by stsp@@.
* Resolve various gratuitious wording variations.
OK jmc@@.
@
text
@.\"	$OpenBSD: rs.1,v 1.18 2016/01/04 23:21:28 schwarze Exp $
.\"	$FreeBSD: src/usr.bin/rs/rs.1,v 1.4 1999/08/28 01:05:21 peter Exp $
.\"
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)rs.1	8.2 (Berkeley) 12/30/93
.\"
.Dd $Mdocdate: January 4 2016 $
.Dt RS 1
.Os
.Sh NAME
.Nm rs
.Nd reshape a data array
.Sh SYNOPSIS
.Nm rs
.Op Fl CcSs Ns Op Ar x
.Op Fl GgKkw Ar N
.Op Fl EeHhjmnTtyz
.Op Ar rows Op Ar cols
.Sh DESCRIPTION
.Nm
reads the standard input, interpreting each line as a row
of blank-separated entries in an array,
transforms the array according to the options,
and writes it on the standard output.
With no arguments it transforms stream input into a columnar
format convenient for terminal viewing.
.Pp
The shape of the input array is deduced from the number of lines
and the number of columns on the first line.
If that shape is inconvenient, a more useful one might be
obtained by skipping some of the input with the
.Fl k
option.
Other options control interpretation of the input columns.
.Pp
The shape of the output array is influenced by the
.Ar rows
and
.Ar cols
specifications, which should be positive integers.
If only one of them is a positive integer,
.Nm
computes a value for the other which will accommodate
all of the data.
When necessary, missing data are supplied in a manner
specified by the options and surplus data are deleted.
There are options to control presentation of the output columns,
including transposition of the rows and columns.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl C Ns Op Ar x
Output columns are delimited by the single character
.Ar x .
A missing
.Ar x
is taken to be
.Ql ^I .
.It Fl c Ns Op Ar x
Input columns are delimited by the single character
.Ar x .
A missing
.Ar x
is taken to be
.Ql ^I .
.It Fl E
Consider each character of input as an array entry.
.It Fl e
Consider each line of input as an array entry.
.It Fl G Ns Ar N
The gutter width has
.Ar N
percent of the maximum column width added to it.
.It Fl g Ns Ar N
The gutter width (inter-column space), normally 2, is taken to be
.Ar N .
.It Fl H
Like
.Fl h ,
but also print the length of each line.
.It Fl h
Print the shape of the input array and do nothing else.
The shape is just the number of lines and the number of
entries on the first line.
.It Fl j
Right adjust entries within columns.
.It Fl K Ns Ar N
Like
.Fl k ,
but print the ignored lines.
.It Fl k Ns Ar N
Ignore the first
.Ar N
lines of input.
.It Fl m
Do not trim excess delimiters from the ends of the output array.
.It Fl n
On lines having fewer entries than the first line,
use null entries to pad out the line.
Normally, missing entries are taken from the next line of input.
.It Fl S Ns Op Ar x
Like
.Fl C ,
but padded strings of
.Ar x
are delimiters.
.It Fl s Ns Op Ar x
Like
.Fl c ,
but maximal strings of
.Ar x
are delimiters.
.It Fl T
Print the pure transpose of the input, ignoring any
.Ar rows
or
.Ar cols
specification.
.It Fl t
Fill in the rows of the output array using the columns of the
input array, that is, transpose the input while honoring any
.Ar rows
and
.Ar cols
specifications.
.It Fl w Ns Ar N
The width of the display, normally 80, is taken to be the positive
integer
.Ar N .
.It Fl y
If there are too few entries to make up the output dimensions,
pad the output by recycling the input from the beginning.
Normally, the output is padded with blanks.
.It Fl z
Adapt column widths to fit the largest entries appearing in them.
.El
.Pp
With no arguments,
.Nm
transposes its input, and assumes one array entry per input line
unless the first non-ignored line is longer than the display width.
Option letters which take numerical arguments interpret a missing
number as zero unless otherwise indicated.
.Sh ENVIRONMENT
.Bl -tag -width LC_CTYPE
.It Ev LC_CTYPE
The character encoding
.Xr locale 1 .
It decides which byte sequences form characters
and what their display width is.
If unset or set to
.Qq C ,
.Qq POSIX ,
or an unsupported value, each byte is treated as a character of
display width 1.
.El
.Sh EXAMPLES
.Nm
can be used as a filter to convert the stream output
of certain programs (e.g.,
.Xr spell 1 ,
.Xr du 1 ,
.Xr file 1 ,
.Xr look 1 ,
.Xr nm 1 ,
.Xr who 1 ,
and
.Xr wc 1 )
into a convenient
.Dq window
format, as in
.Bd -literal -offset indent
$ who | rs
.Ed
.Pp
This function has been incorporated into the
.Xr ls 1
program, though for most programs with similar output
.Nm
suffices.
.Pp
To convert stream input into vector output and back again, use
.Bd -literal -offset indent
$ rs 1 0 | rs 0 1
.Ed
.Pp
A 10 by 10 array of random numbers from 1 to 100 and
its transpose can be generated with
.Bd -literal -offset indent
$ jot \-r 100 | rs 10 10 | tee array | rs \-T > tarray
.Ed
.Pp
In the editor
.Xr vi 1 ,
a file consisting of a multi-line vector with 9 elements per line
can undergo insertions and deletions,
and then be neatly reshaped into 9 columns with
.Bd -literal -offset indent
:1,$!rs 0 9
.Ed
.Pp
Finally, to sort a database by the first line of each 4-line field, try
.Bd -literal -offset indent
$ rs \-eC 0 4 | sort | rs \-c 0 1
.Ed
.Sh SEE ALSO
.Xr jot 1 ,
.Xr pr 1 ,
.Xr sort 1 ,
.Xr vi 1
.Sh HISTORY
The
.Nm
utility first appeared in
.Bx 4.2 .
.Sh AUTHORS
.An John A. Kunze
.Sh BUGS
Handles only two dimensional arrays.
.Pp
The algorithm currently reads the whole file into memory,
so files that do not fit in memory will not be reshaped.
.Pp
Fields cannot be defined yet on character positions.
.Pp
Re-ordering of columns is not yet possible.
.Pp
There are too many options.
@


1.18
log
@Add HISTORY and AUTHORS sections.
From the author John A. Kunze
via https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=196786
and Michal Mazurek <akfaew at jasminek dot net>.
Correctness also verified from the CSRG archive CD.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.17 2015/12/06 08:07:51 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: December 6 2015 $
d173 1
a173 1
The character set
d175 2
a176 2
It is used to calculate required column widths and to adjust entries
within columns.
@


1.17
log
@document LC_CTYPE; feedback and OK jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.16 2014/01/20 05:07:48 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: January 20 2014 $
d237 7
@


1.16
log
@Obvious .Xr fixes, found while testing mandocdb(8).
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.15 2009/10/15 07:38:09 sobrado Exp $
d33 1
a33 1
.Dd $Mdocdate: October 15 2009 $
d170 13
@


1.15
log
@arguments to -C, -c, -S and -s are optional.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.14 2009/10/14 20:51:47 sobrado Exp $
d33 1
a33 1
.Dd $Mdocdate: October 14 2009 $
d174 6
a179 6
.Xr spell ,
.Xr du ,
.Xr file ,
.Xr look ,
.Xr nm ,
.Xr who ,
@


1.14
log
@sort flags.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.13 2007/05/31 19:20:15 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d78 1
a78 1
.It Fl C Ns Ar x
d85 1
a85 1
.It Fl c Ns Ar x
d127 1
a127 1
.It Fl S Ns Ar x
d133 1
a133 1
.It Fl s Ns Ar x
@


1.13
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.12 2005/05/15 13:21:11 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d42 1
a42 1
.Op Fl KkGgw Ar N
@


1.12
log
@damn, one more...
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.11 2005/05/15 13:19:14 jmc Exp $
d33 1
a33 1
.Dd December 30, 1993
@


1.11
log
@oops. grasp of alphabet...slipping...
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.10 2005/05/15 01:36:13 millert Exp $
d139 6
a151 6
.It Fl T
Print the pure transpose of the input, ignoring any
.Ar rows
or
.Ar cols
specification.
@


1.10
log
@Make usage/SYNOPSIS saner and sort the options.  With jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.9 2003/07/14 12:51:48 jmc Exp $
d43 1
a43 1
.Op Fl EejHhnnTtyz
@


1.9
log
@remove unused Cm;
@
text
@d1 2
a2 1
.\"	$OpenBSD: rs.1,v 1.8 2003/06/03 02:56:15 millert Exp $
a31 1
.\" $FreeBSD: src/usr.bin/rs/rs.1,v 1.4 1999/08/28 01:05:21 peter Exp $
d41 3
a43 10
.Oo
.Sm off
.Xo Fl Oo Op Cm csCS
.Op Ar x
.Op Cm kKgGw
.Op Ar N
.Cm tTeEnyjhHmz Oc
.Xc
.Oc
.Sm on
d78 2
a79 2
.It Fl c Ns Ar x
Input columns are delimited by the single character
d85 2
a86 8
.It Fl s Ns Ar x
Like
.Fl c ,
but maximal strings of
.Ar x
are delimiters.
.It Fl C Ns Ar x
Output columns are delimited by the single character
d92 35
d133 6
d152 3
a154 10
.It Fl k Ns Ar N
Ignore the first
.Ar N
lines of input.
.It Fl K Ns Ar N
Like
.Fl k ,
but print the ignored lines.
.It Fl g Ns Ar N
The gutter width (inter-column space), normally 2, is taken to be
a155 12
.It Fl G Ns Ar N
The gutter width has
.Ar N
percent of the maximum column width added to it.
.It Fl e
Consider each line of input as an array entry.
.It Fl E
Consider each character of input as an array entry.
.It Fl n
On lines having fewer entries than the first line,
use null entries to pad out the line.
Normally, missing entries are taken from the next line of input.
a159 16
.It Fl h
Print the shape of the input array and do nothing else.
The shape is just the number of lines and the number of
entries on the first line.
.It Fl H
Like
.Fl h ,
but also print the length of each line.
.It Fl j
Right adjust entries within columns.
.It Fl w Ns Ar N
The width of the display, normally 80, is taken to be the positive
integer
.Ar N .
.It Fl m
Do not trim excess delimiters from the ends of the output array.
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.7 2002/02/13 08:33:47 mpech Exp $
d43 1
a43 1
.Xo Fl Oo Cm Op Cm csCS
@


1.7
log
@When you give command examples and etc., in a manual page prefix them with:
$ command
or
# command

deraadt@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.6 2000/11/09 17:52:34 aaron Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@Change all option list specifications to ".Bl -tag -width Ds". Most man
pages just needed their -width parameter tweaked to "Ds", which provides
a nice width of 6 constant characters. For consistency more than anything.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.5 2000/03/06 12:23:41 aaron Exp $
d197 1
a197 1
% who | rs
d208 1
a208 1
% rs 1 0 | rs 0 1
d214 1
a214 1
% jot \-r 100 | rs 10 10 | tee array | rs \-T > tarray
d228 1
a228 1
% rs \-eC 0 4 | sort | rs \-c 0 1
@


1.5
log
@Covert to mdoc; from FreeBSD, with some modifications by me.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.4 1999/10/17 20:24:35 aaron Exp $
d88 1
a88 1
.Bl -tag -width indent
@


1.4
log
@More consistent introduction to options.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rs.1,v 1.3 1996/06/26 05:38:46 deraadt Exp $
d35 1
d37 21
a57 8
.TH RS 1 "December 30, 1993"
.UC 4
.SH NAME
rs \- reshape a data array
.SH SYNOPSIS
\fBrs [ \-[csCS][\fRx\fB][kKgGw][\fRN\fB]tTeEnyjhHm ] [ \fRrows\fB [ \fRcols\fB ] ]\fR
.SH DESCRIPTION
.I Rs
d64 1
a64 1
.PP
d68 3
a70 1
obtained by skipping some of the input with the \fB\-k\fP option.
d72 1
a72 1
.PP
d74 1
a74 1
.I rows
d76 1
a76 1
.I cols
d79 1
a79 1
.I rs
d86 1
a86 1
.PP
d88 28
a115 11
.IP \fB\-c\fRx
Input columns are delimited by the single character \fIx\fP.
A missing \fIx\fP is taken to be `^I'.
.IP \fB\-s\fRx
Like \fB\-c\fR, but maximal strings of \fIx\fP are delimiters.
.IP \fB\-C\fRx
Output columns are delimited by the single character \fIx\fP.
A missing \fIx\fP is taken to be `^I'.
.IP \fB\-S\fRx
Like \fB\-C\fR, but padded strings of \fIx\fP are delimiters.
.IP \fB\-t\fR
d118 1
a118 1
.I rows
d120 1
a120 1
.I cols
d122 1
a122 1
.IP \fB\-T\fR
d124 1
a124 1
.I rows
d126 1
a126 1
.I cols
d128 16
a143 10
.IP \fB\-k\fRN
Ignore the first \fIN\fR lines of input.
.IP \fB\-K\fRN
Like \fB\-k\fR, but print the ignored lines.
.IP \fB\-g\fRN
The gutter width (inter-column space), normally 2, is taken to be \fIN\fR.
.IP \fB\-G\fRN
The gutter width has \fIN\fR percent of the maximum
column width added to it.
.IP \fB\-e\fR
d145 3
a147 1
.IP \fB\-n\fR
d151 1
a151 1
.IP \fB\-y\fR
d155 1
a155 1
.IP \fB\-h\fR
d159 5
a163 3
.IP \fB\-H\fR
Like \fB\-h\fR, but also print the length of each line.
.IP \fB\-j\fR
d165 1
a165 1
.IP \fB\-w\fRN
d167 3
a169 2
integer \fIN\fP.
.IP \fB\-m\fR
d171 1
a171 1
.IP \fB\-z\fR
d173 2
a174 1
.PP
d176 1
a176 1
.I rs
d181 2
a182 12
.SH EXAMPLES
.de IC
.IP
.ss 36
.ft B
..
.de NC
.br
.ss 12
.PP
..
.I Rs
d185 6
a190 6
.IR spell ,
.IR du ,
.IR file ,
.IR look ,
.IR nm ,
.IR who ,
d192 8
a199 5
.IR wc (1))
into a convenient ``window'' format, as in
.IC
who | rs
.NC
d201 1
a201 1
.IR ls (1)
d203 1
a203 1
.I rs
d205 1
a205 1
.PP
d207 4
a210 3
.IC
rs 1 0 | rs 0 1
.NC
d213 4
a216 3
.IC
jot \-r 100 | rs 10 10 | tee array | rs \-T > tarray
.NC
d218 1
a218 1
.IR vi (1),
d222 1
a222 1
.IC
d224 2
a225 1
.NC
d227 9
a235 6
.IC
rs \-eC 0 4 | sort | rs \-c 0 1
.NC
.SH SEE ALSO
jot(1), vi(1), sort(1), pr(1)
.SH BUGS
d237 1
a237 1

d240 1
a240 1

d242 1
a242 1

d244 1
a244 1

@


1.3
log
@rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d71 1
a71 1
The options are described below.
@


1.2
log
@avoid divide-by-zero trap when specifying small widths
do not overrun entry array when printing output tables
cleanup storage allocation for entries
use err/warn etc.
@
text
@d1 2
@


1.1
log
@Initial revision
@
text
@d125 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
