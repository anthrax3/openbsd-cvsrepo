head	1.15;
access;
symbols
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.8
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.4
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.14.0.10
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.8
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.4
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.2
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.13.0.12
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.10
	OPENBSD_5_0:1.13.0.8
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.6
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.4
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.12.0.28
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.24
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.22
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.20
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.18
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.16
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.14
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.12
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.10
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.8
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.6
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.8.0.14
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.12
	OPENBSD_2_8:1.8.0.10
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.8
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.6
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.4
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.2
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.7.0.8
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.6
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.4
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2015.01.20.09.00.16;	author guenther;	state Exp;
branches;
next	1.14;
commitid	0Y0sKBv6c3xIKoav;

1.14
date	2012.11.12.01.14.41;	author guenther;	state Exp;
branches;
next	1.13;

1.13
date	2009.10.27.23.59.42;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.03.02.56.14;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.14.01.34.35;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.27.03.14.22;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.19.19.02.15;	author mpech;	state Exp;
branches;
next	1.8;

1.8
date	98.06.26.21.21.14;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	96.07.25.05.31.01;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	96.07.12.07.23.59;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.07.11.11.57.09;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.06.26.05.38.13;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.03.05.03.16.07;	author dm;	state Exp;
branches;
next	1.2;

1.2
date	96.02.03.12.12.29;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.59;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.59;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Split out from rdist/defs.h the client-only and server-only bits into
 rdist/client.h and rdistd/server.h
Only put #includes in .h files that are necessary for the .h to be used;
 all other #includes go in the .c files
Move all extern variable declarations to the .h files, renaming local
 variables to avoid shadowing
Replace me_type member of mntent_t with an "is NFS?" flag bit
@
text
@/*	$OpenBSD: lookup.c,v 1.14 2012/11/12 01:14:41 guenther Exp $	*/

/*
 * Copyright (c) 1983 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <string.h>

#include "client.h"

	/* symbol types */
#define VAR	1
#define CONST	2

struct syment {
	int	s_type;
	char	*s_name;
	struct	namelist *s_value;
	struct	syment *s_next;
};

static struct syment *hashtab[HASHSIZE];

/*
 * Define a variable from a command line argument.
 */
void
define(char *name)
{
	char *cp, *s;
	struct namelist *nl;
	struct namelist *value;

	debugmsg(DM_CALL, "define(%s)", name);

	cp = strchr(name, '=');
	if (cp == NULL)
		value = NULL;
	else if (cp[1] == '\0') {
		*cp = '\0';
		value = NULL;
	} else if (cp[1] != '(') {
		*cp++ = '\0';
		value = makenl(cp);
	} else {
		value = NULL;
		nl = NULL;
		*cp++ = '\0';
		do
			cp++;
		while (*cp == ' ' || *cp == '\t');
		for (s = cp; ; s++) {
			switch (*s) {
			case ')':
				*s = '\0';
			case '\0':
				break;
			case ' ':
			case '\t':
				*s++ = '\0';
				while (*s == ' ' || *s == '\t')
					s++;
				if (*s == ')')
					*s = '\0';
				break;
			default:
				continue;
			}
			if (nl == NULL)
				value = nl = makenl(cp);
			else {
				nl->n_next = makenl(cp);
				nl = nl->n_next;
			}
			if (*s == '\0')
				break;
			cp = s;
		}
	}
	(void) lookup(name, REPLACE, value);
}

/*
 * Lookup name in the table and return a pointer to it.
 * LOOKUP - just do lookup, return NULL if not found.
 * INSERT - insert name with value, error if already defined.
 * REPLACE - insert or replace name with value.
 */

struct namelist *
lookup(char *name, int action, struct namelist *value)
{
	unsigned int n;
	char *cp;
	struct syment *s;
	char ebuf[BUFSIZ];

	debugmsg(DM_CALL, "lookup(%s, %d, %p)", name, action, value);

	n = 0;
	for (cp = name; *cp; )
		n += *cp++;
	n %= HASHSIZE;

	for (s = hashtab[n]; s != NULL; s = s->s_next) {
		if (strcmp(name, s->s_name))
			continue;
		if (action != LOOKUP) {
			if (action != INSERT || s->s_type != CONST) {
				(void) snprintf(ebuf, sizeof(ebuf),
					        "%.*s redefined",
					        (int)(sizeof(ebuf) - 
					        sizeof(" redefined")), name);
				yyerror(ebuf);
			}
		}
		return(s->s_value);
	}

	if (action == LOOKUP) {
		(void) snprintf(ebuf, sizeof(ebuf), "%.*s undefined",
			        (int)(sizeof(ebuf) - sizeof(" undefined")),
				name);
		yyerror(ebuf);
		return(NULL);
	}

	s = ALLOC(syment);
	s->s_next = hashtab[n];
	hashtab[n] = s;
	s->s_type = action == INSERT ? VAR : CONST;
	s->s_name = name;
	s->s_value = value;

	return(value);
}
@


1.14
log
@Fix various format string issues.  Stop assuming time_t is long or smaller.
Enable warnings.

ok krw@@, ian@@
@
text
@d1 1
a1 1
/*	$OpenBSD: lookup.c,v 1.13 2009/10/27 23:59:42 deraadt Exp $	*/
d32 3
a34 1
#include "defs.h"
@


1.13
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: lookup.c,v 1.12 2003/06/03 02:56:14 millert Exp $	*/
d121 1
a121 1
	debugmsg(DM_CALL, "lookup(%s, %d, %x)", name, action, value);
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: lookup.c,v 1.11 2003/05/14 01:34:35 millert Exp $	*/
a32 17

#ifndef lint
#if 0
static char RCSid[] __attribute__((__unused__)) =
"$From: lookup.c,v 1.4 1999/08/04 15:57:33 christos Exp $";
#else
static char RCSid[] __attribute__((__unused__)) =
"$OpenBSD: lookup.c,v 1.11 2003/05/14 01:34:35 millert Exp $";
#endif

static char sccsid[] __attribute__((__unused__)) =
"@@(#)lookup.c	5.1 (Berkeley) 6/6/85";

static char copyright[] __attribute__((__unused__)) =
"@@(#) Copyright (c) 1983 Regents of the University of California.\n\
 All rights reserved.\n";
#endif /* not lint */
@


1.11
log
@ o Sync w/ freerdist 0.92 minus the compress option
 o KNF and ANSIfy the function headers

Sparse file support is currently a no-op since it didn't work.
Proper sparse file support will be added later.
@
text
@d1 1
a1 1
/*	$OpenBSD: lookup.c,v 1.10 2002/05/27 03:14:22 deraadt Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d40 1
a40 1
"$OpenBSD: lookup.c,v 1.10 2002/05/27 03:14:22 deraadt Exp $";
@


1.10
log
@unsigned vs unsigned int
@
text
@d1 1
a1 1
/*	$OpenBSD: lookup.c,v 1.9 2001/11/19 19:02:15 mpech Exp $	*/
d36 2
d40 2
a41 2
static char RCSid[] = 
"$From: lookup.c,v 6.8 1996/07/19 16:49:55 michaelc Exp $";
d43 2
a44 2
static char RCSid[] = 
"$OpenBSD: lookup.c,v 1.9 2001/11/19 19:02:15 mpech Exp $";
d47 2
a48 1
static char sccsid[] = "@@(#)lookup.c	5.1 (Berkeley) 6/6/85";
d50 1
a50 1
static char copyright[] =
a54 2
#include "defs.h"

d72 1
a72 2
define(name)
	char *name;
d135 1
a135 4
lookup(name, action, value)	/* %% in name.  Ignore quotas in name */
	char *name;
	int action;
	struct namelist *value;
d155 3
a157 1
						"%s redefined", name);
d165 3
a167 1
		(void) snprintf(ebuf, sizeof(ebuf), "%s undefined", name);
@


1.9
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: lookup.c,v 1.8 1998/06/26 21:21:14 millert Exp $	*/
d42 1
a42 1
"$OpenBSD: lookup.c,v 1.8 1998/06/26 21:21:14 millert Exp $";
d140 1
a140 1
	unsigned n;
@


1.8
log
@rdist 6.1.4 + OpenBSD patches + some -Wall
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 1
a42 1
"$OpenBSD$";
d74 2
a75 2
	register char *cp, *s;
	register struct namelist *nl;
d140 3
a142 3
	register unsigned n;
	register char *cp;
	register struct syment *s;
@


1.7
log
@Updated to rdist 6.1.3.  Used real snprintf() (instead of string length
in the format) since we have it.
@
text
@d1 1
a1 1
/*	$OpenBSD: lookup.c,v 1.6 1996/07/12 07:23:59 mickey Exp $	*/
d37 1
d39 5
a43 1
"$OpenBSD: lookup.c,v 1.6 1996/07/12 07:23:59 mickey Exp $";
d70 1
@


1.6
log
@better fix for buffer overrun
@
text
@d1 1
a1 1
/*	$OpenBSD: lookup.c,v 1.5 1996/07/11 11:57:09 mickey Exp $	*/
d38 1
a38 1
"$OpenBSD: lookup.c,v 1.5 1996/07/11 11:57:09 mickey Exp $";
d151 2
a152 1
				(void) snprintf(ebuf, sizeof(ebuf), "%s redefined", name);
@


1.5
log
@prevent buffer overrun.
@
text
@d1 1
a1 1
/*	$OpenBSD: lookup.c,v 1.4 1996/06/26 05:38:13 deraadt Exp $	*/
d38 1
a38 1
"$OpenBSD: lookup.c,v 1.4 1996/06/26 05:38:13 deraadt Exp $";
a140 2
	if (strlen(name) > sizeof(ebuf)-12)
		yyerror("name is too long");
d151 1
a151 1
				(void) sprintf(ebuf, "%s redefined", name);
d159 1
a159 1
		(void) sprintf(ebuf, "%s undefined", name);
@


1.4
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d38 1
a38 1
"$OpenBSD: lookup.c,v 1.3 1996/03/05 03:16:07 dm Exp $";
d141 2
@


1.3
log
@rdist 6.1.2
@
text
@d1 2
d38 1
a38 1
"$Id: lookup.c,v 6.7 1994/04/26 17:03:09 mcooper Exp $";
@


1.2
log
@rdist 6.1.1
@
text
@@


1.1
log
@Initial revision
@
text
@d2 2
a3 2
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
d35 8
a42 2
/* from: static char sccsid[] = "@@(#)lookup.c	8.1 (Berkeley) 6/9/93"; */
static char *rcsid = "$Id: lookup.c,v 1.3 1994/03/07 05:05:33 cgd Exp $";
a62 1
void
d70 1
a70 2
	if (debug)
		printf("define(%s)\n", name);
d72 1
a72 1
	cp = index(name, '=');
d82 1
d127 1
a127 1
lookup(name, action, value)
d135 1
a135 1
	char buf[256];
d137 1
a137 2
	if (debug)
		printf("lookup(%s, %d, %x)\n", name, action, value);
d149 2
a150 2
				(void)sprintf(buf, "%s redefined", name);
				yyerror(buf);
d157 2
a158 2
		(void)sprintf(buf, "%s undefined", name);
		yyerror(buf);
a162 2
	if (s == NULL)
		fatal("ran out of memory\n");
d168 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
