head	1.7;
access;
symbols
	OPENBSD_2_3:1.6.0.8
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.6
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.4
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6;
locks; strict;
comment	@ * @;


1.7
date	98.06.26.17.51.14;	author millert;	state dead;
branches;
next	1.6;

1.6
date	96.09.07.03.15.52;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	96.09.07.03.14.27;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.07.19.21.47.15;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.38.17;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.05.03.16.12;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	96.02.03.12.12.40;	author dm;	state Exp;
branches;
next	;


desc
@@


1.7
log
@we use rcmdsh(3) from libc
@
text
@/*	$OpenBSD: rshrcmd.c,v 1.6 1996/09/07 03:15:52 millert Exp $	*/


/*
 * This is an rcmd() replacement originally by 
 * Chris Siebenmann <cks@@utcc.utoronto.ca>.
 */

#ifndef lint
static char RCSid[] = 
"$OpenBSD: rshrcmd.c,v 1.6 1996/09/07 03:15:52 millert Exp $";
#endif

#include	"defs.h"

#if	!defined(DIRECT_RCMD)

#include      <sys/types.h>
#include      <sys/socket.h>
#include      <sys/wait.h>
#include      <signal.h>
#include      <errno.h>
#include      <netdb.h>
#include      <stdio.h>

/*
 * This is a replacement rcmd() function that uses the rsh(1c)
 * program in place of a direct rcmd() function call so as to
 * avoid having to be root.
 */
rshrcmd(ahost, port, luser, ruser, cmd, fd2p)
	char  	**ahost;
	u_short	port;
	char	*luser, *ruser, *cmd;
	int	*fd2p;
{
	int             cpid;
	struct hostent  *hp;
	int             sp[2];

	/* insure that we are indeed being used as we thought. */
	if (fd2p != 0)
		return -1;
	/* validate remote hostname. */
	hp = gethostbyname(*ahost);
	if (hp == 0) {
		error("%s: unknown host", *ahost);
		return -1;
	}
	/* *ahost = hp->h_name; /* This makes me nervous. */

	/* get a socketpair we'll use for stdin and stdout. */
	if (getsocketpair(AF_UNIX, SOCK_STREAM, 0, sp) < 0) {
		error("socketpair(AF_UNIX, SOCK_STREAM, 0) failed: %s.", 
		      SYSERR);
		return -1;
	}

	cpid = fork();
	if (cpid < 0) {
		error("fork failed: %s.", SYSERR);
		return -1;      /* error. */
	}
	if (cpid == 0) {
		/* child. we use sp[1] to be stdin/stdout, and close
		   sp[0]. */
		(void) close(sp[0]);
		if (dup2(sp[1], 0) < 0 || dup2(0, 1) < 0) {
			error("dup2 failed: %s.", SYSERR);
			_exit(255);
		}
		/* fork again to lose parent. */
		cpid = fork();
		if (cpid < 0) {
			error("fork to lose parent failed: %s.", SYSERR);
			_exit(255);
		}
		if (cpid > 0)
			_exit(0);
		/* in grandchild here. */

		/*
		 * If we are rdist'ing to "localhost" as the same user
		 * as we are, then avoid running remote shell for efficiency.
		 */
		if (strcmp(*ahost, "localhost") == 0 &&
		    strcmp(luser, ruser) == 0) {
			execlp(_PATH_BSHELL, xbasename(_PATH_BSHELL), "-c",
			       cmd, (char *) NULL);
			error("execlp %s failed: %s.", _PATH_BSHELL, SYSERR);
		} else {
			execlp(path_remsh, xbasename(path_remsh), 
			       *ahost, "-l", ruser, cmd, (char *) NULL);
			error("execlp %s failed: %s.", path_remsh, SYSERR);
		}
		_exit(255);
	}
	if (cpid > 0) {
		/* parent. close sp[1], return sp[0]. */
		(void) close(sp[1]);
		/* reap child. */
		(void) wait(0);
		return sp[0];
	}
	/*NOTREACHED*/
}

#endif	/* !DIRECT_RCMD */
@


1.6
log
@Don't dup stderr to stdout.  This makes rdist happy with ssh when a
password is required.
@
text
@d1 1
a1 1
/*	$OpenBSD: rshrcmd.c,v 1.5 1996/09/07 03:14:27 millert Exp $	*/
d11 1
a11 1
"$OpenBSD: rshrcmd.c,v 1.5 1996/09/07 03:14:27 millert Exp $";
@


1.5
log
@remove defs.h hackery now that oldrdist just uses rcmdsh()
@
text
@d1 1
a1 1
/*	$OpenBSD: rshrcmd.c,v 1.4 1996/07/19 21:47:15 millert Exp $	*/
d11 1
a11 1
"$OpenBSD: rshrcmd.c,v 1.4 1996/07/19 21:47:15 millert Exp $";
d68 1
a68 1
		if (dup2(sp[1], 0) < 0 || dup2(0,1) < 0 || dup2(0, 2) < 0) {
@


1.4
log
@now uses -I path to find defs.h so we can use rshrcmd.c with oldrdist.
@
text
@d1 1
a1 1
/*	$OpenBSD: rshrcmd.c,v 1.3 1996/06/26 05:38:17 deraadt Exp $	*/
d11 1
a11 1
"$OpenBSD: rshrcmd.c,v 1.3 1996/06/26 05:38:17 deraadt Exp $";
d14 1
a14 1
#include	<defs.h>
@


1.3
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d11 1
a11 1
"$OpenBSD: rshrcmd.c,v 1.2 1996/03/05 03:16:12 dm Exp $";
d14 1
a14 1
#include	"defs.h"
@


1.2
log
@rdist 6.1.2
@
text
@d1 2
d11 1
a11 1
"$Id: rshrcmd.c,v 1.7 1995/12/12 00:20:55 mcooper Exp $";
@


1.1
log
@rdist 6.1.1
@
text
@@
