head	1.4;
access;
symbols
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	97.04.27.13.01.29;	author downsj;	state dead;
branches;
next	1.3;

1.3
date	96.06.26.05.38.18;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.05.03.16.13;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	96.02.03.12.12.43;	author dm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Pull in more includes to properly prototype library functions, kill local
decls of library functions, kill local implementation of setproctitle().

This of course points out how utterly bad this code is and that someone needs
to come in here with a chainsaw sometime.
@
text
@/*	$OpenBSD: setargs.c,v 1.3 1996/06/26 05:38:18 deraadt Exp $	*/

/*
 * Copyright (c) 1983 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef lint
static char RCSid[] = 
"$OpenBSD: setargs.c,v 1.3 1996/06/26 05:38:18 deraadt Exp $";

static char sccsid[] = "@@(#)setargs.c";

static char copyright[] =
"@@(#) Copyright (c) 1983 Regents of the University of California.\n\
 All rights reserved.\n";
#endif /* not lint */

#include "defs.h"

#if	defined(SETARGS)

/*
 * Set process argument functions
 */

#define MAXUSERENVIRON 		40
char 			      **Argv = NULL;
char 			       *LastArgv = NULL;
char 			       *UserEnviron[MAXUSERENVIRON+1];

/*
 * Settup things for using setproctitle()
 */
setargs_settup(argc, argv, envp)
	int			argc;
	char		      **argv;
	char		      **envp;
{
	register int 		i;
	extern char 	      **environ;

  	/* Remember the User Environment */

	for (i = 0; i < MAXUSERENVIRON && envp[i] != NULL; i++)
		UserEnviron[i] = strdup(envp[i]);
	UserEnviron[i] = NULL;
	environ = UserEnviron;

  	/* Save start and extent of argv for setproctitle */
	Argv = argv;
	if (i > 0)
		LastArgv = envp[i-1] + strlen(envp[i-1]);
	else
		LastArgv = argv[argc-1] + strlen(argv[argc-1]);
}

/*
 * Set process title
 */
extern void _setproctitle(msg)
        char *msg;
{
	register int i;
	char *p;
	
	p = Argv[0];

	/* Make ps print "(program)" */
	*p++ = '-';
	
	i = strlen(msg);
	if (i > LastArgv - p - 2) {
		i = LastArgv - p - 2;
		msg[i] = '\0';
	}
	(void) strcpy(p, msg);
	p += i;
	while (p < LastArgv) {
		*p++ = ' ';
	}
}

#if	defined(ARG_TYPE) && ARG_TYPE == ARG_VARARGS
/*
 * Varargs front-end to _setproctitle()
 */
extern void setproctitle(va_alist)
	va_dcl
{
	static char buf[BUFSIZ];
	va_list args;
	char *fmt;

	va_start(args);
	fmt = va_arg(args, char *);
	(void) vsprintf(buf, fmt, args);
	va_end(args);

	_setproctitle(buf);
}
#endif	/* ARG_VARARGS */
#if	defined(ARG_TYPE) && ARG_TYPE == ARG_STDARG
/*
 * Stdarg front-end to _setproctitle()
 */
extern void setproctitle(char *fmt, ...)
{
	static char buf[BUFSIZ];
	va_list args;

	va_start(args, fmt);
	(void) vsprintf(buf, fmt, args);
	va_end(args);

	_setproctitle(buf);
}
#endif	/* ARG_STDARG */
#if	!defined(ARG_TYPE)
/*
 * Non-Varargs front-end to _setproctitle()
 */
/*VARARGS1*/
extern void setproctitle(fmt, a1, a2, a3, a4, a5, a6)
	char *fmt;
{
	static char buf[BUFSIZ];

	(void) sprintf(buf, fmt, a1, a2, a3, a4, a5, a6);

	_setproctitle(buf);
}
#endif	/* !ARG_TYPE */

#endif 	/* SETARGS */
@


1.3
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d38 1
a38 1
"$OpenBSD: setargs.c,v 1.2 1996/03/05 03:16:13 dm Exp $";
@


1.2
log
@rdist 6.1.2
@
text
@d1 2
d38 1
a38 1
"$Id: setargs.c,v 6.4 1994/02/10 01:04:50 mcooper Exp mcooper $";
@


1.1
log
@rdist 6.1.1
@
text
@@
