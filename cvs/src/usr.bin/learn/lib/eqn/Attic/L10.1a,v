head	1.2;
access;
symbols
	OPENBSD_4_7:1.1.1.1.0.46
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.48
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.44
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.42
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.40
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.38
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.36
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.34
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.32
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.30
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.28
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.26
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.24
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.22
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.20
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.18
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.16
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.14
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.12
	OPENBSD_2_8:1.1.1.1.0.10
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.8
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.6
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	ian_1998-Sep-28:1.1.1.1
	ian:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.07.01.02.32.42;	author ian;	state dead;
branches;
next	1.1;

1.1
date	98.09.28.16.01.49;	author ian;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.28.16.01.49;	author ian;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove a long-dead skeleton found under the floorboards.
"go for it" tedu@@, "kill it" deraadt@@
@
text
@#once #create message
.ND
.tr %$
.EQ
delim $$
.EN
.LP
The next topic goes back to the problem of formatting
equations on the page.  Sometimes it is desirable to
line up one part of an equation with some part
of a previous equation - for example, equals signs
are often lined up like this:
.EQ I
x mark = y sub i
.EN
.EQ I
lineup = z sub i
.EN
.EQ I
x sub i + y sub i lineup = z sub i
.EN

To achieve this, you have to do several things.
(1) tell neqn to remember the place where things are
to be lined up, which is done by saying
"mark" just before the thing you want remembered:
  .EQ I
  x mark = y sub i
  .EN
.br
(2) Then, in successive equations, telling neqn
to line up something on the previous mark, with
"lineup":
   .EQ I
   lineup = z sub i
   .EN
.br
(3) You ____have __to use either ".EQ I" or ".EQ L";
you can't line things up in a centered equation.

For practice, modify "Example" so the
equations are lined up on the equals signs, then
type "ready".
.pl 1
#once #create Ref
.LP
A test of mark and lineup:
.EQ I
x sub i ~ mark =~ 1
.EN
.EQ I
x sub i + y sub i ~ lineup = ~2
.EN
.pl 1
#once #create Example
.LP
A test of mark and lineup:
.EQ I
x sub i ~ =~ 1
.EN
.EQ I
x sub i + y sub i ~ =~ 2
.EN
.pl 1
#
#once neqn Ref | nroff >X1 &
#once neqn message Ref | nroff -T$term %s/tinyms -
#user
neqn Example | nroff >X2
#cmp X1 X2
#fail
Don't forget that tilde is a real character;
put the mark and lineup after it.
Remember .EQ I.
#log
#next
10.1b 10
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import BTL learn(1) lessons/eqn
@
text
@@
