head	1.2;
access;
symbols
	OPENBSD_4_7:1.1.1.1.0.46
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.48
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.44
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.42
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.40
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.38
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.36
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.34
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.32
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.30
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.28
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.26
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.24
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.22
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.20
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.18
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.16
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.14
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.12
	OPENBSD_2_8:1.1.1.1.0.10
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.8
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.6
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	ian_1998-Sep-28:1.1.1.1
	ian:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.07.01.02.32.42;	author ian;	state dead;
branches;
next	1.1;

1.1
date	98.09.28.16.01.48;	author ian;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.28.16.01.48;	author ian;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove a long-dead skeleton found under the floorboards.
"go for it" tedu@@, "kill it" deraadt@@
@
text
@#print
It is usually wise to do your formatting with
the "-ms" macro package developed by Mike Lesk, since
it does a lot of dirty work for you without any effort
on your part.
One of the things "-ms" does is to arrange that equations
are "displayed" - that is, that they are neatly centered
and set off from the surrounding text.
Most of the "-ms" package is described in another script
called "macros", which you may have already learned.
For now, we need only know this much: to use "-ms"
with neqn, add "-ms" to your command line, right after
the word "nroff", like this

  neqn files... | nroff -ms -Txxx

Notice where the "-ms" goes.

In this directory is a file called "Example".
To prove that you can type the "-ms" in the right place,
print "Example" with "-ms", then type "ready".
#once #create Example
.PP
This is a tiny little text
that includes one equation
or at least it will when you find this line:
.EQ
x sub i = y sub i
.EN
and convert it into an equation.
(Naturally I changed it.)
.pl 1
#copyin
#user
#uncopyin
grep 'neqn Example *| *nroff -ms' <.copy >/dev/null
#log
#next
1.1d 10
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import BTL learn(1) lessons/eqn
@
text
@@
