head	1.2;
access;
symbols
	OPENBSD_4_7:1.1.1.1.0.46
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.48
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.44
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.42
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.40
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.38
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.36
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.34
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.32
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.30
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.28
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.26
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.24
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.22
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.20
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.18
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.16
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.14
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.12
	OPENBSD_2_8:1.1.1.1.0.10
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.8
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.6
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	ian_1998-Sep-28:1.1.1.1
	ian:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2010.07.01.02.32.42;	author ian;	state dead;
branches;
next	1.1;

1.1
date	98.09.28.16.01.39;	author ian;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.28.16.01.39;	author ian;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove a long-dead skeleton found under the floorboards.
"go for it" tedu@@, "kill it" deraadt@@
@
text
@#print
Here is something a bit trickier.  We want to add
an extra space after each word "lengthen".  However,
some of the instances of "lengthen" are followed
by commas or right parentheses and we want the sapace
after the comma or right parenthesis in that case.  That
is, the desired transformations are:
   now              new
lengthen xx      lengthen  xx
lengthen, xx     lengthen,  xx
lengthen) xx     lengthen)  xx
lengthen), xx    lengthen),  xx
It should only take one substitute command to do this.
Remember that "*" matches zero or more instances of
whatever precedes it.
Try those changes on the first six lines of the file
"text" in this directory.  Then rewrite the file and
type "ready".
#create Ref
To lengthen  this is easy,
whereas to lengthen,  rather
than to shorten, on the previous line
is hard.  (To lengthen)  is an
infinitive.  I said to him, (please lengthen),  and
he did so.
Why not lengthen this word?  Notice it is on line 7.
#create text
To lengthen this is easy,
whereas to lengthen, rather
than to shorten, on the previous line
is hard.  (To lengthen) is an
infinitive.  I said to him, (please lengthen), and
he did so.
Why not lengthen this word?  Notice it is on line 7.
#user
#cmp text Ref
#log
#next
37.2f 5
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import BTL learn(1) lessons/editor
@
text
@@
