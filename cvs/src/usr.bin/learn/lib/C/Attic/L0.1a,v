head	1.3;
access;
symbols
	OPENBSD_4_7:1.2.0.46
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.48
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.44
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.42
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.40
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.38
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.36
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.34
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.32
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.30
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.28
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.26
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.24
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.22
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.20
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.18
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.16
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.14
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.12
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	ian_1998-Sep-28:1.1.1.1
	ian:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2010.07.01.02.32.41;	author ian;	state dead;
branches;
next	1.2;

1.2
date	98.09.30.14.27.40;	author ian;	state Exp;
branches;
next	1.1;

1.1
date	98.09.28.16.01.25;	author ian;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.28.16.01.25;	author ian;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove a long-dead skeleton found under the floorboards.
"go for it" tedu@@, "kill it" deraadt@@
@
text
@#print
WARNING: This course was written for C as it was in 1979, not 1999,
and has not yet been updated. Some details may be way out of date!
In particular, there is not yet any updating for ANSI C.

This script is loosely based on the material in
"The C Programming Language", by Brian Kernighan
and Dennis Ritchie (Prentice-Hall, 1978).
You may find it helpful to have that at hand.
Some of the lessons will indicate
the section that they are based on.

Do you have a copy at hand?  Answer yes or no.
#copyin
#user
#uncopyin
#match yes
Fine.
#fail
It might help, but it's not critical.
#log
#next
1.1a 10
@


1.2
log
@Put in WARNINGS that the lessons are not up-to-date, plus
references to newer technology in a few lessons.
@
text
@@


1.1
log
@Initial revision
@
text
@d2 4
@


1.1.1.1
log
@import BTL learn(1) lessons/C
@
text
@@
