head	1.3;
access;
symbols
	OPENBSD_4_7:1.2.0.46
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.48
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.44
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.42
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.40
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.38
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.36
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.34
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.32
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.30
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.28
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.26
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.24
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.22
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.20
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.18
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.16
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.14
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.12
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	ian_1998-Sep-28:1.1.1.1
	ian:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2010.07.01.02.32.43;	author ian;	state dead;
branches;
next	1.2;

1.2
date	98.09.28.16.40.16;	author ian;	state Exp;
branches;
next	1.1;

1.1
date	98.09.28.15.45.47;	author ian;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.28.15.45.47;	author ian;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove a long-dead skeleton found under the floorboards.
"go for it" tedu@@, "kill it" deraadt@@
@
text
@Learn was originally written by Mike Lesk with some contributions
from Brian Kernighan.  The paper in the /usr/share/doc/usd/02.learn
directory dates from the second version of learn, around 1979.

This version of learn has been resurrected from the original V7
source and edited enough that the source compiles and the
lessons can be executed.  We have made no attempt to update the
lessons, nor to fix some of the glaring problems with the code.
Think of it as a historical document, not a polished system.
A historical document, that is, describing code that once
worked fine.  It sort of limps along now, but there are
some things that don't work right.  Caveat emptor.

Code warmed over at OpenBSD, September, 1998.
$OpenBSD: README,v 1.2 1998/09/28 16:40:16 ian Exp $
@


1.2
log
@First round of code modernization. Create playdir under /tmp, not
libdir. Add man page. Add pathnames.h.
@
text
@d15 1
a15 1
$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d1 10
a10 1
This is a historical document describing code that once
d14 2
a15 29

Make a learn by
	make

When this seems right, extract the lessons by
	make lessons

This extracts the lesson archives for each course.  You can also
do this one step at a time with "make files", "make editor",
etc., if you don't want all courses.  The C script is not
complete; use at your own risk.

To set up the working directories, you must also say
	make play; make log

Finally, check that it's sensible with
	make check
If that doesn't print any messages, you're probably in good shape.

Learn requires general write permission on the user playpen
directory .../lib/play.  Lesson directories may be protected.

Learn collects a log file for each script in the .../lib/log
directory, with a file for each script (files, editor, etc.)
containing an entry for each lesson attempted.  These files will
grow without bound, unless they are periodically truncated.  The
log files should have general write permission.  If you don't
want logging (a sensible position to take), set the variable
"logging" to zero in source/lrndef before making learn.
@


1.1.1.1
log
@import BTL learn(1)
@
text
@@
