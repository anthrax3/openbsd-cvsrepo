head	1.89;
access;
symbols
	OPENBSD_6_2_BASE:1.89
	OPENBSD_6_1:1.86.0.6
	OPENBSD_6_1_BASE:1.86
	OPENBSD_6_0:1.86.0.4
	OPENBSD_6_0_BASE:1.86
	OPENBSD_5_9:1.84.0.2
	OPENBSD_5_9_BASE:1.84
	OPENBSD_5_8:1.83.0.4
	OPENBSD_5_8_BASE:1.83
	OPENBSD_5_7:1.83.0.2
	OPENBSD_5_7_BASE:1.83
	OPENBSD_5_6:1.79.0.4
	OPENBSD_5_6_BASE:1.79
	OPENBSD_5_5:1.74.0.4
	OPENBSD_5_5_BASE:1.74
	OPENBSD_5_4:1.67.0.4
	OPENBSD_5_4_BASE:1.67
	OPENBSD_5_3:1.67.0.2
	OPENBSD_5_3_BASE:1.67
	OPENBSD_5_2:1.63.0.6
	OPENBSD_5_2_BASE:1.63
	OPENBSD_5_1_BASE:1.63
	OPENBSD_5_1:1.63.0.4
	OPENBSD_5_0:1.63.0.2
	OPENBSD_5_0_BASE:1.63
	OPENBSD_4_9:1.62.0.2
	OPENBSD_4_9_BASE:1.62
	OPENBSD_4_8:1.61.0.4
	OPENBSD_4_8_BASE:1.61
	OPENBSD_4_7:1.61.0.2
	OPENBSD_4_7_BASE:1.61
	OPENBSD_4_6:1.58.0.6
	OPENBSD_4_6_BASE:1.58
	OPENBSD_4_5:1.58.0.2
	OPENBSD_4_5_BASE:1.58
	OPENBSD_4_4:1.56.0.2
	OPENBSD_4_4_BASE:1.56
	OPENBSD_4_3:1.55.0.4
	OPENBSD_4_3_BASE:1.55
	OPENBSD_4_2:1.55.0.2
	OPENBSD_4_2_BASE:1.55
	OPENBSD_4_1:1.54.0.2
	OPENBSD_4_1_BASE:1.54
	OPENBSD_4_0:1.54.0.4
	OPENBSD_4_0_BASE:1.54
	OPENBSD_3_9:1.51.0.4
	OPENBSD_3_9_BASE:1.51
	OPENBSD_3_8:1.51.0.2
	OPENBSD_3_8_BASE:1.51
	OPENBSD_3_7:1.50.0.2
	OPENBSD_3_7_BASE:1.50
	OPENBSD_3_6:1.49.0.2
	OPENBSD_3_6_BASE:1.49
	OPENBSD_3_5:1.46.0.2
	OPENBSD_3_5_BASE:1.46
	OPENBSD_3_4:1.44.0.2
	OPENBSD_3_4_BASE:1.44
	OPENBSD_3_3:1.39.0.2
	OPENBSD_3_3_BASE:1.39
	OPENBSD_3_2:1.36.0.2
	OPENBSD_3_2_BASE:1.36
	OPENBSD_3_1:1.33.0.2
	OPENBSD_3_1_BASE:1.33
	OPENBSD_3_0:1.29.0.2
	OPENBSD_3_0_BASE:1.29
	OPENBSD_2_9_BASE:1.22
	OPENBSD_2_9:1.22.0.2
	OPENBSD_2_8:1.16.0.2
	OPENBSD_2_8_BASE:1.16
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10;
locks; strict;
comment	@# @;


1.89
date	2017.07.01.13.50.45;	author djm;	state Exp;
branches;
next	1.88;
commitid	jGKycoTTk52hb7Q7;

1.88
date	2017.04.30.23.26.16;	author djm;	state Exp;
branches;
next	1.87;
commitid	ur12vOD9kYPHm9ch;

1.87
date	2017.04.30.23.17.37;	author djm;	state Exp;
branches;
next	1.86;
commitid	GS7HedZBIZsyULVw;

1.86
date	2016.07.04.18.01.44;	author guenther;	state Exp;
branches;
next	1.85;
commitid	MDAws5Y7do6cFWlq;

1.85
date	2016.05.25.23.48.45;	author schwarze;	state Exp;
branches;
next	1.84;
commitid	NPBJoBfuBDOIqIQi;

1.84
date	2016.01.14.16.17.40;	author markus;	state Exp;
branches;
next	1.83;
commitid	W9ye0gltieEl87AJ;

1.83
date	2015.03.03.21.21.13;	author djm;	state Exp;
branches;
next	1.82;
commitid	fcvr9LotYI8aCFuc;

1.82
date	2015.01.19.20.30.24;	author markus;	state Exp;
branches;
next	1.81;
commitid	74WAJgdQCKxDqTwt;

1.81
date	2015.01.19.19.52.17;	author markus;	state Exp;
branches;
next	1.80;
commitid	UHlhoIB5NMb8eAPm;

1.80
date	2015.01.14.15.02.39;	author djm;	state Exp;
branches;
next	1.79;
commitid	2uJ80mLmhI8Cczcv;

1.79
date	2014.06.24.01.13.22;	author djm;	state Exp;
branches;
next	1.78;
commitid	1h9UxAQmwdaqUzyX;

1.78
date	2014.04.30.19.07.48;	author naddy;	state Exp;
branches;
next	1.77;

1.77
date	2014.04.30.05.29.56;	author djm;	state Exp;
branches;
next	1.76;

1.76
date	2014.04.29.18.01.49;	author markus;	state Exp;
branches;
next	1.75;

1.75
date	2014.04.22.11.47.55;	author henning;	state Exp;
branches;
next	1.74;

1.74
date	2014.01.29.06.18.35;	author djm;	state Exp;
branches;
next	1.73;

1.73
date	2014.01.28.20.13.46;	author markus;	state Exp;
branches;
next	1.72;

1.72
date	2014.01.27.18.58.14;	author markus;	state Exp;
branches;
next	1.71;

1.71
date	2014.01.09.23.20.01;	author djm;	state Exp;
branches;
next	1.70;

1.70
date	2013.12.06.13.39.49;	author markus;	state Exp;
branches;
next	1.69;

1.69
date	2013.11.21.00.45.44;	author djm;	state Exp;
branches;
next	1.68;

1.68
date	2013.11.02.21.59.15;	author markus;	state Exp;
branches;
next	1.67;

1.67
date	2013.01.17.23.00.01;	author djm;	state Exp;
branches;
next	1.66;

1.66
date	2012.12.12.16.46.10;	author naddy;	state Exp;
branches;
next	1.65;

1.65
date	2012.10.04.13.21.50;	author markus;	state Exp;
branches;
next	1.64;

1.64
date	2012.08.02.13.38.39;	author okan;	state Exp;
branches;
next	1.63;

1.63
date	2011.04.25.04.53.21;	author deraadt;	state Exp;
branches;
next	1.62;

1.62
date	2010.08.31.11.54.45;	author djm;	state Exp;
branches;
next	1.61;

1.61
date	2010.02.20.20.28.11;	author markus;	state Exp;
branches;
next	1.60;

1.60
date	2010.02.08.13.05.27;	author markus;	state Exp;
branches;
next	1.59;

1.59
date	2010.02.08.10.50.20;	author markus;	state Exp;
branches;
next	1.58;

1.58
date	2008.11.04.08.22.13;	author djm;	state Exp;
branches;
next	1.57;

1.57
date	2008.09.06.12.24.16;	author djm;	state Exp;
branches;
next	1.56;

1.56
date	2008.06.10.03.57.27;	author djm;	state Exp;
branches;
next	1.55;

1.55
date	2007.06.07.19.37.34;	author pvalchev;	state Exp;
branches;
next	1.54;

1.54
date	2006.05.28.16.45.09;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	2006.04.18.10.44.28;	author dtucker;	state Exp;
branches;
next	1.52;

1.52
date	2006.03.07.09.07.39;	author djm;	state Exp;
branches;
next	1.51;

1.51
date	2005.04.09.04.32.54;	author djm;	state Exp;
branches
	1.51.2.1
	1.51.4.1;
next	1.50;

1.50
date	2004.12.22.02.13.19;	author djm;	state Exp;
branches
	1.50.2.1;
next	1.49;

1.49
date	2004.08.23.14.26.39;	author dtucker;	state Exp;
branches
	1.49.2.1;
next	1.48;

1.48
date	2004.06.13.15.03.02;	author djm;	state Exp;
branches;
next	1.47;

1.47
date	2004.05.09.01.21.50;	author djm;	state Exp;
branches;
next	1.46;

1.46
date	2003.11.21.11.57.03;	author djm;	state Exp;
branches
	1.46.2.1;
next	1.45;

1.45
date	2003.09.23.20.17.11;	author markus;	state Exp;
branches;
next	1.44;

1.44
date	2003.08.22.10.56.09;	author markus;	state Exp;
branches
	1.44.2.1;
next	1.43;

1.43
date	2003.05.17.04.27.52;	author markus;	state Exp;
branches;
next	1.42;

1.42
date	2003.05.15.03.08.29;	author markus;	state Exp;
branches;
next	1.41;

1.41
date	2003.05.14.18.16.21;	author jakob;	state Exp;
branches;
next	1.40;

1.40
date	2003.04.09.08.24.24;	author hin;	state Exp;
branches;
next	1.39;

1.39
date	2003.02.21.09.04.09;	author markus;	state Exp;
branches
	1.39.2.1;
next	1.38;

1.38
date	2003.02.16.17.09.57;	author markus;	state Exp;
branches;
next	1.37;

1.37
date	2003.01.12.16.59.14;	author markus;	state Exp;
branches;
next	1.36;

1.36
date	2002.06.11.15.23.29;	author hin;	state Exp;
branches
	1.36.2.1;
next	1.35;

1.35
date	2002.06.11.04.14.26;	author markus;	state Exp;
branches;
next	1.34;

1.34
date	2002.05.23.19.24.31;	author markus;	state Exp;
branches;
next	1.33;

1.33
date	2002.03.18.17.50.31;	author provos;	state Exp;
branches
	1.33.2.1;
next	1.32;

1.32
date	2002.03.08.01.53.56;	author itojun;	state Exp;
branches;
next	1.31;

1.31
date	2002.02.22.12.20.34;	author markus;	state Exp;
branches;
next	1.30;

1.30
date	2002.01.25.22.04.10;	author mickey;	state Exp;
branches;
next	1.29;

1.29
date	2001.06.26.17.52.41;	author dugsong;	state Exp;
branches
	1.29.2.1;
next	1.28;

1.28
date	2001.06.26.16.15.25;	author dugsong;	state Exp;
branches;
next	1.27;

1.27
date	2001.06.26.05.52.54;	author markus;	state Exp;
branches;
next	1.26;

1.26
date	2001.06.26.05.33.35;	author markus;	state Exp;
branches;
next	1.25;

1.25
date	2001.06.24.05.35.34;	author markus;	state Exp;
branches;
next	1.24;

1.24
date	2001.05.31.10.30.18;	author markus;	state Exp;
branches;
next	1.23;

1.23
date	2001.05.30.12.55.14;	author markus;	state Exp;
branches;
next	1.22;

1.22
date	2001.04.03.19.53.30;	author markus;	state Exp;
branches
	1.22.2.1;
next	1.21;

1.21
date	2001.03.29.21.17.40;	author markus;	state Exp;
branches;
next	1.20;

1.20
date	2001.02.11.12.59.26;	author markus;	state Exp;
branches;
next	1.19;

1.19
date	2001.01.29.01.58.19;	author niklas;	state Exp;
branches;
next	1.18;

1.18
date	2001.01.21.19.06.03;	author markus;	state Exp;
branches;
next	1.17;

1.17
date	2000.11.12.19.50.39;	author markus;	state Exp;
branches;
next	1.16;

1.16
date	2000.10.13.18.59.15;	author markus;	state Exp;
branches
	1.16.2.1;
next	1.15;

1.15
date	2000.10.11.20.14.40;	author markus;	state Exp;
branches;
next	1.14;

1.14
date	2000.09.03.18.41.19;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2000.08.19.21.34.44;	author markus;	state Exp;
branches;
next	1.12;

1.12
date	2000.08.01.19.01.42;	author provos;	state Exp;
branches;
next	1.11;

1.11
date	2000.05.17.08.20.16;	author markus;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.26.20.56.30;	author markus;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2000.04.03.20.06.16;	author markus;	state Exp;
branches;
next	1.8;

1.8
date	2000.03.28.20.31.31;	author markus;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.23.22.15.34;	author markus;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.14.20.13.28;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	99.12.06.21.47.11;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	99.11.16.22.49.29;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	99.11.10.23.36.45;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	99.10.26.22.49.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.10.25.20.27.26;	author markus;	state Exp;
branches;
next	;

1.10.2.1
date	2000.06.12.02.25.28;	author jason;	state Exp;
branches;
next	1.10.2.2;

1.10.2.2
date	2000.09.01.18.13.23;	author jason;	state Exp;
branches;
next	1.10.2.3;

1.10.2.3
date	2000.11.08.21.27.39;	author jason;	state Exp;
branches;
next	1.10.2.4;

1.10.2.4
date	2001.03.12.15.44.19;	author jason;	state Exp;
branches;
next	1.10.2.5;

1.10.2.5
date	2001.03.21.18.53.22;	author jason;	state Exp;
branches;
next	;

1.16.2.1
date	2001.02.16.20.13.26;	author jason;	state Exp;
branches;
next	1.16.2.2;

1.16.2.2
date	2001.02.19.17.19.45;	author jason;	state Exp;
branches;
next	1.16.2.3;

1.16.2.3
date	2001.03.21.19.46.32;	author jason;	state Exp;
branches;
next	1.16.2.4;

1.16.2.4
date	2001.05.07.21.09.39;	author jason;	state Exp;
branches;
next	1.16.2.5;

1.16.2.5
date	2001.09.27.00.15.47;	author miod;	state Exp;
branches;
next	1.16.2.6;

1.16.2.6
date	2002.03.08.17.04.44;	author brad;	state Exp;
branches;
next	;

1.22.2.1
date	2001.09.27.19.03.56;	author jason;	state Exp;
branches;
next	1.22.2.2;

1.22.2.2
date	2001.11.15.22.51.17;	author miod;	state Exp;
branches;
next	1.22.2.3;

1.22.2.3
date	2002.03.09.00.20.50;	author miod;	state Exp;
branches;
next	1.22.2.4;

1.22.2.4
date	2002.06.02.22.56.15;	author miod;	state Exp;
branches;
next	;

1.29.2.1
date	2002.03.07.17.37.48;	author jason;	state Exp;
branches;
next	1.29.2.2;

1.29.2.2
date	2002.05.17.00.03.30;	author miod;	state Exp;
branches;
next	1.29.2.3;

1.29.2.3
date	2002.06.22.07.24.39;	author miod;	state Exp;
branches;
next	;

1.33.2.1
date	2002.06.26.15.30.39;	author jason;	state Exp;
branches;
next	1.33.2.2;

1.33.2.2
date	2003.04.03.22.35.21;	author miod;	state Exp;
branches;
next	;

1.36.2.1
date	2003.04.01.00.12.14;	author margarida;	state Exp;
branches;
next	1.36.2.2;

1.36.2.2
date	2003.09.16.21.20.29;	author brad;	state Exp;
branches;
next	;

1.39.2.1
date	2003.09.16.20.50.44;	author brad;	state Exp;
branches;
next	1.39.2.2;

1.39.2.2
date	2004.03.04.18.18.17;	author brad;	state Exp;
branches;
next	;

1.44.2.1
date	2004.02.28.03.51.34;	author brad;	state Exp;
branches;
next	1.44.2.2;

1.44.2.2
date	2004.08.19.22.37.33;	author brad;	state Exp;
branches;
next	;

1.46.2.1
date	2004.08.19.04.13.28;	author brad;	state Exp;
branches;
next	1.46.2.2;

1.46.2.2
date	2005.03.10.17.15.05;	author brad;	state Exp;
branches;
next	;

1.49.2.1
date	2005.03.10.16.28.28;	author brad;	state Exp;
branches;
next	1.49.2.2;

1.49.2.2
date	2005.09.02.03.45.01;	author brad;	state Exp;
branches;
next	;

1.50.2.1
date	2005.09.04.18.40.11;	author brad;	state Exp;
branches;
next	;

1.51.2.1
date	2006.10.06.03.19.33;	author brad;	state Exp;
branches;
next	;

1.51.4.1
date	2006.09.30.04.06.51;	author brad;	state Exp;
branches;
next	;


desc
@@


1.89
log
@remove post-SSHv1 removal dead code from rsa.c and merge the
remaining bit that it still used into ssh-rsa.c; ok markus
@
text
@#	$OpenBSD: Makefile,v 1.88 2017/04/30 23:26:16 djm Exp $

.PATH:		${.CURDIR}/..
.include "${.CURDIR}/../Makefile.inc"

LIB=	ssh

# These are files intended for a standalone libopenssh in the future.
LIB_SRCS= \
	ssh_api.c \
	ssherr.c \
	sshbuf.c \
	sshbuf-getput-basic.c \
	sshbuf-misc.c \
	sshkey.c \
	bitmap.c \
	krl.c

.if (${OPENSSL:L} == "yes")
LIB_SRCS+=	sshbuf-getput-crypto.c digest-openssl.c
.else
LIB_SRCS+=	digest-libc.c
.endif

SRCS=	${LIB_SRCS} \
	authfd.c authfile.c bufaux.c buffer.c canohost.c \
	channels.c cipher.c \
	cleanup.c compat.c crc32.c fatal.c \
	hostfile.c log.c match.c nchan.c packet.c opacket.c readpass.c \
	ttymodes.c xmalloc.c atomicio.c \
	key.c dispatch.c kex.c mac.c uidswap.c uuencode.c misc.c utf8.c \
	msg.c progressmeter.c dns.c \
	monitor_fdpass.c addrmatch.c \
	smult_curve25519_ref.c \
	kexc25519.c kexc25519c.c kexc25519s.c \
	chacha.c poly1305.c cipher-chachapoly.c ssh-ed25519.c hmac.c umac.c

.if (${OPENSSL:L} == "yes")
SRCS+=	bufec.c bufbn.c \
	ssh-dss.c ssh-rsa.c ssh-ecdsa.c dh.c \
	kexdh.c kexgex.c kexecdh.c \
	kexdhc.c kexgexc.c kexecdhc.c \
	kexdhs.c kexgexs.c kexecdhs.c \
	ssh-pkcs11.c
.else
SRCS+=	rijndael.c cipher-aesctr.c
.endif

# ed25519, from supercop
SRCS+=	sc25519.c ge25519.c fe25519.c ed25519.c verify.c hash.c blocks.c

SRCS+=	umac128.c
CLEANFILES+=   umac128.c
umac128.c: umac.c Makefile
	sed \
	    -e "s/^#define UMAC_OUTPUT_LEN     8/#define UMAC_OUTPUT_LEN 16/" \
	    -e s/umac_new/umac128_new/g \
	    -e s/umac_update/umac128_update/g \
	    -e s/umac_final/umac128_final/g \
	    -e s/umac_delete/umac128_delete/g \
	    < ${.CURDIR}/../umac.c > ${.TARGET}

NOPROFILE= yes
NOPIC=	yes

install:
	@@echo -n

.include <bsd.own.mk>

# .if (${KERBEROS5:L} == "yes")
# CFLAGS+= -DKRB5 -I${DESTDIR}/usr/include/kerberosV

# SRCS+= gss-genr.c
# CFLAGS+= -DGSSAPI
# .endif # KERBEROS5

.include <bsd.lib.mk>
@


1.88
log
@remove the (in)famous SSHv1 CRC compensation attack detector.

Despite your cameo in The Matrix movies, you will not be missed.

ok markus
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.87 2017/04/30 23:17:37 djm Exp $
d39 1
a39 1
SRCS+=	bufec.c bufbn.c rsa.c \
@


1.87
log
@remove SSH1 make flag and associated files
ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.86 2016/07/04 18:01:44 guenther Exp $
d28 1
a28 1
	cleanup.c compat.c crc32.c deattack.c fatal.c \
@


1.86
log
@DEBUGLIBS has been broken since the gcc4 switch, so delete it.  CFLAGS
contains -g by default anyway

problem noted by Edgar Pettijohn (edgar (at) pettijohn-web.com)
ok millert@@ kettenis@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.85 2016/05/25 23:48:45 schwarze Exp $
a36 4

.if (${SSH1:L} == "yes")
SRCS+=	cipher-3des1.c cipher-bf1.c
.endif
@


1.85
log
@To prevent screwing up terminal settings when printing to the
terminal, for ASCII and UTF-8, escape bytes not forming characters
and bytes forming non-printable characters with vis(3) VIS_OCTAL.
For other character sets, abort printing of the current string in
these cases.  In particular,
* let scp(1) respect the local user's LC_CTYPE locale(1);
* sanitize data received from the remote host;
* sanitize filenames, usernames, and similar data even locally;
* take character display widths into account for the progressmeter.

This is believed to be sufficient to keep the local terminal safe
on OpenBSD, but bad things can still happen on other systems with
state-dependent locales because many places in the code print
unencoded ASCII characters into the output stream.

Using feedback from djm@@ and martijn@@,
various aspects discussed with many others.

deraadt@@ says it should go in now, i probably already hesitated too long
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.84 2016/01/14 16:17:40 markus Exp $
a66 1
DEBUGLIBS= no
@


1.84
log
@remove roaming support; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.83 2015/03/03 21:21:13 djm Exp $
d31 1
a31 1
	key.c dispatch.c kex.c mac.c uidswap.c uuencode.c misc.c \
@


1.83
log
@add SSH1 Makefile knob to make it easier to build without SSH1 support;
ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.82 2015/01/19 20:30:24 markus Exp $
a35 1
	roaming_dummy.c \
@


1.82
log
@add experimental api for packet layer; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.81 2015/01/19 19:52:17 markus Exp $
d39 4
d44 1
a44 1
SRCS+=	bufec.c bufbn.c cipher-3des1.c cipher-bf1.c rsa.c \
@


1.81
log
@update packet.c & isolate, introduce struct ssh
a) switch packet.c to buffer api and isolate per-connection info into struct ssh
b) (de)serialization of the state is moved from monitor to packet.c
c) the old packet.c API is implemented in opacket.[ch]
d) compress.c/h is removed and integrated into packet.c
with and ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.80 2015/01/14 15:02:39 djm Exp $
d10 1
d34 3
a36 1
	smult_curve25519_ref.c kexc25519.c kexc25519c.c \
d41 5
a45 2
	ssh-dss.c ssh-rsa.c ssh-ecdsa.c dh.c kexdh.c kexgex.c kexecdh.c \
	kexdhc.c kexgexc.c kexecdhc.c ssh-pkcs11.c
@


1.80
log
@avoid BIGNUM in KRL code by using a simple bitmap;
feedback and ok markus
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.79 2014/06/24 01:13:22 djm Exp $
d27 2
a28 2
	cleanup.c compat.c compress.c crc32.c deattack.c fatal.c \
	hostfile.c log.c match.c nchan.c packet.c readpass.c \
@


1.79
log
@New key API: refactor key-related functions to be more library-like,
existing API is offered as a set of wrappers.

with and ok markus@@

Thanks also to Ben Hawkes, David Tomaschik, Ivan Fratric, Matthew
Dempsky and Ron Bowes for a detailed review a few months ago.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.78 2014/04/30 19:07:48 naddy Exp $
d14 3
a16 1
	sshkey.c
d39 1
a39 2
	kexdhc.c kexgexc.c kexecdhc.c ssh-pkcs11.c \
	krl.c
@


1.78
log
@UMAC can use our local fallback implementation of AES when OpenSSL isn't
available.  Glue code straight from Ted Krovetz's original umac.c.
ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.77 2014/04/30 05:29:56 djm Exp $
d13 2
a14 1
	sshbuf-misc.c
d17 3
a19 1
LIB_SRCS+=	sshbuf-getput-crypto.c
d38 1
a38 1
	krl.c digest-openssl.c
d40 1
a40 1
SRCS+=	digest-libc.c rijndael.c cipher-aesctr.c
@


1.77
log
@New buffer API; the first installment of the conversion/replacement
of OpenSSH's internals to make them usable as a standalone library.

This includes a set of wrappers to make it compatible with the
existing buffer API so replacement can occur incrementally.

With and ok markus@@

Thanks also to Ben Hawkes, David Tomaschik, Ivan Fratric, Matthew
Dempsky and Ron Bowes for a detailed review.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.76 2014/04/29 18:01:49 markus Exp $
d29 1
a29 1
	chacha.c poly1305.c cipher-chachapoly.c ssh-ed25519.c hmac.c
d34 1
a34 1
	kexdhc.c kexgexc.c kexecdhc.c umac.c ssh-pkcs11.c \
@


1.76
log
@make compiling against OpenSSL optional (make OPENSSL=no);
reduces algorithms to curve25519, aes-ctr, chacha, ed25519;
allows us to explore further options; with and ok djm
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.75 2014/04/22 11:47:55 henning Exp $
d7 14
a20 1
SRCS=	authfd.c authfile.c bufaux.c buffer.c canohost.c \
@


1.75
log
@comment out the .if (${KERBEROS5:L} block for now, breaks the build
once the bsd.own.mk KERBEROS5 is removed otherwise. this way suggested
by theo.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.73 2014/01/28 20:13:46 markus Exp $
d7 2
a8 2
SRCS=	authfd.c authfile.c bufaux.c bufec.c bufbn.c buffer.c canohost.c \
	channels.c cipher.c cipher-3des1.c cipher-bf1.c \
d11 1
a11 1
	rsa.c ttymodes.c xmalloc.c atomicio.c \
d13 7
d21 5
a25 5
	kexdhc.c kexgexc.c kexecdhc.c msg.c progressmeter.c dns.c \
	monitor_fdpass.c umac.c addrmatch.c ssh-pkcs11.c \
	krl.c smult_curve25519_ref.c kexc25519.c kexc25519c.c \
	chacha.c poly1305.c cipher-chachapoly.c ssh-ed25519.c \
	digest-openssl.c hmac.c
@


1.74
log
@remove experimental, never-enabled JPAKE code; ok markus@@
@
text
@d43 2
a44 2
.if (${KERBEROS5:L} == "yes")
CFLAGS+= -DKRB5 -I${DESTDIR}/usr/include/kerberosV
d46 3
a48 3
SRCS+= gss-genr.c
CFLAGS+= -DGSSAPI
.endif # KERBEROS5
@


1.73
log
@rename digest.c to digest-openssl.c and add libc variant; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.72 2014/01/27 18:58:14 markus Exp $
d15 1
a15 1
	monitor_fdpass.c umac.c addrmatch.c schnorr.c jpake.c ssh-pkcs11.c \
@


1.72
log
@replace openssl HMAC with an implementation based on our ssh_digest_*
ok and feedback djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.71 2014/01/09 23:20:01 djm Exp $
d17 2
a18 1
	chacha.c poly1305.c cipher-chachapoly.c ssh-ed25519.c digest.c hmac.c
@


1.71
log
@Introduce digest API and use it to perform all hashing operations
rather than calling OpenSSL EVP_Digest* directly. Will make it easier
to build a reduced-feature OpenSSH without OpenSSL in future;
feedback, ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.70 2013/12/06 13:39:49 markus Exp $
d17 1
a17 1
	chacha.c poly1305.c cipher-chachapoly.c ssh-ed25519.c digest.c
@


1.70
log
@support ed25519 keys (hostkeys and user identities) using the public domain
ed25519 reference code from SUPERCOP, see http://ed25519.cr.yp.to/software.html
feedback, help & ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.69 2013/11/21 00:45:44 djm Exp $
d17 1
a17 1
	chacha.c poly1305.c cipher-chachapoly.c ssh-ed25519.c
@


1.69
log
@Add a new protocol 2 transport cipher "chacha20-poly1305@@openssh.com"
that combines Daniel Bernstein's ChaCha20 stream cipher and Poly1305 MAC
to build an authenticated encryption mode.

Inspired by and similar to Adam Langley's proposal for TLS:
http://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-03
but differs in layout used for the MAC calculation and the use of a
second ChaCha20 instance to separately encrypt packet lengths.
Details are in the PROTOCOL.chacha20poly1305 file.

Feedback markus@@, naddy@@; manpage bits Loganden Velvindron @@ AfriNIC
ok markus@@ naddy@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.68 2013/11/02 21:59:15 markus Exp $
d17 4
a20 1
	chacha.c poly1305.c cipher-chachapoly.c
@


1.68
log
@use curve25519 for default key exchange (curve25519-sha256@@libssh.org);
initial patch from Aris Adamantiadis; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.67 2013/01/17 23:00:01 djm Exp $
d16 2
a17 1
	krl.c smult_curve25519_ref.c kexc25519.c kexc25519c.c
@


1.67
log
@add support for Key Revocation Lists (KRLs). These are a compact way to
represent lists of revoked keys and certificates, taking as little as
a single bit of incremental cost to revoke a certificate by serial number.
KRLs are loaded via the existing RevokedKeys sshd_config option.

feedback and ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.66 2012/12/12 16:46:10 naddy Exp $
d16 1
a16 1
	krl.c
@


1.66
log
@use OpenSSL's EVP_aes_{128,192,256}_ctr() API and remove our hand-rolled
counter mode code; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.65 2012/10/04 13:21:50 markus Exp $
d15 2
a16 1
	monitor_fdpass.c umac.c addrmatch.c schnorr.c jpake.c ssh-pkcs11.c
@


1.65
log
@add umac128 variant; ok djm@@ at n2k12
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.64 2012/08/02 13:38:39 okan Exp $
d8 1
a8 1
	channels.c cipher.c cipher-3des1.c cipher-bf1.c cipher-ctr.c \
@


1.64
log
@remove leftover NOLINT, WANTLINT, LINTFLAGS, LOBJ vars and lint targets.

ok guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.63 2011/04/25 04:53:21 deraadt Exp $
d16 11
@


1.63
log
@linting this library is not helping anything
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.62 2010/08/31 11:54:45 djm Exp $
a6 1
WANTLINT=no
@


1.62
log
@Implement Elliptic Curve Cryptography modes for key exchange (ECDH) and
host/user keys (ECDSA) as specified by RFC5656. ECDH and ECDSA offer
better performance than plain DH and DSA at the same equivalent symmetric
key length, as well as much shorter keys.

Only the mandatory sections of RFC5656 are implemented, specifically the
three REQUIRED curves nistp256, nistp384 and nistp521 and only ECDH and
ECDSA. Point compression (optional in RFC5656 is NOT implemented).

Certificate host and user keys using the new ECDSA key types are supported.

Note that this code has not been tested for interoperability and may be
subject to change.

feedback and ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.61 2010/02/20 20:28:11 markus Exp $
d7 1
a7 1
WANTLINT=
@


1.61
log
@unbreak build for NOPIC systems; noticed, help and ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.60 2010/02/08 13:05:27 markus Exp $
d8 2
a9 2
SRCS=	authfd.c authfile.c bufaux.c bufbn.c buffer.c canohost.c channels.c \
	cipher.c cipher-3des1.c cipher-bf1.c cipher-ctr.c \
d14 2
a15 2
	ssh-dss.c ssh-rsa.c dh.c kexdh.c kexgex.c \
	kexdhc.c kexgexc.c msg.c progressmeter.c dns.c \
@


1.60
log
@remove scard
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.59 2010/02/08 10:50:20 markus Exp $
d4 1
@


1.59
log
@replace our obsolete smartcard code with PKCS#11.
	ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-11/v2-20/pkcs-11v2-20.pdf
ssh(1) and ssh-keygen(1) use dlopen(3) directly to talk to a PKCS#11
provider (shared library) while ssh-agent(1) delegates PKCS#11 to
a forked a ssh-pkcs11-helper process.
PKCS#11 is currently a compile time option.
feedback and ok djm@@; inspired by patches from Alon Bar-Lev
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.58 2008/11/04 08:22:13 djm Exp $
d14 1
a14 1
	kexdhc.c kexgexc.c scard.c msg.c progressmeter.c dns.c \
@


1.58
log
@Add support for an experimental zero-knowledge password authentication
method using the J-PAKE protocol described in F. Hao, P. Ryan,
"Password Authenticated Key Exchange by Juggling", 16th Workshop on
Security Protocols, Cambridge, April 2008.

This method allows password-based authentication without exposing
the password to the server. Instead, the client and server exchange
cryptographic proofs to demonstrate of knowledge of the password while
revealing nothing useful to an attacker or compromised endpoint.

This is experimental, work-in-progress code and is presently
compiled-time disabled (turn on -DJPAKE in Makefile.inc).

"just commit it.  It isn't too intrusive." deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.57 2008/09/06 12:24:16 djm Exp $
d15 1
a15 1
	monitor_fdpass.c umac.c addrmatch.c schnorr.c jpake.c
@


1.57
log
@OpenSSL 0.9.8h supplies a real EVP_sha256 so we do not need our
replacement anymore
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.56 2008/06/10 03:57:27 djm Exp $
d15 1
a15 1
	monitor_fdpass.c umac.c addrmatch.c
@


1.56
log
@support CIDR address matching in sshd_config "Match address" blocks, with
full support for negation and fall-back to classic wildcard matching.
For example:

Match address 192.0.2.0/24,3ffe:ffff::/32,!10.*
    PasswordAuthentication yes

addrmatch.c code mostly lifted from flowd's addr.c

feedback and ok dtucker@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.55 2007/06/07 19:37:34 pvalchev Exp $
d15 1
a15 1
	monitor_fdpass.c md-sha256.c umac.c addrmatch.c
@


1.55
log
@Add a new MAC algorithm for data integrity, UMAC-64 (not default yet, must
specify umac-64@@openssh.com). Provides about 20% end-to-end speedup
compared to hmac-md5. Represents a different approach to message
authentication to that of HMAC that may be beneficial if HMAC based on one
of its underlying hash algorithms is found to be vulnerable to a new attack.
http://www.ietf.org/rfc/rfc4418.txt

in conjunction with and OK djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.54 2006/05/28 16:45:09 deraadt Exp $
d15 1
a15 1
	monitor_fdpass.c md-sha256.c umac.c
@


1.54
log
@build a lint library for us to use above
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.53 2006/04/18 10:44:28 dtucker Exp $
d15 1
a15 1
	monitor_fdpass.c md-sha256.c
@


1.53
log
@Move Buffer bignum functions into their own file, bufbn.c.  This means that
sftp and sftp-server (which use the Buffer functions in bufaux.c but not the
bignum ones) no longer need to be linked with libcrypto.  ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.52 2006/03/07 09:07:39 djm Exp $
d6 1
@


1.52
log
@Implement the diffie-hellman-group-exchange-sha256 key exchange method
using the SHA256 code in libc (and wrapper to make it into an OpenSSL
EVP), interop tested against CVS PuTTY
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.51 2005/04/09 04:32:54 djm Exp $
d6 1
a6 1
SRCS=	authfd.c authfile.c bufaux.c buffer.c canohost.c channels.c \
@


1.51
log
@replace tilde_expand_filename with a simpler implementation, ahead of more
whacking; ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.50 2004/12/22 02:13:19 djm Exp $
d14 1
a14 1
	monitor_fdpass.c
@


1.51.2.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.54 2006/05/28 16:45:09 deraadt Exp $
d6 1
a6 2
WANTLINT=
SRCS=	authfd.c authfile.c bufaux.c bufbn.c buffer.c canohost.c channels.c \
d14 1
a14 1
	monitor_fdpass.c md-sha256.c
@


1.51.4.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.54 2006/05/28 16:45:09 deraadt Exp $
d6 1
a6 2
WANTLINT=
SRCS=	authfd.c authfile.c bufaux.c bufbn.c buffer.c canohost.c channels.c \
d14 1
a14 1
	monitor_fdpass.c md-sha256.c
@


1.50
log
@remove fallback AES support for old OpenSSL, as OpenBSD has had it for many
years now; ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.49 2004/08/23 14:26:39 dtucker Exp $
d10 1
a10 1
	rsa.c tildexpand.c ttymodes.c xmalloc.c atomicio.c \
@


1.50.2.1
log
@upgrade to OpenSSH 4.2
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.51 2005/04/09 04:32:54 djm Exp $
d10 1
a10 1
	rsa.c ttymodes.c xmalloc.c atomicio.c \
@


1.49
log
@Use permanently_set_uid() in ssh and ssh-keysign for consistency, matches
change in Portable; ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.48 2004/06/13 15:03:02 djm Exp $
d7 1
a7 1
	cipher.c cipher-3des1.c cipher-aes.c cipher-bf1.c cipher-ctr.c \
d12 1
a12 1
	rijndael.c ssh-dss.c ssh-rsa.c dh.c kexdh.c kexgex.c \
@


1.49.2.1
log
@upgrade to OpenSSH 4.0
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.50 2004/12/22 02:13:19 djm Exp $
d7 1
a7 1
	cipher.c cipher-3des1.c cipher-bf1.c cipher-ctr.c \
d12 1
a12 1
	ssh-dss.c ssh-rsa.c dh.c kexdh.c kexgex.c \
@


1.49.2.2
log
@upgrade to OpenSSH 4.2
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.51 2005/04/09 04:32:54 djm Exp $
d10 1
a10 1
	rsa.c ttymodes.c xmalloc.c atomicio.c \
@


1.48
log
@implement session multiplexing in the client (the server has supported this
since 2.0); ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.47 2004/05/09 01:21:50 djm Exp $
d11 1
a11 1
	key.c dispatch.c kex.c mac.c uuencode.c misc.c \
@


1.47
log
@kill it here too
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.46 2003/11/21 11:57:03 djm Exp $
d13 2
a14 1
	kexdhc.c kexgexc.c scard.c msg.c progressmeter.c dns.c
@


1.46
log
@unexpand and delete whitespace at EOL; ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.45 2003/09/23 20:17:11 markus Exp $
d9 1
a9 1
	hostfile.c log.c match.c mpaux.c nchan.c packet.c readpass.c \
@


1.46.2.1
log
@upgrade to OpenSSH 3.9
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.48 2004/06/13 15:03:02 djm Exp $
d9 1
a9 1
	hostfile.c log.c match.c nchan.c packet.c readpass.c \
d13 1
a13 2
	kexdhc.c kexgexc.c scard.c msg.c progressmeter.c dns.c \
	monitor_fdpass.c
@


1.46.2.2
log
@upgrade to OpenSSH 4.0
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.50 2004/12/22 02:13:19 djm Exp $
d7 1
a7 1
	cipher.c cipher-3des1.c cipher-bf1.c cipher-ctr.c \
d11 2
a12 2
	key.c dispatch.c kex.c mac.c uidswap.c uuencode.c misc.c \
	ssh-dss.c ssh-rsa.c dh.c kexdh.c kexgex.c \
@


1.45
log
@replace fatal_cleanup() and linked list of fatal callbacks with static
cleanup_exit() function.  re-refine cleanup_exit() where appropriate,
allocate sshd's authctxt eary to allow simpler cleanup in sshd.
tested by many, ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.44 2003/08/22 10:56:09 markus Exp $
d27 2
a28 2
SRCS+= gss-genr.c 
CFLAGS+= -DGSSAPI 
@


1.44
log
@support GSS API user authentication; patches from Simon Wilkinson,
stripped down and tested by Jakob and myself.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.43 2003/05/17 04:27:52 markus Exp $
d8 1
a8 1
	compat.c compress.c crc32.c deattack.c fatal.c \
@


1.44.2.1
log
@upgrade to OpenSSH 3.8
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.46 2003/11/21 11:57:03 djm Exp $
d8 1
a8 1
	cleanup.c compat.c compress.c crc32.c deattack.c fatal.c \
d27 2
a28 2
SRCS+= gss-genr.c
CFLAGS+= -DGSSAPI
@


1.44.2.2
log
@upgrade to OpenSSH 3.9
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.48 2004/06/13 15:03:02 djm Exp $
d9 1
a9 1
	hostfile.c log.c match.c nchan.c packet.c readpass.c \
d13 1
a13 2
	kexdhc.c kexgexc.c scard.c msg.c progressmeter.c dns.c \
	monitor_fdpass.c
@


1.43
log
@experimental support for aes-ctr modes from
http://www.ietf.org/internet-drafts/draft-ietf-secsh-newmodes-00.txt
ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.42 2003/05/15 03:08:29 markus Exp $
d26 3
@


1.42
log
@split out custom EVP ciphers
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.41 2003/05/14 18:16:21 jakob Exp $
d7 1
a7 1
	cipher.c cipher-3des1.c cipher-aes.c cipher-bf1.c  \
@


1.41
log
@add experimental support for verifying hos keys using DNS as described
in draft-ietf-secsh-dns-xx.txt. more information in README.dns.
ok markus@@ and henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.40 2003/04/09 08:24:24 hin Exp $
d7 2
a8 1
	cipher.c compat.c compress.c crc32.c deattack.c fatal.c \
@


1.40
log
@Disable Kerberos 4 support.

ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.39 2003/02/21 09:04:09 markus Exp $
d12 1
a12 1
	kexdhc.c kexgexc.c scard.c msg.c progressmeter.c
@


1.39
log
@move server only kex and monitor code to sshd.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38 2003/02/16 17:09:57 markus Exp $
a25 8

.if (${KERBEROS:L} == "yes")
CFLAGS+= -DKRB4 -I${DESTDIR}/usr/include/kerberosIV
.if (${AFS:L} == "yes")
CFLAGS+= -DAFS
SRCS+=  radix.c
.endif # AFS
.endif # KERBEROS
@


1.39.2.1
log
@upgrade to OpenSSH 3.7
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.44 2003/08/22 10:56:09 markus Exp $
d7 1
a7 2
	cipher.c cipher-3des1.c cipher-aes.c cipher-bf1.c cipher-ctr.c \
	compat.c compress.c crc32.c deattack.c fatal.c \
d12 1
a12 1
	kexdhc.c kexgexc.c scard.c msg.c progressmeter.c dns.c
d23 11
a33 6
#.if (${KERBEROS5:L} == "yes")
#CFLAGS+= -DKRB5 -I${DESTDIR}/usr/include/kerberosV
#
#SRCS+= gss-genr.c 
#CFLAGS+= -DGSSAPI 
#.endif # KERBEROS5
@


1.39.2.2
log
@upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.46 2003/11/21 11:57:03 djm Exp $
d8 1
a8 1
	cleanup.c compat.c compress.c crc32.c deattack.c fatal.c \
d27 2
a28 2
#SRCS+= gss-genr.c
#CFLAGS+= -DGSSAPI
@


1.38
log
@split kex into client and server code, no need to link
server code into the client; ok provos@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.37 2003/01/12 16:59:14 markus Exp $
d12 1
a12 2
	kexdhs.c kexdhc.c kexgexs.c kexgexc.c \
	scard.c monitor_wrap.c monitor_fdpass.c msg.c progressmeter.c
@


1.37
log
@move progressmeter.c to libssh; ok djm/fgs@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.36 2002/06/11 15:23:29 hin Exp $
d12 1
@


1.36
log
@Make sure kerberosV/kafs.h is picked up if kerberosIV/kafs.h is not removed.

ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.35 2002/06/11 04:14:26 markus Exp $
d12 1
a12 1
	scard.c monitor_wrap.c monitor_fdpass.c msg.c
@


1.36.2.1
log
@Update to OpenSSH 3.6
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.39 2003/02/21 09:04:09 markus Exp $
d12 1
a12 1
	kexdhc.c kexgexc.c scard.c msg.c progressmeter.c
@


1.36.2.2
log
@upgrade to OpenSSH 3.7
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.44 2003/08/22 10:56:09 markus Exp $
d7 1
a7 2
	cipher.c cipher-3des1.c cipher-aes.c cipher-bf1.c cipher-ctr.c \
	compat.c compress.c crc32.c deattack.c fatal.c \
d12 1
a12 1
	kexdhc.c kexgexc.c scard.c msg.c progressmeter.c dns.c
d23 11
a33 6
#.if (${KERBEROS5:L} == "yes")
#CFLAGS+= -DKRB5 -I${DESTDIR}/usr/include/kerberosV
#
#SRCS+= gss-genr.c 
#CFLAGS+= -DGSSAPI 
#.endif # KERBEROS5
@


1.35
log
@no longer use uidswap.[ch] from the ssh client
run less code with euid==0 if ssh is installed setuid root
just switch the euid, don't switch the complete set of groups
(this is only needed by sshd). ok provos@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.34 2002/05/23 19:24:31 markus Exp $
d23 4
a33 4

.if (${KERBEROS5:L} == "yes")
CFLAGS+= -DKRB5 -I${DESTDIR}/usr/include/kerberosV
.endif # KERBEROS5
@


1.34
log
@add /usr/libexec/ssh-keysign: a setuid helper program for hostbased authentication
in protocol v2 (needs to access the hostkeys).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.33 2002/03/18 17:50:31 provos Exp $
d9 1
a9 1
	rsa.c tildexpand.c ttymodes.c uidswap.c xmalloc.c atomicio.c \
@


1.33
log
@integrate privilege separated openssh; its turned off by default for now.
work done by me and markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.32 2002/03/08 01:53:56 itojun Exp $
d12 1
a12 1
	scard.c monitor_wrap.c monitor_fdpass.c
@


1.33.2.1
log
@Pull in OpenSSH-3.4
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.36 2002/06/11 15:23:29 hin Exp $
d9 1
a9 1
	rsa.c tildexpand.c ttymodes.c xmalloc.c atomicio.c \
d12 1
a12 1
	scard.c monitor_wrap.c monitor_fdpass.c msg.c
a22 4
.if (${KERBEROS5:L} == "yes")
CFLAGS+= -DKRB5 -I${DESTDIR}/usr/include/kerberosV
.endif # KERBEROS5

d30 4
@


1.33.2.2
log
@Merge OpenSSH 3.6.1
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.39 2003/02/21 09:04:09 markus Exp $
d12 1
a12 1
	kexdhc.c kexgexc.c scard.c msg.c progressmeter.c
@


1.32
log
@tabify
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2002/02/22 12:20:34 markus Exp $
d12 1
a12 1
	scard.c
@


1.31
log
@overwrite fatal() in ssh-keyscan.c; fixes pr 2354; ok provos@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2002/01/25 22:04:10 mickey Exp $
d6 1
a6 1
SRCS=   authfd.c authfile.c bufaux.c buffer.c canohost.c channels.c \
@


1.30
log
@do not build debug version either; markus@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2001/06/26 17:52:41 dugsong Exp $
d6 2
a7 2
SRCS=   authfd.c authfile.c bufaux.c buffer.c canohost.c \
	channels.c cipher.c compat.c compress.c crc32.c deattack.c \
@


1.29
log
@only build Kerberos v5 support with KERBEROS5=yes
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 2001/06/26 16:15:25 dugsong Exp $
d14 1
@


1.29.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2002/02/22 12:20:34 markus Exp $
d6 2
a7 2
SRCS=   authfd.c authfile.c bufaux.c buffer.c canohost.c channels.c \
	cipher.c compat.c compress.c crc32.c deattack.c fatal.c \
a13 1
DEBUGLIBS= no
@


1.29.2.2
log
@Update OpenSSH to version 3.2.2.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.33 2002/03/18 17:50:31 provos Exp $
d6 1
a6 1
SRCS=	authfd.c authfile.c bufaux.c buffer.c canohost.c channels.c \
d12 1
a12 1
	scard.c monitor_wrap.c monitor_fdpass.c
@


1.29.2.3
log
@Update OpenSSH 3.3, files missed in previous commit.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29.2.2 2002/05/17 00:03:30 miod Exp $
d9 1
a9 1
	rsa.c tildexpand.c ttymodes.c xmalloc.c atomicio.c \
d12 1
a12 1
	scard.c monitor_wrap.c monitor_fdpass.c msg.c
a22 4
.if (${KERBEROS5:L} == "yes")
CFLAGS+= -DKRB5 -I${DESTDIR}/usr/include/kerberosV
.endif # KERBEROS5

d30 4
@


1.28
log
@Kerberos v5 support for SSH1, mostly from Assar Westerlund <assar@@freebsd.org> and Bjorn Gronvall <bg@@sics.se>. markus@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 2001/06/26 05:52:54 markus Exp $
a23 1
CFLAGS+= -DKRB5 -I${DESTDIR}/usr/include/kerberosV
d29 4
@


1.27
log
@unbreak
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2001/06/26 05:33:35 markus Exp $
d24 1
@


1.26
log
@more smartcard support.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2001/06/24 05:35:34 markus Exp $
a28 4

.if (${SMARTCARD:L} == "yes")
CFLAGS+= -DSMARTCARD
.endif # SMARTCARD
@


1.25
log
@switch to readpassphrase(3)
2.7/8-stable needs readpassphrase.[ch] from libc
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2001/05/31 10:30:18 markus Exp $
d12 1
d29 4
@


1.24
log
@undo the .c file split, just merge the header and keep the cvs history
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2001/05/30 12:55:14 markus Exp $
d11 1
a11 1
	cli.c rijndael.c ssh-dss.c ssh-rsa.c dh.c kexdh.c kexgex.c \
@


1.23
log
@channel layer cleanup: merge header files and split .c files
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2001/04/03 19:53:30 markus Exp $
d7 2
a8 4
	channel.c channel-close.c channel-input.c channel-core.c \
	channel-tcpfwd.c channel-auth.c channel-x11.c \
	cipher.c compat.c compress.c crc32.c deattack.c \
	hostfile.c log.c match.c mpaux.c packet.c readpass.c \
@


1.22
log
@move kex to kex*.c, used dispatch_set() callbacks for kex. should
make rekeying easier.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2001/03/29 21:17:40 markus Exp $
d6 3
a8 1
SRCS=   authfd.c authfile.c bufaux.c buffer.c canohost.c channels.c \
d10 1
a10 1
	hostfile.c log.c match.c mpaux.c nchan.c packet.c readpass.c \
d13 1
a13 1
	cli.c rijndael.c ssh-dss.c ssh-rsa.c dh.c kexdh.c kexgex.c
@


1.22.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2001/06/26 17:52:41 dugsong Exp $
d6 2
a7 2
SRCS=   authfd.c authfile.c bufaux.c buffer.c canohost.c \
	channels.c cipher.c compat.c compress.c crc32.c deattack.c \
d11 1
a11 4
	rijndael.c ssh-dss.c ssh-rsa.c dh.c kexdh.c kexgex.c \
	scard.c

SRCS+=	readpassphrase.c
a27 4

.if (${KERBEROS5:L} == "yes")
CFLAGS+= -DKRB5 -I${DESTDIR}/usr/include/kerberosV
.endif # KERBEROS5
@


1.22.2.2
log
@Merge OpenSSH 3.0.1.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22.2.1 2001/09/27 19:03:56 jason Exp $
d13 2
@


1.22.2.3
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2002/02/22 12:20:34 markus Exp $
d6 2
a7 2
SRCS=   authfd.c authfile.c bufaux.c buffer.c canohost.c channels.c \
	cipher.c compat.c compress.c crc32.c deattack.c fatal.c \
a13 1
DEBUGLIBS= no
@


1.22.2.4
log
@Upgrade to OpenSSH 3.2.3.

Except for improbable compilation error fixes, this should be the last
commit made to the 2.9-STABLE branche. Have fun upgrading.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.33 2002/03/18 17:50:31 provos Exp $
d6 1
a6 1
SRCS=	authfd.c authfile.c bufaux.c buffer.c canohost.c channels.c \
d12 1
a12 1
	scard.c monitor_wrap.c monitor_fdpass.c
@


1.21
log
@prepare for rekeying: move DH code to dh.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2001/02/11 12:59:26 markus Exp $
d11 1
a11 1
	cli.c rijndael.c ssh-dss.c ssh-rsa.c dh.c
@


1.20
log
@1) clean up the MAC support for SSH-2
2) allow you to specify the MAC with 'ssh -m'
3) or the 'MACs' keyword in ssh(d)_config
4) add hmac-{md5,sha1}-96
	ok stevesk@@, provos@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2001/01/29 01:58:19 niklas Exp $
d11 1
a11 1
	cli.c rijndael.c ssh-dss.c ssh-rsa.c
@


1.19
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD$
d10 1
a10 1
	key.c dispatch.c kex.c hmac.c uuencode.c misc.c \
@


1.18
log
@split ssh.h and try to cleanup the #include mess. remove unnecessary #includes.
rename util.[ch] -> misc.[ch]
@
text
@d1 2
@


1.17
log
@add support for RSA to SSH2.  please test.

there are now 3 types of keys: RSA1 is used by ssh-1 only,
RSA and DSA are used by SSH2.

you can use 'ssh-keygen -t rsa -f ssh2_rsa_file' to generate RSA
keys for SSH2 and use the RSA keys for hostkeys or for user keys.

SSH2 RSA or DSA keys are added to .ssh/authorised_keys2 as before.

IdentityFile2, HostDsaKey and DSAAuthentication are obsolete.
you can use multiple IdentityFile and HostKey for all types of keys.

the option DSAAuthentication is replaced by PubkeyAuthetication.
@
text
@d8 1
a8 1
	key.c dispatch.c kex.c hmac.c uuencode.c util.c \
@


1.16
log
@rijndael/aes support
@
text
@d8 2
a9 2
	key.c dispatch.c dsa.c kex.c hmac.c uuencode.c util.c \
	cli.c rijndael.c
@


1.16.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@a0 2
#	$OpenBSD: Makefile,v 1.20 2001/02/11 12:59:26 markus Exp $

d8 2
a9 2
	key.c dispatch.c kex.c mac.c uuencode.c misc.c \
	cli.c rijndael.c ssh-dss.c ssh-rsa.c
@


1.16.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.16.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@@


1.16.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2001/04/03 19:53:30 markus Exp $
d11 1
a11 1
	cli.c rijndael.c ssh-dss.c ssh-rsa.c dh.c kexdh.c kexgex.c
@


1.16.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2001/06/26 17:52:41 dugsong Exp $
d6 2
a7 2
SRCS=   authfd.c authfile.c bufaux.c buffer.c canohost.c \
	channels.c cipher.c compat.c compress.c crc32.c deattack.c \
d11 1
a11 4
	rijndael.c ssh-dss.c ssh-rsa.c dh.c kexdh.c kexgex.c \
	scard.c

SRCS+=	readpassphrase.c
a27 4

.if (${KERBEROS5:L} == "yes")
CFLAGS+= -DKRB5 -I${DESTDIR}/usr/include/kerberosV
.endif # KERBEROS5
@


1.16.2.6
log
@Merge OpenSSH 3.1.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2002/02/22 12:20:34 markus Exp $
d6 2
a7 2
SRCS=   authfd.c authfile.c bufaux.c buffer.c canohost.c channels.c \
	cipher.c compat.c compress.c crc32.c deattack.c fatal.c \
a15 1
DEBUGLIBS= no
@


1.15
log
@add support for s/key (kbd-interactive) to ssh2, based on work by mkiernan@@avantgo.com and me
@
text
@d9 1
a9 1
	cli.c
@


1.14
log
@Boring...  Add :L modifier to all tweakable variables tests.

Closes PR 1246
@
text
@d8 2
a9 1
	key.c dispatch.c dsa.c kex.c hmac.c uuencode.c util.c
@


1.13
log
@add SSH2/DSA support to the agent and some other DSA related cleanups.
(note that we cannot talk to ssh.com's ssh2 agents)
@
text
@d18 1
a18 1
.if (${KERBEROS} == "yes")
d20 1
a20 1
.if (${AFS} == "yes")
@


1.12
log
@rename aux.c to util.c to help with cygwin port
@
text
@d5 1
a5 1
	cipher.c compat.c compress.c crc32.c deattack.c fingerprint.c \
@


1.11
log
@enable nonblocking IO for sshd w/ proto 1, too; split out common code
@
text
@d8 1
a8 1
	key.c dispatch.c dsa.c kex.c hmac.c uuencode.c aux.c
@


1.10
log
@add DSA pubkey auth and other SSH2 fixes.  use ssh-keygen -[xX]
for trading keys with the real and the original SSH, directly from the
people who invented the SSH protocol.
@
text
@d8 1
a8 1
	key.c dispatch.c dsa.c kex.c hmac.c uuencode.c
@


1.10.2.1
log
@update patch branch to OpenSSH-2.1.1
@
text
@d8 1
a8 1
	key.c dispatch.c dsa.c kex.c hmac.c uuencode.c aux.c
@


1.10.2.2
log
@Pull in OpenSSH-2.2.0 to 2.7 patch branch
@
text
@d5 1
a5 1
	cipher.c compat.c compress.c crc32.c deattack.c \
d8 1
a8 1
	key.c dispatch.c dsa.c kex.c hmac.c uuencode.c util.c
@


1.10.2.3
log
@openssh-2.3.0 for 2.7 patch branch
@
text
@d8 1
a8 2
	key.c dispatch.c dsa.c kex.c hmac.c uuencode.c util.c \
	cli.c rijndael.c
d18 1
a18 1
.if (${KERBEROS:L} == "yes")
d20 1
a20 1
.if (${AFS:L} == "yes")
@


1.10.2.4
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@a0 2
#	$OpenBSD: Makefile,v 1.20 2001/02/11 12:59:26 markus Exp $

d8 2
a9 2
	key.c dispatch.c kex.c mac.c uuencode.c misc.c \
	cli.c rijndael.c ssh-dss.c ssh-rsa.c
@


1.10.2.5
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@@


1.9
log
@DSA, keyexchange, algorithm agreement for ssh2
@
text
@d8 1
a8 1
	key.c dispatch.c dsa.c kex.c hmac.c
@


1.8
log
@replace big switch() with function tables (prepare for ssh2)
@
text
@d8 1
a8 1
	key.c dispatch.c
@


1.7
log
@initial support for DSA keys. ok deraadt@@, niels@@
@
text
@d8 1
a8 1
	key.c
@


1.6
log
@support DESTDIR include fetching; dm
@
text
@d7 2
a8 1
	rsa.c tildexpand.c ttymodes.c uidswap.c xmalloc.c atomicio.c
@


1.5
log
@atomicio() via lib
@
text
@d18 1
a18 1
CFLAGS+= -DKRB4 -I/usr/include/kerberosIV
@


1.4
log
@rsa key fingerprints, idea from Bjoern Groenvall <bg@@sics.se>
@
text
@d7 1
a7 1
	rsa.c tildexpand.c ttymodes.c uidswap.c xmalloc.c
@


1.3
log
@add LogLevel {QUIET, FATAL, ERROR, INFO, CHAT, DEBUG} to ssh/sshd,
obsoletes QuietMode and FascistLogging in sshd.
@
text
@d5 3
a7 3
	cipher.c compat.c compress.c crc32.c deattack.c hostfile.c \
	log.c match.c mpaux.c nchan.c packet.c readpass.c rsa.c \
	tildexpand.c ttymodes.c uidswap.c xmalloc.c
@


1.2
log
@do not -g -g
@
text
@d6 2
a7 2
	match.c mpaux.c nchan.c packet.c readpass.c rsa.c tildexpand.c \
	ttymodes.c uidswap.c xmalloc.c
@


1.1
log
@move common files to ./lib and link libssh.a, tested with and w/o obj
@
text
@a8 1
CFLAGS+= ${DEBUG}
@

