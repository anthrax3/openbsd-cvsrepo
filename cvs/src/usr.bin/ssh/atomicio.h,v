head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.28
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.26
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.22
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.20
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.14
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.18
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.16
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.12
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.10
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.8
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.6
	OPENBSD_5_0:1.11.0.4
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.2
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.10.0.18
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.14
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.16
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.12
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.10
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.8
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.6
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.2
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.6.0.4
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.2
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.8
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_8:1.2.0.2;
locks; strict;
comment	@ * @;


1.11
date	2010.09.22.22.58.51;	author djm;	state Exp;
branches;
next	1.10;

1.10
date	2006.08.03.03.34.41;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2006.07.30.20.15.19;	author stevesk;	state Exp;
branches;
next	1.8;

1.8
date	2006.04.16.00.52.55;	author djm;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.25.22.22.42;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2005.05.24.17.32.43;	author avsm;	state Exp;
branches
	1.6.2.1
	1.6.4.1;
next	1.5;

1.5
date	2003.06.28.16.23.06;	author deraadt;	state Exp;
branches
	1.5.6.1
	1.5.8.1;
next	1.4;

1.4
date	2001.06.26.06.32.46;	author itojun;	state Exp;
branches
	1.4.6.1
	1.4.8.1;
next	1.3;

1.3
date	2001.03.02.18.54.30;	author deraadt;	state Exp;
branches
	1.3.2.1
	1.3.4.1;
next	1.2;

1.2
date	2001.01.29.01.58.14;	author niklas;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.01.21.19.05.41;	author markus;	state Exp;
branches;
next	;

1.2.2.1
date	2001.02.16.20.12.51;	author jason;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.02.19.17.18.32;	author jason;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2001.03.21.19.46.22;	author jason;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2001.05.07.21.09.25;	author jason;	state Exp;
branches;
next	1.2.2.5;

1.2.2.5
date	2001.09.27.00.15.41;	author miod;	state Exp;
branches;
next	;

1.3.2.1
date	2001.03.12.15.44.06;	author jason;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2001.03.21.18.52.31;	author jason;	state Exp;
branches;
next	;

1.3.4.1
date	2001.09.27.19.03.54;	author jason;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2002.03.09.00.20.43;	author miod;	state Exp;
branches;
next	;

1.4.6.1
date	2003.09.16.21.20.24;	author brad;	state Exp;
branches;
next	;

1.4.8.1
date	2003.09.16.20.50.42;	author brad;	state Exp;
branches;
next	1.4.8.2;

1.4.8.2
date	2004.03.04.18.18.14;	author brad;	state Exp;
branches;
next	;

1.5.6.1
date	2005.09.02.03.44.59;	author brad;	state Exp;
branches;
next	;

1.5.8.1
date	2005.09.04.18.39.52;	author brad;	state Exp;
branches;
next	;

1.6.2.1
date	2006.10.06.03.19.32;	author brad;	state Exp;
branches;
next	;

1.6.4.1
date	2006.09.30.04.06.50;	author brad;	state Exp;
branches;
next	;


desc
@@


1.11
log
@add an option per-read/write callback to atomicio

factor out bandwidth limiting code from scp(1) into a generic bandwidth
limiter that can be attached using the atomicio callback mechanism

add a bandwidth limit option to sftp(1) using the above

"very nice" markus@@
@
text
@/* $OpenBSD: atomicio.h,v 1.10 2006/08/03 03:34:41 deraadt Exp $ */

/*
 * Copyright (c) 2006 Damien Miller.  All rights reserved.
 * Copyright (c) 1995,1999 Theo de Raadt.  All rights reserved.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _ATOMICIO_H
#define _ATOMICIO_H

/*
 * Ensure all of data on socket comes through. f==read || f==vwrite
 */
size_t
atomicio6(ssize_t (*f) (int, void *, size_t), int fd, void *_s, size_t n,
    int (*cb)(void *, size_t), void *);
size_t	atomicio(ssize_t (*)(int, void *, size_t), int, void *, size_t);

#define vwrite (ssize_t (*)(int, void *, size_t))write

/*
 * ensure all of data on socket comes through. f==readv || f==writev
 */
size_t
atomiciov6(ssize_t (*f) (int, const struct iovec *, int), int fd,
    const struct iovec *_iov, int iovcnt, int (*cb)(void *, size_t), void *);
size_t	atomiciov(ssize_t (*)(int, const struct iovec *, int),
    int, const struct iovec *, int);

#endif /* _ATOMICIO_H */
@


1.10
log
@almost entirely get rid of the culture of ".h files that include .h files"
ok djm, sort of ok stevesk
makes the pain stop in one easy step
@
text
@d1 1
a1 1
/* $OpenBSD: atomicio.h,v 1.9 2006/07/30 20:15:19 stevesk Exp $ */
d35 3
d45 3
@


1.9
log
@order includes to KNF
@
text
@d1 1
a1 1
/* $OpenBSD: atomicio.h,v 1.8 2006/04/16 00:52:55 djm Exp $ */
a30 5

#include <sys/types.h>
#include <sys/uio.h>

#include <unistd.h>
@


1.8
log
@introduce atomiciov() function that wraps readv/writev to retry
interrupted transfers like atomicio() does for read/write;
feedback deraadt@@ dtucker@@ stevesk@@ ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: atomicio.h,v 1.7 2006/03/25 22:22:42 djm Exp $ */
d33 2
a35 1
#include <sys/uio.h>
@


1.7
log
@standardise spacing in $OpenBSD$ tags; requested by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: atomicio.h,v 1.6 2005/05/24 17:32:43 avsm Exp $ */
d4 1
d29 7
d42 8
@


1.6
log
@Switch atomicio to use a simpler interface; it now returns a size_t
(containing number of bytes read/written), and indicates error by
returning 0.  EOF is signalled by errno==EPIPE.
Typical use now becomes:

if (atomicio(read, ..., len) != len)
        err(1,"read");

ok deraadt@@, cloder@@, djm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: atomicio.h,v 1.5 2003/06/28 16:23:06 deraadt Exp $	*/
@


1.6.2.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: atomicio.h,v 1.10 2006/08/03 03:34:41 deraadt Exp $ */
a3 1
 * Copyright (c) 2006 Damien Miller.  All rights reserved.
a27 3
#ifndef _ATOMICIO_H
#define _ATOMICIO_H

a33 8

/*
 * ensure all of data on socket comes through. f==readv || f==writev
 */
size_t	atomiciov(ssize_t (*)(int, const struct iovec *, int),
    int, const struct iovec *, int);

#endif /* _ATOMICIO_H */
@


1.6.4.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: atomicio.h,v 1.10 2006/08/03 03:34:41 deraadt Exp $ */
a3 1
 * Copyright (c) 2006 Damien Miller.  All rights reserved.
a27 3
#ifndef _ATOMICIO_H
#define _ATOMICIO_H

a33 8

/*
 * ensure all of data on socket comes through. f==readv || f==writev
 */
size_t	atomiciov(ssize_t (*)(int, const struct iovec *, int),
    int, const struct iovec *, int);

#endif /* _ATOMICIO_H */
@


1.5
log
@deal with typing of write vs read in atomicio
@
text
@d1 1
a1 1
/*	$OpenBSD: atomicio.h,v 1.4 2001/06/26 06:32:46 itojun Exp $	*/
d31 1
a31 1
ssize_t	atomicio(ssize_t (*)(int, void *, size_t), int, void *, size_t);
@


1.5.8.1
log
@upgrade to OpenSSH 4.2
@
text
@d1 1
a1 1
/*	$OpenBSD: atomicio.h,v 1.6 2005/05/24 17:32:43 avsm Exp $	*/
d31 1
a31 1
size_t	atomicio(ssize_t (*)(int, void *, size_t), int, void *, size_t);
@


1.5.6.1
log
@upgrade to OpenSSH 4.2
@
text
@d1 1
a1 1
/*	$OpenBSD: atomicio.h,v 1.6 2005/05/24 17:32:43 avsm Exp $	*/
d31 1
a31 1
size_t	atomicio(ssize_t (*)(int, void *, size_t), int, void *, size_t);
@


1.4
log
@prototype pedant.  not very creative...
- () -> (void)
- no variable names
@
text
@d1 1
a1 1
/*	$OpenBSD: atomicio.h,v 1.3 2001/03/02 18:54:30 deraadt Exp $	*/
d29 1
a29 1
 * Ensure all of data on socket comes through. f==read || f==write
d31 3
a33 1
ssize_t	atomicio(ssize_t (*)(), int, void *, size_t);
@


1.4.6.1
log
@upgrade to OpenSSH 3.7
@
text
@d1 1
a1 1
/*	$OpenBSD: atomicio.h,v 1.5 2003/06/28 16:23:06 deraadt Exp $	*/
d29 1
a29 1
 * Ensure all of data on socket comes through. f==read || f==vwrite
d31 1
a31 3
ssize_t	atomicio(ssize_t (*)(int, void *, size_t), int, void *, size_t);

#define vwrite (ssize_t (*)(int, void *, size_t))write
@


1.4.8.1
log
@upgrade to OpenSSH 3.7
@
text
@d1 1
a1 1
/*	$OpenBSD: atomicio.h,v 1.5 2003/06/28 16:23:06 deraadt Exp $	*/
d29 1
a29 1
 * Ensure all of data on socket comes through. f==read || f==vwrite
d31 1
a31 3
ssize_t	atomicio(ssize_t (*)(int, void *, size_t), int, void *, size_t);

#define vwrite (ssize_t (*)(int, void *, size_t))write
@


1.4.8.2
log
@upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8
@
text
@@


1.3
log
@make copyright lines the same format
@
text
@d1 1
a1 1
/*	$OpenBSD: atomicio.h,v 1.2 2001/01/29 01:58:14 niklas Exp $	*/
d31 1
a31 1
ssize_t	atomicio(ssize_t (*f)(), int fd, void *s, size_t n);
@


1.3.4.1
log
@Pull in OpenSSH-2.9.9
@
text
@d1 1
a1 1
/*	$OpenBSD: atomicio.h,v 1.4 2001/06/26 06:32:46 itojun Exp $	*/
d31 1
a31 1
ssize_t	atomicio(ssize_t (*)(), int, void *, size_t);
@


1.3.4.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@@


1.3.2.1
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@d4 1
a4 1
 * Copyright (c) 1995,1999 Theo de Raadt
@


1.3.2.2
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: atomicio.h,v 1.3 2001/03/02 18:54:30 deraadt Exp $	*/
d4 1
a4 1
 * Copyright (c) 1995,1999 Theo de Raadt.  All rights reserved.
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * Copyright (c) 1995,1999 Theo de Raadt
@


1.2.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d1 1
a1 1
/*	$OpenBSD: atomicio.h,v 1.2 2001/01/29 01:58:14 niklas Exp $	*/
@


1.2.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.2.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: atomicio.h,v 1.3 2001/03/02 18:54:30 deraadt Exp $	*/
d4 1
a4 1
 * Copyright (c) 1995,1999 Theo de Raadt.  All rights reserved.
@


1.2.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@@


1.2.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: atomicio.h,v 1.4 2001/06/26 06:32:46 itojun Exp $	*/
d31 1
a31 1
ssize_t	atomicio(ssize_t (*)(), int, void *, size_t);
@


1.1
log
@split ssh.h and try to cleanup the #include mess. remove unnecessary #includes.
rename util.[ch] -> misc.[ch]
@
text
@d1 2
@

