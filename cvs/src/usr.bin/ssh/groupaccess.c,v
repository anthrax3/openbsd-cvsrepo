head	1.16;
access;
symbols
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.10
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.8
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.4
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.2
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.14.0.8
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.20
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.18
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.16
	OPENBSD_5_0:1.13.0.14
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.12
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.10
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.6
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.8
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.4
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.2
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.12.0.8
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.6
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.2
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.4
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_8:1.3.0.2;
locks; strict;
comment	@ * @;


1.16
date	2015.05.04.06.10.48;	author djm;	state Exp;
branches;
next	1.15;
commitid	KfZDG8r2EByk0YBR;

1.15
date	2015.01.20.23.14.00;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	cBx23BaCk6gYBpRj;

1.14
date	2013.05.17.00.13.13;	author djm;	state Exp;
branches;
next	1.13;

1.13
date	2008.07.04.03.44.59;	author djm;	state Exp;
branches;
next	1.12;

1.12
date	2006.08.03.03.34.42;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2006.07.26.02.35.17;	author stevesk;	state Exp;
branches;
next	1.10;

1.10
date	2006.07.17.01.31.09;	author stevesk;	state Exp;
branches;
next	1.9;

1.9
date	2006.07.02.22.45.59;	author stevesk;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.25.13.17.01;	author djm;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.19.18.51.18;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.08.20.21.28;	author itojun;	state Exp;
branches
	1.6.10.1
	1.6.12.1;
next	1.5;

1.5
date	2002.03.04.17.27.39;	author stevesk;	state Exp;
branches
	1.5.4.1
	1.5.6.1;
next	1.4;

1.4
date	2001.06.26.17.27.23;	author markus;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2001.01.29.01.58.15;	author niklas;	state Exp;
branches
	1.3.2.1
	1.3.4.1
	1.3.6.1;
next	1.2;

1.2
date	2001.01.21.19.05.49;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2001.01.13.19.06.24;	author markus;	state Exp;
branches;
next	;

1.3.2.1
date	2001.02.16.20.13.02;	author jason;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2001.02.19.17.18.56;	author jason;	state Exp;
branches;
next	1.3.2.3;

1.3.2.3
date	2001.03.21.19.46.25;	author jason;	state Exp;
branches;
next	1.3.2.4;

1.3.2.4
date	2001.05.07.21.09.29;	author jason;	state Exp;
branches;
next	1.3.2.5;

1.3.2.5
date	2001.09.27.00.15.42;	author miod;	state Exp;
branches;
next	1.3.2.6;

1.3.2.6
date	2002.03.08.17.04.42;	author brad;	state Exp;
branches;
next	;

1.3.4.1
date	2001.03.12.15.44.10;	author jason;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	2001.03.21.18.52.46;	author jason;	state Exp;
branches;
next	;

1.3.6.1
date	2001.09.27.19.03.54;	author jason;	state Exp;
branches;
next	1.3.6.2;

1.3.6.2
date	2002.03.09.00.20.44;	author miod;	state Exp;
branches;
next	;

1.4.2.1
date	2002.03.07.17.37.46;	author jason;	state Exp;
branches;
next	;

1.5.4.1
date	2003.09.16.21.20.25;	author brad;	state Exp;
branches;
next	;

1.5.6.1
date	2003.09.16.20.50.43;	author brad;	state Exp;
branches;
next	1.5.6.2;

1.5.6.2
date	2004.03.04.18.18.15;	author brad;	state Exp;
branches;
next	;

1.6.10.1
date	2006.10.06.03.19.32;	author brad;	state Exp;
branches;
next	;

1.6.12.1
date	2006.09.30.04.06.50;	author brad;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Remove pattern length argument from match_pattern_list(),
we only ever use it for strlen(pattern).

Prompted by hanno AT hboeck.de pointing an out-of-bound read
error caused by an incorrect pattern length found using AFL
and his own tools.

ok markus@@
@
text
@/* $OpenBSD: groupaccess.c,v 1.15 2015/01/20 23:14:00 deraadt Exp $ */
/*
 * Copyright (c) 2001 Kevin Steves.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>

#include <grp.h>
#include <unistd.h>
#include <stdarg.h>
#include <stdlib.h>
#include <string.h>
#include <limits.h>

#include "xmalloc.h"
#include "groupaccess.h"
#include "match.h"
#include "log.h"

static int ngroups;
static char *groups_byname[NGROUPS_MAX + 1];	/* +1 for base/primary group */

/*
 * Initialize group access list for user with primary (base) and
 * supplementary groups.  Return the number of groups in the list.
 */
int
ga_init(const char *user, gid_t base)
{
	gid_t groups_bygid[NGROUPS_MAX + 1];
	int i, j;
	struct group *gr;

	if (ngroups > 0)
		ga_free();

	ngroups = sizeof(groups_bygid) / sizeof(gid_t);
	if (getgrouplist(user, base, groups_bygid, &ngroups) == -1)
		logit("getgrouplist: groups list too small");
	for (i = 0, j = 0; i < ngroups; i++)
		if ((gr = getgrgid(groups_bygid[i])) != NULL)
			groups_byname[j++] = xstrdup(gr->gr_name);
	return (ngroups = j);
}

/*
 * Return 1 if one of user's groups is contained in groups.
 * Return 0 otherwise.  Use match_pattern() for string comparison.
 */
int
ga_match(char * const *groups, int n)
{
	int i, j;

	for (i = 0; i < ngroups; i++)
		for (j = 0; j < n; j++)
			if (match_pattern(groups_byname[i], groups[j]))
				return 1;
	return 0;
}

/*
 * Return 1 if one of user's groups matches group_pattern list.
 * Return 0 on negated or no match.
 */
int
ga_match_pattern_list(const char *group_pattern)
{
	int i, found = 0;

	for (i = 0; i < ngroups; i++) {
		switch (match_pattern_list(groups_byname[i], group_pattern, 0)) {
		case -1:
			return 0;	/* Negated match wins */
		case 0:
			continue;
		case 1:
			found = 1;
		}
	}
	return found;
}

/*
 * Free memory allocated for group access list.
 */
void
ga_free(void)
{
	int i;

	if (ngroups > 0) {
		for (i = 0; i < ngroups; i++)
			free(groups_byname[i]);
		ngroups = 0;
	}
}
@


1.15
log
@Reduce use of <sys/param.h> and transition to <limits.h> throughout.
ok djm markus
@
text
@d1 1
a1 1
/* $OpenBSD: groupaccess.c,v 1.14 2013/05/17 00:13:13 djm Exp $ */
a89 1
	size_t len = strlen(group_pattern);
d92 1
a92 2
		switch (match_pattern_list(groups_byname[i],
		    group_pattern, len, 0)) {
@


1.14
log
@bye, bye xfree(); ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: groupaccess.c,v 1.13 2008/07/04 03:44:59 djm Exp $ */
a26 1
#include <sys/param.h>
d33 1
@


1.13
log
@support negation of groups in "Match group" block (bz#1315); ok dtucker@@
@
text
@d1 1
a1 1
/* $OpenBSD: groupaccess.c,v 1.12 2006/08/03 03:34:42 deraadt Exp $ */
d32 1
d116 1
a116 1
			xfree(groups_byname[i]);
@


1.12
log
@almost entirely get rid of the culture of ".h files that include .h files"
ok djm, sort of ok stevesk
makes the pain stop in one easy step
@
text
@d1 1
a1 1
/* $OpenBSD: groupaccess.c,v 1.11 2006/07/26 02:35:17 stevesk Exp $ */
d32 1
d79 24
@


1.11
log
@move #include <sys/param.h> out of includes.h
@
text
@d1 1
a1 1
/* $OpenBSD: groupaccess.c,v 1.10 2006/07/17 01:31:09 stevesk Exp $ */
a25 2
#include "includes.h"

d31 1
d33 1
a34 1
#include "xmalloc.h"
@


1.10
log
@move #include <unistd.h> out of includes.h
@
text
@d1 1
a1 1
/* $OpenBSD: groupaccess.c,v 1.9 2006/07/02 22:45:59 stevesk Exp $ */
d29 1
@


1.9
log
@move #include <grp.h> out of includes.h
@
text
@d1 1
a1 1
/* $OpenBSD: groupaccess.c,v 1.8 2006/03/25 13:17:01 djm Exp $ */
d31 1
@


1.8
log
@Put $OpenBSD$ tags back (as comments) to replace the RCSID()s that
Theo nuked - our scripts to sync -portable need them in the files
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d27 4
@


1.7
log
@RCSID() can die
@
text
@d1 1
@


1.6
log
@rename log() into logit() to avoid name conflict.  markus ok, from netbsd
@
text
@a25 1
RCSID("$OpenBSD: groupaccess.c,v 1.5 2002/03/04 17:27:39 stevesk Exp $");
@


1.6.10.1
log
@upgrade to OpenSSH 4.4
@
text
@a0 1
/* $OpenBSD: groupaccess.c,v 1.12 2006/08/03 03:34:42 deraadt Exp $ */
d25 2
a26 6
#include <sys/types.h>
#include <sys/param.h>

#include <grp.h>
#include <unistd.h>
#include <stdarg.h>
d28 1
a29 1
#include "groupaccess.h"
@


1.6.12.1
log
@upgrade to OpenSSH 4.4
@
text
@a0 1
/* $OpenBSD: groupaccess.c,v 1.12 2006/08/03 03:34:42 deraadt Exp $ */
d25 2
a26 6
#include <sys/types.h>
#include <sys/param.h>

#include <grp.h>
#include <unistd.h>
#include <stdarg.h>
d28 1
a29 1
#include "groupaccess.h"
@


1.5
log
@$OpenBSD$ and RCSID() cleanup: don't use RCSID() in .h files; add
missing RCSID() to .c files and remove dup /*$OpenBSD$*/ from .c
files.  ok markus@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD:$");
d52 1
a52 1
		log("getgrouplist: groups list too small");
@


1.5.4.1
log
@upgrade to OpenSSH 3.7
@
text
@d26 1
a26 1
RCSID("$OpenBSD: groupaccess.c,v 1.6 2003/04/08 20:21:28 itojun Exp $");
d52 1
a52 1
		logit("getgrouplist: groups list too small");
@


1.5.6.1
log
@upgrade to OpenSSH 3.7
@
text
@d26 1
a26 1
RCSID("$OpenBSD: groupaccess.c,v 1.6 2003/04/08 20:21:28 itojun Exp $");
d52 1
a52 1
		logit("getgrouplist: groups list too small");
@


1.5.6.2
log
@upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8
@
text
@@


1.4
log
@remove comments from .h, since they are cut&paste from the .c files
and out of sync
@
text
@a0 2
/*	$OpenBSD: groupaccess.c,v 1.3 2001/01/29 01:58:15 niklas Exp $	*/

d26 1
@


1.4.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@d1 2
a27 1
RCSID("$OpenBSD: groupaccess.c,v 1.5 2002/03/04 17:27:39 stevesk Exp $");
@


1.3
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 4
d60 4
d76 3
@


1.3.6.1
log
@Pull in OpenSSH-2.9.9
@
text
@d1 1
a1 1
/*	$OpenBSD: groupaccess.c,v 1.4 2001/06/26 17:27:23 markus Exp $	*/
a36 4
/*
 * Initialize group access list for user with primary (base) and
 * supplementary groups.  Return the number of groups in the list.
 */
a55 4
/*
 * Return 1 if one of user's groups is contained in groups.
 * Return 0 otherwise.  Use match_pattern() for string comparison.
 */
a67 3
/*
 * Free memory allocated for group access list.
 */
@


1.3.6.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@d1 2
a27 1
RCSID("$OpenBSD: groupaccess.c,v 1.5 2002/03/04 17:27:39 stevesk Exp $");
@


1.3.4.1
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@d1 1
a1 1
/*	$OpenBSD: groupaccess.c,v 1.3 2001/01/29 01:58:15 niklas Exp $	*/
@


1.3.4.2
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@@


1.3.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d1 1
a1 1
/*	$OpenBSD: groupaccess.c,v 1.3 2001/01/29 01:58:15 niklas Exp $	*/
@


1.3.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.3.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@@


1.3.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@@


1.3.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: groupaccess.c,v 1.4 2001/06/26 17:27:23 markus Exp $	*/
a36 4
/*
 * Initialize group access list for user with primary (base) and
 * supplementary groups.  Return the number of groups in the list.
 */
a55 4
/*
 * Return 1 if one of user's groups is contained in groups.
 * Return 0 otherwise.  Use match_pattern() for string comparison.
 */
a67 3
/*
 * Free memory allocated for group access list.
 */
@


1.3.2.6
log
@Merge OpenSSH 3.1.
@
text
@d1 2
a27 1
RCSID("$OpenBSD: groupaccess.c,v 1.5 2002/03/04 17:27:39 stevesk Exp $");
@


1.2
log
@split ssh.h and try to cleanup the #include mess. remove unnecessary #includes.
rename util.[ch] -> misc.[ch]
@
text
@d1 2
@


1.1
log
@support supplementary group in {Allow,Deny}Groups
from stevesk@@pobox.com
@
text
@a27 1
#include "ssh.h"
d30 1
@

