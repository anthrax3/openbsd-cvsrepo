head	1.27;
access;
symbols
	OPENBSD_6_2_BASE:1.27
	OPENBSD_6_1:1.27.0.12
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.27.0.10
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.27.0.6
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.27.0.4
	OPENBSD_5_8_BASE:1.27
	OPENBSD_5_7:1.27.0.2
	OPENBSD_5_7_BASE:1.27
	OPENBSD_5_6:1.26.0.6
	OPENBSD_5_6_BASE:1.26
	OPENBSD_5_5:1.26.0.4
	OPENBSD_5_5_BASE:1.26
	OPENBSD_5_4:1.24.0.2
	OPENBSD_5_4_BASE:1.24
	OPENBSD_5_3:1.23.0.6
	OPENBSD_5_3_BASE:1.23
	OPENBSD_5_2:1.23.0.4
	OPENBSD_5_2_BASE:1.23
	OPENBSD_5_1_BASE:1.23
	OPENBSD_5_1:1.23.0.2
	OPENBSD_5_0:1.22.0.22
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.22.0.20
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.22.0.18
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.14
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.16
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.12
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.22.0.10
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.22.0.8
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.22.0.6
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.22.0.2
	OPENBSD_4_1_BASE:1.22
	OPENBSD_4_0:1.22.0.4
	OPENBSD_4_0_BASE:1.22
	OPENBSD_3_9:1.17.0.2
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.15.0.8
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.6
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.4
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.2
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.13.0.6
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_7:1.2.0.2;
locks; strict;
comment	@ * @;


1.27
date	2015.01.14.13.54.13;	author djm;	state Exp;
branches;
next	1.26;
commitid	5mVYZPiIJUHzgjMn;

1.26
date	2013.11.08.11.15.19;	author dtucker;	state Exp;
branches;
next	1.25;

1.25
date	2013.11.08.00.39.15;	author djm;	state Exp;
branches;
next	1.24;

1.24
date	2013.05.17.00.13.14;	author djm;	state Exp;
branches
	1.24.2.1;
next	1.23;

1.23
date	2011.10.04.14.17.32;	author djm;	state Exp;
branches
	1.23.6.1;
next	1.22;

1.22
date	2006.08.03.03.34.42;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2006.07.22.20.48.23;	author stevesk;	state Exp;
branches;
next	1.20;

1.20
date	2006.07.10.16.01.57;	author stevesk;	state Exp;
branches;
next	1.19;

1.19
date	2006.03.25.13.17.02;	author djm;	state Exp;
branches;
next	1.18;

1.18
date	2006.03.19.18.51.18;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2006.02.20.17.19.54;	author stevesk;	state Exp;
branches
	1.17.2.1;
next	1.16;

1.16
date	2006.02.08.23.51.24;	author stevesk;	state Exp;
branches;
next	1.15;

1.15
date	2004.02.17.07.17.29;	author djm;	state Exp;
branches
	1.15.8.1;
next	1.14;

1.14
date	2004.02.17.05.39.51;	author djm;	state Exp;
branches;
next	1.13;

1.13
date	2002.09.11.22.41.50;	author djm;	state Exp;
branches
	1.13.4.1
	1.13.6.1;
next	1.12;

1.12
date	2002.07.04.04.15.33;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2002.06.30.21.59.45;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.13.00.59.23;	author djm;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2001.12.19.07.18.56;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2001.07.14.15.10.17;	author stevesk;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2001.07.05.11.43.33;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.23.15.12.20;	author itojun;	state Exp;
branches;
next	1.5;

1.5
date	2001.04.15.08.43.46;	author markus;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2001.04.05.10.42.53;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	2001.04.03.13.56.11;	author stevesk;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.16.08.16.18;	author djm;	state Exp;
branches
	1.2.2.1
	1.2.4.1;
next	1.1;

1.1
date	2001.03.13.22.42.54;	author djm;	state Exp;
branches;
next	;

1.2.2.1
date	2001.03.21.18.53.05;	author jason;	state Exp;
branches;
next	;

1.2.4.1
date	2001.03.21.19.46.28;	author jason;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2001.05.07.21.09.34;	author jason;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2001.09.27.00.15.42;	author miod;	state Exp;
branches;
next	1.2.4.4;

1.2.4.4
date	2002.03.08.17.04.43;	author brad;	state Exp;
branches;
next	;

1.5.2.1
date	2001.09.27.19.03.55;	author jason;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2002.03.09.00.20.45;	author miod;	state Exp;
branches;
next	;

1.8.2.1
date	2002.03.07.17.37.47;	author jason;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2002.10.11.14.53.07;	author miod;	state Exp;
branches;
next	;

1.10.2.1
date	2002.10.11.14.51.52;	author miod;	state Exp;
branches;
next	;

1.13.4.1
date	2004.03.04.18.18.16;	author brad;	state Exp;
branches;
next	;

1.13.6.1
date	2004.02.28.03.51.34;	author brad;	state Exp;
branches;
next	;

1.15.8.1
date	2006.10.06.03.19.33;	author brad;	state Exp;
branches;
next	;

1.17.2.1
date	2006.09.30.04.06.51;	author brad;	state Exp;
branches;
next	;

1.23.6.1
date	2013.11.08.05.52.21;	author djm;	state Exp;
branches;
next	;

1.24.2.1
date	2013.11.08.01.33.56;	author djm;	state Exp;
branches;
next	;


desc
@@


1.27
log
@update sftp client and server to new buffer API.
pretty much just mechanical changes; with & ok markus
@
text
@/* $OpenBSD: sftp-glob.c,v 1.26 2013/11/08 11:15:19 dtucker Exp $ */
/*
 * Copyright (c) 2001-2004 Damien Miller <djm@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <sys/stat.h>

#include <dirent.h>
#include <glob.h>
#include <stdlib.h>
#include <string.h>
#include <stdlib.h>

#include "xmalloc.h"
#include "sftp.h"
#include "sftp-common.h"
#include "sftp-client.h"

int remote_glob(struct sftp_conn *, const char *, int,
    int (*)(const char *, int), glob_t *);

struct SFTP_OPENDIR {
	SFTP_DIRENT **dir;
	int offset;
};

static struct {
	struct sftp_conn *conn;
} cur;

static void *
fudge_opendir(const char *path)
{
	struct SFTP_OPENDIR *r;

	r = xcalloc(1, sizeof(*r));

	if (do_readdir(cur.conn, (char *)path, &r->dir)) {
		free(r);
		return(NULL);
	}

	r->offset = 0;

	return((void *)r);
}

static struct dirent *
fudge_readdir(struct SFTP_OPENDIR *od)
{
	static struct dirent ret;

	if (od->dir[od->offset] == NULL)
		return(NULL);

	memset(&ret, 0, sizeof(ret));
	strlcpy(ret.d_name, od->dir[od->offset++]->filename,
	    sizeof(ret.d_name));

	return(&ret);
}

static void
fudge_closedir(struct SFTP_OPENDIR *od)
{
	free_sftp_dirents(od->dir);
	free(od);
}

static int
fudge_lstat(const char *path, struct stat *st)
{
	Attrib *a;

	if (!(a = do_lstat(cur.conn, (char *)path, 1)))
		return(-1);

	attrib_to_stat(a, st);

	return(0);
}

static int
fudge_stat(const char *path, struct stat *st)
{
	Attrib *a;

	if (!(a = do_stat(cur.conn, (char *)path, 1)))
		return(-1);

	attrib_to_stat(a, st);

	return(0);
}

int
remote_glob(struct sftp_conn *conn, const char *pattern, int flags,
    int (*errfunc)(const char *, int), glob_t *pglob)
{
	pglob->gl_opendir = fudge_opendir;
	pglob->gl_readdir = (struct dirent *(*)(void *))fudge_readdir;
	pglob->gl_closedir = (void (*)(void *))fudge_closedir;
	pglob->gl_lstat = fudge_lstat;
	pglob->gl_stat = fudge_stat;

	memset(&cur, 0, sizeof(cur));
	cur.conn = conn;

	return(glob(pattern, flags | GLOB_ALTDIRFUNC, errfunc, pglob));
}
@


1.26
log
@Include stdlib.h for free() as per the man page.
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-glob.c,v 1.25 2013/11/08 00:39:15 djm Exp $ */
d25 1
a28 1
#include "buffer.h"
@


1.25
log
@use calloc for all structure allocations; from markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-glob.c,v 1.24 2013/05/17 00:13:14 djm Exp $ */
d23 1
@


1.24
log
@bye, bye xfree(); ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-glob.c,v 1.23 2011/10/04 14:17:32 djm Exp $ */
d48 1
a48 1
	r = xmalloc(sizeof(*r));
@


1.24.2.1
log
@cherrypick commit:

date: 2013/11/08 00:39:15;  author: djm;  state: Exp;  lines: +2 -2;
use calloc for all structure allocations; from markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-glob.c,v 1.24 2013/05/17 00:13:14 djm Exp $ */
d48 1
a48 1
	r = xcalloc(1, sizeof(*r));
@


1.23
log
@silence error spam for "ls */foo" in directory with files; bz#1683
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-glob.c,v 1.22 2006/08/03 03:34:42 deraadt Exp $ */
d51 1
a51 1
		xfree(r);
d79 1
a79 1
	xfree(od);
@


1.23.6.1
log
@openssh-6.4 for the 5.3 branch; reminded by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-glob.c,v 1.24.2.1 2013/11/08 01:33:56 djm Exp $ */
d48 1
a48 1
	r = xcalloc(1, sizeof(*r));
@


1.22
log
@almost entirely get rid of the culture of ".h files that include .h files"
ok djm, sort of ok stevesk
makes the pain stop in one easy step
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-glob.c,v 1.21 2006/07/22 20:48:23 stevesk Exp $ */
d87 1
a87 1
	if (!(a = do_lstat(cur.conn, (char *)path, 0)))
d100 1
a100 1
	if (!(a = do_stat(cur.conn, (char *)path, 0)))
@


1.21
log
@move #include <string.h> out of includes.h
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-glob.c,v 1.20 2006/07/10 16:01:57 stevesk Exp $ */
a17 2
#include "includes.h"

a25 1

d27 1
@


1.20
log
@buffer.h only needed in sftp-common.h and remove some unneeded
user includes; ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-glob.c,v 1.19 2006/03/25 13:17:02 djm Exp $ */
d25 1
@


1.19
log
@Put $OpenBSD$ tags back (as comments) to replace the RCSID()s that
Theo nuked - our scripts to sync -portable need them in the files
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a25 2
#include "buffer.h"
#include "bufaux.h"
a26 1
#include "log.h"
@


1.18
log
@RCSID() can die
@
text
@d1 1
@


1.17
log
@move #include <sys/stat.h> out of includes.h; ok markus@@
@
text
@a17 1
RCSID("$OpenBSD: sftp-glob.c,v 1.16 2006/02/08 23:51:24 stevesk Exp $");
@


1.17.2.1
log
@upgrade to OpenSSH 4.4
@
text
@a0 1
/* $OpenBSD: sftp-glob.c,v 1.22 2006/08/03 03:34:42 deraadt Exp $ */
d17 3
a24 1
#include <string.h>
d26 2
d29 2
a31 1
#include "buffer.h"
@


1.16
log
@move #include <dirent.h> out of includes.h; ok markus@@
@
text
@d18 4
a21 1
RCSID("$OpenBSD: sftp-glob.c,v 1.15 2004/02/17 07:17:29 djm Exp $");
@


1.15
log
@Remove useless headers; ok deraadt@@
@
text
@d18 1
a18 1
RCSID("$OpenBSD: sftp-glob.c,v 1.14 2004/02/17 05:39:51 djm Exp $");
d20 1
@


1.15.8.1
log
@upgrade to OpenSSH 4.4
@
text
@a0 1
/* $OpenBSD: sftp-glob.c,v 1.22 2006/08/03 03:34:42 deraadt Exp $ */
d17 2
a18 2
#include <sys/types.h>
#include <sys/stat.h>
a19 1
#include <dirent.h>
a20 1
#include <string.h>
d22 2
d25 2
a27 1
#include "buffer.h"
@


1.14
log
@switch to license.template for code written by me (belated, I know...)
@
text
@d18 1
a18 1
RCSID("$OpenBSD: sftp-glob.c,v 1.13 2002/09/11 22:41:50 djm Exp $");
d30 3
a32 1
#include "sftp-glob.h"
@


1.13
log
@support for short/long listings and globbing in "ls"; ok markus@@
@
text
@d2 1
a2 1
 * Copyright (c) 2001,2002 Damien Miller.  All rights reserved.
d4 3
a6 8
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
d8 7
a14 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d18 1
a18 1
RCSID("$OpenBSD: sftp-glob.c,v 1.12 2002/07/04 04:15:33 deraadt Exp $");
@


1.13.4.1
log
@upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8
@
text
@d2 1
a2 1
 * Copyright (c) 2001-2004 Damien Miller <djm@@openbsd.org>
d4 8
a11 3
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
d13 10
a22 7
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.15 2004/02/17 07:17:29 djm Exp $");
d38 1
a38 3

int remote_glob(struct sftp_conn *, const char *, int,
    int (*)(const char *, int), glob_t *);
@


1.13.6.1
log
@upgrade to OpenSSH 3.8
@
text
@d2 1
a2 1
 * Copyright (c) 2001-2004 Damien Miller <djm@@openbsd.org>
d4 8
a11 3
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
d13 10
a22 7
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.15 2004/02/17 07:17:29 djm Exp $");
d38 1
a38 3

int remote_glob(struct sftp_conn *, const char *, int,
    int (*)(const char *, int), glob_t *);
@


1.12
log
@patch memory leaks; grendel@@zeitbombe.org
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.11 2002/06/30 21:59:45 deraadt Exp $");
a85 19
}

static void
attrib_to_stat(Attrib *a, struct stat *st)
{
	memset(st, 0, sizeof(*st));

	if (a->flags & SSH2_FILEXFER_ATTR_SIZE)
		st->st_size = a->size;
	if (a->flags & SSH2_FILEXFER_ATTR_UIDGID) {
		st->st_uid = a->uid;
		st->st_gid = a->gid;
	}
	if (a->flags & SSH2_FILEXFER_ATTR_PERMISSIONS)
		st->st_mode = a->perm;
	if (a->flags & SSH2_FILEXFER_ATTR_ACMODTIME) {
		st->st_atime = a->atime;
		st->st_mtime = a->mtime;
	}
@


1.11
log
@minor KNF
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.10 2002/02/13 00:59:23 djm Exp $");
d56 2
a57 1
	if (do_readdir(cur.conn, (char *)path, &r->dir))
d59 1
@


1.10
log
@API cleanup and backwards compat for filexfer v.0 servers; ok markus@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.9 2001/12/19 07:18:56 deraadt Exp $");
d56 1
a56 1
	if (do_readdir(cur.conn, (char*)path, &r->dir))
d61 1
a61 1
	return((void*)r);
d110 1
a110 1
	if (!(a = do_lstat(cur.conn, (char*)path, 0)))
d123 1
a123 1
	if (!(a = do_stat(cur.conn, (char*)path, 0)))
@


1.10.2.1
log
@Update to OpenSSH 3.5
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.13 2002/09/11 22:41:50 djm Exp $");
d56 1
a56 2
	if (do_readdir(cur.conn, (char *)path, &r->dir)) {
		xfree(r);
a57 1
	}
d61 1
a61 1
	return((void *)r);
d86 19
d110 1
a110 1
	if (!(a = do_lstat(cur.conn, (char *)path, 0)))
d123 1
a123 1
	if (!(a = do_stat(cur.conn, (char *)path, 0)))
@


1.9
log
@basic KNF done while i was looking for something else
@
text
@d2 1
a2 1
 * Copyright (c) 2001 Damien Miller.  All rights reserved.
d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.8 2001/07/14 15:10:17 stevesk Exp $");
d46 1
a46 2
	int fd_in;
	int fd_out;
d56 1
a56 1
	if (do_readdir(cur.fd_in, cur.fd_out, (char*)path, &r->dir))
d110 1
a110 1
	if (!(a = do_lstat(cur.fd_in, cur.fd_out, (char*)path, 0)))
d123 1
a123 1
	if (!(a = do_stat(cur.fd_in, cur.fd_out, (char*)path, 0)))
d132 1
a132 1
remote_glob(int fd_in, int fd_out, const char *pattern, int flags,
d142 1
a142 2
	cur.fd_in = fd_in;
	cur.fd_out = fd_out;
d144 1
a144 2
	return(glob(pattern, flags | GLOB_ALTDIRFUNC, errfunc,
	    pglob));
@


1.8
log
@delete spurious #includes; ok deraadt@@ markus@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.7 2001/07/05 11:43:33 espie Exp $");
d54 1
a54 1
	
d56 1
a56 1
	
d69 1
a69 1
	
d91 1
a91 1
	
d110 1
a110 1
	
d113 1
a113 1
	
d115 1
a115 1
	
d123 1
a123 1
	
d126 1
a126 1
	
d128 1
a128 1
	
d141 1
a141 1
	
@


1.8.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@d2 1
a2 1
 * Copyright (c) 2001,2002 Damien Miller.  All rights reserved.
d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.10 2002/02/13 00:59:23 djm Exp $");
d46 2
a47 1
	struct sftp_conn *conn;
d54 1
a54 1

d56 2
a57 2

	if (do_readdir(cur.conn, (char*)path, &r->dir))
d69 1
a69 1

d91 1
a91 1

d110 2
a111 2

	if (!(a = do_lstat(cur.conn, (char*)path, 0)))
d113 1
a113 1

d115 1
a115 1

d123 2
a124 2

	if (!(a = do_stat(cur.conn, (char*)path, 0)))
d126 1
a126 1

d128 1
a128 1

d133 1
a133 1
remote_glob(struct sftp_conn *conn, const char *pattern, int flags,
d141 1
a141 1

d143 2
a144 1
	cur.conn = conn;
d146 2
a147 1
	return(glob(pattern, flags | GLOB_ALTDIRFUNC, errfunc, pglob));
@


1.8.2.2
log
@Update to OpenSSH 3.5
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.13 2002/09/11 22:41:50 djm Exp $");
d56 1
a56 2
	if (do_readdir(cur.conn, (char *)path, &r->dir)) {
		xfree(r);
a57 1
	}
d61 1
a61 1
	return((void *)r);
d86 19
d110 1
a110 1
	if (!(a = do_lstat(cur.conn, (char *)path, 0)))
d123 1
a123 1
	if (!(a = do_stat(cur.conn, (char *)path, 0)))
@


1.7
log
@Directly cast to the right type. Ok markus@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.6 2001/06/23 15:12:20 itojun Exp $");
a29 1
#include "ssh.h"
a31 1
#include "getput.h"
a33 2
#include "atomicio.h"
#include "pathnames.h"
@


1.6
log
@more strict prototypes.  raise warning level in Makefile.inc.  markus ok'ed
TODO; cleanup headers
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.5 2001/04/15 08:43:46 markus Exp $");
d140 3
a142 3
	pglob->gl_opendir = (void*)fudge_opendir;
	pglob->gl_readdir = (void*)fudge_readdir;
	pglob->gl_closedir = (void*)fudge_closedir;
d150 1
a150 1
	return(glob(pattern, flags | GLOB_ALTDIRFUNC, (void*)errfunc,
@


1.5
log
@some unused variable and typos; from tomh@@po.crl.go.jp
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.4 2001/04/05 10:42:53 markus Exp $");
d54 2
a55 1
void *fudge_opendir(const char *path)
d69 2
a70 1
struct dirent *fudge_readdir(struct SFTP_OPENDIR *od)
d84 2
a85 1
void fudge_closedir(struct SFTP_OPENDIR *od)
d91 2
a92 1
void attrib_to_stat(Attrib *a, struct stat *st)
d110 2
a111 1
int fudge_lstat(const char *path, struct stat *st)
d123 2
a124 1
int fudge_stat(const char *path, struct stat *st)
@


1.5.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.8 2001/07/14 15:10:17 stevesk Exp $");
d30 1
d33 1
d36 2
d54 1
a54 2
static void *
fudge_opendir(const char *path)
d68 1
a68 2
static struct dirent *
fudge_readdir(struct SFTP_OPENDIR *od)
d82 1
a82 2
static void
fudge_closedir(struct SFTP_OPENDIR *od)
d88 1
a88 2
static void
attrib_to_stat(Attrib *a, struct stat *st)
d106 1
a106 2
static int
fudge_lstat(const char *path, struct stat *st)
d118 1
a118 2
static int
fudge_stat(const char *path, struct stat *st)
d134 3
a136 3
	pglob->gl_opendir = fudge_opendir;
	pglob->gl_readdir = (struct dirent *(*)(void *))fudge_readdir;
	pglob->gl_closedir = (void (*)(void *))fudge_closedir;
d144 1
a144 1
	return(glob(pattern, flags | GLOB_ALTDIRFUNC, errfunc,
@


1.5.2.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@d2 1
a2 1
 * Copyright (c) 2001,2002 Damien Miller.  All rights reserved.
d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.10 2002/02/13 00:59:23 djm Exp $");
d46 2
a47 1
	struct sftp_conn *conn;
d54 1
a54 1

d56 2
a57 2

	if (do_readdir(cur.conn, (char*)path, &r->dir))
d69 1
a69 1

d91 1
a91 1

d110 2
a111 2

	if (!(a = do_lstat(cur.conn, (char*)path, 0)))
d113 1
a113 1

d115 1
a115 1

d123 2
a124 2

	if (!(a = do_stat(cur.conn, (char*)path, 0)))
d126 1
a126 1

d128 1
a128 1

d133 1
a133 1
remote_glob(struct sftp_conn *conn, const char *pattern, int flags,
d141 1
a141 1

d143 2
a144 1
	cur.conn = conn;
d146 2
a147 1
	return(glob(pattern, flags | GLOB_ALTDIRFUNC, errfunc, pglob));
@


1.4
log
@fix whitespace: unexpand + trailing spaces.
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.3 2001/04/03 13:56:11 stevesk Exp $");
d132 1
a132 1
    const int (*errfunc)(const char *, int), glob_t *pglob)
@


1.3
log
@free() -> xfree()
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.2 2001/03/16 08:16:18 djm Exp $");
d76 1
a76 1
	strlcpy(ret.d_name, od->dir[od->offset++]->filename, 
d131 1
a131 1
remote_glob(int fd_in, int fd_out, const char *pattern, int flags, 
d144 1
a144 1
	return(glob(pattern, flags | GLOB_ALTDIRFUNC, (void*)errfunc, 
@


1.2
log
@Revise globbing for get/put to be more shell-like. In particular,
"get/put file* directory/" now works. ok markus@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.1 2001/03/13 22:42:54 djm Exp $");
d85 1
a85 1
	free(od);
@


1.2.4.1
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.2 2001/03/16 08:16:18 djm Exp $");
@


1.2.4.2
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.5 2001/04/15 08:43:46 markus Exp $");
d76 1
a76 1
	strlcpy(ret.d_name, od->dir[od->offset++]->filename,
d85 1
a85 1
	xfree(od);
d131 2
a132 2
remote_glob(int fd_in, int fd_out, const char *pattern, int flags,
    int (*errfunc)(const char *, int), glob_t *pglob)
d144 1
a144 1
	return(glob(pattern, flags | GLOB_ALTDIRFUNC, (void*)errfunc,
@


1.2.4.3
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.8 2001/07/14 15:10:17 stevesk Exp $");
d30 1
d33 1
d36 2
d54 1
a54 2
static void *
fudge_opendir(const char *path)
d68 1
a68 2
static struct dirent *
fudge_readdir(struct SFTP_OPENDIR *od)
d82 1
a82 2
static void
fudge_closedir(struct SFTP_OPENDIR *od)
d88 1
a88 2
static void
attrib_to_stat(Attrib *a, struct stat *st)
d106 1
a106 2
static int
fudge_lstat(const char *path, struct stat *st)
d118 1
a118 2
static int
fudge_stat(const char *path, struct stat *st)
d134 3
a136 3
	pglob->gl_opendir = fudge_opendir;
	pglob->gl_readdir = (struct dirent *(*)(void *))fudge_readdir;
	pglob->gl_closedir = (void (*)(void *))fudge_closedir;
d144 1
a144 1
	return(glob(pattern, flags | GLOB_ALTDIRFUNC, errfunc,
@


1.2.4.4
log
@Merge OpenSSH 3.1.
@
text
@d2 1
a2 1
 * Copyright (c) 2001,2002 Damien Miller.  All rights reserved.
d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.10 2002/02/13 00:59:23 djm Exp $");
d46 2
a47 1
	struct sftp_conn *conn;
d54 1
a54 1

d56 2
a57 2

	if (do_readdir(cur.conn, (char*)path, &r->dir))
d69 1
a69 1

d91 1
a91 1

d110 2
a111 2

	if (!(a = do_lstat(cur.conn, (char*)path, 0)))
d113 1
a113 1

d115 1
a115 1

d123 2
a124 2

	if (!(a = do_stat(cur.conn, (char*)path, 0)))
d126 1
a126 1

d128 1
a128 1

d133 1
a133 1
remote_glob(struct sftp_conn *conn, const char *pattern, int flags,
d141 1
a141 1

d143 2
a144 1
	cur.conn = conn;
d146 2
a147 1
	return(glob(pattern, flags | GLOB_ALTDIRFUNC, errfunc, pglob));
@


1.2.2.1
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@d26 1
a26 1
RCSID("$OpenBSD: sftp-glob.c,v 1.2 2001/03/16 08:16:18 djm Exp $");
@


1.1
log
@sftp client filename globbing for get, put, ch{mod,grp,own}. ok markus@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD$");
d110 1
a110 1
	if (!(a = do_lstat(cur.fd_in, cur.fd_out, (char*)path)))
d122 1
a122 1
	if (!(a = do_stat(cur.fd_in, cur.fd_out, (char*)path)))
@

