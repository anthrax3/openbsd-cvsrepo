head	1.63;
access;
symbols
	OPENBSD_6_2_BASE:1.63
	OPENBSD_6_1:1.61.0.4
	OPENBSD_6_1_BASE:1.61
	OPENBSD_6_0:1.57.0.4
	OPENBSD_6_0_BASE:1.57
	OPENBSD_5_9:1.54.0.8
	OPENBSD_5_9_BASE:1.54
	OPENBSD_5_8:1.54.0.6
	OPENBSD_5_8_BASE:1.54
	OPENBSD_5_7:1.54.0.2
	OPENBSD_5_7_BASE:1.54
	OPENBSD_5_6:1.54.0.4
	OPENBSD_5_6_BASE:1.54
	OPENBSD_5_5:1.50.0.4
	OPENBSD_5_5_BASE:1.50
	OPENBSD_5_4:1.49.0.2
	OPENBSD_5_4_BASE:1.49
	OPENBSD_5_3:1.48.0.8
	OPENBSD_5_3_BASE:1.48
	OPENBSD_5_2:1.48.0.6
	OPENBSD_5_2_BASE:1.48
	OPENBSD_5_1_BASE:1.48
	OPENBSD_5_1:1.48.0.4
	OPENBSD_5_0:1.48.0.2
	OPENBSD_5_0_BASE:1.48
	OPENBSD_4_9:1.47.0.2
	OPENBSD_4_9_BASE:1.47
	OPENBSD_4_8:1.43.0.2
	OPENBSD_4_8_BASE:1.43
	OPENBSD_4_7:1.41.0.2
	OPENBSD_4_7_BASE:1.41
	OPENBSD_4_6:1.38.0.8
	OPENBSD_4_6_BASE:1.38
	OPENBSD_4_5:1.38.0.4
	OPENBSD_4_5_BASE:1.38
	OPENBSD_4_4:1.38.0.2
	OPENBSD_4_4_BASE:1.38
	OPENBSD_4_3:1.37.0.2
	OPENBSD_4_3_BASE:1.37
	OPENBSD_4_2:1.36.0.6
	OPENBSD_4_2_BASE:1.36
	OPENBSD_4_1:1.36.0.2
	OPENBSD_4_1_BASE:1.36
	OPENBSD_4_0:1.36.0.4
	OPENBSD_4_0_BASE:1.36
	OPENBSD_3_9:1.29.0.2
	OPENBSD_3_9_BASE:1.29
	OPENBSD_3_8:1.25.0.2
	OPENBSD_3_8_BASE:1.25
	OPENBSD_3_7:1.21.0.2
	OPENBSD_3_7_BASE:1.21
	OPENBSD_3_6:1.17.0.2
	OPENBSD_3_6_BASE:1.17
	OPENBSD_3_5:1.12.0.10
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.8
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.12.0.6
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.4
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_8:1.2.0.2;
locks; strict;
comment	@ * @;


1.63
date	2017.08.18.05.48.04;	author djm;	state Exp;
branches;
next	1.62;
commitid	OEyipntxYT5rK2fi;

1.62
date	2017.08.18.05.36.45;	author djm;	state Exp;
branches;
next	1.61;
commitid	VAPvuXREJeMOB6MT;

1.61
date	2016.11.30.00.28.31;	author dtucker;	state Exp;
branches;
next	1.60;
commitid	cItLYZCoclAybZAb;

1.60
date	2016.10.23.22.04.05;	author dtucker;	state Exp;
branches;
next	1.59;
commitid	v1YsIAvaioz9gRAs;

1.59
date	2016.09.12.01.22.38;	author deraadt;	state Exp;
branches;
next	1.58;
commitid	ZllbGwdb0fOmLhjK;

1.58
date	2016.08.27.04.05.12;	author guenther;	state Exp;
branches;
next	1.57;
commitid	FVeW3PvJaZuUhcAj;

1.57
date	2016.07.15.00.24.30;	author djm;	state Exp;
branches;
next	1.56;
commitid	PAQPO8bvkonq4i81;

1.56
date	2016.04.06.06.42.17;	author djm;	state Exp;
branches;
next	1.55;
commitid	His5Dv7TLGORp9Rs;

1.55
date	2016.03.02.22.42.40;	author dtucker;	state Exp;
branches;
next	1.54;
commitid	kyzoHwOzjFTjav9W;

1.54
date	2014.07.15.15.54.14;	author millert;	state Exp;
branches;
next	1.53;
commitid	z7plx8Gkj6l2sxem;

1.53
date	2014.05.02.03.27.54;	author djm;	state Exp;
branches;
next	1.52;

1.52
date	2014.04.20.02.30.25;	author djm;	state Exp;
branches;
next	1.51;

1.51
date	2014.03.26.04.55.35;	author djm;	state Exp;
branches;
next	1.50;

1.50
date	2013.10.14.23.28.23;	author djm;	state Exp;
branches;
next	1.49;

1.49
date	2013.06.01.13.15.52;	author dtucker;	state Exp;
branches;
next	1.48;

1.48
date	2011.03.29.18.54.17;	author stevesk;	state Exp;
branches;
next	1.47;

1.47
date	2010.11.21.01.01.13;	author djm;	state Exp;
branches;
next	1.46;

1.46
date	2010.11.13.23.27.50;	author djm;	state Exp;
branches;
next	1.45;

1.45
date	2010.09.24.13.33.00;	author matthew;	state Exp;
branches;
next	1.44;

1.44
date	2010.09.22.22.58.51;	author djm;	state Exp;
branches;
next	1.43;

1.43
date	2010.07.13.23.13.16;	author djm;	state Exp;
branches;
next	1.42;

1.42
date	2010.07.13.11.52.06;	author djm;	state Exp;
branches;
next	1.41;

1.41
date	2010.01.09.23.04.13;	author dtucker;	state Exp;
branches;
next	1.40;

1.40
date	2009.12.25.19.40.21;	author stevesk;	state Exp;
branches;
next	1.39;

1.39
date	2009.10.28.16.38.18;	author reyk;	state Exp;
branches;
next	1.38;

1.38
date	2008.06.12.20.38.28;	author dtucker;	state Exp;
branches;
next	1.37;

1.37
date	2007.12.27.14.22.08;	author dtucker;	state Exp;
branches;
next	1.36;

1.36
date	2006.08.18.10.27.16;	author djm;	state Exp;
branches;
next	1.35;

1.35
date	2006.08.03.03.34.42;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2006.08.01.23.22.47;	author stevesk;	state Exp;
branches;
next	1.33;

1.33
date	2006.07.10.12.46.51;	author dtucker;	state Exp;
branches;
next	1.32;

1.32
date	2006.07.06.16.03.53;	author stevesk;	state Exp;
branches;
next	1.31;

1.31
date	2006.03.30.09.58.15;	author djm;	state Exp;
branches;
next	1.30;

1.30
date	2006.03.25.22.22.43;	author djm;	state Exp;
branches;
next	1.29;

1.29
date	2006.01.31.10.19.02;	author djm;	state Exp;
branches
	1.29.2.1;
next	1.28;

1.28
date	2005.12.08.18.34.11;	author reyk;	state Exp;
branches;
next	1.27;

1.27
date	2005.12.06.22.38.27;	author reyk;	state Exp;
branches;
next	1.26;

1.26
date	2005.09.13.23.40.07;	author djm;	state Exp;
branches;
next	1.25;

1.25
date	2005.07.14.04.00.43;	author dtucker;	state Exp;
branches
	1.25.2.1;
next	1.24;

1.24
date	2005.07.04.00.58.43;	author djm;	state Exp;
branches;
next	1.23;

1.23
date	2005.06.06.11.20.36;	author djm;	state Exp;
branches;
next	1.22;

1.22
date	2005.04.09.04.32.54;	author djm;	state Exp;
branches;
next	1.21;

1.21
date	2005.03.01.10.09.52;	author djm;	state Exp;
branches
	1.21.2.1;
next	1.20;

1.20
date	2004.12.11.01.48.56;	author dtucker;	state Exp;
branches;
next	1.19;

1.19
date	2004.12.06.11.41.03;	author dtucker;	state Exp;
branches;
next	1.18;

1.18
date	2004.10.29.22.53.56;	author djm;	state Exp;
branches;
next	1.17;

1.17
date	2004.08.11.21.43.05;	author avsm;	state Exp;
branches
	1.17.2.1;
next	1.16;

1.16
date	2004.06.17.15.10.14;	author djm;	state Exp;
branches;
next	1.15;

1.15
date	2004.06.14.01.44.39;	author djm;	state Exp;
branches;
next	1.14;

1.14
date	2004.05.08.00.21.31;	author djm;	state Exp;
branches;
next	1.13;

1.13
date	2004.05.08.00.01.37;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.19.10.49.35;	author markus;	state Exp;
branches
	1.12.8.1
	1.12.10.1;
next	1.11;

1.11
date	2002.01.24.21.09.25;	author stevesk;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.26.17.27.24;	author markus;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2001.06.26.06.32.56;	author itojun;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.19.19.43.57;	author stevesk;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.11.14.59.56;	author markus;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.08.19.45.24;	author mouring;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.03.23.09.52;	author mouring;	state Exp;
branches;
next	1.4;

1.4
date	2001.04.12.20.09.36;	author stevesk;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2001.02.22.21.59.44;	author markus;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2001.01.29.01.58.17;	author niklas;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.01.21.19.05.52;	author markus;	state Exp;
branches;
next	;

1.2.2.1
date	2001.02.16.20.13.07;	author jason;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.02.19.17.19.07;	author jason;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2001.03.21.19.46.26;	author jason;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2001.05.07.21.09.31;	author jason;	state Exp;
branches;
next	1.2.2.5;

1.2.2.5
date	2001.09.27.00.15.42;	author miod;	state Exp;
branches;
next	1.2.2.6;

1.2.2.6
date	2002.03.08.17.04.42;	author brad;	state Exp;
branches;
next	;

1.3.2.1
date	2001.03.12.15.44.12;	author jason;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2001.03.21.18.52.52;	author jason;	state Exp;
branches;
next	;

1.4.2.1
date	2001.09.27.19.03.54;	author jason;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2002.03.09.00.20.44;	author miod;	state Exp;
branches;
next	1.4.2.3;

1.4.2.3
date	2002.06.02.22.56.10;	author miod;	state Exp;
branches;
next	;

1.10.2.1
date	2002.03.07.17.37.46;	author jason;	state Exp;
branches;
next	1.10.2.2;

1.10.2.2
date	2002.05.17.00.03.23;	author miod;	state Exp;
branches;
next	;

1.12.8.1
date	2004.08.19.22.37.31;	author brad;	state Exp;
branches;
next	;

1.12.10.1
date	2004.08.19.04.13.26;	author brad;	state Exp;
branches;
next	1.12.10.2;

1.12.10.2
date	2005.03.10.17.15.04;	author brad;	state Exp;
branches;
next	;

1.17.2.1
date	2005.03.10.16.28.27;	author brad;	state Exp;
branches;
next	1.17.2.2;

1.17.2.2
date	2005.09.02.03.45.00;	author brad;	state Exp;
branches;
next	;

1.21.2.1
date	2005.09.04.18.40.02;	author brad;	state Exp;
branches;
next	1.21.2.2;

1.21.2.2
date	2006.02.03.02.53.44;	author brad;	state Exp;
branches;
next	;

1.25.2.1
date	2006.02.03.03.01.56;	author brad;	state Exp;
branches;
next	1.25.2.2;

1.25.2.2
date	2006.10.06.03.19.32;	author brad;	state Exp;
branches;
next	;

1.29.2.1
date	2006.09.30.04.06.50;	author brad;	state Exp;
branches;
next	;


desc
@@


1.63
log
@add a "quiet" flag to exited_cleanly() that supresses errors about
exit status (failure due to signal is still reported)
@
text
@/* $OpenBSD: misc.h,v 1.62 2017/08/18 05:36:45 djm Exp $ */

/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */

#ifndef _MISC_H
#define _MISC_H

#include <sys/time.h>
#include <sys/types.h>

/* Data structure for representing a forwarding request. */
struct Forward {
	char	 *listen_host;		/* Host (address) to listen on. */
	int	  listen_port;		/* Port to forward. */
	char	 *listen_path;		/* Path to bind domain socket. */
	char	 *connect_host;		/* Host to connect. */
	int	  connect_port;		/* Port to connect on connect_host. */
	char	 *connect_path;		/* Path to connect domain socket. */
	int	  allocated_port;	/* Dynamically allocated listen port */
	int	  handle;		/* Handle for dynamic listen ports */
};

int forward_equals(const struct Forward *, const struct Forward *);
int bind_permitted(int, uid_t);
int daemonized(void);

/* Common server and client forwarding options. */
struct ForwardOptions {
	int	 gateway_ports; /* Allow remote connects to forwarded ports. */
	mode_t	 streamlocal_bind_mask; /* umask for streamlocal binds */
	int	 streamlocal_bind_unlink; /* unlink socket before bind */
};

/* misc.c */

char	*chop(char *);
char	*strdelim(char **);
int	 set_nonblock(int);
int	 unset_nonblock(int);
void	 set_nodelay(int);
int	 a2port(const char *);
int	 a2tun(const char *, int *);
char	*put_host_port(const char *, u_short);
char	*hpdelim(char **);
char	*cleanhostname(char *);
char	*colon(char *);
int	 parse_user_host_port(const char *, char **, char **, int *);
long	 convtime(const char *);
char	*tilde_expand_filename(const char *, uid_t);
char	*percent_expand(const char *, ...) __attribute__((__sentinel__));
char	*tohex(const void *, size_t);
void	 sanitise_stdfd(void);
void	 ms_subtract_diff(struct timeval *, int *);
void	 ms_to_timeval(struct timeval *, int);
time_t	 monotime(void);
double	 monotime_double(void);
void	 lowercase(char *s);
int	 unix_listener(const char *, int, int);

struct passwd *pwcopy(struct passwd *);
const char *ssh_gai_strerror(int);

typedef struct arglist arglist;
struct arglist {
	char    **list;
	u_int   num;
	u_int   nalloc;
};
void	 addargs(arglist *, char *, ...)
	     __attribute__((format(printf, 2, 3)));
void	 replacearg(arglist *, u_int, char *, ...)
	     __attribute__((format(printf, 3, 4)));
void	 freeargs(arglist *);

int	 tun_open(int, int);

/* Common definitions for ssh tunnel device forwarding */
#define SSH_TUNMODE_NO		0x00
#define SSH_TUNMODE_POINTOPOINT	0x01
#define SSH_TUNMODE_ETHERNET	0x02
#define SSH_TUNMODE_DEFAULT	SSH_TUNMODE_POINTOPOINT
#define SSH_TUNMODE_YES		(SSH_TUNMODE_POINTOPOINT|SSH_TUNMODE_ETHERNET)

#define SSH_TUNID_ANY		0x7fffffff
#define SSH_TUNID_ERR		(SSH_TUNID_ANY - 1)
#define SSH_TUNID_MAX		(SSH_TUNID_ANY - 2)

/* Fake port to indicate that host field is really a path. */
#define PORT_STREAMLOCAL	-2

/* Functions to extract or store big-endian words of various sizes */
u_int64_t	get_u64(const void *)
    __attribute__((__bounded__( __minbytes__, 1, 8)));
u_int32_t	get_u32(const void *)
    __attribute__((__bounded__( __minbytes__, 1, 4)));
u_int16_t	get_u16(const void *)
    __attribute__((__bounded__( __minbytes__, 1, 2)));
void		put_u64(void *, u_int64_t)
    __attribute__((__bounded__( __minbytes__, 1, 8)));
void		put_u32(void *, u_int32_t)
    __attribute__((__bounded__( __minbytes__, 1, 4)));
void		put_u16(void *, u_int16_t)
    __attribute__((__bounded__( __minbytes__, 1, 2)));

/* Little-endian store/load, used by umac.c */
u_int32_t	get_u32_le(const void *)
    __attribute__((__bounded__(__minbytes__, 1, 4)));
void		put_u32_le(void *, u_int32_t)
    __attribute__((__bounded__(__minbytes__, 1, 4)));

struct bwlimit {
	size_t buflen;
	u_int64_t rate, thresh, lamt;
	struct timeval bwstart, bwend;
};

void bandwidth_limit_init(struct bwlimit *, u_int64_t, size_t);
void bandwidth_limit(struct bwlimit *, size_t);

int parse_ipqos(const char *);
const char *iptos2str(int);
void mktemp_proto(char *, size_t);

void	 child_set_env(char ***envp, u_int *envsizep, const char *name,
	     const char *value);

int	 argv_split(const char *, int *, char ***);
char	*argv_assemble(int, char **argv);
int	 exited_cleanly(pid_t, const char *, const char *, int);

#define SSH_SUBPROCESS_STDOUT_DISCARD	(1)	/* Discard stdout */
#define SSH_SUBPROCESS_STDOUT_CAPTURE	(1<<1)	/* Redirect stdout */
#define SSH_SUBPROCESS_STDERR_DISCARD	(1<<2)	/* Discard stderr */
pid_t	 subprocess(const char *, struct passwd *,
    const char *, int, char **, FILE **, u_int flags);

struct stat;
int	 safe_path(const char *, struct stat *, const char *, uid_t,
	     char *, size_t);
int	 safe_path_fd(int, const char *, struct passwd *,
	     char *err, size_t errlen);

/* readpass.c */

#define RP_ECHO			0x0001
#define RP_ALLOW_STDIN		0x0002
#define RP_ALLOW_EOF		0x0004
#define RP_USE_ASKPASS		0x0008

char	*read_passphrase(const char *, int);
int	 ask_permission(const char *, ...) __attribute__((format(printf, 1, 2)));
int	 read_keyfile_line(FILE *, const char *, char *, size_t, u_long *);

#define MINIMUM(a, b)	(((a) < (b)) ? (a) : (b))
#define MAXIMUM(a, b)	(((a) > (b)) ? (a) : (b))
#define ROUNDUP(x, y)   ((((x)+((y)-1))/(y))*(y))

#endif /* _MISC_H */
@


1.62
log
@Move several subprocess-related functions from various locations to
misc.c. Extend subprocess() to offer a little more control over stdio
disposition.

feedback & ok dtucker@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.61 2016/11/30 00:28:31 dtucker Exp $ */
d139 1
a139 1
int	 exited_cleanly(pid_t, const char *, const char *);
@


1.61
log
@On startup, check to see if sshd is already daemonized and if so,
skip the call to daemon() and do not rewrite the PidFile.  This
means that when sshd re-execs itself on SIGHUP the process ID will
no longer change.  Should address bz#2641.  ok djm@@ markus@@.
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.60 2016/10/23 22:04:05 dtucker Exp $ */
d19 1
d133 19
@


1.60
log
@Factor out "can bind to low ports" check into its own function.  This will make
it easier for Portable to support platforms with permissions models other than
uid==0 (eg bz#2625).  ok djm@@, "doesn't offend me too much" deraadt@@.
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.59 2016/09/12 01:22:38 deraadt Exp $ */
d34 1
@


1.59
log
@Add MAXIMUM(), MINIMUM(), and ROUNDUP() to misc.h, then use those definitions
rather than pulling <sys/param.h> and unknown namespace pollution.
ok djm markus dtucker
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.58 2016/08/27 04:05:12 guenther Exp $ */
d33 1
@


1.58
log
@Pull in <sys/time.h> for struct timeval

ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.57 2016/07/15 00:24:30 djm Exp $ */
d141 4
@


1.57
log
@Add a ProxyJump ssh_config(5) option and corresponding -J ssh(1)
command-line flag to allow simplified indirection through a
SSH bastion or "jump host".

These options construct a proxy command that connects to the
specified jump host(s) (more than one may be specified) and uses
port-forwarding to establish a connection to the next destination.

This codifies the safest way of indirecting connections through SSH
servers and makes it easy to use.

ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.56 2016/04/06 06:42:17 djm Exp $ */
d17 2
@


1.56
log
@don't record duplicate LocalForward and RemoteForward entries;
fixes failure with ExitOnForwardFailure+hostname canonicalisation
where the same forwards are added on the second pass through
the configuration file. bz#2562; ok dtucker@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.55 2016/03/02 22:42:40 dtucker Exp $ */
d52 1
@


1.55
log
@Improve precision of progressmeter for sftp and scp by storing sub-second
timestamps.  Pointed out by mmcc@@, ok deraadt@@ markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.54 2014/07/15 15:54:14 millert Exp $ */
d29 2
@


1.54
log
@Add support for Unix domain socket forwarding.  A remote TCP port
may be forwarded to a local Unix domain socket and vice versa or
both ends may be a Unix domain socket.  This is a reimplementation
of the streamlocal patches by William Ahern from:
    http://www.25thandclement.com/~william/projects/streamlocal.html
OK djm@@ markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.53 2014/05/02 03:27:54 djm Exp $ */
d58 1
@


1.53
log
@revert __bounded change; it causes way more problems for portable than
it solves; pointed out by dtucker@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.50 2013/10/14 23:28:23 djm Exp $ */
d18 19
d59 1
d88 3
@


1.52
log
@use get/put_u32 to load values rather than *((UINT32 *)p) that breaks on
strict-alignment architectures; reported by and ok stsp@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.51 2014/03/26 04:55:35 djm Exp $ */
d71 1
a71 1
    __bounded(( __minbytes__, 1, 8));
d73 1
a73 1
    __bounded(( __minbytes__, 1, 4));
d75 1
a75 1
    __bounded(( __minbytes__, 1, 2));
d77 1
a77 1
    __bounded(( __minbytes__, 1, 8));
d79 1
a79 1
    __bounded(( __minbytes__, 1, 4));
d81 1
a81 1
    __bounded(( __minbytes__, 1, 2));
d85 1
a85 1
    __bounded(( __minbytes__, 1, 4));
d87 1
a87 1
    __bounded(( __minbytes__, 1, 4));
@


1.51
log
@use __bounded(...) attribute recently added to sys/cdefs.h instead of
longform __attribute__(__bounded(...));

for brevity and a warning free compilation with llvm/clan
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.50 2013/10/14 23:28:23 djm Exp $ */
d82 6
@


1.50
log
@refactor client config code a little:

add multistate option partsing to readconf.c, similar to servconf.c's
existing code.

move checking of options that accept "none" as an argument to readconf.c

add a lowercase() function and use it instead of explicit tolower() in
loops

part of a larger diff that was ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.49 2013/06/01 13:15:52 dtucker Exp $ */
d71 1
a71 1
    __attribute__((__bounded__( __minbytes__, 1, 8)));
d73 1
a73 1
    __attribute__((__bounded__( __minbytes__, 1, 4)));
d75 1
a75 1
    __attribute__((__bounded__( __minbytes__, 1, 2)));
d77 1
a77 1
    __attribute__((__bounded__( __minbytes__, 1, 8)));
d79 1
a79 1
    __attribute__((__bounded__( __minbytes__, 1, 4)));
d81 1
a81 1
    __attribute__((__bounded__( __minbytes__, 1, 2)));
@


1.49
log
@Use clock_gettime(CLOCK_MONOTONIC ...) for ssh timers so that things like
keepalives and rekeying will work properly over clock steps.  Suggested by
markus@@, "looks good" djm@@.
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.48 2011/03/29 18:54:17 stevesk Exp $ */
d39 1
@


1.48
log
@print ipqos friendly string for sshd -T; ok markus

# sshd -Tf sshd_config|grep ipqos
ipqos lowdelay throughput
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.47 2010/11/21 01:01:13 djm Exp $ */
d38 1
@


1.47
log
@honour $TMPDIR for client xauth and ssh-agent temporary directories;
feedback and ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.46 2010/11/13 23:27:50 djm Exp $ */
d91 1
@


1.46
log
@allow ssh and sshd to set arbitrary TOS/DSCP/QoS values instead of
hardcoding lowdelay/throughput.

bz#1733 patch from philipp AT redfish-solutions.com; ok markus@@ deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.45 2010/09/24 13:33:00 matthew Exp $ */
d91 1
@


1.45
log
@Add timingsafe_bcmp(3) to libc, mention that it's already in the
kernel in kern(9), and remove it from OpenSSH.

ok deraadt@@, djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.44 2010/09/22 22:58:51 djm Exp $ */
d90 1
@


1.44
log
@add an option per-read/write callback to atomicio

factor out bandwidth limiting code from scp(1) into a generic bandwidth
limiter that can be attached using the atomicio callback mechanism

add a bandwidth limit option to sftp(1) using the above

"very nice" markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.43 2010/07/13 23:13:16 djm Exp $ */
a37 1
int	 timingsafe_bcmp(const void *, const void *, size_t);
@


1.43
log
@s/timing_safe_cmp/timingsafe_bcmp/g
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.42 2010/07/13 11:52:06 djm Exp $ */
d81 9
@


1.42
log
@implement a timing_safe_cmp() function to compare memory without leaking
timing information by short-circuiting like memcmp() and use it for
some of the more sensitive comparisons (though nothing high-value was
readily attackable anyway); "looks ok" markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.41 2010/01/09 23:04:13 dtucker Exp $ */
d38 1
a38 1
int	 timing_safe_cmp(const void *, const void *, size_t);
@


1.41
log
@Remove RoutingDomain from ssh since it's now not needed.  It can be replaced
with "route exec" or "nc -V" as a proxycommand.  "route exec" also ensures
that trafic such as DNS lookups stays withing the specified routingdomain.

For example (from reyk):
# route -T 2 exec /usr/sbin/sshd
or inherited from the parent process
$ route -T 2 exec sh
$ ssh 10.1.2.3

ok deraadt@@ markus@@ stevesk@@ reyk@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.38 2008/06/12 20:38:28 dtucker Exp $ */
d38 1
@


1.40
log
@validate routing domain is in range 0-RT_TABLEID_MAX.
'Looks right' deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.39 2009/10/28 16:38:18 reyk Exp $ */
a25 1
int	 a2rdomain(const char *);
a54 2

int	 socket_rdomain(int, int, int, int);
@


1.39
log
@Allow to set the rdomain in ssh/sftp/scp/sshd and ssh-keyscan.

ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.38 2008/06/12 20:38:28 dtucker Exp $ */
d26 1
@


1.38
log
@Make keepalive timeouts apply while waiting for a packet, particularly during
key renegotiation (bz #1363).  With djm and Matt Day, ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.37 2007/12/27 14:22:08 dtucker Exp $ */
d55 2
@


1.37
log
@Add a small helper function to consistently handle the EAI_SYSTEM error
code of getaddrinfo.  Prompted by vgiffin at apple com via bz #1417.
ok markus@@ stevesk@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.36 2006/08/18 10:27:16 djm Exp $ */
d36 2
@


1.36
log
@reorder so prototypes are sorted by the files they refer to; no
binary change
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.35 2006/08/03 03:34:42 deraadt Exp $ */
d38 1
@


1.35
log
@almost entirely get rid of the culture of ".h files that include .h files"
ok djm, sort of ok stevesk
makes the pain stop in one easy step
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.34 2006/08/01 23:22:47 stevesk Exp $ */
a50 11
/* readpass.c */

#define RP_ECHO			0x0001
#define RP_ALLOW_STDIN		0x0002
#define RP_ALLOW_EOF		0x0004
#define RP_USE_ASKPASS		0x0008

char	*read_passphrase(const char *, int);
int	 ask_permission(const char *, ...) __attribute__((format(printf, 1, 2)));
int	 read_keyfile_line(FILE *, const char *, char *, size_t, u_long *);

d78 12
a90 1

@


1.34
log
@move #include <stdio.h> out of includes.h
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.33 2006/07/10 12:46:51 dtucker Exp $ */
a16 5

#include <sys/types.h>

#include <pwd.h>
#include <stdio.h>
@


1.33
log
@Add port identifier to known_hosts for non-default ports, based originally
on a patch from Devin Nate in bz#910.

For any connection using the default port or using a HostKeyAlias the
format is unchanged, otherwise the host name or address is enclosed
within square brackets in the same format as sshd's ListenAddress.

Tested by many, ok markus@@.
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.32 2006/07/06 16:03:53 stevesk Exp $ */
d21 1
@


1.32
log
@move #include <pwd.h> out of includes.h; ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.31 2006/03/30 09:58:15 djm Exp $ */
d31 1
@


1.31
log
@replace {GET,PUT}_XXBIT macros with functionally similar functions,
silencing a heap of lint warnings. also allows them to use
__bounded__ checking which can't be applied to macros; requested
by and feedback from deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.30 2006/03/25 22:22:43 djm Exp $ */
d17 4
@


1.30
log
@standardise spacing in $OpenBSD$ tags; requested by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.29 2006/01/31 10:19:02 djm Exp $ */
d15 3
d33 1
a33 1
char	*tohex(const u_char *, u_int);
d73 17
@


1.29
log
@fix local arbitrary command execution vulnerability on local/local and
remote/remote copies (CVE-2006-0225, bz #1094), patch by
t8m AT centrum.cz, polished by dtucker@@ and myself; ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.28 2005/12/08 18:34:11 reyk Exp $	*/
@


1.29.2.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.36 2006/08/18 10:27:16 djm Exp $ */
a14 3
#ifndef _MISC_H
#define _MISC_H

a23 1
char	*put_host_port(const char *, u_short);
d30 1
a30 1
char	*tohex(const void *, size_t);
d47 11
a69 28

/* Functions to extract or store big-endian words of various sizes */
u_int64_t	get_u64(const void *)
    __attribute__((__bounded__( __minbytes__, 1, 8)));
u_int32_t	get_u32(const void *)
    __attribute__((__bounded__( __minbytes__, 1, 4)));
u_int16_t	get_u16(const void *)
    __attribute__((__bounded__( __minbytes__, 1, 2)));
void		put_u64(void *, u_int64_t)
    __attribute__((__bounded__( __minbytes__, 1, 8)));
void		put_u32(void *, u_int32_t)
    __attribute__((__bounded__( __minbytes__, 1, 4)));
void		put_u16(void *, u_int16_t)
    __attribute__((__bounded__( __minbytes__, 1, 2)));


/* readpass.c */

#define RP_ECHO			0x0001
#define RP_ALLOW_STDIN		0x0002
#define RP_ALLOW_EOF		0x0004
#define RP_USE_ASKPASS		0x0008

char	*read_passphrase(const char *, int);
int	 ask_permission(const char *, ...) __attribute__((format(printf, 1, 2)));
int	 read_keyfile_line(FILE *, const char *, char *, size_t, u_long *);

#endif /* _MISC_H */
@


1.28
log
@two changes to the new ssh tunnel support. this breaks compatibility
with the initial commit but is required for a portable approach.
- make the tunnel id u_int and platform friendly, use predefined types.
- support configuration of layer 2 (ethernet) or layer 3
(point-to-point, default) modes. configuration is done using the
Tunnel (yes|point-to-point|ethernet|no) option is ssh_config(5) and
restricted by the PermitTunnel (yes|point-to-point|ethernet|no) option
in sshd_config(5).

ok djm@@, man page bits by jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.27 2005/12/06 22:38:27 reyk Exp $	*/
d41 5
a45 1
void	 addargs(arglist *, char *, ...) __attribute__((format(printf, 2, 3)));
@


1.27
log
@Add support for tun(4) forwarding over OpenSSH, based on an idea and
initial channel code bits by markus@@. This is a simple and easy way to
use OpenSSH for ad hoc virtual private network connections, e.g.
administrative tunnels or secure wireless access. It's based on a new
ssh channel and works similar to the existing TCP forwarding support,
except that it depends on the tun(4) network interface on both ends of
the connection for layer 2 or layer 3 tunneling. This diff also adds
support for LocalCommand in the ssh(1) client.

ok djm@@, markus@@, jmc@@ (manpages), tested and discussed with others
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.26 2005/09/13 23:40:07 djm Exp $	*/
d53 13
a65 1
int	 tun_open(int);
@


1.26
log
@ensure that stdio fds are attached; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.25 2005/07/14 04:00:43 dtucker Exp $	*/
d23 1
d53 1
@


1.25
log
@use __sentinel__ attribute; ok deraadt@@ djm@@ markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.24 2005/07/04 00:58:43 djm Exp $	*/
d30 1
@


1.25.2.1
log
@upgrade to OpenSSH 4.3
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.29 2006/01/31 10:19:02 djm Exp $	*/
a22 1
int	 a2tun(const char *, int *);
a29 1
void	 sanitise_stdfd(void);
d39 1
a39 5
void	 addargs(arglist *, char *, ...)
	     __attribute__((format(printf, 2, 3)));
void	 replacearg(arglist *, u_int, char *, ...)
	     __attribute__((format(printf, 3, 4)));
void	 freeargs(arglist *);
a50 13

int	 tun_open(int, int);

/* Common definitions for ssh tunnel device forwarding */
#define SSH_TUNMODE_NO		0x00
#define SSH_TUNMODE_POINTOPOINT	0x01
#define SSH_TUNMODE_ETHERNET	0x02
#define SSH_TUNMODE_DEFAULT	SSH_TUNMODE_POINTOPOINT
#define SSH_TUNMODE_YES		(SSH_TUNMODE_POINTOPOINT|SSH_TUNMODE_ETHERNET)

#define SSH_TUNID_ANY		0x7fffffff
#define SSH_TUNID_ERR		(SSH_TUNID_ANY - 1)
#define SSH_TUNID_MAX		(SSH_TUNID_ANY - 2)
@


1.25.2.2
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: misc.h,v 1.36 2006/08/18 10:27:16 djm Exp $ */
a14 3
#ifndef _MISC_H
#define _MISC_H

a23 1
char	*put_host_port(const char *, u_short);
d30 1
a30 1
char	*tohex(const void *, size_t);
d47 11
a69 28

/* Functions to extract or store big-endian words of various sizes */
u_int64_t	get_u64(const void *)
    __attribute__((__bounded__( __minbytes__, 1, 8)));
u_int32_t	get_u32(const void *)
    __attribute__((__bounded__( __minbytes__, 1, 4)));
u_int16_t	get_u16(const void *)
    __attribute__((__bounded__( __minbytes__, 1, 2)));
void		put_u64(void *, u_int64_t)
    __attribute__((__bounded__( __minbytes__, 1, 8)));
void		put_u32(void *, u_int32_t)
    __attribute__((__bounded__( __minbytes__, 1, 4)));
void		put_u16(void *, u_int16_t)
    __attribute__((__bounded__( __minbytes__, 1, 2)));


/* readpass.c */

#define RP_ECHO			0x0001
#define RP_ALLOW_STDIN		0x0002
#define RP_ALLOW_EOF		0x0004
#define RP_USE_ASKPASS		0x0008

char	*read_passphrase(const char *, int);
int	 ask_permission(const char *, ...) __attribute__((format(printf, 1, 2)));
int	 read_keyfile_line(FILE *, const char *, char *, size_t, u_long *);

#endif /* _MISC_H */
@


1.24
log
@implement support for X11 and agent forwarding over multiplex slave
connections. Because of protocol limitations, the slave connections inherit
the master's DISPLAY and SSH_AUTH_SOCK rather than distinctly forwarding
their own.

ok dtucker@@ "put it in" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.23 2005/06/06 11:20:36 djm Exp $	*/
d28 1
a28 1
char	*percent_expand(const char *, ...) __attribute__((sentinel));
@


1.23
log
@introduce a generic %foo expansion function. replace existing % expansion and
add expansion to ControlPath; ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.22 2005/04/09 04:32:54 djm Exp $	*/
d29 1
@


1.22
log
@replace tilde_expand_filename with a simpler implementation, ahead of more
whacking; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.21 2005/03/01 10:09:52 djm Exp $	*/
d28 1
@


1.21
log
@bz#413: allow optional specification of bind address for port forwardings.
Patch originally by Dan Astorian, but worked on by several people
Adds GatewayPorts=clientspecified option on server to allow remote forwards
to bind to client-specified ports.

ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.20 2004/12/11 01:48:56 dtucker Exp $	*/
d27 1
a37 4

/* tildexpand.c */

char	*tilde_expand_filename(const char *, uid_t);
@


1.21.2.1
log
@upgrade to OpenSSH 4.2
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.25 2005/07/14 04:00:43 dtucker Exp $	*/
a26 3
char	*tilde_expand_filename(const char *, uid_t);
char	*percent_expand(const char *, ...) __attribute__((__sentinel__));
char	*tohex(const u_char *, u_int);
d37 4
@


1.21.2.2
log
@upgrade to OpenSSH 4.3
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.29 2006/01/31 10:19:02 djm Exp $	*/
a22 1
int	 a2tun(const char *, int *);
a29 1
void	 sanitise_stdfd(void);
d39 1
a39 5
void	 addargs(arglist *, char *, ...)
	     __attribute__((format(printf, 2, 3)));
void	 replacearg(arglist *, u_int, char *, ...)
	     __attribute__((format(printf, 3, 4)));
void	 freeargs(arglist *);
a50 13

int	 tun_open(int, int);

/* Common definitions for ssh tunnel device forwarding */
#define SSH_TUNMODE_NO		0x00
#define SSH_TUNMODE_POINTOPOINT	0x01
#define SSH_TUNMODE_ETHERNET	0x02
#define SSH_TUNMODE_DEFAULT	SSH_TUNMODE_POINTOPOINT
#define SSH_TUNMODE_YES		(SSH_TUNMODE_POINTOPOINT|SSH_TUNMODE_ETHERNET)

#define SSH_TUNID_ANY		0x7fffffff
#define SSH_TUNID_ERR		(SSH_TUNID_ANY - 1)
#define SSH_TUNID_MAX		(SSH_TUNID_ANY - 2)
@


1.20
log
@Fix debug call in error path of authorized_keys processing and fix related
warnings; ok djm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.19 2004/12/06 11:41:03 dtucker Exp $	*/
d23 1
@


1.19
log
@Discard over-length authorized_keys entries rather than complaining when
they don't decode.  bz #884, with & ok djm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.18 2004/10/29 22:53:56 djm Exp $	*/
d50 1
a50 1
int	 read_keyfile_line(FILE *, const char *, char *, size_t, int *);
@


1.18
log
@factor out common permission-asking code to separate function; ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.17 2004/08/11 21:43:05 avsm Exp $	*/
d50 1
@


1.17
log
@some signed/unsigned int comparison cleanups; markus@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.16 2004/06/17 15:10:14 djm Exp $	*/
d49 1
@


1.17.2.1
log
@upgrade to OpenSSH 4.0
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.21 2005/03/01 10:09:52 djm Exp $	*/
a22 1
char	*hpdelim(char **);
a48 2
int	 ask_permission(const char *, ...) __attribute__((format(printf, 1, 2)));
int	 read_keyfile_line(FILE *, const char *, char *, size_t, u_long *);
@


1.17.2.2
log
@upgrade to OpenSSH 4.2
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.25 2005/07/14 04:00:43 dtucker Exp $	*/
a26 3
char	*tilde_expand_filename(const char *, uid_t);
char	*percent_expand(const char *, ...) __attribute__((__sentinel__));
char	*tohex(const u_char *, u_int);
d37 4
@


1.16
log
@Add option for confirmation (ControlMaster=ask) via ssh-askpass before opening
shared connections; ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.15 2004/06/14 01:44:39 djm Exp $	*/
d32 2
a33 2
	int     num;
	int     nalloc;
@


1.15
log
@set_nonblock() instead of fnctl(...,O_NONBLOCK); "looks sane" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.14 2004/05/08 00:21:31 djm Exp $	*/
d46 1
@


1.14
log
@kill a tiny header; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.13 2004/05/08 00:01:37 deraadt Exp $	*/
d19 2
a20 2
void	 set_nonblock(int);
void	 unset_nonblock(int);
@


1.13
log
@make two tiny header files go away; djm ok
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.12 2002/03/19 10:49:35 markus Exp $	*/
d15 2
d37 2
d40 8
@


1.12
log
@KNF whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.11 2002/01/24 21:09:25 stevesk Exp $	*/
d34 2
@


1.12.8.1
log
@upgrade to OpenSSH 3.9
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.17 2004/08/11 21:43:05 avsm Exp $	*/
a14 2
/* misc.c */

d17 2
a18 2
int	 set_nonblock(int);
int	 unset_nonblock(int);
d30 2
a31 2
	u_int   num;
	u_int   nalloc;
a33 13

/* tildexpand.c */

char	*tilde_expand_filename(const char *, uid_t);

/* readpass.c */

#define RP_ECHO			0x0001
#define RP_ALLOW_STDIN		0x0002
#define RP_ALLOW_EOF		0x0004
#define RP_USE_ASKPASS		0x0008

char	*read_passphrase(const char *, int);
@


1.12.10.1
log
@upgrade to OpenSSH 3.9
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.17 2004/08/11 21:43:05 avsm Exp $	*/
a14 2
/* misc.c */

d17 2
a18 2
int	 set_nonblock(int);
int	 unset_nonblock(int);
d30 2
a31 2
	u_int   num;
	u_int   nalloc;
a33 13

/* tildexpand.c */

char	*tilde_expand_filename(const char *, uid_t);

/* readpass.c */

#define RP_ECHO			0x0001
#define RP_ALLOW_STDIN		0x0002
#define RP_ALLOW_EOF		0x0004
#define RP_USE_ASKPASS		0x0008

char	*read_passphrase(const char *, int);
@


1.12.10.2
log
@upgrade to OpenSSH 4.0
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.21 2005/03/01 10:09:52 djm Exp $	*/
a22 1
char	*hpdelim(char **);
a48 2
int	 ask_permission(const char *, ...) __attribute__((format(printf, 1, 2)));
int	 read_keyfile_line(FILE *, const char *, char *, size_t, u_long *);
@


1.11
log
@add set_nodelay() to set TCP_NODELAY on a socket (prep for nagle tuning).
no nagle changes just yet; ok djm@@ markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.10 2001/06/26 17:27:24 markus Exp $	*/
d29 3
a31 3
        char    **list;
        int     num;
        int     nalloc;
@


1.10
log
@remove comments from .h, since they are cut&paste from the .c files
and out of sync
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.9 2001/06/26 06:32:56 itojun Exp $	*/
d19 1
@


1.10.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.11 2002/01/24 21:09:25 stevesk Exp $	*/
a18 1
void	 set_nodelay(int);
@


1.10.2.2
log
@Update OpenSSH to version 3.2.2.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.12 2002/03/19 10:49:35 markus Exp $	*/
d29 3
a31 3
	char    **list;
	int     num;
	int     nalloc;
@


1.9
log
@prototype pedant.  not very creative...
- () -> (void)
- no variable names
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.8 2001/05/19 19:43:57 stevesk Exp $	*/
d14 1
a14 1
/* remove newline at end of string */
a15 2

/* return next token in configuration line */
d17 6
d24 1
a24 12
/* set/unset filedescriptor to non-blocking */
void	set_nonblock(int);
void	unset_nonblock(int);

struct passwd * pwcopy(struct passwd *);

/*
 * Convert ASCII string to TCP/IP port number.
 * Port must be >0 and <=65535.
 * Return 0 if invalid.
 */
int a2port(const char *);
a25 29
/* code from scp.c/rcp.c */
char *cleanhostname(char *);
char *colon(char *);

/*
 * Convert a time string into seconds; format is
 * a sequence of:
 *	time[qualifier]
 *
 * Valid time qualifiers are:
 *	<none>	seconds
 *	s|S	seconds
 *	m|M	minutes
 *	h|H	hours
 *	d|D	days
 *	w|W	weeks
 *
 * Examples:
 *	90m	90 minutes
 *	1h30m	90 minutes
 *	2d	2 days
 *	1w	1 week
 *
 * Return -1 if time string is invalid.
 */

long convtime(const char *);

/* function to assist building execv() arguments */
d32 1
a32 2

void addargs(arglist *, char *, ...) __attribute__((format(printf, 2, 3)));
@


1.8
log
@sshd command-line arguments and configuration file options that
specify time may be expressed using a sequence of the form:
time[qualifier], where time is a positive integer value and qualifier
is one of the following:
    <none>,s,m,h,d,w
Examples:
    600     600 seconds (10 minutes)
    10m     10 minutes
    1h30m   1 hour 30 minutes (90 minutes)
ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.7 2001/05/11 14:59:56 markus Exp $	*/
d15 1
a15 1
char	*chop(char *s);
d18 1
a18 1
char	*strdelim(char **s);
d21 2
a22 2
void	set_nonblock(int fd);
void	unset_nonblock(int fd);
d24 1
a24 1
struct passwd * pwcopy(struct passwd *pw);
d31 1
a31 1
int a2port(const char *s);
d34 2
a35 2
char *cleanhostname(char *host);
char *colon(char *cp);
d59 1
a59 1
long convtime(const char *s);
d69 1
a69 1
void addargs(arglist *args, char *fmt, ...) __attribute__((format(printf, 2, 3)));
@


1.7
log
@add unset_nonblock for stdout/err flushing in client_loop().
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.6 2001/05/08 19:45:24 mouring Exp $	*/
d36 24
@


1.6
log
@Use addargs() in sftp plus some clean up of addargs().  OK Markus
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.5 2001/05/03 23:09:52 mouring Exp $	*/
d20 1
a20 1
/* set filedescriptor to non-blocking */
d22 1
@


1.5
log
@Move colon() and cleanhost() to misc.c where I should I have put it in
the first place
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.4 2001/04/12 20:09:36 stevesk Exp $	*/
d35 10
@


1.4
log
@robust port validation; ok markus@@ jakob@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.3 2001/02/22 21:59:44 markus Exp $	*/
d31 4
@


1.4.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.10 2001/06/26 17:27:24 markus Exp $	*/
d14 2
d17 2
a18 8
char	*chop(char *);
char	*strdelim(char **);
void	 set_nonblock(int);
void	 unset_nonblock(int);
int	 a2port(const char *);
char	*cleanhostname(char *);
char	*colon(char *);
long	 convtime(const char *);
d20 2
a21 1
struct passwd *pwcopy(struct passwd *);
d23 8
a30 7
typedef struct arglist arglist;
struct arglist {
        char    **list;
        int     num;
        int     nalloc;
};
void	 addargs(arglist *, char *, ...) __attribute__((format(printf, 2, 3)));
@


1.4.2.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.11 2002/01/24 21:09:25 stevesk Exp $	*/
a18 1
void	 set_nodelay(int);
@


1.4.2.3
log
@Upgrade to OpenSSH 3.2.3.

Except for improbable compilation error fixes, this should be the last
commit made to the 2.9-STABLE branche. Have fun upgrading.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.12 2002/03/19 10:49:35 markus Exp $	*/
d29 3
a31 3
	char    **list;
	int     num;
	int     nalloc;
@


1.3
log
@use pwcopy in ssh.c, too
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.2 2001/01/29 01:58:17 niklas Exp $	*/
d24 7
@


1.3.2.1
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@d22 2
@


1.3.2.2
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.3 2001/02/22 21:59:44 markus Exp $	*/
a21 2

struct passwd * pwcopy(struct passwd *pw);
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d22 2
@


1.2.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.2 2001/01/29 01:58:17 niklas Exp $	*/
@


1.2.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.2.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.3 2001/02/22 21:59:44 markus Exp $	*/
a21 2

struct passwd * pwcopy(struct passwd *pw);
@


1.2.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.4 2001/04/12 20:09:36 stevesk Exp $	*/
a23 7

/*
 * Convert ASCII string to TCP/IP port number.
 * Port must be >0 and <=65535.
 * Return 0 if invalid.
 */
int a2port(const char *s);
@


1.2.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.10 2001/06/26 17:27:24 markus Exp $	*/
d14 2
d17 2
a18 8
char	*chop(char *);
char	*strdelim(char **);
void	 set_nonblock(int);
void	 unset_nonblock(int);
int	 a2port(const char *);
char	*cleanhostname(char *);
char	*colon(char *);
long	 convtime(const char *);
d20 2
a21 1
struct passwd *pwcopy(struct passwd *);
d23 8
a30 7
typedef struct arglist arglist;
struct arglist {
        char    **list;
        int     num;
        int     nalloc;
};
void	 addargs(arglist *, char *, ...) __attribute__((format(printf, 2, 3)));
@


1.2.2.6
log
@Merge OpenSSH 3.1.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.h,v 1.11 2002/01/24 21:09:25 stevesk Exp $	*/
a18 1
void	 set_nodelay(int);
@


1.1
log
@split ssh.h and try to cleanup the #include mess. remove unnecessary #includes.
rename util.[ch] -> misc.[ch]
@
text
@d1 2
@

