head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.6
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.9.0.6
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.24
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.22
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.20
	OPENBSD_5_0:1.6.0.18
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.16
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.14
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.10
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.12
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.8
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.6
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.4
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.4.0.2
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.4
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.3.0.20
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.18
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.16
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.14
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.12
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.10
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.8
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.6
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.6
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_8:1.1.0.2;
locks; strict;
comment	@ * @;


1.10
date	2016.07.08.03.44.42;	author djm;	state Exp;
branches;
next	1.9;
commitid	oSZWAdBfrLcRSRTm;

1.9
date	2015.01.13.19.31.40;	author markus;	state Exp;
branches;
next	1.8;
commitid	sCqZ9ho1RfL2Vg0U;

1.8
date	2013.11.07.11.58.27;	author dtucker;	state Exp;
branches;
next	1.7;

1.7
date	2013.04.19.01.06.50;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2007.06.07.19.37.34;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2007.06.05.06.52.37;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2006.03.25.22.22.43;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.26.17.27.24;	author markus;	state Exp;
branches
	1.3.18.1
	1.3.20.1;
next	1.2;

1.2
date	2001.06.26.06.32.55;	author itojun;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.11.12.59.24;	author markus;	state Exp;
branches
	1.1.2.1
	1.1.4.1
	1.1.6.1;
next	;

1.1.2.1
date	2001.02.16.20.13.06;	author jason;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.02.19.17.19.05;	author jason;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2001.03.21.19.46.26;	author jason;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2001.05.07.21.09.31;	author jason;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	2001.09.27.00.15.42;	author miod;	state Exp;
branches;
next	1.1.2.6;

1.1.2.6
date	2002.03.08.17.04.42;	author brad;	state Exp;
branches;
next	;

1.1.4.1
date	2001.03.12.15.44.11;	author jason;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2001.03.21.18.52.51;	author jason;	state Exp;
branches;
next	;

1.1.6.1
date	2001.09.27.19.03.54;	author jason;	state Exp;
branches;
next	1.1.6.2;

1.1.6.2
date	2002.03.09.00.20.44;	author miod;	state Exp;
branches;
next	;

1.3.18.1
date	2006.10.06.03.19.32;	author brad;	state Exp;
branches;
next	;

1.3.20.1
date	2006.09.30.04.06.50;	author brad;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Improve crypto ordering for Encrypt-then-MAC (EtM) mode MAC algorithms.

Previously we were computing the MAC, decrypting the packet and then
checking the MAC. This gave rise to the possibility of creating a
side-channel oracle in the decryption step, though no such oracle has
been identified.

This adds a mac_check() function that computes and checks the MAC in
one pass, and uses it to advance MAC checking for EtM algorithms to
before payload decryption.

Reported by Jean Paul Degabriele, Kenny Paterson, Torben Hansen and
Martin Albrecht. feedback and ok markus@@
@
text
@/* $OpenBSD: mac.h,v 1.9 2015/01/13 19:31:40 markus Exp $ */
/*
 * Copyright (c) 2001 Markus Friedl.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef SSHMAC_H
#define SSHMAC_H

#include <sys/types.h>

struct sshmac {
	char	*name;
	int	enabled;
	u_int	mac_len;
	u_char	*key;
	u_int	key_len;
	int	type;
	int	etm;		/* Encrypt-then-MAC */
	struct ssh_hmac_ctx	*hmac_ctx;
	struct umac_ctx		*umac_ctx;
};

int	 mac_valid(const char *);
char	*mac_alg_list(char);
int	 mac_setup(struct sshmac *, char *);
int	 mac_init(struct sshmac *);
int	 mac_compute(struct sshmac *, u_int32_t, const u_char *, int,
    u_char *, size_t);
int	 mac_check(struct sshmac *, u_int32_t, const u_char *, size_t,
    const u_char *, size_t);
void	 mac_clear(struct sshmac *);

#endif /* SSHMAC_H */
@


1.9
log
@adapt mac.c to ssherr.h return codes (de-fatal) and simplify dependencies
ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: mac.h,v 1.8 2013/11/07 11:58:27 dtucker Exp $ */
d49 2
@


1.8
log
@Output the effective values of Ciphers, MACs and KexAlgorithms when
the default has not been overridden.  ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: mac.h,v 1.7 2013/04/19 01:06:50 djm Exp $ */
d26 17
d45 7
a51 4
int	 mac_setup(Mac *, char *);
int	 mac_init(Mac *);
u_char	*mac_compute(Mac *, u_int32_t, u_char *, int);
void	 mac_clear(Mac *);
@


1.7
log
@add the ability to query supported ciphers, MACs, key type and KEX
algorithms to ssh. Includes some refactoring of KEX and key type handling
to be table-driven; ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: mac.h,v 1.6 2007/06/07 19:37:34 pvalchev Exp $ */
d27 1
a27 1
char	*mac_alg_list(void);
@


1.6
log
@Add a new MAC algorithm for data integrity, UMAC-64 (not default yet, must
specify umac-64@@openssh.com). Provides about 20% end-to-end speedup
compared to hmac-md5. Represents a different approach to message
authentication to that of HMAC that may be beneficial if HMAC based on one
of its underlying hash algorithms is found to be vulnerable to a new attack.
http://www.ietf.org/rfc/rfc4418.txt

in conjunction with and OK djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: mac.h,v 1.5 2007/06/05 06:52:37 djm Exp $ */
d27 1
@


1.5
log
@Preserve MAC ctx between packets, saving 2xhash calls per-packet.
Yields around a 12-16% end-to-end speedup for arcfour256/hmac-md5

patch from markus@@ tested dtucker@@ and myself, ok markus@@ and me (I'm
committing at his request)
@
text
@d1 1
a1 1
/* $OpenBSD: mac.h,v 1.4 2006/03/25 22:22:43 djm Exp $ */
d28 1
a28 1
void	 mac_init(Mac *);
@


1.4
log
@standardise spacing in $OpenBSD$ tags; requested by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: mac.h,v 1.3 2001/06/26 17:27:24 markus Exp $ */
d27 2
a28 1
int	 mac_init(Mac *, char *);
d30 1
@


1.3
log
@remove comments from .h, since they are cut&paste from the .c files
and out of sync
@
text
@d1 1
a1 1
/*      $OpenBSD: mac.h,v 1.2 2001/06/26 06:32:55 itojun Exp $   */
@


1.3.18.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: mac.h,v 1.4 2006/03/25 22:22:43 djm Exp $ */
@


1.3.20.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: mac.h,v 1.4 2006/03/25 22:22:43 djm Exp $ */
@


1.2
log
@prototype pedant.  not very creative...
- () -> (void)
- no variable names
@
text
@d1 1
a1 1
/*      $OpenBSD: mac.h,v 1.1 2001/02/11 12:59:24 markus Exp $   */
d26 2
a27 2
int	mac_valid(const char *);
int	mac_init(Mac *, char *);
@


1.1
log
@1) clean up the MAC support for SSH-2
2) allow you to specify the MAC with 'ssh -m'
3) or the 'MACs' keyword in ssh(d)_config
4) add hmac-{md5,sha1}-96
	ok stevesk@@, provos@@
@
text
@d1 1
a1 1
/*      $OpenBSD: sshconnect.h,v 1.5 2001/01/29 01:58:18 niklas Exp $   */
d26 3
a28 3
int	mac_valid(const char *names);
int	mac_init(Mac *mac, char *name);
u_char	*mac_compute(Mac *mac, u_int32_t seqno, u_char *data, int datalen);
@


1.1.6.1
log
@Pull in OpenSSH-2.9.9
@
text
@d1 1
a1 1
/*      $OpenBSD: mac.h,v 1.3 2001/06/26 17:27:24 markus Exp $   */
d26 3
a28 3
int	 mac_valid(const char *);
int	 mac_init(Mac *, char *);
u_char	*mac_compute(Mac *, u_int32_t, u_char *, int);
@


1.1.6.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@@


1.1.4.1
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@d1 1
a1 1
/*      $OpenBSD: mac.h,v 1.1 2001/02/11 12:59:24 markus Exp $   */
@


1.1.4.2
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@@


1.1.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d1 1
a1 1
/*      $OpenBSD: mac.h,v 1.1 2001/02/11 12:59:24 markus Exp $   */
@


1.1.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.1.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@@


1.1.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@@


1.1.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d1 1
a1 1
/*      $OpenBSD: mac.h,v 1.3 2001/06/26 17:27:24 markus Exp $   */
d26 3
a28 3
int	 mac_valid(const char *);
int	 mac_init(Mac *, char *);
u_char	*mac_compute(Mac *, u_int32_t, u_char *, int);
@


1.1.2.6
log
@Merge OpenSSH 3.1.
@
text
@@


