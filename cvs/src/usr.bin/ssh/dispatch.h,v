head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.8
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.10
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.6
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.4
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.11.0.36
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.34
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.30
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.28
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.26
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.24
	OPENBSD_5_0:1.11.0.22
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.20
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.18
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.14
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.16
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.12
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.10
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.8
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.6
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.2
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.4
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.9.0.18
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.16
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.14
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.12
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.10
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.8
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.12
date	2015.01.19.20.07.45;	author markus;	state Exp;
branches;
next	1.11;
commitid	GrtSC5ve2VERgUln;

1.11
date	2006.04.20.09.27.09;	author djm;	state Exp;
branches;
next	1.10;

1.10
date	2006.03.25.22.22.43;	author djm;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.11.13.39.36;	author markus;	state Exp;
branches
	1.9.16.1
	1.9.18.1;
next	1.8;

1.8
date	2001.12.28.15.06.00;	author markus;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.20.22.50.24;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.26.17.27.23;	author markus;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2001.06.26.06.32.52;	author itojun;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.29.01.58.15;	author niklas;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2000.09.21.11.25.34;	author markus;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2000.09.07.20.27.51;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.28.20.40.48;	author markus;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2000.11.08.21.30.45;	author jason;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.03.12.15.44.10;	author jason;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2001.03.21.18.52.45;	author jason;	state Exp;
branches;
next	;

1.3.2.1
date	2001.02.16.20.13.01;	author jason;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2001.02.19.17.18.55;	author jason;	state Exp;
branches;
next	1.3.2.3;

1.3.2.3
date	2001.03.21.19.46.25;	author jason;	state Exp;
branches;
next	1.3.2.4;

1.3.2.4
date	2001.05.07.21.09.29;	author jason;	state Exp;
branches;
next	1.3.2.5;

1.3.2.5
date	2001.09.27.00.15.42;	author miod;	state Exp;
branches;
next	1.3.2.6;

1.3.2.6
date	2002.03.08.17.04.42;	author brad;	state Exp;
branches;
next	;

1.4.2.1
date	2001.09.27.19.03.54;	author jason;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2002.03.09.00.20.44;	author miod;	state Exp;
branches;
next	;

1.6.2.1
date	2002.03.07.17.37.46;	author jason;	state Exp;
branches;
next	;

1.9.16.1
date	2006.10.06.03.19.32;	author brad;	state Exp;
branches;
next	;

1.9.18.1
date	2006.09.30.04.06.50;	author brad;	state Exp;
branches;
next	;


desc
@@


1.12
log
@move dispatch to struct ssh; ok djm@@
@
text
@/* $OpenBSD: dispatch.h,v 1.11 2006/04/20 09:27:09 djm Exp $ */

/*
 * Copyright (c) 2000 Markus Friedl.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef DISPATCH_H
#define DISPATCH_H

#define DISPATCH_MAX	255

enum {
	DISPATCH_BLOCK,
	DISPATCH_NONBLOCK
};

struct ssh;

typedef int dispatch_fn(int, u_int32_t, void *);

int	dispatch_protocol_error(int, u_int32_t, void *);
int	dispatch_protocol_ignore(int, u_int32_t, void *);
void	ssh_dispatch_init(struct ssh *, dispatch_fn *);
void	ssh_dispatch_set(struct ssh *, int, dispatch_fn *);
void	ssh_dispatch_range(struct ssh *, u_int, u_int, dispatch_fn *);
int	ssh_dispatch_run(struct ssh *, int, volatile sig_atomic_t *, void *);
void	ssh_dispatch_run_fatal(struct ssh *, int, volatile sig_atomic_t *, void *);

#define dispatch_init(dflt) \
	ssh_dispatch_init(active_state, (dflt))
#define dispatch_range(from, to, fn) \
	ssh_dispatch_range(active_state, (from), (to), (fn))
#define dispatch_set(type, fn) \
	ssh_dispatch_set(active_state, (type), (fn))
#define dispatch_run(mode, done, ctxt) \
	ssh_dispatch_run_fatal(active_state, (mode), (done), (ctxt))

#endif
@


1.11
log
@replace the last non-sig_atomic_t flag used in a signal handler with a
sig_atomic_t, unfortunately with some knock-on effects in other (non-
signal) contexts in which it is used; ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: dispatch.h,v 1.10 2006/03/25 22:22:43 djm Exp $ */
d26 6
d37 20
a56 1
typedef void dispatch_fn(int, u_int32_t, void *);
d58 1
a58 6
void	 dispatch_init(dispatch_fn *);
void	 dispatch_set(int, dispatch_fn *);
void	 dispatch_range(u_int, u_int, dispatch_fn *);
void	 dispatch_run(int, volatile sig_atomic_t *, void *);
void	 dispatch_protocol_error(int, u_int32_t, void *);
void	 dispatch_protocol_ignore(int, u_int32_t, void *);
@


1.10
log
@standardise spacing in $OpenBSD$ tags; requested by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: dispatch.h,v 1.9 2002/01/11 13:39:36 markus Exp $ */
d36 1
a36 1
void	 dispatch_run(int, int *, void *);
@


1.9
log
@a single dispatch_protocol_error() that sends a message of type 'UNIMPLEMENTED'
dispatch_range(): set handler for a ranges message types
use dispatch_protocol_ignore() for authentication requests after
	successful authentication (the drafts requirement).
serverloop/clientloop now send a 'UNIMPLEMENTED' message instead of exiting.
@
text
@d1 1
a1 1
/*	$OpenBSD: dispatch.h,v 1.8 2001/12/28 15:06:00 markus Exp $	*/
@


1.9.16.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: dispatch.h,v 1.11 2006/04/20 09:27:09 djm Exp $ */
d36 1
a36 1
void	 dispatch_run(int, volatile sig_atomic_t *, void *);
@


1.9.18.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: dispatch.h,v 1.11 2006/04/20 09:27:09 djm Exp $ */
d36 1
a36 1
void	 dispatch_run(int, volatile sig_atomic_t *, void *);
@


1.8
log
@remove plen from the dispatch fn. it's no longer used.
@
text
@d1 1
a1 1
/*	$OpenBSD: dispatch.h,v 1.7 2001/12/20 22:50:24 djm Exp $	*/
d35 1
d38 1
@


1.7
log
@Conformance fix: we should send failing packet sequence number when
responding with a SSH_MSG_UNIMPLEMENTED message. Spotted by
yakk@@yakk.dot.net; ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dispatch.h,v 1.6 2001/06/26 17:27:23 markus Exp $	*/
d31 1
a31 1
typedef void dispatch_fn(int, int, u_int32_t, void *);
d36 1
a36 1
void	 dispatch_protocol_error(int, int, u_int32_t, void *);
@


1.6
log
@remove comments from .h, since they are cut&paste from the .c files
and out of sync
@
text
@d1 1
a1 1
/*	$OpenBSD: dispatch.h,v 1.5 2001/06/26 06:32:52 itojun Exp $	*/
d31 1
a31 1
typedef void dispatch_fn(int, int, void *);
d36 1
a36 1
void	 dispatch_protocol_error(int, int, void *);
@


1.6.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@d1 1
a1 1
/*	$OpenBSD: dispatch.h,v 1.9 2002/01/11 13:39:36 markus Exp $	*/
d31 1
a31 1
typedef void dispatch_fn(int, u_int32_t, void *);
a34 1
void	 dispatch_range(u_int, u_int, dispatch_fn *);
d36 1
a36 2
void	 dispatch_protocol_error(int, u_int32_t, void *);
void	 dispatch_protocol_ignore(int, u_int32_t, void *);
@


1.5
log
@prototype pedant.  not very creative...
- () -> (void)
- no variable names
@
text
@d1 1
a1 1
/*	$OpenBSD: dispatch.h,v 1.4 2001/01/29 01:58:15 niklas Exp $	*/
d33 4
a36 4
void	dispatch_init(dispatch_fn *);
void	dispatch_set(int, dispatch_fn *);
void	dispatch_run(int, int *, void *);
void	dispatch_protocol_error(int, int, void *);
@


1.4
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d31 1
a31 1
typedef void dispatch_fn(int type, int plen, void *ctxt);
d33 4
a36 4
void	dispatch_init(dispatch_fn *dflt);
void	dispatch_set(int type, dispatch_fn *fn);
void	dispatch_run(int mode, int *done, void *ctxt);
void	dispatch_protocol_error(int type, int plen, void *ctxt);
@


1.4.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d1 1
a1 1
/*	$OpenBSD: dispatch.h,v 1.6 2001/06/26 17:27:23 markus Exp $	*/
d31 1
a31 1
typedef void dispatch_fn(int, int, void *);
d33 4
a36 4
void	 dispatch_init(dispatch_fn *);
void	 dispatch_set(int, dispatch_fn *);
void	 dispatch_run(int, int *, void *);
void	 dispatch_protocol_error(int, int, void *);
@


1.4.2.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@d1 1
a1 1
/*	$OpenBSD: dispatch.h,v 1.9 2002/01/11 13:39:36 markus Exp $	*/
d31 1
a31 1
typedef void dispatch_fn(int, u_int32_t, void *);
a34 1
void	 dispatch_range(u_int, u_int, dispatch_fn *);
d36 1
a36 2
void	 dispatch_protocol_error(int, u_int32_t, void *);
void	 dispatch_protocol_ignore(int, u_int32_t, void *);
@


1.3
log
@add context to dispatch_run
@
text
@d1 2
@


1.3.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@a0 2
/*	$OpenBSD: dispatch.h,v 1.4 2001/01/29 01:58:15 niklas Exp $	*/

@


1.3.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.3.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@@


1.3.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@@


1.3.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: dispatch.h,v 1.6 2001/06/26 17:27:23 markus Exp $	*/
d31 1
a31 1
typedef void dispatch_fn(int, int, void *);
d33 4
a36 4
void	 dispatch_init(dispatch_fn *);
void	 dispatch_set(int, dispatch_fn *);
void	 dispatch_run(int, int *, void *);
void	 dispatch_protocol_error(int, int, void *);
@


1.3.2.6
log
@Merge OpenSSH 3.1.
@
text
@d1 1
a1 1
/*	$OpenBSD: dispatch.h,v 1.9 2002/01/11 13:39:36 markus Exp $	*/
d31 1
a31 1
typedef void dispatch_fn(int, u_int32_t, void *);
a34 1
void	 dispatch_range(u_int, u_int, dispatch_fn *);
d36 1
a36 2
void	 dispatch_protocol_error(int, u_int32_t, void *);
void	 dispatch_protocol_ignore(int, u_int32_t, void *);
@


1.2
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d29 1
a29 1
typedef void dispatch_fn(int type, int plen);
d33 2
a34 2
void	dispatch_run(int mode, int *done);
void	dispatch_protocol_error(int type, int plen);
@


1.1
log
@function tables for different message types
@
text
@d1 23
@


1.1.2.1
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@a0 23
/*
 * Copyright (c) 2000 Markus Friedl.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
d6 1
a6 1
typedef void dispatch_fn(int type, int plen, void *ctxt);
d10 2
a11 2
void	dispatch_run(int mode, int *done, void *ctxt);
void	dispatch_protocol_error(int type, int plen, void *ctxt);
@


1.1.2.2
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@a0 2
/*	$OpenBSD: dispatch.h,v 1.4 2001/01/29 01:58:15 niklas Exp $	*/

@


1.1.2.3
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@@


