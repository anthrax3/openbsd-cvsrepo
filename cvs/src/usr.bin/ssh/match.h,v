head	1.17;
access;
symbols
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.16.0.8
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.4
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.2
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.15.0.18
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.22
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.20
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.16
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.14
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.12
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.10
	OPENBSD_5_0:1.15.0.8
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.6
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.14.0.8
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.4
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.2
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.13.0.8
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.6
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.2
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.4
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.12.0.18
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.16
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.14
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.12
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.10
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.8
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.12.0.6
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.4
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.17
date	2017.02.03.23.01.19;	author djm;	state Exp;
branches;
next	1.16;
commitid	0GOZFYpYrdIWnKZ0;

1.16
date	2015.05.04.06.10.48;	author djm;	state Exp;
branches;
next	1.15;
commitid	KfZDG8r2EByk0YBR;

1.15
date	2010.02.26.20.29.54;	author djm;	state Exp;
branches;
next	1.14;

1.14
date	2008.06.10.03.57.27;	author djm;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.25.22.22.43;	author djm;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.01.13.12.10;	author markus;	state Exp;
branches
	1.12.16.1
	1.12.18.1;
next	1.11;

1.11
date	2002.02.28.19.36.28;	author stevesk;	state Exp;
branches;
next	1.10;

1.10
date	2001.12.05.16.54.51;	author markus;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.26.06.32.56;	author itojun;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2001.06.24.05.25.10;	author markus;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.10.17.51.04;	author markus;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2001.01.29.01.58.17;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	2000.12.19.23.17.57;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.07.21.13.37;	author markus;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2000.09.07.20.27.52;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.06.19.32.14;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.23.22.15.33;	author markus;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2000.06.12.02.37.34;	author jason;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2000.11.08.21.30.57;	author jason;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2001.03.12.15.44.12;	author jason;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2001.03.21.18.52.52;	author jason;	state Exp;
branches;
next	;

1.4.2.1
date	2001.02.16.20.13.06;	author jason;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2001.02.19.17.19.06;	author jason;	state Exp;
branches;
next	1.4.2.3;

1.4.2.3
date	2001.03.21.19.46.26;	author jason;	state Exp;
branches;
next	1.4.2.4;

1.4.2.4
date	2001.05.07.21.09.31;	author jason;	state Exp;
branches;
next	1.4.2.5;

1.4.2.5
date	2001.09.27.00.15.42;	author miod;	state Exp;
branches;
next	1.4.2.6;

1.4.2.6
date	2002.03.08.17.04.42;	author brad;	state Exp;
branches;
next	;

1.7.2.1
date	2001.09.27.19.03.54;	author jason;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2002.03.09.00.20.44;	author miod;	state Exp;
branches;
next	;

1.9.2.1
date	2002.03.07.17.37.46;	author jason;	state Exp;
branches;
next	;

1.12.16.1
date	2006.10.06.03.19.32;	author brad;	state Exp;
branches;
next	;

1.12.18.1
date	2006.09.30.04.06.50;	author brad;	state Exp;
branches;
next	;


desc
@@


1.17
log
@support =- for removing methods from algorithms lists, e.g.
Ciphers=-*cbc; suggested by Cristian Ionescu-Idbohrn in bz#2671
"I like it" markus@@
@
text
@/* $OpenBSD: match.h,v 1.16 2015/05/04 06:10:48 djm Exp $ */

/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */
#ifndef MATCH_H
#define MATCH_H

int	 match_pattern(const char *, const char *);
int	 match_pattern_list(const char *, const char *, int);
int	 match_hostname(const char *, const char *);
int	 match_host_and_ip(const char *, const char *, const char *);
int	 match_user(const char *, const char *, const char *, const char *);
char	*match_list(const char *, const char *, u_int *);
char	*match_filter_list(const char *, const char *);

/* addrmatch.c */
int	 addr_match_list(const char *, const char *);
int	 addr_match_cidr_list(const char *, const char *);
#endif
@


1.16
log
@Remove pattern length argument from match_pattern_list(),
we only ever use it for strlen(pattern).

Prompted by hanno AT hboeck.de pointing an out-of-bound read
error caused by an incorrect pattern length found using AFL
and his own tools.

ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: match.h,v 1.15 2010/02/26 20:29:54 djm Exp $ */
d23 1
@


1.15
log
@Add support for certificate key types for users and hosts.

OpenSSH certificate key types are not X.509 certificates, but a much
simpler format that encodes a public key, identity information and
some validity constraints and signs it with a CA key. CA keys are
regular SSH keys. This certificate style avoids the attack surface
of X.509 certificates and is very easy to deploy.

Certified host keys allow automatic acceptance of new host keys
when a CA certificate is marked as trusted in ~/.ssh/known_hosts.
see VERIFYING HOST KEYS in ssh(1) for details.

Certified user keys allow authentication of users when the signing
CA key is marked as trusted in authorized_keys. See "AUTHORIZED_KEYS
FILE FORMAT" in sshd(8) for details.

Certificates are minted using ssh-keygen(1), documentation is in
the "CERTIFICATES" section of that manpage.

Documentation on the format of certificates is in the file
PROTOCOL.certkeys

feedback and ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: match.h,v 1.14 2008/06/10 03:57:27 djm Exp $ */
d18 2
a19 2
int	 match_pattern_list(const char *, const char *, u_int, int);
int	 match_hostname(const char *, const char *, u_int);
@


1.14
log
@support CIDR address matching in sshd_config "Match address" blocks, with
full support for negation and fall-back to classic wildcard matching.
For example:

Match address 192.0.2.0/24,3ffe:ffff::/32,!10.*
    PasswordAuthentication yes

addrmatch.c code mostly lifted from flowd's addr.c

feedback and ok dtucker@@
@
text
@d1 1
a1 1
/* $OpenBSD: match.h,v 1.13 2006/03/25 22:22:43 djm Exp $ */
d26 1
a26 1

@


1.13
log
@standardise spacing in $OpenBSD$ tags; requested by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: match.h,v 1.12 2002/03/01 13:12:10 markus Exp $ */
d23 3
@


1.12
log
@undo the 'delay hostname lookup' change
match.c must not use compress.c (via canonhost.c/packet.c)
thanks to wilfried@@
@
text
@d1 1
a1 1
/*	$OpenBSD: match.h,v 1.10 2001/12/05 16:54:51 markus Exp $	*/
@


1.12.16.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: match.h,v 1.13 2006/03/25 22:22:43 djm Exp $ */
@


1.12.18.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: match.h,v 1.13 2006/03/25 22:22:43 djm Exp $ */
@


1.11
log
@delay hostname lookup until we see a ``@@'' in DenyUsers and AllowUsers
for sshd -u0; ok markus@@
@
text
@d21 1
a21 1
int	 match_user(const char *, int, const char *);
@


1.10
log
@make theo and djm happy: bye bye regexp
@
text
@d1 1
a1 1
/*	$OpenBSD: match.h,v 1.9 2001/06/26 06:32:56 itojun Exp $	*/
d21 1
a21 1
int	 match_user(const char *, const char *, const char *, const char *);
@


1.9
log
@prototype pedant.  not very creative...
- () -> (void)
- no variable names
@
text
@d1 1
a1 1
/*	$OpenBSD: match.h,v 1.8 2001/06/24 05:25:10 markus Exp $	*/
d17 3
a19 2
int      match_pattern(const char *, const char *);
int      match_hostname(const char *, const char *, u_int);
@


1.9.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@d1 1
a1 1
/*	$OpenBSD: match.h,v 1.12 2002/03/01 13:12:10 markus Exp $	*/
d17 2
a18 3
int	 match_pattern(const char *, const char *);
int	 match_pattern_list(const char *, const char *, u_int, int);
int	 match_hostname(const char *, const char *, u_int);
@


1.8
log
@move ip+hostname check to match.c
@
text
@d1 1
a1 1
/*	$OpenBSD: match.h,v 1.7 2001/03/10 17:51:04 markus Exp $	*/
d17 5
a21 5
int      match_pattern(const char *s, const char *pattern);
int      match_hostname(const char *host, const char *pattern, u_int len);
int	 match_host_and_ip(const char *host, const char *ip, const char *p);
int	 match_user(const char *u, const char *h, const char *i, const char *p);
char	*match_list(const char *client, const char *server, u_int *next);
@


1.7
log
@add PreferredAuthentications
@
text
@d1 1
a1 1
/*	$OpenBSD: match.h,v 1.6 2001/01/29 01:58:17 niklas Exp $	*/
a6 2
 * This file contains various auxiliary functions related to multiple
 * precision integers.
d17 4
a20 18
/*
 * Returns true if the given string matches the pattern (which may contain ?
 * and * as wildcards), and zero if it does not match.
 */
int     match_pattern(const char *s, const char *pattern);

/*
 * Tries to match the host name (which must be in all lowercase) against the
 * comma-separated sequence of subpatterns (each possibly preceded by ! to
 * indicate negation).  Returns -1 if negation matches, 1 if there is
 * a positive match, 0 if there is no match at all.
 */
int     match_hostname(const char *host, const char *pattern, u_int len);

/*
 * Returns first item from client-list that is also supported by server-list,
 * caller must xfree() returned string.
 */
@


1.7.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d1 1
a1 1
/*	$OpenBSD: match.h,v 1.9 2001/06/26 06:32:56 itojun Exp $	*/
d7 2
d19 19
a37 5
int      match_pattern(const char *, const char *);
int      match_hostname(const char *, const char *, u_int);
int	 match_host_and_ip(const char *, const char *, const char *);
int	 match_user(const char *, const char *, const char *, const char *);
char	*match_list(const char *, const char *, u_int *);
@


1.7.2.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@d1 1
a1 1
/*	$OpenBSD: match.h,v 1.12 2002/03/01 13:12:10 markus Exp $	*/
d17 2
a18 3
int	 match_pattern(const char *, const char *);
int	 match_pattern_list(const char *, const char *, u_int, int);
int	 match_hostname(const char *, const char *, u_int);
@


1.6
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d32 6
@


1.5
log
@replace 'unsigned bla' with 'u_bla' everywhere. also, replace 'char unsigned'
with u_char.
@
text
@d1 2
@


1.4
log
@some more Copyright fixes
@
text
@d29 1
a29 1
int     match_hostname(const char *host, const char *pattern, unsigned int len);
@


1.4.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@a0 2
/*	$OpenBSD: match.h,v 1.6 2001/01/29 01:58:17 niklas Exp $	*/

d29 1
a29 1
int     match_hostname(const char *host, const char *pattern, u_int len);
@


1.4.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.4.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: match.h,v 1.7 2001/03/10 17:51:04 markus Exp $	*/
a31 6

/*
 * Returns first item from client-list that is also supported by server-list,
 * caller must xfree() returned string.
 */
char	*match_list(const char *client, const char *server, u_int *next);
@


1.4.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@@


1.4.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: match.h,v 1.9 2001/06/26 06:32:56 itojun Exp $	*/
d7 2
d19 19
a37 5
int      match_pattern(const char *, const char *);
int      match_hostname(const char *, const char *, u_int);
int	 match_host_and_ip(const char *, const char *, const char *);
int	 match_user(const char *, const char *, const char *, const char *);
char	*match_list(const char *, const char *, u_int *);
@


1.4.2.6
log
@Merge OpenSSH 3.1.
@
text
@d1 1
a1 1
/*	$OpenBSD: match.h,v 1.12 2002/03/01 13:12:10 markus Exp $	*/
d17 2
a18 3
int	 match_pattern(const char *, const char *);
int	 match_pattern_list(const char *, const char *, u_int, int);
int	 match_hostname(const char *, const char *, u_int);
@


1.3
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d2 5
a6 1
 * Copyright (c) 2000 Markus Friedl.  All rights reserved.
d8 5
a12 19
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.2
log
@fix match_hostname() logic for auth-rsa: deny access if we have a negative match or no match at all
@
text
@d1 23
@


1.1
log
@initial support for DSA keys. ok deraadt@@, niels@@
@
text
@d13 2
a14 2
 * indicate negation).  Returns true if there is a positive match; zero
 * otherwise.
@


1.1.2.1
log
@lovin' CVS... update patch branch to OpenSSH-2.1.1
@
text
@d13 2
a14 2
 * indicate negation).  Returns -1 if negation matches, 1 if there is
 * a positive match, 0 if there is no match at all.
@


1.1.2.2
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@a0 13
/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 * This file contains various auxiliary functions related to multiple
 * precision integers.
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */
@


1.1.2.3
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@a0 2
/*	$OpenBSD: match.h,v 1.6 2001/01/29 01:58:17 niklas Exp $	*/

d29 1
a29 1
int     match_hostname(const char *host, const char *pattern, u_int len);
@


1.1.2.4
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: match.h,v 1.7 2001/03/10 17:51:04 markus Exp $	*/
a31 6

/*
 * Returns first item from client-list that is also supported by server-list,
 * caller must xfree() returned string.
 */
char	*match_list(const char *client, const char *server, u_int *next);
@


