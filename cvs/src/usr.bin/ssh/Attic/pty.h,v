head	1.9;
access;
symbols
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.9
date	2001.03.04.01.46.29;	author djm;	state dead;
branches;
next	1.8;

1.8
date	2000.09.07.20.27.52;	author deraadt;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2000.06.20.01.39.43;	author markus;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.14.10.30.32;	author markus;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2000.02.15.16.52.58;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	99.12.06.12.10.12;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.11.24.19.53.49;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	99.11.24.00.26.02;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.09.26.20.53.36;	author deraadt;	state Exp;
branches;
next	;

1.6.2.1
date	2000.09.01.18.23.21;	author jason;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2000.11.08.21.31.05;	author jason;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2001.03.12.15.44.13;	author jason;	state Exp;
branches;
next	1.6.2.4;

1.6.2.4
date	2001.03.21.18.52.56;	author jason;	state dead;
branches;
next	;

1.8.2.1
date	2001.03.21.19.46.27;	author jason;	state dead;
branches;
next	;


desc
@@


1.9
log
@Rename pty.[ch] -> sshpty.[ch] and login.[ch] to sshlogin.[ch] to avoid
header conflicts in portable; ok markus@@
@
text
@/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 * Functions for allocating a pseudo-terminal and making it the controlling
 * tty.
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */

/* RCSID("$OpenBSD: pty.h,v 1.8 2000/09/07 20:27:52 deraadt Exp $"); */

#ifndef PTY_H
#define PTY_H

/*
 * Allocates and opens a pty.  Returns 0 if no pty could be allocated, or
 * nonzero if a pty was successfully allocated.  On success, open file
 * descriptors for the pty and tty sides and the name of the tty side are
 * returned (the buffer must be able to hold at least 64 characters).
 */
int     pty_allocate(int *ptyfd, int *ttyfd, char *ttyname, int ttynamelen);

/*
 * Releases the tty.  Its ownership is returned to root, and permissions to
 * 0666.
 */
void    pty_release(const char *ttyname);

/*
 * Makes the tty the processes controlling tty and sets it to sane modes.
 * This may need to reopen the tty to get rid of possible eavesdroppers.
 */
void    pty_make_controlling_tty(int *ttyfd, const char *ttyname);

/* Changes the window size associated with the pty. */
void
pty_change_window_size(int ptyfd, int row, int col,
    int xpixel, int ypixel);

void	pty_setowner(struct passwd *pw, const char *ttyname);

#endif				/* PTY_H */
@


1.8
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d15 1
a15 1
/* RCSID("$OpenBSD: pty.h,v 1.7 2000/06/20 01:39:43 markus Exp $"); */
@


1.8.2.1
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@d15 1
a15 1
/* RCSID("$OpenBSD: pty.h,v 1.8 2000/09/07 20:27:52 deraadt Exp $"); */
@


1.7
log
@OpenBSD tag
@
text
@a1 3
 *
 * pty.h
 *
a2 1
 *
a4 3
 *
 * Created: Fri Mar 17 05:03:28 1995 ylo
 *
d7 6
d15 1
a15 1
/* RCSID("$OpenBSD: pty.h,v 1.6 2000/04/14 10:30:32 markus Exp $"); */
@


1.6
log
@whitespace cleanup
@
text
@d16 1
a16 1
/* RCSID("$Id: pty.h,v 1.5 2000/02/15 16:52:58 markus Exp $"); */
@


1.6.2.1
log
@Pull in the rest of openssh-2.2.0 to 2.7 branch (luvin' cvs...)
@
text
@d16 1
a16 1
/* RCSID("$OpenBSD: pty.h,v 1.7 2000/06/20 01:39:43 markus Exp $"); */
@


1.6.2.2
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@d2 3
d6 1
d9 3
a13 6
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
d16 1
a16 1
/* RCSID("$OpenBSD: pty.h,v 1.8 2000/09/07 20:27:52 deraadt Exp $"); */
@


1.6.2.3
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@@


1.6.2.4
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@d15 1
a15 1
/* RCSID("$OpenBSD: pty.h,v 1.6.2.3 2001/03/12 15:44:13 jason Exp $"); */
@


1.5
log
@register cleanup for pty earlier. move code for pty-owner handling to pty.c
ok provos@@, dugsong@@
@
text
@d2 1
a2 1
 * 
d4 1
a4 1
 * 
d6 1
a6 1
 * 
d9 1
a9 1
 * 
d11 1
a11 1
 * 
d16 1
a16 1
/* RCSID("$Id: pty.h,v 1.4 1999/12/06 12:10:12 deraadt Exp $"); */
d42 1
a42 1
void 
@


1.4
log
@use openpty() if it exists (it does on BSD4_4)
@
text
@d16 1
a16 1
/* RCSID("$Id: pty.h,v 1.3 1999/11/24 19:53:49 markus Exp $"); */
d45 2
@


1.3
log
@KNF, final part 3
@
text
@d16 1
a16 1
/* RCSID("$Id: pty.h,v 1.2 1999/11/24 00:26:02 deraadt Exp $"); */
d27 1
a27 1
int     pty_allocate(int *ptyfd, int *ttyfd, char *ttyname);
@


1.2
log
@much more KNF
@
text
@d16 1
a16 1
/* RCSID("$Id: pty.h,v 1.1 1999/09/26 20:53:36 deraadt Exp $"); */
d21 6
a26 4
/* Allocates and opens a pty.  Returns 0 if no pty could be allocated,
   or nonzero if a pty was successfully allocated.  On success, open file
   descriptors for the pty and tty sides and the name of the tty side are
   returned (the buffer must be able to hold at least 64 characters). */
d29 4
a32 2
/* Releases the tty.  Its ownership is returned to root, and permissions to
   0666. */
d35 4
a38 2
/* Makes the tty the processes controlling tty and sets it to sane modes.
   This may need to reopen the tty to get rid of possible eavesdroppers. */
@


1.1
log
@i bet a lot of people didn't know what ssh 1.2.16 had a nice license.
well, except for the patent issues.  someone in sweden (forget their
name at the moment) cleaned out most of the patented code, and now
this code removes rsa code.  when this is done, it will link against
libssl, but the work isn't completely done yet.  then we need to bring
this up to modern days, featurewise.
@
text
@d2 13
d16 1
a16 15
pty.h

Author: Tatu Ylonen <ylo@@cs.hut.fi>

Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
                   All rights reserved

Created: Fri Mar 17 05:03:28 1995 ylo

Functions for allocating a pseudo-terminal and making it the controlling
tty.

*/

/* RCSID("$Id: pty.h,v 1.2 1999/05/04 11:58:57 bg Exp $"); */
d23 1
a23 1
   descriptors for the pty and tty sides and the name of the tty side are 
d25 1
a25 1
int pty_allocate(int *ptyfd, int *ttyfd, char *ttyname);
d29 1
a29 1
void pty_release(const char *ttyname);
d31 1
a31 1
/* Makes the tty the processes controlling tty and sets it to sane modes. 
d33 1
a33 1
void pty_make_controlling_tty(int *ttyfd, const char *ttyname);
d36 3
a38 2
void pty_change_window_size(int ptyfd, int row, int col,
			    int xpixel, int ypixel);
d40 1
a40 1
#endif /* PTY_H */
@

