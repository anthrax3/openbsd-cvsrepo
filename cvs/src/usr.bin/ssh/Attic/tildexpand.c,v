head	1.16;
access;
symbols
	OPENBSD_3_7:1.15.0.4
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.2
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.13.0.8
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.6
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.4
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.16
date	2005.04.09.04.32.54;	author djm;	state dead;
branches;
next	1.15;

1.15
date	2004.05.21.08.43.03;	author markus;	state Exp;
branches;
next	1.14;

1.14
date	2004.05.08.00.01.37;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.23.03.25.50;	author deraadt;	state Exp;
branches
	1.13.6.1
	1.13.8.1;
next	1.12;

1.12
date	2001.08.11.22.51.27;	author jakob;	state Exp;
branches
	1.12.2.1
	1.12.4.1;
next	1.11;

1.11
date	2001.02.08.19.30.53;	author itojun;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2001.01.21.19.06.01;	author markus;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.19.23.17.59;	author markus;	state Exp;
branches;
next	1.8;

1.8
date	2000.09.07.20.27.55;	author deraadt;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2000.06.20.01.39.45;	author markus;	state Exp;
branches;
next	1.6;

1.6
date	99.12.06.19.10.38;	author deraadt;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	99.11.24.19.53.54;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	99.11.24.00.26.03;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.11.23.22.25.56;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	99.09.30.16.48.48;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.09.26.20.53.38;	author deraadt;	state Exp;
branches;
next	;

1.6.2.1
date	2000.09.01.18.23.25;	author jason;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2000.11.08.21.31.34;	author jason;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2001.03.12.15.44.18;	author jason;	state Exp;
branches;
next	1.6.2.4;

1.6.2.4
date	2001.03.21.18.53.18;	author jason;	state Exp;
branches;
next	;

1.8.2.1
date	2001.02.16.20.13.23;	author jason;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2001.02.19.17.19.40;	author jason;	state Exp;
branches;
next	1.8.2.3;

1.8.2.3
date	2001.03.21.19.46.32;	author jason;	state Exp;
branches;
next	1.8.2.4;

1.8.2.4
date	2001.05.07.21.09.38;	author jason;	state Exp;
branches;
next	1.8.2.5;

1.8.2.5
date	2001.09.27.00.15.43;	author miod;	state Exp;
branches;
next	;

1.11.2.1
date	2001.09.27.19.03.56;	author jason;	state Exp;
branches;
next	1.11.2.2;

1.11.2.2
date	2002.03.09.00.20.45;	author miod;	state Exp;
branches;
next	;

1.12.2.1
date	2002.06.26.18.22.37;	author miod;	state Exp;
branches;
next	;

1.12.4.1
date	2002.06.26.15.30.39;	author jason;	state Exp;
branches;
next	;

1.13.6.1
date	2004.08.19.22.37.33;	author brad;	state Exp;
branches;
next	;

1.13.8.1
date	2004.08.19.04.13.28;	author brad;	state Exp;
branches;
next	;


desc
@@


1.16
log
@replace tilde_expand_filename with a simpler implementation, ahead of more
whacking; ok deraadt@@
@
text
@/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */

#include "includes.h"
RCSID("$OpenBSD: tildexpand.c,v 1.15 2004/05/21 08:43:03 markus Exp $");

#include "xmalloc.h"
#include "log.h"
#include "misc.h"

/*
 * Expands tildes in the file name.  Returns data allocated by xmalloc.
 * Warning: this calls getpw*.
 */
char *
tilde_expand_filename(const char *filename, uid_t my_uid)
{
	const char *cp;
	u_int userlen;
	char *expanded;
	struct passwd *pw;
	char user[100];
	int len;

	/* Return immediately if no tilde. */
	if (filename[0] != '~')
		return xstrdup(filename);

	/* Skip the tilde. */
	filename++;

	/* Find where the username ends. */
	cp = strchr(filename, '/');
	if (cp)
		userlen = cp - filename;	/* Something after username. */
	else
		userlen = strlen(filename);	/* Nothing after username. */
	if (userlen == 0)
		pw = getpwuid(my_uid);		/* Own home directory. */
	else {
		/* Tilde refers to someone elses home directory. */
		if (userlen > sizeof(user) - 1)
			fatal("User name after tilde too long.");
		memcpy(user, filename, userlen);
		user[userlen] = 0;
		pw = getpwnam(user);
	}
	if (!pw)
		fatal("Unknown user %100s.", user);

	/* If referring to someones home directory, return it now. */
	if (!cp) {
		/* Only home directory specified */
		return xstrdup(pw->pw_dir);
	}
	/* Build a path combining the specified directory and path. */
	len = strlen(pw->pw_dir) + strlen(cp + 1) + 2;
	if (len > MAXPATHLEN)
		fatal("Home directory too long (%d > %d", len-1, MAXPATHLEN-1);
	expanded = xmalloc(len);
	snprintf(expanded, len, "%s%s%s", pw->pw_dir,
	    strcmp(pw->pw_dir, "/") ? "/" : "", cp + 1);
	return expanded;
}
@


1.15
log
@add prototypes for -Wall; ok djm
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.14 2004/05/08 00:01:37 deraadt Exp $");
@


1.14
log
@make two tiny header files go away; djm ok
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.13 2002/06/23 03:25:50 deraadt Exp $");
d18 1
@


1.13
log
@KNF
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.12 2001/08/11 22:51:27 jakob Exp $");
a17 1
#include "tildexpand.h"
@


1.13.6.1
log
@upgrade to OpenSSH 3.9
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.15 2004/05/21 08:43:03 markus Exp $");
d18 1
a18 1
#include "misc.h"
@


1.13.8.1
log
@upgrade to OpenSSH 3.9
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.15 2004/05/21 08:43:03 markus Exp $");
d18 1
a18 1
#include "misc.h"
@


1.12
log
@fix more paths beginning with "//"; <bradshaw@@staff.crosswalk.com>. ok markus@@
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.11 2001/02/08 19:30:53 itojun Exp $");
d70 2
a71 1
	snprintf(expanded, len, "%s%s%s", pw->pw_dir, strcmp(pw->pw_dir, "/") ? "/" : "", cp + 1);
@


1.12.2.1
log
@There was an update to OpenSSH 3.4, and people rejoiced.
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.12 2001/08/11 22:51:27 jakob Exp $");
d70 1
a70 2
	snprintf(expanded, len, "%s%s%s", pw->pw_dir,
	    strcmp(pw->pw_dir, "/") ? "/" : "", cp + 1);
@


1.12.4.1
log
@Pull in OpenSSH-3.4
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.13 2002/06/23 03:25:50 deraadt Exp $");
d70 1
a70 2
	snprintf(expanded, len, "%s%s%s", pw->pw_dir,
	    strcmp(pw->pw_dir, "/") ? "/" : "", cp + 1);
@


1.11
log
@sync with netbsd tree changes.
- more strict prototypes, include necessary headers
- use paths.h/pathnames.h decls
- size_t typecase to int -> u_long
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.10 2001/01/21 19:06:01 markus Exp $");
d70 1
a70 1
	snprintf(expanded, len, "%s/%s", pw->pw_dir, cp + 1);
@


1.11.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.12 2001/08/11 22:51:27 jakob Exp $");
d70 1
a70 1
	snprintf(expanded, len, "%s%s%s", pw->pw_dir, strcmp(pw->pw_dir, "/") ? "/" : "", cp + 1);
@


1.11.2.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@@


1.10
log
@split ssh.h and try to cleanup the #include mess. remove unnecessary #includes.
rename util.[ch] -> misc.[ch]
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.9 2000/12/19 23:17:59 markus Exp $");
d18 1
@


1.9
log
@replace 'unsigned bla' with 'u_bla' everywhere. also, replace 'char unsigned'
with u_char.
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.8 2000/09/07 20:27:55 deraadt Exp $");
d17 1
a17 1
#include "ssh.h"
@


1.8
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.7 2000/06/20 01:39:45 markus Exp $");
d27 1
a27 1
	unsigned int userlen;
@


1.8.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.11 2001/02/08 19:30:53 itojun Exp $");
d17 1
a17 2
#include "log.h"
#include "tildexpand.h"
d27 1
a27 1
	u_int userlen;
@


1.8.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.8.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@@


1.8.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@@


1.8.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.12 2001/08/11 22:51:27 jakob Exp $");
d70 1
a70 1
	snprintf(expanded, len, "%s%s%s", pw->pw_dir, strcmp(pw->pw_dir, "/") ? "/" : "", cp + 1);
@


1.7
log
@OpenBSD tag
@
text
@d5 6
a10 1
 * Created: Wed Jul 12 01:07:36 1995 ylo
d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.6 1999/12/06 19:10:38 deraadt Exp $");
@


1.6
log
@check for ~ expansion past MAXPATHLEN
@
text
@d9 1
a9 1
RCSID("$Id: tildexpand.c,v 1.5 1999/11/24 19:53:54 markus Exp $");
@


1.6.2.1
log
@Pull in the rest of openssh-2.2.0 to 2.7 branch (luvin' cvs...)
@
text
@d9 1
a9 1
RCSID("$OpenBSD: tildexpand.c,v 1.7 2000/06/20 01:39:45 markus Exp $");
@


1.6.2.2
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@d5 1
a5 6
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
d9 1
a9 1
RCSID("$OpenBSD: tildexpand.c,v 1.8 2000/09/07 20:27:55 deraadt Exp $");
@


1.6.2.3
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@d14 1
a14 1
RCSID("$OpenBSD: tildexpand.c,v 1.11 2001/02/08 19:30:53 itojun Exp $");
d17 1
a17 2
#include "log.h"
#include "tildexpand.h"
d27 1
a27 1
	u_int userlen;
@


1.6.2.4
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@@


1.5
log
@KNF, final part 3
@
text
@d9 1
a9 1
RCSID("$Id: tildexpand.c,v 1.4 1999/11/24 00:26:03 deraadt Exp $");
d26 1
d60 5
a64 2
	expanded = xmalloc(strlen(pw->pw_dir) + strlen(cp + 1) + 2);
	sprintf(expanded, "%s/%s", pw->pw_dir, cp + 1);
@


1.4
log
@much more KNF
@
text
@d9 1
a9 1
RCSID("$Id: tildexpand.c,v 1.3 1999/11/23 22:25:56 markus Exp $");
d41 1
a41 1
		pw = getpwuid(my_uid);	/* Own home directory. */
a49 1
	/* Check that we found the user. */
d54 2
a55 1
	if (!cp) {		/* Only home directory specified */
@


1.3
log
@KNF part 1
@
text
@d2 5
a6 11

tildexpand.c

Author: Tatu Ylonen <ylo@@cs.hut.fi>

Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
                   All rights reserved

Created: Wed Jul 12 01:07:36 1995 ylo

*/
d9 1
a9 1
RCSID("$Id: tildexpand.c,v 1.2 1999/09/30 16:48:48 deraadt Exp $");
d14 4
a17 3
/* Expands tildes in the file name.  Returns data allocated by xmalloc.
   Warning: this calls getpw*. */

d37 1
a37 1
		userlen = cp - filename;	/* Have something after username. */
d39 1
a39 1
		userlen = strlen(filename);	/* Nothign after username. */
@


1.2
log
@spelling
@
text
@d15 1
a15 1
RCSID("$Id: tildexpand.c,v 1.1 1999/09/26 20:53:38 deraadt Exp $");
d23 2
a24 1
char *tilde_expand_filename(const char *filename, uid_t my_uid)
d26 41
a66 45
  const char *cp;
  unsigned int userlen;
  char *expanded;
  struct passwd *pw;
  char user[100];

  /* Return immediately if no tilde. */
  if (filename[0] != '~')
    return xstrdup(filename);

  /* Skip the tilde. */
  filename++;

  /* Find where the username ends. */
  cp = strchr(filename, '/');
  if (cp)
    userlen = cp - filename;  /* Have something after username. */
  else
    userlen = strlen(filename); /* Nothign after username. */
  if (userlen == 0)
    pw = getpwuid(my_uid);  /* Own home directory. */
  else
    {
      /* Tilde refers to someone elses home directory. */
      if (userlen > sizeof(user) - 1)
	fatal("User name after tilde too long.");
      memcpy(user, filename, userlen);
      user[userlen] = 0;
      pw = getpwnam(user);
    }

  /* Check that we found the user. */
  if (!pw)
    fatal("Unknown user %100s.", user);
  
  /* If referring to someones home directory, return it now. */
  if (!cp)
    { /* Only home directory specified */
      return xstrdup(pw->pw_dir);
    }
  
  /* Build a path combining the specified directory and path. */
  expanded = xmalloc(strlen(pw->pw_dir) + strlen(cp + 1) + 2);
  sprintf(expanded, "%s/%s", pw->pw_dir, cp + 1);
  return expanded;
@


1.1
log
@i bet a lot of people didn't know what ssh 1.2.16 had a nice license.
well, except for the patent issues.  someone in sweden (forget their
name at the moment) cleaned out most of the patented code, and now
this code removes rsa code.  when this is done, it will link against
libssl, but the work isn't completely done yet.  then we need to bring
this up to modern days, featurewise.
@
text
@d15 1
a15 1
RCSID("$Id: tildexpand.c,v 1.2 1999/05/04 11:59:24 bg Exp $");
d35 1
a35 2

  /* Skiop the tilde. */
@

