head	1.3;
access;
symbols
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_8:1.2.0.2;
locks; strict;
comment	@ * @;


1.3
date	2001.03.04.01.46.29;	author djm;	state dead;
branches
	1.3.2.1;
next	1.2;

1.2
date	2001.01.29.01.58.16;	author niklas;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.01.21.19.05.51;	author markus;	state Exp;
branches;
next	;

1.2.2.1
date	2001.02.16.20.13.05;	author jason;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.02.19.17.19.03;	author jason;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2001.03.21.19.46.26;	author jason;	state dead;
branches;
next	;

1.3.2.1
date	2001.03.12.15.44.11;	author jason;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2001.03.21.18.52.51;	author jason;	state dead;
branches;
next	;


desc
@@


1.3
log
@Rename pty.[ch] -> sshpty.[ch] and login.[ch] to sshlogin.[ch] to avoid
header conflicts in portable; ok markus@@
@
text
@/*	$OpenBSD: login.h,v 1.2 2001/01/29 01:58:16 niklas Exp $	*/

/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */
#ifndef LOGIN_H
#define LOGIN_H

/*
 * Returns the time when the user last logged in.  Returns 0 if the
 * information is not available.  This must be called before record_login.
 * The host from which the user logged in is stored in buf.
 */
u_long
get_last_login_time(uid_t uid, const char *logname,
    char *buf, u_int bufsize);

/*
 * Records that the user has logged in.  This does many things normally done
 * by login(1).
 */
void
record_login(pid_t pid, const char *ttyname, const char *user, uid_t uid,
    const char *host, struct sockaddr *addr);

/*
 * Records that the user has logged out.  This does many thigs normally done
 * by login(1) or init.
 */
void    record_logout(pid_t pid, const char *ttyname);

#endif
@


1.3.2.1
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@@


1.3.2.2
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: login.h,v 1.3.2.1 2001/03/12 15:44:11 jason Exp $	*/
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.2.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d1 1
a1 1
/*	$OpenBSD: login.h,v 1.2 2001/01/29 01:58:16 niklas Exp $	*/
@


1.2.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.2.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: login.h,v 1.2.2.2 2001/02/19 17:19:03 jason Exp $	*/
@


1.1
log
@split ssh.h and try to cleanup the #include mess. remove unnecessary #includes.
rename util.[ch] -> misc.[ch]
@
text
@d1 2
@

