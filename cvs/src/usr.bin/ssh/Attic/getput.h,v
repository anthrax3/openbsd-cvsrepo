head	1.10;
access;
symbols
	OPENBSD_3_9:1.8.0.18
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.16
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.14
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.12
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.10
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.8
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.4
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2006.03.30.09.58.15;	author djm;	state dead;
branches;
next	1.9;

1.9
date	2006.03.25.22.22.43;	author djm;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.04.17.27.39;	author stevesk;	state Exp;
branches
	1.8.16.1
	1.8.18.1;
next	1.7;

1.7
date	2001.01.10.22.56.22;	author markus;	state Exp;
branches
	1.7.2.1
	1.7.4.1;
next	1.6;

1.6
date	2000.12.19.23.17.56;	author markus;	state Exp;
branches;
next	1.5;

1.5
date	2000.09.07.20.27.51;	author deraadt;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2000.06.20.01.39.41;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.14.10.30.31;	author markus;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	99.11.24.00.26.02;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.09.26.20.53.36;	author deraadt;	state Exp;
branches;
next	;

1.3.2.1
date	2000.09.01.18.23.20;	author jason;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2000.11.08.21.30.47;	author jason;	state Exp;
branches;
next	1.3.2.3;

1.3.2.3
date	2001.03.12.15.44.10;	author jason;	state Exp;
branches;
next	1.3.2.4;

1.3.2.4
date	2001.03.21.18.52.45;	author jason;	state Exp;
branches;
next	;

1.5.2.1
date	2001.02.16.20.13.02;	author jason;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2001.02.19.17.18.56;	author jason;	state Exp;
branches;
next	1.5.2.3;

1.5.2.3
date	2001.03.21.19.46.25;	author jason;	state Exp;
branches;
next	1.5.2.4;

1.5.2.4
date	2001.05.07.21.09.29;	author jason;	state Exp;
branches;
next	1.5.2.5;

1.5.2.5
date	2001.09.27.00.15.42;	author miod;	state Exp;
branches;
next	1.5.2.6;

1.5.2.6
date	2002.03.08.17.04.42;	author brad;	state Exp;
branches;
next	;

1.7.2.1
date	2002.03.09.00.20.44;	author miod;	state Exp;
branches;
next	;

1.7.4.1
date	2002.03.07.17.37.46;	author jason;	state Exp;
branches;
next	;

1.8.16.1
date	2006.10.06.03.19.32;	author brad;	state dead;
branches;
next	;

1.8.18.1
date	2006.09.30.04.06.50;	author brad;	state dead;
branches;
next	;


desc
@@


1.10
log
@replace {GET,PUT}_XXBIT macros with functionally similar functions,
silencing a heap of lint warnings. also allows them to use
__bounded__ checking which can't be applied to macros; requested
by and feedback from deraadt@@
@
text
@/* $OpenBSD: getput.h,v 1.9 2006/03/25 22:22:43 djm Exp $ */

/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 * Macros for storing and retrieving data in msb first and lsb first order.
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */

#ifndef GETPUT_H
#define GETPUT_H

/*------------ macros for storing/extracting msb first words -------------*/

#define GET_64BIT(cp) (((u_int64_t)(u_char)(cp)[0] << 56) | \
		       ((u_int64_t)(u_char)(cp)[1] << 48) | \
		       ((u_int64_t)(u_char)(cp)[2] << 40) | \
		       ((u_int64_t)(u_char)(cp)[3] << 32) | \
		       ((u_int64_t)(u_char)(cp)[4] << 24) | \
		       ((u_int64_t)(u_char)(cp)[5] << 16) | \
		       ((u_int64_t)(u_char)(cp)[6] << 8) | \
		       ((u_int64_t)(u_char)(cp)[7]))

#define GET_32BIT(cp) (((u_long)(u_char)(cp)[0] << 24) | \
		       ((u_long)(u_char)(cp)[1] << 16) | \
		       ((u_long)(u_char)(cp)[2] << 8) | \
		       ((u_long)(u_char)(cp)[3]))

#define GET_16BIT(cp) (((u_long)(u_char)(cp)[0] << 8) | \
		       ((u_long)(u_char)(cp)[1]))

#define PUT_64BIT(cp, value) do { \
  (cp)[0] = (value) >> 56; \
  (cp)[1] = (value) >> 48; \
  (cp)[2] = (value) >> 40; \
  (cp)[3] = (value) >> 32; \
  (cp)[4] = (value) >> 24; \
  (cp)[5] = (value) >> 16; \
  (cp)[6] = (value) >> 8; \
  (cp)[7] = (value); } while (0)

#define PUT_32BIT(cp, value) do { \
  (cp)[0] = (value) >> 24; \
  (cp)[1] = (value) >> 16; \
  (cp)[2] = (value) >> 8; \
  (cp)[3] = (value); } while (0)

#define PUT_16BIT(cp, value) do { \
  (cp)[0] = (value) >> 8; \
  (cp)[1] = (value); } while (0)

#endif				/* GETPUT_H */
@


1.9
log
@standardise spacing in $OpenBSD$ tags; requested by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: getput.h,v 1.8 2002/03/04 17:27:39 stevesk Exp $ */
@


1.8
log
@$OpenBSD$ and RCSID() cleanup: don't use RCSID() in .h files; add
missing RCSID() to .c files and remove dup /*$OpenBSD$*/ from .c
files.  ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getput.h,v 1.7 2001/01/10 22:56:22 markus Exp $	*/
@


1.8.16.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/*	$OpenBSD: getput.h,v 1.8 2002/03/04 17:27:39 stevesk Exp $	*/
@


1.8.18.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/*	$OpenBSD: getput.h,v 1.8 2002/03/04 17:27:39 stevesk Exp $	*/
@


1.7
log
@cleanup sftp-server implementation:
	add buffer_get_int64, buffer_put_int64, GET_64BIT, PUT_64BIT
	parse SSH2_FILEXFER_ATTR_EXTENDED
	send SSH2_FX_EOF if readdir returns no more entries
	reply to SSH2_FXP_EXTENDED messages
	use #defines from the draft.
	move #definitions to sftp.h
more info:
http://www.ietf.org/internet-drafts/draft-ietf-secsh-filexfer-00.txt
@
text
@d1 2
a14 2

/* RCSID("$OpenBSD: getput.h,v 1.6 2000/12/19 23:17:56 markus Exp $"); */
@


1.7.2.1
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@a0 2
/*	$OpenBSD: getput.h,v 1.8 2002/03/04 17:27:39 stevesk Exp $	*/

d13 2
@


1.7.4.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@a0 2
/*	$OpenBSD: getput.h,v 1.8 2002/03/04 17:27:39 stevesk Exp $	*/

d13 2
@


1.6
log
@replace 'unsigned bla' with 'u_bla' everywhere. also, replace 'char unsigned'
with u_char.
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: getput.h,v 1.5 2000/09/07 20:27:51 deraadt Exp $"); */
d21 9
d38 10
a56 22

/*------------ macros for storing/extracting lsb first words -------------*/

#define GET_32BIT_LSB_FIRST(cp) \
  (((u_long)(u_char)(cp)[0]) | \
  ((u_long)(u_char)(cp)[1] << 8) | \
  ((u_long)(u_char)(cp)[2] << 16) | \
  ((u_long)(u_char)(cp)[3] << 24))

#define GET_16BIT_LSB_FIRST(cp) \
  (((u_long)(u_char)(cp)[0]) | \
  ((u_long)(u_char)(cp)[1] << 8))

#define PUT_32BIT_LSB_FIRST(cp, value) do { \
  (cp)[0] = (value); \
  (cp)[1] = (value) >> 8; \
  (cp)[2] = (value) >> 16; \
  (cp)[3] = (value) >> 24; } while (0)

#define PUT_16BIT_LSB_FIRST(cp, value) do { \
  (cp)[0] = (value); \
  (cp)[1] = (value) >> 8; } while (0)
@


1.5
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: getput.h,v 1.4 2000/06/20 01:39:41 markus Exp $"); */
d21 4
a24 4
#define GET_32BIT(cp) (((unsigned long)(unsigned char)(cp)[0] << 24) | \
		       ((unsigned long)(unsigned char)(cp)[1] << 16) | \
		       ((unsigned long)(unsigned char)(cp)[2] << 8) | \
		       ((unsigned long)(unsigned char)(cp)[3]))
d26 2
a27 2
#define GET_16BIT(cp) (((unsigned long)(unsigned char)(cp)[0] << 8) | \
		       ((unsigned long)(unsigned char)(cp)[1]))
d42 4
a45 4
  (((unsigned long)(unsigned char)(cp)[0]) | \
  ((unsigned long)(unsigned char)(cp)[1] << 8) | \
  ((unsigned long)(unsigned char)(cp)[2] << 16) | \
  ((unsigned long)(unsigned char)(cp)[3] << 24))
d48 2
a49 2
  (((unsigned long)(unsigned char)(cp)[0]) | \
  ((unsigned long)(unsigned char)(cp)[1] << 8))
@


1.5.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: getput.h,v 1.7 2001/01/10 22:56:22 markus Exp $"); */
d21 7
a27 26
#define GET_64BIT(cp) (((u_int64_t)(u_char)(cp)[0] << 56) | \
		       ((u_int64_t)(u_char)(cp)[1] << 48) | \
		       ((u_int64_t)(u_char)(cp)[2] << 40) | \
		       ((u_int64_t)(u_char)(cp)[3] << 32) | \
		       ((u_int64_t)(u_char)(cp)[4] << 24) | \
		       ((u_int64_t)(u_char)(cp)[5] << 16) | \
		       ((u_int64_t)(u_char)(cp)[6] << 8) | \
		       ((u_int64_t)(u_char)(cp)[7]))

#define GET_32BIT(cp) (((u_long)(u_char)(cp)[0] << 24) | \
		       ((u_long)(u_char)(cp)[1] << 16) | \
		       ((u_long)(u_char)(cp)[2] << 8) | \
		       ((u_long)(u_char)(cp)[3]))

#define GET_16BIT(cp) (((u_long)(u_char)(cp)[0] << 8) | \
		       ((u_long)(u_char)(cp)[1]))

#define PUT_64BIT(cp, value) do { \
  (cp)[0] = (value) >> 56; \
  (cp)[1] = (value) >> 48; \
  (cp)[2] = (value) >> 40; \
  (cp)[3] = (value) >> 32; \
  (cp)[4] = (value) >> 24; \
  (cp)[5] = (value) >> 16; \
  (cp)[6] = (value) >> 8; \
  (cp)[7] = (value); } while (0)
d38 22
@


1.5.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.5.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@@


1.5.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@@


1.5.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@@


1.5.2.6
log
@Merge OpenSSH 3.1.
@
text
@a0 2
/*	$OpenBSD: getput.h,v 1.8 2002/03/04 17:27:39 stevesk Exp $	*/

d13 2
@


1.4
log
@OpenBSD tag
@
text
@a1 3
 *
 * getput.h
 *
a2 1
 *
a4 3
 *
 * Created: Wed Jun 28 22:36:30 1995 ylo
 *
d7 5
d14 1
a14 1
/* RCSID("$OpenBSD: getput.h,v 1.3 2000/04/14 10:30:31 markus Exp $"); */
@


1.3
log
@whitespace cleanup
@
text
@d16 1
a16 1
/* RCSID("$Id: getput.h,v 1.2 1999/11/24 00:26:02 deraadt Exp $"); */
@


1.3.2.1
log
@Pull in the rest of openssh-2.2.0 to 2.7 branch (luvin' cvs...)
@
text
@d16 1
a16 1
/* RCSID("$OpenBSD: getput.h,v 1.4 2000/06/20 01:39:41 markus Exp $"); */
@


1.3.2.2
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@d2 3
d6 1
d9 3
a13 5
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
d16 1
a16 1
/* RCSID("$OpenBSD: getput.h,v 1.5 2000/09/07 20:27:51 deraadt Exp $"); */
@


1.3.2.3
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: getput.h,v 1.7 2001/01/10 22:56:22 markus Exp $"); */
d21 7
a27 26
#define GET_64BIT(cp) (((u_int64_t)(u_char)(cp)[0] << 56) | \
		       ((u_int64_t)(u_char)(cp)[1] << 48) | \
		       ((u_int64_t)(u_char)(cp)[2] << 40) | \
		       ((u_int64_t)(u_char)(cp)[3] << 32) | \
		       ((u_int64_t)(u_char)(cp)[4] << 24) | \
		       ((u_int64_t)(u_char)(cp)[5] << 16) | \
		       ((u_int64_t)(u_char)(cp)[6] << 8) | \
		       ((u_int64_t)(u_char)(cp)[7]))

#define GET_32BIT(cp) (((u_long)(u_char)(cp)[0] << 24) | \
		       ((u_long)(u_char)(cp)[1] << 16) | \
		       ((u_long)(u_char)(cp)[2] << 8) | \
		       ((u_long)(u_char)(cp)[3]))

#define GET_16BIT(cp) (((u_long)(u_char)(cp)[0] << 8) | \
		       ((u_long)(u_char)(cp)[1]))

#define PUT_64BIT(cp, value) do { \
  (cp)[0] = (value) >> 56; \
  (cp)[1] = (value) >> 48; \
  (cp)[2] = (value) >> 40; \
  (cp)[3] = (value) >> 32; \
  (cp)[4] = (value) >> 24; \
  (cp)[5] = (value) >> 16; \
  (cp)[6] = (value) >> 8; \
  (cp)[7] = (value); } while (0)
d38 22
@


1.3.2.4
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@@


1.2
log
@much more KNF
@
text
@d2 1
a2 1
 * 
d4 1
a4 1
 * 
d6 1
a6 1
 * 
d9 1
a9 1
 * 
d11 1
a11 1
 * 
d13 1
a13 1
 * 
d16 1
a16 1
/* RCSID("$Id: getput.h,v 1.1 1999/09/26 20:53:36 deraadt Exp $"); */
d24 1
a24 1
  		       ((unsigned long)(unsigned char)(cp)[1] << 16) | \
@


1.1
log
@i bet a lot of people didn't know what ssh 1.2.16 had a nice license.
well, except for the patent issues.  someone in sweden (forget their
name at the moment) cleaned out most of the patented code, and now
this code removes rsa code.  when this is done, it will link against
libssl, but the work isn't completely done yet.  then we need to bring
this up to modern days, featurewise.
@
text
@d2 13
d16 1
a16 14
getput.h

Author: Tatu Ylonen <ylo@@cs.hut.fi>

Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
                   All rights reserved

Created: Wed Jun 28 22:36:30 1995 ylo

Macros for storing and retrieving data in msb first and lsb first order.

*/

/* RCSID("$Id: getput.h,v 1.2 1999/05/04 11:58:43 bg Exp $"); */
d63 1
a63 2
#endif /* GETPUT_H */

@

