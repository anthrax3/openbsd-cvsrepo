head	1.10;
access;
symbols
	OPENBSD_4_6:1.9.0.26
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.22
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.20
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.18
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.16
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.12
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.14
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.10
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.8
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.8.0.8
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.5.0.6
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_8:1.5.0.2;
locks; strict;
comment	@# @;


1.10
date	2010.02.08.19.19.33;	author markus;	state dead;
branches;
next	1.9;

1.9
date	2003.11.21.11.57.02;	author djm;	state Exp;
branches;
next	1.8;

1.8
date	2002.03.26.18.56.23;	author rees;	state Exp;
branches
	1.8.6.1
	1.8.8.1;
next	1.7;

1.7
date	2002.03.25.16.47.17;	author rees;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.21.22.44.05;	author rees;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.02.08.58.35;	author jakob;	state Exp;
branches
	1.5.2.1
	1.5.4.1
	1.5.6.1;
next	1.4;

1.4
date	2001.07.27.13.36.56;	author rees;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.26.22.19.42;	author rees;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.26.20.22.13;	author rees;	state Exp;
branches;
next	1.1;

1.1
date	2001.07.17.21.56.20;	author markus;	state Exp;
branches;
next	;

1.5.2.1
date	2001.09.27.18.27.43;	author miod;	state Exp;
branches;
next	;

1.5.4.1
date	2001.09.27.19.03.54;	author jason;	state Exp;
branches;
next	1.5.4.2;

1.5.4.2
date	2002.06.02.22.56.09;	author miod;	state Exp;
branches;
next	;

1.5.6.1
date	2002.05.17.00.03.23;	author miod;	state Exp;
branches;
next	;

1.8.6.1
date	2004.03.04.18.18.14;	author brad;	state Exp;
branches;
next	;

1.8.8.1
date	2004.02.28.03.51.32;	author brad;	state Exp;
branches;
next	;


desc
@@


1.10
log
@obsolete
@
text
@How to use smartcards with OpenSSH?

OpenSSH contains experimental support for authentication using
Cyberflex smartcards and TODOS card readers. To enable this you
need to:

(1) enable SMARTCARD support in OpenSSH:

	$ vi /usr/src/usr.bin/ssh/Makefile.inc
	and uncomment
		CFLAGS+=	-DSMARTCARD
		LDADD+=	-lsectok

(2) If you have used a previous version of ssh with your card, you
    must remove the old applet and keys.

	$ sectok
	sectok> login -d
	sectok> junload Ssh.bin
	sectok> delete 0012
	sectok> delete sh
	sectok> quit

(3) load the Java Cardlet to the Cyberflex card and set card passphrase:

	$ sectok
	sectok> login -d
	sectok> jload /usr/libdata/ssh/Ssh.bin
	sectok> setpass
	Enter new AUT0 passphrase:
	Re-enter passphrase:
	sectok> quit

	Do not forget the passphrase.  There is no way to
	recover if you do.

	IMPORTANT WARNING: If you attempt to login with the
	wrong passphrase three times in a row, you will
	destroy your card.

(4) load a RSA key to the card:

	$ ssh-keygen -f /path/to/rsakey -U 1
	(where 1 is the reader number, you can also try 0)

	In spite of the name, this does not generate a key.
	It just loads an already existing key on to the card.

(5) tell the ssh client to use the card reader:

	$ ssh -I 1 otherhost

(6) or tell the agent (don't forget to restart) to use the smartcard:

	$ ssh-add -s 1

(7) Optional: If you don't want to use a card passphrase, change the
    acl on the private key file:

	$ sectok
	sectok> login -d
	sectok> acl 0012 world: w
	 world: w
	 AUT0: w inval
	sectok> quit

	If you do this, anyone who has access to your card
	can assume your identity.  This is not recommended.

-markus,
Tue Jul 17 23:54:51 CEST 2001

$OpenBSD: README.smartcard,v 1.9 2003/11/21 11:57:02 djm Exp $
@


1.9
log
@unexpand and delete whitespace at EOL; ok markus@@
@
text
@d73 1
a73 1
$OpenBSD: README.smartcard,v 1.8 2002/03/26 18:56:23 rees Exp $
@


1.8
log
@Add instructions for changing acl on private key file
@
text
@d30 2
a31 2
	Enter new AUT0 passphrase: 
	Re-enter passphrase: 
d62 3
a64 3
	sectok> acl 0012 world: w 
	 world: w 
	 AUT0: w inval 
d73 1
a73 1
$OpenBSD: README.smartcard,v 1.7 2002/03/25 16:47:17 rees Exp $
@


1.8.6.1
log
@upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8
@
text
@d30 2
a31 2
	Enter new AUT0 passphrase:
	Re-enter passphrase:
d62 3
a64 3
	sectok> acl 0012 world: w
	 world: w
	 AUT0: w inval
d73 1
a73 1
$OpenBSD: README.smartcard,v 1.9 2003/11/21 11:57:02 djm Exp $
@


1.8.8.1
log
@upgrade to OpenSSH 3.8
@
text
@d30 2
a31 2
	Enter new AUT0 passphrase:
	Re-enter passphrase:
d62 3
a64 3
	sectok> acl 0012 world: w
	 world: w
	 AUT0: w inval
d73 1
a73 1
$OpenBSD: README.smartcard,v 1.9 2003/11/21 11:57:02 djm Exp $
@


1.7
log
@Warn user to remove old applet and keys
Remove warning about using production keys (we now have PIN protection)
@
text
@d57 13
d73 1
a73 1
$OpenBSD: $
@


1.6
log
@Add PIN-protection for secret key.
@
text
@d14 2
a15 1
(2) load the Java Cardlet to the Cyberflex card and set card passphrase:
d20 8
d41 1
a41 9
	If you have loaded an older version of Ssh.bin on
	your card previously, you must unload it and load
	the new one.

(3) load a RSA key to the card:

	please don't use your production RSA keys, since
	with the current version of sectok/ssh-keygen
	the private key file is still readable
d49 1
a49 1
(4) tell the ssh client to use the card reader:
d53 1
a53 1
(5) or tell the agent (don't forget to restart) to use the smartcard:
d59 2
@


1.5
log
@change -u (upload smartcard key) to -U. ok markus@@
@
text
@d7 1
a7 8
(1) install sectok

	$ cd /usr/src/lib/libsectok
	$ make obj depend all install includes
	$ cd /usr/src/usr.bin/sectok
	$ make obj depend all install

(2) enable SMARTCARD support in OpenSSH:
d14 1
a14 1
(3) load the Java Cardlet to the Cyberflex card:
d18 1
d20 3
d25 12
a36 1
(4) load a RSA key to the card:
d48 1
a48 21
(5) optional:

	Change the card password so that only you can
	read the private key:

	$ sectok
	sectok> login -d
	sectok> setpass
	sectok> quit

	This prevents reading the key but not use of the
	key by the card applet.

	Do not forget the passphrase.  There is no way to
	recover if you do.

	IMPORTANT WARNING: If you attempt to login with the
	wrong passphrase three times in a row, you will
	destroy your card.

(6) tell the ssh client to use the card reader:
d52 1
a52 1
(7) or tell the agent (don't forget to restart) to use the smartcard:
@


1.5.6.1
log
@Update OpenSSH to version 3.2.2.
@
text
@d7 8
a14 1
(1) enable SMARTCARD support in OpenSSH:
d21 1
a21 2
(2) If you have used a previous version of ssh with your card, you
    must remove the old applet and keys.
d25 1
a25 3
	sectok> junload Ssh.bin
	sectok> delete 0012
	sectok> delete sh
d28 16
a43 1
(3) load the Java Cardlet to the Cyberflex card and set card passphrase:
a46 1
	sectok> jload /usr/libdata/ssh/Ssh.bin
a47 2
	Enter new AUT0 passphrase: 
	Re-enter passphrase: 
d50 3
d60 1
a60 9
(4) load a RSA key to the card:

	$ ssh-keygen -f /path/to/rsakey -U 1
	(where 1 is the reader number, you can also try 0)

	In spite of the name, this does not generate a key.
	It just loads an already existing key on to the card.

(5) tell the ssh client to use the card reader:
d64 1
a64 1
(6) or tell the agent (don't forget to restart) to use the smartcard:
a67 13
(7) Optional: If you don't want to use a card passphrase, change the
    acl on the private key file:

	$ sectok
	sectok> login -d
	sectok> acl 0012 world: w 
	 world: w 
	 AUT0: w inval 
	sectok> quit

	If you do this, anyone who has access to your card
	can assume your identity.  This is not recommended.

a69 2

$OpenBSD: README.smartcard,v 1.8 2002/03/26 18:56:23 rees Exp $
@


1.5.4.1
log
@Pull in OpenSSH-2.9.9
@
text
@@


1.5.4.2
log
@Upgrade to OpenSSH 3.2.3.

Except for improbable compilation error fixes, this should be the last
commit made to the 2.9-STABLE branche. Have fun upgrading.
@
text
@d7 8
a14 1
(1) enable SMARTCARD support in OpenSSH:
d21 1
a21 2
(2) If you have used a previous version of ssh with your card, you
    must remove the old applet and keys.
d25 1
a25 3
	sectok> junload Ssh.bin
	sectok> delete 0012
	sectok> delete sh
d28 16
a43 1
(3) load the Java Cardlet to the Cyberflex card and set card passphrase:
a46 1
	sectok> jload /usr/libdata/ssh/Ssh.bin
a47 2
	Enter new AUT0 passphrase: 
	Re-enter passphrase: 
d50 3
d60 1
a60 9
(4) load a RSA key to the card:

	$ ssh-keygen -f /path/to/rsakey -U 1
	(where 1 is the reader number, you can also try 0)

	In spite of the name, this does not generate a key.
	It just loads an already existing key on to the card.

(5) tell the ssh client to use the card reader:
d64 1
a64 1
(6) or tell the agent (don't forget to restart) to use the smartcard:
a67 13
(7) Optional: If you don't want to use a card passphrase, change the
    acl on the private key file:

	$ sectok
	sectok> login -d
	sectok> acl 0012 world: w 
	 world: w 
	 AUT0: w inval 
	sectok> quit

	If you do this, anyone who has access to your card
	can assume your identity.  This is not recommended.

a69 2

$OpenBSD: README.smartcard,v 1.8 2002/03/26 18:56:23 rees Exp $
@


1.5.2.1
log
@A few files forgotten during last OpenSSH update. Spotted by naddy@@
@
text
@@


1.4
log
@Add important warning.
@
text
@d34 1
a34 1
	$ ssh-keygen -f /path/to/rsakey -u 1
@


1.3
log
@add instructions for changing the passphrase
@
text
@d56 4
@


1.2
log
@jaut is now login -d
clarify something that confused me.
@
text
@d40 17
a56 1
(5) tell the ssh client to use the card reader:
d60 1
a60 1
(6) or tell the agent (don't forget to restart) to use the smartcard:
@


1.1
log
@some initial info about the smartcard support,
please try this if you have a TODOs reader/card
@
text
@d24 1
a24 1
	sectok> jaut
d37 2
@

