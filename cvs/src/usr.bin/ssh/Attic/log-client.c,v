head	1.16;
access;
symbols
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.16
date	2001.03.03.23.59.33;	author markus;	state dead;
branches;
next	1.15;

1.15
date	2001.01.21.19.05.50;	author markus;	state Exp;
branches;
next	1.14;

1.14
date	2001.01.18.16.20.21;	author markus;	state Exp;
branches;
next	1.13;

1.13
date	2001.01.07.11.28.04;	author markus;	state Exp;
branches;
next	1.12;

1.12
date	2000.09.12.20.53.10;	author markus;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2000.09.07.20.27.51;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2000.08.19.02.57.33;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2000.06.20.01.39.42;	author markus;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.14.10.30.31;	author markus;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2000.02.27.18.50.09;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	99.11.24.00.26.02;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	99.11.23.22.25.53;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	99.11.22.21.02.38;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	99.11.10.23.36.44;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	99.10.16.20.54.54;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	99.09.26.20.53.36;	author deraadt;	state Exp;
branches;
next	;

1.8.2.1
date	2000.09.01.18.23.20;	author jason;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2000.11.08.21.30.54;	author jason;	state Exp;
branches;
next	1.8.2.3;

1.8.2.3
date	2001.03.12.15.44.11;	author jason;	state Exp;
branches;
next	1.8.2.4;

1.8.2.4
date	2001.03.21.18.52.48;	author jason;	state dead;
branches;
next	;

1.12.2.1
date	2001.02.16.20.13.04;	author jason;	state Exp;
branches;
next	1.12.2.2;

1.12.2.2
date	2001.02.19.17.19.01;	author jason;	state Exp;
branches;
next	1.12.2.3;

1.12.2.3
date	2001.03.21.19.46.25;	author jason;	state dead;
branches;
next	;


desc
@@


1.16
log
@log*.c -> log.c
@
text
@/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 * Client-side versions of debug(), log(), etc.  These print to stderr.
 * This is a stripped down version of log-server.c.
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 *
 *
 * Copyright (c) 2000 Markus Friedl.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "includes.h"
RCSID("$OpenBSD: log-client.c,v 1.15 2001/01/21 19:05:50 markus Exp $");

#include "xmalloc.h"
#include "log.h"

static LogLevel log_level = SYSLOG_LEVEL_INFO;

/* Initialize the log.
 *   av0	program name (should be argv[0])
 *   level	logging level
 */

void
log_init(char *av0, LogLevel level, SyslogFacility ignored1, int ignored2)
{
	switch (level) {
	case SYSLOG_LEVEL_QUIET:
	case SYSLOG_LEVEL_FATAL:
	case SYSLOG_LEVEL_ERROR:
	case SYSLOG_LEVEL_INFO:
	case SYSLOG_LEVEL_VERBOSE:
	case SYSLOG_LEVEL_DEBUG1:
	case SYSLOG_LEVEL_DEBUG2:
	case SYSLOG_LEVEL_DEBUG3:
		log_level = level;
		break;
	default:
		/* unchanged */
		break;
	}
}

#define MSGBUFSIZ 1024

void
do_log(LogLevel level, const char *fmt, va_list args)
{
	char msgbuf[MSGBUFSIZ];

	if (level > log_level)
		return;
	if (level >= SYSLOG_LEVEL_DEBUG1)
		fprintf(stderr, "debug: ");
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, args);
	fprintf(stderr, "%s\r\n", msgbuf);
}
@


1.15
log
@split ssh.h and try to cleanup the #include mess. remove unnecessary #includes.
rename util.[ch] -> misc.[ch]
@
text
@d39 1
a39 1
RCSID("$OpenBSD: log-client.c,v 1.14 2001/01/18 16:20:21 markus Exp $");
@


1.14
log
@log() is at pri=LOG_INFO, since LOG_NOTICE goes to /dev/console on many systems
@
text
@d39 1
a39 1
RCSID("$OpenBSD: log-client.c,v 1.13 2001/01/07 11:28:04 markus Exp $");
d42 1
a42 1
#include "ssh.h"
@


1.13
log
@rename SYSLOG_LEVEL_INFO->SYSLOG_LEVEL_NOTICE
syslog priority changes:
	fatal() LOG_ERR  -> LOG_CRIT
	log()   LOG_INFO -> LOG_NOTICE
@
text
@d39 1
a39 1
RCSID("$OpenBSD: log-client.c,v 1.12 2000/09/12 20:53:10 markus Exp $");
d44 1
a44 1
static LogLevel log_level = SYSLOG_LEVEL_NOTICE;
d58 1
a58 1
	case SYSLOG_LEVEL_NOTICE:
@


1.12
log
@multiple debug levels
@
text
@d39 1
a39 1
RCSID("$OpenBSD: log-client.c,v 1.11 2000/09/07 20:27:51 deraadt Exp $");
d44 1
a44 1
static LogLevel log_level = SYSLOG_LEVEL_INFO;
d56 1
d58 1
a58 2
	case SYSLOG_LEVEL_FATAL:
	case SYSLOG_LEVEL_INFO:
@


1.12.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d39 1
a39 1
RCSID("$OpenBSD: log-client.c,v 1.15 2001/01/21 19:05:50 markus Exp $");
d42 1
a42 1
#include "log.h"
d56 1
a57 1
	case SYSLOG_LEVEL_ERROR:
@


1.12.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.12.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@d39 1
a39 1
RCSID("$OpenBSD: log-client.c,v 1.12.2.2 2001/02/19 17:19:01 jason Exp $");
@


1.11
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d39 1
a39 1
RCSID("$OpenBSD: log-client.c,v 1.10 2000/08/19 02:57:33 deraadt Exp $");
d60 3
a62 1
	case SYSLOG_LEVEL_DEBUG:
d80 1
a80 1
	if (level == SYSLOG_LEVEL_DEBUG)
@


1.10
log
@shorten
@
text
@a1 3
 *
 * log-client.c
 *
a2 1
 *
a4 3
 *
 * Created: Mon Mar 20 21:13:40 1995 ylo
 *
d8 28
d39 1
a39 1
RCSID("$OpenBSD: log-client.c,v 1.9 2000/06/20 01:39:42 markus Exp $");
@


1.9
log
@OpenBSD tag
@
text
@d18 1
a18 1
RCSID("$OpenBSD: log-client.c,v 1.8 2000/04/14 10:30:31 markus Exp $");
d60 1
a60 2
	fprintf(stderr, "%s", msgbuf);
	fprintf(stderr, "\r\n");
@


1.8
log
@whitespace cleanup
@
text
@d18 1
a18 1
RCSID("$Id: log-client.c,v 1.7 2000/02/27 18:50:09 deraadt Exp $");
@


1.8.2.1
log
@Pull in the rest of openssh-2.2.0 to 2.7 branch (luvin' cvs...)
@
text
@d18 1
a18 1
RCSID("$OpenBSD: log-client.c,v 1.10 2000/08/19 02:57:33 deraadt Exp $");
d60 2
a61 1
	fprintf(stderr, "%s\r\n", msgbuf);
@


1.8.2.2
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@d2 3
d6 1
d9 3
a14 28
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 *
 *
 * Copyright (c) 2000 Markus Friedl.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d18 1
a18 1
RCSID("$OpenBSD: log-client.c,v 1.12 2000/09/12 20:53:10 markus Exp $");
d39 1
a39 3
	case SYSLOG_LEVEL_DEBUG1:
	case SYSLOG_LEVEL_DEBUG2:
	case SYSLOG_LEVEL_DEBUG3:
d57 1
a57 1
	if (level >= SYSLOG_LEVEL_DEBUG1)
@


1.8.2.3
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@d39 1
a39 1
RCSID("$OpenBSD: log-client.c,v 1.15 2001/01/21 19:05:50 markus Exp $");
d42 1
a42 1
#include "log.h"
d56 1
a57 1
	case SYSLOG_LEVEL_ERROR:
@


1.8.2.4
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@d39 1
a39 1
RCSID("$OpenBSD: log-client.c,v 1.8.2.3 2001/03/12 15:44:11 jason Exp $");
@


1.7
log
@rename a cpp symbol, to avoid param.h collision
@
text
@d2 1
a2 1
 * 
d4 1
a4 1
 * 
d6 1
a6 1
 * 
d9 1
a9 1
 * 
d11 1
a11 1
 * 
d14 1
a14 1
 * 
d18 1
a18 1
RCSID("$Id: log-client.c,v 1.6 1999/11/24 00:26:02 deraadt Exp $");
@


1.6
log
@much more KNF
@
text
@d18 1
a18 1
RCSID("$Id: log-client.c,v 1.5 1999/11/23 22:25:53 markus Exp $");
d48 1
a48 1
#define MSGBUFSIZE 1024
d53 1
a53 1
	char msgbuf[MSGBUFSIZE];
@


1.5
log
@KNF part 1
@
text
@d2 14
a15 14

log-client.c

Author: Tatu Ylonen <ylo@@cs.hut.fi>

Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
                   All rights reserved

Created: Mon Mar 20 21:13:40 1995 ylo

Client-side versions of debug(), log(), etc.  These print to stderr.
This is a stripped down version of log-server.c.

*/
d18 1
a18 1
RCSID("$Id: log-client.c,v 1.4 1999/11/22 21:02:38 markus Exp $");
@


1.4
log
@syslog changes:
* Unified Logmessage for all auth-types, for success and for failed
* Standard connections get only ONE line in the LOG when level==LOG:
  Auth-attempts are logged only, if authentication is:
        a) successfull or
        b) with passwd or
        c) we had more than AUTH_FAIL_LOG failues
* many log() became verbose()
* old behaviour with level=VERBOSE
@
text
@d18 1
a18 1
RCSID("$Id: log-client.c,v 1.3 1999/11/10 23:36:44 markus Exp $");
d26 3
a28 3
     av0	program name (should be argv[0])
     level	logging level
     */
d33 13
a45 14
  switch (level)
    {
    case SYSLOG_LEVEL_QUIET:
    case SYSLOG_LEVEL_ERROR:
    case SYSLOG_LEVEL_FATAL:
    case SYSLOG_LEVEL_INFO:
    case SYSLOG_LEVEL_VERBOSE:
    case SYSLOG_LEVEL_DEBUG:
      log_level = level;
      break;
    default:
      /* unchanged */
      break;
    }
d53 1
a53 1
  char msgbuf[MSGBUFSIZE];
d55 7
a61 7
  if (level > log_level)
    return;
  if (level == SYSLOG_LEVEL_DEBUG)
    fprintf(stderr, "debug: ");
  vsnprintf(msgbuf, sizeof(msgbuf), fmt, args);
  fprintf(stderr, "%s", msgbuf);
  fprintf(stderr, "\r\n");
@


1.3
log
@add LogLevel {QUIET, FATAL, ERROR, INFO, CHAT, DEBUG} to ssh/sshd,
obsoletes QuietMode and FascistLogging in sshd.
@
text
@d18 1
a18 1
RCSID("$Id: log-client.c,v 1.2 1999/10/16 20:54:54 markus Exp $");
d39 1
a39 1
    case SYSLOG_LEVEL_CHAT:
@


1.2
log
@the logging output needs \r, say "debug: " when debuggin
@
text
@d13 1
d18 1
a18 1
RCSID("$Id: log-client.c,v 1.1 1999/09/26 20:53:36 deraadt Exp $");
d23 1
a23 2
static int log_debug = 0;
static int log_quiet = 0;
d25 4
a28 56
void log_init(char *av0, int on_stderr, int debug, int quiet,
	      SyslogFacility facility)
{
  log_debug = debug;
  log_quiet = quiet;
}

void log(const char *fmt, ...)
{
  va_list args;

  if (log_quiet)
    return;
  va_start(args, fmt);
  vfprintf(stderr, fmt, args);
  fprintf(stderr, "\r\n");
  va_end(args);
}

void debug(const char *fmt, ...)
{
  va_list args;
  if (log_quiet || !log_debug)
    return;
  va_start(args, fmt);
  fprintf(stderr, "debug: ");
  vfprintf(stderr, fmt, args);
  fprintf(stderr, "\r\n");
  va_end(args);
}

void error(const char *fmt, ...)
{
  va_list args;
  if (log_quiet)
    return;
  va_start(args, fmt);
  vfprintf(stderr, fmt, args);
  fprintf(stderr, "\r\n");
  va_end(args);
}

struct fatal_cleanup
{
  struct fatal_cleanup *next;
  void (*proc)(void *);
  void *context;
};

static struct fatal_cleanup *fatal_cleanups = NULL;

/* Registers a cleanup function to be called by fatal() before exiting. */

void fatal_add_cleanup(void (*proc)(void *), void *context)
{
  struct fatal_cleanup *cu;
d30 2
a31 10
  cu = xmalloc(sizeof(*cu));
  cu->proc = proc;
  cu->context = context;
  cu->next = fatal_cleanups;
  fatal_cleanups = cu;
}

/* Removes a cleanup frunction to be called at fatal(). */

void fatal_remove_cleanup(void (*proc)(void *context), void *context)
d33 1
a33 3
  struct fatal_cleanup **cup, *cu;
  
  for (cup = &fatal_cleanups; *cup; cup = &cu->next)
d35 11
a45 7
      cu = *cup;
      if (cu->proc == proc && cu->context == context)
	{
	  *cup = cu->next;
	  xfree(cu);
	  return;
	}
a46 2
  fatal("fatal_remove_cleanup: no such cleanup function: 0x%lx 0x%lx\n",
	(unsigned long)proc, (unsigned long)context);
d49 1
a49 3
/* Function to display an error message and exit.  This is in this file because
   this needs to restore terminal modes before exiting.  See log-client.c
   for other related functions. */
d51 2
a52 1
void fatal(const char *fmt, ...)
d54 1
a54 7
  va_list args;
  struct fatal_cleanup *cu, *next_cu;
  static int fatal_called = 0;
  
  if (!fatal_called)
    {
      fatal_called = 1;
d56 6
a61 10
      /* Call cleanup functions. */
      for (cu = fatal_cleanups; cu; cu = next_cu)
	{
	  next_cu = cu->next;
	  (*cu->proc)(cu->context);
	}
    }

  va_start(args, fmt);
  vfprintf(stderr, fmt, args);
a62 2
  va_end(args);
  exit(255);
a63 2

/* fatal() is in ssh.c so that it can properly reset terminal modes. */
@


1.1
log
@i bet a lot of people didn't know what ssh 1.2.16 had a nice license.
well, except for the patent issues.  someone in sweden (forget their
name at the moment) cleaned out most of the patented code, and now
this code removes rsa code.  when this is done, it will link against
libssl, but the work isn't completely done yet.  then we need to bring
this up to modern days, featurewise.
@
text
@d17 1
a17 1
RCSID("$Id: log-client.c,v 1.2 1999/05/04 11:58:47 bg Exp $");
d40 1
a40 1
  fprintf(stderr, "\n");
d50 1
d52 1
a52 1
  fprintf(stderr, "\n");
d63 1
a63 1
  fprintf(stderr, "\n");
d133 1
a133 1
  fprintf(stderr, "\n");
@

