head	1.23;
access;
symbols
	OPENBSD_3_9:1.21.0.6
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.21.0.4
	OPENBSD_3_8_BASE:1.21
	OPENBSD_3_7:1.21.0.2
	OPENBSD_3_7_BASE:1.21
	OPENBSD_3_6:1.19.0.4
	OPENBSD_3_6_BASE:1.19
	OPENBSD_3_5:1.19.0.2
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.18.0.6
	OPENBSD_3_4_BASE:1.18
	OPENBSD_3_3:1.18.0.4
	OPENBSD_3_3_BASE:1.18
	OPENBSD_3_2:1.18.0.2
	OPENBSD_3_2_BASE:1.18
	OPENBSD_3_1:1.17.0.2
	OPENBSD_3_1_BASE:1.17
	OPENBSD_3_0:1.13.0.2
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.23
date	2006.08.03.03.34.41;	author deraadt;	state dead;
branches;
next	1.22;

1.22
date	2006.03.25.22.22.42;	author djm;	state Exp;
branches;
next	1.21;

1.21
date	2005.03.10.22.01.05;	author deraadt;	state Exp;
branches
	1.21.4.1
	1.21.6.1;
next	1.20;

1.20
date	2004.10.29.23.56.17;	author djm;	state Exp;
branches;
next	1.19;

1.19
date	2003.11.10.16.23.41;	author jakob;	state Exp;
branches
	1.19.2.1
	1.19.4.1;
next	1.18;

1.18
date	2002.04.20.09.14.58;	author markus;	state Exp;
branches
	1.18.4.1
	1.18.6.1;
next	1.17;

1.17
date	2002.03.18.17.25.29;	author provos;	state Exp;
branches
	1.17.2.1;
next	1.16;

1.16
date	2002.03.04.17.27.39;	author stevesk;	state Exp;
branches;
next	1.15;

1.15
date	2001.12.28.14.13.13;	author markus;	state Exp;
branches;
next	1.14;

1.14
date	2001.12.19.17.16.13;	author stevesk;	state Exp;
branches;
next	1.13;

1.13
date	2001.06.26.17.27.22;	author markus;	state Exp;
branches
	1.13.2.1;
next	1.12;

1.12
date	2001.06.26.06.32.48;	author itojun;	state Exp;
branches;
next	1.11;

1.11
date	2001.01.21.19.05.45;	author markus;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2001.01.10.22.56.22;	author markus;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.19.23.17.55;	author markus;	state Exp;
branches;
next	1.8;

1.8
date	2000.09.07.20.27.50;	author deraadt;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2000.06.20.01.39.39;	author markus;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.14.10.30.30;	author markus;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2000.03.28.20.24.18;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	99.11.24.19.53.44;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	99.11.24.00.26.01;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.09.28.04.45.36;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	99.09.26.20.53.34;	author deraadt;	state Exp;
branches;
next	;

1.6.2.1
date	2000.09.01.18.23.18;	author jason;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2000.11.08.21.30.28;	author jason;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2001.03.12.15.44.08;	author jason;	state Exp;
branches;
next	1.6.2.4;

1.6.2.4
date	2001.03.21.18.52.37;	author jason;	state Exp;
branches;
next	;

1.8.2.1
date	2001.02.16.20.12.55;	author jason;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2001.02.19.17.18.42;	author jason;	state Exp;
branches;
next	1.8.2.3;

1.8.2.3
date	2001.03.21.19.46.23;	author jason;	state Exp;
branches;
next	1.8.2.4;

1.8.2.4
date	2001.05.07.21.09.27;	author jason;	state Exp;
branches;
next	1.8.2.5;

1.8.2.5
date	2001.09.27.00.15.41;	author miod;	state Exp;
branches;
next	1.8.2.6;

1.8.2.6
date	2002.03.08.17.04.42;	author brad;	state Exp;
branches;
next	;

1.11.2.1
date	2001.09.27.19.03.54;	author jason;	state Exp;
branches;
next	1.11.2.2;

1.11.2.2
date	2002.03.09.00.20.44;	author miod;	state Exp;
branches;
next	1.11.2.3;

1.11.2.3
date	2002.04.22.19.56.42;	author miod;	state Exp;
branches;
next	1.11.2.4;

1.11.2.4
date	2002.06.02.22.56.10;	author miod;	state Exp;
branches;
next	;

1.13.2.1
date	2002.03.07.17.37.46;	author jason;	state Exp;
branches;
next	1.13.2.2;

1.13.2.2
date	2002.04.23.02.13.50;	author jason;	state Exp;
branches;
next	1.13.2.3;

1.13.2.3
date	2002.05.17.00.03.23;	author miod;	state Exp;
branches;
next	;

1.17.2.1
date	2002.05.18.04.12.10;	author jason;	state Exp;
branches;
next	1.17.2.2;

1.17.2.2
date	2002.05.18.04.50.37;	author jason;	state Exp;
branches;
next	1.17.2.3;

1.17.2.3
date	2002.06.26.15.30.37;	author jason;	state Exp;
branches;
next	;

1.18.4.1
date	2004.03.04.18.18.15;	author brad;	state Exp;
branches;
next	;

1.18.6.1
date	2004.02.28.03.51.32;	author brad;	state Exp;
branches;
next	;

1.19.2.1
date	2005.03.10.17.15.04;	author brad;	state Exp;
branches;
next	;

1.19.4.1
date	2005.03.10.16.28.27;	author brad;	state Exp;
branches;
next	1.19.4.2;

1.19.4.2
date	2005.06.05.02.22.39;	author brad;	state Exp;
branches;
next	;

1.21.4.1
date	2006.10.06.03.19.32;	author brad;	state dead;
branches;
next	;

1.21.6.1
date	2006.09.30.04.06.50;	author brad;	state dead;
branches;
next	;


desc
@@


1.23
log
@almost entirely get rid of the culture of ".h files that include .h files"
ok djm, sort of ok stevesk
makes the pain stop in one easy step
@
text
@/* $OpenBSD: bufaux.h,v 1.22 2006/03/25 22:22:42 djm Exp $ */

/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */

#ifndef BUFAUX_H
#define BUFAUX_H

#include "buffer.h"
#include <openssl/bn.h>

void    buffer_put_bignum(Buffer *, const BIGNUM *);
void    buffer_put_bignum2(Buffer *, const BIGNUM *);
void	buffer_get_bignum(Buffer *, BIGNUM *);
void	buffer_get_bignum2(Buffer *, BIGNUM *);

u_short	buffer_get_short(Buffer *);
void	buffer_put_short(Buffer *, u_short);

u_int	buffer_get_int(Buffer *);
void    buffer_put_int(Buffer *, u_int);

u_int64_t buffer_get_int64(Buffer *);
void	buffer_put_int64(Buffer *, u_int64_t);

int     buffer_get_char(Buffer *);
void    buffer_put_char(Buffer *, int);

void   *buffer_get_string(Buffer *, u_int *);
void    buffer_put_string(Buffer *, const void *, u_int);
void	buffer_put_cstring(Buffer *, const char *);

#define buffer_skip_string(b) \
    do { u_int l = buffer_get_int(b); buffer_consume(b, l); } while (0)

int	buffer_put_bignum_ret(Buffer *, const BIGNUM *);
int	buffer_get_bignum_ret(Buffer *, BIGNUM *);
int	buffer_put_bignum2_ret(Buffer *, const BIGNUM *);
int	buffer_get_bignum2_ret(Buffer *, BIGNUM *);
int	buffer_get_short_ret(u_short *, Buffer *);
int	buffer_get_int_ret(u_int *, Buffer *);
int	buffer_get_int64_ret(u_int64_t *, Buffer *);
void	*buffer_get_string_ret(Buffer *, u_int *);
int	buffer_get_char_ret(char *, Buffer *);

#endif				/* BUFAUX_H */
@


1.22
log
@standardise spacing in $OpenBSD$ tags; requested by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: bufaux.h,v 1.21 2005/03/10 22:01:05 deraadt Exp $ */
@


1.21
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.20 2004/10/29 23:56:17 djm Exp $	*/
@


1.21.4.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.21 2005/03/10 22:01:05 deraadt Exp $	*/
@


1.21.6.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.21 2005/03/10 22:01:05 deraadt Exp $	*/
@


1.20
log
@introduce a new buffer API that returns an error rather than fatal()ing when
presented with bad data; ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.19 2003/11/10 16:23:41 jakob Exp $	*/
d43 1
a43 1
    do { u_int l = buffer_get_int(b); buffer_consume(b, l); } while(0)
@


1.19
log
@constify. ok markus@@ & djm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.18 2002/04/20 09:14:58 markus Exp $	*/
d44 10
@


1.19.2.1
log
@upgrade to OpenSSH 4.0
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.20 2004/10/29 23:56:17 djm Exp $	*/
a43 10

int	buffer_put_bignum_ret(Buffer *, const BIGNUM *);
int	buffer_get_bignum_ret(Buffer *, BIGNUM *);
int	buffer_put_bignum2_ret(Buffer *, const BIGNUM *);
int	buffer_get_bignum2_ret(Buffer *, BIGNUM *);
int	buffer_get_short_ret(u_short *, Buffer *);
int	buffer_get_int_ret(u_int *, Buffer *);
int	buffer_get_int64_ret(u_int64_t *, Buffer *);
void	*buffer_get_string_ret(Buffer *, u_int *);
int	buffer_get_char_ret(char *, Buffer *);
@


1.19.4.1
log
@upgrade to OpenSSH 4.0
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.20 2004/10/29 23:56:17 djm Exp $	*/
a43 10

int	buffer_put_bignum_ret(Buffer *, const BIGNUM *);
int	buffer_get_bignum_ret(Buffer *, BIGNUM *);
int	buffer_put_bignum2_ret(Buffer *, const BIGNUM *);
int	buffer_get_bignum2_ret(Buffer *, BIGNUM *);
int	buffer_get_short_ret(u_short *, Buffer *);
int	buffer_get_int_ret(u_int *, Buffer *);
int	buffer_get_int64_ret(u_int64_t *, Buffer *);
void	*buffer_get_string_ret(Buffer *, u_int *);
int	buffer_get_char_ret(char *, Buffer *);
@


1.19.4.2
log
@upgrade to OpenSSH 4.1
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.21 2005/03/10 22:01:05 deraadt Exp $	*/
d43 1
a43 1
    do { u_int l = buffer_get_int(b); buffer_consume(b, l); } while (0)
@


1.18
log
@add buffer_{get,put}_short
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.17 2002/03/18 17:25:29 provos Exp $	*/
d21 2
a22 2
void    buffer_put_bignum(Buffer *, BIGNUM *);
void    buffer_put_bignum2(Buffer *, BIGNUM *);
@


1.18.4.1
log
@upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.19 2003/11/10 16:23:41 jakob Exp $	*/
d21 2
a22 2
void    buffer_put_bignum(Buffer *, const BIGNUM *);
void    buffer_put_bignum2(Buffer *, const BIGNUM *);
@


1.18.6.1
log
@upgrade to OpenSSH 3.8
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.19 2003/11/10 16:23:41 jakob Exp $	*/
d21 2
a22 2
void    buffer_put_bignum(Buffer *, const BIGNUM *);
void    buffer_put_bignum2(Buffer *, const BIGNUM *);
@


1.17
log
@buffer_skip_string and extra sanity checking; needed by ssh-privsep
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.16 2002/03/04 17:27:39 stevesk Exp $	*/
d25 3
@


1.17.2.1
log
@Update to OpenSSH-3.2.2
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.18 2002/04/20 09:14:58 markus Exp $	*/
a24 3

u_short	buffer_get_short(Buffer *);
void	buffer_put_short(Buffer *, u_short);
@


1.17.2.2
log
@Update to OpenSSH-3.2.3
@
text
@@


1.17.2.3
log
@Pull in OpenSSH-3.4
@
text
@@


1.16
log
@$OpenBSD$ and RCSID() cleanup: don't use RCSID() in .h files; add
missing RCSID() to .c files and remove dup /*$OpenBSD$*/ from .c
files.  ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.15 2001/12/28 14:13:13 markus Exp $	*/
d38 3
@


1.15
log
@buffer_get_bignum: int -> void
@
text
@d1 2
a13 2

/* RCSID("$OpenBSD: bufaux.h,v 1.14 2001/12/19 17:16:13 stevesk Exp $"); */
@


1.14
log
@change the buffer/packet interface to use void* vs. char*; ok markus@@
@
text
@d13 1
a13 1
/* RCSID("$OpenBSD: bufaux.h,v 1.13 2001/06/26 17:27:22 markus Exp $"); */
d23 2
a24 2
int     buffer_get_bignum(Buffer *, BIGNUM *);
int	buffer_get_bignum2(Buffer *, BIGNUM *);
@


1.13
log
@remove comments from .h, since they are cut&paste from the .c files
and out of sync
@
text
@d13 1
a13 1
/* RCSID("$OpenBSD: bufaux.h,v 1.12 2001/06/26 06:32:48 itojun Exp $"); */
d35 1
a35 1
char   *buffer_get_string(Buffer *, u_int *);
@


1.13.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@a0 2
/*	$OpenBSD: bufaux.h,v 1.16 2002/03/04 17:27:39 stevesk Exp $	*/

d13 2
d23 2
a24 2
void	buffer_get_bignum(Buffer *, BIGNUM *);
void	buffer_get_bignum2(Buffer *, BIGNUM *);
d35 1
a35 1
void   *buffer_get_string(Buffer *, u_int *);
@


1.13.2.2
log
@Pull in patches from current:
Fix buffer overflow in AFS/Kerberos token handling.
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.18 2002/04/20 09:14:58 markus Exp $	*/
a24 3

u_short	buffer_get_short(Buffer *);
void	buffer_put_short(Buffer *, u_short);
@


1.13.2.3
log
@Update OpenSSH to version 3.2.2.
@
text
@a41 3
#define buffer_skip_string(b) \
    do { u_int l = buffer_get_int(b); buffer_consume(b, l); } while(0)

@


1.12
log
@prototype pedant.  not very creative...
- () -> (void)
- no variable names
@
text
@d13 1
a13 1
/* RCSID("$OpenBSD: bufaux.h,v 1.11 2001/01/21 19:05:45 markus Exp $"); */
a20 4
/*
 * Stores an BIGNUM in the buffer with a 2-byte msb first bit count, followed
 * by (bits+7)/8 bytes of binary data, msb first.
 */
a22 2

/* Retrieves an BIGNUM from the buffer. */
d26 3
a28 2
/* Returns an integer from the buffer (4 bytes, msb first). */
u_int buffer_get_int(Buffer *);
a29 3

/* Stores an integer in the buffer in 4 bytes, msb first. */
void    buffer_put_int(Buffer *, u_int);
a31 1
/* Returns a character from the buffer (0 - 255). */
a32 2

/* Stores a character in the buffer. */
a34 8
/*
 * Returns an arbitrary binary string from the buffer.  The string cannot be
 * longer than 256k.  The returned value points to memory allocated with
 * xmalloc; it is the responsibility of the calling function to free the
 * data.  If length_ptr is non-NULL, the length of the returned data will be
 * stored there.  A null character will be automatically appended to the
 * returned string, and is not counted in length.
 */
a35 2

/* Stores and arbitrary binary string in the buffer. */
@


1.11
log
@split ssh.h and try to cleanup the #include mess. remove unnecessary #includes.
rename util.[ch] -> misc.[ch]
@
text
@d13 1
a13 1
/* RCSID("$OpenBSD: bufaux.h,v 1.10 2001/01/10 22:56:22 markus Exp $"); */
d25 2
a26 2
void    buffer_put_bignum(Buffer * buffer, BIGNUM * value);
void    buffer_put_bignum2(Buffer * buffer, BIGNUM * value);
d29 2
a30 2
int     buffer_get_bignum(Buffer * buffer, BIGNUM * value);
int	buffer_get_bignum2(Buffer *buffer, BIGNUM * value);
d33 2
a34 2
u_int buffer_get_int(Buffer * buffer);
u_int64_t buffer_get_int64(Buffer *buffer);
d37 2
a38 2
void    buffer_put_int(Buffer * buffer, u_int value);
void	buffer_put_int64(Buffer *buffer, u_int64_t value);
d41 1
a41 1
int     buffer_get_char(Buffer * buffer);
d44 1
a44 1
void    buffer_put_char(Buffer * buffer, int value);
d54 1
a54 1
char   *buffer_get_string(Buffer * buffer, u_int *length_ptr);
d57 2
a58 2
void    buffer_put_string(Buffer * buffer, const void *buf, u_int len);
void	buffer_put_cstring(Buffer *buffer, const char *s);
@


1.11.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d13 1
a13 1
/* RCSID("$OpenBSD: bufaux.h,v 1.13 2001/06/26 17:27:22 markus Exp $"); */
d21 38
a58 17
void    buffer_put_bignum(Buffer *, BIGNUM *);
void    buffer_put_bignum2(Buffer *, BIGNUM *);
int     buffer_get_bignum(Buffer *, BIGNUM *);
int	buffer_get_bignum2(Buffer *, BIGNUM *);

u_int	buffer_get_int(Buffer *);
void    buffer_put_int(Buffer *, u_int);

u_int64_t buffer_get_int64(Buffer *);
void	buffer_put_int64(Buffer *, u_int64_t);

int     buffer_get_char(Buffer *);
void    buffer_put_char(Buffer *, int);

char   *buffer_get_string(Buffer *, u_int *);
void    buffer_put_string(Buffer *, const void *, u_int);
void	buffer_put_cstring(Buffer *, const char *);
@


1.11.2.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@a0 2
/*	$OpenBSD: bufaux.h,v 1.16 2002/03/04 17:27:39 stevesk Exp $	*/

d13 2
d23 2
a24 2
void	buffer_get_bignum(Buffer *, BIGNUM *);
void	buffer_get_bignum2(Buffer *, BIGNUM *);
d35 1
a35 1
void   *buffer_get_string(Buffer *, u_int *);
@


1.11.2.3
log
@Errata #24 (markus@@)
Fix a buffer overflow in AFS/Kerberos token handling.
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.11.2.2 2002/03/09 00:20:44 miod Exp $	*/
a24 3

u_short	buffer_get_short(Buffer *);
void    buffer_put_short(Buffer *, u_short);
@


1.11.2.4
log
@Upgrade to OpenSSH 3.2.3.

Except for improbable compilation error fixes, this should be the last
commit made to the 2.9-STABLE branche. Have fun upgrading.
@
text
@d1 1
a1 1
/*	$OpenBSD: bufaux.h,v 1.18 2002/04/20 09:14:58 markus Exp $	*/
d27 1
a27 1
void	buffer_put_short(Buffer *, u_short);
a40 3

#define buffer_skip_string(b) \
    do { u_int l = buffer_get_int(b); buffer_consume(b, l); } while(0)
@


1.10
log
@cleanup sftp-server implementation:
	add buffer_get_int64, buffer_put_int64, GET_64BIT, PUT_64BIT
	parse SSH2_FILEXFER_ATTR_EXTENDED
	send SSH2_FX_EOF if readdir returns no more entries
	reply to SSH2_FXP_EXTENDED messages
	use #defines from the draft.
	move #definitions to sftp.h
more info:
http://www.ietf.org/internet-drafts/draft-ietf-secsh-filexfer-00.txt
@
text
@d13 1
a13 1
/* RCSID("$OpenBSD: bufaux.h,v 1.9 2000/12/19 23:17:55 markus Exp $"); */
d19 1
@


1.9
log
@replace 'unsigned bla' with 'u_bla' everywhere. also, replace 'char unsigned'
with u_char.
@
text
@d13 1
a13 1
/* RCSID("$OpenBSD: bufaux.h,v 1.8 2000/09/07 20:27:50 deraadt Exp $"); */
d33 1
d37 1
@


1.8
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d13 1
a13 1
/* RCSID("$OpenBSD: bufaux.h,v 1.7 2000/06/20 01:39:39 markus Exp $"); */
d32 1
a32 1
unsigned int buffer_get_int(Buffer * buffer);
d35 1
a35 1
void    buffer_put_int(Buffer * buffer, unsigned int value);
d51 1
a51 1
char   *buffer_get_string(Buffer * buffer, unsigned int *length_ptr);
d54 1
a54 1
void    buffer_put_string(Buffer * buffer, const void *buf, unsigned int len);
@


1.8.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d13 1
a13 1
/* RCSID("$OpenBSD: bufaux.h,v 1.11 2001/01/21 19:05:45 markus Exp $"); */
a18 1
#include <openssl/bn.h>
d32 1
a32 2
u_int buffer_get_int(Buffer * buffer);
u_int64_t buffer_get_int64(Buffer *buffer);
d35 1
a35 2
void    buffer_put_int(Buffer * buffer, u_int value);
void	buffer_put_int64(Buffer *buffer, u_int64_t value);
d51 1
a51 1
char   *buffer_get_string(Buffer * buffer, u_int *length_ptr);
d54 1
a54 1
void    buffer_put_string(Buffer * buffer, const void *buf, u_int len);
@


1.8.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.8.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@@


1.8.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@@


1.8.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d13 1
a13 1
/* RCSID("$OpenBSD: bufaux.h,v 1.13 2001/06/26 17:27:22 markus Exp $"); */
d21 38
a58 17
void    buffer_put_bignum(Buffer *, BIGNUM *);
void    buffer_put_bignum2(Buffer *, BIGNUM *);
int     buffer_get_bignum(Buffer *, BIGNUM *);
int	buffer_get_bignum2(Buffer *, BIGNUM *);

u_int	buffer_get_int(Buffer *);
void    buffer_put_int(Buffer *, u_int);

u_int64_t buffer_get_int64(Buffer *);
void	buffer_put_int64(Buffer *, u_int64_t);

int     buffer_get_char(Buffer *);
void    buffer_put_char(Buffer *, int);

char   *buffer_get_string(Buffer *, u_int *);
void    buffer_put_string(Buffer *, const void *, u_int);
void	buffer_put_cstring(Buffer *, const char *);
@


1.8.2.6
log
@Merge OpenSSH 3.1.
@
text
@a0 2
/*	$OpenBSD: bufaux.h,v 1.16 2002/03/04 17:27:39 stevesk Exp $	*/

d13 2
d23 2
a24 2
void	buffer_get_bignum(Buffer *, BIGNUM *);
void	buffer_get_bignum2(Buffer *, BIGNUM *);
d35 1
a35 1
void   *buffer_get_string(Buffer *, u_int *);
@


1.7
log
@OpenBSD tag
@
text
@a1 3
 *
 * bufaux.h
 *
a2 1
 *
d6 5
a10 2
 * Created: Wed Mar 29 02:18:23 1995 ylo
 *
d13 1
a13 1
/* RCSID("$OpenBSD: bufaux.h,v 1.6 2000/04/14 10:30:30 markus Exp $"); */
@


1.6
log
@whitespace cleanup
@
text
@d14 1
a14 1
/* RCSID("$Id: bufaux.h,v 1.5 2000/03/28 20:24:18 markus Exp $"); */
@


1.6.2.1
log
@Pull in the rest of openssh-2.2.0 to 2.7 branch (luvin' cvs...)
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: bufaux.h,v 1.7 2000/06/20 01:39:39 markus Exp $"); */
@


1.6.2.2
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@d2 3
d6 1
d10 2
a11 5
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
d14 1
a14 1
/* RCSID("$OpenBSD: bufaux.h,v 1.8 2000/09/07 20:27:50 deraadt Exp $"); */
@


1.6.2.3
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@d13 1
a13 1
/* RCSID("$OpenBSD: bufaux.h,v 1.11 2001/01/21 19:05:45 markus Exp $"); */
a18 1
#include <openssl/bn.h>
d32 1
a32 2
u_int buffer_get_int(Buffer * buffer);
u_int64_t buffer_get_int64(Buffer *buffer);
d35 1
a35 2
void    buffer_put_int(Buffer * buffer, u_int value);
void	buffer_put_int64(Buffer *buffer, u_int64_t value);
d51 1
a51 1
char   *buffer_get_string(Buffer * buffer, u_int *length_ptr);
d54 1
a54 1
void    buffer_put_string(Buffer * buffer, const void *buf, u_int len);
@


1.6.2.4
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@@


1.5
log
@support ssh2 bignums
@
text
@d2 1
a2 1
 * 
d4 1
a4 1
 * 
d6 1
a6 1
 * 
d9 1
a9 1
 * 
d11 1
a11 1
 * 
d14 1
a14 1
/* RCSID("$Id: bufaux.h,v 1.5 2000/03/22 13:40:45 markus Exp $"); */
@


1.4
log
@KNF, final part 3
@
text
@d14 1
a14 1
/* RCSID("$Id: bufaux.h,v 1.3 1999/11/24 00:26:01 deraadt Exp $"); */
d26 1
d30 1
d56 1
@


1.3
log
@much more KNF
@
text
@d14 1
a14 1
/* RCSID("$Id: bufaux.h,v 1.2 1999/09/28 04:45:36 provos Exp $"); */
d21 4
a24 2
/* Stores an BIGNUM in the buffer with a 2-byte msb first bit count, followed
   by (bits+7)/8 bytes of binary data, msb first. */
d42 8
a49 6
/* Returns an arbitrary binary string from the buffer.  The string cannot
   be longer than 256k.  The returned value points to memory allocated
   with xmalloc; it is the responsibility of the calling function to free
   the data.  If length_ptr is non-NULL, the length of the returned data
   will be stored there.  A null character will be automatically appended
   to the returned string, and is not counted in length. */
@


1.2
log
@convert all uses of gmp to SSL bignum
convert all used of rsa to SSL rsa functions
remove all use of randomstate to OpenBSD arc4random() and arc4_stir()
all this done at a long long night in Canada.
@
text
@d2 11
d14 1
a14 12
bufaux.h

Author: Tatu Ylonen <ylo@@cs.hut.fi>

Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
                   All rights reserved

Created: Wed Mar 29 02:18:23 1995 ylo

*/

/* RCSID("$Id: bufaux.h,v 1.3 1999/06/14 14:41:37 bg Exp $"); */
d23 1
a23 1
void buffer_put_bignum(Buffer *buffer, BIGNUM *value);
d26 1
a26 1
int buffer_get_bignum(Buffer *buffer, BIGNUM *value);
d29 1
a29 1
unsigned int buffer_get_int(Buffer *buffer);
d32 1
a32 1
void buffer_put_int(Buffer *buffer, unsigned int value);
d35 1
a35 1
int buffer_get_char(Buffer *buffer);
d38 1
a38 1
void buffer_put_char(Buffer *buffer, int value);
d46 1
a46 1
char *buffer_get_string(Buffer *buffer, unsigned int *length_ptr);
d49 1
a49 1
void buffer_put_string(Buffer *buffer, const void *buf, unsigned int len);
d51 1
a51 1
#endif /* BUFAUX_H */
@


1.1
log
@i bet a lot of people didn't know what ssh 1.2.16 had a nice license.
well, except for the patent issues.  someone in sweden (forget their
name at the moment) cleaned out most of the patented code, and now
this code removes rsa code.  when this is done, it will link against
libssl, but the work isn't completely done yet.  then we need to bring
this up to modern days, featurewise.
@
text
@d21 1
a21 1
/* Stores an MP_INT in the buffer with a 2-byte msb first bit count, followed
d23 1
a23 1
void buffer_put_mp_int(Buffer *buffer, MP_INT *value);
d25 2
a26 2
/* Retrieves an MP_INT from the buffer. */
int buffer_get_mp_int(Buffer *buffer, MP_INT *value);
@

