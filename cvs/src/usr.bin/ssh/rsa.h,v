head	1.17;
access;
symbols
	OPENBSD_6_1:1.17.0.10
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.12
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.8
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.4
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.16.0.34
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.30
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.28
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.26
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.24
	OPENBSD_5_0:1.16.0.22
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.20
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.18
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.14
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.16
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.12
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.10
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.8
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.6
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.2
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.4
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.15.0.18
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.16
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.14
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.12
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.10
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.8
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.15.0.6
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.15.0.4
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.15.0.2
	OPENBSD_3_1_BASE:1.15
	OPENBSD_3_0:1.14.0.2
	OPENBSD_3_0_BASE:1.14
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.17
date	2014.06.24.01.13.21;	author djm;	state Exp;
branches;
next	1.16;
commitid	1h9UxAQmwdaqUzyX;

1.16
date	2006.03.25.22.22.43;	author djm;	state Exp;
branches;
next	1.15;

1.15
date	2002.03.04.17.27.39;	author stevesk;	state Exp;
branches
	1.15.16.1
	1.15.18.1;
next	1.14;

1.14
date	2001.06.27.05.42.24;	author markus;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	2001.06.26.17.27.24;	author markus;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.26.06.32.58;	author itojun;	state Exp;
branches;
next	1.11;

1.11
date	2001.03.26.23.23.24;	author markus;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2001.01.29.19.47.30;	author markus;	state Exp;
branches;
next	1.9;

1.9
date	2000.11.12.19.50.38;	author markus;	state Exp;
branches;
next	1.8;

1.8
date	2000.09.07.20.27.53;	author deraadt;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2000.06.20.01.39.44;	author markus;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.14.10.30.32;	author markus;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2000.04.12.09.39.10;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	99.11.24.19.53.50;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	99.11.24.00.26.03;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.06.15.00;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.09.28.04.45.37;	author provos;	state Exp;
branches;
next	;

1.6.2.1
date	2000.09.01.18.23.22;	author jason;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2000.11.08.21.31.10;	author jason;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2001.03.12.15.44.13;	author jason;	state Exp;
branches;
next	1.6.2.4;

1.6.2.4
date	2001.03.21.18.52.59;	author jason;	state Exp;
branches;
next	;

1.8.2.1
date	2001.02.16.20.13.12;	author jason;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2001.02.19.17.19.16;	author jason;	state Exp;
branches;
next	1.8.2.3;

1.8.2.3
date	2001.03.21.19.46.27;	author jason;	state Exp;
branches;
next	1.8.2.4;

1.8.2.4
date	2001.05.07.21.09.33;	author jason;	state Exp;
branches;
next	1.8.2.5;

1.8.2.5
date	2001.09.27.00.15.42;	author miod;	state Exp;
branches;
next	1.8.2.6;

1.8.2.6
date	2002.03.08.17.04.42;	author brad;	state Exp;
branches;
next	;

1.11.2.1
date	2001.09.27.19.03.55;	author jason;	state Exp;
branches;
next	1.11.2.2;

1.11.2.2
date	2002.03.09.00.20.44;	author miod;	state Exp;
branches;
next	;

1.14.2.1
date	2002.03.07.17.37.47;	author jason;	state Exp;
branches;
next	;

1.15.16.1
date	2006.10.06.03.19.33;	author brad;	state Exp;
branches;
next	;

1.15.18.1
date	2006.09.30.04.06.51;	author brad;	state Exp;
branches;
next	;


desc
@@


1.17
log
@New key API: refactor key-related functions to be more library-like,
existing API is offered as a set of wrappers.

with and ok markus@@

Thanks also to Ben Hawkes, David Tomaschik, Ivan Fratric, Matthew
Dempsky and Ron Bowes for a detailed review a few months ago.
@
text
@/* $OpenBSD: rsa.h,v 1.16 2006/03/25 22:22:43 djm Exp $ */

/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 * RSA key generation, encryption and decryption.
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */

#ifndef RSA_H
#define RSA_H

#include <openssl/bn.h>
#include <openssl/rsa.h>

int	 rsa_public_encrypt(BIGNUM *, BIGNUM *, RSA *);
int	 rsa_private_decrypt(BIGNUM *, BIGNUM *, RSA *);
int	 rsa_generate_additional_parameters(RSA *);

#endif				/* RSA_H */
@


1.16
log
@standardise spacing in $OpenBSD$ tags; requested by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: rsa.h,v 1.15 2002/03/04 17:27:39 stevesk Exp $ */
d22 1
a22 1
void	 rsa_public_encrypt(BIGNUM *, BIGNUM *, RSA *);
d24 1
a24 1
void	 rsa_generate_additional_parameters(RSA *);
@


1.15
log
@$OpenBSD$ and RCSID() cleanup: don't use RCSID() in .h files; add
missing RCSID() to .c files and remove dup /*$OpenBSD$*/ from .c
files.  ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rsa.h,v 1.14 2001/06/27 05:42:24 markus Exp $	*/
@


1.15.16.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: rsa.h,v 1.16 2006/03/25 22:22:43 djm Exp $ */
@


1.15.18.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: rsa.h,v 1.16 2006/03/25 22:22:43 djm Exp $ */
@


1.14
log
@s/generate_additional_parameters/rsa_generate_additional_parameters/
http://www.humppa.com/
@
text
@d1 2
a14 2

/* RCSID("$OpenBSD: rsa.h,v 1.13 2001/06/26 17:27:24 markus Exp $"); */
@


1.14.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@a0 2
/*	$OpenBSD: rsa.h,v 1.15 2002/03/04 17:27:39 stevesk Exp $	*/

d13 2
@


1.13
log
@remove comments from .h, since they are cut&paste from the .c files
and out of sync
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: rsa.h,v 1.12 2001/06/26 06:32:58 itojun Exp $"); */
d24 1
a24 1
void	 generate_additional_parameters(RSA *);
@


1.12
log
@prototype pedant.  not very creative...
- () -> (void)
- no variable names
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: rsa.h,v 1.11 2001/03/26 23:23:24 markus Exp $"); */
d22 3
a24 4
void rsa_public_encrypt __P((BIGNUM *, BIGNUM *, RSA *));
int rsa_private_decrypt __P((BIGNUM *, BIGNUM *, RSA *));

void generate_additional_parameters __P((RSA *));
@


1.11
log
@try to read private f-secure ssh v2 rsa keys.
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: rsa.h,v 1.10 2001/01/29 19:47:30 markus Exp $"); */
d22 2
a23 2
void rsa_public_encrypt __P((BIGNUM * out, BIGNUM * in, RSA * prv));
int rsa_private_decrypt __P((BIGNUM * out, BIGNUM * in, RSA * prv));
d25 1
a25 1
void generate_additional_parameters __P((RSA *rsa));
@


1.11.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: rsa.h,v 1.14 2001/06/27 05:42:24 markus Exp $"); */
d22 4
a25 3
void	 rsa_public_encrypt(BIGNUM *, BIGNUM *, RSA *);
int	 rsa_private_decrypt(BIGNUM *, BIGNUM *, RSA *);
void	 rsa_generate_additional_parameters(RSA *);
@


1.11.2.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@a0 2
/*	$OpenBSD: rsa.h,v 1.15 2002/03/04 17:27:39 stevesk Exp $	*/

d13 2
@


1.10
log
@handle rsa_private_decrypt failures; helps against the Bleichenbacher pkcs#1 attack
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: rsa.h,v 1.9 2000/11/12 19:50:38 markus Exp $"); */
d24 2
@


1.9
log
@add support for RSA to SSH2.  please test.

there are now 3 types of keys: RSA1 is used by ssh-1 only,
RSA and DSA are used by SSH2.

you can use 'ssh-keygen -t rsa -f ssh2_rsa_file' to generate RSA
keys for SSH2 and use the RSA keys for hostkeys or for user keys.

SSH2 RSA or DSA keys are added to .ssh/authorised_keys2 as before.

IdentityFile2, HostDsaKey and DSAAuthentication are obsolete.
you can use multiple IdentityFile and HostKey for all types of keys.

the option DSAAuthentication is replaced by PubkeyAuthetication.
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: rsa.h,v 1.8 2000/09/07 20:27:53 deraadt Exp $"); */
d23 1
a23 1
void rsa_private_decrypt __P((BIGNUM * out, BIGNUM * in, RSA * prv));
@


1.8
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: rsa.h,v 1.7 2000/06/20 01:39:44 markus Exp $"); */
a20 11

/* Calls SSL RSA_generate_key, only copies to prv and pub */
void    rsa_generate_key(RSA * prv, RSA * pub, unsigned int bits);

/*
 * Indicates whether the rsa module is permitted to show messages on the
 * terminal.
 */
void rsa_set_verbose __P((int verbose));

int rsa_alive __P((void));
@


1.8.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: rsa.h,v 1.10 2001/01/29 19:47:30 markus Exp $"); */
d22 11
d34 1
a34 1
int rsa_private_decrypt __P((BIGNUM * out, BIGNUM * in, RSA * prv));
@


1.8.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.8.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@@


1.8.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: rsa.h,v 1.11 2001/03/26 23:23:24 markus Exp $"); */
a23 2

void generate_additional_parameters __P((RSA *rsa));
@


1.8.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: rsa.h,v 1.14 2001/06/27 05:42:24 markus Exp $"); */
d22 4
a25 3
void	 rsa_public_encrypt(BIGNUM *, BIGNUM *, RSA *);
int	 rsa_private_decrypt(BIGNUM *, BIGNUM *, RSA *);
void	 rsa_generate_additional_parameters(RSA *);
@


1.8.2.6
log
@Merge OpenSSH 3.1.
@
text
@a0 2
/*	$OpenBSD: rsa.h,v 1.15 2002/03/04 17:27:39 stevesk Exp $	*/

d13 2
@


1.7
log
@OpenBSD tag
@
text
@a1 3
 *
 * rsa.h
 *
a2 1
 *
a4 3
 *
 * Created: Fri Mar  3 22:01:06 1995 ylo
 *
d7 6
a12 1
*/
d14 1
a14 1
/* RCSID("$OpenBSD: rsa.h,v 1.6 2000/04/14 10:30:32 markus Exp $"); */
@


1.6
log
@whitespace cleanup
@
text
@d16 1
a16 1
/* RCSID("$Id: rsa.h,v 1.5 2000/04/12 09:39:10 markus Exp $"); */
@


1.6.2.1
log
@Pull in the rest of openssh-2.2.0 to 2.7 branch (luvin' cvs...)
@
text
@d16 1
a16 1
/* RCSID("$OpenBSD: rsa.h,v 1.7 2000/06/20 01:39:44 markus Exp $"); */
@


1.6.2.2
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@d2 3
d6 1
d9 3
d14 1
a14 6
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */
d16 1
a16 1
/* RCSID("$OpenBSD: rsa.h,v 1.8 2000/09/07 20:27:53 deraadt Exp $"); */
@


1.6.2.3
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@d14 1
a14 1
/* RCSID("$OpenBSD: rsa.h,v 1.10 2001/01/29 19:47:30 markus Exp $"); */
d22 11
d34 1
a34 1
int rsa_private_decrypt __P((BIGNUM * out, BIGNUM * in, RSA * prv));
@


1.6.2.4
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@@


1.5
log
@#include <ssl/foo.h> -> <openssh/foo.h>
@
text
@d2 1
a2 1
 * 
d4 1
a4 1
 * 
d6 1
a6 1
 * 
d9 1
a9 1
 * 
d11 1
a11 1
 * 
d13 1
a13 1
 * 
d16 1
a16 1
/* RCSID("$Id: rsa.h,v 1.4 1999/11/24 19:53:50 markus Exp $"); */
@


1.4
log
@KNF, final part 3
@
text
@d16 1
a16 1
/* RCSID("$Id: rsa.h,v 1.3 1999/11/24 00:26:03 deraadt Exp $"); */
d21 2
a22 2
#include <ssl/bn.h>
#include <ssl/rsa.h>
@


1.3
log
@much more KNF
@
text
@d16 1
a16 1
/* RCSID("$Id: rsa.h,v 1.2 1999/09/29 06:15:00 deraadt Exp $"); */
d27 4
a30 2
/* Indicates whether the rsa module is permitted to show messages on
   the terminal. */
@


1.2
log
@test for RSA in the ssl library, real early on
@
text
@d2 12
a13 12

rsa.h

Author: Tatu Ylonen <ylo@@cs.hut.fi>

Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
                   All rights reserved

Created: Fri Mar  3 22:01:06 1995 ylo

RSA key generation, encryption and decryption.

d16 1
a16 1
/* RCSID("$Id: rsa.h,v 1.1 1999/09/28 04:45:37 provos Exp $"); */
d25 1
a25 1
void rsa_generate_key(RSA *prv, RSA *pub, unsigned int bits);
d31 1
a31 1
int  rsa_alive __P((void));
d33 2
a34 2
void rsa_public_encrypt __P((BIGNUM *out, BIGNUM *in, RSA *prv));
void rsa_private_decrypt __P((BIGNUM *out, BIGNUM *in, RSA *prv));
d36 1
a36 1
#endif /* RSA_H */
@


1.1
log
@convert all uses of gmp to SSL bignum
convert all used of rsa to SSL rsa functions
remove all use of randomstate to OpenBSD arc4random() and arc4_stir()
all this done at a long long night in Canada.
@
text
@d16 1
a16 1
/* RCSID("$Id: rsa.h,v 1.2 1999/05/04 11:59:06 bg Exp $"); */
d29 1
a29 1
void rsa_set_verbose(int verbose);
d31 4
a34 2
void rsa_public_encrypt(BIGNUM *out, BIGNUM *in, RSA *prv);
void rsa_private_decrypt(BIGNUM *out, BIGNUM *in, RSA *prv);
@

