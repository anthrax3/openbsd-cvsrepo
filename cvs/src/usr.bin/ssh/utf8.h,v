head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.2
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.4
	OPENBSD_6_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.1
date	2016.05.25.23.48.45;	author schwarze;	state Exp;
branches;
next	;
commitid	NPBJoBfuBDOIqIQi;


desc
@@


1.1
log
@To prevent screwing up terminal settings when printing to the
terminal, for ASCII and UTF-8, escape bytes not forming characters
and bytes forming non-printable characters with vis(3) VIS_OCTAL.
For other character sets, abort printing of the current string in
these cases.  In particular,
* let scp(1) respect the local user's LC_CTYPE locale(1);
* sanitize data received from the remote host;
* sanitize filenames, usernames, and similar data even locally;
* take character display widths into account for the progressmeter.

This is believed to be sufficient to keep the local terminal safe
on OpenBSD, but bad things can still happen on other systems with
state-dependent locales because many places in the code print
unencoded ASCII characters into the output stream.

Using feedback from djm@@ and martijn@@,
various aspects discussed with many others.

deraadt@@ says it should go in now, i probably already hesitated too long
@
text
@/* $OpenBSD$ */
/*
 * Copyright (c) 2016 Ingo Schwarze <schwarze@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

int	 mprintf(const char *, ...)
	     __attribute__((format(printf, 1, 2)));
int	 fmprintf(FILE *, const char *, ...)
	     __attribute__((format(printf, 2, 3)));
int	 vfmprintf(FILE *, const char *, va_list);
int	 snmprintf(char *, size_t, int *, const char *, ...)
	     __attribute__((format(printf, 4, 5)));
@
