head	1.21;
access;
symbols
	OPENBSD_6_1:1.21.0.12
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.10
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.6
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.4
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.2
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.19.0.4
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.17.0.4
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.16.0.10
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.8
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.6
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.4
	OPENBSD_5_0:1.16.0.2
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.15.0.4
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.2
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.13.0.16
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.12
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.10
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.8
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.6
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.2
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.4
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.10.0.16
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.14
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.12
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.10
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.8
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.6
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.21
date	2015.01.08.10.14.08;	author djm;	state Exp;
branches;
next	1.20;
commitid	397Wklb10N5bP6VW;

1.20
date	2014.12.04.02.24.32;	author djm;	state Exp;
branches;
next	1.19;
commitid	0YGyOuIh3H3xTolw;

1.19
date	2014.07.03.23.18.35;	author djm;	state Exp;
branches;
next	1.18;
commitid	ZwVOh9cwdaD26Ahv;

1.18
date	2014.06.24.01.13.21;	author djm;	state Exp;
branches;
next	1.17;
commitid	1h9UxAQmwdaqUzyX;

1.17
date	2013.12.06.13.34.54;	author markus;	state Exp;
branches;
next	1.16;

1.16
date	2011.05.04.21.15.29;	author djm;	state Exp;
branches;
next	1.15;

1.15
date	2010.08.04.05.42.47;	author djm;	state Exp;
branches;
next	1.14;

1.14
date	2010.03.04.10.36.03;	author djm;	state Exp;
branches;
next	1.13;

1.13
date	2006.04.25.08.02.27;	author dtucker;	state Exp;
branches;
next	1.12;

1.12
date	2006.03.25.22.22.42;	author djm;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.13.10.26.52;	author dtucker;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.23.19.24.30;	author markus;	state Exp;
branches
	1.10.14.1
	1.10.16.1;
next	1.9;

1.9
date	2002.03.04.17.27.39;	author stevesk;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2001.06.26.17.27.22;	author markus;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2001.06.26.06.32.48;	author itojun;	state Exp;
branches;
next	1.6;

1.6
date	2001.03.26.08.07.08;	author markus;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2000.10.16.09.38.44;	author djm;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2000.09.07.21.13.36;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.07.20.27.50;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.06.09.46.41;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.26.20.56.30;	author markus;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2000.11.08.21.30.27;	author jason;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.03.12.15.44.08;	author jason;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2001.03.21.18.52.36;	author jason;	state Exp;
branches;
next	;

1.5.2.1
date	2001.05.07.21.09.27;	author jason;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2001.09.27.00.15.41;	author miod;	state Exp;
branches;
next	1.5.2.3;

1.5.2.3
date	2002.03.08.17.04.42;	author brad;	state Exp;
branches;
next	;

1.6.2.1
date	2001.09.27.19.03.54;	author jason;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2002.03.09.00.20.44;	author miod;	state Exp;
branches;
next	;

1.8.2.1
date	2002.03.07.17.37.46;	author jason;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2002.06.22.07.23.17;	author miod;	state Exp;
branches;
next	;

1.9.2.1
date	2002.06.26.15.30.37;	author jason;	state Exp;
branches;
next	;

1.10.14.1
date	2006.10.06.03.19.32;	author brad;	state Exp;
branches;
next	;

1.10.16.1
date	2006.09.30.04.06.50;	author brad;	state Exp;
branches;
next	;


desc
@@


1.21
log
@deprecate key_load_private_pem() and sshkey_load_private_pem()
interfaces. Refactor the generic key loading API to not require
pathnames to be specified (they weren't really used).

Fixes a few other things en passant:

Makes ed25519 keys work for hostbased authentication (ssh-keysign
previously used the PEM-only routines).

Fixes key comment regression bz#2306: key pathnames were being lost as
comment fields.

ok markus@@
@
text
@/* $OpenBSD: authfile.h,v 1.20 2014/12/04 02:24:32 djm Exp $ */

/*
 * Copyright (c) 2000, 2013 Markus Friedl.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef AUTHFILE_H
#define AUTHFILE_H

struct sshbuf;
struct sshkey;

/* XXX document these */
/* XXX some of these could probably be merged/retired */

int sshkey_save_private(struct sshkey *, const char *,
    const char *, const char *, int, const char *, int);
int sshkey_load_file(int, struct sshbuf *);
int sshkey_load_cert(const char *, struct sshkey **);
int sshkey_load_public(const char *, struct sshkey **, char **);
int sshkey_load_private(const char *, const char *, struct sshkey **, char **);
int sshkey_load_private_cert(int, const char *, const char *,
    struct sshkey **, int *);
int sshkey_load_private_type(int, const char *, const char *,
    struct sshkey **, char **, int *);
int sshkey_load_private_type_fd(int fd, int type, const char *passphrase,
    struct sshkey **keyp, char **commentp);
int sshkey_perm_ok(int, const char *);
int sshkey_in_file(struct sshkey *, const char *, int, int);
int sshkey_check_revoked(struct sshkey *key, const char *revoked_keys_file);

#endif
@


1.20
log
@add RevokedHostKeys option for the client

Allow textfile or KRL-based revocation of hostkeys.
@
text
@d1 1
a1 1
/* $OpenBSD: authfile.h,v 1.19 2014/07/03 23:18:35 djm Exp $ */
d33 3
d38 1
a38 1
int sshkey_load_file(int, const char *, struct sshbuf *);
d46 2
a47 1
int sshkey_load_private_pem(int, int, const char *, struct sshkey **, char **);
@


1.19
log
@remove leakmalloc droppings
@
text
@d1 1
a1 1
/* $OpenBSD: authfile.h,v 1.18 2014/06/24 01:13:21 djm Exp $ */
d45 2
a46 1
int sshkey_in_file(struct sshkey *, const char *, int);
@


1.18
log
@New key API: refactor key-related functions to be more library-like,
existing API is offered as a set of wrappers.

with and ok markus@@

Thanks also to Ben Hawkes, David Tomaschik, Ivan Fratric, Matthew
Dempsky and Ron Bowes for a detailed review a few months ago.
@
text
@d1 1
a1 1
/* $OpenBSD: authfile.h,v 1.17 2013/12/06 13:34:54 markus Exp $ */
a28 4

#ifdef WITH_LEAKMALLOC
#include "leakmalloc.h"
#endif
@


1.17
log
@new private key format, bcrypt as KDF by default; details in PROTOCOL.key;
feedback and lots help from djm; ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: authfile.h,v 1.16 2011/05/04 21:15:29 djm Exp $ */
d4 1
a4 3
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
d6 19
a24 5
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
d30 20
a49 13
int	 key_save_private(Key *, const char *, const char *, const char *,
    int, const char *, int);
int	 key_load_file(int, const char *, Buffer *);
Key	*key_load_cert(const char *);
Key	*key_load_public(const char *, char **);
Key	*key_load_public_type(int, const char *, char **);
Key	*key_parse_private(Buffer *, const char *, const char *, char **);
Key	*key_load_private(const char *, const char *, char **);
Key	*key_load_private_cert(int, const char *, const char *, int *);
Key	*key_load_private_type(int, const char *, const char *, char **, int *);
Key	*key_load_private_pem(int, int, const char *, char **);
int	 key_perm_ok(int, const char *);
int	 key_in_file(Key *, const char *, int);
@


1.16
log
@allow "ssh-add - < key"; feedback and ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: authfile.h,v 1.15 2010/08/04 05:42:47 djm Exp $ */
d18 2
a19 1
int	 key_save_private(Key *, const char *, const char *, const char *);
@


1.15
log
@enable certificates for hostbased authentication, from Iain Morgan;
"looks ok" markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: authfile.h,v 1.14 2010/03/04 10:36:03 djm Exp $ */
d19 1
d23 1
@


1.14
log
@Add a TrustedUserCAKeys option to sshd_config to specify CA keys that
are trusted to authenticate users (in addition than doing it per-user
in authorized_keys).

Add a RevokedKeys option to sshd_config and a @@revoked marker to
known_hosts to allow keys to me revoked and banned for user or host
authentication.

feedback and ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: authfile.h,v 1.13 2006/04/25 08:02:27 dtucker Exp $ */
d19 1
d23 1
@


1.13
log
@Prevent ssh from trying to open private keys with bad permissions more than
once or prompting for their passphrases (which it subsequently ignores
anyway), similar to a previous change in ssh-add.  bz #1186, ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: authfile.h,v 1.12 2006/03/25 22:22:42 djm Exp $ */
d25 1
@


1.12
log
@standardise spacing in $OpenBSD$ tags; requested by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: authfile.h,v 1.11 2006/03/13 10:26:52 dtucker Exp $ */
d22 1
a22 1
Key	*key_load_private_type(int, const char *, const char *, char **);
@


1.11
log
@Make ssh-add check file permissions before attempting to load private
key files multiple times; it will fail anyway and this prevents confusing
multiple prompts and warnings.  mindrot #1138, ok djm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: authfile.h,v 1.10 2002/05/23 19:24:30 markus Exp $	*/
@


1.10
log
@add /usr/libexec/ssh-keysign: a setuid helper program for hostbased authentication
in protocol v2 (needs to access the hostkeys).
@
text
@d1 1
a1 1
/*	$OpenBSD: authfile.h,v 1.9 2002/03/04 17:27:39 stevesk Exp $	*/
d24 1
@


1.10.14.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: authfile.h,v 1.13 2006/04/25 08:02:27 dtucker Exp $ */
d22 1
a22 1
Key	*key_load_private_type(int, const char *, const char *, char **, int *);
a23 1
int	 key_perm_ok(int, const char *);
@


1.10.16.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: authfile.h,v 1.13 2006/04/25 08:02:27 dtucker Exp $ */
d22 1
a22 1
Key	*key_load_private_type(int, const char *, const char *, char **, int *);
a23 1
int	 key_perm_ok(int, const char *);
@


1.9
log
@$OpenBSD$ and RCSID() cleanup: don't use RCSID() in .h files; add
missing RCSID() to .c files and remove dup /*$OpenBSD$*/ from .c
files.  ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: authfile.h,v 1.8 2001/06/26 17:27:22 markus Exp $	*/
d23 1
@


1.9.2.1
log
@Pull in OpenSSH-3.4
@
text
@d1 1
a1 1
/*	$OpenBSD: authfile.h,v 1.10 2002/05/23 19:24:30 markus Exp $	*/
a22 1
Key	*key_load_private_pem(int, int, const char *, char **);
@


1.8
log
@remove comments from .h, since they are cut&paste from the .c files
and out of sync
@
text
@d1 2
a13 2

/* $OpenBSD: authfile.h,v 1.7 2001/06/26 06:32:48 itojun Exp $ */
@


1.8.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@a0 2
/*	$OpenBSD: authfile.h,v 1.9 2002/03/04 17:27:39 stevesk Exp $	*/

d12 2
@


1.8.2.2
log
@Update OpenSSH to version 3.3 (with local changes, configuration files still
living in /etc and privsep user being nobody).
@
text
@d1 1
a1 1
/*	$OpenBSD: authfile.h,v 1.8.2.1 2002/03/07 17:37:46 jason Exp $	*/
a22 1
Key	*key_load_private_pem(int, int, const char *, char **);
@


1.7
log
@prototype pedant.  not very creative...
- () -> (void)
- no variable names
@
text
@d13 1
a13 1
/* $OpenBSD: authfile.h,v 1.6 2001/03/26 08:07:08 markus Exp $ */
d18 5
a22 14
int
key_save_private(Key *, const char *, const char *, const char *);

Key *
key_load_public(const char *, char **);

Key *
key_load_public_type(int, const char *, char **);

Key *
key_load_private(const char *, const char *, char **);

Key *
key_load_private_type(int, const char *, const char *, char **);
@


1.6
log
@simpler key load/save interface, see authfile.h
@
text
@d13 1
a13 1
/* $OpenBSD: authfile.h,v 1.5 2000/10/16 09:38:44 djm Exp $ */
d19 1
a19 2
key_save_private(Key *key, const char *filename, const char *passphrase,
    const char *comment);
d22 1
a22 1
key_load_public(const char *filename, char **commentp);
d25 1
a25 1
key_load_public_type(int type, const char *filename, char **commentp);
d28 1
a28 2
key_load_private(const char *filename, const char *passphrase,
    char **commentp);
d31 1
a31 2
key_load_private_type(int type, const char *filename, const char *passphrase,
    char **commentp);
@


1.6.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d13 1
a13 1
/* $OpenBSD: authfile.h,v 1.8 2001/06/26 17:27:22 markus Exp $ */
d18 17
a34 5
int	 key_save_private(Key *, const char *, const char *, const char *);
Key	*key_load_public(const char *, char **);
Key	*key_load_public_type(int, const char *, char **);
Key	*key_load_private(const char *, const char *, char **);
Key	*key_load_private_type(int, const char *, const char *, char **);
@


1.6.2.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@a0 2
/*	$OpenBSD: authfile.h,v 1.9 2002/03/04 17:27:39 stevesk Exp $	*/

d12 2
@


1.5
log
@Add idents for files which lack them

Fix idents Id -> OpenBSD for the rest
@
text
@a4 1
 * Functions to interface with the SSH_AUTHENTICATION_FD socket.
d13 1
a13 1
/* $OpenBSD$ */
d18 3
d22 2
a23 10
/*
 * Saves the authentication (private) key in a file, encrypting it with
 * passphrase.
 * For RSA keys: The identification of the file (lowest 64 bits of n)
 * will precede the key to provide identification of the key without
 * needing a passphrase.
 */
int
save_private_key(const char *filename, const char *passphrase,
    Key * private_key, const char *comment);
d25 2
a26 8
/*
 * Loads the public part of the key file (public key and comment). Returns 0
 * if an error occurred; zero if the public key was successfully read.  The
 * comment of the key is returned in comment_return if it is non-NULL; the
 * caller must free the value with xfree.
 */
int load_public_key(const char *filename, Key * pub, char **comment_return);
int try_load_public_key(const char *filename, Key * pub, char **comment_return);
d28 7
a34 10
/*
 * Loads the private key from the file.  Returns 0 if an error is encountered
 * (file does not exist or is not readable, or passphrase is bad). This
 * initializes the private key.  The comment of the key is returned in
 * comment_return if it is non-NULL; the caller must free the value with
 * xfree.
 */
int
load_private_key(const char *filename, const char *passphrase,
    Key * private_key, char **comment_return);
@


1.5.2.1
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@d5 1
d14 1
a14 1
/* $OpenBSD: authfile.h,v 1.6 2001/03/26 08:07:08 markus Exp $ */
d19 8
d28 2
a29 2
key_save_private(Key *key, const char *filename, const char *passphrase,
    const char *comment);
d31 8
a38 2
Key *
key_load_public(const char *filename, char **commentp);
d40 10
a49 10
Key *
key_load_public_type(int type, const char *filename, char **commentp);

Key *
key_load_private(const char *filename, const char *passphrase,
    char **commentp);

Key *
key_load_private_type(int type, const char *filename, const char *passphrase,
    char **commentp);
@


1.5.2.2
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d13 1
a13 1
/* $OpenBSD: authfile.h,v 1.8 2001/06/26 17:27:22 markus Exp $ */
d18 17
a34 5
int	 key_save_private(Key *, const char *, const char *, const char *);
Key	*key_load_public(const char *, char **);
Key	*key_load_public_type(int, const char *, char **);
Key	*key_load_private(const char *, const char *, char **);
Key	*key_load_private_type(int, const char *, const char *, char **);
@


1.5.2.3
log
@Merge OpenSSH 3.1.
@
text
@a0 2
/*	$OpenBSD: authfile.h,v 1.9 2002/03/04 17:27:39 stevesk Exp $	*/

d12 2
@


1.4
log
@some more Copyright fixes
@
text
@d13 3
d18 1
@


1.3
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d2 4
a5 1
 * Copyright (c) 2000 Markus Friedl.  All rights reserved.
d7 5
a11 19
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.2
log
@prototype
@
text
@d1 23
@


1.1
log
@add DSA pubkey auth and other SSH2 fixes.  use ssh-keygen -[xX]
for trading keys with the real and the original SSH, directly from the
people who invented the SSH protocol.
@
text
@d21 2
a22 3
int
load_public_key(const char *filename, Key * pub,
    char **comment_return);
@


1.1.2.1
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@a0 15
/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 * Functions to interface with the SSH_AUTHENTICATION_FD socket.
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */

/* $OpenBSD: authfile.h,v 1.5 2000/10/16 09:38:44 djm Exp $ */

a3 1

d21 3
a23 2
int load_public_key(const char *filename, Key * pub, char **comment_return);
int try_load_public_key(const char *filename, Key * pub, char **comment_return);
@


1.1.2.2
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@@


1.1.2.3
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@@


