head	1.140;
access;
symbols
	OPENBSD_6_1:1.133.0.6
	OPENBSD_6_1_BASE:1.133
	OPENBSD_6_0:1.133.0.4
	OPENBSD_6_0_BASE:1.133
	OPENBSD_5_9:1.130.0.2
	OPENBSD_5_9_BASE:1.130
	OPENBSD_5_8:1.126.0.2
	OPENBSD_5_8_BASE:1.126
	OPENBSD_5_7:1.125.0.2
	OPENBSD_5_7_BASE:1.125
	OPENBSD_5_6:1.122.0.4
	OPENBSD_5_6_BASE:1.122
	OPENBSD_5_5:1.120.0.4
	OPENBSD_5_5_BASE:1.120
	OPENBSD_5_4:1.116.0.2
	OPENBSD_5_4_BASE:1.116
	OPENBSD_5_3:1.115.0.2
	OPENBSD_5_3_BASE:1.115
	OPENBSD_5_2:1.109.0.2
	OPENBSD_5_2_BASE:1.109
	OPENBSD_5_1_BASE:1.108
	OPENBSD_5_1:1.108.0.2
	OPENBSD_5_0:1.106.0.2
	OPENBSD_5_0_BASE:1.106
	OPENBSD_4_9:1.101.0.2
	OPENBSD_4_9_BASE:1.101
	OPENBSD_4_8:1.98.0.2
	OPENBSD_4_8_BASE:1.98
	OPENBSD_4_7:1.92.0.2
	OPENBSD_4_7_BASE:1.92
	OPENBSD_4_6:1.79.0.8
	OPENBSD_4_6_BASE:1.79
	OPENBSD_4_5:1.79.0.4
	OPENBSD_4_5_BASE:1.79
	OPENBSD_4_4:1.79.0.2
	OPENBSD_4_4_BASE:1.79
	OPENBSD_4_3:1.75.0.4
	OPENBSD_4_3_BASE:1.75
	OPENBSD_4_2:1.75.0.2
	OPENBSD_4_2_BASE:1.75
	OPENBSD_4_1:1.74.0.2
	OPENBSD_4_1_BASE:1.74
	OPENBSD_4_0:1.72.0.6
	OPENBSD_4_0_BASE:1.72
	OPENBSD_3_9:1.72.0.2
	OPENBSD_3_9_BASE:1.72
	OPENBSD_3_8:1.69.0.2
	OPENBSD_3_8_BASE:1.69
	OPENBSD_3_7:1.67.0.2
	OPENBSD_3_7_BASE:1.67
	OPENBSD_3_6:1.63.0.2
	OPENBSD_3_6_BASE:1.63
	OPENBSD_3_5:1.61.0.2
	OPENBSD_3_5_BASE:1.61
	OPENBSD_3_4:1.60.0.2
	OPENBSD_3_4_BASE:1.60
	OPENBSD_3_3:1.55.0.2
	OPENBSD_3_3_BASE:1.55
	OPENBSD_3_2:1.54.0.2
	OPENBSD_3_2_BASE:1.54
	OPENBSD_3_1:1.53.0.2
	OPENBSD_3_1_BASE:1.53
	OPENBSD_3_0:1.49.0.2
	OPENBSD_3_0_BASE:1.49
	OPENBSD_2_9_BASE:1.40
	OPENBSD_2_9:1.40.0.2
	OPENBSD_2_8:1.23.0.2
	OPENBSD_2_8_BASE:1.23
	OPENBSD_2_7:1.18.0.2
	OPENBSD_2_7_BASE:1.18
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7;
locks; strict;
comment	@.\" @;


1.140
date	2017.05.03.06.32.02;	author jmc;	state Exp;
branches;
next	1.139;
commitid	NNIlzHLJ71CXYS5g;

1.139
date	2017.05.02.17.04.09;	author jmc;	state Exp;
branches;
next	1.138;
commitid	3GJtqtkkX0bMHhPP;

1.138
date	2017.05.02.09.05.58;	author jmc;	state Exp;
branches;
next	1.137;
commitid	L29rqYcMMFbzsqrA;

1.137
date	2017.05.02.07.13.31;	author jmc;	state Exp;
branches;
next	1.136;
commitid	EXq6s2oF8nitGsqW;

1.136
date	2017.04.30.23.18.44;	author djm;	state Exp;
branches;
next	1.135;
commitid	NPnVhZTcf5ddO7Ys;

1.135
date	2017.04.29.06.06.01;	author jmc;	state Exp;
branches;
next	1.134;
commitid	ecBEheU2l0kENSrC;

1.134
date	2017.04.29.04.12.25;	author djm;	state Exp;
branches;
next	1.133;
commitid	WG9mzIT0boRtKmGp;

1.133
date	2016.06.16.06.10.45;	author jmc;	state Exp;
branches;
next	1.132;
commitid	C4CrkUOaiidNML5d;

1.132
date	2016.05.03.18.38.12;	author jmc;	state Exp;
branches;
next	1.131;
commitid	nYwlB6Xbe8ID7ziR;

1.131
date	2016.05.03.14.54.08;	author djm;	state Exp;
branches;
next	1.130;
commitid	aI9Byppi5kotcWlC;

1.130
date	2016.02.17.07.38.19;	author jmc;	state Exp;
branches;
next	1.129;
commitid	EioSSmAAduCymkBM;

1.129
date	2015.11.13.04.34.15;	author djm;	state Exp;
branches;
next	1.128;
commitid	epcZt98isMTyr8z5;

1.128
date	2015.11.05.09.48.05;	author jmc;	state Exp;
branches;
next	1.127;
commitid	2IdzdclaEuAvUpsp;

1.127
date	2015.08.20.19.20.06;	author naddy;	state Exp;
branches;
next	1.126;
commitid	C4GfmCWW5ZH8ahzx;

1.126
date	2015.07.03.03.49.45;	author djm;	state Exp;
branches;
next	1.125;
commitid	XxrOOTFUKuLzoQb7;

1.125
date	2015.02.24.15.24.05;	author naddy;	state Exp;
branches;
next	1.124;
commitid	p5RoOkcHXvtcyxH5;

1.124
date	2014.12.21.22.27.56;	author djm;	state Exp;
branches;
next	1.123;
commitid	EbtriidyZdsmXksl;

1.123
date	2014.08.30.15.33.50;	author sobrado;	state Exp;
branches;
next	1.122;
commitid	qDOCDATnMVba0efh;

1.122
date	2014.03.31.13.39.34;	author jmc;	state Exp;
branches;
next	1.121;

1.121
date	2014.03.15.17.28.26;	author deraadt;	state Exp;
branches;
next	1.120;

1.120
date	2014.02.05.20.13.25;	author naddy;	state Exp;
branches;
next	1.119;

1.119
date	2013.12.21.07.10.47;	author tedu;	state Exp;
branches;
next	1.118;

1.118
date	2013.12.07.11.58.46;	author naddy;	state Exp;
branches;
next	1.117;

1.117
date	2013.12.07.08.08.26;	author djm;	state Exp;
branches;
next	1.116;

1.116
date	2013.06.27.14.05.37;	author jmc;	state Exp;
branches;
next	1.115;

1.115
date	2013.01.19.07.13.25;	author jmc;	state Exp;
branches;
next	1.114;

1.114
date	2013.01.18.21.48.43;	author jmc;	state Exp;
branches;
next	1.113;

1.113
date	2013.01.18.08.39.04;	author jmc;	state Exp;
branches;
next	1.112;

1.112
date	2013.01.18.07.57.47;	author jmc;	state Exp;
branches;
next	1.111;

1.111
date	2013.01.17.23.00.01;	author djm;	state Exp;
branches;
next	1.110;

1.110
date	2012.08.15.18.25.50;	author jmc;	state Exp;
branches;
next	1.109;

1.109
date	2012.07.06.00.41.59;	author dtucker;	state Exp;
branches;
next	1.108;

1.108
date	2011.10.16.11.02.46;	author dtucker;	state Exp;
branches;
next	1.107;

1.107
date	2011.09.07.02.18.31;	author deraadt;	state Exp;
branches;
next	1.106;

1.106
date	2011.04.13.04.09.37;	author djm;	state Exp;
branches;
next	1.105;

1.105
date	2011.04.13.04.02.48;	author djm;	state Exp;
branches;
next	1.104;

1.104
date	2011.03.24.15.29.30;	author jmc;	state Exp;
branches;
next	1.103;

1.103
date	2011.03.23.16.24.56;	author stevesk;	state Exp;
branches;
next	1.102;

1.102
date	2011.03.23.15.16.22;	author stevesk;	state Exp;
branches;
next	1.101;

1.101
date	2010.10.28.18.33.28;	author jmc;	state Exp;
branches;
next	1.100;

1.100
date	2010.09.10.15.19.29;	author naddy;	state Exp;
branches;
next	1.99;

1.99
date	2010.08.31.11.54.45;	author djm;	state Exp;
branches;
next	1.98;

1.98
date	2010.08.04.06.07.11;	author djm;	state Exp;
branches;
next	1.97;

1.97
date	2010.07.15.21.20.38;	author schwarze;	state Exp;
branches;
next	1.96;

1.96
date	2010.06.30.07.24.25;	author jmc;	state Exp;
branches;
next	1.95;

1.95
date	2010.06.29.23.15.30;	author djm;	state Exp;
branches;
next	1.94;

1.94
date	2010.04.16.06.47.04;	author jmc;	state Exp;
branches;
next	1.93;

1.93
date	2010.04.16.01.47.26;	author djm;	state Exp;
branches;
next	1.92;

1.92
date	2010.03.13.23.38.13;	author jmc;	state Exp;
branches;
next	1.91;

1.91
date	2010.03.13.21.45.46;	author djm;	state Exp;
branches;
next	1.90;

1.90
date	2010.03.10.07.40.35;	author jmc;	state Exp;
branches;
next	1.89;

1.89
date	2010.03.08.09.41.27;	author jmc;	state Exp;
branches;
next	1.88;

1.88
date	2010.03.08.00.28.55;	author djm;	state Exp;
branches;
next	1.87;

1.87
date	2010.03.04.22.52.40;	author jmc;	state Exp;
branches;
next	1.86;

1.86
date	2010.03.04.20.35.08;	author djm;	state Exp;
branches;
next	1.85;

1.85
date	2010.02.26.22.09.28;	author jmc;	state Exp;
branches;
next	1.84;

1.84
date	2010.02.26.20.29.54;	author djm;	state Exp;
branches;
next	1.83;

1.83
date	2010.02.10.23.20.38;	author markus;	state Exp;
branches;
next	1.82;

1.82
date	2010.02.08.22.03.05;	author jmc;	state Exp;
branches;
next	1.81;

1.81
date	2010.02.08.10.50.20;	author markus;	state Exp;
branches;
next	1.80;

1.80
date	2009.10.24.00.48.34;	author dtucker;	state Exp;
branches;
next	1.79;

1.79
date	2008.07.24.23.55.30;	author sthen;	state Exp;
branches;
next	1.78;

1.78
date	2008.06.12.19.10.09;	author jmc;	state Exp;
branches;
next	1.77;

1.77
date	2008.06.11.22.20.46;	author grunk;	state Exp;
branches;
next	1.76;

1.76
date	2008.06.11.21.01.35;	author grunk;	state Exp;
branches;
next	1.75;

1.75
date	2007.05.31.19.20.16;	author jmc;	state Exp;
branches;
next	1.74;

1.74
date	2007.01.12.20.20.41;	author jmc;	state Exp;
branches;
next	1.73;

1.73
date	2006.12.11.21.25.46;	author markus;	state Exp;
branches;
next	1.72;

1.72
date	2005.11.28.05.16.53;	author dtucker;	state Exp;
branches;
next	1.71;

1.71
date	2005.10.31.19.55.25;	author jmc;	state Exp;
branches;
next	1.70;

1.70
date	2005.10.31.11.12.49;	author djm;	state Exp;
branches;
next	1.69;

1.69
date	2005.06.08.03.50.00;	author djm;	state Exp;
branches
	1.69.2.1;
next	1.68;

1.68
date	2005.04.21.06.17.50;	author djm;	state Exp;
branches;
next	1.67;

1.67
date	2005.03.14.10.09.03;	author dtucker;	state Exp;
branches
	1.67.2.1;
next	1.66;

1.66
date	2005.03.01.18.15.56;	author jmc;	state Exp;
branches;
next	1.65;

1.65
date	2005.03.01.15.05.00;	author jmc;	state Exp;
branches;
next	1.64;

1.64
date	2005.03.01.10.42.49;	author djm;	state Exp;
branches;
next	1.63;

1.63
date	2004.08.13.00.01.43;	author jmc;	state Exp;
branches
	1.63.2.1;
next	1.62;

1.62
date	2004.08.12.21.41.13;	author jakob;	state Exp;
branches;
next	1.61;

1.61
date	2003.12.22.09.16.58;	author djm;	state Exp;
branches
	1.61.2.1;
next	1.60;

1.60
date	2003.07.28.09.49.56;	author djm;	state Exp;
branches
	1.60.2.1;
next	1.59;

1.59
date	2003.06.10.09.12.11;	author jmc;	state Exp;
branches;
next	1.58;

1.58
date	2003.05.20.12.09.31;	author jmc;	state Exp;
branches;
next	1.57;

1.57
date	2003.05.14.18.16.20;	author jakob;	state Exp;
branches;
next	1.56;

1.56
date	2003.03.28.10.11.43;	author jmc;	state Exp;
branches;
next	1.55;

1.55
date	2002.11.26.02.35.30;	author stevesk;	state Exp;
branches
	1.55.2.1;
next	1.54;

1.54
date	2002.06.19.00.27.55;	author deraadt;	state Exp;
branches
	1.54.2.1;
next	1.53;

1.53
date	2002.02.16.14.53.37;	author stevesk;	state Exp;
branches
	1.53.2.1;
next	1.52;

1.52
date	2001.12.21.08.52.22;	author djm;	state Exp;
branches;
next	1.51;

1.51
date	2001.11.21.18.49.14;	author stevesk;	state Exp;
branches;
next	1.50;

1.50
date	2001.10.25.21.14.32;	author markus;	state Exp;
branches;
next	1.49;

1.49
date	2001.09.05.06.23.07;	author deraadt;	state Exp;
branches
	1.49.2.1;
next	1.48;

1.48
date	2001.08.02.15.07.23;	author jakob;	state Exp;
branches;
next	1.47;

1.47
date	2001.07.23.14.14.18;	author aaron;	state Exp;
branches;
next	1.46;

1.46
date	2001.06.25.17.18.27;	author markus;	state Exp;
branches;
next	1.45;

1.45
date	2001.06.23.05.57.09;	author deraadt;	state Exp;
branches;
next	1.44;

1.44
date	2001.06.23.02.33.05;	author deraadt;	state Exp;
branches;
next	1.43;

1.43
date	2001.06.22.21.55.49;	author markus;	state Exp;
branches;
next	1.42;

1.42
date	2001.06.03.19.36.44;	author markus;	state Exp;
branches;
next	1.41;

1.41
date	2001.05.05.13.42.52;	author stevesk;	state Exp;
branches;
next	1.40;

1.40
date	2001.04.23.21.57.07;	author markus;	state Exp;
branches
	1.40.2.1;
next	1.39;

1.39
date	2001.04.22.23.58.36;	author markus;	state Exp;
branches;
next	1.38;

1.38
date	2001.04.22.13.41.02;	author markus;	state Exp;
branches;
next	1.37;

1.37
date	2001.04.22.13.25.37;	author markus;	state Exp;
branches;
next	1.36;

1.36
date	2001.04.10.09.13.21;	author itojun;	state Exp;
branches;
next	1.35;

1.35
date	2001.03.11.22.33.23;	author markus;	state Exp;
branches;
next	1.34;

1.34
date	2001.03.11.15.04.16;	author jakob;	state Exp;
branches;
next	1.33;

1.33
date	2001.03.02.18.54.31;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2001.02.22.08.03.51;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2001.02.22.06.43.55;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2001.02.08.19.22.38;	author itojun;	state Exp;
branches;
next	1.29;

1.29
date	2001.01.29.01.58.18;	author niklas;	state Exp;
branches;
next	1.28;

1.28
date	2001.01.28.10.24.04;	author markus;	state Exp;
branches;
next	1.27;

1.27
date	2001.01.21.09.00.33;	author jakob;	state Exp;
branches;
next	1.26;

1.26
date	2001.01.13.17.59.18;	author markus;	state Exp;
branches;
next	1.25;

1.25
date	2000.11.12.19.50.38;	author markus;	state Exp;
branches;
next	1.24;

1.24
date	2000.11.10.05.10.40;	author aaron;	state Exp;
branches;
next	1.23;

1.23
date	2000.10.09.21.30.43;	author markus;	state Exp;
branches
	1.23.2.1;
next	1.22;

1.22
date	2000.09.07.20.27.54;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2000.08.25.16.16.15;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2000.07.20.22.23.14;	author markus;	state Exp;
branches;
next	1.19;

1.19
date	2000.07.06.04.06.56;	author aaron;	state Exp;
branches;
next	1.18;

1.18
date	2000.05.08.17.26.04;	author hugh;	state Exp;
branches
	1.18.2.1;
next	1.17;

1.17
date	2000.05.03.08.37.27;	author markus;	state Exp;
branches;
next	1.16;

1.16
date	2000.05.03.02.52.49;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2000.05.02.23.33.46;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2000.04.26.21.55.04;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2000.04.12.21.47.51;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	2000.03.23.21.10.10;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.01.22.02.17.50;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.12.25.13.35.55;	author markus;	state Exp;
branches;
next	1.9;

1.9
date	99.11.16.22.49.28;	author markus;	state Exp;
branches;
next	1.8;

1.8
date	99.11.15.07.18.46;	author ericj;	state Exp;
branches;
next	1.7;

1.7
date	99.10.17.20.35.46;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.10.17.00.31.06;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	99.10.07.18.58.26;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.10.02.13.10.26;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.10.01.18.17.49;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.09.26.22.30.06;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.09.26.20.53.37;	author deraadt;	state Exp;
branches;
next	;

1.18.2.1
date	2000.09.01.18.23.23;	author jason;	state Exp;
branches;
next	1.18.2.2;

1.18.2.2
date	2000.11.08.21.31.21;	author jason;	state Exp;
branches;
next	1.18.2.3;

1.18.2.3
date	2001.03.12.15.44.16;	author jason;	state Exp;
branches;
next	1.18.2.4;

1.18.2.4
date	2001.03.21.18.53.09;	author jason;	state Exp;
branches;
next	;

1.23.2.1
date	2001.02.16.20.13.18;	author jason;	state Exp;
branches;
next	1.23.2.2;

1.23.2.2
date	2001.02.19.17.19.29;	author jason;	state Exp;
branches;
next	1.23.2.3;

1.23.2.3
date	2001.03.21.19.46.29;	author jason;	state Exp;
branches;
next	1.23.2.4;

1.23.2.4
date	2001.05.07.21.09.35;	author jason;	state Exp;
branches;
next	1.23.2.5;

1.23.2.5
date	2001.09.27.00.15.42;	author miod;	state Exp;
branches;
next	1.23.2.6;

1.23.2.6
date	2001.11.15.22.50.30;	author miod;	state Exp;
branches;
next	1.23.2.7;

1.23.2.7
date	2002.03.08.17.04.43;	author brad;	state Exp;
branches;
next	;

1.40.2.1
date	2001.09.27.19.03.55;	author jason;	state Exp;
branches;
next	1.40.2.2;

1.40.2.2
date	2001.11.15.22.51.15;	author miod;	state Exp;
branches;
next	1.40.2.3;

1.40.2.3
date	2002.03.09.00.20.45;	author miod;	state Exp;
branches;
next	;

1.49.2.1
date	2001.11.14.03.24.39;	author jason;	state Exp;
branches;
next	1.49.2.2;

1.49.2.2
date	2002.03.07.17.37.47;	author jason;	state Exp;
branches;
next	1.49.2.3;

1.49.2.3
date	2002.06.22.07.23.18;	author miod;	state Exp;
branches;
next	;

1.53.2.1
date	2002.06.26.15.30.39;	author jason;	state Exp;
branches;
next	1.53.2.2;

1.53.2.2
date	2003.04.03.22.35.17;	author miod;	state Exp;
branches;
next	;

1.54.2.1
date	2003.04.01.00.12.14;	author margarida;	state Exp;
branches;
next	1.54.2.2;

1.54.2.2
date	2003.04.03.23.27.13;	author margarida;	state Exp;
branches;
next	1.54.2.3;

1.54.2.3
date	2003.09.16.21.20.28;	author brad;	state Exp;
branches;
next	;

1.55.2.1
date	2003.05.11.12.01.52;	author margarida;	state Exp;
branches;
next	1.55.2.2;

1.55.2.2
date	2003.09.16.20.50.44;	author brad;	state Exp;
branches;
next	1.55.2.3;

1.55.2.3
date	2004.03.04.18.18.16;	author brad;	state Exp;
branches;
next	;

1.60.2.1
date	2004.02.28.03.51.34;	author brad;	state Exp;
branches;
next	1.60.2.2;

1.60.2.2
date	2004.08.19.22.37.32;	author brad;	state Exp;
branches;
next	;

1.61.2.1
date	2004.08.19.04.13.27;	author brad;	state Exp;
branches;
next	1.61.2.2;

1.61.2.2
date	2005.03.10.17.15.05;	author brad;	state Exp;
branches;
next	;

1.63.2.1
date	2005.03.10.16.28.28;	author brad;	state Exp;
branches;
next	1.63.2.2;

1.63.2.2
date	2005.06.05.02.22.39;	author brad;	state Exp;
branches;
next	1.63.2.3;

1.63.2.3
date	2005.09.02.03.45.01;	author brad;	state Exp;
branches;
next	;

1.67.2.1
date	2005.09.04.18.40.09;	author brad;	state Exp;
branches;
next	1.67.2.2;

1.67.2.2
date	2006.02.03.02.53.45;	author brad;	state Exp;
branches;
next	;

1.69.2.1
date	2006.02.03.03.01.57;	author brad;	state Exp;
branches;
next	1.69.2.2;

1.69.2.2
date	2006.10.06.03.19.33;	author brad;	state Exp;
branches;
next	;


desc
@@


1.140
log
@more protocol 1 stuff to go; ok djm
@
text
@.\"	$OpenBSD: ssh-keygen.1,v 1.139 2017/05/02 17:04:09 jmc Exp $
.\"
.\" Author: Tatu Ylonen <ylo@@cs.hut.fi>
.\" Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
.\"                    All rights reserved
.\"
.\" As far as I am concerned, the code I have written for this software
.\" can be used freely for any purpose.  Any derived versions of this
.\" software must be clearly marked as such, and if the derived work is
.\" incompatible with the protocol description in the RFC file, it must be
.\" called by a name other than "ssh" or "Secure Shell".
.\"
.\"
.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: May 2 2017 $
.Dt SSH-KEYGEN 1
.Os
.Sh NAME
.Nm ssh-keygen
.Nd authentication key generation, management and conversion
.Sh SYNOPSIS
.Bk -words
.Nm ssh-keygen
.Op Fl q
.Op Fl b Ar bits
.Op Fl t Cm dsa | ecdsa | ed25519 | rsa
.Op Fl N Ar new_passphrase
.Op Fl C Ar comment
.Op Fl f Ar output_keyfile
.Nm ssh-keygen
.Fl p
.Op Fl P Ar old_passphrase
.Op Fl N Ar new_passphrase
.Op Fl f Ar keyfile
.Nm ssh-keygen
.Fl i
.Op Fl m Ar key_format
.Op Fl f Ar input_keyfile
.Nm ssh-keygen
.Fl e
.Op Fl m Ar key_format
.Op Fl f Ar input_keyfile
.Nm ssh-keygen
.Fl y
.Op Fl f Ar input_keyfile
.Nm ssh-keygen
.Fl c
.Op Fl P Ar passphrase
.Op Fl C Ar comment
.Op Fl f Ar keyfile
.Nm ssh-keygen
.Fl l
.Op Fl v
.Op Fl E Ar fingerprint_hash
.Op Fl f Ar input_keyfile
.Nm ssh-keygen
.Fl B
.Op Fl f Ar input_keyfile
.Nm ssh-keygen
.Fl D Ar pkcs11
.Nm ssh-keygen
.Fl F Ar hostname
.Op Fl f Ar known_hosts_file
.Op Fl l
.Nm ssh-keygen
.Fl H
.Op Fl f Ar known_hosts_file
.Nm ssh-keygen
.Fl R Ar hostname
.Op Fl f Ar known_hosts_file
.Nm ssh-keygen
.Fl r Ar hostname
.Op Fl f Ar input_keyfile
.Op Fl g
.Nm ssh-keygen
.Fl G Ar output_file
.Op Fl v
.Op Fl b Ar bits
.Op Fl M Ar memory
.Op Fl S Ar start_point
.Nm ssh-keygen
.Fl T Ar output_file
.Fl f Ar input_file
.Op Fl v
.Op Fl a Ar rounds
.Op Fl J Ar num_lines
.Op Fl j Ar start_line
.Op Fl K Ar checkpt
.Op Fl W Ar generator
.Nm ssh-keygen
.Fl s Ar ca_key
.Fl I Ar certificate_identity
.Op Fl h
.Op Fl n Ar principals
.Op Fl O Ar option
.Op Fl V Ar validity_interval
.Op Fl z Ar serial_number
.Ar
.Nm ssh-keygen
.Fl L
.Op Fl f Ar input_keyfile
.Nm ssh-keygen
.Fl A
.Nm ssh-keygen
.Fl k
.Fl f Ar krl_file
.Op Fl u
.Op Fl s Ar ca_public
.Op Fl z Ar version_number
.Ar
.Nm ssh-keygen
.Fl Q
.Fl f Ar krl_file
.Ar
.Ek
.Sh DESCRIPTION
.Nm
generates, manages and converts authentication keys for
.Xr ssh 1 .
.Nm
can create keys for use by SSH protocol version 2.
.Pp
The type of key to be generated is specified with the
.Fl t
option.
If invoked without any arguments,
.Nm
will generate an RSA key for use in SSH protocol 2 connections.
.Pp
.Nm
is also used to generate groups for use in Diffie-Hellman group
exchange (DH-GEX).
See the
.Sx MODULI GENERATION
section for details.
.Pp
Finally,
.Nm
can be used to generate and update Key Revocation Lists, and to test whether
given keys have been revoked by one.
See the
.Sx KEY REVOCATION LISTS
section for details.
.Pp
Normally each user wishing to use SSH
with public key authentication runs this once to create the authentication
key in
.Pa ~/.ssh/id_dsa ,
.Pa ~/.ssh/id_ecdsa ,
.Pa ~/.ssh/id_ed25519
or
.Pa ~/.ssh/id_rsa .
Additionally, the system administrator may use this to generate host keys,
as seen in
.Pa /etc/rc .
.Pp
Normally this program generates the key and asks for a file in which
to store the private key.
The public key is stored in a file with the same name but
.Dq .pub
appended.
The program also asks for a passphrase.
The passphrase may be empty to indicate no passphrase
(host keys must have an empty passphrase), or it may be a string of
arbitrary length.
A passphrase is similar to a password, except it can be a phrase with a
series of words, punctuation, numbers, whitespace, or any string of
characters you want.
Good passphrases are 10-30 characters long, are
not simple sentences or otherwise easily guessable (English
prose has only 1-2 bits of entropy per character, and provides very bad
passphrases), and contain a mix of upper and lowercase letters,
numbers, and non-alphanumeric characters.
The passphrase can be changed later by using the
.Fl p
option.
.Pp
There is no way to recover a lost passphrase.
If the passphrase is lost or forgotten, a new key must be generated
and the corresponding public key copied to other machines.
.Pp
For keys stored in the newer OpenSSH format,
there is also a comment field in the key file that is only for
convenience to the user to help identify the key.
The comment can tell what the key is for, or whatever is useful.
The comment is initialized to
.Dq user@@host
when the key is created, but can be changed using the
.Fl c
option.
.Pp
After a key is generated, instructions below detail where the keys
should be placed to be activated.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl A
For each of the key types (rsa, dsa, ecdsa and ed25519)
for which host keys
do not exist, generate the host keys with the default key file path,
an empty passphrase, default bits for the key type, and default comment.
This is used by
.Pa /etc/rc
to generate new host keys.
.It Fl a Ar rounds
When saving a new-format private key (i.e. an ed25519 key or when the
.Fl o
flag is set), this option specifies the number of KDF (key derivation function)
rounds used.
Higher numbers result in slower passphrase verification and increased
resistance to brute-force password cracking (should the keys be stolen).
.Pp
When screening DH-GEX candidates (using the
.Fl T
command).
This option specifies the number of primality tests to perform.
.It Fl B
Show the bubblebabble digest of specified private or public key file.
.It Fl b Ar bits
Specifies the number of bits in the key to create.
For RSA keys, the minimum size is 1024 bits and the default is 2048 bits.
Generally, 2048 bits is considered sufficient.
DSA keys must be exactly 1024 bits as specified by FIPS 186-2.
For ECDSA keys, the
.Fl b
flag determines the key length by selecting from one of three elliptic
curve sizes: 256, 384 or 521 bits.
Attempting to use bit lengths other than these three values for ECDSA keys
will fail.
Ed25519 keys have a fixed length and the
.Fl b
flag will be ignored.
.It Fl C Ar comment
Provides a new comment.
.It Fl c
Requests changing the comment in the private and public key files.
This operation is only supported for keys stored in the
newer OpenSSH format.
The program will prompt for the file containing the private keys, for
the passphrase if the key has one, and for the new comment.
.It Fl D Ar pkcs11
Download the RSA public keys provided by the PKCS#11 shared library
.Ar pkcs11 .
When used in combination with
.Fl s ,
this option indicates that a CA key resides in a PKCS#11 token (see the
.Sx CERTIFICATES
section for details).
.It Fl E Ar fingerprint_hash
Specifies the hash algorithm used when displaying key fingerprints.
Valid options are:
.Dq md5
and
.Dq sha256 .
The default is
.Dq sha256 .
.It Fl e
This option will read a private or public OpenSSH key file and
print to stdout the key in one of the formats specified by the
.Fl m
option.
The default export format is
.Dq RFC4716 .
This option allows exporting OpenSSH keys for use by other programs, including
several commercial SSH implementations.
.It Fl F Ar hostname
Search for the specified
.Ar hostname
in a
.Pa known_hosts
file, listing any occurrences found.
This option is useful to find hashed host names or addresses and may also be
used in conjunction with the
.Fl H
option to print found keys in a hashed format.
.It Fl f Ar filename
Specifies the filename of the key file.
.It Fl G Ar output_file
Generate candidate primes for DH-GEX.
These primes must be screened for
safety (using the
.Fl T
option) before use.
.It Fl g
Use generic DNS format when printing fingerprint resource records using the
.Fl r
command.
.It Fl H
Hash a
.Pa known_hosts
file.
This replaces all hostnames and addresses with hashed representations
within the specified file; the original content is moved to a file with
a .old suffix.
These hashes may be used normally by
.Nm ssh
and
.Nm sshd ,
but they do not reveal identifying information should the file's contents
be disclosed.
This option will not modify existing hashed hostnames and is therefore safe
to use on files that mix hashed and non-hashed names.
.It Fl h
When signing a key, create a host certificate instead of a user
certificate.
Please see the
.Sx CERTIFICATES
section for details.
.It Fl I Ar certificate_identity
Specify the key identity when signing a public key.
Please see the
.Sx CERTIFICATES
section for details.
.It Fl i
This option will read an unencrypted private (or public) key file
in the format specified by the
.Fl m
option and print an OpenSSH compatible private
(or public) key to stdout.
This option allows importing keys from other software, including several
commercial SSH implementations.
The default import format is
.Dq RFC4716 .
.It Fl J Ar num_lines
Exit after screening the specified number of lines
while performing DH candidate screening using the
.Fl T
option.
.It Fl j Ar start_line
Start screening at the specified line number
while performing DH candidate screening using the
.Fl T
option.
.It Fl K Ar checkpt
Write the last line processed to the file
.Ar checkpt
while performing DH candidate screening using the
.Fl T
option.
This will be used to skip lines in the input file that have already been
processed if the job is restarted.
.It Fl k
Generate a KRL file.
In this mode,
.Nm
will generate a KRL file at the location specified via the
.Fl f
flag that revokes every key or certificate presented on the command line.
Keys/certificates to be revoked may be specified by public key file or
using the format described in the
.Sx KEY REVOCATION LISTS
section.
.It Fl L
Prints the contents of one or more certificates.
.It Fl l
Show fingerprint of specified public key file.
For RSA and DSA keys
.Nm
tries to find the matching public key file and prints its fingerprint.
If combined with
.Fl v ,
a visual ASCII art representation of the key is supplied with the
fingerprint.
.It Fl M Ar memory
Specify the amount of memory to use (in megabytes) when generating
candidate moduli for DH-GEX.
.It Fl m Ar key_format
Specify a key format for the
.Fl i
(import) or
.Fl e
(export) conversion options.
The supported key formats are:
.Dq RFC4716
(RFC 4716/SSH2 public or private key),
.Dq PKCS8
(PEM PKCS8 public key)
or
.Dq PEM
(PEM public key).
The default conversion format is
.Dq RFC4716 .
.It Fl N Ar new_passphrase
Provides the new passphrase.
.It Fl n Ar principals
Specify one or more principals (user or host names) to be included in
a certificate when signing a key.
Multiple principals may be specified, separated by commas.
Please see the
.Sx CERTIFICATES
section for details.
.It Fl O Ar option
Specify a certificate option when signing a key.
This option may be specified multiple times.
See also the
.Sx CERTIFICATES
section for further details.
The options that are valid for user certificates are:
.Pp
.Bl -tag -width Ds -compact
.It Ic clear
Clear all enabled permissions.
This is useful for clearing the default set of permissions so permissions may
be added individually.
.Pp
.It Ic critical : Ns Ar name Ns Op Ns = Ns Ar contents
.It Ic extension : Ns Ar name Ns Op Ns = Ns Ar contents
Includes an arbitrary certificate critical option or extension.
The specified
.Ar name
should include a domain suffix, e.g.\&
.Dq name@@example.com .
If
.Ar contents
is specified then it is included as the contents of the extension/option
encoded as a string, otherwise the extension/option is created with no
contents (usually indicating a flag).
Extensions may be ignored by a client or server that does not recognise them,
whereas unknown critical options will cause the certificate to be refused.
.Pp
At present, no standard options are valid for host keys.
.Pp
.It Ic force-command Ns = Ns Ar command
Forces the execution of
.Ar command
instead of any shell or command specified by the user when
the certificate is used for authentication.
.Pp
.It Ic no-agent-forwarding
Disable
.Xr ssh-agent 1
forwarding (permitted by default).
.Pp
.It Ic no-port-forwarding
Disable port forwarding (permitted by default).
.Pp
.It Ic no-pty
Disable PTY allocation (permitted by default).
.Pp
.It Ic no-user-rc
Disable execution of
.Pa ~/.ssh/rc
by
.Xr sshd 8
(permitted by default).
.Pp
.It Ic no-x11-forwarding
Disable X11 forwarding (permitted by default).
.Pp
.It Ic permit-agent-forwarding
Allows
.Xr ssh-agent 1
forwarding.
.Pp
.It Ic permit-port-forwarding
Allows port forwarding.
.Pp
.It Ic permit-pty
Allows PTY allocation.
.Pp
.It Ic permit-user-rc
Allows execution of
.Pa ~/.ssh/rc
by
.Xr sshd 8 .
.Pp
.It Ic permit-x11-forwarding
Allows X11 forwarding.
.Pp
.It Ic source-address Ns = Ns Ar address_list
Restrict the source addresses from which the certificate is considered valid.
The
.Ar address_list
is a comma-separated list of one or more address/netmask pairs in CIDR
format.
.El
.It Fl o
Causes
.Nm
to save private keys using the new OpenSSH format rather than
the more compatible PEM format.
The new format has increased resistance to brute-force password cracking
but is not supported by versions of OpenSSH prior to 6.5.
Ed25519 keys always use the new private key format.
.It Fl P Ar passphrase
Provides the (old) passphrase.
.It Fl p
Requests changing the passphrase of a private key file instead of
creating a new private key.
The program will prompt for the file
containing the private key, for the old passphrase, and twice for the
new passphrase.
.It Fl Q
Test whether keys have been revoked in a KRL.
.It Fl q
Silence
.Nm ssh-keygen .
.It Fl R Ar hostname
Removes all keys belonging to
.Ar hostname
from a
.Pa known_hosts
file.
This option is useful to delete hashed hosts (see the
.Fl H
option above).
.It Fl r Ar hostname
Print the SSHFP fingerprint resource record named
.Ar hostname
for the specified public key file.
.It Fl S Ar start
Specify start point (in hex) when generating candidate moduli for DH-GEX.
.It Fl s Ar ca_key
Certify (sign) a public key using the specified CA key.
Please see the
.Sx CERTIFICATES
section for details.
.Pp
When generating a KRL,
.Fl s
specifies a path to a CA public key file used to revoke certificates directly
by key ID or serial number.
See the
.Sx KEY REVOCATION LISTS
section for details.
.It Fl T Ar output_file
Test DH group exchange candidate primes (generated using the
.Fl G
option) for safety.
.It Fl t Cm dsa | ecdsa | ed25519 | rsa
Specifies the type of key to create.
The possible values are
.Dq dsa ,
.Dq ecdsa ,
.Dq ed25519 ,
or
.Dq rsa .
.It Fl u
Update a KRL.
When specified with
.Fl k ,
keys listed via the command line are added to the existing KRL rather than
a new KRL being created.
.It Fl V Ar validity_interval
Specify a validity interval when signing a certificate.
A validity interval may consist of a single time, indicating that the
certificate is valid beginning now and expiring at that time, or may consist
of two times separated by a colon to indicate an explicit time interval.
The start time may be specified as a date in YYYYMMDD format, a time
in YYYYMMDDHHMMSS format or a relative time (to the current time) consisting
of a minus sign followed by a relative time in the format described in the
TIME FORMATS section of
.Xr sshd_config 5 .
The end time may be specified as a YYYYMMDD date, a YYYYMMDDHHMMSS time or
a relative time starting with a plus character.
.Pp
For example:
.Dq +52w1d
(valid from now to 52 weeks and one day from now),
.Dq -4w:+4w
(valid from four weeks ago to four weeks from now),
.Dq 20100101123000:20110101123000
(valid from 12:30 PM, January 1st, 2010 to 12:30 PM, January 1st, 2011),
.Dq -1d:20110101
(valid from yesterday to midnight, January 1st, 2011).
.It Fl v
Verbose mode.
Causes
.Nm
to print debugging messages about its progress.
This is helpful for debugging moduli generation.
Multiple
.Fl v
options increase the verbosity.
The maximum is 3.
.It Fl W Ar generator
Specify desired generator when testing candidate moduli for DH-GEX.
.It Fl y
This option will read a private
OpenSSH format file and print an OpenSSH public key to stdout.
.It Fl z Ar serial_number
Specifies a serial number to be embedded in the certificate to distinguish
this certificate from others from the same CA.
The default serial number is zero.
.Pp
When generating a KRL, the
.Fl z
flag is used to specify a KRL version number.
.El
.Sh MODULI GENERATION
.Nm
may be used to generate groups for the Diffie-Hellman Group Exchange
(DH-GEX) protocol.
Generating these groups is a two-step process: first, candidate
primes are generated using a fast, but memory intensive process.
These candidate primes are then tested for suitability (a CPU-intensive
process).
.Pp
Generation of primes is performed using the
.Fl G
option.
The desired length of the primes may be specified by the
.Fl b
option.
For example:
.Pp
.Dl # ssh-keygen -G moduli-2048.candidates -b 2048
.Pp
By default, the search for primes begins at a random point in the
desired length range.
This may be overridden using the
.Fl S
option, which specifies a different start point (in hex).
.Pp
Once a set of candidates have been generated, they must be screened for
suitability.
This may be performed using the
.Fl T
option.
In this mode
.Nm
will read candidates from standard input (or a file specified using the
.Fl f
option).
For example:
.Pp
.Dl # ssh-keygen -T moduli-2048 -f moduli-2048.candidates
.Pp
By default, each candidate will be subjected to 100 primality tests.
This may be overridden using the
.Fl a
option.
The DH generator value will be chosen automatically for the
prime under consideration.
If a specific generator is desired, it may be requested using the
.Fl W
option.
Valid generator values are 2, 3, and 5.
.Pp
Screened DH groups may be installed in
.Pa /etc/moduli .
It is important that this file contains moduli of a range of bit lengths and
that both ends of a connection share common moduli.
.Sh CERTIFICATES
.Nm
supports signing of keys to produce certificates that may be used for
user or host authentication.
Certificates consist of a public key, some identity information, zero or
more principal (user or host) names and a set of options that
are signed by a Certification Authority (CA) key.
Clients or servers may then trust only the CA key and verify its signature
on a certificate rather than trusting many user/host keys.
Note that OpenSSH certificates are a different, and much simpler, format to
the X.509 certificates used in
.Xr ssl 8 .
.Pp
.Nm
supports two types of certificates: user and host.
User certificates authenticate users to servers, whereas host certificates
authenticate server hosts to users.
To generate a user certificate:
.Pp
.Dl $ ssh-keygen -s /path/to/ca_key -I key_id /path/to/user_key.pub
.Pp
The resultant certificate will be placed in
.Pa /path/to/user_key-cert.pub .
A host certificate requires the
.Fl h
option:
.Pp
.Dl $ ssh-keygen -s /path/to/ca_key -I key_id -h /path/to/host_key.pub
.Pp
The host certificate will be output to
.Pa /path/to/host_key-cert.pub .
.Pp
It is possible to sign using a CA key stored in a PKCS#11 token by
providing the token library using
.Fl D
and identifying the CA key by providing its public half as an argument
to
.Fl s :
.Pp
.Dl $ ssh-keygen -s ca_key.pub -D libpkcs11.so -I key_id user_key.pub
.Pp
In all cases,
.Ar key_id
is a "key identifier" that is logged by the server when the certificate
is used for authentication.
.Pp
Certificates may be limited to be valid for a set of principal (user/host)
names.
By default, generated certificates are valid for all users or hosts.
To generate a certificate for a specified set of principals:
.Pp
.Dl $ ssh-keygen -s ca_key -I key_id -n user1,user2 user_key.pub
.Dl "$ ssh-keygen -s ca_key -I key_id -h -n host.domain host_key.pub"
.Pp
Additional limitations on the validity and use of user certificates may
be specified through certificate options.
A certificate option may disable features of the SSH session, may be
valid only when presented from particular source addresses or may
force the use of a specific command.
For a list of valid certificate options, see the documentation for the
.Fl O
option above.
.Pp
Finally, certificates may be defined with a validity lifetime.
The
.Fl V
option allows specification of certificate start and end times.
A certificate that is presented at a time outside this range will not be
considered valid.
By default, certificates are valid from
.Ux
Epoch to the distant future.
.Pp
For certificates to be used for user or host authentication, the CA
public key must be trusted by
.Xr sshd 8
or
.Xr ssh 1 .
Please refer to those manual pages for details.
.Sh KEY REVOCATION LISTS
.Nm
is able to manage OpenSSH format Key Revocation Lists (KRLs).
These binary files specify keys or certificates to be revoked using a
compact format, taking as little as one bit per certificate if they are being
revoked by serial number.
.Pp
KRLs may be generated using the
.Fl k
flag.
This option reads one or more files from the command line and generates a new
KRL.
The files may either contain a KRL specification (see below) or public keys,
listed one per line.
Plain public keys are revoked by listing their hash or contents in the KRL and
certificates revoked by serial number or key ID (if the serial is zero or
not available).
.Pp
Revoking keys using a KRL specification offers explicit control over the
types of record used to revoke keys and may be used to directly revoke
certificates by serial number or key ID without having the complete original
certificate on hand.
A KRL specification consists of lines containing one of the following directives
followed by a colon and some directive-specific information.
.Bl -tag -width Ds
.It Cm serial : Ar serial_number Ns Op - Ns Ar serial_number
Revokes a certificate with the specified serial number.
Serial numbers are 64-bit values, not including zero and may be expressed
in decimal, hex or octal.
If two serial numbers are specified separated by a hyphen, then the range
of serial numbers including and between each is revoked.
The CA key must have been specified on the
.Nm
command line using the
.Fl s
option.
.It Cm id : Ar key_id
Revokes a certificate with the specified key ID string.
The CA key must have been specified on the
.Nm
command line using the
.Fl s
option.
.It Cm key : Ar public_key
Revokes the specified key.
If a certificate is listed, then it is revoked as a plain public key.
.It Cm sha1 : Ar public_key
Revokes the specified key by its SHA1 hash.
.El
.Pp
KRLs may be updated using the
.Fl u
flag in addition to
.Fl k .
When this option is specified, keys listed via the command line are merged into
the KRL, adding to those already there.
.Pp
It is also possible, given a KRL, to test whether it revokes a particular key
(or keys).
The
.Fl Q
flag will query an existing KRL, testing each key specified on the command line.
If any key listed on the command line has been revoked (or an error encountered)
then
.Nm
will exit with a non-zero exit status.
A zero exit status will only be returned if no key was revoked.
.Sh FILES
.Bl -tag -width Ds -compact
.It Pa ~/.ssh/id_dsa
.It Pa ~/.ssh/id_ecdsa
.It Pa ~/.ssh/id_ed25519
.It Pa ~/.ssh/id_rsa
Contains the protocol version 2 DSA, ECDSA, Ed25519 or RSA
authentication identity of the user.
This file should not be readable by anyone but the user.
It is possible to
specify a passphrase when generating the key; that passphrase will be
used to encrypt the private part of this file using 128-bit AES.
This file is not automatically accessed by
.Nm
but it is offered as the default file for the private key.
.Xr ssh 1
will read this file when a login attempt is made.
.Pp
.It Pa ~/.ssh/id_dsa.pub
.It Pa ~/.ssh/id_ecdsa.pub
.It Pa ~/.ssh/id_ed25519.pub
.It Pa ~/.ssh/id_rsa.pub
Contains the protocol version 2 DSA, ECDSA, Ed25519 or RSA
public key for authentication.
The contents of this file should be added to
.Pa ~/.ssh/authorized_keys
on all machines
where the user wishes to log in using public key authentication.
There is no need to keep the contents of this file secret.
.Pp
.It Pa /etc/moduli
Contains Diffie-Hellman groups used for DH-GEX.
The file format is described in
.Xr moduli 5 .
.El
.Sh SEE ALSO
.Xr ssh 1 ,
.Xr ssh-add 1 ,
.Xr ssh-agent 1 ,
.Xr moduli 5 ,
.Xr sshd 8
.Rs
.%R RFC 4716
.%T "The Secure Shell (SSH) Public Key File Format"
.%D 2006
.Re
.Sh AUTHORS
OpenSSH is a derivative of the original and free
ssh 1.2.12 release by Tatu Ylonen.
Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos,
Theo de Raadt and Dug Song
removed many bugs, re-added newer features and
created OpenSSH.
Markus Friedl contributed the support for SSH
protocol versions 1.5 and 2.0.
@


1.139
log
@rsa1 is no longer valid;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.138 2017/05/02 09:05:58 jmc Exp $
d144 1
a144 5
can create keys for use by SSH protocol versions 1 and 2.
Protocol 1 should not be used
and is only offered to support legacy devices.
It suffers from a number of cryptographic weaknesses
and doesn't support many of the advanced features available for protocol 2.
a170 1
.Pa ~/.ssh/identity ,
d229 1
a229 2
When saving a new-format private key (i.e. an ed25519 key or any SSH protocol
2 key when the
d236 1
a236 2
When screening DH-GEX candidates (
using the
a814 20
.It Pa ~/.ssh/identity
Contains the protocol version 1 RSA authentication identity of the user.
This file should not be readable by anyone but the user.
It is possible to
specify a passphrase when generating the key; that passphrase will be
used to encrypt the private part of this file using 3DES.
This file is not automatically accessed by
.Nm
but it is offered as the default file for the private key.
.Xr ssh 1
will read this file when a login attempt is made.
.Pp
.It Pa ~/.ssh/identity.pub
Contains the protocol version 1 RSA public key for authentication.
The contents of this file should be added to
.Pa ~/.ssh/authorized_keys
on all machines
where the user wishes to log in using RSA authentication.
There is no need to keep the contents of this file secret.
.Pp
@


1.138
log
@more -O shuffle; ok djm
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.137 2017/05/02 07:13:31 jmc Exp $
d49 1
a49 1
.Op Fl t Cm dsa | ecdsa | ed25519 | rsa | rsa1
d226 1
a226 1
For each of the key types (rsa1, rsa, dsa, ecdsa and ed25519)
d560 1
a560 1
.It Fl t Cm dsa | ecdsa | ed25519 | rsa | rsa1
a562 2
.Dq rsa1
for protocol version 1 and
d567 1
a567 2
.Dq rsa
for protocol version 2.
@


1.137
log
@tidy up -O somewhat; ok djm
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.136 2017/04/30 23:18:44 djm Exp $
d38 1
a38 1
.Dd $Mdocdate: April 30 2017 $
a427 1
At present, no standard options are valid for host keys.
d450 2
@


1.136
log
@remove KEY_RSA1

ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.135 2017/04/29 06:06:01 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: April 29 2017 $
d425 1
a425 1
Please see the
d427 2
a428 1
section for details.
d430 2
a431 1
.Bl -tag -width Ds
d436 16
d457 1
d462 1
d465 1
d468 1
d475 1
d478 1
d483 1
d486 1
d489 1
d495 1
d498 1
a504 4
.It Ic extension : Ns Ar name Ns Op Ns = Ns Ar contents
Includes an arbitrary certificate extension.
.It Ic critical : Ns Ar name Ns Op Ns = Ns Ar contents
Includes an arbitrary certificate critical option.
a505 18
.Pp
At present, no standard options are valid for host keys.
.Pp
For non-standard certificate extensions or options included using
.Ic extension
or
.Ic option ,
the specified
.Ar name
should include a domain suffix, e.g.\&
.Dq name@@example.com .
If
.Ar contents
is specified then it is included as the contents of the extension/option
encoded as a string, otherwise the extension/option is created with no
contents (usually indicating a flag).
Extensions may be ignored by a client or server that does not recognise them,
whereas unknown critical options will cause the certificate to be refused.
@


1.135
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.134 2017/04/29 04:12:25 djm Exp $
d210 1
a210 1
For RSA1 keys and keys stored in the newer OpenSSH format,
d267 1
a267 1
This operation is only supported for RSA1 keys and keys stored in the
a386 1
Private RSA1 keys are also supported.
@


1.134
log
@allow ssh-keygen to include arbitrary string or flag certificate
extensions and critical options. ok markus@@ dtucker@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.133 2016/06/16 06:10:45 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: June 16 2016 $
d477 1
a477 1
.It Ic extension Ns : Ns Ar name Ns Op Ns = Ns Ar contents
d479 1
a479 1
.It Ic critical Ns : Ns Ar name Ns Op Ns = Ns Ar contents
d485 1
a485 1
For non-standard certificate extension or options included using
d491 1
a491 1
should include a domain suffix, e.g.
d493 1
a493 1
If a
@


1.133
log
@keys stored in openssh format can have comments too;
diff from yonas yanfa, tweaked a bit;

ok djm
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.132 2016/05/03 18:38:12 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: May 3 2016 $
d477 4
d483 17
a499 1
At present, no options are valid for host keys.
@


1.132
log
@correct article;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.131 2016/05/03 14:54:08 djm Exp $
d210 1
a210 1
For RSA1 keys,
d267 2
a268 1
This operation is only supported for RSA1 keys.
@


1.131
log
@make nethack^wrandomart fingerprint flag more readily searchable
pointed out by Matt Johnston
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.130 2016/02/17 07:38:19 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: February 17 2016 $
d392 1
a392 1
an visual ASCII art representation of the key is supplied with the
@


1.130
log
@since these pages now clearly tell folks to avoid v1, normalise
the docs from a v2 perspective (i.e. stop pointing out which bits
are v2 only);

ok/tweaks djm ok markus
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.129 2015/11/13 04:34:15 djm Exp $
d38 1
a38 1
.Dd $Mdocdate: November 13 2015 $
d392 2
a393 1
an ASCII art representation of the key is supplied with the fingerprint.
@


1.129
log
@support multiple certificates (one per line) and reading from
standard input (using "-f -") for "ssh-keygen -L";
ok dtucker@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.128 2015/11/05 09:48:05 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: November 5 2015 $
d144 6
a149 2
can create RSA keys for use by SSH protocol version 1 and
DSA, ECDSA, Ed25519 or RSA keys for use by SSH protocol version 2.
d481 1
a481 1
to save SSH protocol 2 private keys using the new OpenSSH format rather than
@


1.128
log
@"commandline" -> "command line", since there are so few examples
of the former in the pages, so many of the latter, and in some of
these pages we had multiple spellings;

prompted by tj
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.127 2015/08/20 19:20:06 naddy Exp $
d38 1
a38 1
.Dd $Mdocdate: August 20 2015 $
d379 1
a379 1
Prints the contents of a certificate.
@


1.127
log
@In the certificates section, be consistent about using "host_key"
and "user_key" for the respective key types.  ok sthen@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.126 2015/07/03 03:49:45 djm Exp $
d38 1
a38 1
.Dd $Mdocdate: July 3 2015 $
d784 1
a784 1
flag will query an existing KRL, testing each key specified on the commandline.
@


1.126
log
@refuse to generate or accept RSA keys smaller than 1024 bits;
feedback and ok dtucker@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.125 2015/02/24 15:24:05 naddy Exp $
d38 1
a38 1
.Dd $Mdocdate: February 24 2015 $
d683 1
a683 1
.Dl $ ssh-keygen -s ca_key.pub -D libpkcs11.so -I key_id host_key.pub
d696 1
a696 1
.Dl "$ ssh-keygen -s ca_key -I key_id -h -n host.domain user_key.pub"
@


1.125
log
@add -v (show ASCII art) to -l's synopsis; ok djm@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.124 2014/12/21 22:27:56 djm Exp $
d38 1
a38 1
.Dd $Mdocdate: December 21 2014 $
d247 1
a247 1
For RSA keys, the minimum size is 768 bits and the default is 2048 bits.
@


1.124
log
@Add FingerprintHash option to control algorithm used for key
fingerprints. Default changes from MD5 to SHA256 and format
from hex to base64.

Feedback and ok naddy@@ markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.123 2014/08/30 15:33:50 sobrado Exp $
d38 1
a38 1
.Dd $Mdocdate: August 30 2014 $
d76 1
@


1.123
log
@improve capitalization for the Ed25519 public-key signature system.

ok djm@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.122 2014/03/31 13:39:34 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: March 31 2014 $
d76 1
d273 8
@


1.122
log
@the text for the -K option was inserted in the wrong place in -r1.108;
fix From: Matthew Clarke
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.121 2014/03/15 17:28:26 deraadt Exp $
d38 1
a38 1
.Dd $Mdocdate: March 15 2014 $
d143 1
a143 1
DSA, ECDSA, ED25519 or RSA keys for use by SSH protocol version 2.
d254 1
a254 1
ED25519 keys have a fixed length and the
d806 1
a806 1
Contains the protocol version 2 DSA, ECDSA, ED25519 or RSA
d822 1
a822 1
Contains the protocol version 2 DSA, ECDSA, ED25519 or RSA
@


1.121
log
@Improve usage() and documentation towards the standard form.  In particular,
this line saves a lot of man page reading time.
    usage: ssh-keygen [-q] [-b bits] [-t dsa | ecdsa | ed25519 | rsa | rsa1]
                      [-N new_passphrase] [-C comment] [-f output_keyfile]
ok schwarze jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.120 2014/02/05 20:13:25 naddy Exp $
d38 1
a38 1
.Dd $Mdocdate: February 5 2014 $
d335 4
a356 4
This option allows importing keys from other software, including several
commercial SSH implementations.
The default import format is
.Dq RFC4716 .
@


1.120
log
@tweak synopsis: calling ssh-keygen without any arguments is fine; ok jmc@@

while here, fix ordering in usage(); requested by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.119 2013/12/21 07:10:47 tedu Exp $
d38 1
a38 1
.Dd $Mdocdate: December 21 2013 $
d49 1
a49 1
.Op Fl t Ar type
d517 1
a517 1
.It Fl t Ar type
@


1.119
log
@small typo
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.118 2013/12/07 11:58:46 naddy Exp $
d38 1
a38 1
.Dd $Mdocdate: December 7 2013 $
d49 1
a49 1
.Fl t Ar type
@


1.118
log
@add missing mentions of ed25519; ok djm@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.117 2013/12/07 08:08:26 djm Exp $
d717 1
a717 1
compact format, taking as little a one bit per certificate if they are being
@


1.117
log
@document -a and -o wrt new key format
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.116 2013/06/27 14:05:37 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: June 27 2013 $
d142 2
a143 2
can create RSA keys for use by SSH protocol version 1 and DSA, ECDSA or RSA
keys for use by SSH protocol version 2.
d170 1
d172 1
a172 1
.Pa ~/.ssh/id_dsa
d220 2
a221 1
For each of the key types (rsa1, rsa, dsa and ecdsa) for which host keys
d254 3
d523 2
a524 1
.Dq ecdsa
d804 1
d806 2
a807 1
Contains the protocol version 2 DSA, ECDSA or RSA authentication identity of the user.
d820 1
d822 2
a823 1
Contains the protocol version 2 DSA, ECDSA or RSA public key for authentication.
@


1.116
log
@do not use Sx for sections outwith the man page - ingo informs me that
stuff like html will render with broken links;

issue reported by Eric S. Raymond, via djm
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.115 2013/01/19 07:13:25 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: January 19 2013 $
d106 1
a106 1
.Op Fl a Ar num_trials
d225 11
a235 3
.It Fl a Ar trials
Specifies the number of primality tests to perform when screening DH-GEX
candidates using the
d237 2
a238 1
command.
d459 8
@


1.115
log
@fix some formatting; ok djm
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.114 2013/01/18 21:48:43 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: January 18 2013 $
d519 1
a519 2
.Sx TIME FORMATS
section of
@


1.114
log
@command-line (adj.) -> command line (n.);
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.113 2013/01/18 08:39:04 jmc Exp $
d716 1
a716 1
.It Cm serial : Ar serial_number Op -serial_number
@


1.113
log
@add -Q to the options list; ok djm
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.112 2013/01/18 07:57:47 jmc Exp $
d349 1
a349 1
flag that revokes every key or certificate presented on the command-line.
d509 1
a509 1
keys listed via the command-line are added to the existing KRL rather than
d701 1
a701 1
This option reads one or more files from the command-line and generates a new
d724 1
a724 1
command-line using the
d731 1
a731 1
command-line using the
d745 1
a745 1
When this option is specified, keys listed via the command-line are merged into
d753 1
a753 1
If any key listed on the command-line has been revoked (or an error encountered)
@


1.112
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.111 2013/01/17 23:00:01 djm Exp $
d38 1
a38 1
.Dd $Mdocdate: January 17 2013 $
d458 2
@


1.111
log
@add support for Key Revocation Lists (KRLs). These are a compact way to
represent lists of revoked keys and certificates, taking as little as
a single bit of incremental cost to revoke a certificate by serial number.
KRLs are loaded via the existing RevokedKeys sshd_config option.

feedback and ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.110 2012/08/15 18:25:50 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: August 15 2012 $
d129 2
a130 2
.Op Fl s ca_public
.Op Fl z version_number
d161 2
a162 1
given keys have been revoked by one. See the
d484 1
a484 1
specifies a path to a CA public key file used to revoke certificated directly
d503 6
a531 6
.It Fl u
Update a KRL.
When specified with
.Fl k ,
keys listed via the command-line are added to the existing KRL rather than
a new KRL being created.
d693 1
a693 1
compact format; taking as little a one bit per certificate if they are being
d716 1
a716 1
Serial numbers are 64 bit values, not including zero and may be expressed
d734 1
a734 1
In a certificate is listed, then it is revoked as a plain public key.
@


1.110
log
@a little more info on certificate validity;
requested by Ross L Richardson, and provided by djm
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.109 2012/07/06 00:41:59 dtucker Exp $
d38 1
a38 1
.Dd $Mdocdate: July 6 2012 $
d125 11
d158 7
d342 11
d480 8
d525 6
d550 4
d688 67
@


1.109
log
@Add options to specify starting line number and number of lines to process
when screening moduli candidates.  This allows processing of different
parts of a candidate moduli file in parallel.  man page help jmc@@, ok djm@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.108 2011/10/16 11:02:46 dtucker Exp $
d38 1
a38 1
.Dd $Mdocdate: October 16 2011 $
d631 3
a633 1
By default, certificates have a maximum validity interval.
@


1.108
log
@Add optional checkpoints for moduli screening.  feedback & ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.107 2011/09/07 02:18:31 deraadt Exp $
d38 1
a38 1
.Dd $Mdocdate: September 7 2011 $
d107 2
d302 10
d533 1
a533 1
Once a set of candidates have been generated, they must be tested for
@


1.107
log
@typo (they vs the) found by Lawrence Teo
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.106 2011/04/13 04:09:37 djm Exp $
d38 1
a38 1
.Dd $Mdocdate: April 13 2011 $
d107 1
d300 8
@


1.106
log
@mention valid -b sizes for ECDSA keys; bz#1862
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.105 2011/04/13 04:02:48 djm Exp $
d217 1
a217 1
flag determines they key length by selecting from one of three elliptic
@


1.105
log
@improve wording; bz#1861
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.104 2011/03/24 15:29:30 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: March 24 2011 $
d215 6
@


1.104
log
@zap trailing whitespace;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.103 2011/03/23 16:24:56 stevesk Exp $
d38 1
a38 1
.Dd $Mdocdate: March 23 2011 $
d178 2
a179 3
If the passphrase is
lost or forgotten, a new key must be generated and copied to the
corresponding public key to other machines.
@


1.103
log
@-q not used in /etc/rc now so remove statement.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.102 2011/03/23 15:16:22 stevesk Exp $
d201 1
a201 1
This is used by 
@


1.102
log
@Add -A option.  For each of the key types (rsa1, rsa, dsa and ecdsa)
for which host keys do not exist, generate the host keys with the
default key file path, an empty passphrase, default bits for the key
type, and default comment.  This will be used by /etc/rc to generate
new host keys.  Idea from deraadt.

ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.101 2010/10/28 18:33:28 jmc Exp $
d38 1
a38 1
.Dd $Mdocdate: October 28 2010 $
a404 3
Used by
.Pa /etc/rc
when creating a new key.
@


1.101
log
@knock out some "-*- nroff -*-" lines;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.100 2010/09/10 15:19:29 naddy Exp $
d38 1
a38 1
.Dd $Mdocdate: September 10 2010 $
d120 2
d197 7
@


1.100
log
@* mention ECDSA in more places
* less repetition in FILES section
* SSHv1 keys are still encrypted with 3DES

help and ok jmc@@
@
text
@d1 1
a1 3
.\"	$OpenBSD: ssh-keygen.1,v 1.99 2010/08/31 11:54:45 djm Exp $
.\"
.\"  -*- nroff -*-
d38 1
a38 1
.Dd $Mdocdate: August 31 2010 $
@


1.99
log
@Implement Elliptic Curve Cryptography modes for key exchange (ECDH) and
host/user keys (ECDSA) as specified by RFC5656. ECDH and ECDSA offer
better performance than plain DH and DSA at the same equivalent symmetric
key length, as well as much shorter keys.

Only the mandatory sections of RFC5656 are implemented, specifically the
three REQUIRED curves nistp256, nistp384 and nistp521 and only ECDH and
ECDSA. Point compression (optional in RFC5656 is NOT implemented).

Certificate host and user keys using the new ECDSA key types are supported.

Note that this code has not been tested for interoperability and may be
subject to change.

feedback and ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.98 2010/08/04 06:07:11 djm Exp $
d40 1
a40 1
.Dd $Mdocdate: August 4 2010 $
d128 1
a128 1
can create RSA keys for use by SSH protocol version 1 and RSA, DSA or ECDSA
d430 3
a433 2
or
.Dq dsa
d610 1
a610 1
.Bl -tag -width Ds
d616 1
a616 1
used to encrypt the private part of this file using 128-bit AES.
d622 1
d630 1
d632 3
a634 1
Contains the protocol version 2 DSA authentication identity of the user.
d644 1
d646 1
a646 17
Contains the protocol version 2 DSA public key for authentication.
The contents of this file should be added to
.Pa ~/.ssh/authorized_keys
on all machines
where the user wishes to log in using public key authentication.
There is no need to keep the contents of this file secret.
.It Pa ~/.ssh/id_rsa
Contains the protocol version 2 RSA authentication identity of the user.
This file should not be readable by anyone but the user.
It is possible to
specify a passphrase when generating the key; that passphrase will be
used to encrypt the private part of this file using 128-bit AES.
This file is not automatically accessed by
.Nm
but it is offered as the default file for the private key.
.Xr ssh 1
will read this file when a login attempt is made.
d648 1
a648 1
Contains the protocol version 2 RSA public key for authentication.
d654 1
@


1.98
log
@Support CA keys in PKCS#11 tokens; feedback and ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.97 2010/07/15 21:20:38 schwarze Exp $
d40 1
a40 1
.Dd $Mdocdate: July 15 2010 $
d128 1
a128 1
can create RSA keys for use by SSH protocol version 1 and RSA or DSA
d145 1
a145 1
with RSA or DSA authentication runs this once to create the authentication
d148 1
@


1.97
log
@repair incorrect block nesting, which screwed up indentation;
problem reported and fix OK by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.96 2010/06/30 07:24:25 jmc Exp $
d40 1
a40 1
.Dd $Mdocdate: June 30 2010 $
d218 5
d561 11
a571 1
In both cases,
@


1.96
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.95 2010/06/29 23:15:30 djm Exp $
d40 1
a40 1
.Dd $Mdocdate: June 29 2010 $
d47 1
a48 1
.Bk -words
@


1.95
log
@allow import (-i) and export (-e) of PEM and PKCS#8 encoded keys;
bz#1749; ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.94 2010/04/16 06:47:04 jmc Exp $
d40 1
a40 1
.Dd $Mdocdate: April 16 2010 $
d225 1
a225 1
This option allows exporting OpenSSH key for use by other programs, including
d296 3
d304 1
a304 1
(export) coversion options.
d307 1
a307 1
(RFC4716/SSH2 public or private key),
a314 3
.It Fl M Ar memory
Specify the amount of memory to use (in megabytes) when generating
candidate moduli for DH-GEX.
@


1.94
log
@tweak previous; ok djm
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.93 2010/04/16 01:47:26 djm Exp $
d62 1
d66 1
d220 7
a226 5
print the key in
RFC 4716 SSH Public Key File Format
to stdout.
This option allows exporting keys for use by several commercial
SSH implementations.
d277 3
a279 1
in SSH2-compatible format and print an OpenSSH compatible private
d281 4
a284 5
.Nm
also reads the
RFC 4716 SSH Public Key File Format.
This option allows importing keys from several commercial
SSH implementations.
d296 16
@


1.93
log
@revised certificate format ssh-{dss,rsa}-cert-v01@@openssh.com with the
following changes:

move the nonce field to the beginning of the certificate where it can
better protect against chosen-prefix attacks on the signature hash

Rename "constraints" field to "critical options"

Add a new non-critical "extensions" field

Add a serial number

The older format is still support for authentication and cert generation
(use "ssh-keygen -t v00 -s ca_key ..." to generate a v00 certificate)

ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.92 2010/03/13 23:38:13 jmc Exp $
d40 1
a40 1
.Dd $Mdocdate: March 13 2010 $
d509 1
a509 1
more principal (user or host) names and an optional set of options that
d549 1
a549 1
be specified through certificate options..
@


1.92
log
@fix a formatting error (args need quoted); noted by stevesk
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.91 2010/03/13 21:45:46 djm Exp $
d113 1
a113 1
.Op Fl O Ar constraint
d115 1
d303 2
a304 2
.It Fl O Ar constraint
Specify a certificate constraint when signing a key.
d309 1
a309 1
The constraints that are valid for user certificates are:
d359 1
a359 1
At present, no constraints are valid for host keys.
d445 4
d509 1
a509 1
more principal (user or host) names and an optional set of constraints that
d549 2
a550 2
be specified through certificate constraints.
A constrained certificate may disable features of the SSH session, may be
d553 1
a553 1
For a list of valid certificate constraints, see the documentation for the
@


1.91
log
@Certificates are named *-cert.pub, not *_cert.pub; committing a diff
from stevesk@@ ok me
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.90 2010/03/10 07:40:35 jmc Exp $
d40 1
a40 1
.Dd $Mdocdate: March 10 2010 $
d541 1
a541 1
.Dl $ ssh-keygen -s ca_key -I key_id -h -n host.domain user_key.pub
@


1.90
log
@typos; from Ross Richardson
closes prs 6334 and 6335
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.89 2010/03/08 09:41:27 jmc Exp $
d40 1
a40 1
.Dd $Mdocdate: March 8 2010 $
d521 1
a521 1
.Pa /path/to/user_key_cert.pub .
d529 1
a529 1
.Pa /path/to/host_key_cert.pub .
@


1.89
log
@sort the list of constraints (to -O); ok djm
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.88 2010/03/08 00:28:55 djm Exp $
d351 1
a351 2
Restrict the source addresses from which the certificate is considered valid
from.
d416 1
a416 1
.Xr ssh_config 5 .
@


1.88
log
@document permit-agent-forwarding certificate constraint; patch from
stevesk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.87 2010/03/04 22:52:40 jmc Exp $
d40 1
a40 1
.Dd $Mdocdate: March 4 2010 $
d310 9
a318 2
.It Ic no-x11-forwarding
Disable X11 forwarding (permitted by default).
d333 2
a334 6
.It Ic clear
Clear all enabled permissions.
This is useful for clearing the default set of permissions so permissions may
be added individually.
.It Ic permit-x11-forwarding
Allows X11 forwarding.
d348 3
a350 6
.It Ic force-command=command
Forces the execution of
.Ar command
instead of any shell or command specified by the user when
the certificate is used for authentication.
.It Ic source-address=address_list
@


1.87
log
@fix Bk/Ek;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.86 2010/03/04 20:35:08 djm Exp $
d332 4
@


1.86
log
@Add a -L flag to print the contents of a certificate; ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.85 2010/02/26 22:09:28 jmc Exp $
d40 1
a40 1
.Dd $Mdocdate: February 26 2010 $
a54 1
.Ek
a108 1
.Bk -words
a116 1
.Bk -words
@


1.85
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.84 2010/02/26 20:29:54 djm Exp $
d118 4
d282 2
@


1.84
log
@Add support for certificate key types for users and hosts.

OpenSSH certificate key types are not X.509 certificates, but a much
simpler format that encodes a public key, identity information and
some validity constraints and signs it with a CA key. CA keys are
regular SSH keys. This certificate style avoids the attack surface
of X.509 certificates and is very easy to deploy.

Certified host keys allow automatic acceptance of new host keys
when a CA certificate is marked as trusted in ~/.ssh/known_hosts.
see VERIFYING HOST KEYS in ssh(1) for details.

Certified user keys allow authentication of users when the signing
CA key is marked as trusted in authorized_keys. See "AUTHORIZED_KEYS
FILE FORMAT" in sshd(8) for details.

Certificates are minted using ssh-keygen(1), documentation is in
the "CERTIFICATES" section of that manpage.

Documentation on the format of certificates is in the file
PROTOCOL.certkeys

feedback and ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.83 2010/02/10 23:20:38 markus Exp $
d40 1
a40 1
.Dd $Mdocdate: February 10 2010 $
d110 1
d118 1
d264 1
a264 1
.It Fl I
d308 1
a308 1
Disable X11 forwarding. (permitted by default)
d312 1
a312 1
forwarding. (permitted by default)
d314 1
a314 1
Disable port forwarding. (permitted by default)
d316 1
a316 1
Disable PTY allocation. (permitted by default)
d321 2
a322 2
.Xr sshd 8 .
(permitted by default)
d509 2
a510 1
authenticate server hosts to users. To generate a user certificate:
@


1.83
log
@pkcs#11 is no longer optional; improve wording; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.82 2010/02/08 22:03:05 jmc Exp $
d40 1
a40 1
.Dd $Mdocdate: February 8 2010 $
d109 8
d256 11
d290 61
d380 5
d398 23
d491 66
@


1.82
log
@tweak previous; ok markus
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.81 2010/02/08 10:50:20 markus Exp $
d202 2
a203 3
Download the RSA public keys stored in the
.Ar pkcs11
provider.
@


1.81
log
@replace our obsolete smartcard code with PKCS#11.
	ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-11/v2-20/pkcs-11v2-20.pdf
ssh(1) and ssh-keygen(1) use dlopen(3) directly to talk to a PKCS#11
provider (shared library) while ssh-agent(1) delegates PKCS#11 to
a forked a ssh-pkcs11-helper process.
PKCS#11 is currently a compile time option.
feedback and ok djm@@; inspired by patches from Alon Bar-Lev
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.80 2009/10/24 00:48:34 dtucker Exp $
d40 1
a40 1
.Dd $Mdocdate: October 24 2009 $
d82 1
a82 1
.Fl D Ar reader
a92 3
.Nm ssh-keygen
.Fl U Ar reader
.Op Fl f Ar input_keyfile
@


1.80
log
@ssh-keygen now uses AES-128 for private keys
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.79 2008/07/24 23:55:30 sthen Exp $
d40 1
a40 1
.Dd $Mdocdate: July 24 2008 $
d204 4
a207 3
.It Fl D Ar reader
Download the RSA public key stored in the smartcard in
.Ar reader .
a316 3
.It Fl U Ar reader
Upload an existing RSA private key into the smartcard in
.Ar reader .
@


1.79
log
@Add "ssh-keygen -F -l" to synopsis (displays fingerprint from
known_hosts).  ok djm@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.78 2008/06/12 19:10:09 jmc Exp $
d40 1
a40 1
.Dd $Mdocdate: June 12 2008 $
d396 1
a396 1
used to encrypt the private part of this file using 3DES.
d414 1
a414 1
used to encrypt the private part of this file using 3DES.
d432 1
a432 1
used to encrypt the private part of this file using 3DES.
@


1.78
log
@tweak the ascii art text; ok grunk
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.77 2008/06/11 22:20:46 grunk Exp $
d40 1
a40 1
.Dd $Mdocdate: June 11 2008 $
d86 1
@


1.77
log
@ssh-keygen would write fingerprints to STDOUT, and random art to STDERR,
that is not how it was envisioned.
Also correct manpage saying that -v is needed along with -l for it to work.

spotted by naddy@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.76 2008/06/11 21:01:35 grunk Exp $
a260 3
If invoked along with
.Fl v ,
an ASCII art representation of the key is supplied with the fingerprint.
d264 4
a267 2
tries to find the matching public key file and prints its fingerprint
and representation.
@


1.76
log
@Introduce SSH Fingerprint ASCII Visualization, a technique inspired by the
graphical hash visualization schemes known as "random art", and by
Dan Kaminsky's musings on the subject during a BlackOp talk at the
23C3 in Berlin.

Scientific publication (original paper):
"Hash Visualization: a New Technique to improve Real-World Security",
Perrig A. and Song D., 1999, International Workshop on Cryptographic
Techniques and E-Commerce (CrypTEC '99)
http://sparrow.ece.cmu.edu/~adrian/projects/validation/validation.pdf

The algorithm used here is a worm crawling over a discrete plane,
leaving a trace (augmenting the field) everywhere it goes.
Movement is taken from dgst_raw 2bit-wise.  Bumping into walls
makes the respective movement vector be ignored for this turn,
thus switching to the other color of the chessboard.
Graphs are not unambiguous for now, because circles in graphs can be
walked in either direction.

discussions with several people,
help, corrections and ok markus@@ djm@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.75 2007/05/31 19:20:16 jmc Exp $
d40 1
a40 1
.Dd $Mdocdate: May 31 2007 $
d260 4
a263 1
Show fingerprint and ASCII art representation of specified public key file.
@


1.75
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.74 2007/01/12 20:20:41 jmc Exp $
d40 1
a40 1
.Dd $Mdocdate$
d260 1
a260 1
Show fingerprint of specified public key file.
d264 2
a265 1
tries to find the matching public key file and prints its fingerprint.
@


1.74
log
@more secsh -> rfc 4716 updates;

spotted by wiz@@netbsd
ok markus
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.73 2006/12/11 21:25:46 markus Exp $
d40 1
a40 1
.Dd September 25, 1999
@


1.73
log
@add rfc 4716 (public key format); ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.72 2005/11/28 05:16:53 dtucker Exp $
d256 1
a256 1
.Sq SECSH Public Key File Format .
@


1.72
log
@Enforce DSA key length of exactly 1024 bits to comply with FIPS-186-2,
increase minumum RSA key size to 768 bits and update man page to reflect
these.  Patch originally bz#1119 (senthilkumar_sen at hotpop.com),
ok djm@@, grudging ok deraadt@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.71 2005/10/31 19:55:25 jmc Exp $
d208 2
a209 2
print the key in a
.Sq SECSH Public Key File Format
d453 3
a455 6
.%A J. Galbraith
.%A R. Thayer
.%T "SECSH Public Key File Format"
.%N draft-ietf-secsh-publickeyfile-01.txt
.%D March 2001
.%O work in progress material
@


1.71
log
@grammar;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.70 2005/10/31 11:12:49 djm Exp $
d193 1
a193 1
Minimum is 512 bits.
d195 1
a195 1
The default is 2048 bits.
@


1.70
log
@generate a protocol 2 RSA key by default
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.69 2005/06/08 03:50:00 djm Exp $
d123 1
a123 1
will generate a RSA key for use in SSH protocol 2 connections.
@


1.69
log
@increase default rsa/dsa key length from 1024 to 2048 bits; ok markus@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.68 2005/04/21 06:17:50 djm Exp $
d121 3
@


1.69.2.1
log
@upgrade to OpenSSH 4.3
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.72 2005/11/28 05:16:53 dtucker Exp $
a120 3
If invoked without any arguments,
.Nm
will generate an RSA key for use in SSH protocol 2 connections.
d190 1
a190 1
For RSA keys, the minimum size is 768 bits and the default is 2048 bits.
d192 1
a192 1
DSA keys must be exactly 1024 bits as specified by FIPS 186-2.
@


1.69.2.2
log
@upgrade to OpenSSH 4.4
@
text
@@


1.68
log
@OpenSSH doesn't ever look at the $HOME environment variable, so don't say
that we do (bz #623); ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.67 2005/03/14 10:09:03 dtucker Exp $
d191 2
a192 2
Generally, 1024 bits is considered sufficient.
The default is 1024 bits.
@


1.67
log
@Correct description of -H (bz #997);  ok markus@@, punctuation jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.66 2005/03/01 18:15:56 jmc Exp $
d132 2
a133 2
.Pa $HOME/.ssh/identity ,
.Pa $HOME/.ssh/id_dsa
d135 1
a135 1
.Pa $HOME/.ssh/id_rsa .
d384 1
a384 1
.It Pa $HOME/.ssh/identity
d395 1
a395 1
.It Pa $HOME/.ssh/identity.pub
d398 1
a398 1
.Pa $HOME/.ssh/authorized_keys
d402 1
a402 1
.It Pa $HOME/.ssh/id_dsa
d413 1
a413 1
.It Pa $HOME/.ssh/id_dsa.pub
d416 1
a416 1
.Pa $HOME/.ssh/authorized_keys
d420 1
a420 1
.It Pa $HOME/.ssh/id_rsa
d431 1
a431 1
.It Pa $HOME/.ssh/id_rsa.pub
d434 1
a434 1
.Pa $HOME/.ssh/authorized_keys
@


1.67.2.1
log
@upgrade to OpenSSH 4.2
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.69 2005/06/08 03:50:00 djm Exp $
d132 2
a133 2
.Pa ~/.ssh/identity ,
.Pa ~/.ssh/id_dsa
d135 1
a135 1
.Pa ~/.ssh/id_rsa .
d191 2
a192 2
Generally, 2048 bits is considered sufficient.
The default is 2048 bits.
d384 1
a384 1
.It Pa ~/.ssh/identity
d395 1
a395 1
.It Pa ~/.ssh/identity.pub
d398 1
a398 1
.Pa ~/.ssh/authorized_keys
d402 1
a402 1
.It Pa ~/.ssh/id_dsa
d413 1
a413 1
.It Pa ~/.ssh/id_dsa.pub
d416 1
a416 1
.Pa ~/.ssh/authorized_keys
d420 1
a420 1
.It Pa ~/.ssh/id_rsa
d431 1
a431 1
.It Pa ~/.ssh/id_rsa.pub
d434 1
a434 1
.Pa ~/.ssh/authorized_keys
@


1.67.2.2
log
@upgrade to OpenSSH 4.3
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.72 2005/11/28 05:16:53 dtucker Exp $
a120 3
If invoked without any arguments,
.Nm
will generate an RSA key for use in SSH protocol 2 connections.
d190 1
a190 1
For RSA keys, the minimum size is 768 bits and the default is 2048 bits.
d192 1
a192 1
DSA keys must be exactly 1024 bits as specified by FIPS 186-2.
@


1.66
log
@sort options (no attempt made at synopsis clean up though);
spelling (occurance -> occurrence);
use prompt before examples;
grammar;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.65 2005/03/01 15:05:00 jmc Exp $
d235 4
a238 2
file, printing the result to standard output.
This replaces all hostnames and addresses with hashed representations.
@


1.65
log
@whitespace;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.64 2005/03/01 10:42:49 djm Exp $
d186 2
d193 2
d200 3
d210 18
d232 13
a244 2
.It Fl f Ar filename
Specifies the filename of the key file.
d260 7
a278 42
.It Fl y
This option will read a private
OpenSSH format file and print an OpenSSH public key to stdout.
.It Fl t Ar type
Specifies the type of the key to create.
The possible values are
.Dq rsa1
for protocol version 1 and
.Dq rsa
or
.Dq dsa
for protocol version 2.
.It Fl B
Show the bubblebabble digest of specified private or public key file.
.It Fl C Ar comment
Provides the new comment.
.It Fl D Ar reader
Download the RSA public key stored in the smartcard in
.Ar reader .
.It Fl F Ar hostname
Search for the specified
.Ar hostname
in a
.Pa known_hosts
file, listing any occurances found.
This option is useful to find hashed host names or addresses and may also be
used in conjunction with the
.Fl H
option to print found keys in a hashed format.
.It Fl H
Hash a
.Pa known_hosts
file, printing the result to standard output.
This replaces all hostnames and addresses with hashed representations.
These hashes may be used normally by
.Nm ssh
and
.Nm sshd ,
but they do not reveal identifying information should the file's contents
be disclosed.
This option will not modify existing hashed hostnames and is therefore safe
to use on files that mix hashed and non-hashed names.
d288 4
a291 13
.It Fl G Ar output_file
Generate candidate primes for DH-GEX.
These primes must be screened for
safety (using the
.Fl T
option) before use.
.It Fl M Ar memory
Specify the amount of memory to use (in megabytes) when generating
candidate moduli for DH-GEX.
.It Fl N Ar new_passphrase
Provides the new passphrase.
.It Fl P Ar passphrase
Provides the (old) passphrase.
d298 9
a306 2
.It Fl W Ar generator
Specify desired generator when testing candidate moduli for DH-GEX.
d320 5
a324 4
.It Fl r Ar hostname
Print the SSHFP fingerprint resource record named
.Ar hostname
for the specified public key file.
d343 1
a343 1
.Dl ssh-keygen -G moduli-2048.candidates -b 2048
d363 1
a363 1
.Dl ssh-keygen -T moduli-2048 -f moduli-2048.candidates
d374 1
a374 1
Valid generator values are 2, 3 and 5.
@


1.64
log
@add tools for managing known_hosts files with hashed hostnames, including
hashing existing files and deleting hosts by name; ok markus@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.63 2004/08/13 00:01:43 jmc Exp $
d276 1
a276 1
This option will not modify existing hashed hostnames and is therefore safe 
d281 1
a281 1
from a 
d284 1
a284 1
This option is useful to delete hashed hosts (see the 
@


1.63
log
@kill whitespace at eol;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.62 2004/08/12 21:41:13 jakob Exp $
d84 9
d255 32
@


1.63.2.1
log
@upgrade to OpenSSH 4.0
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.66 2005/03/01 18:15:56 jmc Exp $
a83 9
.Fl F Ar hostname
.Op Fl f Ar known_hosts_file
.Nm ssh-keygen
.Fl H
.Op Fl f Ar known_hosts_file
.Nm ssh-keygen
.Fl R Ar hostname
.Op Fl f Ar known_hosts_file
.Nm ssh-keygen
a176 2
.It Fl B
Show the bubblebabble digest of specified private or public key file.
a181 2
.It Fl C Ar comment
Provides a new comment.
a186 3
.It Fl D Ar reader
Download the RSA public key stored in the smartcard in
.Ar reader .
a193 18
.It Fl F Ar hostname
Search for the specified
.Ar hostname
in a
.Pa known_hosts
file, listing any occurrences found.
This option is useful to find hashed host names or addresses and may also be
used in conjunction with the
.Fl H
option to print found keys in a hashed format.
.It Fl f Ar filename
Specifies the filename of the key file.
.It Fl G Ar output_file
Generate candidate primes for DH-GEX.
These primes must be screened for
safety (using the
.Fl T
option) before use.
d198 2
a199 13
.It Fl H
Hash a
.Pa known_hosts
file, printing the result to standard output.
This replaces all hostnames and addresses with hashed representations.
These hashes may be used normally by
.Nm ssh
and
.Nm sshd ,
but they do not reveal identifying information should the file's contents
be disclosed.
This option will not modify existing hashed hostnames and is therefore safe
to use on files that mix hashed and non-hashed names.
a214 7
.It Fl M Ar memory
Specify the amount of memory to use (in megabytes) when generating
candidate moduli for DH-GEX.
.It Fl N Ar new_passphrase
Provides the new passphrase.
.It Fl P Ar passphrase
Provides the (old) passphrase.
d227 3
a229 19
.It Fl R Ar hostname
Removes all keys belonging to
.Ar hostname
from a
.Pa known_hosts
file.
This option is useful to delete hashed hosts (see the
.Fl H
option above).
.It Fl r Ar hostname
Print the SSHFP fingerprint resource record named
.Ar hostname
for the specified public key file.
.It Fl S Ar start
Specify start point (in hex) when generating candidate moduli for DH-GEX.
.It Fl T Ar output_file
Test DH group exchange candidate primes (generated using the
.Fl G
option) for safety.
d231 1
a231 1
Specifies the type of key to create.
d239 28
d280 4
a283 5
.It Fl W Ar generator
Specify desired generator when testing candidate moduli for DH-GEX.
.It Fl y
This option will read a private
OpenSSH format file and print an OpenSSH public key to stdout.
d302 1
a302 1
.Dl # ssh-keygen -G moduli-2048.candidates -b 2048
d322 1
a322 1
.Dl # ssh-keygen -T moduli-2048 -f moduli-2048.candidates
d333 1
a333 1
Valid generator values are 2, 3, and 5.
@


1.63.2.2
log
@upgrade to OpenSSH 4.1
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.67 2005/03/14 10:09:03 dtucker Exp $
d235 2
a236 4
file.
This replaces all hostnames and addresses with hashed representations
within the specified file; the original content is moved to a file with
a .old suffix.
@


1.63.2.3
log
@upgrade to OpenSSH 4.2
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.69 2005/06/08 03:50:00 djm Exp $
d132 2
a133 2
.Pa ~/.ssh/identity ,
.Pa ~/.ssh/id_dsa
d135 1
a135 1
.Pa ~/.ssh/id_rsa .
d191 2
a192 2
Generally, 2048 bits is considered sufficient.
The default is 2048 bits.
d384 1
a384 1
.It Pa ~/.ssh/identity
d395 1
a395 1
.It Pa ~/.ssh/identity.pub
d398 1
a398 1
.Pa ~/.ssh/authorized_keys
d402 1
a402 1
.It Pa ~/.ssh/id_dsa
d413 1
a413 1
.It Pa ~/.ssh/id_dsa.pub
d416 1
a416 1
.Pa ~/.ssh/authorized_keys
d420 1
a420 1
.It Pa ~/.ssh/id_rsa
d431 1
a431 1
.It Pa ~/.ssh/id_rsa.pub
d434 1
a434 1
.Pa ~/.ssh/authorized_keys
@


1.62
log
@improve SSHFP documentation; ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.61 2003/12/22 09:16:58 djm Exp $
d196 1
a196 1
.Fl r 
@


1.61
log
@tidy up moduli generation debugging, add -v (verbose/debug) option to
ssh-keygen; ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.60 2003/07/28 09:49:56 djm Exp $
d195 3
a197 1
Use generic DNS resource record format.
d281 3
a283 2
Print DNS resource record with the specified
.Ar hostname .
@


1.61.2.1
log
@upgrade to OpenSSH 3.9
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.63 2004/08/13 00:01:43 jmc Exp $
d195 1
a195 3
Use generic DNS format when printing fingerprint resource records using the
.Fl r
command.
d279 2
a280 3
Print the SSHFP fingerprint resource record named
.Ar hostname
for the specified public key file.
@


1.61.2.2
log
@upgrade to OpenSSH 4.0
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.66 2005/03/01 18:15:56 jmc Exp $
a83 9
.Fl F Ar hostname
.Op Fl f Ar known_hosts_file
.Nm ssh-keygen
.Fl H
.Op Fl f Ar known_hosts_file
.Nm ssh-keygen
.Fl R Ar hostname
.Op Fl f Ar known_hosts_file
.Nm ssh-keygen
a176 2
.It Fl B
Show the bubblebabble digest of specified private or public key file.
a181 2
.It Fl C Ar comment
Provides a new comment.
a186 3
.It Fl D Ar reader
Download the RSA public key stored in the smartcard in
.Ar reader .
a193 18
.It Fl F Ar hostname
Search for the specified
.Ar hostname
in a
.Pa known_hosts
file, listing any occurrences found.
This option is useful to find hashed host names or addresses and may also be
used in conjunction with the
.Fl H
option to print found keys in a hashed format.
.It Fl f Ar filename
Specifies the filename of the key file.
.It Fl G Ar output_file
Generate candidate primes for DH-GEX.
These primes must be screened for
safety (using the
.Fl T
option) before use.
d198 2
a199 13
.It Fl H
Hash a
.Pa known_hosts
file, printing the result to standard output.
This replaces all hostnames and addresses with hashed representations.
These hashes may be used normally by
.Nm ssh
and
.Nm sshd ,
but they do not reveal identifying information should the file's contents
be disclosed.
This option will not modify existing hashed hostnames and is therefore safe
to use on files that mix hashed and non-hashed names.
a214 7
.It Fl M Ar memory
Specify the amount of memory to use (in megabytes) when generating
candidate moduli for DH-GEX.
.It Fl N Ar new_passphrase
Provides the new passphrase.
.It Fl P Ar passphrase
Provides the (old) passphrase.
d227 3
a229 19
.It Fl R Ar hostname
Removes all keys belonging to
.Ar hostname
from a
.Pa known_hosts
file.
This option is useful to delete hashed hosts (see the
.Fl H
option above).
.It Fl r Ar hostname
Print the SSHFP fingerprint resource record named
.Ar hostname
for the specified public key file.
.It Fl S Ar start
Specify start point (in hex) when generating candidate moduli for DH-GEX.
.It Fl T Ar output_file
Test DH group exchange candidate primes (generated using the
.Fl G
option) for safety.
d231 1
a231 1
Specifies the type of key to create.
d239 28
d280 4
a283 5
.It Fl W Ar generator
Specify desired generator when testing candidate moduli for DH-GEX.
.It Fl y
This option will read a private
OpenSSH format file and print an OpenSSH public key to stdout.
d302 1
a302 1
.Dl # ssh-keygen -G moduli-2048.candidates -b 2048
d322 1
a322 1
.Dl # ssh-keygen -T moduli-2048 -f moduli-2048.candidates
d333 1
a333 1
Valid generator values are 2, 3, and 5.
@


1.60
log
@Support for generating Diffie-Hellman groups (/etc/moduli) from ssh-keygen.
Based on code from Phil Karn, William Allen Simpson and Niels Provos.
ok markus@@, thanks jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.59 2003/06/10 09:12:11 jmc Exp $
d92 1
d99 1
d268 10
@


1.60.2.1
log
@upgrade to OpenSSH 3.8
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.61 2003/12/22 09:16:58 djm Exp $
a91 1
.Op Fl v
a97 1
.Op Fl v
a265 10
.It Fl v
Verbose mode.
Causes
.Nm
to print debugging messages about its progress.
This is helpful for debugging moduli generation.
Multiple
.Fl v
options increase the verbosity.
The maximum is 3.
@


1.60.2.2
log
@upgrade to OpenSSH 3.9
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.63 2004/08/13 00:01:43 jmc Exp $
d195 1
a195 3
Use generic DNS format when printing fingerprint resource records using the
.Fl r
command.
d279 2
a280 3
Print the SSHFP fingerprint resource record named
.Ar hostname
for the specified public key file.
@


1.59
log
@- section reorder
- COMPATIBILITY merge
- macro cleanup
- kill whitespace at EOL
- new sentence, new line

ssh pages ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.58 2003/05/20 12:09:31 jmc Exp $
d90 10
d111 7
d170 5
d242 9
d255 8
d270 54
d380 4
d389 1
@


1.58
log
@new sentence, new line
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.57 2003/05/14 18:16:20 jakob Exp $
a287 9
.Sh AUTHORS
OpenSSH is a derivative of the original and free
ssh 1.2.12 release by Tatu Ylonen.
Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos,
Theo de Raadt and Dug Song
removed many bugs, re-added newer features and
created OpenSSH.
Markus Friedl contributed the support for SSH
protocol versions 1.5 and 2.0.
d301 9
@


1.57
log
@add experimental support for verifying hos keys using DNS as described
in draft-ietf-secsh-dns-xx.txt. more information in README.dns.
ok markus@@ and henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.56 2003/03/28 10:11:43 jmc Exp $
d96 2
a97 2
keys for use by SSH protocol version 2. The type of key to be generated
is specified with the
@


1.56
log
@- killed whitespace
- new sentence new line
- .Bk for arguments

ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.55 2002/11/26 02:35:30 stevesk Exp $
d86 4
d170 2
d227 3
@


1.55
log
@remove outdated statement; ok markus@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.54 2002/06/19 00:27:55 deraadt Exp $
d48 1
d55 1
@


1.55.2.1
log
@Update OpenSSH to version 3.6.1
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.54.2.2 2003/04/03 23:27:13 margarida Exp $
a47 1
.Bk -words
a53 1
.Ek
@


1.55.2.2
log
@upgrade to OpenSSH 3.7
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.60 2003/07/28 09:49:56 djm Exp $
a85 14
.Nm ssh-keygen
.Fl r Ar hostname
.Op Fl f Ar input_keyfile
.Op Fl g
.Nm ssh-keygen
.Fl G Ar output_file
.Op Fl b Ar bits
.Op Fl M Ar memory
.Op Fl S Ar start_point
.Nm ssh-keygen
.Fl T Ar output_file
.Fl f Ar input_file
.Op Fl a Ar num_trials
.Op Fl W Ar generator
d92 2
a93 2
keys for use by SSH protocol version 2.
The type of key to be generated is specified with the
a96 7
.Nm
is also used to generate groups for use in Diffie-Hellman group
exchange (DH-GEX).
See the
.Sx MODULI GENERATION
section for details.
.Pp
a148 5
.It Fl a Ar trials
Specifies the number of primality tests to perform when screening DH-GEX
candidates using the
.Fl T
command.
a165 2
.It Fl g
Use generic DNS resource record format.
a213 9
.It Fl G Ar output_file
Generate candidate primes for DH-GEX.
These primes must be screened for
safety (using the
.Fl T
option) before use.
.It Fl M Ar memory
Specify the amount of memory to use (in megabytes) when generating
candidate moduli for DH-GEX.
a217 8
.It Fl S Ar start
Specify start point (in hex) when generating candidate moduli for DH-GEX.
.It Fl T Ar output_file
Test DH group exchange candidate primes (generated using the
.Fl G
option) for safety.
.It Fl W Ar generator
Specify desired generator when testing candidate moduli for DH-GEX.
a220 3
.It Fl r Ar hostname
Print DNS resource record with the specified
.Ar hostname .
a221 54
.Sh MODULI GENERATION
.Nm
may be used to generate groups for the Diffie-Hellman Group Exchange
(DH-GEX) protocol.
Generating these groups is a two-step process: first, candidate
primes are generated using a fast, but memory intensive process.
These candidate primes are then tested for suitability (a CPU-intensive
process).
.Pp
Generation of primes is performed using the
.Fl G
option.
The desired length of the primes may be specified by the
.Fl b
option.
For example:
.Pp
.Dl ssh-keygen -G moduli-2048.candidates -b 2048
.Pp
By default, the search for primes begins at a random point in the
desired length range.
This may be overridden using the
.Fl S
option, which specifies a different start point (in hex).
.Pp
Once a set of candidates have been generated, they must be tested for
suitability.
This may be performed using the
.Fl T
option.
In this mode
.Nm
will read candidates from standard input (or a file specified using the
.Fl f
option).
For example:
.Pp
.Dl ssh-keygen -T moduli-2048 -f moduli-2048.candidates
.Pp
By default, each candidate will be subjected to 100 primality tests.
This may be overridden using the
.Fl a
option.
The DH generator value will be chosen automatically for the
prime under consideration.
If a specific generator is desired, it may be requested using the
.Fl W
option.
Valid generator values are 2, 3 and 5.
.Pp
Screened DH groups may be installed in
.Pa /etc/moduli .
It is important that this file contains moduli of a range of bit lengths and
that both ends of a connection share common moduli.
a277 4
.It Pa /etc/moduli
Contains Diffie-Hellman groups used for DH-GEX.
The file format is described in
.Xr moduli 5 .
d279 9
a291 1
.Xr moduli 5 ,
a300 9
.Sh AUTHORS
OpenSSH is a derivative of the original and free
ssh 1.2.12 release by Tatu Ylonen.
Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos,
Theo de Raadt and Dug Song
removed many bugs, re-added newer features and
created OpenSSH.
Markus Friedl contributed the support for SSH
protocol versions 1.5 and 2.0.
@


1.55.2.3
log
@upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.61 2003/12/22 09:16:58 djm Exp $
a91 1
.Op Fl v
a97 1
.Op Fl v
a265 10
.It Fl v
Verbose mode.
Causes
.Nm
to print debugging messages about its progress.
This is helpful for debugging moduli generation.
Multiple
.Fl v
options increase the verbosity.
The maximum is 3.
@


1.54
log
@KNF done automatically while reading....
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.53 2002/02/16 14:53:37 stevesk Exp $
d150 1
a150 2
Generally 1024 bits is considered sufficient, and key sizes
above that no longer improve security but make things slower.
@


1.54.2.1
log
@Update to OpenSSH 3.6
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.55 2002/11/26 02:35:30 stevesk Exp $
d150 2
a151 1
Generally, 1024 bits is considered sufficient.
@


1.54.2.2
log
@Update to OpenSSH 3.6.1
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.56 2003/03/28 10:11:43 jmc Exp $
a47 1
.Bk -words
a53 1
.Ek
@


1.54.2.3
log
@upgrade to OpenSSH 3.7
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.60 2003/07/28 09:49:56 djm Exp $
a85 14
.Nm ssh-keygen
.Fl r Ar hostname
.Op Fl f Ar input_keyfile
.Op Fl g
.Nm ssh-keygen
.Fl G Ar output_file
.Op Fl b Ar bits
.Op Fl M Ar memory
.Op Fl S Ar start_point
.Nm ssh-keygen
.Fl T Ar output_file
.Fl f Ar input_file
.Op Fl a Ar num_trials
.Op Fl W Ar generator
d92 2
a93 2
keys for use by SSH protocol version 2.
The type of key to be generated is specified with the
a96 7
.Nm
is also used to generate groups for use in Diffie-Hellman group
exchange (DH-GEX).
See the
.Sx MODULI GENERATION
section for details.
.Pp
a148 5
.It Fl a Ar trials
Specifies the number of primality tests to perform when screening DH-GEX
candidates using the
.Fl T
command.
a165 2
.It Fl g
Use generic DNS resource record format.
a213 9
.It Fl G Ar output_file
Generate candidate primes for DH-GEX.
These primes must be screened for
safety (using the
.Fl T
option) before use.
.It Fl M Ar memory
Specify the amount of memory to use (in megabytes) when generating
candidate moduli for DH-GEX.
a217 8
.It Fl S Ar start
Specify start point (in hex) when generating candidate moduli for DH-GEX.
.It Fl T Ar output_file
Test DH group exchange candidate primes (generated using the
.Fl G
option) for safety.
.It Fl W Ar generator
Specify desired generator when testing candidate moduli for DH-GEX.
a220 3
.It Fl r Ar hostname
Print DNS resource record with the specified
.Ar hostname .
a221 54
.Sh MODULI GENERATION
.Nm
may be used to generate groups for the Diffie-Hellman Group Exchange
(DH-GEX) protocol.
Generating these groups is a two-step process: first, candidate
primes are generated using a fast, but memory intensive process.
These candidate primes are then tested for suitability (a CPU-intensive
process).
.Pp
Generation of primes is performed using the
.Fl G
option.
The desired length of the primes may be specified by the
.Fl b
option.
For example:
.Pp
.Dl ssh-keygen -G moduli-2048.candidates -b 2048
.Pp
By default, the search for primes begins at a random point in the
desired length range.
This may be overridden using the
.Fl S
option, which specifies a different start point (in hex).
.Pp
Once a set of candidates have been generated, they must be tested for
suitability.
This may be performed using the
.Fl T
option.
In this mode
.Nm
will read candidates from standard input (or a file specified using the
.Fl f
option).
For example:
.Pp
.Dl ssh-keygen -T moduli-2048 -f moduli-2048.candidates
.Pp
By default, each candidate will be subjected to 100 primality tests.
This may be overridden using the
.Fl a
option.
The DH generator value will be chosen automatically for the
prime under consideration.
If a specific generator is desired, it may be requested using the
.Fl W
option.
Valid generator values are 2, 3 and 5.
.Pp
Screened DH groups may be installed in
.Pa /etc/moduli .
It is important that this file contains moduli of a range of bit lengths and
that both ends of a connection share common moduli.
a277 4
.It Pa /etc/moduli
Contains Diffie-Hellman groups used for DH-GEX.
The file format is described in
.Xr moduli 5 .
d279 9
a291 1
.Xr moduli 5 ,
a300 9
.Sh AUTHORS
OpenSSH is a derivative of the original and free
ssh 1.2.12 release by Tatu Ylonen.
Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos,
Theo de Raadt and Dug Song
removed many bugs, re-added newer features and
created OpenSSH.
Markus Friedl contributed the support for SSH
protocol versions 1.5 and 2.0.
@


1.53
log
@-t required now for key generation
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.52 2001/12/21 08:52:22 djm Exp $
d89 1
a89 1
can create RSA keys for use by SSH protocol version 1 and RSA or DSA 
@


1.53.2.1
log
@Pull in OpenSSH-3.4
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.54 2002/06/19 00:27:55 deraadt Exp $
d89 1
a89 1
can create RSA keys for use by SSH protocol version 1 and RSA or DSA
@


1.53.2.2
log
@Merge OpenSSH 3.6.1
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.56 2003/03/28 10:11:43 jmc Exp $
a47 1
.Bk -words
a53 1
.Ek
d150 2
a151 1
Generally, 1024 bits is considered sufficient.
@


1.52
log
@Remove default (rsa1) key type; ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.51 2001/11/21 18:49:14 stevesk Exp $
d50 1
a50 1
.Op Fl t Ar type
@


1.51
log
@more on passphrase construction; ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.50 2001/10/25 21:14:32 markus Exp $
d89 3
a91 2
defaults to generating a RSA1 key for use by SSH protocol version 1.
Specifying the
d93 1
a93 1
option instead creates a key for use by SSH protocol version 2.
a205 2
The default is
.Dq rsa1 .
@


1.50
log
@better docu for fingerprinting, ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.49 2001/09/05 06:23:07 deraadt Exp $
d114 4
a117 1
Good passphrases are 10-30 characters long and are
d120 2
a121 1
passphrases).
@


1.49
log
@avoid first person in manual pages
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.48 2001/08/02 15:07:23 jakob Exp $
d150 1
d172 5
a176 1
Show fingerprint of specified private or public key file.
@


1.49.2.1
log
@Pull in patches from current (Errata 002):
Update to OpenSSH-3.0.1 via errata patch (Instead of using release tarball)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.50 2001/10/25 21:14:32 markus Exp $
a149 1
This operation is only supported for RSA1 keys.
d171 1
a171 5
Show fingerprint of specified public key file.
Private RSA1 keys are also supported.
For RSA and DSA keys
.Nm
tries to find the matching public key file and prints its fingerprint.
@


1.49.2.2
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.53 2002/02/16 14:53:37 stevesk Exp $
d50 1
a50 1
.Fl t Ar type
d89 2
a90 3
can create RSA keys for use by SSH protocol version 1 and RSA or DSA 
keys for use by SSH protocol version 2. The type of key to be generated
is specified with the
d92 1
a92 1
option.
d114 1
a114 4
A passphrase is similar to a password, except it can be a phrase with a
series of words, punctuation, numbers, whitespace, or any string of
characters you want.
Good passphrases are 10-30 characters long, are
d117 1
a117 2
passphrases), and contain a mix of upper and lowercase letters,
numbers, and non-alphanumeric characters.
d201 2
@


1.49.2.3
log
@Update OpenSSH to version 3.3 (with local changes, configuration files still
living in /etc and privsep user being nobody).
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.49.2.2 2002/03/07 17:37:47 jason Exp $
d89 1
a89 1
can create RSA keys for use by SSH protocol version 1 and RSA or DSA
@


1.48
log
@document smartcard upload/download. ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.47 2001/07/23 14:14:18 aaron Exp $
d92 1
a92 1
option allows you to create a key for use by SSH protocol version 2.
d124 1
a124 1
lost or forgotten, you will have to generate a new key and copy the
d231 1
a231 1
where you wish to log in using RSA authentication.
d249 1
a249 1
where you wish to log in using public key authentication.
d267 1
a267 1
where you wish to log in using public key authentication.
@


1.47
log
@Fix typo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.46 2001/06/25 17:18:27 markus Exp $
d79 5
d159 1
a159 1
.It Fl f
d202 3
d209 3
@


1.46
log
@sshd(8) will never read the private keys, but ssh(1) does; hugh@@mimosa.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.45 2001/06/23 05:57:09 deraadt Exp $
d85 1
a85 1
specifying the
@


1.45
log
@ok, tmac is now fixed
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.44 2001/06/23 02:33:05 deraadt Exp $
d213 1
a213 1
.Xr sshd 8
d231 1
a231 1
.Xr sshd 8
d249 1
a249 1
.Xr sshd 8
@


1.44
log
@join .%A entries; most by bk@@rt.fm
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.43 2001/06/22 21:55:49 markus Exp $
d274 2
a275 1
.%A J. Galbraith and R. Thayer
@


1.43
log
@merge authorized_keys2 into authorized_keys.
authorized_keys2 is used for backward compat.
(just append authorized_keys2 to authorized_keys).
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.42 2001/06/03 19:36:44 markus Exp $
d274 1
a274 2
.%A J. Galbraith
.%A R. Thayer
@


1.42
log
@1-2 bits of entrophy per character (not per word), ok stevesk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.41 2001/05/05 13:42:52 stevesk Exp $
d236 1
a236 1
.Pa $HOME/.ssh/authorized_keys2
d254 1
a254 1
.Pa $HOME/.ssh/authorized_keys2
@


1.41
log
@typos, grammar
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.40 2001/04/23 21:57:07 markus Exp $
d111 1
a111 1
prose has only 1-2 bits of entropy per word, and provides very bad
@


1.40
log
@allow public key for -e, too
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.39 2001/04/22 23:58:36 markus Exp $
d146 1
a146 1
passphrase if the key has one, and for the new comment.
@


1.40.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.49 2001/09/05 06:23:07 deraadt Exp $
a78 5
.Nm ssh-keygen
.Fl D Ar reader
.Nm ssh-keygen
.Fl U Ar reader
.Op Fl f Ar input_keyfile
d85 1
a85 1
Specifying the
d87 1
a87 1
option instead creates a key for use by SSH protocol version 2.
d111 1
a111 1
prose has only 1-2 bits of entropy per character, and provides very bad
d119 1
a119 1
lost or forgotten, a new key must be generated and copied to the
d146 1
a146 1
the passphrase if the key has one, and for the new comment.
d154 1
a154 1
.It Fl f Ar filename
a196 3
.It Fl D Ar reader
Download the RSA public key stored in the smartcard in
.Ar reader .
a200 3
.It Fl U Ar reader
Upload an existing RSA private key into the smartcard in
.Ar reader .
d213 1
a213 1
.Xr ssh 1
d220 1
a220 1
where the user wishes to log in using RSA authentication.
d231 1
a231 1
.Xr ssh 1
d236 1
a236 1
.Pa $HOME/.ssh/authorized_keys
d238 1
a238 1
where the user wishes to log in using public key authentication.
d249 1
a249 1
.Xr ssh 1
d254 1
a254 1
.Pa $HOME/.ssh/authorized_keys
d256 1
a256 1
where the user wishes to log in using public key authentication.
@


1.40.2.2
log
@Merge OpenSSH 3.0.1.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.40.2.1 2001/09/27 19:03:55 jason Exp $
a149 1
This operation is only supported for RSA1 keys.
d171 1
a171 5
Show fingerprint of specified public key file.
Private RSA1 keys are also supported.
For RSA and DSA keys
.Nm
tries to find the matching public key file and prints its fingerprint.
@


1.40.2.3
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.53 2002/02/16 14:53:37 stevesk Exp $
d50 1
a50 1
.Fl t Ar type
d89 2
a90 3
can create RSA keys for use by SSH protocol version 1 and RSA or DSA 
keys for use by SSH protocol version 2. The type of key to be generated
is specified with the
d92 1
a92 1
option.
d114 1
a114 4
A passphrase is similar to a password, except it can be a phrase with a
series of words, punctuation, numbers, whitespace, or any string of
characters you want.
Good passphrases are 10-30 characters long, are
d117 1
a117 2
passphrases), and contain a mix of upper and lowercase letters,
numbers, and non-alphanumeric characters.
d201 2
@


1.39
log
@document hostbased and other cleanup
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.38 2001/04/22 13:41:02 markus Exp $
d148 2
a149 1
This option will read a private OpenSSH key file and print the key in a
@


1.38
log
@style, noted by stevesk; sort flags in usage
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.37 2001/04/22 13:25:37 markus Exp $
d84 1
a84 1
defaults to generating a RSA1 key for use by protocols 1.3 and 1.5;
d87 1
a87 1
option allows you to create a key for use by protocol 2.0.
@


1.37
log
@rename arguments -x -> -e (export key), -X -> -i (import key)
xref draft-ietf-secsh-publickeyfile-01.txt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.36 2001/04/10 09:13:21 itojun Exp $
d160 1
a160 1
does also read the
@


1.36
log
@document id_rsa{.pub,}.  markus ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.35 2001/03/11 22:33:23 markus Exp $
d45 1
a45 1
.Nd authentication key generation
d60 1
a60 1
.Fl x
d63 1
a63 1
.Fl X
d81 1
a81 1
generates and manages authentication keys for
d84 1
a84 1
defaults to generating an RSA key for use by protocols 1.3 and 1.5;
d122 2
a123 1
For RSA, there is also a comment field in the key file that is only for
d147 6
d155 9
d178 3
a199 10
.It Fl x
This option will read a private
OpenSSH DSA format file and print a SSH2-compatible public key to stdout.
.It Fl X
This option will read a unencrypted
SSH2-compatible private (or public) key file and
print an OpenSSH compatible private (or public) key to stdout.
.It Fl y
This option will read a private
OpenSSH format file and print an OpenSSH public key to stdout.
d272 8
@


1.35
log
@remove -v again. use -B instead for bubblebabble. make -B consistent
with -l and make -B work with /path/to/known_hosts. ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.34 2001/03/11 15:04:16 jakob Exp $
d92 2
a93 1
.Pa $HOME/.ssh/identity
d95 1
a95 1
.Pa $HOME/.ssh/id_dsa .
d195 1
a195 1
Contains the RSA authentication identity of the user.
d206 1
a206 1
Contains the public key for authentication.
d213 1
a213 1
Contains the DSA authentication identity of the user.
d224 19
a242 1
Contains the public key for authentication.
@


1.34
log
@print both md5, sha1 and bubblebabble fingerprints when using
ssh-keygen -l -v. ok markus@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.33 2001/03/02 18:54:31 deraadt Exp $
d75 3
a77 1
.Op Fl v
d172 2
a179 2
.It Fl v
Print verbose information.
@


1.33
log
@make copyright lines the same format
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.32 2001/02/22 08:03:51 deraadt Exp $
d75 1
d176 2
@


1.32
log
@bye bye -d
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.31 2001/02/22 06:43:55 deraadt Exp $
d16 3
a18 3
.\" Copyright (c) 1999,2000 Markus Friedl. All rights reserved.
.\" Copyright (c) 1999 Aaron Campbell. All rights reserved.
.\" Copyright (c) 1999 Theo de Raadt. All rights reserved.
@


1.31
log
@document -d, and -t defaults to rsa1
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.30 2001/02/08 19:22:38 itojun Exp $
a168 5
.It Fl d
Specifies
.Dq dsa
key type (shortcut for
.Fl t Ar dsa)
@


1.30
log
@drop references to ssl(8).  markus ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.29 2001/01/29 01:58:18 niklas Exp $
d168 6
a173 1
.Dq rsa .
@


1.29
log
@$OpenBSD$
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d238 1
a238 2
.Xr sshd 8 ,
.Xr ssl 8
@


1.28
log
@cleanup AUTHORS sections
@
text
@d1 2
@


1.27
log
@remove -R flag; ok markus@@
@
text
@d224 8
a231 25
Tatu Ylonen <ylo@@cs.hut.fi>
.Pp
OpenSSH
is a derivative of the original (free) ssh 1.2.12 release, but with bugs
removed and newer features re-added.
Rapidly after the 1.2.12 release,
newer versions bore successively more restrictive licenses.
This version of OpenSSH
.Bl -bullet
.It
has all components of a restrictive nature (i.e., patents, see
.Xr ssl 8 )
directly removed from the source code; any licensed or patented components
are chosen from
external libraries.
.It
has been updated to support ssh protocol 1.5.
.It
contains added support for
.Xr kerberos 8
authentication and ticket passing.
.It
supports one-time password authentication with
.Xr skey 1 .
.El
@


1.26
log
@small ssh-keygen manpage cleanup; stevesk@@pobox.com
@
text
@a73 2
.Nm ssh-keygen
.Fl R
a172 4
.It Fl R
If RSA support is functional, immediately exits with code 0.  If RSA
support is not functional, exits with code 1.  This flag will be
removed once the RSA patent expires.
@


1.25
log
@add support for RSA to SSH2.  please test.

there are now 3 types of keys: RSA1 is used by ssh-1 only,
RSA and DSA are used by SSH2.

you can use 'ssh-keygen -t rsa -f ssh2_rsa_file' to generate RSA
keys for SSH2 and use the RSA keys for hostkeys or for user keys.

SSH2 RSA or DSA keys are added to .ssh/authorised_keys2 as before.

IdentityFile2, HostDsaKey and DSAAuthentication are obsolete.
you can use multiple IdentityFile and HostKey for all types of keys.

the option DSAAuthentication is replaced by PubkeyAuthetication.
@
text
@d84 1
a84 1
allows you to create a key for use by protocol 2.0.
d103 1
a103 1
(host keys must have empty passphrase), or it may be a string of
@


1.24
log
@- Section shuffling: comply to the section ordering outlined in mdoc(7).
- Some .Nm trimming.
- .Sh AUTHOR -> .Sh AUTHORS
- Other miscellaneous fixes here and there.
@
text
@d46 1
a46 1
.Op Fl dq
d48 1
d83 2
a84 2
.Fl d
flag will create a DSA key instead for use by protocol 2.0.
d158 11
d188 1
a188 1
OpenSSH DSA format file and print an OpenSSH DSA public key to stdout.
d226 1
a226 1
where you wish to log in using DSA authentication.
@


1.23
log
@-X now reads private ssh.com DSA keys, too.
@
text
@d217 1
a217 1
.Sh AUTHOR
@


1.23.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@a0 2
.\"	$OpenBSD: ssh-keygen.1,v 1.30 2001/02/08 19:22:38 itojun Exp $
.\"
d46 1
a46 1
.Op Fl q
a47 1
.Op Fl t Ar type
d73 2
d82 2
a83 2
.Fl t
option allows you to create a key for use by protocol 2.0.
d102 1
a102 1
(host keys must have an empty passphrase), or it may be a string of
a156 11
.It Fl t Ar type
Specifies the type of the key to create.
The possible values are
.Dq rsa1
for protocol version 1 and
.Dq rsa
or
.Dq dsa
for protocol version 2.
The default is
.Dq rsa .
d163 4
d176 1
a176 1
OpenSSH format file and print an OpenSSH public key to stdout.
d214 1
a214 1
where you wish to log in using public key authentication.
d217 26
a242 9
.Sh AUTHORS
OpenSSH is a derivative of the original and free
ssh 1.2.12 release by Tatu Ylonen.
Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos,
Theo de Raadt and Dug Song
removed many bugs, re-added newer features and
created OpenSSH.
Markus Friedl contributed the support for SSH
protocol versions 1.5 and 2.0.
d247 2
a248 1
.Xr sshd 8
@


1.23.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.23.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.35 2001/03/11 22:33:23 markus Exp $
d16 3
a18 3
.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
a75 3
.Nm ssh-keygen
.Fl B
.Op Fl f Ar input_keyfile
d168 1
a168 3
.Dq rsa1 .
.It Fl B
Show the bubblebabble digest of specified private or public key file.
@


1.23.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.40 2001/04/23 21:57:07 markus Exp $
d45 1
a45 1
.Nd authentication key generation, management and conversion
d60 1
a60 1
.Fl i
d63 1
a63 1
.Fl e
d81 1
a81 1
generates, manages and converts authentication keys for
d84 1
a84 1
defaults to generating a RSA1 key for use by SSH protocol version 1.
d87 1
a87 1
option allows you to create a key for use by SSH protocol version 2.
d92 1
a92 2
.Pa $HOME/.ssh/identity ,
.Pa $HOME/.ssh/id_dsa
d94 1
a94 1
.Pa $HOME/.ssh/id_rsa .
d121 1
a121 2
For RSA1 keys,
there is also a comment field in the key file that is only for
a144 7
.It Fl e
This option will read a private or public OpenSSH key file and
print the key in a
.Sq SECSH Public Key File Format
to stdout.
This option allows exporting keys for use by several commercial
SSH implementations.
a146 9
.It Fl i
This option will read an unencrypted private (or public) key file
in SSH2-compatible format and print an OpenSSH compatible private
(or public) key to stdout.
.Nm
also reads the
.Sq SECSH Public Key File Format .
This option allows importing keys from several commercial
SSH implementations.
a160 3
.It Fl y
This option will read a private
OpenSSH format file and print an OpenSSH public key to stdout.
d180 10
d194 1
a194 1
Contains the protocol version 1 RSA authentication identity of the user.
d205 1
a205 1
Contains the protocol version 1 RSA public key for authentication.
d212 1
a212 1
Contains the protocol version 2 DSA authentication identity of the user.
d223 1
a223 19
Contains the protocol version 2 DSA public key for authentication.
The contents of this file should be added to
.Pa $HOME/.ssh/authorized_keys2
on all machines
where you wish to log in using public key authentication.
There is no need to keep the contents of this file secret.
.It Pa $HOME/.ssh/id_rsa
Contains the protocol version 2 RSA authentication identity of the user.
This file should not be readable by anyone but the user.
It is possible to
specify a passphrase when generating the key; that passphrase will be
used to encrypt the private part of this file using 3DES.
This file is not automatically accessed by
.Nm
but it is offered as the default file for the private key.
.Xr sshd 8
will read this file when a login attempt is made.
.It Pa $HOME/.ssh/id_rsa.pub
Contains the protocol version 2 RSA public key for authentication.
a243 8
.Rs
.%A J. Galbraith
.%A R. Thayer
.%T "SECSH Public Key File Format"
.%N draft-ietf-secsh-publickeyfile-01.txt
.%D March 2001
.%O work in progress material
.Re
@


1.23.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.49 2001/09/05 06:23:07 deraadt Exp $
a78 5
.Nm ssh-keygen
.Fl D Ar reader
.Nm ssh-keygen
.Fl U Ar reader
.Op Fl f Ar input_keyfile
d85 1
a85 1
Specifying the
d87 1
a87 1
option instead creates a key for use by SSH protocol version 2.
d111 1
a111 1
prose has only 1-2 bits of entropy per character, and provides very bad
d119 1
a119 1
lost or forgotten, a new key must be generated and copied to the
d146 1
a146 1
the passphrase if the key has one, and for the new comment.
d154 1
a154 1
.It Fl f Ar filename
a196 3
.It Fl D Ar reader
Download the RSA public key stored in the smartcard in
.Ar reader .
a200 3
.It Fl U Ar reader
Upload an existing RSA private key into the smartcard in
.Ar reader .
d213 1
a213 1
.Xr ssh 1
d220 1
a220 1
where the user wishes to log in using RSA authentication.
d231 1
a231 1
.Xr ssh 1
d236 1
a236 1
.Pa $HOME/.ssh/authorized_keys
d238 1
a238 1
where the user wishes to log in using public key authentication.
d249 1
a249 1
.Xr ssh 1
d254 1
a254 1
.Pa $HOME/.ssh/authorized_keys
d256 1
a256 1
where the user wishes to log in using public key authentication.
@


1.23.2.6
log
@Merge OpenSSH 3.0.1.

This is likely to be the last commit to the 2.8-STABLE branch.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.23.2.5 2001/09/27 00:15:42 miod Exp $
a149 1
This operation is only supported for RSA1 keys.
d171 1
a171 5
Show fingerprint of specified public key file.
Private RSA1 keys are also supported.
For RSA and DSA keys
.Nm
tries to find the matching public key file and prints its fingerprint.
@


1.23.2.7
log
@Merge OpenSSH 3.1.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.53 2002/02/16 14:53:37 stevesk Exp $
d50 1
a50 1
.Fl t Ar type
d89 2
a90 3
can create RSA keys for use by SSH protocol version 1 and RSA or DSA 
keys for use by SSH protocol version 2. The type of key to be generated
is specified with the
d92 1
a92 1
option.
d114 1
a114 4
A passphrase is similar to a password, except it can be a phrase with a
series of words, punctuation, numbers, whitespace, or any string of
characters you want.
Good passphrases are 10-30 characters long, are
d117 1
a117 2
passphrases), and contain a mix of upper and lowercase letters,
numbers, and non-alphanumeric characters.
d201 2
@


1.22
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d171 3
a173 2
This option will read a
SSH2-compatible public key file and print an OpenSSH DSA compatible public key to stdout.
@


1.21
log
@no need for those dynamic libraries anymore
@
text
@a2 2
.\" ssh-keygen.1
.\"
a3 1
.\"
d7 19
a25 1
.\" Created: Sat Apr 22 23:55:14 1995 ylo
d27 10
a36 1
.\" $Id: ssh-keygen.1,v 1.20 2000/07/20 22:23:14 markus Exp $
@


1.20
log
@document input and output files
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.19 2000/07/06 04:06:56 aaron Exp $
a217 4
.Pp
The libraries described in
.Xr ssl 8
are required for proper operation.
@


1.19
log
@Insert more missing .El directives. Our troff really should identify these and
spit out a warning.
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.18 2000/05/08 17:26:04 hugh Exp $
d26 1
a26 1
.Op Fl f Ar keyfile
d34 1
a34 1
.Op Fl f Ar keyfile
d37 1
a37 1
.Op Fl f Ar keyfile
d40 1
a40 1
.Op Fl f Ar keyfile
d48 1
a48 1
.Op Fl f Ar keyfile
@


1.18
log
@One last nit fix. (markus approved)
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.17 2000/05/03 08:37:27 markus Exp $
d191 1
@


1.18.2.1
log
@Pull in the rest of openssh-2.2.0 to 2.7 branch (luvin' cvs...)
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.21 2000/08/25 16:16:15 deraadt Exp $
d26 1
a26 1
.Op Fl f Ar output_keyfile
d34 1
a34 1
.Op Fl f Ar input_keyfile
d37 1
a37 1
.Op Fl f Ar input_keyfile
d40 1
a40 1
.Op Fl f Ar input_keyfile
d48 1
a48 1
.Op Fl f Ar input_keyfile
a190 1
.El
d217 4
@


1.18.2.2
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@d3 2
d6 1
d10 1
a10 19
.\" As far as I am concerned, the code I have written for this software
.\" can be used freely for any purpose.  Any derived versions of this
.\" software must be clearly marked as such, and if the derived work is
.\" incompatible with the protocol description in the RFC file, it must be
.\" called by a name other than "ssh" or "Secure Shell".
.\"
.\"
.\" Copyright (c) 1999,2000 Markus Friedl. All rights reserved.
.\" Copyright (c) 1999 Aaron Campbell. All rights reserved.
.\" Copyright (c) 1999 Theo de Raadt. All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
d12 1
a12 10
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d147 2
a148 3
This option will read a unencrypted
SSH2-compatible private (or public) key file and
print an OpenSSH compatible private (or public) key to stdout.
@


1.18.2.3
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@a0 2
.\"	$OpenBSD: ssh-keygen.1,v 1.30 2001/02/08 19:22:38 itojun Exp $
.\"
d46 1
a46 1
.Op Fl q
a47 1
.Op Fl t Ar type
d73 2
d82 2
a83 2
.Fl t
option allows you to create a key for use by protocol 2.0.
d102 1
a102 1
(host keys must have an empty passphrase), or it may be a string of
a156 11
.It Fl t Ar type
Specifies the type of the key to create.
The possible values are
.Dq rsa1
for protocol version 1 and
.Dq rsa
or
.Dq dsa
for protocol version 2.
The default is
.Dq rsa .
d163 4
d176 1
a176 1
OpenSSH format file and print an OpenSSH public key to stdout.
d214 1
a214 1
where you wish to log in using public key authentication.
d217 26
a242 9
.Sh AUTHORS
OpenSSH is a derivative of the original and free
ssh 1.2.12 release by Tatu Ylonen.
Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos,
Theo de Raadt and Dug Song
removed many bugs, re-added newer features and
created OpenSSH.
Markus Friedl contributed the support for SSH
protocol versions 1.5 and 2.0.
d247 2
a248 1
.Xr sshd 8
@


1.18.2.4
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ssh-keygen.1,v 1.35 2001/03/11 22:33:23 markus Exp $
d16 3
a18 3
.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
a75 3
.Nm ssh-keygen
.Fl B
.Op Fl f Ar input_keyfile
d168 1
a168 3
.Dq rsa1 .
.It Fl B
Show the bubblebabble digest of specified private or public key file.
@


1.17
log
@document -y, update -X,-x
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.16 2000/05/03 02:52:49 deraadt Exp $
d145 1
a145 1
OpenSSH DSA format file and prints to stdout a SSH2-compatible public key.
d148 1
a148 1
SSH2-compatible public key file and print to stdout an OpenSSH DSA compatible public key.
d151 1
a151 1
OpenSSH DSA format file and prints to stdout an OpenSSH DSA public key.
@


1.16
log
@document -X and -x
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.15 2000/05/02 23:33:46 deraadt Exp $
d39 3
d144 2
a145 2
This option will read a
OpenSSH DSA format file and prints to stdout a SSH2-compatible key.
d148 4
a151 1
SSH2-compatible key file and print to stdout an OpenSSH DSA compatible key.
@


1.15
log
@document DSA use of ssh-keygen
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.14 2000/04/26 21:55:04 deraadt Exp $
d33 6
d140 6
@


1.14
log
@add -R flag: exit code indicates if RSA is alive
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.13 2000/04/12 21:47:51 aaron Exp $
d22 1
a22 1
.Op Fl q
d46 6
d53 1
a53 1
with RSA authentication runs this once to create the authentication
d55 6
a60 2
.Pa $HOME/.ssh/identity .
Additionally, the system administrator may use this to generate host keys.
d84 1
a84 1
There is also a comment field in the key file that is only for
d93 3
d146 2
d154 18
@


1.13
log
@Trailing whitespace begone!
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.12 2000/03/23 21:10:10 aaron Exp $
d40 2
d117 4
@


1.12
log
@Fix some formatting problems I missed before.
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.11 2000/01/22 02:17:50 aaron Exp $
d40 1
a40 1
.Sh DESCRIPTION 
d42 1
a42 1
generates and manages authentication keys for 
d153 1
a153 1
contains added support for 
@


1.11
log
@ie. -> i.e.,
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.10 1999/12/25 13:35:55 markus Exp $
d51 2
a52 2
to store the private key.  The public key is stored in a file with the
same name but
d54 3
a56 2
appended.  The program also asks for a
passphrase.  The passphrase may be empty to indicate no passphrase
d58 2
a59 1
arbitrary length.  Good passphrases are 10-30 characters long and are
d62 2
a63 1
passphrases).  The passphrase can be changed later by using the
d67 2
a68 1
There is no way to recover a lost passphrase.  If the passphrase is
d73 3
a75 3
convenience to the user to help identify the key.  The comment can
tell what the key is for, or whatever is useful.  The comment is
initialized to
d84 5
a88 4
Specifies the number of bits in the key to create.  Minimum is 512
bits.  Generally 1024 bits is considered sufficient, and key sizes
above that no longer improve security but make things slower.  The
default is 1024 bits.
d99 2
a100 1
creating a new private key.  The program will prompt for the file
d119 3
a121 2
Contains the RSA authentication identity of the user.  This file
should not be readable by anyone but the user.  It is possible to
d123 2
a124 2
used to encrypt the private part of this file using 3DES.  This file
is not automatically accessed by
d128 2
a129 2
Contains the public key for authentication.  The contents of this file
should be added to
d132 2
a133 2
where you wish to log in using RSA authentication.  There is no
need to keep the contents of this file secret.
d139 4
a142 3
removed and newer features re-added.   Rapidly after the 1.2.12 release,
newer versions bore successively more restrictive licenses.  This version
of OpenSSH
@


1.10
log
@remove ref to .ssh/random_seed, mention .ssh/environment in .Sh FILES, too
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.9 1999/11/16 22:49:28 markus Exp $
d137 1
a137 1
has all components of a restrictive nature (ie. patents, see
@


1.9
log
@rsa key fingerprints, idea from Bjoern Groenvall <bg@@sics.se>
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.8 1999/11/15 07:18:46 ericj Exp $
a111 4
.It Pa $HOME/.ssh/random_seed
Used for seeding the random number generator.  This file should not be
readable by anyone but the user.  This file is created the first time
the program is run, and is updated every time.
@


1.8
log
@fix .Xr
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.7 1999/10/17 20:35:46 aaron Exp $
d26 1
d31 1
d36 4
d88 4
@


1.7
log
@Remove some redundant .Pp.
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.6 1999/10/17 00:31:06 deraadt Exp $
d153 1
a153 1
.Xr ssh-agent 1,
@


1.6
log
@update trailer, and copy to other pages
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.5 1999/10/07 18:58:26 aaron Exp $
a71 1
.Pp
@


1.5
log
@Document -q.
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.4 1999/10/02 13:10:26 deraadt Exp $
d125 24
a148 8
This version of
.Nm
is a derivative of the original 1.2.12 release, but with bugs removed and
newer features re-added.   Rapidly after the 1.2.12 release, newer versions
bore successively more restrictive licenses.  In this version, all components
of a restrictive nature (ie. patents) have been directly removed from the
source code; any licensed or patented components are chosen from external
libraries.  The libraries described in
@


1.4
log
@detail how we manage to not include RSA, and point people at ssl(8)
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.3 1999/10/01 18:17:49 deraadt Exp $
d22 1
d88 6
@


1.3
log
@s/IDEA/3DES/
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.2 1999/09/26 22:30:06 deraadt Exp $
d117 11
d132 2
a133 1
.Xr sshd 8
@


1.2
log
@first cut of mandoc man pages from aaron
@
text
@d12 1
a12 1
.\" $Id: ssh-keygen.1,v 1.2 1999/05/04 11:59:16 bg Exp $
d104 1
a104 1
used to encrypt the private part of this file using IDEA.  This file
@


1.1
log
@i bet a lot of people didn't know what ssh 1.2.16 had a nice license.
well, except for the patent issues.  someone in sweden (forget their
name at the moment) cleaned out most of the patented code, and now
this code removes rsa code.  when this is done, it will link against
libssl, but the work isn't completely done yet.  then we need to bring
this up to modern days, featurewise.
@
text
@d14 21
a34 37
.TH SSH-KEYGEN 1 "November 8, 1995" "SSH" "SSH"

.SH NAME
ssh-keygen \- authentication key generation

.SH SYNOPSIS
.LP
.B ssh-keygen
[\c
.BI \-b \ bits\c
]
[\c
.BI \-N \ new_passphrase\c
]
[\c
.BI \-C \ comment\c
]

.B "ssh-keygen \-p
[\c
.BI \-P \ old_passphrase\c
]
[\c
.BI \-N \ new_passphrase\c
]

.B "ssh-keygen \-c
[\c
.BI \-P \ passphrase\c
]
[\c
.BI \-C \ comment\c
]

.SH DESCRIPTION 
.LP
.B Ssh-keygen
d36 2
a37 3
.BR ssh (1).
Normally each user wishing to use
.B ssh
d40 1
a40 1
.IR \&$HOME/\s+2.\s0ssh/identity ".
d42 1
a42 1
.LP
d45 3
a47 1
same name but ".pub" appended.  The program also asks for a
d54 1
a54 1
.B \-p
d56 1
a56 1
.LP
d60 1
a60 1
.LP
d64 4
a67 3
initialized to user@@host when the key is created, but can be changed
using the
.B \-c
d69 5
a73 4

.SH OPTIONS
.TP 0.6i
.BI \-b \ bits
d78 1
a78 2
.TP
.B \-c
d82 1
a82 2
.TP
.B \-p
d87 1
a87 2
.TP
.B \-C
d89 1
a89 2
.TP
.B \-N
d91 1
a91 2
.TP
.B \-P
d93 4
a96 4

.SH FILES
.TP 0.6i
.I \&$HOME/\s+2.\s0ssh/random_seed
d100 1
a100 2
.TP
.I \&$HOME/\s+2.\s0ssh/identity
d106 1
a106 1
.BR ssh-keygen ",
d108 1
a108 2
.TP
.I \&$HOME/\s+2.\s0ssh/identity.pub
d110 3
a112 1
should be added to \f4$HOME/\s+2.\s0ssh/authorized_keys\f1 on all machines
d115 1
a115 3

.SH AUTHOR
.LP
d117 5
a121 7

.SH SEE ALSO
.LP
.BR ssh (1),
.BR sshd (8),
.BR ssh-agent (1),
.BR ssh-add (1)
@

