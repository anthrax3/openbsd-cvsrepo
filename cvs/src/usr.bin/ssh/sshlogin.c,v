head	1.32;
access;
symbols
	OPENBSD_6_2:1.32.0.4
	OPENBSD_6_2_BASE:1.32
	OPENBSD_6_1:1.32.0.8
	OPENBSD_6_1_BASE:1.32
	OPENBSD_6_0:1.32.0.6
	OPENBSD_6_0_BASE:1.32
	OPENBSD_5_9:1.32.0.2
	OPENBSD_5_9_BASE:1.32
	OPENBSD_5_8:1.31.0.4
	OPENBSD_5_8_BASE:1.31
	OPENBSD_5_7:1.31.0.2
	OPENBSD_5_7_BASE:1.31
	OPENBSD_5_6:1.29.0.4
	OPENBSD_5_6_BASE:1.29
	OPENBSD_5_5:1.28.0.4
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.27.0.12
	OPENBSD_5_4_BASE:1.27
	OPENBSD_5_3:1.27.0.10
	OPENBSD_5_3_BASE:1.27
	OPENBSD_5_2:1.27.0.8
	OPENBSD_5_2_BASE:1.27
	OPENBSD_5_1_BASE:1.27
	OPENBSD_5_1:1.27.0.6
	OPENBSD_5_0:1.27.0.4
	OPENBSD_5_0_BASE:1.27
	OPENBSD_4_9:1.27.0.2
	OPENBSD_4_9_BASE:1.27
	OPENBSD_4_8:1.26.0.12
	OPENBSD_4_8_BASE:1.26
	OPENBSD_4_7:1.26.0.8
	OPENBSD_4_7_BASE:1.26
	OPENBSD_4_6:1.26.0.10
	OPENBSD_4_6_BASE:1.26
	OPENBSD_4_5:1.26.0.6
	OPENBSD_4_5_BASE:1.26
	OPENBSD_4_4:1.26.0.4
	OPENBSD_4_4_BASE:1.26
	OPENBSD_4_3:1.26.0.2
	OPENBSD_4_3_BASE:1.26
	OPENBSD_4_2:1.25.0.6
	OPENBSD_4_2_BASE:1.25
	OPENBSD_4_1:1.25.0.2
	OPENBSD_4_1_BASE:1.25
	OPENBSD_4_0:1.25.0.4
	OPENBSD_4_0_BASE:1.25
	OPENBSD_3_9:1.13.0.8
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.6
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.4
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_8:1.1.0.4
	OPENBSD_2_7:1.1.0.2;
locks; strict;
comment	@ * @;


1.32
date	2015.12.26.20.51.35;	author guenther;	state Exp;
branches;
next	1.31;
commitid	ixyMcIFPirO2EXOW;

1.31
date	2015.01.20.23.14.00;	author deraadt;	state Exp;
branches;
next	1.30;
commitid	cBx23BaCk6gYBpRj;

1.30
date	2015.01.16.06.40.12;	author deraadt;	state Exp;
branches;
next	1.29;
commitid	Uu5nFG3wCl0LACBb;

1.29
date	2014.07.15.15.54.14;	author millert;	state Exp;
branches;
next	1.28;
commitid	z7plx8Gkj6l2sxem;

1.28
date	2014.01.31.16.39.19;	author tedu;	state Exp;
branches;
next	1.27;

1.27
date	2011.01.11.06.06.09;	author djm;	state Exp;
branches;
next	1.26;

1.26
date	2007.09.11.15.47.17;	author gilles;	state Exp;
branches;
next	1.25;

1.25
date	2006.08.03.03.34.42;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2006.08.01.23.22.48;	author stevesk;	state Exp;
branches;
next	1.23;

1.23
date	2006.07.26.02.35.17;	author stevesk;	state Exp;
branches;
next	1.22;

1.22
date	2006.07.22.20.48.23;	author stevesk;	state Exp;
branches;
next	1.21;

1.21
date	2006.07.22.19.08.54;	author stevesk;	state Exp;
branches;
next	1.20;

1.20
date	2006.07.17.01.31.10;	author stevesk;	state Exp;
branches;
next	1.19;

1.19
date	2006.07.11.20.07.25;	author stevesk;	state Exp;
branches;
next	1.18;

1.18
date	2006.07.09.15.15.11;	author stevesk;	state Exp;
branches;
next	1.17;

1.17
date	2006.03.25.18.36.15;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2006.03.25.13.17.03;	author djm;	state Exp;
branches;
next	1.15;

1.15
date	2006.03.20.18.26.55;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2006.03.19.18.51.19;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2004.08.12.09.18.24;	author djm;	state Exp;
branches
	1.13.6.1
	1.13.8.1;
next	1.12;

1.12
date	2004.08.11.12.01.16;	author djm;	state Exp;
branches;
next	1.11;

1.11
date	2004.08.11.11.59.22;	author djm;	state Exp;
branches;
next	1.10;

1.10
date	2004.07.17.05.31.41;	author dtucker;	state Exp;
branches;
next	1.9;

1.9
date	2004.07.03.05.11.33;	author dtucker;	state Exp;
branches;
next	1.8;

1.8
date	2004.06.21.17.36.31;	author avsm;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.12.07.57.38;	author markus;	state Exp;
branches
	1.7.2.1
	1.7.4.1;
next	1.6;

1.6
date	2003.04.08.20.21.29;	author itojun;	state Exp;
branches;
next	1.5;

1.5
date	2002.08.29.15.57.25;	author stevesk;	state Exp;
branches
	1.5.2.1
	1.5.4.1;
next	1.4;

1.4
date	2002.06.23.03.30.17;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2001.12.19.07.18.56;	author deraadt;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2001.03.24.16.43.27;	author stevesk;	state Exp;
branches
	1.2.2.1
	1.2.4.1;
next	1.1;

1.1
date	2001.03.04.01.46.30;	author djm;	state Exp;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2001.03.21.18.53.17;	author jason;	state Exp;
branches;
next	;

1.1.4.1
date	2001.03.21.19.46.31;	author jason;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2001.05.07.21.09.38;	author jason;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2001.09.27.00.15.43;	author miod;	state Exp;
branches;
next	1.1.4.4;

1.1.4.4
date	2002.03.08.17.04.43;	author brad;	state Exp;
branches;
next	;

1.2.2.1
date	2002.03.09.00.20.45;	author miod;	state Exp;
branches;
next	;

1.2.4.1
date	2002.03.07.17.37.48;	author jason;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	2002.06.26.18.22.37;	author miod;	state Exp;
branches;
next	1.2.4.3;

1.2.4.3
date	2002.10.11.14.53.07;	author miod;	state Exp;
branches;
next	;

1.3.2.1
date	2002.06.26.15.30.39;	author jason;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2002.10.11.14.51.53;	author miod;	state Exp;
branches;
next	;

1.5.2.1
date	2003.09.16.21.20.29;	author brad;	state Exp;
branches;
next	;

1.5.4.1
date	2003.09.16.20.50.44;	author brad;	state Exp;
branches;
next	1.5.4.2;

1.5.4.2
date	2004.03.04.18.18.17;	author brad;	state Exp;
branches;
next	;

1.7.2.1
date	2004.08.19.22.37.33;	author brad;	state Exp;
branches;
next	;

1.7.4.1
date	2004.08.19.04.13.28;	author brad;	state Exp;
branches;
next	;

1.13.6.1
date	2006.10.06.03.19.33;	author brad;	state Exp;
branches;
next	;

1.13.8.1
date	2006.09.30.04.06.51;	author brad;	state Exp;
branches;
next	;


desc
@@


1.32
log
@Use pread/pwrite instead separate lseek+read/write for lastlog.
Cast to off_t before multiplication to avoid truncation on ILP32

ok kettenis@@ mmcc@@
@
text
@/* $OpenBSD: sshlogin.c,v 1.31 2015/01/20 23:14:00 deraadt Exp $ */
/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 * This file performs some of the things login(1) normally does.  We cannot
 * easily use something like login -p -h host -f user, because there are
 * several different logins around, and it is hard to determined what kind of
 * login the current system has.  Also, we want to be able to execute commands
 * on a tty.
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 *
 * Copyright (c) 1999 Theo de Raadt.  All rights reserved.
 * Copyright (c) 1999 Markus Friedl.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/socket.h>

#include <errno.h>
#include <fcntl.h>
#include <stdio.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#include <util.h>
#include <utmp.h>
#include <stdarg.h>
#include <limits.h>

#include "sshlogin.h"
#include "log.h"
#include "buffer.h"
#include "misc.h"
#include "servconf.h"

extern Buffer loginmsg;
extern ServerOptions options;

/*
 * Returns the time when the user last logged in.  Returns 0 if the
 * information is not available.  This must be called before record_login.
 * The host the user logged in from will be returned in buf.
 */
time_t
get_last_login_time(uid_t uid, const char *logname,
    char *buf, size_t bufsize)
{
	struct lastlog ll;
	char *lastlog;
	int fd;
	off_t pos, r;

	lastlog = _PATH_LASTLOG;
	buf[0] = '\0';

	fd = open(lastlog, O_RDONLY);
	if (fd < 0)
		return 0;

	pos = (off_t)uid * sizeof(ll);
	r = lseek(fd, pos, SEEK_SET);
	if (r == -1) {
		error("%s: lseek: %s", __func__, strerror(errno));
		close(fd);
		return (0);
	}
	if (r != pos) {
		debug("%s: truncated lastlog", __func__);
		close(fd);
		return (0);
	}
	if (read(fd, &ll, sizeof(ll)) != sizeof(ll)) {
		close(fd);
		return 0;
	}
	close(fd);
	if (bufsize > sizeof(ll.ll_host) + 1)
		bufsize = sizeof(ll.ll_host) + 1;
	strncpy(buf, ll.ll_host, bufsize - 1);
	buf[bufsize - 1] = '\0';
	return (time_t)ll.ll_time;
}

/*
 * Generate and store last login message.  This must be done before
 * login_login() is called and lastlog is updated.
 */
static void
store_lastlog_message(const char *user, uid_t uid)
{
	char *time_string, hostname[HOST_NAME_MAX+1] = "", buf[512];
	time_t last_login_time;

	if (!options.print_lastlog)
		return;

	last_login_time = get_last_login_time(uid, user, hostname,
	    sizeof(hostname));

	if (last_login_time != 0) {
		time_string = ctime(&last_login_time);
		time_string[strcspn(time_string, "\n")] = '\0';
		if (strcmp(hostname, "") == 0)
			snprintf(buf, sizeof(buf), "Last login: %s\r\n",
			    time_string);
		else
			snprintf(buf, sizeof(buf), "Last login: %s from %s\r\n",
			    time_string, hostname);
		buffer_append(&loginmsg, buf, strlen(buf));
	}
}

/*
 * Records that the user has logged in.  I wish these parts of operating
 * systems were more standardized.
 */
void
record_login(pid_t pid, const char *tty, const char *user, uid_t uid,
    const char *host, struct sockaddr *addr, socklen_t addrlen)
{
	int fd;
	struct lastlog ll;
	char *lastlog;
	struct utmp u;

	/* save previous login details before writing new */
	store_lastlog_message(user, uid);

	/* Construct an utmp/wtmp entry. */
	memset(&u, 0, sizeof(u));
	strncpy(u.ut_line, tty + 5, sizeof(u.ut_line));
	u.ut_time = time(NULL);
	strncpy(u.ut_name, user, sizeof(u.ut_name));
	strncpy(u.ut_host, host, sizeof(u.ut_host));

	login(&u);
	lastlog = _PATH_LASTLOG;

	/* Update lastlog unless actually recording a logout. */
	if (strcmp(user, "") != 0) {
		/*
		 * It is safer to memset the lastlog structure first because
		 * some systems might have some extra fields in it (e.g. SGI)
		 */
		memset(&ll, 0, sizeof(ll));

		/* Update lastlog. */
		ll.ll_time = time(NULL);
		strncpy(ll.ll_line, tty + 5, sizeof(ll.ll_line));
		strncpy(ll.ll_host, host, sizeof(ll.ll_host));
		fd = open(lastlog, O_RDWR);
		if (fd >= 0) {
			lseek(fd, (off_t)uid * sizeof(ll), SEEK_SET);
			if (write(fd, &ll, sizeof(ll)) != sizeof(ll))
				logit("Could not write %.100s: %.100s", lastlog, strerror(errno));
			close(fd);
		}
	}
}

/* Records that the user has logged out. */
void
record_logout(pid_t pid, const char *tty)
{
	const char *line = tty + 5;	/* /dev/ttyq8 -> ttyq8 */
	if (logout(line))
		logwtmp(line, "", "");
}
@


1.31
log
@Reduce use of <sys/param.h> and transition to <limits.h> throughout.
ok djm markus
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.30 2015/01/16 06:40:12 deraadt Exp $ */
d86 1
a86 1
	pos = (long) uid * sizeof(ll);
d179 1
a179 1
			lseek(fd, (off_t) ((long) uid * sizeof(ll)), SEEK_SET);
@


1.30
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.29 2014/07/15 15:54:14 millert Exp $ */
a42 1
#include <sys/param.h>	/* MAXHOSTNAMELEN */
d54 1
d117 1
a117 1
	char *time_string, hostname[MAXHOSTNAMELEN] = "", buf[512];
@


1.29
log
@Add support for Unix domain socket forwarding.  A remote TCP port
may be forwarded to a local Unix domain socket and vice versa or
both ends may be a Unix domain socket.  This is a reimplementation
of the streamlocal patches by William Ahern from:
    http://www.25thandclement.com/~william/projects/streamlocal.html
OK djm@@ markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.28 2014/01/31 16:39:19 tedu Exp $ */
d43 1
a43 1
#include <sys/param.h>
@


1.28
log
@replace most bzero with explicit_bzero, except a few that cna be memset
ok djm dtucker
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.27 2011/01/11 06:06:09 djm Exp $ */
d59 1
@


1.27
log
@fd leak on error paths; from zinovik@@
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.26 2007/09/11 15:47:17 gilles Exp $ */
d167 1
a167 1
		 * It is safer to bzero the lastlog structure first because
@


1.26
log
@use strcspn to properly overwrite '\n' in fgets returned buffer

ok pyr@@, ray@@, millert@@, moritz@@, chl@@
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.25 2006/08/03 03:34:42 deraadt Exp $ */
d89 1
d94 1
@


1.25
log
@almost entirely get rid of the culture of ".h files that include .h files"
ok djm, sort of ok stevesk
makes the pain stop in one easy step
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.24 2006/08/01 23:22:48 stevesk Exp $ */
d125 1
a125 2
		if (strchr(time_string, '\n'))
		    *strchr(time_string, '\n') = '\0';
@


1.24
log
@move #include <stdio.h> out of includes.h
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.23 2006/07/26 02:35:17 stevesk Exp $ */
a41 2
#include "includes.h"

d44 1
d54 1
@


1.23
log
@move #include <sys/param.h> out of includes.h
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.22 2006/07/22 20:48:23 stevesk Exp $ */
d49 1
@


1.22
log
@move #include <string.h> out of includes.h
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.21 2006/07/22 19:08:54 stevesk Exp $ */
d45 1
@


1.21
log
@move #include <time.h> out of includes.h
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.20 2006/07/17 01:31:10 stevesk Exp $ */
d48 1
@


1.20
log
@move #include <unistd.h> out of includes.h
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.19 2006/07/11 20:07:25 stevesk Exp $ */
d48 1
@


1.19
log
@move #include <errno.h> out of includes.h; ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.18 2006/07/09 15:15:11 stevesk Exp $ */
d44 2
d48 1
@


1.18
log
@move #include <fcntl.h> out of includes.h
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.17 2006/03/25 18:36:15 deraadt Exp $ */
d44 1
@


1.17
log
@nicer size_t and time_t types
@
text
@d1 1
a1 1
/* $OpenBSD: sshlogin.c,v 1.16 2006/03/25 13:17:03 djm Exp $ */
d44 1
d47 1
@


1.16
log
@Put $OpenBSD$ tags back (as comments) to replace the RCSID()s that
Theo nuked - our scripts to sync -portable need them in the files
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d59 1
a59 1
u_long
d61 1
a61 1
    char *buf, u_int bufsize)
d94 1
a94 1
	return ll.ll_time;
@


1.15
log
@annoying spacing fixes getting in the way of real diffs
@
text
@d1 1
@


1.14
log
@RCSID() can die
@
text
@d132 1
a132 1
    const char *host, struct sockaddr * addr, socklen_t addrlen)
@


1.13
log
@typo in error message, spotted by moritz AT jodeit.org
@
text
@a41 1
RCSID("$OpenBSD: sshlogin.c,v 1.12 2004/08/11 12:01:16 djm Exp $");
@


1.13.6.1
log
@upgrade to OpenSSH 4.4
@
text
@a0 1
/* $OpenBSD: sshlogin.c,v 1.25 2006/08/03 03:34:42 deraadt Exp $ */
d41 3
a43 10
#include <sys/types.h>
#include <sys/param.h>
#include <sys/socket.h>

#include <errno.h>
#include <fcntl.h>
#include <stdio.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
a45 2
#include <stdarg.h>

d59 1
a59 1
time_t
d61 1
a61 1
    char *buf, size_t bufsize)
d94 1
a94 1
	return (time_t)ll.ll_time;
d133 1
a133 1
    const char *host, struct sockaddr *addr, socklen_t addrlen)
@


1.13.8.1
log
@upgrade to OpenSSH 4.4
@
text
@a0 1
/* $OpenBSD: sshlogin.c,v 1.25 2006/08/03 03:34:42 deraadt Exp $ */
d41 3
a43 10
#include <sys/types.h>
#include <sys/param.h>
#include <sys/socket.h>

#include <errno.h>
#include <fcntl.h>
#include <stdio.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
a45 2
#include <stdarg.h>

d59 1
a59 1
time_t
d61 1
a61 1
    char *buf, size_t bufsize)
d94 1
a94 1
	return (time_t)ll.ll_time;
d133 1
a133 1
    const char *host, struct sockaddr *addr, socklen_t addrlen)
@


1.12
log
@make store_lastlog_message() static to appease -Wall; ok markus
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.11 2004/08/11 11:59:22 djm Exp $");
d78 1
a78 1
		error("%s: llseek: %s", __func__, strerror(errno));
@


1.11
log
@check that lseek went were we told it to; ok markus@@
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.10 2004/07/17 05:31:41 dtucker Exp $");
d101 1
a101 1
void
@


1.10
log
@Move "Last logged in at.." message generation to the monitor, right
before recording the new login.  Fixes missing lastlog message when
/var/log/lastlog is not world-readable and incorrect datestamp when
multiple sessions are used (bz #463);  much assistance & ok markus@@
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.9 2004/07/03 05:11:33 dtucker Exp $");
d66 1
d74 11
a84 1
	lseek(fd, (off_t) ((long) uid * sizeof(ll)), SEEK_SET);
@


1.9
log
@Use '\0' not 0 for string; ok djm@@, deraadt@@
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.8 2004/06/21 17:36:31 avsm Exp $");
d48 5
d87 30
d128 3
@


1.8
log
@make ssh -Wshadow clean, no functional changes
markus@@ ok
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.7 2003/06/12 07:57:38 markus Exp $");
d77 1
a77 1
	buf[bufsize - 1] = 0;
@


1.7
log
@typos; dtucker at zip.com.au
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.6 2003/04/08 20:21:29 itojun Exp $");
d86 1
a86 1
record_login(pid_t pid, const char *ttyname, const char *user, uid_t uid,
d96 1
a96 1
	strncpy(u.ut_line, ttyname + 5, sizeof(u.ut_line));
d114 1
a114 1
		strncpy(ll.ll_line, ttyname + 5, sizeof(ll.ll_line));
d128 1
a128 1
record_logout(pid_t pid, const char *ttyname)
d130 1
a130 1
	const char *line = ttyname + 5;	/* /dev/ttyq8 -> ttyq8 */
@


1.7.2.1
log
@upgrade to OpenSSH 3.9
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.13 2004/08/12 09:18:24 djm Exp $");
a47 5
#include "buffer.h"
#include "servconf.h"

extern Buffer loginmsg;
extern ServerOptions options;
a60 1
	off_t pos, r;
d68 1
a68 11

	pos = (long) uid * sizeof(ll);
	r = lseek(fd, pos, SEEK_SET);
	if (r == -1) {
		error("%s: lseek: %s", __func__, strerror(errno));
		return (0);
	}
	if (r != pos) {
		debug("%s: truncated lastlog", __func__);
		return (0);
	}
d77 1
a77 1
	buf[bufsize - 1] = '\0';
a81 30
 * Generate and store last login message.  This must be done before
 * login_login() is called and lastlog is updated.
 */
static void
store_lastlog_message(const char *user, uid_t uid)
{
	char *time_string, hostname[MAXHOSTNAMELEN] = "", buf[512];
	time_t last_login_time;

	if (!options.print_lastlog)
		return;

	last_login_time = get_last_login_time(uid, user, hostname,
	    sizeof(hostname));

	if (last_login_time != 0) {
		time_string = ctime(&last_login_time);
		if (strchr(time_string, '\n'))
		    *strchr(time_string, '\n') = '\0';
		if (strcmp(hostname, "") == 0)
			snprintf(buf, sizeof(buf), "Last login: %s\r\n",
			    time_string);
		else
			snprintf(buf, sizeof(buf), "Last login: %s from %s\r\n",
			    time_string, hostname);
		buffer_append(&loginmsg, buf, strlen(buf));
	}
}

/*
d86 1
a86 1
record_login(pid_t pid, const char *tty, const char *user, uid_t uid,
a93 3
	/* save previous login details before writing new */
	store_lastlog_message(user, uid);

d96 1
a96 1
	strncpy(u.ut_line, tty + 5, sizeof(u.ut_line));
d114 1
a114 1
		strncpy(ll.ll_line, tty + 5, sizeof(ll.ll_line));
d128 1
a128 1
record_logout(pid_t pid, const char *tty)
d130 1
a130 1
	const char *line = tty + 5;	/* /dev/ttyq8 -> ttyq8 */
@


1.7.4.1
log
@upgrade to OpenSSH 3.9
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.13 2004/08/12 09:18:24 djm Exp $");
a47 5
#include "buffer.h"
#include "servconf.h"

extern Buffer loginmsg;
extern ServerOptions options;
a60 1
	off_t pos, r;
d68 1
a68 11

	pos = (long) uid * sizeof(ll);
	r = lseek(fd, pos, SEEK_SET);
	if (r == -1) {
		error("%s: lseek: %s", __func__, strerror(errno));
		return (0);
	}
	if (r != pos) {
		debug("%s: truncated lastlog", __func__);
		return (0);
	}
d77 1
a77 1
	buf[bufsize - 1] = '\0';
a81 30
 * Generate and store last login message.  This must be done before
 * login_login() is called and lastlog is updated.
 */
static void
store_lastlog_message(const char *user, uid_t uid)
{
	char *time_string, hostname[MAXHOSTNAMELEN] = "", buf[512];
	time_t last_login_time;

	if (!options.print_lastlog)
		return;

	last_login_time = get_last_login_time(uid, user, hostname,
	    sizeof(hostname));

	if (last_login_time != 0) {
		time_string = ctime(&last_login_time);
		if (strchr(time_string, '\n'))
		    *strchr(time_string, '\n') = '\0';
		if (strcmp(hostname, "") == 0)
			snprintf(buf, sizeof(buf), "Last login: %s\r\n",
			    time_string);
		else
			snprintf(buf, sizeof(buf), "Last login: %s from %s\r\n",
			    time_string, hostname);
		buffer_append(&loginmsg, buf, strlen(buf));
	}
}

/*
d86 1
a86 1
record_login(pid_t pid, const char *tty, const char *user, uid_t uid,
a93 3
	/* save previous login details before writing new */
	store_lastlog_message(user, uid);

d96 1
a96 1
	strncpy(u.ut_line, tty + 5, sizeof(u.ut_line));
d114 1
a114 1
		strncpy(ll.ll_line, tty + 5, sizeof(ll.ll_line));
d128 1
a128 1
record_logout(pid_t pid, const char *tty)
d130 1
a130 1
	const char *line = tty + 5;	/* /dev/ttyq8 -> ttyq8 */
@


1.6
log
@rename log() into logit() to avoid name conflict.  markus ok, from netbsd
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.5 2002/08/29 15:57:25 stevesk Exp $");
d82 2
a83 2
 * Records that the user has logged in.  I these parts of operating systems
 * were more standardized.
@


1.5
log
@pass addrlen with sockaddr *; from Hajimu UMEMOTO <ume@@FreeBSD.org>
NOTE: there are also p-specific parts to this patch. ok markus@@
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.4 2002/06/23 03:30:17 deraadt Exp $");
d120 1
a120 1
				log("Could not write %.100s: %.100s", lastlog, strerror(errno));
@


1.5.2.1
log
@upgrade to OpenSSH 3.7
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.7 2003/06/12 07:57:38 markus Exp $");
d82 2
a83 2
 * Records that the user has logged in.  I wish these parts of operating
 * systems were more standardized.
d120 1
a120 1
				logit("Could not write %.100s: %.100s", lastlog, strerror(errno));
@


1.5.4.1
log
@upgrade to OpenSSH 3.7
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.7 2003/06/12 07:57:38 markus Exp $");
d82 2
a83 2
 * Records that the user has logged in.  I wish these parts of operating
 * systems were more standardized.
d120 1
a120 1
				logit("Could not write %.100s: %.100s", lastlog, strerror(errno));
@


1.5.4.2
log
@upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8
@
text
@@


1.4
log
@various KNF and %d for unsigned
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.3 2001/12/19 07:18:56 deraadt Exp $");
d87 1
a87 1
    const char *host, struct sockaddr * addr)
@


1.3
log
@basic KNF done while i was looking for something else
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.2 2001/03/24 16:43:27 stevesk Exp $");
a53 1

d56 1
a56 1
		    char *buf, u_int bufsize)
a84 1

d87 1
a87 1
	const char *host, struct sockaddr * addr)
a126 1

@


1.3.2.1
log
@Pull in OpenSSH-3.4
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.4 2002/06/23 03:30:17 deraadt Exp $");
d54 1
d57 1
a57 1
    char *buf, u_int bufsize)
d86 1
d89 1
a89 1
    const char *host, struct sockaddr * addr)
d129 1
@


1.3.2.2
log
@Update to OpenSSH 3.5
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.5 2002/08/29 15:57:25 stevesk Exp $");
d87 1
a87 1
    const char *host, struct sockaddr * addr, socklen_t addrlen)
@


1.2
log
@unused; remove dup comments.  ok markus@@
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.1 2001/03/04 01:46:30 djm Exp $");
d89 1
a89 1
	     const char *host, struct sockaddr * addr)
@


1.2.2.1
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.3 2001/12/19 07:18:56 deraadt Exp $");
d89 1
a89 1
	const char *host, struct sockaddr * addr)
@


1.2.4.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.3 2001/12/19 07:18:56 deraadt Exp $");
d89 1
a89 1
	const char *host, struct sockaddr * addr)
@


1.2.4.2
log
@There was an update to OpenSSH 3.4, and people rejoiced.
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.2.4.1 2002/03/07 17:37:48 jason Exp $");
d54 1
d57 1
a57 1
    char *buf, u_int bufsize)
d86 1
d89 1
a89 1
    const char *host, struct sockaddr * addr)
d129 1
@


1.2.4.3
log
@Update to OpenSSH 3.5
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.5 2002/08/29 15:57:25 stevesk Exp $");
d87 1
a87 1
    const char *host, struct sockaddr * addr, socklen_t addrlen)
@


1.1
log
@Rename pty.[ch] -> sshpty.[ch] and login.[ch] to sshlogin.[ch] to avoid
header conflicts in portable; ok markus@@
@
text
@d42 1
a42 1
RCSID("$OpenBSD: login.c,v 1.17 2001/01/21 19:05:51 markus Exp $");
a54 5
/*
 * Returns the time when the user last logged in (or 0 if no previous login
 * is found).  The name of the host used last time is returned in buf.
 */

a94 1
	const char *utmp, *wtmp;
a101 4

	/* Figure out the file names. */
	utmp = _PATH_UTMP;
	wtmp = _PATH_WTMP;
@


1.1.4.1
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.1 2001/03/04 01:46:30 djm Exp $");
@


1.1.4.2
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.2 2001/03/24 16:43:27 stevesk Exp $");
d55 5
d100 1
d108 4
@


1.1.4.3
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@@


1.1.4.4
log
@Merge OpenSSH 3.1.
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.3 2001/12/19 07:18:56 deraadt Exp $");
d89 1
a89 1
	const char *host, struct sockaddr * addr)
@


1.1.2.1
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@d42 1
a42 1
RCSID("$OpenBSD: sshlogin.c,v 1.1 2001/03/04 01:46:30 djm Exp $");
@

