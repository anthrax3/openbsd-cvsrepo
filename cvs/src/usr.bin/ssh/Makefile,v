head	1.15;
access;
symbols
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.32
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.30
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.26
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.24
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.18
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.22
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.20
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.16
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.14
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.12
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.10
	OPENBSD_5_0:1.15.0.8
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.6
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.12.0.26
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.22
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.20
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.18
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.16
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.12
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.14
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.10
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.8
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.6
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.4
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.6
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.11.0.4
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4;
locks; strict;
comment	@# @;


1.15
date	2010.02.09.08.55.31;	author markus;	state Exp;
branches;
next	1.14;

1.14
date	2010.02.08.12.48.38;	author markus;	state Exp;
branches;
next	1.13;

1.13
date	2010.02.08.10.50.20;	author markus;	state Exp;
branches;
next	1.12;

1.12
date	2003.12.01.15.47.20;	author grange;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.23.19.24.30;	author markus;	state Exp;
branches
	1.11.4.1
	1.11.6.1;
next	1.10;

1.10
date	2002.02.09.17.37.34;	author deraadt;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2001.06.28.21.55.27;	author markus;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2001.02.04.11.11.53;	author djm;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2000.12.04.19.24.01;	author markus;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.31.21.52.23;	author markus;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	99.10.25.20.27.26;	author markus;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	99.09.27.23.47.43;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.09.26.22.29.50;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.09.26.21.47.52;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.09.26.20.53.32;	author deraadt;	state Exp;
branches;
next	;

1.5.2.1
date	2000.11.08.21.30.14;	author jason;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2001.03.12.15.44.06;	author jason;	state Exp;
branches;
next	1.5.2.3;

1.5.2.3
date	2001.03.21.18.52.29;	author jason;	state Exp;
branches;
next	;

1.6.2.1
date	2001.02.16.20.12.50;	author jason;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2001.02.19.17.18.30;	author jason;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2001.03.21.19.46.21;	author jason;	state Exp;
branches;
next	1.6.2.4;

1.6.2.4
date	2001.05.07.21.09.24;	author jason;	state Exp;
branches;
next	1.6.2.5;

1.6.2.5
date	2001.09.27.00.15.41;	author miod;	state Exp;
branches;
next	;

1.8.2.1
date	2001.09.27.19.03.54;	author jason;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2002.03.09.00.20.43;	author miod;	state Exp;
branches;
next	;

1.9.2.1
date	2002.03.07.17.37.45;	author jason;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2002.03.08.15.17.18;	author brad;	state Exp;
branches;
next	1.9.2.3;

1.9.2.3
date	2002.06.22.07.23.16;	author miod;	state Exp;
branches;
next	1.9.2.4;

1.9.2.4
date	2002.06.22.08.50.29;	author matthieu;	state Exp;
branches;
next	;

1.10.2.1
date	2002.06.22.04.33.15;	author jason;	state Exp;
branches;
next	1.10.2.2;

1.10.2.2
date	2002.06.26.15.30.37;	author jason;	state Exp;
branches;
next	1.10.2.3;

1.10.2.3
date	2002.10.11.14.51.51;	author miod;	state Exp;
branches;
next	;

1.11.4.1
date	2004.03.04.18.18.14;	author brad;	state Exp;
branches;
next	;

1.11.6.1
date	2004.02.28.03.51.32;	author brad;	state Exp;
branches;
next	;


desc
@@


1.15
log
@enable PKCS#11 code; ok djm
@
text
@#	$OpenBSD: Makefile,v 1.14 2010/02/08 12:48:38 markus Exp $

.include <bsd.own.mk>

SUBDIR=	lib ssh sshd ssh-add ssh-keygen ssh-agent scp sftp-server \
	ssh-keysign ssh-keyscan sftp ssh-pkcs11-helper

distribution:
	${INSTALL} -C -o root -g wheel -m 0644 ${.CURDIR}/ssh_config \
	    ${DESTDIR}/etc/ssh/ssh_config
	${INSTALL} -C -o root -g wheel -m 0644 ${.CURDIR}/sshd_config \
	    ${DESTDIR}/etc/ssh/sshd_config

.include <bsd.subdir.mk>
@


1.14
log
@remove obsole scard code
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2010/02/08 10:50:20 markus Exp $
d6 1
a6 2
	ssh-keysign ssh-keyscan sftp
#SUBDIR+=ssh-pkcs11-helper
@


1.13
log
@replace our obsolete smartcard code with PKCS#11.
	ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-11/v2-20/pkcs-11v2-20.pdf
ssh(1) and ssh-keygen(1) use dlopen(3) directly to talk to a PKCS#11
provider (shared library) while ssh-agent(1) delegates PKCS#11 to
a forked a ssh-pkcs11-helper process.
PKCS#11 is currently a compile time option.
feedback and ok djm@@; inspired by patches from Alon Bar-Lev
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2003/12/01 15:47:20 grange Exp $
d6 1
a6 1
	ssh-keysign ssh-keyscan sftp scard
@


1.12
log
@Use ${INSTALL} instead of install; from art's amd64 tree.
ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2002/05/23 19:24:30 markus Exp $
d7 1
@


1.11
log
@add /usr/libexec/ssh-keysign: a setuid helper program for hostbased authentication
in protocol v2 (needs to access the hostkeys).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2002/02/09 17:37:34 deraadt Exp $
d9 1
a9 1
	install -C -o root -g wheel -m 0644 ${.CURDIR}/ssh_config \
d11 1
a11 1
	install -C -o root -g wheel -m 0644 ${.CURDIR}/sshd_config \
@


1.11.4.1
log
@upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2003/12/01 15:47:20 grange Exp $
d9 1
a9 1
	${INSTALL} -C -o root -g wheel -m 0644 ${.CURDIR}/ssh_config \
d11 1
a11 1
	${INSTALL} -C -o root -g wheel -m 0644 ${.CURDIR}/sshd_config \
@


1.11.6.1
log
@upgrade to OpenSSH 3.8
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2003/12/01 15:47:20 grange Exp $
d9 1
a9 1
	${INSTALL} -C -o root -g wheel -m 0644 ${.CURDIR}/ssh_config \
d11 1
a11 1
	${INSTALL} -C -o root -g wheel -m 0644 ${.CURDIR}/sshd_config \
@


1.10
log
@move ssh config files to /etc/ssh
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2001/06/28 21:55:27 markus Exp $
d6 1
a6 1
	ssh-keyscan sftp scard
@


1.10.2.1
log
@- create /var/empty directory before install
- enable privsep by default
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2002/02/09 17:37:34 deraadt Exp $
a12 3

beforeinstall:
	install -d -m 0755 -o root -g wheel ${DESTDIR}/var/empty
@


1.10.2.2
log
@Pull in OpenSSH-3.4
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2002/05/23 19:24:30 markus Exp $
d6 1
a6 1
	ssh-keysign ssh-keyscan sftp scard
@


1.10.2.3
log
@Update to OpenSSH 3.5
@
text
@d14 3
@


1.9
log
@ssh java cardlet for smartcard support (source and uuencoded binary)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2001/02/04 11:11:53 djm Exp $
d10 1
a10 1
	    ${DESTDIR}/etc/ssh_config
d12 1
a12 1
	    ${DESTDIR}/etc/sshd_config
@


1.9.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2002/02/09 17:37:34 deraadt Exp $
d10 1
a10 1
	    ${DESTDIR}/etc/ssh/ssh_config
d12 1
a12 1
	    ${DESTDIR}/etc/ssh/sshd_config
@


1.9.2.2
log
@apply the necessary openbsd30_3.1.patch patch.
--
Ok'd by markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9.2.1 2002/03/07 17:37:45 jason Exp $
d10 1
a10 1
	    ${DESTDIR}/etc/ssh_config
d12 1
a12 1
	    ${DESTDIR}/etc/sshd_config
@


1.9.2.3
log
@Update OpenSSH to version 3.3 (with local changes, configuration files still
living in /etc and privsep user being nobody).
@
text
@d1 1
a1 19
#	$OpenBSD: Makefile,v 1.3 2002/05/31 10:30:33 markus Exp $

.PATH:		${.CURDIR}/..

PROG=	ssh-keysign
BINOWN=	root

BINMODE?=4555

BINDIR=	/usr/libexec
MAN=	ssh-keysign.8

SRCS=	ssh-keysign.c

.include <bsd.prog.mk>

LDADD+=	-lcrypto -lz
DPADD+=	${LIBCRYPTO} ${LIBZ}
#	$OpenBSD: Makefile,v 1.11 2002/05/23 19:24:30 markus Exp $
d6 1
a6 1
	ssh-keysign ssh-keyscan sftp scard
@


1.9.2.4
log
@remove extra ssh-keysign Makefile which was not supposed to be here
ok deraadt@@
@
text
@d1 19
a19 1
#	$OpenBSD: Makefile,v 1.9.2.3 2002/06/22 07:23:16 miod Exp $
@


1.8
log
@Basic interactive sftp client; ok theo@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2000/12/04 19:24:01 markus Exp $
d6 1
a6 1
	ssh-keyscan sftp
@


1.8.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2001/06/28 21:55:27 markus Exp $
d6 1
a6 1
	ssh-keyscan sftp scard
@


1.8.2.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2002/02/09 17:37:34 deraadt Exp $
@


1.7
log
@David Maziere's ssh-keyscan, ok niels@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2000/08/31 21:52:23 markus Exp $
d6 1
a6 1
	ssh-keyscan
@


1.6
log
@implement a SFTP server. interops with sftp2, scp2 and the windows
client from ssh.com
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1999/10/25 20:27:26 markus Exp $
d5 2
a6 1
SUBDIR=	lib ssh sshd ssh-add ssh-keygen ssh-agent scp sftp-server
@


1.6.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2001/02/04 11:11:53 djm Exp $
d5 1
a5 2
SUBDIR=	lib ssh sshd ssh-add ssh-keygen ssh-agent scp sftp-server \
	ssh-keyscan sftp
@


1.6.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.6.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@@


1.6.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@@


1.6.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2001/06/28 21:55:27 markus Exp $
d6 1
a6 1
	ssh-keyscan sftp scard
@


1.5
log
@move common files to ./lib and link libssh.a, tested with and w/o obj
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1999/09/27 23:47:43 deraadt Exp $
d5 1
a5 1
SUBDIR=	lib ssh sshd ssh-add ssh-keygen ssh-agent scp
@


1.5.2.1
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2000/08/31 21:52:23 markus Exp $
d5 1
a5 1
SUBDIR=	lib ssh sshd ssh-add ssh-keygen ssh-agent scp sftp-server
@


1.5.2.2
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2001/02/04 11:11:53 djm Exp $
d5 1
a5 2
SUBDIR=	lib ssh sshd ssh-add ssh-keygen ssh-agent scp sftp-server \
	ssh-keyscan sftp
@


1.5.2.3
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@@


1.4
log
@fix distribution target
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1999/09/26 22:29:50 deraadt Exp $
d5 1
a5 1
SUBDIR=	ssh sshd ssh-add ssh-keygen ssh-agent scp
@


1.3
log
@distribution target
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1999/09/26 21:47:52 deraadt Exp $
d5 1
a5 9
SUBDIR= ssh sshd ssh-add ssh-keygen ssh-agent scp

generate-host-key:
	-@@if [ -f ${DESTDIR}/etc/ssh_host_key ]; then \
		echo "Host key exists in ${DESTDIR}/etc/ssh_host_key."; \
	else \
		umask 022; echo "Generating 1024 bit host key."; \
		ssh-keygen -b 1024 -f ${DESTDIR}/etc/ssh_host_key -N ''; \
	fi
d8 4
a11 2
	install -C -o root -g wheel -m 0644 ${.CURDIR}/etc/ssh_config /etc
	install -C -o root -g wheel -m 0644 ${.CURDIR}/etc/sshd_config /etc
@


1.2
log
@build ssh components using our build model
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.60 1999/08/19 22:17:37 niklas Exp $
d6 12
@


1.1
log
@i bet a lot of people didn't know what ssh 1.2.16 had a nice license.
well, except for the patent issues.  someone in sweden (forget their
name at the moment) cleaned out most of the patented code, and now
this code removes rsa code.  when this is done, it will link against
libssl, but the work isn't completely done yet.  then we need to bring
this up to modern days, featurewise.
@
text
@d1 1
a1 13
# Generated automatically from Makefile.in by configure.
#
# Makefile.in
#
# Author: Tatu Ylonen <ylo@@cs.hut.fi>
#
# Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
#                    All rights reserved
#
# Created: Wed Mar 22 17:37:49 1995 ylo
#
# $Id: Makefile.in,v 1.19 1999/06/30 15:56:21 bg Exp $
#
d3 1
a3 1
srcdir 		= .
d5 1
d7 1
a7 327
install_prefix	=
prefix		= /usr/local
exec_prefix	= ${prefix}
bindir		= $(exec_prefix)/bin
sbindir		= $(exec_prefix)/sbin
mandir		= $(prefix)/man
man1dir		= $(mandir)/man1
man8dir		= $(mandir)/man8
etcdir		= /etc
piddir		= /var/run

CC 		= gcc -pipe
CFLAGS 		= -g -O2
LDFLAGS		= 
DEFS 		= -DHAVE_CONFIG_H
LIBS		= -lkrb -lz -lcrypto -ldes -lgmp  -lutil
LIBOBJS		= 
CONFOBJS	=  bf_skey.o bf_enc.o compress.o

MAKEDEP		= makedepend
LN_S		= ln -s
RANLIB		= ranlib
INSTALL		= /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA	= ${INSTALL} -m 644
WISH		= /usr/local/bin/wish

GMPLIBS	= -lgmp
GMPINCS	= 

KRB4_AUTH   = 
KRB4_ROOT   = 
KRB4_INCS   = 
KRB4_LIBS   = 
RADIX       = 

RSAREFDEP	= 

transform	= s,x,x,

HOST_KEY_FILE 	= $(etcdir)/ssh_host_key
HOST_CONFIG_FILE = $(etcdir)/ssh_config
SERVER_CONFIG_FILE = $(etcdir)/sshd_config

SHELL = /bin/sh

#ZLIBLIBS	= -L$(ZLIBDIR) -lz
#ZINCS = 

RSAREFDIR	= rsaref2
RSAREFSRCDIR 	= $(RSAREFDIR)/source

CIPHER_OBJS = cipher.o $(CONFOBJS)
COMMON_OBJS = $(LIBOBJS) \
	rsa.o randoms.o ssh_md5.o buffer.o packet.o \
	xmalloc.o ttymodes.o channels.o bufaux.o authfd.o authfile.o crc32.o \
	rsaglue.o match.o mpaux.o minfd.o $(CIPHER_OBJS)
SSHD_OBJS = sshd.o $(KRB4_AUTH) auth-rhosts.o auth-passwd.o auth-rsa.o auth-rh-rsa.o pty.o \
	log-server.o login.o hostfile.o canohost.o servconf.o tildexpand.o \
	uidswap.o serverloop.o $(RADIX) $(COMMON_OBJS)
SSH_OBJS = ssh.o sshconnect.o log-client.o readconf.o hostfile.o readpass.o \
	tildexpand.o uidswap.o clientloop.o canohost.o $(RADIX) $(COMMON_OBJS)
KEYGEN_OBJS = ssh-keygen.o log-client.o readpass.o rsa.o randoms.o ssh_md5.o \
	buffer.o xmalloc.o authfile.o $(CIPHER_OBJS) mpaux.o \
	bufaux.o $(LIBOBJS)
AGENT_OBJS = ssh-agent.o log-client.o rsa.o randoms.o ssh_md5.o buffer.o \
	xmalloc.o bufaux.o authfd.o authfile.o rsaglue.o $(CIPHER_OBJS) \
	mpaux.o minfd.o $(LIBOBJS)
ADD_OBJS = ssh-add.o log-client.o readpass.o rsa.o randoms.o ssh_md5.o buffer.o \
	xmalloc.o bufaux.o authfd.o authfile.o $(CIPHER_OBJS) \
	mpaux.o minfd.o $(LIBOBJS)
SCP_OBJS = scp.o xmalloc.o
GEN_MINFD_OBJS = gen_minfd.o $(LIBOBJS)

USER_SHELLS = sh jsh ksh csh tcsh bash zsh ash

SRCS = $(SSHD_OBJS:.o=.c) $(SSH_OBJS:.o=.c) $(KEYGEN_OBJS:.o=.c) \
	$(AGENT_OBJS:.o=.c) $(ADD_OBJS:.o=.c) \
	$(SCP_OBJS:.o=.c) \
	$(GEN_MINFD_OBJS:.o=.c)
EXTRA_SRCS = memmove.c strerror.c remove.c random.c putenv.c osfc2.c \
	socketpair.c
MAN1PAGES = ssh-keygen.1 ssh-agent.1 ssh-add.1 scp.1
MAN1GENERATED = ssh.1
MAN1SOURCES = ssh.1.in ssh-keygen.1 ssh-agent.1 ssh-add.1 scp.1
MAN8GENERATED = sshd.8
MAN8SOURCES = sshd.8.in

DISTFILES = COPYING.Ylonen README.AFS-KERBEROS README README.SECURID \
	INSTALL TODO OVERVIEW \
	configure configure.in config.guess config.sub Makefile.in \
	ssh-askpass.wish host_config.sample config.sample \
	acconfig.h config.h.in server_config.sample \
	$(MAN1SOURCES) $(MAN8SOURCES) *.c *.h install-sh \
	RFC.nroff RFC \
	ChangeLog

DISTNAME = `sed 's/.*"\(.*\)".*/\1/' version.h`

NORMAL_PROGRAMS = ssh-keygen ssh-askpass ssh-agent ssh-add scp

SBIN_PROGRAMS = sshd
PROGRAMS = ssh $(SBIN_PROGRAMS) $(NORMAL_PROGRAMS)
SSH_PROGRAM = $(bindir)/ssh

all: $(PROGRAMS)

RFC: RFC.nroff rfc-pg
	tbl RFC.nroff | nroff -ms | sed 's/FORMFEED\[Page/        [Page/' | ./rfc-pg -n5 >RFC

rfc-pg: rfc-pg.c
	$(CC) -o rfc-pg rfc-pg.c

.c.o:
	$(CC) -c -I. $(KRB4_INCS) $(GMPINCS) $(ZINCS) $(DEFS) -DHOST_KEY_FILE=\"$(HOST_KEY_FILE)\" -DHOST_CONFIG_FILE=\"$(HOST_CONFIG_FILE)\" -DSERVER_CONFIG_FILE=\"$(SERVER_CONFIG_FILE)\" -DSSH_PROGRAM=\"$(SSH_PROGRAM)\" -DETCDIR=\"$(etcdir)\" -DPIDDIR=\"$(piddir)\" $(CFLAGS) $<

sshd: $(SSHD_OBJS)  $(RSAREFDEP)
	-rm -f sshd
	$(CC) $(LDFLAGS) -o sshd $(SSHD_OBJS) $(GMPLIBS) $(ZLIBLIBS) $(KRB4_LIBS) $(LIBS)

ssh: $(SSH_OBJS)  $(RSAREFDEP)
	-rm -f ssh
	$(CC) $(LDFLAGS) -o ssh $(SSH_OBJS) $(GMPLIBS) $(ZLIBLIBS) $(KRB4_LIBS) $(LIBS)

ssh-keygen: $(KEYGEN_OBJS)  $(RSAREFDEP)
	-rm -f ssh-keygen
	$(CC) $(LDFLAGS) -o ssh-keygen $(KEYGEN_OBJS) $(GMPLIBS) $(KRB4_LIBS) $(LIBS)

ssh-agent: $(AGENT_OBJS)  $(RSAREFDEP)
	-rm -f ssh-agent
	$(CC) $(LDFLAGS) -o ssh-agent $(AGENT_OBJS) $(GMPLIBS) $(KRB4_LIBS) $(LIBS)

ssh-add: $(ADD_OBJS)  $(RSAREFDEP)
	-rm -f ssh-add
	$(CC) $(LDFLAGS) -o ssh-add $(ADD_OBJS) $(GMPLIBS) $(KRB4_LIBS) $(LIBS)

scp: $(SCP_OBJS) $(LIBOBJS)
	-rm -f scp
	$(CC) $(LDFLAGS) -o scp $(SCP_OBJS) $(LIBOBJS) $(KRB4_LIBS) $(LIBS)

ssh-askpass: ssh-askpass.wish
	-rm -f ssh-askpass
	echo "#! $(WISH) -f" >ssh-askpass
	cat $(srcdir)/ssh-askpass.wish >>ssh-askpass
	chmod +x ssh-askpass

gen_minfd: $(GEN_MINFD_OBJS)
	$(CC) $(LDFLAGS) -o gen_minfd $(GEN_MINFD_OBJS) $(LIBS)

minfd.o: minfd.h
minfd.h: gen_minfd
	rm -f minfd.h minfd.h~
	./gen_minfd $(USER_SHELLS) > minfd.h~
	mv -f minfd.h~ minfd.h

$(RSAREFSRCDIR)/librsaref.a:
	-if test '!' -d $(RSAREFDIR); then \
	  (cd $(srcdir); tar cf - $(RSAREFSRCDIR)) | tar xf -; fi
	cd $(RSAREFSRCDIR); $(MAKE) -f ../../Makefile librsaref.a

RSAREFSRCS = desc.c digit.c md2c.c md5c.c nn.c prime.c r_dh.c r_encode.c \
	r_enhanc.c r_keygen.c r_random.c r_stdlib.c rsa.c

# Note: this target is used in a recursive make, with VPATH pointing to source
librsaref.a:
	for i in $(RSAREFSRCS); do $(CC) $(CFLAGS) -c $$i; done
	$(AR) rc librsaref.a $(RSAREFSRCS:.c=.o)
	$(RANLIB) librsaref.a

# Creates /etc/ssh_host_key
generate-host-key:
	-@@if test -f $(install_prefix)$(HOST_KEY_FILE); \
          then echo "You already have a host key in $(install_prefix)$(HOST_KEY_FILE)."; \
	  else \
	    umask 022; echo "Generating 1024 bit host key."; \
	    ./ssh-keygen -b 1024 -f $(install_prefix)$(HOST_KEY_FILE) -N ''; \
	  fi

# Creates install directories
make-dirs:
	-umask 022; if test '!' -d $(install_prefix)$(prefix); then \
	  mkdir $(install_prefix)$(prefix); fi; \
	if test '!' -d $(install_prefix)$(exec_prefix); then \
	  mkdir $(install_prefix)$(exec_prefix); fi; \
	if test '!' -d $(install_prefix)$(etcdir); then \
	  mkdir $(install_prefix)$(etcdir); fi; \
	if test '!' -d $(install_prefix)$(bindir); then \
	  mkdir $(install_prefix)$(bindir); fi; \
	if test '!' -d $(install_prefix)$(sbindir); then \
	  mkdir $(install_prefix)$(sbindir); fi; \
	if test '!' -d $(install_prefix)$(mandir); then \
	  mkdir $(install_prefix)$(mandir); fi; \
	if test '!' -d $(install_prefix)$(man1dir); then \
	  mkdir $(install_prefix)$(man1dir); fi; \
	if test '!' -d $(install_prefix)$(man8dir); then \
	  mkdir $(install_prefix)$(man8dir); fi

# Ssh is much to large and hairy to be installed suid root by
# default. Disabled for now/bg. If you really need rhosts
# authentication do a manual chmod u+s $(install_prefix)$(bindir)/ssh.
#
# Ssh is preferably installed suid root.  It can also be used non-root,
# but then it cannot connect from a privileged socket, and rhosts
# authentication will be disabled.
#
# Sshd is not suid root, but should preferably be run as root
# (otherwise it can only log in as the user it runs as, and must be
# bound to a non-privileged port).  Also, password authentication may
# not be available if non-root and using shadow passwords.
install: $(PROGRAMS) make-dirs generate-host-key
	$(INSTALL_PROGRAM) -o root -m 0755 ssh $(install_prefix)$(bindir)/ssh
	-if test "`echo ssh | sed '$(transform)'`" '!=' ssh; then \
	  rm -f $(install_prefix)$(bindir)/`echo ssh | sed '$(transform)'`; \
	  $(LN_S) ssh \
	    $(install_prefix)$(bindir)/`echo ssh | sed '$(transform)'`; fi
	rm -f $(install_prefix)$(bindir)/slogin
	$(LN_S) ssh $(install_prefix)$(bindir)/slogin
	-if test "`echo slogin | sed '$(transform)'`" '!=' slogin; then \
	  rm -f $(install_prefix)$(bindir)/`echo slogin | sed '$(transform)'`;\
	  $(LN_S) ssh \
	    $(install_prefix)$(bindir)/`echo slogin | sed '$(transform)'`; fi
	-for p in $(NORMAL_PROGRAMS); do \
	  $(INSTALL_PROGRAM) -m 0755 $$p $(install_prefix)$(bindir)/$$p; \
	  if test "`echo $$p | sed '$(transform)'`" '!=' $$p; then \
	    rm -f $(install_prefix)$(bindir)/`echo $$p | sed '$(transform)'`; \
	    $(LN_S) $$p \
	      $(install_prefix)$(bindir)/`echo $$p | sed '$(transform)'`; fi; \
	done
# Remove $(etcdir)/sshd_pid as it is now $(bindir)/sshd.pid
	-rm -f $(install_prefix)$(etcdir)/sshd_pid
# Remove $(bindir)/sshd to avoid confusion since it is now in $(sbindir)
	-rm -f $(install_prefix)$(bindir)/sshd
	-rm -f $(install_prefix)$(bindir)/`echo sshd | sed '$(transform)'`
	-for p in $(SBIN_PROGRAMS); do \
	  $(INSTALL_PROGRAM) -m 0755 $$p $(install_prefix)$(sbindir)/$$p; \
	  if test "`echo $$p | sed '$(transform)'`" '!=' $$p; then \
	    rm -f $(install_prefix)$(sbindir)/`echo $$p | sed '$(transform)'`;\
	    $(LN_S) $$p \
	      $(install_prefix)$(sbindir)/`echo $$p | sed '$(transform)'`; fi;\
	done
	-for p in $(MAN1PAGES); do \
	  $(INSTALL_DATA) -m 0644 $(srcdir)/$$p $(install_prefix)$(man1dir)/$$p ; \
	  if test "`echo $$p | sed '$(transform)'`" '!=' $$p; then \
	    rm -f $(install_prefix)$(man1dir)/`echo $$p | sed '$(transform)'`;\
	    $(LN_S) $$p \
	      $(install_prefix)$(man1dir)/`echo $$p | sed '$(transform)'`; \
	  fi; \
	done
	rm -f $(install_prefix)$(man1dir)/slogin.1
	$(LN_S) ssh.1 $(install_prefix)$(man1dir)/slogin.1
	if test "`echo slogin.1 | sed '$(transform)'`" '!=' slogin.1; then \
	  rm -f $(install_prefix)$(man1dir)/`echo slogin.1 | sed '$(transform)'`;\
	  $(LN_S) ssh.1 \
	    $(install_prefix)$(man1dir)/`echo slogin.1 | sed '$(transform)'`; \
	fi
	-for p in $(MAN1GENERATED); do \
	  $(INSTALL_DATA) -m 0644 $$p $(install_prefix)$(man1dir)/$$p ; \
	  if test "`echo $$p | sed '$(transform)'`" '!=' $$p; then \
	    rm -f $(install_prefix)$(man1dir)/`echo $$p | sed '$(transform)'`;\
	    $(LN_S) $$p \
	      $(install_prefix)$(man1dir)/`echo $$p | sed '$(transform)'`; \
	  fi; \
	done
	-for p in $(MAN8GENERATED); do \
	  $(INSTALL_DATA) -m 0644 $$p $(install_prefix)$(man8dir)/$$p; \
	  if test "`echo $$p | sed '$(transform)'`" '!=' $$p; then \
	    rm -f $(install_prefix)$(man8dir)/`echo $$p | sed '$(transform)'`;\
	    $(LN_S) $$p \
	      $(install_prefix)$(man8dir)/`echo $$p | sed '$(transform)'`; fi;\
	done
	-if test '!' -f $(install_prefix)$(HOST_CONFIG_FILE); then \
	  $(INSTALL_DATA) -m 0644 $(srcdir)/host_config.sample \
	    $(install_prefix)$(HOST_CONFIG_FILE); fi
	-if test '!' -f $(install_prefix)$(SERVER_CONFIG_FILE); then \
	  cat $(srcdir)/server_config.sample | \
	  sed "s#_ETCDIR_#$(etcdir)#g" >/tmp/ssh_inst.$$; \
	  $(INSTALL_DATA) -m 0644 /tmp/ssh_inst.$$ \
	    $(install_prefix)$(SERVER_CONFIG_FILE); \
	  rm -f /tmp/ssh_inst.$$; fi

uninstall:
	for p in ssh $(NORMAL_PROGRAMS); do \
	  rm -f $(install_prefix)$(bindir)/$$p; \
	  rm -f $(install_prefix)$(bindir)/`echo $$p | sed '$(transform)'`; \
	done
	for p in $(SBIN_PROGRAMS); do \
	  rm -f $(install_prefix)$(sbindir)/$$p; \
	  rm -f $(install_prefix)$(sbindir)/`echo $$p | sed '$(transform)'`; \
	done
	rm -f $(install_prefix)$(bindir)/slogin
	rm -f $(install_prefix)$(bindir)/`echo slogin | sed '$(transform)'`
	for p in $(MAN1PAGES) $(MAN1GENERATED); do \
	  rm -f $(install_prefix)$(man1dir)/$$p; \
	  rm -f $(install_prefix)$(man1dir)/`echo $$p | sed '$(transform)'`; \
	done
	for p in $(MAN8GENERATED); do \
	  rm -f $(install_prefix)$(man8dir)/$$p; \
	  rm -f $(install_prefix)$(man8dir)/`echo $$p | sed '$(transform)'`; \
	done

clean:
	-rm -f *.o minfd.h gmon.out core $(PROGRAMS) gen_minfd rfc-pg
#	cd $(RSAREFSRCDIR); rm -f *.o *.a

distclean: clean
	-rm -f Makefile config.status config.cache config.log config.h
	-rm -f ssh.1 sshd.8

dist:
	-rm -rf $(DISTNAME)
	-mkdir $(DISTNAME)
	cp $(DISTFILES) $(DISTNAME)
	-rm -f $(DISTNAME)/config.h
#	tar cf - $(RSAREFDIR) | (cd $(DISTNAME); tar xf -)
#	cd $(DISTNAME)/$(RSAREFSRCDIR); rm -f *.o *.a
	tar cf $(DISTNAME).tar $(DISTNAME)
	-rm -f $(DISTNAME).tar.gz
	gzip $(DISTNAME).tar
	rm -rf $(DISTNAME)
	@@echo Distribution left in $(DISTNAME).tar.gz
#	@@echo Incrementing version number...
#	@@old_version=`sed 's/.*\.\([0-9][0-9]*\)"$$/\1/' version.h`; \
#	 new_version=`expr $$old_version + 1`; \
#	 (echo "s/\.$$old_version\"/.$$new_version\"/g"; echo w; echo q) | ed version.h >/dev/null

depend:
	$(MAKEDEP) -I$(srcdir) -I. $(GMPINCS) $(ZINCS) $(DEFS) $(SRCS)
@

