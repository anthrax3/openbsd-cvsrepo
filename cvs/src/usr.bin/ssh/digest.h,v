head	1.8;
access;
symbols
	OPENBSD_6_1:1.7.0.12
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.10
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.6
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.6.0.4
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.8
date	2017.05.08.22.57.38;	author djm;	state Exp;
branches;
next	1.7;
commitid	noNsHa38yr7MsUCg;

1.7
date	2014.12.21.22.27.56;	author djm;	state Exp;
branches;
next	1.6;
commitid	EbtriidyZdsmXksl;

1.6
date	2014.07.03.04.36.45;	author djm;	state Exp;
branches;
next	1.5;
commitid	oHaqPrmWir00oGJb;

1.5
date	2014.06.24.01.13.21;	author djm;	state Exp;
branches;
next	1.4;
commitid	1h9UxAQmwdaqUzyX;

1.4
date	2014.05.02.03.27.54;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2014.03.26.04.55.35;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2014.01.27.18.58.14;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2014.01.09.23.20.00;	author djm;	state Exp;
branches;
next	;


desc
@@


1.8
log
@remove hmac-ripemd160; ok dtucker
@
text
@/* $OpenBSD: digest.h,v 1.7 2014/12/21 22:27:56 djm Exp $ */
/*
 * Copyright (c) 2013 Damien Miller <djm@@mindrot.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _DIGEST_H
#define _DIGEST_H

/* Maximum digest output length */
#define SSH_DIGEST_MAX_LENGTH	64

/* Digest algorithms */
#define SSH_DIGEST_MD5		0
#define SSH_DIGEST_SHA1		1
#define SSH_DIGEST_SHA256	2
#define SSH_DIGEST_SHA384	3
#define SSH_DIGEST_SHA512	4
#define SSH_DIGEST_MAX		5

struct sshbuf;
struct ssh_digest_ctx;

/* Looks up a digest algorithm by name */
int ssh_digest_alg_by_name(const char *name);

/* Returns the algorithm name for a digest identifier */
const char *ssh_digest_alg_name(int alg);

/* Returns the algorithm's digest length in bytes or 0 for invalid algorithm */
size_t ssh_digest_bytes(int alg);

/* Returns the block size of the digest, e.g. for implementing HMAC */
size_t ssh_digest_blocksize(struct ssh_digest_ctx *ctx);

/* Copies internal state of digest of 'from' to 'to' */
int ssh_digest_copy_state(struct ssh_digest_ctx *from,
    struct ssh_digest_ctx *to);

/* One-shot API */
int ssh_digest_memory(int alg, const void *m, size_t mlen,
    u_char *d, size_t dlen)
	__attribute__((__bounded__(__buffer__, 2, 3)))
	__attribute__((__bounded__(__buffer__, 4, 5)));
int ssh_digest_buffer(int alg, const struct sshbuf *b, u_char *d, size_t dlen)
	__attribute__((__bounded__(__buffer__, 3, 4)));

/* Update API */
struct ssh_digest_ctx *ssh_digest_start(int alg);
int ssh_digest_update(struct ssh_digest_ctx *ctx, const void *m, size_t mlen)
	__attribute__((__bounded__(__buffer__, 2, 3)));
int ssh_digest_update_buffer(struct ssh_digest_ctx *ctx,
    const struct sshbuf *b);
int ssh_digest_final(struct ssh_digest_ctx *ctx, u_char *d, size_t dlen)
	__attribute__((__bounded__(__buffer__, 2, 3)));
void ssh_digest_free(struct ssh_digest_ctx *ctx);

#endif /* _DIGEST_H */

@


1.7
log
@Add FingerprintHash option to control algorithm used for key
fingerprints. Default changes from MD5 to SHA256 and format
from hex to base64.

Feedback and ok naddy@@ markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: digest.h,v 1.6 2014/07/03 04:36:45 djm Exp $ */
d26 5
a30 6
#define SSH_DIGEST_RIPEMD160	1
#define SSH_DIGEST_SHA1		2
#define SSH_DIGEST_SHA256	3
#define SSH_DIGEST_SHA384	4
#define SSH_DIGEST_SHA512	5
#define SSH_DIGEST_MAX		6
@


1.6
log
@forward-declare struct sshbuf so consumers don't need to include sshbuf.h
@
text
@d1 1
a1 1
/* $OpenBSD: digest.h,v 1.5 2014/06/24 01:13:21 djm Exp $ */
d35 6
@


1.5
log
@New key API: refactor key-related functions to be more library-like,
existing API is offered as a set of wrappers.

with and ok markus@@

Thanks also to Ben Hawkes, David Tomaschik, Ivan Fratric, Matthew
Dempsky and Ron Bowes for a detailed review a few months ago.
@
text
@d1 1
a1 1
/* $OpenBSD: digest.h,v 1.4 2014/05/02 03:27:54 djm Exp $ */
d33 1
@


1.4
log
@revert __bounded change; it causes way more problems for portable than
it solves; pointed out by dtucker@@
@
text
@d1 1
a1 1
/* $OpenBSD: digest.h,v 1.2 2014/01/27 18:58:14 markus Exp $ */
d50 1
a50 1
int ssh_digest_buffer(int alg, const Buffer *b, u_char *d, size_t dlen)
d57 2
a58 1
int ssh_digest_update_buffer(struct ssh_digest_ctx *ctx, const Buffer *b);
@


1.3
log
@use __bounded(...) attribute recently added to sys/cdefs.h instead of
longform __attribute__(__bounded(...));

for brevity and a warning free compilation with llvm/clan
@
text
@d48 2
a49 2
	__bounded((__buffer__, 2, 3))
	__bounded((__buffer__, 4, 5));
d51 1
a51 1
	__bounded((__buffer__, 3, 4));
d56 1
a56 1
	__bounded((__buffer__, 2, 3));
d59 1
a59 1
	__bounded((__buffer__, 2, 3));
@


1.2
log
@replace openssl HMAC with an implementation based on our ssh_digest_*
ok and feedback djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: digest.h,v 1.1 2014/01/09 23:20:00 djm Exp $ */
d48 2
a49 2
	__attribute__((__bounded__(__buffer__, 2, 3)))
	__attribute__((__bounded__(__buffer__, 4, 5)));
d51 1
a51 1
	__attribute__((__bounded__(__buffer__, 3, 4)));
d56 1
a56 1
	__attribute__((__bounded__(__buffer__, 2, 3)));
d59 1
a59 1
	__attribute__((__bounded__(__buffer__, 2, 3)));
@


1.1
log
@Introduce digest API and use it to perform all hashing operations
rather than calling OpenSSL EVP_Digest* directly. Will make it easier
to build a reduced-feature OpenSSH without OpenSSL in future;
feedback, ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d33 2
d38 7
a53 1
struct ssh_digest_ctx;
@

