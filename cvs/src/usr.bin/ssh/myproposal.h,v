head	1.54;
access;
symbols
	OPENBSD_6_1:1.54.0.4
	OPENBSD_6_1_BASE:1.54
	OPENBSD_6_0:1.51.0.4
	OPENBSD_6_0_BASE:1.51
	OPENBSD_5_9:1.50.0.2
	OPENBSD_5_9_BASE:1.50
	OPENBSD_5_8:1.47.0.2
	OPENBSD_5_8_BASE:1.47
	OPENBSD_5_7:1.41.0.2
	OPENBSD_5_7_BASE:1.41
	OPENBSD_5_6:1.41.0.4
	OPENBSD_5_6_BASE:1.41
	OPENBSD_5_5:1.35.0.4
	OPENBSD_5_5_BASE:1.35
	OPENBSD_5_4:1.32.0.4
	OPENBSD_5_4_BASE:1.32
	OPENBSD_5_3:1.32.0.2
	OPENBSD_5_3_BASE:1.32
	OPENBSD_5_2:1.29.0.2
	OPENBSD_5_2_BASE:1.29
	OPENBSD_5_1_BASE:1.28
	OPENBSD_5_1:1.28.0.4
	OPENBSD_5_0:1.28.0.2
	OPENBSD_5_0_BASE:1.28
	OPENBSD_4_9:1.27.0.2
	OPENBSD_4_9_BASE:1.27
	OPENBSD_4_8:1.25.0.2
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.24.0.2
	OPENBSD_4_7_BASE:1.24
	OPENBSD_4_6:1.23.0.6
	OPENBSD_4_6_BASE:1.23
	OPENBSD_4_5:1.23.0.2
	OPENBSD_4_5_BASE:1.23
	OPENBSD_4_4:1.22.0.6
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.22.0.4
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.22.0.2
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.21.0.2
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.4
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.18.0.4
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.2
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.16.0.4
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.2
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.15.0.4
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.14.0.6
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.4
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.14.0.2
	OPENBSD_3_1_BASE:1.14
	OPENBSD_3_0:1.12.0.4
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2;
locks; strict;
comment	@ * @;


1.54
date	2016.09.28.16.33.07;	author djm;	state Exp;
branches;
next	1.53;
commitid	e2NJzal9PUi2o22D;

1.53
date	2016.09.22.17.52.53;	author djm;	state Exp;
branches;
next	1.52;
commitid	24XlrT6KrgNX4lKF;

1.52
date	2016.09.05.14.02.42;	author djm;	state Exp;
branches;
next	1.51;
commitid	CccW6dVtcIUlf3q4;

1.51
date	2016.05.02.10.26.04;	author djm;	state Exp;
branches;
next	1.50;
commitid	rVUG0L3JBpFl5b0k;

1.50
date	2016.02.09.05.30.04;	author djm;	state Exp;
branches;
next	1.49;
commitid	SykiGVJgWoQtQDz5;

1.49
date	2015.12.05.20.53.21;	author markus;	state Exp;
branches;
next	1.48;
commitid	9Xyk9Iyu98bRGdTg;

1.48
date	2015.12.04.16.41.28;	author markus;	state Exp;
branches;
next	1.47;
commitid	K3glY441IowbrjDE;

1.47
date	2015.07.10.06.21.53;	author markus;	state Exp;
branches;
next	1.46;
commitid	iQTtbsbSVdO9zivU;

1.46
date	2015.07.03.03.47.00;	author djm;	state Exp;
branches;
next	1.45;
commitid	hGFCOk0SiG8laZE4;

1.45
date	2015.07.03.03.43.18;	author djm;	state Exp;
branches;
next	1.44;
commitid	cnvu1kGgoFFYv6D3;

1.44
date	2015.05.27.23.51.10;	author dtucker;	state Exp;
branches;
next	1.43;
commitid	nrkp1CoeP4jdLnTM;

1.43
date	2015.04.21.07.01.00;	author jsg;	state Exp;
branches;
next	1.42;
commitid	v2v2iq1l0aQcfEgA;

1.42
date	2015.03.24.09.17.21;	author djm;	state Exp;
branches;
next	1.41;
commitid	zbAXkHGvCMlanznT;

1.41
date	2014.07.11.13.54.34;	author tedu;	state Exp;
branches;
next	1.40;
commitid	Gplo7joC684dx0Ce;

1.40
date	2014.04.30.19.07.48;	author naddy;	state Exp;
branches;
next	1.39;

1.39
date	2014.04.29.18.01.49;	author markus;	state Exp;
branches;
next	1.38;

1.38
date	2014.03.27.23.01.27;	author markus;	state Exp;
branches;
next	1.37;

1.37
date	2014.03.26.17.16.26;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	2014.03.25.09.40.03;	author markus;	state Exp;
branches;
next	1.35;

1.35
date	2013.12.06.13.39.49;	author markus;	state Exp;
branches;
next	1.34;

1.34
date	2013.11.21.00.45.44;	author djm;	state Exp;
branches;
next	1.33;

1.33
date	2013.11.02.21.59.15;	author markus;	state Exp;
branches;
next	1.32;

1.32
date	2013.01.08.18.49.04;	author markus;	state Exp;
branches;
next	1.31;

1.31
date	2012.12.11.22.31.18;	author markus;	state Exp;
branches;
next	1.30;

1.30
date	2012.10.04.13.21.50;	author markus;	state Exp;
branches;
next	1.29;

1.29
date	2012.06.28.05.07.45;	author dtucker;	state Exp;
branches;
next	1.28;

1.28
date	2011.08.02.01.22.11;	author djm;	state Exp;
branches;
next	1.27;

1.27
date	2010.09.01.22.42.13;	author djm;	state Exp;
branches;
next	1.26;

1.26
date	2010.08.31.11.54.45;	author djm;	state Exp;
branches;
next	1.25;

1.25
date	2010.04.16.01.47.26;	author djm;	state Exp;
branches;
next	1.24;

1.24
date	2010.02.26.20.29.54;	author djm;	state Exp;
branches;
next	1.23;

1.23
date	2009.01.23.07.58.11;	author djm;	state Exp;
branches;
next	1.22;

1.22
date	2007.06.07.19.37.34;	author pvalchev;	state Exp;
branches;
next	1.21;

1.21
date	2006.03.25.22.22.43;	author djm;	state Exp;
branches;
next	1.20;

1.20
date	2006.03.19.18.53.12;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2006.03.07.09.07.40;	author djm;	state Exp;
branches;
next	1.18;

1.18
date	2005.07.25.11.59.39;	author markus;	state Exp;
branches
	1.18.2.1
	1.18.4.1;
next	1.17;

1.17
date	2005.05.23.23.32.46;	author djm;	state Exp;
branches;
next	1.16;

1.16
date	2004.06.13.12.53.24;	author djm;	state Exp;
branches
	1.16.2.1
	1.16.4.1;
next	1.15;

1.15
date	2003.05.17.04.27.52;	author markus;	state Exp;
branches
	1.15.2.1
	1.15.4.1;
next	1.14;

1.14
date	2002.04.03.09.26.11;	author markus;	state Exp;
branches
	1.14.4.1
	1.14.6.1;
next	1.13;

1.13
date	2002.01.21.22.30.12;	author markus;	state Exp;
branches;
next	1.12;

1.12
date	2001.03.05.15.56.16;	author deraadt;	state Exp;
branches
	1.12.2.1
	1.12.4.1;
next	1.11;

1.11
date	2001.02.11.12.59.24;	author markus;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.29.01.58.17;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	2000.11.12.19.50.37;	author markus;	state Exp;
branches;
next	1.8;

1.8
date	2000.10.13.19.12.02;	author markus;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2000.10.13.18.59.14;	author markus;	state Exp;
branches;
next	1.6;

1.6
date	2000.10.11.20.27.23;	author markus;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.11.04.02.17;	author provos;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.07.20.27.52;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.25.20.45.20;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.08.17.12.15;	author markus;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2000.04.04.15.19.42;	author markus;	state Exp;
branches;
next	;

1.2.2.1
date	2000.06.12.02.37.34;	author jason;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2000.11.08.21.30.59;	author jason;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2001.03.12.15.44.12;	author jason;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2001.03.21.18.52.53;	author jason;	state Exp;
branches;
next	;

1.8.2.1
date	2001.02.16.20.13.08;	author jason;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2001.02.19.17.19.08;	author jason;	state Exp;
branches;
next	1.8.2.3;

1.8.2.3
date	2001.03.21.19.46.26;	author jason;	state Exp;
branches;
next	1.8.2.4;

1.8.2.4
date	2001.05.07.21.09.31;	author jason;	state Exp;
branches;
next	1.8.2.5;

1.8.2.5
date	2001.09.27.00.15.42;	author miod;	state Exp;
branches;
next	1.8.2.6;

1.8.2.6
date	2002.03.08.17.04.42;	author brad;	state Exp;
branches;
next	;

1.12.2.1
date	2002.03.09.00.20.44;	author miod;	state Exp;
branches;
next	1.12.2.2;

1.12.2.2
date	2002.06.02.22.56.10;	author miod;	state Exp;
branches;
next	;

1.12.4.1
date	2002.03.07.17.37.46;	author jason;	state Exp;
branches;
next	1.12.4.2;

1.12.4.2
date	2002.05.17.00.03.23;	author miod;	state Exp;
branches;
next	;

1.14.4.1
date	2003.09.16.21.20.26;	author brad;	state Exp;
branches;
next	;

1.14.6.1
date	2003.09.16.20.50.43;	author brad;	state Exp;
branches;
next	1.14.6.2;

1.14.6.2
date	2004.03.04.18.18.16;	author brad;	state Exp;
branches;
next	;

1.15.2.1
date	2004.08.19.22.37.31;	author brad;	state Exp;
branches;
next	;

1.15.4.1
date	2004.08.19.04.13.26;	author brad;	state Exp;
branches;
next	;

1.16.2.1
date	2005.09.02.03.45.00;	author brad;	state Exp;
branches;
next	;

1.16.4.1
date	2005.09.04.18.40.02;	author brad;	state Exp;
branches;
next	;

1.18.2.1
date	2006.10.06.03.19.32;	author brad;	state Exp;
branches;
next	;

1.18.4.1
date	2006.09.30.04.06.50;	author brad;	state Exp;
branches;
next	;


desc
@@


1.54
log
@Remove support for pre-authentication compression. Doing compression
early in the protocol probably seemed reasonable in the 1990s, but
today it's clearly a bad idea in terms of both cryptography (cf.
multiple compression oracle attacks in TLS) and attack surface.

Moreover, to support it across privilege-separation zlib needed
the assistance of a complex shared-memory manager that made the
required attack surface considerably larger.

Prompted by Guido Vranken pointing out a compiler-elided security
check in the shared memory manager found by Stack
(http://css.csail.mit.edu/stack/); ok deraadt@@ markus@@

NB. pre-auth authentication has been disabled by default in sshd
for >10 years.
@
text
@/* $OpenBSD: myproposal.h,v 1.53 2016/09/22 17:52:53 djm Exp $ */

/*
 * Copyright (c) 2000 Markus Friedl.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifdef WITH_OPENSSL

#define KEX_COMMON_KEX		\
	"curve25519-sha256," \
	"curve25519-sha256@@libssh.org," \
	"ecdh-sha2-nistp256," \
	"ecdh-sha2-nistp384," \
	"ecdh-sha2-nistp521," \
	"diffie-hellman-group-exchange-sha256," \
	"diffie-hellman-group16-sha512," \
	"diffie-hellman-group18-sha512" \

#define KEX_SERVER_KEX KEX_COMMON_KEX "," \
	"diffie-hellman-group14-sha256," \
	"diffie-hellman-group14-sha1"

#define KEX_CLIENT_KEX KEX_COMMON_KEX "," \
	"diffie-hellman-group-exchange-sha1," \
	"diffie-hellman-group14-sha256," \
	"diffie-hellman-group14-sha1"

#define	KEX_DEFAULT_PK_ALG	\
	"ecdsa-sha2-nistp256-cert-v01@@openssh.com," \
	"ecdsa-sha2-nistp384-cert-v01@@openssh.com," \
	"ecdsa-sha2-nistp521-cert-v01@@openssh.com," \
	"ssh-ed25519-cert-v01@@openssh.com," \
	"ssh-rsa-cert-v01@@openssh.com," \
	"ecdsa-sha2-nistp256," \
	"ecdsa-sha2-nistp384," \
	"ecdsa-sha2-nistp521," \
	"ssh-ed25519," \
	"rsa-sha2-512," \
	"rsa-sha2-256," \
	"ssh-rsa"

#define	KEX_SERVER_ENCRYPT \
	"chacha20-poly1305@@openssh.com," \
	"aes128-ctr,aes192-ctr,aes256-ctr," \
	"aes128-gcm@@openssh.com,aes256-gcm@@openssh.com"

#define KEX_CLIENT_ENCRYPT KEX_SERVER_ENCRYPT "," \
	"aes128-cbc,aes192-cbc,aes256-cbc"

#define	KEX_SERVER_MAC \
	"umac-64-etm@@openssh.com," \
	"umac-128-etm@@openssh.com," \
	"hmac-sha2-256-etm@@openssh.com," \
	"hmac-sha2-512-etm@@openssh.com," \
	"hmac-sha1-etm@@openssh.com," \
	"umac-64@@openssh.com," \
	"umac-128@@openssh.com," \
	"hmac-sha2-256," \
	"hmac-sha2-512," \
	"hmac-sha1"

#define KEX_CLIENT_MAC KEX_SERVER_MAC

#else /* WITH_OPENSSL */

#define KEX_SERVER_KEX		\
	"curve25519-sha256," \
	"curve25519-sha256@@libssh.org"
#define	KEX_DEFAULT_PK_ALG	\
	"ssh-ed25519-cert-v01@@openssh.com," \
	"ssh-ed25519"
#define	KEX_SERVER_ENCRYPT \
	"chacha20-poly1305@@openssh.com," \
	"aes128-ctr,aes192-ctr,aes256-ctr"
#define	KEX_SERVER_MAC \
	"umac-64-etm@@openssh.com," \
	"umac-128-etm@@openssh.com," \
	"hmac-sha2-256-etm@@openssh.com," \
	"hmac-sha2-512-etm@@openssh.com," \
	"hmac-sha1-etm@@openssh.com," \
	"umac-64@@openssh.com," \
	"umac-128@@openssh.com," \
	"hmac-sha2-256," \
	"hmac-sha2-512," \
	"hmac-sha1"

#define KEX_CLIENT_KEX KEX_SERVER_KEX
#define	KEX_CLIENT_ENCRYPT KEX_SERVER_ENCRYPT
#define KEX_CLIENT_MAC KEX_SERVER_MAC

#endif /* WITH_OPENSSL */

#define	KEX_DEFAULT_COMP	"none,zlib@@openssh.com"
#define	KEX_DEFAULT_LANG	""

#define KEX_CLIENT \
	KEX_CLIENT_KEX, \
	KEX_DEFAULT_PK_ALG, \
	KEX_CLIENT_ENCRYPT, \
	KEX_CLIENT_ENCRYPT, \
	KEX_CLIENT_MAC, \
	KEX_CLIENT_MAC, \
	KEX_DEFAULT_COMP, \
	KEX_DEFAULT_COMP, \
	KEX_DEFAULT_LANG, \
	KEX_DEFAULT_LANG

#define KEX_SERVER \
	KEX_SERVER_KEX, \
	KEX_DEFAULT_PK_ALG, \
	KEX_SERVER_ENCRYPT, \
	KEX_SERVER_ENCRYPT, \
	KEX_SERVER_MAC, \
	KEX_SERVER_MAC, \
	KEX_DEFAULT_COMP, \
	KEX_DEFAULT_COMP, \
	KEX_DEFAULT_LANG, \
	KEX_DEFAULT_LANG
@


1.53
log
@support plain curve25519-sha256 KEX algorithm now that it is
approaching standardisation (same algorithm is currently supported
as curve25519-sha256@@libssh.org)
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.52 2016/09/05 14:02:42 djm Exp $ */
d113 1
a113 1
#define	KEX_DEFAULT_COMP	"none,zlib@@openssh.com,zlib"
@


1.52
log
@remove 3des-cbc from the client's default proposal; 64-bit block ciphers
are not safe in 2016 and we don't want to wait until attacks like sweet32
are extended to SSH.

As 3des-cbc was the only mandatory cipher in the SSH RFCs, this may
cause problems connecting to older devices using the defaults, but
it's highly likely that such devices already need explicit
configuration for KEX and hostkeys anyway.

ok deraadt, markus, dtucker
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.51 2016/05/02 10:26:04 djm Exp $ */
d30 1
d87 1
@


1.51
log
@add support for additional fixed DH groups from
draft-ietf-curdle-ssh-kex-sha2-03

diffie-hellman-group14-sha256 (2K group)
diffie-hellman-group16-sha512 (4K group)
diffie-hellman-group18-sha512 (8K group)

based on patch from Mark D. Baushke and Darren Tucker
ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.50 2016/02/09 05:30:04 djm Exp $ */
d67 1
a67 1
	"aes128-cbc,aes192-cbc,aes256-cbc,3des-cbc"
@


1.50
log
@turn off more old crypto in the client: hmac-md5, ripemd, truncated
HMACs, RC4, blowfish. ok markus@@ dtucker@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.49 2015/12/05 20:53:21 markus Exp $ */
d34 3
a36 1
	"diffie-hellman-group-exchange-sha256"
d39 1
d44 1
@


1.49
log
@prefer rsa-sha2-512 over -256 for hostkeys, too; noticed by naddy@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.48 2015/12/04 16:41:28 markus Exp $ */
d63 1
a63 3
	"arcfour256,arcfour128," \
	"aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc," \
	"aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@@lysator.liu.se"
d77 1
a77 10
#define KEX_CLIENT_MAC KEX_SERVER_MAC "," \
	"hmac-md5-etm@@openssh.com," \
	"hmac-ripemd160-etm@@openssh.com," \
	"hmac-sha1-96-etm@@openssh.com," \
	"hmac-md5-96-etm@@openssh.com," \
	"hmac-md5," \
	"hmac-ripemd160," \
	"hmac-ripemd160@@openssh.com," \
	"hmac-sha1-96," \
	"hmac-md5-96"
d79 1
a79 1
#else
@


1.48
log
@implement SHA2-{256,512} for RSASSA-PKCS1-v1_5 signatures (user and host auth)
based on draft-rsa-dsa-sha2-256-03.txt and draft-ssh-ext-info-04.txt;
with & ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.47 2015/07/10 06:21:53 markus Exp $ */
d53 1
a54 1
	"rsa-sha2-512," \
@


1.47
log
@Turn off DSA by default; add HostKeyAlgorithms to the server and
PubkeyAcceptedKeyTypes to the client side, so it still can be
tested or turned back on; feedback and ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.46 2015/07/03 03:47:00 djm Exp $ */
d53 2
@


1.46
log
@turn off 1024 bit diffie-hellman-group1-sha1 key exchange method
(already off in server, this turns it off in the client by default too)
ok dtucker@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.45 2015/07/03 03:43:18 djm Exp $ */
a48 1
	"ssh-dss-cert-v01@@openssh.com," \
d53 1
a53 2
	"ssh-rsa," \
	"ssh-dss"
@


1.45
log
@delete support for legacy v00 certificates; "sure" markus@@ dtucker@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.44 2015/05/27 23:51:10 dtucker Exp $ */
d41 1
a41 2
	"diffie-hellman-group14-sha1," \
	"diffie-hellman-group1-sha1"
@


1.44
log
@Reorder client proposal to prefer diffie-hellman-group-exchange-sha1 over
diffie-hellman-group14-sha1.  ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.43 2015/04/21 07:01:00 jsg Exp $ */
a50 2
	"ssh-rsa-cert-v00@@openssh.com," \
	"ssh-dss-cert-v00@@openssh.com," \
@


1.43
log
@Add back a backslash removed in rev 1.42 so KEX_SERVER_ENCRYPT will
include aes again.

ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.42 2015/03/24 09:17:21 djm Exp $ */
d29 1
a29 1
#define KEX_SERVER_KEX		\
d34 1
a34 2
	"diffie-hellman-group-exchange-sha256," \
	"diffie-hellman-group14-sha1" \
d36 4
a39 1
#define KEX_CLIENT_KEX KEX_SERVER_KEX "," \
d41 1
@


1.42
log
@promote chacha20-poly1305@@openssh.com to be the default cipher;
ok markus
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.41 2014/07/11 13:54:34 tedu Exp $ */
d98 1
a98 1
	"chacha20-poly1305@@openssh.com,"
@


1.41
log
@by popular demand, add back hamc-sha1 to server proposal for better compat
with many clients still in use. ok deraadt
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.40 2014/04/30 19:07:48 naddy Exp $ */
d58 1
d60 1
a60 2
	"aes128-gcm@@openssh.com,aes256-gcm@@openssh.com," \
	"chacha20-poly1305@@openssh.com"
d98 2
a99 2
	"aes128-ctr,aes192-ctr,aes256-ctr," \
	"chacha20-poly1305@@openssh.com"
@


1.40
log
@UMAC can use our local fallback implementation of AES when OpenSSL isn't
available.  Glue code straight from Ted Krovetz's original umac.c.
ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.39 2014/04/29 18:01:49 markus Exp $ */
d72 1
d76 2
a77 1
	"hmac-sha2-512" \
a80 1
	"hmac-sha1-etm@@openssh.com," \
a84 1
	"hmac-sha1," \
d105 1
d109 2
a110 1
	"hmac-sha2-512"
d114 1
a114 3
#define KEX_CLIENT_MAC KEX_SERVER_MAC "," \
	"hmac-sha1-etm@@openssh.com," \
	"hmac-sha1"
@


1.39
log
@make compiling against OpenSSL optional (make OPENSSL=no);
reduces algorithms to curve25519, aes-ctr, chacha, ed25519;
allows us to explore further options; with and ok djm
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.38 2014/03/27 23:01:27 markus Exp $ */
d101 2
d105 2
@


1.38
log
@disable weak proposals in sshd, but keep them in ssh; ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.37 2014/03/26 17:16:26 deraadt Exp $ */
d27 2
d89 24
@


1.37
log
@The current sharing of myproposal[] between both client and server code
makes the previous diff highly unpallatable.  We want to go in that
direction for the server, but not for the client.  Sigh.
Brought up by naddy.
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.35 2013/12/06 13:39:49 markus Exp $ */
d27 1
a27 1
#define KEX_DEFAULT_KEX		\
d33 3
a36 1
	"diffie-hellman-group14-sha1," \
d55 1
a55 1
#define	KEX_DEFAULT_ENCRYPT \
d57 4
a61 2
	"aes128-gcm@@openssh.com,aes256-gcm@@openssh.com," \
	"chacha20-poly1305@@openssh.com," \
d64 2
a65 3
#define	KEX_DEFAULT_MAC \
	"hmac-md5-etm@@openssh.com," \
	"hmac-sha1-etm@@openssh.com," \
d70 8
a82 4
	"umac-64@@openssh.com," \
	"umac-128@@openssh.com," \
	"hmac-sha2-256," \
	"hmac-sha2-512," \
d91 11
d103 10
a112 10
static char *myproposal[PROPOSAL_MAX] = {
	KEX_DEFAULT_KEX,
	KEX_DEFAULT_PK_ALG,
	KEX_DEFAULT_ENCRYPT,
	KEX_DEFAULT_ENCRYPT,
	KEX_DEFAULT_MAC,
	KEX_DEFAULT_MAC,
	KEX_DEFAULT_COMP,
	KEX_DEFAULT_COMP,
	KEX_DEFAULT_LANG,
a113 1
};
@


1.36
log
@trimm default proposals.

This commit removes the weaker pre-SHA2 hashes, the broken ciphers
(arcfour), and the broken modes (CBC) from the default configuration
(the patch only changes the default, all the modes are still available
for the config files).

ok djm@@, reminded by tedu@@ & naddy@@ and discussed with many
@
text
@d33 3
a35 1
	"diffie-hellman-group14-sha1" \
d55 1
d57 3
a59 2
	"chacha20-poly1305@@openssh.com"

d61 2
d67 5
d75 5
a79 1
	"hmac-sha2-512" \
@


1.35
log
@support ed25519 keys (hostkeys and user identities) using the public domain
ed25519 reference code from SUPERCOP, see http://ed25519.cr.yp.to/software.html
feedback, help & ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.34 2013/11/21 00:45:44 djm Exp $ */
d33 1
a33 3
	"diffie-hellman-group-exchange-sha1," \
	"diffie-hellman-group14-sha1," \
	"diffie-hellman-group1-sha1"
a52 1
	"arcfour256,arcfour128," \
d54 2
a55 3
	"chacha20-poly1305@@openssh.com," \
	"aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc," \
	"aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@@lysator.liu.se"
a56 2
	"hmac-md5-etm@@openssh.com," \
	"hmac-sha1-etm@@openssh.com," \
a60 5
	"hmac-ripemd160-etm@@openssh.com," \
	"hmac-sha1-96-etm@@openssh.com," \
	"hmac-md5-96-etm@@openssh.com," \
	"hmac-md5," \
	"hmac-sha1," \
d64 1
a64 5
	"hmac-sha2-512," \
	"hmac-ripemd160," \
	"hmac-ripemd160@@openssh.com," \
	"hmac-sha1-96," \
	"hmac-md5-96"
@


1.34
log
@Add a new protocol 2 transport cipher "chacha20-poly1305@@openssh.com"
that combines Daniel Bernstein's ChaCha20 stream cipher and Poly1305 MAC
to build an authenticated encryption mode.

Inspired by and similar to Adam Langley's proposal for TLS:
http://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-03
but differs in layout used for the MAC calculation and the use of a
second ChaCha20 instance to separately encrypt packet lengths.
Details are in the PROTOCOL.chacha20poly1305 file.

Feedback markus@@, naddy@@; manpage bits Loganden Velvindron @@ AfriNIC
ok markus@@ naddy@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.33 2013/11/02 21:59:15 markus Exp $ */
d41 1
d49 1
@


1.33
log
@use curve25519 for default key exchange (curve25519-sha256@@libssh.org);
initial patch from Aris Adamantiadis; ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.32 2013/01/08 18:49:04 markus Exp $ */
d55 1
@


1.32
log
@support AES-GCM as defined in RFC 5647 (but with simpler KEX handling)
ok and feedback djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.31 2012/12/11 22:31:18 markus Exp $ */
d28 1
@


1.31
log
@add encrypt-then-mac (EtM) modes to openssh by defining new mac algorithms
that change the packet format and compute the MAC over the encrypted
message (including the packet size) instead of the plaintext data;
these EtM modes are considered more secure and used by default.
feedback and ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.30 2012/10/04 13:21:50 markus Exp $ */
d53 1
@


1.30
log
@add umac128 variant; ok djm@@ at n2k12
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.29 2012/06/28 05:07:45 dtucker Exp $ */
d56 9
@


1.29
log
@Remove hmac-sha2-256-96 and hmac-sha2-512-96 MACs since they were removed
from draft6 of the spec and will not be in the RFC when published.  Patch
from mdb at juniper net via bz#2023, ok markus.
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.28 2011/08/02 01:22:11 djm Exp $ */
d59 1
@


1.28
log
@Add new SHA256 and SHA512 based HMAC modes from
http://www.ietf.org/id/draft-dbider-sha2-mac-for-ssh-02.txt

feedback and ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.27 2010/09/01 22:42:13 djm Exp $ */
a59 1
	"hmac-sha2-256-96," \
a60 1
	"hmac-sha2-512-96," \
@


1.27
log
@prefer ECDH in a 256 bit curve field; prompted by naddy@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.26 2010/08/31 11:54:45 djm Exp $ */
d56 8
a63 1
	"hmac-md5,hmac-sha1,umac-64@@openssh.com,hmac-ripemd160," \
d65 3
a67 1
	"hmac-sha1-96,hmac-md5-96"
@


1.26
log
@Implement Elliptic Curve Cryptography modes for key exchange (ECDH) and
host/user keys (ECDSA) as specified by RFC5656. ECDH and ECDSA offer
better performance than plain DH and DSA at the same equivalent symmetric
key length, as well as much shorter keys.

Only the mandatory sections of RFC5656 are implemented, specifically the
three REQUIRED curves nistp256, nistp384 and nistp521 and only ECDH and
ECDSA. Point compression (optional in RFC5656 is NOT implemented).

Certificate host and user keys using the new ECDSA key types are supported.

Note that this code has not been tested for interoperability and may be
subject to change.

feedback and ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.25 2010/04/16 01:47:26 djm Exp $ */
a27 1
	"ecdh-sha2-nistp521," \
d30 1
@


1.25
log
@revised certificate format ssh-{dss,rsa}-cert-v01@@openssh.com with the
following changes:

move the nonce field to the beginning of the certificate where it can
better protect against chosen-prefix attacks on the signature hash

Rename "constraints" field to "critical options"

Add a new non-critical "extensions" field

Add a serial number

The older format is still support for authentication and cert generation
(use "ssh-keygen -t v00 -s ca_key ..." to generate a v00 certificate)

ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.24 2010/02/26 20:29:54 djm Exp $ */
d26 1
d28 3
d35 1
d37 12
a48 5
				"ssh-rsa-cert-v01@@openssh.com," \
				"ssh-dss-cert-v01@@openssh.com," \
				"ssh-rsa-cert-v00@@openssh.com," \
				"ssh-dss-cert-v00@@openssh.com," \
				"ssh-rsa,ssh-dss"
@


1.24
log
@Add support for certificate key types for users and hosts.

OpenSSH certificate key types are not X.509 certificates, but a much
simpler format that encodes a public key, identity information and
some validity constraints and signs it with a CA key. CA keys are
regular SSH keys. This certificate style avoids the attack surface
of X.509 certificates and is very easy to deploy.

Certified host keys allow automatic acceptance of new host keys
when a CA certificate is marked as trusted in ~/.ssh/known_hosts.
see VERIFYING HOST KEYS in ssh(1) for details.

Certified user keys allow authentication of users when the signing
CA key is marked as trusted in authorized_keys. See "AUTHORIZED_KEYS
FILE FORMAT" in sshd(8) for details.

Certificates are minted using ssh-keygen(1), documentation is in
the "CERTIFICATES" section of that manpage.

Documentation on the format of certificates is in the file
PROTOCOL.certkeys

feedback and ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.23 2009/01/23 07:58:11 djm Exp $ */
d31 4
a34 1
#define	KEX_DEFAULT_PK_ALG	"ssh-rsa-cert-v00@@openssh.com," \
@


1.23
log
@prefer CTR modes and revised arcfour (i.e w/ discard) modes to CBC
modes; ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.22 2007/06/07 19:37:34 pvalchev Exp $ */
d31 3
a33 1
#define	KEX_DEFAULT_PK_ALG	"ssh-rsa,ssh-dss"
@


1.22
log
@Add a new MAC algorithm for data integrity, UMAC-64 (not default yet, must
specify umac-64@@openssh.com). Provides about 20% end-to-end speedup
compared to hmac-md5. Represents a different approach to message
authentication to that of HMAC that may be beneficial if HMAC based on one
of its underlying hash algorithms is found to be vulnerable to a new attack.
http://www.ietf.org/rfc/rfc4418.txt

in conjunction with and OK djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.21 2006/03/25 22:22:43 djm Exp $ */
d32 1
d34 2
d37 1
a37 3
	"arcfour128,arcfour256,arcfour," \
	"aes192-cbc,aes256-cbc,rijndael-cbc@@lysator.liu.se," \
	"aes128-ctr,aes192-ctr,aes256-ctr"
@


1.21
log
@standardise spacing in $OpenBSD$ tags; requested by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.20 2006/03/19 18:53:12 deraadt Exp $ */
d38 1
a38 1
	"hmac-md5,hmac-sha1,hmac-ripemd160," \
@


1.20
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.19 2006/03/07 09:07:40 djm Exp $	*/
@


1.19
log
@Implement the diffie-hellman-group-exchange-sha256 key exchange method
using the SHA256 code in libc (and wrapper to make it into an OpenSSL
EVP), interop tested against CVS PuTTY
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.18 2005/07/25 11:59:39 markus Exp $	*/
d29 2
a30 2
 	"diffie-hellman-group14-sha1," \
 	"diffie-hellman-group1-sha1"
@


1.18
log
@add a new compression method that delays compression until the user
has been authenticated successfully and set compression to 'delayed'
for sshd.

this breaks older openssh clients (< 3.5) if they insist on
compression, so you have to re-enable compression in sshd_config.
ok djm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.17 2005/05/23 23:32:46 djm Exp $	*/
d26 5
a30 3
#define KEX_DEFAULT_KEX		"diffie-hellman-group-exchange-sha1," \
	"diffie-hellman-group14-sha1," \
	"diffie-hellman-group1-sha1"
@


1.18.2.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.21 2006/03/25 22:22:43 djm Exp $ */
d26 1
a26 3
#define KEX_DEFAULT_KEX		\
	"diffie-hellman-group-exchange-sha256," \
	"diffie-hellman-group-exchange-sha1," \
@


1.18.4.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: myproposal.h,v 1.21 2006/03/25 22:22:43 djm Exp $ */
d26 1
a26 3
#define KEX_DEFAULT_KEX		\
	"diffie-hellman-group-exchange-sha256," \
	"diffie-hellman-group-exchange-sha1," \
@


1.17
log
@add support for draft-harris-ssh-arcfour-fixes-02 improved arcfour modes;
ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.16 2004/06/13 12:53:24 djm Exp $	*/
d39 1
a39 1
#define	KEX_DEFAULT_COMP	"none,zlib"
@


1.16
log
@implement diffie-hellman-group14-sha1 kex method (trivial extension to
existing diffie-hellman-group1-sha1); ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.15 2003/05/17 04:27:52 markus Exp $	*/
d31 2
a32 1
	"aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,arcfour," \
@


1.16.4.1
log
@upgrade to OpenSSH 4.2
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.18 2005/07/25 11:59:39 markus Exp $	*/
d31 1
a31 2
	"aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc," \
	"arcfour128,arcfour256,arcfour," \
d38 1
a38 1
#define	KEX_DEFAULT_COMP	"none,zlib@@openssh.com,zlib"
@


1.16.2.1
log
@upgrade to OpenSSH 4.2
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.18 2005/07/25 11:59:39 markus Exp $	*/
d31 1
a31 2
	"aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc," \
	"arcfour128,arcfour256,arcfour," \
d38 1
a38 1
#define	KEX_DEFAULT_COMP	"none,zlib@@openssh.com,zlib"
@


1.15
log
@experimental support for aes-ctr modes from
http://www.ietf.org/internet-drafts/draft-ietf-secsh-newmodes-00.txt
ok djm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.14 2002/04/03 09:26:11 markus Exp $	*/
d26 3
a28 1
#define KEX_DEFAULT_KEX		"diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1"
@


1.15.2.1
log
@upgrade to OpenSSH 3.9
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.16 2004/06/13 12:53:24 djm Exp $	*/
d26 1
a26 3
#define KEX_DEFAULT_KEX		"diffie-hellman-group-exchange-sha1," \
	"diffie-hellman-group14-sha1," \
	"diffie-hellman-group1-sha1"
@


1.15.4.1
log
@upgrade to OpenSSH 3.9
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.16 2004/06/13 12:53:24 djm Exp $	*/
d26 1
a26 3
#define KEX_DEFAULT_KEX		"diffie-hellman-group-exchange-sha1," \
	"diffie-hellman-group14-sha1," \
	"diffie-hellman-group1-sha1"
@


1.14
log
@re-add rijndael-cbc@@lysator.liu.se for MacSSH; ash@@lab.poc.net
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.13 2002/01/21 22:30:12 markus Exp $	*/
d30 2
a31 1
	"aes192-cbc,aes256-cbc,rijndael-cbc@@lysator.liu.se"
@


1.14.4.1
log
@upgrade to OpenSSH 3.7
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.15 2003/05/17 04:27:52 markus Exp $	*/
d30 1
a30 2
	"aes192-cbc,aes256-cbc,rijndael-cbc@@lysator.liu.se," \
	"aes128-ctr,aes192-ctr,aes256-ctr"
@


1.14.6.1
log
@upgrade to OpenSSH 3.7
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.15 2003/05/17 04:27:52 markus Exp $	*/
d30 1
a30 2
	"aes192-cbc,aes256-cbc,rijndael-cbc@@lysator.liu.se," \
	"aes128-ctr,aes192-ctr,aes256-ctr"
@


1.14.6.2
log
@upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8
@
text
@@


1.13
log
@remove "rijndael-*", just use "aes-" since this how rijndael is called
in the drafts; ok stevesk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.12 2001/03/05 15:56:16 deraadt Exp $	*/
d30 1
a30 1
	"aes192-cbc,aes256-cbc"
@


1.12
log
@switch to aes128-cbc/hmac-md5 by default in SSH2 -- faster; provos & markus ok
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.11 2001/02/11 12:59:24 markus Exp $	*/
d30 1
a30 3
	"aes192-cbc,aes256-cbc," \
	"rijndael128-cbc,rijndael192-cbc,rijndael256-cbc," \
	"rijndael-cbc@@lysator.liu.se"
@


1.12.2.1
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.13 2002/01/21 22:30:12 markus Exp $	*/
d30 3
a32 1
	"aes192-cbc,aes256-cbc"
@


1.12.2.2
log
@Upgrade to OpenSSH 3.2.3.

Except for improbable compilation error fixes, this should be the last
commit made to the 2.9-STABLE branche. Have fun upgrading.
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.14 2002/04/03 09:26:11 markus Exp $	*/
d30 1
a30 1
	"aes192-cbc,aes256-cbc,rijndael-cbc@@lysator.liu.se"
@


1.12.4.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.13 2002/01/21 22:30:12 markus Exp $	*/
d30 3
a32 1
	"aes192-cbc,aes256-cbc"
@


1.12.4.2
log
@Update OpenSSH to version 3.2.2.
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.14 2002/04/03 09:26:11 markus Exp $	*/
d30 1
a30 1
	"aes192-cbc,aes256-cbc,rijndael-cbc@@lysator.liu.se"
@


1.11
log
@1) clean up the MAC support for SSH-2
2) allow you to specify the MAC with 'ssh -m'
3) or the 'MACs' keyword in ssh(d)_config
4) add hmac-{md5,sha1}-96
	ok stevesk@@, provos@@
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.10 2001/01/29 01:58:17 niklas Exp $	*/
d29 2
a30 2
	"3des-cbc,blowfish-cbc,cast128-cbc,arcfour," \
	"aes128-cbc,aes192-cbc,aes256-cbc," \
d34 1
a34 1
	"hmac-sha1,hmac-md5,hmac-ripemd160," \
@


1.10
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d33 4
a36 1
#define	KEX_DEFAULT_MAC		"hmac-sha1,hmac-md5,hmac-ripemd160@@openssh.com"
@


1.9
log
@add support for RSA to SSH2.  please test.

there are now 3 types of keys: RSA1 is used by ssh-1 only,
RSA and DSA are used by SSH2.

you can use 'ssh-keygen -t rsa -f ssh2_rsa_file' to generate RSA
keys for SSH2 and use the RSA keys for hostkeys or for user keys.

SSH2 RSA or DSA keys are added to .ssh/authorised_keys2 as before.

IdentityFile2, HostDsaKey and DSAAuthentication are obsolete.
you can use multiple IdentityFile and HostKey for all types of keys.

the option DSAAuthentication is replaced by PubkeyAuthetication.
@
text
@d1 2
@


1.8
log
@prefer no compression
@
text
@d25 1
a25 1
#define	KEX_DEFAULT_PK_ALG	"ssh-dss"
@


1.8.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@a0 2
/*	$OpenBSD: myproposal.h,v 1.11 2001/02/11 12:59:24 markus Exp $	*/

d25 1
a25 1
#define	KEX_DEFAULT_PK_ALG	"ssh-rsa,ssh-dss"
d31 1
a31 4
#define	KEX_DEFAULT_MAC \
	"hmac-sha1,hmac-md5,hmac-ripemd160," \
	"hmac-ripemd160@@openssh.com," \
	"hmac-sha1-96,hmac-md5-96"
@


1.8.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.8.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.12 2001/03/05 15:56:16 deraadt Exp $	*/
d29 2
a30 2
	"aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,arcfour," \
	"aes192-cbc,aes256-cbc," \
d34 1
a34 1
	"hmac-md5,hmac-sha1,hmac-ripemd160," \
@


1.8.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@@


1.8.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@@


1.8.2.6
log
@Merge OpenSSH 3.1.
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.13 2002/01/21 22:30:12 markus Exp $	*/
d30 3
a32 1
	"aes192-cbc,aes256-cbc"
@


1.7
log
@rijndael/aes support
@
text
@d32 1
a32 1
#define	KEX_DEFAULT_COMP	"zlib,none"
@


1.6
log
@new cipher framework
@
text
@d26 5
a30 1
#define	KEX_DEFAULT_ENCRYPT	"3des-cbc,blowfish-cbc,cast128-cbc,arcfour"
@


1.5
log
@First rough implementation of the diffie-hellman group exchange.  The
client can ask the server for bigger groups to perform the diffie-hellman
in, thus increasing the attack complexity when using ciphers with longer
keys.  University of Windsor provided network, T the company.
@
text
@d26 1
a26 1
#define	KEX_DEFAULT_ENCRYPT	"3des-cbc,blowfish-cbc,arcfour,cast128-cbc"
@


1.4
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d24 1
a24 1
#define KEX_DEFAULT_KEX		"diffie-hellman-group1-sha1"
@


1.3
log
@split kexinit/kexdh, factor out common code
@
text
@d1 23
@


1.2
log
@complain about invalid ciphers in SSH1 (e.g. arcfour is SSH2 only)
@
text
@d9 1
a9 1
static const char *myproposal[PROPOSAL_MAX] = {
@


1.2.2.1
log
@lovin' CVS... update patch branch to OpenSSH-2.1.1
@
text
@d9 1
a9 1
static char *myproposal[PROPOSAL_MAX] = {
@


1.2.2.2
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@d1 1
a1 24
/*
 * Copyright (c) 2000 Markus Friedl.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#define KEX_DEFAULT_KEX		"diffie-hellman-group-exchange-sha1,diffie-hellman-group1-sha1"
d3 1
a3 5
#define	KEX_DEFAULT_ENCRYPT \
	"3des-cbc,blowfish-cbc,cast128-cbc,arcfour," \
	"aes128-cbc,aes192-cbc,aes256-cbc," \
	"rijndael128-cbc,rijndael192-cbc,rijndael256-cbc," \
	"rijndael-cbc@@lysator.liu.se"
d5 1
a5 1
#define	KEX_DEFAULT_COMP	"none,zlib"
@


1.2.2.3
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@a0 2
/*	$OpenBSD: myproposal.h,v 1.11 2001/02/11 12:59:24 markus Exp $	*/

d25 1
a25 1
#define	KEX_DEFAULT_PK_ALG	"ssh-rsa,ssh-dss"
d31 1
a31 4
#define	KEX_DEFAULT_MAC \
	"hmac-sha1,hmac-md5,hmac-ripemd160," \
	"hmac-ripemd160@@openssh.com," \
	"hmac-sha1-96,hmac-md5-96"
@


1.2.2.4
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: myproposal.h,v 1.12 2001/03/05 15:56:16 deraadt Exp $	*/
d29 2
a30 2
	"aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,arcfour," \
	"aes192-cbc,aes256-cbc," \
d34 1
a34 1
	"hmac-md5,hmac-sha1,hmac-ripemd160," \
@


1.1
log
@ssh2 client implementation, interops w/ ssh.com and lsh servers.
@
text
@d3 1
a3 1
#define	KEX_DEFAULT_ENCRYPT	"blowfish-cbc,3des-cbc,arcfour,cast128-cbc"
@

