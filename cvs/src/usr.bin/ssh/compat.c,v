head	1.100;
access;
symbols
	OPENBSD_6_0:1.99.0.4
	OPENBSD_6_0_BASE:1.99
	OPENBSD_5_9:1.97.0.2
	OPENBSD_5_9_BASE:1.97
	OPENBSD_5_8:1.96.0.2
	OPENBSD_5_8_BASE:1.96
	OPENBSD_5_7:1.87.0.2
	OPENBSD_5_7_BASE:1.87
	OPENBSD_5_6:1.85.0.4
	OPENBSD_5_6_BASE:1.85
	OPENBSD_5_5:1.82.0.4
	OPENBSD_5_5_BASE:1.82
	OPENBSD_5_4:1.81.0.2
	OPENBSD_5_4_BASE:1.81
	OPENBSD_5_3:1.80.0.2
	OPENBSD_5_3_BASE:1.80
	OPENBSD_5_2:1.79.0.4
	OPENBSD_5_2_BASE:1.79
	OPENBSD_5_1_BASE:1.79
	OPENBSD_5_1:1.79.0.2
	OPENBSD_5_0:1.78.0.12
	OPENBSD_5_0_BASE:1.78
	OPENBSD_4_9:1.78.0.10
	OPENBSD_4_9_BASE:1.78
	OPENBSD_4_8:1.78.0.8
	OPENBSD_4_8_BASE:1.78
	OPENBSD_4_7:1.78.0.4
	OPENBSD_4_7_BASE:1.78
	OPENBSD_4_6:1.78.0.6
	OPENBSD_4_6_BASE:1.78
	OPENBSD_4_5:1.78.0.2
	OPENBSD_4_5_BASE:1.78
	OPENBSD_4_4:1.77.0.8
	OPENBSD_4_4_BASE:1.77
	OPENBSD_4_3:1.77.0.6
	OPENBSD_4_3_BASE:1.77
	OPENBSD_4_2:1.77.0.4
	OPENBSD_4_2_BASE:1.77
	OPENBSD_4_1:1.77.0.2
	OPENBSD_4_1_BASE:1.77
	OPENBSD_4_0:1.76.0.4
	OPENBSD_4_0_BASE:1.76
	OPENBSD_3_9:1.71.0.6
	OPENBSD_3_9_BASE:1.71
	OPENBSD_3_8:1.71.0.4
	OPENBSD_3_8_BASE:1.71
	OPENBSD_3_7:1.71.0.2
	OPENBSD_3_7_BASE:1.71
	OPENBSD_3_6:1.70.0.4
	OPENBSD_3_6_BASE:1.70
	OPENBSD_3_5:1.70.0.2
	OPENBSD_3_5_BASE:1.70
	OPENBSD_3_4:1.69.0.2
	OPENBSD_3_4_BASE:1.69
	OPENBSD_3_3:1.65.0.4
	OPENBSD_3_3_BASE:1.65
	OPENBSD_3_2:1.65.0.2
	OPENBSD_3_2_BASE:1.65
	OPENBSD_3_1:1.63.0.2
	OPENBSD_3_1_BASE:1.63
	OPENBSD_3_0:1.53.0.2
	OPENBSD_3_0_BASE:1.53
	OPENBSD_2_9_BASE:1.47
	OPENBSD_2_9:1.47.0.2
	OPENBSD_2_8:1.27.0.2
	OPENBSD_2_8_BASE:1.27
	OPENBSD_2_7:1.13.0.2
	OPENBSD_2_7_BASE:1.13
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.100
date	2017.02.03.23.01.19;	author djm;	state Exp;
branches;
next	1.99;
commitid	0GOZFYpYrdIWnKZ0;

1.99
date	2016.05.24.02.31.57;	author dtucker;	state Exp;
branches;
next	1.98;
commitid	p0g6xWAiuv3pVfcg;

1.98
date	2016.05.23.00.17.27;	author dtucker;	state Exp;
branches;
next	1.97;
commitid	36Rz2te9Py6DTvNJ;

1.97
date	2015.08.19.23.21.42;	author djm;	state Exp;
branches;
next	1.96;
commitid	5nV8MRbaBz6L7qYm;

1.96
date	2015.07.28.23.20.42;	author djm;	state Exp;
branches;
next	1.95;
commitid	OCe7RRtBILBfho5K;

1.95
date	2015.07.13.04.57.14;	author dtucker;	state Exp;
branches;
next	1.94;
commitid	co04JaOjLQGnfTOa;

1.94
date	2015.05.26.23.23.40;	author dtucker;	state Exp;
branches;
next	1.93;
commitid	tyWYnKYZbJa3qfav;

1.93
date	2015.05.06.04.07.18;	author dtucker;	state Exp;
branches;
next	1.92;
commitid	l2bKju3qvg4EUclF;

1.92
date	2015.05.05.10.17.49;	author dtucker;	state Exp;
branches;
next	1.91;
commitid	OsfFMb5FLszFEZxm;

1.91
date	2015.05.04.06.10.48;	author djm;	state Exp;
branches;
next	1.90;
commitid	KfZDG8r2EByk0YBR;

1.90
date	2015.04.13.02.04.08;	author djm;	state Exp;
branches;
next	1.89;
commitid	UnQkGQmy0WhvW7t3;

1.89
date	2015.04.10.05.16.50;	author dtucker;	state Exp;
branches;
next	1.88;
commitid	ik64gItc8q2DmTsj;

1.88
date	2015.04.07.23.00.42;	author djm;	state Exp;
branches;
next	1.87;
commitid	2kHoCatADBtMKBuT;

1.87
date	2015.01.19.20.20.20;	author markus;	state Exp;
branches;
next	1.86;
commitid	LpkFFtLiqWKzX2Ia;

1.86
date	2014.10.08.22.15.27;	author djm;	state Exp;
branches;
next	1.85;
commitid	IPt0N3MzChvGYFdH;

1.85
date	2014.04.20.02.49.32;	author djm;	state Exp;
branches;
next	1.84;

1.84
date	2014.04.19.05.54.59;	author djm;	state Exp;
branches;
next	1.83;

1.83
date	2014.04.18.23.52.25;	author djm;	state Exp;
branches;
next	1.82;

1.82
date	2013.12.30.23.52.27;	author djm;	state Exp;
branches
	1.82.4.1;
next	1.81;

1.81
date	2013.05.17.00.13.13;	author djm;	state Exp;
branches;
next	1.80;

1.80
date	2012.08.17.01.30.00;	author djm;	state Exp;
branches;
next	1.79;

1.79
date	2011.09.23.07.45.05;	author markus;	state Exp;
branches;
next	1.78;

1.78
date	2008.09.11.14.22.37;	author markus;	state Exp;
branches;
next	1.77;

1.77
date	2006.12.12.03.58.42;	author djm;	state Exp;
branches;
next	1.76;

1.76
date	2006.08.03.03.34.42;	author deraadt;	state Exp;
branches;
next	1.75;

1.75
date	2006.07.26.13.57.17;	author stevesk;	state Exp;
branches;
next	1.74;

1.74
date	2006.07.22.20.48.23;	author stevesk;	state Exp;
branches;
next	1.73;

1.73
date	2006.03.25.13.17.01;	author djm;	state Exp;
branches;
next	1.72;

1.72
date	2006.03.19.18.51.18;	author deraadt;	state Exp;
branches;
next	1.71;

1.71
date	2005.03.01.10.09.52;	author djm;	state Exp;
branches
	1.71.4.1
	1.71.6.1;
next	1.70;

1.70
date	2003.11.02.11.01.03;	author markus;	state Exp;
branches
	1.70.2.1
	1.70.4.1;
next	1.69;

1.69
date	2003.08.29.10.03.15;	author markus;	state Exp;
branches
	1.69.2.1;
next	1.68;

1.68
date	2003.08.22.10.56.09;	author markus;	state Exp;
branches;
next	1.67;

1.67
date	2003.04.08.20.21.28;	author itojun;	state Exp;
branches;
next	1.66;

1.66
date	2003.04.01.10.31.26;	author markus;	state Exp;
branches;
next	1.65;

1.65
date	2002.09.27.10.42.09;	author mickey;	state Exp;
branches
	1.65.2.1
	1.65.4.1;
next	1.64;

1.64
date	2002.09.19.14.53.14;	author stevesk;	state Exp;
branches;
next	1.63;

1.63
date	2002.04.10.08.21.47;	author markus;	state Exp;
branches
	1.63.2.1;
next	1.62;

1.62
date	2002.03.25.21.13.51;	author markus;	state Exp;
branches;
next	1.61;

1.61
date	2002.03.06.00.24.39;	author markus;	state Exp;
branches;
next	1.60;

1.60
date	2002.03.06.00.23.27;	author markus;	state Exp;
branches;
next	1.59;

1.59
date	2002.03.06.00.20.54;	author markus;	state Exp;
branches;
next	1.58;

1.58
date	2002.01.21.22.30.12;	author markus;	state Exp;
branches;
next	1.57;

1.57
date	2002.01.13.17.57.37;	author markus;	state Exp;
branches;
next	1.56;

1.56
date	2001.12.19.07.18.56;	author deraadt;	state Exp;
branches;
next	1.55;

1.55
date	2001.12.05.16.54.51;	author markus;	state Exp;
branches;
next	1.54;

1.54
date	2001.12.05.10.06.12;	author deraadt;	state Exp;
branches;
next	1.53;

1.53
date	2001.09.20.13.50.40;	author markus;	state Exp;
branches
	1.53.2.1;
next	1.52;

1.52
date	2001.09.17.21.09.47;	author markus;	state Exp;
branches;
next	1.51;

1.51
date	2001.06.25.08.25.37;	author markus;	state Exp;
branches;
next	1.50;

1.50
date	2001.04.30.16.02.49;	author markus;	state Exp;
branches;
next	1.49;

1.49
date	2001.04.30.15.50.46;	author markus;	state Exp;
branches;
next	1.48;

1.48
date	2001.04.29.19.16.52;	author markus;	state Exp;
branches;
next	1.47;

1.47
date	2001.04.18.23.43.25;	author markus;	state Exp;
branches
	1.47.2.1;
next	1.46;

1.46
date	2001.04.12.19.15.24;	author markus;	state Exp;
branches;
next	1.45;

1.45
date	2001.04.05.11.09.16;	author markus;	state Exp;
branches;
next	1.44;

1.44
date	2001.04.05.10.00.06;	author markus;	state Exp;
branches;
next	1.43;

1.43
date	2001.04.04.15.50.55;	author markus;	state Exp;
branches;
next	1.42;

1.42
date	2001.03.27.17.46.49;	author provos;	state Exp;
branches;
next	1.41;

1.41
date	2001.03.27.10.57.00;	author markus;	state Exp;
branches;
next	1.40;

1.40
date	2001.03.23.11.04.06;	author djm;	state Exp;
branches;
next	1.39;

1.39
date	2001.03.18.23.30.55;	author deraadt;	state Exp;
branches;
next	1.38;

1.38
date	2001.03.10.15.31.00;	author deraadt;	state Exp;
branches;
next	1.37;

1.37
date	2001.03.08.21.42.31;	author markus;	state Exp;
branches;
next	1.36;

1.36
date	2001.02.27.11.00.11;	author markus;	state Exp;
branches;
next	1.35;

1.35
date	2001.02.19.09.53.31;	author markus;	state Exp;
branches;
next	1.34;

1.34
date	2001.01.21.19.05.48;	author markus;	state Exp;
branches;
next	1.33;

1.33
date	2001.01.08.22.29.05;	author markus;	state Exp;
branches;
next	1.32;

1.32
date	2000.12.09.23.51.11;	author provos;	state Exp;
branches;
next	1.31;

1.31
date	2000.12.06.22.58.14;	author markus;	state Exp;
branches;
next	1.30;

1.30
date	2000.12.03.11.29.04;	author markus;	state Exp;
branches;
next	1.29;

1.29
date	2000.12.03.11.27.55;	author markus;	state Exp;
branches;
next	1.28;

1.28
date	2000.12.03.11.15.03;	author markus;	state Exp;
branches;
next	1.27;

1.27
date	2000.10.31.09.31.58;	author markus;	state Exp;
branches
	1.27.2.1;
next	1.26;

1.26
date	2000.10.26.18.38.28;	author markus;	state Exp;
branches;
next	1.25;

1.25
date	2000.10.14.12.16.56;	author markus;	state Exp;
branches;
next	1.24;

1.24
date	2000.10.10.20.20.45;	author markus;	state Exp;
branches;
next	1.23;

1.23
date	2000.09.07.21.13.37;	author markus;	state Exp;
branches;
next	1.22;

1.22
date	2000.09.07.20.27.50;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2000.08.27.18.18.04;	author markus;	state Exp;
branches;
next	1.20;

1.20
date	2000.08.26.10.33.43;	author markus;	state Exp;
branches;
next	1.19;

1.19
date	2000.07.09.01.27.32;	author ho;	state Exp;
branches;
next	1.18;

1.18
date	2000.07.08.23.17.31;	author provos;	state Exp;
branches;
next	1.17;

1.17
date	2000.06.20.01.39.40;	author markus;	state Exp;
branches;
next	1.16;

1.16
date	2000.06.19.00.50.11;	author markus;	state Exp;
branches;
next	1.15;

1.15
date	2000.06.18.03.00.27;	author markus;	state Exp;
branches;
next	1.14;

1.14
date	2000.05.22.18.42.01;	author markus;	state Exp;
branches;
next	1.13;

1.13
date	2000.05.08.17.42.24;	author markus;	state Exp;
branches
	1.13.2.1;
next	1.12;

1.12
date	2000.04.26.20.56.29;	author markus;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.14.10.30.31;	author markus;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.12.07.45.43;	author markus;	state Exp;
branches;
next	1.9;

1.9
date	2000.04.12.06.37.02;	author markus;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.07.09.17.39;	author markus;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.04.15.19.42;	author markus;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.03.07.07.15;	author markus;	state Exp;
branches;
next	1.5;

1.5
date	99.11.24.16.15.24;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	99.11.23.22.25.53;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	99.11.22.21.02.38;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	99.10.16.22.29.01;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	99.10.16.20.47.13;	author markus;	state Exp;
branches;
next	;

1.13.2.1
date	2000.06.12.02.37.33;	author jason;	state Exp;
branches;
next	1.13.2.2;

1.13.2.2
date	2000.09.01.18.23.19;	author jason;	state Exp;
branches;
next	1.13.2.3;

1.13.2.3
date	2000.11.08.21.30.38;	author jason;	state Exp;
branches;
next	1.13.2.4;

1.13.2.4
date	2001.03.12.15.44.09;	author jason;	state Exp;
branches;
next	1.13.2.5;

1.13.2.5
date	2001.03.21.18.52.42;	author jason;	state Exp;
branches;
next	;

1.27.2.1
date	2001.02.16.20.12.59;	author jason;	state Exp;
branches;
next	1.27.2.2;

1.27.2.2
date	2001.02.19.17.18.49;	author jason;	state Exp;
branches;
next	1.27.2.3;

1.27.2.3
date	2001.03.21.19.46.24;	author jason;	state Exp;
branches;
next	1.27.2.4;

1.27.2.4
date	2001.05.07.21.09.28;	author jason;	state Exp;
branches;
next	1.27.2.5;

1.27.2.5
date	2001.09.27.00.15.41;	author miod;	state Exp;
branches;
next	1.27.2.6;

1.27.2.6
date	2002.03.08.17.04.42;	author brad;	state Exp;
branches;
next	;

1.47.2.1
date	2001.09.27.19.03.54;	author jason;	state Exp;
branches;
next	1.47.2.2;

1.47.2.2
date	2002.03.09.00.20.44;	author miod;	state Exp;
branches;
next	1.47.2.3;

1.47.2.3
date	2002.06.02.22.56.10;	author miod;	state Exp;
branches;
next	;

1.53.2.1
date	2002.03.07.17.37.46;	author jason;	state Exp;
branches;
next	1.53.2.2;

1.53.2.2
date	2002.05.17.00.03.23;	author miod;	state Exp;
branches;
next	1.53.2.3;

1.53.2.3
date	2002.10.11.14.53.06;	author miod;	state Exp;
branches;
next	;

1.63.2.1
date	2002.10.11.14.51.52;	author miod;	state Exp;
branches;
next	1.63.2.2;

1.63.2.2
date	2003.04.03.22.35.17;	author miod;	state Exp;
branches;
next	;

1.65.2.1
date	2003.04.03.23.27.12;	author margarida;	state Exp;
branches;
next	1.65.2.2;

1.65.2.2
date	2003.09.16.21.20.25;	author brad;	state Exp;
branches;
next	;

1.65.4.1
date	2003.05.11.12.01.52;	author margarida;	state Exp;
branches;
next	1.65.4.2;

1.65.4.2
date	2003.09.16.20.50.43;	author brad;	state Exp;
branches;
next	1.65.4.3;

1.65.4.3
date	2004.03.04.18.18.15;	author brad;	state Exp;
branches;
next	;

1.69.2.1
date	2004.02.28.03.51.33;	author brad;	state Exp;
branches;
next	;

1.70.2.1
date	2005.03.10.17.15.04;	author brad;	state Exp;
branches;
next	;

1.70.4.1
date	2005.03.10.16.28.27;	author brad;	state Exp;
branches;
next	;

1.71.4.1
date	2006.10.06.03.19.32;	author brad;	state Exp;
branches;
next	;

1.71.6.1
date	2006.09.30.04.06.50;	author brad;	state Exp;
branches;
next	;

1.82.4.1
date	2014.04.21.00.30.48;	author djm;	state Exp;
branches;
next	;


desc
@@


1.100
log
@support =- for removing methods from algorithms lists, e.g.
Ciphers=-*cbc; suggested by Cristian Ionescu-Idbohrn in bz#2671
"I like it" markus@@
@
text
@/* $OpenBSD: compat.c,v 1.99 2016/05/24 02:31:57 dtucker Exp $ */
/*
 * Copyright (c) 1999, 2000, 2001, 2002 Markus Friedl.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>

#include <stdlib.h>
#include <string.h>
#include <stdarg.h>

#include "xmalloc.h"
#include "buffer.h"
#include "packet.h"
#include "compat.h"
#include "log.h"
#include "match.h"
#include "kex.h"

int compat13 = 0;
int compat20 = 0;
int datafellows = 0;

void
enable_compat20(void)
{
	if (compat20)
		return;
	debug("Enabling compatibility mode for protocol 2.0");
	compat20 = 1;
}
void
enable_compat13(void)
{
	debug("Enabling compatibility mode for protocol 1.3");
	compat13 = 1;
}
/* datafellows bug compatibility */
u_int
compat_datafellows(const char *version)
{
	int i;
	static struct {
		char	*pat;
		int	bugs;
	} check[] = {
		{ "OpenSSH-2.0*,"
		  "OpenSSH-2.1*,"
		  "OpenSSH_2.1*,"
		  "OpenSSH_2.2*",	SSH_OLD_SESSIONID|SSH_BUG_BANNER|
					SSH_OLD_DHGEX|SSH_BUG_NOREKEY|
					SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
		{ "OpenSSH_2.3.0*",	SSH_BUG_BANNER|SSH_BUG_BIGENDIANAES|
					SSH_OLD_DHGEX|SSH_BUG_NOREKEY|
					SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
		{ "OpenSSH_2.3.*",	SSH_BUG_BIGENDIANAES|SSH_OLD_DHGEX|
					SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
					SSH_OLD_FORWARD_ADDR},
		{ "OpenSSH_2.5.0p1*,"
		  "OpenSSH_2.5.1p1*",
					SSH_BUG_BIGENDIANAES|SSH_OLD_DHGEX|
					SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
					SSH_OLD_FORWARD_ADDR},
		{ "OpenSSH_2.5.0*,"
		  "OpenSSH_2.5.1*,"
		  "OpenSSH_2.5.2*",	SSH_OLD_DHGEX|SSH_BUG_NOREKEY|
					SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
		{ "OpenSSH_2.5.3*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
					SSH_OLD_FORWARD_ADDR},
		{ "OpenSSH_2.*,"
		  "OpenSSH_3.0*,"
		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
		{ "OpenSSH_3.*",	SSH_OLD_FORWARD_ADDR },
		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
		{ "OpenSSH_4*",		0 },
		{ "OpenSSH_5*",		SSH_NEW_OPENSSH|SSH_BUG_DYNAMIC_RPORT},
		{ "OpenSSH_6.6.1*",	SSH_NEW_OPENSSH},
		{ "OpenSSH_6.5*,"
		  "OpenSSH_6.6*",	SSH_NEW_OPENSSH|SSH_BUG_CURVE25519PAD},
		{ "OpenSSH*",		SSH_NEW_OPENSSH },
		{ "*MindTerm*",		0 },
		{ "2.1.0*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG|
					SSH_BUG_RSASIGMD5|SSH_BUG_HBSERVICE|
					SSH_BUG_FIRSTKEX },
		{ "2.1 *",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG|
					SSH_BUG_RSASIGMD5|SSH_BUG_HBSERVICE|
					SSH_BUG_FIRSTKEX },
		{ "2.0.13*,"
		  "2.0.14*,"
		  "2.0.15*,"
		  "2.0.16*,"
		  "2.0.17*,"
		  "2.0.18*,"
		  "2.0.19*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG|
					SSH_BUG_PKSERVICE|SSH_BUG_X11FWD|
					SSH_BUG_PKOK|SSH_BUG_RSASIGMD5|
					SSH_BUG_HBSERVICE|SSH_BUG_OPENFAILURE|
					SSH_BUG_DUMMYCHAN|SSH_BUG_FIRSTKEX },
		{ "2.0.11*,"
		  "2.0.12*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG|
					SSH_BUG_PKSERVICE|SSH_BUG_X11FWD|
					SSH_BUG_PKAUTH|SSH_BUG_PKOK|
					SSH_BUG_RSASIGMD5|SSH_BUG_OPENFAILURE|
					SSH_BUG_DUMMYCHAN|SSH_BUG_FIRSTKEX },
		{ "2.0.*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG|
					SSH_BUG_PKSERVICE|SSH_BUG_X11FWD|
					SSH_BUG_PKAUTH|SSH_BUG_PKOK|
					SSH_BUG_RSASIGMD5|SSH_BUG_OPENFAILURE|
					SSH_BUG_DERIVEKEY|SSH_BUG_DUMMYCHAN|
					SSH_BUG_FIRSTKEX },
		{ "2.2.0*,"
		  "2.3.0*",		SSH_BUG_HMAC|SSH_BUG_DEBUG|
					SSH_BUG_RSASIGMD5|SSH_BUG_FIRSTKEX },
		{ "2.3.*",		SSH_BUG_DEBUG|SSH_BUG_RSASIGMD5|
					SSH_BUG_FIRSTKEX },
		{ "2.4",		SSH_OLD_SESSIONID },	/* Van Dyke */
		{ "2.*",		SSH_BUG_DEBUG|SSH_BUG_FIRSTKEX|
					SSH_BUG_RFWD_ADDR },
		{ "3.0.*",		SSH_BUG_DEBUG },
		{ "3.0 SecureCRT*",	SSH_OLD_SESSIONID },
		{ "1.7 SecureFX*",	SSH_OLD_SESSIONID },
		{ "1.2.18*,"
		  "1.2.19*,"
		  "1.2.20*,"
		  "1.2.21*,"
		  "1.2.22*",		SSH_BUG_IGNOREMSG },
		{ "1.3.2*",		/* F-Secure */
					SSH_BUG_IGNOREMSG },
		{ "Cisco-1.*",		SSH_BUG_DHGEX_LARGE|
					SSH_BUG_HOSTKEYS },
		{ "*SSH Compatible Server*",			/* Netscreen */
					SSH_BUG_PASSWORDPAD },
		{ "*OSU_0*,"
		  "OSU_1.0*,"
		  "OSU_1.1*,"
		  "OSU_1.2*,"
		  "OSU_1.3*,"
		  "OSU_1.4*,"
		  "OSU_1.5alpha1*,"
		  "OSU_1.5alpha2*,"
		  "OSU_1.5alpha3*",	SSH_BUG_PASSWORDPAD },
		{ "*SSH_Version_Mapper*",
					SSH_BUG_SCANNER },
		{ "PuTTY_Local:*,"	/* dev versions < Sep 2014 */
		  "PuTTY-Release-0.5*," /* 0.50-0.57, DH-GEX in >=0.52 */
		  "PuTTY_Release_0.5*,"	/* 0.58-0.59 */
		  "PuTTY_Release_0.60*,"
		  "PuTTY_Release_0.61*,"
		  "PuTTY_Release_0.62*,"
		  "PuTTY_Release_0.63*,"
		  "PuTTY_Release_0.64*",
					SSH_OLD_DHGEX },
		{ "FuTTY*",		SSH_OLD_DHGEX }, /* Putty Fork */
		{ "Probe-*",
					SSH_BUG_PROBE },
		{ "TeraTerm SSH*,"
		  "TTSSH/1.5.*,"
		  "TTSSH/2.1*,"
		  "TTSSH/2.2*,"
		  "TTSSH/2.3*,"
		  "TTSSH/2.4*,"
		  "TTSSH/2.5*,"
		  "TTSSH/2.6*,"
		  "TTSSH/2.70*,"
		  "TTSSH/2.71*,"
		  "TTSSH/2.72*",	SSH_BUG_HOSTKEYS },
		{ "WinSCP_release_4*,"
		  "WinSCP_release_5.0*,"
		  "WinSCP_release_5.1*,"
		  "WinSCP_release_5.5*,"
		  "WinSCP_release_5.6*,"
		  "WinSCP_release_5.7,"
		  "WinSCP_release_5.7.1,"
		  "WinSCP_release_5.7.2,"
		  "WinSCP_release_5.7.3,"
		  "WinSCP_release_5.7.4",
					SSH_OLD_DHGEX },
		{ NULL,			0 }
	};

	/* process table, return first match */
	for (i = 0; check[i].pat; i++) {
		if (match_pattern_list(version, check[i].pat, 0) == 1) {
			debug("match: %s pat %s compat 0x%08x",
			    version, check[i].pat, check[i].bugs);
			datafellows = check[i].bugs;	/* XXX for now */
			return check[i].bugs;
		}
	}
	debug("no match: %s", version);
	return 0;
}

#define	SEP	","
int
proto_spec(const char *spec)
{
	char *s, *p, *q;
	int ret = SSH_PROTO_UNKNOWN;

	if (spec == NULL)
		return ret;
	q = s = strdup(spec);
	if (s == NULL)
		return ret;
	for ((p = strsep(&q, SEP)); p && *p != '\0'; (p = strsep(&q, SEP))) {
		switch (atoi(p)) {
		case 1:
#ifdef WITH_SSH1
			if (ret == SSH_PROTO_UNKNOWN)
				ret |= SSH_PROTO_1_PREFERRED;
			ret |= SSH_PROTO_1;
#endif
			break;
		case 2:
			ret |= SSH_PROTO_2;
			break;
		default:
			logit("ignoring bad proto spec: '%s'.", p);
			break;
		}
	}
	free(s);
	return ret;
}

char *
compat_cipher_proposal(char *cipher_prop)
{
	if (!(datafellows & SSH_BUG_BIGENDIANAES))
		return cipher_prop;
	debug2("%s: original cipher proposal: %s", __func__, cipher_prop);
	if ((cipher_prop = match_filter_list(cipher_prop, "aes*")) == NULL)
		fatal("match_filter_list failed");
	debug2("%s: compat cipher proposal: %s", __func__, cipher_prop);
	if (*cipher_prop == '\0')
		fatal("No supported ciphers found");
	return cipher_prop;
}

char *
compat_pkalg_proposal(char *pkalg_prop)
{
	if (!(datafellows & SSH_BUG_RSASIGMD5))
		return pkalg_prop;
	debug2("%s: original public key proposal: %s", __func__, pkalg_prop);
	if ((pkalg_prop = match_filter_list(pkalg_prop, "ssh-rsa")) == NULL)
		fatal("match_filter_list failed");
	debug2("%s: compat public key proposal: %s", __func__, pkalg_prop);
	if (*pkalg_prop == '\0')
		fatal("No supported PK algorithms found");
	return pkalg_prop;
}

char *
compat_kex_proposal(char *p)
{
	if ((datafellows & (SSH_BUG_CURVE25519PAD|SSH_OLD_DHGEX)) == 0)
		return p;
	debug2("%s: original KEX proposal: %s", __func__, p);
	if ((datafellows & SSH_BUG_CURVE25519PAD) != 0)
		if ((p = match_filter_list(p,
		    "curve25519-sha256@@libssh.org")) == NULL)
			fatal("match_filter_list failed");
	if ((datafellows & SSH_OLD_DHGEX) != 0) {
		if ((p = match_filter_list(p,
		    "diffie-hellman-group-exchange-sha256,"
		    "diffie-hellman-group-exchange-sha1")) == NULL)
			fatal("match_filter_list failed");
	}
	debug2("%s: compat KEX proposal: %s", __func__, p);
	if (*p == '\0')
		fatal("No supported key exchange algorithms found");
	return p;
}

@


1.99
log
@Back out 'plug memleak'.
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.97 2015/08/19 23:21:42 djm Exp $ */
d38 1
a251 29
/*
 * Filters a proposal string, excluding any algorithm matching the 'filter'
 * pattern list.
 */
static char *
filter_proposal(char *proposal, const char *filter)
{
	Buffer b;
	char *orig_prop, *fix_prop;
	char *cp, *tmp;

	buffer_init(&b);
	tmp = orig_prop = xstrdup(proposal);
	while ((cp = strsep(&tmp, ",")) != NULL) {
		if (match_pattern_list(cp, filter, 0) != 1) {
			if (buffer_len(&b) > 0)
				buffer_append(&b, ",", 1);
			buffer_append(&b, cp, strlen(cp));
		} else
			debug2("Compat: skipping algorithm \"%s\"", cp);
	}
	buffer_append(&b, "\0", 1);
	fix_prop = xstrdup((char *)buffer_ptr(&b));
	buffer_free(&b);
	free(orig_prop);

	return fix_prop;
}

d258 2
a259 1
	cipher_prop = filter_proposal(cipher_prop, "aes*");
d272 2
a273 1
	pkalg_prop = filter_proposal(pkalg_prop, "ssh-rsa");
d287 3
a289 1
		p = filter_proposal(p, "curve25519-sha256@@libssh.org");
d291 4
a294 2
		p = filter_proposal(p, "diffie-hellman-group-exchange-sha256");
		p = filter_proposal(p, "diffie-hellman-group-exchange-sha1");
@


1.98
log
@Plug mem leak in filter_proposal.  ok djm@@
@
text
@d253 1
a253 1
 * pattern list.  Returns a new string and frees the original proposal.
a275 1
	free(proposal);
@


1.97
log
@Better compat matching for WinSCP, add compat matching for
FuTTY (fork of PuTTY); ok markus@@ deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.96 2015/07/28 23:20:42 djm Exp $ */
d253 1
a253 1
 * pattern list.
d276 1
@


1.96
log
@add Cisco to the list of clients that choke on the hostkeys update
extension. Pointed out by Howard Kash
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.95 2015/07/13 04:57:14 dtucker Exp $ */
d177 1
d191 11
a201 1
		{ "WinSCP*",		SSH_OLD_DHGEX },
@


1.95
log
@Add "PuTTY_Local:" to the clients to which we do not offer DH-GEX.
This was the string that was used for development versions prior to
September 2014 and they don't do RFC4419 DH-GEX, but unfortunately there
are some extant products based on those versions.  bx2424 from Jay Rouman,
ok markus@@ djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.94 2015/05/26 23:23:40 dtucker Exp $ */
d153 2
a154 1
		{ "Cisco-1.*",		SSH_BUG_DHGEX_LARGE },
@


1.94
log
@Cap DH-GEX group size at 4kbits for Cisco implementations.  Some of them
will choke when asked for preferred sizes >4k instead of returning the 4k
group that they do have.  bz#2209, ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.93 2015/05/06 04:07:18 dtucker Exp $ */
d167 2
a168 1
		{ "PuTTY-Release-0.5*," /* 0.50-0.57, DH-GEX in >=0.52 */
@


1.93
log
@Blacklist DH-GEX for specific PuTTY versions known to send non-RFC4419
DH-GEX messages rather than all versions of PuTTY.  According to Simon
Tatham, 0.65 and newer versions will send RFC4419 DH-GEX messages.  ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.92 2015/05/05 10:17:49 dtucker Exp $ */
d153 1
@


1.92
log
@WinSCP doesn't implement RFC4419 DH-GEX so flag it so we don't offer that
KEX method.  ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.91 2015/05/04 06:10:48 djm Exp $ */
d166 8
a173 1
		{ "PuTTY*",		SSH_OLD_DHGEX },
@


1.91
log
@Remove pattern length argument from match_pattern_list(),
we only ever use it for strlen(pattern).

Prompted by hanno AT hboeck.de pointing an out-of-bound read
error caused by an incorrect pattern length found using AFL
and his own tools.

ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.90 2015/04/13 02:04:08 djm Exp $ */
d180 1
@


1.90
log
@deprecate ancient, pre-RFC4419 and undocumented
SSH2_MSG_KEX_DH_GEX_REQUEST_OLD message;
ok markus@@ deraadt@@ "seems reasonable" dtucker@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.89 2015/04/10 05:16:50 dtucker Exp $ */
d185 1
a185 2
		if (match_pattern_list(version, check[i].pat,
		    strlen(check[i].pat), 0) == 1) {
d243 1
a243 1
		if (match_pattern_list(cp, filter, strlen(cp), 0) != 1) {
@


1.89
log
@Don't send hostkey advertisments (hostkeys-00@@openssh.com) to current
versions of Tera Term as they can't handle them.  Newer versions should
be OK.  Patch from Bryan Drewery and IWAMOTO Kouichi, ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.88 2015/04/07 23:00:42 djm Exp $ */
d166 1
d286 1
a286 1
compat_kex_proposal(char *kex_prop)
d288 11
a298 6
	if (!(datafellows & SSH_BUG_CURVE25519PAD))
		return kex_prop;
	debug2("%s: original KEX proposal: %s", __func__, kex_prop);
	kex_prop = filter_proposal(kex_prop, "curve25519-sha256@@libssh.org");
	debug2("%s: compat KEX proposal: %s", __func__, kex_prop);
	if (*kex_prop == '\0')
d300 1
a300 1
	return kex_prop;
@


1.88
log
@treat Protocol=1,2|2,1 as Protocol=2 when compiled without SSH1
support; ok dtucker@@ millert@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.87 2015/01/19 20:20:20 markus Exp $ */
d168 11
@


1.87
log
@store compat flags in struct ssh; ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.86 2014/10/08 22:15:27 djm Exp $ */
d200 1
d204 1
@


1.86
log
@another -Wpointer-sign from clang
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.85 2014/04/20 02:49:32 djm Exp $ */
d58 1
a58 1
void
a174 1
			datafellows = check[i].bugs;
d176 3
a178 2
			    version, check[i].pat, datafellows);
			return;
d182 1
d194 3
a196 1
	q = s = xstrdup(spec);
@


1.85
log
@add a canonical 6.6 + curve25519 bignum fix fake version that I can
recommend people use ahead of the openssh-6.7 release
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.84 2014/04/19 05:54:59 djm Exp $ */
d235 1
a235 1
	fix_prop = xstrdup(buffer_ptr(&b));
@


1.84
log
@missing wildcard; pointed out by naddy@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.83 2014/04/18 23:52:25 djm Exp $ */
d96 1
@


1.83
log
@OpenSSH 6.5 and 6.6 have a bug that causes ~0.2% of connections
using the curve25519-sha256@@libssh.org KEX exchange method to fail
when connecting with something that implements the spec properly.

Disable this KEX method when speaking to one of the affected
versions.

reported by Aris Adamantiadis; ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.82 2013/12/30 23:52:27 djm Exp $ */
d97 1
a97 1
		  "OpenSSH_6.6",	SSH_NEW_OPENSSH|SSH_BUG_CURVE25519PAD},
@


1.82
log
@refuse RSA keys from old proprietary clients/servers that use the
obsolete RSA+MD5 signature scheme. it will still be possible to connect
with these clients/servers but only DSA keys will be accepted, and we'll
deprecate them entirely in a future release. ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.81 2013/05/17 00:13:13 djm Exp $ */
d96 2
a253 1

d265 13
@


1.82.4.1
log
@MFC:

reliability fix for OpenSSH using curve25519-sha256@@libssh.org key
exchange method.

revision 1.71
date: 2014/04/18 23:52:25;  author: djm;  state: Exp;  lines: +2 -2;
OpenSSH 6.5 and 6.6 have a bug that causes ~0.2% of connections
using the curve25519-sha256@@libssh.org KEX exchange method to fail
when connecting with something that implements the spec properly.

Disable this KEX method when speaking to one of the affected
versions.

revision 1.57
date: 2014/04/16 23:22:45;  author: djm;  state: Exp;  lines: +4 -1;
skip leading zero bytes in buffer_put_bignum2_from_string();
reported by jan AT mojzis.com; ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.82 2013/12/30 23:52:27 djm Exp $ */
a95 3
		{ "OpenSSH_6.6.1*",	SSH_NEW_OPENSSH},
		{ "OpenSSH_6.5*,"
		  "OpenSSH_6.6*",	SSH_NEW_OPENSSH|SSH_BUG_CURVE25519PAD},
d252 1
a263 13
}

char *
compat_kex_proposal(char *kex_prop)
{
	if (!(datafellows & SSH_BUG_CURVE25519PAD))
		return kex_prop;
	debug2("%s: original KEX proposal: %s", __func__, kex_prop);
	kex_prop = filter_proposal(kex_prop, "curve25519-sha256@@libssh.org");
	debug2("%s: compat KEX proposal: %s", __func__, kex_prop);
	if (*kex_prop == '\0')
		fatal("No supported key exchange algorithms found");
	return kex_prop;
@


1.81
log
@bye, bye xfree(); ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.80 2012/08/17 01:30:00 djm Exp $ */
a171 1
			debug("match: %s pat %s", version, check[i].pat);
d173 2
d210 6
a215 2
char *
compat_cipher_proposal(char *cipher_prop)
d218 1
a218 1
	char *orig_prop, *fix_ciphers;
a220 3
	if (!(datafellows & SSH_BUG_BIGENDIANAES))
		return(cipher_prop);

d222 1
a222 1
	tmp = orig_prop = xstrdup(cipher_prop);
d224 1
a224 1
		if (strncmp(cp, "aes", 3) != 0) {
d228 2
a229 1
		}
d232 1
a232 1
	fix_ciphers = xstrdup(buffer_ptr(&b));
a234 4
	debug2("Original cipher proposal: %s", cipher_prop);
	debug2("Compat cipher proposal: %s", fix_ciphers);
	if (!*fix_ciphers)
		fatal("No available ciphers found.");
d236 1
a236 1
	return(fix_ciphers);
d238 28
@


1.80
log
@Send client banner immediately, rather than waiting for the server to
move first for SSH protocol 2 connections (the default). Patch based on
one in bz#1999 by tls AT panix.com, feedback dtucker@@ ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.79 2011/09/23 07:45:05 markus Exp $ */
d205 1
a205 1
	xfree(s);
d231 1
a231 1
	xfree(orig_prop);
@


1.79
log
@unbreak remote portforwarding with dynamic allocated listen ports:
1) send the actual listen port in the open message (instead of 0).
   this allows multiple forwardings with a dynamic listen port
2) update the matching permit-open entry, so we can identify where
   to connect to
report: den at skbkontur.ru and P. Szczygielski
feedback and ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.78 2008/09/11 14:22:37 markus Exp $ */
d46 2
@


1.78
log
@only send eow and no-more-sessions requests to openssh 5 and newer;
fixes interop problems with broken ssh v2 implementations; ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.77 2006/12/12 03:58:42 djm Exp $ */
d93 1
@


1.77
log
@bz #1019: some ssh.com versions apparently can't cope with the remote port
forwarding bind_address being a hostname, so send them an address for cases
where they are not explicitly specified (wildcard or localhost bind).
reported by daveroth AT acm.org; ok dtucker@@ deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.76 2006/08/03 03:34:42 deraadt Exp $ */
d92 2
a93 1
		{ "OpenSSH*",		0 },
@


1.76
log
@almost entirely get rid of the culture of ".h files that include .h files"
ok djm, sort of ok stevesk
makes the pain stop in one easy step
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.75 2006/07/26 13:57:17 stevesk Exp $ */
d134 2
a135 1
		{ "2.*",		SSH_BUG_DEBUG|SSH_BUG_FIRSTKEX },
@


1.75
log
@move #include <stdlib.h> out of includes.h
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.74 2006/07/22 20:48:23 stevesk Exp $ */
d26 1
a26 1
#include "includes.h"
d30 1
d32 1
a34 1
#include "xmalloc.h"
@


1.74
log
@move #include <string.h> out of includes.h
@
text
@d1 1
a1 1
/* $OpenBSD: compat.c,v 1.73 2006/03/25 13:17:01 djm Exp $ */
d28 1
@


1.73
log
@Put $OpenBSD$ tags back (as comments) to replace the RCSID()s that
Theo nuked - our scripts to sync -portable need them in the files
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d27 2
@


1.72
log
@RCSID() can die
@
text
@d1 1
@


1.71
log
@bz#413: allow optional specification of bind address for port forwardings.
Patch originally by Dan Astorian, but worked on by several people
Adds GatewayPorts=clientspecified option on server to allow remote forwards
to bind to client-specified ports.

ok markus@@
@
text
@a25 1
RCSID("$OpenBSD: compat.c,v 1.70 2003/11/02 11:01:03 markus Exp $");
@


1.71.4.1
log
@upgrade to OpenSSH 4.4
@
text
@a0 1
/* $OpenBSD: compat.c,v 1.76 2006/08/03 03:34:42 deraadt Exp $ */
d25 2
a26 1
#include <sys/types.h>
a27 5
#include <stdlib.h>
#include <string.h>
#include <stdarg.h>

#include "xmalloc.h"
d30 1
@


1.71.6.1
log
@upgrade to OpenSSH 4.4
@
text
@a0 1
/* $OpenBSD: compat.c,v 1.76 2006/08/03 03:34:42 deraadt Exp $ */
d25 2
a26 1
#include <sys/types.h>
a27 5
#include <stdlib.h>
#include <string.h>
#include <stdarg.h>

#include "xmalloc.h"
d30 1
@


1.70
log
@remove support for SSH_BUG_GSSAPI_BER; simon@@sxw.org.uk
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.69 2003/08/29 10:03:15 markus Exp $");
d65 1
a65 1
					SSH_BUG_EXTEOF},
d68 1
a68 1
					SSH_BUG_EXTEOF},
d70 2
a71 1
					SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
d75 2
a76 1
					SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
d80 3
a82 2
					SSH_BUG_EXTEOF},
		{ "OpenSSH_2.5.3*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
d85 2
a86 1
		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF},
@


1.70.2.1
log
@upgrade to OpenSSH 4.0
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.71 2005/03/01 10:09:52 djm Exp $");
d65 1
a65 1
					SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
d68 1
a68 1
					SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
d70 1
a70 2
					SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
					SSH_OLD_FORWARD_ADDR},
d74 1
a74 2
					SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
					SSH_OLD_FORWARD_ADDR},
d78 2
a79 3
					SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
		{ "OpenSSH_2.5.3*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
					SSH_OLD_FORWARD_ADDR},
d82 1
a82 2
		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
		{ "OpenSSH_3.*",	SSH_OLD_FORWARD_ADDR },
@


1.70.4.1
log
@upgrade to OpenSSH 4.0
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.71 2005/03/01 10:09:52 djm Exp $");
d65 1
a65 1
					SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
d68 1
a68 1
					SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
d70 1
a70 2
					SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
					SSH_OLD_FORWARD_ADDR},
d74 1
a74 2
					SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
					SSH_OLD_FORWARD_ADDR},
d78 2
a79 3
					SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
		{ "OpenSSH_2.5.3*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF|
					SSH_OLD_FORWARD_ADDR},
d82 1
a82 2
		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF|SSH_OLD_FORWARD_ADDR},
		{ "OpenSSH_3.*",	SSH_OLD_FORWARD_ADDR },
@


1.69
log
@SSH_BUG_K5USER is unused; ok henning@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.68 2003/08/22 10:56:09 markus Exp $");
d82 1
a82 5
		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF|SSH_BUG_GSSAPI_BER},
		{ "OpenSSH_3.2*,"
		  "OpenSSH_3.3*,"
		  "OpenSSH_3.4*,"
		  "OpenSSH_3.5*",	SSH_BUG_GSSAPI_BER},
@


1.69.2.1
log
@upgrade to OpenSSH 3.8
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.70 2003/11/02 11:01:03 markus Exp $");
d82 5
a86 1
		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF},
@


1.68
log
@support GSS API user authentication; patches from Simon Wilkinson,
stripped down and tested by Jakob and myself.
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.67 2003/04/08 20:21:28 itojun Exp $");
d138 1
a138 1
		  "1.2.22*",		SSH_BUG_IGNOREMSG|SSH_BUG_K5USER },
d140 1
a140 4
					SSH_BUG_IGNOREMSG|SSH_BUG_K5USER },
		{ "1.2.1*,"
		  "1.2.2*,"
		  "1.2.3*",		SSH_BUG_K5USER },
@


1.67
log
@rename log() into logit() to avoid name conflict.  markus ok, from netbsd
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.66 2003/04/01 10:31:26 markus Exp $");
d82 5
a86 1
		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF},
@


1.66
log
@bugfix causes stalled connections for ssh.com < 3.0; noticed by ho@@; tested by ho@@ and myself
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.65 2002/09/27 10:42:09 mickey Exp $");
d191 1
a191 1
			log("ignoring bad proto spec: '%s'.", p);
@


1.65
log
@add a generic match for a prober, such as sie big brother; idea from stevesk@@; markus@@ ok
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.64 2002/09/19 14:53:14 stevesk Exp $");
d88 2
a89 1
					SSH_BUG_RSASIGMD5|SSH_BUG_HBSERVICE },
d92 2
a93 1
					SSH_BUG_RSASIGMD5|SSH_BUG_HBSERVICE },
d105 1
a105 1
					SSH_BUG_DUMMYCHAN },
d112 1
a112 1
					SSH_BUG_DUMMYCHAN },
d118 2
a119 1
					SSH_BUG_DERIVEKEY|SSH_BUG_DUMMYCHAN },
d122 3
a124 2
					SSH_BUG_RSASIGMD5 },
		{ "2.3.*",		SSH_BUG_DEBUG|SSH_BUG_RSASIGMD5 },
d126 1
a126 1
		{ "2.*",		SSH_BUG_DEBUG },
@


1.65.4.1
log
@Update OpenSSH to version 3.6.1
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.65.2.1 2003/04/03 23:27:12 margarida Exp $");
d88 1
a88 2
					SSH_BUG_RSASIGMD5|SSH_BUG_HBSERVICE|
					SSH_BUG_FIRSTKEX },
d91 1
a91 2
					SSH_BUG_RSASIGMD5|SSH_BUG_HBSERVICE|
					SSH_BUG_FIRSTKEX },
d103 1
a103 1
					SSH_BUG_DUMMYCHAN|SSH_BUG_FIRSTKEX },
d110 1
a110 1
					SSH_BUG_DUMMYCHAN|SSH_BUG_FIRSTKEX },
d116 1
a116 2
					SSH_BUG_DERIVEKEY|SSH_BUG_DUMMYCHAN|
					SSH_BUG_FIRSTKEX },
d119 2
a120 3
					SSH_BUG_RSASIGMD5|SSH_BUG_FIRSTKEX },
		{ "2.3.*",		SSH_BUG_DEBUG|SSH_BUG_RSASIGMD5|
					SSH_BUG_FIRSTKEX },
d122 1
a122 1
		{ "2.*",		SSH_BUG_DEBUG|SSH_BUG_FIRSTKEX },
@


1.65.4.2
log
@upgrade to OpenSSH 3.7
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.69 2003/08/29 10:03:15 markus Exp $");
d82 1
a82 5
		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF|SSH_BUG_GSSAPI_BER},
		{ "OpenSSH_3.2*,"
		  "OpenSSH_3.3*,"
		  "OpenSSH_3.4*,"
		  "OpenSSH_3.5*",	SSH_BUG_GSSAPI_BER},
d134 1
a134 1
		  "1.2.22*",		SSH_BUG_IGNOREMSG },
d136 4
a139 1
					SSH_BUG_IGNOREMSG },
d191 1
a191 1
			logit("ignoring bad proto spec: '%s'.", p);
@


1.65.4.3
log
@upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.70 2003/11/02 11:01:03 markus Exp $");
d82 5
a86 1
		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF},
@


1.65.2.1
log
@Update to OpenSSH 3.6.1
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.66 2003/04/01 10:31:26 markus Exp $");
d88 1
a88 2
					SSH_BUG_RSASIGMD5|SSH_BUG_HBSERVICE|
					SSH_BUG_FIRSTKEX },
d91 1
a91 2
					SSH_BUG_RSASIGMD5|SSH_BUG_HBSERVICE|
					SSH_BUG_FIRSTKEX },
d103 1
a103 1
					SSH_BUG_DUMMYCHAN|SSH_BUG_FIRSTKEX },
d110 1
a110 1
					SSH_BUG_DUMMYCHAN|SSH_BUG_FIRSTKEX },
d116 1
a116 2
					SSH_BUG_DERIVEKEY|SSH_BUG_DUMMYCHAN|
					SSH_BUG_FIRSTKEX },
d119 2
a120 3
					SSH_BUG_RSASIGMD5|SSH_BUG_FIRSTKEX },
		{ "2.3.*",		SSH_BUG_DEBUG|SSH_BUG_RSASIGMD5|
					SSH_BUG_FIRSTKEX },
d122 1
a122 1
		{ "2.*",		SSH_BUG_DEBUG|SSH_BUG_FIRSTKEX },
@


1.65.2.2
log
@upgrade to OpenSSH 3.7
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.69 2003/08/29 10:03:15 markus Exp $");
d82 1
a82 5
		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF|SSH_BUG_GSSAPI_BER},
		{ "OpenSSH_3.2*,"
		  "OpenSSH_3.3*,"
		  "OpenSSH_3.4*,"
		  "OpenSSH_3.5*",	SSH_BUG_GSSAPI_BER},
d134 1
a134 1
		  "1.2.22*",		SSH_BUG_IGNOREMSG },
d136 4
a139 1
					SSH_BUG_IGNOREMSG },
d191 1
a191 1
			logit("ignoring bad proto spec: '%s'.", p);
@


1.64
log
@relegate some verbose() to debug(); ok markus@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.63 2002/04/10 08:21:47 markus Exp $");
d149 2
@


1.63
log
@strip '@@' from username only for KerbV and known broken clients, bug #204
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.62 2002/03/25 21:13:51 markus Exp $");
d42 1
a42 1
	verbose("Enabling compatibility mode for protocol 2.0");
d48 1
a48 1
	verbose("Enabling compatibility mode for protocol 1.3");
@


1.63.2.1
log
@Update to OpenSSH 3.5
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.65 2002/09/27 10:42:09 mickey Exp $");
d42 1
a42 1
	debug("Enabling compatibility mode for protocol 2.0");
d48 1
a48 1
	debug("Enabling compatibility mode for protocol 1.3");
a148 2
		{ "Probe-*",
					SSH_BUG_PROBE },
@


1.63.2.2
log
@Merge OpenSSH 3.6.1
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.66 2003/04/01 10:31:26 markus Exp $");
d88 1
a88 2
					SSH_BUG_RSASIGMD5|SSH_BUG_HBSERVICE|
					SSH_BUG_FIRSTKEX },
d91 1
a91 2
					SSH_BUG_RSASIGMD5|SSH_BUG_HBSERVICE|
					SSH_BUG_FIRSTKEX },
d103 1
a103 1
					SSH_BUG_DUMMYCHAN|SSH_BUG_FIRSTKEX },
d110 1
a110 1
					SSH_BUG_DUMMYCHAN|SSH_BUG_FIRSTKEX },
d116 1
a116 2
					SSH_BUG_DERIVEKEY|SSH_BUG_DUMMYCHAN|
					SSH_BUG_FIRSTKEX },
d119 2
a120 3
					SSH_BUG_RSASIGMD5|SSH_BUG_FIRSTKEX },
		{ "2.3.*",		SSH_BUG_DEBUG|SSH_BUG_RSASIGMD5|
					SSH_BUG_FIRSTKEX },
d122 1
a122 1
		{ "2.*",		SSH_BUG_DEBUG|SSH_BUG_FIRSTKEX },
@


1.62
log
@don't send stderr data after EOF, accept this from older known (broken)
sshd servers only, fixes http://bugzilla.mindrot.org/show_bug.cgi?id=179
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.61 2002/03/06 00:24:39 markus Exp $");
d130 6
a135 2
		  "1.2.22*",		SSH_BUG_IGNOREMSG },
		{ "1.3.2*",		SSH_BUG_IGNOREMSG },	/* f-secure */
@


1.61
log
@compat.c
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.59 2002/03/06 00:20:54 markus Exp $");
d64 2
a65 1
					SSH_OLD_DHGEX|SSH_BUG_NOREKEY },
d67 2
a68 1
					SSH_OLD_DHGEX|SSH_BUG_NOREKEY},
d70 1
a70 1
					SSH_BUG_NOREKEY},
d74 1
a74 1
					SSH_BUG_NOREKEY },
d77 7
a83 3
		  "OpenSSH_2.5.2*",	SSH_OLD_DHGEX|SSH_BUG_NOREKEY },
		{ "OpenSSH_2.5.3*",	SSH_BUG_NOREKEY },
		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY },
@


1.60
log
@undo
@
text
@d2 1
a2 1
 * Copyright (c) 1999, 2000, 2001 Markus Friedl.  All rights reserved.
d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.58 2002/01/21 22:30:12 markus Exp $");
d76 2
a77 2
		{ "OpenSSH_2.5.3*",
					SSH_BUG_NOREKEY },
@


1.59
log
@compat.c
@
text
@d76 2
a77 2
		{ "OpenSSH_2.5.3*",	SSH_BUG_NOREKEY },
		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY },
@


1.58
log
@remove "rijndael-*", just use "aes-" since this how rijndael is called
in the drafts; ok stevesk@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.57 2002/01/13 17:57:37 markus Exp $");
d76 2
a77 2
		{ "OpenSSH_2.5.3*",
					SSH_BUG_NOREKEY },
@


1.57
log
@use buffer API and avoid static strings of fixed size; ok provos@@/mouring@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.56 2001/12/19 07:18:56 deraadt Exp $");
d196 1
a196 1
		if (strncmp(cp, "aes", 3) && strncmp(cp, "rijndael", 8)) {
@


1.56
log
@basic KNF done while i was looking for something else
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.55 2001/12/05 16:54:51 markus Exp $");
d28 1
d186 1
a188 1
	size_t len;
d193 1
a193 3
	len = strlen(cipher_prop) + 1;
	fix_ciphers = xmalloc(len);
	*fix_ciphers = '\0';
d197 3
a199 3
			if (*fix_ciphers)
				strlcat(fix_ciphers, ",", len);
			strlcat(fix_ciphers, cp, len);
d202 3
@


1.55
log
@make theo and djm happy: bye bye regexp
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.54 2001/12/05 10:06:12 deraadt Exp $");
d85 6
a90 6
		{ "2.0.13*,"	
		  "2.0.14*,"	
		  "2.0.15*,"	
		  "2.0.16*,"	
		  "2.0.17*,"	
		  "2.0.18*,"	
d97 1
a97 1
		{ "2.0.11*,"	
d127 1
a127 1
		{ "*OSU_0*,"		
@


1.54
log
@minor KNF
@
text
@d26 1
a26 3
RCSID("$OpenBSD: compat.c,v 1.53 2001/09/20 13:50:40 markus Exp $");

#include <regex.h>
d32 1
d54 1
a54 3
	int i, ret;
	char ebuf[1024];
	regex_t reg;
d59 4
a62 2
		{ "^OpenSSH[-_]2\\.[012]",
					SSH_OLD_SESSIONID|SSH_BUG_BANNER|
d64 1
a64 1
		{ "^OpenSSH_2\\.3\\.0", SSH_BUG_BANNER|SSH_BUG_BIGENDIANAES|
d66 1
a66 1
		{ "^OpenSSH_2\\.3\\.",  SSH_BUG_BIGENDIANAES|SSH_OLD_DHGEX|
d68 2
a69 1
		{ "^OpenSSH_2\\.5\\.[01]p1",
d72 4
a75 3
		{ "^OpenSSH_2\\.5\\.[012]",
					SSH_OLD_DHGEX|SSH_BUG_NOREKEY },
		{ "^OpenSSH_2\\.5\\.3",
d77 3
a79 3
		{ "^OpenSSH",		0 },
		{ "MindTerm",		0 },
		{ "^2\\.1\\.0",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d82 1
a82 1
		{ "^2\\.1 ",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d85 7
a91 1
		{ "^2\\.0\\.1[3-9]",	SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d97 2
a98 1
		{ "^2\\.0\\.1[1-2]",	SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d104 1
a104 1
		{ "^2\\.0\\.",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d110 2
a111 1
		{ "^2\\.[23]\\.0",	SSH_BUG_HMAC|SSH_BUG_DEBUG|
d113 13
a125 10
		{ "^2\\.3\\.",		SSH_BUG_DEBUG|SSH_BUG_RSASIGMD5 },
		{ "^2\\.[2-9]\\.",	SSH_BUG_DEBUG },
		{ "^3\\.0\\.",		SSH_BUG_DEBUG },
		{ "^2\\.4$",		SSH_OLD_SESSIONID },	/* Van Dyke */
		{ "^3\\.0 SecureCRT",	SSH_OLD_SESSIONID },
		{ "^1\\.7 SecureFX",	SSH_OLD_SESSIONID },
		{ "^1\\.2\\.1[89]",	SSH_BUG_IGNOREMSG },
		{ "^1\\.2\\.2[012]",	SSH_BUG_IGNOREMSG },
		{ "^1\\.3\\.2",		SSH_BUG_IGNOREMSG },	/* f-secure */
		{ "^SSH Compatible Server",			/* Netscreen */
d127 10
a136 5
		{ "^OSU_0",		SSH_BUG_PASSWORDPAD },
		{ "^OSU_1\\.[0-4]",	SSH_BUG_PASSWORDPAD },
		{ "^OSU_1\\.5alpha[1-3]",
					SSH_BUG_PASSWORDPAD },
		{ "^SSH_Version_Mapper",
d140 1
d143 2
a144 10
		ret = regcomp(&reg, check[i].pat, REG_EXTENDED|REG_NOSUB);
		if (ret != 0) {
			regerror(ret, &reg, ebuf, sizeof(ebuf));
			ebuf[sizeof(ebuf)-1] = '\0';
			error("regerror: %s", ebuf);
			continue;
		}
		ret = regexec(&reg, version, 0, NULL, 0);
		regfree(&reg);
		if (ret == 0) {
@


1.53
log
@bug compat: request a dummy channel for -N (no shell) sessions + cleanup; vinschen@@redhat.com
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.52 2001/09/17 21:09:47 markus Exp $");
d154 1
a154 1
		switch(atoi(p)) {
d186 1
a186 1
	while((cp = strsep(&tmp, ",")) != NULL) {
@


1.53.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@d2 1
a2 1
 * Copyright (c) 1999, 2000, 2001, 2002 Markus Friedl.  All rights reserved.
d26 3
a28 1
RCSID("$OpenBSD: compat.c,v 1.61 2002/03/06 00:24:39 markus Exp $");
a29 1
#include "buffer.h"
a33 1
#include "match.h"
d55 3
a57 1
	int i;
d62 2
a63 4
		{ "OpenSSH-2.0*,"
		  "OpenSSH-2.1*,"
		  "OpenSSH_2.1*,"
		  "OpenSSH_2.2*",	SSH_OLD_SESSIONID|SSH_BUG_BANNER|
d65 1
a65 1
		{ "OpenSSH_2.3.0*",	SSH_BUG_BANNER|SSH_BUG_BIGENDIANAES|
d67 1
a67 1
		{ "OpenSSH_2.3.*",	SSH_BUG_BIGENDIANAES|SSH_OLD_DHGEX|
d69 1
a69 2
		{ "OpenSSH_2.5.0p1*,"
		  "OpenSSH_2.5.1p1*",
d72 7
a78 8
		{ "OpenSSH_2.5.0*,"
		  "OpenSSH_2.5.1*,"
		  "OpenSSH_2.5.2*",	SSH_OLD_DHGEX|SSH_BUG_NOREKEY },
		{ "OpenSSH_2.5.3*",	SSH_BUG_NOREKEY },
		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY },
		{ "OpenSSH*",		0 },
		{ "*MindTerm*",		0 },
		{ "2.1.0*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d81 1
a81 1
		{ "2.1 *",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d84 1
a84 7
		{ "2.0.13*,"
		  "2.0.14*,"
		  "2.0.15*,"
		  "2.0.16*,"
		  "2.0.17*,"
		  "2.0.18*,"
		  "2.0.19*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d90 1
a90 2
		{ "2.0.11*,"
		  "2.0.12*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d96 1
a96 1
		{ "2.0.*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d102 1
a102 2
		{ "2.2.0*,"
		  "2.3.0*",		SSH_BUG_HMAC|SSH_BUG_DEBUG|
d104 10
a113 13
		{ "2.3.*",		SSH_BUG_DEBUG|SSH_BUG_RSASIGMD5 },
		{ "2.4",		SSH_OLD_SESSIONID },	/* Van Dyke */
		{ "2.*",		SSH_BUG_DEBUG },
		{ "3.0.*",		SSH_BUG_DEBUG },
		{ "3.0 SecureCRT*",	SSH_OLD_SESSIONID },
		{ "1.7 SecureFX*",	SSH_OLD_SESSIONID },
		{ "1.2.18*,"
		  "1.2.19*,"
		  "1.2.20*,"
		  "1.2.21*,"
		  "1.2.22*",		SSH_BUG_IGNOREMSG },
		{ "1.3.2*",		SSH_BUG_IGNOREMSG },	/* f-secure */
		{ "*SSH Compatible Server*",			/* Netscreen */
d115 5
a119 10
		{ "*OSU_0*,"
		  "OSU_1.0*,"
		  "OSU_1.1*,"
		  "OSU_1.2*,"
		  "OSU_1.3*,"
		  "OSU_1.4*,"
		  "OSU_1.5alpha1*,"
		  "OSU_1.5alpha2*,"
		  "OSU_1.5alpha3*",	SSH_BUG_PASSWORDPAD },
		{ "*SSH_Version_Mapper*",
a122 1

d125 10
a134 2
		if (match_pattern_list(version, check[i].pat,
		    strlen(check[i].pat), 0) == 1) {
d154 1
a154 1
		switch (atoi(p)) {
a174 1
	Buffer b;
d177 1
d182 3
a184 1
	buffer_init(&b);
d186 5
a190 5
	while ((cp = strsep(&tmp, ",")) != NULL) {
		if (strncmp(cp, "aes", 3) != 0) {
			if (buffer_len(&b) > 0)
				buffer_append(&b, ",", 1);
			buffer_append(&b, cp, strlen(cp));
a192 3
	buffer_append(&b, "\0", 1);
	fix_ciphers = xstrdup(buffer_ptr(&b));
	buffer_free(&b);
@


1.53.2.2
log
@Update OpenSSH to version 3.2.2.
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.63 2002/04/10 08:21:47 markus Exp $");
d64 1
a64 2
					SSH_OLD_DHGEX|SSH_BUG_NOREKEY|
					SSH_BUG_EXTEOF},
d66 1
a66 2
					SSH_OLD_DHGEX|SSH_BUG_NOREKEY|
					SSH_BUG_EXTEOF},
d68 1
a68 1
					SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
d72 1
a72 1
					SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
d75 3
a77 7
		  "OpenSSH_2.5.2*",	SSH_OLD_DHGEX|SSH_BUG_NOREKEY|
					SSH_BUG_EXTEOF},
		{ "OpenSSH_2.5.3*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
		{ "OpenSSH_2.*,"
		  "OpenSSH_3.0*,"
		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF},
		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
d124 2
a125 6
		  "1.2.22*",		SSH_BUG_IGNOREMSG|SSH_BUG_K5USER },
		{ "1.3.2*",		/* F-Secure */
					SSH_BUG_IGNOREMSG|SSH_BUG_K5USER },
		{ "1.2.1*,"
		  "1.2.2*,"
		  "1.2.3*",		SSH_BUG_K5USER },
@


1.53.2.3
log
@Update to OpenSSH 3.5
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.65 2002/09/27 10:42:09 mickey Exp $");
d42 1
a42 1
	debug("Enabling compatibility mode for protocol 2.0");
d48 1
a48 1
	debug("Enabling compatibility mode for protocol 1.3");
a148 2
		{ "Probe-*",
					SSH_BUG_PROBE },
@


1.52
log
@more versions suffering the SSH_BUG_DEBUG bug;
3.0.x reported by dbutts@@maddog.storability.com
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.51 2001/06/25 08:25:37 markus Exp $");
d88 2
a89 1
					SSH_BUG_HBSERVICE|SSH_BUG_OPENFAILURE },
d94 2
a95 1
					SSH_BUG_RSASIGMD5|SSH_BUG_OPENFAILURE },
d101 1
a101 1
					SSH_BUG_DERIVEKEY },
@


1.51
log
@update copyright for 2001
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.50 2001/04/30 16:02:49 markus Exp $");
d100 5
a104 3
		{ "^2\\.[23]\\.0",	SSH_BUG_HMAC|SSH_BUG_RSASIGMD5 },
		{ "^2\\.3\\.",		SSH_BUG_RSASIGMD5 },
		{ "^2\\.[2-9]\\.",	0 },
@


1.50
log
@ssh-2.0.10 has the weak-key-bug, too.
@
text
@d2 1
a2 1
 * Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.49 2001/04/30 15:50:46 markus Exp $");
@


1.49
log
@allow interop with weaker key generation used by ssh-2.0.x, x < 10
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.48 2001/04/29 19:16:52 markus Exp $");
d89 1
a89 1
		{ "^2\\.0\\.1[0-2]",	SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
@


1.48
log
@more ssh.com-2.0.x bug-compat; from per@@appgate.com
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.47 2001/04/18 23:43:25 markus Exp $");
d89 5
d98 2
a99 1
					SSH_BUG_RSASIGMD5|SSH_BUG_OPENFAILURE },
@


1.47
log
@more ssh v2 hostbased-auth interop: ssh.com >= 2.1.0 works now
(however the 2.1.0 server seems to work only if debug is enabled...)
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.46 2001/04/12 19:15:24 markus Exp $");
d88 1
a88 1
					SSH_BUG_HBSERVICE },
d93 1
a93 1
					SSH_BUG_RSASIGMD5 },
@


1.47.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d2 1
a2 1
 * Copyright (c) 1999, 2000, 2001 Markus Friedl.  All rights reserved.
d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.53 2001/09/20 13:50:40 markus Exp $");
d88 1
a88 8
					SSH_BUG_HBSERVICE|SSH_BUG_OPENFAILURE|
					SSH_BUG_DUMMYCHAN },
		{ "^2\\.0\\.1[1-2]",	SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG|
					SSH_BUG_PKSERVICE|SSH_BUG_X11FWD|
					SSH_BUG_PKAUTH|SSH_BUG_PKOK|
					SSH_BUG_RSASIGMD5|SSH_BUG_OPENFAILURE|
					SSH_BUG_DUMMYCHAN },
a92 3
					SSH_BUG_RSASIGMD5|SSH_BUG_OPENFAILURE|
					SSH_BUG_DERIVEKEY|SSH_BUG_DUMMYCHAN },
		{ "^2\\.[23]\\.0",	SSH_BUG_HMAC|SSH_BUG_DEBUG|
d94 3
a96 3
		{ "^2\\.3\\.",		SSH_BUG_DEBUG|SSH_BUG_RSASIGMD5 },
		{ "^2\\.[2-9]\\.",	SSH_BUG_DEBUG },
		{ "^3\\.0\\.",		SSH_BUG_DEBUG },
@


1.47.2.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@d2 1
a2 1
 * Copyright (c) 1999, 2000, 2001, 2002 Markus Friedl.  All rights reserved.
d26 3
a28 1
RCSID("$OpenBSD: compat.c,v 1.61 2002/03/06 00:24:39 markus Exp $");
a29 1
#include "buffer.h"
a33 1
#include "match.h"
d55 3
a57 1
	int i;
d62 2
a63 4
		{ "OpenSSH-2.0*,"
		  "OpenSSH-2.1*,"
		  "OpenSSH_2.1*,"
		  "OpenSSH_2.2*",	SSH_OLD_SESSIONID|SSH_BUG_BANNER|
d65 1
a65 1
		{ "OpenSSH_2.3.0*",	SSH_BUG_BANNER|SSH_BUG_BIGENDIANAES|
d67 1
a67 1
		{ "OpenSSH_2.3.*",	SSH_BUG_BIGENDIANAES|SSH_OLD_DHGEX|
d69 1
a69 2
		{ "OpenSSH_2.5.0p1*,"
		  "OpenSSH_2.5.1p1*",
d72 7
a78 8
		{ "OpenSSH_2.5.0*,"
		  "OpenSSH_2.5.1*,"
		  "OpenSSH_2.5.2*",	SSH_OLD_DHGEX|SSH_BUG_NOREKEY },
		{ "OpenSSH_2.5.3*",	SSH_BUG_NOREKEY },
		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY },
		{ "OpenSSH*",		0 },
		{ "*MindTerm*",		0 },
		{ "2.1.0*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d81 1
a81 1
		{ "2.1 *",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d84 1
a84 7
		{ "2.0.13*,"
		  "2.0.14*,"
		  "2.0.15*,"
		  "2.0.16*,"
		  "2.0.17*,"
		  "2.0.18*,"
		  "2.0.19*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d90 1
a90 2
		{ "2.0.11*,"
		  "2.0.12*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d96 1
a96 1
		{ "2.0.*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d102 1
a102 2
		{ "2.2.0*,"
		  "2.3.0*",		SSH_BUG_HMAC|SSH_BUG_DEBUG|
d104 10
a113 13
		{ "2.3.*",		SSH_BUG_DEBUG|SSH_BUG_RSASIGMD5 },
		{ "2.4",		SSH_OLD_SESSIONID },	/* Van Dyke */
		{ "2.*",		SSH_BUG_DEBUG },
		{ "3.0.*",		SSH_BUG_DEBUG },
		{ "3.0 SecureCRT*",	SSH_OLD_SESSIONID },
		{ "1.7 SecureFX*",	SSH_OLD_SESSIONID },
		{ "1.2.18*,"
		  "1.2.19*,"
		  "1.2.20*,"
		  "1.2.21*,"
		  "1.2.22*",		SSH_BUG_IGNOREMSG },
		{ "1.3.2*",		SSH_BUG_IGNOREMSG },	/* f-secure */
		{ "*SSH Compatible Server*",			/* Netscreen */
d115 5
a119 10
		{ "*OSU_0*,"
		  "OSU_1.0*,"
		  "OSU_1.1*,"
		  "OSU_1.2*,"
		  "OSU_1.3*,"
		  "OSU_1.4*,"
		  "OSU_1.5alpha1*,"
		  "OSU_1.5alpha2*,"
		  "OSU_1.5alpha3*",	SSH_BUG_PASSWORDPAD },
		{ "*SSH_Version_Mapper*",
a122 1

d125 10
a134 2
		if (match_pattern_list(version, check[i].pat,
		    strlen(check[i].pat), 0) == 1) {
d154 1
a154 1
		switch (atoi(p)) {
a174 1
	Buffer b;
d177 1
d182 3
a184 1
	buffer_init(&b);
d186 5
a190 5
	while ((cp = strsep(&tmp, ",")) != NULL) {
		if (strncmp(cp, "aes", 3) != 0) {
			if (buffer_len(&b) > 0)
				buffer_append(&b, ",", 1);
			buffer_append(&b, cp, strlen(cp));
a192 3
	buffer_append(&b, "\0", 1);
	fix_ciphers = xstrdup(buffer_ptr(&b));
	buffer_free(&b);
@


1.47.2.3
log
@Upgrade to OpenSSH 3.2.3.

Except for improbable compilation error fixes, this should be the last
commit made to the 2.9-STABLE branche. Have fun upgrading.
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.63 2002/04/10 08:21:47 markus Exp $");
d64 1
a64 2
					SSH_OLD_DHGEX|SSH_BUG_NOREKEY|
					SSH_BUG_EXTEOF},
d66 1
a66 2
					SSH_OLD_DHGEX|SSH_BUG_NOREKEY|
					SSH_BUG_EXTEOF},
d68 1
a68 1
					SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
d72 1
a72 1
					SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
d75 3
a77 7
		  "OpenSSH_2.5.2*",	SSH_OLD_DHGEX|SSH_BUG_NOREKEY|
					SSH_BUG_EXTEOF},
		{ "OpenSSH_2.5.3*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
		{ "OpenSSH_2.*,"
		  "OpenSSH_3.0*,"
		  "OpenSSH_3.1*",	SSH_BUG_EXTEOF},
		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY|SSH_BUG_EXTEOF},
d124 2
a125 6
		  "1.2.22*",		SSH_BUG_IGNOREMSG|SSH_BUG_K5USER },
		{ "1.3.2*",		/* F-Secure */
					SSH_BUG_IGNOREMSG|SSH_BUG_K5USER },
		{ "1.2.1*,"
		  "1.2.2*,"
		  "1.2.3*",		SSH_BUG_K5USER },
@


1.46
log
@implement HostbasedAuthentication (= RhostRSAAuthentication for ssh v2)
similar to RhostRSAAuthentication unless you enable (the experimental)
HostbasedUsesNameFromPacketOnly option.  please test. :)
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.45 2001/04/05 11:09:16 markus Exp $");
d87 2
a88 1
					SSH_BUG_PKOK|SSH_BUG_RSASIGMD5 },
@


1.45
log
@add SSH_BUG_NOREKEY and detect broken (=all old) openssh versions.
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.44 2001/04/05 10:00:06 markus Exp $");
d80 1
a80 1
					SSH_BUG_RSASIGMD5 },
d83 1
a83 1
					SSH_BUG_RSASIGMD5 },
@


1.44
log
@2.3.x does old  GEX, too; report jakob@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.43 2001/04/04 15:50:55 markus Exp $");
d64 1
a64 1
					SSH_OLD_DHGEX },
d66 3
a68 2
					SSH_OLD_DHGEX},
		{ "^OpenSSH_2\\.3\\.",  SSH_BUG_BIGENDIANAES|SSH_OLD_DHGEX},
d70 2
a71 1
					SSH_BUG_BIGENDIANAES|SSH_OLD_DHGEX },
d73 3
a75 1
					SSH_OLD_DHGEX },
@


1.43
log
@f-secure 1.3.2 does not handle IGNORE; from milliondl@@ornl.gov
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.42 2001/03/27 17:46:49 provos Exp $");
d67 1
@


1.42
log
@make dh group exchange more flexible, allow min and max group size,
okay markus@@, deraadt@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.41 2001/03/27 10:57:00 markus Exp $");
d96 1
@


1.41
log
@some older systems use NID_md5 instead of NID_sha1 for RSASSA-PKCS1-v1_5
signatures in SSH protocol 2, ok djm@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.40 2001/03/23 11:04:06 djm Exp $");
d63 4
a66 2
					SSH_OLD_SESSIONID|SSH_BUG_BANNER },
		{ "^OpenSSH_2\\.3\\.0", SSH_BUG_BANNER|SSH_BUG_BIGENDIANAES },
d68 3
a70 1
					SSH_BUG_BIGENDIANAES },
@


1.40
log
@Compat for OpenSSH with broken Rijndael/AES. ok markus@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.39 2001/03/18 23:30:55 deraadt Exp $");
d70 2
a71 1
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG },
d73 2
a74 1
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG },
d78 1
a78 1
					SSH_BUG_PKOK },
d82 4
a85 2
					SSH_BUG_PKAUTH|SSH_BUG_PKOK },
		{ "^2\\.[23]\\.0",	SSH_BUG_HMAC },
@


1.39
log
@specifically version match on ssh scanners.  do not log scan information
to the console, because clueless users freak out when people do completely
legal probes.  instead, generate a detailed log file entry and use british
humour to relax their sphincters a little bit.
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.38 2001/03/10 15:31:00 deraadt Exp $");
d64 3
a66 1
		{ "^OpenSSH_2\\.3\\.0", SSH_BUG_BANNER },
d145 30
@


1.38
log
@all known netscreen ssh versions, and older versions of OSU ssh cannot
handle password padding (newer OSU is fixed)
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.37 2001/03/08 21:42:31 markus Exp $");
d92 2
@


1.37
log
@implement client side of SSH2_MSG_USERAUTH_PK_OK (test public key ->
no need to do enter passphrase or do expensive sign operations if the
server does not accept key).
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.36 2001/02/27 11:00:11 markus Exp $");
d79 1
a79 1
		{ "^2\\.[23]\\.0",	SSH_BUG_HMAC},
d81 11
a91 5
		{ "^2\\.4$",		SSH_OLD_SESSIONID}, /* Van Dyke */
		{ "^3\\.0 SecureCRT",	SSH_OLD_SESSIONID},
		{ "^1\\.7 SecureFX",	SSH_OLD_SESSIONID},
		{ "^1\\.2\\.1[89]",	SSH_BUG_IGNOREMSG},
		{ "^1\\.2\\.2[012]",	SSH_BUG_IGNOREMSG},
@


1.36
log
@support SSH-2.0-2.1 ; from Christophe_Moret@@hp.com
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.35 2001/02/19 09:53:31 markus Exp $");
d73 2
a74 1
					SSH_BUG_PKSERVICE|SSH_BUG_X11FWD },
d78 1
a78 1
					SSH_BUG_PKAUTH },
@


1.35
log
@ssh-1.2.{18-22} has broken handling of ignore messages; report from itojun@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.34 2001/01/21 19:05:48 markus Exp $");
d68 2
@


1.34
log
@split ssh.h and try to cleanup the #include mess. remove unnecessary #includes.
rename util.[ch] -> misc.[ch]
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.33 2001/01/08 22:29:05 markus Exp $");
d81 2
@


1.33
log
@implement option 'Banner /etc/issue.net' for ssh2, move version to
2.3.1 (needed for bugcompat detection, 2.3.0 would fail if Banner
is enabled).
@
text
@d26 3
a28 1
RCSID("$OpenBSD: compat.c,v 1.32 2000/12/09 23:51:11 provos Exp $");
a29 1
#include "ssh.h"
d33 1
a33 1
#include <regex.h>
@


1.32
log
@remove unnecessary '\n'
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.31 2000/12/06 22:58:14 markus Exp $");
d61 4
a64 1
		{ "^OpenSSH[-_]2\\.[012]",	SSH_OLD_SESSIONID },
@


1.31
log
@disable debug messages for ssh.com/f-secure 2.0.1x, 2.1.0
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.30 2000/12/03 11:29:04 markus Exp $");
d91 1
a91 1
			debug("match: %s pat %s\n", version, check[i].pat);
@


1.30
log
@remove fallback to SSH_BUG_HMAC now that the drafts are updated
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.29 2000/12/03 11:27:55 markus Exp $");
d64 1
a64 1
					SSH_OLD_SESSIONID },
d66 1
a66 1
					SSH_OLD_SESSIONID|
d69 3
a71 2
					SSH_OLD_SESSIONID|SSH_BUG_PKAUTH|
					SSH_BUG_PKSERVICE|SSH_BUG_X11FWD },
@


1.29
log
@correctly match "2.1.0.pl2 SSH" etc; from pekkas@@netcore.fi/bugzilla.redhat
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.28 2000/12/03 11:15:03 markus Exp $");
a75 1
		{ "^2\\.",		SSH_BUG_HMAC},	/* XXX fallback */
@


1.28
log
@support f-secure/ssh.com 2.0.12; ok niels@@
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.27 2000/10/31 09:31:58 markus Exp $");
d63 1
a63 1
		{ "^2\\.1\\.0 ",	SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d71 1
a71 1
		{ "^2\\.[23]\\.0 ",	SSH_BUG_HMAC},
@


1.27
log
@handle all old openssh versions
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.26 2000/10/26 18:38:28 markus Exp $");
d65 3
d69 2
a70 2
					SSH_OLD_SESSIONID|
					SSH_BUG_PUBKEYAUTH|SSH_BUG_X11FWD },
@


1.27.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d26 1
a26 3
RCSID("$OpenBSD: compat.c,v 1.34 2001/01/21 19:05:48 markus Exp $");

#include <regex.h>
d28 1
d32 1
a32 1
#include "log.h"
d61 1
a61 4
		{ "^OpenSSH[-_]2\\.[012]",
					SSH_OLD_SESSIONID|SSH_BUG_BANNER },
		{ "^OpenSSH_2\\.3\\.0", SSH_BUG_BANNER },
		{ "^OpenSSH",		0 },
d63 2
a64 5
		{ "^2\\.1\\.0",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG },
		{ "^2\\.0\\.1[3-9]",	SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG|
					SSH_BUG_PKSERVICE|SSH_BUG_X11FWD },
d66 3
a68 4
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG|
					SSH_BUG_PKSERVICE|SSH_BUG_X11FWD|
					SSH_BUG_PKAUTH },
		{ "^2\\.[23]\\.0",	SSH_BUG_HMAC},
d73 1
d88 1
a88 1
			debug("match: %s pat %s", version, check[i].pat);
@


1.27.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.35 2001/02/19 09:53:31 markus Exp $");
a80 2
		{ "^1\\.2\\.1[89]",	SSH_BUG_IGNOREMSG},
		{ "^1\\.2\\.2[012]",	SSH_BUG_IGNOREMSG},
@


1.27.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.39 2001/03/18 23:30:55 deraadt Exp $");
a68 2
		{ "^2\\.1 ",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG },
d71 1
a71 2
					SSH_BUG_PKSERVICE|SSH_BUG_X11FWD|
					SSH_BUG_PKOK },
d75 2
a76 2
					SSH_BUG_PKAUTH|SSH_BUG_PKOK },
		{ "^2\\.[23]\\.0",	SSH_BUG_HMAC },
d78 5
a82 13
		{ "^2\\.4$",		SSH_OLD_SESSIONID },	/* Van Dyke */
		{ "^3\\.0 SecureCRT",	SSH_OLD_SESSIONID },
		{ "^1\\.7 SecureFX",	SSH_OLD_SESSIONID },
		{ "^1\\.2\\.1[89]",	SSH_BUG_IGNOREMSG },
		{ "^1\\.2\\.2[012]",	SSH_BUG_IGNOREMSG },
		{ "^SSH Compatible Server",			/* Netscreen */
					SSH_BUG_PASSWORDPAD },
		{ "^OSU_0",		SSH_BUG_PASSWORDPAD },
		{ "^OSU_1\\.[0-4]",	SSH_BUG_PASSWORDPAD },
		{ "^OSU_1\\.5alpha[1-3]",
					SSH_BUG_PASSWORDPAD },
		{ "^SSH_Version_Mapper",
					SSH_BUG_SCANNER },
@


1.27.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.47 2001/04/18 23:43:25 markus Exp $");
d63 2
a64 13
					SSH_OLD_SESSIONID|SSH_BUG_BANNER|
					SSH_OLD_DHGEX|SSH_BUG_NOREKEY },
		{ "^OpenSSH_2\\.3\\.0", SSH_BUG_BANNER|SSH_BUG_BIGENDIANAES|
					SSH_OLD_DHGEX|SSH_BUG_NOREKEY},
		{ "^OpenSSH_2\\.3\\.",  SSH_BUG_BIGENDIANAES|SSH_OLD_DHGEX|
					SSH_BUG_NOREKEY},
		{ "^OpenSSH_2\\.5\\.[01]p1",
					SSH_BUG_BIGENDIANAES|SSH_OLD_DHGEX|
					SSH_BUG_NOREKEY },
		{ "^OpenSSH_2\\.5\\.[012]",
					SSH_OLD_DHGEX|SSH_BUG_NOREKEY },
		{ "^OpenSSH_2\\.5\\.3",
					SSH_BUG_NOREKEY },
d68 1
a68 2
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG|
					SSH_BUG_RSASIGMD5|SSH_BUG_HBSERVICE },
d70 1
a70 2
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG|
					SSH_BUG_RSASIGMD5|SSH_BUG_HBSERVICE },
d74 1
a74 2
					SSH_BUG_PKOK|SSH_BUG_RSASIGMD5|
					SSH_BUG_HBSERVICE },
d78 2
a79 4
					SSH_BUG_PKAUTH|SSH_BUG_PKOK|
					SSH_BUG_RSASIGMD5 },
		{ "^2\\.[23]\\.0",	SSH_BUG_HMAC|SSH_BUG_RSASIGMD5 },
		{ "^2\\.3\\.",		SSH_BUG_RSASIGMD5 },
a85 1
		{ "^1\\.3\\.2",		SSH_BUG_IGNOREMSG },	/* f-secure */
a142 30
}

char *
compat_cipher_proposal(char *cipher_prop)
{
	char *orig_prop, *fix_ciphers;
	char *cp, *tmp;
	size_t len;

	if (!(datafellows & SSH_BUG_BIGENDIANAES))
		return(cipher_prop);

	len = strlen(cipher_prop) + 1;
	fix_ciphers = xmalloc(len);
	*fix_ciphers = '\0';
	tmp = orig_prop = xstrdup(cipher_prop);
	while((cp = strsep(&tmp, ",")) != NULL) {
		if (strncmp(cp, "aes", 3) && strncmp(cp, "rijndael", 8)) {
			if (*fix_ciphers)
				strlcat(fix_ciphers, ",", len);
			strlcat(fix_ciphers, cp, len);
		}
	}
	xfree(orig_prop);
	debug2("Original cipher proposal: %s", cipher_prop);
	debug2("Compat cipher proposal: %s", fix_ciphers);
	if (!*fix_ciphers)
		fatal("No available ciphers found.");

	return(fix_ciphers);
@


1.27.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d2 1
a2 1
 * Copyright (c) 1999, 2000, 2001 Markus Friedl.  All rights reserved.
d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.53 2001/09/20 13:50:40 markus Exp $");
d88 1
a88 8
					SSH_BUG_HBSERVICE|SSH_BUG_OPENFAILURE|
					SSH_BUG_DUMMYCHAN },
		{ "^2\\.0\\.1[1-2]",	SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG|
					SSH_BUG_PKSERVICE|SSH_BUG_X11FWD|
					SSH_BUG_PKAUTH|SSH_BUG_PKOK|
					SSH_BUG_RSASIGMD5|SSH_BUG_OPENFAILURE|
					SSH_BUG_DUMMYCHAN },
a92 3
					SSH_BUG_RSASIGMD5|SSH_BUG_OPENFAILURE|
					SSH_BUG_DERIVEKEY|SSH_BUG_DUMMYCHAN },
		{ "^2\\.[23]\\.0",	SSH_BUG_HMAC|SSH_BUG_DEBUG|
d94 3
a96 3
		{ "^2\\.3\\.",		SSH_BUG_DEBUG|SSH_BUG_RSASIGMD5 },
		{ "^2\\.[2-9]\\.",	SSH_BUG_DEBUG },
		{ "^3\\.0\\.",		SSH_BUG_DEBUG },
@


1.27.2.6
log
@Merge OpenSSH 3.1.
@
text
@d2 1
a2 1
 * Copyright (c) 1999, 2000, 2001, 2002 Markus Friedl.  All rights reserved.
d26 3
a28 1
RCSID("$OpenBSD: compat.c,v 1.61 2002/03/06 00:24:39 markus Exp $");
a29 1
#include "buffer.h"
a33 1
#include "match.h"
d55 3
a57 1
	int i;
d62 2
a63 4
		{ "OpenSSH-2.0*,"
		  "OpenSSH-2.1*,"
		  "OpenSSH_2.1*,"
		  "OpenSSH_2.2*",	SSH_OLD_SESSIONID|SSH_BUG_BANNER|
d65 1
a65 1
		{ "OpenSSH_2.3.0*",	SSH_BUG_BANNER|SSH_BUG_BIGENDIANAES|
d67 1
a67 1
		{ "OpenSSH_2.3.*",	SSH_BUG_BIGENDIANAES|SSH_OLD_DHGEX|
d69 1
a69 2
		{ "OpenSSH_2.5.0p1*,"
		  "OpenSSH_2.5.1p1*",
d72 7
a78 8
		{ "OpenSSH_2.5.0*,"
		  "OpenSSH_2.5.1*,"
		  "OpenSSH_2.5.2*",	SSH_OLD_DHGEX|SSH_BUG_NOREKEY },
		{ "OpenSSH_2.5.3*",	SSH_BUG_NOREKEY },
		{ "Sun_SSH_1.0*",	SSH_BUG_NOREKEY },
		{ "OpenSSH*",		0 },
		{ "*MindTerm*",		0 },
		{ "2.1.0*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d81 1
a81 1
		{ "2.1 *",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d84 1
a84 7
		{ "2.0.13*,"
		  "2.0.14*,"
		  "2.0.15*,"
		  "2.0.16*,"
		  "2.0.17*,"
		  "2.0.18*,"
		  "2.0.19*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d90 1
a90 2
		{ "2.0.11*,"
		  "2.0.12*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d96 1
a96 1
		{ "2.0.*",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
d102 1
a102 2
		{ "2.2.0*,"
		  "2.3.0*",		SSH_BUG_HMAC|SSH_BUG_DEBUG|
d104 10
a113 13
		{ "2.3.*",		SSH_BUG_DEBUG|SSH_BUG_RSASIGMD5 },
		{ "2.4",		SSH_OLD_SESSIONID },	/* Van Dyke */
		{ "2.*",		SSH_BUG_DEBUG },
		{ "3.0.*",		SSH_BUG_DEBUG },
		{ "3.0 SecureCRT*",	SSH_OLD_SESSIONID },
		{ "1.7 SecureFX*",	SSH_OLD_SESSIONID },
		{ "1.2.18*,"
		  "1.2.19*,"
		  "1.2.20*,"
		  "1.2.21*,"
		  "1.2.22*",		SSH_BUG_IGNOREMSG },
		{ "1.3.2*",		SSH_BUG_IGNOREMSG },	/* f-secure */
		{ "*SSH Compatible Server*",			/* Netscreen */
d115 5
a119 10
		{ "*OSU_0*,"
		  "OSU_1.0*,"
		  "OSU_1.1*,"
		  "OSU_1.2*,"
		  "OSU_1.3*,"
		  "OSU_1.4*,"
		  "OSU_1.5alpha1*,"
		  "OSU_1.5alpha2*,"
		  "OSU_1.5alpha3*",	SSH_BUG_PASSWORDPAD },
		{ "*SSH_Version_Mapper*",
a122 1

d125 10
a134 2
		if (match_pattern_list(version, check[i].pat,
		    strlen(check[i].pat), 0) == 1) {
d154 1
a154 1
		switch (atoi(p)) {
a174 1
	Buffer b;
d177 1
d182 3
a184 1
	buffer_init(&b);
d186 5
a190 5
	while ((cp = strsep(&tmp, ",")) != NULL) {
		if (strncmp(cp, "aes", 3) != 0) {
			if (buffer_len(&b) > 0)
				buffer_append(&b, ",", 1);
			buffer_append(&b, cp, strlen(cp));
a192 3
	buffer_append(&b, "\0", 1);
	fix_ciphers = xstrdup(buffer_ptr(&b));
	buffer_free(&b);
@


1.26
log
@add older vandyke products
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.25 2000/10/14 12:16:56 markus Exp $");
d61 1
a61 2
		{ "^OpenSSH-2\\.[01]",	SSH_OLD_SESSIONID },
		{ "^OpenSSH_2\\.2",	SSH_OLD_SESSIONID },
@


1.25
log
@OpenSSH_2.3; note that is is not complete, but the version number needs to be changed for interoperability reasons
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.24 2000/10/10 20:20:45 markus Exp $");
d71 4
a74 1
		{ "^2\\.",		SSH_BUG_HMAC},		/* XXX fallback */
@


1.24
log
@use rexexp for version string matching
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.23 2000/09/07 21:13:37 markus Exp $");
d61 12
a72 7
		{"^.*MindTerm",		0},
		{"^2\\.1\\.0 ",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC},
		{"^2\\.0\\.",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|SSH_BUG_PUBKEYAUTH|SSH_BUG_X11FWD},
		{"^2\\.[23]\\.0 ",	SSH_BUG_HMAC|SSH_COMPAT_SESSIONID_ENCODING},
		{"^2\\.[2-9]\\.",	SSH_COMPAT_SESSIONID_ENCODING},
		{"^2\\.",		SSH_BUG_HMAC|SSH_COMPAT_SESSIONID_ENCODING},
		{NULL,			0}
@


1.23
log
@some more Copyright fixes
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.22 2000/09/07 20:27:50 deraadt Exp $");
d32 1
d54 5
a58 4
	int i;
	size_t len;
	struct {
		char	*version;
d61 7
a67 4
		{"2.1.0",	SSH_BUG_SIGBLOB|SSH_BUG_HMAC},
		{"2.0.1",	SSH_BUG_SIGBLOB|SSH_BUG_HMAC|SSH_BUG_PUBKEYAUTH|SSH_BUG_X11FWD},
		{"2.",		SSH_BUG_HMAC|SSH_COMPAT_SESSIONID_ENCODING},
		{NULL,		0}
d70 12
a81 5
	for (i = 0; check[i].version; i++) {
		len = strlen(check[i].version);
		if (strlen(version) >= len &&
		   (strncmp(version, check[i].version, len) == 0)) {
			verbose("datafellows: %.200s", version);
d86 1
@


1.22
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d2 1
a2 1
 * Copyright (c) 1999 Markus Friedl.  All rights reserved.
d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.21 2000/08/27 18:18:04 markus Exp $");
@


1.21
log
@compatibility with future ssh.com versions
@
text
@a11 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Markus Friedl.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.20 2000/08/26 10:33:43 markus Exp $");
@


1.20
log
@ssh.com-2.3.0
@
text
@d31 1
a31 1
RCSID("$OpenBSD: compat.c,v 1.19 2000/07/09 01:27:32 ho Exp $");
a63 2
		{"2.3.0",	SSH_BUG_HMAC|SSH_COMPAT_SESSIONID_ENCODING},
		{"2.2.0",	SSH_BUG_HMAC|SSH_COMPAT_SESSIONID_ENCODING},
d66 1
d69 1
@


1.19
log
@Better conditions for strsep() ending.
@
text
@d31 1
a31 1
RCSID("$OpenBSD: compat.c,v 1.18 2000/07/08 23:17:31 provos Exp $");
d64 1
@


1.18
log
@replace strtok with strsep; from David Young <dyoung@@onthejob.net>
@
text
@d31 1
a31 1
RCSID("$OpenBSD: compat.c,v 1.17 2000/06/20 01:39:40 markus Exp $");
d90 1
a90 1
	for ((p = strsep(&q, SEP)); p; (p = strsep(&q, SEP))) {
@


1.17
log
@OpenBSD tag
@
text
@d31 1
a31 1
RCSID("$OpenBSD: compat.c,v 1.16 2000/06/19 00:50:11 markus Exp $");
d84 1
a84 1
	char *s, *p;
d89 2
a90 2
	s = xstrdup(spec);
	for ((p = strtok(s, SEP)); p; (p = strtok(NULL, SEP))) {
@


1.16
log
@make userauth+pubkey interop with ssh.com-2.2.0
@
text
@d31 1
a31 1
RCSID("$Id: compat.c,v 1.15 2000/06/18 03:00:27 markus Exp $");
@


1.15
log
@initial support for ssh.com's 2.2.0
@
text
@d31 1
a31 1
RCSID("$Id: compat.c,v 1.14 2000/05/22 18:42:01 markus Exp $");
d64 1
a64 1
		{"2.2.0",	SSH_BUG_HMAC},
@


1.14
log
@check strtok() != NULL; ok niels@@
@
text
@d31 1
a31 1
RCSID("$Id: compat.c,v 1.13 2000/05/08 17:42:24 markus Exp $");
d64 1
@


1.13
log
@bug compat w/ ssh-2.0.13 x11, split out bugs
@
text
@d31 1
a31 1
RCSID("$Id: compat.c,v 1.12 2000/04/26 20:56:29 markus Exp $");
d83 1
a83 2
	char *s = xstrdup(spec);
	char *p;
d86 3
@


1.13.2.1
log
@lovin' CVS... update patch branch to OpenSSH-2.1.1
@
text
@d31 1
a31 1
RCSID("$Id: compat.c,v 1.14 2000/05/22 18:42:01 markus Exp $");
d83 2
a84 1
	char *s, *p;
a86 3
	if (spec == NULL)
		return ret;
	s = xstrdup(spec);
@


1.13.2.2
log
@Pull in the rest of openssh-2.2.0 to 2.7 branch (luvin' cvs...)
@
text
@d31 1
a31 1
RCSID("$OpenBSD: compat.c,v 1.21 2000/08/27 18:18:04 markus Exp $");
a65 1
		{"2.",		SSH_BUG_HMAC|SSH_COMPAT_SESSIONID_ENCODING},
a67 1
	/* process table, return first match */
d83 1
a83 1
	char *s, *p, *q;
d88 2
a89 2
	q = s = xstrdup(spec);
	for ((p = strsep(&q, SEP)); p && *p != '\0'; (p = strsep(&q, SEP))) {
@


1.13.2.3
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@d2 1
a2 1
 * Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
d12 5
d31 1
a31 1
RCSID("$OpenBSD: compat.c,v 1.27 2000/10/31 09:31:58 markus Exp $");
a36 1
#include <regex.h>
d58 4
a61 5
	int i, ret;
	char ebuf[1024];
	regex_t reg;
	static struct {
		char	*pat;
d64 4
a67 14
		{ "^OpenSSH[-_]2\\.[012]",	SSH_OLD_SESSIONID },
		{ "MindTerm",		0 },
		{ "^2\\.1\\.0 ",	SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID },
		{ "^2\\.0\\.",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|
					SSH_BUG_PUBKEYAUTH|SSH_BUG_X11FWD },
		{ "^2\\.[23]\\.0 ",	SSH_BUG_HMAC},
		{ "^2\\.[2-9]\\.",	0 },
		{ "^2\\.4$",		SSH_OLD_SESSIONID}, /* Van Dyke */
		{ "^3\\.0 SecureCRT",	SSH_OLD_SESSIONID},
		{ "^1\\.7 SecureFX",	SSH_OLD_SESSIONID},
		{ "^2\\.",		SSH_BUG_HMAC},	/* XXX fallback */
		{ NULL,			0 }
d70 5
a74 12
	for (i = 0; check[i].pat; i++) {
		ret = regcomp(&reg, check[i].pat, REG_EXTENDED|REG_NOSUB);
		if (ret != 0) {
			regerror(ret, &reg, ebuf, sizeof(ebuf));
			ebuf[sizeof(ebuf)-1] = '\0';
			error("regerror: %s", ebuf);
			continue;
		}
		ret = regexec(&reg, version, 0, NULL, 0);
		regfree(&reg);
		if (ret == 0) {
			debug("match: %s pat %s\n", version, check[i].pat);
a78 1
	debug("no match: %s", version);
@


1.13.2.4
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@d26 1
a26 3
RCSID("$OpenBSD: compat.c,v 1.35 2001/02/19 09:53:31 markus Exp $");

#include <regex.h>
d28 1
d32 1
a32 1
#include "log.h"
d61 1
a61 4
		{ "^OpenSSH[-_]2\\.[012]",
					SSH_OLD_SESSIONID|SSH_BUG_BANNER },
		{ "^OpenSSH_2\\.3\\.0", SSH_BUG_BANNER },
		{ "^OpenSSH",		0 },
d63 2
a64 5
		{ "^2\\.1\\.0",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG },
		{ "^2\\.0\\.1[3-9]",	SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG|
					SSH_BUG_PKSERVICE|SSH_BUG_X11FWD },
d66 3
a68 4
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG|
					SSH_BUG_PKSERVICE|SSH_BUG_X11FWD|
					SSH_BUG_PKAUTH },
		{ "^2\\.[23]\\.0",	SSH_BUG_HMAC},
d73 1
a73 2
		{ "^1\\.2\\.1[89]",	SSH_BUG_IGNOREMSG},
		{ "^1\\.2\\.2[012]",	SSH_BUG_IGNOREMSG},
d88 1
a88 1
			debug("match: %s pat %s", version, check[i].pat);
@


1.13.2.5
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@d26 1
a26 1
RCSID("$OpenBSD: compat.c,v 1.39 2001/03/18 23:30:55 deraadt Exp $");
a68 2
		{ "^2\\.1 ",		SSH_BUG_SIGBLOB|SSH_BUG_HMAC|
					SSH_OLD_SESSIONID|SSH_BUG_DEBUG },
d71 1
a71 2
					SSH_BUG_PKSERVICE|SSH_BUG_X11FWD|
					SSH_BUG_PKOK },
d75 2
a76 2
					SSH_BUG_PKAUTH|SSH_BUG_PKOK },
		{ "^2\\.[23]\\.0",	SSH_BUG_HMAC },
d78 5
a82 13
		{ "^2\\.4$",		SSH_OLD_SESSIONID },	/* Van Dyke */
		{ "^3\\.0 SecureCRT",	SSH_OLD_SESSIONID },
		{ "^1\\.7 SecureFX",	SSH_OLD_SESSIONID },
		{ "^1\\.2\\.1[89]",	SSH_BUG_IGNOREMSG },
		{ "^1\\.2\\.2[012]",	SSH_BUG_IGNOREMSG },
		{ "^SSH Compatible Server",			/* Netscreen */
					SSH_BUG_PASSWORDPAD },
		{ "^OSU_0",		SSH_BUG_PASSWORDPAD },
		{ "^OSU_1\\.[0-4]",	SSH_BUG_PASSWORDPAD },
		{ "^OSU_1\\.5alpha[1-3]",
					SSH_BUG_PASSWORDPAD },
		{ "^SSH_Version_Mapper",
					SSH_BUG_SCANNER },
@


1.12
log
@add DSA pubkey auth and other SSH2 fixes.  use ssh-keygen -[xX]
for trading keys with the real and the original SSH, directly from the
people who invented the SSH protocol.
@
text
@d31 1
a31 1
RCSID("$Id: compat.c,v 1.6 2000/04/18 15:01:31 markus Exp $");
d60 7
a66 4
	static const char *check[] = {
		"2.0.1",
		"2.1.0",
		NULL
d68 2
a69 2
	for (i = 0; check[i]; i++) {
		len = strlen(check[i]);
d71 1
a71 1
		   (strncmp(version, check[i], len) == 0)) {
d73 1
a73 1
			datafellows = 1;
@


1.11
log
@whitespace cleanup
@
text
@d31 1
a31 1
RCSID("$Id: compat.c,v 1.10 2000/04/12 07:45:43 markus Exp $");
a46 1
	packet_set_ssh2_format();
@


1.10
log
@add Cipher and Protocol options to ssh/sshd, e.g.:
ssh -o 'Protocol 1,2' if you prefer proto 1, ssh -o 'Ciphers arcfour,3des-cbc'
@
text
@d31 1
a31 1
RCSID("$Id: compat.c,v 1.9 2000/04/12 06:37:02 markus Exp $");
d42 1
a42 1
void 
d49 1
a49 1
void 
@


1.9
log
@less debugging output
@
text
@d31 1
a31 1
RCSID("$Id: compat.c,v 1.8 2000/04/07 09:17:39 markus Exp $");
d35 2
d75 27
@


1.8
log
@interop w/ latest ssh.com windows client.
@
text
@d31 1
a31 1
RCSID("$Id: compat.c,v 1.7 2000/04/04 15:19:42 markus Exp $");
d68 1
a68 1
			log("datafellows: %.200s", version);
@


1.7
log
@ssh2 client implementation, interops w/ ssh.com and lsh servers.
@
text
@d31 1
a31 1
RCSID("$Id: compat.c,v 1.6 2000/04/03 07:07:15 markus Exp $");
d61 1
a61 3
		"2.1.0.beta.9",
		"2.1.0.pre.3",
		"2.1.0.public.beta.1",
@


1.6
log
@channel layer support for ssh2
@
text
@d31 1
a31 1
RCSID("$Id: compat.c,v 1.5 1999/11/24 16:15:24 markus Exp $");
d43 3
a45 1
	fatal("protocol 2.0 not implemented");
@


1.5
log
@missing copyright
@
text
@d31 1
a31 1
RCSID("$Id: compat.c,v 1.4 1999/11/23 22:25:53 markus Exp $");
d34 1
d37 2
d41 5
d50 23
@


1.4
log
@KNF part 1
@
text
@d1 29
d31 1
a31 1
RCSID("$Id: compat.c,v 1.3 1999/11/22 21:02:38 markus Exp $");
@


1.3
log
@syslog changes:
* Unified Logmessage for all auth-types, for success and for failed
* Standard connections get only ONE line in the LOG when level==LOG:
  Auth-attempts are logged only, if authentication is:
        a) successfull or
        b) with passwd or
        c) we had more than AUTH_FAIL_LOG failues
* many log() became verbose()
* old behaviour with level=VERBOSE
@
text
@d2 1
a2 1
RCSID("$Id: compat.c,v 1.2 1999/10/16 22:29:01 markus Exp $");
d6 5
a10 2
int compat13=0;
void enable_compat13(void){
d12 1
a12 1
	compat13=1;
@


1.2
log
@add CVS tags, fix comments and whitespace
@
text
@d2 1
a2 1
RCSID("$Id: ssh.c,v 1.24 1999/10/14 18:17:42 markus Exp $");
d8 1
a8 1
	log("Enabling compatibility mode for protocol 1.3");
@


1.1
log
@support for SSH protocol 1.5 which is poorly documented, the RFC.troff lies.
interops (x11,agent,etc) with 1.2.27 and protocol 1.3
@
text
@d2 2
@

