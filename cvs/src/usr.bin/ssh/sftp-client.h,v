head	1.27;
access;
symbols
	OPENBSD_6_0:1.27.0.8
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.27.0.4
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.27.0.2
	OPENBSD_5_8_BASE:1.27
	OPENBSD_5_7:1.26.0.2
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.25.0.4
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.24.0.4
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.21.0.2
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.20.0.10
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.8
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.6
	OPENBSD_5_0:1.20.0.4
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.2
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.18.0.4
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.18.0.2
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.17.0.8
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.4
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.2
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.15.0.2
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.14.0.10
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.6
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.8
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.4
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.13.0.2
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.12.0.4
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.6
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.11.0.4
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_8:1.1.0.2;
locks; strict;
comment	@ * @;


1.27
date	2015.05.08.06.45.13;	author djm;	state Exp;
branches;
next	1.26;
commitid	7qzGw6zdRwtS8emI;

1.26
date	2015.01.14.13.54.13;	author djm;	state Exp;
branches;
next	1.25;
commitid	5mVYZPiIJUHzgjMn;

1.25
date	2014.04.21.14.36.16;	author logan;	state Exp;
branches;
next	1.24;

1.24
date	2013.10.17.00.30.13;	author djm;	state Exp;
branches;
next	1.23;

1.23
date	2013.10.11.02.53.45;	author djm;	state Exp;
branches;
next	1.22;

1.22
date	2013.08.08.05.04.03;	author djm;	state Exp;
branches;
next	1.21;

1.21
date	2013.07.25.00.56.51;	author djm;	state Exp;
branches;
next	1.20;

1.20
date	2010.12.04.00.18.01;	author djm;	state Exp;
branches;
next	1.19;

1.19
date	2010.09.22.22.58.51;	author djm;	state Exp;
branches;
next	1.18;

1.18
date	2009.08.18.18.36.20;	author djm;	state Exp;
branches;
next	1.17;

1.17
date	2008.06.08.20.15.29;	author dtucker;	state Exp;
branches;
next	1.16;

1.16
date	2008.04.18.12.32.11;	author djm;	state Exp;
branches;
next	1.15;

1.15
date	2008.01.11.07.22.28;	author chl;	state Exp;
branches;
next	1.14;

1.14
date	2005.04.26.12.59.02;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2004.11.29.07.41.24;	author djm;	state Exp;
branches
	1.13.2.1;
next	1.12;

1.12
date	2004.02.17.05.39.51;	author djm;	state Exp;
branches
	1.12.2.1
	1.12.4.1;
next	1.11;

1.11
date	2002.09.11.22.41.50;	author djm;	state Exp;
branches
	1.11.4.1
	1.11.6.1;
next	1.10;

1.10
date	2002.06.23.09.30.14;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.13.00.59.23;	author djm;	state Exp;
branches
	1.9.2.1;
next	1.8;

1.8
date	2002.02.12.12.32.27;	author djm;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.05.00.00.46;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.26.06.33.01;	author itojun;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2001.04.05.10.42.52;	author markus;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2001.03.16.08.16.18;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.13.22.42.54;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.07.10.11.23;	author djm;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.02.04.11.11.54;	author djm;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2001.02.16.20.13.14;	author jason;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.02.19.17.19.22;	author jason;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2001.03.21.19.46.28;	author jason;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2001.05.07.21.09.34;	author jason;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	2001.09.27.00.15.42;	author miod;	state Exp;
branches;
next	1.1.2.6;

1.1.2.6
date	2002.03.08.17.04.43;	author brad;	state Exp;
branches;
next	;

1.2.2.1
date	2001.03.12.15.44.14;	author jason;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2001.03.21.18.53.04;	author jason;	state Exp;
branches;
next	;

1.5.2.1
date	2001.09.27.19.03.55;	author jason;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2002.03.09.00.20.45;	author miod;	state Exp;
branches;
next	;

1.6.2.1
date	2002.03.07.17.37.47;	author jason;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2002.06.26.18.22.36;	author miod;	state Exp;
branches;
next	1.6.2.3;

1.6.2.3
date	2002.10.11.14.53.07;	author miod;	state Exp;
branches;
next	;

1.9.2.1
date	2002.06.26.15.30.38;	author jason;	state Exp;
branches;
next	1.9.2.2;

1.9.2.2
date	2002.10.11.14.51.52;	author miod;	state Exp;
branches;
next	;

1.11.4.1
date	2004.03.04.18.18.16;	author brad;	state Exp;
branches;
next	;

1.11.6.1
date	2004.02.28.03.51.34;	author brad;	state Exp;
branches;
next	;

1.12.2.1
date	2005.03.10.17.15.04;	author brad;	state Exp;
branches;
next	;

1.12.4.1
date	2005.03.10.16.28.28;	author brad;	state Exp;
branches;
next	1.12.4.2;

1.12.4.2
date	2005.09.02.03.45.00;	author brad;	state Exp;
branches;
next	;

1.13.2.1
date	2005.09.04.18.40.04;	author brad;	state Exp;
branches;
next	;


desc
@@


1.27
log
@moar whitespace at eol
@
text
@/* $OpenBSD: sftp-client.h,v 1.26 2015/01/14 13:54:13 djm Exp $ */

/*
 * Copyright (c) 2001-2004 Damien Miller <djm@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/* Client side of SSH2 filexfer protocol */

#ifndef _SFTP_CLIENT_H
#define _SFTP_CLIENT_H

typedef struct SFTP_DIRENT SFTP_DIRENT;

struct SFTP_DIRENT {
	char *filename;
	char *longname;
	Attrib a;
};

/*
 * Used for statvfs responses on the wire from the server, because the
 * server's native format may be larger than the client's.
 */
struct sftp_statvfs {
	u_int64_t f_bsize;
	u_int64_t f_frsize;
	u_int64_t f_blocks;
	u_int64_t f_bfree;
	u_int64_t f_bavail;
	u_int64_t f_files;
	u_int64_t f_ffree;
	u_int64_t f_favail;
	u_int64_t f_fsid;
	u_int64_t f_flag;
	u_int64_t f_namemax;
};

/*
 * Initialise a SSH filexfer connection. Returns NULL on error or
 * a pointer to a initialized sftp_conn struct on success.
 */
struct sftp_conn *do_init(int, int, u_int, u_int, u_int64_t);

u_int sftp_proto_version(struct sftp_conn *);

/* Close file referred to by 'handle' */
int do_close(struct sftp_conn *, const u_char *, u_int);

/* Read contents of 'path' to NULL-terminated array 'dir' */
int do_readdir(struct sftp_conn *, const char *, SFTP_DIRENT ***);

/* Frees a NULL-terminated array of SFTP_DIRENTs (eg. from do_readdir) */
void free_sftp_dirents(SFTP_DIRENT **);

/* Delete file 'path' */
int do_rm(struct sftp_conn *, const char *);

/* Create directory 'path' */
int do_mkdir(struct sftp_conn *, const char *, Attrib *, int);

/* Remove directory 'path' */
int do_rmdir(struct sftp_conn *, const char *);

/* Get file attributes of 'path' (follows symlinks) */
Attrib *do_stat(struct sftp_conn *, const char *, int);

/* Get file attributes of 'path' (does not follow symlinks) */
Attrib *do_lstat(struct sftp_conn *, const char *, int);

/* Set file attributes of 'path' */
int do_setstat(struct sftp_conn *, const char *, Attrib *);

/* Set file attributes of open file 'handle' */
int do_fsetstat(struct sftp_conn *, const u_char *, u_int, Attrib *);

/* Canonicalise 'path' - caller must free result */
char *do_realpath(struct sftp_conn *, const char *);

/* Get statistics for filesystem hosting file at "path" */
int do_statvfs(struct sftp_conn *, const char *, struct sftp_statvfs *, int);

/* Rename 'oldpath' to 'newpath' */
int do_rename(struct sftp_conn *, const char *, const char *, int force_legacy);

/* Link 'oldpath' to 'newpath' */
int do_hardlink(struct sftp_conn *, const char *, const char *);

/* Rename 'oldpath' to 'newpath' */
int do_symlink(struct sftp_conn *, const char *, const char *);

/* Call fsync() on open file 'handle' */
int do_fsync(struct sftp_conn *conn, u_char *, u_int);

/*
 * Download 'remote_path' to 'local_path'. Preserve permissions and times
 * if 'pflag' is set
 */
int do_download(struct sftp_conn *, const char *, const char *,
    Attrib *, int, int, int);

/*
 * Recursively download 'remote_directory' to 'local_directory'. Preserve
 * times if 'pflag' is set
 */
int download_dir(struct sftp_conn *, const char *, const char *,
    Attrib *, int, int, int, int);

/*
 * Upload 'local_path' to 'remote_path'. Preserve permissions and times
 * if 'pflag' is set
 */
int do_upload(struct sftp_conn *, const char *, const char *, int, int, int);

/*
 * Recursively upload 'local_directory' to 'remote_directory'. Preserve
 * times if 'pflag' is set
 */
int upload_dir(struct sftp_conn *, const char *, const char *, int, int, int,
    int);

/* Concatenate paths, taking care of slashes. Caller must free result. */
char *path_append(const char *, const char *);

#endif
@


1.26
log
@update sftp client and server to new buffer API.
pretty much just mechanical changes; with & ok markus
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.25 2014/04/21 14:36:16 logan Exp $ */
d114 1
a114 1
 * Recursively download 'remote_directory' to 'local_directory'. Preserve 
d127 1
a127 1
 * Recursively upload 'local_directory' to 'remote_directory'. Preserve 
@


1.25
log
@Implement sftp upload resume support.

OK from djm@@, with input from guenther@@, mlarkin@@ and
okan@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.24 2013/10/17 00:30:13 djm Exp $ */
d59 1
a59 1
int do_close(struct sftp_conn *, char *, u_int);
d62 1
a62 1
int do_readdir(struct sftp_conn *, char *, SFTP_DIRENT ***);
d68 1
a68 1
int do_rm(struct sftp_conn *, char *);
d71 1
a71 1
int do_mkdir(struct sftp_conn *, char *, Attrib *, int);
d74 1
a74 1
int do_rmdir(struct sftp_conn *, char *);
d77 1
a77 1
Attrib *do_stat(struct sftp_conn *, char *, int);
d80 1
a80 1
Attrib *do_lstat(struct sftp_conn *, char *, int);
d83 1
a83 1
int do_setstat(struct sftp_conn *, char *, Attrib *);
d86 1
a86 1
int do_fsetstat(struct sftp_conn *, char *, u_int, Attrib *);
d89 1
a89 1
char *do_realpath(struct sftp_conn *, char *);
d95 1
a95 1
int do_rename(struct sftp_conn *, char *, char *m, int force_legacy);
d98 1
a98 1
int do_hardlink(struct sftp_conn *, char *, char *);
d101 1
a101 1
int do_symlink(struct sftp_conn *, char *, char *);
d104 1
a104 1
int do_fsync(struct sftp_conn *conn, char *, u_int);
d110 2
a111 1
int do_download(struct sftp_conn *, char *, char *, Attrib *, int, int, int);
d117 2
a118 2
int download_dir(struct sftp_conn *, char *, char *, Attrib *, int,
    int, int, int);
d124 1
a124 1
int do_upload(struct sftp_conn *, char *, char *, int, int, int);
d130 2
a131 1
int upload_dir(struct sftp_conn *, char *, char *, int, int, int, int);
d134 1
a134 1
char *path_append(char *, char *);
@


1.24
log
@fsync@@openssh.com protocol extension for sftp-server
client support to allow calling fsync() faster successful transfer
patch mostly by imorgan AT nas.nasa.gov; bz#1798
"fine" markus@@ "grumble OK" deraadt@@ "doesn't sound bad to me" millert@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.23 2013/10/11 02:53:45 djm Exp $ */
d123 1
a123 1
int do_upload(struct sftp_conn *, char *, char *, int, int);
d129 1
a129 1
int upload_dir(struct sftp_conn *, char *, char *, int, int, int);
@


1.23
log
@obsolete comment
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.22 2013/08/08 05:04:03 djm Exp $ */
d103 3
d110 1
a110 1
int do_download(struct sftp_conn *, char *, char *, Attrib *, int, int);
d116 2
a117 1
int download_dir(struct sftp_conn *, char *, char *, Attrib *, int, int, int);
d123 1
a123 1
int do_upload(struct sftp_conn *, char *, char *, int);
d129 1
a129 1
int upload_dir(struct sftp_conn *, char *, char *, int, int);
@


1.22
log
@add a "-l" flag for the rename command to force it to use the silly
standard SSH_FXP_RENAME command instead of the POSIX-rename- like
posix-rename@@openssh.com extension.

intended for use in regress tests, so no documentation.
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.21 2013/07/25 00:56:51 djm Exp $ */
a101 2

/* XXX: add callbacks to do_download/do_upload so we can do progress meter */
@


1.21
log
@sftp support for resuming partial downloads; patch mostly by Loganaden
Velvindron/AfriNIC with some tweaks by me; feedback and ok dtucker@@
"Just be careful" deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.20 2010/12/04 00:18:01 djm Exp $ */
d95 1
a95 1
int do_rename(struct sftp_conn *, char *, char *);
@


1.20
log
@add a protocol extension to support a hard link operation. It is
available through the "ln" command in the client. The old "ln"
behaviour of creating a symlink is available using its "-s" option
or through the preexisting "symlink" command; based on a patch from
miklos AT szeredi.hu in bz#1555; ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.19 2010/09/22 22:58:51 djm Exp $ */
d109 1
a109 1
int do_download(struct sftp_conn *, char *, char *, Attrib *, int);
d115 1
a115 1
int download_dir(struct sftp_conn *, char *, char *, Attrib *, int, int);
@


1.19
log
@add an option per-read/write callback to atomicio

factor out bandwidth limiting code from scp(1) into a generic bandwidth
limiter that can be attached using the atomicio callback mechanism

add a bandwidth limit option to sftp(1) using the above

"very nice" markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.18 2009/08/18 18:36:20 djm Exp $ */
d96 3
@


1.18
log
@recursive transfer support for get/put and on the commandline
work mostly by carlosvsilvapt@@gmail.com for the Google Summer of Code
with some tweaks by me; "go for it" deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.17 2008/06/08 20:15:29 dtucker Exp $ */
d54 1
a54 1
struct sftp_conn *do_init(int, int, u_int, u_int);
@


1.17
log
@Have the sftp client store the statvfs replies in wire format,
which prevents problems when the server's native sizes exceed the
client's.

Also extends the sizes of the remaining 32bit wire format to 64bit,
they're specified as unsigned long in the standard.
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.16 2008/04/18 12:32:11 djm Exp $ */
d71 1
a71 1
int do_mkdir(struct sftp_conn *, char *, Attrib *);
d106 7
a112 1
int do_download(struct sftp_conn *, char *, char *, int);
d119 9
@


1.16
log
@introduce sftp extension methods statvfs@@openssh.com and
fstatvfs@@openssh.com that implement statvfs(2)-like operations,
based on a patch from miklos AT szeredi.hu (bz#1399)

also add a "df" command to the sftp client that uses the
statvfs@@openssh.com to produce a df(1)-like display of filesystem
space and inode utilisation

ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.15 2008/01/11 07:22:28 chl Exp $ */
d33 18
d92 1
a92 2
struct statvfs;
int do_statvfs(struct sftp_conn *, const char *, struct statvfs *, int);
@


1.15
log
@disable unused functions

initially from tobias@@, but disabled them by placing them in "#ifdef notyet" which was asked by djm@@

ok djm@@ tobias@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.14 2005/04/26 12:59:02 jmc Exp $ */
d72 4
@


1.14
log
@spelling correction in comment from wiz@@netbsd;
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.13 2004/11/29 07:41:24 djm Exp $ */
a63 3
/* Get file attributes of open file 'handle' */
Attrib *do_fstat(struct sftp_conn *, char *, u_int, int);

a77 3

/* Return target of symlink 'path' - caller must free result */
char *do_readlink(struct sftp_conn *, char *);
@


1.13
log
@Some small fixes from moritz@@jodeit.org. ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.12 2004/02/17 05:39:51 djm Exp $ */
d33 1
a33 1
 * Initialiase a SSH filexfer connection. Returns NULL on error or
@


1.13.2.1
log
@upgrade to OpenSSH 4.2
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.14 2005/04/26 12:59:02 jmc Exp $ */
d33 1
a33 1
 * Initialise a SSH filexfer connection. Returns NULL on error or
@


1.12
log
@switch to license.template for code written by me (belated, I know...)
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.11 2002/09/11 22:41:50 djm Exp $ */
d33 2
a34 2
 * Initialiase a SSH filexfer connection. Returns -1 on error or
 * protocol version on success.
@


1.12.2.1
log
@upgrade to OpenSSH 4.0
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.13 2004/11/29 07:41:24 djm Exp $ */
d33 2
a34 2
 * Initialiase a SSH filexfer connection. Returns NULL on error or
 * a pointer to a initialized sftp_conn struct on success.
@


1.12.4.1
log
@upgrade to OpenSSH 4.0
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.13 2004/11/29 07:41:24 djm Exp $ */
d33 2
a34 2
 * Initialiase a SSH filexfer connection. Returns NULL on error or
 * a pointer to a initialized sftp_conn struct on success.
@


1.12.4.2
log
@upgrade to OpenSSH 4.2
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.14 2005/04/26 12:59:02 jmc Exp $ */
d33 1
a33 1
 * Initialise a SSH filexfer connection. Returns NULL on error or
@


1.11
log
@support for short/long listings and globbing in "ls"; ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.10 2002/06/23 09:30:14 deraadt Exp $ */
d4 1
a4 1
 * Copyright (c) 2001,2002 Damien Miller.  All rights reserved.
d6 3
a8 8
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
d10 7
a16 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.11.4.1
log
@upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.12 2004/02/17 05:39:51 djm Exp $ */
d4 1
a4 1
 * Copyright (c) 2001-2004 Damien Miller <djm@@openbsd.org>
d6 8
a13 3
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
d15 10
a24 7
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
@


1.11.6.1
log
@upgrade to OpenSSH 3.8
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.12 2004/02/17 05:39:51 djm Exp $ */
d4 1
a4 1
 * Copyright (c) 2001-2004 Damien Miller <djm@@openbsd.org>
d6 8
a13 3
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
d15 10
a24 7
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
@


1.10
log
@bunch of u_int vs int stuff
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.9 2002/02/13 00:59:23 djm Exp $ */
a49 3

/* List contents of directory 'path' to stdout */
int do_ls(struct sftp_conn *, char *);
@


1.9
log
@API cleanup and backwards compat for filexfer v.0 servers; ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.8 2002/02/12 12:32:27 djm Exp $ */
d44 1
a44 2
struct sftp_conn *
do_init(int, int, u_int, u_int);
d46 1
a46 2
u_int
sftp_proto_version(struct sftp_conn *);
@


1.9.2.1
log
@Pull in OpenSSH-3.4
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.10 2002/06/23 09:30:14 deraadt Exp $ */
d44 2
a45 1
struct sftp_conn *do_init(int, int, u_int, u_int);
d47 2
a48 1
u_int sftp_proto_version(struct sftp_conn *);
@


1.9.2.2
log
@Update to OpenSSH 3.5
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.11 2002/09/11 22:41:50 djm Exp $ */
d50 3
@


1.8
log
@Perform multiple overlapping read/write requests in file transfer. Mostly
done by Tobias Ringstrom <tori@@ringstrom.mine.nu>; ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.7 2002/02/05 00:00:46 djm Exp $ */
d4 1
a4 1
 * Copyright (c) 2001-2002 Damien Miller.  All rights reserved.
d29 3
d44 5
a48 1
int do_init(int, int);
d51 1
a51 1
int do_close(int, int, char *, u_int);
d54 1
a54 1
int do_ls(int, int, char *);
d57 1
a57 1
int do_readdir(int, int, char *, SFTP_DIRENT ***);
d63 1
a63 1
int do_rm(int, int, char *);
d66 1
a66 1
int do_mkdir(int, int, char *, Attrib *);
d69 1
a69 1
int do_rmdir(int, int, char *);
d72 1
a72 1
Attrib *do_stat(int, int, char *, int);
d75 1
a75 1
Attrib *do_lstat(int, int, char *, int);
d78 1
a78 1
Attrib *do_fstat(int, int, char *, u_int, int);
d81 1
a81 1
int do_setstat(int, int, char *, Attrib *);
d84 1
a84 1
int do_fsetstat(int, int, char *, u_int, Attrib *);
d87 1
a87 1
char *do_realpath(int, int, char *);
d90 1
a90 1
int do_rename(int, int, char *, char *);
d93 1
a93 1
int do_symlink(int, int, char *, char *);
d96 1
a96 1
char *do_readlink(int, int, char *);
d104 1
a104 1
int do_download(int, int, char *, char *, int, size_t, int);
d110 3
a112 1
int do_upload(int, int, char *, char *, int , size_t, int);
@


1.7
log
@Add "-B" option to specify copy buffer length (default 32k); ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.6 2001/06/26 06:33:01 itojun Exp $ */
d97 1
a97 1
int do_download(int, int, char *, char *, int, size_t);
d103 1
a103 1
int do_upload(int, int, char *, char *, int , size_t);
@


1.6
log
@prototype pedant.  not very creative...
- () -> (void)
- no variable names
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.5 2001/04/05 10:42:52 markus Exp $ */
d4 1
a4 1
 * Copyright (c) 2001 Damien Miller.  All rights reserved.
d97 1
a97 1
int do_download(int, int, char *, char *, int);
d103 1
a103 1
int do_upload(int, int, char *, char *, int);
@


1.6.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.9 2002/02/13 00:59:23 djm Exp $ */
d4 1
a4 1
 * Copyright (c) 2001,2002 Damien Miller.  All rights reserved.
a28 3
#ifndef _SFTP_CLIENT_H
#define _SFTP_CLIENT_H

d41 1
a41 5
struct sftp_conn *
do_init(int, int, u_int, u_int);

u_int
sftp_proto_version(struct sftp_conn *);
d44 1
a44 1
int do_close(struct sftp_conn *, char *, u_int);
d47 1
a47 1
int do_ls(struct sftp_conn *, char *);
d50 1
a50 1
int do_readdir(struct sftp_conn *, char *, SFTP_DIRENT ***);
d56 1
a56 1
int do_rm(struct sftp_conn *, char *);
d59 1
a59 1
int do_mkdir(struct sftp_conn *, char *, Attrib *);
d62 1
a62 1
int do_rmdir(struct sftp_conn *, char *);
d65 1
a65 1
Attrib *do_stat(struct sftp_conn *, char *, int);
d68 1
a68 1
Attrib *do_lstat(struct sftp_conn *, char *, int);
d71 1
a71 1
Attrib *do_fstat(struct sftp_conn *, char *, u_int, int);
d74 1
a74 1
int do_setstat(struct sftp_conn *, char *, Attrib *);
d77 1
a77 1
int do_fsetstat(struct sftp_conn *, char *, u_int, Attrib *);
d80 1
a80 1
char *do_realpath(struct sftp_conn *, char *);
d83 1
a83 1
int do_rename(struct sftp_conn *, char *, char *);
d86 1
a86 1
int do_symlink(struct sftp_conn *, char *, char *);
d89 1
a89 1
char *do_readlink(struct sftp_conn *, char *);
d97 1
a97 1
int do_download(struct sftp_conn *, char *, char *, int);
d103 1
a103 3
int do_upload(struct sftp_conn *, char *, char *, int);

#endif
@


1.6.2.2
log
@There was an update to OpenSSH 3.4, and people rejoiced.
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.6.2.1 2002/03/07 17:37:47 jason Exp $ */
d44 2
a45 1
struct sftp_conn *do_init(int, int, u_int, u_int);
d47 2
a48 1
u_int sftp_proto_version(struct sftp_conn *);
@


1.6.2.3
log
@Update to OpenSSH 3.5
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.11 2002/09/11 22:41:50 djm Exp $ */
d50 3
@


1.5
log
@fix whitespace: unexpand + trailing spaces.
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.4 2001/03/16 08:16:18 djm Exp $ */
d41 1
a41 1
int do_init(int fd_in, int fd_out);
d44 1
a44 1
int do_close(int fd_in, int fd_out, char *handle, u_int handle_len);
d47 1
a47 1
int do_ls(int fd_in, int fd_out, char *path);
d50 1
a50 1
int do_readdir(int fd_in, int fd_out, char *path, SFTP_DIRENT ***dir);
d53 1
a53 1
void free_sftp_dirents(SFTP_DIRENT **s);
d56 1
a56 1
int do_rm(int fd_in, int fd_out, char *path);
d59 1
a59 1
int do_mkdir(int fd_in, int fd_out, char *path, Attrib *a);
d62 1
a62 1
int do_rmdir(int fd_in, int fd_out, char *path);
d65 1
a65 1
Attrib *do_stat(int fd_in, int fd_out, char *path, int quiet);
d68 1
a68 1
Attrib *do_lstat(int fd_in, int fd_out, char *path, int quiet);
d71 1
a71 2
Attrib *do_fstat(int fd_in, int fd_out, char *handle, u_int handle_len,
    int quiet);
d74 1
a74 1
int do_setstat(int fd_in, int fd_out, char *path, Attrib *a);
d77 1
a77 2
int do_fsetstat(int fd_in, int fd_out, char *handle,
    u_int handle_len, Attrib *a);
d80 1
a80 1
char *do_realpath(int fd_in, int fd_out, char *path);
d83 1
a83 1
int do_rename(int fd_in, int fd_out, char *oldpath, char *newpath);
d86 1
a86 1
int do_symlink(int fd_in, int fd_out, char *oldpath, char *newpath);
d89 1
a89 1
char *do_readlink(int fd_in, int fd_out, char *path);
d97 1
a97 2
int do_download(int fd_in, int fd_out, char *remote_path, char *local_path,
    int pflag);
d103 1
a103 2
int do_upload(int fd_in, int fd_out, char *local_path, char *remote_path,
    int pflag);
@


1.5.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.6 2001/06/26 06:33:01 itojun Exp $ */
d41 1
a41 1
int do_init(int, int);
d44 1
a44 1
int do_close(int, int, char *, u_int);
d47 1
a47 1
int do_ls(int, int, char *);
d50 1
a50 1
int do_readdir(int, int, char *, SFTP_DIRENT ***);
d53 1
a53 1
void free_sftp_dirents(SFTP_DIRENT **);
d56 1
a56 1
int do_rm(int, int, char *);
d59 1
a59 1
int do_mkdir(int, int, char *, Attrib *);
d62 1
a62 1
int do_rmdir(int, int, char *);
d65 1
a65 1
Attrib *do_stat(int, int, char *, int);
d68 1
a68 1
Attrib *do_lstat(int, int, char *, int);
d71 2
a72 1
Attrib *do_fstat(int, int, char *, u_int, int);
d75 1
a75 1
int do_setstat(int, int, char *, Attrib *);
d78 2
a79 1
int do_fsetstat(int, int, char *, u_int, Attrib *);
d82 1
a82 1
char *do_realpath(int, int, char *);
d85 1
a85 1
int do_rename(int, int, char *, char *);
d88 1
a88 1
int do_symlink(int, int, char *, char *);
d91 1
a91 1
char *do_readlink(int, int, char *);
d99 2
a100 1
int do_download(int, int, char *, char *, int);
d106 2
a107 1
int do_upload(int, int, char *, char *, int);
@


1.5.2.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.9 2002/02/13 00:59:23 djm Exp $ */
d4 1
a4 1
 * Copyright (c) 2001,2002 Damien Miller.  All rights reserved.
a28 3
#ifndef _SFTP_CLIENT_H
#define _SFTP_CLIENT_H

d41 1
a41 5
struct sftp_conn *
do_init(int, int, u_int, u_int);

u_int
sftp_proto_version(struct sftp_conn *);
d44 1
a44 1
int do_close(struct sftp_conn *, char *, u_int);
d47 1
a47 1
int do_ls(struct sftp_conn *, char *);
d50 1
a50 1
int do_readdir(struct sftp_conn *, char *, SFTP_DIRENT ***);
d56 1
a56 1
int do_rm(struct sftp_conn *, char *);
d59 1
a59 1
int do_mkdir(struct sftp_conn *, char *, Attrib *);
d62 1
a62 1
int do_rmdir(struct sftp_conn *, char *);
d65 1
a65 1
Attrib *do_stat(struct sftp_conn *, char *, int);
d68 1
a68 1
Attrib *do_lstat(struct sftp_conn *, char *, int);
d71 1
a71 1
Attrib *do_fstat(struct sftp_conn *, char *, u_int, int);
d74 1
a74 1
int do_setstat(struct sftp_conn *, char *, Attrib *);
d77 1
a77 1
int do_fsetstat(struct sftp_conn *, char *, u_int, Attrib *);
d80 1
a80 1
char *do_realpath(struct sftp_conn *, char *);
d83 1
a83 1
int do_rename(struct sftp_conn *, char *, char *);
d86 1
a86 1
int do_symlink(struct sftp_conn *, char *, char *);
d89 1
a89 1
char *do_readlink(struct sftp_conn *, char *);
d97 1
a97 1
int do_download(struct sftp_conn *, char *, char *, int);
d103 1
a103 3
int do_upload(struct sftp_conn *, char *, char *, int);

#endif
@


1.4
log
@Revise globbing for get/put to be more shell-like. In particular,
"get/put file* directory/" now works. ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.3 2001/03/13 22:42:54 djm Exp $ */
d37 2
a38 2
/* 
 * Initialiase a SSH filexfer connection. Returns -1 on error or 
d71 1
a71 1
Attrib *do_fstat(int fd_in, int fd_out, char *handle, u_int handle_len, 
@


1.3
log
@sftp client filename globbing for get, put, ch{mod,grp,own}. ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.2 2001/03/07 10:11:23 djm Exp $ */
d65 1
a65 1
Attrib *do_stat(int fd_in, int fd_out, char *path);
d68 1
a68 1
Attrib *do_lstat(int fd_in, int fd_out, char *path);
d71 2
a72 2
Attrib *do_fstat(int fd_in, int fd_out, char *handle,
    u_int handle_len);
@


1.2
log
@Support for new draft (draft-ietf-secsh-filexfer-01). New symlink handling
functions and small protocol change.
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.1 2001/02/04 11:11:54 djm Exp $ */
d29 8
d48 6
@


1.2.2.1
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@d29 4
a32 1
/* Initialiase a SSH filexfer connection */
d72 6
@


1.2.2.2
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.4 2001/03/16 08:16:18 djm Exp $ */
d29 1
a29 12
typedef struct SFTP_DIRENT SFTP_DIRENT;

struct SFTP_DIRENT {
	char *filename;
	char *longname;
	Attrib a;
};

/* 
 * Initialiase a SSH filexfer connection. Returns -1 on error or 
 * protocol version on success.
 */
a37 6
/* Read contents of 'path' to NULL-terminated array 'dir' */
int do_readdir(int fd_in, int fd_out, char *path, SFTP_DIRENT ***dir);

/* Frees a NULL-terminated array of SFTP_DIRENTs (eg. from do_readdir) */
void free_sftp_dirents(SFTP_DIRENT **s);

d48 1
a48 1
Attrib *do_stat(int fd_in, int fd_out, char *path, int quiet);
d51 1
a51 1
Attrib *do_lstat(int fd_in, int fd_out, char *path, int quiet);
d54 2
a55 2
Attrib *do_fstat(int fd_in, int fd_out, char *handle, u_int handle_len, 
    int quiet);
a68 6

/* Rename 'oldpath' to 'newpath' */
int do_symlink(int fd_in, int fd_out, char *oldpath, char *newpath);

/* Return target of symlink 'path' - caller must free result */
char *do_readlink(int fd_in, int fd_out, char *path);
@


1.1
log
@Basic interactive sftp client; ok theo@@
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d29 4
a32 1
/* Initialiase a SSH filexfer connection */
d72 6
@


1.1.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.1 2001/02/04 11:11:54 djm Exp $ */
@


1.1.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.1.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.4 2001/03/16 08:16:18 djm Exp $ */
d29 1
a29 12
typedef struct SFTP_DIRENT SFTP_DIRENT;

struct SFTP_DIRENT {
	char *filename;
	char *longname;
	Attrib a;
};

/* 
 * Initialiase a SSH filexfer connection. Returns -1 on error or 
 * protocol version on success.
 */
a37 6
/* Read contents of 'path' to NULL-terminated array 'dir' */
int do_readdir(int fd_in, int fd_out, char *path, SFTP_DIRENT ***dir);

/* Frees a NULL-terminated array of SFTP_DIRENTs (eg. from do_readdir) */
void free_sftp_dirents(SFTP_DIRENT **s);

d48 1
a48 1
Attrib *do_stat(int fd_in, int fd_out, char *path, int quiet);
d51 1
a51 1
Attrib *do_lstat(int fd_in, int fd_out, char *path, int quiet);
d54 2
a55 2
Attrib *do_fstat(int fd_in, int fd_out, char *handle, u_int handle_len, 
    int quiet);
a68 6

/* Rename 'oldpath' to 'newpath' */
int do_symlink(int fd_in, int fd_out, char *oldpath, char *newpath);

/* Return target of symlink 'path' - caller must free result */
char *do_readlink(int fd_in, int fd_out, char *path);
@


1.1.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.5 2001/04/05 10:42:52 markus Exp $ */
d37 2
a38 2
/*
 * Initialiase a SSH filexfer connection. Returns -1 on error or
d71 1
a71 1
Attrib *do_fstat(int fd_in, int fd_out, char *handle, u_int handle_len,
@


1.1.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.6 2001/06/26 06:33:01 itojun Exp $ */
d41 1
a41 1
int do_init(int, int);
d44 1
a44 1
int do_close(int, int, char *, u_int);
d47 1
a47 1
int do_ls(int, int, char *);
d50 1
a50 1
int do_readdir(int, int, char *, SFTP_DIRENT ***);
d53 1
a53 1
void free_sftp_dirents(SFTP_DIRENT **);
d56 1
a56 1
int do_rm(int, int, char *);
d59 1
a59 1
int do_mkdir(int, int, char *, Attrib *);
d62 1
a62 1
int do_rmdir(int, int, char *);
d65 1
a65 1
Attrib *do_stat(int, int, char *, int);
d68 1
a68 1
Attrib *do_lstat(int, int, char *, int);
d71 2
a72 1
Attrib *do_fstat(int, int, char *, u_int, int);
d75 1
a75 1
int do_setstat(int, int, char *, Attrib *);
d78 2
a79 1
int do_fsetstat(int, int, char *, u_int, Attrib *);
d82 1
a82 1
char *do_realpath(int, int, char *);
d85 1
a85 1
int do_rename(int, int, char *, char *);
d88 1
a88 1
int do_symlink(int, int, char *, char *);
d91 1
a91 1
char *do_readlink(int, int, char *);
d99 2
a100 1
int do_download(int, int, char *, char *, int);
d106 2
a107 1
int do_upload(int, int, char *, char *, int);
@


1.1.2.6
log
@Merge OpenSSH 3.1.
@
text
@d1 1
a1 1
/* $OpenBSD: sftp-client.h,v 1.9 2002/02/13 00:59:23 djm Exp $ */
d4 1
a4 1
 * Copyright (c) 2001,2002 Damien Miller.  All rights reserved.
a28 3
#ifndef _SFTP_CLIENT_H
#define _SFTP_CLIENT_H

d41 1
a41 5
struct sftp_conn *
do_init(int, int, u_int, u_int);

u_int
sftp_proto_version(struct sftp_conn *);
d44 1
a44 1
int do_close(struct sftp_conn *, char *, u_int);
d47 1
a47 1
int do_ls(struct sftp_conn *, char *);
d50 1
a50 1
int do_readdir(struct sftp_conn *, char *, SFTP_DIRENT ***);
d56 1
a56 1
int do_rm(struct sftp_conn *, char *);
d59 1
a59 1
int do_mkdir(struct sftp_conn *, char *, Attrib *);
d62 1
a62 1
int do_rmdir(struct sftp_conn *, char *);
d65 1
a65 1
Attrib *do_stat(struct sftp_conn *, char *, int);
d68 1
a68 1
Attrib *do_lstat(struct sftp_conn *, char *, int);
d71 1
a71 1
Attrib *do_fstat(struct sftp_conn *, char *, u_int, int);
d74 1
a74 1
int do_setstat(struct sftp_conn *, char *, Attrib *);
d77 1
a77 1
int do_fsetstat(struct sftp_conn *, char *, u_int, Attrib *);
d80 1
a80 1
char *do_realpath(struct sftp_conn *, char *);
d83 1
a83 1
int do_rename(struct sftp_conn *, char *, char *);
d86 1
a86 1
int do_symlink(struct sftp_conn *, char *, char *);
d89 1
a89 1
char *do_readlink(struct sftp_conn *, char *);
d97 1
a97 1
int do_download(struct sftp_conn *, char *, char *, int);
d103 1
a103 3
int do_upload(struct sftp_conn *, char *, char *, int);

#endif
@


