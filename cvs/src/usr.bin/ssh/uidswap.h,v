head	1.13;
access;
symbols
	OPENBSD_6_2:1.13.0.48
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.13.0.46
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.44
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.40
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.38
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.32
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.36
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.34
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.30
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.28
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.26
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.24
	OPENBSD_5_0:1.13.0.22
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.20
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.18
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.14
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.16
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.12
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.10
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.8
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.6
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.2
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.4
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.9.0.20
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.18
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.16
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.14
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.12
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.10
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.9.0.8
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.6
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.4
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.13
date	2006.08.03.03.34.42;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2006.07.06.16.03.53;	author stevesk;	state Exp;
branches;
next	1.11;

1.11
date	2006.06.08.14.45.49;	author markus;	state Exp;
branches;
next	1.10;

1.10
date	2006.03.25.22.22.43;	author djm;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.26.17.27.25;	author markus;	state Exp;
branches
	1.9.18.1
	1.9.20.1;
next	1.8;

1.8
date	2001.06.26.06.33.06;	author itojun;	state Exp;
branches;
next	1.7;

1.7
date	2001.04.06.21.00.17;	author markus;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2001.01.29.01.58.19;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	2000.12.20.19.37.22;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.07.20.27.55;	author deraadt;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2000.04.14.10.30.34;	author markus;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	99.11.24.00.26.04;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.09.26.20.53.38;	author deraadt;	state Exp;
branches;
next	;

1.3.2.1
date	2000.11.08.21.31.36;	author jason;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2001.03.12.15.44.18;	author jason;	state Exp;
branches;
next	1.3.2.3;

1.3.2.3
date	2001.03.21.18.53.20;	author jason;	state Exp;
branches;
next	;

1.4.2.1
date	2001.02.16.20.13.24;	author jason;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2001.02.19.17.19.42;	author jason;	state Exp;
branches;
next	1.4.2.3;

1.4.2.3
date	2001.03.21.19.46.32;	author jason;	state Exp;
branches;
next	1.4.2.4;

1.4.2.4
date	2001.05.07.21.09.39;	author jason;	state Exp;
branches;
next	1.4.2.5;

1.4.2.5
date	2001.09.27.00.15.43;	author miod;	state Exp;
branches;
next	;

1.7.2.1
date	2001.09.27.19.03.56;	author jason;	state Exp;
branches;
next	1.7.2.2;

1.7.2.2
date	2002.03.09.00.20.45;	author miod;	state Exp;
branches;
next	;

1.9.18.1
date	2006.10.06.03.19.33;	author brad;	state Exp;
branches;
next	;

1.9.20.1
date	2006.09.30.04.06.51;	author brad;	state Exp;
branches;
next	;


desc
@@


1.13
log
@almost entirely get rid of the culture of ".h files that include .h files"
ok djm, sort of ok stevesk
makes the pain stop in one easy step
@
text
@/* $OpenBSD: uidswap.h,v 1.12 2006/07/06 16:03:53 stevesk Exp $ */

/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */

void	 temporarily_use_uid(struct passwd *);
void	 restore_uid(void);
void	 permanently_set_uid(struct passwd *);
void	 permanently_drop_suid(uid_t);
@


1.12
log
@move #include <pwd.h> out of includes.h; ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: uidswap.h,v 1.11 2006/06/08 14:45:49 markus Exp $ */
a14 7
#ifndef UIDSWAP_H
#define UIDSWAP_H

#include <sys/types.h>

#include <pwd.h>

a18 2

#endif				/* UIDSWAP_H */
@


1.11
log
@do not set the gid, noted by solar; ok djm
@
text
@d1 1
a1 1
/* $OpenBSD: uidswap.h,v 1.10 2006/03/25 22:22:43 djm Exp $ */
d17 4
@


1.10
log
@standardise spacing in $OpenBSD$ tags; requested by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: uidswap.h,v 1.9 2001/06/26 17:27:25 markus Exp $ */
d21 1
@


1.9
log
@remove comments from .h, since they are cut&paste from the .c files
and out of sync
@
text
@d1 1
a1 1
/*	$OpenBSD: uidswap.h,v 1.8 2001/06/26 06:33:06 itojun Exp $	*/
@


1.9.18.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: uidswap.h,v 1.13 2006/08/03 03:34:42 deraadt Exp $ */
d15 3
d21 2
a22 1
void	 permanently_drop_suid(uid_t);
@


1.9.20.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: uidswap.h,v 1.13 2006/08/03 03:34:42 deraadt Exp $ */
d15 3
d21 2
a22 1
void	 permanently_drop_suid(uid_t);
@


1.8
log
@prototype pedant.  not very creative...
- () -> (void)
- no variable names
@
text
@d1 1
a1 1
/*	$OpenBSD: uidswap.h,v 1.7 2001/04/06 21:00:17 markus Exp $	*/
d18 3
a20 17
/*
 * Temporarily changes to the given uid.  If the effective user id is not
 * root, this does nothing.  This call cannot be nested.
 */
void    temporarily_use_uid(struct passwd *);

/*
 * Restores the original effective user id after temporarily_use_uid().
 * This should only be called while temporarily_use_uid is effective.
 */
void    restore_uid(void);

/*
 * Permanently sets all uids to the given uid.  This cannot be called while
 * temporarily_use_uid is effective.  This must also clear any saved uids.
 */
void    permanently_set_uid(struct passwd *);
@


1.7
log
@do gid/groups-swap in addition to uid-swap, should help if /home/group
is chmod 750 + chgrp grp /home/group/, work be deraadt and me, thanks
to olar@@openwall.com is comments.  we had many requests for this.
@
text
@d1 1
a1 1
/*	$OpenBSD: uidswap.h,v 1.6 2001/01/29 01:58:19 niklas Exp $	*/
d22 1
a22 1
void    temporarily_use_uid(struct passwd *pw);
d34 1
a34 1
void    permanently_set_uid(struct passwd *pw);
@


1.7.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d1 1
a1 1
/*	$OpenBSD: uidswap.h,v 1.9 2001/06/26 17:27:25 markus Exp $	*/
d18 17
a34 3
void	 temporarily_use_uid(struct passwd *);
void	 restore_uid(void);
void	 permanently_set_uid(struct passwd *);
@


1.7.2.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@@


1.6
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d22 1
a22 1
void    temporarily_use_uid(uid_t uid);
d34 1
a34 1
void    permanently_set_uid(uid_t uid);
@


1.5
log
@fix prototypes; from  stevesk@@pobox.com
@
text
@d1 2
@


1.4
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d26 1
a26 1
void    restore_uid();
@


1.4.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@a0 2
/*	$OpenBSD: uidswap.h,v 1.6 2001/01/29 01:58:19 niklas Exp $	*/

d26 1
a26 1
void    restore_uid(void);
@


1.4.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.4.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@@


1.4.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: uidswap.h,v 1.7 2001/04/06 21:00:17 markus Exp $	*/
d22 1
a22 1
void    temporarily_use_uid(struct passwd *pw);
d34 1
a34 1
void    permanently_set_uid(struct passwd *pw);
@


1.4.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d1 1
a1 1
/*	$OpenBSD: uidswap.h,v 1.9 2001/06/26 17:27:25 markus Exp $	*/
d18 17
a34 3
void	 temporarily_use_uid(struct passwd *);
void	 restore_uid(void);
void	 permanently_set_uid(struct passwd *);
@


1.3
log
@whitespace cleanup
@
text
@a1 3
 *
 * uidswap.h
 *
a2 1
 *
d6 5
a10 3
 * Created: Sat Sep  9 01:43:15 1995 ylo
 * Last modified: Sat Sep  9 02:34:04 1995 ylo
 *
@


1.3.2.1
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@d2 3
d6 1
d10 3
a12 5
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
@


1.3.2.2
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@a0 2
/*	$OpenBSD: uidswap.h,v 1.6 2001/01/29 01:58:19 niklas Exp $	*/

d26 1
a26 1
void    restore_uid(void);
@


1.3.2.3
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@@


1.2
log
@much more KNF
@
text
@d2 1
a2 1
 * 
d4 1
a4 1
 * 
d6 1
a6 1
 * 
d9 1
a9 1
 * 
d12 1
a12 1
 * 
@


1.1
log
@i bet a lot of people didn't know what ssh 1.2.16 had a nice license.
well, except for the patent issues.  someone in sweden (forget their
name at the moment) cleaned out most of the patented code, and now
this code removes rsa code.  when this is done, it will link against
libssl, but the work isn't completely done yet.  then we need to bring
this up to modern days, featurewise.
@
text
@d2 12
a13 12

uidswap.h

Author: Tatu Ylonen <ylo@@cs.hut.fi>

Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
                   All rights reserved

Created: Sat Sep  9 01:43:15 1995 ylo
Last modified: Sat Sep  9 02:34:04 1995 ylo

*/
d18 17
a34 11
/* Temporarily changes to the given uid.  If the effective user id is not
   root, this does nothing.  This call cannot be nested. */
void temporarily_use_uid(uid_t uid);

/* Restores the original effective user id after temporarily_use_uid().
   This should only be called while temporarily_use_uid is effective. */
void restore_uid();

/* Permanently sets all uids to the given uid.  This cannot be called while
   temporarily_use_uid is effective.  This must also clear any saved uids. */
void permanently_set_uid(uid_t uid);
d36 1
a36 1
#endif /* UIDSWAP_H */
@

