head	1.90;
access;
symbols
	OPENBSD_6_2:1.90.0.2
	OPENBSD_6_2_BASE:1.90
	OPENBSD_6_1:1.90.0.4
	OPENBSD_6_1_BASE:1.90
	OPENBSD_6_0:1.88.0.6
	OPENBSD_6_0_BASE:1.88
	OPENBSD_5_9:1.88.0.2
	OPENBSD_5_9_BASE:1.88
	OPENBSD_5_8:1.85.0.4
	OPENBSD_5_8_BASE:1.85
	OPENBSD_5_7:1.85.0.2
	OPENBSD_5_7_BASE:1.85
	OPENBSD_5_6:1.83.0.4
	OPENBSD_5_6_BASE:1.83
	OPENBSD_5_5:1.81.0.4
	OPENBSD_5_5_BASE:1.81
	OPENBSD_5_4:1.78.0.2
	OPENBSD_5_4_BASE:1.78
	OPENBSD_5_3:1.73.0.8
	OPENBSD_5_3_BASE:1.73
	OPENBSD_5_2:1.73.0.6
	OPENBSD_5_2_BASE:1.73
	OPENBSD_5_1_BASE:1.73
	OPENBSD_5_1:1.73.0.4
	OPENBSD_5_0:1.73.0.2
	OPENBSD_5_0_BASE:1.73
	OPENBSD_4_9:1.72.0.2
	OPENBSD_4_9_BASE:1.72
	OPENBSD_4_8:1.70.0.4
	OPENBSD_4_8_BASE:1.70
	OPENBSD_4_7:1.70.0.2
	OPENBSD_4_7_BASE:1.70
	OPENBSD_4_6:1.69.0.4
	OPENBSD_4_6_BASE:1.69
	OPENBSD_4_5:1.68.0.2
	OPENBSD_4_5_BASE:1.68
	OPENBSD_4_4:1.67.0.4
	OPENBSD_4_4_BASE:1.67
	OPENBSD_4_3:1.67.0.2
	OPENBSD_4_3_BASE:1.67
	OPENBSD_4_2:1.64.0.14
	OPENBSD_4_2_BASE:1.64
	OPENBSD_4_1:1.64.0.10
	OPENBSD_4_1_BASE:1.64
	OPENBSD_4_0:1.64.0.12
	OPENBSD_4_0_BASE:1.64
	OPENBSD_3_9:1.64.0.8
	OPENBSD_3_9_BASE:1.64
	OPENBSD_3_8:1.64.0.6
	OPENBSD_3_8_BASE:1.64
	OPENBSD_3_7:1.64.0.4
	OPENBSD_3_7_BASE:1.64
	OPENBSD_3_6:1.64.0.2
	OPENBSD_3_6_BASE:1.64
	OPENBSD_3_5:1.62.0.2
	OPENBSD_3_5_BASE:1.62
	OPENBSD_3_4:1.61.0.2
	OPENBSD_3_4_BASE:1.61
	OPENBSD_3_3:1.52.0.2
	OPENBSD_3_3_BASE:1.52
	OPENBSD_3_2:1.51.0.2
	OPENBSD_3_2_BASE:1.51
	OPENBSD_3_1:1.47.0.2
	OPENBSD_3_1_BASE:1.47
	OPENBSD_3_0:1.45.0.2
	OPENBSD_3_0_BASE:1.45
	OPENBSD_2_9_BASE:1.38
	OPENBSD_2_9:1.38.0.2
	OPENBSD_2_8:1.31.0.2
	OPENBSD_2_8_BASE:1.31
	OPENBSD_2_7:1.26.0.2
	OPENBSD_2_7_BASE:1.26
	OPENBSD_2_6:1.19.0.2
	OPENBSD_2_6_BASE:1.19;
locks; strict;
comment	@# @;


1.90
date	2016.09.28.16.33.07;	author djm;	state Exp;
branches;
next	1.89;
commitid	e2NJzal9PUi2o22D;

1.89
date	2016.08.13.17.47.41;	author markus;	state Exp;
branches;
next	1.88;
commitid	dl4RDERdJITM8DKC;

1.88
date	2016.01.14.16.17.40;	author markus;	state Exp;
branches;
next	1.87;
commitid	W9ye0gltieEl87AJ;

1.87
date	2015.10.09.01.37.08;	author deraadt;	state Exp;
branches;
next	1.86;
commitid	sbrB3Q5CNxcwZpfU;

1.86
date	2015.10.03.02.37.30;	author deraadt;	state Exp;
branches;
next	1.85;
commitid	vM3kpeaejbZIB31e;

1.85
date	2015.03.03.21.21.13;	author djm;	state Exp;
branches;
next	1.84;
commitid	fcvr9LotYI8aCFuc;

1.84
date	2015.01.19.20.30.24;	author markus;	state Exp;
branches;
next	1.83;
commitid	74WAJgdQCKxDqTwt;

1.83
date	2014.04.29.18.01.49;	author markus;	state Exp;
branches;
next	1.82;

1.82
date	2014.03.26.19.58.37;	author tedu;	state Exp;
branches;
next	1.81;

1.81
date	2014.01.29.06.18.35;	author djm;	state Exp;
branches;
next	1.80;

1.80
date	2013.11.02.21.59.15;	author markus;	state Exp;
branches;
next	1.79;

1.79
date	2013.08.10.10.19.35;	author ajacoutot;	state Exp;
branches;
next	1.78;

1.78
date	2013.07.20.01.55.13;	author djm;	state Exp;
branches;
next	1.77;

1.77
date	2013.07.02.13.32.38;	author markus;	state Exp;
branches;
next	1.76;

1.76
date	2013.06.19.05.27.07;	author deraadt;	state Exp;
branches;
next	1.75;

1.75
date	2013.06.18.20.27.20;	author miod;	state Exp;
branches;
next	1.74;

1.74
date	2013.06.17.19.23.33;	author robert;	state Exp;
branches;
next	1.73;

1.73
date	2011.06.22.21.57.01;	author djm;	state Exp;
branches;
next	1.72;

1.72
date	2010.10.13.08.14.22;	author jsg;	state Exp;
branches;
next	1.71;

1.71
date	2010.08.31.11.54.45;	author djm;	state Exp;
branches;
next	1.70;

1.70
date	2009.10.24.11.18.23;	author andreas;	state Exp;
branches;
next	1.69;

1.69
date	2009.05.28.16.50.16;	author andreas;	state Exp;
branches;
next	1.68;

1.68
date	2008.11.04.08.22.13;	author djm;	state Exp;
branches;
next	1.67;

1.67
date	2008.02.04.21.53.00;	author markus;	state Exp;
branches;
next	1.66;

1.66
date	2007.09.21.08.15.29;	author djm;	state Exp;
branches;
next	1.65;

1.65
date	2007.08.23.02.49.43;	author djm;	state Exp;
branches;
next	1.64;

1.64
date	2004.08.23.14.26.39;	author dtucker;	state Exp;
branches;
next	1.63;

1.63
date	2004.06.13.15.03.02;	author djm;	state Exp;
branches;
next	1.62;

1.62
date	2003.12.23.16.12.10;	author jakob;	state Exp;
branches
	1.62.2.1;
next	1.61;

1.61
date	2003.08.24.18.17.38;	author deraadt;	state Exp;
branches
	1.61.2.1;
next	1.60;

1.60
date	2003.08.22.13.22.27;	author markus;	state Exp;
branches;
next	1.59;

1.59
date	2003.08.22.10.56.09;	author markus;	state Exp;
branches;
next	1.58;

1.58
date	2003.07.16.19.10.13;	author deraadt;	state Exp;
branches;
next	1.57;

1.57
date	2003.07.15.19.02.20;	author deraadt;	state Exp;
branches;
next	1.56;

1.56
date	2003.05.17.01.31.21;	author hin;	state Exp;
branches;
next	1.55;

1.55
date	2003.05.14.02.15.48;	author markus;	state Exp;
branches;
next	1.54;

1.54
date	2003.04.10.00.17.52;	author pvalchev;	state Exp;
branches;
next	1.53;

1.53
date	2003.04.09.08.24.24;	author hin;	state Exp;
branches;
next	1.52;

1.52
date	2003.02.21.09.04.09;	author markus;	state Exp;
branches
	1.52.2.1;
next	1.51;

1.51
date	2002.06.20.19.56.07;	author stevesk;	state Exp;
branches
	1.51.2.1;
next	1.50;

1.50
date	2002.06.11.04.14.26;	author markus;	state Exp;
branches;
next	1.49;

1.49
date	2002.05.25.18.51.07;	author markus;	state Exp;
branches;
next	1.48;

1.48
date	2002.05.11.00.20.18;	author espie;	state Exp;
branches;
next	1.47;

1.47
date	2002.03.18.17.50.31;	author provos;	state Exp;
branches
	1.47.2.1;
next	1.46;

1.46
date	2002.03.05.00.49.51;	author deraadt;	state Exp;
branches;
next	1.45;

1.45
date	2001.10.07.18.14.20;	author markus;	state Exp;
branches
	1.45.2.1;
next	1.44;

1.44
date	2001.09.10.22.44.47;	author jason;	state Exp;
branches;
next	1.43;

1.43
date	2001.06.28.02.33.43;	author hin;	state Exp;
branches;
next	1.42;

1.42
date	2001.06.26.17.52.41;	author dugsong;	state Exp;
branches;
next	1.41;

1.41
date	2001.06.26.16.15.26;	author dugsong;	state Exp;
branches;
next	1.40;

1.40
date	2001.05.29.22.23.58;	author millert;	state Exp;
branches;
next	1.39;

1.39
date	2001.05.18.14.13.29;	author markus;	state Exp;
branches;
next	1.38;

1.38
date	2001.03.29.21.17.40;	author markus;	state Exp;
branches
	1.38.2.1;
next	1.37;

1.37
date	2001.03.04.01.46.30;	author djm;	state Exp;
branches;
next	1.36;

1.36
date	2001.03.03.23.59.40;	author markus;	state Exp;
branches;
next	1.35;

1.35
date	2001.01.29.01.58.23;	author niklas;	state Exp;
branches;
next	1.34;

1.34
date	2001.01.18.17.12.43;	author markus;	state Exp;
branches;
next	1.33;

1.33
date	2001.01.18.17.00.00;	author markus;	state Exp;
branches;
next	1.32;

1.32
date	2001.01.13.18.56.48;	author markus;	state Exp;
branches;
next	1.31;

1.31
date	2000.10.11.20.14.40;	author markus;	state Exp;
branches
	1.31.2.1;
next	1.30;

1.30
date	2000.10.11.04.02.18;	author provos;	state Exp;
branches;
next	1.29;

1.29
date	2000.09.03.18.41.19;	author espie;	state Exp;
branches;
next	1.28;

1.28
date	2000.08.20.18.42.41;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	2000.06.18.04.05.02;	author markus;	state Exp;
branches;
next	1.26;

1.26
date	2000.04.26.21.31.57;	author markus;	state Exp;
branches
	1.26.2.1;
next	1.25;

1.25
date	2000.03.28.21.15.46;	author markus;	state Exp;
branches;
next	1.24;

1.24
date	2000.03.14.20.13.29;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2000.03.01.20.00.49;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	99.12.06.21.47.12;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	99.12.06.20.15.38;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	99.10.25.20.27.27;	author markus;	state Exp;
branches;
next	1.19;

1.19
date	99.10.16.20.47.15;	author markus;	state Exp;
branches;
next	1.18;

1.18
date	99.10.07.21.45.03;	author markus;	state Exp;
branches;
next	1.17;

1.17
date	99.10.06.22.24.56;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	99.10.05.01.23.54;	author dugsong;	state Exp;
branches;
next	1.15;

1.15
date	99.10.04.20.56.28;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	99.10.04.20.52.44;	author markus;	state Exp;
branches;
next	1.13;

1.13
date	99.10.03.17.58.06;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	99.10.01.19.54.13;	author beck;	state Exp;
branches;
next	1.11;

1.11
date	99.10.01.17.40.01;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	99.09.30.17.08.53;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	99.09.30.00.17.08;	author provos;	state Exp;
branches;
next	1.8;

1.8
date	99.09.30.00.10.00;	author provos;	state Exp;
branches;
next	1.7;

1.7
date	99.09.29.18.16.23;	author dugsong;	state Exp;
branches;
next	1.6;

1.6
date	99.09.29.12.27.40;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	99.09.29.00.14.38;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	99.09.29.00.09.50;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.09.28.04.45.38;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	99.09.26.21.52.51;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.09.26.21.47.56;	author deraadt;	state Exp;
branches;
next	;

1.26.2.1
date	2000.09.01.18.13.25;	author jason;	state Exp;
branches;
next	1.26.2.2;

1.26.2.2
date	2000.11.08.21.27.42;	author jason;	state Exp;
branches;
next	1.26.2.3;

1.26.2.3
date	2001.03.12.15.44.21;	author jason;	state Exp;
branches;
next	1.26.2.4;

1.26.2.4
date	2001.03.21.18.53.31;	author jason;	state Exp;
branches;
next	;

1.31.2.1
date	2001.02.16.20.13.31;	author jason;	state Exp;
branches;
next	1.31.2.2;

1.31.2.2
date	2001.02.19.17.19.53;	author jason;	state Exp;
branches;
next	1.31.2.3;

1.31.2.3
date	2001.03.21.19.46.34;	author jason;	state Exp;
branches;
next	1.31.2.4;

1.31.2.4
date	2001.05.07.21.09.42;	author jason;	state Exp;
branches;
next	1.31.2.5;

1.31.2.5
date	2001.09.27.00.16.05;	author miod;	state Exp;
branches;
next	1.31.2.6;

1.31.2.6
date	2001.11.15.22.50.34;	author miod;	state Exp;
branches;
next	1.31.2.7;

1.31.2.7
date	2002.03.08.17.04.44;	author brad;	state Exp;
branches;
next	;

1.38.2.1
date	2001.09.27.19.03.56;	author jason;	state Exp;
branches;
next	1.38.2.2;

1.38.2.2
date	2001.11.15.22.51.55;	author miod;	state Exp;
branches;
next	1.38.2.3;

1.38.2.3
date	2001.11.16.18.45.24;	author miod;	state Exp;
branches;
next	1.38.2.4;

1.38.2.4
date	2001.12.03.00.36.50;	author miod;	state Exp;
branches;
next	1.38.2.5;

1.38.2.5
date	2002.03.09.00.24.23;	author miod;	state Exp;
branches;
next	1.38.2.6;

1.38.2.6
date	2002.06.02.22.56.53;	author miod;	state Exp;
branches;
next	;

1.45.2.1
date	2002.03.07.17.37.48;	author jason;	state Exp;
branches;
next	1.45.2.2;

1.45.2.2
date	2002.05.17.00.03.41;	author miod;	state Exp;
branches;
next	1.45.2.3;

1.45.2.3
date	2002.06.22.07.24.42;	author miod;	state Exp;
branches;
next	;

1.47.2.1
date	2002.05.18.04.12.11;	author jason;	state Exp;
branches;
next	1.47.2.2;

1.47.2.2
date	2002.05.18.04.50.38;	author jason;	state Exp;
branches;
next	1.47.2.3;

1.47.2.3
date	2002.06.26.15.30.40;	author jason;	state Exp;
branches;
next	1.47.2.4;

1.47.2.4
date	2003.04.03.22.35.21;	author miod;	state Exp;
branches;
next	;

1.51.2.1
date	2003.04.01.00.12.14;	author margarida;	state Exp;
branches;
next	1.51.2.2;

1.51.2.2
date	2003.09.16.21.20.30;	author brad;	state Exp;
branches;
next	;

1.52.2.1
date	2003.09.16.20.50.45;	author brad;	state Exp;
branches;
next	1.52.2.2;

1.52.2.2
date	2004.03.04.18.18.17;	author brad;	state Exp;
branches;
next	;

1.61.2.1
date	2004.02.28.03.51.35;	author brad;	state Exp;
branches;
next	1.61.2.2;

1.61.2.2
date	2004.08.19.22.37.33;	author brad;	state Exp;
branches;
next	;

1.62.2.1
date	2004.08.19.04.13.28;	author brad;	state Exp;
branches;
next	;


desc
@@


1.90
log
@Remove support for pre-authentication compression. Doing compression
early in the protocol probably seemed reasonable in the 1990s, but
today it's clearly a bad idea in terms of both cryptography (cf.
multiple compression oracle attacks in TLS) and attack surface.

Moreover, to support it across privilege-separation zlib needed
the assistance of a complex shared-memory manager that made the
required attack surface considerably larger.

Prompted by Guido Vranken pointing out a compiler-elided security
check in the shared memory manager found by Stack
(http://css.csail.mit.edu/stack/); ok deraadt@@ markus@@

NB. pre-auth authentication has been disabled by default in sshd
for >10 years.
@
text
@#	$OpenBSD: Makefile,v 1.89 2016/08/13 17:47:41 markus Exp $

.PATH:		${.CURDIR}/..
.include "${.CURDIR}/../Makefile.inc"

PROG=	sshd
BINOWN=	root
BINMODE=555
BINDIR=	/usr/sbin
MAN=	sshd.8 sshd_config.5

SRCS=	sshd.c auth-rhosts.c auth-passwd.c \
	sshpty.c sshlogin.c servconf.c serverloop.c \
	auth.c auth2.c auth-options.c session.c \
	auth2-chall.c groupaccess.c \
	auth-bsdauth.c auth2-hostbased.c auth2-kbdint.c \
	auth2-none.c auth2-passwd.c auth2-pubkey.c \
	monitor.c monitor_wrap.c \
	sftp-server.c sftp-common.c \
	sandbox-pledge.c

.include <bsd.own.mk> # for KERBEROS and AFS

KERBEROS5=no

.if (${KERBEROS5:L} == "yes")
CFLAGS+=-DKRB5 -I${DESTDIR}/usr/include/kerberosV -DGSSAPI
SRCS+=  auth-krb5.c auth2-gss.c gss-serv.c gss-serv-krb5.c
.endif

.include <bsd.prog.mk>

.if (${KERBEROS5:L} == "yes")
LDADD+= -lgssapi -lkrb5 -lasn1
LDADD+= -lwind -lroken -lcom_err -lpthread -lheimbase -lkafs
DPADD+= ${LIBGSSAPI} ${LIBKRB5}
.endif

.if (${OPENSSL:L} == "yes")
LDADD+=	-lcrypto -lutil
DPADD+=	${LIBCRYPTO} ${LIBUTIL}
.endif

LDADD+=	-lz
DPADD+=	${LIBZ}
@


1.89
log
@remove ssh1 server code; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.88 2016/01/14 16:17:40 markus Exp $
d18 1
a18 1
	monitor_mm.c monitor.c monitor_wrap.c \
@


1.88
log
@remove roaming support; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.87 2015/10/09 01:37:08 deraadt Exp $
d15 1
a15 1
	auth-chall.c auth2-chall.c groupaccess.c \
a20 4

.if (${SSH1:L} == "yes")
SRCS+=	auth-rsa.c auth-rh-rsa.c auth1.c
.endif
@


1.87
log
@Change all tame callers to namechange to pledge(2).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.86 2015/10/03 02:37:30 deraadt Exp $
d20 1
a20 1
	roaming_common.c roaming_serv.c sandbox-pledge.c
@


1.86
log
@switch from using the systrace-based sandbox to the tame-based sandbox.
discussed it at length with djm -- i think it is time to give this a
trial in snapshots.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.85 2015/03/03 21:21:13 djm Exp $
d20 1
a20 1
	roaming_common.c roaming_serv.c sandbox-tame.c
@


1.85
log
@add SSH1 Makefile knob to make it easier to build without SSH1 support;
ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.84 2015/01/19 20:30:24 markus Exp $
d20 1
a20 1
	roaming_common.c roaming_serv.c sandbox-systrace.c
@


1.84
log
@add experimental api for packet layer; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.83 2014/04/29 18:01:49 markus Exp $
d22 1
a22 1
.if (${OPENSSL:L} == "yes")
@


1.83
log
@make compiling against OpenSSL optional (make OPENSSL=no);
reduces algorithms to curve25519, aes-ctr, chacha, ed25519;
allows us to explore further options; with and ok djm
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.82 2014/03/26 19:58:37 tedu Exp $
d20 1
a20 2
	roaming_common.c roaming_serv.c sandbox-systrace.c \
	kexc25519s.c
d23 1
a23 2
SRCS+=	auth-rsa.c auth-rh-rsa.c auth1.c \
	kexdhs.c kexgexs.c kexecdhs.c
@


1.82
log
@remove libwrap support. ok deraadt djm mfriedl
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.81 2014/01/29 06:18:35 djm Exp $
d4 1
d12 1
a12 1
SRCS=	sshd.c auth-rhosts.c auth-passwd.c auth-rsa.c auth-rh-rsa.c \
d14 1
a14 1
	auth.c auth1.c auth2.c auth-options.c session.c \
d19 1
a19 1
	kexdhs.c kexgexs.c kexecdhs.c sftp-server.c sftp-common.c \
d23 5
d45 7
a51 2
LDADD+=	-lcrypto -lutil -lz
DPADD+=	${LIBCRYPTO} ${LIBUTIL} ${LIBZ}
@


1.81
log
@remove experimental, never-enabled JPAKE code; ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.80 2013/11/02 21:59:15 markus Exp $
a40 6

.if (${TCP_WRAPPERS:L} == "yes")
CFLAGS+= -DLIBWRAP
DPADD+= ${LIBWRAP}
LDADD+= -lwrap
.endif
@


1.80
log
@use curve25519 for default key exchange (curve25519-sha256@@libssh.org);
initial patch from Aris Adamantiadis; ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.79 2013/08/10 10:19:35 ajacoutot Exp $
d15 1
a15 1
	auth-bsdauth.c auth2-hostbased.c auth2-kbdint.c auth2-jpake.c \
@


1.79
log
@libkafs5 -> libkafs (unused in build, so no functional change)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.78 2013/07/20 01:55:13 djm Exp $
d19 2
a20 1
	roaming_common.c roaming_serv.c sandbox-systrace.c
@


1.78
log
@fix kerberos/GSSAPI deprecation warnings and linking; "looks okay" millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.77 2013/07/02 13:32:38 markus Exp $
d34 1
a34 1
LDADD+= -lwind -lroken -lcom_err -lpthread -lheimbase -lkafs5
@


1.77
log
@add missing library dependencies
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.76 2013/06/19 05:27:07 deraadt Exp $
d22 1
d33 2
a34 2
LDADD+= -lgssapi -lkrb5 -lhx509 -lasn1 -lheimntlm
LDADD+= -lwind -lroken -lcom_err -lpthread -lheimbase -lkafs
@


1.76
log
@stop doing kerberos in ssh and sshd
the code bloat makes that no longer trustworthy functionality
ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.75 2013/06/18 20:27:20 miod Exp $
d37 1
a38 1
LDADD+=	-lcrypto -lutil -lz
@


1.75
log
@Shuffle library link order to appease the static arch deities.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.74 2013/06/17 19:23:33 robert Exp $
d22 1
@


1.74
log
@link to the new kerberos libraries
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.73 2011/06/22 21:57:01 djm Exp $
d31 2
a32 2
LDADD+= -lgssapi -lkrb5 -lasn1 -lheimntlm
LDADD+= -lhx509 -lwind -lroken -lcom_err -lpthread -lheimbase -lkafs5
@


1.73
log
@introduce sandboxing of the pre-auth privsep child using systrace(4).

This introduces a new "UsePrivilegeSeparation=sandbox" option for
sshd_config that applies mandatory restrictions on the syscalls the
privsep child can perform. This prevents a compromised privsep child
from being used to attack other hosts (by opening sockets and proxying)
or probing local kernel attack surface.

The sandbox is implemented using systrace(4) in unsupervised "fast-path"
mode, where a list of permitted syscalls is supplied. Any syscall not
on the list results in SIGKILL being sent to the privsep child. Note
that this requires a kernel with the new SYSTR_POLICY_KILL option.

UsePrivilegeSeparation=sandbox will become the default in the future
so please start testing it now.

feedback dtucker@@; ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.72 2010/10/13 08:14:22 jsg Exp $
d31 2
a32 1
LDADD+= -lgssapi -lkrb5 -lkafs
@


1.72
log
@The heimdal code switched to using DES from libcrypto when 0.7.2
was imported over four years ago, so we don't need to link libdes
for kerberos anymore.

ok mikeb@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.71 2010/08/31 11:54:45 djm Exp $
d19 1
a19 1
	roaming_common.c roaming_serv.c
@


1.71
log
@Implement Elliptic Curve Cryptography modes for key exchange (ECDH) and
host/user keys (ECDSA) as specified by RFC5656. ECDH and ECDSA offer
better performance than plain DH and DSA at the same equivalent symmetric
key length, as well as much shorter keys.

Only the mandatory sections of RFC5656 are implemented, specifically the
three REQUIRED curves nistp256, nistp384 and nistp521 and only ECDH and
ECDSA. Point compression (optional in RFC5656 is NOT implemented).

Certificate host and user keys using the new ECDSA key types are supported.

Note that this code has not been tested for interoperability and may be
subject to change.

feedback and ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.70 2009/10/24 11:18:23 andreas Exp $
d35 2
a36 2
DPADD+=	${LIBCRYPTO} ${LIBUTIL} ${LIBZ} ${LIBDES}
LDADD+=	-lcrypto -lutil -lz -ldes
@


1.70
log
@Dummy implementation of wait_for_roaming_reconnect() for the server side.
It doesn't do anything yet but is needed for upcoming changes in
roaming_common.c
ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.69 2009/05/28 16:50:16 andreas Exp $
d15 1
a15 1
	auth-bsdauth.c auth2-hostbased.c auth2-kbdint.c \
d18 1
a18 1
	kexdhs.c kexgexs.c sftp-server.c sftp-common.c auth2-jpake.c \
@


1.69
log
@Keep track of number of bytes read and written. Needed for upcoming
changes. Most code from Martin Forssen, maf at appgate dot com.
ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.68 2008/11/04 08:22:13 djm Exp $
d19 1
a19 1
	roaming_common.c
@


1.68
log
@Add support for an experimental zero-knowledge password authentication
method using the J-PAKE protocol described in F. Hao, P. Ryan,
"Password Authenticated Key Exchange by Juggling", 16th Workshop on
Security Protocols, Cambridge, April 2008.

This method allows password-based authentication without exposing
the password to the server. Instead, the client and server exchange
cryptographic proofs to demonstrate of knowledge of the password while
revealing nothing useful to an attacker or compromised endpoint.

This is experimental, work-in-progress code and is presently
compiled-time disabled (turn on -DJPAKE in Makefile.inc).

"just commit it.  It isn't too intrusive." deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.67 2008/02/04 21:53:00 markus Exp $
d18 2
a19 1
	kexdhs.c kexgexs.c sftp-server.c sftp-common.c auth2-jpake.c
@


1.67
log
@link sftp-server into sshd; feedback and ok djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.66 2007/09/21 08:15:29 djm Exp $
d18 1
a18 1
	kexdhs.c kexgexs.c sftp-server.c sftp-common.c
@


1.66
log
@unifdef -DBSD_AUTH
unifdef -USKEY

These options have been in use for some years;
ok markus@@ "no objection" millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.65 2007/08/23 02:49:43 djm Exp $
d18 1
a18 1
	kexdhs.c kexgexs.c
@


1.65
log
@unifdef HAVE_LOGIN_CAP; ok deraadt@@ millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.64 2004/08/23 14:26:39 dtucker Exp $
a9 1
CFLAGS+=-DBSD_AUTH
d15 1
a15 1
	auth-skey.c auth-bsdauth.c auth2-hostbased.c auth2-kbdint.c \
a41 6

#.if (${SKEY:L} == "yes")
#CFLAGS+= -DSKEY
#DPADD+= ${SKEY}
#LDADD+= -lskey
#.endif
@


1.64
log
@Use permanently_set_uid() in ssh and ssh-keysign for consistency, matches
change in Portable; ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.63 2004/06/13 15:03:02 djm Exp $
d10 1
a10 1
CFLAGS+=-DHAVE_LOGIN_CAP -DBSD_AUTH
@


1.63
log
@implement session multiplexing in the client (the server has supported this
since 2.0); ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.62 2003/12/23 16:12:10 jakob Exp $
d13 1
a13 1
	sshpty.c sshlogin.c servconf.c serverloop.c uidswap.c \
@


1.62
log
@implement KerberosGetAFSToken server option. ok markus@@, beck@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.61 2003/08/24 18:17:38 deraadt Exp $
d18 1
a18 1
	monitor_mm.c monitor.c monitor_wrap.c monitor_fdpass.c \
@


1.62.2.1
log
@upgrade to OpenSSH 3.9
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.63 2004/06/13 15:03:02 djm Exp $
d18 1
a18 1
	monitor_mm.c monitor.c monitor_wrap.c \
@


1.61
log
@re-organize Makefiles so that static builds actually work
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.60 2003/08/22 13:22:27 markus Exp $
d31 1
a31 1
LDADD+= -lgssapi -lkrb5
@


1.61.2.1
log
@upgrade to OpenSSH 3.8
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.62 2003/12/23 16:12:10 jakob Exp $
d31 1
a31 1
LDADD+= -lgssapi -lkrb5 -lkafs
@


1.61.2.2
log
@upgrade to OpenSSH 3.9
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.63 2004/06/13 15:03:02 djm Exp $
d18 2
a19 2
	monitor_mm.c monitor.c monitor_wrap.c \
	kexdhs.c kexgexs.c closefrom.c
@


1.60
log
@nuke "kerberos-2@@ssh.com"
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.59 2003/08/22 10:56:09 markus Exp $
d24 3
a26 2
CFLAGS+=-DKRB5 -I${DESTDIR}/usr/include/kerberosV
SRCS+=  auth-krb5.c
d28 1
a28 2
LDADD+= -lkrb5 
DPADD+= ${LIBKRB5}
d30 4
a33 7
SRCS+= auth2-gss.c gss-serv.c gss-serv-krb5.c
CFLAGS+= -DGSSAPI
LDADD+= -lgssapi
DPADD+= ${LIBGSSAPI}
.endif # KERBEROS5

.include <bsd.prog.mk>
@


1.59
log
@support GSS API user authentication; patches from Simon Wilkinson,
stripped down and tested by Jakob and myself.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.58 2003/07/16 19:10:13 deraadt Exp $
d25 1
a25 1
SRCS+=  auth-krb5.c auth2-krb5.c
@


1.58
log
@some minor DPADD changes
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.57 2003/07/15 19:02:20 deraadt Exp $
d26 8
a33 2
DPADD+= ${LIBKRB5} ${LIBASN1}
LDADD+= -lkrb5 -lasn1
@


1.57
log
@stop using libcom_err, it is built into krb5
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.56 2003/05/17 01:31:21 hin Exp $
d26 1
a27 1
DPADD+= ${LIBKRB5} ${LIBKAFS} ${LIBASN1}
d32 1
a33 1
DPADD+=	${LIBCRYPTO} ${LIBUTIL} ${LIBZ} ${LIBDES}
d37 1
a38 1
DPADD+= ${LIBWRAP}
d43 1
a44 1
#DPADD+= ${SKEY}
@


1.56
log
@Don't link with unneeded kerberos libraries
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.55 2003/05/14 02:15:48 markus Exp $
d26 2
a27 2
LDADD+= -lkrb5 -lasn1 -lcom_err
DPADD+= ${LIBKRB5} ${LIBKAFS} ${LIBASN1} ${LIBCOM_ERR}
@


1.55
log
@implement kerberos over ssh2 ("kerberos-2@@ssh.com"); tested with jakob@@
server interops with commercial client; ok jakob@@ djm@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.54 2003/04/10 00:17:52 pvalchev Exp $
d26 1
a26 1
LDADD+= -lkrb5 -lkafs -lkrb -lasn1 -lcom_err
@


1.54
log
@unbreak linking on elf - stupid kerberos
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.53 2003/04/09 08:24:24 hin Exp $
d25 1
a25 1
SRCS+=  auth-krb5.c
@


1.53
log
@Disable Kerberos 4 support.

ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.52 2003/02/21 09:04:09 markus Exp $
d26 1
a26 1
LDADD+= -lkrb5 -lkafs -lasn1 -lcom_err
@


1.52
log
@move server only kex and monitor code to sshd.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.51 2002/06/20 19:56:07 stevesk Exp $
a28 12

.if (${KERBEROS:L} == "yes")
.if (${AFS:L} == "yes")
CFLAGS+= -DAFS
LDADD+=  -lkafs
DPADD+=  ${LIBKAFS}
.endif # AFS
CFLAGS+= -DKRB4 -I${DESTDIR}/usr/include/kerberosIV
SRCS+=	auth-krb4.c
LDADD+=	 -lkrb
DPADD+=	 ${LIBKRB}
.endif # KERBEROS
@


1.52.2.1
log
@upgrade to OpenSSH 3.7
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.61 2003/08/24 18:17:38 deraadt Exp $
d23 18
a40 4
#.if (${KERBEROS5:L} == "yes")
#CFLAGS+=-DKRB5 -I${DESTDIR}/usr/include/kerberosV -DGSSAPI
#SRCS+=  auth-krb5.c auth2-gss.c gss-serv.c gss-serv-krb5.c
#.endif
d44 1
a44 5
#.if (${KERBEROS5:L} == "yes")
#LDADD+= -lgssapi -lkrb5
#DPADD+= ${LIBGSSAPI} ${LIBKRB5}
#.endif

a45 1
LDADD+=	-lcrypto -lutil -lz -ldes
d49 1
a50 1
LDADD+= -lwrap
d55 1
a56 1
#LDADD+= -lskey
@


1.52.2.2
log
@upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8upgrade to OpenSSH 3.8
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.62 2003/12/23 16:12:10 jakob Exp $
d31 1
a31 1
#LDADD+= -lgssapi -lkrb5 -lkafs
@


1.51
log
@move configuration file options from ssh.1/sshd.8 to
ssh_config.5/sshd_config.5; ok deraadt@@ millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.50 2002/06/11 04:14:26 markus Exp $
d16 1
a16 1
	auth-skey.c auth-bsdauth.c monitor_mm.c monitor.c \
d18 2
a19 1
	auth2-hostbased.c auth2-kbdint.c
@


1.51.2.1
log
@Update to OpenSSH 3.6
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.52 2003/02/21 09:04:09 markus Exp $
d16 1
a16 1
	auth-skey.c auth-bsdauth.c auth2-hostbased.c auth2-kbdint.c \
d18 1
a18 2
	monitor_mm.c monitor.c monitor_wrap.c monitor_fdpass.c \
	kexdhs.c kexgexs.c
@


1.51.2.2
log
@upgrade to OpenSSH 3.7
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.61 2003/08/24 18:17:38 deraadt Exp $
d23 18
a40 4
#.if (${KERBEROS5:L} == "yes")
#CFLAGS+=-DKRB5 -I${DESTDIR}/usr/include/kerberosV -DGSSAPI
#SRCS+=  auth-krb5.c auth2-gss.c gss-serv.c gss-serv-krb5.c
#.endif
d44 1
a44 5
#.if (${KERBEROS5:L} == "yes")
#LDADD+= -lgssapi -lkrb5
#DPADD+= ${LIBGSSAPI} ${LIBKRB5}
#.endif

a45 1
LDADD+=	-lcrypto -lutil -lz -ldes
d49 1
a50 1
LDADD+= -lwrap
d55 1
a56 1
#LDADD+= -lskey
@


1.50
log
@no longer use uidswap.[ch] from the ssh client
run less code with euid==0 if ssh is installed setuid root
just switch the euid, don't switch the complete set of groups
(this is only needed by sshd). ok provos@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.49 2002/05/25 18:51:07 markus Exp $
d9 1
a9 1
MAN=	sshd.8
@


1.49
log
@split auth2.c into one file per method; ok provos@@/deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.48 2002/05/11 00:20:18 espie Exp $
d13 1
a13 1
	sshpty.c sshlogin.c servconf.c serverloop.c \
@


1.48
log
@Add missing libraries to bsd.prog.mk (mostly kerberosV)
Use them in DPADD throughout the tree.
Fix a few mispells (LIBMATH -> LIBM...)
Wipe obsolete lib (LIBRESOLV)
Sort added missing libraries, move obsolete stuff apart.
Synch documentation in bsd.README

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.47 2002/03/18 17:50:31 provos Exp $
d16 3
a18 1
	auth-skey.c auth-bsdauth.c monitor_mm.c monitor.c
@


1.47
log
@integrate privilege separated openssh; its turned off by default for now.
work done by me and markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.46 2002/03/05 00:49:51 deraadt Exp $
d24 1
a24 1
DPADD+= ${LIBKRB5} ${LIBKAFS} ${LIBASN1}
d31 1
a31 1
DPADD+=  ${LIBKRBAFS}
d42 1
a42 1
DPADD+=	${LIBCRYPTO} ${LIBUTIL} ${LIBZ}
@


1.47.2.1
log
@Update to OpenSSH-3.2.2
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.48 2002/05/11 00:20:18 espie Exp $
d24 1
a24 1
DPADD+= ${LIBKRB5} ${LIBKAFS} ${LIBASN1} ${LIBCOM_ERR}
d31 1
a31 1
DPADD+=  ${LIBKAFS}
d42 1
a42 1
DPADD+=	${LIBCRYPTO} ${LIBUTIL} ${LIBZ} ${LIBDES}
@


1.47.2.2
log
@Update to OpenSSH-3.2.3
@
text
@@


1.47.2.3
log
@Pull in OpenSSH-3.4
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.51 2002/06/20 19:56:07 stevesk Exp $
d9 1
a9 1
MAN=	sshd.8 sshd_config.5
d13 1
a13 1
	sshpty.c sshlogin.c servconf.c serverloop.c uidswap.c \
d16 1
a16 3
	auth-skey.c auth-bsdauth.c monitor_mm.c monitor.c \
	auth2-none.c auth2-passwd.c auth2-pubkey.c \
	auth2-hostbased.c auth2-kbdint.c
@


1.47.2.4
log
@Merge OpenSSH 3.6.1
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.52 2003/02/21 09:04:09 markus Exp $
d16 1
a16 1
	auth-skey.c auth-bsdauth.c auth2-hostbased.c auth2-kbdint.c \
d18 1
a18 2
	monitor_mm.c monitor.c monitor_wrap.c monitor_fdpass.c \
	kexdhs.c kexgexs.c
@


1.46
log
@and -ldes here too
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.45 2001/10/07 18:14:20 markus Exp $
d16 1
a16 1
	auth-skey.c auth-bsdauth.c
@


1.45
log
@BSD_AUTH supersedes SKEY, so SKEY is commented out.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.44 2001/09/10 22:44:47 jason Exp $
d41 1
a41 1
LDADD+=	-lcrypto -lutil -lz
@


1.45.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.46 2002/03/05 00:49:51 deraadt Exp $
d41 1
a41 1
LDADD+=	-lcrypto -lutil -lz -ldes
@


1.45.2.2
log
@Update OpenSSH to version 3.2.2.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.48 2002/05/11 00:20:18 espie Exp $
d16 1
a16 1
	auth-skey.c auth-bsdauth.c monitor_mm.c monitor.c
d24 1
a24 1
DPADD+= ${LIBKRB5} ${LIBKAFS} ${LIBASN1} ${LIBCOM_ERR}
d31 1
a31 1
DPADD+=  ${LIBKAFS}
d42 1
a42 1
DPADD+=	${LIBCRYPTO} ${LIBUTIL} ${LIBZ} ${LIBDES}
@


1.45.2.3
log
@Update OpenSSH 3.3, files missed in previous commit.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.45.2.2 2002/05/17 00:03:41 miod Exp $
d9 1
a9 1
MAN=	sshd.8 sshd_config.5
d13 1
a13 1
	sshpty.c sshlogin.c servconf.c serverloop.c uidswap.c \
d16 1
a16 3
	auth-skey.c auth-bsdauth.c monitor_mm.c monitor.c \
	auth2-none.c auth2-passwd.c auth2-pubkey.c \
	auth2-hostbased.c auth2-kbdint.c
@


1.44
log
@link k5 before k4 (new binutils is more picky than old ld)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.43 2001/06/28 02:33:43 hin Exp $
d50 5
a54 5
.if (${SKEY:L} == "yes")
CFLAGS+= -DSKEY
LDADD+= -lskey
DPADD+= ${SKEY}
.endif
@


1.43
log
@Link with libcom_err for kerberos5
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.42 2001/06/26 17:52:41 dugsong Exp $
d20 7
a37 7

.if (${KERBEROS5:L} == "yes")
CFLAGS+=-DKRB5 -I${DESTDIR}/usr/include/kerberosV
SRCS+=  auth-krb5.c
LDADD+= -lkrb5 -lkafs -lasn1 -lcom_err
DPADD+= ${LIBKRB5} ${LIBKAFS} ${LIBASN1}
.endif # KERBEROS5
@


1.42
log
@only build Kerberos v5 support with KERBEROS5=yes
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.41 2001/06/26 16:15:26 dugsong Exp $
d35 1
a35 1
LDADD+= -lkrb5 -lkafs -lasn1
@


1.41
log
@Kerberos v5 support for SSH1, mostly from Assar Westerlund <assar@@freebsd.org> and Bjorn Gronvall <bg@@sics.se>. markus@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.40 2001/05/29 22:23:58 millert Exp $
d26 5
d32 1
d37 1
a37 6

CFLAGS+= -DKRB4 -I${DESTDIR}/usr/include/kerberosIV
SRCS+=	auth-krb4.c
LDADD+=	 -lkrb
DPADD+=	 ${LIBKRB}
.endif # KERBEROS
@


1.40
log
@build in support for BSD authentication
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.39 2001/05/18 14:13:29 markus Exp $
d26 6
@


1.39
log
@improved kbd-interactive support. work by per@@appgate.com and me
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38 2001/03/29 21:17:40 markus Exp $
d10 1
a10 1
CFLAGS+=-DHAVE_LOGIN_CAP
@


1.38
log
@prepare for rekeying: move DH code to dh.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.37 2001/03/04 01:46:30 djm Exp $
d15 2
a16 1
	auth-chall.c auth2-chall.c groupaccess.c
@


1.38.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.44 2001/09/10 22:44:47 jason Exp $
a10 1
#CFLAGS+=-DBSD_AUTH
d15 1
a15 2
	auth-chall.c auth2-chall.c groupaccess.c \
	auth-skey.c auth-bsdauth.c
a17 7

.if (${KERBEROS5:L} == "yes")
CFLAGS+=-DKRB5 -I${DESTDIR}/usr/include/kerberosV
SRCS+=  auth-krb5.c
LDADD+= -lkrb5 -lkafs -lasn1 -lcom_err
DPADD+= ${LIBKRB5} ${LIBKAFS} ${LIBASN1}
.endif # KERBEROS5
@


1.38.2.2
log
@CVS hates me.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38.2.1 2001/09/27 19:03:56 jason Exp $
d10 2
a11 1
CFLAGS+=-DHAVE_LOGIN_CAP -DBSD_AUTH
d51 5
a55 5
#.if (${SKEY:L} == "yes")
#CFLAGS+= -DSKEY
#LDADD+= -lskey
#DPADD+= ${SKEY}
#.endif
@


1.38.2.3
log
@Oops, I was 200% sure that 2.9 had BSD authentication, my bad.
Pointed out by various people. Sorry for the inconvenience.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38.2.2 2001/11/15 22:51:55 miod Exp $
d10 1
a10 2
CFLAGS+=-DHAVE_LOGIN_CAP
#CFLAGS+=-DBSD_AUTH
@


1.38.2.4
log
@Upgrade OpenSSH to version 3.0.2.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38.2.3 2001/11/16 18:45:24 miod Exp $
d51 5
a55 5
.if (${SKEY:L} == "yes")
CFLAGS+= -DSKEY
LDADD+= -lskey
DPADD+= ${SKEY}
.endif
@


1.38.2.5
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.46 2002/03/05 00:49:51 deraadt Exp $
d42 1
a42 1
LDADD+=	-lcrypto -lutil -lz -ldes
@


1.38.2.6
log
@Upgrade to OpenSSH 3.2.3.

Except for improbable compilation error fixes, this should be the last
commit made to the 2.9-STABLE branche. Have fun upgrading.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.48 2002/05/11 00:20:18 espie Exp $
d17 1
a17 1
	auth-skey.c auth-bsdauth.c monitor_mm.c monitor.c
d25 1
a25 1
DPADD+= ${LIBKRB5} ${LIBKAFS} ${LIBASN1} ${LIBCOM_ERR}
d32 1
a32 1
DPADD+=  ${LIBKAFS}
d43 1
a43 1
DPADD+=	${LIBCRYPTO} ${LIBUTIL} ${LIBZ} ${LIBDES}
@


1.37
log
@Rename pty.[ch] -> sshpty.[ch] and login.[ch] to sshlogin.[ch] to avoid
header conflicts in portable; ok markus@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.36 2001/03/03 23:59:40 markus Exp $
d14 1
a14 1
	auth.c auth1.c auth2.c auth-options.c session.c dh.c \
@


1.36
log
@log*.c -> log.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.35 2001/01/29 01:58:23 niklas Exp $
d13 1
a13 1
	pty.c login.c servconf.c serverloop.c \
@


1.35
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD$
d13 1
a13 1
	pty.c log-server.c login.c servconf.c serverloop.c \
@


1.34
log
@rename *-skey.c *-chall.c since the files are not skey specific
@
text
@d1 2
@


1.33
log
@1) removes fake skey from sshd, since this will be much
   harder with /usr/libexec/auth/login_XXX
2) share/unify code used in ssh-1 and ssh-2 authentication (server side)
3) make addition of BSD_AUTH and other challenge reponse methods
   easier.
@
text
@d13 1
a13 1
	auth-skey.c auth2-skey.c groupaccess.c
@


1.32
log
@support supplementary group in {Allow,Deny}Groups
from stevesk@@pobox.com
@
text
@d13 1
a13 1
	groupaccess.c
a27 4

.if (${SKEY:L} == "yes")
SRCS+=	auth-skey.c auth2-skey.c
.endif
@


1.31
log
@add support for s/key (kbd-interactive) to ssh2, based on work by mkiernan@@avantgo.com and me
@
text
@d12 2
a13 1
	auth.c auth1.c auth2.c auth-options.c session.c dh.c
@


1.31.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@a0 2
#	$OpenBSD: Makefile,v 1.35 2001/01/29 01:58:23 niklas Exp $

d12 1
a12 2
	auth.c auth1.c auth2.c auth-options.c session.c dh.c \
	auth-chall.c auth2-chall.c groupaccess.c
d27 4
@


1.31.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.31.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.37 2001/03/04 01:46:30 djm Exp $
d13 1
a13 1
	sshpty.c sshlogin.c servconf.c serverloop.c \
@


1.31.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38 2001/03/29 21:17:40 markus Exp $
d14 1
a14 1
	auth.c auth1.c auth2.c auth-options.c session.c \
@


1.31.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.44 2001/09/10 22:44:47 jason Exp $
a10 1
#CFLAGS+=-DBSD_AUTH
d15 1
a15 2
	auth-chall.c auth2-chall.c groupaccess.c \
	auth-skey.c auth-bsdauth.c
a17 7

.if (${KERBEROS5:L} == "yes")
CFLAGS+=-DKRB5 -I${DESTDIR}/usr/include/kerberosV
SRCS+=  auth-krb5.c
LDADD+= -lkrb5 -lkafs -lasn1 -lcom_err
DPADD+= ${LIBKRB5} ${LIBKAFS} ${LIBASN1}
.endif # KERBEROS5
@


1.31.2.6
log
@Merge OpenSSH 3.0.1.

This is likely to be the last commit to the 2.8-STABLE branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31.2.5 2001/09/27 00:16:05 miod Exp $
d51 5
a55 5
#.if (${SKEY:L} == "yes")
#CFLAGS+= -DSKEY
#LDADD+= -lskey
#DPADD+= ${SKEY}
#.endif
@


1.31.2.7
log
@Merge OpenSSH 3.1.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.46 2002/03/05 00:49:51 deraadt Exp $
d42 1
a42 1
LDADD+=	-lcrypto -lutil -lz -ldes
d51 5
a55 5
.if (${SKEY:L} == "yes")
CFLAGS+= -DSKEY
LDADD+= -lskey
DPADD+= ${SKEY}
.endif
@


1.30
log
@First rough implementation of the diffie-hellman group exchange.  The
client can ask the server for bigger groups to perform the diffie-hellman
in, thus increasing the attack complexity when using ciphers with longer
keys.  University of Windsor provided network, T the company.
@
text
@d29 1
a29 1
SRCS+=	auth-skey.c
@


1.29
log
@Boring...  Add :L modifier to all tweakable variables tests.

Closes PR 1246
@
text
@d12 1
a12 1
	auth.c auth1.c auth2.c auth-options.c session.c
@


1.28
log
@Add calls to setusercontext() and login_get*().  We basically call
setusercontext() in most places where previously we did a setlogin().
Add default login.conf file and put root in the "daemon" login class.
@
text
@d16 2
a17 2
.if (${KERBEROS} == "yes")
.if (${AFS} == "yes")
d28 1
a28 1
.if (${SKEY} == "yes")
d37 1
a37 1
.if (${TCP_WRAPPERS} == "yes")
d43 1
a43 1
.if (${SKEY} == "yes")
@


1.27
log
@split auth-rsa option parsing into auth-options
add options support to authorized_keys2
@
text
@d8 1
@


1.26
log
@sync
@
text
@d11 1
a11 1
	auth.c auth1.c auth2.c session.c
@


1.26.2.1
log
@Pull in OpenSSH-2.2.0 to 2.7 patch branch
@
text
@a7 1
CFLAGS+=
d11 1
a11 1
	auth.c auth1.c auth2.c auth-options.c session.c
@


1.26.2.2
log
@openssh-2.3.0 for 2.7 patch branch
@
text
@d12 1
a12 1
	auth.c auth1.c auth2.c auth-options.c session.c dh.c
d16 2
a17 2
.if (${KERBEROS:L} == "yes")
.if (${AFS:L} == "yes")
d28 2
a29 2
.if (${SKEY:L} == "yes")
SRCS+=	auth-skey.c auth2-skey.c
d37 1
a37 1
.if (${TCP_WRAPPERS:L} == "yes")
d43 1
a43 1
.if (${SKEY:L} == "yes")
@


1.26.2.3
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@a0 2
#	$OpenBSD: Makefile,v 1.35 2001/01/29 01:58:23 niklas Exp $

d8 1
a8 1
#CFLAGS+=-DHAVE_LOGIN_CAP
d12 1
a12 2
	auth.c auth1.c auth2.c auth-options.c session.c dh.c \
	auth-chall.c auth2-chall.c groupaccess.c
d27 4
@


1.26.2.4
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.37 2001/03/04 01:46:30 djm Exp $
d13 1
a13 1
	sshpty.c sshlogin.c servconf.c serverloop.c \
@


1.25
log
@split sshd.c -> auth.c session.c sshd.c plus cleanup and goto-removal
@
text
@d10 2
a11 2
	pty.c log-server.c login.c servconf.c serverloop.c session.c \
	auth.c
@


1.24
log
@support DESTDIR include fetching; dm
@
text
@d10 2
a11 1
	pty.c log-server.c login.c servconf.c serverloop.c
@


1.23
log
@order kerberos libraries
@
text
@d20 1
a20 1
CFLAGS+= -DKRB4 -I/usr/include/kerberosIV
@


1.22
log
@atomicio() via lib
@
text
@a14 4
CFLAGS+= -DKRB4 -I/usr/include/kerberosIV
SRCS+=	auth-krb4.c
LDADD+=	 -lkrb
DPADD+=	 ${LIBKRB}
d20 4
@


1.21
log
@move atomicio into it's own file.  wrap all socket write()s which were doing
write(sock, buf, len) != len, with atomicio() calls.
@
text
@d10 1
a10 1
	pty.c log-server.c login.c servconf.c serverloop.c atomicio.c
@


1.20
log
@move common files to ./lib and link libssh.a, tested with and w/o obj
@
text
@d10 1
a10 1
	pty.c log-server.c login.c servconf.c serverloop.c
@


1.19
log
@support for SSH protocol 1.5 which is poorly documented, the RFC.troff lies.
interops (x11,agent,etc) with 1.2.27 and protocol 1.3
@
text
@d10 1
a10 5
	pty.c log-server.c login.c hostfile.c canohost.c servconf.c \
	tildexpand.c uidswap.c serverloop.c rsa.c buffer.c packet.c \
	xmalloc.c ttymodes.c channels.c bufaux.c authfd.c authfile.c \
	crc32.c match.c mpaux.c cipher.c compress.c deattack.c \
	nchan.c compat.c
a19 1
SRCS+=	radix.c
@


1.18
log
@add skey to sshd:

1) pass *pw to auth_password() not user_name, do_authentication already
   keeps private copy of struct passwd for current user.
2) limit authentication attemps to 5, otherwise
        ssh -o 'NumberOfPasswordPrompts 100000' host
   lets you enter 100000 passwds
3) make s/key a run-time option in /etc/sshd_config
4) generate fake skeys,
   for s/key for nonexisting users, too
   limit auth-tries for nonexisting users, too.
Note that
% ssh -l nonexisting-user -o 'NumberOfPasswordPrompts 100000' host
has NO limits in ssh-1.2.27
@
text
@d13 2
a14 1
	crc32.c match.c mpaux.c cipher.c compress.c deattack.c
@


1.17
log
@scp should not link against kerberos stuff
@
text
@d30 4
d43 6
@


1.16
log
@crc32 compensation attack fix from CORE-SDI. "it's not crypto..." -- deraadt@@
@
text
@d18 1
d20 2
a21 2
.endif

d24 5
a28 1
.endif
@


1.15
log
@more shrinking
@
text
@d13 1
a13 1
	crc32.c match.c mpaux.c cipher.c compress.c
@


1.14
log
@nuked minfd. sigh. hope this is the last one.
@
text
@d10 4
a13 5
	pty.c log-server.c login.c hostfile.c canohost.c \
	servconf.c tildexpand.c uidswap.c serverloop.c rsa.c \
	buffer.c packet.c xmalloc.c ttymodes.c channels.c bufaux.c \
	authfd.c authfile.c crc32.c match.c mpaux.c cipher.c \
	compress.c
@


1.13
log
@libwrap, ick, yuck
@
text
@d13 1
a13 1
	authfd.c authfile.c crc32.c match.c mpaux.c minfd.c cipher.c \
a24 6

gen_minfd: gen_minfd.c

minfd.o: minfd.h
minfd.h: gen_minfd
	./gen_minfd $(USER_SHELLS) > minfd.h
@


1.12
log
@Remove kerberos libdes - it's all in libcrypto
@
text
@d36 6
@


1.11
log
@Why do I need this library dependency workaround for static builds.. anyone?
@
text
@d34 2
a35 2
LDADD+=	-lcrypto -ldes -lutil -lz
DPADD+=	${LIBCRYPTO} ${LIBDES} ${LIBUTIL} ${LIBZ}
@


1.10
log
@use libc md5
@
text
@a6 2
LDADD=	-lcrypto -ldes -lutil -lz
DPADD=	${LIBCRYPTO} ${LIBDES} ${LIBUTIL} ${LIBZ}
d33 3
@


1.9
log
@revert last commit. somethign was out of sync.
@
text
@d14 1
a14 1
	ssh_md5.c buffer.c packet.c xmalloc.c ttymodes.c channels.c bufaux.c \
@


1.8
log
@link with -lkrb
@
text
@d7 1
a7 1
LDADD=	-lcrypto -ldes -lutil -lz -lkrb
@


1.7
log
@update krb4/AFS support to ssh-1.2.27-afs-kerberos-pl1 level, clean up unused variables, update manpages
@
text
@d7 1
a7 1
LDADD=	-lcrypto -ldes -lutil -lz
@


1.6
log
@DPADD; mickey
@
text
@d7 2
a8 2
LDADD=	-lkrb -lcrypto -ldes -lutil -lz
DPADD=	${LIBKRB} ${LIBCRYPTO} ${LIBDES} ${LIBUTIL} ${LIBZ}
d12 1
a12 1
	auth-krb4.c pty.c log-server.c login.c hostfile.c canohost.c \
d17 10
@


1.5
log
@no need for double libraries
@
text
@d8 1
@


1.4
log
@krb4 support; evanc@@concer.to
@
text
@d7 1
a7 1
LDADD=	-lkrb -lcrypto -ldes -lutil -lz -lkrb
@


1.3
log
@convert all uses of gmp to SSL bignum
convert all used of rsa to SSL rsa functions
remove all use of randomstate to OpenBSD arc4random() and arc4_stir()
all this done at a long long night in Canada.
@
text
@d7 1
a7 1
LDADD=	-lkrb -lcrypto -ldes -lutil -lz
d10 3
a12 3
SRCS=	sshd.c auth-rhosts.c auth-passwd.c auth-rsa.c auth-rh-rsa.c pty.c \
	log-server.c login.c hostfile.c canohost.c servconf.c tildexpand.c \
	uidswap.c serverloop.c rsa.c \
@


1.2
log
@proper groups for install
@
text
@d7 1
a7 1
LDADD=	-lkrb -lcrypto -ldes -lgmp -lutil -lz
d12 1
a12 1
	uidswap.c serverloop.c rsa.c randoms.c \
d14 1
a14 1
	authfd.c authfile.c crc32.c rsaglue.c match.c mpaux.c minfd.c cipher.c \
d23 1
a23 1
.include<bsd.prog.mk>
@


1.1
log
@build ssh components using our build model
@
text
@a4 1
BINGRP=	root
@

