head	1.23;
access;
symbols
	OPENBSD_6_1:1.22.0.4
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.21.0.10
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.6
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.4
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.2
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.20.0.20
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.18
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.14
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.12
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.10
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.8
	OPENBSD_5_0:1.20.0.6
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.4
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.2
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.18.0.2
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.17.0.8
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.4
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.2
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.16.0.8
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.6
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.2
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.4
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.13.0.2
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.12.0.14
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.12
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.10
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.8
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.6
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.12.0.4
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.1.0.2;
locks; strict;
comment	@ * @;


1.23
date	2017.05.31.10.54.00;	author markus;	state Exp;
branches;
next	1.22;
commitid	S8mXQQankLwOyhst;

1.22
date	2016.11.30.02.57.40;	author djm;	state Exp;
branches;
next	1.21;
commitid	RBXxsfvp5NR7LTy5;

1.21
date	2015.01.14.10.30.34;	author markus;	state Exp;
branches;
next	1.20;
commitid	Sp8RW7pAkbmkIGY9;

1.20
date	2010.05.07.11.30.29;	author djm;	state Exp;
branches;
next	1.19;

1.19
date	2010.04.16.01.47.26;	author djm;	state Exp;
branches;
next	1.18;

1.18
date	2010.02.26.20.29.54;	author djm;	state Exp;
branches;
next	1.17;

1.17
date	2008.03.26.21.28.14;	author djm;	state Exp;
branches;
next	1.16;

1.16
date	2006.08.03.03.34.41;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2006.07.06.16.03.53;	author stevesk;	state Exp;
branches;
next	1.14;

1.14
date	2006.03.25.22.22.42;	author djm;	state Exp;
branches;
next	1.13;

1.13
date	2005.12.06.22.38.27;	author reyk;	state Exp;
branches
	1.13.2.1;
next	1.12;

1.12
date	2002.07.21.18.34.43;	author stevesk;	state Exp;
branches
	1.12.12.1
	1.12.14.1;
next	1.11;

1.11
date	2002.03.04.17.27.39;	author stevesk;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2001.06.26.17.27.22;	author markus;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2001.06.26.06.32.47;	author itojun;	state Exp;
branches;
next	1.8;

1.8
date	2001.01.21.19.05.42;	author markus;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2001.01.20.15.55.20;	author markus;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.19.23.17.55;	author markus;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.16.09.38.44;	author djm;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2000.10.11.20.00.26;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.07.21.13.36;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.07.20.27.49;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.18.04.05.02;	author markus;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2000.09.01.18.23.16;	author jason;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2000.11.08.21.30.18;	author jason;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2001.03.12.15.44.07;	author jason;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2001.03.21.18.52.32;	author jason;	state Exp;
branches;
next	;

1.5.2.1
date	2001.02.16.20.12.51;	author jason;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2001.02.19.17.18.34;	author jason;	state Exp;
branches;
next	1.5.2.3;

1.5.2.3
date	2001.03.21.19.46.22;	author jason;	state Exp;
branches;
next	1.5.2.4;

1.5.2.4
date	2001.05.07.21.09.25;	author jason;	state Exp;
branches;
next	1.5.2.5;

1.5.2.5
date	2001.09.27.00.15.41;	author miod;	state Exp;
branches;
next	1.5.2.6;

1.5.2.6
date	2002.03.08.17.04.41;	author brad;	state Exp;
branches;
next	;

1.8.2.1
date	2001.09.27.19.03.54;	author jason;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2002.03.09.00.20.43;	author miod;	state Exp;
branches;
next	;

1.10.2.1
date	2002.03.07.17.37.46;	author jason;	state Exp;
branches;
next	1.10.2.2;

1.10.2.2
date	2002.10.11.14.53.06;	author miod;	state Exp;
branches;
next	;

1.11.2.1
date	2002.10.11.14.51.51;	author miod;	state Exp;
branches;
next	;

1.12.12.1
date	2006.02.03.02.53.44;	author brad;	state Exp;
branches;
next	;

1.12.14.1
date	2006.02.03.03.01.55;	author brad;	state Exp;
branches;
next	1.12.14.2;

1.12.14.2
date	2006.10.06.03.19.32;	author brad;	state Exp;
branches;
next	;

1.13.2.1
date	2006.09.30.04.06.50;	author brad;	state Exp;
branches;
next	;


desc
@@


1.23
log
@make sure we don't pass a NULL string to vfprintf (triggered by the
principals-command regress test); ok bluhm
@
text
@/* $OpenBSD: auth-options.h,v 1.22 2016/11/30 02:57:40 djm Exp $ */

/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */

#ifndef AUTH_OPTIONS_H
#define AUTH_OPTIONS_H

/* Linked list of custom environment strings */
struct envstring {
	struct envstring *next;
	char   *s;
};

/* Flags that may be set in authorized_keys options. */
extern int no_port_forwarding_flag;
extern int no_agent_forwarding_flag;
extern int no_x11_forwarding_flag;
extern int no_pty_flag;
extern int no_user_rc;
extern char *forced_command;
extern struct envstring *custom_environment;
extern int forced_tun_device;
extern int key_is_cert_authority;
extern char *authorized_principals;

int	auth_parse_options(struct passwd *, char *, const char *, u_long);
void	auth_clear_options(void);
int	auth_cert_options(struct sshkey *, struct passwd *, const char **);

#endif
@


1.22
log
@When a forced-command appears in both a certificate and an
authorized keys/principals command= restriction, refuse to accept
the certificate unless they are identical.

The previous (documented) behaviour of having the certificate forced-
command override the other could be a bit confused and more error-prone.

Pointed out by Jann Horn of Project Zero; ok dtucker@@
@
text
@d1 1
a1 1
/* $OpenBSD: auth-options.h,v 1.21 2015/01/14 10:30:34 markus Exp $ */
d36 1
a36 1
int	auth_parse_options(struct passwd *, char *, char *, u_long);
@


1.21
log
@swith auth-options to new sshbuf/sshkey; ok djm@@
@
text
@d1 1
a1 1
/* $OpenBSD: auth-options.h,v 1.20 2010/05/07 11:30:29 djm Exp $ */
d38 1
a38 1
int	auth_cert_options(struct sshkey *, struct passwd *);
@


1.20
log
@add some optional indirection to matching of principal names listed
in certificates. Currently, a certificate must include the a user's name
to be accepted for authentication. This change adds the ability to
specify a list of certificate principal names that are acceptable.

When authenticating using a CA trusted through ~/.ssh/authorized_keys,
this adds a new principals="name1[,name2,...]" key option.

For CAs listed through sshd_config's TrustedCAKeys option, a new config
option "AuthorizedPrincipalsFile" specifies a per-user file containing
the list of acceptable names.

If either option is absent, the current behaviour of requiring the
username to appear in principals continues to apply.

These options are useful for role accounts, disjoint account namespaces
and "user@@realm"-style naming policies in certificates.

feedback and ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: auth-options.h,v 1.19 2010/04/16 01:47:26 djm Exp $ */
d38 1
a38 1
int	auth_cert_options(Key *, struct passwd *);
@


1.19
log
@revised certificate format ssh-{dss,rsa}-cert-v01@@openssh.com with the
following changes:

move the nonce field to the beginning of the certificate where it can
better protect against chosen-prefix attacks on the signature hash

Rename "constraints" field to "critical options"

Add a new non-critical "extensions" field

Add a serial number

The older format is still support for authentication and cert generation
(use "ssh-keygen -t v00 -s ca_key ..." to generate a v00 certificate)

ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: auth-options.h,v 1.18 2010/02/26 20:29:54 djm Exp $ */
d34 1
@


1.18
log
@Add support for certificate key types for users and hosts.

OpenSSH certificate key types are not X.509 certificates, but a much
simpler format that encodes a public key, identity information and
some validity constraints and signs it with a CA key. CA keys are
regular SSH keys. This certificate style avoids the attack surface
of X.509 certificates and is very easy to deploy.

Certified host keys allow automatic acceptance of new host keys
when a CA certificate is marked as trusted in ~/.ssh/known_hosts.
see VERIFYING HOST KEYS in ssh(1) for details.

Certified user keys allow authentication of users when the signing
CA key is marked as trusted in authorized_keys. See "AUTHORIZED_KEYS
FILE FORMAT" in sshd(8) for details.

Certificates are minted using ssh-keygen(1), documentation is in
the "CERTIFICATES" section of that manpage.

Documentation on the format of certificates is in the file
PROTOCOL.certkeys

feedback and ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: auth-options.h,v 1.17 2008/03/26 21:28:14 djm Exp $ */
d37 1
a37 1
int	auth_cert_constraints(Buffer *, struct passwd *);
@


1.17
log
@add no-user-rc authorized_keys option to disable execution of ~/.ssh/rc
@
text
@d1 1
a1 1
/* $OpenBSD: auth-options.h,v 1.16 2006/08/03 03:34:41 deraadt Exp $ */
d33 1
d37 1
@


1.16
log
@almost entirely get rid of the culture of ".h files that include .h files"
ok djm, sort of ok stevesk
makes the pain stop in one easy step
@
text
@d1 1
a1 1
/* $OpenBSD: auth-options.h,v 1.15 2006/07/06 16:03:53 stevesk Exp $ */
d29 1
@


1.15
log
@move #include <pwd.h> out of includes.h; ok markus@@
@
text
@d1 1
a1 1
/* $OpenBSD: auth-options.h,v 1.14 2006/03/25 22:22:42 djm Exp $ */
a16 4

#include <sys/types.h>

#include <pwd.h>
@


1.14
log
@standardise spacing in $OpenBSD$ tags; requested by deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: auth-options.h,v 1.13 2005/12/06 22:38:27 reyk Exp $ */
d17 4
@


1.13
log
@Add support for tun(4) forwarding over OpenSSH, based on an idea and
initial channel code bits by markus@@. This is a simple and easy way to
use OpenSSH for ad hoc virtual private network connections, e.g.
administrative tunnels or secure wireless access. It's based on a new
ssh channel and works similar to the existing TCP forwarding support,
except that it depends on the tun(4) network interface on both ends of
the connection for layer 2 or layer 3 tunneling. This diff also adds
support for LocalCommand in the ssh(1) client.

ok djm@@, markus@@, jmc@@ (manpages), tested and discussed with others
@
text
@d1 1
a1 1
/*	$OpenBSD: auth-options.h,v 1.12 2002/07/21 18:34:43 stevesk Exp $	*/
@


1.13.2.1
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: auth-options.h,v 1.16 2006/08/03 03:34:41 deraadt Exp $ */
@


1.12
log
@remove invalid comment
@
text
@d1 1
a1 1
/*	$OpenBSD: auth-options.h,v 1.11 2002/03/04 17:27:39 stevesk Exp $	*/
d31 1
@


1.12.14.1
log
@upgrade to OpenSSH 4.3
@
text
@d1 1
a1 1
/*	$OpenBSD: auth-options.h,v 1.13 2005/12/06 22:38:27 reyk Exp $	*/
a30 1
extern int forced_tun_device;
@


1.12.14.2
log
@upgrade to OpenSSH 4.4
@
text
@d1 1
a1 1
/* $OpenBSD: auth-options.h,v 1.16 2006/08/03 03:34:41 deraadt Exp $ */
@


1.12.12.1
log
@upgrade to OpenSSH 4.3
@
text
@d1 1
a1 1
/*	$OpenBSD: auth-options.h,v 1.13 2005/12/06 22:38:27 reyk Exp $	*/
a30 1
extern int forced_tun_device;
@


1.11
log
@$OpenBSD$ and RCSID() cleanup: don't use RCSID() in .h files; add
missing RCSID() to .c files and remove dup /*$OpenBSD$*/ from .c
files.  ok markus@@
@
text
@d1 1
a1 1
/*	$OpenBSD: auth-options.h,v 1.10 2001/06/26 17:27:22 markus Exp $	*/
a6 1
 * Functions to interface with the SSH_AUTHENTICATION_FD socket.
@


1.11.2.1
log
@Update to OpenSSH 3.5
@
text
@d1 1
a1 1
/*	$OpenBSD: auth-options.h,v 1.12 2002/07/21 18:34:43 stevesk Exp $	*/
d7 1
@


1.10
log
@remove comments from .h, since they are cut&paste from the .c files
and out of sync
@
text
@d1 2
a14 2

/* $OpenBSD: auth-options.h,v 1.9 2001/06/26 06:32:47 itojun Exp $ */
@


1.10.2.1
log
@Update to OpenSSH-3.1 on 3.0-stable branch
@
text
@a0 2
/*	$OpenBSD: auth-options.h,v 1.11 2002/03/04 17:27:39 stevesk Exp $	*/

d13 2
@


1.10.2.2
log
@Update to OpenSSH 3.5
@
text
@d1 1
a1 1
/*	$OpenBSD: auth-options.h,v 1.12 2002/07/21 18:34:43 stevesk Exp $	*/
d7 1
@


1.9
log
@prototype pedant.  not very creative...
- () -> (void)
- no variable names
@
text
@d14 1
a14 1
/* $OpenBSD: auth-options.h,v 1.8 2001/01/21 19:05:42 markus Exp $ */
d33 1
a33 8
/*
 * return 1 if access is granted, 0 if not.
 * side effect: sets key option flags
 */
int
auth_parse_options(struct passwd *, char *, char *, u_long);

/* reset options flags */
@


1.8
log
@split ssh.h and try to cleanup the #include mess. remove unnecessary #includes.
rename util.[ch] -> misc.[ch]
@
text
@d14 1
a14 1
/* $OpenBSD: auth-options.h,v 1.7 2001/01/20 15:55:20 markus Exp $ */
d38 1
a38 2
auth_parse_options(struct passwd *pw, char *options, char *file,
    u_long linenum);
@


1.8.2.1
log
@Pull in OpenSSH-2.9.9
@
text
@d14 1
a14 1
/* $OpenBSD: auth-options.h,v 1.10 2001/06/26 17:27:22 markus Exp $ */
d33 9
a41 1
int	auth_parse_options(struct passwd *, char *, char *, u_long);
@


1.8.2.2
log
@Merge OpenSSH 3.1, keeping /etc as configuration files directory.
(i.e. OpenSSH 3.1 + openbsd29_3.1.patch)
@
text
@a0 2
/*	$OpenBSD: auth-options.h,v 1.11 2002/03/04 17:27:39 stevesk Exp $	*/

d13 2
@


1.7
log
@pass the filename to auth_parse_options()
@
text
@d14 1
a14 1
/* $OpenBSD: auth-options.h,v 1.6 2000/12/19 23:17:55 markus Exp $ */
d18 7
@


1.6
log
@replace 'unsigned bla' with 'u_bla' everywhere. also, replace 'char unsigned'
with u_char.
@
text
@d14 1
a14 1
/* $OpenBSD: auth-options.h,v 1.5 2000/10/16 09:38:44 djm Exp $ */
d26 8
a33 2
/* return 1 if access is granted, 0 if not. side effect: sets key option flags */
int	auth_parse_options(struct passwd *pw, char *options, u_long linenum);
@


1.5
log
@Add idents for files which lack them

Fix idents Id -> OpenBSD for the rest
@
text
@d14 1
a14 1
/* $OpenBSD$ */
d27 1
a27 1
int	auth_parse_options(struct passwd *pw, char *options, unsigned long linenum);
@


1.5.2.1
log
@Pull in OpenSSH 2.5.0
@
text
@d14 1
a14 1
/* $OpenBSD: auth-options.h,v 1.8 2001/01/21 19:05:42 markus Exp $ */
a17 7

/* Linked list of custom environment strings */
struct envstring {
	struct envstring *next;
	char   *s;
};

d26 2
a27 8
/*
 * return 1 if access is granted, 0 if not.
 * side effect: sets key option flags
 */
int
auth_parse_options(struct passwd *pw, char *options, char *file,
    u_long linenum);

@


1.5.2.2
log
@Pull in OpenSSH-2.5.1
@
text
@@


1.5.2.3
log
@Pull in OpenSSH-2.5.2 for 2.8 branch.
@
text
@@


1.5.2.4
log
@Pull in OpenSSH-2.9 to 2.8 branch.
@
text
@@


1.5.2.5
log
@Pull in OpenSSH 2.9.9 to the 2.8 branch.
@
text
@d14 1
a14 1
/* $OpenBSD: auth-options.h,v 1.10 2001/06/26 17:27:22 markus Exp $ */
d33 9
a41 1
int	auth_parse_options(struct passwd *, char *, char *, u_long);
@


1.5.2.6
log
@Merge OpenSSH 3.1.
@
text
@a0 2
/*	$OpenBSD: auth-options.h,v 1.11 2002/03/04 17:27:39 stevesk Exp $	*/

d13 2
@


1.4
log
@clear auth options unless auth sucessfull
@
text
@d13 3
@


1.3
log
@some more Copyright fixes
@
text
@d25 3
@


1.2
log
@cleanup copyright notices on all files.  I have attempted to be accurate with
the details.  everything is now under Tatu's licence (which I copied from his
readme), and/or the core-sdi bsd-ish thing for deattack, or various openbsd
developers under a 2-term bsd licence.  We're not changing any rules, just
being accurate.
@
text
@d2 4
a5 1
 * Copyright (c) 2000 Markus Friedl.  All rights reserved.
d7 5
a11 19
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.1
log
@split auth-rsa option parsing into auth-options
add options support to authorized_keys2
@
text
@d1 23
@


1.1.2.1
log
@Pull in the rest of openssh-2.2.0 to 2.7 branch (luvin' cvs...)
@
text
@@


1.1.2.2
log
@openssh-2.3.0 (again) for 2.7 branch
@
text
@a0 15
/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 * Functions to interface with the SSH_AUTHENTICATION_FD socket.
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */

/* $OpenBSD: auth-options.h,v 1.5 2000/10/16 09:38:44 djm Exp $ */

a12 3
/* reset options flags */
void	auth_clear_options(void);

@


1.1.2.3
log
@OpenSSH-2.5.1 for 2.7 patch branch
@
text
@d14 1
a14 1
/* $OpenBSD: auth-options.h,v 1.8 2001/01/21 19:05:42 markus Exp $ */
a17 7

/* Linked list of custom environment strings */
struct envstring {
	struct envstring *next;
	char   *s;
};

d26 2
a27 8
/*
 * return 1 if access is granted, 0 if not.
 * side effect: sets key option flags
 */
int
auth_parse_options(struct passwd *pw, char *options, char *file,
    u_long linenum);

@


1.1.2.4
log
@Pull in OpenSSH-2.5.2 for 2.7 branch.
@
text
@@


