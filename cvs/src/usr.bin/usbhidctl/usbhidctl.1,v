head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.20
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.18
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.14
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.10
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.12
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.8
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.12
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.10
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.8
	OPENBSD_5_0:1.13.0.6
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.4
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.2
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.12.0.4
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.6
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.2
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.11.0.2
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.10.0.4
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.9.0.12
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.10
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.8
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.6
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@.\" @;


1.14
date	2013.07.16.00.07.52;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2010.08.02.23.17.36;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2008.10.16.18.37.19;	author jakemsr;	state Exp;
branches;
next	1.11;

1.11
date	2008.06.26.05.42.21;	author ray;	state Exp;
branches;
next	1.10;

1.10
date	2007.05.31.19.20.19;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2004.04.03.21.17.39;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.03.21.01.25;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.02.09.11.51;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.10.09.12.12;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.14.02.57.28;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.10.00.09.17;	author nate;	state Exp;
branches;
next	1.3;

1.3
date	2001.12.30.07.24.07;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.02.18.16.37;	author jakob;	state Exp;
branches;
next	1.1;

1.1
date	2001.09.02.17.55.29;	author pvalchev;	state Exp;
branches;
next	;


desc
@@


1.14
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@.\" $OpenBSD: usbhidctl.1,v 1.13 2010/08/02 23:17:36 miod Exp $
.\" $NetBSD: usbhidctl.1,v 1.14 2001/12/28 17:49:32 augustss Exp $
.\"
.\" Copyright (c) 2001 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by David Sainty <David.Sainty@@dtsp.co.nz>
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: August 2 2010 $
.Dt USBHIDCTL 1
.Os
.Sh NAME
.Nm usbhidctl
.Nd manipulate USB HID devices
.Sh SYNOPSIS
.Nm
.Fl f Ar device
.Op Fl t Ar table
.Op Fl alv
.Nm
.Fl f Ar device
.Op Fl t Ar table
.Op Fl v
.Fl r
.Nm
.Fl f Ar device
.Op Fl t Ar table
.Op Fl lnv
.Ar name ...
.Nm
.Fl f Ar device
.Op Fl t Ar table
.Fl w Ar name Ns = Ns Ar value ...
.Sh DESCRIPTION
.Nm
can be used to output or modify the state of a USB HID (Human Interface Device).
If a list of items is present on the command line, then
.Nm
prints the current value of those items for the specified device.
If the
.Fl w
flag is specified
.Nm
attempts to set the specified items to the given values.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl a
Show all items and their current values.
This option fails if the device does not support the GET_REPORT command.
This is the default, if no parameters other than
.Fl f
are given to
.Nm .
.It Fl f Ar device
Specify a path name for the device to operate on.
If
.Ar device
is numeric, it is taken to be the USB HID device number.
If it is a relative path, it is taken to be the name of the device under
.Pa /dev .
An absolute path is taken to be the literal device pathname.
.It Fl l
Loop and dump the device data every time it changes.
Only 'input' items are displayed in this mode.
.It Fl n
Suppress printing of the item name when querying specific items.
Only output the current value.
.It Fl r
Dump the USB HID report descriptor.
.It Fl t Ar table
Specify a path name for the HID usage table file.
.It Fl v
Be verbose.
Repeating this option increases verbosity.
.It Fl w
Change item values.
Only 'output' and 'feature' kinds can be set with this option.
.El
.Sh SYNTAX
.Nm
parses the names of items specified on the command line against the human
interface items reported by the USB device.
Each human interface item is mapped from its native form to a human readable
name, using the HID usage table file.
Command line items are compared with the generated item names,
and the USB HID device is operated on when a match is found.
.Pp
Each human interface item is named by the
.Qq page
it appears in, the
.Qq usage
within that page, and the list of
.Qq collections
containing the item.
Each collection in turn is also identified by page, and
the usage within that page.
.Pp
On the
.Nm
command line the page name is separated from the usage name with the character
.Sq Cm \&: .
The collections are separated by the character
.Sq Cm \&. .
.Pp
As an alternative notation in items on the command line, the native numeric
value for the page name or usage can be used instead of the full human
readable page name or usage name.
Numeric values can be specified in decimal, octal or hexadecimal.
.Sh FILES
.Bl -tag -width "/usr/share/misc/usb_hid_usages"
.It Pa /usr/share/misc/usb_hid_usages
The default HID usage table.
.El
.Sh EXAMPLES
On a standard USB mouse the item
.Pp
.Dl Generic_Desktop:Mouse.Generic_Desktop:Pointer.Button:Button_2
.Pp
reflects the current status of button 2.
The
.Qq button 2
item is encapsulated within two collections, the
.Qq Mouse
collection in the
.Qq Generic Desktop
page, and the
.Qq Pointer
collection in the
.Qq Generic Desktop
page.
The item itself is the usage
.Qq Button_2
in the
.Qq Button
page.
.Pp
An item can generally be named by omitting one or more of the page names.
For example the
.Qq button 2
item would usually just be referred to on the command line as:
.Pp
.Dl $ usbhidctl -f /dev/wsmouse0 Mouse.Pointer.Button_2
.Pp
Items can also be named by referring to parts of the item name with the
numeric representation of the native HID usage identifiers.
This is most useful when items are missing from the HID usage table.
The page identifier for the
.Qq Generic Desktop
page is 1, and the usage identifier for the usage
.Qq Button_2
is 2, so the following can be used to refer to the
.Qq button 2
item:
.Pp
.Dl $ usbhidctl -f /dev/wsmouse0 1:Mouse.1:Pointer.Button:2
.Pp
Devices with human interface outputs can be manipulated with the
.Fl w
option.
For example, some USB mice have a Light Emitting Diode under software
control as usage 2 under page 0xffff, in the
.Qq Mouse
collection.
The following can be used to switch this LED off:
.Pp
.Dl $ usbhidctl -f /dev/wsmouse0 -w Mouse.0xffff:2=0
.Sh SEE ALSO
.Xr usbhidaction 1 ,
.Xr usbhid 3 ,
.Xr uhid 4 ,
.Xr usb 4
.Sh HISTORY
The
.Nm
command first appeared in
.Ox 3.0 .
.Sh AUTHORS
.An David Sainty Aq Mt David.Sainty@@dtsp.co.nz
.Sh BUGS
Some USB HID devices report multiple items with exactly the same usage
identifiers.
The current naming scheme does not provide the means to specify
which of a set of identically named items you are referring to.
@


1.13
log
@Handle USB_GET_REPORT, USB_GET_REPORT_DESC, USB_GET_REPORT_ID and
USB_SET_REPORT ioctls in ukbd and ums.
This allows usbhidctl to be used on these devices e.g. to dump the report
descriptor of troublesome models.
ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: usbhidctl.1,v 1.12 2008/10/16 18:37:19 jakemsr Exp $
d31 1
a31 1
.Dd $Mdocdate: October 16 2008 $
d201 1
a201 1
.An David Sainty Aq David.Sainty@@dtsp.co.nz
@


1.12
log
@
make -a the default when no other options besides the required
-f are used

input from and ok sthen@@, jmc@@, deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: usbhidctl.1,v 1.11 2008/06/26 05:42:21 ray Exp $
d31 1
a31 1
.Dd $Mdocdate: June 26 2008 $
d165 1
a165 1
.Dl $ usbhidctl -f /dev/mouse Mouse.Pointer.Button_2
d178 1
a178 1
.Dl $ usbhidctl -f /dev/mouse 1:Mouse.1:Pointer.Button:2
d189 1
a189 1
.Dl $ usbhidctl -f /dev/mouse -w Mouse.0xffff:2=0
@


1.11
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: usbhidctl.1,v 1.10 2007/05/31 19:20:19 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: May 31 2007 $
d41 1
a41 2
.Op Fl lv
.Fl a
d73 4
@


1.10
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: usbhidctl.1,v 1.9 2004/04/03 21:17:39 jmc Exp $
a17 7
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
d31 1
a31 1
.Dd $Mdocdate$
@


1.9
log
@argument to -w is not optional;
`name' in 3rd form of SYNOPSIS not optional;
@
text
@d1 1
a1 1
.\" $OpenBSD: usbhidctl.1,v 1.8 2004/04/03 21:01:25 jmc Exp $
d38 1
a38 1
.Dd August 27, 2000
@


1.8
log
@- correct SYNOPSIS
- sync usage()
- some small tweaks
@
text
@d1 1
a1 1
.\" $OpenBSD: usbhidctl.1,v 1.7 2003/07/02 09:11:51 jmc Exp $
d59 1
a59 1
.Op Ar name ...
d63 1
a63 2
.Fl w
.Op Ar name Ns = Ns Ar value ...
@


1.7
log
@.Cm So . Sc -> .Sq Cm \&.
from wiz@@netbsd;
@
text
@d1 1
a1 1
.\" $OpenBSD: usbhidctl.1,v 1.6 2003/06/10 09:12:12 jmc Exp $
d48 1
a48 2
.Op Fl l
.Op Fl v
a49 1
.Pp
a54 1
.Pp
d58 2
a59 5
.Op Fl l
.Op Fl n
.Op Fl v
.Op Ar item ...
.Pp
d64 1
a64 1
.Op Ar item=value ...
a106 3
.Sh FILES
.Pa /usr/share/misc/usb_hid_usages
The default HID usage table.
d137 5
d144 1
d146 1
d169 1
d182 1
d193 1
@


1.6
log
@- section reorder
- COMPATIBILITY merge
- macro cleanup
- kill whitespace at EOL
- new sentence, new line

ssh pages ok markus@@
@
text
@d1 1
a1 1
.\" $OpenBSD: usbhidctl.1,v 1.5 2002/11/14 02:57:28 deraadt Exp $
d138 1
a138 1
.Cm So : Sc .
d140 1
a140 1
.Cm So . Sc .
@


1.5
log
@use $ or # before commands in examples
@
text
@d1 1
a1 1
.\" $OpenBSD: usbhidctl.1,v 1.4 2002/05/10 00:09:17 nate Exp $
d73 2
a74 2
can be used to output or modify the state of a USB HID (Human Interface
Device).  If a list of items is present on the command line, then
d76 2
a77 1
prints the current value of those items for the specified device.  If the
d89 2
a90 1
Specify a path name for the device to operate on.  If
d92 2
a93 2
is numeric, it is taken to be the USB HID device number.  If it is a relative
path, it is taken to be the name of the device under
d97 2
a98 2
Loop and dump the device data every time it changes.  Only 'input' items are
displayed in this mode.
d100 2
a101 2
Suppress printing of the item name when querying specific items.  Only output
the current value.
d107 2
a108 1
Be verbose.  Repeating this option increases verbosity.
d110 2
a111 2
Change item values.  Only 'output' and 'feature' kinds can be set with this
option.
d119 4
a122 3
interface items reported by the USB device.  Each human interface item is
mapped from its native form to a human readable name, using the HID usage
table file.  Command line items are compared with the generated item names,
d131 2
a132 1
containing the item.  Each collection in turn is also identified by page, and
d144 2
a145 2
readable page name or usage name.  Numeric values can be specified in decimal,
octal or hexadecimal.
d149 2
a150 1
reflects the current status of button 2.  The
d160 2
a161 1
page.  The item itself is the usage
d167 2
a168 2
An item can generally be named by omitting one or more of the page names.  For
example the
d174 3
a176 3
numeric representation of the native HID usage identifiers.  This is most
useful when items are missing from the HID usage table.  The page identifier
for the
d187 2
a188 1
option.  For example, some USB mice have a Light Emitting Diode under software
d191 2
a192 1
collection.  The following can be used to switch this LED off:
d208 2
a209 1
identifiers.  The current naming scheme does not provide the means to specify
@


1.4
log
@Update usb userland stuff to reflect hid changes in the kernel.
This adds the new program usbhidaction which can be used to assign actions
to events that occur on a uhid device.  For example, you can now make the
volume buttons on some newer keyboards actually do something.
@
text
@d1 1
a1 1
.\" $OpenBSD: usbhidctl.1,v 1.3 2001/12/30 07:24:07 pvalchev Exp $
d164 1
a164 1
.Dl usbhidctl -f /dev/mouse Mouse.Pointer.Button_2
d176 1
a176 1
.Dl usbhidctl -f /dev/mouse 1:Mouse.1:Pointer.Button:2
d184 1
a184 1
.Dl usbhidctl -f /dev/mouse -w Mouse.0xffff:2=0
@


1.3
log
@update man page references to usbhid(3)
@
text
@d1 2
a2 2
.\" $OpenBSD: usbhidctl.1,v 1.2 2001/09/02 18:16:37 jakob Exp $
.\" $NetBSD: usbhidctl.1,v 1.10 2000/09/24 02:27:12 augustss Exp $
d4 1
a4 1
.\" Copyright (c) 2000 The NetBSD Foundation, Inc.
d73 2
a74 2
can be used to dump or modify the state of a USB HID (Human Interface Device).
If a list of items is present on the command line, then
d86 1
d98 2
a99 1
Suppress printing of the item name when querying specific item values.
d101 1
a101 1
Dump the report descriptor.
d113 72
d186 1
a189 2
.Sh AUTHOR
David Sainty <David.Sainty@@dtsp.co.nz>
d195 2
d198 3
a200 3
Some USB HID devices report multiple items with exactly the same description.
The current naming scheme does not provide the means to specify which of the
identically named items you are referring to.
@


1.2
log
@fix SYNPOSIS
@
text
@d1 1
a1 1
.\" $OpenBSD: usbhidctl.1,v 1.1 2001/09/02 17:55:29 pvalchev Exp $
d112 1
a112 1
.Xr usb 3 ,
@


1.1
log
@program to manipulate USB HID devices
from NetBSD, reviewed by jakob
@
text
@d1 1
a1 1
.\" $OpenBSD$
d45 1
a45 1
.Nm ""
d51 2
a52 1
.Nm ""
d57 2
a58 1
.Nm ""
d65 2
a66 1
.Nm ""
@

