head	1.23;
access;
symbols
	OPENBSD_6_2:1.23.0.24
	OPENBSD_6_2_BASE:1.23
	OPENBSD_6_1:1.23.0.22
	OPENBSD_6_1_BASE:1.23
	OPENBSD_6_0:1.23.0.18
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.23.0.14
	OPENBSD_5_9_BASE:1.23
	OPENBSD_5_8:1.23.0.16
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.23.0.8
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.23.0.12
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.23.0.10
	OPENBSD_5_5_BASE:1.23
	OPENBSD_5_4:1.23.0.6
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.23.0.4
	OPENBSD_5_3_BASE:1.23
	OPENBSD_5_2:1.23.0.2
	OPENBSD_5_2_BASE:1.23
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.6
	OPENBSD_5_0:1.22.0.4
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.22.0.2
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.21.0.2
	OPENBSD_4_8_BASE:1.21
	OPENBSD_4_7:1.20.0.4
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.20.0.6
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.20.0.2
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.19.0.6
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.4
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.17.0.4
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.2
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.16.0.8
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.6
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.4
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.2
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.12.0.2
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.11.0.6
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.4
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.4.0.4
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.23
date	2012.03.29.22.04.28;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2010.09.03.11.09.29;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2010.07.21.20.02.29;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2009.02.08.17.33.02;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.31.19.20.18;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2007.05.31.17.59.40;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2006.08.06.06.13.26;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2004.08.04.15.30.06;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2004.08.04.15.29.10;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.10.09.12.12;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.03.02.56.20;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2002.11.18.20.20.56;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2001.09.06.15.04.34;	author mpech;	state Exp;
branches;
next	1.10;

1.10
date	2001.07.11.15.15.21;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.25.05.01.21;	author pvalchev;	state Exp;
branches;
next	1.8;

1.8
date	2001.04.07.14.17.37;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.26.22.53.33;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.11.21.40.06;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.03.04.22.19.27;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	98.10.30.00.24.40;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.42.00;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.29.01.02.13;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.27;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.27;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.23
log
@there must be an even number of node names, not pairs;
from Jan Stary
@
text
@.\"	$OpenBSD: tsort.1,v 1.22 2010/09/03 11:09:29 jmc Exp $
.\"	$NetBSD: tsort.1,v 1.6 1996/01/17 20:37:49 mycroft Exp $
.\"
.\" Copyright (c) 1990, 1993, 1994
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This manual is derived from one contributed to Berkeley by
.\" Michael Rendell of Memorial University of Newfoundland.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)tsort.1	8.3 (Berkeley) 4/1/94
.\"
.Dd $Mdocdate: September 3 2010 $
.Dt TSORT 1
.Os
.Sh NAME
.Nm tsort
.Nd topological sort of a directed graph
.Sh SYNOPSIS
.Nm tsort
.Op Fl flqrvw
.Op Fl h Ar file
.Op Ar file
.Sh DESCRIPTION
.Nm tsort
takes a list of pairs of node names representing directed arcs in
a graph and prints the nodes in topological order on standard output.
That is, the input describes a partial ordering relation, from which
.Nm
computes a total order compatible with this partial ordering.
.Pp
Input is taken from the named
.Ar file ,
or from standard input if no file
is given.
.Pp
Node names in the input are separated by white space and there must
be an even number of node names.
.Pp
Presence of a node in a graph can be represented by an arc from the node
to itself.
This is useful when a node is not connected to any other nodes.
.Pp
If the graph contains a cycle (and therefore cannot be properly sorted),
one of the arcs in the cycle is ignored and the sort continues.
Cycles are reported on standard error.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl f
Resolve ambiguities by selecting nodes based on the order of appearance
of the first component of the pairs.
.It Fl h Ar file
Use
.Ar file ,
which holds an ordered list of nodes, to resolve ambiguities.
In case of duplicates, the first entry is chosen.
.It Fl l
Search for and display the longest cycle.
Can take a very long time, as it may need to solve an NP-complete problem.
.It Fl q
Do not display informational messages about cycles.
This is primarily intended for building libraries, where optimal ordering
is not critical, and cycles occur often.
.It Fl r
Reverse the ordering relation.
.It Fl v
Inform on the exact number of edges broken while breaking cycles.
If a hints file was used, inform on seen nodes absent from that file.
.It Fl w
Exit with exit code the number of cycles
.Nm
had to break.
.El
.Sh EXIT STATUS
.Ex -std tsort
.Sh EXAMPLES
Faced with the input:
.Bd -literal -offset indent
a b
b c
b d
d f
c e
.Ed
.Pp
.Nm
outputs:
.Bd -literal -offset indent
a
b
c
e
d
f
.Ed
.Pp
which is one total ordering compatible with the individual relations.
There is no unicity, another compatible total ordering would be:
.Bd -literal -offset indent
a
b
c
d
e
f
.Ed
.Pp
.Nm
is commonly used to analyze dependencies and find a correct build order
in a static way, whereas
.Xr make 1
accomplishes the same task in a dynamic way.
.Sh SEE ALSO
.Xr ar 1 ,
.Xr lorder 1 ,
.Xr make 1
.Rs
.%A Donald E. Knuth
.%B The Art of Computer Programming
.%V Vol. 1
.%P pp 258-268
.%D 1973
.Re
.Sh STANDARDS
The
.Nm
utility is compliant with the
.St -p1003.1-2008
specification.
.Pp
The flags
.Op Fl fhlqrvw
are extensions to that specification.
.Sh HISTORY
A
.Nm
command appeared in
.At v7 .
This
.Nm tsort
command was completely rewritten by Marc Espie for
.Ox ,
to finally use the well-known optimal algorithms for topological sorting.
@


1.22
log
@add an EXIT STATUS section for /usr/bin;
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.21 2010/07/21 20:02:29 jmc Exp $
d36 1
a36 1
.Dd $Mdocdate: July 21 2010 $
d61 1
a61 1
be an even number of node pairs.
@


1.21
log
@document exit values; from daniel dickman
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.20 2009/02/08 17:33:02 jmc Exp $
d36 1
a36 1
.Dd $Mdocdate: February 8 2009 $
d98 1
a98 1
.Pp
@


1.20
log
@updates to IEEE Std 1003.1-2008;
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.19 2007/05/31 19:20:18 jmc Exp $
d36 1
a36 1
.Dd $Mdocdate: May 31 2007 $
d98 2
@


1.19
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.18 2007/05/31 17:59:40 jmc Exp $
d36 1
a36 1
.Dd $Mdocdate$
d150 1
a150 1
.St -xpg4
@


1.18
log
@- note some apps which are xpg4, not posix
- note that some apps are optional to posix

after some discussion w/ otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.17 2006/08/06 06:13:26 jmc Exp $
d36 1
a36 1
.Dd November 1, 1999
@


1.17
log
@+.Sh STANDARDS

from espie, tweaked by myself;
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.16 2004/08/04 15:30:06 espie Exp $
d150 1
a150 1
.St -p1003.1-2004
d153 3
a155 1
All options are extensions to that specification.
@


1.16
log
@sort SYNOPSIS and usage(), format tweaks, by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.15 2004/08/04 15:29:10 espie Exp $
d146 8
@


1.15
log
@alternate description of tsort and example.
Approved by jmc@@, with minor corrections coming up.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.14 2003/06/10 09:12:12 jmc Exp $
d44 1
a44 1
.Op Fl f
a45 5
.Op Fl l
.Op Fl q
.Op Fl r
.Op Fl v
.Op Fl w
d51 1
a51 1
That is: the input describes a partial ordering relation, from which
d100 1
a100 1
.Bd -literal
d110 1
a110 1
.Bd -literal
d121 1
a121 1
.Bd -literal
@


1.14
log
@- section reorder
- COMPATIBILITY merge
- macro cleanup
- kill whitespace at EOL
- new sentence, new line

ssh pages ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.13 2003/06/03 02:56:20 millert Exp $
d56 4
d103 37
d142 2
a143 1
.Xr lorder 1
@


1.13
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.12 2002/11/18 20:20:56 millert Exp $
d86 2
a87 2
Do not display informational messages about cycles.  
This is primarily intended for building libraries, where optimal ordering 
@


1.12
log
@Modern english is more than just a band, fix word choice;  Jon Bernard
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.11 2001/09/06 15:04:34 mpech Exp $
d18 1
a18 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.11
log
@Initial idea from aaron@@: Last char of .Xr group in SEE ALSO section should
be a single digit. Powered by mantoya@@.

millert@@ ok.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.10 2001/07/11 15:15:21 espie Exp $
d79 1
a79 1
Resolve ambiguities by selecting nodes based on the order of apparition
@


1.10
log
@Clarify performance of tsort -l (hamiltonian circuit is NP-complete).
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.9 2001/06/25 05:01:21 pvalchev Exp $
d105 1
a105 1
.Xr lorder 1 ,
@


1.9
log
@Add -v flag to synopsis line
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.8 2001/04/07 14:17:37 espie Exp $
d88 1
@


1.8
log
@Small changes, user-friendly:
- just warn if hints file holds duplicates. So what ? We sure can't use
uniq to remove those.
- on the other hand, warn in verbose mode if main file holds nodes that
are not in hints file.
Ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.7 2001/03/26 22:53:33 espie Exp $
d53 1
@


1.7
log
@Replacement for original tsort.

The old code suffers from a few defects:
- it does not even implement the standard optimal topological sort
algorithm. It's much slower.
- its longest cycle computation is completely bogus.

This is clean-slate code, that does implement the actual standard optimal
topological sort, together with a correct graph traversal to find longest
cycles.

It does also feature a `stable tsort' mode, where it uses a heap to yield
the least disturbed permutation of input nodes that satisfies the ordering
constraints (in particular, try tsort -f).

Thanks to the nature of the problem, the actual output won't exactly match
the old one, but it does pass the regression suite (and it is a topological
sorter).

Ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.4 1998/10/30 00:24:40 aaron Exp $
d84 1
d88 3
a90 3
Do not display informational messages about cycles.  This is primarily
intended for building libraries, where optimal ordering is not critical,
and cycles occur often.
d95 1
@


1.6
log
@Various cleanups and standardizations.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.5 2000/03/04 22:19:27 aaron Exp $
d40 1
a40 1
.Dd April 1, 1994
d48 2
d52 2
d56 1
a56 1
.Nm
d64 1
a64 1
Node names in the input are separated by whitespace and there must
d77 7
a85 1
Can take a very long time.
d87 1
a87 2
Do not display informational messages about cycles.
This is primarily
d90 8
d100 9
a108 1
.Xr ar 1
d115 4
a118 3
.Nm
command and manual page are derived from sources contributed to Berkeley by
Michael Rendell of Memorial University of Newfoundland.
@


1.5
log
@In Unix land we prefer "whitespace" to "white space" or "white-space". At
least, this is the impression I get from looking at a lot of Perl docs.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.4 1998/10/30 00:24:40 aaron Exp $
d52 1
a52 1
.Nm tsort
d77 2
a78 1
Do not display informational messages about cycles.  This is primarily
d90 1
a90 1
.Nm tsort
@


1.4
log
@usr.bin/ man page fixes, t-z
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.3 1996/06/26 05:42:00 deraadt Exp $
d60 1
a60 1
Node names in the input are separated by white space and there must
@


1.3
log
@rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD: tsort.1,v 1.6 1996/01/17 20:37:49 mycroft Exp $
d52 1
a52 1
.Nm Tsort
@


1.2
log
@add -q option for silence; from mouse@@collatz.mcrcim.mcgill.edu;
netbsd pr#1204
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: tsort.1,v 1.5 1994/12/07 01:06:24 jtc Exp $
d48 1
d72 1
a72 1
.It Fl l 
d75 4
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
