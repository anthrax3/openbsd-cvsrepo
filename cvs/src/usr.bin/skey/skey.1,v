head	1.36;
access;
symbols
	OPENBSD_6_1:1.36.0.6
	OPENBSD_6_1_BASE:1.36
	OPENBSD_6_0:1.36.0.4
	OPENBSD_6_0_BASE:1.36
	OPENBSD_5_9:1.36.0.2
	OPENBSD_5_9_BASE:1.36
	OPENBSD_5_8:1.35.0.6
	OPENBSD_5_8_BASE:1.35
	OPENBSD_5_7:1.35.0.2
	OPENBSD_5_7_BASE:1.35
	OPENBSD_5_6:1.34.0.4
	OPENBSD_5_6_BASE:1.34
	OPENBSD_5_5:1.33.0.8
	OPENBSD_5_5_BASE:1.33
	OPENBSD_5_4:1.33.0.4
	OPENBSD_5_4_BASE:1.33
	OPENBSD_5_3:1.33.0.2
	OPENBSD_5_3_BASE:1.33
	OPENBSD_5_2:1.32.0.22
	OPENBSD_5_2_BASE:1.32
	OPENBSD_5_1_BASE:1.32
	OPENBSD_5_1:1.32.0.20
	OPENBSD_5_0:1.32.0.18
	OPENBSD_5_0_BASE:1.32
	OPENBSD_4_9:1.32.0.16
	OPENBSD_4_9_BASE:1.32
	OPENBSD_4_8:1.32.0.14
	OPENBSD_4_8_BASE:1.32
	OPENBSD_4_7:1.32.0.10
	OPENBSD_4_7_BASE:1.32
	OPENBSD_4_6:1.32.0.12
	OPENBSD_4_6_BASE:1.32
	OPENBSD_4_5:1.32.0.8
	OPENBSD_4_5_BASE:1.32
	OPENBSD_4_4:1.32.0.6
	OPENBSD_4_4_BASE:1.32
	OPENBSD_4_3:1.32.0.4
	OPENBSD_4_3_BASE:1.32
	OPENBSD_4_2:1.32.0.2
	OPENBSD_4_2_BASE:1.32
	OPENBSD_4_1:1.29.0.8
	OPENBSD_4_1_BASE:1.29
	OPENBSD_4_0:1.29.0.6
	OPENBSD_4_0_BASE:1.29
	OPENBSD_3_9:1.29.0.4
	OPENBSD_3_9_BASE:1.29
	OPENBSD_3_8:1.29.0.2
	OPENBSD_3_8_BASE:1.29
	OPENBSD_3_7:1.26.0.4
	OPENBSD_3_7_BASE:1.26
	OPENBSD_3_6:1.26.0.2
	OPENBSD_3_6_BASE:1.26
	OPENBSD_3_5:1.23.0.4
	OPENBSD_3_5_BASE:1.23
	OPENBSD_3_4:1.23.0.2
	OPENBSD_3_4_BASE:1.23
	OPENBSD_3_3:1.22.0.8
	OPENBSD_3_3_BASE:1.22
	OPENBSD_3_2:1.22.0.6
	OPENBSD_3_2_BASE:1.22
	OPENBSD_3_1:1.22.0.4
	OPENBSD_3_1_BASE:1.22
	OPENBSD_3_0:1.22.0.2
	OPENBSD_3_0_BASE:1.22
	OPENBSD_2_9_BASE:1.21
	OPENBSD_2_9:1.21.0.2
	OPENBSD_2_8:1.20.0.4
	OPENBSD_2_8_BASE:1.20
	OPENBSD_2_7:1.20.0.2
	OPENBSD_2_7_BASE:1.20
	OPENBSD_2_6:1.18.0.2
	OPENBSD_2_6_BASE:1.18
	OPENBSD_2_5:1.13.0.2
	OPENBSD_2_5_BASE:1.13
	OPENBSD_2_4:1.12.0.2
	OPENBSD_2_4_BASE:1.12
	OPENBSD_2_3:1.10.0.2
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.36
date	2015.10.09.21.59.34;	author tim;	state Exp;
branches;
next	1.35;
commitid	DVoiJg7RFqjToPA4;

1.35
date	2015.01.16.16.16.36;	author schwarze;	state Exp;
branches;
next	1.34;
commitid	rCyXtOxlUq0XrPi0;

1.34
date	2014.03.20.20.39.13;	author naddy;	state Exp;
branches;
next	1.33;

1.33
date	2012.09.26.16.12.13;	author jmc;	state Exp;
branches;
next	1.32;

1.32
date	2007.05.31.19.20.16;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2007.04.28.15.54.54;	author sobrado;	state Exp;
branches;
next	1.30;

1.30
date	2007.03.16.16.06.38;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2005.07.14.19.27.18;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2005.07.07.08.12.22;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2005.07.06.21.39.30;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2004.06.06.21.23.20;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2004.06.06.11.19.16;	author otto;	state Exp;
branches;
next	1.24;

1.24
date	2004.06.04.18.18.20;	author otto;	state Exp;
branches;
next	1.23;

1.23
date	2003.08.08.10.13.33;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2001.06.20.17.12.29;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	2000.11.09.17.52.38;	author aaron;	state Exp;
branches;
next	1.20;

1.20
date	2000.03.23.21.39.54;	author aaron;	state Exp;
branches;
next	1.19;

1.19
date	2000.03.10.20.17.52;	author aaron;	state Exp;
branches;
next	1.18;

1.18
date	99.08.17.16.34.51;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	99.08.17.16.17.24;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	99.07.03.13.01.54;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	99.06.05.01.21.40;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	99.05.16.19.57.59;	author alex;	state Exp;
branches;
next	1.13;

1.13
date	98.11.04.22.36.40;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	98.09.27.16.57.53;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	98.08.17.17.41.50;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	98.02.24.20.52.44;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	97.07.17.05.48.39;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.01.05.21.30.06;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	96.10.23.21.53.37;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	96.10.08.01.20.55;	author michaels;	state Exp;
branches;
next	1.5;

1.5
date	96.09.30.18.49.52;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.09.29.23.04.57;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.09.27.15.41.36;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.39.19;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.07;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.07;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.36
log
@Remove telnet warnings. Civilization has reached a point where they are no
longer relevant.

OK millert@@
@
text
@.\" $OpenBSD: skey.1,v 1.35 2015/01/16 16:16:36 schwarze Exp $
.\"	@@(#)skey.1	1.1 	10/28/93
.\"
.Dd $Mdocdate: January 16 2015 $
.Dt SKEY 1
.Os
.Sh NAME
.Nm skey , otp-md5 , otp-rmd160 , otp-sha1
.Nd respond to an OTP challenge
.Sh SYNOPSIS
.Nm skey
.Op Fl x
.Oo
.Fl md5 | rmd160 | sha1
.Oc
.Op Fl n Ar count
.Op Fl p Ar passphrase
.Ao Ar sequence# Ac Op /
.Ar key
.Sh DESCRIPTION
.Nm S/Key
is a procedure for using one-time passwords to authenticate access to
computer systems.
It uses 64 bits of information transformed by the
MD5, RIPEMD-160, or SHA1 algorithms.
The user supplies the 64 bits
in the form of 6 English words that are generated by a secure computer.
This implementation of
.Nm S/Key
is RFC 2289 compliant.
.Pp
Before using
.Nm skey
the system needs to be initialized using
.Xr skeyinit 1 ;
this will establish a secret passphrase.
After that, one-time passwords can be generated using
.Nm skey ,
which will prompt for the secret passphrase.
After a one-time password has been used to log in, it can no longer be used.
.Pp
When
.Nm skey
is invoked as
.Nm otp-method ,
.Nm skey
will use
.Ar method
as the hash function where
.Ar method
is currently one of md5, rmd160, or sha1.
.Pp
If you misspell your secret passphrase while running
.Nm skey ,
you will get a list of one-time passwords
that will not work, and no indication of the problem.
.Pp
Password sequence numbers count backwards.
You can enter the passwords using small letters, even though
.Nm skey
prints them capitalized.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl md5 | rmd160 | sha1
Selects the hash algorithm:
MD5, RMD-160 (160-bit Ripe Message Digest),
or SHA1 (NIST Secure Hash Algorithm Revision 1).
.It Fl n Ar count
Prints out
.Ar count
one-time passwords.
The default is to print one.
.It Fl p Ar passphrase
Uses
.Ar passphrase
as the secret passphrase.
Use of this option is discouraged as
your secret passphrase could be visible in a process listing.
.It Fl x
Causes output to be in hexadecimal instead of ASCII.
.El
.Sh EXAMPLES
.Bd -literal -offset indent
$ skey 99 th91334
Enter secret passphrase: \*(Ltyour secret passphrase is entered here\*(Gt
OMEN US HORN OMIT BACK AHOY
$
.Ed
.Sh SEE ALSO
.Xr login 1 ,
.Xr skeyaudit 1 ,
.Xr skeyinfo 1 ,
.Xr skeyinit 1 ,
.Xr skey 5 ,
.Xr skeyprune 8
.Sh STANDARDS
.Rs
.%A N. Haller
.%A C. Metz
.%A P. Nesser
.%A M. Straw
.%D February 1998
.%R RFC 2289
.%T A One-Time Password System
.Re
.Sh TRADEMARKS AND PATENTS
S/Key is a Trademark of Bellcore.
.Sh AUTHORS
.An Phil Karn
.An Neil M. Haller
.An John S. Walden
.An Scott Chasin
@


1.35
log
@add missing .An macros
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.34 2014/03/20 20:39:13 naddy Exp $
d4 1
a4 1
.Dd $Mdocdate: March 20 2014 $
a85 1
Reminder - Do not use this program while logged in via telnet.
@


1.34
log
@Remove the (non-default) MD4 hash algorithm from S/Key.
ok millert, man pages ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.33 2012/09/26 16:12:13 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: September 26 2012 $
d111 4
a114 1
Phil Karn, Neil M. Haller, John S. Walden, Scott Chasin
@


1.33
log
@last stage of rfc changes, using consistent Rs/Re blocks, and moving the
references into a STANDARDS section;
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.32 2007/05/31 19:20:16 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: May 31 2007 $
d8 1
a8 1
.Nm skey , otp-md4 , otp-md5 , otp-rmd160 , otp-sha1
d14 1
a14 1
.Fl md4 | md5 | rmd160 | sha1
d25 1
a25 1
MD4, MD5, RIPEMD-160, or SHA1 algorithms.
d51 1
a51 1
is currently one of md4, md5, rmd160, or sha1.
d65 1
a65 1
.It Fl md4 | md5 | rmd160 | sha1
d67 1
a67 1
MD4, MD5, RMD-160 (160-bit Ripe Message Digest),
@


1.32
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.31 2007/04/28 15:54:54 sobrado Exp $
d4 1
a4 1
.Dd $Mdocdate$
d98 1
d100 5
d106 1
a106 2
.%T "A One-Time Password System"
.%D 1998
@


1.31
log
@the options list must be alphabetically sorted

ok by jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.30 2007/03/16 16:06:38 jmc Exp $
d4 1
a4 1
.Dd October 28, 1993
@


1.30
log
@use a full reference for RFC 2289; from Igor Sobrado
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.29 2005/07/14 19:27:18 jmc Exp $
d65 4
a79 4
.It Fl md4 | md5 | rmd160 | sha1
Selects the hash algorithm:
MD4, MD5, RMD-160 (160-bit Ripe Message Digest),
or SHA1 (NIST Secure Hash Algorithm Revision 1).
@


1.29
log
@add skey(5) to SEE ALSO;
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.28 2005/07/07 08:12:22 jmc Exp $
d98 5
a102 2
.Pp
.Em RFC 2289
@


1.28
log
@arrange list of hash algorithms as previously done for skeyinit(1);
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.27 2005/07/06 21:39:30 jmc Exp $
d96 1
@


1.27
log
@- tidy up SYNOPSIS
- sort options
- sync usage()
- other small tweaks
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.26 2004/06/06 21:23:20 jmc Exp $
d76 4
a79 8
.It Fl md4
Selects MD4 as the hash algorithm.
.It Fl md5
Selects MD5 as the hash algorithm.
.It Fl rmd160
Selects RMD-160 (160 bit Ripe Message Digest) as the hash algorithm.
.It Fl sha1
Selects SHA-1 (NIST Secure Hash Algorithm Revision 1) as the hash algorithm.
@


1.26
log
@- skeyprune is section 8, not 1
- use -offset for display
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.25 2004/06/06 11:19:16 otto Exp $
d8 1
a8 1
.Nm skey, otp-md4, otp-md5, otp-sha1, otp-rmd160
d14 1
a14 2
.Fl md4 | Fl md5 | Fl sha1 |
.Fl rmd160
d18 2
a19 1
<sequence#>[/] key
d25 1
a25 1
MD4, MD5, SHA1, or RIPEMD-160 algorithms.
d51 1
a51 1
is currently one of md4, md5, sha1, or rmd160.
a75 2
.It Fl x
Causes output to be in hexadecimal instead of ASCII.
d80 2
d84 2
a85 2
.It Fl rmd160
Selects RMD-160 (160 bit Ripe Message Digest) as the hash algorithm.
d91 1
a91 1
Enter secret passphrase: <your secret passphrase is entered here>
@


1.25
log
@Format example using -literal, add .Xr's. From millert@@
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.24 2004/06/04 18:18:20 otto Exp $
d88 6
a93 6
.Bd -literal
    $ skey 99 th91334
    Reminder - Do not use this program while logged in via telnet.
    Enter secret passphrase: <your secret passphrase is entered here>
    OMEN US HORN OMIT BACK AHOY
    $
d100 1
a100 1
.Xr skeyprune 1
@


1.24
log
@Consistently use "secret passphrase" for the passphrase made up by the user
and "one-time password" for the generated passwords.
ok jmc@@ millert@@
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.23 2003/08/08 10:13:33 jmc Exp $
d88 3
a90 3
.sp 0
    % skey 99 th91334
.sp 0
a91 1
.sp 0
d93 2
a94 2
.sp 0
    %
d97 1
d99 2
a100 1
.Xr skeyinit 1
@


1.23
log
@refer to RFCs consistently (RFC XXXX);
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.22 2001/06/20 17:12:29 millert Exp $
d18 1
a18 1
.Op Fl p Ar passwd
d32 10
d53 1
a53 1
If you misspell your password while running
d55 1
a55 1
you will get a list of passwords
d70 1
a70 1
.It Fl p Ar password
d72 2
a73 2
.Ar password
as the secret password.
d75 1
a75 1
your secret password could be visible in a process listing.
d91 1
a91 1
    Enter secret password: <your secret password is entered here>
@


1.22
log
@cosmetic changes and mention RFC2289 which supercedes RFC1938
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.21 2000/11/09 17:52:38 aaron Exp $
d91 1
a91 1
.Em RFC2289
@


1.21
log
@Change all option list specifications to ".Bl -tag -width Ds". Most man
pages just needed their -width parameter tweaked to "Ds", which provides
a nice width of 6 constant characters. For consistency more than anything.
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.20 2000/03/23 21:39:54 aaron Exp $
d21 1
a21 1
.Nm S/key
d29 2
a30 2
.Nm s/key
is RFC 1938 compliant.
d91 1
a91 1
.Em RFC1938
@


1.20
log
@More pedantic man page formatting insanity, lalala
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.19 2000/03/10 20:17:52 aaron Exp $
d54 1
a54 1
.Bl -tag -width XXXXXXX
@


1.19
log
@Various cleanups and standardization.
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.18 1999/08/17 16:34:51 millert Exp $
d23 4
a26 2
computer systems. It uses 64 bits of information transformed by the
MD4, MD5, SHA1, or RIPEMD-160 algorithms. The user supplies the 64 bits
@


1.18
log
@doesn't count down from 99 anymore
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.17 1999/08/17 16:17:24 millert Exp $
d50 2
a51 1
.Sh OPTIONS
d56 2
a57 1
one-time passwords.  The default is to print one.
d61 2
a62 1
as the secret password.  Use of this option is discouraged as
d75 1
a75 1
.Sh EXAMPLE
@


1.17
log
@mention RIPEMD-160 in body, fix date
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.16 1999/07/03 13:01:54 aaron Exp $
d44 1
a44 1
that will not work, and no indication about the problem.
d46 1
a46 1
Password sequence numbers count backward from 99.
@


1.16
log
@use .Oo/.Oc so -rmd160 option is compiled into the SYNOPSIS properly
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.15 1999/06/05 01:21:40 aaron Exp $
d4 1
a4 1
.Dd 28 October 1993
d24 3
a26 3
MD4, MD5, or SHA1 algorithms. The user supplies the 64 bits in the form
of 6 English words that are generated by a secure computer.  This
implementation of
@


1.15
log
@- remove trailing white space
- remove arguments from .Os macros
- remove arguments from .Nm macros, where appropriate
- some more Dq/Sq/Ql insanity
- still lots to do in the usr.bin tree... :/
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.14 1999/05/16 19:57:59 alex Exp $
d13 4
a16 1
.Op Fl md4 | Fl md5 | Fl sha1 | Fl rmd160
@


1.14
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.13 1998/11/04 22:36:40 aaron Exp $
d29 1
a29 1
is invoked as 
d77 1
a77 1
    % 
@


1.13
log
@be really pedantic about punctuation following -mdoc macro'd text
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.12 1998/09/27 16:57:53 aaron Exp $
d79 1
d81 1
a81 2
.Xr skeyinit 1 ,
.Xr login 1
@


1.12
log
@usr.bin/ man page cleanups, n-s
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.11 1998/08/17 17:41:50 deraadt Exp $
d9 1
a9 1
.Nd Respond to a OTP challenge.
@


1.11
log
@Xr login
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.10 1998/02/24 20:52:44 millert Exp $
d19 1
a19 1
is a procedure for using one time passwords to authenticate access to
d52 1
a52 1
one time passwords.  The default is to print one.
d59 1
a59 1
causes output to be in hexidecimal instead of ASCII.
d79 1
d81 2
a82 2
.Xr skeyinfo 1 ,
.Xr login 1 ,
@


1.10
log
@Allow superuser to disable skey by unlnking /etc/skeykeys.
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.9 1997/07/17 05:48:39 millert Exp $
d81 1
d83 2
@


1.9
log
@Add RIPEMD-160 (rmd160) support to OTP (s/key).
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.8 1997/01/05 21:30:06 millert Exp $
d48 1
a48 1
.Bl -tag -width Ds
@


1.8
log
@mention rfc1938
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.7 1996/10/23 21:53:37 millert Exp $
d8 1
a8 1
.Nm skey, otp-md4, otp-md5, otp-sha1
d13 1
a13 1
.Op Fl md4 | Fl md5 | Fl sha1
d36 1
a36 1
is currently one of md4, md5, or sha1.
d65 3
a67 1
Selects SHA1 (NIST Secure Hash Algorithm Revision 1) as the hash algorithm.
@


1.7
log
@typo
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.6 1996/10/08 01:20:55 michaels Exp $
d22 4
a25 1
of 6 English words that are generated by a secure computer.
d78 2
a79 1
.Xr skeyinfo 1
@


1.6
log
@Attempt at cleanup.
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.4 1996/09/29 23:04:57 millert Exp $
d14 1
a14 1
.Op Fl b Ar count
@


1.5
log
@Fixed up docs and improved skeyinit's passwd prompt.
@
text
@d6 1
a6 1
.Os NetBSD 4
@


1.4
log
@updated s/key docs.
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.3 1996/09/27 15:41:36 millert Exp $
d21 18
a38 13
MD4 and MD5 algorithms. The user supplies the 64 bits in the form of 6
English words that are generated by a secure computer.
Example use of the S/key program
.Xr skey 1 :
.sp
.sp 0
    % skey  99 th91334
.sp 0
    Enter secret password: <your secret password is entered here>
.sp 0
    OMEN US HORN OMIT BACK AHOY
.sp 0
    % 
d40 5
a44 1
The options are as follows:
d62 1
a62 1
Selects SHA (NIST Secure Hash Algorithm Revision 1) as the hash algorithm.
d64 9
a72 21
.Pp
When
.Nm skey
is invoked as 
.Nm otp-method ,
.Nm skey
will use
.Ar method
as the hash function where
.Ar method
is currently one of md4, md5, or sha1.
.Pp
If you misspell your password while running
.Xr skey 1 ,
you will get a list of passwords
that will not work, and no indication about the problem.
.Pp
Password sequence numbers count backward from 99.
You can enter the passwords using small letters, even though
.Xr skey 1
prints them capitalized.
@


1.3
log
@Now can both MD4 and MD5 skey's.
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.2 1996/06/26 05:39:19 deraadt Exp $
d8 9
a16 2
.Nm S/key
.Nd a one time password system
d29 1
a29 1
    Enter password: <your secret password is entered here>
a36 6
.It Fl x
causes output to be in hexidecimal instead of ASCII.
.It Fl 4
Selects MD4 as the hash algorithm.
.It Fl 5
Selects MD5 as the hash algorithm.
d46 8
d56 10
a65 10
The programs that are part of the S/Key system are:
.Bl -tag -width skeyinit...
.It Xr skeyinit 1
used to setup your S/Key.
.It Xr skey 1
used to get the one time password each time.
.It Xr skeyinfo 1
used to extract information from the S/Key database.
It tells you what your next challenge will be.
.El
d67 1
a67 9
When you run
.Xr skeyinit 1
you inform the system of your
secret password.  Running
.Xr skey 1
then generates the
one-time passwords, and also requires your secret
password.  If however, you misspell your password
while running
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
.\" $OpenBSD: skey.1,v 1.1.1.1 1995/10/18 08:46:07 deraadt Exp $
d14 2
a15 2
MD4 algorithm. The user supplies the 64 bits in the form of 6 English
words that are generated by a secure computer.
d27 19
@


1.1
log
@Initial revision
@
text
@d1 1
a2 1
.\" $Id: skey.1,v 1.4 1994/11/09 21:17:34 jtc Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

