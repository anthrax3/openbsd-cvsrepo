head	1.5;
access;
symbols
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1
	netbsd_1_1:1.1.1;
locks; strict;
comment	@# @;


1.5
date	97.07.23.04.24.39;	author millert;	state dead;
branches;
next	1.4;

1.4
date	96.09.29.04.46.18;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.09.27.15.41.36;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.39.21;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.08;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.08;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Replace skeyaudit.sh with a setuid binary (necessary for mode 0600 skeykeys)
@
text
@#!/bin/sh
# $OpenBSD: skeyaudit.sh,v 1.4 1996/09/29 04:46:18 millert Exp $
# This script will look thru the skeykeys file for
# people with sequence numbers less then LOWLIMIT=12
# and send them an e-mail reminder to use skeyinit soon
# 

AWK=/usr/bin/awk
GREP=/usr/bin/grep
ECHO=/bin/echo
KEYDB=/etc/skeykeys
LOWLIMIT=12
ADMIN=root
SUBJECT="Reminder: Run skeyinit"
HOST=`/bin/hostname`


if [ "$1" != "" ]
then
 LOWLIMIT=$1
fi


# an skeykeys entry looks like
#   jsw 0076 la13079          ba20a75528de9d3a
# the sequence number is the second entry
#

for i in `$AWK '{print $1}' $KEYDB`
do
SEQ=`$GREP "^$i[ 	]" $KEYDB | $AWK '{if ($2 ~ /^[A-z]/) {print $3} else {print $2}}'`
if [ $SEQ -lt $LOWLIMIT ]
then
  KEY=`$GREP "^$i[ 	]" $KEYDB | $AWK '{if ($2 ~ /^[A-z]/) {print $4} else {print $3}}'`
  if [ $SEQ -lt  3 ]
  then
  SUBJECT="IMPORTANT action required"
  fi
  (
  $ECHO "You are nearing the end of your current S/Key sequence for account $i"
  $ECHO "on system $HOST."
  $ECHO ""
  $ECHO "Your S/key sequence number is now $SEQ.  When it reaches zero you"
  $ECHO "will no longer be able to use S/Key to login into the system.  "
  $ECHO " "
  $ECHO "Type \"skeyinit -s\" to reinitialize your sequence number."
  $ECHO ""
  ) | /usr/bin/Mail -s "$SUBJECT"  $i  $ADMIN
fi
done
@


1.4
log
@Will now work with SHA when it happens.
@
text
@d2 1
a2 1
# $OpenBSD: skeyaudit.sh,v 1.3 1996/09/27 15:41:36 millert Exp $
@


1.3
log
@Now can both MD4 and MD5 skey's.
@
text
@d2 1
a2 1
# $OpenBSD: skeyaudit.sh,v 1.2 1996/06/26 05:39:21 deraadt Exp $
d31 1
a31 1
SEQ=`$GREP "^$i[ 	]" $KEYDB | $AWK '{if ($2 ~ /^MD[0-9]+/) {print $3} else {print $2}}'`
d34 1
a34 1
  KEY=`$GREP "^$i[ 	]" $KEYDB | $AWK '{if ($2 ~ /^MD[0-9]+/) {print $4} else {print $3}}'`
@


1.2
log
@rcsid
@
text
@d2 1
a2 1
# $OpenBSD: skeyaudit.sh,v 1.1.1.1 1995/10/18 08:46:08 deraadt Exp $
d31 1
a31 1
SEQ=`$GREP "^$i[ 	]" $KEYDB | $AWK '{print $2}'`
d34 1
a34 1
  KEY=`$GREP "^$i[ 	]" $KEYDB | $AWK '{print $3}'`
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $Id: skeyaudit.sh,v 1.1 1994/06/24 08:06:38 deraadt Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
