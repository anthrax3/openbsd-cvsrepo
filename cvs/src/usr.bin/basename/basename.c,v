head	1.14;
access;
symbols
	OPENBSD_6_1:1.14.0.4
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.13.0.4
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.9.0.26
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.18
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.22
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.20
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.16
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.14
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.12
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.20
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.16
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.14
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.12
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.10
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.18
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2016.10.28.07.22.59;	author schwarze;	state Exp;
branches;
next	1.13;
commitid	ZyVHGm9uxvQc0g4F;

1.13
date	2015.12.24.17.11.47;	author mmcc;	state Exp;
branches;
next	1.12;
commitid	EkoUU9r7cadninnW;

1.12
date	2015.12.24.17.05.09;	author mmcc;	state Exp;
branches;
next	1.11;
commitid	CjpFIQEUTG1ZDhAW;

1.11
date	2015.10.09.01.37.06;	author deraadt;	state Exp;
branches;
next	1.10;
commitid	sbrB3Q5CNxcwZpfU;

1.10
date	2015.10.03.01.07.15;	author deraadt;	state Exp;
branches;
next	1.9;
commitid	oO1WCaHIZrFBmvw5;

1.9
date	2009.10.27.23.59.36;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2005.04.12.06.43.44;	author otto;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.07.07.22.47;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.10.22.20.44;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.03.02.56.06;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.44;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.08.17.21.25.01;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.31.37;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.44.55;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.44.55;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Delete some useless setlocale(3) calls in /usr/bin, no functional change.
Patches from Jan Stary <hans at stare dot cz>, tweaked by me and tb@@.
While here, apply some simple style improvements:
Sort headers, static void __dead usage(), return from main(),
zap case '?', drop /* NOTREACHED */, drop break after usage(), ...
OK tb@@ millert@@
@
text
@/*	$OpenBSD: basename.c,v 1.13 2015/12/24 17:11:47 mmcc Exp $	*/
/*	$NetBSD: basename.c,v 1.9 1995/09/02 05:29:46 jtc Exp $	*/

/*-
 * Copyright (c) 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <err.h>
#include <libgen.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

static void __dead usage(void);

int
main(int argc, char *argv[])
{
	int ch;
	char *p;

	if (pledge("stdio", NULL) == -1)
		err(1, "pledge");

	while ((ch = getopt(argc, argv, "")) != -1) {
		switch (ch) {
		default:
			usage();
		}
	}
	argc -= optind;
	argv += optind;

	if (argc != 1 && argc != 2)
		usage();

	if (**argv == '\0') {
		(void)puts("");
		return 0;
	}
	p = basename(*argv);
	if (p == NULL)
		err(1, "%s", *argv);
	/*
	 * If the suffix operand is present, is not identical to the
	 * characters remaining in string, and is identical to a suffix
	 * of the characters remaining in string, the suffix suffix
	 * shall be removed from string.
	 */
	if (*++argv) {
		size_t suffixlen, stringlen, off;

		suffixlen = strlen(*argv);
		stringlen = strlen(p);

		if (suffixlen < stringlen) {
			off = stringlen - suffixlen;
			if (!strcmp(p + off, *argv))
				p[off] = '\0';
		}
	}
	(void)puts(p);
	return 0;
}

extern char *__progname;

static void __dead
usage(void)
{

	(void)fprintf(stderr, "usage: %s string [suffix]\n", __progname);
	exit(1);
}
@


1.13
log
@Use return rather than exit to enable the stack protector. From
fritjof@@alokat.org.

ok tb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.12 2015/12/24 17:05:09 mmcc Exp $	*/
a34 1
#include <locale.h>
d40 1
a40 1
void usage(void);
a47 2
	setlocale(LC_ALL, "");

d65 1
a65 1
		exit(0);
d93 2
a94 1
void
@


1.12
log
@Order includes. From fritjof@@alokat.org
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.11 2015/10/09 01:37:06 deraadt Exp $	*/
d92 1
a92 1
	exit(0);
@


1.11
log
@Change all tame callers to namechange to pledge(2).
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.10 2015/10/03 01:07:15 deraadt Exp $	*/
d35 1
a38 1
#include <locale.h>
@


1.10
log
@even before it reaches getopt(), this program will never do more than
talk to stdio.  tame "stdio" is a no-brainer.
reviewed a while ago by doug
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.9 2009/10/27 23:59:36 deraadt Exp $	*/
d51 2
a52 2
	if (tame("stdio", NULL) == -1)
		err(1, "tame");
@


1.9
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.8 2005/04/12 06:43:44 otto Exp $	*/
d50 3
@


1.8
log
@Special-case the old basename "" returns "" behaviour. Some people
depend on it. ok millert@@ jaredy@@
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.7 2005/04/07 07:22:47 otto Exp $	*/
a31 13

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1991, 1993, 1994\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)basename.c	8.4 (Berkeley) 5/4/95";
#endif
static char rcsid[] = "$OpenBSD: basename.c,v 1.7 2005/04/07 07:22:47 otto Exp $";
#endif /* not lint */
@


1.7
log
@- Reintroduce getopt(3) for option processing. POSIX requires tools that
  take no options to recognize --.
- Use basename(3) to do the groundwork, instead of a rolling our own.
  Visible changes in behaviour: basename "" now returns a dot instead
  of an empty line; pathnames longer than PATH_MAX will produce an
  error message.

ok deraadt@@ jaredy@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.6 2003/06/10 22:20:44 deraadt Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: basename.c,v 1.6 2003/06/10 22:20:44 deraadt Exp $";
d76 4
@


1.6
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.5 2003/06/03 02:56:06 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: basename.c,v 1.5 2003/06/03 02:56:06 millert Exp $";
d46 2
d59 1
d64 4
a67 19
	if (argc != 2 && argc != 3)
		usage();
	argc--;
	argv++;

	/*
	 * (1) If string is // it is implementation defined whether steps (2)
	 *     through (5) are skipped or processed.
	 *
	 * (2) If string consists entirely of slash characters, string shall
	 *     be set to a single slash character.  In this case, skip steps
	 *     (3) through (5).
	 */
	for (p = *argv;; ++p) {
		if (!*p) {
			if (p > *argv)
				(void)putchar('/');
			(void)putchar('\n');
			exit(0);
a68 2
		if (*p != '/')
			break;
d70 2
d73 2
a74 19
	/*
	 * (3) If there are any trailing slash characters in string, they
	 *     shall be removed.
	 */
	for (; *p; ++p)
		continue;
	while (*--p == '/')
		continue;
	*++p = '\0';

	/*
	 * (4) If there are any slash characters remaining in string, the
	 *     prefix of string up to an including the last slash character
	 *     in string shall be removed.
	 */
	while (--p >= *argv)
		if (*p == '/')
			break;
	++p;
d76 3
d80 4
a83 4
	 * (5) If the suffix operand is present, is not identical to the
	 *     characters remaining in string, and is identical to a suffix
	 *     of the characters remaining in string, the suffix suffix
	 *     shall be removed from string.
d86 1
a86 1
		int suffixlen, stringlen, off;
d101 1
d106 1
a106 1
	(void)fprintf(stderr, "usage: basename string [suffix]\n");
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.4 2002/02/16 21:27:44 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: basename.c,v 1.4 2002/02/16 21:27:44 millert Exp $";
d55 1
a55 3
main(argc, argv)
	int argc;
	char **argv;
d128 1
a128 1
usage()
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.3 1997/08/17 21:25:01 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d43 1
a43 1
static char rcsid[] = "$OpenBSD: basename.c,v 1.3 1997/08/17 21:25:01 millert Exp $";
@


1.3
log
@Don't call getopt(3) since a) there are not switches and b) '-' is
a perfectly reasonable character to have in a pathname.
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.2 1996/06/26 05:31:37 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: basename.c,v 1.2 1996/06/26 05:31:37 deraadt Exp $";
d56 1
a56 1
void usage __P((void));
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.9 1995/09/02 05:29:46 jtc Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: basename.c,v 1.9 1995/09/02 05:29:46 jtc Exp $";
a63 1
	int ch;
d67 1
a67 10
	while ((ch = getopt(argc, argv, "")) != -1)
		switch(ch) {
		case '?':
		default:
			usage();
		}
	argc -= optind;
	argv += optind;

	if (argc != 1 && argc != 2)
d69 2
d83 2
a84 3
				(void)printf("/\n");
			else
				(void)printf("\n");
d129 1
a129 1
	(void)printf("%s\n", p);
@


1.1
log
@Initial revision
@
text
@d1 1
d47 1
a47 1
static char rcsid[] = "$NetBSD: basename.c,v 1.9 1995/09/02 05:29:46 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
