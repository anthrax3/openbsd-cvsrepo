head	1.22;
access;
symbols
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.22.0.4
	OPENBSD_6_0_BASE:1.22
	OPENBSD_5_9:1.22.0.2
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.20.0.10
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.20.0.6
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.4
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.19.0.2
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.15.0.14
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.12
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.10
	OPENBSD_5_0:1.15.0.8
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.6
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.14.0.8
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.4
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.2
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.13.0.20
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.18
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.16
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.14
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.12
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.10
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.8
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.6
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.12
	OPENBSD_2_8:1.5.0.10
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.8
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.6
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2;
locks; strict;
comment	@ * @;


1.22
date	2015.10.09.01.37.08;	author deraadt;	state Exp;
branches;
next	1.21;
commitid	sbrB3Q5CNxcwZpfU;

1.21
date	2015.10.07.06.43.15;	author deraadt;	state Exp;
branches;
next	1.20;
commitid	b2at4qXaRaFjH4Xd;

1.20
date	2013.08.06.21.56.51;	author landry;	state Exp;
branches;
next	1.19;

1.19
date	2013.03.14.15.44.15;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2013.03.14.13.20.57;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2013.03.12.19.09.23;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2013.03.12.15.07.12;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2009.10.27.23.59.40;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2008.05.26.09.22.30;	author sobrado;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.17.21.56.25;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.10.22.20.48;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.03.01.52.41;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.25.20.02.02;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.04.07.19.25.43;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.16.21.27.49;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.11.00.05.55;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.10.01.17.08.30;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.06.21.22.14.00;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.06.20.04.17.42;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.06.17.15.34.29;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.01.03.22.49.22;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.11.21.07.59.33;	author millert;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Change all tame callers to namechange to pledge(2).
@
text
@/*	$OpenBSD: mktemp.c,v 1.21 2015/10/07 06:43:15 deraadt Exp $	*/

/*
 * Copyright (c) 1996, 1997, 2001-2003, 2013
 *	Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <err.h>
#include <paths.h>
#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

__dead void usage(void);
__dead void fatal(const char *, ...) __attribute__((__format__(printf, 1, 2)));
__dead void fatalx(const char *, ...) __attribute__((__format__(printf, 1, 2)));

static int quiet;

int
main(int argc, char *argv[])
{
	int ch, fd, uflag = 0, tflag = 0, makedir = 0;
	char *cp, *template, *tempfile, *prefix = _PATH_TMP;
	size_t len;

	if (pledge("stdio rpath wpath cpath", NULL) == -1)
		err(1, "pledge");

	while ((ch = getopt(argc, argv, "dp:qtu")) != -1)
		switch(ch) {
		case 'd':
			makedir = 1;
			break;
		case 'p':
			prefix = optarg;
			tflag = 1;
			break;
		case 'q':
			quiet = 1;
			break;
		case 't':
			tflag = 1;
			break;
		case 'u':
			uflag = 1;
			break;
		default:
			usage();
	}

	/* If no template specified use a default one (implies -t mode) */
	switch (argc - optind) {
	case 1:
		template = argv[optind];
		break;
	case 0:
		template = "tmp.XXXXXXXXXX";
		tflag = 1;
		break;
	default:
		usage();
	}

	len = strlen(template);
	if (len < 6 || strcmp(&template[len - 6], "XXXXXX")) {
		fatalx("insufficient number of Xs in template `%s'",
		    template);
	}
	if (tflag) {
		if (strchr(template, '/')) {
			fatalx("template must not contain directory "
			    "separators in -t mode");
		}

		cp = getenv("TMPDIR");
		if (cp != NULL && *cp != '\0')
			prefix = cp;
		len = strlen(prefix);
		while (len != 0 && prefix[len - 1] == '/')
			len--;

		if (asprintf(&tempfile, "%.*s/%s", (int)len, prefix, template) < 0)
			tempfile = NULL;
	} else
		tempfile = strdup(template);

	if (tempfile == NULL)
		fatalx("cannot allocate memory");

	if (makedir) {
		if (mkdtemp(tempfile) == NULL)
			fatal("cannot make temp dir %s", tempfile);
		if (uflag)
			(void)rmdir(tempfile);
	} else {
		if ((fd = mkstemp(tempfile)) < 0)
			fatal("cannot make temp file %s", tempfile);
		(void)close(fd);
		if (uflag)
			(void)unlink(tempfile);
	}

	(void)puts(tempfile);
	free(tempfile);

	exit(EXIT_SUCCESS);
}

__dead void
fatal(const char *fmt, ...)
{
	if (!quiet) {
		va_list ap;

		va_start(ap, fmt);
		vwarn(fmt, ap);
		va_end(ap);
	}
	exit(EXIT_FAILURE);
}

__dead void
fatalx(const char *fmt, ...)
{
	if (!quiet) {
		va_list ap;

		va_start(ap, fmt);
		vwarnx(fmt, ap);
		va_end(ap);
	}
	exit(EXIT_FAILURE);
}

__dead void
usage(void)
{
	extern char *__progname;

	(void)fprintf(stderr,
	    "usage: %s [-dqtu] [-p directory] [template]\n", __progname);
	exit(EXIT_FAILURE);
}
@


1.21
log
@tame "stdio rpath wpath cpath" covers mkstemp (O_RDONLY|O_CREAT),
mkdtemp(), and unlink()
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.20 2013/08/06 21:56:51 landry Exp $	*/
d41 2
a42 2
	if (tame("stdio rpath wpath cpath", NULL) == -1)
		err(1, "tame");
@


1.20
log
@Move the check for template length added in r1.16 outside the !tflag
block so that the friendly error message is also shown in the -t case
instead of EINVAL.
ok millert@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.19 2013/03/14 15:44:15 millert Exp $	*/
d40 3
@


1.19
log
@Add fatal() and fatalx() that honor the quiet flag instead of
using "if (quiet) warn(...); exit(1);" throughout.  OK sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.18 2013/03/14 13:20:57 millert Exp $	*/
d76 5
d96 1
a96 6
	} else {
		len = strlen(template);
		if (len < 6 || strcmp(&template[len - 6], "XXXXXX")) {
			fatalx("insufficient number of Xs in template `%s'",
			    template);
		}
d98 1
a98 1
	}
@


1.18
log
@Fix indentation
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.17 2013/03/12 19:09:23 millert Exp $	*/
d20 1
d22 1
a26 1
#include <err.h>
d29 4
d37 1
a37 1
	int ch, fd, uflag = 0, quiet = 0, tflag = 0, makedir = 0;
d78 2
a79 4
			if (!quiet)
				warnx("template must not contain directory "
				    "separators in -t mode");
			exit(1);
d94 2
a95 5
		    if (!quiet) {
			    warnx("insufficient number of Xs in template `%s'",
				template);
		    }
		    exit(1);
d99 2
a100 5
	if (tempfile == NULL) {
		if (!quiet)
			warnx("cannot allocate memory");
		exit(1);
	}
d103 2
a104 6
		if (mkdtemp(tempfile) == NULL) {
			if (!quiet)
				warn("cannot make temp dir %s", tempfile);
			exit(1);
		}

d108 2
a109 5
		if ((fd = mkstemp(tempfile)) < 0) {
			if (!quiet)
				warn("cannot make temp file %s", tempfile);
			exit(1);
		}
a110 1

d118 27
a144 1
	exit(0);
d154 1
a154 1
	exit(1);
@


1.17
log
@warnx() not warningx(), too much sudo on the brain
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.16 2013/03/12 15:07:12 millert Exp $	*/
d92 2
a93 2
			warnx("insufficient number of Xs in template `%s'",
			    template);
@


1.16
log
@Require that the template include at least 6 trailing Xs to match
POSIX mkstemp/mkdtemp.  Check before the call to mkstemp/mkdtemp
so we can give a better error message than "invalid argument".
OK deraadt@@ jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.15 2009/10/27 23:59:40 deraadt Exp $	*/
d92 1
a92 1
			warningx("insufficient number of Xs in template `%s'",
@


1.15
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.14 2008/05/26 09:22:30 sobrado Exp $	*/
d4 2
a5 1
 * Copyright (c) 1996, 1997, 2001 Todd C. Miller <Todd.Miller@@courtesan.com>
d34 1
a34 1
	int plen;
d82 3
a84 3
		plen = strlen(prefix);
		while (plen != 0 && prefix[plen - 1] == '/')
			plen--;
d86 1
a86 1
		if (asprintf(&tempfile, "%.*s/%s", plen, prefix, template) < 0)
d88 9
a96 1
	} else
d98 1
@


1.14
log
@"usage:" is lowercase; synchronize synopsis and usage.
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.13 2003/06/17 21:56:25 millert Exp $	*/
a17 4

#ifndef lint                                                              
static const char rcsid[] = "$OpenBSD: mktemp.c,v 1.13 2003/06/17 21:56:25 millert Exp $";
#endif /* not lint */                                                        
@


1.13
log
@Sync with share/misc/license.template and add missing DARPA credit
where applicable.
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.12 2003/06/10 22:20:48 deraadt Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: mktemp.c,v 1.12 2003/06/10 22:20:48 deraadt Exp $";
d132 1
a132 1
	    "Usage: %s [-dqtu] [-p prefix] [template]\n", __progname);
@


1.12
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.11 2003/06/03 01:52:41 millert Exp $	*/
d10 7
a16 7
 * THE SOFTWARE IS PROVIDED "AS IS" AND TODD C. MILLER DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL TODD C. MILLER BE LIABLE
 * FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: mktemp.c,v 1.11 2003/06/03 01:52:41 millert Exp $";
@


1.11
log
@Use an ISC-tyle license for all my code; it is simpler and more permissive.
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.10 2003/04/25 20:02:02 millert Exp $	*/
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: mktemp.c,v 1.10 2003/04/25 20:02:02 millert Exp $";
d33 1
a33 3
main(argc, argv)
	int argc;
	char **argv;
d127 1
a127 1
usage()
@


1.10
log
@Don't assume that asprintf() will leave "tempfile" unmolested when
memory allocation fails.  Noted and OK by pval@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.9 2003/04/07 19:25:43 millert Exp $	*/
a4 1
 * All rights reserved.
d6 3
a8 10
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d10 7
a16 10
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d20 1
a20 1
static const char rcsid[] = "$OpenBSD: mktemp.c,v 1.9 2003/04/07 19:25:43 millert Exp $";
@


1.9
log
@Simplify code for -t using asprintf(); deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.8 2002/02/16 21:27:49 millert Exp $	*/
d31 1
a31 1
static const char rcsid[] = "$OpenBSD: mktemp.c,v 1.8 2002/02/16 21:27:49 millert Exp $";
d102 2
a103 2
		tempfile = NULL;
		asprintf(&tempfile, "%.*s/%s", plen, prefix, template);
@


1.8
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.7 2001/10/11 00:05:55 millert Exp $	*/
d31 1
a31 1
static const char rcsid[] = "$OpenBSD: mktemp.c,v 1.7 2001/10/11 00:05:55 millert Exp $";
d50 1
a50 1
	size_t plen;
d90 2
a91 1
				warnx("template must not contain directory separators in -t mode");
d102 8
a109 15
		tempfile = (char *)malloc(plen + 1 + strlen(template) + 1);
		if (tempfile == NULL) {
			if (!quiet)
				warnx("cannot allocate memory");
			exit(1);
		}
		(void)memcpy(tempfile, prefix, plen);
		tempfile[plen] = '/';
		(void)strcpy(tempfile + plen + 1, template);	/* SAFE */
	} else {
		if ((tempfile = strdup(template)) == NULL) {
			if (!quiet)
				warnx("cannot allocate memory");
			exit(1);
		}
@


1.7
log
@Sync with portable mktemp-1.4; the template is now optional.
Came out of discussions with Solar Designer.
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.6 2001/10/01 17:08:30 millert Exp $	*/
d31 1
a31 1
static const char rcsid[] = "$OpenBSD: mktemp.c,v 1.6 2001/10/01 17:08:30 millert Exp $";
d41 1
a41 1
__dead void usage __P((void));
@


1.6
log
@Add -t and -d flags to allow script writers to easily take a user's TMPDIR
environment variable into account.  This came out of a discussion with
Solar Designer.
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.5 1998/06/21 22:14:00 millert Exp $	*/
d31 1
a31 1
static const char rcsid[] = "$OpenBSD: mktemp.c,v 1.5 1998/06/21 22:14:00 millert Exp $";
d41 1
a41 9
void
usage()
{
	extern char *__progname;

	(void) fprintf(stderr,
	    "Usage: %s [-dqtu] [-p prefix] template\n", __progname);
	exit(1);
}
d48 2
a49 2
	int ch, uflag = 0, qflag = 0, tflag = 0, makedir = 0;
	char *cp, *template, *prefix = _PATH_TMP;
d62 1
a62 1
			qflag = 1;
d74 10
a83 1
	if (argc - optind != 1)
d85 1
d88 4
a91 5
		if (strchr(argv[optind], '/')) {
			if (qflag)
				exit(1);
			else
				errx(1, "template must not contain directory separators in -t mode");
d101 5
a105 6
		template = (char *)malloc(plen + 1 + strlen(argv[optind]) + 1);
		if (template == NULL) {
			if (qflag)
				exit(1);
			else
				errx(1, "Cannot allocate memory");
d107 3
a109 3
		memcpy(template, prefix, plen);
		template[plen] = '/';
		strcpy(template + plen + 1, argv[optind]);	/* SAFE */
d111 4
a114 5
		if ((template = strdup(argv[optind])) == NULL) {
			if (qflag)
				exit(1);
			else
				errx(1, "Cannot allocate memory");
d119 4
a122 5
		if (mkdtemp(template) == NULL) {
			if (qflag)
				exit(1);
			else
				err(1, "Cannot make temp dir %s", template);
d126 1
a126 1
			(void) rmdir(template);
d128 4
a131 5
		if (mkstemp(template) < 0) {
			if (qflag)
				exit(1);
			else
				err(1, "Cannot create temp file %s", template);
d133 1
d136 1
a136 1
			(void) unlink(template);
d139 2
a140 2
	(void) puts(template);
	free(template);
d143 10
@


1.5
log
@Remove the advertising clause in my old license, it impedes free use
of the code as a large number of similar clauses makes it impossible
to write an ad for a product using the code...
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.4 1997/06/20 04:17:42 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1996 Todd C. Miller <Todd.Miller@@courtesan.com>
d31 1
a31 1
static char rcsid[] = "$OpenBSD: mktemp.c,v 1.4 1997/06/20 04:17:42 millert Exp $";
d34 1
a40 2
extern char *__progname;

d44 4
a47 2
	(void) fprintf(stderr, "Usage: %s [-d] [-q] [-u] template\n",
	    __progname);
d56 3
a58 2
	char *template;
	int c, uflag = 0, qflag = 0, makedir = 0;
d60 2
a61 2
	while ((c = getopt(argc, argv, "dqu")) != -1)
		switch(c) {
d65 4
d72 3
a77 1
		case '?':
d85 32
a116 5
	if ((template = strdup(argv[optind])) == NULL) {
		if (qflag)
			exit(1);
		else
			errx(1, "Cannot allocate memory");
@


1.4
log
@Use mkdtemp(3)
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.3 1997/06/17 15:34:29 millert Exp $	*/
d15 1
a15 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Todd C. Miller.
 * 4. The name of the author may not be used to endorse or promote products
d31 1
a31 1
static char rcsid[] = "$OpenBSD: mktemp.c,v 1.3 1997/06/17 15:34:29 millert Exp $";
@


1.3
log
@Adds a -d (directory) flag.
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.2 1997/01/03 22:49:22 millert Exp $	*/
d34 1
a34 1
static char rcsid[] = "$OpenBSD: mktemp.c,v 1.2 1997/01/03 22:49:22 millert Exp $";
d88 1
a88 11
		for (c = 0; c < 100; c++) {
			if (mktemp(template) == NULL)
				if (qflag)
					exit(1);
				else
					err(1, "Cannot create temp dir %s",
					    template);
			if (mkdir(template, 0700) == 0)
				break;
		}
		if (c >= 100) {
@


1.2
log
@Better error on failure.
@
text
@d1 1
a1 1
/*	$OpenBSD: mktemp.c,v 1.1 1996/11/21 07:59:33 millert Exp $	*/
d34 1
a34 1
static char rcsid[] = "$OpenBSD: mktemp.c,v 1.1 1996/11/21 07:59:33 millert Exp $";
d48 2
a49 1
	(void) fprintf(stderr, "Usage: %s [-u] [-q] template\n", __progname);
d59 1
a59 1
	int ch, uflag = 0, qflag = 0;
d61 4
a64 4
	while ((ch = getopt(argc, argv, "uq")) != -1)
		switch(ch) {
		case 'u':
			uflag = 1;
d69 3
d87 30
a116 5
	if (mkstemp(template) < 0) {
		if (qflag)
			exit(1);
		else
			err(1, "Cannot create temp file %s", template);
a117 3

	if (uflag)
		(void) unlink(template);
@


1.1
log
@mktemp(1) for shell scripts.  No more gross directory hackery for safe temp
files.
@
text
@d1 1
a1 1
/*	$OpenBSD: failedlogin.c,v 1.1 1996/11/09 20:17:15 millert Exp $	*/
d34 1
a34 1
static char rcsid[] = "$OpenBSD: failedlogin.c,v 1.1 1996/11/09 20:17:15 millert Exp $";
d87 1
a87 1
			err(1, "Cannot create temp file");
@
