head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.12
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.8
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.4
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.6
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.10.0.6
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.9.0.26
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.24
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.22
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.20
	OPENBSD_5_0:1.9.0.18
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.16
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.14
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.10
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.12
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.8
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.6
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.4
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@# @;


1.11
date	2015.02.28.21.51.56;	author bentley;	state Exp;
branches;
next	1.10;
commitid	NNu2UZnsd5zmNVYD;

1.10
date	2014.02.12.16.58.44;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2007.05.31.19.20.16;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2005.07.06.21.55.48;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.10.09.12.11;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.16.17.26.58;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.19.01.49.45;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.17.22.44.51;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.11.21.40.02;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	98.09.27.16.57.53;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	97.07.23.04.10.53;	author millert;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Reduce usage of predefined strings in manpages.

Predefined strings are not very portable across troff implementations,
and they make the source much harder to read. Usually the intended
character can be written directly.

No output changes, except for two instances where the incorrect escape
was used in the first place.

tweaks + ok schwarze@@
@
text
@.\" $OpenBSD: skeyinfo.1,v 1.10 2014/02/12 16:58:44 schwarze Exp $
.\"
.Dd $Mdocdate: February 12 2014 $
.Dt SKEYINFO 1
.Os
.Sh NAME
.Nm skeyinfo
.Nd obtain the next S/Key challenge for a user
.Sh SYNOPSIS
.Nm skeyinfo
.Op Fl v
.Op Ar user
.Sh DESCRIPTION
.Nm
prints out the next S/Key challenge for the specified user or for the
current user if no user is specified.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl v
Print the hash algorithm as well.
.El
.Sh FILES
.Bl -tag -width /etc/skey
.It Pa /etc/skey
directory containing user entries for S/Key
.El
.Sh EXAMPLES
.Dl $ skey -n <number of passwords to print> `skeyinfo` | lpr
.Pp
This would print out a list of S/Key passwords for use over
an untrusted network (perhaps for use at a conference).
.Sh DIAGNOSTICS
.Bl -tag -width Ds
.It cannot open /etc/skey/user
The user does not have an entry in
.Pa /etc/skey
or access to the S/Key database has been disabled.
The database can be enabled with the
.Xr skeyinit 1
program.
.It user is not listed in /etc/skey
The S/Key database is enabled but the user does not have an entry in it.
The
.Xr skeyinit 1
program can be used to create an entry for the user.
.El
.Sh SEE ALSO
.Xr skey 1 ,
.Xr skeyinit 1
@


1.10
log
@.Sh ERRORS is only used in sections 2, 3, and 9, so use DIAGNOSTICS instead;
from Jan Stary <hans at stare dot cz>;
jmc@@ doesn't know of any upstream, so just commit it locally
@
text
@d1 1
a1 1
.\" $OpenBSD: skeyinfo.1,v 1.9 2007/05/31 19:20:16 jmc Exp $
d3 1
a3 1
.Dd $Mdocdate: May 31 2007 $
d29 1
a29 1
$ skey -n \*(Ltnumber of passwords to print\*(Gt `skeyinfo` \*(Ba lpr
@


1.9
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: skeyinfo.1,v 1.8 2005/07/06 21:55:48 jmc Exp $
d3 1
a3 1
.Dd $Mdocdate$
d33 1
a33 1
.Sh ERRORS
@


1.8
log
@- use nroff symbols
- use ksh prompt instead of csh prompt for EXAMPLES
@
text
@d1 1
a1 1
.\" $OpenBSD: skeyinfo.1,v 1.7 2003/06/10 09:12:11 jmc Exp $
d3 1
a3 1
.Dd May 16, 2002
@


1.7
log
@- section reorder
- COMPATIBILITY merge
- macro cleanup
- kill whitespace at EOL
- new sentence, new line

ssh pages ok markus@@
@
text
@d1 1
a1 1
.\" $OpenBSD: skeyinfo.1,v 1.6 2002/05/16 17:26:58 millert Exp $
d29 1
a29 1
% skey -n <number of passwords to print> `skeyinfo` | lpr
@


1.6
log
@Revert to using the S/Key database directly (instead of BSD auth)
so we can get real error messages.  This means the -a option is history
but it wasn't very useful anyway.
@
text
@d1 1
a1 1
.\" $OpenBSD: skeyinfo.1,v 1.5 2001/06/19 01:49:45 millert Exp $
d23 5
a46 5
.El
.Sh FILES
.Bl -tag -width /etc/skey
.It Pa /etc/skey
directory containing user entries for S/Key
@


1.5
log
@Add a -a flag to support other authentication types.
Probably only useful in conjunction with a remote S/Key server.
@
text
@d1 1
a1 1
.\" $OpenBSD: skeyinfo.1,v 1.4 2001/06/17 22:44:51 millert Exp $
d3 1
a3 1
.Dd 17 June 2001
a10 1
.Op Fl a Ar auth-type
d19 1
a19 8
.Bl -tag -width auth-typeXXXX
.It Fl a Ar auth-type
Specify an authentication type instead of the default
.Dq skey .
This can be used to get a challenge for a challenge/response authentication
mechanism other than S/Key, or if a remote S/Key server is in use.
Note that this will cause an error if the selected type
does not support challenge/response style authentication.
d28 20
a50 3
.Sh CAVEATS
If the user does not have an entry in the S/Key database a fake
challenge will be printed.
@


1.4
log
@Use BSD authentication to retrieve the challenge so we no longer require
suid root.
@
text
@d1 1
a1 1
.\" $OpenBSD: skeyinfo.1,v 1.3 2000/03/11 21:40:02 aaron Exp $
d11 1
d20 8
a27 1
.Bl -tag -width Ds
@


1.3
log
@Various cleanups and standardizations.
@
text
@d1 1
a1 1
.\" $OpenBSD: skeyinfo.1,v 1.2 1998/09/27 16:57:53 aaron Exp $
d3 1
a3 1
.Dd 22 July 1997
d31 3
@


1.2
log
@usr.bin/ man page cleanups, n-s
@
text
@d1 1
a1 1
.\" $OpenBSD: skeyinfo.1,v 1.1 1997/07/23 04:10:53 millert Exp $
d14 1
a14 1
.Nm skeyinfo
d16 8
a23 4
current user if no user is specified.  If the
.Fl v
flag is given, the hash algorithm is printed as well.
.Sh EXAMPLE
d25 1
a25 1
.sp
@


1.1
log
@Replace skeyinfo.sh with a setuid binary (necessary for mode 0600 /etc/skeykeys)
@
text
@d1 1
a1 1
.\" $OpenBSD: skeyinfo.1,v 1.4 1996/10/08 01:20:56 michaels Exp $
d25 2
a26 2
.Xr skeyinit 1 ,
.Xr skey 1
@

