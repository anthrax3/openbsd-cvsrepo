head	1.15;
access;
symbols
	OPENBSD_6_2:1.15.0.10
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.8
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.4
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.14.0.52
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.44
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.48
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.46
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.42
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.40
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.38
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.36
	OPENBSD_5_0:1.14.0.34
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.32
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.30
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.26
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.28
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.24
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.22
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.20
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.18
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.16
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.14
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.12
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.10
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.8
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.4
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.10
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.8
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.6
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4;
locks; strict;
comment	@ * @;


1.15
date	2015.11.01.14.02.37;	author tim;	state Exp;
branches;
next	1.14;
commitid	DGBCoLUZ9OlrnUNp;

1.14
date	2003.06.17.21.56.26;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.10.22.20.51;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.03.01.52.41;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.06.10.43.27;	author mpech;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.16.17.26.58;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.19.01.49.45;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.06.17.22.54.44;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.17.22.44.51;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.02.05.16.58.11;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.06.21.22.14.03;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.07.23.07.01.12;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.07.23.06.31.18;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.07.23.04.14.46;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.07.23.04.10.53;	author millert;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Pledge; OK millert@@
@
text
@/*	$OpenBSD: skeyinfo.c,v 1.14 2003/06/17 21:56:26 millert Exp $	*/

/*
 * Copyright (c) 1997, 2001, 2002 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F39502-99-1-0512.
 */

#include <err.h>
#include <limits.h>
#include <paths.h>
#include <pwd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <skey.h>

extern char *__progname;

void usage(void);

int
main(int argc, char **argv)
{
	struct passwd *pw;
	struct skey key;
	char *name = NULL;
	int error, ch, verbose = 0;

	if (pledge("stdio rpath wpath flock getpw", NULL) == -1)
		err(1, "pledge");

	while ((ch = getopt(argc, argv, "v")) != -1)
		switch(ch) {
		case 'v':
			verbose = 1;
			break;
		default:
			usage();
	}
	argc -= optind;
	argv += optind;

	if (argc == 1)
		name = argv[0];
	else if (argc > 1)
		usage();

	if (name && getuid() != 0)
		errx(1, "only root may specify an alternate user");

	if (name) {
		if ((pw = getpwnam(name)) == NULL)
			errx(1, "no passwd entry for %s", name);
	} else {
		if ((pw = getpwuid(getuid())) == NULL)
			errx(1, "no passwd entry for uid %u", getuid());
	}

	if ((name = strdup(pw->pw_name)) == NULL)
		err(1, "cannot allocate memory");
	sevenbit(name);

	error = skeylookup(&key, name);
	switch (error) {
		case 0:		/* Success! */
			if (verbose)
				(void)printf("otp-%s ", skey_get_algorithm());
			(void)printf("%d %s\n", key.n - 1, key.seed);
			break;
		case -1:	/* File error */
			err(1, "cannot open %s/%s", _PATH_SKEYDIR, name);
			break;
		case 1:		/* Unknown user */
			errx(1, "%s is not listed in %s", name, _PATH_SKEYDIR);
			break;
	}
	(void)fclose(key.keyfile);

	exit(error ? 1 : 0);
}

void
usage(void)
{
	(void)fprintf(stderr, "usage: %s [-v] [user]\n", __progname);
	exit(1);
}
@


1.14
log
@Sync with share/misc/license.template and add missing DARPA credit
where applicable.
@
text
@d1 1
a1 1
/*	$OpenBSD: skeyinfo.c,v 1.13 2003/06/10 22:20:51 deraadt Exp $	*/
d44 3
@


1.13
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: skeyinfo.c,v 1.12 2003/06/03 01:52:41 millert Exp $	*/
d10 11
a20 7
 * THE SOFTWARE IS PROVIDED "AS IS" AND TODD C. MILLER DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL TODD C. MILLER BE LIABLE
 * FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
@


1.12
log
@Use an ISC-tyle license for all my code; it is simpler and more permissive.
@
text
@d1 1
a1 1
/*	$OpenBSD: skeyinfo.c,v 1.11 2003/05/06 10:43:27 mpech Exp $	*/
d92 1
a92 1
usage()
@


1.11
log
@sevenbit() before skeylookup().

millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: skeyinfo.c,v 1.10 2002/05/16 17:26:58 millert Exp $	*/
a4 1
 * All rights reserved.
d6 3
a8 10
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d10 7
a16 10
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.10
log
@Revert to using the S/Key database directly (instead of BSD auth)
so we can get real error messages.  This means the -a option is history
but it wasn't very useful anyway.
@
text
@d1 1
a1 1
/*	$OpenBSD: skeyinfo.c,v 1.9 2001/06/19 01:49:45 millert Exp $	*/
d81 1
@


1.9
log
@Add a -a flag to support other authentication types.
Probably only useful in conjunction with a remote S/Key server.
@
text
@d1 1
a1 1
/*	$OpenBSD: skeyinfo.c,v 1.8 2001/06/17 22:54:44 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1997, 2001 Todd C. Miller <Todd.Miller@@courtesan.com>
d31 2
d35 1
a38 2
#include <login_cap.h>
#include <bsd_auth.h>
d48 5
a52 8
	char *style, *challenge, *cp, *name;
	int ch, verbose = 0;
	login_cap_t *lc;
	auth_session_t *as;

	name = NULL;
	style = "skey";
	while ((ch = getopt(argc, argv, "a:v")) != -1)
a53 3
		case 'a':
			style = optarg;
			break;
d82 13
a94 11
	if ((lc = login_getclass(pw->pw_class)) == NULL)
		errx(1, "unable to classify user %s", name);

	if ((cp = login_getstyle(lc, style, NULL)) == NULL)
		errx(1, "unknown authentication method %s", style);

	as = auth_userchallenge(name, cp, NULL, &challenge);
	if (as == NULL || challenge == NULL) {
		if (as)
			auth_close(as);
		errx(1, "unable to retrieve challenge for %s", name);
d96 1
d98 1
a98 17
	/*
	 * We only want the first line of the challenge so stop after a newline.
	 * If the user wants the full challenge including the hash type
	 * or if the challenge didn't start with 'otp-', print it verbatim.
	 * Otherwise, strip off the first word.
	 */
	if ((cp = strchr(challenge, '\n')))
		*cp = '\0';
	cp = strchr(challenge, ' ');
	if (verbose || *challenge != 'o' || !cp)
		cp = challenge;
	else
		cp++;
	puts(cp);

	auth_close(as);
	exit(0);
d102 1
a102 1
usage(void)
d104 1
a104 3

	(void)fprintf(stderr, "Usage: %s [-a auth-type] [-v] [user]\n",
	    __progname);
@


1.8
log
@be careful to avoid null pointer deref
@
text
@d1 1
a1 1
/*	$OpenBSD: skeyinfo.c,v 1.7 2001/06/17 22:44:51 millert Exp $	*/
d41 1
a41 1
void usage __P((void));
d44 1
a44 3
main(argc, argv)
	int argc;
	char **argv;
d47 1
a47 1
	char *challenge, *cp, *name = NULL;
d49 1
d52 3
a54 1
	while ((ch = getopt(argc, argv, "v")) != -1)
d56 3
d87 7
a93 1
	as = auth_userchallenge(name, "skey", NULL, &challenge);
d97 1
a97 1
		errx(1, "unable to retrieve S/Key challenge for %s", name);
d120 1
a120 1
usage()
d122 3
a124 1
	(void)fprintf(stderr, "Usage: %s [-v] [user]\n", __progname);
@


1.7
log
@Use BSD authentication to retrieve the challenge so we no longer require
suid root.
@
text
@d1 1
a1 1
/*	$OpenBSD: skeyinfo.c,v 1.6 2001/02/05 16:58:11 millert Exp $	*/
d85 2
a86 1
		auth_close(as);
@


1.6
log
@Don't bother checking username length, we trust pw_name
Call exit(1) not exit(-1) on stat/open error
Don't pass the username though sevenbit()
@
text
@d1 1
a1 1
/*	$OpenBSD: skeyinfo.c,v 1.5 1998/06/21 22:14:03 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1997 Todd C. Miller <Todd.Miller@@courtesan.com>
a30 2
#include <limits.h>
#include <paths.h>
a32 1
#include <stdlib.h>
d36 2
d49 3
a51 6
	struct skey key;
	char *name = NULL;
	int error, ch, verbose = 0;

	if (geteuid() != 0)
		errx(1, "must be setuid root");
d83 4
a86 12
	error = skeylookup(&key, name);
	switch (error) {
		case 0:		/* Success! */
			if (verbose)
				(void)printf("otp-%s ", skey_get_algorithm());
			(void)printf("%d %s\n", key.n - 1, key.seed);
			break;
		case -1:	/* File error */
			warn("cannot open %s", _PATH_SKEYKEYS);
			break;
		case 1:		/* Unknown user */
			warnx("%s is not listed in %s", name, _PATH_SKEYKEYS);
a87 1
	(void)fclose(key.keyfile);
d89 17
a105 1
	exit(error ? 1 : 0);
@


1.5
log
@Remove the advertising clause in my old license, it impedes free use
of the code as a large number of similar clauses makes it impossible
to write an ad for a product using the code...
@
text
@d1 1
a1 1
/*	$OpenBSD: skeyinfo.c,v 1.4 1997/07/23 07:01:12 millert Exp $	*/
d52 1
a52 1
	int errs, ch, verbose = 0;
a76 2
		if (strlen(name) > PASS_MAX)
			errx(1, "username too long (%d chars max)", PASS_MAX);
a85 1
	sevenbit(name);
d87 2
a88 2
	errs = skeylookup(&key, name);
	switch (errs) {
d95 1
a95 1
			warnx("cannot open %s", _PATH_SKEYKEYS);
d102 1
a102 1
	exit(errs);
@


1.4
log
@Use _PATH_SKEYKEYS
@
text
@d1 1
a1 1
/*	$OpenBSD: skeyinfo.c,v 1.3 1997/07/23 06:31:18 millert Exp $	*/
d15 1
a15 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Todd C. Miller.
 * 4. The name of the author may not be used to endorse or promote products
@


1.3
log
@close keyfile nicely.
@
text
@d1 1
a1 1
/*	$OpenBSD: skeyinfo.c,v 1.2 1997/07/23 04:14:46 millert Exp $	*/
d101 1
a101 2
			/* XXX - _PATH_SKEYFILE should be in paths.h? */
			warnx("cannot open /etc/skeykeys");
d104 1
a104 1
			warnx("%s is not listed in /etc/skeykeys", name);
d106 1
a106 1
	(void)fclose(mp->keyfile);
@


1.2
log
@exit() not return()
@
text
@d1 1
a1 1
/*	$OpenBSD: skeyinfo.c,v 1.1 1997/07/23 04:10:53 millert Exp $	*/
d107 1
@


1.1
log
@Replace skeyinfo.sh with a setuid binary (necessary for mode 0600 /etc/skeykeys)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d108 1
a108 1
	return(errs);
@
