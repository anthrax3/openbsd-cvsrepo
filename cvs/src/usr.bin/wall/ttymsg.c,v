head	1.17;
access;
symbols
	OPENBSD_6_1:1.17.0.6
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.4
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.16.0.26
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.18
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.22
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.20
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.16
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.14
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.12
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.10
	OPENBSD_5_0:1.16.0.8
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.6
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.15.0.22
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.18
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.16
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.14
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.12
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.10
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.8
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.6
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.4
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.2
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.10
	OPENBSD_2_8:1.6.0.8
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.6
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.4
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2015.11.05.22.20.11;	author benno;	state Exp;
branches;
next	1.16;
commitid	j1r9yJwQqEqQV7lo;

1.16
date	2009.10.27.23.59.49;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2004.09.14.23.01.31;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2003.07.31.18.21.42;	author avsm;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.26.21.59.10;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.03.02.56.22;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.04.02.20.07.49;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.26.09.27.11;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.19.19.02.17;	author mpech;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.04.23.44.19;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.04.23.35.59;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.11.18.16.47.01;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.11.18.02.57.22;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	98.11.18.01.03.16;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.10.25.06.06.30;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.42.47;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.51;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.51;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@pledge wall(1)
based on an idea from deraadt@@,
tested on YP by miod, ok deraadt@@
@
text
@/*	$OpenBSD: ttymsg.c,v 1.16 2009/10/27 23:59:49 deraadt Exp $	*/
/*	$NetBSD: ttymsg.c,v 1.3 1994/11/17 07:17:55 jtc Exp $	*/

/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/stat.h>
#include <sys/uio.h>
#include <signal.h>
#include <fcntl.h>
#include <dirent.h>
#include <errno.h>
#include <paths.h>
#include <unistd.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <err.h>

char *ttymsg(struct iovec *, int, char *, int);

/*
 * Display the contents of a uio structure on a terminal.  Used by wall(1)
 * and talkd(8).  Forks and finishes in child if write would block,
 * waiting up to tmout seconds.  Returns pointer to error string on unexpected
 * error; string is not newline-terminated.  Various "normal" errors are
 * ignored (exclusive-use, lack of permission, etc.).
 */
char *
ttymsg(iov, iovcnt, line, tmout)
	struct iovec *iov;
	int iovcnt;
	char *line;
	int tmout;
{
	static char device[MAXNAMLEN] = _PATH_DEV;
	static char errbuf[1024];
	int cnt, fd, left, wret;
	struct iovec localiov[6];
	int forked = 0;
	struct stat st;
	sigset_t mask;

	if (iovcnt > sizeof(localiov) / sizeof(localiov[0]))
		return ("too many iov's (change code in wall/ttymsg.c)");

	/*
	 * Ignore lines that start with "ftp" or "uucp".
	 */
	if ((strncmp(line, "ftp", 3) == 0) ||
	    (strncmp(line, "uucp", 4) == 0))
		return (NULL);

	(void) strlcpy(device + sizeof(_PATH_DEV) - 1, line,
	    sizeof(device) - (sizeof(_PATH_DEV) - 1));
	if (strchr(device + sizeof(_PATH_DEV) - 1, '/')) {
		/* A slash is an attempt to break security... */
		(void) snprintf(errbuf, sizeof(errbuf), "'/' in \"%s\"",
		    device);
		return (errbuf);
	}

	if (getuid()) {
		if (stat(device, &st) < 0)
			return (NULL);
		if ((st.st_mode & S_IWGRP) == 0)
			return (NULL);
	}

	/*
	 * open will fail on slip lines or exclusive-use lines
	 * if not running as root; not an error.
	 */
	if ((fd = open(device, O_WRONLY|O_NONBLOCK, 0)) < 0) {
		if (errno == EBUSY || errno == EACCES)
			return (NULL);
		(void) snprintf(errbuf, sizeof(errbuf),
		    "%s: %s", device, strerror(errno));
		return (errbuf);
	}

	for (cnt = left = 0; cnt < iovcnt; ++cnt)
		left += iov[cnt].iov_len;

	for (;;) {
		wret = writev(fd, iov, iovcnt);
		if (wret >= left)
			break;
		if (wret >= 0) {
			left -= wret;
			if (iov != localiov) {
				bcopy(iov, localiov,
				    iovcnt * sizeof(struct iovec));
				iov = localiov;
			}
			for (cnt = 0; wret >= iov->iov_len; ++cnt) {
				wret -= iov->iov_len;
				++iov;
				--iovcnt;
			}
			if (wret) {
				char *base = iov->iov_base;

				iov->iov_base = base + wret;
				iov->iov_len -= wret;
			}
			continue;
		}
		if (errno == EWOULDBLOCK) {
			int off = 0;
			pid_t cpid;

			if (forked) {
				(void) close(fd);
				_exit(1);
			}
			cpid = fork();
			if (cpid < 0) {
				(void) snprintf(errbuf, sizeof(errbuf),
				    "fork: %s", strerror(errno));
				(void) close(fd);
				return (errbuf);
			}
			if (cpid) {	/* parent */
				(void) close(fd);
				return (NULL);
			}

			if (pledge("stdio", NULL) == -1)
				err(1, "pledge");

			forked++;
			/* wait at most tmout seconds */
			(void) signal(SIGALRM, SIG_DFL);
			(void) signal(SIGTERM, SIG_DFL); /* XXX */
			(void) sigemptyset(&mask);
			(void) sigprocmask(SIG_SETMASK, &mask, NULL);
			(void) alarm((u_int)tmout);
			(void) fcntl(fd, O_NONBLOCK, &off);
			continue;
		}
		/*
		 * We get ENODEV on a slip line if we're running as root,
		 * and EIO if the line just went away.
		 */
		if (errno == ENODEV || errno == EIO)
			break;
		(void) close(fd);
		if (forked)
			_exit(1);
		(void) snprintf(errbuf, sizeof(errbuf),
		    "%s: %s", device, strerror(errno));
		return (errbuf);
	}

	(void) close(fd);
	if (forked)
		_exit(0);
	return (NULL);
}
@


1.16
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.15 2004/09/14 23:01:31 deraadt Exp $	*/
d34 1
d45 1
a45 1
#include <sys/stat.h>
d155 4
@


1.15
log
@arithmetic on void * not permitted
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.14 2003/07/31 18:21:42 avsm Exp $	*/
a31 7

#ifndef lint
#if 0
static const char sccsid[] = "@@(#)ttymsg.c	8.2 (Berkeley) 11/16/93";
#endif
static const char rcsid[] = "$OpenBSD: ttymsg.c,v 1.14 2003/07/31 18:21:42 avsm Exp $";
#endif /* not lint */
@


1.14
log
@no longer used by syslogd
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.13 2003/06/26 21:59:10 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: ttymsg.c,v 1.13 2003/06/26 21:59:10 deraadt Exp $";
d135 3
a137 1
				iov->iov_base += wret;
@


1.13
log
@more proto fixes
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.12 2003/06/03 02:56:22 millert Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: ttymsg.c,v 1.12 2003/06/03 02:56:22 millert Exp $";
d56 2
a57 2
 * Display the contents of a uio structure on a terminal.  Used by wall(1),
 * syslogd(8), and talkd(8).  Forks and finishes in child if write would block,
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.11 2003/04/02 20:07:49 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: ttymsg.c,v 1.11 2003/04/02 20:07:49 deraadt Exp $";
d52 2
@


1.11
log
@strlcpy; millert ok
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.10 2002/05/26 09:27:11 deraadt Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: ttymsg.c,v 1.10 2002/05/26 09:27:11 deraadt Exp $";
@


1.10
log
@pid_t cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.9 2001/11/19 19:02:17 mpech Exp $	*/
d41 1
a41 1
static const char rcsid[] = "$OpenBSD: ttymsg.c,v 1.9 2001/11/19 19:02:17 mpech Exp $";
d85 2
a86 2
	if ((strncmp(line, "ftp", 3) == 0)
	    || (strncmp(line, "uucp", 4) == 0))
d89 2
a90 1
	(void) strcpy(device + sizeof(_PATH_DEV) - 1, line);
@


1.9
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.8 2001/09/04 23:44:19 millert Exp $	*/
d41 1
a41 1
static const char rcsid[] = "$OpenBSD: ttymsg.c,v 1.8 2001/09/04 23:44:19 millert Exp $";
d142 2
a143 1
			int cpid, off = 0;
@


1.8
log
@Add a const to shut up -Wall
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.7 2001/09/04 23:35:59 millert Exp $	*/
d41 1
a41 1
static const char rcsid[] = "$OpenBSD: ttymsg.c,v 1.7 2001/09/04 23:35:59 millert Exp $";
d73 1
a73 1
	register int cnt, fd, left, wret;
@


1.7
log
@Replace the deprecated BSD sigsetmask/sigblock/sigpause functions with their POSIX counterparts.
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.6 1998/11/18 16:47:01 deraadt Exp $	*/
d39 1
a39 1
static char sccsid[] = "@@(#)ttymsg.c	8.2 (Berkeley) 11/16/93";
d41 1
a41 1
static char rcsid[] = "$OpenBSD: ttymsg.c,v 1.6 1998/11/18 16:47:01 deraadt Exp $";
@


1.6
log
@simply honour S_IWGRP
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.5 1998/11/18 02:57:22 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: ttymsg.c,v 1.5 1998/11/18 02:57:22 deraadt Exp $";
d77 1
d163 2
a164 1
			(void) sigsetmask(0);
@


1.5
log
@do S_IWGRP checking just like write(1)
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.4 1998/11/18 01:03:16 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: ttymsg.c,v 1.4 1998/11/18 01:03:16 deraadt Exp $";
d96 6
a101 6
	if (stat(device, &st) < 0)
		return (NULL);
	if ((st.st_mode & S_IWGRP) == 0)
		return (NULL);

	seteuid(geteuid());
d108 1
a108 2
		if (errno == EBUSY || errno == EACCES) {
			seteuid(getuid());
a109 2
		}
		seteuid(getuid());
a113 1
	seteuid(getuid());
@


1.4
log
@move to euid for tty opens; based on something from form
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.3 1996/10/25 06:06:30 downsj Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: ttymsg.c,v 1.3 1996/10/25 06:06:30 downsj Exp $";
d76 1
d95 5
@


1.3
log
@slightly smarter
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.2 1996/06/26 05:42:47 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: ttymsg.c,v 1.2 1996/06/26 05:42:47 deraadt Exp $";
d55 1
d95 2
d102 2
a103 1
		if (errno == EBUSY || errno == EACCES)
d105 2
d111 1
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: ttymsg.c,v 1.3 1994/11/17 07:17:55 jtc Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: ttymsg.c,v 1.3 1994/11/17 07:17:55 jtc Exp $";
d78 7
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: ttymsg.c,v 1.3 1994/11/17 07:17:55 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
