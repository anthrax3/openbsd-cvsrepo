head	1.15;
access;
symbols
	OPENBSD_6_1:1.15.0.12
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.8
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.4
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.14.0.4
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.13.0.8
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.4
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.2
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.12.0.6
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.4
	OPENBSD_5_0:1.12.0.2
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.11.0.6
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.4
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.20
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.16
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.14
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.12
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.10
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.8
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.6
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.4
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.8.0.4
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.14
	OPENBSD_2_8:1.3.0.12
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.10
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.8
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.6
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.4
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2015.01.16.06.40.14;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	Uu5nFG3wCl0LACBb;

1.14
date	2014.07.04.05.58.31;	author guenther;	state Exp;
branches;
next	1.13;
commitid	vhXZZxMGVTWiFaF3;

1.13
date	2012.12.18.21.28.45;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2011.04.10.03.20.59;	author guenther;	state Exp;
branches;
next	1.11;

1.11
date	2009.10.27.23.59.49;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2005.04.11.07.04.47;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2004.11.18.15.10.24;	author markus;	state Exp;
branches;
next	1.8;

1.8
date	2004.01.08.18.14.51;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.11.26.00.31.27;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.03.02.56.22;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.19.19.02.17;	author mpech;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.14.06.55.04;	author angelos;	state Exp;
branches;
next	1.3;

1.3
date	98.01.16.17.50.43;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.42.43;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.50;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.50;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@/*	$OpenBSD: proc_compare.c,v 1.14 2014/07/04 05:58:31 guenther Exp $	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/param.h>	/* MAXCOMLEN */
#include <sys/proc.h>
#include <sys/sysctl.h>
#include <sys/time.h>

#include "extern.h"

/*
 * Returns 1 if p2 is "better" than p1
 *
 * The algorithm for picking the "interesting" process is thus:
 *
 *	1) Only foreground processes are eligible - implied.
 *	2) Runnable processes are favored over anything else.  The runner
 *	   with the highest cpu utilization is picked (p_estcpu).  Ties are
 *	   broken by picking the highest pid.
 *	3) The sleeper with the shortest sleep time is next.  With ties,
 *	   we pick out just "short-term" sleepers (P_SINTR == 0).
 *	4) Further ties are broken by picking the highest pid.
 *
 * If you change this, be sure to consider making the change in the kernel
 * too (^T in kern/tty.c).
 *
 * TODO - consider whether pctcpu should be used.
 */

#define ISRUN(p)	(((p)->p_stat == SRUN) || ((p)->p_stat == SIDL) || \
			 ((p)->p_stat == SONPROC))
#define TESTAB(a, b)    ((a)<<1 | (b))
#define ONLYA   2
#define ONLYB   1
#define BOTH    3

int
proc_compare(const struct kinfo_proc *p1, const struct kinfo_proc *p2)
{
	if (p1 == NULL)
		return (1);
	/*
	 * see if at least one of them is runnable
	 */
	switch (TESTAB(ISRUN(p1), ISRUN(p2))) {
	case ONLYA:
		return (0);
	case ONLYB:
		return (1);
	case BOTH:
		/*
		 * tie - favor one with highest recent cpu utilization
		 */
		if (p2->p_estcpu > p1->p_estcpu)
			return (1);
		if (p1->p_estcpu > p2->p_estcpu)
			return (0);
		return (p2->p_pid > p1->p_pid);	/* tie - return highest pid */
	}
	/*
	 * weed out zombies
	 */
	switch (TESTAB(p1->p_stat == SDEAD, p2->p_stat == SDEAD)) {
	case ONLYA:
		return (1);
	case ONLYB:
		return (0);
	case BOTH:
		return (p2->p_pid > p1->p_pid); /* tie - return highest pid */
	}
	/*
	 * pick the one with the smallest sleep time
	 */
	if (p2->p_slptime > p1->p_slptime)
		return (0);
	if (p1->p_slptime > p2->p_slptime)
		return (1);
	/*
	 * favor one sleeping in a non-interruptible sleep
	 */
	if (p1->p_flag & P_SINTR && (p2->p_flag & P_SINTR) == 0)
		return (1);
	if (p2->p_flag & P_SINTR && (p1->p_flag & P_SINTR) == 0)
		return (0);
	return (p2->p_pid > p1->p_pid);		/* tie - return highest pid */
}
@


1.14
log
@Track whether a process is a zombie or not yet fully built via flags
PS_{ZOMBIE,EMBRYO} on the process instead of peeking into the process's
thread data.  This eliminates the need for the thread-level SDEAD state.

Change kvm_getprocs() (both the sysctl() and kvm backends) to report the
"most active" scheduler state for the process's threads.

tweaks kettenis@@
feedback and ok matthew@@
@
text
@d1 1
a1 1
/*	$OpenBSD: proc_compare.c,v 1.13 2012/12/18 21:28:45 millert Exp $	*/
d32 1
a32 1
#include <sys/param.h>
@


1.13
log
@We no longer use struct eproc for kinfo_proc in sysctl.h so there
is no direct need for sys/proc.h or sys/resource.h.  Some consumers
of kinfo_proc need these for the proc flags and rlimit defines like
RLIM_INF so add the appropriate includes to them.
OK deraadt@@ sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: proc_compare.c,v 1.12 2011/04/10 03:20:59 guenther Exp $	*/
d91 1
a91 1
	switch (TESTAB(p1->p_stat == SZOMB, p2->p_stat == SZOMB)) {
@


1.12
log
@Switch back from KERN_PROC2/kinfo_proc2 to KERN_PROC/kinfo_proc now
that we've got name we want for the API we want

"ZAP!" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: proc_compare.c,v 1.11 2009/10/27 23:59:49 deraadt Exp $	*/
d33 2
a35 1
#include <sys/sysctl.h>
@


1.11
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: proc_compare.c,v 1.10 2005/04/11 07:04:47 deraadt Exp $	*/
d65 1
a65 1
proc_compare(const struct kinfo_proc2 *p1, const struct kinfo_proc2 *p2)
@


1.10
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: proc_compare.c,v 1.9 2004/11/18 15:10:24 markus Exp $	*/
a30 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)proc_compare.c	8.2 (Berkeley) 9/23/93";
#else
static char *rcsid = "$OpenBSD: proc_compare.c,v 1.9 2004/11/18 15:10:24 markus Exp $";
#endif
#endif /* not lint */
@


1.9
log
@handle SONPROC; ok aaron, deraadt, krw
@
text
@d1 1
a1 1
/*	$OpenBSD: proc_compare.c,v 1.8 2004/01/08 18:14:51 millert Exp $	*/
d36 1
a36 1
static char *rcsid = "$OpenBSD: proc_compare.c,v 1.8 2004/01/08 18:14:51 millert Exp $";
d96 1
a96 1
 	 * weed out zombies
@


1.8
log
@Convert to kinfo_proc2; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: proc_compare.c,v 1.7 2003/11/26 00:31:27 millert Exp $	*/
d36 1
a36 1
static char *rcsid = "$OpenBSD: proc_compare.c,v 1.7 2003/11/26 00:31:27 millert Exp $";
d65 2
a66 1
#define ISRUN(p)	(((p)->p_stat == SRUN) || ((p)->p_stat == SIDL))
@


1.7
log
@Minor cleanup.  Remove gratuitous use of __CONCAT that was needed
to avoid SCCS braindamage.  Also use ANSI function headers while
we are here.  Based on a diff from espie@@
@
text
@d1 1
a1 1
/*	$OpenBSD: proc_compare.c,v 1.6 2003/06/03 02:56:22 millert Exp $	*/
d36 1
a36 1
static char *rcsid = "$OpenBSD: proc_compare.c,v 1.6 2003/06/03 02:56:22 millert Exp $";
d42 1
a42 1
#include <sys/proc.h>
d72 1
a72 1
proc_compare(struct proc *p1, struct proc *p2)
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: proc_compare.c,v 1.5 2001/11/19 19:02:17 mpech Exp $	*/
d36 1
a36 1
static char *rcsid = "$OpenBSD: proc_compare.c,v 1.5 2001/11/19 19:02:17 mpech Exp $";
d72 1
a72 2
proc_compare(p1, p2)
	struct proc *p1, *p2;
@


1.5
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: proc_compare.c,v 1.4 2001/05/14 06:55:04 angelos Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d36 1
a36 1
static char *rcsid = "$OpenBSD: proc_compare.c,v 1.4 2001/05/14 06:55:04 angelos Exp $";
@


1.4
log
@Remove ugly empty line.
@
text
@d1 1
a1 1
/*	$OpenBSD: proc_compare.c,v 1.3 1998/01/16 17:50:43 millert Exp $	*/
d40 1
a40 1
static char *rcsid = "$OpenBSD: proc_compare.c,v 1.3 1998/01/16 17:50:43 millert Exp $";
d77 1
a77 1
	register struct proc *p1, *p2;
@


1.3
log
@Add rcsid tags.
If program has set argv[0] or argv[0][0] to NUL, print p->p_comm
instead.  Based on patch from Paul Janzen <pjanzen@@foatdi.harvard.edu>
@
text
@d1 1
a1 1
/*	$OpenBSD: proc_compare.c,v 1.2 1996/06/26 05:42:43 deraadt Exp $	*/
d40 1
a40 1
static char *rcsid = "$OpenBSD$";
a78 1

@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
d39 3
@


1.1
log
@Initial revision
@
text
@d1 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
