head	1.11;
access;
symbols
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	OpenCVS_0_1:1.1.1.1
	OpenCVS:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2005.04.06.22.08.53;	author joris;	state dead;
branches;
next	1.10;

1.10
date	2005.03.10.15.37.08;	author jfb;	state Exp;
branches;
next	1.9;

1.9
date	2005.02.22.22.33.01;	author jfb;	state Exp;
branches;
next	1.8;

1.8
date	2004.12.08.18.52.53;	author xsa;	state Exp;
branches;
next	1.7;

1.7
date	2004.12.08.18.07.07;	author xsa;	state Exp;
branches;
next	1.6;

1.6
date	2004.12.06.18.57.10;	author xsa;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.25.18.30.12;	author jfb;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.02.16.21.07;	author jfb;	state Exp;
branches;
next	1.3;

1.3
date	2004.07.29.15.33.05;	author jfb;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.25.03.29.36;	author jfb;	state Exp;
branches;
next	1.1;

1.1
date	2004.07.13.22.02.40;	author jfb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.07.13.22.02.40;	author jfb;	state Exp;
branches;
next	;


desc
@@


1.11
log
@

remove dead and unused code

ok jfb@@
@
text
@#	$OpenBSD: Makefile,v 1.10 2005/03/10 15:37:08 jfb Exp $

.PATH:	${.CURDIR}/..

PROG=	cvsd
SRCS=	cvsd.c buf.c conf.y log.c msg.c repo.c sock.c

BINDIR=	/usr/sbin
MAN=	cvsd.8 cvsd.conf.5

CFLAGS+= -Wall -I${.CURDIR}/..
CFLAGS+= -Wstrict-prototypes -Wmissing-prototypes
CFLAGS+= -Wmissing-declarations
CFLAGS+= -Wshadow -Wpointer-arith -Wcast-qual
CFLAGS+= -Wsign-compare
CFLAGS+= -DCVSD
YFLAGS=

.include <bsd.prog.mk>
@


1.10
log
@switch keyword (Id -> OpenBSD) and prettier alignment
@
text
@d1 1
a1 1
#	$OpenBSD$
@


1.9
log
@Split the cvs daemon into two different processes: cvsd and cvsd-child.
The cvsd process only takes care of managing children and repository
locks, while the child handles all requests made to access or modify
the contents of the repository.
This will allow us to take advantage of randomized library remapping
and new propolice cookies, and minimizes the amount of code that can
run with elevated privileges.  Still work in progress.

suggested by deraadt@@
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.8 2004/12/08 18:52:53 xsa Exp $
d5 2
a6 2
PROG=cvsd
SRCS= cvsd.c buf.c conf.y log.c msg.c repo.c sock.c
d8 2
a9 2
BINDIR=/usr/sbin
MAN=cvsd.8 cvsd.conf.5
@


1.8
log
@add YFLAGS; ok jfb@@.
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.7 2004/12/08 18:07:07 xsa Exp $
d6 1
a6 1
SRCS= cvsd.c buf.c conf.y log.c msg.c rcs.c rcsnum.c session.c sock.c
@


1.7
log
@add more CFLAGS; ok jfb@@.
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.6 2004/12/06 18:57:10 xsa Exp $
d17 1
@


1.6
log
@make cvsd compile; ok jfb@@.
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.5 2004/11/25 18:30:12 jfb Exp $
d13 2
@


1.5
log
@Handle CVSD_SET_MODDIR, add session allocation and some minor cleanup
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.4 2004/08/02 16:21:07 jfb Exp $
d11 1
a11 1
CFLAGS+= -Wall
@


1.4
log
@Compile the RCS code into the cvs daemon for later use
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.3 2004/07/29 15:33:05 jfb Exp $
d6 1
a6 1
SRCS= cvsd.c buf.c conf.y log.c msg.c rcs.c rcsnum.c sock.c
@


1.3
log
@Define 'CVS' or 'CVSD' depending on which program we are compiling and
add a bunch of warnings for cvs
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.2 2004/07/25 03:29:36 jfb Exp $
d6 1
a6 1
SRCS= cvsd.c conf.y log.c msg.c sock.c
@


1.2
log
@* rework on the child API, still needs more functionality
* move the ACL parsing code into the more general conf.y, which handles
  parsing of the whole configuration file
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.1.1.1 2004/07/13 22:02:40 jfb Exp $
d14 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $Id: Makefile,v 1.5 2004/06/30 00:42:31 jfb Exp $
d5 3
d9 1
a9 2
PROG=cvsd
MAN=cvsd.8
d11 3
a13 1
SRCS= cvsd.c aclparse.y log.c msg.c sock.c
@


1.1.1.1
log
@* initial import from the cvs-tools module
@
text
@@
