head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.34
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.30
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.32
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.24
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.28
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.26
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.22
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.20
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.18
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.16
	OPENBSD_5_0:1.1.0.14
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.12
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.10
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.8
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.1
date	2008.06.21.15.39.15;	author joris;	state Exp;
branches;
next	;


desc
@@


1.1
log
@add a hash table mechanism based upon hcreate(3) but one that allows
us to maintain multiple hash tables concurrently.

immediatly start using it to keep track of what directories
we have already created and what CVS dirs we already created so
we do not recreate them when we do not need to.

we will be switching more internals to use this soon.
rejoice for cheaper lookups.

ok tobias@@
@
text
@/*	$OpenBSD$	*/
/*
 * Copyright (c) 2008 Joris Vink <joris@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/*
 * This is based upon:
 *	src/lib/libc/stdlib/hcreate.c
 */

#ifndef _H_HASH
#define _H_HASH

struct hash_data {
	char	*h_key;
	void	*h_data;
};

struct hash_table_entry {
	SLIST_ENTRY(hash_table_entry)	h_list;
	struct hash_data		h_data;
};

SLIST_HEAD(hash_head, hash_table_entry);

struct hash_table {
	struct hash_head	*h_table;
	size_t			h_size;
};

#define MIN_HASH_SIZE	(1 << 4)
#define MAX_HASH_SIZE	((size_t)1 << (sizeof(size_t) * 8 - 1 - 5))

void	hash_table_init(struct hash_table *, size_t);
void	hash_table_enter(struct hash_table *, struct hash_data *);
struct hash_data *hash_table_find(struct hash_table *, const char *, size_t);

u_int32_t hash4(const char *, size_t);

extern struct hash_table created_directories;
extern struct hash_table created_cvs_directories;

#endif
@
