head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2005.03.09.17.32.54;	author jfb;	state dead;
branches;
next	1.6;

1.6
date	2004.11.15.04.22.17;	author jfb;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.12.23.27.02;	author jfb;	state Exp;
branches;
next	1.4;

1.4
date	2004.08.12.18.38.42;	author jfb;	state Exp;
branches;
next	1.3;

1.3
date	2004.07.31.01.59.17;	author jfb;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.15.00.54.01;	author jfb;	state Exp;
branches;
next	1.1;

1.1
date	2004.07.14.03.22.11;	author jfb;	state Exp;
branches;
next	;


desc
@@


1.7
log
@unmaintained cruft, get rid of it instead of spreading bad info

ok xsa@@
@
text
@OpenCVS 0.2 TODO

Top priority: missing commands

Missing commands (client mode only for now)
================
Implementing the missing commands is mostly a job of copying the code from
the working commands and changing some of the requests to be sent.
Put your name next to it if you are working on a particular command.

Missing commands:
	- add
	- admin
	- annotate
	- commit (jfb)
	- history?
	- log (jfb)
	- release
	- remove
	- status
	- tag
	- the 'r' commands (rdiff, rlog, rtag)

Merging the common code
=======================
It is becoming quite clear that almost all of the functions share about 90%
of the code that is in cvs_<command>_file(), so we should probably look at
a way to simplify the function by automating certain parts.

Multiple server support
=======================
This is close to working but we need to put something like pre- and post-
recursion handlers for cvs_file_examine() so we can send one command
per root connection instead of one global command at the end.

Date handling
=============
A lot of commands must handle date specs in a whole bunch of different
formats (through the -D argument).  I assume we will need a good
chunk of code to support all these formats.

cvsd protocol
=============
Our version of 'cvs server' will not actually perform most of the operations
but it will instead dispatch those to the cvs daemon through a connection
made on a local socket.  The cvs daemon will then be able to see if the
operation passes through the ACL and perform any modifications to the
repository.  The protocol to talk between cvs and the daemon is not yet
finished.

Entries file caching
====================
Update:
Caching all the entries on /usr/src ate around 22MB of memory so this is
obviously not an option.  We have two choices: either we suffer the loss
of performance and reopen the file every time we have to make a modification
to it, or we change the way the file hierarchy is loaded and load subparts of
the tree only when needed instead of doing it all at the beginning.

----

Currently, adding entries in an Entries file involves opening that file,
adding the entry and closing the file.  This means that on every new entry,
the file is reparsed and rewritten to disk.  We should add some kind of
caching system with reference counts on the Entries files so we don't really
close them but keep them opened for future requests to avoid all the disk I/O.
@


1.6
log
@More stuff to do
@
text
@@


1.5
log
@update
@
text
@d17 1
a17 1
	- log
d22 1
a22 1
	- the 'r' commands (rtag, 
d24 5
@


1.4
log
@Update
@
text
@d3 3
a5 1
Missing commands
d9 15
d31 14
a44 4
Client-daemon protocol
======================
I have started working on the code for this but it is far from ready.  Please
contact me if you want to work on that part.
d48 9
@


1.3
log
@Update the TODO file
@
text
@a7 7
Specific file handling
======================
Right now, commands are only working when not specifying files on the
command line.  cvs_file_getspec() needs to be implemented to load only
a specific list of files along with the directory hierarchy for those
files.

d16 10
a25 2
I have not yet given too much thought to this.  Any suggestions would be
welcome.
@


1.2
log
@* remove the RCS escaping line, it is now fixed
* add another one regarding rcs_splitpath()
@
text
@d1 24
a24 6
* generate the proper diff arguments to output with the diff
* cleanup the client/proto mess
* find a way to make it easier to connect when acting as client
* prevent reconnection when the cvsroot is the same as the previous one
* make splitpath() require only one buffer that is MAXPATHLEN and the file
  should be a char ** that points to the appropriate place in the dir buffer
@


1.1
log
@some stuff to do
@
text
@d5 2
a6 1
* escape the data that we store in delta texts of RCS files (BAD BAD)
@

