head	1.4;
access;
symbols
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OpenCVS_0_1:1.1.1.1
	OpenCVS:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2005.04.06.22.08.53;	author joris;	state dead;
branches;
next	1.3;

1.3
date	2004.12.07.17.10.56;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2004.07.25.03.31.25;	author jfb;	state Exp;
branches;
next	1.1;

1.1
date	2004.07.13.22.02.40;	author jfb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2004.07.13.22.02.40;	author jfb;	state Exp;
branches;
next	;


desc
@@


1.4
log
@

remove dead and unused code

ok jfb@@
@
text
@/*	$OpenBSD: sock.h,v 1.3 2004/12/07 17:10:56 tedu Exp $	*/
/*
 * Copyright (c) 2004 Jean-Francois Brousseau <jfb@@openbsd.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL  DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef SOCK_H
#define SOCK_H

#include <sys/types.h>
#include <sys/stat.h>
#include <sys/socket.h>

#include <err.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <unistd.h>
#include <string.h>

#include "cvs.h"


#define CVSD_SOCK_PATH  "/var/run/cvsd.sock"

#define CVSD_SOCK_PERMS (S_IRWXU | S_IRWXG)


extern char *cvsd_sock_path;
extern int   cvsd_sock;

/* daemon api */
int  cvsd_sock_open   (void);
void cvsd_sock_close  (void);
int  cvsd_sock_accept (int);

/* client api */
int  cvs_sock_connect    (const char *);
void cvs_sock_disconnect (void);

#endif /* SOCK_H */
@


1.3
log
@less whitespace, more pretty.  ok jfb
@
text
@d1 1
a1 1
/*	$OpenBSD: sock.h,v 1.2 2004/07/25 03:31:25 jfb Exp $	*/
@


1.2
log
@* when calling cvsd_sock_open(), close the socket if it is already
  opened, before reopening it
* remove the cvsd_sock_loop() call, it was a bad idea
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
a4 1
 * All rights reserved. 
d6 3
a8 3
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met: 
d10 2
a11 2
 * 1. Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer. 
d13 1
a13 1
 *    derived from this software without specific prior written permission. 
d24 1
a24 1
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
@


1.1
log
@Initial revision
@
text
@d51 1
a51 3

extern volatile sig_atomic_t cvs_sock_doloop;

d56 1
a56 2
void cvsd_sock_loop   (void);
int  cvsd_sock_hdl    (int);
@


1.1.1.1
log
@* initial import from the cvs-tools module
@
text
@@
