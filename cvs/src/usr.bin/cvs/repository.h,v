head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.28
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.26
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.22
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.24
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.16
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.20
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.18
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.14
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.12
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.10
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.8
	OPENBSD_5_0:1.6.0.6
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.4
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.4
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.6
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.2
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.6
date	2010.07.23.08.31.19;	author ray;	state Exp;
branches;
next	1.5;

1.5
date	2009.02.21.13.44.18;	author joris;	state Exp;
branches;
next	1.4;

1.4
date	2008.03.09.03.14.52;	author joris;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.01.17.47.47;	author niallo;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.27.15.14.27;	author joris;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.27.03.30.31;	author joris;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Rename a bunch of variables and functions, removing the cvs_/rcs_
prefixes to reduce differences between cvs and rcs files.

"yes!" nicm
@
text
@/*
 * Copyright (c) 2006 Joris Vink <joris@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef REPO_H
#define REPO_H

#define CVS_LOCK		"#cvs.lock"
#define CVS_JUNK		"#cvs."
#define CVS_LOCK_SLEEP		30
#define CVS_LOCK_TRIES		5

#define REPOSITORY_DODIRS	0x01
#define REPOSITORY_IS_ATTIC	0x02

extern struct wklhead repo_locks;

void	cvs_repository_unlock(const char *);
void	cvs_repository_lock(const char *, int);
void	cvs_repository_getdir(const char *, const char *,
		struct cvs_flisthead *, struct cvs_flisthead *, int);

#endif
@


1.5
log
@use file_flags for 2 more reasons:
- mark a file as being inside the Attic/
- mark a file as existing in the working copy
  (both in local and remote mode)

this way we no longer will need to check if cf->fd == -1 and
think about wether or not we are in local or remote mode.
@
text
@d28 1
a28 1
extern struct cvs_wklhead repo_locks;
@


1.4
log
@proper repository locking:
- all read operations now look for a lock, and wait if present but never
  try to lock the tree themselfs anymore.
- all write operations lock the tree where needed.
- commit locks all relevant directories before even attempting to start.
@
text
@d25 3
@


1.3
log
@add support for local and remote branch checkout.  for example,
cvs co -rOPENBSD_3_0 works now.
along the way, simplify and rationalise code and fix a few nits.

ok joris@@ xsa@@ ray@@
@
text
@d28 1
a28 1
void	cvs_repository_lock(const char *);
@


1.2
log
@allow commands to respect the -l flag, if the -l flag is
specified certain commands will not recurse into directories.

at the same time introduce a method of specifying wether or not
a command should look in the repository for files.
@
text
@d21 1
@


1.1
log
@commit the new opencvs code, i have been hacking on
this for the past 2 weeks now and it should go in at
the start of the hackathon so others can help out.

this code is a lot safer, smarter, faster and best of
all it is actually doing what it is suppose to do!

basic checkout, update, status, diff and commit are
working in local mode only.
there is no support for any remote setups now.
@
text
@d29 1
a29 1
		struct cvs_flisthead *, struct cvs_flisthead *);
@

