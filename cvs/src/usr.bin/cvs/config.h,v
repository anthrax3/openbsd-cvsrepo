head	1.10;
access;
symbols
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.36
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.32
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.34
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.26
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.30
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.28
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.24
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.22
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.20
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.18
	OPENBSD_5_0:1.10.0.16
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.14
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.12
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.8
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.10
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.6
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.4
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.2
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.1.0.6
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.4
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.2
	OPENBSD_4_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2008.03.02.11.58.45;	author joris;	state Exp;
branches;
next	1.9;

1.9
date	2008.02.06.22.43.22;	author joris;	state Exp;
branches;
next	1.8;

1.8
date	2008.02.04.22.36.40;	author joris;	state Exp;
branches;
next	1.7;

1.7
date	2008.02.04.19.08.32;	author joris;	state Exp;
branches;
next	1.6;

1.6
date	2008.02.03.23.34.41;	author joris;	state Exp;
branches;
next	1.5;

1.5
date	2008.02.03.22.50.28;	author joris;	state Exp;
branches;
next	1.4;

1.4
date	2008.02.03.17.20.14;	author joris;	state Exp;
branches;
next	1.3;

1.3
date	2008.02.02.19.32.28;	author joris;	state Exp;
branches;
next	1.2;

1.2
date	2008.02.01.18.10.26;	author joris;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.27.18.04.46;	author joris;	state Exp;
branches;
next	;


desc
@@


1.10
log
@allow our parsing functions to stop parsing a config file at
any given time.

will come in handy for CVSROOT/loginfo and CVSROOT/commitinfo
@
text
@/*	$OpenBSD: config.h,v 1.9 2008/02/06 22:43:22 joris Exp $	*/
/*
 * Copyright (c) 2006 Joris Vink <joris@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef CONFIG_H
#define CONFIG_H

void cvs_modules_list(void);

void cvs_read_config(char *name, int (*cb)(char *, int));

void cvs_parse_configfile(void);
void cvs_parse_modules(void);

int config_parse_line(char *, int);
int modules_parse_line(char *, int);

#include <sys/queue.h>
#include "file.h"

/* module stuff */

#define MODULE_ALIAS		0x01
#define MODULE_TARGETDIR	0x02
#define MODULE_NORECURSE	0x04
#define MODULE_RUN_ON_COMMIT	0x08
#define MODULE_RUN_ON_CHECKOUT	0x10

struct module_checkout {
	char			*mc_name;
	char			*mc_prog;

	int			 mc_flags;
	int			 mc_canfree;

	struct cvs_flisthead	 mc_modules;
	struct cvs_flisthead	 mc_ignores;
};

struct module_info {
	char				*mi_name;
	char				*mi_prog;
	char				*mi_str;
	int				 mi_flags;

	struct cvs_flisthead		 mi_modules;
	struct cvs_flisthead		 mi_ignores;

	TAILQ_ENTRY(module_info)	 m_list;
};

struct module_checkout *cvs_module_lookup(char *);
#endif
@


1.9
log
@lets do co -c as well (list available modules) and do it in 1/6th of the
lines GNU cvs does it in, without actually fucking up on bad lines,
like gnucvs.

ok tobias@@
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.8 2008/02/04 22:36:40 joris Exp $	*/
d23 1
a23 1
void cvs_read_config(char *name, void (*cb)(char *, int));
d28 2
a29 2
void config_parse_line(char *, int);
void modules_parse_line(char *, int);
@


1.8
log
@CVSROOT/modules:

correct -i and -o usage

-i runs the program specified on commit
-o runs the program specified on checkout
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.7 2008/02/04 19:08:32 joris Exp $	*/
d21 2
d56 1
@


1.7
log
@more CVSROOT/modules stuff:

- support for -i flag:
	Run "prog" on "cvs commit" from top-level of module.
- fix some memory leaks in modules.c
- pass the line number from cvs_read_config() towards the callbacks
  so its easier to print out where it's going wrong, if it ever does.

OK tobias@@
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.6 2008/02/03 23:34:41 joris Exp $	*/
d38 1
@


1.6
log
@shuffle some stuff around so we dont end up doing the same things
twice in cvs_module_lookup() and checkout_check_directory();

allow single files to be ignored with ! as well;
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.5 2008/02/03 22:50:28 joris Exp $	*/
d21 1
a21 1
void cvs_read_config(char *name, void (*cb)(char *));
d26 2
a27 2
void config_parse_line(char *);
void modules_parse_line(char *);
d41 2
d44 1
a45 1
	int			 mc_canfree;
d52 1
@


1.5
log
@more CVSROOT/module stuff:

- allow more then 1 module to be specified per definition
- respect the "!" sign which means: "hey ignore this dir when checking out"
- non alias definitions can now contain files

ok tobias@@
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.4 2008/02/03 17:20:14 joris Exp $	*/
d40 1
a40 2
	char			*mc_repo;
	char			*mc_wdir;
a49 1
	char				*mi_repository;
@


1.4
log
@better CVSROOT/module support, includes remote support and modules
that are not aliases (-a);

OK tobias@@
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.3 2008/02/02 19:32:28 joris Exp $	*/
d30 1
d37 1
d43 4
d53 3
@


1.3
log
@initial CVSROOT/modules support, only does aliases at the moment (-a).
"modules.c, hurray!" xsa@@, ok tobias@@
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.2 2008/02/01 18:10:26 joris Exp $	*/
d33 9
a41 1
char *cvs_module_lookup(char *);
d46 1
d48 1
a48 1
	TAILQ_ENTRY(module_info)	m_list;
d51 1
@


1.2
log
@introduce cvs_read_config() which will be used as a general
handler to open and read configuration files in CVSROOT/

change cvs_parse_configfile() to use cvs_read_config() instead;

ok tobias@@
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.1 2006/05/27 18:04:46 joris Exp $	*/
d21 2
d24 1
a24 1
void cvs_read_config(char *name, void (*cb)(char *));
d27 14
@


1.1
log
@basic support for CVSROOT/config - only supporting the 'tag' and
'umask' keyword right now.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d22 3
@

