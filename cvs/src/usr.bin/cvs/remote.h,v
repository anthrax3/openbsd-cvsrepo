head	1.38;
access;
symbols
	OPENBSD_6_2:1.38.0.4
	OPENBSD_6_2_BASE:1.38
	OPENBSD_6_1:1.37.0.34
	OPENBSD_6_1_BASE:1.37
	OPENBSD_6_0:1.37.0.30
	OPENBSD_6_0_BASE:1.37
	OPENBSD_5_9:1.37.0.26
	OPENBSD_5_9_BASE:1.37
	OPENBSD_5_8:1.37.0.28
	OPENBSD_5_8_BASE:1.37
	OPENBSD_5_7:1.37.0.20
	OPENBSD_5_7_BASE:1.37
	OPENBSD_5_6:1.37.0.24
	OPENBSD_5_6_BASE:1.37
	OPENBSD_5_5:1.37.0.22
	OPENBSD_5_5_BASE:1.37
	OPENBSD_5_4:1.37.0.18
	OPENBSD_5_4_BASE:1.37
	OPENBSD_5_3:1.37.0.16
	OPENBSD_5_3_BASE:1.37
	OPENBSD_5_2:1.37.0.14
	OPENBSD_5_2_BASE:1.37
	OPENBSD_5_1_BASE:1.37
	OPENBSD_5_1:1.37.0.12
	OPENBSD_5_0:1.37.0.10
	OPENBSD_5_0_BASE:1.37
	OPENBSD_4_9:1.37.0.8
	OPENBSD_4_9_BASE:1.37
	OPENBSD_4_8:1.37.0.6
	OPENBSD_4_8_BASE:1.37
	OPENBSD_4_7:1.37.0.2
	OPENBSD_4_7_BASE:1.37
	OPENBSD_4_6:1.37.0.4
	OPENBSD_4_6_BASE:1.37
	OPENBSD_4_5:1.35.0.2
	OPENBSD_4_5_BASE:1.35
	OPENBSD_4_4:1.34.0.2
	OPENBSD_4_4_BASE:1.34
	OPENBSD_4_3:1.32.0.2
	OPENBSD_4_3_BASE:1.32
	OPENBSD_4_2:1.24.0.2
	OPENBSD_4_2_BASE:1.24
	OPENBSD_4_1:1.20.0.2
	OPENBSD_4_1_BASE:1.20
	OPENBSD_4_0:1.1.0.2
	OPENBSD_4_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.38
date	2017.08.28.19.33.20;	author otto;	state Exp;
branches;
next	1.37;
commitid	pt4iCZKa4LhAa1TL;

1.37
date	2009.04.04.11.29.57;	author joris;	state Exp;
branches;
next	1.36;

1.36
date	2009.03.19.09.53.16;	author joris;	state Exp;
branches;
next	1.35;

1.35
date	2009.01.02.00.11.01;	author canacar;	state Exp;
branches;
next	1.34;

1.34
date	2008.07.08.12.54.50;	author joris;	state Exp;
branches;
next	1.33;

1.33
date	2008.06.12.07.16.14;	author joris;	state Exp;
branches;
next	1.32;

1.32
date	2008.02.27.22.34.04;	author joris;	state Exp;
branches;
next	1.31;

1.31
date	2008.02.10.14.00.41;	author joris;	state Exp;
branches;
next	1.30;

1.30
date	2008.02.03.18.18.44;	author tobias;	state Exp;
branches;
next	1.29;

1.29
date	2008.02.01.17.18.59;	author tobias;	state Exp;
branches;
next	1.28;

1.28
date	2008.01.21.16.36.46;	author tobias;	state Exp;
branches;
next	1.27;

1.27
date	2008.01.10.11.20.29;	author tobias;	state Exp;
branches;
next	1.26;

1.26
date	2007.09.22.15.57.24;	author joris;	state Exp;
branches;
next	1.25;

1.25
date	2007.08.30.11.07.18;	author joris;	state Exp;
branches;
next	1.24;

1.24
date	2007.07.03.13.22.43;	author joris;	state Exp;
branches;
next	1.23;

1.23
date	2007.06.29.12.42.05;	author xsa;	state Exp;
branches;
next	1.22;

1.22
date	2007.06.27.20.42.19;	author joris;	state Exp;
branches;
next	1.21;

1.21
date	2007.06.26.02.24.10;	author niallo;	state Exp;
branches;
next	1.20;

1.20
date	2007.01.18.16.45.52;	author joris;	state Exp;
branches;
next	1.19;

1.19
date	2007.01.17.17.54.50;	author joris;	state Exp;
branches;
next	1.18;

1.18
date	2007.01.13.15.29.34;	author joris;	state Exp;
branches;
next	1.17;

1.17
date	2007.01.03.22.28.30;	author joris;	state Exp;
branches;
next	1.16;

1.16
date	2007.01.03.19.27.28;	author joris;	state Exp;
branches;
next	1.15;

1.15
date	2006.12.19.15.12.59;	author joris;	state Exp;
branches;
next	1.14;

1.14
date	2006.12.19.14.11.21;	author xsa;	state Exp;
branches;
next	1.13;

1.13
date	2006.12.19.11.46.39;	author xsa;	state Exp;
branches;
next	1.12;

1.12
date	2006.12.15.13.12.14;	author xsa;	state Exp;
branches;
next	1.11;

1.11
date	2006.12.15.09.50.37;	author xsa;	state Exp;
branches;
next	1.10;

1.10
date	2006.12.15.08.02.53;	author xsa;	state Exp;
branches;
next	1.9;

1.9
date	2006.11.27.16.04.10;	author xsa;	state Exp;
branches;
next	1.8;

1.8
date	2006.11.14.15.39.42;	author xsa;	state Exp;
branches;
next	1.7;

1.7
date	2006.11.14.09.59.54;	author xsa;	state Exp;
branches;
next	1.6;

1.6
date	2006.11.14.09.47.52;	author xsa;	state Exp;
branches;
next	1.5;

1.5
date	2006.11.13.12.57.03;	author xsa;	state Exp;
branches;
next	1.4;

1.4
date	2006.11.09.14.00.14;	author xsa;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.09.09.24.28;	author xsa;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.31.15.23.40;	author xsa;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.07.17.37.17;	author joris;	state Exp;
branches;
next	;


desc
@@


1.38
log
@fix const related warnings; ok millert@@
@
text
@/*	$OpenBSD: remote.h,v 1.37 2009/04/04 11:29:57 joris Exp $	*/
/*
 * Copyright (c) 2006 Joris Vink <joris@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef H_REMOTE
#define H_REMOTE

struct cvs_req {
	char	name[32];
	int	supported;

	void	(*hdlr)(char *);
	int	flags;
};

struct cvs_resp {
	char	name[32];
	int	supported;

	void	(*hdlr)(char *);
	int	flags;
};

#define	REQ_NEEDED	0x01
#define REQ_NEEDDIR	0x02

#define RESP_NEEDED	0x01

extern int server_response;

#define SERVER_OK	0
#define SERVER_ERROR	1

#define CVS_SERVER_UNCHANGED		"d[o.o]b"
#define CVS_SERVER_UPTODATE		(time_t)-2
#define CVS_SERVER_QUESTIONABLE		'?'

void	cvs_client_connect_to_server(void);
void	cvs_client_disconnect(void);
void	cvs_client_send_logmsg(char *);
void	cvs_client_send_request(char *, ...)
	__attribute__((format(printf, 1, 2)));
void	cvs_client_read_response(void);
void	cvs_client_get_responses(void);

void	cvs_client_ok(char *);
void	cvs_client_error(char *);
void	cvs_client_validreq(char *);
void	cvs_client_e(char *);
void	cvs_client_m(char *);
void	cvs_client_checkedin(char *);
void	cvs_client_updated(char *);
void	cvs_client_merged(char *);
void	cvs_client_removed(char *);
void	cvs_client_remove_entry(char *);
void	cvs_client_set_static_directory(char *);
void	cvs_client_clear_static_directory(char *);
void	cvs_client_set_sticky(char *);
void	cvs_client_clear_sticky(char *);

void	cvs_client_senddir(const char *);
void	cvs_client_sendfile(struct cvs_file *);
void	cvs_client_send_files(char **, int);

void	cvs_server_root(char *);
void	cvs_server_send_response(char *, ...)
	__attribute__((format(printf, 1, 2)));
void	cvs_server_validresp(char *);
void	cvs_server_validreq(char *);
void	cvs_server_globalopt(char *);
void	cvs_server_directory(char *);
void	cvs_server_entry(char *);
void	cvs_server_modified(char *);
void	cvs_server_useunchanged(char *);
void	cvs_server_unchanged(char *);
void	cvs_server_questionable(char *);
void	cvs_server_argument(char *);
void	cvs_server_argumentx(char *);
void	cvs_server_set(char *);
void	cvs_server_static_directory(char *);
void	cvs_server_sticky(char *);
void	cvs_server_update_patches(char *);
void	cvs_server_update_entry(const char *, struct cvs_file *cf);
void	cvs_server_set_sticky(const char *, char *);
void	cvs_server_clear_sticky(char *);
void	cvs_server_exp_modules(char *);

void	cvs_server_add(char *);
void	cvs_server_import(char *);
void	cvs_server_admin(char *);
void	cvs_server_annotate(char *);
void	cvs_server_commit(char *);
void	cvs_server_checkout(char *);
void	cvs_server_diff(char *);
void	cvs_server_export(char *);
void	cvs_server_init(char *);
void	cvs_server_log(char *);
void	cvs_server_rannotate(char *);
void	cvs_server_rdiff(char *);
void	cvs_server_release(char *);
void	cvs_server_remove(char *);
void	cvs_server_rlog(char *);
void	cvs_server_rtag(char *);
void	cvs_server_status(char *);
void	cvs_server_tag(char *);
void	cvs_server_update(char *);
void	cvs_server_version(char *);

void	cvs_remote_classify_file(struct cvs_file *);
void	cvs_remote_output(char *);
char	*cvs_remote_input(void);
void	cvs_remote_receive_file(int, size_t);
void	cvs_remote_send_file(const char *, int);
void	cvs_remote_send_file_buf(char *, BUF *, mode_t);

extern int cvs_client_inlog_fd;
extern int cvs_client_outlog_fd;

extern struct cvs_req cvs_requests[];
extern struct cvs_resp cvs_responses[];

struct cvs_req *cvs_remote_get_request_info(const char *);
struct cvs_resp *cvs_remote_get_response_info(const char *);

void	cvs_validate_directory(const char *);

#endif
@


1.37
log
@properly expand modules if requested by the client,
this option is needed so gnu cvs clients can play along
properly when running checkout <module> in a remote setup.

if we do not support this, gnu cvs refuses to send us any
existing files already on disk and opencvs will consider everything
as NEEDS_CHECKOUT, instead of running an update on existing stuff.

problem noticed by fgsch@@
commited with opencvs, but please everybody else
do not use opencvs to commit yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.36 2009/03/19 09:53:16 joris Exp $	*/
d97 1
a97 1
void	cvs_server_set_sticky(const char *, const char *);
d123 1
a123 1
void	cvs_remote_output(const char *);
@


1.36
log
@properly register Questionable files using CVS/Entries server-side
in order for them to show up as "? foobar" when opencvs is in server mode.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.35 2009/01/02 00:11:01 canacar Exp $	*/
d99 1
@


1.35
log
@Add format attributes to functions that use variable arguments and
make the code -Wformat=2 clean. ok joris@@ xsa@@
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.34 2008/07/08 12:54:50 joris Exp $	*/
d47 3
a49 2
#define CVS_SERVER_UNCHANGED	"d[o.o]b"
#define CVS_SERVER_UPTODATE	(time_t)-2
@


1.34
log
@missed in last commit, to make things compile cleaner
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.33 2008/06/12 07:16:14 joris Exp $	*/
d53 2
a54 1
void	cvs_client_send_request(char *, ...);
d78 2
a79 1
void	cvs_server_send_response(char *, ...);
@


1.33
log
@completely kill the need for TMP_DIR when running checkout,
which gives us better performance among other things.

this is however disabled in a few cases:
1) whenever you run checkout over an existing tree (which acts as update)
2) whenever you specify -d or a module alias

we're planning on enabling this behaviour for case 2 in the future.

anoncvs sysadmins now love us even more.

ok tobias@@
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.32 2008/02/27 22:34:04 joris Exp $	*/
d94 1
a94 1
void	cvs_server_set_sticky(char *, char *);
@


1.32
log
@prevent file races

ok tobias@@
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.31 2008/02/10 14:00:41 joris Exp $	*/
d123 1
@


1.31
log
@introduce cvs_validate_directory(), which is used to check
directory path to make sure they do not fall outside the CVSROOT
or the working copy directory in a remote setup
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.30 2008/02/03 18:18:44 tobias Exp $	*/
d122 1
a122 1
void	cvs_remote_send_file(const char *);
@


1.30
log
@Added rdiff support.  In order to do this, some output and option fixes
had to be done for diff, too.

OK joris@@
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.29 2008/02/01 17:18:59 tobias Exp $	*/
d132 2
@


1.29
log
@Added rannotate support

OK xsa@@
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.28 2008/01/21 16:36:46 tobias Exp $	*/
d108 1
@


1.28
log
@Fixed export to be fully functional and compliant to GNU cvs in local and
remote setups.

OK xsa@@
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.27 2008/01/10 11:20:29 tobias Exp $	*/
d107 1
@


1.27
log
@Added support for rtag in local and remote setups (with interoperability
with GNU cvs).  Basically we already had rtag in place as tag is supposed
to work with revisions in working directory, but our implementation was
wrong.  Fixed that on the fly as well.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.26 2007/09/22 15:57:24 joris Exp $	*/
d104 1
@


1.26
log
@we no longer create a 0 sized file in our /tmp/cvs-serv<pid> server
directory when a client sends us info about a file that is up to date.

instead, remember the file is up to date in our CVS/Entries. Saves us a lot
of headaches on very big trees like src/
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.25 2007/08/30 11:07:18 joris Exp $	*/
d109 1
@


1.25
log
@properly send our log message to the server using Argumentx, so we
no longer break when the log message has multiple lines.

from Tobias Stoeckmann, thanks for doing my work!
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.24 2007/07/03 13:22:43 joris Exp $	*/
d46 3
@


1.24
log
@Rework the way opencvs works in relation to files in the Attic/:

Previously, files in the 'Attic/' were linked into our filelist as being
'Attic/filename,v' this caused unneeded stress on certain functions
like cvs_file_classify() who had to do pointer voodoo to split out
the 'Attic/' part and do other very weird stuff to normalize the pathname
of these files.

Instead, we handle these files early in the start when we
build the fileslist in cvs_repository_getdir(). When encountering
the 'Attic/' directory, we recurse in it if required but instead of
using the 'Attic/' directory component as our base directory we stick
with the directory name where 'Attic/' resides in, resulting in the
correct filename while maintaining the correct RCSpath for the file.

This made the following things a lot easier:
(and in most cases actually fixed the below points)

- status with files in Attic/.
- checking out HEAD repositories with files in Attic/.
- checking out repositories with -rTAG.
- updating with -rTAG.

and as an added bonus the following now also works:

- correctly creating CVS/Tag in both local and remote mode thus
  allowing update/status/and more to work correctly with the tagged tree.
  (thanks to the correct handling of -rTAG cases).
- resetting tags with opencvs -A properly works too now.

This is a major step forward into the usability
of OpenCVS when it comes to maintaining multiple tagged trees, the next
logical step would be to fix commiting to branches.

enjoy you -stable cowards.

tested by myself, xsa, niallo and ckuethe
thanks guys!
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.23 2007/06/29 12:42:05 xsa Exp $	*/
d49 1
@


1.23
log
@Server-side bits for release command.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.22 2007/06/27 20:42:19 joris Exp $	*/
d90 2
@


1.22
log
@have the server be more strict about the requests the client
sends that need a 'Directory' request first, so we do not
end up with very weird and possibly insecure behaviour.

more soon!

ok niallo@@ ray@@ xsa@@
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.21 2007/06/26 02:24:10 niallo Exp $	*/
d100 2
a102 1
void	cvs_server_remove(char *);
@


1.21
log
@add support for cvs rlog.
from Mickey.

ok joris@@ ray@@
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.20 2007/01/18 16:45:52 joris Exp $	*/
d38 2
@


1.20
log
@import improvements:
- add support for remote import in opencvs client and server.
- do not free already free'd buffers in import_update()
- do not append a '\0' to the loaded file buffer, this was bad behaviour

makes import work fine both locally and remotely.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.19 2007/01/17 17:54:50 joris Exp $	*/
d98 1
@


1.19
log
@add support for remote checkout in both our client and server,
with this the last real dependency to actually be able to use opencvs
in a remote setup has been added.

based upon an initial diff from xsa@@
'kay niallo@@
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.18 2007/01/13 15:29:34 joris Exp $	*/
d90 1
@


1.18
log
@- remote update now works again, with new rcs api
- we no longer hold the entire file in memory when sending or receiving it
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.17 2007/01/03 22:28:30 joris Exp $	*/
d93 1
@


1.17
log
@add support for 'remove' in a remote setup.
testing appriciated, as always.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.16 2007/01/03 19:27:28 joris Exp $	*/
d105 1
a105 1
BUF	*cvs_remote_receive_file(size_t len);
@


1.16
log
@fix CVS_CLIENT_LOG logging, we were missing parts
which was making it very hard to correctly debug remote connections.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.15 2006/12/19 15:12:59 joris Exp $	*/
d87 1
@


1.15
log
@- Introduce a way for the command code to recognize what the server replied.
- Modify the add command so it uses the above method to correctly enter
  added files in CVS/Entries if in a remote setup.

ok xsa@@

... And no a shark didnt eat me.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.14 2006/12/19 14:11:21 xsa Exp $	*/
d106 3
@


1.14
log
@add client-side support for Set-static-directory.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.13 2006/12/19 11:46:39 xsa Exp $	*/
d39 5
@


1.13
log
@add client-side support for Clear-static-directory, Clear-sticky and
Set-sticky requests. Set-sticky needs more work though.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.12 2006/12/15 13:12:14 xsa Exp $	*/
d56 1
@


1.12
log
@dummy support for update-patches request.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.11 2006/12/15 09:50:37 xsa Exp $	*/
d56 3
@


1.11
log
@server-side Static-directory bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.10 2006/12/15 08:02:53 xsa Exp $	*/
d77 1
@


1.10
log
@server-side Sticky bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.9 2006/11/27 16:04:10 xsa Exp $	*/
d75 1
@


1.9
log
@hook up annotate server bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.8 2006/11/14 15:39:42 xsa Exp $	*/
d75 1
@


1.8
log
@Add support for the "Set" request.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.7 2006/11/14 09:59:54 xsa Exp $	*/
d78 1
@


1.7
log
@dummy support for Argumentx request.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.6 2006/11/14 09:47:52 xsa Exp $	*/
d74 1
@


1.6
log
@Bring back version command. Still needs tweaks to make the
gnu cvs client<->opencvs server setup work. Rest works fine.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.5 2006/11/13 12:57:03 xsa Exp $	*/
d73 1
@


1.5
log
@Add server-side bits for admin command.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.4 2006/11/09 14:00:14 xsa Exp $	*/
d84 1
@


1.4
log
@cvs init remote bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.3 2006/11/09 09:24:28 xsa Exp $	*/
d75 1
@


1.3
log
@remote tag command support joins the party!
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.2 2006/10/31 15:23:40 xsa Exp $	*/
d77 1
@


1.2
log
@a step ahead in opencvs add|remove remote support.
@
text
@d1 1
a1 1
/*	$OpenBSD: remote.h,v 1.1 2006/07/07 17:37:17 joris Exp $	*/
d77 1
d79 2
a81 2
void	cvs_server_status(char *);
void	cvs_server_log(char *);
@


1.1
log
@first part of opencvs remote, fairly useable on existing trees
although i advise against using it on real development trees for now.

only a few commands work right so far:
- commit
- diff
- status
- log
- update (partially working)

if you feel like testing remote and run into bugs feel free to
contact me, and please include a full trace (-t).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d74 1
d77 1
@
