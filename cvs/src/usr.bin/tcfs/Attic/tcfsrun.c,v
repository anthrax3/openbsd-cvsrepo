head	1.10;
access;
symbols
	OPENBSD_3_2:1.9.0.10
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.8
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.6
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.4
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	TCFS00:1.1.1.1
	PROVOS001:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2003.02.24.02.13.14;	author deraadt;	state dead;
branches;
next	1.9;

1.9
date	2000.06.20.18.15.58;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.06.20.10.46.52;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.20.01.29.14;	author provos;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.19.23.06.25;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.06.19.22.42.29;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.19.20.35.48;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.19.20.25.31;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.19.20.06.19;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches;
next	;


desc
@@


1.10
log
@bye bye
@
text
@/*	$OpenBSD: tcfsrun.c,v 1.9 2000/06/20 18:15:58 aaron Exp $	*/

/*
 *	Transparent Cryptographic File System (TCFS) for NetBSD 
 *	Author and mantainer: 	Luigi Catuogno [luicat@@tcfs.unisa.it]
 *	
 *	references:		http://tcfs.dia.unisa.it
 *				tcfs-bsd@@tcfs.unisa.it
 */

/*
 *	Base utility set v0.1
 */

#include <sys/types.h>
#include <sys/param.h>
#include <sys/mount.h>
#include <sys/wait.h>
#include <ctype.h>
#include <pwd.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>

#include <miscfs/tcfs/tcfs.h>
#include "tcfslib.h"

char *cmd_def="/bin/sh";
char *run_usage = "usage: tcfsrun [-p mount-point | -f fs-label] [cmd] [args...]";

int
run_main(int argc, char *argv[], char *envp[])
{
	char *key, *cmd = NULL, x;
	char fspath[MAXPATHLEN], cmdname[MAXPATHLEN];
	uid_t uid;
	pid_t pid;
	int es;
	int havefspath = 0, havecmd = 0;

	uid = getuid();

	while ((x = getopt(argc, argv, "p:f:")) != -1) {
		switch(x) {
		case 'p':
			strlcpy(fspath, optarg, sizeof(fspath));
			havefspath = 1;
			break;
		case 'f':
			es = tcfs_getfspath(optarg, fspath);
			if (!es) {
				fprintf(stderr, 
					"filesystem label not found!\n");
				exit(1);
			}
			havefspath = 1;
			break;
		}
	}

	if (argc - optind) {
		strlcpy(cmdname, argv[optind], sizeof(cmdname));
		havecmd = 1;
		cmd = cmdname;
	}

	if (!havefspath) {
		es = tcfs_getfspath("default", fspath);
		if (!es)
			exit(1);
	}

	if (!havecmd)
		cmd = cmd_def;

	key = getpass("tcfs key:");

	pid = fork();
	if (!pid) {
		pid = getpid();
		if (tcfs_proc_enable(fspath, uid, pid, key) != -1) {
			setuid(uid);
			execve(cmd, argv + optind, envp);
		}

		fprintf(stderr, "Operation failed\n");
		exit(1);
	}
	
	wait(0);

	if (tcfs_proc_disable(fspath, uid, pid) == -1) {
		fprintf (stderr, "Problems removing process key\n");
		exit(1);
	}
	exit(0);
}
@


1.9
log
@getopt(3) returns -1, not EOF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrun.c,v 1.8 2000/06/20 10:46:52 fgsch Exp $	*/
@


1.8
log
@another oops, time to sleep.
remove spaces.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrun.c,v 1.7 2000/06/20 01:29:14 provos Exp $	*/
d43 1
a43 1
	while ((x = getopt(argc, argv, "p:f:")) != EOF) {
@


1.7
log
@no include <des.h> anymore
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrun.c,v 1.6 2000/06/19 23:06:25 aaron Exp $	*/
a97 2


@


1.6
log
@more KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrun.c,v 1.5 2000/06/19 22:42:29 aaron Exp $	*/
a19 1
#include <des.h>
@


1.5
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrun.c,v 1.4 2000/06/19 20:35:48 fgsch Exp $	*/
d57 1
a57 1
			havefspath=1;
@


1.4
log
@add openbsd tag
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 1
a40 1
	int havefspath = 0,havecmd = 0;
d44 1
a44 1
	while ((x = getopt(argc,argv,"p:f:")) != EOF) {
d51 1
a51 1
			es = tcfs_getfspath(optarg,fspath);
d69 1
a69 1
		es = tcfs_getfspath("default",fspath);
d84 1
a84 1
			execve(cmd,argv + optind, envp);
d93 1
a93 1
	if (tcfs_proc_disable(fspath,uid,pid) == -1) {
@


1.3
log
@more cleaning. KNF
@
text
@d1 2
@


1.2
log
@add missing headers, declare missing functions remove unused vars, KNF;
more to come.
@
text
@d33 1
a33 1
	char *key, *cmd, x;
@


1.1
log
@Initial revision
@
text
@a12 1
#include <stdio.h>
a13 3
#include <ctype.h>
#include <pwd.h>
#include <unistd.h>
d17 1
d19 4
d25 1
d33 2
a34 2
	char *key, *fs, *cmd, x;
	char *args, fspath[MAXPATHLEN], cmdname[MAXPATHLEN];
d37 1
a37 1
	int es,i = 1;
@


1.1.1.1
log
@Initial import of very much rewritten TCFS userland.  This code is still
nasty.
@
text
@@
