head	1.12;
access;
symbols
	OPENBSD_3_2:1.10.0.10
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.8
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.6
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.4
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	TCFS00:1.1.1.1
	PROVOS001:1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2003.02.24.02.13.14;	author deraadt;	state dead;
branches;
next	1.11;

1.11
date	2002.12.16.04.42.22;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	2000.06.20.18.15.57;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.06.20.08.59.53;	author fgsch;	state Exp;
branches;
next	1.8;

1.8
date	2000.06.20.06.45.16;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.19.23.06.25;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.19.22.42.28;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.06.19.20.35.48;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.19.20.06.19;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.19.14.24.07;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.19.01.00.35;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches;
next	;


desc
@@


1.12
log
@bye bye
@
text
@/*	$OpenBSD: tcfsgenkey.c,v 1.11 2002/12/16 04:42:22 mickey Exp $	*/

/*
 *	Transparent Cryptographic File System (TCFS) for NetBSD 
 *	Author and mantainer: 	Luigi Catuogno [luicat@@tcfs.unisa.it]
 *	
 *	references:		http://tcfs.dia.unisa.it
 *				tcfs-bsd@@tcfs.unisa.it
 */

/*
 *	Base utility set v0.1
 */

#include <stdio.h>
#include <stdlib.h>
#include <strings.h>

#include <miscfs/tcfs/tcfs.h>
#include "tcfslib.h"
#include "tcfserrors.h"

char *genkey_usage="Usage: %s [OPTION]
Generate a TCFS key adding it to the user entry into the TCFS database.

  -h       Shows this help\n";

int
genkey_main(int argn, char *argv[])
{
	int val;
	char *user, *passwd;
	tcfspwdb *userinfo;
	unsigned char *newkey, *cryptedkey;
	tcfspwdb *user_info = NULL;

	/*
	 * Going to check arguments
	 */
	while ((val = getopt(argn, argv, "h")) != -1)
		switch (val) {
		case 'h':
			printf(genkey_usage, argv[0]);
			exit(OK);
			break; /* Useless code */
		default:
			fprintf(stderr, "Try %s --help for more information.\n", argv[0]);
			exit(ER_UNKOPT);
			break;
		}

	if (argn - optind)
		tcfs_error(ER_UNKOPT, NULL);

	/*
	 * Must be root to do all this stuff
	 */
	if (geteuid())
		tcfs_error(ER_CUSTOM, "I don't have root privileges!");

	/*
	 * Authenticate user
	 */
	if (!unix_auth(&user, &passwd, TRUE))
		tcfs_error(ER_CUSTOM, "Who are you?!");

	if (!tcfs_getpwnam(user, &user_info))
		tcfs_error(ER_CUSTOM,
		    "You do not have an entry in the TCFS key database.");

	if (strlen(user_info->upw))
		tcfs_error(ER_CUSTOM, "You already have a TCFS key.");

	/*
	 * Generate a new key for the user.
	 */
	newkey = gentcfskey();

	/*
	 * Encrypt the generated key with user password
	 */
	cryptedkey = (char *)calloc(UUKEYSIZE + 1, sizeof(char));
	if (!cryptedkey)
		tcfs_error(ER_MEM, NULL);

	
	if (!tcfs_encrypt_key(passwd, newkey, KEYSIZE, cryptedkey,
	    UUKEYSIZE + 1))
		tcfs_error(ER_MEM, NULL);

	/*
	 * Update TCFS key database
	 */
	if (!tcfspwdbr_new(&userinfo))
		tcfs_error(ER_MEM, NULL);

	if (!tcfspwdbr_edit(&userinfo, F_USR|F_PWD, user, cryptedkey))
		tcfs_error(ER_MEM, NULL);

	/* TODO:
	   if (!change && tcfs_getpwnam(user, &userinfo))
	   tcfs_error(ER_CUSTOM, "Use -c to change the key.");
	*/

	if (!tcfs_putpwnam(user, userinfo, U_CHG))
		tcfs_error(ER_CUSTOM, "Error: cannot generate key.");

	tcfs_error(ER_CUSTOM, "\nKey successfully generated.");

	exit(0);
}
@


1.11
log
@typo; from Tor Houghton <torh@@bogus.net>
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsgenkey.c,v 1.10 2000/06/20 18:15:57 aaron Exp $	*/
@


1.10
log
@getopt(3) returns -1, not EOF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsgenkey.c,v 1.9 2000/06/20 08:59:53 fgsch Exp $	*/
d108 1
a108 1
	tcfs_error(ER_CUSTOM, "\nKey succesfully generated.");
@


1.9
log
@fix warnings during compilation. replace a few more calloc's with
malloc's; no need to clean the buffer for fgets.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsgenkey.c,v 1.8 2000/06/20 06:45:16 fgsch Exp $	*/
d40 1
a40 1
	while ((val = getopt(argn, argv, "h")) != EOF)
@


1.8
log
@kill show_usage, it's only a printf. i'll replace this by err and friends
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsgenkey.c,v 1.7 2000/06/19 23:06:25 aaron Exp $	*/
d109 2
@


1.7
log
@more KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsgenkey.c,v 1.6 2000/06/19 22:42:28 aaron Exp $	*/
d43 1
a43 1
			show_usage(genkey_usage, argv[0]);
@


1.6
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsgenkey.c,v 1.5 2000/06/19 20:35:48 fgsch Exp $	*/
d68 2
a69 1
		tcfs_error(ER_CUSTOM, "You do not have an entry in the TCFS key database.");
d82 1
a82 1
	cryptedkey = (char*)calloc(UUKEYSIZE + 1, sizeof(char));
d87 2
a88 1
	if (!tcfs_encrypt_key(passwd, newkey, KEYSIZE, cryptedkey, UUKEYSIZE + 1))
@


1.5
log
@add openbsd tag
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d29 1
a29 1
genkey_main (int argn, char *argv[])
d44 1
a44 1
			exit (OK);
d47 2
a48 2
			fprintf (stderr, "Try %s --help for more information.\n", argv[0]);
			exit (ER_UNKOPT);
d53 1
a53 1
		tcfs_error (ER_UNKOPT, NULL);
d59 1
a59 1
		tcfs_error (ER_CUSTOM, "I don't have root privileges!");
d64 2
a65 2
	if (!unix_auth (&user, &passwd, TRUE))
		tcfs_error (ER_CUSTOM, "Who are you?!");
d67 2
a68 2
	if (!tcfs_getpwnam (user, &user_info))
		tcfs_error (ER_CUSTOM, "You do not have an entry in the TCFS key database.");
d71 1
a71 1
		tcfs_error (ER_CUSTOM,"You already have a TCFS key.");
d76 1
a76 1
	newkey = gentcfskey ();
d83 1
a83 1
		tcfs_error (ER_MEM, NULL);
d86 2
a87 2
	if (!tcfs_encrypt_key (passwd, newkey, KEYSIZE, cryptedkey, UUKEYSIZE + 1))
		tcfs_error (ER_MEM, NULL);
d92 2
a93 2
	if (!tcfspwdbr_new (&userinfo))
		tcfs_error (ER_MEM, NULL);
d95 2
a96 2
	if (!tcfspwdbr_edit (&userinfo, F_USR|F_PWD, user, cryptedkey))
		tcfs_error (ER_MEM, NULL);
d99 2
a100 2
	   if (!change && tcfs_getpwnam (user, &userinfo))
	   tcfs_error (ER_CUSTOM, "Use -c to change the key.");
d103 2
a104 2
	if (!tcfs_putpwnam (user, userinfo, U_CHG))
		tcfs_error (ER_CUSTOM, "Error: cannot generate key.");
d106 1
a106 1
	tcfs_error (ER_CUSTOM, "\nKey succesfully generated.");
@


1.4
log
@add missing headers, declare missing functions remove unused vars, KNF;
more to come.
@
text
@d1 2
@


1.3
log
@cleanup key encryption
@
text
@d14 1
@


1.2
log
@remove debug printfs
@
text
@d78 1
a78 1
	cryptedkey = (char*)calloc(UUKEYSIZE, sizeof(char));
d83 1
a83 1
	if (!tcfs_encrypt_key (user, passwd, newkey, cryptedkey, USERKEY))
@


1.1
log
@Initial revision
@
text
@a73 7
	{
		int i;
		printf("gentcfskey: key =");
		for (i = 0; i < KEYSIZE; i++)
			printf(" %02x", newkey[i]);
		printf("\n");
	}
@


1.1.1.1
log
@Initial import of very much rewritten TCFS userland.  This code is still
nasty.
@
text
@@
