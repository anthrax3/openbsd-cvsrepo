head	1.10;
access;
symbols
	OPENBSD_3_2:1.9.0.10
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.8
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.6
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.4
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	TCFS00:1.1.1.1
	PROVOS001:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2003.02.24.02.13.14;	author deraadt;	state dead;
branches;
next	1.9;

1.9
date	2000.06.20.18.15.58;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.06.20.08.59.53;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.20.06.45.16;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.19.23.06.25;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.06.19.22.42.29;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.19.20.35.48;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.19.20.06.19;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.18.22.18.49;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches;
next	;


desc
@@


1.10
log
@bye bye
@
text
@/*	$OpenBSD: tcfsrmuser.c,v 1.9 2000/06/20 18:15:58 aaron Exp $	*/

/*
 *	Transparent Cryptographic File System (TCFS) for NetBSD 
 *	Author and mantainer: 	Luigi Catuogno [luicat@@tcfs.unisa.it]
 *	
 *	references:		http://tcfs.dia.unisa.it
 *				tcfs-bsd@@tcfs.unisa.it
 */

/*
 *	Base utility set v0.1
 */


#include <err.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include <miscfs/tcfs/tcfs.h>
#include "tcfslib.h"
#include "tcfserrors.h"

char *rmuser_usage="Usage: %s [OPTION]...
Remove an user entry from the TCFS dabatase.

  -l <user>   Username to remove from the TCFS database
  -h          Shows this help
  -v          Makes the output a little more verbose\n";

int 
rmuser_main(int argn, char *argv[])
{
	int have_user = FALSE;
	int be_verbose = FALSE;
	char *user;
	tcfspwdb *user_info;
	int val;

	/*
	 * Going to check the arguments
	 */

	 if ((user = (char *)malloc(LOGIN_NAME_MAX + 1)) == NULL)
		 err(1, NULL);

	 while ((val = getopt(argn, argv, "l:hv")) != -1)
		switch (val) {
		case 'l':
			strlcpy(user, optarg, LOGIN_NAME_MAX + 1);
			have_user = TRUE;
			break;
		case 'h':
			printf(rmuser_usage, argv[0]);
			exit(OK);
			break;
		case 'v':
			be_verbose = TRUE;
			break;
		default:
			fprintf(stderr, "Try %s --help for more information.\n", argv[0]);
			exit(ER_UNKOPT);
			break;
		}

	if (argn - optind)
		tcfs_error(ER_UNKOPT, NULL);

	/*
	 * Here we don't have to drop root privileges because only root
	 * should run us.
	 * However we can do better. Maybe in next versions.
	 */
	if (!have_user) {
		int len;

		printf("Username to remove from TCFS database: ");
		fgets(user, LOGIN_NAME_MAX + 1, stdin);
		len = strlen(user) - 2;
		if (len < 0)
			exit(1);
		user[len] = user[len] == '\n' ? 0 : user[len];
	}

	if (be_verbose)
		printf("Deleting the entry for user %s from the TCFS database...\n", user);

	/*
	 * Deleting an entry from the key database
	 */
	if (!tcfspwdbr_new(&user_info))
		tcfs_error(ER_MEM, NULL);

	if (!tcfspwdbr_edit(&user_info, F_USR, user))
		tcfs_error(ER_MEM, NULL);

	if (!tcfs_putpwnam(user, user_info, U_DEL))
		tcfs_error(ER_CUSTOM, "Error: cannot remove user.");

	if (be_verbose)
		printf("User entry removed with success.\n");

	tcfs_error(OK, NULL);

	exit(0);
}
@


1.9
log
@getopt(3) returns -1, not EOF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrmuser.c,v 1.8 2000/06/20 08:59:53 fgsch Exp $	*/
@


1.8
log
@fix warnings during compilation. replace a few more calloc's with
malloc's; no need to clean the buffer for fgets.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrmuser.c,v 1.7 2000/06/20 06:45:16 fgsch Exp $	*/
d49 1
a49 1
	 while ((val = getopt(argn, argv, "l:hv")) != EOF)
@


1.7
log
@kill show_usage, it's only a printf. i'll replace this by err and friends
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrmuser.c,v 1.6 2000/06/19 23:06:25 aaron Exp $	*/
d106 2
@


1.6
log
@more KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrmuser.c,v 1.5 2000/06/19 22:42:29 aaron Exp $	*/
d56 1
a56 1
			show_usage(rmuser_usage, argv[0]);
@


1.5
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrmuser.c,v 1.4 2000/06/19 20:35:48 fgsch Exp $	*/
d50 1
a50 1
		 switch (val) {
@


1.4
log
@add openbsd tag
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d34 1
a34 1
rmuser_main (int argn, char *argv[])
d46 1
a46 1
	 if ((user = (char *) malloc(LOGIN_NAME_MAX + 1)) == NULL)
d49 1
a49 1
	 while ((val=getopt (argn, argv, "l:hv"))!=EOF)
d51 15
a65 18
			case 'l':
				strlcpy (user, optarg, LOGIN_NAME_MAX + 1);
				have_user = TRUE;
				break;

			case 'h':
				show_usage (rmuser_usage, argv[0]);
				exit (OK);
				break;
	
			case 'v':
				be_verbose = TRUE;
				break;
	
			default:
				fprintf (stderr, "Try %s --help for more information.\n", argv[0]);
				exit (ER_UNKOPT);
				break;
d68 2
a69 2
	if (argn-optind)
		tcfs_error (ER_UNKOPT, NULL);
d79 2
a80 2
		printf ("Username to remove from TCFS database: ");
		fgets (user, LOGIN_NAME_MAX + 1, stdin);
d83 1
a83 1
			exit (1);
d88 1
a88 1
		printf ("Deleting the entry for user %s from the TCFS database...\n", user);
d93 2
a94 2
	if (!tcfspwdbr_new (&user_info))
		tcfs_error (ER_MEM, NULL);
d96 2
a97 2
	if (!tcfspwdbr_edit (&user_info, F_USR, user))
		tcfs_error (ER_MEM, NULL);
d99 2
a100 2
	if (!tcfs_putpwnam (user, user_info, U_DEL))
		tcfs_error (ER_CUSTOM, "Error: cannot remove user.");
d103 1
a103 1
		printf ("User entry removed with success.\n");
d105 1
a105 1
	tcfs_error (OK, NULL);
@


1.3
log
@add missing headers, declare missing functions remove unused vars, KNF;
more to come.
@
text
@d1 2
@


1.2
log
@strlcpy
@
text
@d14 1
d16 2
a18 1
#include <err.h>
d36 1
a36 1
	char *user, *passwd;
@


1.1
log
@Initial revision
@
text
@d16 1
d32 2
a33 2
	int have_user=FALSE;
	int be_verbose=FALSE;
d42 2
a43 1
	 user=(char *) malloc(20);
d46 1
a46 2
                switch (val)
		{
d48 2
a49 2
				strncpy (user, optarg, 9);
				have_user=TRUE;
d58 1
a58 1
				be_verbose=TRUE;
d75 3
a77 2
	if (!have_user)
	{
d79 5
a83 2
		fgets (user,9,stdin);
		user[strlen(user)-1]='\0';
@


1.1.1.1
log
@Initial import of very much rewritten TCFS userland.  This code is still
nasty.
@
text
@@
