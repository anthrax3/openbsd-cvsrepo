head	1.10;
access;
symbols
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.8.0.6
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.4
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	TCFS00:1.1.1.1
	PROVOS001:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2003.02.24.02.13.14;	author deraadt;	state dead;
branches;
next	1.9;

1.9
date	2002.02.16.21.27.54;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2000.06.20.07.40.17;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.20.07.09.46;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.19.20.35.48;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2000.06.19.20.25.31;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.19.20.06.19;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.19.14.24.07;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.18.22.31.03;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches;
next	;


desc
@@


1.10
log
@bye bye
@
text
@/*	$OpenBSD: tcfslib.h,v 1.9 2002/02/16 21:27:54 millert Exp $	*/

/*
 *	Transparent Cryptographic File System (TCFS) for NetBSD 
 *	Author and mantainer: 	Luigi Catuogno [luicat@@tcfs.unisa.it]
 *	
 *	references:		http://tcfs.dia.unisa.it
 *				tcfs-bsd@@tcfs.unisa.it
 */

/*
 *	Base utility set v0.1
 */

#include <unistd.h>
#include "tcfsdefines.h"
#include "tcfspwdb.h"

extern int	tcfspwdbr_new(tcfspwdb **);
extern int	tcfspwdbr_edit(tcfspwdb **, int, ...);
extern int	tcfspwdbr_read(tcfspwdb *, int, ...);
extern void	tcfspwdbr_dispose(tcfspwdb *);
extern int	tcfsgpwdbr_new(tcfsgpwdb **);
extern int	tcfsgpwdbr_edit(tcfsgpwdb **, int, ...);
extern int	tcfsgpwdbr_read(tcfsgpwdb *, int, ...);
extern void	tcfsgpwdbr_dispose(tcfsgpwdb *);
extern int	tcfs_chgpwd(char *, char *, char *);
extern int	tcfs_group_chgpwd(char *, gid_t, char *, char *);
extern int	tcfs_chgpassword(char *, char *, char *);
extern int	tcfs_decrypt_key(char *, u_char *, u_char *, int);
extern int	tcfs_encrypt_key(char *, u_char *, int, u_char *, int);
extern char    *tcfs_decode(char *, int *);
extern char    *tcfs_encode(char *, int );
extern char    *gentcfskey(void);

extern int	tcfs_getstatus(char *, struct tcfs_status *);
extern int	tcfs_getfspath(char *, char *);

extern int	tcfs_proc_enable(char *, uid_t, pid_t, char *);
extern int	tcfs_proc_disable(char *, uid_t, pid_t);
extern int	tcfs_user_enable(char *, uid_t, u_char *);
extern int	tcfs_user_disable(char *, uid_t);
extern int	tcfs_group_enable(char *, uid_t, gid_t, int, char *);
extern int	tcfs_group_disable(char *, uid_t, gid_t);

extern tcfspwdb *
		tcfs_getpwnam(char *, tcfspwdb **);
extern int	tcfs_putpwnam(char *, tcfspwdb *, int);

extern int	unix_auth(char **, char **, int);
extern tcfsgpwdb *
		tcfs_ggetpwnam(char *, gid_t, tcfsgpwdb **);
extern int	tcfs_gputpwnam(char *, tcfsgpwdb *, int);
extern int	tcfs_get_label(char *, char *, int *);
extern int	tcfs_verify_fs(char *);
extern int	tcfs_callfunction(char *, struct tcfs_args *);
@


1.9
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfslib.h,v 1.8 2000/06/20 07:40:17 fgsch Exp $	*/
@


1.8
log
@even more declarations
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfslib.h,v 1.7 2000/06/20 07:09:46 fgsch Exp $	*/
d19 26
a44 26
extern int	tcfspwdbr_new __P((tcfspwdb **));
extern int	tcfspwdbr_edit __P((tcfspwdb **, int, ...));
extern int	tcfspwdbr_read __P((tcfspwdb *, int, ...));
extern void	tcfspwdbr_dispose __P((tcfspwdb *));
extern int	tcfsgpwdbr_new __P((tcfsgpwdb **));
extern int	tcfsgpwdbr_edit __P((tcfsgpwdb **, int, ...));
extern int	tcfsgpwdbr_read __P((tcfsgpwdb *, int, ...));
extern void	tcfsgpwdbr_dispose __P((tcfsgpwdb *));
extern int	tcfs_chgpwd __P((char *, char *, char *));
extern int	tcfs_group_chgpwd __P((char *, gid_t, char *, char *));
extern int	tcfs_chgpassword __P((char *, char *, char *));
extern int	tcfs_decrypt_key __P((char *, u_char *, u_char *, int));
extern int	tcfs_encrypt_key __P((char *, u_char *, int, u_char *, int));
extern char    *tcfs_decode __P((char *, int *));
extern char    *tcfs_encode __P((char *, int ));
extern char    *gentcfskey __P((void));

extern int	tcfs_getstatus __P((char *, struct tcfs_status *));
extern int	tcfs_getfspath __P((char *, char *));

extern int	tcfs_proc_enable __P((char *, uid_t, pid_t, char *));
extern int	tcfs_proc_disable __P((char *, uid_t, pid_t));
extern int	tcfs_user_enable __P((char *, uid_t, u_char *));
extern int	tcfs_user_disable __P((char *, uid_t));
extern int	tcfs_group_enable __P((char *, uid_t, gid_t, int, char *));
extern int	tcfs_group_disable __P((char *, uid_t, gid_t));
d47 2
a48 2
		tcfs_getpwnam __P((char *, tcfspwdb **));
extern int	tcfs_putpwnam __P((char *, tcfspwdb *, int));
d50 1
a50 1
extern int	unix_auth __P((char **, char **, int));
d52 5
a56 5
		tcfs_ggetpwnam __P((char *, gid_t, tcfsgpwdb **));
extern int	tcfs_gputpwnam __P((char *, tcfsgpwdb *, int));
extern int	tcfs_get_label __P((char *, char *, int *));
extern int	tcfs_verify_fs __P((char *));
extern int	tcfs_callfunction __P((char *, struct tcfs_args *));
@


1.7
log
@add missing declarations and includes.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfslib.h,v 1.6 2000/06/19 20:35:48 fgsch Exp $	*/
d56 1
@


1.6
log
@add openbsd tag
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d51 5
@


1.5
log
@more cleaning. KNF
@
text
@d1 2
@


1.4
log
@add missing headers, declare missing functions remove unused vars, KNF;
more to come.
@
text
@d43 6
@


1.3
log
@cleanup key encryption
@
text
@d17 16
a32 16
extern int tcfspwdbr_new (tcfspwdb **p);
extern int tcfspwdbr_edit (tcfspwdb **p, int i, ...);
extern int tcfspwdbr_read (tcfspwdb *p, int i, ...);
extern void tcfspwdbr_dispose (tcfspwdb *p);
extern int tcfsgpwdbr_new (tcfsgpwdb **p);
extern int tcfsgpwdbr_edit (tcfsgpwdb **p, int i, ...);
extern int tcfsgpwdbr_read (tcfsgpwdb *p, int i, ...);
extern void tcfsgpwdbr_dispose (tcfsgpwdb *p);
extern int tcfs_chgpwd (char *u, char *o, char *p);
extern int tcfs_group_chgpwd (char *u, gid_t gid, char *o, char *p);
extern int tcfs_chgpassword (char *u, char *o, char *p);
extern int tcfs_decrypt_key (char *pwd, u_char *t, u_char *tk, int tklen);
extern int tcfs_encrypt_key (char *pwd, u_char *key, int klen, u_char *ek, int eklen);
extern char *tcfs_decode (char *t, int *l);
extern char *tcfs_encode (char *t, int l);
extern char *gentcfskey (void);
d34 2
d37 6
@


1.2
log
@remove RCS entries.
@
text
@d28 2
a29 2
extern int tcfs_decrypt_key (char *u, char *pwd, unsigned char *t, unsigned char *tk, unsigned int flag);
extern int tcfs_encrypt_key (char *u, char *pw, unsigned char *key, unsigned char *ek, unsigned int flag);
@


1.1
log
@Initial revision
@
text
@a10 7
 *
 *	  $Source: /usr/src/tcfs-utils_0.1/include/RCS/tcfslib.h,v $
 *	   $State: Exp $
 *	$Revision: 1.1 $
 *	  $Author: luicat $
 *	    $Date: 2000/01/14 13:45:28 $
 *
a11 4

/* RCS_HEADER_ENDS_HERE */


@


1.1.1.1
log
@Initial import of very much rewritten TCFS userland.  This code is still
nasty.
@
text
@@
