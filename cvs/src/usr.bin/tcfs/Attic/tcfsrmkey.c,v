head	1.9;
access;
symbols
	OPENBSD_3_2:1.8.0.8
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.6
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.4
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	TCFS00:1.1.1.1
	PROVOS001:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2003.02.24.02.13.14;	author deraadt;	state dead;
branches;
next	1.8;

1.8
date	2001.01.23.18.18.46;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.20.18.15.57;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.20.08.59.53;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2000.06.20.01.29.14;	author provos;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.19.22.42.29;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.19.20.35.48;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.19.20.06.19;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches;
next	;


desc
@@


1.9
log
@bye bye
@
text
@/*	$OpenBSD: tcfsrmkey.c,v 1.8 2001/01/23 18:18:46 deraadt Exp $	*/

/*
 *	Transparent Cryptographic File System (TCFS) for NetBSD 
 *	Author and mantainer: 	Luigi Catuogno [luicat@@tcfs.unisa.it]
 *	
 *	references:		http://tcfs.dia.unisa.it
 *				tcfs-bsd@@tcfs.unisa.it
 */

/*
 *	Base utility set v0.1
 */

#include <sys/types.h>
#include <sys/param.h>
#include <sys/mount.h>
#include <ctype.h>
#include <pwd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include <miscfs/tcfs/tcfs.h>
#include "tcfslib.h"
#include "tcfserrors.h"
#include <grp.h>

extern char *optarg;
extern int optind;
char *rmkey_usage=
"usage: tcfsrmkey [-f filesystem-label] [-g group] [-p mount-point]\n";

int
rmkey_main(int argc, char *argv[])
{
	uid_t uid;
	gid_t gid = 0;
	int es = 0;
	char x;
	char fslabel[MAXPATHLEN], fspath[MAXPATHLEN];
	int havempname = FALSE, havefsname = FALSE, isgroupkey = FALSE;
	int havename = FALSE, havefspath = FALSE;

	while ((x = getopt(argc, argv, "f:p:g:")) != -1) {
		switch(x) {
		case 'p':
			havempname = TRUE;
			strlcpy(fspath, optarg, sizeof(fspath));
			break;
		case 'f':
			havefsname = TRUE;
			strlcpy(fslabel, optarg, sizeof(fslabel));
			break;
		case 'g':
			isgroupkey = TRUE;
			gid = atoi(optarg);
			if (!gid && optarg[0] != 0) {
				struct group *grp;
				grp = (struct group *)getgrnam(optarg);
				if (!grp)
					tcfs_error(ER_CUSTOM, 
						   "Nonexistant group\n");
				gid = grp->gr_gid;
			}
			break;
		default: 
			tcfs_error(ER_CUSTOM, rmkey_usage);
			exit(ER_UNKOPT);
		}
	}
	if (argc-optind)
		tcfs_error(ER_UNKOPT, NULL);

	if (havefsname && havempname)
		tcfs_error(ER_CUSTOM, rmkey_usage);
			 
	if (havefsname) {
		es = tcfs_getfspath(fslabel, fspath);
		havename = TRUE;
	}

	if (havefspath)
		havename = TRUE;

	if (!havename)
		es = tcfs_getfspath("default", fspath);

	if(!es) {
		tcfs_error(ER_CUSTOM, "fs-label not found!\n");
		exit(1);
	}
		
	uid = getuid();

	if (isgroupkey) {
		es = tcfs_group_disable(fspath, uid, gid);
		if(es == -1)
			tcfs_error(ER_CUSTOM, "problems updating filesystem");
		exit(0);
	}

	es = tcfs_user_disable(fspath, uid);

	if (es == -1)
		tcfs_error(ER_CUSTOM, "problems updating filesystem");

	exit(0);
}
@


1.8
log
@fix spelling; ca+OpenBSD@@zardoc.endmail.org
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrmkey.c,v 1.7 2000/06/20 18:15:57 aaron Exp $	*/
@


1.7
log
@getopt(3) returns -1, not EOF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrmkey.c,v 1.6 2000/06/20 08:59:53 fgsch Exp $	*/
d33 1
a33 1
"usage: tcfsrmkey [-f fliesystem-label][-g group][-p mount-point]\n";
@


1.6
log
@fix warnings during compilation. replace a few more calloc's with
malloc's; no need to clean the buffer for fgets.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrmkey.c,v 1.5 2000/06/20 01:29:14 provos Exp $	*/
d46 1
a46 1
	while ((x = getopt(argc, argv, "f:p:g:")) != EOF) {
@


1.5
log
@no include <des.h> anymore
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrmkey.c,v 1.4 2000/06/19 22:42:29 aaron Exp $	*/
d39 2
a40 2
	gid_t gid;
	int es;
d76 1
a76 1
	if (havefsname && havempname) {
a77 2
		exit(1);
	}
@


1.4
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsrmkey.c,v 1.3 2000/06/19 20:35:48 fgsch Exp $	*/
a18 1
#include <des.h>
@


1.3
log
@add openbsd tag
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d47 1
a47 1
	while ((x = getopt(argc,argv,"f:p:g:")) != EOF) {
d75 1
a75 1
		tcfs_error(ER_UNKOPT,NULL);
d91 1
a91 1
		es = tcfs_getfspath("default",fspath);
d94 1
a94 1
		tcfs_error(ER_CUSTOM,"fs-label not found!\n");
d101 1
a101 1
		es = tcfs_group_disable(fspath,uid,gid);
d107 1
a107 1
	es = tcfs_user_disable(fspath,uid);
d110 1
a110 1
		tcfs_error(ER_CUSTOM,"problems updating filesystem");
@


1.2
log
@add missing headers, declare missing functions remove unused vars, KNF;
more to come.
@
text
@d1 2
@


1.1
log
@Initial revision
@
text
@a12 1
#include <stdio.h>
d14 2
d17 1
d19 3
a22 3
#include <sys/param.h>
#include <sys/mount.h>
#include <des.h>
a36 1
	char *fs;
a42 1
	int havefs = FALSE;
@


1.1.1.1
log
@Initial import of very much rewritten TCFS userland.  This code is still
nasty.
@
text
@@
