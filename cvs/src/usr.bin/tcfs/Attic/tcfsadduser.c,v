head	1.9;
access;
symbols
	OPENBSD_3_2:1.8.0.10
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.8
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.6
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.4
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	TCFS00:1.1.1.1
	PROVOS001:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2003.02.24.02.13.14;	author deraadt;	state dead;
branches;
next	1.8;

1.8
date	2000.06.20.18.15.57;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.20.08.59.53;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.20.06.45.16;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2000.06.19.23.06.25;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.19.22.42.28;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.19.21.31.30;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.19.20.35.47;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches;
next	;


desc
@@


1.9
log
@bye bye
@
text
@/*	$OpenBSD: tcfsadduser.c,v 1.8 2000/06/20 18:15:57 aaron Exp $	*/

/*
 *	Transparent Cryptographic File System (TCFS) for NetBSD 
 *	Author and mantainer: 	Luigi Catuogno [luicat@@tcfs.unisa.it]
 *	
 *	references:		http://tcfs.dia.unisa.it
 *				tcfs-bsd@@tcfs.unisa.it
 */

/*
 *	Base utility set v0.1
 */

#include <stdio.h>
#include <unistd.h>
#include <limits.h>
#include <string.h>

#include <miscfs/tcfs/tcfs.h>

#include "tcfslib.h"
#include "tcfserrors.h"


char *adduser_usage="Usage: %s [OPTION]...
Add an user entry to the TCFS database.

  -l <user>    Username to add to the TCFS database
  -h           Shows this help
  -v           Makes the output a little more verbose\n";

int 
adduser_main(int argn, char *argv[])
{
	char val;
	int have_user = FALSE, be_verbose = FALSE;
	char user[LOGIN_NAME_MAX + 1];
	tcfspwdb *user_info;

	/*
	 * Going to check the arguments
	 */
	while ((val = getopt(argn, argv, "g:l:hv")) != -1)
		switch (val) {
		case 'l':
			strlcpy(user, optarg, sizeof(user));
			have_user = 1;
			break;
		case 'h':
			printf(adduser_usage, argv[0]);
			exit(OK);
			break;
		case 'v':
			be_verbose = TRUE;
			break;
		default:
			fprintf(stderr,
				 "Try %s --help for more information.\n",
				 argv[0]);
			exit(ER_UNKOPT);
			break;
		}

	if (argn - optind)
		tcfs_error(ER_UNKOPT, NULL);

	/*
	 * Here we don't have to drop root privileges because only root
	 * should run us.
	 * However we can do better. Maybe in next versions.
	 */
	if (!have_user) {
		printf("Username to add to TCFS database: ");
		fgets(user, sizeof(user), stdin);
		user[strlen(user) - 1] = '\0';
	}

	if (be_verbose)
		printf("Creating a new entry for user %s in the TCFS database...\n", user);

	/*
	 * Creating a new entry into the key database
	 */
	if (!tcfspwdbr_new(&user_info))
		tcfs_error(ER_MEM, NULL);

	if (!tcfspwdbr_edit(&user_info, F_USR, user))
		tcfs_error(ER_MEM, NULL);

	if (!tcfs_putpwnam(user, user_info, U_NEW))
		tcfs_error(ER_CUSTOM, "Error: cannot add user.");

	if (be_verbose)
		printf("User entry created with success.\n");

	tcfs_error(OK, NULL);

	exit(0);
}
@


1.8
log
@getopt(3) returns -1, not EOF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsadduser.c,v 1.7 2000/06/20 08:59:53 fgsch Exp $	*/
@


1.7
log
@fix warnings during compilation. replace a few more calloc's with
malloc's; no need to clean the buffer for fgets.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsadduser.c,v 1.6 2000/06/20 06:45:16 fgsch Exp $	*/
d44 1
a44 1
	while ((val = getopt(argn, argv, "g:l:hv")) != EOF)
@


1.6
log
@kill show_usage, it's only a printf. i'll replace this by err and friends
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsadduser.c,v 1.5 2000/06/19 23:06:25 aaron Exp $	*/
d98 2
@


1.5
log
@more KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsadduser.c,v 1.4 2000/06/19 22:42:28 aaron Exp $	*/
d51 1
a51 1
			show_usage(adduser_usage, argv[0]);
@


1.4
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsadduser.c,v 1.3 2000/06/19 21:31:30 fgsch Exp $	*/
d44 1
a44 1
	while ((val = getopt(argn, argv, "g:l:hv"))!=EOF)
@


1.3
log
@add string.h
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsadduser.c,v 1.2 2000/06/19 20:35:47 fgsch Exp $	*/
d34 1
a34 1
adduser_main (int argn, char *argv[])
d47 1
a47 1
			strlcpy (user, optarg, sizeof(user));
d51 2
a52 2
			show_usage (adduser_usage, argv[0]);
			exit (OK);
d58 1
a58 1
			fprintf (stderr,
d61 1
a61 1
			exit (ER_UNKOPT);
d65 2
a66 2
	if (argn-optind)
		tcfs_error (ER_UNKOPT, NULL);
d74 3
a76 3
		printf ("Username to add to TCFS database: ");
		fgets (user, sizeof(user), stdin);
		user[strlen(user)-1] = '\0';
d80 1
a80 1
		printf ("Creating a new entry for user %s in the TCFS database...\n", user);
d85 2
a86 2
	if (!tcfspwdbr_new (&user_info))
		tcfs_error (ER_MEM, NULL);
d88 2
a89 2
	if (!tcfspwdbr_edit (&user_info, F_USR, user))
		tcfs_error (ER_MEM, NULL);
d91 2
a92 2
	if (!tcfs_putpwnam (user, user_info, U_NEW))
		tcfs_error (ER_CUSTOM, "Error: cannot add user.");
d95 1
a95 1
		printf ("User entry created with success.\n");
d97 1
a97 1
	tcfs_error (OK, NULL);
@


1.2
log
@add openbsd tag
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d18 1
@


1.1
log
@Initial revision
@
text
@d1 2
@


1.1.1.1
log
@Initial import of very much rewritten TCFS userland.  This code is still
nasty.
@
text
@@
