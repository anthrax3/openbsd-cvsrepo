head	1.8;
access;
symbols
	OPENBSD_3_2:1.7.0.10
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.8
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.6
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.4
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	TCFS00:1.1.1.1
	PROVOS001:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2003.02.24.02.13.14;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	2000.06.20.10.46.51;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.20.07.58.57;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2000.06.20.07.09.45;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.19.23.06.24;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.19.22.42.28;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.19.20.35.47;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches;
next	;


desc
@@


1.8
log
@bye bye
@
text
@/*	$OpenBSD: tcfs_getfspath.c,v 1.7 2000/06/20 10:46:51 fgsch Exp $	*/

/*
 *	Transparent Cryptographic File System (TCFS) for NetBSD 
 *	Author and mantainer: 	Luigi Catuogno [luicat@@tcfs.unisa.it]
 *	
 *	references:		http://tcfs.dia.unisa.it
 *				tcfs-bsd@@tcfs.unisa.it
 */

/*
 *	Base utility set v0.1
 */

#include <fstab.h>
#include <stdio.h>
#include <stdlib.h>
#include <strings.h>

#include <miscfs/tcfs/tcfs.h>
#include "tcfslib.h"

#define WHITESPACE " \t\r\n"

int
tcfs_label_getcipher(char *label)
{
	int ciphernum;

	if (tcfs_get_label(label, NULL, &ciphernum))
		return (ciphernum);

	return (-1);
}

int
tcfs_getfspath(char *label2search, char *path)
{
	return (tcfs_get_label(label2search, path, NULL));
}

int
tcfs_get_label(char *label2search, char *path, int *ciphernumber)
{
	FILE *fp;
	char *label, *line, *p, *tag, *mountpoint, *cipherfield;
	int found = 0;

	if ((fp = fopen(_PATH_FSTAB, "r")) == NULL)
		return (0);

	if ((line = (char *)malloc(1024)) == NULL)
		goto out;

	while (!feof(fp) && !found) {
		p = line;
		fgets(p, 1024, fp);
		p = p + strspn(p, WHITESPACE);
		while (!found) {
			strsep(&p, WHITESPACE);  /* device */
			if (p == NULL)
				break;
			p = p + strspn(p, WHITESPACE);
			mountpoint = strsep(&p, WHITESPACE); /* mount point */
			if (p == NULL)
				break;
			tag = strsep(&p, WHITESPACE); /* file system */
			if (p == NULL || strcmp(tag, "tcfs"))
				break;

			/* find the correct label */
			label = strstr(p, "label=");
			cipherfield = strstr(p, "cipher=");
			if (label == NULL)
				break;
			p = label + 6;
			label = strsep(&p, WHITESPACE ",");
			if (!strlen(label) || strcmp(label, label2search))
				break;

			if (path) {
				strcpy(path, mountpoint);
				found = 1;
			}
			
			if (ciphernumber) {
				if (cipherfield == NULL)
					break;
				p = cipherfield + 7;
				cipherfield = strsep(&p, WHITESPACE ",");
				if (!strlen(cipherfield))
					break;

				*ciphernumber = strtol(cipherfield, &p, 0);
				if (cipherfield != p) 
					found = 1;
			}
		}
	}
	free(line);
 out:
	fclose(fp);

	return (found);
}
@


1.7
log
@another oops, time to sleep.
remove spaces.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs_getfspath.c,v 1.6 2000/06/20 07:58:57 fgsch Exp $	*/
@


1.6
log
@add openbsd tags. rearrange headers as per style(9) and indent.
replace some strcpy by strlcpy.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs_getfspath.c,v 1.5 2000/06/20 07:09:45 fgsch Exp $	*/
d82 1
a82 1
				strlcpy(path, mountpoint, sizeof(*path));
@


1.5
log
@add missing declarations and includes.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs_getfspath.c,v 1.4 2000/06/19 23:06:24 aaron Exp $	*/
d15 1
d17 1
a18 2
#include <stdlib.h>
#include <fstab.h>
d33 1
a33 1
        return (-1);
d82 1
a82 1
				strcpy(path, mountpoint);
@


1.4
log
@more KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs_getfspath.c,v 1.3 2000/06/19 22:42:28 aaron Exp $	*/
d19 3
@


1.3
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs_getfspath.c,v 1.2 2000/06/19 20:35:47 fgsch Exp $	*/
d101 1
a101 1
	return found;
@


1.2
log
@add openbsd tag
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfs_getfspath.c,v 1.1.1.1 2000/06/18 22:07:24 provos Exp $	*/
d23 1
a23 1
tcfs_label_getcipher (char *label)
d27 2
a28 2
	if (tcfs_get_label (label, NULL, &ciphernum))
	  return ciphernum;
d34 1
a34 1
tcfs_getfspath (char *label2search, char *path)
d36 1
a36 1
	return tcfs_get_label (label2search, path, NULL);
d46 1
a46 1
	if ((fp = fopen(_PATH_FSTAB,"r")) == NULL)
d49 1
a49 1
	if ((line = calloc(1024, sizeof(char))) == NULL)
d54 1
a54 1
		fgets (p, 1024, fp);
d99 1
a99 1
	fclose (fp);
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$OpenBSD$	*/
@


1.1.1.1
log
@Initial import of very much rewritten TCFS userland.  This code is still
nasty.
@
text
@@
