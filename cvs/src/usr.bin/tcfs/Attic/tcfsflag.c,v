head	1.10;
access;
symbols
	OPENBSD_3_2:1.9.0.10
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.8
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.6
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.4
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	TCFS00:1.1.1.1
	PROVOS001:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2003.02.24.02.13.14;	author deraadt;	state dead;
branches;
next	1.9;

1.9
date	2000.06.20.08.28.02;	author fgsch;	state Exp;
branches;
next	1.8;

1.8
date	2000.06.20.07.58.57;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.20.01.29.14;	author provos;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.19.23.06.25;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.06.19.22.42.28;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.19.20.35.48;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.19.02.21.48;	author provos;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.19.01.36.17;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.18.22.07.24;	author provos;	state Exp;
branches;
next	;


desc
@@


1.10
log
@bye bye
@
text
@/*	$OpenBSD: tcfsflag.c,v 1.9 2000/06/20 08:28:02 fgsch Exp $	*/

/*
 *	Transparent Cryptographic File System (TCFS) for NetBSD 
 *	Author and mantainer: 	Luigi Catuogno [luicat@@tcfs.unisa.it]
 *	
 *	references:		http://tcfs.dia.unisa.it
 *				tcfs-bsd@@tcfs.unisa.it
 */

/*
 *	Base utility set v0.1
 */

#include <sys/types.h>
#include <sys/param.h>
#include <sys/mount.h>
#include <sys/wait.h>
#include <ctype.h>
#include <errno.h>
#include <fcntl.h>
#include <pwd.h>
#include <stdio.h>
#include <unistd.h>

#include <miscfs/tcfs/tcfs.h>
#include <miscfs/tcfs/tcfs_fileinfo.h>
#include "tcfsdefines.h"

tcfs_flags tcfs_getflags(int);
tcfs_flags tcfs_setflags(int, tcfs_flags);

int
flags_main(int argc, char *argv[])
{
	int fd, flag;
	tcfs_flags i;
	char cmd;

	seteuid(getuid());
	setuid(getuid());

	if (argc < 3) {
		fprintf(stderr, "tcfsflags [op]{r,x,g} file\n"
			 "\t op can either be + or -.\n\n");
		exit(1);
	}

	fd = open(argv[2], O_RDONLY);
	if (!fd) {
		fprintf(stderr, "open failed\n");
		exit(1);
	}

	i = tcfs_getflags(fd);
	if (i.flag == -1) {
		fprintf(stderr, "getflags error\n");
		close(fd);
		exit(1);
	}

	if (argv[1][0] == '-' || argv[1][0] == '+') {
		cmd = argv[1][1];
		flag = argv[1][0] == '+' ? 1 : 0;
	} else {
		flag = -1;
		cmd = argv[1][0];
	}

	switch(cmd) {
	case 'r':
		printf("%s x:%d g:%d\n", argv[2], FI_CFLAG(&i), FI_GSHAR(&i));
		exit(0);
	case 'x':
		if (flag == -1)
			flag = ~(FI_CFLAG(&i));;
		FI_SET_CF(&i, flag);
		break;
	case 'g':
		if (flag == -1)
			flag = ~(FI_GSHAR(&i));
		FI_SET_GS(&i, flag);
		break;
	default:
		fprintf(stderr, "%s: unknown option: %c\n", argv[0], cmd);
		exit(1);
	}					

	i = tcfs_setflags(fd, i);
	if (i.flag == -1) {
		fprintf(stderr, "setflags error\n");
		exit(1);
	}
	close(fd);

	exit(0);
}
@


1.9
log
@oops from my prev commit. move param.h above mount.h so NGROUPS is found.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsflag.c,v 1.8 2000/06/20 07:58:57 fgsch Exp $	*/
@


1.8
log
@add openbsd tags. rearrange headers as per style(9) and indent.
replace some strcpy by strlcpy.
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsflag.c,v 1.7 2000/06/20 01:29:14 provos Exp $	*/
d16 1
a17 1
#include <sys/param.h>
@


1.7
log
@no include <des.h> anymore
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsflag.c,v 1.6 2000/06/19 23:06:25 aaron Exp $	*/
d15 5
a19 1
#include <stdio.h>
a21 2
#include <sys/types.h>
#include <ctype.h>
d23 1
a24 3
#include <sys/param.h>
#include <sys/mount.h>
#include <sys/wait.h>
a97 1
	
@


1.6
log
@more KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsflag.c,v 1.5 2000/06/19 22:42:28 aaron Exp $	*/
a24 1
#include <des.h>
@


1.5
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: tcfsflag.c,v 1.4 2000/06/19 20:35:48 fgsch Exp $	*/
d73 1
a73 2
		printf("%s x:%d g:%d\n", argv[2],
		       FI_CFLAG(&i), FI_GSHAR(&i));
@


1.4
log
@add openbsd tag
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d32 1
a32 1
tcfs_flags tcfs_setflags(int,tcfs_flags);
d45 1
a45 1
		fprintf (stderr, "tcfsflags [op]{r,x,g} file\n"
d50 1
a50 1
	fd = open(argv[2],O_RDONLY);
d58 1
a58 1
		fprintf(stderr,"getflags error\n");
@


1.3
log
@instead of only toggle also allow + and -, for on and off.
@
text
@d1 2
@


1.2
log
@make flags work
@
text
@d35 1
a35 1
	int fd;
d37 1
d43 2
a44 1
		fprintf (stderr, "tcfsflags {r,x,g} file\n\n");
d61 9
a69 1
	switch(*argv[1]) {
d71 2
a72 2
		printf("%s x:%d g:%d\n",argv[2],
		       FI_CFLAG(&i),FI_GSHAR(&i));
d75 3
a77 1
		FI_SET_CF(&i,~(FI_CFLAG(&i)));
d80 3
a82 1
		FI_SET_GS(&i,~(FI_GSHAR(&i)));
d84 3
@


1.1
log
@Initial revision
@
text
@d38 3
d72 1
a72 1
	i = tcfs_setflags(fd,i);
d74 1
a74 1
		fprintf(stderr,"setflags error\n");
@


1.1.1.1
log
@Initial import of very much rewritten TCFS userland.  This code is still
nasty.
@
text
@@
