head	1.27;
access;
symbols
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.27.0.2
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.26.0.2
	OPENBSD_5_9_BASE:1.26
	OPENBSD_5_8:1.25.0.8
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.25.0.2
	OPENBSD_5_7_BASE:1.25
	OPENBSD_5_6:1.25.0.4
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.22.0.4
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.21.0.12
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.21.0.10
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.8
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.6
	OPENBSD_5_0:1.21.0.4
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.21.0.2
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.19.0.2
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.18.0.2
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.16.0.14
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.10
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.8
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.6
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.4
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.2
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.14.0.2
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.13.0.12
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.10
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.8
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.6
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.11.0.6
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.4
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.27
date	2016.03.15.04.19.13;	author mmcc;	state Exp;
branches;
next	1.26;
commitid	joKelboeRMdP9MD6;

1.26
date	2015.09.16.08.47.26;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	RPTpbRkz0dT3wzxQ;

1.25
date	2014.04.19.09.28.20;	author sobrado;	state Exp;
branches;
next	1.24;

1.24
date	2014.04.15.15.35.24;	author sobrado;	state Exp;
branches;
next	1.23;

1.23
date	2014.04.14.22.51.20;	author sobrado;	state Exp;
branches;
next	1.22;

1.22
date	2013.11.20.21.21.50;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2010.10.08.14.26.12;	author sobrado;	state Exp;
branches;
next	1.20;

1.20
date	2010.10.07.16.04.36;	author sobrado;	state Exp;
branches;
next	1.19;

1.19
date	2010.03.23.08.43.03;	author fgsch;	state Exp;
branches;
next	1.18;

1.18
date	2009.11.12.07.54.38;	author nicm;	state Exp;
branches;
next	1.17;

1.17
date	2009.10.27.23.59.39;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2007.02.06.20.55.13;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2007.02.06.20.29.59;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2006.03.16.01.23.59;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.12.20.58.09;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.03.02.56.09;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.04.08.15.59.05;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.16.21.27.47;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.12.30.08.17.32;	author pvalchev;	state Exp;
branches;
next	1.8;

1.8
date	2001.11.19.19.02.14;	author mpech;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.02.19.41.06;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.30.07.17.03;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.18.17.17.39;	author pvalchev;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.12.05.17.10;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.01.15.23.42.34;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.34.21;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.23;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.23;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.27
log
@ o clean up a little whitespace and formatting
 o move some declarations out of hexdump.h
 o mark some declarations as __dead or static

from Michal Mazurek, with input from and ok tb@@
@
text
@/*	$OpenBSD: odsyntax.c,v 1.26 2015/09/16 08:47:26 schwarze Exp $	*/
/*	$NetBSD: odsyntax.c,v 1.15 2001/12/07 15:14:29 bjh21 Exp $	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>

#include <ctype.h>
#include <err.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include "hexdump.h"

#define PADDING	"         "

int odmode;

static void		 odadd(const char *);
static void		 odoffset(int, char ***);
static __dead void	 oldusage(void);
static void		 posixtypes(char *);

/*
 * formats used for -t
 */
static const char *fmt[4][4] = {
	{
		"16/1 \"%3d \" \"\\n\"",
		"8/2  \"  %05d \" \"\\n\"",
		"4/4  \"     %010d \" \"\\n\"",
		"2/8  \" %019d \" \"\\n\""
	}, {
		"16/1 \"%03o \" \"\\n\"",
		"8/2  \" %06o \" \"\\n\"",
		"4/4  \"    %011o\" \"\\n\"",
		"2/8  \" %022o \" \"\\n\""
	}, {
		"16/1 \"%03u \" \"\\n\"",
		"8/2  \"  %05u \" \"\\n\"",
		"4/4  \"     %010u \" \"\\n\"",
		"2/8  \" %020u \" \"\\n\""
	}, {
		"16/1 \" %02x \" \"\\n\"",
		"8/2  \"   %04x \" \"\\n\"",
		"4/4  \"       %08x \" \"\\n\"",
		"2/8  \" %16x \" \"\\n\""
	}
};

void
oldsyntax(int argc, char ***argvp)
{
	static char empty[] = "", padding[] = PADDING;
	int ch;
	char *p, **argv;

#define	TYPE_OFFSET	7
	add("\"%07.7_Ao\n\"");
	add("\"%07.7_ao  \"");

	odmode = 1;
	argv = *argvp;
	while ((ch = getopt(argc, argv,
	    "A:aBbcDdeFfHhIij:LlN:Oost:vXx")) != -1)
		switch (ch) {
		case 'A':
			switch (*optarg) {
			case 'd': case 'o': case 'x':
				fshead->nextfu->fmt[TYPE_OFFSET] = *optarg;
				fshead->nextfs->nextfu->fmt[TYPE_OFFSET] =
				    *optarg;
				break;
			case 'n':
				fshead->nextfu->fmt = empty;
				fshead->nextfs->nextfu->fmt = padding;
				break;
			default:
				errx(1, "%s: invalid address base", optarg);
			}
			break;
		case 'a':
			odadd("16/1 \"%3_u \" \"\\n\"");
			break;
		case 'B':
		case 'o':
			odadd("8/2 \" %06o \" \"\\n\"");
			break;
		case 'b':
			odadd("16/1 \"%03o \" \"\\n\"");
			break;
		case 'c':
			odadd("16/1 \"%3_c \" \"\\n\"");
			break;
		case 'd':
			odadd("8/2 \"  %05u \" \"\\n\"");
			break;
		case 'D':
			odadd("4/4 \"     %010u \" \"\\n\"");
			break;
		case 'e':
		case 'F':
			odadd("2/8 \"          %21.14e \" \"\\n\"");
			break;
		case 'f':
			odadd("4/4 \" %14.7e \" \"\\n\"");
			break;
		case 'H':
		case 'X':
			odadd("4/4 \"       %08x \" \"\\n\"");
			break;
		case 'h':
		case 'x':
			odadd("8/2 \"   %04x \" \"\\n\"");
			break;
		case 'I':
		case 'L':
		case 'l':
			odadd("4/4 \"    %11d \" \"\\n\"");
			break;
		case 'i':
			odadd("8/2 \" %6d \" \"\\n\"");
			break;
		case 'j':
			if ((skip = strtol(optarg, &p, 0)) < 0)
				errx(1, "%s: bad skip value", optarg);
			switch(*p) {
			case 'b':
				skip *= 512;
				break;
			case 'k':
				skip *= 1024;
				break;
			case 'm':
				skip *= 1048576;
				break;
			}
			break;
		case 'N':
			if ((length = atoi(optarg)) < 0)
				errx(1, "%s: bad length value", optarg);
			break;
		case 'O':
			odadd("4/4 \"    %011o \" \"\\n\"");
			break;
		case 's':
			odadd("8/2 \"  %05d \" \"\\n\"");
			break;
		case 't':
			posixtypes(optarg);
			break;
		case 'v':
			vflag = ALL;
			break;
		default:
			oldusage();
		}

	if (fshead->nextfs->nextfs == NULL)
		odadd(" 8/2 \"%06o \" \"\\n\"");

	argc -= optind;
	*argvp += optind;

	if (argc)
		odoffset(argc, argvp);
}

/*
 * Interpret a POSIX-style -t argument.
 */
static void
posixtypes(char *type_string)
{
	int x, y, nbytes;

	while (*type_string) {
		switch (*type_string) {
		case 'a':
			type_string++;
			odadd("16/1 \"%3_u \" \"\\n\"");
			break;
		case 'c':
			type_string++;
			odadd("16/1 \"%3_c \" \"\\n\"");
			break;
		case 'f':
			type_string++;
			if        (*type_string == 'F' ||
				   *type_string == '4') {
				type_string++;
				odadd("4/4 \" %14.7e\" \"\\n\"");
			} else if (*type_string == 'L' ||
				   *type_string == '8') {
				type_string++;
				odadd("2/8 \" %16.14e\" \"\\n\"");
			} else if (*type_string == 'D')
				/* long doubles vary in size */
				oldusage();
			else
				odadd("2/8 \" %16.14e\" \"\\n\"");
			break;
		case 'd':
			x = 0;
			goto extensions;
		case 'o':
			x = 1;
			goto extensions;
		case 'u':
			x = 2;
			goto extensions;
		case 'x':
			x = 3;
		extensions:
			type_string++;
			y = 2;
			if (isupper((unsigned char)*type_string)) {
				switch(*type_string) {
				case 'C':
					nbytes = sizeof(char);
					break;
				case 'S':
					nbytes = sizeof(short);
					break;
				case 'I':
					nbytes = sizeof(int);
					break;
				case 'L':
					nbytes = sizeof(long);
					break;
				default:
					warnx("Bad type-size qualifier '%c'",
					    *type_string);
					oldusage();
				}
				type_string++;
			} else if (isdigit((unsigned char)*type_string))
				nbytes = strtol(type_string, &type_string, 10);
			else
				nbytes = 4;

			switch (nbytes) {
			case 1:
				y = 0;
				break;
			case 2:
				y = 1;
				break;
			case 4:
				y = 2;
				break;
			case 8:
				y = 3;
				break;
			default:
				warnx("%d-byte integer formats are not "
				    "supported", nbytes);
				oldusage();
			}
			odadd(fmt[x][y]);
			break;
		default:
			oldusage();
		}
	}
}

static __dead void
oldusage(void)
{
	extern char *__progname;
	fprintf(stderr, "usage: %s [-aBbcDdeFfHhIiLlOosvXx] [-A base] "
	    "[-j offset] [-N length]\n"
	    "\t[-t type_string] [file ...]\n", __progname);
	exit(1);
}

static void
odoffset(int argc, char ***argvp)
{
	char *num, *p;
	int base;
	char *end;

	/*
	 * The offset syntax of od(1) was genuinely bizarre.  First, if
	 * it started with a plus it had to be an offset.  Otherwise, if
	 * there were at least two arguments, a number or lower-case 'x'
	 * followed by a number makes it an offset.  By default it was
	 * octal; if it started with 'x' or '0x' it was hex.  If it ended
	 * in a '.', it was decimal.  If a 'b' or 'B' was appended, it
	 * multiplied the number by 512 or 1024 byte units.  There was
	 * no way to assign a block count to a hex offset.
	 *
	 * We assume it's a file if the offset is bad.
	 */
	p = argc == 1 ? (*argvp)[0] : (*argvp)[1];
	if (!p)
		return;

	if (*p != '+' && (argc < 2 ||
	    (!isdigit((unsigned char)p[0]) &&
	    (p[0] != 'x' || !isxdigit((unsigned char)p[1])))))
		return;

	base = 0;
	/*
	 * skip over leading '+', 'x[0-9a-fA-f]' or '0x', and
	 * set base.
	 */
	if (p[0] == '+')
		++p;
	if (p[0] == 'x' && isxdigit((unsigned char)p[1])) {
		++p;
		base = 16;
	} else if (p[0] == '0' && p[1] == 'x') {
		p += 2;
		base = 16;
	}

	/* skip over the number */
	if (base == 16)
		for (num = p; isxdigit((unsigned char)*p); ++p);
	else
		for (num = p; isdigit((unsigned char)*p); ++p);

	/* check for no number */
	if (num == p)
		return;

	/* if terminates with a '.', base is decimal */
	if (*p == '.') {
		if (base)
			return;
		base = 10;
	}

	skip = strtol(num, &end, base ? base : 8);

	/* if end isn't the same as p, we got a non-octal digit */
	if (end != p) {
		skip = 0;
		return;
	}

	if (*p == '.')
		++p;
	if (*p) {
		if (*p == 'B') {
			skip *= 1024;
			++p;
		} else if (*p == 'b') {
			skip *= 512;
			++p;
		}
	}
	if (*p) {
		skip = 0;
		return;
	}
	/*
	 * If the offset uses a non-octal base, the base of the offset
	 * is changed as well.  This isn't pretty, but it's easy.
	 */
	if (base == 16) {
		fshead->nextfu->fmt[TYPE_OFFSET] = 'x';
		fshead->nextfs->nextfu->fmt[TYPE_OFFSET] = 'x';
	} else if (base == 10) {
		fshead->nextfu->fmt[TYPE_OFFSET] = 'd';
		fshead->nextfs->nextfu->fmt[TYPE_OFFSET] = 'd';
	}

	/* Terminate file list. */
	(*argvp)[argc > 1] = NULL;
}

static void
odadd(const char *fmt)
{
	static int needpad;

	if (needpad)
		add("\""PADDING"\"");
	add(fmt);
	needpad = 1;
}
@


1.26
log
@Fix two bugs (at least 13 year old) of the [+]offset[.][Bb] XSI offset syntax:
Make it work with decimal offsets and with standard input.
Also fix the documentation; it showed the argument in the wrong place.
According to XSI (and our code), it must come *after* the filename,
and it can be used with at most one single filename.
Remove it from the SYNOPSIS; it only provides a subset of -j,
is less standard and contains lots of traps (i counted 7 distinct traps).
Instead, mention it as an alternative below -j where it belongs.
Also fix some markup quirks (that's what originally made me find this mess).
Feedback and OK sobrado@@ jmc@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.25 2014/04/19 09:28:20 sobrado Exp $	*/
d47 4
a50 4
static void odoffset(int, char ***);
static void posixtypes(char *);
static void odadd(const char *);

d296 1
a296 1
void
@


1.25
log
@use an appropriate name for this variable.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.24 2014/04/15 15:35:24 sobrado Exp $	*/
d302 1
a302 1
	    "\t[-t type_string] [[+]offset[.][Bb]] [file ...]\n", __progname);
d374 2
d402 1
a402 1
	(*argvp)[1] = NULL;
@


1.24
log
@add -s (two-byte signed decimal display) to od(1), as mandated by POSIX;
remove cross reference to strings(1), it only made sense in the context of
the old 4.3BSD od(1)'s -s flag.

ok jmc@@, millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.23 2014/04/14 22:51:20 sobrado Exp $	*/
d45 1
a45 1
int deprecated;
d90 1
a90 1
	deprecated = 1;
@


1.23
log
@add a description for this filter similar to what POSIX and FreeBSD use;
do not mark od(1) as deprecated, and remove language that says it is really
just hexdump(1); do not mention options supported by the old 4.3BSD od(1)
that we no longer provide.

ok jmc@@, millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.22 2013/11/20 21:21:50 deraadt Exp $	*/
d93 1
a93 1
	    "A:aBbcDdeFfHhIij:LlN:Oot:vXx")) != -1)
d174 3
d300 1
a300 1
	fprintf(stderr, "usage: %s [-aBbcDdeFfHhIiLlOovXx] [-A base] "
@


1.22
log
@unsigned char casts needed for isdigit()
ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.21 2010/10/08 14:26:12 sobrado Exp $	*/
d93 1
a93 1
	    "A:aBbcDdeFfHhIij:LlN:OoPpst:wvXx")) != -1)
a179 5
		case 'P':
		case 'p':
		case 's':
		case 'w':
		case '?':
a180 6
			warnx("od(1) has been deprecated for hexdump(1).");
			if (ch != '?')
				warnx(
				    "hexdump(1) compatibility doesn't"
				    " support the -%c option%s",
				    ch, ch == 's' ? "; see strings(1)." : ".");
@


1.21
log
@remove three superfluous trailing tabs, no binary change.
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.20 2010/10/07 16:04:36 sobrado Exp $	*/
d253 1
a253 1
			if (isupper(*type_string)) {
d273 1
a273 1
			} else if (isdigit(*type_string))
@


1.20
log
@usage must fit on a 80-column display.
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.19 2010/03/23 08:43:03 fgsch Exp $	*/
a132 1
			
@


1.19
log
@Add POSIX -A option to od and simplify a bit.  From FreeBSD.
jmc@@ and millert@@ input and ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.18 2009/11/12 07:54:38 nicm Exp $	*/
d310 2
a311 2
	    "[-j offset] [-N length] [-t type_string]\n"
	    "\t[[+]offset[.][Bb]] [file ...]\n", __progname);
@


1.18
log
@Use the default 4 correctly if no type size is given to od -t.

ok deraadt miod
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.17 2009/10/27 23:59:39 deraadt Exp $	*/
d43 2
d49 1
a49 1
static void odprecede(void);
d82 1
d86 4
d93 1
a93 1
	    "aBbcDdeFfHhIij:LlN:OoPpst:wvXx")) != -1)
d95 15
d111 1
a111 2
			odprecede();
			add("16/1 \"%3_u \" \"\\n\"");
d115 1
a115 2
			odprecede();
			add("8/2 \" %06o \" \"\\n\"");
d118 1
a118 2
			odprecede();
			add("16/1 \"%03o \" \"\\n\"");
d121 1
a121 2
			odprecede();
			add("16/1 \"%3_c \" \"\\n\"");
d124 1
a124 2
			odprecede();
			add("8/2 \"  %05u \" \"\\n\"");
d127 1
a127 2
			odprecede();
			add("4/4 \"     %010u \" \"\\n\"");
d131 1
a131 2
			odprecede();
			add("2/8 \"          %21.14e \" \"\\n\"");
d135 1
a135 2
			odprecede();
			add("4/4 \" %14.7e \" \"\\n\"");
d139 1
a139 2
			odprecede();
			add("4/4 \"       %08x \" \"\\n\"");
d143 1
a143 2
			odprecede();
			add("8/2 \"   %04x \" \"\\n\"");
d148 1
a148 2
			odprecede();
			add("4/4 \"    %11d \" \"\\n\"");
d151 1
a151 2
			odprecede();
			add("8/2 \" %6d \" \"\\n\"");
d173 1
a173 2
			odprecede();
			add("4/4 \"    %011o \" \"\\n\"");
d196 2
a197 4
	if (!fshead) {
		add("\"%07.7_Ao\n\"");
		add("\"%07.7_ao  \" 8/2 \"%06o \" \"\\n\"");
	}
a214 1
		odprecede();
d218 1
a218 1
			add("16/1 \"%3_u \" \"\\n\"");
d222 1
a222 1
			add("16/1 \"%3_c \" \"\\n\"");
d229 1
a229 1
				add("4/4 \" %14.7e\" \"\\n\"");
d233 1
a233 1
				add("2/8 \" %16.14e\" \"\\n\"");
d238 1
a238 1
				add("2/8 \" %16.14e\" \"\\n\"");
d297 1
a297 1
			add(fmt[x][y]);
d309 2
a310 2
	fprintf(stderr, "usage: %s [-aBbcDdeFfHhIiLlOovXx] [-j offset] "
	    "[-N length] [-t type_string]\n"
a399 1
#define	TYPE_OFFSET	7
d413 1
a413 1
odprecede(void)
d415 1
a415 1
	static int first = 1;
d417 4
a420 6
	if (first) {
		first = 0;
		add("\"%07.7_Ao\n\"");
		add("\"%07.7_ao  \"");
	} else
		add("\"         \"");
@


1.17
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.16 2007/02/06 20:55:13 jmc Exp $	*/
d270 2
@


1.16
log
@remove a comment which is no longer true; ok otto
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.15 2007/02/06 20:29:59 jmc Exp $	*/
a31 5

#ifndef lint
/*static char sccsid[] = "from: @@(#)odsyntax.c	5.4 (Berkeley) 3/8/91";*/
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.15 2007/02/06 20:29:59 jmc Exp $";
#endif /* not lint */
@


1.15
log
@sync synopsis and usage();
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.14 2006/03/16 01:23:59 deraadt Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.14 2006/03/16 01:23:59 deraadt Exp $";
d118 1
a118 1
		case 'e':		/* undocumented in od */
@


1.14
log
@clean up the od(1) usage form, it was ugly with a capital u
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.13 2003/06/12 20:58:09 deraadt Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.13 2003/06/12 20:58:09 deraadt Exp $";
d306 1
a306 1
	fprintf(stderr, "usage: %s [-aBbcDdeFfHhIiLlOovXx] [-j skip] "
d308 1
a308 1
	    "          [[+]offset[.][Bb]] [file ...]\n", __progname);
@


1.13
log
@de-register and ansification; millert ok
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.12 2003/06/03 02:56:09 millert Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.12 2003/06/03 02:56:09 millert Exp $";
d186 2
a187 1
"hexdump(1) compatibility doesn't support the -%c option%s\n",
d307 2
a308 2
			"[-N length] [-t type_string] "
			"[[+]offset[.][Bb]] [file ...]\n", __progname);
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.11 2002/04/08 15:59:05 millert Exp $	*/
d35 1
a35 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.11 2002/04/08 15:59:05 millert Exp $";
d83 1
a83 3
oldsyntax(argc, argvp)
	int argc;
	char ***argvp;
d207 1
a207 2
posixtypes(type_string)
	char *type_string;
d302 1
a302 1
oldusage()
d312 1
a312 3
odoffset(argc, argvp)
	int argc;
	char ***argvp;
d410 1
a410 1
odprecede()
@


1.11
log
@Correct usage() for od syntax; Peter Stromberg
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.10 2002/02/16 21:27:47 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d35 1
a35 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.10 2002/02/16 21:27:47 millert Exp $";
@


1.10
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.9 2001/12/30 08:17:32 pvalchev Exp $	*/
d39 1
a39 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.9 2001/12/30 08:17:32 pvalchev Exp $";
d194 1
a194 1
			usage();
d241 1
a241 1
				usage();
d276 1
a276 1
					usage();
d298 1
a298 1
				usage();
d303 1
a303 1
			usage();
d306 10
@


1.9
log
@Changes come from NetBSD, Lite-2 and me.  ok deraadt
od(1):
- Enable support for printing 8-byte integers.
- Added -C option for hexadecimal+ASCII display.
- Fix od so it displays short files containing nulls.
- POSIXification: The C, S, I and L modifiers now behave correctly,
specifying output in units of a char, short, int and long (as defined by
the host system) respectively.  Support -N, equivalent to hexdump's
-n (format only COUNT bytes of input).  Add -j option which does the
same thing as -s in hexdump (skipping some of the input).
hexdump(1):
- POSIX.2 doesn't specify hexdump so it can't be compatible with it...
- add missing trailing \n in usage() printf
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.8 2001/11/19 19:02:14 mpech Exp $	*/
d39 1
a39 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.8 2001/11/19 19:02:14 mpech Exp $";
d54 3
a56 3
static void odoffset __P((int, char ***));
static void posixtypes __P((char *));
static void odprecede __P((void));
@


1.8
log
@kill more registers

millert@@ ok
@
text
@d1 2
a2 1
/*	$OpenBSD: odsyntax.c,v 1.7 2001/11/02 19:41:06 mickey Exp $	*/
d5 2
a6 2
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
d39 1
a39 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.7 2001/11/02 19:41:06 mickey Exp $";
d43 1
a43 2
#include <stdlib.h>
#include <stdio.h>
d46 4
d54 32
a90 4
	extern enum _vflag vflag;
	extern FS *fshead;
	extern char *optarg;
	extern int optind;
d92 1
a92 2
	char **argv;
	static void odprecede();
d96 2
a97 1
	while ((ch = getopt(argc, argv, "aBbcDdeFfHhIiLlOoPpswvXx")) != -1)
d154 19
d177 3
d189 1
a189 1
			warnx("od(1) has been deprecated for hexdump(1)");
d191 2
a192 2
				warnx("hexdump(1) compatibility doesn't"
				    "support the -%c option%s",
d205 2
a206 1
	odoffset(argc, argvp);
d209 8
a216 2
#define	ishexdigit(c) \
	(c >= '0' && c <= '9' || c >= 'a' && c <= 'f' || c >= 'A' && c <= 'F')
d218 91
a308 1
void
a312 1
	extern off_t skip;
d327 1
a327 1
	 * We assumes it's a file if the offset is bad.
d329 1
a329 1
	p = **argvp;
d332 1
d334 2
a335 1
	    (!isdigit(p[0]) && (p[0] != 'x' || !ishexdigit(p[1])))))
d345 1
a345 1
	if (p[0] == 'x' && ishexdigit(p[1])) {
d355 1
a355 1
		for (num = p; ishexdigit(*p); ++p);
d357 1
a357 1
		for (num = p; isdigit(*p); ++p);
d373 1
a373 1
	if (end != p)
d375 9
a383 6
	else {
		if (*p) {
			if (*p == 'b')
				skip *= 512;
			else if (*p == 'B')
				skip *= 1024;
d386 9
a394 9
		if (*p)
			skip = 0;
		else {
			++*argvp;
			/*
			 * If the offset uses a non-octal base, the base of
			 * the offset is changed as well.  This isn't pretty,
			 * but it's easy.
			 */
d396 6
a401 8
			if (base == 16) {
				fshead->nextfu->fmt[TYPE_OFFSET] = 'x';
				fshead->nextfs->nextfu->fmt[TYPE_OFFSET] = 'x';
			} else if (base == 10) {
				fshead->nextfu->fmt[TYPE_OFFSET] = 'd';
				fshead->nextfs->nextfu->fmt[TYPE_OFFSET] = 'd';
			}
		}
d403 3
@


1.7
log
@replace fprintf(stderr)/exit w/ err/warn
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.6 2001/09/30 07:17:03 pvalchev Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.6 2001/09/30 07:17:03 pvalchev Exp $";
d163 1
a163 1
	register char *num, *p;
@


1.6
log
@-Wall cleanup; ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.5 2001/07/18 17:17:39 pvalchev Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.5 2001/07/18 17:17:39 pvalchev Exp $";
d43 1
d45 1
a45 1
#include <stdio.h>
d135 1
a135 2
			(void)fprintf(stderr,
			    "od: od(1) has been deprecated for hexdump(1).\n");
d137 2
a138 2
				(void)fprintf(stderr,
"od: hexdump(1) compatibility doesn't support the -%c option%s\n",
@


1.5
log
@-Wall cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.4 2001/07/12 05:17:10 deraadt Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.4 2001/07/12 05:17:10 deraadt Exp $";
d49 1
@


1.4
log
@first pass at a -Wall cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.3 1997/01/15 23:42:34 millert Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.3 1997/01/15 23:42:34 millert Exp $";
d56 1
a56 1
	extern int length, optind;
@


1.3
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: odsyntax.c,v 1.2 1996/06/26 05:34:21 deraadt Exp $	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.2 1996/06/26 05:34:21 deraadt Exp $";
d43 1
d156 1
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d38 1
a38 1
static char rcsid[] = "$OpenBSD: odsyntax.c,v 1.1.1.1 1995/10/18 08:45:23 deraadt Exp $";
d62 1
a62 1
	while ((ch = getopt(argc, argv, "aBbcDdeFfHhIiLlOoPpswvXx")) != EOF)
@


1.1
log
@Initial revision
@
text
@d1 2
d38 1
a38 1
static char rcsid[] = "$Id: odsyntax.c,v 1.4 1993/08/01 18:14:46 mycroft Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
