head	1.26;
access;
symbols
	OPENBSD_6_2_BASE:1.26
	OPENBSD_6_1:1.26.0.8
	OPENBSD_6_1_BASE:1.26
	OPENBSD_6_0:1.26.0.4
	OPENBSD_6_0_BASE:1.26
	OPENBSD_5_9:1.26.0.2
	OPENBSD_5_9_BASE:1.26
	OPENBSD_5_8:1.25.0.6
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.25.0.2
	OPENBSD_5_7_BASE:1.25
	OPENBSD_5_6:1.24.0.16
	OPENBSD_5_6_BASE:1.24
	OPENBSD_5_5:1.24.0.14
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.24.0.10
	OPENBSD_5_4_BASE:1.24
	OPENBSD_5_3:1.24.0.8
	OPENBSD_5_3_BASE:1.24
	OPENBSD_5_2:1.24.0.6
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.24
	OPENBSD_5_1:1.24.0.4
	OPENBSD_5_0:1.24.0.2
	OPENBSD_5_0_BASE:1.24
	OPENBSD_4_9:1.21.0.2
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.20.0.4
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.19.0.12
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.8
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.6
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.4
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.18.0.2
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.14.0.14
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.12
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.10
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.8
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.13.0.6
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.4
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.13.0.2
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.12.0.4
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_8:1.11.0.4
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.26
date	2015.09.12.11.59.38;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	twhOyGZNTzxVTjEc;

1.25
date	2014.11.15.14.41.02;	author bentley;	state Exp;
branches;
next	1.24;
commitid	HuCemPIiOkto0SJD;

1.24
date	2011.05.06.18.11.43;	author otto;	state Exp;
branches;
next	1.23;

1.23
date	2011.05.06.15.46.29;	author otto;	state Exp;
branches;
next	1.22;

1.22
date	2011.05.04.06.49.11;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2010.09.03.11.09.29;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2010.02.25.16.58.56;	author naddy;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.31.19.20.11;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2007.02.06.20.22.19;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2007.02.06.20.13.00;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2007.02.06.20.07.15;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2007.01.28.16.37.09;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.03.02.56.09;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2001.12.30.08.17.32;	author pvalchev;	state Exp;
branches;
next	1.12;

1.12
date	2000.11.09.17.52.14;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.03.11.21.40.07;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.03.07.21.11.10;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.07.21.12.43.26;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.07.04.11.53.55;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.06.05.01.21.26;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	98.11.04.22.36.40;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	98.09.26.19.54.51;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	97.09.02.15.31.51;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.12.10.09.06.30;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.34.18;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.45.23;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.45.23;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.26
log
@Old diff found in my tree: Add HISTORY; info from the CSRG CDs.
@
text
@.\"	$OpenBSD: hexdump.1,v 1.25 2014/11/15 14:41:02 bentley Exp $
.\"	$NetBSD: hexdump.1,v 1.14 2001/12/07 14:46:24 bjh21 Exp $
.\"
.\" Copyright (c) 1989, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	from: @@(#)hexdump.1	8.2 (Berkeley) 4/18/94
.\"
.Dd $Mdocdate: November 15 2014 $
.Dt HEXDUMP 1
.Os
.Sh NAME
.Nm hexdump
.Nd ascii, decimal, hexadecimal, octal dump
.Sh SYNOPSIS
.Nm hexdump
.Bk -words
.Op Fl bCcdovx
.Op Fl e Ar format_string
.Op Fl f Ar format_file
.Op Fl n Ar length
.Op Fl s Ar offset
.Op Ar
.Ek
.Sh DESCRIPTION
The
.Nm
utility is a filter which displays the specified files, or
the standard input, if no files are specified, in a user-specified
format.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl b
.Em One-byte octal display .
Display the input offset in hexadecimal, followed by sixteen
space-separated, three column, zero-filled, bytes of input data,
in octal, per line.
.It Fl C
.Em Canonical hex+ASCII display .
Display the input offset in hexadecimal, followed by sixteen
space-separated, two column, hexadecimal bytes, followed by the
same sixteen bytes in %_p format enclosed in
.Sq |
characters.
.It Fl c
.Em One-byte character display .
Display the input offset in hexadecimal, followed by sixteen
space-separated, three column, space-filled, characters of input
data per line.
.It Fl d
.Em Two-byte decimal display .
Display the input offset in hexadecimal, followed by eight
space-separated, five column, zero-filled, two-byte units
of input data, in unsigned decimal, per line.
.It Fl e Ar format_string
Specify a format string to be used for displaying data.
.It Fl f Ar format_file
Specify a file that contains one or more newline separated format strings.
Empty lines and lines whose first non-blank character is a hash mark
.Pq Ql #
are ignored.
.It Fl n Ar length
Interpret only
.Ar length
bytes of input.
By default,
.Ar length
is interpreted as a decimal number.
With a leading
.Cm 0x
or
.Cm 0X ,
.Ar length
is interpreted as a hexadecimal number,
otherwise, with a leading
.Cm 0 ,
.Ar length
is interpreted as an octal number.
.It Fl o
.Em Two-byte octal display .
Display the input offset in hexadecimal, followed by eight
space-separated, six column, zero-filled, two byte quantities of
input data, in octal, per line.
.It Fl s Ar offset
Skip
.Ar offset
bytes from the beginning of the input.
By default,
.Ar offset
is interpreted as a decimal number.
With a leading
.Cm 0x
or
.Cm 0X ,
.Ar offset
is interpreted as a hexadecimal number,
otherwise, with a leading
.Cm 0 ,
.Ar offset
is interpreted as an octal number.
Appending the character
.Cm b ,
.Cm k ,
or
.Cm m
to
.Ar offset
causes it to be interpreted as a multiple of
.Li 512 ,
.Li 1024 ,
or
.Li 1048576 ,
respectively.
.It Fl v
The
.Fl v
option causes hexdump to display all input data.
Without the
.Fl v
option, any number of groups of output lines, which would be
identical to the immediately preceding group of output lines (except
for the input offsets), are replaced with a line comprised of a
single asterisk
.Pq Ql * .
.It Fl x
.Em Two-byte hexadecimal display .
Display the input offset in hexadecimal, followed by eight, space
separated, four column, zero-filled, two-byte quantities of input
data, in hexadecimal, per line.
.El
.Pp
For each input file,
.Nm
sequentially copies the input to standard output, transforming the
data according to the format strings specified by the
.Fl e
and
.Fl f
options, in the order that they were specified.
.Ss Formats
A format string contains any number of format units, separated by
whitespace.
A format unit contains up to three items: an iteration count, a byte
count, and a format.
.Pp
The iteration count is an optional positive integer, which defaults to
one.
Each format is applied iteration count times.
.Pp
The byte count is an optional positive integer.
If specified it defines the number of bytes to be interpreted by
each iteration of the format.
.Pp
If an iteration count and/or a byte count is specified, a single slash
.Pq Sq /
must be placed after the iteration count and/or before the byte count
to disambiguate them.
Any whitespace before or after the slash is ignored.
.Pp
The format is required and must be surrounded by double quote
.Pq \&"\& \&"
marks
(the quote mark is a special character in many shell programs,
and may have to be escaped from the shell).
It is interpreted as a fprintf-style format string (see
.Xr fprintf 3 ) ,
with the
following exceptions:
.Bl -bullet -offset indent
.It
An asterisk (*) may not be used as a field width or precision.
.It
A byte count or field precision
.Em is
required for each
.Sq s
conversion character (unlike the
.Xr fprintf 3
default which prints the entire string if the precision is unspecified).
.It
The conversion characters
.Sq h ,
.Sq l ,
.Sq n ,
.Sq p ,
and
.Sq q
are not supported.
.It
The single character escape sequences
described in the C standard are supported:
.Pp
.Bl -tag -width "Xalert characterXXX" -offset indent -compact
.It NUL
\e0
.It Aq alert character
\ea
.It Aq backspace
\eb
.It Aq form-feed
\ef
.It Aq newline
\en
.It Aq carriage return
\er
.It Aq tab
\et
.It Aq vertical tab
\ev
.El
.El
.Pp
.Nm
also supports the following additional conversion strings:
.Bl -tag -width Fl
.It Cm \&_a Ns Op Cm dox
Display the input offset, cumulative across input files, of the
next byte to be displayed.
The appended characters
.Cm d ,
.Cm o ,
and
.Cm x
specify the display base
as decimal, octal or hexadecimal respectively.
.It Cm \&_A Ns Op Cm dox
Identical to the
.Cm \&_a
conversion string except that it is only performed
once, when all of the input data has been processed.
.It Cm \&_c
Output characters in the default character set.
Nonprinting characters are displayed in three character, zero-padded
octal, except for those representable by standard escape notation
(see above),
which are displayed as two character strings.
.It Cm _p
Output characters in the default character set.
Nonprinting characters are displayed as a single dot
.Ql \&. .
.It Cm _u
Output US ASCII characters, with the exception that control characters are
displayed using the following, lower-case, names.
Other non-printable characters are displayed as hexadecimal strings.
.Bd -literal -offset 3n
000 nul  001 soh  002 stx  003 etx  004 eot  005 enq
006 ack  007 bel  008 bs   009 ht   00A lf   00B vt
00C ff   00D cr   00E so   00F si   010 dle  011 dc1
012 dc2  013 dc3  014 dc4  015 nak  016 syn  017 etb
018 can  019 em   01A sub  01B esc  01C fs   01D gs
01E rs   01F us   07F del
.Ed
.El
.Pp
The default and supported byte counts for the conversion characters
are as follows:
.Bl -tag -width  "Xc,_Xc,_Xc,_Xc,_Xc,_Xc" -offset indent
.It Li \&%_c , \&%_p , \&%_u , \&%c
One byte counts only.
.It Xo
.Li \&%d , \&%i , \&%o ,
.Li \&%u , \&%X , \&%x
.Xc
Four byte default, one, two, four and eight byte counts supported.
.It Xo
.Li \&%E , \&%e , \&%f ,
.Li \&%G , \&%g
.Xc
Eight byte default, four byte counts supported.
.El
.Pp
The amount of data interpreted by each format string is the sum of the
data required by each format unit, which is the iteration count times the
byte count, or the iteration count times the number of bytes required by
the format if the byte count is not specified.
.Pp
The input is manipulated in
.Dq blocks ,
where a block is defined as the
largest amount of data specified by any format string.
Format strings interpreting less than an input block's worth of data,
whose last format unit both interprets some number of bytes and does
not have a specified iteration count, have the iteration count
incremented until the entire input block has been processed or there
is not enough data remaining in the block to satisfy the format string.
.Pp
If, either as a result of user specification or hexdump modifying
the iteration count as described above, an iteration count is
greater than one, no trailing whitespace characters are output
during the last iteration.
.Pp
It is an error to specify a byte count as well as multiple conversion
characters or strings unless all but one of the conversion characters
or strings is
.Cm \&_a
or
.Cm \&_A .
.Pp
If, as a result of the specification of the
.Fl n
option or end-of-file being reached, input data only partially
satisfies a format string, the input block is zero-padded sufficiently
to display all available data (i.e., any format units overlapping the
end of data will display some number of the zero bytes).
.Pp
Further output by such format strings is replaced by an equivalent
number of spaces.
An equivalent number of spaces is defined as the number of spaces
output by an
.Cm s
conversion character with the same field width
and precision as the original conversion character or conversion
string but with any
.Ql + ,
.Ql \&\ \& ,
.Ql #
conversion flag characters
removed, and referencing a NULL string.
.Pp
If no format strings are specified, the default display is equivalent
to specifying the
.Fl x
option.
.Sh EXIT STATUS
.Ex -std hexdump
.Sh EXAMPLES
Display characters using a fieldwidth of 4,
and using special names for control characters:
.Pp
.Dl $ hexdump -e '"%4_u"' file
.Pp
An example file for use with the
.Fl f
option, to display the input in perusal format:
.Bd -literal -offset indent
"%06.6_ao "  12/1 "%3_u "
"\et\et" "%_p "
"\en"
.Ed
.Pp
An example file for use with the
.Fl f
option, which implements the equivalent of the
.Fl x
option:
.Bd -literal -offset indent
"%07.7_Ax\en"
"%07.7_ax " 8/2 "   %04x " "\en"
.Ed
.Sh SEE ALSO
.Xr od 1
.Sh HISTORY
The
.Nm
utility first appeared in
.Bx 4.3 Reno .
@


1.25
log
@Reduce instances of `` '' in manuals.

troff displays these as typographic quotes, but nroff implementations
almost always print them literally, which rarely has the intended effect
with modern fonts, even in stock xterm.

These uses of `` '' can be replaced either with more semantic alternatives
or with Dq, which prints typographic quotes in a UTF-8 locale (but will
automatically fall back to `` '' in an ASCII locale).

improvements and ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.24 2011/05/06 18:11:43 otto Exp $
d33 1
a33 1
.Dd $Mdocdate: May 6 2011 $
d377 5
@


1.24
log
@Fix description and table of _u; with jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.23 2011/05/06 15:46:29 otto Exp $
d67 3
a69 1
same sixteen bytes in %_p format enclosed in ``|'' characters.
@


1.23
log
@sync -x, default and example in man page as they should be;
ok jmc@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.22 2011/05/04 06:49:11 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 4 2011 $
d267 9
a275 10
Characters greater than 0xff, hexadecimal, are displayed as hexadecimal
strings.
.Bl -column \&000_nu \&001_so \&002_st \&003_et \&004_eo
.It \&000\ nul\t001\ soh\t002\ stx\t003\ etx\t004\ eot\t005\ enq
.It \&006\ ack\t007\ bel\t008\ bs\t009\ ht\t00A\ lf\t00B\ vt
.It \&00C\ ff\t00D\ cr\t00E\ so\t00F\ si\t010\ dle\t011\ dc1
.It \&012\ dc2\t013\ dc3\t014\ dc4\t015\ nak\t016\ syn\t017\ etb
.It \&018\ can\t019\ em\t01A\ sub\t01B\ esc\t01C\ fs\t01D\ gs
.It \&01E\ rs\t01F\ us\t07F\ del
.El
@


1.22
log
@- note that quotes may have to be escaped from the shell and add an example
(requested by Michael W. Bombardieri, who also provided the example; otto
provided a better description)

- reword the rest of the descriptions in EXAMPLES to make them a bit clearer

ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.21 2010/09/03 11:09:29 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: September 3 2010 $
d372 1
a372 1
"%07.7_ax  " 8/2 "%04x " "\en"
@


1.21
log
@add an EXIT STATUS section for /usr/bin;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.20 2010/02/25 16:58:56 naddy Exp $
d33 1
a33 1
.Dd $Mdocdate: February 25 2010 $
d185 3
a187 1
marks.
d351 8
a358 1
Display the input in perusal format:
d365 5
a369 1
Implement the \-x option:
@


1.20
log
@The correct value of DEL is 0x7F, not 0xFF.  This is purely a documentation
issue--od(1) and hexdump(1) behave as expected.  From FreeBSD.
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.19 2007/05/31 19:20:11 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d346 1
a346 1
.Pp
@


1.19
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.18 2007/02/06 20:22:19 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d273 1
a273 1
.It \&01E\ rs\t01F\ us\t0FF\ del
@


1.18
log
@sort options and sync usage();
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.17 2007/02/06 20:13:00 jmc Exp $
d33 1
a33 1
.Dd April 18, 1994
@


1.17
log
@switch to .Ex and remove some unnecessary brackets;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.16 2007/02/06 20:07:15 jmc Exp $
a40 1
.Op Fl bcCdovx
d42 1
a43 2
.Ek
.Bk -words
a44 2
.Ek
.Bk -words
d46 2
a48 4
.Bk -words
.Op Fl s Ar skip
.Ek
.Ar file ...
d63 5
a72 5
.It Fl C
.Em Canonical hex+ASCII display .
Display the input offset in hexadecimal, followed by sixteen
space-separated, two column, hexadecimal bytes, followed by the
same sixteen bytes in %_p format enclosed in ``|'' characters.
@


1.16
log
@fix some dodgy displays;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.15 2007/01/28 16:37:09 miod Exp $
d220 1
a220 1
.Bl -tag -width "<alert character>XX" -offset indent -compact
d353 1
a353 2
.Nm
exits 0 on success and >0 if an error occurred.
@


1.15
log
@Accept a leading 0x for the -n length parameter.

Correctly check for out-of-bounds values for -s skip parameter, and use
strtoll to parse it instead of strtol since this is an off_t value.
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.14 2003/06/03 02:56:09 millert Exp $
d219 18
a236 10
.Bd -ragged -offset indent -compact
.Bl -column <alert_character>
.It NUL	\e0
.It <alert character>	\ea
.It <backspace>	\eb
.It <form-feed>	\ef
.It <newline>	\en
.It <carriage return>	\er
.It <tab>	\et
.It <vertical tab>	\ev
a237 1
.Ed
@


1.14
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.13 2001/12/30 08:17:32 pvalchev Exp $
d95 13
@


1.13
log
@Changes come from NetBSD, Lite-2 and me.  ok deraadt
od(1):
- Enable support for printing 8-byte integers.
- Added -C option for hexadecimal+ASCII display.
- Fix od so it displays short files containing nulls.
- POSIXification: The C, S, I and L modifiers now behave correctly,
specifying output in units of a char, short, int and long (as defined by
the host system) respectively.  Support -N, equivalent to hexdump's
-n (format only COUNT bytes of input).  Add -j option which does the
same thing as -s in hexdump (skipping some of the input).
hexdump(1):
- POSIX.2 doesn't specify hexdump so it can't be compatible with it...
- add missing trailing \n in usage() printf
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.12 2000/11/09 17:52:14 aaron Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.12
log
@Change all option list specifications to ".Bl -tag -width Ds". Most man
pages just needed their -width parameter tweaked to "Ds", which provides
a nice width of 6 constant characters. For consistency more than anything.
@
text
@d1 5
a5 3
.\"	$OpenBSD: hexdump.1,v 1.11 2000/03/11 21:40:07 aaron Exp $
.\" Copyright (c) 1989, 1990 The Regents of the University of California.
.\" All rights reserved.
d35 1
a35 1
.\"	from: @@(#)hexdump.1	5.12 (Berkeley) 7/27/91
d37 1
a37 1
.Dd July 27, 1991
d45 2
a46 1
.Op Fl bcdovx
d48 2
d51 2
d54 1
d56 1
a56 1
.Op Fl s Ar offset
d58 1
a58 1
.Ar file Op Ar ...
d78 5
d183 1
a183 1
It is interpreted as an fprintf-style format string (see
d201 1
d203 1
d205 1
a205 1
.Sq p
d276 1
a276 1
Four byte default, one and two byte counts supported.
d338 1
a338 1
exits 0 on success or >0 if an error occurred.
a353 6
.Sh STANDARDS
The
.Nm
utility is expected to be
.St -p1003.2
compatible.
@


1.11
log
@Various cleanups and standardizations.
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.10 2000/03/07 21:11:10 aaron Exp $
d59 1
a59 1
.Bl -tag -width Fl
@


1.10
log
@Various cleanup.
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.9 1999/07/21 12:43:26 aaron Exp $
d300 1
a300 1
to display all available data (i.e. any format units overlapping the
@


1.9
log
@sync names of arguments in SYNOPSIS with those in the option's description
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.8 1999/07/04 11:53:55 aaron Exp $
d80 1
a80 1
.Pq Dq \&#
d130 2
a131 1
single asterisk.
d162 1
d168 2
a169 1
(" ") marks.
d180 3
a182 2
required for each ``s'' conversion
character (unlike the
d186 6
a191 2
The conversion characters ``h'', ``n'', and ``p'' are not
supported.
d235 2
a236 2
Nonprinting characters are displayed as a single
.Dq Cm \&. .
d274 3
a276 1
The input is manipulated in ``blocks'', where a block is defined as the
d311 3
a313 3
.Dq Li \&+ ,
.Dq \&\ \& ,
.Dq Li \&#
d337 2
@


1.8
log
@correct use of .Nm; some other formatting nits
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.7 1999/06/05 01:21:26 aaron Exp $
d48 1
a48 1
.Op Fl s Ar skip
@


1.7
log
@- remove trailing white space
- remove arguments from .Os macros
- remove arguments from .Nm macros, where appropriate
- some more Dq/Sq/Ql insanity
- still lots to do in the usr.bin tree... :/
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.6 1998/11/04 22:36:40 aaron Exp $
d53 1
a53 1
.Nm hexdump
d139 1
a139 1
.Nm hexdump
d201 1
a201 1
.Nm hexdump
d312 1
a312 1
.Nm hexdump
d329 1
a329 1
.Nm hexdump
@


1.6
log
@be really pedantic about punctuation following -mdoc macro'd text
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.5 1998/09/26 19:54:51 aaron Exp $
d75 1
a75 1
.It Fl e Ar format_string 
d77 1
a77 1
.It Fl f Ar format_file 
d82 1
a82 1
.It Fl n Ar length 
d91 1
a91 1
.It Fl s Ar offset 
d204 1
a204 1
.It Cm \&_a Ns Op Cm dox 
d214 1
a214 1
.It Cm \&_A Ns Op Cm dox 
d251 1
a251 1
.Li \&%u , \&%X , \&%x 
d256 1
a256 1
.Li \&%G , \&%g 
@


1.5
log
@usr.bin/ man page fixes, f-m.
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.4 1997/09/02 15:31:51 kstailey Exp $
d87 1
a87 1
.Em Two-byte octal display.
d132 1
a132 1
.Em Two-byte hexadecimal display.
@


1.4
log
@delete adb(1) Xref
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.3 1996/12/10 09:06:30 deraadt Exp $
d50 1
a50 1
.Ar file  ...
d52 4
a55 2
The hexdump utility is a filter which displays the specified files, or
the standard input, if no files are specified, in a user specified
d71 1
a71 1
.Em Two-byte decimal display.
d80 1
a80 1
.Pf ( Cm \&# )
d167 1
a167 1
It is interpreted as a fprintf-style format string (see
d201 2
a202 1
Hexdump also supports the following additional conversion strings:
d313 1
a313 1
exits 0 on success and >0 if an error occurred.
@


1.3
log
@"the the" purge
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.2 1996/06/26 05:34:18 deraadt Exp $
a323 2
.Sh SEE ALSO
.Xr adb 1
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD: hexdump.1,v 1.1.1.1 1995/10/18 08:45:23 deraadt Exp $
d199 1
a199 1
Hexdump also supports the the following additional conversion strings:
d267 1
a267 1
not have a specified iteration count, have the the iteration count
@


1.1
log
@Initial revision
@
text
@d1 1
a33 1
.\"	$Id: hexdump.1,v 1.3 1994/01/11 02:27:37 jtc Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
